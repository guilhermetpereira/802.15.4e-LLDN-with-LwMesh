   1               		.file	"colamd.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               	.global	colamd_recommended
  13               	colamd_recommended:
  14               	.LFB5:
  15               		.file 1 "lp_solve_5.5/colamd/colamd.c"
   1:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
   2:lp_solve_5.5/colamd/colamd.c **** /* === colamd/symamd - a sparse matrix column ordering algorithm ============ */
   3:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
   4:lp_solve_5.5/colamd/colamd.c **** 
   5:lp_solve_5.5/colamd/colamd.c **** /*
   6:lp_solve_5.5/colamd/colamd.c ****     colamd:  an approximate minimum degree column ordering algorithm,
   7:lp_solve_5.5/colamd/colamd.c ****     	for LU factorization of symmetric or unsymmetric matrices,
   8:lp_solve_5.5/colamd/colamd.c **** 	QR factorization, least squares, interior point methods for
   9:lp_solve_5.5/colamd/colamd.c **** 	linear programming problems, and other related problems.
  10:lp_solve_5.5/colamd/colamd.c **** 
  11:lp_solve_5.5/colamd/colamd.c ****     symamd:  an approximate minimum degree ordering algorithm for Cholesky
  12:lp_solve_5.5/colamd/colamd.c ****     	factorization of symmetric matrices.
  13:lp_solve_5.5/colamd/colamd.c **** 
  14:lp_solve_5.5/colamd/colamd.c ****     Purpose:
  15:lp_solve_5.5/colamd/colamd.c **** 
  16:lp_solve_5.5/colamd/colamd.c **** 	Colamd computes a permutation Q such that the Cholesky factorization of
  17:lp_solve_5.5/colamd/colamd.c **** 	(AQ)'(AQ) has less fill-in and requires fewer floating point operations
  18:lp_solve_5.5/colamd/colamd.c **** 	than A'A.  This also provides a good ordering for sparse partial
  19:lp_solve_5.5/colamd/colamd.c **** 	pivoting methods, P(AQ) = LU, where Q is computed prior to numerical
  20:lp_solve_5.5/colamd/colamd.c **** 	factorization, and P is computed during numerical factorization via
  21:lp_solve_5.5/colamd/colamd.c **** 	conventional partial pivoting with row interchanges.  Colamd is the
  22:lp_solve_5.5/colamd/colamd.c **** 	column ordering method used in SuperLU, part of the ScaLAPACK library.
  23:lp_solve_5.5/colamd/colamd.c **** 	It is also available as built-in function in Matlab Version 6,
  24:lp_solve_5.5/colamd/colamd.c **** 	available from MathWorks, Inc. (http://www.mathworks.com).  This
  25:lp_solve_5.5/colamd/colamd.c **** 	routine can be used in place of colmmd in Matlab.  By default, the \
  26:lp_solve_5.5/colamd/colamd.c **** 	and / operators in Matlab perform a column ordering (using colmmd
  27:lp_solve_5.5/colamd/colamd.c **** 	or colamd) prior to LU factorization using sparse partial pivoting,
  28:lp_solve_5.5/colamd/colamd.c **** 	in the built-in Matlab lu(A) routine.
  29:lp_solve_5.5/colamd/colamd.c **** 
  30:lp_solve_5.5/colamd/colamd.c ****     	Symamd computes a permutation P of a symmetric matrix A such that the
  31:lp_solve_5.5/colamd/colamd.c **** 	Cholesky factorization of PAP' has less fill-in and requires fewer
  32:lp_solve_5.5/colamd/colamd.c **** 	floating point operations than A.  Symamd constructs a matrix M such
  33:lp_solve_5.5/colamd/colamd.c **** 	that M'M has the same nonzero pattern of A, and then orders the columns
  34:lp_solve_5.5/colamd/colamd.c **** 	of M using colmmd.  The column ordering of M is then returned as the
  35:lp_solve_5.5/colamd/colamd.c **** 	row and column ordering P of A. 
  36:lp_solve_5.5/colamd/colamd.c **** 
  37:lp_solve_5.5/colamd/colamd.c ****     Authors:
  38:lp_solve_5.5/colamd/colamd.c **** 
  39:lp_solve_5.5/colamd/colamd.c **** 	The authors of the code itself are Stefan I. Larimore and Timothy A.
  40:lp_solve_5.5/colamd/colamd.c **** 	Davis (davis@cise.ufl.edu), University of Florida.  The algorithm was
  41:lp_solve_5.5/colamd/colamd.c **** 	developed in collaboration with John Gilbert, Xerox PARC, and Esmond
  42:lp_solve_5.5/colamd/colamd.c **** 	Ng, Oak Ridge National Laboratory.
  43:lp_solve_5.5/colamd/colamd.c **** 
  44:lp_solve_5.5/colamd/colamd.c ****     Date:
  45:lp_solve_5.5/colamd/colamd.c **** 
  46:lp_solve_5.5/colamd/colamd.c **** 	May 4, 2001.  Version 2.1.
  47:lp_solve_5.5/colamd/colamd.c **** 
  48:lp_solve_5.5/colamd/colamd.c ****     Acknowledgements:
  49:lp_solve_5.5/colamd/colamd.c **** 
  50:lp_solve_5.5/colamd/colamd.c **** 	This work was supported by the National Science Foundation, under
  51:lp_solve_5.5/colamd/colamd.c **** 	grants DMS-9504974 and DMS-9803599.
  52:lp_solve_5.5/colamd/colamd.c **** 
  53:lp_solve_5.5/colamd/colamd.c ****     Notice:
  54:lp_solve_5.5/colamd/colamd.c **** 
  55:lp_solve_5.5/colamd/colamd.c **** 	Copyright (c) 1998-2001 by the University of Florida.
  56:lp_solve_5.5/colamd/colamd.c **** 	All Rights Reserved.
  57:lp_solve_5.5/colamd/colamd.c **** 
  58:lp_solve_5.5/colamd/colamd.c **** 	THIS MATERIAL IS PROVIDED AS IS, WITH ABSOLUTELY NO WARRANTY
  59:lp_solve_5.5/colamd/colamd.c **** 	EXPRESSED OR IMPLIED.  ANY USE IS AT YOUR OWN RISK.
  60:lp_solve_5.5/colamd/colamd.c **** 
  61:lp_solve_5.5/colamd/colamd.c **** 	Permission is hereby granted to use or copy this program for any
  62:lp_solve_5.5/colamd/colamd.c **** 	purpose, provided the above notices are retained on all copies.
  63:lp_solve_5.5/colamd/colamd.c **** 	User documentation of any code that uses this code must cite the
  64:lp_solve_5.5/colamd/colamd.c **** 	Authors, the Copyright, and "Used by permission."  If this code is
  65:lp_solve_5.5/colamd/colamd.c **** 	accessible from within Matlab, then typing "help colamd" and "help
  66:lp_solve_5.5/colamd/colamd.c **** 	symamd" must cite the Authors.  Permission to modify the code and to
  67:lp_solve_5.5/colamd/colamd.c **** 	distribute modified code is granted, provided the above notices are
  68:lp_solve_5.5/colamd/colamd.c **** 	retained, and a notice that the code was modified is included with the
  69:lp_solve_5.5/colamd/colamd.c **** 	above copyright notice.  You must also retain the Availability
  70:lp_solve_5.5/colamd/colamd.c **** 	information below, of the original version.
  71:lp_solve_5.5/colamd/colamd.c **** 
  72:lp_solve_5.5/colamd/colamd.c **** 	This software is provided free of charge.
  73:lp_solve_5.5/colamd/colamd.c **** 
  74:lp_solve_5.5/colamd/colamd.c ****     Availability:
  75:lp_solve_5.5/colamd/colamd.c **** 
  76:lp_solve_5.5/colamd/colamd.c **** 	The colamd/symamd library is available at
  77:lp_solve_5.5/colamd/colamd.c **** 
  78:lp_solve_5.5/colamd/colamd.c **** 	    http://www.cise.ufl.edu/research/sparse/colamd/
  79:lp_solve_5.5/colamd/colamd.c **** 
  80:lp_solve_5.5/colamd/colamd.c **** 	This is the http://www.cise.ufl.edu/research/sparse/colamd/colamd.c
  81:lp_solve_5.5/colamd/colamd.c **** 	file.  It requires the colamd.h file.  It is required by the colamdmex.c
  82:lp_solve_5.5/colamd/colamd.c **** 	and symamdmex.c files, for the Matlab interface to colamd and symamd.
  83:lp_solve_5.5/colamd/colamd.c **** 
  84:lp_solve_5.5/colamd/colamd.c ****     Changes to the colamd library since Version 1.0 and 1.1:
  85:lp_solve_5.5/colamd/colamd.c **** 
  86:lp_solve_5.5/colamd/colamd.c **** 	No bugs were found in version 1.1.  These changes merely add new
  87:lp_solve_5.5/colamd/colamd.c **** 	functionality.
  88:lp_solve_5.5/colamd/colamd.c **** 
  89:lp_solve_5.5/colamd/colamd.c ****     	* added the COLAMD_RECOMMENDED (nnz, n_row, n_col) macro.
  90:lp_solve_5.5/colamd/colamd.c **** 
  91:lp_solve_5.5/colamd/colamd.c **** 	* moved the output statistics, from A, to a separate output argument.
  92:lp_solve_5.5/colamd/colamd.c **** 		The arguments changed for the C-callable routines.
  93:lp_solve_5.5/colamd/colamd.c **** 
  94:lp_solve_5.5/colamd/colamd.c **** 	* added colamd_report and symamd_report.
  95:lp_solve_5.5/colamd/colamd.c **** 
  96:lp_solve_5.5/colamd/colamd.c **** 	* added a C-callable symamd routine.  Formerly, symamd was only
  97:lp_solve_5.5/colamd/colamd.c **** 		available as a mexFunction from Matlab.
  98:lp_solve_5.5/colamd/colamd.c **** 
  99:lp_solve_5.5/colamd/colamd.c **** 	* added error-checking to symamd.  Formerly, it assumed its input
 100:lp_solve_5.5/colamd/colamd.c **** 		was error-free.
 101:lp_solve_5.5/colamd/colamd.c **** 
 102:lp_solve_5.5/colamd/colamd.c **** 	* added the optional stats and knobs arguments to the symamd mexFunction
 103:lp_solve_5.5/colamd/colamd.c **** 
 104:lp_solve_5.5/colamd/colamd.c **** 	* deleted colamd_help.  A help message is still available from
 105:lp_solve_5.5/colamd/colamd.c **** 		"help colamd" and "help symamd" in Matlab.
 106:lp_solve_5.5/colamd/colamd.c **** 
 107:lp_solve_5.5/colamd/colamd.c **** 	* deleted colamdtree.m and symamdtree.m.  Now, colamd.m and symamd.m
 108:lp_solve_5.5/colamd/colamd.c **** 		also do the elimination tree post-ordering.  The Version 1.1
 109:lp_solve_5.5/colamd/colamd.c **** 		colamd and symamd mexFunctions, which do not do the post-
 110:lp_solve_5.5/colamd/colamd.c **** 		ordering, are now visible as colamdmex and symamdmex from
 111:lp_solve_5.5/colamd/colamd.c **** 		Matlab.  Essentialy, the post-ordering is now the default
 112:lp_solve_5.5/colamd/colamd.c **** 		behavior of colamd.m and symamd.m, to match the behavior of
 113:lp_solve_5.5/colamd/colamd.c **** 		colmmd and symmmd.  The post-ordering is only available in the
 114:lp_solve_5.5/colamd/colamd.c **** 		Matlab interface, not the C-callable interface.
 115:lp_solve_5.5/colamd/colamd.c **** 
 116:lp_solve_5.5/colamd/colamd.c **** 	* made a slight change to the dense row/column detection in symamd,
 117:lp_solve_5.5/colamd/colamd.c **** 		to match the stated specifications.
 118:lp_solve_5.5/colamd/colamd.c **** 
 119:lp_solve_5.5/colamd/colamd.c ****     Changes from Version 2.0 to 2.1:
 120:lp_solve_5.5/colamd/colamd.c **** 
 121:lp_solve_5.5/colamd/colamd.c **** 	* TRUE and FALSE are predefined on some systems, so they are defined
 122:lp_solve_5.5/colamd/colamd.c **** 		here only if not already defined.
 123:lp_solve_5.5/colamd/colamd.c **** 	
 124:lp_solve_5.5/colamd/colamd.c **** 	* web site changed
 125:lp_solve_5.5/colamd/colamd.c **** 
 126:lp_solve_5.5/colamd/colamd.c **** 	* UNIX Makefile modified, to handle the case if "." is not in your path.
 127:lp_solve_5.5/colamd/colamd.c **** 
 128:lp_solve_5.5/colamd/colamd.c **** */
 129:lp_solve_5.5/colamd/colamd.c **** 
 130:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 131:lp_solve_5.5/colamd/colamd.c **** /* === Description of user-callable routines ================================ */
 132:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 133:lp_solve_5.5/colamd/colamd.c **** 
 134:lp_solve_5.5/colamd/colamd.c **** /*
 135:lp_solve_5.5/colamd/colamd.c ****     ----------------------------------------------------------------------------
 136:lp_solve_5.5/colamd/colamd.c ****     colamd_recommended:
 137:lp_solve_5.5/colamd/colamd.c ****     ----------------------------------------------------------------------------
 138:lp_solve_5.5/colamd/colamd.c **** 
 139:lp_solve_5.5/colamd/colamd.c **** 	C syntax:
 140:lp_solve_5.5/colamd/colamd.c **** 
 141:lp_solve_5.5/colamd/colamd.c **** 	    #include "colamd.h"
 142:lp_solve_5.5/colamd/colamd.c **** 	    int colamd_recommended (int nnz, int n_row, int n_col) ;
 143:lp_solve_5.5/colamd/colamd.c **** 
 144:lp_solve_5.5/colamd/colamd.c **** 	    or as a C macro
 145:lp_solve_5.5/colamd/colamd.c **** 
 146:lp_solve_5.5/colamd/colamd.c **** 	    #include "colamd.h"
 147:lp_solve_5.5/colamd/colamd.c **** 	    Alen = COLAMD_RECOMMENDED (int nnz, int n_row, int n_col) ;
 148:lp_solve_5.5/colamd/colamd.c **** 
 149:lp_solve_5.5/colamd/colamd.c **** 	Purpose:
 150:lp_solve_5.5/colamd/colamd.c **** 
 151:lp_solve_5.5/colamd/colamd.c **** 	    Returns recommended value of Alen for use by colamd.  Returns -1
 152:lp_solve_5.5/colamd/colamd.c **** 	    if any input argument is negative.  The use of this routine
 153:lp_solve_5.5/colamd/colamd.c **** 	    or macro is optional.  Note that the macro uses its arguments
 154:lp_solve_5.5/colamd/colamd.c **** 	    more than once, so be careful for side effects, if you pass
 155:lp_solve_5.5/colamd/colamd.c **** 	    expressions as arguments to COLAMD_RECOMMENDED.  Not needed for
 156:lp_solve_5.5/colamd/colamd.c **** 	    symamd, which dynamically allocates its own memory.
 157:lp_solve_5.5/colamd/colamd.c **** 
 158:lp_solve_5.5/colamd/colamd.c **** 	Arguments (all input arguments):
 159:lp_solve_5.5/colamd/colamd.c **** 
 160:lp_solve_5.5/colamd/colamd.c **** 	    int nnz ;		Number of nonzeros in the matrix A.  This must
 161:lp_solve_5.5/colamd/colamd.c **** 				be the same value as p [n_col] in the call to
 162:lp_solve_5.5/colamd/colamd.c **** 				colamd - otherwise you will get a wrong value
 163:lp_solve_5.5/colamd/colamd.c **** 				of the recommended memory to use.
 164:lp_solve_5.5/colamd/colamd.c **** 
 165:lp_solve_5.5/colamd/colamd.c **** 	    int n_row ;		Number of rows in the matrix A.
 166:lp_solve_5.5/colamd/colamd.c **** 
 167:lp_solve_5.5/colamd/colamd.c **** 	    int n_col ;		Number of columns in the matrix A.
 168:lp_solve_5.5/colamd/colamd.c **** 
 169:lp_solve_5.5/colamd/colamd.c ****     ----------------------------------------------------------------------------
 170:lp_solve_5.5/colamd/colamd.c ****     colamd_set_defaults:
 171:lp_solve_5.5/colamd/colamd.c ****     ----------------------------------------------------------------------------
 172:lp_solve_5.5/colamd/colamd.c **** 
 173:lp_solve_5.5/colamd/colamd.c **** 	C syntax:
 174:lp_solve_5.5/colamd/colamd.c **** 
 175:lp_solve_5.5/colamd/colamd.c **** 	    #include "colamd.h"
 176:lp_solve_5.5/colamd/colamd.c **** 	    colamd_set_defaults (int knobs [COLAMD_KNOBS]) ;
 177:lp_solve_5.5/colamd/colamd.c **** 
 178:lp_solve_5.5/colamd/colamd.c **** 	Purpose:
 179:lp_solve_5.5/colamd/colamd.c **** 
 180:lp_solve_5.5/colamd/colamd.c **** 	    Sets the default parameters.  The use of this routine is optional.
 181:lp_solve_5.5/colamd/colamd.c **** 
 182:lp_solve_5.5/colamd/colamd.c **** 	Arguments:
 183:lp_solve_5.5/colamd/colamd.c **** 
 184:lp_solve_5.5/colamd/colamd.c **** 	    double knobs [COLAMD_KNOBS] ;	Output only.
 185:lp_solve_5.5/colamd/colamd.c **** 
 186:lp_solve_5.5/colamd/colamd.c **** 		Colamd: rows with more than (knobs [COLAMD_DENSE_ROW] * n_col)
 187:lp_solve_5.5/colamd/colamd.c **** 		entries are removed prior to ordering.  Columns with more than
 188:lp_solve_5.5/colamd/colamd.c **** 		(knobs [COLAMD_DENSE_COL] * n_row) entries are removed prior to
 189:lp_solve_5.5/colamd/colamd.c **** 		ordering, and placed last in the output column ordering. 
 190:lp_solve_5.5/colamd/colamd.c **** 
 191:lp_solve_5.5/colamd/colamd.c **** 		Symamd: uses only knobs [COLAMD_DENSE_ROW], which is knobs [0].
 192:lp_solve_5.5/colamd/colamd.c **** 		Rows and columns with more than (knobs [COLAMD_DENSE_ROW] * n)
 193:lp_solve_5.5/colamd/colamd.c **** 		entries are removed prior to ordering, and placed last in the
 194:lp_solve_5.5/colamd/colamd.c **** 		output ordering.
 195:lp_solve_5.5/colamd/colamd.c **** 
 196:lp_solve_5.5/colamd/colamd.c **** 		COLAMD_DENSE_ROW and COLAMD_DENSE_COL are defined as 0 and 1,
 197:lp_solve_5.5/colamd/colamd.c **** 		respectively, in colamd.h.  Default values of these two knobs
 198:lp_solve_5.5/colamd/colamd.c **** 		are both 0.5.  Currently, only knobs [0] and knobs [1] are
 199:lp_solve_5.5/colamd/colamd.c **** 		used, but future versions may use more knobs.  If so, they will
 200:lp_solve_5.5/colamd/colamd.c **** 		be properly set to their defaults by the future version of
 201:lp_solve_5.5/colamd/colamd.c **** 		colamd_set_defaults, so that the code that calls colamd will
 202:lp_solve_5.5/colamd/colamd.c **** 		not need to change, assuming that you either use
 203:lp_solve_5.5/colamd/colamd.c **** 		colamd_set_defaults, or pass a (double *) NULL pointer as the
 204:lp_solve_5.5/colamd/colamd.c **** 		knobs array to colamd or symamd.
 205:lp_solve_5.5/colamd/colamd.c **** 
 206:lp_solve_5.5/colamd/colamd.c ****     ----------------------------------------------------------------------------
 207:lp_solve_5.5/colamd/colamd.c ****     colamd:
 208:lp_solve_5.5/colamd/colamd.c ****     ----------------------------------------------------------------------------
 209:lp_solve_5.5/colamd/colamd.c **** 
 210:lp_solve_5.5/colamd/colamd.c **** 	C syntax:
 211:lp_solve_5.5/colamd/colamd.c **** 
 212:lp_solve_5.5/colamd/colamd.c **** 	    #include "colamd.h"
 213:lp_solve_5.5/colamd/colamd.c **** 	    int colamd (int n_row, int n_col, int Alen, int *A, int *p,
 214:lp_solve_5.5/colamd/colamd.c **** 	    	double knobs [COLAMD_KNOBS], int stats [COLAMD_STATS]) ;
 215:lp_solve_5.5/colamd/colamd.c **** 
 216:lp_solve_5.5/colamd/colamd.c **** 	Purpose:
 217:lp_solve_5.5/colamd/colamd.c **** 
 218:lp_solve_5.5/colamd/colamd.c **** 	    Computes a column ordering (Q) of A such that P(AQ)=LU or
 219:lp_solve_5.5/colamd/colamd.c **** 	    (AQ)'AQ=LL' have less fill-in and require fewer floating point
 220:lp_solve_5.5/colamd/colamd.c **** 	    operations than factorizing the unpermuted matrix A or A'A,
 221:lp_solve_5.5/colamd/colamd.c **** 	    respectively.
 222:lp_solve_5.5/colamd/colamd.c **** 	    
 223:lp_solve_5.5/colamd/colamd.c **** 	Returns:
 224:lp_solve_5.5/colamd/colamd.c **** 
 225:lp_solve_5.5/colamd/colamd.c **** 	    TRUE (1) if successful, FALSE (0) otherwise.
 226:lp_solve_5.5/colamd/colamd.c **** 
 227:lp_solve_5.5/colamd/colamd.c **** 	Arguments:
 228:lp_solve_5.5/colamd/colamd.c **** 
 229:lp_solve_5.5/colamd/colamd.c **** 	    int n_row ;		Input argument.
 230:lp_solve_5.5/colamd/colamd.c **** 
 231:lp_solve_5.5/colamd/colamd.c **** 		Number of rows in the matrix A.
 232:lp_solve_5.5/colamd/colamd.c **** 		Restriction:  n_row >= 0.
 233:lp_solve_5.5/colamd/colamd.c **** 		Colamd returns FALSE if n_row is negative.
 234:lp_solve_5.5/colamd/colamd.c **** 
 235:lp_solve_5.5/colamd/colamd.c **** 	    int n_col ;		Input argument.
 236:lp_solve_5.5/colamd/colamd.c **** 
 237:lp_solve_5.5/colamd/colamd.c **** 		Number of columns in the matrix A.
 238:lp_solve_5.5/colamd/colamd.c **** 		Restriction:  n_col >= 0.
 239:lp_solve_5.5/colamd/colamd.c **** 		Colamd returns FALSE if n_col is negative.
 240:lp_solve_5.5/colamd/colamd.c **** 
 241:lp_solve_5.5/colamd/colamd.c **** 	    int Alen ;		Input argument.
 242:lp_solve_5.5/colamd/colamd.c **** 
 243:lp_solve_5.5/colamd/colamd.c **** 		Restriction (see note):
 244:lp_solve_5.5/colamd/colamd.c **** 		Alen >= 2*nnz + 6*(n_col+1) + 4*(n_row+1) + n_col
 245:lp_solve_5.5/colamd/colamd.c **** 		Colamd returns FALSE if these conditions are not met.
 246:lp_solve_5.5/colamd/colamd.c **** 
 247:lp_solve_5.5/colamd/colamd.c **** 		Note:  this restriction makes an modest assumption regarding
 248:lp_solve_5.5/colamd/colamd.c **** 		the size of the two typedef's structures in colamd.h.
 249:lp_solve_5.5/colamd/colamd.c **** 		We do, however, guarantee that
 250:lp_solve_5.5/colamd/colamd.c **** 
 251:lp_solve_5.5/colamd/colamd.c **** 			Alen >= colamd_recommended (nnz, n_row, n_col)
 252:lp_solve_5.5/colamd/colamd.c **** 		
 253:lp_solve_5.5/colamd/colamd.c **** 		or equivalently as a C preprocessor macro: 
 254:lp_solve_5.5/colamd/colamd.c **** 
 255:lp_solve_5.5/colamd/colamd.c **** 			Alen >= COLAMD_RECOMMENDED (nnz, n_row, n_col)
 256:lp_solve_5.5/colamd/colamd.c **** 
 257:lp_solve_5.5/colamd/colamd.c **** 		will be sufficient.
 258:lp_solve_5.5/colamd/colamd.c **** 
 259:lp_solve_5.5/colamd/colamd.c **** 	    int A [Alen] ;	Input argument, undefined on output.
 260:lp_solve_5.5/colamd/colamd.c **** 
 261:lp_solve_5.5/colamd/colamd.c **** 		A is an integer array of size Alen.  Alen must be at least as
 262:lp_solve_5.5/colamd/colamd.c **** 		large as the bare minimum value given above, but this is very
 263:lp_solve_5.5/colamd/colamd.c **** 		low, and can result in excessive run time.  For best
 264:lp_solve_5.5/colamd/colamd.c **** 		performance, we recommend that Alen be greater than or equal to
 265:lp_solve_5.5/colamd/colamd.c **** 		colamd_recommended (nnz, n_row, n_col), which adds
 266:lp_solve_5.5/colamd/colamd.c **** 		nnz/5 to the bare minimum value given above.
 267:lp_solve_5.5/colamd/colamd.c **** 
 268:lp_solve_5.5/colamd/colamd.c **** 		On input, the row indices of the entries in column c of the
 269:lp_solve_5.5/colamd/colamd.c **** 		matrix are held in A [(p [c]) ... (p [c+1]-1)].  The row indices
 270:lp_solve_5.5/colamd/colamd.c **** 		in a given column c need not be in ascending order, and
 271:lp_solve_5.5/colamd/colamd.c **** 		duplicate row indices may be be present.  However, colamd will
 272:lp_solve_5.5/colamd/colamd.c **** 		work a little faster if both of these conditions are met
 273:lp_solve_5.5/colamd/colamd.c **** 		(Colamd puts the matrix into this format, if it finds that the
 274:lp_solve_5.5/colamd/colamd.c **** 		the conditions are not met).
 275:lp_solve_5.5/colamd/colamd.c **** 
 276:lp_solve_5.5/colamd/colamd.c **** 		The matrix is 0-based.  That is, rows are in the range 0 to
 277:lp_solve_5.5/colamd/colamd.c **** 		n_row-1, and columns are in the range 0 to n_col-1.  Colamd
 278:lp_solve_5.5/colamd/colamd.c **** 		returns FALSE if any row index is out of range.
 279:lp_solve_5.5/colamd/colamd.c **** 
 280:lp_solve_5.5/colamd/colamd.c **** 		The contents of A are modified during ordering, and are
 281:lp_solve_5.5/colamd/colamd.c **** 		undefined on output.
 282:lp_solve_5.5/colamd/colamd.c **** 
 283:lp_solve_5.5/colamd/colamd.c **** 	    int p [n_col+1] ;	Both input and output argument.
 284:lp_solve_5.5/colamd/colamd.c **** 
 285:lp_solve_5.5/colamd/colamd.c **** 		p is an integer array of size n_col+1.  On input, it holds the
 286:lp_solve_5.5/colamd/colamd.c **** 		"pointers" for the column form of the matrix A.  Column c of
 287:lp_solve_5.5/colamd/colamd.c **** 		the matrix A is held in A [(p [c]) ... (p [c+1]-1)].  The first
 288:lp_solve_5.5/colamd/colamd.c **** 		entry, p [0], must be zero, and p [c] <= p [c+1] must hold
 289:lp_solve_5.5/colamd/colamd.c **** 		for all c in the range 0 to n_col-1.  The value p [n_col] is
 290:lp_solve_5.5/colamd/colamd.c **** 		thus the total number of entries in the pattern of the matrix A.
 291:lp_solve_5.5/colamd/colamd.c **** 		Colamd returns FALSE if these conditions are not met.
 292:lp_solve_5.5/colamd/colamd.c **** 
 293:lp_solve_5.5/colamd/colamd.c **** 		On output, if colamd returns TRUE, the array p holds the column
 294:lp_solve_5.5/colamd/colamd.c **** 		permutation (Q, for P(AQ)=LU or (AQ)'(AQ)=LL'), where p [0] is
 295:lp_solve_5.5/colamd/colamd.c **** 		the first column index in the new ordering, and p [n_col-1] is
 296:lp_solve_5.5/colamd/colamd.c **** 		the last.  That is, p [k] = j means that column j of A is the
 297:lp_solve_5.5/colamd/colamd.c **** 		kth pivot column, in AQ, where k is in the range 0 to n_col-1
 298:lp_solve_5.5/colamd/colamd.c **** 		(p [0] = j means that column j of A is the first column in AQ).
 299:lp_solve_5.5/colamd/colamd.c **** 
 300:lp_solve_5.5/colamd/colamd.c **** 		If colamd returns FALSE, then no permutation is returned, and
 301:lp_solve_5.5/colamd/colamd.c **** 		p is undefined on output.
 302:lp_solve_5.5/colamd/colamd.c **** 
 303:lp_solve_5.5/colamd/colamd.c **** 	    double knobs [COLAMD_KNOBS] ;	Input argument.
 304:lp_solve_5.5/colamd/colamd.c **** 
 305:lp_solve_5.5/colamd/colamd.c **** 		See colamd_set_defaults for a description.
 306:lp_solve_5.5/colamd/colamd.c **** 
 307:lp_solve_5.5/colamd/colamd.c **** 	    int stats [COLAMD_STATS] ;		Output argument.
 308:lp_solve_5.5/colamd/colamd.c **** 
 309:lp_solve_5.5/colamd/colamd.c **** 		Statistics on the ordering, and error status.
 310:lp_solve_5.5/colamd/colamd.c **** 		See colamd.h for related definitions.
 311:lp_solve_5.5/colamd/colamd.c **** 		Colamd returns FALSE if stats is not present.
 312:lp_solve_5.5/colamd/colamd.c **** 
 313:lp_solve_5.5/colamd/colamd.c **** 		stats [0]:  number of dense or empty rows ignored.
 314:lp_solve_5.5/colamd/colamd.c **** 
 315:lp_solve_5.5/colamd/colamd.c **** 		stats [1]:  number of dense or empty columns ignored (and
 316:lp_solve_5.5/colamd/colamd.c **** 				ordered last in the output permutation p)
 317:lp_solve_5.5/colamd/colamd.c **** 				Note that a row can become "empty" if it
 318:lp_solve_5.5/colamd/colamd.c **** 				contains only "dense" and/or "empty" columns,
 319:lp_solve_5.5/colamd/colamd.c **** 				and similarly a column can become "empty" if it
 320:lp_solve_5.5/colamd/colamd.c **** 				only contains "dense" and/or "empty" rows.
 321:lp_solve_5.5/colamd/colamd.c **** 
 322:lp_solve_5.5/colamd/colamd.c **** 		stats [2]:  number of garbage collections performed.
 323:lp_solve_5.5/colamd/colamd.c **** 				This can be excessively high if Alen is close
 324:lp_solve_5.5/colamd/colamd.c **** 				to the minimum required value.
 325:lp_solve_5.5/colamd/colamd.c **** 
 326:lp_solve_5.5/colamd/colamd.c **** 		stats [3]:  status code.  < 0 is an error code.
 327:lp_solve_5.5/colamd/colamd.c **** 			    > 1 is a warning or notice.
 328:lp_solve_5.5/colamd/colamd.c **** 
 329:lp_solve_5.5/colamd/colamd.c **** 			0	OK.  Each column of the input matrix contained
 330:lp_solve_5.5/colamd/colamd.c **** 				row indices in increasing order, with no
 331:lp_solve_5.5/colamd/colamd.c **** 				duplicates.
 332:lp_solve_5.5/colamd/colamd.c **** 
 333:lp_solve_5.5/colamd/colamd.c **** 			1	OK, but columns of input matrix were jumbled
 334:lp_solve_5.5/colamd/colamd.c **** 				(unsorted columns or duplicate entries).  Colamd
 335:lp_solve_5.5/colamd/colamd.c **** 				had to do some extra work to sort the matrix
 336:lp_solve_5.5/colamd/colamd.c **** 				first and remove duplicate entries, but it
 337:lp_solve_5.5/colamd/colamd.c **** 				still was able to return a valid permutation
 338:lp_solve_5.5/colamd/colamd.c **** 				(return value of colamd was TRUE).
 339:lp_solve_5.5/colamd/colamd.c **** 
 340:lp_solve_5.5/colamd/colamd.c **** 					stats [4]: highest numbered column that
 341:lp_solve_5.5/colamd/colamd.c **** 						is unsorted or has duplicate
 342:lp_solve_5.5/colamd/colamd.c **** 						entries.
 343:lp_solve_5.5/colamd/colamd.c **** 					stats [5]: last seen duplicate or
 344:lp_solve_5.5/colamd/colamd.c **** 						unsorted row index.
 345:lp_solve_5.5/colamd/colamd.c **** 					stats [6]: number of duplicate or
 346:lp_solve_5.5/colamd/colamd.c **** 						unsorted row indices.
 347:lp_solve_5.5/colamd/colamd.c **** 
 348:lp_solve_5.5/colamd/colamd.c **** 			-1	A is a null pointer
 349:lp_solve_5.5/colamd/colamd.c **** 
 350:lp_solve_5.5/colamd/colamd.c **** 			-2	p is a null pointer
 351:lp_solve_5.5/colamd/colamd.c **** 
 352:lp_solve_5.5/colamd/colamd.c **** 			-3 	n_row is negative
 353:lp_solve_5.5/colamd/colamd.c **** 
 354:lp_solve_5.5/colamd/colamd.c **** 					stats [4]: n_row
 355:lp_solve_5.5/colamd/colamd.c **** 
 356:lp_solve_5.5/colamd/colamd.c **** 			-4	n_col is negative
 357:lp_solve_5.5/colamd/colamd.c **** 
 358:lp_solve_5.5/colamd/colamd.c **** 					stats [4]: n_col
 359:lp_solve_5.5/colamd/colamd.c **** 
 360:lp_solve_5.5/colamd/colamd.c **** 			-5	number of nonzeros in matrix is negative
 361:lp_solve_5.5/colamd/colamd.c **** 
 362:lp_solve_5.5/colamd/colamd.c **** 					stats [4]: number of nonzeros, p [n_col]
 363:lp_solve_5.5/colamd/colamd.c **** 
 364:lp_solve_5.5/colamd/colamd.c **** 			-6	p [0] is nonzero
 365:lp_solve_5.5/colamd/colamd.c **** 
 366:lp_solve_5.5/colamd/colamd.c **** 					stats [4]: p [0]
 367:lp_solve_5.5/colamd/colamd.c **** 
 368:lp_solve_5.5/colamd/colamd.c **** 			-7	A is too small
 369:lp_solve_5.5/colamd/colamd.c **** 
 370:lp_solve_5.5/colamd/colamd.c **** 					stats [4]: required size
 371:lp_solve_5.5/colamd/colamd.c **** 					stats [5]: actual size (Alen)
 372:lp_solve_5.5/colamd/colamd.c **** 
 373:lp_solve_5.5/colamd/colamd.c **** 			-8	a column has a negative number of entries
 374:lp_solve_5.5/colamd/colamd.c **** 
 375:lp_solve_5.5/colamd/colamd.c **** 					stats [4]: column with < 0 entries
 376:lp_solve_5.5/colamd/colamd.c **** 					stats [5]: number of entries in col
 377:lp_solve_5.5/colamd/colamd.c **** 
 378:lp_solve_5.5/colamd/colamd.c **** 			-9	a row index is out of bounds
 379:lp_solve_5.5/colamd/colamd.c **** 
 380:lp_solve_5.5/colamd/colamd.c **** 					stats [4]: column with bad row index
 381:lp_solve_5.5/colamd/colamd.c **** 					stats [5]: bad row index
 382:lp_solve_5.5/colamd/colamd.c **** 					stats [6]: n_row, # of rows of matrx
 383:lp_solve_5.5/colamd/colamd.c **** 
 384:lp_solve_5.5/colamd/colamd.c **** 			-10	(unused; see symamd.c)
 385:lp_solve_5.5/colamd/colamd.c **** 
 386:lp_solve_5.5/colamd/colamd.c **** 			-999	(unused; see symamd.c)
 387:lp_solve_5.5/colamd/colamd.c **** 
 388:lp_solve_5.5/colamd/colamd.c **** 		Future versions may return more statistics in the stats array.
 389:lp_solve_5.5/colamd/colamd.c **** 
 390:lp_solve_5.5/colamd/colamd.c **** 	Example:
 391:lp_solve_5.5/colamd/colamd.c **** 	
 392:lp_solve_5.5/colamd/colamd.c **** 	    See http://www.cise.ufl.edu/research/sparse/colamd/example.c
 393:lp_solve_5.5/colamd/colamd.c **** 	    for a complete example.
 394:lp_solve_5.5/colamd/colamd.c **** 
 395:lp_solve_5.5/colamd/colamd.c **** 	    To order the columns of a 5-by-4 matrix with 11 nonzero entries in
 396:lp_solve_5.5/colamd/colamd.c **** 	    the following nonzero pattern
 397:lp_solve_5.5/colamd/colamd.c **** 
 398:lp_solve_5.5/colamd/colamd.c **** 	    	x 0 x 0
 399:lp_solve_5.5/colamd/colamd.c **** 		x 0 x x
 400:lp_solve_5.5/colamd/colamd.c **** 		0 x x 0
 401:lp_solve_5.5/colamd/colamd.c **** 		0 0 x x
 402:lp_solve_5.5/colamd/colamd.c **** 		x x 0 0
 403:lp_solve_5.5/colamd/colamd.c **** 
 404:lp_solve_5.5/colamd/colamd.c **** 	    with default knobs and no output statistics, do the following:
 405:lp_solve_5.5/colamd/colamd.c **** 
 406:lp_solve_5.5/colamd/colamd.c **** 		#include "colamd.h"
 407:lp_solve_5.5/colamd/colamd.c **** 		#define ALEN COLAMD_RECOMMENDED (11, 5, 4)
 408:lp_solve_5.5/colamd/colamd.c **** 		int A [ALEN] = {1, 2, 5, 3, 5, 1, 2, 3, 4, 2, 4} ;
 409:lp_solve_5.5/colamd/colamd.c **** 		int p [ ] = {0, 3, 5, 9, 11} ;
 410:lp_solve_5.5/colamd/colamd.c **** 		int stats [COLAMD_STATS] ;
 411:lp_solve_5.5/colamd/colamd.c **** 		colamd (5, 4, ALEN, A, p, (double *) NULL, stats) ;
 412:lp_solve_5.5/colamd/colamd.c **** 
 413:lp_solve_5.5/colamd/colamd.c **** 	    The permutation is returned in the array p, and A is destroyed.
 414:lp_solve_5.5/colamd/colamd.c **** 
 415:lp_solve_5.5/colamd/colamd.c ****     ----------------------------------------------------------------------------
 416:lp_solve_5.5/colamd/colamd.c ****     symamd:
 417:lp_solve_5.5/colamd/colamd.c ****     ----------------------------------------------------------------------------
 418:lp_solve_5.5/colamd/colamd.c **** 
 419:lp_solve_5.5/colamd/colamd.c **** 	C syntax:
 420:lp_solve_5.5/colamd/colamd.c **** 
 421:lp_solve_5.5/colamd/colamd.c **** 	    #include "colamd.h"
 422:lp_solve_5.5/colamd/colamd.c **** 	    int symamd (int n, int *A, int *p, int *perm,
 423:lp_solve_5.5/colamd/colamd.c **** 	    	int knobs [COLAMD_KNOBS], int stats [COLAMD_STATS],
 424:lp_solve_5.5/colamd/colamd.c **** 		void (*allocate) (size_t, size_t), void (*release) (void *)) ;
 425:lp_solve_5.5/colamd/colamd.c **** 
 426:lp_solve_5.5/colamd/colamd.c **** 	Purpose:
 427:lp_solve_5.5/colamd/colamd.c **** 
 428:lp_solve_5.5/colamd/colamd.c ****     	    The symamd routine computes an ordering P of a symmetric sparse
 429:lp_solve_5.5/colamd/colamd.c **** 	    matrix A such that the Cholesky factorization PAP' = LL' remains
 430:lp_solve_5.5/colamd/colamd.c **** 	    sparse.  It is based on a column ordering of a matrix M constructed
 431:lp_solve_5.5/colamd/colamd.c **** 	    so that the nonzero pattern of M'M is the same as A.  The matrix A
 432:lp_solve_5.5/colamd/colamd.c **** 	    is assumed to be symmetric; only the strictly lower triangular part
 433:lp_solve_5.5/colamd/colamd.c **** 	    is accessed.  You must pass your selected memory allocator (usually
 434:lp_solve_5.5/colamd/colamd.c **** 	    calloc/free or mxCalloc/mxFree) to symamd, for it to allocate
 435:lp_solve_5.5/colamd/colamd.c **** 	    memory for the temporary matrix M.
 436:lp_solve_5.5/colamd/colamd.c **** 
 437:lp_solve_5.5/colamd/colamd.c **** 	Returns:
 438:lp_solve_5.5/colamd/colamd.c **** 
 439:lp_solve_5.5/colamd/colamd.c **** 	    TRUE (1) if successful, FALSE (0) otherwise.
 440:lp_solve_5.5/colamd/colamd.c **** 
 441:lp_solve_5.5/colamd/colamd.c **** 	Arguments:
 442:lp_solve_5.5/colamd/colamd.c **** 
 443:lp_solve_5.5/colamd/colamd.c **** 	    int n ;		Input argument.
 444:lp_solve_5.5/colamd/colamd.c **** 
 445:lp_solve_5.5/colamd/colamd.c **** 	    	Number of rows and columns in the symmetrix matrix A.
 446:lp_solve_5.5/colamd/colamd.c **** 		Restriction:  n >= 0.
 447:lp_solve_5.5/colamd/colamd.c **** 		Symamd returns FALSE if n is negative.
 448:lp_solve_5.5/colamd/colamd.c **** 
 449:lp_solve_5.5/colamd/colamd.c **** 	    int A [nnz] ;	Input argument.
 450:lp_solve_5.5/colamd/colamd.c **** 
 451:lp_solve_5.5/colamd/colamd.c **** 	    	A is an integer array of size nnz, where nnz = p [n].
 452:lp_solve_5.5/colamd/colamd.c **** 		
 453:lp_solve_5.5/colamd/colamd.c **** 		The row indices of the entries in column c of the matrix are
 454:lp_solve_5.5/colamd/colamd.c **** 		held in A [(p [c]) ... (p [c+1]-1)].  The row indices in a
 455:lp_solve_5.5/colamd/colamd.c **** 		given column c need not be in ascending order, and duplicate
 456:lp_solve_5.5/colamd/colamd.c **** 		row indices may be present.  However, symamd will run faster
 457:lp_solve_5.5/colamd/colamd.c **** 		if the columns are in sorted order with no duplicate entries. 
 458:lp_solve_5.5/colamd/colamd.c **** 
 459:lp_solve_5.5/colamd/colamd.c **** 		The matrix is 0-based.  That is, rows are in the range 0 to
 460:lp_solve_5.5/colamd/colamd.c **** 		n-1, and columns are in the range 0 to n-1.  Symamd
 461:lp_solve_5.5/colamd/colamd.c **** 		returns FALSE if any row index is out of range.
 462:lp_solve_5.5/colamd/colamd.c **** 
 463:lp_solve_5.5/colamd/colamd.c **** 		The contents of A are not modified.
 464:lp_solve_5.5/colamd/colamd.c **** 
 465:lp_solve_5.5/colamd/colamd.c **** 	    int p [n+1] ;   	Input argument.
 466:lp_solve_5.5/colamd/colamd.c **** 
 467:lp_solve_5.5/colamd/colamd.c **** 		p is an integer array of size n+1.  On input, it holds the
 468:lp_solve_5.5/colamd/colamd.c **** 		"pointers" for the column form of the matrix A.  Column c of
 469:lp_solve_5.5/colamd/colamd.c **** 		the matrix A is held in A [(p [c]) ... (p [c+1]-1)].  The first
 470:lp_solve_5.5/colamd/colamd.c **** 		entry, p [0], must be zero, and p [c] <= p [c+1] must hold
 471:lp_solve_5.5/colamd/colamd.c **** 		for all c in the range 0 to n-1.  The value p [n] is
 472:lp_solve_5.5/colamd/colamd.c **** 		thus the total number of entries in the pattern of the matrix A.
 473:lp_solve_5.5/colamd/colamd.c **** 		Symamd returns FALSE if these conditions are not met.
 474:lp_solve_5.5/colamd/colamd.c **** 
 475:lp_solve_5.5/colamd/colamd.c **** 		The contents of p are not modified.
 476:lp_solve_5.5/colamd/colamd.c **** 
 477:lp_solve_5.5/colamd/colamd.c **** 	    int perm [n+1] ;   	Output argument.
 478:lp_solve_5.5/colamd/colamd.c **** 
 479:lp_solve_5.5/colamd/colamd.c **** 		On output, if symamd returns TRUE, the array perm holds the
 480:lp_solve_5.5/colamd/colamd.c **** 		permutation P, where perm [0] is the first index in the new
 481:lp_solve_5.5/colamd/colamd.c **** 		ordering, and perm [n-1] is the last.  That is, perm [k] = j
 482:lp_solve_5.5/colamd/colamd.c **** 		means that row and column j of A is the kth column in PAP',
 483:lp_solve_5.5/colamd/colamd.c **** 		where k is in the range 0 to n-1 (perm [0] = j means
 484:lp_solve_5.5/colamd/colamd.c **** 		that row and column j of A are the first row and column in
 485:lp_solve_5.5/colamd/colamd.c **** 		PAP').  The array is used as a workspace during the ordering,
 486:lp_solve_5.5/colamd/colamd.c **** 		which is why it must be of length n+1, not just n.
 487:lp_solve_5.5/colamd/colamd.c **** 
 488:lp_solve_5.5/colamd/colamd.c **** 	    double knobs [COLAMD_KNOBS] ;	Input argument.
 489:lp_solve_5.5/colamd/colamd.c **** 
 490:lp_solve_5.5/colamd/colamd.c **** 		See colamd_set_defaults for a description.
 491:lp_solve_5.5/colamd/colamd.c **** 
 492:lp_solve_5.5/colamd/colamd.c **** 	    int stats [COLAMD_STATS] ;		Output argument.
 493:lp_solve_5.5/colamd/colamd.c **** 
 494:lp_solve_5.5/colamd/colamd.c **** 		Statistics on the ordering, and error status.
 495:lp_solve_5.5/colamd/colamd.c **** 		See colamd.h for related definitions.
 496:lp_solve_5.5/colamd/colamd.c **** 		Symamd returns FALSE if stats is not present.
 497:lp_solve_5.5/colamd/colamd.c **** 
 498:lp_solve_5.5/colamd/colamd.c **** 		stats [0]:  number of dense or empty row and columns ignored
 499:lp_solve_5.5/colamd/colamd.c **** 				(and ordered last in the output permutation 
 500:lp_solve_5.5/colamd/colamd.c **** 				perm).  Note that a row/column can become
 501:lp_solve_5.5/colamd/colamd.c **** 				"empty" if it contains only "dense" and/or
 502:lp_solve_5.5/colamd/colamd.c **** 				"empty" columns/rows.
 503:lp_solve_5.5/colamd/colamd.c **** 
 504:lp_solve_5.5/colamd/colamd.c **** 		stats [1]:  (same as stats [0])
 505:lp_solve_5.5/colamd/colamd.c **** 
 506:lp_solve_5.5/colamd/colamd.c **** 		stats [2]:  number of garbage collections performed.
 507:lp_solve_5.5/colamd/colamd.c **** 
 508:lp_solve_5.5/colamd/colamd.c **** 		stats [3]:  status code.  < 0 is an error code.
 509:lp_solve_5.5/colamd/colamd.c **** 			    > 1 is a warning or notice.
 510:lp_solve_5.5/colamd/colamd.c **** 
 511:lp_solve_5.5/colamd/colamd.c **** 			0	OK.  Each column of the input matrix contained
 512:lp_solve_5.5/colamd/colamd.c **** 				row indices in increasing order, with no
 513:lp_solve_5.5/colamd/colamd.c **** 				duplicates.
 514:lp_solve_5.5/colamd/colamd.c **** 
 515:lp_solve_5.5/colamd/colamd.c **** 			1	OK, but columns of input matrix were jumbled
 516:lp_solve_5.5/colamd/colamd.c **** 				(unsorted columns or duplicate entries).  Symamd
 517:lp_solve_5.5/colamd/colamd.c **** 				had to do some extra work to sort the matrix
 518:lp_solve_5.5/colamd/colamd.c **** 				first and remove duplicate entries, but it
 519:lp_solve_5.5/colamd/colamd.c **** 				still was able to return a valid permutation
 520:lp_solve_5.5/colamd/colamd.c **** 				(return value of symamd was TRUE).
 521:lp_solve_5.5/colamd/colamd.c **** 
 522:lp_solve_5.5/colamd/colamd.c **** 					stats [4]: highest numbered column that
 523:lp_solve_5.5/colamd/colamd.c **** 						is unsorted or has duplicate
 524:lp_solve_5.5/colamd/colamd.c **** 						entries.
 525:lp_solve_5.5/colamd/colamd.c **** 					stats [5]: last seen duplicate or
 526:lp_solve_5.5/colamd/colamd.c **** 						unsorted row index.
 527:lp_solve_5.5/colamd/colamd.c **** 					stats [6]: number of duplicate or
 528:lp_solve_5.5/colamd/colamd.c **** 						unsorted row indices.
 529:lp_solve_5.5/colamd/colamd.c **** 
 530:lp_solve_5.5/colamd/colamd.c **** 			-1	A is a null pointer
 531:lp_solve_5.5/colamd/colamd.c **** 
 532:lp_solve_5.5/colamd/colamd.c **** 			-2	p is a null pointer
 533:lp_solve_5.5/colamd/colamd.c **** 
 534:lp_solve_5.5/colamd/colamd.c **** 			-3	(unused, see colamd.c)
 535:lp_solve_5.5/colamd/colamd.c **** 
 536:lp_solve_5.5/colamd/colamd.c **** 			-4 	n is negative
 537:lp_solve_5.5/colamd/colamd.c **** 
 538:lp_solve_5.5/colamd/colamd.c **** 					stats [4]: n
 539:lp_solve_5.5/colamd/colamd.c **** 
 540:lp_solve_5.5/colamd/colamd.c **** 			-5	number of nonzeros in matrix is negative
 541:lp_solve_5.5/colamd/colamd.c **** 
 542:lp_solve_5.5/colamd/colamd.c **** 					stats [4]: # of nonzeros (p [n]).
 543:lp_solve_5.5/colamd/colamd.c **** 
 544:lp_solve_5.5/colamd/colamd.c **** 			-6	p [0] is nonzero
 545:lp_solve_5.5/colamd/colamd.c **** 
 546:lp_solve_5.5/colamd/colamd.c **** 					stats [4]: p [0]
 547:lp_solve_5.5/colamd/colamd.c **** 
 548:lp_solve_5.5/colamd/colamd.c **** 			-7	(unused)
 549:lp_solve_5.5/colamd/colamd.c **** 
 550:lp_solve_5.5/colamd/colamd.c **** 			-8	a column has a negative number of entries
 551:lp_solve_5.5/colamd/colamd.c **** 
 552:lp_solve_5.5/colamd/colamd.c **** 					stats [4]: column with < 0 entries
 553:lp_solve_5.5/colamd/colamd.c **** 					stats [5]: number of entries in col
 554:lp_solve_5.5/colamd/colamd.c **** 
 555:lp_solve_5.5/colamd/colamd.c **** 			-9	a row index is out of bounds
 556:lp_solve_5.5/colamd/colamd.c **** 
 557:lp_solve_5.5/colamd/colamd.c **** 					stats [4]: column with bad row index
 558:lp_solve_5.5/colamd/colamd.c **** 					stats [5]: bad row index
 559:lp_solve_5.5/colamd/colamd.c **** 					stats [6]: n_row, # of rows of matrx
 560:lp_solve_5.5/colamd/colamd.c **** 
 561:lp_solve_5.5/colamd/colamd.c **** 			-10	out of memory (unable to allocate temporary
 562:lp_solve_5.5/colamd/colamd.c **** 				workspace for M or count arrays using the
 563:lp_solve_5.5/colamd/colamd.c **** 				"allocate" routine passed into symamd).
 564:lp_solve_5.5/colamd/colamd.c **** 
 565:lp_solve_5.5/colamd/colamd.c **** 			-999	internal error.  colamd failed to order the
 566:lp_solve_5.5/colamd/colamd.c **** 				matrix M, when it should have succeeded.  This
 567:lp_solve_5.5/colamd/colamd.c **** 				indicates a bug.  If this (and *only* this)
 568:lp_solve_5.5/colamd/colamd.c **** 				error code occurs, please contact the authors.
 569:lp_solve_5.5/colamd/colamd.c **** 				Don't contact the authors if you get any other
 570:lp_solve_5.5/colamd/colamd.c **** 				error code.
 571:lp_solve_5.5/colamd/colamd.c **** 
 572:lp_solve_5.5/colamd/colamd.c **** 		Future versions may return more statistics in the stats array.
 573:lp_solve_5.5/colamd/colamd.c **** 
 574:lp_solve_5.5/colamd/colamd.c **** 	    void * (*allocate) (size_t, size_t)
 575:lp_solve_5.5/colamd/colamd.c **** 
 576:lp_solve_5.5/colamd/colamd.c **** 	    	A pointer to a function providing memory allocation.  The
 577:lp_solve_5.5/colamd/colamd.c **** 		allocated memory must be returned initialized to zero.  For a
 578:lp_solve_5.5/colamd/colamd.c **** 		C application, this argument should normally be a pointer to
 579:lp_solve_5.5/colamd/colamd.c **** 		calloc.  For a Matlab mexFunction, the routine mxCalloc is
 580:lp_solve_5.5/colamd/colamd.c **** 		passed instead.
 581:lp_solve_5.5/colamd/colamd.c **** 
 582:lp_solve_5.5/colamd/colamd.c **** 	    void (*release) (size_t, size_t)
 583:lp_solve_5.5/colamd/colamd.c **** 
 584:lp_solve_5.5/colamd/colamd.c **** 	    	A pointer to a function that frees memory allocated by the
 585:lp_solve_5.5/colamd/colamd.c **** 		memory allocation routine above.  For a C application, this
 586:lp_solve_5.5/colamd/colamd.c **** 		argument should normally be a pointer to free.  For a Matlab
 587:lp_solve_5.5/colamd/colamd.c **** 		mexFunction, the routine mxFree is passed instead.
 588:lp_solve_5.5/colamd/colamd.c **** 
 589:lp_solve_5.5/colamd/colamd.c **** 
 590:lp_solve_5.5/colamd/colamd.c ****     ----------------------------------------------------------------------------
 591:lp_solve_5.5/colamd/colamd.c ****     colamd_report:
 592:lp_solve_5.5/colamd/colamd.c ****     ----------------------------------------------------------------------------
 593:lp_solve_5.5/colamd/colamd.c **** 
 594:lp_solve_5.5/colamd/colamd.c **** 	C syntax:
 595:lp_solve_5.5/colamd/colamd.c **** 
 596:lp_solve_5.5/colamd/colamd.c **** 	    #include "colamd.h"
 597:lp_solve_5.5/colamd/colamd.c **** 	    colamd_report (int stats [COLAMD_STATS]) ;
 598:lp_solve_5.5/colamd/colamd.c **** 
 599:lp_solve_5.5/colamd/colamd.c **** 	Purpose:
 600:lp_solve_5.5/colamd/colamd.c **** 
 601:lp_solve_5.5/colamd/colamd.c **** 	    Prints the error status and statistics recorded in the stats
 602:lp_solve_5.5/colamd/colamd.c **** 	    array on the standard error output (for a standard C routine)
 603:lp_solve_5.5/colamd/colamd.c **** 	    or on the Matlab output (for a mexFunction).
 604:lp_solve_5.5/colamd/colamd.c **** 
 605:lp_solve_5.5/colamd/colamd.c **** 	Arguments:
 606:lp_solve_5.5/colamd/colamd.c **** 
 607:lp_solve_5.5/colamd/colamd.c **** 	    int stats [COLAMD_STATS] ;	Input only.  Statistics from colamd.
 608:lp_solve_5.5/colamd/colamd.c **** 
 609:lp_solve_5.5/colamd/colamd.c **** 
 610:lp_solve_5.5/colamd/colamd.c ****     ----------------------------------------------------------------------------
 611:lp_solve_5.5/colamd/colamd.c ****     symamd_report:
 612:lp_solve_5.5/colamd/colamd.c ****     ----------------------------------------------------------------------------
 613:lp_solve_5.5/colamd/colamd.c **** 
 614:lp_solve_5.5/colamd/colamd.c **** 	C syntax:
 615:lp_solve_5.5/colamd/colamd.c **** 
 616:lp_solve_5.5/colamd/colamd.c **** 	    #include "colamd.h"
 617:lp_solve_5.5/colamd/colamd.c **** 	    symamd_report (int stats [COLAMD_STATS]) ;
 618:lp_solve_5.5/colamd/colamd.c **** 
 619:lp_solve_5.5/colamd/colamd.c **** 	Purpose:
 620:lp_solve_5.5/colamd/colamd.c **** 
 621:lp_solve_5.5/colamd/colamd.c **** 	    Prints the error status and statistics recorded in the stats
 622:lp_solve_5.5/colamd/colamd.c **** 	    array on the standard error output (for a standard C routine)
 623:lp_solve_5.5/colamd/colamd.c **** 	    or on the Matlab output (for a mexFunction).
 624:lp_solve_5.5/colamd/colamd.c **** 
 625:lp_solve_5.5/colamd/colamd.c **** 	Arguments:
 626:lp_solve_5.5/colamd/colamd.c **** 
 627:lp_solve_5.5/colamd/colamd.c **** 	    int stats [COLAMD_STATS] ;	Input only.  Statistics from symamd.
 628:lp_solve_5.5/colamd/colamd.c **** 
 629:lp_solve_5.5/colamd/colamd.c **** 
 630:lp_solve_5.5/colamd/colamd.c **** */
 631:lp_solve_5.5/colamd/colamd.c **** 
 632:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 633:lp_solve_5.5/colamd/colamd.c **** /* === Scaffolding code definitions  ======================================== */
 634:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 635:lp_solve_5.5/colamd/colamd.c **** 
 636:lp_solve_5.5/colamd/colamd.c **** /* Ensure that debugging is turned off: */
 637:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
 638:lp_solve_5.5/colamd/colamd.c **** #define NDEBUG
 639:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
 640:lp_solve_5.5/colamd/colamd.c **** 
 641:lp_solve_5.5/colamd/colamd.c **** /*
 642:lp_solve_5.5/colamd/colamd.c ****    Our "scaffolding code" philosophy:  In our opinion, well-written library
 643:lp_solve_5.5/colamd/colamd.c ****    code should keep its "debugging" code, and just normally have it turned off
 644:lp_solve_5.5/colamd/colamd.c ****    by the compiler so as not to interfere with performance.  This serves
 645:lp_solve_5.5/colamd/colamd.c ****    several purposes:
 646:lp_solve_5.5/colamd/colamd.c **** 
 647:lp_solve_5.5/colamd/colamd.c ****    (1) assertions act as comments to the reader, telling you what the code
 648:lp_solve_5.5/colamd/colamd.c **** 	expects at that point.  All assertions will always be true (unless
 649:lp_solve_5.5/colamd/colamd.c **** 	there really is a bug, of course).
 650:lp_solve_5.5/colamd/colamd.c **** 
 651:lp_solve_5.5/colamd/colamd.c ****    (2) leaving in the scaffolding code assists anyone who would like to modify
 652:lp_solve_5.5/colamd/colamd.c **** 	the code, or understand the algorithm (by reading the debugging output,
 653:lp_solve_5.5/colamd/colamd.c **** 	one can get a glimpse into what the code is doing).
 654:lp_solve_5.5/colamd/colamd.c **** 
 655:lp_solve_5.5/colamd/colamd.c ****    (3) (gasp!) for actually finding bugs.  This code has been heavily tested
 656:lp_solve_5.5/colamd/colamd.c **** 	and "should" be fully functional and bug-free ... but you never know...
 657:lp_solve_5.5/colamd/colamd.c **** 
 658:lp_solve_5.5/colamd/colamd.c ****     To enable debugging, comment out the "#define NDEBUG" above.  For a Matlab
 659:lp_solve_5.5/colamd/colamd.c ****     mexFunction, you will also need to modify mexopts.sh to remove the -DNDEBUG
 660:lp_solve_5.5/colamd/colamd.c ****     definition.  The code will become outrageously slow when debugging is
 661:lp_solve_5.5/colamd/colamd.c ****     enabled.  To control the level of debugging output, set an environment
 662:lp_solve_5.5/colamd/colamd.c ****     variable D to 0 (little), 1 (some), 2, 3, or 4 (lots).  When debugging,
 663:lp_solve_5.5/colamd/colamd.c ****     you should see the following message on the standard output:
 664:lp_solve_5.5/colamd/colamd.c **** 
 665:lp_solve_5.5/colamd/colamd.c ****     	colamd: debug version, D = 1 (THIS WILL BE SLOW!)
 666:lp_solve_5.5/colamd/colamd.c **** 
 667:lp_solve_5.5/colamd/colamd.c ****     or a similar message for symamd.  If you don't, then debugging has not
 668:lp_solve_5.5/colamd/colamd.c ****     been enabled.
 669:lp_solve_5.5/colamd/colamd.c **** 
 670:lp_solve_5.5/colamd/colamd.c **** */
 671:lp_solve_5.5/colamd/colamd.c **** 
 672:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 673:lp_solve_5.5/colamd/colamd.c **** /* === Include files ======================================================== */
 674:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 675:lp_solve_5.5/colamd/colamd.c **** 
 676:lp_solve_5.5/colamd/colamd.c **** #include "colamd.h"
 677:lp_solve_5.5/colamd/colamd.c **** #include <limits.h>
 678:lp_solve_5.5/colamd/colamd.c **** 
 679:lp_solve_5.5/colamd/colamd.c **** #ifdef MATLAB_MEX_FILE
 680:lp_solve_5.5/colamd/colamd.c **** #include "mex.h"
 681:lp_solve_5.5/colamd/colamd.c **** #include "matrix.h"
 682:lp_solve_5.5/colamd/colamd.c **** #else
 683:lp_solve_5.5/colamd/colamd.c **** #include <stdio.h>
 684:lp_solve_5.5/colamd/colamd.c **** #include <assert.h>
 685:lp_solve_5.5/colamd/colamd.c **** #endif /* MATLAB_MEX_FILE */
 686:lp_solve_5.5/colamd/colamd.c **** 
 687:lp_solve_5.5/colamd/colamd.c **** #ifdef FORTIFY
 688:lp_solve_5.5/colamd/colamd.c **** # include "lp_fortify.h"
 689:lp_solve_5.5/colamd/colamd.c **** #endif
 690:lp_solve_5.5/colamd/colamd.c **** 
 691:lp_solve_5.5/colamd/colamd.c **** 
 692:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 693:lp_solve_5.5/colamd/colamd.c **** /* === Definitions ========================================================== */
 694:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 695:lp_solve_5.5/colamd/colamd.c **** 
 696:lp_solve_5.5/colamd/colamd.c **** /* Routines are either PUBLIC (user-callable) or PRIVATE (not user-callable) */
 697:lp_solve_5.5/colamd/colamd.c **** #define PUBLIC
 698:lp_solve_5.5/colamd/colamd.c **** #define PRIVATE static
 699:lp_solve_5.5/colamd/colamd.c **** 
 700:lp_solve_5.5/colamd/colamd.c **** #define MAX(a,b) (((a) > (b)) ? (a) : (b))
 701:lp_solve_5.5/colamd/colamd.c **** #define MIN(a,b) (((a) < (b)) ? (a) : (b))
 702:lp_solve_5.5/colamd/colamd.c **** 
 703:lp_solve_5.5/colamd/colamd.c **** #define ONES_COMPLEMENT(r) (-(r)-1)
 704:lp_solve_5.5/colamd/colamd.c **** 
 705:lp_solve_5.5/colamd/colamd.c **** /* -------------------------------------------------------------------------- */
 706:lp_solve_5.5/colamd/colamd.c **** /* Change for version 2.1:  define TRUE and FALSE only if not yet defined */  
 707:lp_solve_5.5/colamd/colamd.c **** /* -------------------------------------------------------------------------- */
 708:lp_solve_5.5/colamd/colamd.c **** 
 709:lp_solve_5.5/colamd/colamd.c **** #ifndef TRUE
 710:lp_solve_5.5/colamd/colamd.c **** #define TRUE (1)
 711:lp_solve_5.5/colamd/colamd.c **** #endif
 712:lp_solve_5.5/colamd/colamd.c **** 
 713:lp_solve_5.5/colamd/colamd.c **** #ifndef FALSE
 714:lp_solve_5.5/colamd/colamd.c **** #define FALSE (0)
 715:lp_solve_5.5/colamd/colamd.c **** #endif
 716:lp_solve_5.5/colamd/colamd.c **** 
 717:lp_solve_5.5/colamd/colamd.c **** /* -------------------------------------------------------------------------- */
 718:lp_solve_5.5/colamd/colamd.c **** 
 719:lp_solve_5.5/colamd/colamd.c **** #define EMPTY	(-1)
 720:lp_solve_5.5/colamd/colamd.c **** 
 721:lp_solve_5.5/colamd/colamd.c **** /* Row and column status */
 722:lp_solve_5.5/colamd/colamd.c **** #define ALIVE	(0)
 723:lp_solve_5.5/colamd/colamd.c **** #define DEAD	(-1)
 724:lp_solve_5.5/colamd/colamd.c **** 
 725:lp_solve_5.5/colamd/colamd.c **** /* Column status */
 726:lp_solve_5.5/colamd/colamd.c **** #define DEAD_PRINCIPAL		(-1)
 727:lp_solve_5.5/colamd/colamd.c **** #define DEAD_NON_PRINCIPAL	(-2)
 728:lp_solve_5.5/colamd/colamd.c **** 
 729:lp_solve_5.5/colamd/colamd.c **** /* Macros for row and column status update and checking. */
 730:lp_solve_5.5/colamd/colamd.c **** #define ROW_IS_DEAD(r)			ROW_IS_MARKED_DEAD (Row[r].shared2.mark)
 731:lp_solve_5.5/colamd/colamd.c **** #define ROW_IS_MARKED_DEAD(row_mark)	(row_mark < ALIVE)
 732:lp_solve_5.5/colamd/colamd.c **** #define ROW_IS_ALIVE(r)			(Row [r].shared2.mark >= ALIVE)
 733:lp_solve_5.5/colamd/colamd.c **** #define COL_IS_DEAD(c)			(Col [c].start < ALIVE)
 734:lp_solve_5.5/colamd/colamd.c **** #define COL_IS_ALIVE(c)			(Col [c].start >= ALIVE)
 735:lp_solve_5.5/colamd/colamd.c **** #define COL_IS_DEAD_PRINCIPAL(c)	(Col [c].start == DEAD_PRINCIPAL)
 736:lp_solve_5.5/colamd/colamd.c **** #define KILL_ROW(r)			{ Row [r].shared2.mark = DEAD ; }
 737:lp_solve_5.5/colamd/colamd.c **** #define KILL_PRINCIPAL_COL(c)		{ Col [c].start = DEAD_PRINCIPAL ; }
 738:lp_solve_5.5/colamd/colamd.c **** #define KILL_NON_PRINCIPAL_COL(c)	{ Col [c].start = DEAD_NON_PRINCIPAL ; }
 739:lp_solve_5.5/colamd/colamd.c **** 
 740:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 741:lp_solve_5.5/colamd/colamd.c **** /* === Colamd reporting mechanism =========================================== */
 742:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 743:lp_solve_5.5/colamd/colamd.c **** 
 744:lp_solve_5.5/colamd/colamd.c **** #ifdef MATLAB_MEX_FILE
 745:lp_solve_5.5/colamd/colamd.c **** 
 746:lp_solve_5.5/colamd/colamd.c **** /* use mexPrintf in a Matlab mexFunction, for debugging and statistics output */
 747:lp_solve_5.5/colamd/colamd.c **** #define PRINTF mexPrintf
 748:lp_solve_5.5/colamd/colamd.c **** 
 749:lp_solve_5.5/colamd/colamd.c **** /* In Matlab, matrices are 1-based to the user, but 0-based internally */
 750:lp_solve_5.5/colamd/colamd.c **** #define INDEX(i) ((i)+1)
 751:lp_solve_5.5/colamd/colamd.c **** 
 752:lp_solve_5.5/colamd/colamd.c **** #else
 753:lp_solve_5.5/colamd/colamd.c **** 
 754:lp_solve_5.5/colamd/colamd.c **** /* Use printf in standard C environment, for debugging and statistics output. */
 755:lp_solve_5.5/colamd/colamd.c **** /* Output is generated only if debugging is enabled at compile time, or if */
 756:lp_solve_5.5/colamd/colamd.c **** /* the caller explicitly calls colamd_report or symamd_report. */
 757:lp_solve_5.5/colamd/colamd.c **** #define PRINTF printf
 758:lp_solve_5.5/colamd/colamd.c **** 
 759:lp_solve_5.5/colamd/colamd.c **** /* In C, matrices are 0-based and indices are reported as such in *_report */
 760:lp_solve_5.5/colamd/colamd.c **** #define INDEX(i) (i)
 761:lp_solve_5.5/colamd/colamd.c **** 
 762:lp_solve_5.5/colamd/colamd.c **** #endif /* MATLAB_MEX_FILE */
 763:lp_solve_5.5/colamd/colamd.c **** 
 764:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 765:lp_solve_5.5/colamd/colamd.c **** /* === Prototypes of PRIVATE routines ======================================= */
 766:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 767:lp_solve_5.5/colamd/colamd.c **** 
 768:lp_solve_5.5/colamd/colamd.c **** PRIVATE int init_rows_cols
 769:lp_solve_5.5/colamd/colamd.c **** (
 770:lp_solve_5.5/colamd/colamd.c ****     int n_row,
 771:lp_solve_5.5/colamd/colamd.c ****     int n_col,
 772:lp_solve_5.5/colamd/colamd.c ****     Colamd_Row Row [],
 773:lp_solve_5.5/colamd/colamd.c ****     Colamd_Col Col [],
 774:lp_solve_5.5/colamd/colamd.c ****     int A [],
 775:lp_solve_5.5/colamd/colamd.c ****     int p [],
 776:lp_solve_5.5/colamd/colamd.c ****     int stats [COLAMD_STATS]
 777:lp_solve_5.5/colamd/colamd.c **** ) ;
 778:lp_solve_5.5/colamd/colamd.c **** 
 779:lp_solve_5.5/colamd/colamd.c **** PRIVATE void init_scoring
 780:lp_solve_5.5/colamd/colamd.c **** (
 781:lp_solve_5.5/colamd/colamd.c ****     int n_row,
 782:lp_solve_5.5/colamd/colamd.c ****     int n_col,
 783:lp_solve_5.5/colamd/colamd.c ****     Colamd_Row Row [],
 784:lp_solve_5.5/colamd/colamd.c ****     Colamd_Col Col [],
 785:lp_solve_5.5/colamd/colamd.c ****     int A [],
 786:lp_solve_5.5/colamd/colamd.c ****     int head [],
 787:lp_solve_5.5/colamd/colamd.c ****     double knobs [COLAMD_KNOBS],
 788:lp_solve_5.5/colamd/colamd.c ****     int *p_n_row2,
 789:lp_solve_5.5/colamd/colamd.c ****     int *p_n_col2,
 790:lp_solve_5.5/colamd/colamd.c ****     int *p_max_deg
 791:lp_solve_5.5/colamd/colamd.c **** ) ;
 792:lp_solve_5.5/colamd/colamd.c **** 
 793:lp_solve_5.5/colamd/colamd.c **** PRIVATE int find_ordering
 794:lp_solve_5.5/colamd/colamd.c **** (
 795:lp_solve_5.5/colamd/colamd.c ****     int n_row,
 796:lp_solve_5.5/colamd/colamd.c ****     int n_col,
 797:lp_solve_5.5/colamd/colamd.c ****     int Alen,
 798:lp_solve_5.5/colamd/colamd.c ****     Colamd_Row Row [],
 799:lp_solve_5.5/colamd/colamd.c ****     Colamd_Col Col [],
 800:lp_solve_5.5/colamd/colamd.c ****     int A [],
 801:lp_solve_5.5/colamd/colamd.c ****     int head [],
 802:lp_solve_5.5/colamd/colamd.c ****     int n_col2,
 803:lp_solve_5.5/colamd/colamd.c ****     int max_deg,
 804:lp_solve_5.5/colamd/colamd.c ****     int pfree
 805:lp_solve_5.5/colamd/colamd.c **** ) ;
 806:lp_solve_5.5/colamd/colamd.c **** 
 807:lp_solve_5.5/colamd/colamd.c **** PRIVATE void order_children
 808:lp_solve_5.5/colamd/colamd.c **** (
 809:lp_solve_5.5/colamd/colamd.c ****     int n_col,
 810:lp_solve_5.5/colamd/colamd.c ****     Colamd_Col Col [],
 811:lp_solve_5.5/colamd/colamd.c ****     int p []
 812:lp_solve_5.5/colamd/colamd.c **** ) ;
 813:lp_solve_5.5/colamd/colamd.c **** 
 814:lp_solve_5.5/colamd/colamd.c **** PRIVATE void detect_super_cols
 815:lp_solve_5.5/colamd/colamd.c **** (
 816:lp_solve_5.5/colamd/colamd.c **** 
 817:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
 818:lp_solve_5.5/colamd/colamd.c ****     int n_col,
 819:lp_solve_5.5/colamd/colamd.c ****     Colamd_Row Row [],
 820:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
 821:lp_solve_5.5/colamd/colamd.c **** 
 822:lp_solve_5.5/colamd/colamd.c ****     Colamd_Col Col [],
 823:lp_solve_5.5/colamd/colamd.c ****     int A [],
 824:lp_solve_5.5/colamd/colamd.c ****     int head [],
 825:lp_solve_5.5/colamd/colamd.c ****     int row_start,
 826:lp_solve_5.5/colamd/colamd.c ****     int row_length
 827:lp_solve_5.5/colamd/colamd.c **** ) ;
 828:lp_solve_5.5/colamd/colamd.c **** 
 829:lp_solve_5.5/colamd/colamd.c **** PRIVATE int garbage_collection
 830:lp_solve_5.5/colamd/colamd.c **** (
 831:lp_solve_5.5/colamd/colamd.c ****     int n_row,
 832:lp_solve_5.5/colamd/colamd.c ****     int n_col,
 833:lp_solve_5.5/colamd/colamd.c ****     Colamd_Row Row [],
 834:lp_solve_5.5/colamd/colamd.c ****     Colamd_Col Col [],
 835:lp_solve_5.5/colamd/colamd.c ****     int A [],
 836:lp_solve_5.5/colamd/colamd.c ****     int *pfree
 837:lp_solve_5.5/colamd/colamd.c **** ) ;
 838:lp_solve_5.5/colamd/colamd.c **** 
 839:lp_solve_5.5/colamd/colamd.c **** PRIVATE int clear_mark
 840:lp_solve_5.5/colamd/colamd.c **** (
 841:lp_solve_5.5/colamd/colamd.c ****     int n_row,
 842:lp_solve_5.5/colamd/colamd.c ****     Colamd_Row Row []
 843:lp_solve_5.5/colamd/colamd.c **** ) ;
 844:lp_solve_5.5/colamd/colamd.c **** 
 845:lp_solve_5.5/colamd/colamd.c **** PRIVATE void print_report
 846:lp_solve_5.5/colamd/colamd.c **** (
 847:lp_solve_5.5/colamd/colamd.c ****     char *method,
 848:lp_solve_5.5/colamd/colamd.c ****     int stats [COLAMD_STATS]
 849:lp_solve_5.5/colamd/colamd.c **** ) ;
 850:lp_solve_5.5/colamd/colamd.c **** 
 851:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 852:lp_solve_5.5/colamd/colamd.c **** /* === Debugging prototypes and definitions ================================= */
 853:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 854:lp_solve_5.5/colamd/colamd.c **** 
 855:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
 856:lp_solve_5.5/colamd/colamd.c **** 
 857:lp_solve_5.5/colamd/colamd.c **** /* colamd_debug is the *ONLY* global variable, and is only */
 858:lp_solve_5.5/colamd/colamd.c **** /* present when debugging */
 859:lp_solve_5.5/colamd/colamd.c **** 
 860:lp_solve_5.5/colamd/colamd.c **** PRIVATE int colamd_debug ;	/* debug print level */
 861:lp_solve_5.5/colamd/colamd.c **** 
 862:lp_solve_5.5/colamd/colamd.c **** #define DEBUG0(params) { (void) PRINTF params ; }
 863:lp_solve_5.5/colamd/colamd.c **** #define DEBUG1(params) { if (colamd_debug >= 1) (void) PRINTF params ; }
 864:lp_solve_5.5/colamd/colamd.c **** #define DEBUG2(params) { if (colamd_debug >= 2) (void) PRINTF params ; }
 865:lp_solve_5.5/colamd/colamd.c **** #define DEBUG3(params) { if (colamd_debug >= 3) (void) PRINTF params ; }
 866:lp_solve_5.5/colamd/colamd.c **** #define DEBUG4(params) { if (colamd_debug >= 4) (void) PRINTF params ; }
 867:lp_solve_5.5/colamd/colamd.c **** 
 868:lp_solve_5.5/colamd/colamd.c **** #ifdef MATLAB_MEX_FILE
 869:lp_solve_5.5/colamd/colamd.c **** #define ASSERT(expression) (mxAssert ((expression), ""))
 870:lp_solve_5.5/colamd/colamd.c **** #else
 871:lp_solve_5.5/colamd/colamd.c **** #define ASSERT(expression) (assert (expression))
 872:lp_solve_5.5/colamd/colamd.c **** #endif /* MATLAB_MEX_FILE */
 873:lp_solve_5.5/colamd/colamd.c **** 
 874:lp_solve_5.5/colamd/colamd.c **** PRIVATE void colamd_get_debug	/* gets the debug print level from getenv */
 875:lp_solve_5.5/colamd/colamd.c **** (
 876:lp_solve_5.5/colamd/colamd.c ****     char *method
 877:lp_solve_5.5/colamd/colamd.c **** ) ;
 878:lp_solve_5.5/colamd/colamd.c **** 
 879:lp_solve_5.5/colamd/colamd.c **** PRIVATE void debug_deg_lists
 880:lp_solve_5.5/colamd/colamd.c **** (
 881:lp_solve_5.5/colamd/colamd.c ****     int n_row,
 882:lp_solve_5.5/colamd/colamd.c ****     int n_col,
 883:lp_solve_5.5/colamd/colamd.c ****     Colamd_Row Row [],
 884:lp_solve_5.5/colamd/colamd.c ****     Colamd_Col Col [],
 885:lp_solve_5.5/colamd/colamd.c ****     int head [],
 886:lp_solve_5.5/colamd/colamd.c ****     int min_score,
 887:lp_solve_5.5/colamd/colamd.c ****     int should,
 888:lp_solve_5.5/colamd/colamd.c ****     int max_deg
 889:lp_solve_5.5/colamd/colamd.c **** ) ;
 890:lp_solve_5.5/colamd/colamd.c **** 
 891:lp_solve_5.5/colamd/colamd.c **** PRIVATE void debug_mark
 892:lp_solve_5.5/colamd/colamd.c **** (
 893:lp_solve_5.5/colamd/colamd.c ****     int n_row,
 894:lp_solve_5.5/colamd/colamd.c ****     Colamd_Row Row [],
 895:lp_solve_5.5/colamd/colamd.c ****     int tag_mark,
 896:lp_solve_5.5/colamd/colamd.c ****     int max_mark
 897:lp_solve_5.5/colamd/colamd.c **** ) ;
 898:lp_solve_5.5/colamd/colamd.c **** 
 899:lp_solve_5.5/colamd/colamd.c **** PRIVATE void debug_matrix
 900:lp_solve_5.5/colamd/colamd.c **** (
 901:lp_solve_5.5/colamd/colamd.c ****     int n_row,
 902:lp_solve_5.5/colamd/colamd.c ****     int n_col,
 903:lp_solve_5.5/colamd/colamd.c ****     Colamd_Row Row [],
 904:lp_solve_5.5/colamd/colamd.c ****     Colamd_Col Col [],
 905:lp_solve_5.5/colamd/colamd.c ****     int A []
 906:lp_solve_5.5/colamd/colamd.c **** ) ;
 907:lp_solve_5.5/colamd/colamd.c **** 
 908:lp_solve_5.5/colamd/colamd.c **** PRIVATE void debug_structures
 909:lp_solve_5.5/colamd/colamd.c **** (
 910:lp_solve_5.5/colamd/colamd.c ****     int n_row,
 911:lp_solve_5.5/colamd/colamd.c ****     int n_col,
 912:lp_solve_5.5/colamd/colamd.c ****     Colamd_Row Row [],
 913:lp_solve_5.5/colamd/colamd.c ****     Colamd_Col Col [],
 914:lp_solve_5.5/colamd/colamd.c ****     int A [],
 915:lp_solve_5.5/colamd/colamd.c ****     int n_col2
 916:lp_solve_5.5/colamd/colamd.c **** ) ;
 917:lp_solve_5.5/colamd/colamd.c **** 
 918:lp_solve_5.5/colamd/colamd.c **** #else /* NDEBUG */
 919:lp_solve_5.5/colamd/colamd.c **** 
 920:lp_solve_5.5/colamd/colamd.c **** /* === No debugging ========================================================= */
 921:lp_solve_5.5/colamd/colamd.c **** 
 922:lp_solve_5.5/colamd/colamd.c **** #define DEBUG0(params) ;
 923:lp_solve_5.5/colamd/colamd.c **** #define DEBUG1(params) ;
 924:lp_solve_5.5/colamd/colamd.c **** #define DEBUG2(params) ;
 925:lp_solve_5.5/colamd/colamd.c **** #define DEBUG3(params) ;
 926:lp_solve_5.5/colamd/colamd.c **** #define DEBUG4(params) ;
 927:lp_solve_5.5/colamd/colamd.c **** 
 928:lp_solve_5.5/colamd/colamd.c **** #define ASSERT(expression) ((void) 0)
 929:lp_solve_5.5/colamd/colamd.c **** 
 930:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
 931:lp_solve_5.5/colamd/colamd.c **** 
 932:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 933:lp_solve_5.5/colamd/colamd.c **** 
 934:lp_solve_5.5/colamd/colamd.c **** 
 935:lp_solve_5.5/colamd/colamd.c **** 
 936:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 937:lp_solve_5.5/colamd/colamd.c **** /* === USER-CALLABLE ROUTINES: ============================================== */
 938:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 939:lp_solve_5.5/colamd/colamd.c **** 
 940:lp_solve_5.5/colamd/colamd.c **** 
 941:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 942:lp_solve_5.5/colamd/colamd.c **** /* === colamd_recommended =================================================== */
 943:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 944:lp_solve_5.5/colamd/colamd.c **** 
 945:lp_solve_5.5/colamd/colamd.c **** /*
 946:lp_solve_5.5/colamd/colamd.c ****     The colamd_recommended routine returns the suggested size for Alen.  This
 947:lp_solve_5.5/colamd/colamd.c ****     value has been determined to provide good balance between the number of
 948:lp_solve_5.5/colamd/colamd.c ****     garbage collections and the memory requirements for colamd.  If any
 949:lp_solve_5.5/colamd/colamd.c ****     argument is negative, a -1 is returned as an error condition.  This
 950:lp_solve_5.5/colamd/colamd.c ****     function is also available as a macro defined in colamd.h, so that you
 951:lp_solve_5.5/colamd/colamd.c ****     can use it for a statically-allocated array size.
 952:lp_solve_5.5/colamd/colamd.c **** */
 953:lp_solve_5.5/colamd/colamd.c **** 
 954:lp_solve_5.5/colamd/colamd.c **** PUBLIC int colamd_recommended	/* returns recommended value of Alen. */
 955:lp_solve_5.5/colamd/colamd.c **** (
 956:lp_solve_5.5/colamd/colamd.c ****     /* === Parameters ======================================================= */
 957:lp_solve_5.5/colamd/colamd.c **** 
 958:lp_solve_5.5/colamd/colamd.c ****     int nnz,			/* number of nonzeros in A */
 959:lp_solve_5.5/colamd/colamd.c ****     int n_row,			/* number of rows in A */
 960:lp_solve_5.5/colamd/colamd.c ****     int n_col			/* number of columns in A */
 961:lp_solve_5.5/colamd/colamd.c **** )
 962:lp_solve_5.5/colamd/colamd.c **** {
  16               		.loc 1 962 0
  17               		.cfi_startproc
  18 0000 CF93      		push r28
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22 0002 DF93      		push r29
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 29, -3
  26 0004 00D0      		rcall .
  27 0006 00D0      		rcall .
  28 0008 00D0      		rcall .
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 10
  31 000a CDB7      		in r28,__SP_L__
  32 000c DEB7      		in r29,__SP_H__
  33               	.LCFI3:
  34               		.cfi_def_cfa_register 28
  35               	/* prologue: function */
  36               	/* frame size = 6 */
  37               	/* stack size = 8 */
  38               	.L__stack_usage = 8
  39 000e 9A83      		std Y+2,r25
  40 0010 8983      		std Y+1,r24
  41 0012 7C83      		std Y+4,r23
  42 0014 6B83      		std Y+3,r22
  43 0016 5E83      		std Y+6,r21
  44 0018 4D83      		std Y+5,r20
 963:lp_solve_5.5/colamd/colamd.c ****     return (COLAMD_RECOMMENDED (nnz, n_row, n_col)) ; 
  45               		.loc 1 963 0
  46 001a 8981      		ldd r24,Y+1
  47 001c 9A81      		ldd r25,Y+2
  48 001e 9923      		tst r25
  49 0020 04F0      		brlt .L2
  50               		.loc 1 963 0 is_stmt 0 discriminator 1
  51 0022 8B81      		ldd r24,Y+3
  52 0024 9C81      		ldd r25,Y+4
  53 0026 9923      		tst r25
  54 0028 04F0      		brlt .L2
  55               		.loc 1 963 0 discriminator 3
  56 002a 8D81      		ldd r24,Y+5
  57 002c 9E81      		ldd r25,Y+6
  58 002e 9923      		tst r25
  59 0030 04F0      		brlt .L2
  60               		.loc 1 963 0 discriminator 5
  61 0032 8981      		ldd r24,Y+1
  62 0034 9A81      		ldd r25,Y+2
  63 0036 880F      		lsl r24
  64 0038 991F      		rol r25
  65 003a AC01      		movw r20,r24
  66 003c 8D81      		ldd r24,Y+5
  67 003e 9E81      		ldd r25,Y+6
  68 0040 0196      		adiw r24,1
  69 0042 9C01      		movw r18,r24
  70 0044 C901      		movw r24,r18
  71 0046 880F      		lsl r24
  72 0048 991F      		rol r25
  73 004a 820F      		add r24,r18
  74 004c 931F      		adc r25,r19
  75 004e 880F      		lsl r24
  76 0050 991F      		rol r25
  77 0052 880F      		lsl r24
  78 0054 991F      		rol r25
  79 0056 9695      		lsr r25
  80 0058 8795      		ror r24
  81 005a 9A01      		movw r18,r20
  82 005c 280F      		add r18,r24
  83 005e 391F      		adc r19,r25
  84 0060 8B81      		ldd r24,Y+3
  85 0062 9C81      		ldd r25,Y+4
  86 0064 0196      		adiw r24,1
  87 0066 880F      		lsl r24
  88 0068 991F      		rol r25
  89 006a 880F      		lsl r24
  90 006c 991F      		rol r25
  91 006e 880F      		lsl r24
  92 0070 991F      		rol r25
  93 0072 9695      		lsr r25
  94 0074 8795      		ror r24
  95 0076 280F      		add r18,r24
  96 0078 391F      		adc r19,r25
  97 007a 8D81      		ldd r24,Y+5
  98 007c 9E81      		ldd r25,Y+6
  99 007e 280F      		add r18,r24
 100 0080 391F      		adc r19,r25
 101 0082 8981      		ldd r24,Y+1
 102 0084 9A81      		ldd r25,Y+2
 103 0086 45E0      		ldi r20,lo8(5)
 104 0088 50E0      		ldi r21,0
 105 008a BA01      		movw r22,r20
 106 008c 0E94 0000 		call __divmodhi4
 107 0090 CB01      		movw r24,r22
 108 0092 820F      		add r24,r18
 109 0094 931F      		adc r25,r19
 110 0096 00C0      		rjmp .L3
 111               	.L2:
 112               		.loc 1 963 0 discriminator 6
 113 0098 8FEF      		ldi r24,lo8(-1)
 114 009a 9FEF      		ldi r25,lo8(-1)
 115               	.L3:
 116               	/* epilogue start */
 964:lp_solve_5.5/colamd/colamd.c **** }
 117               		.loc 1 964 0 is_stmt 1 discriminator 8
 118 009c 2696      		adiw r28,6
 119 009e 0FB6      		in __tmp_reg__,__SREG__
 120 00a0 F894      		cli
 121 00a2 DEBF      		out __SP_H__,r29
 122 00a4 0FBE      		out __SREG__,__tmp_reg__
 123 00a6 CDBF      		out __SP_L__,r28
 124 00a8 DF91      		pop r29
 125 00aa CF91      		pop r28
 126 00ac 0895      		ret
 127               		.cfi_endproc
 128               	.LFE5:
 130               	.global	colamd_set_defaults
 132               	colamd_set_defaults:
 133               	.LFB6:
 965:lp_solve_5.5/colamd/colamd.c **** 
 966:lp_solve_5.5/colamd/colamd.c **** 
 967:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 968:lp_solve_5.5/colamd/colamd.c **** /* === colamd_set_defaults ================================================== */
 969:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
 970:lp_solve_5.5/colamd/colamd.c **** 
 971:lp_solve_5.5/colamd/colamd.c **** /*
 972:lp_solve_5.5/colamd/colamd.c ****     The colamd_set_defaults routine sets the default values of the user-
 973:lp_solve_5.5/colamd/colamd.c ****     controllable parameters for colamd:
 974:lp_solve_5.5/colamd/colamd.c **** 
 975:lp_solve_5.5/colamd/colamd.c **** 	knobs [0]	rows with knobs[0]*n_col entries or more are removed
 976:lp_solve_5.5/colamd/colamd.c **** 			prior to ordering in colamd.  Rows and columns with
 977:lp_solve_5.5/colamd/colamd.c **** 			knobs[0]*n_col entries or more are removed prior to
 978:lp_solve_5.5/colamd/colamd.c **** 			ordering in symamd and placed last in the output
 979:lp_solve_5.5/colamd/colamd.c **** 			ordering.
 980:lp_solve_5.5/colamd/colamd.c **** 
 981:lp_solve_5.5/colamd/colamd.c **** 	knobs [1]	columns with knobs[1]*n_row entries or more are removed
 982:lp_solve_5.5/colamd/colamd.c **** 			prior to ordering in colamd, and placed last in the
 983:lp_solve_5.5/colamd/colamd.c **** 			column permutation.  Symamd ignores this knob.
 984:lp_solve_5.5/colamd/colamd.c **** 
 985:lp_solve_5.5/colamd/colamd.c **** 	knobs [2..19]	unused, but future versions might use this
 986:lp_solve_5.5/colamd/colamd.c **** */
 987:lp_solve_5.5/colamd/colamd.c **** 
 988:lp_solve_5.5/colamd/colamd.c **** PUBLIC void colamd_set_defaults
 989:lp_solve_5.5/colamd/colamd.c **** (
 990:lp_solve_5.5/colamd/colamd.c ****     /* === Parameters ======================================================= */
 991:lp_solve_5.5/colamd/colamd.c **** 
 992:lp_solve_5.5/colamd/colamd.c ****     double knobs [COLAMD_KNOBS]		/* knob array */
 993:lp_solve_5.5/colamd/colamd.c **** )
 994:lp_solve_5.5/colamd/colamd.c **** {
 134               		.loc 1 994 0
 135               		.cfi_startproc
 136 00ae CF93      		push r28
 137               	.LCFI4:
 138               		.cfi_def_cfa_offset 3
 139               		.cfi_offset 28, -2
 140 00b0 DF93      		push r29
 141               	.LCFI5:
 142               		.cfi_def_cfa_offset 4
 143               		.cfi_offset 29, -3
 144 00b2 00D0      		rcall .
 145 00b4 00D0      		rcall .
 146               	.LCFI6:
 147               		.cfi_def_cfa_offset 8
 148 00b6 CDB7      		in r28,__SP_L__
 149 00b8 DEB7      		in r29,__SP_H__
 150               	.LCFI7:
 151               		.cfi_def_cfa_register 28
 152               	/* prologue: function */
 153               	/* frame size = 4 */
 154               	/* stack size = 6 */
 155               	.L__stack_usage = 6
 156 00ba 9C83      		std Y+4,r25
 157 00bc 8B83      		std Y+3,r24
 995:lp_solve_5.5/colamd/colamd.c ****     /* === Local variables ================================================== */
 996:lp_solve_5.5/colamd/colamd.c **** 
 997:lp_solve_5.5/colamd/colamd.c ****     int i ;
 998:lp_solve_5.5/colamd/colamd.c **** 
 999:lp_solve_5.5/colamd/colamd.c ****     if (!knobs)
 158               		.loc 1 999 0
 159 00be 8B81      		ldd r24,Y+3
 160 00c0 9C81      		ldd r25,Y+4
 161 00c2 892B      		or r24,r25
 162 00c4 01F0      		breq .L10
1000:lp_solve_5.5/colamd/colamd.c ****     {
1001:lp_solve_5.5/colamd/colamd.c **** 	return ;			/* no knobs to initialize */
1002:lp_solve_5.5/colamd/colamd.c ****     }
1003:lp_solve_5.5/colamd/colamd.c ****     for (i = 0 ; i < COLAMD_KNOBS ; i++)
 163               		.loc 1 1003 0
 164 00c6 1A82      		std Y+2,__zero_reg__
 165 00c8 1982      		std Y+1,__zero_reg__
 166 00ca 00C0      		rjmp .L8
 167               	.L9:
1004:lp_solve_5.5/colamd/colamd.c ****     {
1005:lp_solve_5.5/colamd/colamd.c **** 	knobs [i] = 0 ;
 168               		.loc 1 1005 0 discriminator 3
 169 00cc 8981      		ldd r24,Y+1
 170 00ce 9A81      		ldd r25,Y+2
 171 00d0 880F      		lsl r24
 172 00d2 991F      		rol r25
 173 00d4 880F      		lsl r24
 174 00d6 991F      		rol r25
 175 00d8 2B81      		ldd r18,Y+3
 176 00da 3C81      		ldd r19,Y+4
 177 00dc 820F      		add r24,r18
 178 00de 931F      		adc r25,r19
 179 00e0 FC01      		movw r30,r24
 180 00e2 1082      		st Z,__zero_reg__
 181 00e4 1182      		std Z+1,__zero_reg__
 182 00e6 1282      		std Z+2,__zero_reg__
 183 00e8 1382      		std Z+3,__zero_reg__
1003:lp_solve_5.5/colamd/colamd.c ****     {
 184               		.loc 1 1003 0 discriminator 3
 185 00ea 8981      		ldd r24,Y+1
 186 00ec 9A81      		ldd r25,Y+2
 187 00ee 0196      		adiw r24,1
 188 00f0 9A83      		std Y+2,r25
 189 00f2 8983      		std Y+1,r24
 190               	.L8:
1003:lp_solve_5.5/colamd/colamd.c ****     {
 191               		.loc 1 1003 0 is_stmt 0 discriminator 1
 192 00f4 8981      		ldd r24,Y+1
 193 00f6 9A81      		ldd r25,Y+2
 194 00f8 4497      		sbiw r24,20
 195 00fa 04F0      		brlt .L9
1006:lp_solve_5.5/colamd/colamd.c ****     }
1007:lp_solve_5.5/colamd/colamd.c ****     knobs [COLAMD_DENSE_ROW] = 0.5 ;	/* ignore rows over 50% dense */
 196               		.loc 1 1007 0 is_stmt 1
 197 00fc 2B81      		ldd r18,Y+3
 198 00fe 3C81      		ldd r19,Y+4
 199 0100 80E0      		ldi r24,0
 200 0102 90E0      		ldi r25,0
 201 0104 A0E0      		ldi r26,0
 202 0106 BFE3      		ldi r27,lo8(63)
 203 0108 F901      		movw r30,r18
 204 010a 8083      		st Z,r24
 205 010c 9183      		std Z+1,r25
 206 010e A283      		std Z+2,r26
 207 0110 B383      		std Z+3,r27
1008:lp_solve_5.5/colamd/colamd.c ****     knobs [COLAMD_DENSE_COL] = 0.5 ;	/* ignore columns over 50% dense */
 208               		.loc 1 1008 0
 209 0112 8B81      		ldd r24,Y+3
 210 0114 9C81      		ldd r25,Y+4
 211 0116 9C01      		movw r18,r24
 212 0118 2C5F      		subi r18,-4
 213 011a 3F4F      		sbci r19,-1
 214 011c 80E0      		ldi r24,0
 215 011e 90E0      		ldi r25,0
 216 0120 A0E0      		ldi r26,0
 217 0122 BFE3      		ldi r27,lo8(63)
 218 0124 F901      		movw r30,r18
 219 0126 8083      		st Z,r24
 220 0128 9183      		std Z+1,r25
 221 012a A283      		std Z+2,r26
 222 012c B383      		std Z+3,r27
 223 012e 00C0      		rjmp .L5
 224               	.L10:
1001:lp_solve_5.5/colamd/colamd.c ****     }
 225               		.loc 1 1001 0
 226 0130 0000      		nop
 227               	.L5:
 228               	/* epilogue start */
1009:lp_solve_5.5/colamd/colamd.c **** }
 229               		.loc 1 1009 0
 230 0132 0F90      		pop __tmp_reg__
 231 0134 0F90      		pop __tmp_reg__
 232 0136 0F90      		pop __tmp_reg__
 233 0138 0F90      		pop __tmp_reg__
 234 013a DF91      		pop r29
 235 013c CF91      		pop r28
 236 013e 0895      		ret
 237               		.cfi_endproc
 238               	.LFE6:
 240               	.global	__floatsisf
 241               	.global	__mulsf3
 242               	.global	__divsf3
 243               	.global	symamd
 245               	symamd:
 246               	.LFB7:
1010:lp_solve_5.5/colamd/colamd.c **** 
1011:lp_solve_5.5/colamd/colamd.c **** 
1012:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
1013:lp_solve_5.5/colamd/colamd.c **** /* === symamd =============================================================== */
1014:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
1015:lp_solve_5.5/colamd/colamd.c **** 
1016:lp_solve_5.5/colamd/colamd.c **** PUBLIC int symamd			/* return TRUE if OK, FALSE otherwise */
1017:lp_solve_5.5/colamd/colamd.c **** (
1018:lp_solve_5.5/colamd/colamd.c ****     /* === Parameters ======================================================= */
1019:lp_solve_5.5/colamd/colamd.c **** 
1020:lp_solve_5.5/colamd/colamd.c ****     int n,				/* number of rows and columns of A */
1021:lp_solve_5.5/colamd/colamd.c ****     int A [],				/* row indices of A */
1022:lp_solve_5.5/colamd/colamd.c ****     int p [],				/* column pointers of A */
1023:lp_solve_5.5/colamd/colamd.c ****     int perm [],			/* output permutation, size n+1 */
1024:lp_solve_5.5/colamd/colamd.c ****     double knobs [COLAMD_KNOBS],	/* parameters (uses defaults if NULL) */
1025:lp_solve_5.5/colamd/colamd.c ****     int stats [COLAMD_STATS],		/* output statistics and error codes */
1026:lp_solve_5.5/colamd/colamd.c ****     void * (*allocate) (size_t, size_t),
1027:lp_solve_5.5/colamd/colamd.c ****     					/* pointer to calloc (ANSI C) or */
1028:lp_solve_5.5/colamd/colamd.c **** 					/* mxCalloc (for Matlab mexFunction) */
1029:lp_solve_5.5/colamd/colamd.c ****     void (*release) (void *)
1030:lp_solve_5.5/colamd/colamd.c ****     					/* pointer to free (ANSI C) or */
1031:lp_solve_5.5/colamd/colamd.c ****     					/* mxFree (for Matlab mexFunction) */
1032:lp_solve_5.5/colamd/colamd.c **** )
1033:lp_solve_5.5/colamd/colamd.c **** {
 247               		.loc 1 1033 0
 248               		.cfi_startproc
 249 0140 AF92      		push r10
 250               	.LCFI8:
 251               		.cfi_def_cfa_offset 3
 252               		.cfi_offset 10, -2
 253 0142 BF92      		push r11
 254               	.LCFI9:
 255               		.cfi_def_cfa_offset 4
 256               		.cfi_offset 11, -3
 257 0144 CF92      		push r12
 258               	.LCFI10:
 259               		.cfi_def_cfa_offset 5
 260               		.cfi_offset 12, -4
 261 0146 DF92      		push r13
 262               	.LCFI11:
 263               		.cfi_def_cfa_offset 6
 264               		.cfi_offset 13, -5
 265 0148 EF92      		push r14
 266               	.LCFI12:
 267               		.cfi_def_cfa_offset 7
 268               		.cfi_offset 14, -6
 269 014a FF92      		push r15
 270               	.LCFI13:
 271               		.cfi_def_cfa_offset 8
 272               		.cfi_offset 15, -7
 273 014c 0F93      		push r16
 274               	.LCFI14:
 275               		.cfi_def_cfa_offset 9
 276               		.cfi_offset 16, -8
 277 014e 1F93      		push r17
 278               	.LCFI15:
 279               		.cfi_def_cfa_offset 10
 280               		.cfi_offset 17, -9
 281 0150 CF93      		push r28
 282               	.LCFI16:
 283               		.cfi_def_cfa_offset 11
 284               		.cfi_offset 28, -10
 285 0152 DF93      		push r29
 286               	.LCFI17:
 287               		.cfi_def_cfa_offset 12
 288               		.cfi_offset 29, -11
 289 0154 CDB7      		in r28,__SP_L__
 290 0156 DEB7      		in r29,__SP_H__
 291               	.LCFI18:
 292               		.cfi_def_cfa_register 28
 293 0158 C45F      		subi r28,-12
 294 015a D109      		sbc r29,__zero_reg__
 295               	.LCFI19:
 296               		.cfi_def_cfa_offset 256
 297 015c 0FB6      		in __tmp_reg__,__SREG__
 298 015e F894      		cli
 299 0160 DEBF      		out __SP_H__,r29
 300 0162 0FBE      		out __SREG__,__tmp_reg__
 301 0164 CDBF      		out __SP_L__,r28
 302               	/* prologue: function */
 303               	/* frame size = 244 */
 304               	/* stack size = 254 */
 305               	.L__stack_usage = 254
 306 0166 FE01      		movw r30,r28
 307 0168 ED51      		subi r30,29
 308 016a FF4F      		sbci r31,-1
 309 016c 9183      		std Z+1,r25
 310 016e 8083      		st Z,r24
 311 0170 CE01      		movw r24,r28
 312 0172 8B51      		subi r24,27
 313 0174 9F4F      		sbci r25,-1
 314 0176 FC01      		movw r30,r24
 315 0178 7183      		std Z+1,r23
 316 017a 6083      		st Z,r22
 317 017c CE01      		movw r24,r28
 318 017e 8951      		subi r24,25
 319 0180 9F4F      		sbci r25,-1
 320 0182 FC01      		movw r30,r24
 321 0184 5183      		std Z+1,r21
 322 0186 4083      		st Z,r20
 323 0188 CE01      		movw r24,r28
 324 018a 8751      		subi r24,23
 325 018c 9F4F      		sbci r25,-1
 326 018e FC01      		movw r30,r24
 327 0190 3183      		std Z+1,r19
 328 0192 2083      		st Z,r18
 329 0194 CE01      		movw r24,r28
 330 0196 8551      		subi r24,21
 331 0198 9F4F      		sbci r25,-1
 332 019a FC01      		movw r30,r24
 333 019c 1183      		std Z+1,r17
 334 019e 0083      		st Z,r16
 335 01a0 CE01      		movw r24,r28
 336 01a2 8351      		subi r24,19
 337 01a4 9F4F      		sbci r25,-1
 338 01a6 FC01      		movw r30,r24
 339 01a8 F182      		std Z+1,r15
 340 01aa E082      		st Z,r14
 341 01ac CE01      		movw r24,r28
 342 01ae 8151      		subi r24,17
 343 01b0 9F4F      		sbci r25,-1
 344 01b2 FC01      		movw r30,r24
 345 01b4 D182      		std Z+1,r13
 346 01b6 C082      		st Z,r12
 347 01b8 CE01      		movw r24,r28
 348 01ba 8F50      		subi r24,15
 349 01bc 9F4F      		sbci r25,-1
 350 01be FC01      		movw r30,r24
 351 01c0 B182      		std Z+1,r11
 352 01c2 A082      		st Z,r10
1034:lp_solve_5.5/colamd/colamd.c ****     /* === Local variables ================================================== */
1035:lp_solve_5.5/colamd/colamd.c **** 
1036:lp_solve_5.5/colamd/colamd.c ****     int *count ;		/* length of each column of M, and col pointer*/
1037:lp_solve_5.5/colamd/colamd.c ****     int *mark ;			/* mark array for finding duplicate entries */
1038:lp_solve_5.5/colamd/colamd.c ****     int *M ;	      /* row indices of matrix M */
1039:lp_solve_5.5/colamd/colamd.c ****     int Mlen ;			/* length of M */
1040:lp_solve_5.5/colamd/colamd.c ****     int n_row ;			/* number of rows in M */
1041:lp_solve_5.5/colamd/colamd.c ****     int nnz ;			/* number of entries in A */
1042:lp_solve_5.5/colamd/colamd.c ****     int i ;			/* row index of A */
1043:lp_solve_5.5/colamd/colamd.c ****     int j ;			/* column index of A */
1044:lp_solve_5.5/colamd/colamd.c ****     int k ;			/* row index of M */ 
1045:lp_solve_5.5/colamd/colamd.c ****     int mnz ;			/* number of nonzeros in M */
1046:lp_solve_5.5/colamd/colamd.c ****     int pp ;			/* index into a column of A */
1047:lp_solve_5.5/colamd/colamd.c ****     int last_row ;		/* last row seen in the current column */
1048:lp_solve_5.5/colamd/colamd.c ****     int length ;		/* number of nonzeros in a column */
1049:lp_solve_5.5/colamd/colamd.c **** 
1050:lp_solve_5.5/colamd/colamd.c ****     double cknobs [COLAMD_KNOBS] ;		/* knobs for colamd */
1051:lp_solve_5.5/colamd/colamd.c ****     double default_knobs [COLAMD_KNOBS] ;	/* default knobs for colamd */
1052:lp_solve_5.5/colamd/colamd.c ****     int cstats [COLAMD_STATS] ;			/* colamd stats */
1053:lp_solve_5.5/colamd/colamd.c **** 
1054:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
1055:lp_solve_5.5/colamd/colamd.c ****     colamd_get_debug ("symamd") ;
1056:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
1057:lp_solve_5.5/colamd/colamd.c **** 
1058:lp_solve_5.5/colamd/colamd.c ****     /* === Check the input arguments ======================================== */
1059:lp_solve_5.5/colamd/colamd.c **** 
1060:lp_solve_5.5/colamd/colamd.c ****     if (!stats)
 353               		.loc 1 1060 0
 354 01c4 CE01      		movw r24,r28
 355 01c6 8351      		subi r24,19
 356 01c8 9F4F      		sbci r25,-1
 357 01ca FC01      		movw r30,r24
 358 01cc 8081      		ld r24,Z
 359 01ce 9181      		ldd r25,Z+1
 360 01d0 892B      		or r24,r25
 361 01d2 01F4      		brne .L12
1061:lp_solve_5.5/colamd/colamd.c ****     {
1062:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("symamd: stats not present\n")) ;
1063:lp_solve_5.5/colamd/colamd.c **** 	return (FALSE) ;
 362               		.loc 1 1063 0
 363 01d4 80E0      		ldi r24,0
 364 01d6 90E0      		ldi r25,0
 365 01d8 00C0      		rjmp .L62
 366               	.L12:
1064:lp_solve_5.5/colamd/colamd.c ****     }
1065:lp_solve_5.5/colamd/colamd.c ****     for (i = 0 ; i < COLAMD_STATS ; i++)
 367               		.loc 1 1065 0
 368 01da 1A82      		std Y+2,__zero_reg__
 369 01dc 1982      		std Y+1,__zero_reg__
 370 01de 00C0      		rjmp .L14
 371               	.L15:
1066:lp_solve_5.5/colamd/colamd.c ****     {
1067:lp_solve_5.5/colamd/colamd.c **** 	stats [i] = 0 ;
 372               		.loc 1 1067 0 discriminator 3
 373 01e0 8981      		ldd r24,Y+1
 374 01e2 9A81      		ldd r25,Y+2
 375 01e4 880F      		lsl r24
 376 01e6 991F      		rol r25
 377 01e8 9E01      		movw r18,r28
 378 01ea 2351      		subi r18,19
 379 01ec 3F4F      		sbci r19,-1
 380 01ee F901      		movw r30,r18
 381 01f0 2081      		ld r18,Z
 382 01f2 3181      		ldd r19,Z+1
 383 01f4 820F      		add r24,r18
 384 01f6 931F      		adc r25,r19
 385 01f8 FC01      		movw r30,r24
 386 01fa 1182      		std Z+1,__zero_reg__
 387 01fc 1082      		st Z,__zero_reg__
1065:lp_solve_5.5/colamd/colamd.c ****     {
 388               		.loc 1 1065 0 discriminator 3
 389 01fe 8981      		ldd r24,Y+1
 390 0200 9A81      		ldd r25,Y+2
 391 0202 0196      		adiw r24,1
 392 0204 9A83      		std Y+2,r25
 393 0206 8983      		std Y+1,r24
 394               	.L14:
1065:lp_solve_5.5/colamd/colamd.c ****     {
 395               		.loc 1 1065 0 is_stmt 0 discriminator 1
 396 0208 8981      		ldd r24,Y+1
 397 020a 9A81      		ldd r25,Y+2
 398 020c 4497      		sbiw r24,20
 399 020e 04F0      		brlt .L15
1068:lp_solve_5.5/colamd/colamd.c ****     }
1069:lp_solve_5.5/colamd/colamd.c ****     stats [COLAMD_STATUS] = COLAMD_OK ;
 400               		.loc 1 1069 0 is_stmt 1
 401 0210 CE01      		movw r24,r28
 402 0212 8351      		subi r24,19
 403 0214 9F4F      		sbci r25,-1
 404 0216 FC01      		movw r30,r24
 405 0218 8081      		ld r24,Z
 406 021a 9181      		ldd r25,Z+1
 407 021c 0696      		adiw r24,6
 408 021e FC01      		movw r30,r24
 409 0220 1182      		std Z+1,__zero_reg__
 410 0222 1082      		st Z,__zero_reg__
1070:lp_solve_5.5/colamd/colamd.c ****     stats [COLAMD_INFO1] = -1 ;
 411               		.loc 1 1070 0
 412 0224 CE01      		movw r24,r28
 413 0226 8351      		subi r24,19
 414 0228 9F4F      		sbci r25,-1
 415 022a FC01      		movw r30,r24
 416 022c 8081      		ld r24,Z
 417 022e 9181      		ldd r25,Z+1
 418 0230 0896      		adiw r24,8
 419 0232 2FEF      		ldi r18,lo8(-1)
 420 0234 3FEF      		ldi r19,lo8(-1)
 421 0236 FC01      		movw r30,r24
 422 0238 3183      		std Z+1,r19
 423 023a 2083      		st Z,r18
1071:lp_solve_5.5/colamd/colamd.c ****     stats [COLAMD_INFO2] = -1 ;
 424               		.loc 1 1071 0
 425 023c CE01      		movw r24,r28
 426 023e 8351      		subi r24,19
 427 0240 9F4F      		sbci r25,-1
 428 0242 FC01      		movw r30,r24
 429 0244 8081      		ld r24,Z
 430 0246 9181      		ldd r25,Z+1
 431 0248 0A96      		adiw r24,10
 432 024a 2FEF      		ldi r18,lo8(-1)
 433 024c 3FEF      		ldi r19,lo8(-1)
 434 024e FC01      		movw r30,r24
 435 0250 3183      		std Z+1,r19
 436 0252 2083      		st Z,r18
1072:lp_solve_5.5/colamd/colamd.c **** 
1073:lp_solve_5.5/colamd/colamd.c ****     if (!A)
 437               		.loc 1 1073 0
 438 0254 CE01      		movw r24,r28
 439 0256 8B51      		subi r24,27
 440 0258 9F4F      		sbci r25,-1
 441 025a FC01      		movw r30,r24
 442 025c 8081      		ld r24,Z
 443 025e 9181      		ldd r25,Z+1
 444 0260 892B      		or r24,r25
 445 0262 01F4      		brne .L16
1074:lp_solve_5.5/colamd/colamd.c ****     {
1075:lp_solve_5.5/colamd/colamd.c ****     	stats [COLAMD_STATUS] = COLAMD_ERROR_A_not_present ;
 446               		.loc 1 1075 0
 447 0264 CE01      		movw r24,r28
 448 0266 8351      		subi r24,19
 449 0268 9F4F      		sbci r25,-1
 450 026a FC01      		movw r30,r24
 451 026c 8081      		ld r24,Z
 452 026e 9181      		ldd r25,Z+1
 453 0270 0696      		adiw r24,6
 454 0272 2FEF      		ldi r18,lo8(-1)
 455 0274 3FEF      		ldi r19,lo8(-1)
 456 0276 FC01      		movw r30,r24
 457 0278 3183      		std Z+1,r19
 458 027a 2083      		st Z,r18
1076:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("symamd: A not present\n")) ;
1077:lp_solve_5.5/colamd/colamd.c **** 	return (FALSE) ;
 459               		.loc 1 1077 0
 460 027c 80E0      		ldi r24,0
 461 027e 90E0      		ldi r25,0
 462 0280 00C0      		rjmp .L62
 463               	.L16:
1078:lp_solve_5.5/colamd/colamd.c ****     }
1079:lp_solve_5.5/colamd/colamd.c **** 
1080:lp_solve_5.5/colamd/colamd.c ****     if (!p)		/* p is not present */
 464               		.loc 1 1080 0
 465 0282 CE01      		movw r24,r28
 466 0284 8951      		subi r24,25
 467 0286 9F4F      		sbci r25,-1
 468 0288 FC01      		movw r30,r24
 469 028a 8081      		ld r24,Z
 470 028c 9181      		ldd r25,Z+1
 471 028e 892B      		or r24,r25
 472 0290 01F4      		brne .L17
1081:lp_solve_5.5/colamd/colamd.c ****     {
1082:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_STATUS] = COLAMD_ERROR_p_not_present ;
 473               		.loc 1 1082 0
 474 0292 CE01      		movw r24,r28
 475 0294 8351      		subi r24,19
 476 0296 9F4F      		sbci r25,-1
 477 0298 FC01      		movw r30,r24
 478 029a 8081      		ld r24,Z
 479 029c 9181      		ldd r25,Z+1
 480 029e 0696      		adiw r24,6
 481 02a0 2EEF      		ldi r18,lo8(-2)
 482 02a2 3FEF      		ldi r19,lo8(-1)
 483 02a4 FC01      		movw r30,r24
 484 02a6 3183      		std Z+1,r19
 485 02a8 2083      		st Z,r18
1083:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("symamd: p not present\n")) ;
1084:lp_solve_5.5/colamd/colamd.c ****     	return (FALSE) ;
 486               		.loc 1 1084 0
 487 02aa 80E0      		ldi r24,0
 488 02ac 90E0      		ldi r25,0
 489 02ae 00C0      		rjmp .L62
 490               	.L17:
1085:lp_solve_5.5/colamd/colamd.c ****     }
1086:lp_solve_5.5/colamd/colamd.c **** 
1087:lp_solve_5.5/colamd/colamd.c ****     if (n < 0)		/* n must be >= 0 */
 491               		.loc 1 1087 0
 492 02b0 CE01      		movw r24,r28
 493 02b2 8D51      		subi r24,29
 494 02b4 9F4F      		sbci r25,-1
 495 02b6 FC01      		movw r30,r24
 496 02b8 8081      		ld r24,Z
 497 02ba 9181      		ldd r25,Z+1
 498 02bc 9923      		tst r25
 499 02be 04F4      		brge .L18
1088:lp_solve_5.5/colamd/colamd.c ****     {
1089:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_STATUS] = COLAMD_ERROR_ncol_negative ;
 500               		.loc 1 1089 0
 501 02c0 CE01      		movw r24,r28
 502 02c2 8351      		subi r24,19
 503 02c4 9F4F      		sbci r25,-1
 504 02c6 FC01      		movw r30,r24
 505 02c8 8081      		ld r24,Z
 506 02ca 9181      		ldd r25,Z+1
 507 02cc 0696      		adiw r24,6
 508 02ce 2CEF      		ldi r18,lo8(-4)
 509 02d0 3FEF      		ldi r19,lo8(-1)
 510 02d2 FC01      		movw r30,r24
 511 02d4 3183      		std Z+1,r19
 512 02d6 2083      		st Z,r18
1090:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_INFO1] = n ;
 513               		.loc 1 1090 0
 514 02d8 CE01      		movw r24,r28
 515 02da 8351      		subi r24,19
 516 02dc 9F4F      		sbci r25,-1
 517 02de FC01      		movw r30,r24
 518 02e0 8081      		ld r24,Z
 519 02e2 9181      		ldd r25,Z+1
 520 02e4 0896      		adiw r24,8
 521 02e6 9E01      		movw r18,r28
 522 02e8 2D51      		subi r18,29
 523 02ea 3F4F      		sbci r19,-1
 524 02ec F901      		movw r30,r18
 525 02ee 2081      		ld r18,Z
 526 02f0 3181      		ldd r19,Z+1
 527 02f2 FC01      		movw r30,r24
 528 02f4 3183      		std Z+1,r19
 529 02f6 2083      		st Z,r18
1091:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("symamd: n negative %d\n", n)) ;
1092:lp_solve_5.5/colamd/colamd.c ****     	return (FALSE) ;
 530               		.loc 1 1092 0
 531 02f8 80E0      		ldi r24,0
 532 02fa 90E0      		ldi r25,0
 533 02fc 00C0      		rjmp .L62
 534               	.L18:
1093:lp_solve_5.5/colamd/colamd.c ****     }
1094:lp_solve_5.5/colamd/colamd.c **** 
1095:lp_solve_5.5/colamd/colamd.c ****     nnz = p [n] ;
 535               		.loc 1 1095 0
 536 02fe CE01      		movw r24,r28
 537 0300 8D51      		subi r24,29
 538 0302 9F4F      		sbci r25,-1
 539 0304 FC01      		movw r30,r24
 540 0306 8081      		ld r24,Z
 541 0308 9181      		ldd r25,Z+1
 542 030a 880F      		lsl r24
 543 030c 991F      		rol r25
 544 030e 9E01      		movw r18,r28
 545 0310 2951      		subi r18,25
 546 0312 3F4F      		sbci r19,-1
 547 0314 F901      		movw r30,r18
 548 0316 2081      		ld r18,Z
 549 0318 3181      		ldd r19,Z+1
 550 031a 820F      		add r24,r18
 551 031c 931F      		adc r25,r19
 552 031e FC01      		movw r30,r24
 553 0320 8081      		ld r24,Z
 554 0322 9181      		ldd r25,Z+1
 555 0324 9C87      		std Y+12,r25
 556 0326 8B87      		std Y+11,r24
1096:lp_solve_5.5/colamd/colamd.c ****     if (nnz < 0)	/* nnz must be >= 0 */
 557               		.loc 1 1096 0
 558 0328 8B85      		ldd r24,Y+11
 559 032a 9C85      		ldd r25,Y+12
 560 032c 9923      		tst r25
 561 032e 04F4      		brge .L19
1097:lp_solve_5.5/colamd/colamd.c ****     {
1098:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_STATUS] = COLAMD_ERROR_nnz_negative ;
 562               		.loc 1 1098 0
 563 0330 CE01      		movw r24,r28
 564 0332 8351      		subi r24,19
 565 0334 9F4F      		sbci r25,-1
 566 0336 FC01      		movw r30,r24
 567 0338 8081      		ld r24,Z
 568 033a 9181      		ldd r25,Z+1
 569 033c 0696      		adiw r24,6
 570 033e 2BEF      		ldi r18,lo8(-5)
 571 0340 3FEF      		ldi r19,lo8(-1)
 572 0342 FC01      		movw r30,r24
 573 0344 3183      		std Z+1,r19
 574 0346 2083      		st Z,r18
1099:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_INFO1] = nnz ;
 575               		.loc 1 1099 0
 576 0348 CE01      		movw r24,r28
 577 034a 8351      		subi r24,19
 578 034c 9F4F      		sbci r25,-1
 579 034e FC01      		movw r30,r24
 580 0350 8081      		ld r24,Z
 581 0352 9181      		ldd r25,Z+1
 582 0354 0896      		adiw r24,8
 583 0356 2B85      		ldd r18,Y+11
 584 0358 3C85      		ldd r19,Y+12
 585 035a FC01      		movw r30,r24
 586 035c 3183      		std Z+1,r19
 587 035e 2083      		st Z,r18
1100:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("symamd: number of entries negative %d\n", nnz)) ;
1101:lp_solve_5.5/colamd/colamd.c **** 	return (FALSE) ;
 588               		.loc 1 1101 0
 589 0360 80E0      		ldi r24,0
 590 0362 90E0      		ldi r25,0
 591 0364 00C0      		rjmp .L62
 592               	.L19:
1102:lp_solve_5.5/colamd/colamd.c ****     }
1103:lp_solve_5.5/colamd/colamd.c **** 
1104:lp_solve_5.5/colamd/colamd.c ****     if (p [0] != 0)
 593               		.loc 1 1104 0
 594 0366 CE01      		movw r24,r28
 595 0368 8951      		subi r24,25
 596 036a 9F4F      		sbci r25,-1
 597 036c FC01      		movw r30,r24
 598 036e 8081      		ld r24,Z
 599 0370 9181      		ldd r25,Z+1
 600 0372 FC01      		movw r30,r24
 601 0374 8081      		ld r24,Z
 602 0376 9181      		ldd r25,Z+1
 603 0378 892B      		or r24,r25
 604 037a 01F0      		breq .L20
1105:lp_solve_5.5/colamd/colamd.c ****     {
1106:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_STATUS] = COLAMD_ERROR_p0_nonzero ;
 605               		.loc 1 1106 0
 606 037c CE01      		movw r24,r28
 607 037e 8351      		subi r24,19
 608 0380 9F4F      		sbci r25,-1
 609 0382 FC01      		movw r30,r24
 610 0384 8081      		ld r24,Z
 611 0386 9181      		ldd r25,Z+1
 612 0388 0696      		adiw r24,6
 613 038a 2AEF      		ldi r18,lo8(-6)
 614 038c 3FEF      		ldi r19,lo8(-1)
 615 038e FC01      		movw r30,r24
 616 0390 3183      		std Z+1,r19
 617 0392 2083      		st Z,r18
1107:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_INFO1] = p [0] ;
 618               		.loc 1 1107 0
 619 0394 CE01      		movw r24,r28
 620 0396 8351      		subi r24,19
 621 0398 9F4F      		sbci r25,-1
 622 039a FC01      		movw r30,r24
 623 039c 8081      		ld r24,Z
 624 039e 9181      		ldd r25,Z+1
 625 03a0 0896      		adiw r24,8
 626 03a2 9E01      		movw r18,r28
 627 03a4 2951      		subi r18,25
 628 03a6 3F4F      		sbci r19,-1
 629 03a8 F901      		movw r30,r18
 630 03aa 2081      		ld r18,Z
 631 03ac 3181      		ldd r19,Z+1
 632 03ae F901      		movw r30,r18
 633 03b0 2081      		ld r18,Z
 634 03b2 3181      		ldd r19,Z+1
 635 03b4 FC01      		movw r30,r24
 636 03b6 3183      		std Z+1,r19
 637 03b8 2083      		st Z,r18
1108:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("symamd: p[0] not zero %d\n", p [0])) ;
1109:lp_solve_5.5/colamd/colamd.c **** 	return (FALSE) ;
 638               		.loc 1 1109 0
 639 03ba 80E0      		ldi r24,0
 640 03bc 90E0      		ldi r25,0
 641 03be 00C0      		rjmp .L62
 642               	.L20:
1110:lp_solve_5.5/colamd/colamd.c ****     }
1111:lp_solve_5.5/colamd/colamd.c **** 
1112:lp_solve_5.5/colamd/colamd.c ****     /* === If no knobs, set default knobs =================================== */
1113:lp_solve_5.5/colamd/colamd.c **** 
1114:lp_solve_5.5/colamd/colamd.c ****     if (!knobs)
 643               		.loc 1 1114 0
 644 03c0 CE01      		movw r24,r28
 645 03c2 8551      		subi r24,21
 646 03c4 9F4F      		sbci r25,-1
 647 03c6 FC01      		movw r30,r24
 648 03c8 8081      		ld r24,Z
 649 03ca 9181      		ldd r25,Z+1
 650 03cc 892B      		or r24,r25
 651 03ce 01F4      		brne .L21
1115:lp_solve_5.5/colamd/colamd.c ****     {
1116:lp_solve_5.5/colamd/colamd.c **** 	colamd_set_defaults (default_knobs) ;
 652               		.loc 1 1116 0
 653 03d0 CE01      		movw r24,r28
 654 03d2 8559      		subi r24,-107
 655 03d4 9F4F      		sbci r25,-1
 656 03d6 0E94 0000 		call colamd_set_defaults
1117:lp_solve_5.5/colamd/colamd.c **** 	knobs = default_knobs ;
 657               		.loc 1 1117 0
 658 03da CE01      		movw r24,r28
 659 03dc 8551      		subi r24,21
 660 03de 9F4F      		sbci r25,-1
 661 03e0 9E01      		movw r18,r28
 662 03e2 2559      		subi r18,-107
 663 03e4 3F4F      		sbci r19,-1
 664 03e6 FC01      		movw r30,r24
 665 03e8 3183      		std Z+1,r19
 666 03ea 2083      		st Z,r18
 667               	.L21:
1118:lp_solve_5.5/colamd/colamd.c ****     }
1119:lp_solve_5.5/colamd/colamd.c **** 
1120:lp_solve_5.5/colamd/colamd.c ****     /* === Allocate count and mark ========================================== */
1121:lp_solve_5.5/colamd/colamd.c **** 
1122:lp_solve_5.5/colamd/colamd.c ****     count = (int *) ((*allocate) (n+1, sizeof (int))) ;
 668               		.loc 1 1122 0
 669 03ec CE01      		movw r24,r28
 670 03ee 8D51      		subi r24,29
 671 03f0 9F4F      		sbci r25,-1
 672 03f2 FC01      		movw r30,r24
 673 03f4 8081      		ld r24,Z
 674 03f6 9181      		ldd r25,Z+1
 675 03f8 0196      		adiw r24,1
 676 03fa AC01      		movw r20,r24
 677 03fc CE01      		movw r24,r28
 678 03fe 8151      		subi r24,17
 679 0400 9F4F      		sbci r25,-1
 680 0402 FC01      		movw r30,r24
 681 0404 2081      		ld r18,Z
 682 0406 3181      		ldd r19,Z+1
 683 0408 62E0      		ldi r22,lo8(2)
 684 040a 70E0      		ldi r23,0
 685 040c CA01      		movw r24,r20
 686 040e F901      		movw r30,r18
 687 0410 0995      		icall
 688 0412 9E87      		std Y+14,r25
 689 0414 8D87      		std Y+13,r24
1123:lp_solve_5.5/colamd/colamd.c ****     if (!count)
 690               		.loc 1 1123 0
 691 0416 8D85      		ldd r24,Y+13
 692 0418 9E85      		ldd r25,Y+14
 693 041a 892B      		or r24,r25
 694 041c 01F4      		brne .L22
1124:lp_solve_5.5/colamd/colamd.c ****     {
1125:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_STATUS] = COLAMD_ERROR_out_of_memory ;
 695               		.loc 1 1125 0
 696 041e CE01      		movw r24,r28
 697 0420 8351      		subi r24,19
 698 0422 9F4F      		sbci r25,-1
 699 0424 FC01      		movw r30,r24
 700 0426 8081      		ld r24,Z
 701 0428 9181      		ldd r25,Z+1
 702 042a 0696      		adiw r24,6
 703 042c 26EF      		ldi r18,lo8(-10)
 704 042e 3FEF      		ldi r19,lo8(-1)
 705 0430 FC01      		movw r30,r24
 706 0432 3183      		std Z+1,r19
 707 0434 2083      		st Z,r18
1126:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("symamd: allocate count (size %d) failed\n", n+1)) ;
1127:lp_solve_5.5/colamd/colamd.c **** 	return (FALSE) ;
 708               		.loc 1 1127 0
 709 0436 80E0      		ldi r24,0
 710 0438 90E0      		ldi r25,0
 711 043a 00C0      		rjmp .L62
 712               	.L22:
1128:lp_solve_5.5/colamd/colamd.c ****     }
1129:lp_solve_5.5/colamd/colamd.c **** 
1130:lp_solve_5.5/colamd/colamd.c ****     mark = (int *) ((*allocate) (n+1, sizeof (int))) ;
 713               		.loc 1 1130 0
 714 043c CE01      		movw r24,r28
 715 043e 8D51      		subi r24,29
 716 0440 9F4F      		sbci r25,-1
 717 0442 FC01      		movw r30,r24
 718 0444 8081      		ld r24,Z
 719 0446 9181      		ldd r25,Z+1
 720 0448 0196      		adiw r24,1
 721 044a AC01      		movw r20,r24
 722 044c CE01      		movw r24,r28
 723 044e 8151      		subi r24,17
 724 0450 9F4F      		sbci r25,-1
 725 0452 FC01      		movw r30,r24
 726 0454 2081      		ld r18,Z
 727 0456 3181      		ldd r19,Z+1
 728 0458 62E0      		ldi r22,lo8(2)
 729 045a 70E0      		ldi r23,0
 730 045c CA01      		movw r24,r20
 731 045e F901      		movw r30,r18
 732 0460 0995      		icall
 733 0462 988B      		std Y+16,r25
 734 0464 8F87      		std Y+15,r24
1131:lp_solve_5.5/colamd/colamd.c ****     if (!mark)
 735               		.loc 1 1131 0
 736 0466 8F85      		ldd r24,Y+15
 737 0468 9889      		ldd r25,Y+16
 738 046a 892B      		or r24,r25
 739 046c 01F4      		brne .L23
1132:lp_solve_5.5/colamd/colamd.c ****     {
1133:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_STATUS] = COLAMD_ERROR_out_of_memory ;
 740               		.loc 1 1133 0
 741 046e CE01      		movw r24,r28
 742 0470 8351      		subi r24,19
 743 0472 9F4F      		sbci r25,-1
 744 0474 FC01      		movw r30,r24
 745 0476 8081      		ld r24,Z
 746 0478 9181      		ldd r25,Z+1
 747 047a 0696      		adiw r24,6
 748 047c 26EF      		ldi r18,lo8(-10)
 749 047e 3FEF      		ldi r19,lo8(-1)
 750 0480 FC01      		movw r30,r24
 751 0482 3183      		std Z+1,r19
 752 0484 2083      		st Z,r18
1134:lp_solve_5.5/colamd/colamd.c **** 	(*release) ((void *) count) ;
 753               		.loc 1 1134 0
 754 0486 4D85      		ldd r20,Y+13
 755 0488 5E85      		ldd r21,Y+14
 756 048a CE01      		movw r24,r28
 757 048c 8F50      		subi r24,15
 758 048e 9F4F      		sbci r25,-1
 759 0490 FC01      		movw r30,r24
 760 0492 2081      		ld r18,Z
 761 0494 3181      		ldd r19,Z+1
 762 0496 CA01      		movw r24,r20
 763 0498 F901      		movw r30,r18
 764 049a 0995      		icall
1135:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("symamd: allocate mark (size %d) failed\n", n+1)) ;
1136:lp_solve_5.5/colamd/colamd.c **** 	return (FALSE) ;
 765               		.loc 1 1136 0
 766 049c 80E0      		ldi r24,0
 767 049e 90E0      		ldi r25,0
 768 04a0 00C0      		rjmp .L62
 769               	.L23:
1137:lp_solve_5.5/colamd/colamd.c ****     }
1138:lp_solve_5.5/colamd/colamd.c **** 
1139:lp_solve_5.5/colamd/colamd.c ****     /* === Compute column counts of M, check if A is valid ================== */
1140:lp_solve_5.5/colamd/colamd.c **** 
1141:lp_solve_5.5/colamd/colamd.c ****     stats [COLAMD_INFO3] = 0 ;  /* number of duplicate or unsorted row indices*/
 770               		.loc 1 1141 0
 771 04a2 CE01      		movw r24,r28
 772 04a4 8351      		subi r24,19
 773 04a6 9F4F      		sbci r25,-1
 774 04a8 FC01      		movw r30,r24
 775 04aa 8081      		ld r24,Z
 776 04ac 9181      		ldd r25,Z+1
 777 04ae 0C96      		adiw r24,12
 778 04b0 FC01      		movw r30,r24
 779 04b2 1182      		std Z+1,__zero_reg__
 780 04b4 1082      		st Z,__zero_reg__
1142:lp_solve_5.5/colamd/colamd.c **** 
1143:lp_solve_5.5/colamd/colamd.c ****     for (i = 0 ; i < n ; i++)
 781               		.loc 1 1143 0
 782 04b6 1A82      		std Y+2,__zero_reg__
 783 04b8 1982      		std Y+1,__zero_reg__
 784 04ba 00C0      		rjmp .L24
 785               	.L25:
1144:lp_solve_5.5/colamd/colamd.c ****     {
1145:lp_solve_5.5/colamd/colamd.c ****     	mark [i] = -1 ;
 786               		.loc 1 1145 0 discriminator 3
 787 04bc 8981      		ldd r24,Y+1
 788 04be 9A81      		ldd r25,Y+2
 789 04c0 880F      		lsl r24
 790 04c2 991F      		rol r25
 791 04c4 2F85      		ldd r18,Y+15
 792 04c6 3889      		ldd r19,Y+16
 793 04c8 820F      		add r24,r18
 794 04ca 931F      		adc r25,r19
 795 04cc 2FEF      		ldi r18,lo8(-1)
 796 04ce 3FEF      		ldi r19,lo8(-1)
 797 04d0 FC01      		movw r30,r24
 798 04d2 3183      		std Z+1,r19
 799 04d4 2083      		st Z,r18
1143:lp_solve_5.5/colamd/colamd.c ****     {
 800               		.loc 1 1143 0 discriminator 3
 801 04d6 8981      		ldd r24,Y+1
 802 04d8 9A81      		ldd r25,Y+2
 803 04da 0196      		adiw r24,1
 804 04dc 9A83      		std Y+2,r25
 805 04de 8983      		std Y+1,r24
 806               	.L24:
1143:lp_solve_5.5/colamd/colamd.c ****     {
 807               		.loc 1 1143 0 is_stmt 0 discriminator 1
 808 04e0 CE01      		movw r24,r28
 809 04e2 8D51      		subi r24,29
 810 04e4 9F4F      		sbci r25,-1
 811 04e6 2981      		ldd r18,Y+1
 812 04e8 3A81      		ldd r19,Y+2
 813 04ea FC01      		movw r30,r24
 814 04ec 8081      		ld r24,Z
 815 04ee 9181      		ldd r25,Z+1
 816 04f0 2817      		cp r18,r24
 817 04f2 3907      		cpc r19,r25
 818 04f4 04F0      		brlt .L25
1146:lp_solve_5.5/colamd/colamd.c ****     }
1147:lp_solve_5.5/colamd/colamd.c **** 
1148:lp_solve_5.5/colamd/colamd.c ****     for (j = 0 ; j < n ; j++)
 819               		.loc 1 1148 0 is_stmt 1
 820 04f6 1C82      		std Y+4,__zero_reg__
 821 04f8 1B82      		std Y+3,__zero_reg__
 822 04fa 00C0      		rjmp .L26
 823               	.L35:
1149:lp_solve_5.5/colamd/colamd.c ****     {
1150:lp_solve_5.5/colamd/colamd.c **** 	last_row = -1 ;
 824               		.loc 1 1150 0
 825 04fc 8FEF      		ldi r24,lo8(-1)
 826 04fe 9FEF      		ldi r25,lo8(-1)
 827 0500 9A87      		std Y+10,r25
 828 0502 8987      		std Y+9,r24
1151:lp_solve_5.5/colamd/colamd.c **** 
1152:lp_solve_5.5/colamd/colamd.c **** 	length = p [j+1] - p [j] ;
 829               		.loc 1 1152 0
 830 0504 8B81      		ldd r24,Y+3
 831 0506 9C81      		ldd r25,Y+4
 832 0508 0196      		adiw r24,1
 833 050a 880F      		lsl r24
 834 050c 991F      		rol r25
 835 050e 9E01      		movw r18,r28
 836 0510 2951      		subi r18,25
 837 0512 3F4F      		sbci r19,-1
 838 0514 F901      		movw r30,r18
 839 0516 2081      		ld r18,Z
 840 0518 3181      		ldd r19,Z+1
 841 051a 820F      		add r24,r18
 842 051c 931F      		adc r25,r19
 843 051e FC01      		movw r30,r24
 844 0520 2081      		ld r18,Z
 845 0522 3181      		ldd r19,Z+1
 846 0524 8B81      		ldd r24,Y+3
 847 0526 9C81      		ldd r25,Y+4
 848 0528 880F      		lsl r24
 849 052a 991F      		rol r25
 850 052c AE01      		movw r20,r28
 851 052e 4951      		subi r20,25
 852 0530 5F4F      		sbci r21,-1
 853 0532 FA01      		movw r30,r20
 854 0534 4081      		ld r20,Z
 855 0536 5181      		ldd r21,Z+1
 856 0538 840F      		add r24,r20
 857 053a 951F      		adc r25,r21
 858 053c FC01      		movw r30,r24
 859 053e 8081      		ld r24,Z
 860 0540 9181      		ldd r25,Z+1
 861 0542 A901      		movw r20,r18
 862 0544 481B      		sub r20,r24
 863 0546 590B      		sbc r21,r25
 864 0548 CA01      		movw r24,r20
 865 054a 9A8B      		std Y+18,r25
 866 054c 898B      		std Y+17,r24
1153:lp_solve_5.5/colamd/colamd.c **** 	if (length < 0)
 867               		.loc 1 1153 0
 868 054e 8989      		ldd r24,Y+17
 869 0550 9A89      		ldd r25,Y+18
 870 0552 9923      		tst r25
 871 0554 04F4      		brge .L27
1154:lp_solve_5.5/colamd/colamd.c **** 	{
1155:lp_solve_5.5/colamd/colamd.c **** 	    /* column pointers must be non-decreasing */
1156:lp_solve_5.5/colamd/colamd.c **** 	    stats [COLAMD_STATUS] = COLAMD_ERROR_col_length_negative ;
 872               		.loc 1 1156 0
 873 0556 CE01      		movw r24,r28
 874 0558 8351      		subi r24,19
 875 055a 9F4F      		sbci r25,-1
 876 055c FC01      		movw r30,r24
 877 055e 8081      		ld r24,Z
 878 0560 9181      		ldd r25,Z+1
 879 0562 0696      		adiw r24,6
 880 0564 28EF      		ldi r18,lo8(-8)
 881 0566 3FEF      		ldi r19,lo8(-1)
 882 0568 FC01      		movw r30,r24
 883 056a 3183      		std Z+1,r19
 884 056c 2083      		st Z,r18
1157:lp_solve_5.5/colamd/colamd.c **** 	    stats [COLAMD_INFO1] = j ;
 885               		.loc 1 1157 0
 886 056e CE01      		movw r24,r28
 887 0570 8351      		subi r24,19
 888 0572 9F4F      		sbci r25,-1
 889 0574 FC01      		movw r30,r24
 890 0576 8081      		ld r24,Z
 891 0578 9181      		ldd r25,Z+1
 892 057a 0896      		adiw r24,8
 893 057c 2B81      		ldd r18,Y+3
 894 057e 3C81      		ldd r19,Y+4
 895 0580 FC01      		movw r30,r24
 896 0582 3183      		std Z+1,r19
 897 0584 2083      		st Z,r18
1158:lp_solve_5.5/colamd/colamd.c **** 	    stats [COLAMD_INFO2] = length ;
 898               		.loc 1 1158 0
 899 0586 CE01      		movw r24,r28
 900 0588 8351      		subi r24,19
 901 058a 9F4F      		sbci r25,-1
 902 058c FC01      		movw r30,r24
 903 058e 8081      		ld r24,Z
 904 0590 9181      		ldd r25,Z+1
 905 0592 0A96      		adiw r24,10
 906 0594 2989      		ldd r18,Y+17
 907 0596 3A89      		ldd r19,Y+18
 908 0598 FC01      		movw r30,r24
 909 059a 3183      		std Z+1,r19
 910 059c 2083      		st Z,r18
1159:lp_solve_5.5/colamd/colamd.c **** 	    (*release) ((void *) count) ;
 911               		.loc 1 1159 0
 912 059e 4D85      		ldd r20,Y+13
 913 05a0 5E85      		ldd r21,Y+14
 914 05a2 CE01      		movw r24,r28
 915 05a4 8F50      		subi r24,15
 916 05a6 9F4F      		sbci r25,-1
 917 05a8 FC01      		movw r30,r24
 918 05aa 2081      		ld r18,Z
 919 05ac 3181      		ldd r19,Z+1
 920 05ae CA01      		movw r24,r20
 921 05b0 F901      		movw r30,r18
 922 05b2 0995      		icall
1160:lp_solve_5.5/colamd/colamd.c **** 	    (*release) ((void *) mark) ;
 923               		.loc 1 1160 0
 924 05b4 4F85      		ldd r20,Y+15
 925 05b6 5889      		ldd r21,Y+16
 926 05b8 CE01      		movw r24,r28
 927 05ba 8F50      		subi r24,15
 928 05bc 9F4F      		sbci r25,-1
 929 05be FC01      		movw r30,r24
 930 05c0 2081      		ld r18,Z
 931 05c2 3181      		ldd r19,Z+1
 932 05c4 CA01      		movw r24,r20
 933 05c6 F901      		movw r30,r18
 934 05c8 0995      		icall
1161:lp_solve_5.5/colamd/colamd.c **** 	    DEBUG0 (("symamd: col %d negative length %d\n", j, length)) ;
1162:lp_solve_5.5/colamd/colamd.c **** 	    return (FALSE) ;
 935               		.loc 1 1162 0
 936 05ca 80E0      		ldi r24,0
 937 05cc 90E0      		ldi r25,0
 938 05ce 00C0      		rjmp .L62
 939               	.L27:
1163:lp_solve_5.5/colamd/colamd.c **** 	}
1164:lp_solve_5.5/colamd/colamd.c **** 
1165:lp_solve_5.5/colamd/colamd.c **** 	for (pp = p [j] ; pp < p [j+1] ; pp++)
 940               		.loc 1 1165 0
 941 05d0 8B81      		ldd r24,Y+3
 942 05d2 9C81      		ldd r25,Y+4
 943 05d4 880F      		lsl r24
 944 05d6 991F      		rol r25
 945 05d8 9E01      		movw r18,r28
 946 05da 2951      		subi r18,25
 947 05dc 3F4F      		sbci r19,-1
 948 05de F901      		movw r30,r18
 949 05e0 2081      		ld r18,Z
 950 05e2 3181      		ldd r19,Z+1
 951 05e4 820F      		add r24,r18
 952 05e6 931F      		adc r25,r19
 953 05e8 FC01      		movw r30,r24
 954 05ea 8081      		ld r24,Z
 955 05ec 9181      		ldd r25,Z+1
 956 05ee 9887      		std Y+8,r25
 957 05f0 8F83      		std Y+7,r24
 958 05f2 00C0      		rjmp .L28
 959               	.L34:
1166:lp_solve_5.5/colamd/colamd.c **** 	{
1167:lp_solve_5.5/colamd/colamd.c **** 	    i = A [pp] ;
 960               		.loc 1 1167 0
 961 05f4 8F81      		ldd r24,Y+7
 962 05f6 9885      		ldd r25,Y+8
 963 05f8 880F      		lsl r24
 964 05fa 991F      		rol r25
 965 05fc 9E01      		movw r18,r28
 966 05fe 2B51      		subi r18,27
 967 0600 3F4F      		sbci r19,-1
 968 0602 F901      		movw r30,r18
 969 0604 2081      		ld r18,Z
 970 0606 3181      		ldd r19,Z+1
 971 0608 820F      		add r24,r18
 972 060a 931F      		adc r25,r19
 973 060c FC01      		movw r30,r24
 974 060e 8081      		ld r24,Z
 975 0610 9181      		ldd r25,Z+1
 976 0612 9A83      		std Y+2,r25
 977 0614 8983      		std Y+1,r24
1168:lp_solve_5.5/colamd/colamd.c **** 	    if (i < 0 || i >= n)
 978               		.loc 1 1168 0
 979 0616 8981      		ldd r24,Y+1
 980 0618 9A81      		ldd r25,Y+2
 981 061a 9923      		tst r25
 982 061c 04F0      		brlt .L29
 983               		.loc 1 1168 0 is_stmt 0 discriminator 1
 984 061e CE01      		movw r24,r28
 985 0620 8D51      		subi r24,29
 986 0622 9F4F      		sbci r25,-1
 987 0624 2981      		ldd r18,Y+1
 988 0626 3A81      		ldd r19,Y+2
 989 0628 FC01      		movw r30,r24
 990 062a 8081      		ld r24,Z
 991 062c 9181      		ldd r25,Z+1
 992 062e 2817      		cp r18,r24
 993 0630 3907      		cpc r19,r25
 994 0632 04F4      		brge .+2
 995 0634 00C0      		rjmp .L30
 996               	.L29:
1169:lp_solve_5.5/colamd/colamd.c **** 	    {
1170:lp_solve_5.5/colamd/colamd.c **** 		/* row index i, in column j, is out of bounds */
1171:lp_solve_5.5/colamd/colamd.c **** 		stats [COLAMD_STATUS] = COLAMD_ERROR_row_index_out_of_bounds ;
 997               		.loc 1 1171 0 is_stmt 1
 998 0636 CE01      		movw r24,r28
 999 0638 8351      		subi r24,19
 1000 063a 9F4F      		sbci r25,-1
 1001 063c FC01      		movw r30,r24
 1002 063e 8081      		ld r24,Z
 1003 0640 9181      		ldd r25,Z+1
 1004 0642 0696      		adiw r24,6
 1005 0644 27EF      		ldi r18,lo8(-9)
 1006 0646 3FEF      		ldi r19,lo8(-1)
 1007 0648 FC01      		movw r30,r24
 1008 064a 3183      		std Z+1,r19
 1009 064c 2083      		st Z,r18
1172:lp_solve_5.5/colamd/colamd.c **** 		stats [COLAMD_INFO1] = j ;
 1010               		.loc 1 1172 0
 1011 064e CE01      		movw r24,r28
 1012 0650 8351      		subi r24,19
 1013 0652 9F4F      		sbci r25,-1
 1014 0654 FC01      		movw r30,r24
 1015 0656 8081      		ld r24,Z
 1016 0658 9181      		ldd r25,Z+1
 1017 065a 0896      		adiw r24,8
 1018 065c 2B81      		ldd r18,Y+3
 1019 065e 3C81      		ldd r19,Y+4
 1020 0660 FC01      		movw r30,r24
 1021 0662 3183      		std Z+1,r19
 1022 0664 2083      		st Z,r18
1173:lp_solve_5.5/colamd/colamd.c **** 		stats [COLAMD_INFO2] = i ;
 1023               		.loc 1 1173 0
 1024 0666 CE01      		movw r24,r28
 1025 0668 8351      		subi r24,19
 1026 066a 9F4F      		sbci r25,-1
 1027 066c FC01      		movw r30,r24
 1028 066e 8081      		ld r24,Z
 1029 0670 9181      		ldd r25,Z+1
 1030 0672 0A96      		adiw r24,10
 1031 0674 2981      		ldd r18,Y+1
 1032 0676 3A81      		ldd r19,Y+2
 1033 0678 FC01      		movw r30,r24
 1034 067a 3183      		std Z+1,r19
 1035 067c 2083      		st Z,r18
1174:lp_solve_5.5/colamd/colamd.c **** 		stats [COLAMD_INFO3] = n ;
 1036               		.loc 1 1174 0
 1037 067e CE01      		movw r24,r28
 1038 0680 8351      		subi r24,19
 1039 0682 9F4F      		sbci r25,-1
 1040 0684 FC01      		movw r30,r24
 1041 0686 8081      		ld r24,Z
 1042 0688 9181      		ldd r25,Z+1
 1043 068a 0C96      		adiw r24,12
 1044 068c 9E01      		movw r18,r28
 1045 068e 2D51      		subi r18,29
 1046 0690 3F4F      		sbci r19,-1
 1047 0692 F901      		movw r30,r18
 1048 0694 2081      		ld r18,Z
 1049 0696 3181      		ldd r19,Z+1
 1050 0698 FC01      		movw r30,r24
 1051 069a 3183      		std Z+1,r19
 1052 069c 2083      		st Z,r18
1175:lp_solve_5.5/colamd/colamd.c **** 		(*release) ((void *) count) ;
 1053               		.loc 1 1175 0
 1054 069e 4D85      		ldd r20,Y+13
 1055 06a0 5E85      		ldd r21,Y+14
 1056 06a2 CE01      		movw r24,r28
 1057 06a4 8F50      		subi r24,15
 1058 06a6 9F4F      		sbci r25,-1
 1059 06a8 FC01      		movw r30,r24
 1060 06aa 2081      		ld r18,Z
 1061 06ac 3181      		ldd r19,Z+1
 1062 06ae CA01      		movw r24,r20
 1063 06b0 F901      		movw r30,r18
 1064 06b2 0995      		icall
1176:lp_solve_5.5/colamd/colamd.c **** 		(*release) ((void *) mark) ;
 1065               		.loc 1 1176 0
 1066 06b4 4F85      		ldd r20,Y+15
 1067 06b6 5889      		ldd r21,Y+16
 1068 06b8 CE01      		movw r24,r28
 1069 06ba 8F50      		subi r24,15
 1070 06bc 9F4F      		sbci r25,-1
 1071 06be FC01      		movw r30,r24
 1072 06c0 2081      		ld r18,Z
 1073 06c2 3181      		ldd r19,Z+1
 1074 06c4 CA01      		movw r24,r20
 1075 06c6 F901      		movw r30,r18
 1076 06c8 0995      		icall
1177:lp_solve_5.5/colamd/colamd.c **** 		DEBUG0 (("symamd: row %d col %d out of bounds\n", i, j)) ;
1178:lp_solve_5.5/colamd/colamd.c **** 		return (FALSE) ;
 1077               		.loc 1 1178 0
 1078 06ca 80E0      		ldi r24,0
 1079 06cc 90E0      		ldi r25,0
 1080 06ce 00C0      		rjmp .L62
 1081               	.L30:
1179:lp_solve_5.5/colamd/colamd.c **** 	    }
1180:lp_solve_5.5/colamd/colamd.c **** 
1181:lp_solve_5.5/colamd/colamd.c **** 	    if (i <= last_row || mark [i] == j)
 1082               		.loc 1 1181 0
 1083 06d0 2981      		ldd r18,Y+1
 1084 06d2 3A81      		ldd r19,Y+2
 1085 06d4 8985      		ldd r24,Y+9
 1086 06d6 9A85      		ldd r25,Y+10
 1087 06d8 8217      		cp r24,r18
 1088 06da 9307      		cpc r25,r19
 1089 06dc 04F4      		brge .L31
 1090               		.loc 1 1181 0 is_stmt 0 discriminator 1
 1091 06de 8981      		ldd r24,Y+1
 1092 06e0 9A81      		ldd r25,Y+2
 1093 06e2 880F      		lsl r24
 1094 06e4 991F      		rol r25
 1095 06e6 2F85      		ldd r18,Y+15
 1096 06e8 3889      		ldd r19,Y+16
 1097 06ea 820F      		add r24,r18
 1098 06ec 931F      		adc r25,r19
 1099 06ee FC01      		movw r30,r24
 1100 06f0 2081      		ld r18,Z
 1101 06f2 3181      		ldd r19,Z+1
 1102 06f4 8B81      		ldd r24,Y+3
 1103 06f6 9C81      		ldd r25,Y+4
 1104 06f8 2817      		cp r18,r24
 1105 06fa 3907      		cpc r19,r25
 1106 06fc 01F4      		brne .L32
 1107               	.L31:
1182:lp_solve_5.5/colamd/colamd.c **** 	    {
1183:lp_solve_5.5/colamd/colamd.c **** 		/* row index is unsorted or repeated (or both), thus col */
1184:lp_solve_5.5/colamd/colamd.c **** 		/* is jumbled.  This is a notice, not an error condition. */
1185:lp_solve_5.5/colamd/colamd.c **** 		stats [COLAMD_STATUS] = COLAMD_OK_BUT_JUMBLED ;
 1108               		.loc 1 1185 0 is_stmt 1
 1109 06fe CE01      		movw r24,r28
 1110 0700 8351      		subi r24,19
 1111 0702 9F4F      		sbci r25,-1
 1112 0704 FC01      		movw r30,r24
 1113 0706 8081      		ld r24,Z
 1114 0708 9181      		ldd r25,Z+1
 1115 070a 0696      		adiw r24,6
 1116 070c 21E0      		ldi r18,lo8(1)
 1117 070e 30E0      		ldi r19,0
 1118 0710 FC01      		movw r30,r24
 1119 0712 3183      		std Z+1,r19
 1120 0714 2083      		st Z,r18
1186:lp_solve_5.5/colamd/colamd.c **** 		stats [COLAMD_INFO1] = j ;
 1121               		.loc 1 1186 0
 1122 0716 CE01      		movw r24,r28
 1123 0718 8351      		subi r24,19
 1124 071a 9F4F      		sbci r25,-1
 1125 071c FC01      		movw r30,r24
 1126 071e 8081      		ld r24,Z
 1127 0720 9181      		ldd r25,Z+1
 1128 0722 0896      		adiw r24,8
 1129 0724 2B81      		ldd r18,Y+3
 1130 0726 3C81      		ldd r19,Y+4
 1131 0728 FC01      		movw r30,r24
 1132 072a 3183      		std Z+1,r19
 1133 072c 2083      		st Z,r18
1187:lp_solve_5.5/colamd/colamd.c **** 		stats [COLAMD_INFO2] = i ;
 1134               		.loc 1 1187 0
 1135 072e CE01      		movw r24,r28
 1136 0730 8351      		subi r24,19
 1137 0732 9F4F      		sbci r25,-1
 1138 0734 FC01      		movw r30,r24
 1139 0736 8081      		ld r24,Z
 1140 0738 9181      		ldd r25,Z+1
 1141 073a 0A96      		adiw r24,10
 1142 073c 2981      		ldd r18,Y+1
 1143 073e 3A81      		ldd r19,Y+2
 1144 0740 FC01      		movw r30,r24
 1145 0742 3183      		std Z+1,r19
 1146 0744 2083      		st Z,r18
1188:lp_solve_5.5/colamd/colamd.c **** 		(stats [COLAMD_INFO3]) ++ ;
 1147               		.loc 1 1188 0
 1148 0746 CE01      		movw r24,r28
 1149 0748 8351      		subi r24,19
 1150 074a 9F4F      		sbci r25,-1
 1151 074c FC01      		movw r30,r24
 1152 074e 8081      		ld r24,Z
 1153 0750 9181      		ldd r25,Z+1
 1154 0752 0C96      		adiw r24,12
 1155 0754 FC01      		movw r30,r24
 1156 0756 2081      		ld r18,Z
 1157 0758 3181      		ldd r19,Z+1
 1158 075a 2F5F      		subi r18,-1
 1159 075c 3F4F      		sbci r19,-1
 1160 075e FC01      		movw r30,r24
 1161 0760 3183      		std Z+1,r19
 1162 0762 2083      		st Z,r18
 1163               	.L32:
1189:lp_solve_5.5/colamd/colamd.c **** 		DEBUG1 (("symamd: row %d col %d unsorted/duplicate\n", i, j)) ;
1190:lp_solve_5.5/colamd/colamd.c **** 	    }
1191:lp_solve_5.5/colamd/colamd.c **** 
1192:lp_solve_5.5/colamd/colamd.c **** 	    if (i > j && mark [i] != j)
 1164               		.loc 1 1192 0
 1165 0764 2981      		ldd r18,Y+1
 1166 0766 3A81      		ldd r19,Y+2
 1167 0768 8B81      		ldd r24,Y+3
 1168 076a 9C81      		ldd r25,Y+4
 1169 076c 8217      		cp r24,r18
 1170 076e 9307      		cpc r25,r19
 1171 0770 04F4      		brge .L33
 1172               		.loc 1 1192 0 is_stmt 0 discriminator 1
 1173 0772 8981      		ldd r24,Y+1
 1174 0774 9A81      		ldd r25,Y+2
 1175 0776 880F      		lsl r24
 1176 0778 991F      		rol r25
 1177 077a 2F85      		ldd r18,Y+15
 1178 077c 3889      		ldd r19,Y+16
 1179 077e 820F      		add r24,r18
 1180 0780 931F      		adc r25,r19
 1181 0782 FC01      		movw r30,r24
 1182 0784 2081      		ld r18,Z
 1183 0786 3181      		ldd r19,Z+1
 1184 0788 8B81      		ldd r24,Y+3
 1185 078a 9C81      		ldd r25,Y+4
 1186 078c 2817      		cp r18,r24
 1187 078e 3907      		cpc r19,r25
 1188 0790 01F0      		breq .L33
1193:lp_solve_5.5/colamd/colamd.c **** 	    {
1194:lp_solve_5.5/colamd/colamd.c **** 		/* row k of M will contain column indices i and j */
1195:lp_solve_5.5/colamd/colamd.c **** 		count [i]++ ;
 1189               		.loc 1 1195 0 is_stmt 1
 1190 0792 8981      		ldd r24,Y+1
 1191 0794 9A81      		ldd r25,Y+2
 1192 0796 880F      		lsl r24
 1193 0798 991F      		rol r25
 1194 079a 2D85      		ldd r18,Y+13
 1195 079c 3E85      		ldd r19,Y+14
 1196 079e 820F      		add r24,r18
 1197 07a0 931F      		adc r25,r19
 1198 07a2 FC01      		movw r30,r24
 1199 07a4 2081      		ld r18,Z
 1200 07a6 3181      		ldd r19,Z+1
 1201 07a8 2F5F      		subi r18,-1
 1202 07aa 3F4F      		sbci r19,-1
 1203 07ac FC01      		movw r30,r24
 1204 07ae 3183      		std Z+1,r19
 1205 07b0 2083      		st Z,r18
1196:lp_solve_5.5/colamd/colamd.c **** 		count [j]++ ;
 1206               		.loc 1 1196 0
 1207 07b2 8B81      		ldd r24,Y+3
 1208 07b4 9C81      		ldd r25,Y+4
 1209 07b6 880F      		lsl r24
 1210 07b8 991F      		rol r25
 1211 07ba 2D85      		ldd r18,Y+13
 1212 07bc 3E85      		ldd r19,Y+14
 1213 07be 820F      		add r24,r18
 1214 07c0 931F      		adc r25,r19
 1215 07c2 FC01      		movw r30,r24
 1216 07c4 2081      		ld r18,Z
 1217 07c6 3181      		ldd r19,Z+1
 1218 07c8 2F5F      		subi r18,-1
 1219 07ca 3F4F      		sbci r19,-1
 1220 07cc FC01      		movw r30,r24
 1221 07ce 3183      		std Z+1,r19
 1222 07d0 2083      		st Z,r18
 1223               	.L33:
1197:lp_solve_5.5/colamd/colamd.c **** 	    }
1198:lp_solve_5.5/colamd/colamd.c **** 
1199:lp_solve_5.5/colamd/colamd.c **** 	    /* mark the row as having been seen in this column */
1200:lp_solve_5.5/colamd/colamd.c **** 	    mark [i] = j ;
 1224               		.loc 1 1200 0 discriminator 2
 1225 07d2 8981      		ldd r24,Y+1
 1226 07d4 9A81      		ldd r25,Y+2
 1227 07d6 880F      		lsl r24
 1228 07d8 991F      		rol r25
 1229 07da 2F85      		ldd r18,Y+15
 1230 07dc 3889      		ldd r19,Y+16
 1231 07de 820F      		add r24,r18
 1232 07e0 931F      		adc r25,r19
 1233 07e2 2B81      		ldd r18,Y+3
 1234 07e4 3C81      		ldd r19,Y+4
 1235 07e6 FC01      		movw r30,r24
 1236 07e8 3183      		std Z+1,r19
 1237 07ea 2083      		st Z,r18
1201:lp_solve_5.5/colamd/colamd.c **** 
1202:lp_solve_5.5/colamd/colamd.c **** 	    last_row = i ;
 1238               		.loc 1 1202 0 discriminator 2
 1239 07ec 8981      		ldd r24,Y+1
 1240 07ee 9A81      		ldd r25,Y+2
 1241 07f0 9A87      		std Y+10,r25
 1242 07f2 8987      		std Y+9,r24
1165:lp_solve_5.5/colamd/colamd.c **** 	{
 1243               		.loc 1 1165 0 discriminator 2
 1244 07f4 8F81      		ldd r24,Y+7
 1245 07f6 9885      		ldd r25,Y+8
 1246 07f8 0196      		adiw r24,1
 1247 07fa 9887      		std Y+8,r25
 1248 07fc 8F83      		std Y+7,r24
 1249               	.L28:
1165:lp_solve_5.5/colamd/colamd.c **** 	{
 1250               		.loc 1 1165 0 is_stmt 0 discriminator 1
 1251 07fe 8B81      		ldd r24,Y+3
 1252 0800 9C81      		ldd r25,Y+4
 1253 0802 0196      		adiw r24,1
 1254 0804 880F      		lsl r24
 1255 0806 991F      		rol r25
 1256 0808 9E01      		movw r18,r28
 1257 080a 2951      		subi r18,25
 1258 080c 3F4F      		sbci r19,-1
 1259 080e F901      		movw r30,r18
 1260 0810 2081      		ld r18,Z
 1261 0812 3181      		ldd r19,Z+1
 1262 0814 820F      		add r24,r18
 1263 0816 931F      		adc r25,r19
 1264 0818 FC01      		movw r30,r24
 1265 081a 2081      		ld r18,Z
 1266 081c 3181      		ldd r19,Z+1
 1267 081e 8F81      		ldd r24,Y+7
 1268 0820 9885      		ldd r25,Y+8
 1269 0822 8217      		cp r24,r18
 1270 0824 9307      		cpc r25,r19
 1271 0826 04F4      		brge .+2
 1272 0828 00C0      		rjmp .L34
1148:lp_solve_5.5/colamd/colamd.c ****     {
 1273               		.loc 1 1148 0 is_stmt 1 discriminator 2
 1274 082a 8B81      		ldd r24,Y+3
 1275 082c 9C81      		ldd r25,Y+4
 1276 082e 0196      		adiw r24,1
 1277 0830 9C83      		std Y+4,r25
 1278 0832 8B83      		std Y+3,r24
 1279               	.L26:
1148:lp_solve_5.5/colamd/colamd.c ****     {
 1280               		.loc 1 1148 0 is_stmt 0 discriminator 1
 1281 0834 CE01      		movw r24,r28
 1282 0836 8D51      		subi r24,29
 1283 0838 9F4F      		sbci r25,-1
 1284 083a 2B81      		ldd r18,Y+3
 1285 083c 3C81      		ldd r19,Y+4
 1286 083e FC01      		movw r30,r24
 1287 0840 8081      		ld r24,Z
 1288 0842 9181      		ldd r25,Z+1
 1289 0844 2817      		cp r18,r24
 1290 0846 3907      		cpc r19,r25
 1291 0848 04F4      		brge .+2
 1292 084a 00C0      		rjmp .L35
1203:lp_solve_5.5/colamd/colamd.c **** 	}
1204:lp_solve_5.5/colamd/colamd.c ****     }
1205:lp_solve_5.5/colamd/colamd.c **** 
1206:lp_solve_5.5/colamd/colamd.c ****     if (stats [COLAMD_STATUS] == COLAMD_OK)
 1293               		.loc 1 1206 0 is_stmt 1
 1294 084c CE01      		movw r24,r28
 1295 084e 8351      		subi r24,19
 1296 0850 9F4F      		sbci r25,-1
 1297 0852 FC01      		movw r30,r24
 1298 0854 8081      		ld r24,Z
 1299 0856 9181      		ldd r25,Z+1
 1300 0858 0696      		adiw r24,6
 1301 085a FC01      		movw r30,r24
 1302 085c 8081      		ld r24,Z
 1303 085e 9181      		ldd r25,Z+1
 1304 0860 892B      		or r24,r25
 1305 0862 01F4      		brne .L36
1207:lp_solve_5.5/colamd/colamd.c ****     {
1208:lp_solve_5.5/colamd/colamd.c **** 	/* if there are no duplicate entries, then mark is no longer needed */
1209:lp_solve_5.5/colamd/colamd.c **** 	(*release) ((void *) mark) ;
 1306               		.loc 1 1209 0
 1307 0864 4F85      		ldd r20,Y+15
 1308 0866 5889      		ldd r21,Y+16
 1309 0868 CE01      		movw r24,r28
 1310 086a 8F50      		subi r24,15
 1311 086c 9F4F      		sbci r25,-1
 1312 086e FC01      		movw r30,r24
 1313 0870 2081      		ld r18,Z
 1314 0872 3181      		ldd r19,Z+1
 1315 0874 CA01      		movw r24,r20
 1316 0876 F901      		movw r30,r18
 1317 0878 0995      		icall
 1318               	.L36:
1210:lp_solve_5.5/colamd/colamd.c ****     }
1211:lp_solve_5.5/colamd/colamd.c **** 
1212:lp_solve_5.5/colamd/colamd.c ****     /* === Compute column pointers of M ===================================== */
1213:lp_solve_5.5/colamd/colamd.c **** 
1214:lp_solve_5.5/colamd/colamd.c ****     /* use output permutation, perm, for column pointers of M */
1215:lp_solve_5.5/colamd/colamd.c ****     perm [0] = 0 ;
 1319               		.loc 1 1215 0
 1320 087a CE01      		movw r24,r28
 1321 087c 8751      		subi r24,23
 1322 087e 9F4F      		sbci r25,-1
 1323 0880 FC01      		movw r30,r24
 1324 0882 8081      		ld r24,Z
 1325 0884 9181      		ldd r25,Z+1
 1326 0886 FC01      		movw r30,r24
 1327 0888 1182      		std Z+1,__zero_reg__
 1328 088a 1082      		st Z,__zero_reg__
1216:lp_solve_5.5/colamd/colamd.c ****     for (j = 1 ; j <= n ; j++)
 1329               		.loc 1 1216 0
 1330 088c 81E0      		ldi r24,lo8(1)
 1331 088e 90E0      		ldi r25,0
 1332 0890 9C83      		std Y+4,r25
 1333 0892 8B83      		std Y+3,r24
 1334 0894 00C0      		rjmp .L37
 1335               	.L38:
1217:lp_solve_5.5/colamd/colamd.c ****     {
1218:lp_solve_5.5/colamd/colamd.c **** 	perm [j] = perm [j-1] + count [j-1] ;
 1336               		.loc 1 1218 0 discriminator 3
 1337 0896 8B81      		ldd r24,Y+3
 1338 0898 9C81      		ldd r25,Y+4
 1339 089a 880F      		lsl r24
 1340 089c 991F      		rol r25
 1341 089e 9E01      		movw r18,r28
 1342 08a0 2751      		subi r18,23
 1343 08a2 3F4F      		sbci r19,-1
 1344 08a4 F901      		movw r30,r18
 1345 08a6 2081      		ld r18,Z
 1346 08a8 3181      		ldd r19,Z+1
 1347 08aa 820F      		add r24,r18
 1348 08ac 931F      		adc r25,r19
 1349 08ae 2B81      		ldd r18,Y+3
 1350 08b0 3C81      		ldd r19,Y+4
 1351 08b2 2150      		subi r18,1
 1352 08b4 3048      		sbci r19,-128
 1353 08b6 220F      		lsl r18
 1354 08b8 331F      		rol r19
 1355 08ba AE01      		movw r20,r28
 1356 08bc 4751      		subi r20,23
 1357 08be 5F4F      		sbci r21,-1
 1358 08c0 FA01      		movw r30,r20
 1359 08c2 4081      		ld r20,Z
 1360 08c4 5181      		ldd r21,Z+1
 1361 08c6 240F      		add r18,r20
 1362 08c8 351F      		adc r19,r21
 1363 08ca F901      		movw r30,r18
 1364 08cc 4081      		ld r20,Z
 1365 08ce 5181      		ldd r21,Z+1
 1366 08d0 2B81      		ldd r18,Y+3
 1367 08d2 3C81      		ldd r19,Y+4
 1368 08d4 2150      		subi r18,1
 1369 08d6 3048      		sbci r19,-128
 1370 08d8 220F      		lsl r18
 1371 08da 331F      		rol r19
 1372 08dc 6D85      		ldd r22,Y+13
 1373 08de 7E85      		ldd r23,Y+14
 1374 08e0 260F      		add r18,r22
 1375 08e2 371F      		adc r19,r23
 1376 08e4 F901      		movw r30,r18
 1377 08e6 2081      		ld r18,Z
 1378 08e8 3181      		ldd r19,Z+1
 1379 08ea 240F      		add r18,r20
 1380 08ec 351F      		adc r19,r21
 1381 08ee FC01      		movw r30,r24
 1382 08f0 3183      		std Z+1,r19
 1383 08f2 2083      		st Z,r18
1216:lp_solve_5.5/colamd/colamd.c ****     for (j = 1 ; j <= n ; j++)
 1384               		.loc 1 1216 0 discriminator 3
 1385 08f4 8B81      		ldd r24,Y+3
 1386 08f6 9C81      		ldd r25,Y+4
 1387 08f8 0196      		adiw r24,1
 1388 08fa 9C83      		std Y+4,r25
 1389 08fc 8B83      		std Y+3,r24
 1390               	.L37:
1216:lp_solve_5.5/colamd/colamd.c ****     for (j = 1 ; j <= n ; j++)
 1391               		.loc 1 1216 0 is_stmt 0 discriminator 1
 1392 08fe CE01      		movw r24,r28
 1393 0900 8D51      		subi r24,29
 1394 0902 9F4F      		sbci r25,-1
 1395 0904 2B81      		ldd r18,Y+3
 1396 0906 3C81      		ldd r19,Y+4
 1397 0908 FC01      		movw r30,r24
 1398 090a 8081      		ld r24,Z
 1399 090c 9181      		ldd r25,Z+1
 1400 090e 8217      		cp r24,r18
 1401 0910 9307      		cpc r25,r19
 1402 0912 04F4      		brge .L38
1219:lp_solve_5.5/colamd/colamd.c ****     }
1220:lp_solve_5.5/colamd/colamd.c ****     for (j = 0 ; j < n ; j++)
 1403               		.loc 1 1220 0 is_stmt 1
 1404 0914 1C82      		std Y+4,__zero_reg__
 1405 0916 1B82      		std Y+3,__zero_reg__
 1406 0918 00C0      		rjmp .L39
 1407               	.L40:
1221:lp_solve_5.5/colamd/colamd.c ****     {
1222:lp_solve_5.5/colamd/colamd.c **** 	count [j] = perm [j] ;
 1408               		.loc 1 1222 0 discriminator 3
 1409 091a 8B81      		ldd r24,Y+3
 1410 091c 9C81      		ldd r25,Y+4
 1411 091e 880F      		lsl r24
 1412 0920 991F      		rol r25
 1413 0922 2D85      		ldd r18,Y+13
 1414 0924 3E85      		ldd r19,Y+14
 1415 0926 820F      		add r24,r18
 1416 0928 931F      		adc r25,r19
 1417 092a 2B81      		ldd r18,Y+3
 1418 092c 3C81      		ldd r19,Y+4
 1419 092e 220F      		lsl r18
 1420 0930 331F      		rol r19
 1421 0932 AE01      		movw r20,r28
 1422 0934 4751      		subi r20,23
 1423 0936 5F4F      		sbci r21,-1
 1424 0938 FA01      		movw r30,r20
 1425 093a 4081      		ld r20,Z
 1426 093c 5181      		ldd r21,Z+1
 1427 093e 240F      		add r18,r20
 1428 0940 351F      		adc r19,r21
 1429 0942 F901      		movw r30,r18
 1430 0944 2081      		ld r18,Z
 1431 0946 3181      		ldd r19,Z+1
 1432 0948 FC01      		movw r30,r24
 1433 094a 3183      		std Z+1,r19
 1434 094c 2083      		st Z,r18
1220:lp_solve_5.5/colamd/colamd.c ****     {
 1435               		.loc 1 1220 0 discriminator 3
 1436 094e 8B81      		ldd r24,Y+3
 1437 0950 9C81      		ldd r25,Y+4
 1438 0952 0196      		adiw r24,1
 1439 0954 9C83      		std Y+4,r25
 1440 0956 8B83      		std Y+3,r24
 1441               	.L39:
1220:lp_solve_5.5/colamd/colamd.c ****     {
 1442               		.loc 1 1220 0 is_stmt 0 discriminator 1
 1443 0958 CE01      		movw r24,r28
 1444 095a 8D51      		subi r24,29
 1445 095c 9F4F      		sbci r25,-1
 1446 095e 2B81      		ldd r18,Y+3
 1447 0960 3C81      		ldd r19,Y+4
 1448 0962 FC01      		movw r30,r24
 1449 0964 8081      		ld r24,Z
 1450 0966 9181      		ldd r25,Z+1
 1451 0968 2817      		cp r18,r24
 1452 096a 3907      		cpc r19,r25
 1453 096c 04F0      		brlt .L40
1223:lp_solve_5.5/colamd/colamd.c ****     }
1224:lp_solve_5.5/colamd/colamd.c **** 
1225:lp_solve_5.5/colamd/colamd.c ****     /* === Construct M ====================================================== */
1226:lp_solve_5.5/colamd/colamd.c **** 
1227:lp_solve_5.5/colamd/colamd.c ****     mnz = perm [n] ;
 1454               		.loc 1 1227 0 is_stmt 1
 1455 096e CE01      		movw r24,r28
 1456 0970 8D51      		subi r24,29
 1457 0972 9F4F      		sbci r25,-1
 1458 0974 FC01      		movw r30,r24
 1459 0976 8081      		ld r24,Z
 1460 0978 9181      		ldd r25,Z+1
 1461 097a 880F      		lsl r24
 1462 097c 991F      		rol r25
 1463 097e 9E01      		movw r18,r28
 1464 0980 2751      		subi r18,23
 1465 0982 3F4F      		sbci r19,-1
 1466 0984 F901      		movw r30,r18
 1467 0986 2081      		ld r18,Z
 1468 0988 3181      		ldd r19,Z+1
 1469 098a 820F      		add r24,r18
 1470 098c 931F      		adc r25,r19
 1471 098e FC01      		movw r30,r24
 1472 0990 8081      		ld r24,Z
 1473 0992 9181      		ldd r25,Z+1
 1474 0994 9C8B      		std Y+20,r25
 1475 0996 8B8B      		std Y+19,r24
1228:lp_solve_5.5/colamd/colamd.c ****     n_row = mnz / 2 ;
 1476               		.loc 1 1228 0
 1477 0998 8B89      		ldd r24,Y+19
 1478 099a 9C89      		ldd r25,Y+20
 1479 099c 9923      		tst r25
 1480 099e 04F4      		brge .L41
 1481 09a0 0196      		adiw r24,1
 1482               	.L41:
 1483 09a2 9595      		asr r25
 1484 09a4 8795      		ror r24
 1485 09a6 9E8B      		std Y+22,r25
 1486 09a8 8D8B      		std Y+21,r24
1229:lp_solve_5.5/colamd/colamd.c ****     Mlen = colamd_recommended (mnz, n_row, n) ;
 1487               		.loc 1 1229 0
 1488 09aa CE01      		movw r24,r28
 1489 09ac 8D51      		subi r24,29
 1490 09ae 9F4F      		sbci r25,-1
 1491 09b0 FC01      		movw r30,r24
 1492 09b2 4081      		ld r20,Z
 1493 09b4 5181      		ldd r21,Z+1
 1494 09b6 2D89      		ldd r18,Y+21
 1495 09b8 3E89      		ldd r19,Y+22
 1496 09ba 8B89      		ldd r24,Y+19
 1497 09bc 9C89      		ldd r25,Y+20
 1498 09be B901      		movw r22,r18
 1499 09c0 0E94 0000 		call colamd_recommended
 1500 09c4 988F      		std Y+24,r25
 1501 09c6 8F8B      		std Y+23,r24
1230:lp_solve_5.5/colamd/colamd.c ****     M = (int *) ((*allocate) (Mlen, sizeof (int))) ;
 1502               		.loc 1 1230 0
 1503 09c8 4F89      		ldd r20,Y+23
 1504 09ca 588D      		ldd r21,Y+24
 1505 09cc CE01      		movw r24,r28
 1506 09ce 8151      		subi r24,17
 1507 09d0 9F4F      		sbci r25,-1
 1508 09d2 FC01      		movw r30,r24
 1509 09d4 2081      		ld r18,Z
 1510 09d6 3181      		ldd r19,Z+1
 1511 09d8 62E0      		ldi r22,lo8(2)
 1512 09da 70E0      		ldi r23,0
 1513 09dc CA01      		movw r24,r20
 1514 09de F901      		movw r30,r18
 1515 09e0 0995      		icall
 1516 09e2 9A8F      		std Y+26,r25
 1517 09e4 898F      		std Y+25,r24
1231:lp_solve_5.5/colamd/colamd.c ****     DEBUG0 (("symamd: M is %d-by-%d with %d entries, Mlen = %d\n",
1232:lp_solve_5.5/colamd/colamd.c ****     	n_row, n, mnz, Mlen)) ;
1233:lp_solve_5.5/colamd/colamd.c **** 
1234:lp_solve_5.5/colamd/colamd.c ****     if (!M)
 1518               		.loc 1 1234 0
 1519 09e6 898D      		ldd r24,Y+25
 1520 09e8 9A8D      		ldd r25,Y+26
 1521 09ea 892B      		or r24,r25
 1522 09ec 01F4      		brne .L42
1235:lp_solve_5.5/colamd/colamd.c ****     {
1236:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_STATUS] = COLAMD_ERROR_out_of_memory ;
 1523               		.loc 1 1236 0
 1524 09ee CE01      		movw r24,r28
 1525 09f0 8351      		subi r24,19
 1526 09f2 9F4F      		sbci r25,-1
 1527 09f4 FC01      		movw r30,r24
 1528 09f6 8081      		ld r24,Z
 1529 09f8 9181      		ldd r25,Z+1
 1530 09fa 0696      		adiw r24,6
 1531 09fc 26EF      		ldi r18,lo8(-10)
 1532 09fe 3FEF      		ldi r19,lo8(-1)
 1533 0a00 FC01      		movw r30,r24
 1534 0a02 3183      		std Z+1,r19
 1535 0a04 2083      		st Z,r18
1237:lp_solve_5.5/colamd/colamd.c **** 	(*release) ((void *) count) ;
 1536               		.loc 1 1237 0
 1537 0a06 4D85      		ldd r20,Y+13
 1538 0a08 5E85      		ldd r21,Y+14
 1539 0a0a CE01      		movw r24,r28
 1540 0a0c 8F50      		subi r24,15
 1541 0a0e 9F4F      		sbci r25,-1
 1542 0a10 FC01      		movw r30,r24
 1543 0a12 2081      		ld r18,Z
 1544 0a14 3181      		ldd r19,Z+1
 1545 0a16 CA01      		movw r24,r20
 1546 0a18 F901      		movw r30,r18
 1547 0a1a 0995      		icall
1238:lp_solve_5.5/colamd/colamd.c **** 	(*release) ((void *) mark) ;
 1548               		.loc 1 1238 0
 1549 0a1c 4F85      		ldd r20,Y+15
 1550 0a1e 5889      		ldd r21,Y+16
 1551 0a20 CE01      		movw r24,r28
 1552 0a22 8F50      		subi r24,15
 1553 0a24 9F4F      		sbci r25,-1
 1554 0a26 FC01      		movw r30,r24
 1555 0a28 2081      		ld r18,Z
 1556 0a2a 3181      		ldd r19,Z+1
 1557 0a2c CA01      		movw r24,r20
 1558 0a2e F901      		movw r30,r18
 1559 0a30 0995      		icall
1239:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("symamd: allocate M (size %d) failed\n", Mlen)) ;
1240:lp_solve_5.5/colamd/colamd.c **** 	return (FALSE) ;
 1560               		.loc 1 1240 0
 1561 0a32 80E0      		ldi r24,0
 1562 0a34 90E0      		ldi r25,0
 1563 0a36 00C0      		rjmp .L62
 1564               	.L42:
1241:lp_solve_5.5/colamd/colamd.c ****     }
1242:lp_solve_5.5/colamd/colamd.c **** 
1243:lp_solve_5.5/colamd/colamd.c ****     k = 0 ;
 1565               		.loc 1 1243 0
 1566 0a38 1E82      		std Y+6,__zero_reg__
 1567 0a3a 1D82      		std Y+5,__zero_reg__
1244:lp_solve_5.5/colamd/colamd.c **** 
1245:lp_solve_5.5/colamd/colamd.c ****     if (stats [COLAMD_STATUS] == COLAMD_OK)
 1568               		.loc 1 1245 0
 1569 0a3c CE01      		movw r24,r28
 1570 0a3e 8351      		subi r24,19
 1571 0a40 9F4F      		sbci r25,-1
 1572 0a42 FC01      		movw r30,r24
 1573 0a44 8081      		ld r24,Z
 1574 0a46 9181      		ldd r25,Z+1
 1575 0a48 0696      		adiw r24,6
 1576 0a4a FC01      		movw r30,r24
 1577 0a4c 8081      		ld r24,Z
 1578 0a4e 9181      		ldd r25,Z+1
 1579 0a50 892B      		or r24,r25
 1580 0a52 01F0      		breq .+2
 1581 0a54 00C0      		rjmp .L43
1246:lp_solve_5.5/colamd/colamd.c ****     {
1247:lp_solve_5.5/colamd/colamd.c **** 	/* Matrix is OK */
1248:lp_solve_5.5/colamd/colamd.c **** 	for (j = 0 ; j < n ; j++)
 1582               		.loc 1 1248 0
 1583 0a56 1C82      		std Y+4,__zero_reg__
 1584 0a58 1B82      		std Y+3,__zero_reg__
 1585 0a5a 00C0      		rjmp .L44
 1586               	.L48:
1249:lp_solve_5.5/colamd/colamd.c **** 	{
1250:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (p [j+1] - p [j] >= 0) ;
1251:lp_solve_5.5/colamd/colamd.c **** 	    for (pp = p [j] ; pp < p [j+1] ; pp++)
 1587               		.loc 1 1251 0
 1588 0a5c 8B81      		ldd r24,Y+3
 1589 0a5e 9C81      		ldd r25,Y+4
 1590 0a60 880F      		lsl r24
 1591 0a62 991F      		rol r25
 1592 0a64 9E01      		movw r18,r28
 1593 0a66 2951      		subi r18,25
 1594 0a68 3F4F      		sbci r19,-1
 1595 0a6a F901      		movw r30,r18
 1596 0a6c 2081      		ld r18,Z
 1597 0a6e 3181      		ldd r19,Z+1
 1598 0a70 820F      		add r24,r18
 1599 0a72 931F      		adc r25,r19
 1600 0a74 FC01      		movw r30,r24
 1601 0a76 8081      		ld r24,Z
 1602 0a78 9181      		ldd r25,Z+1
 1603 0a7a 9887      		std Y+8,r25
 1604 0a7c 8F83      		std Y+7,r24
 1605 0a7e 00C0      		rjmp .L45
 1606               	.L47:
1252:lp_solve_5.5/colamd/colamd.c **** 	    {
1253:lp_solve_5.5/colamd/colamd.c **** 		i = A [pp] ;
 1607               		.loc 1 1253 0
 1608 0a80 8F81      		ldd r24,Y+7
 1609 0a82 9885      		ldd r25,Y+8
 1610 0a84 880F      		lsl r24
 1611 0a86 991F      		rol r25
 1612 0a88 9E01      		movw r18,r28
 1613 0a8a 2B51      		subi r18,27
 1614 0a8c 3F4F      		sbci r19,-1
 1615 0a8e F901      		movw r30,r18
 1616 0a90 2081      		ld r18,Z
 1617 0a92 3181      		ldd r19,Z+1
 1618 0a94 820F      		add r24,r18
 1619 0a96 931F      		adc r25,r19
 1620 0a98 FC01      		movw r30,r24
 1621 0a9a 8081      		ld r24,Z
 1622 0a9c 9181      		ldd r25,Z+1
 1623 0a9e 9A83      		std Y+2,r25
 1624 0aa0 8983      		std Y+1,r24
1254:lp_solve_5.5/colamd/colamd.c **** 		ASSERT (i >= 0 && i < n) ;
1255:lp_solve_5.5/colamd/colamd.c **** 		if (i > j)
 1625               		.loc 1 1255 0
 1626 0aa2 2981      		ldd r18,Y+1
 1627 0aa4 3A81      		ldd r19,Y+2
 1628 0aa6 8B81      		ldd r24,Y+3
 1629 0aa8 9C81      		ldd r25,Y+4
 1630 0aaa 8217      		cp r24,r18
 1631 0aac 9307      		cpc r25,r19
 1632 0aae 04F0      		brlt .+2
 1633 0ab0 00C0      		rjmp .L46
1256:lp_solve_5.5/colamd/colamd.c **** 		{
1257:lp_solve_5.5/colamd/colamd.c **** 		    /* row k of M contains column indices i and j */
1258:lp_solve_5.5/colamd/colamd.c **** 		    M [count [i]++] = k ;
 1634               		.loc 1 1258 0
 1635 0ab2 8981      		ldd r24,Y+1
 1636 0ab4 9A81      		ldd r25,Y+2
 1637 0ab6 880F      		lsl r24
 1638 0ab8 991F      		rol r25
 1639 0aba 2D85      		ldd r18,Y+13
 1640 0abc 3E85      		ldd r19,Y+14
 1641 0abe 820F      		add r24,r18
 1642 0ac0 931F      		adc r25,r19
 1643 0ac2 FC01      		movw r30,r24
 1644 0ac4 2081      		ld r18,Z
 1645 0ac6 3181      		ldd r19,Z+1
 1646 0ac8 A901      		movw r20,r18
 1647 0aca 4F5F      		subi r20,-1
 1648 0acc 5F4F      		sbci r21,-1
 1649 0ace FC01      		movw r30,r24
 1650 0ad0 5183      		std Z+1,r21
 1651 0ad2 4083      		st Z,r20
 1652 0ad4 C901      		movw r24,r18
 1653 0ad6 880F      		lsl r24
 1654 0ad8 991F      		rol r25
 1655 0ada 298D      		ldd r18,Y+25
 1656 0adc 3A8D      		ldd r19,Y+26
 1657 0ade 820F      		add r24,r18
 1658 0ae0 931F      		adc r25,r19
 1659 0ae2 2D81      		ldd r18,Y+5
 1660 0ae4 3E81      		ldd r19,Y+6
 1661 0ae6 FC01      		movw r30,r24
 1662 0ae8 3183      		std Z+1,r19
 1663 0aea 2083      		st Z,r18
1259:lp_solve_5.5/colamd/colamd.c **** 		    M [count [j]++] = k ;
 1664               		.loc 1 1259 0
 1665 0aec 8B81      		ldd r24,Y+3
 1666 0aee 9C81      		ldd r25,Y+4
 1667 0af0 880F      		lsl r24
 1668 0af2 991F      		rol r25
 1669 0af4 2D85      		ldd r18,Y+13
 1670 0af6 3E85      		ldd r19,Y+14
 1671 0af8 820F      		add r24,r18
 1672 0afa 931F      		adc r25,r19
 1673 0afc FC01      		movw r30,r24
 1674 0afe 2081      		ld r18,Z
 1675 0b00 3181      		ldd r19,Z+1
 1676 0b02 A901      		movw r20,r18
 1677 0b04 4F5F      		subi r20,-1
 1678 0b06 5F4F      		sbci r21,-1
 1679 0b08 FC01      		movw r30,r24
 1680 0b0a 5183      		std Z+1,r21
 1681 0b0c 4083      		st Z,r20
 1682 0b0e C901      		movw r24,r18
 1683 0b10 880F      		lsl r24
 1684 0b12 991F      		rol r25
 1685 0b14 298D      		ldd r18,Y+25
 1686 0b16 3A8D      		ldd r19,Y+26
 1687 0b18 820F      		add r24,r18
 1688 0b1a 931F      		adc r25,r19
 1689 0b1c 2D81      		ldd r18,Y+5
 1690 0b1e 3E81      		ldd r19,Y+6
 1691 0b20 FC01      		movw r30,r24
 1692 0b22 3183      		std Z+1,r19
 1693 0b24 2083      		st Z,r18
1260:lp_solve_5.5/colamd/colamd.c **** 		    k++ ;
 1694               		.loc 1 1260 0
 1695 0b26 8D81      		ldd r24,Y+5
 1696 0b28 9E81      		ldd r25,Y+6
 1697 0b2a 0196      		adiw r24,1
 1698 0b2c 9E83      		std Y+6,r25
 1699 0b2e 8D83      		std Y+5,r24
 1700               	.L46:
1251:lp_solve_5.5/colamd/colamd.c **** 	    {
 1701               		.loc 1 1251 0 discriminator 2
 1702 0b30 8F81      		ldd r24,Y+7
 1703 0b32 9885      		ldd r25,Y+8
 1704 0b34 0196      		adiw r24,1
 1705 0b36 9887      		std Y+8,r25
 1706 0b38 8F83      		std Y+7,r24
 1707               	.L45:
1251:lp_solve_5.5/colamd/colamd.c **** 	    {
 1708               		.loc 1 1251 0 is_stmt 0 discriminator 1
 1709 0b3a 8B81      		ldd r24,Y+3
 1710 0b3c 9C81      		ldd r25,Y+4
 1711 0b3e 0196      		adiw r24,1
 1712 0b40 880F      		lsl r24
 1713 0b42 991F      		rol r25
 1714 0b44 9E01      		movw r18,r28
 1715 0b46 2951      		subi r18,25
 1716 0b48 3F4F      		sbci r19,-1
 1717 0b4a F901      		movw r30,r18
 1718 0b4c 2081      		ld r18,Z
 1719 0b4e 3181      		ldd r19,Z+1
 1720 0b50 820F      		add r24,r18
 1721 0b52 931F      		adc r25,r19
 1722 0b54 FC01      		movw r30,r24
 1723 0b56 2081      		ld r18,Z
 1724 0b58 3181      		ldd r19,Z+1
 1725 0b5a 8F81      		ldd r24,Y+7
 1726 0b5c 9885      		ldd r25,Y+8
 1727 0b5e 8217      		cp r24,r18
 1728 0b60 9307      		cpc r25,r19
 1729 0b62 04F4      		brge .+2
 1730 0b64 00C0      		rjmp .L47
1248:lp_solve_5.5/colamd/colamd.c **** 	{
 1731               		.loc 1 1248 0 is_stmt 1 discriminator 2
 1732 0b66 8B81      		ldd r24,Y+3
 1733 0b68 9C81      		ldd r25,Y+4
 1734 0b6a 0196      		adiw r24,1
 1735 0b6c 9C83      		std Y+4,r25
 1736 0b6e 8B83      		std Y+3,r24
 1737               	.L44:
1248:lp_solve_5.5/colamd/colamd.c **** 	{
 1738               		.loc 1 1248 0 is_stmt 0 discriminator 1
 1739 0b70 CE01      		movw r24,r28
 1740 0b72 8D51      		subi r24,29
 1741 0b74 9F4F      		sbci r25,-1
 1742 0b76 2B81      		ldd r18,Y+3
 1743 0b78 3C81      		ldd r19,Y+4
 1744 0b7a FC01      		movw r30,r24
 1745 0b7c 8081      		ld r24,Z
 1746 0b7e 9181      		ldd r25,Z+1
 1747 0b80 2817      		cp r18,r24
 1748 0b82 3907      		cpc r19,r25
 1749 0b84 04F4      		brge .+2
 1750 0b86 00C0      		rjmp .L48
 1751 0b88 00C0      		rjmp .L49
 1752               	.L43:
1261:lp_solve_5.5/colamd/colamd.c **** 		}
1262:lp_solve_5.5/colamd/colamd.c **** 	    }
1263:lp_solve_5.5/colamd/colamd.c **** 	}
1264:lp_solve_5.5/colamd/colamd.c ****     }
1265:lp_solve_5.5/colamd/colamd.c ****     else
1266:lp_solve_5.5/colamd/colamd.c ****     {
1267:lp_solve_5.5/colamd/colamd.c **** 	/* Matrix is jumbled.  Do not add duplicates to M.  Unsorted cols OK. */
1268:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("symamd: Duplicates in A.\n")) ;
1269:lp_solve_5.5/colamd/colamd.c **** 	for (i = 0 ; i < n ; i++)
 1753               		.loc 1 1269 0 is_stmt 1
 1754 0b8a 1A82      		std Y+2,__zero_reg__
 1755 0b8c 1982      		std Y+1,__zero_reg__
 1756 0b8e 00C0      		rjmp .L50
 1757               	.L51:
1270:lp_solve_5.5/colamd/colamd.c **** 	{
1271:lp_solve_5.5/colamd/colamd.c **** 	    mark [i] = -1 ;
 1758               		.loc 1 1271 0 discriminator 3
 1759 0b90 8981      		ldd r24,Y+1
 1760 0b92 9A81      		ldd r25,Y+2
 1761 0b94 880F      		lsl r24
 1762 0b96 991F      		rol r25
 1763 0b98 2F85      		ldd r18,Y+15
 1764 0b9a 3889      		ldd r19,Y+16
 1765 0b9c 820F      		add r24,r18
 1766 0b9e 931F      		adc r25,r19
 1767 0ba0 2FEF      		ldi r18,lo8(-1)
 1768 0ba2 3FEF      		ldi r19,lo8(-1)
 1769 0ba4 FC01      		movw r30,r24
 1770 0ba6 3183      		std Z+1,r19
 1771 0ba8 2083      		st Z,r18
1269:lp_solve_5.5/colamd/colamd.c **** 	{
 1772               		.loc 1 1269 0 discriminator 3
 1773 0baa 8981      		ldd r24,Y+1
 1774 0bac 9A81      		ldd r25,Y+2
 1775 0bae 0196      		adiw r24,1
 1776 0bb0 9A83      		std Y+2,r25
 1777 0bb2 8983      		std Y+1,r24
 1778               	.L50:
1269:lp_solve_5.5/colamd/colamd.c **** 	{
 1779               		.loc 1 1269 0 is_stmt 0 discriminator 1
 1780 0bb4 CE01      		movw r24,r28
 1781 0bb6 8D51      		subi r24,29
 1782 0bb8 9F4F      		sbci r25,-1
 1783 0bba 2981      		ldd r18,Y+1
 1784 0bbc 3A81      		ldd r19,Y+2
 1785 0bbe FC01      		movw r30,r24
 1786 0bc0 8081      		ld r24,Z
 1787 0bc2 9181      		ldd r25,Z+1
 1788 0bc4 2817      		cp r18,r24
 1789 0bc6 3907      		cpc r19,r25
 1790 0bc8 04F0      		brlt .L51
1272:lp_solve_5.5/colamd/colamd.c **** 	}
1273:lp_solve_5.5/colamd/colamd.c **** 	for (j = 0 ; j < n ; j++)
 1791               		.loc 1 1273 0 is_stmt 1
 1792 0bca 1C82      		std Y+4,__zero_reg__
 1793 0bcc 1B82      		std Y+3,__zero_reg__
 1794 0bce 00C0      		rjmp .L52
 1795               	.L56:
1274:lp_solve_5.5/colamd/colamd.c **** 	{
1275:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (p [j+1] - p [j] >= 0) ;
1276:lp_solve_5.5/colamd/colamd.c **** 	    for (pp = p [j] ; pp < p [j+1] ; pp++)
 1796               		.loc 1 1276 0
 1797 0bd0 8B81      		ldd r24,Y+3
 1798 0bd2 9C81      		ldd r25,Y+4
 1799 0bd4 880F      		lsl r24
 1800 0bd6 991F      		rol r25
 1801 0bd8 9E01      		movw r18,r28
 1802 0bda 2951      		subi r18,25
 1803 0bdc 3F4F      		sbci r19,-1
 1804 0bde F901      		movw r30,r18
 1805 0be0 2081      		ld r18,Z
 1806 0be2 3181      		ldd r19,Z+1
 1807 0be4 820F      		add r24,r18
 1808 0be6 931F      		adc r25,r19
 1809 0be8 FC01      		movw r30,r24
 1810 0bea 8081      		ld r24,Z
 1811 0bec 9181      		ldd r25,Z+1
 1812 0bee 9887      		std Y+8,r25
 1813 0bf0 8F83      		std Y+7,r24
 1814 0bf2 00C0      		rjmp .L53
 1815               	.L55:
1277:lp_solve_5.5/colamd/colamd.c **** 	    {
1278:lp_solve_5.5/colamd/colamd.c **** 		i = A [pp] ;
 1816               		.loc 1 1278 0
 1817 0bf4 8F81      		ldd r24,Y+7
 1818 0bf6 9885      		ldd r25,Y+8
 1819 0bf8 880F      		lsl r24
 1820 0bfa 991F      		rol r25
 1821 0bfc 9E01      		movw r18,r28
 1822 0bfe 2B51      		subi r18,27
 1823 0c00 3F4F      		sbci r19,-1
 1824 0c02 F901      		movw r30,r18
 1825 0c04 2081      		ld r18,Z
 1826 0c06 3181      		ldd r19,Z+1
 1827 0c08 820F      		add r24,r18
 1828 0c0a 931F      		adc r25,r19
 1829 0c0c FC01      		movw r30,r24
 1830 0c0e 8081      		ld r24,Z
 1831 0c10 9181      		ldd r25,Z+1
 1832 0c12 9A83      		std Y+2,r25
 1833 0c14 8983      		std Y+1,r24
1279:lp_solve_5.5/colamd/colamd.c **** 		ASSERT (i >= 0 && i < n) ;
1280:lp_solve_5.5/colamd/colamd.c **** 		if (i > j && mark [i] != j)
 1834               		.loc 1 1280 0
 1835 0c16 2981      		ldd r18,Y+1
 1836 0c18 3A81      		ldd r19,Y+2
 1837 0c1a 8B81      		ldd r24,Y+3
 1838 0c1c 9C81      		ldd r25,Y+4
 1839 0c1e 8217      		cp r24,r18
 1840 0c20 9307      		cpc r25,r19
 1841 0c22 04F0      		brlt .+2
 1842 0c24 00C0      		rjmp .L54
 1843               		.loc 1 1280 0 is_stmt 0 discriminator 1
 1844 0c26 8981      		ldd r24,Y+1
 1845 0c28 9A81      		ldd r25,Y+2
 1846 0c2a 880F      		lsl r24
 1847 0c2c 991F      		rol r25
 1848 0c2e 2F85      		ldd r18,Y+15
 1849 0c30 3889      		ldd r19,Y+16
 1850 0c32 820F      		add r24,r18
 1851 0c34 931F      		adc r25,r19
 1852 0c36 FC01      		movw r30,r24
 1853 0c38 2081      		ld r18,Z
 1854 0c3a 3181      		ldd r19,Z+1
 1855 0c3c 8B81      		ldd r24,Y+3
 1856 0c3e 9C81      		ldd r25,Y+4
 1857 0c40 2817      		cp r18,r24
 1858 0c42 3907      		cpc r19,r25
 1859 0c44 01F4      		brne .+2
 1860 0c46 00C0      		rjmp .L54
1281:lp_solve_5.5/colamd/colamd.c **** 		{
1282:lp_solve_5.5/colamd/colamd.c **** 		    /* row k of M contains column indices i and j */
1283:lp_solve_5.5/colamd/colamd.c **** 		    M [count [i]++] = k ;
 1861               		.loc 1 1283 0 is_stmt 1
 1862 0c48 8981      		ldd r24,Y+1
 1863 0c4a 9A81      		ldd r25,Y+2
 1864 0c4c 880F      		lsl r24
 1865 0c4e 991F      		rol r25
 1866 0c50 2D85      		ldd r18,Y+13
 1867 0c52 3E85      		ldd r19,Y+14
 1868 0c54 820F      		add r24,r18
 1869 0c56 931F      		adc r25,r19
 1870 0c58 FC01      		movw r30,r24
 1871 0c5a 2081      		ld r18,Z
 1872 0c5c 3181      		ldd r19,Z+1
 1873 0c5e A901      		movw r20,r18
 1874 0c60 4F5F      		subi r20,-1
 1875 0c62 5F4F      		sbci r21,-1
 1876 0c64 FC01      		movw r30,r24
 1877 0c66 5183      		std Z+1,r21
 1878 0c68 4083      		st Z,r20
 1879 0c6a C901      		movw r24,r18
 1880 0c6c 880F      		lsl r24
 1881 0c6e 991F      		rol r25
 1882 0c70 298D      		ldd r18,Y+25
 1883 0c72 3A8D      		ldd r19,Y+26
 1884 0c74 820F      		add r24,r18
 1885 0c76 931F      		adc r25,r19
 1886 0c78 2D81      		ldd r18,Y+5
 1887 0c7a 3E81      		ldd r19,Y+6
 1888 0c7c FC01      		movw r30,r24
 1889 0c7e 3183      		std Z+1,r19
 1890 0c80 2083      		st Z,r18
1284:lp_solve_5.5/colamd/colamd.c **** 		    M [count [j]++] = k ;
 1891               		.loc 1 1284 0
 1892 0c82 8B81      		ldd r24,Y+3
 1893 0c84 9C81      		ldd r25,Y+4
 1894 0c86 880F      		lsl r24
 1895 0c88 991F      		rol r25
 1896 0c8a 2D85      		ldd r18,Y+13
 1897 0c8c 3E85      		ldd r19,Y+14
 1898 0c8e 820F      		add r24,r18
 1899 0c90 931F      		adc r25,r19
 1900 0c92 FC01      		movw r30,r24
 1901 0c94 2081      		ld r18,Z
 1902 0c96 3181      		ldd r19,Z+1
 1903 0c98 A901      		movw r20,r18
 1904 0c9a 4F5F      		subi r20,-1
 1905 0c9c 5F4F      		sbci r21,-1
 1906 0c9e FC01      		movw r30,r24
 1907 0ca0 5183      		std Z+1,r21
 1908 0ca2 4083      		st Z,r20
 1909 0ca4 C901      		movw r24,r18
 1910 0ca6 880F      		lsl r24
 1911 0ca8 991F      		rol r25
 1912 0caa 298D      		ldd r18,Y+25
 1913 0cac 3A8D      		ldd r19,Y+26
 1914 0cae 820F      		add r24,r18
 1915 0cb0 931F      		adc r25,r19
 1916 0cb2 2D81      		ldd r18,Y+5
 1917 0cb4 3E81      		ldd r19,Y+6
 1918 0cb6 FC01      		movw r30,r24
 1919 0cb8 3183      		std Z+1,r19
 1920 0cba 2083      		st Z,r18
1285:lp_solve_5.5/colamd/colamd.c **** 		    k++ ;
 1921               		.loc 1 1285 0
 1922 0cbc 8D81      		ldd r24,Y+5
 1923 0cbe 9E81      		ldd r25,Y+6
 1924 0cc0 0196      		adiw r24,1
 1925 0cc2 9E83      		std Y+6,r25
 1926 0cc4 8D83      		std Y+5,r24
1286:lp_solve_5.5/colamd/colamd.c **** 		    mark [i] = j ;
 1927               		.loc 1 1286 0
 1928 0cc6 8981      		ldd r24,Y+1
 1929 0cc8 9A81      		ldd r25,Y+2
 1930 0cca 880F      		lsl r24
 1931 0ccc 991F      		rol r25
 1932 0cce 2F85      		ldd r18,Y+15
 1933 0cd0 3889      		ldd r19,Y+16
 1934 0cd2 820F      		add r24,r18
 1935 0cd4 931F      		adc r25,r19
 1936 0cd6 2B81      		ldd r18,Y+3
 1937 0cd8 3C81      		ldd r19,Y+4
 1938 0cda FC01      		movw r30,r24
 1939 0cdc 3183      		std Z+1,r19
 1940 0cde 2083      		st Z,r18
 1941               	.L54:
1276:lp_solve_5.5/colamd/colamd.c **** 	    {
 1942               		.loc 1 1276 0 discriminator 2
 1943 0ce0 8F81      		ldd r24,Y+7
 1944 0ce2 9885      		ldd r25,Y+8
 1945 0ce4 0196      		adiw r24,1
 1946 0ce6 9887      		std Y+8,r25
 1947 0ce8 8F83      		std Y+7,r24
 1948               	.L53:
1276:lp_solve_5.5/colamd/colamd.c **** 	    {
 1949               		.loc 1 1276 0 is_stmt 0 discriminator 1
 1950 0cea 8B81      		ldd r24,Y+3
 1951 0cec 9C81      		ldd r25,Y+4
 1952 0cee 0196      		adiw r24,1
 1953 0cf0 880F      		lsl r24
 1954 0cf2 991F      		rol r25
 1955 0cf4 9E01      		movw r18,r28
 1956 0cf6 2951      		subi r18,25
 1957 0cf8 3F4F      		sbci r19,-1
 1958 0cfa F901      		movw r30,r18
 1959 0cfc 2081      		ld r18,Z
 1960 0cfe 3181      		ldd r19,Z+1
 1961 0d00 820F      		add r24,r18
 1962 0d02 931F      		adc r25,r19
 1963 0d04 FC01      		movw r30,r24
 1964 0d06 2081      		ld r18,Z
 1965 0d08 3181      		ldd r19,Z+1
 1966 0d0a 8F81      		ldd r24,Y+7
 1967 0d0c 9885      		ldd r25,Y+8
 1968 0d0e 8217      		cp r24,r18
 1969 0d10 9307      		cpc r25,r19
 1970 0d12 04F4      		brge .+2
 1971 0d14 00C0      		rjmp .L55
1273:lp_solve_5.5/colamd/colamd.c **** 	{
 1972               		.loc 1 1273 0 is_stmt 1 discriminator 2
 1973 0d16 8B81      		ldd r24,Y+3
 1974 0d18 9C81      		ldd r25,Y+4
 1975 0d1a 0196      		adiw r24,1
 1976 0d1c 9C83      		std Y+4,r25
 1977 0d1e 8B83      		std Y+3,r24
 1978               	.L52:
1273:lp_solve_5.5/colamd/colamd.c **** 	{
 1979               		.loc 1 1273 0 is_stmt 0 discriminator 1
 1980 0d20 CE01      		movw r24,r28
 1981 0d22 8D51      		subi r24,29
 1982 0d24 9F4F      		sbci r25,-1
 1983 0d26 2B81      		ldd r18,Y+3
 1984 0d28 3C81      		ldd r19,Y+4
 1985 0d2a FC01      		movw r30,r24
 1986 0d2c 8081      		ld r24,Z
 1987 0d2e 9181      		ldd r25,Z+1
 1988 0d30 2817      		cp r18,r24
 1989 0d32 3907      		cpc r19,r25
 1990 0d34 04F4      		brge .+2
 1991 0d36 00C0      		rjmp .L56
1287:lp_solve_5.5/colamd/colamd.c **** 		}
1288:lp_solve_5.5/colamd/colamd.c **** 	    }
1289:lp_solve_5.5/colamd/colamd.c **** 	}
1290:lp_solve_5.5/colamd/colamd.c **** 	(*release) ((void *) mark) ;
 1992               		.loc 1 1290 0 is_stmt 1
 1993 0d38 4F85      		ldd r20,Y+15
 1994 0d3a 5889      		ldd r21,Y+16
 1995 0d3c CE01      		movw r24,r28
 1996 0d3e 8F50      		subi r24,15
 1997 0d40 9F4F      		sbci r25,-1
 1998 0d42 FC01      		movw r30,r24
 1999 0d44 2081      		ld r18,Z
 2000 0d46 3181      		ldd r19,Z+1
 2001 0d48 CA01      		movw r24,r20
 2002 0d4a F901      		movw r30,r18
 2003 0d4c 0995      		icall
 2004               	.L49:
1291:lp_solve_5.5/colamd/colamd.c ****     }
1292:lp_solve_5.5/colamd/colamd.c **** 
1293:lp_solve_5.5/colamd/colamd.c ****     /* count and mark no longer needed */
1294:lp_solve_5.5/colamd/colamd.c ****     (*release) ((void *) count) ;
 2005               		.loc 1 1294 0
 2006 0d4e 4D85      		ldd r20,Y+13
 2007 0d50 5E85      		ldd r21,Y+14
 2008 0d52 CE01      		movw r24,r28
 2009 0d54 8F50      		subi r24,15
 2010 0d56 9F4F      		sbci r25,-1
 2011 0d58 FC01      		movw r30,r24
 2012 0d5a 2081      		ld r18,Z
 2013 0d5c 3181      		ldd r19,Z+1
 2014 0d5e CA01      		movw r24,r20
 2015 0d60 F901      		movw r30,r18
 2016 0d62 0995      		icall
1295:lp_solve_5.5/colamd/colamd.c ****     ASSERT (k == n_row) ;
1296:lp_solve_5.5/colamd/colamd.c **** 
1297:lp_solve_5.5/colamd/colamd.c ****     /* === Adjust the knobs for M =========================================== */
1298:lp_solve_5.5/colamd/colamd.c **** 
1299:lp_solve_5.5/colamd/colamd.c ****     for (i = 0 ; i < COLAMD_KNOBS ; i++)
 2017               		.loc 1 1299 0
 2018 0d64 1A82      		std Y+2,__zero_reg__
 2019 0d66 1982      		std Y+1,__zero_reg__
 2020 0d68 00C0      		rjmp .L57
 2021               	.L58:
1300:lp_solve_5.5/colamd/colamd.c ****     {
1301:lp_solve_5.5/colamd/colamd.c **** 	cknobs [i] = knobs [i] ;
 2022               		.loc 1 1301 0 discriminator 3
 2023 0d6a 8981      		ldd r24,Y+1
 2024 0d6c 9A81      		ldd r25,Y+2
 2025 0d6e 880F      		lsl r24
 2026 0d70 991F      		rol r25
 2027 0d72 880F      		lsl r24
 2028 0d74 991F      		rol r25
 2029 0d76 9E01      		movw r18,r28
 2030 0d78 2551      		subi r18,21
 2031 0d7a 3F4F      		sbci r19,-1
 2032 0d7c F901      		movw r30,r18
 2033 0d7e 2081      		ld r18,Z
 2034 0d80 3181      		ldd r19,Z+1
 2035 0d82 820F      		add r24,r18
 2036 0d84 931F      		adc r25,r19
 2037 0d86 FC01      		movw r30,r24
 2038 0d88 8081      		ld r24,Z
 2039 0d8a 9181      		ldd r25,Z+1
 2040 0d8c A281      		ldd r26,Z+2
 2041 0d8e B381      		ldd r27,Z+3
 2042 0d90 2981      		ldd r18,Y+1
 2043 0d92 3A81      		ldd r19,Y+2
 2044 0d94 220F      		lsl r18
 2045 0d96 331F      		rol r19
 2046 0d98 220F      		lsl r18
 2047 0d9a 331F      		rol r19
 2048 0d9c AE01      		movw r20,r28
 2049 0d9e 4F5F      		subi r20,-1
 2050 0da0 5F4F      		sbci r21,-1
 2051 0da2 240F      		add r18,r20
 2052 0da4 351F      		adc r19,r21
 2053 0da6 265E      		subi r18,-26
 2054 0da8 3F4F      		sbci r19,-1
 2055 0daa F901      		movw r30,r18
 2056 0dac 8083      		st Z,r24
 2057 0dae 9183      		std Z+1,r25
 2058 0db0 A283      		std Z+2,r26
 2059 0db2 B383      		std Z+3,r27
1299:lp_solve_5.5/colamd/colamd.c ****     {
 2060               		.loc 1 1299 0 discriminator 3
 2061 0db4 8981      		ldd r24,Y+1
 2062 0db6 9A81      		ldd r25,Y+2
 2063 0db8 0196      		adiw r24,1
 2064 0dba 9A83      		std Y+2,r25
 2065 0dbc 8983      		std Y+1,r24
 2066               	.L57:
1299:lp_solve_5.5/colamd/colamd.c ****     {
 2067               		.loc 1 1299 0 is_stmt 0 discriminator 1
 2068 0dbe 8981      		ldd r24,Y+1
 2069 0dc0 9A81      		ldd r25,Y+2
 2070 0dc2 4497      		sbiw r24,20
 2071 0dc4 04F0      		brlt .L58
1302:lp_solve_5.5/colamd/colamd.c ****     }
1303:lp_solve_5.5/colamd/colamd.c **** 
1304:lp_solve_5.5/colamd/colamd.c ****     /* there are no dense rows in M */
1305:lp_solve_5.5/colamd/colamd.c ****     cknobs [COLAMD_DENSE_ROW] = 1.0 ;
 2072               		.loc 1 1305 0 is_stmt 1
 2073 0dc6 80E0      		ldi r24,0
 2074 0dc8 90E0      		ldi r25,0
 2075 0dca A0E8      		ldi r26,lo8(-128)
 2076 0dcc BFE3      		ldi r27,lo8(63)
 2077 0dce 8B8F      		std Y+27,r24
 2078 0dd0 9C8F      		std Y+28,r25
 2079 0dd2 AD8F      		std Y+29,r26
 2080 0dd4 BE8F      		std Y+30,r27
1306:lp_solve_5.5/colamd/colamd.c **** 
1307:lp_solve_5.5/colamd/colamd.c ****     if (n_row != 0 && n < n_row)
 2081               		.loc 1 1307 0
 2082 0dd6 8D89      		ldd r24,Y+21
 2083 0dd8 9E89      		ldd r25,Y+22
 2084 0dda 892B      		or r24,r25
 2085 0ddc 01F4      		brne .+2
 2086 0dde 00C0      		rjmp .L59
 2087               		.loc 1 1307 0 is_stmt 0 discriminator 1
 2088 0de0 CE01      		movw r24,r28
 2089 0de2 8D51      		subi r24,29
 2090 0de4 9F4F      		sbci r25,-1
 2091 0de6 FC01      		movw r30,r24
 2092 0de8 2081      		ld r18,Z
 2093 0dea 3181      		ldd r19,Z+1
 2094 0dec 8D89      		ldd r24,Y+21
 2095 0dee 9E89      		ldd r25,Y+22
 2096 0df0 2817      		cp r18,r24
 2097 0df2 3907      		cpc r19,r25
 2098 0df4 04F4      		brge .L59
1308:lp_solve_5.5/colamd/colamd.c ****     {
1309:lp_solve_5.5/colamd/colamd.c **** 	/* On input, the knob is a fraction of 1..n, the number of rows of A. */
1310:lp_solve_5.5/colamd/colamd.c **** 	/* Convert it to a fraction of 1..n_row, of the number of rows of M. */
1311:lp_solve_5.5/colamd/colamd.c ****     	cknobs [COLAMD_DENSE_COL] = (knobs [COLAMD_DENSE_ROW] * n) / n_row ;
 2099               		.loc 1 1311 0 is_stmt 1
 2100 0df6 CE01      		movw r24,r28
 2101 0df8 8551      		subi r24,21
 2102 0dfa 9F4F      		sbci r25,-1
 2103 0dfc FC01      		movw r30,r24
 2104 0dfe 8081      		ld r24,Z
 2105 0e00 9181      		ldd r25,Z+1
 2106 0e02 FC01      		movw r30,r24
 2107 0e04 C080      		ld r12,Z
 2108 0e06 D180      		ldd r13,Z+1
 2109 0e08 E280      		ldd r14,Z+2
 2110 0e0a F380      		ldd r15,Z+3
 2111 0e0c CE01      		movw r24,r28
 2112 0e0e 8D51      		subi r24,29
 2113 0e10 9F4F      		sbci r25,-1
 2114 0e12 FC01      		movw r30,r24
 2115 0e14 8081      		ld r24,Z
 2116 0e16 9181      		ldd r25,Z+1
 2117 0e18 092E      		mov __tmp_reg__,r25
 2118 0e1a 000C      		lsl r0
 2119 0e1c AA0B      		sbc r26,r26
 2120 0e1e BB0B      		sbc r27,r27
 2121 0e20 BC01      		movw r22,r24
 2122 0e22 CD01      		movw r24,r26
 2123 0e24 0E94 0000 		call __floatsisf
 2124 0e28 DC01      		movw r26,r24
 2125 0e2a CB01      		movw r24,r22
 2126 0e2c 9C01      		movw r18,r24
 2127 0e2e AD01      		movw r20,r26
 2128 0e30 C701      		movw r24,r14
 2129 0e32 B601      		movw r22,r12
 2130 0e34 0E94 0000 		call __mulsf3
 2131 0e38 DC01      		movw r26,r24
 2132 0e3a CB01      		movw r24,r22
 2133 0e3c 6C01      		movw r12,r24
 2134 0e3e 7D01      		movw r14,r26
 2135 0e40 8D89      		ldd r24,Y+21
 2136 0e42 9E89      		ldd r25,Y+22
 2137 0e44 092E      		mov __tmp_reg__,r25
 2138 0e46 000C      		lsl r0
 2139 0e48 AA0B      		sbc r26,r26
 2140 0e4a BB0B      		sbc r27,r27
 2141 0e4c BC01      		movw r22,r24
 2142 0e4e CD01      		movw r24,r26
 2143 0e50 0E94 0000 		call __floatsisf
 2144 0e54 DC01      		movw r26,r24
 2145 0e56 CB01      		movw r24,r22
 2146 0e58 9C01      		movw r18,r24
 2147 0e5a AD01      		movw r20,r26
 2148 0e5c C701      		movw r24,r14
 2149 0e5e B601      		movw r22,r12
 2150 0e60 0E94 0000 		call __divsf3
 2151 0e64 DC01      		movw r26,r24
 2152 0e66 CB01      		movw r24,r22
 2153 0e68 8F8F      		std Y+31,r24
 2154 0e6a 98A3      		std Y+32,r25
 2155 0e6c A9A3      		std Y+33,r26
 2156 0e6e BAA3      		std Y+34,r27
 2157 0e70 00C0      		rjmp .L60
 2158               	.L59:
1312:lp_solve_5.5/colamd/colamd.c ****     }
1313:lp_solve_5.5/colamd/colamd.c ****     else
1314:lp_solve_5.5/colamd/colamd.c ****     {
1315:lp_solve_5.5/colamd/colamd.c **** 	/* no dense columns in M */
1316:lp_solve_5.5/colamd/colamd.c ****     	cknobs [COLAMD_DENSE_COL] = 1.0 ;
 2159               		.loc 1 1316 0
 2160 0e72 80E0      		ldi r24,0
 2161 0e74 90E0      		ldi r25,0
 2162 0e76 A0E8      		ldi r26,lo8(-128)
 2163 0e78 BFE3      		ldi r27,lo8(63)
 2164 0e7a 8F8F      		std Y+31,r24
 2165 0e7c 98A3      		std Y+32,r25
 2166 0e7e A9A3      		std Y+33,r26
 2167 0e80 BAA3      		std Y+34,r27
 2168               	.L60:
1317:lp_solve_5.5/colamd/colamd.c ****     }
1318:lp_solve_5.5/colamd/colamd.c **** 
1319:lp_solve_5.5/colamd/colamd.c ****     DEBUG0 (("symamd: dense col knob for M: %g\n", cknobs [COLAMD_DENSE_COL])) ;
1320:lp_solve_5.5/colamd/colamd.c **** 
1321:lp_solve_5.5/colamd/colamd.c ****     /* === Order the columns of M =========================================== */
1322:lp_solve_5.5/colamd/colamd.c **** 
1323:lp_solve_5.5/colamd/colamd.c ****     if (!colamd (n_row, n, Mlen, M, perm, cknobs, cstats))
 2169               		.loc 1 1323 0
 2170 0e82 8E01      		movw r16,r28
 2171 0e84 0554      		subi r16,69
 2172 0e86 1F4F      		sbci r17,-1
 2173 0e88 DE01      		movw r26,r28
 2174 0e8a 5B96      		adiw r26,27
 2175 0e8c CE01      		movw r24,r28
 2176 0e8e 8751      		subi r24,23
 2177 0e90 9F4F      		sbci r25,-1
 2178 0e92 FC01      		movw r30,r24
 2179 0e94 0190      		ld __tmp_reg__,Z+
 2180 0e96 F081      		ld r31,Z
 2181 0e98 E02D      		mov r30,__tmp_reg__
 2182 0e9a CD50      		subi r28,lo8(-243)
 2183 0e9c DF4F      		sbci r29,hi8(-243)
 2184 0e9e F983      		std Y+1,r31
 2185 0ea0 E883      		st Y,r30
 2186 0ea2 C35F      		subi r28,lo8(243)
 2187 0ea4 D040      		sbci r29,hi8(243)
 2188 0ea6 298D      		ldd r18,Y+25
 2189 0ea8 3A8D      		ldd r19,Y+26
 2190 0eaa 4F89      		ldd r20,Y+23
 2191 0eac 588D      		ldd r21,Y+24
 2192 0eae CE01      		movw r24,r28
 2193 0eb0 8D51      		subi r24,29
 2194 0eb2 9F4F      		sbci r25,-1
 2195 0eb4 FC01      		movw r30,r24
 2196 0eb6 6081      		ld r22,Z
 2197 0eb8 7181      		ldd r23,Z+1
 2198 0eba 8D89      		ldd r24,Y+21
 2199 0ebc 9E89      		ldd r25,Y+22
 2200 0ebe 6801      		movw r12,r16
 2201 0ec0 7D01      		movw r14,r26
 2202 0ec2 CD50      		subi r28,lo8(-243)
 2203 0ec4 DF4F      		sbci r29,hi8(-243)
 2204 0ec6 0881      		ld r16,Y
 2205 0ec8 1981      		ldd r17,Y+1
 2206 0eca C35F      		subi r28,lo8(243)
 2207 0ecc D040      		sbci r29,hi8(243)
 2208 0ece 0E94 0000 		call colamd
 2209 0ed2 892B      		or r24,r25
 2210 0ed4 01F4      		brne .L61
1324:lp_solve_5.5/colamd/colamd.c ****     {
1325:lp_solve_5.5/colamd/colamd.c **** 	/* This "cannot" happen, unless there is a bug in the code. */
1326:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_STATUS] = COLAMD_ERROR_internal_error ;
 2211               		.loc 1 1326 0
 2212 0ed6 CE01      		movw r24,r28
 2213 0ed8 8351      		subi r24,19
 2214 0eda 9F4F      		sbci r25,-1
 2215 0edc FC01      		movw r30,r24
 2216 0ede 8081      		ld r24,Z
 2217 0ee0 9181      		ldd r25,Z+1
 2218 0ee2 0696      		adiw r24,6
 2219 0ee4 29E1      		ldi r18,lo8(25)
 2220 0ee6 3CEF      		ldi r19,lo8(-4)
 2221 0ee8 FC01      		movw r30,r24
 2222 0eea 3183      		std Z+1,r19
 2223 0eec 2083      		st Z,r18
1327:lp_solve_5.5/colamd/colamd.c **** 	(*release) ((void *) M) ;
 2224               		.loc 1 1327 0
 2225 0eee 498D      		ldd r20,Y+25
 2226 0ef0 5A8D      		ldd r21,Y+26
 2227 0ef2 CE01      		movw r24,r28
 2228 0ef4 8F50      		subi r24,15
 2229 0ef6 9F4F      		sbci r25,-1
 2230 0ef8 FC01      		movw r30,r24
 2231 0efa 2081      		ld r18,Z
 2232 0efc 3181      		ldd r19,Z+1
 2233 0efe CA01      		movw r24,r20
 2234 0f00 F901      		movw r30,r18
 2235 0f02 0995      		icall
1328:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("symamd: internal error!\n")) ;
1329:lp_solve_5.5/colamd/colamd.c **** 	return (FALSE) ;
 2236               		.loc 1 1329 0
 2237 0f04 80E0      		ldi r24,0
 2238 0f06 90E0      		ldi r25,0
 2239 0f08 00C0      		rjmp .L62
 2240               	.L61:
1330:lp_solve_5.5/colamd/colamd.c ****     }
1331:lp_solve_5.5/colamd/colamd.c **** 
1332:lp_solve_5.5/colamd/colamd.c ****     /* Note that the output permutation is now in perm */
1333:lp_solve_5.5/colamd/colamd.c **** 
1334:lp_solve_5.5/colamd/colamd.c ****     /* === get the statistics for symamd from colamd ======================== */
1335:lp_solve_5.5/colamd/colamd.c **** 
1336:lp_solve_5.5/colamd/colamd.c ****     /* note that a dense column in colamd means a dense row and col in symamd */
1337:lp_solve_5.5/colamd/colamd.c ****     stats [COLAMD_DENSE_ROW]    = cstats [COLAMD_DENSE_COL] ;
 2241               		.loc 1 1337 0
 2242 0f0a CE01      		movw r24,r28
 2243 0f0c 8554      		subi r24,69
 2244 0f0e 9F4F      		sbci r25,-1
 2245 0f10 FC01      		movw r30,r24
 2246 0f12 2281      		ldd r18,Z+2
 2247 0f14 3381      		ldd r19,Z+3
 2248 0f16 CE01      		movw r24,r28
 2249 0f18 8351      		subi r24,19
 2250 0f1a 9F4F      		sbci r25,-1
 2251 0f1c FC01      		movw r30,r24
 2252 0f1e 8081      		ld r24,Z
 2253 0f20 9181      		ldd r25,Z+1
 2254 0f22 FC01      		movw r30,r24
 2255 0f24 3183      		std Z+1,r19
 2256 0f26 2083      		st Z,r18
1338:lp_solve_5.5/colamd/colamd.c ****     stats [COLAMD_DENSE_COL]    = cstats [COLAMD_DENSE_COL] ;
 2257               		.loc 1 1338 0
 2258 0f28 CE01      		movw r24,r28
 2259 0f2a 8351      		subi r24,19
 2260 0f2c 9F4F      		sbci r25,-1
 2261 0f2e FC01      		movw r30,r24
 2262 0f30 8081      		ld r24,Z
 2263 0f32 9181      		ldd r25,Z+1
 2264 0f34 0296      		adiw r24,2
 2265 0f36 9E01      		movw r18,r28
 2266 0f38 2554      		subi r18,69
 2267 0f3a 3F4F      		sbci r19,-1
 2268 0f3c F901      		movw r30,r18
 2269 0f3e 2281      		ldd r18,Z+2
 2270 0f40 3381      		ldd r19,Z+3
 2271 0f42 FC01      		movw r30,r24
 2272 0f44 3183      		std Z+1,r19
 2273 0f46 2083      		st Z,r18
1339:lp_solve_5.5/colamd/colamd.c ****     stats [COLAMD_DEFRAG_COUNT] = cstats [COLAMD_DEFRAG_COUNT] ;
 2274               		.loc 1 1339 0
 2275 0f48 CE01      		movw r24,r28
 2276 0f4a 8351      		subi r24,19
 2277 0f4c 9F4F      		sbci r25,-1
 2278 0f4e FC01      		movw r30,r24
 2279 0f50 8081      		ld r24,Z
 2280 0f52 9181      		ldd r25,Z+1
 2281 0f54 0496      		adiw r24,4
 2282 0f56 9E01      		movw r18,r28
 2283 0f58 2554      		subi r18,69
 2284 0f5a 3F4F      		sbci r19,-1
 2285 0f5c F901      		movw r30,r18
 2286 0f5e 2481      		ldd r18,Z+4
 2287 0f60 3581      		ldd r19,Z+5
 2288 0f62 FC01      		movw r30,r24
 2289 0f64 3183      		std Z+1,r19
 2290 0f66 2083      		st Z,r18
1340:lp_solve_5.5/colamd/colamd.c **** 
1341:lp_solve_5.5/colamd/colamd.c ****     /* === Free M =========================================================== */
1342:lp_solve_5.5/colamd/colamd.c **** 
1343:lp_solve_5.5/colamd/colamd.c ****     (*release) ((void *) M) ;
 2291               		.loc 1 1343 0
 2292 0f68 498D      		ldd r20,Y+25
 2293 0f6a 5A8D      		ldd r21,Y+26
 2294 0f6c CE01      		movw r24,r28
 2295 0f6e 8F50      		subi r24,15
 2296 0f70 9F4F      		sbci r25,-1
 2297 0f72 FC01      		movw r30,r24
 2298 0f74 2081      		ld r18,Z
 2299 0f76 3181      		ldd r19,Z+1
 2300 0f78 CA01      		movw r24,r20
 2301 0f7a F901      		movw r30,r18
 2302 0f7c 0995      		icall
1344:lp_solve_5.5/colamd/colamd.c ****     DEBUG0 (("symamd: done.\n")) ;
1345:lp_solve_5.5/colamd/colamd.c ****     return (TRUE) ;
 2303               		.loc 1 1345 0
 2304 0f7e 81E0      		ldi r24,lo8(1)
 2305 0f80 90E0      		ldi r25,0
 2306               	.L62:
 2307               	/* epilogue start */
1346:lp_solve_5.5/colamd/colamd.c **** 
1347:lp_solve_5.5/colamd/colamd.c **** }
 2308               		.loc 1 1347 0 discriminator 1
 2309 0f82 CC50      		subi r28,12
 2310 0f84 DF4F      		sbci r29,-1
 2311 0f86 0FB6      		in __tmp_reg__,__SREG__
 2312 0f88 F894      		cli
 2313 0f8a DEBF      		out __SP_H__,r29
 2314 0f8c 0FBE      		out __SREG__,__tmp_reg__
 2315 0f8e CDBF      		out __SP_L__,r28
 2316 0f90 DF91      		pop r29
 2317 0f92 CF91      		pop r28
 2318 0f94 1F91      		pop r17
 2319 0f96 0F91      		pop r16
 2320 0f98 FF90      		pop r15
 2321 0f9a EF90      		pop r14
 2322 0f9c DF90      		pop r13
 2323 0f9e CF90      		pop r12
 2324 0fa0 BF90      		pop r11
 2325 0fa2 AF90      		pop r10
 2326 0fa4 0895      		ret
 2327               		.cfi_endproc
 2328               	.LFE7:
 2330               	.global	colamd
 2332               	colamd:
 2333               	.LFB8:
1348:lp_solve_5.5/colamd/colamd.c **** 
1349:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
1350:lp_solve_5.5/colamd/colamd.c **** /* === colamd =============================================================== */
1351:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
1352:lp_solve_5.5/colamd/colamd.c **** 
1353:lp_solve_5.5/colamd/colamd.c **** /*
1354:lp_solve_5.5/colamd/colamd.c ****     The colamd routine computes a column ordering Q of a sparse matrix
1355:lp_solve_5.5/colamd/colamd.c ****     A such that the LU factorization P(AQ) = LU remains sparse, where P is
1356:lp_solve_5.5/colamd/colamd.c ****     selected via partial pivoting.   The routine can also be viewed as
1357:lp_solve_5.5/colamd/colamd.c ****     providing a permutation Q such that the Cholesky factorization
1358:lp_solve_5.5/colamd/colamd.c ****     (AQ)'(AQ) = LL' remains sparse.
1359:lp_solve_5.5/colamd/colamd.c **** */
1360:lp_solve_5.5/colamd/colamd.c **** 
1361:lp_solve_5.5/colamd/colamd.c **** PUBLIC int colamd		/* returns TRUE if successful, FALSE otherwise*/
1362:lp_solve_5.5/colamd/colamd.c **** (
1363:lp_solve_5.5/colamd/colamd.c ****     /* === Parameters ======================================================= */
1364:lp_solve_5.5/colamd/colamd.c **** 
1365:lp_solve_5.5/colamd/colamd.c ****     int n_row,			/* number of rows in A */
1366:lp_solve_5.5/colamd/colamd.c ****     int n_col,			/* number of columns in A */
1367:lp_solve_5.5/colamd/colamd.c ****     int Alen,			/* length of A */
1368:lp_solve_5.5/colamd/colamd.c ****     int A [],			/* row indices of A */
1369:lp_solve_5.5/colamd/colamd.c ****     int p [],			/* pointers to columns in A */
1370:lp_solve_5.5/colamd/colamd.c ****     double knobs [COLAMD_KNOBS],/* parameters (uses defaults if NULL) */
1371:lp_solve_5.5/colamd/colamd.c ****     int stats [COLAMD_STATS]	/* output statistics and error codes */
1372:lp_solve_5.5/colamd/colamd.c **** )
1373:lp_solve_5.5/colamd/colamd.c **** {
 2334               		.loc 1 1373 0
 2335               		.cfi_startproc
 2336 0fa6 8F92      		push r8
 2337               	.LCFI20:
 2338               		.cfi_def_cfa_offset 3
 2339               		.cfi_offset 8, -2
 2340 0fa8 9F92      		push r9
 2341               	.LCFI21:
 2342               		.cfi_def_cfa_offset 4
 2343               		.cfi_offset 9, -3
 2344 0faa AF92      		push r10
 2345               	.LCFI22:
 2346               		.cfi_def_cfa_offset 5
 2347               		.cfi_offset 10, -4
 2348 0fac BF92      		push r11
 2349               	.LCFI23:
 2350               		.cfi_def_cfa_offset 6
 2351               		.cfi_offset 11, -5
 2352 0fae CF92      		push r12
 2353               	.LCFI24:
 2354               		.cfi_def_cfa_offset 7
 2355               		.cfi_offset 12, -6
 2356 0fb0 DF92      		push r13
 2357               	.LCFI25:
 2358               		.cfi_def_cfa_offset 8
 2359               		.cfi_offset 13, -7
 2360 0fb2 EF92      		push r14
 2361               	.LCFI26:
 2362               		.cfi_def_cfa_offset 9
 2363               		.cfi_offset 14, -8
 2364 0fb4 FF92      		push r15
 2365               	.LCFI27:
 2366               		.cfi_def_cfa_offset 10
 2367               		.cfi_offset 15, -9
 2368 0fb6 0F93      		push r16
 2369               	.LCFI28:
 2370               		.cfi_def_cfa_offset 11
 2371               		.cfi_offset 16, -10
 2372 0fb8 1F93      		push r17
 2373               	.LCFI29:
 2374               		.cfi_def_cfa_offset 12
 2375               		.cfi_offset 17, -11
 2376 0fba CF93      		push r28
 2377               	.LCFI30:
 2378               		.cfi_def_cfa_offset 13
 2379               		.cfi_offset 28, -12
 2380 0fbc DF93      		push r29
 2381               	.LCFI31:
 2382               		.cfi_def_cfa_offset 14
 2383               		.cfi_offset 29, -13
 2384 0fbe CDB7      		in r28,__SP_L__
 2385 0fc0 DEB7      		in r29,__SP_H__
 2386               	.LCFI32:
 2387               		.cfi_def_cfa_register 28
 2388 0fc2 C657      		subi r28,118
 2389 0fc4 D109      		sbc r29,__zero_reg__
 2390               	.LCFI33:
 2391               		.cfi_def_cfa_offset 132
 2392 0fc6 0FB6      		in __tmp_reg__,__SREG__
 2393 0fc8 F894      		cli
 2394 0fca DEBF      		out __SP_H__,r29
 2395 0fcc 0FBE      		out __SREG__,__tmp_reg__
 2396 0fce CDBF      		out __SP_L__,r28
 2397               	/* prologue: function */
 2398               	/* frame size = 118 */
 2399               	/* stack size = 130 */
 2400               	.L__stack_usage = 130
 2401 0fd0 FE01      		movw r30,r28
 2402 0fd2 E959      		subi r30,-103
 2403 0fd4 FF4F      		sbci r31,-1
 2404 0fd6 9183      		std Z+1,r25
 2405 0fd8 8083      		st Z,r24
 2406 0fda CE01      		movw r24,r28
 2407 0fdc 8759      		subi r24,-105
 2408 0fde 9F4F      		sbci r25,-1
 2409 0fe0 FC01      		movw r30,r24
 2410 0fe2 7183      		std Z+1,r23
 2411 0fe4 6083      		st Z,r22
 2412 0fe6 CE01      		movw r24,r28
 2413 0fe8 8559      		subi r24,-107
 2414 0fea 9F4F      		sbci r25,-1
 2415 0fec FC01      		movw r30,r24
 2416 0fee 5183      		std Z+1,r21
 2417 0ff0 4083      		st Z,r20
 2418 0ff2 CE01      		movw r24,r28
 2419 0ff4 8359      		subi r24,-109
 2420 0ff6 9F4F      		sbci r25,-1
 2421 0ff8 FC01      		movw r30,r24
 2422 0ffa 3183      		std Z+1,r19
 2423 0ffc 2083      		st Z,r18
 2424 0ffe CE01      		movw r24,r28
 2425 1000 8159      		subi r24,-111
 2426 1002 9F4F      		sbci r25,-1
 2427 1004 FC01      		movw r30,r24
 2428 1006 1183      		std Z+1,r17
 2429 1008 0083      		st Z,r16
 2430 100a CE01      		movw r24,r28
 2431 100c 8F58      		subi r24,-113
 2432 100e 9F4F      		sbci r25,-1
 2433 1010 FC01      		movw r30,r24
 2434 1012 F182      		std Z+1,r15
 2435 1014 E082      		st Z,r14
 2436 1016 CE01      		movw r24,r28
 2437 1018 8D58      		subi r24,-115
 2438 101a 9F4F      		sbci r25,-1
 2439 101c FC01      		movw r30,r24
 2440 101e D182      		std Z+1,r13
 2441 1020 C082      		st Z,r12
1374:lp_solve_5.5/colamd/colamd.c ****     /* === Local variables ================================================== */
1375:lp_solve_5.5/colamd/colamd.c **** 
1376:lp_solve_5.5/colamd/colamd.c ****     int i ;			/* loop index */
1377:lp_solve_5.5/colamd/colamd.c ****     int nnz ;			/* nonzeros in A */
1378:lp_solve_5.5/colamd/colamd.c ****     int Row_size ;		/* size of Row [], in integers */
1379:lp_solve_5.5/colamd/colamd.c ****     int Col_size ;		/* size of Col [], in integers */
1380:lp_solve_5.5/colamd/colamd.c ****     int need ;			/* minimum required length of A */
1381:lp_solve_5.5/colamd/colamd.c ****     Colamd_Row *Row ;		/* pointer into A of Row [0..n_row] array */
1382:lp_solve_5.5/colamd/colamd.c ****     Colamd_Col *Col ;		/* pointer into A of Col [0..n_col] array */
1383:lp_solve_5.5/colamd/colamd.c ****     int n_col2 ;		/* number of non-dense, non-empty columns */
1384:lp_solve_5.5/colamd/colamd.c ****     int n_row2 ;		/* number of non-dense, non-empty rows */
1385:lp_solve_5.5/colamd/colamd.c ****     int ngarbage ;		/* number of garbage collections performed */
1386:lp_solve_5.5/colamd/colamd.c ****     int max_deg ;		/* maximum row degree */
1387:lp_solve_5.5/colamd/colamd.c ****     double default_knobs [COLAMD_KNOBS] ;	/* default knobs array */
1388:lp_solve_5.5/colamd/colamd.c **** 
1389:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
1390:lp_solve_5.5/colamd/colamd.c ****     colamd_get_debug ("colamd") ;
1391:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
1392:lp_solve_5.5/colamd/colamd.c **** 
1393:lp_solve_5.5/colamd/colamd.c ****     /* === Check the input arguments ======================================== */
1394:lp_solve_5.5/colamd/colamd.c **** 
1395:lp_solve_5.5/colamd/colamd.c ****     if (!stats)
 2442               		.loc 1 1395 0
 2443 1022 CE01      		movw r24,r28
 2444 1024 8D58      		subi r24,-115
 2445 1026 9F4F      		sbci r25,-1
 2446 1028 FC01      		movw r30,r24
 2447 102a 8081      		ld r24,Z
 2448 102c 9181      		ldd r25,Z+1
 2449 102e 892B      		or r24,r25
 2450 1030 01F4      		brne .L64
1396:lp_solve_5.5/colamd/colamd.c ****     {
1397:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("colamd: stats not present\n")) ;
1398:lp_solve_5.5/colamd/colamd.c **** 	return (FALSE) ;
 2451               		.loc 1 1398 0
 2452 1032 80E0      		ldi r24,0
 2453 1034 90E0      		ldi r25,0
 2454 1036 00C0      		rjmp .L77
 2455               	.L64:
1399:lp_solve_5.5/colamd/colamd.c ****     }
1400:lp_solve_5.5/colamd/colamd.c ****     for (i = 0 ; i < COLAMD_STATS ; i++)
 2456               		.loc 1 1400 0
 2457 1038 1A82      		std Y+2,__zero_reg__
 2458 103a 1982      		std Y+1,__zero_reg__
 2459 103c 00C0      		rjmp .L66
 2460               	.L67:
1401:lp_solve_5.5/colamd/colamd.c ****     {
1402:lp_solve_5.5/colamd/colamd.c **** 	stats [i] = 0 ;
 2461               		.loc 1 1402 0 discriminator 3
 2462 103e 8981      		ldd r24,Y+1
 2463 1040 9A81      		ldd r25,Y+2
 2464 1042 880F      		lsl r24
 2465 1044 991F      		rol r25
 2466 1046 9E01      		movw r18,r28
 2467 1048 2D58      		subi r18,-115
 2468 104a 3F4F      		sbci r19,-1
 2469 104c F901      		movw r30,r18
 2470 104e 2081      		ld r18,Z
 2471 1050 3181      		ldd r19,Z+1
 2472 1052 820F      		add r24,r18
 2473 1054 931F      		adc r25,r19
 2474 1056 FC01      		movw r30,r24
 2475 1058 1182      		std Z+1,__zero_reg__
 2476 105a 1082      		st Z,__zero_reg__
1400:lp_solve_5.5/colamd/colamd.c ****     {
 2477               		.loc 1 1400 0 discriminator 3
 2478 105c 8981      		ldd r24,Y+1
 2479 105e 9A81      		ldd r25,Y+2
 2480 1060 0196      		adiw r24,1
 2481 1062 9A83      		std Y+2,r25
 2482 1064 8983      		std Y+1,r24
 2483               	.L66:
1400:lp_solve_5.5/colamd/colamd.c ****     {
 2484               		.loc 1 1400 0 is_stmt 0 discriminator 1
 2485 1066 8981      		ldd r24,Y+1
 2486 1068 9A81      		ldd r25,Y+2
 2487 106a 4497      		sbiw r24,20
 2488 106c 04F0      		brlt .L67
1403:lp_solve_5.5/colamd/colamd.c ****     }
1404:lp_solve_5.5/colamd/colamd.c ****     stats [COLAMD_STATUS] = COLAMD_OK ;
 2489               		.loc 1 1404 0 is_stmt 1
 2490 106e CE01      		movw r24,r28
 2491 1070 8D58      		subi r24,-115
 2492 1072 9F4F      		sbci r25,-1
 2493 1074 FC01      		movw r30,r24
 2494 1076 8081      		ld r24,Z
 2495 1078 9181      		ldd r25,Z+1
 2496 107a 0696      		adiw r24,6
 2497 107c FC01      		movw r30,r24
 2498 107e 1182      		std Z+1,__zero_reg__
 2499 1080 1082      		st Z,__zero_reg__
1405:lp_solve_5.5/colamd/colamd.c ****     stats [COLAMD_INFO1] = -1 ;
 2500               		.loc 1 1405 0
 2501 1082 CE01      		movw r24,r28
 2502 1084 8D58      		subi r24,-115
 2503 1086 9F4F      		sbci r25,-1
 2504 1088 FC01      		movw r30,r24
 2505 108a 8081      		ld r24,Z
 2506 108c 9181      		ldd r25,Z+1
 2507 108e 0896      		adiw r24,8
 2508 1090 2FEF      		ldi r18,lo8(-1)
 2509 1092 3FEF      		ldi r19,lo8(-1)
 2510 1094 FC01      		movw r30,r24
 2511 1096 3183      		std Z+1,r19
 2512 1098 2083      		st Z,r18
1406:lp_solve_5.5/colamd/colamd.c ****     stats [COLAMD_INFO2] = -1 ;
 2513               		.loc 1 1406 0
 2514 109a CE01      		movw r24,r28
 2515 109c 8D58      		subi r24,-115
 2516 109e 9F4F      		sbci r25,-1
 2517 10a0 FC01      		movw r30,r24
 2518 10a2 8081      		ld r24,Z
 2519 10a4 9181      		ldd r25,Z+1
 2520 10a6 0A96      		adiw r24,10
 2521 10a8 2FEF      		ldi r18,lo8(-1)
 2522 10aa 3FEF      		ldi r19,lo8(-1)
 2523 10ac FC01      		movw r30,r24
 2524 10ae 3183      		std Z+1,r19
 2525 10b0 2083      		st Z,r18
1407:lp_solve_5.5/colamd/colamd.c **** 
1408:lp_solve_5.5/colamd/colamd.c ****     if (!A)		/* A is not present */
 2526               		.loc 1 1408 0
 2527 10b2 CE01      		movw r24,r28
 2528 10b4 8359      		subi r24,-109
 2529 10b6 9F4F      		sbci r25,-1
 2530 10b8 FC01      		movw r30,r24
 2531 10ba 8081      		ld r24,Z
 2532 10bc 9181      		ldd r25,Z+1
 2533 10be 892B      		or r24,r25
 2534 10c0 01F4      		brne .L68
1409:lp_solve_5.5/colamd/colamd.c ****     {
1410:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_STATUS] = COLAMD_ERROR_A_not_present ;
 2535               		.loc 1 1410 0
 2536 10c2 CE01      		movw r24,r28
 2537 10c4 8D58      		subi r24,-115
 2538 10c6 9F4F      		sbci r25,-1
 2539 10c8 FC01      		movw r30,r24
 2540 10ca 8081      		ld r24,Z
 2541 10cc 9181      		ldd r25,Z+1
 2542 10ce 0696      		adiw r24,6
 2543 10d0 2FEF      		ldi r18,lo8(-1)
 2544 10d2 3FEF      		ldi r19,lo8(-1)
 2545 10d4 FC01      		movw r30,r24
 2546 10d6 3183      		std Z+1,r19
 2547 10d8 2083      		st Z,r18
1411:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("colamd: A not present\n")) ;
1412:lp_solve_5.5/colamd/colamd.c **** 	return (FALSE) ;
 2548               		.loc 1 1412 0
 2549 10da 80E0      		ldi r24,0
 2550 10dc 90E0      		ldi r25,0
 2551 10de 00C0      		rjmp .L77
 2552               	.L68:
1413:lp_solve_5.5/colamd/colamd.c ****     }
1414:lp_solve_5.5/colamd/colamd.c **** 
1415:lp_solve_5.5/colamd/colamd.c ****     if (!p)		/* p is not present */
 2553               		.loc 1 1415 0
 2554 10e0 CE01      		movw r24,r28
 2555 10e2 8159      		subi r24,-111
 2556 10e4 9F4F      		sbci r25,-1
 2557 10e6 FC01      		movw r30,r24
 2558 10e8 8081      		ld r24,Z
 2559 10ea 9181      		ldd r25,Z+1
 2560 10ec 892B      		or r24,r25
 2561 10ee 01F4      		brne .L69
1416:lp_solve_5.5/colamd/colamd.c ****     {
1417:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_STATUS] = COLAMD_ERROR_p_not_present ;
 2562               		.loc 1 1417 0
 2563 10f0 CE01      		movw r24,r28
 2564 10f2 8D58      		subi r24,-115
 2565 10f4 9F4F      		sbci r25,-1
 2566 10f6 FC01      		movw r30,r24
 2567 10f8 8081      		ld r24,Z
 2568 10fa 9181      		ldd r25,Z+1
 2569 10fc 0696      		adiw r24,6
 2570 10fe 2EEF      		ldi r18,lo8(-2)
 2571 1100 3FEF      		ldi r19,lo8(-1)
 2572 1102 FC01      		movw r30,r24
 2573 1104 3183      		std Z+1,r19
 2574 1106 2083      		st Z,r18
1418:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("colamd: p not present\n")) ;
1419:lp_solve_5.5/colamd/colamd.c ****     	return (FALSE) ;
 2575               		.loc 1 1419 0
 2576 1108 80E0      		ldi r24,0
 2577 110a 90E0      		ldi r25,0
 2578 110c 00C0      		rjmp .L77
 2579               	.L69:
1420:lp_solve_5.5/colamd/colamd.c ****     }
1421:lp_solve_5.5/colamd/colamd.c **** 
1422:lp_solve_5.5/colamd/colamd.c ****     if (n_row < 0)	/* n_row must be >= 0 */
 2580               		.loc 1 1422 0
 2581 110e CE01      		movw r24,r28
 2582 1110 8959      		subi r24,-103
 2583 1112 9F4F      		sbci r25,-1
 2584 1114 FC01      		movw r30,r24
 2585 1116 8081      		ld r24,Z
 2586 1118 9181      		ldd r25,Z+1
 2587 111a 9923      		tst r25
 2588 111c 04F4      		brge .L70
1423:lp_solve_5.5/colamd/colamd.c ****     {
1424:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_STATUS] = COLAMD_ERROR_nrow_negative ;
 2589               		.loc 1 1424 0
 2590 111e CE01      		movw r24,r28
 2591 1120 8D58      		subi r24,-115
 2592 1122 9F4F      		sbci r25,-1
 2593 1124 FC01      		movw r30,r24
 2594 1126 8081      		ld r24,Z
 2595 1128 9181      		ldd r25,Z+1
 2596 112a 0696      		adiw r24,6
 2597 112c 2DEF      		ldi r18,lo8(-3)
 2598 112e 3FEF      		ldi r19,lo8(-1)
 2599 1130 FC01      		movw r30,r24
 2600 1132 3183      		std Z+1,r19
 2601 1134 2083      		st Z,r18
1425:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_INFO1] = n_row ;
 2602               		.loc 1 1425 0
 2603 1136 CE01      		movw r24,r28
 2604 1138 8D58      		subi r24,-115
 2605 113a 9F4F      		sbci r25,-1
 2606 113c FC01      		movw r30,r24
 2607 113e 8081      		ld r24,Z
 2608 1140 9181      		ldd r25,Z+1
 2609 1142 0896      		adiw r24,8
 2610 1144 9E01      		movw r18,r28
 2611 1146 2959      		subi r18,-103
 2612 1148 3F4F      		sbci r19,-1
 2613 114a F901      		movw r30,r18
 2614 114c 2081      		ld r18,Z
 2615 114e 3181      		ldd r19,Z+1
 2616 1150 FC01      		movw r30,r24
 2617 1152 3183      		std Z+1,r19
 2618 1154 2083      		st Z,r18
1426:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("colamd: nrow negative %d\n", n_row)) ;
1427:lp_solve_5.5/colamd/colamd.c ****     	return (FALSE) ;
 2619               		.loc 1 1427 0
 2620 1156 80E0      		ldi r24,0
 2621 1158 90E0      		ldi r25,0
 2622 115a 00C0      		rjmp .L77
 2623               	.L70:
1428:lp_solve_5.5/colamd/colamd.c ****     }
1429:lp_solve_5.5/colamd/colamd.c **** 
1430:lp_solve_5.5/colamd/colamd.c ****     if (n_col < 0)	/* n_col must be >= 0 */
 2624               		.loc 1 1430 0
 2625 115c CE01      		movw r24,r28
 2626 115e 8759      		subi r24,-105
 2627 1160 9F4F      		sbci r25,-1
 2628 1162 FC01      		movw r30,r24
 2629 1164 8081      		ld r24,Z
 2630 1166 9181      		ldd r25,Z+1
 2631 1168 9923      		tst r25
 2632 116a 04F4      		brge .L71
1431:lp_solve_5.5/colamd/colamd.c ****     {
1432:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_STATUS] = COLAMD_ERROR_ncol_negative ;
 2633               		.loc 1 1432 0
 2634 116c CE01      		movw r24,r28
 2635 116e 8D58      		subi r24,-115
 2636 1170 9F4F      		sbci r25,-1
 2637 1172 FC01      		movw r30,r24
 2638 1174 8081      		ld r24,Z
 2639 1176 9181      		ldd r25,Z+1
 2640 1178 0696      		adiw r24,6
 2641 117a 2CEF      		ldi r18,lo8(-4)
 2642 117c 3FEF      		ldi r19,lo8(-1)
 2643 117e FC01      		movw r30,r24
 2644 1180 3183      		std Z+1,r19
 2645 1182 2083      		st Z,r18
1433:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_INFO1] = n_col ;
 2646               		.loc 1 1433 0
 2647 1184 CE01      		movw r24,r28
 2648 1186 8D58      		subi r24,-115
 2649 1188 9F4F      		sbci r25,-1
 2650 118a FC01      		movw r30,r24
 2651 118c 8081      		ld r24,Z
 2652 118e 9181      		ldd r25,Z+1
 2653 1190 0896      		adiw r24,8
 2654 1192 9E01      		movw r18,r28
 2655 1194 2759      		subi r18,-105
 2656 1196 3F4F      		sbci r19,-1
 2657 1198 F901      		movw r30,r18
 2658 119a 2081      		ld r18,Z
 2659 119c 3181      		ldd r19,Z+1
 2660 119e FC01      		movw r30,r24
 2661 11a0 3183      		std Z+1,r19
 2662 11a2 2083      		st Z,r18
1434:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("colamd: ncol negative %d\n", n_col)) ;
1435:lp_solve_5.5/colamd/colamd.c ****     	return (FALSE) ;
 2663               		.loc 1 1435 0
 2664 11a4 80E0      		ldi r24,0
 2665 11a6 90E0      		ldi r25,0
 2666 11a8 00C0      		rjmp .L77
 2667               	.L71:
1436:lp_solve_5.5/colamd/colamd.c ****     }
1437:lp_solve_5.5/colamd/colamd.c **** 
1438:lp_solve_5.5/colamd/colamd.c ****     nnz = p [n_col] ;
 2668               		.loc 1 1438 0
 2669 11aa CE01      		movw r24,r28
 2670 11ac 8759      		subi r24,-105
 2671 11ae 9F4F      		sbci r25,-1
 2672 11b0 FC01      		movw r30,r24
 2673 11b2 8081      		ld r24,Z
 2674 11b4 9181      		ldd r25,Z+1
 2675 11b6 880F      		lsl r24
 2676 11b8 991F      		rol r25
 2677 11ba 9E01      		movw r18,r28
 2678 11bc 2159      		subi r18,-111
 2679 11be 3F4F      		sbci r19,-1
 2680 11c0 F901      		movw r30,r18
 2681 11c2 2081      		ld r18,Z
 2682 11c4 3181      		ldd r19,Z+1
 2683 11c6 820F      		add r24,r18
 2684 11c8 931F      		adc r25,r19
 2685 11ca FC01      		movw r30,r24
 2686 11cc 8081      		ld r24,Z
 2687 11ce 9181      		ldd r25,Z+1
 2688 11d0 9C83      		std Y+4,r25
 2689 11d2 8B83      		std Y+3,r24
1439:lp_solve_5.5/colamd/colamd.c ****     if (nnz < 0)	/* nnz must be >= 0 */
 2690               		.loc 1 1439 0
 2691 11d4 8B81      		ldd r24,Y+3
 2692 11d6 9C81      		ldd r25,Y+4
 2693 11d8 9923      		tst r25
 2694 11da 04F4      		brge .L72
1440:lp_solve_5.5/colamd/colamd.c ****     {
1441:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_STATUS] = COLAMD_ERROR_nnz_negative ;
 2695               		.loc 1 1441 0
 2696 11dc CE01      		movw r24,r28
 2697 11de 8D58      		subi r24,-115
 2698 11e0 9F4F      		sbci r25,-1
 2699 11e2 FC01      		movw r30,r24
 2700 11e4 8081      		ld r24,Z
 2701 11e6 9181      		ldd r25,Z+1
 2702 11e8 0696      		adiw r24,6
 2703 11ea 2BEF      		ldi r18,lo8(-5)
 2704 11ec 3FEF      		ldi r19,lo8(-1)
 2705 11ee FC01      		movw r30,r24
 2706 11f0 3183      		std Z+1,r19
 2707 11f2 2083      		st Z,r18
1442:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_INFO1] = nnz ;
 2708               		.loc 1 1442 0
 2709 11f4 CE01      		movw r24,r28
 2710 11f6 8D58      		subi r24,-115
 2711 11f8 9F4F      		sbci r25,-1
 2712 11fa FC01      		movw r30,r24
 2713 11fc 8081      		ld r24,Z
 2714 11fe 9181      		ldd r25,Z+1
 2715 1200 0896      		adiw r24,8
 2716 1202 2B81      		ldd r18,Y+3
 2717 1204 3C81      		ldd r19,Y+4
 2718 1206 FC01      		movw r30,r24
 2719 1208 3183      		std Z+1,r19
 2720 120a 2083      		st Z,r18
1443:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("colamd: number of entries negative %d\n", nnz)) ;
1444:lp_solve_5.5/colamd/colamd.c **** 	return (FALSE) ;
 2721               		.loc 1 1444 0
 2722 120c 80E0      		ldi r24,0
 2723 120e 90E0      		ldi r25,0
 2724 1210 00C0      		rjmp .L77
 2725               	.L72:
1445:lp_solve_5.5/colamd/colamd.c ****     }
1446:lp_solve_5.5/colamd/colamd.c **** 
1447:lp_solve_5.5/colamd/colamd.c ****     if (p [0] != 0)
 2726               		.loc 1 1447 0
 2727 1212 CE01      		movw r24,r28
 2728 1214 8159      		subi r24,-111
 2729 1216 9F4F      		sbci r25,-1
 2730 1218 FC01      		movw r30,r24
 2731 121a 8081      		ld r24,Z
 2732 121c 9181      		ldd r25,Z+1
 2733 121e FC01      		movw r30,r24
 2734 1220 8081      		ld r24,Z
 2735 1222 9181      		ldd r25,Z+1
 2736 1224 892B      		or r24,r25
 2737 1226 01F0      		breq .L73
1448:lp_solve_5.5/colamd/colamd.c ****     {
1449:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_STATUS] = COLAMD_ERROR_p0_nonzero	;
 2738               		.loc 1 1449 0
 2739 1228 CE01      		movw r24,r28
 2740 122a 8D58      		subi r24,-115
 2741 122c 9F4F      		sbci r25,-1
 2742 122e FC01      		movw r30,r24
 2743 1230 8081      		ld r24,Z
 2744 1232 9181      		ldd r25,Z+1
 2745 1234 0696      		adiw r24,6
 2746 1236 2AEF      		ldi r18,lo8(-6)
 2747 1238 3FEF      		ldi r19,lo8(-1)
 2748 123a FC01      		movw r30,r24
 2749 123c 3183      		std Z+1,r19
 2750 123e 2083      		st Z,r18
1450:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_INFO1] = p [0] ;
 2751               		.loc 1 1450 0
 2752 1240 CE01      		movw r24,r28
 2753 1242 8D58      		subi r24,-115
 2754 1244 9F4F      		sbci r25,-1
 2755 1246 FC01      		movw r30,r24
 2756 1248 8081      		ld r24,Z
 2757 124a 9181      		ldd r25,Z+1
 2758 124c 0896      		adiw r24,8
 2759 124e 9E01      		movw r18,r28
 2760 1250 2159      		subi r18,-111
 2761 1252 3F4F      		sbci r19,-1
 2762 1254 F901      		movw r30,r18
 2763 1256 2081      		ld r18,Z
 2764 1258 3181      		ldd r19,Z+1
 2765 125a F901      		movw r30,r18
 2766 125c 2081      		ld r18,Z
 2767 125e 3181      		ldd r19,Z+1
 2768 1260 FC01      		movw r30,r24
 2769 1262 3183      		std Z+1,r19
 2770 1264 2083      		st Z,r18
1451:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("colamd: p[0] not zero %d\n", p [0])) ;
1452:lp_solve_5.5/colamd/colamd.c **** 	return (FALSE) ;
 2771               		.loc 1 1452 0
 2772 1266 80E0      		ldi r24,0
 2773 1268 90E0      		ldi r25,0
 2774 126a 00C0      		rjmp .L77
 2775               	.L73:
1453:lp_solve_5.5/colamd/colamd.c ****     }
1454:lp_solve_5.5/colamd/colamd.c **** 
1455:lp_solve_5.5/colamd/colamd.c ****     /* === If no knobs, set default knobs =================================== */
1456:lp_solve_5.5/colamd/colamd.c **** 
1457:lp_solve_5.5/colamd/colamd.c ****     if (!knobs)
 2776               		.loc 1 1457 0
 2777 126c CE01      		movw r24,r28
 2778 126e 8F58      		subi r24,-113
 2779 1270 9F4F      		sbci r25,-1
 2780 1272 FC01      		movw r30,r24
 2781 1274 8081      		ld r24,Z
 2782 1276 9181      		ldd r25,Z+1
 2783 1278 892B      		or r24,r25
 2784 127a 01F4      		brne .L74
1458:lp_solve_5.5/colamd/colamd.c ****     {
1459:lp_solve_5.5/colamd/colamd.c **** 	colamd_set_defaults (default_knobs) ;
 2785               		.loc 1 1459 0
 2786 127c CE01      		movw r24,r28
 2787 127e 4796      		adiw r24,23
 2788 1280 0E94 0000 		call colamd_set_defaults
1460:lp_solve_5.5/colamd/colamd.c **** 	knobs = default_knobs ;
 2789               		.loc 1 1460 0
 2790 1284 CE01      		movw r24,r28
 2791 1286 8F58      		subi r24,-113
 2792 1288 9F4F      		sbci r25,-1
 2793 128a 9E01      		movw r18,r28
 2794 128c 295E      		subi r18,-23
 2795 128e 3F4F      		sbci r19,-1
 2796 1290 FC01      		movw r30,r24
 2797 1292 3183      		std Z+1,r19
 2798 1294 2083      		st Z,r18
 2799               	.L74:
1461:lp_solve_5.5/colamd/colamd.c ****     }
1462:lp_solve_5.5/colamd/colamd.c **** 
1463:lp_solve_5.5/colamd/colamd.c ****     /* === Allocate the Row and Col arrays from array A ===================== */
1464:lp_solve_5.5/colamd/colamd.c **** 
1465:lp_solve_5.5/colamd/colamd.c ****     Col_size = COLAMD_C (n_col) ;
 2800               		.loc 1 1465 0
 2801 1296 CE01      		movw r24,r28
 2802 1298 8759      		subi r24,-105
 2803 129a 9F4F      		sbci r25,-1
 2804 129c FC01      		movw r30,r24
 2805 129e 8081      		ld r24,Z
 2806 12a0 9181      		ldd r25,Z+1
 2807 12a2 0196      		adiw r24,1
 2808 12a4 9C01      		movw r18,r24
 2809 12a6 C901      		movw r24,r18
 2810 12a8 880F      		lsl r24
 2811 12aa 991F      		rol r25
 2812 12ac 820F      		add r24,r18
 2813 12ae 931F      		adc r25,r19
 2814 12b0 880F      		lsl r24
 2815 12b2 991F      		rol r25
 2816 12b4 880F      		lsl r24
 2817 12b6 991F      		rol r25
 2818 12b8 9695      		lsr r25
 2819 12ba 8795      		ror r24
 2820 12bc 9E83      		std Y+6,r25
 2821 12be 8D83      		std Y+5,r24
1466:lp_solve_5.5/colamd/colamd.c ****     Row_size = COLAMD_R (n_row) ;
 2822               		.loc 1 1466 0
 2823 12c0 CE01      		movw r24,r28
 2824 12c2 8959      		subi r24,-103
 2825 12c4 9F4F      		sbci r25,-1
 2826 12c6 FC01      		movw r30,r24
 2827 12c8 8081      		ld r24,Z
 2828 12ca 9181      		ldd r25,Z+1
 2829 12cc 0196      		adiw r24,1
 2830 12ce 880F      		lsl r24
 2831 12d0 991F      		rol r25
 2832 12d2 880F      		lsl r24
 2833 12d4 991F      		rol r25
 2834 12d6 880F      		lsl r24
 2835 12d8 991F      		rol r25
 2836 12da 9695      		lsr r25
 2837 12dc 8795      		ror r24
 2838 12de 9887      		std Y+8,r25
 2839 12e0 8F83      		std Y+7,r24
1467:lp_solve_5.5/colamd/colamd.c ****     need = 2*nnz + n_col + Col_size + Row_size ;
 2840               		.loc 1 1467 0
 2841 12e2 8B81      		ldd r24,Y+3
 2842 12e4 9C81      		ldd r25,Y+4
 2843 12e6 9C01      		movw r18,r24
 2844 12e8 220F      		lsl r18
 2845 12ea 331F      		rol r19
 2846 12ec CE01      		movw r24,r28
 2847 12ee 8759      		subi r24,-105
 2848 12f0 9F4F      		sbci r25,-1
 2849 12f2 FC01      		movw r30,r24
 2850 12f4 8081      		ld r24,Z
 2851 12f6 9181      		ldd r25,Z+1
 2852 12f8 280F      		add r18,r24
 2853 12fa 391F      		adc r19,r25
 2854 12fc 8D81      		ldd r24,Y+5
 2855 12fe 9E81      		ldd r25,Y+6
 2856 1300 280F      		add r18,r24
 2857 1302 391F      		adc r19,r25
 2858 1304 8F81      		ldd r24,Y+7
 2859 1306 9885      		ldd r25,Y+8
 2860 1308 820F      		add r24,r18
 2861 130a 931F      		adc r25,r19
 2862 130c 9A87      		std Y+10,r25
 2863 130e 8987      		std Y+9,r24
1468:lp_solve_5.5/colamd/colamd.c **** 
1469:lp_solve_5.5/colamd/colamd.c ****     if (need > Alen)
 2864               		.loc 1 1469 0
 2865 1310 CE01      		movw r24,r28
 2866 1312 8559      		subi r24,-107
 2867 1314 9F4F      		sbci r25,-1
 2868 1316 2985      		ldd r18,Y+9
 2869 1318 3A85      		ldd r19,Y+10
 2870 131a FC01      		movw r30,r24
 2871 131c 8081      		ld r24,Z
 2872 131e 9181      		ldd r25,Z+1
 2873 1320 8217      		cp r24,r18
 2874 1322 9307      		cpc r25,r19
 2875 1324 04F4      		brge .L75
1470:lp_solve_5.5/colamd/colamd.c ****     {
1471:lp_solve_5.5/colamd/colamd.c **** 	/* not enough space in array A to perform the ordering */
1472:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_STATUS] = COLAMD_ERROR_A_too_small ;
 2876               		.loc 1 1472 0
 2877 1326 CE01      		movw r24,r28
 2878 1328 8D58      		subi r24,-115
 2879 132a 9F4F      		sbci r25,-1
 2880 132c FC01      		movw r30,r24
 2881 132e 8081      		ld r24,Z
 2882 1330 9181      		ldd r25,Z+1
 2883 1332 0696      		adiw r24,6
 2884 1334 29EF      		ldi r18,lo8(-7)
 2885 1336 3FEF      		ldi r19,lo8(-1)
 2886 1338 FC01      		movw r30,r24
 2887 133a 3183      		std Z+1,r19
 2888 133c 2083      		st Z,r18
1473:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_INFO1] = need ;
 2889               		.loc 1 1473 0
 2890 133e CE01      		movw r24,r28
 2891 1340 8D58      		subi r24,-115
 2892 1342 9F4F      		sbci r25,-1
 2893 1344 FC01      		movw r30,r24
 2894 1346 8081      		ld r24,Z
 2895 1348 9181      		ldd r25,Z+1
 2896 134a 0896      		adiw r24,8
 2897 134c 2985      		ldd r18,Y+9
 2898 134e 3A85      		ldd r19,Y+10
 2899 1350 FC01      		movw r30,r24
 2900 1352 3183      		std Z+1,r19
 2901 1354 2083      		st Z,r18
1474:lp_solve_5.5/colamd/colamd.c **** 	stats [COLAMD_INFO2] = Alen ;
 2902               		.loc 1 1474 0
 2903 1356 CE01      		movw r24,r28
 2904 1358 8D58      		subi r24,-115
 2905 135a 9F4F      		sbci r25,-1
 2906 135c FC01      		movw r30,r24
 2907 135e 8081      		ld r24,Z
 2908 1360 9181      		ldd r25,Z+1
 2909 1362 0A96      		adiw r24,10
 2910 1364 9E01      		movw r18,r28
 2911 1366 2559      		subi r18,-107
 2912 1368 3F4F      		sbci r19,-1
 2913 136a F901      		movw r30,r18
 2914 136c 2081      		ld r18,Z
 2915 136e 3181      		ldd r19,Z+1
 2916 1370 FC01      		movw r30,r24
 2917 1372 3183      		std Z+1,r19
 2918 1374 2083      		st Z,r18
1475:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("colamd: Need Alen >= %d, given only Alen = %d\n", need,Alen));
1476:lp_solve_5.5/colamd/colamd.c **** 	return (FALSE) ;
 2919               		.loc 1 1476 0
 2920 1376 80E0      		ldi r24,0
 2921 1378 90E0      		ldi r25,0
 2922 137a 00C0      		rjmp .L77
 2923               	.L75:
1477:lp_solve_5.5/colamd/colamd.c ****     }
1478:lp_solve_5.5/colamd/colamd.c **** 
1479:lp_solve_5.5/colamd/colamd.c ****     Alen -= Col_size + Row_size ;
 2924               		.loc 1 1479 0
 2925 137c 2D81      		ldd r18,Y+5
 2926 137e 3E81      		ldd r19,Y+6
 2927 1380 8F81      		ldd r24,Y+7
 2928 1382 9885      		ldd r25,Y+8
 2929 1384 280F      		add r18,r24
 2930 1386 391F      		adc r19,r25
 2931 1388 CE01      		movw r24,r28
 2932 138a 8559      		subi r24,-107
 2933 138c 9F4F      		sbci r25,-1
 2934 138e AE01      		movw r20,r28
 2935 1390 4559      		subi r20,-107
 2936 1392 5F4F      		sbci r21,-1
 2937 1394 FA01      		movw r30,r20
 2938 1396 4081      		ld r20,Z
 2939 1398 5181      		ldd r21,Z+1
 2940 139a BA01      		movw r22,r20
 2941 139c 621B      		sub r22,r18
 2942 139e 730B      		sbc r23,r19
 2943 13a0 9B01      		movw r18,r22
 2944 13a2 FC01      		movw r30,r24
 2945 13a4 3183      		std Z+1,r19
 2946 13a6 2083      		st Z,r18
1480:lp_solve_5.5/colamd/colamd.c ****     Col = (Colamd_Col *) &A [Alen] ;
 2947               		.loc 1 1480 0
 2948 13a8 CE01      		movw r24,r28
 2949 13aa 8559      		subi r24,-107
 2950 13ac 9F4F      		sbci r25,-1
 2951 13ae FC01      		movw r30,r24
 2952 13b0 8081      		ld r24,Z
 2953 13b2 9181      		ldd r25,Z+1
 2954 13b4 880F      		lsl r24
 2955 13b6 991F      		rol r25
 2956 13b8 9E01      		movw r18,r28
 2957 13ba 2359      		subi r18,-109
 2958 13bc 3F4F      		sbci r19,-1
 2959 13be F901      		movw r30,r18
 2960 13c0 2081      		ld r18,Z
 2961 13c2 3181      		ldd r19,Z+1
 2962 13c4 820F      		add r24,r18
 2963 13c6 931F      		adc r25,r19
 2964 13c8 9C87      		std Y+12,r25
 2965 13ca 8B87      		std Y+11,r24
1481:lp_solve_5.5/colamd/colamd.c ****     Row = (Colamd_Row *) &A [Alen + Col_size] ;
 2966               		.loc 1 1481 0
 2967 13cc CE01      		movw r24,r28
 2968 13ce 8559      		subi r24,-107
 2969 13d0 9F4F      		sbci r25,-1
 2970 13d2 FC01      		movw r30,r24
 2971 13d4 2081      		ld r18,Z
 2972 13d6 3181      		ldd r19,Z+1
 2973 13d8 8D81      		ldd r24,Y+5
 2974 13da 9E81      		ldd r25,Y+6
 2975 13dc 820F      		add r24,r18
 2976 13de 931F      		adc r25,r19
 2977 13e0 880F      		lsl r24
 2978 13e2 991F      		rol r25
 2979 13e4 9E01      		movw r18,r28
 2980 13e6 2359      		subi r18,-109
 2981 13e8 3F4F      		sbci r19,-1
 2982 13ea F901      		movw r30,r18
 2983 13ec 2081      		ld r18,Z
 2984 13ee 3181      		ldd r19,Z+1
 2985 13f0 820F      		add r24,r18
 2986 13f2 931F      		adc r25,r19
 2987 13f4 9E87      		std Y+14,r25
 2988 13f6 8D87      		std Y+13,r24
1482:lp_solve_5.5/colamd/colamd.c **** 
1483:lp_solve_5.5/colamd/colamd.c ****     /* === Construct the row and column data structures ===================== */
1484:lp_solve_5.5/colamd/colamd.c **** 
1485:lp_solve_5.5/colamd/colamd.c ****     if (!init_rows_cols (n_row, n_col, Row, Col, A, p, stats))
 2989               		.loc 1 1485 0
 2990 13f8 CE01      		movw r24,r28
 2991 13fa 8D58      		subi r24,-115
 2992 13fc 9F4F      		sbci r25,-1
 2993 13fe FC01      		movw r30,r24
 2994 1400 0081      		ld r16,Z
 2995 1402 1181      		ldd r17,Z+1
 2996 1404 CE01      		movw r24,r28
 2997 1406 8159      		subi r24,-111
 2998 1408 9F4F      		sbci r25,-1
 2999 140a FC01      		movw r30,r24
 3000 140c A081      		ld r26,Z
 3001 140e B181      		ldd r27,Z+1
 3002 1410 CE01      		movw r24,r28
 3003 1412 8359      		subi r24,-109
 3004 1414 9F4F      		sbci r25,-1
 3005 1416 FC01      		movw r30,r24
 3006 1418 0190      		ld __tmp_reg__,Z+
 3007 141a F081      		ld r31,Z
 3008 141c E02D      		mov r30,__tmp_reg__
 3009 141e E796      		adiw r28,117-62
 3010 1420 FFAF      		std Y+63,r31
 3011 1422 EEAF      		std Y+62,r30
 3012 1424 E797      		sbiw r28,117-62
 3013 1426 2B85      		ldd r18,Y+11
 3014 1428 3C85      		ldd r19,Y+12
 3015 142a 4D85      		ldd r20,Y+13
 3016 142c 5E85      		ldd r21,Y+14
 3017 142e CE01      		movw r24,r28
 3018 1430 8759      		subi r24,-105
 3019 1432 9F4F      		sbci r25,-1
 3020 1434 FC01      		movw r30,r24
 3021 1436 6081      		ld r22,Z
 3022 1438 7181      		ldd r23,Z+1
 3023 143a CE01      		movw r24,r28
 3024 143c 8959      		subi r24,-103
 3025 143e 9F4F      		sbci r25,-1
 3026 1440 FC01      		movw r30,r24
 3027 1442 8081      		ld r24,Z
 3028 1444 9181      		ldd r25,Z+1
 3029 1446 6801      		movw r12,r16
 3030 1448 7D01      		movw r14,r26
 3031 144a E796      		adiw r28,117-62
 3032 144c 0EAD      		ldd r16,Y+62
 3033 144e 1FAD      		ldd r17,Y+63
 3034 1450 E797      		sbiw r28,117-62
 3035 1452 0E94 0000 		call init_rows_cols
 3036 1456 892B      		or r24,r25
 3037 1458 01F4      		brne .L76
1486:lp_solve_5.5/colamd/colamd.c ****     {
1487:lp_solve_5.5/colamd/colamd.c **** 	/* input matrix is invalid */
1488:lp_solve_5.5/colamd/colamd.c **** 	DEBUG0 (("colamd: Matrix invalid\n")) ;
1489:lp_solve_5.5/colamd/colamd.c **** 	return (FALSE) ;
 3038               		.loc 1 1489 0
 3039 145a 80E0      		ldi r24,0
 3040 145c 90E0      		ldi r25,0
 3041 145e 00C0      		rjmp .L77
 3042               	.L76:
1490:lp_solve_5.5/colamd/colamd.c ****     }
1491:lp_solve_5.5/colamd/colamd.c **** 
1492:lp_solve_5.5/colamd/colamd.c ****     /* === Initialize scores, kill dense rows/columns ======================= */
1493:lp_solve_5.5/colamd/colamd.c **** 
1494:lp_solve_5.5/colamd/colamd.c ****     init_scoring (n_row, n_col, Row, Col, A, p, knobs,
 3043               		.loc 1 1494 0
 3044 1460 5E01      		movw r10,r28
 3045 1462 F1E1      		ldi r31,17
 3046 1464 AF0E      		add r10,r31
 3047 1466 B11C      		adc r11,__zero_reg__
 3048 1468 6E01      		movw r12,r28
 3049 146a 23E1      		ldi r18,19
 3050 146c C20E      		add r12,r18
 3051 146e D11C      		adc r13,__zero_reg__
 3052 1470 CE01      		movw r24,r28
 3053 1472 8F58      		subi r24,-113
 3054 1474 9F4F      		sbci r25,-1
 3055 1476 FC01      		movw r30,r24
 3056 1478 E080      		ld r14,Z
 3057 147a F180      		ldd r15,Z+1
 3058 147c CE01      		movw r24,r28
 3059 147e 8159      		subi r24,-111
 3060 1480 9F4F      		sbci r25,-1
 3061 1482 FC01      		movw r30,r24
 3062 1484 0081      		ld r16,Z
 3063 1486 1181      		ldd r17,Z+1
 3064 1488 CE01      		movw r24,r28
 3065 148a 8359      		subi r24,-109
 3066 148c 9F4F      		sbci r25,-1
 3067 148e FC01      		movw r30,r24
 3068 1490 A081      		ld r26,Z
 3069 1492 B181      		ldd r27,Z+1
 3070 1494 2B85      		ldd r18,Y+11
 3071 1496 3C85      		ldd r19,Y+12
 3072 1498 4D85      		ldd r20,Y+13
 3073 149a 5E85      		ldd r21,Y+14
 3074 149c CE01      		movw r24,r28
 3075 149e 8759      		subi r24,-105
 3076 14a0 9F4F      		sbci r25,-1
 3077 14a2 FC01      		movw r30,r24
 3078 14a4 6081      		ld r22,Z
 3079 14a6 7181      		ldd r23,Z+1
 3080 14a8 CE01      		movw r24,r28
 3081 14aa 8959      		subi r24,-103
 3082 14ac 9F4F      		sbci r25,-1
 3083 14ae FC01      		movw r30,r24
 3084 14b0 0190      		ld __tmp_reg__,Z+
 3085 14b2 F081      		ld r31,Z
 3086 14b4 E02D      		mov r30,__tmp_reg__
 3087 14b6 E796      		adiw r28,117-62
 3088 14b8 FFAF      		std Y+63,r31
 3089 14ba EEAF      		std Y+62,r30
 3090 14bc E797      		sbiw r28,117-62
 3091 14be CE01      		movw r24,r28
 3092 14c0 4596      		adiw r24,21
 3093 14c2 992E      		mov r9,r25
 3094 14c4 9F92      		push r9
 3095 14c6 8F93      		push r24
 3096 14c8 4501      		movw r8,r10
 3097 14ca 5601      		movw r10,r12
 3098 14cc 6701      		movw r12,r14
 3099 14ce 7801      		movw r14,r16
 3100 14d0 8D01      		movw r16,r26
 3101 14d2 E796      		adiw r28,117-62
 3102 14d4 8EAD      		ldd r24,Y+62
 3103 14d6 9FAD      		ldd r25,Y+63
 3104 14d8 E797      		sbiw r28,117-62
 3105 14da 0E94 0000 		call init_scoring
 3106 14de 0F90      		pop __tmp_reg__
 3107 14e0 0F90      		pop __tmp_reg__
1495:lp_solve_5.5/colamd/colamd.c **** 	&n_row2, &n_col2, &max_deg) ;
1496:lp_solve_5.5/colamd/colamd.c **** 
1497:lp_solve_5.5/colamd/colamd.c ****     /* === Order the supercolumns =========================================== */
1498:lp_solve_5.5/colamd/colamd.c **** 
1499:lp_solve_5.5/colamd/colamd.c ****     ngarbage = find_ordering (n_row, n_col, Alen, Row, Col, A, p,
 3108               		.loc 1 1499 0
 3109 14e2 8B81      		ldd r24,Y+3
 3110 14e4 9C81      		ldd r25,Y+4
 3111 14e6 9C01      		movw r18,r24
 3112 14e8 220F      		lsl r18
 3113 14ea 331F      		rol r19
 3114 14ec AD88      		ldd r10,Y+21
 3115 14ee BE88      		ldd r11,Y+22
 3116 14f0 C988      		ldd r12,Y+17
 3117 14f2 DA88      		ldd r13,Y+18
 3118 14f4 CE01      		movw r24,r28
 3119 14f6 8159      		subi r24,-111
 3120 14f8 9F4F      		sbci r25,-1
 3121 14fa FC01      		movw r30,r24
 3122 14fc E080      		ld r14,Z
 3123 14fe F180      		ldd r15,Z+1
 3124 1500 CE01      		movw r24,r28
 3125 1502 8359      		subi r24,-109
 3126 1504 9F4F      		sbci r25,-1
 3127 1506 FC01      		movw r30,r24
 3128 1508 0081      		ld r16,Z
 3129 150a 1181      		ldd r17,Z+1
 3130 150c AB85      		ldd r26,Y+11
 3131 150e BC85      		ldd r27,Y+12
 3132 1510 6D85      		ldd r22,Y+13
 3133 1512 7E85      		ldd r23,Y+14
 3134 1514 E796      		adiw r28,117-62
 3135 1516 7FAF      		std Y+63,r23
 3136 1518 6EAF      		std Y+62,r22
 3137 151a E797      		sbiw r28,117-62
 3138 151c CE01      		movw r24,r28
 3139 151e 8559      		subi r24,-107
 3140 1520 9F4F      		sbci r25,-1
 3141 1522 FC01      		movw r30,r24
 3142 1524 4081      		ld r20,Z
 3143 1526 5181      		ldd r21,Z+1
 3144 1528 CE01      		movw r24,r28
 3145 152a 8759      		subi r24,-105
 3146 152c 9F4F      		sbci r25,-1
 3147 152e FC01      		movw r30,r24
 3148 1530 6081      		ld r22,Z
 3149 1532 7181      		ldd r23,Z+1
 3150 1534 CE01      		movw r24,r28
 3151 1536 8959      		subi r24,-103
 3152 1538 9F4F      		sbci r25,-1
 3153 153a FC01      		movw r30,r24
 3154 153c 8081      		ld r24,Z
 3155 153e 9181      		ldd r25,Z+1
 3156 1540 932E      		mov r9,r19
 3157 1542 9F92      		push r9
 3158 1544 2F93      		push r18
 3159 1546 4501      		movw r8,r10
 3160 1548 5601      		movw r10,r12
 3161 154a 6701      		movw r12,r14
 3162 154c 7801      		movw r14,r16
 3163 154e 8D01      		movw r16,r26
 3164 1550 E796      		adiw r28,117-62
 3165 1552 2EAD      		ldd r18,Y+62
 3166 1554 3FAD      		ldd r19,Y+63
 3167 1556 E797      		sbiw r28,117-62
 3168 1558 0E94 0000 		call find_ordering
 3169 155c 0F90      		pop __tmp_reg__
 3170 155e 0F90      		pop __tmp_reg__
 3171 1560 988B      		std Y+16,r25
 3172 1562 8F87      		std Y+15,r24
1500:lp_solve_5.5/colamd/colamd.c **** 	n_col2, max_deg, 2*nnz) ;
1501:lp_solve_5.5/colamd/colamd.c **** 
1502:lp_solve_5.5/colamd/colamd.c ****     /* === Order the non-principal columns ================================== */
1503:lp_solve_5.5/colamd/colamd.c **** 
1504:lp_solve_5.5/colamd/colamd.c ****     order_children (n_col, Col, p) ;
 3173               		.loc 1 1504 0
 3174 1564 CE01      		movw r24,r28
 3175 1566 8159      		subi r24,-111
 3176 1568 9F4F      		sbci r25,-1
 3177 156a FC01      		movw r30,r24
 3178 156c 4081      		ld r20,Z
 3179 156e 5181      		ldd r21,Z+1
 3180 1570 2B85      		ldd r18,Y+11
 3181 1572 3C85      		ldd r19,Y+12
 3182 1574 CE01      		movw r24,r28
 3183 1576 8759      		subi r24,-105
 3184 1578 9F4F      		sbci r25,-1
 3185 157a FC01      		movw r30,r24
 3186 157c 8081      		ld r24,Z
 3187 157e 9181      		ldd r25,Z+1
 3188 1580 B901      		movw r22,r18
 3189 1582 0E94 0000 		call order_children
1505:lp_solve_5.5/colamd/colamd.c **** 
1506:lp_solve_5.5/colamd/colamd.c ****     /* === Return statistics in stats ======================================= */
1507:lp_solve_5.5/colamd/colamd.c **** 
1508:lp_solve_5.5/colamd/colamd.c ****     stats [COLAMD_DENSE_ROW] = n_row - n_row2 ;
 3190               		.loc 1 1508 0
 3191 1586 8B89      		ldd r24,Y+19
 3192 1588 9C89      		ldd r25,Y+20
 3193 158a 9E01      		movw r18,r28
 3194 158c 2959      		subi r18,-103
 3195 158e 3F4F      		sbci r19,-1
 3196 1590 F901      		movw r30,r18
 3197 1592 2081      		ld r18,Z
 3198 1594 3181      		ldd r19,Z+1
 3199 1596 281B      		sub r18,r24
 3200 1598 390B      		sbc r19,r25
 3201 159a CE01      		movw r24,r28
 3202 159c 8D58      		subi r24,-115
 3203 159e 9F4F      		sbci r25,-1
 3204 15a0 FC01      		movw r30,r24
 3205 15a2 8081      		ld r24,Z
 3206 15a4 9181      		ldd r25,Z+1
 3207 15a6 FC01      		movw r30,r24
 3208 15a8 3183      		std Z+1,r19
 3209 15aa 2083      		st Z,r18
1509:lp_solve_5.5/colamd/colamd.c ****     stats [COLAMD_DENSE_COL] = n_col - n_col2 ;
 3210               		.loc 1 1509 0
 3211 15ac CE01      		movw r24,r28
 3212 15ae 8D58      		subi r24,-115
 3213 15b0 9F4F      		sbci r25,-1
 3214 15b2 FC01      		movw r30,r24
 3215 15b4 8081      		ld r24,Z
 3216 15b6 9181      		ldd r25,Z+1
 3217 15b8 0296      		adiw r24,2
 3218 15ba 2989      		ldd r18,Y+17
 3219 15bc 3A89      		ldd r19,Y+18
 3220 15be AE01      		movw r20,r28
 3221 15c0 4759      		subi r20,-105
 3222 15c2 5F4F      		sbci r21,-1
 3223 15c4 FA01      		movw r30,r20
 3224 15c6 4081      		ld r20,Z
 3225 15c8 5181      		ldd r21,Z+1
 3226 15ca BA01      		movw r22,r20
 3227 15cc 621B      		sub r22,r18
 3228 15ce 730B      		sbc r23,r19
 3229 15d0 9B01      		movw r18,r22
 3230 15d2 FC01      		movw r30,r24
 3231 15d4 3183      		std Z+1,r19
 3232 15d6 2083      		st Z,r18
1510:lp_solve_5.5/colamd/colamd.c ****     stats [COLAMD_DEFRAG_COUNT] = ngarbage ;
 3233               		.loc 1 1510 0
 3234 15d8 CE01      		movw r24,r28
 3235 15da 8D58      		subi r24,-115
 3236 15dc 9F4F      		sbci r25,-1
 3237 15de FC01      		movw r30,r24
 3238 15e0 8081      		ld r24,Z
 3239 15e2 9181      		ldd r25,Z+1
 3240 15e4 0496      		adiw r24,4
 3241 15e6 2F85      		ldd r18,Y+15
 3242 15e8 3889      		ldd r19,Y+16
 3243 15ea FC01      		movw r30,r24
 3244 15ec 3183      		std Z+1,r19
 3245 15ee 2083      		st Z,r18
1511:lp_solve_5.5/colamd/colamd.c ****     DEBUG0 (("colamd: done.\n")) ; 
1512:lp_solve_5.5/colamd/colamd.c ****     return (TRUE) ;
 3246               		.loc 1 1512 0
 3247 15f0 81E0      		ldi r24,lo8(1)
 3248 15f2 90E0      		ldi r25,0
 3249               	.L77:
 3250               	/* epilogue start */
1513:lp_solve_5.5/colamd/colamd.c **** }
 3251               		.loc 1 1513 0 discriminator 1
 3252 15f4 CA58      		subi r28,-118
 3253 15f6 DF4F      		sbci r29,-1
 3254 15f8 0FB6      		in __tmp_reg__,__SREG__
 3255 15fa F894      		cli
 3256 15fc DEBF      		out __SP_H__,r29
 3257 15fe 0FBE      		out __SREG__,__tmp_reg__
 3258 1600 CDBF      		out __SP_L__,r28
 3259 1602 DF91      		pop r29
 3260 1604 CF91      		pop r28
 3261 1606 1F91      		pop r17
 3262 1608 0F91      		pop r16
 3263 160a FF90      		pop r15
 3264 160c EF90      		pop r14
 3265 160e DF90      		pop r13
 3266 1610 CF90      		pop r12
 3267 1612 BF90      		pop r11
 3268 1614 AF90      		pop r10
 3269 1616 9F90      		pop r9
 3270 1618 8F90      		pop r8
 3271 161a 0895      		ret
 3272               		.cfi_endproc
 3273               	.LFE8:
 3275               		.section	.rodata
 3276               	.LC0:
 3277 0000 636F 6C61 		.string	"colamd"
 3277      6D64 00
 3278               		.text
 3279               	.global	colamd_report
 3281               	colamd_report:
 3282               	.LFB9:
1514:lp_solve_5.5/colamd/colamd.c **** 
1515:lp_solve_5.5/colamd/colamd.c **** 
1516:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
1517:lp_solve_5.5/colamd/colamd.c **** /* === colamd_report ======================================================== */
1518:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
1519:lp_solve_5.5/colamd/colamd.c **** 
1520:lp_solve_5.5/colamd/colamd.c **** PUBLIC void colamd_report
1521:lp_solve_5.5/colamd/colamd.c **** (
1522:lp_solve_5.5/colamd/colamd.c ****     int stats [COLAMD_STATS]
1523:lp_solve_5.5/colamd/colamd.c **** )
1524:lp_solve_5.5/colamd/colamd.c **** {
 3283               		.loc 1 1524 0
 3284               		.cfi_startproc
 3285 161c CF93      		push r28
 3286               	.LCFI34:
 3287               		.cfi_def_cfa_offset 3
 3288               		.cfi_offset 28, -2
 3289 161e DF93      		push r29
 3290               	.LCFI35:
 3291               		.cfi_def_cfa_offset 4
 3292               		.cfi_offset 29, -3
 3293 1620 00D0      		rcall .
 3294               	.LCFI36:
 3295               		.cfi_def_cfa_offset 6
 3296 1622 CDB7      		in r28,__SP_L__
 3297 1624 DEB7      		in r29,__SP_H__
 3298               	.LCFI37:
 3299               		.cfi_def_cfa_register 28
 3300               	/* prologue: function */
 3301               	/* frame size = 2 */
 3302               	/* stack size = 4 */
 3303               	.L__stack_usage = 4
 3304 1626 9A83      		std Y+2,r25
 3305 1628 8983      		std Y+1,r24
1525:lp_solve_5.5/colamd/colamd.c ****     print_report ("colamd", stats) ;
 3306               		.loc 1 1525 0
 3307 162a 8981      		ldd r24,Y+1
 3308 162c 9A81      		ldd r25,Y+2
 3309 162e BC01      		movw r22,r24
 3310 1630 80E0      		ldi r24,lo8(.LC0)
 3311 1632 90E0      		ldi r25,hi8(.LC0)
 3312 1634 0E94 0000 		call print_report
1526:lp_solve_5.5/colamd/colamd.c **** }
 3313               		.loc 1 1526 0
 3314 1638 0000      		nop
 3315               	/* epilogue start */
 3316 163a 0F90      		pop __tmp_reg__
 3317 163c 0F90      		pop __tmp_reg__
 3318 163e DF91      		pop r29
 3319 1640 CF91      		pop r28
 3320 1642 0895      		ret
 3321               		.cfi_endproc
 3322               	.LFE9:
 3324               		.section	.rodata
 3325               	.LC1:
 3326 0007 7379 6D61 		.string	"symamd"
 3326      6D64 00
 3327               		.text
 3328               	.global	symamd_report
 3330               	symamd_report:
 3331               	.LFB10:
1527:lp_solve_5.5/colamd/colamd.c **** 
1528:lp_solve_5.5/colamd/colamd.c **** 
1529:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
1530:lp_solve_5.5/colamd/colamd.c **** /* === symamd_report ======================================================== */
1531:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
1532:lp_solve_5.5/colamd/colamd.c **** 
1533:lp_solve_5.5/colamd/colamd.c **** PUBLIC void symamd_report
1534:lp_solve_5.5/colamd/colamd.c **** (
1535:lp_solve_5.5/colamd/colamd.c ****     int stats [COLAMD_STATS]
1536:lp_solve_5.5/colamd/colamd.c **** )
1537:lp_solve_5.5/colamd/colamd.c **** {
 3332               		.loc 1 1537 0
 3333               		.cfi_startproc
 3334 1644 CF93      		push r28
 3335               	.LCFI38:
 3336               		.cfi_def_cfa_offset 3
 3337               		.cfi_offset 28, -2
 3338 1646 DF93      		push r29
 3339               	.LCFI39:
 3340               		.cfi_def_cfa_offset 4
 3341               		.cfi_offset 29, -3
 3342 1648 00D0      		rcall .
 3343               	.LCFI40:
 3344               		.cfi_def_cfa_offset 6
 3345 164a CDB7      		in r28,__SP_L__
 3346 164c DEB7      		in r29,__SP_H__
 3347               	.LCFI41:
 3348               		.cfi_def_cfa_register 28
 3349               	/* prologue: function */
 3350               	/* frame size = 2 */
 3351               	/* stack size = 4 */
 3352               	.L__stack_usage = 4
 3353 164e 9A83      		std Y+2,r25
 3354 1650 8983      		std Y+1,r24
1538:lp_solve_5.5/colamd/colamd.c ****     print_report ("symamd", stats) ;
 3355               		.loc 1 1538 0
 3356 1652 8981      		ldd r24,Y+1
 3357 1654 9A81      		ldd r25,Y+2
 3358 1656 BC01      		movw r22,r24
 3359 1658 80E0      		ldi r24,lo8(.LC1)
 3360 165a 90E0      		ldi r25,hi8(.LC1)
 3361 165c 0E94 0000 		call print_report
1539:lp_solve_5.5/colamd/colamd.c **** }
 3362               		.loc 1 1539 0
 3363 1660 0000      		nop
 3364               	/* epilogue start */
 3365 1662 0F90      		pop __tmp_reg__
 3366 1664 0F90      		pop __tmp_reg__
 3367 1666 DF91      		pop r29
 3368 1668 CF91      		pop r28
 3369 166a 0895      		ret
 3370               		.cfi_endproc
 3371               	.LFE10:
 3374               	init_rows_cols:
 3375               	.LFB11:
1540:lp_solve_5.5/colamd/colamd.c **** 
1541:lp_solve_5.5/colamd/colamd.c **** 
1542:lp_solve_5.5/colamd/colamd.c **** 
1543:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
1544:lp_solve_5.5/colamd/colamd.c **** /* === NON-USER-CALLABLE ROUTINES: ========================================== */
1545:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
1546:lp_solve_5.5/colamd/colamd.c **** 
1547:lp_solve_5.5/colamd/colamd.c **** /* There are no user-callable routines beyond this point in the file */
1548:lp_solve_5.5/colamd/colamd.c **** 
1549:lp_solve_5.5/colamd/colamd.c **** 
1550:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
1551:lp_solve_5.5/colamd/colamd.c **** /* === init_rows_cols ======================================================= */
1552:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
1553:lp_solve_5.5/colamd/colamd.c **** 
1554:lp_solve_5.5/colamd/colamd.c **** /*
1555:lp_solve_5.5/colamd/colamd.c ****     Takes the column form of the matrix in A and creates the row form of the
1556:lp_solve_5.5/colamd/colamd.c ****     matrix.  Also, row and column attributes are stored in the Col and Row
1557:lp_solve_5.5/colamd/colamd.c ****     structs.  If the columns are un-sorted or contain duplicate row indices,
1558:lp_solve_5.5/colamd/colamd.c ****     this routine will also sort and remove duplicate row indices from the
1559:lp_solve_5.5/colamd/colamd.c ****     column form of the matrix.  Returns FALSE if the matrix is invalid,
1560:lp_solve_5.5/colamd/colamd.c ****     TRUE otherwise.  Not user-callable.
1561:lp_solve_5.5/colamd/colamd.c **** */
1562:lp_solve_5.5/colamd/colamd.c **** 
1563:lp_solve_5.5/colamd/colamd.c **** PRIVATE int init_rows_cols	/* returns TRUE if OK, or FALSE otherwise */
1564:lp_solve_5.5/colamd/colamd.c **** (
1565:lp_solve_5.5/colamd/colamd.c ****     /* === Parameters ======================================================= */
1566:lp_solve_5.5/colamd/colamd.c **** 
1567:lp_solve_5.5/colamd/colamd.c ****     int n_row,			/* number of rows of A */
1568:lp_solve_5.5/colamd/colamd.c ****     int n_col,			/* number of columns of A */
1569:lp_solve_5.5/colamd/colamd.c ****     Colamd_Row Row [],		/* of size n_row+1 */
1570:lp_solve_5.5/colamd/colamd.c ****     Colamd_Col Col [],		/* of size n_col+1 */
1571:lp_solve_5.5/colamd/colamd.c ****     int A [],			/* row indices of A, of size Alen */
1572:lp_solve_5.5/colamd/colamd.c ****     int p [],			/* pointers to columns in A, of size n_col+1 */
1573:lp_solve_5.5/colamd/colamd.c ****     int stats [COLAMD_STATS]	/* colamd statistics */ 
1574:lp_solve_5.5/colamd/colamd.c **** )
1575:lp_solve_5.5/colamd/colamd.c **** {
 3376               		.loc 1 1575 0
 3377               		.cfi_startproc
 3378 166c CF92      		push r12
 3379               	.LCFI42:
 3380               		.cfi_def_cfa_offset 3
 3381               		.cfi_offset 12, -2
 3382 166e DF92      		push r13
 3383               	.LCFI43:
 3384               		.cfi_def_cfa_offset 4
 3385               		.cfi_offset 13, -3
 3386 1670 EF92      		push r14
 3387               	.LCFI44:
 3388               		.cfi_def_cfa_offset 5
 3389               		.cfi_offset 14, -4
 3390 1672 FF92      		push r15
 3391               	.LCFI45:
 3392               		.cfi_def_cfa_offset 6
 3393               		.cfi_offset 15, -5
 3394 1674 0F93      		push r16
 3395               	.LCFI46:
 3396               		.cfi_def_cfa_offset 7
 3397               		.cfi_offset 16, -6
 3398 1676 1F93      		push r17
 3399               	.LCFI47:
 3400               		.cfi_def_cfa_offset 8
 3401               		.cfi_offset 17, -7
 3402 1678 CF93      		push r28
 3403               	.LCFI48:
 3404               		.cfi_def_cfa_offset 9
 3405               		.cfi_offset 28, -8
 3406 167a DF93      		push r29
 3407               	.LCFI49:
 3408               		.cfi_def_cfa_offset 10
 3409               		.cfi_offset 29, -9
 3410 167c CDB7      		in r28,__SP_L__
 3411 167e DEB7      		in r29,__SP_H__
 3412               	.LCFI50:
 3413               		.cfi_def_cfa_register 28
 3414 1680 6C97      		sbiw r28,28
 3415               	.LCFI51:
 3416               		.cfi_def_cfa_offset 38
 3417 1682 0FB6      		in __tmp_reg__,__SREG__
 3418 1684 F894      		cli
 3419 1686 DEBF      		out __SP_H__,r29
 3420 1688 0FBE      		out __SREG__,__tmp_reg__
 3421 168a CDBF      		out __SP_L__,r28
 3422               	/* prologue: function */
 3423               	/* frame size = 28 */
 3424               	/* stack size = 36 */
 3425               	.L__stack_usage = 36
 3426 168c 988B      		std Y+16,r25
 3427 168e 8F87      		std Y+15,r24
 3428 1690 7A8B      		std Y+18,r23
 3429 1692 698B      		std Y+17,r22
 3430 1694 5C8B      		std Y+20,r21
 3431 1696 4B8B      		std Y+19,r20
 3432 1698 3E8B      		std Y+22,r19
 3433 169a 2D8B      		std Y+21,r18
 3434 169c 188F      		std Y+24,r17
 3435 169e 0F8B      		std Y+23,r16
 3436 16a0 FA8E      		std Y+26,r15
 3437 16a2 E98E      		std Y+25,r14
 3438 16a4 DC8E      		std Y+28,r13
 3439 16a6 CB8E      		std Y+27,r12
1576:lp_solve_5.5/colamd/colamd.c ****     /* === Local variables ================================================== */
1577:lp_solve_5.5/colamd/colamd.c **** 
1578:lp_solve_5.5/colamd/colamd.c ****     int col ;			/* a column index */
1579:lp_solve_5.5/colamd/colamd.c ****     int row ;			/* a row index */
1580:lp_solve_5.5/colamd/colamd.c ****     int *cp ;			/* a column pointer */
1581:lp_solve_5.5/colamd/colamd.c ****     int *cp_end ;		/* a pointer to the end of a column */
1582:lp_solve_5.5/colamd/colamd.c ****     int *rp ;			/* a row pointer */
1583:lp_solve_5.5/colamd/colamd.c ****     int *rp_end ;		/* a pointer to the end of a row */
1584:lp_solve_5.5/colamd/colamd.c ****     int last_row ;		/* previous row */
1585:lp_solve_5.5/colamd/colamd.c **** 
1586:lp_solve_5.5/colamd/colamd.c ****     /* === Initialize columns, and check column pointers ==================== */
1587:lp_solve_5.5/colamd/colamd.c **** 
1588:lp_solve_5.5/colamd/colamd.c ****     for (col = 0 ; col < n_col ; col++)
 3440               		.loc 1 1588 0
 3441 16a8 1A82      		std Y+2,__zero_reg__
 3442 16aa 1982      		std Y+1,__zero_reg__
 3443 16ac 00C0      		rjmp .L81
 3444               	.L84:
1589:lp_solve_5.5/colamd/colamd.c ****     {
1590:lp_solve_5.5/colamd/colamd.c **** 	Col [col].start = p [col] ;
 3445               		.loc 1 1590 0
 3446 16ae 2981      		ldd r18,Y+1
 3447 16b0 3A81      		ldd r19,Y+2
 3448 16b2 C901      		movw r24,r18
 3449 16b4 880F      		lsl r24
 3450 16b6 991F      		rol r25
 3451 16b8 820F      		add r24,r18
 3452 16ba 931F      		adc r25,r19
 3453 16bc 880F      		lsl r24
 3454 16be 991F      		rol r25
 3455 16c0 880F      		lsl r24
 3456 16c2 991F      		rol r25
 3457 16c4 9C01      		movw r18,r24
 3458 16c6 8D89      		ldd r24,Y+21
 3459 16c8 9E89      		ldd r25,Y+22
 3460 16ca 820F      		add r24,r18
 3461 16cc 931F      		adc r25,r19
 3462 16ce 2981      		ldd r18,Y+1
 3463 16d0 3A81      		ldd r19,Y+2
 3464 16d2 220F      		lsl r18
 3465 16d4 331F      		rol r19
 3466 16d6 498D      		ldd r20,Y+25
 3467 16d8 5A8D      		ldd r21,Y+26
 3468 16da 240F      		add r18,r20
 3469 16dc 351F      		adc r19,r21
 3470 16de F901      		movw r30,r18
 3471 16e0 2081      		ld r18,Z
 3472 16e2 3181      		ldd r19,Z+1
 3473 16e4 FC01      		movw r30,r24
 3474 16e6 3183      		std Z+1,r19
 3475 16e8 2083      		st Z,r18
1591:lp_solve_5.5/colamd/colamd.c **** 	Col [col].length = p [col+1] - p [col] ;
 3476               		.loc 1 1591 0
 3477 16ea 2981      		ldd r18,Y+1
 3478 16ec 3A81      		ldd r19,Y+2
 3479 16ee C901      		movw r24,r18
 3480 16f0 880F      		lsl r24
 3481 16f2 991F      		rol r25
 3482 16f4 820F      		add r24,r18
 3483 16f6 931F      		adc r25,r19
 3484 16f8 880F      		lsl r24
 3485 16fa 991F      		rol r25
 3486 16fc 880F      		lsl r24
 3487 16fe 991F      		rol r25
 3488 1700 9C01      		movw r18,r24
 3489 1702 8D89      		ldd r24,Y+21
 3490 1704 9E89      		ldd r25,Y+22
 3491 1706 820F      		add r24,r18
 3492 1708 931F      		adc r25,r19
 3493 170a 2981      		ldd r18,Y+1
 3494 170c 3A81      		ldd r19,Y+2
 3495 170e 2F5F      		subi r18,-1
 3496 1710 3F4F      		sbci r19,-1
 3497 1712 220F      		lsl r18
 3498 1714 331F      		rol r19
 3499 1716 498D      		ldd r20,Y+25
 3500 1718 5A8D      		ldd r21,Y+26
 3501 171a 240F      		add r18,r20
 3502 171c 351F      		adc r19,r21
 3503 171e F901      		movw r30,r18
 3504 1720 4081      		ld r20,Z
 3505 1722 5181      		ldd r21,Z+1
 3506 1724 2981      		ldd r18,Y+1
 3507 1726 3A81      		ldd r19,Y+2
 3508 1728 220F      		lsl r18
 3509 172a 331F      		rol r19
 3510 172c 698D      		ldd r22,Y+25
 3511 172e 7A8D      		ldd r23,Y+26
 3512 1730 260F      		add r18,r22
 3513 1732 371F      		adc r19,r23
 3514 1734 F901      		movw r30,r18
 3515 1736 2081      		ld r18,Z
 3516 1738 3181      		ldd r19,Z+1
 3517 173a BA01      		movw r22,r20
 3518 173c 621B      		sub r22,r18
 3519 173e 730B      		sbc r23,r19
 3520 1740 9B01      		movw r18,r22
 3521 1742 FC01      		movw r30,r24
 3522 1744 3383      		std Z+3,r19
 3523 1746 2283      		std Z+2,r18
1592:lp_solve_5.5/colamd/colamd.c **** 
1593:lp_solve_5.5/colamd/colamd.c **** 	if (Col [col].length < 0)
 3524               		.loc 1 1593 0
 3525 1748 2981      		ldd r18,Y+1
 3526 174a 3A81      		ldd r19,Y+2
 3527 174c C901      		movw r24,r18
 3528 174e 880F      		lsl r24
 3529 1750 991F      		rol r25
 3530 1752 820F      		add r24,r18
 3531 1754 931F      		adc r25,r19
 3532 1756 880F      		lsl r24
 3533 1758 991F      		rol r25
 3534 175a 880F      		lsl r24
 3535 175c 991F      		rol r25
 3536 175e 9C01      		movw r18,r24
 3537 1760 8D89      		ldd r24,Y+21
 3538 1762 9E89      		ldd r25,Y+22
 3539 1764 820F      		add r24,r18
 3540 1766 931F      		adc r25,r19
 3541 1768 FC01      		movw r30,r24
 3542 176a 8281      		ldd r24,Z+2
 3543 176c 9381      		ldd r25,Z+3
 3544 176e 9923      		tst r25
 3545 1770 04F4      		brge .L82
1594:lp_solve_5.5/colamd/colamd.c **** 	{
1595:lp_solve_5.5/colamd/colamd.c **** 	    /* column pointers must be non-decreasing */
1596:lp_solve_5.5/colamd/colamd.c **** 	    stats [COLAMD_STATUS] = COLAMD_ERROR_col_length_negative ;
 3546               		.loc 1 1596 0
 3547 1772 8B8D      		ldd r24,Y+27
 3548 1774 9C8D      		ldd r25,Y+28
 3549 1776 0696      		adiw r24,6
 3550 1778 28EF      		ldi r18,lo8(-8)
 3551 177a 3FEF      		ldi r19,lo8(-1)
 3552 177c FC01      		movw r30,r24
 3553 177e 3183      		std Z+1,r19
 3554 1780 2083      		st Z,r18
1597:lp_solve_5.5/colamd/colamd.c **** 	    stats [COLAMD_INFO1] = col ;
 3555               		.loc 1 1597 0
 3556 1782 8B8D      		ldd r24,Y+27
 3557 1784 9C8D      		ldd r25,Y+28
 3558 1786 0896      		adiw r24,8
 3559 1788 2981      		ldd r18,Y+1
 3560 178a 3A81      		ldd r19,Y+2
 3561 178c FC01      		movw r30,r24
 3562 178e 3183      		std Z+1,r19
 3563 1790 2083      		st Z,r18
1598:lp_solve_5.5/colamd/colamd.c **** 	    stats [COLAMD_INFO2] = Col [col].length ;
 3564               		.loc 1 1598 0
 3565 1792 8B8D      		ldd r24,Y+27
 3566 1794 9C8D      		ldd r25,Y+28
 3567 1796 AC01      		movw r20,r24
 3568 1798 465F      		subi r20,-10
 3569 179a 5F4F      		sbci r21,-1
 3570 179c 2981      		ldd r18,Y+1
 3571 179e 3A81      		ldd r19,Y+2
 3572 17a0 C901      		movw r24,r18
 3573 17a2 880F      		lsl r24
 3574 17a4 991F      		rol r25
 3575 17a6 820F      		add r24,r18
 3576 17a8 931F      		adc r25,r19
 3577 17aa 880F      		lsl r24
 3578 17ac 991F      		rol r25
 3579 17ae 880F      		lsl r24
 3580 17b0 991F      		rol r25
 3581 17b2 9C01      		movw r18,r24
 3582 17b4 8D89      		ldd r24,Y+21
 3583 17b6 9E89      		ldd r25,Y+22
 3584 17b8 820F      		add r24,r18
 3585 17ba 931F      		adc r25,r19
 3586 17bc FC01      		movw r30,r24
 3587 17be 8281      		ldd r24,Z+2
 3588 17c0 9381      		ldd r25,Z+3
 3589 17c2 FA01      		movw r30,r20
 3590 17c4 9183      		std Z+1,r25
 3591 17c6 8083      		st Z,r24
1599:lp_solve_5.5/colamd/colamd.c **** 	    DEBUG0 (("colamd: col %d length %d < 0\n", col, Col [col].length)) ;
1600:lp_solve_5.5/colamd/colamd.c **** 	    return (FALSE) ;
 3592               		.loc 1 1600 0
 3593 17c8 80E0      		ldi r24,0
 3594 17ca 90E0      		ldi r25,0
 3595 17cc 00C0      		rjmp .L83
 3596               	.L82:
1601:lp_solve_5.5/colamd/colamd.c **** 	}
1602:lp_solve_5.5/colamd/colamd.c **** 
1603:lp_solve_5.5/colamd/colamd.c **** 	Col [col].shared1.thickness = 1 ;
 3597               		.loc 1 1603 0 discriminator 2
 3598 17ce 2981      		ldd r18,Y+1
 3599 17d0 3A81      		ldd r19,Y+2
 3600 17d2 C901      		movw r24,r18
 3601 17d4 880F      		lsl r24
 3602 17d6 991F      		rol r25
 3603 17d8 820F      		add r24,r18
 3604 17da 931F      		adc r25,r19
 3605 17dc 880F      		lsl r24
 3606 17de 991F      		rol r25
 3607 17e0 880F      		lsl r24
 3608 17e2 991F      		rol r25
 3609 17e4 9C01      		movw r18,r24
 3610 17e6 8D89      		ldd r24,Y+21
 3611 17e8 9E89      		ldd r25,Y+22
 3612 17ea 820F      		add r24,r18
 3613 17ec 931F      		adc r25,r19
 3614 17ee 21E0      		ldi r18,lo8(1)
 3615 17f0 30E0      		ldi r19,0
 3616 17f2 FC01      		movw r30,r24
 3617 17f4 3583      		std Z+5,r19
 3618 17f6 2483      		std Z+4,r18
1604:lp_solve_5.5/colamd/colamd.c **** 	Col [col].shared2.score = 0 ;
 3619               		.loc 1 1604 0 discriminator 2
 3620 17f8 2981      		ldd r18,Y+1
 3621 17fa 3A81      		ldd r19,Y+2
 3622 17fc C901      		movw r24,r18
 3623 17fe 880F      		lsl r24
 3624 1800 991F      		rol r25
 3625 1802 820F      		add r24,r18
 3626 1804 931F      		adc r25,r19
 3627 1806 880F      		lsl r24
 3628 1808 991F      		rol r25
 3629 180a 880F      		lsl r24
 3630 180c 991F      		rol r25
 3631 180e 9C01      		movw r18,r24
 3632 1810 8D89      		ldd r24,Y+21
 3633 1812 9E89      		ldd r25,Y+22
 3634 1814 820F      		add r24,r18
 3635 1816 931F      		adc r25,r19
 3636 1818 FC01      		movw r30,r24
 3637 181a 1782      		std Z+7,__zero_reg__
 3638 181c 1682      		std Z+6,__zero_reg__
1605:lp_solve_5.5/colamd/colamd.c **** 	Col [col].shared3.prev = EMPTY ;
 3639               		.loc 1 1605 0 discriminator 2
 3640 181e 2981      		ldd r18,Y+1
 3641 1820 3A81      		ldd r19,Y+2
 3642 1822 C901      		movw r24,r18
 3643 1824 880F      		lsl r24
 3644 1826 991F      		rol r25
 3645 1828 820F      		add r24,r18
 3646 182a 931F      		adc r25,r19
 3647 182c 880F      		lsl r24
 3648 182e 991F      		rol r25
 3649 1830 880F      		lsl r24
 3650 1832 991F      		rol r25
 3651 1834 9C01      		movw r18,r24
 3652 1836 8D89      		ldd r24,Y+21
 3653 1838 9E89      		ldd r25,Y+22
 3654 183a 820F      		add r24,r18
 3655 183c 931F      		adc r25,r19
 3656 183e 2FEF      		ldi r18,lo8(-1)
 3657 1840 3FEF      		ldi r19,lo8(-1)
 3658 1842 FC01      		movw r30,r24
 3659 1844 3187      		std Z+9,r19
 3660 1846 2087      		std Z+8,r18
1606:lp_solve_5.5/colamd/colamd.c **** 	Col [col].shared4.degree_next = EMPTY ;
 3661               		.loc 1 1606 0 discriminator 2
 3662 1848 2981      		ldd r18,Y+1
 3663 184a 3A81      		ldd r19,Y+2
 3664 184c C901      		movw r24,r18
 3665 184e 880F      		lsl r24
 3666 1850 991F      		rol r25
 3667 1852 820F      		add r24,r18
 3668 1854 931F      		adc r25,r19
 3669 1856 880F      		lsl r24
 3670 1858 991F      		rol r25
 3671 185a 880F      		lsl r24
 3672 185c 991F      		rol r25
 3673 185e 9C01      		movw r18,r24
 3674 1860 8D89      		ldd r24,Y+21
 3675 1862 9E89      		ldd r25,Y+22
 3676 1864 820F      		add r24,r18
 3677 1866 931F      		adc r25,r19
 3678 1868 2FEF      		ldi r18,lo8(-1)
 3679 186a 3FEF      		ldi r19,lo8(-1)
 3680 186c FC01      		movw r30,r24
 3681 186e 3387      		std Z+11,r19
 3682 1870 2287      		std Z+10,r18
1588:lp_solve_5.5/colamd/colamd.c ****     {
 3683               		.loc 1 1588 0 discriminator 2
 3684 1872 8981      		ldd r24,Y+1
 3685 1874 9A81      		ldd r25,Y+2
 3686 1876 0196      		adiw r24,1
 3687 1878 9A83      		std Y+2,r25
 3688 187a 8983      		std Y+1,r24
 3689               	.L81:
1588:lp_solve_5.5/colamd/colamd.c ****     {
 3690               		.loc 1 1588 0 is_stmt 0 discriminator 1
 3691 187c 2981      		ldd r18,Y+1
 3692 187e 3A81      		ldd r19,Y+2
 3693 1880 8989      		ldd r24,Y+17
 3694 1882 9A89      		ldd r25,Y+18
 3695 1884 2817      		cp r18,r24
 3696 1886 3907      		cpc r19,r25
 3697 1888 04F4      		brge .+2
 3698 188a 00C0      		rjmp .L84
1607:lp_solve_5.5/colamd/colamd.c ****     }
1608:lp_solve_5.5/colamd/colamd.c **** 
1609:lp_solve_5.5/colamd/colamd.c ****     /* p [0..n_col] no longer needed, used as "head" in subsequent routines */
1610:lp_solve_5.5/colamd/colamd.c **** 
1611:lp_solve_5.5/colamd/colamd.c ****     /* === Scan columns, compute row degrees, and check row indices ========= */
1612:lp_solve_5.5/colamd/colamd.c **** 
1613:lp_solve_5.5/colamd/colamd.c ****     stats [COLAMD_INFO3] = 0 ;	/* number of duplicate or unsorted row indices*/
 3699               		.loc 1 1613 0 is_stmt 1
 3700 188c 8B8D      		ldd r24,Y+27
 3701 188e 9C8D      		ldd r25,Y+28
 3702 1890 0C96      		adiw r24,12
 3703 1892 FC01      		movw r30,r24
 3704 1894 1182      		std Z+1,__zero_reg__
 3705 1896 1082      		st Z,__zero_reg__
1614:lp_solve_5.5/colamd/colamd.c **** 
1615:lp_solve_5.5/colamd/colamd.c ****     for (row = 0 ; row < n_row ; row++)
 3706               		.loc 1 1615 0
 3707 1898 1C82      		std Y+4,__zero_reg__
 3708 189a 1B82      		std Y+3,__zero_reg__
 3709 189c 00C0      		rjmp .L85
 3710               	.L86:
1616:lp_solve_5.5/colamd/colamd.c ****     {
1617:lp_solve_5.5/colamd/colamd.c **** 	Row [row].length = 0 ;
 3711               		.loc 1 1617 0 discriminator 3
 3712 189e 8B81      		ldd r24,Y+3
 3713 18a0 9C81      		ldd r25,Y+4
 3714 18a2 880F      		lsl r24
 3715 18a4 991F      		rol r25
 3716 18a6 880F      		lsl r24
 3717 18a8 991F      		rol r25
 3718 18aa 880F      		lsl r24
 3719 18ac 991F      		rol r25
 3720 18ae 2B89      		ldd r18,Y+19
 3721 18b0 3C89      		ldd r19,Y+20
 3722 18b2 820F      		add r24,r18
 3723 18b4 931F      		adc r25,r19
 3724 18b6 FC01      		movw r30,r24
 3725 18b8 1382      		std Z+3,__zero_reg__
 3726 18ba 1282      		std Z+2,__zero_reg__
1618:lp_solve_5.5/colamd/colamd.c **** 	Row [row].shared2.mark = -1 ;
 3727               		.loc 1 1618 0 discriminator 3
 3728 18bc 8B81      		ldd r24,Y+3
 3729 18be 9C81      		ldd r25,Y+4
 3730 18c0 880F      		lsl r24
 3731 18c2 991F      		rol r25
 3732 18c4 880F      		lsl r24
 3733 18c6 991F      		rol r25
 3734 18c8 880F      		lsl r24
 3735 18ca 991F      		rol r25
 3736 18cc 2B89      		ldd r18,Y+19
 3737 18ce 3C89      		ldd r19,Y+20
 3738 18d0 820F      		add r24,r18
 3739 18d2 931F      		adc r25,r19
 3740 18d4 2FEF      		ldi r18,lo8(-1)
 3741 18d6 3FEF      		ldi r19,lo8(-1)
 3742 18d8 FC01      		movw r30,r24
 3743 18da 3783      		std Z+7,r19
 3744 18dc 2683      		std Z+6,r18
1615:lp_solve_5.5/colamd/colamd.c ****     {
 3745               		.loc 1 1615 0 discriminator 3
 3746 18de 8B81      		ldd r24,Y+3
 3747 18e0 9C81      		ldd r25,Y+4
 3748 18e2 0196      		adiw r24,1
 3749 18e4 9C83      		std Y+4,r25
 3750 18e6 8B83      		std Y+3,r24
 3751               	.L85:
1615:lp_solve_5.5/colamd/colamd.c ****     {
 3752               		.loc 1 1615 0 is_stmt 0 discriminator 1
 3753 18e8 2B81      		ldd r18,Y+3
 3754 18ea 3C81      		ldd r19,Y+4
 3755 18ec 8F85      		ldd r24,Y+15
 3756 18ee 9889      		ldd r25,Y+16
 3757 18f0 2817      		cp r18,r24
 3758 18f2 3907      		cpc r19,r25
 3759 18f4 04F0      		brlt .L86
1619:lp_solve_5.5/colamd/colamd.c ****     }
1620:lp_solve_5.5/colamd/colamd.c **** 
1621:lp_solve_5.5/colamd/colamd.c ****     for (col = 0 ; col < n_col ; col++)
 3760               		.loc 1 1621 0 is_stmt 1
 3761 18f6 1A82      		std Y+2,__zero_reg__
 3762 18f8 1982      		std Y+1,__zero_reg__
 3763 18fa 00C0      		rjmp .L87
 3764               	.L96:
1622:lp_solve_5.5/colamd/colamd.c ****     {
1623:lp_solve_5.5/colamd/colamd.c **** 	last_row = -1 ;
 3765               		.loc 1 1623 0
 3766 18fc 8FEF      		ldi r24,lo8(-1)
 3767 18fe 9FEF      		ldi r25,lo8(-1)
 3768 1900 9A87      		std Y+10,r25
 3769 1902 8987      		std Y+9,r24
1624:lp_solve_5.5/colamd/colamd.c **** 
1625:lp_solve_5.5/colamd/colamd.c **** 	cp = &A [p [col]] ;
 3770               		.loc 1 1625 0
 3771 1904 8981      		ldd r24,Y+1
 3772 1906 9A81      		ldd r25,Y+2
 3773 1908 880F      		lsl r24
 3774 190a 991F      		rol r25
 3775 190c 298D      		ldd r18,Y+25
 3776 190e 3A8D      		ldd r19,Y+26
 3777 1910 820F      		add r24,r18
 3778 1912 931F      		adc r25,r19
 3779 1914 FC01      		movw r30,r24
 3780 1916 8081      		ld r24,Z
 3781 1918 9181      		ldd r25,Z+1
 3782 191a 880F      		lsl r24
 3783 191c 991F      		rol r25
 3784 191e 2F89      		ldd r18,Y+23
 3785 1920 388D      		ldd r19,Y+24
 3786 1922 820F      		add r24,r18
 3787 1924 931F      		adc r25,r19
 3788 1926 9E83      		std Y+6,r25
 3789 1928 8D83      		std Y+5,r24
1626:lp_solve_5.5/colamd/colamd.c **** 	cp_end = &A [p [col+1]] ;
 3790               		.loc 1 1626 0
 3791 192a 8981      		ldd r24,Y+1
 3792 192c 9A81      		ldd r25,Y+2
 3793 192e 0196      		adiw r24,1
 3794 1930 880F      		lsl r24
 3795 1932 991F      		rol r25
 3796 1934 298D      		ldd r18,Y+25
 3797 1936 3A8D      		ldd r19,Y+26
 3798 1938 820F      		add r24,r18
 3799 193a 931F      		adc r25,r19
 3800 193c FC01      		movw r30,r24
 3801 193e 8081      		ld r24,Z
 3802 1940 9181      		ldd r25,Z+1
 3803 1942 880F      		lsl r24
 3804 1944 991F      		rol r25
 3805 1946 2F89      		ldd r18,Y+23
 3806 1948 388D      		ldd r19,Y+24
 3807 194a 820F      		add r24,r18
 3808 194c 931F      		adc r25,r19
 3809 194e 9C87      		std Y+12,r25
 3810 1950 8B87      		std Y+11,r24
1627:lp_solve_5.5/colamd/colamd.c **** 
1628:lp_solve_5.5/colamd/colamd.c **** 	while (cp < cp_end)
 3811               		.loc 1 1628 0
 3812 1952 00C0      		rjmp .L88
 3813               	.L95:
1629:lp_solve_5.5/colamd/colamd.c **** 	{
1630:lp_solve_5.5/colamd/colamd.c **** 	    row = *cp++ ;
 3814               		.loc 1 1630 0
 3815 1954 8D81      		ldd r24,Y+5
 3816 1956 9E81      		ldd r25,Y+6
 3817 1958 9C01      		movw r18,r24
 3818 195a 2E5F      		subi r18,-2
 3819 195c 3F4F      		sbci r19,-1
 3820 195e 3E83      		std Y+6,r19
 3821 1960 2D83      		std Y+5,r18
 3822 1962 FC01      		movw r30,r24
 3823 1964 8081      		ld r24,Z
 3824 1966 9181      		ldd r25,Z+1
 3825 1968 9C83      		std Y+4,r25
 3826 196a 8B83      		std Y+3,r24
1631:lp_solve_5.5/colamd/colamd.c **** 
1632:lp_solve_5.5/colamd/colamd.c **** 	    /* make sure row indices within range */
1633:lp_solve_5.5/colamd/colamd.c **** 	    if (row < 0 || row >= n_row)
 3827               		.loc 1 1633 0
 3828 196c 8B81      		ldd r24,Y+3
 3829 196e 9C81      		ldd r25,Y+4
 3830 1970 9923      		tst r25
 3831 1972 04F0      		brlt .L89
 3832               		.loc 1 1633 0 is_stmt 0 discriminator 1
 3833 1974 2B81      		ldd r18,Y+3
 3834 1976 3C81      		ldd r19,Y+4
 3835 1978 8F85      		ldd r24,Y+15
 3836 197a 9889      		ldd r25,Y+16
 3837 197c 2817      		cp r18,r24
 3838 197e 3907      		cpc r19,r25
 3839 1980 04F0      		brlt .L90
 3840               	.L89:
1634:lp_solve_5.5/colamd/colamd.c **** 	    {
1635:lp_solve_5.5/colamd/colamd.c **** 		stats [COLAMD_STATUS] = COLAMD_ERROR_row_index_out_of_bounds ;
 3841               		.loc 1 1635 0 is_stmt 1
 3842 1982 8B8D      		ldd r24,Y+27
 3843 1984 9C8D      		ldd r25,Y+28
 3844 1986 0696      		adiw r24,6
 3845 1988 27EF      		ldi r18,lo8(-9)
 3846 198a 3FEF      		ldi r19,lo8(-1)
 3847 198c FC01      		movw r30,r24
 3848 198e 3183      		std Z+1,r19
 3849 1990 2083      		st Z,r18
1636:lp_solve_5.5/colamd/colamd.c **** 		stats [COLAMD_INFO1] = col ;
 3850               		.loc 1 1636 0
 3851 1992 8B8D      		ldd r24,Y+27
 3852 1994 9C8D      		ldd r25,Y+28
 3853 1996 0896      		adiw r24,8
 3854 1998 2981      		ldd r18,Y+1
 3855 199a 3A81      		ldd r19,Y+2
 3856 199c FC01      		movw r30,r24
 3857 199e 3183      		std Z+1,r19
 3858 19a0 2083      		st Z,r18
1637:lp_solve_5.5/colamd/colamd.c **** 		stats [COLAMD_INFO2] = row ;
 3859               		.loc 1 1637 0
 3860 19a2 8B8D      		ldd r24,Y+27
 3861 19a4 9C8D      		ldd r25,Y+28
 3862 19a6 0A96      		adiw r24,10
 3863 19a8 2B81      		ldd r18,Y+3
 3864 19aa 3C81      		ldd r19,Y+4
 3865 19ac FC01      		movw r30,r24
 3866 19ae 3183      		std Z+1,r19
 3867 19b0 2083      		st Z,r18
1638:lp_solve_5.5/colamd/colamd.c **** 		stats [COLAMD_INFO3] = n_row ;
 3868               		.loc 1 1638 0
 3869 19b2 8B8D      		ldd r24,Y+27
 3870 19b4 9C8D      		ldd r25,Y+28
 3871 19b6 0C96      		adiw r24,12
 3872 19b8 2F85      		ldd r18,Y+15
 3873 19ba 3889      		ldd r19,Y+16
 3874 19bc FC01      		movw r30,r24
 3875 19be 3183      		std Z+1,r19
 3876 19c0 2083      		st Z,r18
1639:lp_solve_5.5/colamd/colamd.c **** 		DEBUG0 (("colamd: row %d col %d out of bounds\n", row, col)) ;
1640:lp_solve_5.5/colamd/colamd.c **** 		return (FALSE) ;
 3877               		.loc 1 1640 0
 3878 19c2 80E0      		ldi r24,0
 3879 19c4 90E0      		ldi r25,0
 3880 19c6 00C0      		rjmp .L83
 3881               	.L90:
1641:lp_solve_5.5/colamd/colamd.c **** 	    }
1642:lp_solve_5.5/colamd/colamd.c **** 
1643:lp_solve_5.5/colamd/colamd.c **** 	    if (row <= last_row || Row [row].shared2.mark == col)
 3882               		.loc 1 1643 0
 3883 19c8 2B81      		ldd r18,Y+3
 3884 19ca 3C81      		ldd r19,Y+4
 3885 19cc 8985      		ldd r24,Y+9
 3886 19ce 9A85      		ldd r25,Y+10
 3887 19d0 8217      		cp r24,r18
 3888 19d2 9307      		cpc r25,r19
 3889 19d4 04F4      		brge .L91
 3890               		.loc 1 1643 0 is_stmt 0 discriminator 1
 3891 19d6 8B81      		ldd r24,Y+3
 3892 19d8 9C81      		ldd r25,Y+4
 3893 19da 880F      		lsl r24
 3894 19dc 991F      		rol r25
 3895 19de 880F      		lsl r24
 3896 19e0 991F      		rol r25
 3897 19e2 880F      		lsl r24
 3898 19e4 991F      		rol r25
 3899 19e6 2B89      		ldd r18,Y+19
 3900 19e8 3C89      		ldd r19,Y+20
 3901 19ea 820F      		add r24,r18
 3902 19ec 931F      		adc r25,r19
 3903 19ee FC01      		movw r30,r24
 3904 19f0 2681      		ldd r18,Z+6
 3905 19f2 3781      		ldd r19,Z+7
 3906 19f4 8981      		ldd r24,Y+1
 3907 19f6 9A81      		ldd r25,Y+2
 3908 19f8 2817      		cp r18,r24
 3909 19fa 3907      		cpc r19,r25
 3910 19fc 01F4      		brne .L92
 3911               	.L91:
1644:lp_solve_5.5/colamd/colamd.c **** 	    {
1645:lp_solve_5.5/colamd/colamd.c **** 		/* row index are unsorted or repeated (or both), thus col */
1646:lp_solve_5.5/colamd/colamd.c **** 		/* is jumbled.  This is a notice, not an error condition. */
1647:lp_solve_5.5/colamd/colamd.c **** 		stats [COLAMD_STATUS] = COLAMD_OK_BUT_JUMBLED ;
 3912               		.loc 1 1647 0 is_stmt 1
 3913 19fe 8B8D      		ldd r24,Y+27
 3914 1a00 9C8D      		ldd r25,Y+28
 3915 1a02 0696      		adiw r24,6
 3916 1a04 21E0      		ldi r18,lo8(1)
 3917 1a06 30E0      		ldi r19,0
 3918 1a08 FC01      		movw r30,r24
 3919 1a0a 3183      		std Z+1,r19
 3920 1a0c 2083      		st Z,r18
1648:lp_solve_5.5/colamd/colamd.c **** 		stats [COLAMD_INFO1] = col ;
 3921               		.loc 1 1648 0
 3922 1a0e 8B8D      		ldd r24,Y+27
 3923 1a10 9C8D      		ldd r25,Y+28
 3924 1a12 0896      		adiw r24,8
 3925 1a14 2981      		ldd r18,Y+1
 3926 1a16 3A81      		ldd r19,Y+2
 3927 1a18 FC01      		movw r30,r24
 3928 1a1a 3183      		std Z+1,r19
 3929 1a1c 2083      		st Z,r18
1649:lp_solve_5.5/colamd/colamd.c **** 		stats [COLAMD_INFO2] = row ;
 3930               		.loc 1 1649 0
 3931 1a1e 8B8D      		ldd r24,Y+27
 3932 1a20 9C8D      		ldd r25,Y+28
 3933 1a22 0A96      		adiw r24,10
 3934 1a24 2B81      		ldd r18,Y+3
 3935 1a26 3C81      		ldd r19,Y+4
 3936 1a28 FC01      		movw r30,r24
 3937 1a2a 3183      		std Z+1,r19
 3938 1a2c 2083      		st Z,r18
1650:lp_solve_5.5/colamd/colamd.c **** 		(stats [COLAMD_INFO3]) ++ ;
 3939               		.loc 1 1650 0
 3940 1a2e 8B8D      		ldd r24,Y+27
 3941 1a30 9C8D      		ldd r25,Y+28
 3942 1a32 0C96      		adiw r24,12
 3943 1a34 FC01      		movw r30,r24
 3944 1a36 2081      		ld r18,Z
 3945 1a38 3181      		ldd r19,Z+1
 3946 1a3a 2F5F      		subi r18,-1
 3947 1a3c 3F4F      		sbci r19,-1
 3948 1a3e FC01      		movw r30,r24
 3949 1a40 3183      		std Z+1,r19
 3950 1a42 2083      		st Z,r18
 3951               	.L92:
1651:lp_solve_5.5/colamd/colamd.c **** 		DEBUG1 (("colamd: row %d col %d unsorted/duplicate\n",row,col));
1652:lp_solve_5.5/colamd/colamd.c **** 	    }
1653:lp_solve_5.5/colamd/colamd.c **** 
1654:lp_solve_5.5/colamd/colamd.c **** 	    if (Row [row].shared2.mark != col)
 3952               		.loc 1 1654 0
 3953 1a44 8B81      		ldd r24,Y+3
 3954 1a46 9C81      		ldd r25,Y+4
 3955 1a48 880F      		lsl r24
 3956 1a4a 991F      		rol r25
 3957 1a4c 880F      		lsl r24
 3958 1a4e 991F      		rol r25
 3959 1a50 880F      		lsl r24
 3960 1a52 991F      		rol r25
 3961 1a54 2B89      		ldd r18,Y+19
 3962 1a56 3C89      		ldd r19,Y+20
 3963 1a58 820F      		add r24,r18
 3964 1a5a 931F      		adc r25,r19
 3965 1a5c FC01      		movw r30,r24
 3966 1a5e 2681      		ldd r18,Z+6
 3967 1a60 3781      		ldd r19,Z+7
 3968 1a62 8981      		ldd r24,Y+1
 3969 1a64 9A81      		ldd r25,Y+2
 3970 1a66 2817      		cp r18,r24
 3971 1a68 3907      		cpc r19,r25
 3972 1a6a 01F0      		breq .L93
1655:lp_solve_5.5/colamd/colamd.c **** 	    {
1656:lp_solve_5.5/colamd/colamd.c **** 		Row [row].length++ ;
 3973               		.loc 1 1656 0
 3974 1a6c 8B81      		ldd r24,Y+3
 3975 1a6e 9C81      		ldd r25,Y+4
 3976 1a70 880F      		lsl r24
 3977 1a72 991F      		rol r25
 3978 1a74 880F      		lsl r24
 3979 1a76 991F      		rol r25
 3980 1a78 880F      		lsl r24
 3981 1a7a 991F      		rol r25
 3982 1a7c 2B89      		ldd r18,Y+19
 3983 1a7e 3C89      		ldd r19,Y+20
 3984 1a80 820F      		add r24,r18
 3985 1a82 931F      		adc r25,r19
 3986 1a84 FC01      		movw r30,r24
 3987 1a86 2281      		ldd r18,Z+2
 3988 1a88 3381      		ldd r19,Z+3
 3989 1a8a 2F5F      		subi r18,-1
 3990 1a8c 3F4F      		sbci r19,-1
 3991 1a8e FC01      		movw r30,r24
 3992 1a90 3383      		std Z+3,r19
 3993 1a92 2283      		std Z+2,r18
 3994 1a94 00C0      		rjmp .L94
 3995               	.L93:
1657:lp_solve_5.5/colamd/colamd.c **** 	    }
1658:lp_solve_5.5/colamd/colamd.c **** 	    else
1659:lp_solve_5.5/colamd/colamd.c **** 	    {
1660:lp_solve_5.5/colamd/colamd.c **** 		/* this is a repeated entry in the column, */
1661:lp_solve_5.5/colamd/colamd.c **** 		/* it will be removed */
1662:lp_solve_5.5/colamd/colamd.c **** 		Col [col].length-- ;
 3996               		.loc 1 1662 0
 3997 1a96 2981      		ldd r18,Y+1
 3998 1a98 3A81      		ldd r19,Y+2
 3999 1a9a C901      		movw r24,r18
 4000 1a9c 880F      		lsl r24
 4001 1a9e 991F      		rol r25
 4002 1aa0 820F      		add r24,r18
 4003 1aa2 931F      		adc r25,r19
 4004 1aa4 880F      		lsl r24
 4005 1aa6 991F      		rol r25
 4006 1aa8 880F      		lsl r24
 4007 1aaa 991F      		rol r25
 4008 1aac 9C01      		movw r18,r24
 4009 1aae 8D89      		ldd r24,Y+21
 4010 1ab0 9E89      		ldd r25,Y+22
 4011 1ab2 820F      		add r24,r18
 4012 1ab4 931F      		adc r25,r19
 4013 1ab6 FC01      		movw r30,r24
 4014 1ab8 2281      		ldd r18,Z+2
 4015 1aba 3381      		ldd r19,Z+3
 4016 1abc 2150      		subi r18,1
 4017 1abe 3109      		sbc r19,__zero_reg__
 4018 1ac0 FC01      		movw r30,r24
 4019 1ac2 3383      		std Z+3,r19
 4020 1ac4 2283      		std Z+2,r18
 4021               	.L94:
1663:lp_solve_5.5/colamd/colamd.c **** 	    }
1664:lp_solve_5.5/colamd/colamd.c **** 
1665:lp_solve_5.5/colamd/colamd.c **** 	    /* mark the row as having been seen in this column */
1666:lp_solve_5.5/colamd/colamd.c **** 	    Row [row].shared2.mark = col ;
 4022               		.loc 1 1666 0
 4023 1ac6 8B81      		ldd r24,Y+3
 4024 1ac8 9C81      		ldd r25,Y+4
 4025 1aca 880F      		lsl r24
 4026 1acc 991F      		rol r25
 4027 1ace 880F      		lsl r24
 4028 1ad0 991F      		rol r25
 4029 1ad2 880F      		lsl r24
 4030 1ad4 991F      		rol r25
 4031 1ad6 2B89      		ldd r18,Y+19
 4032 1ad8 3C89      		ldd r19,Y+20
 4033 1ada 820F      		add r24,r18
 4034 1adc 931F      		adc r25,r19
 4035 1ade 2981      		ldd r18,Y+1
 4036 1ae0 3A81      		ldd r19,Y+2
 4037 1ae2 FC01      		movw r30,r24
 4038 1ae4 3783      		std Z+7,r19
 4039 1ae6 2683      		std Z+6,r18
1667:lp_solve_5.5/colamd/colamd.c **** 
1668:lp_solve_5.5/colamd/colamd.c **** 	    last_row = row ;
 4040               		.loc 1 1668 0
 4041 1ae8 8B81      		ldd r24,Y+3
 4042 1aea 9C81      		ldd r25,Y+4
 4043 1aec 9A87      		std Y+10,r25
 4044 1aee 8987      		std Y+9,r24
 4045               	.L88:
1628:lp_solve_5.5/colamd/colamd.c **** 	{
 4046               		.loc 1 1628 0
 4047 1af0 2D81      		ldd r18,Y+5
 4048 1af2 3E81      		ldd r19,Y+6
 4049 1af4 8B85      		ldd r24,Y+11
 4050 1af6 9C85      		ldd r25,Y+12
 4051 1af8 2817      		cp r18,r24
 4052 1afa 3907      		cpc r19,r25
 4053 1afc 00F4      		brsh .+2
 4054 1afe 00C0      		rjmp .L95
1621:lp_solve_5.5/colamd/colamd.c ****     {
 4055               		.loc 1 1621 0 discriminator 2
 4056 1b00 8981      		ldd r24,Y+1
 4057 1b02 9A81      		ldd r25,Y+2
 4058 1b04 0196      		adiw r24,1
 4059 1b06 9A83      		std Y+2,r25
 4060 1b08 8983      		std Y+1,r24
 4061               	.L87:
1621:lp_solve_5.5/colamd/colamd.c ****     {
 4062               		.loc 1 1621 0 is_stmt 0 discriminator 1
 4063 1b0a 2981      		ldd r18,Y+1
 4064 1b0c 3A81      		ldd r19,Y+2
 4065 1b0e 8989      		ldd r24,Y+17
 4066 1b10 9A89      		ldd r25,Y+18
 4067 1b12 2817      		cp r18,r24
 4068 1b14 3907      		cpc r19,r25
 4069 1b16 04F4      		brge .+2
 4070 1b18 00C0      		rjmp .L96
1669:lp_solve_5.5/colamd/colamd.c **** 	}
1670:lp_solve_5.5/colamd/colamd.c ****     }
1671:lp_solve_5.5/colamd/colamd.c **** 
1672:lp_solve_5.5/colamd/colamd.c ****     /* === Compute row pointers ============================================= */
1673:lp_solve_5.5/colamd/colamd.c **** 
1674:lp_solve_5.5/colamd/colamd.c ****     /* row form of the matrix starts directly after the column */
1675:lp_solve_5.5/colamd/colamd.c ****     /* form of matrix in A */
1676:lp_solve_5.5/colamd/colamd.c ****     Row [0].start = p [n_col] ;
 4071               		.loc 1 1676 0 is_stmt 1
 4072 1b1a 8989      		ldd r24,Y+17
 4073 1b1c 9A89      		ldd r25,Y+18
 4074 1b1e 880F      		lsl r24
 4075 1b20 991F      		rol r25
 4076 1b22 298D      		ldd r18,Y+25
 4077 1b24 3A8D      		ldd r19,Y+26
 4078 1b26 820F      		add r24,r18
 4079 1b28 931F      		adc r25,r19
 4080 1b2a FC01      		movw r30,r24
 4081 1b2c 2081      		ld r18,Z
 4082 1b2e 3181      		ldd r19,Z+1
 4083 1b30 8B89      		ldd r24,Y+19
 4084 1b32 9C89      		ldd r25,Y+20
 4085 1b34 FC01      		movw r30,r24
 4086 1b36 3183      		std Z+1,r19
 4087 1b38 2083      		st Z,r18
1677:lp_solve_5.5/colamd/colamd.c ****     Row [0].shared1.p = Row [0].start ;
 4088               		.loc 1 1677 0
 4089 1b3a 8B89      		ldd r24,Y+19
 4090 1b3c 9C89      		ldd r25,Y+20
 4091 1b3e FC01      		movw r30,r24
 4092 1b40 2081      		ld r18,Z
 4093 1b42 3181      		ldd r19,Z+1
 4094 1b44 8B89      		ldd r24,Y+19
 4095 1b46 9C89      		ldd r25,Y+20
 4096 1b48 FC01      		movw r30,r24
 4097 1b4a 3583      		std Z+5,r19
 4098 1b4c 2483      		std Z+4,r18
1678:lp_solve_5.5/colamd/colamd.c ****     Row [0].shared2.mark = -1 ;
 4099               		.loc 1 1678 0
 4100 1b4e 8B89      		ldd r24,Y+19
 4101 1b50 9C89      		ldd r25,Y+20
 4102 1b52 2FEF      		ldi r18,lo8(-1)
 4103 1b54 3FEF      		ldi r19,lo8(-1)
 4104 1b56 FC01      		movw r30,r24
 4105 1b58 3783      		std Z+7,r19
 4106 1b5a 2683      		std Z+6,r18
1679:lp_solve_5.5/colamd/colamd.c ****     for (row = 1 ; row < n_row ; row++)
 4107               		.loc 1 1679 0
 4108 1b5c 81E0      		ldi r24,lo8(1)
 4109 1b5e 90E0      		ldi r25,0
 4110 1b60 9C83      		std Y+4,r25
 4111 1b62 8B83      		std Y+3,r24
 4112 1b64 00C0      		rjmp .L97
 4113               	.L98:
1680:lp_solve_5.5/colamd/colamd.c ****     {
1681:lp_solve_5.5/colamd/colamd.c **** 	Row [row].start = Row [row-1].start + Row [row-1].length ;
 4114               		.loc 1 1681 0 discriminator 3
 4115 1b66 8B81      		ldd r24,Y+3
 4116 1b68 9C81      		ldd r25,Y+4
 4117 1b6a 880F      		lsl r24
 4118 1b6c 991F      		rol r25
 4119 1b6e 880F      		lsl r24
 4120 1b70 991F      		rol r25
 4121 1b72 880F      		lsl r24
 4122 1b74 991F      		rol r25
 4123 1b76 2B89      		ldd r18,Y+19
 4124 1b78 3C89      		ldd r19,Y+20
 4125 1b7a 820F      		add r24,r18
 4126 1b7c 931F      		adc r25,r19
 4127 1b7e 2B81      		ldd r18,Y+3
 4128 1b80 3C81      		ldd r19,Y+4
 4129 1b82 2150      		subi r18,1
 4130 1b84 304E      		sbci r19,-32
 4131 1b86 220F      		lsl r18
 4132 1b88 331F      		rol r19
 4133 1b8a 220F      		lsl r18
 4134 1b8c 331F      		rol r19
 4135 1b8e 220F      		lsl r18
 4136 1b90 331F      		rol r19
 4137 1b92 4B89      		ldd r20,Y+19
 4138 1b94 5C89      		ldd r21,Y+20
 4139 1b96 240F      		add r18,r20
 4140 1b98 351F      		adc r19,r21
 4141 1b9a F901      		movw r30,r18
 4142 1b9c 4081      		ld r20,Z
 4143 1b9e 5181      		ldd r21,Z+1
 4144 1ba0 2B81      		ldd r18,Y+3
 4145 1ba2 3C81      		ldd r19,Y+4
 4146 1ba4 2150      		subi r18,1
 4147 1ba6 304E      		sbci r19,-32
 4148 1ba8 220F      		lsl r18
 4149 1baa 331F      		rol r19
 4150 1bac 220F      		lsl r18
 4151 1bae 331F      		rol r19
 4152 1bb0 220F      		lsl r18
 4153 1bb2 331F      		rol r19
 4154 1bb4 6B89      		ldd r22,Y+19
 4155 1bb6 7C89      		ldd r23,Y+20
 4156 1bb8 260F      		add r18,r22
 4157 1bba 371F      		adc r19,r23
 4158 1bbc F901      		movw r30,r18
 4159 1bbe 2281      		ldd r18,Z+2
 4160 1bc0 3381      		ldd r19,Z+3
 4161 1bc2 240F      		add r18,r20
 4162 1bc4 351F      		adc r19,r21
 4163 1bc6 FC01      		movw r30,r24
 4164 1bc8 3183      		std Z+1,r19
 4165 1bca 2083      		st Z,r18
1682:lp_solve_5.5/colamd/colamd.c **** 	Row [row].shared1.p = Row [row].start ;
 4166               		.loc 1 1682 0 discriminator 3
 4167 1bcc 8B81      		ldd r24,Y+3
 4168 1bce 9C81      		ldd r25,Y+4
 4169 1bd0 880F      		lsl r24
 4170 1bd2 991F      		rol r25
 4171 1bd4 880F      		lsl r24
 4172 1bd6 991F      		rol r25
 4173 1bd8 880F      		lsl r24
 4174 1bda 991F      		rol r25
 4175 1bdc 2B89      		ldd r18,Y+19
 4176 1bde 3C89      		ldd r19,Y+20
 4177 1be0 820F      		add r24,r18
 4178 1be2 931F      		adc r25,r19
 4179 1be4 2B81      		ldd r18,Y+3
 4180 1be6 3C81      		ldd r19,Y+4
 4181 1be8 220F      		lsl r18
 4182 1bea 331F      		rol r19
 4183 1bec 220F      		lsl r18
 4184 1bee 331F      		rol r19
 4185 1bf0 220F      		lsl r18
 4186 1bf2 331F      		rol r19
 4187 1bf4 4B89      		ldd r20,Y+19
 4188 1bf6 5C89      		ldd r21,Y+20
 4189 1bf8 240F      		add r18,r20
 4190 1bfa 351F      		adc r19,r21
 4191 1bfc F901      		movw r30,r18
 4192 1bfe 2081      		ld r18,Z
 4193 1c00 3181      		ldd r19,Z+1
 4194 1c02 FC01      		movw r30,r24
 4195 1c04 3583      		std Z+5,r19
 4196 1c06 2483      		std Z+4,r18
1683:lp_solve_5.5/colamd/colamd.c **** 	Row [row].shared2.mark = -1 ;
 4197               		.loc 1 1683 0 discriminator 3
 4198 1c08 8B81      		ldd r24,Y+3
 4199 1c0a 9C81      		ldd r25,Y+4
 4200 1c0c 880F      		lsl r24
 4201 1c0e 991F      		rol r25
 4202 1c10 880F      		lsl r24
 4203 1c12 991F      		rol r25
 4204 1c14 880F      		lsl r24
 4205 1c16 991F      		rol r25
 4206 1c18 2B89      		ldd r18,Y+19
 4207 1c1a 3C89      		ldd r19,Y+20
 4208 1c1c 820F      		add r24,r18
 4209 1c1e 931F      		adc r25,r19
 4210 1c20 2FEF      		ldi r18,lo8(-1)
 4211 1c22 3FEF      		ldi r19,lo8(-1)
 4212 1c24 FC01      		movw r30,r24
 4213 1c26 3783      		std Z+7,r19
 4214 1c28 2683      		std Z+6,r18
1679:lp_solve_5.5/colamd/colamd.c ****     {
 4215               		.loc 1 1679 0 discriminator 3
 4216 1c2a 8B81      		ldd r24,Y+3
 4217 1c2c 9C81      		ldd r25,Y+4
 4218 1c2e 0196      		adiw r24,1
 4219 1c30 9C83      		std Y+4,r25
 4220 1c32 8B83      		std Y+3,r24
 4221               	.L97:
1679:lp_solve_5.5/colamd/colamd.c ****     {
 4222               		.loc 1 1679 0 is_stmt 0 discriminator 1
 4223 1c34 2B81      		ldd r18,Y+3
 4224 1c36 3C81      		ldd r19,Y+4
 4225 1c38 8F85      		ldd r24,Y+15
 4226 1c3a 9889      		ldd r25,Y+16
 4227 1c3c 2817      		cp r18,r24
 4228 1c3e 3907      		cpc r19,r25
 4229 1c40 04F4      		brge .+2
 4230 1c42 00C0      		rjmp .L98
1684:lp_solve_5.5/colamd/colamd.c ****     }
1685:lp_solve_5.5/colamd/colamd.c **** 
1686:lp_solve_5.5/colamd/colamd.c ****     /* === Create row form ================================================== */
1687:lp_solve_5.5/colamd/colamd.c **** 
1688:lp_solve_5.5/colamd/colamd.c ****     if (stats [COLAMD_STATUS] == COLAMD_OK_BUT_JUMBLED)
 4231               		.loc 1 1688 0 is_stmt 1
 4232 1c44 8B8D      		ldd r24,Y+27
 4233 1c46 9C8D      		ldd r25,Y+28
 4234 1c48 0696      		adiw r24,6
 4235 1c4a FC01      		movw r30,r24
 4236 1c4c 8081      		ld r24,Z
 4237 1c4e 9181      		ldd r25,Z+1
 4238 1c50 0197      		sbiw r24,1
 4239 1c52 01F0      		breq .+2
 4240 1c54 00C0      		rjmp .L99
1689:lp_solve_5.5/colamd/colamd.c ****     {
1690:lp_solve_5.5/colamd/colamd.c **** 	/* if cols jumbled, watch for repeated row indices */
1691:lp_solve_5.5/colamd/colamd.c **** 	for (col = 0 ; col < n_col ; col++)
 4241               		.loc 1 1691 0
 4242 1c56 1A82      		std Y+2,__zero_reg__
 4243 1c58 1982      		std Y+1,__zero_reg__
 4244 1c5a 00C0      		rjmp .L100
 4245               	.L103:
1692:lp_solve_5.5/colamd/colamd.c **** 	{
1693:lp_solve_5.5/colamd/colamd.c **** 	    cp = &A [p [col]] ;
 4246               		.loc 1 1693 0
 4247 1c5c 8981      		ldd r24,Y+1
 4248 1c5e 9A81      		ldd r25,Y+2
 4249 1c60 880F      		lsl r24
 4250 1c62 991F      		rol r25
 4251 1c64 298D      		ldd r18,Y+25
 4252 1c66 3A8D      		ldd r19,Y+26
 4253 1c68 820F      		add r24,r18
 4254 1c6a 931F      		adc r25,r19
 4255 1c6c FC01      		movw r30,r24
 4256 1c6e 8081      		ld r24,Z
 4257 1c70 9181      		ldd r25,Z+1
 4258 1c72 880F      		lsl r24
 4259 1c74 991F      		rol r25
 4260 1c76 2F89      		ldd r18,Y+23
 4261 1c78 388D      		ldd r19,Y+24
 4262 1c7a 820F      		add r24,r18
 4263 1c7c 931F      		adc r25,r19
 4264 1c7e 9E83      		std Y+6,r25
 4265 1c80 8D83      		std Y+5,r24
1694:lp_solve_5.5/colamd/colamd.c **** 	    cp_end = &A [p [col+1]] ;
 4266               		.loc 1 1694 0
 4267 1c82 8981      		ldd r24,Y+1
 4268 1c84 9A81      		ldd r25,Y+2
 4269 1c86 0196      		adiw r24,1
 4270 1c88 880F      		lsl r24
 4271 1c8a 991F      		rol r25
 4272 1c8c 298D      		ldd r18,Y+25
 4273 1c8e 3A8D      		ldd r19,Y+26
 4274 1c90 820F      		add r24,r18
 4275 1c92 931F      		adc r25,r19
 4276 1c94 FC01      		movw r30,r24
 4277 1c96 8081      		ld r24,Z
 4278 1c98 9181      		ldd r25,Z+1
 4279 1c9a 880F      		lsl r24
 4280 1c9c 991F      		rol r25
 4281 1c9e 2F89      		ldd r18,Y+23
 4282 1ca0 388D      		ldd r19,Y+24
 4283 1ca2 820F      		add r24,r18
 4284 1ca4 931F      		adc r25,r19
 4285 1ca6 9C87      		std Y+12,r25
 4286 1ca8 8B87      		std Y+11,r24
1695:lp_solve_5.5/colamd/colamd.c **** 	    while (cp < cp_end)
 4287               		.loc 1 1695 0
 4288 1caa 00C0      		rjmp .L101
 4289               	.L102:
1696:lp_solve_5.5/colamd/colamd.c **** 	    {
1697:lp_solve_5.5/colamd/colamd.c **** 		row = *cp++ ;
 4290               		.loc 1 1697 0
 4291 1cac 8D81      		ldd r24,Y+5
 4292 1cae 9E81      		ldd r25,Y+6
 4293 1cb0 9C01      		movw r18,r24
 4294 1cb2 2E5F      		subi r18,-2
 4295 1cb4 3F4F      		sbci r19,-1
 4296 1cb6 3E83      		std Y+6,r19
 4297 1cb8 2D83      		std Y+5,r18
 4298 1cba FC01      		movw r30,r24
 4299 1cbc 8081      		ld r24,Z
 4300 1cbe 9181      		ldd r25,Z+1
 4301 1cc0 9C83      		std Y+4,r25
 4302 1cc2 8B83      		std Y+3,r24
1698:lp_solve_5.5/colamd/colamd.c **** 		if (Row [row].shared2.mark != col)
 4303               		.loc 1 1698 0
 4304 1cc4 8B81      		ldd r24,Y+3
 4305 1cc6 9C81      		ldd r25,Y+4
 4306 1cc8 880F      		lsl r24
 4307 1cca 991F      		rol r25
 4308 1ccc 880F      		lsl r24
 4309 1cce 991F      		rol r25
 4310 1cd0 880F      		lsl r24
 4311 1cd2 991F      		rol r25
 4312 1cd4 2B89      		ldd r18,Y+19
 4313 1cd6 3C89      		ldd r19,Y+20
 4314 1cd8 820F      		add r24,r18
 4315 1cda 931F      		adc r25,r19
 4316 1cdc FC01      		movw r30,r24
 4317 1cde 2681      		ldd r18,Z+6
 4318 1ce0 3781      		ldd r19,Z+7
 4319 1ce2 8981      		ldd r24,Y+1
 4320 1ce4 9A81      		ldd r25,Y+2
 4321 1ce6 2817      		cp r18,r24
 4322 1ce8 3907      		cpc r19,r25
 4323 1cea 01F0      		breq .L101
1699:lp_solve_5.5/colamd/colamd.c **** 		{
1700:lp_solve_5.5/colamd/colamd.c **** 		    A [(Row [row].shared1.p)++] = col ;
 4324               		.loc 1 1700 0
 4325 1cec 8B81      		ldd r24,Y+3
 4326 1cee 9C81      		ldd r25,Y+4
 4327 1cf0 880F      		lsl r24
 4328 1cf2 991F      		rol r25
 4329 1cf4 880F      		lsl r24
 4330 1cf6 991F      		rol r25
 4331 1cf8 880F      		lsl r24
 4332 1cfa 991F      		rol r25
 4333 1cfc 2B89      		ldd r18,Y+19
 4334 1cfe 3C89      		ldd r19,Y+20
 4335 1d00 820F      		add r24,r18
 4336 1d02 931F      		adc r25,r19
 4337 1d04 FC01      		movw r30,r24
 4338 1d06 2481      		ldd r18,Z+4
 4339 1d08 3581      		ldd r19,Z+5
 4340 1d0a A901      		movw r20,r18
 4341 1d0c 4F5F      		subi r20,-1
 4342 1d0e 5F4F      		sbci r21,-1
 4343 1d10 FC01      		movw r30,r24
 4344 1d12 5583      		std Z+5,r21
 4345 1d14 4483      		std Z+4,r20
 4346 1d16 C901      		movw r24,r18
 4347 1d18 880F      		lsl r24
 4348 1d1a 991F      		rol r25
 4349 1d1c 2F89      		ldd r18,Y+23
 4350 1d1e 388D      		ldd r19,Y+24
 4351 1d20 820F      		add r24,r18
 4352 1d22 931F      		adc r25,r19
 4353 1d24 2981      		ldd r18,Y+1
 4354 1d26 3A81      		ldd r19,Y+2
 4355 1d28 FC01      		movw r30,r24
 4356 1d2a 3183      		std Z+1,r19
 4357 1d2c 2083      		st Z,r18
1701:lp_solve_5.5/colamd/colamd.c **** 		    Row [row].shared2.mark = col ;
 4358               		.loc 1 1701 0
 4359 1d2e 8B81      		ldd r24,Y+3
 4360 1d30 9C81      		ldd r25,Y+4
 4361 1d32 880F      		lsl r24
 4362 1d34 991F      		rol r25
 4363 1d36 880F      		lsl r24
 4364 1d38 991F      		rol r25
 4365 1d3a 880F      		lsl r24
 4366 1d3c 991F      		rol r25
 4367 1d3e 2B89      		ldd r18,Y+19
 4368 1d40 3C89      		ldd r19,Y+20
 4369 1d42 820F      		add r24,r18
 4370 1d44 931F      		adc r25,r19
 4371 1d46 2981      		ldd r18,Y+1
 4372 1d48 3A81      		ldd r19,Y+2
 4373 1d4a FC01      		movw r30,r24
 4374 1d4c 3783      		std Z+7,r19
 4375 1d4e 2683      		std Z+6,r18
 4376               	.L101:
1695:lp_solve_5.5/colamd/colamd.c **** 	    {
 4377               		.loc 1 1695 0
 4378 1d50 2D81      		ldd r18,Y+5
 4379 1d52 3E81      		ldd r19,Y+6
 4380 1d54 8B85      		ldd r24,Y+11
 4381 1d56 9C85      		ldd r25,Y+12
 4382 1d58 2817      		cp r18,r24
 4383 1d5a 3907      		cpc r19,r25
 4384 1d5c 00F4      		brsh .+2
 4385 1d5e 00C0      		rjmp .L102
1691:lp_solve_5.5/colamd/colamd.c **** 	{
 4386               		.loc 1 1691 0 discriminator 2
 4387 1d60 8981      		ldd r24,Y+1
 4388 1d62 9A81      		ldd r25,Y+2
 4389 1d64 0196      		adiw r24,1
 4390 1d66 9A83      		std Y+2,r25
 4391 1d68 8983      		std Y+1,r24
 4392               	.L100:
1691:lp_solve_5.5/colamd/colamd.c **** 	{
 4393               		.loc 1 1691 0 is_stmt 0 discriminator 1
 4394 1d6a 2981      		ldd r18,Y+1
 4395 1d6c 3A81      		ldd r19,Y+2
 4396 1d6e 8989      		ldd r24,Y+17
 4397 1d70 9A89      		ldd r25,Y+18
 4398 1d72 2817      		cp r18,r24
 4399 1d74 3907      		cpc r19,r25
 4400 1d76 04F4      		brge .+2
 4401 1d78 00C0      		rjmp .L103
 4402 1d7a 00C0      		rjmp .L104
 4403               	.L99:
1702:lp_solve_5.5/colamd/colamd.c **** 		}
1703:lp_solve_5.5/colamd/colamd.c **** 	    }
1704:lp_solve_5.5/colamd/colamd.c **** 	}
1705:lp_solve_5.5/colamd/colamd.c ****     }
1706:lp_solve_5.5/colamd/colamd.c ****     else
1707:lp_solve_5.5/colamd/colamd.c ****     {
1708:lp_solve_5.5/colamd/colamd.c **** 	/* if cols not jumbled, we don't need the mark (this is faster) */
1709:lp_solve_5.5/colamd/colamd.c **** 	for (col = 0 ; col < n_col ; col++)
 4404               		.loc 1 1709 0 is_stmt 1
 4405 1d7c 1A82      		std Y+2,__zero_reg__
 4406 1d7e 1982      		std Y+1,__zero_reg__
 4407 1d80 00C0      		rjmp .L105
 4408               	.L108:
1710:lp_solve_5.5/colamd/colamd.c **** 	{
1711:lp_solve_5.5/colamd/colamd.c **** 	    cp = &A [p [col]] ;
 4409               		.loc 1 1711 0
 4410 1d82 8981      		ldd r24,Y+1
 4411 1d84 9A81      		ldd r25,Y+2
 4412 1d86 880F      		lsl r24
 4413 1d88 991F      		rol r25
 4414 1d8a 298D      		ldd r18,Y+25
 4415 1d8c 3A8D      		ldd r19,Y+26
 4416 1d8e 820F      		add r24,r18
 4417 1d90 931F      		adc r25,r19
 4418 1d92 FC01      		movw r30,r24
 4419 1d94 8081      		ld r24,Z
 4420 1d96 9181      		ldd r25,Z+1
 4421 1d98 880F      		lsl r24
 4422 1d9a 991F      		rol r25
 4423 1d9c 2F89      		ldd r18,Y+23
 4424 1d9e 388D      		ldd r19,Y+24
 4425 1da0 820F      		add r24,r18
 4426 1da2 931F      		adc r25,r19
 4427 1da4 9E83      		std Y+6,r25
 4428 1da6 8D83      		std Y+5,r24
1712:lp_solve_5.5/colamd/colamd.c **** 	    cp_end = &A [p [col+1]] ;
 4429               		.loc 1 1712 0
 4430 1da8 8981      		ldd r24,Y+1
 4431 1daa 9A81      		ldd r25,Y+2
 4432 1dac 0196      		adiw r24,1
 4433 1dae 880F      		lsl r24
 4434 1db0 991F      		rol r25
 4435 1db2 298D      		ldd r18,Y+25
 4436 1db4 3A8D      		ldd r19,Y+26
 4437 1db6 820F      		add r24,r18
 4438 1db8 931F      		adc r25,r19
 4439 1dba FC01      		movw r30,r24
 4440 1dbc 8081      		ld r24,Z
 4441 1dbe 9181      		ldd r25,Z+1
 4442 1dc0 880F      		lsl r24
 4443 1dc2 991F      		rol r25
 4444 1dc4 2F89      		ldd r18,Y+23
 4445 1dc6 388D      		ldd r19,Y+24
 4446 1dc8 820F      		add r24,r18
 4447 1dca 931F      		adc r25,r19
 4448 1dcc 9C87      		std Y+12,r25
 4449 1dce 8B87      		std Y+11,r24
1713:lp_solve_5.5/colamd/colamd.c **** 	    while (cp < cp_end)
 4450               		.loc 1 1713 0
 4451 1dd0 00C0      		rjmp .L106
 4452               	.L107:
1714:lp_solve_5.5/colamd/colamd.c **** 	    {
1715:lp_solve_5.5/colamd/colamd.c **** 		A [(Row [*cp++].shared1.p)++] = col ;
 4453               		.loc 1 1715 0
 4454 1dd2 8D81      		ldd r24,Y+5
 4455 1dd4 9E81      		ldd r25,Y+6
 4456 1dd6 9C01      		movw r18,r24
 4457 1dd8 2E5F      		subi r18,-2
 4458 1dda 3F4F      		sbci r19,-1
 4459 1ddc 3E83      		std Y+6,r19
 4460 1dde 2D83      		std Y+5,r18
 4461 1de0 FC01      		movw r30,r24
 4462 1de2 8081      		ld r24,Z
 4463 1de4 9181      		ldd r25,Z+1
 4464 1de6 880F      		lsl r24
 4465 1de8 991F      		rol r25
 4466 1dea 880F      		lsl r24
 4467 1dec 991F      		rol r25
 4468 1dee 880F      		lsl r24
 4469 1df0 991F      		rol r25
 4470 1df2 2B89      		ldd r18,Y+19
 4471 1df4 3C89      		ldd r19,Y+20
 4472 1df6 820F      		add r24,r18
 4473 1df8 931F      		adc r25,r19
 4474 1dfa FC01      		movw r30,r24
 4475 1dfc 2481      		ldd r18,Z+4
 4476 1dfe 3581      		ldd r19,Z+5
 4477 1e00 A901      		movw r20,r18
 4478 1e02 4F5F      		subi r20,-1
 4479 1e04 5F4F      		sbci r21,-1
 4480 1e06 FC01      		movw r30,r24
 4481 1e08 5583      		std Z+5,r21
 4482 1e0a 4483      		std Z+4,r20
 4483 1e0c C901      		movw r24,r18
 4484 1e0e 880F      		lsl r24
 4485 1e10 991F      		rol r25
 4486 1e12 2F89      		ldd r18,Y+23
 4487 1e14 388D      		ldd r19,Y+24
 4488 1e16 820F      		add r24,r18
 4489 1e18 931F      		adc r25,r19
 4490 1e1a 2981      		ldd r18,Y+1
 4491 1e1c 3A81      		ldd r19,Y+2
 4492 1e1e FC01      		movw r30,r24
 4493 1e20 3183      		std Z+1,r19
 4494 1e22 2083      		st Z,r18
 4495               	.L106:
1713:lp_solve_5.5/colamd/colamd.c **** 	    while (cp < cp_end)
 4496               		.loc 1 1713 0
 4497 1e24 2D81      		ldd r18,Y+5
 4498 1e26 3E81      		ldd r19,Y+6
 4499 1e28 8B85      		ldd r24,Y+11
 4500 1e2a 9C85      		ldd r25,Y+12
 4501 1e2c 2817      		cp r18,r24
 4502 1e2e 3907      		cpc r19,r25
 4503 1e30 00F0      		brlo .L107
1709:lp_solve_5.5/colamd/colamd.c **** 	{
 4504               		.loc 1 1709 0 discriminator 2
 4505 1e32 8981      		ldd r24,Y+1
 4506 1e34 9A81      		ldd r25,Y+2
 4507 1e36 0196      		adiw r24,1
 4508 1e38 9A83      		std Y+2,r25
 4509 1e3a 8983      		std Y+1,r24
 4510               	.L105:
1709:lp_solve_5.5/colamd/colamd.c **** 	{
 4511               		.loc 1 1709 0 is_stmt 0 discriminator 1
 4512 1e3c 2981      		ldd r18,Y+1
 4513 1e3e 3A81      		ldd r19,Y+2
 4514 1e40 8989      		ldd r24,Y+17
 4515 1e42 9A89      		ldd r25,Y+18
 4516 1e44 2817      		cp r18,r24
 4517 1e46 3907      		cpc r19,r25
 4518 1e48 04F4      		brge .+2
 4519 1e4a 00C0      		rjmp .L108
 4520               	.L104:
1716:lp_solve_5.5/colamd/colamd.c **** 	    }
1717:lp_solve_5.5/colamd/colamd.c **** 	}
1718:lp_solve_5.5/colamd/colamd.c ****     }
1719:lp_solve_5.5/colamd/colamd.c **** 
1720:lp_solve_5.5/colamd/colamd.c ****     /* === Clear the row marks and set row degrees ========================== */
1721:lp_solve_5.5/colamd/colamd.c **** 
1722:lp_solve_5.5/colamd/colamd.c ****     for (row = 0 ; row < n_row ; row++)
 4521               		.loc 1 1722 0 is_stmt 1
 4522 1e4c 1C82      		std Y+4,__zero_reg__
 4523 1e4e 1B82      		std Y+3,__zero_reg__
 4524 1e50 00C0      		rjmp .L109
 4525               	.L110:
1723:lp_solve_5.5/colamd/colamd.c ****     {
1724:lp_solve_5.5/colamd/colamd.c **** 	Row [row].shared2.mark = 0 ;
 4526               		.loc 1 1724 0 discriminator 3
 4527 1e52 8B81      		ldd r24,Y+3
 4528 1e54 9C81      		ldd r25,Y+4
 4529 1e56 880F      		lsl r24
 4530 1e58 991F      		rol r25
 4531 1e5a 880F      		lsl r24
 4532 1e5c 991F      		rol r25
 4533 1e5e 880F      		lsl r24
 4534 1e60 991F      		rol r25
 4535 1e62 2B89      		ldd r18,Y+19
 4536 1e64 3C89      		ldd r19,Y+20
 4537 1e66 820F      		add r24,r18
 4538 1e68 931F      		adc r25,r19
 4539 1e6a FC01      		movw r30,r24
 4540 1e6c 1782      		std Z+7,__zero_reg__
 4541 1e6e 1682      		std Z+6,__zero_reg__
1725:lp_solve_5.5/colamd/colamd.c **** 	Row [row].shared1.degree = Row [row].length ;
 4542               		.loc 1 1725 0 discriminator 3
 4543 1e70 8B81      		ldd r24,Y+3
 4544 1e72 9C81      		ldd r25,Y+4
 4545 1e74 880F      		lsl r24
 4546 1e76 991F      		rol r25
 4547 1e78 880F      		lsl r24
 4548 1e7a 991F      		rol r25
 4549 1e7c 880F      		lsl r24
 4550 1e7e 991F      		rol r25
 4551 1e80 2B89      		ldd r18,Y+19
 4552 1e82 3C89      		ldd r19,Y+20
 4553 1e84 820F      		add r24,r18
 4554 1e86 931F      		adc r25,r19
 4555 1e88 2B81      		ldd r18,Y+3
 4556 1e8a 3C81      		ldd r19,Y+4
 4557 1e8c 220F      		lsl r18
 4558 1e8e 331F      		rol r19
 4559 1e90 220F      		lsl r18
 4560 1e92 331F      		rol r19
 4561 1e94 220F      		lsl r18
 4562 1e96 331F      		rol r19
 4563 1e98 4B89      		ldd r20,Y+19
 4564 1e9a 5C89      		ldd r21,Y+20
 4565 1e9c 240F      		add r18,r20
 4566 1e9e 351F      		adc r19,r21
 4567 1ea0 F901      		movw r30,r18
 4568 1ea2 2281      		ldd r18,Z+2
 4569 1ea4 3381      		ldd r19,Z+3
 4570 1ea6 FC01      		movw r30,r24
 4571 1ea8 3583      		std Z+5,r19
 4572 1eaa 2483      		std Z+4,r18
1722:lp_solve_5.5/colamd/colamd.c ****     {
 4573               		.loc 1 1722 0 discriminator 3
 4574 1eac 8B81      		ldd r24,Y+3
 4575 1eae 9C81      		ldd r25,Y+4
 4576 1eb0 0196      		adiw r24,1
 4577 1eb2 9C83      		std Y+4,r25
 4578 1eb4 8B83      		std Y+3,r24
 4579               	.L109:
1722:lp_solve_5.5/colamd/colamd.c ****     {
 4580               		.loc 1 1722 0 is_stmt 0 discriminator 1
 4581 1eb6 2B81      		ldd r18,Y+3
 4582 1eb8 3C81      		ldd r19,Y+4
 4583 1eba 8F85      		ldd r24,Y+15
 4584 1ebc 9889      		ldd r25,Y+16
 4585 1ebe 2817      		cp r18,r24
 4586 1ec0 3907      		cpc r19,r25
 4587 1ec2 04F0      		brlt .L110
1726:lp_solve_5.5/colamd/colamd.c ****     }
1727:lp_solve_5.5/colamd/colamd.c **** 
1728:lp_solve_5.5/colamd/colamd.c ****     /* === See if we need to re-create columns ============================== */
1729:lp_solve_5.5/colamd/colamd.c **** 
1730:lp_solve_5.5/colamd/colamd.c ****     if (stats [COLAMD_STATUS] == COLAMD_OK_BUT_JUMBLED)
 4588               		.loc 1 1730 0 is_stmt 1
 4589 1ec4 8B8D      		ldd r24,Y+27
 4590 1ec6 9C8D      		ldd r25,Y+28
 4591 1ec8 0696      		adiw r24,6
 4592 1eca FC01      		movw r30,r24
 4593 1ecc 8081      		ld r24,Z
 4594 1ece 9181      		ldd r25,Z+1
 4595 1ed0 0197      		sbiw r24,1
 4596 1ed2 01F0      		breq .+2
 4597 1ed4 00C0      		rjmp .L111
1731:lp_solve_5.5/colamd/colamd.c ****     {
1732:lp_solve_5.5/colamd/colamd.c ****     	DEBUG0 (("colamd: reconstructing column form, matrix jumbled\n")) ;
1733:lp_solve_5.5/colamd/colamd.c **** 
1734:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
1735:lp_solve_5.5/colamd/colamd.c **** 	/* make sure column lengths are correct */
1736:lp_solve_5.5/colamd/colamd.c **** 	for (col = 0 ; col < n_col ; col++)
1737:lp_solve_5.5/colamd/colamd.c **** 	{
1738:lp_solve_5.5/colamd/colamd.c **** 	    p [col] = Col [col].length ;
1739:lp_solve_5.5/colamd/colamd.c **** 	}
1740:lp_solve_5.5/colamd/colamd.c **** 	for (row = 0 ; row < n_row ; row++)
1741:lp_solve_5.5/colamd/colamd.c **** 	{
1742:lp_solve_5.5/colamd/colamd.c **** 	    rp = &A [Row [row].start] ;
1743:lp_solve_5.5/colamd/colamd.c **** 	    rp_end = rp + Row [row].length ;
1744:lp_solve_5.5/colamd/colamd.c **** 	    while (rp < rp_end)
1745:lp_solve_5.5/colamd/colamd.c **** 	    {
1746:lp_solve_5.5/colamd/colamd.c **** 		p [*rp++]-- ;
1747:lp_solve_5.5/colamd/colamd.c **** 	    }
1748:lp_solve_5.5/colamd/colamd.c **** 	}
1749:lp_solve_5.5/colamd/colamd.c **** 	for (col = 0 ; col < n_col ; col++)
1750:lp_solve_5.5/colamd/colamd.c **** 	{
1751:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (p [col] == 0) ;
1752:lp_solve_5.5/colamd/colamd.c **** 	}
1753:lp_solve_5.5/colamd/colamd.c **** 	/* now p is all zero (different than when debugging is turned off) */
1754:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
1755:lp_solve_5.5/colamd/colamd.c **** 
1756:lp_solve_5.5/colamd/colamd.c **** 	/* === Compute col pointers ========================================= */
1757:lp_solve_5.5/colamd/colamd.c **** 
1758:lp_solve_5.5/colamd/colamd.c **** 	/* col form of the matrix starts at A [0]. */
1759:lp_solve_5.5/colamd/colamd.c **** 	/* Note, we may have a gap between the col form and the row */
1760:lp_solve_5.5/colamd/colamd.c **** 	/* form if there were duplicate entries, if so, it will be */
1761:lp_solve_5.5/colamd/colamd.c **** 	/* removed upon the first garbage collection */
1762:lp_solve_5.5/colamd/colamd.c **** 	Col [0].start = 0 ;
 4598               		.loc 1 1762 0
 4599 1ed6 8D89      		ldd r24,Y+21
 4600 1ed8 9E89      		ldd r25,Y+22
 4601 1eda FC01      		movw r30,r24
 4602 1edc 1182      		std Z+1,__zero_reg__
 4603 1ede 1082      		st Z,__zero_reg__
1763:lp_solve_5.5/colamd/colamd.c **** 	p [0] = Col [0].start ;
 4604               		.loc 1 1763 0
 4605 1ee0 8D89      		ldd r24,Y+21
 4606 1ee2 9E89      		ldd r25,Y+22
 4607 1ee4 FC01      		movw r30,r24
 4608 1ee6 2081      		ld r18,Z
 4609 1ee8 3181      		ldd r19,Z+1
 4610 1eea 898D      		ldd r24,Y+25
 4611 1eec 9A8D      		ldd r25,Y+26
 4612 1eee FC01      		movw r30,r24
 4613 1ef0 3183      		std Z+1,r19
 4614 1ef2 2083      		st Z,r18
1764:lp_solve_5.5/colamd/colamd.c **** 	for (col = 1 ; col < n_col ; col++)
 4615               		.loc 1 1764 0
 4616 1ef4 81E0      		ldi r24,lo8(1)
 4617 1ef6 90E0      		ldi r25,0
 4618 1ef8 9A83      		std Y+2,r25
 4619 1efa 8983      		std Y+1,r24
 4620 1efc 00C0      		rjmp .L112
 4621               	.L113:
1765:lp_solve_5.5/colamd/colamd.c **** 	{
1766:lp_solve_5.5/colamd/colamd.c **** 	    /* note that the lengths here are for pruned columns, i.e. */
1767:lp_solve_5.5/colamd/colamd.c **** 	    /* no duplicate row indices will exist for these columns */
1768:lp_solve_5.5/colamd/colamd.c **** 	    Col [col].start = Col [col-1].start + Col [col-1].length ;
 4622               		.loc 1 1768 0 discriminator 3
 4623 1efe 2981      		ldd r18,Y+1
 4624 1f00 3A81      		ldd r19,Y+2
 4625 1f02 C901      		movw r24,r18
 4626 1f04 880F      		lsl r24
 4627 1f06 991F      		rol r25
 4628 1f08 820F      		add r24,r18
 4629 1f0a 931F      		adc r25,r19
 4630 1f0c 880F      		lsl r24
 4631 1f0e 991F      		rol r25
 4632 1f10 880F      		lsl r24
 4633 1f12 991F      		rol r25
 4634 1f14 9C01      		movw r18,r24
 4635 1f16 8D89      		ldd r24,Y+21
 4636 1f18 9E89      		ldd r25,Y+22
 4637 1f1a AC01      		movw r20,r24
 4638 1f1c 420F      		add r20,r18
 4639 1f1e 531F      		adc r21,r19
 4640 1f20 2981      		ldd r18,Y+1
 4641 1f22 3A81      		ldd r19,Y+2
 4642 1f24 C901      		movw r24,r18
 4643 1f26 880F      		lsl r24
 4644 1f28 991F      		rol r25
 4645 1f2a 820F      		add r24,r18
 4646 1f2c 931F      		adc r25,r19
 4647 1f2e 880F      		lsl r24
 4648 1f30 991F      		rol r25
 4649 1f32 880F      		lsl r24
 4650 1f34 991F      		rol r25
 4651 1f36 0C97      		sbiw r24,12
 4652 1f38 2D89      		ldd r18,Y+21
 4653 1f3a 3E89      		ldd r19,Y+22
 4654 1f3c 820F      		add r24,r18
 4655 1f3e 931F      		adc r25,r19
 4656 1f40 FC01      		movw r30,r24
 4657 1f42 6081      		ld r22,Z
 4658 1f44 7181      		ldd r23,Z+1
 4659 1f46 2981      		ldd r18,Y+1
 4660 1f48 3A81      		ldd r19,Y+2
 4661 1f4a C901      		movw r24,r18
 4662 1f4c 880F      		lsl r24
 4663 1f4e 991F      		rol r25
 4664 1f50 820F      		add r24,r18
 4665 1f52 931F      		adc r25,r19
 4666 1f54 880F      		lsl r24
 4667 1f56 991F      		rol r25
 4668 1f58 880F      		lsl r24
 4669 1f5a 991F      		rol r25
 4670 1f5c 0C97      		sbiw r24,12
 4671 1f5e 2D89      		ldd r18,Y+21
 4672 1f60 3E89      		ldd r19,Y+22
 4673 1f62 820F      		add r24,r18
 4674 1f64 931F      		adc r25,r19
 4675 1f66 FC01      		movw r30,r24
 4676 1f68 8281      		ldd r24,Z+2
 4677 1f6a 9381      		ldd r25,Z+3
 4678 1f6c 860F      		add r24,r22
 4679 1f6e 971F      		adc r25,r23
 4680 1f70 FA01      		movw r30,r20
 4681 1f72 9183      		std Z+1,r25
 4682 1f74 8083      		st Z,r24
1769:lp_solve_5.5/colamd/colamd.c **** 	    p [col] = Col [col].start ;
 4683               		.loc 1 1769 0 discriminator 3
 4684 1f76 8981      		ldd r24,Y+1
 4685 1f78 9A81      		ldd r25,Y+2
 4686 1f7a 880F      		lsl r24
 4687 1f7c 991F      		rol r25
 4688 1f7e 298D      		ldd r18,Y+25
 4689 1f80 3A8D      		ldd r19,Y+26
 4690 1f82 A901      		movw r20,r18
 4691 1f84 480F      		add r20,r24
 4692 1f86 591F      		adc r21,r25
 4693 1f88 2981      		ldd r18,Y+1
 4694 1f8a 3A81      		ldd r19,Y+2
 4695 1f8c C901      		movw r24,r18
 4696 1f8e 880F      		lsl r24
 4697 1f90 991F      		rol r25
 4698 1f92 820F      		add r24,r18
 4699 1f94 931F      		adc r25,r19
 4700 1f96 880F      		lsl r24
 4701 1f98 991F      		rol r25
 4702 1f9a 880F      		lsl r24
 4703 1f9c 991F      		rol r25
 4704 1f9e 9C01      		movw r18,r24
 4705 1fa0 8D89      		ldd r24,Y+21
 4706 1fa2 9E89      		ldd r25,Y+22
 4707 1fa4 820F      		add r24,r18
 4708 1fa6 931F      		adc r25,r19
 4709 1fa8 FC01      		movw r30,r24
 4710 1faa 8081      		ld r24,Z
 4711 1fac 9181      		ldd r25,Z+1
 4712 1fae FA01      		movw r30,r20
 4713 1fb0 9183      		std Z+1,r25
 4714 1fb2 8083      		st Z,r24
1764:lp_solve_5.5/colamd/colamd.c **** 	for (col = 1 ; col < n_col ; col++)
 4715               		.loc 1 1764 0 discriminator 3
 4716 1fb4 8981      		ldd r24,Y+1
 4717 1fb6 9A81      		ldd r25,Y+2
 4718 1fb8 0196      		adiw r24,1
 4719 1fba 9A83      		std Y+2,r25
 4720 1fbc 8983      		std Y+1,r24
 4721               	.L112:
1764:lp_solve_5.5/colamd/colamd.c **** 	for (col = 1 ; col < n_col ; col++)
 4722               		.loc 1 1764 0 is_stmt 0 discriminator 1
 4723 1fbe 2981      		ldd r18,Y+1
 4724 1fc0 3A81      		ldd r19,Y+2
 4725 1fc2 8989      		ldd r24,Y+17
 4726 1fc4 9A89      		ldd r25,Y+18
 4727 1fc6 2817      		cp r18,r24
 4728 1fc8 3907      		cpc r19,r25
 4729 1fca 04F4      		brge .+2
 4730 1fcc 00C0      		rjmp .L113
1770:lp_solve_5.5/colamd/colamd.c **** 	}
1771:lp_solve_5.5/colamd/colamd.c **** 
1772:lp_solve_5.5/colamd/colamd.c **** 	/* === Re-create col form =========================================== */
1773:lp_solve_5.5/colamd/colamd.c **** 
1774:lp_solve_5.5/colamd/colamd.c **** 	for (row = 0 ; row < n_row ; row++)
 4731               		.loc 1 1774 0 is_stmt 1
 4732 1fce 1C82      		std Y+4,__zero_reg__
 4733 1fd0 1B82      		std Y+3,__zero_reg__
 4734 1fd2 00C0      		rjmp .L114
 4735               	.L117:
1775:lp_solve_5.5/colamd/colamd.c **** 	{
1776:lp_solve_5.5/colamd/colamd.c **** 	    rp = &A [Row [row].start] ;
 4736               		.loc 1 1776 0
 4737 1fd4 8B81      		ldd r24,Y+3
 4738 1fd6 9C81      		ldd r25,Y+4
 4739 1fd8 880F      		lsl r24
 4740 1fda 991F      		rol r25
 4741 1fdc 880F      		lsl r24
 4742 1fde 991F      		rol r25
 4743 1fe0 880F      		lsl r24
 4744 1fe2 991F      		rol r25
 4745 1fe4 2B89      		ldd r18,Y+19
 4746 1fe6 3C89      		ldd r19,Y+20
 4747 1fe8 820F      		add r24,r18
 4748 1fea 931F      		adc r25,r19
 4749 1fec FC01      		movw r30,r24
 4750 1fee 8081      		ld r24,Z
 4751 1ff0 9181      		ldd r25,Z+1
 4752 1ff2 880F      		lsl r24
 4753 1ff4 991F      		rol r25
 4754 1ff6 2F89      		ldd r18,Y+23
 4755 1ff8 388D      		ldd r19,Y+24
 4756 1ffa 820F      		add r24,r18
 4757 1ffc 931F      		adc r25,r19
 4758 1ffe 9887      		std Y+8,r25
 4759 2000 8F83      		std Y+7,r24
1777:lp_solve_5.5/colamd/colamd.c **** 	    rp_end = rp + Row [row].length ;
 4760               		.loc 1 1777 0
 4761 2002 8B81      		ldd r24,Y+3
 4762 2004 9C81      		ldd r25,Y+4
 4763 2006 880F      		lsl r24
 4764 2008 991F      		rol r25
 4765 200a 880F      		lsl r24
 4766 200c 991F      		rol r25
 4767 200e 880F      		lsl r24
 4768 2010 991F      		rol r25
 4769 2012 2B89      		ldd r18,Y+19
 4770 2014 3C89      		ldd r19,Y+20
 4771 2016 820F      		add r24,r18
 4772 2018 931F      		adc r25,r19
 4773 201a FC01      		movw r30,r24
 4774 201c 8281      		ldd r24,Z+2
 4775 201e 9381      		ldd r25,Z+3
 4776 2020 880F      		lsl r24
 4777 2022 991F      		rol r25
 4778 2024 2F81      		ldd r18,Y+7
 4779 2026 3885      		ldd r19,Y+8
 4780 2028 820F      		add r24,r18
 4781 202a 931F      		adc r25,r19
 4782 202c 9E87      		std Y+14,r25
 4783 202e 8D87      		std Y+13,r24
1778:lp_solve_5.5/colamd/colamd.c **** 	    while (rp < rp_end)
 4784               		.loc 1 1778 0
 4785 2030 00C0      		rjmp .L115
 4786               	.L116:
1779:lp_solve_5.5/colamd/colamd.c **** 	    {
1780:lp_solve_5.5/colamd/colamd.c **** 		A [(p [*rp++])++] = row ;
 4787               		.loc 1 1780 0
 4788 2032 8F81      		ldd r24,Y+7
 4789 2034 9885      		ldd r25,Y+8
 4790 2036 9C01      		movw r18,r24
 4791 2038 2E5F      		subi r18,-2
 4792 203a 3F4F      		sbci r19,-1
 4793 203c 3887      		std Y+8,r19
 4794 203e 2F83      		std Y+7,r18
 4795 2040 FC01      		movw r30,r24
 4796 2042 8081      		ld r24,Z
 4797 2044 9181      		ldd r25,Z+1
 4798 2046 880F      		lsl r24
 4799 2048 991F      		rol r25
 4800 204a 298D      		ldd r18,Y+25
 4801 204c 3A8D      		ldd r19,Y+26
 4802 204e 820F      		add r24,r18
 4803 2050 931F      		adc r25,r19
 4804 2052 FC01      		movw r30,r24
 4805 2054 2081      		ld r18,Z
 4806 2056 3181      		ldd r19,Z+1
 4807 2058 A901      		movw r20,r18
 4808 205a 4F5F      		subi r20,-1
 4809 205c 5F4F      		sbci r21,-1
 4810 205e FC01      		movw r30,r24
 4811 2060 5183      		std Z+1,r21
 4812 2062 4083      		st Z,r20
 4813 2064 C901      		movw r24,r18
 4814 2066 880F      		lsl r24
 4815 2068 991F      		rol r25
 4816 206a 2F89      		ldd r18,Y+23
 4817 206c 388D      		ldd r19,Y+24
 4818 206e 820F      		add r24,r18
 4819 2070 931F      		adc r25,r19
 4820 2072 2B81      		ldd r18,Y+3
 4821 2074 3C81      		ldd r19,Y+4
 4822 2076 FC01      		movw r30,r24
 4823 2078 3183      		std Z+1,r19
 4824 207a 2083      		st Z,r18
 4825               	.L115:
1778:lp_solve_5.5/colamd/colamd.c **** 	    while (rp < rp_end)
 4826               		.loc 1 1778 0
 4827 207c 2F81      		ldd r18,Y+7
 4828 207e 3885      		ldd r19,Y+8
 4829 2080 8D85      		ldd r24,Y+13
 4830 2082 9E85      		ldd r25,Y+14
 4831 2084 2817      		cp r18,r24
 4832 2086 3907      		cpc r19,r25
 4833 2088 00F0      		brlo .L116
1774:lp_solve_5.5/colamd/colamd.c **** 	{
 4834               		.loc 1 1774 0 discriminator 2
 4835 208a 8B81      		ldd r24,Y+3
 4836 208c 9C81      		ldd r25,Y+4
 4837 208e 0196      		adiw r24,1
 4838 2090 9C83      		std Y+4,r25
 4839 2092 8B83      		std Y+3,r24
 4840               	.L114:
1774:lp_solve_5.5/colamd/colamd.c **** 	{
 4841               		.loc 1 1774 0 is_stmt 0 discriminator 1
 4842 2094 2B81      		ldd r18,Y+3
 4843 2096 3C81      		ldd r19,Y+4
 4844 2098 8F85      		ldd r24,Y+15
 4845 209a 9889      		ldd r25,Y+16
 4846 209c 2817      		cp r18,r24
 4847 209e 3907      		cpc r19,r25
 4848 20a0 04F4      		brge .+2
 4849 20a2 00C0      		rjmp .L117
 4850               	.L111:
1781:lp_solve_5.5/colamd/colamd.c **** 	    }
1782:lp_solve_5.5/colamd/colamd.c **** 	}
1783:lp_solve_5.5/colamd/colamd.c ****     }
1784:lp_solve_5.5/colamd/colamd.c **** 
1785:lp_solve_5.5/colamd/colamd.c ****     /* === Done.  Matrix is not (or no longer) jumbled ====================== */
1786:lp_solve_5.5/colamd/colamd.c **** 
1787:lp_solve_5.5/colamd/colamd.c ****     return (TRUE) ;
 4851               		.loc 1 1787 0 is_stmt 1
 4852 20a4 81E0      		ldi r24,lo8(1)
 4853 20a6 90E0      		ldi r25,0
 4854               	.L83:
 4855               	/* epilogue start */
1788:lp_solve_5.5/colamd/colamd.c **** }
 4856               		.loc 1 1788 0
 4857 20a8 6C96      		adiw r28,28
 4858 20aa 0FB6      		in __tmp_reg__,__SREG__
 4859 20ac F894      		cli
 4860 20ae DEBF      		out __SP_H__,r29
 4861 20b0 0FBE      		out __SREG__,__tmp_reg__
 4862 20b2 CDBF      		out __SP_L__,r28
 4863 20b4 DF91      		pop r29
 4864 20b6 CF91      		pop r28
 4865 20b8 1F91      		pop r17
 4866 20ba 0F91      		pop r16
 4867 20bc FF90      		pop r15
 4868 20be EF90      		pop r14
 4869 20c0 DF90      		pop r13
 4870 20c2 CF90      		pop r12
 4871 20c4 0895      		ret
 4872               		.cfi_endproc
 4873               	.LFE11:
 4875               	.global	__ltsf2
 4876               	.global	__fixsfsi
 4878               	init_scoring:
 4879               	.LFB12:
1789:lp_solve_5.5/colamd/colamd.c **** 
1790:lp_solve_5.5/colamd/colamd.c **** 
1791:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
1792:lp_solve_5.5/colamd/colamd.c **** /* === init_scoring ========================================================= */
1793:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
1794:lp_solve_5.5/colamd/colamd.c **** 
1795:lp_solve_5.5/colamd/colamd.c **** /*
1796:lp_solve_5.5/colamd/colamd.c ****     Kills dense or empty columns and rows, calculates an initial score for
1797:lp_solve_5.5/colamd/colamd.c ****     each column, and places all columns in the degree lists.  Not user-callable.
1798:lp_solve_5.5/colamd/colamd.c **** */
1799:lp_solve_5.5/colamd/colamd.c **** 
1800:lp_solve_5.5/colamd/colamd.c **** PRIVATE void init_scoring
1801:lp_solve_5.5/colamd/colamd.c **** (
1802:lp_solve_5.5/colamd/colamd.c ****     /* === Parameters ======================================================= */
1803:lp_solve_5.5/colamd/colamd.c **** 
1804:lp_solve_5.5/colamd/colamd.c ****     int n_row,			/* number of rows of A */
1805:lp_solve_5.5/colamd/colamd.c ****     int n_col,			/* number of columns of A */
1806:lp_solve_5.5/colamd/colamd.c ****     Colamd_Row Row [],		/* of size n_row+1 */
1807:lp_solve_5.5/colamd/colamd.c ****     Colamd_Col Col [],		/* of size n_col+1 */
1808:lp_solve_5.5/colamd/colamd.c ****     int A [],			/* column form and row form of A */
1809:lp_solve_5.5/colamd/colamd.c ****     int head [],		/* of size n_col+1 */
1810:lp_solve_5.5/colamd/colamd.c ****     double knobs [COLAMD_KNOBS],/* parameters */
1811:lp_solve_5.5/colamd/colamd.c ****     int *p_n_row2,		/* number of non-dense, non-empty rows */
1812:lp_solve_5.5/colamd/colamd.c ****     int *p_n_col2,		/* number of non-dense, non-empty columns */
1813:lp_solve_5.5/colamd/colamd.c ****     int *p_max_deg		/* maximum row degree */
1814:lp_solve_5.5/colamd/colamd.c **** )
1815:lp_solve_5.5/colamd/colamd.c **** {
 4880               		.loc 1 1815 0
 4881               		.cfi_startproc
 4882 20c6 8F92      		push r8
 4883               	.LCFI52:
 4884               		.cfi_def_cfa_offset 3
 4885               		.cfi_offset 8, -2
 4886 20c8 9F92      		push r9
 4887               	.LCFI53:
 4888               		.cfi_def_cfa_offset 4
 4889               		.cfi_offset 9, -3
 4890 20ca AF92      		push r10
 4891               	.LCFI54:
 4892               		.cfi_def_cfa_offset 5
 4893               		.cfi_offset 10, -4
 4894 20cc BF92      		push r11
 4895               	.LCFI55:
 4896               		.cfi_def_cfa_offset 6
 4897               		.cfi_offset 11, -5
 4898 20ce CF92      		push r12
 4899               	.LCFI56:
 4900               		.cfi_def_cfa_offset 7
 4901               		.cfi_offset 12, -6
 4902 20d0 DF92      		push r13
 4903               	.LCFI57:
 4904               		.cfi_def_cfa_offset 8
 4905               		.cfi_offset 13, -7
 4906 20d2 EF92      		push r14
 4907               	.LCFI58:
 4908               		.cfi_def_cfa_offset 9
 4909               		.cfi_offset 14, -8
 4910 20d4 FF92      		push r15
 4911               	.LCFI59:
 4912               		.cfi_def_cfa_offset 10
 4913               		.cfi_offset 15, -9
 4914 20d6 0F93      		push r16
 4915               	.LCFI60:
 4916               		.cfi_def_cfa_offset 11
 4917               		.cfi_offset 16, -10
 4918 20d8 1F93      		push r17
 4919               	.LCFI61:
 4920               		.cfi_def_cfa_offset 12
 4921               		.cfi_offset 17, -11
 4922 20da CF93      		push r28
 4923               	.LCFI62:
 4924               		.cfi_def_cfa_offset 13
 4925               		.cfi_offset 28, -12
 4926 20dc DF93      		push r29
 4927               	.LCFI63:
 4928               		.cfi_def_cfa_offset 14
 4929               		.cfi_offset 29, -13
 4930 20de CDB7      		in r28,__SP_L__
 4931 20e0 DEB7      		in r29,__SP_H__
 4932               	.LCFI64:
 4933               		.cfi_def_cfa_register 28
 4934 20e2 E297      		sbiw r28,50
 4935               	.LCFI65:
 4936               		.cfi_def_cfa_offset 64
 4937 20e4 0FB6      		in __tmp_reg__,__SREG__
 4938 20e6 F894      		cli
 4939 20e8 DEBF      		out __SP_H__,r29
 4940 20ea 0FBE      		out __SREG__,__tmp_reg__
 4941 20ec CDBF      		out __SP_L__,r28
 4942               	/* prologue: function */
 4943               	/* frame size = 50 */
 4944               	/* stack size = 62 */
 4945               	.L__stack_usage = 62
 4946 20ee 9AA3      		std Y+34,r25
 4947 20f0 89A3      		std Y+33,r24
 4948 20f2 7CA3      		std Y+36,r23
 4949 20f4 6BA3      		std Y+35,r22
 4950 20f6 5EA3      		std Y+38,r21
 4951 20f8 4DA3      		std Y+37,r20
 4952 20fa 38A7      		std Y+40,r19
 4953 20fc 2FA3      		std Y+39,r18
 4954 20fe 1AA7      		std Y+42,r17
 4955 2100 09A7      		std Y+41,r16
 4956 2102 FCA6      		std Y+44,r15
 4957 2104 EBA6      		std Y+43,r14
 4958 2106 DEA6      		std Y+46,r13
 4959 2108 CDA6      		std Y+45,r12
 4960 210a B8AA      		std Y+48,r11
 4961 210c AFA6      		std Y+47,r10
 4962 210e 9AAA      		std Y+50,r9
 4963 2110 89AA      		std Y+49,r8
1816:lp_solve_5.5/colamd/colamd.c ****     /* === Local variables ================================================== */
1817:lp_solve_5.5/colamd/colamd.c **** 
1818:lp_solve_5.5/colamd/colamd.c ****     int c ;         /* a column index */
1819:lp_solve_5.5/colamd/colamd.c ****     int r, row ;		/* a row index */
1820:lp_solve_5.5/colamd/colamd.c ****     int *cp ;		    /* a column pointer */
1821:lp_solve_5.5/colamd/colamd.c ****     int deg ;	      /* degree of a row or column */
1822:lp_solve_5.5/colamd/colamd.c ****     int *cp_end ;	  /* a pointer to the end of a column */
1823:lp_solve_5.5/colamd/colamd.c ****     int *new_cp ;	  /* new column pointer */
1824:lp_solve_5.5/colamd/colamd.c ****     int col_length ;		/* length of pruned column */
1825:lp_solve_5.5/colamd/colamd.c ****     int score ;	    /* current column score */
1826:lp_solve_5.5/colamd/colamd.c ****     int n_col2 ;    /* number of non-dense, non-empty columns */
1827:lp_solve_5.5/colamd/colamd.c ****     int n_row2 ;    /* number of non-dense, non-empty rows */
1828:lp_solve_5.5/colamd/colamd.c ****     int dense_row_count ;	/* remove rows with more entries than this */
1829:lp_solve_5.5/colamd/colamd.c ****     int dense_col_count ;	/* remove cols with more entries than this */
1830:lp_solve_5.5/colamd/colamd.c ****     int min_score ; /* smallest column score */
1831:lp_solve_5.5/colamd/colamd.c ****     int max_deg ;	  /* maximum row degree */
1832:lp_solve_5.5/colamd/colamd.c ****     int next_col ;  /* Used to add to degree list.*/
1833:lp_solve_5.5/colamd/colamd.c **** 
1834:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
1835:lp_solve_5.5/colamd/colamd.c ****     int debug_count ;		/* debug only. */
1836:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
1837:lp_solve_5.5/colamd/colamd.c **** 
1838:lp_solve_5.5/colamd/colamd.c ****     /* === Extract knobs ==================================================== */
1839:lp_solve_5.5/colamd/colamd.c **** 
1840:lp_solve_5.5/colamd/colamd.c ****     dense_row_count = (int) MAX (0, MIN (knobs [COLAMD_DENSE_ROW] * n_col, n_col)) ;
 4964               		.loc 1 1840 0
 4965 2112 8DA5      		ldd r24,Y+45
 4966 2114 9EA5      		ldd r25,Y+46
 4967 2116 FC01      		movw r30,r24
 4968 2118 C080      		ld r12,Z
 4969 211a D180      		ldd r13,Z+1
 4970 211c E280      		ldd r14,Z+2
 4971 211e F380      		ldd r15,Z+3
 4972 2120 8BA1      		ldd r24,Y+35
 4973 2122 9CA1      		ldd r25,Y+36
 4974 2124 092E      		mov __tmp_reg__,r25
 4975 2126 000C      		lsl r0
 4976 2128 AA0B      		sbc r26,r26
 4977 212a BB0B      		sbc r27,r27
 4978 212c BC01      		movw r22,r24
 4979 212e CD01      		movw r24,r26
 4980 2130 0E94 0000 		call __floatsisf
 4981 2134 DC01      		movw r26,r24
 4982 2136 CB01      		movw r24,r22
 4983 2138 9C01      		movw r18,r24
 4984 213a AD01      		movw r20,r26
 4985 213c C701      		movw r24,r14
 4986 213e B601      		movw r22,r12
 4987 2140 0E94 0000 		call __mulsf3
 4988 2144 DC01      		movw r26,r24
 4989 2146 CB01      		movw r24,r22
 4990 2148 6C01      		movw r12,r24
 4991 214a 7D01      		movw r14,r26
 4992 214c 8BA1      		ldd r24,Y+35
 4993 214e 9CA1      		ldd r25,Y+36
 4994 2150 092E      		mov __tmp_reg__,r25
 4995 2152 000C      		lsl r0
 4996 2154 AA0B      		sbc r26,r26
 4997 2156 BB0B      		sbc r27,r27
 4998 2158 BC01      		movw r22,r24
 4999 215a CD01      		movw r24,r26
 5000 215c 0E94 0000 		call __floatsisf
 5001 2160 DC01      		movw r26,r24
 5002 2162 CB01      		movw r24,r22
 5003 2164 9C01      		movw r18,r24
 5004 2166 AD01      		movw r20,r26
 5005 2168 C701      		movw r24,r14
 5006 216a B601      		movw r22,r12
 5007 216c 0E94 0000 		call __ltsf2
 5008 2170 8823      		tst r24
 5009 2172 04F4      		brge .L174
 5010               		.loc 1 1840 0 is_stmt 0 discriminator 1
 5011 2174 8DA5      		ldd r24,Y+45
 5012 2176 9EA5      		ldd r25,Y+46
 5013 2178 FC01      		movw r30,r24
 5014 217a C080      		ld r12,Z
 5015 217c D180      		ldd r13,Z+1
 5016 217e E280      		ldd r14,Z+2
 5017 2180 F380      		ldd r15,Z+3
 5018 2182 8BA1      		ldd r24,Y+35
 5019 2184 9CA1      		ldd r25,Y+36
 5020 2186 092E      		mov __tmp_reg__,r25
 5021 2188 000C      		lsl r0
 5022 218a AA0B      		sbc r26,r26
 5023 218c BB0B      		sbc r27,r27
 5024 218e BC01      		movw r22,r24
 5025 2190 CD01      		movw r24,r26
 5026 2192 0E94 0000 		call __floatsisf
 5027 2196 DC01      		movw r26,r24
 5028 2198 CB01      		movw r24,r22
 5029 219a 9C01      		movw r18,r24
 5030 219c AD01      		movw r20,r26
 5031 219e C701      		movw r24,r14
 5032 21a0 B601      		movw r22,r12
 5033 21a2 0E94 0000 		call __mulsf3
 5034 21a6 DC01      		movw r26,r24
 5035 21a8 CB01      		movw r24,r22
 5036 21aa 11E0      		ldi r17,lo8(1)
 5037 21ac 20E0      		ldi r18,0
 5038 21ae 30E0      		ldi r19,0
 5039 21b0 A901      		movw r20,r18
 5040 21b2 BC01      		movw r22,r24
 5041 21b4 CD01      		movw r24,r26
 5042 21b6 0E94 0000 		call __ltsf2
 5043 21ba 8823      		tst r24
 5044 21bc 04F0      		brlt .L122
 5045 21be 10E0      		ldi r17,0
 5046 21c0 00C0      		rjmp .L122
 5047               	.L174:
 5048               		.loc 1 1840 0 discriminator 2
 5049 21c2 8BA1      		ldd r24,Y+35
 5050 21c4 9CA1      		ldd r25,Y+36
 5051 21c6 092E      		mov __tmp_reg__,r25
 5052 21c8 000C      		lsl r0
 5053 21ca AA0B      		sbc r26,r26
 5054 21cc BB0B      		sbc r27,r27
 5055 21ce BC01      		movw r22,r24
 5056 21d0 CD01      		movw r24,r26
 5057 21d2 0E94 0000 		call __floatsisf
 5058 21d6 DC01      		movw r26,r24
 5059 21d8 CB01      		movw r24,r22
 5060 21da 11E0      		ldi r17,lo8(1)
 5061 21dc 20E0      		ldi r18,0
 5062 21de 30E0      		ldi r19,0
 5063 21e0 A901      		movw r20,r18
 5064 21e2 BC01      		movw r22,r24
 5065 21e4 CD01      		movw r24,r26
 5066 21e6 0E94 0000 		call __ltsf2
 5067 21ea 8823      		tst r24
 5068 21ec 04F0      		brlt .L122
 5069 21ee 10E0      		ldi r17,0
 5070               	.L122:
 5071               		.loc 1 1840 0 discriminator 4
 5072 21f0 1123      		tst r17
 5073 21f2 01F0      		breq .L124
 5074               		.loc 1 1840 0 discriminator 5
 5075 21f4 80E0      		ldi r24,0
 5076 21f6 90E0      		ldi r25,0
 5077 21f8 00C0      		rjmp .L125
 5078               	.L124:
 5079               		.loc 1 1840 0 discriminator 6
 5080 21fa 8DA5      		ldd r24,Y+45
 5081 21fc 9EA5      		ldd r25,Y+46
 5082 21fe FC01      		movw r30,r24
 5083 2200 C080      		ld r12,Z
 5084 2202 D180      		ldd r13,Z+1
 5085 2204 E280      		ldd r14,Z+2
 5086 2206 F380      		ldd r15,Z+3
 5087 2208 8BA1      		ldd r24,Y+35
 5088 220a 9CA1      		ldd r25,Y+36
 5089 220c 092E      		mov __tmp_reg__,r25
 5090 220e 000C      		lsl r0
 5091 2210 AA0B      		sbc r26,r26
 5092 2212 BB0B      		sbc r27,r27
 5093 2214 BC01      		movw r22,r24
 5094 2216 CD01      		movw r24,r26
 5095 2218 0E94 0000 		call __floatsisf
 5096 221c DC01      		movw r26,r24
 5097 221e CB01      		movw r24,r22
 5098 2220 9C01      		movw r18,r24
 5099 2222 AD01      		movw r20,r26
 5100 2224 C701      		movw r24,r14
 5101 2226 B601      		movw r22,r12
 5102 2228 0E94 0000 		call __mulsf3
 5103 222c DC01      		movw r26,r24
 5104 222e CB01      		movw r24,r22
 5105 2230 6C01      		movw r12,r24
 5106 2232 7D01      		movw r14,r26
 5107 2234 8BA1      		ldd r24,Y+35
 5108 2236 9CA1      		ldd r25,Y+36
 5109 2238 092E      		mov __tmp_reg__,r25
 5110 223a 000C      		lsl r0
 5111 223c AA0B      		sbc r26,r26
 5112 223e BB0B      		sbc r27,r27
 5113 2240 BC01      		movw r22,r24
 5114 2242 CD01      		movw r24,r26
 5115 2244 0E94 0000 		call __floatsisf
 5116 2248 DC01      		movw r26,r24
 5117 224a CB01      		movw r24,r22
 5118 224c 9C01      		movw r18,r24
 5119 224e AD01      		movw r20,r26
 5120 2250 C701      		movw r24,r14
 5121 2252 B601      		movw r22,r12
 5122 2254 0E94 0000 		call __ltsf2
 5123 2258 8823      		tst r24
 5124 225a 04F4      		brge .L175
 5125               		.loc 1 1840 0 discriminator 8
 5126 225c 8DA5      		ldd r24,Y+45
 5127 225e 9EA5      		ldd r25,Y+46
 5128 2260 FC01      		movw r30,r24
 5129 2262 C080      		ld r12,Z
 5130 2264 D180      		ldd r13,Z+1
 5131 2266 E280      		ldd r14,Z+2
 5132 2268 F380      		ldd r15,Z+3
 5133 226a 8BA1      		ldd r24,Y+35
 5134 226c 9CA1      		ldd r25,Y+36
 5135 226e 092E      		mov __tmp_reg__,r25
 5136 2270 000C      		lsl r0
 5137 2272 AA0B      		sbc r26,r26
 5138 2274 BB0B      		sbc r27,r27
 5139 2276 BC01      		movw r22,r24
 5140 2278 CD01      		movw r24,r26
 5141 227a 0E94 0000 		call __floatsisf
 5142 227e DC01      		movw r26,r24
 5143 2280 CB01      		movw r24,r22
 5144 2282 9C01      		movw r18,r24
 5145 2284 AD01      		movw r20,r26
 5146 2286 C701      		movw r24,r14
 5147 2288 B601      		movw r22,r12
 5148 228a 0E94 0000 		call __mulsf3
 5149 228e DC01      		movw r26,r24
 5150 2290 CB01      		movw r24,r22
 5151 2292 BC01      		movw r22,r24
 5152 2294 CD01      		movw r24,r26
 5153 2296 0E94 0000 		call __fixsfsi
 5154 229a DC01      		movw r26,r24
 5155 229c CB01      		movw r24,r22
 5156 229e 00C0      		rjmp .L125
 5157               	.L175:
 5158               		.loc 1 1840 0 discriminator 9
 5159 22a0 8BA1      		ldd r24,Y+35
 5160 22a2 9CA1      		ldd r25,Y+36
 5161 22a4 092E      		mov __tmp_reg__,r25
 5162 22a6 000C      		lsl r0
 5163 22a8 AA0B      		sbc r26,r26
 5164 22aa BB0B      		sbc r27,r27
 5165 22ac BC01      		movw r22,r24
 5166 22ae CD01      		movw r24,r26
 5167 22b0 0E94 0000 		call __floatsisf
 5168 22b4 DC01      		movw r26,r24
 5169 22b6 CB01      		movw r24,r22
 5170 22b8 BC01      		movw r22,r24
 5171 22ba CD01      		movw r24,r26
 5172 22bc 0E94 0000 		call __fixsfsi
 5173 22c0 DC01      		movw r26,r24
 5174 22c2 CB01      		movw r24,r22
 5175               	.L125:
 5176               		.loc 1 1840 0 discriminator 12
 5177 22c4 9C8B      		std Y+20,r25
 5178 22c6 8B8B      		std Y+19,r24
1841:lp_solve_5.5/colamd/colamd.c ****     dense_col_count = (int) MAX (0, MIN (knobs [COLAMD_DENSE_COL] * n_row, n_row)) ;
 5179               		.loc 1 1841 0 is_stmt 1 discriminator 12
 5180 22c8 8DA5      		ldd r24,Y+45
 5181 22ca 9EA5      		ldd r25,Y+46
 5182 22cc 0496      		adiw r24,4
 5183 22ce FC01      		movw r30,r24
 5184 22d0 C080      		ld r12,Z
 5185 22d2 D180      		ldd r13,Z+1
 5186 22d4 E280      		ldd r14,Z+2
 5187 22d6 F380      		ldd r15,Z+3
 5188 22d8 89A1      		ldd r24,Y+33
 5189 22da 9AA1      		ldd r25,Y+34
 5190 22dc 092E      		mov __tmp_reg__,r25
 5191 22de 000C      		lsl r0
 5192 22e0 AA0B      		sbc r26,r26
 5193 22e2 BB0B      		sbc r27,r27
 5194 22e4 BC01      		movw r22,r24
 5195 22e6 CD01      		movw r24,r26
 5196 22e8 0E94 0000 		call __floatsisf
 5197 22ec DC01      		movw r26,r24
 5198 22ee CB01      		movw r24,r22
 5199 22f0 9C01      		movw r18,r24
 5200 22f2 AD01      		movw r20,r26
 5201 22f4 C701      		movw r24,r14
 5202 22f6 B601      		movw r22,r12
 5203 22f8 0E94 0000 		call __mulsf3
 5204 22fc DC01      		movw r26,r24
 5205 22fe CB01      		movw r24,r22
 5206 2300 6C01      		movw r12,r24
 5207 2302 7D01      		movw r14,r26
 5208 2304 89A1      		ldd r24,Y+33
 5209 2306 9AA1      		ldd r25,Y+34
 5210 2308 092E      		mov __tmp_reg__,r25
 5211 230a 000C      		lsl r0
 5212 230c AA0B      		sbc r26,r26
 5213 230e BB0B      		sbc r27,r27
 5214 2310 BC01      		movw r22,r24
 5215 2312 CD01      		movw r24,r26
 5216 2314 0E94 0000 		call __floatsisf
 5217 2318 DC01      		movw r26,r24
 5218 231a CB01      		movw r24,r22
 5219 231c 9C01      		movw r18,r24
 5220 231e AD01      		movw r20,r26
 5221 2320 C701      		movw r24,r14
 5222 2322 B601      		movw r22,r12
 5223 2324 0E94 0000 		call __ltsf2
 5224 2328 8823      		tst r24
 5225 232a 04F4      		brge .L176
 5226               		.loc 1 1841 0 is_stmt 0 discriminator 1
 5227 232c 8DA5      		ldd r24,Y+45
 5228 232e 9EA5      		ldd r25,Y+46
 5229 2330 0496      		adiw r24,4
 5230 2332 FC01      		movw r30,r24
 5231 2334 C080      		ld r12,Z
 5232 2336 D180      		ldd r13,Z+1
 5233 2338 E280      		ldd r14,Z+2
 5234 233a F380      		ldd r15,Z+3
 5235 233c 89A1      		ldd r24,Y+33
 5236 233e 9AA1      		ldd r25,Y+34
 5237 2340 092E      		mov __tmp_reg__,r25
 5238 2342 000C      		lsl r0
 5239 2344 AA0B      		sbc r26,r26
 5240 2346 BB0B      		sbc r27,r27
 5241 2348 BC01      		movw r22,r24
 5242 234a CD01      		movw r24,r26
 5243 234c 0E94 0000 		call __floatsisf
 5244 2350 DC01      		movw r26,r24
 5245 2352 CB01      		movw r24,r22
 5246 2354 9C01      		movw r18,r24
 5247 2356 AD01      		movw r20,r26
 5248 2358 C701      		movw r24,r14
 5249 235a B601      		movw r22,r12
 5250 235c 0E94 0000 		call __mulsf3
 5251 2360 DC01      		movw r26,r24
 5252 2362 CB01      		movw r24,r22
 5253 2364 11E0      		ldi r17,lo8(1)
 5254 2366 20E0      		ldi r18,0
 5255 2368 30E0      		ldi r19,0
 5256 236a A901      		movw r20,r18
 5257 236c BC01      		movw r22,r24
 5258 236e CD01      		movw r24,r26
 5259 2370 0E94 0000 		call __ltsf2
 5260 2374 8823      		tst r24
 5261 2376 04F0      		brlt .L132
 5262 2378 10E0      		ldi r17,0
 5263 237a 00C0      		rjmp .L132
 5264               	.L176:
 5265               		.loc 1 1841 0 discriminator 2
 5266 237c 89A1      		ldd r24,Y+33
 5267 237e 9AA1      		ldd r25,Y+34
 5268 2380 092E      		mov __tmp_reg__,r25
 5269 2382 000C      		lsl r0
 5270 2384 AA0B      		sbc r26,r26
 5271 2386 BB0B      		sbc r27,r27
 5272 2388 BC01      		movw r22,r24
 5273 238a CD01      		movw r24,r26
 5274 238c 0E94 0000 		call __floatsisf
 5275 2390 DC01      		movw r26,r24
 5276 2392 CB01      		movw r24,r22
 5277 2394 11E0      		ldi r17,lo8(1)
 5278 2396 20E0      		ldi r18,0
 5279 2398 30E0      		ldi r19,0
 5280 239a A901      		movw r20,r18
 5281 239c BC01      		movw r22,r24
 5282 239e CD01      		movw r24,r26
 5283 23a0 0E94 0000 		call __ltsf2
 5284 23a4 8823      		tst r24
 5285 23a6 04F0      		brlt .L132
 5286 23a8 10E0      		ldi r17,0
 5287               	.L132:
 5288               		.loc 1 1841 0 discriminator 4
 5289 23aa 1123      		tst r17
 5290 23ac 01F0      		breq .L134
 5291               		.loc 1 1841 0 discriminator 5
 5292 23ae 80E0      		ldi r24,0
 5293 23b0 90E0      		ldi r25,0
 5294 23b2 00C0      		rjmp .L135
 5295               	.L134:
 5296               		.loc 1 1841 0 discriminator 6
 5297 23b4 8DA5      		ldd r24,Y+45
 5298 23b6 9EA5      		ldd r25,Y+46
 5299 23b8 0496      		adiw r24,4
 5300 23ba FC01      		movw r30,r24
 5301 23bc C080      		ld r12,Z
 5302 23be D180      		ldd r13,Z+1
 5303 23c0 E280      		ldd r14,Z+2
 5304 23c2 F380      		ldd r15,Z+3
 5305 23c4 89A1      		ldd r24,Y+33
 5306 23c6 9AA1      		ldd r25,Y+34
 5307 23c8 092E      		mov __tmp_reg__,r25
 5308 23ca 000C      		lsl r0
 5309 23cc AA0B      		sbc r26,r26
 5310 23ce BB0B      		sbc r27,r27
 5311 23d0 BC01      		movw r22,r24
 5312 23d2 CD01      		movw r24,r26
 5313 23d4 0E94 0000 		call __floatsisf
 5314 23d8 DC01      		movw r26,r24
 5315 23da CB01      		movw r24,r22
 5316 23dc 9C01      		movw r18,r24
 5317 23de AD01      		movw r20,r26
 5318 23e0 C701      		movw r24,r14
 5319 23e2 B601      		movw r22,r12
 5320 23e4 0E94 0000 		call __mulsf3
 5321 23e8 DC01      		movw r26,r24
 5322 23ea CB01      		movw r24,r22
 5323 23ec 6C01      		movw r12,r24
 5324 23ee 7D01      		movw r14,r26
 5325 23f0 89A1      		ldd r24,Y+33
 5326 23f2 9AA1      		ldd r25,Y+34
 5327 23f4 092E      		mov __tmp_reg__,r25
 5328 23f6 000C      		lsl r0
 5329 23f8 AA0B      		sbc r26,r26
 5330 23fa BB0B      		sbc r27,r27
 5331 23fc BC01      		movw r22,r24
 5332 23fe CD01      		movw r24,r26
 5333 2400 0E94 0000 		call __floatsisf
 5334 2404 DC01      		movw r26,r24
 5335 2406 CB01      		movw r24,r22
 5336 2408 9C01      		movw r18,r24
 5337 240a AD01      		movw r20,r26
 5338 240c C701      		movw r24,r14
 5339 240e B601      		movw r22,r12
 5340 2410 0E94 0000 		call __ltsf2
 5341 2414 8823      		tst r24
 5342 2416 04F4      		brge .L177
 5343               		.loc 1 1841 0 discriminator 8
 5344 2418 8DA5      		ldd r24,Y+45
 5345 241a 9EA5      		ldd r25,Y+46
 5346 241c 0496      		adiw r24,4
 5347 241e FC01      		movw r30,r24
 5348 2420 C080      		ld r12,Z
 5349 2422 D180      		ldd r13,Z+1
 5350 2424 E280      		ldd r14,Z+2
 5351 2426 F380      		ldd r15,Z+3
 5352 2428 89A1      		ldd r24,Y+33
 5353 242a 9AA1      		ldd r25,Y+34
 5354 242c 092E      		mov __tmp_reg__,r25
 5355 242e 000C      		lsl r0
 5356 2430 AA0B      		sbc r26,r26
 5357 2432 BB0B      		sbc r27,r27
 5358 2434 BC01      		movw r22,r24
 5359 2436 CD01      		movw r24,r26
 5360 2438 0E94 0000 		call __floatsisf
 5361 243c DC01      		movw r26,r24
 5362 243e CB01      		movw r24,r22
 5363 2440 9C01      		movw r18,r24
 5364 2442 AD01      		movw r20,r26
 5365 2444 C701      		movw r24,r14
 5366 2446 B601      		movw r22,r12
 5367 2448 0E94 0000 		call __mulsf3
 5368 244c DC01      		movw r26,r24
 5369 244e CB01      		movw r24,r22
 5370 2450 BC01      		movw r22,r24
 5371 2452 CD01      		movw r24,r26
 5372 2454 0E94 0000 		call __fixsfsi
 5373 2458 DC01      		movw r26,r24
 5374 245a CB01      		movw r24,r22
 5375 245c 00C0      		rjmp .L135
 5376               	.L177:
 5377               		.loc 1 1841 0 discriminator 9
 5378 245e 89A1      		ldd r24,Y+33
 5379 2460 9AA1      		ldd r25,Y+34
 5380 2462 092E      		mov __tmp_reg__,r25
 5381 2464 000C      		lsl r0
 5382 2466 AA0B      		sbc r26,r26
 5383 2468 BB0B      		sbc r27,r27
 5384 246a BC01      		movw r22,r24
 5385 246c CD01      		movw r24,r26
 5386 246e 0E94 0000 		call __floatsisf
 5387 2472 DC01      		movw r26,r24
 5388 2474 CB01      		movw r24,r22
 5389 2476 BC01      		movw r22,r24
 5390 2478 CD01      		movw r24,r26
 5391 247a 0E94 0000 		call __fixsfsi
 5392 247e DC01      		movw r26,r24
 5393 2480 CB01      		movw r24,r22
 5394               	.L135:
 5395               		.loc 1 1841 0 discriminator 12
 5396 2482 9E8B      		std Y+22,r25
 5397 2484 8D8B      		std Y+21,r24
1842:lp_solve_5.5/colamd/colamd.c ****     DEBUG1 (("colamd: densecount: %d %d\n", dense_row_count, dense_col_count)) ;
1843:lp_solve_5.5/colamd/colamd.c ****     max_deg = 0 ;
 5398               		.loc 1 1843 0 is_stmt 1 discriminator 12
 5399 2486 1A8A      		std Y+18,__zero_reg__
 5400 2488 198A      		std Y+17,__zero_reg__
1844:lp_solve_5.5/colamd/colamd.c ****     n_col2 = n_col ;
 5401               		.loc 1 1844 0 discriminator 12
 5402 248a 8BA1      		ldd r24,Y+35
 5403 248c 9CA1      		ldd r25,Y+36
 5404 248e 9C87      		std Y+12,r25
 5405 2490 8B87      		std Y+11,r24
1845:lp_solve_5.5/colamd/colamd.c ****     n_row2 = n_row ;
 5406               		.loc 1 1845 0 discriminator 12
 5407 2492 89A1      		ldd r24,Y+33
 5408 2494 9AA1      		ldd r25,Y+34
 5409 2496 9E87      		std Y+14,r25
 5410 2498 8D87      		std Y+13,r24
1846:lp_solve_5.5/colamd/colamd.c **** 
1847:lp_solve_5.5/colamd/colamd.c ****     /* === Kill empty columns =============================================== */
1848:lp_solve_5.5/colamd/colamd.c **** 
1849:lp_solve_5.5/colamd/colamd.c ****     /* Put the empty columns at the end in their natural order, so that LU */
1850:lp_solve_5.5/colamd/colamd.c ****     /* factorization can proceed as far as possible. */
1851:lp_solve_5.5/colamd/colamd.c ****     for (c = n_col-1 ; c >= 0 ; c--)
 5411               		.loc 1 1851 0 discriminator 12
 5412 249a 8BA1      		ldd r24,Y+35
 5413 249c 9CA1      		ldd r25,Y+36
 5414 249e 0197      		sbiw r24,1
 5415 24a0 9A83      		std Y+2,r25
 5416 24a2 8983      		std Y+1,r24
 5417 24a4 00C0      		rjmp .L139
 5418               	.L141:
1852:lp_solve_5.5/colamd/colamd.c ****     {
1853:lp_solve_5.5/colamd/colamd.c **** 	deg = Col [c].length ;
 5419               		.loc 1 1853 0
 5420 24a6 2981      		ldd r18,Y+1
 5421 24a8 3A81      		ldd r19,Y+2
 5422 24aa C901      		movw r24,r18
 5423 24ac 880F      		lsl r24
 5424 24ae 991F      		rol r25
 5425 24b0 820F      		add r24,r18
 5426 24b2 931F      		adc r25,r19
 5427 24b4 880F      		lsl r24
 5428 24b6 991F      		rol r25
 5429 24b8 880F      		lsl r24
 5430 24ba 991F      		rol r25
 5431 24bc 9C01      		movw r18,r24
 5432 24be 8FA1      		ldd r24,Y+39
 5433 24c0 98A5      		ldd r25,Y+40
 5434 24c2 820F      		add r24,r18
 5435 24c4 931F      		adc r25,r19
 5436 24c6 FC01      		movw r30,r24
 5437 24c8 8281      		ldd r24,Z+2
 5438 24ca 9381      		ldd r25,Z+3
 5439 24cc 988F      		std Y+24,r25
 5440 24ce 8F8B      		std Y+23,r24
1854:lp_solve_5.5/colamd/colamd.c **** 	if (deg == 0)
 5441               		.loc 1 1854 0
 5442 24d0 8F89      		ldd r24,Y+23
 5443 24d2 988D      		ldd r25,Y+24
 5444 24d4 892B      		or r24,r25
 5445 24d6 01F4      		brne .L140
1855:lp_solve_5.5/colamd/colamd.c **** 	{
1856:lp_solve_5.5/colamd/colamd.c **** 	    /* this is a empty column, kill and order it last */
1857:lp_solve_5.5/colamd/colamd.c **** 	    Col [c].shared2.order = --n_col2 ;
 5446               		.loc 1 1857 0
 5447 24d8 2981      		ldd r18,Y+1
 5448 24da 3A81      		ldd r19,Y+2
 5449 24dc C901      		movw r24,r18
 5450 24de 880F      		lsl r24
 5451 24e0 991F      		rol r25
 5452 24e2 820F      		add r24,r18
 5453 24e4 931F      		adc r25,r19
 5454 24e6 880F      		lsl r24
 5455 24e8 991F      		rol r25
 5456 24ea 880F      		lsl r24
 5457 24ec 991F      		rol r25
 5458 24ee 9C01      		movw r18,r24
 5459 24f0 8FA1      		ldd r24,Y+39
 5460 24f2 98A5      		ldd r25,Y+40
 5461 24f4 820F      		add r24,r18
 5462 24f6 931F      		adc r25,r19
 5463 24f8 2B85      		ldd r18,Y+11
 5464 24fa 3C85      		ldd r19,Y+12
 5465 24fc 2150      		subi r18,1
 5466 24fe 3109      		sbc r19,__zero_reg__
 5467 2500 3C87      		std Y+12,r19
 5468 2502 2B87      		std Y+11,r18
 5469 2504 2B85      		ldd r18,Y+11
 5470 2506 3C85      		ldd r19,Y+12
 5471 2508 FC01      		movw r30,r24
 5472 250a 3783      		std Z+7,r19
 5473 250c 2683      		std Z+6,r18
1858:lp_solve_5.5/colamd/colamd.c **** 	    KILL_PRINCIPAL_COL (c) ;
 5474               		.loc 1 1858 0
 5475 250e 2981      		ldd r18,Y+1
 5476 2510 3A81      		ldd r19,Y+2
 5477 2512 C901      		movw r24,r18
 5478 2514 880F      		lsl r24
 5479 2516 991F      		rol r25
 5480 2518 820F      		add r24,r18
 5481 251a 931F      		adc r25,r19
 5482 251c 880F      		lsl r24
 5483 251e 991F      		rol r25
 5484 2520 880F      		lsl r24
 5485 2522 991F      		rol r25
 5486 2524 9C01      		movw r18,r24
 5487 2526 8FA1      		ldd r24,Y+39
 5488 2528 98A5      		ldd r25,Y+40
 5489 252a 820F      		add r24,r18
 5490 252c 931F      		adc r25,r19
 5491 252e 2FEF      		ldi r18,lo8(-1)
 5492 2530 3FEF      		ldi r19,lo8(-1)
 5493 2532 FC01      		movw r30,r24
 5494 2534 3183      		std Z+1,r19
 5495 2536 2083      		st Z,r18
 5496               	.L140:
1851:lp_solve_5.5/colamd/colamd.c ****     {
 5497               		.loc 1 1851 0 discriminator 2
 5498 2538 8981      		ldd r24,Y+1
 5499 253a 9A81      		ldd r25,Y+2
 5500 253c 0197      		sbiw r24,1
 5501 253e 9A83      		std Y+2,r25
 5502 2540 8983      		std Y+1,r24
 5503               	.L139:
1851:lp_solve_5.5/colamd/colamd.c ****     {
 5504               		.loc 1 1851 0 is_stmt 0 discriminator 1
 5505 2542 8981      		ldd r24,Y+1
 5506 2544 9A81      		ldd r25,Y+2
 5507 2546 9923      		tst r25
 5508 2548 04F0      		brlt .+2
 5509 254a 00C0      		rjmp .L141
1859:lp_solve_5.5/colamd/colamd.c **** 	}
1860:lp_solve_5.5/colamd/colamd.c ****     }
1861:lp_solve_5.5/colamd/colamd.c ****     DEBUG1 (("colamd: null columns killed: %d\n", n_col - n_col2)) ;
1862:lp_solve_5.5/colamd/colamd.c **** 
1863:lp_solve_5.5/colamd/colamd.c ****     /* === Kill dense columns =============================================== */
1864:lp_solve_5.5/colamd/colamd.c **** 
1865:lp_solve_5.5/colamd/colamd.c ****     /* Put the dense columns at the end, in their natural order */
1866:lp_solve_5.5/colamd/colamd.c ****     for (c = n_col-1 ; c >= 0 ; c--)
 5510               		.loc 1 1866 0 is_stmt 1
 5511 254c 8BA1      		ldd r24,Y+35
 5512 254e 9CA1      		ldd r25,Y+36
 5513 2550 0197      		sbiw r24,1
 5514 2552 9A83      		std Y+2,r25
 5515 2554 8983      		std Y+1,r24
 5516 2556 00C0      		rjmp .L142
 5517               	.L147:
1867:lp_solve_5.5/colamd/colamd.c ****     {
1868:lp_solve_5.5/colamd/colamd.c **** 	/* skip any dead columns */
1869:lp_solve_5.5/colamd/colamd.c **** 	if (COL_IS_DEAD (c))
 5518               		.loc 1 1869 0
 5519 2558 2981      		ldd r18,Y+1
 5520 255a 3A81      		ldd r19,Y+2
 5521 255c C901      		movw r24,r18
 5522 255e 880F      		lsl r24
 5523 2560 991F      		rol r25
 5524 2562 820F      		add r24,r18
 5525 2564 931F      		adc r25,r19
 5526 2566 880F      		lsl r24
 5527 2568 991F      		rol r25
 5528 256a 880F      		lsl r24
 5529 256c 991F      		rol r25
 5530 256e 9C01      		movw r18,r24
 5531 2570 8FA1      		ldd r24,Y+39
 5532 2572 98A5      		ldd r25,Y+40
 5533 2574 820F      		add r24,r18
 5534 2576 931F      		adc r25,r19
 5535 2578 FC01      		movw r30,r24
 5536 257a 8081      		ld r24,Z
 5537 257c 9181      		ldd r25,Z+1
 5538 257e 9923      		tst r25
 5539 2580 04F4      		brge .+2
 5540 2582 00C0      		rjmp .L178
1870:lp_solve_5.5/colamd/colamd.c **** 	{
1871:lp_solve_5.5/colamd/colamd.c **** 	    continue ;
1872:lp_solve_5.5/colamd/colamd.c **** 	}
1873:lp_solve_5.5/colamd/colamd.c **** 	deg = Col [c].length ;
 5541               		.loc 1 1873 0
 5542 2584 2981      		ldd r18,Y+1
 5543 2586 3A81      		ldd r19,Y+2
 5544 2588 C901      		movw r24,r18
 5545 258a 880F      		lsl r24
 5546 258c 991F      		rol r25
 5547 258e 820F      		add r24,r18
 5548 2590 931F      		adc r25,r19
 5549 2592 880F      		lsl r24
 5550 2594 991F      		rol r25
 5551 2596 880F      		lsl r24
 5552 2598 991F      		rol r25
 5553 259a 9C01      		movw r18,r24
 5554 259c 8FA1      		ldd r24,Y+39
 5555 259e 98A5      		ldd r25,Y+40
 5556 25a0 820F      		add r24,r18
 5557 25a2 931F      		adc r25,r19
 5558 25a4 FC01      		movw r30,r24
 5559 25a6 8281      		ldd r24,Z+2
 5560 25a8 9381      		ldd r25,Z+3
 5561 25aa 988F      		std Y+24,r25
 5562 25ac 8F8B      		std Y+23,r24
1874:lp_solve_5.5/colamd/colamd.c **** 	if (deg > dense_col_count)
 5563               		.loc 1 1874 0
 5564 25ae 2F89      		ldd r18,Y+23
 5565 25b0 388D      		ldd r19,Y+24
 5566 25b2 8D89      		ldd r24,Y+21
 5567 25b4 9E89      		ldd r25,Y+22
 5568 25b6 8217      		cp r24,r18
 5569 25b8 9307      		cpc r25,r19
 5570 25ba 04F0      		brlt .+2
 5571 25bc 00C0      		rjmp .L144
1875:lp_solve_5.5/colamd/colamd.c **** 	{
1876:lp_solve_5.5/colamd/colamd.c **** 	    /* this is a dense column, kill and order it last */
1877:lp_solve_5.5/colamd/colamd.c **** 	    Col [c].shared2.order = --n_col2 ;
 5572               		.loc 1 1877 0
 5573 25be 2981      		ldd r18,Y+1
 5574 25c0 3A81      		ldd r19,Y+2
 5575 25c2 C901      		movw r24,r18
 5576 25c4 880F      		lsl r24
 5577 25c6 991F      		rol r25
 5578 25c8 820F      		add r24,r18
 5579 25ca 931F      		adc r25,r19
 5580 25cc 880F      		lsl r24
 5581 25ce 991F      		rol r25
 5582 25d0 880F      		lsl r24
 5583 25d2 991F      		rol r25
 5584 25d4 9C01      		movw r18,r24
 5585 25d6 8FA1      		ldd r24,Y+39
 5586 25d8 98A5      		ldd r25,Y+40
 5587 25da 820F      		add r24,r18
 5588 25dc 931F      		adc r25,r19
 5589 25de 2B85      		ldd r18,Y+11
 5590 25e0 3C85      		ldd r19,Y+12
 5591 25e2 2150      		subi r18,1
 5592 25e4 3109      		sbc r19,__zero_reg__
 5593 25e6 3C87      		std Y+12,r19
 5594 25e8 2B87      		std Y+11,r18
 5595 25ea 2B85      		ldd r18,Y+11
 5596 25ec 3C85      		ldd r19,Y+12
 5597 25ee FC01      		movw r30,r24
 5598 25f0 3783      		std Z+7,r19
 5599 25f2 2683      		std Z+6,r18
1878:lp_solve_5.5/colamd/colamd.c **** 	    /* decrement the row degrees */
1879:lp_solve_5.5/colamd/colamd.c **** 	    cp = &A [Col [c].start] ;
 5600               		.loc 1 1879 0
 5601 25f4 2981      		ldd r18,Y+1
 5602 25f6 3A81      		ldd r19,Y+2
 5603 25f8 C901      		movw r24,r18
 5604 25fa 880F      		lsl r24
 5605 25fc 991F      		rol r25
 5606 25fe 820F      		add r24,r18
 5607 2600 931F      		adc r25,r19
 5608 2602 880F      		lsl r24
 5609 2604 991F      		rol r25
 5610 2606 880F      		lsl r24
 5611 2608 991F      		rol r25
 5612 260a 9C01      		movw r18,r24
 5613 260c 8FA1      		ldd r24,Y+39
 5614 260e 98A5      		ldd r25,Y+40
 5615 2610 820F      		add r24,r18
 5616 2612 931F      		adc r25,r19
 5617 2614 FC01      		movw r30,r24
 5618 2616 8081      		ld r24,Z
 5619 2618 9181      		ldd r25,Z+1
 5620 261a 880F      		lsl r24
 5621 261c 991F      		rol r25
 5622 261e 29A5      		ldd r18,Y+41
 5623 2620 3AA5      		ldd r19,Y+42
 5624 2622 820F      		add r24,r18
 5625 2624 931F      		adc r25,r19
 5626 2626 9E83      		std Y+6,r25
 5627 2628 8D83      		std Y+5,r24
1880:lp_solve_5.5/colamd/colamd.c **** 	    cp_end = cp + Col [c].length ;
 5628               		.loc 1 1880 0
 5629 262a 2981      		ldd r18,Y+1
 5630 262c 3A81      		ldd r19,Y+2
 5631 262e C901      		movw r24,r18
 5632 2630 880F      		lsl r24
 5633 2632 991F      		rol r25
 5634 2634 820F      		add r24,r18
 5635 2636 931F      		adc r25,r19
 5636 2638 880F      		lsl r24
 5637 263a 991F      		rol r25
 5638 263c 880F      		lsl r24
 5639 263e 991F      		rol r25
 5640 2640 9C01      		movw r18,r24
 5641 2642 8FA1      		ldd r24,Y+39
 5642 2644 98A5      		ldd r25,Y+40
 5643 2646 820F      		add r24,r18
 5644 2648 931F      		adc r25,r19
 5645 264a FC01      		movw r30,r24
 5646 264c 8281      		ldd r24,Z+2
 5647 264e 9381      		ldd r25,Z+3
 5648 2650 880F      		lsl r24
 5649 2652 991F      		rol r25
 5650 2654 2D81      		ldd r18,Y+5
 5651 2656 3E81      		ldd r19,Y+6
 5652 2658 820F      		add r24,r18
 5653 265a 931F      		adc r25,r19
 5654 265c 9A8F      		std Y+26,r25
 5655 265e 898F      		std Y+25,r24
1881:lp_solve_5.5/colamd/colamd.c **** 	    while (cp < cp_end)
 5656               		.loc 1 1881 0
 5657 2660 00C0      		rjmp .L145
 5658               	.L146:
1882:lp_solve_5.5/colamd/colamd.c **** 	    {
1883:lp_solve_5.5/colamd/colamd.c **** 		Row [*cp++].shared1.degree-- ;
 5659               		.loc 1 1883 0
 5660 2662 8D81      		ldd r24,Y+5
 5661 2664 9E81      		ldd r25,Y+6
 5662 2666 9C01      		movw r18,r24
 5663 2668 2E5F      		subi r18,-2
 5664 266a 3F4F      		sbci r19,-1
 5665 266c 3E83      		std Y+6,r19
 5666 266e 2D83      		std Y+5,r18
 5667 2670 FC01      		movw r30,r24
 5668 2672 8081      		ld r24,Z
 5669 2674 9181      		ldd r25,Z+1
 5670 2676 880F      		lsl r24
 5671 2678 991F      		rol r25
 5672 267a 880F      		lsl r24
 5673 267c 991F      		rol r25
 5674 267e 880F      		lsl r24
 5675 2680 991F      		rol r25
 5676 2682 2DA1      		ldd r18,Y+37
 5677 2684 3EA1      		ldd r19,Y+38
 5678 2686 820F      		add r24,r18
 5679 2688 931F      		adc r25,r19
 5680 268a FC01      		movw r30,r24
 5681 268c 2481      		ldd r18,Z+4
 5682 268e 3581      		ldd r19,Z+5
 5683 2690 2150      		subi r18,1
 5684 2692 3109      		sbc r19,__zero_reg__
 5685 2694 FC01      		movw r30,r24
 5686 2696 3583      		std Z+5,r19
 5687 2698 2483      		std Z+4,r18
 5688               	.L145:
1881:lp_solve_5.5/colamd/colamd.c **** 	    while (cp < cp_end)
 5689               		.loc 1 1881 0
 5690 269a 2D81      		ldd r18,Y+5
 5691 269c 3E81      		ldd r19,Y+6
 5692 269e 898D      		ldd r24,Y+25
 5693 26a0 9A8D      		ldd r25,Y+26
 5694 26a2 2817      		cp r18,r24
 5695 26a4 3907      		cpc r19,r25
 5696 26a6 00F0      		brlo .L146
1884:lp_solve_5.5/colamd/colamd.c **** 	    }
1885:lp_solve_5.5/colamd/colamd.c **** 	    KILL_PRINCIPAL_COL (c) ;
 5697               		.loc 1 1885 0
 5698 26a8 2981      		ldd r18,Y+1
 5699 26aa 3A81      		ldd r19,Y+2
 5700 26ac C901      		movw r24,r18
 5701 26ae 880F      		lsl r24
 5702 26b0 991F      		rol r25
 5703 26b2 820F      		add r24,r18
 5704 26b4 931F      		adc r25,r19
 5705 26b6 880F      		lsl r24
 5706 26b8 991F      		rol r25
 5707 26ba 880F      		lsl r24
 5708 26bc 991F      		rol r25
 5709 26be 9C01      		movw r18,r24
 5710 26c0 8FA1      		ldd r24,Y+39
 5711 26c2 98A5      		ldd r25,Y+40
 5712 26c4 820F      		add r24,r18
 5713 26c6 931F      		adc r25,r19
 5714 26c8 2FEF      		ldi r18,lo8(-1)
 5715 26ca 3FEF      		ldi r19,lo8(-1)
 5716 26cc FC01      		movw r30,r24
 5717 26ce 3183      		std Z+1,r19
 5718 26d0 2083      		st Z,r18
 5719 26d2 00C0      		rjmp .L144
 5720               	.L178:
1871:lp_solve_5.5/colamd/colamd.c **** 	}
 5721               		.loc 1 1871 0
 5722 26d4 0000      		nop
 5723               	.L144:
1866:lp_solve_5.5/colamd/colamd.c ****     {
 5724               		.loc 1 1866 0 discriminator 2
 5725 26d6 8981      		ldd r24,Y+1
 5726 26d8 9A81      		ldd r25,Y+2
 5727 26da 0197      		sbiw r24,1
 5728 26dc 9A83      		std Y+2,r25
 5729 26de 8983      		std Y+1,r24
 5730               	.L142:
1866:lp_solve_5.5/colamd/colamd.c ****     {
 5731               		.loc 1 1866 0 is_stmt 0 discriminator 1
 5732 26e0 8981      		ldd r24,Y+1
 5733 26e2 9A81      		ldd r25,Y+2
 5734 26e4 9923      		tst r25
 5735 26e6 04F0      		brlt .+2
 5736 26e8 00C0      		rjmp .L147
1886:lp_solve_5.5/colamd/colamd.c **** 	}
1887:lp_solve_5.5/colamd/colamd.c ****     }
1888:lp_solve_5.5/colamd/colamd.c ****     DEBUG1 (("colamd: Dense and null columns killed: %d\n", n_col - n_col2)) ;
1889:lp_solve_5.5/colamd/colamd.c **** 
1890:lp_solve_5.5/colamd/colamd.c ****     /* === Kill dense and empty rows ======================================== */
1891:lp_solve_5.5/colamd/colamd.c **** 
1892:lp_solve_5.5/colamd/colamd.c ****     for (r = 0 ; r < n_row ; r++)
 5737               		.loc 1 1892 0 is_stmt 1
 5738 26ea 1C82      		std Y+4,__zero_reg__
 5739 26ec 1B82      		std Y+3,__zero_reg__
 5740 26ee 00C0      		rjmp .L148
 5741               	.L153:
1893:lp_solve_5.5/colamd/colamd.c ****     {
1894:lp_solve_5.5/colamd/colamd.c **** 	deg = Row [r].shared1.degree ;
 5742               		.loc 1 1894 0
 5743 26f0 8B81      		ldd r24,Y+3
 5744 26f2 9C81      		ldd r25,Y+4
 5745 26f4 880F      		lsl r24
 5746 26f6 991F      		rol r25
 5747 26f8 880F      		lsl r24
 5748 26fa 991F      		rol r25
 5749 26fc 880F      		lsl r24
 5750 26fe 991F      		rol r25
 5751 2700 2DA1      		ldd r18,Y+37
 5752 2702 3EA1      		ldd r19,Y+38
 5753 2704 820F      		add r24,r18
 5754 2706 931F      		adc r25,r19
 5755 2708 FC01      		movw r30,r24
 5756 270a 8481      		ldd r24,Z+4
 5757 270c 9581      		ldd r25,Z+5
 5758 270e 988F      		std Y+24,r25
 5759 2710 8F8B      		std Y+23,r24
1895:lp_solve_5.5/colamd/colamd.c **** 	ASSERT (deg >= 0 && deg <= n_col) ;
1896:lp_solve_5.5/colamd/colamd.c **** 	if (deg > dense_row_count || deg == 0)
 5760               		.loc 1 1896 0
 5761 2712 2F89      		ldd r18,Y+23
 5762 2714 388D      		ldd r19,Y+24
 5763 2716 8B89      		ldd r24,Y+19
 5764 2718 9C89      		ldd r25,Y+20
 5765 271a 8217      		cp r24,r18
 5766 271c 9307      		cpc r25,r19
 5767 271e 04F0      		brlt .L149
 5768               		.loc 1 1896 0 is_stmt 0 discriminator 1
 5769 2720 8F89      		ldd r24,Y+23
 5770 2722 988D      		ldd r25,Y+24
 5771 2724 892B      		or r24,r25
 5772 2726 01F4      		brne .L150
 5773               	.L149:
1897:lp_solve_5.5/colamd/colamd.c **** 	{
1898:lp_solve_5.5/colamd/colamd.c **** 	    /* kill a dense or empty row */
1899:lp_solve_5.5/colamd/colamd.c **** 	    KILL_ROW (r) ;
 5774               		.loc 1 1899 0 is_stmt 1
 5775 2728 8B81      		ldd r24,Y+3
 5776 272a 9C81      		ldd r25,Y+4
 5777 272c 880F      		lsl r24
 5778 272e 991F      		rol r25
 5779 2730 880F      		lsl r24
 5780 2732 991F      		rol r25
 5781 2734 880F      		lsl r24
 5782 2736 991F      		rol r25
 5783 2738 2DA1      		ldd r18,Y+37
 5784 273a 3EA1      		ldd r19,Y+38
 5785 273c 820F      		add r24,r18
 5786 273e 931F      		adc r25,r19
 5787 2740 2FEF      		ldi r18,lo8(-1)
 5788 2742 3FEF      		ldi r19,lo8(-1)
 5789 2744 FC01      		movw r30,r24
 5790 2746 3783      		std Z+7,r19
 5791 2748 2683      		std Z+6,r18
1900:lp_solve_5.5/colamd/colamd.c **** 	    --n_row2 ;
 5792               		.loc 1 1900 0
 5793 274a 8D85      		ldd r24,Y+13
 5794 274c 9E85      		ldd r25,Y+14
 5795 274e 0197      		sbiw r24,1
 5796 2750 9E87      		std Y+14,r25
 5797 2752 8D87      		std Y+13,r24
 5798 2754 00C0      		rjmp .L151
 5799               	.L150:
1901:lp_solve_5.5/colamd/colamd.c **** 	}
1902:lp_solve_5.5/colamd/colamd.c **** 	else
1903:lp_solve_5.5/colamd/colamd.c **** 	{
1904:lp_solve_5.5/colamd/colamd.c **** 	    /* keep track of max degree of remaining rows */
1905:lp_solve_5.5/colamd/colamd.c **** 	    max_deg = MAX (max_deg, deg) ;
 5800               		.loc 1 1905 0
 5801 2756 2989      		ldd r18,Y+17
 5802 2758 3A89      		ldd r19,Y+18
 5803 275a 8F89      		ldd r24,Y+23
 5804 275c 988D      		ldd r25,Y+24
 5805 275e 8217      		cp r24,r18
 5806 2760 9307      		cpc r25,r19
 5807 2762 04F4      		brge .L152
 5808 2764 C901      		movw r24,r18
 5809               	.L152:
 5810 2766 9A8B      		std Y+18,r25
 5811 2768 898B      		std Y+17,r24
 5812               	.L151:
1892:lp_solve_5.5/colamd/colamd.c ****     {
 5813               		.loc 1 1892 0 discriminator 2
 5814 276a 8B81      		ldd r24,Y+3
 5815 276c 9C81      		ldd r25,Y+4
 5816 276e 0196      		adiw r24,1
 5817 2770 9C83      		std Y+4,r25
 5818 2772 8B83      		std Y+3,r24
 5819               	.L148:
1892:lp_solve_5.5/colamd/colamd.c ****     {
 5820               		.loc 1 1892 0 is_stmt 0 discriminator 1
 5821 2774 2B81      		ldd r18,Y+3
 5822 2776 3C81      		ldd r19,Y+4
 5823 2778 89A1      		ldd r24,Y+33
 5824 277a 9AA1      		ldd r25,Y+34
 5825 277c 2817      		cp r18,r24
 5826 277e 3907      		cpc r19,r25
 5827 2780 04F4      		brge .+2
 5828 2782 00C0      		rjmp .L153
1906:lp_solve_5.5/colamd/colamd.c **** 	}
1907:lp_solve_5.5/colamd/colamd.c ****     }
1908:lp_solve_5.5/colamd/colamd.c ****     DEBUG1 (("colamd: Dense and null rows killed: %d\n", n_row - n_row2)) ;
1909:lp_solve_5.5/colamd/colamd.c **** 
1910:lp_solve_5.5/colamd/colamd.c ****     /* === Compute initial column scores ==================================== */
1911:lp_solve_5.5/colamd/colamd.c **** 
1912:lp_solve_5.5/colamd/colamd.c ****     /* At this point the row degrees are accurate.  They reflect the number */
1913:lp_solve_5.5/colamd/colamd.c ****     /* of "live" (non-dense) columns in each row.  No empty rows exist. */
1914:lp_solve_5.5/colamd/colamd.c ****     /* Some "live" columns may contain only dead rows, however.  These are */
1915:lp_solve_5.5/colamd/colamd.c ****     /* pruned in the code below. */
1916:lp_solve_5.5/colamd/colamd.c **** 
1917:lp_solve_5.5/colamd/colamd.c ****     /* now find the initial matlab score for each column */
1918:lp_solve_5.5/colamd/colamd.c ****     for (c = n_col-1 ; c >= 0 ; c--)
 5829               		.loc 1 1918 0 is_stmt 1
 5830 2784 8BA1      		ldd r24,Y+35
 5831 2786 9CA1      		ldd r25,Y+36
 5832 2788 0197      		sbiw r24,1
 5833 278a 9A83      		std Y+2,r25
 5834 278c 8983      		std Y+1,r24
 5835 278e 00C0      		rjmp .L154
 5836               	.L162:
1919:lp_solve_5.5/colamd/colamd.c ****     {
1920:lp_solve_5.5/colamd/colamd.c **** 	/* skip dead column */
1921:lp_solve_5.5/colamd/colamd.c **** 	if (COL_IS_DEAD (c))
 5837               		.loc 1 1921 0
 5838 2790 2981      		ldd r18,Y+1
 5839 2792 3A81      		ldd r19,Y+2
 5840 2794 C901      		movw r24,r18
 5841 2796 880F      		lsl r24
 5842 2798 991F      		rol r25
 5843 279a 820F      		add r24,r18
 5844 279c 931F      		adc r25,r19
 5845 279e 880F      		lsl r24
 5846 27a0 991F      		rol r25
 5847 27a2 880F      		lsl r24
 5848 27a4 991F      		rol r25
 5849 27a6 9C01      		movw r18,r24
 5850 27a8 8FA1      		ldd r24,Y+39
 5851 27aa 98A5      		ldd r25,Y+40
 5852 27ac 820F      		add r24,r18
 5853 27ae 931F      		adc r25,r19
 5854 27b0 FC01      		movw r30,r24
 5855 27b2 8081      		ld r24,Z
 5856 27b4 9181      		ldd r25,Z+1
 5857 27b6 9923      		tst r25
 5858 27b8 04F4      		brge .+2
 5859 27ba 00C0      		rjmp .L179
1922:lp_solve_5.5/colamd/colamd.c **** 	{
1923:lp_solve_5.5/colamd/colamd.c **** 	    continue ;
1924:lp_solve_5.5/colamd/colamd.c **** 	}
1925:lp_solve_5.5/colamd/colamd.c **** 	score = 0 ;
 5860               		.loc 1 1925 0
 5861 27bc 1A86      		std Y+10,__zero_reg__
 5862 27be 1986      		std Y+9,__zero_reg__
1926:lp_solve_5.5/colamd/colamd.c **** 	cp = &A [Col [c].start] ;
 5863               		.loc 1 1926 0
 5864 27c0 2981      		ldd r18,Y+1
 5865 27c2 3A81      		ldd r19,Y+2
 5866 27c4 C901      		movw r24,r18
 5867 27c6 880F      		lsl r24
 5868 27c8 991F      		rol r25
 5869 27ca 820F      		add r24,r18
 5870 27cc 931F      		adc r25,r19
 5871 27ce 880F      		lsl r24
 5872 27d0 991F      		rol r25
 5873 27d2 880F      		lsl r24
 5874 27d4 991F      		rol r25
 5875 27d6 9C01      		movw r18,r24
 5876 27d8 8FA1      		ldd r24,Y+39
 5877 27da 98A5      		ldd r25,Y+40
 5878 27dc 820F      		add r24,r18
 5879 27de 931F      		adc r25,r19
 5880 27e0 FC01      		movw r30,r24
 5881 27e2 8081      		ld r24,Z
 5882 27e4 9181      		ldd r25,Z+1
 5883 27e6 880F      		lsl r24
 5884 27e8 991F      		rol r25
 5885 27ea 29A5      		ldd r18,Y+41
 5886 27ec 3AA5      		ldd r19,Y+42
 5887 27ee 820F      		add r24,r18
 5888 27f0 931F      		adc r25,r19
 5889 27f2 9E83      		std Y+6,r25
 5890 27f4 8D83      		std Y+5,r24
1927:lp_solve_5.5/colamd/colamd.c **** 	new_cp = cp ;
 5891               		.loc 1 1927 0
 5892 27f6 8D81      		ldd r24,Y+5
 5893 27f8 9E81      		ldd r25,Y+6
 5894 27fa 9887      		std Y+8,r25
 5895 27fc 8F83      		std Y+7,r24
1928:lp_solve_5.5/colamd/colamd.c **** 	cp_end = cp + Col [c].length ;
 5896               		.loc 1 1928 0
 5897 27fe 2981      		ldd r18,Y+1
 5898 2800 3A81      		ldd r19,Y+2
 5899 2802 C901      		movw r24,r18
 5900 2804 880F      		lsl r24
 5901 2806 991F      		rol r25
 5902 2808 820F      		add r24,r18
 5903 280a 931F      		adc r25,r19
 5904 280c 880F      		lsl r24
 5905 280e 991F      		rol r25
 5906 2810 880F      		lsl r24
 5907 2812 991F      		rol r25
 5908 2814 9C01      		movw r18,r24
 5909 2816 8FA1      		ldd r24,Y+39
 5910 2818 98A5      		ldd r25,Y+40
 5911 281a 820F      		add r24,r18
 5912 281c 931F      		adc r25,r19
 5913 281e FC01      		movw r30,r24
 5914 2820 8281      		ldd r24,Z+2
 5915 2822 9381      		ldd r25,Z+3
 5916 2824 880F      		lsl r24
 5917 2826 991F      		rol r25
 5918 2828 2D81      		ldd r18,Y+5
 5919 282a 3E81      		ldd r19,Y+6
 5920 282c 820F      		add r24,r18
 5921 282e 931F      		adc r25,r19
 5922 2830 9A8F      		std Y+26,r25
 5923 2832 898F      		std Y+25,r24
1929:lp_solve_5.5/colamd/colamd.c **** 	while (cp < cp_end)
 5924               		.loc 1 1929 0
 5925 2834 00C0      		rjmp .L157
 5926               	.L160:
1930:lp_solve_5.5/colamd/colamd.c **** 	{
1931:lp_solve_5.5/colamd/colamd.c **** 	    /* get a row */
1932:lp_solve_5.5/colamd/colamd.c **** 	    row = *cp++ ;
 5927               		.loc 1 1932 0
 5928 2836 8D81      		ldd r24,Y+5
 5929 2838 9E81      		ldd r25,Y+6
 5930 283a 9C01      		movw r18,r24
 5931 283c 2E5F      		subi r18,-2
 5932 283e 3F4F      		sbci r19,-1
 5933 2840 3E83      		std Y+6,r19
 5934 2842 2D83      		std Y+5,r18
 5935 2844 FC01      		movw r30,r24
 5936 2846 8081      		ld r24,Z
 5937 2848 9181      		ldd r25,Z+1
 5938 284a 9C8F      		std Y+28,r25
 5939 284c 8B8F      		std Y+27,r24
1933:lp_solve_5.5/colamd/colamd.c **** 	    /* skip if dead */
1934:lp_solve_5.5/colamd/colamd.c **** 	    if (ROW_IS_DEAD (row))
 5940               		.loc 1 1934 0
 5941 284e 8B8D      		ldd r24,Y+27
 5942 2850 9C8D      		ldd r25,Y+28
 5943 2852 880F      		lsl r24
 5944 2854 991F      		rol r25
 5945 2856 880F      		lsl r24
 5946 2858 991F      		rol r25
 5947 285a 880F      		lsl r24
 5948 285c 991F      		rol r25
 5949 285e 2DA1      		ldd r18,Y+37
 5950 2860 3EA1      		ldd r19,Y+38
 5951 2862 820F      		add r24,r18
 5952 2864 931F      		adc r25,r19
 5953 2866 FC01      		movw r30,r24
 5954 2868 8681      		ldd r24,Z+6
 5955 286a 9781      		ldd r25,Z+7
 5956 286c 9923      		tst r25
 5957 286e 04F4      		brge .L158
1935:lp_solve_5.5/colamd/colamd.c **** 	    {
1936:lp_solve_5.5/colamd/colamd.c **** 		continue ;
 5958               		.loc 1 1936 0
 5959 2870 00C0      		rjmp .L157
 5960               	.L158:
1937:lp_solve_5.5/colamd/colamd.c **** 	    }
1938:lp_solve_5.5/colamd/colamd.c **** 	    /* compact the column */
1939:lp_solve_5.5/colamd/colamd.c **** 	    *new_cp++ = row ;
 5961               		.loc 1 1939 0
 5962 2872 8F81      		ldd r24,Y+7
 5963 2874 9885      		ldd r25,Y+8
 5964 2876 9C01      		movw r18,r24
 5965 2878 2E5F      		subi r18,-2
 5966 287a 3F4F      		sbci r19,-1
 5967 287c 3887      		std Y+8,r19
 5968 287e 2F83      		std Y+7,r18
 5969 2880 2B8D      		ldd r18,Y+27
 5970 2882 3C8D      		ldd r19,Y+28
 5971 2884 FC01      		movw r30,r24
 5972 2886 3183      		std Z+1,r19
 5973 2888 2083      		st Z,r18
1940:lp_solve_5.5/colamd/colamd.c **** 	    /* add row's external degree */
1941:lp_solve_5.5/colamd/colamd.c **** 	    score += Row [row].shared1.degree - 1 ;
 5974               		.loc 1 1941 0
 5975 288a 8B8D      		ldd r24,Y+27
 5976 288c 9C8D      		ldd r25,Y+28
 5977 288e 880F      		lsl r24
 5978 2890 991F      		rol r25
 5979 2892 880F      		lsl r24
 5980 2894 991F      		rol r25
 5981 2896 880F      		lsl r24
 5982 2898 991F      		rol r25
 5983 289a 2DA1      		ldd r18,Y+37
 5984 289c 3EA1      		ldd r19,Y+38
 5985 289e 820F      		add r24,r18
 5986 28a0 931F      		adc r25,r19
 5987 28a2 FC01      		movw r30,r24
 5988 28a4 8481      		ldd r24,Z+4
 5989 28a6 9581      		ldd r25,Z+5
 5990 28a8 0197      		sbiw r24,1
 5991 28aa 2985      		ldd r18,Y+9
 5992 28ac 3A85      		ldd r19,Y+10
 5993 28ae 820F      		add r24,r18
 5994 28b0 931F      		adc r25,r19
 5995 28b2 9A87      		std Y+10,r25
 5996 28b4 8987      		std Y+9,r24
1942:lp_solve_5.5/colamd/colamd.c **** 	    /* guard against integer overflow */
1943:lp_solve_5.5/colamd/colamd.c **** 	    score = MIN (score, n_col) ;
 5997               		.loc 1 1943 0
 5998 28b6 2985      		ldd r18,Y+9
 5999 28b8 3A85      		ldd r19,Y+10
 6000 28ba 8BA1      		ldd r24,Y+35
 6001 28bc 9CA1      		ldd r25,Y+36
 6002 28be 2817      		cp r18,r24
 6003 28c0 3907      		cpc r19,r25
 6004 28c2 04F4      		brge .L159
 6005 28c4 C901      		movw r24,r18
 6006               	.L159:
 6007 28c6 9A87      		std Y+10,r25
 6008 28c8 8987      		std Y+9,r24
 6009               	.L157:
1929:lp_solve_5.5/colamd/colamd.c **** 	{
 6010               		.loc 1 1929 0
 6011 28ca 2D81      		ldd r18,Y+5
 6012 28cc 3E81      		ldd r19,Y+6
 6013 28ce 898D      		ldd r24,Y+25
 6014 28d0 9A8D      		ldd r25,Y+26
 6015 28d2 2817      		cp r18,r24
 6016 28d4 3907      		cpc r19,r25
 6017 28d6 00F4      		brsh .+2
 6018 28d8 00C0      		rjmp .L160
1944:lp_solve_5.5/colamd/colamd.c **** 	}
1945:lp_solve_5.5/colamd/colamd.c **** 	/* determine pruned column length */
1946:lp_solve_5.5/colamd/colamd.c **** 	col_length = (int) (new_cp - &A [Col [c].start]) ;
 6019               		.loc 1 1946 0
 6020 28da 4F81      		ldd r20,Y+7
 6021 28dc 5885      		ldd r21,Y+8
 6022 28de 2981      		ldd r18,Y+1
 6023 28e0 3A81      		ldd r19,Y+2
 6024 28e2 C901      		movw r24,r18
 6025 28e4 880F      		lsl r24
 6026 28e6 991F      		rol r25
 6027 28e8 820F      		add r24,r18
 6028 28ea 931F      		adc r25,r19
 6029 28ec 880F      		lsl r24
 6030 28ee 991F      		rol r25
 6031 28f0 880F      		lsl r24
 6032 28f2 991F      		rol r25
 6033 28f4 9C01      		movw r18,r24
 6034 28f6 8FA1      		ldd r24,Y+39
 6035 28f8 98A5      		ldd r25,Y+40
 6036 28fa 820F      		add r24,r18
 6037 28fc 931F      		adc r25,r19
 6038 28fe FC01      		movw r30,r24
 6039 2900 8081      		ld r24,Z
 6040 2902 9181      		ldd r25,Z+1
 6041 2904 880F      		lsl r24
 6042 2906 991F      		rol r25
 6043 2908 29A5      		ldd r18,Y+41
 6044 290a 3AA5      		ldd r19,Y+42
 6045 290c 820F      		add r24,r18
 6046 290e 931F      		adc r25,r19
 6047 2910 9A01      		movw r18,r20
 6048 2912 281B      		sub r18,r24
 6049 2914 390B      		sbc r19,r25
 6050 2916 C901      		movw r24,r18
 6051 2918 9595      		asr r25
 6052 291a 8795      		ror r24
 6053 291c 9E8F      		std Y+30,r25
 6054 291e 8D8F      		std Y+29,r24
1947:lp_solve_5.5/colamd/colamd.c **** 	if (col_length == 0)
 6055               		.loc 1 1947 0
 6056 2920 8D8D      		ldd r24,Y+29
 6057 2922 9E8D      		ldd r25,Y+30
 6058 2924 892B      		or r24,r25
 6059 2926 01F4      		brne .L161
1948:lp_solve_5.5/colamd/colamd.c **** 	{
1949:lp_solve_5.5/colamd/colamd.c **** 	    /* a newly-made null column (all rows in this col are "dense" */
1950:lp_solve_5.5/colamd/colamd.c **** 	    /* and have already been killed) */
1951:lp_solve_5.5/colamd/colamd.c **** 	    DEBUG2 (("Newly null killed: %d\n", c)) ;
1952:lp_solve_5.5/colamd/colamd.c **** 	    Col [c].shared2.order = --n_col2 ;
 6060               		.loc 1 1952 0
 6061 2928 2981      		ldd r18,Y+1
 6062 292a 3A81      		ldd r19,Y+2
 6063 292c C901      		movw r24,r18
 6064 292e 880F      		lsl r24
 6065 2930 991F      		rol r25
 6066 2932 820F      		add r24,r18
 6067 2934 931F      		adc r25,r19
 6068 2936 880F      		lsl r24
 6069 2938 991F      		rol r25
 6070 293a 880F      		lsl r24
 6071 293c 991F      		rol r25
 6072 293e 9C01      		movw r18,r24
 6073 2940 8FA1      		ldd r24,Y+39
 6074 2942 98A5      		ldd r25,Y+40
 6075 2944 820F      		add r24,r18
 6076 2946 931F      		adc r25,r19
 6077 2948 2B85      		ldd r18,Y+11
 6078 294a 3C85      		ldd r19,Y+12
 6079 294c 2150      		subi r18,1
 6080 294e 3109      		sbc r19,__zero_reg__
 6081 2950 3C87      		std Y+12,r19
 6082 2952 2B87      		std Y+11,r18
 6083 2954 2B85      		ldd r18,Y+11
 6084 2956 3C85      		ldd r19,Y+12
 6085 2958 FC01      		movw r30,r24
 6086 295a 3783      		std Z+7,r19
 6087 295c 2683      		std Z+6,r18
1953:lp_solve_5.5/colamd/colamd.c **** 	    KILL_PRINCIPAL_COL (c) ;
 6088               		.loc 1 1953 0
 6089 295e 2981      		ldd r18,Y+1
 6090 2960 3A81      		ldd r19,Y+2
 6091 2962 C901      		movw r24,r18
 6092 2964 880F      		lsl r24
 6093 2966 991F      		rol r25
 6094 2968 820F      		add r24,r18
 6095 296a 931F      		adc r25,r19
 6096 296c 880F      		lsl r24
 6097 296e 991F      		rol r25
 6098 2970 880F      		lsl r24
 6099 2972 991F      		rol r25
 6100 2974 9C01      		movw r18,r24
 6101 2976 8FA1      		ldd r24,Y+39
 6102 2978 98A5      		ldd r25,Y+40
 6103 297a 820F      		add r24,r18
 6104 297c 931F      		adc r25,r19
 6105 297e 2FEF      		ldi r18,lo8(-1)
 6106 2980 3FEF      		ldi r19,lo8(-1)
 6107 2982 FC01      		movw r30,r24
 6108 2984 3183      		std Z+1,r19
 6109 2986 2083      		st Z,r18
 6110 2988 00C0      		rjmp .L156
 6111               	.L161:
1954:lp_solve_5.5/colamd/colamd.c **** 	}
1955:lp_solve_5.5/colamd/colamd.c **** 	else
1956:lp_solve_5.5/colamd/colamd.c **** 	{
1957:lp_solve_5.5/colamd/colamd.c **** 	    /* set column length and set score */
1958:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (score >= 0) ;
1959:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (score <= n_col) ;
1960:lp_solve_5.5/colamd/colamd.c **** 	    Col [c].length = col_length ;
 6112               		.loc 1 1960 0
 6113 298a 2981      		ldd r18,Y+1
 6114 298c 3A81      		ldd r19,Y+2
 6115 298e C901      		movw r24,r18
 6116 2990 880F      		lsl r24
 6117 2992 991F      		rol r25
 6118 2994 820F      		add r24,r18
 6119 2996 931F      		adc r25,r19
 6120 2998 880F      		lsl r24
 6121 299a 991F      		rol r25
 6122 299c 880F      		lsl r24
 6123 299e 991F      		rol r25
 6124 29a0 9C01      		movw r18,r24
 6125 29a2 8FA1      		ldd r24,Y+39
 6126 29a4 98A5      		ldd r25,Y+40
 6127 29a6 820F      		add r24,r18
 6128 29a8 931F      		adc r25,r19
 6129 29aa 2D8D      		ldd r18,Y+29
 6130 29ac 3E8D      		ldd r19,Y+30
 6131 29ae FC01      		movw r30,r24
 6132 29b0 3383      		std Z+3,r19
 6133 29b2 2283      		std Z+2,r18
1961:lp_solve_5.5/colamd/colamd.c **** 	    Col [c].shared2.score = score ;
 6134               		.loc 1 1961 0
 6135 29b4 2981      		ldd r18,Y+1
 6136 29b6 3A81      		ldd r19,Y+2
 6137 29b8 C901      		movw r24,r18
 6138 29ba 880F      		lsl r24
 6139 29bc 991F      		rol r25
 6140 29be 820F      		add r24,r18
 6141 29c0 931F      		adc r25,r19
 6142 29c2 880F      		lsl r24
 6143 29c4 991F      		rol r25
 6144 29c6 880F      		lsl r24
 6145 29c8 991F      		rol r25
 6146 29ca 9C01      		movw r18,r24
 6147 29cc 8FA1      		ldd r24,Y+39
 6148 29ce 98A5      		ldd r25,Y+40
 6149 29d0 820F      		add r24,r18
 6150 29d2 931F      		adc r25,r19
 6151 29d4 2985      		ldd r18,Y+9
 6152 29d6 3A85      		ldd r19,Y+10
 6153 29d8 FC01      		movw r30,r24
 6154 29da 3783      		std Z+7,r19
 6155 29dc 2683      		std Z+6,r18
 6156 29de 00C0      		rjmp .L156
 6157               	.L179:
1923:lp_solve_5.5/colamd/colamd.c **** 	}
 6158               		.loc 1 1923 0
 6159 29e0 0000      		nop
 6160               	.L156:
1918:lp_solve_5.5/colamd/colamd.c ****     {
 6161               		.loc 1 1918 0 discriminator 2
 6162 29e2 8981      		ldd r24,Y+1
 6163 29e4 9A81      		ldd r25,Y+2
 6164 29e6 0197      		sbiw r24,1
 6165 29e8 9A83      		std Y+2,r25
 6166 29ea 8983      		std Y+1,r24
 6167               	.L154:
1918:lp_solve_5.5/colamd/colamd.c ****     {
 6168               		.loc 1 1918 0 is_stmt 0 discriminator 1
 6169 29ec 8981      		ldd r24,Y+1
 6170 29ee 9A81      		ldd r25,Y+2
 6171 29f0 9923      		tst r25
 6172 29f2 04F0      		brlt .+2
 6173 29f4 00C0      		rjmp .L162
1962:lp_solve_5.5/colamd/colamd.c **** 	}
1963:lp_solve_5.5/colamd/colamd.c ****     }
1964:lp_solve_5.5/colamd/colamd.c ****     DEBUG1 (("colamd: Dense, null, and newly-null columns killed: %d\n",
1965:lp_solve_5.5/colamd/colamd.c ****     	n_col-n_col2)) ;
1966:lp_solve_5.5/colamd/colamd.c **** 
1967:lp_solve_5.5/colamd/colamd.c ****     /* At this point, all empty rows and columns are dead.  All live columns */
1968:lp_solve_5.5/colamd/colamd.c ****     /* are "clean" (containing no dead rows) and simplicial (no supercolumns */
1969:lp_solve_5.5/colamd/colamd.c ****     /* yet).  Rows may contain dead columns, but all live rows contain at */
1970:lp_solve_5.5/colamd/colamd.c ****     /* least one live column. */
1971:lp_solve_5.5/colamd/colamd.c **** 
1972:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
1973:lp_solve_5.5/colamd/colamd.c ****     debug_structures (n_row, n_col, Row, Col, A, n_col2) ;
1974:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
1975:lp_solve_5.5/colamd/colamd.c **** 
1976:lp_solve_5.5/colamd/colamd.c ****     /* === Initialize degree lists ========================================== */
1977:lp_solve_5.5/colamd/colamd.c **** 
1978:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
1979:lp_solve_5.5/colamd/colamd.c ****     debug_count = 0 ;
1980:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
1981:lp_solve_5.5/colamd/colamd.c **** 
1982:lp_solve_5.5/colamd/colamd.c ****     /* clear the hash buckets */
1983:lp_solve_5.5/colamd/colamd.c ****     for (c = 0 ; c <= n_col ; c++)
 6174               		.loc 1 1983 0 is_stmt 1
 6175 29f6 1A82      		std Y+2,__zero_reg__
 6176 29f8 1982      		std Y+1,__zero_reg__
 6177 29fa 00C0      		rjmp .L163
 6178               	.L164:
1984:lp_solve_5.5/colamd/colamd.c ****     {
1985:lp_solve_5.5/colamd/colamd.c **** 	head [c] = EMPTY ;
 6179               		.loc 1 1985 0 discriminator 3
 6180 29fc 8981      		ldd r24,Y+1
 6181 29fe 9A81      		ldd r25,Y+2
 6182 2a00 880F      		lsl r24
 6183 2a02 991F      		rol r25
 6184 2a04 2BA5      		ldd r18,Y+43
 6185 2a06 3CA5      		ldd r19,Y+44
 6186 2a08 820F      		add r24,r18
 6187 2a0a 931F      		adc r25,r19
 6188 2a0c 2FEF      		ldi r18,lo8(-1)
 6189 2a0e 3FEF      		ldi r19,lo8(-1)
 6190 2a10 FC01      		movw r30,r24
 6191 2a12 3183      		std Z+1,r19
 6192 2a14 2083      		st Z,r18
1983:lp_solve_5.5/colamd/colamd.c ****     {
 6193               		.loc 1 1983 0 discriminator 3
 6194 2a16 8981      		ldd r24,Y+1
 6195 2a18 9A81      		ldd r25,Y+2
 6196 2a1a 0196      		adiw r24,1
 6197 2a1c 9A83      		std Y+2,r25
 6198 2a1e 8983      		std Y+1,r24
 6199               	.L163:
1983:lp_solve_5.5/colamd/colamd.c ****     {
 6200               		.loc 1 1983 0 is_stmt 0 discriminator 1
 6201 2a20 2981      		ldd r18,Y+1
 6202 2a22 3A81      		ldd r19,Y+2
 6203 2a24 8BA1      		ldd r24,Y+35
 6204 2a26 9CA1      		ldd r25,Y+36
 6205 2a28 8217      		cp r24,r18
 6206 2a2a 9307      		cpc r25,r19
 6207 2a2c 04F4      		brge .L164
1986:lp_solve_5.5/colamd/colamd.c ****     }
1987:lp_solve_5.5/colamd/colamd.c ****     min_score = n_col ;
 6208               		.loc 1 1987 0 is_stmt 1
 6209 2a2e 8BA1      		ldd r24,Y+35
 6210 2a30 9CA1      		ldd r25,Y+36
 6211 2a32 988B      		std Y+16,r25
 6212 2a34 8F87      		std Y+15,r24
1988:lp_solve_5.5/colamd/colamd.c ****     /* place in reverse order, so low column indices are at the front */
1989:lp_solve_5.5/colamd/colamd.c ****     /* of the lists.  This is to encourage natural tie-breaking */
1990:lp_solve_5.5/colamd/colamd.c ****     for (c = n_col-1 ; c >= 0 ; c--)
 6213               		.loc 1 1990 0
 6214 2a36 8BA1      		ldd r24,Y+35
 6215 2a38 9CA1      		ldd r25,Y+36
 6216 2a3a 0197      		sbiw r24,1
 6217 2a3c 9A83      		std Y+2,r25
 6218 2a3e 8983      		std Y+1,r24
 6219 2a40 00C0      		rjmp .L165
 6220               	.L169:
1991:lp_solve_5.5/colamd/colamd.c ****     {
1992:lp_solve_5.5/colamd/colamd.c **** 	/* only add principal columns to degree lists */
1993:lp_solve_5.5/colamd/colamd.c **** 	if (COL_IS_ALIVE (c))
 6221               		.loc 1 1993 0
 6222 2a42 2981      		ldd r18,Y+1
 6223 2a44 3A81      		ldd r19,Y+2
 6224 2a46 C901      		movw r24,r18
 6225 2a48 880F      		lsl r24
 6226 2a4a 991F      		rol r25
 6227 2a4c 820F      		add r24,r18
 6228 2a4e 931F      		adc r25,r19
 6229 2a50 880F      		lsl r24
 6230 2a52 991F      		rol r25
 6231 2a54 880F      		lsl r24
 6232 2a56 991F      		rol r25
 6233 2a58 9C01      		movw r18,r24
 6234 2a5a 8FA1      		ldd r24,Y+39
 6235 2a5c 98A5      		ldd r25,Y+40
 6236 2a5e 820F      		add r24,r18
 6237 2a60 931F      		adc r25,r19
 6238 2a62 FC01      		movw r30,r24
 6239 2a64 8081      		ld r24,Z
 6240 2a66 9181      		ldd r25,Z+1
 6241 2a68 9923      		tst r25
 6242 2a6a 04F4      		brge .+2
 6243 2a6c 00C0      		rjmp .L166
1994:lp_solve_5.5/colamd/colamd.c **** 	{
1995:lp_solve_5.5/colamd/colamd.c **** 	    DEBUG4 (("place %d score %d minscore %d ncol %d\n",
1996:lp_solve_5.5/colamd/colamd.c **** 		c, Col [c].shared2.score, min_score, n_col)) ;
1997:lp_solve_5.5/colamd/colamd.c **** 
1998:lp_solve_5.5/colamd/colamd.c **** 	    /* === Add columns score to DList =============================== */
1999:lp_solve_5.5/colamd/colamd.c **** 
2000:lp_solve_5.5/colamd/colamd.c **** 	    score = Col [c].shared2.score ;
 6244               		.loc 1 2000 0
 6245 2a6e 2981      		ldd r18,Y+1
 6246 2a70 3A81      		ldd r19,Y+2
 6247 2a72 C901      		movw r24,r18
 6248 2a74 880F      		lsl r24
 6249 2a76 991F      		rol r25
 6250 2a78 820F      		add r24,r18
 6251 2a7a 931F      		adc r25,r19
 6252 2a7c 880F      		lsl r24
 6253 2a7e 991F      		rol r25
 6254 2a80 880F      		lsl r24
 6255 2a82 991F      		rol r25
 6256 2a84 9C01      		movw r18,r24
 6257 2a86 8FA1      		ldd r24,Y+39
 6258 2a88 98A5      		ldd r25,Y+40
 6259 2a8a 820F      		add r24,r18
 6260 2a8c 931F      		adc r25,r19
 6261 2a8e FC01      		movw r30,r24
 6262 2a90 8681      		ldd r24,Z+6
 6263 2a92 9781      		ldd r25,Z+7
 6264 2a94 9A87      		std Y+10,r25
 6265 2a96 8987      		std Y+9,r24
2001:lp_solve_5.5/colamd/colamd.c **** 
2002:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (min_score >= 0) ;
2003:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (min_score <= n_col) ;
2004:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (score >= 0) ;
2005:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (score <= n_col) ;
2006:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (head [score] >= EMPTY) ;
2007:lp_solve_5.5/colamd/colamd.c **** 
2008:lp_solve_5.5/colamd/colamd.c **** 	    /* now add this column to dList at proper score location */
2009:lp_solve_5.5/colamd/colamd.c **** 	    next_col = head [score] ;
 6266               		.loc 1 2009 0
 6267 2a98 8985      		ldd r24,Y+9
 6268 2a9a 9A85      		ldd r25,Y+10
 6269 2a9c 880F      		lsl r24
 6270 2a9e 991F      		rol r25
 6271 2aa0 2BA5      		ldd r18,Y+43
 6272 2aa2 3CA5      		ldd r19,Y+44
 6273 2aa4 820F      		add r24,r18
 6274 2aa6 931F      		adc r25,r19
 6275 2aa8 FC01      		movw r30,r24
 6276 2aaa 8081      		ld r24,Z
 6277 2aac 9181      		ldd r25,Z+1
 6278 2aae 98A3      		std Y+32,r25
 6279 2ab0 8F8F      		std Y+31,r24
2010:lp_solve_5.5/colamd/colamd.c **** 	    Col [c].shared3.prev = EMPTY ;
 6280               		.loc 1 2010 0
 6281 2ab2 2981      		ldd r18,Y+1
 6282 2ab4 3A81      		ldd r19,Y+2
 6283 2ab6 C901      		movw r24,r18
 6284 2ab8 880F      		lsl r24
 6285 2aba 991F      		rol r25
 6286 2abc 820F      		add r24,r18
 6287 2abe 931F      		adc r25,r19
 6288 2ac0 880F      		lsl r24
 6289 2ac2 991F      		rol r25
 6290 2ac4 880F      		lsl r24
 6291 2ac6 991F      		rol r25
 6292 2ac8 9C01      		movw r18,r24
 6293 2aca 8FA1      		ldd r24,Y+39
 6294 2acc 98A5      		ldd r25,Y+40
 6295 2ace 820F      		add r24,r18
 6296 2ad0 931F      		adc r25,r19
 6297 2ad2 2FEF      		ldi r18,lo8(-1)
 6298 2ad4 3FEF      		ldi r19,lo8(-1)
 6299 2ad6 FC01      		movw r30,r24
 6300 2ad8 3187      		std Z+9,r19
 6301 2ada 2087      		std Z+8,r18
2011:lp_solve_5.5/colamd/colamd.c **** 	    Col [c].shared4.degree_next = next_col ;
 6302               		.loc 1 2011 0
 6303 2adc 2981      		ldd r18,Y+1
 6304 2ade 3A81      		ldd r19,Y+2
 6305 2ae0 C901      		movw r24,r18
 6306 2ae2 880F      		lsl r24
 6307 2ae4 991F      		rol r25
 6308 2ae6 820F      		add r24,r18
 6309 2ae8 931F      		adc r25,r19
 6310 2aea 880F      		lsl r24
 6311 2aec 991F      		rol r25
 6312 2aee 880F      		lsl r24
 6313 2af0 991F      		rol r25
 6314 2af2 9C01      		movw r18,r24
 6315 2af4 8FA1      		ldd r24,Y+39
 6316 2af6 98A5      		ldd r25,Y+40
 6317 2af8 820F      		add r24,r18
 6318 2afa 931F      		adc r25,r19
 6319 2afc 2F8D      		ldd r18,Y+31
 6320 2afe 38A1      		ldd r19,Y+32
 6321 2b00 FC01      		movw r30,r24
 6322 2b02 3387      		std Z+11,r19
 6323 2b04 2287      		std Z+10,r18
2012:lp_solve_5.5/colamd/colamd.c **** 
2013:lp_solve_5.5/colamd/colamd.c **** 	    /* if there already was a column with the same score, set its */
2014:lp_solve_5.5/colamd/colamd.c **** 	    /* previous pointer to this new column */
2015:lp_solve_5.5/colamd/colamd.c **** 	    if (next_col != EMPTY)
 6324               		.loc 1 2015 0
 6325 2b06 8F8D      		ldd r24,Y+31
 6326 2b08 98A1      		ldd r25,Y+32
 6327 2b0a 0196      		adiw r24,1
 6328 2b0c 01F0      		breq .L167
2016:lp_solve_5.5/colamd/colamd.c **** 	    {
2017:lp_solve_5.5/colamd/colamd.c **** 		Col [next_col].shared3.prev = c ;
 6329               		.loc 1 2017 0
 6330 2b0e 2F8D      		ldd r18,Y+31
 6331 2b10 38A1      		ldd r19,Y+32
 6332 2b12 C901      		movw r24,r18
 6333 2b14 880F      		lsl r24
 6334 2b16 991F      		rol r25
 6335 2b18 820F      		add r24,r18
 6336 2b1a 931F      		adc r25,r19
 6337 2b1c 880F      		lsl r24
 6338 2b1e 991F      		rol r25
 6339 2b20 880F      		lsl r24
 6340 2b22 991F      		rol r25
 6341 2b24 9C01      		movw r18,r24
 6342 2b26 8FA1      		ldd r24,Y+39
 6343 2b28 98A5      		ldd r25,Y+40
 6344 2b2a 820F      		add r24,r18
 6345 2b2c 931F      		adc r25,r19
 6346 2b2e 2981      		ldd r18,Y+1
 6347 2b30 3A81      		ldd r19,Y+2
 6348 2b32 FC01      		movw r30,r24
 6349 2b34 3187      		std Z+9,r19
 6350 2b36 2087      		std Z+8,r18
 6351               	.L167:
2018:lp_solve_5.5/colamd/colamd.c **** 	    }
2019:lp_solve_5.5/colamd/colamd.c **** 	    head [score] = c ;
 6352               		.loc 1 2019 0
 6353 2b38 8985      		ldd r24,Y+9
 6354 2b3a 9A85      		ldd r25,Y+10
 6355 2b3c 880F      		lsl r24
 6356 2b3e 991F      		rol r25
 6357 2b40 2BA5      		ldd r18,Y+43
 6358 2b42 3CA5      		ldd r19,Y+44
 6359 2b44 820F      		add r24,r18
 6360 2b46 931F      		adc r25,r19
 6361 2b48 2981      		ldd r18,Y+1
 6362 2b4a 3A81      		ldd r19,Y+2
 6363 2b4c FC01      		movw r30,r24
 6364 2b4e 3183      		std Z+1,r19
 6365 2b50 2083      		st Z,r18
2020:lp_solve_5.5/colamd/colamd.c **** 
2021:lp_solve_5.5/colamd/colamd.c **** 	    /* see if this score is less than current min */
2022:lp_solve_5.5/colamd/colamd.c **** 	    min_score = MIN (min_score, score) ;
 6366               		.loc 1 2022 0
 6367 2b52 2F85      		ldd r18,Y+15
 6368 2b54 3889      		ldd r19,Y+16
 6369 2b56 8985      		ldd r24,Y+9
 6370 2b58 9A85      		ldd r25,Y+10
 6371 2b5a 2817      		cp r18,r24
 6372 2b5c 3907      		cpc r19,r25
 6373 2b5e 04F4      		brge .L168
 6374 2b60 C901      		movw r24,r18
 6375               	.L168:
 6376 2b62 988B      		std Y+16,r25
 6377 2b64 8F87      		std Y+15,r24
 6378               	.L166:
1990:lp_solve_5.5/colamd/colamd.c ****     {
 6379               		.loc 1 1990 0 discriminator 2
 6380 2b66 8981      		ldd r24,Y+1
 6381 2b68 9A81      		ldd r25,Y+2
 6382 2b6a 0197      		sbiw r24,1
 6383 2b6c 9A83      		std Y+2,r25
 6384 2b6e 8983      		std Y+1,r24
 6385               	.L165:
1990:lp_solve_5.5/colamd/colamd.c ****     {
 6386               		.loc 1 1990 0 is_stmt 0 discriminator 1
 6387 2b70 8981      		ldd r24,Y+1
 6388 2b72 9A81      		ldd r25,Y+2
 6389 2b74 9923      		tst r25
 6390 2b76 04F0      		brlt .+2
 6391 2b78 00C0      		rjmp .L169
2023:lp_solve_5.5/colamd/colamd.c **** 
2024:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
2025:lp_solve_5.5/colamd/colamd.c **** 	    debug_count++ ;
2026:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
2027:lp_solve_5.5/colamd/colamd.c **** 
2028:lp_solve_5.5/colamd/colamd.c **** 	}
2029:lp_solve_5.5/colamd/colamd.c ****     }
2030:lp_solve_5.5/colamd/colamd.c **** 
2031:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
2032:lp_solve_5.5/colamd/colamd.c ****     DEBUG1 (("colamd: Live cols %d out of %d, non-princ: %d\n",
2033:lp_solve_5.5/colamd/colamd.c **** 	debug_count, n_col, n_col-debug_count)) ;
2034:lp_solve_5.5/colamd/colamd.c ****     ASSERT (debug_count == n_col2) ;
2035:lp_solve_5.5/colamd/colamd.c ****     debug_deg_lists (n_row, n_col, Row, Col, head, min_score, n_col2, max_deg) ;
2036:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
2037:lp_solve_5.5/colamd/colamd.c **** 
2038:lp_solve_5.5/colamd/colamd.c ****     /* === Return number of remaining columns, and max row degree =========== */
2039:lp_solve_5.5/colamd/colamd.c **** 
2040:lp_solve_5.5/colamd/colamd.c ****     *p_n_col2 = n_col2 ;
 6392               		.loc 1 2040 0 is_stmt 1
 6393 2b7a 89A9      		ldd r24,Y+49
 6394 2b7c 9AA9      		ldd r25,Y+50
 6395 2b7e 2B85      		ldd r18,Y+11
 6396 2b80 3C85      		ldd r19,Y+12
 6397 2b82 FC01      		movw r30,r24
 6398 2b84 3183      		std Z+1,r19
 6399 2b86 2083      		st Z,r18
2041:lp_solve_5.5/colamd/colamd.c ****     *p_n_row2 = n_row2 ;
 6400               		.loc 1 2041 0
 6401 2b88 8FA5      		ldd r24,Y+47
 6402 2b8a 98A9      		ldd r25,Y+48
 6403 2b8c 2D85      		ldd r18,Y+13
 6404 2b8e 3E85      		ldd r19,Y+14
 6405 2b90 FC01      		movw r30,r24
 6406 2b92 3183      		std Z+1,r19
 6407 2b94 2083      		st Z,r18
2042:lp_solve_5.5/colamd/colamd.c ****     *p_max_deg = max_deg ;
 6408               		.loc 1 2042 0
 6409 2b96 2396      		adiw r28,65-62
 6410 2b98 8EAD      		ldd r24,Y+62
 6411 2b9a 9FAD      		ldd r25,Y+63
 6412 2b9c 2397      		sbiw r28,65-62
 6413 2b9e 2989      		ldd r18,Y+17
 6414 2ba0 3A89      		ldd r19,Y+18
 6415 2ba2 FC01      		movw r30,r24
 6416 2ba4 3183      		std Z+1,r19
 6417 2ba6 2083      		st Z,r18
2043:lp_solve_5.5/colamd/colamd.c **** }
 6418               		.loc 1 2043 0
 6419 2ba8 0000      		nop
 6420               	/* epilogue start */
 6421 2baa E296      		adiw r28,50
 6422 2bac 0FB6      		in __tmp_reg__,__SREG__
 6423 2bae F894      		cli
 6424 2bb0 DEBF      		out __SP_H__,r29
 6425 2bb2 0FBE      		out __SREG__,__tmp_reg__
 6426 2bb4 CDBF      		out __SP_L__,r28
 6427 2bb6 DF91      		pop r29
 6428 2bb8 CF91      		pop r28
 6429 2bba 1F91      		pop r17
 6430 2bbc 0F91      		pop r16
 6431 2bbe FF90      		pop r15
 6432 2bc0 EF90      		pop r14
 6433 2bc2 DF90      		pop r13
 6434 2bc4 CF90      		pop r12
 6435 2bc6 BF90      		pop r11
 6436 2bc8 AF90      		pop r10
 6437 2bca 9F90      		pop r9
 6438 2bcc 8F90      		pop r8
 6439 2bce 0895      		ret
 6440               		.cfi_endproc
 6441               	.LFE12:
 6444               	find_ordering:
 6445               	.LFB13:
2044:lp_solve_5.5/colamd/colamd.c **** 
2045:lp_solve_5.5/colamd/colamd.c **** 
2046:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
2047:lp_solve_5.5/colamd/colamd.c **** /* === find_ordering ======================================================== */
2048:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
2049:lp_solve_5.5/colamd/colamd.c **** 
2050:lp_solve_5.5/colamd/colamd.c **** /*
2051:lp_solve_5.5/colamd/colamd.c ****     Order the principal columns of the supercolumn form of the matrix
2052:lp_solve_5.5/colamd/colamd.c ****     (no supercolumns on input).  Uses a minimum approximate column minimum
2053:lp_solve_5.5/colamd/colamd.c ****     degree ordering method.  Not user-callable.
2054:lp_solve_5.5/colamd/colamd.c **** */
2055:lp_solve_5.5/colamd/colamd.c **** 
2056:lp_solve_5.5/colamd/colamd.c **** PRIVATE int find_ordering	/* return the number of garbage collections */
2057:lp_solve_5.5/colamd/colamd.c **** (
2058:lp_solve_5.5/colamd/colamd.c ****     /* === Parameters ======================================================= */
2059:lp_solve_5.5/colamd/colamd.c **** 
2060:lp_solve_5.5/colamd/colamd.c ****     int n_row,			/* number of rows of A */
2061:lp_solve_5.5/colamd/colamd.c ****     int n_col,			/* number of columns of A */
2062:lp_solve_5.5/colamd/colamd.c ****     int Alen,			/* size of A, 2*nnz + n_col or larger */
2063:lp_solve_5.5/colamd/colamd.c ****     Colamd_Row Row [],		/* of size n_row+1 */
2064:lp_solve_5.5/colamd/colamd.c ****     Colamd_Col Col [],		/* of size n_col+1 */
2065:lp_solve_5.5/colamd/colamd.c ****     int A [],			/* column form and row form of A */
2066:lp_solve_5.5/colamd/colamd.c ****     int head [],		/* of size n_col+1 */
2067:lp_solve_5.5/colamd/colamd.c ****     int n_col2,			/* Remaining columns to order */
2068:lp_solve_5.5/colamd/colamd.c ****     int max_deg,		/* Maximum row degree */
2069:lp_solve_5.5/colamd/colamd.c ****     int pfree			/* index of first free slot (2*nnz on entry) */
2070:lp_solve_5.5/colamd/colamd.c **** )
2071:lp_solve_5.5/colamd/colamd.c **** {
 6446               		.loc 1 2071 0
 6447               		.cfi_startproc
 6448 2bd0 8F92      		push r8
 6449               	.LCFI66:
 6450               		.cfi_def_cfa_offset 3
 6451               		.cfi_offset 8, -2
 6452 2bd2 9F92      		push r9
 6453               	.LCFI67:
 6454               		.cfi_def_cfa_offset 4
 6455               		.cfi_offset 9, -3
 6456 2bd4 AF92      		push r10
 6457               	.LCFI68:
 6458               		.cfi_def_cfa_offset 5
 6459               		.cfi_offset 10, -4
 6460 2bd6 BF92      		push r11
 6461               	.LCFI69:
 6462               		.cfi_def_cfa_offset 6
 6463               		.cfi_offset 11, -5
 6464 2bd8 CF92      		push r12
 6465               	.LCFI70:
 6466               		.cfi_def_cfa_offset 7
 6467               		.cfi_offset 12, -6
 6468 2bda DF92      		push r13
 6469               	.LCFI71:
 6470               		.cfi_def_cfa_offset 8
 6471               		.cfi_offset 13, -7
 6472 2bdc EF92      		push r14
 6473               	.LCFI72:
 6474               		.cfi_def_cfa_offset 9
 6475               		.cfi_offset 14, -8
 6476 2bde FF92      		push r15
 6477               	.LCFI73:
 6478               		.cfi_def_cfa_offset 10
 6479               		.cfi_offset 15, -9
 6480 2be0 0F93      		push r16
 6481               	.LCFI74:
 6482               		.cfi_def_cfa_offset 11
 6483               		.cfi_offset 16, -10
 6484 2be2 1F93      		push r17
 6485               	.LCFI75:
 6486               		.cfi_def_cfa_offset 12
 6487               		.cfi_offset 17, -11
 6488 2be4 CF93      		push r28
 6489               	.LCFI76:
 6490               		.cfi_def_cfa_offset 13
 6491               		.cfi_offset 28, -12
 6492 2be6 DF93      		push r29
 6493               	.LCFI77:
 6494               		.cfi_def_cfa_offset 14
 6495               		.cfi_offset 29, -13
 6496 2be8 CDB7      		in r28,__SP_L__
 6497 2bea DEB7      		in r29,__SP_H__
 6498               	.LCFI78:
 6499               		.cfi_def_cfa_register 28
 6500 2bec C255      		subi r28,82
 6501 2bee D109      		sbc r29,__zero_reg__
 6502               	.LCFI79:
 6503               		.cfi_def_cfa_offset 96
 6504 2bf0 0FB6      		in __tmp_reg__,__SREG__
 6505 2bf2 F894      		cli
 6506 2bf4 DEBF      		out __SP_H__,r29
 6507 2bf6 0FBE      		out __SREG__,__tmp_reg__
 6508 2bf8 CDBF      		out __SP_L__,r28
 6509               	/* prologue: function */
 6510               	/* frame size = 82 */
 6511               	/* stack size = 94 */
 6512               	.L__stack_usage = 94
 6513 2bfa FE01      		movw r30,r28
 6514 2bfc FF96      		adiw r30,63
 6515 2bfe 9183      		std Z+1,r25
 6516 2c00 8083      		st Z,r24
 6517 2c02 CE01      		movw r24,r28
 6518 2c04 8F5B      		subi r24,-65
 6519 2c06 9F4F      		sbci r25,-1
 6520 2c08 DC01      		movw r26,r24
 6521 2c0a 6D93      		st X+,r22
 6522 2c0c 7C93      		st X,r23
 6523 2c0e CE01      		movw r24,r28
 6524 2c10 8D5B      		subi r24,-67
 6525 2c12 9F4F      		sbci r25,-1
 6526 2c14 FC01      		movw r30,r24
 6527 2c16 5183      		std Z+1,r21
 6528 2c18 4083      		st Z,r20
 6529 2c1a CE01      		movw r24,r28
 6530 2c1c 8B5B      		subi r24,-69
 6531 2c1e 9F4F      		sbci r25,-1
 6532 2c20 DC01      		movw r26,r24
 6533 2c22 2D93      		st X+,r18
 6534 2c24 3C93      		st X,r19
 6535 2c26 CE01      		movw r24,r28
 6536 2c28 895B      		subi r24,-71
 6537 2c2a 9F4F      		sbci r25,-1
 6538 2c2c FC01      		movw r30,r24
 6539 2c2e 1183      		std Z+1,r17
 6540 2c30 0083      		st Z,r16
 6541 2c32 CE01      		movw r24,r28
 6542 2c34 875B      		subi r24,-73
 6543 2c36 9F4F      		sbci r25,-1
 6544 2c38 DC01      		movw r26,r24
 6545 2c3a ED92      		st X+,r14
 6546 2c3c FC92      		st X,r15
 6547 2c3e CE01      		movw r24,r28
 6548 2c40 855B      		subi r24,-75
 6549 2c42 9F4F      		sbci r25,-1
 6550 2c44 FC01      		movw r30,r24
 6551 2c46 D182      		std Z+1,r13
 6552 2c48 C082      		st Z,r12
 6553 2c4a CE01      		movw r24,r28
 6554 2c4c 835B      		subi r24,-77
 6555 2c4e 9F4F      		sbci r25,-1
 6556 2c50 DC01      		movw r26,r24
 6557 2c52 AD92      		st X+,r10
 6558 2c54 BC92      		st X,r11
 6559 2c56 CE01      		movw r24,r28
 6560 2c58 815B      		subi r24,-79
 6561 2c5a 9F4F      		sbci r25,-1
 6562 2c5c FC01      		movw r30,r24
 6563 2c5e 9182      		std Z+1,r9
 6564 2c60 8082      		st Z,r8
2072:lp_solve_5.5/colamd/colamd.c ****     /* === Local variables ================================================== */
2073:lp_solve_5.5/colamd/colamd.c **** 
2074:lp_solve_5.5/colamd/colamd.c ****     int k ;			/* current pivot ordering step */
2075:lp_solve_5.5/colamd/colamd.c ****     int pivot_col ;		/* current pivot column */
2076:lp_solve_5.5/colamd/colamd.c ****     int *cp ;			/* a column pointer */
2077:lp_solve_5.5/colamd/colamd.c ****     int *rp ;			/* a row pointer */
2078:lp_solve_5.5/colamd/colamd.c ****     int pivot_row ;		/* current pivot row */
2079:lp_solve_5.5/colamd/colamd.c ****     int *new_cp ;		/* modified column pointer */
2080:lp_solve_5.5/colamd/colamd.c ****     int *new_rp ;		/* modified row pointer */
2081:lp_solve_5.5/colamd/colamd.c ****     int pivot_row_start ;	/* pointer to start of pivot row */
2082:lp_solve_5.5/colamd/colamd.c ****     int pivot_row_degree ;	/* number of columns in pivot row */
2083:lp_solve_5.5/colamd/colamd.c ****     int pivot_row_length ;	/* number of supercolumns in pivot row */
2084:lp_solve_5.5/colamd/colamd.c ****     int pivot_col_score ;	/* score of pivot column */
2085:lp_solve_5.5/colamd/colamd.c ****     int needed_memory ;		/* free space needed for pivot row */
2086:lp_solve_5.5/colamd/colamd.c ****     int *cp_end ;		/* pointer to the end of a column */
2087:lp_solve_5.5/colamd/colamd.c ****     int *rp_end ;		/* pointer to the end of a row */
2088:lp_solve_5.5/colamd/colamd.c ****     int row ;			/* a row index */
2089:lp_solve_5.5/colamd/colamd.c ****     int col ;			/* a column index */
2090:lp_solve_5.5/colamd/colamd.c ****     int max_score ;		/* maximum possible score */
2091:lp_solve_5.5/colamd/colamd.c ****     int cur_score ;		/* score of current column */
2092:lp_solve_5.5/colamd/colamd.c ****     unsigned int hash ;		/* hash value for supernode detection */
2093:lp_solve_5.5/colamd/colamd.c ****     int head_column ;		/* head of hash bucket */
2094:lp_solve_5.5/colamd/colamd.c ****     int first_col ;		/* first column in hash bucket */
2095:lp_solve_5.5/colamd/colamd.c ****     int tag_mark ;		/* marker value for mark array */
2096:lp_solve_5.5/colamd/colamd.c ****     int row_mark ;		/* Row [row].shared2.mark */
2097:lp_solve_5.5/colamd/colamd.c ****     int set_difference ;	/* set difference size of row with pivot row */
2098:lp_solve_5.5/colamd/colamd.c ****     int min_score ;		/* smallest column score */
2099:lp_solve_5.5/colamd/colamd.c ****     int col_thickness ;		/* "thickness" (no. of columns in a supercol) */
2100:lp_solve_5.5/colamd/colamd.c ****     int max_mark ;		/* maximum value of tag_mark */
2101:lp_solve_5.5/colamd/colamd.c ****     int pivot_col_thickness ;	/* number of columns represented by pivot col */
2102:lp_solve_5.5/colamd/colamd.c ****     int prev_col ;		/* Used by Dlist operations. */
2103:lp_solve_5.5/colamd/colamd.c ****     int next_col ;		/* Used by Dlist operations. */
2104:lp_solve_5.5/colamd/colamd.c ****     int ngarbage ;		/* number of garbage collections performed */
2105:lp_solve_5.5/colamd/colamd.c **** 
2106:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
2107:lp_solve_5.5/colamd/colamd.c ****     int debug_d ;		/* debug loop counter */
2108:lp_solve_5.5/colamd/colamd.c ****     int debug_step = 0 ;	/* debug loop counter */
2109:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
2110:lp_solve_5.5/colamd/colamd.c **** 
2111:lp_solve_5.5/colamd/colamd.c ****     /* === Initialization and clear mark ==================================== */
2112:lp_solve_5.5/colamd/colamd.c **** 
2113:lp_solve_5.5/colamd/colamd.c ****     max_mark = INT_MAX - n_col ;	/* INT_MAX defined in <limits.h> */
 6565               		.loc 1 2113 0
 6566 2c62 CE01      		movw r24,r28
 6567 2c64 8F5B      		subi r24,-65
 6568 2c66 9F4F      		sbci r25,-1
 6569 2c68 2FEF      		ldi r18,lo8(-1)
 6570 2c6a 3FE7      		ldi r19,lo8(127)
 6571 2c6c DC01      		movw r26,r24
 6572 2c6e 8D91      		ld r24,X+
 6573 2c70 9C91      		ld r25,X
 6574 2c72 F901      		movw r30,r18
 6575 2c74 E81B      		sub r30,r24
 6576 2c76 F90B      		sbc r31,r25
 6577 2c78 CF01      		movw r24,r30
 6578 2c7a 9E8F      		std Y+30,r25
 6579 2c7c 8D8F      		std Y+29,r24
2114:lp_solve_5.5/colamd/colamd.c ****     tag_mark = clear_mark (n_row, Row) ;
 6580               		.loc 1 2114 0
 6581 2c7e CE01      		movw r24,r28
 6582 2c80 8B5B      		subi r24,-69
 6583 2c82 9F4F      		sbci r25,-1
 6584 2c84 DC01      		movw r26,r24
 6585 2c86 2D91      		ld r18,X+
 6586 2c88 3C91      		ld r19,X
 6587 2c8a CE01      		movw r24,r28
 6588 2c8c CF96      		adiw r24,63
 6589 2c8e FC01      		movw r30,r24
 6590 2c90 8081      		ld r24,Z
 6591 2c92 9181      		ldd r25,Z+1
 6592 2c94 B901      		movw r22,r18
 6593 2c96 0E94 0000 		call clear_mark
 6594 2c9a 9E8B      		std Y+22,r25
 6595 2c9c 8D8B      		std Y+21,r24
2115:lp_solve_5.5/colamd/colamd.c ****     min_score = 0 ;
 6596               		.loc 1 2115 0
 6597 2c9e 1A8E      		std Y+26,__zero_reg__
 6598 2ca0 198E      		std Y+25,__zero_reg__
2116:lp_solve_5.5/colamd/colamd.c ****     ngarbage = 0 ;
 6599               		.loc 1 2116 0
 6600 2ca2 1C8E      		std Y+28,__zero_reg__
 6601 2ca4 1B8E      		std Y+27,__zero_reg__
2117:lp_solve_5.5/colamd/colamd.c ****     DEBUG1 (("colamd: Ordering, n_col2=%d\n", n_col2)) ;
2118:lp_solve_5.5/colamd/colamd.c **** 
2119:lp_solve_5.5/colamd/colamd.c ****     /* === Order the columns ================================================ */
2120:lp_solve_5.5/colamd/colamd.c **** 
2121:lp_solve_5.5/colamd/colamd.c ****     for (k = 0 ; k < n_col2 ; /* 'k' is incremented below */)
 6602               		.loc 1 2121 0
 6603 2ca6 1A82      		std Y+2,__zero_reg__
 6604 2ca8 1982      		std Y+1,__zero_reg__
 6605 2caa 0C94 0000 		jmp .L181
 6606               	.L184:
2122:lp_solve_5.5/colamd/colamd.c ****     {
2123:lp_solve_5.5/colamd/colamd.c **** 
2124:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
2125:lp_solve_5.5/colamd/colamd.c **** 	if (debug_step % 100 == 0)
2126:lp_solve_5.5/colamd/colamd.c **** 	{
2127:lp_solve_5.5/colamd/colamd.c **** 	    DEBUG2 (("\n...       Step k: %d out of n_col2: %d\n", k, n_col2)) ;
2128:lp_solve_5.5/colamd/colamd.c **** 	}
2129:lp_solve_5.5/colamd/colamd.c **** 	else
2130:lp_solve_5.5/colamd/colamd.c **** 	{
2131:lp_solve_5.5/colamd/colamd.c **** 	    DEBUG3 (("\n----------Step k: %d out of n_col2: %d\n", k, n_col2)) ;
2132:lp_solve_5.5/colamd/colamd.c **** 	}
2133:lp_solve_5.5/colamd/colamd.c **** 	debug_step++ ;
2134:lp_solve_5.5/colamd/colamd.c **** 	debug_deg_lists (n_row, n_col, Row, Col, head,
2135:lp_solve_5.5/colamd/colamd.c **** 		min_score, n_col2-k, max_deg) ;
2136:lp_solve_5.5/colamd/colamd.c **** 	debug_matrix (n_row, n_col, Row, Col, A) ;
2137:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
2138:lp_solve_5.5/colamd/colamd.c **** 
2139:lp_solve_5.5/colamd/colamd.c **** 	/* === Select pivot column, and order it ============================ */
2140:lp_solve_5.5/colamd/colamd.c **** 
2141:lp_solve_5.5/colamd/colamd.c **** 	/* make sure degree list isn't empty */
2142:lp_solve_5.5/colamd/colamd.c **** 	ASSERT (min_score >= 0) ;
2143:lp_solve_5.5/colamd/colamd.c **** 	ASSERT (min_score <= n_col) ;
2144:lp_solve_5.5/colamd/colamd.c **** 	ASSERT (head [min_score] >= EMPTY) ;
2145:lp_solve_5.5/colamd/colamd.c **** 
2146:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
2147:lp_solve_5.5/colamd/colamd.c **** 	for (debug_d = 0 ; debug_d < min_score ; debug_d++)
2148:lp_solve_5.5/colamd/colamd.c **** 	{
2149:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (head [debug_d] == EMPTY) ;
2150:lp_solve_5.5/colamd/colamd.c **** 	}
2151:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
2152:lp_solve_5.5/colamd/colamd.c **** 
2153:lp_solve_5.5/colamd/colamd.c **** 	/* get pivot column from head of minimum degree list */
2154:lp_solve_5.5/colamd/colamd.c **** 	while (head [min_score] == EMPTY && min_score < n_col)
2155:lp_solve_5.5/colamd/colamd.c **** 	{
2156:lp_solve_5.5/colamd/colamd.c **** 	    min_score++ ;
 6607               		.loc 1 2156 0
 6608 2cae 898D      		ldd r24,Y+25
 6609 2cb0 9A8D      		ldd r25,Y+26
 6610 2cb2 0196      		adiw r24,1
 6611 2cb4 9A8F      		std Y+26,r25
 6612 2cb6 898F      		std Y+25,r24
 6613               	.L182:
2154:lp_solve_5.5/colamd/colamd.c **** 	{
 6614               		.loc 1 2154 0
 6615 2cb8 898D      		ldd r24,Y+25
 6616 2cba 9A8D      		ldd r25,Y+26
 6617 2cbc 880F      		lsl r24
 6618 2cbe 991F      		rol r25
 6619 2cc0 9E01      		movw r18,r28
 6620 2cc2 255B      		subi r18,-75
 6621 2cc4 3F4F      		sbci r19,-1
 6622 2cc6 D901      		movw r26,r18
 6623 2cc8 2D91      		ld r18,X+
 6624 2cca 3C91      		ld r19,X
 6625 2ccc 820F      		add r24,r18
 6626 2cce 931F      		adc r25,r19
 6627 2cd0 FC01      		movw r30,r24
 6628 2cd2 8081      		ld r24,Z
 6629 2cd4 9181      		ldd r25,Z+1
 6630 2cd6 0196      		adiw r24,1
 6631 2cd8 01F4      		brne .L183
2154:lp_solve_5.5/colamd/colamd.c **** 	{
 6632               		.loc 1 2154 0 is_stmt 0 discriminator 1
 6633 2cda CE01      		movw r24,r28
 6634 2cdc 8F5B      		subi r24,-65
 6635 2cde 9F4F      		sbci r25,-1
 6636 2ce0 298D      		ldd r18,Y+25
 6637 2ce2 3A8D      		ldd r19,Y+26
 6638 2ce4 DC01      		movw r26,r24
 6639 2ce6 8D91      		ld r24,X+
 6640 2ce8 9C91      		ld r25,X
 6641 2cea 2817      		cp r18,r24
 6642 2cec 3907      		cpc r19,r25
 6643 2cee 04F0      		brlt .L184
 6644               	.L183:
2157:lp_solve_5.5/colamd/colamd.c **** 	}
2158:lp_solve_5.5/colamd/colamd.c **** 	pivot_col = head [min_score] ;
 6645               		.loc 1 2158 0 is_stmt 1
 6646 2cf0 898D      		ldd r24,Y+25
 6647 2cf2 9A8D      		ldd r25,Y+26
 6648 2cf4 880F      		lsl r24
 6649 2cf6 991F      		rol r25
 6650 2cf8 9E01      		movw r18,r28
 6651 2cfa 255B      		subi r18,-75
 6652 2cfc 3F4F      		sbci r19,-1
 6653 2cfe F901      		movw r30,r18
 6654 2d00 2081      		ld r18,Z
 6655 2d02 3181      		ldd r19,Z+1
 6656 2d04 820F      		add r24,r18
 6657 2d06 931F      		adc r25,r19
 6658 2d08 DC01      		movw r26,r24
 6659 2d0a 8D91      		ld r24,X+
 6660 2d0c 9C91      		ld r25,X
 6661 2d0e 98A3      		std Y+32,r25
 6662 2d10 8F8F      		std Y+31,r24
2159:lp_solve_5.5/colamd/colamd.c **** 	ASSERT (pivot_col >= 0 && pivot_col <= n_col) ;
2160:lp_solve_5.5/colamd/colamd.c **** 	next_col = Col [pivot_col].shared4.degree_next ;
 6663               		.loc 1 2160 0
 6664 2d12 2F8D      		ldd r18,Y+31
 6665 2d14 38A1      		ldd r19,Y+32
 6666 2d16 C901      		movw r24,r18
 6667 2d18 880F      		lsl r24
 6668 2d1a 991F      		rol r25
 6669 2d1c 820F      		add r24,r18
 6670 2d1e 931F      		adc r25,r19
 6671 2d20 880F      		lsl r24
 6672 2d22 991F      		rol r25
 6673 2d24 880F      		lsl r24
 6674 2d26 991F      		rol r25
 6675 2d28 9C01      		movw r18,r24
 6676 2d2a CE01      		movw r24,r28
 6677 2d2c 895B      		subi r24,-71
 6678 2d2e 9F4F      		sbci r25,-1
 6679 2d30 FC01      		movw r30,r24
 6680 2d32 8081      		ld r24,Z
 6681 2d34 9181      		ldd r25,Z+1
 6682 2d36 820F      		add r24,r18
 6683 2d38 931F      		adc r25,r19
 6684 2d3a DC01      		movw r26,r24
 6685 2d3c 1A96      		adiw r26,10
 6686 2d3e 8D91      		ld r24,X+
 6687 2d40 9C91      		ld r25,X
 6688 2d42 1B97      		sbiw r26,10+1
 6689 2d44 9AA3      		std Y+34,r25
 6690 2d46 89A3      		std Y+33,r24
2161:lp_solve_5.5/colamd/colamd.c **** 	head [min_score] = next_col ;
 6691               		.loc 1 2161 0
 6692 2d48 898D      		ldd r24,Y+25
 6693 2d4a 9A8D      		ldd r25,Y+26
 6694 2d4c 880F      		lsl r24
 6695 2d4e 991F      		rol r25
 6696 2d50 9E01      		movw r18,r28
 6697 2d52 255B      		subi r18,-75
 6698 2d54 3F4F      		sbci r19,-1
 6699 2d56 F901      		movw r30,r18
 6700 2d58 2081      		ld r18,Z
 6701 2d5a 3181      		ldd r19,Z+1
 6702 2d5c 820F      		add r24,r18
 6703 2d5e 931F      		adc r25,r19
 6704 2d60 29A1      		ldd r18,Y+33
 6705 2d62 3AA1      		ldd r19,Y+34
 6706 2d64 DC01      		movw r26,r24
 6707 2d66 2D93      		st X+,r18
 6708 2d68 3C93      		st X,r19
2162:lp_solve_5.5/colamd/colamd.c **** 	if (next_col != EMPTY)
 6709               		.loc 1 2162 0
 6710 2d6a 89A1      		ldd r24,Y+33
 6711 2d6c 9AA1      		ldd r25,Y+34
 6712 2d6e 0196      		adiw r24,1
 6713 2d70 01F0      		breq .L185
2163:lp_solve_5.5/colamd/colamd.c **** 	{
2164:lp_solve_5.5/colamd/colamd.c **** 	    Col [next_col].shared3.prev = EMPTY ;
 6714               		.loc 1 2164 0
 6715 2d72 29A1      		ldd r18,Y+33
 6716 2d74 3AA1      		ldd r19,Y+34
 6717 2d76 C901      		movw r24,r18
 6718 2d78 880F      		lsl r24
 6719 2d7a 991F      		rol r25
 6720 2d7c 820F      		add r24,r18
 6721 2d7e 931F      		adc r25,r19
 6722 2d80 880F      		lsl r24
 6723 2d82 991F      		rol r25
 6724 2d84 880F      		lsl r24
 6725 2d86 991F      		rol r25
 6726 2d88 9C01      		movw r18,r24
 6727 2d8a CE01      		movw r24,r28
 6728 2d8c 895B      		subi r24,-71
 6729 2d8e 9F4F      		sbci r25,-1
 6730 2d90 FC01      		movw r30,r24
 6731 2d92 8081      		ld r24,Z
 6732 2d94 9181      		ldd r25,Z+1
 6733 2d96 820F      		add r24,r18
 6734 2d98 931F      		adc r25,r19
 6735 2d9a 2FEF      		ldi r18,lo8(-1)
 6736 2d9c 3FEF      		ldi r19,lo8(-1)
 6737 2d9e DC01      		movw r26,r24
 6738 2da0 1996      		adiw r26,8+1
 6739 2da2 3C93      		st X,r19
 6740 2da4 2E93      		st -X,r18
 6741 2da6 1897      		sbiw r26,8
 6742               	.L185:
2165:lp_solve_5.5/colamd/colamd.c **** 	}
2166:lp_solve_5.5/colamd/colamd.c **** 
2167:lp_solve_5.5/colamd/colamd.c **** 	ASSERT (COL_IS_ALIVE (pivot_col)) ;
2168:lp_solve_5.5/colamd/colamd.c **** 	DEBUG3 (("Pivot col: %d\n", pivot_col)) ;
2169:lp_solve_5.5/colamd/colamd.c **** 
2170:lp_solve_5.5/colamd/colamd.c **** 	/* remember score for defrag check */
2171:lp_solve_5.5/colamd/colamd.c **** 	pivot_col_score = Col [pivot_col].shared2.score ;
 6743               		.loc 1 2171 0
 6744 2da8 2F8D      		ldd r18,Y+31
 6745 2daa 38A1      		ldd r19,Y+32
 6746 2dac C901      		movw r24,r18
 6747 2dae 880F      		lsl r24
 6748 2db0 991F      		rol r25
 6749 2db2 820F      		add r24,r18
 6750 2db4 931F      		adc r25,r19
 6751 2db6 880F      		lsl r24
 6752 2db8 991F      		rol r25
 6753 2dba 880F      		lsl r24
 6754 2dbc 991F      		rol r25
 6755 2dbe 9C01      		movw r18,r24
 6756 2dc0 CE01      		movw r24,r28
 6757 2dc2 895B      		subi r24,-71
 6758 2dc4 9F4F      		sbci r25,-1
 6759 2dc6 FC01      		movw r30,r24
 6760 2dc8 8081      		ld r24,Z
 6761 2dca 9181      		ldd r25,Z+1
 6762 2dcc 820F      		add r24,r18
 6763 2dce 931F      		adc r25,r19
 6764 2dd0 DC01      		movw r26,r24
 6765 2dd2 1696      		adiw r26,6
 6766 2dd4 8D91      		ld r24,X+
 6767 2dd6 9C91      		ld r25,X
 6768 2dd8 1797      		sbiw r26,6+1
 6769 2dda 9CA3      		std Y+36,r25
 6770 2ddc 8BA3      		std Y+35,r24
2172:lp_solve_5.5/colamd/colamd.c **** 
2173:lp_solve_5.5/colamd/colamd.c **** 	/* the pivot column is the kth column in the pivot order */
2174:lp_solve_5.5/colamd/colamd.c **** 	Col [pivot_col].shared2.order = k ;
 6771               		.loc 1 2174 0
 6772 2dde 2F8D      		ldd r18,Y+31
 6773 2de0 38A1      		ldd r19,Y+32
 6774 2de2 C901      		movw r24,r18
 6775 2de4 880F      		lsl r24
 6776 2de6 991F      		rol r25
 6777 2de8 820F      		add r24,r18
 6778 2dea 931F      		adc r25,r19
 6779 2dec 880F      		lsl r24
 6780 2dee 991F      		rol r25
 6781 2df0 880F      		lsl r24
 6782 2df2 991F      		rol r25
 6783 2df4 9C01      		movw r18,r24
 6784 2df6 CE01      		movw r24,r28
 6785 2df8 895B      		subi r24,-71
 6786 2dfa 9F4F      		sbci r25,-1
 6787 2dfc FC01      		movw r30,r24
 6788 2dfe 8081      		ld r24,Z
 6789 2e00 9181      		ldd r25,Z+1
 6790 2e02 820F      		add r24,r18
 6791 2e04 931F      		adc r25,r19
 6792 2e06 2981      		ldd r18,Y+1
 6793 2e08 3A81      		ldd r19,Y+2
 6794 2e0a DC01      		movw r26,r24
 6795 2e0c 1796      		adiw r26,6+1
 6796 2e0e 3C93      		st X,r19
 6797 2e10 2E93      		st -X,r18
 6798 2e12 1697      		sbiw r26,6
2175:lp_solve_5.5/colamd/colamd.c **** 
2176:lp_solve_5.5/colamd/colamd.c **** 	/* increment order count by column thickness */
2177:lp_solve_5.5/colamd/colamd.c **** 	pivot_col_thickness = Col [pivot_col].shared1.thickness ;
 6799               		.loc 1 2177 0
 6800 2e14 2F8D      		ldd r18,Y+31
 6801 2e16 38A1      		ldd r19,Y+32
 6802 2e18 C901      		movw r24,r18
 6803 2e1a 880F      		lsl r24
 6804 2e1c 991F      		rol r25
 6805 2e1e 820F      		add r24,r18
 6806 2e20 931F      		adc r25,r19
 6807 2e22 880F      		lsl r24
 6808 2e24 991F      		rol r25
 6809 2e26 880F      		lsl r24
 6810 2e28 991F      		rol r25
 6811 2e2a 9C01      		movw r18,r24
 6812 2e2c CE01      		movw r24,r28
 6813 2e2e 895B      		subi r24,-71
 6814 2e30 9F4F      		sbci r25,-1
 6815 2e32 FC01      		movw r30,r24
 6816 2e34 8081      		ld r24,Z
 6817 2e36 9181      		ldd r25,Z+1
 6818 2e38 820F      		add r24,r18
 6819 2e3a 931F      		adc r25,r19
 6820 2e3c DC01      		movw r26,r24
 6821 2e3e 1496      		adiw r26,4
 6822 2e40 8D91      		ld r24,X+
 6823 2e42 9C91      		ld r25,X
 6824 2e44 1597      		sbiw r26,4+1
 6825 2e46 9EA3      		std Y+38,r25
 6826 2e48 8DA3      		std Y+37,r24
2178:lp_solve_5.5/colamd/colamd.c **** 	k += pivot_col_thickness ;
 6827               		.loc 1 2178 0
 6828 2e4a 2981      		ldd r18,Y+1
 6829 2e4c 3A81      		ldd r19,Y+2
 6830 2e4e 8DA1      		ldd r24,Y+37
 6831 2e50 9EA1      		ldd r25,Y+38
 6832 2e52 820F      		add r24,r18
 6833 2e54 931F      		adc r25,r19
 6834 2e56 9A83      		std Y+2,r25
 6835 2e58 8983      		std Y+1,r24
2179:lp_solve_5.5/colamd/colamd.c **** 	ASSERT (pivot_col_thickness > 0) ;
2180:lp_solve_5.5/colamd/colamd.c **** 
2181:lp_solve_5.5/colamd/colamd.c **** 	/* === Garbage_collection, if necessary ============================= */
2182:lp_solve_5.5/colamd/colamd.c **** 
2183:lp_solve_5.5/colamd/colamd.c **** 	needed_memory = MIN (pivot_col_score, n_col - k) ;
 6836               		.loc 1 2183 0
 6837 2e5a CE01      		movw r24,r28
 6838 2e5c 8F5B      		subi r24,-65
 6839 2e5e 9F4F      		sbci r25,-1
 6840 2e60 FC01      		movw r30,r24
 6841 2e62 2081      		ld r18,Z
 6842 2e64 3181      		ldd r19,Z+1
 6843 2e66 8981      		ldd r24,Y+1
 6844 2e68 9A81      		ldd r25,Y+2
 6845 2e6a A901      		movw r20,r18
 6846 2e6c 481B      		sub r20,r24
 6847 2e6e 590B      		sbc r21,r25
 6848 2e70 CA01      		movw r24,r20
 6849 2e72 2BA1      		ldd r18,Y+35
 6850 2e74 3CA1      		ldd r19,Y+36
 6851 2e76 2817      		cp r18,r24
 6852 2e78 3907      		cpc r19,r25
 6853 2e7a 04F4      		brge .L186
 6854 2e7c C901      		movw r24,r18
 6855               	.L186:
 6856 2e7e 98A7      		std Y+40,r25
 6857 2e80 8FA3      		std Y+39,r24
2184:lp_solve_5.5/colamd/colamd.c **** 	if (pfree + needed_memory >= Alen)
 6858               		.loc 1 2184 0
 6859 2e82 A396      		adiw r28,97-62
 6860 2e84 2EAD      		ldd r18,Y+62
 6861 2e86 3FAD      		ldd r19,Y+63
 6862 2e88 A397      		sbiw r28,97-62
 6863 2e8a 8FA1      		ldd r24,Y+39
 6864 2e8c 98A5      		ldd r25,Y+40
 6865 2e8e 280F      		add r18,r24
 6866 2e90 391F      		adc r19,r25
 6867 2e92 CE01      		movw r24,r28
 6868 2e94 8D5B      		subi r24,-67
 6869 2e96 9F4F      		sbci r25,-1
 6870 2e98 DC01      		movw r26,r24
 6871 2e9a 8D91      		ld r24,X+
 6872 2e9c 9C91      		ld r25,X
 6873 2e9e 2817      		cp r18,r24
 6874 2ea0 3907      		cpc r19,r25
 6875 2ea2 04F4      		brge .+2
 6876 2ea4 00C0      		rjmp .L187
2185:lp_solve_5.5/colamd/colamd.c **** 	{
2186:lp_solve_5.5/colamd/colamd.c **** 	    pfree = garbage_collection (n_row, n_col, Row, Col, A, &A [pfree]) ;
 6877               		.loc 1 2186 0
 6878 2ea6 A396      		adiw r28,97-62
 6879 2ea8 8EAD      		ldd r24,Y+62
 6880 2eaa 9FAD      		ldd r25,Y+63
 6881 2eac A397      		sbiw r28,97-62
 6882 2eae 880F      		lsl r24
 6883 2eb0 991F      		rol r25
 6884 2eb2 9E01      		movw r18,r28
 6885 2eb4 275B      		subi r18,-73
 6886 2eb6 3F4F      		sbci r19,-1
 6887 2eb8 F901      		movw r30,r18
 6888 2eba 2081      		ld r18,Z
 6889 2ebc 3181      		ldd r19,Z+1
 6890 2ebe D901      		movw r26,r18
 6891 2ec0 A80F      		add r26,r24
 6892 2ec2 B91F      		adc r27,r25
 6893 2ec4 CE01      		movw r24,r28
 6894 2ec6 875B      		subi r24,-73
 6895 2ec8 9F4F      		sbci r25,-1
 6896 2eca FC01      		movw r30,r24
 6897 2ecc 0190      		ld __tmp_reg__,Z+
 6898 2ece F081      		ld r31,Z
 6899 2ed0 E02D      		mov r30,__tmp_reg__
 6900 2ed2 6396      		adiw r28,81-62
 6901 2ed4 FFAF      		std Y+63,r31
 6902 2ed6 EEAF      		std Y+62,r30
 6903 2ed8 6397      		sbiw r28,81-62
 6904 2eda CE01      		movw r24,r28
 6905 2edc 895B      		subi r24,-71
 6906 2ede 9F4F      		sbci r25,-1
 6907 2ee0 FC01      		movw r30,r24
 6908 2ee2 2081      		ld r18,Z
 6909 2ee4 3181      		ldd r19,Z+1
 6910 2ee6 CE01      		movw r24,r28
 6911 2ee8 8B5B      		subi r24,-69
 6912 2eea 9F4F      		sbci r25,-1
 6913 2eec FC01      		movw r30,r24
 6914 2eee 4081      		ld r20,Z
 6915 2ef0 5181      		ldd r21,Z+1
 6916 2ef2 CE01      		movw r24,r28
 6917 2ef4 8F5B      		subi r24,-65
 6918 2ef6 9F4F      		sbci r25,-1
 6919 2ef8 FC01      		movw r30,r24
 6920 2efa 6081      		ld r22,Z
 6921 2efc 7181      		ldd r23,Z+1
 6922 2efe CE01      		movw r24,r28
 6923 2f00 CF96      		adiw r24,63
 6924 2f02 FC01      		movw r30,r24
 6925 2f04 8081      		ld r24,Z
 6926 2f06 9181      		ldd r25,Z+1
 6927 2f08 7D01      		movw r14,r26
 6928 2f0a 6396      		adiw r28,81-62
 6929 2f0c 0EAD      		ldd r16,Y+62
 6930 2f0e 1FAD      		ldd r17,Y+63
 6931 2f10 6397      		sbiw r28,81-62
 6932 2f12 0E94 0000 		call garbage_collection
 6933 2f16 A396      		adiw r28,97-62
 6934 2f18 9FAF      		std Y+63,r25
 6935 2f1a 8EAF      		std Y+62,r24
 6936 2f1c A397      		sbiw r28,97-62
2187:lp_solve_5.5/colamd/colamd.c **** 	    ngarbage++ ;
 6937               		.loc 1 2187 0
 6938 2f1e 8B8D      		ldd r24,Y+27
 6939 2f20 9C8D      		ldd r25,Y+28
 6940 2f22 0196      		adiw r24,1
 6941 2f24 9C8F      		std Y+28,r25
 6942 2f26 8B8F      		std Y+27,r24
2188:lp_solve_5.5/colamd/colamd.c **** 	    /* after garbage collection we will have enough */
2189:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (pfree + needed_memory < Alen) ;
2190:lp_solve_5.5/colamd/colamd.c **** 	    /* garbage collection has wiped out the Row[].shared2.mark array */
2191:lp_solve_5.5/colamd/colamd.c **** 	    tag_mark = clear_mark (n_row, Row) ;
 6943               		.loc 1 2191 0
 6944 2f28 CE01      		movw r24,r28
 6945 2f2a 8B5B      		subi r24,-69
 6946 2f2c 9F4F      		sbci r25,-1
 6947 2f2e DC01      		movw r26,r24
 6948 2f30 2D91      		ld r18,X+
 6949 2f32 3C91      		ld r19,X
 6950 2f34 CE01      		movw r24,r28
 6951 2f36 CF96      		adiw r24,63
 6952 2f38 FC01      		movw r30,r24
 6953 2f3a 8081      		ld r24,Z
 6954 2f3c 9181      		ldd r25,Z+1
 6955 2f3e B901      		movw r22,r18
 6956 2f40 0E94 0000 		call clear_mark
 6957 2f44 9E8B      		std Y+22,r25
 6958 2f46 8D8B      		std Y+21,r24
 6959               	.L187:
2192:lp_solve_5.5/colamd/colamd.c **** 
2193:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
2194:lp_solve_5.5/colamd/colamd.c **** 	    debug_matrix (n_row, n_col, Row, Col, A) ;
2195:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
2196:lp_solve_5.5/colamd/colamd.c **** 	}
2197:lp_solve_5.5/colamd/colamd.c **** 
2198:lp_solve_5.5/colamd/colamd.c **** 	/* === Compute pivot row pattern ==================================== */
2199:lp_solve_5.5/colamd/colamd.c **** 
2200:lp_solve_5.5/colamd/colamd.c **** 	/* get starting location for this new merged row */
2201:lp_solve_5.5/colamd/colamd.c **** 	pivot_row_start = pfree ;
 6960               		.loc 1 2201 0
 6961 2f48 A396      		adiw r28,97-62
 6962 2f4a 8EAD      		ldd r24,Y+62
 6963 2f4c 9FAD      		ldd r25,Y+63
 6964 2f4e A397      		sbiw r28,97-62
 6965 2f50 9AA7      		std Y+42,r25
 6966 2f52 89A7      		std Y+41,r24
2202:lp_solve_5.5/colamd/colamd.c **** 
2203:lp_solve_5.5/colamd/colamd.c **** 	/* initialize new row counts to zero */
2204:lp_solve_5.5/colamd/colamd.c **** 	pivot_row_degree = 0 ;
 6967               		.loc 1 2204 0
 6968 2f54 1E86      		std Y+14,__zero_reg__
 6969 2f56 1D86      		std Y+13,__zero_reg__
2205:lp_solve_5.5/colamd/colamd.c **** 
2206:lp_solve_5.5/colamd/colamd.c **** 	/* tag pivot column as having been visited so it isn't included */
2207:lp_solve_5.5/colamd/colamd.c **** 	/* in merged pivot row */
2208:lp_solve_5.5/colamd/colamd.c **** 	Col [pivot_col].shared1.thickness = -pivot_col_thickness ;
 6970               		.loc 1 2208 0
 6971 2f58 2F8D      		ldd r18,Y+31
 6972 2f5a 38A1      		ldd r19,Y+32
 6973 2f5c C901      		movw r24,r18
 6974 2f5e 880F      		lsl r24
 6975 2f60 991F      		rol r25
 6976 2f62 820F      		add r24,r18
 6977 2f64 931F      		adc r25,r19
 6978 2f66 880F      		lsl r24
 6979 2f68 991F      		rol r25
 6980 2f6a 880F      		lsl r24
 6981 2f6c 991F      		rol r25
 6982 2f6e 9C01      		movw r18,r24
 6983 2f70 CE01      		movw r24,r28
 6984 2f72 895B      		subi r24,-71
 6985 2f74 9F4F      		sbci r25,-1
 6986 2f76 DC01      		movw r26,r24
 6987 2f78 8D91      		ld r24,X+
 6988 2f7a 9C91      		ld r25,X
 6989 2f7c 820F      		add r24,r18
 6990 2f7e 931F      		adc r25,r19
 6991 2f80 2DA1      		ldd r18,Y+37
 6992 2f82 3EA1      		ldd r19,Y+38
 6993 2f84 3195      		neg r19
 6994 2f86 2195      		neg r18
 6995 2f88 3109      		sbc r19,__zero_reg__
 6996 2f8a FC01      		movw r30,r24
 6997 2f8c 3583      		std Z+5,r19
 6998 2f8e 2483      		std Z+4,r18
2209:lp_solve_5.5/colamd/colamd.c **** 
2210:lp_solve_5.5/colamd/colamd.c **** 	/* pivot row is the union of all rows in the pivot column pattern */
2211:lp_solve_5.5/colamd/colamd.c **** 	cp = &A [Col [pivot_col].start] ;
 6999               		.loc 1 2211 0
 7000 2f90 2F8D      		ldd r18,Y+31
 7001 2f92 38A1      		ldd r19,Y+32
 7002 2f94 C901      		movw r24,r18
 7003 2f96 880F      		lsl r24
 7004 2f98 991F      		rol r25
 7005 2f9a 820F      		add r24,r18
 7006 2f9c 931F      		adc r25,r19
 7007 2f9e 880F      		lsl r24
 7008 2fa0 991F      		rol r25
 7009 2fa2 880F      		lsl r24
 7010 2fa4 991F      		rol r25
 7011 2fa6 9C01      		movw r18,r24
 7012 2fa8 CE01      		movw r24,r28
 7013 2faa 895B      		subi r24,-71
 7014 2fac 9F4F      		sbci r25,-1
 7015 2fae DC01      		movw r26,r24
 7016 2fb0 8D91      		ld r24,X+
 7017 2fb2 9C91      		ld r25,X
 7018 2fb4 820F      		add r24,r18
 7019 2fb6 931F      		adc r25,r19
 7020 2fb8 FC01      		movw r30,r24
 7021 2fba 8081      		ld r24,Z
 7022 2fbc 9181      		ldd r25,Z+1
 7023 2fbe 880F      		lsl r24
 7024 2fc0 991F      		rol r25
 7025 2fc2 9E01      		movw r18,r28
 7026 2fc4 275B      		subi r18,-73
 7027 2fc6 3F4F      		sbci r19,-1
 7028 2fc8 D901      		movw r26,r18
 7029 2fca 2D91      		ld r18,X+
 7030 2fcc 3C91      		ld r19,X
 7031 2fce 820F      		add r24,r18
 7032 2fd0 931F      		adc r25,r19
 7033 2fd2 9C83      		std Y+4,r25
 7034 2fd4 8B83      		std Y+3,r24
2212:lp_solve_5.5/colamd/colamd.c **** 	cp_end = cp + Col [pivot_col].length ;
 7035               		.loc 1 2212 0
 7036 2fd6 2F8D      		ldd r18,Y+31
 7037 2fd8 38A1      		ldd r19,Y+32
 7038 2fda C901      		movw r24,r18
 7039 2fdc 880F      		lsl r24
 7040 2fde 991F      		rol r25
 7041 2fe0 820F      		add r24,r18
 7042 2fe2 931F      		adc r25,r19
 7043 2fe4 880F      		lsl r24
 7044 2fe6 991F      		rol r25
 7045 2fe8 880F      		lsl r24
 7046 2fea 991F      		rol r25
 7047 2fec 9C01      		movw r18,r24
 7048 2fee CE01      		movw r24,r28
 7049 2ff0 895B      		subi r24,-71
 7050 2ff2 9F4F      		sbci r25,-1
 7051 2ff4 FC01      		movw r30,r24
 7052 2ff6 8081      		ld r24,Z
 7053 2ff8 9181      		ldd r25,Z+1
 7054 2ffa 820F      		add r24,r18
 7055 2ffc 931F      		adc r25,r19
 7056 2ffe DC01      		movw r26,r24
 7057 3000 1296      		adiw r26,2
 7058 3002 8D91      		ld r24,X+
 7059 3004 9C91      		ld r25,X
 7060 3006 1397      		sbiw r26,2+1
 7061 3008 880F      		lsl r24
 7062 300a 991F      		rol r25
 7063 300c 2B81      		ldd r18,Y+3
 7064 300e 3C81      		ldd r19,Y+4
 7065 3010 820F      		add r24,r18
 7066 3012 931F      		adc r25,r19
 7067 3014 9CA7      		std Y+44,r25
 7068 3016 8BA7      		std Y+43,r24
2213:lp_solve_5.5/colamd/colamd.c **** 	while (cp < cp_end)
 7069               		.loc 1 2213 0
 7070 3018 00C0      		rjmp .L188
 7071               	.L192:
2214:lp_solve_5.5/colamd/colamd.c **** 	{
2215:lp_solve_5.5/colamd/colamd.c **** 	    /* get a row */
2216:lp_solve_5.5/colamd/colamd.c **** 	    row = *cp++ ;
 7072               		.loc 1 2216 0
 7073 301a 8B81      		ldd r24,Y+3
 7074 301c 9C81      		ldd r25,Y+4
 7075 301e 9C01      		movw r18,r24
 7076 3020 2E5F      		subi r18,-2
 7077 3022 3F4F      		sbci r19,-1
 7078 3024 3C83      		std Y+4,r19
 7079 3026 2B83      		std Y+3,r18
 7080 3028 FC01      		movw r30,r24
 7081 302a 8081      		ld r24,Z
 7082 302c 9181      		ldd r25,Z+1
 7083 302e 9EA7      		std Y+46,r25
 7084 3030 8DA7      		std Y+45,r24
2217:lp_solve_5.5/colamd/colamd.c **** 	    DEBUG4 (("Pivot col pattern %d %d\n", ROW_IS_ALIVE (row), row)) ;
2218:lp_solve_5.5/colamd/colamd.c **** 	    /* skip if row is dead */
2219:lp_solve_5.5/colamd/colamd.c **** 	    if (ROW_IS_DEAD (row))
 7085               		.loc 1 2219 0
 7086 3032 8DA5      		ldd r24,Y+45
 7087 3034 9EA5      		ldd r25,Y+46
 7088 3036 880F      		lsl r24
 7089 3038 991F      		rol r25
 7090 303a 880F      		lsl r24
 7091 303c 991F      		rol r25
 7092 303e 880F      		lsl r24
 7093 3040 991F      		rol r25
 7094 3042 9E01      		movw r18,r28
 7095 3044 2B5B      		subi r18,-69
 7096 3046 3F4F      		sbci r19,-1
 7097 3048 D901      		movw r26,r18
 7098 304a 2D91      		ld r18,X+
 7099 304c 3C91      		ld r19,X
 7100 304e 820F      		add r24,r18
 7101 3050 931F      		adc r25,r19
 7102 3052 FC01      		movw r30,r24
 7103 3054 8681      		ldd r24,Z+6
 7104 3056 9781      		ldd r25,Z+7
 7105 3058 9923      		tst r25
 7106 305a 04F4      		brge .L189
2220:lp_solve_5.5/colamd/colamd.c **** 	    {
2221:lp_solve_5.5/colamd/colamd.c **** 		continue ;
 7107               		.loc 1 2221 0
 7108 305c 00C0      		rjmp .L188
 7109               	.L189:
2222:lp_solve_5.5/colamd/colamd.c **** 	    }
2223:lp_solve_5.5/colamd/colamd.c **** 	    rp = &A [Row [row].start] ;
 7110               		.loc 1 2223 0
 7111 305e 8DA5      		ldd r24,Y+45
 7112 3060 9EA5      		ldd r25,Y+46
 7113 3062 880F      		lsl r24
 7114 3064 991F      		rol r25
 7115 3066 880F      		lsl r24
 7116 3068 991F      		rol r25
 7117 306a 880F      		lsl r24
 7118 306c 991F      		rol r25
 7119 306e 9E01      		movw r18,r28
 7120 3070 2B5B      		subi r18,-69
 7121 3072 3F4F      		sbci r19,-1
 7122 3074 D901      		movw r26,r18
 7123 3076 2D91      		ld r18,X+
 7124 3078 3C91      		ld r19,X
 7125 307a 820F      		add r24,r18
 7126 307c 931F      		adc r25,r19
 7127 307e FC01      		movw r30,r24
 7128 3080 8081      		ld r24,Z
 7129 3082 9181      		ldd r25,Z+1
 7130 3084 880F      		lsl r24
 7131 3086 991F      		rol r25
 7132 3088 9E01      		movw r18,r28
 7133 308a 275B      		subi r18,-73
 7134 308c 3F4F      		sbci r19,-1
 7135 308e D901      		movw r26,r18
 7136 3090 2D91      		ld r18,X+
 7137 3092 3C91      		ld r19,X
 7138 3094 820F      		add r24,r18
 7139 3096 931F      		adc r25,r19
 7140 3098 9E83      		std Y+6,r25
 7141 309a 8D83      		std Y+5,r24
2224:lp_solve_5.5/colamd/colamd.c **** 	    rp_end = rp + Row [row].length ;
 7142               		.loc 1 2224 0
 7143 309c 8DA5      		ldd r24,Y+45
 7144 309e 9EA5      		ldd r25,Y+46
 7145 30a0 880F      		lsl r24
 7146 30a2 991F      		rol r25
 7147 30a4 880F      		lsl r24
 7148 30a6 991F      		rol r25
 7149 30a8 880F      		lsl r24
 7150 30aa 991F      		rol r25
 7151 30ac 9E01      		movw r18,r28
 7152 30ae 2B5B      		subi r18,-69
 7153 30b0 3F4F      		sbci r19,-1
 7154 30b2 F901      		movw r30,r18
 7155 30b4 2081      		ld r18,Z
 7156 30b6 3181      		ldd r19,Z+1
 7157 30b8 820F      		add r24,r18
 7158 30ba 931F      		adc r25,r19
 7159 30bc DC01      		movw r26,r24
 7160 30be 1296      		adiw r26,2
 7161 30c0 8D91      		ld r24,X+
 7162 30c2 9C91      		ld r25,X
 7163 30c4 1397      		sbiw r26,2+1
 7164 30c6 880F      		lsl r24
 7165 30c8 991F      		rol r25
 7166 30ca 2D81      		ldd r18,Y+5
 7167 30cc 3E81      		ldd r19,Y+6
 7168 30ce 820F      		add r24,r18
 7169 30d0 931F      		adc r25,r19
 7170 30d2 98AB      		std Y+48,r25
 7171 30d4 8FA7      		std Y+47,r24
2225:lp_solve_5.5/colamd/colamd.c **** 	    while (rp < rp_end)
 7172               		.loc 1 2225 0
 7173 30d6 00C0      		rjmp .L190
 7174               	.L191:
2226:lp_solve_5.5/colamd/colamd.c **** 	    {
2227:lp_solve_5.5/colamd/colamd.c **** 		/* get a column */
2228:lp_solve_5.5/colamd/colamd.c **** 		col = *rp++ ;
 7175               		.loc 1 2228 0
 7176 30d8 8D81      		ldd r24,Y+5
 7177 30da 9E81      		ldd r25,Y+6
 7178 30dc 9C01      		movw r18,r24
 7179 30de 2E5F      		subi r18,-2
 7180 30e0 3F4F      		sbci r19,-1
 7181 30e2 3E83      		std Y+6,r19
 7182 30e4 2D83      		std Y+5,r18
 7183 30e6 FC01      		movw r30,r24
 7184 30e8 8081      		ld r24,Z
 7185 30ea 9181      		ldd r25,Z+1
 7186 30ec 9AAB      		std Y+50,r25
 7187 30ee 89AB      		std Y+49,r24
2229:lp_solve_5.5/colamd/colamd.c **** 		/* add the column, if alive and untagged */
2230:lp_solve_5.5/colamd/colamd.c **** 		col_thickness = Col [col].shared1.thickness ;
 7188               		.loc 1 2230 0
 7189 30f0 29A9      		ldd r18,Y+49
 7190 30f2 3AA9      		ldd r19,Y+50
 7191 30f4 C901      		movw r24,r18
 7192 30f6 880F      		lsl r24
 7193 30f8 991F      		rol r25
 7194 30fa 820F      		add r24,r18
 7195 30fc 931F      		adc r25,r19
 7196 30fe 880F      		lsl r24
 7197 3100 991F      		rol r25
 7198 3102 880F      		lsl r24
 7199 3104 991F      		rol r25
 7200 3106 9C01      		movw r18,r24
 7201 3108 CE01      		movw r24,r28
 7202 310a 895B      		subi r24,-71
 7203 310c 9F4F      		sbci r25,-1
 7204 310e DC01      		movw r26,r24
 7205 3110 8D91      		ld r24,X+
 7206 3112 9C91      		ld r25,X
 7207 3114 820F      		add r24,r18
 7208 3116 931F      		adc r25,r19
 7209 3118 FC01      		movw r30,r24
 7210 311a 8481      		ldd r24,Z+4
 7211 311c 9581      		ldd r25,Z+5
 7212 311e 9CAB      		std Y+52,r25
 7213 3120 8BAB      		std Y+51,r24
2231:lp_solve_5.5/colamd/colamd.c **** 		if (col_thickness > 0 && COL_IS_ALIVE (col))
 7214               		.loc 1 2231 0
 7215 3122 8BA9      		ldd r24,Y+51
 7216 3124 9CA9      		ldd r25,Y+52
 7217 3126 1816      		cp __zero_reg__,r24
 7218 3128 1906      		cpc __zero_reg__,r25
 7219 312a 04F0      		brlt .+2
 7220 312c 00C0      		rjmp .L190
 7221               		.loc 1 2231 0 is_stmt 0 discriminator 1
 7222 312e 29A9      		ldd r18,Y+49
 7223 3130 3AA9      		ldd r19,Y+50
 7224 3132 C901      		movw r24,r18
 7225 3134 880F      		lsl r24
 7226 3136 991F      		rol r25
 7227 3138 820F      		add r24,r18
 7228 313a 931F      		adc r25,r19
 7229 313c 880F      		lsl r24
 7230 313e 991F      		rol r25
 7231 3140 880F      		lsl r24
 7232 3142 991F      		rol r25
 7233 3144 9C01      		movw r18,r24
 7234 3146 CE01      		movw r24,r28
 7235 3148 895B      		subi r24,-71
 7236 314a 9F4F      		sbci r25,-1
 7237 314c DC01      		movw r26,r24
 7238 314e 8D91      		ld r24,X+
 7239 3150 9C91      		ld r25,X
 7240 3152 820F      		add r24,r18
 7241 3154 931F      		adc r25,r19
 7242 3156 FC01      		movw r30,r24
 7243 3158 8081      		ld r24,Z
 7244 315a 9181      		ldd r25,Z+1
 7245 315c 9923      		tst r25
 7246 315e 04F0      		brlt .L190
2232:lp_solve_5.5/colamd/colamd.c **** 		{
2233:lp_solve_5.5/colamd/colamd.c **** 		    /* tag column in pivot row */
2234:lp_solve_5.5/colamd/colamd.c **** 		    Col [col].shared1.thickness = -col_thickness ;
 7247               		.loc 1 2234 0 is_stmt 1
 7248 3160 29A9      		ldd r18,Y+49
 7249 3162 3AA9      		ldd r19,Y+50
 7250 3164 C901      		movw r24,r18
 7251 3166 880F      		lsl r24
 7252 3168 991F      		rol r25
 7253 316a 820F      		add r24,r18
 7254 316c 931F      		adc r25,r19
 7255 316e 880F      		lsl r24
 7256 3170 991F      		rol r25
 7257 3172 880F      		lsl r24
 7258 3174 991F      		rol r25
 7259 3176 9C01      		movw r18,r24
 7260 3178 CE01      		movw r24,r28
 7261 317a 895B      		subi r24,-71
 7262 317c 9F4F      		sbci r25,-1
 7263 317e DC01      		movw r26,r24
 7264 3180 8D91      		ld r24,X+
 7265 3182 9C91      		ld r25,X
 7266 3184 820F      		add r24,r18
 7267 3186 931F      		adc r25,r19
 7268 3188 2BA9      		ldd r18,Y+51
 7269 318a 3CA9      		ldd r19,Y+52
 7270 318c 3195      		neg r19
 7271 318e 2195      		neg r18
 7272 3190 3109      		sbc r19,__zero_reg__
 7273 3192 FC01      		movw r30,r24
 7274 3194 3583      		std Z+5,r19
 7275 3196 2483      		std Z+4,r18
2235:lp_solve_5.5/colamd/colamd.c **** 		    ASSERT (pfree < Alen) ;
2236:lp_solve_5.5/colamd/colamd.c **** 		    /* place column in pivot row */
2237:lp_solve_5.5/colamd/colamd.c **** 		    A [pfree++] = col ;
 7276               		.loc 1 2237 0
 7277 3198 A396      		adiw r28,97-62
 7278 319a 8EAD      		ldd r24,Y+62
 7279 319c 9FAD      		ldd r25,Y+63
 7280 319e A397      		sbiw r28,97-62
 7281 31a0 9C01      		movw r18,r24
 7282 31a2 2F5F      		subi r18,-1
 7283 31a4 3F4F      		sbci r19,-1
 7284 31a6 A396      		adiw r28,97-62
 7285 31a8 3FAF      		std Y+63,r19
 7286 31aa 2EAF      		std Y+62,r18
 7287 31ac A397      		sbiw r28,97-62
 7288 31ae 880F      		lsl r24
 7289 31b0 991F      		rol r25
 7290 31b2 9E01      		movw r18,r28
 7291 31b4 275B      		subi r18,-73
 7292 31b6 3F4F      		sbci r19,-1
 7293 31b8 D901      		movw r26,r18
 7294 31ba 2D91      		ld r18,X+
 7295 31bc 3C91      		ld r19,X
 7296 31be 820F      		add r24,r18
 7297 31c0 931F      		adc r25,r19
 7298 31c2 29A9      		ldd r18,Y+49
 7299 31c4 3AA9      		ldd r19,Y+50
 7300 31c6 FC01      		movw r30,r24
 7301 31c8 3183      		std Z+1,r19
 7302 31ca 2083      		st Z,r18
2238:lp_solve_5.5/colamd/colamd.c **** 		    pivot_row_degree += col_thickness ;
 7303               		.loc 1 2238 0
 7304 31cc 2D85      		ldd r18,Y+13
 7305 31ce 3E85      		ldd r19,Y+14
 7306 31d0 8BA9      		ldd r24,Y+51
 7307 31d2 9CA9      		ldd r25,Y+52
 7308 31d4 820F      		add r24,r18
 7309 31d6 931F      		adc r25,r19
 7310 31d8 9E87      		std Y+14,r25
 7311 31da 8D87      		std Y+13,r24
 7312               	.L190:
2225:lp_solve_5.5/colamd/colamd.c **** 	    {
 7313               		.loc 1 2225 0
 7314 31dc 2D81      		ldd r18,Y+5
 7315 31de 3E81      		ldd r19,Y+6
 7316 31e0 8FA5      		ldd r24,Y+47
 7317 31e2 98A9      		ldd r25,Y+48
 7318 31e4 2817      		cp r18,r24
 7319 31e6 3907      		cpc r19,r25
 7320 31e8 00F4      		brsh .+2
 7321 31ea 00C0      		rjmp .L191
 7322               	.L188:
2213:lp_solve_5.5/colamd/colamd.c **** 	{
 7323               		.loc 1 2213 0
 7324 31ec 2B81      		ldd r18,Y+3
 7325 31ee 3C81      		ldd r19,Y+4
 7326 31f0 8BA5      		ldd r24,Y+43
 7327 31f2 9CA5      		ldd r25,Y+44
 7328 31f4 2817      		cp r18,r24
 7329 31f6 3907      		cpc r19,r25
 7330 31f8 00F4      		brsh .+2
 7331 31fa 00C0      		rjmp .L192
2239:lp_solve_5.5/colamd/colamd.c **** 		}
2240:lp_solve_5.5/colamd/colamd.c **** 	    }
2241:lp_solve_5.5/colamd/colamd.c **** 	}
2242:lp_solve_5.5/colamd/colamd.c **** 
2243:lp_solve_5.5/colamd/colamd.c **** 	/* clear tag on pivot column */
2244:lp_solve_5.5/colamd/colamd.c **** 	Col [pivot_col].shared1.thickness = pivot_col_thickness ;
 7332               		.loc 1 2244 0
 7333 31fc 2F8D      		ldd r18,Y+31
 7334 31fe 38A1      		ldd r19,Y+32
 7335 3200 C901      		movw r24,r18
 7336 3202 880F      		lsl r24
 7337 3204 991F      		rol r25
 7338 3206 820F      		add r24,r18
 7339 3208 931F      		adc r25,r19
 7340 320a 880F      		lsl r24
 7341 320c 991F      		rol r25
 7342 320e 880F      		lsl r24
 7343 3210 991F      		rol r25
 7344 3212 9C01      		movw r18,r24
 7345 3214 CE01      		movw r24,r28
 7346 3216 895B      		subi r24,-71
 7347 3218 9F4F      		sbci r25,-1
 7348 321a DC01      		movw r26,r24
 7349 321c 8D91      		ld r24,X+
 7350 321e 9C91      		ld r25,X
 7351 3220 820F      		add r24,r18
 7352 3222 931F      		adc r25,r19
 7353 3224 2DA1      		ldd r18,Y+37
 7354 3226 3EA1      		ldd r19,Y+38
 7355 3228 FC01      		movw r30,r24
 7356 322a 3583      		std Z+5,r19
 7357 322c 2483      		std Z+4,r18
2245:lp_solve_5.5/colamd/colamd.c **** 	max_deg = MAX (max_deg, pivot_row_degree) ;
 7358               		.loc 1 2245 0
 7359 322e AE01      		movw r20,r28
 7360 3230 415B      		subi r20,-79
 7361 3232 5F4F      		sbci r21,-1
 7362 3234 CE01      		movw r24,r28
 7363 3236 815B      		subi r24,-79
 7364 3238 9F4F      		sbci r25,-1
 7365 323a DC01      		movw r26,r24
 7366 323c 2D91      		ld r18,X+
 7367 323e 3C91      		ld r19,X
 7368 3240 8D85      		ldd r24,Y+13
 7369 3242 9E85      		ldd r25,Y+14
 7370 3244 8217      		cp r24,r18
 7371 3246 9307      		cpc r25,r19
 7372 3248 04F4      		brge .L193
 7373 324a C901      		movw r24,r18
 7374               	.L193:
 7375 324c FA01      		movw r30,r20
 7376 324e 9183      		std Z+1,r25
 7377 3250 8083      		st Z,r24
2246:lp_solve_5.5/colamd/colamd.c **** 
2247:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
2248:lp_solve_5.5/colamd/colamd.c **** 	DEBUG3 (("check2\n")) ;
2249:lp_solve_5.5/colamd/colamd.c **** 	debug_mark (n_row, Row, tag_mark, max_mark) ;
2250:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
2251:lp_solve_5.5/colamd/colamd.c **** 
2252:lp_solve_5.5/colamd/colamd.c **** 	/* === Kill all rows used to construct pivot row ==================== */
2253:lp_solve_5.5/colamd/colamd.c **** 
2254:lp_solve_5.5/colamd/colamd.c **** 	/* also kill pivot row, temporarily */
2255:lp_solve_5.5/colamd/colamd.c **** 	cp = &A [Col [pivot_col].start] ;
 7378               		.loc 1 2255 0
 7379 3252 2F8D      		ldd r18,Y+31
 7380 3254 38A1      		ldd r19,Y+32
 7381 3256 C901      		movw r24,r18
 7382 3258 880F      		lsl r24
 7383 325a 991F      		rol r25
 7384 325c 820F      		add r24,r18
 7385 325e 931F      		adc r25,r19
 7386 3260 880F      		lsl r24
 7387 3262 991F      		rol r25
 7388 3264 880F      		lsl r24
 7389 3266 991F      		rol r25
 7390 3268 9C01      		movw r18,r24
 7391 326a CE01      		movw r24,r28
 7392 326c 895B      		subi r24,-71
 7393 326e 9F4F      		sbci r25,-1
 7394 3270 DC01      		movw r26,r24
 7395 3272 8D91      		ld r24,X+
 7396 3274 9C91      		ld r25,X
 7397 3276 820F      		add r24,r18
 7398 3278 931F      		adc r25,r19
 7399 327a FC01      		movw r30,r24
 7400 327c 8081      		ld r24,Z
 7401 327e 9181      		ldd r25,Z+1
 7402 3280 880F      		lsl r24
 7403 3282 991F      		rol r25
 7404 3284 9E01      		movw r18,r28
 7405 3286 275B      		subi r18,-73
 7406 3288 3F4F      		sbci r19,-1
 7407 328a D901      		movw r26,r18
 7408 328c 2D91      		ld r18,X+
 7409 328e 3C91      		ld r19,X
 7410 3290 820F      		add r24,r18
 7411 3292 931F      		adc r25,r19
 7412 3294 9C83      		std Y+4,r25
 7413 3296 8B83      		std Y+3,r24
2256:lp_solve_5.5/colamd/colamd.c **** 	cp_end = cp + Col [pivot_col].length ;
 7414               		.loc 1 2256 0
 7415 3298 2F8D      		ldd r18,Y+31
 7416 329a 38A1      		ldd r19,Y+32
 7417 329c C901      		movw r24,r18
 7418 329e 880F      		lsl r24
 7419 32a0 991F      		rol r25
 7420 32a2 820F      		add r24,r18
 7421 32a4 931F      		adc r25,r19
 7422 32a6 880F      		lsl r24
 7423 32a8 991F      		rol r25
 7424 32aa 880F      		lsl r24
 7425 32ac 991F      		rol r25
 7426 32ae 9C01      		movw r18,r24
 7427 32b0 CE01      		movw r24,r28
 7428 32b2 895B      		subi r24,-71
 7429 32b4 9F4F      		sbci r25,-1
 7430 32b6 FC01      		movw r30,r24
 7431 32b8 8081      		ld r24,Z
 7432 32ba 9181      		ldd r25,Z+1
 7433 32bc 820F      		add r24,r18
 7434 32be 931F      		adc r25,r19
 7435 32c0 DC01      		movw r26,r24
 7436 32c2 1296      		adiw r26,2
 7437 32c4 8D91      		ld r24,X+
 7438 32c6 9C91      		ld r25,X
 7439 32c8 1397      		sbiw r26,2+1
 7440 32ca 880F      		lsl r24
 7441 32cc 991F      		rol r25
 7442 32ce 2B81      		ldd r18,Y+3
 7443 32d0 3C81      		ldd r19,Y+4
 7444 32d2 820F      		add r24,r18
 7445 32d4 931F      		adc r25,r19
 7446 32d6 9CA7      		std Y+44,r25
 7447 32d8 8BA7      		std Y+43,r24
2257:lp_solve_5.5/colamd/colamd.c **** 	while (cp < cp_end)
 7448               		.loc 1 2257 0
 7449 32da 00C0      		rjmp .L194
 7450               	.L195:
2258:lp_solve_5.5/colamd/colamd.c **** 	{
2259:lp_solve_5.5/colamd/colamd.c **** 	    /* may be killing an already dead row */
2260:lp_solve_5.5/colamd/colamd.c **** 	    row = *cp++ ;
 7451               		.loc 1 2260 0
 7452 32dc 8B81      		ldd r24,Y+3
 7453 32de 9C81      		ldd r25,Y+4
 7454 32e0 9C01      		movw r18,r24
 7455 32e2 2E5F      		subi r18,-2
 7456 32e4 3F4F      		sbci r19,-1
 7457 32e6 3C83      		std Y+4,r19
 7458 32e8 2B83      		std Y+3,r18
 7459 32ea FC01      		movw r30,r24
 7460 32ec 8081      		ld r24,Z
 7461 32ee 9181      		ldd r25,Z+1
 7462 32f0 9EA7      		std Y+46,r25
 7463 32f2 8DA7      		std Y+45,r24
2261:lp_solve_5.5/colamd/colamd.c **** 	    DEBUG3 (("Kill row in pivot col: %d\n", row)) ;
2262:lp_solve_5.5/colamd/colamd.c **** 	    KILL_ROW (row) ;
 7464               		.loc 1 2262 0
 7465 32f4 8DA5      		ldd r24,Y+45
 7466 32f6 9EA5      		ldd r25,Y+46
 7467 32f8 880F      		lsl r24
 7468 32fa 991F      		rol r25
 7469 32fc 880F      		lsl r24
 7470 32fe 991F      		rol r25
 7471 3300 880F      		lsl r24
 7472 3302 991F      		rol r25
 7473 3304 9E01      		movw r18,r28
 7474 3306 2B5B      		subi r18,-69
 7475 3308 3F4F      		sbci r19,-1
 7476 330a D901      		movw r26,r18
 7477 330c 2D91      		ld r18,X+
 7478 330e 3C91      		ld r19,X
 7479 3310 820F      		add r24,r18
 7480 3312 931F      		adc r25,r19
 7481 3314 2FEF      		ldi r18,lo8(-1)
 7482 3316 3FEF      		ldi r19,lo8(-1)
 7483 3318 FC01      		movw r30,r24
 7484 331a 3783      		std Z+7,r19
 7485 331c 2683      		std Z+6,r18
 7486               	.L194:
2257:lp_solve_5.5/colamd/colamd.c **** 	{
 7487               		.loc 1 2257 0
 7488 331e 2B81      		ldd r18,Y+3
 7489 3320 3C81      		ldd r19,Y+4
 7490 3322 8BA5      		ldd r24,Y+43
 7491 3324 9CA5      		ldd r25,Y+44
 7492 3326 2817      		cp r18,r24
 7493 3328 3907      		cpc r19,r25
 7494 332a 00F0      		brlo .L195
2263:lp_solve_5.5/colamd/colamd.c **** 	}
2264:lp_solve_5.5/colamd/colamd.c **** 
2265:lp_solve_5.5/colamd/colamd.c **** 	/* === Select a row index to use as the new pivot row =============== */
2266:lp_solve_5.5/colamd/colamd.c **** 
2267:lp_solve_5.5/colamd/colamd.c **** 	pivot_row_length = pfree - pivot_row_start ;
 7495               		.loc 1 2267 0
 7496 332c A396      		adiw r28,97-62
 7497 332e 2EAD      		ldd r18,Y+62
 7498 3330 3FAD      		ldd r19,Y+63
 7499 3332 A397      		sbiw r28,97-62
 7500 3334 89A5      		ldd r24,Y+41
 7501 3336 9AA5      		ldd r25,Y+42
 7502 3338 A901      		movw r20,r18
 7503 333a 481B      		sub r20,r24
 7504 333c 590B      		sbc r21,r25
 7505 333e CA01      		movw r24,r20
 7506 3340 9EAB      		std Y+54,r25
 7507 3342 8DAB      		std Y+53,r24
2268:lp_solve_5.5/colamd/colamd.c **** 	if (pivot_row_length > 0)
 7508               		.loc 1 2268 0
 7509 3344 8DA9      		ldd r24,Y+53
 7510 3346 9EA9      		ldd r25,Y+54
 7511 3348 1816      		cp __zero_reg__,r24
 7512 334a 1906      		cpc __zero_reg__,r25
 7513 334c 04F4      		brge .L196
2269:lp_solve_5.5/colamd/colamd.c **** 	{
2270:lp_solve_5.5/colamd/colamd.c **** 	    /* pick the "pivot" row arbitrarily (first row in col) */
2271:lp_solve_5.5/colamd/colamd.c **** 	    pivot_row = A [Col [pivot_col].start] ;
 7514               		.loc 1 2271 0
 7515 334e 2F8D      		ldd r18,Y+31
 7516 3350 38A1      		ldd r19,Y+32
 7517 3352 C901      		movw r24,r18
 7518 3354 880F      		lsl r24
 7519 3356 991F      		rol r25
 7520 3358 820F      		add r24,r18
 7521 335a 931F      		adc r25,r19
 7522 335c 880F      		lsl r24
 7523 335e 991F      		rol r25
 7524 3360 880F      		lsl r24
 7525 3362 991F      		rol r25
 7526 3364 9C01      		movw r18,r24
 7527 3366 CE01      		movw r24,r28
 7528 3368 895B      		subi r24,-71
 7529 336a 9F4F      		sbci r25,-1
 7530 336c DC01      		movw r26,r24
 7531 336e 8D91      		ld r24,X+
 7532 3370 9C91      		ld r25,X
 7533 3372 820F      		add r24,r18
 7534 3374 931F      		adc r25,r19
 7535 3376 FC01      		movw r30,r24
 7536 3378 8081      		ld r24,Z
 7537 337a 9181      		ldd r25,Z+1
 7538 337c 880F      		lsl r24
 7539 337e 991F      		rol r25
 7540 3380 9E01      		movw r18,r28
 7541 3382 275B      		subi r18,-73
 7542 3384 3F4F      		sbci r19,-1
 7543 3386 D901      		movw r26,r18
 7544 3388 2D91      		ld r18,X+
 7545 338a 3C91      		ld r19,X
 7546 338c 820F      		add r24,r18
 7547 338e 931F      		adc r25,r19
 7548 3390 FC01      		movw r30,r24
 7549 3392 8081      		ld r24,Z
 7550 3394 9181      		ldd r25,Z+1
 7551 3396 9887      		std Y+8,r25
 7552 3398 8F83      		std Y+7,r24
 7553 339a 00C0      		rjmp .L197
 7554               	.L196:
2272:lp_solve_5.5/colamd/colamd.c **** 	    DEBUG3 (("Pivotal row is %d\n", pivot_row)) ;
2273:lp_solve_5.5/colamd/colamd.c **** 	}
2274:lp_solve_5.5/colamd/colamd.c **** 	else
2275:lp_solve_5.5/colamd/colamd.c **** 	{
2276:lp_solve_5.5/colamd/colamd.c **** 	    /* there is no pivot row, since it is of zero length */
2277:lp_solve_5.5/colamd/colamd.c **** 	    pivot_row = EMPTY ;
 7555               		.loc 1 2277 0
 7556 339c 8FEF      		ldi r24,lo8(-1)
 7557 339e 9FEF      		ldi r25,lo8(-1)
 7558 33a0 9887      		std Y+8,r25
 7559 33a2 8F83      		std Y+7,r24
 7560               	.L197:
2278:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (pivot_row_length == 0) ;
2279:lp_solve_5.5/colamd/colamd.c **** 	}
2280:lp_solve_5.5/colamd/colamd.c **** 	ASSERT (Col [pivot_col].length > 0 || pivot_row_length == 0) ;
2281:lp_solve_5.5/colamd/colamd.c **** 
2282:lp_solve_5.5/colamd/colamd.c **** 	/* === Approximate degree computation =============================== */
2283:lp_solve_5.5/colamd/colamd.c **** 
2284:lp_solve_5.5/colamd/colamd.c **** 	/* Here begins the computation of the approximate degree.  The column */
2285:lp_solve_5.5/colamd/colamd.c **** 	/* score is the sum of the pivot row "length", plus the size of the */
2286:lp_solve_5.5/colamd/colamd.c **** 	/* set differences of each row in the column minus the pattern of the */
2287:lp_solve_5.5/colamd/colamd.c **** 	/* pivot row itself.  The column ("thickness") itself is also */
2288:lp_solve_5.5/colamd/colamd.c **** 	/* excluded from the column score (we thus use an approximate */
2289:lp_solve_5.5/colamd/colamd.c **** 	/* external degree). */
2290:lp_solve_5.5/colamd/colamd.c **** 
2291:lp_solve_5.5/colamd/colamd.c **** 	/* The time taken by the following code (compute set differences, and */
2292:lp_solve_5.5/colamd/colamd.c **** 	/* add them up) is proportional to the size of the data structure */
2293:lp_solve_5.5/colamd/colamd.c **** 	/* being scanned - that is, the sum of the sizes of each column in */
2294:lp_solve_5.5/colamd/colamd.c **** 	/* the pivot row.  Thus, the amortized time to compute a column score */
2295:lp_solve_5.5/colamd/colamd.c **** 	/* is proportional to the size of that column (where size, in this */
2296:lp_solve_5.5/colamd/colamd.c **** 	/* context, is the column "length", or the number of row indices */
2297:lp_solve_5.5/colamd/colamd.c **** 	/* in that column).  The number of row indices in a column is */
2298:lp_solve_5.5/colamd/colamd.c **** 	/* monotonically non-decreasing, from the length of the original */
2299:lp_solve_5.5/colamd/colamd.c **** 	/* column on input to colamd. */
2300:lp_solve_5.5/colamd/colamd.c **** 
2301:lp_solve_5.5/colamd/colamd.c **** 	/* === Compute set differences ====================================== */
2302:lp_solve_5.5/colamd/colamd.c **** 
2303:lp_solve_5.5/colamd/colamd.c **** 	DEBUG3 (("** Computing set differences phase. **\n")) ;
2304:lp_solve_5.5/colamd/colamd.c **** 
2305:lp_solve_5.5/colamd/colamd.c **** 	/* pivot row is currently dead - it will be revived later. */
2306:lp_solve_5.5/colamd/colamd.c **** 
2307:lp_solve_5.5/colamd/colamd.c **** 	DEBUG3 (("Pivot row: ")) ;
2308:lp_solve_5.5/colamd/colamd.c **** 	/* for each column in pivot row */
2309:lp_solve_5.5/colamd/colamd.c **** 	rp = &A [pivot_row_start] ;
 7561               		.loc 1 2309 0
 7562 33a4 89A5      		ldd r24,Y+41
 7563 33a6 9AA5      		ldd r25,Y+42
 7564 33a8 880F      		lsl r24
 7565 33aa 991F      		rol r25
 7566 33ac 9E01      		movw r18,r28
 7567 33ae 275B      		subi r18,-73
 7568 33b0 3F4F      		sbci r19,-1
 7569 33b2 D901      		movw r26,r18
 7570 33b4 2D91      		ld r18,X+
 7571 33b6 3C91      		ld r19,X
 7572 33b8 820F      		add r24,r18
 7573 33ba 931F      		adc r25,r19
 7574 33bc 9E83      		std Y+6,r25
 7575 33be 8D83      		std Y+5,r24
2310:lp_solve_5.5/colamd/colamd.c **** 	rp_end = rp + pivot_row_length ;
 7576               		.loc 1 2310 0
 7577 33c0 8DA9      		ldd r24,Y+53
 7578 33c2 9EA9      		ldd r25,Y+54
 7579 33c4 880F      		lsl r24
 7580 33c6 991F      		rol r25
 7581 33c8 2D81      		ldd r18,Y+5
 7582 33ca 3E81      		ldd r19,Y+6
 7583 33cc 820F      		add r24,r18
 7584 33ce 931F      		adc r25,r19
 7585 33d0 98AB      		std Y+48,r25
 7586 33d2 8FA7      		std Y+47,r24
2311:lp_solve_5.5/colamd/colamd.c **** 	while (rp < rp_end)
 7587               		.loc 1 2311 0
 7588 33d4 00C0      		rjmp .L198
 7589               	.L207:
2312:lp_solve_5.5/colamd/colamd.c **** 	{
2313:lp_solve_5.5/colamd/colamd.c **** 	    col = *rp++ ;
 7590               		.loc 1 2313 0
 7591 33d6 8D81      		ldd r24,Y+5
 7592 33d8 9E81      		ldd r25,Y+6
 7593 33da 9C01      		movw r18,r24
 7594 33dc 2E5F      		subi r18,-2
 7595 33de 3F4F      		sbci r19,-1
 7596 33e0 3E83      		std Y+6,r19
 7597 33e2 2D83      		std Y+5,r18
 7598 33e4 FC01      		movw r30,r24
 7599 33e6 8081      		ld r24,Z
 7600 33e8 9181      		ldd r25,Z+1
 7601 33ea 9AAB      		std Y+50,r25
 7602 33ec 89AB      		std Y+49,r24
2314:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (COL_IS_ALIVE (col) && col != pivot_col) ;
2315:lp_solve_5.5/colamd/colamd.c **** 	    DEBUG3 (("Col: %d\n", col)) ;
2316:lp_solve_5.5/colamd/colamd.c **** 
2317:lp_solve_5.5/colamd/colamd.c **** 	    /* clear tags used to construct pivot row pattern */
2318:lp_solve_5.5/colamd/colamd.c **** 	    col_thickness = -Col [col].shared1.thickness ;
 7603               		.loc 1 2318 0
 7604 33ee 29A9      		ldd r18,Y+49
 7605 33f0 3AA9      		ldd r19,Y+50
 7606 33f2 C901      		movw r24,r18
 7607 33f4 880F      		lsl r24
 7608 33f6 991F      		rol r25
 7609 33f8 820F      		add r24,r18
 7610 33fa 931F      		adc r25,r19
 7611 33fc 880F      		lsl r24
 7612 33fe 991F      		rol r25
 7613 3400 880F      		lsl r24
 7614 3402 991F      		rol r25
 7615 3404 9C01      		movw r18,r24
 7616 3406 CE01      		movw r24,r28
 7617 3408 895B      		subi r24,-71
 7618 340a 9F4F      		sbci r25,-1
 7619 340c DC01      		movw r26,r24
 7620 340e 8D91      		ld r24,X+
 7621 3410 9C91      		ld r25,X
 7622 3412 820F      		add r24,r18
 7623 3414 931F      		adc r25,r19
 7624 3416 FC01      		movw r30,r24
 7625 3418 8481      		ldd r24,Z+4
 7626 341a 9581      		ldd r25,Z+5
 7627 341c 9195      		neg r25
 7628 341e 8195      		neg r24
 7629 3420 9109      		sbc r25,__zero_reg__
 7630 3422 9CAB      		std Y+52,r25
 7631 3424 8BAB      		std Y+51,r24
2319:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (col_thickness > 0) ;
2320:lp_solve_5.5/colamd/colamd.c **** 	    Col [col].shared1.thickness = col_thickness ;
 7632               		.loc 1 2320 0
 7633 3426 29A9      		ldd r18,Y+49
 7634 3428 3AA9      		ldd r19,Y+50
 7635 342a C901      		movw r24,r18
 7636 342c 880F      		lsl r24
 7637 342e 991F      		rol r25
 7638 3430 820F      		add r24,r18
 7639 3432 931F      		adc r25,r19
 7640 3434 880F      		lsl r24
 7641 3436 991F      		rol r25
 7642 3438 880F      		lsl r24
 7643 343a 991F      		rol r25
 7644 343c 9C01      		movw r18,r24
 7645 343e CE01      		movw r24,r28
 7646 3440 895B      		subi r24,-71
 7647 3442 9F4F      		sbci r25,-1
 7648 3444 DC01      		movw r26,r24
 7649 3446 8D91      		ld r24,X+
 7650 3448 9C91      		ld r25,X
 7651 344a 820F      		add r24,r18
 7652 344c 931F      		adc r25,r19
 7653 344e 2BA9      		ldd r18,Y+51
 7654 3450 3CA9      		ldd r19,Y+52
 7655 3452 FC01      		movw r30,r24
 7656 3454 3583      		std Z+5,r19
 7657 3456 2483      		std Z+4,r18
2321:lp_solve_5.5/colamd/colamd.c **** 
2322:lp_solve_5.5/colamd/colamd.c **** 	    /* === Remove column from degree list =========================== */
2323:lp_solve_5.5/colamd/colamd.c **** 
2324:lp_solve_5.5/colamd/colamd.c **** 	    cur_score = Col [col].shared2.score ;
 7658               		.loc 1 2324 0
 7659 3458 29A9      		ldd r18,Y+49
 7660 345a 3AA9      		ldd r19,Y+50
 7661 345c C901      		movw r24,r18
 7662 345e 880F      		lsl r24
 7663 3460 991F      		rol r25
 7664 3462 820F      		add r24,r18
 7665 3464 931F      		adc r25,r19
 7666 3466 880F      		lsl r24
 7667 3468 991F      		rol r25
 7668 346a 880F      		lsl r24
 7669 346c 991F      		rol r25
 7670 346e 9C01      		movw r18,r24
 7671 3470 CE01      		movw r24,r28
 7672 3472 895B      		subi r24,-71
 7673 3474 9F4F      		sbci r25,-1
 7674 3476 DC01      		movw r26,r24
 7675 3478 8D91      		ld r24,X+
 7676 347a 9C91      		ld r25,X
 7677 347c 820F      		add r24,r18
 7678 347e 931F      		adc r25,r19
 7679 3480 FC01      		movw r30,r24
 7680 3482 8681      		ldd r24,Z+6
 7681 3484 9781      		ldd r25,Z+7
 7682 3486 988B      		std Y+16,r25
 7683 3488 8F87      		std Y+15,r24
2325:lp_solve_5.5/colamd/colamd.c **** 	    prev_col = Col [col].shared3.prev ;
 7684               		.loc 1 2325 0
 7685 348a 29A9      		ldd r18,Y+49
 7686 348c 3AA9      		ldd r19,Y+50
 7687 348e C901      		movw r24,r18
 7688 3490 880F      		lsl r24
 7689 3492 991F      		rol r25
 7690 3494 820F      		add r24,r18
 7691 3496 931F      		adc r25,r19
 7692 3498 880F      		lsl r24
 7693 349a 991F      		rol r25
 7694 349c 880F      		lsl r24
 7695 349e 991F      		rol r25
 7696 34a0 9C01      		movw r18,r24
 7697 34a2 CE01      		movw r24,r28
 7698 34a4 895B      		subi r24,-71
 7699 34a6 9F4F      		sbci r25,-1
 7700 34a8 DC01      		movw r26,r24
 7701 34aa 8D91      		ld r24,X+
 7702 34ac 9C91      		ld r25,X
 7703 34ae 820F      		add r24,r18
 7704 34b0 931F      		adc r25,r19
 7705 34b2 FC01      		movw r30,r24
 7706 34b4 8085      		ldd r24,Z+8
 7707 34b6 9185      		ldd r25,Z+9
 7708 34b8 98AF      		std Y+56,r25
 7709 34ba 8FAB      		std Y+55,r24
2326:lp_solve_5.5/colamd/colamd.c **** 	    next_col = Col [col].shared4.degree_next ;
 7710               		.loc 1 2326 0
 7711 34bc 29A9      		ldd r18,Y+49
 7712 34be 3AA9      		ldd r19,Y+50
 7713 34c0 C901      		movw r24,r18
 7714 34c2 880F      		lsl r24
 7715 34c4 991F      		rol r25
 7716 34c6 820F      		add r24,r18
 7717 34c8 931F      		adc r25,r19
 7718 34ca 880F      		lsl r24
 7719 34cc 991F      		rol r25
 7720 34ce 880F      		lsl r24
 7721 34d0 991F      		rol r25
 7722 34d2 9C01      		movw r18,r24
 7723 34d4 CE01      		movw r24,r28
 7724 34d6 895B      		subi r24,-71
 7725 34d8 9F4F      		sbci r25,-1
 7726 34da DC01      		movw r26,r24
 7727 34dc 8D91      		ld r24,X+
 7728 34de 9C91      		ld r25,X
 7729 34e0 820F      		add r24,r18
 7730 34e2 931F      		adc r25,r19
 7731 34e4 FC01      		movw r30,r24
 7732 34e6 8285      		ldd r24,Z+10
 7733 34e8 9385      		ldd r25,Z+11
 7734 34ea 9AA3      		std Y+34,r25
 7735 34ec 89A3      		std Y+33,r24
2327:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (cur_score >= 0) ;
2328:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (cur_score <= n_col) ;
2329:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (cur_score >= EMPTY) ;
2330:lp_solve_5.5/colamd/colamd.c **** 	    if (prev_col == EMPTY)
 7736               		.loc 1 2330 0
 7737 34ee 8FA9      		ldd r24,Y+55
 7738 34f0 98AD      		ldd r25,Y+56
 7739 34f2 0196      		adiw r24,1
 7740 34f4 01F4      		brne .L199
2331:lp_solve_5.5/colamd/colamd.c **** 	    {
2332:lp_solve_5.5/colamd/colamd.c **** 		head [cur_score] = next_col ;
 7741               		.loc 1 2332 0
 7742 34f6 8F85      		ldd r24,Y+15
 7743 34f8 9889      		ldd r25,Y+16
 7744 34fa 880F      		lsl r24
 7745 34fc 991F      		rol r25
 7746 34fe 9E01      		movw r18,r28
 7747 3500 255B      		subi r18,-75
 7748 3502 3F4F      		sbci r19,-1
 7749 3504 D901      		movw r26,r18
 7750 3506 2D91      		ld r18,X+
 7751 3508 3C91      		ld r19,X
 7752 350a 820F      		add r24,r18
 7753 350c 931F      		adc r25,r19
 7754 350e 29A1      		ldd r18,Y+33
 7755 3510 3AA1      		ldd r19,Y+34
 7756 3512 FC01      		movw r30,r24
 7757 3514 3183      		std Z+1,r19
 7758 3516 2083      		st Z,r18
 7759 3518 00C0      		rjmp .L200
 7760               	.L199:
2333:lp_solve_5.5/colamd/colamd.c **** 	    }
2334:lp_solve_5.5/colamd/colamd.c **** 	    else
2335:lp_solve_5.5/colamd/colamd.c **** 	    {
2336:lp_solve_5.5/colamd/colamd.c **** 		Col [prev_col].shared4.degree_next = next_col ;
 7761               		.loc 1 2336 0
 7762 351a 2FA9      		ldd r18,Y+55
 7763 351c 38AD      		ldd r19,Y+56
 7764 351e C901      		movw r24,r18
 7765 3520 880F      		lsl r24
 7766 3522 991F      		rol r25
 7767 3524 820F      		add r24,r18
 7768 3526 931F      		adc r25,r19
 7769 3528 880F      		lsl r24
 7770 352a 991F      		rol r25
 7771 352c 880F      		lsl r24
 7772 352e 991F      		rol r25
 7773 3530 9C01      		movw r18,r24
 7774 3532 CE01      		movw r24,r28
 7775 3534 895B      		subi r24,-71
 7776 3536 9F4F      		sbci r25,-1
 7777 3538 DC01      		movw r26,r24
 7778 353a 8D91      		ld r24,X+
 7779 353c 9C91      		ld r25,X
 7780 353e 820F      		add r24,r18
 7781 3540 931F      		adc r25,r19
 7782 3542 29A1      		ldd r18,Y+33
 7783 3544 3AA1      		ldd r19,Y+34
 7784 3546 FC01      		movw r30,r24
 7785 3548 3387      		std Z+11,r19
 7786 354a 2287      		std Z+10,r18
 7787               	.L200:
2337:lp_solve_5.5/colamd/colamd.c **** 	    }
2338:lp_solve_5.5/colamd/colamd.c **** 	    if (next_col != EMPTY)
 7788               		.loc 1 2338 0
 7789 354c 89A1      		ldd r24,Y+33
 7790 354e 9AA1      		ldd r25,Y+34
 7791 3550 0196      		adiw r24,1
 7792 3552 01F0      		breq .L201
2339:lp_solve_5.5/colamd/colamd.c **** 	    {
2340:lp_solve_5.5/colamd/colamd.c **** 		Col [next_col].shared3.prev = prev_col ;
 7793               		.loc 1 2340 0
 7794 3554 29A1      		ldd r18,Y+33
 7795 3556 3AA1      		ldd r19,Y+34
 7796 3558 C901      		movw r24,r18
 7797 355a 880F      		lsl r24
 7798 355c 991F      		rol r25
 7799 355e 820F      		add r24,r18
 7800 3560 931F      		adc r25,r19
 7801 3562 880F      		lsl r24
 7802 3564 991F      		rol r25
 7803 3566 880F      		lsl r24
 7804 3568 991F      		rol r25
 7805 356a 9C01      		movw r18,r24
 7806 356c CE01      		movw r24,r28
 7807 356e 895B      		subi r24,-71
 7808 3570 9F4F      		sbci r25,-1
 7809 3572 DC01      		movw r26,r24
 7810 3574 8D91      		ld r24,X+
 7811 3576 9C91      		ld r25,X
 7812 3578 820F      		add r24,r18
 7813 357a 931F      		adc r25,r19
 7814 357c 2FA9      		ldd r18,Y+55
 7815 357e 38AD      		ldd r19,Y+56
 7816 3580 FC01      		movw r30,r24
 7817 3582 3187      		std Z+9,r19
 7818 3584 2087      		std Z+8,r18
 7819               	.L201:
2341:lp_solve_5.5/colamd/colamd.c **** 	    }
2342:lp_solve_5.5/colamd/colamd.c **** 
2343:lp_solve_5.5/colamd/colamd.c **** 	    /* === Scan the column ========================================== */
2344:lp_solve_5.5/colamd/colamd.c **** 
2345:lp_solve_5.5/colamd/colamd.c **** 	    cp = &A [Col [col].start] ;
 7820               		.loc 1 2345 0
 7821 3586 29A9      		ldd r18,Y+49
 7822 3588 3AA9      		ldd r19,Y+50
 7823 358a C901      		movw r24,r18
 7824 358c 880F      		lsl r24
 7825 358e 991F      		rol r25
 7826 3590 820F      		add r24,r18
 7827 3592 931F      		adc r25,r19
 7828 3594 880F      		lsl r24
 7829 3596 991F      		rol r25
 7830 3598 880F      		lsl r24
 7831 359a 991F      		rol r25
 7832 359c 9C01      		movw r18,r24
 7833 359e CE01      		movw r24,r28
 7834 35a0 895B      		subi r24,-71
 7835 35a2 9F4F      		sbci r25,-1
 7836 35a4 DC01      		movw r26,r24
 7837 35a6 8D91      		ld r24,X+
 7838 35a8 9C91      		ld r25,X
 7839 35aa 820F      		add r24,r18
 7840 35ac 931F      		adc r25,r19
 7841 35ae FC01      		movw r30,r24
 7842 35b0 8081      		ld r24,Z
 7843 35b2 9181      		ldd r25,Z+1
 7844 35b4 880F      		lsl r24
 7845 35b6 991F      		rol r25
 7846 35b8 9E01      		movw r18,r28
 7847 35ba 275B      		subi r18,-73
 7848 35bc 3F4F      		sbci r19,-1
 7849 35be D901      		movw r26,r18
 7850 35c0 2D91      		ld r18,X+
 7851 35c2 3C91      		ld r19,X
 7852 35c4 820F      		add r24,r18
 7853 35c6 931F      		adc r25,r19
 7854 35c8 9C83      		std Y+4,r25
 7855 35ca 8B83      		std Y+3,r24
2346:lp_solve_5.5/colamd/colamd.c **** 	    cp_end = cp + Col [col].length ;
 7856               		.loc 1 2346 0
 7857 35cc 29A9      		ldd r18,Y+49
 7858 35ce 3AA9      		ldd r19,Y+50
 7859 35d0 C901      		movw r24,r18
 7860 35d2 880F      		lsl r24
 7861 35d4 991F      		rol r25
 7862 35d6 820F      		add r24,r18
 7863 35d8 931F      		adc r25,r19
 7864 35da 880F      		lsl r24
 7865 35dc 991F      		rol r25
 7866 35de 880F      		lsl r24
 7867 35e0 991F      		rol r25
 7868 35e2 9C01      		movw r18,r24
 7869 35e4 CE01      		movw r24,r28
 7870 35e6 895B      		subi r24,-71
 7871 35e8 9F4F      		sbci r25,-1
 7872 35ea FC01      		movw r30,r24
 7873 35ec 8081      		ld r24,Z
 7874 35ee 9181      		ldd r25,Z+1
 7875 35f0 820F      		add r24,r18
 7876 35f2 931F      		adc r25,r19
 7877 35f4 DC01      		movw r26,r24
 7878 35f6 1296      		adiw r26,2
 7879 35f8 8D91      		ld r24,X+
 7880 35fa 9C91      		ld r25,X
 7881 35fc 1397      		sbiw r26,2+1
 7882 35fe 880F      		lsl r24
 7883 3600 991F      		rol r25
 7884 3602 2B81      		ldd r18,Y+3
 7885 3604 3C81      		ldd r19,Y+4
 7886 3606 820F      		add r24,r18
 7887 3608 931F      		adc r25,r19
 7888 360a 9CA7      		std Y+44,r25
 7889 360c 8BA7      		std Y+43,r24
2347:lp_solve_5.5/colamd/colamd.c **** 	    while (cp < cp_end)
 7890               		.loc 1 2347 0
 7891 360e 00C0      		rjmp .L202
 7892               	.L206:
2348:lp_solve_5.5/colamd/colamd.c **** 	    {
2349:lp_solve_5.5/colamd/colamd.c **** 		/* get a row */
2350:lp_solve_5.5/colamd/colamd.c **** 		row = *cp++ ;
 7893               		.loc 1 2350 0
 7894 3610 8B81      		ldd r24,Y+3
 7895 3612 9C81      		ldd r25,Y+4
 7896 3614 9C01      		movw r18,r24
 7897 3616 2E5F      		subi r18,-2
 7898 3618 3F4F      		sbci r19,-1
 7899 361a 3C83      		std Y+4,r19
 7900 361c 2B83      		std Y+3,r18
 7901 361e FC01      		movw r30,r24
 7902 3620 8081      		ld r24,Z
 7903 3622 9181      		ldd r25,Z+1
 7904 3624 9EA7      		std Y+46,r25
 7905 3626 8DA7      		std Y+45,r24
2351:lp_solve_5.5/colamd/colamd.c **** 		row_mark = Row [row].shared2.mark ;
 7906               		.loc 1 2351 0
 7907 3628 8DA5      		ldd r24,Y+45
 7908 362a 9EA5      		ldd r25,Y+46
 7909 362c 880F      		lsl r24
 7910 362e 991F      		rol r25
 7911 3630 880F      		lsl r24
 7912 3632 991F      		rol r25
 7913 3634 880F      		lsl r24
 7914 3636 991F      		rol r25
 7915 3638 9E01      		movw r18,r28
 7916 363a 2B5B      		subi r18,-69
 7917 363c 3F4F      		sbci r19,-1
 7918 363e D901      		movw r26,r18
 7919 3640 2D91      		ld r18,X+
 7920 3642 3C91      		ld r19,X
 7921 3644 820F      		add r24,r18
 7922 3646 931F      		adc r25,r19
 7923 3648 FC01      		movw r30,r24
 7924 364a 8681      		ldd r24,Z+6
 7925 364c 9781      		ldd r25,Z+7
 7926 364e 9AAF      		std Y+58,r25
 7927 3650 89AF      		std Y+57,r24
2352:lp_solve_5.5/colamd/colamd.c **** 		/* skip if dead */
2353:lp_solve_5.5/colamd/colamd.c **** 		if (ROW_IS_MARKED_DEAD (row_mark))
 7928               		.loc 1 2353 0
 7929 3652 89AD      		ldd r24,Y+57
 7930 3654 9AAD      		ldd r25,Y+58
 7931 3656 9923      		tst r25
 7932 3658 04F4      		brge .L203
2354:lp_solve_5.5/colamd/colamd.c **** 		{
2355:lp_solve_5.5/colamd/colamd.c **** 		    continue ;
 7933               		.loc 1 2355 0
 7934 365a 00C0      		rjmp .L202
 7935               	.L203:
2356:lp_solve_5.5/colamd/colamd.c **** 		}
2357:lp_solve_5.5/colamd/colamd.c **** 		ASSERT (row != pivot_row) ;
2358:lp_solve_5.5/colamd/colamd.c **** 		set_difference = row_mark - tag_mark ;
 7936               		.loc 1 2358 0
 7937 365c 29AD      		ldd r18,Y+57
 7938 365e 3AAD      		ldd r19,Y+58
 7939 3660 8D89      		ldd r24,Y+21
 7940 3662 9E89      		ldd r25,Y+22
 7941 3664 A901      		movw r20,r18
 7942 3666 481B      		sub r20,r24
 7943 3668 590B      		sbc r21,r25
 7944 366a CA01      		movw r24,r20
 7945 366c 988F      		std Y+24,r25
 7946 366e 8F8B      		std Y+23,r24
2359:lp_solve_5.5/colamd/colamd.c **** 		/* check if the row has been seen yet */
2360:lp_solve_5.5/colamd/colamd.c **** 		if (set_difference < 0)
 7947               		.loc 1 2360 0
 7948 3670 8F89      		ldd r24,Y+23
 7949 3672 988D      		ldd r25,Y+24
 7950 3674 9923      		tst r25
 7951 3676 04F4      		brge .L204
2361:lp_solve_5.5/colamd/colamd.c **** 		{
2362:lp_solve_5.5/colamd/colamd.c **** 		    ASSERT (Row [row].shared1.degree <= max_deg) ;
2363:lp_solve_5.5/colamd/colamd.c **** 		    set_difference = Row [row].shared1.degree ;
 7952               		.loc 1 2363 0
 7953 3678 8DA5      		ldd r24,Y+45
 7954 367a 9EA5      		ldd r25,Y+46
 7955 367c 880F      		lsl r24
 7956 367e 991F      		rol r25
 7957 3680 880F      		lsl r24
 7958 3682 991F      		rol r25
 7959 3684 880F      		lsl r24
 7960 3686 991F      		rol r25
 7961 3688 9E01      		movw r18,r28
 7962 368a 2B5B      		subi r18,-69
 7963 368c 3F4F      		sbci r19,-1
 7964 368e D901      		movw r26,r18
 7965 3690 2D91      		ld r18,X+
 7966 3692 3C91      		ld r19,X
 7967 3694 820F      		add r24,r18
 7968 3696 931F      		adc r25,r19
 7969 3698 FC01      		movw r30,r24
 7970 369a 8481      		ldd r24,Z+4
 7971 369c 9581      		ldd r25,Z+5
 7972 369e 988F      		std Y+24,r25
 7973 36a0 8F8B      		std Y+23,r24
 7974               	.L204:
2364:lp_solve_5.5/colamd/colamd.c **** 		}
2365:lp_solve_5.5/colamd/colamd.c **** 		/* subtract column thickness from this row's set difference */
2366:lp_solve_5.5/colamd/colamd.c **** 		set_difference -= col_thickness ;
 7975               		.loc 1 2366 0
 7976 36a2 2F89      		ldd r18,Y+23
 7977 36a4 388D      		ldd r19,Y+24
 7978 36a6 8BA9      		ldd r24,Y+51
 7979 36a8 9CA9      		ldd r25,Y+52
 7980 36aa A901      		movw r20,r18
 7981 36ac 481B      		sub r20,r24
 7982 36ae 590B      		sbc r21,r25
 7983 36b0 CA01      		movw r24,r20
 7984 36b2 988F      		std Y+24,r25
 7985 36b4 8F8B      		std Y+23,r24
2367:lp_solve_5.5/colamd/colamd.c **** 		ASSERT (set_difference >= 0) ;
2368:lp_solve_5.5/colamd/colamd.c **** 		/* absorb this row if the set difference becomes zero */
2369:lp_solve_5.5/colamd/colamd.c **** 		if (set_difference == 0)
 7986               		.loc 1 2369 0
 7987 36b6 8F89      		ldd r24,Y+23
 7988 36b8 988D      		ldd r25,Y+24
 7989 36ba 892B      		or r24,r25
 7990 36bc 01F4      		brne .L205
2370:lp_solve_5.5/colamd/colamd.c **** 		{
2371:lp_solve_5.5/colamd/colamd.c **** 		    DEBUG3 (("aggressive absorption. Row: %d\n", row)) ;
2372:lp_solve_5.5/colamd/colamd.c **** 		    KILL_ROW (row) ;
 7991               		.loc 1 2372 0
 7992 36be 8DA5      		ldd r24,Y+45
 7993 36c0 9EA5      		ldd r25,Y+46
 7994 36c2 880F      		lsl r24
 7995 36c4 991F      		rol r25
 7996 36c6 880F      		lsl r24
 7997 36c8 991F      		rol r25
 7998 36ca 880F      		lsl r24
 7999 36cc 991F      		rol r25
 8000 36ce 9E01      		movw r18,r28
 8001 36d0 2B5B      		subi r18,-69
 8002 36d2 3F4F      		sbci r19,-1
 8003 36d4 D901      		movw r26,r18
 8004 36d6 2D91      		ld r18,X+
 8005 36d8 3C91      		ld r19,X
 8006 36da 820F      		add r24,r18
 8007 36dc 931F      		adc r25,r19
 8008 36de 2FEF      		ldi r18,lo8(-1)
 8009 36e0 3FEF      		ldi r19,lo8(-1)
 8010 36e2 FC01      		movw r30,r24
 8011 36e4 3783      		std Z+7,r19
 8012 36e6 2683      		std Z+6,r18
 8013 36e8 00C0      		rjmp .L202
 8014               	.L205:
2373:lp_solve_5.5/colamd/colamd.c **** 		}
2374:lp_solve_5.5/colamd/colamd.c **** 		else
2375:lp_solve_5.5/colamd/colamd.c **** 		{
2376:lp_solve_5.5/colamd/colamd.c **** 		    /* save the new mark */
2377:lp_solve_5.5/colamd/colamd.c **** 		    Row [row].shared2.mark = set_difference + tag_mark ;
 8015               		.loc 1 2377 0
 8016 36ea 8DA5      		ldd r24,Y+45
 8017 36ec 9EA5      		ldd r25,Y+46
 8018 36ee 880F      		lsl r24
 8019 36f0 991F      		rol r25
 8020 36f2 880F      		lsl r24
 8021 36f4 991F      		rol r25
 8022 36f6 880F      		lsl r24
 8023 36f8 991F      		rol r25
 8024 36fa 9E01      		movw r18,r28
 8025 36fc 2B5B      		subi r18,-69
 8026 36fe 3F4F      		sbci r19,-1
 8027 3700 D901      		movw r26,r18
 8028 3702 2D91      		ld r18,X+
 8029 3704 3C91      		ld r19,X
 8030 3706 820F      		add r24,r18
 8031 3708 931F      		adc r25,r19
 8032 370a 4F89      		ldd r20,Y+23
 8033 370c 588D      		ldd r21,Y+24
 8034 370e 2D89      		ldd r18,Y+21
 8035 3710 3E89      		ldd r19,Y+22
 8036 3712 240F      		add r18,r20
 8037 3714 351F      		adc r19,r21
 8038 3716 FC01      		movw r30,r24
 8039 3718 3783      		std Z+7,r19
 8040 371a 2683      		std Z+6,r18
 8041               	.L202:
2347:lp_solve_5.5/colamd/colamd.c **** 	    {
 8042               		.loc 1 2347 0
 8043 371c 2B81      		ldd r18,Y+3
 8044 371e 3C81      		ldd r19,Y+4
 8045 3720 8BA5      		ldd r24,Y+43
 8046 3722 9CA5      		ldd r25,Y+44
 8047 3724 2817      		cp r18,r24
 8048 3726 3907      		cpc r19,r25
 8049 3728 00F4      		brsh .+2
 8050 372a 00C0      		rjmp .L206
 8051               	.L198:
2311:lp_solve_5.5/colamd/colamd.c **** 	{
 8052               		.loc 1 2311 0
 8053 372c 2D81      		ldd r18,Y+5
 8054 372e 3E81      		ldd r19,Y+6
 8055 3730 8FA5      		ldd r24,Y+47
 8056 3732 98A9      		ldd r25,Y+48
 8057 3734 2817      		cp r18,r24
 8058 3736 3907      		cpc r19,r25
 8059 3738 00F4      		brsh .+2
 8060 373a 00C0      		rjmp .L207
2378:lp_solve_5.5/colamd/colamd.c **** 		}
2379:lp_solve_5.5/colamd/colamd.c **** 	    }
2380:lp_solve_5.5/colamd/colamd.c **** 	}
2381:lp_solve_5.5/colamd/colamd.c **** 
2382:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
2383:lp_solve_5.5/colamd/colamd.c **** 	debug_deg_lists (n_row, n_col, Row, Col, head,
2384:lp_solve_5.5/colamd/colamd.c **** 		min_score, n_col2-k-pivot_row_degree, max_deg) ;
2385:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
2386:lp_solve_5.5/colamd/colamd.c **** 
2387:lp_solve_5.5/colamd/colamd.c **** 	/* === Add up set differences for each column ======================= */
2388:lp_solve_5.5/colamd/colamd.c **** 
2389:lp_solve_5.5/colamd/colamd.c **** 	DEBUG3 (("** Adding set differences phase. **\n")) ;
2390:lp_solve_5.5/colamd/colamd.c **** 
2391:lp_solve_5.5/colamd/colamd.c **** 	/* for each column in pivot row */
2392:lp_solve_5.5/colamd/colamd.c **** 	rp = &A [pivot_row_start] ;
 8061               		.loc 1 2392 0
 8062 373c 89A5      		ldd r24,Y+41
 8063 373e 9AA5      		ldd r25,Y+42
 8064 3740 880F      		lsl r24
 8065 3742 991F      		rol r25
 8066 3744 9E01      		movw r18,r28
 8067 3746 275B      		subi r18,-73
 8068 3748 3F4F      		sbci r19,-1
 8069 374a D901      		movw r26,r18
 8070 374c 2D91      		ld r18,X+
 8071 374e 3C91      		ld r19,X
 8072 3750 820F      		add r24,r18
 8073 3752 931F      		adc r25,r19
 8074 3754 9E83      		std Y+6,r25
 8075 3756 8D83      		std Y+5,r24
2393:lp_solve_5.5/colamd/colamd.c **** 	rp_end = rp + pivot_row_length ;
 8076               		.loc 1 2393 0
 8077 3758 8DA9      		ldd r24,Y+53
 8078 375a 9EA9      		ldd r25,Y+54
 8079 375c 880F      		lsl r24
 8080 375e 991F      		rol r25
 8081 3760 2D81      		ldd r18,Y+5
 8082 3762 3E81      		ldd r19,Y+6
 8083 3764 820F      		add r24,r18
 8084 3766 931F      		adc r25,r19
 8085 3768 98AB      		std Y+48,r25
 8086 376a 8FA7      		std Y+47,r24
2394:lp_solve_5.5/colamd/colamd.c **** 	while (rp < rp_end)
 8087               		.loc 1 2394 0
 8088 376c 00C0      		rjmp .L208
 8089               	.L216:
2395:lp_solve_5.5/colamd/colamd.c **** 	{
2396:lp_solve_5.5/colamd/colamd.c **** 	    /* get a column */
2397:lp_solve_5.5/colamd/colamd.c **** 	    col = *rp++ ;
 8090               		.loc 1 2397 0
 8091 376e 8D81      		ldd r24,Y+5
 8092 3770 9E81      		ldd r25,Y+6
 8093 3772 9C01      		movw r18,r24
 8094 3774 2E5F      		subi r18,-2
 8095 3776 3F4F      		sbci r19,-1
 8096 3778 3E83      		std Y+6,r19
 8097 377a 2D83      		std Y+5,r18
 8098 377c FC01      		movw r30,r24
 8099 377e 8081      		ld r24,Z
 8100 3780 9181      		ldd r25,Z+1
 8101 3782 9AAB      		std Y+50,r25
 8102 3784 89AB      		std Y+49,r24
2398:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (COL_IS_ALIVE (col) && col != pivot_col) ;
2399:lp_solve_5.5/colamd/colamd.c **** 	    hash = 0 ;
 8103               		.loc 1 2399 0
 8104 3786 1A8A      		std Y+18,__zero_reg__
 8105 3788 198A      		std Y+17,__zero_reg__
2400:lp_solve_5.5/colamd/colamd.c **** 	    cur_score = 0 ;
 8106               		.loc 1 2400 0
 8107 378a 188A      		std Y+16,__zero_reg__
 8108 378c 1F86      		std Y+15,__zero_reg__
2401:lp_solve_5.5/colamd/colamd.c **** 	    cp = &A [Col [col].start] ;
 8109               		.loc 1 2401 0
 8110 378e 29A9      		ldd r18,Y+49
 8111 3790 3AA9      		ldd r19,Y+50
 8112 3792 C901      		movw r24,r18
 8113 3794 880F      		lsl r24
 8114 3796 991F      		rol r25
 8115 3798 820F      		add r24,r18
 8116 379a 931F      		adc r25,r19
 8117 379c 880F      		lsl r24
 8118 379e 991F      		rol r25
 8119 37a0 880F      		lsl r24
 8120 37a2 991F      		rol r25
 8121 37a4 9C01      		movw r18,r24
 8122 37a6 CE01      		movw r24,r28
 8123 37a8 895B      		subi r24,-71
 8124 37aa 9F4F      		sbci r25,-1
 8125 37ac DC01      		movw r26,r24
 8126 37ae 8D91      		ld r24,X+
 8127 37b0 9C91      		ld r25,X
 8128 37b2 820F      		add r24,r18
 8129 37b4 931F      		adc r25,r19
 8130 37b6 FC01      		movw r30,r24
 8131 37b8 8081      		ld r24,Z
 8132 37ba 9181      		ldd r25,Z+1
 8133 37bc 880F      		lsl r24
 8134 37be 991F      		rol r25
 8135 37c0 9E01      		movw r18,r28
 8136 37c2 275B      		subi r18,-73
 8137 37c4 3F4F      		sbci r19,-1
 8138 37c6 D901      		movw r26,r18
 8139 37c8 2D91      		ld r18,X+
 8140 37ca 3C91      		ld r19,X
 8141 37cc 820F      		add r24,r18
 8142 37ce 931F      		adc r25,r19
 8143 37d0 9C83      		std Y+4,r25
 8144 37d2 8B83      		std Y+3,r24
2402:lp_solve_5.5/colamd/colamd.c **** 	    /* compact the column */
2403:lp_solve_5.5/colamd/colamd.c **** 	    new_cp = cp ;
 8145               		.loc 1 2403 0
 8146 37d4 8B81      		ldd r24,Y+3
 8147 37d6 9C81      		ldd r25,Y+4
 8148 37d8 9A87      		std Y+10,r25
 8149 37da 8987      		std Y+9,r24
2404:lp_solve_5.5/colamd/colamd.c **** 	    cp_end = cp + Col [col].length ;
 8150               		.loc 1 2404 0
 8151 37dc 29A9      		ldd r18,Y+49
 8152 37de 3AA9      		ldd r19,Y+50
 8153 37e0 C901      		movw r24,r18
 8154 37e2 880F      		lsl r24
 8155 37e4 991F      		rol r25
 8156 37e6 820F      		add r24,r18
 8157 37e8 931F      		adc r25,r19
 8158 37ea 880F      		lsl r24
 8159 37ec 991F      		rol r25
 8160 37ee 880F      		lsl r24
 8161 37f0 991F      		rol r25
 8162 37f2 9C01      		movw r18,r24
 8163 37f4 CE01      		movw r24,r28
 8164 37f6 895B      		subi r24,-71
 8165 37f8 9F4F      		sbci r25,-1
 8166 37fa FC01      		movw r30,r24
 8167 37fc 8081      		ld r24,Z
 8168 37fe 9181      		ldd r25,Z+1
 8169 3800 820F      		add r24,r18
 8170 3802 931F      		adc r25,r19
 8171 3804 DC01      		movw r26,r24
 8172 3806 1296      		adiw r26,2
 8173 3808 8D91      		ld r24,X+
 8174 380a 9C91      		ld r25,X
 8175 380c 1397      		sbiw r26,2+1
 8176 380e 880F      		lsl r24
 8177 3810 991F      		rol r25
 8178 3812 2B81      		ldd r18,Y+3
 8179 3814 3C81      		ldd r19,Y+4
 8180 3816 820F      		add r24,r18
 8181 3818 931F      		adc r25,r19
 8182 381a 9CA7      		std Y+44,r25
 8183 381c 8BA7      		std Y+43,r24
2405:lp_solve_5.5/colamd/colamd.c **** 
2406:lp_solve_5.5/colamd/colamd.c **** 	    DEBUG4 (("Adding set diffs for Col: %d.\n", col)) ;
2407:lp_solve_5.5/colamd/colamd.c **** 
2408:lp_solve_5.5/colamd/colamd.c **** 	    while (cp < cp_end)
 8184               		.loc 1 2408 0
 8185 381e 00C0      		rjmp .L209
 8186               	.L212:
2409:lp_solve_5.5/colamd/colamd.c **** 	    {
2410:lp_solve_5.5/colamd/colamd.c **** 		/* get a row */
2411:lp_solve_5.5/colamd/colamd.c **** 		row = *cp++ ;
 8187               		.loc 1 2411 0
 8188 3820 8B81      		ldd r24,Y+3
 8189 3822 9C81      		ldd r25,Y+4
 8190 3824 9C01      		movw r18,r24
 8191 3826 2E5F      		subi r18,-2
 8192 3828 3F4F      		sbci r19,-1
 8193 382a 3C83      		std Y+4,r19
 8194 382c 2B83      		std Y+3,r18
 8195 382e FC01      		movw r30,r24
 8196 3830 8081      		ld r24,Z
 8197 3832 9181      		ldd r25,Z+1
 8198 3834 9EA7      		std Y+46,r25
 8199 3836 8DA7      		std Y+45,r24
2412:lp_solve_5.5/colamd/colamd.c **** 		ASSERT(row >= 0 && row < n_row) ;
2413:lp_solve_5.5/colamd/colamd.c **** 		row_mark = Row [row].shared2.mark ;
 8200               		.loc 1 2413 0
 8201 3838 8DA5      		ldd r24,Y+45
 8202 383a 9EA5      		ldd r25,Y+46
 8203 383c 880F      		lsl r24
 8204 383e 991F      		rol r25
 8205 3840 880F      		lsl r24
 8206 3842 991F      		rol r25
 8207 3844 880F      		lsl r24
 8208 3846 991F      		rol r25
 8209 3848 9E01      		movw r18,r28
 8210 384a 2B5B      		subi r18,-69
 8211 384c 3F4F      		sbci r19,-1
 8212 384e D901      		movw r26,r18
 8213 3850 2D91      		ld r18,X+
 8214 3852 3C91      		ld r19,X
 8215 3854 820F      		add r24,r18
 8216 3856 931F      		adc r25,r19
 8217 3858 FC01      		movw r30,r24
 8218 385a 8681      		ldd r24,Z+6
 8219 385c 9781      		ldd r25,Z+7
 8220 385e 9AAF      		std Y+58,r25
 8221 3860 89AF      		std Y+57,r24
2414:lp_solve_5.5/colamd/colamd.c **** 		/* skip if dead */
2415:lp_solve_5.5/colamd/colamd.c **** 		if (ROW_IS_MARKED_DEAD (row_mark))
 8222               		.loc 1 2415 0
 8223 3862 89AD      		ldd r24,Y+57
 8224 3864 9AAD      		ldd r25,Y+58
 8225 3866 9923      		tst r25
 8226 3868 04F4      		brge .L210
2416:lp_solve_5.5/colamd/colamd.c **** 		{
2417:lp_solve_5.5/colamd/colamd.c **** 		    continue ;
 8227               		.loc 1 2417 0
 8228 386a 00C0      		rjmp .L209
 8229               	.L210:
2418:lp_solve_5.5/colamd/colamd.c **** 		}
2419:lp_solve_5.5/colamd/colamd.c **** 		ASSERT (row_mark > tag_mark) ;
2420:lp_solve_5.5/colamd/colamd.c **** 		/* compact the column */
2421:lp_solve_5.5/colamd/colamd.c **** 		*new_cp++ = row ;
 8230               		.loc 1 2421 0
 8231 386c 8985      		ldd r24,Y+9
 8232 386e 9A85      		ldd r25,Y+10
 8233 3870 9C01      		movw r18,r24
 8234 3872 2E5F      		subi r18,-2
 8235 3874 3F4F      		sbci r19,-1
 8236 3876 3A87      		std Y+10,r19
 8237 3878 2987      		std Y+9,r18
 8238 387a 2DA5      		ldd r18,Y+45
 8239 387c 3EA5      		ldd r19,Y+46
 8240 387e DC01      		movw r26,r24
 8241 3880 2D93      		st X+,r18
 8242 3882 3C93      		st X,r19
2422:lp_solve_5.5/colamd/colamd.c **** 		/* compute hash function */
2423:lp_solve_5.5/colamd/colamd.c **** 		hash += row ;
 8243               		.loc 1 2423 0
 8244 3884 8DA5      		ldd r24,Y+45
 8245 3886 9EA5      		ldd r25,Y+46
 8246 3888 2989      		ldd r18,Y+17
 8247 388a 3A89      		ldd r19,Y+18
 8248 388c 820F      		add r24,r18
 8249 388e 931F      		adc r25,r19
 8250 3890 9A8B      		std Y+18,r25
 8251 3892 898B      		std Y+17,r24
2424:lp_solve_5.5/colamd/colamd.c **** 		/* add set difference */
2425:lp_solve_5.5/colamd/colamd.c **** 		cur_score += row_mark - tag_mark ;
 8252               		.loc 1 2425 0
 8253 3894 29AD      		ldd r18,Y+57
 8254 3896 3AAD      		ldd r19,Y+58
 8255 3898 8D89      		ldd r24,Y+21
 8256 389a 9E89      		ldd r25,Y+22
 8257 389c F901      		movw r30,r18
 8258 389e E81B      		sub r30,r24
 8259 38a0 F90B      		sbc r31,r25
 8260 38a2 CF01      		movw r24,r30
 8261 38a4 2F85      		ldd r18,Y+15
 8262 38a6 3889      		ldd r19,Y+16
 8263 38a8 820F      		add r24,r18
 8264 38aa 931F      		adc r25,r19
 8265 38ac 988B      		std Y+16,r25
 8266 38ae 8F87      		std Y+15,r24
2426:lp_solve_5.5/colamd/colamd.c **** 		/* integer overflow... */
2427:lp_solve_5.5/colamd/colamd.c **** 		cur_score = MIN (cur_score, n_col) ;
 8267               		.loc 1 2427 0
 8268 38b0 CE01      		movw r24,r28
 8269 38b2 8F5B      		subi r24,-65
 8270 38b4 9F4F      		sbci r25,-1
 8271 38b6 2F85      		ldd r18,Y+15
 8272 38b8 3889      		ldd r19,Y+16
 8273 38ba DC01      		movw r26,r24
 8274 38bc 8D91      		ld r24,X+
 8275 38be 9C91      		ld r25,X
 8276 38c0 2817      		cp r18,r24
 8277 38c2 3907      		cpc r19,r25
 8278 38c4 04F4      		brge .L211
 8279 38c6 C901      		movw r24,r18
 8280               	.L211:
 8281 38c8 988B      		std Y+16,r25
 8282 38ca 8F87      		std Y+15,r24
 8283               	.L209:
2408:lp_solve_5.5/colamd/colamd.c **** 	    {
 8284               		.loc 1 2408 0
 8285 38cc 2B81      		ldd r18,Y+3
 8286 38ce 3C81      		ldd r19,Y+4
 8287 38d0 8BA5      		ldd r24,Y+43
 8288 38d2 9CA5      		ldd r25,Y+44
 8289 38d4 2817      		cp r18,r24
 8290 38d6 3907      		cpc r19,r25
 8291 38d8 00F4      		brsh .+2
 8292 38da 00C0      		rjmp .L212
2428:lp_solve_5.5/colamd/colamd.c **** 	    }
2429:lp_solve_5.5/colamd/colamd.c **** 
2430:lp_solve_5.5/colamd/colamd.c **** 	    /* recompute the column's length */
2431:lp_solve_5.5/colamd/colamd.c **** 	    Col [col].length = (int) (new_cp - &A [Col [col].start]) ;
 8293               		.loc 1 2431 0
 8294 38dc 29A9      		ldd r18,Y+49
 8295 38de 3AA9      		ldd r19,Y+50
 8296 38e0 C901      		movw r24,r18
 8297 38e2 880F      		lsl r24
 8298 38e4 991F      		rol r25
 8299 38e6 820F      		add r24,r18
 8300 38e8 931F      		adc r25,r19
 8301 38ea 880F      		lsl r24
 8302 38ec 991F      		rol r25
 8303 38ee 880F      		lsl r24
 8304 38f0 991F      		rol r25
 8305 38f2 9C01      		movw r18,r24
 8306 38f4 CE01      		movw r24,r28
 8307 38f6 895B      		subi r24,-71
 8308 38f8 9F4F      		sbci r25,-1
 8309 38fa FC01      		movw r30,r24
 8310 38fc 8081      		ld r24,Z
 8311 38fe 9181      		ldd r25,Z+1
 8312 3900 AC01      		movw r20,r24
 8313 3902 420F      		add r20,r18
 8314 3904 531F      		adc r21,r19
 8315 3906 6985      		ldd r22,Y+9
 8316 3908 7A85      		ldd r23,Y+10
 8317 390a 29A9      		ldd r18,Y+49
 8318 390c 3AA9      		ldd r19,Y+50
 8319 390e C901      		movw r24,r18
 8320 3910 880F      		lsl r24
 8321 3912 991F      		rol r25
 8322 3914 820F      		add r24,r18
 8323 3916 931F      		adc r25,r19
 8324 3918 880F      		lsl r24
 8325 391a 991F      		rol r25
 8326 391c 880F      		lsl r24
 8327 391e 991F      		rol r25
 8328 3920 9C01      		movw r18,r24
 8329 3922 CE01      		movw r24,r28
 8330 3924 895B      		subi r24,-71
 8331 3926 9F4F      		sbci r25,-1
 8332 3928 DC01      		movw r26,r24
 8333 392a 8D91      		ld r24,X+
 8334 392c 9C91      		ld r25,X
 8335 392e 820F      		add r24,r18
 8336 3930 931F      		adc r25,r19
 8337 3932 FC01      		movw r30,r24
 8338 3934 8081      		ld r24,Z
 8339 3936 9181      		ldd r25,Z+1
 8340 3938 880F      		lsl r24
 8341 393a 991F      		rol r25
 8342 393c 9E01      		movw r18,r28
 8343 393e 275B      		subi r18,-73
 8344 3940 3F4F      		sbci r19,-1
 8345 3942 D901      		movw r26,r18
 8346 3944 2D91      		ld r18,X+
 8347 3946 3C91      		ld r19,X
 8348 3948 820F      		add r24,r18
 8349 394a 931F      		adc r25,r19
 8350 394c FB01      		movw r30,r22
 8351 394e E81B      		sub r30,r24
 8352 3950 F90B      		sbc r31,r25
 8353 3952 CF01      		movw r24,r30
 8354 3954 9595      		asr r25
 8355 3956 8795      		ror r24
 8356 3958 DA01      		movw r26,r20
 8357 395a 1396      		adiw r26,2+1
 8358 395c 9C93      		st X,r25
 8359 395e 8E93      		st -X,r24
 8360 3960 1297      		sbiw r26,2
2432:lp_solve_5.5/colamd/colamd.c **** 
2433:lp_solve_5.5/colamd/colamd.c **** 	    /* === Further mass elimination ================================= */
2434:lp_solve_5.5/colamd/colamd.c **** 
2435:lp_solve_5.5/colamd/colamd.c **** 	    if (Col [col].length == 0)
 8361               		.loc 1 2435 0
 8362 3962 29A9      		ldd r18,Y+49
 8363 3964 3AA9      		ldd r19,Y+50
 8364 3966 C901      		movw r24,r18
 8365 3968 880F      		lsl r24
 8366 396a 991F      		rol r25
 8367 396c 820F      		add r24,r18
 8368 396e 931F      		adc r25,r19
 8369 3970 880F      		lsl r24
 8370 3972 991F      		rol r25
 8371 3974 880F      		lsl r24
 8372 3976 991F      		rol r25
 8373 3978 9C01      		movw r18,r24
 8374 397a CE01      		movw r24,r28
 8375 397c 895B      		subi r24,-71
 8376 397e 9F4F      		sbci r25,-1
 8377 3980 FC01      		movw r30,r24
 8378 3982 8081      		ld r24,Z
 8379 3984 9181      		ldd r25,Z+1
 8380 3986 820F      		add r24,r18
 8381 3988 931F      		adc r25,r19
 8382 398a DC01      		movw r26,r24
 8383 398c 1296      		adiw r26,2
 8384 398e 8D91      		ld r24,X+
 8385 3990 9C91      		ld r25,X
 8386 3992 1397      		sbiw r26,2+1
 8387 3994 892B      		or r24,r25
 8388 3996 01F0      		breq .+2
 8389 3998 00C0      		rjmp .L213
2436:lp_solve_5.5/colamd/colamd.c **** 	    {
2437:lp_solve_5.5/colamd/colamd.c **** 		DEBUG4 (("further mass elimination. Col: %d\n", col)) ;
2438:lp_solve_5.5/colamd/colamd.c **** 		/* nothing left but the pivot row in this column */
2439:lp_solve_5.5/colamd/colamd.c **** 		KILL_PRINCIPAL_COL (col) ;
 8390               		.loc 1 2439 0
 8391 399a 29A9      		ldd r18,Y+49
 8392 399c 3AA9      		ldd r19,Y+50
 8393 399e C901      		movw r24,r18
 8394 39a0 880F      		lsl r24
 8395 39a2 991F      		rol r25
 8396 39a4 820F      		add r24,r18
 8397 39a6 931F      		adc r25,r19
 8398 39a8 880F      		lsl r24
 8399 39aa 991F      		rol r25
 8400 39ac 880F      		lsl r24
 8401 39ae 991F      		rol r25
 8402 39b0 9C01      		movw r18,r24
 8403 39b2 CE01      		movw r24,r28
 8404 39b4 895B      		subi r24,-71
 8405 39b6 9F4F      		sbci r25,-1
 8406 39b8 FC01      		movw r30,r24
 8407 39ba 8081      		ld r24,Z
 8408 39bc 9181      		ldd r25,Z+1
 8409 39be 820F      		add r24,r18
 8410 39c0 931F      		adc r25,r19
 8411 39c2 2FEF      		ldi r18,lo8(-1)
 8412 39c4 3FEF      		ldi r19,lo8(-1)
 8413 39c6 DC01      		movw r26,r24
 8414 39c8 2D93      		st X+,r18
 8415 39ca 3C93      		st X,r19
2440:lp_solve_5.5/colamd/colamd.c **** 		pivot_row_degree -= Col [col].shared1.thickness ;
 8416               		.loc 1 2440 0
 8417 39cc 29A9      		ldd r18,Y+49
 8418 39ce 3AA9      		ldd r19,Y+50
 8419 39d0 C901      		movw r24,r18
 8420 39d2 880F      		lsl r24
 8421 39d4 991F      		rol r25
 8422 39d6 820F      		add r24,r18
 8423 39d8 931F      		adc r25,r19
 8424 39da 880F      		lsl r24
 8425 39dc 991F      		rol r25
 8426 39de 880F      		lsl r24
 8427 39e0 991F      		rol r25
 8428 39e2 9C01      		movw r18,r24
 8429 39e4 CE01      		movw r24,r28
 8430 39e6 895B      		subi r24,-71
 8431 39e8 9F4F      		sbci r25,-1
 8432 39ea FC01      		movw r30,r24
 8433 39ec 8081      		ld r24,Z
 8434 39ee 9181      		ldd r25,Z+1
 8435 39f0 820F      		add r24,r18
 8436 39f2 931F      		adc r25,r19
 8437 39f4 DC01      		movw r26,r24
 8438 39f6 1496      		adiw r26,4
 8439 39f8 8D91      		ld r24,X+
 8440 39fa 9C91      		ld r25,X
 8441 39fc 1597      		sbiw r26,4+1
 8442 39fe 2D85      		ldd r18,Y+13
 8443 3a00 3E85      		ldd r19,Y+14
 8444 3a02 F901      		movw r30,r18
 8445 3a04 E81B      		sub r30,r24
 8446 3a06 F90B      		sbc r31,r25
 8447 3a08 CF01      		movw r24,r30
 8448 3a0a 9E87      		std Y+14,r25
 8449 3a0c 8D87      		std Y+13,r24
2441:lp_solve_5.5/colamd/colamd.c **** 		ASSERT (pivot_row_degree >= 0) ;
2442:lp_solve_5.5/colamd/colamd.c **** 		/* order it */
2443:lp_solve_5.5/colamd/colamd.c **** 		Col [col].shared2.order = k ;
 8450               		.loc 1 2443 0
 8451 3a0e 29A9      		ldd r18,Y+49
 8452 3a10 3AA9      		ldd r19,Y+50
 8453 3a12 C901      		movw r24,r18
 8454 3a14 880F      		lsl r24
 8455 3a16 991F      		rol r25
 8456 3a18 820F      		add r24,r18
 8457 3a1a 931F      		adc r25,r19
 8458 3a1c 880F      		lsl r24
 8459 3a1e 991F      		rol r25
 8460 3a20 880F      		lsl r24
 8461 3a22 991F      		rol r25
 8462 3a24 9C01      		movw r18,r24
 8463 3a26 CE01      		movw r24,r28
 8464 3a28 895B      		subi r24,-71
 8465 3a2a 9F4F      		sbci r25,-1
 8466 3a2c DC01      		movw r26,r24
 8467 3a2e 8D91      		ld r24,X+
 8468 3a30 9C91      		ld r25,X
 8469 3a32 820F      		add r24,r18
 8470 3a34 931F      		adc r25,r19
 8471 3a36 2981      		ldd r18,Y+1
 8472 3a38 3A81      		ldd r19,Y+2
 8473 3a3a FC01      		movw r30,r24
 8474 3a3c 3783      		std Z+7,r19
 8475 3a3e 2683      		std Z+6,r18
2444:lp_solve_5.5/colamd/colamd.c **** 		/* increment order count by column thickness */
2445:lp_solve_5.5/colamd/colamd.c **** 		k += Col [col].shared1.thickness ;
 8476               		.loc 1 2445 0
 8477 3a40 29A9      		ldd r18,Y+49
 8478 3a42 3AA9      		ldd r19,Y+50
 8479 3a44 C901      		movw r24,r18
 8480 3a46 880F      		lsl r24
 8481 3a48 991F      		rol r25
 8482 3a4a 820F      		add r24,r18
 8483 3a4c 931F      		adc r25,r19
 8484 3a4e 880F      		lsl r24
 8485 3a50 991F      		rol r25
 8486 3a52 880F      		lsl r24
 8487 3a54 991F      		rol r25
 8488 3a56 9C01      		movw r18,r24
 8489 3a58 CE01      		movw r24,r28
 8490 3a5a 895B      		subi r24,-71
 8491 3a5c 9F4F      		sbci r25,-1
 8492 3a5e DC01      		movw r26,r24
 8493 3a60 8D91      		ld r24,X+
 8494 3a62 9C91      		ld r25,X
 8495 3a64 820F      		add r24,r18
 8496 3a66 931F      		adc r25,r19
 8497 3a68 FC01      		movw r30,r24
 8498 3a6a 8481      		ldd r24,Z+4
 8499 3a6c 9581      		ldd r25,Z+5
 8500 3a6e 2981      		ldd r18,Y+1
 8501 3a70 3A81      		ldd r19,Y+2
 8502 3a72 820F      		add r24,r18
 8503 3a74 931F      		adc r25,r19
 8504 3a76 9A83      		std Y+2,r25
 8505 3a78 8983      		std Y+1,r24
 8506 3a7a 00C0      		rjmp .L208
 8507               	.L213:
2446:lp_solve_5.5/colamd/colamd.c **** 	    }
2447:lp_solve_5.5/colamd/colamd.c **** 	    else
2448:lp_solve_5.5/colamd/colamd.c **** 	    {
2449:lp_solve_5.5/colamd/colamd.c **** 		/* === Prepare for supercolumn detection ==================== */
2450:lp_solve_5.5/colamd/colamd.c **** 
2451:lp_solve_5.5/colamd/colamd.c **** 		DEBUG4 (("Preparing supercol detection for Col: %d.\n", col)) ;
2452:lp_solve_5.5/colamd/colamd.c **** 
2453:lp_solve_5.5/colamd/colamd.c **** 		/* save score so far */
2454:lp_solve_5.5/colamd/colamd.c **** 		Col [col].shared2.score = cur_score ;
 8508               		.loc 1 2454 0
 8509 3a7c 29A9      		ldd r18,Y+49
 8510 3a7e 3AA9      		ldd r19,Y+50
 8511 3a80 C901      		movw r24,r18
 8512 3a82 880F      		lsl r24
 8513 3a84 991F      		rol r25
 8514 3a86 820F      		add r24,r18
 8515 3a88 931F      		adc r25,r19
 8516 3a8a 880F      		lsl r24
 8517 3a8c 991F      		rol r25
 8518 3a8e 880F      		lsl r24
 8519 3a90 991F      		rol r25
 8520 3a92 9C01      		movw r18,r24
 8521 3a94 CE01      		movw r24,r28
 8522 3a96 895B      		subi r24,-71
 8523 3a98 9F4F      		sbci r25,-1
 8524 3a9a DC01      		movw r26,r24
 8525 3a9c 8D91      		ld r24,X+
 8526 3a9e 9C91      		ld r25,X
 8527 3aa0 820F      		add r24,r18
 8528 3aa2 931F      		adc r25,r19
 8529 3aa4 2F85      		ldd r18,Y+15
 8530 3aa6 3889      		ldd r19,Y+16
 8531 3aa8 FC01      		movw r30,r24
 8532 3aaa 3783      		std Z+7,r19
 8533 3aac 2683      		std Z+6,r18
2455:lp_solve_5.5/colamd/colamd.c **** 
2456:lp_solve_5.5/colamd/colamd.c **** 		/* add column to hash table, for supercolumn detection */
2457:lp_solve_5.5/colamd/colamd.c **** 		hash %= n_col + 1 ;
 8534               		.loc 1 2457 0
 8535 3aae CE01      		movw r24,r28
 8536 3ab0 8F5B      		subi r24,-65
 8537 3ab2 9F4F      		sbci r25,-1
 8538 3ab4 DC01      		movw r26,r24
 8539 3ab6 8D91      		ld r24,X+
 8540 3ab8 9C91      		ld r25,X
 8541 3aba 0196      		adiw r24,1
 8542 3abc 9C01      		movw r18,r24
 8543 3abe 8989      		ldd r24,Y+17
 8544 3ac0 9A89      		ldd r25,Y+18
 8545 3ac2 B901      		movw r22,r18
 8546 3ac4 0E94 0000 		call __udivmodhi4
 8547 3ac8 9A8B      		std Y+18,r25
 8548 3aca 898B      		std Y+17,r24
2458:lp_solve_5.5/colamd/colamd.c **** 
2459:lp_solve_5.5/colamd/colamd.c **** 		DEBUG4 ((" Hash = %d, n_col = %d.\n", hash, n_col)) ;
2460:lp_solve_5.5/colamd/colamd.c **** 		ASSERT (hash <= n_col) ;
2461:lp_solve_5.5/colamd/colamd.c **** 
2462:lp_solve_5.5/colamd/colamd.c **** 		head_column = head [hash] ;
 8549               		.loc 1 2462 0
 8550 3acc 8989      		ldd r24,Y+17
 8551 3ace 9A89      		ldd r25,Y+18
 8552 3ad0 880F      		lsl r24
 8553 3ad2 991F      		rol r25
 8554 3ad4 9E01      		movw r18,r28
 8555 3ad6 255B      		subi r18,-75
 8556 3ad8 3F4F      		sbci r19,-1
 8557 3ada F901      		movw r30,r18
 8558 3adc 2081      		ld r18,Z
 8559 3ade 3181      		ldd r19,Z+1
 8560 3ae0 820F      		add r24,r18
 8561 3ae2 931F      		adc r25,r19
 8562 3ae4 DC01      		movw r26,r24
 8563 3ae6 8D91      		ld r24,X+
 8564 3ae8 9C91      		ld r25,X
 8565 3aea 9CAF      		std Y+60,r25
 8566 3aec 8BAF      		std Y+59,r24
2463:lp_solve_5.5/colamd/colamd.c **** 		if (head_column > EMPTY)
 8567               		.loc 1 2463 0
 8568 3aee 8BAD      		ldd r24,Y+59
 8569 3af0 9CAD      		ldd r25,Y+60
 8570 3af2 9923      		tst r25
 8571 3af4 04F0      		brlt .L214
2464:lp_solve_5.5/colamd/colamd.c **** 		{
2465:lp_solve_5.5/colamd/colamd.c **** 		    /* degree list "hash" is non-empty, use prev (shared3) of */
2466:lp_solve_5.5/colamd/colamd.c **** 		    /* first column in degree list as head of hash bucket */
2467:lp_solve_5.5/colamd/colamd.c **** 		    first_col = Col [head_column].shared3.headhash ;
 8572               		.loc 1 2467 0
 8573 3af6 2BAD      		ldd r18,Y+59
 8574 3af8 3CAD      		ldd r19,Y+60
 8575 3afa C901      		movw r24,r18
 8576 3afc 880F      		lsl r24
 8577 3afe 991F      		rol r25
 8578 3b00 820F      		add r24,r18
 8579 3b02 931F      		adc r25,r19
 8580 3b04 880F      		lsl r24
 8581 3b06 991F      		rol r25
 8582 3b08 880F      		lsl r24
 8583 3b0a 991F      		rol r25
 8584 3b0c 9C01      		movw r18,r24
 8585 3b0e CE01      		movw r24,r28
 8586 3b10 895B      		subi r24,-71
 8587 3b12 9F4F      		sbci r25,-1
 8588 3b14 FC01      		movw r30,r24
 8589 3b16 8081      		ld r24,Z
 8590 3b18 9181      		ldd r25,Z+1
 8591 3b1a 820F      		add r24,r18
 8592 3b1c 931F      		adc r25,r19
 8593 3b1e DC01      		movw r26,r24
 8594 3b20 1896      		adiw r26,8
 8595 3b22 8D91      		ld r24,X+
 8596 3b24 9C91      		ld r25,X
 8597 3b26 1997      		sbiw r26,8+1
 8598 3b28 9C8B      		std Y+20,r25
 8599 3b2a 8B8B      		std Y+19,r24
2468:lp_solve_5.5/colamd/colamd.c **** 		    Col [head_column].shared3.headhash = col ;
 8600               		.loc 1 2468 0
 8601 3b2c 2BAD      		ldd r18,Y+59
 8602 3b2e 3CAD      		ldd r19,Y+60
 8603 3b30 C901      		movw r24,r18
 8604 3b32 880F      		lsl r24
 8605 3b34 991F      		rol r25
 8606 3b36 820F      		add r24,r18
 8607 3b38 931F      		adc r25,r19
 8608 3b3a 880F      		lsl r24
 8609 3b3c 991F      		rol r25
 8610 3b3e 880F      		lsl r24
 8611 3b40 991F      		rol r25
 8612 3b42 9C01      		movw r18,r24
 8613 3b44 CE01      		movw r24,r28
 8614 3b46 895B      		subi r24,-71
 8615 3b48 9F4F      		sbci r25,-1
 8616 3b4a FC01      		movw r30,r24
 8617 3b4c 8081      		ld r24,Z
 8618 3b4e 9181      		ldd r25,Z+1
 8619 3b50 820F      		add r24,r18
 8620 3b52 931F      		adc r25,r19
 8621 3b54 29A9      		ldd r18,Y+49
 8622 3b56 3AA9      		ldd r19,Y+50
 8623 3b58 DC01      		movw r26,r24
 8624 3b5a 1996      		adiw r26,8+1
 8625 3b5c 3C93      		st X,r19
 8626 3b5e 2E93      		st -X,r18
 8627 3b60 1897      		sbiw r26,8
 8628 3b62 00C0      		rjmp .L215
 8629               	.L214:
2469:lp_solve_5.5/colamd/colamd.c **** 		}
2470:lp_solve_5.5/colamd/colamd.c **** 		else
2471:lp_solve_5.5/colamd/colamd.c **** 		{
2472:lp_solve_5.5/colamd/colamd.c **** 		    /* degree list "hash" is empty, use head as hash bucket */
2473:lp_solve_5.5/colamd/colamd.c **** 		    first_col = - (head_column + 2) ;
 8630               		.loc 1 2473 0
 8631 3b64 2EEF      		ldi r18,lo8(-2)
 8632 3b66 3FEF      		ldi r19,lo8(-1)
 8633 3b68 8BAD      		ldd r24,Y+59
 8634 3b6a 9CAD      		ldd r25,Y+60
 8635 3b6c F901      		movw r30,r18
 8636 3b6e E81B      		sub r30,r24
 8637 3b70 F90B      		sbc r31,r25
 8638 3b72 CF01      		movw r24,r30
 8639 3b74 9C8B      		std Y+20,r25
 8640 3b76 8B8B      		std Y+19,r24
2474:lp_solve_5.5/colamd/colamd.c **** 		    head [hash] = - (col + 2) ;
 8641               		.loc 1 2474 0
 8642 3b78 8989      		ldd r24,Y+17
 8643 3b7a 9A89      		ldd r25,Y+18
 8644 3b7c 880F      		lsl r24
 8645 3b7e 991F      		rol r25
 8646 3b80 9E01      		movw r18,r28
 8647 3b82 255B      		subi r18,-75
 8648 3b84 3F4F      		sbci r19,-1
 8649 3b86 D901      		movw r26,r18
 8650 3b88 2D91      		ld r18,X+
 8651 3b8a 3C91      		ld r19,X
 8652 3b8c 820F      		add r24,r18
 8653 3b8e 931F      		adc r25,r19
 8654 3b90 4EEF      		ldi r20,lo8(-2)
 8655 3b92 5FEF      		ldi r21,lo8(-1)
 8656 3b94 29A9      		ldd r18,Y+49
 8657 3b96 3AA9      		ldd r19,Y+50
 8658 3b98 FA01      		movw r30,r20
 8659 3b9a E21B      		sub r30,r18
 8660 3b9c F30B      		sbc r31,r19
 8661 3b9e 9F01      		movw r18,r30
 8662 3ba0 DC01      		movw r26,r24
 8663 3ba2 2D93      		st X+,r18
 8664 3ba4 3C93      		st X,r19
 8665               	.L215:
2475:lp_solve_5.5/colamd/colamd.c **** 		}
2476:lp_solve_5.5/colamd/colamd.c **** 		Col [col].shared4.hash_next = first_col ;
 8666               		.loc 1 2476 0
 8667 3ba6 29A9      		ldd r18,Y+49
 8668 3ba8 3AA9      		ldd r19,Y+50
 8669 3baa C901      		movw r24,r18
 8670 3bac 880F      		lsl r24
 8671 3bae 991F      		rol r25
 8672 3bb0 820F      		add r24,r18
 8673 3bb2 931F      		adc r25,r19
 8674 3bb4 880F      		lsl r24
 8675 3bb6 991F      		rol r25
 8676 3bb8 880F      		lsl r24
 8677 3bba 991F      		rol r25
 8678 3bbc 9C01      		movw r18,r24
 8679 3bbe CE01      		movw r24,r28
 8680 3bc0 895B      		subi r24,-71
 8681 3bc2 9F4F      		sbci r25,-1
 8682 3bc4 FC01      		movw r30,r24
 8683 3bc6 8081      		ld r24,Z
 8684 3bc8 9181      		ldd r25,Z+1
 8685 3bca 820F      		add r24,r18
 8686 3bcc 931F      		adc r25,r19
 8687 3bce 2B89      		ldd r18,Y+19
 8688 3bd0 3C89      		ldd r19,Y+20
 8689 3bd2 DC01      		movw r26,r24
 8690 3bd4 1B96      		adiw r26,10+1
 8691 3bd6 3C93      		st X,r19
 8692 3bd8 2E93      		st -X,r18
 8693 3bda 1A97      		sbiw r26,10
2477:lp_solve_5.5/colamd/colamd.c **** 
2478:lp_solve_5.5/colamd/colamd.c **** 		/* save hash function in Col [col].shared3.hash */
2479:lp_solve_5.5/colamd/colamd.c **** 		Col [col].shared3.hash = (int) hash ;
 8694               		.loc 1 2479 0
 8695 3bdc 29A9      		ldd r18,Y+49
 8696 3bde 3AA9      		ldd r19,Y+50
 8697 3be0 C901      		movw r24,r18
 8698 3be2 880F      		lsl r24
 8699 3be4 991F      		rol r25
 8700 3be6 820F      		add r24,r18
 8701 3be8 931F      		adc r25,r19
 8702 3bea 880F      		lsl r24
 8703 3bec 991F      		rol r25
 8704 3bee 880F      		lsl r24
 8705 3bf0 991F      		rol r25
 8706 3bf2 9C01      		movw r18,r24
 8707 3bf4 CE01      		movw r24,r28
 8708 3bf6 895B      		subi r24,-71
 8709 3bf8 9F4F      		sbci r25,-1
 8710 3bfa FC01      		movw r30,r24
 8711 3bfc 8081      		ld r24,Z
 8712 3bfe 9181      		ldd r25,Z+1
 8713 3c00 820F      		add r24,r18
 8714 3c02 931F      		adc r25,r19
 8715 3c04 2989      		ldd r18,Y+17
 8716 3c06 3A89      		ldd r19,Y+18
 8717 3c08 DC01      		movw r26,r24
 8718 3c0a 1996      		adiw r26,8+1
 8719 3c0c 3C93      		st X,r19
 8720 3c0e 2E93      		st -X,r18
 8721 3c10 1897      		sbiw r26,8
 8722               	.L208:
2394:lp_solve_5.5/colamd/colamd.c **** 	{
 8723               		.loc 1 2394 0
 8724 3c12 2D81      		ldd r18,Y+5
 8725 3c14 3E81      		ldd r19,Y+6
 8726 3c16 8FA5      		ldd r24,Y+47
 8727 3c18 98A9      		ldd r25,Y+48
 8728 3c1a 2817      		cp r18,r24
 8729 3c1c 3907      		cpc r19,r25
 8730 3c1e 00F4      		brsh .+2
 8731 3c20 00C0      		rjmp .L216
2480:lp_solve_5.5/colamd/colamd.c **** 		ASSERT (COL_IS_ALIVE (col)) ;
2481:lp_solve_5.5/colamd/colamd.c **** 	    }
2482:lp_solve_5.5/colamd/colamd.c **** 	}
2483:lp_solve_5.5/colamd/colamd.c **** 
2484:lp_solve_5.5/colamd/colamd.c **** 	/* The approximate external column degree is now computed.  */
2485:lp_solve_5.5/colamd/colamd.c **** 
2486:lp_solve_5.5/colamd/colamd.c **** 	/* === Supercolumn detection ======================================== */
2487:lp_solve_5.5/colamd/colamd.c **** 
2488:lp_solve_5.5/colamd/colamd.c **** 	DEBUG3 (("** Supercolumn detection phase. **\n")) ;
2489:lp_solve_5.5/colamd/colamd.c **** 
2490:lp_solve_5.5/colamd/colamd.c **** 	detect_super_cols (
 8732               		.loc 1 2490 0
 8733 3c22 EDA9      		ldd r30,Y+53
 8734 3c24 FEA9      		ldd r31,Y+54
 8735 3c26 29A5      		ldd r18,Y+41
 8736 3c28 3AA5      		ldd r19,Y+42
 8737 3c2a CE01      		movw r24,r28
 8738 3c2c 855B      		subi r24,-75
 8739 3c2e 9F4F      		sbci r25,-1
 8740 3c30 DC01      		movw r26,r24
 8741 3c32 4D91      		ld r20,X+
 8742 3c34 5C91      		ld r21,X
 8743 3c36 CE01      		movw r24,r28
 8744 3c38 875B      		subi r24,-73
 8745 3c3a 9F4F      		sbci r25,-1
 8746 3c3c DC01      		movw r26,r24
 8747 3c3e 6D91      		ld r22,X+
 8748 3c40 7C91      		ld r23,X
 8749 3c42 CE01      		movw r24,r28
 8750 3c44 895B      		subi r24,-71
 8751 3c46 9F4F      		sbci r25,-1
 8752 3c48 DC01      		movw r26,r24
 8753 3c4a 8D91      		ld r24,X+
 8754 3c4c 9C91      		ld r25,X
 8755 3c4e 8F01      		movw r16,r30
 8756 3c50 0E94 0000 		call detect_super_cols
2491:lp_solve_5.5/colamd/colamd.c **** 
2492:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
2493:lp_solve_5.5/colamd/colamd.c **** 		n_col, Row,
2494:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
2495:lp_solve_5.5/colamd/colamd.c **** 
2496:lp_solve_5.5/colamd/colamd.c **** 		Col, A, head, pivot_row_start, pivot_row_length) ;
2497:lp_solve_5.5/colamd/colamd.c **** 
2498:lp_solve_5.5/colamd/colamd.c **** 	/* === Kill the pivotal column ====================================== */
2499:lp_solve_5.5/colamd/colamd.c **** 
2500:lp_solve_5.5/colamd/colamd.c **** 	KILL_PRINCIPAL_COL (pivot_col) ;
 8757               		.loc 1 2500 0
 8758 3c54 2F8D      		ldd r18,Y+31
 8759 3c56 38A1      		ldd r19,Y+32
 8760 3c58 C901      		movw r24,r18
 8761 3c5a 880F      		lsl r24
 8762 3c5c 991F      		rol r25
 8763 3c5e 820F      		add r24,r18
 8764 3c60 931F      		adc r25,r19
 8765 3c62 880F      		lsl r24
 8766 3c64 991F      		rol r25
 8767 3c66 880F      		lsl r24
 8768 3c68 991F      		rol r25
 8769 3c6a 9C01      		movw r18,r24
 8770 3c6c CE01      		movw r24,r28
 8771 3c6e 895B      		subi r24,-71
 8772 3c70 9F4F      		sbci r25,-1
 8773 3c72 FC01      		movw r30,r24
 8774 3c74 8081      		ld r24,Z
 8775 3c76 9181      		ldd r25,Z+1
 8776 3c78 820F      		add r24,r18
 8777 3c7a 931F      		adc r25,r19
 8778 3c7c 2FEF      		ldi r18,lo8(-1)
 8779 3c7e 3FEF      		ldi r19,lo8(-1)
 8780 3c80 DC01      		movw r26,r24
 8781 3c82 2D93      		st X+,r18
 8782 3c84 3C93      		st X,r19
2501:lp_solve_5.5/colamd/colamd.c **** 
2502:lp_solve_5.5/colamd/colamd.c **** 	/* === Clear mark =================================================== */
2503:lp_solve_5.5/colamd/colamd.c **** 
2504:lp_solve_5.5/colamd/colamd.c **** 	tag_mark += (max_deg + 1) ;
 8783               		.loc 1 2504 0
 8784 3c86 CE01      		movw r24,r28
 8785 3c88 815B      		subi r24,-79
 8786 3c8a 9F4F      		sbci r25,-1
 8787 3c8c FC01      		movw r30,r24
 8788 3c8e 8081      		ld r24,Z
 8789 3c90 9181      		ldd r25,Z+1
 8790 3c92 0196      		adiw r24,1
 8791 3c94 2D89      		ldd r18,Y+21
 8792 3c96 3E89      		ldd r19,Y+22
 8793 3c98 820F      		add r24,r18
 8794 3c9a 931F      		adc r25,r19
 8795 3c9c 9E8B      		std Y+22,r25
 8796 3c9e 8D8B      		std Y+21,r24
2505:lp_solve_5.5/colamd/colamd.c **** 	if (tag_mark >= max_mark)
 8797               		.loc 1 2505 0
 8798 3ca0 2D89      		ldd r18,Y+21
 8799 3ca2 3E89      		ldd r19,Y+22
 8800 3ca4 8D8D      		ldd r24,Y+29
 8801 3ca6 9E8D      		ldd r25,Y+30
 8802 3ca8 2817      		cp r18,r24
 8803 3caa 3907      		cpc r19,r25
 8804 3cac 04F0      		brlt .L217
2506:lp_solve_5.5/colamd/colamd.c **** 	{
2507:lp_solve_5.5/colamd/colamd.c **** 	    DEBUG2 (("clearing tag_mark\n")) ;
2508:lp_solve_5.5/colamd/colamd.c **** 	    tag_mark = clear_mark (n_row, Row) ;
 8805               		.loc 1 2508 0
 8806 3cae CE01      		movw r24,r28
 8807 3cb0 8B5B      		subi r24,-69
 8808 3cb2 9F4F      		sbci r25,-1
 8809 3cb4 DC01      		movw r26,r24
 8810 3cb6 2D91      		ld r18,X+
 8811 3cb8 3C91      		ld r19,X
 8812 3cba CE01      		movw r24,r28
 8813 3cbc CF96      		adiw r24,63
 8814 3cbe FC01      		movw r30,r24
 8815 3cc0 8081      		ld r24,Z
 8816 3cc2 9181      		ldd r25,Z+1
 8817 3cc4 B901      		movw r22,r18
 8818 3cc6 0E94 0000 		call clear_mark
 8819 3cca 9E8B      		std Y+22,r25
 8820 3ccc 8D8B      		std Y+21,r24
 8821               	.L217:
2509:lp_solve_5.5/colamd/colamd.c **** 	}
2510:lp_solve_5.5/colamd/colamd.c **** 
2511:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
2512:lp_solve_5.5/colamd/colamd.c **** 	DEBUG3 (("check3\n")) ;
2513:lp_solve_5.5/colamd/colamd.c **** 	debug_mark (n_row, Row, tag_mark, max_mark) ;
2514:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
2515:lp_solve_5.5/colamd/colamd.c **** 
2516:lp_solve_5.5/colamd/colamd.c **** 	/* === Finalize the new pivot row, and column scores ================ */
2517:lp_solve_5.5/colamd/colamd.c **** 
2518:lp_solve_5.5/colamd/colamd.c **** 	DEBUG3 (("** Finalize scores phase. **\n")) ;
2519:lp_solve_5.5/colamd/colamd.c **** 
2520:lp_solve_5.5/colamd/colamd.c **** 	/* for each column in pivot row */
2521:lp_solve_5.5/colamd/colamd.c **** 	rp = &A [pivot_row_start] ;
 8822               		.loc 1 2521 0
 8823 3cce 89A5      		ldd r24,Y+41
 8824 3cd0 9AA5      		ldd r25,Y+42
 8825 3cd2 880F      		lsl r24
 8826 3cd4 991F      		rol r25
 8827 3cd6 9E01      		movw r18,r28
 8828 3cd8 275B      		subi r18,-73
 8829 3cda 3F4F      		sbci r19,-1
 8830 3cdc D901      		movw r26,r18
 8831 3cde 2D91      		ld r18,X+
 8832 3ce0 3C91      		ld r19,X
 8833 3ce2 820F      		add r24,r18
 8834 3ce4 931F      		adc r25,r19
 8835 3ce6 9E83      		std Y+6,r25
 8836 3ce8 8D83      		std Y+5,r24
2522:lp_solve_5.5/colamd/colamd.c **** 	/* compact the pivot row */
2523:lp_solve_5.5/colamd/colamd.c **** 	new_rp = rp ;
 8837               		.loc 1 2523 0
 8838 3cea 8D81      		ldd r24,Y+5
 8839 3cec 9E81      		ldd r25,Y+6
 8840 3cee 9C87      		std Y+12,r25
 8841 3cf0 8B87      		std Y+11,r24
2524:lp_solve_5.5/colamd/colamd.c **** 	rp_end = rp + pivot_row_length ;
 8842               		.loc 1 2524 0
 8843 3cf2 8DA9      		ldd r24,Y+53
 8844 3cf4 9EA9      		ldd r25,Y+54
 8845 3cf6 880F      		lsl r24
 8846 3cf8 991F      		rol r25
 8847 3cfa 2D81      		ldd r18,Y+5
 8848 3cfc 3E81      		ldd r19,Y+6
 8849 3cfe 820F      		add r24,r18
 8850 3d00 931F      		adc r25,r19
 8851 3d02 98AB      		std Y+48,r25
 8852 3d04 8FA7      		std Y+47,r24
2525:lp_solve_5.5/colamd/colamd.c **** 	while (rp < rp_end)
 8853               		.loc 1 2525 0
 8854 3d06 00C0      		rjmp .L218
 8855               	.L223:
2526:lp_solve_5.5/colamd/colamd.c **** 	{
2527:lp_solve_5.5/colamd/colamd.c **** 	    col = *rp++ ;
 8856               		.loc 1 2527 0
 8857 3d08 8D81      		ldd r24,Y+5
 8858 3d0a 9E81      		ldd r25,Y+6
 8859 3d0c 9C01      		movw r18,r24
 8860 3d0e 2E5F      		subi r18,-2
 8861 3d10 3F4F      		sbci r19,-1
 8862 3d12 3E83      		std Y+6,r19
 8863 3d14 2D83      		std Y+5,r18
 8864 3d16 FC01      		movw r30,r24
 8865 3d18 8081      		ld r24,Z
 8866 3d1a 9181      		ldd r25,Z+1
 8867 3d1c 9AAB      		std Y+50,r25
 8868 3d1e 89AB      		std Y+49,r24
2528:lp_solve_5.5/colamd/colamd.c **** 	    /* skip dead columns */
2529:lp_solve_5.5/colamd/colamd.c **** 	    if (COL_IS_DEAD (col))
 8869               		.loc 1 2529 0
 8870 3d20 29A9      		ldd r18,Y+49
 8871 3d22 3AA9      		ldd r19,Y+50
 8872 3d24 C901      		movw r24,r18
 8873 3d26 880F      		lsl r24
 8874 3d28 991F      		rol r25
 8875 3d2a 820F      		add r24,r18
 8876 3d2c 931F      		adc r25,r19
 8877 3d2e 880F      		lsl r24
 8878 3d30 991F      		rol r25
 8879 3d32 880F      		lsl r24
 8880 3d34 991F      		rol r25
 8881 3d36 9C01      		movw r18,r24
 8882 3d38 CE01      		movw r24,r28
 8883 3d3a 895B      		subi r24,-71
 8884 3d3c 9F4F      		sbci r25,-1
 8885 3d3e DC01      		movw r26,r24
 8886 3d40 8D91      		ld r24,X+
 8887 3d42 9C91      		ld r25,X
 8888 3d44 820F      		add r24,r18
 8889 3d46 931F      		adc r25,r19
 8890 3d48 FC01      		movw r30,r24
 8891 3d4a 8081      		ld r24,Z
 8892 3d4c 9181      		ldd r25,Z+1
 8893 3d4e 9923      		tst r25
 8894 3d50 04F4      		brge .L219
2530:lp_solve_5.5/colamd/colamd.c **** 	    {
2531:lp_solve_5.5/colamd/colamd.c **** 		continue ;
 8895               		.loc 1 2531 0
 8896 3d52 00C0      		rjmp .L218
 8897               	.L219:
2532:lp_solve_5.5/colamd/colamd.c **** 	    }
2533:lp_solve_5.5/colamd/colamd.c **** 	    *new_rp++ = col ;
 8898               		.loc 1 2533 0
 8899 3d54 8B85      		ldd r24,Y+11
 8900 3d56 9C85      		ldd r25,Y+12
 8901 3d58 9C01      		movw r18,r24
 8902 3d5a 2E5F      		subi r18,-2
 8903 3d5c 3F4F      		sbci r19,-1
 8904 3d5e 3C87      		std Y+12,r19
 8905 3d60 2B87      		std Y+11,r18
 8906 3d62 29A9      		ldd r18,Y+49
 8907 3d64 3AA9      		ldd r19,Y+50
 8908 3d66 DC01      		movw r26,r24
 8909 3d68 2D93      		st X+,r18
 8910 3d6a 3C93      		st X,r19
2534:lp_solve_5.5/colamd/colamd.c **** 	    /* add new pivot row to column */
2535:lp_solve_5.5/colamd/colamd.c **** 	    A [Col [col].start + (Col [col].length++)] = pivot_row ;
 8911               		.loc 1 2535 0
 8912 3d6c 29A9      		ldd r18,Y+49
 8913 3d6e 3AA9      		ldd r19,Y+50
 8914 3d70 C901      		movw r24,r18
 8915 3d72 880F      		lsl r24
 8916 3d74 991F      		rol r25
 8917 3d76 820F      		add r24,r18
 8918 3d78 931F      		adc r25,r19
 8919 3d7a 880F      		lsl r24
 8920 3d7c 991F      		rol r25
 8921 3d7e 880F      		lsl r24
 8922 3d80 991F      		rol r25
 8923 3d82 9C01      		movw r18,r24
 8924 3d84 CE01      		movw r24,r28
 8925 3d86 895B      		subi r24,-71
 8926 3d88 9F4F      		sbci r25,-1
 8927 3d8a FC01      		movw r30,r24
 8928 3d8c 8081      		ld r24,Z
 8929 3d8e 9181      		ldd r25,Z+1
 8930 3d90 820F      		add r24,r18
 8931 3d92 931F      		adc r25,r19
 8932 3d94 DC01      		movw r26,r24
 8933 3d96 4D91      		ld r20,X+
 8934 3d98 5C91      		ld r21,X
 8935 3d9a 29A9      		ldd r18,Y+49
 8936 3d9c 3AA9      		ldd r19,Y+50
 8937 3d9e C901      		movw r24,r18
 8938 3da0 880F      		lsl r24
 8939 3da2 991F      		rol r25
 8940 3da4 820F      		add r24,r18
 8941 3da6 931F      		adc r25,r19
 8942 3da8 880F      		lsl r24
 8943 3daa 991F      		rol r25
 8944 3dac 880F      		lsl r24
 8945 3dae 991F      		rol r25
 8946 3db0 9C01      		movw r18,r24
 8947 3db2 CE01      		movw r24,r28
 8948 3db4 895B      		subi r24,-71
 8949 3db6 9F4F      		sbci r25,-1
 8950 3db8 FC01      		movw r30,r24
 8951 3dba 8081      		ld r24,Z
 8952 3dbc 9181      		ldd r25,Z+1
 8953 3dbe 280F      		add r18,r24
 8954 3dc0 391F      		adc r19,r25
 8955 3dc2 D901      		movw r26,r18
 8956 3dc4 1296      		adiw r26,2
 8957 3dc6 8D91      		ld r24,X+
 8958 3dc8 9C91      		ld r25,X
 8959 3dca 1397      		sbiw r26,2+1
 8960 3dcc BC01      		movw r22,r24
 8961 3dce 6F5F      		subi r22,-1
 8962 3dd0 7F4F      		sbci r23,-1
 8963 3dd2 F901      		movw r30,r18
 8964 3dd4 7383      		std Z+3,r23
 8965 3dd6 6283      		std Z+2,r22
 8966 3dd8 840F      		add r24,r20
 8967 3dda 951F      		adc r25,r21
 8968 3ddc 880F      		lsl r24
 8969 3dde 991F      		rol r25
 8970 3de0 9E01      		movw r18,r28
 8971 3de2 275B      		subi r18,-73
 8972 3de4 3F4F      		sbci r19,-1
 8973 3de6 D901      		movw r26,r18
 8974 3de8 2D91      		ld r18,X+
 8975 3dea 3C91      		ld r19,X
 8976 3dec 820F      		add r24,r18
 8977 3dee 931F      		adc r25,r19
 8978 3df0 2F81      		ldd r18,Y+7
 8979 3df2 3885      		ldd r19,Y+8
 8980 3df4 FC01      		movw r30,r24
 8981 3df6 3183      		std Z+1,r19
 8982 3df8 2083      		st Z,r18
2536:lp_solve_5.5/colamd/colamd.c **** 
2537:lp_solve_5.5/colamd/colamd.c **** 	    /* retrieve score so far and add on pivot row's degree. */
2538:lp_solve_5.5/colamd/colamd.c **** 	    /* (we wait until here for this in case the pivot */
2539:lp_solve_5.5/colamd/colamd.c **** 	    /* row's degree was reduced due to mass elimination). */
2540:lp_solve_5.5/colamd/colamd.c **** 	    cur_score = Col [col].shared2.score + pivot_row_degree ;
 8983               		.loc 1 2540 0
 8984 3dfa 29A9      		ldd r18,Y+49
 8985 3dfc 3AA9      		ldd r19,Y+50
 8986 3dfe C901      		movw r24,r18
 8987 3e00 880F      		lsl r24
 8988 3e02 991F      		rol r25
 8989 3e04 820F      		add r24,r18
 8990 3e06 931F      		adc r25,r19
 8991 3e08 880F      		lsl r24
 8992 3e0a 991F      		rol r25
 8993 3e0c 880F      		lsl r24
 8994 3e0e 991F      		rol r25
 8995 3e10 9C01      		movw r18,r24
 8996 3e12 CE01      		movw r24,r28
 8997 3e14 895B      		subi r24,-71
 8998 3e16 9F4F      		sbci r25,-1
 8999 3e18 DC01      		movw r26,r24
 9000 3e1a 8D91      		ld r24,X+
 9001 3e1c 9C91      		ld r25,X
 9002 3e1e 820F      		add r24,r18
 9003 3e20 931F      		adc r25,r19
 9004 3e22 FC01      		movw r30,r24
 9005 3e24 2681      		ldd r18,Z+6
 9006 3e26 3781      		ldd r19,Z+7
 9007 3e28 8D85      		ldd r24,Y+13
 9008 3e2a 9E85      		ldd r25,Y+14
 9009 3e2c 820F      		add r24,r18
 9010 3e2e 931F      		adc r25,r19
 9011 3e30 988B      		std Y+16,r25
 9012 3e32 8F87      		std Y+15,r24
2541:lp_solve_5.5/colamd/colamd.c **** 
2542:lp_solve_5.5/colamd/colamd.c **** 	    /* calculate the max possible score as the number of */
2543:lp_solve_5.5/colamd/colamd.c **** 	    /* external columns minus the 'k' value minus the */
2544:lp_solve_5.5/colamd/colamd.c **** 	    /* columns thickness */
2545:lp_solve_5.5/colamd/colamd.c **** 	    max_score = n_col - k - Col [col].shared1.thickness ;
 9013               		.loc 1 2545 0
 9014 3e34 CE01      		movw r24,r28
 9015 3e36 8F5B      		subi r24,-65
 9016 3e38 9F4F      		sbci r25,-1
 9017 3e3a DC01      		movw r26,r24
 9018 3e3c 2D91      		ld r18,X+
 9019 3e3e 3C91      		ld r19,X
 9020 3e40 8981      		ldd r24,Y+1
 9021 3e42 9A81      		ldd r25,Y+2
 9022 3e44 A901      		movw r20,r18
 9023 3e46 481B      		sub r20,r24
 9024 3e48 590B      		sbc r21,r25
 9025 3e4a 29A9      		ldd r18,Y+49
 9026 3e4c 3AA9      		ldd r19,Y+50
 9027 3e4e C901      		movw r24,r18
 9028 3e50 880F      		lsl r24
 9029 3e52 991F      		rol r25
 9030 3e54 820F      		add r24,r18
 9031 3e56 931F      		adc r25,r19
 9032 3e58 880F      		lsl r24
 9033 3e5a 991F      		rol r25
 9034 3e5c 880F      		lsl r24
 9035 3e5e 991F      		rol r25
 9036 3e60 9C01      		movw r18,r24
 9037 3e62 CE01      		movw r24,r28
 9038 3e64 895B      		subi r24,-71
 9039 3e66 9F4F      		sbci r25,-1
 9040 3e68 FC01      		movw r30,r24
 9041 3e6a 8081      		ld r24,Z
 9042 3e6c 9181      		ldd r25,Z+1
 9043 3e6e 820F      		add r24,r18
 9044 3e70 931F      		adc r25,r19
 9045 3e72 DC01      		movw r26,r24
 9046 3e74 1496      		adiw r26,4
 9047 3e76 8D91      		ld r24,X+
 9048 3e78 9C91      		ld r25,X
 9049 3e7a 1597      		sbiw r26,4+1
 9050 3e7c FA01      		movw r30,r20
 9051 3e7e E81B      		sub r30,r24
 9052 3e80 F90B      		sbc r31,r25
 9053 3e82 CF01      		movw r24,r30
 9054 3e84 9EAF      		std Y+62,r25
 9055 3e86 8DAF      		std Y+61,r24
2546:lp_solve_5.5/colamd/colamd.c **** 
2547:lp_solve_5.5/colamd/colamd.c **** 	    /* make the score the external degree of the union-of-rows */
2548:lp_solve_5.5/colamd/colamd.c **** 	    cur_score -= Col [col].shared1.thickness ;
 9056               		.loc 1 2548 0
 9057 3e88 29A9      		ldd r18,Y+49
 9058 3e8a 3AA9      		ldd r19,Y+50
 9059 3e8c C901      		movw r24,r18
 9060 3e8e 880F      		lsl r24
 9061 3e90 991F      		rol r25
 9062 3e92 820F      		add r24,r18
 9063 3e94 931F      		adc r25,r19
 9064 3e96 880F      		lsl r24
 9065 3e98 991F      		rol r25
 9066 3e9a 880F      		lsl r24
 9067 3e9c 991F      		rol r25
 9068 3e9e 9C01      		movw r18,r24
 9069 3ea0 CE01      		movw r24,r28
 9070 3ea2 895B      		subi r24,-71
 9071 3ea4 9F4F      		sbci r25,-1
 9072 3ea6 DC01      		movw r26,r24
 9073 3ea8 8D91      		ld r24,X+
 9074 3eaa 9C91      		ld r25,X
 9075 3eac 820F      		add r24,r18
 9076 3eae 931F      		adc r25,r19
 9077 3eb0 FC01      		movw r30,r24
 9078 3eb2 8481      		ldd r24,Z+4
 9079 3eb4 9581      		ldd r25,Z+5
 9080 3eb6 2F85      		ldd r18,Y+15
 9081 3eb8 3889      		ldd r19,Y+16
 9082 3eba A901      		movw r20,r18
 9083 3ebc 481B      		sub r20,r24
 9084 3ebe 590B      		sbc r21,r25
 9085 3ec0 CA01      		movw r24,r20
 9086 3ec2 988B      		std Y+16,r25
 9087 3ec4 8F87      		std Y+15,r24
2549:lp_solve_5.5/colamd/colamd.c **** 
2550:lp_solve_5.5/colamd/colamd.c **** 	    /* make sure score is less or equal than the max score */
2551:lp_solve_5.5/colamd/colamd.c **** 	    cur_score = MIN (cur_score, max_score) ;
 9088               		.loc 1 2551 0
 9089 3ec6 2F85      		ldd r18,Y+15
 9090 3ec8 3889      		ldd r19,Y+16
 9091 3eca 8DAD      		ldd r24,Y+61
 9092 3ecc 9EAD      		ldd r25,Y+62
 9093 3ece 2817      		cp r18,r24
 9094 3ed0 3907      		cpc r19,r25
 9095 3ed2 04F4      		brge .L220
 9096 3ed4 C901      		movw r24,r18
 9097               	.L220:
 9098 3ed6 988B      		std Y+16,r25
 9099 3ed8 8F87      		std Y+15,r24
2552:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (cur_score >= 0) ;
2553:lp_solve_5.5/colamd/colamd.c **** 
2554:lp_solve_5.5/colamd/colamd.c **** 	    /* store updated score */
2555:lp_solve_5.5/colamd/colamd.c **** 	    Col [col].shared2.score = cur_score ;
 9100               		.loc 1 2555 0
 9101 3eda 29A9      		ldd r18,Y+49
 9102 3edc 3AA9      		ldd r19,Y+50
 9103 3ede C901      		movw r24,r18
 9104 3ee0 880F      		lsl r24
 9105 3ee2 991F      		rol r25
 9106 3ee4 820F      		add r24,r18
 9107 3ee6 931F      		adc r25,r19
 9108 3ee8 880F      		lsl r24
 9109 3eea 991F      		rol r25
 9110 3eec 880F      		lsl r24
 9111 3eee 991F      		rol r25
 9112 3ef0 9C01      		movw r18,r24
 9113 3ef2 CE01      		movw r24,r28
 9114 3ef4 895B      		subi r24,-71
 9115 3ef6 9F4F      		sbci r25,-1
 9116 3ef8 DC01      		movw r26,r24
 9117 3efa 8D91      		ld r24,X+
 9118 3efc 9C91      		ld r25,X
 9119 3efe 820F      		add r24,r18
 9120 3f00 931F      		adc r25,r19
 9121 3f02 2F85      		ldd r18,Y+15
 9122 3f04 3889      		ldd r19,Y+16
 9123 3f06 FC01      		movw r30,r24
 9124 3f08 3783      		std Z+7,r19
 9125 3f0a 2683      		std Z+6,r18
2556:lp_solve_5.5/colamd/colamd.c **** 
2557:lp_solve_5.5/colamd/colamd.c **** 	    /* === Place column back in degree list ========================= */
2558:lp_solve_5.5/colamd/colamd.c **** 
2559:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (min_score >= 0) ;
2560:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (min_score <= n_col) ;
2561:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (cur_score >= 0) ;
2562:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (cur_score <= n_col) ;
2563:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (head [cur_score] >= EMPTY) ;
2564:lp_solve_5.5/colamd/colamd.c **** 	    next_col = head [cur_score] ;
 9126               		.loc 1 2564 0
 9127 3f0c 8F85      		ldd r24,Y+15
 9128 3f0e 9889      		ldd r25,Y+16
 9129 3f10 880F      		lsl r24
 9130 3f12 991F      		rol r25
 9131 3f14 9E01      		movw r18,r28
 9132 3f16 255B      		subi r18,-75
 9133 3f18 3F4F      		sbci r19,-1
 9134 3f1a D901      		movw r26,r18
 9135 3f1c 2D91      		ld r18,X+
 9136 3f1e 3C91      		ld r19,X
 9137 3f20 820F      		add r24,r18
 9138 3f22 931F      		adc r25,r19
 9139 3f24 FC01      		movw r30,r24
 9140 3f26 8081      		ld r24,Z
 9141 3f28 9181      		ldd r25,Z+1
 9142 3f2a 9AA3      		std Y+34,r25
 9143 3f2c 89A3      		std Y+33,r24
2565:lp_solve_5.5/colamd/colamd.c **** 	    Col [col].shared4.degree_next = next_col ;
 9144               		.loc 1 2565 0
 9145 3f2e 29A9      		ldd r18,Y+49
 9146 3f30 3AA9      		ldd r19,Y+50
 9147 3f32 C901      		movw r24,r18
 9148 3f34 880F      		lsl r24
 9149 3f36 991F      		rol r25
 9150 3f38 820F      		add r24,r18
 9151 3f3a 931F      		adc r25,r19
 9152 3f3c 880F      		lsl r24
 9153 3f3e 991F      		rol r25
 9154 3f40 880F      		lsl r24
 9155 3f42 991F      		rol r25
 9156 3f44 9C01      		movw r18,r24
 9157 3f46 CE01      		movw r24,r28
 9158 3f48 895B      		subi r24,-71
 9159 3f4a 9F4F      		sbci r25,-1
 9160 3f4c DC01      		movw r26,r24
 9161 3f4e 8D91      		ld r24,X+
 9162 3f50 9C91      		ld r25,X
 9163 3f52 820F      		add r24,r18
 9164 3f54 931F      		adc r25,r19
 9165 3f56 29A1      		ldd r18,Y+33
 9166 3f58 3AA1      		ldd r19,Y+34
 9167 3f5a FC01      		movw r30,r24
 9168 3f5c 3387      		std Z+11,r19
 9169 3f5e 2287      		std Z+10,r18
2566:lp_solve_5.5/colamd/colamd.c **** 	    Col [col].shared3.prev = EMPTY ;
 9170               		.loc 1 2566 0
 9171 3f60 29A9      		ldd r18,Y+49
 9172 3f62 3AA9      		ldd r19,Y+50
 9173 3f64 C901      		movw r24,r18
 9174 3f66 880F      		lsl r24
 9175 3f68 991F      		rol r25
 9176 3f6a 820F      		add r24,r18
 9177 3f6c 931F      		adc r25,r19
 9178 3f6e 880F      		lsl r24
 9179 3f70 991F      		rol r25
 9180 3f72 880F      		lsl r24
 9181 3f74 991F      		rol r25
 9182 3f76 9C01      		movw r18,r24
 9183 3f78 CE01      		movw r24,r28
 9184 3f7a 895B      		subi r24,-71
 9185 3f7c 9F4F      		sbci r25,-1
 9186 3f7e DC01      		movw r26,r24
 9187 3f80 8D91      		ld r24,X+
 9188 3f82 9C91      		ld r25,X
 9189 3f84 820F      		add r24,r18
 9190 3f86 931F      		adc r25,r19
 9191 3f88 2FEF      		ldi r18,lo8(-1)
 9192 3f8a 3FEF      		ldi r19,lo8(-1)
 9193 3f8c FC01      		movw r30,r24
 9194 3f8e 3187      		std Z+9,r19
 9195 3f90 2087      		std Z+8,r18
2567:lp_solve_5.5/colamd/colamd.c **** 	    if (next_col != EMPTY)
 9196               		.loc 1 2567 0
 9197 3f92 89A1      		ldd r24,Y+33
 9198 3f94 9AA1      		ldd r25,Y+34
 9199 3f96 0196      		adiw r24,1
 9200 3f98 01F0      		breq .L221
2568:lp_solve_5.5/colamd/colamd.c **** 	    {
2569:lp_solve_5.5/colamd/colamd.c **** 		Col [next_col].shared3.prev = col ;
 9201               		.loc 1 2569 0
 9202 3f9a 29A1      		ldd r18,Y+33
 9203 3f9c 3AA1      		ldd r19,Y+34
 9204 3f9e C901      		movw r24,r18
 9205 3fa0 880F      		lsl r24
 9206 3fa2 991F      		rol r25
 9207 3fa4 820F      		add r24,r18
 9208 3fa6 931F      		adc r25,r19
 9209 3fa8 880F      		lsl r24
 9210 3faa 991F      		rol r25
 9211 3fac 880F      		lsl r24
 9212 3fae 991F      		rol r25
 9213 3fb0 9C01      		movw r18,r24
 9214 3fb2 CE01      		movw r24,r28
 9215 3fb4 895B      		subi r24,-71
 9216 3fb6 9F4F      		sbci r25,-1
 9217 3fb8 DC01      		movw r26,r24
 9218 3fba 8D91      		ld r24,X+
 9219 3fbc 9C91      		ld r25,X
 9220 3fbe 820F      		add r24,r18
 9221 3fc0 931F      		adc r25,r19
 9222 3fc2 29A9      		ldd r18,Y+49
 9223 3fc4 3AA9      		ldd r19,Y+50
 9224 3fc6 FC01      		movw r30,r24
 9225 3fc8 3187      		std Z+9,r19
 9226 3fca 2087      		std Z+8,r18
 9227               	.L221:
2570:lp_solve_5.5/colamd/colamd.c **** 	    }
2571:lp_solve_5.5/colamd/colamd.c **** 	    head [cur_score] = col ;
 9228               		.loc 1 2571 0
 9229 3fcc 8F85      		ldd r24,Y+15
 9230 3fce 9889      		ldd r25,Y+16
 9231 3fd0 880F      		lsl r24
 9232 3fd2 991F      		rol r25
 9233 3fd4 9E01      		movw r18,r28
 9234 3fd6 255B      		subi r18,-75
 9235 3fd8 3F4F      		sbci r19,-1
 9236 3fda D901      		movw r26,r18
 9237 3fdc 2D91      		ld r18,X+
 9238 3fde 3C91      		ld r19,X
 9239 3fe0 820F      		add r24,r18
 9240 3fe2 931F      		adc r25,r19
 9241 3fe4 29A9      		ldd r18,Y+49
 9242 3fe6 3AA9      		ldd r19,Y+50
 9243 3fe8 FC01      		movw r30,r24
 9244 3fea 3183      		std Z+1,r19
 9245 3fec 2083      		st Z,r18
2572:lp_solve_5.5/colamd/colamd.c **** 
2573:lp_solve_5.5/colamd/colamd.c **** 	    /* see if this score is less than current min */
2574:lp_solve_5.5/colamd/colamd.c **** 	    min_score = MIN (min_score, cur_score) ;
 9246               		.loc 1 2574 0
 9247 3fee 298D      		ldd r18,Y+25
 9248 3ff0 3A8D      		ldd r19,Y+26
 9249 3ff2 8F85      		ldd r24,Y+15
 9250 3ff4 9889      		ldd r25,Y+16
 9251 3ff6 2817      		cp r18,r24
 9252 3ff8 3907      		cpc r19,r25
 9253 3ffa 04F4      		brge .L222
 9254 3ffc C901      		movw r24,r18
 9255               	.L222:
 9256 3ffe 9A8F      		std Y+26,r25
 9257 4000 898F      		std Y+25,r24
 9258               	.L218:
2525:lp_solve_5.5/colamd/colamd.c **** 	{
 9259               		.loc 1 2525 0
 9260 4002 2D81      		ldd r18,Y+5
 9261 4004 3E81      		ldd r19,Y+6
 9262 4006 8FA5      		ldd r24,Y+47
 9263 4008 98A9      		ldd r25,Y+48
 9264 400a 2817      		cp r18,r24
 9265 400c 3907      		cpc r19,r25
 9266 400e 00F4      		brsh .+2
 9267 4010 00C0      		rjmp .L223
2575:lp_solve_5.5/colamd/colamd.c **** 
2576:lp_solve_5.5/colamd/colamd.c **** 	}
2577:lp_solve_5.5/colamd/colamd.c **** 
2578:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
2579:lp_solve_5.5/colamd/colamd.c **** 	debug_deg_lists (n_row, n_col, Row, Col, head,
2580:lp_solve_5.5/colamd/colamd.c **** 		min_score, n_col2-k, max_deg) ;
2581:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
2582:lp_solve_5.5/colamd/colamd.c **** 
2583:lp_solve_5.5/colamd/colamd.c **** 	/* === Resurrect the new pivot row ================================== */
2584:lp_solve_5.5/colamd/colamd.c **** 
2585:lp_solve_5.5/colamd/colamd.c **** 	if (pivot_row_degree > 0)
 9268               		.loc 1 2585 0
 9269 4012 8D85      		ldd r24,Y+13
 9270 4014 9E85      		ldd r25,Y+14
 9271 4016 1816      		cp __zero_reg__,r24
 9272 4018 1906      		cpc __zero_reg__,r25
 9273 401a 04F0      		brlt .+2
 9274 401c 00C0      		rjmp .L181
2586:lp_solve_5.5/colamd/colamd.c **** 	{
2587:lp_solve_5.5/colamd/colamd.c **** 	    /* update pivot row length to reflect any cols that were killed */
2588:lp_solve_5.5/colamd/colamd.c **** 	    /* during super-col detection and mass elimination */
2589:lp_solve_5.5/colamd/colamd.c **** 	    Row [pivot_row].start  = pivot_row_start ;
 9275               		.loc 1 2589 0
 9276 401e 8F81      		ldd r24,Y+7
 9277 4020 9885      		ldd r25,Y+8
 9278 4022 880F      		lsl r24
 9279 4024 991F      		rol r25
 9280 4026 880F      		lsl r24
 9281 4028 991F      		rol r25
 9282 402a 880F      		lsl r24
 9283 402c 991F      		rol r25
 9284 402e 9E01      		movw r18,r28
 9285 4030 2B5B      		subi r18,-69
 9286 4032 3F4F      		sbci r19,-1
 9287 4034 D901      		movw r26,r18
 9288 4036 2D91      		ld r18,X+
 9289 4038 3C91      		ld r19,X
 9290 403a 820F      		add r24,r18
 9291 403c 931F      		adc r25,r19
 9292 403e 29A5      		ldd r18,Y+41
 9293 4040 3AA5      		ldd r19,Y+42
 9294 4042 FC01      		movw r30,r24
 9295 4044 3183      		std Z+1,r19
 9296 4046 2083      		st Z,r18
2590:lp_solve_5.5/colamd/colamd.c **** 	    Row [pivot_row].length = (int) (new_rp - &A[pivot_row_start]) ;
 9297               		.loc 1 2590 0
 9298 4048 8F81      		ldd r24,Y+7
 9299 404a 9885      		ldd r25,Y+8
 9300 404c 880F      		lsl r24
 9301 404e 991F      		rol r25
 9302 4050 880F      		lsl r24
 9303 4052 991F      		rol r25
 9304 4054 880F      		lsl r24
 9305 4056 991F      		rol r25
 9306 4058 9E01      		movw r18,r28
 9307 405a 2B5B      		subi r18,-69
 9308 405c 3F4F      		sbci r19,-1
 9309 405e D901      		movw r26,r18
 9310 4060 2D91      		ld r18,X+
 9311 4062 3C91      		ld r19,X
 9312 4064 820F      		add r24,r18
 9313 4066 931F      		adc r25,r19
 9314 4068 2B85      		ldd r18,Y+11
 9315 406a 3C85      		ldd r19,Y+12
 9316 406c 49A5      		ldd r20,Y+41
 9317 406e 5AA5      		ldd r21,Y+42
 9318 4070 440F      		lsl r20
 9319 4072 551F      		rol r21
 9320 4074 BE01      		movw r22,r28
 9321 4076 675B      		subi r22,-73
 9322 4078 7F4F      		sbci r23,-1
 9323 407a FB01      		movw r30,r22
 9324 407c 6081      		ld r22,Z
 9325 407e 7181      		ldd r23,Z+1
 9326 4080 460F      		add r20,r22
 9327 4082 571F      		adc r21,r23
 9328 4084 241B      		sub r18,r20
 9329 4086 350B      		sbc r19,r21
 9330 4088 3595      		asr r19
 9331 408a 2795      		ror r18
 9332 408c DC01      		movw r26,r24
 9333 408e 1396      		adiw r26,2+1
 9334 4090 3C93      		st X,r19
 9335 4092 2E93      		st -X,r18
 9336 4094 1297      		sbiw r26,2
2591:lp_solve_5.5/colamd/colamd.c **** 	    Row [pivot_row].shared1.degree = pivot_row_degree ;
 9337               		.loc 1 2591 0
 9338 4096 8F81      		ldd r24,Y+7
 9339 4098 9885      		ldd r25,Y+8
 9340 409a 880F      		lsl r24
 9341 409c 991F      		rol r25
 9342 409e 880F      		lsl r24
 9343 40a0 991F      		rol r25
 9344 40a2 880F      		lsl r24
 9345 40a4 991F      		rol r25
 9346 40a6 9E01      		movw r18,r28
 9347 40a8 2B5B      		subi r18,-69
 9348 40aa 3F4F      		sbci r19,-1
 9349 40ac F901      		movw r30,r18
 9350 40ae 2081      		ld r18,Z
 9351 40b0 3181      		ldd r19,Z+1
 9352 40b2 820F      		add r24,r18
 9353 40b4 931F      		adc r25,r19
 9354 40b6 2D85      		ldd r18,Y+13
 9355 40b8 3E85      		ldd r19,Y+14
 9356 40ba DC01      		movw r26,r24
 9357 40bc 1596      		adiw r26,4+1
 9358 40be 3C93      		st X,r19
 9359 40c0 2E93      		st -X,r18
 9360 40c2 1497      		sbiw r26,4
2592:lp_solve_5.5/colamd/colamd.c **** 	    Row [pivot_row].shared2.mark = 0 ;
 9361               		.loc 1 2592 0
 9362 40c4 8F81      		ldd r24,Y+7
 9363 40c6 9885      		ldd r25,Y+8
 9364 40c8 880F      		lsl r24
 9365 40ca 991F      		rol r25
 9366 40cc 880F      		lsl r24
 9367 40ce 991F      		rol r25
 9368 40d0 880F      		lsl r24
 9369 40d2 991F      		rol r25
 9370 40d4 9E01      		movw r18,r28
 9371 40d6 2B5B      		subi r18,-69
 9372 40d8 3F4F      		sbci r19,-1
 9373 40da F901      		movw r30,r18
 9374 40dc 2081      		ld r18,Z
 9375 40de 3181      		ldd r19,Z+1
 9376 40e0 820F      		add r24,r18
 9377 40e2 931F      		adc r25,r19
 9378 40e4 DC01      		movw r26,r24
 9379 40e6 1796      		adiw r26,6+1
 9380 40e8 1C92      		st X,__zero_reg__
 9381 40ea 1E92      		st -X,__zero_reg__
 9382 40ec 1697      		sbiw r26,6
 9383               	.L181:
2121:lp_solve_5.5/colamd/colamd.c ****     {
 9384               		.loc 1 2121 0 discriminator 1
 9385 40ee CE01      		movw r24,r28
 9386 40f0 835B      		subi r24,-77
 9387 40f2 9F4F      		sbci r25,-1
 9388 40f4 2981      		ldd r18,Y+1
 9389 40f6 3A81      		ldd r19,Y+2
 9390 40f8 FC01      		movw r30,r24
 9391 40fa 8081      		ld r24,Z
 9392 40fc 9181      		ldd r25,Z+1
 9393 40fe 2817      		cp r18,r24
 9394 4100 3907      		cpc r19,r25
 9395 4102 04F4      		brge .+4
 9396 4104 0C94 0000 		jmp .L182
2593:lp_solve_5.5/colamd/colamd.c **** 	    /* pivot row is no longer dead */
2594:lp_solve_5.5/colamd/colamd.c **** 	}
2595:lp_solve_5.5/colamd/colamd.c ****     }
2596:lp_solve_5.5/colamd/colamd.c **** 
2597:lp_solve_5.5/colamd/colamd.c ****     /* === All principal columns have now been ordered ====================== */
2598:lp_solve_5.5/colamd/colamd.c **** 
2599:lp_solve_5.5/colamd/colamd.c ****     return (ngarbage) ;
 9397               		.loc 1 2599 0
 9398 4108 8B8D      		ldd r24,Y+27
 9399 410a 9C8D      		ldd r25,Y+28
 9400               	/* epilogue start */
2600:lp_solve_5.5/colamd/colamd.c **** }
 9401               		.loc 1 2600 0
 9402 410c CE5A      		subi r28,-82
 9403 410e DF4F      		sbci r29,-1
 9404 4110 0FB6      		in __tmp_reg__,__SREG__
 9405 4112 F894      		cli
 9406 4114 DEBF      		out __SP_H__,r29
 9407 4116 0FBE      		out __SREG__,__tmp_reg__
 9408 4118 CDBF      		out __SP_L__,r28
 9409 411a DF91      		pop r29
 9410 411c CF91      		pop r28
 9411 411e 1F91      		pop r17
 9412 4120 0F91      		pop r16
 9413 4122 FF90      		pop r15
 9414 4124 EF90      		pop r14
 9415 4126 DF90      		pop r13
 9416 4128 CF90      		pop r12
 9417 412a BF90      		pop r11
 9418 412c AF90      		pop r10
 9419 412e 9F90      		pop r9
 9420 4130 8F90      		pop r8
 9421 4132 0895      		ret
 9422               		.cfi_endproc
 9423               	.LFE13:
 9426               	order_children:
 9427               	.LFB14:
2601:lp_solve_5.5/colamd/colamd.c **** 
2602:lp_solve_5.5/colamd/colamd.c **** 
2603:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
2604:lp_solve_5.5/colamd/colamd.c **** /* === order_children ======================================================= */
2605:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
2606:lp_solve_5.5/colamd/colamd.c **** 
2607:lp_solve_5.5/colamd/colamd.c **** /*
2608:lp_solve_5.5/colamd/colamd.c ****     The find_ordering routine has ordered all of the principal columns (the
2609:lp_solve_5.5/colamd/colamd.c ****     representatives of the supercolumns).  The non-principal columns have not
2610:lp_solve_5.5/colamd/colamd.c ****     yet been ordered.  This routine orders those columns by walking up the
2611:lp_solve_5.5/colamd/colamd.c ****     parent tree (a column is a child of the column which absorbed it).  The
2612:lp_solve_5.5/colamd/colamd.c ****     final permutation vector is then placed in p [0 ... n_col-1], with p [0]
2613:lp_solve_5.5/colamd/colamd.c ****     being the first column, and p [n_col-1] being the last.  It doesn't look
2614:lp_solve_5.5/colamd/colamd.c ****     like it at first glance, but be assured that this routine takes time linear
2615:lp_solve_5.5/colamd/colamd.c ****     in the number of columns.  Although not immediately obvious, the time
2616:lp_solve_5.5/colamd/colamd.c ****     taken by this routine is O (n_col), that is, linear in the number of
2617:lp_solve_5.5/colamd/colamd.c ****     columns.  Not user-callable.
2618:lp_solve_5.5/colamd/colamd.c **** */
2619:lp_solve_5.5/colamd/colamd.c **** 
2620:lp_solve_5.5/colamd/colamd.c **** PRIVATE void order_children
2621:lp_solve_5.5/colamd/colamd.c **** (
2622:lp_solve_5.5/colamd/colamd.c ****     /* === Parameters ======================================================= */
2623:lp_solve_5.5/colamd/colamd.c **** 
2624:lp_solve_5.5/colamd/colamd.c ****     int n_col,			/* number of columns of A */
2625:lp_solve_5.5/colamd/colamd.c ****     Colamd_Col Col [],		/* of size n_col+1 */
2626:lp_solve_5.5/colamd/colamd.c ****     int p []			/* p [0 ... n_col-1] is the column permutation*/
2627:lp_solve_5.5/colamd/colamd.c **** )
2628:lp_solve_5.5/colamd/colamd.c **** {
 9428               		.loc 1 2628 0
 9429               		.cfi_startproc
 9430 4134 CF93      		push r28
 9431               	.LCFI80:
 9432               		.cfi_def_cfa_offset 3
 9433               		.cfi_offset 28, -2
 9434 4136 DF93      		push r29
 9435               	.LCFI81:
 9436               		.cfi_def_cfa_offset 4
 9437               		.cfi_offset 29, -3
 9438 4138 CDB7      		in r28,__SP_L__
 9439 413a DEB7      		in r29,__SP_H__
 9440               	.LCFI82:
 9441               		.cfi_def_cfa_register 28
 9442 413c 2E97      		sbiw r28,14
 9443               	.LCFI83:
 9444               		.cfi_def_cfa_offset 18
 9445 413e 0FB6      		in __tmp_reg__,__SREG__
 9446 4140 F894      		cli
 9447 4142 DEBF      		out __SP_H__,r29
 9448 4144 0FBE      		out __SREG__,__tmp_reg__
 9449 4146 CDBF      		out __SP_L__,r28
 9450               	/* prologue: function */
 9451               	/* frame size = 14 */
 9452               	/* stack size = 16 */
 9453               	.L__stack_usage = 16
 9454 4148 9A87      		std Y+10,r25
 9455 414a 8987      		std Y+9,r24
 9456 414c 7C87      		std Y+12,r23
 9457 414e 6B87      		std Y+11,r22
 9458 4150 5E87      		std Y+14,r21
 9459 4152 4D87      		std Y+13,r20
2629:lp_solve_5.5/colamd/colamd.c ****     /* === Local variables ================================================== */
2630:lp_solve_5.5/colamd/colamd.c **** 
2631:lp_solve_5.5/colamd/colamd.c ****     int i ;			/* loop counter for all columns */
2632:lp_solve_5.5/colamd/colamd.c ****     int c ;			/* column index */
2633:lp_solve_5.5/colamd/colamd.c ****     int parent ;		/* index of column's parent */
2634:lp_solve_5.5/colamd/colamd.c ****     int order ;			/* column's order */
2635:lp_solve_5.5/colamd/colamd.c **** 
2636:lp_solve_5.5/colamd/colamd.c ****     /* === Order each non-principal column ================================== */
2637:lp_solve_5.5/colamd/colamd.c **** 
2638:lp_solve_5.5/colamd/colamd.c ****     for (i = 0 ; i < n_col ; i++)
 9460               		.loc 1 2638 0
 9461 4154 1A82      		std Y+2,__zero_reg__
 9462 4156 1982      		std Y+1,__zero_reg__
 9463 4158 00C0      		rjmp .L227
 9464               	.L231:
2639:lp_solve_5.5/colamd/colamd.c ****     {
2640:lp_solve_5.5/colamd/colamd.c **** 	/* find an un-ordered non-principal column */
2641:lp_solve_5.5/colamd/colamd.c **** 	ASSERT (COL_IS_DEAD (i)) ;
2642:lp_solve_5.5/colamd/colamd.c **** 	if (!COL_IS_DEAD_PRINCIPAL (i) && Col [i].shared2.order == EMPTY)
 9465               		.loc 1 2642 0
 9466 415a 2981      		ldd r18,Y+1
 9467 415c 3A81      		ldd r19,Y+2
 9468 415e C901      		movw r24,r18
 9469 4160 880F      		lsl r24
 9470 4162 991F      		rol r25
 9471 4164 820F      		add r24,r18
 9472 4166 931F      		adc r25,r19
 9473 4168 880F      		lsl r24
 9474 416a 991F      		rol r25
 9475 416c 880F      		lsl r24
 9476 416e 991F      		rol r25
 9477 4170 9C01      		movw r18,r24
 9478 4172 8B85      		ldd r24,Y+11
 9479 4174 9C85      		ldd r25,Y+12
 9480 4176 820F      		add r24,r18
 9481 4178 931F      		adc r25,r19
 9482 417a FC01      		movw r30,r24
 9483 417c 8081      		ld r24,Z
 9484 417e 9181      		ldd r25,Z+1
 9485 4180 0196      		adiw r24,1
 9486 4182 01F4      		brne .+2
 9487 4184 00C0      		rjmp .L228
 9488               		.loc 1 2642 0 is_stmt 0 discriminator 1
 9489 4186 2981      		ldd r18,Y+1
 9490 4188 3A81      		ldd r19,Y+2
 9491 418a C901      		movw r24,r18
 9492 418c 880F      		lsl r24
 9493 418e 991F      		rol r25
 9494 4190 820F      		add r24,r18
 9495 4192 931F      		adc r25,r19
 9496 4194 880F      		lsl r24
 9497 4196 991F      		rol r25
 9498 4198 880F      		lsl r24
 9499 419a 991F      		rol r25
 9500 419c 9C01      		movw r18,r24
 9501 419e 8B85      		ldd r24,Y+11
 9502 41a0 9C85      		ldd r25,Y+12
 9503 41a2 820F      		add r24,r18
 9504 41a4 931F      		adc r25,r19
 9505 41a6 FC01      		movw r30,r24
 9506 41a8 8681      		ldd r24,Z+6
 9507 41aa 9781      		ldd r25,Z+7
 9508 41ac 0196      		adiw r24,1
 9509 41ae 01F0      		breq .+2
 9510 41b0 00C0      		rjmp .L228
2643:lp_solve_5.5/colamd/colamd.c **** 	{
2644:lp_solve_5.5/colamd/colamd.c **** 	    parent = i ;
 9511               		.loc 1 2644 0 is_stmt 1
 9512 41b2 8981      		ldd r24,Y+1
 9513 41b4 9A81      		ldd r25,Y+2
 9514 41b6 9E83      		std Y+6,r25
 9515 41b8 8D83      		std Y+5,r24
 9516               	.L229:
2645:lp_solve_5.5/colamd/colamd.c **** 	    /* once found, find its principal parent */
2646:lp_solve_5.5/colamd/colamd.c **** 	    do
2647:lp_solve_5.5/colamd/colamd.c **** 	    {
2648:lp_solve_5.5/colamd/colamd.c **** 		parent = Col [parent].shared1.parent ;
 9517               		.loc 1 2648 0 discriminator 1
 9518 41ba 2D81      		ldd r18,Y+5
 9519 41bc 3E81      		ldd r19,Y+6
 9520 41be C901      		movw r24,r18
 9521 41c0 880F      		lsl r24
 9522 41c2 991F      		rol r25
 9523 41c4 820F      		add r24,r18
 9524 41c6 931F      		adc r25,r19
 9525 41c8 880F      		lsl r24
 9526 41ca 991F      		rol r25
 9527 41cc 880F      		lsl r24
 9528 41ce 991F      		rol r25
 9529 41d0 9C01      		movw r18,r24
 9530 41d2 8B85      		ldd r24,Y+11
 9531 41d4 9C85      		ldd r25,Y+12
 9532 41d6 820F      		add r24,r18
 9533 41d8 931F      		adc r25,r19
 9534 41da FC01      		movw r30,r24
 9535 41dc 8481      		ldd r24,Z+4
 9536 41de 9581      		ldd r25,Z+5
 9537 41e0 9E83      		std Y+6,r25
 9538 41e2 8D83      		std Y+5,r24
2649:lp_solve_5.5/colamd/colamd.c **** 	    } while (!COL_IS_DEAD_PRINCIPAL (parent)) ;
 9539               		.loc 1 2649 0 discriminator 1
 9540 41e4 2D81      		ldd r18,Y+5
 9541 41e6 3E81      		ldd r19,Y+6
 9542 41e8 C901      		movw r24,r18
 9543 41ea 880F      		lsl r24
 9544 41ec 991F      		rol r25
 9545 41ee 820F      		add r24,r18
 9546 41f0 931F      		adc r25,r19
 9547 41f2 880F      		lsl r24
 9548 41f4 991F      		rol r25
 9549 41f6 880F      		lsl r24
 9550 41f8 991F      		rol r25
 9551 41fa 9C01      		movw r18,r24
 9552 41fc 8B85      		ldd r24,Y+11
 9553 41fe 9C85      		ldd r25,Y+12
 9554 4200 820F      		add r24,r18
 9555 4202 931F      		adc r25,r19
 9556 4204 FC01      		movw r30,r24
 9557 4206 8081      		ld r24,Z
 9558 4208 9181      		ldd r25,Z+1
 9559 420a 0196      		adiw r24,1
 9560 420c 01F4      		brne .L229
2650:lp_solve_5.5/colamd/colamd.c **** 
2651:lp_solve_5.5/colamd/colamd.c **** 	    /* now, order all un-ordered non-principal columns along path */
2652:lp_solve_5.5/colamd/colamd.c **** 	    /* to this parent.  collapse tree at the same time */
2653:lp_solve_5.5/colamd/colamd.c **** 	    c = i ;
 9561               		.loc 1 2653 0
 9562 420e 8981      		ldd r24,Y+1
 9563 4210 9A81      		ldd r25,Y+2
 9564 4212 9C83      		std Y+4,r25
 9565 4214 8B83      		std Y+3,r24
2654:lp_solve_5.5/colamd/colamd.c **** 	    /* get order of parent */
2655:lp_solve_5.5/colamd/colamd.c **** 	    order = Col [parent].shared2.order ;
 9566               		.loc 1 2655 0
 9567 4216 2D81      		ldd r18,Y+5
 9568 4218 3E81      		ldd r19,Y+6
 9569 421a C901      		movw r24,r18
 9570 421c 880F      		lsl r24
 9571 421e 991F      		rol r25
 9572 4220 820F      		add r24,r18
 9573 4222 931F      		adc r25,r19
 9574 4224 880F      		lsl r24
 9575 4226 991F      		rol r25
 9576 4228 880F      		lsl r24
 9577 422a 991F      		rol r25
 9578 422c 9C01      		movw r18,r24
 9579 422e 8B85      		ldd r24,Y+11
 9580 4230 9C85      		ldd r25,Y+12
 9581 4232 820F      		add r24,r18
 9582 4234 931F      		adc r25,r19
 9583 4236 FC01      		movw r30,r24
 9584 4238 8681      		ldd r24,Z+6
 9585 423a 9781      		ldd r25,Z+7
 9586 423c 9887      		std Y+8,r25
 9587 423e 8F83      		std Y+7,r24
 9588               	.L230:
2656:lp_solve_5.5/colamd/colamd.c **** 
2657:lp_solve_5.5/colamd/colamd.c **** 	    do
2658:lp_solve_5.5/colamd/colamd.c **** 	    {
2659:lp_solve_5.5/colamd/colamd.c **** 		ASSERT (Col [c].shared2.order == EMPTY) ;
2660:lp_solve_5.5/colamd/colamd.c **** 
2661:lp_solve_5.5/colamd/colamd.c **** 		/* order this column */
2662:lp_solve_5.5/colamd/colamd.c **** 		Col [c].shared2.order = order++ ;
 9589               		.loc 1 2662 0 discriminator 1
 9590 4240 2B81      		ldd r18,Y+3
 9591 4242 3C81      		ldd r19,Y+4
 9592 4244 C901      		movw r24,r18
 9593 4246 880F      		lsl r24
 9594 4248 991F      		rol r25
 9595 424a 820F      		add r24,r18
 9596 424c 931F      		adc r25,r19
 9597 424e 880F      		lsl r24
 9598 4250 991F      		rol r25
 9599 4252 880F      		lsl r24
 9600 4254 991F      		rol r25
 9601 4256 9C01      		movw r18,r24
 9602 4258 8B85      		ldd r24,Y+11
 9603 425a 9C85      		ldd r25,Y+12
 9604 425c 280F      		add r18,r24
 9605 425e 391F      		adc r19,r25
 9606 4260 8F81      		ldd r24,Y+7
 9607 4262 9885      		ldd r25,Y+8
 9608 4264 AC01      		movw r20,r24
 9609 4266 4F5F      		subi r20,-1
 9610 4268 5F4F      		sbci r21,-1
 9611 426a 5887      		std Y+8,r21
 9612 426c 4F83      		std Y+7,r20
 9613 426e F901      		movw r30,r18
 9614 4270 9783      		std Z+7,r25
 9615 4272 8683      		std Z+6,r24
2663:lp_solve_5.5/colamd/colamd.c **** 		/* collaps tree */
2664:lp_solve_5.5/colamd/colamd.c **** 		Col [c].shared1.parent = parent ;
 9616               		.loc 1 2664 0 discriminator 1
 9617 4274 2B81      		ldd r18,Y+3
 9618 4276 3C81      		ldd r19,Y+4
 9619 4278 C901      		movw r24,r18
 9620 427a 880F      		lsl r24
 9621 427c 991F      		rol r25
 9622 427e 820F      		add r24,r18
 9623 4280 931F      		adc r25,r19
 9624 4282 880F      		lsl r24
 9625 4284 991F      		rol r25
 9626 4286 880F      		lsl r24
 9627 4288 991F      		rol r25
 9628 428a 9C01      		movw r18,r24
 9629 428c 8B85      		ldd r24,Y+11
 9630 428e 9C85      		ldd r25,Y+12
 9631 4290 820F      		add r24,r18
 9632 4292 931F      		adc r25,r19
 9633 4294 2D81      		ldd r18,Y+5
 9634 4296 3E81      		ldd r19,Y+6
 9635 4298 FC01      		movw r30,r24
 9636 429a 3583      		std Z+5,r19
 9637 429c 2483      		std Z+4,r18
2665:lp_solve_5.5/colamd/colamd.c **** 
2666:lp_solve_5.5/colamd/colamd.c **** 		/* get immediate parent of this column */
2667:lp_solve_5.5/colamd/colamd.c **** 		c = Col [c].shared1.parent ;
 9638               		.loc 1 2667 0 discriminator 1
 9639 429e 2B81      		ldd r18,Y+3
 9640 42a0 3C81      		ldd r19,Y+4
 9641 42a2 C901      		movw r24,r18
 9642 42a4 880F      		lsl r24
 9643 42a6 991F      		rol r25
 9644 42a8 820F      		add r24,r18
 9645 42aa 931F      		adc r25,r19
 9646 42ac 880F      		lsl r24
 9647 42ae 991F      		rol r25
 9648 42b0 880F      		lsl r24
 9649 42b2 991F      		rol r25
 9650 42b4 9C01      		movw r18,r24
 9651 42b6 8B85      		ldd r24,Y+11
 9652 42b8 9C85      		ldd r25,Y+12
 9653 42ba 820F      		add r24,r18
 9654 42bc 931F      		adc r25,r19
 9655 42be FC01      		movw r30,r24
 9656 42c0 8481      		ldd r24,Z+4
 9657 42c2 9581      		ldd r25,Z+5
 9658 42c4 9C83      		std Y+4,r25
 9659 42c6 8B83      		std Y+3,r24
2668:lp_solve_5.5/colamd/colamd.c **** 
2669:lp_solve_5.5/colamd/colamd.c **** 		/* continue until we hit an ordered column.  There are */
2670:lp_solve_5.5/colamd/colamd.c **** 		/* guarranteed not to be anymore unordered columns */
2671:lp_solve_5.5/colamd/colamd.c **** 		/* above an ordered column */
2672:lp_solve_5.5/colamd/colamd.c **** 	    } while (Col [c].shared2.order == EMPTY) ;
 9660               		.loc 1 2672 0 discriminator 1
 9661 42c8 2B81      		ldd r18,Y+3
 9662 42ca 3C81      		ldd r19,Y+4
 9663 42cc C901      		movw r24,r18
 9664 42ce 880F      		lsl r24
 9665 42d0 991F      		rol r25
 9666 42d2 820F      		add r24,r18
 9667 42d4 931F      		adc r25,r19
 9668 42d6 880F      		lsl r24
 9669 42d8 991F      		rol r25
 9670 42da 880F      		lsl r24
 9671 42dc 991F      		rol r25
 9672 42de 9C01      		movw r18,r24
 9673 42e0 8B85      		ldd r24,Y+11
 9674 42e2 9C85      		ldd r25,Y+12
 9675 42e4 820F      		add r24,r18
 9676 42e6 931F      		adc r25,r19
 9677 42e8 FC01      		movw r30,r24
 9678 42ea 8681      		ldd r24,Z+6
 9679 42ec 9781      		ldd r25,Z+7
 9680 42ee 0196      		adiw r24,1
 9681 42f0 01F4      		brne .+2
 9682 42f2 00C0      		rjmp .L230
2673:lp_solve_5.5/colamd/colamd.c **** 
2674:lp_solve_5.5/colamd/colamd.c **** 	    /* re-order the super_col parent to largest order for this group */
2675:lp_solve_5.5/colamd/colamd.c **** 	    Col [parent].shared2.order = order ;
 9683               		.loc 1 2675 0
 9684 42f4 2D81      		ldd r18,Y+5
 9685 42f6 3E81      		ldd r19,Y+6
 9686 42f8 C901      		movw r24,r18
 9687 42fa 880F      		lsl r24
 9688 42fc 991F      		rol r25
 9689 42fe 820F      		add r24,r18
 9690 4300 931F      		adc r25,r19
 9691 4302 880F      		lsl r24
 9692 4304 991F      		rol r25
 9693 4306 880F      		lsl r24
 9694 4308 991F      		rol r25
 9695 430a 9C01      		movw r18,r24
 9696 430c 8B85      		ldd r24,Y+11
 9697 430e 9C85      		ldd r25,Y+12
 9698 4310 820F      		add r24,r18
 9699 4312 931F      		adc r25,r19
 9700 4314 2F81      		ldd r18,Y+7
 9701 4316 3885      		ldd r19,Y+8
 9702 4318 FC01      		movw r30,r24
 9703 431a 3783      		std Z+7,r19
 9704 431c 2683      		std Z+6,r18
 9705               	.L228:
2638:lp_solve_5.5/colamd/colamd.c ****     {
 9706               		.loc 1 2638 0 discriminator 2
 9707 431e 8981      		ldd r24,Y+1
 9708 4320 9A81      		ldd r25,Y+2
 9709 4322 0196      		adiw r24,1
 9710 4324 9A83      		std Y+2,r25
 9711 4326 8983      		std Y+1,r24
 9712               	.L227:
2638:lp_solve_5.5/colamd/colamd.c ****     {
 9713               		.loc 1 2638 0 is_stmt 0 discriminator 1
 9714 4328 2981      		ldd r18,Y+1
 9715 432a 3A81      		ldd r19,Y+2
 9716 432c 8985      		ldd r24,Y+9
 9717 432e 9A85      		ldd r25,Y+10
 9718 4330 2817      		cp r18,r24
 9719 4332 3907      		cpc r19,r25
 9720 4334 04F4      		brge .+2
 9721 4336 00C0      		rjmp .L231
2676:lp_solve_5.5/colamd/colamd.c **** 	}
2677:lp_solve_5.5/colamd/colamd.c ****     }
2678:lp_solve_5.5/colamd/colamd.c **** 
2679:lp_solve_5.5/colamd/colamd.c ****     /* === Generate the permutation ========================================= */
2680:lp_solve_5.5/colamd/colamd.c **** 
2681:lp_solve_5.5/colamd/colamd.c ****     for (c = 0 ; c < n_col ; c++)
 9722               		.loc 1 2681 0 is_stmt 1
 9723 4338 1C82      		std Y+4,__zero_reg__
 9724 433a 1B82      		std Y+3,__zero_reg__
 9725 433c 00C0      		rjmp .L232
 9726               	.L233:
2682:lp_solve_5.5/colamd/colamd.c ****     {
2683:lp_solve_5.5/colamd/colamd.c **** 	p [Col [c].shared2.order] = c ;
 9727               		.loc 1 2683 0 discriminator 3
 9728 433e 2B81      		ldd r18,Y+3
 9729 4340 3C81      		ldd r19,Y+4
 9730 4342 C901      		movw r24,r18
 9731 4344 880F      		lsl r24
 9732 4346 991F      		rol r25
 9733 4348 820F      		add r24,r18
 9734 434a 931F      		adc r25,r19
 9735 434c 880F      		lsl r24
 9736 434e 991F      		rol r25
 9737 4350 880F      		lsl r24
 9738 4352 991F      		rol r25
 9739 4354 9C01      		movw r18,r24
 9740 4356 8B85      		ldd r24,Y+11
 9741 4358 9C85      		ldd r25,Y+12
 9742 435a 820F      		add r24,r18
 9743 435c 931F      		adc r25,r19
 9744 435e FC01      		movw r30,r24
 9745 4360 8681      		ldd r24,Z+6
 9746 4362 9781      		ldd r25,Z+7
 9747 4364 880F      		lsl r24
 9748 4366 991F      		rol r25
 9749 4368 2D85      		ldd r18,Y+13
 9750 436a 3E85      		ldd r19,Y+14
 9751 436c 820F      		add r24,r18
 9752 436e 931F      		adc r25,r19
 9753 4370 2B81      		ldd r18,Y+3
 9754 4372 3C81      		ldd r19,Y+4
 9755 4374 FC01      		movw r30,r24
 9756 4376 3183      		std Z+1,r19
 9757 4378 2083      		st Z,r18
2681:lp_solve_5.5/colamd/colamd.c ****     {
 9758               		.loc 1 2681 0 discriminator 3
 9759 437a 8B81      		ldd r24,Y+3
 9760 437c 9C81      		ldd r25,Y+4
 9761 437e 0196      		adiw r24,1
 9762 4380 9C83      		std Y+4,r25
 9763 4382 8B83      		std Y+3,r24
 9764               	.L232:
2681:lp_solve_5.5/colamd/colamd.c ****     {
 9765               		.loc 1 2681 0 is_stmt 0 discriminator 1
 9766 4384 2B81      		ldd r18,Y+3
 9767 4386 3C81      		ldd r19,Y+4
 9768 4388 8985      		ldd r24,Y+9
 9769 438a 9A85      		ldd r25,Y+10
 9770 438c 2817      		cp r18,r24
 9771 438e 3907      		cpc r19,r25
 9772 4390 04F0      		brlt .L233
2684:lp_solve_5.5/colamd/colamd.c ****     }
2685:lp_solve_5.5/colamd/colamd.c **** }
 9773               		.loc 1 2685 0 is_stmt 1
 9774 4392 0000      		nop
 9775               	/* epilogue start */
 9776 4394 2E96      		adiw r28,14
 9777 4396 0FB6      		in __tmp_reg__,__SREG__
 9778 4398 F894      		cli
 9779 439a DEBF      		out __SP_H__,r29
 9780 439c 0FBE      		out __SREG__,__tmp_reg__
 9781 439e CDBF      		out __SP_L__,r28
 9782 43a0 DF91      		pop r29
 9783 43a2 CF91      		pop r28
 9784 43a4 0895      		ret
 9785               		.cfi_endproc
 9786               	.LFE14:
 9789               	detect_super_cols:
 9790               	.LFB15:
2686:lp_solve_5.5/colamd/colamd.c **** 
2687:lp_solve_5.5/colamd/colamd.c **** 
2688:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
2689:lp_solve_5.5/colamd/colamd.c **** /* === detect_super_cols ==================================================== */
2690:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
2691:lp_solve_5.5/colamd/colamd.c **** 
2692:lp_solve_5.5/colamd/colamd.c **** /*
2693:lp_solve_5.5/colamd/colamd.c ****     Detects supercolumns by finding matches between columns in the hash buckets.
2694:lp_solve_5.5/colamd/colamd.c ****     Check amongst columns in the set A [row_start ... row_start + row_length-1].
2695:lp_solve_5.5/colamd/colamd.c ****     The columns under consideration are currently *not* in the degree lists,
2696:lp_solve_5.5/colamd/colamd.c ****     and have already been placed in the hash buckets.
2697:lp_solve_5.5/colamd/colamd.c **** 
2698:lp_solve_5.5/colamd/colamd.c ****     The hash bucket for columns whose hash function is equal to h is stored
2699:lp_solve_5.5/colamd/colamd.c ****     as follows:
2700:lp_solve_5.5/colamd/colamd.c **** 
2701:lp_solve_5.5/colamd/colamd.c **** 	if head [h] is >= 0, then head [h] contains a degree list, so:
2702:lp_solve_5.5/colamd/colamd.c **** 
2703:lp_solve_5.5/colamd/colamd.c **** 		head [h] is the first column in degree bucket h.
2704:lp_solve_5.5/colamd/colamd.c **** 		Col [head [h]].headhash gives the first column in hash bucket h.
2705:lp_solve_5.5/colamd/colamd.c **** 
2706:lp_solve_5.5/colamd/colamd.c **** 	otherwise, the degree list is empty, and:
2707:lp_solve_5.5/colamd/colamd.c **** 
2708:lp_solve_5.5/colamd/colamd.c **** 		-(head [h] + 2) is the first column in hash bucket h.
2709:lp_solve_5.5/colamd/colamd.c **** 
2710:lp_solve_5.5/colamd/colamd.c ****     For a column c in a hash bucket, Col [c].shared3.prev is NOT a "previous
2711:lp_solve_5.5/colamd/colamd.c ****     column" pointer.  Col [c].shared3.hash is used instead as the hash number
2712:lp_solve_5.5/colamd/colamd.c ****     for that column.  The value of Col [c].shared4.hash_next is the next column
2713:lp_solve_5.5/colamd/colamd.c ****     in the same hash bucket.
2714:lp_solve_5.5/colamd/colamd.c **** 
2715:lp_solve_5.5/colamd/colamd.c ****     Assuming no, or "few" hash collisions, the time taken by this routine is
2716:lp_solve_5.5/colamd/colamd.c ****     linear in the sum of the sizes (lengths) of each column whose score has
2717:lp_solve_5.5/colamd/colamd.c ****     just been computed in the approximate degree computation.
2718:lp_solve_5.5/colamd/colamd.c ****     Not user-callable.
2719:lp_solve_5.5/colamd/colamd.c **** */
2720:lp_solve_5.5/colamd/colamd.c **** 
2721:lp_solve_5.5/colamd/colamd.c **** PRIVATE void detect_super_cols
2722:lp_solve_5.5/colamd/colamd.c **** (
2723:lp_solve_5.5/colamd/colamd.c ****     /* === Parameters ======================================================= */
2724:lp_solve_5.5/colamd/colamd.c **** 
2725:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
2726:lp_solve_5.5/colamd/colamd.c ****     /* these two parameters are only needed when debugging is enabled: */
2727:lp_solve_5.5/colamd/colamd.c ****     int n_col,			/* number of columns of A */
2728:lp_solve_5.5/colamd/colamd.c ****     Colamd_Row Row [],		/* of size n_row+1 */
2729:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
2730:lp_solve_5.5/colamd/colamd.c **** 
2731:lp_solve_5.5/colamd/colamd.c ****     Colamd_Col Col [],		/* of size n_col+1 */
2732:lp_solve_5.5/colamd/colamd.c ****     int A [],			/* row indices of A */
2733:lp_solve_5.5/colamd/colamd.c ****     int head [],		/* head of degree lists and hash buckets */
2734:lp_solve_5.5/colamd/colamd.c ****     int row_start,		/* pointer to set of columns to check */
2735:lp_solve_5.5/colamd/colamd.c ****     int row_length		/* number of columns to check */
2736:lp_solve_5.5/colamd/colamd.c **** )
2737:lp_solve_5.5/colamd/colamd.c **** {
 9791               		.loc 1 2737 0
 9792               		.cfi_startproc
 9793 43a6 0F93      		push r16
 9794               	.LCFI84:
 9795               		.cfi_def_cfa_offset 3
 9796               		.cfi_offset 16, -2
 9797 43a8 1F93      		push r17
 9798               	.LCFI85:
 9799               		.cfi_def_cfa_offset 4
 9800               		.cfi_offset 17, -3
 9801 43aa CF93      		push r28
 9802               	.LCFI86:
 9803               		.cfi_def_cfa_offset 5
 9804               		.cfi_offset 28, -4
 9805 43ac DF93      		push r29
 9806               	.LCFI87:
 9807               		.cfi_def_cfa_offset 6
 9808               		.cfi_offset 29, -5
 9809 43ae CDB7      		in r28,__SP_L__
 9810 43b0 DEB7      		in r29,__SP_H__
 9811               	.LCFI88:
 9812               		.cfi_def_cfa_register 28
 9813 43b2 A497      		sbiw r28,36
 9814               	.LCFI89:
 9815               		.cfi_def_cfa_offset 42
 9816 43b4 0FB6      		in __tmp_reg__,__SREG__
 9817 43b6 F894      		cli
 9818 43b8 DEBF      		out __SP_H__,r29
 9819 43ba 0FBE      		out __SREG__,__tmp_reg__
 9820 43bc CDBF      		out __SP_L__,r28
 9821               	/* prologue: function */
 9822               	/* frame size = 36 */
 9823               	/* stack size = 40 */
 9824               	.L__stack_usage = 40
 9825 43be 9C8F      		std Y+28,r25
 9826 43c0 8B8F      		std Y+27,r24
 9827 43c2 7E8F      		std Y+30,r23
 9828 43c4 6D8F      		std Y+29,r22
 9829 43c6 58A3      		std Y+32,r21
 9830 43c8 4F8F      		std Y+31,r20
 9831 43ca 3AA3      		std Y+34,r19
 9832 43cc 29A3      		std Y+33,r18
 9833 43ce 1CA3      		std Y+36,r17
 9834 43d0 0BA3      		std Y+35,r16
2738:lp_solve_5.5/colamd/colamd.c ****     /* === Local variables ================================================== */
2739:lp_solve_5.5/colamd/colamd.c **** 
2740:lp_solve_5.5/colamd/colamd.c ****     int hash ;			/* hash value for a column */
2741:lp_solve_5.5/colamd/colamd.c ****     int *rp ;			/* pointer to a row */
2742:lp_solve_5.5/colamd/colamd.c ****     int c ;			/* a column index */
2743:lp_solve_5.5/colamd/colamd.c ****     int super_c ;		/* column index of the column to absorb into */
2744:lp_solve_5.5/colamd/colamd.c ****     int *cp1 ;			/* column pointer for column super_c */
2745:lp_solve_5.5/colamd/colamd.c ****     int *cp2 ;			/* column pointer for column c */
2746:lp_solve_5.5/colamd/colamd.c ****     int length ;		/* length of column super_c */
2747:lp_solve_5.5/colamd/colamd.c ****     int prev_c ;		/* column preceding c in hash bucket */
2748:lp_solve_5.5/colamd/colamd.c ****     int i ;			/* loop counter */
2749:lp_solve_5.5/colamd/colamd.c ****     int *rp_end ;		/* pointer to the end of the row */
2750:lp_solve_5.5/colamd/colamd.c ****     int col ;			/* a column index in the row to check */
2751:lp_solve_5.5/colamd/colamd.c ****     int head_column ;		/* first column in hash bucket or degree list */
2752:lp_solve_5.5/colamd/colamd.c ****     int first_col ;		/* first column in hash bucket */
2753:lp_solve_5.5/colamd/colamd.c **** 
2754:lp_solve_5.5/colamd/colamd.c ****     /* === Consider each column in the row ================================== */
2755:lp_solve_5.5/colamd/colamd.c **** 
2756:lp_solve_5.5/colamd/colamd.c ****     rp = &A [row_start] ;
 9835               		.loc 1 2756 0
 9836 43d2 89A1      		ldd r24,Y+33
 9837 43d4 9AA1      		ldd r25,Y+34
 9838 43d6 880F      		lsl r24
 9839 43d8 991F      		rol r25
 9840 43da 2D8D      		ldd r18,Y+29
 9841 43dc 3E8D      		ldd r19,Y+30
 9842 43de 820F      		add r24,r18
 9843 43e0 931F      		adc r25,r19
 9844 43e2 9A83      		std Y+2,r25
 9845 43e4 8983      		std Y+1,r24
2757:lp_solve_5.5/colamd/colamd.c ****     rp_end = rp + row_length ;
 9846               		.loc 1 2757 0
 9847 43e6 8BA1      		ldd r24,Y+35
 9848 43e8 9CA1      		ldd r25,Y+36
 9849 43ea 880F      		lsl r24
 9850 43ec 991F      		rol r25
 9851 43ee 2981      		ldd r18,Y+1
 9852 43f0 3A81      		ldd r19,Y+2
 9853 43f2 820F      		add r24,r18
 9854 43f4 931F      		adc r25,r19
 9855 43f6 9A8B      		std Y+18,r25
 9856 43f8 898B      		std Y+17,r24
2758:lp_solve_5.5/colamd/colamd.c ****     while (rp < rp_end)
 9857               		.loc 1 2758 0
 9858 43fa 00C0      		rjmp .L235
 9859               	.L252:
2759:lp_solve_5.5/colamd/colamd.c ****     {
2760:lp_solve_5.5/colamd/colamd.c **** 	col = *rp++ ;
 9860               		.loc 1 2760 0
 9861 43fc 8981      		ldd r24,Y+1
 9862 43fe 9A81      		ldd r25,Y+2
 9863 4400 9C01      		movw r18,r24
 9864 4402 2E5F      		subi r18,-2
 9865 4404 3F4F      		sbci r19,-1
 9866 4406 3A83      		std Y+2,r19
 9867 4408 2983      		std Y+1,r18
 9868 440a FC01      		movw r30,r24
 9869 440c 8081      		ld r24,Z
 9870 440e 9181      		ldd r25,Z+1
 9871 4410 9C8B      		std Y+20,r25
 9872 4412 8B8B      		std Y+19,r24
2761:lp_solve_5.5/colamd/colamd.c **** 	if (COL_IS_DEAD (col))
 9873               		.loc 1 2761 0
 9874 4414 2B89      		ldd r18,Y+19
 9875 4416 3C89      		ldd r19,Y+20
 9876 4418 C901      		movw r24,r18
 9877 441a 880F      		lsl r24
 9878 441c 991F      		rol r25
 9879 441e 820F      		add r24,r18
 9880 4420 931F      		adc r25,r19
 9881 4422 880F      		lsl r24
 9882 4424 991F      		rol r25
 9883 4426 880F      		lsl r24
 9884 4428 991F      		rol r25
 9885 442a 9C01      		movw r18,r24
 9886 442c 8B8D      		ldd r24,Y+27
 9887 442e 9C8D      		ldd r25,Y+28
 9888 4430 820F      		add r24,r18
 9889 4432 931F      		adc r25,r19
 9890 4434 FC01      		movw r30,r24
 9891 4436 8081      		ld r24,Z
 9892 4438 9181      		ldd r25,Z+1
 9893 443a 9923      		tst r25
 9894 443c 04F4      		brge .L236
2762:lp_solve_5.5/colamd/colamd.c **** 	{
2763:lp_solve_5.5/colamd/colamd.c **** 	    continue ;
 9895               		.loc 1 2763 0
 9896 443e 00C0      		rjmp .L235
 9897               	.L236:
2764:lp_solve_5.5/colamd/colamd.c **** 	}
2765:lp_solve_5.5/colamd/colamd.c **** 
2766:lp_solve_5.5/colamd/colamd.c **** 	/* get hash number for this column */
2767:lp_solve_5.5/colamd/colamd.c **** 	hash = Col [col].shared3.hash ;
 9898               		.loc 1 2767 0
 9899 4440 2B89      		ldd r18,Y+19
 9900 4442 3C89      		ldd r19,Y+20
 9901 4444 C901      		movw r24,r18
 9902 4446 880F      		lsl r24
 9903 4448 991F      		rol r25
 9904 444a 820F      		add r24,r18
 9905 444c 931F      		adc r25,r19
 9906 444e 880F      		lsl r24
 9907 4450 991F      		rol r25
 9908 4452 880F      		lsl r24
 9909 4454 991F      		rol r25
 9910 4456 9C01      		movw r18,r24
 9911 4458 8B8D      		ldd r24,Y+27
 9912 445a 9C8D      		ldd r25,Y+28
 9913 445c 820F      		add r24,r18
 9914 445e 931F      		adc r25,r19
 9915 4460 FC01      		movw r30,r24
 9916 4462 8085      		ldd r24,Z+8
 9917 4464 9185      		ldd r25,Z+9
 9918 4466 9E8B      		std Y+22,r25
 9919 4468 8D8B      		std Y+21,r24
2768:lp_solve_5.5/colamd/colamd.c **** 	ASSERT (hash <= n_col) ;
2769:lp_solve_5.5/colamd/colamd.c **** 
2770:lp_solve_5.5/colamd/colamd.c **** 	/* === Get the first column in this hash bucket ===================== */
2771:lp_solve_5.5/colamd/colamd.c **** 
2772:lp_solve_5.5/colamd/colamd.c **** 	head_column = head [hash] ;
 9920               		.loc 1 2772 0
 9921 446a 8D89      		ldd r24,Y+21
 9922 446c 9E89      		ldd r25,Y+22
 9923 446e 880F      		lsl r24
 9924 4470 991F      		rol r25
 9925 4472 2F8D      		ldd r18,Y+31
 9926 4474 38A1      		ldd r19,Y+32
 9927 4476 820F      		add r24,r18
 9928 4478 931F      		adc r25,r19
 9929 447a FC01      		movw r30,r24
 9930 447c 8081      		ld r24,Z
 9931 447e 9181      		ldd r25,Z+1
 9932 4480 988F      		std Y+24,r25
 9933 4482 8F8B      		std Y+23,r24
2773:lp_solve_5.5/colamd/colamd.c **** 	if (head_column > EMPTY)
 9934               		.loc 1 2773 0
 9935 4484 8F89      		ldd r24,Y+23
 9936 4486 988D      		ldd r25,Y+24
 9937 4488 9923      		tst r25
 9938 448a 04F0      		brlt .L237
2774:lp_solve_5.5/colamd/colamd.c **** 	{
2775:lp_solve_5.5/colamd/colamd.c **** 	    first_col = Col [head_column].shared3.headhash ;
 9939               		.loc 1 2775 0
 9940 448c 2F89      		ldd r18,Y+23
 9941 448e 388D      		ldd r19,Y+24
 9942 4490 C901      		movw r24,r18
 9943 4492 880F      		lsl r24
 9944 4494 991F      		rol r25
 9945 4496 820F      		add r24,r18
 9946 4498 931F      		adc r25,r19
 9947 449a 880F      		lsl r24
 9948 449c 991F      		rol r25
 9949 449e 880F      		lsl r24
 9950 44a0 991F      		rol r25
 9951 44a2 9C01      		movw r18,r24
 9952 44a4 8B8D      		ldd r24,Y+27
 9953 44a6 9C8D      		ldd r25,Y+28
 9954 44a8 820F      		add r24,r18
 9955 44aa 931F      		adc r25,r19
 9956 44ac FC01      		movw r30,r24
 9957 44ae 8085      		ldd r24,Z+8
 9958 44b0 9185      		ldd r25,Z+9
 9959 44b2 988B      		std Y+16,r25
 9960 44b4 8F87      		std Y+15,r24
 9961 44b6 00C0      		rjmp .L238
 9962               	.L237:
2776:lp_solve_5.5/colamd/colamd.c **** 	}
2777:lp_solve_5.5/colamd/colamd.c **** 	else
2778:lp_solve_5.5/colamd/colamd.c **** 	{
2779:lp_solve_5.5/colamd/colamd.c **** 	    first_col = - (head_column + 2) ;
 9963               		.loc 1 2779 0
 9964 44b8 2EEF      		ldi r18,lo8(-2)
 9965 44ba 3FEF      		ldi r19,lo8(-1)
 9966 44bc 8F89      		ldd r24,Y+23
 9967 44be 988D      		ldd r25,Y+24
 9968 44c0 A901      		movw r20,r18
 9969 44c2 481B      		sub r20,r24
 9970 44c4 590B      		sbc r21,r25
 9971 44c6 CA01      		movw r24,r20
 9972 44c8 988B      		std Y+16,r25
 9973 44ca 8F87      		std Y+15,r24
 9974               	.L238:
2780:lp_solve_5.5/colamd/colamd.c **** 	}
2781:lp_solve_5.5/colamd/colamd.c **** 
2782:lp_solve_5.5/colamd/colamd.c **** 	/* === Consider each column in the hash bucket ====================== */
2783:lp_solve_5.5/colamd/colamd.c **** 
2784:lp_solve_5.5/colamd/colamd.c **** 	for (super_c = first_col ; super_c != EMPTY ;
 9975               		.loc 1 2784 0
 9976 44cc 8F85      		ldd r24,Y+15
 9977 44ce 9889      		ldd r25,Y+16
 9978 44d0 9E83      		std Y+6,r25
 9979 44d2 8D83      		std Y+5,r24
 9980 44d4 00C0      		rjmp .L239
 9981               	.L250:
2785:lp_solve_5.5/colamd/colamd.c **** 	    super_c = Col [super_c].shared4.hash_next)
2786:lp_solve_5.5/colamd/colamd.c **** 	{
2787:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (COL_IS_ALIVE (super_c)) ;
2788:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (Col [super_c].shared3.hash == hash) ;
2789:lp_solve_5.5/colamd/colamd.c **** 	    length = Col [super_c].length ;
 9982               		.loc 1 2789 0
 9983 44d6 2D81      		ldd r18,Y+5
 9984 44d8 3E81      		ldd r19,Y+6
 9985 44da C901      		movw r24,r18
 9986 44dc 880F      		lsl r24
 9987 44de 991F      		rol r25
 9988 44e0 820F      		add r24,r18
 9989 44e2 931F      		adc r25,r19
 9990 44e4 880F      		lsl r24
 9991 44e6 991F      		rol r25
 9992 44e8 880F      		lsl r24
 9993 44ea 991F      		rol r25
 9994 44ec 9C01      		movw r18,r24
 9995 44ee 8B8D      		ldd r24,Y+27
 9996 44f0 9C8D      		ldd r25,Y+28
 9997 44f2 820F      		add r24,r18
 9998 44f4 931F      		adc r25,r19
 9999 44f6 FC01      		movw r30,r24
 10000 44f8 8281      		ldd r24,Z+2
 10001 44fa 9381      		ldd r25,Z+3
 10002 44fc 9A8F      		std Y+26,r25
 10003 44fe 898F      		std Y+25,r24
2790:lp_solve_5.5/colamd/colamd.c **** 
2791:lp_solve_5.5/colamd/colamd.c **** 	    /* prev_c is the column preceding column c in the hash bucket */
2792:lp_solve_5.5/colamd/colamd.c **** 	    prev_c = super_c ;
 10004               		.loc 1 2792 0
 10005 4500 8D81      		ldd r24,Y+5
 10006 4502 9E81      		ldd r25,Y+6
 10007 4504 9C87      		std Y+12,r25
 10008 4506 8B87      		std Y+11,r24
2793:lp_solve_5.5/colamd/colamd.c **** 
2794:lp_solve_5.5/colamd/colamd.c **** 	    /* === Compare super_c with all columns after it ================ */
2795:lp_solve_5.5/colamd/colamd.c **** 
2796:lp_solve_5.5/colamd/colamd.c **** 	    for (c = Col [super_c].shared4.hash_next ;
 10009               		.loc 1 2796 0
 10010 4508 2D81      		ldd r18,Y+5
 10011 450a 3E81      		ldd r19,Y+6
 10012 450c C901      		movw r24,r18
 10013 450e 880F      		lsl r24
 10014 4510 991F      		rol r25
 10015 4512 820F      		add r24,r18
 10016 4514 931F      		adc r25,r19
 10017 4516 880F      		lsl r24
 10018 4518 991F      		rol r25
 10019 451a 880F      		lsl r24
 10020 451c 991F      		rol r25
 10021 451e 9C01      		movw r18,r24
 10022 4520 8B8D      		ldd r24,Y+27
 10023 4522 9C8D      		ldd r25,Y+28
 10024 4524 820F      		add r24,r18
 10025 4526 931F      		adc r25,r19
 10026 4528 FC01      		movw r30,r24
 10027 452a 8285      		ldd r24,Z+10
 10028 452c 9385      		ldd r25,Z+11
 10029 452e 9C83      		std Y+4,r25
 10030 4530 8B83      		std Y+3,r24
 10031 4532 00C0      		rjmp .L240
 10032               	.L249:
2797:lp_solve_5.5/colamd/colamd.c **** 		 c != EMPTY ; c = Col [c].shared4.hash_next)
2798:lp_solve_5.5/colamd/colamd.c **** 	    {
2799:lp_solve_5.5/colamd/colamd.c **** 		ASSERT (c != super_c) ;
2800:lp_solve_5.5/colamd/colamd.c **** 		ASSERT (COL_IS_ALIVE (c)) ;
2801:lp_solve_5.5/colamd/colamd.c **** 		ASSERT (Col [c].shared3.hash == hash) ;
2802:lp_solve_5.5/colamd/colamd.c **** 
2803:lp_solve_5.5/colamd/colamd.c **** 		/* not identical if lengths or scores are different */
2804:lp_solve_5.5/colamd/colamd.c **** 		if (Col [c].length != length ||
 10033               		.loc 1 2804 0
 10034 4534 2B81      		ldd r18,Y+3
 10035 4536 3C81      		ldd r19,Y+4
 10036 4538 C901      		movw r24,r18
 10037 453a 880F      		lsl r24
 10038 453c 991F      		rol r25
 10039 453e 820F      		add r24,r18
 10040 4540 931F      		adc r25,r19
 10041 4542 880F      		lsl r24
 10042 4544 991F      		rol r25
 10043 4546 880F      		lsl r24
 10044 4548 991F      		rol r25
 10045 454a 9C01      		movw r18,r24
 10046 454c 8B8D      		ldd r24,Y+27
 10047 454e 9C8D      		ldd r25,Y+28
 10048 4550 820F      		add r24,r18
 10049 4552 931F      		adc r25,r19
 10050 4554 FC01      		movw r30,r24
 10051 4556 2281      		ldd r18,Z+2
 10052 4558 3381      		ldd r19,Z+3
 10053 455a 898D      		ldd r24,Y+25
 10054 455c 9A8D      		ldd r25,Y+26
 10055 455e 2817      		cp r18,r24
 10056 4560 3907      		cpc r19,r25
 10057 4562 01F4      		brne .L241
2805:lp_solve_5.5/colamd/colamd.c **** 		    Col [c].shared2.score != Col [super_c].shared2.score)
 10058               		.loc 1 2805 0 discriminator 1
 10059 4564 2B81      		ldd r18,Y+3
 10060 4566 3C81      		ldd r19,Y+4
 10061 4568 C901      		movw r24,r18
 10062 456a 880F      		lsl r24
 10063 456c 991F      		rol r25
 10064 456e 820F      		add r24,r18
 10065 4570 931F      		adc r25,r19
 10066 4572 880F      		lsl r24
 10067 4574 991F      		rol r25
 10068 4576 880F      		lsl r24
 10069 4578 991F      		rol r25
 10070 457a 9C01      		movw r18,r24
 10071 457c 8B8D      		ldd r24,Y+27
 10072 457e 9C8D      		ldd r25,Y+28
 10073 4580 820F      		add r24,r18
 10074 4582 931F      		adc r25,r19
 10075 4584 FC01      		movw r30,r24
 10076 4586 4681      		ldd r20,Z+6
 10077 4588 5781      		ldd r21,Z+7
 10078 458a 2D81      		ldd r18,Y+5
 10079 458c 3E81      		ldd r19,Y+6
 10080 458e C901      		movw r24,r18
 10081 4590 880F      		lsl r24
 10082 4592 991F      		rol r25
 10083 4594 820F      		add r24,r18
 10084 4596 931F      		adc r25,r19
 10085 4598 880F      		lsl r24
 10086 459a 991F      		rol r25
 10087 459c 880F      		lsl r24
 10088 459e 991F      		rol r25
 10089 45a0 9C01      		movw r18,r24
 10090 45a2 8B8D      		ldd r24,Y+27
 10091 45a4 9C8D      		ldd r25,Y+28
 10092 45a6 820F      		add r24,r18
 10093 45a8 931F      		adc r25,r19
 10094 45aa FC01      		movw r30,r24
 10095 45ac 8681      		ldd r24,Z+6
 10096 45ae 9781      		ldd r25,Z+7
2804:lp_solve_5.5/colamd/colamd.c **** 		    Col [c].shared2.score != Col [super_c].shared2.score)
 10097               		.loc 1 2804 0 discriminator 1
 10098 45b0 4817      		cp r20,r24
 10099 45b2 5907      		cpc r21,r25
 10100 45b4 01F0      		breq .L242
 10101               	.L241:
2806:lp_solve_5.5/colamd/colamd.c **** 		{
2807:lp_solve_5.5/colamd/colamd.c **** 		    prev_c = c ;
 10102               		.loc 1 2807 0
 10103 45b6 8B81      		ldd r24,Y+3
 10104 45b8 9C81      		ldd r25,Y+4
 10105 45ba 9C87      		std Y+12,r25
 10106 45bc 8B87      		std Y+11,r24
2808:lp_solve_5.5/colamd/colamd.c **** 		    continue ;
 10107               		.loc 1 2808 0
 10108 45be 00C0      		rjmp .L243
 10109               	.L242:
2809:lp_solve_5.5/colamd/colamd.c **** 		}
2810:lp_solve_5.5/colamd/colamd.c **** 
2811:lp_solve_5.5/colamd/colamd.c **** 		/* compare the two columns */
2812:lp_solve_5.5/colamd/colamd.c **** 		cp1 = &A [Col [super_c].start] ;
 10110               		.loc 1 2812 0
 10111 45c0 2D81      		ldd r18,Y+5
 10112 45c2 3E81      		ldd r19,Y+6
 10113 45c4 C901      		movw r24,r18
 10114 45c6 880F      		lsl r24
 10115 45c8 991F      		rol r25
 10116 45ca 820F      		add r24,r18
 10117 45cc 931F      		adc r25,r19
 10118 45ce 880F      		lsl r24
 10119 45d0 991F      		rol r25
 10120 45d2 880F      		lsl r24
 10121 45d4 991F      		rol r25
 10122 45d6 9C01      		movw r18,r24
 10123 45d8 8B8D      		ldd r24,Y+27
 10124 45da 9C8D      		ldd r25,Y+28
 10125 45dc 820F      		add r24,r18
 10126 45de 931F      		adc r25,r19
 10127 45e0 FC01      		movw r30,r24
 10128 45e2 8081      		ld r24,Z
 10129 45e4 9181      		ldd r25,Z+1
 10130 45e6 880F      		lsl r24
 10131 45e8 991F      		rol r25
 10132 45ea 2D8D      		ldd r18,Y+29
 10133 45ec 3E8D      		ldd r19,Y+30
 10134 45ee 820F      		add r24,r18
 10135 45f0 931F      		adc r25,r19
 10136 45f2 9887      		std Y+8,r25
 10137 45f4 8F83      		std Y+7,r24
2813:lp_solve_5.5/colamd/colamd.c **** 		cp2 = &A [Col [c].start] ;
 10138               		.loc 1 2813 0
 10139 45f6 2B81      		ldd r18,Y+3
 10140 45f8 3C81      		ldd r19,Y+4
 10141 45fa C901      		movw r24,r18
 10142 45fc 880F      		lsl r24
 10143 45fe 991F      		rol r25
 10144 4600 820F      		add r24,r18
 10145 4602 931F      		adc r25,r19
 10146 4604 880F      		lsl r24
 10147 4606 991F      		rol r25
 10148 4608 880F      		lsl r24
 10149 460a 991F      		rol r25
 10150 460c 9C01      		movw r18,r24
 10151 460e 8B8D      		ldd r24,Y+27
 10152 4610 9C8D      		ldd r25,Y+28
 10153 4612 820F      		add r24,r18
 10154 4614 931F      		adc r25,r19
 10155 4616 FC01      		movw r30,r24
 10156 4618 8081      		ld r24,Z
 10157 461a 9181      		ldd r25,Z+1
 10158 461c 880F      		lsl r24
 10159 461e 991F      		rol r25
 10160 4620 2D8D      		ldd r18,Y+29
 10161 4622 3E8D      		ldd r19,Y+30
 10162 4624 820F      		add r24,r18
 10163 4626 931F      		adc r25,r19
 10164 4628 9A87      		std Y+10,r25
 10165 462a 8987      		std Y+9,r24
2814:lp_solve_5.5/colamd/colamd.c **** 
2815:lp_solve_5.5/colamd/colamd.c **** 		for (i = 0 ; i < length ; i++)
 10166               		.loc 1 2815 0
 10167 462c 1E86      		std Y+14,__zero_reg__
 10168 462e 1D86      		std Y+13,__zero_reg__
 10169 4630 00C0      		rjmp .L244
 10170               	.L247:
2816:lp_solve_5.5/colamd/colamd.c **** 		{
2817:lp_solve_5.5/colamd/colamd.c **** 		    /* the columns are "clean" (no dead rows) */
2818:lp_solve_5.5/colamd/colamd.c **** 		    ASSERT (ROW_IS_ALIVE (*cp1))  ;
2819:lp_solve_5.5/colamd/colamd.c **** 		    ASSERT (ROW_IS_ALIVE (*cp2))  ;
2820:lp_solve_5.5/colamd/colamd.c **** 		    /* row indices will same order for both supercols, */
2821:lp_solve_5.5/colamd/colamd.c **** 		    /* no gather scatter nessasary */
2822:lp_solve_5.5/colamd/colamd.c **** 		    if (*cp1++ != *cp2++)
 10171               		.loc 1 2822 0
 10172 4632 8F81      		ldd r24,Y+7
 10173 4634 9885      		ldd r25,Y+8
 10174 4636 9C01      		movw r18,r24
 10175 4638 2E5F      		subi r18,-2
 10176 463a 3F4F      		sbci r19,-1
 10177 463c 3887      		std Y+8,r19
 10178 463e 2F83      		std Y+7,r18
 10179 4640 FC01      		movw r30,r24
 10180 4642 2081      		ld r18,Z
 10181 4644 3181      		ldd r19,Z+1
 10182 4646 8985      		ldd r24,Y+9
 10183 4648 9A85      		ldd r25,Y+10
 10184 464a AC01      		movw r20,r24
 10185 464c 4E5F      		subi r20,-2
 10186 464e 5F4F      		sbci r21,-1
 10187 4650 5A87      		std Y+10,r21
 10188 4652 4987      		std Y+9,r20
 10189 4654 FC01      		movw r30,r24
 10190 4656 8081      		ld r24,Z
 10191 4658 9181      		ldd r25,Z+1
 10192 465a 2817      		cp r18,r24
 10193 465c 3907      		cpc r19,r25
 10194 465e 01F4      		brne .L253
2815:lp_solve_5.5/colamd/colamd.c **** 		{
 10195               		.loc 1 2815 0 discriminator 2
 10196 4660 8D85      		ldd r24,Y+13
 10197 4662 9E85      		ldd r25,Y+14
 10198 4664 0196      		adiw r24,1
 10199 4666 9E87      		std Y+14,r25
 10200 4668 8D87      		std Y+13,r24
 10201               	.L244:
2815:lp_solve_5.5/colamd/colamd.c **** 		{
 10202               		.loc 1 2815 0 is_stmt 0 discriminator 1
 10203 466a 2D85      		ldd r18,Y+13
 10204 466c 3E85      		ldd r19,Y+14
 10205 466e 898D      		ldd r24,Y+25
 10206 4670 9A8D      		ldd r25,Y+26
 10207 4672 2817      		cp r18,r24
 10208 4674 3907      		cpc r19,r25
 10209 4676 04F0      		brlt .L247
 10210 4678 00C0      		rjmp .L246
 10211               	.L253:
2823:lp_solve_5.5/colamd/colamd.c **** 		    {
2824:lp_solve_5.5/colamd/colamd.c **** 			break ;
 10212               		.loc 1 2824 0 is_stmt 1
 10213 467a 0000      		nop
 10214               	.L246:
2825:lp_solve_5.5/colamd/colamd.c **** 		    }
2826:lp_solve_5.5/colamd/colamd.c **** 		}
2827:lp_solve_5.5/colamd/colamd.c **** 
2828:lp_solve_5.5/colamd/colamd.c **** 		/* the two columns are different if the for-loop "broke" */
2829:lp_solve_5.5/colamd/colamd.c **** 		if (i != length)
 10215               		.loc 1 2829 0
 10216 467c 2D85      		ldd r18,Y+13
 10217 467e 3E85      		ldd r19,Y+14
 10218 4680 898D      		ldd r24,Y+25
 10219 4682 9A8D      		ldd r25,Y+26
 10220 4684 2817      		cp r18,r24
 10221 4686 3907      		cpc r19,r25
 10222 4688 01F0      		breq .L248
2830:lp_solve_5.5/colamd/colamd.c **** 		{
2831:lp_solve_5.5/colamd/colamd.c **** 		    prev_c = c ;
 10223               		.loc 1 2831 0
 10224 468a 8B81      		ldd r24,Y+3
 10225 468c 9C81      		ldd r25,Y+4
 10226 468e 9C87      		std Y+12,r25
 10227 4690 8B87      		std Y+11,r24
2832:lp_solve_5.5/colamd/colamd.c **** 		    continue ;
 10228               		.loc 1 2832 0
 10229 4692 00C0      		rjmp .L243
 10230               	.L248:
2833:lp_solve_5.5/colamd/colamd.c **** 		}
2834:lp_solve_5.5/colamd/colamd.c **** 
2835:lp_solve_5.5/colamd/colamd.c **** 		/* === Got it!  two columns are identical =================== */
2836:lp_solve_5.5/colamd/colamd.c **** 
2837:lp_solve_5.5/colamd/colamd.c **** 		ASSERT (Col [c].shared2.score == Col [super_c].shared2.score) ;
2838:lp_solve_5.5/colamd/colamd.c **** 
2839:lp_solve_5.5/colamd/colamd.c **** 		Col [super_c].shared1.thickness += Col [c].shared1.thickness ;
 10231               		.loc 1 2839 0
 10232 4694 2D81      		ldd r18,Y+5
 10233 4696 3E81      		ldd r19,Y+6
 10234 4698 C901      		movw r24,r18
 10235 469a 880F      		lsl r24
 10236 469c 991F      		rol r25
 10237 469e 820F      		add r24,r18
 10238 46a0 931F      		adc r25,r19
 10239 46a2 880F      		lsl r24
 10240 46a4 991F      		rol r25
 10241 46a6 880F      		lsl r24
 10242 46a8 991F      		rol r25
 10243 46aa 9C01      		movw r18,r24
 10244 46ac 8B8D      		ldd r24,Y+27
 10245 46ae 9C8D      		ldd r25,Y+28
 10246 46b0 AC01      		movw r20,r24
 10247 46b2 420F      		add r20,r18
 10248 46b4 531F      		adc r21,r19
 10249 46b6 2D81      		ldd r18,Y+5
 10250 46b8 3E81      		ldd r19,Y+6
 10251 46ba C901      		movw r24,r18
 10252 46bc 880F      		lsl r24
 10253 46be 991F      		rol r25
 10254 46c0 820F      		add r24,r18
 10255 46c2 931F      		adc r25,r19
 10256 46c4 880F      		lsl r24
 10257 46c6 991F      		rol r25
 10258 46c8 880F      		lsl r24
 10259 46ca 991F      		rol r25
 10260 46cc 9C01      		movw r18,r24
 10261 46ce 8B8D      		ldd r24,Y+27
 10262 46d0 9C8D      		ldd r25,Y+28
 10263 46d2 820F      		add r24,r18
 10264 46d4 931F      		adc r25,r19
 10265 46d6 FC01      		movw r30,r24
 10266 46d8 6481      		ldd r22,Z+4
 10267 46da 7581      		ldd r23,Z+5
 10268 46dc 2B81      		ldd r18,Y+3
 10269 46de 3C81      		ldd r19,Y+4
 10270 46e0 C901      		movw r24,r18
 10271 46e2 880F      		lsl r24
 10272 46e4 991F      		rol r25
 10273 46e6 820F      		add r24,r18
 10274 46e8 931F      		adc r25,r19
 10275 46ea 880F      		lsl r24
 10276 46ec 991F      		rol r25
 10277 46ee 880F      		lsl r24
 10278 46f0 991F      		rol r25
 10279 46f2 9C01      		movw r18,r24
 10280 46f4 8B8D      		ldd r24,Y+27
 10281 46f6 9C8D      		ldd r25,Y+28
 10282 46f8 820F      		add r24,r18
 10283 46fa 931F      		adc r25,r19
 10284 46fc FC01      		movw r30,r24
 10285 46fe 8481      		ldd r24,Z+4
 10286 4700 9581      		ldd r25,Z+5
 10287 4702 860F      		add r24,r22
 10288 4704 971F      		adc r25,r23
 10289 4706 FA01      		movw r30,r20
 10290 4708 9583      		std Z+5,r25
 10291 470a 8483      		std Z+4,r24
2840:lp_solve_5.5/colamd/colamd.c **** 		Col [c].shared1.parent = super_c ;
 10292               		.loc 1 2840 0
 10293 470c 2B81      		ldd r18,Y+3
 10294 470e 3C81      		ldd r19,Y+4
 10295 4710 C901      		movw r24,r18
 10296 4712 880F      		lsl r24
 10297 4714 991F      		rol r25
 10298 4716 820F      		add r24,r18
 10299 4718 931F      		adc r25,r19
 10300 471a 880F      		lsl r24
 10301 471c 991F      		rol r25
 10302 471e 880F      		lsl r24
 10303 4720 991F      		rol r25
 10304 4722 9C01      		movw r18,r24
 10305 4724 8B8D      		ldd r24,Y+27
 10306 4726 9C8D      		ldd r25,Y+28
 10307 4728 820F      		add r24,r18
 10308 472a 931F      		adc r25,r19
 10309 472c 2D81      		ldd r18,Y+5
 10310 472e 3E81      		ldd r19,Y+6
 10311 4730 FC01      		movw r30,r24
 10312 4732 3583      		std Z+5,r19
 10313 4734 2483      		std Z+4,r18
2841:lp_solve_5.5/colamd/colamd.c **** 		KILL_NON_PRINCIPAL_COL (c) ;
 10314               		.loc 1 2841 0
 10315 4736 2B81      		ldd r18,Y+3
 10316 4738 3C81      		ldd r19,Y+4
 10317 473a C901      		movw r24,r18
 10318 473c 880F      		lsl r24
 10319 473e 991F      		rol r25
 10320 4740 820F      		add r24,r18
 10321 4742 931F      		adc r25,r19
 10322 4744 880F      		lsl r24
 10323 4746 991F      		rol r25
 10324 4748 880F      		lsl r24
 10325 474a 991F      		rol r25
 10326 474c 9C01      		movw r18,r24
 10327 474e 8B8D      		ldd r24,Y+27
 10328 4750 9C8D      		ldd r25,Y+28
 10329 4752 820F      		add r24,r18
 10330 4754 931F      		adc r25,r19
 10331 4756 2EEF      		ldi r18,lo8(-2)
 10332 4758 3FEF      		ldi r19,lo8(-1)
 10333 475a FC01      		movw r30,r24
 10334 475c 3183      		std Z+1,r19
 10335 475e 2083      		st Z,r18
2842:lp_solve_5.5/colamd/colamd.c **** 		/* order c later, in order_children() */
2843:lp_solve_5.5/colamd/colamd.c **** 		Col [c].shared2.order = EMPTY ;
 10336               		.loc 1 2843 0
 10337 4760 2B81      		ldd r18,Y+3
 10338 4762 3C81      		ldd r19,Y+4
 10339 4764 C901      		movw r24,r18
 10340 4766 880F      		lsl r24
 10341 4768 991F      		rol r25
 10342 476a 820F      		add r24,r18
 10343 476c 931F      		adc r25,r19
 10344 476e 880F      		lsl r24
 10345 4770 991F      		rol r25
 10346 4772 880F      		lsl r24
 10347 4774 991F      		rol r25
 10348 4776 9C01      		movw r18,r24
 10349 4778 8B8D      		ldd r24,Y+27
 10350 477a 9C8D      		ldd r25,Y+28
 10351 477c 820F      		add r24,r18
 10352 477e 931F      		adc r25,r19
 10353 4780 2FEF      		ldi r18,lo8(-1)
 10354 4782 3FEF      		ldi r19,lo8(-1)
 10355 4784 FC01      		movw r30,r24
 10356 4786 3783      		std Z+7,r19
 10357 4788 2683      		std Z+6,r18
2844:lp_solve_5.5/colamd/colamd.c **** 		/* remove c from hash bucket */
2845:lp_solve_5.5/colamd/colamd.c **** 		Col [prev_c].shared4.hash_next = Col [c].shared4.hash_next ;
 10358               		.loc 1 2845 0
 10359 478a 2B85      		ldd r18,Y+11
 10360 478c 3C85      		ldd r19,Y+12
 10361 478e C901      		movw r24,r18
 10362 4790 880F      		lsl r24
 10363 4792 991F      		rol r25
 10364 4794 820F      		add r24,r18
 10365 4796 931F      		adc r25,r19
 10366 4798 880F      		lsl r24
 10367 479a 991F      		rol r25
 10368 479c 880F      		lsl r24
 10369 479e 991F      		rol r25
 10370 47a0 9C01      		movw r18,r24
 10371 47a2 8B8D      		ldd r24,Y+27
 10372 47a4 9C8D      		ldd r25,Y+28
 10373 47a6 AC01      		movw r20,r24
 10374 47a8 420F      		add r20,r18
 10375 47aa 531F      		adc r21,r19
 10376 47ac 2B81      		ldd r18,Y+3
 10377 47ae 3C81      		ldd r19,Y+4
 10378 47b0 C901      		movw r24,r18
 10379 47b2 880F      		lsl r24
 10380 47b4 991F      		rol r25
 10381 47b6 820F      		add r24,r18
 10382 47b8 931F      		adc r25,r19
 10383 47ba 880F      		lsl r24
 10384 47bc 991F      		rol r25
 10385 47be 880F      		lsl r24
 10386 47c0 991F      		rol r25
 10387 47c2 9C01      		movw r18,r24
 10388 47c4 8B8D      		ldd r24,Y+27
 10389 47c6 9C8D      		ldd r25,Y+28
 10390 47c8 820F      		add r24,r18
 10391 47ca 931F      		adc r25,r19
 10392 47cc FC01      		movw r30,r24
 10393 47ce 8285      		ldd r24,Z+10
 10394 47d0 9385      		ldd r25,Z+11
 10395 47d2 FA01      		movw r30,r20
 10396 47d4 9387      		std Z+11,r25
 10397 47d6 8287      		std Z+10,r24
 10398               	.L243:
2797:lp_solve_5.5/colamd/colamd.c **** 	    {
 10399               		.loc 1 2797 0
 10400 47d8 2B81      		ldd r18,Y+3
 10401 47da 3C81      		ldd r19,Y+4
 10402 47dc C901      		movw r24,r18
 10403 47de 880F      		lsl r24
 10404 47e0 991F      		rol r25
 10405 47e2 820F      		add r24,r18
 10406 47e4 931F      		adc r25,r19
 10407 47e6 880F      		lsl r24
 10408 47e8 991F      		rol r25
 10409 47ea 880F      		lsl r24
 10410 47ec 991F      		rol r25
 10411 47ee 9C01      		movw r18,r24
 10412 47f0 8B8D      		ldd r24,Y+27
 10413 47f2 9C8D      		ldd r25,Y+28
 10414 47f4 820F      		add r24,r18
 10415 47f6 931F      		adc r25,r19
 10416 47f8 FC01      		movw r30,r24
 10417 47fa 8285      		ldd r24,Z+10
 10418 47fc 9385      		ldd r25,Z+11
 10419 47fe 9C83      		std Y+4,r25
 10420 4800 8B83      		std Y+3,r24
 10421               	.L240:
2796:lp_solve_5.5/colamd/colamd.c **** 		 c != EMPTY ; c = Col [c].shared4.hash_next)
 10422               		.loc 1 2796 0 discriminator 1
 10423 4802 8B81      		ldd r24,Y+3
 10424 4804 9C81      		ldd r25,Y+4
 10425 4806 0196      		adiw r24,1
 10426 4808 01F0      		breq .+2
 10427 480a 00C0      		rjmp .L249
2785:lp_solve_5.5/colamd/colamd.c **** 	{
 10428               		.loc 1 2785 0
 10429 480c 2D81      		ldd r18,Y+5
 10430 480e 3E81      		ldd r19,Y+6
 10431 4810 C901      		movw r24,r18
 10432 4812 880F      		lsl r24
 10433 4814 991F      		rol r25
 10434 4816 820F      		add r24,r18
 10435 4818 931F      		adc r25,r19
 10436 481a 880F      		lsl r24
 10437 481c 991F      		rol r25
 10438 481e 880F      		lsl r24
 10439 4820 991F      		rol r25
 10440 4822 9C01      		movw r18,r24
 10441 4824 8B8D      		ldd r24,Y+27
 10442 4826 9C8D      		ldd r25,Y+28
 10443 4828 820F      		add r24,r18
 10444 482a 931F      		adc r25,r19
 10445 482c FC01      		movw r30,r24
 10446 482e 8285      		ldd r24,Z+10
 10447 4830 9385      		ldd r25,Z+11
 10448 4832 9E83      		std Y+6,r25
 10449 4834 8D83      		std Y+5,r24
 10450               	.L239:
2784:lp_solve_5.5/colamd/colamd.c **** 	    super_c = Col [super_c].shared4.hash_next)
 10451               		.loc 1 2784 0 discriminator 1
 10452 4836 8D81      		ldd r24,Y+5
 10453 4838 9E81      		ldd r25,Y+6
 10454 483a 0196      		adiw r24,1
 10455 483c 01F0      		breq .+2
 10456 483e 00C0      		rjmp .L250
2846:lp_solve_5.5/colamd/colamd.c **** 	    }
2847:lp_solve_5.5/colamd/colamd.c **** 	}
2848:lp_solve_5.5/colamd/colamd.c **** 
2849:lp_solve_5.5/colamd/colamd.c **** 	/* === Empty this hash bucket ======================================= */
2850:lp_solve_5.5/colamd/colamd.c **** 
2851:lp_solve_5.5/colamd/colamd.c **** 	if (head_column > EMPTY)
 10457               		.loc 1 2851 0
 10458 4840 8F89      		ldd r24,Y+23
 10459 4842 988D      		ldd r25,Y+24
 10460 4844 9923      		tst r25
 10461 4846 04F0      		brlt .L251
2852:lp_solve_5.5/colamd/colamd.c **** 	{
2853:lp_solve_5.5/colamd/colamd.c **** 	    /* corresponding degree list "hash" is not empty */
2854:lp_solve_5.5/colamd/colamd.c **** 	    Col [head_column].shared3.headhash = EMPTY ;
 10462               		.loc 1 2854 0
 10463 4848 2F89      		ldd r18,Y+23
 10464 484a 388D      		ldd r19,Y+24
 10465 484c C901      		movw r24,r18
 10466 484e 880F      		lsl r24
 10467 4850 991F      		rol r25
 10468 4852 820F      		add r24,r18
 10469 4854 931F      		adc r25,r19
 10470 4856 880F      		lsl r24
 10471 4858 991F      		rol r25
 10472 485a 880F      		lsl r24
 10473 485c 991F      		rol r25
 10474 485e 9C01      		movw r18,r24
 10475 4860 8B8D      		ldd r24,Y+27
 10476 4862 9C8D      		ldd r25,Y+28
 10477 4864 820F      		add r24,r18
 10478 4866 931F      		adc r25,r19
 10479 4868 2FEF      		ldi r18,lo8(-1)
 10480 486a 3FEF      		ldi r19,lo8(-1)
 10481 486c FC01      		movw r30,r24
 10482 486e 3187      		std Z+9,r19
 10483 4870 2087      		std Z+8,r18
 10484 4872 00C0      		rjmp .L235
 10485               	.L251:
2855:lp_solve_5.5/colamd/colamd.c **** 	}
2856:lp_solve_5.5/colamd/colamd.c **** 	else
2857:lp_solve_5.5/colamd/colamd.c **** 	{
2858:lp_solve_5.5/colamd/colamd.c **** 	    /* corresponding degree list "hash" is empty */
2859:lp_solve_5.5/colamd/colamd.c **** 	    head [hash] = EMPTY ;
 10486               		.loc 1 2859 0
 10487 4874 8D89      		ldd r24,Y+21
 10488 4876 9E89      		ldd r25,Y+22
 10489 4878 880F      		lsl r24
 10490 487a 991F      		rol r25
 10491 487c 2F8D      		ldd r18,Y+31
 10492 487e 38A1      		ldd r19,Y+32
 10493 4880 820F      		add r24,r18
 10494 4882 931F      		adc r25,r19
 10495 4884 2FEF      		ldi r18,lo8(-1)
 10496 4886 3FEF      		ldi r19,lo8(-1)
 10497 4888 FC01      		movw r30,r24
 10498 488a 3183      		std Z+1,r19
 10499 488c 2083      		st Z,r18
 10500               	.L235:
2758:lp_solve_5.5/colamd/colamd.c ****     {
 10501               		.loc 1 2758 0
 10502 488e 2981      		ldd r18,Y+1
 10503 4890 3A81      		ldd r19,Y+2
 10504 4892 8989      		ldd r24,Y+17
 10505 4894 9A89      		ldd r25,Y+18
 10506 4896 2817      		cp r18,r24
 10507 4898 3907      		cpc r19,r25
 10508 489a 00F4      		brsh .+2
 10509 489c 00C0      		rjmp .L252
2860:lp_solve_5.5/colamd/colamd.c **** 	}
2861:lp_solve_5.5/colamd/colamd.c ****     }
2862:lp_solve_5.5/colamd/colamd.c **** }
 10510               		.loc 1 2862 0
 10511 489e 0000      		nop
 10512               	/* epilogue start */
 10513 48a0 A496      		adiw r28,36
 10514 48a2 0FB6      		in __tmp_reg__,__SREG__
 10515 48a4 F894      		cli
 10516 48a6 DEBF      		out __SP_H__,r29
 10517 48a8 0FBE      		out __SREG__,__tmp_reg__
 10518 48aa CDBF      		out __SP_L__,r28
 10519 48ac DF91      		pop r29
 10520 48ae CF91      		pop r28
 10521 48b0 1F91      		pop r17
 10522 48b2 0F91      		pop r16
 10523 48b4 0895      		ret
 10524               		.cfi_endproc
 10525               	.LFE15:
 10528               	garbage_collection:
 10529               	.LFB16:
2863:lp_solve_5.5/colamd/colamd.c **** 
2864:lp_solve_5.5/colamd/colamd.c **** 
2865:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
2866:lp_solve_5.5/colamd/colamd.c **** /* === garbage_collection =================================================== */
2867:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
2868:lp_solve_5.5/colamd/colamd.c **** 
2869:lp_solve_5.5/colamd/colamd.c **** /*
2870:lp_solve_5.5/colamd/colamd.c ****     Defragments and compacts columns and rows in the workspace A.  Used when
2871:lp_solve_5.5/colamd/colamd.c ****     all avaliable memory has been used while performing row merging.  Returns
2872:lp_solve_5.5/colamd/colamd.c ****     the index of the first free position in A, after garbage collection.  The
2873:lp_solve_5.5/colamd/colamd.c ****     time taken by this routine is linear is the size of the array A, which is
2874:lp_solve_5.5/colamd/colamd.c ****     itself linear in the number of nonzeros in the input matrix.
2875:lp_solve_5.5/colamd/colamd.c ****     Not user-callable.
2876:lp_solve_5.5/colamd/colamd.c **** */
2877:lp_solve_5.5/colamd/colamd.c **** 
2878:lp_solve_5.5/colamd/colamd.c **** PRIVATE int garbage_collection  /* returns the new value of pfree */
2879:lp_solve_5.5/colamd/colamd.c **** (
2880:lp_solve_5.5/colamd/colamd.c ****     /* === Parameters ======================================================= */
2881:lp_solve_5.5/colamd/colamd.c **** 
2882:lp_solve_5.5/colamd/colamd.c ****     int n_row,			/* number of rows */
2883:lp_solve_5.5/colamd/colamd.c ****     int n_col,			/* number of columns */
2884:lp_solve_5.5/colamd/colamd.c ****     Colamd_Row Row [],		/* row info */
2885:lp_solve_5.5/colamd/colamd.c ****     Colamd_Col Col [],		/* column info */
2886:lp_solve_5.5/colamd/colamd.c ****     int A [],			/* A [0 ... Alen-1] holds the matrix */
2887:lp_solve_5.5/colamd/colamd.c ****     int *pfree			/* &A [0] ... pfree is in use */
2888:lp_solve_5.5/colamd/colamd.c **** )
2889:lp_solve_5.5/colamd/colamd.c **** {
 10530               		.loc 1 2889 0
 10531               		.cfi_startproc
 10532 48b6 EF92      		push r14
 10533               	.LCFI90:
 10534               		.cfi_def_cfa_offset 3
 10535               		.cfi_offset 14, -2
 10536 48b8 FF92      		push r15
 10537               	.LCFI91:
 10538               		.cfi_def_cfa_offset 4
 10539               		.cfi_offset 15, -3
 10540 48ba 0F93      		push r16
 10541               	.LCFI92:
 10542               		.cfi_def_cfa_offset 5
 10543               		.cfi_offset 16, -4
 10544 48bc 1F93      		push r17
 10545               	.LCFI93:
 10546               		.cfi_def_cfa_offset 6
 10547               		.cfi_offset 17, -5
 10548 48be CF93      		push r28
 10549               	.LCFI94:
 10550               		.cfi_def_cfa_offset 7
 10551               		.cfi_offset 28, -6
 10552 48c0 DF93      		push r29
 10553               	.LCFI95:
 10554               		.cfi_def_cfa_offset 8
 10555               		.cfi_offset 29, -7
 10556 48c2 CDB7      		in r28,__SP_L__
 10557 48c4 DEB7      		in r29,__SP_H__
 10558               	.LCFI96:
 10559               		.cfi_def_cfa_register 28
 10560 48c6 6897      		sbiw r28,24
 10561               	.LCFI97:
 10562               		.cfi_def_cfa_offset 32
 10563 48c8 0FB6      		in __tmp_reg__,__SREG__
 10564 48ca F894      		cli
 10565 48cc DEBF      		out __SP_H__,r29
 10566 48ce 0FBE      		out __SREG__,__tmp_reg__
 10567 48d0 CDBF      		out __SP_L__,r28
 10568               	/* prologue: function */
 10569               	/* frame size = 24 */
 10570               	/* stack size = 30 */
 10571               	.L__stack_usage = 30
 10572 48d2 9E87      		std Y+14,r25
 10573 48d4 8D87      		std Y+13,r24
 10574 48d6 788B      		std Y+16,r23
 10575 48d8 6F87      		std Y+15,r22
 10576 48da 5A8B      		std Y+18,r21
 10577 48dc 498B      		std Y+17,r20
 10578 48de 3C8B      		std Y+20,r19
 10579 48e0 2B8B      		std Y+19,r18
 10580 48e2 1E8B      		std Y+22,r17
 10581 48e4 0D8B      		std Y+21,r16
 10582 48e6 F88E      		std Y+24,r15
 10583 48e8 EF8A      		std Y+23,r14
2890:lp_solve_5.5/colamd/colamd.c ****     /* === Local variables ================================================== */
2891:lp_solve_5.5/colamd/colamd.c **** 
2892:lp_solve_5.5/colamd/colamd.c ****     int *psrc ;			/* source pointer */
2893:lp_solve_5.5/colamd/colamd.c ****     int *pdest ;		/* destination pointer */
2894:lp_solve_5.5/colamd/colamd.c ****     int j ;			/* counter */
2895:lp_solve_5.5/colamd/colamd.c ****     int r ;			/* a row index */
2896:lp_solve_5.5/colamd/colamd.c ****     int c ;			/* a column index */
2897:lp_solve_5.5/colamd/colamd.c ****     int length ;		/* length of a row or column */
2898:lp_solve_5.5/colamd/colamd.c **** 
2899:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
2900:lp_solve_5.5/colamd/colamd.c ****     int debug_rows ;
2901:lp_solve_5.5/colamd/colamd.c ****     DEBUG2 (("Defrag..\n")) ;
2902:lp_solve_5.5/colamd/colamd.c ****     for (psrc = &A[0] ; psrc < pfree ; psrc++) ASSERT (*psrc >= 0) ;
2903:lp_solve_5.5/colamd/colamd.c ****     debug_rows = 0 ;
2904:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
2905:lp_solve_5.5/colamd/colamd.c **** 
2906:lp_solve_5.5/colamd/colamd.c ****     /* === Defragment the columns =========================================== */
2907:lp_solve_5.5/colamd/colamd.c **** 
2908:lp_solve_5.5/colamd/colamd.c ****     pdest = &A[0] ;
 10584               		.loc 1 2908 0
 10585 48ea 8D89      		ldd r24,Y+21
 10586 48ec 9E89      		ldd r25,Y+22
 10587 48ee 9C83      		std Y+4,r25
 10588 48f0 8B83      		std Y+3,r24
2909:lp_solve_5.5/colamd/colamd.c ****     for (c = 0 ; c < n_col ; c++)
 10589               		.loc 1 2909 0
 10590 48f2 1A86      		std Y+10,__zero_reg__
 10591 48f4 1986      		std Y+9,__zero_reg__
 10592 48f6 00C0      		rjmp .L255
 10593               	.L260:
2910:lp_solve_5.5/colamd/colamd.c ****     {
2911:lp_solve_5.5/colamd/colamd.c **** 	if (COL_IS_ALIVE (c))
 10594               		.loc 1 2911 0
 10595 48f8 2985      		ldd r18,Y+9
 10596 48fa 3A85      		ldd r19,Y+10
 10597 48fc C901      		movw r24,r18
 10598 48fe 880F      		lsl r24
 10599 4900 991F      		rol r25
 10600 4902 820F      		add r24,r18
 10601 4904 931F      		adc r25,r19
 10602 4906 880F      		lsl r24
 10603 4908 991F      		rol r25
 10604 490a 880F      		lsl r24
 10605 490c 991F      		rol r25
 10606 490e 9C01      		movw r18,r24
 10607 4910 8B89      		ldd r24,Y+19
 10608 4912 9C89      		ldd r25,Y+20
 10609 4914 820F      		add r24,r18
 10610 4916 931F      		adc r25,r19
 10611 4918 FC01      		movw r30,r24
 10612 491a 8081      		ld r24,Z
 10613 491c 9181      		ldd r25,Z+1
 10614 491e 9923      		tst r25
 10615 4920 04F4      		brge .+2
 10616 4922 00C0      		rjmp .L256
2912:lp_solve_5.5/colamd/colamd.c **** 	{
2913:lp_solve_5.5/colamd/colamd.c **** 	    psrc = &A [Col [c].start] ;
 10617               		.loc 1 2913 0
 10618 4924 2985      		ldd r18,Y+9
 10619 4926 3A85      		ldd r19,Y+10
 10620 4928 C901      		movw r24,r18
 10621 492a 880F      		lsl r24
 10622 492c 991F      		rol r25
 10623 492e 820F      		add r24,r18
 10624 4930 931F      		adc r25,r19
 10625 4932 880F      		lsl r24
 10626 4934 991F      		rol r25
 10627 4936 880F      		lsl r24
 10628 4938 991F      		rol r25
 10629 493a 9C01      		movw r18,r24
 10630 493c 8B89      		ldd r24,Y+19
 10631 493e 9C89      		ldd r25,Y+20
 10632 4940 820F      		add r24,r18
 10633 4942 931F      		adc r25,r19
 10634 4944 FC01      		movw r30,r24
 10635 4946 8081      		ld r24,Z
 10636 4948 9181      		ldd r25,Z+1
 10637 494a 880F      		lsl r24
 10638 494c 991F      		rol r25
 10639 494e 2D89      		ldd r18,Y+21
 10640 4950 3E89      		ldd r19,Y+22
 10641 4952 820F      		add r24,r18
 10642 4954 931F      		adc r25,r19
 10643 4956 9A83      		std Y+2,r25
 10644 4958 8983      		std Y+1,r24
2914:lp_solve_5.5/colamd/colamd.c **** 
2915:lp_solve_5.5/colamd/colamd.c **** 	    /* move and compact the column */
2916:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (pdest <= psrc) ;
2917:lp_solve_5.5/colamd/colamd.c **** 	    Col [c].start = (int) (pdest - &A [0]) ;
 10645               		.loc 1 2917 0
 10646 495a 2985      		ldd r18,Y+9
 10647 495c 3A85      		ldd r19,Y+10
 10648 495e C901      		movw r24,r18
 10649 4960 880F      		lsl r24
 10650 4962 991F      		rol r25
 10651 4964 820F      		add r24,r18
 10652 4966 931F      		adc r25,r19
 10653 4968 880F      		lsl r24
 10654 496a 991F      		rol r25
 10655 496c 880F      		lsl r24
 10656 496e 991F      		rol r25
 10657 4970 9C01      		movw r18,r24
 10658 4972 8B89      		ldd r24,Y+19
 10659 4974 9C89      		ldd r25,Y+20
 10660 4976 820F      		add r24,r18
 10661 4978 931F      		adc r25,r19
 10662 497a 4B81      		ldd r20,Y+3
 10663 497c 5C81      		ldd r21,Y+4
 10664 497e 2D89      		ldd r18,Y+21
 10665 4980 3E89      		ldd r19,Y+22
 10666 4982 BA01      		movw r22,r20
 10667 4984 621B      		sub r22,r18
 10668 4986 730B      		sbc r23,r19
 10669 4988 9B01      		movw r18,r22
 10670 498a 3595      		asr r19
 10671 498c 2795      		ror r18
 10672 498e FC01      		movw r30,r24
 10673 4990 3183      		std Z+1,r19
 10674 4992 2083      		st Z,r18
2918:lp_solve_5.5/colamd/colamd.c **** 	    length = Col [c].length ;
 10675               		.loc 1 2918 0
 10676 4994 2985      		ldd r18,Y+9
 10677 4996 3A85      		ldd r19,Y+10
 10678 4998 C901      		movw r24,r18
 10679 499a 880F      		lsl r24
 10680 499c 991F      		rol r25
 10681 499e 820F      		add r24,r18
 10682 49a0 931F      		adc r25,r19
 10683 49a2 880F      		lsl r24
 10684 49a4 991F      		rol r25
 10685 49a6 880F      		lsl r24
 10686 49a8 991F      		rol r25
 10687 49aa 9C01      		movw r18,r24
 10688 49ac 8B89      		ldd r24,Y+19
 10689 49ae 9C89      		ldd r25,Y+20
 10690 49b0 820F      		add r24,r18
 10691 49b2 931F      		adc r25,r19
 10692 49b4 FC01      		movw r30,r24
 10693 49b6 8281      		ldd r24,Z+2
 10694 49b8 9381      		ldd r25,Z+3
 10695 49ba 9C87      		std Y+12,r25
 10696 49bc 8B87      		std Y+11,r24
2919:lp_solve_5.5/colamd/colamd.c **** 	    for (j = 0 ; j < length ; j++)
 10697               		.loc 1 2919 0
 10698 49be 1E82      		std Y+6,__zero_reg__
 10699 49c0 1D82      		std Y+5,__zero_reg__
 10700 49c2 00C0      		rjmp .L257
 10701               	.L259:
2920:lp_solve_5.5/colamd/colamd.c **** 	    {
2921:lp_solve_5.5/colamd/colamd.c **** 		r = *psrc++ ;
 10702               		.loc 1 2921 0
 10703 49c4 8981      		ldd r24,Y+1
 10704 49c6 9A81      		ldd r25,Y+2
 10705 49c8 9C01      		movw r18,r24
 10706 49ca 2E5F      		subi r18,-2
 10707 49cc 3F4F      		sbci r19,-1
 10708 49ce 3A83      		std Y+2,r19
 10709 49d0 2983      		std Y+1,r18
 10710 49d2 FC01      		movw r30,r24
 10711 49d4 8081      		ld r24,Z
 10712 49d6 9181      		ldd r25,Z+1
 10713 49d8 9887      		std Y+8,r25
 10714 49da 8F83      		std Y+7,r24
2922:lp_solve_5.5/colamd/colamd.c **** 		if (ROW_IS_ALIVE (r))
 10715               		.loc 1 2922 0
 10716 49dc 8F81      		ldd r24,Y+7
 10717 49de 9885      		ldd r25,Y+8
 10718 49e0 880F      		lsl r24
 10719 49e2 991F      		rol r25
 10720 49e4 880F      		lsl r24
 10721 49e6 991F      		rol r25
 10722 49e8 880F      		lsl r24
 10723 49ea 991F      		rol r25
 10724 49ec 2989      		ldd r18,Y+17
 10725 49ee 3A89      		ldd r19,Y+18
 10726 49f0 820F      		add r24,r18
 10727 49f2 931F      		adc r25,r19
 10728 49f4 FC01      		movw r30,r24
 10729 49f6 8681      		ldd r24,Z+6
 10730 49f8 9781      		ldd r25,Z+7
 10731 49fa 9923      		tst r25
 10732 49fc 04F0      		brlt .L258
2923:lp_solve_5.5/colamd/colamd.c **** 		{
2924:lp_solve_5.5/colamd/colamd.c **** 		    *pdest++ = r ;
 10733               		.loc 1 2924 0
 10734 49fe 8B81      		ldd r24,Y+3
 10735 4a00 9C81      		ldd r25,Y+4
 10736 4a02 9C01      		movw r18,r24
 10737 4a04 2E5F      		subi r18,-2
 10738 4a06 3F4F      		sbci r19,-1
 10739 4a08 3C83      		std Y+4,r19
 10740 4a0a 2B83      		std Y+3,r18
 10741 4a0c 2F81      		ldd r18,Y+7
 10742 4a0e 3885      		ldd r19,Y+8
 10743 4a10 FC01      		movw r30,r24
 10744 4a12 3183      		std Z+1,r19
 10745 4a14 2083      		st Z,r18
 10746               	.L258:
2919:lp_solve_5.5/colamd/colamd.c **** 	    {
 10747               		.loc 1 2919 0 discriminator 2
 10748 4a16 8D81      		ldd r24,Y+5
 10749 4a18 9E81      		ldd r25,Y+6
 10750 4a1a 0196      		adiw r24,1
 10751 4a1c 9E83      		std Y+6,r25
 10752 4a1e 8D83      		std Y+5,r24
 10753               	.L257:
2919:lp_solve_5.5/colamd/colamd.c **** 	    {
 10754               		.loc 1 2919 0 is_stmt 0 discriminator 1
 10755 4a20 2D81      		ldd r18,Y+5
 10756 4a22 3E81      		ldd r19,Y+6
 10757 4a24 8B85      		ldd r24,Y+11
 10758 4a26 9C85      		ldd r25,Y+12
 10759 4a28 2817      		cp r18,r24
 10760 4a2a 3907      		cpc r19,r25
 10761 4a2c 04F0      		brlt .L259
2925:lp_solve_5.5/colamd/colamd.c **** 		}
2926:lp_solve_5.5/colamd/colamd.c **** 	    }
2927:lp_solve_5.5/colamd/colamd.c **** 	    Col [c].length = (int) (pdest - &A [Col [c].start]) ;
 10762               		.loc 1 2927 0 is_stmt 1
 10763 4a2e 2985      		ldd r18,Y+9
 10764 4a30 3A85      		ldd r19,Y+10
 10765 4a32 C901      		movw r24,r18
 10766 4a34 880F      		lsl r24
 10767 4a36 991F      		rol r25
 10768 4a38 820F      		add r24,r18
 10769 4a3a 931F      		adc r25,r19
 10770 4a3c 880F      		lsl r24
 10771 4a3e 991F      		rol r25
 10772 4a40 880F      		lsl r24
 10773 4a42 991F      		rol r25
 10774 4a44 9C01      		movw r18,r24
 10775 4a46 8B89      		ldd r24,Y+19
 10776 4a48 9C89      		ldd r25,Y+20
 10777 4a4a AC01      		movw r20,r24
 10778 4a4c 420F      		add r20,r18
 10779 4a4e 531F      		adc r21,r19
 10780 4a50 6B81      		ldd r22,Y+3
 10781 4a52 7C81      		ldd r23,Y+4
 10782 4a54 2985      		ldd r18,Y+9
 10783 4a56 3A85      		ldd r19,Y+10
 10784 4a58 C901      		movw r24,r18
 10785 4a5a 880F      		lsl r24
 10786 4a5c 991F      		rol r25
 10787 4a5e 820F      		add r24,r18
 10788 4a60 931F      		adc r25,r19
 10789 4a62 880F      		lsl r24
 10790 4a64 991F      		rol r25
 10791 4a66 880F      		lsl r24
 10792 4a68 991F      		rol r25
 10793 4a6a 9C01      		movw r18,r24
 10794 4a6c 8B89      		ldd r24,Y+19
 10795 4a6e 9C89      		ldd r25,Y+20
 10796 4a70 820F      		add r24,r18
 10797 4a72 931F      		adc r25,r19
 10798 4a74 FC01      		movw r30,r24
 10799 4a76 8081      		ld r24,Z
 10800 4a78 9181      		ldd r25,Z+1
 10801 4a7a 880F      		lsl r24
 10802 4a7c 991F      		rol r25
 10803 4a7e 2D89      		ldd r18,Y+21
 10804 4a80 3E89      		ldd r19,Y+22
 10805 4a82 820F      		add r24,r18
 10806 4a84 931F      		adc r25,r19
 10807 4a86 9B01      		movw r18,r22
 10808 4a88 281B      		sub r18,r24
 10809 4a8a 390B      		sbc r19,r25
 10810 4a8c C901      		movw r24,r18
 10811 4a8e 9595      		asr r25
 10812 4a90 8795      		ror r24
 10813 4a92 FA01      		movw r30,r20
 10814 4a94 9383      		std Z+3,r25
 10815 4a96 8283      		std Z+2,r24
 10816               	.L256:
2909:lp_solve_5.5/colamd/colamd.c ****     {
 10817               		.loc 1 2909 0 discriminator 2
 10818 4a98 8985      		ldd r24,Y+9
 10819 4a9a 9A85      		ldd r25,Y+10
 10820 4a9c 0196      		adiw r24,1
 10821 4a9e 9A87      		std Y+10,r25
 10822 4aa0 8987      		std Y+9,r24
 10823               	.L255:
2909:lp_solve_5.5/colamd/colamd.c ****     {
 10824               		.loc 1 2909 0 is_stmt 0 discriminator 1
 10825 4aa2 2985      		ldd r18,Y+9
 10826 4aa4 3A85      		ldd r19,Y+10
 10827 4aa6 8F85      		ldd r24,Y+15
 10828 4aa8 9889      		ldd r25,Y+16
 10829 4aaa 2817      		cp r18,r24
 10830 4aac 3907      		cpc r19,r25
 10831 4aae 04F4      		brge .+2
 10832 4ab0 00C0      		rjmp .L260
2928:lp_solve_5.5/colamd/colamd.c **** 	}
2929:lp_solve_5.5/colamd/colamd.c ****     }
2930:lp_solve_5.5/colamd/colamd.c **** 
2931:lp_solve_5.5/colamd/colamd.c ****     /* === Prepare to defragment the rows =================================== */
2932:lp_solve_5.5/colamd/colamd.c **** 
2933:lp_solve_5.5/colamd/colamd.c ****     for (r = 0 ; r < n_row ; r++)
 10833               		.loc 1 2933 0 is_stmt 1
 10834 4ab2 1886      		std Y+8,__zero_reg__
 10835 4ab4 1F82      		std Y+7,__zero_reg__
 10836 4ab6 00C0      		rjmp .L261
 10837               	.L264:
2934:lp_solve_5.5/colamd/colamd.c ****     {
2935:lp_solve_5.5/colamd/colamd.c **** 	if (ROW_IS_ALIVE (r))
 10838               		.loc 1 2935 0
 10839 4ab8 8F81      		ldd r24,Y+7
 10840 4aba 9885      		ldd r25,Y+8
 10841 4abc 880F      		lsl r24
 10842 4abe 991F      		rol r25
 10843 4ac0 880F      		lsl r24
 10844 4ac2 991F      		rol r25
 10845 4ac4 880F      		lsl r24
 10846 4ac6 991F      		rol r25
 10847 4ac8 2989      		ldd r18,Y+17
 10848 4aca 3A89      		ldd r19,Y+18
 10849 4acc 820F      		add r24,r18
 10850 4ace 931F      		adc r25,r19
 10851 4ad0 FC01      		movw r30,r24
 10852 4ad2 8681      		ldd r24,Z+6
 10853 4ad4 9781      		ldd r25,Z+7
 10854 4ad6 9923      		tst r25
 10855 4ad8 04F4      		brge .+2
 10856 4ada 00C0      		rjmp .L262
2936:lp_solve_5.5/colamd/colamd.c **** 	{
2937:lp_solve_5.5/colamd/colamd.c **** 	    if (Row [r].length == 0)
 10857               		.loc 1 2937 0
 10858 4adc 8F81      		ldd r24,Y+7
 10859 4ade 9885      		ldd r25,Y+8
 10860 4ae0 880F      		lsl r24
 10861 4ae2 991F      		rol r25
 10862 4ae4 880F      		lsl r24
 10863 4ae6 991F      		rol r25
 10864 4ae8 880F      		lsl r24
 10865 4aea 991F      		rol r25
 10866 4aec 2989      		ldd r18,Y+17
 10867 4aee 3A89      		ldd r19,Y+18
 10868 4af0 820F      		add r24,r18
 10869 4af2 931F      		adc r25,r19
 10870 4af4 FC01      		movw r30,r24
 10871 4af6 8281      		ldd r24,Z+2
 10872 4af8 9381      		ldd r25,Z+3
 10873 4afa 892B      		or r24,r25
 10874 4afc 01F4      		brne .L263
2938:lp_solve_5.5/colamd/colamd.c **** 	    {
2939:lp_solve_5.5/colamd/colamd.c **** 		/* this row is of zero length.  cannot compact it, so kill it */
2940:lp_solve_5.5/colamd/colamd.c **** 		DEBUG3 (("Defrag row kill\n")) ;
2941:lp_solve_5.5/colamd/colamd.c **** 		KILL_ROW (r) ;
 10875               		.loc 1 2941 0
 10876 4afe 8F81      		ldd r24,Y+7
 10877 4b00 9885      		ldd r25,Y+8
 10878 4b02 880F      		lsl r24
 10879 4b04 991F      		rol r25
 10880 4b06 880F      		lsl r24
 10881 4b08 991F      		rol r25
 10882 4b0a 880F      		lsl r24
 10883 4b0c 991F      		rol r25
 10884 4b0e 2989      		ldd r18,Y+17
 10885 4b10 3A89      		ldd r19,Y+18
 10886 4b12 820F      		add r24,r18
 10887 4b14 931F      		adc r25,r19
 10888 4b16 2FEF      		ldi r18,lo8(-1)
 10889 4b18 3FEF      		ldi r19,lo8(-1)
 10890 4b1a FC01      		movw r30,r24
 10891 4b1c 3783      		std Z+7,r19
 10892 4b1e 2683      		std Z+6,r18
 10893 4b20 00C0      		rjmp .L262
 10894               	.L263:
2942:lp_solve_5.5/colamd/colamd.c **** 	    }
2943:lp_solve_5.5/colamd/colamd.c **** 	    else
2944:lp_solve_5.5/colamd/colamd.c **** 	    {
2945:lp_solve_5.5/colamd/colamd.c **** 		/* save first column index in Row [r].shared2.first_column */
2946:lp_solve_5.5/colamd/colamd.c **** 		psrc = &A [Row [r].start] ;
 10895               		.loc 1 2946 0
 10896 4b22 8F81      		ldd r24,Y+7
 10897 4b24 9885      		ldd r25,Y+8
 10898 4b26 880F      		lsl r24
 10899 4b28 991F      		rol r25
 10900 4b2a 880F      		lsl r24
 10901 4b2c 991F      		rol r25
 10902 4b2e 880F      		lsl r24
 10903 4b30 991F      		rol r25
 10904 4b32 2989      		ldd r18,Y+17
 10905 4b34 3A89      		ldd r19,Y+18
 10906 4b36 820F      		add r24,r18
 10907 4b38 931F      		adc r25,r19
 10908 4b3a FC01      		movw r30,r24
 10909 4b3c 8081      		ld r24,Z
 10910 4b3e 9181      		ldd r25,Z+1
 10911 4b40 880F      		lsl r24
 10912 4b42 991F      		rol r25
 10913 4b44 2D89      		ldd r18,Y+21
 10914 4b46 3E89      		ldd r19,Y+22
 10915 4b48 820F      		add r24,r18
 10916 4b4a 931F      		adc r25,r19
 10917 4b4c 9A83      		std Y+2,r25
 10918 4b4e 8983      		std Y+1,r24
2947:lp_solve_5.5/colamd/colamd.c **** 		Row [r].shared2.first_column = *psrc ;
 10919               		.loc 1 2947 0
 10920 4b50 8F81      		ldd r24,Y+7
 10921 4b52 9885      		ldd r25,Y+8
 10922 4b54 880F      		lsl r24
 10923 4b56 991F      		rol r25
 10924 4b58 880F      		lsl r24
 10925 4b5a 991F      		rol r25
 10926 4b5c 880F      		lsl r24
 10927 4b5e 991F      		rol r25
 10928 4b60 2989      		ldd r18,Y+17
 10929 4b62 3A89      		ldd r19,Y+18
 10930 4b64 820F      		add r24,r18
 10931 4b66 931F      		adc r25,r19
 10932 4b68 2981      		ldd r18,Y+1
 10933 4b6a 3A81      		ldd r19,Y+2
 10934 4b6c F901      		movw r30,r18
 10935 4b6e 2081      		ld r18,Z
 10936 4b70 3181      		ldd r19,Z+1
 10937 4b72 FC01      		movw r30,r24
 10938 4b74 3783      		std Z+7,r19
 10939 4b76 2683      		std Z+6,r18
2948:lp_solve_5.5/colamd/colamd.c **** 		ASSERT (ROW_IS_ALIVE (r)) ;
2949:lp_solve_5.5/colamd/colamd.c **** 		/* flag the start of the row with the one's complement of row */
2950:lp_solve_5.5/colamd/colamd.c **** 		*psrc = ONES_COMPLEMENT (r) ;
 10940               		.loc 1 2950 0
 10941 4b78 8F81      		ldd r24,Y+7
 10942 4b7a 9885      		ldd r25,Y+8
 10943 4b7c 9C01      		movw r18,r24
 10944 4b7e 2095      		com r18
 10945 4b80 3095      		com r19
 10946 4b82 8981      		ldd r24,Y+1
 10947 4b84 9A81      		ldd r25,Y+2
 10948 4b86 FC01      		movw r30,r24
 10949 4b88 3183      		std Z+1,r19
 10950 4b8a 2083      		st Z,r18
 10951               	.L262:
2933:lp_solve_5.5/colamd/colamd.c ****     {
 10952               		.loc 1 2933 0 discriminator 2
 10953 4b8c 8F81      		ldd r24,Y+7
 10954 4b8e 9885      		ldd r25,Y+8
 10955 4b90 0196      		adiw r24,1
 10956 4b92 9887      		std Y+8,r25
 10957 4b94 8F83      		std Y+7,r24
 10958               	.L261:
2933:lp_solve_5.5/colamd/colamd.c ****     {
 10959               		.loc 1 2933 0 is_stmt 0 discriminator 1
 10960 4b96 2F81      		ldd r18,Y+7
 10961 4b98 3885      		ldd r19,Y+8
 10962 4b9a 8D85      		ldd r24,Y+13
 10963 4b9c 9E85      		ldd r25,Y+14
 10964 4b9e 2817      		cp r18,r24
 10965 4ba0 3907      		cpc r19,r25
 10966 4ba2 04F4      		brge .+2
 10967 4ba4 00C0      		rjmp .L264
2951:lp_solve_5.5/colamd/colamd.c **** 
2952:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
2953:lp_solve_5.5/colamd/colamd.c **** 		debug_rows++ ;
2954:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
2955:lp_solve_5.5/colamd/colamd.c **** 
2956:lp_solve_5.5/colamd/colamd.c **** 	    }
2957:lp_solve_5.5/colamd/colamd.c **** 	}
2958:lp_solve_5.5/colamd/colamd.c ****     }
2959:lp_solve_5.5/colamd/colamd.c **** 
2960:lp_solve_5.5/colamd/colamd.c ****     /* === Defragment the rows ============================================== */
2961:lp_solve_5.5/colamd/colamd.c **** 
2962:lp_solve_5.5/colamd/colamd.c ****     psrc = pdest ;
 10968               		.loc 1 2962 0 is_stmt 1
 10969 4ba6 8B81      		ldd r24,Y+3
 10970 4ba8 9C81      		ldd r25,Y+4
 10971 4baa 9A83      		std Y+2,r25
 10972 4bac 8983      		std Y+1,r24
2963:lp_solve_5.5/colamd/colamd.c ****     while (psrc < pfree)
 10973               		.loc 1 2963 0
 10974 4bae 00C0      		rjmp .L265
 10975               	.L269:
2964:lp_solve_5.5/colamd/colamd.c ****     {
2965:lp_solve_5.5/colamd/colamd.c **** 	/* find a negative number ... the start of a row */
2966:lp_solve_5.5/colamd/colamd.c **** 	if (*psrc++ < 0)
 10976               		.loc 1 2966 0
 10977 4bb0 8981      		ldd r24,Y+1
 10978 4bb2 9A81      		ldd r25,Y+2
 10979 4bb4 9C01      		movw r18,r24
 10980 4bb6 2E5F      		subi r18,-2
 10981 4bb8 3F4F      		sbci r19,-1
 10982 4bba 3A83      		std Y+2,r19
 10983 4bbc 2983      		std Y+1,r18
 10984 4bbe FC01      		movw r30,r24
 10985 4bc0 8081      		ld r24,Z
 10986 4bc2 9181      		ldd r25,Z+1
 10987 4bc4 9923      		tst r25
 10988 4bc6 04F0      		brlt .+2
 10989 4bc8 00C0      		rjmp .L265
2967:lp_solve_5.5/colamd/colamd.c **** 	{
2968:lp_solve_5.5/colamd/colamd.c **** 	    psrc-- ;
 10990               		.loc 1 2968 0
 10991 4bca 8981      		ldd r24,Y+1
 10992 4bcc 9A81      		ldd r25,Y+2
 10993 4bce 0297      		sbiw r24,2
 10994 4bd0 9A83      		std Y+2,r25
 10995 4bd2 8983      		std Y+1,r24
2969:lp_solve_5.5/colamd/colamd.c **** 	    /* get the row index */
2970:lp_solve_5.5/colamd/colamd.c **** 	    r = ONES_COMPLEMENT (*psrc) ;
 10996               		.loc 1 2970 0
 10997 4bd4 8981      		ldd r24,Y+1
 10998 4bd6 9A81      		ldd r25,Y+2
 10999 4bd8 FC01      		movw r30,r24
 11000 4bda 8081      		ld r24,Z
 11001 4bdc 9181      		ldd r25,Z+1
 11002 4bde 8095      		com r24
 11003 4be0 9095      		com r25
 11004 4be2 9887      		std Y+8,r25
 11005 4be4 8F83      		std Y+7,r24
2971:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (r >= 0 && r < n_row) ;
2972:lp_solve_5.5/colamd/colamd.c **** 	    /* restore first column index */
2973:lp_solve_5.5/colamd/colamd.c **** 	    *psrc = Row [r].shared2.first_column ;
 11006               		.loc 1 2973 0
 11007 4be6 8F81      		ldd r24,Y+7
 11008 4be8 9885      		ldd r25,Y+8
 11009 4bea 880F      		lsl r24
 11010 4bec 991F      		rol r25
 11011 4bee 880F      		lsl r24
 11012 4bf0 991F      		rol r25
 11013 4bf2 880F      		lsl r24
 11014 4bf4 991F      		rol r25
 11015 4bf6 2989      		ldd r18,Y+17
 11016 4bf8 3A89      		ldd r19,Y+18
 11017 4bfa 820F      		add r24,r18
 11018 4bfc 931F      		adc r25,r19
 11019 4bfe FC01      		movw r30,r24
 11020 4c00 2681      		ldd r18,Z+6
 11021 4c02 3781      		ldd r19,Z+7
 11022 4c04 8981      		ldd r24,Y+1
 11023 4c06 9A81      		ldd r25,Y+2
 11024 4c08 FC01      		movw r30,r24
 11025 4c0a 3183      		std Z+1,r19
 11026 4c0c 2083      		st Z,r18
2974:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (ROW_IS_ALIVE (r)) ;
2975:lp_solve_5.5/colamd/colamd.c **** 
2976:lp_solve_5.5/colamd/colamd.c **** 	    /* move and compact the row */
2977:lp_solve_5.5/colamd/colamd.c **** 	    ASSERT (pdest <= psrc) ;
2978:lp_solve_5.5/colamd/colamd.c **** 	    Row [r].start = (int) (pdest - &A [0]) ;
 11027               		.loc 1 2978 0
 11028 4c0e 8F81      		ldd r24,Y+7
 11029 4c10 9885      		ldd r25,Y+8
 11030 4c12 880F      		lsl r24
 11031 4c14 991F      		rol r25
 11032 4c16 880F      		lsl r24
 11033 4c18 991F      		rol r25
 11034 4c1a 880F      		lsl r24
 11035 4c1c 991F      		rol r25
 11036 4c1e 2989      		ldd r18,Y+17
 11037 4c20 3A89      		ldd r19,Y+18
 11038 4c22 820F      		add r24,r18
 11039 4c24 931F      		adc r25,r19
 11040 4c26 4B81      		ldd r20,Y+3
 11041 4c28 5C81      		ldd r21,Y+4
 11042 4c2a 2D89      		ldd r18,Y+21
 11043 4c2c 3E89      		ldd r19,Y+22
 11044 4c2e BA01      		movw r22,r20
 11045 4c30 621B      		sub r22,r18
 11046 4c32 730B      		sbc r23,r19
 11047 4c34 9B01      		movw r18,r22
 11048 4c36 3595      		asr r19
 11049 4c38 2795      		ror r18
 11050 4c3a FC01      		movw r30,r24
 11051 4c3c 3183      		std Z+1,r19
 11052 4c3e 2083      		st Z,r18
2979:lp_solve_5.5/colamd/colamd.c **** 	    length = Row [r].length ;
 11053               		.loc 1 2979 0
 11054 4c40 8F81      		ldd r24,Y+7
 11055 4c42 9885      		ldd r25,Y+8
 11056 4c44 880F      		lsl r24
 11057 4c46 991F      		rol r25
 11058 4c48 880F      		lsl r24
 11059 4c4a 991F      		rol r25
 11060 4c4c 880F      		lsl r24
 11061 4c4e 991F      		rol r25
 11062 4c50 2989      		ldd r18,Y+17
 11063 4c52 3A89      		ldd r19,Y+18
 11064 4c54 820F      		add r24,r18
 11065 4c56 931F      		adc r25,r19
 11066 4c58 FC01      		movw r30,r24
 11067 4c5a 8281      		ldd r24,Z+2
 11068 4c5c 9381      		ldd r25,Z+3
 11069 4c5e 9C87      		std Y+12,r25
 11070 4c60 8B87      		std Y+11,r24
2980:lp_solve_5.5/colamd/colamd.c **** 	    for (j = 0 ; j < length ; j++)
 11071               		.loc 1 2980 0
 11072 4c62 1E82      		std Y+6,__zero_reg__
 11073 4c64 1D82      		std Y+5,__zero_reg__
 11074 4c66 00C0      		rjmp .L266
 11075               	.L268:
2981:lp_solve_5.5/colamd/colamd.c **** 	    {
2982:lp_solve_5.5/colamd/colamd.c **** 		c = *psrc++ ;
 11076               		.loc 1 2982 0
 11077 4c68 8981      		ldd r24,Y+1
 11078 4c6a 9A81      		ldd r25,Y+2
 11079 4c6c 9C01      		movw r18,r24
 11080 4c6e 2E5F      		subi r18,-2
 11081 4c70 3F4F      		sbci r19,-1
 11082 4c72 3A83      		std Y+2,r19
 11083 4c74 2983      		std Y+1,r18
 11084 4c76 FC01      		movw r30,r24
 11085 4c78 8081      		ld r24,Z
 11086 4c7a 9181      		ldd r25,Z+1
 11087 4c7c 9A87      		std Y+10,r25
 11088 4c7e 8987      		std Y+9,r24
2983:lp_solve_5.5/colamd/colamd.c **** 		if (COL_IS_ALIVE (c))
 11089               		.loc 1 2983 0
 11090 4c80 2985      		ldd r18,Y+9
 11091 4c82 3A85      		ldd r19,Y+10
 11092 4c84 C901      		movw r24,r18
 11093 4c86 880F      		lsl r24
 11094 4c88 991F      		rol r25
 11095 4c8a 820F      		add r24,r18
 11096 4c8c 931F      		adc r25,r19
 11097 4c8e 880F      		lsl r24
 11098 4c90 991F      		rol r25
 11099 4c92 880F      		lsl r24
 11100 4c94 991F      		rol r25
 11101 4c96 9C01      		movw r18,r24
 11102 4c98 8B89      		ldd r24,Y+19
 11103 4c9a 9C89      		ldd r25,Y+20
 11104 4c9c 820F      		add r24,r18
 11105 4c9e 931F      		adc r25,r19
 11106 4ca0 FC01      		movw r30,r24
 11107 4ca2 8081      		ld r24,Z
 11108 4ca4 9181      		ldd r25,Z+1
 11109 4ca6 9923      		tst r25
 11110 4ca8 04F0      		brlt .L267
2984:lp_solve_5.5/colamd/colamd.c **** 		{
2985:lp_solve_5.5/colamd/colamd.c **** 		    *pdest++ = c ;
 11111               		.loc 1 2985 0
 11112 4caa 8B81      		ldd r24,Y+3
 11113 4cac 9C81      		ldd r25,Y+4
 11114 4cae 9C01      		movw r18,r24
 11115 4cb0 2E5F      		subi r18,-2
 11116 4cb2 3F4F      		sbci r19,-1
 11117 4cb4 3C83      		std Y+4,r19
 11118 4cb6 2B83      		std Y+3,r18
 11119 4cb8 2985      		ldd r18,Y+9
 11120 4cba 3A85      		ldd r19,Y+10
 11121 4cbc FC01      		movw r30,r24
 11122 4cbe 3183      		std Z+1,r19
 11123 4cc0 2083      		st Z,r18
 11124               	.L267:
2980:lp_solve_5.5/colamd/colamd.c **** 	    {
 11125               		.loc 1 2980 0 discriminator 2
 11126 4cc2 8D81      		ldd r24,Y+5
 11127 4cc4 9E81      		ldd r25,Y+6
 11128 4cc6 0196      		adiw r24,1
 11129 4cc8 9E83      		std Y+6,r25
 11130 4cca 8D83      		std Y+5,r24
 11131               	.L266:
2980:lp_solve_5.5/colamd/colamd.c **** 	    {
 11132               		.loc 1 2980 0 is_stmt 0 discriminator 1
 11133 4ccc 2D81      		ldd r18,Y+5
 11134 4cce 3E81      		ldd r19,Y+6
 11135 4cd0 8B85      		ldd r24,Y+11
 11136 4cd2 9C85      		ldd r25,Y+12
 11137 4cd4 2817      		cp r18,r24
 11138 4cd6 3907      		cpc r19,r25
 11139 4cd8 04F0      		brlt .L268
2986:lp_solve_5.5/colamd/colamd.c **** 		}
2987:lp_solve_5.5/colamd/colamd.c **** 	    }
2988:lp_solve_5.5/colamd/colamd.c **** 	    Row [r].length = (int) (pdest - &A [Row [r].start]) ;
 11140               		.loc 1 2988 0 is_stmt 1
 11141 4cda 8F81      		ldd r24,Y+7
 11142 4cdc 9885      		ldd r25,Y+8
 11143 4cde 880F      		lsl r24
 11144 4ce0 991F      		rol r25
 11145 4ce2 880F      		lsl r24
 11146 4ce4 991F      		rol r25
 11147 4ce6 880F      		lsl r24
 11148 4ce8 991F      		rol r25
 11149 4cea 2989      		ldd r18,Y+17
 11150 4cec 3A89      		ldd r19,Y+18
 11151 4cee 820F      		add r24,r18
 11152 4cf0 931F      		adc r25,r19
 11153 4cf2 2B81      		ldd r18,Y+3
 11154 4cf4 3C81      		ldd r19,Y+4
 11155 4cf6 4F81      		ldd r20,Y+7
 11156 4cf8 5885      		ldd r21,Y+8
 11157 4cfa 440F      		lsl r20
 11158 4cfc 551F      		rol r21
 11159 4cfe 440F      		lsl r20
 11160 4d00 551F      		rol r21
 11161 4d02 440F      		lsl r20
 11162 4d04 551F      		rol r21
 11163 4d06 6989      		ldd r22,Y+17
 11164 4d08 7A89      		ldd r23,Y+18
 11165 4d0a 460F      		add r20,r22
 11166 4d0c 571F      		adc r21,r23
 11167 4d0e FA01      		movw r30,r20
 11168 4d10 4081      		ld r20,Z
 11169 4d12 5181      		ldd r21,Z+1
 11170 4d14 440F      		lsl r20
 11171 4d16 551F      		rol r21
 11172 4d18 6D89      		ldd r22,Y+21
 11173 4d1a 7E89      		ldd r23,Y+22
 11174 4d1c 460F      		add r20,r22
 11175 4d1e 571F      		adc r21,r23
 11176 4d20 241B      		sub r18,r20
 11177 4d22 350B      		sbc r19,r21
 11178 4d24 3595      		asr r19
 11179 4d26 2795      		ror r18
 11180 4d28 FC01      		movw r30,r24
 11181 4d2a 3383      		std Z+3,r19
 11182 4d2c 2283      		std Z+2,r18
 11183               	.L265:
2963:lp_solve_5.5/colamd/colamd.c ****     {
 11184               		.loc 1 2963 0
 11185 4d2e 2981      		ldd r18,Y+1
 11186 4d30 3A81      		ldd r19,Y+2
 11187 4d32 8F89      		ldd r24,Y+23
 11188 4d34 988D      		ldd r25,Y+24
 11189 4d36 2817      		cp r18,r24
 11190 4d38 3907      		cpc r19,r25
 11191 4d3a 00F4      		brsh .+2
 11192 4d3c 00C0      		rjmp .L269
2989:lp_solve_5.5/colamd/colamd.c **** 
2990:lp_solve_5.5/colamd/colamd.c **** #ifndef NDEBUG
2991:lp_solve_5.5/colamd/colamd.c **** 	    debug_rows-- ;
2992:lp_solve_5.5/colamd/colamd.c **** #endif /* NDEBUG */
2993:lp_solve_5.5/colamd/colamd.c **** 
2994:lp_solve_5.5/colamd/colamd.c **** 	}
2995:lp_solve_5.5/colamd/colamd.c ****     }
2996:lp_solve_5.5/colamd/colamd.c ****     /* ensure we found all the rows */
2997:lp_solve_5.5/colamd/colamd.c ****     ASSERT (debug_rows == 0) ;
2998:lp_solve_5.5/colamd/colamd.c **** 
2999:lp_solve_5.5/colamd/colamd.c ****     /* === Return the new value of pfree ==================================== */
3000:lp_solve_5.5/colamd/colamd.c **** 
3001:lp_solve_5.5/colamd/colamd.c ****     return ((int) (pdest - &A [0])) ;
 11193               		.loc 1 3001 0
 11194 4d3e 2B81      		ldd r18,Y+3
 11195 4d40 3C81      		ldd r19,Y+4
 11196 4d42 8D89      		ldd r24,Y+21
 11197 4d44 9E89      		ldd r25,Y+22
 11198 4d46 A901      		movw r20,r18
 11199 4d48 481B      		sub r20,r24
 11200 4d4a 590B      		sbc r21,r25
 11201 4d4c CA01      		movw r24,r20
 11202 4d4e 9595      		asr r25
 11203 4d50 8795      		ror r24
 11204               	/* epilogue start */
3002:lp_solve_5.5/colamd/colamd.c **** }
 11205               		.loc 1 3002 0
 11206 4d52 6896      		adiw r28,24
 11207 4d54 0FB6      		in __tmp_reg__,__SREG__
 11208 4d56 F894      		cli
 11209 4d58 DEBF      		out __SP_H__,r29
 11210 4d5a 0FBE      		out __SREG__,__tmp_reg__
 11211 4d5c CDBF      		out __SP_L__,r28
 11212 4d5e DF91      		pop r29
 11213 4d60 CF91      		pop r28
 11214 4d62 1F91      		pop r17
 11215 4d64 0F91      		pop r16
 11216 4d66 FF90      		pop r15
 11217 4d68 EF90      		pop r14
 11218 4d6a 0895      		ret
 11219               		.cfi_endproc
 11220               	.LFE16:
 11223               	clear_mark:
 11224               	.LFB17:
3003:lp_solve_5.5/colamd/colamd.c **** 
3004:lp_solve_5.5/colamd/colamd.c **** 
3005:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
3006:lp_solve_5.5/colamd/colamd.c **** /* === clear_mark =========================================================== */
3007:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
3008:lp_solve_5.5/colamd/colamd.c **** 
3009:lp_solve_5.5/colamd/colamd.c **** /*
3010:lp_solve_5.5/colamd/colamd.c ****     Clears the Row [].shared2.mark array, and returns the new tag_mark.
3011:lp_solve_5.5/colamd/colamd.c ****     Return value is the new tag_mark.  Not user-callable.
3012:lp_solve_5.5/colamd/colamd.c **** */
3013:lp_solve_5.5/colamd/colamd.c **** 
3014:lp_solve_5.5/colamd/colamd.c **** PRIVATE int clear_mark	/* return the new value for tag_mark */
3015:lp_solve_5.5/colamd/colamd.c **** (
3016:lp_solve_5.5/colamd/colamd.c ****     /* === Parameters ======================================================= */
3017:lp_solve_5.5/colamd/colamd.c **** 
3018:lp_solve_5.5/colamd/colamd.c ****     int n_row,		/* number of rows in A */
3019:lp_solve_5.5/colamd/colamd.c ****     Colamd_Row Row []	/* Row [0 ... n_row-1].shared2.mark is set to zero */
3020:lp_solve_5.5/colamd/colamd.c **** )
3021:lp_solve_5.5/colamd/colamd.c **** {
 11225               		.loc 1 3021 0
 11226               		.cfi_startproc
 11227 4d6c CF93      		push r28
 11228               	.LCFI98:
 11229               		.cfi_def_cfa_offset 3
 11230               		.cfi_offset 28, -2
 11231 4d6e DF93      		push r29
 11232               	.LCFI99:
 11233               		.cfi_def_cfa_offset 4
 11234               		.cfi_offset 29, -3
 11235 4d70 00D0      		rcall .
 11236 4d72 00D0      		rcall .
 11237 4d74 00D0      		rcall .
 11238               	.LCFI100:
 11239               		.cfi_def_cfa_offset 10
 11240 4d76 CDB7      		in r28,__SP_L__
 11241 4d78 DEB7      		in r29,__SP_H__
 11242               	.LCFI101:
 11243               		.cfi_def_cfa_register 28
 11244               	/* prologue: function */
 11245               	/* frame size = 6 */
 11246               	/* stack size = 8 */
 11247               	.L__stack_usage = 8
 11248 4d7a 9C83      		std Y+4,r25
 11249 4d7c 8B83      		std Y+3,r24
 11250 4d7e 7E83      		std Y+6,r23
 11251 4d80 6D83      		std Y+5,r22
3022:lp_solve_5.5/colamd/colamd.c ****     /* === Local variables ================================================== */
3023:lp_solve_5.5/colamd/colamd.c **** 
3024:lp_solve_5.5/colamd/colamd.c ****     int r ;
3025:lp_solve_5.5/colamd/colamd.c **** 
3026:lp_solve_5.5/colamd/colamd.c ****     for (r = 0 ; r < n_row ; r++)
 11252               		.loc 1 3026 0
 11253 4d82 1A82      		std Y+2,__zero_reg__
 11254 4d84 1982      		std Y+1,__zero_reg__
 11255 4d86 00C0      		rjmp .L272
 11256               	.L274:
3027:lp_solve_5.5/colamd/colamd.c ****     {
3028:lp_solve_5.5/colamd/colamd.c **** 	if (ROW_IS_ALIVE (r))
 11257               		.loc 1 3028 0
 11258 4d88 8981      		ldd r24,Y+1
 11259 4d8a 9A81      		ldd r25,Y+2
 11260 4d8c 880F      		lsl r24
 11261 4d8e 991F      		rol r25
 11262 4d90 880F      		lsl r24
 11263 4d92 991F      		rol r25
 11264 4d94 880F      		lsl r24
 11265 4d96 991F      		rol r25
 11266 4d98 2D81      		ldd r18,Y+5
 11267 4d9a 3E81      		ldd r19,Y+6
 11268 4d9c 820F      		add r24,r18
 11269 4d9e 931F      		adc r25,r19
 11270 4da0 FC01      		movw r30,r24
 11271 4da2 8681      		ldd r24,Z+6
 11272 4da4 9781      		ldd r25,Z+7
 11273 4da6 9923      		tst r25
 11274 4da8 04F0      		brlt .L273
3029:lp_solve_5.5/colamd/colamd.c **** 	{
3030:lp_solve_5.5/colamd/colamd.c **** 	    Row [r].shared2.mark = 0 ;
 11275               		.loc 1 3030 0
 11276 4daa 8981      		ldd r24,Y+1
 11277 4dac 9A81      		ldd r25,Y+2
 11278 4dae 880F      		lsl r24
 11279 4db0 991F      		rol r25
 11280 4db2 880F      		lsl r24
 11281 4db4 991F      		rol r25
 11282 4db6 880F      		lsl r24
 11283 4db8 991F      		rol r25
 11284 4dba 2D81      		ldd r18,Y+5
 11285 4dbc 3E81      		ldd r19,Y+6
 11286 4dbe 820F      		add r24,r18
 11287 4dc0 931F      		adc r25,r19
 11288 4dc2 FC01      		movw r30,r24
 11289 4dc4 1782      		std Z+7,__zero_reg__
 11290 4dc6 1682      		std Z+6,__zero_reg__
 11291               	.L273:
3026:lp_solve_5.5/colamd/colamd.c ****     {
 11292               		.loc 1 3026 0 discriminator 2
 11293 4dc8 8981      		ldd r24,Y+1
 11294 4dca 9A81      		ldd r25,Y+2
 11295 4dcc 0196      		adiw r24,1
 11296 4dce 9A83      		std Y+2,r25
 11297 4dd0 8983      		std Y+1,r24
 11298               	.L272:
3026:lp_solve_5.5/colamd/colamd.c ****     {
 11299               		.loc 1 3026 0 is_stmt 0 discriminator 1
 11300 4dd2 2981      		ldd r18,Y+1
 11301 4dd4 3A81      		ldd r19,Y+2
 11302 4dd6 8B81      		ldd r24,Y+3
 11303 4dd8 9C81      		ldd r25,Y+4
 11304 4dda 2817      		cp r18,r24
 11305 4ddc 3907      		cpc r19,r25
 11306 4dde 04F0      		brlt .L274
3031:lp_solve_5.5/colamd/colamd.c **** 	}
3032:lp_solve_5.5/colamd/colamd.c ****     }
3033:lp_solve_5.5/colamd/colamd.c ****     return (1) ;
 11307               		.loc 1 3033 0 is_stmt 1
 11308 4de0 81E0      		ldi r24,lo8(1)
 11309 4de2 90E0      		ldi r25,0
 11310               	/* epilogue start */
3034:lp_solve_5.5/colamd/colamd.c **** }
 11311               		.loc 1 3034 0
 11312 4de4 2696      		adiw r28,6
 11313 4de6 0FB6      		in __tmp_reg__,__SREG__
 11314 4de8 F894      		cli
 11315 4dea DEBF      		out __SP_H__,r29
 11316 4dec 0FBE      		out __SREG__,__tmp_reg__
 11317 4dee CDBF      		out __SP_L__,r28
 11318 4df0 DF91      		pop r29
 11319 4df2 CF91      		pop r28
 11320 4df4 0895      		ret
 11321               		.cfi_endproc
 11322               	.LFE17:
 11324               		.section	.rodata
 11325               	.LC2:
 11326 000e 2573 3A20 		.string	"%s: No statistics available.\n"
 11326      4E6F 2073 
 11326      7461 7469 
 11326      7374 6963 
 11326      7320 6176 
 11327               	.LC3:
 11328 002c 2573 3A20 		.string	"%s: OK.  "
 11328      4F4B 2E20 
 11328      2000 
 11329               	.LC4:
 11330 0036 2573 3A20 		.string	"%s: ERROR.  "
 11330      4552 524F 
 11330      522E 2020 
 11330      00
 11331               	.LC5:
 11332 0043 4D61 7472 		.string	"Matrix has unsorted or duplicate row indices."
 11332      6978 2068 
 11332      6173 2075 
 11332      6E73 6F72 
 11332      7465 6420 
 11333               	.LC6:
 11334 0071 2573 3A20 		.string	"%s: number of duplicate or out-of-order row indices: %d\n"
 11334      6E75 6D62 
 11334      6572 206F 
 11334      6620 6475 
 11334      706C 6963 
 11335               	.LC7:
 11336 00aa 2573 3A20 		.string	"%s: last seen duplicate or out-of-order row index:   %d\n"
 11336      6C61 7374 
 11336      2073 6565 
 11336      6E20 6475 
 11336      706C 6963 
 11337               	.LC8:
 11338 00e3 2573 3A20 		.string	"%s: last seen in column:                             %d"
 11338      6C61 7374 
 11338      2073 6565 
 11338      6E20 696E 
 11338      2063 6F6C 
 11339               	.LC9:
 11340 011b 2573 3A20 		.string	"%s: number of dense or empty rows ignored:           %d\n"
 11340      6E75 6D62 
 11340      6572 206F 
 11340      6620 6465 
 11340      6E73 6520 
 11341               	.LC10:
 11342 0154 2573 3A20 		.string	"%s: number of dense or empty columns ignored:        %d\n"
 11342      6E75 6D62 
 11342      6572 206F 
 11342      6620 6465 
 11342      6E73 6520 
 11343               	.LC11:
 11344 018d 2573 3A20 		.string	"%s: number of garbage collections performed:         %d\n"
 11344      6E75 6D62 
 11344      6572 206F 
 11344      6620 6761 
 11344      7262 6167 
 11345               	.LC12:
 11346 01c6 4172 7261 		.string	"Array A (row indices of matrix) not present."
 11346      7920 4120 
 11346      2872 6F77 
 11346      2069 6E64 
 11346      6963 6573 
 11347               	.LC13:
 11348 01f3 4172 7261 		.string	"Array p (column pointers for matrix) not present."
 11348      7920 7020 
 11348      2863 6F6C 
 11348      756D 6E20 
 11348      706F 696E 
 11349               	.LC14:
 11350 0225 496E 7661 		.string	"Invalid number of rows (%d).\n"
 11350      6C69 6420 
 11350      6E75 6D62 
 11350      6572 206F 
 11350      6620 726F 
 11351               	.LC15:
 11352 0243 496E 7661 		.string	"Invalid number of columns (%d).\n"
 11352      6C69 6420 
 11352      6E75 6D62 
 11352      6572 206F 
 11352      6620 636F 
 11353               	.LC16:
 11354 0264 496E 7661 		.string	"Invalid number of nonzero entries (%d).\n"
 11354      6C69 6420 
 11354      6E75 6D62 
 11354      6572 206F 
 11354      6620 6E6F 
 11355               	.LC17:
 11356 028d 496E 7661 		.string	"Invalid column pointer, p [0] = %d, must be zero.\n"
 11356      6C69 6420 
 11356      636F 6C75 
 11356      6D6E 2070 
 11356      6F69 6E74 
 11357               	.LC18:
 11358 02c0 4172 7261 		.string	"Array A too small."
 11358      7920 4120 
 11358      746F 6F20 
 11358      736D 616C 
 11358      6C2E 00
 11359               	.LC19:
 11360 02d3 2020 2020 		.string	"        Need Alen >= %d, but given only Alen = %d.\n"
 11360      2020 2020 
 11360      4E65 6564 
 11360      2041 6C65 
 11360      6E20 3E3D 
 11361               	.LC20:
 11362 0307 436F 6C75 		.string	"Column %d has a negative number of nonzero entries (%d).\n"
 11362      6D6E 2025 
 11362      6420 6861 
 11362      7320 6120 
 11362      6E65 6761 
 11363               	.LC21:
 11364 0341 526F 7720 		.string	"Row index (row %d) out of bounds (%d to %d) in column %d.\n"
 11364      696E 6465 
 11364      7820 2872 
 11364      6F77 2025 
 11364      6429 206F 
 11365               	.LC22:
 11366 037c 4F75 7420 		.string	"Out of memory."
 11366      6F66 206D 
 11366      656D 6F72 
 11366      792E 00
 11367               	.LC23:
 11368 038b 496E 7465 		.string	"Internal error! Please contact authors (davis@cise.ufl.edu)."
 11368      726E 616C 
 11368      2065 7272 
 11368      6F72 2120 
 11368      506C 6561 
 11369               		.text
 11371               	print_report:
 11372               	.LFB18:
3035:lp_solve_5.5/colamd/colamd.c **** 
3036:lp_solve_5.5/colamd/colamd.c **** 
3037:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
3038:lp_solve_5.5/colamd/colamd.c **** /* === print_report ========================================================= */
3039:lp_solve_5.5/colamd/colamd.c **** /* ========================================================================== */
3040:lp_solve_5.5/colamd/colamd.c **** 
3041:lp_solve_5.5/colamd/colamd.c **** PRIVATE void print_report
3042:lp_solve_5.5/colamd/colamd.c **** (
3043:lp_solve_5.5/colamd/colamd.c ****     char *method,
3044:lp_solve_5.5/colamd/colamd.c ****     int stats [COLAMD_STATS]
3045:lp_solve_5.5/colamd/colamd.c **** )
3046:lp_solve_5.5/colamd/colamd.c **** {
 11373               		.loc 1 3046 0
 11374               		.cfi_startproc
 11375 4df6 CF93      		push r28
 11376               	.LCFI102:
 11377               		.cfi_def_cfa_offset 3
 11378               		.cfi_offset 28, -2
 11379 4df8 DF93      		push r29
 11380               	.LCFI103:
 11381               		.cfi_def_cfa_offset 4
 11382               		.cfi_offset 29, -3
 11383 4dfa CDB7      		in r28,__SP_L__
 11384 4dfc DEB7      		in r29,__SP_H__
 11385               	.LCFI104:
 11386               		.cfi_def_cfa_register 28
 11387 4dfe 2A97      		sbiw r28,10
 11388               	.LCFI105:
 11389               		.cfi_def_cfa_offset 14
 11390 4e00 0FB6      		in __tmp_reg__,__SREG__
 11391 4e02 F894      		cli
 11392 4e04 DEBF      		out __SP_H__,r29
 11393 4e06 0FBE      		out __SREG__,__tmp_reg__
 11394 4e08 CDBF      		out __SP_L__,r28
 11395               	/* prologue: function */
 11396               	/* frame size = 10 */
 11397               	/* stack size = 12 */
 11398               	.L__stack_usage = 12
 11399 4e0a 9887      		std Y+8,r25
 11400 4e0c 8F83      		std Y+7,r24
 11401 4e0e 7A87      		std Y+10,r23
 11402 4e10 6987      		std Y+9,r22
3047:lp_solve_5.5/colamd/colamd.c **** 
3048:lp_solve_5.5/colamd/colamd.c ****     int i1, i2, i3 ;
3049:lp_solve_5.5/colamd/colamd.c **** 
3050:lp_solve_5.5/colamd/colamd.c ****     if (!stats)
 11403               		.loc 1 3050 0
 11404 4e12 8985      		ldd r24,Y+9
 11405 4e14 9A85      		ldd r25,Y+10
 11406 4e16 892B      		or r24,r25
 11407 4e18 01F4      		brne .L277
3051:lp_solve_5.5/colamd/colamd.c ****     {
3052:lp_solve_5.5/colamd/colamd.c ****     	PRINTF ("%s: No statistics available.\n", method) ;
 11408               		.loc 1 3052 0
 11409 4e1a 8885      		ldd r24,Y+8
 11410 4e1c 8F93      		push r24
 11411 4e1e 8F81      		ldd r24,Y+7
 11412 4e20 8F93      		push r24
 11413 4e22 80E0      		ldi r24,lo8(.LC2)
 11414 4e24 90E0      		ldi r25,hi8(.LC2)
 11415 4e26 892F      		mov r24,r25
 11416 4e28 8F93      		push r24
 11417 4e2a 80E0      		ldi r24,lo8(.LC2)
 11418 4e2c 90E0      		ldi r25,hi8(.LC2)
 11419 4e2e 8F93      		push r24
 11420 4e30 0E94 0000 		call printf
 11421 4e34 0F90      		pop __tmp_reg__
 11422 4e36 0F90      		pop __tmp_reg__
 11423 4e38 0F90      		pop __tmp_reg__
 11424 4e3a 0F90      		pop __tmp_reg__
3053:lp_solve_5.5/colamd/colamd.c **** 	return ;
 11425               		.loc 1 3053 0
 11426 4e3c 00C0      		rjmp .L276
 11427               	.L277:
3054:lp_solve_5.5/colamd/colamd.c ****     }
3055:lp_solve_5.5/colamd/colamd.c **** 
3056:lp_solve_5.5/colamd/colamd.c ****     i1 = stats [COLAMD_INFO1] ;
 11428               		.loc 1 3056 0
 11429 4e3e 8985      		ldd r24,Y+9
 11430 4e40 9A85      		ldd r25,Y+10
 11431 4e42 FC01      		movw r30,r24
 11432 4e44 8085      		ldd r24,Z+8
 11433 4e46 9185      		ldd r25,Z+9
 11434 4e48 9A83      		std Y+2,r25
 11435 4e4a 8983      		std Y+1,r24
3057:lp_solve_5.5/colamd/colamd.c ****     i2 = stats [COLAMD_INFO2] ;
 11436               		.loc 1 3057 0
 11437 4e4c 8985      		ldd r24,Y+9
 11438 4e4e 9A85      		ldd r25,Y+10
 11439 4e50 FC01      		movw r30,r24
 11440 4e52 8285      		ldd r24,Z+10
 11441 4e54 9385      		ldd r25,Z+11
 11442 4e56 9C83      		std Y+4,r25
 11443 4e58 8B83      		std Y+3,r24
3058:lp_solve_5.5/colamd/colamd.c ****     i3 = stats [COLAMD_INFO3] ;
 11444               		.loc 1 3058 0
 11445 4e5a 8985      		ldd r24,Y+9
 11446 4e5c 9A85      		ldd r25,Y+10
 11447 4e5e FC01      		movw r30,r24
 11448 4e60 8485      		ldd r24,Z+12
 11449 4e62 9585      		ldd r25,Z+13
 11450 4e64 9E83      		std Y+6,r25
 11451 4e66 8D83      		std Y+5,r24
3059:lp_solve_5.5/colamd/colamd.c **** 
3060:lp_solve_5.5/colamd/colamd.c ****     if (stats [COLAMD_STATUS] >= 0)
 11452               		.loc 1 3060 0
 11453 4e68 8985      		ldd r24,Y+9
 11454 4e6a 9A85      		ldd r25,Y+10
 11455 4e6c 0696      		adiw r24,6
 11456 4e6e FC01      		movw r30,r24
 11457 4e70 8081      		ld r24,Z
 11458 4e72 9181      		ldd r25,Z+1
 11459 4e74 9923      		tst r25
 11460 4e76 04F0      		brlt .L279
3061:lp_solve_5.5/colamd/colamd.c ****     {
3062:lp_solve_5.5/colamd/colamd.c ****     	PRINTF ("%s: OK.  ", method) ;
 11461               		.loc 1 3062 0
 11462 4e78 8885      		ldd r24,Y+8
 11463 4e7a 8F93      		push r24
 11464 4e7c 8F81      		ldd r24,Y+7
 11465 4e7e 8F93      		push r24
 11466 4e80 80E0      		ldi r24,lo8(.LC3)
 11467 4e82 90E0      		ldi r25,hi8(.LC3)
 11468 4e84 892F      		mov r24,r25
 11469 4e86 8F93      		push r24
 11470 4e88 80E0      		ldi r24,lo8(.LC3)
 11471 4e8a 90E0      		ldi r25,hi8(.LC3)
 11472 4e8c 8F93      		push r24
 11473 4e8e 0E94 0000 		call printf
 11474 4e92 0F90      		pop __tmp_reg__
 11475 4e94 0F90      		pop __tmp_reg__
 11476 4e96 0F90      		pop __tmp_reg__
 11477 4e98 0F90      		pop __tmp_reg__
 11478 4e9a 00C0      		rjmp .L280
 11479               	.L279:
3063:lp_solve_5.5/colamd/colamd.c ****     }
3064:lp_solve_5.5/colamd/colamd.c ****     else
3065:lp_solve_5.5/colamd/colamd.c ****     {
3066:lp_solve_5.5/colamd/colamd.c ****     	PRINTF ("%s: ERROR.  ", method) ;
 11480               		.loc 1 3066 0
 11481 4e9c 8885      		ldd r24,Y+8
 11482 4e9e 8F93      		push r24
 11483 4ea0 8F81      		ldd r24,Y+7
 11484 4ea2 8F93      		push r24
 11485 4ea4 80E0      		ldi r24,lo8(.LC4)
 11486 4ea6 90E0      		ldi r25,hi8(.LC4)
 11487 4ea8 892F      		mov r24,r25
 11488 4eaa 8F93      		push r24
 11489 4eac 80E0      		ldi r24,lo8(.LC4)
 11490 4eae 90E0      		ldi r25,hi8(.LC4)
 11491 4eb0 8F93      		push r24
 11492 4eb2 0E94 0000 		call printf
 11493 4eb6 0F90      		pop __tmp_reg__
 11494 4eb8 0F90      		pop __tmp_reg__
 11495 4eba 0F90      		pop __tmp_reg__
 11496 4ebc 0F90      		pop __tmp_reg__
 11497               	.L280:
3067:lp_solve_5.5/colamd/colamd.c ****     }
3068:lp_solve_5.5/colamd/colamd.c **** 
3069:lp_solve_5.5/colamd/colamd.c ****     switch (stats [COLAMD_STATUS])
 11498               		.loc 1 3069 0
 11499 4ebe 8985      		ldd r24,Y+9
 11500 4ec0 9A85      		ldd r25,Y+10
 11501 4ec2 0696      		adiw r24,6
 11502 4ec4 FC01      		movw r30,r24
 11503 4ec6 8081      		ld r24,Z
 11504 4ec8 9181      		ldd r25,Z+1
 11505 4eca 8B3F      		cpi r24,-5
 11506 4ecc FFEF      		ldi r31,-1
 11507 4ece 9F07      		cpc r25,r31
 11508 4ed0 01F4      		brne .+2
 11509 4ed2 00C0      		rjmp .L281
 11510 4ed4 8C3F      		cpi r24,-4
 11511 4ed6 2FEF      		ldi r18,-1
 11512 4ed8 9207      		cpc r25,r18
 11513 4eda 04F4      		brge .L282
 11514 4edc 873F      		cpi r24,-9
 11515 4ede EFEF      		ldi r30,-1
 11516 4ee0 9E07      		cpc r25,r30
 11517 4ee2 01F4      		brne .+2
 11518 4ee4 00C0      		rjmp .L283
 11519 4ee6 883F      		cpi r24,-8
 11520 4ee8 FFEF      		ldi r31,-1
 11521 4eea 9F07      		cpc r25,r31
 11522 4eec 04F4      		brge .L284
 11523 4eee 8931      		cpi r24,25
 11524 4ef0 2CEF      		ldi r18,-4
 11525 4ef2 9207      		cpc r25,r18
 11526 4ef4 01F4      		brne .+2
 11527 4ef6 00C0      		rjmp .L285
 11528 4ef8 0A96      		adiw r24,10
 11529 4efa 01F4      		brne .+2
 11530 4efc 00C0      		rjmp .L286
 11531 4efe 00C0      		rjmp .L276
 11532               	.L284:
 11533 4f00 893F      		cpi r24,-7
 11534 4f02 FFEF      		ldi r31,-1
 11535 4f04 9F07      		cpc r25,r31
 11536 4f06 01F4      		brne .+2
 11537 4f08 00C0      		rjmp .L287
 11538 4f0a 8A3F      		cpi r24,-6
 11539 4f0c 9F4F      		sbci r25,-1
 11540 4f0e 04F0      		brlt .+2
 11541 4f10 00C0      		rjmp .L288
 11542 4f12 00C0      		rjmp .L297
 11543               	.L282:
 11544 4f14 8E3F      		cpi r24,-2
 11545 4f16 EFEF      		ldi r30,-1
 11546 4f18 9E07      		cpc r25,r30
 11547 4f1a 01F4      		brne .+2
 11548 4f1c 00C0      		rjmp .L290
 11549 4f1e 8F3F      		cpi r24,-1
 11550 4f20 FFEF      		ldi r31,-1
 11551 4f22 9F07      		cpc r25,r31
 11552 4f24 04F4      		brge .L291
 11553 4f26 8C3F      		cpi r24,-4
 11554 4f28 2FEF      		ldi r18,-1
 11555 4f2a 9207      		cpc r25,r18
 11556 4f2c 01F4      		brne .+2
 11557 4f2e 00C0      		rjmp .L292
 11558 4f30 0396      		adiw r24,3
 11559 4f32 01F4      		brne .+2
 11560 4f34 00C0      		rjmp .L293
 11561 4f36 00C0      		rjmp .L276
 11562               	.L291:
 11563 4f38 0097      		sbiw r24,0
 11564 4f3a 01F4      		brne .+2
 11565 4f3c 00C0      		rjmp .L294
 11566 4f3e 9923      		tst r25
 11567 4f40 04F4      		brge .+2
 11568 4f42 00C0      		rjmp .L295
 11569 4f44 0197      		sbiw r24,1
 11570 4f46 01F0      		breq .+2
 11571 4f48 00C0      		rjmp .L276
3070:lp_solve_5.5/colamd/colamd.c ****     {
3071:lp_solve_5.5/colamd/colamd.c **** 
3072:lp_solve_5.5/colamd/colamd.c **** 	case COLAMD_OK_BUT_JUMBLED:
3073:lp_solve_5.5/colamd/colamd.c **** 
3074:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF ("Matrix has unsorted or duplicate row indices.\n") ;
 11572               		.loc 1 3074 0
 11573 4f4a 80E0      		ldi r24,lo8(.LC5)
 11574 4f4c 90E0      		ldi r25,hi8(.LC5)
 11575 4f4e 0E94 0000 		call puts
3075:lp_solve_5.5/colamd/colamd.c **** 
3076:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF ("%s: number of duplicate or out-of-order row indices: %d\n",
 11576               		.loc 1 3076 0
 11577 4f52 8E81      		ldd r24,Y+6
 11578 4f54 8F93      		push r24
 11579 4f56 8D81      		ldd r24,Y+5
 11580 4f58 8F93      		push r24
 11581 4f5a 8885      		ldd r24,Y+8
 11582 4f5c 8F93      		push r24
 11583 4f5e 8F81      		ldd r24,Y+7
 11584 4f60 8F93      		push r24
 11585 4f62 80E0      		ldi r24,lo8(.LC6)
 11586 4f64 90E0      		ldi r25,hi8(.LC6)
 11587 4f66 892F      		mov r24,r25
 11588 4f68 8F93      		push r24
 11589 4f6a 80E0      		ldi r24,lo8(.LC6)
 11590 4f6c 90E0      		ldi r25,hi8(.LC6)
 11591 4f6e 8F93      		push r24
 11592 4f70 0E94 0000 		call printf
 11593 4f74 0F90      		pop __tmp_reg__
 11594 4f76 0F90      		pop __tmp_reg__
 11595 4f78 0F90      		pop __tmp_reg__
 11596 4f7a 0F90      		pop __tmp_reg__
 11597 4f7c 0F90      		pop __tmp_reg__
 11598 4f7e 0F90      		pop __tmp_reg__
3077:lp_solve_5.5/colamd/colamd.c **** 	    method, i3) ;
3078:lp_solve_5.5/colamd/colamd.c **** 
3079:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF ("%s: last seen duplicate or out-of-order row index:   %d\n",
 11599               		.loc 1 3079 0
 11600 4f80 8C81      		ldd r24,Y+4
 11601 4f82 8F93      		push r24
 11602 4f84 8B81      		ldd r24,Y+3
 11603 4f86 8F93      		push r24
 11604 4f88 8885      		ldd r24,Y+8
 11605 4f8a 8F93      		push r24
 11606 4f8c 8F81      		ldd r24,Y+7
 11607 4f8e 8F93      		push r24
 11608 4f90 80E0      		ldi r24,lo8(.LC7)
 11609 4f92 90E0      		ldi r25,hi8(.LC7)
 11610 4f94 892F      		mov r24,r25
 11611 4f96 8F93      		push r24
 11612 4f98 80E0      		ldi r24,lo8(.LC7)
 11613 4f9a 90E0      		ldi r25,hi8(.LC7)
 11614 4f9c 8F93      		push r24
 11615 4f9e 0E94 0000 		call printf
 11616 4fa2 0F90      		pop __tmp_reg__
 11617 4fa4 0F90      		pop __tmp_reg__
 11618 4fa6 0F90      		pop __tmp_reg__
 11619 4fa8 0F90      		pop __tmp_reg__
 11620 4faa 0F90      		pop __tmp_reg__
 11621 4fac 0F90      		pop __tmp_reg__
3080:lp_solve_5.5/colamd/colamd.c **** 	    method, INDEX (i2)) ;
3081:lp_solve_5.5/colamd/colamd.c **** 
3082:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF ("%s: last seen in column:                             %d",
 11622               		.loc 1 3082 0
 11623 4fae 8A81      		ldd r24,Y+2
 11624 4fb0 8F93      		push r24
 11625 4fb2 8981      		ldd r24,Y+1
 11626 4fb4 8F93      		push r24
 11627 4fb6 8885      		ldd r24,Y+8
 11628 4fb8 8F93      		push r24
 11629 4fba 8F81      		ldd r24,Y+7
 11630 4fbc 8F93      		push r24
 11631 4fbe 80E0      		ldi r24,lo8(.LC8)
 11632 4fc0 90E0      		ldi r25,hi8(.LC8)
 11633 4fc2 892F      		mov r24,r25
 11634 4fc4 8F93      		push r24
 11635 4fc6 80E0      		ldi r24,lo8(.LC8)
 11636 4fc8 90E0      		ldi r25,hi8(.LC8)
 11637 4fca 8F93      		push r24
 11638 4fcc 0E94 0000 		call printf
 11639 4fd0 0F90      		pop __tmp_reg__
 11640 4fd2 0F90      		pop __tmp_reg__
 11641 4fd4 0F90      		pop __tmp_reg__
 11642 4fd6 0F90      		pop __tmp_reg__
 11643 4fd8 0F90      		pop __tmp_reg__
 11644 4fda 0F90      		pop __tmp_reg__
 11645               	.L294:
3083:lp_solve_5.5/colamd/colamd.c **** 	    method, INDEX (i1)) ;
3084:lp_solve_5.5/colamd/colamd.c **** 
3085:lp_solve_5.5/colamd/colamd.c **** 	    /* no break - fall through to next case instead */
3086:lp_solve_5.5/colamd/colamd.c **** 
3087:lp_solve_5.5/colamd/colamd.c **** 	case COLAMD_OK:
3088:lp_solve_5.5/colamd/colamd.c **** 
3089:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF ("\n") ;
 11646               		.loc 1 3089 0
 11647 4fdc 8AE0      		ldi r24,lo8(10)
 11648 4fde 90E0      		ldi r25,0
 11649 4fe0 0E94 0000 		call putchar
3090:lp_solve_5.5/colamd/colamd.c **** 
3091:lp_solve_5.5/colamd/colamd.c ****  	    PRINTF ("%s: number of dense or empty rows ignored:           %d\n",
 11650               		.loc 1 3091 0
 11651 4fe4 8985      		ldd r24,Y+9
 11652 4fe6 9A85      		ldd r25,Y+10
 11653 4fe8 FC01      		movw r30,r24
 11654 4fea 8081      		ld r24,Z
 11655 4fec 9181      		ldd r25,Z+1
 11656 4fee 292F      		mov r18,r25
 11657 4ff0 2F93      		push r18
 11658 4ff2 8F93      		push r24
 11659 4ff4 8885      		ldd r24,Y+8
 11660 4ff6 8F93      		push r24
 11661 4ff8 8F81      		ldd r24,Y+7
 11662 4ffa 8F93      		push r24
 11663 4ffc 80E0      		ldi r24,lo8(.LC9)
 11664 4ffe 90E0      		ldi r25,hi8(.LC9)
 11665 5000 892F      		mov r24,r25
 11666 5002 8F93      		push r24
 11667 5004 80E0      		ldi r24,lo8(.LC9)
 11668 5006 90E0      		ldi r25,hi8(.LC9)
 11669 5008 8F93      		push r24
 11670 500a 0E94 0000 		call printf
 11671 500e 0F90      		pop __tmp_reg__
 11672 5010 0F90      		pop __tmp_reg__
 11673 5012 0F90      		pop __tmp_reg__
 11674 5014 0F90      		pop __tmp_reg__
 11675 5016 0F90      		pop __tmp_reg__
 11676 5018 0F90      		pop __tmp_reg__
3092:lp_solve_5.5/colamd/colamd.c **** 	    method, stats [COLAMD_DENSE_ROW]) ;
3093:lp_solve_5.5/colamd/colamd.c **** 
3094:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF ("%s: number of dense or empty columns ignored:        %d\n",
3095:lp_solve_5.5/colamd/colamd.c **** 	    method, stats [COLAMD_DENSE_COL]) ;
 11677               		.loc 1 3095 0
 11678 501a 8985      		ldd r24,Y+9
 11679 501c 9A85      		ldd r25,Y+10
 11680 501e 0296      		adiw r24,2
3094:lp_solve_5.5/colamd/colamd.c **** 	    method, stats [COLAMD_DENSE_COL]) ;
 11681               		.loc 1 3094 0
 11682 5020 FC01      		movw r30,r24
 11683 5022 8081      		ld r24,Z
 11684 5024 9181      		ldd r25,Z+1
 11685 5026 292F      		mov r18,r25
 11686 5028 2F93      		push r18
 11687 502a 8F93      		push r24
 11688 502c 8885      		ldd r24,Y+8
 11689 502e 8F93      		push r24
 11690 5030 8F81      		ldd r24,Y+7
 11691 5032 8F93      		push r24
 11692 5034 80E0      		ldi r24,lo8(.LC10)
 11693 5036 90E0      		ldi r25,hi8(.LC10)
 11694 5038 892F      		mov r24,r25
 11695 503a 8F93      		push r24
 11696 503c 80E0      		ldi r24,lo8(.LC10)
 11697 503e 90E0      		ldi r25,hi8(.LC10)
 11698 5040 8F93      		push r24
 11699 5042 0E94 0000 		call printf
 11700 5046 0F90      		pop __tmp_reg__
 11701 5048 0F90      		pop __tmp_reg__
 11702 504a 0F90      		pop __tmp_reg__
 11703 504c 0F90      		pop __tmp_reg__
 11704 504e 0F90      		pop __tmp_reg__
 11705 5050 0F90      		pop __tmp_reg__
3096:lp_solve_5.5/colamd/colamd.c **** 
3097:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF ("%s: number of garbage collections performed:         %d\n",
3098:lp_solve_5.5/colamd/colamd.c **** 	    method, stats [COLAMD_DEFRAG_COUNT]) ;
 11706               		.loc 1 3098 0
 11707 5052 8985      		ldd r24,Y+9
 11708 5054 9A85      		ldd r25,Y+10
 11709 5056 0496      		adiw r24,4
3097:lp_solve_5.5/colamd/colamd.c **** 	    method, stats [COLAMD_DEFRAG_COUNT]) ;
 11710               		.loc 1 3097 0
 11711 5058 FC01      		movw r30,r24
 11712 505a 8081      		ld r24,Z
 11713 505c 9181      		ldd r25,Z+1
 11714 505e 292F      		mov r18,r25
 11715 5060 2F93      		push r18
 11716 5062 8F93      		push r24
 11717 5064 8885      		ldd r24,Y+8
 11718 5066 8F93      		push r24
 11719 5068 8F81      		ldd r24,Y+7
 11720 506a 8F93      		push r24
 11721 506c 80E0      		ldi r24,lo8(.LC11)
 11722 506e 90E0      		ldi r25,hi8(.LC11)
 11723 5070 892F      		mov r24,r25
 11724 5072 8F93      		push r24
 11725 5074 80E0      		ldi r24,lo8(.LC11)
 11726 5076 90E0      		ldi r25,hi8(.LC11)
 11727 5078 8F93      		push r24
 11728 507a 0E94 0000 		call printf
 11729 507e 0F90      		pop __tmp_reg__
 11730 5080 0F90      		pop __tmp_reg__
 11731 5082 0F90      		pop __tmp_reg__
 11732 5084 0F90      		pop __tmp_reg__
 11733 5086 0F90      		pop __tmp_reg__
 11734 5088 0F90      		pop __tmp_reg__
3099:lp_solve_5.5/colamd/colamd.c **** 	    break ;
 11735               		.loc 1 3099 0
 11736 508a 00C0      		rjmp .L276
 11737               	.L295:
3100:lp_solve_5.5/colamd/colamd.c **** 
3101:lp_solve_5.5/colamd/colamd.c **** 	case COLAMD_ERROR_A_not_present:
3102:lp_solve_5.5/colamd/colamd.c **** 
3103:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF ("Array A (row indices of matrix) not present.\n") ;
 11738               		.loc 1 3103 0
 11739 508c 80E0      		ldi r24,lo8(.LC12)
 11740 508e 90E0      		ldi r25,hi8(.LC12)
 11741 5090 0E94 0000 		call puts
3104:lp_solve_5.5/colamd/colamd.c **** 	    break ;
 11742               		.loc 1 3104 0
 11743 5094 00C0      		rjmp .L276
 11744               	.L290:
3105:lp_solve_5.5/colamd/colamd.c **** 
3106:lp_solve_5.5/colamd/colamd.c **** 	case COLAMD_ERROR_p_not_present:
3107:lp_solve_5.5/colamd/colamd.c **** 
3108:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF ("Array p (column pointers for matrix) not present.\n") ;
 11745               		.loc 1 3108 0
 11746 5096 80E0      		ldi r24,lo8(.LC13)
 11747 5098 90E0      		ldi r25,hi8(.LC13)
 11748 509a 0E94 0000 		call puts
3109:lp_solve_5.5/colamd/colamd.c **** 	    break ;
 11749               		.loc 1 3109 0
 11750 509e 00C0      		rjmp .L276
 11751               	.L293:
3110:lp_solve_5.5/colamd/colamd.c **** 
3111:lp_solve_5.5/colamd/colamd.c **** 	case COLAMD_ERROR_nrow_negative:
3112:lp_solve_5.5/colamd/colamd.c **** 
3113:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF ("Invalid number of rows (%d).\n", i1) ;
 11752               		.loc 1 3113 0
 11753 50a0 8A81      		ldd r24,Y+2
 11754 50a2 8F93      		push r24
 11755 50a4 8981      		ldd r24,Y+1
 11756 50a6 8F93      		push r24
 11757 50a8 80E0      		ldi r24,lo8(.LC14)
 11758 50aa 90E0      		ldi r25,hi8(.LC14)
 11759 50ac 892F      		mov r24,r25
 11760 50ae 8F93      		push r24
 11761 50b0 80E0      		ldi r24,lo8(.LC14)
 11762 50b2 90E0      		ldi r25,hi8(.LC14)
 11763 50b4 8F93      		push r24
 11764 50b6 0E94 0000 		call printf
 11765 50ba 0F90      		pop __tmp_reg__
 11766 50bc 0F90      		pop __tmp_reg__
 11767 50be 0F90      		pop __tmp_reg__
 11768 50c0 0F90      		pop __tmp_reg__
3114:lp_solve_5.5/colamd/colamd.c **** 	    break ;
 11769               		.loc 1 3114 0
 11770 50c2 00C0      		rjmp .L276
 11771               	.L292:
3115:lp_solve_5.5/colamd/colamd.c **** 
3116:lp_solve_5.5/colamd/colamd.c **** 	case COLAMD_ERROR_ncol_negative:
3117:lp_solve_5.5/colamd/colamd.c **** 
3118:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF ("Invalid number of columns (%d).\n", i1) ;
 11772               		.loc 1 3118 0
 11773 50c4 8A81      		ldd r24,Y+2
 11774 50c6 8F93      		push r24
 11775 50c8 8981      		ldd r24,Y+1
 11776 50ca 8F93      		push r24
 11777 50cc 80E0      		ldi r24,lo8(.LC15)
 11778 50ce 90E0      		ldi r25,hi8(.LC15)
 11779 50d0 892F      		mov r24,r25
 11780 50d2 8F93      		push r24
 11781 50d4 80E0      		ldi r24,lo8(.LC15)
 11782 50d6 90E0      		ldi r25,hi8(.LC15)
 11783 50d8 8F93      		push r24
 11784 50da 0E94 0000 		call printf
 11785 50de 0F90      		pop __tmp_reg__
 11786 50e0 0F90      		pop __tmp_reg__
 11787 50e2 0F90      		pop __tmp_reg__
 11788 50e4 0F90      		pop __tmp_reg__
3119:lp_solve_5.5/colamd/colamd.c **** 	    break ;
 11789               		.loc 1 3119 0
 11790 50e6 00C0      		rjmp .L276
 11791               	.L281:
3120:lp_solve_5.5/colamd/colamd.c **** 
3121:lp_solve_5.5/colamd/colamd.c **** 	case COLAMD_ERROR_nnz_negative:
3122:lp_solve_5.5/colamd/colamd.c **** 
3123:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF ("Invalid number of nonzero entries (%d).\n", i1) ;
 11792               		.loc 1 3123 0
 11793 50e8 8A81      		ldd r24,Y+2
 11794 50ea 8F93      		push r24
 11795 50ec 8981      		ldd r24,Y+1
 11796 50ee 8F93      		push r24
 11797 50f0 80E0      		ldi r24,lo8(.LC16)
 11798 50f2 90E0      		ldi r25,hi8(.LC16)
 11799 50f4 892F      		mov r24,r25
 11800 50f6 8F93      		push r24
 11801 50f8 80E0      		ldi r24,lo8(.LC16)
 11802 50fa 90E0      		ldi r25,hi8(.LC16)
 11803 50fc 8F93      		push r24
 11804 50fe 0E94 0000 		call printf
 11805 5102 0F90      		pop __tmp_reg__
 11806 5104 0F90      		pop __tmp_reg__
 11807 5106 0F90      		pop __tmp_reg__
 11808 5108 0F90      		pop __tmp_reg__
3124:lp_solve_5.5/colamd/colamd.c **** 	    break ;
 11809               		.loc 1 3124 0
 11810 510a 00C0      		rjmp .L276
 11811               	.L288:
3125:lp_solve_5.5/colamd/colamd.c **** 
3126:lp_solve_5.5/colamd/colamd.c **** 	case COLAMD_ERROR_p0_nonzero:
3127:lp_solve_5.5/colamd/colamd.c **** 
3128:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF ("Invalid column pointer, p [0] = %d, must be zero.\n", i1) ;
 11812               		.loc 1 3128 0
 11813 510c 8A81      		ldd r24,Y+2
 11814 510e 8F93      		push r24
 11815 5110 8981      		ldd r24,Y+1
 11816 5112 8F93      		push r24
 11817 5114 80E0      		ldi r24,lo8(.LC17)
 11818 5116 90E0      		ldi r25,hi8(.LC17)
 11819 5118 892F      		mov r24,r25
 11820 511a 8F93      		push r24
 11821 511c 80E0      		ldi r24,lo8(.LC17)
 11822 511e 90E0      		ldi r25,hi8(.LC17)
 11823 5120 8F93      		push r24
 11824 5122 0E94 0000 		call printf
 11825 5126 0F90      		pop __tmp_reg__
 11826 5128 0F90      		pop __tmp_reg__
 11827 512a 0F90      		pop __tmp_reg__
 11828 512c 0F90      		pop __tmp_reg__
3129:lp_solve_5.5/colamd/colamd.c **** 	    break ;
 11829               		.loc 1 3129 0
 11830 512e 00C0      		rjmp .L276
 11831               	.L287:
3130:lp_solve_5.5/colamd/colamd.c **** 
3131:lp_solve_5.5/colamd/colamd.c **** 	case COLAMD_ERROR_A_too_small:
3132:lp_solve_5.5/colamd/colamd.c **** 
3133:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF ("Array A too small.\n") ;
 11832               		.loc 1 3133 0
 11833 5130 80E0      		ldi r24,lo8(.LC18)
 11834 5132 90E0      		ldi r25,hi8(.LC18)
 11835 5134 0E94 0000 		call puts
3134:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF ("        Need Alen >= %d, but given only Alen = %d.\n",
 11836               		.loc 1 3134 0
 11837 5138 8C81      		ldd r24,Y+4
 11838 513a 8F93      		push r24
 11839 513c 8B81      		ldd r24,Y+3
 11840 513e 8F93      		push r24
 11841 5140 8A81      		ldd r24,Y+2
 11842 5142 8F93      		push r24
 11843 5144 8981      		ldd r24,Y+1
 11844 5146 8F93      		push r24
 11845 5148 80E0      		ldi r24,lo8(.LC19)
 11846 514a 90E0      		ldi r25,hi8(.LC19)
 11847 514c 892F      		mov r24,r25
 11848 514e 8F93      		push r24
 11849 5150 80E0      		ldi r24,lo8(.LC19)
 11850 5152 90E0      		ldi r25,hi8(.LC19)
 11851 5154 8F93      		push r24
 11852 5156 0E94 0000 		call printf
 11853 515a 0F90      		pop __tmp_reg__
 11854 515c 0F90      		pop __tmp_reg__
 11855 515e 0F90      		pop __tmp_reg__
 11856 5160 0F90      		pop __tmp_reg__
 11857 5162 0F90      		pop __tmp_reg__
 11858 5164 0F90      		pop __tmp_reg__
3135:lp_solve_5.5/colamd/colamd.c **** 	    i1, i2) ;
3136:lp_solve_5.5/colamd/colamd.c **** 	    break ;
 11859               		.loc 1 3136 0
 11860 5166 00C0      		rjmp .L276
 11861               	.L297:
3137:lp_solve_5.5/colamd/colamd.c **** 
3138:lp_solve_5.5/colamd/colamd.c **** 	case COLAMD_ERROR_col_length_negative:
3139:lp_solve_5.5/colamd/colamd.c **** 
3140:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF
 11862               		.loc 1 3140 0
 11863 5168 8C81      		ldd r24,Y+4
 11864 516a 8F93      		push r24
 11865 516c 8B81      		ldd r24,Y+3
 11866 516e 8F93      		push r24
 11867 5170 8A81      		ldd r24,Y+2
 11868 5172 8F93      		push r24
 11869 5174 8981      		ldd r24,Y+1
 11870 5176 8F93      		push r24
 11871 5178 80E0      		ldi r24,lo8(.LC20)
 11872 517a 90E0      		ldi r25,hi8(.LC20)
 11873 517c 892F      		mov r24,r25
 11874 517e 8F93      		push r24
 11875 5180 80E0      		ldi r24,lo8(.LC20)
 11876 5182 90E0      		ldi r25,hi8(.LC20)
 11877 5184 8F93      		push r24
 11878 5186 0E94 0000 		call printf
 11879 518a 0F90      		pop __tmp_reg__
 11880 518c 0F90      		pop __tmp_reg__
 11881 518e 0F90      		pop __tmp_reg__
 11882 5190 0F90      		pop __tmp_reg__
 11883 5192 0F90      		pop __tmp_reg__
 11884 5194 0F90      		pop __tmp_reg__
3141:lp_solve_5.5/colamd/colamd.c **** 	    ("Column %d has a negative number of nonzero entries (%d).\n",
3142:lp_solve_5.5/colamd/colamd.c **** 	    INDEX (i1), i2) ;
3143:lp_solve_5.5/colamd/colamd.c **** 	    break ;
 11885               		.loc 1 3143 0
 11886 5196 00C0      		rjmp .L276
 11887               	.L283:
3144:lp_solve_5.5/colamd/colamd.c **** 
3145:lp_solve_5.5/colamd/colamd.c **** 	case COLAMD_ERROR_row_index_out_of_bounds:
3146:lp_solve_5.5/colamd/colamd.c **** 
3147:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF
 11888               		.loc 1 3147 0
 11889 5198 8D81      		ldd r24,Y+5
 11890 519a 9E81      		ldd r25,Y+6
 11891 519c 0197      		sbiw r24,1
 11892 519e 2A81      		ldd r18,Y+2
 11893 51a0 2F93      		push r18
 11894 51a2 2981      		ldd r18,Y+1
 11895 51a4 2F93      		push r18
 11896 51a6 292F      		mov r18,r25
 11897 51a8 2F93      		push r18
 11898 51aa 8F93      		push r24
 11899 51ac 1F92      		push __zero_reg__
 11900 51ae 1F92      		push __zero_reg__
 11901 51b0 8C81      		ldd r24,Y+4
 11902 51b2 8F93      		push r24
 11903 51b4 8B81      		ldd r24,Y+3
 11904 51b6 8F93      		push r24
 11905 51b8 80E0      		ldi r24,lo8(.LC21)
 11906 51ba 90E0      		ldi r25,hi8(.LC21)
 11907 51bc 892F      		mov r24,r25
 11908 51be 8F93      		push r24
 11909 51c0 80E0      		ldi r24,lo8(.LC21)
 11910 51c2 90E0      		ldi r25,hi8(.LC21)
 11911 51c4 8F93      		push r24
 11912 51c6 0E94 0000 		call printf
 11913 51ca 8DB7      		in r24,__SP_L__
 11914 51cc 9EB7      		in r25,__SP_H__
 11915 51ce 0A96      		adiw r24,10
 11916 51d0 0FB6      		in __tmp_reg__,__SREG__
 11917 51d2 F894      		cli
 11918 51d4 DEBF      		out __SP_H__,r29
 11919 51d6 0FBE      		out __SREG__,__tmp_reg__
 11920 51d8 CDBF      		out __SP_L__,r28
3148:lp_solve_5.5/colamd/colamd.c **** 	    ("Row index (row %d) out of bounds (%d to %d) in column %d.\n",
3149:lp_solve_5.5/colamd/colamd.c **** 	    INDEX (i2), INDEX (0), INDEX (i3-1), INDEX (i1)) ;
3150:lp_solve_5.5/colamd/colamd.c **** 	    break ;
 11921               		.loc 1 3150 0
 11922 51da 00C0      		rjmp .L276
 11923               	.L286:
3151:lp_solve_5.5/colamd/colamd.c **** 
3152:lp_solve_5.5/colamd/colamd.c **** 	case COLAMD_ERROR_out_of_memory:
3153:lp_solve_5.5/colamd/colamd.c **** 
3154:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF ("Out of memory.\n") ;
 11924               		.loc 1 3154 0
 11925 51dc 80E0      		ldi r24,lo8(.LC22)
 11926 51de 90E0      		ldi r25,hi8(.LC22)
 11927 51e0 0E94 0000 		call puts
3155:lp_solve_5.5/colamd/colamd.c **** 	    break ;
 11928               		.loc 1 3155 0
 11929 51e4 00C0      		rjmp .L276
 11930               	.L285:
3156:lp_solve_5.5/colamd/colamd.c **** 
3157:lp_solve_5.5/colamd/colamd.c **** 	case COLAMD_ERROR_internal_error:
3158:lp_solve_5.5/colamd/colamd.c **** 
3159:lp_solve_5.5/colamd/colamd.c **** 	    /* if this happens, there is a bug in the code */
3160:lp_solve_5.5/colamd/colamd.c **** 	    PRINTF
 11931               		.loc 1 3160 0
 11932 51e6 80E0      		ldi r24,lo8(.LC23)
 11933 51e8 90E0      		ldi r25,hi8(.LC23)
 11934 51ea 0E94 0000 		call puts
3161:lp_solve_5.5/colamd/colamd.c **** 	    ("Internal error! Please contact authors (davis@cise.ufl.edu).\n") ;
3162:lp_solve_5.5/colamd/colamd.c **** 	    break ;
 11935               		.loc 1 3162 0
 11936 51ee 0000      		nop
 11937               	.L276:
 11938               	/* epilogue start */
3163:lp_solve_5.5/colamd/colamd.c ****     }
3164:lp_solve_5.5/colamd/colamd.c **** }
 11939               		.loc 1 3164 0
 11940 51f0 2A96      		adiw r28,10
 11941 51f2 0FB6      		in __tmp_reg__,__SREG__
 11942 51f4 F894      		cli
 11943 51f6 DEBF      		out __SP_H__,r29
 11944 51f8 0FBE      		out __SREG__,__tmp_reg__
 11945 51fa CDBF      		out __SP_L__,r28
 11946 51fc DF91      		pop r29
 11947 51fe CF91      		pop r28
 11948 5200 0895      		ret
 11949               		.cfi_endproc
 11950               	.LFE18:
 11952               	.Letext0:
 11953               		.file 2 "lp_solve_5.5/colamd/colamd.h"
 11954               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\lib\\gc
DEFINED SYMBOLS
                            *ABS*:00000000 colamd.c
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:13     .text:00000000 colamd_recommended
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:132    .text:000000ae colamd_set_defaults
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:245    .text:00000140 symamd
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:2332   .text:00000fa6 colamd
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:3374   .text:0000166c init_rows_cols
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:4878   .text:000020c6 init_scoring
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:6444   .text:00002bd0 find_ordering
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:9426   .text:00004134 order_children
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:3281   .text:0000161c colamd_report
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:11371  .text:00004df6 print_report
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:3330   .text:00001644 symamd_report
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:11223  .text:00004d6c clear_mark
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:10528  .text:000048b6 garbage_collection
C:\Users\GUILHE~1\AppData\Local\Temp\cc7z3LZ6.s:9789   .text:000043a6 detect_super_cols

UNDEFINED SYMBOLS
__divmodhi4
__floatsisf
__mulsf3
__divsf3
__ltsf2
__fixsfsi
__udivmodhi4
printf
puts
putchar
__do_copy_data
