   1               		.file	"lp_utils.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	set_biton:
  13               	.LFB7:
  14               		.file 1 "lp_solve_5.5/lp_bit.h"
   1:lp_solve_5.5/lp_bit.h **** #include "lp_types.h"
   2:lp_solve_5.5/lp_bit.h **** 
   3:lp_solve_5.5/lp_bit.h **** #if defined INLINE
   4:lp_solve_5.5/lp_bit.h **** # define MYINLINE INLINE
   5:lp_solve_5.5/lp_bit.h **** #else
   6:lp_solve_5.5/lp_bit.h **** # define MYINLINE static
   7:lp_solve_5.5/lp_bit.h **** #endif
   8:lp_solve_5.5/lp_bit.h **** 
   9:lp_solve_5.5/lp_bit.h **** MYINLINE void set_biton(MYBOOL *bitarray, int item)
  10:lp_solve_5.5/lp_bit.h **** {
  15               		.loc 1 10 0
  16               		.cfi_startproc
  17 0000 CF93      		push r28
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 28, -2
  21 0002 DF93      		push r29
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 29, -3
  25 0004 00D0      		rcall .
  26 0006 00D0      		rcall .
  27               	.LCFI2:
  28               		.cfi_def_cfa_offset 8
  29 0008 CDB7      		in r28,__SP_L__
  30 000a DEB7      		in r29,__SP_H__
  31               	.LCFI3:
  32               		.cfi_def_cfa_register 28
  33               	/* prologue: function */
  34               	/* frame size = 4 */
  35               	/* stack size = 6 */
  36               	.L__stack_usage = 6
  37 000c 9A83      		std Y+2,r25
  38 000e 8983      		std Y+1,r24
  39 0010 7C83      		std Y+4,r23
  40 0012 6B83      		std Y+3,r22
  11:lp_solve_5.5/lp_bit.h ****   bitarray[item / 8] |= (1 << (item % 8));
  41               		.loc 1 11 0
  42 0014 8B81      		ldd r24,Y+3
  43 0016 9C81      		ldd r25,Y+4
  44 0018 9923      		tst r25
  45 001a 04F4      		brge .L2
  46 001c 0796      		adiw r24,7
  47               	.L2:
  48 001e 9595      		asr r25
  49 0020 8795      		ror r24
  50 0022 9595      		asr r25
  51 0024 8795      		ror r24
  52 0026 9595      		asr r25
  53 0028 8795      		ror r24
  54 002a AC01      		movw r20,r24
  55 002c 9A01      		movw r18,r20
  56 002e 8981      		ldd r24,Y+1
  57 0030 9A81      		ldd r25,Y+2
  58 0032 280F      		add r18,r24
  59 0034 391F      		adc r19,r25
  60 0036 8981      		ldd r24,Y+1
  61 0038 9A81      		ldd r25,Y+2
  62 003a 840F      		add r24,r20
  63 003c 951F      		adc r25,r21
  64 003e FC01      		movw r30,r24
  65 0040 8081      		ld r24,Z
  66 0042 682F      		mov r22,r24
  67 0044 8B81      		ldd r24,Y+3
  68 0046 9C81      		ldd r25,Y+4
  69 0048 8770      		andi r24,7
  70 004a 9078      		andi r25,128
  71 004c 9923      		tst r25
  72 004e 04F4      		brge .L3
  73 0050 0197      		sbiw r24,1
  74 0052 886F      		ori r24,248
  75 0054 9F6F      		ori r25,255
  76 0056 0196      		adiw r24,1
  77               	.L3:
  78 0058 AC01      		movw r20,r24
  79 005a 81E0      		ldi r24,lo8(1)
  80 005c 90E0      		ldi r25,0
  81 005e 00C0      		rjmp 2f
  82               		1:
  83 0060 880F      		lsl r24
  84 0062 991F      		rol r25
  85               		2:
  86 0064 4A95      		dec r20
  87 0066 02F4      		brpl 1b
  88 0068 862B      		or r24,r22
  89 006a F901      		movw r30,r18
  90 006c 8083      		st Z,r24
  12:lp_solve_5.5/lp_bit.h **** }
  91               		.loc 1 12 0
  92 006e 0000      		nop
  93               	/* epilogue start */
  94 0070 0F90      		pop __tmp_reg__
  95 0072 0F90      		pop __tmp_reg__
  96 0074 0F90      		pop __tmp_reg__
  97 0076 0F90      		pop __tmp_reg__
  98 0078 DF91      		pop r29
  99 007a CF91      		pop r28
 100 007c 0895      		ret
 101               		.cfi_endproc
 102               	.LFE7:
 105               	set_bitoff:
 106               	.LFB8:
  13:lp_solve_5.5/lp_bit.h **** 
  14:lp_solve_5.5/lp_bit.h **** MYINLINE void set_bitoff(MYBOOL *bitarray, int item)
  15:lp_solve_5.5/lp_bit.h **** {
 107               		.loc 1 15 0
 108               		.cfi_startproc
 109 007e CF93      		push r28
 110               	.LCFI4:
 111               		.cfi_def_cfa_offset 3
 112               		.cfi_offset 28, -2
 113 0080 DF93      		push r29
 114               	.LCFI5:
 115               		.cfi_def_cfa_offset 4
 116               		.cfi_offset 29, -3
 117 0082 00D0      		rcall .
 118 0084 00D0      		rcall .
 119               	.LCFI6:
 120               		.cfi_def_cfa_offset 8
 121 0086 CDB7      		in r28,__SP_L__
 122 0088 DEB7      		in r29,__SP_H__
 123               	.LCFI7:
 124               		.cfi_def_cfa_register 28
 125               	/* prologue: function */
 126               	/* frame size = 4 */
 127               	/* stack size = 6 */
 128               	.L__stack_usage = 6
 129 008a 9A83      		std Y+2,r25
 130 008c 8983      		std Y+1,r24
 131 008e 7C83      		std Y+4,r23
 132 0090 6B83      		std Y+3,r22
  16:lp_solve_5.5/lp_bit.h ****   bitarray[item / 8] &= ~(1 << (item % 8));
 133               		.loc 1 16 0
 134 0092 8B81      		ldd r24,Y+3
 135 0094 9C81      		ldd r25,Y+4
 136 0096 9923      		tst r25
 137 0098 04F4      		brge .L5
 138 009a 0796      		adiw r24,7
 139               	.L5:
 140 009c 9595      		asr r25
 141 009e 8795      		ror r24
 142 00a0 9595      		asr r25
 143 00a2 8795      		ror r24
 144 00a4 9595      		asr r25
 145 00a6 8795      		ror r24
 146 00a8 AC01      		movw r20,r24
 147 00aa 9A01      		movw r18,r20
 148 00ac 8981      		ldd r24,Y+1
 149 00ae 9A81      		ldd r25,Y+2
 150 00b0 280F      		add r18,r24
 151 00b2 391F      		adc r19,r25
 152 00b4 8981      		ldd r24,Y+1
 153 00b6 9A81      		ldd r25,Y+2
 154 00b8 840F      		add r24,r20
 155 00ba 951F      		adc r25,r21
 156 00bc FC01      		movw r30,r24
 157 00be 8081      		ld r24,Z
 158 00c0 682F      		mov r22,r24
 159 00c2 8B81      		ldd r24,Y+3
 160 00c4 9C81      		ldd r25,Y+4
 161 00c6 8770      		andi r24,7
 162 00c8 9078      		andi r25,128
 163 00ca 9923      		tst r25
 164 00cc 04F4      		brge .L6
 165 00ce 0197      		sbiw r24,1
 166 00d0 886F      		ori r24,248
 167 00d2 9F6F      		ori r25,255
 168 00d4 0196      		adiw r24,1
 169               	.L6:
 170 00d6 AC01      		movw r20,r24
 171 00d8 81E0      		ldi r24,lo8(1)
 172 00da 90E0      		ldi r25,0
 173 00dc 00C0      		rjmp 2f
 174               		1:
 175 00de 880F      		lsl r24
 176 00e0 991F      		rol r25
 177               		2:
 178 00e2 4A95      		dec r20
 179 00e4 02F4      		brpl 1b
 180 00e6 8095      		com r24
 181 00e8 8623      		and r24,r22
 182 00ea F901      		movw r30,r18
 183 00ec 8083      		st Z,r24
  17:lp_solve_5.5/lp_bit.h **** }
 184               		.loc 1 17 0
 185 00ee 0000      		nop
 186               	/* epilogue start */
 187 00f0 0F90      		pop __tmp_reg__
 188 00f2 0F90      		pop __tmp_reg__
 189 00f4 0F90      		pop __tmp_reg__
 190 00f6 0F90      		pop __tmp_reg__
 191 00f8 DF91      		pop r29
 192 00fa CF91      		pop r28
 193 00fc 0895      		ret
 194               		.cfi_endproc
 195               	.LFE8:
 198               	is_biton:
 199               	.LFB9:
  18:lp_solve_5.5/lp_bit.h **** 
  19:lp_solve_5.5/lp_bit.h **** MYINLINE MYBOOL is_biton(MYBOOL *bitarray, int item)
  20:lp_solve_5.5/lp_bit.h **** {
 200               		.loc 1 20 0
 201               		.cfi_startproc
 202 00fe CF93      		push r28
 203               	.LCFI8:
 204               		.cfi_def_cfa_offset 3
 205               		.cfi_offset 28, -2
 206 0100 DF93      		push r29
 207               	.LCFI9:
 208               		.cfi_def_cfa_offset 4
 209               		.cfi_offset 29, -3
 210 0102 00D0      		rcall .
 211 0104 00D0      		rcall .
 212               	.LCFI10:
 213               		.cfi_def_cfa_offset 8
 214 0106 CDB7      		in r28,__SP_L__
 215 0108 DEB7      		in r29,__SP_H__
 216               	.LCFI11:
 217               		.cfi_def_cfa_register 28
 218               	/* prologue: function */
 219               	/* frame size = 4 */
 220               	/* stack size = 6 */
 221               	.L__stack_usage = 6
 222 010a 9A83      		std Y+2,r25
 223 010c 8983      		std Y+1,r24
 224 010e 7C83      		std Y+4,r23
 225 0110 6B83      		std Y+3,r22
  21:lp_solve_5.5/lp_bit.h ****   return( (MYBOOL) ((bitarray[item / 8] & (1 << (item % 8))) != 0) );
 226               		.loc 1 21 0
 227 0112 8B81      		ldd r24,Y+3
 228 0114 9C81      		ldd r25,Y+4
 229 0116 9923      		tst r25
 230 0118 04F4      		brge .L8
 231 011a 0796      		adiw r24,7
 232               	.L8:
 233 011c 9595      		asr r25
 234 011e 8795      		ror r24
 235 0120 9595      		asr r25
 236 0122 8795      		ror r24
 237 0124 9595      		asr r25
 238 0126 8795      		ror r24
 239 0128 9C01      		movw r18,r24
 240 012a 8981      		ldd r24,Y+1
 241 012c 9A81      		ldd r25,Y+2
 242 012e 820F      		add r24,r18
 243 0130 931F      		adc r25,r19
 244 0132 FC01      		movw r30,r24
 245 0134 8081      		ld r24,Z
 246 0136 282F      		mov r18,r24
 247 0138 30E0      		ldi r19,0
 248 013a 8B81      		ldd r24,Y+3
 249 013c 9C81      		ldd r25,Y+4
 250 013e 8770      		andi r24,7
 251 0140 9078      		andi r25,128
 252 0142 9923      		tst r25
 253 0144 04F4      		brge .L9
 254 0146 0197      		sbiw r24,1
 255 0148 886F      		ori r24,248
 256 014a 9F6F      		ori r25,255
 257 014c 0196      		adiw r24,1
 258               	.L9:
 259 014e A901      		movw r20,r18
 260 0150 00C0      		rjmp 2f
 261               		1:
 262 0152 5595      		asr r21
 263 0154 4795      		ror r20
 264               		2:
 265 0156 8A95      		dec r24
 266 0158 02F4      		brpl 1b
 267 015a CA01      		movw r24,r20
 268 015c 8170      		andi r24,1
 269 015e 9927      		clr r25
 270 0160 21E0      		ldi r18,lo8(1)
 271 0162 892B      		or r24,r25
 272 0164 01F4      		brne .L10
 273 0166 20E0      		ldi r18,0
 274               	.L10:
 275 0168 822F      		mov r24,r18
 276               	/* epilogue start */
  22:lp_solve_5.5/lp_bit.h **** }
 277               		.loc 1 22 0
 278 016a 0F90      		pop __tmp_reg__
 279 016c 0F90      		pop __tmp_reg__
 280 016e 0F90      		pop __tmp_reg__
 281 0170 0F90      		pop __tmp_reg__
 282 0172 DF91      		pop r29
 283 0174 CF91      		pop r28
 284 0176 0895      		ret
 285               		.cfi_endproc
 286               	.LFE9:
 288               		.section	.rodata
 289               	.LC0:
 290 0000 616C 6C6F 		.string	"alloc of %d 'char' failed\n"
 290      6320 6F66 
 290      2025 6420 
 290      2763 6861 
 290      7227 2066 
 291               		.text
 292               	.global	allocCHAR
 294               	allocCHAR:
 295               	.LFB10:
 296               		.file 2 "lp_solve_5.5/lp_utils.c"
   1:lp_solve_5.5/lp_utils.c **** #define CODE_lp_utils
   2:lp_solve_5.5/lp_utils.c **** 
   3:lp_solve_5.5/lp_utils.c **** #include <string.h>
   4:lp_solve_5.5/lp_utils.c **** #include "commonlib.h"
   5:lp_solve_5.5/lp_utils.c **** #include "lp_lib.h"
   6:lp_solve_5.5/lp_utils.c **** #include "lp_utils.h"
   7:lp_solve_5.5/lp_utils.c **** #include <time.h>
   8:lp_solve_5.5/lp_utils.c **** // #include <sys/timeb.h>
   9:lp_solve_5.5/lp_utils.c **** #include "lp_bit.h"
  10:lp_solve_5.5/lp_utils.c **** 
  11:lp_solve_5.5/lp_utils.c **** #ifdef FORTIFY
  12:lp_solve_5.5/lp_utils.c **** # include "lp_fortify.h"
  13:lp_solve_5.5/lp_utils.c **** #endif
  14:lp_solve_5.5/lp_utils.c **** 
  15:lp_solve_5.5/lp_utils.c **** 
  16:lp_solve_5.5/lp_utils.c **** /*
  17:lp_solve_5.5/lp_utils.c ****     Miscellaneous utilities as implemented for lp_solve v5.0+
  18:lp_solve_5.5/lp_utils.c ****    ----------------------------------------------------------------------------------
  19:lp_solve_5.5/lp_utils.c ****     Author:        Kjell Eikland
  20:lp_solve_5.5/lp_utils.c ****     Contact:       kjell.eikland@broadpark.no
  21:lp_solve_5.5/lp_utils.c ****     License terms: GLPL.
  22:lp_solve_5.5/lp_utils.c **** 
  23:lp_solve_5.5/lp_utils.c ****     Requires:      lp_utils.h, lp_lib.h
  24:lp_solve_5.5/lp_utils.c **** 
  25:lp_solve_5.5/lp_utils.c ****     Release notes:
  26:lp_solve_5.5/lp_utils.c ****     v1.0.0  1 January 2003      Memory allocation, sorting, searching, time and
  27:lp_solve_5.5/lp_utils.c ****                                 doubly linked list functions.
  28:lp_solve_5.5/lp_utils.c ****     v1.1.0  15 May 2004         Added vector packing functionality
  29:lp_solve_5.5/lp_utils.c ****     v1.2.0  10 January 2005     Added vector pushing/popping functionality
  30:lp_solve_5.5/lp_utils.c ****                                 Modified return values and fixed problem in
  31:lp_solve_5.5/lp_utils.c ****                                 linked list functions.
  32:lp_solve_5.5/lp_utils.c **** 
  33:lp_solve_5.5/lp_utils.c ****    ----------------------------------------------------------------------------------
  34:lp_solve_5.5/lp_utils.c **** */
  35:lp_solve_5.5/lp_utils.c **** 
  36:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL allocCHAR(lprec *lp, char **ptr, int size, MYBOOL clear)
  37:lp_solve_5.5/lp_utils.c **** {
 297               		.loc 2 37 0
 298               		.cfi_startproc
 299 0178 CF93      		push r28
 300               	.LCFI12:
 301               		.cfi_def_cfa_offset 3
 302               		.cfi_offset 28, -2
 303 017a DF93      		push r29
 304               	.LCFI13:
 305               		.cfi_def_cfa_offset 4
 306               		.cfi_offset 29, -3
 307 017c CDB7      		in r28,__SP_L__
 308 017e DEB7      		in r29,__SP_H__
 309               	.LCFI14:
 310               		.cfi_def_cfa_register 28
 311 0180 2797      		sbiw r28,7
 312               	.LCFI15:
 313               		.cfi_def_cfa_offset 11
 314 0182 0FB6      		in __tmp_reg__,__SREG__
 315 0184 F894      		cli
 316 0186 DEBF      		out __SP_H__,r29
 317 0188 0FBE      		out __SREG__,__tmp_reg__
 318 018a CDBF      		out __SP_L__,r28
 319               	/* prologue: function */
 320               	/* frame size = 7 */
 321               	/* stack size = 9 */
 322               	.L__stack_usage = 9
 323 018c 9A83      		std Y+2,r25
 324 018e 8983      		std Y+1,r24
 325 0190 7C83      		std Y+4,r23
 326 0192 6B83      		std Y+3,r22
 327 0194 5E83      		std Y+6,r21
 328 0196 4D83      		std Y+5,r20
 329 0198 2F83      		std Y+7,r18
  38:lp_solve_5.5/lp_utils.c ****   if(clear == TRUE)
 330               		.loc 2 38 0
 331 019a 8F81      		ldd r24,Y+7
 332 019c 8130      		cpi r24,lo8(1)
 333 019e 01F4      		brne .L13
  39:lp_solve_5.5/lp_utils.c ****     *ptr = (char *) calloc(size, sizeof(**ptr));
 334               		.loc 2 39 0
 335 01a0 8D81      		ldd r24,Y+5
 336 01a2 9E81      		ldd r25,Y+6
 337 01a4 61E0      		ldi r22,lo8(1)
 338 01a6 70E0      		ldi r23,0
 339 01a8 0E94 0000 		call calloc
 340 01ac 9C01      		movw r18,r24
 341 01ae 8B81      		ldd r24,Y+3
 342 01b0 9C81      		ldd r25,Y+4
 343 01b2 FC01      		movw r30,r24
 344 01b4 3183      		std Z+1,r19
 345 01b6 2083      		st Z,r18
 346 01b8 00C0      		rjmp .L14
 347               	.L13:
  40:lp_solve_5.5/lp_utils.c ****   else if(clear & AUTOMATIC) {
 348               		.loc 2 40 0
 349 01ba 8F81      		ldd r24,Y+7
 350 01bc 882F      		mov r24,r24
 351 01be 90E0      		ldi r25,0
 352 01c0 8270      		andi r24,2
 353 01c2 9927      		clr r25
 354 01c4 892B      		or r24,r25
 355 01c6 01F0      		breq .L15
  41:lp_solve_5.5/lp_utils.c ****     *ptr = (char *) realloc(*ptr, size * sizeof(**ptr));
 356               		.loc 2 41 0
 357 01c8 2D81      		ldd r18,Y+5
 358 01ca 3E81      		ldd r19,Y+6
 359 01cc 8B81      		ldd r24,Y+3
 360 01ce 9C81      		ldd r25,Y+4
 361 01d0 FC01      		movw r30,r24
 362 01d2 8081      		ld r24,Z
 363 01d4 9181      		ldd r25,Z+1
 364 01d6 B901      		movw r22,r18
 365 01d8 0E94 0000 		call realloc
 366 01dc 9C01      		movw r18,r24
 367 01de 8B81      		ldd r24,Y+3
 368 01e0 9C81      		ldd r25,Y+4
 369 01e2 FC01      		movw r30,r24
 370 01e4 3183      		std Z+1,r19
 371 01e6 2083      		st Z,r18
  42:lp_solve_5.5/lp_utils.c ****     if(clear & TRUE)
 372               		.loc 2 42 0
 373 01e8 8F81      		ldd r24,Y+7
 374 01ea 882F      		mov r24,r24
 375 01ec 90E0      		ldi r25,0
 376 01ee 8170      		andi r24,1
 377 01f0 9927      		clr r25
 378 01f2 892B      		or r24,r25
 379 01f4 01F0      		breq .L14
  43:lp_solve_5.5/lp_utils.c ****       MEMCLEAR(*ptr, size);
 380               		.loc 2 43 0
 381 01f6 2D81      		ldd r18,Y+5
 382 01f8 3E81      		ldd r19,Y+6
 383 01fa 8B81      		ldd r24,Y+3
 384 01fc 9C81      		ldd r25,Y+4
 385 01fe FC01      		movw r30,r24
 386 0200 8081      		ld r24,Z
 387 0202 9181      		ldd r25,Z+1
 388 0204 A901      		movw r20,r18
 389 0206 60E0      		ldi r22,0
 390 0208 70E0      		ldi r23,0
 391 020a 0E94 0000 		call memset
 392 020e 00C0      		rjmp .L14
 393               	.L15:
  44:lp_solve_5.5/lp_utils.c ****   }
  45:lp_solve_5.5/lp_utils.c ****   else
  46:lp_solve_5.5/lp_utils.c ****     *ptr = (char *) malloc(size * sizeof(**ptr));
 394               		.loc 2 46 0
 395 0210 8D81      		ldd r24,Y+5
 396 0212 9E81      		ldd r25,Y+6
 397 0214 0E94 0000 		call malloc
 398 0218 9C01      		movw r18,r24
 399 021a 8B81      		ldd r24,Y+3
 400 021c 9C81      		ldd r25,Y+4
 401 021e FC01      		movw r30,r24
 402 0220 3183      		std Z+1,r19
 403 0222 2083      		st Z,r18
 404               	.L14:
  47:lp_solve_5.5/lp_utils.c ****   if(((*ptr) == NULL) && (size > 0)) {
 405               		.loc 2 47 0
 406 0224 8B81      		ldd r24,Y+3
 407 0226 9C81      		ldd r25,Y+4
 408 0228 FC01      		movw r30,r24
 409 022a 8081      		ld r24,Z
 410 022c 9181      		ldd r25,Z+1
 411 022e 892B      		or r24,r25
 412 0230 01F4      		brne .L17
 413               		.loc 2 47 0 is_stmt 0 discriminator 1
 414 0232 8D81      		ldd r24,Y+5
 415 0234 9E81      		ldd r25,Y+6
 416 0236 1816      		cp __zero_reg__,r24
 417 0238 1906      		cpc __zero_reg__,r25
 418 023a 04F4      		brge .L17
  48:lp_solve_5.5/lp_utils.c ****     lp->report(lp, CRITICAL, "alloc of %d 'char' failed\n", size);
 419               		.loc 2 48 0 is_stmt 1
 420 023c 8981      		ldd r24,Y+1
 421 023e 9A81      		ldd r25,Y+2
 422 0240 8E51      		subi r24,30
 423 0242 9C4F      		sbci r25,-4
 424 0244 FC01      		movw r30,r24
 425 0246 8081      		ld r24,Z
 426 0248 9181      		ldd r25,Z+1
 427 024a 2E81      		ldd r18,Y+6
 428 024c 2F93      		push r18
 429 024e 2D81      		ldd r18,Y+5
 430 0250 2F93      		push r18
 431 0252 20E0      		ldi r18,lo8(.LC0)
 432 0254 30E0      		ldi r19,hi8(.LC0)
 433 0256 232F      		mov r18,r19
 434 0258 2F93      		push r18
 435 025a 20E0      		ldi r18,lo8(.LC0)
 436 025c 30E0      		ldi r19,hi8(.LC0)
 437 025e 2F93      		push r18
 438 0260 1F92      		push __zero_reg__
 439 0262 21E0      		ldi r18,lo8(1)
 440 0264 2F93      		push r18
 441 0266 2A81      		ldd r18,Y+2
 442 0268 2F93      		push r18
 443 026a 2981      		ldd r18,Y+1
 444 026c 2F93      		push r18
 445 026e FC01      		movw r30,r24
 446 0270 0995      		icall
 447 0272 8DB7      		in r24,__SP_L__
 448 0274 9EB7      		in r25,__SP_H__
 449 0276 0896      		adiw r24,8
 450 0278 0FB6      		in __tmp_reg__,__SREG__
 451 027a F894      		cli
 452 027c DEBF      		out __SP_H__,r29
 453 027e 0FBE      		out __SREG__,__tmp_reg__
 454 0280 CDBF      		out __SP_L__,r28
  49:lp_solve_5.5/lp_utils.c ****     lp->spx_status = NOMEMORY;
 455               		.loc 2 49 0
 456 0282 8981      		ldd r24,Y+1
 457 0284 9A81      		ldd r25,Y+2
 458 0286 8A5F      		subi r24,-6
 459 0288 9D4F      		sbci r25,-3
 460 028a 2EEF      		ldi r18,lo8(-2)
 461 028c 3FEF      		ldi r19,lo8(-1)
 462 028e FC01      		movw r30,r24
 463 0290 3183      		std Z+1,r19
 464 0292 2083      		st Z,r18
  50:lp_solve_5.5/lp_utils.c ****     return( FALSE );
 465               		.loc 2 50 0
 466 0294 80E0      		ldi r24,0
 467 0296 00C0      		rjmp .L18
 468               	.L17:
  51:lp_solve_5.5/lp_utils.c ****   }
  52:lp_solve_5.5/lp_utils.c ****   else
  53:lp_solve_5.5/lp_utils.c ****     return( TRUE );
 469               		.loc 2 53 0
 470 0298 81E0      		ldi r24,lo8(1)
 471               	.L18:
 472               	/* epilogue start */
  54:lp_solve_5.5/lp_utils.c **** }
 473               		.loc 2 54 0
 474 029a 2796      		adiw r28,7
 475 029c 0FB6      		in __tmp_reg__,__SREG__
 476 029e F894      		cli
 477 02a0 DEBF      		out __SP_H__,r29
 478 02a2 0FBE      		out __SREG__,__tmp_reg__
 479 02a4 CDBF      		out __SP_L__,r28
 480 02a6 DF91      		pop r29
 481 02a8 CF91      		pop r28
 482 02aa 0895      		ret
 483               		.cfi_endproc
 484               	.LFE10:
 486               		.section	.rodata
 487               	.LC1:
 488 001b 616C 6C6F 		.string	"alloc of %d 'MYBOOL' failed\n"
 488      6320 6F66 
 488      2025 6420 
 488      274D 5942 
 488      4F4F 4C27 
 489               		.text
 490               	.global	allocMYBOOL
 492               	allocMYBOOL:
 493               	.LFB11:
  55:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL allocMYBOOL(lprec *lp, MYBOOL **ptr, int size, MYBOOL clear)
  56:lp_solve_5.5/lp_utils.c **** {
 494               		.loc 2 56 0
 495               		.cfi_startproc
 496 02ac CF93      		push r28
 497               	.LCFI16:
 498               		.cfi_def_cfa_offset 3
 499               		.cfi_offset 28, -2
 500 02ae DF93      		push r29
 501               	.LCFI17:
 502               		.cfi_def_cfa_offset 4
 503               		.cfi_offset 29, -3
 504 02b0 CDB7      		in r28,__SP_L__
 505 02b2 DEB7      		in r29,__SP_H__
 506               	.LCFI18:
 507               		.cfi_def_cfa_register 28
 508 02b4 2797      		sbiw r28,7
 509               	.LCFI19:
 510               		.cfi_def_cfa_offset 11
 511 02b6 0FB6      		in __tmp_reg__,__SREG__
 512 02b8 F894      		cli
 513 02ba DEBF      		out __SP_H__,r29
 514 02bc 0FBE      		out __SREG__,__tmp_reg__
 515 02be CDBF      		out __SP_L__,r28
 516               	/* prologue: function */
 517               	/* frame size = 7 */
 518               	/* stack size = 9 */
 519               	.L__stack_usage = 9
 520 02c0 9A83      		std Y+2,r25
 521 02c2 8983      		std Y+1,r24
 522 02c4 7C83      		std Y+4,r23
 523 02c6 6B83      		std Y+3,r22
 524 02c8 5E83      		std Y+6,r21
 525 02ca 4D83      		std Y+5,r20
 526 02cc 2F83      		std Y+7,r18
  57:lp_solve_5.5/lp_utils.c ****   if(clear == TRUE)
 527               		.loc 2 57 0
 528 02ce 8F81      		ldd r24,Y+7
 529 02d0 8130      		cpi r24,lo8(1)
 530 02d2 01F4      		brne .L20
  58:lp_solve_5.5/lp_utils.c ****     *ptr = (MYBOOL *) calloc(size, sizeof(**ptr));
 531               		.loc 2 58 0
 532 02d4 8D81      		ldd r24,Y+5
 533 02d6 9E81      		ldd r25,Y+6
 534 02d8 61E0      		ldi r22,lo8(1)
 535 02da 70E0      		ldi r23,0
 536 02dc 0E94 0000 		call calloc
 537 02e0 9C01      		movw r18,r24
 538 02e2 8B81      		ldd r24,Y+3
 539 02e4 9C81      		ldd r25,Y+4
 540 02e6 FC01      		movw r30,r24
 541 02e8 3183      		std Z+1,r19
 542 02ea 2083      		st Z,r18
 543 02ec 00C0      		rjmp .L21
 544               	.L20:
  59:lp_solve_5.5/lp_utils.c ****   else if(clear & AUTOMATIC) {
 545               		.loc 2 59 0
 546 02ee 8F81      		ldd r24,Y+7
 547 02f0 882F      		mov r24,r24
 548 02f2 90E0      		ldi r25,0
 549 02f4 8270      		andi r24,2
 550 02f6 9927      		clr r25
 551 02f8 892B      		or r24,r25
 552 02fa 01F0      		breq .L22
  60:lp_solve_5.5/lp_utils.c ****     *ptr = (MYBOOL *) realloc(*ptr, size * sizeof(**ptr));
 553               		.loc 2 60 0
 554 02fc 2D81      		ldd r18,Y+5
 555 02fe 3E81      		ldd r19,Y+6
 556 0300 8B81      		ldd r24,Y+3
 557 0302 9C81      		ldd r25,Y+4
 558 0304 FC01      		movw r30,r24
 559 0306 8081      		ld r24,Z
 560 0308 9181      		ldd r25,Z+1
 561 030a B901      		movw r22,r18
 562 030c 0E94 0000 		call realloc
 563 0310 9C01      		movw r18,r24
 564 0312 8B81      		ldd r24,Y+3
 565 0314 9C81      		ldd r25,Y+4
 566 0316 FC01      		movw r30,r24
 567 0318 3183      		std Z+1,r19
 568 031a 2083      		st Z,r18
  61:lp_solve_5.5/lp_utils.c ****     if(clear & TRUE)
 569               		.loc 2 61 0
 570 031c 8F81      		ldd r24,Y+7
 571 031e 882F      		mov r24,r24
 572 0320 90E0      		ldi r25,0
 573 0322 8170      		andi r24,1
 574 0324 9927      		clr r25
 575 0326 892B      		or r24,r25
 576 0328 01F0      		breq .L21
  62:lp_solve_5.5/lp_utils.c ****       MEMCLEAR(*ptr, size);
 577               		.loc 2 62 0
 578 032a 2D81      		ldd r18,Y+5
 579 032c 3E81      		ldd r19,Y+6
 580 032e 8B81      		ldd r24,Y+3
 581 0330 9C81      		ldd r25,Y+4
 582 0332 FC01      		movw r30,r24
 583 0334 8081      		ld r24,Z
 584 0336 9181      		ldd r25,Z+1
 585 0338 A901      		movw r20,r18
 586 033a 60E0      		ldi r22,0
 587 033c 70E0      		ldi r23,0
 588 033e 0E94 0000 		call memset
 589 0342 00C0      		rjmp .L21
 590               	.L22:
  63:lp_solve_5.5/lp_utils.c ****   }
  64:lp_solve_5.5/lp_utils.c ****   else
  65:lp_solve_5.5/lp_utils.c ****     *ptr = (MYBOOL *) malloc(size * sizeof(**ptr));
 591               		.loc 2 65 0
 592 0344 8D81      		ldd r24,Y+5
 593 0346 9E81      		ldd r25,Y+6
 594 0348 0E94 0000 		call malloc
 595 034c 9C01      		movw r18,r24
 596 034e 8B81      		ldd r24,Y+3
 597 0350 9C81      		ldd r25,Y+4
 598 0352 FC01      		movw r30,r24
 599 0354 3183      		std Z+1,r19
 600 0356 2083      		st Z,r18
 601               	.L21:
  66:lp_solve_5.5/lp_utils.c ****   if(((*ptr) == NULL) && (size > 0)) {
 602               		.loc 2 66 0
 603 0358 8B81      		ldd r24,Y+3
 604 035a 9C81      		ldd r25,Y+4
 605 035c FC01      		movw r30,r24
 606 035e 8081      		ld r24,Z
 607 0360 9181      		ldd r25,Z+1
 608 0362 892B      		or r24,r25
 609 0364 01F4      		brne .L24
 610               		.loc 2 66 0 is_stmt 0 discriminator 1
 611 0366 8D81      		ldd r24,Y+5
 612 0368 9E81      		ldd r25,Y+6
 613 036a 1816      		cp __zero_reg__,r24
 614 036c 1906      		cpc __zero_reg__,r25
 615 036e 04F4      		brge .L24
  67:lp_solve_5.5/lp_utils.c ****     lp->report(lp, CRITICAL, "alloc of %d 'MYBOOL' failed\n", size);
 616               		.loc 2 67 0 is_stmt 1
 617 0370 8981      		ldd r24,Y+1
 618 0372 9A81      		ldd r25,Y+2
 619 0374 8E51      		subi r24,30
 620 0376 9C4F      		sbci r25,-4
 621 0378 FC01      		movw r30,r24
 622 037a 8081      		ld r24,Z
 623 037c 9181      		ldd r25,Z+1
 624 037e 2E81      		ldd r18,Y+6
 625 0380 2F93      		push r18
 626 0382 2D81      		ldd r18,Y+5
 627 0384 2F93      		push r18
 628 0386 20E0      		ldi r18,lo8(.LC1)
 629 0388 30E0      		ldi r19,hi8(.LC1)
 630 038a 232F      		mov r18,r19
 631 038c 2F93      		push r18
 632 038e 20E0      		ldi r18,lo8(.LC1)
 633 0390 30E0      		ldi r19,hi8(.LC1)
 634 0392 2F93      		push r18
 635 0394 1F92      		push __zero_reg__
 636 0396 21E0      		ldi r18,lo8(1)
 637 0398 2F93      		push r18
 638 039a 2A81      		ldd r18,Y+2
 639 039c 2F93      		push r18
 640 039e 2981      		ldd r18,Y+1
 641 03a0 2F93      		push r18
 642 03a2 FC01      		movw r30,r24
 643 03a4 0995      		icall
 644 03a6 8DB7      		in r24,__SP_L__
 645 03a8 9EB7      		in r25,__SP_H__
 646 03aa 0896      		adiw r24,8
 647 03ac 0FB6      		in __tmp_reg__,__SREG__
 648 03ae F894      		cli
 649 03b0 DEBF      		out __SP_H__,r29
 650 03b2 0FBE      		out __SREG__,__tmp_reg__
 651 03b4 CDBF      		out __SP_L__,r28
  68:lp_solve_5.5/lp_utils.c ****     lp->spx_status = NOMEMORY;
 652               		.loc 2 68 0
 653 03b6 8981      		ldd r24,Y+1
 654 03b8 9A81      		ldd r25,Y+2
 655 03ba 8A5F      		subi r24,-6
 656 03bc 9D4F      		sbci r25,-3
 657 03be 2EEF      		ldi r18,lo8(-2)
 658 03c0 3FEF      		ldi r19,lo8(-1)
 659 03c2 FC01      		movw r30,r24
 660 03c4 3183      		std Z+1,r19
 661 03c6 2083      		st Z,r18
  69:lp_solve_5.5/lp_utils.c ****     return( FALSE );
 662               		.loc 2 69 0
 663 03c8 80E0      		ldi r24,0
 664 03ca 00C0      		rjmp .L25
 665               	.L24:
  70:lp_solve_5.5/lp_utils.c ****   }
  71:lp_solve_5.5/lp_utils.c ****   else
  72:lp_solve_5.5/lp_utils.c ****     return( TRUE );
 666               		.loc 2 72 0
 667 03cc 81E0      		ldi r24,lo8(1)
 668               	.L25:
 669               	/* epilogue start */
  73:lp_solve_5.5/lp_utils.c **** }
 670               		.loc 2 73 0
 671 03ce 2796      		adiw r28,7
 672 03d0 0FB6      		in __tmp_reg__,__SREG__
 673 03d2 F894      		cli
 674 03d4 DEBF      		out __SP_H__,r29
 675 03d6 0FBE      		out __SREG__,__tmp_reg__
 676 03d8 CDBF      		out __SP_L__,r28
 677 03da DF91      		pop r29
 678 03dc CF91      		pop r28
 679 03de 0895      		ret
 680               		.cfi_endproc
 681               	.LFE11:
 683               		.section	.rodata
 684               	.LC2:
 685 0038 616C 6C6F 		.string	"alloc of %d 'INT' failed\n"
 685      6320 6F66 
 685      2025 6420 
 685      2749 4E54 
 685      2720 6661 
 686               		.text
 687               	.global	allocINT
 689               	allocINT:
 690               	.LFB12:
  74:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL allocINT(lprec *lp, int **ptr, int size, MYBOOL clear)
  75:lp_solve_5.5/lp_utils.c **** {
 691               		.loc 2 75 0
 692               		.cfi_startproc
 693 03e0 CF93      		push r28
 694               	.LCFI20:
 695               		.cfi_def_cfa_offset 3
 696               		.cfi_offset 28, -2
 697 03e2 DF93      		push r29
 698               	.LCFI21:
 699               		.cfi_def_cfa_offset 4
 700               		.cfi_offset 29, -3
 701 03e4 CDB7      		in r28,__SP_L__
 702 03e6 DEB7      		in r29,__SP_H__
 703               	.LCFI22:
 704               		.cfi_def_cfa_register 28
 705 03e8 2797      		sbiw r28,7
 706               	.LCFI23:
 707               		.cfi_def_cfa_offset 11
 708 03ea 0FB6      		in __tmp_reg__,__SREG__
 709 03ec F894      		cli
 710 03ee DEBF      		out __SP_H__,r29
 711 03f0 0FBE      		out __SREG__,__tmp_reg__
 712 03f2 CDBF      		out __SP_L__,r28
 713               	/* prologue: function */
 714               	/* frame size = 7 */
 715               	/* stack size = 9 */
 716               	.L__stack_usage = 9
 717 03f4 9A83      		std Y+2,r25
 718 03f6 8983      		std Y+1,r24
 719 03f8 7C83      		std Y+4,r23
 720 03fa 6B83      		std Y+3,r22
 721 03fc 5E83      		std Y+6,r21
 722 03fe 4D83      		std Y+5,r20
 723 0400 2F83      		std Y+7,r18
  76:lp_solve_5.5/lp_utils.c ****   if(clear == TRUE)
 724               		.loc 2 76 0
 725 0402 8F81      		ldd r24,Y+7
 726 0404 8130      		cpi r24,lo8(1)
 727 0406 01F4      		brne .L27
  77:lp_solve_5.5/lp_utils.c ****     *ptr = (int *) calloc(size, sizeof(**ptr));
 728               		.loc 2 77 0
 729 0408 8D81      		ldd r24,Y+5
 730 040a 9E81      		ldd r25,Y+6
 731 040c 62E0      		ldi r22,lo8(2)
 732 040e 70E0      		ldi r23,0
 733 0410 0E94 0000 		call calloc
 734 0414 9C01      		movw r18,r24
 735 0416 8B81      		ldd r24,Y+3
 736 0418 9C81      		ldd r25,Y+4
 737 041a FC01      		movw r30,r24
 738 041c 3183      		std Z+1,r19
 739 041e 2083      		st Z,r18
 740 0420 00C0      		rjmp .L28
 741               	.L27:
  78:lp_solve_5.5/lp_utils.c ****   else if(clear & AUTOMATIC) {
 742               		.loc 2 78 0
 743 0422 8F81      		ldd r24,Y+7
 744 0424 882F      		mov r24,r24
 745 0426 90E0      		ldi r25,0
 746 0428 8270      		andi r24,2
 747 042a 9927      		clr r25
 748 042c 892B      		or r24,r25
 749 042e 01F0      		breq .L29
  79:lp_solve_5.5/lp_utils.c ****     *ptr = (int *) realloc(*ptr, size * sizeof(**ptr));
 750               		.loc 2 79 0
 751 0430 8D81      		ldd r24,Y+5
 752 0432 9E81      		ldd r25,Y+6
 753 0434 9C01      		movw r18,r24
 754 0436 220F      		lsl r18
 755 0438 331F      		rol r19
 756 043a 8B81      		ldd r24,Y+3
 757 043c 9C81      		ldd r25,Y+4
 758 043e FC01      		movw r30,r24
 759 0440 8081      		ld r24,Z
 760 0442 9181      		ldd r25,Z+1
 761 0444 B901      		movw r22,r18
 762 0446 0E94 0000 		call realloc
 763 044a 9C01      		movw r18,r24
 764 044c 8B81      		ldd r24,Y+3
 765 044e 9C81      		ldd r25,Y+4
 766 0450 FC01      		movw r30,r24
 767 0452 3183      		std Z+1,r19
 768 0454 2083      		st Z,r18
  80:lp_solve_5.5/lp_utils.c ****     if(clear & TRUE)
 769               		.loc 2 80 0
 770 0456 8F81      		ldd r24,Y+7
 771 0458 882F      		mov r24,r24
 772 045a 90E0      		ldi r25,0
 773 045c 8170      		andi r24,1
 774 045e 9927      		clr r25
 775 0460 892B      		or r24,r25
 776 0462 01F0      		breq .L28
  81:lp_solve_5.5/lp_utils.c ****       MEMCLEAR(*ptr, size);
 777               		.loc 2 81 0
 778 0464 8D81      		ldd r24,Y+5
 779 0466 9E81      		ldd r25,Y+6
 780 0468 9C01      		movw r18,r24
 781 046a 220F      		lsl r18
 782 046c 331F      		rol r19
 783 046e 8B81      		ldd r24,Y+3
 784 0470 9C81      		ldd r25,Y+4
 785 0472 FC01      		movw r30,r24
 786 0474 8081      		ld r24,Z
 787 0476 9181      		ldd r25,Z+1
 788 0478 A901      		movw r20,r18
 789 047a 60E0      		ldi r22,0
 790 047c 70E0      		ldi r23,0
 791 047e 0E94 0000 		call memset
 792 0482 00C0      		rjmp .L28
 793               	.L29:
  82:lp_solve_5.5/lp_utils.c ****   }
  83:lp_solve_5.5/lp_utils.c ****   else
  84:lp_solve_5.5/lp_utils.c ****     *ptr = (int *) malloc(size * sizeof(**ptr));
 794               		.loc 2 84 0
 795 0484 8D81      		ldd r24,Y+5
 796 0486 9E81      		ldd r25,Y+6
 797 0488 880F      		lsl r24
 798 048a 991F      		rol r25
 799 048c 0E94 0000 		call malloc
 800 0490 9C01      		movw r18,r24
 801 0492 8B81      		ldd r24,Y+3
 802 0494 9C81      		ldd r25,Y+4
 803 0496 FC01      		movw r30,r24
 804 0498 3183      		std Z+1,r19
 805 049a 2083      		st Z,r18
 806               	.L28:
  85:lp_solve_5.5/lp_utils.c ****   if(((*ptr) == NULL) && (size > 0)) {
 807               		.loc 2 85 0
 808 049c 8B81      		ldd r24,Y+3
 809 049e 9C81      		ldd r25,Y+4
 810 04a0 FC01      		movw r30,r24
 811 04a2 8081      		ld r24,Z
 812 04a4 9181      		ldd r25,Z+1
 813 04a6 892B      		or r24,r25
 814 04a8 01F4      		brne .L31
 815               		.loc 2 85 0 is_stmt 0 discriminator 1
 816 04aa 8D81      		ldd r24,Y+5
 817 04ac 9E81      		ldd r25,Y+6
 818 04ae 1816      		cp __zero_reg__,r24
 819 04b0 1906      		cpc __zero_reg__,r25
 820 04b2 04F4      		brge .L31
  86:lp_solve_5.5/lp_utils.c ****     lp->report(lp, CRITICAL, "alloc of %d 'INT' failed\n", size);
 821               		.loc 2 86 0 is_stmt 1
 822 04b4 8981      		ldd r24,Y+1
 823 04b6 9A81      		ldd r25,Y+2
 824 04b8 8E51      		subi r24,30
 825 04ba 9C4F      		sbci r25,-4
 826 04bc FC01      		movw r30,r24
 827 04be 8081      		ld r24,Z
 828 04c0 9181      		ldd r25,Z+1
 829 04c2 2E81      		ldd r18,Y+6
 830 04c4 2F93      		push r18
 831 04c6 2D81      		ldd r18,Y+5
 832 04c8 2F93      		push r18
 833 04ca 20E0      		ldi r18,lo8(.LC2)
 834 04cc 30E0      		ldi r19,hi8(.LC2)
 835 04ce 232F      		mov r18,r19
 836 04d0 2F93      		push r18
 837 04d2 20E0      		ldi r18,lo8(.LC2)
 838 04d4 30E0      		ldi r19,hi8(.LC2)
 839 04d6 2F93      		push r18
 840 04d8 1F92      		push __zero_reg__
 841 04da 21E0      		ldi r18,lo8(1)
 842 04dc 2F93      		push r18
 843 04de 2A81      		ldd r18,Y+2
 844 04e0 2F93      		push r18
 845 04e2 2981      		ldd r18,Y+1
 846 04e4 2F93      		push r18
 847 04e6 FC01      		movw r30,r24
 848 04e8 0995      		icall
 849 04ea 8DB7      		in r24,__SP_L__
 850 04ec 9EB7      		in r25,__SP_H__
 851 04ee 0896      		adiw r24,8
 852 04f0 0FB6      		in __tmp_reg__,__SREG__
 853 04f2 F894      		cli
 854 04f4 DEBF      		out __SP_H__,r29
 855 04f6 0FBE      		out __SREG__,__tmp_reg__
 856 04f8 CDBF      		out __SP_L__,r28
  87:lp_solve_5.5/lp_utils.c ****     lp->spx_status = NOMEMORY;
 857               		.loc 2 87 0
 858 04fa 8981      		ldd r24,Y+1
 859 04fc 9A81      		ldd r25,Y+2
 860 04fe 8A5F      		subi r24,-6
 861 0500 9D4F      		sbci r25,-3
 862 0502 2EEF      		ldi r18,lo8(-2)
 863 0504 3FEF      		ldi r19,lo8(-1)
 864 0506 FC01      		movw r30,r24
 865 0508 3183      		std Z+1,r19
 866 050a 2083      		st Z,r18
  88:lp_solve_5.5/lp_utils.c ****     return( FALSE );
 867               		.loc 2 88 0
 868 050c 80E0      		ldi r24,0
 869 050e 00C0      		rjmp .L32
 870               	.L31:
  89:lp_solve_5.5/lp_utils.c ****   }
  90:lp_solve_5.5/lp_utils.c ****   else
  91:lp_solve_5.5/lp_utils.c ****     return( TRUE );
 871               		.loc 2 91 0
 872 0510 81E0      		ldi r24,lo8(1)
 873               	.L32:
 874               	/* epilogue start */
  92:lp_solve_5.5/lp_utils.c **** }
 875               		.loc 2 92 0
 876 0512 2796      		adiw r28,7
 877 0514 0FB6      		in __tmp_reg__,__SREG__
 878 0516 F894      		cli
 879 0518 DEBF      		out __SP_H__,r29
 880 051a 0FBE      		out __SREG__,__tmp_reg__
 881 051c CDBF      		out __SP_L__,r28
 882 051e DF91      		pop r29
 883 0520 CF91      		pop r28
 884 0522 0895      		ret
 885               		.cfi_endproc
 886               	.LFE12:
 888               		.section	.rodata
 889               	.LC3:
 890 0052 616C 6C6F 		.string	"alloc of %d 'REAL' failed\n"
 890      6320 6F66 
 890      2025 6420 
 890      2752 4541 
 890      4C27 2066 
 891               		.text
 892               	.global	allocREAL
 894               	allocREAL:
 895               	.LFB13:
  93:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL allocREAL(lprec *lp, REAL **ptr, int size, MYBOOL clear)
  94:lp_solve_5.5/lp_utils.c **** {
 896               		.loc 2 94 0
 897               		.cfi_startproc
 898 0524 CF93      		push r28
 899               	.LCFI24:
 900               		.cfi_def_cfa_offset 3
 901               		.cfi_offset 28, -2
 902 0526 DF93      		push r29
 903               	.LCFI25:
 904               		.cfi_def_cfa_offset 4
 905               		.cfi_offset 29, -3
 906 0528 CDB7      		in r28,__SP_L__
 907 052a DEB7      		in r29,__SP_H__
 908               	.LCFI26:
 909               		.cfi_def_cfa_register 28
 910 052c 2797      		sbiw r28,7
 911               	.LCFI27:
 912               		.cfi_def_cfa_offset 11
 913 052e 0FB6      		in __tmp_reg__,__SREG__
 914 0530 F894      		cli
 915 0532 DEBF      		out __SP_H__,r29
 916 0534 0FBE      		out __SREG__,__tmp_reg__
 917 0536 CDBF      		out __SP_L__,r28
 918               	/* prologue: function */
 919               	/* frame size = 7 */
 920               	/* stack size = 9 */
 921               	.L__stack_usage = 9
 922 0538 9A83      		std Y+2,r25
 923 053a 8983      		std Y+1,r24
 924 053c 7C83      		std Y+4,r23
 925 053e 6B83      		std Y+3,r22
 926 0540 5E83      		std Y+6,r21
 927 0542 4D83      		std Y+5,r20
 928 0544 2F83      		std Y+7,r18
  95:lp_solve_5.5/lp_utils.c ****   if(clear == TRUE)
 929               		.loc 2 95 0
 930 0546 8F81      		ldd r24,Y+7
 931 0548 8130      		cpi r24,lo8(1)
 932 054a 01F4      		brne .L34
  96:lp_solve_5.5/lp_utils.c ****     *ptr = (REAL *) calloc(size, sizeof(**ptr));
 933               		.loc 2 96 0
 934 054c 8D81      		ldd r24,Y+5
 935 054e 9E81      		ldd r25,Y+6
 936 0550 64E0      		ldi r22,lo8(4)
 937 0552 70E0      		ldi r23,0
 938 0554 0E94 0000 		call calloc
 939 0558 9C01      		movw r18,r24
 940 055a 8B81      		ldd r24,Y+3
 941 055c 9C81      		ldd r25,Y+4
 942 055e FC01      		movw r30,r24
 943 0560 3183      		std Z+1,r19
 944 0562 2083      		st Z,r18
 945 0564 00C0      		rjmp .L35
 946               	.L34:
  97:lp_solve_5.5/lp_utils.c ****   else if(clear & AUTOMATIC) {
 947               		.loc 2 97 0
 948 0566 8F81      		ldd r24,Y+7
 949 0568 882F      		mov r24,r24
 950 056a 90E0      		ldi r25,0
 951 056c 8270      		andi r24,2
 952 056e 9927      		clr r25
 953 0570 892B      		or r24,r25
 954 0572 01F0      		breq .L36
  98:lp_solve_5.5/lp_utils.c ****     *ptr = (REAL *) realloc(*ptr, size * sizeof(**ptr));
 955               		.loc 2 98 0
 956 0574 8D81      		ldd r24,Y+5
 957 0576 9E81      		ldd r25,Y+6
 958 0578 9C01      		movw r18,r24
 959 057a 220F      		lsl r18
 960 057c 331F      		rol r19
 961 057e 220F      		lsl r18
 962 0580 331F      		rol r19
 963 0582 8B81      		ldd r24,Y+3
 964 0584 9C81      		ldd r25,Y+4
 965 0586 FC01      		movw r30,r24
 966 0588 8081      		ld r24,Z
 967 058a 9181      		ldd r25,Z+1
 968 058c B901      		movw r22,r18
 969 058e 0E94 0000 		call realloc
 970 0592 9C01      		movw r18,r24
 971 0594 8B81      		ldd r24,Y+3
 972 0596 9C81      		ldd r25,Y+4
 973 0598 FC01      		movw r30,r24
 974 059a 3183      		std Z+1,r19
 975 059c 2083      		st Z,r18
  99:lp_solve_5.5/lp_utils.c ****     if(clear & TRUE)
 976               		.loc 2 99 0
 977 059e 8F81      		ldd r24,Y+7
 978 05a0 882F      		mov r24,r24
 979 05a2 90E0      		ldi r25,0
 980 05a4 8170      		andi r24,1
 981 05a6 9927      		clr r25
 982 05a8 892B      		or r24,r25
 983 05aa 01F0      		breq .L35
 100:lp_solve_5.5/lp_utils.c ****       MEMCLEAR(*ptr, size);
 984               		.loc 2 100 0
 985 05ac 8D81      		ldd r24,Y+5
 986 05ae 9E81      		ldd r25,Y+6
 987 05b0 9C01      		movw r18,r24
 988 05b2 220F      		lsl r18
 989 05b4 331F      		rol r19
 990 05b6 220F      		lsl r18
 991 05b8 331F      		rol r19
 992 05ba 8B81      		ldd r24,Y+3
 993 05bc 9C81      		ldd r25,Y+4
 994 05be FC01      		movw r30,r24
 995 05c0 8081      		ld r24,Z
 996 05c2 9181      		ldd r25,Z+1
 997 05c4 A901      		movw r20,r18
 998 05c6 60E0      		ldi r22,0
 999 05c8 70E0      		ldi r23,0
 1000 05ca 0E94 0000 		call memset
 1001 05ce 00C0      		rjmp .L35
 1002               	.L36:
 101:lp_solve_5.5/lp_utils.c ****   }
 102:lp_solve_5.5/lp_utils.c ****   else
 103:lp_solve_5.5/lp_utils.c ****     *ptr = (REAL *) malloc(size * sizeof(**ptr));
 1003               		.loc 2 103 0
 1004 05d0 8D81      		ldd r24,Y+5
 1005 05d2 9E81      		ldd r25,Y+6
 1006 05d4 880F      		lsl r24
 1007 05d6 991F      		rol r25
 1008 05d8 880F      		lsl r24
 1009 05da 991F      		rol r25
 1010 05dc 0E94 0000 		call malloc
 1011 05e0 9C01      		movw r18,r24
 1012 05e2 8B81      		ldd r24,Y+3
 1013 05e4 9C81      		ldd r25,Y+4
 1014 05e6 FC01      		movw r30,r24
 1015 05e8 3183      		std Z+1,r19
 1016 05ea 2083      		st Z,r18
 1017               	.L35:
 104:lp_solve_5.5/lp_utils.c ****   if(((*ptr) == NULL) && (size > 0)) {
 1018               		.loc 2 104 0
 1019 05ec 8B81      		ldd r24,Y+3
 1020 05ee 9C81      		ldd r25,Y+4
 1021 05f0 FC01      		movw r30,r24
 1022 05f2 8081      		ld r24,Z
 1023 05f4 9181      		ldd r25,Z+1
 1024 05f6 892B      		or r24,r25
 1025 05f8 01F4      		brne .L38
 1026               		.loc 2 104 0 is_stmt 0 discriminator 1
 1027 05fa 8D81      		ldd r24,Y+5
 1028 05fc 9E81      		ldd r25,Y+6
 1029 05fe 1816      		cp __zero_reg__,r24
 1030 0600 1906      		cpc __zero_reg__,r25
 1031 0602 04F4      		brge .L38
 105:lp_solve_5.5/lp_utils.c ****     lp->report(lp, CRITICAL, "alloc of %d 'REAL' failed\n", size);
 1032               		.loc 2 105 0 is_stmt 1
 1033 0604 8981      		ldd r24,Y+1
 1034 0606 9A81      		ldd r25,Y+2
 1035 0608 8E51      		subi r24,30
 1036 060a 9C4F      		sbci r25,-4
 1037 060c FC01      		movw r30,r24
 1038 060e 8081      		ld r24,Z
 1039 0610 9181      		ldd r25,Z+1
 1040 0612 2E81      		ldd r18,Y+6
 1041 0614 2F93      		push r18
 1042 0616 2D81      		ldd r18,Y+5
 1043 0618 2F93      		push r18
 1044 061a 20E0      		ldi r18,lo8(.LC3)
 1045 061c 30E0      		ldi r19,hi8(.LC3)
 1046 061e 232F      		mov r18,r19
 1047 0620 2F93      		push r18
 1048 0622 20E0      		ldi r18,lo8(.LC3)
 1049 0624 30E0      		ldi r19,hi8(.LC3)
 1050 0626 2F93      		push r18
 1051 0628 1F92      		push __zero_reg__
 1052 062a 21E0      		ldi r18,lo8(1)
 1053 062c 2F93      		push r18
 1054 062e 2A81      		ldd r18,Y+2
 1055 0630 2F93      		push r18
 1056 0632 2981      		ldd r18,Y+1
 1057 0634 2F93      		push r18
 1058 0636 FC01      		movw r30,r24
 1059 0638 0995      		icall
 1060 063a 8DB7      		in r24,__SP_L__
 1061 063c 9EB7      		in r25,__SP_H__
 1062 063e 0896      		adiw r24,8
 1063 0640 0FB6      		in __tmp_reg__,__SREG__
 1064 0642 F894      		cli
 1065 0644 DEBF      		out __SP_H__,r29
 1066 0646 0FBE      		out __SREG__,__tmp_reg__
 1067 0648 CDBF      		out __SP_L__,r28
 106:lp_solve_5.5/lp_utils.c ****     lp->spx_status = NOMEMORY;
 1068               		.loc 2 106 0
 1069 064a 8981      		ldd r24,Y+1
 1070 064c 9A81      		ldd r25,Y+2
 1071 064e 8A5F      		subi r24,-6
 1072 0650 9D4F      		sbci r25,-3
 1073 0652 2EEF      		ldi r18,lo8(-2)
 1074 0654 3FEF      		ldi r19,lo8(-1)
 1075 0656 FC01      		movw r30,r24
 1076 0658 3183      		std Z+1,r19
 1077 065a 2083      		st Z,r18
 107:lp_solve_5.5/lp_utils.c ****     return( FALSE );
 1078               		.loc 2 107 0
 1079 065c 80E0      		ldi r24,0
 1080 065e 00C0      		rjmp .L39
 1081               	.L38:
 108:lp_solve_5.5/lp_utils.c ****   }
 109:lp_solve_5.5/lp_utils.c ****   else
 110:lp_solve_5.5/lp_utils.c ****     return( TRUE );
 1082               		.loc 2 110 0
 1083 0660 81E0      		ldi r24,lo8(1)
 1084               	.L39:
 1085               	/* epilogue start */
 111:lp_solve_5.5/lp_utils.c **** }
 1086               		.loc 2 111 0
 1087 0662 2796      		adiw r28,7
 1088 0664 0FB6      		in __tmp_reg__,__SREG__
 1089 0666 F894      		cli
 1090 0668 DEBF      		out __SP_H__,r29
 1091 066a 0FBE      		out __SREG__,__tmp_reg__
 1092 066c CDBF      		out __SP_L__,r28
 1093 066e DF91      		pop r29
 1094 0670 CF91      		pop r28
 1095 0672 0895      		ret
 1096               		.cfi_endproc
 1097               	.LFE13:
 1099               		.section	.rodata
 1100               	.LC4:
 1101 006d 616C 6C6F 		.string	"alloc of %d 'LREAL' failed\n"
 1101      6320 6F66 
 1101      2025 6420 
 1101      274C 5245 
 1101      414C 2720 
 1102               		.text
 1103               	.global	allocLREAL
 1105               	allocLREAL:
 1106               	.LFB14:
 112:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL allocLREAL(lprec *lp, LREAL **ptr, int size, MYBOOL clear)
 113:lp_solve_5.5/lp_utils.c **** {
 1107               		.loc 2 113 0
 1108               		.cfi_startproc
 1109 0674 CF93      		push r28
 1110               	.LCFI28:
 1111               		.cfi_def_cfa_offset 3
 1112               		.cfi_offset 28, -2
 1113 0676 DF93      		push r29
 1114               	.LCFI29:
 1115               		.cfi_def_cfa_offset 4
 1116               		.cfi_offset 29, -3
 1117 0678 CDB7      		in r28,__SP_L__
 1118 067a DEB7      		in r29,__SP_H__
 1119               	.LCFI30:
 1120               		.cfi_def_cfa_register 28
 1121 067c 2797      		sbiw r28,7
 1122               	.LCFI31:
 1123               		.cfi_def_cfa_offset 11
 1124 067e 0FB6      		in __tmp_reg__,__SREG__
 1125 0680 F894      		cli
 1126 0682 DEBF      		out __SP_H__,r29
 1127 0684 0FBE      		out __SREG__,__tmp_reg__
 1128 0686 CDBF      		out __SP_L__,r28
 1129               	/* prologue: function */
 1130               	/* frame size = 7 */
 1131               	/* stack size = 9 */
 1132               	.L__stack_usage = 9
 1133 0688 9A83      		std Y+2,r25
 1134 068a 8983      		std Y+1,r24
 1135 068c 7C83      		std Y+4,r23
 1136 068e 6B83      		std Y+3,r22
 1137 0690 5E83      		std Y+6,r21
 1138 0692 4D83      		std Y+5,r20
 1139 0694 2F83      		std Y+7,r18
 114:lp_solve_5.5/lp_utils.c ****   if(clear == TRUE)
 1140               		.loc 2 114 0
 1141 0696 8F81      		ldd r24,Y+7
 1142 0698 8130      		cpi r24,lo8(1)
 1143 069a 01F4      		brne .L41
 115:lp_solve_5.5/lp_utils.c ****     *ptr = (LREAL *) calloc(size, sizeof(**ptr));
 1144               		.loc 2 115 0
 1145 069c 8D81      		ldd r24,Y+5
 1146 069e 9E81      		ldd r25,Y+6
 1147 06a0 64E0      		ldi r22,lo8(4)
 1148 06a2 70E0      		ldi r23,0
 1149 06a4 0E94 0000 		call calloc
 1150 06a8 9C01      		movw r18,r24
 1151 06aa 8B81      		ldd r24,Y+3
 1152 06ac 9C81      		ldd r25,Y+4
 1153 06ae FC01      		movw r30,r24
 1154 06b0 3183      		std Z+1,r19
 1155 06b2 2083      		st Z,r18
 1156 06b4 00C0      		rjmp .L42
 1157               	.L41:
 116:lp_solve_5.5/lp_utils.c ****   else if(clear & AUTOMATIC) {
 1158               		.loc 2 116 0
 1159 06b6 8F81      		ldd r24,Y+7
 1160 06b8 882F      		mov r24,r24
 1161 06ba 90E0      		ldi r25,0
 1162 06bc 8270      		andi r24,2
 1163 06be 9927      		clr r25
 1164 06c0 892B      		or r24,r25
 1165 06c2 01F0      		breq .L43
 117:lp_solve_5.5/lp_utils.c ****     *ptr = (LREAL *) realloc(*ptr, size * sizeof(**ptr));
 1166               		.loc 2 117 0
 1167 06c4 8D81      		ldd r24,Y+5
 1168 06c6 9E81      		ldd r25,Y+6
 1169 06c8 9C01      		movw r18,r24
 1170 06ca 220F      		lsl r18
 1171 06cc 331F      		rol r19
 1172 06ce 220F      		lsl r18
 1173 06d0 331F      		rol r19
 1174 06d2 8B81      		ldd r24,Y+3
 1175 06d4 9C81      		ldd r25,Y+4
 1176 06d6 FC01      		movw r30,r24
 1177 06d8 8081      		ld r24,Z
 1178 06da 9181      		ldd r25,Z+1
 1179 06dc B901      		movw r22,r18
 1180 06de 0E94 0000 		call realloc
 1181 06e2 9C01      		movw r18,r24
 1182 06e4 8B81      		ldd r24,Y+3
 1183 06e6 9C81      		ldd r25,Y+4
 1184 06e8 FC01      		movw r30,r24
 1185 06ea 3183      		std Z+1,r19
 1186 06ec 2083      		st Z,r18
 118:lp_solve_5.5/lp_utils.c ****     if(clear & TRUE)
 1187               		.loc 2 118 0
 1188 06ee 8F81      		ldd r24,Y+7
 1189 06f0 882F      		mov r24,r24
 1190 06f2 90E0      		ldi r25,0
 1191 06f4 8170      		andi r24,1
 1192 06f6 9927      		clr r25
 1193 06f8 892B      		or r24,r25
 1194 06fa 01F0      		breq .L42
 119:lp_solve_5.5/lp_utils.c ****       MEMCLEAR(*ptr, size);
 1195               		.loc 2 119 0
 1196 06fc 8D81      		ldd r24,Y+5
 1197 06fe 9E81      		ldd r25,Y+6
 1198 0700 9C01      		movw r18,r24
 1199 0702 220F      		lsl r18
 1200 0704 331F      		rol r19
 1201 0706 220F      		lsl r18
 1202 0708 331F      		rol r19
 1203 070a 8B81      		ldd r24,Y+3
 1204 070c 9C81      		ldd r25,Y+4
 1205 070e FC01      		movw r30,r24
 1206 0710 8081      		ld r24,Z
 1207 0712 9181      		ldd r25,Z+1
 1208 0714 A901      		movw r20,r18
 1209 0716 60E0      		ldi r22,0
 1210 0718 70E0      		ldi r23,0
 1211 071a 0E94 0000 		call memset
 1212 071e 00C0      		rjmp .L42
 1213               	.L43:
 120:lp_solve_5.5/lp_utils.c ****   }
 121:lp_solve_5.5/lp_utils.c ****   else
 122:lp_solve_5.5/lp_utils.c ****     *ptr = (LREAL *) malloc(size * sizeof(**ptr));
 1214               		.loc 2 122 0
 1215 0720 8D81      		ldd r24,Y+5
 1216 0722 9E81      		ldd r25,Y+6
 1217 0724 880F      		lsl r24
 1218 0726 991F      		rol r25
 1219 0728 880F      		lsl r24
 1220 072a 991F      		rol r25
 1221 072c 0E94 0000 		call malloc
 1222 0730 9C01      		movw r18,r24
 1223 0732 8B81      		ldd r24,Y+3
 1224 0734 9C81      		ldd r25,Y+4
 1225 0736 FC01      		movw r30,r24
 1226 0738 3183      		std Z+1,r19
 1227 073a 2083      		st Z,r18
 1228               	.L42:
 123:lp_solve_5.5/lp_utils.c ****   if(((*ptr) == NULL) && (size > 0)) {
 1229               		.loc 2 123 0
 1230 073c 8B81      		ldd r24,Y+3
 1231 073e 9C81      		ldd r25,Y+4
 1232 0740 FC01      		movw r30,r24
 1233 0742 8081      		ld r24,Z
 1234 0744 9181      		ldd r25,Z+1
 1235 0746 892B      		or r24,r25
 1236 0748 01F4      		brne .L45
 1237               		.loc 2 123 0 is_stmt 0 discriminator 1
 1238 074a 8D81      		ldd r24,Y+5
 1239 074c 9E81      		ldd r25,Y+6
 1240 074e 1816      		cp __zero_reg__,r24
 1241 0750 1906      		cpc __zero_reg__,r25
 1242 0752 04F4      		brge .L45
 124:lp_solve_5.5/lp_utils.c ****     lp->report(lp, CRITICAL, "alloc of %d 'LREAL' failed\n", size);
 1243               		.loc 2 124 0 is_stmt 1
 1244 0754 8981      		ldd r24,Y+1
 1245 0756 9A81      		ldd r25,Y+2
 1246 0758 8E51      		subi r24,30
 1247 075a 9C4F      		sbci r25,-4
 1248 075c FC01      		movw r30,r24
 1249 075e 8081      		ld r24,Z
 1250 0760 9181      		ldd r25,Z+1
 1251 0762 2E81      		ldd r18,Y+6
 1252 0764 2F93      		push r18
 1253 0766 2D81      		ldd r18,Y+5
 1254 0768 2F93      		push r18
 1255 076a 20E0      		ldi r18,lo8(.LC4)
 1256 076c 30E0      		ldi r19,hi8(.LC4)
 1257 076e 232F      		mov r18,r19
 1258 0770 2F93      		push r18
 1259 0772 20E0      		ldi r18,lo8(.LC4)
 1260 0774 30E0      		ldi r19,hi8(.LC4)
 1261 0776 2F93      		push r18
 1262 0778 1F92      		push __zero_reg__
 1263 077a 21E0      		ldi r18,lo8(1)
 1264 077c 2F93      		push r18
 1265 077e 2A81      		ldd r18,Y+2
 1266 0780 2F93      		push r18
 1267 0782 2981      		ldd r18,Y+1
 1268 0784 2F93      		push r18
 1269 0786 FC01      		movw r30,r24
 1270 0788 0995      		icall
 1271 078a 8DB7      		in r24,__SP_L__
 1272 078c 9EB7      		in r25,__SP_H__
 1273 078e 0896      		adiw r24,8
 1274 0790 0FB6      		in __tmp_reg__,__SREG__
 1275 0792 F894      		cli
 1276 0794 DEBF      		out __SP_H__,r29
 1277 0796 0FBE      		out __SREG__,__tmp_reg__
 1278 0798 CDBF      		out __SP_L__,r28
 125:lp_solve_5.5/lp_utils.c ****     lp->spx_status = NOMEMORY;
 1279               		.loc 2 125 0
 1280 079a 8981      		ldd r24,Y+1
 1281 079c 9A81      		ldd r25,Y+2
 1282 079e 8A5F      		subi r24,-6
 1283 07a0 9D4F      		sbci r25,-3
 1284 07a2 2EEF      		ldi r18,lo8(-2)
 1285 07a4 3FEF      		ldi r19,lo8(-1)
 1286 07a6 FC01      		movw r30,r24
 1287 07a8 3183      		std Z+1,r19
 1288 07aa 2083      		st Z,r18
 126:lp_solve_5.5/lp_utils.c ****     return( FALSE );
 1289               		.loc 2 126 0
 1290 07ac 80E0      		ldi r24,0
 1291 07ae 00C0      		rjmp .L46
 1292               	.L45:
 127:lp_solve_5.5/lp_utils.c ****   }
 128:lp_solve_5.5/lp_utils.c ****   else
 129:lp_solve_5.5/lp_utils.c ****     return( TRUE );
 1293               		.loc 2 129 0
 1294 07b0 81E0      		ldi r24,lo8(1)
 1295               	.L46:
 1296               	/* epilogue start */
 130:lp_solve_5.5/lp_utils.c **** }
 1297               		.loc 2 130 0
 1298 07b2 2796      		adiw r28,7
 1299 07b4 0FB6      		in __tmp_reg__,__SREG__
 1300 07b6 F894      		cli
 1301 07b8 DEBF      		out __SP_H__,r29
 1302 07ba 0FBE      		out __SREG__,__tmp_reg__
 1303 07bc CDBF      		out __SP_L__,r28
 1304 07be DF91      		pop r29
 1305 07c0 CF91      		pop r28
 1306 07c2 0895      		ret
 1307               		.cfi_endproc
 1308               	.LFE14:
 1310               		.section	.rodata
 1311               	.LC5:
 1312 0089 6C70 5F73 		.string	"lp_solve_5.5/lp_utils.c"
 1312      6F6C 7665 
 1312      5F35 2E35 
 1312      2F6C 705F 
 1312      7574 696C 
 1313               	.LC6:
 1314 00a1 6672 6565 		.string	"free() failed on line %d of file %s\n"
 1314      2829 2066 
 1314      6169 6C65 
 1314      6420 6F6E 
 1314      206C 696E 
 1315               		.text
 1316               	.global	allocFREE
 1318               	allocFREE:
 1319               	.LFB15:
 131:lp_solve_5.5/lp_utils.c **** 
 132:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL allocFREE(lprec *lp, void **ptr)
 133:lp_solve_5.5/lp_utils.c **** {
 1320               		.loc 2 133 0
 1321               		.cfi_startproc
 1322 07c4 CF93      		push r28
 1323               	.LCFI32:
 1324               		.cfi_def_cfa_offset 3
 1325               		.cfi_offset 28, -2
 1326 07c6 DF93      		push r29
 1327               	.LCFI33:
 1328               		.cfi_def_cfa_offset 4
 1329               		.cfi_offset 29, -3
 1330 07c8 00D0      		rcall .
 1331 07ca 00D0      		rcall .
 1332 07cc 1F92      		push __zero_reg__
 1333               	.LCFI34:
 1334               		.cfi_def_cfa_offset 9
 1335 07ce CDB7      		in r28,__SP_L__
 1336 07d0 DEB7      		in r29,__SP_H__
 1337               	.LCFI35:
 1338               		.cfi_def_cfa_register 28
 1339               	/* prologue: function */
 1340               	/* frame size = 5 */
 1341               	/* stack size = 7 */
 1342               	.L__stack_usage = 7
 1343 07d2 9B83      		std Y+3,r25
 1344 07d4 8A83      		std Y+2,r24
 1345 07d6 7D83      		std Y+5,r23
 1346 07d8 6C83      		std Y+4,r22
 134:lp_solve_5.5/lp_utils.c ****   MYBOOL status = TRUE;
 1347               		.loc 2 134 0
 1348 07da 81E0      		ldi r24,lo8(1)
 1349 07dc 8983      		std Y+1,r24
 135:lp_solve_5.5/lp_utils.c **** 
 136:lp_solve_5.5/lp_utils.c ****   if(*ptr != NULL) {
 1350               		.loc 2 136 0
 1351 07de 8C81      		ldd r24,Y+4
 1352 07e0 9D81      		ldd r25,Y+5
 1353 07e2 FC01      		movw r30,r24
 1354 07e4 8081      		ld r24,Z
 1355 07e6 9181      		ldd r25,Z+1
 1356 07e8 892B      		or r24,r25
 1357 07ea 01F0      		breq .L48
 137:lp_solve_5.5/lp_utils.c ****     free(*ptr);
 1358               		.loc 2 137 0
 1359 07ec 8C81      		ldd r24,Y+4
 1360 07ee 9D81      		ldd r25,Y+5
 1361 07f0 FC01      		movw r30,r24
 1362 07f2 8081      		ld r24,Z
 1363 07f4 9181      		ldd r25,Z+1
 1364 07f6 0E94 0000 		call free
 138:lp_solve_5.5/lp_utils.c ****     *ptr = NULL;
 1365               		.loc 2 138 0
 1366 07fa 8C81      		ldd r24,Y+4
 1367 07fc 9D81      		ldd r25,Y+5
 1368 07fe FC01      		movw r30,r24
 1369 0800 1182      		std Z+1,__zero_reg__
 1370 0802 1082      		st Z,__zero_reg__
 1371 0804 00C0      		rjmp .L49
 1372               	.L48:
 139:lp_solve_5.5/lp_utils.c ****   }
 140:lp_solve_5.5/lp_utils.c ****   else {
 141:lp_solve_5.5/lp_utils.c ****     status = FALSE;
 1373               		.loc 2 141 0
 1374 0806 1982      		std Y+1,__zero_reg__
 142:lp_solve_5.5/lp_utils.c ****     lp->report(lp, CRITICAL, "free() failed on line %d of file %s\n",
 1375               		.loc 2 142 0
 1376 0808 8A81      		ldd r24,Y+2
 1377 080a 9B81      		ldd r25,Y+3
 1378 080c 8E51      		subi r24,30
 1379 080e 9C4F      		sbci r25,-4
 1380 0810 FC01      		movw r30,r24
 1381 0812 8081      		ld r24,Z
 1382 0814 9181      		ldd r25,Z+1
 1383 0816 20E0      		ldi r18,lo8(.LC5)
 1384 0818 30E0      		ldi r19,hi8(.LC5)
 1385 081a 232F      		mov r18,r19
 1386 081c 2F93      		push r18
 1387 081e 20E0      		ldi r18,lo8(.LC5)
 1388 0820 30E0      		ldi r19,hi8(.LC5)
 1389 0822 2F93      		push r18
 1390 0824 1F92      		push __zero_reg__
 1391 0826 2FE8      		ldi r18,lo8(-113)
 1392 0828 2F93      		push r18
 1393 082a 20E0      		ldi r18,lo8(.LC6)
 1394 082c 30E0      		ldi r19,hi8(.LC6)
 1395 082e 232F      		mov r18,r19
 1396 0830 2F93      		push r18
 1397 0832 20E0      		ldi r18,lo8(.LC6)
 1398 0834 30E0      		ldi r19,hi8(.LC6)
 1399 0836 2F93      		push r18
 1400 0838 1F92      		push __zero_reg__
 1401 083a 21E0      		ldi r18,lo8(1)
 1402 083c 2F93      		push r18
 1403 083e 2B81      		ldd r18,Y+3
 1404 0840 2F93      		push r18
 1405 0842 2A81      		ldd r18,Y+2
 1406 0844 2F93      		push r18
 1407 0846 FC01      		movw r30,r24
 1408 0848 0995      		icall
 1409 084a 8DB7      		in r24,__SP_L__
 1410 084c 9EB7      		in r25,__SP_H__
 1411 084e 0A96      		adiw r24,10
 1412 0850 0FB6      		in __tmp_reg__,__SREG__
 1413 0852 F894      		cli
 1414 0854 DEBF      		out __SP_H__,r29
 1415 0856 0FBE      		out __SREG__,__tmp_reg__
 1416 0858 CDBF      		out __SP_L__,r28
 1417               	.L49:
 143:lp_solve_5.5/lp_utils.c ****                              __LINE__, __FILE__);
 144:lp_solve_5.5/lp_utils.c ****   }
 145:lp_solve_5.5/lp_utils.c ****   return(status);
 1418               		.loc 2 145 0
 1419 085a 8981      		ldd r24,Y+1
 1420               	/* epilogue start */
 146:lp_solve_5.5/lp_utils.c **** }
 1421               		.loc 2 146 0
 1422 085c 0F90      		pop __tmp_reg__
 1423 085e 0F90      		pop __tmp_reg__
 1424 0860 0F90      		pop __tmp_reg__
 1425 0862 0F90      		pop __tmp_reg__
 1426 0864 0F90      		pop __tmp_reg__
 1427 0866 DF91      		pop r29
 1428 0868 CF91      		pop r28
 1429 086a 0895      		ret
 1430               		.cfi_endproc
 1431               	.LFE15:
 1433               	.global	comp_bits
 1435               	comp_bits:
 1436               	.LFB16:
 147:lp_solve_5.5/lp_utils.c **** 
 148:lp_solve_5.5/lp_utils.c **** /* Do hoops to provide debugging info with FORTIFY */
 149:lp_solve_5.5/lp_utils.c **** #undef CODE_lp_utils
 150:lp_solve_5.5/lp_utils.c **** #include "lp_utils.h"
 151:lp_solve_5.5/lp_utils.c **** /* alloc-routines should always be before this line! */
 152:lp_solve_5.5/lp_utils.c **** 
 153:lp_solve_5.5/lp_utils.c **** int comp_bits(MYBOOL *bitarray1, MYBOOL *bitarray2, int items)
 154:lp_solve_5.5/lp_utils.c **** {
 1437               		.loc 2 154 0
 1438               		.cfi_startproc
 1439 086c CF93      		push r28
 1440               	.LCFI36:
 1441               		.cfi_def_cfa_offset 3
 1442               		.cfi_offset 28, -2
 1443 086e DF93      		push r29
 1444               	.LCFI37:
 1445               		.cfi_def_cfa_offset 4
 1446               		.cfi_offset 29, -3
 1447 0870 CDB7      		in r28,__SP_L__
 1448 0872 DEB7      		in r29,__SP_H__
 1449               	.LCFI38:
 1450               		.cfi_def_cfa_register 28
 1451 0874 6397      		sbiw r28,19
 1452               	.LCFI39:
 1453               		.cfi_def_cfa_offset 23
 1454 0876 0FB6      		in __tmp_reg__,__SREG__
 1455 0878 F894      		cli
 1456 087a DEBF      		out __SP_H__,r29
 1457 087c 0FBE      		out __SREG__,__tmp_reg__
 1458 087e CDBF      		out __SP_L__,r28
 1459               	/* prologue: function */
 1460               	/* frame size = 19 */
 1461               	/* stack size = 21 */
 1462               	.L__stack_usage = 21
 1463 0880 9F87      		std Y+15,r25
 1464 0882 8E87      		std Y+14,r24
 1465 0884 798B      		std Y+17,r23
 1466 0886 688B      		std Y+16,r22
 1467 0888 5B8B      		std Y+19,r21
 1468 088a 4A8B      		std Y+18,r20
 155:lp_solve_5.5/lp_utils.c ****   int            i, items4, left = 0, right = 0;
 1469               		.loc 2 155 0
 1470 088c 1C82      		std Y+4,__zero_reg__
 1471 088e 1B82      		std Y+3,__zero_reg__
 1472 0890 1E82      		std Y+6,__zero_reg__
 1473 0892 1D82      		std Y+5,__zero_reg__
 156:lp_solve_5.5/lp_utils.c ****   MYBOOL         comp1;
 157:lp_solve_5.5/lp_utils.c ****   unsigned long comp4;
 158:lp_solve_5.5/lp_utils.c **** 
 159:lp_solve_5.5/lp_utils.c ****   /* Convert items count to 8-bit representation, if necessary */
 160:lp_solve_5.5/lp_utils.c ****   if(items > 0) {
 1474               		.loc 2 160 0
 1475 0894 8A89      		ldd r24,Y+18
 1476 0896 9B89      		ldd r25,Y+19
 1477 0898 1816      		cp __zero_reg__,r24
 1478 089a 1906      		cpc __zero_reg__,r25
 1479 089c 04F4      		brge .L52
 161:lp_solve_5.5/lp_utils.c ****     i = items % 8;
 1480               		.loc 2 161 0
 1481 089e 8A89      		ldd r24,Y+18
 1482 08a0 9B89      		ldd r25,Y+19
 1483 08a2 8770      		andi r24,7
 1484 08a4 9078      		andi r25,128
 1485 08a6 9923      		tst r25
 1486 08a8 04F4      		brge .L53
 1487 08aa 0197      		sbiw r24,1
 1488 08ac 886F      		ori r24,248
 1489 08ae 9F6F      		ori r25,255
 1490 08b0 0196      		adiw r24,1
 1491               	.L53:
 1492 08b2 9A83      		std Y+2,r25
 1493 08b4 8983      		std Y+1,r24
 162:lp_solve_5.5/lp_utils.c ****     items /= 8;
 1494               		.loc 2 162 0
 1495 08b6 8A89      		ldd r24,Y+18
 1496 08b8 9B89      		ldd r25,Y+19
 1497 08ba 9923      		tst r25
 1498 08bc 04F4      		brge .L54
 1499 08be 0796      		adiw r24,7
 1500               	.L54:
 1501 08c0 9595      		asr r25
 1502 08c2 8795      		ror r24
 1503 08c4 9595      		asr r25
 1504 08c6 8795      		ror r24
 1505 08c8 9595      		asr r25
 1506 08ca 8795      		ror r24
 1507 08cc 9B8B      		std Y+19,r25
 1508 08ce 8A8B      		std Y+18,r24
 163:lp_solve_5.5/lp_utils.c ****     if(i)
 1509               		.loc 2 163 0
 1510 08d0 8981      		ldd r24,Y+1
 1511 08d2 9A81      		ldd r25,Y+2
 1512 08d4 892B      		or r24,r25
 1513 08d6 01F0      		breq .L56
 164:lp_solve_5.5/lp_utils.c ****       items++;
 1514               		.loc 2 164 0
 1515 08d8 8A89      		ldd r24,Y+18
 1516 08da 9B89      		ldd r25,Y+19
 1517 08dc 0196      		adiw r24,1
 1518 08de 9B8B      		std Y+19,r25
 1519 08e0 8A8B      		std Y+18,r24
 1520 08e2 00C0      		rjmp .L56
 1521               	.L52:
 165:lp_solve_5.5/lp_utils.c ****   }
 166:lp_solve_5.5/lp_utils.c ****   else
 167:lp_solve_5.5/lp_utils.c ****     items = -items;
 1522               		.loc 2 167 0
 1523 08e4 8A89      		ldd r24,Y+18
 1524 08e6 9B89      		ldd r25,Y+19
 1525 08e8 9195      		neg r25
 1526 08ea 8195      		neg r24
 1527 08ec 9109      		sbc r25,__zero_reg__
 1528 08ee 9B8B      		std Y+19,r25
 1529 08f0 8A8B      		std Y+18,r24
 1530               	.L56:
 168:lp_solve_5.5/lp_utils.c **** 
 169:lp_solve_5.5/lp_utils.c ****   /* Do the wide unsigned integer part for speed */
 170:lp_solve_5.5/lp_utils.c ****   items4 = items / sizeof(unsigned long);
 1531               		.loc 2 170 0
 1532 08f2 8A89      		ldd r24,Y+18
 1533 08f4 9B89      		ldd r25,Y+19
 1534 08f6 9695      		lsr r25
 1535 08f8 8795      		ror r24
 1536 08fa 9695      		lsr r25
 1537 08fc 8795      		ror r24
 1538 08fe 9887      		std Y+8,r25
 1539 0900 8F83      		std Y+7,r24
 171:lp_solve_5.5/lp_utils.c ****   i = 0;
 1540               		.loc 2 171 0
 1541 0902 1A82      		std Y+2,__zero_reg__
 1542 0904 1982      		std Y+1,__zero_reg__
 172:lp_solve_5.5/lp_utils.c ****   while(i < items4) {
 1543               		.loc 2 172 0
 1544 0906 00C0      		rjmp .L57
 1545               	.L60:
 173:lp_solve_5.5/lp_utils.c ****     comp4 = ((unsigned long *) bitarray1)[i] &  ~((unsigned long *) bitarray2)[i];
 1546               		.loc 2 173 0
 1547 0908 8981      		ldd r24,Y+1
 1548 090a 9A81      		ldd r25,Y+2
 1549 090c 880F      		lsl r24
 1550 090e 991F      		rol r25
 1551 0910 880F      		lsl r24
 1552 0912 991F      		rol r25
 1553 0914 2E85      		ldd r18,Y+14
 1554 0916 3F85      		ldd r19,Y+15
 1555 0918 820F      		add r24,r18
 1556 091a 931F      		adc r25,r19
 1557 091c FC01      		movw r30,r24
 1558 091e 2081      		ld r18,Z
 1559 0920 3181      		ldd r19,Z+1
 1560 0922 4281      		ldd r20,Z+2
 1561 0924 5381      		ldd r21,Z+3
 1562 0926 8981      		ldd r24,Y+1
 1563 0928 9A81      		ldd r25,Y+2
 1564 092a 880F      		lsl r24
 1565 092c 991F      		rol r25
 1566 092e 880F      		lsl r24
 1567 0930 991F      		rol r25
 1568 0932 6889      		ldd r22,Y+16
 1569 0934 7989      		ldd r23,Y+17
 1570 0936 860F      		add r24,r22
 1571 0938 971F      		adc r25,r23
 1572 093a FC01      		movw r30,r24
 1573 093c 8081      		ld r24,Z
 1574 093e 9181      		ldd r25,Z+1
 1575 0940 A281      		ldd r26,Z+2
 1576 0942 B381      		ldd r27,Z+3
 1577 0944 8095      		com r24
 1578 0946 9095      		com r25
 1579 0948 A095      		com r26
 1580 094a B095      		com r27
 1581 094c 8223      		and r24,r18
 1582 094e 9323      		and r25,r19
 1583 0950 A423      		and r26,r20
 1584 0952 B523      		and r27,r21
 1585 0954 8987      		std Y+9,r24
 1586 0956 9A87      		std Y+10,r25
 1587 0958 AB87      		std Y+11,r26
 1588 095a BC87      		std Y+12,r27
 174:lp_solve_5.5/lp_utils.c ****     if(comp4)
 1589               		.loc 2 174 0
 1590 095c 8985      		ldd r24,Y+9
 1591 095e 9A85      		ldd r25,Y+10
 1592 0960 AB85      		ldd r26,Y+11
 1593 0962 BC85      		ldd r27,Y+12
 1594 0964 892B      		or r24,r25
 1595 0966 8A2B      		or r24,r26
 1596 0968 8B2B      		or r24,r27
 1597 096a 01F0      		breq .L58
 175:lp_solve_5.5/lp_utils.c ****       left++;
 1598               		.loc 2 175 0
 1599 096c 8B81      		ldd r24,Y+3
 1600 096e 9C81      		ldd r25,Y+4
 1601 0970 0196      		adiw r24,1
 1602 0972 9C83      		std Y+4,r25
 1603 0974 8B83      		std Y+3,r24
 1604               	.L58:
 176:lp_solve_5.5/lp_utils.c ****     comp4 = ((unsigned long *) bitarray2)[i] &  ~((unsigned long *) bitarray1)[i];
 1605               		.loc 2 176 0
 1606 0976 8981      		ldd r24,Y+1
 1607 0978 9A81      		ldd r25,Y+2
 1608 097a 880F      		lsl r24
 1609 097c 991F      		rol r25
 1610 097e 880F      		lsl r24
 1611 0980 991F      		rol r25
 1612 0982 2889      		ldd r18,Y+16
 1613 0984 3989      		ldd r19,Y+17
 1614 0986 820F      		add r24,r18
 1615 0988 931F      		adc r25,r19
 1616 098a FC01      		movw r30,r24
 1617 098c 2081      		ld r18,Z
 1618 098e 3181      		ldd r19,Z+1
 1619 0990 4281      		ldd r20,Z+2
 1620 0992 5381      		ldd r21,Z+3
 1621 0994 8981      		ldd r24,Y+1
 1622 0996 9A81      		ldd r25,Y+2
 1623 0998 880F      		lsl r24
 1624 099a 991F      		rol r25
 1625 099c 880F      		lsl r24
 1626 099e 991F      		rol r25
 1627 09a0 6E85      		ldd r22,Y+14
 1628 09a2 7F85      		ldd r23,Y+15
 1629 09a4 860F      		add r24,r22
 1630 09a6 971F      		adc r25,r23
 1631 09a8 FC01      		movw r30,r24
 1632 09aa 8081      		ld r24,Z
 1633 09ac 9181      		ldd r25,Z+1
 1634 09ae A281      		ldd r26,Z+2
 1635 09b0 B381      		ldd r27,Z+3
 1636 09b2 8095      		com r24
 1637 09b4 9095      		com r25
 1638 09b6 A095      		com r26
 1639 09b8 B095      		com r27
 1640 09ba 8223      		and r24,r18
 1641 09bc 9323      		and r25,r19
 1642 09be A423      		and r26,r20
 1643 09c0 B523      		and r27,r21
 1644 09c2 8987      		std Y+9,r24
 1645 09c4 9A87      		std Y+10,r25
 1646 09c6 AB87      		std Y+11,r26
 1647 09c8 BC87      		std Y+12,r27
 177:lp_solve_5.5/lp_utils.c ****     if(comp4)
 1648               		.loc 2 177 0
 1649 09ca 8985      		ldd r24,Y+9
 1650 09cc 9A85      		ldd r25,Y+10
 1651 09ce AB85      		ldd r26,Y+11
 1652 09d0 BC85      		ldd r27,Y+12
 1653 09d2 892B      		or r24,r25
 1654 09d4 8A2B      		or r24,r26
 1655 09d6 8B2B      		or r24,r27
 1656 09d8 01F0      		breq .L59
 178:lp_solve_5.5/lp_utils.c ****       right++;
 1657               		.loc 2 178 0
 1658 09da 8D81      		ldd r24,Y+5
 1659 09dc 9E81      		ldd r25,Y+6
 1660 09de 0196      		adiw r24,1
 1661 09e0 9E83      		std Y+6,r25
 1662 09e2 8D83      		std Y+5,r24
 1663               	.L59:
 179:lp_solve_5.5/lp_utils.c ****     i++;
 1664               		.loc 2 179 0
 1665 09e4 8981      		ldd r24,Y+1
 1666 09e6 9A81      		ldd r25,Y+2
 1667 09e8 0196      		adiw r24,1
 1668 09ea 9A83      		std Y+2,r25
 1669 09ec 8983      		std Y+1,r24
 1670               	.L57:
 172:lp_solve_5.5/lp_utils.c ****     comp4 = ((unsigned long *) bitarray1)[i] &  ~((unsigned long *) bitarray2)[i];
 1671               		.loc 2 172 0
 1672 09ee 2981      		ldd r18,Y+1
 1673 09f0 3A81      		ldd r19,Y+2
 1674 09f2 8F81      		ldd r24,Y+7
 1675 09f4 9885      		ldd r25,Y+8
 1676 09f6 2817      		cp r18,r24
 1677 09f8 3907      		cpc r19,r25
 1678 09fa 04F4      		brge .+2
 1679 09fc 00C0      		rjmp .L60
 180:lp_solve_5.5/lp_utils.c ****   }
 181:lp_solve_5.5/lp_utils.c **** 
 182:lp_solve_5.5/lp_utils.c ****   /* Do the trailing slow narrow unsigned integer part */
 183:lp_solve_5.5/lp_utils.c ****   i *= sizeof(unsigned long);
 1680               		.loc 2 183 0
 1681 09fe 8981      		ldd r24,Y+1
 1682 0a00 9A81      		ldd r25,Y+2
 1683 0a02 880F      		lsl r24
 1684 0a04 991F      		rol r25
 1685 0a06 880F      		lsl r24
 1686 0a08 991F      		rol r25
 1687 0a0a 9A83      		std Y+2,r25
 1688 0a0c 8983      		std Y+1,r24
 184:lp_solve_5.5/lp_utils.c ****   i++;
 1689               		.loc 2 184 0
 1690 0a0e 8981      		ldd r24,Y+1
 1691 0a10 9A81      		ldd r25,Y+2
 1692 0a12 0196      		adiw r24,1
 1693 0a14 9A83      		std Y+2,r25
 1694 0a16 8983      		std Y+1,r24
 185:lp_solve_5.5/lp_utils.c ****   while(i < items) {
 1695               		.loc 2 185 0
 1696 0a18 00C0      		rjmp .L61
 1697               	.L64:
 186:lp_solve_5.5/lp_utils.c ****     comp1 = bitarray1[i] & ~bitarray2[i];
 1698               		.loc 2 186 0
 1699 0a1a 8981      		ldd r24,Y+1
 1700 0a1c 9A81      		ldd r25,Y+2
 1701 0a1e 2E85      		ldd r18,Y+14
 1702 0a20 3F85      		ldd r19,Y+15
 1703 0a22 820F      		add r24,r18
 1704 0a24 931F      		adc r25,r19
 1705 0a26 FC01      		movw r30,r24
 1706 0a28 8081      		ld r24,Z
 1707 0a2a 482F      		mov r20,r24
 1708 0a2c 8981      		ldd r24,Y+1
 1709 0a2e 9A81      		ldd r25,Y+2
 1710 0a30 2889      		ldd r18,Y+16
 1711 0a32 3989      		ldd r19,Y+17
 1712 0a34 820F      		add r24,r18
 1713 0a36 931F      		adc r25,r19
 1714 0a38 FC01      		movw r30,r24
 1715 0a3a 8081      		ld r24,Z
 1716 0a3c 8095      		com r24
 1717 0a3e 8423      		and r24,r20
 1718 0a40 8D87      		std Y+13,r24
 187:lp_solve_5.5/lp_utils.c ****     if(comp1)
 1719               		.loc 2 187 0
 1720 0a42 8D85      		ldd r24,Y+13
 1721 0a44 8823      		tst r24
 1722 0a46 01F0      		breq .L62
 188:lp_solve_5.5/lp_utils.c ****       left++;
 1723               		.loc 2 188 0
 1724 0a48 8B81      		ldd r24,Y+3
 1725 0a4a 9C81      		ldd r25,Y+4
 1726 0a4c 0196      		adiw r24,1
 1727 0a4e 9C83      		std Y+4,r25
 1728 0a50 8B83      		std Y+3,r24
 1729               	.L62:
 189:lp_solve_5.5/lp_utils.c ****     comp1 = bitarray2[i] & ~bitarray1[i];
 1730               		.loc 2 189 0
 1731 0a52 8981      		ldd r24,Y+1
 1732 0a54 9A81      		ldd r25,Y+2
 1733 0a56 2889      		ldd r18,Y+16
 1734 0a58 3989      		ldd r19,Y+17
 1735 0a5a 820F      		add r24,r18
 1736 0a5c 931F      		adc r25,r19
 1737 0a5e FC01      		movw r30,r24
 1738 0a60 8081      		ld r24,Z
 1739 0a62 482F      		mov r20,r24
 1740 0a64 8981      		ldd r24,Y+1
 1741 0a66 9A81      		ldd r25,Y+2
 1742 0a68 2E85      		ldd r18,Y+14
 1743 0a6a 3F85      		ldd r19,Y+15
 1744 0a6c 820F      		add r24,r18
 1745 0a6e 931F      		adc r25,r19
 1746 0a70 FC01      		movw r30,r24
 1747 0a72 8081      		ld r24,Z
 1748 0a74 8095      		com r24
 1749 0a76 8423      		and r24,r20
 1750 0a78 8D87      		std Y+13,r24
 190:lp_solve_5.5/lp_utils.c ****     if(comp1)
 1751               		.loc 2 190 0
 1752 0a7a 8D85      		ldd r24,Y+13
 1753 0a7c 8823      		tst r24
 1754 0a7e 01F0      		breq .L63
 191:lp_solve_5.5/lp_utils.c ****       right++;
 1755               		.loc 2 191 0
 1756 0a80 8D81      		ldd r24,Y+5
 1757 0a82 9E81      		ldd r25,Y+6
 1758 0a84 0196      		adiw r24,1
 1759 0a86 9E83      		std Y+6,r25
 1760 0a88 8D83      		std Y+5,r24
 1761               	.L63:
 192:lp_solve_5.5/lp_utils.c ****     i++;
 1762               		.loc 2 192 0
 1763 0a8a 8981      		ldd r24,Y+1
 1764 0a8c 9A81      		ldd r25,Y+2
 1765 0a8e 0196      		adiw r24,1
 1766 0a90 9A83      		std Y+2,r25
 1767 0a92 8983      		std Y+1,r24
 1768               	.L61:
 185:lp_solve_5.5/lp_utils.c ****     comp1 = bitarray1[i] & ~bitarray2[i];
 1769               		.loc 2 185 0
 1770 0a94 2981      		ldd r18,Y+1
 1771 0a96 3A81      		ldd r19,Y+2
 1772 0a98 8A89      		ldd r24,Y+18
 1773 0a9a 9B89      		ldd r25,Y+19
 1774 0a9c 2817      		cp r18,r24
 1775 0a9e 3907      		cpc r19,r25
 1776 0aa0 04F4      		brge .+2
 1777 0aa2 00C0      		rjmp .L64
 193:lp_solve_5.5/lp_utils.c ****   }
 194:lp_solve_5.5/lp_utils.c **** 
 195:lp_solve_5.5/lp_utils.c ****   /* Determine set comparison outcomes */
 196:lp_solve_5.5/lp_utils.c ****   if((left > 0) && (right == 0))         /* array1 is a superset of array2 */
 1778               		.loc 2 196 0
 1779 0aa4 8B81      		ldd r24,Y+3
 1780 0aa6 9C81      		ldd r25,Y+4
 1781 0aa8 1816      		cp __zero_reg__,r24
 1782 0aaa 1906      		cpc __zero_reg__,r25
 1783 0aac 04F4      		brge .L65
 1784               		.loc 2 196 0 is_stmt 0 discriminator 1
 1785 0aae 8D81      		ldd r24,Y+5
 1786 0ab0 9E81      		ldd r25,Y+6
 1787 0ab2 892B      		or r24,r25
 1788 0ab4 01F4      		brne .L65
 197:lp_solve_5.5/lp_utils.c ****     i = 1;
 1789               		.loc 2 197 0 is_stmt 1
 1790 0ab6 81E0      		ldi r24,lo8(1)
 1791 0ab8 90E0      		ldi r25,0
 1792 0aba 9A83      		std Y+2,r25
 1793 0abc 8983      		std Y+1,r24
 1794 0abe 00C0      		rjmp .L66
 1795               	.L65:
 198:lp_solve_5.5/lp_utils.c ****   else if((left == 0) && (right > 0))   /* array2 is a superset of array1 */
 1796               		.loc 2 198 0
 1797 0ac0 8B81      		ldd r24,Y+3
 1798 0ac2 9C81      		ldd r25,Y+4
 1799 0ac4 892B      		or r24,r25
 1800 0ac6 01F4      		brne .L67
 1801               		.loc 2 198 0 is_stmt 0 discriminator 1
 1802 0ac8 8D81      		ldd r24,Y+5
 1803 0aca 9E81      		ldd r25,Y+6
 1804 0acc 1816      		cp __zero_reg__,r24
 1805 0ace 1906      		cpc __zero_reg__,r25
 1806 0ad0 04F4      		brge .L67
 199:lp_solve_5.5/lp_utils.c ****     i = -1;
 1807               		.loc 2 199 0 is_stmt 1
 1808 0ad2 8FEF      		ldi r24,lo8(-1)
 1809 0ad4 9FEF      		ldi r25,lo8(-1)
 1810 0ad6 9A83      		std Y+2,r25
 1811 0ad8 8983      		std Y+1,r24
 1812 0ada 00C0      		rjmp .L66
 1813               	.L67:
 200:lp_solve_5.5/lp_utils.c ****   else if((left == 0) && (right == 0))  /* array1 and array2 are identical */
 1814               		.loc 2 200 0
 1815 0adc 8B81      		ldd r24,Y+3
 1816 0ade 9C81      		ldd r25,Y+4
 1817 0ae0 892B      		or r24,r25
 1818 0ae2 01F4      		brne .L68
 1819               		.loc 2 200 0 is_stmt 0 discriminator 1
 1820 0ae4 8D81      		ldd r24,Y+5
 1821 0ae6 9E81      		ldd r25,Y+6
 1822 0ae8 892B      		or r24,r25
 1823 0aea 01F4      		brne .L68
 201:lp_solve_5.5/lp_utils.c ****     i = 0;
 1824               		.loc 2 201 0 is_stmt 1
 1825 0aec 1A82      		std Y+2,__zero_reg__
 1826 0aee 1982      		std Y+1,__zero_reg__
 1827 0af0 00C0      		rjmp .L66
 1828               	.L68:
 202:lp_solve_5.5/lp_utils.c ****   else
 203:lp_solve_5.5/lp_utils.c ****     i = -2;                              /* indicate all other outcomes */
 1829               		.loc 2 203 0
 1830 0af2 8EEF      		ldi r24,lo8(-2)
 1831 0af4 9FEF      		ldi r25,lo8(-1)
 1832 0af6 9A83      		std Y+2,r25
 1833 0af8 8983      		std Y+1,r24
 1834               	.L66:
 204:lp_solve_5.5/lp_utils.c ****   return( i );
 1835               		.loc 2 204 0
 1836 0afa 8981      		ldd r24,Y+1
 1837 0afc 9A81      		ldd r25,Y+2
 1838               	/* epilogue start */
 205:lp_solve_5.5/lp_utils.c **** }
 1839               		.loc 2 205 0
 1840 0afe 6396      		adiw r28,19
 1841 0b00 0FB6      		in __tmp_reg__,__SREG__
 1842 0b02 F894      		cli
 1843 0b04 DEBF      		out __SP_H__,r29
 1844 0b06 0FBE      		out __SREG__,__tmp_reg__
 1845 0b08 CDBF      		out __SP_L__,r28
 1846 0b0a DF91      		pop r29
 1847 0b0c CF91      		pop r28
 1848 0b0e 0895      		ret
 1849               		.cfi_endproc
 1850               	.LFE16:
 1852               	.global	mempool_create
 1854               	mempool_create:
 1855               	.LFB17:
 206:lp_solve_5.5/lp_utils.c **** 
 207:lp_solve_5.5/lp_utils.c **** 
 208:lp_solve_5.5/lp_utils.c **** STATIC workarraysrec *mempool_create(lprec *lp)
 209:lp_solve_5.5/lp_utils.c **** {
 1856               		.loc 2 209 0
 1857               		.cfi_startproc
 1858 0b10 CF93      		push r28
 1859               	.LCFI40:
 1860               		.cfi_def_cfa_offset 3
 1861               		.cfi_offset 28, -2
 1862 0b12 DF93      		push r29
 1863               	.LCFI41:
 1864               		.cfi_def_cfa_offset 4
 1865               		.cfi_offset 29, -3
 1866 0b14 00D0      		rcall .
 1867 0b16 00D0      		rcall .
 1868               	.LCFI42:
 1869               		.cfi_def_cfa_offset 8
 1870 0b18 CDB7      		in r28,__SP_L__
 1871 0b1a DEB7      		in r29,__SP_H__
 1872               	.LCFI43:
 1873               		.cfi_def_cfa_register 28
 1874               	/* prologue: function */
 1875               	/* frame size = 4 */
 1876               	/* stack size = 6 */
 1877               	.L__stack_usage = 6
 1878 0b1c 9C83      		std Y+4,r25
 1879 0b1e 8B83      		std Y+3,r24
 210:lp_solve_5.5/lp_utils.c ****   workarraysrec *temp;
 211:lp_solve_5.5/lp_utils.c ****   temp = (workarraysrec *) calloc(1, sizeof(workarraysrec));
 1880               		.loc 2 211 0
 1881 0b20 6AE0      		ldi r22,lo8(10)
 1882 0b22 70E0      		ldi r23,0
 1883 0b24 81E0      		ldi r24,lo8(1)
 1884 0b26 90E0      		ldi r25,0
 1885 0b28 0E94 0000 		call calloc
 1886 0b2c 9A83      		std Y+2,r25
 1887 0b2e 8983      		std Y+1,r24
 212:lp_solve_5.5/lp_utils.c ****   temp->lp = lp;
 1888               		.loc 2 212 0
 1889 0b30 8981      		ldd r24,Y+1
 1890 0b32 9A81      		ldd r25,Y+2
 1891 0b34 2B81      		ldd r18,Y+3
 1892 0b36 3C81      		ldd r19,Y+4
 1893 0b38 FC01      		movw r30,r24
 1894 0b3a 3183      		std Z+1,r19
 1895 0b3c 2083      		st Z,r18
 213:lp_solve_5.5/lp_utils.c ****   return( temp );
 1896               		.loc 2 213 0
 1897 0b3e 8981      		ldd r24,Y+1
 1898 0b40 9A81      		ldd r25,Y+2
 1899               	/* epilogue start */
 214:lp_solve_5.5/lp_utils.c **** }
 1900               		.loc 2 214 0
 1901 0b42 0F90      		pop __tmp_reg__
 1902 0b44 0F90      		pop __tmp_reg__
 1903 0b46 0F90      		pop __tmp_reg__
 1904 0b48 0F90      		pop __tmp_reg__
 1905 0b4a DF91      		pop r29
 1906 0b4c CF91      		pop r28
 1907 0b4e 0895      		ret
 1908               		.cfi_endproc
 1909               	.LFE17:
 1911               	.global	mempool_obtainVector
 1913               	mempool_obtainVector:
 1914               	.LFB18:
 215:lp_solve_5.5/lp_utils.c **** STATIC char *mempool_obtainVector(workarraysrec *mempool, int count, int unitsize)
 216:lp_solve_5.5/lp_utils.c **** {
 1915               		.loc 2 216 0
 1916               		.cfi_startproc
 1917 0b50 CF93      		push r28
 1918               	.LCFI44:
 1919               		.cfi_def_cfa_offset 3
 1920               		.cfi_offset 28, -2
 1921 0b52 DF93      		push r29
 1922               	.LCFI45:
 1923               		.cfi_def_cfa_offset 4
 1924               		.cfi_offset 29, -3
 1925 0b54 CDB7      		in r28,__SP_L__
 1926 0b56 DEB7      		in r29,__SP_H__
 1927               	.LCFI46:
 1928               		.cfi_def_cfa_register 28
 1929 0b58 6897      		sbiw r28,24
 1930               	.LCFI47:
 1931               		.cfi_def_cfa_offset 28
 1932 0b5a 0FB6      		in __tmp_reg__,__SREG__
 1933 0b5c F894      		cli
 1934 0b5e DEBF      		out __SP_H__,r29
 1935 0b60 0FBE      		out __SREG__,__tmp_reg__
 1936 0b62 CDBF      		out __SP_L__,r28
 1937               	/* prologue: function */
 1938               	/* frame size = 24 */
 1939               	/* stack size = 26 */
 1940               	.L__stack_usage = 26
 1941 0b64 9C8B      		std Y+20,r25
 1942 0b66 8B8B      		std Y+19,r24
 1943 0b68 7E8B      		std Y+22,r23
 1944 0b6a 6D8B      		std Y+21,r22
 1945 0b6c 588F      		std Y+24,r21
 1946 0b6e 4F8B      		std Y+23,r20
 217:lp_solve_5.5/lp_utils.c ****   char   *newmem = NULL;
 1947               		.loc 2 217 0
 1948 0b70 1A82      		std Y+2,__zero_reg__
 1949 0b72 1982      		std Y+1,__zero_reg__
 218:lp_solve_5.5/lp_utils.c ****   MYBOOL *bnewmem = NULL;
 1950               		.loc 2 218 0
 1951 0b74 1E86      		std Y+14,__zero_reg__
 1952 0b76 1D86      		std Y+13,__zero_reg__
 219:lp_solve_5.5/lp_utils.c ****   int    *inewmem = NULL, size, i, ib, ie, memMargin = 0;
 1953               		.loc 2 219 0
 1954 0b78 188A      		std Y+16,__zero_reg__
 1955 0b7a 1F86      		std Y+15,__zero_reg__
 1956 0b7c 1A86      		std Y+10,__zero_reg__
 1957 0b7e 1986      		std Y+9,__zero_reg__
 220:lp_solve_5.5/lp_utils.c ****   REAL   *rnewmem = NULL;
 1958               		.loc 2 220 0
 1959 0b80 1A8A      		std Y+18,__zero_reg__
 1960 0b82 198A      		std Y+17,__zero_reg__
 221:lp_solve_5.5/lp_utils.c **** 
 222:lp_solve_5.5/lp_utils.c ****   /* First find the iso-sized window (binary search) */
 223:lp_solve_5.5/lp_utils.c ****   size = count*unitsize;
 1961               		.loc 2 223 0
 1962 0b84 4D89      		ldd r20,Y+21
 1963 0b86 5E89      		ldd r21,Y+22
 1964 0b88 2F89      		ldd r18,Y+23
 1965 0b8a 388D      		ldd r19,Y+24
 1966 0b8c 429F      		mul r20,r18
 1967 0b8e C001      		movw r24,r0
 1968 0b90 439F      		mul r20,r19
 1969 0b92 900D      		add r25,r0
 1970 0b94 529F      		mul r21,r18
 1971 0b96 900D      		add r25,r0
 1972 0b98 1124      		clr r1
 1973 0b9a 9C87      		std Y+12,r25
 1974 0b9c 8B87      		std Y+11,r24
 224:lp_solve_5.5/lp_utils.c ****   memMargin += size;
 1975               		.loc 2 224 0
 1976 0b9e 2985      		ldd r18,Y+9
 1977 0ba0 3A85      		ldd r19,Y+10
 1978 0ba2 8B85      		ldd r24,Y+11
 1979 0ba4 9C85      		ldd r25,Y+12
 1980 0ba6 820F      		add r24,r18
 1981 0ba8 931F      		adc r25,r19
 1982 0baa 9A87      		std Y+10,r25
 1983 0bac 8987      		std Y+9,r24
 225:lp_solve_5.5/lp_utils.c ****   ib = 0;
 1984               		.loc 2 225 0
 1985 0bae 1E82      		std Y+6,__zero_reg__
 1986 0bb0 1D82      		std Y+5,__zero_reg__
 226:lp_solve_5.5/lp_utils.c ****   ie = mempool->count-1;
 1987               		.loc 2 226 0
 1988 0bb2 8B89      		ldd r24,Y+19
 1989 0bb4 9C89      		ldd r25,Y+20
 1990 0bb6 FC01      		movw r30,r24
 1991 0bb8 8481      		ldd r24,Z+4
 1992 0bba 9581      		ldd r25,Z+5
 1993 0bbc 0197      		sbiw r24,1
 1994 0bbe 9887      		std Y+8,r25
 1995 0bc0 8F83      		std Y+7,r24
 227:lp_solve_5.5/lp_utils.c ****   while(ie >= ib) {
 1996               		.loc 2 227 0
 1997 0bc2 00C0      		rjmp .L73
 1998               	.L82:
 228:lp_solve_5.5/lp_utils.c ****     i = (ib+ie) / 2;
 1999               		.loc 2 228 0
 2000 0bc4 2D81      		ldd r18,Y+5
 2001 0bc6 3E81      		ldd r19,Y+6
 2002 0bc8 8F81      		ldd r24,Y+7
 2003 0bca 9885      		ldd r25,Y+8
 2004 0bcc 820F      		add r24,r18
 2005 0bce 931F      		adc r25,r19
 2006 0bd0 9923      		tst r25
 2007 0bd2 04F4      		brge .L74
 2008 0bd4 0196      		adiw r24,1
 2009               	.L74:
 2010 0bd6 9595      		asr r25
 2011 0bd8 8795      		ror r24
 2012 0bda 9C83      		std Y+4,r25
 2013 0bdc 8B83      		std Y+3,r24
 229:lp_solve_5.5/lp_utils.c ****     if(abs(mempool->vectorsize[i]) > memMargin)
 2014               		.loc 2 229 0
 2015 0bde 8B89      		ldd r24,Y+19
 2016 0be0 9C89      		ldd r25,Y+20
 2017 0be2 FC01      		movw r30,r24
 2018 0be4 2085      		ldd r18,Z+8
 2019 0be6 3185      		ldd r19,Z+9
 2020 0be8 8B81      		ldd r24,Y+3
 2021 0bea 9C81      		ldd r25,Y+4
 2022 0bec 880F      		lsl r24
 2023 0bee 991F      		rol r25
 2024 0bf0 820F      		add r24,r18
 2025 0bf2 931F      		adc r25,r19
 2026 0bf4 FC01      		movw r30,r24
 2027 0bf6 8081      		ld r24,Z
 2028 0bf8 9181      		ldd r25,Z+1
 2029 0bfa 9923      		tst r25
 2030 0bfc 04F4      		brge .L75
 2031 0bfe 9195      		neg r25
 2032 0c00 8195      		neg r24
 2033 0c02 9109      		sbc r25,__zero_reg__
 2034               	.L75:
 2035 0c04 9C01      		movw r18,r24
 2036 0c06 8985      		ldd r24,Y+9
 2037 0c08 9A85      		ldd r25,Y+10
 2038 0c0a 8217      		cp r24,r18
 2039 0c0c 9307      		cpc r25,r19
 2040 0c0e 04F4      		brge .L76
 230:lp_solve_5.5/lp_utils.c ****       ie = i-1;
 2041               		.loc 2 230 0
 2042 0c10 8B81      		ldd r24,Y+3
 2043 0c12 9C81      		ldd r25,Y+4
 2044 0c14 0197      		sbiw r24,1
 2045 0c16 9887      		std Y+8,r25
 2046 0c18 8F83      		std Y+7,r24
 2047 0c1a 00C0      		rjmp .L73
 2048               	.L76:
 231:lp_solve_5.5/lp_utils.c ****     else if(abs(mempool->vectorsize[i]) < size)
 2049               		.loc 2 231 0
 2050 0c1c 8B89      		ldd r24,Y+19
 2051 0c1e 9C89      		ldd r25,Y+20
 2052 0c20 FC01      		movw r30,r24
 2053 0c22 2085      		ldd r18,Z+8
 2054 0c24 3185      		ldd r19,Z+9
 2055 0c26 8B81      		ldd r24,Y+3
 2056 0c28 9C81      		ldd r25,Y+4
 2057 0c2a 880F      		lsl r24
 2058 0c2c 991F      		rol r25
 2059 0c2e 820F      		add r24,r18
 2060 0c30 931F      		adc r25,r19
 2061 0c32 FC01      		movw r30,r24
 2062 0c34 8081      		ld r24,Z
 2063 0c36 9181      		ldd r25,Z+1
 2064 0c38 9923      		tst r25
 2065 0c3a 04F4      		brge .L77
 2066 0c3c 9195      		neg r25
 2067 0c3e 8195      		neg r24
 2068 0c40 9109      		sbc r25,__zero_reg__
 2069               	.L77:
 2070 0c42 9C01      		movw r18,r24
 2071 0c44 8B85      		ldd r24,Y+11
 2072 0c46 9C85      		ldd r25,Y+12
 2073 0c48 2817      		cp r18,r24
 2074 0c4a 3907      		cpc r19,r25
 2075 0c4c 04F4      		brge .L78
 232:lp_solve_5.5/lp_utils.c ****       ib = i+1;
 2076               		.loc 2 232 0
 2077 0c4e 8B81      		ldd r24,Y+3
 2078 0c50 9C81      		ldd r25,Y+4
 2079 0c52 0196      		adiw r24,1
 2080 0c54 9E83      		std Y+6,r25
 2081 0c56 8D83      		std Y+5,r24
 2082 0c58 00C0      		rjmp .L73
 2083               	.L78:
 233:lp_solve_5.5/lp_utils.c ****     else {
 234:lp_solve_5.5/lp_utils.c ****       /* Find the beginning of the exact-sized array group */
 235:lp_solve_5.5/lp_utils.c ****       do {
 236:lp_solve_5.5/lp_utils.c ****         ib = i;
 2084               		.loc 2 236 0 discriminator 2
 2085 0c5a 8B81      		ldd r24,Y+3
 2086 0c5c 9C81      		ldd r25,Y+4
 2087 0c5e 9E83      		std Y+6,r25
 2088 0c60 8D83      		std Y+5,r24
 237:lp_solve_5.5/lp_utils.c ****         i--;
 2089               		.loc 2 237 0 discriminator 2
 2090 0c62 8B81      		ldd r24,Y+3
 2091 0c64 9C81      		ldd r25,Y+4
 2092 0c66 0197      		sbiw r24,1
 2093 0c68 9C83      		std Y+4,r25
 2094 0c6a 8B83      		std Y+3,r24
 238:lp_solve_5.5/lp_utils.c ****       } while((i >= 0) && (abs(mempool->vectorsize[i]) >= size));
 2095               		.loc 2 238 0 discriminator 2
 2096 0c6c 8B81      		ldd r24,Y+3
 2097 0c6e 9C81      		ldd r25,Y+4
 2098 0c70 9923      		tst r25
 2099 0c72 04F0      		brlt .L95
 2100               		.loc 2 238 0 is_stmt 0 discriminator 1
 2101 0c74 8B89      		ldd r24,Y+19
 2102 0c76 9C89      		ldd r25,Y+20
 2103 0c78 FC01      		movw r30,r24
 2104 0c7a 2085      		ldd r18,Z+8
 2105 0c7c 3185      		ldd r19,Z+9
 2106 0c7e 8B81      		ldd r24,Y+3
 2107 0c80 9C81      		ldd r25,Y+4
 2108 0c82 880F      		lsl r24
 2109 0c84 991F      		rol r25
 2110 0c86 820F      		add r24,r18
 2111 0c88 931F      		adc r25,r19
 2112 0c8a FC01      		movw r30,r24
 2113 0c8c 8081      		ld r24,Z
 2114 0c8e 9181      		ldd r25,Z+1
 2115 0c90 9923      		tst r25
 2116 0c92 04F4      		brge .L80
 2117 0c94 9195      		neg r25
 2118 0c96 8195      		neg r24
 2119 0c98 9109      		sbc r25,__zero_reg__
 2120               	.L80:
 2121 0c9a 9C01      		movw r18,r24
 2122 0c9c 8B85      		ldd r24,Y+11
 2123 0c9e 9C85      		ldd r25,Y+12
 2124 0ca0 2817      		cp r18,r24
 2125 0ca2 3907      		cpc r19,r25
 2126 0ca4 04F4      		brge .L78
 239:lp_solve_5.5/lp_utils.c ****       break;
 2127               		.loc 2 239 0 is_stmt 1
 2128 0ca6 00C0      		rjmp .L95
 2129               	.L73:
 227:lp_solve_5.5/lp_utils.c ****     i = (ib+ie) / 2;
 2130               		.loc 2 227 0
 2131 0ca8 2F81      		ldd r18,Y+7
 2132 0caa 3885      		ldd r19,Y+8
 2133 0cac 8D81      		ldd r24,Y+5
 2134 0cae 9E81      		ldd r25,Y+6
 2135 0cb0 2817      		cp r18,r24
 2136 0cb2 3907      		cpc r19,r25
 2137 0cb4 04F0      		brlt .+2
 2138 0cb6 00C0      		rjmp .L82
 2139 0cb8 00C0      		rjmp .L81
 2140               	.L95:
 2141               		.loc 2 239 0
 2142 0cba 0000      		nop
 2143               	.L81:
 240:lp_solve_5.5/lp_utils.c ****     }
 241:lp_solve_5.5/lp_utils.c ****   }
 242:lp_solve_5.5/lp_utils.c **** 
 243:lp_solve_5.5/lp_utils.c ****   /* Check if we have a preallocated unused array of sufficient size */
 244:lp_solve_5.5/lp_utils.c ****   ie = mempool->count-1;
 2144               		.loc 2 244 0
 2145 0cbc 8B89      		ldd r24,Y+19
 2146 0cbe 9C89      		ldd r25,Y+20
 2147 0cc0 FC01      		movw r30,r24
 2148 0cc2 8481      		ldd r24,Z+4
 2149 0cc4 9581      		ldd r25,Z+5
 2150 0cc6 0197      		sbiw r24,1
 2151 0cc8 9887      		std Y+8,r25
 2152 0cca 8F83      		std Y+7,r24
 245:lp_solve_5.5/lp_utils.c ****   for(i = ib; i <= ie; i++)
 2153               		.loc 2 245 0
 2154 0ccc 8D81      		ldd r24,Y+5
 2155 0cce 9E81      		ldd r25,Y+6
 2156 0cd0 9C83      		std Y+4,r25
 2157 0cd2 8B83      		std Y+3,r24
 2158 0cd4 00C0      		rjmp .L83
 2159               	.L86:
 246:lp_solve_5.5/lp_utils.c ****     if(mempool->vectorsize[i] < 0)
 2160               		.loc 2 246 0
 2161 0cd6 8B89      		ldd r24,Y+19
 2162 0cd8 9C89      		ldd r25,Y+20
 2163 0cda FC01      		movw r30,r24
 2164 0cdc 2085      		ldd r18,Z+8
 2165 0cde 3185      		ldd r19,Z+9
 2166 0ce0 8B81      		ldd r24,Y+3
 2167 0ce2 9C81      		ldd r25,Y+4
 2168 0ce4 880F      		lsl r24
 2169 0ce6 991F      		rol r25
 2170 0ce8 820F      		add r24,r18
 2171 0cea 931F      		adc r25,r19
 2172 0cec FC01      		movw r30,r24
 2173 0cee 8081      		ld r24,Z
 2174 0cf0 9181      		ldd r25,Z+1
 2175 0cf2 9923      		tst r25
 2176 0cf4 04F0      		brlt .L96
 245:lp_solve_5.5/lp_utils.c ****   for(i = ib; i <= ie; i++)
 2177               		.loc 2 245 0 discriminator 2
 2178 0cf6 8B81      		ldd r24,Y+3
 2179 0cf8 9C81      		ldd r25,Y+4
 2180 0cfa 0196      		adiw r24,1
 2181 0cfc 9C83      		std Y+4,r25
 2182 0cfe 8B83      		std Y+3,r24
 2183               	.L83:
 245:lp_solve_5.5/lp_utils.c ****   for(i = ib; i <= ie; i++)
 2184               		.loc 2 245 0 is_stmt 0 discriminator 1
 2185 0d00 2B81      		ldd r18,Y+3
 2186 0d02 3C81      		ldd r19,Y+4
 2187 0d04 8F81      		ldd r24,Y+7
 2188 0d06 9885      		ldd r25,Y+8
 2189 0d08 8217      		cp r24,r18
 2190 0d0a 9307      		cpc r25,r19
 2191 0d0c 04F4      		brge .L86
 2192 0d0e 00C0      		rjmp .L85
 2193               	.L96:
 247:lp_solve_5.5/lp_utils.c ****       break;
 2194               		.loc 2 247 0 is_stmt 1
 2195 0d10 0000      		nop
 2196               	.L85:
 248:lp_solve_5.5/lp_utils.c **** 
 249:lp_solve_5.5/lp_utils.c ****   /* Obtain and activate existing, unused vector if we are permitted */
 250:lp_solve_5.5/lp_utils.c ****   if(i <= ie) {
 2197               		.loc 2 250 0
 2198 0d12 2B81      		ldd r18,Y+3
 2199 0d14 3C81      		ldd r19,Y+4
 2200 0d16 8F81      		ldd r24,Y+7
 2201 0d18 9885      		ldd r25,Y+8
 2202 0d1a 8217      		cp r24,r18
 2203 0d1c 9307      		cpc r25,r19
 2204 0d1e 04F0      		brlt .L87
 251:lp_solve_5.5/lp_utils.c **** #ifdef Paranoia
 252:lp_solve_5.5/lp_utils.c ****     if((mempool->vectorsize[i] > 0) || (abs(mempool->vectorsize[i]) < size)) {
 253:lp_solve_5.5/lp_utils.c ****       lprec *lp = mempool->lp;
 254:lp_solve_5.5/lp_utils.c ****       lp->report(lp, SEVERE, "mempool_obtainVector: Invalid %s existing vector selected\n",
 255:lp_solve_5.5/lp_utils.c ****                              (ie < 0 ? "too small" : "occupied"));
 256:lp_solve_5.5/lp_utils.c ****       lp->spx_status = NOMEMORY;
 257:lp_solve_5.5/lp_utils.c ****       lp->bb_break = TRUE;
 258:lp_solve_5.5/lp_utils.c ****       return( newmem );
 259:lp_solve_5.5/lp_utils.c ****     }
 260:lp_solve_5.5/lp_utils.c **** #endif
 261:lp_solve_5.5/lp_utils.c ****     newmem = mempool->vectorarray[i];
 2205               		.loc 2 261 0
 2206 0d20 8B89      		ldd r24,Y+19
 2207 0d22 9C89      		ldd r25,Y+20
 2208 0d24 FC01      		movw r30,r24
 2209 0d26 2681      		ldd r18,Z+6
 2210 0d28 3781      		ldd r19,Z+7
 2211 0d2a 8B81      		ldd r24,Y+3
 2212 0d2c 9C81      		ldd r25,Y+4
 2213 0d2e 880F      		lsl r24
 2214 0d30 991F      		rol r25
 2215 0d32 820F      		add r24,r18
 2216 0d34 931F      		adc r25,r19
 2217 0d36 FC01      		movw r30,r24
 2218 0d38 8081      		ld r24,Z
 2219 0d3a 9181      		ldd r25,Z+1
 2220 0d3c 9A83      		std Y+2,r25
 2221 0d3e 8983      		std Y+1,r24
 262:lp_solve_5.5/lp_utils.c ****     mempool->vectorsize[i] *= -1;
 2222               		.loc 2 262 0
 2223 0d40 8B89      		ldd r24,Y+19
 2224 0d42 9C89      		ldd r25,Y+20
 2225 0d44 FC01      		movw r30,r24
 2226 0d46 2085      		ldd r18,Z+8
 2227 0d48 3185      		ldd r19,Z+9
 2228 0d4a 8B81      		ldd r24,Y+3
 2229 0d4c 9C81      		ldd r25,Y+4
 2230 0d4e 880F      		lsl r24
 2231 0d50 991F      		rol r25
 2232 0d52 820F      		add r24,r18
 2233 0d54 931F      		adc r25,r19
 2234 0d56 2B89      		ldd r18,Y+19
 2235 0d58 3C89      		ldd r19,Y+20
 2236 0d5a F901      		movw r30,r18
 2237 0d5c 4085      		ldd r20,Z+8
 2238 0d5e 5185      		ldd r21,Z+9
 2239 0d60 2B81      		ldd r18,Y+3
 2240 0d62 3C81      		ldd r19,Y+4
 2241 0d64 220F      		lsl r18
 2242 0d66 331F      		rol r19
 2243 0d68 240F      		add r18,r20
 2244 0d6a 351F      		adc r19,r21
 2245 0d6c F901      		movw r30,r18
 2246 0d6e 2081      		ld r18,Z
 2247 0d70 3181      		ldd r19,Z+1
 2248 0d72 3195      		neg r19
 2249 0d74 2195      		neg r18
 2250 0d76 3109      		sbc r19,__zero_reg__
 2251 0d78 FC01      		movw r30,r24
 2252 0d7a 3183      		std Z+1,r19
 2253 0d7c 2083      		st Z,r18
 2254 0d7e 00C0      		rjmp .L88
 2255               	.L87:
 263:lp_solve_5.5/lp_utils.c ****   }
 264:lp_solve_5.5/lp_utils.c **** 
 265:lp_solve_5.5/lp_utils.c ****   /* Otherwise allocate a new vector */
 266:lp_solve_5.5/lp_utils.c ****   else if(unitsize == sizeof(MYBOOL)) {
 2256               		.loc 2 266 0
 2257 0d80 8F89      		ldd r24,Y+23
 2258 0d82 988D      		ldd r25,Y+24
 2259 0d84 0197      		sbiw r24,1
 2260 0d86 01F4      		brne .L89
 267:lp_solve_5.5/lp_utils.c ****     allocMYBOOL(mempool->lp, &bnewmem, count, TRUE);
 2261               		.loc 2 267 0
 2262 0d88 8B89      		ldd r24,Y+19
 2263 0d8a 9C89      		ldd r25,Y+20
 2264 0d8c FC01      		movw r30,r24
 2265 0d8e 8081      		ld r24,Z
 2266 0d90 9181      		ldd r25,Z+1
 2267 0d92 4D89      		ldd r20,Y+21
 2268 0d94 5E89      		ldd r21,Y+22
 2269 0d96 BE01      		movw r22,r28
 2270 0d98 635F      		subi r22,-13
 2271 0d9a 7F4F      		sbci r23,-1
 2272 0d9c 21E0      		ldi r18,lo8(1)
 2273 0d9e 0E94 0000 		call allocMYBOOL
 268:lp_solve_5.5/lp_utils.c ****     newmem = (char *) bnewmem;
 2274               		.loc 2 268 0
 2275 0da2 8D85      		ldd r24,Y+13
 2276 0da4 9E85      		ldd r25,Y+14
 2277 0da6 9A83      		std Y+2,r25
 2278 0da8 8983      		std Y+1,r24
 2279 0daa 00C0      		rjmp .L88
 2280               	.L89:
 269:lp_solve_5.5/lp_utils.c ****   }
 270:lp_solve_5.5/lp_utils.c ****   else if(unitsize == sizeof(int)) {
 2281               		.loc 2 270 0
 2282 0dac 8F89      		ldd r24,Y+23
 2283 0dae 988D      		ldd r25,Y+24
 2284 0db0 0297      		sbiw r24,2
 2285 0db2 01F4      		brne .L90
 271:lp_solve_5.5/lp_utils.c ****     allocINT(mempool->lp, &inewmem, count, TRUE);
 2286               		.loc 2 271 0
 2287 0db4 8B89      		ldd r24,Y+19
 2288 0db6 9C89      		ldd r25,Y+20
 2289 0db8 FC01      		movw r30,r24
 2290 0dba 8081      		ld r24,Z
 2291 0dbc 9181      		ldd r25,Z+1
 2292 0dbe 4D89      		ldd r20,Y+21
 2293 0dc0 5E89      		ldd r21,Y+22
 2294 0dc2 BE01      		movw r22,r28
 2295 0dc4 615F      		subi r22,-15
 2296 0dc6 7F4F      		sbci r23,-1
 2297 0dc8 21E0      		ldi r18,lo8(1)
 2298 0dca 0E94 0000 		call allocINT
 272:lp_solve_5.5/lp_utils.c ****     newmem = (char *) inewmem;
 2299               		.loc 2 272 0
 2300 0dce 8F85      		ldd r24,Y+15
 2301 0dd0 9889      		ldd r25,Y+16
 2302 0dd2 9A83      		std Y+2,r25
 2303 0dd4 8983      		std Y+1,r24
 2304 0dd6 00C0      		rjmp .L88
 2305               	.L90:
 273:lp_solve_5.5/lp_utils.c ****   }
 274:lp_solve_5.5/lp_utils.c ****   else if(unitsize == sizeof(REAL)) {
 2306               		.loc 2 274 0
 2307 0dd8 8F89      		ldd r24,Y+23
 2308 0dda 988D      		ldd r25,Y+24
 2309 0ddc 0497      		sbiw r24,4
 2310 0dde 01F4      		brne .L88
 275:lp_solve_5.5/lp_utils.c ****     allocREAL(mempool->lp, &rnewmem, count, TRUE);
 2311               		.loc 2 275 0
 2312 0de0 8B89      		ldd r24,Y+19
 2313 0de2 9C89      		ldd r25,Y+20
 2314 0de4 FC01      		movw r30,r24
 2315 0de6 8081      		ld r24,Z
 2316 0de8 9181      		ldd r25,Z+1
 2317 0dea 4D89      		ldd r20,Y+21
 2318 0dec 5E89      		ldd r21,Y+22
 2319 0dee BE01      		movw r22,r28
 2320 0df0 6F5E      		subi r22,-17
 2321 0df2 7F4F      		sbci r23,-1
 2322 0df4 21E0      		ldi r18,lo8(1)
 2323 0df6 0E94 0000 		call allocREAL
 276:lp_solve_5.5/lp_utils.c ****     newmem = (char *) rnewmem;
 2324               		.loc 2 276 0
 2325 0dfa 8989      		ldd r24,Y+17
 2326 0dfc 9A89      		ldd r25,Y+18
 2327 0dfe 9A83      		std Y+2,r25
 2328 0e00 8983      		std Y+1,r24
 2329               	.L88:
 277:lp_solve_5.5/lp_utils.c ****   }
 278:lp_solve_5.5/lp_utils.c **** 
 279:lp_solve_5.5/lp_utils.c ****   /* Insert into master array if necessary (maintain sort by ascending size) */
 280:lp_solve_5.5/lp_utils.c ****   if((i > ie) && (newmem != NULL)) {
 2330               		.loc 2 280 0
 2331 0e02 2B81      		ldd r18,Y+3
 2332 0e04 3C81      		ldd r19,Y+4
 2333 0e06 8F81      		ldd r24,Y+7
 2334 0e08 9885      		ldd r25,Y+8
 2335 0e0a 8217      		cp r24,r18
 2336 0e0c 9307      		cpc r25,r19
 2337 0e0e 04F0      		brlt .+2
 2338 0e10 00C0      		rjmp .L91
 2339               		.loc 2 280 0 is_stmt 0 discriminator 1
 2340 0e12 8981      		ldd r24,Y+1
 2341 0e14 9A81      		ldd r25,Y+2
 2342 0e16 892B      		or r24,r25
 2343 0e18 01F4      		brne .+2
 2344 0e1a 00C0      		rjmp .L91
 281:lp_solve_5.5/lp_utils.c ****     mempool->count++;
 2345               		.loc 2 281 0 is_stmt 1
 2346 0e1c 8B89      		ldd r24,Y+19
 2347 0e1e 9C89      		ldd r25,Y+20
 2348 0e20 FC01      		movw r30,r24
 2349 0e22 8481      		ldd r24,Z+4
 2350 0e24 9581      		ldd r25,Z+5
 2351 0e26 9C01      		movw r18,r24
 2352 0e28 2F5F      		subi r18,-1
 2353 0e2a 3F4F      		sbci r19,-1
 2354 0e2c 8B89      		ldd r24,Y+19
 2355 0e2e 9C89      		ldd r25,Y+20
 2356 0e30 FC01      		movw r30,r24
 2357 0e32 3583      		std Z+5,r19
 2358 0e34 2483      		std Z+4,r18
 282:lp_solve_5.5/lp_utils.c ****     if(mempool->count >= mempool->size) {
 2359               		.loc 2 282 0
 2360 0e36 8B89      		ldd r24,Y+19
 2361 0e38 9C89      		ldd r25,Y+20
 2362 0e3a FC01      		movw r30,r24
 2363 0e3c 2481      		ldd r18,Z+4
 2364 0e3e 3581      		ldd r19,Z+5
 2365 0e40 8B89      		ldd r24,Y+19
 2366 0e42 9C89      		ldd r25,Y+20
 2367 0e44 FC01      		movw r30,r24
 2368 0e46 8281      		ldd r24,Z+2
 2369 0e48 9381      		ldd r25,Z+3
 2370 0e4a 2817      		cp r18,r24
 2371 0e4c 3907      		cpc r19,r25
 2372 0e4e 04F0      		brlt .L92
 283:lp_solve_5.5/lp_utils.c ****       mempool->size += 10;
 2373               		.loc 2 283 0
 2374 0e50 8B89      		ldd r24,Y+19
 2375 0e52 9C89      		ldd r25,Y+20
 2376 0e54 FC01      		movw r30,r24
 2377 0e56 8281      		ldd r24,Z+2
 2378 0e58 9381      		ldd r25,Z+3
 2379 0e5a 9C01      		movw r18,r24
 2380 0e5c 265F      		subi r18,-10
 2381 0e5e 3F4F      		sbci r19,-1
 2382 0e60 8B89      		ldd r24,Y+19
 2383 0e62 9C89      		ldd r25,Y+20
 2384 0e64 FC01      		movw r30,r24
 2385 0e66 3383      		std Z+3,r19
 2386 0e68 2283      		std Z+2,r18
 284:lp_solve_5.5/lp_utils.c ****       mempool->vectorarray = (char **) realloc(mempool->vectorarray,
 285:lp_solve_5.5/lp_utils.c ****                                      sizeof(*(mempool->vectorarray))*mempool->size);
 2387               		.loc 2 285 0
 2388 0e6a 8B89      		ldd r24,Y+19
 2389 0e6c 9C89      		ldd r25,Y+20
 2390 0e6e FC01      		movw r30,r24
 2391 0e70 8281      		ldd r24,Z+2
 2392 0e72 9381      		ldd r25,Z+3
 284:lp_solve_5.5/lp_utils.c ****       mempool->vectorarray = (char **) realloc(mempool->vectorarray,
 2393               		.loc 2 284 0
 2394 0e74 9C01      		movw r18,r24
 2395 0e76 220F      		lsl r18
 2396 0e78 331F      		rol r19
 2397 0e7a 8B89      		ldd r24,Y+19
 2398 0e7c 9C89      		ldd r25,Y+20
 2399 0e7e FC01      		movw r30,r24
 2400 0e80 8681      		ldd r24,Z+6
 2401 0e82 9781      		ldd r25,Z+7
 2402 0e84 B901      		movw r22,r18
 2403 0e86 0E94 0000 		call realloc
 2404 0e8a 9C01      		movw r18,r24
 2405 0e8c 8B89      		ldd r24,Y+19
 2406 0e8e 9C89      		ldd r25,Y+20
 2407 0e90 FC01      		movw r30,r24
 2408 0e92 3783      		std Z+7,r19
 2409 0e94 2683      		std Z+6,r18
 286:lp_solve_5.5/lp_utils.c ****       mempool->vectorsize  = (int *) realloc(mempool->vectorsize,
 287:lp_solve_5.5/lp_utils.c ****                                      sizeof(*(mempool->vectorsize))*mempool->size);
 2410               		.loc 2 287 0
 2411 0e96 8B89      		ldd r24,Y+19
 2412 0e98 9C89      		ldd r25,Y+20
 2413 0e9a FC01      		movw r30,r24
 2414 0e9c 8281      		ldd r24,Z+2
 2415 0e9e 9381      		ldd r25,Z+3
 286:lp_solve_5.5/lp_utils.c ****       mempool->vectorsize  = (int *) realloc(mempool->vectorsize,
 2416               		.loc 2 286 0
 2417 0ea0 9C01      		movw r18,r24
 2418 0ea2 220F      		lsl r18
 2419 0ea4 331F      		rol r19
 2420 0ea6 8B89      		ldd r24,Y+19
 2421 0ea8 9C89      		ldd r25,Y+20
 2422 0eaa FC01      		movw r30,r24
 2423 0eac 8085      		ldd r24,Z+8
 2424 0eae 9185      		ldd r25,Z+9
 2425 0eb0 B901      		movw r22,r18
 2426 0eb2 0E94 0000 		call realloc
 2427 0eb6 9C01      		movw r18,r24
 2428 0eb8 8B89      		ldd r24,Y+19
 2429 0eba 9C89      		ldd r25,Y+20
 2430 0ebc FC01      		movw r30,r24
 2431 0ebe 3187      		std Z+9,r19
 2432 0ec0 2087      		std Z+8,r18
 2433               	.L92:
 288:lp_solve_5.5/lp_utils.c ****     }
 289:lp_solve_5.5/lp_utils.c ****     ie++;
 2434               		.loc 2 289 0
 2435 0ec2 8F81      		ldd r24,Y+7
 2436 0ec4 9885      		ldd r25,Y+8
 2437 0ec6 0196      		adiw r24,1
 2438 0ec8 9887      		std Y+8,r25
 2439 0eca 8F83      		std Y+7,r24
 290:lp_solve_5.5/lp_utils.c ****     i = ie + 1;
 2440               		.loc 2 290 0
 2441 0ecc 8F81      		ldd r24,Y+7
 2442 0ece 9885      		ldd r25,Y+8
 2443 0ed0 0196      		adiw r24,1
 2444 0ed2 9C83      		std Y+4,r25
 2445 0ed4 8B83      		std Y+3,r24
 291:lp_solve_5.5/lp_utils.c ****     if(i < mempool->count) {
 2446               		.loc 2 291 0
 2447 0ed6 8B89      		ldd r24,Y+19
 2448 0ed8 9C89      		ldd r25,Y+20
 2449 0eda FC01      		movw r30,r24
 2450 0edc 2481      		ldd r18,Z+4
 2451 0ede 3581      		ldd r19,Z+5
 2452 0ee0 8B81      		ldd r24,Y+3
 2453 0ee2 9C81      		ldd r25,Y+4
 2454 0ee4 8217      		cp r24,r18
 2455 0ee6 9307      		cpc r25,r19
 2456 0ee8 04F4      		brge .L93
 292:lp_solve_5.5/lp_utils.c ****       MEMMOVE(mempool->vectorarray+i, mempool->vectorarray+ie, 1);
 2457               		.loc 2 292 0
 2458 0eea 8B89      		ldd r24,Y+19
 2459 0eec 9C89      		ldd r25,Y+20
 2460 0eee FC01      		movw r30,r24
 2461 0ef0 2681      		ldd r18,Z+6
 2462 0ef2 3781      		ldd r19,Z+7
 2463 0ef4 8F81      		ldd r24,Y+7
 2464 0ef6 9885      		ldd r25,Y+8
 2465 0ef8 880F      		lsl r24
 2466 0efa 991F      		rol r25
 2467 0efc B901      		movw r22,r18
 2468 0efe 680F      		add r22,r24
 2469 0f00 791F      		adc r23,r25
 2470 0f02 8B89      		ldd r24,Y+19
 2471 0f04 9C89      		ldd r25,Y+20
 2472 0f06 FC01      		movw r30,r24
 2473 0f08 2681      		ldd r18,Z+6
 2474 0f0a 3781      		ldd r19,Z+7
 2475 0f0c 8B81      		ldd r24,Y+3
 2476 0f0e 9C81      		ldd r25,Y+4
 2477 0f10 880F      		lsl r24
 2478 0f12 991F      		rol r25
 2479 0f14 820F      		add r24,r18
 2480 0f16 931F      		adc r25,r19
 2481 0f18 42E0      		ldi r20,lo8(2)
 2482 0f1a 50E0      		ldi r21,0
 2483 0f1c 0E94 0000 		call memmove
 293:lp_solve_5.5/lp_utils.c ****       MEMMOVE(mempool->vectorsize+i,  mempool->vectorsize+ie,  1);
 2484               		.loc 2 293 0
 2485 0f20 8B89      		ldd r24,Y+19
 2486 0f22 9C89      		ldd r25,Y+20
 2487 0f24 FC01      		movw r30,r24
 2488 0f26 2085      		ldd r18,Z+8
 2489 0f28 3185      		ldd r19,Z+9
 2490 0f2a 8F81      		ldd r24,Y+7
 2491 0f2c 9885      		ldd r25,Y+8
 2492 0f2e 880F      		lsl r24
 2493 0f30 991F      		rol r25
 2494 0f32 B901      		movw r22,r18
 2495 0f34 680F      		add r22,r24
 2496 0f36 791F      		adc r23,r25
 2497 0f38 8B89      		ldd r24,Y+19
 2498 0f3a 9C89      		ldd r25,Y+20
 2499 0f3c FC01      		movw r30,r24
 2500 0f3e 2085      		ldd r18,Z+8
 2501 0f40 3185      		ldd r19,Z+9
 2502 0f42 8B81      		ldd r24,Y+3
 2503 0f44 9C81      		ldd r25,Y+4
 2504 0f46 880F      		lsl r24
 2505 0f48 991F      		rol r25
 2506 0f4a 820F      		add r24,r18
 2507 0f4c 931F      		adc r25,r19
 2508 0f4e 42E0      		ldi r20,lo8(2)
 2509 0f50 50E0      		ldi r21,0
 2510 0f52 0E94 0000 		call memmove
 2511               	.L93:
 294:lp_solve_5.5/lp_utils.c ****     }
 295:lp_solve_5.5/lp_utils.c ****     mempool->vectorarray[ie] = newmem;
 2512               		.loc 2 295 0
 2513 0f56 8B89      		ldd r24,Y+19
 2514 0f58 9C89      		ldd r25,Y+20
 2515 0f5a FC01      		movw r30,r24
 2516 0f5c 2681      		ldd r18,Z+6
 2517 0f5e 3781      		ldd r19,Z+7
 2518 0f60 8F81      		ldd r24,Y+7
 2519 0f62 9885      		ldd r25,Y+8
 2520 0f64 880F      		lsl r24
 2521 0f66 991F      		rol r25
 2522 0f68 820F      		add r24,r18
 2523 0f6a 931F      		adc r25,r19
 2524 0f6c 2981      		ldd r18,Y+1
 2525 0f6e 3A81      		ldd r19,Y+2
 2526 0f70 FC01      		movw r30,r24
 2527 0f72 3183      		std Z+1,r19
 2528 0f74 2083      		st Z,r18
 296:lp_solve_5.5/lp_utils.c ****     mempool->vectorsize[ie]  = size;
 2529               		.loc 2 296 0
 2530 0f76 8B89      		ldd r24,Y+19
 2531 0f78 9C89      		ldd r25,Y+20
 2532 0f7a FC01      		movw r30,r24
 2533 0f7c 2085      		ldd r18,Z+8
 2534 0f7e 3185      		ldd r19,Z+9
 2535 0f80 8F81      		ldd r24,Y+7
 2536 0f82 9885      		ldd r25,Y+8
 2537 0f84 880F      		lsl r24
 2538 0f86 991F      		rol r25
 2539 0f88 820F      		add r24,r18
 2540 0f8a 931F      		adc r25,r19
 2541 0f8c 2B85      		ldd r18,Y+11
 2542 0f8e 3C85      		ldd r19,Y+12
 2543 0f90 FC01      		movw r30,r24
 2544 0f92 3183      		std Z+1,r19
 2545 0f94 2083      		st Z,r18
 2546               	.L91:
 297:lp_solve_5.5/lp_utils.c ****   }
 298:lp_solve_5.5/lp_utils.c **** 
 299:lp_solve_5.5/lp_utils.c ****   return( newmem );
 2547               		.loc 2 299 0
 2548 0f96 8981      		ldd r24,Y+1
 2549 0f98 9A81      		ldd r25,Y+2
 2550               	/* epilogue start */
 300:lp_solve_5.5/lp_utils.c **** }
 2551               		.loc 2 300 0
 2552 0f9a 6896      		adiw r28,24
 2553 0f9c 0FB6      		in __tmp_reg__,__SREG__
 2554 0f9e F894      		cli
 2555 0fa0 DEBF      		out __SP_H__,r29
 2556 0fa2 0FBE      		out __SREG__,__tmp_reg__
 2557 0fa4 CDBF      		out __SP_L__,r28
 2558 0fa6 DF91      		pop r29
 2559 0fa8 CF91      		pop r28
 2560 0faa 0895      		ret
 2561               		.cfi_endproc
 2562               	.LFE18:
 2564               	.global	mempool_releaseVector
 2566               	mempool_releaseVector:
 2567               	.LFB19:
 301:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL mempool_releaseVector(workarraysrec *mempool, char *memvector, MYBOOL forcefree)
 302:lp_solve_5.5/lp_utils.c **** {
 2568               		.loc 2 302 0
 2569               		.cfi_startproc
 2570 0fac CF93      		push r28
 2571               	.LCFI48:
 2572               		.cfi_def_cfa_offset 3
 2573               		.cfi_offset 28, -2
 2574 0fae DF93      		push r29
 2575               	.LCFI49:
 2576               		.cfi_def_cfa_offset 4
 2577               		.cfi_offset 29, -3
 2578 0fb0 CDB7      		in r28,__SP_L__
 2579 0fb2 DEB7      		in r29,__SP_H__
 2580               	.LCFI50:
 2581               		.cfi_def_cfa_register 28
 2582 0fb4 2797      		sbiw r28,7
 2583               	.LCFI51:
 2584               		.cfi_def_cfa_offset 11
 2585 0fb6 0FB6      		in __tmp_reg__,__SREG__
 2586 0fb8 F894      		cli
 2587 0fba DEBF      		out __SP_H__,r29
 2588 0fbc 0FBE      		out __SREG__,__tmp_reg__
 2589 0fbe CDBF      		out __SP_L__,r28
 2590               	/* prologue: function */
 2591               	/* frame size = 7 */
 2592               	/* stack size = 9 */
 2593               	.L__stack_usage = 9
 2594 0fc0 9C83      		std Y+4,r25
 2595 0fc2 8B83      		std Y+3,r24
 2596 0fc4 7E83      		std Y+6,r23
 2597 0fc6 6D83      		std Y+5,r22
 2598 0fc8 4F83      		std Y+7,r20
 303:lp_solve_5.5/lp_utils.c ****   int i;
 304:lp_solve_5.5/lp_utils.c **** 
 305:lp_solve_5.5/lp_utils.c **** #if 0
 306:lp_solve_5.5/lp_utils.c ****   forcefree = TRUE;
 307:lp_solve_5.5/lp_utils.c **** #endif
 308:lp_solve_5.5/lp_utils.c **** 
 309:lp_solve_5.5/lp_utils.c ****   for(i = mempool->count-1; i >= 0; i--)
 2599               		.loc 2 309 0
 2600 0fca 8B81      		ldd r24,Y+3
 2601 0fcc 9C81      		ldd r25,Y+4
 2602 0fce FC01      		movw r30,r24
 2603 0fd0 8481      		ldd r24,Z+4
 2604 0fd2 9581      		ldd r25,Z+5
 2605 0fd4 0197      		sbiw r24,1
 2606 0fd6 9A83      		std Y+2,r25
 2607 0fd8 8983      		std Y+1,r24
 2608 0fda 00C0      		rjmp .L98
 2609               	.L101:
 310:lp_solve_5.5/lp_utils.c ****     if(mempool->vectorarray[i] == memvector)
 2610               		.loc 2 310 0
 2611 0fdc 8B81      		ldd r24,Y+3
 2612 0fde 9C81      		ldd r25,Y+4
 2613 0fe0 FC01      		movw r30,r24
 2614 0fe2 2681      		ldd r18,Z+6
 2615 0fe4 3781      		ldd r19,Z+7
 2616 0fe6 8981      		ldd r24,Y+1
 2617 0fe8 9A81      		ldd r25,Y+2
 2618 0fea 880F      		lsl r24
 2619 0fec 991F      		rol r25
 2620 0fee 820F      		add r24,r18
 2621 0ff0 931F      		adc r25,r19
 2622 0ff2 FC01      		movw r30,r24
 2623 0ff4 2081      		ld r18,Z
 2624 0ff6 3181      		ldd r19,Z+1
 2625 0ff8 8D81      		ldd r24,Y+5
 2626 0ffa 9E81      		ldd r25,Y+6
 2627 0ffc 2817      		cp r18,r24
 2628 0ffe 3907      		cpc r19,r25
 2629 1000 01F0      		breq .L110
 309:lp_solve_5.5/lp_utils.c ****     if(mempool->vectorarray[i] == memvector)
 2630               		.loc 2 309 0 discriminator 2
 2631 1002 8981      		ldd r24,Y+1
 2632 1004 9A81      		ldd r25,Y+2
 2633 1006 0197      		sbiw r24,1
 2634 1008 9A83      		std Y+2,r25
 2635 100a 8983      		std Y+1,r24
 2636               	.L98:
 309:lp_solve_5.5/lp_utils.c ****     if(mempool->vectorarray[i] == memvector)
 2637               		.loc 2 309 0 is_stmt 0 discriminator 1
 2638 100c 8981      		ldd r24,Y+1
 2639 100e 9A81      		ldd r25,Y+2
 2640 1010 9923      		tst r25
 2641 1012 04F4      		brge .L101
 2642 1014 00C0      		rjmp .L100
 2643               	.L110:
 311:lp_solve_5.5/lp_utils.c ****       break;
 2644               		.loc 2 311 0 is_stmt 1
 2645 1016 0000      		nop
 2646               	.L100:
 312:lp_solve_5.5/lp_utils.c **** 
 313:lp_solve_5.5/lp_utils.c ****   if((i < 0) || (mempool->vectorsize[i] < 0))
 2647               		.loc 2 313 0
 2648 1018 8981      		ldd r24,Y+1
 2649 101a 9A81      		ldd r25,Y+2
 2650 101c 9923      		tst r25
 2651 101e 04F0      		brlt .L102
 2652               		.loc 2 313 0 is_stmt 0 discriminator 1
 2653 1020 8B81      		ldd r24,Y+3
 2654 1022 9C81      		ldd r25,Y+4
 2655 1024 FC01      		movw r30,r24
 2656 1026 2085      		ldd r18,Z+8
 2657 1028 3185      		ldd r19,Z+9
 2658 102a 8981      		ldd r24,Y+1
 2659 102c 9A81      		ldd r25,Y+2
 2660 102e 880F      		lsl r24
 2661 1030 991F      		rol r25
 2662 1032 820F      		add r24,r18
 2663 1034 931F      		adc r25,r19
 2664 1036 FC01      		movw r30,r24
 2665 1038 8081      		ld r24,Z
 2666 103a 9181      		ldd r25,Z+1
 2667 103c 9923      		tst r25
 2668 103e 04F4      		brge .L103
 2669               	.L102:
 314:lp_solve_5.5/lp_utils.c ****     return( FALSE );
 2670               		.loc 2 314 0 is_stmt 1
 2671 1040 80E0      		ldi r24,0
 2672 1042 00C0      		rjmp .L104
 2673               	.L103:
 315:lp_solve_5.5/lp_utils.c **** 
 316:lp_solve_5.5/lp_utils.c ****   if(forcefree) {
 2674               		.loc 2 316 0
 2675 1044 8F81      		ldd r24,Y+7
 2676 1046 8823      		tst r24
 2677 1048 01F4      		brne .+2
 2678 104a 00C0      		rjmp .L105
 317:lp_solve_5.5/lp_utils.c ****     FREE(mempool->vectorarray[i]);
 2679               		.loc 2 317 0
 2680 104c 8B81      		ldd r24,Y+3
 2681 104e 9C81      		ldd r25,Y+4
 2682 1050 FC01      		movw r30,r24
 2683 1052 2681      		ldd r18,Z+6
 2684 1054 3781      		ldd r19,Z+7
 2685 1056 8981      		ldd r24,Y+1
 2686 1058 9A81      		ldd r25,Y+2
 2687 105a 880F      		lsl r24
 2688 105c 991F      		rol r25
 2689 105e 820F      		add r24,r18
 2690 1060 931F      		adc r25,r19
 2691 1062 FC01      		movw r30,r24
 2692 1064 8081      		ld r24,Z
 2693 1066 9181      		ldd r25,Z+1
 2694 1068 892B      		or r24,r25
 2695 106a 01F0      		breq .L106
 2696               		.loc 2 317 0 is_stmt 0 discriminator 1
 2697 106c 8B81      		ldd r24,Y+3
 2698 106e 9C81      		ldd r25,Y+4
 2699 1070 FC01      		movw r30,r24
 2700 1072 2681      		ldd r18,Z+6
 2701 1074 3781      		ldd r19,Z+7
 2702 1076 8981      		ldd r24,Y+1
 2703 1078 9A81      		ldd r25,Y+2
 2704 107a 880F      		lsl r24
 2705 107c 991F      		rol r25
 2706 107e 820F      		add r24,r18
 2707 1080 931F      		adc r25,r19
 2708 1082 FC01      		movw r30,r24
 2709 1084 8081      		ld r24,Z
 2710 1086 9181      		ldd r25,Z+1
 2711 1088 0E94 0000 		call free
 2712 108c 8B81      		ldd r24,Y+3
 2713 108e 9C81      		ldd r25,Y+4
 2714 1090 FC01      		movw r30,r24
 2715 1092 2681      		ldd r18,Z+6
 2716 1094 3781      		ldd r19,Z+7
 2717 1096 8981      		ldd r24,Y+1
 2718 1098 9A81      		ldd r25,Y+2
 2719 109a 880F      		lsl r24
 2720 109c 991F      		rol r25
 2721 109e 820F      		add r24,r18
 2722 10a0 931F      		adc r25,r19
 2723 10a2 FC01      		movw r30,r24
 2724 10a4 1182      		std Z+1,__zero_reg__
 2725 10a6 1082      		st Z,__zero_reg__
 2726               	.L106:
 318:lp_solve_5.5/lp_utils.c ****     mempool->count--;
 2727               		.loc 2 318 0 is_stmt 1
 2728 10a8 8B81      		ldd r24,Y+3
 2729 10aa 9C81      		ldd r25,Y+4
 2730 10ac FC01      		movw r30,r24
 2731 10ae 8481      		ldd r24,Z+4
 2732 10b0 9581      		ldd r25,Z+5
 2733 10b2 9C01      		movw r18,r24
 2734 10b4 2150      		subi r18,1
 2735 10b6 3109      		sbc r19,__zero_reg__
 2736 10b8 8B81      		ldd r24,Y+3
 2737 10ba 9C81      		ldd r25,Y+4
 2738 10bc FC01      		movw r30,r24
 2739 10be 3583      		std Z+5,r19
 2740 10c0 2483      		std Z+4,r18
 319:lp_solve_5.5/lp_utils.c ****     for(; i < mempool->count; i++)
 2741               		.loc 2 319 0
 2742 10c2 00C0      		rjmp .L107
 2743               	.L108:
 320:lp_solve_5.5/lp_utils.c ****       mempool->vectorarray[i] = mempool->vectorarray[i+1];
 2744               		.loc 2 320 0 discriminator 2
 2745 10c4 8B81      		ldd r24,Y+3
 2746 10c6 9C81      		ldd r25,Y+4
 2747 10c8 FC01      		movw r30,r24
 2748 10ca 2681      		ldd r18,Z+6
 2749 10cc 3781      		ldd r19,Z+7
 2750 10ce 8981      		ldd r24,Y+1
 2751 10d0 9A81      		ldd r25,Y+2
 2752 10d2 880F      		lsl r24
 2753 10d4 991F      		rol r25
 2754 10d6 820F      		add r24,r18
 2755 10d8 931F      		adc r25,r19
 2756 10da 2B81      		ldd r18,Y+3
 2757 10dc 3C81      		ldd r19,Y+4
 2758 10de F901      		movw r30,r18
 2759 10e0 4681      		ldd r20,Z+6
 2760 10e2 5781      		ldd r21,Z+7
 2761 10e4 2981      		ldd r18,Y+1
 2762 10e6 3A81      		ldd r19,Y+2
 2763 10e8 2F5F      		subi r18,-1
 2764 10ea 3F4F      		sbci r19,-1
 2765 10ec 220F      		lsl r18
 2766 10ee 331F      		rol r19
 2767 10f0 240F      		add r18,r20
 2768 10f2 351F      		adc r19,r21
 2769 10f4 F901      		movw r30,r18
 2770 10f6 2081      		ld r18,Z
 2771 10f8 3181      		ldd r19,Z+1
 2772 10fa FC01      		movw r30,r24
 2773 10fc 3183      		std Z+1,r19
 2774 10fe 2083      		st Z,r18
 319:lp_solve_5.5/lp_utils.c ****     for(; i < mempool->count; i++)
 2775               		.loc 2 319 0 discriminator 2
 2776 1100 8981      		ldd r24,Y+1
 2777 1102 9A81      		ldd r25,Y+2
 2778 1104 0196      		adiw r24,1
 2779 1106 9A83      		std Y+2,r25
 2780 1108 8983      		std Y+1,r24
 2781               	.L107:
 319:lp_solve_5.5/lp_utils.c ****     for(; i < mempool->count; i++)
 2782               		.loc 2 319 0 is_stmt 0 discriminator 1
 2783 110a 8B81      		ldd r24,Y+3
 2784 110c 9C81      		ldd r25,Y+4
 2785 110e FC01      		movw r30,r24
 2786 1110 2481      		ldd r18,Z+4
 2787 1112 3581      		ldd r19,Z+5
 2788 1114 8981      		ldd r24,Y+1
 2789 1116 9A81      		ldd r25,Y+2
 2790 1118 8217      		cp r24,r18
 2791 111a 9307      		cpc r25,r19
 2792 111c 04F0      		brlt .L108
 2793 111e 00C0      		rjmp .L109
 2794               	.L105:
 321:lp_solve_5.5/lp_utils.c ****   }
 322:lp_solve_5.5/lp_utils.c ****   else
 323:lp_solve_5.5/lp_utils.c ****     mempool->vectorsize[i] *= -1;
 2795               		.loc 2 323 0 is_stmt 1
 2796 1120 8B81      		ldd r24,Y+3
 2797 1122 9C81      		ldd r25,Y+4
 2798 1124 FC01      		movw r30,r24
 2799 1126 2085      		ldd r18,Z+8
 2800 1128 3185      		ldd r19,Z+9
 2801 112a 8981      		ldd r24,Y+1
 2802 112c 9A81      		ldd r25,Y+2
 2803 112e 880F      		lsl r24
 2804 1130 991F      		rol r25
 2805 1132 820F      		add r24,r18
 2806 1134 931F      		adc r25,r19
 2807 1136 2B81      		ldd r18,Y+3
 2808 1138 3C81      		ldd r19,Y+4
 2809 113a F901      		movw r30,r18
 2810 113c 4085      		ldd r20,Z+8
 2811 113e 5185      		ldd r21,Z+9
 2812 1140 2981      		ldd r18,Y+1
 2813 1142 3A81      		ldd r19,Y+2
 2814 1144 220F      		lsl r18
 2815 1146 331F      		rol r19
 2816 1148 240F      		add r18,r20
 2817 114a 351F      		adc r19,r21
 2818 114c F901      		movw r30,r18
 2819 114e 2081      		ld r18,Z
 2820 1150 3181      		ldd r19,Z+1
 2821 1152 3195      		neg r19
 2822 1154 2195      		neg r18
 2823 1156 3109      		sbc r19,__zero_reg__
 2824 1158 FC01      		movw r30,r24
 2825 115a 3183      		std Z+1,r19
 2826 115c 2083      		st Z,r18
 2827               	.L109:
 324:lp_solve_5.5/lp_utils.c **** 
 325:lp_solve_5.5/lp_utils.c ****   return( TRUE );
 2828               		.loc 2 325 0
 2829 115e 81E0      		ldi r24,lo8(1)
 2830               	.L104:
 2831               	/* epilogue start */
 326:lp_solve_5.5/lp_utils.c **** }
 2832               		.loc 2 326 0
 2833 1160 2796      		adiw r28,7
 2834 1162 0FB6      		in __tmp_reg__,__SREG__
 2835 1164 F894      		cli
 2836 1166 DEBF      		out __SP_H__,r29
 2837 1168 0FBE      		out __SREG__,__tmp_reg__
 2838 116a CDBF      		out __SP_L__,r28
 2839 116c DF91      		pop r29
 2840 116e CF91      		pop r28
 2841 1170 0895      		ret
 2842               		.cfi_endproc
 2843               	.LFE19:
 2845               	.global	mempool_free
 2847               	mempool_free:
 2848               	.LFB20:
 327:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL mempool_free(workarraysrec **mempool)
 328:lp_solve_5.5/lp_utils.c **** {
 2849               		.loc 2 328 0
 2850               		.cfi_startproc
 2851 1172 CF93      		push r28
 2852               	.LCFI52:
 2853               		.cfi_def_cfa_offset 3
 2854               		.cfi_offset 28, -2
 2855 1174 DF93      		push r29
 2856               	.LCFI53:
 2857               		.cfi_def_cfa_offset 4
 2858               		.cfi_offset 29, -3
 2859 1176 00D0      		rcall .
 2860 1178 00D0      		rcall .
 2861               	.LCFI54:
 2862               		.cfi_def_cfa_offset 8
 2863 117a CDB7      		in r28,__SP_L__
 2864 117c DEB7      		in r29,__SP_H__
 2865               	.LCFI55:
 2866               		.cfi_def_cfa_register 28
 2867               	/* prologue: function */
 2868               	/* frame size = 4 */
 2869               	/* stack size = 6 */
 2870               	.L__stack_usage = 6
 2871 117e 9C83      		std Y+4,r25
 2872 1180 8B83      		std Y+3,r24
 329:lp_solve_5.5/lp_utils.c ****   int i = (*mempool)->count;
 2873               		.loc 2 329 0
 2874 1182 8B81      		ldd r24,Y+3
 2875 1184 9C81      		ldd r25,Y+4
 2876 1186 FC01      		movw r30,r24
 2877 1188 8081      		ld r24,Z
 2878 118a 9181      		ldd r25,Z+1
 2879 118c FC01      		movw r30,r24
 2880 118e 8481      		ldd r24,Z+4
 2881 1190 9581      		ldd r25,Z+5
 2882 1192 9A83      		std Y+2,r25
 2883 1194 8983      		std Y+1,r24
 330:lp_solve_5.5/lp_utils.c **** 
 331:lp_solve_5.5/lp_utils.c ****   while(i > 0) {
 2884               		.loc 2 331 0
 2885 1196 00C0      		rjmp .L112
 2886               	.L114:
 332:lp_solve_5.5/lp_utils.c ****     i--;
 2887               		.loc 2 332 0
 2888 1198 8981      		ldd r24,Y+1
 2889 119a 9A81      		ldd r25,Y+2
 2890 119c 0197      		sbiw r24,1
 2891 119e 9A83      		std Y+2,r25
 2892 11a0 8983      		std Y+1,r24
 333:lp_solve_5.5/lp_utils.c ****     if((*mempool)->vectorsize[i] < 0)  /* Handle unused vectors */
 2893               		.loc 2 333 0
 2894 11a2 8B81      		ldd r24,Y+3
 2895 11a4 9C81      		ldd r25,Y+4
 2896 11a6 FC01      		movw r30,r24
 2897 11a8 8081      		ld r24,Z
 2898 11aa 9181      		ldd r25,Z+1
 2899 11ac FC01      		movw r30,r24
 2900 11ae 2085      		ldd r18,Z+8
 2901 11b0 3185      		ldd r19,Z+9
 2902 11b2 8981      		ldd r24,Y+1
 2903 11b4 9A81      		ldd r25,Y+2
 2904 11b6 880F      		lsl r24
 2905 11b8 991F      		rol r25
 2906 11ba 820F      		add r24,r18
 2907 11bc 931F      		adc r25,r19
 2908 11be FC01      		movw r30,r24
 2909 11c0 8081      		ld r24,Z
 2910 11c2 9181      		ldd r25,Z+1
 2911 11c4 9923      		tst r25
 2912 11c6 04F4      		brge .L113
 334:lp_solve_5.5/lp_utils.c ****       (*mempool)->vectorsize[i] *= -1;
 2913               		.loc 2 334 0
 2914 11c8 8B81      		ldd r24,Y+3
 2915 11ca 9C81      		ldd r25,Y+4
 2916 11cc FC01      		movw r30,r24
 2917 11ce 8081      		ld r24,Z
 2918 11d0 9181      		ldd r25,Z+1
 2919 11d2 FC01      		movw r30,r24
 2920 11d4 2085      		ldd r18,Z+8
 2921 11d6 3185      		ldd r19,Z+9
 2922 11d8 8981      		ldd r24,Y+1
 2923 11da 9A81      		ldd r25,Y+2
 2924 11dc 880F      		lsl r24
 2925 11de 991F      		rol r25
 2926 11e0 820F      		add r24,r18
 2927 11e2 931F      		adc r25,r19
 2928 11e4 2B81      		ldd r18,Y+3
 2929 11e6 3C81      		ldd r19,Y+4
 2930 11e8 F901      		movw r30,r18
 2931 11ea 2081      		ld r18,Z
 2932 11ec 3181      		ldd r19,Z+1
 2933 11ee F901      		movw r30,r18
 2934 11f0 4085      		ldd r20,Z+8
 2935 11f2 5185      		ldd r21,Z+9
 2936 11f4 2981      		ldd r18,Y+1
 2937 11f6 3A81      		ldd r19,Y+2
 2938 11f8 220F      		lsl r18
 2939 11fa 331F      		rol r19
 2940 11fc 240F      		add r18,r20
 2941 11fe 351F      		adc r19,r21
 2942 1200 F901      		movw r30,r18
 2943 1202 2081      		ld r18,Z
 2944 1204 3181      		ldd r19,Z+1
 2945 1206 3195      		neg r19
 2946 1208 2195      		neg r18
 2947 120a 3109      		sbc r19,__zero_reg__
 2948 120c FC01      		movw r30,r24
 2949 120e 3183      		std Z+1,r19
 2950 1210 2083      		st Z,r18
 2951               	.L113:
 335:lp_solve_5.5/lp_utils.c ****     mempool_releaseVector(*mempool, (*mempool)->vectorarray[i], TRUE);
 2952               		.loc 2 335 0
 2953 1212 8B81      		ldd r24,Y+3
 2954 1214 9C81      		ldd r25,Y+4
 2955 1216 FC01      		movw r30,r24
 2956 1218 8081      		ld r24,Z
 2957 121a 9181      		ldd r25,Z+1
 2958 121c FC01      		movw r30,r24
 2959 121e 2681      		ldd r18,Z+6
 2960 1220 3781      		ldd r19,Z+7
 2961 1222 8981      		ldd r24,Y+1
 2962 1224 9A81      		ldd r25,Y+2
 2963 1226 880F      		lsl r24
 2964 1228 991F      		rol r25
 2965 122a 820F      		add r24,r18
 2966 122c 931F      		adc r25,r19
 2967 122e FC01      		movw r30,r24
 2968 1230 2081      		ld r18,Z
 2969 1232 3181      		ldd r19,Z+1
 2970 1234 8B81      		ldd r24,Y+3
 2971 1236 9C81      		ldd r25,Y+4
 2972 1238 FC01      		movw r30,r24
 2973 123a 8081      		ld r24,Z
 2974 123c 9181      		ldd r25,Z+1
 2975 123e 41E0      		ldi r20,lo8(1)
 2976 1240 B901      		movw r22,r18
 2977 1242 0E94 0000 		call mempool_releaseVector
 2978               	.L112:
 331:lp_solve_5.5/lp_utils.c ****     i--;
 2979               		.loc 2 331 0
 2980 1246 8981      		ldd r24,Y+1
 2981 1248 9A81      		ldd r25,Y+2
 2982 124a 1816      		cp __zero_reg__,r24
 2983 124c 1906      		cpc __zero_reg__,r25
 2984 124e 04F4      		brge .+2
 2985 1250 00C0      		rjmp .L114
 336:lp_solve_5.5/lp_utils.c ****   }
 337:lp_solve_5.5/lp_utils.c ****   FREE((*mempool)->vectorarray);
 2986               		.loc 2 337 0
 2987 1252 8B81      		ldd r24,Y+3
 2988 1254 9C81      		ldd r25,Y+4
 2989 1256 FC01      		movw r30,r24
 2990 1258 8081      		ld r24,Z
 2991 125a 9181      		ldd r25,Z+1
 2992 125c FC01      		movw r30,r24
 2993 125e 8681      		ldd r24,Z+6
 2994 1260 9781      		ldd r25,Z+7
 2995 1262 892B      		or r24,r25
 2996 1264 01F0      		breq .L115
 2997               		.loc 2 337 0 is_stmt 0 discriminator 1
 2998 1266 8B81      		ldd r24,Y+3
 2999 1268 9C81      		ldd r25,Y+4
 3000 126a FC01      		movw r30,r24
 3001 126c 8081      		ld r24,Z
 3002 126e 9181      		ldd r25,Z+1
 3003 1270 FC01      		movw r30,r24
 3004 1272 8681      		ldd r24,Z+6
 3005 1274 9781      		ldd r25,Z+7
 3006 1276 0E94 0000 		call free
 3007 127a 8B81      		ldd r24,Y+3
 3008 127c 9C81      		ldd r25,Y+4
 3009 127e FC01      		movw r30,r24
 3010 1280 8081      		ld r24,Z
 3011 1282 9181      		ldd r25,Z+1
 3012 1284 FC01      		movw r30,r24
 3013 1286 1782      		std Z+7,__zero_reg__
 3014 1288 1682      		std Z+6,__zero_reg__
 3015               	.L115:
 338:lp_solve_5.5/lp_utils.c ****   FREE((*mempool)->vectorsize);
 3016               		.loc 2 338 0 is_stmt 1
 3017 128a 8B81      		ldd r24,Y+3
 3018 128c 9C81      		ldd r25,Y+4
 3019 128e FC01      		movw r30,r24
 3020 1290 8081      		ld r24,Z
 3021 1292 9181      		ldd r25,Z+1
 3022 1294 FC01      		movw r30,r24
 3023 1296 8085      		ldd r24,Z+8
 3024 1298 9185      		ldd r25,Z+9
 3025 129a 892B      		or r24,r25
 3026 129c 01F0      		breq .L116
 3027               		.loc 2 338 0 is_stmt 0 discriminator 1
 3028 129e 8B81      		ldd r24,Y+3
 3029 12a0 9C81      		ldd r25,Y+4
 3030 12a2 FC01      		movw r30,r24
 3031 12a4 8081      		ld r24,Z
 3032 12a6 9181      		ldd r25,Z+1
 3033 12a8 FC01      		movw r30,r24
 3034 12aa 8085      		ldd r24,Z+8
 3035 12ac 9185      		ldd r25,Z+9
 3036 12ae 0E94 0000 		call free
 3037 12b2 8B81      		ldd r24,Y+3
 3038 12b4 9C81      		ldd r25,Y+4
 3039 12b6 FC01      		movw r30,r24
 3040 12b8 8081      		ld r24,Z
 3041 12ba 9181      		ldd r25,Z+1
 3042 12bc FC01      		movw r30,r24
 3043 12be 1186      		std Z+9,__zero_reg__
 3044 12c0 1086      		std Z+8,__zero_reg__
 3045               	.L116:
 339:lp_solve_5.5/lp_utils.c ****   FREE(*mempool);
 3046               		.loc 2 339 0 is_stmt 1
 3047 12c2 8B81      		ldd r24,Y+3
 3048 12c4 9C81      		ldd r25,Y+4
 3049 12c6 FC01      		movw r30,r24
 3050 12c8 8081      		ld r24,Z
 3051 12ca 9181      		ldd r25,Z+1
 3052 12cc 892B      		or r24,r25
 3053 12ce 01F0      		breq .L117
 3054               		.loc 2 339 0 is_stmt 0 discriminator 1
 3055 12d0 8B81      		ldd r24,Y+3
 3056 12d2 9C81      		ldd r25,Y+4
 3057 12d4 FC01      		movw r30,r24
 3058 12d6 8081      		ld r24,Z
 3059 12d8 9181      		ldd r25,Z+1
 3060 12da 0E94 0000 		call free
 3061 12de 8B81      		ldd r24,Y+3
 3062 12e0 9C81      		ldd r25,Y+4
 3063 12e2 FC01      		movw r30,r24
 3064 12e4 1182      		std Z+1,__zero_reg__
 3065 12e6 1082      		st Z,__zero_reg__
 3066               	.L117:
 340:lp_solve_5.5/lp_utils.c ****   return( TRUE );
 3067               		.loc 2 340 0 is_stmt 1
 3068 12e8 81E0      		ldi r24,lo8(1)
 3069               	/* epilogue start */
 341:lp_solve_5.5/lp_utils.c **** }
 3070               		.loc 2 341 0
 3071 12ea 0F90      		pop __tmp_reg__
 3072 12ec 0F90      		pop __tmp_reg__
 3073 12ee 0F90      		pop __tmp_reg__
 3074 12f0 0F90      		pop __tmp_reg__
 3075 12f2 DF91      		pop r29
 3076 12f4 CF91      		pop r28
 3077 12f6 0895      		ret
 3078               		.cfi_endproc
 3079               	.LFE20:
 3081               	.global	cloneREAL
 3083               	cloneREAL:
 3084               	.LFB21:
 342:lp_solve_5.5/lp_utils.c **** 
 343:lp_solve_5.5/lp_utils.c **** REAL *cloneREAL(lprec *lp, REAL *origlist, int size)
 344:lp_solve_5.5/lp_utils.c **** {
 3085               		.loc 2 344 0
 3086               		.cfi_startproc
 3087 12f8 CF93      		push r28
 3088               	.LCFI56:
 3089               		.cfi_def_cfa_offset 3
 3090               		.cfi_offset 28, -2
 3091 12fa DF93      		push r29
 3092               	.LCFI57:
 3093               		.cfi_def_cfa_offset 4
 3094               		.cfi_offset 29, -3
 3095 12fc CDB7      		in r28,__SP_L__
 3096 12fe DEB7      		in r29,__SP_H__
 3097               	.LCFI58:
 3098               		.cfi_def_cfa_register 28
 3099 1300 2897      		sbiw r28,8
 3100               	.LCFI59:
 3101               		.cfi_def_cfa_offset 12
 3102 1302 0FB6      		in __tmp_reg__,__SREG__
 3103 1304 F894      		cli
 3104 1306 DEBF      		out __SP_H__,r29
 3105 1308 0FBE      		out __SREG__,__tmp_reg__
 3106 130a CDBF      		out __SP_L__,r28
 3107               	/* prologue: function */
 3108               	/* frame size = 8 */
 3109               	/* stack size = 10 */
 3110               	.L__stack_usage = 10
 3111 130c 9C83      		std Y+4,r25
 3112 130e 8B83      		std Y+3,r24
 3113 1310 7E83      		std Y+6,r23
 3114 1312 6D83      		std Y+5,r22
 3115 1314 5887      		std Y+8,r21
 3116 1316 4F83      		std Y+7,r20
 345:lp_solve_5.5/lp_utils.c ****   REAL *newlist;
 346:lp_solve_5.5/lp_utils.c **** 
 347:lp_solve_5.5/lp_utils.c ****   size += 1;
 3117               		.loc 2 347 0
 3118 1318 8F81      		ldd r24,Y+7
 3119 131a 9885      		ldd r25,Y+8
 3120 131c 0196      		adiw r24,1
 3121 131e 9887      		std Y+8,r25
 3122 1320 8F83      		std Y+7,r24
 348:lp_solve_5.5/lp_utils.c ****   if(allocREAL(lp, &newlist, size, FALSE))
 3123               		.loc 2 348 0
 3124 1322 4F81      		ldd r20,Y+7
 3125 1324 5885      		ldd r21,Y+8
 3126 1326 8B81      		ldd r24,Y+3
 3127 1328 9C81      		ldd r25,Y+4
 3128 132a 20E0      		ldi r18,0
 3129 132c BE01      		movw r22,r28
 3130 132e 6F5F      		subi r22,-1
 3131 1330 7F4F      		sbci r23,-1
 3132 1332 0E94 0000 		call allocREAL
 3133 1336 8823      		tst r24
 3134 1338 01F0      		breq .L120
 349:lp_solve_5.5/lp_utils.c ****     MEMCOPY(newlist, origlist, size);
 3135               		.loc 2 349 0
 3136 133a 8F81      		ldd r24,Y+7
 3137 133c 9885      		ldd r25,Y+8
 3138 133e AC01      		movw r20,r24
 3139 1340 440F      		lsl r20
 3140 1342 551F      		rol r21
 3141 1344 440F      		lsl r20
 3142 1346 551F      		rol r21
 3143 1348 8981      		ldd r24,Y+1
 3144 134a 9A81      		ldd r25,Y+2
 3145 134c 2D81      		ldd r18,Y+5
 3146 134e 3E81      		ldd r19,Y+6
 3147 1350 B901      		movw r22,r18
 3148 1352 0E94 0000 		call memcpy
 3149               	.L120:
 350:lp_solve_5.5/lp_utils.c ****   return(newlist);
 3150               		.loc 2 350 0
 3151 1356 8981      		ldd r24,Y+1
 3152 1358 9A81      		ldd r25,Y+2
 3153               	/* epilogue start */
 351:lp_solve_5.5/lp_utils.c **** }
 3154               		.loc 2 351 0
 3155 135a 2896      		adiw r28,8
 3156 135c 0FB6      		in __tmp_reg__,__SREG__
 3157 135e F894      		cli
 3158 1360 DEBF      		out __SP_H__,r29
 3159 1362 0FBE      		out __SREG__,__tmp_reg__
 3160 1364 CDBF      		out __SP_L__,r28
 3161 1366 DF91      		pop r29
 3162 1368 CF91      		pop r28
 3163 136a 0895      		ret
 3164               		.cfi_endproc
 3165               	.LFE21:
 3167               	.global	cloneMYBOOL
 3169               	cloneMYBOOL:
 3170               	.LFB22:
 352:lp_solve_5.5/lp_utils.c **** MYBOOL *cloneMYBOOL(lprec *lp, MYBOOL *origlist, int size)
 353:lp_solve_5.5/lp_utils.c **** {
 3171               		.loc 2 353 0
 3172               		.cfi_startproc
 3173 136c CF93      		push r28
 3174               	.LCFI60:
 3175               		.cfi_def_cfa_offset 3
 3176               		.cfi_offset 28, -2
 3177 136e DF93      		push r29
 3178               	.LCFI61:
 3179               		.cfi_def_cfa_offset 4
 3180               		.cfi_offset 29, -3
 3181 1370 CDB7      		in r28,__SP_L__
 3182 1372 DEB7      		in r29,__SP_H__
 3183               	.LCFI62:
 3184               		.cfi_def_cfa_register 28
 3185 1374 2897      		sbiw r28,8
 3186               	.LCFI63:
 3187               		.cfi_def_cfa_offset 12
 3188 1376 0FB6      		in __tmp_reg__,__SREG__
 3189 1378 F894      		cli
 3190 137a DEBF      		out __SP_H__,r29
 3191 137c 0FBE      		out __SREG__,__tmp_reg__
 3192 137e CDBF      		out __SP_L__,r28
 3193               	/* prologue: function */
 3194               	/* frame size = 8 */
 3195               	/* stack size = 10 */
 3196               	.L__stack_usage = 10
 3197 1380 9C83      		std Y+4,r25
 3198 1382 8B83      		std Y+3,r24
 3199 1384 7E83      		std Y+6,r23
 3200 1386 6D83      		std Y+5,r22
 3201 1388 5887      		std Y+8,r21
 3202 138a 4F83      		std Y+7,r20
 354:lp_solve_5.5/lp_utils.c ****   MYBOOL *newlist;
 355:lp_solve_5.5/lp_utils.c **** 
 356:lp_solve_5.5/lp_utils.c ****   size += 1;
 3203               		.loc 2 356 0
 3204 138c 8F81      		ldd r24,Y+7
 3205 138e 9885      		ldd r25,Y+8
 3206 1390 0196      		adiw r24,1
 3207 1392 9887      		std Y+8,r25
 3208 1394 8F83      		std Y+7,r24
 357:lp_solve_5.5/lp_utils.c ****   if(allocMYBOOL(lp, &newlist, size, FALSE))
 3209               		.loc 2 357 0
 3210 1396 4F81      		ldd r20,Y+7
 3211 1398 5885      		ldd r21,Y+8
 3212 139a 8B81      		ldd r24,Y+3
 3213 139c 9C81      		ldd r25,Y+4
 3214 139e 20E0      		ldi r18,0
 3215 13a0 BE01      		movw r22,r28
 3216 13a2 6F5F      		subi r22,-1
 3217 13a4 7F4F      		sbci r23,-1
 3218 13a6 0E94 0000 		call allocMYBOOL
 3219 13aa 8823      		tst r24
 3220 13ac 01F0      		breq .L123
 358:lp_solve_5.5/lp_utils.c ****     MEMCOPY(newlist, origlist, size);
 3221               		.loc 2 358 0
 3222 13ae 4F81      		ldd r20,Y+7
 3223 13b0 5885      		ldd r21,Y+8
 3224 13b2 8981      		ldd r24,Y+1
 3225 13b4 9A81      		ldd r25,Y+2
 3226 13b6 2D81      		ldd r18,Y+5
 3227 13b8 3E81      		ldd r19,Y+6
 3228 13ba B901      		movw r22,r18
 3229 13bc 0E94 0000 		call memcpy
 3230               	.L123:
 359:lp_solve_5.5/lp_utils.c ****   return(newlist);
 3231               		.loc 2 359 0
 3232 13c0 8981      		ldd r24,Y+1
 3233 13c2 9A81      		ldd r25,Y+2
 3234               	/* epilogue start */
 360:lp_solve_5.5/lp_utils.c **** }
 3235               		.loc 2 360 0
 3236 13c4 2896      		adiw r28,8
 3237 13c6 0FB6      		in __tmp_reg__,__SREG__
 3238 13c8 F894      		cli
 3239 13ca DEBF      		out __SP_H__,r29
 3240 13cc 0FBE      		out __SREG__,__tmp_reg__
 3241 13ce CDBF      		out __SP_L__,r28
 3242 13d0 DF91      		pop r29
 3243 13d2 CF91      		pop r28
 3244 13d4 0895      		ret
 3245               		.cfi_endproc
 3246               	.LFE22:
 3248               	.global	cloneINT
 3250               	cloneINT:
 3251               	.LFB23:
 361:lp_solve_5.5/lp_utils.c **** int *cloneINT(lprec *lp, int *origlist, int size)
 362:lp_solve_5.5/lp_utils.c **** {
 3252               		.loc 2 362 0
 3253               		.cfi_startproc
 3254 13d6 CF93      		push r28
 3255               	.LCFI64:
 3256               		.cfi_def_cfa_offset 3
 3257               		.cfi_offset 28, -2
 3258 13d8 DF93      		push r29
 3259               	.LCFI65:
 3260               		.cfi_def_cfa_offset 4
 3261               		.cfi_offset 29, -3
 3262 13da CDB7      		in r28,__SP_L__
 3263 13dc DEB7      		in r29,__SP_H__
 3264               	.LCFI66:
 3265               		.cfi_def_cfa_register 28
 3266 13de 2897      		sbiw r28,8
 3267               	.LCFI67:
 3268               		.cfi_def_cfa_offset 12
 3269 13e0 0FB6      		in __tmp_reg__,__SREG__
 3270 13e2 F894      		cli
 3271 13e4 DEBF      		out __SP_H__,r29
 3272 13e6 0FBE      		out __SREG__,__tmp_reg__
 3273 13e8 CDBF      		out __SP_L__,r28
 3274               	/* prologue: function */
 3275               	/* frame size = 8 */
 3276               	/* stack size = 10 */
 3277               	.L__stack_usage = 10
 3278 13ea 9C83      		std Y+4,r25
 3279 13ec 8B83      		std Y+3,r24
 3280 13ee 7E83      		std Y+6,r23
 3281 13f0 6D83      		std Y+5,r22
 3282 13f2 5887      		std Y+8,r21
 3283 13f4 4F83      		std Y+7,r20
 363:lp_solve_5.5/lp_utils.c ****   int *newlist;
 364:lp_solve_5.5/lp_utils.c **** 
 365:lp_solve_5.5/lp_utils.c ****   size += 1;
 3284               		.loc 2 365 0
 3285 13f6 8F81      		ldd r24,Y+7
 3286 13f8 9885      		ldd r25,Y+8
 3287 13fa 0196      		adiw r24,1
 3288 13fc 9887      		std Y+8,r25
 3289 13fe 8F83      		std Y+7,r24
 366:lp_solve_5.5/lp_utils.c ****   if(allocINT(lp, &newlist, size, FALSE))
 3290               		.loc 2 366 0
 3291 1400 4F81      		ldd r20,Y+7
 3292 1402 5885      		ldd r21,Y+8
 3293 1404 8B81      		ldd r24,Y+3
 3294 1406 9C81      		ldd r25,Y+4
 3295 1408 20E0      		ldi r18,0
 3296 140a BE01      		movw r22,r28
 3297 140c 6F5F      		subi r22,-1
 3298 140e 7F4F      		sbci r23,-1
 3299 1410 0E94 0000 		call allocINT
 3300 1414 8823      		tst r24
 3301 1416 01F0      		breq .L126
 367:lp_solve_5.5/lp_utils.c ****     MEMCOPY(newlist, origlist, size);
 3302               		.loc 2 367 0
 3303 1418 8F81      		ldd r24,Y+7
 3304 141a 9885      		ldd r25,Y+8
 3305 141c AC01      		movw r20,r24
 3306 141e 440F      		lsl r20
 3307 1420 551F      		rol r21
 3308 1422 8981      		ldd r24,Y+1
 3309 1424 9A81      		ldd r25,Y+2
 3310 1426 2D81      		ldd r18,Y+5
 3311 1428 3E81      		ldd r19,Y+6
 3312 142a B901      		movw r22,r18
 3313 142c 0E94 0000 		call memcpy
 3314               	.L126:
 368:lp_solve_5.5/lp_utils.c ****   return(newlist);
 3315               		.loc 2 368 0
 3316 1430 8981      		ldd r24,Y+1
 3317 1432 9A81      		ldd r25,Y+2
 3318               	/* epilogue start */
 369:lp_solve_5.5/lp_utils.c **** }
 3319               		.loc 2 369 0
 3320 1434 2896      		adiw r28,8
 3321 1436 0FB6      		in __tmp_reg__,__SREG__
 3322 1438 F894      		cli
 3323 143a DEBF      		out __SP_H__,r29
 3324 143c 0FBE      		out __SREG__,__tmp_reg__
 3325 143e CDBF      		out __SP_L__,r28
 3326 1440 DF91      		pop r29
 3327 1442 CF91      		pop r28
 3328 1444 0895      		ret
 3329               		.cfi_endproc
 3330               	.LFE23:
 3332               	.global	__gtsf2
 3333               	.global	__ltsf2
 3334               	.global	roundVector
 3336               	roundVector:
 3337               	.LFB24:
 370:lp_solve_5.5/lp_utils.c **** 
 371:lp_solve_5.5/lp_utils.c **** STATIC void roundVector(LREAL *myvector, int endpos, LREAL roundzero)
 372:lp_solve_5.5/lp_utils.c **** {
 3338               		.loc 2 372 0
 3339               		.cfi_startproc
 3340 1446 CF93      		push r28
 3341               	.LCFI68:
 3342               		.cfi_def_cfa_offset 3
 3343               		.cfi_offset 28, -2
 3344 1448 DF93      		push r29
 3345               	.LCFI69:
 3346               		.cfi_def_cfa_offset 4
 3347               		.cfi_offset 29, -3
 3348 144a CDB7      		in r28,__SP_L__
 3349 144c DEB7      		in r29,__SP_H__
 3350               	.LCFI70:
 3351               		.cfi_def_cfa_register 28
 3352 144e 2897      		sbiw r28,8
 3353               	.LCFI71:
 3354               		.cfi_def_cfa_offset 12
 3355 1450 0FB6      		in __tmp_reg__,__SREG__
 3356 1452 F894      		cli
 3357 1454 DEBF      		out __SP_H__,r29
 3358 1456 0FBE      		out __SREG__,__tmp_reg__
 3359 1458 CDBF      		out __SP_L__,r28
 3360               	/* prologue: function */
 3361               	/* frame size = 8 */
 3362               	/* stack size = 10 */
 3363               	.L__stack_usage = 10
 3364 145a 9A83      		std Y+2,r25
 3365 145c 8983      		std Y+1,r24
 3366 145e 7C83      		std Y+4,r23
 3367 1460 6B83      		std Y+3,r22
 3368 1462 2D83      		std Y+5,r18
 3369 1464 3E83      		std Y+6,r19
 3370 1466 4F83      		std Y+7,r20
 3371 1468 5887      		std Y+8,r21
 373:lp_solve_5.5/lp_utils.c ****   if(roundzero > 0)
 3372               		.loc 2 373 0
 3373 146a 20E0      		ldi r18,0
 3374 146c 30E0      		ldi r19,0
 3375 146e A901      		movw r20,r18
 3376 1470 6D81      		ldd r22,Y+5
 3377 1472 7E81      		ldd r23,Y+6
 3378 1474 8F81      		ldd r24,Y+7
 3379 1476 9885      		ldd r25,Y+8
 3380 1478 0E94 0000 		call __gtsf2
 3381 147c 1816      		cp __zero_reg__,r24
 3382 147e 04F0      		brlt .L131
 374:lp_solve_5.5/lp_utils.c ****     for(; endpos >= 0; myvector++, endpos--)
 375:lp_solve_5.5/lp_utils.c ****       if(fabs(*myvector) < roundzero)
 376:lp_solve_5.5/lp_utils.c ****         *myvector = 0;
 377:lp_solve_5.5/lp_utils.c **** }
 3383               		.loc 2 377 0
 3384 1480 00C0      		rjmp .L137
 3385               	.L134:
 375:lp_solve_5.5/lp_utils.c ****         *myvector = 0;
 3386               		.loc 2 375 0
 3387 1482 8981      		ldd r24,Y+1
 3388 1484 9A81      		ldd r25,Y+2
 3389 1486 FC01      		movw r30,r24
 3390 1488 8081      		ld r24,Z
 3391 148a 9181      		ldd r25,Z+1
 3392 148c A281      		ldd r26,Z+2
 3393 148e B381      		ldd r27,Z+3
 3394 1490 BF77      		andi r27,0x7f
 3395 1492 2D81      		ldd r18,Y+5
 3396 1494 3E81      		ldd r19,Y+6
 3397 1496 4F81      		ldd r20,Y+7
 3398 1498 5885      		ldd r21,Y+8
 3399 149a BC01      		movw r22,r24
 3400 149c CD01      		movw r24,r26
 3401 149e 0E94 0000 		call __ltsf2
 3402 14a2 8823      		tst r24
 3403 14a4 04F4      		brge .L132
 376:lp_solve_5.5/lp_utils.c **** }
 3404               		.loc 2 376 0
 3405 14a6 8981      		ldd r24,Y+1
 3406 14a8 9A81      		ldd r25,Y+2
 3407 14aa FC01      		movw r30,r24
 3408 14ac 1082      		st Z,__zero_reg__
 3409 14ae 1182      		std Z+1,__zero_reg__
 3410 14b0 1282      		std Z+2,__zero_reg__
 3411 14b2 1382      		std Z+3,__zero_reg__
 3412               	.L132:
 374:lp_solve_5.5/lp_utils.c ****     for(; endpos >= 0; myvector++, endpos--)
 3413               		.loc 2 374 0
 3414 14b4 8981      		ldd r24,Y+1
 3415 14b6 9A81      		ldd r25,Y+2
 3416 14b8 0496      		adiw r24,4
 3417 14ba 9A83      		std Y+2,r25
 3418 14bc 8983      		std Y+1,r24
 3419 14be 8B81      		ldd r24,Y+3
 3420 14c0 9C81      		ldd r25,Y+4
 3421 14c2 0197      		sbiw r24,1
 3422 14c4 9C83      		std Y+4,r25
 3423 14c6 8B83      		std Y+3,r24
 3424               	.L131:
 374:lp_solve_5.5/lp_utils.c ****     for(; endpos >= 0; myvector++, endpos--)
 3425               		.loc 2 374 0 is_stmt 0 discriminator 1
 3426 14c8 8B81      		ldd r24,Y+3
 3427 14ca 9C81      		ldd r25,Y+4
 3428 14cc 9923      		tst r25
 3429 14ce 04F4      		brge .L134
 3430               	.L137:
 3431               		.loc 2 377 0 is_stmt 1
 3432 14d0 0000      		nop
 3433               	/* epilogue start */
 3434 14d2 2896      		adiw r28,8
 3435 14d4 0FB6      		in __tmp_reg__,__SREG__
 3436 14d6 F894      		cli
 3437 14d8 DEBF      		out __SP_H__,r29
 3438 14da 0FBE      		out __SREG__,__tmp_reg__
 3439 14dc CDBF      		out __SP_L__,r28
 3440 14de DF91      		pop r29
 3441 14e0 CF91      		pop r28
 3442 14e2 0895      		ret
 3443               		.cfi_endproc
 3444               	.LFE24:
 3446               	.global	__mulsf3
 3447               	.global	__addsf3
 3448               	.global	__divsf3
 3449               	.global	normalizeVector
 3451               	normalizeVector:
 3452               	.LFB25:
 378:lp_solve_5.5/lp_utils.c **** 
 379:lp_solve_5.5/lp_utils.c **** STATIC REAL normalizeVector(REAL *myvector, int endpos)
 380:lp_solve_5.5/lp_utils.c **** /* Scale the ingoing vector so that its norm is unit, and return the original length */
 381:lp_solve_5.5/lp_utils.c **** {
 3453               		.loc 2 381 0
 3454               		.cfi_startproc
 3455 14e4 CF93      		push r28
 3456               	.LCFI72:
 3457               		.cfi_def_cfa_offset 3
 3458               		.cfi_offset 28, -2
 3459 14e6 DF93      		push r29
 3460               	.LCFI73:
 3461               		.cfi_def_cfa_offset 4
 3462               		.cfi_offset 29, -3
 3463 14e8 CDB7      		in r28,__SP_L__
 3464 14ea DEB7      		in r29,__SP_H__
 3465               	.LCFI74:
 3466               		.cfi_def_cfa_register 28
 3467 14ec 2A97      		sbiw r28,10
 3468               	.LCFI75:
 3469               		.cfi_def_cfa_offset 14
 3470 14ee 0FB6      		in __tmp_reg__,__SREG__
 3471 14f0 F894      		cli
 3472 14f2 DEBF      		out __SP_H__,r29
 3473 14f4 0FBE      		out __SREG__,__tmp_reg__
 3474 14f6 CDBF      		out __SP_L__,r28
 3475               	/* prologue: function */
 3476               	/* frame size = 10 */
 3477               	/* stack size = 12 */
 3478               	.L__stack_usage = 12
 3479 14f8 9887      		std Y+8,r25
 3480 14fa 8F83      		std Y+7,r24
 3481 14fc 7A87      		std Y+10,r23
 3482 14fe 6987      		std Y+9,r22
 382:lp_solve_5.5/lp_utils.c ****   int  i;
 383:lp_solve_5.5/lp_utils.c ****   REAL SSQ;
 384:lp_solve_5.5/lp_utils.c **** 
 385:lp_solve_5.5/lp_utils.c ****   /* Cumulate squares */
 386:lp_solve_5.5/lp_utils.c ****   SSQ = 0;
 3483               		.loc 2 386 0
 3484 1500 1B82      		std Y+3,__zero_reg__
 3485 1502 1C82      		std Y+4,__zero_reg__
 3486 1504 1D82      		std Y+5,__zero_reg__
 3487 1506 1E82      		std Y+6,__zero_reg__
 387:lp_solve_5.5/lp_utils.c ****   for(i = 0; i <= endpos; myvector++, i++)
 3488               		.loc 2 387 0
 3489 1508 1A82      		std Y+2,__zero_reg__
 3490 150a 1982      		std Y+1,__zero_reg__
 3491 150c 00C0      		rjmp .L139
 3492               	.L140:
 388:lp_solve_5.5/lp_utils.c ****     SSQ += (*myvector) * (*myvector);
 3493               		.loc 2 388 0 discriminator 3
 3494 150e 8F81      		ldd r24,Y+7
 3495 1510 9885      		ldd r25,Y+8
 3496 1512 FC01      		movw r30,r24
 3497 1514 8081      		ld r24,Z
 3498 1516 9181      		ldd r25,Z+1
 3499 1518 A281      		ldd r26,Z+2
 3500 151a B381      		ldd r27,Z+3
 3501 151c 2F81      		ldd r18,Y+7
 3502 151e 3885      		ldd r19,Y+8
 3503 1520 F901      		movw r30,r18
 3504 1522 2081      		ld r18,Z
 3505 1524 3181      		ldd r19,Z+1
 3506 1526 4281      		ldd r20,Z+2
 3507 1528 5381      		ldd r21,Z+3
 3508 152a BC01      		movw r22,r24
 3509 152c CD01      		movw r24,r26
 3510 152e 0E94 0000 		call __mulsf3
 3511 1532 DC01      		movw r26,r24
 3512 1534 CB01      		movw r24,r22
 3513 1536 9C01      		movw r18,r24
 3514 1538 AD01      		movw r20,r26
 3515 153a 6B81      		ldd r22,Y+3
 3516 153c 7C81      		ldd r23,Y+4
 3517 153e 8D81      		ldd r24,Y+5
 3518 1540 9E81      		ldd r25,Y+6
 3519 1542 0E94 0000 		call __addsf3
 3520 1546 DC01      		movw r26,r24
 3521 1548 CB01      		movw r24,r22
 3522 154a 8B83      		std Y+3,r24
 3523 154c 9C83      		std Y+4,r25
 3524 154e AD83      		std Y+5,r26
 3525 1550 BE83      		std Y+6,r27
 387:lp_solve_5.5/lp_utils.c ****   for(i = 0; i <= endpos; myvector++, i++)
 3526               		.loc 2 387 0 discriminator 3
 3527 1552 8F81      		ldd r24,Y+7
 3528 1554 9885      		ldd r25,Y+8
 3529 1556 0496      		adiw r24,4
 3530 1558 9887      		std Y+8,r25
 3531 155a 8F83      		std Y+7,r24
 3532 155c 8981      		ldd r24,Y+1
 3533 155e 9A81      		ldd r25,Y+2
 3534 1560 0196      		adiw r24,1
 3535 1562 9A83      		std Y+2,r25
 3536 1564 8983      		std Y+1,r24
 3537               	.L139:
 387:lp_solve_5.5/lp_utils.c ****   for(i = 0; i <= endpos; myvector++, i++)
 3538               		.loc 2 387 0 is_stmt 0 discriminator 1
 3539 1566 2981      		ldd r18,Y+1
 3540 1568 3A81      		ldd r19,Y+2
 3541 156a 8985      		ldd r24,Y+9
 3542 156c 9A85      		ldd r25,Y+10
 3543 156e 8217      		cp r24,r18
 3544 1570 9307      		cpc r25,r19
 3545 1572 04F4      		brge .L140
 389:lp_solve_5.5/lp_utils.c **** 
 390:lp_solve_5.5/lp_utils.c ****   /* Normalize */
 391:lp_solve_5.5/lp_utils.c ****   SSQ = sqrt(SSQ);
 3546               		.loc 2 391 0 is_stmt 1
 3547 1574 8B81      		ldd r24,Y+3
 3548 1576 9C81      		ldd r25,Y+4
 3549 1578 AD81      		ldd r26,Y+5
 3550 157a BE81      		ldd r27,Y+6
 3551 157c BC01      		movw r22,r24
 3552 157e CD01      		movw r24,r26
 3553 1580 0E94 0000 		call sqrt
 3554 1584 DC01      		movw r26,r24
 3555 1586 CB01      		movw r24,r22
 3556 1588 8B83      		std Y+3,r24
 3557 158a 9C83      		std Y+4,r25
 3558 158c AD83      		std Y+5,r26
 3559 158e BE83      		std Y+6,r27
 392:lp_solve_5.5/lp_utils.c ****   if(SSQ > 0)
 3560               		.loc 2 392 0
 3561 1590 20E0      		ldi r18,0
 3562 1592 30E0      		ldi r19,0
 3563 1594 A901      		movw r20,r18
 3564 1596 6B81      		ldd r22,Y+3
 3565 1598 7C81      		ldd r23,Y+4
 3566 159a 8D81      		ldd r24,Y+5
 3567 159c 9E81      		ldd r25,Y+6
 3568 159e 0E94 0000 		call __gtsf2
 3569 15a2 1816      		cp __zero_reg__,r24
 3570 15a4 04F4      		brge .L141
 393:lp_solve_5.5/lp_utils.c ****     for(myvector--; i > 0; myvector--, i--)
 3571               		.loc 2 393 0
 3572 15a6 8F81      		ldd r24,Y+7
 3573 15a8 9885      		ldd r25,Y+8
 3574 15aa 0497      		sbiw r24,4
 3575 15ac 9887      		std Y+8,r25
 3576 15ae 8F83      		std Y+7,r24
 3577 15b0 00C0      		rjmp .L143
 3578               	.L144:
 394:lp_solve_5.5/lp_utils.c ****       (*myvector) /= SSQ;
 3579               		.loc 2 394 0 discriminator 3
 3580 15b2 8F81      		ldd r24,Y+7
 3581 15b4 9885      		ldd r25,Y+8
 3582 15b6 FC01      		movw r30,r24
 3583 15b8 8081      		ld r24,Z
 3584 15ba 9181      		ldd r25,Z+1
 3585 15bc A281      		ldd r26,Z+2
 3586 15be B381      		ldd r27,Z+3
 3587 15c0 2B81      		ldd r18,Y+3
 3588 15c2 3C81      		ldd r19,Y+4
 3589 15c4 4D81      		ldd r20,Y+5
 3590 15c6 5E81      		ldd r21,Y+6
 3591 15c8 BC01      		movw r22,r24
 3592 15ca CD01      		movw r24,r26
 3593 15cc 0E94 0000 		call __divsf3
 3594 15d0 DC01      		movw r26,r24
 3595 15d2 CB01      		movw r24,r22
 3596 15d4 2F81      		ldd r18,Y+7
 3597 15d6 3885      		ldd r19,Y+8
 3598 15d8 F901      		movw r30,r18
 3599 15da 8083      		st Z,r24
 3600 15dc 9183      		std Z+1,r25
 3601 15de A283      		std Z+2,r26
 3602 15e0 B383      		std Z+3,r27
 393:lp_solve_5.5/lp_utils.c ****     for(myvector--; i > 0; myvector--, i--)
 3603               		.loc 2 393 0 discriminator 3
 3604 15e2 8F81      		ldd r24,Y+7
 3605 15e4 9885      		ldd r25,Y+8
 3606 15e6 0497      		sbiw r24,4
 3607 15e8 9887      		std Y+8,r25
 3608 15ea 8F83      		std Y+7,r24
 3609 15ec 8981      		ldd r24,Y+1
 3610 15ee 9A81      		ldd r25,Y+2
 3611 15f0 0197      		sbiw r24,1
 3612 15f2 9A83      		std Y+2,r25
 3613 15f4 8983      		std Y+1,r24
 3614               	.L143:
 393:lp_solve_5.5/lp_utils.c ****     for(myvector--; i > 0; myvector--, i--)
 3615               		.loc 2 393 0 is_stmt 0 discriminator 1
 3616 15f6 8981      		ldd r24,Y+1
 3617 15f8 9A81      		ldd r25,Y+2
 3618 15fa 1816      		cp __zero_reg__,r24
 3619 15fc 1906      		cpc __zero_reg__,r25
 3620 15fe 04F0      		brlt .L144
 3621               	.L141:
 395:lp_solve_5.5/lp_utils.c **** 
 396:lp_solve_5.5/lp_utils.c ****   return( SSQ );
 3622               		.loc 2 396 0 is_stmt 1
 3623 1600 8B81      		ldd r24,Y+3
 3624 1602 9C81      		ldd r25,Y+4
 3625 1604 AD81      		ldd r26,Y+5
 3626 1606 BE81      		ldd r27,Y+6
 397:lp_solve_5.5/lp_utils.c **** }
 3627               		.loc 2 397 0
 3628 1608 BC01      		movw r22,r24
 3629 160a CD01      		movw r24,r26
 3630               	/* epilogue start */
 3631 160c 2A96      		adiw r28,10
 3632 160e 0FB6      		in __tmp_reg__,__SREG__
 3633 1610 F894      		cli
 3634 1612 DEBF      		out __SP_H__,r29
 3635 1614 0FBE      		out __SREG__,__tmp_reg__
 3636 1616 CDBF      		out __SP_L__,r28
 3637 1618 DF91      		pop r29
 3638 161a CF91      		pop r28
 3639 161c 0895      		ret
 3640               		.cfi_endproc
 3641               	.LFE25:
 3643               	.global	swapINT
 3645               	swapINT:
 3646               	.LFB26:
 398:lp_solve_5.5/lp_utils.c **** 
 399:lp_solve_5.5/lp_utils.c **** /* ---------------------------------------------------------------------------------- */
 400:lp_solve_5.5/lp_utils.c **** /* Other general utilities                                                            */
 401:lp_solve_5.5/lp_utils.c **** /* ---------------------------------------------------------------------------------- */
 402:lp_solve_5.5/lp_utils.c **** 
 403:lp_solve_5.5/lp_utils.c **** STATIC void swapINT(int *item1, int *item2)
 404:lp_solve_5.5/lp_utils.c **** {
 3647               		.loc 2 404 0
 3648               		.cfi_startproc
 3649 161e CF93      		push r28
 3650               	.LCFI76:
 3651               		.cfi_def_cfa_offset 3
 3652               		.cfi_offset 28, -2
 3653 1620 DF93      		push r29
 3654               	.LCFI77:
 3655               		.cfi_def_cfa_offset 4
 3656               		.cfi_offset 29, -3
 3657 1622 00D0      		rcall .
 3658 1624 00D0      		rcall .
 3659 1626 00D0      		rcall .
 3660               	.LCFI78:
 3661               		.cfi_def_cfa_offset 10
 3662 1628 CDB7      		in r28,__SP_L__
 3663 162a DEB7      		in r29,__SP_H__
 3664               	.LCFI79:
 3665               		.cfi_def_cfa_register 28
 3666               	/* prologue: function */
 3667               	/* frame size = 6 */
 3668               	/* stack size = 8 */
 3669               	.L__stack_usage = 8
 3670 162c 9C83      		std Y+4,r25
 3671 162e 8B83      		std Y+3,r24
 3672 1630 7E83      		std Y+6,r23
 3673 1632 6D83      		std Y+5,r22
 405:lp_solve_5.5/lp_utils.c ****   int hold = *item1;
 3674               		.loc 2 405 0
 3675 1634 8B81      		ldd r24,Y+3
 3676 1636 9C81      		ldd r25,Y+4
 3677 1638 FC01      		movw r30,r24
 3678 163a 8081      		ld r24,Z
 3679 163c 9181      		ldd r25,Z+1
 3680 163e 9A83      		std Y+2,r25
 3681 1640 8983      		std Y+1,r24
 406:lp_solve_5.5/lp_utils.c ****   *item1 = *item2;
 3682               		.loc 2 406 0
 3683 1642 8D81      		ldd r24,Y+5
 3684 1644 9E81      		ldd r25,Y+6
 3685 1646 FC01      		movw r30,r24
 3686 1648 2081      		ld r18,Z
 3687 164a 3181      		ldd r19,Z+1
 3688 164c 8B81      		ldd r24,Y+3
 3689 164e 9C81      		ldd r25,Y+4
 3690 1650 FC01      		movw r30,r24
 3691 1652 3183      		std Z+1,r19
 3692 1654 2083      		st Z,r18
 407:lp_solve_5.5/lp_utils.c ****   *item2 = hold;
 3693               		.loc 2 407 0
 3694 1656 8D81      		ldd r24,Y+5
 3695 1658 9E81      		ldd r25,Y+6
 3696 165a 2981      		ldd r18,Y+1
 3697 165c 3A81      		ldd r19,Y+2
 3698 165e FC01      		movw r30,r24
 3699 1660 3183      		std Z+1,r19
 3700 1662 2083      		st Z,r18
 408:lp_solve_5.5/lp_utils.c **** }
 3701               		.loc 2 408 0
 3702 1664 0000      		nop
 3703               	/* epilogue start */
 3704 1666 2696      		adiw r28,6
 3705 1668 0FB6      		in __tmp_reg__,__SREG__
 3706 166a F894      		cli
 3707 166c DEBF      		out __SP_H__,r29
 3708 166e 0FBE      		out __SREG__,__tmp_reg__
 3709 1670 CDBF      		out __SP_L__,r28
 3710 1672 DF91      		pop r29
 3711 1674 CF91      		pop r28
 3712 1676 0895      		ret
 3713               		.cfi_endproc
 3714               	.LFE26:
 3716               	.global	swapREAL
 3718               	swapREAL:
 3719               	.LFB27:
 409:lp_solve_5.5/lp_utils.c **** 
 410:lp_solve_5.5/lp_utils.c **** STATIC void swapREAL(REAL *item1, REAL *item2)
 411:lp_solve_5.5/lp_utils.c **** {
 3720               		.loc 2 411 0
 3721               		.cfi_startproc
 3722 1678 CF93      		push r28
 3723               	.LCFI80:
 3724               		.cfi_def_cfa_offset 3
 3725               		.cfi_offset 28, -2
 3726 167a DF93      		push r29
 3727               	.LCFI81:
 3728               		.cfi_def_cfa_offset 4
 3729               		.cfi_offset 29, -3
 3730 167c CDB7      		in r28,__SP_L__
 3731 167e DEB7      		in r29,__SP_H__
 3732               	.LCFI82:
 3733               		.cfi_def_cfa_register 28
 3734 1680 2897      		sbiw r28,8
 3735               	.LCFI83:
 3736               		.cfi_def_cfa_offset 12
 3737 1682 0FB6      		in __tmp_reg__,__SREG__
 3738 1684 F894      		cli
 3739 1686 DEBF      		out __SP_H__,r29
 3740 1688 0FBE      		out __SREG__,__tmp_reg__
 3741 168a CDBF      		out __SP_L__,r28
 3742               	/* prologue: function */
 3743               	/* frame size = 8 */
 3744               	/* stack size = 10 */
 3745               	.L__stack_usage = 10
 3746 168c 9E83      		std Y+6,r25
 3747 168e 8D83      		std Y+5,r24
 3748 1690 7887      		std Y+8,r23
 3749 1692 6F83      		std Y+7,r22
 412:lp_solve_5.5/lp_utils.c ****   REAL hold = *item1;
 3750               		.loc 2 412 0
 3751 1694 8D81      		ldd r24,Y+5
 3752 1696 9E81      		ldd r25,Y+6
 3753 1698 FC01      		movw r30,r24
 3754 169a 8081      		ld r24,Z
 3755 169c 9181      		ldd r25,Z+1
 3756 169e A281      		ldd r26,Z+2
 3757 16a0 B381      		ldd r27,Z+3
 3758 16a2 8983      		std Y+1,r24
 3759 16a4 9A83      		std Y+2,r25
 3760 16a6 AB83      		std Y+3,r26
 3761 16a8 BC83      		std Y+4,r27
 413:lp_solve_5.5/lp_utils.c ****   *item1 = *item2;
 3762               		.loc 2 413 0
 3763 16aa 8F81      		ldd r24,Y+7
 3764 16ac 9885      		ldd r25,Y+8
 3765 16ae FC01      		movw r30,r24
 3766 16b0 8081      		ld r24,Z
 3767 16b2 9181      		ldd r25,Z+1
 3768 16b4 A281      		ldd r26,Z+2
 3769 16b6 B381      		ldd r27,Z+3
 3770 16b8 2D81      		ldd r18,Y+5
 3771 16ba 3E81      		ldd r19,Y+6
 3772 16bc F901      		movw r30,r18
 3773 16be 8083      		st Z,r24
 3774 16c0 9183      		std Z+1,r25
 3775 16c2 A283      		std Z+2,r26
 3776 16c4 B383      		std Z+3,r27
 414:lp_solve_5.5/lp_utils.c ****   *item2 = hold;
 3777               		.loc 2 414 0
 3778 16c6 2F81      		ldd r18,Y+7
 3779 16c8 3885      		ldd r19,Y+8
 3780 16ca 8981      		ldd r24,Y+1
 3781 16cc 9A81      		ldd r25,Y+2
 3782 16ce AB81      		ldd r26,Y+3
 3783 16d0 BC81      		ldd r27,Y+4
 3784 16d2 F901      		movw r30,r18
 3785 16d4 8083      		st Z,r24
 3786 16d6 9183      		std Z+1,r25
 3787 16d8 A283      		std Z+2,r26
 3788 16da B383      		std Z+3,r27
 415:lp_solve_5.5/lp_utils.c **** }
 3789               		.loc 2 415 0
 3790 16dc 0000      		nop
 3791               	/* epilogue start */
 3792 16de 2896      		adiw r28,8
 3793 16e0 0FB6      		in __tmp_reg__,__SREG__
 3794 16e2 F894      		cli
 3795 16e4 DEBF      		out __SP_H__,r29
 3796 16e6 0FBE      		out __SREG__,__tmp_reg__
 3797 16e8 CDBF      		out __SP_L__,r28
 3798 16ea DF91      		pop r29
 3799 16ec CF91      		pop r28
 3800 16ee 0895      		ret
 3801               		.cfi_endproc
 3802               	.LFE27:
 3804               	.global	swapPTR
 3806               	swapPTR:
 3807               	.LFB28:
 416:lp_solve_5.5/lp_utils.c **** 
 417:lp_solve_5.5/lp_utils.c **** STATIC void swapPTR(void **item1, void **item2)
 418:lp_solve_5.5/lp_utils.c **** {
 3808               		.loc 2 418 0
 3809               		.cfi_startproc
 3810 16f0 CF93      		push r28
 3811               	.LCFI84:
 3812               		.cfi_def_cfa_offset 3
 3813               		.cfi_offset 28, -2
 3814 16f2 DF93      		push r29
 3815               	.LCFI85:
 3816               		.cfi_def_cfa_offset 4
 3817               		.cfi_offset 29, -3
 3818 16f4 00D0      		rcall .
 3819 16f6 00D0      		rcall .
 3820 16f8 00D0      		rcall .
 3821               	.LCFI86:
 3822               		.cfi_def_cfa_offset 10
 3823 16fa CDB7      		in r28,__SP_L__
 3824 16fc DEB7      		in r29,__SP_H__
 3825               	.LCFI87:
 3826               		.cfi_def_cfa_register 28
 3827               	/* prologue: function */
 3828               	/* frame size = 6 */
 3829               	/* stack size = 8 */
 3830               	.L__stack_usage = 8
 3831 16fe 9C83      		std Y+4,r25
 3832 1700 8B83      		std Y+3,r24
 3833 1702 7E83      		std Y+6,r23
 3834 1704 6D83      		std Y+5,r22
 419:lp_solve_5.5/lp_utils.c ****   void *hold;
 420:lp_solve_5.5/lp_utils.c ****   hold = *item1;
 3835               		.loc 2 420 0
 3836 1706 8B81      		ldd r24,Y+3
 3837 1708 9C81      		ldd r25,Y+4
 3838 170a FC01      		movw r30,r24
 3839 170c 8081      		ld r24,Z
 3840 170e 9181      		ldd r25,Z+1
 3841 1710 9A83      		std Y+2,r25
 3842 1712 8983      		std Y+1,r24
 421:lp_solve_5.5/lp_utils.c ****   *item1 = *item2;
 3843               		.loc 2 421 0
 3844 1714 8D81      		ldd r24,Y+5
 3845 1716 9E81      		ldd r25,Y+6
 3846 1718 FC01      		movw r30,r24
 3847 171a 2081      		ld r18,Z
 3848 171c 3181      		ldd r19,Z+1
 3849 171e 8B81      		ldd r24,Y+3
 3850 1720 9C81      		ldd r25,Y+4
 3851 1722 FC01      		movw r30,r24
 3852 1724 3183      		std Z+1,r19
 3853 1726 2083      		st Z,r18
 422:lp_solve_5.5/lp_utils.c ****   *item2 = hold;
 3854               		.loc 2 422 0
 3855 1728 8D81      		ldd r24,Y+5
 3856 172a 9E81      		ldd r25,Y+6
 3857 172c 2981      		ldd r18,Y+1
 3858 172e 3A81      		ldd r19,Y+2
 3859 1730 FC01      		movw r30,r24
 3860 1732 3183      		std Z+1,r19
 3861 1734 2083      		st Z,r18
 423:lp_solve_5.5/lp_utils.c **** }
 3862               		.loc 2 423 0
 3863 1736 0000      		nop
 3864               	/* epilogue start */
 3865 1738 2696      		adiw r28,6
 3866 173a 0FB6      		in __tmp_reg__,__SREG__
 3867 173c F894      		cli
 3868 173e DEBF      		out __SP_H__,r29
 3869 1740 0FBE      		out __SREG__,__tmp_reg__
 3870 1742 CDBF      		out __SP_L__,r28
 3871 1744 DF91      		pop r29
 3872 1746 CF91      		pop r28
 3873 1748 0895      		ret
 3874               		.cfi_endproc
 3875               	.LFE28:
 3877               	.global	__subsf3
 3878               	.global	restoreINT
 3880               	restoreINT:
 3881               	.LFB29:
 424:lp_solve_5.5/lp_utils.c **** 
 425:lp_solve_5.5/lp_utils.c **** 
 426:lp_solve_5.5/lp_utils.c **** STATIC REAL restoreINT(REAL valREAL, REAL epsilon)
 427:lp_solve_5.5/lp_utils.c **** {
 3882               		.loc 2 427 0
 3883               		.cfi_startproc
 3884 174a CF93      		push r28
 3885               	.LCFI88:
 3886               		.cfi_def_cfa_offset 3
 3887               		.cfi_offset 28, -2
 3888 174c DF93      		push r29
 3889               	.LCFI89:
 3890               		.cfi_def_cfa_offset 4
 3891               		.cfi_offset 29, -3
 3892 174e CDB7      		in r28,__SP_L__
 3893 1750 DEB7      		in r29,__SP_H__
 3894               	.LCFI90:
 3895               		.cfi_def_cfa_register 28
 3896 1752 6497      		sbiw r28,20
 3897               	.LCFI91:
 3898               		.cfi_def_cfa_offset 24
 3899 1754 0FB6      		in __tmp_reg__,__SREG__
 3900 1756 F894      		cli
 3901 1758 DEBF      		out __SP_H__,r29
 3902 175a 0FBE      		out __SREG__,__tmp_reg__
 3903 175c CDBF      		out __SP_L__,r28
 3904               	/* prologue: function */
 3905               	/* frame size = 20 */
 3906               	/* stack size = 22 */
 3907               	.L__stack_usage = 22
 3908 175e 6D87      		std Y+13,r22
 3909 1760 7E87      		std Y+14,r23
 3910 1762 8F87      		std Y+15,r24
 3911 1764 988B      		std Y+16,r25
 3912 1766 298B      		std Y+17,r18
 3913 1768 3A8B      		std Y+18,r19
 3914 176a 4B8B      		std Y+19,r20
 3915 176c 5C8B      		std Y+20,r21
 428:lp_solve_5.5/lp_utils.c ****   REAL valINT, fracREAL, fracABS;
 429:lp_solve_5.5/lp_utils.c **** 
 430:lp_solve_5.5/lp_utils.c ****   fracREAL = modf(valREAL, &valINT);
 3916               		.loc 2 430 0
 3917 176e 9E01      		movw r18,r28
 3918 1770 275F      		subi r18,-9
 3919 1772 3F4F      		sbci r19,-1
 3920 1774 8D85      		ldd r24,Y+13
 3921 1776 9E85      		ldd r25,Y+14
 3922 1778 AF85      		ldd r26,Y+15
 3923 177a B889      		ldd r27,Y+16
 3924 177c A901      		movw r20,r18
 3925 177e BC01      		movw r22,r24
 3926 1780 CD01      		movw r24,r26
 3927 1782 0E94 0000 		call modf
 3928 1786 DC01      		movw r26,r24
 3929 1788 CB01      		movw r24,r22
 3930 178a 8983      		std Y+1,r24
 3931 178c 9A83      		std Y+2,r25
 3932 178e AB83      		std Y+3,r26
 3933 1790 BC83      		std Y+4,r27
 431:lp_solve_5.5/lp_utils.c ****   fracABS = fabs(fracREAL);
 3934               		.loc 2 431 0
 3935 1792 8981      		ldd r24,Y+1
 3936 1794 9A81      		ldd r25,Y+2
 3937 1796 AB81      		ldd r26,Y+3
 3938 1798 BC81      		ldd r27,Y+4
 3939 179a BF77      		andi r27,0x7f
 3940 179c 8D83      		std Y+5,r24
 3941 179e 9E83      		std Y+6,r25
 3942 17a0 AF83      		std Y+7,r26
 3943 17a2 B887      		std Y+8,r27
 432:lp_solve_5.5/lp_utils.c ****   if(fracABS < epsilon)
 3944               		.loc 2 432 0
 3945 17a4 2989      		ldd r18,Y+17
 3946 17a6 3A89      		ldd r19,Y+18
 3947 17a8 4B89      		ldd r20,Y+19
 3948 17aa 5C89      		ldd r21,Y+20
 3949 17ac 6D81      		ldd r22,Y+5
 3950 17ae 7E81      		ldd r23,Y+6
 3951 17b0 8F81      		ldd r24,Y+7
 3952 17b2 9885      		ldd r25,Y+8
 3953 17b4 0E94 0000 		call __ltsf2
 3954 17b8 8823      		tst r24
 3955 17ba 04F4      		brge .L162
 433:lp_solve_5.5/lp_utils.c ****     return(valINT);
 3956               		.loc 2 433 0
 3957 17bc 8985      		ldd r24,Y+9
 3958 17be 9A85      		ldd r25,Y+10
 3959 17c0 AB85      		ldd r26,Y+11
 3960 17c2 BC85      		ldd r27,Y+12
 3961 17c4 00C0      		rjmp .L158
 3962               	.L162:
 434:lp_solve_5.5/lp_utils.c ****   else if(fracABS > 1-epsilon) {
 3963               		.loc 2 434 0
 3964 17c6 2989      		ldd r18,Y+17
 3965 17c8 3A89      		ldd r19,Y+18
 3966 17ca 4B89      		ldd r20,Y+19
 3967 17cc 5C89      		ldd r21,Y+20
 3968 17ce 60E0      		ldi r22,0
 3969 17d0 70E0      		ldi r23,0
 3970 17d2 80E8      		ldi r24,lo8(-128)
 3971 17d4 9FE3      		ldi r25,lo8(63)
 3972 17d6 0E94 0000 		call __subsf3
 3973 17da DC01      		movw r26,r24
 3974 17dc CB01      		movw r24,r22
 3975 17de 2D81      		ldd r18,Y+5
 3976 17e0 3E81      		ldd r19,Y+6
 3977 17e2 4F81      		ldd r20,Y+7
 3978 17e4 5885      		ldd r21,Y+8
 3979 17e6 BC01      		movw r22,r24
 3980 17e8 CD01      		movw r24,r26
 3981 17ea 0E94 0000 		call __ltsf2
 3982 17ee 8823      		tst r24
 3983 17f0 04F4      		brge .L163
 435:lp_solve_5.5/lp_utils.c ****     if(fracREAL < 0)
 3984               		.loc 2 435 0
 3985 17f2 20E0      		ldi r18,0
 3986 17f4 30E0      		ldi r19,0
 3987 17f6 A901      		movw r20,r18
 3988 17f8 6981      		ldd r22,Y+1
 3989 17fa 7A81      		ldd r23,Y+2
 3990 17fc 8B81      		ldd r24,Y+3
 3991 17fe 9C81      		ldd r25,Y+4
 3992 1800 0E94 0000 		call __ltsf2
 3993 1804 8823      		tst r24
 3994 1806 04F4      		brge .L164
 436:lp_solve_5.5/lp_utils.c ****       return(valINT-1);
 3995               		.loc 2 436 0
 3996 1808 8985      		ldd r24,Y+9
 3997 180a 9A85      		ldd r25,Y+10
 3998 180c AB85      		ldd r26,Y+11
 3999 180e BC85      		ldd r27,Y+12
 4000 1810 20E0      		ldi r18,0
 4001 1812 30E0      		ldi r19,0
 4002 1814 40E8      		ldi r20,lo8(-128)
 4003 1816 5FE3      		ldi r21,lo8(63)
 4004 1818 BC01      		movw r22,r24
 4005 181a CD01      		movw r24,r26
 4006 181c 0E94 0000 		call __subsf3
 4007 1820 DC01      		movw r26,r24
 4008 1822 CB01      		movw r24,r22
 4009 1824 00C0      		rjmp .L158
 4010               	.L164:
 437:lp_solve_5.5/lp_utils.c ****     else
 438:lp_solve_5.5/lp_utils.c ****       return(valINT+1);
 4011               		.loc 2 438 0
 4012 1826 8985      		ldd r24,Y+9
 4013 1828 9A85      		ldd r25,Y+10
 4014 182a AB85      		ldd r26,Y+11
 4015 182c BC85      		ldd r27,Y+12
 4016 182e 20E0      		ldi r18,0
 4017 1830 30E0      		ldi r19,0
 4018 1832 40E8      		ldi r20,lo8(-128)
 4019 1834 5FE3      		ldi r21,lo8(63)
 4020 1836 BC01      		movw r22,r24
 4021 1838 CD01      		movw r24,r26
 4022 183a 0E94 0000 		call __addsf3
 4023 183e DC01      		movw r26,r24
 4024 1840 CB01      		movw r24,r22
 4025 1842 00C0      		rjmp .L158
 4026               	.L163:
 439:lp_solve_5.5/lp_utils.c ****   }
 440:lp_solve_5.5/lp_utils.c ****   return(valREAL);
 4027               		.loc 2 440 0
 4028 1844 8D85      		ldd r24,Y+13
 4029 1846 9E85      		ldd r25,Y+14
 4030 1848 AF85      		ldd r26,Y+15
 4031 184a B889      		ldd r27,Y+16
 4032               	.L158:
 441:lp_solve_5.5/lp_utils.c **** }
 4033               		.loc 2 441 0 discriminator 1
 4034 184c BC01      		movw r22,r24
 4035 184e CD01      		movw r24,r26
 4036               	/* epilogue start */
 4037 1850 6496      		adiw r28,20
 4038 1852 0FB6      		in __tmp_reg__,__SREG__
 4039 1854 F894      		cli
 4040 1856 DEBF      		out __SP_H__,r29
 4041 1858 0FBE      		out __SREG__,__tmp_reg__
 4042 185a CDBF      		out __SP_L__,r28
 4043 185c DF91      		pop r29
 4044 185e CF91      		pop r28
 4045 1860 0895      		ret
 4046               		.cfi_endproc
 4047               	.LFE29:
 4049               	.global	__eqsf2
 4050               	.global	__floatdisf
 4051               	.global	__fixsfdi
 4052               	.global	__muldi3
 4053               	.global	__fixsfsi
 4054               	.global	__floatsisf
 4055               	.global	roundToPrecision
 4057               	roundToPrecision:
 4058               	.LFB30:
 442:lp_solve_5.5/lp_utils.c **** 
 443:lp_solve_5.5/lp_utils.c **** STATIC REAL roundToPrecision(REAL value, REAL precision)
 444:lp_solve_5.5/lp_utils.c **** {
 4059               		.loc 2 444 0
 4060               		.cfi_startproc
 4061 1862 2F92      		push r2
 4062               	.LCFI92:
 4063               		.cfi_def_cfa_offset 3
 4064               		.cfi_offset 2, -2
 4065 1864 3F92      		push r3
 4066               	.LCFI93:
 4067               		.cfi_def_cfa_offset 4
 4068               		.cfi_offset 3, -3
 4069 1866 4F92      		push r4
 4070               	.LCFI94:
 4071               		.cfi_def_cfa_offset 5
 4072               		.cfi_offset 4, -4
 4073 1868 5F92      		push r5
 4074               	.LCFI95:
 4075               		.cfi_def_cfa_offset 6
 4076               		.cfi_offset 5, -5
 4077 186a 6F92      		push r6
 4078               	.LCFI96:
 4079               		.cfi_def_cfa_offset 7
 4080               		.cfi_offset 6, -6
 4081 186c 7F92      		push r7
 4082               	.LCFI97:
 4083               		.cfi_def_cfa_offset 8
 4084               		.cfi_offset 7, -7
 4085 186e 8F92      		push r8
 4086               	.LCFI98:
 4087               		.cfi_def_cfa_offset 9
 4088               		.cfi_offset 8, -8
 4089 1870 9F92      		push r9
 4090               	.LCFI99:
 4091               		.cfi_def_cfa_offset 10
 4092               		.cfi_offset 9, -9
 4093 1872 AF92      		push r10
 4094               	.LCFI100:
 4095               		.cfi_def_cfa_offset 11
 4096               		.cfi_offset 10, -10
 4097 1874 BF92      		push r11
 4098               	.LCFI101:
 4099               		.cfi_def_cfa_offset 12
 4100               		.cfi_offset 11, -11
 4101 1876 CF92      		push r12
 4102               	.LCFI102:
 4103               		.cfi_def_cfa_offset 13
 4104               		.cfi_offset 12, -12
 4105 1878 DF92      		push r13
 4106               	.LCFI103:
 4107               		.cfi_def_cfa_offset 14
 4108               		.cfi_offset 13, -13
 4109 187a EF92      		push r14
 4110               	.LCFI104:
 4111               		.cfi_def_cfa_offset 15
 4112               		.cfi_offset 14, -14
 4113 187c FF92      		push r15
 4114               	.LCFI105:
 4115               		.cfi_def_cfa_offset 16
 4116               		.cfi_offset 15, -15
 4117 187e 0F93      		push r16
 4118               	.LCFI106:
 4119               		.cfi_def_cfa_offset 17
 4120               		.cfi_offset 16, -16
 4121 1880 1F93      		push r17
 4122               	.LCFI107:
 4123               		.cfi_def_cfa_offset 18
 4124               		.cfi_offset 17, -17
 4125 1882 CF93      		push r28
 4126               	.LCFI108:
 4127               		.cfi_def_cfa_offset 19
 4128               		.cfi_offset 28, -18
 4129 1884 DF93      		push r29
 4130               	.LCFI109:
 4131               		.cfi_def_cfa_offset 20
 4132               		.cfi_offset 29, -19
 4133 1886 CDB7      		in r28,__SP_L__
 4134 1888 DEB7      		in r29,__SP_H__
 4135               	.LCFI110:
 4136               		.cfi_def_cfa_register 28
 4137 188a 6897      		sbiw r28,24
 4138               	.LCFI111:
 4139               		.cfi_def_cfa_offset 44
 4140 188c 0FB6      		in __tmp_reg__,__SREG__
 4141 188e F894      		cli
 4142 1890 DEBF      		out __SP_H__,r29
 4143 1892 0FBE      		out __SREG__,__tmp_reg__
 4144 1894 CDBF      		out __SP_L__,r28
 4145               	/* prologue: function */
 4146               	/* frame size = 24 */
 4147               	/* stack size = 42 */
 4148               	.L__stack_usage = 42
 4149 1896 698B      		std Y+17,r22
 4150 1898 7A8B      		std Y+18,r23
 4151 189a 8B8B      		std Y+19,r24
 4152 189c 9C8B      		std Y+20,r25
 4153 189e 2D8B      		std Y+21,r18
 4154 18a0 3E8B      		std Y+22,r19
 4155 18a2 4F8B      		std Y+23,r20
 4156 18a4 588F      		std Y+24,r21
 445:lp_solve_5.5/lp_utils.c **** #if 1
 446:lp_solve_5.5/lp_utils.c ****   REAL  vmod;
 447:lp_solve_5.5/lp_utils.c ****   int   vexp2, vexp10;
 448:lp_solve_5.5/lp_utils.c ****   LLONG sign;
 449:lp_solve_5.5/lp_utils.c **** 
 450:lp_solve_5.5/lp_utils.c ****   if(precision == 0)
 4157               		.loc 2 450 0
 4158 18a6 20E0      		ldi r18,0
 4159 18a8 30E0      		ldi r19,0
 4160 18aa A901      		movw r20,r18
 4161 18ac 6D89      		ldd r22,Y+21
 4162 18ae 7E89      		ldd r23,Y+22
 4163 18b0 8F89      		ldd r24,Y+23
 4164 18b2 988D      		ldd r25,Y+24
 4165 18b4 0E94 0000 		call __eqsf2
 4166 18b8 8823      		tst r24
 4167 18ba 01F4      		brne .L187
 451:lp_solve_5.5/lp_utils.c ****     return(value);
 4168               		.loc 2 451 0
 4169 18bc 8989      		ldd r24,Y+17
 4170 18be 9A89      		ldd r25,Y+18
 4171 18c0 AB89      		ldd r26,Y+19
 4172 18c2 BC89      		ldd r27,Y+20
 4173 18c4 00C0      		rjmp .L180
 4174               	.L187:
 452:lp_solve_5.5/lp_utils.c **** 
 453:lp_solve_5.5/lp_utils.c ****   sign  = my_sign(value);
 4175               		.loc 2 453 0
 4176 18c6 8989      		ldd r24,Y+17
 4177 18c8 9A89      		ldd r25,Y+18
 4178 18ca AB89      		ldd r26,Y+19
 4179 18cc BC89      		ldd r27,Y+20
 4180 18ce 20E0      		ldi r18,0
 4181 18d0 30E0      		ldi r19,0
 4182 18d2 A901      		movw r20,r18
 4183 18d4 BC01      		movw r22,r24
 4184 18d6 CD01      		movw r24,r26
 4185 18d8 0E94 0000 		call __ltsf2
 4186 18dc 8823      		tst r24
 4187 18de 04F4      		brge .L188
 4188               		.loc 2 453 0 is_stmt 0 discriminator 1
 4189 18e0 2FEF      		ldi r18,lo8(-1)
 4190 18e2 3FEF      		ldi r19,lo8(-1)
 4191 18e4 4FEF      		ldi r20,lo8(-1)
 4192 18e6 5FEF      		ldi r21,lo8(-1)
 4193 18e8 6FEF      		ldi r22,lo8(-1)
 4194 18ea 7FEF      		ldi r23,lo8(-1)
 4195 18ec 8FEF      		ldi r24,lo8(-1)
 4196 18ee 9FEF      		ldi r25,lo8(-1)
 4197 18f0 00C0      		rjmp .L171
 4198               	.L188:
 4199               		.loc 2 453 0 discriminator 2
 4200 18f2 21E0      		ldi r18,lo8(1)
 4201 18f4 30E0      		ldi r19,0
 4202 18f6 40E0      		ldi r20,0
 4203 18f8 50E0      		ldi r21,0
 4204 18fa 60E0      		ldi r22,0
 4205 18fc 70E0      		ldi r23,0
 4206 18fe 80E0      		ldi r24,0
 4207 1900 90E0      		ldi r25,0
 4208               	.L171:
 4209               		.loc 2 453 0 discriminator 4
 4210 1902 2983      		std Y+1,r18
 4211 1904 3A83      		std Y+2,r19
 4212 1906 4B83      		std Y+3,r20
 4213 1908 5C83      		std Y+4,r21
 4214 190a 6D83      		std Y+5,r22
 4215 190c 7E83      		std Y+6,r23
 4216 190e 8F83      		std Y+7,r24
 4217 1910 9887      		std Y+8,r25
 454:lp_solve_5.5/lp_utils.c ****   value = fabs(value);
 4218               		.loc 2 454 0 is_stmt 1 discriminator 4
 4219 1912 8989      		ldd r24,Y+17
 4220 1914 9A89      		ldd r25,Y+18
 4221 1916 AB89      		ldd r26,Y+19
 4222 1918 BC89      		ldd r27,Y+20
 4223 191a BF77      		andi r27,0x7f
 4224 191c 898B      		std Y+17,r24
 4225 191e 9A8B      		std Y+18,r25
 4226 1920 AB8B      		std Y+19,r26
 4227 1922 BC8B      		std Y+20,r27
 455:lp_solve_5.5/lp_utils.c **** 
 456:lp_solve_5.5/lp_utils.c ****   /* Round to integer if possible */
 457:lp_solve_5.5/lp_utils.c ****   if(value < precision)
 4228               		.loc 2 457 0 discriminator 4
 4229 1924 8989      		ldd r24,Y+17
 4230 1926 9A89      		ldd r25,Y+18
 4231 1928 AB89      		ldd r26,Y+19
 4232 192a BC89      		ldd r27,Y+20
 4233 192c 2D89      		ldd r18,Y+21
 4234 192e 3E89      		ldd r19,Y+22
 4235 1930 4F89      		ldd r20,Y+23
 4236 1932 588D      		ldd r21,Y+24
 4237 1934 BC01      		movw r22,r24
 4238 1936 CD01      		movw r24,r26
 4239 1938 0E94 0000 		call __ltsf2
 4240 193c 8823      		tst r24
 4241 193e 04F4      		brge .L189
 458:lp_solve_5.5/lp_utils.c ****     return( 0 );
 4242               		.loc 2 458 0
 4243 1940 80E0      		ldi r24,0
 4244 1942 90E0      		ldi r25,0
 4245 1944 DC01      		movw r26,r24
 4246 1946 00C0      		rjmp .L180
 4247               	.L189:
 459:lp_solve_5.5/lp_utils.c ****   else if(value == floor(value))
 4248               		.loc 2 459 0
 4249 1948 8989      		ldd r24,Y+17
 4250 194a 9A89      		ldd r25,Y+18
 4251 194c AB89      		ldd r26,Y+19
 4252 194e BC89      		ldd r27,Y+20
 4253 1950 BC01      		movw r22,r24
 4254 1952 CD01      		movw r24,r26
 4255 1954 0E94 0000 		call floor
 4256 1958 7B01      		movw r14,r22
 4257 195a 8C01      		movw r16,r24
 4258 195c 8989      		ldd r24,Y+17
 4259 195e 9A89      		ldd r25,Y+18
 4260 1960 AB89      		ldd r26,Y+19
 4261 1962 BC89      		ldd r27,Y+20
 4262 1964 9C01      		movw r18,r24
 4263 1966 AD01      		movw r20,r26
 4264 1968 C801      		movw r24,r16
 4265 196a B701      		movw r22,r14
 4266 196c 0E94 0000 		call __eqsf2
 4267 1970 8823      		tst r24
 4268 1972 01F4      		brne .L190
 460:lp_solve_5.5/lp_utils.c ****     return( value*sign );
 4269               		.loc 2 460 0
 4270 1974 2981      		ldd r18,Y+1
 4271 1976 3A81      		ldd r19,Y+2
 4272 1978 4B81      		ldd r20,Y+3
 4273 197a 5C81      		ldd r21,Y+4
 4274 197c 6D81      		ldd r22,Y+5
 4275 197e 7E81      		ldd r23,Y+6
 4276 1980 8F81      		ldd r24,Y+7
 4277 1982 9885      		ldd r25,Y+8
 4278 1984 0E94 0000 		call __floatdisf
 4279 1988 7B01      		movw r14,r22
 4280 198a 8C01      		movw r16,r24
 4281 198c 8989      		ldd r24,Y+17
 4282 198e 9A89      		ldd r25,Y+18
 4283 1990 AB89      		ldd r26,Y+19
 4284 1992 BC89      		ldd r27,Y+20
 4285 1994 9C01      		movw r18,r24
 4286 1996 AD01      		movw r20,r26
 4287 1998 C801      		movw r24,r16
 4288 199a B701      		movw r22,r14
 4289 199c 0E94 0000 		call __mulsf3
 4290 19a0 DC01      		movw r26,r24
 4291 19a2 CB01      		movw r24,r22
 4292 19a4 00C0      		rjmp .L180
 4293               	.L190:
 461:lp_solve_5.5/lp_utils.c ****   else if((value < (REAL) MAXINT64) &&
 4294               		.loc 2 461 0
 4295 19a6 8989      		ldd r24,Y+17
 4296 19a8 9A89      		ldd r25,Y+18
 4297 19aa AB89      		ldd r26,Y+19
 4298 19ac BC89      		ldd r27,Y+20
 4299 19ae 20E0      		ldi r18,0
 4300 19b0 30E0      		ldi r19,0
 4301 19b2 40E0      		ldi r20,0
 4302 19b4 5FE5      		ldi r21,lo8(95)
 4303 19b6 BC01      		movw r22,r24
 4304 19b8 CD01      		movw r24,r26
 4305 19ba 0E94 0000 		call __ltsf2
 4306 19be 8823      		tst r24
 4307 19c0 04F0      		brlt .+2
 4308 19c2 00C0      		rjmp .L176
 462:lp_solve_5.5/lp_utils.c ****      (modf((REAL) (value+precision), &vmod) < precision)) {
 4309               		.loc 2 462 0 discriminator 1
 4310 19c4 8989      		ldd r24,Y+17
 4311 19c6 9A89      		ldd r25,Y+18
 4312 19c8 AB89      		ldd r26,Y+19
 4313 19ca BC89      		ldd r27,Y+20
 4314 19cc 2D89      		ldd r18,Y+21
 4315 19ce 3E89      		ldd r19,Y+22
 4316 19d0 4F89      		ldd r20,Y+23
 4317 19d2 588D      		ldd r21,Y+24
 4318 19d4 BC01      		movw r22,r24
 4319 19d6 CD01      		movw r24,r26
 4320 19d8 0E94 0000 		call __addsf3
 4321 19dc DC01      		movw r26,r24
 4322 19de CB01      		movw r24,r22
 4323 19e0 8C01      		movw r16,r24
 4324 19e2 9D01      		movw r18,r26
 4325 19e4 CE01      		movw r24,r28
 4326 19e6 0B96      		adiw r24,11
 4327 19e8 AC01      		movw r20,r24
 4328 19ea C901      		movw r24,r18
 4329 19ec B801      		movw r22,r16
 4330 19ee 0E94 0000 		call modf
 4331 19f2 DC01      		movw r26,r24
 4332 19f4 CB01      		movw r24,r22
 461:lp_solve_5.5/lp_utils.c ****   else if((value < (REAL) MAXINT64) &&
 4333               		.loc 2 461 0 discriminator 1
 4334 19f6 2D89      		ldd r18,Y+21
 4335 19f8 3E89      		ldd r19,Y+22
 4336 19fa 4F89      		ldd r20,Y+23
 4337 19fc 588D      		ldd r21,Y+24
 4338 19fe BC01      		movw r22,r24
 4339 1a00 CD01      		movw r24,r26
 4340 1a02 0E94 0000 		call __ltsf2
 4341 1a06 8823      		tst r24
 4342 1a08 04F0      		brlt .+2
 4343 1a0a 00C0      		rjmp .L176
 463:lp_solve_5.5/lp_utils.c ****     /* sign *= (LLONG) (value+precision); */
 464:lp_solve_5.5/lp_utils.c ****     sign *= (LLONG) (value+0.5);
 4344               		.loc 2 464 0
 4345 1a0c 8989      		ldd r24,Y+17
 4346 1a0e 9A89      		ldd r25,Y+18
 4347 1a10 AB89      		ldd r26,Y+19
 4348 1a12 BC89      		ldd r27,Y+20
 4349 1a14 20E0      		ldi r18,0
 4350 1a16 30E0      		ldi r19,0
 4351 1a18 40E0      		ldi r20,0
 4352 1a1a 5FE3      		ldi r21,lo8(63)
 4353 1a1c BC01      		movw r22,r24
 4354 1a1e CD01      		movw r24,r26
 4355 1a20 0E94 0000 		call __addsf3
 4356 1a24 DC01      		movw r26,r24
 4357 1a26 CB01      		movw r24,r22
 4358 1a28 BC01      		movw r22,r24
 4359 1a2a CD01      		movw r24,r26
 4360 1a2c 0E94 0000 		call __fixsfdi
 4361 1a30 222E      		mov r2,r18
 4362 1a32 332E      		mov r3,r19
 4363 1a34 442E      		mov r4,r20
 4364 1a36 552E      		mov r5,r21
 4365 1a38 662E      		mov r6,r22
 4366 1a3a 772E      		mov r7,r23
 4367 1a3c 882E      		mov r8,r24
 4368 1a3e 992E      		mov r9,r25
 4369 1a40 A22C      		mov r10,r2
 4370 1a42 B32C      		mov r11,r3
 4371 1a44 C42C      		mov r12,r4
 4372 1a46 D52C      		mov r13,r5
 4373 1a48 E62C      		mov r14,r6
 4374 1a4a F72C      		mov r15,r7
 4375 1a4c 082D      		mov r16,r8
 4376 1a4e 192D      		mov r17,r9
 4377 1a50 2981      		ldd r18,Y+1
 4378 1a52 3A81      		ldd r19,Y+2
 4379 1a54 4B81      		ldd r20,Y+3
 4380 1a56 5C81      		ldd r21,Y+4
 4381 1a58 6D81      		ldd r22,Y+5
 4382 1a5a 7E81      		ldd r23,Y+6
 4383 1a5c 8F81      		ldd r24,Y+7
 4384 1a5e 9885      		ldd r25,Y+8
 4385 1a60 0E94 0000 		call __muldi3
 4386 1a64 A22E      		mov r10,r18
 4387 1a66 B32E      		mov r11,r19
 4388 1a68 C42E      		mov r12,r20
 4389 1a6a D52E      		mov r13,r21
 4390 1a6c E62E      		mov r14,r22
 4391 1a6e F72E      		mov r15,r23
 4392 1a70 082F      		mov r16,r24
 4393 1a72 192F      		mov r17,r25
 4394 1a74 A982      		std Y+1,r10
 4395 1a76 BA82      		std Y+2,r11
 4396 1a78 CB82      		std Y+3,r12
 4397 1a7a DC82      		std Y+4,r13
 4398 1a7c ED82      		std Y+5,r14
 4399 1a7e FE82      		std Y+6,r15
 4400 1a80 0F83      		std Y+7,r16
 4401 1a82 1887      		std Y+8,r17
 465:lp_solve_5.5/lp_utils.c ****     return( (REAL) sign );
 4402               		.loc 2 465 0
 4403 1a84 2981      		ldd r18,Y+1
 4404 1a86 3A81      		ldd r19,Y+2
 4405 1a88 4B81      		ldd r20,Y+3
 4406 1a8a 5C81      		ldd r21,Y+4
 4407 1a8c 6D81      		ldd r22,Y+5
 4408 1a8e 7E81      		ldd r23,Y+6
 4409 1a90 8F81      		ldd r24,Y+7
 4410 1a92 9885      		ldd r25,Y+8
 4411 1a94 0E94 0000 		call __floatdisf
 4412 1a98 DC01      		movw r26,r24
 4413 1a9a CB01      		movw r24,r22
 4414 1a9c 00C0      		rjmp .L180
 4415               	.L176:
 466:lp_solve_5.5/lp_utils.c ****   }
 467:lp_solve_5.5/lp_utils.c **** 
 468:lp_solve_5.5/lp_utils.c ****   /* Optionally round with base 2 representation for additional precision */
 469:lp_solve_5.5/lp_utils.c **** #define roundPrecisionBase2
 470:lp_solve_5.5/lp_utils.c **** #ifdef roundPrecisionBase2
 471:lp_solve_5.5/lp_utils.c ****   value = frexp(value, &vexp2);
 4416               		.loc 2 471 0
 4417 1a9e 8989      		ldd r24,Y+17
 4418 1aa0 9A89      		ldd r25,Y+18
 4419 1aa2 AB89      		ldd r26,Y+19
 4420 1aa4 BC89      		ldd r27,Y+20
 4421 1aa6 9E01      		movw r18,r28
 4422 1aa8 215F      		subi r18,-15
 4423 1aaa 3F4F      		sbci r19,-1
 4424 1aac A901      		movw r20,r18
 4425 1aae BC01      		movw r22,r24
 4426 1ab0 CD01      		movw r24,r26
 4427 1ab2 0E94 0000 		call frexp
 4428 1ab6 DC01      		movw r26,r24
 4429 1ab8 CB01      		movw r24,r22
 4430 1aba 898B      		std Y+17,r24
 4431 1abc 9A8B      		std Y+18,r25
 4432 1abe AB8B      		std Y+19,r26
 4433 1ac0 BC8B      		std Y+20,r27
 472:lp_solve_5.5/lp_utils.c **** #else
 473:lp_solve_5.5/lp_utils.c ****   vexp2 = 0;
 474:lp_solve_5.5/lp_utils.c **** #endif
 475:lp_solve_5.5/lp_utils.c **** 
 476:lp_solve_5.5/lp_utils.c ****   /* Convert to desired precision */
 477:lp_solve_5.5/lp_utils.c ****   vexp10 = (int) log10(value);
 4434               		.loc 2 477 0
 4435 1ac2 8989      		ldd r24,Y+17
 4436 1ac4 9A89      		ldd r25,Y+18
 4437 1ac6 AB89      		ldd r26,Y+19
 4438 1ac8 BC89      		ldd r27,Y+20
 4439 1aca BC01      		movw r22,r24
 4440 1acc CD01      		movw r24,r26
 4441 1ace 0E94 0000 		call log10
 4442 1ad2 DC01      		movw r26,r24
 4443 1ad4 CB01      		movw r24,r22
 4444 1ad6 BC01      		movw r22,r24
 4445 1ad8 CD01      		movw r24,r26
 4446 1ada 0E94 0000 		call __fixsfsi
 4447 1ade DC01      		movw r26,r24
 4448 1ae0 CB01      		movw r24,r22
 4449 1ae2 9A87      		std Y+10,r25
 4450 1ae4 8987      		std Y+9,r24
 478:lp_solve_5.5/lp_utils.c ****   precision *= pow(10.0, vexp10);
 4451               		.loc 2 478 0
 4452 1ae6 8985      		ldd r24,Y+9
 4453 1ae8 9A85      		ldd r25,Y+10
 4454 1aea 092E      		mov __tmp_reg__,r25
 4455 1aec 000C      		lsl r0
 4456 1aee AA0B      		sbc r26,r26
 4457 1af0 BB0B      		sbc r27,r27
 4458 1af2 BC01      		movw r22,r24
 4459 1af4 CD01      		movw r24,r26
 4460 1af6 0E94 0000 		call __floatsisf
 4461 1afa DC01      		movw r26,r24
 4462 1afc CB01      		movw r24,r22
 4463 1afe 9C01      		movw r18,r24
 4464 1b00 AD01      		movw r20,r26
 4465 1b02 60E0      		ldi r22,0
 4466 1b04 70E0      		ldi r23,0
 4467 1b06 80E2      		ldi r24,lo8(32)
 4468 1b08 91E4      		ldi r25,lo8(65)
 4469 1b0a 0E94 0000 		call pow
 4470 1b0e DC01      		movw r26,r24
 4471 1b10 CB01      		movw r24,r22
 4472 1b12 9C01      		movw r18,r24
 4473 1b14 AD01      		movw r20,r26
 4474 1b16 6D89      		ldd r22,Y+21
 4475 1b18 7E89      		ldd r23,Y+22
 4476 1b1a 8F89      		ldd r24,Y+23
 4477 1b1c 988D      		ldd r25,Y+24
 4478 1b1e 0E94 0000 		call __mulsf3
 4479 1b22 DC01      		movw r26,r24
 4480 1b24 CB01      		movw r24,r22
 4481 1b26 8D8B      		std Y+21,r24
 4482 1b28 9E8B      		std Y+22,r25
 4483 1b2a AF8B      		std Y+23,r26
 4484 1b2c B88F      		std Y+24,r27
 479:lp_solve_5.5/lp_utils.c ****   modf(value/precision+0.5, &value);
 4485               		.loc 2 479 0
 4486 1b2e 8989      		ldd r24,Y+17
 4487 1b30 9A89      		ldd r25,Y+18
 4488 1b32 AB89      		ldd r26,Y+19
 4489 1b34 BC89      		ldd r27,Y+20
 4490 1b36 2D89      		ldd r18,Y+21
 4491 1b38 3E89      		ldd r19,Y+22
 4492 1b3a 4F89      		ldd r20,Y+23
 4493 1b3c 588D      		ldd r21,Y+24
 4494 1b3e BC01      		movw r22,r24
 4495 1b40 CD01      		movw r24,r26
 4496 1b42 0E94 0000 		call __divsf3
 4497 1b46 DC01      		movw r26,r24
 4498 1b48 CB01      		movw r24,r22
 4499 1b4a 20E0      		ldi r18,0
 4500 1b4c 30E0      		ldi r19,0
 4501 1b4e 40E0      		ldi r20,0
 4502 1b50 5FE3      		ldi r21,lo8(63)
 4503 1b52 BC01      		movw r22,r24
 4504 1b54 CD01      		movw r24,r26
 4505 1b56 0E94 0000 		call __addsf3
 4506 1b5a DC01      		movw r26,r24
 4507 1b5c CB01      		movw r24,r22
 4508 1b5e 8C01      		movw r16,r24
 4509 1b60 9D01      		movw r18,r26
 4510 1b62 CE01      		movw r24,r28
 4511 1b64 4196      		adiw r24,17
 4512 1b66 AC01      		movw r20,r24
 4513 1b68 C901      		movw r24,r18
 4514 1b6a B801      		movw r22,r16
 4515 1b6c 0E94 0000 		call modf
 480:lp_solve_5.5/lp_utils.c ****   value *= sign*precision;
 4516               		.loc 2 480 0
 4517 1b70 2981      		ldd r18,Y+1
 4518 1b72 3A81      		ldd r19,Y+2
 4519 1b74 4B81      		ldd r20,Y+3
 4520 1b76 5C81      		ldd r21,Y+4
 4521 1b78 6D81      		ldd r22,Y+5
 4522 1b7a 7E81      		ldd r23,Y+6
 4523 1b7c 8F81      		ldd r24,Y+7
 4524 1b7e 9885      		ldd r25,Y+8
 4525 1b80 0E94 0000 		call __floatdisf
 4526 1b84 DC01      		movw r26,r24
 4527 1b86 CB01      		movw r24,r22
 4528 1b88 2D89      		ldd r18,Y+21
 4529 1b8a 3E89      		ldd r19,Y+22
 4530 1b8c 4F89      		ldd r20,Y+23
 4531 1b8e 588D      		ldd r21,Y+24
 4532 1b90 BC01      		movw r22,r24
 4533 1b92 CD01      		movw r24,r26
 4534 1b94 0E94 0000 		call __mulsf3
 4535 1b98 DC01      		movw r26,r24
 4536 1b9a CB01      		movw r24,r22
 4537 1b9c 7C01      		movw r14,r24
 4538 1b9e 8D01      		movw r16,r26
 4539 1ba0 8989      		ldd r24,Y+17
 4540 1ba2 9A89      		ldd r25,Y+18
 4541 1ba4 AB89      		ldd r26,Y+19
 4542 1ba6 BC89      		ldd r27,Y+20
 4543 1ba8 9C01      		movw r18,r24
 4544 1baa AD01      		movw r20,r26
 4545 1bac C801      		movw r24,r16
 4546 1bae B701      		movw r22,r14
 4547 1bb0 0E94 0000 		call __mulsf3
 4548 1bb4 DC01      		movw r26,r24
 4549 1bb6 CB01      		movw r24,r22
 4550 1bb8 898B      		std Y+17,r24
 4551 1bba 9A8B      		std Y+18,r25
 4552 1bbc AB8B      		std Y+19,r26
 4553 1bbe BC8B      		std Y+20,r27
 481:lp_solve_5.5/lp_utils.c **** 
 482:lp_solve_5.5/lp_utils.c ****   /* Restore base 10 representation if base 2 was active */
 483:lp_solve_5.5/lp_utils.c ****   if(vexp2 != 0)
 4554               		.loc 2 483 0
 4555 1bc0 8F85      		ldd r24,Y+15
 4556 1bc2 9889      		ldd r25,Y+16
 4557 1bc4 892B      		or r24,r25
 4558 1bc6 01F0      		breq .L179
 484:lp_solve_5.5/lp_utils.c ****     value = ldexp(value, vexp2);
 4559               		.loc 2 484 0
 4560 1bc8 2F85      		ldd r18,Y+15
 4561 1bca 3889      		ldd r19,Y+16
 4562 1bcc 8989      		ldd r24,Y+17
 4563 1bce 9A89      		ldd r25,Y+18
 4564 1bd0 AB89      		ldd r26,Y+19
 4565 1bd2 BC89      		ldd r27,Y+20
 4566 1bd4 A901      		movw r20,r18
 4567 1bd6 BC01      		movw r22,r24
 4568 1bd8 CD01      		movw r24,r26
 4569 1bda 0E94 0000 		call ldexp
 4570 1bde DC01      		movw r26,r24
 4571 1be0 CB01      		movw r24,r22
 4572 1be2 898B      		std Y+17,r24
 4573 1be4 9A8B      		std Y+18,r25
 4574 1be6 AB8B      		std Y+19,r26
 4575 1be8 BC8B      		std Y+20,r27
 4576               	.L179:
 485:lp_solve_5.5/lp_utils.c **** #endif
 486:lp_solve_5.5/lp_utils.c **** 
 487:lp_solve_5.5/lp_utils.c ****   return( value );
 4577               		.loc 2 487 0
 4578 1bea 8989      		ldd r24,Y+17
 4579 1bec 9A89      		ldd r25,Y+18
 4580 1bee AB89      		ldd r26,Y+19
 4581 1bf0 BC89      		ldd r27,Y+20
 4582               	.L180:
 488:lp_solve_5.5/lp_utils.c **** }
 4583               		.loc 2 488 0 discriminator 1
 4584 1bf2 BC01      		movw r22,r24
 4585 1bf4 CD01      		movw r24,r26
 4586               	/* epilogue start */
 4587 1bf6 6896      		adiw r28,24
 4588 1bf8 0FB6      		in __tmp_reg__,__SREG__
 4589 1bfa F894      		cli
 4590 1bfc DEBF      		out __SP_H__,r29
 4591 1bfe 0FBE      		out __SREG__,__tmp_reg__
 4592 1c00 CDBF      		out __SP_L__,r28
 4593 1c02 DF91      		pop r29
 4594 1c04 CF91      		pop r28
 4595 1c06 1F91      		pop r17
 4596 1c08 0F91      		pop r16
 4597 1c0a FF90      		pop r15
 4598 1c0c EF90      		pop r14
 4599 1c0e DF90      		pop r13
 4600 1c10 CF90      		pop r12
 4601 1c12 BF90      		pop r11
 4602 1c14 AF90      		pop r10
 4603 1c16 9F90      		pop r9
 4604 1c18 8F90      		pop r8
 4605 1c1a 7F90      		pop r7
 4606 1c1c 6F90      		pop r6
 4607 1c1e 5F90      		pop r5
 4608 1c20 4F90      		pop r4
 4609 1c22 3F90      		pop r3
 4610 1c24 2F90      		pop r2
 4611 1c26 0895      		ret
 4612               		.cfi_endproc
 4613               	.LFE30:
 4615               	.global	searchFor
 4617               	searchFor:
 4618               	.LFB31:
 489:lp_solve_5.5/lp_utils.c **** 
 490:lp_solve_5.5/lp_utils.c **** 
 491:lp_solve_5.5/lp_utils.c **** /* ---------------------------------------------------------------------------------- */
 492:lp_solve_5.5/lp_utils.c **** /* Searching function specialized for lp_solve                                        */
 493:lp_solve_5.5/lp_utils.c **** /* ---------------------------------------------------------------------------------- */
 494:lp_solve_5.5/lp_utils.c **** STATIC int searchFor(int target, int *attributes, int size, int offset, MYBOOL absolute)
 495:lp_solve_5.5/lp_utils.c **** {
 4619               		.loc 2 495 0
 4620               		.cfi_startproc
 4621 1c28 0F93      		push r16
 4622               	.LCFI112:
 4623               		.cfi_def_cfa_offset 3
 4624               		.cfi_offset 16, -2
 4625 1c2a CF93      		push r28
 4626               	.LCFI113:
 4627               		.cfi_def_cfa_offset 4
 4628               		.cfi_offset 28, -3
 4629 1c2c DF93      		push r29
 4630               	.LCFI114:
 4631               		.cfi_def_cfa_offset 5
 4632               		.cfi_offset 29, -4
 4633 1c2e CDB7      		in r28,__SP_L__
 4634 1c30 DEB7      		in r29,__SP_H__
 4635               	.LCFI115:
 4636               		.cfi_def_cfa_register 28
 4637 1c32 6197      		sbiw r28,17
 4638               	.LCFI116:
 4639               		.cfi_def_cfa_offset 22
 4640 1c34 0FB6      		in __tmp_reg__,__SREG__
 4641 1c36 F894      		cli
 4642 1c38 DEBF      		out __SP_H__,r29
 4643 1c3a 0FBE      		out __SREG__,__tmp_reg__
 4644 1c3c CDBF      		out __SP_L__,r28
 4645               	/* prologue: function */
 4646               	/* frame size = 17 */
 4647               	/* stack size = 20 */
 4648               	.L__stack_usage = 20
 4649 1c3e 9A87      		std Y+10,r25
 4650 1c40 8987      		std Y+9,r24
 4651 1c42 7C87      		std Y+12,r23
 4652 1c44 6B87      		std Y+11,r22
 4653 1c46 5E87      		std Y+14,r21
 4654 1c48 4D87      		std Y+13,r20
 4655 1c4a 388B      		std Y+16,r19
 4656 1c4c 2F87      		std Y+15,r18
 4657 1c4e 098B      		std Y+17,r16
 496:lp_solve_5.5/lp_utils.c ****   int beginPos, endPos;
 497:lp_solve_5.5/lp_utils.c ****   int newPos, match;
 498:lp_solve_5.5/lp_utils.c **** 
 499:lp_solve_5.5/lp_utils.c ****  /* Set starting and ending index offsets */
 500:lp_solve_5.5/lp_utils.c ****   beginPos = offset;
 4658               		.loc 2 500 0
 4659 1c50 8F85      		ldd r24,Y+15
 4660 1c52 9889      		ldd r25,Y+16
 4661 1c54 9A83      		std Y+2,r25
 4662 1c56 8983      		std Y+1,r24
 501:lp_solve_5.5/lp_utils.c ****   endPos = beginPos + size - 1;
 4663               		.loc 2 501 0
 4664 1c58 2981      		ldd r18,Y+1
 4665 1c5a 3A81      		ldd r19,Y+2
 4666 1c5c 8D85      		ldd r24,Y+13
 4667 1c5e 9E85      		ldd r25,Y+14
 4668 1c60 820F      		add r24,r18
 4669 1c62 931F      		adc r25,r19
 4670 1c64 0197      		sbiw r24,1
 4671 1c66 9C83      		std Y+4,r25
 4672 1c68 8B83      		std Y+3,r24
 502:lp_solve_5.5/lp_utils.c **** 
 503:lp_solve_5.5/lp_utils.c ****  /* Do binary search logic based on a sorted attribute vector */
 504:lp_solve_5.5/lp_utils.c ****   newPos = (beginPos + endPos) / 2;
 4673               		.loc 2 504 0
 4674 1c6a 2981      		ldd r18,Y+1
 4675 1c6c 3A81      		ldd r19,Y+2
 4676 1c6e 8B81      		ldd r24,Y+3
 4677 1c70 9C81      		ldd r25,Y+4
 4678 1c72 820F      		add r24,r18
 4679 1c74 931F      		adc r25,r19
 4680 1c76 9923      		tst r25
 4681 1c78 04F4      		brge .L192
 4682 1c7a 0196      		adiw r24,1
 4683               	.L192:
 4684 1c7c 9595      		asr r25
 4685 1c7e 8795      		ror r24
 4686 1c80 9E83      		std Y+6,r25
 4687 1c82 8D83      		std Y+5,r24
 505:lp_solve_5.5/lp_utils.c ****   match = attributes[newPos];
 4688               		.loc 2 505 0
 4689 1c84 8D81      		ldd r24,Y+5
 4690 1c86 9E81      		ldd r25,Y+6
 4691 1c88 880F      		lsl r24
 4692 1c8a 991F      		rol r25
 4693 1c8c 2B85      		ldd r18,Y+11
 4694 1c8e 3C85      		ldd r19,Y+12
 4695 1c90 820F      		add r24,r18
 4696 1c92 931F      		adc r25,r19
 4697 1c94 FC01      		movw r30,r24
 4698 1c96 8081      		ld r24,Z
 4699 1c98 9181      		ldd r25,Z+1
 4700 1c9a 9887      		std Y+8,r25
 4701 1c9c 8F83      		std Y+7,r24
 506:lp_solve_5.5/lp_utils.c ****   if(absolute)
 4702               		.loc 2 506 0
 4703 1c9e 8989      		ldd r24,Y+17
 4704 1ca0 8823      		tst r24
 4705 1ca2 01F4      		brne .+2
 4706 1ca4 00C0      		rjmp .L195
 507:lp_solve_5.5/lp_utils.c ****     match = abs(match);
 4707               		.loc 2 507 0
 4708 1ca6 8F81      		ldd r24,Y+7
 4709 1ca8 9885      		ldd r25,Y+8
 4710 1caa 9923      		tst r25
 4711 1cac 04F4      		brge .L194
 4712 1cae 9195      		neg r25
 4713 1cb0 8195      		neg r24
 4714 1cb2 9109      		sbc r25,__zero_reg__
 4715               	.L194:
 4716 1cb4 9887      		std Y+8,r25
 4717 1cb6 8F83      		std Y+7,r24
 508:lp_solve_5.5/lp_utils.c ****   while(endPos - beginPos > LINEARSEARCH) {
 4718               		.loc 2 508 0
 4719 1cb8 00C0      		rjmp .L195
 4720               	.L204:
 509:lp_solve_5.5/lp_utils.c ****     if(match < target) {
 4721               		.loc 2 509 0
 4722 1cba 2F81      		ldd r18,Y+7
 4723 1cbc 3885      		ldd r19,Y+8
 4724 1cbe 8985      		ldd r24,Y+9
 4725 1cc0 9A85      		ldd r25,Y+10
 4726 1cc2 2817      		cp r18,r24
 4727 1cc4 3907      		cpc r19,r25
 4728 1cc6 04F4      		brge .L196
 510:lp_solve_5.5/lp_utils.c ****       beginPos = newPos + 1;
 4729               		.loc 2 510 0
 4730 1cc8 8D81      		ldd r24,Y+5
 4731 1cca 9E81      		ldd r25,Y+6
 4732 1ccc 0196      		adiw r24,1
 4733 1cce 9A83      		std Y+2,r25
 4734 1cd0 8983      		std Y+1,r24
 511:lp_solve_5.5/lp_utils.c ****       newPos = (beginPos + endPos) / 2;
 4735               		.loc 2 511 0
 4736 1cd2 2981      		ldd r18,Y+1
 4737 1cd4 3A81      		ldd r19,Y+2
 4738 1cd6 8B81      		ldd r24,Y+3
 4739 1cd8 9C81      		ldd r25,Y+4
 4740 1cda 820F      		add r24,r18
 4741 1cdc 931F      		adc r25,r19
 4742 1cde 9923      		tst r25
 4743 1ce0 04F4      		brge .L197
 4744 1ce2 0196      		adiw r24,1
 4745               	.L197:
 4746 1ce4 9595      		asr r25
 4747 1ce6 8795      		ror r24
 4748 1ce8 9E83      		std Y+6,r25
 4749 1cea 8D83      		std Y+5,r24
 512:lp_solve_5.5/lp_utils.c ****       match = attributes[newPos];
 4750               		.loc 2 512 0
 4751 1cec 8D81      		ldd r24,Y+5
 4752 1cee 9E81      		ldd r25,Y+6
 4753 1cf0 880F      		lsl r24
 4754 1cf2 991F      		rol r25
 4755 1cf4 2B85      		ldd r18,Y+11
 4756 1cf6 3C85      		ldd r19,Y+12
 4757 1cf8 820F      		add r24,r18
 4758 1cfa 931F      		adc r25,r19
 4759 1cfc FC01      		movw r30,r24
 4760 1cfe 8081      		ld r24,Z
 4761 1d00 9181      		ldd r25,Z+1
 4762 1d02 9887      		std Y+8,r25
 4763 1d04 8F83      		std Y+7,r24
 513:lp_solve_5.5/lp_utils.c ****       if(absolute)
 4764               		.loc 2 513 0
 4765 1d06 8989      		ldd r24,Y+17
 4766 1d08 8823      		tst r24
 4767 1d0a 01F4      		brne .+2
 4768 1d0c 00C0      		rjmp .L195
 514:lp_solve_5.5/lp_utils.c ****         match = abs(match);
 4769               		.loc 2 514 0
 4770 1d0e 8F81      		ldd r24,Y+7
 4771 1d10 9885      		ldd r25,Y+8
 4772 1d12 9923      		tst r25
 4773 1d14 04F4      		brge .L199
 4774 1d16 9195      		neg r25
 4775 1d18 8195      		neg r24
 4776 1d1a 9109      		sbc r25,__zero_reg__
 4777               	.L199:
 4778 1d1c 9887      		std Y+8,r25
 4779 1d1e 8F83      		std Y+7,r24
 4780 1d20 00C0      		rjmp .L195
 4781               	.L196:
 515:lp_solve_5.5/lp_utils.c ****     }
 516:lp_solve_5.5/lp_utils.c ****     else if(match > target) {
 4782               		.loc 2 516 0
 4783 1d22 2F81      		ldd r18,Y+7
 4784 1d24 3885      		ldd r19,Y+8
 4785 1d26 8985      		ldd r24,Y+9
 4786 1d28 9A85      		ldd r25,Y+10
 4787 1d2a 8217      		cp r24,r18
 4788 1d2c 9307      		cpc r25,r19
 4789 1d2e 04F4      		brge .L200
 517:lp_solve_5.5/lp_utils.c ****       endPos = newPos - 1;
 4790               		.loc 2 517 0
 4791 1d30 8D81      		ldd r24,Y+5
 4792 1d32 9E81      		ldd r25,Y+6
 4793 1d34 0197      		sbiw r24,1
 4794 1d36 9C83      		std Y+4,r25
 4795 1d38 8B83      		std Y+3,r24
 518:lp_solve_5.5/lp_utils.c ****       newPos = (beginPos + endPos) / 2;
 4796               		.loc 2 518 0
 4797 1d3a 2981      		ldd r18,Y+1
 4798 1d3c 3A81      		ldd r19,Y+2
 4799 1d3e 8B81      		ldd r24,Y+3
 4800 1d40 9C81      		ldd r25,Y+4
 4801 1d42 820F      		add r24,r18
 4802 1d44 931F      		adc r25,r19
 4803 1d46 9923      		tst r25
 4804 1d48 04F4      		brge .L201
 4805 1d4a 0196      		adiw r24,1
 4806               	.L201:
 4807 1d4c 9595      		asr r25
 4808 1d4e 8795      		ror r24
 4809 1d50 9E83      		std Y+6,r25
 4810 1d52 8D83      		std Y+5,r24
 519:lp_solve_5.5/lp_utils.c ****       match = attributes[newPos];
 4811               		.loc 2 519 0
 4812 1d54 8D81      		ldd r24,Y+5
 4813 1d56 9E81      		ldd r25,Y+6
 4814 1d58 880F      		lsl r24
 4815 1d5a 991F      		rol r25
 4816 1d5c 2B85      		ldd r18,Y+11
 4817 1d5e 3C85      		ldd r19,Y+12
 4818 1d60 820F      		add r24,r18
 4819 1d62 931F      		adc r25,r19
 4820 1d64 FC01      		movw r30,r24
 4821 1d66 8081      		ld r24,Z
 4822 1d68 9181      		ldd r25,Z+1
 4823 1d6a 9887      		std Y+8,r25
 4824 1d6c 8F83      		std Y+7,r24
 520:lp_solve_5.5/lp_utils.c ****       if(absolute)
 4825               		.loc 2 520 0
 4826 1d6e 8989      		ldd r24,Y+17
 4827 1d70 8823      		tst r24
 4828 1d72 01F0      		breq .L195
 521:lp_solve_5.5/lp_utils.c ****         match = abs(match);
 4829               		.loc 2 521 0
 4830 1d74 8F81      		ldd r24,Y+7
 4831 1d76 9885      		ldd r25,Y+8
 4832 1d78 9923      		tst r25
 4833 1d7a 04F4      		brge .L203
 4834 1d7c 9195      		neg r25
 4835 1d7e 8195      		neg r24
 4836 1d80 9109      		sbc r25,__zero_reg__
 4837               	.L203:
 4838 1d82 9887      		std Y+8,r25
 4839 1d84 8F83      		std Y+7,r24
 4840 1d86 00C0      		rjmp .L195
 4841               	.L200:
 522:lp_solve_5.5/lp_utils.c ****     }
 523:lp_solve_5.5/lp_utils.c ****     else {
 524:lp_solve_5.5/lp_utils.c ****       beginPos = newPos;
 4842               		.loc 2 524 0
 4843 1d88 8D81      		ldd r24,Y+5
 4844 1d8a 9E81      		ldd r25,Y+6
 4845 1d8c 9A83      		std Y+2,r25
 4846 1d8e 8983      		std Y+1,r24
 525:lp_solve_5.5/lp_utils.c ****       endPos = newPos;
 4847               		.loc 2 525 0
 4848 1d90 8D81      		ldd r24,Y+5
 4849 1d92 9E81      		ldd r25,Y+6
 4850 1d94 9C83      		std Y+4,r25
 4851 1d96 8B83      		std Y+3,r24
 4852               	.L195:
 508:lp_solve_5.5/lp_utils.c ****     if(match < target) {
 4853               		.loc 2 508 0
 4854 1d98 2B81      		ldd r18,Y+3
 4855 1d9a 3C81      		ldd r19,Y+4
 4856 1d9c 8981      		ldd r24,Y+1
 4857 1d9e 9A81      		ldd r25,Y+2
 4858 1da0 A901      		movw r20,r18
 4859 1da2 481B      		sub r20,r24
 4860 1da4 590B      		sbc r21,r25
 4861 1da6 CA01      		movw r24,r20
 4862 1da8 0697      		sbiw r24,6
 4863 1daa 04F0      		brlt .+2
 4864 1dac 00C0      		rjmp .L204
 526:lp_solve_5.5/lp_utils.c ****     }
 527:lp_solve_5.5/lp_utils.c ****   }
 528:lp_solve_5.5/lp_utils.c **** 
 529:lp_solve_5.5/lp_utils.c ****  /* Do linear (unsorted) search logic */
 530:lp_solve_5.5/lp_utils.c ****   if(endPos - beginPos <= LINEARSEARCH) {
 4865               		.loc 2 530 0
 4866 1dae 2B81      		ldd r18,Y+3
 4867 1db0 3C81      		ldd r19,Y+4
 4868 1db2 8981      		ldd r24,Y+1
 4869 1db4 9A81      		ldd r25,Y+2
 4870 1db6 F901      		movw r30,r18
 4871 1db8 E81B      		sub r30,r24
 4872 1dba F90B      		sbc r31,r25
 4873 1dbc CF01      		movw r24,r30
 4874 1dbe 0697      		sbiw r24,6
 4875 1dc0 04F0      		brlt .+2
 4876 1dc2 00C0      		rjmp .L205
 531:lp_solve_5.5/lp_utils.c ****     match = attributes[beginPos];
 4877               		.loc 2 531 0
 4878 1dc4 8981      		ldd r24,Y+1
 4879 1dc6 9A81      		ldd r25,Y+2
 4880 1dc8 880F      		lsl r24
 4881 1dca 991F      		rol r25
 4882 1dcc 2B85      		ldd r18,Y+11
 4883 1dce 3C85      		ldd r19,Y+12
 4884 1dd0 820F      		add r24,r18
 4885 1dd2 931F      		adc r25,r19
 4886 1dd4 FC01      		movw r30,r24
 4887 1dd6 8081      		ld r24,Z
 4888 1dd8 9181      		ldd r25,Z+1
 4889 1dda 9887      		std Y+8,r25
 4890 1ddc 8F83      		std Y+7,r24
 532:lp_solve_5.5/lp_utils.c ****     if(absolute)
 4891               		.loc 2 532 0
 4892 1dde 8989      		ldd r24,Y+17
 4893 1de0 8823      		tst r24
 4894 1de2 01F0      		breq .L208
 533:lp_solve_5.5/lp_utils.c ****       match = abs(match);
 4895               		.loc 2 533 0
 4896 1de4 8F81      		ldd r24,Y+7
 4897 1de6 9885      		ldd r25,Y+8
 4898 1de8 9923      		tst r25
 4899 1dea 04F4      		brge .L207
 4900 1dec 9195      		neg r25
 4901 1dee 8195      		neg r24
 4902 1df0 9109      		sbc r25,__zero_reg__
 4903               	.L207:
 4904 1df2 9887      		std Y+8,r25
 4905 1df4 8F83      		std Y+7,r24
 534:lp_solve_5.5/lp_utils.c ****       while((beginPos < endPos) && (match != target)) {
 4906               		.loc 2 534 0
 4907 1df6 00C0      		rjmp .L208
 4908               	.L211:
 535:lp_solve_5.5/lp_utils.c ****         beginPos++;
 4909               		.loc 2 535 0
 4910 1df8 8981      		ldd r24,Y+1
 4911 1dfa 9A81      		ldd r25,Y+2
 4912 1dfc 0196      		adiw r24,1
 4913 1dfe 9A83      		std Y+2,r25
 4914 1e00 8983      		std Y+1,r24
 536:lp_solve_5.5/lp_utils.c ****         match = attributes[beginPos];
 4915               		.loc 2 536 0
 4916 1e02 8981      		ldd r24,Y+1
 4917 1e04 9A81      		ldd r25,Y+2
 4918 1e06 880F      		lsl r24
 4919 1e08 991F      		rol r25
 4920 1e0a 2B85      		ldd r18,Y+11
 4921 1e0c 3C85      		ldd r19,Y+12
 4922 1e0e 820F      		add r24,r18
 4923 1e10 931F      		adc r25,r19
 4924 1e12 FC01      		movw r30,r24
 4925 1e14 8081      		ld r24,Z
 4926 1e16 9181      		ldd r25,Z+1
 4927 1e18 9887      		std Y+8,r25
 4928 1e1a 8F83      		std Y+7,r24
 537:lp_solve_5.5/lp_utils.c ****         if(absolute)
 4929               		.loc 2 537 0
 4930 1e1c 8989      		ldd r24,Y+17
 4931 1e1e 8823      		tst r24
 4932 1e20 01F0      		breq .L208
 538:lp_solve_5.5/lp_utils.c ****           match = abs(match);
 4933               		.loc 2 538 0
 4934 1e22 8F81      		ldd r24,Y+7
 4935 1e24 9885      		ldd r25,Y+8
 4936 1e26 9923      		tst r25
 4937 1e28 04F4      		brge .L209
 4938 1e2a 9195      		neg r25
 4939 1e2c 8195      		neg r24
 4940 1e2e 9109      		sbc r25,__zero_reg__
 4941               	.L209:
 4942 1e30 9887      		std Y+8,r25
 4943 1e32 8F83      		std Y+7,r24
 4944               	.L208:
 534:lp_solve_5.5/lp_utils.c ****         beginPos++;
 4945               		.loc 2 534 0
 4946 1e34 2981      		ldd r18,Y+1
 4947 1e36 3A81      		ldd r19,Y+2
 4948 1e38 8B81      		ldd r24,Y+3
 4949 1e3a 9C81      		ldd r25,Y+4
 4950 1e3c 2817      		cp r18,r24
 4951 1e3e 3907      		cpc r19,r25
 4952 1e40 04F4      		brge .L210
 534:lp_solve_5.5/lp_utils.c ****         beginPos++;
 4953               		.loc 2 534 0 is_stmt 0 discriminator 1
 4954 1e42 2F81      		ldd r18,Y+7
 4955 1e44 3885      		ldd r19,Y+8
 4956 1e46 8985      		ldd r24,Y+9
 4957 1e48 9A85      		ldd r25,Y+10
 4958 1e4a 2817      		cp r18,r24
 4959 1e4c 3907      		cpc r19,r25
 4960 1e4e 01F4      		brne .L211
 4961               	.L210:
 539:lp_solve_5.5/lp_utils.c ****       }
 540:lp_solve_5.5/lp_utils.c ****       if(match == target)
 4962               		.loc 2 540 0 is_stmt 1
 4963 1e50 2F81      		ldd r18,Y+7
 4964 1e52 3885      		ldd r19,Y+8
 4965 1e54 8985      		ldd r24,Y+9
 4966 1e56 9A85      		ldd r25,Y+10
 4967 1e58 2817      		cp r18,r24
 4968 1e5a 3907      		cpc r19,r25
 4969 1e5c 01F4      		brne .L205
 541:lp_solve_5.5/lp_utils.c ****         endPos = beginPos;
 4970               		.loc 2 541 0
 4971 1e5e 8981      		ldd r24,Y+1
 4972 1e60 9A81      		ldd r25,Y+2
 4973 1e62 9C83      		std Y+4,r25
 4974 1e64 8B83      		std Y+3,r24
 4975               	.L205:
 542:lp_solve_5.5/lp_utils.c ****   }
 543:lp_solve_5.5/lp_utils.c **** 
 544:lp_solve_5.5/lp_utils.c ****  /* Return the index if a match was found, or signal failure with a -1 */
 545:lp_solve_5.5/lp_utils.c ****   if((beginPos == endPos) && (match == target))
 4976               		.loc 2 545 0
 4977 1e66 2981      		ldd r18,Y+1
 4978 1e68 3A81      		ldd r19,Y+2
 4979 1e6a 8B81      		ldd r24,Y+3
 4980 1e6c 9C81      		ldd r25,Y+4
 4981 1e6e 2817      		cp r18,r24
 4982 1e70 3907      		cpc r19,r25
 4983 1e72 01F4      		brne .L212
 4984               		.loc 2 545 0 is_stmt 0 discriminator 1
 4985 1e74 2F81      		ldd r18,Y+7
 4986 1e76 3885      		ldd r19,Y+8
 4987 1e78 8985      		ldd r24,Y+9
 4988 1e7a 9A85      		ldd r25,Y+10
 4989 1e7c 2817      		cp r18,r24
 4990 1e7e 3907      		cpc r19,r25
 4991 1e80 01F4      		brne .L212
 546:lp_solve_5.5/lp_utils.c ****     return(beginPos);
 4992               		.loc 2 546 0 is_stmt 1
 4993 1e82 8981      		ldd r24,Y+1
 4994 1e84 9A81      		ldd r25,Y+2
 4995 1e86 00C0      		rjmp .L213
 4996               	.L212:
 547:lp_solve_5.5/lp_utils.c ****   else
 548:lp_solve_5.5/lp_utils.c ****     return(-1);
 4997               		.loc 2 548 0
 4998 1e88 8FEF      		ldi r24,lo8(-1)
 4999 1e8a 9FEF      		ldi r25,lo8(-1)
 5000               	.L213:
 5001               	/* epilogue start */
 549:lp_solve_5.5/lp_utils.c **** 
 550:lp_solve_5.5/lp_utils.c **** }
 5002               		.loc 2 550 0
 5003 1e8c 6196      		adiw r28,17
 5004 1e8e 0FB6      		in __tmp_reg__,__SREG__
 5005 1e90 F894      		cli
 5006 1e92 DEBF      		out __SP_H__,r29
 5007 1e94 0FBE      		out __SREG__,__tmp_reg__
 5008 1e96 CDBF      		out __SP_L__,r28
 5009 1e98 DF91      		pop r29
 5010 1e9a CF91      		pop r28
 5011 1e9c 0F91      		pop r16
 5012 1e9e 0895      		ret
 5013               		.cfi_endproc
 5014               	.LFE31:
 5016               	.global	isINT
 5018               	isINT:
 5019               	.LFB32:
 551:lp_solve_5.5/lp_utils.c **** 
 552:lp_solve_5.5/lp_utils.c **** 
 553:lp_solve_5.5/lp_utils.c **** /* ---------------------------------------------------------------------------------- */
 554:lp_solve_5.5/lp_utils.c **** /* Other supporting math routines                                                     */
 555:lp_solve_5.5/lp_utils.c **** /* ---------------------------------------------------------------------------------- */
 556:lp_solve_5.5/lp_utils.c **** 
 557:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL isINT(lprec *lp, REAL value)
 558:lp_solve_5.5/lp_utils.c **** {
 5020               		.loc 2 558 0
 5021               		.cfi_startproc
 5022 1ea0 CF92      		push r12
 5023               	.LCFI117:
 5024               		.cfi_def_cfa_offset 3
 5025               		.cfi_offset 12, -2
 5026 1ea2 DF92      		push r13
 5027               	.LCFI118:
 5028               		.cfi_def_cfa_offset 4
 5029               		.cfi_offset 13, -3
 5030 1ea4 EF92      		push r14
 5031               	.LCFI119:
 5032               		.cfi_def_cfa_offset 5
 5033               		.cfi_offset 14, -4
 5034 1ea6 FF92      		push r15
 5035               	.LCFI120:
 5036               		.cfi_def_cfa_offset 6
 5037               		.cfi_offset 15, -5
 5038 1ea8 1F93      		push r17
 5039               	.LCFI121:
 5040               		.cfi_def_cfa_offset 7
 5041               		.cfi_offset 17, -6
 5042 1eaa CF93      		push r28
 5043               	.LCFI122:
 5044               		.cfi_def_cfa_offset 8
 5045               		.cfi_offset 28, -7
 5046 1eac DF93      		push r29
 5047               	.LCFI123:
 5048               		.cfi_def_cfa_offset 9
 5049               		.cfi_offset 29, -8
 5050 1eae 00D0      		rcall .
 5051 1eb0 00D0      		rcall .
 5052 1eb2 00D0      		rcall .
 5053               	.LCFI124:
 5054               		.cfi_def_cfa_offset 15
 5055 1eb4 CDB7      		in r28,__SP_L__
 5056 1eb6 DEB7      		in r29,__SP_H__
 5057               	.LCFI125:
 5058               		.cfi_def_cfa_register 28
 5059               	/* prologue: function */
 5060               	/* frame size = 6 */
 5061               	/* stack size = 13 */
 5062               	.L__stack_usage = 13
 5063 1eb8 9A83      		std Y+2,r25
 5064 1eba 8983      		std Y+1,r24
 5065 1ebc 4B83      		std Y+3,r20
 5066 1ebe 5C83      		std Y+4,r21
 5067 1ec0 6D83      		std Y+5,r22
 5068 1ec2 7E83      		std Y+6,r23
 559:lp_solve_5.5/lp_utils.c **** #if 0
 560:lp_solve_5.5/lp_utils.c ****   return( (MYBOOL) (modf(fabs(value)+lp->epsint, &value) < 2*lp->epsint) );
 561:lp_solve_5.5/lp_utils.c **** #elif 1
 562:lp_solve_5.5/lp_utils.c ****   value = fabs(value)+lp->epsint;
 5069               		.loc 2 562 0
 5070 1ec4 8B81      		ldd r24,Y+3
 5071 1ec6 9C81      		ldd r25,Y+4
 5072 1ec8 AD81      		ldd r26,Y+5
 5073 1eca BE81      		ldd r27,Y+6
 5074 1ecc BF77      		andi r27,0x7f
 5075 1ece 2981      		ldd r18,Y+1
 5076 1ed0 3A81      		ldd r19,Y+2
 5077 1ed2 2659      		subi r18,-106
 5078 1ed4 3C4F      		sbci r19,-4
 5079 1ed6 F901      		movw r30,r18
 5080 1ed8 2081      		ld r18,Z
 5081 1eda 3181      		ldd r19,Z+1
 5082 1edc 4281      		ldd r20,Z+2
 5083 1ede 5381      		ldd r21,Z+3
 5084 1ee0 BC01      		movw r22,r24
 5085 1ee2 CD01      		movw r24,r26
 5086 1ee4 0E94 0000 		call __addsf3
 5087 1ee8 DC01      		movw r26,r24
 5088 1eea CB01      		movw r24,r22
 5089 1eec 8B83      		std Y+3,r24
 5090 1eee 9C83      		std Y+4,r25
 5091 1ef0 AD83      		std Y+5,r26
 5092 1ef2 BE83      		std Y+6,r27
 563:lp_solve_5.5/lp_utils.c ****   return( (MYBOOL) (my_reldiff(value, floor(value)) < 2*lp->epsint) );
 5093               		.loc 2 563 0
 5094 1ef4 8B81      		ldd r24,Y+3
 5095 1ef6 9C81      		ldd r25,Y+4
 5096 1ef8 AD81      		ldd r26,Y+5
 5097 1efa BE81      		ldd r27,Y+6
 5098 1efc BC01      		movw r22,r24
 5099 1efe CD01      		movw r24,r26
 5100 1f00 0E94 0000 		call floor
 5101 1f04 DC01      		movw r26,r24
 5102 1f06 CB01      		movw r24,r22
 5103 1f08 9C01      		movw r18,r24
 5104 1f0a AD01      		movw r20,r26
 5105 1f0c 6B81      		ldd r22,Y+3
 5106 1f0e 7C81      		ldd r23,Y+4
 5107 1f10 8D81      		ldd r24,Y+5
 5108 1f12 9E81      		ldd r25,Y+6
 5109 1f14 0E94 0000 		call __subsf3
 5110 1f18 DC01      		movw r26,r24
 5111 1f1a CB01      		movw r24,r22
 5112 1f1c 6C01      		movw r12,r24
 5113 1f1e 7D01      		movw r14,r26
 5114 1f20 8B81      		ldd r24,Y+3
 5115 1f22 9C81      		ldd r25,Y+4
 5116 1f24 AD81      		ldd r26,Y+5
 5117 1f26 BE81      		ldd r27,Y+6
 5118 1f28 BC01      		movw r22,r24
 5119 1f2a CD01      		movw r24,r26
 5120 1f2c 0E94 0000 		call floor
 5121 1f30 DC01      		movw r26,r24
 5122 1f32 CB01      		movw r24,r22
 5123 1f34 BF77      		andi r27,0x7f
 5124 1f36 20E0      		ldi r18,0
 5125 1f38 30E0      		ldi r19,0
 5126 1f3a 40E8      		ldi r20,lo8(-128)
 5127 1f3c 5FE3      		ldi r21,lo8(63)
 5128 1f3e BC01      		movw r22,r24
 5129 1f40 CD01      		movw r24,r26
 5130 1f42 0E94 0000 		call __addsf3
 5131 1f46 DC01      		movw r26,r24
 5132 1f48 CB01      		movw r24,r22
 5133 1f4a 9C01      		movw r18,r24
 5134 1f4c AD01      		movw r20,r26
 5135 1f4e C701      		movw r24,r14
 5136 1f50 B601      		movw r22,r12
 5137 1f52 0E94 0000 		call __divsf3
 5138 1f56 DC01      		movw r26,r24
 5139 1f58 CB01      		movw r24,r22
 5140 1f5a 6C01      		movw r12,r24
 5141 1f5c 7D01      		movw r14,r26
 5142 1f5e 8981      		ldd r24,Y+1
 5143 1f60 9A81      		ldd r25,Y+2
 5144 1f62 8659      		subi r24,-106
 5145 1f64 9C4F      		sbci r25,-4
 5146 1f66 FC01      		movw r30,r24
 5147 1f68 8081      		ld r24,Z
 5148 1f6a 9181      		ldd r25,Z+1
 5149 1f6c A281      		ldd r26,Z+2
 5150 1f6e B381      		ldd r27,Z+3
 5151 1f70 9C01      		movw r18,r24
 5152 1f72 AD01      		movw r20,r26
 5153 1f74 BC01      		movw r22,r24
 5154 1f76 CD01      		movw r24,r26
 5155 1f78 0E94 0000 		call __addsf3
 5156 1f7c DC01      		movw r26,r24
 5157 1f7e CB01      		movw r24,r22
 5158 1f80 11E0      		ldi r17,lo8(1)
 5159 1f82 9C01      		movw r18,r24
 5160 1f84 AD01      		movw r20,r26
 5161 1f86 C701      		movw r24,r14
 5162 1f88 B601      		movw r22,r12
 5163 1f8a 0E94 0000 		call __ltsf2
 5164 1f8e 8823      		tst r24
 5165 1f90 04F0      		brlt .L215
 5166 1f92 10E0      		ldi r17,0
 5167               	.L215:
 5168 1f94 812F      		mov r24,r17
 5169               	/* epilogue start */
 564:lp_solve_5.5/lp_utils.c **** #elif 0
 565:lp_solve_5.5/lp_utils.c ****   REAL hold;
 566:lp_solve_5.5/lp_utils.c ****   value = fabs(value);
 567:lp_solve_5.5/lp_utils.c ****   hold = pow(10, MIN(-2, log10(value+1)+log10(lp->epsint)));
 568:lp_solve_5.5/lp_utils.c ****   return( (MYBOOL) (modf(value+lp->epsint, &value) < 2*hold) );
 569:lp_solve_5.5/lp_utils.c **** #elif 0
 570:lp_solve_5.5/lp_utils.c ****   value -= (REAL)floor(value);
 571:lp_solve_5.5/lp_utils.c ****   return( (MYBOOL) ((value < lp->epsint) || (value > (1 - lp->epsint)) );
 572:lp_solve_5.5/lp_utils.c **** #else
 573:lp_solve_5.5/lp_utils.c ****   value += lp->epsint;
 574:lp_solve_5.5/lp_utils.c ****   return( (MYBOOL) (fabs(value-floor(value)) < 2*lp->epsint) );
 575:lp_solve_5.5/lp_utils.c **** #endif
 576:lp_solve_5.5/lp_utils.c **** }
 5170               		.loc 2 576 0
 5171 1f96 2696      		adiw r28,6
 5172 1f98 0FB6      		in __tmp_reg__,__SREG__
 5173 1f9a F894      		cli
 5174 1f9c DEBF      		out __SP_H__,r29
 5175 1f9e 0FBE      		out __SREG__,__tmp_reg__
 5176 1fa0 CDBF      		out __SP_L__,r28
 5177 1fa2 DF91      		pop r29
 5178 1fa4 CF91      		pop r28
 5179 1fa6 1F91      		pop r17
 5180 1fa8 FF90      		pop r15
 5181 1faa EF90      		pop r14
 5182 1fac DF90      		pop r13
 5183 1fae CF90      		pop r12
 5184 1fb0 0895      		ret
 5185               		.cfi_endproc
 5186               	.LFE32:
 5188               	.global	__lesf2
 5189               	.global	isOrigFixed
 5191               	isOrigFixed:
 5192               	.LFB33:
 577:lp_solve_5.5/lp_utils.c **** 
 578:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL isOrigFixed(lprec *lp, int varno)
 579:lp_solve_5.5/lp_utils.c **** {
 5193               		.loc 2 579 0
 5194               		.cfi_startproc
 5195 1fb2 DF92      		push r13
 5196               	.LCFI126:
 5197               		.cfi_def_cfa_offset 3
 5198               		.cfi_offset 13, -2
 5199 1fb4 EF92      		push r14
 5200               	.LCFI127:
 5201               		.cfi_def_cfa_offset 4
 5202               		.cfi_offset 14, -3
 5203 1fb6 FF92      		push r15
 5204               	.LCFI128:
 5205               		.cfi_def_cfa_offset 5
 5206               		.cfi_offset 15, -4
 5207 1fb8 0F93      		push r16
 5208               	.LCFI129:
 5209               		.cfi_def_cfa_offset 6
 5210               		.cfi_offset 16, -5
 5211 1fba 1F93      		push r17
 5212               	.LCFI130:
 5213               		.cfi_def_cfa_offset 7
 5214               		.cfi_offset 17, -6
 5215 1fbc CF93      		push r28
 5216               	.LCFI131:
 5217               		.cfi_def_cfa_offset 8
 5218               		.cfi_offset 28, -7
 5219 1fbe DF93      		push r29
 5220               	.LCFI132:
 5221               		.cfi_def_cfa_offset 9
 5222               		.cfi_offset 29, -8
 5223 1fc0 00D0      		rcall .
 5224 1fc2 00D0      		rcall .
 5225               	.LCFI133:
 5226               		.cfi_def_cfa_offset 13
 5227 1fc4 CDB7      		in r28,__SP_L__
 5228 1fc6 DEB7      		in r29,__SP_H__
 5229               	.LCFI134:
 5230               		.cfi_def_cfa_register 28
 5231               	/* prologue: function */
 5232               	/* frame size = 4 */
 5233               	/* stack size = 11 */
 5234               	.L__stack_usage = 11
 5235 1fc8 9A83      		std Y+2,r25
 5236 1fca 8983      		std Y+1,r24
 5237 1fcc 7C83      		std Y+4,r23
 5238 1fce 6B83      		std Y+3,r22
 580:lp_solve_5.5/lp_utils.c ****   return( (MYBOOL) (lp->orig_upbo[varno] - lp->orig_lowbo[varno] <= lp->epsmachine) );
 5239               		.loc 2 580 0
 5240 1fd0 8981      		ldd r24,Y+1
 5241 1fd2 9A81      		ldd r25,Y+2
 5242 1fd4 8255      		subi r24,82
 5243 1fd6 9D4F      		sbci r25,-3
 5244 1fd8 FC01      		movw r30,r24
 5245 1fda 2081      		ld r18,Z
 5246 1fdc 3181      		ldd r19,Z+1
 5247 1fde 8B81      		ldd r24,Y+3
 5248 1fe0 9C81      		ldd r25,Y+4
 5249 1fe2 880F      		lsl r24
 5250 1fe4 991F      		rol r25
 5251 1fe6 880F      		lsl r24
 5252 1fe8 991F      		rol r25
 5253 1fea 820F      		add r24,r18
 5254 1fec 931F      		adc r25,r19
 5255 1fee FC01      		movw r30,r24
 5256 1ff0 8081      		ld r24,Z
 5257 1ff2 9181      		ldd r25,Z+1
 5258 1ff4 A281      		ldd r26,Z+2
 5259 1ff6 B381      		ldd r27,Z+3
 5260 1ff8 2981      		ldd r18,Y+1
 5261 1ffa 3A81      		ldd r19,Y+2
 5262 1ffc 2E54      		subi r18,78
 5263 1ffe 3D4F      		sbci r19,-3
 5264 2000 F901      		movw r30,r18
 5265 2002 4081      		ld r20,Z
 5266 2004 5181      		ldd r21,Z+1
 5267 2006 2B81      		ldd r18,Y+3
 5268 2008 3C81      		ldd r19,Y+4
 5269 200a 220F      		lsl r18
 5270 200c 331F      		rol r19
 5271 200e 220F      		lsl r18
 5272 2010 331F      		rol r19
 5273 2012 240F      		add r18,r20
 5274 2014 351F      		adc r19,r21
 5275 2016 F901      		movw r30,r18
 5276 2018 2081      		ld r18,Z
 5277 201a 3181      		ldd r19,Z+1
 5278 201c 4281      		ldd r20,Z+2
 5279 201e 5381      		ldd r21,Z+3
 5280 2020 BC01      		movw r22,r24
 5281 2022 CD01      		movw r24,r26
 5282 2024 0E94 0000 		call __subsf3
 5283 2028 DC01      		movw r26,r24
 5284 202a CB01      		movw r24,r22
 5285 202c 7C01      		movw r14,r24
 5286 202e 8D01      		movw r16,r26
 5287 2030 8981      		ldd r24,Y+1
 5288 2032 9A81      		ldd r25,Y+2
 5289 2034 8E5E      		subi r24,-18
 5290 2036 9C4F      		sbci r25,-4
 5291 2038 FC01      		movw r30,r24
 5292 203a 8081      		ld r24,Z
 5293 203c 9181      		ldd r25,Z+1
 5294 203e A281      		ldd r26,Z+2
 5295 2040 B381      		ldd r27,Z+3
 5296 2042 DD24      		clr r13
 5297 2044 D394      		inc r13
 5298 2046 9C01      		movw r18,r24
 5299 2048 AD01      		movw r20,r26
 5300 204a C801      		movw r24,r16
 5301 204c B701      		movw r22,r14
 5302 204e 0E94 0000 		call __lesf2
 5303 2052 1816      		cp __zero_reg__,r24
 5304 2054 04F4      		brge .L218
 5305 2056 D12C      		mov r13,__zero_reg__
 5306               	.L218:
 5307 2058 8D2D      		mov r24,r13
 5308               	/* epilogue start */
 581:lp_solve_5.5/lp_utils.c **** }
 5309               		.loc 2 581 0
 5310 205a 0F90      		pop __tmp_reg__
 5311 205c 0F90      		pop __tmp_reg__
 5312 205e 0F90      		pop __tmp_reg__
 5313 2060 0F90      		pop __tmp_reg__
 5314 2062 DF91      		pop r29
 5315 2064 CF91      		pop r28
 5316 2066 1F91      		pop r17
 5317 2068 0F91      		pop r16
 5318 206a FF90      		pop r15
 5319 206c EF90      		pop r14
 5320 206e DF90      		pop r13
 5321 2070 0895      		ret
 5322               		.cfi_endproc
 5323               	.LFE33:
 5325               	.global	chsign_bounds
 5327               	chsign_bounds:
 5328               	.LFB34:
 582:lp_solve_5.5/lp_utils.c **** 
 583:lp_solve_5.5/lp_utils.c **** STATIC void chsign_bounds(REAL *lobound, REAL *upbound)
 584:lp_solve_5.5/lp_utils.c **** {
 5329               		.loc 2 584 0
 5330               		.cfi_startproc
 5331 2072 CF93      		push r28
 5332               	.LCFI135:
 5333               		.cfi_def_cfa_offset 3
 5334               		.cfi_offset 28, -2
 5335 2074 DF93      		push r29
 5336               	.LCFI136:
 5337               		.cfi_def_cfa_offset 4
 5338               		.cfi_offset 29, -3
 5339 2076 CDB7      		in r28,__SP_L__
 5340 2078 DEB7      		in r29,__SP_H__
 5341               	.LCFI137:
 5342               		.cfi_def_cfa_register 28
 5343 207a 2897      		sbiw r28,8
 5344               	.LCFI138:
 5345               		.cfi_def_cfa_offset 12
 5346 207c 0FB6      		in __tmp_reg__,__SREG__
 5347 207e F894      		cli
 5348 2080 DEBF      		out __SP_H__,r29
 5349 2082 0FBE      		out __SREG__,__tmp_reg__
 5350 2084 CDBF      		out __SP_L__,r28
 5351               	/* prologue: function */
 5352               	/* frame size = 8 */
 5353               	/* stack size = 10 */
 5354               	.L__stack_usage = 10
 5355 2086 9E83      		std Y+6,r25
 5356 2088 8D83      		std Y+5,r24
 5357 208a 7887      		std Y+8,r23
 5358 208c 6F83      		std Y+7,r22
 585:lp_solve_5.5/lp_utils.c ****   REAL temp;
 586:lp_solve_5.5/lp_utils.c ****   temp = *upbound;
 5359               		.loc 2 586 0
 5360 208e 8F81      		ldd r24,Y+7
 5361 2090 9885      		ldd r25,Y+8
 5362 2092 FC01      		movw r30,r24
 5363 2094 8081      		ld r24,Z
 5364 2096 9181      		ldd r25,Z+1
 5365 2098 A281      		ldd r26,Z+2
 5366 209a B381      		ldd r27,Z+3
 5367 209c 8983      		std Y+1,r24
 5368 209e 9A83      		std Y+2,r25
 5369 20a0 AB83      		std Y+3,r26
 5370 20a2 BC83      		std Y+4,r27
 587:lp_solve_5.5/lp_utils.c ****   if(fabs(*lobound) > 0)
 5371               		.loc 2 587 0
 5372 20a4 8D81      		ldd r24,Y+5
 5373 20a6 9E81      		ldd r25,Y+6
 5374 20a8 FC01      		movw r30,r24
 5375 20aa 8081      		ld r24,Z
 5376 20ac 9181      		ldd r25,Z+1
 5377 20ae A281      		ldd r26,Z+2
 5378 20b0 B381      		ldd r27,Z+3
 5379 20b2 BF77      		andi r27,0x7f
 5380 20b4 20E0      		ldi r18,0
 5381 20b6 30E0      		ldi r19,0
 5382 20b8 A901      		movw r20,r18
 5383 20ba BC01      		movw r22,r24
 5384 20bc CD01      		movw r24,r26
 5385 20be 0E94 0000 		call __gtsf2
 5386 20c2 1816      		cp __zero_reg__,r24
 5387 20c4 04F4      		brge .L229
 588:lp_solve_5.5/lp_utils.c ****     *upbound = -(*lobound);
 5388               		.loc 2 588 0
 5389 20c6 8D81      		ldd r24,Y+5
 5390 20c8 9E81      		ldd r25,Y+6
 5391 20ca FC01      		movw r30,r24
 5392 20cc 8081      		ld r24,Z
 5393 20ce 9181      		ldd r25,Z+1
 5394 20d0 A281      		ldd r26,Z+2
 5395 20d2 B381      		ldd r27,Z+3
 5396 20d4 B058      		subi r27,0x80
 5397 20d6 2F81      		ldd r18,Y+7
 5398 20d8 3885      		ldd r19,Y+8
 5399 20da F901      		movw r30,r18
 5400 20dc 8083      		st Z,r24
 5401 20de 9183      		std Z+1,r25
 5402 20e0 A283      		std Z+2,r26
 5403 20e2 B383      		std Z+3,r27
 5404 20e4 00C0      		rjmp .L223
 5405               	.L229:
 589:lp_solve_5.5/lp_utils.c ****   else
 590:lp_solve_5.5/lp_utils.c ****     *upbound = 0;
 5406               		.loc 2 590 0
 5407 20e6 8F81      		ldd r24,Y+7
 5408 20e8 9885      		ldd r25,Y+8
 5409 20ea FC01      		movw r30,r24
 5410 20ec 1082      		st Z,__zero_reg__
 5411 20ee 1182      		std Z+1,__zero_reg__
 5412 20f0 1282      		std Z+2,__zero_reg__
 5413 20f2 1382      		std Z+3,__zero_reg__
 5414               	.L223:
 591:lp_solve_5.5/lp_utils.c ****   if(fabs(temp) > 0)
 5415               		.loc 2 591 0
 5416 20f4 8981      		ldd r24,Y+1
 5417 20f6 9A81      		ldd r25,Y+2
 5418 20f8 AB81      		ldd r26,Y+3
 5419 20fa BC81      		ldd r27,Y+4
 5420 20fc BF77      		andi r27,0x7f
 5421 20fe 20E0      		ldi r18,0
 5422 2100 30E0      		ldi r19,0
 5423 2102 A901      		movw r20,r18
 5424 2104 BC01      		movw r22,r24
 5425 2106 CD01      		movw r24,r26
 5426 2108 0E94 0000 		call __gtsf2
 5427 210c 1816      		cp __zero_reg__,r24
 5428 210e 04F4      		brge .L230
 592:lp_solve_5.5/lp_utils.c ****     *lobound = -temp;
 5429               		.loc 2 592 0
 5430 2110 8981      		ldd r24,Y+1
 5431 2112 9A81      		ldd r25,Y+2
 5432 2114 AB81      		ldd r26,Y+3
 5433 2116 BC81      		ldd r27,Y+4
 5434 2118 B058      		subi r27,0x80
 5435 211a 2D81      		ldd r18,Y+5
 5436 211c 3E81      		ldd r19,Y+6
 5437 211e F901      		movw r30,r18
 5438 2120 8083      		st Z,r24
 5439 2122 9183      		std Z+1,r25
 5440 2124 A283      		std Z+2,r26
 5441 2126 B383      		std Z+3,r27
 593:lp_solve_5.5/lp_utils.c ****   else
 594:lp_solve_5.5/lp_utils.c ****     *lobound = 0;
 595:lp_solve_5.5/lp_utils.c **** }
 5442               		.loc 2 595 0
 5443 2128 00C0      		rjmp .L231
 5444               	.L230:
 594:lp_solve_5.5/lp_utils.c **** }
 5445               		.loc 2 594 0
 5446 212a 8D81      		ldd r24,Y+5
 5447 212c 9E81      		ldd r25,Y+6
 5448 212e FC01      		movw r30,r24
 5449 2130 1082      		st Z,__zero_reg__
 5450 2132 1182      		std Z+1,__zero_reg__
 5451 2134 1282      		std Z+2,__zero_reg__
 5452 2136 1382      		std Z+3,__zero_reg__
 5453               	.L231:
 5454               		.loc 2 595 0
 5455 2138 0000      		nop
 5456               	/* epilogue start */
 5457 213a 2896      		adiw r28,8
 5458 213c 0FB6      		in __tmp_reg__,__SREG__
 5459 213e F894      		cli
 5460 2140 DEBF      		out __SP_H__,r29
 5461 2142 0FBE      		out __SREG__,__tmp_reg__
 5462 2144 CDBF      		out __SP_L__,r28
 5463 2146 DF91      		pop r29
 5464 2148 CF91      		pop r28
 5465 214a 0895      		ret
 5466               		.cfi_endproc
 5467               	.LFE34:
 5469               	.global	rand_uniform
 5471               	rand_uniform:
 5472               	.LFB35:
 596:lp_solve_5.5/lp_utils.c **** 
 597:lp_solve_5.5/lp_utils.c **** 
 598:lp_solve_5.5/lp_utils.c **** /* ---------------------------------------------------------------------------------- */
 599:lp_solve_5.5/lp_utils.c **** /* Define randomization routine                                                       */
 600:lp_solve_5.5/lp_utils.c **** /* ---------------------------------------------------------------------------------- */
 601:lp_solve_5.5/lp_utils.c **** STATIC REAL rand_uniform(lprec *lp, REAL range)
 602:lp_solve_5.5/lp_utils.c **** {
 5473               		.loc 2 602 0
 5474               		.cfi_startproc
 5475 214c CF93      		push r28
 5476               	.LCFI139:
 5477               		.cfi_def_cfa_offset 3
 5478               		.cfi_offset 28, -2
 5479 214e DF93      		push r29
 5480               	.LCFI140:
 5481               		.cfi_def_cfa_offset 4
 5482               		.cfi_offset 29, -3
 5483 2150 00D0      		rcall .
 5484 2152 00D0      		rcall .
 5485 2154 00D0      		rcall .
 5486               	.LCFI141:
 5487               		.cfi_def_cfa_offset 10
 5488 2156 CDB7      		in r28,__SP_L__
 5489 2158 DEB7      		in r29,__SP_H__
 5490               	.LCFI142:
 5491               		.cfi_def_cfa_register 28
 5492               	/* prologue: function */
 5493               	/* frame size = 6 */
 5494               	/* stack size = 8 */
 5495               	.L__stack_usage = 8
 5496 215a 9A83      		std Y+2,r25
 5497 215c 8983      		std Y+1,r24
 5498 215e 4B83      		std Y+3,r20
 5499 2160 5C83      		std Y+4,r21
 5500 2162 6D83      		std Y+5,r22
 5501 2164 7E83      		std Y+6,r23
 603:lp_solve_5.5/lp_utils.c ****   static MYBOOL randomized = FALSE; /* static ok here for reentrancy/multithreading */
 604:lp_solve_5.5/lp_utils.c **** 
 605:lp_solve_5.5/lp_utils.c ****   if(!randomized) {
 5502               		.loc 2 605 0
 5503 2166 8091 0000 		lds r24,randomized.6327
 5504 216a 8823      		tst r24
 5505 216c 01F4      		brne .L233
 606:lp_solve_5.5/lp_utils.c ****     randomized = TRUE;
 5506               		.loc 2 606 0
 5507 216e 81E0      		ldi r24,lo8(1)
 5508 2170 8093 0000 		sts randomized.6327,r24
 607:lp_solve_5.5/lp_utils.c ****     srand((unsigned) time( NULL ));
 5509               		.loc 2 607 0
 5510 2174 80E0      		ldi r24,0
 5511 2176 90E0      		ldi r25,0
 5512 2178 0E94 0000 		call time
 5513 217c DC01      		movw r26,r24
 5514 217e CB01      		movw r24,r22
 5515 2180 0E94 0000 		call srand
 5516               	.L233:
 608:lp_solve_5.5/lp_utils.c ****   }
 609:lp_solve_5.5/lp_utils.c ****   range *= (REAL) rand() / (REAL) RAND_MAX;
 5517               		.loc 2 609 0
 5518 2184 0E94 0000 		call rand
 5519 2188 092E      		mov __tmp_reg__,r25
 5520 218a 000C      		lsl r0
 5521 218c AA0B      		sbc r26,r26
 5522 218e BB0B      		sbc r27,r27
 5523 2190 BC01      		movw r22,r24
 5524 2192 CD01      		movw r24,r26
 5525 2194 0E94 0000 		call __floatsisf
 5526 2198 DC01      		movw r26,r24
 5527 219a CB01      		movw r24,r22
 5528 219c 20E0      		ldi r18,0
 5529 219e 3EEF      		ldi r19,lo8(-2)
 5530 21a0 4FEF      		ldi r20,lo8(-1)
 5531 21a2 56E4      		ldi r21,lo8(70)
 5532 21a4 BC01      		movw r22,r24
 5533 21a6 CD01      		movw r24,r26
 5534 21a8 0E94 0000 		call __divsf3
 5535 21ac DC01      		movw r26,r24
 5536 21ae CB01      		movw r24,r22
 5537 21b0 9C01      		movw r18,r24
 5538 21b2 AD01      		movw r20,r26
 5539 21b4 6B81      		ldd r22,Y+3
 5540 21b6 7C81      		ldd r23,Y+4
 5541 21b8 8D81      		ldd r24,Y+5
 5542 21ba 9E81      		ldd r25,Y+6
 5543 21bc 0E94 0000 		call __mulsf3
 5544 21c0 DC01      		movw r26,r24
 5545 21c2 CB01      		movw r24,r22
 5546 21c4 8B83      		std Y+3,r24
 5547 21c6 9C83      		std Y+4,r25
 5548 21c8 AD83      		std Y+5,r26
 5549 21ca BE83      		std Y+6,r27
 610:lp_solve_5.5/lp_utils.c ****   return( range );
 5550               		.loc 2 610 0
 5551 21cc 8B81      		ldd r24,Y+3
 5552 21ce 9C81      		ldd r25,Y+4
 5553 21d0 AD81      		ldd r26,Y+5
 5554 21d2 BE81      		ldd r27,Y+6
 611:lp_solve_5.5/lp_utils.c **** }
 5555               		.loc 2 611 0
 5556 21d4 BC01      		movw r22,r24
 5557 21d6 CD01      		movw r24,r26
 5558               	/* epilogue start */
 5559 21d8 2696      		adiw r28,6
 5560 21da 0FB6      		in __tmp_reg__,__SREG__
 5561 21dc F894      		cli
 5562 21de DEBF      		out __SP_H__,r29
 5563 21e0 0FBE      		out __SREG__,__tmp_reg__
 5564 21e2 CDBF      		out __SP_L__,r28
 5565 21e4 DF91      		pop r29
 5566 21e6 CF91      		pop r28
 5567 21e8 0895      		ret
 5568               		.cfi_endproc
 5569               	.LFE35:
 5571               	.global	createLink
 5573               	createLink:
 5574               	.LFB36:
 612:lp_solve_5.5/lp_utils.c **** 
 613:lp_solve_5.5/lp_utils.c **** 
 614:lp_solve_5.5/lp_utils.c **** /* ---------------------------------------------------------------------------------- */
 615:lp_solve_5.5/lp_utils.c **** /* Define routines for doubly linked lists of integers                                */
 616:lp_solve_5.5/lp_utils.c **** /* ---------------------------------------------------------------------------------- */
 617:lp_solve_5.5/lp_utils.c **** 
 618:lp_solve_5.5/lp_utils.c **** STATIC int createLink(int size, LLrec **linkmap, MYBOOL *usedpos)
 619:lp_solve_5.5/lp_utils.c **** {
 5575               		.loc 2 619 0
 5576               		.cfi_startproc
 5577 21ea 0F93      		push r16
 5578               	.LCFI143:
 5579               		.cfi_def_cfa_offset 3
 5580               		.cfi_offset 16, -2
 5581 21ec 1F93      		push r17
 5582               	.LCFI144:
 5583               		.cfi_def_cfa_offset 4
 5584               		.cfi_offset 17, -3
 5585 21ee CF93      		push r28
 5586               	.LCFI145:
 5587               		.cfi_def_cfa_offset 5
 5588               		.cfi_offset 28, -4
 5589 21f0 DF93      		push r29
 5590               	.LCFI146:
 5591               		.cfi_def_cfa_offset 6
 5592               		.cfi_offset 29, -5
 5593 21f2 CDB7      		in r28,__SP_L__
 5594 21f4 DEB7      		in r29,__SP_H__
 5595               	.LCFI147:
 5596               		.cfi_def_cfa_register 28
 5597 21f6 2B97      		sbiw r28,11
 5598               	.LCFI148:
 5599               		.cfi_def_cfa_offset 17
 5600 21f8 0FB6      		in __tmp_reg__,__SREG__
 5601 21fa F894      		cli
 5602 21fc DEBF      		out __SP_H__,r29
 5603 21fe 0FBE      		out __SREG__,__tmp_reg__
 5604 2200 CDBF      		out __SP_L__,r28
 5605               	/* prologue: function */
 5606               	/* frame size = 11 */
 5607               	/* stack size = 15 */
 5608               	.L__stack_usage = 15
 5609 2202 9F83      		std Y+7,r25
 5610 2204 8E83      		std Y+6,r24
 5611 2206 7987      		std Y+9,r23
 5612 2208 6887      		std Y+8,r22
 5613 220a 5B87      		std Y+11,r21
 5614 220c 4A87      		std Y+10,r20
 620:lp_solve_5.5/lp_utils.c ****   int i, j;
 621:lp_solve_5.5/lp_utils.c ****   MYBOOL reverse;
 622:lp_solve_5.5/lp_utils.c **** 
 623:lp_solve_5.5/lp_utils.c ****   *linkmap = (LLrec *) calloc(1, sizeof(**linkmap));
 5615               		.loc 2 623 0
 5616 220e 6AE0      		ldi r22,lo8(10)
 5617 2210 70E0      		ldi r23,0
 5618 2212 81E0      		ldi r24,lo8(1)
 5619 2214 90E0      		ldi r25,0
 5620 2216 0E94 0000 		call calloc
 5621 221a 9C01      		movw r18,r24
 5622 221c 8885      		ldd r24,Y+8
 5623 221e 9985      		ldd r25,Y+9
 5624 2220 FC01      		movw r30,r24
 5625 2222 3183      		std Z+1,r19
 5626 2224 2083      		st Z,r18
 624:lp_solve_5.5/lp_utils.c ****   if(*linkmap == NULL)
 5627               		.loc 2 624 0
 5628 2226 8885      		ldd r24,Y+8
 5629 2228 9985      		ldd r25,Y+9
 5630 222a FC01      		movw r30,r24
 5631 222c 8081      		ld r24,Z
 5632 222e 9181      		ldd r25,Z+1
 5633 2230 892B      		or r24,r25
 5634 2232 01F4      		brne .L236
 625:lp_solve_5.5/lp_utils.c ****     return( -1 );
 5635               		.loc 2 625 0
 5636 2234 8FEF      		ldi r24,lo8(-1)
 5637 2236 9FEF      		ldi r25,lo8(-1)
 5638 2238 00C0      		rjmp .L237
 5639               	.L236:
 626:lp_solve_5.5/lp_utils.c **** 
 627:lp_solve_5.5/lp_utils.c ****   reverse = (MYBOOL) (size < 0);
 5640               		.loc 2 627 0
 5641 223a 8F81      		ldd r24,Y+7
 5642 223c 881F      		rol r24
 5643 223e 8827      		clr r24
 5644 2240 881F      		rol r24
 5645 2242 8D83      		std Y+5,r24
 628:lp_solve_5.5/lp_utils.c ****   if(reverse)
 5646               		.loc 2 628 0
 5647 2244 8D81      		ldd r24,Y+5
 5648 2246 8823      		tst r24
 5649 2248 01F0      		breq .L238
 629:lp_solve_5.5/lp_utils.c ****     size = -size;
 5650               		.loc 2 629 0
 5651 224a 8E81      		ldd r24,Y+6
 5652 224c 9F81      		ldd r25,Y+7
 5653 224e 9195      		neg r25
 5654 2250 8195      		neg r24
 5655 2252 9109      		sbc r25,__zero_reg__
 5656 2254 9F83      		std Y+7,r25
 5657 2256 8E83      		std Y+6,r24
 5658               	.L238:
 630:lp_solve_5.5/lp_utils.c ****   (*linkmap)->map = (int *) calloc(2*(size + 1), sizeof(int));
 5659               		.loc 2 630 0
 5660 2258 8885      		ldd r24,Y+8
 5661 225a 9985      		ldd r25,Y+9
 5662 225c FC01      		movw r30,r24
 5663 225e 0081      		ld r16,Z
 5664 2260 1181      		ldd r17,Z+1
 5665 2262 8E81      		ldd r24,Y+6
 5666 2264 9F81      		ldd r25,Y+7
 5667 2266 0196      		adiw r24,1
 5668 2268 880F      		lsl r24
 5669 226a 991F      		rol r25
 5670 226c 62E0      		ldi r22,lo8(2)
 5671 226e 70E0      		ldi r23,0
 5672 2270 0E94 0000 		call calloc
 5673 2274 F801      		movw r30,r16
 5674 2276 9187      		std Z+9,r25
 5675 2278 8087      		std Z+8,r24
 631:lp_solve_5.5/lp_utils.c ****   if((*linkmap)->map == NULL)
 5676               		.loc 2 631 0
 5677 227a 8885      		ldd r24,Y+8
 5678 227c 9985      		ldd r25,Y+9
 5679 227e FC01      		movw r30,r24
 5680 2280 8081      		ld r24,Z
 5681 2282 9181      		ldd r25,Z+1
 5682 2284 FC01      		movw r30,r24
 5683 2286 8085      		ldd r24,Z+8
 5684 2288 9185      		ldd r25,Z+9
 5685 228a 892B      		or r24,r25
 5686 228c 01F4      		brne .L239
 632:lp_solve_5.5/lp_utils.c ****     return( -1 );
 5687               		.loc 2 632 0
 5688 228e 8FEF      		ldi r24,lo8(-1)
 5689 2290 9FEF      		ldi r25,lo8(-1)
 5690 2292 00C0      		rjmp .L237
 5691               	.L239:
 633:lp_solve_5.5/lp_utils.c **** 
 634:lp_solve_5.5/lp_utils.c ****   (*linkmap)->size = size;
 5692               		.loc 2 634 0
 5693 2294 8885      		ldd r24,Y+8
 5694 2296 9985      		ldd r25,Y+9
 5695 2298 FC01      		movw r30,r24
 5696 229a 8081      		ld r24,Z
 5697 229c 9181      		ldd r25,Z+1
 5698 229e 2E81      		ldd r18,Y+6
 5699 22a0 3F81      		ldd r19,Y+7
 5700 22a2 FC01      		movw r30,r24
 5701 22a4 3183      		std Z+1,r19
 5702 22a6 2083      		st Z,r18
 635:lp_solve_5.5/lp_utils.c ****   j = 0;
 5703               		.loc 2 635 0
 5704 22a8 1C82      		std Y+4,__zero_reg__
 5705 22aa 1B82      		std Y+3,__zero_reg__
 636:lp_solve_5.5/lp_utils.c ****   if(usedpos == NULL)
 5706               		.loc 2 636 0
 5707 22ac 8A85      		ldd r24,Y+10
 5708 22ae 9B85      		ldd r25,Y+11
 5709 22b0 892B      		or r24,r25
 5710 22b2 01F4      		brne .L240
 637:lp_solve_5.5/lp_utils.c ****     (*linkmap)->map[0] = 0;
 5711               		.loc 2 637 0
 5712 22b4 8885      		ldd r24,Y+8
 5713 22b6 9985      		ldd r25,Y+9
 5714 22b8 FC01      		movw r30,r24
 5715 22ba 8081      		ld r24,Z
 5716 22bc 9181      		ldd r25,Z+1
 5717 22be FC01      		movw r30,r24
 5718 22c0 8085      		ldd r24,Z+8
 5719 22c2 9185      		ldd r25,Z+9
 5720 22c4 FC01      		movw r30,r24
 5721 22c6 1182      		std Z+1,__zero_reg__
 5722 22c8 1082      		st Z,__zero_reg__
 5723 22ca 00C0      		rjmp .L241
 5724               	.L240:
 638:lp_solve_5.5/lp_utils.c ****   else {
 639:lp_solve_5.5/lp_utils.c ****     for(i = 1; i <= size; i++)
 5725               		.loc 2 639 0
 5726 22cc 81E0      		ldi r24,lo8(1)
 5727 22ce 90E0      		ldi r25,0
 5728 22d0 9A83      		std Y+2,r25
 5729 22d2 8983      		std Y+1,r24
 5730 22d4 00C0      		rjmp .L242
 5731               	.L246:
 640:lp_solve_5.5/lp_utils.c ****       if(!usedpos[i] ^ reverse) {
 5732               		.loc 2 640 0
 5733 22d6 8981      		ldd r24,Y+1
 5734 22d8 9A81      		ldd r25,Y+2
 5735 22da 2A85      		ldd r18,Y+10
 5736 22dc 3B85      		ldd r19,Y+11
 5737 22de 820F      		add r24,r18
 5738 22e0 931F      		adc r25,r19
 5739 22e2 FC01      		movw r30,r24
 5740 22e4 9081      		ld r25,Z
 5741 22e6 81E0      		ldi r24,lo8(1)
 5742 22e8 9923      		tst r25
 5743 22ea 01F0      		breq .L243
 5744 22ec 80E0      		ldi r24,0
 5745               	.L243:
 5746 22ee 282F      		mov r18,r24
 5747 22f0 30E0      		ldi r19,0
 5748 22f2 8D81      		ldd r24,Y+5
 5749 22f4 882F      		mov r24,r24
 5750 22f6 90E0      		ldi r25,0
 5751 22f8 2817      		cp r18,r24
 5752 22fa 3907      		cpc r19,r25
 5753 22fc 01F4      		brne .+2
 5754 22fe 00C0      		rjmp .L244
 641:lp_solve_5.5/lp_utils.c ****         /* Set the forward link */
 642:lp_solve_5.5/lp_utils.c ****         (*linkmap)->map[j] = i;
 5755               		.loc 2 642 0
 5756 2300 8885      		ldd r24,Y+8
 5757 2302 9985      		ldd r25,Y+9
 5758 2304 FC01      		movw r30,r24
 5759 2306 8081      		ld r24,Z
 5760 2308 9181      		ldd r25,Z+1
 5761 230a FC01      		movw r30,r24
 5762 230c 2085      		ldd r18,Z+8
 5763 230e 3185      		ldd r19,Z+9
 5764 2310 8B81      		ldd r24,Y+3
 5765 2312 9C81      		ldd r25,Y+4
 5766 2314 880F      		lsl r24
 5767 2316 991F      		rol r25
 5768 2318 820F      		add r24,r18
 5769 231a 931F      		adc r25,r19
 5770 231c 2981      		ldd r18,Y+1
 5771 231e 3A81      		ldd r19,Y+2
 5772 2320 FC01      		movw r30,r24
 5773 2322 3183      		std Z+1,r19
 5774 2324 2083      		st Z,r18
 643:lp_solve_5.5/lp_utils.c ****         /* Set the backward link */
 644:lp_solve_5.5/lp_utils.c ****         (*linkmap)->map[size+i] = j;
 5775               		.loc 2 644 0
 5776 2326 8885      		ldd r24,Y+8
 5777 2328 9985      		ldd r25,Y+9
 5778 232a FC01      		movw r30,r24
 5779 232c 8081      		ld r24,Z
 5780 232e 9181      		ldd r25,Z+1
 5781 2330 FC01      		movw r30,r24
 5782 2332 2085      		ldd r18,Z+8
 5783 2334 3185      		ldd r19,Z+9
 5784 2336 4E81      		ldd r20,Y+6
 5785 2338 5F81      		ldd r21,Y+7
 5786 233a 8981      		ldd r24,Y+1
 5787 233c 9A81      		ldd r25,Y+2
 5788 233e 840F      		add r24,r20
 5789 2340 951F      		adc r25,r21
 5790 2342 880F      		lsl r24
 5791 2344 991F      		rol r25
 5792 2346 820F      		add r24,r18
 5793 2348 931F      		adc r25,r19
 5794 234a 2B81      		ldd r18,Y+3
 5795 234c 3C81      		ldd r19,Y+4
 5796 234e FC01      		movw r30,r24
 5797 2350 3183      		std Z+1,r19
 5798 2352 2083      		st Z,r18
 645:lp_solve_5.5/lp_utils.c ****         j = i;
 5799               		.loc 2 645 0
 5800 2354 8981      		ldd r24,Y+1
 5801 2356 9A81      		ldd r25,Y+2
 5802 2358 9C83      		std Y+4,r25
 5803 235a 8B83      		std Y+3,r24
 646:lp_solve_5.5/lp_utils.c ****         if((*linkmap)->count == 0)
 5804               		.loc 2 646 0
 5805 235c 8885      		ldd r24,Y+8
 5806 235e 9985      		ldd r25,Y+9
 5807 2360 FC01      		movw r30,r24
 5808 2362 8081      		ld r24,Z
 5809 2364 9181      		ldd r25,Z+1
 5810 2366 FC01      		movw r30,r24
 5811 2368 8281      		ldd r24,Z+2
 5812 236a 9381      		ldd r25,Z+3
 5813 236c 892B      		or r24,r25
 5814 236e 01F4      		brne .L245
 647:lp_solve_5.5/lp_utils.c ****           (*linkmap)->firstitem = i;
 5815               		.loc 2 647 0
 5816 2370 8885      		ldd r24,Y+8
 5817 2372 9985      		ldd r25,Y+9
 5818 2374 FC01      		movw r30,r24
 5819 2376 8081      		ld r24,Z
 5820 2378 9181      		ldd r25,Z+1
 5821 237a 2981      		ldd r18,Y+1
 5822 237c 3A81      		ldd r19,Y+2
 5823 237e FC01      		movw r30,r24
 5824 2380 3583      		std Z+5,r19
 5825 2382 2483      		std Z+4,r18
 5826               	.L245:
 648:lp_solve_5.5/lp_utils.c ****         (*linkmap)->lastitem = i;
 5827               		.loc 2 648 0
 5828 2384 8885      		ldd r24,Y+8
 5829 2386 9985      		ldd r25,Y+9
 5830 2388 FC01      		movw r30,r24
 5831 238a 8081      		ld r24,Z
 5832 238c 9181      		ldd r25,Z+1
 5833 238e 2981      		ldd r18,Y+1
 5834 2390 3A81      		ldd r19,Y+2
 5835 2392 FC01      		movw r30,r24
 5836 2394 3783      		std Z+7,r19
 5837 2396 2683      		std Z+6,r18
 649:lp_solve_5.5/lp_utils.c ****         (*linkmap)->count++;
 5838               		.loc 2 649 0
 5839 2398 8885      		ldd r24,Y+8
 5840 239a 9985      		ldd r25,Y+9
 5841 239c FC01      		movw r30,r24
 5842 239e 8081      		ld r24,Z
 5843 23a0 9181      		ldd r25,Z+1
 5844 23a2 FC01      		movw r30,r24
 5845 23a4 2281      		ldd r18,Z+2
 5846 23a6 3381      		ldd r19,Z+3
 5847 23a8 2F5F      		subi r18,-1
 5848 23aa 3F4F      		sbci r19,-1
 5849 23ac FC01      		movw r30,r24
 5850 23ae 3383      		std Z+3,r19
 5851 23b0 2283      		std Z+2,r18
 5852               	.L244:
 639:lp_solve_5.5/lp_utils.c ****       if(!usedpos[i] ^ reverse) {
 5853               		.loc 2 639 0 discriminator 2
 5854 23b2 8981      		ldd r24,Y+1
 5855 23b4 9A81      		ldd r25,Y+2
 5856 23b6 0196      		adiw r24,1
 5857 23b8 9A83      		std Y+2,r25
 5858 23ba 8983      		std Y+1,r24
 5859               	.L242:
 639:lp_solve_5.5/lp_utils.c ****       if(!usedpos[i] ^ reverse) {
 5860               		.loc 2 639 0 is_stmt 0 discriminator 1
 5861 23bc 2981      		ldd r18,Y+1
 5862 23be 3A81      		ldd r19,Y+2
 5863 23c0 8E81      		ldd r24,Y+6
 5864 23c2 9F81      		ldd r25,Y+7
 5865 23c4 8217      		cp r24,r18
 5866 23c6 9307      		cpc r25,r19
 5867 23c8 04F0      		brlt .+2
 5868 23ca 00C0      		rjmp .L246
 5869               	.L241:
 650:lp_solve_5.5/lp_utils.c ****       }
 651:lp_solve_5.5/lp_utils.c ****   }
 652:lp_solve_5.5/lp_utils.c ****   (*linkmap)->map[2*size+1] = j;
 5870               		.loc 2 652 0 is_stmt 1
 5871 23cc 8885      		ldd r24,Y+8
 5872 23ce 9985      		ldd r25,Y+9
 5873 23d0 FC01      		movw r30,r24
 5874 23d2 8081      		ld r24,Z
 5875 23d4 9181      		ldd r25,Z+1
 5876 23d6 FC01      		movw r30,r24
 5877 23d8 2085      		ldd r18,Z+8
 5878 23da 3185      		ldd r19,Z+9
 5879 23dc 8E81      		ldd r24,Y+6
 5880 23de 9F81      		ldd r25,Y+7
 5881 23e0 880F      		lsl r24
 5882 23e2 991F      		rol r25
 5883 23e4 880F      		lsl r24
 5884 23e6 991F      		rol r25
 5885 23e8 0296      		adiw r24,2
 5886 23ea 820F      		add r24,r18
 5887 23ec 931F      		adc r25,r19
 5888 23ee 2B81      		ldd r18,Y+3
 5889 23f0 3C81      		ldd r19,Y+4
 5890 23f2 FC01      		movw r30,r24
 5891 23f4 3183      		std Z+1,r19
 5892 23f6 2083      		st Z,r18
 653:lp_solve_5.5/lp_utils.c **** 
 654:lp_solve_5.5/lp_utils.c ****   return( (*linkmap)->count );
 5893               		.loc 2 654 0
 5894 23f8 8885      		ldd r24,Y+8
 5895 23fa 9985      		ldd r25,Y+9
 5896 23fc FC01      		movw r30,r24
 5897 23fe 8081      		ld r24,Z
 5898 2400 9181      		ldd r25,Z+1
 5899 2402 FC01      		movw r30,r24
 5900 2404 8281      		ldd r24,Z+2
 5901 2406 9381      		ldd r25,Z+3
 5902               	.L237:
 5903               	/* epilogue start */
 655:lp_solve_5.5/lp_utils.c **** }
 5904               		.loc 2 655 0
 5905 2408 2B96      		adiw r28,11
 5906 240a 0FB6      		in __tmp_reg__,__SREG__
 5907 240c F894      		cli
 5908 240e DEBF      		out __SP_H__,r29
 5909 2410 0FBE      		out __SREG__,__tmp_reg__
 5910 2412 CDBF      		out __SP_L__,r28
 5911 2414 DF91      		pop r29
 5912 2416 CF91      		pop r28
 5913 2418 1F91      		pop r17
 5914 241a 0F91      		pop r16
 5915 241c 0895      		ret
 5916               		.cfi_endproc
 5917               	.LFE36:
 5919               	.global	freeLink
 5921               	freeLink:
 5922               	.LFB37:
 656:lp_solve_5.5/lp_utils.c **** 
 657:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL freeLink(LLrec **linkmap)
 658:lp_solve_5.5/lp_utils.c **** {
 5923               		.loc 2 658 0
 5924               		.cfi_startproc
 5925 241e CF93      		push r28
 5926               	.LCFI149:
 5927               		.cfi_def_cfa_offset 3
 5928               		.cfi_offset 28, -2
 5929 2420 DF93      		push r29
 5930               	.LCFI150:
 5931               		.cfi_def_cfa_offset 4
 5932               		.cfi_offset 29, -3
 5933 2422 00D0      		rcall .
 5934 2424 1F92      		push __zero_reg__
 5935               	.LCFI151:
 5936               		.cfi_def_cfa_offset 7
 5937 2426 CDB7      		in r28,__SP_L__
 5938 2428 DEB7      		in r29,__SP_H__
 5939               	.LCFI152:
 5940               		.cfi_def_cfa_register 28
 5941               	/* prologue: function */
 5942               	/* frame size = 3 */
 5943               	/* stack size = 5 */
 5944               	.L__stack_usage = 5
 5945 242a 9B83      		std Y+3,r25
 5946 242c 8A83      		std Y+2,r24
 659:lp_solve_5.5/lp_utils.c ****   MYBOOL status = TRUE;
 5947               		.loc 2 659 0
 5948 242e 81E0      		ldi r24,lo8(1)
 5949 2430 8983      		std Y+1,r24
 660:lp_solve_5.5/lp_utils.c **** 
 661:lp_solve_5.5/lp_utils.c ****   if((linkmap == NULL) || (*linkmap == NULL))
 5950               		.loc 2 661 0
 5951 2432 8A81      		ldd r24,Y+2
 5952 2434 9B81      		ldd r25,Y+3
 5953 2436 892B      		or r24,r25
 5954 2438 01F0      		breq .L248
 5955               		.loc 2 661 0 is_stmt 0 discriminator 1
 5956 243a 8A81      		ldd r24,Y+2
 5957 243c 9B81      		ldd r25,Y+3
 5958 243e FC01      		movw r30,r24
 5959 2440 8081      		ld r24,Z
 5960 2442 9181      		ldd r25,Z+1
 5961 2444 892B      		or r24,r25
 5962 2446 01F4      		brne .L249
 5963               	.L248:
 662:lp_solve_5.5/lp_utils.c ****     status = FALSE;
 5964               		.loc 2 662 0 is_stmt 1
 5965 2448 1982      		std Y+1,__zero_reg__
 5966 244a 00C0      		rjmp .L250
 5967               	.L249:
 663:lp_solve_5.5/lp_utils.c ****   else {
 664:lp_solve_5.5/lp_utils.c ****     if((*linkmap)->map != NULL)
 5968               		.loc 2 664 0
 5969 244c 8A81      		ldd r24,Y+2
 5970 244e 9B81      		ldd r25,Y+3
 5971 2450 FC01      		movw r30,r24
 5972 2452 8081      		ld r24,Z
 5973 2454 9181      		ldd r25,Z+1
 5974 2456 FC01      		movw r30,r24
 5975 2458 8085      		ldd r24,Z+8
 5976 245a 9185      		ldd r25,Z+9
 5977 245c 892B      		or r24,r25
 5978 245e 01F0      		breq .L251
 665:lp_solve_5.5/lp_utils.c ****       free((*linkmap)->map);
 5979               		.loc 2 665 0
 5980 2460 8A81      		ldd r24,Y+2
 5981 2462 9B81      		ldd r25,Y+3
 5982 2464 FC01      		movw r30,r24
 5983 2466 8081      		ld r24,Z
 5984 2468 9181      		ldd r25,Z+1
 5985 246a FC01      		movw r30,r24
 5986 246c 8085      		ldd r24,Z+8
 5987 246e 9185      		ldd r25,Z+9
 5988 2470 0E94 0000 		call free
 5989               	.L251:
 666:lp_solve_5.5/lp_utils.c ****     free(*linkmap);
 5990               		.loc 2 666 0
 5991 2474 8A81      		ldd r24,Y+2
 5992 2476 9B81      		ldd r25,Y+3
 5993 2478 FC01      		movw r30,r24
 5994 247a 8081      		ld r24,Z
 5995 247c 9181      		ldd r25,Z+1
 5996 247e 0E94 0000 		call free
 667:lp_solve_5.5/lp_utils.c ****     *linkmap = NULL;
 5997               		.loc 2 667 0
 5998 2482 8A81      		ldd r24,Y+2
 5999 2484 9B81      		ldd r25,Y+3
 6000 2486 FC01      		movw r30,r24
 6001 2488 1182      		std Z+1,__zero_reg__
 6002 248a 1082      		st Z,__zero_reg__
 6003               	.L250:
 668:lp_solve_5.5/lp_utils.c ****   }
 669:lp_solve_5.5/lp_utils.c ****   return( status );
 6004               		.loc 2 669 0
 6005 248c 8981      		ldd r24,Y+1
 6006               	/* epilogue start */
 670:lp_solve_5.5/lp_utils.c **** }
 6007               		.loc 2 670 0
 6008 248e 0F90      		pop __tmp_reg__
 6009 2490 0F90      		pop __tmp_reg__
 6010 2492 0F90      		pop __tmp_reg__
 6011 2494 DF91      		pop r29
 6012 2496 CF91      		pop r28
 6013 2498 0895      		ret
 6014               		.cfi_endproc
 6015               	.LFE37:
 6017               	.global	sizeLink
 6019               	sizeLink:
 6020               	.LFB38:
 671:lp_solve_5.5/lp_utils.c **** 
 672:lp_solve_5.5/lp_utils.c **** STATIC int sizeLink(LLrec *linkmap)
 673:lp_solve_5.5/lp_utils.c **** {
 6021               		.loc 2 673 0
 6022               		.cfi_startproc
 6023 249a CF93      		push r28
 6024               	.LCFI153:
 6025               		.cfi_def_cfa_offset 3
 6026               		.cfi_offset 28, -2
 6027 249c DF93      		push r29
 6028               	.LCFI154:
 6029               		.cfi_def_cfa_offset 4
 6030               		.cfi_offset 29, -3
 6031 249e 00D0      		rcall .
 6032               	.LCFI155:
 6033               		.cfi_def_cfa_offset 6
 6034 24a0 CDB7      		in r28,__SP_L__
 6035 24a2 DEB7      		in r29,__SP_H__
 6036               	.LCFI156:
 6037               		.cfi_def_cfa_register 28
 6038               	/* prologue: function */
 6039               	/* frame size = 2 */
 6040               	/* stack size = 4 */
 6041               	.L__stack_usage = 4
 6042 24a4 9A83      		std Y+2,r25
 6043 24a6 8983      		std Y+1,r24
 674:lp_solve_5.5/lp_utils.c ****   return(linkmap->size);
 6044               		.loc 2 674 0
 6045 24a8 8981      		ldd r24,Y+1
 6046 24aa 9A81      		ldd r25,Y+2
 6047 24ac FC01      		movw r30,r24
 6048 24ae 8081      		ld r24,Z
 6049 24b0 9181      		ldd r25,Z+1
 6050               	/* epilogue start */
 675:lp_solve_5.5/lp_utils.c **** }
 6051               		.loc 2 675 0
 6052 24b2 0F90      		pop __tmp_reg__
 6053 24b4 0F90      		pop __tmp_reg__
 6054 24b6 DF91      		pop r29
 6055 24b8 CF91      		pop r28
 6056 24ba 0895      		ret
 6057               		.cfi_endproc
 6058               	.LFE38:
 6060               	.global	isActiveLink
 6062               	isActiveLink:
 6063               	.LFB39:
 676:lp_solve_5.5/lp_utils.c **** 
 677:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL isActiveLink(LLrec *linkmap, int itemnr)
 678:lp_solve_5.5/lp_utils.c **** {
 6064               		.loc 2 678 0
 6065               		.cfi_startproc
 6066 24bc CF93      		push r28
 6067               	.LCFI157:
 6068               		.cfi_def_cfa_offset 3
 6069               		.cfi_offset 28, -2
 6070 24be DF93      		push r29
 6071               	.LCFI158:
 6072               		.cfi_def_cfa_offset 4
 6073               		.cfi_offset 29, -3
 6074 24c0 00D0      		rcall .
 6075 24c2 00D0      		rcall .
 6076               	.LCFI159:
 6077               		.cfi_def_cfa_offset 8
 6078 24c4 CDB7      		in r28,__SP_L__
 6079 24c6 DEB7      		in r29,__SP_H__
 6080               	.LCFI160:
 6081               		.cfi_def_cfa_register 28
 6082               	/* prologue: function */
 6083               	/* frame size = 4 */
 6084               	/* stack size = 6 */
 6085               	.L__stack_usage = 6
 6086 24c8 9A83      		std Y+2,r25
 6087 24ca 8983      		std Y+1,r24
 6088 24cc 7C83      		std Y+4,r23
 6089 24ce 6B83      		std Y+3,r22
 679:lp_solve_5.5/lp_utils.c ****   if((linkmap->map[itemnr] != 0) ||
 6090               		.loc 2 679 0
 6091 24d0 8981      		ldd r24,Y+1
 6092 24d2 9A81      		ldd r25,Y+2
 6093 24d4 FC01      		movw r30,r24
 6094 24d6 2085      		ldd r18,Z+8
 6095 24d8 3185      		ldd r19,Z+9
 6096 24da 8B81      		ldd r24,Y+3
 6097 24dc 9C81      		ldd r25,Y+4
 6098 24de 880F      		lsl r24
 6099 24e0 991F      		rol r25
 6100 24e2 820F      		add r24,r18
 6101 24e4 931F      		adc r25,r19
 6102 24e6 FC01      		movw r30,r24
 6103 24e8 8081      		ld r24,Z
 6104 24ea 9181      		ldd r25,Z+1
 6105 24ec 892B      		or r24,r25
 6106 24ee 01F4      		brne .L256
 680:lp_solve_5.5/lp_utils.c ****      (linkmap->map[linkmap->size+itemnr] != 0) ||
 6107               		.loc 2 680 0 discriminator 1
 6108 24f0 8981      		ldd r24,Y+1
 6109 24f2 9A81      		ldd r25,Y+2
 6110 24f4 FC01      		movw r30,r24
 6111 24f6 2085      		ldd r18,Z+8
 6112 24f8 3185      		ldd r19,Z+9
 6113 24fa 8981      		ldd r24,Y+1
 6114 24fc 9A81      		ldd r25,Y+2
 6115 24fe FC01      		movw r30,r24
 6116 2500 4081      		ld r20,Z
 6117 2502 5181      		ldd r21,Z+1
 6118 2504 8B81      		ldd r24,Y+3
 6119 2506 9C81      		ldd r25,Y+4
 6120 2508 840F      		add r24,r20
 6121 250a 951F      		adc r25,r21
 6122 250c 880F      		lsl r24
 6123 250e 991F      		rol r25
 6124 2510 820F      		add r24,r18
 6125 2512 931F      		adc r25,r19
 6126 2514 FC01      		movw r30,r24
 6127 2516 8081      		ld r24,Z
 6128 2518 9181      		ldd r25,Z+1
 679:lp_solve_5.5/lp_utils.c ****   if((linkmap->map[itemnr] != 0) ||
 6129               		.loc 2 679 0 discriminator 1
 6130 251a 892B      		or r24,r25
 6131 251c 01F4      		brne .L256
 681:lp_solve_5.5/lp_utils.c ****      (linkmap->map[0] == itemnr))
 6132               		.loc 2 681 0
 6133 251e 8981      		ldd r24,Y+1
 6134 2520 9A81      		ldd r25,Y+2
 6135 2522 FC01      		movw r30,r24
 6136 2524 8085      		ldd r24,Z+8
 6137 2526 9185      		ldd r25,Z+9
 6138 2528 FC01      		movw r30,r24
 6139 252a 2081      		ld r18,Z
 6140 252c 3181      		ldd r19,Z+1
 680:lp_solve_5.5/lp_utils.c ****      (linkmap->map[linkmap->size+itemnr] != 0) ||
 6141               		.loc 2 680 0
 6142 252e 8B81      		ldd r24,Y+3
 6143 2530 9C81      		ldd r25,Y+4
 6144 2532 2817      		cp r18,r24
 6145 2534 3907      		cpc r19,r25
 6146 2536 01F4      		brne .L257
 6147               	.L256:
 682:lp_solve_5.5/lp_utils.c ****     return( TRUE );
 6148               		.loc 2 682 0
 6149 2538 81E0      		ldi r24,lo8(1)
 6150 253a 00C0      		rjmp .L258
 6151               	.L257:
 683:lp_solve_5.5/lp_utils.c ****   else
 684:lp_solve_5.5/lp_utils.c ****     return( FALSE );
 6152               		.loc 2 684 0
 6153 253c 80E0      		ldi r24,0
 6154               	.L258:
 6155               	/* epilogue start */
 685:lp_solve_5.5/lp_utils.c **** }
 6156               		.loc 2 685 0
 6157 253e 0F90      		pop __tmp_reg__
 6158 2540 0F90      		pop __tmp_reg__
 6159 2542 0F90      		pop __tmp_reg__
 6160 2544 0F90      		pop __tmp_reg__
 6161 2546 DF91      		pop r29
 6162 2548 CF91      		pop r28
 6163 254a 0895      		ret
 6164               		.cfi_endproc
 6165               	.LFE39:
 6167               	.global	countActiveLink
 6169               	countActiveLink:
 6170               	.LFB40:
 686:lp_solve_5.5/lp_utils.c **** 
 687:lp_solve_5.5/lp_utils.c **** STATIC int countActiveLink(LLrec *linkmap)
 688:lp_solve_5.5/lp_utils.c **** {
 6171               		.loc 2 688 0
 6172               		.cfi_startproc
 6173 254c CF93      		push r28
 6174               	.LCFI161:
 6175               		.cfi_def_cfa_offset 3
 6176               		.cfi_offset 28, -2
 6177 254e DF93      		push r29
 6178               	.LCFI162:
 6179               		.cfi_def_cfa_offset 4
 6180               		.cfi_offset 29, -3
 6181 2550 00D0      		rcall .
 6182               	.LCFI163:
 6183               		.cfi_def_cfa_offset 6
 6184 2552 CDB7      		in r28,__SP_L__
 6185 2554 DEB7      		in r29,__SP_H__
 6186               	.LCFI164:
 6187               		.cfi_def_cfa_register 28
 6188               	/* prologue: function */
 6189               	/* frame size = 2 */
 6190               	/* stack size = 4 */
 6191               	.L__stack_usage = 4
 6192 2556 9A83      		std Y+2,r25
 6193 2558 8983      		std Y+1,r24
 689:lp_solve_5.5/lp_utils.c ****   return(linkmap->count);
 6194               		.loc 2 689 0
 6195 255a 8981      		ldd r24,Y+1
 6196 255c 9A81      		ldd r25,Y+2
 6197 255e FC01      		movw r30,r24
 6198 2560 8281      		ldd r24,Z+2
 6199 2562 9381      		ldd r25,Z+3
 6200               	/* epilogue start */
 690:lp_solve_5.5/lp_utils.c **** }
 6201               		.loc 2 690 0
 6202 2564 0F90      		pop __tmp_reg__
 6203 2566 0F90      		pop __tmp_reg__
 6204 2568 DF91      		pop r29
 6205 256a CF91      		pop r28
 6206 256c 0895      		ret
 6207               		.cfi_endproc
 6208               	.LFE40:
 6210               	.global	countInactiveLink
 6212               	countInactiveLink:
 6213               	.LFB41:
 691:lp_solve_5.5/lp_utils.c **** 
 692:lp_solve_5.5/lp_utils.c **** STATIC int countInactiveLink(LLrec *linkmap)
 693:lp_solve_5.5/lp_utils.c **** {
 6214               		.loc 2 693 0
 6215               		.cfi_startproc
 6216 256e CF93      		push r28
 6217               	.LCFI165:
 6218               		.cfi_def_cfa_offset 3
 6219               		.cfi_offset 28, -2
 6220 2570 DF93      		push r29
 6221               	.LCFI166:
 6222               		.cfi_def_cfa_offset 4
 6223               		.cfi_offset 29, -3
 6224 2572 00D0      		rcall .
 6225               	.LCFI167:
 6226               		.cfi_def_cfa_offset 6
 6227 2574 CDB7      		in r28,__SP_L__
 6228 2576 DEB7      		in r29,__SP_H__
 6229               	.LCFI168:
 6230               		.cfi_def_cfa_register 28
 6231               	/* prologue: function */
 6232               	/* frame size = 2 */
 6233               	/* stack size = 4 */
 6234               	.L__stack_usage = 4
 6235 2578 9A83      		std Y+2,r25
 6236 257a 8983      		std Y+1,r24
 694:lp_solve_5.5/lp_utils.c ****   return(linkmap->size-linkmap->count);
 6237               		.loc 2 694 0
 6238 257c 8981      		ldd r24,Y+1
 6239 257e 9A81      		ldd r25,Y+2
 6240 2580 FC01      		movw r30,r24
 6241 2582 2081      		ld r18,Z
 6242 2584 3181      		ldd r19,Z+1
 6243 2586 8981      		ldd r24,Y+1
 6244 2588 9A81      		ldd r25,Y+2
 6245 258a FC01      		movw r30,r24
 6246 258c 8281      		ldd r24,Z+2
 6247 258e 9381      		ldd r25,Z+3
 6248 2590 A901      		movw r20,r18
 6249 2592 481B      		sub r20,r24
 6250 2594 590B      		sbc r21,r25
 6251 2596 CA01      		movw r24,r20
 6252               	/* epilogue start */
 695:lp_solve_5.5/lp_utils.c **** }
 6253               		.loc 2 695 0
 6254 2598 0F90      		pop __tmp_reg__
 6255 259a 0F90      		pop __tmp_reg__
 6256 259c DF91      		pop r29
 6257 259e CF91      		pop r28
 6258 25a0 0895      		ret
 6259               		.cfi_endproc
 6260               	.LFE41:
 6262               	.global	firstActiveLink
 6264               	firstActiveLink:
 6265               	.LFB42:
 696:lp_solve_5.5/lp_utils.c **** 
 697:lp_solve_5.5/lp_utils.c **** STATIC int firstActiveLink(LLrec *linkmap)
 698:lp_solve_5.5/lp_utils.c **** {
 6266               		.loc 2 698 0
 6267               		.cfi_startproc
 6268 25a2 CF93      		push r28
 6269               	.LCFI169:
 6270               		.cfi_def_cfa_offset 3
 6271               		.cfi_offset 28, -2
 6272 25a4 DF93      		push r29
 6273               	.LCFI170:
 6274               		.cfi_def_cfa_offset 4
 6275               		.cfi_offset 29, -3
 6276 25a6 00D0      		rcall .
 6277               	.LCFI171:
 6278               		.cfi_def_cfa_offset 6
 6279 25a8 CDB7      		in r28,__SP_L__
 6280 25aa DEB7      		in r29,__SP_H__
 6281               	.LCFI172:
 6282               		.cfi_def_cfa_register 28
 6283               	/* prologue: function */
 6284               	/* frame size = 2 */
 6285               	/* stack size = 4 */
 6286               	.L__stack_usage = 4
 6287 25ac 9A83      		std Y+2,r25
 6288 25ae 8983      		std Y+1,r24
 699:lp_solve_5.5/lp_utils.c ****   return(linkmap->map[0]);
 6289               		.loc 2 699 0
 6290 25b0 8981      		ldd r24,Y+1
 6291 25b2 9A81      		ldd r25,Y+2
 6292 25b4 FC01      		movw r30,r24
 6293 25b6 8085      		ldd r24,Z+8
 6294 25b8 9185      		ldd r25,Z+9
 6295 25ba FC01      		movw r30,r24
 6296 25bc 8081      		ld r24,Z
 6297 25be 9181      		ldd r25,Z+1
 6298               	/* epilogue start */
 700:lp_solve_5.5/lp_utils.c **** }
 6299               		.loc 2 700 0
 6300 25c0 0F90      		pop __tmp_reg__
 6301 25c2 0F90      		pop __tmp_reg__
 6302 25c4 DF91      		pop r29
 6303 25c6 CF91      		pop r28
 6304 25c8 0895      		ret
 6305               		.cfi_endproc
 6306               	.LFE42:
 6308               	.global	lastActiveLink
 6310               	lastActiveLink:
 6311               	.LFB43:
 701:lp_solve_5.5/lp_utils.c **** 
 702:lp_solve_5.5/lp_utils.c **** STATIC int lastActiveLink(LLrec *linkmap)
 703:lp_solve_5.5/lp_utils.c **** {
 6312               		.loc 2 703 0
 6313               		.cfi_startproc
 6314 25ca CF93      		push r28
 6315               	.LCFI173:
 6316               		.cfi_def_cfa_offset 3
 6317               		.cfi_offset 28, -2
 6318 25cc DF93      		push r29
 6319               	.LCFI174:
 6320               		.cfi_def_cfa_offset 4
 6321               		.cfi_offset 29, -3
 6322 25ce 00D0      		rcall .
 6323               	.LCFI175:
 6324               		.cfi_def_cfa_offset 6
 6325 25d0 CDB7      		in r28,__SP_L__
 6326 25d2 DEB7      		in r29,__SP_H__
 6327               	.LCFI176:
 6328               		.cfi_def_cfa_register 28
 6329               	/* prologue: function */
 6330               	/* frame size = 2 */
 6331               	/* stack size = 4 */
 6332               	.L__stack_usage = 4
 6333 25d4 9A83      		std Y+2,r25
 6334 25d6 8983      		std Y+1,r24
 704:lp_solve_5.5/lp_utils.c ****   return(linkmap->map[2*linkmap->size+1]);
 6335               		.loc 2 704 0
 6336 25d8 8981      		ldd r24,Y+1
 6337 25da 9A81      		ldd r25,Y+2
 6338 25dc FC01      		movw r30,r24
 6339 25de 2085      		ldd r18,Z+8
 6340 25e0 3185      		ldd r19,Z+9
 6341 25e2 8981      		ldd r24,Y+1
 6342 25e4 9A81      		ldd r25,Y+2
 6343 25e6 FC01      		movw r30,r24
 6344 25e8 8081      		ld r24,Z
 6345 25ea 9181      		ldd r25,Z+1
 6346 25ec 880F      		lsl r24
 6347 25ee 991F      		rol r25
 6348 25f0 880F      		lsl r24
 6349 25f2 991F      		rol r25
 6350 25f4 0296      		adiw r24,2
 6351 25f6 820F      		add r24,r18
 6352 25f8 931F      		adc r25,r19
 6353 25fa FC01      		movw r30,r24
 6354 25fc 8081      		ld r24,Z
 6355 25fe 9181      		ldd r25,Z+1
 6356               	/* epilogue start */
 705:lp_solve_5.5/lp_utils.c **** }
 6357               		.loc 2 705 0
 6358 2600 0F90      		pop __tmp_reg__
 6359 2602 0F90      		pop __tmp_reg__
 6360 2604 DF91      		pop r29
 6361 2606 CF91      		pop r28
 6362 2608 0895      		ret
 6363               		.cfi_endproc
 6364               	.LFE43:
 6366               	.global	appendLink
 6368               	appendLink:
 6369               	.LFB44:
 706:lp_solve_5.5/lp_utils.c **** 
 707:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL appendLink(LLrec *linkmap, int newitem)
 708:lp_solve_5.5/lp_utils.c **** {
 6370               		.loc 2 708 0
 6371               		.cfi_startproc
 6372 260a CF93      		push r28
 6373               	.LCFI177:
 6374               		.cfi_def_cfa_offset 3
 6375               		.cfi_offset 28, -2
 6376 260c DF93      		push r29
 6377               	.LCFI178:
 6378               		.cfi_def_cfa_offset 4
 6379               		.cfi_offset 29, -3
 6380 260e CDB7      		in r28,__SP_L__
 6381 2610 DEB7      		in r29,__SP_H__
 6382               	.LCFI179:
 6383               		.cfi_def_cfa_register 28
 6384 2612 2897      		sbiw r28,8
 6385               	.LCFI180:
 6386               		.cfi_def_cfa_offset 12
 6387 2614 0FB6      		in __tmp_reg__,__SREG__
 6388 2616 F894      		cli
 6389 2618 DEBF      		out __SP_H__,r29
 6390 261a 0FBE      		out __SREG__,__tmp_reg__
 6391 261c CDBF      		out __SP_L__,r28
 6392               	/* prologue: function */
 6393               	/* frame size = 8 */
 6394               	/* stack size = 10 */
 6395               	.L__stack_usage = 10
 6396 261e 9E83      		std Y+6,r25
 6397 2620 8D83      		std Y+5,r24
 6398 2622 7887      		std Y+8,r23
 6399 2624 6F83      		std Y+7,r22
 709:lp_solve_5.5/lp_utils.c ****   int k, size;
 710:lp_solve_5.5/lp_utils.c ****   size = linkmap->size;
 6400               		.loc 2 710 0
 6401 2626 8D81      		ldd r24,Y+5
 6402 2628 9E81      		ldd r25,Y+6
 6403 262a FC01      		movw r30,r24
 6404 262c 8081      		ld r24,Z
 6405 262e 9181      		ldd r25,Z+1
 6406 2630 9A83      		std Y+2,r25
 6407 2632 8983      		std Y+1,r24
 711:lp_solve_5.5/lp_utils.c **** 
 712:lp_solve_5.5/lp_utils.c ****   if(linkmap->map[newitem] != 0)
 6408               		.loc 2 712 0
 6409 2634 8D81      		ldd r24,Y+5
 6410 2636 9E81      		ldd r25,Y+6
 6411 2638 FC01      		movw r30,r24
 6412 263a 2085      		ldd r18,Z+8
 6413 263c 3185      		ldd r19,Z+9
 6414 263e 8F81      		ldd r24,Y+7
 6415 2640 9885      		ldd r25,Y+8
 6416 2642 880F      		lsl r24
 6417 2644 991F      		rol r25
 6418 2646 820F      		add r24,r18
 6419 2648 931F      		adc r25,r19
 6420 264a FC01      		movw r30,r24
 6421 264c 8081      		ld r24,Z
 6422 264e 9181      		ldd r25,Z+1
 6423 2650 892B      		or r24,r25
 6424 2652 01F0      		breq .L268
 713:lp_solve_5.5/lp_utils.c ****     return( FALSE );
 6425               		.loc 2 713 0
 6426 2654 80E0      		ldi r24,0
 6427 2656 00C0      		rjmp .L269
 6428               	.L268:
 714:lp_solve_5.5/lp_utils.c **** 
 715:lp_solve_5.5/lp_utils.c ****   /* Link forward */
 716:lp_solve_5.5/lp_utils.c ****   k = linkmap->map[2*size+1];
 6429               		.loc 2 716 0
 6430 2658 8D81      		ldd r24,Y+5
 6431 265a 9E81      		ldd r25,Y+6
 6432 265c FC01      		movw r30,r24
 6433 265e 2085      		ldd r18,Z+8
 6434 2660 3185      		ldd r19,Z+9
 6435 2662 8981      		ldd r24,Y+1
 6436 2664 9A81      		ldd r25,Y+2
 6437 2666 880F      		lsl r24
 6438 2668 991F      		rol r25
 6439 266a 880F      		lsl r24
 6440 266c 991F      		rol r25
 6441 266e 0296      		adiw r24,2
 6442 2670 820F      		add r24,r18
 6443 2672 931F      		adc r25,r19
 6444 2674 FC01      		movw r30,r24
 6445 2676 8081      		ld r24,Z
 6446 2678 9181      		ldd r25,Z+1
 6447 267a 9C83      		std Y+4,r25
 6448 267c 8B83      		std Y+3,r24
 717:lp_solve_5.5/lp_utils.c ****   linkmap->map[k] = newitem;
 6449               		.loc 2 717 0
 6450 267e 8D81      		ldd r24,Y+5
 6451 2680 9E81      		ldd r25,Y+6
 6452 2682 FC01      		movw r30,r24
 6453 2684 2085      		ldd r18,Z+8
 6454 2686 3185      		ldd r19,Z+9
 6455 2688 8B81      		ldd r24,Y+3
 6456 268a 9C81      		ldd r25,Y+4
 6457 268c 880F      		lsl r24
 6458 268e 991F      		rol r25
 6459 2690 820F      		add r24,r18
 6460 2692 931F      		adc r25,r19
 6461 2694 2F81      		ldd r18,Y+7
 6462 2696 3885      		ldd r19,Y+8
 6463 2698 FC01      		movw r30,r24
 6464 269a 3183      		std Z+1,r19
 6465 269c 2083      		st Z,r18
 718:lp_solve_5.5/lp_utils.c **** 
 719:lp_solve_5.5/lp_utils.c ****   /* Link backward */
 720:lp_solve_5.5/lp_utils.c ****   linkmap->map[size+newitem] = k;
 6466               		.loc 2 720 0
 6467 269e 8D81      		ldd r24,Y+5
 6468 26a0 9E81      		ldd r25,Y+6
 6469 26a2 FC01      		movw r30,r24
 6470 26a4 2085      		ldd r18,Z+8
 6471 26a6 3185      		ldd r19,Z+9
 6472 26a8 4981      		ldd r20,Y+1
 6473 26aa 5A81      		ldd r21,Y+2
 6474 26ac 8F81      		ldd r24,Y+7
 6475 26ae 9885      		ldd r25,Y+8
 6476 26b0 840F      		add r24,r20
 6477 26b2 951F      		adc r25,r21
 6478 26b4 880F      		lsl r24
 6479 26b6 991F      		rol r25
 6480 26b8 820F      		add r24,r18
 6481 26ba 931F      		adc r25,r19
 6482 26bc 2B81      		ldd r18,Y+3
 6483 26be 3C81      		ldd r19,Y+4
 6484 26c0 FC01      		movw r30,r24
 6485 26c2 3183      		std Z+1,r19
 6486 26c4 2083      		st Z,r18
 721:lp_solve_5.5/lp_utils.c ****   linkmap->map[2*size+1] = newitem;
 6487               		.loc 2 721 0
 6488 26c6 8D81      		ldd r24,Y+5
 6489 26c8 9E81      		ldd r25,Y+6
 6490 26ca FC01      		movw r30,r24
 6491 26cc 2085      		ldd r18,Z+8
 6492 26ce 3185      		ldd r19,Z+9
 6493 26d0 8981      		ldd r24,Y+1
 6494 26d2 9A81      		ldd r25,Y+2
 6495 26d4 880F      		lsl r24
 6496 26d6 991F      		rol r25
 6497 26d8 880F      		lsl r24
 6498 26da 991F      		rol r25
 6499 26dc 0296      		adiw r24,2
 6500 26de 820F      		add r24,r18
 6501 26e0 931F      		adc r25,r19
 6502 26e2 2F81      		ldd r18,Y+7
 6503 26e4 3885      		ldd r19,Y+8
 6504 26e6 FC01      		movw r30,r24
 6505 26e8 3183      		std Z+1,r19
 6506 26ea 2083      		st Z,r18
 722:lp_solve_5.5/lp_utils.c **** 
 723:lp_solve_5.5/lp_utils.c ****   /* Update count and return */
 724:lp_solve_5.5/lp_utils.c ****   if(linkmap->count == 0)
 6507               		.loc 2 724 0
 6508 26ec 8D81      		ldd r24,Y+5
 6509 26ee 9E81      		ldd r25,Y+6
 6510 26f0 FC01      		movw r30,r24
 6511 26f2 8281      		ldd r24,Z+2
 6512 26f4 9381      		ldd r25,Z+3
 6513 26f6 892B      		or r24,r25
 6514 26f8 01F4      		brne .L270
 725:lp_solve_5.5/lp_utils.c ****     linkmap->firstitem = newitem;
 6515               		.loc 2 725 0
 6516 26fa 8D81      		ldd r24,Y+5
 6517 26fc 9E81      		ldd r25,Y+6
 6518 26fe 2F81      		ldd r18,Y+7
 6519 2700 3885      		ldd r19,Y+8
 6520 2702 FC01      		movw r30,r24
 6521 2704 3583      		std Z+5,r19
 6522 2706 2483      		std Z+4,r18
 6523               	.L270:
 726:lp_solve_5.5/lp_utils.c ****   linkmap->lastitem = newitem;
 6524               		.loc 2 726 0
 6525 2708 8D81      		ldd r24,Y+5
 6526 270a 9E81      		ldd r25,Y+6
 6527 270c 2F81      		ldd r18,Y+7
 6528 270e 3885      		ldd r19,Y+8
 6529 2710 FC01      		movw r30,r24
 6530 2712 3783      		std Z+7,r19
 6531 2714 2683      		std Z+6,r18
 727:lp_solve_5.5/lp_utils.c ****   linkmap->count++;
 6532               		.loc 2 727 0
 6533 2716 8D81      		ldd r24,Y+5
 6534 2718 9E81      		ldd r25,Y+6
 6535 271a FC01      		movw r30,r24
 6536 271c 8281      		ldd r24,Z+2
 6537 271e 9381      		ldd r25,Z+3
 6538 2720 9C01      		movw r18,r24
 6539 2722 2F5F      		subi r18,-1
 6540 2724 3F4F      		sbci r19,-1
 6541 2726 8D81      		ldd r24,Y+5
 6542 2728 9E81      		ldd r25,Y+6
 6543 272a FC01      		movw r30,r24
 6544 272c 3383      		std Z+3,r19
 6545 272e 2283      		std Z+2,r18
 728:lp_solve_5.5/lp_utils.c **** 
 729:lp_solve_5.5/lp_utils.c ****   return( TRUE );
 6546               		.loc 2 729 0
 6547 2730 81E0      		ldi r24,lo8(1)
 6548               	.L269:
 6549               	/* epilogue start */
 730:lp_solve_5.5/lp_utils.c **** }
 6550               		.loc 2 730 0
 6551 2732 2896      		adiw r28,8
 6552 2734 0FB6      		in __tmp_reg__,__SREG__
 6553 2736 F894      		cli
 6554 2738 DEBF      		out __SP_H__,r29
 6555 273a 0FBE      		out __SREG__,__tmp_reg__
 6556 273c CDBF      		out __SP_L__,r28
 6557 273e DF91      		pop r29
 6558 2740 CF91      		pop r28
 6559 2742 0895      		ret
 6560               		.cfi_endproc
 6561               	.LFE44:
 6563               	.global	insertLink
 6565               	insertLink:
 6566               	.LFB45:
 731:lp_solve_5.5/lp_utils.c **** 
 732:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL insertLink(LLrec *linkmap, int afteritem, int newitem)
 733:lp_solve_5.5/lp_utils.c **** {
 6567               		.loc 2 733 0
 6568               		.cfi_startproc
 6569 2744 CF93      		push r28
 6570               	.LCFI181:
 6571               		.cfi_def_cfa_offset 3
 6572               		.cfi_offset 28, -2
 6573 2746 DF93      		push r29
 6574               	.LCFI182:
 6575               		.cfi_def_cfa_offset 4
 6576               		.cfi_offset 29, -3
 6577 2748 CDB7      		in r28,__SP_L__
 6578 274a DEB7      		in r29,__SP_H__
 6579               	.LCFI183:
 6580               		.cfi_def_cfa_register 28
 6581 274c 2A97      		sbiw r28,10
 6582               	.LCFI184:
 6583               		.cfi_def_cfa_offset 14
 6584 274e 0FB6      		in __tmp_reg__,__SREG__
 6585 2750 F894      		cli
 6586 2752 DEBF      		out __SP_H__,r29
 6587 2754 0FBE      		out __SREG__,__tmp_reg__
 6588 2756 CDBF      		out __SP_L__,r28
 6589               	/* prologue: function */
 6590               	/* frame size = 10 */
 6591               	/* stack size = 12 */
 6592               	.L__stack_usage = 12
 6593 2758 9E83      		std Y+6,r25
 6594 275a 8D83      		std Y+5,r24
 6595 275c 7887      		std Y+8,r23
 6596 275e 6F83      		std Y+7,r22
 6597 2760 5A87      		std Y+10,r21
 6598 2762 4987      		std Y+9,r20
 734:lp_solve_5.5/lp_utils.c ****   int k, size;
 735:lp_solve_5.5/lp_utils.c **** 
 736:lp_solve_5.5/lp_utils.c ****   size = linkmap->size;
 6599               		.loc 2 736 0
 6600 2764 8D81      		ldd r24,Y+5
 6601 2766 9E81      		ldd r25,Y+6
 6602 2768 FC01      		movw r30,r24
 6603 276a 8081      		ld r24,Z
 6604 276c 9181      		ldd r25,Z+1
 6605 276e 9A83      		std Y+2,r25
 6606 2770 8983      		std Y+1,r24
 737:lp_solve_5.5/lp_utils.c **** 
 738:lp_solve_5.5/lp_utils.c ****   if(linkmap->map[newitem] != 0)
 6607               		.loc 2 738 0
 6608 2772 8D81      		ldd r24,Y+5
 6609 2774 9E81      		ldd r25,Y+6
 6610 2776 FC01      		movw r30,r24
 6611 2778 2085      		ldd r18,Z+8
 6612 277a 3185      		ldd r19,Z+9
 6613 277c 8985      		ldd r24,Y+9
 6614 277e 9A85      		ldd r25,Y+10
 6615 2780 880F      		lsl r24
 6616 2782 991F      		rol r25
 6617 2784 820F      		add r24,r18
 6618 2786 931F      		adc r25,r19
 6619 2788 FC01      		movw r30,r24
 6620 278a 8081      		ld r24,Z
 6621 278c 9181      		ldd r25,Z+1
 6622 278e 892B      		or r24,r25
 6623 2790 01F0      		breq .L272
 739:lp_solve_5.5/lp_utils.c ****     return( FALSE );
 6624               		.loc 2 739 0
 6625 2792 80E0      		ldi r24,0
 6626 2794 00C0      		rjmp .L273
 6627               	.L272:
 740:lp_solve_5.5/lp_utils.c **** 
 741:lp_solve_5.5/lp_utils.c ****   if(afteritem == linkmap->map[2*size+1])
 6628               		.loc 2 741 0
 6629 2796 8D81      		ldd r24,Y+5
 6630 2798 9E81      		ldd r25,Y+6
 6631 279a FC01      		movw r30,r24
 6632 279c 2085      		ldd r18,Z+8
 6633 279e 3185      		ldd r19,Z+9
 6634 27a0 8981      		ldd r24,Y+1
 6635 27a2 9A81      		ldd r25,Y+2
 6636 27a4 880F      		lsl r24
 6637 27a6 991F      		rol r25
 6638 27a8 880F      		lsl r24
 6639 27aa 991F      		rol r25
 6640 27ac 0296      		adiw r24,2
 6641 27ae 820F      		add r24,r18
 6642 27b0 931F      		adc r25,r19
 6643 27b2 FC01      		movw r30,r24
 6644 27b4 2081      		ld r18,Z
 6645 27b6 3181      		ldd r19,Z+1
 6646 27b8 8F81      		ldd r24,Y+7
 6647 27ba 9885      		ldd r25,Y+8
 6648 27bc 2817      		cp r18,r24
 6649 27be 3907      		cpc r19,r25
 6650 27c0 01F4      		brne .L274
 742:lp_solve_5.5/lp_utils.c ****     appendLink(linkmap, newitem);
 6651               		.loc 2 742 0
 6652 27c2 2985      		ldd r18,Y+9
 6653 27c4 3A85      		ldd r19,Y+10
 6654 27c6 8D81      		ldd r24,Y+5
 6655 27c8 9E81      		ldd r25,Y+6
 6656 27ca B901      		movw r22,r18
 6657 27cc 0E94 0000 		call appendLink
 6658 27d0 00C0      		rjmp .L275
 6659               	.L274:
 743:lp_solve_5.5/lp_utils.c ****   else {
 744:lp_solve_5.5/lp_utils.c ****     /* Link forward */
 745:lp_solve_5.5/lp_utils.c ****     k = linkmap->map[afteritem];
 6660               		.loc 2 745 0
 6661 27d2 8D81      		ldd r24,Y+5
 6662 27d4 9E81      		ldd r25,Y+6
 6663 27d6 FC01      		movw r30,r24
 6664 27d8 2085      		ldd r18,Z+8
 6665 27da 3185      		ldd r19,Z+9
 6666 27dc 8F81      		ldd r24,Y+7
 6667 27de 9885      		ldd r25,Y+8
 6668 27e0 880F      		lsl r24
 6669 27e2 991F      		rol r25
 6670 27e4 820F      		add r24,r18
 6671 27e6 931F      		adc r25,r19
 6672 27e8 FC01      		movw r30,r24
 6673 27ea 8081      		ld r24,Z
 6674 27ec 9181      		ldd r25,Z+1
 6675 27ee 9C83      		std Y+4,r25
 6676 27f0 8B83      		std Y+3,r24
 746:lp_solve_5.5/lp_utils.c ****     linkmap->map[afteritem] = newitem;
 6677               		.loc 2 746 0
 6678 27f2 8D81      		ldd r24,Y+5
 6679 27f4 9E81      		ldd r25,Y+6
 6680 27f6 FC01      		movw r30,r24
 6681 27f8 2085      		ldd r18,Z+8
 6682 27fa 3185      		ldd r19,Z+9
 6683 27fc 8F81      		ldd r24,Y+7
 6684 27fe 9885      		ldd r25,Y+8
 6685 2800 880F      		lsl r24
 6686 2802 991F      		rol r25
 6687 2804 820F      		add r24,r18
 6688 2806 931F      		adc r25,r19
 6689 2808 2985      		ldd r18,Y+9
 6690 280a 3A85      		ldd r19,Y+10
 6691 280c FC01      		movw r30,r24
 6692 280e 3183      		std Z+1,r19
 6693 2810 2083      		st Z,r18
 747:lp_solve_5.5/lp_utils.c ****     linkmap->map[newitem] = k;
 6694               		.loc 2 747 0
 6695 2812 8D81      		ldd r24,Y+5
 6696 2814 9E81      		ldd r25,Y+6
 6697 2816 FC01      		movw r30,r24
 6698 2818 2085      		ldd r18,Z+8
 6699 281a 3185      		ldd r19,Z+9
 6700 281c 8985      		ldd r24,Y+9
 6701 281e 9A85      		ldd r25,Y+10
 6702 2820 880F      		lsl r24
 6703 2822 991F      		rol r25
 6704 2824 820F      		add r24,r18
 6705 2826 931F      		adc r25,r19
 6706 2828 2B81      		ldd r18,Y+3
 6707 282a 3C81      		ldd r19,Y+4
 6708 282c FC01      		movw r30,r24
 6709 282e 3183      		std Z+1,r19
 6710 2830 2083      		st Z,r18
 748:lp_solve_5.5/lp_utils.c **** 
 749:lp_solve_5.5/lp_utils.c ****     /* Link backward */
 750:lp_solve_5.5/lp_utils.c ****     linkmap->map[size+k] = newitem;
 6711               		.loc 2 750 0
 6712 2832 8D81      		ldd r24,Y+5
 6713 2834 9E81      		ldd r25,Y+6
 6714 2836 FC01      		movw r30,r24
 6715 2838 2085      		ldd r18,Z+8
 6716 283a 3185      		ldd r19,Z+9
 6717 283c 4981      		ldd r20,Y+1
 6718 283e 5A81      		ldd r21,Y+2
 6719 2840 8B81      		ldd r24,Y+3
 6720 2842 9C81      		ldd r25,Y+4
 6721 2844 840F      		add r24,r20
 6722 2846 951F      		adc r25,r21
 6723 2848 880F      		lsl r24
 6724 284a 991F      		rol r25
 6725 284c 820F      		add r24,r18
 6726 284e 931F      		adc r25,r19
 6727 2850 2985      		ldd r18,Y+9
 6728 2852 3A85      		ldd r19,Y+10
 6729 2854 FC01      		movw r30,r24
 6730 2856 3183      		std Z+1,r19
 6731 2858 2083      		st Z,r18
 751:lp_solve_5.5/lp_utils.c ****     linkmap->map[size+newitem] = afteritem;
 6732               		.loc 2 751 0
 6733 285a 8D81      		ldd r24,Y+5
 6734 285c 9E81      		ldd r25,Y+6
 6735 285e FC01      		movw r30,r24
 6736 2860 2085      		ldd r18,Z+8
 6737 2862 3185      		ldd r19,Z+9
 6738 2864 4981      		ldd r20,Y+1
 6739 2866 5A81      		ldd r21,Y+2
 6740 2868 8985      		ldd r24,Y+9
 6741 286a 9A85      		ldd r25,Y+10
 6742 286c 840F      		add r24,r20
 6743 286e 951F      		adc r25,r21
 6744 2870 880F      		lsl r24
 6745 2872 991F      		rol r25
 6746 2874 820F      		add r24,r18
 6747 2876 931F      		adc r25,r19
 6748 2878 2F81      		ldd r18,Y+7
 6749 287a 3885      		ldd r19,Y+8
 6750 287c FC01      		movw r30,r24
 6751 287e 3183      		std Z+1,r19
 6752 2880 2083      		st Z,r18
 752:lp_solve_5.5/lp_utils.c **** 
 753:lp_solve_5.5/lp_utils.c ****     /* Update count */
 754:lp_solve_5.5/lp_utils.c ****     SETMIN(linkmap->firstitem, newitem);
 6753               		.loc 2 754 0
 6754 2882 8D81      		ldd r24,Y+5
 6755 2884 9E81      		ldd r25,Y+6
 6756 2886 FC01      		movw r30,r24
 6757 2888 2481      		ldd r18,Z+4
 6758 288a 3581      		ldd r19,Z+5
 6759 288c 8985      		ldd r24,Y+9
 6760 288e 9A85      		ldd r25,Y+10
 6761 2890 8217      		cp r24,r18
 6762 2892 9307      		cpc r25,r19
 6763 2894 04F4      		brge .L276
 6764               		.loc 2 754 0 is_stmt 0 discriminator 1
 6765 2896 8D81      		ldd r24,Y+5
 6766 2898 9E81      		ldd r25,Y+6
 6767 289a 2985      		ldd r18,Y+9
 6768 289c 3A85      		ldd r19,Y+10
 6769 289e FC01      		movw r30,r24
 6770 28a0 3583      		std Z+5,r19
 6771 28a2 2483      		std Z+4,r18
 6772               	.L276:
 755:lp_solve_5.5/lp_utils.c ****     SETMAX(linkmap->lastitem, newitem);
 6773               		.loc 2 755 0 is_stmt 1
 6774 28a4 8D81      		ldd r24,Y+5
 6775 28a6 9E81      		ldd r25,Y+6
 6776 28a8 FC01      		movw r30,r24
 6777 28aa 2681      		ldd r18,Z+6
 6778 28ac 3781      		ldd r19,Z+7
 6779 28ae 8985      		ldd r24,Y+9
 6780 28b0 9A85      		ldd r25,Y+10
 6781 28b2 2817      		cp r18,r24
 6782 28b4 3907      		cpc r19,r25
 6783 28b6 04F4      		brge .L277
 6784               		.loc 2 755 0 is_stmt 0 discriminator 1
 6785 28b8 8D81      		ldd r24,Y+5
 6786 28ba 9E81      		ldd r25,Y+6
 6787 28bc 2985      		ldd r18,Y+9
 6788 28be 3A85      		ldd r19,Y+10
 6789 28c0 FC01      		movw r30,r24
 6790 28c2 3783      		std Z+7,r19
 6791 28c4 2683      		std Z+6,r18
 6792               	.L277:
 756:lp_solve_5.5/lp_utils.c ****     linkmap->count++;
 6793               		.loc 2 756 0 is_stmt 1
 6794 28c6 8D81      		ldd r24,Y+5
 6795 28c8 9E81      		ldd r25,Y+6
 6796 28ca FC01      		movw r30,r24
 6797 28cc 8281      		ldd r24,Z+2
 6798 28ce 9381      		ldd r25,Z+3
 6799 28d0 9C01      		movw r18,r24
 6800 28d2 2F5F      		subi r18,-1
 6801 28d4 3F4F      		sbci r19,-1
 6802 28d6 8D81      		ldd r24,Y+5
 6803 28d8 9E81      		ldd r25,Y+6
 6804 28da FC01      		movw r30,r24
 6805 28dc 3383      		std Z+3,r19
 6806 28de 2283      		std Z+2,r18
 6807               	.L275:
 757:lp_solve_5.5/lp_utils.c ****   }
 758:lp_solve_5.5/lp_utils.c **** 
 759:lp_solve_5.5/lp_utils.c ****   return( TRUE );
 6808               		.loc 2 759 0
 6809 28e0 81E0      		ldi r24,lo8(1)
 6810               	.L273:
 6811               	/* epilogue start */
 760:lp_solve_5.5/lp_utils.c **** }
 6812               		.loc 2 760 0
 6813 28e2 2A96      		adiw r28,10
 6814 28e4 0FB6      		in __tmp_reg__,__SREG__
 6815 28e6 F894      		cli
 6816 28e8 DEBF      		out __SP_H__,r29
 6817 28ea 0FBE      		out __SREG__,__tmp_reg__
 6818 28ec CDBF      		out __SP_L__,r28
 6819 28ee DF91      		pop r29
 6820 28f0 CF91      		pop r28
 6821 28f2 0895      		ret
 6822               		.cfi_endproc
 6823               	.LFE45:
 6825               	.global	setLink
 6827               	setLink:
 6828               	.LFB46:
 761:lp_solve_5.5/lp_utils.c **** 
 762:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL setLink(LLrec *linkmap, int newitem)
 763:lp_solve_5.5/lp_utils.c **** {
 6829               		.loc 2 763 0
 6830               		.cfi_startproc
 6831 28f4 CF93      		push r28
 6832               	.LCFI185:
 6833               		.cfi_def_cfa_offset 3
 6834               		.cfi_offset 28, -2
 6835 28f6 DF93      		push r29
 6836               	.LCFI186:
 6837               		.cfi_def_cfa_offset 4
 6838               		.cfi_offset 29, -3
 6839 28f8 00D0      		rcall .
 6840 28fa 00D0      		rcall .
 6841               	.LCFI187:
 6842               		.cfi_def_cfa_offset 8
 6843 28fc CDB7      		in r28,__SP_L__
 6844 28fe DEB7      		in r29,__SP_H__
 6845               	.LCFI188:
 6846               		.cfi_def_cfa_register 28
 6847               	/* prologue: function */
 6848               	/* frame size = 4 */
 6849               	/* stack size = 6 */
 6850               	.L__stack_usage = 6
 6851 2900 9A83      		std Y+2,r25
 6852 2902 8983      		std Y+1,r24
 6853 2904 7C83      		std Y+4,r23
 6854 2906 6B83      		std Y+3,r22
 764:lp_solve_5.5/lp_utils.c ****   if(isActiveLink(linkmap, newitem))
 6855               		.loc 2 764 0
 6856 2908 2B81      		ldd r18,Y+3
 6857 290a 3C81      		ldd r19,Y+4
 6858 290c 8981      		ldd r24,Y+1
 6859 290e 9A81      		ldd r25,Y+2
 6860 2910 B901      		movw r22,r18
 6861 2912 0E94 0000 		call isActiveLink
 6862 2916 8823      		tst r24
 6863 2918 01F0      		breq .L279
 765:lp_solve_5.5/lp_utils.c ****     return( FALSE );
 6864               		.loc 2 765 0
 6865 291a 80E0      		ldi r24,0
 6866 291c 00C0      		rjmp .L280
 6867               	.L279:
 766:lp_solve_5.5/lp_utils.c ****   else
 767:lp_solve_5.5/lp_utils.c ****     return( insertLink(linkmap, prevActiveLink(linkmap, newitem), newitem) );
 6868               		.loc 2 767 0
 6869 291e 2B81      		ldd r18,Y+3
 6870 2920 3C81      		ldd r19,Y+4
 6871 2922 8981      		ldd r24,Y+1
 6872 2924 9A81      		ldd r25,Y+2
 6873 2926 B901      		movw r22,r18
 6874 2928 0E94 0000 		call prevActiveLink
 6875 292c BC01      		movw r22,r24
 6876 292e 2B81      		ldd r18,Y+3
 6877 2930 3C81      		ldd r19,Y+4
 6878 2932 8981      		ldd r24,Y+1
 6879 2934 9A81      		ldd r25,Y+2
 6880 2936 A901      		movw r20,r18
 6881 2938 0E94 0000 		call insertLink
 6882               	.L280:
 6883               	/* epilogue start */
 768:lp_solve_5.5/lp_utils.c **** }
 6884               		.loc 2 768 0
 6885 293c 0F90      		pop __tmp_reg__
 6886 293e 0F90      		pop __tmp_reg__
 6887 2940 0F90      		pop __tmp_reg__
 6888 2942 0F90      		pop __tmp_reg__
 6889 2944 DF91      		pop r29
 6890 2946 CF91      		pop r28
 6891 2948 0895      		ret
 6892               		.cfi_endproc
 6893               	.LFE46:
 6895               	.global	fillLink
 6897               	fillLink:
 6898               	.LFB47:
 769:lp_solve_5.5/lp_utils.c **** 
 770:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL fillLink(LLrec *linkmap)
 771:lp_solve_5.5/lp_utils.c **** {
 6899               		.loc 2 771 0
 6900               		.cfi_startproc
 6901 294a CF93      		push r28
 6902               	.LCFI189:
 6903               		.cfi_def_cfa_offset 3
 6904               		.cfi_offset 28, -2
 6905 294c DF93      		push r29
 6906               	.LCFI190:
 6907               		.cfi_def_cfa_offset 4
 6908               		.cfi_offset 29, -3
 6909 294e 00D0      		rcall .
 6910 2950 00D0      		rcall .
 6911 2952 00D0      		rcall .
 6912               	.LCFI191:
 6913               		.cfi_def_cfa_offset 10
 6914 2954 CDB7      		in r28,__SP_L__
 6915 2956 DEB7      		in r29,__SP_H__
 6916               	.LCFI192:
 6917               		.cfi_def_cfa_register 28
 6918               	/* prologue: function */
 6919               	/* frame size = 6 */
 6920               	/* stack size = 8 */
 6921               	.L__stack_usage = 8
 6922 2958 9E83      		std Y+6,r25
 6923 295a 8D83      		std Y+5,r24
 772:lp_solve_5.5/lp_utils.c ****   int k, size;
 773:lp_solve_5.5/lp_utils.c ****   size = linkmap->size;
 6924               		.loc 2 773 0
 6925 295c 8D81      		ldd r24,Y+5
 6926 295e 9E81      		ldd r25,Y+6
 6927 2960 FC01      		movw r30,r24
 6928 2962 8081      		ld r24,Z
 6929 2964 9181      		ldd r25,Z+1
 6930 2966 9C83      		std Y+4,r25
 6931 2968 8B83      		std Y+3,r24
 774:lp_solve_5.5/lp_utils.c **** 
 775:lp_solve_5.5/lp_utils.c ****   k = firstActiveLink(linkmap);
 6932               		.loc 2 775 0
 6933 296a 8D81      		ldd r24,Y+5
 6934 296c 9E81      		ldd r25,Y+6
 6935 296e 0E94 0000 		call firstActiveLink
 6936 2972 9A83      		std Y+2,r25
 6937 2974 8983      		std Y+1,r24
 776:lp_solve_5.5/lp_utils.c ****   if(k != 0)
 6938               		.loc 2 776 0
 6939 2976 8981      		ldd r24,Y+1
 6940 2978 9A81      		ldd r25,Y+2
 6941 297a 892B      		or r24,r25
 6942 297c 01F0      		breq .L282
 777:lp_solve_5.5/lp_utils.c ****     return( FALSE );
 6943               		.loc 2 777 0
 6944 297e 80E0      		ldi r24,0
 6945 2980 00C0      		rjmp .L283
 6946               	.L282:
 778:lp_solve_5.5/lp_utils.c ****   for(k = 1; k <= size; k++)
 6947               		.loc 2 778 0
 6948 2982 81E0      		ldi r24,lo8(1)
 6949 2984 90E0      		ldi r25,0
 6950 2986 9A83      		std Y+2,r25
 6951 2988 8983      		std Y+1,r24
 6952 298a 00C0      		rjmp .L284
 6953               	.L285:
 779:lp_solve_5.5/lp_utils.c ****     appendLink(linkmap, k);
 6954               		.loc 2 779 0 discriminator 3
 6955 298c 2981      		ldd r18,Y+1
 6956 298e 3A81      		ldd r19,Y+2
 6957 2990 8D81      		ldd r24,Y+5
 6958 2992 9E81      		ldd r25,Y+6
 6959 2994 B901      		movw r22,r18
 6960 2996 0E94 0000 		call appendLink
 778:lp_solve_5.5/lp_utils.c ****   for(k = 1; k <= size; k++)
 6961               		.loc 2 778 0 discriminator 3
 6962 299a 8981      		ldd r24,Y+1
 6963 299c 9A81      		ldd r25,Y+2
 6964 299e 0196      		adiw r24,1
 6965 29a0 9A83      		std Y+2,r25
 6966 29a2 8983      		std Y+1,r24
 6967               	.L284:
 778:lp_solve_5.5/lp_utils.c ****   for(k = 1; k <= size; k++)
 6968               		.loc 2 778 0 is_stmt 0 discriminator 1
 6969 29a4 2981      		ldd r18,Y+1
 6970 29a6 3A81      		ldd r19,Y+2
 6971 29a8 8B81      		ldd r24,Y+3
 6972 29aa 9C81      		ldd r25,Y+4
 6973 29ac 8217      		cp r24,r18
 6974 29ae 9307      		cpc r25,r19
 6975 29b0 04F4      		brge .L285
 780:lp_solve_5.5/lp_utils.c ****   return( TRUE );
 6976               		.loc 2 780 0 is_stmt 1
 6977 29b2 81E0      		ldi r24,lo8(1)
 6978               	.L283:
 6979               	/* epilogue start */
 781:lp_solve_5.5/lp_utils.c **** }
 6980               		.loc 2 781 0
 6981 29b4 2696      		adiw r28,6
 6982 29b6 0FB6      		in __tmp_reg__,__SREG__
 6983 29b8 F894      		cli
 6984 29ba DEBF      		out __SP_H__,r29
 6985 29bc 0FBE      		out __SREG__,__tmp_reg__
 6986 29be CDBF      		out __SP_L__,r28
 6987 29c0 DF91      		pop r29
 6988 29c2 CF91      		pop r28
 6989 29c4 0895      		ret
 6990               		.cfi_endproc
 6991               	.LFE47:
 6993               	.global	nextActiveLink
 6995               	nextActiveLink:
 6996               	.LFB48:
 782:lp_solve_5.5/lp_utils.c **** 
 783:lp_solve_5.5/lp_utils.c **** STATIC int nextActiveLink(LLrec *linkmap, int backitemnr)
 784:lp_solve_5.5/lp_utils.c **** {
 6997               		.loc 2 784 0
 6998               		.cfi_startproc
 6999 29c6 CF93      		push r28
 7000               	.LCFI193:
 7001               		.cfi_def_cfa_offset 3
 7002               		.cfi_offset 28, -2
 7003 29c8 DF93      		push r29
 7004               	.LCFI194:
 7005               		.cfi_def_cfa_offset 4
 7006               		.cfi_offset 29, -3
 7007 29ca 00D0      		rcall .
 7008 29cc 00D0      		rcall .
 7009               	.LCFI195:
 7010               		.cfi_def_cfa_offset 8
 7011 29ce CDB7      		in r28,__SP_L__
 7012 29d0 DEB7      		in r29,__SP_H__
 7013               	.LCFI196:
 7014               		.cfi_def_cfa_register 28
 7015               	/* prologue: function */
 7016               	/* frame size = 4 */
 7017               	/* stack size = 6 */
 7018               	.L__stack_usage = 6
 7019 29d2 9A83      		std Y+2,r25
 7020 29d4 8983      		std Y+1,r24
 7021 29d6 7C83      		std Y+4,r23
 7022 29d8 6B83      		std Y+3,r22
 785:lp_solve_5.5/lp_utils.c ****   if((backitemnr < 0) || (backitemnr > linkmap->size))
 7023               		.loc 2 785 0
 7024 29da 8B81      		ldd r24,Y+3
 7025 29dc 9C81      		ldd r25,Y+4
 7026 29de 9923      		tst r25
 7027 29e0 04F0      		brlt .L287
 7028               		.loc 2 785 0 is_stmt 0 discriminator 1
 7029 29e2 8981      		ldd r24,Y+1
 7030 29e4 9A81      		ldd r25,Y+2
 7031 29e6 FC01      		movw r30,r24
 7032 29e8 2081      		ld r18,Z
 7033 29ea 3181      		ldd r19,Z+1
 7034 29ec 8B81      		ldd r24,Y+3
 7035 29ee 9C81      		ldd r25,Y+4
 7036 29f0 2817      		cp r18,r24
 7037 29f2 3907      		cpc r19,r25
 7038 29f4 04F4      		brge .L288
 7039               	.L287:
 786:lp_solve_5.5/lp_utils.c ****     return( -1 );
 7040               		.loc 2 786 0 is_stmt 1
 7041 29f6 8FEF      		ldi r24,lo8(-1)
 7042 29f8 9FEF      		ldi r25,lo8(-1)
 7043 29fa 00C0      		rjmp .L289
 7044               	.L288:
 787:lp_solve_5.5/lp_utils.c ****   else {
 788:lp_solve_5.5/lp_utils.c ****     if(backitemnr < linkmap->lastitem)
 7045               		.loc 2 788 0
 7046 29fc 8981      		ldd r24,Y+1
 7047 29fe 9A81      		ldd r25,Y+2
 7048 2a00 FC01      		movw r30,r24
 7049 2a02 2681      		ldd r18,Z+6
 7050 2a04 3781      		ldd r19,Z+7
 7051 2a06 8B81      		ldd r24,Y+3
 7052 2a08 9C81      		ldd r25,Y+4
 7053 2a0a 8217      		cp r24,r18
 7054 2a0c 9307      		cpc r25,r19
 7055 2a0e 04F4      		brge .L290
 789:lp_solve_5.5/lp_utils.c ****     while((backitemnr > linkmap->firstitem) && (linkmap->map[backitemnr] == 0))
 7056               		.loc 2 789 0
 7057 2a10 00C0      		rjmp .L291
 7058               	.L292:
 790:lp_solve_5.5/lp_utils.c ****       backitemnr--;
 7059               		.loc 2 790 0
 7060 2a12 8B81      		ldd r24,Y+3
 7061 2a14 9C81      		ldd r25,Y+4
 7062 2a16 0197      		sbiw r24,1
 7063 2a18 9C83      		std Y+4,r25
 7064 2a1a 8B83      		std Y+3,r24
 7065               	.L291:
 789:lp_solve_5.5/lp_utils.c ****     while((backitemnr > linkmap->firstitem) && (linkmap->map[backitemnr] == 0))
 7066               		.loc 2 789 0
 7067 2a1c 8981      		ldd r24,Y+1
 7068 2a1e 9A81      		ldd r25,Y+2
 7069 2a20 FC01      		movw r30,r24
 7070 2a22 2481      		ldd r18,Z+4
 7071 2a24 3581      		ldd r19,Z+5
 7072 2a26 8B81      		ldd r24,Y+3
 7073 2a28 9C81      		ldd r25,Y+4
 7074 2a2a 2817      		cp r18,r24
 7075 2a2c 3907      		cpc r19,r25
 7076 2a2e 04F4      		brge .L290
 789:lp_solve_5.5/lp_utils.c ****     while((backitemnr > linkmap->firstitem) && (linkmap->map[backitemnr] == 0))
 7077               		.loc 2 789 0 is_stmt 0 discriminator 1
 7078 2a30 8981      		ldd r24,Y+1
 7079 2a32 9A81      		ldd r25,Y+2
 7080 2a34 FC01      		movw r30,r24
 7081 2a36 2085      		ldd r18,Z+8
 7082 2a38 3185      		ldd r19,Z+9
 7083 2a3a 8B81      		ldd r24,Y+3
 7084 2a3c 9C81      		ldd r25,Y+4
 7085 2a3e 880F      		lsl r24
 7086 2a40 991F      		rol r25
 7087 2a42 820F      		add r24,r18
 7088 2a44 931F      		adc r25,r19
 7089 2a46 FC01      		movw r30,r24
 7090 2a48 8081      		ld r24,Z
 7091 2a4a 9181      		ldd r25,Z+1
 7092 2a4c 892B      		or r24,r25
 7093 2a4e 01F0      		breq .L292
 7094               	.L290:
 791:lp_solve_5.5/lp_utils.c ****     return(linkmap->map[backitemnr]);
 7095               		.loc 2 791 0 is_stmt 1
 7096 2a50 8981      		ldd r24,Y+1
 7097 2a52 9A81      		ldd r25,Y+2
 7098 2a54 FC01      		movw r30,r24
 7099 2a56 2085      		ldd r18,Z+8
 7100 2a58 3185      		ldd r19,Z+9
 7101 2a5a 8B81      		ldd r24,Y+3
 7102 2a5c 9C81      		ldd r25,Y+4
 7103 2a5e 880F      		lsl r24
 7104 2a60 991F      		rol r25
 7105 2a62 820F      		add r24,r18
 7106 2a64 931F      		adc r25,r19
 7107 2a66 FC01      		movw r30,r24
 7108 2a68 8081      		ld r24,Z
 7109 2a6a 9181      		ldd r25,Z+1
 7110               	.L289:
 7111               	/* epilogue start */
 792:lp_solve_5.5/lp_utils.c ****   }
 793:lp_solve_5.5/lp_utils.c **** }
 7112               		.loc 2 793 0
 7113 2a6c 0F90      		pop __tmp_reg__
 7114 2a6e 0F90      		pop __tmp_reg__
 7115 2a70 0F90      		pop __tmp_reg__
 7116 2a72 0F90      		pop __tmp_reg__
 7117 2a74 DF91      		pop r29
 7118 2a76 CF91      		pop r28
 7119 2a78 0895      		ret
 7120               		.cfi_endproc
 7121               	.LFE48:
 7123               	.global	prevActiveLink
 7125               	prevActiveLink:
 7126               	.LFB49:
 794:lp_solve_5.5/lp_utils.c **** 
 795:lp_solve_5.5/lp_utils.c **** STATIC int prevActiveLink(LLrec *linkmap, int forwitemnr)
 796:lp_solve_5.5/lp_utils.c **** {
 7127               		.loc 2 796 0
 7128               		.cfi_startproc
 7129 2a7a CF93      		push r28
 7130               	.LCFI197:
 7131               		.cfi_def_cfa_offset 3
 7132               		.cfi_offset 28, -2
 7133 2a7c DF93      		push r29
 7134               	.LCFI198:
 7135               		.cfi_def_cfa_offset 4
 7136               		.cfi_offset 29, -3
 7137 2a7e 00D0      		rcall .
 7138 2a80 00D0      		rcall .
 7139               	.LCFI199:
 7140               		.cfi_def_cfa_offset 8
 7141 2a82 CDB7      		in r28,__SP_L__
 7142 2a84 DEB7      		in r29,__SP_H__
 7143               	.LCFI200:
 7144               		.cfi_def_cfa_register 28
 7145               	/* prologue: function */
 7146               	/* frame size = 4 */
 7147               	/* stack size = 6 */
 7148               	.L__stack_usage = 6
 7149 2a86 9A83      		std Y+2,r25
 7150 2a88 8983      		std Y+1,r24
 7151 2a8a 7C83      		std Y+4,r23
 7152 2a8c 6B83      		std Y+3,r22
 797:lp_solve_5.5/lp_utils.c ****   if((forwitemnr <= 0) || (forwitemnr > linkmap->size+1))
 7153               		.loc 2 797 0
 7154 2a8e 8B81      		ldd r24,Y+3
 7155 2a90 9C81      		ldd r25,Y+4
 7156 2a92 1816      		cp __zero_reg__,r24
 7157 2a94 1906      		cpc __zero_reg__,r25
 7158 2a96 04F4      		brge .L294
 7159               		.loc 2 797 0 is_stmt 0 discriminator 1
 7160 2a98 8981      		ldd r24,Y+1
 7161 2a9a 9A81      		ldd r25,Y+2
 7162 2a9c FC01      		movw r30,r24
 7163 2a9e 8081      		ld r24,Z
 7164 2aa0 9181      		ldd r25,Z+1
 7165 2aa2 9C01      		movw r18,r24
 7166 2aa4 2F5F      		subi r18,-1
 7167 2aa6 3F4F      		sbci r19,-1
 7168 2aa8 8B81      		ldd r24,Y+3
 7169 2aaa 9C81      		ldd r25,Y+4
 7170 2aac 2817      		cp r18,r24
 7171 2aae 3907      		cpc r19,r25
 7172 2ab0 04F4      		brge .L295
 7173               	.L294:
 798:lp_solve_5.5/lp_utils.c ****     return( -1 );
 7174               		.loc 2 798 0 is_stmt 1
 7175 2ab2 8FEF      		ldi r24,lo8(-1)
 7176 2ab4 9FEF      		ldi r25,lo8(-1)
 7177 2ab6 00C0      		rjmp .L296
 7178               	.L295:
 799:lp_solve_5.5/lp_utils.c ****   else {
 800:lp_solve_5.5/lp_utils.c ****     if(forwitemnr > linkmap->lastitem)
 7179               		.loc 2 800 0
 7180 2ab8 8981      		ldd r24,Y+1
 7181 2aba 9A81      		ldd r25,Y+2
 7182 2abc FC01      		movw r30,r24
 7183 2abe 2681      		ldd r18,Z+6
 7184 2ac0 3781      		ldd r19,Z+7
 7185 2ac2 8B81      		ldd r24,Y+3
 7186 2ac4 9C81      		ldd r25,Y+4
 7187 2ac6 2817      		cp r18,r24
 7188 2ac8 3907      		cpc r19,r25
 7189 2aca 04F4      		brge .L297
 801:lp_solve_5.5/lp_utils.c ****       return( linkmap->lastitem);
 7190               		.loc 2 801 0
 7191 2acc 8981      		ldd r24,Y+1
 7192 2ace 9A81      		ldd r25,Y+2
 7193 2ad0 FC01      		movw r30,r24
 7194 2ad2 8681      		ldd r24,Z+6
 7195 2ad4 9781      		ldd r25,Z+7
 7196 2ad6 00C0      		rjmp .L296
 7197               	.L297:
 802:lp_solve_5.5/lp_utils.c ****     if(forwitemnr > linkmap->firstitem) {
 7198               		.loc 2 802 0
 7199 2ad8 8981      		ldd r24,Y+1
 7200 2ada 9A81      		ldd r25,Y+2
 7201 2adc FC01      		movw r30,r24
 7202 2ade 2481      		ldd r18,Z+4
 7203 2ae0 3581      		ldd r19,Z+5
 7204 2ae2 8B81      		ldd r24,Y+3
 7205 2ae4 9C81      		ldd r25,Y+4
 7206 2ae6 2817      		cp r18,r24
 7207 2ae8 3907      		cpc r19,r25
 7208 2aea 04F4      		brge .L298
 803:lp_solve_5.5/lp_utils.c ****       forwitemnr += linkmap->size;
 7209               		.loc 2 803 0
 7210 2aec 8981      		ldd r24,Y+1
 7211 2aee 9A81      		ldd r25,Y+2
 7212 2af0 FC01      		movw r30,r24
 7213 2af2 8081      		ld r24,Z
 7214 2af4 9181      		ldd r25,Z+1
 7215 2af6 2B81      		ldd r18,Y+3
 7216 2af8 3C81      		ldd r19,Y+4
 7217 2afa 820F      		add r24,r18
 7218 2afc 931F      		adc r25,r19
 7219 2afe 9C83      		std Y+4,r25
 7220 2b00 8B83      		std Y+3,r24
 804:lp_solve_5.5/lp_utils.c ****       while((forwitemnr < linkmap->size + linkmap->lastitem) && (linkmap->map[forwitemnr] == 0))
 7221               		.loc 2 804 0
 7222 2b02 00C0      		rjmp .L299
 7223               	.L301:
 805:lp_solve_5.5/lp_utils.c ****         forwitemnr++;
 7224               		.loc 2 805 0
 7225 2b04 8B81      		ldd r24,Y+3
 7226 2b06 9C81      		ldd r25,Y+4
 7227 2b08 0196      		adiw r24,1
 7228 2b0a 9C83      		std Y+4,r25
 7229 2b0c 8B83      		std Y+3,r24
 7230               	.L299:
 804:lp_solve_5.5/lp_utils.c ****       while((forwitemnr < linkmap->size + linkmap->lastitem) && (linkmap->map[forwitemnr] == 0))
 7231               		.loc 2 804 0
 7232 2b0e 8981      		ldd r24,Y+1
 7233 2b10 9A81      		ldd r25,Y+2
 7234 2b12 FC01      		movw r30,r24
 7235 2b14 2081      		ld r18,Z
 7236 2b16 3181      		ldd r19,Z+1
 7237 2b18 8981      		ldd r24,Y+1
 7238 2b1a 9A81      		ldd r25,Y+2
 7239 2b1c FC01      		movw r30,r24
 7240 2b1e 8681      		ldd r24,Z+6
 7241 2b20 9781      		ldd r25,Z+7
 7242 2b22 280F      		add r18,r24
 7243 2b24 391F      		adc r19,r25
 7244 2b26 8B81      		ldd r24,Y+3
 7245 2b28 9C81      		ldd r25,Y+4
 7246 2b2a 8217      		cp r24,r18
 7247 2b2c 9307      		cpc r25,r19
 7248 2b2e 04F4      		brge .L300
 804:lp_solve_5.5/lp_utils.c ****       while((forwitemnr < linkmap->size + linkmap->lastitem) && (linkmap->map[forwitemnr] == 0))
 7249               		.loc 2 804 0 is_stmt 0 discriminator 1
 7250 2b30 8981      		ldd r24,Y+1
 7251 2b32 9A81      		ldd r25,Y+2
 7252 2b34 FC01      		movw r30,r24
 7253 2b36 2085      		ldd r18,Z+8
 7254 2b38 3185      		ldd r19,Z+9
 7255 2b3a 8B81      		ldd r24,Y+3
 7256 2b3c 9C81      		ldd r25,Y+4
 7257 2b3e 880F      		lsl r24
 7258 2b40 991F      		rol r25
 7259 2b42 820F      		add r24,r18
 7260 2b44 931F      		adc r25,r19
 7261 2b46 FC01      		movw r30,r24
 7262 2b48 8081      		ld r24,Z
 7263 2b4a 9181      		ldd r25,Z+1
 7264 2b4c 892B      		or r24,r25
 7265 2b4e 01F0      		breq .L301
 7266 2b50 00C0      		rjmp .L300
 7267               	.L298:
 806:lp_solve_5.5/lp_utils.c ****     }
 807:lp_solve_5.5/lp_utils.c ****     else
 808:lp_solve_5.5/lp_utils.c ****       forwitemnr += linkmap->size;
 7268               		.loc 2 808 0 is_stmt 1
 7269 2b52 8981      		ldd r24,Y+1
 7270 2b54 9A81      		ldd r25,Y+2
 7271 2b56 FC01      		movw r30,r24
 7272 2b58 8081      		ld r24,Z
 7273 2b5a 9181      		ldd r25,Z+1
 7274 2b5c 2B81      		ldd r18,Y+3
 7275 2b5e 3C81      		ldd r19,Y+4
 7276 2b60 820F      		add r24,r18
 7277 2b62 931F      		adc r25,r19
 7278 2b64 9C83      		std Y+4,r25
 7279 2b66 8B83      		std Y+3,r24
 7280               	.L300:
 809:lp_solve_5.5/lp_utils.c ****     return(linkmap->map[forwitemnr]);
 7281               		.loc 2 809 0
 7282 2b68 8981      		ldd r24,Y+1
 7283 2b6a 9A81      		ldd r25,Y+2
 7284 2b6c FC01      		movw r30,r24
 7285 2b6e 2085      		ldd r18,Z+8
 7286 2b70 3185      		ldd r19,Z+9
 7287 2b72 8B81      		ldd r24,Y+3
 7288 2b74 9C81      		ldd r25,Y+4
 7289 2b76 880F      		lsl r24
 7290 2b78 991F      		rol r25
 7291 2b7a 820F      		add r24,r18
 7292 2b7c 931F      		adc r25,r19
 7293 2b7e FC01      		movw r30,r24
 7294 2b80 8081      		ld r24,Z
 7295 2b82 9181      		ldd r25,Z+1
 7296               	.L296:
 7297               	/* epilogue start */
 810:lp_solve_5.5/lp_utils.c ****   }
 811:lp_solve_5.5/lp_utils.c **** }
 7298               		.loc 2 811 0
 7299 2b84 0F90      		pop __tmp_reg__
 7300 2b86 0F90      		pop __tmp_reg__
 7301 2b88 0F90      		pop __tmp_reg__
 7302 2b8a 0F90      		pop __tmp_reg__
 7303 2b8c DF91      		pop r29
 7304 2b8e CF91      		pop r28
 7305 2b90 0895      		ret
 7306               		.cfi_endproc
 7307               	.LFE49:
 7309               	.global	firstInactiveLink
 7311               	firstInactiveLink:
 7312               	.LFB50:
 812:lp_solve_5.5/lp_utils.c **** 
 813:lp_solve_5.5/lp_utils.c **** STATIC int firstInactiveLink(LLrec *linkmap)
 814:lp_solve_5.5/lp_utils.c **** {
 7313               		.loc 2 814 0
 7314               		.cfi_startproc
 7315 2b92 CF93      		push r28
 7316               	.LCFI201:
 7317               		.cfi_def_cfa_offset 3
 7318               		.cfi_offset 28, -2
 7319 2b94 DF93      		push r29
 7320               	.LCFI202:
 7321               		.cfi_def_cfa_offset 4
 7322               		.cfi_offset 29, -3
 7323 2b96 00D0      		rcall .
 7324 2b98 00D0      		rcall .
 7325 2b9a 00D0      		rcall .
 7326               	.LCFI203:
 7327               		.cfi_def_cfa_offset 10
 7328 2b9c CDB7      		in r28,__SP_L__
 7329 2b9e DEB7      		in r29,__SP_H__
 7330               	.LCFI204:
 7331               		.cfi_def_cfa_register 28
 7332               	/* prologue: function */
 7333               	/* frame size = 6 */
 7334               	/* stack size = 8 */
 7335               	.L__stack_usage = 8
 7336 2ba0 9E83      		std Y+6,r25
 7337 2ba2 8D83      		std Y+5,r24
 815:lp_solve_5.5/lp_utils.c ****   int i, n;
 816:lp_solve_5.5/lp_utils.c **** 
 817:lp_solve_5.5/lp_utils.c ****   if(countInactiveLink(linkmap) == 0)
 7338               		.loc 2 817 0
 7339 2ba4 8D81      		ldd r24,Y+5
 7340 2ba6 9E81      		ldd r25,Y+6
 7341 2ba8 0E94 0000 		call countInactiveLink
 7342 2bac 892B      		or r24,r25
 7343 2bae 01F4      		brne .L303
 818:lp_solve_5.5/lp_utils.c ****     return( 0 );
 7344               		.loc 2 818 0
 7345 2bb0 80E0      		ldi r24,0
 7346 2bb2 90E0      		ldi r25,0
 7347 2bb4 00C0      		rjmp .L304
 7348               	.L303:
 819:lp_solve_5.5/lp_utils.c ****   n = 1;
 7349               		.loc 2 819 0
 7350 2bb6 81E0      		ldi r24,lo8(1)
 7351 2bb8 90E0      		ldi r25,0
 7352 2bba 9C83      		std Y+4,r25
 7353 2bbc 8B83      		std Y+3,r24
 820:lp_solve_5.5/lp_utils.c ****   i = firstActiveLink(linkmap);
 7354               		.loc 2 820 0
 7355 2bbe 8D81      		ldd r24,Y+5
 7356 2bc0 9E81      		ldd r25,Y+6
 7357 2bc2 0E94 0000 		call firstActiveLink
 7358 2bc6 9A83      		std Y+2,r25
 7359 2bc8 8983      		std Y+1,r24
 821:lp_solve_5.5/lp_utils.c ****   while(i == n) {
 7360               		.loc 2 821 0
 7361 2bca 00C0      		rjmp .L305
 7362               	.L306:
 822:lp_solve_5.5/lp_utils.c ****     n++;
 7363               		.loc 2 822 0
 7364 2bcc 8B81      		ldd r24,Y+3
 7365 2bce 9C81      		ldd r25,Y+4
 7366 2bd0 0196      		adiw r24,1
 7367 2bd2 9C83      		std Y+4,r25
 7368 2bd4 8B83      		std Y+3,r24
 823:lp_solve_5.5/lp_utils.c ****     i = nextActiveLink(linkmap, i);
 7369               		.loc 2 823 0
 7370 2bd6 2981      		ldd r18,Y+1
 7371 2bd8 3A81      		ldd r19,Y+2
 7372 2bda 8D81      		ldd r24,Y+5
 7373 2bdc 9E81      		ldd r25,Y+6
 7374 2bde B901      		movw r22,r18
 7375 2be0 0E94 0000 		call nextActiveLink
 7376 2be4 9A83      		std Y+2,r25
 7377 2be6 8983      		std Y+1,r24
 7378               	.L305:
 821:lp_solve_5.5/lp_utils.c ****   while(i == n) {
 7379               		.loc 2 821 0
 7380 2be8 2981      		ldd r18,Y+1
 7381 2bea 3A81      		ldd r19,Y+2
 7382 2bec 8B81      		ldd r24,Y+3
 7383 2bee 9C81      		ldd r25,Y+4
 7384 2bf0 2817      		cp r18,r24
 7385 2bf2 3907      		cpc r19,r25
 7386 2bf4 01F0      		breq .L306
 824:lp_solve_5.5/lp_utils.c ****   }
 825:lp_solve_5.5/lp_utils.c ****   return( n );
 7387               		.loc 2 825 0
 7388 2bf6 8B81      		ldd r24,Y+3
 7389 2bf8 9C81      		ldd r25,Y+4
 7390               	.L304:
 7391               	/* epilogue start */
 826:lp_solve_5.5/lp_utils.c **** }
 7392               		.loc 2 826 0
 7393 2bfa 2696      		adiw r28,6
 7394 2bfc 0FB6      		in __tmp_reg__,__SREG__
 7395 2bfe F894      		cli
 7396 2c00 DEBF      		out __SP_H__,r29
 7397 2c02 0FBE      		out __SREG__,__tmp_reg__
 7398 2c04 CDBF      		out __SP_L__,r28
 7399 2c06 DF91      		pop r29
 7400 2c08 CF91      		pop r28
 7401 2c0a 0895      		ret
 7402               		.cfi_endproc
 7403               	.LFE50:
 7405               	.global	lastInactiveLink
 7407               	lastInactiveLink:
 7408               	.LFB51:
 827:lp_solve_5.5/lp_utils.c **** 
 828:lp_solve_5.5/lp_utils.c **** STATIC int lastInactiveLink(LLrec *linkmap)
 829:lp_solve_5.5/lp_utils.c **** {
 7409               		.loc 2 829 0
 7410               		.cfi_startproc
 7411 2c0c CF93      		push r28
 7412               	.LCFI205:
 7413               		.cfi_def_cfa_offset 3
 7414               		.cfi_offset 28, -2
 7415 2c0e DF93      		push r29
 7416               	.LCFI206:
 7417               		.cfi_def_cfa_offset 4
 7418               		.cfi_offset 29, -3
 7419 2c10 00D0      		rcall .
 7420 2c12 00D0      		rcall .
 7421 2c14 00D0      		rcall .
 7422               	.LCFI207:
 7423               		.cfi_def_cfa_offset 10
 7424 2c16 CDB7      		in r28,__SP_L__
 7425 2c18 DEB7      		in r29,__SP_H__
 7426               	.LCFI208:
 7427               		.cfi_def_cfa_register 28
 7428               	/* prologue: function */
 7429               	/* frame size = 6 */
 7430               	/* stack size = 8 */
 7431               	.L__stack_usage = 8
 7432 2c1a 9E83      		std Y+6,r25
 7433 2c1c 8D83      		std Y+5,r24
 830:lp_solve_5.5/lp_utils.c ****   int i, n;
 831:lp_solve_5.5/lp_utils.c **** 
 832:lp_solve_5.5/lp_utils.c ****   if(countInactiveLink(linkmap) == 0)
 7434               		.loc 2 832 0
 7435 2c1e 8D81      		ldd r24,Y+5
 7436 2c20 9E81      		ldd r25,Y+6
 7437 2c22 0E94 0000 		call countInactiveLink
 7438 2c26 892B      		or r24,r25
 7439 2c28 01F4      		brne .L308
 833:lp_solve_5.5/lp_utils.c ****     return( 0 );
 7440               		.loc 2 833 0
 7441 2c2a 80E0      		ldi r24,0
 7442 2c2c 90E0      		ldi r25,0
 7443 2c2e 00C0      		rjmp .L309
 7444               	.L308:
 834:lp_solve_5.5/lp_utils.c ****   n = linkmap->size;
 7445               		.loc 2 834 0
 7446 2c30 8D81      		ldd r24,Y+5
 7447 2c32 9E81      		ldd r25,Y+6
 7448 2c34 FC01      		movw r30,r24
 7449 2c36 8081      		ld r24,Z
 7450 2c38 9181      		ldd r25,Z+1
 7451 2c3a 9C83      		std Y+4,r25
 7452 2c3c 8B83      		std Y+3,r24
 835:lp_solve_5.5/lp_utils.c ****   i = lastActiveLink(linkmap);
 7453               		.loc 2 835 0
 7454 2c3e 8D81      		ldd r24,Y+5
 7455 2c40 9E81      		ldd r25,Y+6
 7456 2c42 0E94 0000 		call lastActiveLink
 7457 2c46 9A83      		std Y+2,r25
 7458 2c48 8983      		std Y+1,r24
 836:lp_solve_5.5/lp_utils.c ****   while(i == n) {
 7459               		.loc 2 836 0
 7460 2c4a 00C0      		rjmp .L310
 7461               	.L311:
 837:lp_solve_5.5/lp_utils.c ****     n--;
 7462               		.loc 2 837 0
 7463 2c4c 8B81      		ldd r24,Y+3
 7464 2c4e 9C81      		ldd r25,Y+4
 7465 2c50 0197      		sbiw r24,1
 7466 2c52 9C83      		std Y+4,r25
 7467 2c54 8B83      		std Y+3,r24
 838:lp_solve_5.5/lp_utils.c ****     i = prevActiveLink(linkmap, i);
 7468               		.loc 2 838 0
 7469 2c56 2981      		ldd r18,Y+1
 7470 2c58 3A81      		ldd r19,Y+2
 7471 2c5a 8D81      		ldd r24,Y+5
 7472 2c5c 9E81      		ldd r25,Y+6
 7473 2c5e B901      		movw r22,r18
 7474 2c60 0E94 0000 		call prevActiveLink
 7475 2c64 9A83      		std Y+2,r25
 7476 2c66 8983      		std Y+1,r24
 7477               	.L310:
 836:lp_solve_5.5/lp_utils.c ****   while(i == n) {
 7478               		.loc 2 836 0
 7479 2c68 2981      		ldd r18,Y+1
 7480 2c6a 3A81      		ldd r19,Y+2
 7481 2c6c 8B81      		ldd r24,Y+3
 7482 2c6e 9C81      		ldd r25,Y+4
 7483 2c70 2817      		cp r18,r24
 7484 2c72 3907      		cpc r19,r25
 7485 2c74 01F0      		breq .L311
 839:lp_solve_5.5/lp_utils.c ****   }
 840:lp_solve_5.5/lp_utils.c ****   return( n );
 7486               		.loc 2 840 0
 7487 2c76 8B81      		ldd r24,Y+3
 7488 2c78 9C81      		ldd r25,Y+4
 7489               	.L309:
 7490               	/* epilogue start */
 841:lp_solve_5.5/lp_utils.c **** }
 7491               		.loc 2 841 0
 7492 2c7a 2696      		adiw r28,6
 7493 2c7c 0FB6      		in __tmp_reg__,__SREG__
 7494 2c7e F894      		cli
 7495 2c80 DEBF      		out __SP_H__,r29
 7496 2c82 0FBE      		out __SREG__,__tmp_reg__
 7497 2c84 CDBF      		out __SP_L__,r28
 7498 2c86 DF91      		pop r29
 7499 2c88 CF91      		pop r28
 7500 2c8a 0895      		ret
 7501               		.cfi_endproc
 7502               	.LFE51:
 7504               	.global	nextInactiveLink
 7506               	nextInactiveLink:
 7507               	.LFB52:
 842:lp_solve_5.5/lp_utils.c **** 
 843:lp_solve_5.5/lp_utils.c **** STATIC int nextInactiveLink(LLrec *linkmap, int backitemnr)
 844:lp_solve_5.5/lp_utils.c **** {
 7508               		.loc 2 844 0
 7509               		.cfi_startproc
 7510 2c8c CF93      		push r28
 7511               	.LCFI209:
 7512               		.cfi_def_cfa_offset 3
 7513               		.cfi_offset 28, -2
 7514 2c8e DF93      		push r29
 7515               	.LCFI210:
 7516               		.cfi_def_cfa_offset 4
 7517               		.cfi_offset 29, -3
 7518 2c90 00D0      		rcall .
 7519 2c92 00D0      		rcall .
 7520               	.LCFI211:
 7521               		.cfi_def_cfa_offset 8
 7522 2c94 CDB7      		in r28,__SP_L__
 7523 2c96 DEB7      		in r29,__SP_H__
 7524               	.LCFI212:
 7525               		.cfi_def_cfa_register 28
 7526               	/* prologue: function */
 7527               	/* frame size = 4 */
 7528               	/* stack size = 6 */
 7529               	.L__stack_usage = 6
 7530 2c98 9A83      		std Y+2,r25
 7531 2c9a 8983      		std Y+1,r24
 7532 2c9c 7C83      		std Y+4,r23
 7533 2c9e 6B83      		std Y+3,r22
 7534               	.L314:
 845:lp_solve_5.5/lp_utils.c ****   do {
 846:lp_solve_5.5/lp_utils.c ****     backitemnr++;
 7535               		.loc 2 846 0 discriminator 2
 7536 2ca0 8B81      		ldd r24,Y+3
 7537 2ca2 9C81      		ldd r25,Y+4
 7538 2ca4 0196      		adiw r24,1
 7539 2ca6 9C83      		std Y+4,r25
 7540 2ca8 8B83      		std Y+3,r24
 847:lp_solve_5.5/lp_utils.c ****   } while((backitemnr <= linkmap->size) && isActiveLink(linkmap, backitemnr));
 7541               		.loc 2 847 0 discriminator 2
 7542 2caa 8981      		ldd r24,Y+1
 7543 2cac 9A81      		ldd r25,Y+2
 7544 2cae FC01      		movw r30,r24
 7545 2cb0 2081      		ld r18,Z
 7546 2cb2 3181      		ldd r19,Z+1
 7547 2cb4 8B81      		ldd r24,Y+3
 7548 2cb6 9C81      		ldd r25,Y+4
 7549 2cb8 2817      		cp r18,r24
 7550 2cba 3907      		cpc r19,r25
 7551 2cbc 04F0      		brlt .L313
 7552               		.loc 2 847 0 is_stmt 0 discriminator 1
 7553 2cbe 2B81      		ldd r18,Y+3
 7554 2cc0 3C81      		ldd r19,Y+4
 7555 2cc2 8981      		ldd r24,Y+1
 7556 2cc4 9A81      		ldd r25,Y+2
 7557 2cc6 B901      		movw r22,r18
 7558 2cc8 0E94 0000 		call isActiveLink
 7559 2ccc 8823      		tst r24
 7560 2cce 01F4      		brne .L314
 7561               	.L313:
 848:lp_solve_5.5/lp_utils.c ****   if(backitemnr <= linkmap->size)
 7562               		.loc 2 848 0 is_stmt 1
 7563 2cd0 8981      		ldd r24,Y+1
 7564 2cd2 9A81      		ldd r25,Y+2
 7565 2cd4 FC01      		movw r30,r24
 7566 2cd6 2081      		ld r18,Z
 7567 2cd8 3181      		ldd r19,Z+1
 7568 2cda 8B81      		ldd r24,Y+3
 7569 2cdc 9C81      		ldd r25,Y+4
 7570 2cde 2817      		cp r18,r24
 7571 2ce0 3907      		cpc r19,r25
 7572 2ce2 04F0      		brlt .L315
 849:lp_solve_5.5/lp_utils.c ****     return( backitemnr );
 7573               		.loc 2 849 0
 7574 2ce4 8B81      		ldd r24,Y+3
 7575 2ce6 9C81      		ldd r25,Y+4
 7576 2ce8 00C0      		rjmp .L316
 7577               	.L315:
 850:lp_solve_5.5/lp_utils.c ****   else
 851:lp_solve_5.5/lp_utils.c ****     return( 0 );
 7578               		.loc 2 851 0
 7579 2cea 80E0      		ldi r24,0
 7580 2cec 90E0      		ldi r25,0
 7581               	.L316:
 7582               	/* epilogue start */
 852:lp_solve_5.5/lp_utils.c **** }
 7583               		.loc 2 852 0
 7584 2cee 0F90      		pop __tmp_reg__
 7585 2cf0 0F90      		pop __tmp_reg__
 7586 2cf2 0F90      		pop __tmp_reg__
 7587 2cf4 0F90      		pop __tmp_reg__
 7588 2cf6 DF91      		pop r29
 7589 2cf8 CF91      		pop r28
 7590 2cfa 0895      		ret
 7591               		.cfi_endproc
 7592               	.LFE52:
 7594               	.global	prevInactiveLink
 7596               	prevInactiveLink:
 7597               	.LFB53:
 853:lp_solve_5.5/lp_utils.c **** 
 854:lp_solve_5.5/lp_utils.c **** STATIC int prevInactiveLink(LLrec *linkmap, int forwitemnr)
 855:lp_solve_5.5/lp_utils.c **** {
 7598               		.loc 2 855 0
 7599               		.cfi_startproc
 7600 2cfc CF93      		push r28
 7601               	.LCFI213:
 7602               		.cfi_def_cfa_offset 3
 7603               		.cfi_offset 28, -2
 7604 2cfe DF93      		push r29
 7605               	.LCFI214:
 7606               		.cfi_def_cfa_offset 4
 7607               		.cfi_offset 29, -3
 7608 2d00 00D0      		rcall .
 7609 2d02 00D0      		rcall .
 7610               	.LCFI215:
 7611               		.cfi_def_cfa_offset 8
 7612 2d04 CDB7      		in r28,__SP_L__
 7613 2d06 DEB7      		in r29,__SP_H__
 7614               	.LCFI216:
 7615               		.cfi_def_cfa_register 28
 7616               	/* prologue: function */
 7617               	/* frame size = 4 */
 7618               	/* stack size = 6 */
 7619               	.L__stack_usage = 6
 7620 2d08 9A83      		std Y+2,r25
 7621 2d0a 8983      		std Y+1,r24
 7622 2d0c 7C83      		std Y+4,r23
 7623 2d0e 6B83      		std Y+3,r22
 856:lp_solve_5.5/lp_utils.c ****   return( 0 );
 7624               		.loc 2 856 0
 7625 2d10 80E0      		ldi r24,0
 7626 2d12 90E0      		ldi r25,0
 7627               	/* epilogue start */
 857:lp_solve_5.5/lp_utils.c **** }
 7628               		.loc 2 857 0
 7629 2d14 0F90      		pop __tmp_reg__
 7630 2d16 0F90      		pop __tmp_reg__
 7631 2d18 0F90      		pop __tmp_reg__
 7632 2d1a 0F90      		pop __tmp_reg__
 7633 2d1c DF91      		pop r29
 7634 2d1e CF91      		pop r28
 7635 2d20 0895      		ret
 7636               		.cfi_endproc
 7637               	.LFE53:
 7639               	.global	removeLink
 7641               	removeLink:
 7642               	.LFB54:
 858:lp_solve_5.5/lp_utils.c **** 
 859:lp_solve_5.5/lp_utils.c **** STATIC int removeLink(LLrec *linkmap, int itemnr)
 860:lp_solve_5.5/lp_utils.c **** {
 7643               		.loc 2 860 0
 7644               		.cfi_startproc
 7645 2d22 CF93      		push r28
 7646               	.LCFI217:
 7647               		.cfi_def_cfa_offset 3
 7648               		.cfi_offset 28, -2
 7649 2d24 DF93      		push r29
 7650               	.LCFI218:
 7651               		.cfi_def_cfa_offset 4
 7652               		.cfi_offset 29, -3
 7653 2d26 CDB7      		in r28,__SP_L__
 7654 2d28 DEB7      		in r29,__SP_H__
 7655               	.LCFI219:
 7656               		.cfi_def_cfa_register 28
 7657 2d2a 2A97      		sbiw r28,10
 7658               	.LCFI220:
 7659               		.cfi_def_cfa_offset 14
 7660 2d2c 0FB6      		in __tmp_reg__,__SREG__
 7661 2d2e F894      		cli
 7662 2d30 DEBF      		out __SP_H__,r29
 7663 2d32 0FBE      		out __SREG__,__tmp_reg__
 7664 2d34 CDBF      		out __SP_L__,r28
 7665               	/* prologue: function */
 7666               	/* frame size = 10 */
 7667               	/* stack size = 12 */
 7668               	.L__stack_usage = 12
 7669 2d36 9887      		std Y+8,r25
 7670 2d38 8F83      		std Y+7,r24
 7671 2d3a 7A87      		std Y+10,r23
 7672 2d3c 6987      		std Y+9,r22
 861:lp_solve_5.5/lp_utils.c ****   int size, prevnr, nextnr = -1;
 7673               		.loc 2 861 0
 7674 2d3e 8FEF      		ldi r24,lo8(-1)
 7675 2d40 9FEF      		ldi r25,lo8(-1)
 7676 2d42 9A83      		std Y+2,r25
 7677 2d44 8983      		std Y+1,r24
 862:lp_solve_5.5/lp_utils.c **** 
 863:lp_solve_5.5/lp_utils.c ****   size = linkmap->size;
 7678               		.loc 2 863 0
 7679 2d46 8F81      		ldd r24,Y+7
 7680 2d48 9885      		ldd r25,Y+8
 7681 2d4a FC01      		movw r30,r24
 7682 2d4c 8081      		ld r24,Z
 7683 2d4e 9181      		ldd r25,Z+1
 7684 2d50 9C83      		std Y+4,r25
 7685 2d52 8B83      		std Y+3,r24
 864:lp_solve_5.5/lp_utils.c ****   if((itemnr <= 0) || (itemnr > size))
 7686               		.loc 2 864 0
 7687 2d54 8985      		ldd r24,Y+9
 7688 2d56 9A85      		ldd r25,Y+10
 7689 2d58 1816      		cp __zero_reg__,r24
 7690 2d5a 1906      		cpc __zero_reg__,r25
 7691 2d5c 04F4      		brge .L320
 7692               		.loc 2 864 0 is_stmt 0 discriminator 1
 7693 2d5e 2985      		ldd r18,Y+9
 7694 2d60 3A85      		ldd r19,Y+10
 7695 2d62 8B81      		ldd r24,Y+3
 7696 2d64 9C81      		ldd r25,Y+4
 7697 2d66 8217      		cp r24,r18
 7698 2d68 9307      		cpc r25,r19
 7699 2d6a 04F4      		brge .L321
 7700               	.L320:
 865:lp_solve_5.5/lp_utils.c ****     return( nextnr );
 7701               		.loc 2 865 0 is_stmt 1
 7702 2d6c 8981      		ldd r24,Y+1
 7703 2d6e 9A81      		ldd r25,Y+2
 7704 2d70 00C0      		rjmp .L322
 7705               	.L321:
 866:lp_solve_5.5/lp_utils.c **** #ifdef Paranoia
 867:lp_solve_5.5/lp_utils.c ****   if(!isActiveLink(linkmap, itemnr))
 868:lp_solve_5.5/lp_utils.c ****     return( nextnr );
 869:lp_solve_5.5/lp_utils.c **** #endif
 870:lp_solve_5.5/lp_utils.c **** 
 871:lp_solve_5.5/lp_utils.c ****   /* Get link data at the specified position */
 872:lp_solve_5.5/lp_utils.c ****   nextnr = linkmap->map[itemnr];
 7706               		.loc 2 872 0
 7707 2d72 8F81      		ldd r24,Y+7
 7708 2d74 9885      		ldd r25,Y+8
 7709 2d76 FC01      		movw r30,r24
 7710 2d78 2085      		ldd r18,Z+8
 7711 2d7a 3185      		ldd r19,Z+9
 7712 2d7c 8985      		ldd r24,Y+9
 7713 2d7e 9A85      		ldd r25,Y+10
 7714 2d80 880F      		lsl r24
 7715 2d82 991F      		rol r25
 7716 2d84 820F      		add r24,r18
 7717 2d86 931F      		adc r25,r19
 7718 2d88 FC01      		movw r30,r24
 7719 2d8a 8081      		ld r24,Z
 7720 2d8c 9181      		ldd r25,Z+1
 7721 2d8e 9A83      		std Y+2,r25
 7722 2d90 8983      		std Y+1,r24
 873:lp_solve_5.5/lp_utils.c ****   prevnr = linkmap->map[size+itemnr];
 7723               		.loc 2 873 0
 7724 2d92 8F81      		ldd r24,Y+7
 7725 2d94 9885      		ldd r25,Y+8
 7726 2d96 FC01      		movw r30,r24
 7727 2d98 2085      		ldd r18,Z+8
 7728 2d9a 3185      		ldd r19,Z+9
 7729 2d9c 4B81      		ldd r20,Y+3
 7730 2d9e 5C81      		ldd r21,Y+4
 7731 2da0 8985      		ldd r24,Y+9
 7732 2da2 9A85      		ldd r25,Y+10
 7733 2da4 840F      		add r24,r20
 7734 2da6 951F      		adc r25,r21
 7735 2da8 880F      		lsl r24
 7736 2daa 991F      		rol r25
 7737 2dac 820F      		add r24,r18
 7738 2dae 931F      		adc r25,r19
 7739 2db0 FC01      		movw r30,r24
 7740 2db2 8081      		ld r24,Z
 7741 2db4 9181      		ldd r25,Z+1
 7742 2db6 9E83      		std Y+6,r25
 7743 2db8 8D83      		std Y+5,r24
 874:lp_solve_5.5/lp_utils.c ****   if(itemnr == linkmap->firstitem)
 7744               		.loc 2 874 0
 7745 2dba 8F81      		ldd r24,Y+7
 7746 2dbc 9885      		ldd r25,Y+8
 7747 2dbe FC01      		movw r30,r24
 7748 2dc0 2481      		ldd r18,Z+4
 7749 2dc2 3581      		ldd r19,Z+5
 7750 2dc4 8985      		ldd r24,Y+9
 7751 2dc6 9A85      		ldd r25,Y+10
 7752 2dc8 2817      		cp r18,r24
 7753 2dca 3907      		cpc r19,r25
 7754 2dcc 01F4      		brne .L323
 875:lp_solve_5.5/lp_utils.c ****     linkmap->firstitem = nextnr;
 7755               		.loc 2 875 0
 7756 2dce 8F81      		ldd r24,Y+7
 7757 2dd0 9885      		ldd r25,Y+8
 7758 2dd2 2981      		ldd r18,Y+1
 7759 2dd4 3A81      		ldd r19,Y+2
 7760 2dd6 FC01      		movw r30,r24
 7761 2dd8 3583      		std Z+5,r19
 7762 2dda 2483      		std Z+4,r18
 7763               	.L323:
 876:lp_solve_5.5/lp_utils.c ****   if(itemnr == linkmap->lastitem)
 7764               		.loc 2 876 0
 7765 2ddc 8F81      		ldd r24,Y+7
 7766 2dde 9885      		ldd r25,Y+8
 7767 2de0 FC01      		movw r30,r24
 7768 2de2 2681      		ldd r18,Z+6
 7769 2de4 3781      		ldd r19,Z+7
 7770 2de6 8985      		ldd r24,Y+9
 7771 2de8 9A85      		ldd r25,Y+10
 7772 2dea 2817      		cp r18,r24
 7773 2dec 3907      		cpc r19,r25
 7774 2dee 01F4      		brne .L324
 877:lp_solve_5.5/lp_utils.c ****     linkmap->lastitem = prevnr;
 7775               		.loc 2 877 0
 7776 2df0 8F81      		ldd r24,Y+7
 7777 2df2 9885      		ldd r25,Y+8
 7778 2df4 2D81      		ldd r18,Y+5
 7779 2df6 3E81      		ldd r19,Y+6
 7780 2df8 FC01      		movw r30,r24
 7781 2dfa 3783      		std Z+7,r19
 7782 2dfc 2683      		std Z+6,r18
 7783               	.L324:
 878:lp_solve_5.5/lp_utils.c **** 
 879:lp_solve_5.5/lp_utils.c ****   /* Update forward link */
 880:lp_solve_5.5/lp_utils.c ****   linkmap->map[prevnr] = linkmap->map[itemnr];
 7784               		.loc 2 880 0
 7785 2dfe 8F81      		ldd r24,Y+7
 7786 2e00 9885      		ldd r25,Y+8
 7787 2e02 FC01      		movw r30,r24
 7788 2e04 2085      		ldd r18,Z+8
 7789 2e06 3185      		ldd r19,Z+9
 7790 2e08 8D81      		ldd r24,Y+5
 7791 2e0a 9E81      		ldd r25,Y+6
 7792 2e0c 880F      		lsl r24
 7793 2e0e 991F      		rol r25
 7794 2e10 820F      		add r24,r18
 7795 2e12 931F      		adc r25,r19
 7796 2e14 2F81      		ldd r18,Y+7
 7797 2e16 3885      		ldd r19,Y+8
 7798 2e18 F901      		movw r30,r18
 7799 2e1a 4085      		ldd r20,Z+8
 7800 2e1c 5185      		ldd r21,Z+9
 7801 2e1e 2985      		ldd r18,Y+9
 7802 2e20 3A85      		ldd r19,Y+10
 7803 2e22 220F      		lsl r18
 7804 2e24 331F      		rol r19
 7805 2e26 240F      		add r18,r20
 7806 2e28 351F      		adc r19,r21
 7807 2e2a F901      		movw r30,r18
 7808 2e2c 2081      		ld r18,Z
 7809 2e2e 3181      		ldd r19,Z+1
 7810 2e30 FC01      		movw r30,r24
 7811 2e32 3183      		std Z+1,r19
 7812 2e34 2083      		st Z,r18
 881:lp_solve_5.5/lp_utils.c ****   linkmap->map[itemnr] = 0;
 7813               		.loc 2 881 0
 7814 2e36 8F81      		ldd r24,Y+7
 7815 2e38 9885      		ldd r25,Y+8
 7816 2e3a FC01      		movw r30,r24
 7817 2e3c 2085      		ldd r18,Z+8
 7818 2e3e 3185      		ldd r19,Z+9
 7819 2e40 8985      		ldd r24,Y+9
 7820 2e42 9A85      		ldd r25,Y+10
 7821 2e44 880F      		lsl r24
 7822 2e46 991F      		rol r25
 7823 2e48 820F      		add r24,r18
 7824 2e4a 931F      		adc r25,r19
 7825 2e4c FC01      		movw r30,r24
 7826 2e4e 1182      		std Z+1,__zero_reg__
 7827 2e50 1082      		st Z,__zero_reg__
 882:lp_solve_5.5/lp_utils.c **** 
 883:lp_solve_5.5/lp_utils.c ****   /* Update backward link */
 884:lp_solve_5.5/lp_utils.c ****   if(nextnr == 0)
 7828               		.loc 2 884 0
 7829 2e52 8981      		ldd r24,Y+1
 7830 2e54 9A81      		ldd r25,Y+2
 7831 2e56 892B      		or r24,r25
 7832 2e58 01F4      		brne .L325
 885:lp_solve_5.5/lp_utils.c ****     linkmap->map[2*size+1] = prevnr;
 7833               		.loc 2 885 0
 7834 2e5a 8F81      		ldd r24,Y+7
 7835 2e5c 9885      		ldd r25,Y+8
 7836 2e5e FC01      		movw r30,r24
 7837 2e60 2085      		ldd r18,Z+8
 7838 2e62 3185      		ldd r19,Z+9
 7839 2e64 8B81      		ldd r24,Y+3
 7840 2e66 9C81      		ldd r25,Y+4
 7841 2e68 880F      		lsl r24
 7842 2e6a 991F      		rol r25
 7843 2e6c 880F      		lsl r24
 7844 2e6e 991F      		rol r25
 7845 2e70 0296      		adiw r24,2
 7846 2e72 820F      		add r24,r18
 7847 2e74 931F      		adc r25,r19
 7848 2e76 2D81      		ldd r18,Y+5
 7849 2e78 3E81      		ldd r19,Y+6
 7850 2e7a FC01      		movw r30,r24
 7851 2e7c 3183      		std Z+1,r19
 7852 2e7e 2083      		st Z,r18
 7853 2e80 00C0      		rjmp .L326
 7854               	.L325:
 886:lp_solve_5.5/lp_utils.c ****   else
 887:lp_solve_5.5/lp_utils.c ****     linkmap->map[size+nextnr] = linkmap->map[size+itemnr];
 7855               		.loc 2 887 0
 7856 2e82 8F81      		ldd r24,Y+7
 7857 2e84 9885      		ldd r25,Y+8
 7858 2e86 FC01      		movw r30,r24
 7859 2e88 2085      		ldd r18,Z+8
 7860 2e8a 3185      		ldd r19,Z+9
 7861 2e8c 4B81      		ldd r20,Y+3
 7862 2e8e 5C81      		ldd r21,Y+4
 7863 2e90 8981      		ldd r24,Y+1
 7864 2e92 9A81      		ldd r25,Y+2
 7865 2e94 840F      		add r24,r20
 7866 2e96 951F      		adc r25,r21
 7867 2e98 880F      		lsl r24
 7868 2e9a 991F      		rol r25
 7869 2e9c 820F      		add r24,r18
 7870 2e9e 931F      		adc r25,r19
 7871 2ea0 2F81      		ldd r18,Y+7
 7872 2ea2 3885      		ldd r19,Y+8
 7873 2ea4 F901      		movw r30,r18
 7874 2ea6 4085      		ldd r20,Z+8
 7875 2ea8 5185      		ldd r21,Z+9
 7876 2eaa 6B81      		ldd r22,Y+3
 7877 2eac 7C81      		ldd r23,Y+4
 7878 2eae 2985      		ldd r18,Y+9
 7879 2eb0 3A85      		ldd r19,Y+10
 7880 2eb2 260F      		add r18,r22
 7881 2eb4 371F      		adc r19,r23
 7882 2eb6 220F      		lsl r18
 7883 2eb8 331F      		rol r19
 7884 2eba 240F      		add r18,r20
 7885 2ebc 351F      		adc r19,r21
 7886 2ebe F901      		movw r30,r18
 7887 2ec0 2081      		ld r18,Z
 7888 2ec2 3181      		ldd r19,Z+1
 7889 2ec4 FC01      		movw r30,r24
 7890 2ec6 3183      		std Z+1,r19
 7891 2ec8 2083      		st Z,r18
 7892               	.L326:
 888:lp_solve_5.5/lp_utils.c ****   linkmap->map[size+itemnr] = 0;
 7893               		.loc 2 888 0
 7894 2eca 8F81      		ldd r24,Y+7
 7895 2ecc 9885      		ldd r25,Y+8
 7896 2ece FC01      		movw r30,r24
 7897 2ed0 2085      		ldd r18,Z+8
 7898 2ed2 3185      		ldd r19,Z+9
 7899 2ed4 4B81      		ldd r20,Y+3
 7900 2ed6 5C81      		ldd r21,Y+4
 7901 2ed8 8985      		ldd r24,Y+9
 7902 2eda 9A85      		ldd r25,Y+10
 7903 2edc 840F      		add r24,r20
 7904 2ede 951F      		adc r25,r21
 7905 2ee0 880F      		lsl r24
 7906 2ee2 991F      		rol r25
 7907 2ee4 820F      		add r24,r18
 7908 2ee6 931F      		adc r25,r19
 7909 2ee8 FC01      		movw r30,r24
 7910 2eea 1182      		std Z+1,__zero_reg__
 7911 2eec 1082      		st Z,__zero_reg__
 889:lp_solve_5.5/lp_utils.c **** 
 890:lp_solve_5.5/lp_utils.c ****   /* Decrement the count */
 891:lp_solve_5.5/lp_utils.c ****   linkmap->count--;
 7912               		.loc 2 891 0
 7913 2eee 8F81      		ldd r24,Y+7
 7914 2ef0 9885      		ldd r25,Y+8
 7915 2ef2 FC01      		movw r30,r24
 7916 2ef4 8281      		ldd r24,Z+2
 7917 2ef6 9381      		ldd r25,Z+3
 7918 2ef8 9C01      		movw r18,r24
 7919 2efa 2150      		subi r18,1
 7920 2efc 3109      		sbc r19,__zero_reg__
 7921 2efe 8F81      		ldd r24,Y+7
 7922 2f00 9885      		ldd r25,Y+8
 7923 2f02 FC01      		movw r30,r24
 7924 2f04 3383      		std Z+3,r19
 7925 2f06 2283      		std Z+2,r18
 892:lp_solve_5.5/lp_utils.c **** 
 893:lp_solve_5.5/lp_utils.c ****   /* Return the next active item */
 894:lp_solve_5.5/lp_utils.c ****   return( nextnr );
 7926               		.loc 2 894 0
 7927 2f08 8981      		ldd r24,Y+1
 7928 2f0a 9A81      		ldd r25,Y+2
 7929               	.L322:
 7930               	/* epilogue start */
 895:lp_solve_5.5/lp_utils.c **** }
 7931               		.loc 2 895 0
 7932 2f0c 2A96      		adiw r28,10
 7933 2f0e 0FB6      		in __tmp_reg__,__SREG__
 7934 2f10 F894      		cli
 7935 2f12 DEBF      		out __SP_H__,r29
 7936 2f14 0FBE      		out __SREG__,__tmp_reg__
 7937 2f16 CDBF      		out __SP_L__,r28
 7938 2f18 DF91      		pop r29
 7939 2f1a CF91      		pop r28
 7940 2f1c 0895      		ret
 7941               		.cfi_endproc
 7942               	.LFE54:
 7944               	.global	cloneLink
 7946               	cloneLink:
 7947               	.LFB55:
 896:lp_solve_5.5/lp_utils.c **** 
 897:lp_solve_5.5/lp_utils.c **** STATIC LLrec *cloneLink(LLrec *sourcemap, int newsize, MYBOOL freesource)
 898:lp_solve_5.5/lp_utils.c **** {
 7948               		.loc 2 898 0
 7949               		.cfi_startproc
 7950 2f1e CF93      		push r28
 7951               	.LCFI221:
 7952               		.cfi_def_cfa_offset 3
 7953               		.cfi_offset 28, -2
 7954 2f20 DF93      		push r29
 7955               	.LCFI222:
 7956               		.cfi_def_cfa_offset 4
 7957               		.cfi_offset 29, -3
 7958 2f22 CDB7      		in r28,__SP_L__
 7959 2f24 DEB7      		in r29,__SP_H__
 7960               	.LCFI223:
 7961               		.cfi_def_cfa_register 28
 7962 2f26 2997      		sbiw r28,9
 7963               	.LCFI224:
 7964               		.cfi_def_cfa_offset 13
 7965 2f28 0FB6      		in __tmp_reg__,__SREG__
 7966 2f2a F894      		cli
 7967 2f2c DEBF      		out __SP_H__,r29
 7968 2f2e 0FBE      		out __SREG__,__tmp_reg__
 7969 2f30 CDBF      		out __SP_L__,r28
 7970               	/* prologue: function */
 7971               	/* frame size = 9 */
 7972               	/* stack size = 11 */
 7973               	.L__stack_usage = 11
 7974 2f32 9E83      		std Y+6,r25
 7975 2f34 8D83      		std Y+5,r24
 7976 2f36 7887      		std Y+8,r23
 7977 2f38 6F83      		std Y+7,r22
 7978 2f3a 4987      		std Y+9,r20
 899:lp_solve_5.5/lp_utils.c ****   LLrec *testmap = NULL;
 7979               		.loc 2 899 0
 7980 2f3c 1C82      		std Y+4,__zero_reg__
 7981 2f3e 1B82      		std Y+3,__zero_reg__
 900:lp_solve_5.5/lp_utils.c **** 
 901:lp_solve_5.5/lp_utils.c ****   if((newsize == sourcemap->size) || (newsize <= 0)) {
 7982               		.loc 2 901 0
 7983 2f40 8D81      		ldd r24,Y+5
 7984 2f42 9E81      		ldd r25,Y+6
 7985 2f44 FC01      		movw r30,r24
 7986 2f46 2081      		ld r18,Z
 7987 2f48 3181      		ldd r19,Z+1
 7988 2f4a 8F81      		ldd r24,Y+7
 7989 2f4c 9885      		ldd r25,Y+8
 7990 2f4e 2817      		cp r18,r24
 7991 2f50 3907      		cpc r19,r25
 7992 2f52 01F0      		breq .L328
 7993               		.loc 2 901 0 is_stmt 0 discriminator 1
 7994 2f54 8F81      		ldd r24,Y+7
 7995 2f56 9885      		ldd r25,Y+8
 7996 2f58 1816      		cp __zero_reg__,r24
 7997 2f5a 1906      		cpc __zero_reg__,r25
 7998 2f5c 04F4      		brge .+2
 7999 2f5e 00C0      		rjmp .L329
 8000               	.L328:
 902:lp_solve_5.5/lp_utils.c ****     createLink(sourcemap->size, &testmap, NULL);
 8001               		.loc 2 902 0 is_stmt 1
 8002 2f60 8D81      		ldd r24,Y+5
 8003 2f62 9E81      		ldd r25,Y+6
 8004 2f64 FC01      		movw r30,r24
 8005 2f66 8081      		ld r24,Z
 8006 2f68 9181      		ldd r25,Z+1
 8007 2f6a 9E01      		movw r18,r28
 8008 2f6c 2D5F      		subi r18,-3
 8009 2f6e 3F4F      		sbci r19,-1
 8010 2f70 40E0      		ldi r20,0
 8011 2f72 50E0      		ldi r21,0
 8012 2f74 B901      		movw r22,r18
 8013 2f76 0E94 0000 		call createLink
 903:lp_solve_5.5/lp_utils.c ****     MEMCOPY(testmap->map, sourcemap->map, 2*(sourcemap->size+1));
 8014               		.loc 2 903 0
 8015 2f7a 8D81      		ldd r24,Y+5
 8016 2f7c 9E81      		ldd r25,Y+6
 8017 2f7e FC01      		movw r30,r24
 8018 2f80 8081      		ld r24,Z
 8019 2f82 9181      		ldd r25,Z+1
 8020 2f84 0196      		adiw r24,1
 8021 2f86 880F      		lsl r24
 8022 2f88 991F      		rol r25
 8023 2f8a 880F      		lsl r24
 8024 2f8c 991F      		rol r25
 8025 2f8e AC01      		movw r20,r24
 8026 2f90 8D81      		ldd r24,Y+5
 8027 2f92 9E81      		ldd r25,Y+6
 8028 2f94 FC01      		movw r30,r24
 8029 2f96 2085      		ldd r18,Z+8
 8030 2f98 3185      		ldd r19,Z+9
 8031 2f9a 8B81      		ldd r24,Y+3
 8032 2f9c 9C81      		ldd r25,Y+4
 8033 2f9e FC01      		movw r30,r24
 8034 2fa0 8085      		ldd r24,Z+8
 8035 2fa2 9185      		ldd r25,Z+9
 8036 2fa4 B901      		movw r22,r18
 8037 2fa6 0E94 0000 		call memcpy
 904:lp_solve_5.5/lp_utils.c ****     testmap->firstitem = sourcemap->firstitem;
 8038               		.loc 2 904 0
 8039 2faa 8B81      		ldd r24,Y+3
 8040 2fac 9C81      		ldd r25,Y+4
 8041 2fae 2D81      		ldd r18,Y+5
 8042 2fb0 3E81      		ldd r19,Y+6
 8043 2fb2 F901      		movw r30,r18
 8044 2fb4 2481      		ldd r18,Z+4
 8045 2fb6 3581      		ldd r19,Z+5
 8046 2fb8 FC01      		movw r30,r24
 8047 2fba 3583      		std Z+5,r19
 8048 2fbc 2483      		std Z+4,r18
 905:lp_solve_5.5/lp_utils.c ****     testmap->lastitem = sourcemap->lastitem;
 8049               		.loc 2 905 0
 8050 2fbe 8B81      		ldd r24,Y+3
 8051 2fc0 9C81      		ldd r25,Y+4
 8052 2fc2 2D81      		ldd r18,Y+5
 8053 2fc4 3E81      		ldd r19,Y+6
 8054 2fc6 F901      		movw r30,r18
 8055 2fc8 2681      		ldd r18,Z+6
 8056 2fca 3781      		ldd r19,Z+7
 8057 2fcc FC01      		movw r30,r24
 8058 2fce 3783      		std Z+7,r19
 8059 2fd0 2683      		std Z+6,r18
 906:lp_solve_5.5/lp_utils.c ****     testmap->size = sourcemap->size;
 8060               		.loc 2 906 0
 8061 2fd2 8B81      		ldd r24,Y+3
 8062 2fd4 9C81      		ldd r25,Y+4
 8063 2fd6 2D81      		ldd r18,Y+5
 8064 2fd8 3E81      		ldd r19,Y+6
 8065 2fda F901      		movw r30,r18
 8066 2fdc 2081      		ld r18,Z
 8067 2fde 3181      		ldd r19,Z+1
 8068 2fe0 FC01      		movw r30,r24
 8069 2fe2 3183      		std Z+1,r19
 8070 2fe4 2083      		st Z,r18
 907:lp_solve_5.5/lp_utils.c ****     testmap->count = sourcemap->count;
 8071               		.loc 2 907 0
 8072 2fe6 8B81      		ldd r24,Y+3
 8073 2fe8 9C81      		ldd r25,Y+4
 8074 2fea 2D81      		ldd r18,Y+5
 8075 2fec 3E81      		ldd r19,Y+6
 8076 2fee F901      		movw r30,r18
 8077 2ff0 2281      		ldd r18,Z+2
 8078 2ff2 3381      		ldd r19,Z+3
 8079 2ff4 FC01      		movw r30,r24
 8080 2ff6 3383      		std Z+3,r19
 8081 2ff8 2283      		std Z+2,r18
 8082 2ffa 00C0      		rjmp .L330
 8083               	.L329:
 8084               	.LBB2:
 908:lp_solve_5.5/lp_utils.c ****   }
 909:lp_solve_5.5/lp_utils.c ****   else {
 910:lp_solve_5.5/lp_utils.c ****     int j;
 911:lp_solve_5.5/lp_utils.c **** 
 912:lp_solve_5.5/lp_utils.c ****     createLink(newsize, &testmap, NULL);
 8085               		.loc 2 912 0
 8086 2ffc 9E01      		movw r18,r28
 8087 2ffe 2D5F      		subi r18,-3
 8088 3000 3F4F      		sbci r19,-1
 8089 3002 8F81      		ldd r24,Y+7
 8090 3004 9885      		ldd r25,Y+8
 8091 3006 40E0      		ldi r20,0
 8092 3008 50E0      		ldi r21,0
 8093 300a B901      		movw r22,r18
 8094 300c 0E94 0000 		call createLink
 913:lp_solve_5.5/lp_utils.c ****     for(j = firstActiveLink(sourcemap); (j != 0) && (j <= newsize); j = nextActiveLink(sourcemap, j
 8095               		.loc 2 913 0
 8096 3010 8D81      		ldd r24,Y+5
 8097 3012 9E81      		ldd r25,Y+6
 8098 3014 0E94 0000 		call firstActiveLink
 8099 3018 9A83      		std Y+2,r25
 8100 301a 8983      		std Y+1,r24
 8101 301c 00C0      		rjmp .L331
 8102               	.L332:
 914:lp_solve_5.5/lp_utils.c ****       appendLink(testmap, j);
 8103               		.loc 2 914 0 discriminator 4
 8104 301e 8B81      		ldd r24,Y+3
 8105 3020 9C81      		ldd r25,Y+4
 8106 3022 2981      		ldd r18,Y+1
 8107 3024 3A81      		ldd r19,Y+2
 8108 3026 B901      		movw r22,r18
 8109 3028 0E94 0000 		call appendLink
 913:lp_solve_5.5/lp_utils.c ****     for(j = firstActiveLink(sourcemap); (j != 0) && (j <= newsize); j = nextActiveLink(sourcemap, j
 8110               		.loc 2 913 0 discriminator 4
 8111 302c 8D81      		ldd r24,Y+5
 8112 302e 9E81      		ldd r25,Y+6
 8113 3030 2981      		ldd r18,Y+1
 8114 3032 3A81      		ldd r19,Y+2
 8115 3034 B901      		movw r22,r18
 8116 3036 0E94 0000 		call nextActiveLink
 8117 303a 9A83      		std Y+2,r25
 8118 303c 8983      		std Y+1,r24
 8119               	.L331:
 913:lp_solve_5.5/lp_utils.c ****     for(j = firstActiveLink(sourcemap); (j != 0) && (j <= newsize); j = nextActiveLink(sourcemap, j
 8120               		.loc 2 913 0 is_stmt 0 discriminator 1
 8121 303e 8981      		ldd r24,Y+1
 8122 3040 9A81      		ldd r25,Y+2
 8123 3042 892B      		or r24,r25
 8124 3044 01F0      		breq .L330
 913:lp_solve_5.5/lp_utils.c ****     for(j = firstActiveLink(sourcemap); (j != 0) && (j <= newsize); j = nextActiveLink(sourcemap, j
 8125               		.loc 2 913 0 discriminator 3
 8126 3046 2981      		ldd r18,Y+1
 8127 3048 3A81      		ldd r19,Y+2
 8128 304a 8F81      		ldd r24,Y+7
 8129 304c 9885      		ldd r25,Y+8
 8130 304e 8217      		cp r24,r18
 8131 3050 9307      		cpc r25,r19
 8132 3052 04F4      		brge .L332
 8133               	.L330:
 8134               	.LBE2:
 915:lp_solve_5.5/lp_utils.c ****   }
 916:lp_solve_5.5/lp_utils.c ****   if(freesource)
 8135               		.loc 2 916 0 is_stmt 1
 8136 3054 8985      		ldd r24,Y+9
 8137 3056 8823      		tst r24
 8138 3058 01F0      		breq .L333
 917:lp_solve_5.5/lp_utils.c ****     freeLink(&sourcemap);
 8139               		.loc 2 917 0
 8140 305a CE01      		movw r24,r28
 8141 305c 0596      		adiw r24,5
 8142 305e 0E94 0000 		call freeLink
 8143               	.L333:
 918:lp_solve_5.5/lp_utils.c **** 
 919:lp_solve_5.5/lp_utils.c ****   return(testmap);
 8144               		.loc 2 919 0
 8145 3062 8B81      		ldd r24,Y+3
 8146 3064 9C81      		ldd r25,Y+4
 8147               	/* epilogue start */
 920:lp_solve_5.5/lp_utils.c **** }
 8148               		.loc 2 920 0
 8149 3066 2996      		adiw r28,9
 8150 3068 0FB6      		in __tmp_reg__,__SREG__
 8151 306a F894      		cli
 8152 306c DEBF      		out __SP_H__,r29
 8153 306e 0FBE      		out __SREG__,__tmp_reg__
 8154 3070 CDBF      		out __SP_L__,r28
 8155 3072 DF91      		pop r29
 8156 3074 CF91      		pop r28
 8157 3076 0895      		ret
 8158               		.cfi_endproc
 8159               	.LFE55:
 8161               	.global	compareLink
 8163               	compareLink:
 8164               	.LFB56:
 921:lp_solve_5.5/lp_utils.c **** 
 922:lp_solve_5.5/lp_utils.c **** STATIC int compareLink(LLrec *linkmap1, LLrec *linkmap2)
 923:lp_solve_5.5/lp_utils.c **** {
 8165               		.loc 2 923 0
 8166               		.cfi_startproc
 8167 3078 CF93      		push r28
 8168               	.LCFI225:
 8169               		.cfi_def_cfa_offset 3
 8170               		.cfi_offset 28, -2
 8171 307a DF93      		push r29
 8172               	.LCFI226:
 8173               		.cfi_def_cfa_offset 4
 8174               		.cfi_offset 29, -3
 8175 307c 00D0      		rcall .
 8176 307e 00D0      		rcall .
 8177 3080 00D0      		rcall .
 8178               	.LCFI227:
 8179               		.cfi_def_cfa_offset 10
 8180 3082 CDB7      		in r28,__SP_L__
 8181 3084 DEB7      		in r29,__SP_H__
 8182               	.LCFI228:
 8183               		.cfi_def_cfa_register 28
 8184               	/* prologue: function */
 8185               	/* frame size = 6 */
 8186               	/* stack size = 8 */
 8187               	.L__stack_usage = 8
 8188 3086 9C83      		std Y+4,r25
 8189 3088 8B83      		std Y+3,r24
 8190 308a 7E83      		std Y+6,r23
 8191 308c 6D83      		std Y+5,r22
 924:lp_solve_5.5/lp_utils.c ****   int test;
 925:lp_solve_5.5/lp_utils.c **** 
 926:lp_solve_5.5/lp_utils.c ****   test = memcmp(&linkmap1->size, &linkmap2->size, sizeof(int));
 8192               		.loc 2 926 0
 8193 308e 2D81      		ldd r18,Y+5
 8194 3090 3E81      		ldd r19,Y+6
 8195 3092 8B81      		ldd r24,Y+3
 8196 3094 9C81      		ldd r25,Y+4
 8197 3096 42E0      		ldi r20,lo8(2)
 8198 3098 50E0      		ldi r21,0
 8199 309a B901      		movw r22,r18
 8200 309c 0E94 0000 		call memcmp
 8201 30a0 9A83      		std Y+2,r25
 8202 30a2 8983      		std Y+1,r24
 927:lp_solve_5.5/lp_utils.c ****   if(test == 0)
 8203               		.loc 2 927 0
 8204 30a4 8981      		ldd r24,Y+1
 8205 30a6 9A81      		ldd r25,Y+2
 8206 30a8 892B      		or r24,r25
 8207 30aa 01F4      		brne .L336
 928:lp_solve_5.5/lp_utils.c ****     test = memcmp(&linkmap1->count, &linkmap2->count, sizeof(int));
 8208               		.loc 2 928 0
 8209 30ac 8D81      		ldd r24,Y+5
 8210 30ae 9E81      		ldd r25,Y+6
 8211 30b0 9C01      		movw r18,r24
 8212 30b2 2E5F      		subi r18,-2
 8213 30b4 3F4F      		sbci r19,-1
 8214 30b6 8B81      		ldd r24,Y+3
 8215 30b8 9C81      		ldd r25,Y+4
 8216 30ba 0296      		adiw r24,2
 8217 30bc 42E0      		ldi r20,lo8(2)
 8218 30be 50E0      		ldi r21,0
 8219 30c0 B901      		movw r22,r18
 8220 30c2 0E94 0000 		call memcmp
 8221 30c6 9A83      		std Y+2,r25
 8222 30c8 8983      		std Y+1,r24
 8223               	.L336:
 929:lp_solve_5.5/lp_utils.c ****     if(test == 0)
 8224               		.loc 2 929 0
 8225 30ca 8981      		ldd r24,Y+1
 8226 30cc 9A81      		ldd r25,Y+2
 8227 30ce 892B      		or r24,r25
 8228 30d0 01F4      		brne .L337
 930:lp_solve_5.5/lp_utils.c ****       test = memcmp(linkmap1->map, linkmap2->map, sizeof(int)*(2*linkmap1->size+1));
 8229               		.loc 2 930 0
 8230 30d2 8B81      		ldd r24,Y+3
 8231 30d4 9C81      		ldd r25,Y+4
 8232 30d6 FC01      		movw r30,r24
 8233 30d8 8081      		ld r24,Z
 8234 30da 9181      		ldd r25,Z+1
 8235 30dc 880F      		lsl r24
 8236 30de 991F      		rol r25
 8237 30e0 880F      		lsl r24
 8238 30e2 991F      		rol r25
 8239 30e4 0296      		adiw r24,2
 8240 30e6 AC01      		movw r20,r24
 8241 30e8 8D81      		ldd r24,Y+5
 8242 30ea 9E81      		ldd r25,Y+6
 8243 30ec FC01      		movw r30,r24
 8244 30ee 2085      		ldd r18,Z+8
 8245 30f0 3185      		ldd r19,Z+9
 8246 30f2 8B81      		ldd r24,Y+3
 8247 30f4 9C81      		ldd r25,Y+4
 8248 30f6 FC01      		movw r30,r24
 8249 30f8 8085      		ldd r24,Z+8
 8250 30fa 9185      		ldd r25,Z+9
 8251 30fc B901      		movw r22,r18
 8252 30fe 0E94 0000 		call memcmp
 8253 3102 9A83      		std Y+2,r25
 8254 3104 8983      		std Y+1,r24
 8255               	.L337:
 931:lp_solve_5.5/lp_utils.c **** 
 932:lp_solve_5.5/lp_utils.c ****   return( test );
 8256               		.loc 2 932 0
 8257 3106 8981      		ldd r24,Y+1
 8258 3108 9A81      		ldd r25,Y+2
 8259               	/* epilogue start */
 933:lp_solve_5.5/lp_utils.c **** }
 8260               		.loc 2 933 0
 8261 310a 2696      		adiw r28,6
 8262 310c 0FB6      		in __tmp_reg__,__SREG__
 8263 310e F894      		cli
 8264 3110 DEBF      		out __SP_H__,r29
 8265 3112 0FBE      		out __SREG__,__tmp_reg__
 8266 3114 CDBF      		out __SP_L__,r28
 8267 3116 DF91      		pop r29
 8268 3118 CF91      		pop r28
 8269 311a 0895      		ret
 8270               		.cfi_endproc
 8271               	.LFE56:
 8273               	.global	verifyLink
 8275               	verifyLink:
 8276               	.LFB57:
 934:lp_solve_5.5/lp_utils.c **** 
 935:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL verifyLink(LLrec *linkmap, int itemnr, MYBOOL doappend)
 936:lp_solve_5.5/lp_utils.c **** {
 8277               		.loc 2 936 0
 8278               		.cfi_startproc
 8279 311c CF93      		push r28
 8280               	.LCFI229:
 8281               		.cfi_def_cfa_offset 3
 8282               		.cfi_offset 28, -2
 8283 311e DF93      		push r29
 8284               	.LCFI230:
 8285               		.cfi_def_cfa_offset 4
 8286               		.cfi_offset 29, -3
 8287 3120 CDB7      		in r28,__SP_L__
 8288 3122 DEB7      		in r29,__SP_H__
 8289               	.LCFI231:
 8290               		.cfi_def_cfa_register 28
 8291 3124 2997      		sbiw r28,9
 8292               	.LCFI232:
 8293               		.cfi_def_cfa_offset 13
 8294 3126 0FB6      		in __tmp_reg__,__SREG__
 8295 3128 F894      		cli
 8296 312a DEBF      		out __SP_H__,r29
 8297 312c 0FBE      		out __SREG__,__tmp_reg__
 8298 312e CDBF      		out __SP_L__,r28
 8299               	/* prologue: function */
 8300               	/* frame size = 9 */
 8301               	/* stack size = 11 */
 8302               	.L__stack_usage = 11
 8303 3130 9E83      		std Y+6,r25
 8304 3132 8D83      		std Y+5,r24
 8305 3134 7887      		std Y+8,r23
 8306 3136 6F83      		std Y+7,r22
 8307 3138 4987      		std Y+9,r20
 937:lp_solve_5.5/lp_utils.c ****   LLrec *testmap;
 938:lp_solve_5.5/lp_utils.c **** 
 939:lp_solve_5.5/lp_utils.c ****   testmap = cloneLink(linkmap, -1, FALSE);
 8308               		.loc 2 939 0
 8309 313a 8D81      		ldd r24,Y+5
 8310 313c 9E81      		ldd r25,Y+6
 8311 313e 40E0      		ldi r20,0
 8312 3140 6FEF      		ldi r22,lo8(-1)
 8313 3142 7FEF      		ldi r23,lo8(-1)
 8314 3144 0E94 0000 		call cloneLink
 8315 3148 9C83      		std Y+4,r25
 8316 314a 8B83      		std Y+3,r24
 940:lp_solve_5.5/lp_utils.c ****   if(doappend) {
 8317               		.loc 2 940 0
 8318 314c 8985      		ldd r24,Y+9
 8319 314e 8823      		tst r24
 8320 3150 01F0      		breq .L340
 941:lp_solve_5.5/lp_utils.c ****     appendLink(testmap, itemnr);
 8321               		.loc 2 941 0
 8322 3152 8B81      		ldd r24,Y+3
 8323 3154 9C81      		ldd r25,Y+4
 8324 3156 2F81      		ldd r18,Y+7
 8325 3158 3885      		ldd r19,Y+8
 8326 315a B901      		movw r22,r18
 8327 315c 0E94 0000 		call appendLink
 942:lp_solve_5.5/lp_utils.c ****     removeLink(testmap, itemnr);
 8328               		.loc 2 942 0
 8329 3160 8B81      		ldd r24,Y+3
 8330 3162 9C81      		ldd r25,Y+4
 8331 3164 2F81      		ldd r18,Y+7
 8332 3166 3885      		ldd r19,Y+8
 8333 3168 B901      		movw r22,r18
 8334 316a 0E94 0000 		call removeLink
 8335 316e 00C0      		rjmp .L341
 8336               	.L340:
 8337               	.LBB3:
 943:lp_solve_5.5/lp_utils.c ****   }
 944:lp_solve_5.5/lp_utils.c ****   else {
 945:lp_solve_5.5/lp_utils.c ****     int previtem = prevActiveLink(testmap, itemnr);
 8338               		.loc 2 945 0
 8339 3170 8B81      		ldd r24,Y+3
 8340 3172 9C81      		ldd r25,Y+4
 8341 3174 2F81      		ldd r18,Y+7
 8342 3176 3885      		ldd r19,Y+8
 8343 3178 B901      		movw r22,r18
 8344 317a 0E94 0000 		call prevActiveLink
 8345 317e 9A83      		std Y+2,r25
 8346 3180 8983      		std Y+1,r24
 946:lp_solve_5.5/lp_utils.c ****     removeLink(testmap, itemnr);
 8347               		.loc 2 946 0
 8348 3182 8B81      		ldd r24,Y+3
 8349 3184 9C81      		ldd r25,Y+4
 8350 3186 2F81      		ldd r18,Y+7
 8351 3188 3885      		ldd r19,Y+8
 8352 318a B901      		movw r22,r18
 8353 318c 0E94 0000 		call removeLink
 947:lp_solve_5.5/lp_utils.c ****     insertLink(testmap, previtem, itemnr);
 8354               		.loc 2 947 0
 8355 3190 8B81      		ldd r24,Y+3
 8356 3192 9C81      		ldd r25,Y+4
 8357 3194 4F81      		ldd r20,Y+7
 8358 3196 5885      		ldd r21,Y+8
 8359 3198 2981      		ldd r18,Y+1
 8360 319a 3A81      		ldd r19,Y+2
 8361 319c B901      		movw r22,r18
 8362 319e 0E94 0000 		call insertLink
 8363               	.L341:
 8364               	.LBE3:
 948:lp_solve_5.5/lp_utils.c ****   }
 949:lp_solve_5.5/lp_utils.c ****   itemnr = compareLink(linkmap, testmap);
 8365               		.loc 2 949 0
 8366 31a2 2B81      		ldd r18,Y+3
 8367 31a4 3C81      		ldd r19,Y+4
 8368 31a6 8D81      		ldd r24,Y+5
 8369 31a8 9E81      		ldd r25,Y+6
 8370 31aa B901      		movw r22,r18
 8371 31ac 0E94 0000 		call compareLink
 8372 31b0 9887      		std Y+8,r25
 8373 31b2 8F83      		std Y+7,r24
 950:lp_solve_5.5/lp_utils.c ****   freeLink(&testmap);
 8374               		.loc 2 950 0
 8375 31b4 CE01      		movw r24,r28
 8376 31b6 0396      		adiw r24,3
 8377 31b8 0E94 0000 		call freeLink
 951:lp_solve_5.5/lp_utils.c ****   return((MYBOOL) (itemnr == 0));
 8378               		.loc 2 951 0
 8379 31bc 21E0      		ldi r18,lo8(1)
 8380 31be 8F81      		ldd r24,Y+7
 8381 31c0 9885      		ldd r25,Y+8
 8382 31c2 892B      		or r24,r25
 8383 31c4 01F0      		breq .L342
 8384 31c6 20E0      		ldi r18,0
 8385               	.L342:
 8386 31c8 822F      		mov r24,r18
 8387               	/* epilogue start */
 952:lp_solve_5.5/lp_utils.c **** }
 8388               		.loc 2 952 0
 8389 31ca 2996      		adiw r28,9
 8390 31cc 0FB6      		in __tmp_reg__,__SREG__
 8391 31ce F894      		cli
 8392 31d0 DEBF      		out __SP_H__,r29
 8393 31d2 0FBE      		out __SREG__,__tmp_reg__
 8394 31d4 CDBF      		out __SP_L__,r28
 8395 31d6 DF91      		pop r29
 8396 31d8 CF91      		pop r28
 8397 31da 0895      		ret
 8398               		.cfi_endproc
 8399               	.LFE57:
 8401               	.global	createPackedVector
 8403               	createPackedVector:
 8404               	.LFB58:
 953:lp_solve_5.5/lp_utils.c **** 
 954:lp_solve_5.5/lp_utils.c **** /* Packed vector routines */
 955:lp_solve_5.5/lp_utils.c **** STATIC PVrec *createPackedVector(int size, REAL *values, int *workvector)
 956:lp_solve_5.5/lp_utils.c **** {
 8405               		.loc 2 956 0
 8406               		.cfi_startproc
 8407 31dc CF92      		push r12
 8408               	.LCFI233:
 8409               		.cfi_def_cfa_offset 3
 8410               		.cfi_offset 12, -2
 8411 31de DF92      		push r13
 8412               	.LCFI234:
 8413               		.cfi_def_cfa_offset 4
 8414               		.cfi_offset 13, -3
 8415 31e0 EF92      		push r14
 8416               	.LCFI235:
 8417               		.cfi_def_cfa_offset 5
 8418               		.cfi_offset 14, -4
 8419 31e2 FF92      		push r15
 8420               	.LCFI236:
 8421               		.cfi_def_cfa_offset 6
 8422               		.cfi_offset 15, -5
 8423 31e4 CF93      		push r28
 8424               	.LCFI237:
 8425               		.cfi_def_cfa_offset 7
 8426               		.cfi_offset 28, -6
 8427 31e6 DF93      		push r29
 8428               	.LCFI238:
 8429               		.cfi_def_cfa_offset 8
 8430               		.cfi_offset 29, -7
 8431 31e8 CDB7      		in r28,__SP_L__
 8432 31ea DEB7      		in r29,__SP_H__
 8433               	.LCFI239:
 8434               		.cfi_def_cfa_register 28
 8435 31ec 2D97      		sbiw r28,13
 8436               	.LCFI240:
 8437               		.cfi_def_cfa_offset 21
 8438 31ee 0FB6      		in __tmp_reg__,__SREG__
 8439 31f0 F894      		cli
 8440 31f2 DEBF      		out __SP_H__,r29
 8441 31f4 0FBE      		out __SREG__,__tmp_reg__
 8442 31f6 CDBF      		out __SP_L__,r28
 8443               	/* prologue: function */
 8444               	/* frame size = 13 */
 8445               	/* stack size = 19 */
 8446               	.L__stack_usage = 19
 8447 31f8 9987      		std Y+9,r25
 8448 31fa 8887      		std Y+8,r24
 8449 31fc 7B87      		std Y+11,r23
 8450 31fe 6A87      		std Y+10,r22
 8451 3200 5D87      		std Y+13,r21
 8452 3202 4C87      		std Y+12,r20
 957:lp_solve_5.5/lp_utils.c ****   int      i, k;
 958:lp_solve_5.5/lp_utils.c ****   REGISTER REAL  ref;
 959:lp_solve_5.5/lp_utils.c ****   PVrec    *newPV = NULL;
 8453               		.loc 2 959 0
 8454 3204 1E82      		std Y+6,__zero_reg__
 8455 3206 1D82      		std Y+5,__zero_reg__
 960:lp_solve_5.5/lp_utils.c ****   MYBOOL   localWV = (MYBOOL) (workvector == NULL);
 8456               		.loc 2 960 0
 8457 3208 21E0      		ldi r18,lo8(1)
 8458 320a 8C85      		ldd r24,Y+12
 8459 320c 9D85      		ldd r25,Y+13
 8460 320e 892B      		or r24,r25
 8461 3210 01F0      		breq .L345
 8462 3212 20E0      		ldi r18,0
 8463               	.L345:
 8464 3214 2F83      		std Y+7,r18
 961:lp_solve_5.5/lp_utils.c **** 
 962:lp_solve_5.5/lp_utils.c ****   if(localWV)
 8465               		.loc 2 962 0
 8466 3216 8F81      		ldd r24,Y+7
 8467 3218 8823      		tst r24
 8468 321a 01F0      		breq .L346
 963:lp_solve_5.5/lp_utils.c ****     workvector = (int *) malloc((size+1)*sizeof(*workvector));
 8469               		.loc 2 963 0
 8470 321c 8885      		ldd r24,Y+8
 8471 321e 9985      		ldd r25,Y+9
 8472 3220 0196      		adiw r24,1
 8473 3222 880F      		lsl r24
 8474 3224 991F      		rol r25
 8475 3226 0E94 0000 		call malloc
 8476 322a 9D87      		std Y+13,r25
 8477 322c 8C87      		std Y+12,r24
 8478               	.L346:
 964:lp_solve_5.5/lp_utils.c **** 
 965:lp_solve_5.5/lp_utils.c ****   /* Tally equal-valued vector entries - also check if it is worth compressing */
 966:lp_solve_5.5/lp_utils.c ****   k = 0;
 8479               		.loc 2 966 0
 8480 322e 1C82      		std Y+4,__zero_reg__
 8481 3230 1B82      		std Y+3,__zero_reg__
 967:lp_solve_5.5/lp_utils.c ****   workvector[k] = 1;
 8482               		.loc 2 967 0
 8483 3232 8B81      		ldd r24,Y+3
 8484 3234 9C81      		ldd r25,Y+4
 8485 3236 880F      		lsl r24
 8486 3238 991F      		rol r25
 8487 323a 2C85      		ldd r18,Y+12
 8488 323c 3D85      		ldd r19,Y+13
 8489 323e 820F      		add r24,r18
 8490 3240 931F      		adc r25,r19
 8491 3242 21E0      		ldi r18,lo8(1)
 8492 3244 30E0      		ldi r19,0
 8493 3246 FC01      		movw r30,r24
 8494 3248 3183      		std Z+1,r19
 8495 324a 2083      		st Z,r18
 968:lp_solve_5.5/lp_utils.c ****   ref = values[1];
 8496               		.loc 2 968 0
 8497 324c 8A85      		ldd r24,Y+10
 8498 324e 9B85      		ldd r25,Y+11
 8499 3250 FC01      		movw r30,r24
 8500 3252 C480      		ldd r12,Z+4
 8501 3254 D580      		ldd r13,Z+5
 8502 3256 E680      		ldd r14,Z+6
 8503 3258 F780      		ldd r15,Z+7
 969:lp_solve_5.5/lp_utils.c ****   for(i = 2; i <= size; i++) {
 8504               		.loc 2 969 0
 8505 325a 82E0      		ldi r24,lo8(2)
 8506 325c 90E0      		ldi r25,0
 8507 325e 9A83      		std Y+2,r25
 8508 3260 8983      		std Y+1,r24
 8509 3262 00C0      		rjmp .L347
 8510               	.L350:
 970:lp_solve_5.5/lp_utils.c ****     if(fabs(ref - values[i]) > DEF_EPSMACHINE) {
 8511               		.loc 2 970 0
 8512 3264 8981      		ldd r24,Y+1
 8513 3266 9A81      		ldd r25,Y+2
 8514 3268 880F      		lsl r24
 8515 326a 991F      		rol r25
 8516 326c 880F      		lsl r24
 8517 326e 991F      		rol r25
 8518 3270 2A85      		ldd r18,Y+10
 8519 3272 3B85      		ldd r19,Y+11
 8520 3274 820F      		add r24,r18
 8521 3276 931F      		adc r25,r19
 8522 3278 FC01      		movw r30,r24
 8523 327a 8081      		ld r24,Z
 8524 327c 9181      		ldd r25,Z+1
 8525 327e A281      		ldd r26,Z+2
 8526 3280 B381      		ldd r27,Z+3
 8527 3282 9C01      		movw r18,r24
 8528 3284 AD01      		movw r20,r26
 8529 3286 C701      		movw r24,r14
 8530 3288 B601      		movw r22,r12
 8531 328a 0E94 0000 		call __subsf3
 8532 328e DC01      		movw r26,r24
 8533 3290 CB01      		movw r24,r22
 8534 3292 BF77      		andi r27,0x7f
 8535 3294 26ED      		ldi r18,lo8(-42)
 8536 3296 32EF      		ldi r19,lo8(-14)
 8537 3298 4FE7      		ldi r20,lo8(127)
 8538 329a 55E2      		ldi r21,lo8(37)
 8539 329c BC01      		movw r22,r24
 8540 329e CD01      		movw r24,r26
 8541 32a0 0E94 0000 		call __gtsf2
 8542 32a4 1816      		cp __zero_reg__,r24
 8543 32a6 04F4      		brge .L348
 971:lp_solve_5.5/lp_utils.c ****       k++;
 8544               		.loc 2 971 0
 8545 32a8 8B81      		ldd r24,Y+3
 8546 32aa 9C81      		ldd r25,Y+4
 8547 32ac 0196      		adiw r24,1
 8548 32ae 9C83      		std Y+4,r25
 8549 32b0 8B83      		std Y+3,r24
 972:lp_solve_5.5/lp_utils.c ****       workvector[k] = i;
 8550               		.loc 2 972 0
 8551 32b2 8B81      		ldd r24,Y+3
 8552 32b4 9C81      		ldd r25,Y+4
 8553 32b6 880F      		lsl r24
 8554 32b8 991F      		rol r25
 8555 32ba 2C85      		ldd r18,Y+12
 8556 32bc 3D85      		ldd r19,Y+13
 8557 32be 820F      		add r24,r18
 8558 32c0 931F      		adc r25,r19
 8559 32c2 2981      		ldd r18,Y+1
 8560 32c4 3A81      		ldd r19,Y+2
 8561 32c6 FC01      		movw r30,r24
 8562 32c8 3183      		std Z+1,r19
 8563 32ca 2083      		st Z,r18
 973:lp_solve_5.5/lp_utils.c ****       ref = values[i];
 8564               		.loc 2 973 0
 8565 32cc 8981      		ldd r24,Y+1
 8566 32ce 9A81      		ldd r25,Y+2
 8567 32d0 880F      		lsl r24
 8568 32d2 991F      		rol r25
 8569 32d4 880F      		lsl r24
 8570 32d6 991F      		rol r25
 8571 32d8 2A85      		ldd r18,Y+10
 8572 32da 3B85      		ldd r19,Y+11
 8573 32dc 820F      		add r24,r18
 8574 32de 931F      		adc r25,r19
 8575 32e0 FC01      		movw r30,r24
 8576 32e2 C080      		ld r12,Z
 8577 32e4 D180      		ldd r13,Z+1
 8578 32e6 E280      		ldd r14,Z+2
 8579 32e8 F380      		ldd r15,Z+3
 8580               	.L348:
 969:lp_solve_5.5/lp_utils.c ****     if(fabs(ref - values[i]) > DEF_EPSMACHINE) {
 8581               		.loc 2 969 0 discriminator 2
 8582 32ea 8981      		ldd r24,Y+1
 8583 32ec 9A81      		ldd r25,Y+2
 8584 32ee 0196      		adiw r24,1
 8585 32f0 9A83      		std Y+2,r25
 8586 32f2 8983      		std Y+1,r24
 8587               	.L347:
 969:lp_solve_5.5/lp_utils.c ****     if(fabs(ref - values[i]) > DEF_EPSMACHINE) {
 8588               		.loc 2 969 0 is_stmt 0 discriminator 1
 8589 32f4 2981      		ldd r18,Y+1
 8590 32f6 3A81      		ldd r19,Y+2
 8591 32f8 8885      		ldd r24,Y+8
 8592 32fa 9985      		ldd r25,Y+9
 8593 32fc 8217      		cp r24,r18
 8594 32fe 9307      		cpc r25,r19
 8595 3300 04F0      		brlt .+2
 8596 3302 00C0      		rjmp .L350
 974:lp_solve_5.5/lp_utils.c ****     }
 975:lp_solve_5.5/lp_utils.c ****   }
 976:lp_solve_5.5/lp_utils.c ****   if(k > size / 2) {
 8597               		.loc 2 976 0 is_stmt 1
 8598 3304 8885      		ldd r24,Y+8
 8599 3306 9985      		ldd r25,Y+9
 8600 3308 9923      		tst r25
 8601 330a 04F4      		brge .L351
 8602 330c 0196      		adiw r24,1
 8603               	.L351:
 8604 330e 9595      		asr r25
 8605 3310 8795      		ror r24
 8606 3312 9C01      		movw r18,r24
 8607 3314 8B81      		ldd r24,Y+3
 8608 3316 9C81      		ldd r25,Y+4
 8609 3318 2817      		cp r18,r24
 8610 331a 3907      		cpc r19,r25
 8611 331c 04F4      		brge .L352
 977:lp_solve_5.5/lp_utils.c ****     if(localWV)
 8612               		.loc 2 977 0
 8613 331e 8F81      		ldd r24,Y+7
 8614 3320 8823      		tst r24
 8615 3322 01F0      		breq .L353
 978:lp_solve_5.5/lp_utils.c ****       FREE(workvector);
 8616               		.loc 2 978 0
 8617 3324 8C85      		ldd r24,Y+12
 8618 3326 9D85      		ldd r25,Y+13
 8619 3328 892B      		or r24,r25
 8620 332a 01F0      		breq .L353
 8621               		.loc 2 978 0 is_stmt 0 discriminator 1
 8622 332c 8C85      		ldd r24,Y+12
 8623 332e 9D85      		ldd r25,Y+13
 8624 3330 0E94 0000 		call free
 8625 3334 1D86      		std Y+13,__zero_reg__
 8626 3336 1C86      		std Y+12,__zero_reg__
 8627               	.L353:
 979:lp_solve_5.5/lp_utils.c ****     return( newPV );
 8628               		.loc 2 979 0 is_stmt 1
 8629 3338 8D81      		ldd r24,Y+5
 8630 333a 9E81      		ldd r25,Y+6
 8631 333c 00C0      		rjmp .L354
 8632               	.L352:
 980:lp_solve_5.5/lp_utils.c ****   }
 981:lp_solve_5.5/lp_utils.c **** 
 982:lp_solve_5.5/lp_utils.c ****   /* Create the packing object, adjust the position vector and allocate value vector */
 983:lp_solve_5.5/lp_utils.c ****   newPV = (PVrec *) malloc(sizeof(*newPV));
 8633               		.loc 2 983 0
 8634 333e 88E0      		ldi r24,lo8(8)
 8635 3340 90E0      		ldi r25,0
 8636 3342 0E94 0000 		call malloc
 8637 3346 9E83      		std Y+6,r25
 8638 3348 8D83      		std Y+5,r24
 984:lp_solve_5.5/lp_utils.c ****   k++;                            /* Adjust from index to to count */
 8639               		.loc 2 984 0
 8640 334a 8B81      		ldd r24,Y+3
 8641 334c 9C81      		ldd r25,Y+4
 8642 334e 0196      		adiw r24,1
 8643 3350 9C83      		std Y+4,r25
 8644 3352 8B83      		std Y+3,r24
 985:lp_solve_5.5/lp_utils.c ****   newPV->count = k;
 8645               		.loc 2 985 0
 8646 3354 8D81      		ldd r24,Y+5
 8647 3356 9E81      		ldd r25,Y+6
 8648 3358 2B81      		ldd r18,Y+3
 8649 335a 3C81      		ldd r19,Y+4
 8650 335c FC01      		movw r30,r24
 8651 335e 3183      		std Z+1,r19
 8652 3360 2083      		st Z,r18
 986:lp_solve_5.5/lp_utils.c ****   if(localWV)
 8653               		.loc 2 986 0
 8654 3362 8F81      		ldd r24,Y+7
 8655 3364 8823      		tst r24
 8656 3366 01F0      		breq .L355
 987:lp_solve_5.5/lp_utils.c ****     newPV->startpos = (int *) realloc(workvector, (k + 1)*sizeof(*(newPV->startpos)));
 8657               		.loc 2 987 0
 8658 3368 8B81      		ldd r24,Y+3
 8659 336a 9C81      		ldd r25,Y+4
 8660 336c 0196      		adiw r24,1
 8661 336e 9C01      		movw r18,r24
 8662 3370 220F      		lsl r18
 8663 3372 331F      		rol r19
 8664 3374 8C85      		ldd r24,Y+12
 8665 3376 9D85      		ldd r25,Y+13
 8666 3378 B901      		movw r22,r18
 8667 337a 0E94 0000 		call realloc
 8668 337e 9C01      		movw r18,r24
 8669 3380 8D81      		ldd r24,Y+5
 8670 3382 9E81      		ldd r25,Y+6
 8671 3384 FC01      		movw r30,r24
 8672 3386 3383      		std Z+3,r19
 8673 3388 2283      		std Z+2,r18
 8674 338a 00C0      		rjmp .L356
 8675               	.L355:
 988:lp_solve_5.5/lp_utils.c ****   else {
 989:lp_solve_5.5/lp_utils.c ****     newPV->startpos = (int *) malloc((k + 1)*sizeof(*(newPV->startpos)));
 8676               		.loc 2 989 0
 8677 338c 8B81      		ldd r24,Y+3
 8678 338e 9C81      		ldd r25,Y+4
 8679 3390 0196      		adiw r24,1
 8680 3392 880F      		lsl r24
 8681 3394 991F      		rol r25
 8682 3396 0E94 0000 		call malloc
 8683 339a 9C01      		movw r18,r24
 8684 339c 8D81      		ldd r24,Y+5
 8685 339e 9E81      		ldd r25,Y+6
 8686 33a0 FC01      		movw r30,r24
 8687 33a2 3383      		std Z+3,r19
 8688 33a4 2283      		std Z+2,r18
 990:lp_solve_5.5/lp_utils.c ****     MEMCOPY(newPV->startpos, workvector, k);
 8689               		.loc 2 990 0
 8690 33a6 8B81      		ldd r24,Y+3
 8691 33a8 9C81      		ldd r25,Y+4
 8692 33aa AC01      		movw r20,r24
 8693 33ac 440F      		lsl r20
 8694 33ae 551F      		rol r21
 8695 33b0 8D81      		ldd r24,Y+5
 8696 33b2 9E81      		ldd r25,Y+6
 8697 33b4 FC01      		movw r30,r24
 8698 33b6 8281      		ldd r24,Z+2
 8699 33b8 9381      		ldd r25,Z+3
 8700 33ba 2C85      		ldd r18,Y+12
 8701 33bc 3D85      		ldd r19,Y+13
 8702 33be B901      		movw r22,r18
 8703 33c0 0E94 0000 		call memcpy
 8704               	.L356:
 991:lp_solve_5.5/lp_utils.c ****   }
 992:lp_solve_5.5/lp_utils.c ****   newPV->startpos[k] = size + 1;  /* Store terminal index + 1 for searching purposes */
 8705               		.loc 2 992 0
 8706 33c4 8D81      		ldd r24,Y+5
 8707 33c6 9E81      		ldd r25,Y+6
 8708 33c8 FC01      		movw r30,r24
 8709 33ca 2281      		ldd r18,Z+2
 8710 33cc 3381      		ldd r19,Z+3
 8711 33ce 8B81      		ldd r24,Y+3
 8712 33d0 9C81      		ldd r25,Y+4
 8713 33d2 880F      		lsl r24
 8714 33d4 991F      		rol r25
 8715 33d6 820F      		add r24,r18
 8716 33d8 931F      		adc r25,r19
 8717 33da 2885      		ldd r18,Y+8
 8718 33dc 3985      		ldd r19,Y+9
 8719 33de 2F5F      		subi r18,-1
 8720 33e0 3F4F      		sbci r19,-1
 8721 33e2 FC01      		movw r30,r24
 8722 33e4 3183      		std Z+1,r19
 8723 33e6 2083      		st Z,r18
 993:lp_solve_5.5/lp_utils.c ****   newPV->value = (REAL *) malloc(k*sizeof(*(newPV->value)));
 8724               		.loc 2 993 0
 8725 33e8 8B81      		ldd r24,Y+3
 8726 33ea 9C81      		ldd r25,Y+4
 8727 33ec 880F      		lsl r24
 8728 33ee 991F      		rol r25
 8729 33f0 880F      		lsl r24
 8730 33f2 991F      		rol r25
 8731 33f4 0E94 0000 		call malloc
 8732 33f8 9C01      		movw r18,r24
 8733 33fa 8D81      		ldd r24,Y+5
 8734 33fc 9E81      		ldd r25,Y+6
 8735 33fe FC01      		movw r30,r24
 8736 3400 3583      		std Z+5,r19
 8737 3402 2483      		std Z+4,r18
 994:lp_solve_5.5/lp_utils.c **** 
 995:lp_solve_5.5/lp_utils.c ****   /* Fill the values vector before returning */
 996:lp_solve_5.5/lp_utils.c ****   for(i = 0; i < k; i++)
 8738               		.loc 2 996 0
 8739 3404 1A82      		std Y+2,__zero_reg__
 8740 3406 1982      		std Y+1,__zero_reg__
 8741 3408 00C0      		rjmp .L357
 8742               	.L358:
 997:lp_solve_5.5/lp_utils.c ****     newPV->value[i] = values[newPV->startpos[i]];
 8743               		.loc 2 997 0 discriminator 3
 8744 340a 8D81      		ldd r24,Y+5
 8745 340c 9E81      		ldd r25,Y+6
 8746 340e FC01      		movw r30,r24
 8747 3410 2481      		ldd r18,Z+4
 8748 3412 3581      		ldd r19,Z+5
 8749 3414 8981      		ldd r24,Y+1
 8750 3416 9A81      		ldd r25,Y+2
 8751 3418 880F      		lsl r24
 8752 341a 991F      		rol r25
 8753 341c 880F      		lsl r24
 8754 341e 991F      		rol r25
 8755 3420 280F      		add r18,r24
 8756 3422 391F      		adc r19,r25
 8757 3424 8D81      		ldd r24,Y+5
 8758 3426 9E81      		ldd r25,Y+6
 8759 3428 FC01      		movw r30,r24
 8760 342a 4281      		ldd r20,Z+2
 8761 342c 5381      		ldd r21,Z+3
 8762 342e 8981      		ldd r24,Y+1
 8763 3430 9A81      		ldd r25,Y+2
 8764 3432 880F      		lsl r24
 8765 3434 991F      		rol r25
 8766 3436 840F      		add r24,r20
 8767 3438 951F      		adc r25,r21
 8768 343a FC01      		movw r30,r24
 8769 343c 8081      		ld r24,Z
 8770 343e 9181      		ldd r25,Z+1
 8771 3440 880F      		lsl r24
 8772 3442 991F      		rol r25
 8773 3444 880F      		lsl r24
 8774 3446 991F      		rol r25
 8775 3448 4A85      		ldd r20,Y+10
 8776 344a 5B85      		ldd r21,Y+11
 8777 344c 840F      		add r24,r20
 8778 344e 951F      		adc r25,r21
 8779 3450 FC01      		movw r30,r24
 8780 3452 8081      		ld r24,Z
 8781 3454 9181      		ldd r25,Z+1
 8782 3456 A281      		ldd r26,Z+2
 8783 3458 B381      		ldd r27,Z+3
 8784 345a F901      		movw r30,r18
 8785 345c 8083      		st Z,r24
 8786 345e 9183      		std Z+1,r25
 8787 3460 A283      		std Z+2,r26
 8788 3462 B383      		std Z+3,r27
 996:lp_solve_5.5/lp_utils.c ****     newPV->value[i] = values[newPV->startpos[i]];
 8789               		.loc 2 996 0 discriminator 3
 8790 3464 8981      		ldd r24,Y+1
 8791 3466 9A81      		ldd r25,Y+2
 8792 3468 0196      		adiw r24,1
 8793 346a 9A83      		std Y+2,r25
 8794 346c 8983      		std Y+1,r24
 8795               	.L357:
 996:lp_solve_5.5/lp_utils.c ****     newPV->value[i] = values[newPV->startpos[i]];
 8796               		.loc 2 996 0 is_stmt 0 discriminator 1
 8797 346e 2981      		ldd r18,Y+1
 8798 3470 3A81      		ldd r19,Y+2
 8799 3472 8B81      		ldd r24,Y+3
 8800 3474 9C81      		ldd r25,Y+4
 8801 3476 2817      		cp r18,r24
 8802 3478 3907      		cpc r19,r25
 8803 347a 04F0      		brlt .L358
 998:lp_solve_5.5/lp_utils.c **** 
 999:lp_solve_5.5/lp_utils.c ****   return( newPV );
 8804               		.loc 2 999 0 is_stmt 1
 8805 347c 8D81      		ldd r24,Y+5
 8806 347e 9E81      		ldd r25,Y+6
 8807               	.L354:
 8808               	/* epilogue start */
1000:lp_solve_5.5/lp_utils.c **** }
 8809               		.loc 2 1000 0
 8810 3480 2D96      		adiw r28,13
 8811 3482 0FB6      		in __tmp_reg__,__SREG__
 8812 3484 F894      		cli
 8813 3486 DEBF      		out __SP_H__,r29
 8814 3488 0FBE      		out __SREG__,__tmp_reg__
 8815 348a CDBF      		out __SP_L__,r28
 8816 348c DF91      		pop r29
 8817 348e CF91      		pop r28
 8818 3490 FF90      		pop r15
 8819 3492 EF90      		pop r14
 8820 3494 DF90      		pop r13
 8821 3496 CF90      		pop r12
 8822 3498 0895      		ret
 8823               		.cfi_endproc
 8824               	.LFE58:
 8826               	.global	unpackPackedVector
 8828               	unpackPackedVector:
 8829               	.LFB59:
1001:lp_solve_5.5/lp_utils.c **** 
1002:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL unpackPackedVector(PVrec *PV, REAL **target)
1003:lp_solve_5.5/lp_utils.c **** {
 8830               		.loc 2 1003 0
 8831               		.cfi_startproc
 8832 349a EF92      		push r14
 8833               	.LCFI241:
 8834               		.cfi_def_cfa_offset 3
 8835               		.cfi_offset 14, -2
 8836 349c FF92      		push r15
 8837               	.LCFI242:
 8838               		.cfi_def_cfa_offset 4
 8839               		.cfi_offset 15, -3
 8840 349e 0F93      		push r16
 8841               	.LCFI243:
 8842               		.cfi_def_cfa_offset 5
 8843               		.cfi_offset 16, -4
 8844 34a0 1F93      		push r17
 8845               	.LCFI244:
 8846               		.cfi_def_cfa_offset 6
 8847               		.cfi_offset 17, -5
 8848 34a2 CF93      		push r28
 8849               	.LCFI245:
 8850               		.cfi_def_cfa_offset 7
 8851               		.cfi_offset 28, -6
 8852 34a4 DF93      		push r29
 8853               	.LCFI246:
 8854               		.cfi_def_cfa_offset 8
 8855               		.cfi_offset 29, -7
 8856 34a6 CDB7      		in r28,__SP_L__
 8857 34a8 DEB7      		in r29,__SP_H__
 8858               	.LCFI247:
 8859               		.cfi_def_cfa_register 28
 8860 34aa 2A97      		sbiw r28,10
 8861               	.LCFI248:
 8862               		.cfi_def_cfa_offset 18
 8863 34ac 0FB6      		in __tmp_reg__,__SREG__
 8864 34ae F894      		cli
 8865 34b0 DEBF      		out __SP_H__,r29
 8866 34b2 0FBE      		out __SREG__,__tmp_reg__
 8867 34b4 CDBF      		out __SP_L__,r28
 8868               	/* prologue: function */
 8869               	/* frame size = 10 */
 8870               	/* stack size = 16 */
 8871               	.L__stack_usage = 16
 8872 34b6 9887      		std Y+8,r25
 8873 34b8 8F83      		std Y+7,r24
 8874 34ba 7A87      		std Y+10,r23
 8875 34bc 6987      		std Y+9,r22
1004:lp_solve_5.5/lp_utils.c ****   int      i, ii, k;
1005:lp_solve_5.5/lp_utils.c ****   REGISTER REAL ref;
1006:lp_solve_5.5/lp_utils.c **** 
1007:lp_solve_5.5/lp_utils.c ****   /* Test for validity of the target and create it if necessary */
1008:lp_solve_5.5/lp_utils.c ****   if(target == NULL)
 8876               		.loc 2 1008 0
 8877 34be 8985      		ldd r24,Y+9
 8878 34c0 9A85      		ldd r25,Y+10
 8879 34c2 892B      		or r24,r25
 8880 34c4 01F4      		brne .L361
1009:lp_solve_5.5/lp_utils.c ****     return( FALSE );
 8881               		.loc 2 1009 0
 8882 34c6 80E0      		ldi r24,0
 8883 34c8 00C0      		rjmp .L362
 8884               	.L361:
1010:lp_solve_5.5/lp_utils.c ****   if(*target == NULL)
 8885               		.loc 2 1010 0
 8886 34ca 8985      		ldd r24,Y+9
 8887 34cc 9A85      		ldd r25,Y+10
 8888 34ce FC01      		movw r30,r24
 8889 34d0 8081      		ld r24,Z
 8890 34d2 9181      		ldd r25,Z+1
 8891 34d4 892B      		or r24,r25
 8892 34d6 01F4      		brne .L363
1011:lp_solve_5.5/lp_utils.c ****     allocREAL(NULL, target, PV->startpos[PV->count], FALSE);
 8893               		.loc 2 1011 0
 8894 34d8 8F81      		ldd r24,Y+7
 8895 34da 9885      		ldd r25,Y+8
 8896 34dc FC01      		movw r30,r24
 8897 34de 2281      		ldd r18,Z+2
 8898 34e0 3381      		ldd r19,Z+3
 8899 34e2 8F81      		ldd r24,Y+7
 8900 34e4 9885      		ldd r25,Y+8
 8901 34e6 FC01      		movw r30,r24
 8902 34e8 8081      		ld r24,Z
 8903 34ea 9181      		ldd r25,Z+1
 8904 34ec 880F      		lsl r24
 8905 34ee 991F      		rol r25
 8906 34f0 820F      		add r24,r18
 8907 34f2 931F      		adc r25,r19
 8908 34f4 FC01      		movw r30,r24
 8909 34f6 4081      		ld r20,Z
 8910 34f8 5181      		ldd r21,Z+1
 8911 34fa 8985      		ldd r24,Y+9
 8912 34fc 9A85      		ldd r25,Y+10
 8913 34fe 20E0      		ldi r18,0
 8914 3500 BC01      		movw r22,r24
 8915 3502 80E0      		ldi r24,0
 8916 3504 90E0      		ldi r25,0
 8917 3506 0E94 0000 		call allocREAL
 8918               	.L363:
1012:lp_solve_5.5/lp_utils.c **** 
1013:lp_solve_5.5/lp_utils.c ****   /* Expand the packed vector into the target */
1014:lp_solve_5.5/lp_utils.c ****   i = PV->startpos[0];
 8919               		.loc 2 1014 0
 8920 350a 8F81      		ldd r24,Y+7
 8921 350c 9885      		ldd r25,Y+8
 8922 350e FC01      		movw r30,r24
 8923 3510 8281      		ldd r24,Z+2
 8924 3512 9381      		ldd r25,Z+3
 8925 3514 FC01      		movw r30,r24
 8926 3516 8081      		ld r24,Z
 8927 3518 9181      		ldd r25,Z+1
 8928 351a 9A83      		std Y+2,r25
 8929 351c 8983      		std Y+1,r24
1015:lp_solve_5.5/lp_utils.c ****   for(k = 0; k < PV->count; k++) {
 8930               		.loc 2 1015 0
 8931 351e 1C82      		std Y+4,__zero_reg__
 8932 3520 1B82      		std Y+3,__zero_reg__
 8933 3522 00C0      		rjmp .L364
 8934               	.L367:
1016:lp_solve_5.5/lp_utils.c ****     ii = PV->startpos[k+1];
 8935               		.loc 2 1016 0
 8936 3524 8F81      		ldd r24,Y+7
 8937 3526 9885      		ldd r25,Y+8
 8938 3528 FC01      		movw r30,r24
 8939 352a 2281      		ldd r18,Z+2
 8940 352c 3381      		ldd r19,Z+3
 8941 352e 8B81      		ldd r24,Y+3
 8942 3530 9C81      		ldd r25,Y+4
 8943 3532 0196      		adiw r24,1
 8944 3534 880F      		lsl r24
 8945 3536 991F      		rol r25
 8946 3538 820F      		add r24,r18
 8947 353a 931F      		adc r25,r19
 8948 353c FC01      		movw r30,r24
 8949 353e 8081      		ld r24,Z
 8950 3540 9181      		ldd r25,Z+1
 8951 3542 9E83      		std Y+6,r25
 8952 3544 8D83      		std Y+5,r24
1017:lp_solve_5.5/lp_utils.c ****     ref = PV->value[k];
 8953               		.loc 2 1017 0
 8954 3546 8F81      		ldd r24,Y+7
 8955 3548 9885      		ldd r25,Y+8
 8956 354a FC01      		movw r30,r24
 8957 354c 2481      		ldd r18,Z+4
 8958 354e 3581      		ldd r19,Z+5
 8959 3550 8B81      		ldd r24,Y+3
 8960 3552 9C81      		ldd r25,Y+4
 8961 3554 880F      		lsl r24
 8962 3556 991F      		rol r25
 8963 3558 880F      		lsl r24
 8964 355a 991F      		rol r25
 8965 355c 820F      		add r24,r18
 8966 355e 931F      		adc r25,r19
 8967 3560 FC01      		movw r30,r24
 8968 3562 E080      		ld r14,Z
 8969 3564 F180      		ldd r15,Z+1
 8970 3566 0281      		ldd r16,Z+2
 8971 3568 1381      		ldd r17,Z+3
1018:lp_solve_5.5/lp_utils.c ****     while (i < ii) {
 8972               		.loc 2 1018 0
 8973 356a 00C0      		rjmp .L365
 8974               	.L366:
1019:lp_solve_5.5/lp_utils.c ****       (*target)[i] = ref;
 8975               		.loc 2 1019 0
 8976 356c 8985      		ldd r24,Y+9
 8977 356e 9A85      		ldd r25,Y+10
 8978 3570 FC01      		movw r30,r24
 8979 3572 2081      		ld r18,Z
 8980 3574 3181      		ldd r19,Z+1
 8981 3576 8981      		ldd r24,Y+1
 8982 3578 9A81      		ldd r25,Y+2
 8983 357a 880F      		lsl r24
 8984 357c 991F      		rol r25
 8985 357e 880F      		lsl r24
 8986 3580 991F      		rol r25
 8987 3582 820F      		add r24,r18
 8988 3584 931F      		adc r25,r19
 8989 3586 FC01      		movw r30,r24
 8990 3588 E082      		st Z,r14
 8991 358a F182      		std Z+1,r15
 8992 358c 0283      		std Z+2,r16
 8993 358e 1383      		std Z+3,r17
1020:lp_solve_5.5/lp_utils.c ****       i++;
 8994               		.loc 2 1020 0
 8995 3590 8981      		ldd r24,Y+1
 8996 3592 9A81      		ldd r25,Y+2
 8997 3594 0196      		adiw r24,1
 8998 3596 9A83      		std Y+2,r25
 8999 3598 8983      		std Y+1,r24
 9000               	.L365:
1018:lp_solve_5.5/lp_utils.c ****     while (i < ii) {
 9001               		.loc 2 1018 0
 9002 359a 2981      		ldd r18,Y+1
 9003 359c 3A81      		ldd r19,Y+2
 9004 359e 8D81      		ldd r24,Y+5
 9005 35a0 9E81      		ldd r25,Y+6
 9006 35a2 2817      		cp r18,r24
 9007 35a4 3907      		cpc r19,r25
 9008 35a6 04F0      		brlt .L366
1015:lp_solve_5.5/lp_utils.c ****     ii = PV->startpos[k+1];
 9009               		.loc 2 1015 0 discriminator 2
 9010 35a8 8B81      		ldd r24,Y+3
 9011 35aa 9C81      		ldd r25,Y+4
 9012 35ac 0196      		adiw r24,1
 9013 35ae 9C83      		std Y+4,r25
 9014 35b0 8B83      		std Y+3,r24
 9015               	.L364:
1015:lp_solve_5.5/lp_utils.c ****     ii = PV->startpos[k+1];
 9016               		.loc 2 1015 0 is_stmt 0 discriminator 1
 9017 35b2 8F81      		ldd r24,Y+7
 9018 35b4 9885      		ldd r25,Y+8
 9019 35b6 FC01      		movw r30,r24
 9020 35b8 2081      		ld r18,Z
 9021 35ba 3181      		ldd r19,Z+1
 9022 35bc 8B81      		ldd r24,Y+3
 9023 35be 9C81      		ldd r25,Y+4
 9024 35c0 8217      		cp r24,r18
 9025 35c2 9307      		cpc r25,r19
 9026 35c4 04F4      		brge .+2
 9027 35c6 00C0      		rjmp .L367
1021:lp_solve_5.5/lp_utils.c ****     }
1022:lp_solve_5.5/lp_utils.c ****   }
1023:lp_solve_5.5/lp_utils.c ****   return( TRUE );
 9028               		.loc 2 1023 0 is_stmt 1
 9029 35c8 81E0      		ldi r24,lo8(1)
 9030               	.L362:
 9031               	/* epilogue start */
1024:lp_solve_5.5/lp_utils.c **** }
 9032               		.loc 2 1024 0
 9033 35ca 2A96      		adiw r28,10
 9034 35cc 0FB6      		in __tmp_reg__,__SREG__
 9035 35ce F894      		cli
 9036 35d0 DEBF      		out __SP_H__,r29
 9037 35d2 0FBE      		out __SREG__,__tmp_reg__
 9038 35d4 CDBF      		out __SP_L__,r28
 9039 35d6 DF91      		pop r29
 9040 35d8 CF91      		pop r28
 9041 35da 1F91      		pop r17
 9042 35dc 0F91      		pop r16
 9043 35de FF90      		pop r15
 9044 35e0 EF90      		pop r14
 9045 35e2 0895      		ret
 9046               		.cfi_endproc
 9047               	.LFE59:
 9049               	.global	getvaluePackedVector
 9051               	getvaluePackedVector:
 9052               	.LFB60:
1025:lp_solve_5.5/lp_utils.c **** 
1026:lp_solve_5.5/lp_utils.c **** STATIC REAL getvaluePackedVector(PVrec *PV, int index)
1027:lp_solve_5.5/lp_utils.c **** {
 9053               		.loc 2 1027 0
 9054               		.cfi_startproc
 9055 35e4 0F93      		push r16
 9056               	.LCFI249:
 9057               		.cfi_def_cfa_offset 3
 9058               		.cfi_offset 16, -2
 9059 35e6 CF93      		push r28
 9060               	.LCFI250:
 9061               		.cfi_def_cfa_offset 4
 9062               		.cfi_offset 28, -3
 9063 35e8 DF93      		push r29
 9064               	.LCFI251:
 9065               		.cfi_def_cfa_offset 5
 9066               		.cfi_offset 29, -4
 9067 35ea 00D0      		rcall .
 9068 35ec 00D0      		rcall .
 9069               	.LCFI252:
 9070               		.cfi_def_cfa_offset 9
 9071 35ee CDB7      		in r28,__SP_L__
 9072 35f0 DEB7      		in r29,__SP_H__
 9073               	.LCFI253:
 9074               		.cfi_def_cfa_register 28
 9075               	/* prologue: function */
 9076               	/* frame size = 4 */
 9077               	/* stack size = 7 */
 9078               	.L__stack_usage = 7
 9079 35f2 9A83      		std Y+2,r25
 9080 35f4 8983      		std Y+1,r24
 9081 35f6 7C83      		std Y+4,r23
 9082 35f8 6B83      		std Y+3,r22
1028:lp_solve_5.5/lp_utils.c ****   index = searchFor(index, PV->startpos, PV->count, 0, FALSE);
 9083               		.loc 2 1028 0
 9084 35fa 8981      		ldd r24,Y+1
 9085 35fc 9A81      		ldd r25,Y+2
 9086 35fe FC01      		movw r30,r24
 9087 3600 4081      		ld r20,Z
 9088 3602 5181      		ldd r21,Z+1
 9089 3604 8981      		ldd r24,Y+1
 9090 3606 9A81      		ldd r25,Y+2
 9091 3608 FC01      		movw r30,r24
 9092 360a 6281      		ldd r22,Z+2
 9093 360c 7381      		ldd r23,Z+3
 9094 360e 8B81      		ldd r24,Y+3
 9095 3610 9C81      		ldd r25,Y+4
 9096 3612 00E0      		ldi r16,0
 9097 3614 20E0      		ldi r18,0
 9098 3616 30E0      		ldi r19,0
 9099 3618 0E94 0000 		call searchFor
 9100 361c 9C83      		std Y+4,r25
 9101 361e 8B83      		std Y+3,r24
1029:lp_solve_5.5/lp_utils.c ****   index = abs(index)-1;
 9102               		.loc 2 1029 0
 9103 3620 8B81      		ldd r24,Y+3
 9104 3622 9C81      		ldd r25,Y+4
 9105 3624 9923      		tst r25
 9106 3626 04F4      		brge .L369
 9107 3628 9195      		neg r25
 9108 362a 8195      		neg r24
 9109 362c 9109      		sbc r25,__zero_reg__
 9110               	.L369:
 9111 362e 0197      		sbiw r24,1
 9112 3630 9C83      		std Y+4,r25
 9113 3632 8B83      		std Y+3,r24
1030:lp_solve_5.5/lp_utils.c ****   if(index >= 0)
 9114               		.loc 2 1030 0
 9115 3634 8B81      		ldd r24,Y+3
 9116 3636 9C81      		ldd r25,Y+4
 9117 3638 9923      		tst r25
 9118 363a 04F0      		brlt .L370
1031:lp_solve_5.5/lp_utils.c ****     return( PV->value[index] );
 9119               		.loc 2 1031 0
 9120 363c 8981      		ldd r24,Y+1
 9121 363e 9A81      		ldd r25,Y+2
 9122 3640 FC01      		movw r30,r24
 9123 3642 2481      		ldd r18,Z+4
 9124 3644 3581      		ldd r19,Z+5
 9125 3646 8B81      		ldd r24,Y+3
 9126 3648 9C81      		ldd r25,Y+4
 9127 364a 880F      		lsl r24
 9128 364c 991F      		rol r25
 9129 364e 880F      		lsl r24
 9130 3650 991F      		rol r25
 9131 3652 820F      		add r24,r18
 9132 3654 931F      		adc r25,r19
 9133 3656 FC01      		movw r30,r24
 9134 3658 8081      		ld r24,Z
 9135 365a 9181      		ldd r25,Z+1
 9136 365c A281      		ldd r26,Z+2
 9137 365e B381      		ldd r27,Z+3
 9138 3660 00C0      		rjmp .L371
 9139               	.L370:
1032:lp_solve_5.5/lp_utils.c ****   else
1033:lp_solve_5.5/lp_utils.c ****     return( 0 );
 9140               		.loc 2 1033 0
 9141 3662 80E0      		ldi r24,0
 9142 3664 90E0      		ldi r25,0
 9143 3666 DC01      		movw r26,r24
 9144               	.L371:
1034:lp_solve_5.5/lp_utils.c **** }
 9145               		.loc 2 1034 0
 9146 3668 BC01      		movw r22,r24
 9147 366a CD01      		movw r24,r26
 9148               	/* epilogue start */
 9149 366c 0F90      		pop __tmp_reg__
 9150 366e 0F90      		pop __tmp_reg__
 9151 3670 0F90      		pop __tmp_reg__
 9152 3672 0F90      		pop __tmp_reg__
 9153 3674 DF91      		pop r29
 9154 3676 CF91      		pop r28
 9155 3678 0F91      		pop r16
 9156 367a 0895      		ret
 9157               		.cfi_endproc
 9158               	.LFE60:
 9160               	.global	freePackedVector
 9162               	freePackedVector:
 9163               	.LFB61:
1035:lp_solve_5.5/lp_utils.c **** 
1036:lp_solve_5.5/lp_utils.c **** STATIC MYBOOL freePackedVector(PVrec **PV)
1037:lp_solve_5.5/lp_utils.c **** {
 9164               		.loc 2 1037 0
 9165               		.cfi_startproc
 9166 367c CF93      		push r28
 9167               	.LCFI254:
 9168               		.cfi_def_cfa_offset 3
 9169               		.cfi_offset 28, -2
 9170 367e DF93      		push r29
 9171               	.LCFI255:
 9172               		.cfi_def_cfa_offset 4
 9173               		.cfi_offset 29, -3
 9174 3680 00D0      		rcall .
 9175               	.LCFI256:
 9176               		.cfi_def_cfa_offset 6
 9177 3682 CDB7      		in r28,__SP_L__
 9178 3684 DEB7      		in r29,__SP_H__
 9179               	.LCFI257:
 9180               		.cfi_def_cfa_register 28
 9181               	/* prologue: function */
 9182               	/* frame size = 2 */
 9183               	/* stack size = 4 */
 9184               	.L__stack_usage = 4
 9185 3686 9A83      		std Y+2,r25
 9186 3688 8983      		std Y+1,r24
1038:lp_solve_5.5/lp_utils.c ****   if((PV == NULL) || (*PV == NULL))
 9187               		.loc 2 1038 0
 9188 368a 8981      		ldd r24,Y+1
 9189 368c 9A81      		ldd r25,Y+2
 9190 368e 892B      		or r24,r25
 9191 3690 01F0      		breq .L373
 9192               		.loc 2 1038 0 is_stmt 0 discriminator 1
 9193 3692 8981      		ldd r24,Y+1
 9194 3694 9A81      		ldd r25,Y+2
 9195 3696 FC01      		movw r30,r24
 9196 3698 8081      		ld r24,Z
 9197 369a 9181      		ldd r25,Z+1
 9198 369c 892B      		or r24,r25
 9199 369e 01F4      		brne .L374
 9200               	.L373:
1039:lp_solve_5.5/lp_utils.c ****     return( FALSE );
 9201               		.loc 2 1039 0 is_stmt 1
 9202 36a0 80E0      		ldi r24,0
 9203 36a2 00C0      		rjmp .L375
 9204               	.L374:
1040:lp_solve_5.5/lp_utils.c **** 
1041:lp_solve_5.5/lp_utils.c ****   FREE((*PV)->value);
 9205               		.loc 2 1041 0
 9206 36a4 8981      		ldd r24,Y+1
 9207 36a6 9A81      		ldd r25,Y+2
 9208 36a8 FC01      		movw r30,r24
 9209 36aa 8081      		ld r24,Z
 9210 36ac 9181      		ldd r25,Z+1
 9211 36ae FC01      		movw r30,r24
 9212 36b0 8481      		ldd r24,Z+4
 9213 36b2 9581      		ldd r25,Z+5
 9214 36b4 892B      		or r24,r25
 9215 36b6 01F0      		breq .L376
 9216               		.loc 2 1041 0 is_stmt 0 discriminator 1
 9217 36b8 8981      		ldd r24,Y+1
 9218 36ba 9A81      		ldd r25,Y+2
 9219 36bc FC01      		movw r30,r24
 9220 36be 8081      		ld r24,Z
 9221 36c0 9181      		ldd r25,Z+1
 9222 36c2 FC01      		movw r30,r24
 9223 36c4 8481      		ldd r24,Z+4
 9224 36c6 9581      		ldd r25,Z+5
 9225 36c8 0E94 0000 		call free
 9226 36cc 8981      		ldd r24,Y+1
 9227 36ce 9A81      		ldd r25,Y+2
 9228 36d0 FC01      		movw r30,r24
 9229 36d2 8081      		ld r24,Z
 9230 36d4 9181      		ldd r25,Z+1
 9231 36d6 FC01      		movw r30,r24
 9232 36d8 1582      		std Z+5,__zero_reg__
 9233 36da 1482      		std Z+4,__zero_reg__
 9234               	.L376:
1042:lp_solve_5.5/lp_utils.c ****   FREE((*PV)->startpos);
 9235               		.loc 2 1042 0 is_stmt 1
 9236 36dc 8981      		ldd r24,Y+1
 9237 36de 9A81      		ldd r25,Y+2
 9238 36e0 FC01      		movw r30,r24
 9239 36e2 8081      		ld r24,Z
 9240 36e4 9181      		ldd r25,Z+1
 9241 36e6 FC01      		movw r30,r24
 9242 36e8 8281      		ldd r24,Z+2
 9243 36ea 9381      		ldd r25,Z+3
 9244 36ec 892B      		or r24,r25
 9245 36ee 01F0      		breq .L377
 9246               		.loc 2 1042 0 is_stmt 0 discriminator 1
 9247 36f0 8981      		ldd r24,Y+1
 9248 36f2 9A81      		ldd r25,Y+2
 9249 36f4 FC01      		movw r30,r24
 9250 36f6 8081      		ld r24,Z
 9251 36f8 9181      		ldd r25,Z+1
 9252 36fa FC01      		movw r30,r24
 9253 36fc 8281      		ldd r24,Z+2
 9254 36fe 9381      		ldd r25,Z+3
 9255 3700 0E94 0000 		call free
 9256 3704 8981      		ldd r24,Y+1
 9257 3706 9A81      		ldd r25,Y+2
 9258 3708 FC01      		movw r30,r24
 9259 370a 8081      		ld r24,Z
 9260 370c 9181      		ldd r25,Z+1
 9261 370e FC01      		movw r30,r24
 9262 3710 1382      		std Z+3,__zero_reg__
 9263 3712 1282      		std Z+2,__zero_reg__
 9264               	.L377:
1043:lp_solve_5.5/lp_utils.c ****   FREE(*PV);
 9265               		.loc 2 1043 0 is_stmt 1
 9266 3714 8981      		ldd r24,Y+1
 9267 3716 9A81      		ldd r25,Y+2
 9268 3718 FC01      		movw r30,r24
 9269 371a 8081      		ld r24,Z
 9270 371c 9181      		ldd r25,Z+1
 9271 371e 892B      		or r24,r25
 9272 3720 01F0      		breq .L378
 9273               		.loc 2 1043 0 is_stmt 0 discriminator 1
 9274 3722 8981      		ldd r24,Y+1
 9275 3724 9A81      		ldd r25,Y+2
 9276 3726 FC01      		movw r30,r24
 9277 3728 8081      		ld r24,Z
 9278 372a 9181      		ldd r25,Z+1
 9279 372c 0E94 0000 		call free
 9280 3730 8981      		ldd r24,Y+1
 9281 3732 9A81      		ldd r25,Y+2
 9282 3734 FC01      		movw r30,r24
 9283 3736 1182      		std Z+1,__zero_reg__
 9284 3738 1082      		st Z,__zero_reg__
 9285               	.L378:
1044:lp_solve_5.5/lp_utils.c ****   return( TRUE );
 9286               		.loc 2 1044 0 is_stmt 1
 9287 373a 81E0      		ldi r24,lo8(1)
 9288               	.L375:
 9289               	/* epilogue start */
1045:lp_solve_5.5/lp_utils.c **** }
 9290               		.loc 2 1045 0
 9291 373c 0F90      		pop __tmp_reg__
 9292 373e 0F90      		pop __tmp_reg__
 9293 3740 DF91      		pop r29
 9294 3742 CF91      		pop r28
 9295 3744 0895      		ret
 9296               		.cfi_endproc
 9297               	.LFE61:
 9299               	.global	pushPackedVector
 9301               	pushPackedVector:
 9302               	.LFB62:
1046:lp_solve_5.5/lp_utils.c **** 
1047:lp_solve_5.5/lp_utils.c **** STATIC void pushPackedVector(PVrec *PV, PVrec *parent)
1048:lp_solve_5.5/lp_utils.c **** {
 9303               		.loc 2 1048 0
 9304               		.cfi_startproc
 9305 3746 CF93      		push r28
 9306               	.LCFI258:
 9307               		.cfi_def_cfa_offset 3
 9308               		.cfi_offset 28, -2
 9309 3748 DF93      		push r29
 9310               	.LCFI259:
 9311               		.cfi_def_cfa_offset 4
 9312               		.cfi_offset 29, -3
 9313 374a 00D0      		rcall .
 9314 374c 00D0      		rcall .
 9315               	.LCFI260:
 9316               		.cfi_def_cfa_offset 8
 9317 374e CDB7      		in r28,__SP_L__
 9318 3750 DEB7      		in r29,__SP_H__
 9319               	.LCFI261:
 9320               		.cfi_def_cfa_register 28
 9321               	/* prologue: function */
 9322               	/* frame size = 4 */
 9323               	/* stack size = 6 */
 9324               	.L__stack_usage = 6
 9325 3752 9A83      		std Y+2,r25
 9326 3754 8983      		std Y+1,r24
 9327 3756 7C83      		std Y+4,r23
 9328 3758 6B83      		std Y+3,r22
1049:lp_solve_5.5/lp_utils.c ****   PV->parent = parent;
 9329               		.loc 2 1049 0
 9330 375a 8981      		ldd r24,Y+1
 9331 375c 9A81      		ldd r25,Y+2
 9332 375e 2B81      		ldd r18,Y+3
 9333 3760 3C81      		ldd r19,Y+4
 9334 3762 FC01      		movw r30,r24
 9335 3764 3783      		std Z+7,r19
 9336 3766 2683      		std Z+6,r18
1050:lp_solve_5.5/lp_utils.c **** }
 9337               		.loc 2 1050 0
 9338 3768 0000      		nop
 9339               	/* epilogue start */
 9340 376a 0F90      		pop __tmp_reg__
 9341 376c 0F90      		pop __tmp_reg__
 9342 376e 0F90      		pop __tmp_reg__
 9343 3770 0F90      		pop __tmp_reg__
 9344 3772 DF91      		pop r29
 9345 3774 CF91      		pop r28
 9346 3776 0895      		ret
 9347               		.cfi_endproc
 9348               	.LFE62:
 9350               	.global	popPackedVector
 9352               	popPackedVector:
 9353               	.LFB63:
1051:lp_solve_5.5/lp_utils.c **** 
1052:lp_solve_5.5/lp_utils.c **** STATIC PVrec *popPackedVector(PVrec *PV)
1053:lp_solve_5.5/lp_utils.c **** {
 9354               		.loc 2 1053 0
 9355               		.cfi_startproc
 9356 3778 CF93      		push r28
 9357               	.LCFI262:
 9358               		.cfi_def_cfa_offset 3
 9359               		.cfi_offset 28, -2
 9360 377a DF93      		push r29
 9361               	.LCFI263:
 9362               		.cfi_def_cfa_offset 4
 9363               		.cfi_offset 29, -3
 9364 377c 00D0      		rcall .
 9365 377e 00D0      		rcall .
 9366               	.LCFI264:
 9367               		.cfi_def_cfa_offset 8
 9368 3780 CDB7      		in r28,__SP_L__
 9369 3782 DEB7      		in r29,__SP_H__
 9370               	.LCFI265:
 9371               		.cfi_def_cfa_register 28
 9372               	/* prologue: function */
 9373               	/* frame size = 4 */
 9374               	/* stack size = 6 */
 9375               	.L__stack_usage = 6
 9376 3784 9C83      		std Y+4,r25
 9377 3786 8B83      		std Y+3,r24
1054:lp_solve_5.5/lp_utils.c ****   PVrec *parent = PV->parent;
 9378               		.loc 2 1054 0
 9379 3788 8B81      		ldd r24,Y+3
 9380 378a 9C81      		ldd r25,Y+4
 9381 378c FC01      		movw r30,r24
 9382 378e 8681      		ldd r24,Z+6
 9383 3790 9781      		ldd r25,Z+7
 9384 3792 9A83      		std Y+2,r25
 9385 3794 8983      		std Y+1,r24
1055:lp_solve_5.5/lp_utils.c ****   freePackedVector(&PV);
 9386               		.loc 2 1055 0
 9387 3796 CE01      		movw r24,r28
 9388 3798 0396      		adiw r24,3
 9389 379a 0E94 0000 		call freePackedVector
1056:lp_solve_5.5/lp_utils.c ****   return( parent );
 9390               		.loc 2 1056 0
 9391 379e 8981      		ldd r24,Y+1
 9392 37a0 9A81      		ldd r25,Y+2
 9393               	/* epilogue start */
1057:lp_solve_5.5/lp_utils.c **** }
 9394               		.loc 2 1057 0
 9395 37a2 0F90      		pop __tmp_reg__
 9396 37a4 0F90      		pop __tmp_reg__
 9397 37a6 0F90      		pop __tmp_reg__
 9398 37a8 0F90      		pop __tmp_reg__
 9399 37aa DF91      		pop r29
 9400 37ac CF91      		pop r28
 9401 37ae 0895      		ret
 9402               		.cfi_endproc
 9403               	.LFE63:
 9405               		.section	.bss.randomized.6327,"aw",@nobits
 9408               	randomized.6327:
 9409 0000 00        		.zero	1
 9410               		.text
 9411               	.Letext0:
 9412               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\lib\\gc
 9413               		.file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 9414               		.file 5 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 9415               		.file 6 "lp_solve_5.5\\shared/commonlib.h"
 9416               		.file 7 "lp_solve_5.5/lp_types.h"
 9417               		.file 8 "lp_solve_5.5/lp_lib.h"
 9418               		.file 9 "lp_solve_5.5/lp_utils.h"
 9419               		.file 10 "lp_solve_5.5/lp_Hash.h"
 9420               		.file 11 "lp_solve_5.5/lp_matrix.h"
 9421               		.file 12 "lp_solve_5.5/lp_mipbb.h"
 9422               		.file 13 "lp_solve_5.5/lp_SOS.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lp_utils.c
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:12     .text:00000000 set_biton
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:105    .text:0000007e set_bitoff
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:198    .text:000000fe is_biton
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:294    .text:00000178 allocCHAR
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:492    .text:000002ac allocMYBOOL
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:689    .text:000003e0 allocINT
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:894    .text:00000524 allocREAL
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:1105   .text:00000674 allocLREAL
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:1318   .text:000007c4 allocFREE
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:1435   .text:0000086c comp_bits
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:1854   .text:00000b10 mempool_create
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:1913   .text:00000b50 mempool_obtainVector
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:2566   .text:00000fac mempool_releaseVector
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:2847   .text:00001172 mempool_free
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:3083   .text:000012f8 cloneREAL
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:3169   .text:0000136c cloneMYBOOL
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:3250   .text:000013d6 cloneINT
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:3336   .text:00001446 roundVector
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:3451   .text:000014e4 normalizeVector
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:3645   .text:0000161e swapINT
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:3718   .text:00001678 swapREAL
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:3806   .text:000016f0 swapPTR
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:3880   .text:0000174a restoreINT
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:4057   .text:00001862 roundToPrecision
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:4617   .text:00001c28 searchFor
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:5018   .text:00001ea0 isINT
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:5191   .text:00001fb2 isOrigFixed
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:5327   .text:00002072 chsign_bounds
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:5471   .text:0000214c rand_uniform
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:9408   .bss.randomized.6327:00000000 randomized.6327
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:5573   .text:000021ea createLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:5921   .text:0000241e freeLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:6019   .text:0000249a sizeLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:6062   .text:000024bc isActiveLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:6169   .text:0000254c countActiveLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:6212   .text:0000256e countInactiveLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:6264   .text:000025a2 firstActiveLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:6310   .text:000025ca lastActiveLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:6368   .text:0000260a appendLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:6565   .text:00002744 insertLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:6827   .text:000028f4 setLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:7125   .text:00002a7a prevActiveLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:6897   .text:0000294a fillLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:6995   .text:000029c6 nextActiveLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:7311   .text:00002b92 firstInactiveLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:7407   .text:00002c0c lastInactiveLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:7506   .text:00002c8c nextInactiveLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:7596   .text:00002cfc prevInactiveLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:7641   .text:00002d22 removeLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:7946   .text:00002f1e cloneLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:8163   .text:00003078 compareLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:8275   .text:0000311c verifyLink
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:8403   .text:000031dc createPackedVector
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:8828   .text:0000349a unpackPackedVector
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:9051   .text:000035e4 getvaluePackedVector
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:9162   .text:0000367c freePackedVector
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:9301   .text:00003746 pushPackedVector
C:\Users\GUILHE~1\AppData\Local\Temp\ccv9nnLw.s:9352   .text:00003778 popPackedVector

UNDEFINED SYMBOLS
calloc
realloc
memset
malloc
free
memmove
memcpy
__gtsf2
__ltsf2
__mulsf3
__addsf3
__divsf3
sqrt
__subsf3
modf
__eqsf2
__floatdisf
__fixsfdi
__muldi3
__fixsfsi
__floatsisf
floor
frexp
log10
pow
ldexp
__lesf2
time
srand
rand
memcmp
__do_copy_data
__do_clear_bss
