   1               		.file	"lp_scale.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               	.global	__ltsf2
  12               	.global	__divsf3
  13               	.global	__mulsf3
  14               	.global	scaled_value
  16               	scaled_value:
  17               	.LFB7:
  18               		.file 1 "lp_solve_5.5/lp_scale.c"
   1:lp_solve_5.5/lp_scale.c **** 
   2:lp_solve_5.5/lp_scale.c **** #include <string.h>
   3:lp_solve_5.5/lp_scale.c **** #include "commonlib.h"
   4:lp_solve_5.5/lp_scale.c **** #include "lp_lib.h"
   5:lp_solve_5.5/lp_scale.c **** #include "lp_report.h"
   6:lp_solve_5.5/lp_scale.c **** #include "lp_scale.h"
   7:lp_solve_5.5/lp_scale.c **** 
   8:lp_solve_5.5/lp_scale.c **** #ifdef FORTIFY
   9:lp_solve_5.5/lp_scale.c **** # include "lp_fortify.h"
  10:lp_solve_5.5/lp_scale.c **** #endif
  11:lp_solve_5.5/lp_scale.c **** 
  12:lp_solve_5.5/lp_scale.c **** 
  13:lp_solve_5.5/lp_scale.c **** /*
  14:lp_solve_5.5/lp_scale.c ****     Scaling routines for lp_solve v5.0+
  15:lp_solve_5.5/lp_scale.c ****    ----------------------------------------------------------------------------------
  16:lp_solve_5.5/lp_scale.c ****     Author:        Kjell Eikland
  17:lp_solve_5.5/lp_scale.c ****     Contact:       kjell.eikland@broadpark.no
  18:lp_solve_5.5/lp_scale.c ****     License terms: LGPL.
  19:lp_solve_5.5/lp_scale.c **** 
  20:lp_solve_5.5/lp_scale.c ****     Requires:      lp_lib.h, lp_scale.h
  21:lp_solve_5.5/lp_scale.c **** 
  22:lp_solve_5.5/lp_scale.c ****     Release notes:
  23:lp_solve_5.5/lp_scale.c ****     v5.0.0  1 January 2004      Significantly expanded and repackaged scaling
  24:lp_solve_5.5/lp_scale.c ****                                 routines.
  25:lp_solve_5.5/lp_scale.c ****     v5.0.1  20 February 2004    Modified rounding behaviour in several areas.
  26:lp_solve_5.5/lp_scale.c ****     v5.1.0  20 July 2004        Reworked with flexible matrix storage model.
  27:lp_solve_5.5/lp_scale.c ****     v5.2.0  20 February 2005    Converted to matrix storage model without the OF.
  28:lp_solve_5.5/lp_scale.c **** 
  29:lp_solve_5.5/lp_scale.c ****    ----------------------------------------------------------------------------------
  30:lp_solve_5.5/lp_scale.c **** */
  31:lp_solve_5.5/lp_scale.c **** 
  32:lp_solve_5.5/lp_scale.c **** /* First define scaling and unscaling primitives */
  33:lp_solve_5.5/lp_scale.c **** 
  34:lp_solve_5.5/lp_scale.c **** REAL scaled_value(lprec *lp, REAL value, int index)
  35:lp_solve_5.5/lp_scale.c **** {
  19               		.loc 1 35 0
  20               		.cfi_startproc
  21 0000 CF93      		push r28
  22               	.LCFI0:
  23               		.cfi_def_cfa_offset 3
  24               		.cfi_offset 28, -2
  25 0002 DF93      		push r29
  26               	.LCFI1:
  27               		.cfi_def_cfa_offset 4
  28               		.cfi_offset 29, -3
  29 0004 CDB7      		in r28,__SP_L__
  30 0006 DEB7      		in r29,__SP_H__
  31               	.LCFI2:
  32               		.cfi_def_cfa_register 28
  33 0008 2897      		sbiw r28,8
  34               	.LCFI3:
  35               		.cfi_def_cfa_offset 12
  36 000a 0FB6      		in __tmp_reg__,__SREG__
  37 000c F894      		cli
  38 000e DEBF      		out __SP_H__,r29
  39 0010 0FBE      		out __SREG__,__tmp_reg__
  40 0012 CDBF      		out __SP_L__,r28
  41               	/* prologue: function */
  42               	/* frame size = 8 */
  43               	/* stack size = 10 */
  44               	.L__stack_usage = 10
  45 0014 9A83      		std Y+2,r25
  46 0016 8983      		std Y+1,r24
  47 0018 4B83      		std Y+3,r20
  48 001a 5C83      		std Y+4,r21
  49 001c 6D83      		std Y+5,r22
  50 001e 7E83      		std Y+6,r23
  51 0020 3887      		std Y+8,r19
  52 0022 2F83      		std Y+7,r18
  36:lp_solve_5.5/lp_scale.c ****   if(fabs(value) < lp->infinite) {
  53               		.loc 1 36 0
  54 0024 8B81      		ldd r24,Y+3
  55 0026 9C81      		ldd r25,Y+4
  56 0028 AD81      		ldd r26,Y+5
  57 002a BE81      		ldd r27,Y+6
  58 002c BF77      		andi r27,0x7f
  59 002e 2981      		ldd r18,Y+1
  60 0030 3A81      		ldd r19,Y+2
  61 0032 265F      		subi r18,-10
  62 0034 3C4F      		sbci r19,-4
  63 0036 F901      		movw r30,r18
  64 0038 2081      		ld r18,Z
  65 003a 3181      		ldd r19,Z+1
  66 003c 4281      		ldd r20,Z+2
  67 003e 5381      		ldd r21,Z+3
  68 0040 BC01      		movw r22,r24
  69 0042 CD01      		movw r24,r26
  70 0044 0E94 0000 		call __ltsf2
  71 0048 8823      		tst r24
  72 004a 04F0      		brlt .+2
  73 004c 00C0      		rjmp .L13
  37:lp_solve_5.5/lp_scale.c ****     if(lp->scaling_used) {
  74               		.loc 1 37 0
  75 004e 8981      		ldd r24,Y+1
  76 0050 9A81      		ldd r25,Y+2
  77 0052 8A53      		subi r24,58
  78 0054 9D4F      		sbci r25,-3
  79 0056 FC01      		movw r30,r24
  80 0058 8081      		ld r24,Z
  81 005a 8823      		tst r24
  82 005c 01F4      		brne .+2
  83 005e 00C0      		rjmp .L6
  38:lp_solve_5.5/lp_scale.c ****       if(index > lp->rows)
  84               		.loc 1 38 0
  85 0060 8981      		ldd r24,Y+1
  86 0062 9A81      		ldd r25,Y+2
  87 0064 8651      		subi r24,22
  88 0066 9E4F      		sbci r25,-2
  89 0068 FC01      		movw r30,r24
  90 006a 2081      		ld r18,Z
  91 006c 3181      		ldd r19,Z+1
  92 006e 8F81      		ldd r24,Y+7
  93 0070 9885      		ldd r25,Y+8
  94 0072 2817      		cp r18,r24
  95 0074 3907      		cpc r19,r25
  96 0076 04F4      		brge .L5
  39:lp_solve_5.5/lp_scale.c ****         value /= lp->scalars[index];
  97               		.loc 1 39 0
  98 0078 8981      		ldd r24,Y+1
  99 007a 9A81      		ldd r25,Y+2
 100 007c 8C53      		subi r24,60
 101 007e 9D4F      		sbci r25,-3
 102 0080 FC01      		movw r30,r24
 103 0082 2081      		ld r18,Z
 104 0084 3181      		ldd r19,Z+1
 105 0086 8F81      		ldd r24,Y+7
 106 0088 9885      		ldd r25,Y+8
 107 008a 880F      		lsl r24
 108 008c 991F      		rol r25
 109 008e 880F      		lsl r24
 110 0090 991F      		rol r25
 111 0092 820F      		add r24,r18
 112 0094 931F      		adc r25,r19
 113 0096 FC01      		movw r30,r24
 114 0098 8081      		ld r24,Z
 115 009a 9181      		ldd r25,Z+1
 116 009c A281      		ldd r26,Z+2
 117 009e B381      		ldd r27,Z+3
 118 00a0 9C01      		movw r18,r24
 119 00a2 AD01      		movw r20,r26
 120 00a4 6B81      		ldd r22,Y+3
 121 00a6 7C81      		ldd r23,Y+4
 122 00a8 8D81      		ldd r24,Y+5
 123 00aa 9E81      		ldd r25,Y+6
 124 00ac 0E94 0000 		call __divsf3
 125 00b0 DC01      		movw r26,r24
 126 00b2 CB01      		movw r24,r22
 127 00b4 8B83      		std Y+3,r24
 128 00b6 9C83      		std Y+4,r25
 129 00b8 AD83      		std Y+5,r26
 130 00ba BE83      		std Y+6,r27
 131 00bc 00C0      		rjmp .L6
 132               	.L5:
  40:lp_solve_5.5/lp_scale.c ****       else
  41:lp_solve_5.5/lp_scale.c ****         value *= lp->scalars[index];
 133               		.loc 1 41 0
 134 00be 8981      		ldd r24,Y+1
 135 00c0 9A81      		ldd r25,Y+2
 136 00c2 8C53      		subi r24,60
 137 00c4 9D4F      		sbci r25,-3
 138 00c6 FC01      		movw r30,r24
 139 00c8 2081      		ld r18,Z
 140 00ca 3181      		ldd r19,Z+1
 141 00cc 8F81      		ldd r24,Y+7
 142 00ce 9885      		ldd r25,Y+8
 143 00d0 880F      		lsl r24
 144 00d2 991F      		rol r25
 145 00d4 880F      		lsl r24
 146 00d6 991F      		rol r25
 147 00d8 820F      		add r24,r18
 148 00da 931F      		adc r25,r19
 149 00dc FC01      		movw r30,r24
 150 00de 8081      		ld r24,Z
 151 00e0 9181      		ldd r25,Z+1
 152 00e2 A281      		ldd r26,Z+2
 153 00e4 B381      		ldd r27,Z+3
 154 00e6 9C01      		movw r18,r24
 155 00e8 AD01      		movw r20,r26
 156 00ea 6B81      		ldd r22,Y+3
 157 00ec 7C81      		ldd r23,Y+4
 158 00ee 8D81      		ldd r24,Y+5
 159 00f0 9E81      		ldd r25,Y+6
 160 00f2 0E94 0000 		call __mulsf3
 161 00f6 DC01      		movw r26,r24
 162 00f8 CB01      		movw r24,r22
 163 00fa 8B83      		std Y+3,r24
 164 00fc 9C83      		std Y+4,r25
 165 00fe AD83      		std Y+5,r26
 166 0100 BE83      		std Y+6,r27
 167 0102 00C0      		rjmp .L6
 168               	.L13:
  42:lp_solve_5.5/lp_scale.c ****     }
  43:lp_solve_5.5/lp_scale.c ****   }
  44:lp_solve_5.5/lp_scale.c ****   else
  45:lp_solve_5.5/lp_scale.c ****     value = my_sign(value)*lp->infinite;
 169               		.loc 1 45 0
 170 0104 20E0      		ldi r18,0
 171 0106 30E0      		ldi r19,0
 172 0108 A901      		movw r20,r18
 173 010a 6B81      		ldd r22,Y+3
 174 010c 7C81      		ldd r23,Y+4
 175 010e 8D81      		ldd r24,Y+5
 176 0110 9E81      		ldd r25,Y+6
 177 0112 0E94 0000 		call __ltsf2
 178 0116 8823      		tst r24
 179 0118 04F4      		brge .L14
 180               		.loc 1 45 0 is_stmt 0 discriminator 1
 181 011a 80E0      		ldi r24,0
 182 011c 90E0      		ldi r25,0
 183 011e A0E8      		ldi r26,lo8(-128)
 184 0120 BFEB      		ldi r27,lo8(-65)
 185 0122 00C0      		rjmp .L9
 186               	.L14:
 187               		.loc 1 45 0 discriminator 2
 188 0124 80E0      		ldi r24,0
 189 0126 90E0      		ldi r25,0
 190 0128 A0E8      		ldi r26,lo8(-128)
 191 012a BFE3      		ldi r27,lo8(63)
 192               	.L9:
 193               		.loc 1 45 0 discriminator 4
 194 012c 2981      		ldd r18,Y+1
 195 012e 3A81      		ldd r19,Y+2
 196 0130 265F      		subi r18,-10
 197 0132 3C4F      		sbci r19,-4
 198 0134 F901      		movw r30,r18
 199 0136 2081      		ld r18,Z
 200 0138 3181      		ldd r19,Z+1
 201 013a 4281      		ldd r20,Z+2
 202 013c 5381      		ldd r21,Z+3
 203 013e BC01      		movw r22,r24
 204 0140 CD01      		movw r24,r26
 205 0142 0E94 0000 		call __mulsf3
 206 0146 DC01      		movw r26,r24
 207 0148 CB01      		movw r24,r22
 208 014a 8B83      		std Y+3,r24
 209 014c 9C83      		std Y+4,r25
 210 014e AD83      		std Y+5,r26
 211 0150 BE83      		std Y+6,r27
 212               	.L6:
  46:lp_solve_5.5/lp_scale.c ****   return(value);
 213               		.loc 1 46 0 is_stmt 1
 214 0152 8B81      		ldd r24,Y+3
 215 0154 9C81      		ldd r25,Y+4
 216 0156 AD81      		ldd r26,Y+5
 217 0158 BE81      		ldd r27,Y+6
  47:lp_solve_5.5/lp_scale.c **** }
 218               		.loc 1 47 0
 219 015a BC01      		movw r22,r24
 220 015c CD01      		movw r24,r26
 221               	/* epilogue start */
 222 015e 2896      		adiw r28,8
 223 0160 0FB6      		in __tmp_reg__,__SREG__
 224 0162 F894      		cli
 225 0164 DEBF      		out __SP_H__,r29
 226 0166 0FBE      		out __SREG__,__tmp_reg__
 227 0168 CDBF      		out __SP_L__,r28
 228 016a DF91      		pop r29
 229 016c CF91      		pop r28
 230 016e 0895      		ret
 231               		.cfi_endproc
 232               	.LFE7:
 234               	.global	unscaled_value
 236               	unscaled_value:
 237               	.LFB8:
  48:lp_solve_5.5/lp_scale.c **** 
  49:lp_solve_5.5/lp_scale.c **** REAL unscaled_value(lprec *lp, REAL value, int index)
  50:lp_solve_5.5/lp_scale.c **** {
 238               		.loc 1 50 0
 239               		.cfi_startproc
 240 0170 CF93      		push r28
 241               	.LCFI4:
 242               		.cfi_def_cfa_offset 3
 243               		.cfi_offset 28, -2
 244 0172 DF93      		push r29
 245               	.LCFI5:
 246               		.cfi_def_cfa_offset 4
 247               		.cfi_offset 29, -3
 248 0174 CDB7      		in r28,__SP_L__
 249 0176 DEB7      		in r29,__SP_H__
 250               	.LCFI6:
 251               		.cfi_def_cfa_register 28
 252 0178 2897      		sbiw r28,8
 253               	.LCFI7:
 254               		.cfi_def_cfa_offset 12
 255 017a 0FB6      		in __tmp_reg__,__SREG__
 256 017c F894      		cli
 257 017e DEBF      		out __SP_H__,r29
 258 0180 0FBE      		out __SREG__,__tmp_reg__
 259 0182 CDBF      		out __SP_L__,r28
 260               	/* prologue: function */
 261               	/* frame size = 8 */
 262               	/* stack size = 10 */
 263               	.L__stack_usage = 10
 264 0184 9A83      		std Y+2,r25
 265 0186 8983      		std Y+1,r24
 266 0188 4B83      		std Y+3,r20
 267 018a 5C83      		std Y+4,r21
 268 018c 6D83      		std Y+5,r22
 269 018e 7E83      		std Y+6,r23
 270 0190 3887      		std Y+8,r19
 271 0192 2F83      		std Y+7,r18
  51:lp_solve_5.5/lp_scale.c ****   if(fabs(value) < lp->infinite) {
 272               		.loc 1 51 0
 273 0194 8B81      		ldd r24,Y+3
 274 0196 9C81      		ldd r25,Y+4
 275 0198 AD81      		ldd r26,Y+5
 276 019a BE81      		ldd r27,Y+6
 277 019c BF77      		andi r27,0x7f
 278 019e 2981      		ldd r18,Y+1
 279 01a0 3A81      		ldd r19,Y+2
 280 01a2 265F      		subi r18,-10
 281 01a4 3C4F      		sbci r19,-4
 282 01a6 F901      		movw r30,r18
 283 01a8 2081      		ld r18,Z
 284 01aa 3181      		ldd r19,Z+1
 285 01ac 4281      		ldd r20,Z+2
 286 01ae 5381      		ldd r21,Z+3
 287 01b0 BC01      		movw r22,r24
 288 01b2 CD01      		movw r24,r26
 289 01b4 0E94 0000 		call __ltsf2
 290 01b8 8823      		tst r24
 291 01ba 04F0      		brlt .+2
 292 01bc 00C0      		rjmp .L27
  52:lp_solve_5.5/lp_scale.c ****     if(lp->scaling_used) {
 293               		.loc 1 52 0
 294 01be 8981      		ldd r24,Y+1
 295 01c0 9A81      		ldd r25,Y+2
 296 01c2 8A53      		subi r24,58
 297 01c4 9D4F      		sbci r25,-3
 298 01c6 FC01      		movw r30,r24
 299 01c8 8081      		ld r24,Z
 300 01ca 8823      		tst r24
 301 01cc 01F4      		brne .+2
 302 01ce 00C0      		rjmp .L20
  53:lp_solve_5.5/lp_scale.c ****       if(index > lp->rows)
 303               		.loc 1 53 0
 304 01d0 8981      		ldd r24,Y+1
 305 01d2 9A81      		ldd r25,Y+2
 306 01d4 8651      		subi r24,22
 307 01d6 9E4F      		sbci r25,-2
 308 01d8 FC01      		movw r30,r24
 309 01da 2081      		ld r18,Z
 310 01dc 3181      		ldd r19,Z+1
 311 01de 8F81      		ldd r24,Y+7
 312 01e0 9885      		ldd r25,Y+8
 313 01e2 2817      		cp r18,r24
 314 01e4 3907      		cpc r19,r25
 315 01e6 04F4      		brge .L19
  54:lp_solve_5.5/lp_scale.c ****         value *= lp->scalars[index];
 316               		.loc 1 54 0
 317 01e8 8981      		ldd r24,Y+1
 318 01ea 9A81      		ldd r25,Y+2
 319 01ec 8C53      		subi r24,60
 320 01ee 9D4F      		sbci r25,-3
 321 01f0 FC01      		movw r30,r24
 322 01f2 2081      		ld r18,Z
 323 01f4 3181      		ldd r19,Z+1
 324 01f6 8F81      		ldd r24,Y+7
 325 01f8 9885      		ldd r25,Y+8
 326 01fa 880F      		lsl r24
 327 01fc 991F      		rol r25
 328 01fe 880F      		lsl r24
 329 0200 991F      		rol r25
 330 0202 820F      		add r24,r18
 331 0204 931F      		adc r25,r19
 332 0206 FC01      		movw r30,r24
 333 0208 8081      		ld r24,Z
 334 020a 9181      		ldd r25,Z+1
 335 020c A281      		ldd r26,Z+2
 336 020e B381      		ldd r27,Z+3
 337 0210 9C01      		movw r18,r24
 338 0212 AD01      		movw r20,r26
 339 0214 6B81      		ldd r22,Y+3
 340 0216 7C81      		ldd r23,Y+4
 341 0218 8D81      		ldd r24,Y+5
 342 021a 9E81      		ldd r25,Y+6
 343 021c 0E94 0000 		call __mulsf3
 344 0220 DC01      		movw r26,r24
 345 0222 CB01      		movw r24,r22
 346 0224 8B83      		std Y+3,r24
 347 0226 9C83      		std Y+4,r25
 348 0228 AD83      		std Y+5,r26
 349 022a BE83      		std Y+6,r27
 350 022c 00C0      		rjmp .L20
 351               	.L19:
  55:lp_solve_5.5/lp_scale.c ****       else
  56:lp_solve_5.5/lp_scale.c ****         value /= lp->scalars[index];
 352               		.loc 1 56 0
 353 022e 8981      		ldd r24,Y+1
 354 0230 9A81      		ldd r25,Y+2
 355 0232 8C53      		subi r24,60
 356 0234 9D4F      		sbci r25,-3
 357 0236 FC01      		movw r30,r24
 358 0238 2081      		ld r18,Z
 359 023a 3181      		ldd r19,Z+1
 360 023c 8F81      		ldd r24,Y+7
 361 023e 9885      		ldd r25,Y+8
 362 0240 880F      		lsl r24
 363 0242 991F      		rol r25
 364 0244 880F      		lsl r24
 365 0246 991F      		rol r25
 366 0248 820F      		add r24,r18
 367 024a 931F      		adc r25,r19
 368 024c FC01      		movw r30,r24
 369 024e 8081      		ld r24,Z
 370 0250 9181      		ldd r25,Z+1
 371 0252 A281      		ldd r26,Z+2
 372 0254 B381      		ldd r27,Z+3
 373 0256 9C01      		movw r18,r24
 374 0258 AD01      		movw r20,r26
 375 025a 6B81      		ldd r22,Y+3
 376 025c 7C81      		ldd r23,Y+4
 377 025e 8D81      		ldd r24,Y+5
 378 0260 9E81      		ldd r25,Y+6
 379 0262 0E94 0000 		call __divsf3
 380 0266 DC01      		movw r26,r24
 381 0268 CB01      		movw r24,r22
 382 026a 8B83      		std Y+3,r24
 383 026c 9C83      		std Y+4,r25
 384 026e AD83      		std Y+5,r26
 385 0270 BE83      		std Y+6,r27
 386 0272 00C0      		rjmp .L20
 387               	.L27:
  57:lp_solve_5.5/lp_scale.c ****     }
  58:lp_solve_5.5/lp_scale.c ****   }
  59:lp_solve_5.5/lp_scale.c ****   else
  60:lp_solve_5.5/lp_scale.c ****     value = my_sign(value)*lp->infinite;
 388               		.loc 1 60 0
 389 0274 20E0      		ldi r18,0
 390 0276 30E0      		ldi r19,0
 391 0278 A901      		movw r20,r18
 392 027a 6B81      		ldd r22,Y+3
 393 027c 7C81      		ldd r23,Y+4
 394 027e 8D81      		ldd r24,Y+5
 395 0280 9E81      		ldd r25,Y+6
 396 0282 0E94 0000 		call __ltsf2
 397 0286 8823      		tst r24
 398 0288 04F4      		brge .L28
 399               		.loc 1 60 0 is_stmt 0 discriminator 1
 400 028a 80E0      		ldi r24,0
 401 028c 90E0      		ldi r25,0
 402 028e A0E8      		ldi r26,lo8(-128)
 403 0290 BFEB      		ldi r27,lo8(-65)
 404 0292 00C0      		rjmp .L23
 405               	.L28:
 406               		.loc 1 60 0 discriminator 2
 407 0294 80E0      		ldi r24,0
 408 0296 90E0      		ldi r25,0
 409 0298 A0E8      		ldi r26,lo8(-128)
 410 029a BFE3      		ldi r27,lo8(63)
 411               	.L23:
 412               		.loc 1 60 0 discriminator 4
 413 029c 2981      		ldd r18,Y+1
 414 029e 3A81      		ldd r19,Y+2
 415 02a0 265F      		subi r18,-10
 416 02a2 3C4F      		sbci r19,-4
 417 02a4 F901      		movw r30,r18
 418 02a6 2081      		ld r18,Z
 419 02a8 3181      		ldd r19,Z+1
 420 02aa 4281      		ldd r20,Z+2
 421 02ac 5381      		ldd r21,Z+3
 422 02ae BC01      		movw r22,r24
 423 02b0 CD01      		movw r24,r26
 424 02b2 0E94 0000 		call __mulsf3
 425 02b6 DC01      		movw r26,r24
 426 02b8 CB01      		movw r24,r22
 427 02ba 8B83      		std Y+3,r24
 428 02bc 9C83      		std Y+4,r25
 429 02be AD83      		std Y+5,r26
 430 02c0 BE83      		std Y+6,r27
 431               	.L20:
  61:lp_solve_5.5/lp_scale.c ****   return(value);
 432               		.loc 1 61 0 is_stmt 1
 433 02c2 8B81      		ldd r24,Y+3
 434 02c4 9C81      		ldd r25,Y+4
 435 02c6 AD81      		ldd r26,Y+5
 436 02c8 BE81      		ldd r27,Y+6
  62:lp_solve_5.5/lp_scale.c **** }
 437               		.loc 1 62 0
 438 02ca BC01      		movw r22,r24
 439 02cc CD01      		movw r24,r26
 440               	/* epilogue start */
 441 02ce 2896      		adiw r28,8
 442 02d0 0FB6      		in __tmp_reg__,__SREG__
 443 02d2 F894      		cli
 444 02d4 DEBF      		out __SP_H__,r29
 445 02d6 0FBE      		out __SREG__,__tmp_reg__
 446 02d8 CDBF      		out __SP_L__,r28
 447 02da DF91      		pop r29
 448 02dc CF91      		pop r28
 449 02de 0895      		ret
 450               		.cfi_endproc
 451               	.LFE8:
 453               	.global	scaled_mat
 455               	scaled_mat:
 456               	.LFB9:
  63:lp_solve_5.5/lp_scale.c **** 
  64:lp_solve_5.5/lp_scale.c **** STATIC REAL scaled_mat(lprec *lp, REAL value, int rownr, int colnr)
  65:lp_solve_5.5/lp_scale.c **** {
 457               		.loc 1 65 0
 458               		.cfi_startproc
 459 02e0 0F93      		push r16
 460               	.LCFI8:
 461               		.cfi_def_cfa_offset 3
 462               		.cfi_offset 16, -2
 463 02e2 1F93      		push r17
 464               	.LCFI9:
 465               		.cfi_def_cfa_offset 4
 466               		.cfi_offset 17, -3
 467 02e4 CF93      		push r28
 468               	.LCFI10:
 469               		.cfi_def_cfa_offset 5
 470               		.cfi_offset 28, -4
 471 02e6 DF93      		push r29
 472               	.LCFI11:
 473               		.cfi_def_cfa_offset 6
 474               		.cfi_offset 29, -5
 475 02e8 CDB7      		in r28,__SP_L__
 476 02ea DEB7      		in r29,__SP_H__
 477               	.LCFI12:
 478               		.cfi_def_cfa_register 28
 479 02ec 2A97      		sbiw r28,10
 480               	.LCFI13:
 481               		.cfi_def_cfa_offset 16
 482 02ee 0FB6      		in __tmp_reg__,__SREG__
 483 02f0 F894      		cli
 484 02f2 DEBF      		out __SP_H__,r29
 485 02f4 0FBE      		out __SREG__,__tmp_reg__
 486 02f6 CDBF      		out __SP_L__,r28
 487               	/* prologue: function */
 488               	/* frame size = 10 */
 489               	/* stack size = 14 */
 490               	.L__stack_usage = 14
 491 02f8 9A83      		std Y+2,r25
 492 02fa 8983      		std Y+1,r24
 493 02fc 4B83      		std Y+3,r20
 494 02fe 5C83      		std Y+4,r21
 495 0300 6D83      		std Y+5,r22
 496 0302 7E83      		std Y+6,r23
 497 0304 3887      		std Y+8,r19
 498 0306 2F83      		std Y+7,r18
 499 0308 1A87      		std Y+10,r17
 500 030a 0987      		std Y+9,r16
  66:lp_solve_5.5/lp_scale.c ****   if(lp->scaling_used)
 501               		.loc 1 66 0
 502 030c 8981      		ldd r24,Y+1
 503 030e 9A81      		ldd r25,Y+2
 504 0310 8A53      		subi r24,58
 505 0312 9D4F      		sbci r25,-3
 506 0314 FC01      		movw r30,r24
 507 0316 8081      		ld r24,Z
 508 0318 8823      		tst r24
 509 031a 01F4      		brne .+2
 510 031c 00C0      		rjmp .L30
  67:lp_solve_5.5/lp_scale.c ****     value *= lp->scalars[rownr] * lp->scalars[lp->rows + colnr];
 511               		.loc 1 67 0
 512 031e 8981      		ldd r24,Y+1
 513 0320 9A81      		ldd r25,Y+2
 514 0322 8C53      		subi r24,60
 515 0324 9D4F      		sbci r25,-3
 516 0326 FC01      		movw r30,r24
 517 0328 2081      		ld r18,Z
 518 032a 3181      		ldd r19,Z+1
 519 032c 8F81      		ldd r24,Y+7
 520 032e 9885      		ldd r25,Y+8
 521 0330 880F      		lsl r24
 522 0332 991F      		rol r25
 523 0334 880F      		lsl r24
 524 0336 991F      		rol r25
 525 0338 820F      		add r24,r18
 526 033a 931F      		adc r25,r19
 527 033c FC01      		movw r30,r24
 528 033e 8081      		ld r24,Z
 529 0340 9181      		ldd r25,Z+1
 530 0342 A281      		ldd r26,Z+2
 531 0344 B381      		ldd r27,Z+3
 532 0346 2981      		ldd r18,Y+1
 533 0348 3A81      		ldd r19,Y+2
 534 034a 2C53      		subi r18,60
 535 034c 3D4F      		sbci r19,-3
 536 034e F901      		movw r30,r18
 537 0350 4081      		ld r20,Z
 538 0352 5181      		ldd r21,Z+1
 539 0354 2981      		ldd r18,Y+1
 540 0356 3A81      		ldd r19,Y+2
 541 0358 2651      		subi r18,22
 542 035a 3E4F      		sbci r19,-2
 543 035c F901      		movw r30,r18
 544 035e 6081      		ld r22,Z
 545 0360 7181      		ldd r23,Z+1
 546 0362 2985      		ldd r18,Y+9
 547 0364 3A85      		ldd r19,Y+10
 548 0366 260F      		add r18,r22
 549 0368 371F      		adc r19,r23
 550 036a 220F      		lsl r18
 551 036c 331F      		rol r19
 552 036e 220F      		lsl r18
 553 0370 331F      		rol r19
 554 0372 240F      		add r18,r20
 555 0374 351F      		adc r19,r21
 556 0376 F901      		movw r30,r18
 557 0378 2081      		ld r18,Z
 558 037a 3181      		ldd r19,Z+1
 559 037c 4281      		ldd r20,Z+2
 560 037e 5381      		ldd r21,Z+3
 561 0380 BC01      		movw r22,r24
 562 0382 CD01      		movw r24,r26
 563 0384 0E94 0000 		call __mulsf3
 564 0388 DC01      		movw r26,r24
 565 038a CB01      		movw r24,r22
 566 038c 9C01      		movw r18,r24
 567 038e AD01      		movw r20,r26
 568 0390 6B81      		ldd r22,Y+3
 569 0392 7C81      		ldd r23,Y+4
 570 0394 8D81      		ldd r24,Y+5
 571 0396 9E81      		ldd r25,Y+6
 572 0398 0E94 0000 		call __mulsf3
 573 039c DC01      		movw r26,r24
 574 039e CB01      		movw r24,r22
 575 03a0 8B83      		std Y+3,r24
 576 03a2 9C83      		std Y+4,r25
 577 03a4 AD83      		std Y+5,r26
 578 03a6 BE83      		std Y+6,r27
 579               	.L30:
  68:lp_solve_5.5/lp_scale.c ****   return( value );
 580               		.loc 1 68 0
 581 03a8 8B81      		ldd r24,Y+3
 582 03aa 9C81      		ldd r25,Y+4
 583 03ac AD81      		ldd r26,Y+5
 584 03ae BE81      		ldd r27,Y+6
  69:lp_solve_5.5/lp_scale.c **** }
 585               		.loc 1 69 0
 586 03b0 BC01      		movw r22,r24
 587 03b2 CD01      		movw r24,r26
 588               	/* epilogue start */
 589 03b4 2A96      		adiw r28,10
 590 03b6 0FB6      		in __tmp_reg__,__SREG__
 591 03b8 F894      		cli
 592 03ba DEBF      		out __SP_H__,r29
 593 03bc 0FBE      		out __SREG__,__tmp_reg__
 594 03be CDBF      		out __SP_L__,r28
 595 03c0 DF91      		pop r29
 596 03c2 CF91      		pop r28
 597 03c4 1F91      		pop r17
 598 03c6 0F91      		pop r16
 599 03c8 0895      		ret
 600               		.cfi_endproc
 601               	.LFE9:
 603               	.global	unscaled_mat
 605               	unscaled_mat:
 606               	.LFB10:
  70:lp_solve_5.5/lp_scale.c **** 
  71:lp_solve_5.5/lp_scale.c **** STATIC REAL unscaled_mat(lprec *lp, REAL value, int rownr, int colnr)
  72:lp_solve_5.5/lp_scale.c **** {
 607               		.loc 1 72 0
 608               		.cfi_startproc
 609 03ca 0F93      		push r16
 610               	.LCFI14:
 611               		.cfi_def_cfa_offset 3
 612               		.cfi_offset 16, -2
 613 03cc 1F93      		push r17
 614               	.LCFI15:
 615               		.cfi_def_cfa_offset 4
 616               		.cfi_offset 17, -3
 617 03ce CF93      		push r28
 618               	.LCFI16:
 619               		.cfi_def_cfa_offset 5
 620               		.cfi_offset 28, -4
 621 03d0 DF93      		push r29
 622               	.LCFI17:
 623               		.cfi_def_cfa_offset 6
 624               		.cfi_offset 29, -5
 625 03d2 CDB7      		in r28,__SP_L__
 626 03d4 DEB7      		in r29,__SP_H__
 627               	.LCFI18:
 628               		.cfi_def_cfa_register 28
 629 03d6 2A97      		sbiw r28,10
 630               	.LCFI19:
 631               		.cfi_def_cfa_offset 16
 632 03d8 0FB6      		in __tmp_reg__,__SREG__
 633 03da F894      		cli
 634 03dc DEBF      		out __SP_H__,r29
 635 03de 0FBE      		out __SREG__,__tmp_reg__
 636 03e0 CDBF      		out __SP_L__,r28
 637               	/* prologue: function */
 638               	/* frame size = 10 */
 639               	/* stack size = 14 */
 640               	.L__stack_usage = 14
 641 03e2 9A83      		std Y+2,r25
 642 03e4 8983      		std Y+1,r24
 643 03e6 4B83      		std Y+3,r20
 644 03e8 5C83      		std Y+4,r21
 645 03ea 6D83      		std Y+5,r22
 646 03ec 7E83      		std Y+6,r23
 647 03ee 3887      		std Y+8,r19
 648 03f0 2F83      		std Y+7,r18
 649 03f2 1A87      		std Y+10,r17
 650 03f4 0987      		std Y+9,r16
  73:lp_solve_5.5/lp_scale.c ****   if(lp->scaling_used)
 651               		.loc 1 73 0
 652 03f6 8981      		ldd r24,Y+1
 653 03f8 9A81      		ldd r25,Y+2
 654 03fa 8A53      		subi r24,58
 655 03fc 9D4F      		sbci r25,-3
 656 03fe FC01      		movw r30,r24
 657 0400 8081      		ld r24,Z
 658 0402 8823      		tst r24
 659 0404 01F4      		brne .+2
 660 0406 00C0      		rjmp .L33
  74:lp_solve_5.5/lp_scale.c ****     value /= lp->scalars[rownr] * lp->scalars[lp->rows + colnr];
 661               		.loc 1 74 0
 662 0408 8981      		ldd r24,Y+1
 663 040a 9A81      		ldd r25,Y+2
 664 040c 8C53      		subi r24,60
 665 040e 9D4F      		sbci r25,-3
 666 0410 FC01      		movw r30,r24
 667 0412 2081      		ld r18,Z
 668 0414 3181      		ldd r19,Z+1
 669 0416 8F81      		ldd r24,Y+7
 670 0418 9885      		ldd r25,Y+8
 671 041a 880F      		lsl r24
 672 041c 991F      		rol r25
 673 041e 880F      		lsl r24
 674 0420 991F      		rol r25
 675 0422 820F      		add r24,r18
 676 0424 931F      		adc r25,r19
 677 0426 FC01      		movw r30,r24
 678 0428 8081      		ld r24,Z
 679 042a 9181      		ldd r25,Z+1
 680 042c A281      		ldd r26,Z+2
 681 042e B381      		ldd r27,Z+3
 682 0430 2981      		ldd r18,Y+1
 683 0432 3A81      		ldd r19,Y+2
 684 0434 2C53      		subi r18,60
 685 0436 3D4F      		sbci r19,-3
 686 0438 F901      		movw r30,r18
 687 043a 4081      		ld r20,Z
 688 043c 5181      		ldd r21,Z+1
 689 043e 2981      		ldd r18,Y+1
 690 0440 3A81      		ldd r19,Y+2
 691 0442 2651      		subi r18,22
 692 0444 3E4F      		sbci r19,-2
 693 0446 F901      		movw r30,r18
 694 0448 6081      		ld r22,Z
 695 044a 7181      		ldd r23,Z+1
 696 044c 2985      		ldd r18,Y+9
 697 044e 3A85      		ldd r19,Y+10
 698 0450 260F      		add r18,r22
 699 0452 371F      		adc r19,r23
 700 0454 220F      		lsl r18
 701 0456 331F      		rol r19
 702 0458 220F      		lsl r18
 703 045a 331F      		rol r19
 704 045c 240F      		add r18,r20
 705 045e 351F      		adc r19,r21
 706 0460 F901      		movw r30,r18
 707 0462 2081      		ld r18,Z
 708 0464 3181      		ldd r19,Z+1
 709 0466 4281      		ldd r20,Z+2
 710 0468 5381      		ldd r21,Z+3
 711 046a BC01      		movw r22,r24
 712 046c CD01      		movw r24,r26
 713 046e 0E94 0000 		call __mulsf3
 714 0472 DC01      		movw r26,r24
 715 0474 CB01      		movw r24,r22
 716 0476 9C01      		movw r18,r24
 717 0478 AD01      		movw r20,r26
 718 047a 6B81      		ldd r22,Y+3
 719 047c 7C81      		ldd r23,Y+4
 720 047e 8D81      		ldd r24,Y+5
 721 0480 9E81      		ldd r25,Y+6
 722 0482 0E94 0000 		call __divsf3
 723 0486 DC01      		movw r26,r24
 724 0488 CB01      		movw r24,r22
 725 048a 8B83      		std Y+3,r24
 726 048c 9C83      		std Y+4,r25
 727 048e AD83      		std Y+5,r26
 728 0490 BE83      		std Y+6,r27
 729               	.L33:
  75:lp_solve_5.5/lp_scale.c ****   return( value );
 730               		.loc 1 75 0
 731 0492 8B81      		ldd r24,Y+3
 732 0494 9C81      		ldd r25,Y+4
 733 0496 AD81      		ldd r26,Y+5
 734 0498 BE81      		ldd r27,Y+6
  76:lp_solve_5.5/lp_scale.c **** }
 735               		.loc 1 76 0
 736 049a BC01      		movw r22,r24
 737 049c CD01      		movw r24,r26
 738               	/* epilogue start */
 739 049e 2A96      		adiw r28,10
 740 04a0 0FB6      		in __tmp_reg__,__SREG__
 741 04a2 F894      		cli
 742 04a4 DEBF      		out __SP_H__,r29
 743 04a6 0FBE      		out __SREG__,__tmp_reg__
 744 04a8 CDBF      		out __SP_L__,r28
 745 04aa DF91      		pop r29
 746 04ac CF91      		pop r28
 747 04ae 1F91      		pop r17
 748 04b0 0F91      		pop r16
 749 04b2 0895      		ret
 750               		.cfi_endproc
 751               	.LFE10:
 753               	.global	__gtsf2
 754               	.global	__addsf3
 755               	.global	__subsf3
 756               	.global	CurtisReidMeasure
 758               	CurtisReidMeasure:
 759               	.LFB11:
  77:lp_solve_5.5/lp_scale.c **** 
  78:lp_solve_5.5/lp_scale.c **** /* Compute the scale factor by the formulae:
  79:lp_solve_5.5/lp_scale.c ****       FALSE: SUM (log |Aij|) ^ 2
  80:lp_solve_5.5/lp_scale.c ****       TRUE:  SUM (log |Aij| - RowScale[i] - ColScale[j]) ^ 2 */
  81:lp_solve_5.5/lp_scale.c **** REAL CurtisReidMeasure(lprec *lp, MYBOOL _Advanced, REAL *FRowScale, REAL *FColScale)
  82:lp_solve_5.5/lp_scale.c **** {
 760               		.loc 1 82 0
 761               		.cfi_startproc
 762 04b4 CF92      		push r12
 763               	.LCFI20:
 764               		.cfi_def_cfa_offset 3
 765               		.cfi_offset 12, -2
 766 04b6 DF92      		push r13
 767               	.LCFI21:
 768               		.cfi_def_cfa_offset 4
 769               		.cfi_offset 13, -3
 770 04b8 EF92      		push r14
 771               	.LCFI22:
 772               		.cfi_def_cfa_offset 5
 773               		.cfi_offset 14, -4
 774 04ba FF92      		push r15
 775               	.LCFI23:
 776               		.cfi_def_cfa_offset 6
 777               		.cfi_offset 15, -5
 778 04bc CF93      		push r28
 779               	.LCFI24:
 780               		.cfi_def_cfa_offset 7
 781               		.cfi_offset 28, -6
 782 04be DF93      		push r29
 783               	.LCFI25:
 784               		.cfi_def_cfa_offset 8
 785               		.cfi_offset 29, -7
 786 04c0 CDB7      		in r28,__SP_L__
 787 04c2 DEB7      		in r29,__SP_H__
 788               	.LCFI26:
 789               		.cfi_def_cfa_register 28
 790 04c4 6B97      		sbiw r28,27
 791               	.LCFI27:
 792               		.cfi_def_cfa_offset 35
 793 04c6 0FB6      		in __tmp_reg__,__SREG__
 794 04c8 F894      		cli
 795 04ca DEBF      		out __SP_H__,r29
 796 04cc 0FBE      		out __SREG__,__tmp_reg__
 797 04ce CDBF      		out __SP_L__,r28
 798               	/* prologue: function */
 799               	/* frame size = 27 */
 800               	/* stack size = 33 */
 801               	.L__stack_usage = 33
 802 04d0 9E8B      		std Y+22,r25
 803 04d2 8D8B      		std Y+21,r24
 804 04d4 6F8B      		std Y+23,r22
 805 04d6 598F      		std Y+25,r21
 806 04d8 488F      		std Y+24,r20
 807 04da 3B8F      		std Y+27,r19
 808 04dc 2A8F      		std Y+26,r18
  83:lp_solve_5.5/lp_scale.c ****   int      i, nz;
  84:lp_solve_5.5/lp_scale.c ****   REAL     absvalue, logvalue;
  85:lp_solve_5.5/lp_scale.c ****   register REAL result;
  86:lp_solve_5.5/lp_scale.c ****   MATrec   *mat = lp->matA;
 809               		.loc 1 86 0
 810 04de 8D89      		ldd r24,Y+21
 811 04e0 9E89      		ldd r25,Y+22
 812 04e2 8A54      		subi r24,74
 813 04e4 9D4F      		sbci r25,-3
 814 04e6 FC01      		movw r30,r24
 815 04e8 8081      		ld r24,Z
 816 04ea 9181      		ldd r25,Z+1
 817 04ec 9E87      		std Y+14,r25
 818 04ee 8D87      		std Y+13,r24
  87:lp_solve_5.5/lp_scale.c ****   REAL     *value;
  88:lp_solve_5.5/lp_scale.c ****   int      *rownr, *colnr;
  89:lp_solve_5.5/lp_scale.c **** 
  90:lp_solve_5.5/lp_scale.c ****   /* Do OF part */
  91:lp_solve_5.5/lp_scale.c ****   result = 0;
 819               		.loc 1 91 0
 820 04f0 C12C      		mov r12,__zero_reg__
 821 04f2 D12C      		mov r13,__zero_reg__
 822 04f4 7601      		movw r14,r12
  92:lp_solve_5.5/lp_scale.c ****   for(i = 1; i <= lp->columns; i++) {
 823               		.loc 1 92 0
 824 04f6 81E0      		ldi r24,lo8(1)
 825 04f8 90E0      		ldi r25,0
 826 04fa 9A83      		std Y+2,r25
 827 04fc 8983      		std Y+1,r24
 828 04fe 00C0      		rjmp .L36
 829               	.L40:
  93:lp_solve_5.5/lp_scale.c ****     absvalue = fabs(lp->orig_obj[i]);
 830               		.loc 1 93 0
 831 0500 8D89      		ldd r24,Y+21
 832 0502 9E89      		ldd r25,Y+22
 833 0504 845D      		subi r24,-44
 834 0506 9D4F      		sbci r25,-3
 835 0508 FC01      		movw r30,r24
 836 050a 2081      		ld r18,Z
 837 050c 3181      		ldd r19,Z+1
 838 050e 8981      		ldd r24,Y+1
 839 0510 9A81      		ldd r25,Y+2
 840 0512 880F      		lsl r24
 841 0514 991F      		rol r25
 842 0516 880F      		lsl r24
 843 0518 991F      		rol r25
 844 051a 820F      		add r24,r18
 845 051c 931F      		adc r25,r19
 846 051e FC01      		movw r30,r24
 847 0520 8081      		ld r24,Z
 848 0522 9181      		ldd r25,Z+1
 849 0524 A281      		ldd r26,Z+2
 850 0526 B381      		ldd r27,Z+3
 851 0528 BF77      		andi r27,0x7f
 852 052a 8F87      		std Y+15,r24
 853 052c 988B      		std Y+16,r25
 854 052e A98B      		std Y+17,r26
 855 0530 BA8B      		std Y+18,r27
  94:lp_solve_5.5/lp_scale.c ****     if(absvalue > 0) {
 856               		.loc 1 94 0
 857 0532 20E0      		ldi r18,0
 858 0534 30E0      		ldi r19,0
 859 0536 A901      		movw r20,r18
 860 0538 6F85      		ldd r22,Y+15
 861 053a 7889      		ldd r23,Y+16
 862 053c 8989      		ldd r24,Y+17
 863 053e 9A89      		ldd r25,Y+18
 864 0540 0E94 0000 		call __gtsf2
 865 0544 1816      		cp __zero_reg__,r24
 866 0546 04F0      		brlt .+2
 867 0548 00C0      		rjmp .L37
  95:lp_solve_5.5/lp_scale.c ****       logvalue = log(absvalue);
 868               		.loc 1 95 0
 869 054a 8F85      		ldd r24,Y+15
 870 054c 9889      		ldd r25,Y+16
 871 054e A989      		ldd r26,Y+17
 872 0550 BA89      		ldd r27,Y+18
 873 0552 BC01      		movw r22,r24
 874 0554 CD01      		movw r24,r26
 875 0556 0E94 0000 		call log
 876 055a DC01      		movw r26,r24
 877 055c CB01      		movw r24,r22
 878 055e 8B83      		std Y+3,r24
 879 0560 9C83      		std Y+4,r25
 880 0562 AD83      		std Y+5,r26
 881 0564 BE83      		std Y+6,r27
  96:lp_solve_5.5/lp_scale.c ****       if(_Advanced)
 882               		.loc 1 96 0
 883 0566 8F89      		ldd r24,Y+23
 884 0568 8823      		tst r24
 885 056a 01F0      		breq .L39
  97:lp_solve_5.5/lp_scale.c ****         logvalue -= FRowScale[0] + FColScale[i];
 886               		.loc 1 97 0
 887 056c 888D      		ldd r24,Y+24
 888 056e 998D      		ldd r25,Y+25
 889 0570 FC01      		movw r30,r24
 890 0572 8081      		ld r24,Z
 891 0574 9181      		ldd r25,Z+1
 892 0576 A281      		ldd r26,Z+2
 893 0578 B381      		ldd r27,Z+3
 894 057a 2981      		ldd r18,Y+1
 895 057c 3A81      		ldd r19,Y+2
 896 057e 220F      		lsl r18
 897 0580 331F      		rol r19
 898 0582 220F      		lsl r18
 899 0584 331F      		rol r19
 900 0586 4A8D      		ldd r20,Y+26
 901 0588 5B8D      		ldd r21,Y+27
 902 058a 240F      		add r18,r20
 903 058c 351F      		adc r19,r21
 904 058e F901      		movw r30,r18
 905 0590 2081      		ld r18,Z
 906 0592 3181      		ldd r19,Z+1
 907 0594 4281      		ldd r20,Z+2
 908 0596 5381      		ldd r21,Z+3
 909 0598 BC01      		movw r22,r24
 910 059a CD01      		movw r24,r26
 911 059c 0E94 0000 		call __addsf3
 912 05a0 DC01      		movw r26,r24
 913 05a2 CB01      		movw r24,r22
 914 05a4 9C01      		movw r18,r24
 915 05a6 AD01      		movw r20,r26
 916 05a8 6B81      		ldd r22,Y+3
 917 05aa 7C81      		ldd r23,Y+4
 918 05ac 8D81      		ldd r24,Y+5
 919 05ae 9E81      		ldd r25,Y+6
 920 05b0 0E94 0000 		call __subsf3
 921 05b4 DC01      		movw r26,r24
 922 05b6 CB01      		movw r24,r22
 923 05b8 8B83      		std Y+3,r24
 924 05ba 9C83      		std Y+4,r25
 925 05bc AD83      		std Y+5,r26
 926 05be BE83      		std Y+6,r27
 927               	.L39:
  98:lp_solve_5.5/lp_scale.c ****       result += logvalue*logvalue;
 928               		.loc 1 98 0
 929 05c0 2B81      		ldd r18,Y+3
 930 05c2 3C81      		ldd r19,Y+4
 931 05c4 4D81      		ldd r20,Y+5
 932 05c6 5E81      		ldd r21,Y+6
 933 05c8 6B81      		ldd r22,Y+3
 934 05ca 7C81      		ldd r23,Y+4
 935 05cc 8D81      		ldd r24,Y+5
 936 05ce 9E81      		ldd r25,Y+6
 937 05d0 0E94 0000 		call __mulsf3
 938 05d4 DC01      		movw r26,r24
 939 05d6 CB01      		movw r24,r22
 940 05d8 9C01      		movw r18,r24
 941 05da AD01      		movw r20,r26
 942 05dc C701      		movw r24,r14
 943 05de B601      		movw r22,r12
 944 05e0 0E94 0000 		call __addsf3
 945 05e4 DC01      		movw r26,r24
 946 05e6 CB01      		movw r24,r22
 947 05e8 6C01      		movw r12,r24
 948 05ea 7D01      		movw r14,r26
 949               	.L37:
  92:lp_solve_5.5/lp_scale.c ****     absvalue = fabs(lp->orig_obj[i]);
 950               		.loc 1 92 0 discriminator 2
 951 05ec 8981      		ldd r24,Y+1
 952 05ee 9A81      		ldd r25,Y+2
 953 05f0 0196      		adiw r24,1
 954 05f2 9A83      		std Y+2,r25
 955 05f4 8983      		std Y+1,r24
 956               	.L36:
  92:lp_solve_5.5/lp_scale.c ****     absvalue = fabs(lp->orig_obj[i]);
 957               		.loc 1 92 0 is_stmt 0 discriminator 1
 958 05f6 8D89      		ldd r24,Y+21
 959 05f8 9E89      		ldd r25,Y+22
 960 05fa 8451      		subi r24,20
 961 05fc 9E4F      		sbci r25,-2
 962 05fe FC01      		movw r30,r24
 963 0600 2081      		ld r18,Z
 964 0602 3181      		ldd r19,Z+1
 965 0604 8981      		ldd r24,Y+1
 966 0606 9A81      		ldd r25,Y+2
 967 0608 2817      		cp r18,r24
 968 060a 3907      		cpc r19,r25
 969 060c 04F0      		brlt .+2
 970 060e 00C0      		rjmp .L40
  99:lp_solve_5.5/lp_scale.c ****     }
 100:lp_solve_5.5/lp_scale.c ****   }
 101:lp_solve_5.5/lp_scale.c **** 
 102:lp_solve_5.5/lp_scale.c ****   /* Do constraint matrix part */
 103:lp_solve_5.5/lp_scale.c ****   mat_validate(mat);
 971               		.loc 1 103 0 is_stmt 1
 972 0610 8D85      		ldd r24,Y+13
 973 0612 9E85      		ldd r25,Y+14
 974 0614 0E94 0000 		call mat_validate
 104:lp_solve_5.5/lp_scale.c ****   value = &(COL_MAT_VALUE(0));
 975               		.loc 1 104 0
 976 0618 8D85      		ldd r24,Y+13
 977 061a 9E85      		ldd r25,Y+14
 978 061c FC01      		movw r30,r24
 979 061e 8089      		ldd r24,Z+16
 980 0620 9189      		ldd r25,Z+17
 981 0622 9887      		std Y+8,r25
 982 0624 8F83      		std Y+7,r24
 105:lp_solve_5.5/lp_scale.c ****   rownr = &(COL_MAT_ROWNR(0));
 983               		.loc 1 105 0
 984 0626 8D85      		ldd r24,Y+13
 985 0628 9E85      		ldd r25,Y+14
 986 062a FC01      		movw r30,r24
 987 062c 8685      		ldd r24,Z+14
 988 062e 9785      		ldd r25,Z+15
 989 0630 9A87      		std Y+10,r25
 990 0632 8987      		std Y+9,r24
 106:lp_solve_5.5/lp_scale.c ****   colnr = &(COL_MAT_COLNR(0));
 991               		.loc 1 106 0
 992 0634 8D85      		ldd r24,Y+13
 993 0636 9E85      		ldd r25,Y+14
 994 0638 FC01      		movw r30,r24
 995 063a 8485      		ldd r24,Z+12
 996 063c 9585      		ldd r25,Z+13
 997 063e 9C87      		std Y+12,r25
 998 0640 8B87      		std Y+11,r24
 107:lp_solve_5.5/lp_scale.c ****   nz = get_nonzeros(lp);
 999               		.loc 1 107 0
 1000 0642 8D89      		ldd r24,Y+21
 1001 0644 9E89      		ldd r25,Y+22
 1002 0646 0E94 0000 		call get_nonzeros
 1003 064a 9C8B      		std Y+20,r25
 1004 064c 8B8B      		std Y+19,r24
 108:lp_solve_5.5/lp_scale.c ****   for(i = 0; i < nz;
 1005               		.loc 1 108 0
 1006 064e 1A82      		std Y+2,__zero_reg__
 1007 0650 1982      		std Y+1,__zero_reg__
 1008 0652 00C0      		rjmp .L41
 1009               	.L45:
 109:lp_solve_5.5/lp_scale.c ****       i++, value += matValueStep, rownr += matRowColStep, colnr += matRowColStep) {
 110:lp_solve_5.5/lp_scale.c ****     absvalue = fabs(*value);
 1010               		.loc 1 110 0
 1011 0654 8F81      		ldd r24,Y+7
 1012 0656 9885      		ldd r25,Y+8
 1013 0658 FC01      		movw r30,r24
 1014 065a 8081      		ld r24,Z
 1015 065c 9181      		ldd r25,Z+1
 1016 065e A281      		ldd r26,Z+2
 1017 0660 B381      		ldd r27,Z+3
 1018 0662 BF77      		andi r27,0x7f
 1019 0664 8F87      		std Y+15,r24
 1020 0666 988B      		std Y+16,r25
 1021 0668 A98B      		std Y+17,r26
 1022 066a BA8B      		std Y+18,r27
 111:lp_solve_5.5/lp_scale.c ****     if(absvalue > 0) {
 1023               		.loc 1 111 0
 1024 066c 20E0      		ldi r18,0
 1025 066e 30E0      		ldi r19,0
 1026 0670 A901      		movw r20,r18
 1027 0672 6F85      		ldd r22,Y+15
 1028 0674 7889      		ldd r23,Y+16
 1029 0676 8989      		ldd r24,Y+17
 1030 0678 9A89      		ldd r25,Y+18
 1031 067a 0E94 0000 		call __gtsf2
 1032 067e 1816      		cp __zero_reg__,r24
 1033 0680 04F0      		brlt .+2
 1034 0682 00C0      		rjmp .L42
 112:lp_solve_5.5/lp_scale.c ****       logvalue = log(absvalue);
 1035               		.loc 1 112 0
 1036 0684 8F85      		ldd r24,Y+15
 1037 0686 9889      		ldd r25,Y+16
 1038 0688 A989      		ldd r26,Y+17
 1039 068a BA89      		ldd r27,Y+18
 1040 068c BC01      		movw r22,r24
 1041 068e CD01      		movw r24,r26
 1042 0690 0E94 0000 		call log
 1043 0694 DC01      		movw r26,r24
 1044 0696 CB01      		movw r24,r22
 1045 0698 8B83      		std Y+3,r24
 1046 069a 9C83      		std Y+4,r25
 1047 069c AD83      		std Y+5,r26
 1048 069e BE83      		std Y+6,r27
 113:lp_solve_5.5/lp_scale.c ****       if(_Advanced)
 1049               		.loc 1 113 0
 1050 06a0 8F89      		ldd r24,Y+23
 1051 06a2 8823      		tst r24
 1052 06a4 01F0      		breq .L44
 114:lp_solve_5.5/lp_scale.c ****         logvalue -= FRowScale[*rownr] + FColScale[*colnr];
 1053               		.loc 1 114 0
 1054 06a6 8985      		ldd r24,Y+9
 1055 06a8 9A85      		ldd r25,Y+10
 1056 06aa FC01      		movw r30,r24
 1057 06ac 8081      		ld r24,Z
 1058 06ae 9181      		ldd r25,Z+1
 1059 06b0 880F      		lsl r24
 1060 06b2 991F      		rol r25
 1061 06b4 880F      		lsl r24
 1062 06b6 991F      		rol r25
 1063 06b8 288D      		ldd r18,Y+24
 1064 06ba 398D      		ldd r19,Y+25
 1065 06bc 820F      		add r24,r18
 1066 06be 931F      		adc r25,r19
 1067 06c0 FC01      		movw r30,r24
 1068 06c2 8081      		ld r24,Z
 1069 06c4 9181      		ldd r25,Z+1
 1070 06c6 A281      		ldd r26,Z+2
 1071 06c8 B381      		ldd r27,Z+3
 1072 06ca 2B85      		ldd r18,Y+11
 1073 06cc 3C85      		ldd r19,Y+12
 1074 06ce F901      		movw r30,r18
 1075 06d0 2081      		ld r18,Z
 1076 06d2 3181      		ldd r19,Z+1
 1077 06d4 220F      		lsl r18
 1078 06d6 331F      		rol r19
 1079 06d8 220F      		lsl r18
 1080 06da 331F      		rol r19
 1081 06dc 4A8D      		ldd r20,Y+26
 1082 06de 5B8D      		ldd r21,Y+27
 1083 06e0 240F      		add r18,r20
 1084 06e2 351F      		adc r19,r21
 1085 06e4 F901      		movw r30,r18
 1086 06e6 2081      		ld r18,Z
 1087 06e8 3181      		ldd r19,Z+1
 1088 06ea 4281      		ldd r20,Z+2
 1089 06ec 5381      		ldd r21,Z+3
 1090 06ee BC01      		movw r22,r24
 1091 06f0 CD01      		movw r24,r26
 1092 06f2 0E94 0000 		call __addsf3
 1093 06f6 DC01      		movw r26,r24
 1094 06f8 CB01      		movw r24,r22
 1095 06fa 9C01      		movw r18,r24
 1096 06fc AD01      		movw r20,r26
 1097 06fe 6B81      		ldd r22,Y+3
 1098 0700 7C81      		ldd r23,Y+4
 1099 0702 8D81      		ldd r24,Y+5
 1100 0704 9E81      		ldd r25,Y+6
 1101 0706 0E94 0000 		call __subsf3
 1102 070a DC01      		movw r26,r24
 1103 070c CB01      		movw r24,r22
 1104 070e 8B83      		std Y+3,r24
 1105 0710 9C83      		std Y+4,r25
 1106 0712 AD83      		std Y+5,r26
 1107 0714 BE83      		std Y+6,r27
 1108               	.L44:
 115:lp_solve_5.5/lp_scale.c ****       result += logvalue*logvalue;
 1109               		.loc 1 115 0
 1110 0716 2B81      		ldd r18,Y+3
 1111 0718 3C81      		ldd r19,Y+4
 1112 071a 4D81      		ldd r20,Y+5
 1113 071c 5E81      		ldd r21,Y+6
 1114 071e 6B81      		ldd r22,Y+3
 1115 0720 7C81      		ldd r23,Y+4
 1116 0722 8D81      		ldd r24,Y+5
 1117 0724 9E81      		ldd r25,Y+6
 1118 0726 0E94 0000 		call __mulsf3
 1119 072a DC01      		movw r26,r24
 1120 072c CB01      		movw r24,r22
 1121 072e 9C01      		movw r18,r24
 1122 0730 AD01      		movw r20,r26
 1123 0732 C701      		movw r24,r14
 1124 0734 B601      		movw r22,r12
 1125 0736 0E94 0000 		call __addsf3
 1126 073a DC01      		movw r26,r24
 1127 073c CB01      		movw r24,r22
 1128 073e 6C01      		movw r12,r24
 1129 0740 7D01      		movw r14,r26
 1130               	.L42:
 109:lp_solve_5.5/lp_scale.c ****     absvalue = fabs(*value);
 1131               		.loc 1 109 0
 1132 0742 8981      		ldd r24,Y+1
 1133 0744 9A81      		ldd r25,Y+2
 1134 0746 0196      		adiw r24,1
 1135 0748 9A83      		std Y+2,r25
 1136 074a 8983      		std Y+1,r24
 1137 074c 8F81      		ldd r24,Y+7
 1138 074e 9885      		ldd r25,Y+8
 1139 0750 0496      		adiw r24,4
 1140 0752 9887      		std Y+8,r25
 1141 0754 8F83      		std Y+7,r24
 1142 0756 8985      		ldd r24,Y+9
 1143 0758 9A85      		ldd r25,Y+10
 1144 075a 0296      		adiw r24,2
 1145 075c 9A87      		std Y+10,r25
 1146 075e 8987      		std Y+9,r24
 1147 0760 8B85      		ldd r24,Y+11
 1148 0762 9C85      		ldd r25,Y+12
 1149 0764 0296      		adiw r24,2
 1150 0766 9C87      		std Y+12,r25
 1151 0768 8B87      		std Y+11,r24
 1152               	.L41:
 108:lp_solve_5.5/lp_scale.c ****       i++, value += matValueStep, rownr += matRowColStep, colnr += matRowColStep) {
 1153               		.loc 1 108 0 discriminator 1
 1154 076a 2981      		ldd r18,Y+1
 1155 076c 3A81      		ldd r19,Y+2
 1156 076e 8B89      		ldd r24,Y+19
 1157 0770 9C89      		ldd r25,Y+20
 1158 0772 2817      		cp r18,r24
 1159 0774 3907      		cpc r19,r25
 1160 0776 04F4      		brge .+2
 1161 0778 00C0      		rjmp .L45
 116:lp_solve_5.5/lp_scale.c ****     }
 117:lp_solve_5.5/lp_scale.c ****   }
 118:lp_solve_5.5/lp_scale.c ****   return( result );
 1162               		.loc 1 118 0
 1163 077a D701      		movw r26,r14
 1164 077c C601      		movw r24,r12
 119:lp_solve_5.5/lp_scale.c **** }
 1165               		.loc 1 119 0
 1166 077e BC01      		movw r22,r24
 1167 0780 CD01      		movw r24,r26
 1168               	/* epilogue start */
 1169 0782 6B96      		adiw r28,27
 1170 0784 0FB6      		in __tmp_reg__,__SREG__
 1171 0786 F894      		cli
 1172 0788 DEBF      		out __SP_H__,r29
 1173 078a 0FBE      		out __SREG__,__tmp_reg__
 1174 078c CDBF      		out __SP_L__,r28
 1175 078e DF91      		pop r29
 1176 0790 CF91      		pop r28
 1177 0792 FF90      		pop r15
 1178 0794 EF90      		pop r14
 1179 0796 DF90      		pop r13
 1180 0798 CF90      		pop r12
 1181 079a 0895      		ret
 1182               		.cfi_endproc
 1183               	.LFE11:
 1185               	.global	__floatsisf
 1186               	.global	__nesf2
 1187               	.global	CurtisReidScales
 1189               	CurtisReidScales:
 1190               	.LFB12:
 120:lp_solve_5.5/lp_scale.c **** 
 121:lp_solve_5.5/lp_scale.c **** /* Implementation of the Curtis-Reid scaling based on the paper
 122:lp_solve_5.5/lp_scale.c ****    "On the Automatic Scaling of Matrices for Gaussian
 123:lp_solve_5.5/lp_scale.c ****     Elimination," Journal of the Institute of Mathematics and
 124:lp_solve_5.5/lp_scale.c ****     Its Applications (1972) 10, 118-124.
 125:lp_solve_5.5/lp_scale.c **** 
 126:lp_solve_5.5/lp_scale.c ****     Solve the system | M   E | (r)   (sigma)
 127:lp_solve_5.5/lp_scale.c ****                      |       | ( ) = (     )
 128:lp_solve_5.5/lp_scale.c ****                      | E^T N | (c)   ( tau )
 129:lp_solve_5.5/lp_scale.c **** 
 130:lp_solve_5.5/lp_scale.c ****     by the conjugate gradient method (clever recurrences).
 131:lp_solve_5.5/lp_scale.c **** 
 132:lp_solve_5.5/lp_scale.c ****     E is the matrix A with all elements = 1
 133:lp_solve_5.5/lp_scale.c **** 
 134:lp_solve_5.5/lp_scale.c ****     M is diagonal matrix of row    counts (RowCount)
 135:lp_solve_5.5/lp_scale.c ****     N is diagonal matrix of column counts (ColCount)
 136:lp_solve_5.5/lp_scale.c **** 
 137:lp_solve_5.5/lp_scale.c ****     sigma is the vector of row    logarithm sums (RowSum)
 138:lp_solve_5.5/lp_scale.c ****     tau   is the vector of column logarithm sums (ColSum)
 139:lp_solve_5.5/lp_scale.c **** 
 140:lp_solve_5.5/lp_scale.c ****     r, c are resulting row and column scalings (RowScale, ColScale) */
 141:lp_solve_5.5/lp_scale.c **** 
 142:lp_solve_5.5/lp_scale.c **** int CurtisReidScales(lprec *lp, MYBOOL _Advanced, REAL *FRowScale, REAL *FColScale)
 143:lp_solve_5.5/lp_scale.c **** {
 1191               		.loc 1 143 0
 1192               		.cfi_startproc
 1193 079c 4F92      		push r4
 1194               	.LCFI28:
 1195               		.cfi_def_cfa_offset 3
 1196               		.cfi_offset 4, -2
 1197 079e 5F92      		push r5
 1198               	.LCFI29:
 1199               		.cfi_def_cfa_offset 4
 1200               		.cfi_offset 5, -3
 1201 07a0 6F92      		push r6
 1202               	.LCFI30:
 1203               		.cfi_def_cfa_offset 5
 1204               		.cfi_offset 6, -4
 1205 07a2 7F92      		push r7
 1206               	.LCFI31:
 1207               		.cfi_def_cfa_offset 6
 1208               		.cfi_offset 7, -5
 1209 07a4 8F92      		push r8
 1210               	.LCFI32:
 1211               		.cfi_def_cfa_offset 7
 1212               		.cfi_offset 8, -6
 1213 07a6 9F92      		push r9
 1214               	.LCFI33:
 1215               		.cfi_def_cfa_offset 8
 1216               		.cfi_offset 9, -7
 1217 07a8 AF92      		push r10
 1218               	.LCFI34:
 1219               		.cfi_def_cfa_offset 9
 1220               		.cfi_offset 10, -8
 1221 07aa BF92      		push r11
 1222               	.LCFI35:
 1223               		.cfi_def_cfa_offset 10
 1224               		.cfi_offset 11, -9
 1225 07ac CF92      		push r12
 1226               	.LCFI36:
 1227               		.cfi_def_cfa_offset 11
 1228               		.cfi_offset 12, -10
 1229 07ae DF92      		push r13
 1230               	.LCFI37:
 1231               		.cfi_def_cfa_offset 12
 1232               		.cfi_offset 13, -11
 1233 07b0 EF92      		push r14
 1234               	.LCFI38:
 1235               		.cfi_def_cfa_offset 13
 1236               		.cfi_offset 14, -12
 1237 07b2 FF92      		push r15
 1238               	.LCFI39:
 1239               		.cfi_def_cfa_offset 14
 1240               		.cfi_offset 15, -13
 1241 07b4 0F93      		push r16
 1242               	.LCFI40:
 1243               		.cfi_def_cfa_offset 15
 1244               		.cfi_offset 16, -14
 1245 07b6 1F93      		push r17
 1246               	.LCFI41:
 1247               		.cfi_def_cfa_offset 16
 1248               		.cfi_offset 17, -15
 1249 07b8 CF93      		push r28
 1250               	.LCFI42:
 1251               		.cfi_def_cfa_offset 17
 1252               		.cfi_offset 28, -16
 1253 07ba DF93      		push r29
 1254               	.LCFI43:
 1255               		.cfi_def_cfa_offset 18
 1256               		.cfi_offset 29, -17
 1257 07bc CDB7      		in r28,__SP_L__
 1258 07be DEB7      		in r29,__SP_H__
 1259               	.LCFI44:
 1260               		.cfi_def_cfa_register 28
 1261 07c0 C156      		subi r28,97
 1262 07c2 D109      		sbc r29,__zero_reg__
 1263               	.LCFI45:
 1264               		.cfi_def_cfa_offset 115
 1265 07c4 0FB6      		in __tmp_reg__,__SREG__
 1266 07c6 F894      		cli
 1267 07c8 DEBF      		out __SP_H__,r29
 1268 07ca 0FBE      		out __SREG__,__tmp_reg__
 1269 07cc CDBF      		out __SP_L__,r28
 1270               	/* prologue: function */
 1271               	/* frame size = 97 */
 1272               	/* stack size = 113 */
 1273               	.L__stack_usage = 113
 1274 07ce FE01      		movw r30,r28
 1275 07d0 E55A      		subi r30,-91
 1276 07d2 FF4F      		sbci r31,-1
 1277 07d4 9183      		std Z+1,r25
 1278 07d6 8083      		st Z,r24
 1279 07d8 CE01      		movw r24,r28
 1280 07da 835A      		subi r24,-93
 1281 07dc 9F4F      		sbci r25,-1
 1282 07de DC01      		movw r26,r24
 1283 07e0 6C93      		st X,r22
 1284 07e2 CE01      		movw r24,r28
 1285 07e4 825A      		subi r24,-94
 1286 07e6 9F4F      		sbci r25,-1
 1287 07e8 FC01      		movw r30,r24
 1288 07ea 5183      		std Z+1,r21
 1289 07ec 4083      		st Z,r20
 1290 07ee CE01      		movw r24,r28
 1291 07f0 805A      		subi r24,-96
 1292 07f2 9F4F      		sbci r25,-1
 1293 07f4 DC01      		movw r26,r24
 1294 07f6 2D93      		st X+,r18
 1295 07f8 3C93      		st X,r19
 144:lp_solve_5.5/lp_scale.c ****   int    i, row, col, ent, nz;
 145:lp_solve_5.5/lp_scale.c ****   REAL   *RowScalem2, *ColScalem2,
 146:lp_solve_5.5/lp_scale.c ****          *RowSum, *ColSum,
 147:lp_solve_5.5/lp_scale.c ****          *residual_even, *residual_odd;
 148:lp_solve_5.5/lp_scale.c ****   REAL   sk,   qk,     ek,
 149:lp_solve_5.5/lp_scale.c ****          skm1, qkm1,   ekm1,
 150:lp_solve_5.5/lp_scale.c ****          qkm2, qkqkm1, ekm2, ekekm1,
 151:lp_solve_5.5/lp_scale.c ****          absvalue, logvalue,
 152:lp_solve_5.5/lp_scale.c ****          StopTolerance;
 153:lp_solve_5.5/lp_scale.c ****   int    *RowCount, *ColCount, colMax;
 154:lp_solve_5.5/lp_scale.c ****   int    Result;
 155:lp_solve_5.5/lp_scale.c ****   MATrec *mat = lp->matA;
 1296               		.loc 1 155 0
 1297 07fa CE01      		movw r24,r28
 1298 07fc 855A      		subi r24,-91
 1299 07fe 9F4F      		sbci r25,-1
 1300 0800 FC01      		movw r30,r24
 1301 0802 8081      		ld r24,Z
 1302 0804 9181      		ldd r25,Z+1
 1303 0806 8A54      		subi r24,74
 1304 0808 9D4F      		sbci r25,-3
 1305 080a DC01      		movw r26,r24
 1306 080c 8D91      		ld r24,X+
 1307 080e 9C91      		ld r25,X
 1308 0810 9CA7      		std Y+44,r25
 1309 0812 8BA7      		std Y+43,r24
 156:lp_solve_5.5/lp_scale.c ****   REAL   *value;
 157:lp_solve_5.5/lp_scale.c ****   int    *rownr, *colnr;
 158:lp_solve_5.5/lp_scale.c **** 
 159:lp_solve_5.5/lp_scale.c ****   if(CurtisReidMeasure(lp, _Advanced, FRowScale, FColScale)<0.1*get_nonzeros(lp))
 1310               		.loc 1 159 0
 1311 0814 CE01      		movw r24,r28
 1312 0816 805A      		subi r24,-96
 1313 0818 9F4F      		sbci r25,-1
 1314 081a FC01      		movw r30,r24
 1315 081c 6081      		ld r22,Z
 1316 081e 7181      		ldd r23,Z+1
 1317 0820 CE01      		movw r24,r28
 1318 0822 825A      		subi r24,-94
 1319 0824 9F4F      		sbci r25,-1
 1320 0826 DC01      		movw r26,r24
 1321 0828 4D91      		ld r20,X+
 1322 082a 5C91      		ld r21,X
 1323 082c CE01      		movw r24,r28
 1324 082e 835A      		subi r24,-93
 1325 0830 9F4F      		sbci r25,-1
 1326 0832 9E01      		movw r18,r28
 1327 0834 255A      		subi r18,-91
 1328 0836 3F4F      		sbci r19,-1
 1329 0838 D901      		movw r26,r18
 1330 083a ED91      		ld r30,X+
 1331 083c FC91      		ld r31,X
 1332 083e 9B01      		movw r18,r22
 1333 0840 DC01      		movw r26,r24
 1334 0842 6C91      		ld r22,X
 1335 0844 CF01      		movw r24,r30
 1336 0846 0E94 0000 		call CurtisReidMeasure
 1337 084a 6B01      		movw r12,r22
 1338 084c 7C01      		movw r14,r24
 1339 084e CE01      		movw r24,r28
 1340 0850 855A      		subi r24,-91
 1341 0852 9F4F      		sbci r25,-1
 1342 0854 FC01      		movw r30,r24
 1343 0856 8081      		ld r24,Z
 1344 0858 9181      		ldd r25,Z+1
 1345 085a 0E94 0000 		call get_nonzeros
 1346 085e 092E      		mov __tmp_reg__,r25
 1347 0860 000C      		lsl r0
 1348 0862 AA0B      		sbc r26,r26
 1349 0864 BB0B      		sbc r27,r27
 1350 0866 BC01      		movw r22,r24
 1351 0868 CD01      		movw r24,r26
 1352 086a 0E94 0000 		call __floatsisf
 1353 086e DC01      		movw r26,r24
 1354 0870 CB01      		movw r24,r22
 1355 0872 2DEC      		ldi r18,lo8(-51)
 1356 0874 3CEC      		ldi r19,lo8(-52)
 1357 0876 4CEC      		ldi r20,lo8(-52)
 1358 0878 5DE3      		ldi r21,lo8(61)
 1359 087a BC01      		movw r22,r24
 1360 087c CD01      		movw r24,r26
 1361 087e 0E94 0000 		call __mulsf3
 1362 0882 DC01      		movw r26,r24
 1363 0884 CB01      		movw r24,r22
 1364 0886 9C01      		movw r18,r24
 1365 0888 AD01      		movw r20,r26
 1366 088a C701      		movw r24,r14
 1367 088c B601      		movw r22,r12
 1368 088e 0E94 0000 		call __ltsf2
 1369 0892 8823      		tst r24
 1370 0894 04F4      		brge .L174
 160:lp_solve_5.5/lp_scale.c ****   return(0);
 1371               		.loc 1 160 0
 1372 0896 80E0      		ldi r24,0
 1373 0898 90E0      		ldi r25,0
 1374 089a 0C94 0000 		jmp .L158
 1375               	.L174:
 161:lp_solve_5.5/lp_scale.c **** 
 162:lp_solve_5.5/lp_scale.c ****   /* Allocate temporary memory and find RowSum and ColSum measures */
 163:lp_solve_5.5/lp_scale.c ****   nz = get_nonzeros(lp);
 1376               		.loc 1 163 0
 1377 089e CE01      		movw r24,r28
 1378 08a0 855A      		subi r24,-91
 1379 08a2 9F4F      		sbci r25,-1
 1380 08a4 DC01      		movw r26,r24
 1381 08a6 8D91      		ld r24,X+
 1382 08a8 9C91      		ld r25,X
 1383 08aa 0E94 0000 		call get_nonzeros
 1384 08ae 9EA7      		std Y+46,r25
 1385 08b0 8DA7      		std Y+45,r24
 164:lp_solve_5.5/lp_scale.c ****   colMax = lp->columns;
 1386               		.loc 1 164 0
 1387 08b2 CE01      		movw r24,r28
 1388 08b4 855A      		subi r24,-91
 1389 08b6 9F4F      		sbci r25,-1
 1390 08b8 FC01      		movw r30,r24
 1391 08ba 8081      		ld r24,Z
 1392 08bc 9181      		ldd r25,Z+1
 1393 08be 8451      		subi r24,20
 1394 08c0 9E4F      		sbci r25,-2
 1395 08c2 DC01      		movw r26,r24
 1396 08c4 8D91      		ld r24,X+
 1397 08c6 9C91      		ld r25,X
 1398 08c8 98AB      		std Y+48,r25
 1399 08ca 8FA7      		std Y+47,r24
 165:lp_solve_5.5/lp_scale.c **** 
 166:lp_solve_5.5/lp_scale.c ****   allocREAL(lp, &RowSum, lp->rows+1, TRUE);
 1400               		.loc 1 166 0
 1401 08cc CE01      		movw r24,r28
 1402 08ce 855A      		subi r24,-91
 1403 08d0 9F4F      		sbci r25,-1
 1404 08d2 FC01      		movw r30,r24
 1405 08d4 8081      		ld r24,Z
 1406 08d6 9181      		ldd r25,Z+1
 1407 08d8 8651      		subi r24,22
 1408 08da 9E4F      		sbci r25,-2
 1409 08dc DC01      		movw r26,r24
 1410 08de 8D91      		ld r24,X+
 1411 08e0 9C91      		ld r25,X
 1412 08e2 AC01      		movw r20,r24
 1413 08e4 4F5F      		subi r20,-1
 1414 08e6 5F4F      		sbci r21,-1
 1415 08e8 BE01      		movw r22,r28
 1416 08ea 615B      		subi r22,-79
 1417 08ec 7F4F      		sbci r23,-1
 1418 08ee CE01      		movw r24,r28
 1419 08f0 855A      		subi r24,-91
 1420 08f2 9F4F      		sbci r25,-1
 1421 08f4 FC01      		movw r30,r24
 1422 08f6 8081      		ld r24,Z
 1423 08f8 9181      		ldd r25,Z+1
 1424 08fa 21E0      		ldi r18,lo8(1)
 1425 08fc 0E94 0000 		call allocREAL
 167:lp_solve_5.5/lp_scale.c ****   allocINT(lp,  &RowCount, lp->rows+1, TRUE);
 1426               		.loc 1 167 0
 1427 0900 CE01      		movw r24,r28
 1428 0902 855A      		subi r24,-91
 1429 0904 9F4F      		sbci r25,-1
 1430 0906 DC01      		movw r26,r24
 1431 0908 8D91      		ld r24,X+
 1432 090a 9C91      		ld r25,X
 1433 090c 8651      		subi r24,22
 1434 090e 9E4F      		sbci r25,-2
 1435 0910 FC01      		movw r30,r24
 1436 0912 8081      		ld r24,Z
 1437 0914 9181      		ldd r25,Z+1
 1438 0916 AC01      		movw r20,r24
 1439 0918 4F5F      		subi r20,-1
 1440 091a 5F4F      		sbci r21,-1
 1441 091c BE01      		movw r22,r28
 1442 091e 695A      		subi r22,-87
 1443 0920 7F4F      		sbci r23,-1
 1444 0922 CE01      		movw r24,r28
 1445 0924 855A      		subi r24,-91
 1446 0926 9F4F      		sbci r25,-1
 1447 0928 DC01      		movw r26,r24
 1448 092a 8D91      		ld r24,X+
 1449 092c 9C91      		ld r25,X
 1450 092e 21E0      		ldi r18,lo8(1)
 1451 0930 0E94 0000 		call allocINT
 168:lp_solve_5.5/lp_scale.c ****   allocREAL(lp, &residual_odd, lp->rows+1, TRUE);
 1452               		.loc 1 168 0
 1453 0934 CE01      		movw r24,r28
 1454 0936 855A      		subi r24,-91
 1455 0938 9F4F      		sbci r25,-1
 1456 093a FC01      		movw r30,r24
 1457 093c 8081      		ld r24,Z
 1458 093e 9181      		ldd r25,Z+1
 1459 0940 8651      		subi r24,22
 1460 0942 9E4F      		sbci r25,-2
 1461 0944 DC01      		movw r26,r24
 1462 0946 8D91      		ld r24,X+
 1463 0948 9C91      		ld r25,X
 1464 094a AC01      		movw r20,r24
 1465 094c 4F5F      		subi r20,-1
 1466 094e 5F4F      		sbci r21,-1
 1467 0950 BE01      		movw r22,r28
 1468 0952 6B5A      		subi r22,-85
 1469 0954 7F4F      		sbci r23,-1
 1470 0956 CE01      		movw r24,r28
 1471 0958 855A      		subi r24,-91
 1472 095a 9F4F      		sbci r25,-1
 1473 095c FC01      		movw r30,r24
 1474 095e 8081      		ld r24,Z
 1475 0960 9181      		ldd r25,Z+1
 1476 0962 21E0      		ldi r18,lo8(1)
 1477 0964 0E94 0000 		call allocREAL
 169:lp_solve_5.5/lp_scale.c **** 
 170:lp_solve_5.5/lp_scale.c ****   allocREAL(lp, &ColSum, colMax+1, TRUE);
 1478               		.loc 1 170 0
 1479 0968 8FA5      		ldd r24,Y+47
 1480 096a 98A9      		ldd r25,Y+48
 1481 096c AC01      		movw r20,r24
 1482 096e 4F5F      		subi r20,-1
 1483 0970 5F4F      		sbci r21,-1
 1484 0972 BE01      		movw r22,r28
 1485 0974 6F5A      		subi r22,-81
 1486 0976 7F4F      		sbci r23,-1
 1487 0978 CE01      		movw r24,r28
 1488 097a 855A      		subi r24,-91
 1489 097c 9F4F      		sbci r25,-1
 1490 097e DC01      		movw r26,r24
 1491 0980 8D91      		ld r24,X+
 1492 0982 9C91      		ld r25,X
 1493 0984 21E0      		ldi r18,lo8(1)
 1494 0986 0E94 0000 		call allocREAL
 171:lp_solve_5.5/lp_scale.c ****   allocINT(lp,  &ColCount, colMax+1, TRUE);
 1495               		.loc 1 171 0
 1496 098a 8FA5      		ldd r24,Y+47
 1497 098c 98A9      		ldd r25,Y+48
 1498 098e AC01      		movw r20,r24
 1499 0990 4F5F      		subi r20,-1
 1500 0992 5F4F      		sbci r21,-1
 1501 0994 BE01      		movw r22,r28
 1502 0996 675A      		subi r22,-89
 1503 0998 7F4F      		sbci r23,-1
 1504 099a CE01      		movw r24,r28
 1505 099c 855A      		subi r24,-91
 1506 099e 9F4F      		sbci r25,-1
 1507 09a0 FC01      		movw r30,r24
 1508 09a2 8081      		ld r24,Z
 1509 09a4 9181      		ldd r25,Z+1
 1510 09a6 21E0      		ldi r18,lo8(1)
 1511 09a8 0E94 0000 		call allocINT
 172:lp_solve_5.5/lp_scale.c ****   allocREAL(lp, &residual_even, colMax+1, TRUE);
 1512               		.loc 1 172 0
 1513 09ac 8FA5      		ldd r24,Y+47
 1514 09ae 98A9      		ldd r25,Y+48
 1515 09b0 AC01      		movw r20,r24
 1516 09b2 4F5F      		subi r20,-1
 1517 09b4 5F4F      		sbci r21,-1
 1518 09b6 BE01      		movw r22,r28
 1519 09b8 6D5A      		subi r22,-83
 1520 09ba 7F4F      		sbci r23,-1
 1521 09bc CE01      		movw r24,r28
 1522 09be 855A      		subi r24,-91
 1523 09c0 9F4F      		sbci r25,-1
 1524 09c2 DC01      		movw r26,r24
 1525 09c4 8D91      		ld r24,X+
 1526 09c6 9C91      		ld r25,X
 1527 09c8 21E0      		ldi r18,lo8(1)
 1528 09ca 0E94 0000 		call allocREAL
 173:lp_solve_5.5/lp_scale.c **** 
 174:lp_solve_5.5/lp_scale.c ****   allocREAL(lp, &RowScalem2, lp->rows+1, FALSE);
 1529               		.loc 1 174 0
 1530 09ce CE01      		movw r24,r28
 1531 09d0 855A      		subi r24,-91
 1532 09d2 9F4F      		sbci r25,-1
 1533 09d4 FC01      		movw r30,r24
 1534 09d6 8081      		ld r24,Z
 1535 09d8 9181      		ldd r25,Z+1
 1536 09da 8651      		subi r24,22
 1537 09dc 9E4F      		sbci r25,-2
 1538 09de DC01      		movw r26,r24
 1539 09e0 8D91      		ld r24,X+
 1540 09e2 9C91      		ld r25,X
 1541 09e4 AC01      		movw r20,r24
 1542 09e6 4F5F      		subi r20,-1
 1543 09e8 5F4F      		sbci r21,-1
 1544 09ea BE01      		movw r22,r28
 1545 09ec 655B      		subi r22,-75
 1546 09ee 7F4F      		sbci r23,-1
 1547 09f0 CE01      		movw r24,r28
 1548 09f2 855A      		subi r24,-91
 1549 09f4 9F4F      		sbci r25,-1
 1550 09f6 FC01      		movw r30,r24
 1551 09f8 8081      		ld r24,Z
 1552 09fa 9181      		ldd r25,Z+1
 1553 09fc 20E0      		ldi r18,0
 1554 09fe 0E94 0000 		call allocREAL
 175:lp_solve_5.5/lp_scale.c ****   allocREAL(lp, &ColScalem2, colMax+1, FALSE);
 1555               		.loc 1 175 0
 1556 0a02 8FA5      		ldd r24,Y+47
 1557 0a04 98A9      		ldd r25,Y+48
 1558 0a06 AC01      		movw r20,r24
 1559 0a08 4F5F      		subi r20,-1
 1560 0a0a 5F4F      		sbci r21,-1
 1561 0a0c BE01      		movw r22,r28
 1562 0a0e 635B      		subi r22,-77
 1563 0a10 7F4F      		sbci r23,-1
 1564 0a12 CE01      		movw r24,r28
 1565 0a14 855A      		subi r24,-91
 1566 0a16 9F4F      		sbci r25,-1
 1567 0a18 DC01      		movw r26,r24
 1568 0a1a 8D91      		ld r24,X+
 1569 0a1c 9C91      		ld r25,X
 1570 0a1e 20E0      		ldi r18,0
 1571 0a20 0E94 0000 		call allocREAL
 176:lp_solve_5.5/lp_scale.c **** 
 177:lp_solve_5.5/lp_scale.c ****   /* Set origin for row scaling */
 178:lp_solve_5.5/lp_scale.c ****   for(i = 1; i <= colMax; i++) {
 1572               		.loc 1 178 0
 1573 0a24 81E0      		ldi r24,lo8(1)
 1574 0a26 90E0      		ldi r25,0
 1575 0a28 9A83      		std Y+2,r25
 1576 0a2a 8983      		std Y+1,r24
 1577 0a2c 00C0      		rjmp .L53
 1578               	.L56:
 179:lp_solve_5.5/lp_scale.c ****     absvalue=fabs(lp->orig_obj[i]);
 1579               		.loc 1 179 0
 1580 0a2e CE01      		movw r24,r28
 1581 0a30 855A      		subi r24,-91
 1582 0a32 9F4F      		sbci r25,-1
 1583 0a34 FC01      		movw r30,r24
 1584 0a36 8081      		ld r24,Z
 1585 0a38 9181      		ldd r25,Z+1
 1586 0a3a 845D      		subi r24,-44
 1587 0a3c 9D4F      		sbci r25,-3
 1588 0a3e DC01      		movw r26,r24
 1589 0a40 2D91      		ld r18,X+
 1590 0a42 3C91      		ld r19,X
 1591 0a44 8981      		ldd r24,Y+1
 1592 0a46 9A81      		ldd r25,Y+2
 1593 0a48 880F      		lsl r24
 1594 0a4a 991F      		rol r25
 1595 0a4c 880F      		lsl r24
 1596 0a4e 991F      		rol r25
 1597 0a50 820F      		add r24,r18
 1598 0a52 931F      		adc r25,r19
 1599 0a54 FC01      		movw r30,r24
 1600 0a56 8081      		ld r24,Z
 1601 0a58 9181      		ldd r25,Z+1
 1602 0a5a A281      		ldd r26,Z+2
 1603 0a5c B381      		ldd r27,Z+3
 1604 0a5e BF77      		andi r27,0x7f
 1605 0a60 8F8F      		std Y+31,r24
 1606 0a62 98A3      		std Y+32,r25
 1607 0a64 A9A3      		std Y+33,r26
 1608 0a66 BAA3      		std Y+34,r27
 180:lp_solve_5.5/lp_scale.c ****     if(absvalue>0) {
 1609               		.loc 1 180 0
 1610 0a68 20E0      		ldi r18,0
 1611 0a6a 30E0      		ldi r19,0
 1612 0a6c A901      		movw r20,r18
 1613 0a6e 6F8D      		ldd r22,Y+31
 1614 0a70 78A1      		ldd r23,Y+32
 1615 0a72 89A1      		ldd r24,Y+33
 1616 0a74 9AA1      		ldd r25,Y+34
 1617 0a76 0E94 0000 		call __gtsf2
 1618 0a7a 1816      		cp __zero_reg__,r24
 1619 0a7c 04F0      		brlt .+2
 1620 0a7e 00C0      		rjmp .L54
 181:lp_solve_5.5/lp_scale.c ****       logvalue = log(absvalue);
 1621               		.loc 1 181 0
 1622 0a80 8F8D      		ldd r24,Y+31
 1623 0a82 98A1      		ldd r25,Y+32
 1624 0a84 A9A1      		ldd r26,Y+33
 1625 0a86 BAA1      		ldd r27,Y+34
 1626 0a88 BC01      		movw r22,r24
 1627 0a8a CD01      		movw r24,r26
 1628 0a8c 0E94 0000 		call log
 1629 0a90 DC01      		movw r26,r24
 1630 0a92 CB01      		movw r24,r22
 1631 0a94 89AB      		std Y+49,r24
 1632 0a96 9AAB      		std Y+50,r25
 1633 0a98 ABAB      		std Y+51,r26
 1634 0a9a BCAB      		std Y+52,r27
 182:lp_solve_5.5/lp_scale.c ****       ColSum[i] += logvalue;
 1635               		.loc 1 182 0
 1636 0a9c CE01      		movw r24,r28
 1637 0a9e 8F5A      		subi r24,-81
 1638 0aa0 9F4F      		sbci r25,-1
 1639 0aa2 DC01      		movw r26,r24
 1640 0aa4 2D91      		ld r18,X+
 1641 0aa6 3C91      		ld r19,X
 1642 0aa8 8981      		ldd r24,Y+1
 1643 0aaa 9A81      		ldd r25,Y+2
 1644 0aac 880F      		lsl r24
 1645 0aae 991F      		rol r25
 1646 0ab0 880F      		lsl r24
 1647 0ab2 991F      		rol r25
 1648 0ab4 8901      		movw r16,r18
 1649 0ab6 080F      		add r16,r24
 1650 0ab8 191F      		adc r17,r25
 1651 0aba CE01      		movw r24,r28
 1652 0abc 8F5A      		subi r24,-81
 1653 0abe 9F4F      		sbci r25,-1
 1654 0ac0 FC01      		movw r30,r24
 1655 0ac2 2081      		ld r18,Z
 1656 0ac4 3181      		ldd r19,Z+1
 1657 0ac6 8981      		ldd r24,Y+1
 1658 0ac8 9A81      		ldd r25,Y+2
 1659 0aca 880F      		lsl r24
 1660 0acc 991F      		rol r25
 1661 0ace 880F      		lsl r24
 1662 0ad0 991F      		rol r25
 1663 0ad2 820F      		add r24,r18
 1664 0ad4 931F      		adc r25,r19
 1665 0ad6 FC01      		movw r30,r24
 1666 0ad8 8081      		ld r24,Z
 1667 0ada 9181      		ldd r25,Z+1
 1668 0adc A281      		ldd r26,Z+2
 1669 0ade B381      		ldd r27,Z+3
 1670 0ae0 29A9      		ldd r18,Y+49
 1671 0ae2 3AA9      		ldd r19,Y+50
 1672 0ae4 4BA9      		ldd r20,Y+51
 1673 0ae6 5CA9      		ldd r21,Y+52
 1674 0ae8 BC01      		movw r22,r24
 1675 0aea CD01      		movw r24,r26
 1676 0aec 0E94 0000 		call __addsf3
 1677 0af0 DC01      		movw r26,r24
 1678 0af2 CB01      		movw r24,r22
 1679 0af4 F801      		movw r30,r16
 1680 0af6 8083      		st Z,r24
 1681 0af8 9183      		std Z+1,r25
 1682 0afa A283      		std Z+2,r26
 1683 0afc B383      		std Z+3,r27
 183:lp_solve_5.5/lp_scale.c ****       RowSum[0] += logvalue;
 1684               		.loc 1 183 0
 1685 0afe CE01      		movw r24,r28
 1686 0b00 815B      		subi r24,-79
 1687 0b02 9F4F      		sbci r25,-1
 1688 0b04 DC01      		movw r26,r24
 1689 0b06 0D91      		ld r16,X+
 1690 0b08 1C91      		ld r17,X
 1691 0b0a CE01      		movw r24,r28
 1692 0b0c 815B      		subi r24,-79
 1693 0b0e 9F4F      		sbci r25,-1
 1694 0b10 FC01      		movw r30,r24
 1695 0b12 8081      		ld r24,Z
 1696 0b14 9181      		ldd r25,Z+1
 1697 0b16 FC01      		movw r30,r24
 1698 0b18 8081      		ld r24,Z
 1699 0b1a 9181      		ldd r25,Z+1
 1700 0b1c A281      		ldd r26,Z+2
 1701 0b1e B381      		ldd r27,Z+3
 1702 0b20 29A9      		ldd r18,Y+49
 1703 0b22 3AA9      		ldd r19,Y+50
 1704 0b24 4BA9      		ldd r20,Y+51
 1705 0b26 5CA9      		ldd r21,Y+52
 1706 0b28 BC01      		movw r22,r24
 1707 0b2a CD01      		movw r24,r26
 1708 0b2c 0E94 0000 		call __addsf3
 1709 0b30 DC01      		movw r26,r24
 1710 0b32 CB01      		movw r24,r22
 1711 0b34 F801      		movw r30,r16
 1712 0b36 8083      		st Z,r24
 1713 0b38 9183      		std Z+1,r25
 1714 0b3a A283      		std Z+2,r26
 1715 0b3c B383      		std Z+3,r27
 184:lp_solve_5.5/lp_scale.c ****       ColCount[i]++;
 1716               		.loc 1 184 0
 1717 0b3e CE01      		movw r24,r28
 1718 0b40 875A      		subi r24,-89
 1719 0b42 9F4F      		sbci r25,-1
 1720 0b44 DC01      		movw r26,r24
 1721 0b46 2D91      		ld r18,X+
 1722 0b48 3C91      		ld r19,X
 1723 0b4a 8981      		ldd r24,Y+1
 1724 0b4c 9A81      		ldd r25,Y+2
 1725 0b4e 880F      		lsl r24
 1726 0b50 991F      		rol r25
 1727 0b52 820F      		add r24,r18
 1728 0b54 931F      		adc r25,r19
 1729 0b56 FC01      		movw r30,r24
 1730 0b58 2081      		ld r18,Z
 1731 0b5a 3181      		ldd r19,Z+1
 1732 0b5c 2F5F      		subi r18,-1
 1733 0b5e 3F4F      		sbci r19,-1
 1734 0b60 DC01      		movw r26,r24
 1735 0b62 2D93      		st X+,r18
 1736 0b64 3C93      		st X,r19
 185:lp_solve_5.5/lp_scale.c ****       RowCount[0]++;
 1737               		.loc 1 185 0
 1738 0b66 CE01      		movw r24,r28
 1739 0b68 895A      		subi r24,-87
 1740 0b6a 9F4F      		sbci r25,-1
 1741 0b6c FC01      		movw r30,r24
 1742 0b6e 8081      		ld r24,Z
 1743 0b70 9181      		ldd r25,Z+1
 1744 0b72 DC01      		movw r26,r24
 1745 0b74 2D91      		ld r18,X+
 1746 0b76 3C91      		ld r19,X
 1747 0b78 2F5F      		subi r18,-1
 1748 0b7a 3F4F      		sbci r19,-1
 1749 0b7c FC01      		movw r30,r24
 1750 0b7e 3183      		std Z+1,r19
 1751 0b80 2083      		st Z,r18
 1752               	.L54:
 178:lp_solve_5.5/lp_scale.c ****     absvalue=fabs(lp->orig_obj[i]);
 1753               		.loc 1 178 0 discriminator 2
 1754 0b82 8981      		ldd r24,Y+1
 1755 0b84 9A81      		ldd r25,Y+2
 1756 0b86 0196      		adiw r24,1
 1757 0b88 9A83      		std Y+2,r25
 1758 0b8a 8983      		std Y+1,r24
 1759               	.L53:
 178:lp_solve_5.5/lp_scale.c ****     absvalue=fabs(lp->orig_obj[i]);
 1760               		.loc 1 178 0 is_stmt 0 discriminator 1
 1761 0b8c 2981      		ldd r18,Y+1
 1762 0b8e 3A81      		ldd r19,Y+2
 1763 0b90 8FA5      		ldd r24,Y+47
 1764 0b92 98A9      		ldd r25,Y+48
 1765 0b94 8217      		cp r24,r18
 1766 0b96 9307      		cpc r25,r19
 1767 0b98 04F0      		brlt .+2
 1768 0b9a 00C0      		rjmp .L56
 186:lp_solve_5.5/lp_scale.c ****     }
 187:lp_solve_5.5/lp_scale.c ****   }
 188:lp_solve_5.5/lp_scale.c **** 
 189:lp_solve_5.5/lp_scale.c ****   value = &(COL_MAT_VALUE(0));
 1769               		.loc 1 189 0 is_stmt 1
 1770 0b9c 8BA5      		ldd r24,Y+43
 1771 0b9e 9CA5      		ldd r25,Y+44
 1772 0ba0 DC01      		movw r26,r24
 1773 0ba2 5096      		adiw r26,16
 1774 0ba4 8D91      		ld r24,X+
 1775 0ba6 9C91      		ld r25,X
 1776 0ba8 5197      		sbiw r26,16+1
 1777 0baa 9EA3      		std Y+38,r25
 1778 0bac 8DA3      		std Y+37,r24
 190:lp_solve_5.5/lp_scale.c ****   rownr = &(COL_MAT_ROWNR(0));
 1779               		.loc 1 190 0
 1780 0bae 8BA5      		ldd r24,Y+43
 1781 0bb0 9CA5      		ldd r25,Y+44
 1782 0bb2 FC01      		movw r30,r24
 1783 0bb4 8685      		ldd r24,Z+14
 1784 0bb6 9785      		ldd r25,Z+15
 1785 0bb8 98A7      		std Y+40,r25
 1786 0bba 8FA3      		std Y+39,r24
 191:lp_solve_5.5/lp_scale.c ****   colnr = &(COL_MAT_COLNR(0));
 1787               		.loc 1 191 0
 1788 0bbc 8BA5      		ldd r24,Y+43
 1789 0bbe 9CA5      		ldd r25,Y+44
 1790 0bc0 DC01      		movw r26,r24
 1791 0bc2 1C96      		adiw r26,12
 1792 0bc4 8D91      		ld r24,X+
 1793 0bc6 9C91      		ld r25,X
 1794 0bc8 1D97      		sbiw r26,12+1
 1795 0bca 9AA7      		std Y+42,r25
 1796 0bcc 89A7      		std Y+41,r24
 192:lp_solve_5.5/lp_scale.c ****   for(i = 0; i < nz;
 1797               		.loc 1 192 0
 1798 0bce 1A82      		std Y+2,__zero_reg__
 1799 0bd0 1982      		std Y+1,__zero_reg__
 1800 0bd2 00C0      		rjmp .L57
 1801               	.L60:
 193:lp_solve_5.5/lp_scale.c ****       i++, value += matValueStep, rownr += matRowColStep, colnr += matRowColStep) {
 194:lp_solve_5.5/lp_scale.c ****     absvalue=fabs(*value);
 1802               		.loc 1 194 0
 1803 0bd4 8DA1      		ldd r24,Y+37
 1804 0bd6 9EA1      		ldd r25,Y+38
 1805 0bd8 FC01      		movw r30,r24
 1806 0bda 8081      		ld r24,Z
 1807 0bdc 9181      		ldd r25,Z+1
 1808 0bde A281      		ldd r26,Z+2
 1809 0be0 B381      		ldd r27,Z+3
 1810 0be2 BF77      		andi r27,0x7f
 1811 0be4 8F8F      		std Y+31,r24
 1812 0be6 98A3      		std Y+32,r25
 1813 0be8 A9A3      		std Y+33,r26
 1814 0bea BAA3      		std Y+34,r27
 195:lp_solve_5.5/lp_scale.c ****     if(absvalue>0) {
 1815               		.loc 1 195 0
 1816 0bec 20E0      		ldi r18,0
 1817 0bee 30E0      		ldi r19,0
 1818 0bf0 A901      		movw r20,r18
 1819 0bf2 6F8D      		ldd r22,Y+31
 1820 0bf4 78A1      		ldd r23,Y+32
 1821 0bf6 89A1      		ldd r24,Y+33
 1822 0bf8 9AA1      		ldd r25,Y+34
 1823 0bfa 0E94 0000 		call __gtsf2
 1824 0bfe 1816      		cp __zero_reg__,r24
 1825 0c00 04F0      		brlt .+2
 1826 0c02 00C0      		rjmp .L58
 196:lp_solve_5.5/lp_scale.c ****       logvalue = log(absvalue);
 1827               		.loc 1 196 0
 1828 0c04 8F8D      		ldd r24,Y+31
 1829 0c06 98A1      		ldd r25,Y+32
 1830 0c08 A9A1      		ldd r26,Y+33
 1831 0c0a BAA1      		ldd r27,Y+34
 1832 0c0c BC01      		movw r22,r24
 1833 0c0e CD01      		movw r24,r26
 1834 0c10 0E94 0000 		call log
 1835 0c14 DC01      		movw r26,r24
 1836 0c16 CB01      		movw r24,r22
 1837 0c18 89AB      		std Y+49,r24
 1838 0c1a 9AAB      		std Y+50,r25
 1839 0c1c ABAB      		std Y+51,r26
 1840 0c1e BCAB      		std Y+52,r27
 197:lp_solve_5.5/lp_scale.c ****       ColSum[*colnr] += logvalue;
 1841               		.loc 1 197 0
 1842 0c20 CE01      		movw r24,r28
 1843 0c22 8F5A      		subi r24,-81
 1844 0c24 9F4F      		sbci r25,-1
 1845 0c26 DC01      		movw r26,r24
 1846 0c28 2D91      		ld r18,X+
 1847 0c2a 3C91      		ld r19,X
 1848 0c2c 89A5      		ldd r24,Y+41
 1849 0c2e 9AA5      		ldd r25,Y+42
 1850 0c30 FC01      		movw r30,r24
 1851 0c32 8081      		ld r24,Z
 1852 0c34 9181      		ldd r25,Z+1
 1853 0c36 880F      		lsl r24
 1854 0c38 991F      		rol r25
 1855 0c3a 880F      		lsl r24
 1856 0c3c 991F      		rol r25
 1857 0c3e 8901      		movw r16,r18
 1858 0c40 080F      		add r16,r24
 1859 0c42 191F      		adc r17,r25
 1860 0c44 CE01      		movw r24,r28
 1861 0c46 8F5A      		subi r24,-81
 1862 0c48 9F4F      		sbci r25,-1
 1863 0c4a DC01      		movw r26,r24
 1864 0c4c 2D91      		ld r18,X+
 1865 0c4e 3C91      		ld r19,X
 1866 0c50 89A5      		ldd r24,Y+41
 1867 0c52 9AA5      		ldd r25,Y+42
 1868 0c54 FC01      		movw r30,r24
 1869 0c56 8081      		ld r24,Z
 1870 0c58 9181      		ldd r25,Z+1
 1871 0c5a 880F      		lsl r24
 1872 0c5c 991F      		rol r25
 1873 0c5e 880F      		lsl r24
 1874 0c60 991F      		rol r25
 1875 0c62 820F      		add r24,r18
 1876 0c64 931F      		adc r25,r19
 1877 0c66 FC01      		movw r30,r24
 1878 0c68 8081      		ld r24,Z
 1879 0c6a 9181      		ldd r25,Z+1
 1880 0c6c A281      		ldd r26,Z+2
 1881 0c6e B381      		ldd r27,Z+3
 1882 0c70 29A9      		ldd r18,Y+49
 1883 0c72 3AA9      		ldd r19,Y+50
 1884 0c74 4BA9      		ldd r20,Y+51
 1885 0c76 5CA9      		ldd r21,Y+52
 1886 0c78 BC01      		movw r22,r24
 1887 0c7a CD01      		movw r24,r26
 1888 0c7c 0E94 0000 		call __addsf3
 1889 0c80 DC01      		movw r26,r24
 1890 0c82 CB01      		movw r24,r22
 1891 0c84 F801      		movw r30,r16
 1892 0c86 8083      		st Z,r24
 1893 0c88 9183      		std Z+1,r25
 1894 0c8a A283      		std Z+2,r26
 1895 0c8c B383      		std Z+3,r27
 198:lp_solve_5.5/lp_scale.c ****       RowSum[*rownr] += logvalue;
 1896               		.loc 1 198 0
 1897 0c8e CE01      		movw r24,r28
 1898 0c90 815B      		subi r24,-79
 1899 0c92 9F4F      		sbci r25,-1
 1900 0c94 DC01      		movw r26,r24
 1901 0c96 2D91      		ld r18,X+
 1902 0c98 3C91      		ld r19,X
 1903 0c9a 8FA1      		ldd r24,Y+39
 1904 0c9c 98A5      		ldd r25,Y+40
 1905 0c9e FC01      		movw r30,r24
 1906 0ca0 8081      		ld r24,Z
 1907 0ca2 9181      		ldd r25,Z+1
 1908 0ca4 880F      		lsl r24
 1909 0ca6 991F      		rol r25
 1910 0ca8 880F      		lsl r24
 1911 0caa 991F      		rol r25
 1912 0cac 8901      		movw r16,r18
 1913 0cae 080F      		add r16,r24
 1914 0cb0 191F      		adc r17,r25
 1915 0cb2 CE01      		movw r24,r28
 1916 0cb4 815B      		subi r24,-79
 1917 0cb6 9F4F      		sbci r25,-1
 1918 0cb8 DC01      		movw r26,r24
 1919 0cba 2D91      		ld r18,X+
 1920 0cbc 3C91      		ld r19,X
 1921 0cbe 8FA1      		ldd r24,Y+39
 1922 0cc0 98A5      		ldd r25,Y+40
 1923 0cc2 FC01      		movw r30,r24
 1924 0cc4 8081      		ld r24,Z
 1925 0cc6 9181      		ldd r25,Z+1
 1926 0cc8 880F      		lsl r24
 1927 0cca 991F      		rol r25
 1928 0ccc 880F      		lsl r24
 1929 0cce 991F      		rol r25
 1930 0cd0 820F      		add r24,r18
 1931 0cd2 931F      		adc r25,r19
 1932 0cd4 FC01      		movw r30,r24
 1933 0cd6 8081      		ld r24,Z
 1934 0cd8 9181      		ldd r25,Z+1
 1935 0cda A281      		ldd r26,Z+2
 1936 0cdc B381      		ldd r27,Z+3
 1937 0cde 29A9      		ldd r18,Y+49
 1938 0ce0 3AA9      		ldd r19,Y+50
 1939 0ce2 4BA9      		ldd r20,Y+51
 1940 0ce4 5CA9      		ldd r21,Y+52
 1941 0ce6 BC01      		movw r22,r24
 1942 0ce8 CD01      		movw r24,r26
 1943 0cea 0E94 0000 		call __addsf3
 1944 0cee DC01      		movw r26,r24
 1945 0cf0 CB01      		movw r24,r22
 1946 0cf2 F801      		movw r30,r16
 1947 0cf4 8083      		st Z,r24
 1948 0cf6 9183      		std Z+1,r25
 1949 0cf8 A283      		std Z+2,r26
 1950 0cfa B383      		std Z+3,r27
 199:lp_solve_5.5/lp_scale.c ****       ColCount[*colnr]++;
 1951               		.loc 1 199 0
 1952 0cfc CE01      		movw r24,r28
 1953 0cfe 875A      		subi r24,-89
 1954 0d00 9F4F      		sbci r25,-1
 1955 0d02 DC01      		movw r26,r24
 1956 0d04 2D91      		ld r18,X+
 1957 0d06 3C91      		ld r19,X
 1958 0d08 89A5      		ldd r24,Y+41
 1959 0d0a 9AA5      		ldd r25,Y+42
 1960 0d0c FC01      		movw r30,r24
 1961 0d0e 8081      		ld r24,Z
 1962 0d10 9181      		ldd r25,Z+1
 1963 0d12 880F      		lsl r24
 1964 0d14 991F      		rol r25
 1965 0d16 820F      		add r24,r18
 1966 0d18 931F      		adc r25,r19
 1967 0d1a DC01      		movw r26,r24
 1968 0d1c 2D91      		ld r18,X+
 1969 0d1e 3C91      		ld r19,X
 1970 0d20 2F5F      		subi r18,-1
 1971 0d22 3F4F      		sbci r19,-1
 1972 0d24 FC01      		movw r30,r24
 1973 0d26 3183      		std Z+1,r19
 1974 0d28 2083      		st Z,r18
 200:lp_solve_5.5/lp_scale.c ****       RowCount[*rownr]++;
 1975               		.loc 1 200 0
 1976 0d2a CE01      		movw r24,r28
 1977 0d2c 895A      		subi r24,-87
 1978 0d2e 9F4F      		sbci r25,-1
 1979 0d30 DC01      		movw r26,r24
 1980 0d32 2D91      		ld r18,X+
 1981 0d34 3C91      		ld r19,X
 1982 0d36 8FA1      		ldd r24,Y+39
 1983 0d38 98A5      		ldd r25,Y+40
 1984 0d3a FC01      		movw r30,r24
 1985 0d3c 8081      		ld r24,Z
 1986 0d3e 9181      		ldd r25,Z+1
 1987 0d40 880F      		lsl r24
 1988 0d42 991F      		rol r25
 1989 0d44 820F      		add r24,r18
 1990 0d46 931F      		adc r25,r19
 1991 0d48 DC01      		movw r26,r24
 1992 0d4a 2D91      		ld r18,X+
 1993 0d4c 3C91      		ld r19,X
 1994 0d4e 2F5F      		subi r18,-1
 1995 0d50 3F4F      		sbci r19,-1
 1996 0d52 FC01      		movw r30,r24
 1997 0d54 3183      		std Z+1,r19
 1998 0d56 2083      		st Z,r18
 1999               	.L58:
 193:lp_solve_5.5/lp_scale.c ****     absvalue=fabs(*value);
 2000               		.loc 1 193 0
 2001 0d58 8981      		ldd r24,Y+1
 2002 0d5a 9A81      		ldd r25,Y+2
 2003 0d5c 0196      		adiw r24,1
 2004 0d5e 9A83      		std Y+2,r25
 2005 0d60 8983      		std Y+1,r24
 2006 0d62 8DA1      		ldd r24,Y+37
 2007 0d64 9EA1      		ldd r25,Y+38
 2008 0d66 0496      		adiw r24,4
 2009 0d68 9EA3      		std Y+38,r25
 2010 0d6a 8DA3      		std Y+37,r24
 2011 0d6c 8FA1      		ldd r24,Y+39
 2012 0d6e 98A5      		ldd r25,Y+40
 2013 0d70 0296      		adiw r24,2
 2014 0d72 98A7      		std Y+40,r25
 2015 0d74 8FA3      		std Y+39,r24
 2016 0d76 89A5      		ldd r24,Y+41
 2017 0d78 9AA5      		ldd r25,Y+42
 2018 0d7a 0296      		adiw r24,2
 2019 0d7c 9AA7      		std Y+42,r25
 2020 0d7e 89A7      		std Y+41,r24
 2021               	.L57:
 192:lp_solve_5.5/lp_scale.c ****       i++, value += matValueStep, rownr += matRowColStep, colnr += matRowColStep) {
 2022               		.loc 1 192 0 discriminator 1
 2023 0d80 2981      		ldd r18,Y+1
 2024 0d82 3A81      		ldd r19,Y+2
 2025 0d84 8DA5      		ldd r24,Y+45
 2026 0d86 9EA5      		ldd r25,Y+46
 2027 0d88 2817      		cp r18,r24
 2028 0d8a 3907      		cpc r19,r25
 2029 0d8c 04F4      		brge .+2
 2030 0d8e 00C0      		rjmp .L60
 201:lp_solve_5.5/lp_scale.c ****     }
 202:lp_solve_5.5/lp_scale.c ****   }
 203:lp_solve_5.5/lp_scale.c **** 
 204:lp_solve_5.5/lp_scale.c ****   /* Make sure we dont't have division by zero errors */
 205:lp_solve_5.5/lp_scale.c ****   for(row = 0; row <= lp->rows; row++)
 2031               		.loc 1 205 0
 2032 0d90 1C82      		std Y+4,__zero_reg__
 2033 0d92 1B82      		std Y+3,__zero_reg__
 2034 0d94 00C0      		rjmp .L61
 2035               	.L63:
 206:lp_solve_5.5/lp_scale.c ****     if(RowCount[row] == 0)
 2036               		.loc 1 206 0
 2037 0d96 CE01      		movw r24,r28
 2038 0d98 895A      		subi r24,-87
 2039 0d9a 9F4F      		sbci r25,-1
 2040 0d9c DC01      		movw r26,r24
 2041 0d9e 2D91      		ld r18,X+
 2042 0da0 3C91      		ld r19,X
 2043 0da2 8B81      		ldd r24,Y+3
 2044 0da4 9C81      		ldd r25,Y+4
 2045 0da6 880F      		lsl r24
 2046 0da8 991F      		rol r25
 2047 0daa 820F      		add r24,r18
 2048 0dac 931F      		adc r25,r19
 2049 0dae FC01      		movw r30,r24
 2050 0db0 8081      		ld r24,Z
 2051 0db2 9181      		ldd r25,Z+1
 2052 0db4 892B      		or r24,r25
 2053 0db6 01F4      		brne .L62
 207:lp_solve_5.5/lp_scale.c ****       RowCount[row] = 1;
 2054               		.loc 1 207 0
 2055 0db8 CE01      		movw r24,r28
 2056 0dba 895A      		subi r24,-87
 2057 0dbc 9F4F      		sbci r25,-1
 2058 0dbe DC01      		movw r26,r24
 2059 0dc0 2D91      		ld r18,X+
 2060 0dc2 3C91      		ld r19,X
 2061 0dc4 8B81      		ldd r24,Y+3
 2062 0dc6 9C81      		ldd r25,Y+4
 2063 0dc8 880F      		lsl r24
 2064 0dca 991F      		rol r25
 2065 0dcc 820F      		add r24,r18
 2066 0dce 931F      		adc r25,r19
 2067 0dd0 21E0      		ldi r18,lo8(1)
 2068 0dd2 30E0      		ldi r19,0
 2069 0dd4 FC01      		movw r30,r24
 2070 0dd6 3183      		std Z+1,r19
 2071 0dd8 2083      		st Z,r18
 2072               	.L62:
 205:lp_solve_5.5/lp_scale.c ****     if(RowCount[row] == 0)
 2073               		.loc 1 205 0 discriminator 2
 2074 0dda 8B81      		ldd r24,Y+3
 2075 0ddc 9C81      		ldd r25,Y+4
 2076 0dde 0196      		adiw r24,1
 2077 0de0 9C83      		std Y+4,r25
 2078 0de2 8B83      		std Y+3,r24
 2079               	.L61:
 205:lp_solve_5.5/lp_scale.c ****     if(RowCount[row] == 0)
 2080               		.loc 1 205 0 is_stmt 0 discriminator 1
 2081 0de4 CE01      		movw r24,r28
 2082 0de6 855A      		subi r24,-91
 2083 0de8 9F4F      		sbci r25,-1
 2084 0dea DC01      		movw r26,r24
 2085 0dec 8D91      		ld r24,X+
 2086 0dee 9C91      		ld r25,X
 2087 0df0 8651      		subi r24,22
 2088 0df2 9E4F      		sbci r25,-2
 2089 0df4 FC01      		movw r30,r24
 2090 0df6 2081      		ld r18,Z
 2091 0df8 3181      		ldd r19,Z+1
 2092 0dfa 8B81      		ldd r24,Y+3
 2093 0dfc 9C81      		ldd r25,Y+4
 2094 0dfe 2817      		cp r18,r24
 2095 0e00 3907      		cpc r19,r25
 2096 0e02 04F4      		brge .L63
 208:lp_solve_5.5/lp_scale.c ****   for(col = 1; col <= colMax; col++)
 2097               		.loc 1 208 0 is_stmt 1
 2098 0e04 81E0      		ldi r24,lo8(1)
 2099 0e06 90E0      		ldi r25,0
 2100 0e08 9E83      		std Y+6,r25
 2101 0e0a 8D83      		std Y+5,r24
 2102 0e0c 00C0      		rjmp .L64
 2103               	.L66:
 209:lp_solve_5.5/lp_scale.c ****     if(ColCount[col] == 0)
 2104               		.loc 1 209 0
 2105 0e0e CE01      		movw r24,r28
 2106 0e10 875A      		subi r24,-89
 2107 0e12 9F4F      		sbci r25,-1
 2108 0e14 DC01      		movw r26,r24
 2109 0e16 2D91      		ld r18,X+
 2110 0e18 3C91      		ld r19,X
 2111 0e1a 8D81      		ldd r24,Y+5
 2112 0e1c 9E81      		ldd r25,Y+6
 2113 0e1e 880F      		lsl r24
 2114 0e20 991F      		rol r25
 2115 0e22 820F      		add r24,r18
 2116 0e24 931F      		adc r25,r19
 2117 0e26 FC01      		movw r30,r24
 2118 0e28 8081      		ld r24,Z
 2119 0e2a 9181      		ldd r25,Z+1
 2120 0e2c 892B      		or r24,r25
 2121 0e2e 01F4      		brne .L65
 210:lp_solve_5.5/lp_scale.c ****       ColCount[col] = 1;
 2122               		.loc 1 210 0
 2123 0e30 CE01      		movw r24,r28
 2124 0e32 875A      		subi r24,-89
 2125 0e34 9F4F      		sbci r25,-1
 2126 0e36 DC01      		movw r26,r24
 2127 0e38 2D91      		ld r18,X+
 2128 0e3a 3C91      		ld r19,X
 2129 0e3c 8D81      		ldd r24,Y+5
 2130 0e3e 9E81      		ldd r25,Y+6
 2131 0e40 880F      		lsl r24
 2132 0e42 991F      		rol r25
 2133 0e44 820F      		add r24,r18
 2134 0e46 931F      		adc r25,r19
 2135 0e48 21E0      		ldi r18,lo8(1)
 2136 0e4a 30E0      		ldi r19,0
 2137 0e4c FC01      		movw r30,r24
 2138 0e4e 3183      		std Z+1,r19
 2139 0e50 2083      		st Z,r18
 2140               	.L65:
 208:lp_solve_5.5/lp_scale.c ****   for(col = 1; col <= colMax; col++)
 2141               		.loc 1 208 0 discriminator 2
 2142 0e52 8D81      		ldd r24,Y+5
 2143 0e54 9E81      		ldd r25,Y+6
 2144 0e56 0196      		adiw r24,1
 2145 0e58 9E83      		std Y+6,r25
 2146 0e5a 8D83      		std Y+5,r24
 2147               	.L64:
 208:lp_solve_5.5/lp_scale.c ****   for(col = 1; col <= colMax; col++)
 2148               		.loc 1 208 0 is_stmt 0 discriminator 1
 2149 0e5c 2D81      		ldd r18,Y+5
 2150 0e5e 3E81      		ldd r19,Y+6
 2151 0e60 8FA5      		ldd r24,Y+47
 2152 0e62 98A9      		ldd r25,Y+48
 2153 0e64 8217      		cp r24,r18
 2154 0e66 9307      		cpc r25,r19
 2155 0e68 04F4      		brge .L66
 211:lp_solve_5.5/lp_scale.c **** 
 212:lp_solve_5.5/lp_scale.c ****   /* Initialize to RowScale = RowCount-1 RowSum
 213:lp_solve_5.5/lp_scale.c ****                    ColScale = 0.0
 214:lp_solve_5.5/lp_scale.c ****                    residual = ColSum - ET RowCount-1 RowSum */
 215:lp_solve_5.5/lp_scale.c **** 
 216:lp_solve_5.5/lp_scale.c ****   StopTolerance= MAX(lp->scalelimit-floor(lp->scalelimit), DEF_SCALINGEPS);
 2156               		.loc 1 216 0 is_stmt 1
 2157 0e6a CE01      		movw r24,r28
 2158 0e6c 855A      		subi r24,-91
 2159 0e6e 9F4F      		sbci r25,-1
 2160 0e70 DC01      		movw r26,r24
 2161 0e72 8D91      		ld r24,X+
 2162 0e74 9C91      		ld r25,X
 2163 0e76 8659      		subi r24,-106
 2164 0e78 9D4F      		sbci r25,-3
 2165 0e7a FC01      		movw r30,r24
 2166 0e7c C080      		ld r12,Z
 2167 0e7e D180      		ldd r13,Z+1
 2168 0e80 E280      		ldd r14,Z+2
 2169 0e82 F380      		ldd r15,Z+3
 2170 0e84 CE01      		movw r24,r28
 2171 0e86 855A      		subi r24,-91
 2172 0e88 9F4F      		sbci r25,-1
 2173 0e8a DC01      		movw r26,r24
 2174 0e8c 8D91      		ld r24,X+
 2175 0e8e 9C91      		ld r25,X
 2176 0e90 8659      		subi r24,-106
 2177 0e92 9D4F      		sbci r25,-3
 2178 0e94 FC01      		movw r30,r24
 2179 0e96 8081      		ld r24,Z
 2180 0e98 9181      		ldd r25,Z+1
 2181 0e9a A281      		ldd r26,Z+2
 2182 0e9c B381      		ldd r27,Z+3
 2183 0e9e BC01      		movw r22,r24
 2184 0ea0 CD01      		movw r24,r26
 2185 0ea2 0E94 0000 		call floor
 2186 0ea6 DC01      		movw r26,r24
 2187 0ea8 CB01      		movw r24,r22
 2188 0eaa 9C01      		movw r18,r24
 2189 0eac AD01      		movw r20,r26
 2190 0eae C701      		movw r24,r14
 2191 0eb0 B601      		movw r22,r12
 2192 0eb2 0E94 0000 		call __subsf3
 2193 0eb6 DC01      		movw r26,r24
 2194 0eb8 CB01      		movw r24,r22
 2195 0eba 2AE0      		ldi r18,lo8(10)
 2196 0ebc 37ED      		ldi r19,lo8(-41)
 2197 0ebe 43E2      		ldi r20,lo8(35)
 2198 0ec0 5CE3      		ldi r21,lo8(60)
 2199 0ec2 BC01      		movw r22,r24
 2200 0ec4 CD01      		movw r24,r26
 2201 0ec6 0E94 0000 		call __gtsf2
 2202 0eca 1816      		cp __zero_reg__,r24
 2203 0ecc 04F4      		brge .L175
 2204               		.loc 1 216 0 is_stmt 0 discriminator 1
 2205 0ece CE01      		movw r24,r28
 2206 0ed0 855A      		subi r24,-91
 2207 0ed2 9F4F      		sbci r25,-1
 2208 0ed4 DC01      		movw r26,r24
 2209 0ed6 8D91      		ld r24,X+
 2210 0ed8 9C91      		ld r25,X
 2211 0eda 8659      		subi r24,-106
 2212 0edc 9D4F      		sbci r25,-3
 2213 0ede FC01      		movw r30,r24
 2214 0ee0 C080      		ld r12,Z
 2215 0ee2 D180      		ldd r13,Z+1
 2216 0ee4 E280      		ldd r14,Z+2
 2217 0ee6 F380      		ldd r15,Z+3
 2218 0ee8 CE01      		movw r24,r28
 2219 0eea 855A      		subi r24,-91
 2220 0eec 9F4F      		sbci r25,-1
 2221 0eee DC01      		movw r26,r24
 2222 0ef0 8D91      		ld r24,X+
 2223 0ef2 9C91      		ld r25,X
 2224 0ef4 8659      		subi r24,-106
 2225 0ef6 9D4F      		sbci r25,-3
 2226 0ef8 FC01      		movw r30,r24
 2227 0efa 8081      		ld r24,Z
 2228 0efc 9181      		ldd r25,Z+1
 2229 0efe A281      		ldd r26,Z+2
 2230 0f00 B381      		ldd r27,Z+3
 2231 0f02 BC01      		movw r22,r24
 2232 0f04 CD01      		movw r24,r26
 2233 0f06 0E94 0000 		call floor
 2234 0f0a DC01      		movw r26,r24
 2235 0f0c CB01      		movw r24,r22
 2236 0f0e 9C01      		movw r18,r24
 2237 0f10 AD01      		movw r20,r26
 2238 0f12 C701      		movw r24,r14
 2239 0f14 B601      		movw r22,r12
 2240 0f16 0E94 0000 		call __subsf3
 2241 0f1a DC01      		movw r26,r24
 2242 0f1c CB01      		movw r24,r22
 2243 0f1e 00C0      		rjmp .L69
 2244               	.L175:
 2245               		.loc 1 216 0 discriminator 2
 2246 0f20 8AE0      		ldi r24,lo8(10)
 2247 0f22 97ED      		ldi r25,lo8(-41)
 2248 0f24 A3E2      		ldi r26,lo8(35)
 2249 0f26 BCE3      		ldi r27,lo8(60)
 2250               	.L69:
 2251               		.loc 1 216 0 discriminator 4
 2252 0f28 8DAB      		std Y+53,r24
 2253 0f2a 9EAB      		std Y+54,r25
 2254 0f2c AFAB      		std Y+55,r26
 2255 0f2e B8AF      		std Y+56,r27
 217:lp_solve_5.5/lp_scale.c ****   StopTolerance *= (REAL) nz;
 2256               		.loc 1 217 0 is_stmt 1 discriminator 4
 2257 0f30 8DA5      		ldd r24,Y+45
 2258 0f32 9EA5      		ldd r25,Y+46
 2259 0f34 092E      		mov __tmp_reg__,r25
 2260 0f36 000C      		lsl r0
 2261 0f38 AA0B      		sbc r26,r26
 2262 0f3a BB0B      		sbc r27,r27
 2263 0f3c BC01      		movw r22,r24
 2264 0f3e CD01      		movw r24,r26
 2265 0f40 0E94 0000 		call __floatsisf
 2266 0f44 DC01      		movw r26,r24
 2267 0f46 CB01      		movw r24,r22
 2268 0f48 9C01      		movw r18,r24
 2269 0f4a AD01      		movw r20,r26
 2270 0f4c 6DA9      		ldd r22,Y+53
 2271 0f4e 7EA9      		ldd r23,Y+54
 2272 0f50 8FA9      		ldd r24,Y+55
 2273 0f52 98AD      		ldd r25,Y+56
 2274 0f54 0E94 0000 		call __mulsf3
 2275 0f58 DC01      		movw r26,r24
 2276 0f5a CB01      		movw r24,r22
 2277 0f5c 8DAB      		std Y+53,r24
 2278 0f5e 9EAB      		std Y+54,r25
 2279 0f60 AFAB      		std Y+55,r26
 2280 0f62 B8AF      		std Y+56,r27
 218:lp_solve_5.5/lp_scale.c ****   for(row = 0; row <= lp->rows; row++) {
 2281               		.loc 1 218 0 discriminator 4
 2282 0f64 1C82      		std Y+4,__zero_reg__
 2283 0f66 1B82      		std Y+3,__zero_reg__
 2284 0f68 00C0      		rjmp .L70
 2285               	.L71:
 219:lp_solve_5.5/lp_scale.c ****     FRowScale[row] = RowSum[row] / (REAL) RowCount[row];
 2286               		.loc 1 219 0 discriminator 3
 2287 0f6a 8B81      		ldd r24,Y+3
 2288 0f6c 9C81      		ldd r25,Y+4
 2289 0f6e 880F      		lsl r24
 2290 0f70 991F      		rol r25
 2291 0f72 880F      		lsl r24
 2292 0f74 991F      		rol r25
 2293 0f76 9E01      		movw r18,r28
 2294 0f78 225A      		subi r18,-94
 2295 0f7a 3F4F      		sbci r19,-1
 2296 0f7c D901      		movw r26,r18
 2297 0f7e 2D91      		ld r18,X+
 2298 0f80 3C91      		ld r19,X
 2299 0f82 8901      		movw r16,r18
 2300 0f84 080F      		add r16,r24
 2301 0f86 191F      		adc r17,r25
 2302 0f88 CE01      		movw r24,r28
 2303 0f8a 815B      		subi r24,-79
 2304 0f8c 9F4F      		sbci r25,-1
 2305 0f8e FC01      		movw r30,r24
 2306 0f90 2081      		ld r18,Z
 2307 0f92 3181      		ldd r19,Z+1
 2308 0f94 8B81      		ldd r24,Y+3
 2309 0f96 9C81      		ldd r25,Y+4
 2310 0f98 880F      		lsl r24
 2311 0f9a 991F      		rol r25
 2312 0f9c 880F      		lsl r24
 2313 0f9e 991F      		rol r25
 2314 0fa0 820F      		add r24,r18
 2315 0fa2 931F      		adc r25,r19
 2316 0fa4 DC01      		movw r26,r24
 2317 0fa6 CD90      		ld r12,X+
 2318 0fa8 DD90      		ld r13,X+
 2319 0faa ED90      		ld r14,X+
 2320 0fac FC90      		ld r15,X
 2321 0fae CE01      		movw r24,r28
 2322 0fb0 895A      		subi r24,-87
 2323 0fb2 9F4F      		sbci r25,-1
 2324 0fb4 FC01      		movw r30,r24
 2325 0fb6 2081      		ld r18,Z
 2326 0fb8 3181      		ldd r19,Z+1
 2327 0fba 8B81      		ldd r24,Y+3
 2328 0fbc 9C81      		ldd r25,Y+4
 2329 0fbe 880F      		lsl r24
 2330 0fc0 991F      		rol r25
 2331 0fc2 820F      		add r24,r18
 2332 0fc4 931F      		adc r25,r19
 2333 0fc6 DC01      		movw r26,r24
 2334 0fc8 8D91      		ld r24,X+
 2335 0fca 9C91      		ld r25,X
 2336 0fcc 092E      		mov __tmp_reg__,r25
 2337 0fce 000C      		lsl r0
 2338 0fd0 AA0B      		sbc r26,r26
 2339 0fd2 BB0B      		sbc r27,r27
 2340 0fd4 BC01      		movw r22,r24
 2341 0fd6 CD01      		movw r24,r26
 2342 0fd8 0E94 0000 		call __floatsisf
 2343 0fdc DC01      		movw r26,r24
 2344 0fde CB01      		movw r24,r22
 2345 0fe0 9C01      		movw r18,r24
 2346 0fe2 AD01      		movw r20,r26
 2347 0fe4 C701      		movw r24,r14
 2348 0fe6 B601      		movw r22,r12
 2349 0fe8 0E94 0000 		call __divsf3
 2350 0fec DC01      		movw r26,r24
 2351 0fee CB01      		movw r24,r22
 2352 0ff0 F801      		movw r30,r16
 2353 0ff2 8083      		st Z,r24
 2354 0ff4 9183      		std Z+1,r25
 2355 0ff6 A283      		std Z+2,r26
 2356 0ff8 B383      		std Z+3,r27
 220:lp_solve_5.5/lp_scale.c ****     RowScalem2[row] = FRowScale[row];
 2357               		.loc 1 220 0 discriminator 3
 2358 0ffa CE01      		movw r24,r28
 2359 0ffc 855B      		subi r24,-75
 2360 0ffe 9F4F      		sbci r25,-1
 2361 1000 DC01      		movw r26,r24
 2362 1002 2D91      		ld r18,X+
 2363 1004 3C91      		ld r19,X
 2364 1006 8B81      		ldd r24,Y+3
 2365 1008 9C81      		ldd r25,Y+4
 2366 100a 880F      		lsl r24
 2367 100c 991F      		rol r25
 2368 100e 880F      		lsl r24
 2369 1010 991F      		rol r25
 2370 1012 280F      		add r18,r24
 2371 1014 391F      		adc r19,r25
 2372 1016 8B81      		ldd r24,Y+3
 2373 1018 9C81      		ldd r25,Y+4
 2374 101a 880F      		lsl r24
 2375 101c 991F      		rol r25
 2376 101e 880F      		lsl r24
 2377 1020 991F      		rol r25
 2378 1022 AE01      		movw r20,r28
 2379 1024 425A      		subi r20,-94
 2380 1026 5F4F      		sbci r21,-1
 2381 1028 FA01      		movw r30,r20
 2382 102a 4081      		ld r20,Z
 2383 102c 5181      		ldd r21,Z+1
 2384 102e 840F      		add r24,r20
 2385 1030 951F      		adc r25,r21
 2386 1032 FC01      		movw r30,r24
 2387 1034 8081      		ld r24,Z
 2388 1036 9181      		ldd r25,Z+1
 2389 1038 A281      		ldd r26,Z+2
 2390 103a B381      		ldd r27,Z+3
 2391 103c F901      		movw r30,r18
 2392 103e 8083      		st Z,r24
 2393 1040 9183      		std Z+1,r25
 2394 1042 A283      		std Z+2,r26
 2395 1044 B383      		std Z+3,r27
 218:lp_solve_5.5/lp_scale.c ****   for(row = 0; row <= lp->rows; row++) {
 2396               		.loc 1 218 0 discriminator 3
 2397 1046 8B81      		ldd r24,Y+3
 2398 1048 9C81      		ldd r25,Y+4
 2399 104a 0196      		adiw r24,1
 2400 104c 9C83      		std Y+4,r25
 2401 104e 8B83      		std Y+3,r24
 2402               	.L70:
 218:lp_solve_5.5/lp_scale.c ****   for(row = 0; row <= lp->rows; row++) {
 2403               		.loc 1 218 0 is_stmt 0 discriminator 1
 2404 1050 CE01      		movw r24,r28
 2405 1052 855A      		subi r24,-91
 2406 1054 9F4F      		sbci r25,-1
 2407 1056 DC01      		movw r26,r24
 2408 1058 8D91      		ld r24,X+
 2409 105a 9C91      		ld r25,X
 2410 105c 8651      		subi r24,22
 2411 105e 9E4F      		sbci r25,-2
 2412 1060 FC01      		movw r30,r24
 2413 1062 2081      		ld r18,Z
 2414 1064 3181      		ldd r19,Z+1
 2415 1066 8B81      		ldd r24,Y+3
 2416 1068 9C81      		ldd r25,Y+4
 2417 106a 2817      		cp r18,r24
 2418 106c 3907      		cpc r19,r25
 2419 106e 04F0      		brlt .+2
 2420 1070 00C0      		rjmp .L71
 221:lp_solve_5.5/lp_scale.c ****   }
 222:lp_solve_5.5/lp_scale.c **** 
 223:lp_solve_5.5/lp_scale.c ****   /* Compute initial residual */
 224:lp_solve_5.5/lp_scale.c ****   for(col = 1; col <= colMax; col++) {
 2421               		.loc 1 224 0 is_stmt 1
 2422 1072 81E0      		ldi r24,lo8(1)
 2423 1074 90E0      		ldi r25,0
 2424 1076 9E83      		std Y+6,r25
 2425 1078 8D83      		std Y+5,r24
 2426 107a 00C0      		rjmp .L72
 2427               	.L77:
 225:lp_solve_5.5/lp_scale.c ****     FColScale[col] = 0;
 2428               		.loc 1 225 0
 2429 107c 8D81      		ldd r24,Y+5
 2430 107e 9E81      		ldd r25,Y+6
 2431 1080 880F      		lsl r24
 2432 1082 991F      		rol r25
 2433 1084 880F      		lsl r24
 2434 1086 991F      		rol r25
 2435 1088 9E01      		movw r18,r28
 2436 108a 205A      		subi r18,-96
 2437 108c 3F4F      		sbci r19,-1
 2438 108e D901      		movw r26,r18
 2439 1090 2D91      		ld r18,X+
 2440 1092 3C91      		ld r19,X
 2441 1094 820F      		add r24,r18
 2442 1096 931F      		adc r25,r19
 2443 1098 FC01      		movw r30,r24
 2444 109a 1082      		st Z,__zero_reg__
 2445 109c 1182      		std Z+1,__zero_reg__
 2446 109e 1282      		std Z+2,__zero_reg__
 2447 10a0 1382      		std Z+3,__zero_reg__
 226:lp_solve_5.5/lp_scale.c ****     ColScalem2[col] = 0;
 2448               		.loc 1 226 0
 2449 10a2 CE01      		movw r24,r28
 2450 10a4 835B      		subi r24,-77
 2451 10a6 9F4F      		sbci r25,-1
 2452 10a8 DC01      		movw r26,r24
 2453 10aa 2D91      		ld r18,X+
 2454 10ac 3C91      		ld r19,X
 2455 10ae 8D81      		ldd r24,Y+5
 2456 10b0 9E81      		ldd r25,Y+6
 2457 10b2 880F      		lsl r24
 2458 10b4 991F      		rol r25
 2459 10b6 880F      		lsl r24
 2460 10b8 991F      		rol r25
 2461 10ba 820F      		add r24,r18
 2462 10bc 931F      		adc r25,r19
 2463 10be FC01      		movw r30,r24
 2464 10c0 1082      		st Z,__zero_reg__
 2465 10c2 1182      		std Z+1,__zero_reg__
 2466 10c4 1282      		std Z+2,__zero_reg__
 2467 10c6 1382      		std Z+3,__zero_reg__
 227:lp_solve_5.5/lp_scale.c ****     residual_even[col] = ColSum[col];
 2468               		.loc 1 227 0
 2469 10c8 CE01      		movw r24,r28
 2470 10ca 8D5A      		subi r24,-83
 2471 10cc 9F4F      		sbci r25,-1
 2472 10ce DC01      		movw r26,r24
 2473 10d0 2D91      		ld r18,X+
 2474 10d2 3C91      		ld r19,X
 2475 10d4 8D81      		ldd r24,Y+5
 2476 10d6 9E81      		ldd r25,Y+6
 2477 10d8 880F      		lsl r24
 2478 10da 991F      		rol r25
 2479 10dc 880F      		lsl r24
 2480 10de 991F      		rol r25
 2481 10e0 280F      		add r18,r24
 2482 10e2 391F      		adc r19,r25
 2483 10e4 CE01      		movw r24,r28
 2484 10e6 8F5A      		subi r24,-81
 2485 10e8 9F4F      		sbci r25,-1
 2486 10ea FC01      		movw r30,r24
 2487 10ec 4081      		ld r20,Z
 2488 10ee 5181      		ldd r21,Z+1
 2489 10f0 8D81      		ldd r24,Y+5
 2490 10f2 9E81      		ldd r25,Y+6
 2491 10f4 880F      		lsl r24
 2492 10f6 991F      		rol r25
 2493 10f8 880F      		lsl r24
 2494 10fa 991F      		rol r25
 2495 10fc 840F      		add r24,r20
 2496 10fe 951F      		adc r25,r21
 2497 1100 FC01      		movw r30,r24
 2498 1102 8081      		ld r24,Z
 2499 1104 9181      		ldd r25,Z+1
 2500 1106 A281      		ldd r26,Z+2
 2501 1108 B381      		ldd r27,Z+3
 2502 110a F901      		movw r30,r18
 2503 110c 8083      		st Z,r24
 2504 110e 9183      		std Z+1,r25
 2505 1110 A283      		std Z+2,r26
 2506 1112 B383      		std Z+3,r27
 228:lp_solve_5.5/lp_scale.c **** 
 229:lp_solve_5.5/lp_scale.c ****     if(lp->orig_obj[col] != 0)
 2507               		.loc 1 229 0
 2508 1114 CE01      		movw r24,r28
 2509 1116 855A      		subi r24,-91
 2510 1118 9F4F      		sbci r25,-1
 2511 111a DC01      		movw r26,r24
 2512 111c 8D91      		ld r24,X+
 2513 111e 9C91      		ld r25,X
 2514 1120 845D      		subi r24,-44
 2515 1122 9D4F      		sbci r25,-3
 2516 1124 FC01      		movw r30,r24
 2517 1126 2081      		ld r18,Z
 2518 1128 3181      		ldd r19,Z+1
 2519 112a 8D81      		ldd r24,Y+5
 2520 112c 9E81      		ldd r25,Y+6
 2521 112e 880F      		lsl r24
 2522 1130 991F      		rol r25
 2523 1132 880F      		lsl r24
 2524 1134 991F      		rol r25
 2525 1136 820F      		add r24,r18
 2526 1138 931F      		adc r25,r19
 2527 113a FC01      		movw r30,r24
 2528 113c 8081      		ld r24,Z
 2529 113e 9181      		ldd r25,Z+1
 2530 1140 A281      		ldd r26,Z+2
 2531 1142 B381      		ldd r27,Z+3
 2532 1144 20E0      		ldi r18,0
 2533 1146 30E0      		ldi r19,0
 2534 1148 A901      		movw r20,r18
 2535 114a BC01      		movw r22,r24
 2536 114c CD01      		movw r24,r26
 2537 114e 0E94 0000 		call __nesf2
 2538 1152 8823      		tst r24
 2539 1154 01F4      		brne .+2
 2540 1156 00C0      		rjmp .L73
 230:lp_solve_5.5/lp_scale.c ****       residual_even[col] -= RowSum[0] / (REAL) RowCount[0];
 2541               		.loc 1 230 0
 2542 1158 CE01      		movw r24,r28
 2543 115a 8D5A      		subi r24,-83
 2544 115c 9F4F      		sbci r25,-1
 2545 115e DC01      		movw r26,r24
 2546 1160 2D91      		ld r18,X+
 2547 1162 3C91      		ld r19,X
 2548 1164 8D81      		ldd r24,Y+5
 2549 1166 9E81      		ldd r25,Y+6
 2550 1168 880F      		lsl r24
 2551 116a 991F      		rol r25
 2552 116c 880F      		lsl r24
 2553 116e 991F      		rol r25
 2554 1170 8901      		movw r16,r18
 2555 1172 080F      		add r16,r24
 2556 1174 191F      		adc r17,r25
 2557 1176 CE01      		movw r24,r28
 2558 1178 8D5A      		subi r24,-83
 2559 117a 9F4F      		sbci r25,-1
 2560 117c FC01      		movw r30,r24
 2561 117e 2081      		ld r18,Z
 2562 1180 3181      		ldd r19,Z+1
 2563 1182 8D81      		ldd r24,Y+5
 2564 1184 9E81      		ldd r25,Y+6
 2565 1186 880F      		lsl r24
 2566 1188 991F      		rol r25
 2567 118a 880F      		lsl r24
 2568 118c 991F      		rol r25
 2569 118e 820F      		add r24,r18
 2570 1190 931F      		adc r25,r19
 2571 1192 DC01      		movw r26,r24
 2572 1194 CD90      		ld r12,X+
 2573 1196 DD90      		ld r13,X+
 2574 1198 ED90      		ld r14,X+
 2575 119a FC90      		ld r15,X
 2576 119c CE01      		movw r24,r28
 2577 119e 815B      		subi r24,-79
 2578 11a0 9F4F      		sbci r25,-1
 2579 11a2 FC01      		movw r30,r24
 2580 11a4 8081      		ld r24,Z
 2581 11a6 9181      		ldd r25,Z+1
 2582 11a8 DC01      		movw r26,r24
 2583 11aa 8D90      		ld r8,X+
 2584 11ac 9D90      		ld r9,X+
 2585 11ae AD90      		ld r10,X+
 2586 11b0 BC90      		ld r11,X
 2587 11b2 CE01      		movw r24,r28
 2588 11b4 895A      		subi r24,-87
 2589 11b6 9F4F      		sbci r25,-1
 2590 11b8 FC01      		movw r30,r24
 2591 11ba 8081      		ld r24,Z
 2592 11bc 9181      		ldd r25,Z+1
 2593 11be DC01      		movw r26,r24
 2594 11c0 8D91      		ld r24,X+
 2595 11c2 9C91      		ld r25,X
 2596 11c4 092E      		mov __tmp_reg__,r25
 2597 11c6 000C      		lsl r0
 2598 11c8 AA0B      		sbc r26,r26
 2599 11ca BB0B      		sbc r27,r27
 2600 11cc BC01      		movw r22,r24
 2601 11ce CD01      		movw r24,r26
 2602 11d0 0E94 0000 		call __floatsisf
 2603 11d4 DC01      		movw r26,r24
 2604 11d6 CB01      		movw r24,r22
 2605 11d8 9C01      		movw r18,r24
 2606 11da AD01      		movw r20,r26
 2607 11dc C501      		movw r24,r10
 2608 11de B401      		movw r22,r8
 2609 11e0 0E94 0000 		call __divsf3
 2610 11e4 DC01      		movw r26,r24
 2611 11e6 CB01      		movw r24,r22
 2612 11e8 9C01      		movw r18,r24
 2613 11ea AD01      		movw r20,r26
 2614 11ec C701      		movw r24,r14
 2615 11ee B601      		movw r22,r12
 2616 11f0 0E94 0000 		call __subsf3
 2617 11f4 DC01      		movw r26,r24
 2618 11f6 CB01      		movw r24,r22
 2619 11f8 F801      		movw r30,r16
 2620 11fa 8083      		st Z,r24
 2621 11fc 9183      		std Z+1,r25
 2622 11fe A283      		std Z+2,r26
 2623 1200 B383      		std Z+3,r27
 2624               	.L73:
 231:lp_solve_5.5/lp_scale.c **** 
 232:lp_solve_5.5/lp_scale.c ****     i = mat->col_end[col-1];
 2625               		.loc 1 232 0
 2626 1202 8BA5      		ldd r24,Y+43
 2627 1204 9CA5      		ldd r25,Y+44
 2628 1206 DC01      		movw r26,r24
 2629 1208 5296      		adiw r26,18
 2630 120a 2D91      		ld r18,X+
 2631 120c 3C91      		ld r19,X
 2632 120e 5397      		sbiw r26,18+1
 2633 1210 8D81      		ldd r24,Y+5
 2634 1212 9E81      		ldd r25,Y+6
 2635 1214 8150      		subi r24,1
 2636 1216 9048      		sbci r25,-128
 2637 1218 880F      		lsl r24
 2638 121a 991F      		rol r25
 2639 121c 820F      		add r24,r18
 2640 121e 931F      		adc r25,r19
 2641 1220 FC01      		movw r30,r24
 2642 1222 8081      		ld r24,Z
 2643 1224 9181      		ldd r25,Z+1
 2644 1226 9A83      		std Y+2,r25
 2645 1228 8983      		std Y+1,r24
 233:lp_solve_5.5/lp_scale.c ****     rownr = &(COL_MAT_ROWNR(i));
 2646               		.loc 1 233 0
 2647 122a 8BA5      		ldd r24,Y+43
 2648 122c 9CA5      		ldd r25,Y+44
 2649 122e DC01      		movw r26,r24
 2650 1230 1E96      		adiw r26,14
 2651 1232 2D91      		ld r18,X+
 2652 1234 3C91      		ld r19,X
 2653 1236 1F97      		sbiw r26,14+1
 2654 1238 8981      		ldd r24,Y+1
 2655 123a 9A81      		ldd r25,Y+2
 2656 123c 880F      		lsl r24
 2657 123e 991F      		rol r25
 2658 1240 820F      		add r24,r18
 2659 1242 931F      		adc r25,r19
 2660 1244 98A7      		std Y+40,r25
 2661 1246 8FA3      		std Y+39,r24
 234:lp_solve_5.5/lp_scale.c ****     ent = mat->col_end[col];
 2662               		.loc 1 234 0
 2663 1248 8BA5      		ldd r24,Y+43
 2664 124a 9CA5      		ldd r25,Y+44
 2665 124c FC01      		movw r30,r24
 2666 124e 2289      		ldd r18,Z+18
 2667 1250 3389      		ldd r19,Z+19
 2668 1252 8D81      		ldd r24,Y+5
 2669 1254 9E81      		ldd r25,Y+6
 2670 1256 880F      		lsl r24
 2671 1258 991F      		rol r25
 2672 125a 820F      		add r24,r18
 2673 125c 931F      		adc r25,r19
 2674 125e DC01      		movw r26,r24
 2675 1260 8D91      		ld r24,X+
 2676 1262 9C91      		ld r25,X
 2677 1264 9AAF      		std Y+58,r25
 2678 1266 89AF      		std Y+57,r24
 235:lp_solve_5.5/lp_scale.c ****     for(; i < ent;
 2679               		.loc 1 235 0
 2680 1268 00C0      		rjmp .L75
 2681               	.L76:
 236:lp_solve_5.5/lp_scale.c ****         i++, rownr += matRowColStep) {
 237:lp_solve_5.5/lp_scale.c ****       residual_even[col] -= RowSum[*rownr] / (REAL) RowCount[*rownr];
 2682               		.loc 1 237 0
 2683 126a CE01      		movw r24,r28
 2684 126c 8D5A      		subi r24,-83
 2685 126e 9F4F      		sbci r25,-1
 2686 1270 FC01      		movw r30,r24
 2687 1272 2081      		ld r18,Z
 2688 1274 3181      		ldd r19,Z+1
 2689 1276 8D81      		ldd r24,Y+5
 2690 1278 9E81      		ldd r25,Y+6
 2691 127a 880F      		lsl r24
 2692 127c 991F      		rol r25
 2693 127e 880F      		lsl r24
 2694 1280 991F      		rol r25
 2695 1282 8901      		movw r16,r18
 2696 1284 080F      		add r16,r24
 2697 1286 191F      		adc r17,r25
 2698 1288 CE01      		movw r24,r28
 2699 128a 8D5A      		subi r24,-83
 2700 128c 9F4F      		sbci r25,-1
 2701 128e DC01      		movw r26,r24
 2702 1290 2D91      		ld r18,X+
 2703 1292 3C91      		ld r19,X
 2704 1294 8D81      		ldd r24,Y+5
 2705 1296 9E81      		ldd r25,Y+6
 2706 1298 880F      		lsl r24
 2707 129a 991F      		rol r25
 2708 129c 880F      		lsl r24
 2709 129e 991F      		rol r25
 2710 12a0 820F      		add r24,r18
 2711 12a2 931F      		adc r25,r19
 2712 12a4 FC01      		movw r30,r24
 2713 12a6 C080      		ld r12,Z
 2714 12a8 D180      		ldd r13,Z+1
 2715 12aa E280      		ldd r14,Z+2
 2716 12ac F380      		ldd r15,Z+3
 2717 12ae CE01      		movw r24,r28
 2718 12b0 815B      		subi r24,-79
 2719 12b2 9F4F      		sbci r25,-1
 2720 12b4 DC01      		movw r26,r24
 2721 12b6 2D91      		ld r18,X+
 2722 12b8 3C91      		ld r19,X
 2723 12ba 8FA1      		ldd r24,Y+39
 2724 12bc 98A5      		ldd r25,Y+40
 2725 12be FC01      		movw r30,r24
 2726 12c0 8081      		ld r24,Z
 2727 12c2 9181      		ldd r25,Z+1
 2728 12c4 880F      		lsl r24
 2729 12c6 991F      		rol r25
 2730 12c8 880F      		lsl r24
 2731 12ca 991F      		rol r25
 2732 12cc 820F      		add r24,r18
 2733 12ce 931F      		adc r25,r19
 2734 12d0 DC01      		movw r26,r24
 2735 12d2 8D90      		ld r8,X+
 2736 12d4 9D90      		ld r9,X+
 2737 12d6 AD90      		ld r10,X+
 2738 12d8 BC90      		ld r11,X
 2739 12da CE01      		movw r24,r28
 2740 12dc 895A      		subi r24,-87
 2741 12de 9F4F      		sbci r25,-1
 2742 12e0 FC01      		movw r30,r24
 2743 12e2 2081      		ld r18,Z
 2744 12e4 3181      		ldd r19,Z+1
 2745 12e6 8FA1      		ldd r24,Y+39
 2746 12e8 98A5      		ldd r25,Y+40
 2747 12ea DC01      		movw r26,r24
 2748 12ec 8D91      		ld r24,X+
 2749 12ee 9C91      		ld r25,X
 2750 12f0 880F      		lsl r24
 2751 12f2 991F      		rol r25
 2752 12f4 820F      		add r24,r18
 2753 12f6 931F      		adc r25,r19
 2754 12f8 FC01      		movw r30,r24
 2755 12fa 8081      		ld r24,Z
 2756 12fc 9181      		ldd r25,Z+1
 2757 12fe 092E      		mov __tmp_reg__,r25
 2758 1300 000C      		lsl r0
 2759 1302 AA0B      		sbc r26,r26
 2760 1304 BB0B      		sbc r27,r27
 2761 1306 BC01      		movw r22,r24
 2762 1308 CD01      		movw r24,r26
 2763 130a 0E94 0000 		call __floatsisf
 2764 130e DC01      		movw r26,r24
 2765 1310 CB01      		movw r24,r22
 2766 1312 9C01      		movw r18,r24
 2767 1314 AD01      		movw r20,r26
 2768 1316 C501      		movw r24,r10
 2769 1318 B401      		movw r22,r8
 2770 131a 0E94 0000 		call __divsf3
 2771 131e DC01      		movw r26,r24
 2772 1320 CB01      		movw r24,r22
 2773 1322 9C01      		movw r18,r24
 2774 1324 AD01      		movw r20,r26
 2775 1326 C701      		movw r24,r14
 2776 1328 B601      		movw r22,r12
 2777 132a 0E94 0000 		call __subsf3
 2778 132e DC01      		movw r26,r24
 2779 1330 CB01      		movw r24,r22
 2780 1332 F801      		movw r30,r16
 2781 1334 8083      		st Z,r24
 2782 1336 9183      		std Z+1,r25
 2783 1338 A283      		std Z+2,r26
 2784 133a B383      		std Z+3,r27
 236:lp_solve_5.5/lp_scale.c ****         i++, rownr += matRowColStep) {
 2785               		.loc 1 236 0
 2786 133c 8981      		ldd r24,Y+1
 2787 133e 9A81      		ldd r25,Y+2
 2788 1340 0196      		adiw r24,1
 2789 1342 9A83      		std Y+2,r25
 2790 1344 8983      		std Y+1,r24
 2791 1346 8FA1      		ldd r24,Y+39
 2792 1348 98A5      		ldd r25,Y+40
 2793 134a 0296      		adiw r24,2
 2794 134c 98A7      		std Y+40,r25
 2795 134e 8FA3      		std Y+39,r24
 2796               	.L75:
 235:lp_solve_5.5/lp_scale.c ****     for(; i < ent;
 2797               		.loc 1 235 0
 2798 1350 2981      		ldd r18,Y+1
 2799 1352 3A81      		ldd r19,Y+2
 2800 1354 89AD      		ldd r24,Y+57
 2801 1356 9AAD      		ldd r25,Y+58
 2802 1358 2817      		cp r18,r24
 2803 135a 3907      		cpc r19,r25
 2804 135c 04F4      		brge .+2
 2805 135e 00C0      		rjmp .L76
 224:lp_solve_5.5/lp_scale.c ****     FColScale[col] = 0;
 2806               		.loc 1 224 0 discriminator 2
 2807 1360 8D81      		ldd r24,Y+5
 2808 1362 9E81      		ldd r25,Y+6
 2809 1364 0196      		adiw r24,1
 2810 1366 9E83      		std Y+6,r25
 2811 1368 8D83      		std Y+5,r24
 2812               	.L72:
 224:lp_solve_5.5/lp_scale.c ****     FColScale[col] = 0;
 2813               		.loc 1 224 0 is_stmt 0 discriminator 1
 2814 136a 2D81      		ldd r18,Y+5
 2815 136c 3E81      		ldd r19,Y+6
 2816 136e 8FA5      		ldd r24,Y+47
 2817 1370 98A9      		ldd r25,Y+48
 2818 1372 8217      		cp r24,r18
 2819 1374 9307      		cpc r25,r19
 2820 1376 04F0      		brlt .+2
 2821 1378 00C0      		rjmp .L77
 238:lp_solve_5.5/lp_scale.c ****     }
 239:lp_solve_5.5/lp_scale.c ****   }
 240:lp_solve_5.5/lp_scale.c **** 
 241:lp_solve_5.5/lp_scale.c ****   /* Compute sk */
 242:lp_solve_5.5/lp_scale.c ****   sk = 0;
 2822               		.loc 1 242 0 is_stmt 1
 2823 137a 1F82      		std Y+7,__zero_reg__
 2824 137c 1886      		std Y+8,__zero_reg__
 2825 137e 1986      		std Y+9,__zero_reg__
 2826 1380 1A86      		std Y+10,__zero_reg__
 243:lp_solve_5.5/lp_scale.c ****   skm1 = 0;
 2827               		.loc 1 243 0
 2828 1382 1B8A      		std Y+19,__zero_reg__
 2829 1384 1C8A      		std Y+20,__zero_reg__
 2830 1386 1D8A      		std Y+21,__zero_reg__
 2831 1388 1E8A      		std Y+22,__zero_reg__
 244:lp_solve_5.5/lp_scale.c ****   for(col = 1; col <= colMax; col++)
 2832               		.loc 1 244 0
 2833 138a 81E0      		ldi r24,lo8(1)
 2834 138c 90E0      		ldi r25,0
 2835 138e 9E83      		std Y+6,r25
 2836 1390 8D83      		std Y+5,r24
 2837 1392 00C0      		rjmp .L78
 2838               	.L79:
 245:lp_solve_5.5/lp_scale.c ****     sk += (residual_even[col]*residual_even[col]) / (REAL) ColCount[col];
 2839               		.loc 1 245 0 discriminator 3
 2840 1394 CE01      		movw r24,r28
 2841 1396 8D5A      		subi r24,-83
 2842 1398 9F4F      		sbci r25,-1
 2843 139a DC01      		movw r26,r24
 2844 139c 2D91      		ld r18,X+
 2845 139e 3C91      		ld r19,X
 2846 13a0 8D81      		ldd r24,Y+5
 2847 13a2 9E81      		ldd r25,Y+6
 2848 13a4 880F      		lsl r24
 2849 13a6 991F      		rol r25
 2850 13a8 880F      		lsl r24
 2851 13aa 991F      		rol r25
 2852 13ac 820F      		add r24,r18
 2853 13ae 931F      		adc r25,r19
 2854 13b0 FC01      		movw r30,r24
 2855 13b2 8081      		ld r24,Z
 2856 13b4 9181      		ldd r25,Z+1
 2857 13b6 A281      		ldd r26,Z+2
 2858 13b8 B381      		ldd r27,Z+3
 2859 13ba 9E01      		movw r18,r28
 2860 13bc 2D5A      		subi r18,-83
 2861 13be 3F4F      		sbci r19,-1
 2862 13c0 F901      		movw r30,r18
 2863 13c2 4081      		ld r20,Z
 2864 13c4 5181      		ldd r21,Z+1
 2865 13c6 2D81      		ldd r18,Y+5
 2866 13c8 3E81      		ldd r19,Y+6
 2867 13ca 220F      		lsl r18
 2868 13cc 331F      		rol r19
 2869 13ce 220F      		lsl r18
 2870 13d0 331F      		rol r19
 2871 13d2 240F      		add r18,r20
 2872 13d4 351F      		adc r19,r21
 2873 13d6 F901      		movw r30,r18
 2874 13d8 2081      		ld r18,Z
 2875 13da 3181      		ldd r19,Z+1
 2876 13dc 4281      		ldd r20,Z+2
 2877 13de 5381      		ldd r21,Z+3
 2878 13e0 BC01      		movw r22,r24
 2879 13e2 CD01      		movw r24,r26
 2880 13e4 0E94 0000 		call __mulsf3
 2881 13e8 DC01      		movw r26,r24
 2882 13ea CB01      		movw r24,r22
 2883 13ec 6C01      		movw r12,r24
 2884 13ee 7D01      		movw r14,r26
 2885 13f0 CE01      		movw r24,r28
 2886 13f2 875A      		subi r24,-89
 2887 13f4 9F4F      		sbci r25,-1
 2888 13f6 DC01      		movw r26,r24
 2889 13f8 2D91      		ld r18,X+
 2890 13fa 3C91      		ld r19,X
 2891 13fc 8D81      		ldd r24,Y+5
 2892 13fe 9E81      		ldd r25,Y+6
 2893 1400 880F      		lsl r24
 2894 1402 991F      		rol r25
 2895 1404 820F      		add r24,r18
 2896 1406 931F      		adc r25,r19
 2897 1408 FC01      		movw r30,r24
 2898 140a 8081      		ld r24,Z
 2899 140c 9181      		ldd r25,Z+1
 2900 140e 092E      		mov __tmp_reg__,r25
 2901 1410 000C      		lsl r0
 2902 1412 AA0B      		sbc r26,r26
 2903 1414 BB0B      		sbc r27,r27
 2904 1416 BC01      		movw r22,r24
 2905 1418 CD01      		movw r24,r26
 2906 141a 0E94 0000 		call __floatsisf
 2907 141e DC01      		movw r26,r24
 2908 1420 CB01      		movw r24,r22
 2909 1422 9C01      		movw r18,r24
 2910 1424 AD01      		movw r20,r26
 2911 1426 C701      		movw r24,r14
 2912 1428 B601      		movw r22,r12
 2913 142a 0E94 0000 		call __divsf3
 2914 142e DC01      		movw r26,r24
 2915 1430 CB01      		movw r24,r22
 2916 1432 9C01      		movw r18,r24
 2917 1434 AD01      		movw r20,r26
 2918 1436 6F81      		ldd r22,Y+7
 2919 1438 7885      		ldd r23,Y+8
 2920 143a 8985      		ldd r24,Y+9
 2921 143c 9A85      		ldd r25,Y+10
 2922 143e 0E94 0000 		call __addsf3
 2923 1442 DC01      		movw r26,r24
 2924 1444 CB01      		movw r24,r22
 2925 1446 8F83      		std Y+7,r24
 2926 1448 9887      		std Y+8,r25
 2927 144a A987      		std Y+9,r26
 2928 144c BA87      		std Y+10,r27
 244:lp_solve_5.5/lp_scale.c ****   for(col = 1; col <= colMax; col++)
 2929               		.loc 1 244 0 discriminator 3
 2930 144e 8D81      		ldd r24,Y+5
 2931 1450 9E81      		ldd r25,Y+6
 2932 1452 0196      		adiw r24,1
 2933 1454 9E83      		std Y+6,r25
 2934 1456 8D83      		std Y+5,r24
 2935               	.L78:
 244:lp_solve_5.5/lp_scale.c ****   for(col = 1; col <= colMax; col++)
 2936               		.loc 1 244 0 is_stmt 0 discriminator 1
 2937 1458 2D81      		ldd r18,Y+5
 2938 145a 3E81      		ldd r19,Y+6
 2939 145c 8FA5      		ldd r24,Y+47
 2940 145e 98A9      		ldd r25,Y+48
 2941 1460 8217      		cp r24,r18
 2942 1462 9307      		cpc r25,r19
 2943 1464 04F0      		brlt .+2
 2944 1466 00C0      		rjmp .L79
 246:lp_solve_5.5/lp_scale.c **** 
 247:lp_solve_5.5/lp_scale.c ****   Result = 0;
 2945               		.loc 1 247 0 is_stmt 1
 2946 1468 1CA2      		std Y+36,__zero_reg__
 2947 146a 1BA2      		std Y+35,__zero_reg__
 248:lp_solve_5.5/lp_scale.c ****   qk=1; qkm1=0; qkm2=0;
 2948               		.loc 1 248 0
 2949 146c 80E0      		ldi r24,0
 2950 146e 90E0      		ldi r25,0
 2951 1470 A0E8      		ldi r26,lo8(-128)
 2952 1472 BFE3      		ldi r27,lo8(63)
 2953 1474 8B87      		std Y+11,r24
 2954 1476 9C87      		std Y+12,r25
 2955 1478 AD87      		std Y+13,r26
 2956 147a BE87      		std Y+14,r27
 2957 147c 1F8A      		std Y+23,__zero_reg__
 2958 147e 188E      		std Y+24,__zero_reg__
 2959 1480 198E      		std Y+25,__zero_reg__
 2960 1482 1A8E      		std Y+26,__zero_reg__
 2961 1484 1BAE      		std Y+59,__zero_reg__
 2962 1486 1CAE      		std Y+60,__zero_reg__
 2963 1488 1DAE      		std Y+61,__zero_reg__
 2964 148a 1EAE      		std Y+62,__zero_reg__
 249:lp_solve_5.5/lp_scale.c ****   ek=0; ekm1=0; ekm2=0;
 2965               		.loc 1 249 0
 2966 148c 1F86      		std Y+15,__zero_reg__
 2967 148e 188A      		std Y+16,__zero_reg__
 2968 1490 198A      		std Y+17,__zero_reg__
 2969 1492 1A8A      		std Y+18,__zero_reg__
 2970 1494 1B8E      		std Y+27,__zero_reg__
 2971 1496 1C8E      		std Y+28,__zero_reg__
 2972 1498 1D8E      		std Y+29,__zero_reg__
 2973 149a 1E8E      		std Y+30,__zero_reg__
 2974 149c CE01      		movw r24,r28
 2975 149e CF96      		adiw r24,63
 2976 14a0 DC01      		movw r26,r24
 2977 14a2 1D92      		st X+,__zero_reg__
 2978 14a4 1D92      		st X+,__zero_reg__
 2979 14a6 1D92      		st X+,__zero_reg__
 2980 14a8 1C92      		st X,__zero_reg__
 2981 14aa 1397      		sbiw r26,3
 250:lp_solve_5.5/lp_scale.c **** 
 251:lp_solve_5.5/lp_scale.c ****   while(sk>StopTolerance) {
 2982               		.loc 1 251 0
 2983 14ac 0C94 0000 		jmp .L80
 2984               	.L123:
 252:lp_solve_5.5/lp_scale.c ****   /* Given the values of residual and sk, construct
 253:lp_solve_5.5/lp_scale.c ****      ColScale (when pass is even)
 254:lp_solve_5.5/lp_scale.c ****      RowScale (when pass is odd)  */
 255:lp_solve_5.5/lp_scale.c **** 
 256:lp_solve_5.5/lp_scale.c ****     qkqkm1 = qk * qkm1;
 2985               		.loc 1 256 0
 2986 14b0 8E01      		movw r16,r28
 2987 14b2 0D5B      		subi r16,-67
 2988 14b4 1F4F      		sbci r17,-1
 2989 14b6 2F89      		ldd r18,Y+23
 2990 14b8 388D      		ldd r19,Y+24
 2991 14ba 498D      		ldd r20,Y+25
 2992 14bc 5A8D      		ldd r21,Y+26
 2993 14be 6B85      		ldd r22,Y+11
 2994 14c0 7C85      		ldd r23,Y+12
 2995 14c2 8D85      		ldd r24,Y+13
 2996 14c4 9E85      		ldd r25,Y+14
 2997 14c6 0E94 0000 		call __mulsf3
 2998 14ca DC01      		movw r26,r24
 2999 14cc CB01      		movw r24,r22
 3000 14ce F801      		movw r30,r16
 3001 14d0 8083      		st Z,r24
 3002 14d2 9183      		std Z+1,r25
 3003 14d4 A283      		std Z+2,r26
 3004 14d6 B383      		std Z+3,r27
 257:lp_solve_5.5/lp_scale.c ****     ekekm1 = ek * ekm1;
 3005               		.loc 1 257 0
 3006 14d8 8E01      		movw r16,r28
 3007 14da 095B      		subi r16,-71
 3008 14dc 1F4F      		sbci r17,-1
 3009 14de 2B8D      		ldd r18,Y+27
 3010 14e0 3C8D      		ldd r19,Y+28
 3011 14e2 4D8D      		ldd r20,Y+29
 3012 14e4 5E8D      		ldd r21,Y+30
 3013 14e6 6F85      		ldd r22,Y+15
 3014 14e8 7889      		ldd r23,Y+16
 3015 14ea 8989      		ldd r24,Y+17
 3016 14ec 9A89      		ldd r25,Y+18
 3017 14ee 0E94 0000 		call __mulsf3
 3018 14f2 DC01      		movw r26,r24
 3019 14f4 CB01      		movw r24,r22
 3020 14f6 F801      		movw r30,r16
 3021 14f8 8083      		st Z,r24
 3022 14fa 9183      		std Z+1,r25
 3023 14fc A283      		std Z+2,r26
 3024 14fe B383      		std Z+3,r27
 258:lp_solve_5.5/lp_scale.c ****     if((Result % 2) == 0) { /* pass is even; construct RowScale[pass+1] */
 3025               		.loc 1 258 0
 3026 1500 8BA1      		ldd r24,Y+35
 3027 1502 9CA1      		ldd r25,Y+36
 3028 1504 8170      		andi r24,1
 3029 1506 9927      		clr r25
 3030 1508 892B      		or r24,r25
 3031 150a 01F0      		breq .+2
 3032 150c 00C0      		rjmp .L81
 259:lp_solve_5.5/lp_scale.c ****       if(Result != 0) {
 3033               		.loc 1 259 0
 3034 150e 8BA1      		ldd r24,Y+35
 3035 1510 9CA1      		ldd r25,Y+36
 3036 1512 892B      		or r24,r25
 3037 1514 01F4      		brne .+2
 3038 1516 00C0      		rjmp .L82
 260:lp_solve_5.5/lp_scale.c ****         for(row = 0; row <= lp->rows; row++)
 3039               		.loc 1 260 0
 3040 1518 1C82      		std Y+4,__zero_reg__
 3041 151a 1B82      		std Y+3,__zero_reg__
 3042 151c 00C0      		rjmp .L83
 3043               	.L84:
 261:lp_solve_5.5/lp_scale.c ****           RowScalem2[row] = FRowScale[row];
 3044               		.loc 1 261 0 discriminator 3
 3045 151e CE01      		movw r24,r28
 3046 1520 855B      		subi r24,-75
 3047 1522 9F4F      		sbci r25,-1
 3048 1524 DC01      		movw r26,r24
 3049 1526 2D91      		ld r18,X+
 3050 1528 3C91      		ld r19,X
 3051 152a 8B81      		ldd r24,Y+3
 3052 152c 9C81      		ldd r25,Y+4
 3053 152e 880F      		lsl r24
 3054 1530 991F      		rol r25
 3055 1532 880F      		lsl r24
 3056 1534 991F      		rol r25
 3057 1536 280F      		add r18,r24
 3058 1538 391F      		adc r19,r25
 3059 153a 8B81      		ldd r24,Y+3
 3060 153c 9C81      		ldd r25,Y+4
 3061 153e 880F      		lsl r24
 3062 1540 991F      		rol r25
 3063 1542 880F      		lsl r24
 3064 1544 991F      		rol r25
 3065 1546 AE01      		movw r20,r28
 3066 1548 425A      		subi r20,-94
 3067 154a 5F4F      		sbci r21,-1
 3068 154c FA01      		movw r30,r20
 3069 154e 4081      		ld r20,Z
 3070 1550 5181      		ldd r21,Z+1
 3071 1552 840F      		add r24,r20
 3072 1554 951F      		adc r25,r21
 3073 1556 FC01      		movw r30,r24
 3074 1558 8081      		ld r24,Z
 3075 155a 9181      		ldd r25,Z+1
 3076 155c A281      		ldd r26,Z+2
 3077 155e B381      		ldd r27,Z+3
 3078 1560 F901      		movw r30,r18
 3079 1562 8083      		st Z,r24
 3080 1564 9183      		std Z+1,r25
 3081 1566 A283      		std Z+2,r26
 3082 1568 B383      		std Z+3,r27
 260:lp_solve_5.5/lp_scale.c ****         for(row = 0; row <= lp->rows; row++)
 3083               		.loc 1 260 0 discriminator 3
 3084 156a 8B81      		ldd r24,Y+3
 3085 156c 9C81      		ldd r25,Y+4
 3086 156e 0196      		adiw r24,1
 3087 1570 9C83      		std Y+4,r25
 3088 1572 8B83      		std Y+3,r24
 3089               	.L83:
 260:lp_solve_5.5/lp_scale.c ****         for(row = 0; row <= lp->rows; row++)
 3090               		.loc 1 260 0 is_stmt 0 discriminator 1
 3091 1574 CE01      		movw r24,r28
 3092 1576 855A      		subi r24,-91
 3093 1578 9F4F      		sbci r25,-1
 3094 157a DC01      		movw r26,r24
 3095 157c 8D91      		ld r24,X+
 3096 157e 9C91      		ld r25,X
 3097 1580 8651      		subi r24,22
 3098 1582 9E4F      		sbci r25,-2
 3099 1584 FC01      		movw r30,r24
 3100 1586 2081      		ld r18,Z
 3101 1588 3181      		ldd r19,Z+1
 3102 158a 8B81      		ldd r24,Y+3
 3103 158c 9C81      		ldd r25,Y+4
 3104 158e 2817      		cp r18,r24
 3105 1590 3907      		cpc r19,r25
 3106 1592 04F4      		brge .L84
 262:lp_solve_5.5/lp_scale.c ****         if(qkqkm1 != 0) {
 3107               		.loc 1 262 0 is_stmt 1
 3108 1594 CE01      		movw r24,r28
 3109 1596 8D5B      		subi r24,-67
 3110 1598 9F4F      		sbci r25,-1
 3111 159a 20E0      		ldi r18,0
 3112 159c 30E0      		ldi r19,0
 3113 159e A901      		movw r20,r18
 3114 15a0 DC01      		movw r26,r24
 3115 15a2 6D91      		ld r22,X+
 3116 15a4 7D91      		ld r23,X+
 3117 15a6 8D91      		ld r24,X+
 3118 15a8 9C91      		ld r25,X
 3119 15aa 0E94 0000 		call __nesf2
 3120 15ae 8823      		tst r24
 3121 15b0 01F4      		brne .+2
 3122 15b2 00C0      		rjmp .L82
 263:lp_solve_5.5/lp_scale.c ****           for(row = 0; row <= lp->rows; row++)
 3123               		.loc 1 263 0
 3124 15b4 1C82      		std Y+4,__zero_reg__
 3125 15b6 1B82      		std Y+3,__zero_reg__
 3126 15b8 00C0      		rjmp .L86
 3127               	.L87:
 264:lp_solve_5.5/lp_scale.c ****             FRowScale[row]*=(1 + ekekm1 / qkqkm1);
 3128               		.loc 1 264 0 discriminator 3
 3129 15ba 8B81      		ldd r24,Y+3
 3130 15bc 9C81      		ldd r25,Y+4
 3131 15be 880F      		lsl r24
 3132 15c0 991F      		rol r25
 3133 15c2 880F      		lsl r24
 3134 15c4 991F      		rol r25
 3135 15c6 9E01      		movw r18,r28
 3136 15c8 225A      		subi r18,-94
 3137 15ca 3F4F      		sbci r19,-1
 3138 15cc F901      		movw r30,r18
 3139 15ce 2081      		ld r18,Z
 3140 15d0 3181      		ldd r19,Z+1
 3141 15d2 8901      		movw r16,r18
 3142 15d4 080F      		add r16,r24
 3143 15d6 191F      		adc r17,r25
 3144 15d8 8B81      		ldd r24,Y+3
 3145 15da 9C81      		ldd r25,Y+4
 3146 15dc 880F      		lsl r24
 3147 15de 991F      		rol r25
 3148 15e0 880F      		lsl r24
 3149 15e2 991F      		rol r25
 3150 15e4 9E01      		movw r18,r28
 3151 15e6 225A      		subi r18,-94
 3152 15e8 3F4F      		sbci r19,-1
 3153 15ea D901      		movw r26,r18
 3154 15ec 2D91      		ld r18,X+
 3155 15ee 3C91      		ld r19,X
 3156 15f0 820F      		add r24,r18
 3157 15f2 931F      		adc r25,r19
 3158 15f4 FC01      		movw r30,r24
 3159 15f6 C080      		ld r12,Z
 3160 15f8 D180      		ldd r13,Z+1
 3161 15fa E280      		ldd r14,Z+2
 3162 15fc F380      		ldd r15,Z+3
 3163 15fe CE01      		movw r24,r28
 3164 1600 895B      		subi r24,-71
 3165 1602 9F4F      		sbci r25,-1
 3166 1604 9E01      		movw r18,r28
 3167 1606 2D5B      		subi r18,-67
 3168 1608 3F4F      		sbci r19,-1
 3169 160a D901      		movw r26,r18
 3170 160c 2D91      		ld r18,X+
 3171 160e 3D91      		ld r19,X+
 3172 1610 4D91      		ld r20,X+
 3173 1612 5C91      		ld r21,X
 3174 1614 FC01      		movw r30,r24
 3175 1616 6081      		ld r22,Z
 3176 1618 7181      		ldd r23,Z+1
 3177 161a 8281      		ldd r24,Z+2
 3178 161c 9381      		ldd r25,Z+3
 3179 161e 0E94 0000 		call __divsf3
 3180 1622 DC01      		movw r26,r24
 3181 1624 CB01      		movw r24,r22
 3182 1626 20E0      		ldi r18,0
 3183 1628 30E0      		ldi r19,0
 3184 162a 40E8      		ldi r20,lo8(-128)
 3185 162c 5FE3      		ldi r21,lo8(63)
 3186 162e BC01      		movw r22,r24
 3187 1630 CD01      		movw r24,r26
 3188 1632 0E94 0000 		call __addsf3
 3189 1636 DC01      		movw r26,r24
 3190 1638 CB01      		movw r24,r22
 3191 163a 9C01      		movw r18,r24
 3192 163c AD01      		movw r20,r26
 3193 163e C701      		movw r24,r14
 3194 1640 B601      		movw r22,r12
 3195 1642 0E94 0000 		call __mulsf3
 3196 1646 DC01      		movw r26,r24
 3197 1648 CB01      		movw r24,r22
 3198 164a F801      		movw r30,r16
 3199 164c 8083      		st Z,r24
 3200 164e 9183      		std Z+1,r25
 3201 1650 A283      		std Z+2,r26
 3202 1652 B383      		std Z+3,r27
 263:lp_solve_5.5/lp_scale.c ****           for(row = 0; row <= lp->rows; row++)
 3203               		.loc 1 263 0 discriminator 3
 3204 1654 8B81      		ldd r24,Y+3
 3205 1656 9C81      		ldd r25,Y+4
 3206 1658 0196      		adiw r24,1
 3207 165a 9C83      		std Y+4,r25
 3208 165c 8B83      		std Y+3,r24
 3209               	.L86:
 263:lp_solve_5.5/lp_scale.c ****           for(row = 0; row <= lp->rows; row++)
 3210               		.loc 1 263 0 is_stmt 0 discriminator 1
 3211 165e CE01      		movw r24,r28
 3212 1660 855A      		subi r24,-91
 3213 1662 9F4F      		sbci r25,-1
 3214 1664 DC01      		movw r26,r24
 3215 1666 8D91      		ld r24,X+
 3216 1668 9C91      		ld r25,X
 3217 166a 8651      		subi r24,22
 3218 166c 9E4F      		sbci r25,-2
 3219 166e FC01      		movw r30,r24
 3220 1670 2081      		ld r18,Z
 3221 1672 3181      		ldd r19,Z+1
 3222 1674 8B81      		ldd r24,Y+3
 3223 1676 9C81      		ldd r25,Y+4
 3224 1678 2817      		cp r18,r24
 3225 167a 3907      		cpc r19,r25
 3226 167c 04F0      		brlt .+2
 3227 167e 00C0      		rjmp .L87
 265:lp_solve_5.5/lp_scale.c ****           for(row = 0; row<=lp->rows; row++)
 3228               		.loc 1 265 0 is_stmt 1
 3229 1680 1C82      		std Y+4,__zero_reg__
 3230 1682 1B82      		std Y+3,__zero_reg__
 3231 1684 00C0      		rjmp .L88
 3232               	.L89:
 266:lp_solve_5.5/lp_scale.c ****             FRowScale[row]+=(residual_odd[row] / (qkqkm1 * (REAL) RowCount[row]) -
 3233               		.loc 1 266 0 discriminator 3
 3234 1686 8B81      		ldd r24,Y+3
 3235 1688 9C81      		ldd r25,Y+4
 3236 168a 880F      		lsl r24
 3237 168c 991F      		rol r25
 3238 168e 880F      		lsl r24
 3239 1690 991F      		rol r25
 3240 1692 9E01      		movw r18,r28
 3241 1694 225A      		subi r18,-94
 3242 1696 3F4F      		sbci r19,-1
 3243 1698 D901      		movw r26,r18
 3244 169a 2D91      		ld r18,X+
 3245 169c 3C91      		ld r19,X
 3246 169e 8901      		movw r16,r18
 3247 16a0 080F      		add r16,r24
 3248 16a2 191F      		adc r17,r25
 3249 16a4 8B81      		ldd r24,Y+3
 3250 16a6 9C81      		ldd r25,Y+4
 3251 16a8 880F      		lsl r24
 3252 16aa 991F      		rol r25
 3253 16ac 880F      		lsl r24
 3254 16ae 991F      		rol r25
 3255 16b0 9E01      		movw r18,r28
 3256 16b2 225A      		subi r18,-94
 3257 16b4 3F4F      		sbci r19,-1
 3258 16b6 F901      		movw r30,r18
 3259 16b8 2081      		ld r18,Z
 3260 16ba 3181      		ldd r19,Z+1
 3261 16bc 820F      		add r24,r18
 3262 16be 931F      		adc r25,r19
 3263 16c0 DC01      		movw r26,r24
 3264 16c2 CD90      		ld r12,X+
 3265 16c4 DD90      		ld r13,X+
 3266 16c6 ED90      		ld r14,X+
 3267 16c8 FC90      		ld r15,X
 3268 16ca CE01      		movw r24,r28
 3269 16cc 8B5A      		subi r24,-85
 3270 16ce 9F4F      		sbci r25,-1
 3271 16d0 FC01      		movw r30,r24
 3272 16d2 2081      		ld r18,Z
 3273 16d4 3181      		ldd r19,Z+1
 3274 16d6 8B81      		ldd r24,Y+3
 3275 16d8 9C81      		ldd r25,Y+4
 3276 16da 880F      		lsl r24
 3277 16dc 991F      		rol r25
 3278 16de 880F      		lsl r24
 3279 16e0 991F      		rol r25
 3280 16e2 820F      		add r24,r18
 3281 16e4 931F      		adc r25,r19
 3282 16e6 DC01      		movw r26,r24
 3283 16e8 8D90      		ld r8,X+
 3284 16ea 9D90      		ld r9,X+
 3285 16ec AD90      		ld r10,X+
 3286 16ee BC90      		ld r11,X
 3287 16f0 CE01      		movw r24,r28
 3288 16f2 895A      		subi r24,-87
 3289 16f4 9F4F      		sbci r25,-1
 3290 16f6 FC01      		movw r30,r24
 3291 16f8 2081      		ld r18,Z
 3292 16fa 3181      		ldd r19,Z+1
 3293 16fc 8B81      		ldd r24,Y+3
 3294 16fe 9C81      		ldd r25,Y+4
 3295 1700 880F      		lsl r24
 3296 1702 991F      		rol r25
 3297 1704 820F      		add r24,r18
 3298 1706 931F      		adc r25,r19
 3299 1708 DC01      		movw r26,r24
 3300 170a 8D91      		ld r24,X+
 3301 170c 9C91      		ld r25,X
 3302 170e 092E      		mov __tmp_reg__,r25
 3303 1710 000C      		lsl r0
 3304 1712 AA0B      		sbc r26,r26
 3305 1714 BB0B      		sbc r27,r27
 3306 1716 BC01      		movw r22,r24
 3307 1718 CD01      		movw r24,r26
 3308 171a 0E94 0000 		call __floatsisf
 3309 171e 2B01      		movw r4,r22
 3310 1720 3C01      		movw r6,r24
 3311 1722 CE01      		movw r24,r28
 3312 1724 8D5B      		subi r24,-67
 3313 1726 9F4F      		sbci r25,-1
 3314 1728 FC01      		movw r30,r24
 3315 172a 2081      		ld r18,Z
 3316 172c 3181      		ldd r19,Z+1
 3317 172e 4281      		ldd r20,Z+2
 3318 1730 5381      		ldd r21,Z+3
 3319 1732 C301      		movw r24,r6
 3320 1734 B201      		movw r22,r4
 3321 1736 0E94 0000 		call __mulsf3
 3322 173a DC01      		movw r26,r24
 3323 173c CB01      		movw r24,r22
 3324 173e 9C01      		movw r18,r24
 3325 1740 AD01      		movw r20,r26
 3326 1742 C501      		movw r24,r10
 3327 1744 B401      		movw r22,r8
 3328 1746 0E94 0000 		call __divsf3
 3329 174a DC01      		movw r26,r24
 3330 174c CB01      		movw r24,r22
 3331 174e 4C01      		movw r8,r24
 3332 1750 5D01      		movw r10,r26
 267:lp_solve_5.5/lp_scale.c ****                              RowScalem2[row] * ekekm1 / qkqkm1);
 3333               		.loc 1 267 0 discriminator 3
 3334 1752 CE01      		movw r24,r28
 3335 1754 855B      		subi r24,-75
 3336 1756 9F4F      		sbci r25,-1
 3337 1758 DC01      		movw r26,r24
 3338 175a 2D91      		ld r18,X+
 3339 175c 3C91      		ld r19,X
 3340 175e 8B81      		ldd r24,Y+3
 3341 1760 9C81      		ldd r25,Y+4
 3342 1762 880F      		lsl r24
 3343 1764 991F      		rol r25
 3344 1766 880F      		lsl r24
 3345 1768 991F      		rol r25
 3346 176a 820F      		add r24,r18
 3347 176c 931F      		adc r25,r19
 3348 176e FC01      		movw r30,r24
 3349 1770 8081      		ld r24,Z
 3350 1772 9181      		ldd r25,Z+1
 3351 1774 A281      		ldd r26,Z+2
 3352 1776 B381      		ldd r27,Z+3
 3353 1778 9E01      		movw r18,r28
 3354 177a 295B      		subi r18,-71
 3355 177c 3F4F      		sbci r19,-1
 3356 177e F901      		movw r30,r18
 3357 1780 2081      		ld r18,Z
 3358 1782 3181      		ldd r19,Z+1
 3359 1784 4281      		ldd r20,Z+2
 3360 1786 5381      		ldd r21,Z+3
 3361 1788 BC01      		movw r22,r24
 3362 178a CD01      		movw r24,r26
 3363 178c 0E94 0000 		call __mulsf3
 3364 1790 DC01      		movw r26,r24
 3365 1792 CB01      		movw r24,r22
 3366 1794 2C01      		movw r4,r24
 3367 1796 3D01      		movw r6,r26
 3368 1798 CE01      		movw r24,r28
 3369 179a 8D5B      		subi r24,-67
 3370 179c 9F4F      		sbci r25,-1
 3371 179e DC01      		movw r26,r24
 3372 17a0 2D91      		ld r18,X+
 3373 17a2 3D91      		ld r19,X+
 3374 17a4 4D91      		ld r20,X+
 3375 17a6 5C91      		ld r21,X
 3376 17a8 C301      		movw r24,r6
 3377 17aa B201      		movw r22,r4
 3378 17ac 0E94 0000 		call __divsf3
 3379 17b0 DC01      		movw r26,r24
 3380 17b2 CB01      		movw r24,r22
 266:lp_solve_5.5/lp_scale.c ****             FRowScale[row]+=(residual_odd[row] / (qkqkm1 * (REAL) RowCount[row]) -
 3381               		.loc 1 266 0 discriminator 3
 3382 17b4 9C01      		movw r18,r24
 3383 17b6 AD01      		movw r20,r26
 3384 17b8 C501      		movw r24,r10
 3385 17ba B401      		movw r22,r8
 3386 17bc 0E94 0000 		call __subsf3
 3387 17c0 DC01      		movw r26,r24
 3388 17c2 CB01      		movw r24,r22
 3389 17c4 9C01      		movw r18,r24
 3390 17c6 AD01      		movw r20,r26
 3391 17c8 C701      		movw r24,r14
 3392 17ca B601      		movw r22,r12
 3393 17cc 0E94 0000 		call __addsf3
 3394 17d0 DC01      		movw r26,r24
 3395 17d2 CB01      		movw r24,r22
 3396 17d4 F801      		movw r30,r16
 3397 17d6 8083      		st Z,r24
 3398 17d8 9183      		std Z+1,r25
 3399 17da A283      		std Z+2,r26
 3400 17dc B383      		std Z+3,r27
 265:lp_solve_5.5/lp_scale.c ****           for(row = 0; row<=lp->rows; row++)
 3401               		.loc 1 265 0 discriminator 3
 3402 17de 8B81      		ldd r24,Y+3
 3403 17e0 9C81      		ldd r25,Y+4
 3404 17e2 0196      		adiw r24,1
 3405 17e4 9C83      		std Y+4,r25
 3406 17e6 8B83      		std Y+3,r24
 3407               	.L88:
 265:lp_solve_5.5/lp_scale.c ****           for(row = 0; row<=lp->rows; row++)
 3408               		.loc 1 265 0 is_stmt 0 discriminator 1
 3409 17e8 CE01      		movw r24,r28
 3410 17ea 855A      		subi r24,-91
 3411 17ec 9F4F      		sbci r25,-1
 3412 17ee DC01      		movw r26,r24
 3413 17f0 8D91      		ld r24,X+
 3414 17f2 9C91      		ld r25,X
 3415 17f4 8651      		subi r24,22
 3416 17f6 9E4F      		sbci r25,-2
 3417 17f8 FC01      		movw r30,r24
 3418 17fa 2081      		ld r18,Z
 3419 17fc 3181      		ldd r19,Z+1
 3420 17fe 8B81      		ldd r24,Y+3
 3421 1800 9C81      		ldd r25,Y+4
 3422 1802 2817      		cp r18,r24
 3423 1804 3907      		cpc r19,r25
 3424 1806 04F0      		brlt .+2
 3425 1808 00C0      		rjmp .L89
 3426 180a 00C0      		rjmp .L82
 3427               	.L81:
 268:lp_solve_5.5/lp_scale.c ****         }
 269:lp_solve_5.5/lp_scale.c ****       }
 270:lp_solve_5.5/lp_scale.c ****     }
 271:lp_solve_5.5/lp_scale.c ****     else { /* pass is odd; construct ColScale[pass+1] */
 272:lp_solve_5.5/lp_scale.c ****       for(col = 1; col <= colMax; col++)
 3428               		.loc 1 272 0 is_stmt 1
 3429 180c 81E0      		ldi r24,lo8(1)
 3430 180e 90E0      		ldi r25,0
 3431 1810 9E83      		std Y+6,r25
 3432 1812 8D83      		std Y+5,r24
 3433 1814 00C0      		rjmp .L90
 3434               	.L91:
 273:lp_solve_5.5/lp_scale.c ****         ColScalem2[col] = FColScale[col];
 3435               		.loc 1 273 0 discriminator 3
 3436 1816 CE01      		movw r24,r28
 3437 1818 835B      		subi r24,-77
 3438 181a 9F4F      		sbci r25,-1
 3439 181c DC01      		movw r26,r24
 3440 181e 2D91      		ld r18,X+
 3441 1820 3C91      		ld r19,X
 3442 1822 8D81      		ldd r24,Y+5
 3443 1824 9E81      		ldd r25,Y+6
 3444 1826 880F      		lsl r24
 3445 1828 991F      		rol r25
 3446 182a 880F      		lsl r24
 3447 182c 991F      		rol r25
 3448 182e 280F      		add r18,r24
 3449 1830 391F      		adc r19,r25
 3450 1832 8D81      		ldd r24,Y+5
 3451 1834 9E81      		ldd r25,Y+6
 3452 1836 880F      		lsl r24
 3453 1838 991F      		rol r25
 3454 183a 880F      		lsl r24
 3455 183c 991F      		rol r25
 3456 183e AE01      		movw r20,r28
 3457 1840 405A      		subi r20,-96
 3458 1842 5F4F      		sbci r21,-1
 3459 1844 FA01      		movw r30,r20
 3460 1846 4081      		ld r20,Z
 3461 1848 5181      		ldd r21,Z+1
 3462 184a 840F      		add r24,r20
 3463 184c 951F      		adc r25,r21
 3464 184e FC01      		movw r30,r24
 3465 1850 8081      		ld r24,Z
 3466 1852 9181      		ldd r25,Z+1
 3467 1854 A281      		ldd r26,Z+2
 3468 1856 B381      		ldd r27,Z+3
 3469 1858 F901      		movw r30,r18
 3470 185a 8083      		st Z,r24
 3471 185c 9183      		std Z+1,r25
 3472 185e A283      		std Z+2,r26
 3473 1860 B383      		std Z+3,r27
 272:lp_solve_5.5/lp_scale.c ****         ColScalem2[col] = FColScale[col];
 3474               		.loc 1 272 0 discriminator 3
 3475 1862 8D81      		ldd r24,Y+5
 3476 1864 9E81      		ldd r25,Y+6
 3477 1866 0196      		adiw r24,1
 3478 1868 9E83      		std Y+6,r25
 3479 186a 8D83      		std Y+5,r24
 3480               	.L90:
 272:lp_solve_5.5/lp_scale.c ****         ColScalem2[col] = FColScale[col];
 3481               		.loc 1 272 0 is_stmt 0 discriminator 1
 3482 186c 2D81      		ldd r18,Y+5
 3483 186e 3E81      		ldd r19,Y+6
 3484 1870 8FA5      		ldd r24,Y+47
 3485 1872 98A9      		ldd r25,Y+48
 3486 1874 8217      		cp r24,r18
 3487 1876 9307      		cpc r25,r19
 3488 1878 04F4      		brge .L91
 274:lp_solve_5.5/lp_scale.c ****       if(qkqkm1 != 0) {
 3489               		.loc 1 274 0 is_stmt 1
 3490 187a CE01      		movw r24,r28
 3491 187c 8D5B      		subi r24,-67
 3492 187e 9F4F      		sbci r25,-1
 3493 1880 20E0      		ldi r18,0
 3494 1882 30E0      		ldi r19,0
 3495 1884 A901      		movw r20,r18
 3496 1886 DC01      		movw r26,r24
 3497 1888 6D91      		ld r22,X+
 3498 188a 7D91      		ld r23,X+
 3499 188c 8D91      		ld r24,X+
 3500 188e 9C91      		ld r25,X
 3501 1890 0E94 0000 		call __nesf2
 3502 1894 8823      		tst r24
 3503 1896 01F4      		brne .+2
 3504 1898 00C0      		rjmp .L82
 275:lp_solve_5.5/lp_scale.c ****         for(col = 1; col <= colMax; col++)
 3505               		.loc 1 275 0
 3506 189a 81E0      		ldi r24,lo8(1)
 3507 189c 90E0      		ldi r25,0
 3508 189e 9E83      		std Y+6,r25
 3509 18a0 8D83      		std Y+5,r24
 3510 18a2 00C0      		rjmp .L93
 3511               	.L94:
 276:lp_solve_5.5/lp_scale.c ****           FColScale[col] *= (1 + ekekm1 / qkqkm1);
 3512               		.loc 1 276 0 discriminator 3
 3513 18a4 8D81      		ldd r24,Y+5
 3514 18a6 9E81      		ldd r25,Y+6
 3515 18a8 880F      		lsl r24
 3516 18aa 991F      		rol r25
 3517 18ac 880F      		lsl r24
 3518 18ae 991F      		rol r25
 3519 18b0 9E01      		movw r18,r28
 3520 18b2 205A      		subi r18,-96
 3521 18b4 3F4F      		sbci r19,-1
 3522 18b6 F901      		movw r30,r18
 3523 18b8 2081      		ld r18,Z
 3524 18ba 3181      		ldd r19,Z+1
 3525 18bc 8901      		movw r16,r18
 3526 18be 080F      		add r16,r24
 3527 18c0 191F      		adc r17,r25
 3528 18c2 8D81      		ldd r24,Y+5
 3529 18c4 9E81      		ldd r25,Y+6
 3530 18c6 880F      		lsl r24
 3531 18c8 991F      		rol r25
 3532 18ca 880F      		lsl r24
 3533 18cc 991F      		rol r25
 3534 18ce 9E01      		movw r18,r28
 3535 18d0 205A      		subi r18,-96
 3536 18d2 3F4F      		sbci r19,-1
 3537 18d4 D901      		movw r26,r18
 3538 18d6 2D91      		ld r18,X+
 3539 18d8 3C91      		ld r19,X
 3540 18da 820F      		add r24,r18
 3541 18dc 931F      		adc r25,r19
 3542 18de FC01      		movw r30,r24
 3543 18e0 C080      		ld r12,Z
 3544 18e2 D180      		ldd r13,Z+1
 3545 18e4 E280      		ldd r14,Z+2
 3546 18e6 F380      		ldd r15,Z+3
 3547 18e8 CE01      		movw r24,r28
 3548 18ea 895B      		subi r24,-71
 3549 18ec 9F4F      		sbci r25,-1
 3550 18ee 9E01      		movw r18,r28
 3551 18f0 2D5B      		subi r18,-67
 3552 18f2 3F4F      		sbci r19,-1
 3553 18f4 D901      		movw r26,r18
 3554 18f6 2D91      		ld r18,X+
 3555 18f8 3D91      		ld r19,X+
 3556 18fa 4D91      		ld r20,X+
 3557 18fc 5C91      		ld r21,X
 3558 18fe FC01      		movw r30,r24
 3559 1900 6081      		ld r22,Z
 3560 1902 7181      		ldd r23,Z+1
 3561 1904 8281      		ldd r24,Z+2
 3562 1906 9381      		ldd r25,Z+3
 3563 1908 0E94 0000 		call __divsf3
 3564 190c DC01      		movw r26,r24
 3565 190e CB01      		movw r24,r22
 3566 1910 20E0      		ldi r18,0
 3567 1912 30E0      		ldi r19,0
 3568 1914 40E8      		ldi r20,lo8(-128)
 3569 1916 5FE3      		ldi r21,lo8(63)
 3570 1918 BC01      		movw r22,r24
 3571 191a CD01      		movw r24,r26
 3572 191c 0E94 0000 		call __addsf3
 3573 1920 DC01      		movw r26,r24
 3574 1922 CB01      		movw r24,r22
 3575 1924 9C01      		movw r18,r24
 3576 1926 AD01      		movw r20,r26
 3577 1928 C701      		movw r24,r14
 3578 192a B601      		movw r22,r12
 3579 192c 0E94 0000 		call __mulsf3
 3580 1930 DC01      		movw r26,r24
 3581 1932 CB01      		movw r24,r22
 3582 1934 F801      		movw r30,r16
 3583 1936 8083      		st Z,r24
 3584 1938 9183      		std Z+1,r25
 3585 193a A283      		std Z+2,r26
 3586 193c B383      		std Z+3,r27
 275:lp_solve_5.5/lp_scale.c ****         for(col = 1; col <= colMax; col++)
 3587               		.loc 1 275 0 discriminator 3
 3588 193e 8D81      		ldd r24,Y+5
 3589 1940 9E81      		ldd r25,Y+6
 3590 1942 0196      		adiw r24,1
 3591 1944 9E83      		std Y+6,r25
 3592 1946 8D83      		std Y+5,r24
 3593               	.L93:
 275:lp_solve_5.5/lp_scale.c ****         for(col = 1; col <= colMax; col++)
 3594               		.loc 1 275 0 is_stmt 0 discriminator 1
 3595 1948 2D81      		ldd r18,Y+5
 3596 194a 3E81      		ldd r19,Y+6
 3597 194c 8FA5      		ldd r24,Y+47
 3598 194e 98A9      		ldd r25,Y+48
 3599 1950 8217      		cp r24,r18
 3600 1952 9307      		cpc r25,r19
 3601 1954 04F0      		brlt .+2
 3602 1956 00C0      		rjmp .L94
 277:lp_solve_5.5/lp_scale.c ****         for(col = 1; col <= colMax; col++)
 3603               		.loc 1 277 0 is_stmt 1
 3604 1958 81E0      		ldi r24,lo8(1)
 3605 195a 90E0      		ldi r25,0
 3606 195c 9E83      		std Y+6,r25
 3607 195e 8D83      		std Y+5,r24
 3608 1960 00C0      		rjmp .L95
 3609               	.L96:
 278:lp_solve_5.5/lp_scale.c ****           FColScale[col] += (residual_even[col] / ((REAL) ColCount[col] * qkqkm1) -
 3610               		.loc 1 278 0 discriminator 3
 3611 1962 8D81      		ldd r24,Y+5
 3612 1964 9E81      		ldd r25,Y+6
 3613 1966 880F      		lsl r24
 3614 1968 991F      		rol r25
 3615 196a 880F      		lsl r24
 3616 196c 991F      		rol r25
 3617 196e 9E01      		movw r18,r28
 3618 1970 205A      		subi r18,-96
 3619 1972 3F4F      		sbci r19,-1
 3620 1974 D901      		movw r26,r18
 3621 1976 2D91      		ld r18,X+
 3622 1978 3C91      		ld r19,X
 3623 197a 8901      		movw r16,r18
 3624 197c 080F      		add r16,r24
 3625 197e 191F      		adc r17,r25
 3626 1980 8D81      		ldd r24,Y+5
 3627 1982 9E81      		ldd r25,Y+6
 3628 1984 880F      		lsl r24
 3629 1986 991F      		rol r25
 3630 1988 880F      		lsl r24
 3631 198a 991F      		rol r25
 3632 198c 9E01      		movw r18,r28
 3633 198e 205A      		subi r18,-96
 3634 1990 3F4F      		sbci r19,-1
 3635 1992 F901      		movw r30,r18
 3636 1994 2081      		ld r18,Z
 3637 1996 3181      		ldd r19,Z+1
 3638 1998 820F      		add r24,r18
 3639 199a 931F      		adc r25,r19
 3640 199c DC01      		movw r26,r24
 3641 199e CD90      		ld r12,X+
 3642 19a0 DD90      		ld r13,X+
 3643 19a2 ED90      		ld r14,X+
 3644 19a4 FC90      		ld r15,X
 3645 19a6 CE01      		movw r24,r28
 3646 19a8 8D5A      		subi r24,-83
 3647 19aa 9F4F      		sbci r25,-1
 3648 19ac FC01      		movw r30,r24
 3649 19ae 2081      		ld r18,Z
 3650 19b0 3181      		ldd r19,Z+1
 3651 19b2 8D81      		ldd r24,Y+5
 3652 19b4 9E81      		ldd r25,Y+6
 3653 19b6 880F      		lsl r24
 3654 19b8 991F      		rol r25
 3655 19ba 880F      		lsl r24
 3656 19bc 991F      		rol r25
 3657 19be 820F      		add r24,r18
 3658 19c0 931F      		adc r25,r19
 3659 19c2 DC01      		movw r26,r24
 3660 19c4 8D90      		ld r8,X+
 3661 19c6 9D90      		ld r9,X+
 3662 19c8 AD90      		ld r10,X+
 3663 19ca BC90      		ld r11,X
 3664 19cc CE01      		movw r24,r28
 3665 19ce 875A      		subi r24,-89
 3666 19d0 9F4F      		sbci r25,-1
 3667 19d2 FC01      		movw r30,r24
 3668 19d4 2081      		ld r18,Z
 3669 19d6 3181      		ldd r19,Z+1
 3670 19d8 8D81      		ldd r24,Y+5
 3671 19da 9E81      		ldd r25,Y+6
 3672 19dc 880F      		lsl r24
 3673 19de 991F      		rol r25
 3674 19e0 820F      		add r24,r18
 3675 19e2 931F      		adc r25,r19
 3676 19e4 DC01      		movw r26,r24
 3677 19e6 8D91      		ld r24,X+
 3678 19e8 9C91      		ld r25,X
 3679 19ea 092E      		mov __tmp_reg__,r25
 3680 19ec 000C      		lsl r0
 3681 19ee AA0B      		sbc r26,r26
 3682 19f0 BB0B      		sbc r27,r27
 3683 19f2 BC01      		movw r22,r24
 3684 19f4 CD01      		movw r24,r26
 3685 19f6 0E94 0000 		call __floatsisf
 3686 19fa 2B01      		movw r4,r22
 3687 19fc 3C01      		movw r6,r24
 3688 19fe CE01      		movw r24,r28
 3689 1a00 8D5B      		subi r24,-67
 3690 1a02 9F4F      		sbci r25,-1
 3691 1a04 FC01      		movw r30,r24
 3692 1a06 2081      		ld r18,Z
 3693 1a08 3181      		ldd r19,Z+1
 3694 1a0a 4281      		ldd r20,Z+2
 3695 1a0c 5381      		ldd r21,Z+3
 3696 1a0e C301      		movw r24,r6
 3697 1a10 B201      		movw r22,r4
 3698 1a12 0E94 0000 		call __mulsf3
 3699 1a16 DC01      		movw r26,r24
 3700 1a18 CB01      		movw r24,r22
 3701 1a1a 9C01      		movw r18,r24
 3702 1a1c AD01      		movw r20,r26
 3703 1a1e C501      		movw r24,r10
 3704 1a20 B401      		movw r22,r8
 3705 1a22 0E94 0000 		call __divsf3
 3706 1a26 DC01      		movw r26,r24
 3707 1a28 CB01      		movw r24,r22
 3708 1a2a 4C01      		movw r8,r24
 3709 1a2c 5D01      		movw r10,r26
 279:lp_solve_5.5/lp_scale.c ****                              ColScalem2[col] * ekekm1 / qkqkm1);
 3710               		.loc 1 279 0 discriminator 3
 3711 1a2e CE01      		movw r24,r28
 3712 1a30 835B      		subi r24,-77
 3713 1a32 9F4F      		sbci r25,-1
 3714 1a34 DC01      		movw r26,r24
 3715 1a36 2D91      		ld r18,X+
 3716 1a38 3C91      		ld r19,X
 3717 1a3a 8D81      		ldd r24,Y+5
 3718 1a3c 9E81      		ldd r25,Y+6
 3719 1a3e 880F      		lsl r24
 3720 1a40 991F      		rol r25
 3721 1a42 880F      		lsl r24
 3722 1a44 991F      		rol r25
 3723 1a46 820F      		add r24,r18
 3724 1a48 931F      		adc r25,r19
 3725 1a4a FC01      		movw r30,r24
 3726 1a4c 8081      		ld r24,Z
 3727 1a4e 9181      		ldd r25,Z+1
 3728 1a50 A281      		ldd r26,Z+2
 3729 1a52 B381      		ldd r27,Z+3
 3730 1a54 9E01      		movw r18,r28
 3731 1a56 295B      		subi r18,-71
 3732 1a58 3F4F      		sbci r19,-1
 3733 1a5a F901      		movw r30,r18
 3734 1a5c 2081      		ld r18,Z
 3735 1a5e 3181      		ldd r19,Z+1
 3736 1a60 4281      		ldd r20,Z+2
 3737 1a62 5381      		ldd r21,Z+3
 3738 1a64 BC01      		movw r22,r24
 3739 1a66 CD01      		movw r24,r26
 3740 1a68 0E94 0000 		call __mulsf3
 3741 1a6c DC01      		movw r26,r24
 3742 1a6e CB01      		movw r24,r22
 3743 1a70 2C01      		movw r4,r24
 3744 1a72 3D01      		movw r6,r26
 3745 1a74 CE01      		movw r24,r28
 3746 1a76 8D5B      		subi r24,-67
 3747 1a78 9F4F      		sbci r25,-1
 3748 1a7a DC01      		movw r26,r24
 3749 1a7c 2D91      		ld r18,X+
 3750 1a7e 3D91      		ld r19,X+
 3751 1a80 4D91      		ld r20,X+
 3752 1a82 5C91      		ld r21,X
 3753 1a84 C301      		movw r24,r6
 3754 1a86 B201      		movw r22,r4
 3755 1a88 0E94 0000 		call __divsf3
 3756 1a8c DC01      		movw r26,r24
 3757 1a8e CB01      		movw r24,r22
 278:lp_solve_5.5/lp_scale.c ****           FColScale[col] += (residual_even[col] / ((REAL) ColCount[col] * qkqkm1) -
 3758               		.loc 1 278 0 discriminator 3
 3759 1a90 9C01      		movw r18,r24
 3760 1a92 AD01      		movw r20,r26
 3761 1a94 C501      		movw r24,r10
 3762 1a96 B401      		movw r22,r8
 3763 1a98 0E94 0000 		call __subsf3
 3764 1a9c DC01      		movw r26,r24
 3765 1a9e CB01      		movw r24,r22
 3766 1aa0 9C01      		movw r18,r24
 3767 1aa2 AD01      		movw r20,r26
 3768 1aa4 C701      		movw r24,r14
 3769 1aa6 B601      		movw r22,r12
 3770 1aa8 0E94 0000 		call __addsf3
 3771 1aac DC01      		movw r26,r24
 3772 1aae CB01      		movw r24,r22
 3773 1ab0 F801      		movw r30,r16
 3774 1ab2 8083      		st Z,r24
 3775 1ab4 9183      		std Z+1,r25
 3776 1ab6 A283      		std Z+2,r26
 3777 1ab8 B383      		std Z+3,r27
 277:lp_solve_5.5/lp_scale.c ****         for(col = 1; col <= colMax; col++)
 3778               		.loc 1 277 0 discriminator 3
 3779 1aba 8D81      		ldd r24,Y+5
 3780 1abc 9E81      		ldd r25,Y+6
 3781 1abe 0196      		adiw r24,1
 3782 1ac0 9E83      		std Y+6,r25
 3783 1ac2 8D83      		std Y+5,r24
 3784               	.L95:
 277:lp_solve_5.5/lp_scale.c ****         for(col = 1; col <= colMax; col++)
 3785               		.loc 1 277 0 is_stmt 0 discriminator 1
 3786 1ac4 2D81      		ldd r18,Y+5
 3787 1ac6 3E81      		ldd r19,Y+6
 3788 1ac8 8FA5      		ldd r24,Y+47
 3789 1aca 98A9      		ldd r25,Y+48
 3790 1acc 8217      		cp r24,r18
 3791 1ace 9307      		cpc r25,r19
 3792 1ad0 04F0      		brlt .+2
 3793 1ad2 00C0      		rjmp .L96
 3794               	.L82:
 280:lp_solve_5.5/lp_scale.c ****       }
 281:lp_solve_5.5/lp_scale.c ****     }
 282:lp_solve_5.5/lp_scale.c **** 
 283:lp_solve_5.5/lp_scale.c ****     /* update residual and sk (pass + 1) */
 284:lp_solve_5.5/lp_scale.c ****     if((Result % 2) == 0) { /* even */
 3795               		.loc 1 284 0 is_stmt 1
 3796 1ad4 8BA1      		ldd r24,Y+35
 3797 1ad6 9CA1      		ldd r25,Y+36
 3798 1ad8 8170      		andi r24,1
 3799 1ada 9927      		clr r25
 3800 1adc 892B      		or r24,r25
 3801 1ade 01F0      		breq .+2
 3802 1ae0 00C0      		rjmp .L97
 285:lp_solve_5.5/lp_scale.c ****        /* residual */
 286:lp_solve_5.5/lp_scale.c ****       for(row = 0; row <= lp->rows; row++)
 3803               		.loc 1 286 0
 3804 1ae2 1C82      		std Y+4,__zero_reg__
 3805 1ae4 1B82      		std Y+3,__zero_reg__
 3806 1ae6 00C0      		rjmp .L98
 3807               	.L99:
 287:lp_solve_5.5/lp_scale.c ****         residual_odd[row] *= ek;
 3808               		.loc 1 287 0 discriminator 3
 3809 1ae8 CE01      		movw r24,r28
 3810 1aea 8B5A      		subi r24,-85
 3811 1aec 9F4F      		sbci r25,-1
 3812 1aee DC01      		movw r26,r24
 3813 1af0 2D91      		ld r18,X+
 3814 1af2 3C91      		ld r19,X
 3815 1af4 8B81      		ldd r24,Y+3
 3816 1af6 9C81      		ldd r25,Y+4
 3817 1af8 880F      		lsl r24
 3818 1afa 991F      		rol r25
 3819 1afc 880F      		lsl r24
 3820 1afe 991F      		rol r25
 3821 1b00 8901      		movw r16,r18
 3822 1b02 080F      		add r16,r24
 3823 1b04 191F      		adc r17,r25
 3824 1b06 CE01      		movw r24,r28
 3825 1b08 8B5A      		subi r24,-85
 3826 1b0a 9F4F      		sbci r25,-1
 3827 1b0c FC01      		movw r30,r24
 3828 1b0e 2081      		ld r18,Z
 3829 1b10 3181      		ldd r19,Z+1
 3830 1b12 8B81      		ldd r24,Y+3
 3831 1b14 9C81      		ldd r25,Y+4
 3832 1b16 880F      		lsl r24
 3833 1b18 991F      		rol r25
 3834 1b1a 880F      		lsl r24
 3835 1b1c 991F      		rol r25
 3836 1b1e 820F      		add r24,r18
 3837 1b20 931F      		adc r25,r19
 3838 1b22 FC01      		movw r30,r24
 3839 1b24 8081      		ld r24,Z
 3840 1b26 9181      		ldd r25,Z+1
 3841 1b28 A281      		ldd r26,Z+2
 3842 1b2a B381      		ldd r27,Z+3
 3843 1b2c 2F85      		ldd r18,Y+15
 3844 1b2e 3889      		ldd r19,Y+16
 3845 1b30 4989      		ldd r20,Y+17
 3846 1b32 5A89      		ldd r21,Y+18
 3847 1b34 BC01      		movw r22,r24
 3848 1b36 CD01      		movw r24,r26
 3849 1b38 0E94 0000 		call __mulsf3
 3850 1b3c DC01      		movw r26,r24
 3851 1b3e CB01      		movw r24,r22
 3852 1b40 F801      		movw r30,r16
 3853 1b42 8083      		st Z,r24
 3854 1b44 9183      		std Z+1,r25
 3855 1b46 A283      		std Z+2,r26
 3856 1b48 B383      		std Z+3,r27
 286:lp_solve_5.5/lp_scale.c ****         residual_odd[row] *= ek;
 3857               		.loc 1 286 0 discriminator 3
 3858 1b4a 8B81      		ldd r24,Y+3
 3859 1b4c 9C81      		ldd r25,Y+4
 3860 1b4e 0196      		adiw r24,1
 3861 1b50 9C83      		std Y+4,r25
 3862 1b52 8B83      		std Y+3,r24
 3863               	.L98:
 286:lp_solve_5.5/lp_scale.c ****         residual_odd[row] *= ek;
 3864               		.loc 1 286 0 is_stmt 0 discriminator 1
 3865 1b54 CE01      		movw r24,r28
 3866 1b56 855A      		subi r24,-91
 3867 1b58 9F4F      		sbci r25,-1
 3868 1b5a DC01      		movw r26,r24
 3869 1b5c 8D91      		ld r24,X+
 3870 1b5e 9C91      		ld r25,X
 3871 1b60 8651      		subi r24,22
 3872 1b62 9E4F      		sbci r25,-2
 3873 1b64 FC01      		movw r30,r24
 3874 1b66 2081      		ld r18,Z
 3875 1b68 3181      		ldd r19,Z+1
 3876 1b6a 8B81      		ldd r24,Y+3
 3877 1b6c 9C81      		ldd r25,Y+4
 3878 1b6e 2817      		cp r18,r24
 3879 1b70 3907      		cpc r19,r25
 3880 1b72 04F0      		brlt .+2
 3881 1b74 00C0      		rjmp .L99
 288:lp_solve_5.5/lp_scale.c **** 
 289:lp_solve_5.5/lp_scale.c ****       for(i = 1; i <= colMax; i++)
 3882               		.loc 1 289 0 is_stmt 1
 3883 1b76 81E0      		ldi r24,lo8(1)
 3884 1b78 90E0      		ldi r25,0
 3885 1b7a 9A83      		std Y+2,r25
 3886 1b7c 8983      		std Y+1,r24
 3887 1b7e 00C0      		rjmp .L100
 3888               	.L103:
 290:lp_solve_5.5/lp_scale.c ****         if(lp->orig_obj[i] != 0)
 3889               		.loc 1 290 0
 3890 1b80 CE01      		movw r24,r28
 3891 1b82 855A      		subi r24,-91
 3892 1b84 9F4F      		sbci r25,-1
 3893 1b86 DC01      		movw r26,r24
 3894 1b88 8D91      		ld r24,X+
 3895 1b8a 9C91      		ld r25,X
 3896 1b8c 845D      		subi r24,-44
 3897 1b8e 9D4F      		sbci r25,-3
 3898 1b90 FC01      		movw r30,r24
 3899 1b92 2081      		ld r18,Z
 3900 1b94 3181      		ldd r19,Z+1
 3901 1b96 8981      		ldd r24,Y+1
 3902 1b98 9A81      		ldd r25,Y+2
 3903 1b9a 880F      		lsl r24
 3904 1b9c 991F      		rol r25
 3905 1b9e 880F      		lsl r24
 3906 1ba0 991F      		rol r25
 3907 1ba2 820F      		add r24,r18
 3908 1ba4 931F      		adc r25,r19
 3909 1ba6 FC01      		movw r30,r24
 3910 1ba8 8081      		ld r24,Z
 3911 1baa 9181      		ldd r25,Z+1
 3912 1bac A281      		ldd r26,Z+2
 3913 1bae B381      		ldd r27,Z+3
 3914 1bb0 20E0      		ldi r18,0
 3915 1bb2 30E0      		ldi r19,0
 3916 1bb4 A901      		movw r20,r18
 3917 1bb6 BC01      		movw r22,r24
 3918 1bb8 CD01      		movw r24,r26
 3919 1bba 0E94 0000 		call __nesf2
 3920 1bbe 8823      		tst r24
 3921 1bc0 01F4      		brne .+2
 3922 1bc2 00C0      		rjmp .L101
 291:lp_solve_5.5/lp_scale.c ****           residual_odd[0] += (residual_even[i] / (REAL) ColCount[i]);
 3923               		.loc 1 291 0
 3924 1bc4 CE01      		movw r24,r28
 3925 1bc6 8B5A      		subi r24,-85
 3926 1bc8 9F4F      		sbci r25,-1
 3927 1bca DC01      		movw r26,r24
 3928 1bcc 0D91      		ld r16,X+
 3929 1bce 1C91      		ld r17,X
 3930 1bd0 CE01      		movw r24,r28
 3931 1bd2 8B5A      		subi r24,-85
 3932 1bd4 9F4F      		sbci r25,-1
 3933 1bd6 FC01      		movw r30,r24
 3934 1bd8 8081      		ld r24,Z
 3935 1bda 9181      		ldd r25,Z+1
 3936 1bdc DC01      		movw r26,r24
 3937 1bde CD90      		ld r12,X+
 3938 1be0 DD90      		ld r13,X+
 3939 1be2 ED90      		ld r14,X+
 3940 1be4 FC90      		ld r15,X
 3941 1be6 CE01      		movw r24,r28
 3942 1be8 8D5A      		subi r24,-83
 3943 1bea 9F4F      		sbci r25,-1
 3944 1bec FC01      		movw r30,r24
 3945 1bee 2081      		ld r18,Z
 3946 1bf0 3181      		ldd r19,Z+1
 3947 1bf2 8981      		ldd r24,Y+1
 3948 1bf4 9A81      		ldd r25,Y+2
 3949 1bf6 880F      		lsl r24
 3950 1bf8 991F      		rol r25
 3951 1bfa 880F      		lsl r24
 3952 1bfc 991F      		rol r25
 3953 1bfe 820F      		add r24,r18
 3954 1c00 931F      		adc r25,r19
 3955 1c02 DC01      		movw r26,r24
 3956 1c04 8D90      		ld r8,X+
 3957 1c06 9D90      		ld r9,X+
 3958 1c08 AD90      		ld r10,X+
 3959 1c0a BC90      		ld r11,X
 3960 1c0c CE01      		movw r24,r28
 3961 1c0e 875A      		subi r24,-89
 3962 1c10 9F4F      		sbci r25,-1
 3963 1c12 FC01      		movw r30,r24
 3964 1c14 2081      		ld r18,Z
 3965 1c16 3181      		ldd r19,Z+1
 3966 1c18 8981      		ldd r24,Y+1
 3967 1c1a 9A81      		ldd r25,Y+2
 3968 1c1c 880F      		lsl r24
 3969 1c1e 991F      		rol r25
 3970 1c20 820F      		add r24,r18
 3971 1c22 931F      		adc r25,r19
 3972 1c24 DC01      		movw r26,r24
 3973 1c26 8D91      		ld r24,X+
 3974 1c28 9C91      		ld r25,X
 3975 1c2a 092E      		mov __tmp_reg__,r25
 3976 1c2c 000C      		lsl r0
 3977 1c2e AA0B      		sbc r26,r26
 3978 1c30 BB0B      		sbc r27,r27
 3979 1c32 BC01      		movw r22,r24
 3980 1c34 CD01      		movw r24,r26
 3981 1c36 0E94 0000 		call __floatsisf
 3982 1c3a DC01      		movw r26,r24
 3983 1c3c CB01      		movw r24,r22
 3984 1c3e 9C01      		movw r18,r24
 3985 1c40 AD01      		movw r20,r26
 3986 1c42 C501      		movw r24,r10
 3987 1c44 B401      		movw r22,r8
 3988 1c46 0E94 0000 		call __divsf3
 3989 1c4a DC01      		movw r26,r24
 3990 1c4c CB01      		movw r24,r22
 3991 1c4e 9C01      		movw r18,r24
 3992 1c50 AD01      		movw r20,r26
 3993 1c52 C701      		movw r24,r14
 3994 1c54 B601      		movw r22,r12
 3995 1c56 0E94 0000 		call __addsf3
 3996 1c5a DC01      		movw r26,r24
 3997 1c5c CB01      		movw r24,r22
 3998 1c5e F801      		movw r30,r16
 3999 1c60 8083      		st Z,r24
 4000 1c62 9183      		std Z+1,r25
 4001 1c64 A283      		std Z+2,r26
 4002 1c66 B383      		std Z+3,r27
 4003               	.L101:
 289:lp_solve_5.5/lp_scale.c ****         if(lp->orig_obj[i] != 0)
 4004               		.loc 1 289 0 discriminator 2
 4005 1c68 8981      		ldd r24,Y+1
 4006 1c6a 9A81      		ldd r25,Y+2
 4007 1c6c 0196      		adiw r24,1
 4008 1c6e 9A83      		std Y+2,r25
 4009 1c70 8983      		std Y+1,r24
 4010               	.L100:
 289:lp_solve_5.5/lp_scale.c ****         if(lp->orig_obj[i] != 0)
 4011               		.loc 1 289 0 is_stmt 0 discriminator 1
 4012 1c72 2981      		ldd r18,Y+1
 4013 1c74 3A81      		ldd r19,Y+2
 4014 1c76 8FA5      		ldd r24,Y+47
 4015 1c78 98A9      		ldd r25,Y+48
 4016 1c7a 8217      		cp r24,r18
 4017 1c7c 9307      		cpc r25,r19
 4018 1c7e 04F0      		brlt .+2
 4019 1c80 00C0      		rjmp .L103
 292:lp_solve_5.5/lp_scale.c **** 
 293:lp_solve_5.5/lp_scale.c ****       rownr = &(COL_MAT_ROWNR(0));
 4020               		.loc 1 293 0 is_stmt 1
 4021 1c82 8BA5      		ldd r24,Y+43
 4022 1c84 9CA5      		ldd r25,Y+44
 4023 1c86 DC01      		movw r26,r24
 4024 1c88 1E96      		adiw r26,14
 4025 1c8a 8D91      		ld r24,X+
 4026 1c8c 9C91      		ld r25,X
 4027 1c8e 1F97      		sbiw r26,14+1
 4028 1c90 98A7      		std Y+40,r25
 4029 1c92 8FA3      		std Y+39,r24
 294:lp_solve_5.5/lp_scale.c ****       colnr = &(COL_MAT_COLNR(0));
 4030               		.loc 1 294 0
 4031 1c94 8BA5      		ldd r24,Y+43
 4032 1c96 9CA5      		ldd r25,Y+44
 4033 1c98 FC01      		movw r30,r24
 4034 1c9a 8485      		ldd r24,Z+12
 4035 1c9c 9585      		ldd r25,Z+13
 4036 1c9e 9AA7      		std Y+42,r25
 4037 1ca0 89A7      		std Y+41,r24
 295:lp_solve_5.5/lp_scale.c ****       for(i = 0; i < nz;
 4038               		.loc 1 295 0
 4039 1ca2 1A82      		std Y+2,__zero_reg__
 4040 1ca4 1982      		std Y+1,__zero_reg__
 4041 1ca6 00C0      		rjmp .L104
 4042               	.L105:
 296:lp_solve_5.5/lp_scale.c ****           i++, rownr += matRowColStep, colnr += matRowColStep) {
 297:lp_solve_5.5/lp_scale.c ****         residual_odd[*rownr] += (residual_even[*colnr] / (REAL) ColCount[*colnr]);
 4043               		.loc 1 297 0
 4044 1ca8 CE01      		movw r24,r28
 4045 1caa 8B5A      		subi r24,-85
 4046 1cac 9F4F      		sbci r25,-1
 4047 1cae DC01      		movw r26,r24
 4048 1cb0 2D91      		ld r18,X+
 4049 1cb2 3C91      		ld r19,X
 4050 1cb4 8FA1      		ldd r24,Y+39
 4051 1cb6 98A5      		ldd r25,Y+40
 4052 1cb8 FC01      		movw r30,r24
 4053 1cba 8081      		ld r24,Z
 4054 1cbc 9181      		ldd r25,Z+1
 4055 1cbe 880F      		lsl r24
 4056 1cc0 991F      		rol r25
 4057 1cc2 880F      		lsl r24
 4058 1cc4 991F      		rol r25
 4059 1cc6 8901      		movw r16,r18
 4060 1cc8 080F      		add r16,r24
 4061 1cca 191F      		adc r17,r25
 4062 1ccc CE01      		movw r24,r28
 4063 1cce 8B5A      		subi r24,-85
 4064 1cd0 9F4F      		sbci r25,-1
 4065 1cd2 DC01      		movw r26,r24
 4066 1cd4 2D91      		ld r18,X+
 4067 1cd6 3C91      		ld r19,X
 4068 1cd8 8FA1      		ldd r24,Y+39
 4069 1cda 98A5      		ldd r25,Y+40
 4070 1cdc FC01      		movw r30,r24
 4071 1cde 8081      		ld r24,Z
 4072 1ce0 9181      		ldd r25,Z+1
 4073 1ce2 880F      		lsl r24
 4074 1ce4 991F      		rol r25
 4075 1ce6 880F      		lsl r24
 4076 1ce8 991F      		rol r25
 4077 1cea 820F      		add r24,r18
 4078 1cec 931F      		adc r25,r19
 4079 1cee DC01      		movw r26,r24
 4080 1cf0 CD90      		ld r12,X+
 4081 1cf2 DD90      		ld r13,X+
 4082 1cf4 ED90      		ld r14,X+
 4083 1cf6 FC90      		ld r15,X
 4084 1cf8 CE01      		movw r24,r28
 4085 1cfa 8D5A      		subi r24,-83
 4086 1cfc 9F4F      		sbci r25,-1
 4087 1cfe FC01      		movw r30,r24
 4088 1d00 2081      		ld r18,Z
 4089 1d02 3181      		ldd r19,Z+1
 4090 1d04 89A5      		ldd r24,Y+41
 4091 1d06 9AA5      		ldd r25,Y+42
 4092 1d08 DC01      		movw r26,r24
 4093 1d0a 8D91      		ld r24,X+
 4094 1d0c 9C91      		ld r25,X
 4095 1d0e 880F      		lsl r24
 4096 1d10 991F      		rol r25
 4097 1d12 880F      		lsl r24
 4098 1d14 991F      		rol r25
 4099 1d16 820F      		add r24,r18
 4100 1d18 931F      		adc r25,r19
 4101 1d1a FC01      		movw r30,r24
 4102 1d1c 8080      		ld r8,Z
 4103 1d1e 9180      		ldd r9,Z+1
 4104 1d20 A280      		ldd r10,Z+2
 4105 1d22 B380      		ldd r11,Z+3
 4106 1d24 CE01      		movw r24,r28
 4107 1d26 875A      		subi r24,-89
 4108 1d28 9F4F      		sbci r25,-1
 4109 1d2a DC01      		movw r26,r24
 4110 1d2c 2D91      		ld r18,X+
 4111 1d2e 3C91      		ld r19,X
 4112 1d30 89A5      		ldd r24,Y+41
 4113 1d32 9AA5      		ldd r25,Y+42
 4114 1d34 FC01      		movw r30,r24
 4115 1d36 8081      		ld r24,Z
 4116 1d38 9181      		ldd r25,Z+1
 4117 1d3a 880F      		lsl r24
 4118 1d3c 991F      		rol r25
 4119 1d3e 820F      		add r24,r18
 4120 1d40 931F      		adc r25,r19
 4121 1d42 DC01      		movw r26,r24
 4122 1d44 8D91      		ld r24,X+
 4123 1d46 9C91      		ld r25,X
 4124 1d48 092E      		mov __tmp_reg__,r25
 4125 1d4a 000C      		lsl r0
 4126 1d4c AA0B      		sbc r26,r26
 4127 1d4e BB0B      		sbc r27,r27
 4128 1d50 BC01      		movw r22,r24
 4129 1d52 CD01      		movw r24,r26
 4130 1d54 0E94 0000 		call __floatsisf
 4131 1d58 DC01      		movw r26,r24
 4132 1d5a CB01      		movw r24,r22
 4133 1d5c 9C01      		movw r18,r24
 4134 1d5e AD01      		movw r20,r26
 4135 1d60 C501      		movw r24,r10
 4136 1d62 B401      		movw r22,r8
 4137 1d64 0E94 0000 		call __divsf3
 4138 1d68 DC01      		movw r26,r24
 4139 1d6a CB01      		movw r24,r22
 4140 1d6c 9C01      		movw r18,r24
 4141 1d6e AD01      		movw r20,r26
 4142 1d70 C701      		movw r24,r14
 4143 1d72 B601      		movw r22,r12
 4144 1d74 0E94 0000 		call __addsf3
 4145 1d78 DC01      		movw r26,r24
 4146 1d7a CB01      		movw r24,r22
 4147 1d7c F801      		movw r30,r16
 4148 1d7e 8083      		st Z,r24
 4149 1d80 9183      		std Z+1,r25
 4150 1d82 A283      		std Z+2,r26
 4151 1d84 B383      		std Z+3,r27
 296:lp_solve_5.5/lp_scale.c ****           i++, rownr += matRowColStep, colnr += matRowColStep) {
 4152               		.loc 1 296 0
 4153 1d86 8981      		ldd r24,Y+1
 4154 1d88 9A81      		ldd r25,Y+2
 4155 1d8a 0196      		adiw r24,1
 4156 1d8c 9A83      		std Y+2,r25
 4157 1d8e 8983      		std Y+1,r24
 4158 1d90 8FA1      		ldd r24,Y+39
 4159 1d92 98A5      		ldd r25,Y+40
 4160 1d94 0296      		adiw r24,2
 4161 1d96 98A7      		std Y+40,r25
 4162 1d98 8FA3      		std Y+39,r24
 4163 1d9a 89A5      		ldd r24,Y+41
 4164 1d9c 9AA5      		ldd r25,Y+42
 4165 1d9e 0296      		adiw r24,2
 4166 1da0 9AA7      		std Y+42,r25
 4167 1da2 89A7      		std Y+41,r24
 4168               	.L104:
 295:lp_solve_5.5/lp_scale.c ****       for(i = 0; i < nz;
 4169               		.loc 1 295 0 discriminator 1
 4170 1da4 2981      		ldd r18,Y+1
 4171 1da6 3A81      		ldd r19,Y+2
 4172 1da8 8DA5      		ldd r24,Y+45
 4173 1daa 9EA5      		ldd r25,Y+46
 4174 1dac 2817      		cp r18,r24
 4175 1dae 3907      		cpc r19,r25
 4176 1db0 04F4      		brge .+2
 4177 1db2 00C0      		rjmp .L105
 298:lp_solve_5.5/lp_scale.c ****       }
 299:lp_solve_5.5/lp_scale.c ****       for(row = 0; row <= lp->rows; row++)
 4178               		.loc 1 299 0
 4179 1db4 1C82      		std Y+4,__zero_reg__
 4180 1db6 1B82      		std Y+3,__zero_reg__
 4181 1db8 00C0      		rjmp .L106
 4182               	.L107:
 300:lp_solve_5.5/lp_scale.c ****         residual_odd[row] *= (-1 / qk);
 4183               		.loc 1 300 0 discriminator 3
 4184 1dba CE01      		movw r24,r28
 4185 1dbc 8B5A      		subi r24,-85
 4186 1dbe 9F4F      		sbci r25,-1
 4187 1dc0 DC01      		movw r26,r24
 4188 1dc2 2D91      		ld r18,X+
 4189 1dc4 3C91      		ld r19,X
 4190 1dc6 8B81      		ldd r24,Y+3
 4191 1dc8 9C81      		ldd r25,Y+4
 4192 1dca 880F      		lsl r24
 4193 1dcc 991F      		rol r25
 4194 1dce 880F      		lsl r24
 4195 1dd0 991F      		rol r25
 4196 1dd2 8901      		movw r16,r18
 4197 1dd4 080F      		add r16,r24
 4198 1dd6 191F      		adc r17,r25
 4199 1dd8 CE01      		movw r24,r28
 4200 1dda 8B5A      		subi r24,-85
 4201 1ddc 9F4F      		sbci r25,-1
 4202 1dde FC01      		movw r30,r24
 4203 1de0 2081      		ld r18,Z
 4204 1de2 3181      		ldd r19,Z+1
 4205 1de4 8B81      		ldd r24,Y+3
 4206 1de6 9C81      		ldd r25,Y+4
 4207 1de8 880F      		lsl r24
 4208 1dea 991F      		rol r25
 4209 1dec 880F      		lsl r24
 4210 1dee 991F      		rol r25
 4211 1df0 820F      		add r24,r18
 4212 1df2 931F      		adc r25,r19
 4213 1df4 DC01      		movw r26,r24
 4214 1df6 CD90      		ld r12,X+
 4215 1df8 DD90      		ld r13,X+
 4216 1dfa ED90      		ld r14,X+
 4217 1dfc FC90      		ld r15,X
 4218 1dfe 2B85      		ldd r18,Y+11
 4219 1e00 3C85      		ldd r19,Y+12
 4220 1e02 4D85      		ldd r20,Y+13
 4221 1e04 5E85      		ldd r21,Y+14
 4222 1e06 60E0      		ldi r22,0
 4223 1e08 70E0      		ldi r23,0
 4224 1e0a 80E8      		ldi r24,lo8(-128)
 4225 1e0c 9FEB      		ldi r25,lo8(-65)
 4226 1e0e 0E94 0000 		call __divsf3
 4227 1e12 DC01      		movw r26,r24
 4228 1e14 CB01      		movw r24,r22
 4229 1e16 9C01      		movw r18,r24
 4230 1e18 AD01      		movw r20,r26
 4231 1e1a C701      		movw r24,r14
 4232 1e1c B601      		movw r22,r12
 4233 1e1e 0E94 0000 		call __mulsf3
 4234 1e22 DC01      		movw r26,r24
 4235 1e24 CB01      		movw r24,r22
 4236 1e26 F801      		movw r30,r16
 4237 1e28 8083      		st Z,r24
 4238 1e2a 9183      		std Z+1,r25
 4239 1e2c A283      		std Z+2,r26
 4240 1e2e B383      		std Z+3,r27
 299:lp_solve_5.5/lp_scale.c ****         residual_odd[row] *= (-1 / qk);
 4241               		.loc 1 299 0 discriminator 3
 4242 1e30 8B81      		ldd r24,Y+3
 4243 1e32 9C81      		ldd r25,Y+4
 4244 1e34 0196      		adiw r24,1
 4245 1e36 9C83      		std Y+4,r25
 4246 1e38 8B83      		std Y+3,r24
 4247               	.L106:
 299:lp_solve_5.5/lp_scale.c ****         residual_odd[row] *= (-1 / qk);
 4248               		.loc 1 299 0 is_stmt 0 discriminator 1
 4249 1e3a CE01      		movw r24,r28
 4250 1e3c 855A      		subi r24,-91
 4251 1e3e 9F4F      		sbci r25,-1
 4252 1e40 DC01      		movw r26,r24
 4253 1e42 8D91      		ld r24,X+
 4254 1e44 9C91      		ld r25,X
 4255 1e46 8651      		subi r24,22
 4256 1e48 9E4F      		sbci r25,-2
 4257 1e4a FC01      		movw r30,r24
 4258 1e4c 2081      		ld r18,Z
 4259 1e4e 3181      		ldd r19,Z+1
 4260 1e50 8B81      		ldd r24,Y+3
 4261 1e52 9C81      		ldd r25,Y+4
 4262 1e54 2817      		cp r18,r24
 4263 1e56 3907      		cpc r19,r25
 4264 1e58 04F0      		brlt .+2
 4265 1e5a 00C0      		rjmp .L107
 301:lp_solve_5.5/lp_scale.c **** 
 302:lp_solve_5.5/lp_scale.c ****       /* sk */
 303:lp_solve_5.5/lp_scale.c ****       skm1 = sk;
 4266               		.loc 1 303 0 is_stmt 1
 4267 1e5c 8F81      		ldd r24,Y+7
 4268 1e5e 9885      		ldd r25,Y+8
 4269 1e60 A985      		ldd r26,Y+9
 4270 1e62 BA85      		ldd r27,Y+10
 4271 1e64 8B8B      		std Y+19,r24
 4272 1e66 9C8B      		std Y+20,r25
 4273 1e68 AD8B      		std Y+21,r26
 4274 1e6a BE8B      		std Y+22,r27
 304:lp_solve_5.5/lp_scale.c ****       sk = 0;
 4275               		.loc 1 304 0
 4276 1e6c 1F82      		std Y+7,__zero_reg__
 4277 1e6e 1886      		std Y+8,__zero_reg__
 4278 1e70 1986      		std Y+9,__zero_reg__
 4279 1e72 1A86      		std Y+10,__zero_reg__
 305:lp_solve_5.5/lp_scale.c ****       for(row = 0; row <= lp->rows; row++)
 4280               		.loc 1 305 0
 4281 1e74 1C82      		std Y+4,__zero_reg__
 4282 1e76 1B82      		std Y+3,__zero_reg__
 4283 1e78 00C0      		rjmp .L108
 4284               	.L109:
 306:lp_solve_5.5/lp_scale.c ****         sk += (residual_odd[row]*residual_odd[row]) / (REAL) RowCount[row];
 4285               		.loc 1 306 0 discriminator 3
 4286 1e7a CE01      		movw r24,r28
 4287 1e7c 8B5A      		subi r24,-85
 4288 1e7e 9F4F      		sbci r25,-1
 4289 1e80 DC01      		movw r26,r24
 4290 1e82 2D91      		ld r18,X+
 4291 1e84 3C91      		ld r19,X
 4292 1e86 8B81      		ldd r24,Y+3
 4293 1e88 9C81      		ldd r25,Y+4
 4294 1e8a 880F      		lsl r24
 4295 1e8c 991F      		rol r25
 4296 1e8e 880F      		lsl r24
 4297 1e90 991F      		rol r25
 4298 1e92 820F      		add r24,r18
 4299 1e94 931F      		adc r25,r19
 4300 1e96 FC01      		movw r30,r24
 4301 1e98 8081      		ld r24,Z
 4302 1e9a 9181      		ldd r25,Z+1
 4303 1e9c A281      		ldd r26,Z+2
 4304 1e9e B381      		ldd r27,Z+3
 4305 1ea0 9E01      		movw r18,r28
 4306 1ea2 2B5A      		subi r18,-85
 4307 1ea4 3F4F      		sbci r19,-1
 4308 1ea6 F901      		movw r30,r18
 4309 1ea8 4081      		ld r20,Z
 4310 1eaa 5181      		ldd r21,Z+1
 4311 1eac 2B81      		ldd r18,Y+3
 4312 1eae 3C81      		ldd r19,Y+4
 4313 1eb0 220F      		lsl r18
 4314 1eb2 331F      		rol r19
 4315 1eb4 220F      		lsl r18
 4316 1eb6 331F      		rol r19
 4317 1eb8 240F      		add r18,r20
 4318 1eba 351F      		adc r19,r21
 4319 1ebc F901      		movw r30,r18
 4320 1ebe 2081      		ld r18,Z
 4321 1ec0 3181      		ldd r19,Z+1
 4322 1ec2 4281      		ldd r20,Z+2
 4323 1ec4 5381      		ldd r21,Z+3
 4324 1ec6 BC01      		movw r22,r24
 4325 1ec8 CD01      		movw r24,r26
 4326 1eca 0E94 0000 		call __mulsf3
 4327 1ece DC01      		movw r26,r24
 4328 1ed0 CB01      		movw r24,r22
 4329 1ed2 6C01      		movw r12,r24
 4330 1ed4 7D01      		movw r14,r26
 4331 1ed6 CE01      		movw r24,r28
 4332 1ed8 895A      		subi r24,-87
 4333 1eda 9F4F      		sbci r25,-1
 4334 1edc DC01      		movw r26,r24
 4335 1ede 2D91      		ld r18,X+
 4336 1ee0 3C91      		ld r19,X
 4337 1ee2 8B81      		ldd r24,Y+3
 4338 1ee4 9C81      		ldd r25,Y+4
 4339 1ee6 880F      		lsl r24
 4340 1ee8 991F      		rol r25
 4341 1eea 820F      		add r24,r18
 4342 1eec 931F      		adc r25,r19
 4343 1eee FC01      		movw r30,r24
 4344 1ef0 8081      		ld r24,Z
 4345 1ef2 9181      		ldd r25,Z+1
 4346 1ef4 092E      		mov __tmp_reg__,r25
 4347 1ef6 000C      		lsl r0
 4348 1ef8 AA0B      		sbc r26,r26
 4349 1efa BB0B      		sbc r27,r27
 4350 1efc BC01      		movw r22,r24
 4351 1efe CD01      		movw r24,r26
 4352 1f00 0E94 0000 		call __floatsisf
 4353 1f04 DC01      		movw r26,r24
 4354 1f06 CB01      		movw r24,r22
 4355 1f08 9C01      		movw r18,r24
 4356 1f0a AD01      		movw r20,r26
 4357 1f0c C701      		movw r24,r14
 4358 1f0e B601      		movw r22,r12
 4359 1f10 0E94 0000 		call __divsf3
 4360 1f14 DC01      		movw r26,r24
 4361 1f16 CB01      		movw r24,r22
 4362 1f18 9C01      		movw r18,r24
 4363 1f1a AD01      		movw r20,r26
 4364 1f1c 6F81      		ldd r22,Y+7
 4365 1f1e 7885      		ldd r23,Y+8
 4366 1f20 8985      		ldd r24,Y+9
 4367 1f22 9A85      		ldd r25,Y+10
 4368 1f24 0E94 0000 		call __addsf3
 4369 1f28 DC01      		movw r26,r24
 4370 1f2a CB01      		movw r24,r22
 4371 1f2c 8F83      		std Y+7,r24
 4372 1f2e 9887      		std Y+8,r25
 4373 1f30 A987      		std Y+9,r26
 4374 1f32 BA87      		std Y+10,r27
 305:lp_solve_5.5/lp_scale.c ****       for(row = 0; row <= lp->rows; row++)
 4375               		.loc 1 305 0 discriminator 3
 4376 1f34 8B81      		ldd r24,Y+3
 4377 1f36 9C81      		ldd r25,Y+4
 4378 1f38 0196      		adiw r24,1
 4379 1f3a 9C83      		std Y+4,r25
 4380 1f3c 8B83      		std Y+3,r24
 4381               	.L108:
 305:lp_solve_5.5/lp_scale.c ****       for(row = 0; row <= lp->rows; row++)
 4382               		.loc 1 305 0 is_stmt 0 discriminator 1
 4383 1f3e CE01      		movw r24,r28
 4384 1f40 855A      		subi r24,-91
 4385 1f42 9F4F      		sbci r25,-1
 4386 1f44 DC01      		movw r26,r24
 4387 1f46 8D91      		ld r24,X+
 4388 1f48 9C91      		ld r25,X
 4389 1f4a 8651      		subi r24,22
 4390 1f4c 9E4F      		sbci r25,-2
 4391 1f4e FC01      		movw r30,r24
 4392 1f50 2081      		ld r18,Z
 4393 1f52 3181      		ldd r19,Z+1
 4394 1f54 8B81      		ldd r24,Y+3
 4395 1f56 9C81      		ldd r25,Y+4
 4396 1f58 2817      		cp r18,r24
 4397 1f5a 3907      		cpc r19,r25
 4398 1f5c 04F0      		brlt .+2
 4399 1f5e 00C0      		rjmp .L109
 4400 1f60 00C0      		rjmp .L110
 4401               	.L97:
 307:lp_solve_5.5/lp_scale.c ****     }
 308:lp_solve_5.5/lp_scale.c ****     else { /* odd */
 309:lp_solve_5.5/lp_scale.c ****       /* residual */
 310:lp_solve_5.5/lp_scale.c ****       for(col = 1; col <= colMax; col++)
 4402               		.loc 1 310 0 is_stmt 1
 4403 1f62 81E0      		ldi r24,lo8(1)
 4404 1f64 90E0      		ldi r25,0
 4405 1f66 9E83      		std Y+6,r25
 4406 1f68 8D83      		std Y+5,r24
 4407 1f6a 00C0      		rjmp .L111
 4408               	.L112:
 311:lp_solve_5.5/lp_scale.c ****         residual_even[col] *= ek;
 4409               		.loc 1 311 0 discriminator 3
 4410 1f6c CE01      		movw r24,r28
 4411 1f6e 8D5A      		subi r24,-83
 4412 1f70 9F4F      		sbci r25,-1
 4413 1f72 DC01      		movw r26,r24
 4414 1f74 2D91      		ld r18,X+
 4415 1f76 3C91      		ld r19,X
 4416 1f78 8D81      		ldd r24,Y+5
 4417 1f7a 9E81      		ldd r25,Y+6
 4418 1f7c 880F      		lsl r24
 4419 1f7e 991F      		rol r25
 4420 1f80 880F      		lsl r24
 4421 1f82 991F      		rol r25
 4422 1f84 8901      		movw r16,r18
 4423 1f86 080F      		add r16,r24
 4424 1f88 191F      		adc r17,r25
 4425 1f8a CE01      		movw r24,r28
 4426 1f8c 8D5A      		subi r24,-83
 4427 1f8e 9F4F      		sbci r25,-1
 4428 1f90 FC01      		movw r30,r24
 4429 1f92 2081      		ld r18,Z
 4430 1f94 3181      		ldd r19,Z+1
 4431 1f96 8D81      		ldd r24,Y+5
 4432 1f98 9E81      		ldd r25,Y+6
 4433 1f9a 880F      		lsl r24
 4434 1f9c 991F      		rol r25
 4435 1f9e 880F      		lsl r24
 4436 1fa0 991F      		rol r25
 4437 1fa2 820F      		add r24,r18
 4438 1fa4 931F      		adc r25,r19
 4439 1fa6 FC01      		movw r30,r24
 4440 1fa8 8081      		ld r24,Z
 4441 1faa 9181      		ldd r25,Z+1
 4442 1fac A281      		ldd r26,Z+2
 4443 1fae B381      		ldd r27,Z+3
 4444 1fb0 2F85      		ldd r18,Y+15
 4445 1fb2 3889      		ldd r19,Y+16
 4446 1fb4 4989      		ldd r20,Y+17
 4447 1fb6 5A89      		ldd r21,Y+18
 4448 1fb8 BC01      		movw r22,r24
 4449 1fba CD01      		movw r24,r26
 4450 1fbc 0E94 0000 		call __mulsf3
 4451 1fc0 DC01      		movw r26,r24
 4452 1fc2 CB01      		movw r24,r22
 4453 1fc4 F801      		movw r30,r16
 4454 1fc6 8083      		st Z,r24
 4455 1fc8 9183      		std Z+1,r25
 4456 1fca A283      		std Z+2,r26
 4457 1fcc B383      		std Z+3,r27
 310:lp_solve_5.5/lp_scale.c ****         residual_even[col] *= ek;
 4458               		.loc 1 310 0 discriminator 3
 4459 1fce 8D81      		ldd r24,Y+5
 4460 1fd0 9E81      		ldd r25,Y+6
 4461 1fd2 0196      		adiw r24,1
 4462 1fd4 9E83      		std Y+6,r25
 4463 1fd6 8D83      		std Y+5,r24
 4464               	.L111:
 310:lp_solve_5.5/lp_scale.c ****         residual_even[col] *= ek;
 4465               		.loc 1 310 0 is_stmt 0 discriminator 1
 4466 1fd8 2D81      		ldd r18,Y+5
 4467 1fda 3E81      		ldd r19,Y+6
 4468 1fdc 8FA5      		ldd r24,Y+47
 4469 1fde 98A9      		ldd r25,Y+48
 4470 1fe0 8217      		cp r24,r18
 4471 1fe2 9307      		cpc r25,r19
 4472 1fe4 04F4      		brge .L112
 312:lp_solve_5.5/lp_scale.c **** 
 313:lp_solve_5.5/lp_scale.c ****       for(i = 1; i <= colMax; i++)
 4473               		.loc 1 313 0 is_stmt 1
 4474 1fe6 81E0      		ldi r24,lo8(1)
 4475 1fe8 90E0      		ldi r25,0
 4476 1fea 9A83      		std Y+2,r25
 4477 1fec 8983      		std Y+1,r24
 4478 1fee 00C0      		rjmp .L113
 4479               	.L116:
 314:lp_solve_5.5/lp_scale.c ****         if(lp->orig_obj[i] != 0)
 4480               		.loc 1 314 0
 4481 1ff0 CE01      		movw r24,r28
 4482 1ff2 855A      		subi r24,-91
 4483 1ff4 9F4F      		sbci r25,-1
 4484 1ff6 DC01      		movw r26,r24
 4485 1ff8 8D91      		ld r24,X+
 4486 1ffa 9C91      		ld r25,X
 4487 1ffc 845D      		subi r24,-44
 4488 1ffe 9D4F      		sbci r25,-3
 4489 2000 FC01      		movw r30,r24
 4490 2002 2081      		ld r18,Z
 4491 2004 3181      		ldd r19,Z+1
 4492 2006 8981      		ldd r24,Y+1
 4493 2008 9A81      		ldd r25,Y+2
 4494 200a 880F      		lsl r24
 4495 200c 991F      		rol r25
 4496 200e 880F      		lsl r24
 4497 2010 991F      		rol r25
 4498 2012 820F      		add r24,r18
 4499 2014 931F      		adc r25,r19
 4500 2016 FC01      		movw r30,r24
 4501 2018 8081      		ld r24,Z
 4502 201a 9181      		ldd r25,Z+1
 4503 201c A281      		ldd r26,Z+2
 4504 201e B381      		ldd r27,Z+3
 4505 2020 20E0      		ldi r18,0
 4506 2022 30E0      		ldi r19,0
 4507 2024 A901      		movw r20,r18
 4508 2026 BC01      		movw r22,r24
 4509 2028 CD01      		movw r24,r26
 4510 202a 0E94 0000 		call __nesf2
 4511 202e 8823      		tst r24
 4512 2030 01F4      		brne .+2
 4513 2032 00C0      		rjmp .L114
 315:lp_solve_5.5/lp_scale.c ****           residual_even[i] += (residual_odd[0] / (REAL) RowCount[0]);
 4514               		.loc 1 315 0
 4515 2034 CE01      		movw r24,r28
 4516 2036 8D5A      		subi r24,-83
 4517 2038 9F4F      		sbci r25,-1
 4518 203a DC01      		movw r26,r24
 4519 203c 2D91      		ld r18,X+
 4520 203e 3C91      		ld r19,X
 4521 2040 8981      		ldd r24,Y+1
 4522 2042 9A81      		ldd r25,Y+2
 4523 2044 880F      		lsl r24
 4524 2046 991F      		rol r25
 4525 2048 880F      		lsl r24
 4526 204a 991F      		rol r25
 4527 204c 8901      		movw r16,r18
 4528 204e 080F      		add r16,r24
 4529 2050 191F      		adc r17,r25
 4530 2052 CE01      		movw r24,r28
 4531 2054 8D5A      		subi r24,-83
 4532 2056 9F4F      		sbci r25,-1
 4533 2058 FC01      		movw r30,r24
 4534 205a 2081      		ld r18,Z
 4535 205c 3181      		ldd r19,Z+1
 4536 205e 8981      		ldd r24,Y+1
 4537 2060 9A81      		ldd r25,Y+2
 4538 2062 880F      		lsl r24
 4539 2064 991F      		rol r25
 4540 2066 880F      		lsl r24
 4541 2068 991F      		rol r25
 4542 206a 820F      		add r24,r18
 4543 206c 931F      		adc r25,r19
 4544 206e DC01      		movw r26,r24
 4545 2070 CD90      		ld r12,X+
 4546 2072 DD90      		ld r13,X+
 4547 2074 ED90      		ld r14,X+
 4548 2076 FC90      		ld r15,X
 4549 2078 CE01      		movw r24,r28
 4550 207a 8B5A      		subi r24,-85
 4551 207c 9F4F      		sbci r25,-1
 4552 207e FC01      		movw r30,r24
 4553 2080 8081      		ld r24,Z
 4554 2082 9181      		ldd r25,Z+1
 4555 2084 DC01      		movw r26,r24
 4556 2086 8D90      		ld r8,X+
 4557 2088 9D90      		ld r9,X+
 4558 208a AD90      		ld r10,X+
 4559 208c BC90      		ld r11,X
 4560 208e CE01      		movw r24,r28
 4561 2090 895A      		subi r24,-87
 4562 2092 9F4F      		sbci r25,-1
 4563 2094 FC01      		movw r30,r24
 4564 2096 8081      		ld r24,Z
 4565 2098 9181      		ldd r25,Z+1
 4566 209a DC01      		movw r26,r24
 4567 209c 8D91      		ld r24,X+
 4568 209e 9C91      		ld r25,X
 4569 20a0 092E      		mov __tmp_reg__,r25
 4570 20a2 000C      		lsl r0
 4571 20a4 AA0B      		sbc r26,r26
 4572 20a6 BB0B      		sbc r27,r27
 4573 20a8 BC01      		movw r22,r24
 4574 20aa CD01      		movw r24,r26
 4575 20ac 0E94 0000 		call __floatsisf
 4576 20b0 DC01      		movw r26,r24
 4577 20b2 CB01      		movw r24,r22
 4578 20b4 9C01      		movw r18,r24
 4579 20b6 AD01      		movw r20,r26
 4580 20b8 C501      		movw r24,r10
 4581 20ba B401      		movw r22,r8
 4582 20bc 0E94 0000 		call __divsf3
 4583 20c0 DC01      		movw r26,r24
 4584 20c2 CB01      		movw r24,r22
 4585 20c4 9C01      		movw r18,r24
 4586 20c6 AD01      		movw r20,r26
 4587 20c8 C701      		movw r24,r14
 4588 20ca B601      		movw r22,r12
 4589 20cc 0E94 0000 		call __addsf3
 4590 20d0 DC01      		movw r26,r24
 4591 20d2 CB01      		movw r24,r22
 4592 20d4 F801      		movw r30,r16
 4593 20d6 8083      		st Z,r24
 4594 20d8 9183      		std Z+1,r25
 4595 20da A283      		std Z+2,r26
 4596 20dc B383      		std Z+3,r27
 4597               	.L114:
 313:lp_solve_5.5/lp_scale.c ****         if(lp->orig_obj[i] != 0)
 4598               		.loc 1 313 0 discriminator 2
 4599 20de 8981      		ldd r24,Y+1
 4600 20e0 9A81      		ldd r25,Y+2
 4601 20e2 0196      		adiw r24,1
 4602 20e4 9A83      		std Y+2,r25
 4603 20e6 8983      		std Y+1,r24
 4604               	.L113:
 313:lp_solve_5.5/lp_scale.c ****         if(lp->orig_obj[i] != 0)
 4605               		.loc 1 313 0 is_stmt 0 discriminator 1
 4606 20e8 2981      		ldd r18,Y+1
 4607 20ea 3A81      		ldd r19,Y+2
 4608 20ec 8FA5      		ldd r24,Y+47
 4609 20ee 98A9      		ldd r25,Y+48
 4610 20f0 8217      		cp r24,r18
 4611 20f2 9307      		cpc r25,r19
 4612 20f4 04F0      		brlt .+2
 4613 20f6 00C0      		rjmp .L116
 316:lp_solve_5.5/lp_scale.c **** 
 317:lp_solve_5.5/lp_scale.c ****       rownr = &(COL_MAT_ROWNR(0));
 4614               		.loc 1 317 0 is_stmt 1
 4615 20f8 8BA5      		ldd r24,Y+43
 4616 20fa 9CA5      		ldd r25,Y+44
 4617 20fc DC01      		movw r26,r24
 4618 20fe 1E96      		adiw r26,14
 4619 2100 8D91      		ld r24,X+
 4620 2102 9C91      		ld r25,X
 4621 2104 1F97      		sbiw r26,14+1
 4622 2106 98A7      		std Y+40,r25
 4623 2108 8FA3      		std Y+39,r24
 318:lp_solve_5.5/lp_scale.c ****       colnr = &(COL_MAT_COLNR(0));
 4624               		.loc 1 318 0
 4625 210a 8BA5      		ldd r24,Y+43
 4626 210c 9CA5      		ldd r25,Y+44
 4627 210e FC01      		movw r30,r24
 4628 2110 8485      		ldd r24,Z+12
 4629 2112 9585      		ldd r25,Z+13
 4630 2114 9AA7      		std Y+42,r25
 4631 2116 89A7      		std Y+41,r24
 319:lp_solve_5.5/lp_scale.c ****       for(i = 0; i < nz;
 4632               		.loc 1 319 0
 4633 2118 1A82      		std Y+2,__zero_reg__
 4634 211a 1982      		std Y+1,__zero_reg__
 4635 211c 00C0      		rjmp .L117
 4636               	.L118:
 320:lp_solve_5.5/lp_scale.c ****           i++, rownr += matRowColStep, colnr += matRowColStep) {
 321:lp_solve_5.5/lp_scale.c ****         residual_even[*colnr] += (residual_odd[*rownr] / (REAL) RowCount[*rownr]);
 4637               		.loc 1 321 0
 4638 211e CE01      		movw r24,r28
 4639 2120 8D5A      		subi r24,-83
 4640 2122 9F4F      		sbci r25,-1
 4641 2124 DC01      		movw r26,r24
 4642 2126 2D91      		ld r18,X+
 4643 2128 3C91      		ld r19,X
 4644 212a 89A5      		ldd r24,Y+41
 4645 212c 9AA5      		ldd r25,Y+42
 4646 212e FC01      		movw r30,r24
 4647 2130 8081      		ld r24,Z
 4648 2132 9181      		ldd r25,Z+1
 4649 2134 880F      		lsl r24
 4650 2136 991F      		rol r25
 4651 2138 880F      		lsl r24
 4652 213a 991F      		rol r25
 4653 213c 8901      		movw r16,r18
 4654 213e 080F      		add r16,r24
 4655 2140 191F      		adc r17,r25
 4656 2142 CE01      		movw r24,r28
 4657 2144 8D5A      		subi r24,-83
 4658 2146 9F4F      		sbci r25,-1
 4659 2148 DC01      		movw r26,r24
 4660 214a 2D91      		ld r18,X+
 4661 214c 3C91      		ld r19,X
 4662 214e 89A5      		ldd r24,Y+41
 4663 2150 9AA5      		ldd r25,Y+42
 4664 2152 FC01      		movw r30,r24
 4665 2154 8081      		ld r24,Z
 4666 2156 9181      		ldd r25,Z+1
 4667 2158 880F      		lsl r24
 4668 215a 991F      		rol r25
 4669 215c 880F      		lsl r24
 4670 215e 991F      		rol r25
 4671 2160 820F      		add r24,r18
 4672 2162 931F      		adc r25,r19
 4673 2164 DC01      		movw r26,r24
 4674 2166 CD90      		ld r12,X+
 4675 2168 DD90      		ld r13,X+
 4676 216a ED90      		ld r14,X+
 4677 216c FC90      		ld r15,X
 4678 216e CE01      		movw r24,r28
 4679 2170 8B5A      		subi r24,-85
 4680 2172 9F4F      		sbci r25,-1
 4681 2174 FC01      		movw r30,r24
 4682 2176 2081      		ld r18,Z
 4683 2178 3181      		ldd r19,Z+1
 4684 217a 8FA1      		ldd r24,Y+39
 4685 217c 98A5      		ldd r25,Y+40
 4686 217e DC01      		movw r26,r24
 4687 2180 8D91      		ld r24,X+
 4688 2182 9C91      		ld r25,X
 4689 2184 880F      		lsl r24
 4690 2186 991F      		rol r25
 4691 2188 880F      		lsl r24
 4692 218a 991F      		rol r25
 4693 218c 820F      		add r24,r18
 4694 218e 931F      		adc r25,r19
 4695 2190 FC01      		movw r30,r24
 4696 2192 8080      		ld r8,Z
 4697 2194 9180      		ldd r9,Z+1
 4698 2196 A280      		ldd r10,Z+2
 4699 2198 B380      		ldd r11,Z+3
 4700 219a CE01      		movw r24,r28
 4701 219c 895A      		subi r24,-87
 4702 219e 9F4F      		sbci r25,-1
 4703 21a0 DC01      		movw r26,r24
 4704 21a2 2D91      		ld r18,X+
 4705 21a4 3C91      		ld r19,X
 4706 21a6 8FA1      		ldd r24,Y+39
 4707 21a8 98A5      		ldd r25,Y+40
 4708 21aa FC01      		movw r30,r24
 4709 21ac 8081      		ld r24,Z
 4710 21ae 9181      		ldd r25,Z+1
 4711 21b0 880F      		lsl r24
 4712 21b2 991F      		rol r25
 4713 21b4 820F      		add r24,r18
 4714 21b6 931F      		adc r25,r19
 4715 21b8 DC01      		movw r26,r24
 4716 21ba 8D91      		ld r24,X+
 4717 21bc 9C91      		ld r25,X
 4718 21be 092E      		mov __tmp_reg__,r25
 4719 21c0 000C      		lsl r0
 4720 21c2 AA0B      		sbc r26,r26
 4721 21c4 BB0B      		sbc r27,r27
 4722 21c6 BC01      		movw r22,r24
 4723 21c8 CD01      		movw r24,r26
 4724 21ca 0E94 0000 		call __floatsisf
 4725 21ce DC01      		movw r26,r24
 4726 21d0 CB01      		movw r24,r22
 4727 21d2 9C01      		movw r18,r24
 4728 21d4 AD01      		movw r20,r26
 4729 21d6 C501      		movw r24,r10
 4730 21d8 B401      		movw r22,r8
 4731 21da 0E94 0000 		call __divsf3
 4732 21de DC01      		movw r26,r24
 4733 21e0 CB01      		movw r24,r22
 4734 21e2 9C01      		movw r18,r24
 4735 21e4 AD01      		movw r20,r26
 4736 21e6 C701      		movw r24,r14
 4737 21e8 B601      		movw r22,r12
 4738 21ea 0E94 0000 		call __addsf3
 4739 21ee DC01      		movw r26,r24
 4740 21f0 CB01      		movw r24,r22
 4741 21f2 F801      		movw r30,r16
 4742 21f4 8083      		st Z,r24
 4743 21f6 9183      		std Z+1,r25
 4744 21f8 A283      		std Z+2,r26
 4745 21fa B383      		std Z+3,r27
 320:lp_solve_5.5/lp_scale.c ****           i++, rownr += matRowColStep, colnr += matRowColStep) {
 4746               		.loc 1 320 0
 4747 21fc 8981      		ldd r24,Y+1
 4748 21fe 9A81      		ldd r25,Y+2
 4749 2200 0196      		adiw r24,1
 4750 2202 9A83      		std Y+2,r25
 4751 2204 8983      		std Y+1,r24
 4752 2206 8FA1      		ldd r24,Y+39
 4753 2208 98A5      		ldd r25,Y+40
 4754 220a 0296      		adiw r24,2
 4755 220c 98A7      		std Y+40,r25
 4756 220e 8FA3      		std Y+39,r24
 4757 2210 89A5      		ldd r24,Y+41
 4758 2212 9AA5      		ldd r25,Y+42
 4759 2214 0296      		adiw r24,2
 4760 2216 9AA7      		std Y+42,r25
 4761 2218 89A7      		std Y+41,r24
 4762               	.L117:
 319:lp_solve_5.5/lp_scale.c ****       for(i = 0; i < nz;
 4763               		.loc 1 319 0 discriminator 1
 4764 221a 2981      		ldd r18,Y+1
 4765 221c 3A81      		ldd r19,Y+2
 4766 221e 8DA5      		ldd r24,Y+45
 4767 2220 9EA5      		ldd r25,Y+46
 4768 2222 2817      		cp r18,r24
 4769 2224 3907      		cpc r19,r25
 4770 2226 04F4      		brge .+2
 4771 2228 00C0      		rjmp .L118
 322:lp_solve_5.5/lp_scale.c ****       }
 323:lp_solve_5.5/lp_scale.c ****       for(col = 1; col <= colMax; col++)
 4772               		.loc 1 323 0
 4773 222a 81E0      		ldi r24,lo8(1)
 4774 222c 90E0      		ldi r25,0
 4775 222e 9E83      		std Y+6,r25
 4776 2230 8D83      		std Y+5,r24
 4777 2232 00C0      		rjmp .L119
 4778               	.L120:
 324:lp_solve_5.5/lp_scale.c ****         residual_even[col] *= (-1 / qk);
 4779               		.loc 1 324 0 discriminator 3
 4780 2234 CE01      		movw r24,r28
 4781 2236 8D5A      		subi r24,-83
 4782 2238 9F4F      		sbci r25,-1
 4783 223a DC01      		movw r26,r24
 4784 223c 2D91      		ld r18,X+
 4785 223e 3C91      		ld r19,X
 4786 2240 8D81      		ldd r24,Y+5
 4787 2242 9E81      		ldd r25,Y+6
 4788 2244 880F      		lsl r24
 4789 2246 991F      		rol r25
 4790 2248 880F      		lsl r24
 4791 224a 991F      		rol r25
 4792 224c 8901      		movw r16,r18
 4793 224e 080F      		add r16,r24
 4794 2250 191F      		adc r17,r25
 4795 2252 CE01      		movw r24,r28
 4796 2254 8D5A      		subi r24,-83
 4797 2256 9F4F      		sbci r25,-1
 4798 2258 FC01      		movw r30,r24
 4799 225a 2081      		ld r18,Z
 4800 225c 3181      		ldd r19,Z+1
 4801 225e 8D81      		ldd r24,Y+5
 4802 2260 9E81      		ldd r25,Y+6
 4803 2262 880F      		lsl r24
 4804 2264 991F      		rol r25
 4805 2266 880F      		lsl r24
 4806 2268 991F      		rol r25
 4807 226a 820F      		add r24,r18
 4808 226c 931F      		adc r25,r19
 4809 226e DC01      		movw r26,r24
 4810 2270 CD90      		ld r12,X+
 4811 2272 DD90      		ld r13,X+
 4812 2274 ED90      		ld r14,X+
 4813 2276 FC90      		ld r15,X
 4814 2278 2B85      		ldd r18,Y+11
 4815 227a 3C85      		ldd r19,Y+12
 4816 227c 4D85      		ldd r20,Y+13
 4817 227e 5E85      		ldd r21,Y+14
 4818 2280 60E0      		ldi r22,0
 4819 2282 70E0      		ldi r23,0
 4820 2284 80E8      		ldi r24,lo8(-128)
 4821 2286 9FEB      		ldi r25,lo8(-65)
 4822 2288 0E94 0000 		call __divsf3
 4823 228c DC01      		movw r26,r24
 4824 228e CB01      		movw r24,r22
 4825 2290 9C01      		movw r18,r24
 4826 2292 AD01      		movw r20,r26
 4827 2294 C701      		movw r24,r14
 4828 2296 B601      		movw r22,r12
 4829 2298 0E94 0000 		call __mulsf3
 4830 229c DC01      		movw r26,r24
 4831 229e CB01      		movw r24,r22
 4832 22a0 F801      		movw r30,r16
 4833 22a2 8083      		st Z,r24
 4834 22a4 9183      		std Z+1,r25
 4835 22a6 A283      		std Z+2,r26
 4836 22a8 B383      		std Z+3,r27
 323:lp_solve_5.5/lp_scale.c ****         residual_even[col] *= (-1 / qk);
 4837               		.loc 1 323 0 discriminator 3
 4838 22aa 8D81      		ldd r24,Y+5
 4839 22ac 9E81      		ldd r25,Y+6
 4840 22ae 0196      		adiw r24,1
 4841 22b0 9E83      		std Y+6,r25
 4842 22b2 8D83      		std Y+5,r24
 4843               	.L119:
 323:lp_solve_5.5/lp_scale.c ****         residual_even[col] *= (-1 / qk);
 4844               		.loc 1 323 0 is_stmt 0 discriminator 1
 4845 22b4 2D81      		ldd r18,Y+5
 4846 22b6 3E81      		ldd r19,Y+6
 4847 22b8 8FA5      		ldd r24,Y+47
 4848 22ba 98A9      		ldd r25,Y+48
 4849 22bc 8217      		cp r24,r18
 4850 22be 9307      		cpc r25,r19
 4851 22c0 04F0      		brlt .+2
 4852 22c2 00C0      		rjmp .L120
 325:lp_solve_5.5/lp_scale.c **** 
 326:lp_solve_5.5/lp_scale.c ****       /* sk */
 327:lp_solve_5.5/lp_scale.c ****       skm1 = sk;
 4853               		.loc 1 327 0 is_stmt 1
 4854 22c4 8F81      		ldd r24,Y+7
 4855 22c6 9885      		ldd r25,Y+8
 4856 22c8 A985      		ldd r26,Y+9
 4857 22ca BA85      		ldd r27,Y+10
 4858 22cc 8B8B      		std Y+19,r24
 4859 22ce 9C8B      		std Y+20,r25
 4860 22d0 AD8B      		std Y+21,r26
 4861 22d2 BE8B      		std Y+22,r27
 328:lp_solve_5.5/lp_scale.c ****       sk = 0;
 4862               		.loc 1 328 0
 4863 22d4 1F82      		std Y+7,__zero_reg__
 4864 22d6 1886      		std Y+8,__zero_reg__
 4865 22d8 1986      		std Y+9,__zero_reg__
 4866 22da 1A86      		std Y+10,__zero_reg__
 329:lp_solve_5.5/lp_scale.c ****       for(col = 1; col <= colMax; col++)
 4867               		.loc 1 329 0
 4868 22dc 81E0      		ldi r24,lo8(1)
 4869 22de 90E0      		ldi r25,0
 4870 22e0 9E83      		std Y+6,r25
 4871 22e2 8D83      		std Y+5,r24
 4872 22e4 00C0      		rjmp .L121
 4873               	.L122:
 330:lp_solve_5.5/lp_scale.c ****         sk += (residual_even[col]*residual_even[col]) / (REAL) ColCount[col];
 4874               		.loc 1 330 0 discriminator 3
 4875 22e6 CE01      		movw r24,r28
 4876 22e8 8D5A      		subi r24,-83
 4877 22ea 9F4F      		sbci r25,-1
 4878 22ec DC01      		movw r26,r24
 4879 22ee 2D91      		ld r18,X+
 4880 22f0 3C91      		ld r19,X
 4881 22f2 8D81      		ldd r24,Y+5
 4882 22f4 9E81      		ldd r25,Y+6
 4883 22f6 880F      		lsl r24
 4884 22f8 991F      		rol r25
 4885 22fa 880F      		lsl r24
 4886 22fc 991F      		rol r25
 4887 22fe 820F      		add r24,r18
 4888 2300 931F      		adc r25,r19
 4889 2302 FC01      		movw r30,r24
 4890 2304 8081      		ld r24,Z
 4891 2306 9181      		ldd r25,Z+1
 4892 2308 A281      		ldd r26,Z+2
 4893 230a B381      		ldd r27,Z+3
 4894 230c 9E01      		movw r18,r28
 4895 230e 2D5A      		subi r18,-83
 4896 2310 3F4F      		sbci r19,-1
 4897 2312 F901      		movw r30,r18
 4898 2314 4081      		ld r20,Z
 4899 2316 5181      		ldd r21,Z+1
 4900 2318 2D81      		ldd r18,Y+5
 4901 231a 3E81      		ldd r19,Y+6
 4902 231c 220F      		lsl r18
 4903 231e 331F      		rol r19
 4904 2320 220F      		lsl r18
 4905 2322 331F      		rol r19
 4906 2324 240F      		add r18,r20
 4907 2326 351F      		adc r19,r21
 4908 2328 F901      		movw r30,r18
 4909 232a 2081      		ld r18,Z
 4910 232c 3181      		ldd r19,Z+1
 4911 232e 4281      		ldd r20,Z+2
 4912 2330 5381      		ldd r21,Z+3
 4913 2332 BC01      		movw r22,r24
 4914 2334 CD01      		movw r24,r26
 4915 2336 0E94 0000 		call __mulsf3
 4916 233a DC01      		movw r26,r24
 4917 233c CB01      		movw r24,r22
 4918 233e 6C01      		movw r12,r24
 4919 2340 7D01      		movw r14,r26
 4920 2342 CE01      		movw r24,r28
 4921 2344 875A      		subi r24,-89
 4922 2346 9F4F      		sbci r25,-1
 4923 2348 DC01      		movw r26,r24
 4924 234a 2D91      		ld r18,X+
 4925 234c 3C91      		ld r19,X
 4926 234e 8D81      		ldd r24,Y+5
 4927 2350 9E81      		ldd r25,Y+6
 4928 2352 880F      		lsl r24
 4929 2354 991F      		rol r25
 4930 2356 820F      		add r24,r18
 4931 2358 931F      		adc r25,r19
 4932 235a FC01      		movw r30,r24
 4933 235c 8081      		ld r24,Z
 4934 235e 9181      		ldd r25,Z+1
 4935 2360 092E      		mov __tmp_reg__,r25
 4936 2362 000C      		lsl r0
 4937 2364 AA0B      		sbc r26,r26
 4938 2366 BB0B      		sbc r27,r27
 4939 2368 BC01      		movw r22,r24
 4940 236a CD01      		movw r24,r26
 4941 236c 0E94 0000 		call __floatsisf
 4942 2370 DC01      		movw r26,r24
 4943 2372 CB01      		movw r24,r22
 4944 2374 9C01      		movw r18,r24
 4945 2376 AD01      		movw r20,r26
 4946 2378 C701      		movw r24,r14
 4947 237a B601      		movw r22,r12
 4948 237c 0E94 0000 		call __divsf3
 4949 2380 DC01      		movw r26,r24
 4950 2382 CB01      		movw r24,r22
 4951 2384 9C01      		movw r18,r24
 4952 2386 AD01      		movw r20,r26
 4953 2388 6F81      		ldd r22,Y+7
 4954 238a 7885      		ldd r23,Y+8
 4955 238c 8985      		ldd r24,Y+9
 4956 238e 9A85      		ldd r25,Y+10
 4957 2390 0E94 0000 		call __addsf3
 4958 2394 DC01      		movw r26,r24
 4959 2396 CB01      		movw r24,r22
 4960 2398 8F83      		std Y+7,r24
 4961 239a 9887      		std Y+8,r25
 4962 239c A987      		std Y+9,r26
 4963 239e BA87      		std Y+10,r27
 329:lp_solve_5.5/lp_scale.c ****       for(col = 1; col <= colMax; col++)
 4964               		.loc 1 329 0 discriminator 3
 4965 23a0 8D81      		ldd r24,Y+5
 4966 23a2 9E81      		ldd r25,Y+6
 4967 23a4 0196      		adiw r24,1
 4968 23a6 9E83      		std Y+6,r25
 4969 23a8 8D83      		std Y+5,r24
 4970               	.L121:
 329:lp_solve_5.5/lp_scale.c ****       for(col = 1; col <= colMax; col++)
 4971               		.loc 1 329 0 is_stmt 0 discriminator 1
 4972 23aa 2D81      		ldd r18,Y+5
 4973 23ac 3E81      		ldd r19,Y+6
 4974 23ae 8FA5      		ldd r24,Y+47
 4975 23b0 98A9      		ldd r25,Y+48
 4976 23b2 8217      		cp r24,r18
 4977 23b4 9307      		cpc r25,r19
 4978 23b6 04F0      		brlt .+2
 4979 23b8 00C0      		rjmp .L122
 4980               	.L110:
 331:lp_solve_5.5/lp_scale.c ****     }
 332:lp_solve_5.5/lp_scale.c **** 
 333:lp_solve_5.5/lp_scale.c ****     /* Compute ek and qk */
 334:lp_solve_5.5/lp_scale.c ****     ekm2=ekm1;
 4981               		.loc 1 334 0 is_stmt 1
 4982 23ba 9E01      		movw r18,r28
 4983 23bc 215C      		subi r18,-63
 4984 23be 3F4F      		sbci r19,-1
 4985 23c0 8B8D      		ldd r24,Y+27
 4986 23c2 9C8D      		ldd r25,Y+28
 4987 23c4 AD8D      		ldd r26,Y+29
 4988 23c6 BE8D      		ldd r27,Y+30
 4989 23c8 F901      		movw r30,r18
 4990 23ca 8083      		st Z,r24
 4991 23cc 9183      		std Z+1,r25
 4992 23ce A283      		std Z+2,r26
 4993 23d0 B383      		std Z+3,r27
 335:lp_solve_5.5/lp_scale.c ****     ekm1=ek;
 4994               		.loc 1 335 0
 4995 23d2 8F85      		ldd r24,Y+15
 4996 23d4 9889      		ldd r25,Y+16
 4997 23d6 A989      		ldd r26,Y+17
 4998 23d8 BA89      		ldd r27,Y+18
 4999 23da 8B8F      		std Y+27,r24
 5000 23dc 9C8F      		std Y+28,r25
 5001 23de AD8F      		std Y+29,r26
 5002 23e0 BE8F      		std Y+30,r27
 336:lp_solve_5.5/lp_scale.c ****     ek=qk * sk / skm1;
 5003               		.loc 1 336 0
 5004 23e2 2F81      		ldd r18,Y+7
 5005 23e4 3885      		ldd r19,Y+8
 5006 23e6 4985      		ldd r20,Y+9
 5007 23e8 5A85      		ldd r21,Y+10
 5008 23ea 6B85      		ldd r22,Y+11
 5009 23ec 7C85      		ldd r23,Y+12
 5010 23ee 8D85      		ldd r24,Y+13
 5011 23f0 9E85      		ldd r25,Y+14
 5012 23f2 0E94 0000 		call __mulsf3
 5013 23f6 DC01      		movw r26,r24
 5014 23f8 CB01      		movw r24,r22
 5015 23fa 2B89      		ldd r18,Y+19
 5016 23fc 3C89      		ldd r19,Y+20
 5017 23fe 4D89      		ldd r20,Y+21
 5018 2400 5E89      		ldd r21,Y+22
 5019 2402 BC01      		movw r22,r24
 5020 2404 CD01      		movw r24,r26
 5021 2406 0E94 0000 		call __divsf3
 5022 240a DC01      		movw r26,r24
 5023 240c CB01      		movw r24,r22
 5024 240e 8F87      		std Y+15,r24
 5025 2410 988B      		std Y+16,r25
 5026 2412 A98B      		std Y+17,r26
 5027 2414 BA8B      		std Y+18,r27
 337:lp_solve_5.5/lp_scale.c **** 
 338:lp_solve_5.5/lp_scale.c ****     qkm2=qkm1;
 5028               		.loc 1 338 0
 5029 2416 8F89      		ldd r24,Y+23
 5030 2418 988D      		ldd r25,Y+24
 5031 241a A98D      		ldd r26,Y+25
 5032 241c BA8D      		ldd r27,Y+26
 5033 241e 8BAF      		std Y+59,r24
 5034 2420 9CAF      		std Y+60,r25
 5035 2422 ADAF      		std Y+61,r26
 5036 2424 BEAF      		std Y+62,r27
 339:lp_solve_5.5/lp_scale.c ****     qkm1=qk;
 5037               		.loc 1 339 0
 5038 2426 8B85      		ldd r24,Y+11
 5039 2428 9C85      		ldd r25,Y+12
 5040 242a AD85      		ldd r26,Y+13
 5041 242c BE85      		ldd r27,Y+14
 5042 242e 8F8B      		std Y+23,r24
 5043 2430 988F      		std Y+24,r25
 5044 2432 A98F      		std Y+25,r26
 5045 2434 BA8F      		std Y+26,r27
 340:lp_solve_5.5/lp_scale.c ****     qk=1-ek;
 5046               		.loc 1 340 0
 5047 2436 2F85      		ldd r18,Y+15
 5048 2438 3889      		ldd r19,Y+16
 5049 243a 4989      		ldd r20,Y+17
 5050 243c 5A89      		ldd r21,Y+18
 5051 243e 60E0      		ldi r22,0
 5052 2440 70E0      		ldi r23,0
 5053 2442 80E8      		ldi r24,lo8(-128)
 5054 2444 9FE3      		ldi r25,lo8(63)
 5055 2446 0E94 0000 		call __subsf3
 5056 244a DC01      		movw r26,r24
 5057 244c CB01      		movw r24,r22
 5058 244e 8B87      		std Y+11,r24
 5059 2450 9C87      		std Y+12,r25
 5060 2452 AD87      		std Y+13,r26
 5061 2454 BE87      		std Y+14,r27
 341:lp_solve_5.5/lp_scale.c **** 
 342:lp_solve_5.5/lp_scale.c ****     Result++;
 5062               		.loc 1 342 0
 5063 2456 8BA1      		ldd r24,Y+35
 5064 2458 9CA1      		ldd r25,Y+36
 5065 245a 0196      		adiw r24,1
 5066 245c 9CA3      		std Y+36,r25
 5067 245e 8BA3      		std Y+35,r24
 5068               	.L80:
 251:lp_solve_5.5/lp_scale.c ****   /* Given the values of residual and sk, construct
 5069               		.loc 1 251 0
 5070 2460 2DA9      		ldd r18,Y+53
 5071 2462 3EA9      		ldd r19,Y+54
 5072 2464 4FA9      		ldd r20,Y+55
 5073 2466 58AD      		ldd r21,Y+56
 5074 2468 6F81      		ldd r22,Y+7
 5075 246a 7885      		ldd r23,Y+8
 5076 246c 8985      		ldd r24,Y+9
 5077 246e 9A85      		ldd r25,Y+10
 5078 2470 0E94 0000 		call __gtsf2
 5079 2474 1816      		cp __zero_reg__,r24
 5080 2476 04F4      		brge .+2
 5081 2478 00C0      		rjmp .L123
 343:lp_solve_5.5/lp_scale.c ****   }
 344:lp_solve_5.5/lp_scale.c **** 
 345:lp_solve_5.5/lp_scale.c ****   /* Synchronize the RowScale and ColScale vectors */
 346:lp_solve_5.5/lp_scale.c ****   ekekm1 = ek * ekm1;
 5082               		.loc 1 346 0
 5083 247a 8E01      		movw r16,r28
 5084 247c 095B      		subi r16,-71
 5085 247e 1F4F      		sbci r17,-1
 5086 2480 2B8D      		ldd r18,Y+27
 5087 2482 3C8D      		ldd r19,Y+28
 5088 2484 4D8D      		ldd r20,Y+29
 5089 2486 5E8D      		ldd r21,Y+30
 5090 2488 6F85      		ldd r22,Y+15
 5091 248a 7889      		ldd r23,Y+16
 5092 248c 8989      		ldd r24,Y+17
 5093 248e 9A89      		ldd r25,Y+18
 5094 2490 0E94 0000 		call __mulsf3
 5095 2494 DC01      		movw r26,r24
 5096 2496 CB01      		movw r24,r22
 5097 2498 F801      		movw r30,r16
 5098 249a 8083      		st Z,r24
 5099 249c 9183      		std Z+1,r25
 5100 249e A283      		std Z+2,r26
 5101 24a0 B383      		std Z+3,r27
 347:lp_solve_5.5/lp_scale.c ****   if(qkm1 != 0) {
 5102               		.loc 1 347 0
 5103 24a2 20E0      		ldi r18,0
 5104 24a4 30E0      		ldi r19,0
 5105 24a6 A901      		movw r20,r18
 5106 24a8 6F89      		ldd r22,Y+23
 5107 24aa 788D      		ldd r23,Y+24
 5108 24ac 898D      		ldd r24,Y+25
 5109 24ae 9A8D      		ldd r25,Y+26
 5110 24b0 0E94 0000 		call __nesf2
 5111 24b4 8823      		tst r24
 5112 24b6 01F4      		brne .+2
 5113 24b8 00C0      		rjmp .L169
 348:lp_solve_5.5/lp_scale.c ****   if((Result % 2) == 0) { /* pass is even, compute RowScale */
 5114               		.loc 1 348 0
 5115 24ba 8BA1      		ldd r24,Y+35
 5116 24bc 9CA1      		ldd r25,Y+36
 5117 24be 8170      		andi r24,1
 5118 24c0 9927      		clr r25
 5119 24c2 892B      		or r24,r25
 5120 24c4 01F0      		breq .+2
 5121 24c6 00C0      		rjmp .L126
 349:lp_solve_5.5/lp_scale.c ****     for(row = 0; row<=lp->rows; row++)
 5122               		.loc 1 349 0
 5123 24c8 1C82      		std Y+4,__zero_reg__
 5124 24ca 1B82      		std Y+3,__zero_reg__
 5125 24cc 00C0      		rjmp .L127
 5126               	.L128:
 350:lp_solve_5.5/lp_scale.c ****       FRowScale[row]*=(1.0 + ekekm1 / qkm1);
 5127               		.loc 1 350 0 discriminator 3
 5128 24ce 8B81      		ldd r24,Y+3
 5129 24d0 9C81      		ldd r25,Y+4
 5130 24d2 880F      		lsl r24
 5131 24d4 991F      		rol r25
 5132 24d6 880F      		lsl r24
 5133 24d8 991F      		rol r25
 5134 24da 9E01      		movw r18,r28
 5135 24dc 225A      		subi r18,-94
 5136 24de 3F4F      		sbci r19,-1
 5137 24e0 D901      		movw r26,r18
 5138 24e2 2D91      		ld r18,X+
 5139 24e4 3C91      		ld r19,X
 5140 24e6 8901      		movw r16,r18
 5141 24e8 080F      		add r16,r24
 5142 24ea 191F      		adc r17,r25
 5143 24ec 8B81      		ldd r24,Y+3
 5144 24ee 9C81      		ldd r25,Y+4
 5145 24f0 880F      		lsl r24
 5146 24f2 991F      		rol r25
 5147 24f4 880F      		lsl r24
 5148 24f6 991F      		rol r25
 5149 24f8 9E01      		movw r18,r28
 5150 24fa 225A      		subi r18,-94
 5151 24fc 3F4F      		sbci r19,-1
 5152 24fe F901      		movw r30,r18
 5153 2500 2081      		ld r18,Z
 5154 2502 3181      		ldd r19,Z+1
 5155 2504 820F      		add r24,r18
 5156 2506 931F      		adc r25,r19
 5157 2508 DC01      		movw r26,r24
 5158 250a CD90      		ld r12,X+
 5159 250c DD90      		ld r13,X+
 5160 250e ED90      		ld r14,X+
 5161 2510 FC90      		ld r15,X
 5162 2512 CE01      		movw r24,r28
 5163 2514 895B      		subi r24,-71
 5164 2516 9F4F      		sbci r25,-1
 5165 2518 2F89      		ldd r18,Y+23
 5166 251a 388D      		ldd r19,Y+24
 5167 251c 498D      		ldd r20,Y+25
 5168 251e 5A8D      		ldd r21,Y+26
 5169 2520 FC01      		movw r30,r24
 5170 2522 6081      		ld r22,Z
 5171 2524 7181      		ldd r23,Z+1
 5172 2526 8281      		ldd r24,Z+2
 5173 2528 9381      		ldd r25,Z+3
 5174 252a 0E94 0000 		call __divsf3
 5175 252e DC01      		movw r26,r24
 5176 2530 CB01      		movw r24,r22
 5177 2532 20E0      		ldi r18,0
 5178 2534 30E0      		ldi r19,0
 5179 2536 40E8      		ldi r20,lo8(-128)
 5180 2538 5FE3      		ldi r21,lo8(63)
 5181 253a BC01      		movw r22,r24
 5182 253c CD01      		movw r24,r26
 5183 253e 0E94 0000 		call __addsf3
 5184 2542 DC01      		movw r26,r24
 5185 2544 CB01      		movw r24,r22
 5186 2546 9C01      		movw r18,r24
 5187 2548 AD01      		movw r20,r26
 5188 254a C701      		movw r24,r14
 5189 254c B601      		movw r22,r12
 5190 254e 0E94 0000 		call __mulsf3
 5191 2552 DC01      		movw r26,r24
 5192 2554 CB01      		movw r24,r22
 5193 2556 F801      		movw r30,r16
 5194 2558 8083      		st Z,r24
 5195 255a 9183      		std Z+1,r25
 5196 255c A283      		std Z+2,r26
 5197 255e B383      		std Z+3,r27
 349:lp_solve_5.5/lp_scale.c ****     for(row = 0; row<=lp->rows; row++)
 5198               		.loc 1 349 0 discriminator 3
 5199 2560 8B81      		ldd r24,Y+3
 5200 2562 9C81      		ldd r25,Y+4
 5201 2564 0196      		adiw r24,1
 5202 2566 9C83      		std Y+4,r25
 5203 2568 8B83      		std Y+3,r24
 5204               	.L127:
 349:lp_solve_5.5/lp_scale.c ****     for(row = 0; row<=lp->rows; row++)
 5205               		.loc 1 349 0 is_stmt 0 discriminator 1
 5206 256a CE01      		movw r24,r28
 5207 256c 855A      		subi r24,-91
 5208 256e 9F4F      		sbci r25,-1
 5209 2570 DC01      		movw r26,r24
 5210 2572 8D91      		ld r24,X+
 5211 2574 9C91      		ld r25,X
 5212 2576 8651      		subi r24,22
 5213 2578 9E4F      		sbci r25,-2
 5214 257a FC01      		movw r30,r24
 5215 257c 2081      		ld r18,Z
 5216 257e 3181      		ldd r19,Z+1
 5217 2580 8B81      		ldd r24,Y+3
 5218 2582 9C81      		ldd r25,Y+4
 5219 2584 2817      		cp r18,r24
 5220 2586 3907      		cpc r19,r25
 5221 2588 04F0      		brlt .+2
 5222 258a 00C0      		rjmp .L128
 351:lp_solve_5.5/lp_scale.c ****     for(row = 0; row<=lp->rows; row++)
 5223               		.loc 1 351 0 is_stmt 1
 5224 258c 1C82      		std Y+4,__zero_reg__
 5225 258e 1B82      		std Y+3,__zero_reg__
 5226 2590 00C0      		rjmp .L129
 5227               	.L130:
 352:lp_solve_5.5/lp_scale.c ****       FRowScale[row]+=(residual_odd[row] / (qkm1 * (REAL) RowCount[row]) -
 5228               		.loc 1 352 0 discriminator 3
 5229 2592 8B81      		ldd r24,Y+3
 5230 2594 9C81      		ldd r25,Y+4
 5231 2596 880F      		lsl r24
 5232 2598 991F      		rol r25
 5233 259a 880F      		lsl r24
 5234 259c 991F      		rol r25
 5235 259e 9E01      		movw r18,r28
 5236 25a0 225A      		subi r18,-94
 5237 25a2 3F4F      		sbci r19,-1
 5238 25a4 D901      		movw r26,r18
 5239 25a6 2D91      		ld r18,X+
 5240 25a8 3C91      		ld r19,X
 5241 25aa 8901      		movw r16,r18
 5242 25ac 080F      		add r16,r24
 5243 25ae 191F      		adc r17,r25
 5244 25b0 8B81      		ldd r24,Y+3
 5245 25b2 9C81      		ldd r25,Y+4
 5246 25b4 880F      		lsl r24
 5247 25b6 991F      		rol r25
 5248 25b8 880F      		lsl r24
 5249 25ba 991F      		rol r25
 5250 25bc 9E01      		movw r18,r28
 5251 25be 225A      		subi r18,-94
 5252 25c0 3F4F      		sbci r19,-1
 5253 25c2 F901      		movw r30,r18
 5254 25c4 2081      		ld r18,Z
 5255 25c6 3181      		ldd r19,Z+1
 5256 25c8 820F      		add r24,r18
 5257 25ca 931F      		adc r25,r19
 5258 25cc DC01      		movw r26,r24
 5259 25ce CD90      		ld r12,X+
 5260 25d0 DD90      		ld r13,X+
 5261 25d2 ED90      		ld r14,X+
 5262 25d4 FC90      		ld r15,X
 5263 25d6 CE01      		movw r24,r28
 5264 25d8 8B5A      		subi r24,-85
 5265 25da 9F4F      		sbci r25,-1
 5266 25dc FC01      		movw r30,r24
 5267 25de 2081      		ld r18,Z
 5268 25e0 3181      		ldd r19,Z+1
 5269 25e2 8B81      		ldd r24,Y+3
 5270 25e4 9C81      		ldd r25,Y+4
 5271 25e6 880F      		lsl r24
 5272 25e8 991F      		rol r25
 5273 25ea 880F      		lsl r24
 5274 25ec 991F      		rol r25
 5275 25ee 820F      		add r24,r18
 5276 25f0 931F      		adc r25,r19
 5277 25f2 DC01      		movw r26,r24
 5278 25f4 8D90      		ld r8,X+
 5279 25f6 9D90      		ld r9,X+
 5280 25f8 AD90      		ld r10,X+
 5281 25fa BC90      		ld r11,X
 5282 25fc CE01      		movw r24,r28
 5283 25fe 895A      		subi r24,-87
 5284 2600 9F4F      		sbci r25,-1
 5285 2602 FC01      		movw r30,r24
 5286 2604 2081      		ld r18,Z
 5287 2606 3181      		ldd r19,Z+1
 5288 2608 8B81      		ldd r24,Y+3
 5289 260a 9C81      		ldd r25,Y+4
 5290 260c 880F      		lsl r24
 5291 260e 991F      		rol r25
 5292 2610 820F      		add r24,r18
 5293 2612 931F      		adc r25,r19
 5294 2614 DC01      		movw r26,r24
 5295 2616 8D91      		ld r24,X+
 5296 2618 9C91      		ld r25,X
 5297 261a 092E      		mov __tmp_reg__,r25
 5298 261c 000C      		lsl r0
 5299 261e AA0B      		sbc r26,r26
 5300 2620 BB0B      		sbc r27,r27
 5301 2622 BC01      		movw r22,r24
 5302 2624 CD01      		movw r24,r26
 5303 2626 0E94 0000 		call __floatsisf
 5304 262a DC01      		movw r26,r24
 5305 262c CB01      		movw r24,r22
 5306 262e 2F89      		ldd r18,Y+23
 5307 2630 388D      		ldd r19,Y+24
 5308 2632 498D      		ldd r20,Y+25
 5309 2634 5A8D      		ldd r21,Y+26
 5310 2636 BC01      		movw r22,r24
 5311 2638 CD01      		movw r24,r26
 5312 263a 0E94 0000 		call __mulsf3
 5313 263e DC01      		movw r26,r24
 5314 2640 CB01      		movw r24,r22
 5315 2642 9C01      		movw r18,r24
 5316 2644 AD01      		movw r20,r26
 5317 2646 C501      		movw r24,r10
 5318 2648 B401      		movw r22,r8
 5319 264a 0E94 0000 		call __divsf3
 5320 264e DC01      		movw r26,r24
 5321 2650 CB01      		movw r24,r22
 5322 2652 4C01      		movw r8,r24
 5323 2654 5D01      		movw r10,r26
 353:lp_solve_5.5/lp_scale.c ****                       RowScalem2[row] * ekekm1 / qkm1);
 5324               		.loc 1 353 0 discriminator 3
 5325 2656 CE01      		movw r24,r28
 5326 2658 855B      		subi r24,-75
 5327 265a 9F4F      		sbci r25,-1
 5328 265c FC01      		movw r30,r24
 5329 265e 2081      		ld r18,Z
 5330 2660 3181      		ldd r19,Z+1
 5331 2662 8B81      		ldd r24,Y+3
 5332 2664 9C81      		ldd r25,Y+4
 5333 2666 880F      		lsl r24
 5334 2668 991F      		rol r25
 5335 266a 880F      		lsl r24
 5336 266c 991F      		rol r25
 5337 266e 820F      		add r24,r18
 5338 2670 931F      		adc r25,r19
 5339 2672 FC01      		movw r30,r24
 5340 2674 8081      		ld r24,Z
 5341 2676 9181      		ldd r25,Z+1
 5342 2678 A281      		ldd r26,Z+2
 5343 267a B381      		ldd r27,Z+3
 5344 267c 9E01      		movw r18,r28
 5345 267e 295B      		subi r18,-71
 5346 2680 3F4F      		sbci r19,-1
 5347 2682 F901      		movw r30,r18
 5348 2684 2081      		ld r18,Z
 5349 2686 3181      		ldd r19,Z+1
 5350 2688 4281      		ldd r20,Z+2
 5351 268a 5381      		ldd r21,Z+3
 5352 268c BC01      		movw r22,r24
 5353 268e CD01      		movw r24,r26
 5354 2690 0E94 0000 		call __mulsf3
 5355 2694 DC01      		movw r26,r24
 5356 2696 CB01      		movw r24,r22
 5357 2698 2F89      		ldd r18,Y+23
 5358 269a 388D      		ldd r19,Y+24
 5359 269c 498D      		ldd r20,Y+25
 5360 269e 5A8D      		ldd r21,Y+26
 5361 26a0 BC01      		movw r22,r24
 5362 26a2 CD01      		movw r24,r26
 5363 26a4 0E94 0000 		call __divsf3
 5364 26a8 DC01      		movw r26,r24
 5365 26aa CB01      		movw r24,r22
 352:lp_solve_5.5/lp_scale.c ****       FRowScale[row]+=(residual_odd[row] / (qkm1 * (REAL) RowCount[row]) -
 5366               		.loc 1 352 0 discriminator 3
 5367 26ac 9C01      		movw r18,r24
 5368 26ae AD01      		movw r20,r26
 5369 26b0 C501      		movw r24,r10
 5370 26b2 B401      		movw r22,r8
 5371 26b4 0E94 0000 		call __subsf3
 5372 26b8 DC01      		movw r26,r24
 5373 26ba CB01      		movw r24,r22
 5374 26bc 9C01      		movw r18,r24
 5375 26be AD01      		movw r20,r26
 5376 26c0 C701      		movw r24,r14
 5377 26c2 B601      		movw r22,r12
 5378 26c4 0E94 0000 		call __addsf3
 5379 26c8 DC01      		movw r26,r24
 5380 26ca CB01      		movw r24,r22
 5381 26cc F801      		movw r30,r16
 5382 26ce 8083      		st Z,r24
 5383 26d0 9183      		std Z+1,r25
 5384 26d2 A283      		std Z+2,r26
 5385 26d4 B383      		std Z+3,r27
 351:lp_solve_5.5/lp_scale.c ****     for(row = 0; row<=lp->rows; row++)
 5386               		.loc 1 351 0 discriminator 3
 5387 26d6 8B81      		ldd r24,Y+3
 5388 26d8 9C81      		ldd r25,Y+4
 5389 26da 0196      		adiw r24,1
 5390 26dc 9C83      		std Y+4,r25
 5391 26de 8B83      		std Y+3,r24
 5392               	.L129:
 351:lp_solve_5.5/lp_scale.c ****     for(row = 0; row<=lp->rows; row++)
 5393               		.loc 1 351 0 is_stmt 0 discriminator 1
 5394 26e0 CE01      		movw r24,r28
 5395 26e2 855A      		subi r24,-91
 5396 26e4 9F4F      		sbci r25,-1
 5397 26e6 DC01      		movw r26,r24
 5398 26e8 8D91      		ld r24,X+
 5399 26ea 9C91      		ld r25,X
 5400 26ec 8651      		subi r24,22
 5401 26ee 9E4F      		sbci r25,-2
 5402 26f0 FC01      		movw r30,r24
 5403 26f2 2081      		ld r18,Z
 5404 26f4 3181      		ldd r19,Z+1
 5405 26f6 8B81      		ldd r24,Y+3
 5406 26f8 9C81      		ldd r25,Y+4
 5407 26fa 2817      		cp r18,r24
 5408 26fc 3907      		cpc r19,r25
 5409 26fe 04F0      		brlt .+2
 5410 2700 00C0      		rjmp .L130
 5411 2702 00C0      		rjmp .L169
 5412               	.L126:
 354:lp_solve_5.5/lp_scale.c ****   }
 355:lp_solve_5.5/lp_scale.c ****   else { /* pass is odd, compute ColScale */
 356:lp_solve_5.5/lp_scale.c ****     for(col=1; col<=colMax; col++)
 5413               		.loc 1 356 0 is_stmt 1
 5414 2704 81E0      		ldi r24,lo8(1)
 5415 2706 90E0      		ldi r25,0
 5416 2708 9E83      		std Y+6,r25
 5417 270a 8D83      		std Y+5,r24
 5418 270c 00C0      		rjmp .L131
 5419               	.L132:
 357:lp_solve_5.5/lp_scale.c ****       FColScale[col]*=(1 + ekekm1 / qkm1);
 5420               		.loc 1 357 0 discriminator 3
 5421 270e 8D81      		ldd r24,Y+5
 5422 2710 9E81      		ldd r25,Y+6
 5423 2712 880F      		lsl r24
 5424 2714 991F      		rol r25
 5425 2716 880F      		lsl r24
 5426 2718 991F      		rol r25
 5427 271a 9E01      		movw r18,r28
 5428 271c 205A      		subi r18,-96
 5429 271e 3F4F      		sbci r19,-1
 5430 2720 D901      		movw r26,r18
 5431 2722 2D91      		ld r18,X+
 5432 2724 3C91      		ld r19,X
 5433 2726 8901      		movw r16,r18
 5434 2728 080F      		add r16,r24
 5435 272a 191F      		adc r17,r25
 5436 272c 8D81      		ldd r24,Y+5
 5437 272e 9E81      		ldd r25,Y+6
 5438 2730 880F      		lsl r24
 5439 2732 991F      		rol r25
 5440 2734 880F      		lsl r24
 5441 2736 991F      		rol r25
 5442 2738 9E01      		movw r18,r28
 5443 273a 205A      		subi r18,-96
 5444 273c 3F4F      		sbci r19,-1
 5445 273e F901      		movw r30,r18
 5446 2740 2081      		ld r18,Z
 5447 2742 3181      		ldd r19,Z+1
 5448 2744 820F      		add r24,r18
 5449 2746 931F      		adc r25,r19
 5450 2748 DC01      		movw r26,r24
 5451 274a CD90      		ld r12,X+
 5452 274c DD90      		ld r13,X+
 5453 274e ED90      		ld r14,X+
 5454 2750 FC90      		ld r15,X
 5455 2752 CE01      		movw r24,r28
 5456 2754 895B      		subi r24,-71
 5457 2756 9F4F      		sbci r25,-1
 5458 2758 2F89      		ldd r18,Y+23
 5459 275a 388D      		ldd r19,Y+24
 5460 275c 498D      		ldd r20,Y+25
 5461 275e 5A8D      		ldd r21,Y+26
 5462 2760 FC01      		movw r30,r24
 5463 2762 6081      		ld r22,Z
 5464 2764 7181      		ldd r23,Z+1
 5465 2766 8281      		ldd r24,Z+2
 5466 2768 9381      		ldd r25,Z+3
 5467 276a 0E94 0000 		call __divsf3
 5468 276e DC01      		movw r26,r24
 5469 2770 CB01      		movw r24,r22
 5470 2772 20E0      		ldi r18,0
 5471 2774 30E0      		ldi r19,0
 5472 2776 40E8      		ldi r20,lo8(-128)
 5473 2778 5FE3      		ldi r21,lo8(63)
 5474 277a BC01      		movw r22,r24
 5475 277c CD01      		movw r24,r26
 5476 277e 0E94 0000 		call __addsf3
 5477 2782 DC01      		movw r26,r24
 5478 2784 CB01      		movw r24,r22
 5479 2786 9C01      		movw r18,r24
 5480 2788 AD01      		movw r20,r26
 5481 278a C701      		movw r24,r14
 5482 278c B601      		movw r22,r12
 5483 278e 0E94 0000 		call __mulsf3
 5484 2792 DC01      		movw r26,r24
 5485 2794 CB01      		movw r24,r22
 5486 2796 F801      		movw r30,r16
 5487 2798 8083      		st Z,r24
 5488 279a 9183      		std Z+1,r25
 5489 279c A283      		std Z+2,r26
 5490 279e B383      		std Z+3,r27
 356:lp_solve_5.5/lp_scale.c ****       FColScale[col]*=(1 + ekekm1 / qkm1);
 5491               		.loc 1 356 0 discriminator 3
 5492 27a0 8D81      		ldd r24,Y+5
 5493 27a2 9E81      		ldd r25,Y+6
 5494 27a4 0196      		adiw r24,1
 5495 27a6 9E83      		std Y+6,r25
 5496 27a8 8D83      		std Y+5,r24
 5497               	.L131:
 356:lp_solve_5.5/lp_scale.c ****       FColScale[col]*=(1 + ekekm1 / qkm1);
 5498               		.loc 1 356 0 is_stmt 0 discriminator 1
 5499 27aa 2D81      		ldd r18,Y+5
 5500 27ac 3E81      		ldd r19,Y+6
 5501 27ae 8FA5      		ldd r24,Y+47
 5502 27b0 98A9      		ldd r25,Y+48
 5503 27b2 8217      		cp r24,r18
 5504 27b4 9307      		cpc r25,r19
 5505 27b6 04F0      		brlt .+2
 5506 27b8 00C0      		rjmp .L132
 358:lp_solve_5.5/lp_scale.c ****     for(col=1; col<=colMax; col++)
 5507               		.loc 1 358 0 is_stmt 1
 5508 27ba 81E0      		ldi r24,lo8(1)
 5509 27bc 90E0      		ldi r25,0
 5510 27be 9E83      		std Y+6,r25
 5511 27c0 8D83      		std Y+5,r24
 5512 27c2 00C0      		rjmp .L133
 5513               	.L134:
 359:lp_solve_5.5/lp_scale.c ****       FColScale[col]+=(residual_even[col] / ((REAL) ColCount[col] * qkm1) -
 5514               		.loc 1 359 0 discriminator 3
 5515 27c4 8D81      		ldd r24,Y+5
 5516 27c6 9E81      		ldd r25,Y+6
 5517 27c8 880F      		lsl r24
 5518 27ca 991F      		rol r25
 5519 27cc 880F      		lsl r24
 5520 27ce 991F      		rol r25
 5521 27d0 9E01      		movw r18,r28
 5522 27d2 205A      		subi r18,-96
 5523 27d4 3F4F      		sbci r19,-1
 5524 27d6 D901      		movw r26,r18
 5525 27d8 2D91      		ld r18,X+
 5526 27da 3C91      		ld r19,X
 5527 27dc 8901      		movw r16,r18
 5528 27de 080F      		add r16,r24
 5529 27e0 191F      		adc r17,r25
 5530 27e2 8D81      		ldd r24,Y+5
 5531 27e4 9E81      		ldd r25,Y+6
 5532 27e6 880F      		lsl r24
 5533 27e8 991F      		rol r25
 5534 27ea 880F      		lsl r24
 5535 27ec 991F      		rol r25
 5536 27ee 9E01      		movw r18,r28
 5537 27f0 205A      		subi r18,-96
 5538 27f2 3F4F      		sbci r19,-1
 5539 27f4 F901      		movw r30,r18
 5540 27f6 2081      		ld r18,Z
 5541 27f8 3181      		ldd r19,Z+1
 5542 27fa 820F      		add r24,r18
 5543 27fc 931F      		adc r25,r19
 5544 27fe DC01      		movw r26,r24
 5545 2800 CD90      		ld r12,X+
 5546 2802 DD90      		ld r13,X+
 5547 2804 ED90      		ld r14,X+
 5548 2806 FC90      		ld r15,X
 5549 2808 CE01      		movw r24,r28
 5550 280a 8D5A      		subi r24,-83
 5551 280c 9F4F      		sbci r25,-1
 5552 280e FC01      		movw r30,r24
 5553 2810 2081      		ld r18,Z
 5554 2812 3181      		ldd r19,Z+1
 5555 2814 8D81      		ldd r24,Y+5
 5556 2816 9E81      		ldd r25,Y+6
 5557 2818 880F      		lsl r24
 5558 281a 991F      		rol r25
 5559 281c 880F      		lsl r24
 5560 281e 991F      		rol r25
 5561 2820 820F      		add r24,r18
 5562 2822 931F      		adc r25,r19
 5563 2824 DC01      		movw r26,r24
 5564 2826 8D90      		ld r8,X+
 5565 2828 9D90      		ld r9,X+
 5566 282a AD90      		ld r10,X+
 5567 282c BC90      		ld r11,X
 5568 282e CE01      		movw r24,r28
 5569 2830 875A      		subi r24,-89
 5570 2832 9F4F      		sbci r25,-1
 5571 2834 FC01      		movw r30,r24
 5572 2836 2081      		ld r18,Z
 5573 2838 3181      		ldd r19,Z+1
 5574 283a 8D81      		ldd r24,Y+5
 5575 283c 9E81      		ldd r25,Y+6
 5576 283e 880F      		lsl r24
 5577 2840 991F      		rol r25
 5578 2842 820F      		add r24,r18
 5579 2844 931F      		adc r25,r19
 5580 2846 DC01      		movw r26,r24
 5581 2848 8D91      		ld r24,X+
 5582 284a 9C91      		ld r25,X
 5583 284c 092E      		mov __tmp_reg__,r25
 5584 284e 000C      		lsl r0
 5585 2850 AA0B      		sbc r26,r26
 5586 2852 BB0B      		sbc r27,r27
 5587 2854 BC01      		movw r22,r24
 5588 2856 CD01      		movw r24,r26
 5589 2858 0E94 0000 		call __floatsisf
 5590 285c DC01      		movw r26,r24
 5591 285e CB01      		movw r24,r22
 5592 2860 2F89      		ldd r18,Y+23
 5593 2862 388D      		ldd r19,Y+24
 5594 2864 498D      		ldd r20,Y+25
 5595 2866 5A8D      		ldd r21,Y+26
 5596 2868 BC01      		movw r22,r24
 5597 286a CD01      		movw r24,r26
 5598 286c 0E94 0000 		call __mulsf3
 5599 2870 DC01      		movw r26,r24
 5600 2872 CB01      		movw r24,r22
 5601 2874 9C01      		movw r18,r24
 5602 2876 AD01      		movw r20,r26
 5603 2878 C501      		movw r24,r10
 5604 287a B401      		movw r22,r8
 5605 287c 0E94 0000 		call __divsf3
 5606 2880 DC01      		movw r26,r24
 5607 2882 CB01      		movw r24,r22
 5608 2884 4C01      		movw r8,r24
 5609 2886 5D01      		movw r10,r26
 360:lp_solve_5.5/lp_scale.c ****                        ColScalem2[col] * ekekm1 / qkm1);
 5610               		.loc 1 360 0 discriminator 3
 5611 2888 CE01      		movw r24,r28
 5612 288a 835B      		subi r24,-77
 5613 288c 9F4F      		sbci r25,-1
 5614 288e FC01      		movw r30,r24
 5615 2890 2081      		ld r18,Z
 5616 2892 3181      		ldd r19,Z+1
 5617 2894 8D81      		ldd r24,Y+5
 5618 2896 9E81      		ldd r25,Y+6
 5619 2898 880F      		lsl r24
 5620 289a 991F      		rol r25
 5621 289c 880F      		lsl r24
 5622 289e 991F      		rol r25
 5623 28a0 820F      		add r24,r18
 5624 28a2 931F      		adc r25,r19
 5625 28a4 FC01      		movw r30,r24
 5626 28a6 8081      		ld r24,Z
 5627 28a8 9181      		ldd r25,Z+1
 5628 28aa A281      		ldd r26,Z+2
 5629 28ac B381      		ldd r27,Z+3
 5630 28ae 9E01      		movw r18,r28
 5631 28b0 295B      		subi r18,-71
 5632 28b2 3F4F      		sbci r19,-1
 5633 28b4 F901      		movw r30,r18
 5634 28b6 2081      		ld r18,Z
 5635 28b8 3181      		ldd r19,Z+1
 5636 28ba 4281      		ldd r20,Z+2
 5637 28bc 5381      		ldd r21,Z+3
 5638 28be BC01      		movw r22,r24
 5639 28c0 CD01      		movw r24,r26
 5640 28c2 0E94 0000 		call __mulsf3
 5641 28c6 DC01      		movw r26,r24
 5642 28c8 CB01      		movw r24,r22
 5643 28ca 2F89      		ldd r18,Y+23
 5644 28cc 388D      		ldd r19,Y+24
 5645 28ce 498D      		ldd r20,Y+25
 5646 28d0 5A8D      		ldd r21,Y+26
 5647 28d2 BC01      		movw r22,r24
 5648 28d4 CD01      		movw r24,r26
 5649 28d6 0E94 0000 		call __divsf3
 5650 28da DC01      		movw r26,r24
 5651 28dc CB01      		movw r24,r22
 359:lp_solve_5.5/lp_scale.c ****       FColScale[col]+=(residual_even[col] / ((REAL) ColCount[col] * qkm1) -
 5652               		.loc 1 359 0 discriminator 3
 5653 28de 9C01      		movw r18,r24
 5654 28e0 AD01      		movw r20,r26
 5655 28e2 C501      		movw r24,r10
 5656 28e4 B401      		movw r22,r8
 5657 28e6 0E94 0000 		call __subsf3
 5658 28ea DC01      		movw r26,r24
 5659 28ec CB01      		movw r24,r22
 5660 28ee 9C01      		movw r18,r24
 5661 28f0 AD01      		movw r20,r26
 5662 28f2 C701      		movw r24,r14
 5663 28f4 B601      		movw r22,r12
 5664 28f6 0E94 0000 		call __addsf3
 5665 28fa DC01      		movw r26,r24
 5666 28fc CB01      		movw r24,r22
 5667 28fe F801      		movw r30,r16
 5668 2900 8083      		st Z,r24
 5669 2902 9183      		std Z+1,r25
 5670 2904 A283      		std Z+2,r26
 5671 2906 B383      		std Z+3,r27
 358:lp_solve_5.5/lp_scale.c ****     for(col=1; col<=colMax; col++)
 5672               		.loc 1 358 0 discriminator 3
 5673 2908 8D81      		ldd r24,Y+5
 5674 290a 9E81      		ldd r25,Y+6
 5675 290c 0196      		adiw r24,1
 5676 290e 9E83      		std Y+6,r25
 5677 2910 8D83      		std Y+5,r24
 5678               	.L133:
 358:lp_solve_5.5/lp_scale.c ****     for(col=1; col<=colMax; col++)
 5679               		.loc 1 358 0 is_stmt 0 discriminator 1
 5680 2912 2D81      		ldd r18,Y+5
 5681 2914 3E81      		ldd r19,Y+6
 5682 2916 8FA5      		ldd r24,Y+47
 5683 2918 98A9      		ldd r25,Y+48
 5684 291a 8217      		cp r24,r18
 5685 291c 9307      		cpc r25,r19
 5686 291e 04F0      		brlt .+2
 5687 2920 00C0      		rjmp .L134
 5688               	.L169:
 361:lp_solve_5.5/lp_scale.c ****   }
 362:lp_solve_5.5/lp_scale.c ****   }
 363:lp_solve_5.5/lp_scale.c **** 
 364:lp_solve_5.5/lp_scale.c ****   /* Do validation, if indicated */
 365:lp_solve_5.5/lp_scale.c ****   if(FALSE && mat_validate(mat)){
 366:lp_solve_5.5/lp_scale.c ****     double check, error;
 367:lp_solve_5.5/lp_scale.c **** 
 368:lp_solve_5.5/lp_scale.c ****     /* CHECK: M RowScale + E ColScale = RowSum */
 369:lp_solve_5.5/lp_scale.c ****     error = 0;
 370:lp_solve_5.5/lp_scale.c ****     for(row = 0; row <= lp->rows; row++) {
 371:lp_solve_5.5/lp_scale.c ****       check = (REAL) RowCount[row] * FRowScale[row];
 372:lp_solve_5.5/lp_scale.c ****       if(row == 0) {
 373:lp_solve_5.5/lp_scale.c ****         for(i = 1; i <= colMax; i++) {
 374:lp_solve_5.5/lp_scale.c ****           if(lp->orig_obj[i] != 0)
 375:lp_solve_5.5/lp_scale.c ****             check += FColScale[i];
 376:lp_solve_5.5/lp_scale.c ****         }
 377:lp_solve_5.5/lp_scale.c ****       }
 378:lp_solve_5.5/lp_scale.c ****       else {
 379:lp_solve_5.5/lp_scale.c ****         i = mat->row_end[row-1];
 380:lp_solve_5.5/lp_scale.c ****         ent = mat->row_end[row];
 381:lp_solve_5.5/lp_scale.c ****         for(; i < ent; i++) {
 382:lp_solve_5.5/lp_scale.c ****           col = ROW_MAT_COLNR(i);
 383:lp_solve_5.5/lp_scale.c ****           check += FColScale[col];
 384:lp_solve_5.5/lp_scale.c ****         }
 385:lp_solve_5.5/lp_scale.c ****       }
 386:lp_solve_5.5/lp_scale.c ****       check -= RowSum[row];
 387:lp_solve_5.5/lp_scale.c ****       error += check*check;
 388:lp_solve_5.5/lp_scale.c ****     }
 389:lp_solve_5.5/lp_scale.c **** 
 390:lp_solve_5.5/lp_scale.c ****     /* CHECK: E^T RowScale + N ColScale = ColSum */
 391:lp_solve_5.5/lp_scale.c ****     error = 0;
 392:lp_solve_5.5/lp_scale.c ****     for(col = 1; col <= colMax; col++) {
 393:lp_solve_5.5/lp_scale.c ****       check = (REAL) ColCount[col] * FColScale[col];
 394:lp_solve_5.5/lp_scale.c **** 
 395:lp_solve_5.5/lp_scale.c ****       if(lp->orig_obj[col] != 0)
 396:lp_solve_5.5/lp_scale.c ****         check += FRowScale[0];
 397:lp_solve_5.5/lp_scale.c **** 
 398:lp_solve_5.5/lp_scale.c ****       i = mat->col_end[col-1];
 399:lp_solve_5.5/lp_scale.c ****       ent = mat->col_end[col];
 400:lp_solve_5.5/lp_scale.c ****       rownr = &(COL_MAT_ROWNR(i));
 401:lp_solve_5.5/lp_scale.c ****       for(; i < ent;
 402:lp_solve_5.5/lp_scale.c ****           i++, rownr += matRowColStep) {
 403:lp_solve_5.5/lp_scale.c ****         check += FRowScale[*rownr];
 404:lp_solve_5.5/lp_scale.c ****       }
 405:lp_solve_5.5/lp_scale.c ****       check -= ColSum[col];
 406:lp_solve_5.5/lp_scale.c ****       error += check*check;
 407:lp_solve_5.5/lp_scale.c ****     }
 408:lp_solve_5.5/lp_scale.c ****   }
 409:lp_solve_5.5/lp_scale.c **** 
 410:lp_solve_5.5/lp_scale.c ****   /* Convert to scaling factors (rounding to nearest power
 411:lp_solve_5.5/lp_scale.c ****      of 2 can optionally be done as a separate step later) */
 412:lp_solve_5.5/lp_scale.c ****   for(col = 1; col <= colMax; col++) {
 5689               		.loc 1 412 0 is_stmt 1
 5690 2922 81E0      		ldi r24,lo8(1)
 5691 2924 90E0      		ldi r25,0
 5692 2926 9E83      		std Y+6,r25
 5693 2928 8D83      		std Y+5,r24
 5694 292a 00C0      		rjmp .L135
 5695               	.L143:
 413:lp_solve_5.5/lp_scale.c ****     absvalue = exp(-FColScale[col]);
 5696               		.loc 1 413 0
 5697 292c 8D81      		ldd r24,Y+5
 5698 292e 9E81      		ldd r25,Y+6
 5699 2930 880F      		lsl r24
 5700 2932 991F      		rol r25
 5701 2934 880F      		lsl r24
 5702 2936 991F      		rol r25
 5703 2938 9E01      		movw r18,r28
 5704 293a 205A      		subi r18,-96
 5705 293c 3F4F      		sbci r19,-1
 5706 293e D901      		movw r26,r18
 5707 2940 2D91      		ld r18,X+
 5708 2942 3C91      		ld r19,X
 5709 2944 820F      		add r24,r18
 5710 2946 931F      		adc r25,r19
 5711 2948 FC01      		movw r30,r24
 5712 294a 8081      		ld r24,Z
 5713 294c 9181      		ldd r25,Z+1
 5714 294e A281      		ldd r26,Z+2
 5715 2950 B381      		ldd r27,Z+3
 5716 2952 B058      		subi r27,0x80
 5717 2954 BC01      		movw r22,r24
 5718 2956 CD01      		movw r24,r26
 5719 2958 0E94 0000 		call exp
 5720 295c DC01      		movw r26,r24
 5721 295e CB01      		movw r24,r22
 5722 2960 8F8F      		std Y+31,r24
 5723 2962 98A3      		std Y+32,r25
 5724 2964 A9A3      		std Y+33,r26
 5725 2966 BAA3      		std Y+34,r27
 414:lp_solve_5.5/lp_scale.c ****     if(absvalue < MIN_SCALAR) absvalue = MIN_SCALAR;
 5726               		.loc 1 414 0
 5727 2968 2FEF      		ldi r18,lo8(-1)
 5728 296a 36EE      		ldi r19,lo8(-26)
 5729 296c 4BED      		ldi r20,lo8(-37)
 5730 296e 5EE2      		ldi r21,lo8(46)
 5731 2970 6F8D      		ldd r22,Y+31
 5732 2972 78A1      		ldd r23,Y+32
 5733 2974 89A1      		ldd r24,Y+33
 5734 2976 9AA1      		ldd r25,Y+34
 5735 2978 0E94 0000 		call __ltsf2
 5736 297c 8823      		tst r24
 5737 297e 04F4      		brge .L136
 5738               		.loc 1 414 0 is_stmt 0 discriminator 1
 5739 2980 8FEF      		ldi r24,lo8(-1)
 5740 2982 96EE      		ldi r25,lo8(-26)
 5741 2984 ABED      		ldi r26,lo8(-37)
 5742 2986 BEE2      		ldi r27,lo8(46)
 5743 2988 8F8F      		std Y+31,r24
 5744 298a 98A3      		std Y+32,r25
 5745 298c A9A3      		std Y+33,r26
 5746 298e BAA3      		std Y+34,r27
 5747               	.L136:
 415:lp_solve_5.5/lp_scale.c ****     if(absvalue > MAX_SCALAR) absvalue = MAX_SCALAR;
 5748               		.loc 1 415 0 is_stmt 1
 5749 2990 29EF      		ldi r18,lo8(-7)
 5750 2992 32E0      		ldi r19,lo8(2)
 5751 2994 45E1      		ldi r20,lo8(21)
 5752 2996 50E5      		ldi r21,lo8(80)
 5753 2998 6F8D      		ldd r22,Y+31
 5754 299a 78A1      		ldd r23,Y+32
 5755 299c 89A1      		ldd r24,Y+33
 5756 299e 9AA1      		ldd r25,Y+34
 5757 29a0 0E94 0000 		call __gtsf2
 5758 29a4 1816      		cp __zero_reg__,r24
 5759 29a6 04F4      		brge .L138
 5760               		.loc 1 415 0 is_stmt 0 discriminator 1
 5761 29a8 89EF      		ldi r24,lo8(-7)
 5762 29aa 92E0      		ldi r25,lo8(2)
 5763 29ac A5E1      		ldi r26,lo8(21)
 5764 29ae B0E5      		ldi r27,lo8(80)
 5765 29b0 8F8F      		std Y+31,r24
 5766 29b2 98A3      		std Y+32,r25
 5767 29b4 A9A3      		std Y+33,r26
 5768 29b6 BAA3      		std Y+34,r27
 5769               	.L138:
 416:lp_solve_5.5/lp_scale.c ****     if(!is_int(lp,col) || is_integerscaling(lp))
 5770               		.loc 1 416 0 is_stmt 1
 5771 29b8 2D81      		ldd r18,Y+5
 5772 29ba 3E81      		ldd r19,Y+6
 5773 29bc CE01      		movw r24,r28
 5774 29be 855A      		subi r24,-91
 5775 29c0 9F4F      		sbci r25,-1
 5776 29c2 DC01      		movw r26,r24
 5777 29c4 8D91      		ld r24,X+
 5778 29c6 9C91      		ld r25,X
 5779 29c8 B901      		movw r22,r18
 5780 29ca 0E94 0000 		call is_int
 5781 29ce 8823      		tst r24
 5782 29d0 01F0      		breq .L140
 5783               		.loc 1 416 0 is_stmt 0 discriminator 1
 5784 29d2 CE01      		movw r24,r28
 5785 29d4 855A      		subi r24,-91
 5786 29d6 9F4F      		sbci r25,-1
 5787 29d8 FC01      		movw r30,r24
 5788 29da 8081      		ld r24,Z
 5789 29dc 9181      		ldd r25,Z+1
 5790 29de 0E94 0000 		call is_integerscaling
 5791 29e2 8823      		tst r24
 5792 29e4 01F0      		breq .L141
 5793               	.L140:
 417:lp_solve_5.5/lp_scale.c ****         FColScale[col] = absvalue;
 5794               		.loc 1 417 0 is_stmt 1
 5795 29e6 8D81      		ldd r24,Y+5
 5796 29e8 9E81      		ldd r25,Y+6
 5797 29ea 880F      		lsl r24
 5798 29ec 991F      		rol r25
 5799 29ee 880F      		lsl r24
 5800 29f0 991F      		rol r25
 5801 29f2 9E01      		movw r18,r28
 5802 29f4 205A      		subi r18,-96
 5803 29f6 3F4F      		sbci r19,-1
 5804 29f8 D901      		movw r26,r18
 5805 29fa 2D91      		ld r18,X+
 5806 29fc 3C91      		ld r19,X
 5807 29fe 280F      		add r18,r24
 5808 2a00 391F      		adc r19,r25
 5809 2a02 8F8D      		ldd r24,Y+31
 5810 2a04 98A1      		ldd r25,Y+32
 5811 2a06 A9A1      		ldd r26,Y+33
 5812 2a08 BAA1      		ldd r27,Y+34
 5813 2a0a F901      		movw r30,r18
 5814 2a0c 8083      		st Z,r24
 5815 2a0e 9183      		std Z+1,r25
 5816 2a10 A283      		std Z+2,r26
 5817 2a12 B383      		std Z+3,r27
 5818 2a14 00C0      		rjmp .L142
 5819               	.L141:
 418:lp_solve_5.5/lp_scale.c ****     else
 419:lp_solve_5.5/lp_scale.c ****         FColScale[col] = 1;
 5820               		.loc 1 419 0
 5821 2a16 8D81      		ldd r24,Y+5
 5822 2a18 9E81      		ldd r25,Y+6
 5823 2a1a 880F      		lsl r24
 5824 2a1c 991F      		rol r25
 5825 2a1e 880F      		lsl r24
 5826 2a20 991F      		rol r25
 5827 2a22 9E01      		movw r18,r28
 5828 2a24 205A      		subi r18,-96
 5829 2a26 3F4F      		sbci r19,-1
 5830 2a28 D901      		movw r26,r18
 5831 2a2a 2D91      		ld r18,X+
 5832 2a2c 3C91      		ld r19,X
 5833 2a2e 280F      		add r18,r24
 5834 2a30 391F      		adc r19,r25
 5835 2a32 80E0      		ldi r24,0
 5836 2a34 90E0      		ldi r25,0
 5837 2a36 A0E8      		ldi r26,lo8(-128)
 5838 2a38 BFE3      		ldi r27,lo8(63)
 5839 2a3a F901      		movw r30,r18
 5840 2a3c 8083      		st Z,r24
 5841 2a3e 9183      		std Z+1,r25
 5842 2a40 A283      		std Z+2,r26
 5843 2a42 B383      		std Z+3,r27
 5844               	.L142:
 412:lp_solve_5.5/lp_scale.c ****     absvalue = exp(-FColScale[col]);
 5845               		.loc 1 412 0 discriminator 2
 5846 2a44 8D81      		ldd r24,Y+5
 5847 2a46 9E81      		ldd r25,Y+6
 5848 2a48 0196      		adiw r24,1
 5849 2a4a 9E83      		std Y+6,r25
 5850 2a4c 8D83      		std Y+5,r24
 5851               	.L135:
 412:lp_solve_5.5/lp_scale.c ****     absvalue = exp(-FColScale[col]);
 5852               		.loc 1 412 0 is_stmt 0 discriminator 1
 5853 2a4e 2D81      		ldd r18,Y+5
 5854 2a50 3E81      		ldd r19,Y+6
 5855 2a52 8FA5      		ldd r24,Y+47
 5856 2a54 98A9      		ldd r25,Y+48
 5857 2a56 8217      		cp r24,r18
 5858 2a58 9307      		cpc r25,r19
 5859 2a5a 04F0      		brlt .+2
 5860 2a5c 00C0      		rjmp .L143
 420:lp_solve_5.5/lp_scale.c ****   }
 421:lp_solve_5.5/lp_scale.c ****   for(row = 0; row <= lp->rows; row++) {
 5861               		.loc 1 421 0 is_stmt 1
 5862 2a5e 1C82      		std Y+4,__zero_reg__
 5863 2a60 1B82      		std Y+3,__zero_reg__
 5864 2a62 00C0      		rjmp .L144
 5865               	.L149:
 422:lp_solve_5.5/lp_scale.c ****     absvalue = exp(-FRowScale[row]);
 5866               		.loc 1 422 0
 5867 2a64 8B81      		ldd r24,Y+3
 5868 2a66 9C81      		ldd r25,Y+4
 5869 2a68 880F      		lsl r24
 5870 2a6a 991F      		rol r25
 5871 2a6c 880F      		lsl r24
 5872 2a6e 991F      		rol r25
 5873 2a70 9E01      		movw r18,r28
 5874 2a72 225A      		subi r18,-94
 5875 2a74 3F4F      		sbci r19,-1
 5876 2a76 D901      		movw r26,r18
 5877 2a78 2D91      		ld r18,X+
 5878 2a7a 3C91      		ld r19,X
 5879 2a7c 820F      		add r24,r18
 5880 2a7e 931F      		adc r25,r19
 5881 2a80 FC01      		movw r30,r24
 5882 2a82 8081      		ld r24,Z
 5883 2a84 9181      		ldd r25,Z+1
 5884 2a86 A281      		ldd r26,Z+2
 5885 2a88 B381      		ldd r27,Z+3
 5886 2a8a B058      		subi r27,0x80
 5887 2a8c BC01      		movw r22,r24
 5888 2a8e CD01      		movw r24,r26
 5889 2a90 0E94 0000 		call exp
 5890 2a94 DC01      		movw r26,r24
 5891 2a96 CB01      		movw r24,r22
 5892 2a98 8F8F      		std Y+31,r24
 5893 2a9a 98A3      		std Y+32,r25
 5894 2a9c A9A3      		std Y+33,r26
 5895 2a9e BAA3      		std Y+34,r27
 423:lp_solve_5.5/lp_scale.c ****     if(absvalue < MIN_SCALAR) absvalue = MIN_SCALAR;
 5896               		.loc 1 423 0
 5897 2aa0 2FEF      		ldi r18,lo8(-1)
 5898 2aa2 36EE      		ldi r19,lo8(-26)
 5899 2aa4 4BED      		ldi r20,lo8(-37)
 5900 2aa6 5EE2      		ldi r21,lo8(46)
 5901 2aa8 6F8D      		ldd r22,Y+31
 5902 2aaa 78A1      		ldd r23,Y+32
 5903 2aac 89A1      		ldd r24,Y+33
 5904 2aae 9AA1      		ldd r25,Y+34
 5905 2ab0 0E94 0000 		call __ltsf2
 5906 2ab4 8823      		tst r24
 5907 2ab6 04F4      		brge .L145
 5908               		.loc 1 423 0 is_stmt 0 discriminator 1
 5909 2ab8 8FEF      		ldi r24,lo8(-1)
 5910 2aba 96EE      		ldi r25,lo8(-26)
 5911 2abc ABED      		ldi r26,lo8(-37)
 5912 2abe BEE2      		ldi r27,lo8(46)
 5913 2ac0 8F8F      		std Y+31,r24
 5914 2ac2 98A3      		std Y+32,r25
 5915 2ac4 A9A3      		std Y+33,r26
 5916 2ac6 BAA3      		std Y+34,r27
 5917               	.L145:
 424:lp_solve_5.5/lp_scale.c ****     if(absvalue > MAX_SCALAR) absvalue = MAX_SCALAR;
 5918               		.loc 1 424 0 is_stmt 1
 5919 2ac8 29EF      		ldi r18,lo8(-7)
 5920 2aca 32E0      		ldi r19,lo8(2)
 5921 2acc 45E1      		ldi r20,lo8(21)
 5922 2ace 50E5      		ldi r21,lo8(80)
 5923 2ad0 6F8D      		ldd r22,Y+31
 5924 2ad2 78A1      		ldd r23,Y+32
 5925 2ad4 89A1      		ldd r24,Y+33
 5926 2ad6 9AA1      		ldd r25,Y+34
 5927 2ad8 0E94 0000 		call __gtsf2
 5928 2adc 1816      		cp __zero_reg__,r24
 5929 2ade 04F4      		brge .L147
 5930               		.loc 1 424 0 is_stmt 0 discriminator 1
 5931 2ae0 89EF      		ldi r24,lo8(-7)
 5932 2ae2 92E0      		ldi r25,lo8(2)
 5933 2ae4 A5E1      		ldi r26,lo8(21)
 5934 2ae6 B0E5      		ldi r27,lo8(80)
 5935 2ae8 8F8F      		std Y+31,r24
 5936 2aea 98A3      		std Y+32,r25
 5937 2aec A9A3      		std Y+33,r26
 5938 2aee BAA3      		std Y+34,r27
 5939               	.L147:
 425:lp_solve_5.5/lp_scale.c ****     FRowScale[row] = absvalue;
 5940               		.loc 1 425 0 is_stmt 1 discriminator 2
 5941 2af0 8B81      		ldd r24,Y+3
 5942 2af2 9C81      		ldd r25,Y+4
 5943 2af4 880F      		lsl r24
 5944 2af6 991F      		rol r25
 5945 2af8 880F      		lsl r24
 5946 2afa 991F      		rol r25
 5947 2afc 9E01      		movw r18,r28
 5948 2afe 225A      		subi r18,-94
 5949 2b00 3F4F      		sbci r19,-1
 5950 2b02 D901      		movw r26,r18
 5951 2b04 2D91      		ld r18,X+
 5952 2b06 3C91      		ld r19,X
 5953 2b08 280F      		add r18,r24
 5954 2b0a 391F      		adc r19,r25
 5955 2b0c 8F8D      		ldd r24,Y+31
 5956 2b0e 98A1      		ldd r25,Y+32
 5957 2b10 A9A1      		ldd r26,Y+33
 5958 2b12 BAA1      		ldd r27,Y+34
 5959 2b14 F901      		movw r30,r18
 5960 2b16 8083      		st Z,r24
 5961 2b18 9183      		std Z+1,r25
 5962 2b1a A283      		std Z+2,r26
 5963 2b1c B383      		std Z+3,r27
 421:lp_solve_5.5/lp_scale.c ****     absvalue = exp(-FRowScale[row]);
 5964               		.loc 1 421 0 discriminator 2
 5965 2b1e 8B81      		ldd r24,Y+3
 5966 2b20 9C81      		ldd r25,Y+4
 5967 2b22 0196      		adiw r24,1
 5968 2b24 9C83      		std Y+4,r25
 5969 2b26 8B83      		std Y+3,r24
 5970               	.L144:
 421:lp_solve_5.5/lp_scale.c ****     absvalue = exp(-FRowScale[row]);
 5971               		.loc 1 421 0 is_stmt 0 discriminator 1
 5972 2b28 CE01      		movw r24,r28
 5973 2b2a 855A      		subi r24,-91
 5974 2b2c 9F4F      		sbci r25,-1
 5975 2b2e DC01      		movw r26,r24
 5976 2b30 8D91      		ld r24,X+
 5977 2b32 9C91      		ld r25,X
 5978 2b34 8651      		subi r24,22
 5979 2b36 9E4F      		sbci r25,-2
 5980 2b38 FC01      		movw r30,r24
 5981 2b3a 2081      		ld r18,Z
 5982 2b3c 3181      		ldd r19,Z+1
 5983 2b3e 8B81      		ldd r24,Y+3
 5984 2b40 9C81      		ldd r25,Y+4
 5985 2b42 2817      		cp r18,r24
 5986 2b44 3907      		cpc r19,r25
 5987 2b46 04F0      		brlt .+2
 5988 2b48 00C0      		rjmp .L149
 426:lp_solve_5.5/lp_scale.c ****   }
 427:lp_solve_5.5/lp_scale.c **** 
 428:lp_solve_5.5/lp_scale.c ****  /* free temporary memory */
 429:lp_solve_5.5/lp_scale.c ****   FREE(RowSum);
 5989               		.loc 1 429 0 is_stmt 1
 5990 2b4a CE01      		movw r24,r28
 5991 2b4c 815B      		subi r24,-79
 5992 2b4e 9F4F      		sbci r25,-1
 5993 2b50 DC01      		movw r26,r24
 5994 2b52 8D91      		ld r24,X+
 5995 2b54 9C91      		ld r25,X
 5996 2b56 892B      		or r24,r25
 5997 2b58 01F0      		breq .L150
 5998               		.loc 1 429 0 is_stmt 0 discriminator 1
 5999 2b5a CE01      		movw r24,r28
 6000 2b5c 815B      		subi r24,-79
 6001 2b5e 9F4F      		sbci r25,-1
 6002 2b60 FC01      		movw r30,r24
 6003 2b62 8081      		ld r24,Z
 6004 2b64 9181      		ldd r25,Z+1
 6005 2b66 0E94 0000 		call free
 6006 2b6a CE01      		movw r24,r28
 6007 2b6c 815B      		subi r24,-79
 6008 2b6e 9F4F      		sbci r25,-1
 6009 2b70 DC01      		movw r26,r24
 6010 2b72 1D92      		st X+,__zero_reg__
 6011 2b74 1C92      		st X,__zero_reg__
 6012               	.L150:
 430:lp_solve_5.5/lp_scale.c ****   FREE(ColSum);
 6013               		.loc 1 430 0 is_stmt 1
 6014 2b76 CE01      		movw r24,r28
 6015 2b78 8F5A      		subi r24,-81
 6016 2b7a 9F4F      		sbci r25,-1
 6017 2b7c FC01      		movw r30,r24
 6018 2b7e 8081      		ld r24,Z
 6019 2b80 9181      		ldd r25,Z+1
 6020 2b82 892B      		or r24,r25
 6021 2b84 01F0      		breq .L151
 6022               		.loc 1 430 0 is_stmt 0 discriminator 1
 6023 2b86 CE01      		movw r24,r28
 6024 2b88 8F5A      		subi r24,-81
 6025 2b8a 9F4F      		sbci r25,-1
 6026 2b8c DC01      		movw r26,r24
 6027 2b8e 8D91      		ld r24,X+
 6028 2b90 9C91      		ld r25,X
 6029 2b92 0E94 0000 		call free
 6030 2b96 CE01      		movw r24,r28
 6031 2b98 8F5A      		subi r24,-81
 6032 2b9a 9F4F      		sbci r25,-1
 6033 2b9c FC01      		movw r30,r24
 6034 2b9e 1182      		std Z+1,__zero_reg__
 6035 2ba0 1082      		st Z,__zero_reg__
 6036               	.L151:
 431:lp_solve_5.5/lp_scale.c ****   FREE(RowCount);
 6037               		.loc 1 431 0 is_stmt 1
 6038 2ba2 CE01      		movw r24,r28
 6039 2ba4 895A      		subi r24,-87
 6040 2ba6 9F4F      		sbci r25,-1
 6041 2ba8 DC01      		movw r26,r24
 6042 2baa 8D91      		ld r24,X+
 6043 2bac 9C91      		ld r25,X
 6044 2bae 892B      		or r24,r25
 6045 2bb0 01F0      		breq .L152
 6046               		.loc 1 431 0 is_stmt 0 discriminator 1
 6047 2bb2 CE01      		movw r24,r28
 6048 2bb4 895A      		subi r24,-87
 6049 2bb6 9F4F      		sbci r25,-1
 6050 2bb8 FC01      		movw r30,r24
 6051 2bba 8081      		ld r24,Z
 6052 2bbc 9181      		ldd r25,Z+1
 6053 2bbe 0E94 0000 		call free
 6054 2bc2 CE01      		movw r24,r28
 6055 2bc4 895A      		subi r24,-87
 6056 2bc6 9F4F      		sbci r25,-1
 6057 2bc8 DC01      		movw r26,r24
 6058 2bca 1D92      		st X+,__zero_reg__
 6059 2bcc 1C92      		st X,__zero_reg__
 6060               	.L152:
 432:lp_solve_5.5/lp_scale.c ****   FREE(ColCount);
 6061               		.loc 1 432 0 is_stmt 1
 6062 2bce CE01      		movw r24,r28
 6063 2bd0 875A      		subi r24,-89
 6064 2bd2 9F4F      		sbci r25,-1
 6065 2bd4 FC01      		movw r30,r24
 6066 2bd6 8081      		ld r24,Z
 6067 2bd8 9181      		ldd r25,Z+1
 6068 2bda 892B      		or r24,r25
 6069 2bdc 01F0      		breq .L153
 6070               		.loc 1 432 0 is_stmt 0 discriminator 1
 6071 2bde CE01      		movw r24,r28
 6072 2be0 875A      		subi r24,-89
 6073 2be2 9F4F      		sbci r25,-1
 6074 2be4 DC01      		movw r26,r24
 6075 2be6 8D91      		ld r24,X+
 6076 2be8 9C91      		ld r25,X
 6077 2bea 0E94 0000 		call free
 6078 2bee CE01      		movw r24,r28
 6079 2bf0 875A      		subi r24,-89
 6080 2bf2 9F4F      		sbci r25,-1
 6081 2bf4 FC01      		movw r30,r24
 6082 2bf6 1182      		std Z+1,__zero_reg__
 6083 2bf8 1082      		st Z,__zero_reg__
 6084               	.L153:
 433:lp_solve_5.5/lp_scale.c ****   FREE(residual_even);
 6085               		.loc 1 433 0 is_stmt 1
 6086 2bfa CE01      		movw r24,r28
 6087 2bfc 8D5A      		subi r24,-83
 6088 2bfe 9F4F      		sbci r25,-1
 6089 2c00 DC01      		movw r26,r24
 6090 2c02 8D91      		ld r24,X+
 6091 2c04 9C91      		ld r25,X
 6092 2c06 892B      		or r24,r25
 6093 2c08 01F0      		breq .L154
 6094               		.loc 1 433 0 is_stmt 0 discriminator 1
 6095 2c0a CE01      		movw r24,r28
 6096 2c0c 8D5A      		subi r24,-83
 6097 2c0e 9F4F      		sbci r25,-1
 6098 2c10 FC01      		movw r30,r24
 6099 2c12 8081      		ld r24,Z
 6100 2c14 9181      		ldd r25,Z+1
 6101 2c16 0E94 0000 		call free
 6102 2c1a CE01      		movw r24,r28
 6103 2c1c 8D5A      		subi r24,-83
 6104 2c1e 9F4F      		sbci r25,-1
 6105 2c20 DC01      		movw r26,r24
 6106 2c22 1D92      		st X+,__zero_reg__
 6107 2c24 1C92      		st X,__zero_reg__
 6108               	.L154:
 434:lp_solve_5.5/lp_scale.c ****   FREE(residual_odd);
 6109               		.loc 1 434 0 is_stmt 1
 6110 2c26 CE01      		movw r24,r28
 6111 2c28 8B5A      		subi r24,-85
 6112 2c2a 9F4F      		sbci r25,-1
 6113 2c2c FC01      		movw r30,r24
 6114 2c2e 8081      		ld r24,Z
 6115 2c30 9181      		ldd r25,Z+1
 6116 2c32 892B      		or r24,r25
 6117 2c34 01F0      		breq .L155
 6118               		.loc 1 434 0 is_stmt 0 discriminator 1
 6119 2c36 CE01      		movw r24,r28
 6120 2c38 8B5A      		subi r24,-85
 6121 2c3a 9F4F      		sbci r25,-1
 6122 2c3c DC01      		movw r26,r24
 6123 2c3e 8D91      		ld r24,X+
 6124 2c40 9C91      		ld r25,X
 6125 2c42 0E94 0000 		call free
 6126 2c46 CE01      		movw r24,r28
 6127 2c48 8B5A      		subi r24,-85
 6128 2c4a 9F4F      		sbci r25,-1
 6129 2c4c FC01      		movw r30,r24
 6130 2c4e 1182      		std Z+1,__zero_reg__
 6131 2c50 1082      		st Z,__zero_reg__
 6132               	.L155:
 435:lp_solve_5.5/lp_scale.c ****   FREE(RowScalem2);
 6133               		.loc 1 435 0 is_stmt 1
 6134 2c52 CE01      		movw r24,r28
 6135 2c54 855B      		subi r24,-75
 6136 2c56 9F4F      		sbci r25,-1
 6137 2c58 DC01      		movw r26,r24
 6138 2c5a 8D91      		ld r24,X+
 6139 2c5c 9C91      		ld r25,X
 6140 2c5e 892B      		or r24,r25
 6141 2c60 01F0      		breq .L156
 6142               		.loc 1 435 0 is_stmt 0 discriminator 1
 6143 2c62 CE01      		movw r24,r28
 6144 2c64 855B      		subi r24,-75
 6145 2c66 9F4F      		sbci r25,-1
 6146 2c68 FC01      		movw r30,r24
 6147 2c6a 8081      		ld r24,Z
 6148 2c6c 9181      		ldd r25,Z+1
 6149 2c6e 0E94 0000 		call free
 6150 2c72 CE01      		movw r24,r28
 6151 2c74 855B      		subi r24,-75
 6152 2c76 9F4F      		sbci r25,-1
 6153 2c78 DC01      		movw r26,r24
 6154 2c7a 1D92      		st X+,__zero_reg__
 6155 2c7c 1C92      		st X,__zero_reg__
 6156               	.L156:
 436:lp_solve_5.5/lp_scale.c ****   FREE(ColScalem2);
 6157               		.loc 1 436 0 is_stmt 1
 6158 2c7e CE01      		movw r24,r28
 6159 2c80 835B      		subi r24,-77
 6160 2c82 9F4F      		sbci r25,-1
 6161 2c84 FC01      		movw r30,r24
 6162 2c86 8081      		ld r24,Z
 6163 2c88 9181      		ldd r25,Z+1
 6164 2c8a 892B      		or r24,r25
 6165 2c8c 01F0      		breq .L157
 6166               		.loc 1 436 0 is_stmt 0 discriminator 1
 6167 2c8e CE01      		movw r24,r28
 6168 2c90 835B      		subi r24,-77
 6169 2c92 9F4F      		sbci r25,-1
 6170 2c94 DC01      		movw r26,r24
 6171 2c96 8D91      		ld r24,X+
 6172 2c98 9C91      		ld r25,X
 6173 2c9a 0E94 0000 		call free
 6174 2c9e CE01      		movw r24,r28
 6175 2ca0 835B      		subi r24,-77
 6176 2ca2 9F4F      		sbci r25,-1
 6177 2ca4 FC01      		movw r30,r24
 6178 2ca6 1182      		std Z+1,__zero_reg__
 6179 2ca8 1082      		st Z,__zero_reg__
 6180               	.L157:
 437:lp_solve_5.5/lp_scale.c **** 
 438:lp_solve_5.5/lp_scale.c ****   return(Result);
 6181               		.loc 1 438 0 is_stmt 1
 6182 2caa 8BA1      		ldd r24,Y+35
 6183 2cac 9CA1      		ldd r25,Y+36
 6184               	.L158:
 6185               	/* epilogue start */
 439:lp_solve_5.5/lp_scale.c **** 
 440:lp_solve_5.5/lp_scale.c **** }
 6186               		.loc 1 440 0 discriminator 1
 6187 2cae CF59      		subi r28,-97
 6188 2cb0 DF4F      		sbci r29,-1
 6189 2cb2 0FB6      		in __tmp_reg__,__SREG__
 6190 2cb4 F894      		cli
 6191 2cb6 DEBF      		out __SP_H__,r29
 6192 2cb8 0FBE      		out __SREG__,__tmp_reg__
 6193 2cba CDBF      		out __SP_L__,r28
 6194 2cbc DF91      		pop r29
 6195 2cbe CF91      		pop r28
 6196 2cc0 1F91      		pop r17
 6197 2cc2 0F91      		pop r16
 6198 2cc4 FF90      		pop r15
 6199 2cc6 EF90      		pop r14
 6200 2cc8 DF90      		pop r13
 6201 2cca CF90      		pop r12
 6202 2ccc BF90      		pop r11
 6203 2cce AF90      		pop r10
 6204 2cd0 9F90      		pop r9
 6205 2cd2 8F90      		pop r8
 6206 2cd4 7F90      		pop r7
 6207 2cd6 6F90      		pop r6
 6208 2cd8 5F90      		pop r5
 6209 2cda 4F90      		pop r4
 6210 2cdc 0895      		ret
 6211               		.cfi_endproc
 6212               	.LFE12:
 6214               	.global	scaleCR
 6216               	scaleCR:
 6217               	.LFB13:
 441:lp_solve_5.5/lp_scale.c **** 
 442:lp_solve_5.5/lp_scale.c **** STATIC MYBOOL scaleCR(lprec *lp, REAL *scaledelta)
 443:lp_solve_5.5/lp_scale.c **** {
 6218               		.loc 1 443 0
 6219               		.cfi_startproc
 6220 2cde CF93      		push r28
 6221               	.LCFI46:
 6222               		.cfi_def_cfa_offset 3
 6223               		.cfi_offset 28, -2
 6224 2ce0 DF93      		push r29
 6225               	.LCFI47:
 6226               		.cfi_def_cfa_offset 4
 6227               		.cfi_offset 29, -3
 6228 2ce2 CDB7      		in r28,__SP_L__
 6229 2ce4 DEB7      		in r29,__SP_H__
 6230               	.LCFI48:
 6231               		.cfi_def_cfa_register 28
 6232 2ce6 2897      		sbiw r28,8
 6233               	.LCFI49:
 6234               		.cfi_def_cfa_offset 12
 6235 2ce8 0FB6      		in __tmp_reg__,__SREG__
 6236 2cea F894      		cli
 6237 2cec DEBF      		out __SP_H__,r29
 6238 2cee 0FBE      		out __SREG__,__tmp_reg__
 6239 2cf0 CDBF      		out __SP_L__,r28
 6240               	/* prologue: function */
 6241               	/* frame size = 8 */
 6242               	/* stack size = 10 */
 6243               	.L__stack_usage = 10
 6244 2cf2 9E83      		std Y+6,r25
 6245 2cf4 8D83      		std Y+5,r24
 6246 2cf6 7887      		std Y+8,r23
 6247 2cf8 6F83      		std Y+7,r22
 444:lp_solve_5.5/lp_scale.c ****   REAL *scalechange = NULL;
 6248               		.loc 1 444 0
 6249 2cfa 1C82      		std Y+4,__zero_reg__
 6250 2cfc 1B82      		std Y+3,__zero_reg__
 445:lp_solve_5.5/lp_scale.c ****   int  Result;
 446:lp_solve_5.5/lp_scale.c **** 
 447:lp_solve_5.5/lp_scale.c ****   if(!lp->scaling_used) {
 6251               		.loc 1 447 0
 6252 2cfe 8D81      		ldd r24,Y+5
 6253 2d00 9E81      		ldd r25,Y+6
 6254 2d02 8A53      		subi r24,58
 6255 2d04 9D4F      		sbci r25,-3
 6256 2d06 FC01      		movw r30,r24
 6257 2d08 8081      		ld r24,Z
 6258 2d0a 8823      		tst r24
 6259 2d0c 01F0      		breq .+2
 6260 2d0e 00C0      		rjmp .L177
 448:lp_solve_5.5/lp_scale.c ****     allocREAL(lp, &lp->scalars, lp->sum_alloc + 1, FALSE);
 6261               		.loc 1 448 0
 6262 2d10 8D81      		ldd r24,Y+5
 6263 2d12 9E81      		ldd r25,Y+6
 6264 2d14 8C50      		subi r24,12
 6265 2d16 9E4F      		sbci r25,-2
 6266 2d18 FC01      		movw r30,r24
 6267 2d1a 8081      		ld r24,Z
 6268 2d1c 9181      		ldd r25,Z+1
 6269 2d1e AC01      		movw r20,r24
 6270 2d20 4F5F      		subi r20,-1
 6271 2d22 5F4F      		sbci r21,-1
 6272 2d24 8D81      		ldd r24,Y+5
 6273 2d26 9E81      		ldd r25,Y+6
 6274 2d28 BC01      		movw r22,r24
 6275 2d2a 6C53      		subi r22,60
 6276 2d2c 7D4F      		sbci r23,-3
 6277 2d2e 8D81      		ldd r24,Y+5
 6278 2d30 9E81      		ldd r25,Y+6
 6279 2d32 20E0      		ldi r18,0
 6280 2d34 0E94 0000 		call allocREAL
 449:lp_solve_5.5/lp_scale.c ****     for(Result = 0; Result <= lp->sum; Result++)
 6281               		.loc 1 449 0
 6282 2d38 1A82      		std Y+2,__zero_reg__
 6283 2d3a 1982      		std Y+1,__zero_reg__
 6284 2d3c 00C0      		rjmp .L178
 6285               	.L179:
 450:lp_solve_5.5/lp_scale.c ****       lp->scalars[Result] = 1;
 6286               		.loc 1 450 0 discriminator 3
 6287 2d3e 8D81      		ldd r24,Y+5
 6288 2d40 9E81      		ldd r25,Y+6
 6289 2d42 8C53      		subi r24,60
 6290 2d44 9D4F      		sbci r25,-3
 6291 2d46 FC01      		movw r30,r24
 6292 2d48 2081      		ld r18,Z
 6293 2d4a 3181      		ldd r19,Z+1
 6294 2d4c 8981      		ldd r24,Y+1
 6295 2d4e 9A81      		ldd r25,Y+2
 6296 2d50 880F      		lsl r24
 6297 2d52 991F      		rol r25
 6298 2d54 880F      		lsl r24
 6299 2d56 991F      		rol r25
 6300 2d58 280F      		add r18,r24
 6301 2d5a 391F      		adc r19,r25
 6302 2d5c 80E0      		ldi r24,0
 6303 2d5e 90E0      		ldi r25,0
 6304 2d60 A0E8      		ldi r26,lo8(-128)
 6305 2d62 BFE3      		ldi r27,lo8(63)
 6306 2d64 F901      		movw r30,r18
 6307 2d66 8083      		st Z,r24
 6308 2d68 9183      		std Z+1,r25
 6309 2d6a A283      		std Z+2,r26
 6310 2d6c B383      		std Z+3,r27
 449:lp_solve_5.5/lp_scale.c ****     for(Result = 0; Result <= lp->sum; Result++)
 6311               		.loc 1 449 0 discriminator 3
 6312 2d6e 8981      		ldd r24,Y+1
 6313 2d70 9A81      		ldd r25,Y+2
 6314 2d72 0196      		adiw r24,1
 6315 2d74 9A83      		std Y+2,r25
 6316 2d76 8983      		std Y+1,r24
 6317               	.L178:
 449:lp_solve_5.5/lp_scale.c ****     for(Result = 0; Result <= lp->sum; Result++)
 6318               		.loc 1 449 0 is_stmt 0 discriminator 1
 6319 2d78 8D81      		ldd r24,Y+5
 6320 2d7a 9E81      		ldd r25,Y+6
 6321 2d7c 8851      		subi r24,24
 6322 2d7e 9E4F      		sbci r25,-2
 6323 2d80 FC01      		movw r30,r24
 6324 2d82 2081      		ld r18,Z
 6325 2d84 3181      		ldd r19,Z+1
 6326 2d86 8981      		ldd r24,Y+1
 6327 2d88 9A81      		ldd r25,Y+2
 6328 2d8a 2817      		cp r18,r24
 6329 2d8c 3907      		cpc r19,r25
 6330 2d8e 04F4      		brge .L179
 451:lp_solve_5.5/lp_scale.c ****     lp->scaling_used = TRUE;
 6331               		.loc 1 451 0 is_stmt 1
 6332 2d90 8D81      		ldd r24,Y+5
 6333 2d92 9E81      		ldd r25,Y+6
 6334 2d94 8A53      		subi r24,58
 6335 2d96 9D4F      		sbci r25,-3
 6336 2d98 21E0      		ldi r18,lo8(1)
 6337 2d9a FC01      		movw r30,r24
 6338 2d9c 2083      		st Z,r18
 6339               	.L177:
 452:lp_solve_5.5/lp_scale.c ****   }
 453:lp_solve_5.5/lp_scale.c **** 
 454:lp_solve_5.5/lp_scale.c ****   if(scaledelta == NULL)
 6340               		.loc 1 454 0
 6341 2d9e 8F81      		ldd r24,Y+7
 6342 2da0 9885      		ldd r25,Y+8
 6343 2da2 892B      		or r24,r25
 6344 2da4 01F4      		brne .L180
 455:lp_solve_5.5/lp_scale.c ****     allocREAL(lp, &scalechange, lp->sum + 1, FALSE);
 6345               		.loc 1 455 0
 6346 2da6 8D81      		ldd r24,Y+5
 6347 2da8 9E81      		ldd r25,Y+6
 6348 2daa 8851      		subi r24,24
 6349 2dac 9E4F      		sbci r25,-2
 6350 2dae FC01      		movw r30,r24
 6351 2db0 8081      		ld r24,Z
 6352 2db2 9181      		ldd r25,Z+1
 6353 2db4 AC01      		movw r20,r24
 6354 2db6 4F5F      		subi r20,-1
 6355 2db8 5F4F      		sbci r21,-1
 6356 2dba BE01      		movw r22,r28
 6357 2dbc 6D5F      		subi r22,-3
 6358 2dbe 7F4F      		sbci r23,-1
 6359 2dc0 8D81      		ldd r24,Y+5
 6360 2dc2 9E81      		ldd r25,Y+6
 6361 2dc4 20E0      		ldi r18,0
 6362 2dc6 0E94 0000 		call allocREAL
 6363 2dca 00C0      		rjmp .L181
 6364               	.L180:
 456:lp_solve_5.5/lp_scale.c ****   else
 457:lp_solve_5.5/lp_scale.c ****     scalechange = scaledelta;
 6365               		.loc 1 457 0
 6366 2dcc 8F81      		ldd r24,Y+7
 6367 2dce 9885      		ldd r25,Y+8
 6368 2dd0 9C83      		std Y+4,r25
 6369 2dd2 8B83      		std Y+3,r24
 6370               	.L181:
 458:lp_solve_5.5/lp_scale.c **** 
 459:lp_solve_5.5/lp_scale.c ****   Result=CurtisReidScales(lp, FALSE, scalechange, &scalechange[lp->rows]);
 6371               		.loc 1 459 0
 6372 2dd4 2B81      		ldd r18,Y+3
 6373 2dd6 3C81      		ldd r19,Y+4
 6374 2dd8 8D81      		ldd r24,Y+5
 6375 2dda 9E81      		ldd r25,Y+6
 6376 2ddc 8651      		subi r24,22
 6377 2dde 9E4F      		sbci r25,-2
 6378 2de0 FC01      		movw r30,r24
 6379 2de2 8081      		ld r24,Z
 6380 2de4 9181      		ldd r25,Z+1
 6381 2de6 880F      		lsl r24
 6382 2de8 991F      		rol r25
 6383 2dea 880F      		lsl r24
 6384 2dec 991F      		rol r25
 6385 2dee 280F      		add r18,r24
 6386 2df0 391F      		adc r19,r25
 6387 2df2 4B81      		ldd r20,Y+3
 6388 2df4 5C81      		ldd r21,Y+4
 6389 2df6 8D81      		ldd r24,Y+5
 6390 2df8 9E81      		ldd r25,Y+6
 6391 2dfa 60E0      		ldi r22,0
 6392 2dfc 0E94 0000 		call CurtisReidScales
 6393 2e00 9A83      		std Y+2,r25
 6394 2e02 8983      		std Y+1,r24
 460:lp_solve_5.5/lp_scale.c ****   if(Result>0) {
 6395               		.loc 1 460 0
 6396 2e04 8981      		ldd r24,Y+1
 6397 2e06 9A81      		ldd r25,Y+2
 6398 2e08 1816      		cp __zero_reg__,r24
 6399 2e0a 1906      		cpc __zero_reg__,r25
 6400 2e0c 04F4      		brge .L182
 461:lp_solve_5.5/lp_scale.c **** 
 462:lp_solve_5.5/lp_scale.c ****     /* Do the scaling*/
 463:lp_solve_5.5/lp_scale.c ****     if(scale_updaterows(lp, scalechange, TRUE) ||
 6401               		.loc 1 463 0
 6402 2e0e 2B81      		ldd r18,Y+3
 6403 2e10 3C81      		ldd r19,Y+4
 6404 2e12 8D81      		ldd r24,Y+5
 6405 2e14 9E81      		ldd r25,Y+6
 6406 2e16 41E0      		ldi r20,lo8(1)
 6407 2e18 B901      		movw r22,r18
 6408 2e1a 0E94 0000 		call scale_updaterows
 6409 2e1e 8823      		tst r24
 6410 2e20 01F4      		brne .L183
 464:lp_solve_5.5/lp_scale.c ****        scale_updatecolumns(lp, &scalechange[lp->rows], TRUE))
 6411               		.loc 1 464 0 discriminator 1
 6412 2e22 2B81      		ldd r18,Y+3
 6413 2e24 3C81      		ldd r19,Y+4
 6414 2e26 8D81      		ldd r24,Y+5
 6415 2e28 9E81      		ldd r25,Y+6
 6416 2e2a 8651      		subi r24,22
 6417 2e2c 9E4F      		sbci r25,-2
 6418 2e2e FC01      		movw r30,r24
 6419 2e30 8081      		ld r24,Z
 6420 2e32 9181      		ldd r25,Z+1
 6421 2e34 880F      		lsl r24
 6422 2e36 991F      		rol r25
 6423 2e38 880F      		lsl r24
 6424 2e3a 991F      		rol r25
 6425 2e3c 280F      		add r18,r24
 6426 2e3e 391F      		adc r19,r25
 6427 2e40 8D81      		ldd r24,Y+5
 6428 2e42 9E81      		ldd r25,Y+6
 6429 2e44 41E0      		ldi r20,lo8(1)
 6430 2e46 B901      		movw r22,r18
 6431 2e48 0E94 0000 		call scale_updatecolumns
 463:lp_solve_5.5/lp_scale.c ****        scale_updatecolumns(lp, &scalechange[lp->rows], TRUE))
 6432               		.loc 1 463 0 discriminator 1
 6433 2e4c 8823      		tst r24
 6434 2e4e 01F0      		breq .L184
 6435               	.L183:
 465:lp_solve_5.5/lp_scale.c ****       lp->scalemode |= SCALE_CURTISREID;
 6436               		.loc 1 465 0
 6437 2e50 8D81      		ldd r24,Y+5
 6438 2e52 9E81      		ldd r25,Y+6
 6439 2e54 8259      		subi r24,-110
 6440 2e56 9D4F      		sbci r25,-3
 6441 2e58 FC01      		movw r30,r24
 6442 2e5a 8081      		ld r24,Z
 6443 2e5c 9181      		ldd r25,Z+1
 6444 2e5e 9C01      		movw r18,r24
 6445 2e60 2760      		ori r18,7
 6446 2e62 8D81      		ldd r24,Y+5
 6447 2e64 9E81      		ldd r25,Y+6
 6448 2e66 8259      		subi r24,-110
 6449 2e68 9D4F      		sbci r25,-3
 6450 2e6a FC01      		movw r30,r24
 6451 2e6c 3183      		std Z+1,r19
 6452 2e6e 2083      		st Z,r18
 6453               	.L184:
 466:lp_solve_5.5/lp_scale.c **** 
 467:lp_solve_5.5/lp_scale.c ****     set_action(&lp->spx_action, ACTION_REBASE | ACTION_REINVERT | ACTION_RECOMPUTE);
 6454               		.loc 1 467 0
 6455 2e70 8D81      		ldd r24,Y+5
 6456 2e72 9E81      		ldd r25,Y+6
 6457 2e74 8E50      		subi r24,14
 6458 2e76 9D4F      		sbci r25,-3
 6459 2e78 66E1      		ldi r22,lo8(22)
 6460 2e7a 70E0      		ldi r23,0
 6461 2e7c 0E94 0000 		call set_action
 6462               	.L182:
 468:lp_solve_5.5/lp_scale.c ****   }
 469:lp_solve_5.5/lp_scale.c **** 
 470:lp_solve_5.5/lp_scale.c ****   if(scaledelta == NULL)
 6463               		.loc 1 470 0
 6464 2e80 8F81      		ldd r24,Y+7
 6465 2e82 9885      		ldd r25,Y+8
 6466 2e84 892B      		or r24,r25
 6467 2e86 01F4      		brne .L185
 471:lp_solve_5.5/lp_scale.c ****     FREE(scalechange);
 6468               		.loc 1 471 0
 6469 2e88 8B81      		ldd r24,Y+3
 6470 2e8a 9C81      		ldd r25,Y+4
 6471 2e8c 892B      		or r24,r25
 6472 2e8e 01F0      		breq .L185
 6473               		.loc 1 471 0 is_stmt 0 discriminator 1
 6474 2e90 8B81      		ldd r24,Y+3
 6475 2e92 9C81      		ldd r25,Y+4
 6476 2e94 0E94 0000 		call free
 6477 2e98 1C82      		std Y+4,__zero_reg__
 6478 2e9a 1B82      		std Y+3,__zero_reg__
 6479               	.L185:
 472:lp_solve_5.5/lp_scale.c **** 
 473:lp_solve_5.5/lp_scale.c ****   return((MYBOOL) (Result > 0));
 6480               		.loc 1 473 0 is_stmt 1
 6481 2e9c 21E0      		ldi r18,lo8(1)
 6482 2e9e 8981      		ldd r24,Y+1
 6483 2ea0 9A81      		ldd r25,Y+2
 6484 2ea2 1816      		cp __zero_reg__,r24
 6485 2ea4 1906      		cpc __zero_reg__,r25
 6486 2ea6 04F0      		brlt .L186
 6487 2ea8 20E0      		ldi r18,0
 6488               	.L186:
 6489 2eaa 822F      		mov r24,r18
 6490               	/* epilogue start */
 474:lp_solve_5.5/lp_scale.c **** }
 6491               		.loc 1 474 0
 6492 2eac 2896      		adiw r28,8
 6493 2eae 0FB6      		in __tmp_reg__,__SREG__
 6494 2eb0 F894      		cli
 6495 2eb2 DEBF      		out __SP_H__,r29
 6496 2eb4 0FBE      		out __SREG__,__tmp_reg__
 6497 2eb6 CDBF      		out __SP_L__,r28
 6498 2eb8 DF91      		pop r29
 6499 2eba CF91      		pop r28
 6500 2ebc 0895      		ret
 6501               		.cfi_endproc
 6502               	.LFE13:
 6504               	.global	transform_for_scale
 6506               	transform_for_scale:
 6507               	.LFB14:
 475:lp_solve_5.5/lp_scale.c **** 
 476:lp_solve_5.5/lp_scale.c **** STATIC MYBOOL transform_for_scale(lprec *lp, REAL *value)
 477:lp_solve_5.5/lp_scale.c **** {
 6508               		.loc 1 477 0
 6509               		.cfi_startproc
 6510 2ebe CF93      		push r28
 6511               	.LCFI50:
 6512               		.cfi_def_cfa_offset 3
 6513               		.cfi_offset 28, -2
 6514 2ec0 DF93      		push r29
 6515               	.LCFI51:
 6516               		.cfi_def_cfa_offset 4
 6517               		.cfi_offset 29, -3
 6518 2ec2 00D0      		rcall .
 6519 2ec4 00D0      		rcall .
 6520 2ec6 1F92      		push __zero_reg__
 6521               	.LCFI52:
 6522               		.cfi_def_cfa_offset 9
 6523 2ec8 CDB7      		in r28,__SP_L__
 6524 2eca DEB7      		in r29,__SP_H__
 6525               	.LCFI53:
 6526               		.cfi_def_cfa_register 28
 6527               	/* prologue: function */
 6528               	/* frame size = 5 */
 6529               	/* stack size = 7 */
 6530               	.L__stack_usage = 7
 6531 2ecc 9B83      		std Y+3,r25
 6532 2ece 8A83      		std Y+2,r24
 6533 2ed0 7D83      		std Y+5,r23
 6534 2ed2 6C83      		std Y+4,r22
 478:lp_solve_5.5/lp_scale.c ****   MYBOOL Accept = TRUE;
 6535               		.loc 1 478 0
 6536 2ed4 81E0      		ldi r24,lo8(1)
 6537 2ed6 8983      		std Y+1,r24
 479:lp_solve_5.5/lp_scale.c ****   *value = fabs(*value);
 6538               		.loc 1 479 0
 6539 2ed8 8C81      		ldd r24,Y+4
 6540 2eda 9D81      		ldd r25,Y+5
 6541 2edc FC01      		movw r30,r24
 6542 2ede 8081      		ld r24,Z
 6543 2ee0 9181      		ldd r25,Z+1
 6544 2ee2 A281      		ldd r26,Z+2
 6545 2ee4 B381      		ldd r27,Z+3
 6546 2ee6 BF77      		andi r27,0x7f
 6547 2ee8 2C81      		ldd r18,Y+4
 6548 2eea 3D81      		ldd r19,Y+5
 6549 2eec F901      		movw r30,r18
 6550 2eee 8083      		st Z,r24
 6551 2ef0 9183      		std Z+1,r25
 6552 2ef2 A283      		std Z+2,r26
 6553 2ef4 B383      		std Z+3,r27
 480:lp_solve_5.5/lp_scale.c **** #ifdef Paranoia
 481:lp_solve_5.5/lp_scale.c ****   if(*value < lp->epsmachine) {
 482:lp_solve_5.5/lp_scale.c ****     Accept = FALSE;
 483:lp_solve_5.5/lp_scale.c ****     report(lp, SEVERE, "transform_for_scale: A zero-valued entry was passed\n");
 484:lp_solve_5.5/lp_scale.c ****   }
 485:lp_solve_5.5/lp_scale.c ****   else
 486:lp_solve_5.5/lp_scale.c **** #endif
 487:lp_solve_5.5/lp_scale.c ****   if(is_scalemode(lp, SCALE_LOGARITHMIC))
 6554               		.loc 1 487 0
 6555 2ef6 8A81      		ldd r24,Y+2
 6556 2ef8 9B81      		ldd r25,Y+3
 6557 2efa 60E1      		ldi r22,lo8(16)
 6558 2efc 70E0      		ldi r23,0
 6559 2efe 0E94 0000 		call is_scalemode
 6560 2f02 8823      		tst r24
 6561 2f04 01F0      		breq .L189
 488:lp_solve_5.5/lp_scale.c ****     *value = log(*value);
 6562               		.loc 1 488 0
 6563 2f06 8C81      		ldd r24,Y+4
 6564 2f08 9D81      		ldd r25,Y+5
 6565 2f0a FC01      		movw r30,r24
 6566 2f0c 8081      		ld r24,Z
 6567 2f0e 9181      		ldd r25,Z+1
 6568 2f10 A281      		ldd r26,Z+2
 6569 2f12 B381      		ldd r27,Z+3
 6570 2f14 BC01      		movw r22,r24
 6571 2f16 CD01      		movw r24,r26
 6572 2f18 0E94 0000 		call log
 6573 2f1c DC01      		movw r26,r24
 6574 2f1e CB01      		movw r24,r22
 6575 2f20 2C81      		ldd r18,Y+4
 6576 2f22 3D81      		ldd r19,Y+5
 6577 2f24 F901      		movw r30,r18
 6578 2f26 8083      		st Z,r24
 6579 2f28 9183      		std Z+1,r25
 6580 2f2a A283      		std Z+2,r26
 6581 2f2c B383      		std Z+3,r27
 6582 2f2e 00C0      		rjmp .L190
 6583               	.L189:
 489:lp_solve_5.5/lp_scale.c ****   else if(is_scalemode(lp, SCALE_QUADRATIC))
 6584               		.loc 1 489 0
 6585 2f30 8A81      		ldd r24,Y+2
 6586 2f32 9B81      		ldd r25,Y+3
 6587 2f34 68E0      		ldi r22,lo8(8)
 6588 2f36 70E0      		ldi r23,0
 6589 2f38 0E94 0000 		call is_scalemode
 6590 2f3c 8823      		tst r24
 6591 2f3e 01F0      		breq .L190
 490:lp_solve_5.5/lp_scale.c ****     (*value) *= (*value);
 6592               		.loc 1 490 0
 6593 2f40 8C81      		ldd r24,Y+4
 6594 2f42 9D81      		ldd r25,Y+5
 6595 2f44 FC01      		movw r30,r24
 6596 2f46 8081      		ld r24,Z
 6597 2f48 9181      		ldd r25,Z+1
 6598 2f4a A281      		ldd r26,Z+2
 6599 2f4c B381      		ldd r27,Z+3
 6600 2f4e 2C81      		ldd r18,Y+4
 6601 2f50 3D81      		ldd r19,Y+5
 6602 2f52 F901      		movw r30,r18
 6603 2f54 2081      		ld r18,Z
 6604 2f56 3181      		ldd r19,Z+1
 6605 2f58 4281      		ldd r20,Z+2
 6606 2f5a 5381      		ldd r21,Z+3
 6607 2f5c BC01      		movw r22,r24
 6608 2f5e CD01      		movw r24,r26
 6609 2f60 0E94 0000 		call __mulsf3
 6610 2f64 DC01      		movw r26,r24
 6611 2f66 CB01      		movw r24,r22
 6612 2f68 2C81      		ldd r18,Y+4
 6613 2f6a 3D81      		ldd r19,Y+5
 6614 2f6c F901      		movw r30,r18
 6615 2f6e 8083      		st Z,r24
 6616 2f70 9183      		std Z+1,r25
 6617 2f72 A283      		std Z+2,r26
 6618 2f74 B383      		std Z+3,r27
 6619               	.L190:
 491:lp_solve_5.5/lp_scale.c ****   return( Accept );
 6620               		.loc 1 491 0
 6621 2f76 8981      		ldd r24,Y+1
 6622               	/* epilogue start */
 492:lp_solve_5.5/lp_scale.c **** }
 6623               		.loc 1 492 0
 6624 2f78 0F90      		pop __tmp_reg__
 6625 2f7a 0F90      		pop __tmp_reg__
 6626 2f7c 0F90      		pop __tmp_reg__
 6627 2f7e 0F90      		pop __tmp_reg__
 6628 2f80 0F90      		pop __tmp_reg__
 6629 2f82 DF91      		pop r29
 6630 2f84 CF91      		pop r28
 6631 2f86 0895      		ret
 6632               		.cfi_endproc
 6633               	.LFE14:
 6635               	.global	accumulate_for_scale
 6637               	accumulate_for_scale:
 6638               	.LFB15:
 493:lp_solve_5.5/lp_scale.c **** 
 494:lp_solve_5.5/lp_scale.c **** STATIC void accumulate_for_scale(lprec *lp, REAL *min, REAL *max, REAL value)
 495:lp_solve_5.5/lp_scale.c **** {
 6639               		.loc 1 495 0
 6640               		.cfi_startproc
 6641 2f88 0F93      		push r16
 6642               	.LCFI54:
 6643               		.cfi_def_cfa_offset 3
 6644               		.cfi_offset 16, -2
 6645 2f8a 1F93      		push r17
 6646               	.LCFI55:
 6647               		.cfi_def_cfa_offset 4
 6648               		.cfi_offset 17, -3
 6649 2f8c CF93      		push r28
 6650               	.LCFI56:
 6651               		.cfi_def_cfa_offset 5
 6652               		.cfi_offset 28, -4
 6653 2f8e DF93      		push r29
 6654               	.LCFI57:
 6655               		.cfi_def_cfa_offset 6
 6656               		.cfi_offset 29, -5
 6657 2f90 CDB7      		in r28,__SP_L__
 6658 2f92 DEB7      		in r29,__SP_H__
 6659               	.LCFI58:
 6660               		.cfi_def_cfa_register 28
 6661 2f94 2A97      		sbiw r28,10
 6662               	.LCFI59:
 6663               		.cfi_def_cfa_offset 16
 6664 2f96 0FB6      		in __tmp_reg__,__SREG__
 6665 2f98 F894      		cli
 6666 2f9a DEBF      		out __SP_H__,r29
 6667 2f9c 0FBE      		out __SREG__,__tmp_reg__
 6668 2f9e CDBF      		out __SP_L__,r28
 6669               	/* prologue: function */
 6670               	/* frame size = 10 */
 6671               	/* stack size = 14 */
 6672               	.L__stack_usage = 14
 6673 2fa0 9A83      		std Y+2,r25
 6674 2fa2 8983      		std Y+1,r24
 6675 2fa4 7C83      		std Y+4,r23
 6676 2fa6 6B83      		std Y+3,r22
 6677 2fa8 5E83      		std Y+6,r21
 6678 2faa 4D83      		std Y+5,r20
 6679 2fac 0F83      		std Y+7,r16
 6680 2fae 1887      		std Y+8,r17
 6681 2fb0 2987      		std Y+9,r18
 6682 2fb2 3A87      		std Y+10,r19
 496:lp_solve_5.5/lp_scale.c ****   if(transform_for_scale(lp, &value)) {
 6683               		.loc 1 496 0
 6684 2fb4 9E01      		movw r18,r28
 6685 2fb6 295F      		subi r18,-7
 6686 2fb8 3F4F      		sbci r19,-1
 6687 2fba 8981      		ldd r24,Y+1
 6688 2fbc 9A81      		ldd r25,Y+2
 6689 2fbe B901      		movw r22,r18
 6690 2fc0 0E94 0000 		call transform_for_scale
 6691 2fc4 8823      		tst r24
 6692 2fc6 01F4      		brne .+2
 6693 2fc8 00C0      		rjmp .L200
 497:lp_solve_5.5/lp_scale.c ****     if(is_scaletype(lp, SCALE_MEAN)) {
 6694               		.loc 1 497 0
 6695 2fca 8981      		ldd r24,Y+1
 6696 2fcc 9A81      		ldd r25,Y+2
 6697 2fce 63E0      		ldi r22,lo8(3)
 6698 2fd0 70E0      		ldi r23,0
 6699 2fd2 0E94 0000 		call is_scaletype
 6700 2fd6 8823      		tst r24
 6701 2fd8 01F0      		breq .L194
 498:lp_solve_5.5/lp_scale.c ****       *max += value;
 6702               		.loc 1 498 0
 6703 2fda 8D81      		ldd r24,Y+5
 6704 2fdc 9E81      		ldd r25,Y+6
 6705 2fde FC01      		movw r30,r24
 6706 2fe0 8081      		ld r24,Z
 6707 2fe2 9181      		ldd r25,Z+1
 6708 2fe4 A281      		ldd r26,Z+2
 6709 2fe6 B381      		ldd r27,Z+3
 6710 2fe8 2F81      		ldd r18,Y+7
 6711 2fea 3885      		ldd r19,Y+8
 6712 2fec 4985      		ldd r20,Y+9
 6713 2fee 5A85      		ldd r21,Y+10
 6714 2ff0 BC01      		movw r22,r24
 6715 2ff2 CD01      		movw r24,r26
 6716 2ff4 0E94 0000 		call __addsf3
 6717 2ff8 DC01      		movw r26,r24
 6718 2ffa CB01      		movw r24,r22
 6719 2ffc 2D81      		ldd r18,Y+5
 6720 2ffe 3E81      		ldd r19,Y+6
 6721 3000 F901      		movw r30,r18
 6722 3002 8083      		st Z,r24
 6723 3004 9183      		std Z+1,r25
 6724 3006 A283      		std Z+2,r26
 6725 3008 B383      		std Z+3,r27
 499:lp_solve_5.5/lp_scale.c ****       *min += 1;
 6726               		.loc 1 499 0
 6727 300a 8B81      		ldd r24,Y+3
 6728 300c 9C81      		ldd r25,Y+4
 6729 300e FC01      		movw r30,r24
 6730 3010 8081      		ld r24,Z
 6731 3012 9181      		ldd r25,Z+1
 6732 3014 A281      		ldd r26,Z+2
 6733 3016 B381      		ldd r27,Z+3
 6734 3018 20E0      		ldi r18,0
 6735 301a 30E0      		ldi r19,0
 6736 301c 40E8      		ldi r20,lo8(-128)
 6737 301e 5FE3      		ldi r21,lo8(63)
 6738 3020 BC01      		movw r22,r24
 6739 3022 CD01      		movw r24,r26
 6740 3024 0E94 0000 		call __addsf3
 6741 3028 DC01      		movw r26,r24
 6742 302a CB01      		movw r24,r22
 6743 302c 2B81      		ldd r18,Y+3
 6744 302e 3C81      		ldd r19,Y+4
 6745 3030 F901      		movw r30,r18
 6746 3032 8083      		st Z,r24
 6747 3034 9183      		std Z+1,r25
 6748 3036 A283      		std Z+2,r26
 6749 3038 B383      		std Z+3,r27
 500:lp_solve_5.5/lp_scale.c ****     }
 501:lp_solve_5.5/lp_scale.c ****     else {
 502:lp_solve_5.5/lp_scale.c ****       SETMAX(*max, value);
 503:lp_solve_5.5/lp_scale.c ****       SETMIN(*min, value);
 504:lp_solve_5.5/lp_scale.c ****     }
 505:lp_solve_5.5/lp_scale.c ****   }
 506:lp_solve_5.5/lp_scale.c **** }
 6750               		.loc 1 506 0
 6751 303a 00C0      		rjmp .L200
 6752               	.L194:
 502:lp_solve_5.5/lp_scale.c ****       SETMIN(*min, value);
 6753               		.loc 1 502 0
 6754 303c 8D81      		ldd r24,Y+5
 6755 303e 9E81      		ldd r25,Y+6
 6756 3040 FC01      		movw r30,r24
 6757 3042 8081      		ld r24,Z
 6758 3044 9181      		ldd r25,Z+1
 6759 3046 A281      		ldd r26,Z+2
 6760 3048 B381      		ldd r27,Z+3
 6761 304a 2F81      		ldd r18,Y+7
 6762 304c 3885      		ldd r19,Y+8
 6763 304e 4985      		ldd r20,Y+9
 6764 3050 5A85      		ldd r21,Y+10
 6765 3052 BC01      		movw r22,r24
 6766 3054 CD01      		movw r24,r26
 6767 3056 0E94 0000 		call __ltsf2
 6768 305a 8823      		tst r24
 6769 305c 04F4      		brge .L195
 502:lp_solve_5.5/lp_scale.c ****       SETMIN(*min, value);
 6770               		.loc 1 502 0 is_stmt 0 discriminator 1
 6771 305e 8F81      		ldd r24,Y+7
 6772 3060 9885      		ldd r25,Y+8
 6773 3062 A985      		ldd r26,Y+9
 6774 3064 BA85      		ldd r27,Y+10
 6775 3066 2D81      		ldd r18,Y+5
 6776 3068 3E81      		ldd r19,Y+6
 6777 306a F901      		movw r30,r18
 6778 306c 8083      		st Z,r24
 6779 306e 9183      		std Z+1,r25
 6780 3070 A283      		std Z+2,r26
 6781 3072 B383      		std Z+3,r27
 6782               	.L195:
 503:lp_solve_5.5/lp_scale.c ****     }
 6783               		.loc 1 503 0 is_stmt 1
 6784 3074 8B81      		ldd r24,Y+3
 6785 3076 9C81      		ldd r25,Y+4
 6786 3078 FC01      		movw r30,r24
 6787 307a 8081      		ld r24,Z
 6788 307c 9181      		ldd r25,Z+1
 6789 307e A281      		ldd r26,Z+2
 6790 3080 B381      		ldd r27,Z+3
 6791 3082 2F81      		ldd r18,Y+7
 6792 3084 3885      		ldd r19,Y+8
 6793 3086 4985      		ldd r20,Y+9
 6794 3088 5A85      		ldd r21,Y+10
 6795 308a BC01      		movw r22,r24
 6796 308c CD01      		movw r24,r26
 6797 308e 0E94 0000 		call __gtsf2
 6798 3092 1816      		cp __zero_reg__,r24
 6799 3094 04F0      		brlt .L199
 6800               		.loc 1 506 0
 6801 3096 00C0      		rjmp .L200
 6802               	.L199:
 503:lp_solve_5.5/lp_scale.c ****     }
 6803               		.loc 1 503 0 discriminator 1
 6804 3098 8F81      		ldd r24,Y+7
 6805 309a 9885      		ldd r25,Y+8
 6806 309c A985      		ldd r26,Y+9
 6807 309e BA85      		ldd r27,Y+10
 6808 30a0 2B81      		ldd r18,Y+3
 6809 30a2 3C81      		ldd r19,Y+4
 6810 30a4 F901      		movw r30,r18
 6811 30a6 8083      		st Z,r24
 6812 30a8 9183      		std Z+1,r25
 6813 30aa A283      		std Z+2,r26
 6814 30ac B383      		std Z+3,r27
 6815               	.L200:
 6816               		.loc 1 506 0
 6817 30ae 0000      		nop
 6818               	/* epilogue start */
 6819 30b0 2A96      		adiw r28,10
 6820 30b2 0FB6      		in __tmp_reg__,__SREG__
 6821 30b4 F894      		cli
 6822 30b6 DEBF      		out __SP_H__,r29
 6823 30b8 0FBE      		out __SREG__,__tmp_reg__
 6824 30ba CDBF      		out __SP_L__,r28
 6825 30bc DF91      		pop r29
 6826 30be CF91      		pop r28
 6827 30c0 1F91      		pop r17
 6828 30c2 0F91      		pop r16
 6829 30c4 0895      		ret
 6830               		.cfi_endproc
 6831               	.LFE15:
 6833               	.global	__eqsf2
 6834               	.global	minmax_to_scale
 6836               	minmax_to_scale:
 6837               	.LFB16:
 507:lp_solve_5.5/lp_scale.c **** 
 508:lp_solve_5.5/lp_scale.c **** STATIC REAL minmax_to_scale(lprec *lp, REAL min, REAL max, int itemcount)
 509:lp_solve_5.5/lp_scale.c **** {
 6838               		.loc 1 509 0
 6839               		.cfi_startproc
 6840 30c6 EF92      		push r14
 6841               	.LCFI60:
 6842               		.cfi_def_cfa_offset 3
 6843               		.cfi_offset 14, -2
 6844 30c8 FF92      		push r15
 6845               	.LCFI61:
 6846               		.cfi_def_cfa_offset 4
 6847               		.cfi_offset 15, -3
 6848 30ca 0F93      		push r16
 6849               	.LCFI62:
 6850               		.cfi_def_cfa_offset 5
 6851               		.cfi_offset 16, -4
 6852 30cc 1F93      		push r17
 6853               	.LCFI63:
 6854               		.cfi_def_cfa_offset 6
 6855               		.cfi_offset 17, -5
 6856 30ce CF93      		push r28
 6857               	.LCFI64:
 6858               		.cfi_def_cfa_offset 7
 6859               		.cfi_offset 28, -6
 6860 30d0 DF93      		push r29
 6861               	.LCFI65:
 6862               		.cfi_def_cfa_offset 8
 6863               		.cfi_offset 29, -7
 6864 30d2 CDB7      		in r28,__SP_L__
 6865 30d4 DEB7      		in r29,__SP_H__
 6866               	.LCFI66:
 6867               		.cfi_def_cfa_register 28
 6868 30d6 6097      		sbiw r28,16
 6869               	.LCFI67:
 6870               		.cfi_def_cfa_offset 24
 6871 30d8 0FB6      		in __tmp_reg__,__SREG__
 6872 30da F894      		cli
 6873 30dc DEBF      		out __SP_H__,r29
 6874 30de 0FBE      		out __SREG__,__tmp_reg__
 6875 30e0 CDBF      		out __SP_L__,r28
 6876               	/* prologue: function */
 6877               	/* frame size = 16 */
 6878               	/* stack size = 22 */
 6879               	.L__stack_usage = 22
 6880 30e2 9E83      		std Y+6,r25
 6881 30e4 8D83      		std Y+5,r24
 6882 30e6 4F83      		std Y+7,r20
 6883 30e8 5887      		std Y+8,r21
 6884 30ea 6987      		std Y+9,r22
 6885 30ec 7A87      		std Y+10,r23
 6886 30ee 0B87      		std Y+11,r16
 6887 30f0 1C87      		std Y+12,r17
 6888 30f2 2D87      		std Y+13,r18
 6889 30f4 3E87      		std Y+14,r19
 6890 30f6 F88A      		std Y+16,r15
 6891 30f8 EF86      		std Y+15,r14
 510:lp_solve_5.5/lp_scale.c ****   REAL scale;
 511:lp_solve_5.5/lp_scale.c **** 
 512:lp_solve_5.5/lp_scale.c ****   /* Initialize according to transformation / weighting model */
 513:lp_solve_5.5/lp_scale.c ****   if(is_scalemode(lp, SCALE_LOGARITHMIC))
 6892               		.loc 1 513 0
 6893 30fa 8D81      		ldd r24,Y+5
 6894 30fc 9E81      		ldd r25,Y+6
 6895 30fe 60E1      		ldi r22,lo8(16)
 6896 3100 70E0      		ldi r23,0
 6897 3102 0E94 0000 		call is_scalemode
 6898 3106 8823      		tst r24
 6899 3108 01F0      		breq .L202
 514:lp_solve_5.5/lp_scale.c ****     scale = 0;
 6900               		.loc 1 514 0
 6901 310a 1982      		std Y+1,__zero_reg__
 6902 310c 1A82      		std Y+2,__zero_reg__
 6903 310e 1B82      		std Y+3,__zero_reg__
 6904 3110 1C82      		std Y+4,__zero_reg__
 6905 3112 00C0      		rjmp .L203
 6906               	.L202:
 515:lp_solve_5.5/lp_scale.c ****   else
 516:lp_solve_5.5/lp_scale.c ****     scale = 1;
 6907               		.loc 1 516 0
 6908 3114 80E0      		ldi r24,0
 6909 3116 90E0      		ldi r25,0
 6910 3118 A0E8      		ldi r26,lo8(-128)
 6911 311a BFE3      		ldi r27,lo8(63)
 6912 311c 8983      		std Y+1,r24
 6913 311e 9A83      		std Y+2,r25
 6914 3120 AB83      		std Y+3,r26
 6915 3122 BC83      		std Y+4,r27
 6916               	.L203:
 517:lp_solve_5.5/lp_scale.c ****   if(itemcount <= 0)
 6917               		.loc 1 517 0
 6918 3124 8F85      		ldd r24,Y+15
 6919 3126 9889      		ldd r25,Y+16
 6920 3128 1816      		cp __zero_reg__,r24
 6921 312a 1906      		cpc __zero_reg__,r25
 6922 312c 04F0      		brlt .L204
 518:lp_solve_5.5/lp_scale.c ****     return(scale);
 6923               		.loc 1 518 0
 6924 312e 8981      		ldd r24,Y+1
 6925 3130 9A81      		ldd r25,Y+2
 6926 3132 AB81      		ldd r26,Y+3
 6927 3134 BC81      		ldd r27,Y+4
 6928 3136 00C0      		rjmp .L205
 6929               	.L204:
 519:lp_solve_5.5/lp_scale.c **** 
 520:lp_solve_5.5/lp_scale.c ****   /* Compute base scalar according to chosen scaling type */
 521:lp_solve_5.5/lp_scale.c ****   if(is_scaletype(lp, SCALE_MEAN)) {
 6930               		.loc 1 521 0
 6931 3138 8D81      		ldd r24,Y+5
 6932 313a 9E81      		ldd r25,Y+6
 6933 313c 63E0      		ldi r22,lo8(3)
 6934 313e 70E0      		ldi r23,0
 6935 3140 0E94 0000 		call is_scaletype
 6936 3144 8823      		tst r24
 6937 3146 01F0      		breq .L206
 522:lp_solve_5.5/lp_scale.c ****     if(min > 0)
 6938               		.loc 1 522 0
 6939 3148 20E0      		ldi r18,0
 6940 314a 30E0      		ldi r19,0
 6941 314c A901      		movw r20,r18
 6942 314e 6F81      		ldd r22,Y+7
 6943 3150 7885      		ldd r23,Y+8
 6944 3152 8985      		ldd r24,Y+9
 6945 3154 9A85      		ldd r25,Y+10
 6946 3156 0E94 0000 		call __gtsf2
 6947 315a 1816      		cp __zero_reg__,r24
 6948 315c 04F0      		brlt .+2
 6949 315e 00C0      		rjmp .L209
 523:lp_solve_5.5/lp_scale.c ****       scale = max / min;
 6950               		.loc 1 523 0
 6951 3160 2F81      		ldd r18,Y+7
 6952 3162 3885      		ldd r19,Y+8
 6953 3164 4985      		ldd r20,Y+9
 6954 3166 5A85      		ldd r21,Y+10
 6955 3168 6B85      		ldd r22,Y+11
 6956 316a 7C85      		ldd r23,Y+12
 6957 316c 8D85      		ldd r24,Y+13
 6958 316e 9E85      		ldd r25,Y+14
 6959 3170 0E94 0000 		call __divsf3
 6960 3174 DC01      		movw r26,r24
 6961 3176 CB01      		movw r24,r22
 6962 3178 8983      		std Y+1,r24
 6963 317a 9A83      		std Y+2,r25
 6964 317c AB83      		std Y+3,r26
 6965 317e BC83      		std Y+4,r27
 6966 3180 00C0      		rjmp .L209
 6967               	.L206:
 524:lp_solve_5.5/lp_scale.c ****   }
 525:lp_solve_5.5/lp_scale.c ****   else if(is_scaletype(lp, SCALE_RANGE))
 6968               		.loc 1 525 0
 6969 3182 8D81      		ldd r24,Y+5
 6970 3184 9E81      		ldd r25,Y+6
 6971 3186 62E0      		ldi r22,lo8(2)
 6972 3188 70E0      		ldi r23,0
 6973 318a 0E94 0000 		call is_scaletype
 6974 318e 8823      		tst r24
 6975 3190 01F0      		breq .L210
 526:lp_solve_5.5/lp_scale.c ****     scale = (max + min) / 2;
 6976               		.loc 1 526 0
 6977 3192 2F81      		ldd r18,Y+7
 6978 3194 3885      		ldd r19,Y+8
 6979 3196 4985      		ldd r20,Y+9
 6980 3198 5A85      		ldd r21,Y+10
 6981 319a 6B85      		ldd r22,Y+11
 6982 319c 7C85      		ldd r23,Y+12
 6983 319e 8D85      		ldd r24,Y+13
 6984 31a0 9E85      		ldd r25,Y+14
 6985 31a2 0E94 0000 		call __addsf3
 6986 31a6 DC01      		movw r26,r24
 6987 31a8 CB01      		movw r24,r22
 6988 31aa 20E0      		ldi r18,0
 6989 31ac 30E0      		ldi r19,0
 6990 31ae 40E0      		ldi r20,0
 6991 31b0 50E4      		ldi r21,lo8(64)
 6992 31b2 BC01      		movw r22,r24
 6993 31b4 CD01      		movw r24,r26
 6994 31b6 0E94 0000 		call __divsf3
 6995 31ba DC01      		movw r26,r24
 6996 31bc CB01      		movw r24,r22
 6997 31be 8983      		std Y+1,r24
 6998 31c0 9A83      		std Y+2,r25
 6999 31c2 AB83      		std Y+3,r26
 7000 31c4 BC83      		std Y+4,r27
 7001 31c6 00C0      		rjmp .L209
 7002               	.L210:
 527:lp_solve_5.5/lp_scale.c ****   else if(is_scaletype(lp, SCALE_GEOMETRIC))
 7003               		.loc 1 527 0
 7004 31c8 8D81      		ldd r24,Y+5
 7005 31ca 9E81      		ldd r25,Y+6
 7006 31cc 64E0      		ldi r22,lo8(4)
 7007 31ce 70E0      		ldi r23,0
 7008 31d0 0E94 0000 		call is_scaletype
 7009 31d4 8823      		tst r24
 7010 31d6 01F0      		breq .L211
 528:lp_solve_5.5/lp_scale.c ****     scale = sqrt(min*max);
 7011               		.loc 1 528 0
 7012 31d8 2B85      		ldd r18,Y+11
 7013 31da 3C85      		ldd r19,Y+12
 7014 31dc 4D85      		ldd r20,Y+13
 7015 31de 5E85      		ldd r21,Y+14
 7016 31e0 6F81      		ldd r22,Y+7
 7017 31e2 7885      		ldd r23,Y+8
 7018 31e4 8985      		ldd r24,Y+9
 7019 31e6 9A85      		ldd r25,Y+10
 7020 31e8 0E94 0000 		call __mulsf3
 7021 31ec DC01      		movw r26,r24
 7022 31ee CB01      		movw r24,r22
 7023 31f0 BC01      		movw r22,r24
 7024 31f2 CD01      		movw r24,r26
 7025 31f4 0E94 0000 		call sqrt
 7026 31f8 DC01      		movw r26,r24
 7027 31fa CB01      		movw r24,r22
 7028 31fc 8983      		std Y+1,r24
 7029 31fe 9A83      		std Y+2,r25
 7030 3200 AB83      		std Y+3,r26
 7031 3202 BC83      		std Y+4,r27
 7032 3204 00C0      		rjmp .L209
 7033               	.L211:
 529:lp_solve_5.5/lp_scale.c ****   else if(is_scaletype(lp, SCALE_EXTREME))
 7034               		.loc 1 529 0
 7035 3206 8D81      		ldd r24,Y+5
 7036 3208 9E81      		ldd r25,Y+6
 7037 320a 61E0      		ldi r22,lo8(1)
 7038 320c 70E0      		ldi r23,0
 7039 320e 0E94 0000 		call is_scaletype
 7040 3212 8823      		tst r24
 7041 3214 01F0      		breq .L209
 530:lp_solve_5.5/lp_scale.c ****     scale = max;
 7042               		.loc 1 530 0
 7043 3216 8B85      		ldd r24,Y+11
 7044 3218 9C85      		ldd r25,Y+12
 7045 321a AD85      		ldd r26,Y+13
 7046 321c BE85      		ldd r27,Y+14
 7047 321e 8983      		std Y+1,r24
 7048 3220 9A83      		std Y+2,r25
 7049 3222 AB83      		std Y+3,r26
 7050 3224 BC83      		std Y+4,r27
 7051               	.L209:
 531:lp_solve_5.5/lp_scale.c **** 
 532:lp_solve_5.5/lp_scale.c ****   /* Compute final scalar according to transformation / weighting model */
 533:lp_solve_5.5/lp_scale.c ****   if(is_scalemode(lp, SCALE_LOGARITHMIC))
 7052               		.loc 1 533 0
 7053 3226 8D81      		ldd r24,Y+5
 7054 3228 9E81      		ldd r25,Y+6
 7055 322a 60E1      		ldi r22,lo8(16)
 7056 322c 70E0      		ldi r23,0
 7057 322e 0E94 0000 		call is_scalemode
 7058 3232 8823      		tst r24
 7059 3234 01F0      		breq .L212
 534:lp_solve_5.5/lp_scale.c ****     scale = exp(-scale);
 7060               		.loc 1 534 0
 7061 3236 8981      		ldd r24,Y+1
 7062 3238 9A81      		ldd r25,Y+2
 7063 323a AB81      		ldd r26,Y+3
 7064 323c BC81      		ldd r27,Y+4
 7065 323e B058      		subi r27,0x80
 7066 3240 BC01      		movw r22,r24
 7067 3242 CD01      		movw r24,r26
 7068 3244 0E94 0000 		call exp
 7069 3248 DC01      		movw r26,r24
 7070 324a CB01      		movw r24,r22
 7071 324c 8983      		std Y+1,r24
 7072 324e 9A83      		std Y+2,r25
 7073 3250 AB83      		std Y+3,r26
 7074 3252 BC83      		std Y+4,r27
 7075 3254 00C0      		rjmp .L213
 7076               	.L212:
 535:lp_solve_5.5/lp_scale.c ****   else if(is_scalemode(lp, SCALE_QUADRATIC)) {
 7077               		.loc 1 535 0
 7078 3256 8D81      		ldd r24,Y+5
 7079 3258 9E81      		ldd r25,Y+6
 7080 325a 68E0      		ldi r22,lo8(8)
 7081 325c 70E0      		ldi r23,0
 7082 325e 0E94 0000 		call is_scalemode
 7083 3262 8823      		tst r24
 7084 3264 01F0      		breq .L214
 536:lp_solve_5.5/lp_scale.c ****     if(scale == 0)
 7085               		.loc 1 536 0
 7086 3266 20E0      		ldi r18,0
 7087 3268 30E0      		ldi r19,0
 7088 326a A901      		movw r20,r18
 7089 326c 6981      		ldd r22,Y+1
 7090 326e 7A81      		ldd r23,Y+2
 7091 3270 8B81      		ldd r24,Y+3
 7092 3272 9C81      		ldd r25,Y+4
 7093 3274 0E94 0000 		call __eqsf2
 7094 3278 8823      		tst r24
 7095 327a 01F4      		brne .L229
 537:lp_solve_5.5/lp_scale.c ****       scale = 1;
 7096               		.loc 1 537 0
 7097 327c 80E0      		ldi r24,0
 7098 327e 90E0      		ldi r25,0
 7099 3280 A0E8      		ldi r26,lo8(-128)
 7100 3282 BFE3      		ldi r27,lo8(63)
 7101 3284 8983      		std Y+1,r24
 7102 3286 9A83      		std Y+2,r25
 7103 3288 AB83      		std Y+3,r26
 7104 328a BC83      		std Y+4,r27
 7105 328c 00C0      		rjmp .L213
 7106               	.L229:
 538:lp_solve_5.5/lp_scale.c ****     else
 539:lp_solve_5.5/lp_scale.c ****       scale = 1 / sqrt(scale);
 7107               		.loc 1 539 0
 7108 328e 8981      		ldd r24,Y+1
 7109 3290 9A81      		ldd r25,Y+2
 7110 3292 AB81      		ldd r26,Y+3
 7111 3294 BC81      		ldd r27,Y+4
 7112 3296 BC01      		movw r22,r24
 7113 3298 CD01      		movw r24,r26
 7114 329a 0E94 0000 		call sqrt
 7115 329e DC01      		movw r26,r24
 7116 32a0 CB01      		movw r24,r22
 7117 32a2 9C01      		movw r18,r24
 7118 32a4 AD01      		movw r20,r26
 7119 32a6 60E0      		ldi r22,0
 7120 32a8 70E0      		ldi r23,0
 7121 32aa 80E8      		ldi r24,lo8(-128)
 7122 32ac 9FE3      		ldi r25,lo8(63)
 7123 32ae 0E94 0000 		call __divsf3
 7124 32b2 DC01      		movw r26,r24
 7125 32b4 CB01      		movw r24,r22
 7126 32b6 8983      		std Y+1,r24
 7127 32b8 9A83      		std Y+2,r25
 7128 32ba AB83      		std Y+3,r26
 7129 32bc BC83      		std Y+4,r27
 7130 32be 00C0      		rjmp .L213
 7131               	.L214:
 540:lp_solve_5.5/lp_scale.c ****   }
 541:lp_solve_5.5/lp_scale.c ****   else {
 542:lp_solve_5.5/lp_scale.c ****     if(scale == 0)
 7132               		.loc 1 542 0
 7133 32c0 20E0      		ldi r18,0
 7134 32c2 30E0      		ldi r19,0
 7135 32c4 A901      		movw r20,r18
 7136 32c6 6981      		ldd r22,Y+1
 7137 32c8 7A81      		ldd r23,Y+2
 7138 32ca 8B81      		ldd r24,Y+3
 7139 32cc 9C81      		ldd r25,Y+4
 7140 32ce 0E94 0000 		call __eqsf2
 7141 32d2 8823      		tst r24
 7142 32d4 01F4      		brne .L230
 543:lp_solve_5.5/lp_scale.c ****       scale = 1;
 7143               		.loc 1 543 0
 7144 32d6 80E0      		ldi r24,0
 7145 32d8 90E0      		ldi r25,0
 7146 32da A0E8      		ldi r26,lo8(-128)
 7147 32dc BFE3      		ldi r27,lo8(63)
 7148 32de 8983      		std Y+1,r24
 7149 32e0 9A83      		std Y+2,r25
 7150 32e2 AB83      		std Y+3,r26
 7151 32e4 BC83      		std Y+4,r27
 7152 32e6 00C0      		rjmp .L213
 7153               	.L230:
 544:lp_solve_5.5/lp_scale.c ****     else
 545:lp_solve_5.5/lp_scale.c ****       scale = 1 / scale;
 7154               		.loc 1 545 0
 7155 32e8 2981      		ldd r18,Y+1
 7156 32ea 3A81      		ldd r19,Y+2
 7157 32ec 4B81      		ldd r20,Y+3
 7158 32ee 5C81      		ldd r21,Y+4
 7159 32f0 60E0      		ldi r22,0
 7160 32f2 70E0      		ldi r23,0
 7161 32f4 80E8      		ldi r24,lo8(-128)
 7162 32f6 9FE3      		ldi r25,lo8(63)
 7163 32f8 0E94 0000 		call __divsf3
 7164 32fc DC01      		movw r26,r24
 7165 32fe CB01      		movw r24,r22
 7166 3300 8983      		std Y+1,r24
 7167 3302 9A83      		std Y+2,r25
 7168 3304 AB83      		std Y+3,r26
 7169 3306 BC83      		std Y+4,r27
 7170               	.L213:
 546:lp_solve_5.5/lp_scale.c ****   }
 547:lp_solve_5.5/lp_scale.c **** 
 548:lp_solve_5.5/lp_scale.c ****   /* Make sure we are within acceptable scaling ranges */
 549:lp_solve_5.5/lp_scale.c ****   SETMAX(scale, MIN_SCALAR);
 7171               		.loc 1 549 0
 7172 3308 2FEF      		ldi r18,lo8(-1)
 7173 330a 36EE      		ldi r19,lo8(-26)
 7174 330c 4BED      		ldi r20,lo8(-37)
 7175 330e 5EE2      		ldi r21,lo8(46)
 7176 3310 6981      		ldd r22,Y+1
 7177 3312 7A81      		ldd r23,Y+2
 7178 3314 8B81      		ldd r24,Y+3
 7179 3316 9C81      		ldd r25,Y+4
 7180 3318 0E94 0000 		call __ltsf2
 7181 331c 8823      		tst r24
 7182 331e 04F4      		brge .L220
 7183               		.loc 1 549 0 is_stmt 0 discriminator 1
 7184 3320 8FEF      		ldi r24,lo8(-1)
 7185 3322 96EE      		ldi r25,lo8(-26)
 7186 3324 ABED      		ldi r26,lo8(-37)
 7187 3326 BEE2      		ldi r27,lo8(46)
 7188 3328 8983      		std Y+1,r24
 7189 332a 9A83      		std Y+2,r25
 7190 332c AB83      		std Y+3,r26
 7191 332e BC83      		std Y+4,r27
 7192               	.L220:
 550:lp_solve_5.5/lp_scale.c ****   SETMIN(scale, MAX_SCALAR);
 7193               		.loc 1 550 0 is_stmt 1
 7194 3330 29EF      		ldi r18,lo8(-7)
 7195 3332 32E0      		ldi r19,lo8(2)
 7196 3334 45E1      		ldi r20,lo8(21)
 7197 3336 50E5      		ldi r21,lo8(80)
 7198 3338 6981      		ldd r22,Y+1
 7199 333a 7A81      		ldd r23,Y+2
 7200 333c 8B81      		ldd r24,Y+3
 7201 333e 9C81      		ldd r25,Y+4
 7202 3340 0E94 0000 		call __gtsf2
 7203 3344 1816      		cp __zero_reg__,r24
 7204 3346 04F4      		brge .L222
 7205               		.loc 1 550 0 is_stmt 0 discriminator 1
 7206 3348 89EF      		ldi r24,lo8(-7)
 7207 334a 92E0      		ldi r25,lo8(2)
 7208 334c A5E1      		ldi r26,lo8(21)
 7209 334e B0E5      		ldi r27,lo8(80)
 7210 3350 8983      		std Y+1,r24
 7211 3352 9A83      		std Y+2,r25
 7212 3354 AB83      		std Y+3,r26
 7213 3356 BC83      		std Y+4,r27
 7214               	.L222:
 551:lp_solve_5.5/lp_scale.c **** 
 552:lp_solve_5.5/lp_scale.c ****   return(scale);
 7215               		.loc 1 552 0 is_stmt 1
 7216 3358 8981      		ldd r24,Y+1
 7217 335a 9A81      		ldd r25,Y+2
 7218 335c AB81      		ldd r26,Y+3
 7219 335e BC81      		ldd r27,Y+4
 7220               	.L205:
 553:lp_solve_5.5/lp_scale.c **** }
 7221               		.loc 1 553 0
 7222 3360 BC01      		movw r22,r24
 7223 3362 CD01      		movw r24,r26
 7224               	/* epilogue start */
 7225 3364 6096      		adiw r28,16
 7226 3366 0FB6      		in __tmp_reg__,__SREG__
 7227 3368 F894      		cli
 7228 336a DEBF      		out __SP_H__,r29
 7229 336c 0FBE      		out __SREG__,__tmp_reg__
 7230 336e CDBF      		out __SP_L__,r28
 7231 3370 DF91      		pop r29
 7232 3372 CF91      		pop r28
 7233 3374 1F91      		pop r17
 7234 3376 0F91      		pop r16
 7235 3378 FF90      		pop r15
 7236 337a EF90      		pop r14
 7237 337c 0895      		ret
 7238               		.cfi_endproc
 7239               	.LFE16:
 7241               	.global	__fixsfsi
 7242               	.global	roundPower2
 7244               	roundPower2:
 7245               	.LFB17:
 554:lp_solve_5.5/lp_scale.c **** 
 555:lp_solve_5.5/lp_scale.c **** STATIC REAL roundPower2(REAL scale)
 556:lp_solve_5.5/lp_scale.c **** /* Purpose is to round a number to it nearest power of 2; in a system
 557:lp_solve_5.5/lp_scale.c ****    with binary number representation, this avoids rounding errors when
 558:lp_solve_5.5/lp_scale.c ****    scale is used to normalize another value */
 559:lp_solve_5.5/lp_scale.c **** {
 7246               		.loc 1 559 0
 7247               		.cfi_startproc
 7248 337e CF93      		push r28
 7249               	.LCFI68:
 7250               		.cfi_def_cfa_offset 3
 7251               		.cfi_offset 28, -2
 7252 3380 DF93      		push r29
 7253               	.LCFI69:
 7254               		.cfi_def_cfa_offset 4
 7255               		.cfi_offset 29, -3
 7256 3382 CDB7      		in r28,__SP_L__
 7257 3384 DEB7      		in r29,__SP_H__
 7258               	.LCFI70:
 7259               		.cfi_def_cfa_register 28
 7260 3386 2997      		sbiw r28,9
 7261               	.LCFI71:
 7262               		.cfi_def_cfa_offset 13
 7263 3388 0FB6      		in __tmp_reg__,__SREG__
 7264 338a F894      		cli
 7265 338c DEBF      		out __SP_H__,r29
 7266 338e 0FBE      		out __SREG__,__tmp_reg__
 7267 3390 CDBF      		out __SP_L__,r28
 7268               	/* prologue: function */
 7269               	/* frame size = 9 */
 7270               	/* stack size = 11 */
 7271               	.L__stack_usage = 11
 7272 3392 6E83      		std Y+6,r22
 7273 3394 7F83      		std Y+7,r23
 7274 3396 8887      		std Y+8,r24
 7275 3398 9987      		std Y+9,r25
 560:lp_solve_5.5/lp_scale.c ****   long int power2;
 561:lp_solve_5.5/lp_scale.c ****   MYBOOL   isSmall = FALSE;
 7276               		.loc 1 561 0
 7277 339a 1982      		std Y+1,__zero_reg__
 562:lp_solve_5.5/lp_scale.c **** 
 563:lp_solve_5.5/lp_scale.c ****   if(scale == 1)
 7278               		.loc 1 563 0
 7279 339c 20E0      		ldi r18,0
 7280 339e 30E0      		ldi r19,0
 7281 33a0 40E8      		ldi r20,lo8(-128)
 7282 33a2 5FE3      		ldi r21,lo8(63)
 7283 33a4 6E81      		ldd r22,Y+6
 7284 33a6 7F81      		ldd r23,Y+7
 7285 33a8 8885      		ldd r24,Y+8
 7286 33aa 9985      		ldd r25,Y+9
 7287 33ac 0E94 0000 		call __eqsf2
 7288 33b0 8823      		tst r24
 7289 33b2 01F4      		brne .L241
 564:lp_solve_5.5/lp_scale.c ****     return( scale );
 7290               		.loc 1 564 0
 7291 33b4 8E81      		ldd r24,Y+6
 7292 33b6 9F81      		ldd r25,Y+7
 7293 33b8 A885      		ldd r26,Y+8
 7294 33ba B985      		ldd r27,Y+9
 7295 33bc 00C0      		rjmp .L234
 7296               	.L241:
 565:lp_solve_5.5/lp_scale.c **** 
 566:lp_solve_5.5/lp_scale.c ****   /* Obtain the fractional power of 2 */
 567:lp_solve_5.5/lp_scale.c ****   if(scale < 2) {
 7297               		.loc 1 567 0
 7298 33be 20E0      		ldi r18,0
 7299 33c0 30E0      		ldi r19,0
 7300 33c2 40E0      		ldi r20,0
 7301 33c4 50E4      		ldi r21,lo8(64)
 7302 33c6 6E81      		ldd r22,Y+6
 7303 33c8 7F81      		ldd r23,Y+7
 7304 33ca 8885      		ldd r24,Y+8
 7305 33cc 9985      		ldd r25,Y+9
 7306 33ce 0E94 0000 		call __ltsf2
 7307 33d2 8823      		tst r24
 7308 33d4 04F4      		brge .L242
 568:lp_solve_5.5/lp_scale.c ****     scale = 2 / scale;
 7309               		.loc 1 568 0
 7310 33d6 2E81      		ldd r18,Y+6
 7311 33d8 3F81      		ldd r19,Y+7
 7312 33da 4885      		ldd r20,Y+8
 7313 33dc 5985      		ldd r21,Y+9
 7314 33de 60E0      		ldi r22,0
 7315 33e0 70E0      		ldi r23,0
 7316 33e2 80E0      		ldi r24,0
 7317 33e4 90E4      		ldi r25,lo8(64)
 7318 33e6 0E94 0000 		call __divsf3
 7319 33ea DC01      		movw r26,r24
 7320 33ec CB01      		movw r24,r22
 7321 33ee 8E83      		std Y+6,r24
 7322 33f0 9F83      		std Y+7,r25
 7323 33f2 A887      		std Y+8,r26
 7324 33f4 B987      		std Y+9,r27
 569:lp_solve_5.5/lp_scale.c ****     isSmall = TRUE;
 7325               		.loc 1 569 0
 7326 33f6 81E0      		ldi r24,lo8(1)
 7327 33f8 8983      		std Y+1,r24
 7328 33fa 00C0      		rjmp .L237
 7329               	.L242:
 570:lp_solve_5.5/lp_scale.c ****   }
 571:lp_solve_5.5/lp_scale.c ****   else
 572:lp_solve_5.5/lp_scale.c ****     scale /= 2;
 7330               		.loc 1 572 0
 7331 33fc 20E0      		ldi r18,0
 7332 33fe 30E0      		ldi r19,0
 7333 3400 40E0      		ldi r20,0
 7334 3402 50E4      		ldi r21,lo8(64)
 7335 3404 6E81      		ldd r22,Y+6
 7336 3406 7F81      		ldd r23,Y+7
 7337 3408 8885      		ldd r24,Y+8
 7338 340a 9985      		ldd r25,Y+9
 7339 340c 0E94 0000 		call __divsf3
 7340 3410 DC01      		movw r26,r24
 7341 3412 CB01      		movw r24,r22
 7342 3414 8E83      		std Y+6,r24
 7343 3416 9F83      		std Y+7,r25
 7344 3418 A887      		std Y+8,r26
 7345 341a B987      		std Y+9,r27
 7346               	.L237:
 573:lp_solve_5.5/lp_scale.c ****   scale = log(scale)/log(2.0);
 7347               		.loc 1 573 0
 7348 341c 8E81      		ldd r24,Y+6
 7349 341e 9F81      		ldd r25,Y+7
 7350 3420 A885      		ldd r26,Y+8
 7351 3422 B985      		ldd r27,Y+9
 7352 3424 BC01      		movw r22,r24
 7353 3426 CD01      		movw r24,r26
 7354 3428 0E94 0000 		call log
 7355 342c DC01      		movw r26,r24
 7356 342e CB01      		movw r24,r22
 7357 3430 28E1      		ldi r18,lo8(24)
 7358 3432 32E7      		ldi r19,lo8(114)
 7359 3434 41E3      		ldi r20,lo8(49)
 7360 3436 5FE3      		ldi r21,lo8(63)
 7361 3438 BC01      		movw r22,r24
 7362 343a CD01      		movw r24,r26
 7363 343c 0E94 0000 		call __divsf3
 7364 3440 DC01      		movw r26,r24
 7365 3442 CB01      		movw r24,r22
 7366 3444 8E83      		std Y+6,r24
 7367 3446 9F83      		std Y+7,r25
 7368 3448 A887      		std Y+8,r26
 7369 344a B987      		std Y+9,r27
 574:lp_solve_5.5/lp_scale.c **** 
 575:lp_solve_5.5/lp_scale.c ****   /* Find the desired nearest power of two and compute the associated scalar */
 576:lp_solve_5.5/lp_scale.c ****   power2 = (long) ceil(scale-0.5);
 7370               		.loc 1 576 0
 7371 344c 20E0      		ldi r18,0
 7372 344e 30E0      		ldi r19,0
 7373 3450 40E0      		ldi r20,0
 7374 3452 5FE3      		ldi r21,lo8(63)
 7375 3454 6E81      		ldd r22,Y+6
 7376 3456 7F81      		ldd r23,Y+7
 7377 3458 8885      		ldd r24,Y+8
 7378 345a 9985      		ldd r25,Y+9
 7379 345c 0E94 0000 		call __subsf3
 7380 3460 DC01      		movw r26,r24
 7381 3462 CB01      		movw r24,r22
 7382 3464 BC01      		movw r22,r24
 7383 3466 CD01      		movw r24,r26
 7384 3468 0E94 0000 		call ceil
 7385 346c DC01      		movw r26,r24
 7386 346e CB01      		movw r24,r22
 7387 3470 BC01      		movw r22,r24
 7388 3472 CD01      		movw r24,r26
 7389 3474 0E94 0000 		call __fixsfsi
 7390 3478 DC01      		movw r26,r24
 7391 347a CB01      		movw r24,r22
 7392 347c 8A83      		std Y+2,r24
 7393 347e 9B83      		std Y+3,r25
 7394 3480 AC83      		std Y+4,r26
 7395 3482 BD83      		std Y+5,r27
 577:lp_solve_5.5/lp_scale.c ****   scale = 1 << power2;
 7396               		.loc 1 577 0
 7397 3484 2A81      		ldd r18,Y+2
 7398 3486 3B81      		ldd r19,Y+3
 7399 3488 81E0      		ldi r24,lo8(1)
 7400 348a 90E0      		ldi r25,0
 7401 348c 00C0      		rjmp 2f
 7402               		1:
 7403 348e 880F      		lsl r24
 7404 3490 991F      		rol r25
 7405               		2:
 7406 3492 2A95      		dec r18
 7407 3494 02F4      		brpl 1b
 7408 3496 092E      		mov __tmp_reg__,r25
 7409 3498 000C      		lsl r0
 7410 349a AA0B      		sbc r26,r26
 7411 349c BB0B      		sbc r27,r27
 7412 349e BC01      		movw r22,r24
 7413 34a0 CD01      		movw r24,r26
 7414 34a2 0E94 0000 		call __floatsisf
 7415 34a6 DC01      		movw r26,r24
 7416 34a8 CB01      		movw r24,r22
 7417 34aa 8E83      		std Y+6,r24
 7418 34ac 9F83      		std Y+7,r25
 7419 34ae A887      		std Y+8,r26
 7420 34b0 B987      		std Y+9,r27
 578:lp_solve_5.5/lp_scale.c ****   if(isSmall)
 7421               		.loc 1 578 0
 7422 34b2 8981      		ldd r24,Y+1
 7423 34b4 8823      		tst r24
 7424 34b6 01F0      		breq .L238
 579:lp_solve_5.5/lp_scale.c ****     scale = 1.0 / scale;
 7425               		.loc 1 579 0
 7426 34b8 2E81      		ldd r18,Y+6
 7427 34ba 3F81      		ldd r19,Y+7
 7428 34bc 4885      		ldd r20,Y+8
 7429 34be 5985      		ldd r21,Y+9
 7430 34c0 60E0      		ldi r22,0
 7431 34c2 70E0      		ldi r23,0
 7432 34c4 80E8      		ldi r24,lo8(-128)
 7433 34c6 9FE3      		ldi r25,lo8(63)
 7434 34c8 0E94 0000 		call __divsf3
 7435 34cc DC01      		movw r26,r24
 7436 34ce CB01      		movw r24,r22
 7437 34d0 8E83      		std Y+6,r24
 7438 34d2 9F83      		std Y+7,r25
 7439 34d4 A887      		std Y+8,r26
 7440 34d6 B987      		std Y+9,r27
 7441               	.L238:
 580:lp_solve_5.5/lp_scale.c **** 
 581:lp_solve_5.5/lp_scale.c ****   return( scale );
 7442               		.loc 1 581 0
 7443 34d8 8E81      		ldd r24,Y+6
 7444 34da 9F81      		ldd r25,Y+7
 7445 34dc A885      		ldd r26,Y+8
 7446 34de B985      		ldd r27,Y+9
 7447               	.L234:
 582:lp_solve_5.5/lp_scale.c **** 
 583:lp_solve_5.5/lp_scale.c **** }
 7448               		.loc 1 583 0
 7449 34e0 BC01      		movw r22,r24
 7450 34e2 CD01      		movw r24,r26
 7451               	/* epilogue start */
 7452 34e4 2996      		adiw r28,9
 7453 34e6 0FB6      		in __tmp_reg__,__SREG__
 7454 34e8 F894      		cli
 7455 34ea DEBF      		out __SP_H__,r29
 7456 34ec 0FBE      		out __SREG__,__tmp_reg__
 7457 34ee CDBF      		out __SP_L__,r28
 7458 34f0 DF91      		pop r29
 7459 34f2 CF91      		pop r28
 7460 34f4 0895      		ret
 7461               		.cfi_endproc
 7462               	.LFE17:
 7464               	.global	scale_updatecolumns
 7466               	scale_updatecolumns:
 7467               	.LFB18:
 584:lp_solve_5.5/lp_scale.c **** 
 585:lp_solve_5.5/lp_scale.c **** STATIC MYBOOL scale_updatecolumns(lprec *lp, REAL *scalechange, MYBOOL updateonly)
 586:lp_solve_5.5/lp_scale.c **** {
 7468               		.loc 1 586 0
 7469               		.cfi_startproc
 7470 34f6 0F93      		push r16
 7471               	.LCFI72:
 7472               		.cfi_def_cfa_offset 3
 7473               		.cfi_offset 16, -2
 7474 34f8 1F93      		push r17
 7475               	.LCFI73:
 7476               		.cfi_def_cfa_offset 4
 7477               		.cfi_offset 17, -3
 7478 34fa CF93      		push r28
 7479               	.LCFI74:
 7480               		.cfi_def_cfa_offset 5
 7481               		.cfi_offset 28, -4
 7482 34fc DF93      		push r29
 7483               	.LCFI75:
 7484               		.cfi_def_cfa_offset 6
 7485               		.cfi_offset 29, -5
 7486 34fe CDB7      		in r28,__SP_L__
 7487 3500 DEB7      		in r29,__SP_H__
 7488               	.LCFI76:
 7489               		.cfi_def_cfa_register 28
 7490 3502 2997      		sbiw r28,9
 7491               	.LCFI77:
 7492               		.cfi_def_cfa_offset 15
 7493 3504 0FB6      		in __tmp_reg__,__SREG__
 7494 3506 F894      		cli
 7495 3508 DEBF      		out __SP_H__,r29
 7496 350a 0FBE      		out __SREG__,__tmp_reg__
 7497 350c CDBF      		out __SP_L__,r28
 7498               	/* prologue: function */
 7499               	/* frame size = 9 */
 7500               	/* stack size = 13 */
 7501               	.L__stack_usage = 13
 7502 350e 9E83      		std Y+6,r25
 7503 3510 8D83      		std Y+5,r24
 7504 3512 7887      		std Y+8,r23
 7505 3514 6F83      		std Y+7,r22
 7506 3516 4987      		std Y+9,r20
 587:lp_solve_5.5/lp_scale.c ****   int i, j;
 588:lp_solve_5.5/lp_scale.c **** 
 589:lp_solve_5.5/lp_scale.c ****   /* Verify that the scale change is significant (different from the unit) */
 590:lp_solve_5.5/lp_scale.c ****   for(i = lp->columns; i > 0; i--)
 7507               		.loc 1 590 0
 7508 3518 8D81      		ldd r24,Y+5
 7509 351a 9E81      		ldd r25,Y+6
 7510 351c 8451      		subi r24,20
 7511 351e 9E4F      		sbci r25,-2
 7512 3520 FC01      		movw r30,r24
 7513 3522 8081      		ld r24,Z
 7514 3524 9181      		ldd r25,Z+1
 7515 3526 9A83      		std Y+2,r25
 7516 3528 8983      		std Y+1,r24
 7517 352a 00C0      		rjmp .L244
 7518               	.L248:
 591:lp_solve_5.5/lp_scale.c ****     if(fabs(scalechange[i]-1) > lp->epsprimal)
 7519               		.loc 1 591 0
 7520 352c 8981      		ldd r24,Y+1
 7521 352e 9A81      		ldd r25,Y+2
 7522 3530 880F      		lsl r24
 7523 3532 991F      		rol r25
 7524 3534 880F      		lsl r24
 7525 3536 991F      		rol r25
 7526 3538 2F81      		ldd r18,Y+7
 7527 353a 3885      		ldd r19,Y+8
 7528 353c 820F      		add r24,r18
 7529 353e 931F      		adc r25,r19
 7530 3540 FC01      		movw r30,r24
 7531 3542 8081      		ld r24,Z
 7532 3544 9181      		ldd r25,Z+1
 7533 3546 A281      		ldd r26,Z+2
 7534 3548 B381      		ldd r27,Z+3
 7535 354a 20E0      		ldi r18,0
 7536 354c 30E0      		ldi r19,0
 7537 354e 40E8      		ldi r20,lo8(-128)
 7538 3550 5FE3      		ldi r21,lo8(63)
 7539 3552 BC01      		movw r22,r24
 7540 3554 CD01      		movw r24,r26
 7541 3556 0E94 0000 		call __subsf3
 7542 355a DC01      		movw r26,r24
 7543 355c CB01      		movw r24,r22
 7544 355e BF77      		andi r27,0x7f
 7545 3560 2D81      		ldd r18,Y+5
 7546 3562 3E81      		ldd r19,Y+6
 7547 3564 265E      		subi r18,-26
 7548 3566 3C4F      		sbci r19,-4
 7549 3568 F901      		movw r30,r18
 7550 356a 2081      		ld r18,Z
 7551 356c 3181      		ldd r19,Z+1
 7552 356e 4281      		ldd r20,Z+2
 7553 3570 5381      		ldd r21,Z+3
 7554 3572 BC01      		movw r22,r24
 7555 3574 CD01      		movw r24,r26
 7556 3576 0E94 0000 		call __gtsf2
 7557 357a 1816      		cp __zero_reg__,r24
 7558 357c 04F0      		brlt .L257
 590:lp_solve_5.5/lp_scale.c ****     if(fabs(scalechange[i]-1) > lp->epsprimal)
 7559               		.loc 1 590 0 discriminator 2
 7560 357e 8981      		ldd r24,Y+1
 7561 3580 9A81      		ldd r25,Y+2
 7562 3582 0197      		sbiw r24,1
 7563 3584 9A83      		std Y+2,r25
 7564 3586 8983      		std Y+1,r24
 7565               	.L244:
 590:lp_solve_5.5/lp_scale.c ****     if(fabs(scalechange[i]-1) > lp->epsprimal)
 7566               		.loc 1 590 0 is_stmt 0 discriminator 1
 7567 3588 8981      		ldd r24,Y+1
 7568 358a 9A81      		ldd r25,Y+2
 7569 358c 1816      		cp __zero_reg__,r24
 7570 358e 1906      		cpc __zero_reg__,r25
 7571 3590 04F0      		brlt .L248
 7572 3592 00C0      		rjmp .L247
 7573               	.L257:
 592:lp_solve_5.5/lp_scale.c ****       break;
 7574               		.loc 1 592 0 is_stmt 1
 7575 3594 0000      		nop
 7576               	.L247:
 593:lp_solve_5.5/lp_scale.c ****   if(i <= 0)
 7577               		.loc 1 593 0
 7578 3596 8981      		ldd r24,Y+1
 7579 3598 9A81      		ldd r25,Y+2
 7580 359a 1816      		cp __zero_reg__,r24
 7581 359c 1906      		cpc __zero_reg__,r25
 7582 359e 04F0      		brlt .L249
 594:lp_solve_5.5/lp_scale.c ****     return( FALSE );
 7583               		.loc 1 594 0
 7584 35a0 80E0      		ldi r24,0
 7585 35a2 00C0      		rjmp .L250
 7586               	.L249:
 595:lp_solve_5.5/lp_scale.c **** 
 596:lp_solve_5.5/lp_scale.c ****  /* Update the pre-existing column scalar */
 597:lp_solve_5.5/lp_scale.c ****   if(updateonly)
 7587               		.loc 1 597 0
 7588 35a4 8985      		ldd r24,Y+9
 7589 35a6 8823      		tst r24
 7590 35a8 01F4      		brne .+2
 7591 35aa 00C0      		rjmp .L251
 598:lp_solve_5.5/lp_scale.c ****     for(i = 1, j = lp->rows + 1; j <= lp->sum; i++, j++)
 7592               		.loc 1 598 0
 7593 35ac 81E0      		ldi r24,lo8(1)
 7594 35ae 90E0      		ldi r25,0
 7595 35b0 9A83      		std Y+2,r25
 7596 35b2 8983      		std Y+1,r24
 7597 35b4 8D81      		ldd r24,Y+5
 7598 35b6 9E81      		ldd r25,Y+6
 7599 35b8 8651      		subi r24,22
 7600 35ba 9E4F      		sbci r25,-2
 7601 35bc FC01      		movw r30,r24
 7602 35be 8081      		ld r24,Z
 7603 35c0 9181      		ldd r25,Z+1
 7604 35c2 0196      		adiw r24,1
 7605 35c4 9C83      		std Y+4,r25
 7606 35c6 8B83      		std Y+3,r24
 7607 35c8 00C0      		rjmp .L252
 7608               	.L253:
 599:lp_solve_5.5/lp_scale.c ****       lp->scalars[j] *= scalechange[i];
 7609               		.loc 1 599 0 discriminator 3
 7610 35ca 8D81      		ldd r24,Y+5
 7611 35cc 9E81      		ldd r25,Y+6
 7612 35ce 8C53      		subi r24,60
 7613 35d0 9D4F      		sbci r25,-3
 7614 35d2 FC01      		movw r30,r24
 7615 35d4 2081      		ld r18,Z
 7616 35d6 3181      		ldd r19,Z+1
 7617 35d8 8B81      		ldd r24,Y+3
 7618 35da 9C81      		ldd r25,Y+4
 7619 35dc 880F      		lsl r24
 7620 35de 991F      		rol r25
 7621 35e0 880F      		lsl r24
 7622 35e2 991F      		rol r25
 7623 35e4 8901      		movw r16,r18
 7624 35e6 080F      		add r16,r24
 7625 35e8 191F      		adc r17,r25
 7626 35ea 8D81      		ldd r24,Y+5
 7627 35ec 9E81      		ldd r25,Y+6
 7628 35ee 8C53      		subi r24,60
 7629 35f0 9D4F      		sbci r25,-3
 7630 35f2 FC01      		movw r30,r24
 7631 35f4 2081      		ld r18,Z
 7632 35f6 3181      		ldd r19,Z+1
 7633 35f8 8B81      		ldd r24,Y+3
 7634 35fa 9C81      		ldd r25,Y+4
 7635 35fc 880F      		lsl r24
 7636 35fe 991F      		rol r25
 7637 3600 880F      		lsl r24
 7638 3602 991F      		rol r25
 7639 3604 820F      		add r24,r18
 7640 3606 931F      		adc r25,r19
 7641 3608 FC01      		movw r30,r24
 7642 360a 8081      		ld r24,Z
 7643 360c 9181      		ldd r25,Z+1
 7644 360e A281      		ldd r26,Z+2
 7645 3610 B381      		ldd r27,Z+3
 7646 3612 2981      		ldd r18,Y+1
 7647 3614 3A81      		ldd r19,Y+2
 7648 3616 220F      		lsl r18
 7649 3618 331F      		rol r19
 7650 361a 220F      		lsl r18
 7651 361c 331F      		rol r19
 7652 361e 4F81      		ldd r20,Y+7
 7653 3620 5885      		ldd r21,Y+8
 7654 3622 240F      		add r18,r20
 7655 3624 351F      		adc r19,r21
 7656 3626 F901      		movw r30,r18
 7657 3628 2081      		ld r18,Z
 7658 362a 3181      		ldd r19,Z+1
 7659 362c 4281      		ldd r20,Z+2
 7660 362e 5381      		ldd r21,Z+3
 7661 3630 BC01      		movw r22,r24
 7662 3632 CD01      		movw r24,r26
 7663 3634 0E94 0000 		call __mulsf3
 7664 3638 DC01      		movw r26,r24
 7665 363a CB01      		movw r24,r22
 7666 363c F801      		movw r30,r16
 7667 363e 8083      		st Z,r24
 7668 3640 9183      		std Z+1,r25
 7669 3642 A283      		std Z+2,r26
 7670 3644 B383      		std Z+3,r27
 598:lp_solve_5.5/lp_scale.c ****     for(i = 1, j = lp->rows + 1; j <= lp->sum; i++, j++)
 7671               		.loc 1 598 0 discriminator 3
 7672 3646 8981      		ldd r24,Y+1
 7673 3648 9A81      		ldd r25,Y+2
 7674 364a 0196      		adiw r24,1
 7675 364c 9A83      		std Y+2,r25
 7676 364e 8983      		std Y+1,r24
 7677 3650 8B81      		ldd r24,Y+3
 7678 3652 9C81      		ldd r25,Y+4
 7679 3654 0196      		adiw r24,1
 7680 3656 9C83      		std Y+4,r25
 7681 3658 8B83      		std Y+3,r24
 7682               	.L252:
 598:lp_solve_5.5/lp_scale.c ****     for(i = 1, j = lp->rows + 1; j <= lp->sum; i++, j++)
 7683               		.loc 1 598 0 is_stmt 0 discriminator 1
 7684 365a 8D81      		ldd r24,Y+5
 7685 365c 9E81      		ldd r25,Y+6
 7686 365e 8851      		subi r24,24
 7687 3660 9E4F      		sbci r25,-2
 7688 3662 FC01      		movw r30,r24
 7689 3664 2081      		ld r18,Z
 7690 3666 3181      		ldd r19,Z+1
 7691 3668 8B81      		ldd r24,Y+3
 7692 366a 9C81      		ldd r25,Y+4
 7693 366c 2817      		cp r18,r24
 7694 366e 3907      		cpc r19,r25
 7695 3670 04F0      		brlt .+2
 7696 3672 00C0      		rjmp .L253
 7697 3674 00C0      		rjmp .L254
 7698               	.L251:
 600:lp_solve_5.5/lp_scale.c ****   else
 601:lp_solve_5.5/lp_scale.c ****     for(i = 1, j = lp->rows + 1; j <= lp->sum; i++, j++)
 7699               		.loc 1 601 0 is_stmt 1
 7700 3676 81E0      		ldi r24,lo8(1)
 7701 3678 90E0      		ldi r25,0
 7702 367a 9A83      		std Y+2,r25
 7703 367c 8983      		std Y+1,r24
 7704 367e 8D81      		ldd r24,Y+5
 7705 3680 9E81      		ldd r25,Y+6
 7706 3682 8651      		subi r24,22
 7707 3684 9E4F      		sbci r25,-2
 7708 3686 FC01      		movw r30,r24
 7709 3688 8081      		ld r24,Z
 7710 368a 9181      		ldd r25,Z+1
 7711 368c 0196      		adiw r24,1
 7712 368e 9C83      		std Y+4,r25
 7713 3690 8B83      		std Y+3,r24
 7714 3692 00C0      		rjmp .L255
 7715               	.L256:
 602:lp_solve_5.5/lp_scale.c ****       lp->scalars[j] = scalechange[i];
 7716               		.loc 1 602 0 discriminator 3
 7717 3694 8D81      		ldd r24,Y+5
 7718 3696 9E81      		ldd r25,Y+6
 7719 3698 8C53      		subi r24,60
 7720 369a 9D4F      		sbci r25,-3
 7721 369c FC01      		movw r30,r24
 7722 369e 2081      		ld r18,Z
 7723 36a0 3181      		ldd r19,Z+1
 7724 36a2 8B81      		ldd r24,Y+3
 7725 36a4 9C81      		ldd r25,Y+4
 7726 36a6 880F      		lsl r24
 7727 36a8 991F      		rol r25
 7728 36aa 880F      		lsl r24
 7729 36ac 991F      		rol r25
 7730 36ae 280F      		add r18,r24
 7731 36b0 391F      		adc r19,r25
 7732 36b2 8981      		ldd r24,Y+1
 7733 36b4 9A81      		ldd r25,Y+2
 7734 36b6 880F      		lsl r24
 7735 36b8 991F      		rol r25
 7736 36ba 880F      		lsl r24
 7737 36bc 991F      		rol r25
 7738 36be 4F81      		ldd r20,Y+7
 7739 36c0 5885      		ldd r21,Y+8
 7740 36c2 840F      		add r24,r20
 7741 36c4 951F      		adc r25,r21
 7742 36c6 FC01      		movw r30,r24
 7743 36c8 8081      		ld r24,Z
 7744 36ca 9181      		ldd r25,Z+1
 7745 36cc A281      		ldd r26,Z+2
 7746 36ce B381      		ldd r27,Z+3
 7747 36d0 F901      		movw r30,r18
 7748 36d2 8083      		st Z,r24
 7749 36d4 9183      		std Z+1,r25
 7750 36d6 A283      		std Z+2,r26
 7751 36d8 B383      		std Z+3,r27
 601:lp_solve_5.5/lp_scale.c ****       lp->scalars[j] = scalechange[i];
 7752               		.loc 1 601 0 discriminator 3
 7753 36da 8981      		ldd r24,Y+1
 7754 36dc 9A81      		ldd r25,Y+2
 7755 36de 0196      		adiw r24,1
 7756 36e0 9A83      		std Y+2,r25
 7757 36e2 8983      		std Y+1,r24
 7758 36e4 8B81      		ldd r24,Y+3
 7759 36e6 9C81      		ldd r25,Y+4
 7760 36e8 0196      		adiw r24,1
 7761 36ea 9C83      		std Y+4,r25
 7762 36ec 8B83      		std Y+3,r24
 7763               	.L255:
 601:lp_solve_5.5/lp_scale.c ****       lp->scalars[j] = scalechange[i];
 7764               		.loc 1 601 0 is_stmt 0 discriminator 1
 7765 36ee 8D81      		ldd r24,Y+5
 7766 36f0 9E81      		ldd r25,Y+6
 7767 36f2 8851      		subi r24,24
 7768 36f4 9E4F      		sbci r25,-2
 7769 36f6 FC01      		movw r30,r24
 7770 36f8 2081      		ld r18,Z
 7771 36fa 3181      		ldd r19,Z+1
 7772 36fc 8B81      		ldd r24,Y+3
 7773 36fe 9C81      		ldd r25,Y+4
 7774 3700 2817      		cp r18,r24
 7775 3702 3907      		cpc r19,r25
 7776 3704 04F4      		brge .L256
 7777               	.L254:
 603:lp_solve_5.5/lp_scale.c **** 
 604:lp_solve_5.5/lp_scale.c ****   return( TRUE );
 7778               		.loc 1 604 0 is_stmt 1
 7779 3706 81E0      		ldi r24,lo8(1)
 7780               	.L250:
 7781               	/* epilogue start */
 605:lp_solve_5.5/lp_scale.c **** }
 7782               		.loc 1 605 0
 7783 3708 2996      		adiw r28,9
 7784 370a 0FB6      		in __tmp_reg__,__SREG__
 7785 370c F894      		cli
 7786 370e DEBF      		out __SP_H__,r29
 7787 3710 0FBE      		out __SREG__,__tmp_reg__
 7788 3712 CDBF      		out __SP_L__,r28
 7789 3714 DF91      		pop r29
 7790 3716 CF91      		pop r28
 7791 3718 1F91      		pop r17
 7792 371a 0F91      		pop r16
 7793 371c 0895      		ret
 7794               		.cfi_endproc
 7795               	.LFE18:
 7797               	.global	scale_updaterows
 7799               	scale_updaterows:
 7800               	.LFB19:
 606:lp_solve_5.5/lp_scale.c **** 
 607:lp_solve_5.5/lp_scale.c **** STATIC MYBOOL scale_updaterows(lprec *lp, REAL *scalechange, MYBOOL updateonly)
 608:lp_solve_5.5/lp_scale.c **** {
 7801               		.loc 1 608 0
 7802               		.cfi_startproc
 7803 371e 0F93      		push r16
 7804               	.LCFI78:
 7805               		.cfi_def_cfa_offset 3
 7806               		.cfi_offset 16, -2
 7807 3720 1F93      		push r17
 7808               	.LCFI79:
 7809               		.cfi_def_cfa_offset 4
 7810               		.cfi_offset 17, -3
 7811 3722 CF93      		push r28
 7812               	.LCFI80:
 7813               		.cfi_def_cfa_offset 5
 7814               		.cfi_offset 28, -4
 7815 3724 DF93      		push r29
 7816               	.LCFI81:
 7817               		.cfi_def_cfa_offset 6
 7818               		.cfi_offset 29, -5
 7819 3726 CDB7      		in r28,__SP_L__
 7820 3728 DEB7      		in r29,__SP_H__
 7821               	.LCFI82:
 7822               		.cfi_def_cfa_register 28
 7823 372a 2797      		sbiw r28,7
 7824               	.LCFI83:
 7825               		.cfi_def_cfa_offset 13
 7826 372c 0FB6      		in __tmp_reg__,__SREG__
 7827 372e F894      		cli
 7828 3730 DEBF      		out __SP_H__,r29
 7829 3732 0FBE      		out __SREG__,__tmp_reg__
 7830 3734 CDBF      		out __SP_L__,r28
 7831               	/* prologue: function */
 7832               	/* frame size = 7 */
 7833               	/* stack size = 11 */
 7834               	.L__stack_usage = 11
 7835 3736 9C83      		std Y+4,r25
 7836 3738 8B83      		std Y+3,r24
 7837 373a 7E83      		std Y+6,r23
 7838 373c 6D83      		std Y+5,r22
 7839 373e 4F83      		std Y+7,r20
 609:lp_solve_5.5/lp_scale.c ****   int i;
 610:lp_solve_5.5/lp_scale.c **** 
 611:lp_solve_5.5/lp_scale.c ****   /* Verify that the scale change is significant (different from the unit) */
 612:lp_solve_5.5/lp_scale.c ****   for(i = lp->rows; i >= 0; i--) {
 7840               		.loc 1 612 0
 7841 3740 8B81      		ldd r24,Y+3
 7842 3742 9C81      		ldd r25,Y+4
 7843 3744 8651      		subi r24,22
 7844 3746 9E4F      		sbci r25,-2
 7845 3748 FC01      		movw r30,r24
 7846 374a 8081      		ld r24,Z
 7847 374c 9181      		ldd r25,Z+1
 7848 374e 9A83      		std Y+2,r25
 7849 3750 8983      		std Y+1,r24
 7850 3752 00C0      		rjmp .L259
 7851               	.L263:
 613:lp_solve_5.5/lp_scale.c ****     if(fabs(scalechange[i]-1) > lp->epsprimal)
 7852               		.loc 1 613 0
 7853 3754 8981      		ldd r24,Y+1
 7854 3756 9A81      		ldd r25,Y+2
 7855 3758 880F      		lsl r24
 7856 375a 991F      		rol r25
 7857 375c 880F      		lsl r24
 7858 375e 991F      		rol r25
 7859 3760 2D81      		ldd r18,Y+5
 7860 3762 3E81      		ldd r19,Y+6
 7861 3764 820F      		add r24,r18
 7862 3766 931F      		adc r25,r19
 7863 3768 FC01      		movw r30,r24
 7864 376a 8081      		ld r24,Z
 7865 376c 9181      		ldd r25,Z+1
 7866 376e A281      		ldd r26,Z+2
 7867 3770 B381      		ldd r27,Z+3
 7868 3772 20E0      		ldi r18,0
 7869 3774 30E0      		ldi r19,0
 7870 3776 40E8      		ldi r20,lo8(-128)
 7871 3778 5FE3      		ldi r21,lo8(63)
 7872 377a BC01      		movw r22,r24
 7873 377c CD01      		movw r24,r26
 7874 377e 0E94 0000 		call __subsf3
 7875 3782 DC01      		movw r26,r24
 7876 3784 CB01      		movw r24,r22
 7877 3786 BF77      		andi r27,0x7f
 7878 3788 2B81      		ldd r18,Y+3
 7879 378a 3C81      		ldd r19,Y+4
 7880 378c 265E      		subi r18,-26
 7881 378e 3C4F      		sbci r19,-4
 7882 3790 F901      		movw r30,r18
 7883 3792 2081      		ld r18,Z
 7884 3794 3181      		ldd r19,Z+1
 7885 3796 4281      		ldd r20,Z+2
 7886 3798 5381      		ldd r21,Z+3
 7887 379a BC01      		movw r22,r24
 7888 379c CD01      		movw r24,r26
 7889 379e 0E94 0000 		call __gtsf2
 7890 37a2 1816      		cp __zero_reg__,r24
 7891 37a4 04F0      		brlt .L272
 612:lp_solve_5.5/lp_scale.c ****     if(fabs(scalechange[i]-1) > lp->epsprimal)
 7892               		.loc 1 612 0 discriminator 2
 7893 37a6 8981      		ldd r24,Y+1
 7894 37a8 9A81      		ldd r25,Y+2
 7895 37aa 0197      		sbiw r24,1
 7896 37ac 9A83      		std Y+2,r25
 7897 37ae 8983      		std Y+1,r24
 7898               	.L259:
 612:lp_solve_5.5/lp_scale.c ****     if(fabs(scalechange[i]-1) > lp->epsprimal)
 7899               		.loc 1 612 0 is_stmt 0 discriminator 1
 7900 37b0 8981      		ldd r24,Y+1
 7901 37b2 9A81      		ldd r25,Y+2
 7902 37b4 9923      		tst r25
 7903 37b6 04F4      		brge .L263
 7904 37b8 00C0      		rjmp .L262
 7905               	.L272:
 614:lp_solve_5.5/lp_scale.c ****       break;
 7906               		.loc 1 614 0 is_stmt 1
 7907 37ba 0000      		nop
 7908               	.L262:
 615:lp_solve_5.5/lp_scale.c ****   }
 616:lp_solve_5.5/lp_scale.c ****   if(i < 0)
 7909               		.loc 1 616 0
 7910 37bc 8981      		ldd r24,Y+1
 7911 37be 9A81      		ldd r25,Y+2
 7912 37c0 9923      		tst r25
 7913 37c2 04F4      		brge .L264
 617:lp_solve_5.5/lp_scale.c ****     return( FALSE );
 7914               		.loc 1 617 0
 7915 37c4 80E0      		ldi r24,0
 7916 37c6 00C0      		rjmp .L265
 7917               	.L264:
 618:lp_solve_5.5/lp_scale.c **** 
 619:lp_solve_5.5/lp_scale.c ****  /* Update the pre-existing row scalar */
 620:lp_solve_5.5/lp_scale.c ****   if(updateonly)
 7918               		.loc 1 620 0
 7919 37c8 8F81      		ldd r24,Y+7
 7920 37ca 8823      		tst r24
 7921 37cc 01F4      		brne .+2
 7922 37ce 00C0      		rjmp .L266
 621:lp_solve_5.5/lp_scale.c ****     for(i = 0; i <= lp->rows; i++)
 7923               		.loc 1 621 0
 7924 37d0 1A82      		std Y+2,__zero_reg__
 7925 37d2 1982      		std Y+1,__zero_reg__
 7926 37d4 00C0      		rjmp .L267
 7927               	.L268:
 622:lp_solve_5.5/lp_scale.c ****       lp->scalars[i] *= scalechange[i];
 7928               		.loc 1 622 0 discriminator 3
 7929 37d6 8B81      		ldd r24,Y+3
 7930 37d8 9C81      		ldd r25,Y+4
 7931 37da 8C53      		subi r24,60
 7932 37dc 9D4F      		sbci r25,-3
 7933 37de FC01      		movw r30,r24
 7934 37e0 2081      		ld r18,Z
 7935 37e2 3181      		ldd r19,Z+1
 7936 37e4 8981      		ldd r24,Y+1
 7937 37e6 9A81      		ldd r25,Y+2
 7938 37e8 880F      		lsl r24
 7939 37ea 991F      		rol r25
 7940 37ec 880F      		lsl r24
 7941 37ee 991F      		rol r25
 7942 37f0 8901      		movw r16,r18
 7943 37f2 080F      		add r16,r24
 7944 37f4 191F      		adc r17,r25
 7945 37f6 8B81      		ldd r24,Y+3
 7946 37f8 9C81      		ldd r25,Y+4
 7947 37fa 8C53      		subi r24,60
 7948 37fc 9D4F      		sbci r25,-3
 7949 37fe FC01      		movw r30,r24
 7950 3800 2081      		ld r18,Z
 7951 3802 3181      		ldd r19,Z+1
 7952 3804 8981      		ldd r24,Y+1
 7953 3806 9A81      		ldd r25,Y+2
 7954 3808 880F      		lsl r24
 7955 380a 991F      		rol r25
 7956 380c 880F      		lsl r24
 7957 380e 991F      		rol r25
 7958 3810 820F      		add r24,r18
 7959 3812 931F      		adc r25,r19
 7960 3814 FC01      		movw r30,r24
 7961 3816 8081      		ld r24,Z
 7962 3818 9181      		ldd r25,Z+1
 7963 381a A281      		ldd r26,Z+2
 7964 381c B381      		ldd r27,Z+3
 7965 381e 2981      		ldd r18,Y+1
 7966 3820 3A81      		ldd r19,Y+2
 7967 3822 220F      		lsl r18
 7968 3824 331F      		rol r19
 7969 3826 220F      		lsl r18
 7970 3828 331F      		rol r19
 7971 382a 4D81      		ldd r20,Y+5
 7972 382c 5E81      		ldd r21,Y+6
 7973 382e 240F      		add r18,r20
 7974 3830 351F      		adc r19,r21
 7975 3832 F901      		movw r30,r18
 7976 3834 2081      		ld r18,Z
 7977 3836 3181      		ldd r19,Z+1
 7978 3838 4281      		ldd r20,Z+2
 7979 383a 5381      		ldd r21,Z+3
 7980 383c BC01      		movw r22,r24
 7981 383e CD01      		movw r24,r26
 7982 3840 0E94 0000 		call __mulsf3
 7983 3844 DC01      		movw r26,r24
 7984 3846 CB01      		movw r24,r22
 7985 3848 F801      		movw r30,r16
 7986 384a 8083      		st Z,r24
 7987 384c 9183      		std Z+1,r25
 7988 384e A283      		std Z+2,r26
 7989 3850 B383      		std Z+3,r27
 621:lp_solve_5.5/lp_scale.c ****     for(i = 0; i <= lp->rows; i++)
 7990               		.loc 1 621 0 discriminator 3
 7991 3852 8981      		ldd r24,Y+1
 7992 3854 9A81      		ldd r25,Y+2
 7993 3856 0196      		adiw r24,1
 7994 3858 9A83      		std Y+2,r25
 7995 385a 8983      		std Y+1,r24
 7996               	.L267:
 621:lp_solve_5.5/lp_scale.c ****     for(i = 0; i <= lp->rows; i++)
 7997               		.loc 1 621 0 is_stmt 0 discriminator 1
 7998 385c 8B81      		ldd r24,Y+3
 7999 385e 9C81      		ldd r25,Y+4
 8000 3860 8651      		subi r24,22
 8001 3862 9E4F      		sbci r25,-2
 8002 3864 FC01      		movw r30,r24
 8003 3866 2081      		ld r18,Z
 8004 3868 3181      		ldd r19,Z+1
 8005 386a 8981      		ldd r24,Y+1
 8006 386c 9A81      		ldd r25,Y+2
 8007 386e 2817      		cp r18,r24
 8008 3870 3907      		cpc r19,r25
 8009 3872 04F0      		brlt .+2
 8010 3874 00C0      		rjmp .L268
 8011 3876 00C0      		rjmp .L269
 8012               	.L266:
 623:lp_solve_5.5/lp_scale.c ****   else
 624:lp_solve_5.5/lp_scale.c ****     for(i = 0; i <= lp->rows; i++)
 8013               		.loc 1 624 0 is_stmt 1
 8014 3878 1A82      		std Y+2,__zero_reg__
 8015 387a 1982      		std Y+1,__zero_reg__
 8016 387c 00C0      		rjmp .L270
 8017               	.L271:
 625:lp_solve_5.5/lp_scale.c ****       lp->scalars[i] = scalechange[i];
 8018               		.loc 1 625 0 discriminator 3
 8019 387e 8B81      		ldd r24,Y+3
 8020 3880 9C81      		ldd r25,Y+4
 8021 3882 8C53      		subi r24,60
 8022 3884 9D4F      		sbci r25,-3
 8023 3886 FC01      		movw r30,r24
 8024 3888 2081      		ld r18,Z
 8025 388a 3181      		ldd r19,Z+1
 8026 388c 8981      		ldd r24,Y+1
 8027 388e 9A81      		ldd r25,Y+2
 8028 3890 880F      		lsl r24
 8029 3892 991F      		rol r25
 8030 3894 880F      		lsl r24
 8031 3896 991F      		rol r25
 8032 3898 280F      		add r18,r24
 8033 389a 391F      		adc r19,r25
 8034 389c 8981      		ldd r24,Y+1
 8035 389e 9A81      		ldd r25,Y+2
 8036 38a0 880F      		lsl r24
 8037 38a2 991F      		rol r25
 8038 38a4 880F      		lsl r24
 8039 38a6 991F      		rol r25
 8040 38a8 4D81      		ldd r20,Y+5
 8041 38aa 5E81      		ldd r21,Y+6
 8042 38ac 840F      		add r24,r20
 8043 38ae 951F      		adc r25,r21
 8044 38b0 FC01      		movw r30,r24
 8045 38b2 8081      		ld r24,Z
 8046 38b4 9181      		ldd r25,Z+1
 8047 38b6 A281      		ldd r26,Z+2
 8048 38b8 B381      		ldd r27,Z+3
 8049 38ba F901      		movw r30,r18
 8050 38bc 8083      		st Z,r24
 8051 38be 9183      		std Z+1,r25
 8052 38c0 A283      		std Z+2,r26
 8053 38c2 B383      		std Z+3,r27
 624:lp_solve_5.5/lp_scale.c ****       lp->scalars[i] = scalechange[i];
 8054               		.loc 1 624 0 discriminator 3
 8055 38c4 8981      		ldd r24,Y+1
 8056 38c6 9A81      		ldd r25,Y+2
 8057 38c8 0196      		adiw r24,1
 8058 38ca 9A83      		std Y+2,r25
 8059 38cc 8983      		std Y+1,r24
 8060               	.L270:
 624:lp_solve_5.5/lp_scale.c ****       lp->scalars[i] = scalechange[i];
 8061               		.loc 1 624 0 is_stmt 0 discriminator 1
 8062 38ce 8B81      		ldd r24,Y+3
 8063 38d0 9C81      		ldd r25,Y+4
 8064 38d2 8651      		subi r24,22
 8065 38d4 9E4F      		sbci r25,-2
 8066 38d6 FC01      		movw r30,r24
 8067 38d8 2081      		ld r18,Z
 8068 38da 3181      		ldd r19,Z+1
 8069 38dc 8981      		ldd r24,Y+1
 8070 38de 9A81      		ldd r25,Y+2
 8071 38e0 2817      		cp r18,r24
 8072 38e2 3907      		cpc r19,r25
 8073 38e4 04F4      		brge .L271
 8074               	.L269:
 626:lp_solve_5.5/lp_scale.c **** 
 627:lp_solve_5.5/lp_scale.c ****   return( TRUE );
 8075               		.loc 1 627 0 is_stmt 1
 8076 38e6 81E0      		ldi r24,lo8(1)
 8077               	.L265:
 8078               	/* epilogue start */
 628:lp_solve_5.5/lp_scale.c **** }
 8079               		.loc 1 628 0
 8080 38e8 2796      		adiw r28,7
 8081 38ea 0FB6      		in __tmp_reg__,__SREG__
 8082 38ec F894      		cli
 8083 38ee DEBF      		out __SP_H__,r29
 8084 38f0 0FBE      		out __SREG__,__tmp_reg__
 8085 38f2 CDBF      		out __SP_L__,r28
 8086 38f4 DF91      		pop r29
 8087 38f6 CF91      		pop r28
 8088 38f8 1F91      		pop r17
 8089 38fa 0F91      		pop r16
 8090 38fc 0895      		ret
 8091               		.cfi_endproc
 8092               	.LFE19:
 8094               	.global	scale_columns
 8096               	scale_columns:
 8097               	.LFB20:
 629:lp_solve_5.5/lp_scale.c **** 
 630:lp_solve_5.5/lp_scale.c **** STATIC MYBOOL scale_columns(lprec *lp, REAL *scaledelta)
 631:lp_solve_5.5/lp_scale.c **** {
 8098               		.loc 1 631 0
 8099               		.cfi_startproc
 8100 38fe EF92      		push r14
 8101               	.LCFI84:
 8102               		.cfi_def_cfa_offset 3
 8103               		.cfi_offset 14, -2
 8104 3900 FF92      		push r15
 8105               	.LCFI85:
 8106               		.cfi_def_cfa_offset 4
 8107               		.cfi_offset 15, -3
 8108 3902 0F93      		push r16
 8109               	.LCFI86:
 8110               		.cfi_def_cfa_offset 5
 8111               		.cfi_offset 16, -4
 8112 3904 1F93      		push r17
 8113               	.LCFI87:
 8114               		.cfi_def_cfa_offset 6
 8115               		.cfi_offset 17, -5
 8116 3906 CF93      		push r28
 8117               	.LCFI88:
 8118               		.cfi_def_cfa_offset 7
 8119               		.cfi_offset 28, -6
 8120 3908 DF93      		push r29
 8121               	.LCFI89:
 8122               		.cfi_def_cfa_offset 8
 8123               		.cfi_offset 29, -7
 8124 390a CDB7      		in r28,__SP_L__
 8125 390c DEB7      		in r29,__SP_H__
 8126               	.LCFI90:
 8127               		.cfi_def_cfa_register 28
 8128 390e 6497      		sbiw r28,20
 8129               	.LCFI91:
 8130               		.cfi_def_cfa_offset 28
 8131 3910 0FB6      		in __tmp_reg__,__SREG__
 8132 3912 F894      		cli
 8133 3914 DEBF      		out __SP_H__,r29
 8134 3916 0FBE      		out __SREG__,__tmp_reg__
 8135 3918 CDBF      		out __SP_L__,r28
 8136               	/* prologue: function */
 8137               	/* frame size = 20 */
 8138               	/* stack size = 26 */
 8139               	.L__stack_usage = 26
 8140 391a 9A8B      		std Y+18,r25
 8141 391c 898B      		std Y+17,r24
 8142 391e 7C8B      		std Y+20,r23
 8143 3920 6B8B      		std Y+19,r22
 632:lp_solve_5.5/lp_scale.c ****   int     i,j, colMax, nz;
 633:lp_solve_5.5/lp_scale.c ****   REAL    *scalechange;
 634:lp_solve_5.5/lp_scale.c ****   REAL    *value;
 635:lp_solve_5.5/lp_scale.c ****   int     *colnr;
 636:lp_solve_5.5/lp_scale.c ****   MATrec  *mat = lp->matA;
 8144               		.loc 1 636 0
 8145 3922 8989      		ldd r24,Y+17
 8146 3924 9A89      		ldd r25,Y+18
 8147 3926 8A54      		subi r24,74
 8148 3928 9D4F      		sbci r25,-3
 8149 392a FC01      		movw r30,r24
 8150 392c 8081      		ld r24,Z
 8151 392e 9181      		ldd r25,Z+1
 8152 3930 9C87      		std Y+12,r25
 8153 3932 8B87      		std Y+11,r24
 637:lp_solve_5.5/lp_scale.c **** 
 638:lp_solve_5.5/lp_scale.c ****   /* Check that columns are in fact targeted */
 639:lp_solve_5.5/lp_scale.c ****   if((lp->scalemode & SCALE_ROWSONLY) != 0)
 8154               		.loc 1 639 0
 8155 3934 8989      		ldd r24,Y+17
 8156 3936 9A89      		ldd r25,Y+18
 8157 3938 8259      		subi r24,-110
 8158 393a 9D4F      		sbci r25,-3
 8159 393c FC01      		movw r30,r24
 8160 393e 8081      		ld r24,Z
 8161 3940 9181      		ldd r25,Z+1
 8162 3942 8827      		clr r24
 8163 3944 9270      		andi r25,2
 8164 3946 892B      		or r24,r25
 8165 3948 01F0      		breq .L274
 640:lp_solve_5.5/lp_scale.c ****     return( TRUE );
 8166               		.loc 1 640 0
 8167 394a 81E0      		ldi r24,lo8(1)
 8168 394c 00C0      		rjmp .L275
 8169               	.L274:
 641:lp_solve_5.5/lp_scale.c **** 
 642:lp_solve_5.5/lp_scale.c ****   if(scaledelta == NULL)
 8170               		.loc 1 642 0
 8171 394e 8B89      		ldd r24,Y+19
 8172 3950 9C89      		ldd r25,Y+20
 8173 3952 892B      		or r24,r25
 8174 3954 01F4      		brne .L276
 643:lp_solve_5.5/lp_scale.c ****     scalechange = &lp->scalars[lp->rows];
 8175               		.loc 1 643 0
 8176 3956 8989      		ldd r24,Y+17
 8177 3958 9A89      		ldd r25,Y+18
 8178 395a 8C53      		subi r24,60
 8179 395c 9D4F      		sbci r25,-3
 8180 395e FC01      		movw r30,r24
 8181 3960 2081      		ld r18,Z
 8182 3962 3181      		ldd r19,Z+1
 8183 3964 8989      		ldd r24,Y+17
 8184 3966 9A89      		ldd r25,Y+18
 8185 3968 8651      		subi r24,22
 8186 396a 9E4F      		sbci r25,-2
 8187 396c FC01      		movw r30,r24
 8188 396e 8081      		ld r24,Z
 8189 3970 9181      		ldd r25,Z+1
 8190 3972 880F      		lsl r24
 8191 3974 991F      		rol r25
 8192 3976 880F      		lsl r24
 8193 3978 991F      		rol r25
 8194 397a 820F      		add r24,r18
 8195 397c 931F      		adc r25,r19
 8196 397e 9E83      		std Y+6,r25
 8197 3980 8D83      		std Y+5,r24
 8198 3982 00C0      		rjmp .L277
 8199               	.L276:
 644:lp_solve_5.5/lp_scale.c ****   else
 645:lp_solve_5.5/lp_scale.c ****     scalechange = &scaledelta[lp->rows];
 8200               		.loc 1 645 0
 8201 3984 8989      		ldd r24,Y+17
 8202 3986 9A89      		ldd r25,Y+18
 8203 3988 8651      		subi r24,22
 8204 398a 9E4F      		sbci r25,-2
 8205 398c FC01      		movw r30,r24
 8206 398e 8081      		ld r24,Z
 8207 3990 9181      		ldd r25,Z+1
 8208 3992 880F      		lsl r24
 8209 3994 991F      		rol r25
 8210 3996 880F      		lsl r24
 8211 3998 991F      		rol r25
 8212 399a 2B89      		ldd r18,Y+19
 8213 399c 3C89      		ldd r19,Y+20
 8214 399e 820F      		add r24,r18
 8215 39a0 931F      		adc r25,r19
 8216 39a2 9E83      		std Y+6,r25
 8217 39a4 8D83      		std Y+5,r24
 8218               	.L277:
 646:lp_solve_5.5/lp_scale.c **** 
 647:lp_solve_5.5/lp_scale.c ****   colMax = lp->columns;
 8219               		.loc 1 647 0
 8220 39a6 8989      		ldd r24,Y+17
 8221 39a8 9A89      		ldd r25,Y+18
 8222 39aa 8451      		subi r24,20
 8223 39ac 9E4F      		sbci r25,-2
 8224 39ae FC01      		movw r30,r24
 8225 39b0 8081      		ld r24,Z
 8226 39b2 9181      		ldd r25,Z+1
 8227 39b4 9E87      		std Y+14,r25
 8228 39b6 8D87      		std Y+13,r24
 648:lp_solve_5.5/lp_scale.c **** 
 649:lp_solve_5.5/lp_scale.c ****   /* Scale matrix entries (including any Lagrangean constraints) */
 650:lp_solve_5.5/lp_scale.c ****   for(i = 1; i <= lp->columns; i++) {
 8229               		.loc 1 650 0
 8230 39b8 81E0      		ldi r24,lo8(1)
 8231 39ba 90E0      		ldi r25,0
 8232 39bc 9A83      		std Y+2,r25
 8233 39be 8983      		std Y+1,r24
 8234 39c0 00C0      		rjmp .L278
 8235               	.L279:
 651:lp_solve_5.5/lp_scale.c ****     lp->orig_obj[i] *= scalechange[i];
 8236               		.loc 1 651 0 discriminator 3
 8237 39c2 8989      		ldd r24,Y+17
 8238 39c4 9A89      		ldd r25,Y+18
 8239 39c6 845D      		subi r24,-44
 8240 39c8 9D4F      		sbci r25,-3
 8241 39ca FC01      		movw r30,r24
 8242 39cc 2081      		ld r18,Z
 8243 39ce 3181      		ldd r19,Z+1
 8244 39d0 8981      		ldd r24,Y+1
 8245 39d2 9A81      		ldd r25,Y+2
 8246 39d4 880F      		lsl r24
 8247 39d6 991F      		rol r25
 8248 39d8 880F      		lsl r24
 8249 39da 991F      		rol r25
 8250 39dc 8901      		movw r16,r18
 8251 39de 080F      		add r16,r24
 8252 39e0 191F      		adc r17,r25
 8253 39e2 8989      		ldd r24,Y+17
 8254 39e4 9A89      		ldd r25,Y+18
 8255 39e6 845D      		subi r24,-44
 8256 39e8 9D4F      		sbci r25,-3
 8257 39ea FC01      		movw r30,r24
 8258 39ec 2081      		ld r18,Z
 8259 39ee 3181      		ldd r19,Z+1
 8260 39f0 8981      		ldd r24,Y+1
 8261 39f2 9A81      		ldd r25,Y+2
 8262 39f4 880F      		lsl r24
 8263 39f6 991F      		rol r25
 8264 39f8 880F      		lsl r24
 8265 39fa 991F      		rol r25
 8266 39fc 820F      		add r24,r18
 8267 39fe 931F      		adc r25,r19
 8268 3a00 FC01      		movw r30,r24
 8269 3a02 8081      		ld r24,Z
 8270 3a04 9181      		ldd r25,Z+1
 8271 3a06 A281      		ldd r26,Z+2
 8272 3a08 B381      		ldd r27,Z+3
 8273 3a0a 2981      		ldd r18,Y+1
 8274 3a0c 3A81      		ldd r19,Y+2
 8275 3a0e 220F      		lsl r18
 8276 3a10 331F      		rol r19
 8277 3a12 220F      		lsl r18
 8278 3a14 331F      		rol r19
 8279 3a16 4D81      		ldd r20,Y+5
 8280 3a18 5E81      		ldd r21,Y+6
 8281 3a1a 240F      		add r18,r20
 8282 3a1c 351F      		adc r19,r21
 8283 3a1e F901      		movw r30,r18
 8284 3a20 2081      		ld r18,Z
 8285 3a22 3181      		ldd r19,Z+1
 8286 3a24 4281      		ldd r20,Z+2
 8287 3a26 5381      		ldd r21,Z+3
 8288 3a28 BC01      		movw r22,r24
 8289 3a2a CD01      		movw r24,r26
 8290 3a2c 0E94 0000 		call __mulsf3
 8291 3a30 DC01      		movw r26,r24
 8292 3a32 CB01      		movw r24,r22
 8293 3a34 F801      		movw r30,r16
 8294 3a36 8083      		st Z,r24
 8295 3a38 9183      		std Z+1,r25
 8296 3a3a A283      		std Z+2,r26
 8297 3a3c B383      		std Z+3,r27
 650:lp_solve_5.5/lp_scale.c ****     lp->orig_obj[i] *= scalechange[i];
 8298               		.loc 1 650 0 discriminator 3
 8299 3a3e 8981      		ldd r24,Y+1
 8300 3a40 9A81      		ldd r25,Y+2
 8301 3a42 0196      		adiw r24,1
 8302 3a44 9A83      		std Y+2,r25
 8303 3a46 8983      		std Y+1,r24
 8304               	.L278:
 650:lp_solve_5.5/lp_scale.c ****     lp->orig_obj[i] *= scalechange[i];
 8305               		.loc 1 650 0 is_stmt 0 discriminator 1
 8306 3a48 8989      		ldd r24,Y+17
 8307 3a4a 9A89      		ldd r25,Y+18
 8308 3a4c 8451      		subi r24,20
 8309 3a4e 9E4F      		sbci r25,-2
 8310 3a50 FC01      		movw r30,r24
 8311 3a52 2081      		ld r18,Z
 8312 3a54 3181      		ldd r19,Z+1
 8313 3a56 8981      		ldd r24,Y+1
 8314 3a58 9A81      		ldd r25,Y+2
 8315 3a5a 2817      		cp r18,r24
 8316 3a5c 3907      		cpc r19,r25
 8317 3a5e 04F0      		brlt .+2
 8318 3a60 00C0      		rjmp .L279
 652:lp_solve_5.5/lp_scale.c ****   }
 653:lp_solve_5.5/lp_scale.c **** 
 654:lp_solve_5.5/lp_scale.c ****   mat_validate(lp->matA);
 8319               		.loc 1 654 0 is_stmt 1
 8320 3a62 8989      		ldd r24,Y+17
 8321 3a64 9A89      		ldd r25,Y+18
 8322 3a66 8A54      		subi r24,74
 8323 3a68 9D4F      		sbci r25,-3
 8324 3a6a FC01      		movw r30,r24
 8325 3a6c 8081      		ld r24,Z
 8326 3a6e 9181      		ldd r25,Z+1
 8327 3a70 0E94 0000 		call mat_validate
 655:lp_solve_5.5/lp_scale.c ****   nz = get_nonzeros(lp);
 8328               		.loc 1 655 0
 8329 3a74 8989      		ldd r24,Y+17
 8330 3a76 9A89      		ldd r25,Y+18
 8331 3a78 0E94 0000 		call get_nonzeros
 8332 3a7c 988B      		std Y+16,r25
 8333 3a7e 8F87      		std Y+15,r24
 656:lp_solve_5.5/lp_scale.c ****   value = &(COL_MAT_VALUE(0));
 8334               		.loc 1 656 0
 8335 3a80 8B85      		ldd r24,Y+11
 8336 3a82 9C85      		ldd r25,Y+12
 8337 3a84 FC01      		movw r30,r24
 8338 3a86 8089      		ldd r24,Z+16
 8339 3a88 9189      		ldd r25,Z+17
 8340 3a8a 9887      		std Y+8,r25
 8341 3a8c 8F83      		std Y+7,r24
 657:lp_solve_5.5/lp_scale.c ****   colnr = &(COL_MAT_COLNR(0));
 8342               		.loc 1 657 0
 8343 3a8e 8B85      		ldd r24,Y+11
 8344 3a90 9C85      		ldd r25,Y+12
 8345 3a92 FC01      		movw r30,r24
 8346 3a94 8485      		ldd r24,Z+12
 8347 3a96 9585      		ldd r25,Z+13
 8348 3a98 9A87      		std Y+10,r25
 8349 3a9a 8987      		std Y+9,r24
 658:lp_solve_5.5/lp_scale.c ****   for(i = 0; i < nz;
 8350               		.loc 1 658 0
 8351 3a9c 1A82      		std Y+2,__zero_reg__
 8352 3a9e 1982      		std Y+1,__zero_reg__
 8353 3aa0 00C0      		rjmp .L280
 8354               	.L281:
 659:lp_solve_5.5/lp_scale.c ****       i++, value += matValueStep, colnr += matRowColStep) {
 660:lp_solve_5.5/lp_scale.c ****     (*value) *= scalechange[*colnr];
 8355               		.loc 1 660 0
 8356 3aa2 8F81      		ldd r24,Y+7
 8357 3aa4 9885      		ldd r25,Y+8
 8358 3aa6 FC01      		movw r30,r24
 8359 3aa8 8081      		ld r24,Z
 8360 3aaa 9181      		ldd r25,Z+1
 8361 3aac A281      		ldd r26,Z+2
 8362 3aae B381      		ldd r27,Z+3
 8363 3ab0 2985      		ldd r18,Y+9
 8364 3ab2 3A85      		ldd r19,Y+10
 8365 3ab4 F901      		movw r30,r18
 8366 3ab6 2081      		ld r18,Z
 8367 3ab8 3181      		ldd r19,Z+1
 8368 3aba 220F      		lsl r18
 8369 3abc 331F      		rol r19
 8370 3abe 220F      		lsl r18
 8371 3ac0 331F      		rol r19
 8372 3ac2 4D81      		ldd r20,Y+5
 8373 3ac4 5E81      		ldd r21,Y+6
 8374 3ac6 240F      		add r18,r20
 8375 3ac8 351F      		adc r19,r21
 8376 3aca F901      		movw r30,r18
 8377 3acc 2081      		ld r18,Z
 8378 3ace 3181      		ldd r19,Z+1
 8379 3ad0 4281      		ldd r20,Z+2
 8380 3ad2 5381      		ldd r21,Z+3
 8381 3ad4 BC01      		movw r22,r24
 8382 3ad6 CD01      		movw r24,r26
 8383 3ad8 0E94 0000 		call __mulsf3
 8384 3adc DC01      		movw r26,r24
 8385 3ade CB01      		movw r24,r22
 8386 3ae0 2F81      		ldd r18,Y+7
 8387 3ae2 3885      		ldd r19,Y+8
 8388 3ae4 F901      		movw r30,r18
 8389 3ae6 8083      		st Z,r24
 8390 3ae8 9183      		std Z+1,r25
 8391 3aea A283      		std Z+2,r26
 8392 3aec B383      		std Z+3,r27
 659:lp_solve_5.5/lp_scale.c ****       i++, value += matValueStep, colnr += matRowColStep) {
 8393               		.loc 1 659 0
 8394 3aee 8981      		ldd r24,Y+1
 8395 3af0 9A81      		ldd r25,Y+2
 8396 3af2 0196      		adiw r24,1
 8397 3af4 9A83      		std Y+2,r25
 8398 3af6 8983      		std Y+1,r24
 8399 3af8 8F81      		ldd r24,Y+7
 8400 3afa 9885      		ldd r25,Y+8
 8401 3afc 0496      		adiw r24,4
 8402 3afe 9887      		std Y+8,r25
 8403 3b00 8F83      		std Y+7,r24
 8404 3b02 8985      		ldd r24,Y+9
 8405 3b04 9A85      		ldd r25,Y+10
 8406 3b06 0296      		adiw r24,2
 8407 3b08 9A87      		std Y+10,r25
 8408 3b0a 8987      		std Y+9,r24
 8409               	.L280:
 658:lp_solve_5.5/lp_scale.c ****   for(i = 0; i < nz;
 8410               		.loc 1 658 0 discriminator 1
 8411 3b0c 2981      		ldd r18,Y+1
 8412 3b0e 3A81      		ldd r19,Y+2
 8413 3b10 8F85      		ldd r24,Y+15
 8414 3b12 9889      		ldd r25,Y+16
 8415 3b14 2817      		cp r18,r24
 8416 3b16 3907      		cpc r19,r25
 8417 3b18 04F0      		brlt .L281
 661:lp_solve_5.5/lp_scale.c ****   }
 662:lp_solve_5.5/lp_scale.c **** 
 663:lp_solve_5.5/lp_scale.c ****   /* Scale variable bounds as well */
 664:lp_solve_5.5/lp_scale.c ****   for(i = 1, j = lp->rows + 1; j <= lp->sum; i++, j++) {
 8418               		.loc 1 664 0
 8419 3b1a 81E0      		ldi r24,lo8(1)
 8420 3b1c 90E0      		ldi r25,0
 8421 3b1e 9A83      		std Y+2,r25
 8422 3b20 8983      		std Y+1,r24
 8423 3b22 8989      		ldd r24,Y+17
 8424 3b24 9A89      		ldd r25,Y+18
 8425 3b26 8651      		subi r24,22
 8426 3b28 9E4F      		sbci r25,-2
 8427 3b2a FC01      		movw r30,r24
 8428 3b2c 8081      		ld r24,Z
 8429 3b2e 9181      		ldd r25,Z+1
 8430 3b30 0196      		adiw r24,1
 8431 3b32 9C83      		std Y+4,r25
 8432 3b34 8B83      		std Y+3,r24
 8433 3b36 00C0      		rjmp .L282
 8434               	.L289:
 665:lp_solve_5.5/lp_scale.c ****     if(lp->orig_lowbo[j] > -lp->infinite)
 8435               		.loc 1 665 0
 8436 3b38 8989      		ldd r24,Y+17
 8437 3b3a 9A89      		ldd r25,Y+18
 8438 3b3c 8E54      		subi r24,78
 8439 3b3e 9D4F      		sbci r25,-3
 8440 3b40 FC01      		movw r30,r24
 8441 3b42 2081      		ld r18,Z
 8442 3b44 3181      		ldd r19,Z+1
 8443 3b46 8B81      		ldd r24,Y+3
 8444 3b48 9C81      		ldd r25,Y+4
 8445 3b4a 880F      		lsl r24
 8446 3b4c 991F      		rol r25
 8447 3b4e 880F      		lsl r24
 8448 3b50 991F      		rol r25
 8449 3b52 820F      		add r24,r18
 8450 3b54 931F      		adc r25,r19
 8451 3b56 FC01      		movw r30,r24
 8452 3b58 E080      		ld r14,Z
 8453 3b5a F180      		ldd r15,Z+1
 8454 3b5c 0281      		ldd r16,Z+2
 8455 3b5e 1381      		ldd r17,Z+3
 8456 3b60 8989      		ldd r24,Y+17
 8457 3b62 9A89      		ldd r25,Y+18
 8458 3b64 865F      		subi r24,-10
 8459 3b66 9C4F      		sbci r25,-4
 8460 3b68 FC01      		movw r30,r24
 8461 3b6a 8081      		ld r24,Z
 8462 3b6c 9181      		ldd r25,Z+1
 8463 3b6e A281      		ldd r26,Z+2
 8464 3b70 B381      		ldd r27,Z+3
 8465 3b72 B058      		subi r27,0x80
 8466 3b74 9C01      		movw r18,r24
 8467 3b76 AD01      		movw r20,r26
 8468 3b78 C801      		movw r24,r16
 8469 3b7a B701      		movw r22,r14
 8470 3b7c 0E94 0000 		call __gtsf2
 8471 3b80 1816      		cp __zero_reg__,r24
 8472 3b82 04F4      		brge .L283
 666:lp_solve_5.5/lp_scale.c ****       lp->orig_lowbo[j] /= scalechange[i];
 8473               		.loc 1 666 0
 8474 3b84 8989      		ldd r24,Y+17
 8475 3b86 9A89      		ldd r25,Y+18
 8476 3b88 8E54      		subi r24,78
 8477 3b8a 9D4F      		sbci r25,-3
 8478 3b8c FC01      		movw r30,r24
 8479 3b8e 2081      		ld r18,Z
 8480 3b90 3181      		ldd r19,Z+1
 8481 3b92 8B81      		ldd r24,Y+3
 8482 3b94 9C81      		ldd r25,Y+4
 8483 3b96 880F      		lsl r24
 8484 3b98 991F      		rol r25
 8485 3b9a 880F      		lsl r24
 8486 3b9c 991F      		rol r25
 8487 3b9e 8901      		movw r16,r18
 8488 3ba0 080F      		add r16,r24
 8489 3ba2 191F      		adc r17,r25
 8490 3ba4 8989      		ldd r24,Y+17
 8491 3ba6 9A89      		ldd r25,Y+18
 8492 3ba8 8E54      		subi r24,78
 8493 3baa 9D4F      		sbci r25,-3
 8494 3bac FC01      		movw r30,r24
 8495 3bae 2081      		ld r18,Z
 8496 3bb0 3181      		ldd r19,Z+1
 8497 3bb2 8B81      		ldd r24,Y+3
 8498 3bb4 9C81      		ldd r25,Y+4
 8499 3bb6 880F      		lsl r24
 8500 3bb8 991F      		rol r25
 8501 3bba 880F      		lsl r24
 8502 3bbc 991F      		rol r25
 8503 3bbe 820F      		add r24,r18
 8504 3bc0 931F      		adc r25,r19
 8505 3bc2 FC01      		movw r30,r24
 8506 3bc4 8081      		ld r24,Z
 8507 3bc6 9181      		ldd r25,Z+1
 8508 3bc8 A281      		ldd r26,Z+2
 8509 3bca B381      		ldd r27,Z+3
 8510 3bcc 2981      		ldd r18,Y+1
 8511 3bce 3A81      		ldd r19,Y+2
 8512 3bd0 220F      		lsl r18
 8513 3bd2 331F      		rol r19
 8514 3bd4 220F      		lsl r18
 8515 3bd6 331F      		rol r19
 8516 3bd8 4D81      		ldd r20,Y+5
 8517 3bda 5E81      		ldd r21,Y+6
 8518 3bdc 240F      		add r18,r20
 8519 3bde 351F      		adc r19,r21
 8520 3be0 F901      		movw r30,r18
 8521 3be2 2081      		ld r18,Z
 8522 3be4 3181      		ldd r19,Z+1
 8523 3be6 4281      		ldd r20,Z+2
 8524 3be8 5381      		ldd r21,Z+3
 8525 3bea BC01      		movw r22,r24
 8526 3bec CD01      		movw r24,r26
 8527 3bee 0E94 0000 		call __divsf3
 8528 3bf2 DC01      		movw r26,r24
 8529 3bf4 CB01      		movw r24,r22
 8530 3bf6 F801      		movw r30,r16
 8531 3bf8 8083      		st Z,r24
 8532 3bfa 9183      		std Z+1,r25
 8533 3bfc A283      		std Z+2,r26
 8534 3bfe B383      		std Z+3,r27
 8535               	.L283:
 667:lp_solve_5.5/lp_scale.c ****     if(lp->orig_upbo[j] < lp->infinite)
 8536               		.loc 1 667 0
 8537 3c00 8989      		ldd r24,Y+17
 8538 3c02 9A89      		ldd r25,Y+18
 8539 3c04 8255      		subi r24,82
 8540 3c06 9D4F      		sbci r25,-3
 8541 3c08 FC01      		movw r30,r24
 8542 3c0a 2081      		ld r18,Z
 8543 3c0c 3181      		ldd r19,Z+1
 8544 3c0e 8B81      		ldd r24,Y+3
 8545 3c10 9C81      		ldd r25,Y+4
 8546 3c12 880F      		lsl r24
 8547 3c14 991F      		rol r25
 8548 3c16 880F      		lsl r24
 8549 3c18 991F      		rol r25
 8550 3c1a 820F      		add r24,r18
 8551 3c1c 931F      		adc r25,r19
 8552 3c1e FC01      		movw r30,r24
 8553 3c20 8081      		ld r24,Z
 8554 3c22 9181      		ldd r25,Z+1
 8555 3c24 A281      		ldd r26,Z+2
 8556 3c26 B381      		ldd r27,Z+3
 8557 3c28 2989      		ldd r18,Y+17
 8558 3c2a 3A89      		ldd r19,Y+18
 8559 3c2c 265F      		subi r18,-10
 8560 3c2e 3C4F      		sbci r19,-4
 8561 3c30 F901      		movw r30,r18
 8562 3c32 2081      		ld r18,Z
 8563 3c34 3181      		ldd r19,Z+1
 8564 3c36 4281      		ldd r20,Z+2
 8565 3c38 5381      		ldd r21,Z+3
 8566 3c3a BC01      		movw r22,r24
 8567 3c3c CD01      		movw r24,r26
 8568 3c3e 0E94 0000 		call __ltsf2
 8569 3c42 8823      		tst r24
 8570 3c44 04F4      		brge .L285
 668:lp_solve_5.5/lp_scale.c ****       lp->orig_upbo[j] /= scalechange[i];
 8571               		.loc 1 668 0
 8572 3c46 8989      		ldd r24,Y+17
 8573 3c48 9A89      		ldd r25,Y+18
 8574 3c4a 8255      		subi r24,82
 8575 3c4c 9D4F      		sbci r25,-3
 8576 3c4e FC01      		movw r30,r24
 8577 3c50 2081      		ld r18,Z
 8578 3c52 3181      		ldd r19,Z+1
 8579 3c54 8B81      		ldd r24,Y+3
 8580 3c56 9C81      		ldd r25,Y+4
 8581 3c58 880F      		lsl r24
 8582 3c5a 991F      		rol r25
 8583 3c5c 880F      		lsl r24
 8584 3c5e 991F      		rol r25
 8585 3c60 8901      		movw r16,r18
 8586 3c62 080F      		add r16,r24
 8587 3c64 191F      		adc r17,r25
 8588 3c66 8989      		ldd r24,Y+17
 8589 3c68 9A89      		ldd r25,Y+18
 8590 3c6a 8255      		subi r24,82
 8591 3c6c 9D4F      		sbci r25,-3
 8592 3c6e FC01      		movw r30,r24
 8593 3c70 2081      		ld r18,Z
 8594 3c72 3181      		ldd r19,Z+1
 8595 3c74 8B81      		ldd r24,Y+3
 8596 3c76 9C81      		ldd r25,Y+4
 8597 3c78 880F      		lsl r24
 8598 3c7a 991F      		rol r25
 8599 3c7c 880F      		lsl r24
 8600 3c7e 991F      		rol r25
 8601 3c80 820F      		add r24,r18
 8602 3c82 931F      		adc r25,r19
 8603 3c84 FC01      		movw r30,r24
 8604 3c86 8081      		ld r24,Z
 8605 3c88 9181      		ldd r25,Z+1
 8606 3c8a A281      		ldd r26,Z+2
 8607 3c8c B381      		ldd r27,Z+3
 8608 3c8e 2981      		ldd r18,Y+1
 8609 3c90 3A81      		ldd r19,Y+2
 8610 3c92 220F      		lsl r18
 8611 3c94 331F      		rol r19
 8612 3c96 220F      		lsl r18
 8613 3c98 331F      		rol r19
 8614 3c9a 4D81      		ldd r20,Y+5
 8615 3c9c 5E81      		ldd r21,Y+6
 8616 3c9e 240F      		add r18,r20
 8617 3ca0 351F      		adc r19,r21
 8618 3ca2 F901      		movw r30,r18
 8619 3ca4 2081      		ld r18,Z
 8620 3ca6 3181      		ldd r19,Z+1
 8621 3ca8 4281      		ldd r20,Z+2
 8622 3caa 5381      		ldd r21,Z+3
 8623 3cac BC01      		movw r22,r24
 8624 3cae CD01      		movw r24,r26
 8625 3cb0 0E94 0000 		call __divsf3
 8626 3cb4 DC01      		movw r26,r24
 8627 3cb6 CB01      		movw r24,r22
 8628 3cb8 F801      		movw r30,r16
 8629 3cba 8083      		st Z,r24
 8630 3cbc 9183      		std Z+1,r25
 8631 3cbe A283      		std Z+2,r26
 8632 3cc0 B383      		std Z+3,r27
 8633               	.L285:
 669:lp_solve_5.5/lp_scale.c ****     if(lp->sc_lobound[i] != 0)
 8634               		.loc 1 669 0
 8635 3cc2 8989      		ldd r24,Y+17
 8636 3cc4 9A89      		ldd r25,Y+18
 8637 3cc6 8E56      		subi r24,110
 8638 3cc8 9D4F      		sbci r25,-3
 8639 3cca FC01      		movw r30,r24
 8640 3ccc 2081      		ld r18,Z
 8641 3cce 3181      		ldd r19,Z+1
 8642 3cd0 8981      		ldd r24,Y+1
 8643 3cd2 9A81      		ldd r25,Y+2
 8644 3cd4 880F      		lsl r24
 8645 3cd6 991F      		rol r25
 8646 3cd8 880F      		lsl r24
 8647 3cda 991F      		rol r25
 8648 3cdc 820F      		add r24,r18
 8649 3cde 931F      		adc r25,r19
 8650 3ce0 FC01      		movw r30,r24
 8651 3ce2 8081      		ld r24,Z
 8652 3ce4 9181      		ldd r25,Z+1
 8653 3ce6 A281      		ldd r26,Z+2
 8654 3ce8 B381      		ldd r27,Z+3
 8655 3cea 20E0      		ldi r18,0
 8656 3cec 30E0      		ldi r19,0
 8657 3cee A901      		movw r20,r18
 8658 3cf0 BC01      		movw r22,r24
 8659 3cf2 CD01      		movw r24,r26
 8660 3cf4 0E94 0000 		call __nesf2
 8661 3cf8 8823      		tst r24
 8662 3cfa 01F0      		breq .L287
 670:lp_solve_5.5/lp_scale.c ****       lp->sc_lobound[i] /= scalechange[i];
 8663               		.loc 1 670 0
 8664 3cfc 8989      		ldd r24,Y+17
 8665 3cfe 9A89      		ldd r25,Y+18
 8666 3d00 8E56      		subi r24,110
 8667 3d02 9D4F      		sbci r25,-3
 8668 3d04 FC01      		movw r30,r24
 8669 3d06 2081      		ld r18,Z
 8670 3d08 3181      		ldd r19,Z+1
 8671 3d0a 8981      		ldd r24,Y+1
 8672 3d0c 9A81      		ldd r25,Y+2
 8673 3d0e 880F      		lsl r24
 8674 3d10 991F      		rol r25
 8675 3d12 880F      		lsl r24
 8676 3d14 991F      		rol r25
 8677 3d16 8901      		movw r16,r18
 8678 3d18 080F      		add r16,r24
 8679 3d1a 191F      		adc r17,r25
 8680 3d1c 8989      		ldd r24,Y+17
 8681 3d1e 9A89      		ldd r25,Y+18
 8682 3d20 8E56      		subi r24,110
 8683 3d22 9D4F      		sbci r25,-3
 8684 3d24 FC01      		movw r30,r24
 8685 3d26 2081      		ld r18,Z
 8686 3d28 3181      		ldd r19,Z+1
 8687 3d2a 8981      		ldd r24,Y+1
 8688 3d2c 9A81      		ldd r25,Y+2
 8689 3d2e 880F      		lsl r24
 8690 3d30 991F      		rol r25
 8691 3d32 880F      		lsl r24
 8692 3d34 991F      		rol r25
 8693 3d36 820F      		add r24,r18
 8694 3d38 931F      		adc r25,r19
 8695 3d3a FC01      		movw r30,r24
 8696 3d3c 8081      		ld r24,Z
 8697 3d3e 9181      		ldd r25,Z+1
 8698 3d40 A281      		ldd r26,Z+2
 8699 3d42 B381      		ldd r27,Z+3
 8700 3d44 2981      		ldd r18,Y+1
 8701 3d46 3A81      		ldd r19,Y+2
 8702 3d48 220F      		lsl r18
 8703 3d4a 331F      		rol r19
 8704 3d4c 220F      		lsl r18
 8705 3d4e 331F      		rol r19
 8706 3d50 4D81      		ldd r20,Y+5
 8707 3d52 5E81      		ldd r21,Y+6
 8708 3d54 240F      		add r18,r20
 8709 3d56 351F      		adc r19,r21
 8710 3d58 F901      		movw r30,r18
 8711 3d5a 2081      		ld r18,Z
 8712 3d5c 3181      		ldd r19,Z+1
 8713 3d5e 4281      		ldd r20,Z+2
 8714 3d60 5381      		ldd r21,Z+3
 8715 3d62 BC01      		movw r22,r24
 8716 3d64 CD01      		movw r24,r26
 8717 3d66 0E94 0000 		call __divsf3
 8718 3d6a DC01      		movw r26,r24
 8719 3d6c CB01      		movw r24,r22
 8720 3d6e F801      		movw r30,r16
 8721 3d70 8083      		st Z,r24
 8722 3d72 9183      		std Z+1,r25
 8723 3d74 A283      		std Z+2,r26
 8724 3d76 B383      		std Z+3,r27
 8725               	.L287:
 664:lp_solve_5.5/lp_scale.c ****     if(lp->orig_lowbo[j] > -lp->infinite)
 8726               		.loc 1 664 0 discriminator 2
 8727 3d78 8981      		ldd r24,Y+1
 8728 3d7a 9A81      		ldd r25,Y+2
 8729 3d7c 0196      		adiw r24,1
 8730 3d7e 9A83      		std Y+2,r25
 8731 3d80 8983      		std Y+1,r24
 8732 3d82 8B81      		ldd r24,Y+3
 8733 3d84 9C81      		ldd r25,Y+4
 8734 3d86 0196      		adiw r24,1
 8735 3d88 9C83      		std Y+4,r25
 8736 3d8a 8B83      		std Y+3,r24
 8737               	.L282:
 664:lp_solve_5.5/lp_scale.c ****     if(lp->orig_lowbo[j] > -lp->infinite)
 8738               		.loc 1 664 0 is_stmt 0 discriminator 1
 8739 3d8c 8989      		ldd r24,Y+17
 8740 3d8e 9A89      		ldd r25,Y+18
 8741 3d90 8851      		subi r24,24
 8742 3d92 9E4F      		sbci r25,-2
 8743 3d94 FC01      		movw r30,r24
 8744 3d96 2081      		ld r18,Z
 8745 3d98 3181      		ldd r19,Z+1
 8746 3d9a 8B81      		ldd r24,Y+3
 8747 3d9c 9C81      		ldd r25,Y+4
 8748 3d9e 2817      		cp r18,r24
 8749 3da0 3907      		cpc r19,r25
 8750 3da2 04F0      		brlt .+2
 8751 3da4 00C0      		rjmp .L289
 671:lp_solve_5.5/lp_scale.c ****   }
 672:lp_solve_5.5/lp_scale.c **** 
 673:lp_solve_5.5/lp_scale.c ****   lp->columns_scaled = TRUE;
 8752               		.loc 1 673 0 is_stmt 1
 8753 3da6 8989      		ldd r24,Y+17
 8754 3da8 9A89      		ldd r25,Y+18
 8755 3daa 8953      		subi r24,57
 8756 3dac 9D4F      		sbci r25,-3
 8757 3dae 21E0      		ldi r18,lo8(1)
 8758 3db0 FC01      		movw r30,r24
 8759 3db2 2083      		st Z,r18
 674:lp_solve_5.5/lp_scale.c ****   set_action(&lp->spx_action, ACTION_REBASE | ACTION_REINVERT | ACTION_RECOMPUTE);
 8760               		.loc 1 674 0
 8761 3db4 8989      		ldd r24,Y+17
 8762 3db6 9A89      		ldd r25,Y+18
 8763 3db8 8E50      		subi r24,14
 8764 3dba 9D4F      		sbci r25,-3
 8765 3dbc 66E1      		ldi r22,lo8(22)
 8766 3dbe 70E0      		ldi r23,0
 8767 3dc0 0E94 0000 		call set_action
 675:lp_solve_5.5/lp_scale.c **** 
 676:lp_solve_5.5/lp_scale.c ****   return( TRUE );
 8768               		.loc 1 676 0
 8769 3dc4 81E0      		ldi r24,lo8(1)
 8770               	.L275:
 8771               	/* epilogue start */
 677:lp_solve_5.5/lp_scale.c **** }
 8772               		.loc 1 677 0
 8773 3dc6 6496      		adiw r28,20
 8774 3dc8 0FB6      		in __tmp_reg__,__SREG__
 8775 3dca F894      		cli
 8776 3dcc DEBF      		out __SP_H__,r29
 8777 3dce 0FBE      		out __SREG__,__tmp_reg__
 8778 3dd0 CDBF      		out __SP_L__,r28
 8779 3dd2 DF91      		pop r29
 8780 3dd4 CF91      		pop r28
 8781 3dd6 1F91      		pop r17
 8782 3dd8 0F91      		pop r16
 8783 3dda FF90      		pop r15
 8784 3ddc EF90      		pop r14
 8785 3dde 0895      		ret
 8786               		.cfi_endproc
 8787               	.LFE20:
 8789               	.global	scale_rows
 8791               	scale_rows:
 8792               	.LFB21:
 678:lp_solve_5.5/lp_scale.c **** 
 679:lp_solve_5.5/lp_scale.c **** STATIC MYBOOL scale_rows(lprec *lp, REAL *scaledelta)
 680:lp_solve_5.5/lp_scale.c **** {
 8793               		.loc 1 680 0
 8794               		.cfi_startproc
 8795 3de0 0F93      		push r16
 8796               	.LCFI92:
 8797               		.cfi_def_cfa_offset 3
 8798               		.cfi_offset 16, -2
 8799 3de2 1F93      		push r17
 8800               	.LCFI93:
 8801               		.cfi_def_cfa_offset 4
 8802               		.cfi_offset 17, -3
 8803 3de4 CF93      		push r28
 8804               	.LCFI94:
 8805               		.cfi_def_cfa_offset 5
 8806               		.cfi_offset 28, -4
 8807 3de6 DF93      		push r29
 8808               	.LCFI95:
 8809               		.cfi_def_cfa_offset 6
 8810               		.cfi_offset 29, -5
 8811 3de8 CDB7      		in r28,__SP_L__
 8812 3dea DEB7      		in r29,__SP_H__
 8813               	.LCFI96:
 8814               		.cfi_def_cfa_register 28
 8815 3dec 6497      		sbiw r28,20
 8816               	.LCFI97:
 8817               		.cfi_def_cfa_offset 26
 8818 3dee 0FB6      		in __tmp_reg__,__SREG__
 8819 3df0 F894      		cli
 8820 3df2 DEBF      		out __SP_H__,r29
 8821 3df4 0FBE      		out __SREG__,__tmp_reg__
 8822 3df6 CDBF      		out __SP_L__,r28
 8823               	/* prologue: function */
 8824               	/* frame size = 20 */
 8825               	/* stack size = 24 */
 8826               	.L__stack_usage = 24
 8827 3df8 9A8B      		std Y+18,r25
 8828 3dfa 898B      		std Y+17,r24
 8829 3dfc 7C8B      		std Y+20,r23
 8830 3dfe 6B8B      		std Y+19,r22
 681:lp_solve_5.5/lp_scale.c ****   int     i, j, nz, colMax;
 682:lp_solve_5.5/lp_scale.c ****   REAL    *scalechange;
 683:lp_solve_5.5/lp_scale.c ****   REAL    *value;
 684:lp_solve_5.5/lp_scale.c ****   int     *rownr;
 685:lp_solve_5.5/lp_scale.c ****   MATrec  *mat = lp->matA;
 8831               		.loc 1 685 0
 8832 3e00 8989      		ldd r24,Y+17
 8833 3e02 9A89      		ldd r25,Y+18
 8834 3e04 8A54      		subi r24,74
 8835 3e06 9D4F      		sbci r25,-3
 8836 3e08 FC01      		movw r30,r24
 8837 3e0a 8081      		ld r24,Z
 8838 3e0c 9181      		ldd r25,Z+1
 8839 3e0e 9A87      		std Y+10,r25
 8840 3e10 8987      		std Y+9,r24
 686:lp_solve_5.5/lp_scale.c **** 
 687:lp_solve_5.5/lp_scale.c **** 
 688:lp_solve_5.5/lp_scale.c ****   /* Check that rows are in fact targeted */
 689:lp_solve_5.5/lp_scale.c ****   if((lp->scalemode & SCALE_COLSONLY) != 0)
 8841               		.loc 1 689 0
 8842 3e12 8989      		ldd r24,Y+17
 8843 3e14 9A89      		ldd r25,Y+18
 8844 3e16 8259      		subi r24,-110
 8845 3e18 9D4F      		sbci r25,-3
 8846 3e1a FC01      		movw r30,r24
 8847 3e1c 8081      		ld r24,Z
 8848 3e1e 9181      		ldd r25,Z+1
 8849 3e20 8827      		clr r24
 8850 3e22 9470      		andi r25,4
 8851 3e24 892B      		or r24,r25
 8852 3e26 01F0      		breq .L294
 690:lp_solve_5.5/lp_scale.c ****     return( TRUE );
 8853               		.loc 1 690 0
 8854 3e28 81E0      		ldi r24,lo8(1)
 8855 3e2a 00C0      		rjmp .L295
 8856               	.L294:
 691:lp_solve_5.5/lp_scale.c **** 
 692:lp_solve_5.5/lp_scale.c ****   if(scaledelta == NULL)
 8857               		.loc 1 692 0
 8858 3e2c 8B89      		ldd r24,Y+19
 8859 3e2e 9C89      		ldd r25,Y+20
 8860 3e30 892B      		or r24,r25
 8861 3e32 01F4      		brne .L296
 693:lp_solve_5.5/lp_scale.c ****     scalechange = lp->scalars;
 8862               		.loc 1 693 0
 8863 3e34 8989      		ldd r24,Y+17
 8864 3e36 9A89      		ldd r25,Y+18
 8865 3e38 8C53      		subi r24,60
 8866 3e3a 9D4F      		sbci r25,-3
 8867 3e3c FC01      		movw r30,r24
 8868 3e3e 8081      		ld r24,Z
 8869 3e40 9181      		ldd r25,Z+1
 8870 3e42 9C83      		std Y+4,r25
 8871 3e44 8B83      		std Y+3,r24
 8872 3e46 00C0      		rjmp .L297
 8873               	.L296:
 694:lp_solve_5.5/lp_scale.c ****   else
 695:lp_solve_5.5/lp_scale.c ****     scalechange = scaledelta;
 8874               		.loc 1 695 0
 8875 3e48 8B89      		ldd r24,Y+19
 8876 3e4a 9C89      		ldd r25,Y+20
 8877 3e4c 9C83      		std Y+4,r25
 8878 3e4e 8B83      		std Y+3,r24
 8879               	.L297:
 696:lp_solve_5.5/lp_scale.c **** 
 697:lp_solve_5.5/lp_scale.c ****   colMax = lp->columns;
 8880               		.loc 1 697 0
 8881 3e50 8989      		ldd r24,Y+17
 8882 3e52 9A89      		ldd r25,Y+18
 8883 3e54 8451      		subi r24,20
 8884 3e56 9E4F      		sbci r25,-2
 8885 3e58 FC01      		movw r30,r24
 8886 3e5a 8081      		ld r24,Z
 8887 3e5c 9181      		ldd r25,Z+1
 8888 3e5e 9C87      		std Y+12,r25
 8889 3e60 8B87      		std Y+11,r24
 698:lp_solve_5.5/lp_scale.c **** 
 699:lp_solve_5.5/lp_scale.c ****   /* First row-scale the matrix (including the objective function) */
 700:lp_solve_5.5/lp_scale.c ****   for(i = 1; i <= colMax; i++) {
 8890               		.loc 1 700 0
 8891 3e62 81E0      		ldi r24,lo8(1)
 8892 3e64 90E0      		ldi r25,0
 8893 3e66 9A83      		std Y+2,r25
 8894 3e68 8983      		std Y+1,r24
 8895 3e6a 00C0      		rjmp .L298
 8896               	.L299:
 701:lp_solve_5.5/lp_scale.c ****     lp->orig_obj[i] *= scalechange[0];
 8897               		.loc 1 701 0 discriminator 3
 8898 3e6c 8989      		ldd r24,Y+17
 8899 3e6e 9A89      		ldd r25,Y+18
 8900 3e70 845D      		subi r24,-44
 8901 3e72 9D4F      		sbci r25,-3
 8902 3e74 FC01      		movw r30,r24
 8903 3e76 2081      		ld r18,Z
 8904 3e78 3181      		ldd r19,Z+1
 8905 3e7a 8981      		ldd r24,Y+1
 8906 3e7c 9A81      		ldd r25,Y+2
 8907 3e7e 880F      		lsl r24
 8908 3e80 991F      		rol r25
 8909 3e82 880F      		lsl r24
 8910 3e84 991F      		rol r25
 8911 3e86 8901      		movw r16,r18
 8912 3e88 080F      		add r16,r24
 8913 3e8a 191F      		adc r17,r25
 8914 3e8c 8989      		ldd r24,Y+17
 8915 3e8e 9A89      		ldd r25,Y+18
 8916 3e90 845D      		subi r24,-44
 8917 3e92 9D4F      		sbci r25,-3
 8918 3e94 FC01      		movw r30,r24
 8919 3e96 2081      		ld r18,Z
 8920 3e98 3181      		ldd r19,Z+1
 8921 3e9a 8981      		ldd r24,Y+1
 8922 3e9c 9A81      		ldd r25,Y+2
 8923 3e9e 880F      		lsl r24
 8924 3ea0 991F      		rol r25
 8925 3ea2 880F      		lsl r24
 8926 3ea4 991F      		rol r25
 8927 3ea6 820F      		add r24,r18
 8928 3ea8 931F      		adc r25,r19
 8929 3eaa FC01      		movw r30,r24
 8930 3eac 8081      		ld r24,Z
 8931 3eae 9181      		ldd r25,Z+1
 8932 3eb0 A281      		ldd r26,Z+2
 8933 3eb2 B381      		ldd r27,Z+3
 8934 3eb4 2B81      		ldd r18,Y+3
 8935 3eb6 3C81      		ldd r19,Y+4
 8936 3eb8 F901      		movw r30,r18
 8937 3eba 2081      		ld r18,Z
 8938 3ebc 3181      		ldd r19,Z+1
 8939 3ebe 4281      		ldd r20,Z+2
 8940 3ec0 5381      		ldd r21,Z+3
 8941 3ec2 BC01      		movw r22,r24
 8942 3ec4 CD01      		movw r24,r26
 8943 3ec6 0E94 0000 		call __mulsf3
 8944 3eca DC01      		movw r26,r24
 8945 3ecc CB01      		movw r24,r22
 8946 3ece F801      		movw r30,r16
 8947 3ed0 8083      		st Z,r24
 8948 3ed2 9183      		std Z+1,r25
 8949 3ed4 A283      		std Z+2,r26
 8950 3ed6 B383      		std Z+3,r27
 700:lp_solve_5.5/lp_scale.c ****     lp->orig_obj[i] *= scalechange[0];
 8951               		.loc 1 700 0 discriminator 3
 8952 3ed8 8981      		ldd r24,Y+1
 8953 3eda 9A81      		ldd r25,Y+2
 8954 3edc 0196      		adiw r24,1
 8955 3ede 9A83      		std Y+2,r25
 8956 3ee0 8983      		std Y+1,r24
 8957               	.L298:
 700:lp_solve_5.5/lp_scale.c ****     lp->orig_obj[i] *= scalechange[0];
 8958               		.loc 1 700 0 is_stmt 0 discriminator 1
 8959 3ee2 2981      		ldd r18,Y+1
 8960 3ee4 3A81      		ldd r19,Y+2
 8961 3ee6 8B85      		ldd r24,Y+11
 8962 3ee8 9C85      		ldd r25,Y+12
 8963 3eea 8217      		cp r24,r18
 8964 3eec 9307      		cpc r25,r19
 8965 3eee 04F0      		brlt .+2
 8966 3ef0 00C0      		rjmp .L299
 702:lp_solve_5.5/lp_scale.c ****   }
 703:lp_solve_5.5/lp_scale.c **** 
 704:lp_solve_5.5/lp_scale.c ****   nz = get_nonzeros(lp);
 8967               		.loc 1 704 0 is_stmt 1
 8968 3ef2 8989      		ldd r24,Y+17
 8969 3ef4 9A89      		ldd r25,Y+18
 8970 3ef6 0E94 0000 		call get_nonzeros
 8971 3efa 9E87      		std Y+14,r25
 8972 3efc 8D87      		std Y+13,r24
 705:lp_solve_5.5/lp_scale.c ****   value = &(COL_MAT_VALUE(0));
 8973               		.loc 1 705 0
 8974 3efe 8985      		ldd r24,Y+9
 8975 3f00 9A85      		ldd r25,Y+10
 8976 3f02 FC01      		movw r30,r24
 8977 3f04 8089      		ldd r24,Z+16
 8978 3f06 9189      		ldd r25,Z+17
 8979 3f08 9E83      		std Y+6,r25
 8980 3f0a 8D83      		std Y+5,r24
 706:lp_solve_5.5/lp_scale.c ****   rownr = &(COL_MAT_ROWNR(0));
 8981               		.loc 1 706 0
 8982 3f0c 8985      		ldd r24,Y+9
 8983 3f0e 9A85      		ldd r25,Y+10
 8984 3f10 FC01      		movw r30,r24
 8985 3f12 8685      		ldd r24,Z+14
 8986 3f14 9785      		ldd r25,Z+15
 8987 3f16 9887      		std Y+8,r25
 8988 3f18 8F83      		std Y+7,r24
 707:lp_solve_5.5/lp_scale.c ****   for(i = 0; i < nz;
 8989               		.loc 1 707 0
 8990 3f1a 1A82      		std Y+2,__zero_reg__
 8991 3f1c 1982      		std Y+1,__zero_reg__
 8992 3f1e 00C0      		rjmp .L300
 8993               	.L301:
 708:lp_solve_5.5/lp_scale.c ****       i++, value += matValueStep, rownr += matRowColStep) {
 709:lp_solve_5.5/lp_scale.c ****     (*value) *= scalechange[*rownr];
 8994               		.loc 1 709 0
 8995 3f20 8D81      		ldd r24,Y+5
 8996 3f22 9E81      		ldd r25,Y+6
 8997 3f24 FC01      		movw r30,r24
 8998 3f26 8081      		ld r24,Z
 8999 3f28 9181      		ldd r25,Z+1
 9000 3f2a A281      		ldd r26,Z+2
 9001 3f2c B381      		ldd r27,Z+3
 9002 3f2e 2F81      		ldd r18,Y+7
 9003 3f30 3885      		ldd r19,Y+8
 9004 3f32 F901      		movw r30,r18
 9005 3f34 2081      		ld r18,Z
 9006 3f36 3181      		ldd r19,Z+1
 9007 3f38 220F      		lsl r18
 9008 3f3a 331F      		rol r19
 9009 3f3c 220F      		lsl r18
 9010 3f3e 331F      		rol r19
 9011 3f40 4B81      		ldd r20,Y+3
 9012 3f42 5C81      		ldd r21,Y+4
 9013 3f44 240F      		add r18,r20
 9014 3f46 351F      		adc r19,r21
 9015 3f48 F901      		movw r30,r18
 9016 3f4a 2081      		ld r18,Z
 9017 3f4c 3181      		ldd r19,Z+1
 9018 3f4e 4281      		ldd r20,Z+2
 9019 3f50 5381      		ldd r21,Z+3
 9020 3f52 BC01      		movw r22,r24
 9021 3f54 CD01      		movw r24,r26
 9022 3f56 0E94 0000 		call __mulsf3
 9023 3f5a DC01      		movw r26,r24
 9024 3f5c CB01      		movw r24,r22
 9025 3f5e 2D81      		ldd r18,Y+5
 9026 3f60 3E81      		ldd r19,Y+6
 9027 3f62 F901      		movw r30,r18
 9028 3f64 8083      		st Z,r24
 9029 3f66 9183      		std Z+1,r25
 9030 3f68 A283      		std Z+2,r26
 9031 3f6a B383      		std Z+3,r27
 708:lp_solve_5.5/lp_scale.c ****       i++, value += matValueStep, rownr += matRowColStep) {
 9032               		.loc 1 708 0
 9033 3f6c 8981      		ldd r24,Y+1
 9034 3f6e 9A81      		ldd r25,Y+2
 9035 3f70 0196      		adiw r24,1
 9036 3f72 9A83      		std Y+2,r25
 9037 3f74 8983      		std Y+1,r24
 9038 3f76 8D81      		ldd r24,Y+5
 9039 3f78 9E81      		ldd r25,Y+6
 9040 3f7a 0496      		adiw r24,4
 9041 3f7c 9E83      		std Y+6,r25
 9042 3f7e 8D83      		std Y+5,r24
 9043 3f80 8F81      		ldd r24,Y+7
 9044 3f82 9885      		ldd r25,Y+8
 9045 3f84 0296      		adiw r24,2
 9046 3f86 9887      		std Y+8,r25
 9047 3f88 8F83      		std Y+7,r24
 9048               	.L300:
 707:lp_solve_5.5/lp_scale.c ****   for(i = 0; i < nz;
 9049               		.loc 1 707 0 discriminator 1
 9050 3f8a 2981      		ldd r18,Y+1
 9051 3f8c 3A81      		ldd r19,Y+2
 9052 3f8e 8D85      		ldd r24,Y+13
 9053 3f90 9E85      		ldd r25,Y+14
 9054 3f92 2817      		cp r18,r24
 9055 3f94 3907      		cpc r19,r25
 9056 3f96 04F0      		brlt .L301
 710:lp_solve_5.5/lp_scale.c ****   }
 711:lp_solve_5.5/lp_scale.c **** 
 712:lp_solve_5.5/lp_scale.c ****   /* ...and scale the rhs and the row bounds (RANGES in MPS!!) */
 713:lp_solve_5.5/lp_scale.c ****   for(i = 0; i <= lp->rows; i++) {
 9057               		.loc 1 713 0
 9058 3f98 1A82      		std Y+2,__zero_reg__
 9059 3f9a 1982      		std Y+1,__zero_reg__
 9060 3f9c 00C0      		rjmp .L302
 9061               	.L311:
 714:lp_solve_5.5/lp_scale.c ****     if(fabs(lp->orig_rhs[i]) < lp->infinite)
 9062               		.loc 1 714 0
 9063 3f9e 8989      		ldd r24,Y+17
 9064 3fa0 9A89      		ldd r25,Y+18
 9065 3fa2 8A55      		subi r24,90
 9066 3fa4 9D4F      		sbci r25,-3
 9067 3fa6 FC01      		movw r30,r24
 9068 3fa8 2081      		ld r18,Z
 9069 3faa 3181      		ldd r19,Z+1
 9070 3fac 8981      		ldd r24,Y+1
 9071 3fae 9A81      		ldd r25,Y+2
 9072 3fb0 880F      		lsl r24
 9073 3fb2 991F      		rol r25
 9074 3fb4 880F      		lsl r24
 9075 3fb6 991F      		rol r25
 9076 3fb8 820F      		add r24,r18
 9077 3fba 931F      		adc r25,r19
 9078 3fbc FC01      		movw r30,r24
 9079 3fbe 8081      		ld r24,Z
 9080 3fc0 9181      		ldd r25,Z+1
 9081 3fc2 A281      		ldd r26,Z+2
 9082 3fc4 B381      		ldd r27,Z+3
 9083 3fc6 BF77      		andi r27,0x7f
 9084 3fc8 2989      		ldd r18,Y+17
 9085 3fca 3A89      		ldd r19,Y+18
 9086 3fcc 265F      		subi r18,-10
 9087 3fce 3C4F      		sbci r19,-4
 9088 3fd0 F901      		movw r30,r18
 9089 3fd2 2081      		ld r18,Z
 9090 3fd4 3181      		ldd r19,Z+1
 9091 3fd6 4281      		ldd r20,Z+2
 9092 3fd8 5381      		ldd r21,Z+3
 9093 3fda BC01      		movw r22,r24
 9094 3fdc CD01      		movw r24,r26
 9095 3fde 0E94 0000 		call __ltsf2
 9096 3fe2 8823      		tst r24
 9097 3fe4 04F4      		brge .L303
 715:lp_solve_5.5/lp_scale.c ****       lp->orig_rhs[i] *= scalechange[i];
 9098               		.loc 1 715 0
 9099 3fe6 8989      		ldd r24,Y+17
 9100 3fe8 9A89      		ldd r25,Y+18
 9101 3fea 8A55      		subi r24,90
 9102 3fec 9D4F      		sbci r25,-3
 9103 3fee FC01      		movw r30,r24
 9104 3ff0 2081      		ld r18,Z
 9105 3ff2 3181      		ldd r19,Z+1
 9106 3ff4 8981      		ldd r24,Y+1
 9107 3ff6 9A81      		ldd r25,Y+2
 9108 3ff8 880F      		lsl r24
 9109 3ffa 991F      		rol r25
 9110 3ffc 880F      		lsl r24
 9111 3ffe 991F      		rol r25
 9112 4000 8901      		movw r16,r18
 9113 4002 080F      		add r16,r24
 9114 4004 191F      		adc r17,r25
 9115 4006 8989      		ldd r24,Y+17
 9116 4008 9A89      		ldd r25,Y+18
 9117 400a 8A55      		subi r24,90
 9118 400c 9D4F      		sbci r25,-3
 9119 400e FC01      		movw r30,r24
 9120 4010 2081      		ld r18,Z
 9121 4012 3181      		ldd r19,Z+1
 9122 4014 8981      		ldd r24,Y+1
 9123 4016 9A81      		ldd r25,Y+2
 9124 4018 880F      		lsl r24
 9125 401a 991F      		rol r25
 9126 401c 880F      		lsl r24
 9127 401e 991F      		rol r25
 9128 4020 820F      		add r24,r18
 9129 4022 931F      		adc r25,r19
 9130 4024 FC01      		movw r30,r24
 9131 4026 8081      		ld r24,Z
 9132 4028 9181      		ldd r25,Z+1
 9133 402a A281      		ldd r26,Z+2
 9134 402c B381      		ldd r27,Z+3
 9135 402e 2981      		ldd r18,Y+1
 9136 4030 3A81      		ldd r19,Y+2
 9137 4032 220F      		lsl r18
 9138 4034 331F      		rol r19
 9139 4036 220F      		lsl r18
 9140 4038 331F      		rol r19
 9141 403a 4B81      		ldd r20,Y+3
 9142 403c 5C81      		ldd r21,Y+4
 9143 403e 240F      		add r18,r20
 9144 4040 351F      		adc r19,r21
 9145 4042 F901      		movw r30,r18
 9146 4044 2081      		ld r18,Z
 9147 4046 3181      		ldd r19,Z+1
 9148 4048 4281      		ldd r20,Z+2
 9149 404a 5381      		ldd r21,Z+3
 9150 404c BC01      		movw r22,r24
 9151 404e CD01      		movw r24,r26
 9152 4050 0E94 0000 		call __mulsf3
 9153 4054 DC01      		movw r26,r24
 9154 4056 CB01      		movw r24,r22
 9155 4058 F801      		movw r30,r16
 9156 405a 8083      		st Z,r24
 9157 405c 9183      		std Z+1,r25
 9158 405e A283      		std Z+2,r26
 9159 4060 B383      		std Z+3,r27
 9160               	.L303:
 716:lp_solve_5.5/lp_scale.c **** 
 717:lp_solve_5.5/lp_scale.c ****     j = lp->presolve_undo->var_to_orig[i];
 9161               		.loc 1 717 0
 9162 4062 8989      		ldd r24,Y+17
 9163 4064 9A89      		ldd r25,Y+18
 9164 4066 8A59      		subi r24,-102
 9165 4068 9C4F      		sbci r25,-4
 9166 406a FC01      		movw r30,r24
 9167 406c 8081      		ld r24,Z
 9168 406e 9181      		ldd r25,Z+1
 9169 4070 FC01      		movw r30,r24
 9170 4072 2085      		ldd r18,Z+8
 9171 4074 3185      		ldd r19,Z+9
 9172 4076 8981      		ldd r24,Y+1
 9173 4078 9A81      		ldd r25,Y+2
 9174 407a 880F      		lsl r24
 9175 407c 991F      		rol r25
 9176 407e 820F      		add r24,r18
 9177 4080 931F      		adc r25,r19
 9178 4082 FC01      		movw r30,r24
 9179 4084 8081      		ld r24,Z
 9180 4086 9181      		ldd r25,Z+1
 9181 4088 988B      		std Y+16,r25
 9182 408a 8F87      		std Y+15,r24
 718:lp_solve_5.5/lp_scale.c ****     if(j != 0)
 9183               		.loc 1 718 0
 9184 408c 8F85      		ldd r24,Y+15
 9185 408e 9889      		ldd r25,Y+16
 9186 4090 892B      		or r24,r25
 9187 4092 01F4      		brne .+2
 9188 4094 00C0      		rjmp .L305
 719:lp_solve_5.5/lp_scale.c ****       lp->presolve_undo->fixed_rhs[j] *= scalechange[i];
 9189               		.loc 1 719 0
 9190 4096 8989      		ldd r24,Y+17
 9191 4098 9A89      		ldd r25,Y+18
 9192 409a 8A59      		subi r24,-102
 9193 409c 9C4F      		sbci r25,-4
 9194 409e FC01      		movw r30,r24
 9195 40a0 8081      		ld r24,Z
 9196 40a2 9181      		ldd r25,Z+1
 9197 40a4 FC01      		movw r30,r24
 9198 40a6 2485      		ldd r18,Z+12
 9199 40a8 3585      		ldd r19,Z+13
 9200 40aa 8F85      		ldd r24,Y+15
 9201 40ac 9889      		ldd r25,Y+16
 9202 40ae 880F      		lsl r24
 9203 40b0 991F      		rol r25
 9204 40b2 880F      		lsl r24
 9205 40b4 991F      		rol r25
 9206 40b6 8901      		movw r16,r18
 9207 40b8 080F      		add r16,r24
 9208 40ba 191F      		adc r17,r25
 9209 40bc 8989      		ldd r24,Y+17
 9210 40be 9A89      		ldd r25,Y+18
 9211 40c0 8A59      		subi r24,-102
 9212 40c2 9C4F      		sbci r25,-4
 9213 40c4 FC01      		movw r30,r24
 9214 40c6 8081      		ld r24,Z
 9215 40c8 9181      		ldd r25,Z+1
 9216 40ca FC01      		movw r30,r24
 9217 40cc 2485      		ldd r18,Z+12
 9218 40ce 3585      		ldd r19,Z+13
 9219 40d0 8F85      		ldd r24,Y+15
 9220 40d2 9889      		ldd r25,Y+16
 9221 40d4 880F      		lsl r24
 9222 40d6 991F      		rol r25
 9223 40d8 880F      		lsl r24
 9224 40da 991F      		rol r25
 9225 40dc 820F      		add r24,r18
 9226 40de 931F      		adc r25,r19
 9227 40e0 FC01      		movw r30,r24
 9228 40e2 8081      		ld r24,Z
 9229 40e4 9181      		ldd r25,Z+1
 9230 40e6 A281      		ldd r26,Z+2
 9231 40e8 B381      		ldd r27,Z+3
 9232 40ea 2981      		ldd r18,Y+1
 9233 40ec 3A81      		ldd r19,Y+2
 9234 40ee 220F      		lsl r18
 9235 40f0 331F      		rol r19
 9236 40f2 220F      		lsl r18
 9237 40f4 331F      		rol r19
 9238 40f6 4B81      		ldd r20,Y+3
 9239 40f8 5C81      		ldd r21,Y+4
 9240 40fa 240F      		add r18,r20
 9241 40fc 351F      		adc r19,r21
 9242 40fe F901      		movw r30,r18
 9243 4100 2081      		ld r18,Z
 9244 4102 3181      		ldd r19,Z+1
 9245 4104 4281      		ldd r20,Z+2
 9246 4106 5381      		ldd r21,Z+3
 9247 4108 BC01      		movw r22,r24
 9248 410a CD01      		movw r24,r26
 9249 410c 0E94 0000 		call __mulsf3
 9250 4110 DC01      		movw r26,r24
 9251 4112 CB01      		movw r24,r22
 9252 4114 F801      		movw r30,r16
 9253 4116 8083      		st Z,r24
 9254 4118 9183      		std Z+1,r25
 9255 411a A283      		std Z+2,r26
 9256 411c B383      		std Z+3,r27
 9257               	.L305:
 720:lp_solve_5.5/lp_scale.c **** 
 721:lp_solve_5.5/lp_scale.c ****     if(lp->orig_upbo[i] < lp->infinite)     /* This is the range */
 9258               		.loc 1 721 0
 9259 411e 8989      		ldd r24,Y+17
 9260 4120 9A89      		ldd r25,Y+18
 9261 4122 8255      		subi r24,82
 9262 4124 9D4F      		sbci r25,-3
 9263 4126 FC01      		movw r30,r24
 9264 4128 2081      		ld r18,Z
 9265 412a 3181      		ldd r19,Z+1
 9266 412c 8981      		ldd r24,Y+1
 9267 412e 9A81      		ldd r25,Y+2
 9268 4130 880F      		lsl r24
 9269 4132 991F      		rol r25
 9270 4134 880F      		lsl r24
 9271 4136 991F      		rol r25
 9272 4138 820F      		add r24,r18
 9273 413a 931F      		adc r25,r19
 9274 413c FC01      		movw r30,r24
 9275 413e 8081      		ld r24,Z
 9276 4140 9181      		ldd r25,Z+1
 9277 4142 A281      		ldd r26,Z+2
 9278 4144 B381      		ldd r27,Z+3
 9279 4146 2989      		ldd r18,Y+17
 9280 4148 3A89      		ldd r19,Y+18
 9281 414a 265F      		subi r18,-10
 9282 414c 3C4F      		sbci r19,-4
 9283 414e F901      		movw r30,r18
 9284 4150 2081      		ld r18,Z
 9285 4152 3181      		ldd r19,Z+1
 9286 4154 4281      		ldd r20,Z+2
 9287 4156 5381      		ldd r21,Z+3
 9288 4158 BC01      		movw r22,r24
 9289 415a CD01      		movw r24,r26
 9290 415c 0E94 0000 		call __ltsf2
 9291 4160 8823      		tst r24
 9292 4162 04F4      		brge .L306
 722:lp_solve_5.5/lp_scale.c ****       lp->orig_upbo[i] *= scalechange[i];
 9293               		.loc 1 722 0
 9294 4164 8989      		ldd r24,Y+17
 9295 4166 9A89      		ldd r25,Y+18
 9296 4168 8255      		subi r24,82
 9297 416a 9D4F      		sbci r25,-3
 9298 416c FC01      		movw r30,r24
 9299 416e 2081      		ld r18,Z
 9300 4170 3181      		ldd r19,Z+1
 9301 4172 8981      		ldd r24,Y+1
 9302 4174 9A81      		ldd r25,Y+2
 9303 4176 880F      		lsl r24
 9304 4178 991F      		rol r25
 9305 417a 880F      		lsl r24
 9306 417c 991F      		rol r25
 9307 417e 8901      		movw r16,r18
 9308 4180 080F      		add r16,r24
 9309 4182 191F      		adc r17,r25
 9310 4184 8989      		ldd r24,Y+17
 9311 4186 9A89      		ldd r25,Y+18
 9312 4188 8255      		subi r24,82
 9313 418a 9D4F      		sbci r25,-3
 9314 418c FC01      		movw r30,r24
 9315 418e 2081      		ld r18,Z
 9316 4190 3181      		ldd r19,Z+1
 9317 4192 8981      		ldd r24,Y+1
 9318 4194 9A81      		ldd r25,Y+2
 9319 4196 880F      		lsl r24
 9320 4198 991F      		rol r25
 9321 419a 880F      		lsl r24
 9322 419c 991F      		rol r25
 9323 419e 820F      		add r24,r18
 9324 41a0 931F      		adc r25,r19
 9325 41a2 FC01      		movw r30,r24
 9326 41a4 8081      		ld r24,Z
 9327 41a6 9181      		ldd r25,Z+1
 9328 41a8 A281      		ldd r26,Z+2
 9329 41aa B381      		ldd r27,Z+3
 9330 41ac 2981      		ldd r18,Y+1
 9331 41ae 3A81      		ldd r19,Y+2
 9332 41b0 220F      		lsl r18
 9333 41b2 331F      		rol r19
 9334 41b4 220F      		lsl r18
 9335 41b6 331F      		rol r19
 9336 41b8 4B81      		ldd r20,Y+3
 9337 41ba 5C81      		ldd r21,Y+4
 9338 41bc 240F      		add r18,r20
 9339 41be 351F      		adc r19,r21
 9340 41c0 F901      		movw r30,r18
 9341 41c2 2081      		ld r18,Z
 9342 41c4 3181      		ldd r19,Z+1
 9343 41c6 4281      		ldd r20,Z+2
 9344 41c8 5381      		ldd r21,Z+3
 9345 41ca BC01      		movw r22,r24
 9346 41cc CD01      		movw r24,r26
 9347 41ce 0E94 0000 		call __mulsf3
 9348 41d2 DC01      		movw r26,r24
 9349 41d4 CB01      		movw r24,r22
 9350 41d6 F801      		movw r30,r16
 9351 41d8 8083      		st Z,r24
 9352 41da 9183      		std Z+1,r25
 9353 41dc A283      		std Z+2,r26
 9354 41de B383      		std Z+3,r27
 9355               	.L306:
 723:lp_solve_5.5/lp_scale.c **** 
 724:lp_solve_5.5/lp_scale.c ****     if((lp->orig_lowbo[i] != 0) && (fabs(lp->orig_lowbo[i]) < lp->infinite))
 9356               		.loc 1 724 0
 9357 41e0 8989      		ldd r24,Y+17
 9358 41e2 9A89      		ldd r25,Y+18
 9359 41e4 8E54      		subi r24,78
 9360 41e6 9D4F      		sbci r25,-3
 9361 41e8 FC01      		movw r30,r24
 9362 41ea 2081      		ld r18,Z
 9363 41ec 3181      		ldd r19,Z+1
 9364 41ee 8981      		ldd r24,Y+1
 9365 41f0 9A81      		ldd r25,Y+2
 9366 41f2 880F      		lsl r24
 9367 41f4 991F      		rol r25
 9368 41f6 880F      		lsl r24
 9369 41f8 991F      		rol r25
 9370 41fa 820F      		add r24,r18
 9371 41fc 931F      		adc r25,r19
 9372 41fe FC01      		movw r30,r24
 9373 4200 8081      		ld r24,Z
 9374 4202 9181      		ldd r25,Z+1
 9375 4204 A281      		ldd r26,Z+2
 9376 4206 B381      		ldd r27,Z+3
 9377 4208 20E0      		ldi r18,0
 9378 420a 30E0      		ldi r19,0
 9379 420c A901      		movw r20,r18
 9380 420e BC01      		movw r22,r24
 9381 4210 CD01      		movw r24,r26
 9382 4212 0E94 0000 		call __nesf2
 9383 4216 8823      		tst r24
 9384 4218 01F4      		brne .+2
 9385 421a 00C0      		rjmp .L308
 9386               		.loc 1 724 0 is_stmt 0 discriminator 1
 9387 421c 8989      		ldd r24,Y+17
 9388 421e 9A89      		ldd r25,Y+18
 9389 4220 8E54      		subi r24,78
 9390 4222 9D4F      		sbci r25,-3
 9391 4224 FC01      		movw r30,r24
 9392 4226 2081      		ld r18,Z
 9393 4228 3181      		ldd r19,Z+1
 9394 422a 8981      		ldd r24,Y+1
 9395 422c 9A81      		ldd r25,Y+2
 9396 422e 880F      		lsl r24
 9397 4230 991F      		rol r25
 9398 4232 880F      		lsl r24
 9399 4234 991F      		rol r25
 9400 4236 820F      		add r24,r18
 9401 4238 931F      		adc r25,r19
 9402 423a FC01      		movw r30,r24
 9403 423c 8081      		ld r24,Z
 9404 423e 9181      		ldd r25,Z+1
 9405 4240 A281      		ldd r26,Z+2
 9406 4242 B381      		ldd r27,Z+3
 9407 4244 BF77      		andi r27,0x7f
 9408 4246 2989      		ldd r18,Y+17
 9409 4248 3A89      		ldd r19,Y+18
 9410 424a 265F      		subi r18,-10
 9411 424c 3C4F      		sbci r19,-4
 9412 424e F901      		movw r30,r18
 9413 4250 2081      		ld r18,Z
 9414 4252 3181      		ldd r19,Z+1
 9415 4254 4281      		ldd r20,Z+2
 9416 4256 5381      		ldd r21,Z+3
 9417 4258 BC01      		movw r22,r24
 9418 425a CD01      		movw r24,r26
 9419 425c 0E94 0000 		call __ltsf2
 9420 4260 8823      		tst r24
 9421 4262 04F4      		brge .L308
 725:lp_solve_5.5/lp_scale.c ****       lp->orig_lowbo[i] *= scalechange[i];
 9422               		.loc 1 725 0 is_stmt 1
 9423 4264 8989      		ldd r24,Y+17
 9424 4266 9A89      		ldd r25,Y+18
 9425 4268 8E54      		subi r24,78
 9426 426a 9D4F      		sbci r25,-3
 9427 426c FC01      		movw r30,r24
 9428 426e 2081      		ld r18,Z
 9429 4270 3181      		ldd r19,Z+1
 9430 4272 8981      		ldd r24,Y+1
 9431 4274 9A81      		ldd r25,Y+2
 9432 4276 880F      		lsl r24
 9433 4278 991F      		rol r25
 9434 427a 880F      		lsl r24
 9435 427c 991F      		rol r25
 9436 427e 8901      		movw r16,r18
 9437 4280 080F      		add r16,r24
 9438 4282 191F      		adc r17,r25
 9439 4284 8989      		ldd r24,Y+17
 9440 4286 9A89      		ldd r25,Y+18
 9441 4288 8E54      		subi r24,78
 9442 428a 9D4F      		sbci r25,-3
 9443 428c FC01      		movw r30,r24
 9444 428e 2081      		ld r18,Z
 9445 4290 3181      		ldd r19,Z+1
 9446 4292 8981      		ldd r24,Y+1
 9447 4294 9A81      		ldd r25,Y+2
 9448 4296 880F      		lsl r24
 9449 4298 991F      		rol r25
 9450 429a 880F      		lsl r24
 9451 429c 991F      		rol r25
 9452 429e 820F      		add r24,r18
 9453 42a0 931F      		adc r25,r19
 9454 42a2 FC01      		movw r30,r24
 9455 42a4 8081      		ld r24,Z
 9456 42a6 9181      		ldd r25,Z+1
 9457 42a8 A281      		ldd r26,Z+2
 9458 42aa B381      		ldd r27,Z+3
 9459 42ac 2981      		ldd r18,Y+1
 9460 42ae 3A81      		ldd r19,Y+2
 9461 42b0 220F      		lsl r18
 9462 42b2 331F      		rol r19
 9463 42b4 220F      		lsl r18
 9464 42b6 331F      		rol r19
 9465 42b8 4B81      		ldd r20,Y+3
 9466 42ba 5C81      		ldd r21,Y+4
 9467 42bc 240F      		add r18,r20
 9468 42be 351F      		adc r19,r21
 9469 42c0 F901      		movw r30,r18
 9470 42c2 2081      		ld r18,Z
 9471 42c4 3181      		ldd r19,Z+1
 9472 42c6 4281      		ldd r20,Z+2
 9473 42c8 5381      		ldd r21,Z+3
 9474 42ca BC01      		movw r22,r24
 9475 42cc CD01      		movw r24,r26
 9476 42ce 0E94 0000 		call __mulsf3
 9477 42d2 DC01      		movw r26,r24
 9478 42d4 CB01      		movw r24,r22
 9479 42d6 F801      		movw r30,r16
 9480 42d8 8083      		st Z,r24
 9481 42da 9183      		std Z+1,r25
 9482 42dc A283      		std Z+2,r26
 9483 42de B383      		std Z+3,r27
 9484               	.L308:
 713:lp_solve_5.5/lp_scale.c ****     if(fabs(lp->orig_rhs[i]) < lp->infinite)
 9485               		.loc 1 713 0 discriminator 2
 9486 42e0 8981      		ldd r24,Y+1
 9487 42e2 9A81      		ldd r25,Y+2
 9488 42e4 0196      		adiw r24,1
 9489 42e6 9A83      		std Y+2,r25
 9490 42e8 8983      		std Y+1,r24
 9491               	.L302:
 713:lp_solve_5.5/lp_scale.c ****     if(fabs(lp->orig_rhs[i]) < lp->infinite)
 9492               		.loc 1 713 0 is_stmt 0 discriminator 1
 9493 42ea 8989      		ldd r24,Y+17
 9494 42ec 9A89      		ldd r25,Y+18
 9495 42ee 8651      		subi r24,22
 9496 42f0 9E4F      		sbci r25,-2
 9497 42f2 FC01      		movw r30,r24
 9498 42f4 2081      		ld r18,Z
 9499 42f6 3181      		ldd r19,Z+1
 9500 42f8 8981      		ldd r24,Y+1
 9501 42fa 9A81      		ldd r25,Y+2
 9502 42fc 2817      		cp r18,r24
 9503 42fe 3907      		cpc r19,r25
 9504 4300 04F0      		brlt .+2
 9505 4302 00C0      		rjmp .L311
 726:lp_solve_5.5/lp_scale.c ****   }
 727:lp_solve_5.5/lp_scale.c **** 
 728:lp_solve_5.5/lp_scale.c ****   set_action(&lp->spx_action, ACTION_REBASE | ACTION_REINVERT | ACTION_RECOMPUTE);
 9506               		.loc 1 728 0 is_stmt 1
 9507 4304 8989      		ldd r24,Y+17
 9508 4306 9A89      		ldd r25,Y+18
 9509 4308 8E50      		subi r24,14
 9510 430a 9D4F      		sbci r25,-3
 9511 430c 66E1      		ldi r22,lo8(22)
 9512 430e 70E0      		ldi r23,0
 9513 4310 0E94 0000 		call set_action
 729:lp_solve_5.5/lp_scale.c **** 
 730:lp_solve_5.5/lp_scale.c ****   return( TRUE );
 9514               		.loc 1 730 0
 9515 4314 81E0      		ldi r24,lo8(1)
 9516               	.L295:
 9517               	/* epilogue start */
 731:lp_solve_5.5/lp_scale.c **** }
 9518               		.loc 1 731 0
 9519 4316 6496      		adiw r28,20
 9520 4318 0FB6      		in __tmp_reg__,__SREG__
 9521 431a F894      		cli
 9522 431c DEBF      		out __SP_H__,r29
 9523 431e 0FBE      		out __SREG__,__tmp_reg__
 9524 4320 CDBF      		out __SP_L__,r28
 9525 4322 DF91      		pop r29
 9526 4324 CF91      		pop r28
 9527 4326 1F91      		pop r17
 9528 4328 0F91      		pop r16
 9529 432a 0895      		ret
 9530               		.cfi_endproc
 9531               	.LFE21:
 9533               	.global	scale
 9535               	scale:
 9536               	.LFB22:
 732:lp_solve_5.5/lp_scale.c **** 
 733:lp_solve_5.5/lp_scale.c **** STATIC REAL scale(lprec *lp, REAL *scaledelta)
 734:lp_solve_5.5/lp_scale.c **** {
 9537               		.loc 1 734 0
 9538               		.cfi_startproc
 9539 432c CF92      		push r12
 9540               	.LCFI98:
 9541               		.cfi_def_cfa_offset 3
 9542               		.cfi_offset 12, -2
 9543 432e DF92      		push r13
 9544               	.LCFI99:
 9545               		.cfi_def_cfa_offset 4
 9546               		.cfi_offset 13, -3
 9547 4330 EF92      		push r14
 9548               	.LCFI100:
 9549               		.cfi_def_cfa_offset 5
 9550               		.cfi_offset 14, -4
 9551 4332 FF92      		push r15
 9552               	.LCFI101:
 9553               		.cfi_def_cfa_offset 6
 9554               		.cfi_offset 15, -5
 9555 4334 0F93      		push r16
 9556               	.LCFI102:
 9557               		.cfi_def_cfa_offset 7
 9558               		.cfi_offset 16, -6
 9559 4336 1F93      		push r17
 9560               	.LCFI103:
 9561               		.cfi_def_cfa_offset 8
 9562               		.cfi_offset 17, -7
 9563 4338 CF93      		push r28
 9564               	.LCFI104:
 9565               		.cfi_def_cfa_offset 9
 9566               		.cfi_offset 28, -8
 9567 433a DF93      		push r29
 9568               	.LCFI105:
 9569               		.cfi_def_cfa_offset 10
 9570               		.cfi_offset 29, -9
 9571 433c CDB7      		in r28,__SP_L__
 9572 433e DEB7      		in r29,__SP_H__
 9573               	.LCFI106:
 9574               		.cfi_def_cfa_register 28
 9575 4340 A897      		sbiw r28,40
 9576               	.LCFI107:
 9577               		.cfi_def_cfa_offset 50
 9578 4342 0FB6      		in __tmp_reg__,__SREG__
 9579 4344 F894      		cli
 9580 4346 DEBF      		out __SP_H__,r29
 9581 4348 0FBE      		out __SREG__,__tmp_reg__
 9582 434a CDBF      		out __SP_L__,r28
 9583               	/* prologue: function */
 9584               	/* frame size = 40 */
 9585               	/* stack size = 48 */
 9586               	.L__stack_usage = 48
 9587 434c 9EA3      		std Y+38,r25
 9588 434e 8DA3      		std Y+37,r24
 9589 4350 78A7      		std Y+40,r23
 9590 4352 6FA3      		std Y+39,r22
 735:lp_solve_5.5/lp_scale.c ****   int     i, j, nz, row_count, nzOF = 0;
 9591               		.loc 1 735 0
 9592 4354 1886      		std Y+8,__zero_reg__
 9593 4356 1F82      		std Y+7,__zero_reg__
 736:lp_solve_5.5/lp_scale.c ****   REAL    *row_max, *row_min, *scalechange = NULL, absval;
 9594               		.loc 1 736 0
 9595 4358 1C8E      		std Y+28,__zero_reg__
 9596 435a 1B8E      		std Y+27,__zero_reg__
 737:lp_solve_5.5/lp_scale.c ****   REAL    col_max, col_min;
 738:lp_solve_5.5/lp_scale.c ****   MYBOOL  rowscaled, colscaled;
 739:lp_solve_5.5/lp_scale.c ****   MATrec  *mat = lp->matA;
 9597               		.loc 1 739 0
 9598 435c 8DA1      		ldd r24,Y+37
 9599 435e 9EA1      		ldd r25,Y+38
 9600 4360 8A54      		subi r24,74
 9601 4362 9D4F      		sbci r25,-3
 9602 4364 FC01      		movw r30,r24
 9603 4366 8081      		ld r24,Z
 9604 4368 9181      		ldd r25,Z+1
 9605 436a 9A8B      		std Y+18,r25
 9606 436c 898B      		std Y+17,r24
 740:lp_solve_5.5/lp_scale.c ****   REAL    *value;
 741:lp_solve_5.5/lp_scale.c ****   int     *rownr;
 742:lp_solve_5.5/lp_scale.c **** 
 743:lp_solve_5.5/lp_scale.c ****   if(is_scaletype(lp, SCALE_NONE))
 9607               		.loc 1 743 0
 9608 436e 8DA1      		ldd r24,Y+37
 9609 4370 9EA1      		ldd r25,Y+38
 9610 4372 60E0      		ldi r22,0
 9611 4374 70E0      		ldi r23,0
 9612 4376 0E94 0000 		call is_scaletype
 9613 437a 8823      		tst r24
 9614 437c 01F0      		breq .L317
 744:lp_solve_5.5/lp_scale.c ****     return(0.0);
 9615               		.loc 1 744 0
 9616 437e 80E0      		ldi r24,0
 9617 4380 90E0      		ldi r25,0
 9618 4382 DC01      		movw r26,r24
 9619 4384 00C0      		rjmp .L364
 9620               	.L317:
 745:lp_solve_5.5/lp_scale.c **** 
 746:lp_solve_5.5/lp_scale.c ****   if(!lp->scaling_used) {
 9621               		.loc 1 746 0
 9622 4386 8DA1      		ldd r24,Y+37
 9623 4388 9EA1      		ldd r25,Y+38
 9624 438a 8A53      		subi r24,58
 9625 438c 9D4F      		sbci r25,-3
 9626 438e FC01      		movw r30,r24
 9627 4390 8081      		ld r24,Z
 9628 4392 8823      		tst r24
 9629 4394 01F0      		breq .+2
 9630 4396 00C0      		rjmp .L319
 747:lp_solve_5.5/lp_scale.c ****     allocREAL(lp, &lp->scalars, lp->sum_alloc + 1, FALSE);
 9631               		.loc 1 747 0
 9632 4398 8DA1      		ldd r24,Y+37
 9633 439a 9EA1      		ldd r25,Y+38
 9634 439c 8C50      		subi r24,12
 9635 439e 9E4F      		sbci r25,-2
 9636 43a0 FC01      		movw r30,r24
 9637 43a2 8081      		ld r24,Z
 9638 43a4 9181      		ldd r25,Z+1
 9639 43a6 AC01      		movw r20,r24
 9640 43a8 4F5F      		subi r20,-1
 9641 43aa 5F4F      		sbci r21,-1
 9642 43ac 8DA1      		ldd r24,Y+37
 9643 43ae 9EA1      		ldd r25,Y+38
 9644 43b0 BC01      		movw r22,r24
 9645 43b2 6C53      		subi r22,60
 9646 43b4 7D4F      		sbci r23,-3
 9647 43b6 8DA1      		ldd r24,Y+37
 9648 43b8 9EA1      		ldd r25,Y+38
 9649 43ba 20E0      		ldi r18,0
 9650 43bc 0E94 0000 		call allocREAL
 748:lp_solve_5.5/lp_scale.c ****     for(i = 0; i <= lp->sum; i++) {
 9651               		.loc 1 748 0
 9652 43c0 1A82      		std Y+2,__zero_reg__
 9653 43c2 1982      		std Y+1,__zero_reg__
 9654 43c4 00C0      		rjmp .L320
 9655               	.L321:
 749:lp_solve_5.5/lp_scale.c ****       lp->scalars[i] = 1;
 9656               		.loc 1 749 0 discriminator 3
 9657 43c6 8DA1      		ldd r24,Y+37
 9658 43c8 9EA1      		ldd r25,Y+38
 9659 43ca 8C53      		subi r24,60
 9660 43cc 9D4F      		sbci r25,-3
 9661 43ce FC01      		movw r30,r24
 9662 43d0 2081      		ld r18,Z
 9663 43d2 3181      		ldd r19,Z+1
 9664 43d4 8981      		ldd r24,Y+1
 9665 43d6 9A81      		ldd r25,Y+2
 9666 43d8 880F      		lsl r24
 9667 43da 991F      		rol r25
 9668 43dc 880F      		lsl r24
 9669 43de 991F      		rol r25
 9670 43e0 280F      		add r18,r24
 9671 43e2 391F      		adc r19,r25
 9672 43e4 80E0      		ldi r24,0
 9673 43e6 90E0      		ldi r25,0
 9674 43e8 A0E8      		ldi r26,lo8(-128)
 9675 43ea BFE3      		ldi r27,lo8(63)
 9676 43ec F901      		movw r30,r18
 9677 43ee 8083      		st Z,r24
 9678 43f0 9183      		std Z+1,r25
 9679 43f2 A283      		std Z+2,r26
 9680 43f4 B383      		std Z+3,r27
 748:lp_solve_5.5/lp_scale.c ****     for(i = 0; i <= lp->sum; i++) {
 9681               		.loc 1 748 0 discriminator 3
 9682 43f6 8981      		ldd r24,Y+1
 9683 43f8 9A81      		ldd r25,Y+2
 9684 43fa 0196      		adiw r24,1
 9685 43fc 9A83      		std Y+2,r25
 9686 43fe 8983      		std Y+1,r24
 9687               	.L320:
 748:lp_solve_5.5/lp_scale.c ****     for(i = 0; i <= lp->sum; i++) {
 9688               		.loc 1 748 0 is_stmt 0 discriminator 1
 9689 4400 8DA1      		ldd r24,Y+37
 9690 4402 9EA1      		ldd r25,Y+38
 9691 4404 8851      		subi r24,24
 9692 4406 9E4F      		sbci r25,-2
 9693 4408 FC01      		movw r30,r24
 9694 440a 2081      		ld r18,Z
 9695 440c 3181      		ldd r19,Z+1
 9696 440e 8981      		ldd r24,Y+1
 9697 4410 9A81      		ldd r25,Y+2
 9698 4412 2817      		cp r18,r24
 9699 4414 3907      		cpc r19,r25
 9700 4416 04F4      		brge .L321
 750:lp_solve_5.5/lp_scale.c ****     }
 751:lp_solve_5.5/lp_scale.c ****     lp->scaling_used = TRUE;
 9701               		.loc 1 751 0 is_stmt 1
 9702 4418 8DA1      		ldd r24,Y+37
 9703 441a 9EA1      		ldd r25,Y+38
 9704 441c 8A53      		subi r24,58
 9705 441e 9D4F      		sbci r25,-3
 9706 4420 21E0      		ldi r18,lo8(1)
 9707 4422 FC01      		movw r30,r24
 9708 4424 2083      		st Z,r18
 9709               	.L319:
 752:lp_solve_5.5/lp_scale.c ****   }
 753:lp_solve_5.5/lp_scale.c **** #ifdef Paranoia
 754:lp_solve_5.5/lp_scale.c ****   else
 755:lp_solve_5.5/lp_scale.c ****     for(i = 0; i <= lp->sum; i++) {
 756:lp_solve_5.5/lp_scale.c ****       if(lp->scalars[i] == 0)
 757:lp_solve_5.5/lp_scale.c ****         report(lp, SEVERE, "scale: Zero-valued scalar found at index %d\n", i);
 758:lp_solve_5.5/lp_scale.c ****     }
 759:lp_solve_5.5/lp_scale.c **** #endif
 760:lp_solve_5.5/lp_scale.c ****   if(scaledelta == NULL)
 9710               		.loc 1 760 0
 9711 4426 8FA1      		ldd r24,Y+39
 9712 4428 98A5      		ldd r25,Y+40
 9713 442a 892B      		or r24,r25
 9714 442c 01F4      		brne .L322
 761:lp_solve_5.5/lp_scale.c ****     allocREAL(lp, &scalechange, lp->sum + 1, FALSE);
 9715               		.loc 1 761 0
 9716 442e 8DA1      		ldd r24,Y+37
 9717 4430 9EA1      		ldd r25,Y+38
 9718 4432 8851      		subi r24,24
 9719 4434 9E4F      		sbci r25,-2
 9720 4436 FC01      		movw r30,r24
 9721 4438 8081      		ld r24,Z
 9722 443a 9181      		ldd r25,Z+1
 9723 443c AC01      		movw r20,r24
 9724 443e 4F5F      		subi r20,-1
 9725 4440 5F4F      		sbci r21,-1
 9726 4442 BE01      		movw r22,r28
 9727 4444 655E      		subi r22,-27
 9728 4446 7F4F      		sbci r23,-1
 9729 4448 8DA1      		ldd r24,Y+37
 9730 444a 9EA1      		ldd r25,Y+38
 9731 444c 20E0      		ldi r18,0
 9732 444e 0E94 0000 		call allocREAL
 9733 4452 00C0      		rjmp .L323
 9734               	.L322:
 762:lp_solve_5.5/lp_scale.c ****   else
 763:lp_solve_5.5/lp_scale.c ****     scalechange = scaledelta;
 9735               		.loc 1 763 0
 9736 4454 8FA1      		ldd r24,Y+39
 9737 4456 98A5      		ldd r25,Y+40
 9738 4458 9C8F      		std Y+28,r25
 9739 445a 8B8F      		std Y+27,r24
 9740               	.L323:
 764:lp_solve_5.5/lp_scale.c **** 
 765:lp_solve_5.5/lp_scale.c ****  /* Must initialize due to computation of scaling statistic - KE */
 766:lp_solve_5.5/lp_scale.c ****   for(i = 0; i <= lp->sum; i++)
 9741               		.loc 1 766 0
 9742 445c 1A82      		std Y+2,__zero_reg__
 9743 445e 1982      		std Y+1,__zero_reg__
 9744 4460 00C0      		rjmp .L324
 9745               	.L325:
 767:lp_solve_5.5/lp_scale.c ****     scalechange[i] = 1;
 9746               		.loc 1 767 0 discriminator 3
 9747 4462 2B8D      		ldd r18,Y+27
 9748 4464 3C8D      		ldd r19,Y+28
 9749 4466 8981      		ldd r24,Y+1
 9750 4468 9A81      		ldd r25,Y+2
 9751 446a 880F      		lsl r24
 9752 446c 991F      		rol r25
 9753 446e 880F      		lsl r24
 9754 4470 991F      		rol r25
 9755 4472 280F      		add r18,r24
 9756 4474 391F      		adc r19,r25
 9757 4476 80E0      		ldi r24,0
 9758 4478 90E0      		ldi r25,0
 9759 447a A0E8      		ldi r26,lo8(-128)
 9760 447c BFE3      		ldi r27,lo8(63)
 9761 447e F901      		movw r30,r18
 9762 4480 8083      		st Z,r24
 9763 4482 9183      		std Z+1,r25
 9764 4484 A283      		std Z+2,r26
 9765 4486 B383      		std Z+3,r27
 766:lp_solve_5.5/lp_scale.c ****     scalechange[i] = 1;
 9766               		.loc 1 766 0 discriminator 3
 9767 4488 8981      		ldd r24,Y+1
 9768 448a 9A81      		ldd r25,Y+2
 9769 448c 0196      		adiw r24,1
 9770 448e 9A83      		std Y+2,r25
 9771 4490 8983      		std Y+1,r24
 9772               	.L324:
 766:lp_solve_5.5/lp_scale.c ****     scalechange[i] = 1;
 9773               		.loc 1 766 0 is_stmt 0 discriminator 1
 9774 4492 8DA1      		ldd r24,Y+37
 9775 4494 9EA1      		ldd r25,Y+38
 9776 4496 8851      		subi r24,24
 9777 4498 9E4F      		sbci r25,-2
 9778 449a FC01      		movw r30,r24
 9779 449c 2081      		ld r18,Z
 9780 449e 3181      		ldd r19,Z+1
 9781 44a0 8981      		ldd r24,Y+1
 9782 44a2 9A81      		ldd r25,Y+2
 9783 44a4 2817      		cp r18,r24
 9784 44a6 3907      		cpc r19,r25
 9785 44a8 04F4      		brge .L325
 768:lp_solve_5.5/lp_scale.c **** 
 769:lp_solve_5.5/lp_scale.c ****   row_count = lp->rows;
 9786               		.loc 1 769 0 is_stmt 1
 9787 44aa 8DA1      		ldd r24,Y+37
 9788 44ac 9EA1      		ldd r25,Y+38
 9789 44ae 8651      		subi r24,22
 9790 44b0 9E4F      		sbci r25,-2
 9791 44b2 FC01      		movw r30,r24
 9792 44b4 8081      		ld r24,Z
 9793 44b6 9181      		ldd r25,Z+1
 9794 44b8 9C8B      		std Y+20,r25
 9795 44ba 8B8B      		std Y+19,r24
 770:lp_solve_5.5/lp_scale.c ****   allocREAL(lp, &row_max, row_count + 1, TRUE);
 9796               		.loc 1 770 0
 9797 44bc 8B89      		ldd r24,Y+19
 9798 44be 9C89      		ldd r25,Y+20
 9799 44c0 AC01      		movw r20,r24
 9800 44c2 4F5F      		subi r20,-1
 9801 44c4 5F4F      		sbci r21,-1
 9802 44c6 BE01      		movw r22,r28
 9803 44c8 695E      		subi r22,-23
 9804 44ca 7F4F      		sbci r23,-1
 9805 44cc 8DA1      		ldd r24,Y+37
 9806 44ce 9EA1      		ldd r25,Y+38
 9807 44d0 21E0      		ldi r18,lo8(1)
 9808 44d2 0E94 0000 		call allocREAL
 771:lp_solve_5.5/lp_scale.c ****   allocREAL(lp, &row_min, row_count + 1, FALSE);
 9809               		.loc 1 771 0
 9810 44d6 8B89      		ldd r24,Y+19
 9811 44d8 9C89      		ldd r25,Y+20
 9812 44da AC01      		movw r20,r24
 9813 44dc 4F5F      		subi r20,-1
 9814 44de 5F4F      		sbci r21,-1
 9815 44e0 BE01      		movw r22,r28
 9816 44e2 675E      		subi r22,-25
 9817 44e4 7F4F      		sbci r23,-1
 9818 44e6 8DA1      		ldd r24,Y+37
 9819 44e8 9EA1      		ldd r25,Y+38
 9820 44ea 20E0      		ldi r18,0
 9821 44ec 0E94 0000 		call allocREAL
 772:lp_solve_5.5/lp_scale.c **** 
 773:lp_solve_5.5/lp_scale.c ****   /* Initialise min and max values of rows */
 774:lp_solve_5.5/lp_scale.c ****   for(i = 0; i <= row_count; i++) {
 9822               		.loc 1 774 0
 9823 44f0 1A82      		std Y+2,__zero_reg__
 9824 44f2 1982      		std Y+1,__zero_reg__
 9825 44f4 00C0      		rjmp .L326
 9826               	.L329:
 775:lp_solve_5.5/lp_scale.c ****     if(is_scaletype(lp, SCALE_MEAN))
 9827               		.loc 1 775 0
 9828 44f6 8DA1      		ldd r24,Y+37
 9829 44f8 9EA1      		ldd r25,Y+38
 9830 44fa 63E0      		ldi r22,lo8(3)
 9831 44fc 70E0      		ldi r23,0
 9832 44fe 0E94 0000 		call is_scaletype
 9833 4502 8823      		tst r24
 9834 4504 01F0      		breq .L327
 776:lp_solve_5.5/lp_scale.c ****       row_min[i] = 0;             /* Carries the count of elements */
 9835               		.loc 1 776 0
 9836 4506 298D      		ldd r18,Y+25
 9837 4508 3A8D      		ldd r19,Y+26
 9838 450a 8981      		ldd r24,Y+1
 9839 450c 9A81      		ldd r25,Y+2
 9840 450e 880F      		lsl r24
 9841 4510 991F      		rol r25
 9842 4512 880F      		lsl r24
 9843 4514 991F      		rol r25
 9844 4516 820F      		add r24,r18
 9845 4518 931F      		adc r25,r19
 9846 451a FC01      		movw r30,r24
 9847 451c 1082      		st Z,__zero_reg__
 9848 451e 1182      		std Z+1,__zero_reg__
 9849 4520 1282      		std Z+2,__zero_reg__
 9850 4522 1382      		std Z+3,__zero_reg__
 9851 4524 00C0      		rjmp .L328
 9852               	.L327:
 777:lp_solve_5.5/lp_scale.c ****     else
 778:lp_solve_5.5/lp_scale.c ****       row_min[i] = lp->infinite;  /* Carries the minimum element */
 9853               		.loc 1 778 0
 9854 4526 298D      		ldd r18,Y+25
 9855 4528 3A8D      		ldd r19,Y+26
 9856 452a 8981      		ldd r24,Y+1
 9857 452c 9A81      		ldd r25,Y+2
 9858 452e 880F      		lsl r24
 9859 4530 991F      		rol r25
 9860 4532 880F      		lsl r24
 9861 4534 991F      		rol r25
 9862 4536 280F      		add r18,r24
 9863 4538 391F      		adc r19,r25
 9864 453a 8DA1      		ldd r24,Y+37
 9865 453c 9EA1      		ldd r25,Y+38
 9866 453e 865F      		subi r24,-10
 9867 4540 9C4F      		sbci r25,-4
 9868 4542 FC01      		movw r30,r24
 9869 4544 8081      		ld r24,Z
 9870 4546 9181      		ldd r25,Z+1
 9871 4548 A281      		ldd r26,Z+2
 9872 454a B381      		ldd r27,Z+3
 9873 454c F901      		movw r30,r18
 9874 454e 8083      		st Z,r24
 9875 4550 9183      		std Z+1,r25
 9876 4552 A283      		std Z+2,r26
 9877 4554 B383      		std Z+3,r27
 9878               	.L328:
 774:lp_solve_5.5/lp_scale.c ****     if(is_scaletype(lp, SCALE_MEAN))
 9879               		.loc 1 774 0 discriminator 2
 9880 4556 8981      		ldd r24,Y+1
 9881 4558 9A81      		ldd r25,Y+2
 9882 455a 0196      		adiw r24,1
 9883 455c 9A83      		std Y+2,r25
 9884 455e 8983      		std Y+1,r24
 9885               	.L326:
 774:lp_solve_5.5/lp_scale.c ****     if(is_scaletype(lp, SCALE_MEAN))
 9886               		.loc 1 774 0 is_stmt 0 discriminator 1
 9887 4560 2981      		ldd r18,Y+1
 9888 4562 3A81      		ldd r19,Y+2
 9889 4564 8B89      		ldd r24,Y+19
 9890 4566 9C89      		ldd r25,Y+20
 9891 4568 8217      		cp r24,r18
 9892 456a 9307      		cpc r25,r19
 9893 456c 04F4      		brge .L329
 779:lp_solve_5.5/lp_scale.c ****   }
 780:lp_solve_5.5/lp_scale.c **** 
 781:lp_solve_5.5/lp_scale.c ****   /* Calculate row scaling data */
 782:lp_solve_5.5/lp_scale.c ****   for(j = 1; j <= lp->columns; j++) {
 9894               		.loc 1 782 0 is_stmt 1
 9895 456e 81E0      		ldi r24,lo8(1)
 9896 4570 90E0      		ldi r25,0
 9897 4572 9C83      		std Y+4,r25
 9898 4574 8B83      		std Y+3,r24
 9899 4576 00C0      		rjmp .L330
 9900               	.L335:
 783:lp_solve_5.5/lp_scale.c **** 
 784:lp_solve_5.5/lp_scale.c ****     absval = lp->orig_obj[j];
 9901               		.loc 1 784 0
 9902 4578 8DA1      		ldd r24,Y+37
 9903 457a 9EA1      		ldd r25,Y+38
 9904 457c 845D      		subi r24,-44
 9905 457e 9D4F      		sbci r25,-3
 9906 4580 FC01      		movw r30,r24
 9907 4582 2081      		ld r18,Z
 9908 4584 3181      		ldd r19,Z+1
 9909 4586 8B81      		ldd r24,Y+3
 9910 4588 9C81      		ldd r25,Y+4
 9911 458a 880F      		lsl r24
 9912 458c 991F      		rol r25
 9913 458e 880F      		lsl r24
 9914 4590 991F      		rol r25
 9915 4592 820F      		add r24,r18
 9916 4594 931F      		adc r25,r19
 9917 4596 FC01      		movw r30,r24
 9918 4598 8081      		ld r24,Z
 9919 459a 9181      		ldd r25,Z+1
 9920 459c A281      		ldd r26,Z+2
 9921 459e B381      		ldd r27,Z+3
 9922 45a0 8987      		std Y+9,r24
 9923 45a2 9A87      		std Y+10,r25
 9924 45a4 AB87      		std Y+11,r26
 9925 45a6 BC87      		std Y+12,r27
 785:lp_solve_5.5/lp_scale.c ****     if(absval != 0) {
 9926               		.loc 1 785 0
 9927 45a8 20E0      		ldi r18,0
 9928 45aa 30E0      		ldi r19,0
 9929 45ac A901      		movw r20,r18
 9930 45ae 6985      		ldd r22,Y+9
 9931 45b0 7A85      		ldd r23,Y+10
 9932 45b2 8B85      		ldd r24,Y+11
 9933 45b4 9C85      		ldd r25,Y+12
 9934 45b6 0E94 0000 		call __nesf2
 9935 45ba 8823      		tst r24
 9936 45bc 01F0      		breq .L331
 786:lp_solve_5.5/lp_scale.c ****       absval = scaled_mat(lp, absval, 0, j);
 9937               		.loc 1 786 0
 9938 45be 2B81      		ldd r18,Y+3
 9939 45c0 3C81      		ldd r19,Y+4
 9940 45c2 8985      		ldd r24,Y+9
 9941 45c4 9A85      		ldd r25,Y+10
 9942 45c6 AB85      		ldd r26,Y+11
 9943 45c8 BC85      		ldd r27,Y+12
 9944 45ca EDA1      		ldd r30,Y+37
 9945 45cc FEA1      		ldd r31,Y+38
 9946 45ce 8901      		movw r16,r18
 9947 45d0 20E0      		ldi r18,0
 9948 45d2 30E0      		ldi r19,0
 9949 45d4 AC01      		movw r20,r24
 9950 45d6 BD01      		movw r22,r26
 9951 45d8 CF01      		movw r24,r30
 9952 45da 0E94 0000 		call scaled_mat
 9953 45de DC01      		movw r26,r24
 9954 45e0 CB01      		movw r24,r22
 9955 45e2 8987      		std Y+9,r24
 9956 45e4 9A87      		std Y+10,r25
 9957 45e6 AB87      		std Y+11,r26
 9958 45e8 BC87      		std Y+12,r27
 787:lp_solve_5.5/lp_scale.c ****       accumulate_for_scale(lp, &row_min[0], &row_max[0], absval);
 9959               		.loc 1 787 0
 9960 45ea 4F89      		ldd r20,Y+23
 9961 45ec 588D      		ldd r21,Y+24
 9962 45ee 698D      		ldd r22,Y+25
 9963 45f0 7A8D      		ldd r23,Y+26
 9964 45f2 8985      		ldd r24,Y+9
 9965 45f4 9A85      		ldd r25,Y+10
 9966 45f6 AB85      		ldd r26,Y+11
 9967 45f8 BC85      		ldd r27,Y+12
 9968 45fa EDA1      		ldd r30,Y+37
 9969 45fc FEA1      		ldd r31,Y+38
 9970 45fe 8C01      		movw r16,r24
 9971 4600 9D01      		movw r18,r26
 9972 4602 CF01      		movw r24,r30
 9973 4604 0E94 0000 		call accumulate_for_scale
 788:lp_solve_5.5/lp_scale.c ****       nzOF++;
 9974               		.loc 1 788 0
 9975 4608 8F81      		ldd r24,Y+7
 9976 460a 9885      		ldd r25,Y+8
 9977 460c 0196      		adiw r24,1
 9978 460e 9887      		std Y+8,r25
 9979 4610 8F83      		std Y+7,r24
 9980               	.L331:
 789:lp_solve_5.5/lp_scale.c ****     }
 790:lp_solve_5.5/lp_scale.c **** 
 791:lp_solve_5.5/lp_scale.c ****     i = mat->col_end[j - 1];
 9981               		.loc 1 791 0
 9982 4612 8989      		ldd r24,Y+17
 9983 4614 9A89      		ldd r25,Y+18
 9984 4616 FC01      		movw r30,r24
 9985 4618 2289      		ldd r18,Z+18
 9986 461a 3389      		ldd r19,Z+19
 9987 461c 8B81      		ldd r24,Y+3
 9988 461e 9C81      		ldd r25,Y+4
 9989 4620 8150      		subi r24,1
 9990 4622 9048      		sbci r25,-128
 9991 4624 880F      		lsl r24
 9992 4626 991F      		rol r25
 9993 4628 820F      		add r24,r18
 9994 462a 931F      		adc r25,r19
 9995 462c FC01      		movw r30,r24
 9996 462e 8081      		ld r24,Z
 9997 4630 9181      		ldd r25,Z+1
 9998 4632 9A83      		std Y+2,r25
 9999 4634 8983      		std Y+1,r24
 792:lp_solve_5.5/lp_scale.c ****     value = &(COL_MAT_VALUE(i));
 10000               		.loc 1 792 0
 10001 4636 8989      		ldd r24,Y+17
 10002 4638 9A89      		ldd r25,Y+18
 10003 463a FC01      		movw r30,r24
 10004 463c 2089      		ldd r18,Z+16
 10005 463e 3189      		ldd r19,Z+17
 10006 4640 8981      		ldd r24,Y+1
 10007 4642 9A81      		ldd r25,Y+2
 10008 4644 880F      		lsl r24
 10009 4646 991F      		rol r25
 10010 4648 880F      		lsl r24
 10011 464a 991F      		rol r25
 10012 464c 820F      		add r24,r18
 10013 464e 931F      		adc r25,r19
 10014 4650 9E87      		std Y+14,r25
 10015 4652 8D87      		std Y+13,r24
 793:lp_solve_5.5/lp_scale.c ****     rownr = &(COL_MAT_ROWNR(i));
 10016               		.loc 1 793 0
 10017 4654 8989      		ldd r24,Y+17
 10018 4656 9A89      		ldd r25,Y+18
 10019 4658 FC01      		movw r30,r24
 10020 465a 2685      		ldd r18,Z+14
 10021 465c 3785      		ldd r19,Z+15
 10022 465e 8981      		ldd r24,Y+1
 10023 4660 9A81      		ldd r25,Y+2
 10024 4662 880F      		lsl r24
 10025 4664 991F      		rol r25
 10026 4666 820F      		add r24,r18
 10027 4668 931F      		adc r25,r19
 10028 466a 988B      		std Y+16,r25
 10029 466c 8F87      		std Y+15,r24
 794:lp_solve_5.5/lp_scale.c ****     nz = mat->col_end[j];
 10030               		.loc 1 794 0
 10031 466e 8989      		ldd r24,Y+17
 10032 4670 9A89      		ldd r25,Y+18
 10033 4672 FC01      		movw r30,r24
 10034 4674 2289      		ldd r18,Z+18
 10035 4676 3389      		ldd r19,Z+19
 10036 4678 8B81      		ldd r24,Y+3
 10037 467a 9C81      		ldd r25,Y+4
 10038 467c 880F      		lsl r24
 10039 467e 991F      		rol r25
 10040 4680 820F      		add r24,r18
 10041 4682 931F      		adc r25,r19
 10042 4684 FC01      		movw r30,r24
 10043 4686 8081      		ld r24,Z
 10044 4688 9181      		ldd r25,Z+1
 10045 468a 9E83      		std Y+6,r25
 10046 468c 8D83      		std Y+5,r24
 795:lp_solve_5.5/lp_scale.c ****     for(; i < nz;
 10047               		.loc 1 795 0
 10048 468e 00C0      		rjmp .L333
 10049               	.L334:
 796:lp_solve_5.5/lp_scale.c ****         i++, value += matValueStep, rownr += matRowColStep) {
 797:lp_solve_5.5/lp_scale.c ****       absval = scaled_mat(lp, *value, *rownr, j);
 10050               		.loc 1 797 0
 10051 4690 8F85      		ldd r24,Y+15
 10052 4692 9889      		ldd r25,Y+16
 10053 4694 FC01      		movw r30,r24
 10054 4696 2081      		ld r18,Z
 10055 4698 3181      		ldd r19,Z+1
 10056 469a 8D85      		ldd r24,Y+13
 10057 469c 9E85      		ldd r25,Y+14
 10058 469e FC01      		movw r30,r24
 10059 46a0 8081      		ld r24,Z
 10060 46a2 9181      		ldd r25,Z+1
 10061 46a4 A281      		ldd r26,Z+2
 10062 46a6 B381      		ldd r27,Z+3
 10063 46a8 4B81      		ldd r20,Y+3
 10064 46aa 5C81      		ldd r21,Y+4
 10065 46ac EDA1      		ldd r30,Y+37
 10066 46ae FEA1      		ldd r31,Y+38
 10067 46b0 8A01      		movw r16,r20
 10068 46b2 AC01      		movw r20,r24
 10069 46b4 BD01      		movw r22,r26
 10070 46b6 CF01      		movw r24,r30
 10071 46b8 0E94 0000 		call scaled_mat
 10072 46bc DC01      		movw r26,r24
 10073 46be CB01      		movw r24,r22
 10074 46c0 8987      		std Y+9,r24
 10075 46c2 9A87      		std Y+10,r25
 10076 46c4 AB87      		std Y+11,r26
 10077 46c6 BC87      		std Y+12,r27
 798:lp_solve_5.5/lp_scale.c ****       accumulate_for_scale(lp, &row_min[*rownr], &row_max[*rownr], absval);
 10078               		.loc 1 798 0
 10079 46c8 2F89      		ldd r18,Y+23
 10080 46ca 388D      		ldd r19,Y+24
 10081 46cc 8F85      		ldd r24,Y+15
 10082 46ce 9889      		ldd r25,Y+16
 10083 46d0 FC01      		movw r30,r24
 10084 46d2 8081      		ld r24,Z
 10085 46d4 9181      		ldd r25,Z+1
 10086 46d6 880F      		lsl r24
 10087 46d8 991F      		rol r25
 10088 46da 880F      		lsl r24
 10089 46dc 991F      		rol r25
 10090 46de A901      		movw r20,r18
 10091 46e0 480F      		add r20,r24
 10092 46e2 591F      		adc r21,r25
 10093 46e4 298D      		ldd r18,Y+25
 10094 46e6 3A8D      		ldd r19,Y+26
 10095 46e8 8F85      		ldd r24,Y+15
 10096 46ea 9889      		ldd r25,Y+16
 10097 46ec FC01      		movw r30,r24
 10098 46ee 8081      		ld r24,Z
 10099 46f0 9181      		ldd r25,Z+1
 10100 46f2 880F      		lsl r24
 10101 46f4 991F      		rol r25
 10102 46f6 880F      		lsl r24
 10103 46f8 991F      		rol r25
 10104 46fa B901      		movw r22,r18
 10105 46fc 680F      		add r22,r24
 10106 46fe 791F      		adc r23,r25
 10107 4700 8985      		ldd r24,Y+9
 10108 4702 9A85      		ldd r25,Y+10
 10109 4704 AB85      		ldd r26,Y+11
 10110 4706 BC85      		ldd r27,Y+12
 10111 4708 EDA1      		ldd r30,Y+37
 10112 470a FEA1      		ldd r31,Y+38
 10113 470c 8C01      		movw r16,r24
 10114 470e 9D01      		movw r18,r26
 10115 4710 CF01      		movw r24,r30
 10116 4712 0E94 0000 		call accumulate_for_scale
 796:lp_solve_5.5/lp_scale.c ****         i++, value += matValueStep, rownr += matRowColStep) {
 10117               		.loc 1 796 0
 10118 4716 8981      		ldd r24,Y+1
 10119 4718 9A81      		ldd r25,Y+2
 10120 471a 0196      		adiw r24,1
 10121 471c 9A83      		std Y+2,r25
 10122 471e 8983      		std Y+1,r24
 10123 4720 8D85      		ldd r24,Y+13
 10124 4722 9E85      		ldd r25,Y+14
 10125 4724 0496      		adiw r24,4
 10126 4726 9E87      		std Y+14,r25
 10127 4728 8D87      		std Y+13,r24
 10128 472a 8F85      		ldd r24,Y+15
 10129 472c 9889      		ldd r25,Y+16
 10130 472e 0296      		adiw r24,2
 10131 4730 988B      		std Y+16,r25
 10132 4732 8F87      		std Y+15,r24
 10133               	.L333:
 795:lp_solve_5.5/lp_scale.c ****     for(; i < nz;
 10134               		.loc 1 795 0
 10135 4734 2981      		ldd r18,Y+1
 10136 4736 3A81      		ldd r19,Y+2
 10137 4738 8D81      		ldd r24,Y+5
 10138 473a 9E81      		ldd r25,Y+6
 10139 473c 2817      		cp r18,r24
 10140 473e 3907      		cpc r19,r25
 10141 4740 04F4      		brge .+2
 10142 4742 00C0      		rjmp .L334
 782:lp_solve_5.5/lp_scale.c **** 
 10143               		.loc 1 782 0 discriminator 2
 10144 4744 8B81      		ldd r24,Y+3
 10145 4746 9C81      		ldd r25,Y+4
 10146 4748 0196      		adiw r24,1
 10147 474a 9C83      		std Y+4,r25
 10148 474c 8B83      		std Y+3,r24
 10149               	.L330:
 782:lp_solve_5.5/lp_scale.c **** 
 10150               		.loc 1 782 0 is_stmt 0 discriminator 1
 10151 474e 8DA1      		ldd r24,Y+37
 10152 4750 9EA1      		ldd r25,Y+38
 10153 4752 8451      		subi r24,20
 10154 4754 9E4F      		sbci r25,-2
 10155 4756 FC01      		movw r30,r24
 10156 4758 2081      		ld r18,Z
 10157 475a 3181      		ldd r19,Z+1
 10158 475c 8B81      		ldd r24,Y+3
 10159 475e 9C81      		ldd r25,Y+4
 10160 4760 2817      		cp r18,r24
 10161 4762 3907      		cpc r19,r25
 10162 4764 04F0      		brlt .+2
 10163 4766 00C0      		rjmp .L335
 799:lp_solve_5.5/lp_scale.c ****     }
 800:lp_solve_5.5/lp_scale.c ****   }
 801:lp_solve_5.5/lp_scale.c **** 
 802:lp_solve_5.5/lp_scale.c ****   /* Calculate scale factors for rows */
 803:lp_solve_5.5/lp_scale.c ****   i = 0;
 10164               		.loc 1 803 0 is_stmt 1
 10165 4768 1A82      		std Y+2,__zero_reg__
 10166 476a 1982      		std Y+1,__zero_reg__
 804:lp_solve_5.5/lp_scale.c ****   for(; i <= lp->rows; i++) {
 10167               		.loc 1 804 0
 10168 476c 00C0      		rjmp .L336
 10169               	.L341:
 805:lp_solve_5.5/lp_scale.c ****     if(i == 0)
 10170               		.loc 1 805 0
 10171 476e 8981      		ldd r24,Y+1
 10172 4770 9A81      		ldd r25,Y+2
 10173 4772 892B      		or r24,r25
 10174 4774 01F4      		brne .L337
 806:lp_solve_5.5/lp_scale.c ****       nz = nzOF;
 10175               		.loc 1 806 0
 10176 4776 8F81      		ldd r24,Y+7
 10177 4778 9885      		ldd r25,Y+8
 10178 477a 9E83      		std Y+6,r25
 10179 477c 8D83      		std Y+5,r24
 10180 477e 00C0      		rjmp .L338
 10181               	.L337:
 807:lp_solve_5.5/lp_scale.c ****     else
 808:lp_solve_5.5/lp_scale.c ****       nz = mat_rowlength(lp->matA, i);
 10182               		.loc 1 808 0
 10183 4780 8DA1      		ldd r24,Y+37
 10184 4782 9EA1      		ldd r25,Y+38
 10185 4784 8A54      		subi r24,74
 10186 4786 9D4F      		sbci r25,-3
 10187 4788 FC01      		movw r30,r24
 10188 478a 8081      		ld r24,Z
 10189 478c 9181      		ldd r25,Z+1
 10190 478e 2981      		ldd r18,Y+1
 10191 4790 3A81      		ldd r19,Y+2
 10192 4792 B901      		movw r22,r18
 10193 4794 0E94 0000 		call mat_rowlength
 10194 4798 9E83      		std Y+6,r25
 10195 479a 8D83      		std Y+5,r24
 10196               	.L338:
 809:lp_solve_5.5/lp_scale.c ****     absval = minmax_to_scale(lp, row_min[i], row_max[i], nz); /* nz instead of nzOF KJEI 20/05/2010
 10197               		.loc 1 809 0
 10198 479c 2F89      		ldd r18,Y+23
 10199 479e 388D      		ldd r19,Y+24
 10200 47a0 8981      		ldd r24,Y+1
 10201 47a2 9A81      		ldd r25,Y+2
 10202 47a4 880F      		lsl r24
 10203 47a6 991F      		rol r25
 10204 47a8 880F      		lsl r24
 10205 47aa 991F      		rol r25
 10206 47ac 820F      		add r24,r18
 10207 47ae 931F      		adc r25,r19
 10208 47b0 FC01      		movw r30,r24
 10209 47b2 2081      		ld r18,Z
 10210 47b4 3181      		ldd r19,Z+1
 10211 47b6 4281      		ldd r20,Z+2
 10212 47b8 5381      		ldd r21,Z+3
 10213 47ba 698D      		ldd r22,Y+25
 10214 47bc 7A8D      		ldd r23,Y+26
 10215 47be 8981      		ldd r24,Y+1
 10216 47c0 9A81      		ldd r25,Y+2
 10217 47c2 880F      		lsl r24
 10218 47c4 991F      		rol r25
 10219 47c6 880F      		lsl r24
 10220 47c8 991F      		rol r25
 10221 47ca 860F      		add r24,r22
 10222 47cc 971F      		adc r25,r23
 10223 47ce FC01      		movw r30,r24
 10224 47d0 8081      		ld r24,Z
 10225 47d2 9181      		ldd r25,Z+1
 10226 47d4 A281      		ldd r26,Z+2
 10227 47d6 B381      		ldd r27,Z+3
 10228 47d8 6D81      		ldd r22,Y+5
 10229 47da 7E81      		ldd r23,Y+6
 10230 47dc EDA1      		ldd r30,Y+37
 10231 47de FEA1      		ldd r31,Y+38
 10232 47e0 7B01      		movw r14,r22
 10233 47e2 8901      		movw r16,r18
 10234 47e4 9A01      		movw r18,r20
 10235 47e6 AC01      		movw r20,r24
 10236 47e8 BD01      		movw r22,r26
 10237 47ea CF01      		movw r24,r30
 10238 47ec 0E94 0000 		call minmax_to_scale
 10239 47f0 DC01      		movw r26,r24
 10240 47f2 CB01      		movw r24,r22
 10241 47f4 8987      		std Y+9,r24
 10242 47f6 9A87      		std Y+10,r25
 10243 47f8 AB87      		std Y+11,r26
 10244 47fa BC87      		std Y+12,r27
 810:lp_solve_5.5/lp_scale.c ****     if(absval == 0)
 10245               		.loc 1 810 0
 10246 47fc 20E0      		ldi r18,0
 10247 47fe 30E0      		ldi r19,0
 10248 4800 A901      		movw r20,r18
 10249 4802 6985      		ldd r22,Y+9
 10250 4804 7A85      		ldd r23,Y+10
 10251 4806 8B85      		ldd r24,Y+11
 10252 4808 9C85      		ldd r25,Y+12
 10253 480a 0E94 0000 		call __eqsf2
 10254 480e 8823      		tst r24
 10255 4810 01F4      		brne .L339
 811:lp_solve_5.5/lp_scale.c ****       absval = 1;
 10256               		.loc 1 811 0
 10257 4812 80E0      		ldi r24,0
 10258 4814 90E0      		ldi r25,0
 10259 4816 A0E8      		ldi r26,lo8(-128)
 10260 4818 BFE3      		ldi r27,lo8(63)
 10261 481a 8987      		std Y+9,r24
 10262 481c 9A87      		std Y+10,r25
 10263 481e AB87      		std Y+11,r26
 10264 4820 BC87      		std Y+12,r27
 10265               	.L339:
 812:lp_solve_5.5/lp_scale.c ****     scalechange[i] = absval;
 10266               		.loc 1 812 0
 10267 4822 2B8D      		ldd r18,Y+27
 10268 4824 3C8D      		ldd r19,Y+28
 10269 4826 8981      		ldd r24,Y+1
 10270 4828 9A81      		ldd r25,Y+2
 10271 482a 880F      		lsl r24
 10272 482c 991F      		rol r25
 10273 482e 880F      		lsl r24
 10274 4830 991F      		rol r25
 10275 4832 280F      		add r18,r24
 10276 4834 391F      		adc r19,r25
 10277 4836 8985      		ldd r24,Y+9
 10278 4838 9A85      		ldd r25,Y+10
 10279 483a AB85      		ldd r26,Y+11
 10280 483c BC85      		ldd r27,Y+12
 10281 483e F901      		movw r30,r18
 10282 4840 8083      		st Z,r24
 10283 4842 9183      		std Z+1,r25
 10284 4844 A283      		std Z+2,r26
 10285 4846 B383      		std Z+3,r27
 804:lp_solve_5.5/lp_scale.c ****     if(i == 0)
 10286               		.loc 1 804 0
 10287 4848 8981      		ldd r24,Y+1
 10288 484a 9A81      		ldd r25,Y+2
 10289 484c 0196      		adiw r24,1
 10290 484e 9A83      		std Y+2,r25
 10291 4850 8983      		std Y+1,r24
 10292               	.L336:
 804:lp_solve_5.5/lp_scale.c ****     if(i == 0)
 10293               		.loc 1 804 0 is_stmt 0 discriminator 1
 10294 4852 8DA1      		ldd r24,Y+37
 10295 4854 9EA1      		ldd r25,Y+38
 10296 4856 8651      		subi r24,22
 10297 4858 9E4F      		sbci r25,-2
 10298 485a FC01      		movw r30,r24
 10299 485c 2081      		ld r18,Z
 10300 485e 3181      		ldd r19,Z+1
 10301 4860 8981      		ldd r24,Y+1
 10302 4862 9A81      		ldd r25,Y+2
 10303 4864 2817      		cp r18,r24
 10304 4866 3907      		cpc r19,r25
 10305 4868 04F0      		brlt .+2
 10306 486a 00C0      		rjmp .L341
 813:lp_solve_5.5/lp_scale.c ****   }
 814:lp_solve_5.5/lp_scale.c **** 
 815:lp_solve_5.5/lp_scale.c ****   FREE(row_max);
 10307               		.loc 1 815 0 is_stmt 1
 10308 486c 8F89      		ldd r24,Y+23
 10309 486e 988D      		ldd r25,Y+24
 10310 4870 892B      		or r24,r25
 10311 4872 01F0      		breq .L342
 10312               		.loc 1 815 0 is_stmt 0 discriminator 1
 10313 4874 8F89      		ldd r24,Y+23
 10314 4876 988D      		ldd r25,Y+24
 10315 4878 0E94 0000 		call free
 10316 487c 188E      		std Y+24,__zero_reg__
 10317 487e 1F8A      		std Y+23,__zero_reg__
 10318               	.L342:
 816:lp_solve_5.5/lp_scale.c ****   FREE(row_min);
 10319               		.loc 1 816 0 is_stmt 1
 10320 4880 898D      		ldd r24,Y+25
 10321 4882 9A8D      		ldd r25,Y+26
 10322 4884 892B      		or r24,r25
 10323 4886 01F0      		breq .L343
 10324               		.loc 1 816 0 is_stmt 0 discriminator 1
 10325 4888 898D      		ldd r24,Y+25
 10326 488a 9A8D      		ldd r25,Y+26
 10327 488c 0E94 0000 		call free
 10328 4890 1A8E      		std Y+26,__zero_reg__
 10329 4892 198E      		std Y+25,__zero_reg__
 10330               	.L343:
 817:lp_solve_5.5/lp_scale.c **** 
 818:lp_solve_5.5/lp_scale.c ****   /* Row-scale the matrix (including the objective function and Lagrangean constraints) */
 819:lp_solve_5.5/lp_scale.c ****   rowscaled = scale_updaterows(lp, scalechange, TRUE);
 10331               		.loc 1 819 0 is_stmt 1
 10332 4894 2B8D      		ldd r18,Y+27
 10333 4896 3C8D      		ldd r19,Y+28
 10334 4898 8DA1      		ldd r24,Y+37
 10335 489a 9EA1      		ldd r25,Y+38
 10336 489c 41E0      		ldi r20,lo8(1)
 10337 489e B901      		movw r22,r18
 10338 48a0 0E94 0000 		call scale_updaterows
 10339 48a4 8D8B      		std Y+21,r24
 820:lp_solve_5.5/lp_scale.c **** 
 821:lp_solve_5.5/lp_scale.c ****   /* Calculate column scales */
 822:lp_solve_5.5/lp_scale.c ****   i = 1;
 10340               		.loc 1 822 0
 10341 48a6 81E0      		ldi r24,lo8(1)
 10342 48a8 90E0      		ldi r25,0
 10343 48aa 9A83      		std Y+2,r25
 10344 48ac 8983      		std Y+1,r24
 823:lp_solve_5.5/lp_scale.c ****   for(j = 1; j <= lp->columns; j++) {
 10345               		.loc 1 823 0
 10346 48ae 81E0      		ldi r24,lo8(1)
 10347 48b0 90E0      		ldi r25,0
 10348 48b2 9C83      		std Y+4,r25
 10349 48b4 8B83      		std Y+3,r24
 10350 48b6 00C0      		rjmp .L344
 10351               	.L355:
 824:lp_solve_5.5/lp_scale.c ****     if(is_int(lp,j) && !is_integerscaling(lp)) { /* do not scale integer columns */
 10352               		.loc 1 824 0
 10353 48b8 2B81      		ldd r18,Y+3
 10354 48ba 3C81      		ldd r19,Y+4
 10355 48bc 8DA1      		ldd r24,Y+37
 10356 48be 9EA1      		ldd r25,Y+38
 10357 48c0 B901      		movw r22,r18
 10358 48c2 0E94 0000 		call is_int
 10359 48c6 8823      		tst r24
 10360 48c8 01F0      		breq .L345
 10361               		.loc 1 824 0 is_stmt 0 discriminator 1
 10362 48ca 8DA1      		ldd r24,Y+37
 10363 48cc 9EA1      		ldd r25,Y+38
 10364 48ce 0E94 0000 		call is_integerscaling
 10365 48d2 8823      		tst r24
 10366 48d4 01F4      		brne .L345
 825:lp_solve_5.5/lp_scale.c ****       scalechange[lp->rows + j] = 1;
 10367               		.loc 1 825 0 is_stmt 1
 10368 48d6 2B8D      		ldd r18,Y+27
 10369 48d8 3C8D      		ldd r19,Y+28
 10370 48da 8DA1      		ldd r24,Y+37
 10371 48dc 9EA1      		ldd r25,Y+38
 10372 48de 8651      		subi r24,22
 10373 48e0 9E4F      		sbci r25,-2
 10374 48e2 FC01      		movw r30,r24
 10375 48e4 4081      		ld r20,Z
 10376 48e6 5181      		ldd r21,Z+1
 10377 48e8 8B81      		ldd r24,Y+3
 10378 48ea 9C81      		ldd r25,Y+4
 10379 48ec 840F      		add r24,r20
 10380 48ee 951F      		adc r25,r21
 10381 48f0 880F      		lsl r24
 10382 48f2 991F      		rol r25
 10383 48f4 880F      		lsl r24
 10384 48f6 991F      		rol r25
 10385 48f8 280F      		add r18,r24
 10386 48fa 391F      		adc r19,r25
 10387 48fc 80E0      		ldi r24,0
 10388 48fe 90E0      		ldi r25,0
 10389 4900 A0E8      		ldi r26,lo8(-128)
 10390 4902 BFE3      		ldi r27,lo8(63)
 10391 4904 F901      		movw r30,r18
 10392 4906 8083      		st Z,r24
 10393 4908 9183      		std Z+1,r25
 10394 490a A283      		std Z+2,r26
 10395 490c B383      		std Z+3,r27
 10396 490e 00C0      		rjmp .L346
 10397               	.L345:
 826:lp_solve_5.5/lp_scale.c ****     }
 827:lp_solve_5.5/lp_scale.c ****     else {
 828:lp_solve_5.5/lp_scale.c ****       col_max = 0;
 10398               		.loc 1 828 0
 10399 4910 1D8E      		std Y+29,__zero_reg__
 10400 4912 1E8E      		std Y+30,__zero_reg__
 10401 4914 1F8E      		std Y+31,__zero_reg__
 10402 4916 18A2      		std Y+32,__zero_reg__
 829:lp_solve_5.5/lp_scale.c ****       if(is_scaletype(lp, SCALE_MEAN))
 10403               		.loc 1 829 0
 10404 4918 8DA1      		ldd r24,Y+37
 10405 491a 9EA1      		ldd r25,Y+38
 10406 491c 63E0      		ldi r22,lo8(3)
 10407 491e 70E0      		ldi r23,0
 10408 4920 0E94 0000 		call is_scaletype
 10409 4924 8823      		tst r24
 10410 4926 01F0      		breq .L347
 830:lp_solve_5.5/lp_scale.c ****         col_min = 0;
 10411               		.loc 1 830 0
 10412 4928 19A2      		std Y+33,__zero_reg__
 10413 492a 1AA2      		std Y+34,__zero_reg__
 10414 492c 1BA2      		std Y+35,__zero_reg__
 10415 492e 1CA2      		std Y+36,__zero_reg__
 10416 4930 00C0      		rjmp .L348
 10417               	.L347:
 831:lp_solve_5.5/lp_scale.c ****       else
 832:lp_solve_5.5/lp_scale.c ****         col_min = lp->infinite;
 10418               		.loc 1 832 0
 10419 4932 8DA1      		ldd r24,Y+37
 10420 4934 9EA1      		ldd r25,Y+38
 10421 4936 865F      		subi r24,-10
 10422 4938 9C4F      		sbci r25,-4
 10423 493a FC01      		movw r30,r24
 10424 493c 8081      		ld r24,Z
 10425 493e 9181      		ldd r25,Z+1
 10426 4940 A281      		ldd r26,Z+2
 10427 4942 B381      		ldd r27,Z+3
 10428 4944 89A3      		std Y+33,r24
 10429 4946 9AA3      		std Y+34,r25
 10430 4948 ABA3      		std Y+35,r26
 10431 494a BCA3      		std Y+36,r27
 10432               	.L348:
 833:lp_solve_5.5/lp_scale.c **** 
 834:lp_solve_5.5/lp_scale.c ****       absval = lp->orig_obj[j];
 10433               		.loc 1 834 0
 10434 494c 8DA1      		ldd r24,Y+37
 10435 494e 9EA1      		ldd r25,Y+38
 10436 4950 845D      		subi r24,-44
 10437 4952 9D4F      		sbci r25,-3
 10438 4954 FC01      		movw r30,r24
 10439 4956 2081      		ld r18,Z
 10440 4958 3181      		ldd r19,Z+1
 10441 495a 8B81      		ldd r24,Y+3
 10442 495c 9C81      		ldd r25,Y+4
 10443 495e 880F      		lsl r24
 10444 4960 991F      		rol r25
 10445 4962 880F      		lsl r24
 10446 4964 991F      		rol r25
 10447 4966 820F      		add r24,r18
 10448 4968 931F      		adc r25,r19
 10449 496a FC01      		movw r30,r24
 10450 496c 8081      		ld r24,Z
 10451 496e 9181      		ldd r25,Z+1
 10452 4970 A281      		ldd r26,Z+2
 10453 4972 B381      		ldd r27,Z+3
 10454 4974 8987      		std Y+9,r24
 10455 4976 9A87      		std Y+10,r25
 10456 4978 AB87      		std Y+11,r26
 10457 497a BC87      		std Y+12,r27
 835:lp_solve_5.5/lp_scale.c ****       if(absval != 0) {
 10458               		.loc 1 835 0
 10459 497c 20E0      		ldi r18,0
 10460 497e 30E0      		ldi r19,0
 10461 4980 A901      		movw r20,r18
 10462 4982 6985      		ldd r22,Y+9
 10463 4984 7A85      		ldd r23,Y+10
 10464 4986 8B85      		ldd r24,Y+11
 10465 4988 9C85      		ldd r25,Y+12
 10466 498a 0E94 0000 		call __nesf2
 10467 498e 8823      		tst r24
 10468 4990 01F0      		breq .L349
 836:lp_solve_5.5/lp_scale.c ****         absval = scaled_mat(lp, absval, 0, j);
 10469               		.loc 1 836 0
 10470 4992 2B81      		ldd r18,Y+3
 10471 4994 3C81      		ldd r19,Y+4
 10472 4996 8985      		ldd r24,Y+9
 10473 4998 9A85      		ldd r25,Y+10
 10474 499a AB85      		ldd r26,Y+11
 10475 499c BC85      		ldd r27,Y+12
 10476 499e EDA1      		ldd r30,Y+37
 10477 49a0 FEA1      		ldd r31,Y+38
 10478 49a2 8901      		movw r16,r18
 10479 49a4 20E0      		ldi r18,0
 10480 49a6 30E0      		ldi r19,0
 10481 49a8 AC01      		movw r20,r24
 10482 49aa BD01      		movw r22,r26
 10483 49ac CF01      		movw r24,r30
 10484 49ae 0E94 0000 		call scaled_mat
 10485 49b2 DC01      		movw r26,r24
 10486 49b4 CB01      		movw r24,r22
 10487 49b6 8987      		std Y+9,r24
 10488 49b8 9A87      		std Y+10,r25
 10489 49ba AB87      		std Y+11,r26
 10490 49bc BC87      		std Y+12,r27
 837:lp_solve_5.5/lp_scale.c ****         accumulate_for_scale(lp, &col_min, &col_max, absval);
 10491               		.loc 1 837 0
 10492 49be 8985      		ldd r24,Y+9
 10493 49c0 9A85      		ldd r25,Y+10
 10494 49c2 AB85      		ldd r26,Y+11
 10495 49c4 BC85      		ldd r27,Y+12
 10496 49c6 AE01      		movw r20,r28
 10497 49c8 435E      		subi r20,-29
 10498 49ca 5F4F      		sbci r21,-1
 10499 49cc BE01      		movw r22,r28
 10500 49ce 6F5D      		subi r22,-33
 10501 49d0 7F4F      		sbci r23,-1
 10502 49d2 EDA1      		ldd r30,Y+37
 10503 49d4 FEA1      		ldd r31,Y+38
 10504 49d6 8C01      		movw r16,r24
 10505 49d8 9D01      		movw r18,r26
 10506 49da CF01      		movw r24,r30
 10507 49dc 0E94 0000 		call accumulate_for_scale
 10508               	.L349:
 838:lp_solve_5.5/lp_scale.c ****       }
 839:lp_solve_5.5/lp_scale.c **** 
 840:lp_solve_5.5/lp_scale.c ****       i = mat->col_end[j - 1];
 10509               		.loc 1 840 0
 10510 49e0 8989      		ldd r24,Y+17
 10511 49e2 9A89      		ldd r25,Y+18
 10512 49e4 FC01      		movw r30,r24
 10513 49e6 2289      		ldd r18,Z+18
 10514 49e8 3389      		ldd r19,Z+19
 10515 49ea 8B81      		ldd r24,Y+3
 10516 49ec 9C81      		ldd r25,Y+4
 10517 49ee 8150      		subi r24,1
 10518 49f0 9048      		sbci r25,-128
 10519 49f2 880F      		lsl r24
 10520 49f4 991F      		rol r25
 10521 49f6 820F      		add r24,r18
 10522 49f8 931F      		adc r25,r19
 10523 49fa FC01      		movw r30,r24
 10524 49fc 8081      		ld r24,Z
 10525 49fe 9181      		ldd r25,Z+1
 10526 4a00 9A83      		std Y+2,r25
 10527 4a02 8983      		std Y+1,r24
 841:lp_solve_5.5/lp_scale.c ****       value = &(COL_MAT_VALUE(i));
 10528               		.loc 1 841 0
 10529 4a04 8989      		ldd r24,Y+17
 10530 4a06 9A89      		ldd r25,Y+18
 10531 4a08 FC01      		movw r30,r24
 10532 4a0a 2089      		ldd r18,Z+16
 10533 4a0c 3189      		ldd r19,Z+17
 10534 4a0e 8981      		ldd r24,Y+1
 10535 4a10 9A81      		ldd r25,Y+2
 10536 4a12 880F      		lsl r24
 10537 4a14 991F      		rol r25
 10538 4a16 880F      		lsl r24
 10539 4a18 991F      		rol r25
 10540 4a1a 820F      		add r24,r18
 10541 4a1c 931F      		adc r25,r19
 10542 4a1e 9E87      		std Y+14,r25
 10543 4a20 8D87      		std Y+13,r24
 842:lp_solve_5.5/lp_scale.c ****       rownr = &(COL_MAT_ROWNR(i));
 10544               		.loc 1 842 0
 10545 4a22 8989      		ldd r24,Y+17
 10546 4a24 9A89      		ldd r25,Y+18
 10547 4a26 FC01      		movw r30,r24
 10548 4a28 2685      		ldd r18,Z+14
 10549 4a2a 3785      		ldd r19,Z+15
 10550 4a2c 8981      		ldd r24,Y+1
 10551 4a2e 9A81      		ldd r25,Y+2
 10552 4a30 880F      		lsl r24
 10553 4a32 991F      		rol r25
 10554 4a34 820F      		add r24,r18
 10555 4a36 931F      		adc r25,r19
 10556 4a38 988B      		std Y+16,r25
 10557 4a3a 8F87      		std Y+15,r24
 843:lp_solve_5.5/lp_scale.c ****       nz = mat->col_end[j];
 10558               		.loc 1 843 0
 10559 4a3c 8989      		ldd r24,Y+17
 10560 4a3e 9A89      		ldd r25,Y+18
 10561 4a40 FC01      		movw r30,r24
 10562 4a42 2289      		ldd r18,Z+18
 10563 4a44 3389      		ldd r19,Z+19
 10564 4a46 8B81      		ldd r24,Y+3
 10565 4a48 9C81      		ldd r25,Y+4
 10566 4a4a 880F      		lsl r24
 10567 4a4c 991F      		rol r25
 10568 4a4e 820F      		add r24,r18
 10569 4a50 931F      		adc r25,r19
 10570 4a52 FC01      		movw r30,r24
 10571 4a54 8081      		ld r24,Z
 10572 4a56 9181      		ldd r25,Z+1
 10573 4a58 9E83      		std Y+6,r25
 10574 4a5a 8D83      		std Y+5,r24
 844:lp_solve_5.5/lp_scale.c ****       for(; i < nz;
 10575               		.loc 1 844 0
 10576 4a5c 00C0      		rjmp .L351
 10577               	.L352:
 845:lp_solve_5.5/lp_scale.c ****           i++, value += matValueStep, rownr += matRowColStep) {
 846:lp_solve_5.5/lp_scale.c ****         absval = scaled_mat(lp, *value, *rownr, j);
 10578               		.loc 1 846 0
 10579 4a5e 8F85      		ldd r24,Y+15
 10580 4a60 9889      		ldd r25,Y+16
 10581 4a62 FC01      		movw r30,r24
 10582 4a64 2081      		ld r18,Z
 10583 4a66 3181      		ldd r19,Z+1
 10584 4a68 8D85      		ldd r24,Y+13
 10585 4a6a 9E85      		ldd r25,Y+14
 10586 4a6c FC01      		movw r30,r24
 10587 4a6e 8081      		ld r24,Z
 10588 4a70 9181      		ldd r25,Z+1
 10589 4a72 A281      		ldd r26,Z+2
 10590 4a74 B381      		ldd r27,Z+3
 10591 4a76 4B81      		ldd r20,Y+3
 10592 4a78 5C81      		ldd r21,Y+4
 10593 4a7a EDA1      		ldd r30,Y+37
 10594 4a7c FEA1      		ldd r31,Y+38
 10595 4a7e 8A01      		movw r16,r20
 10596 4a80 AC01      		movw r20,r24
 10597 4a82 BD01      		movw r22,r26
 10598 4a84 CF01      		movw r24,r30
 10599 4a86 0E94 0000 		call scaled_mat
 10600 4a8a DC01      		movw r26,r24
 10601 4a8c CB01      		movw r24,r22
 10602 4a8e 8987      		std Y+9,r24
 10603 4a90 9A87      		std Y+10,r25
 10604 4a92 AB87      		std Y+11,r26
 10605 4a94 BC87      		std Y+12,r27
 847:lp_solve_5.5/lp_scale.c ****         accumulate_for_scale(lp, &col_min, &col_max, absval);
 10606               		.loc 1 847 0
 10607 4a96 8985      		ldd r24,Y+9
 10608 4a98 9A85      		ldd r25,Y+10
 10609 4a9a AB85      		ldd r26,Y+11
 10610 4a9c BC85      		ldd r27,Y+12
 10611 4a9e AE01      		movw r20,r28
 10612 4aa0 435E      		subi r20,-29
 10613 4aa2 5F4F      		sbci r21,-1
 10614 4aa4 BE01      		movw r22,r28
 10615 4aa6 6F5D      		subi r22,-33
 10616 4aa8 7F4F      		sbci r23,-1
 10617 4aaa EDA1      		ldd r30,Y+37
 10618 4aac FEA1      		ldd r31,Y+38
 10619 4aae 8C01      		movw r16,r24
 10620 4ab0 9D01      		movw r18,r26
 10621 4ab2 CF01      		movw r24,r30
 10622 4ab4 0E94 0000 		call accumulate_for_scale
 845:lp_solve_5.5/lp_scale.c ****           i++, value += matValueStep, rownr += matRowColStep) {
 10623               		.loc 1 845 0
 10624 4ab8 8981      		ldd r24,Y+1
 10625 4aba 9A81      		ldd r25,Y+2
 10626 4abc 0196      		adiw r24,1
 10627 4abe 9A83      		std Y+2,r25
 10628 4ac0 8983      		std Y+1,r24
 10629 4ac2 8D85      		ldd r24,Y+13
 10630 4ac4 9E85      		ldd r25,Y+14
 10631 4ac6 0496      		adiw r24,4
 10632 4ac8 9E87      		std Y+14,r25
 10633 4aca 8D87      		std Y+13,r24
 10634 4acc 8F85      		ldd r24,Y+15
 10635 4ace 9889      		ldd r25,Y+16
 10636 4ad0 0296      		adiw r24,2
 10637 4ad2 988B      		std Y+16,r25
 10638 4ad4 8F87      		std Y+15,r24
 10639               	.L351:
 844:lp_solve_5.5/lp_scale.c ****       for(; i < nz;
 10640               		.loc 1 844 0
 10641 4ad6 2981      		ldd r18,Y+1
 10642 4ad8 3A81      		ldd r19,Y+2
 10643 4ada 8D81      		ldd r24,Y+5
 10644 4adc 9E81      		ldd r25,Y+6
 10645 4ade 2817      		cp r18,r24
 10646 4ae0 3907      		cpc r19,r25
 10647 4ae2 04F4      		brge .+2
 10648 4ae4 00C0      		rjmp .L352
 848:lp_solve_5.5/lp_scale.c ****       }
 849:lp_solve_5.5/lp_scale.c ****       nz = mat_collength(lp->matA, j);
 10649               		.loc 1 849 0
 10650 4ae6 8DA1      		ldd r24,Y+37
 10651 4ae8 9EA1      		ldd r25,Y+38
 10652 4aea 8A54      		subi r24,74
 10653 4aec 9D4F      		sbci r25,-3
 10654 4aee FC01      		movw r30,r24
 10655 4af0 8081      		ld r24,Z
 10656 4af2 9181      		ldd r25,Z+1
 10657 4af4 2B81      		ldd r18,Y+3
 10658 4af6 3C81      		ldd r19,Y+4
 10659 4af8 B901      		movw r22,r18
 10660 4afa 0E94 0000 		call mat_collength
 10661 4afe 9E83      		std Y+6,r25
 10662 4b00 8D83      		std Y+5,r24
 850:lp_solve_5.5/lp_scale.c ****       if(fabs(lp->orig_obj[j]) > 0)
 10663               		.loc 1 850 0
 10664 4b02 8DA1      		ldd r24,Y+37
 10665 4b04 9EA1      		ldd r25,Y+38
 10666 4b06 845D      		subi r24,-44
 10667 4b08 9D4F      		sbci r25,-3
 10668 4b0a FC01      		movw r30,r24
 10669 4b0c 2081      		ld r18,Z
 10670 4b0e 3181      		ldd r19,Z+1
 10671 4b10 8B81      		ldd r24,Y+3
 10672 4b12 9C81      		ldd r25,Y+4
 10673 4b14 880F      		lsl r24
 10674 4b16 991F      		rol r25
 10675 4b18 880F      		lsl r24
 10676 4b1a 991F      		rol r25
 10677 4b1c 820F      		add r24,r18
 10678 4b1e 931F      		adc r25,r19
 10679 4b20 FC01      		movw r30,r24
 10680 4b22 8081      		ld r24,Z
 10681 4b24 9181      		ldd r25,Z+1
 10682 4b26 A281      		ldd r26,Z+2
 10683 4b28 B381      		ldd r27,Z+3
 10684 4b2a BF77      		andi r27,0x7f
 10685 4b2c 20E0      		ldi r18,0
 10686 4b2e 30E0      		ldi r19,0
 10687 4b30 A901      		movw r20,r18
 10688 4b32 BC01      		movw r22,r24
 10689 4b34 CD01      		movw r24,r26
 10690 4b36 0E94 0000 		call __gtsf2
 10691 4b3a 1816      		cp __zero_reg__,r24
 10692 4b3c 04F4      		brge .L353
 851:lp_solve_5.5/lp_scale.c ****         nz++;
 10693               		.loc 1 851 0
 10694 4b3e 8D81      		ldd r24,Y+5
 10695 4b40 9E81      		ldd r25,Y+6
 10696 4b42 0196      		adiw r24,1
 10697 4b44 9E83      		std Y+6,r25
 10698 4b46 8D83      		std Y+5,r24
 10699               	.L353:
 852:lp_solve_5.5/lp_scale.c ****       scalechange[lp->rows + j] = minmax_to_scale(lp, col_min, col_max, nz);
 10700               		.loc 1 852 0
 10701 4b48 2B8D      		ldd r18,Y+27
 10702 4b4a 3C8D      		ldd r19,Y+28
 10703 4b4c 8DA1      		ldd r24,Y+37
 10704 4b4e 9EA1      		ldd r25,Y+38
 10705 4b50 8651      		subi r24,22
 10706 4b52 9E4F      		sbci r25,-2
 10707 4b54 FC01      		movw r30,r24
 10708 4b56 4081      		ld r20,Z
 10709 4b58 5181      		ldd r21,Z+1
 10710 4b5a 8B81      		ldd r24,Y+3
 10711 4b5c 9C81      		ldd r25,Y+4
 10712 4b5e 840F      		add r24,r20
 10713 4b60 951F      		adc r25,r21
 10714 4b62 880F      		lsl r24
 10715 4b64 991F      		rol r25
 10716 4b66 880F      		lsl r24
 10717 4b68 991F      		rol r25
 10718 4b6a 6901      		movw r12,r18
 10719 4b6c C80E      		add r12,r24
 10720 4b6e D91E      		adc r13,r25
 10721 4b70 2D8D      		ldd r18,Y+29
 10722 4b72 3E8D      		ldd r19,Y+30
 10723 4b74 4F8D      		ldd r20,Y+31
 10724 4b76 58A1      		ldd r21,Y+32
 10725 4b78 89A1      		ldd r24,Y+33
 10726 4b7a 9AA1      		ldd r25,Y+34
 10727 4b7c ABA1      		ldd r26,Y+35
 10728 4b7e BCA1      		ldd r27,Y+36
 10729 4b80 6D81      		ldd r22,Y+5
 10730 4b82 7E81      		ldd r23,Y+6
 10731 4b84 EDA1      		ldd r30,Y+37
 10732 4b86 FEA1      		ldd r31,Y+38
 10733 4b88 7B01      		movw r14,r22
 10734 4b8a 8901      		movw r16,r18
 10735 4b8c 9A01      		movw r18,r20
 10736 4b8e AC01      		movw r20,r24
 10737 4b90 BD01      		movw r22,r26
 10738 4b92 CF01      		movw r24,r30
 10739 4b94 0E94 0000 		call minmax_to_scale
 10740 4b98 DC01      		movw r26,r24
 10741 4b9a CB01      		movw r24,r22
 10742 4b9c F601      		movw r30,r12
 10743 4b9e 8083      		st Z,r24
 10744 4ba0 9183      		std Z+1,r25
 10745 4ba2 A283      		std Z+2,r26
 10746 4ba4 B383      		std Z+3,r27
 10747               	.L346:
 823:lp_solve_5.5/lp_scale.c ****     if(is_int(lp,j) && !is_integerscaling(lp)) { /* do not scale integer columns */
 10748               		.loc 1 823 0 discriminator 2
 10749 4ba6 8B81      		ldd r24,Y+3
 10750 4ba8 9C81      		ldd r25,Y+4
 10751 4baa 0196      		adiw r24,1
 10752 4bac 9C83      		std Y+4,r25
 10753 4bae 8B83      		std Y+3,r24
 10754               	.L344:
 823:lp_solve_5.5/lp_scale.c ****     if(is_int(lp,j) && !is_integerscaling(lp)) { /* do not scale integer columns */
 10755               		.loc 1 823 0 is_stmt 0 discriminator 1
 10756 4bb0 8DA1      		ldd r24,Y+37
 10757 4bb2 9EA1      		ldd r25,Y+38
 10758 4bb4 8451      		subi r24,20
 10759 4bb6 9E4F      		sbci r25,-2
 10760 4bb8 FC01      		movw r30,r24
 10761 4bba 2081      		ld r18,Z
 10762 4bbc 3181      		ldd r19,Z+1
 10763 4bbe 8B81      		ldd r24,Y+3
 10764 4bc0 9C81      		ldd r25,Y+4
 10765 4bc2 2817      		cp r18,r24
 10766 4bc4 3907      		cpc r19,r25
 10767 4bc6 04F0      		brlt .+2
 10768 4bc8 00C0      		rjmp .L355
 853:lp_solve_5.5/lp_scale.c ****     }
 854:lp_solve_5.5/lp_scale.c ****   }
 855:lp_solve_5.5/lp_scale.c **** 
 856:lp_solve_5.5/lp_scale.c ****   /* ... and then column-scale the already row-scaled matrix */
 857:lp_solve_5.5/lp_scale.c ****   colscaled = scale_updatecolumns(lp, &scalechange[lp->rows], TRUE);
 10769               		.loc 1 857 0 is_stmt 1
 10770 4bca 2B8D      		ldd r18,Y+27
 10771 4bcc 3C8D      		ldd r19,Y+28
 10772 4bce 8DA1      		ldd r24,Y+37
 10773 4bd0 9EA1      		ldd r25,Y+38
 10774 4bd2 8651      		subi r24,22
 10775 4bd4 9E4F      		sbci r25,-2
 10776 4bd6 FC01      		movw r30,r24
 10777 4bd8 8081      		ld r24,Z
 10778 4bda 9181      		ldd r25,Z+1
 10779 4bdc 880F      		lsl r24
 10780 4bde 991F      		rol r25
 10781 4be0 880F      		lsl r24
 10782 4be2 991F      		rol r25
 10783 4be4 280F      		add r18,r24
 10784 4be6 391F      		adc r19,r25
 10785 4be8 8DA1      		ldd r24,Y+37
 10786 4bea 9EA1      		ldd r25,Y+38
 10787 4bec 41E0      		ldi r20,lo8(1)
 10788 4bee B901      		movw r22,r18
 10789 4bf0 0E94 0000 		call scale_updatecolumns
 10790 4bf4 8E8B      		std Y+22,r24
 858:lp_solve_5.5/lp_scale.c **** 
 859:lp_solve_5.5/lp_scale.c ****   /* Create a geometric mean-type measure of the extent of scaling performed; */
 860:lp_solve_5.5/lp_scale.c ****   /* ideally, upon successive calls to scale() the value should converge to 0 */
 861:lp_solve_5.5/lp_scale.c ****   if(rowscaled || colscaled) {
 10791               		.loc 1 861 0
 10792 4bf6 8D89      		ldd r24,Y+21
 10793 4bf8 8823      		tst r24
 10794 4bfa 01F4      		brne .L356
 10795               		.loc 1 861 0 is_stmt 0 discriminator 1
 10796 4bfc 8E89      		ldd r24,Y+22
 10797 4bfe 8823      		tst r24
 10798 4c00 01F4      		brne .+2
 10799 4c02 00C0      		rjmp .L357
 10800               	.L356:
 862:lp_solve_5.5/lp_scale.c ****     col_max = 0;
 10801               		.loc 1 862 0 is_stmt 1
 10802 4c04 1D8E      		std Y+29,__zero_reg__
 10803 4c06 1E8E      		std Y+30,__zero_reg__
 10804 4c08 1F8E      		std Y+31,__zero_reg__
 10805 4c0a 18A2      		std Y+32,__zero_reg__
 863:lp_solve_5.5/lp_scale.c ****     for(j = 1; j <= lp->columns; j++)
 10806               		.loc 1 863 0
 10807 4c0c 81E0      		ldi r24,lo8(1)
 10808 4c0e 90E0      		ldi r25,0
 10809 4c10 9C83      		std Y+4,r25
 10810 4c12 8B83      		std Y+3,r24
 10811 4c14 00C0      		rjmp .L358
 10812               	.L359:
 864:lp_solve_5.5/lp_scale.c ****       col_max += log(scalechange[lp->rows + j]);
 10813               		.loc 1 864 0 discriminator 3
 10814 4c16 2B8D      		ldd r18,Y+27
 10815 4c18 3C8D      		ldd r19,Y+28
 10816 4c1a 8DA1      		ldd r24,Y+37
 10817 4c1c 9EA1      		ldd r25,Y+38
 10818 4c1e 8651      		subi r24,22
 10819 4c20 9E4F      		sbci r25,-2
 10820 4c22 FC01      		movw r30,r24
 10821 4c24 4081      		ld r20,Z
 10822 4c26 5181      		ldd r21,Z+1
 10823 4c28 8B81      		ldd r24,Y+3
 10824 4c2a 9C81      		ldd r25,Y+4
 10825 4c2c 840F      		add r24,r20
 10826 4c2e 951F      		adc r25,r21
 10827 4c30 880F      		lsl r24
 10828 4c32 991F      		rol r25
 10829 4c34 880F      		lsl r24
 10830 4c36 991F      		rol r25
 10831 4c38 820F      		add r24,r18
 10832 4c3a 931F      		adc r25,r19
 10833 4c3c FC01      		movw r30,r24
 10834 4c3e 8081      		ld r24,Z
 10835 4c40 9181      		ldd r25,Z+1
 10836 4c42 A281      		ldd r26,Z+2
 10837 4c44 B381      		ldd r27,Z+3
 10838 4c46 BC01      		movw r22,r24
 10839 4c48 CD01      		movw r24,r26
 10840 4c4a 0E94 0000 		call log
 10841 4c4e 7B01      		movw r14,r22
 10842 4c50 8C01      		movw r16,r24
 10843 4c52 8D8D      		ldd r24,Y+29
 10844 4c54 9E8D      		ldd r25,Y+30
 10845 4c56 AF8D      		ldd r26,Y+31
 10846 4c58 B8A1      		ldd r27,Y+32
 10847 4c5a 9C01      		movw r18,r24
 10848 4c5c AD01      		movw r20,r26
 10849 4c5e C801      		movw r24,r16
 10850 4c60 B701      		movw r22,r14
 10851 4c62 0E94 0000 		call __addsf3
 10852 4c66 DC01      		movw r26,r24
 10853 4c68 CB01      		movw r24,r22
 10854 4c6a 8D8F      		std Y+29,r24
 10855 4c6c 9E8F      		std Y+30,r25
 10856 4c6e AF8F      		std Y+31,r26
 10857 4c70 B8A3      		std Y+32,r27
 863:lp_solve_5.5/lp_scale.c ****     for(j = 1; j <= lp->columns; j++)
 10858               		.loc 1 863 0 discriminator 3
 10859 4c72 8B81      		ldd r24,Y+3
 10860 4c74 9C81      		ldd r25,Y+4
 10861 4c76 0196      		adiw r24,1
 10862 4c78 9C83      		std Y+4,r25
 10863 4c7a 8B83      		std Y+3,r24
 10864               	.L358:
 863:lp_solve_5.5/lp_scale.c ****     for(j = 1; j <= lp->columns; j++)
 10865               		.loc 1 863 0 is_stmt 0 discriminator 1
 10866 4c7c 8DA1      		ldd r24,Y+37
 10867 4c7e 9EA1      		ldd r25,Y+38
 10868 4c80 8451      		subi r24,20
 10869 4c82 9E4F      		sbci r25,-2
 10870 4c84 FC01      		movw r30,r24
 10871 4c86 2081      		ld r18,Z
 10872 4c88 3181      		ldd r19,Z+1
 10873 4c8a 8B81      		ldd r24,Y+3
 10874 4c8c 9C81      		ldd r25,Y+4
 10875 4c8e 2817      		cp r18,r24
 10876 4c90 3907      		cpc r19,r25
 10877 4c92 04F4      		brge .L359
 865:lp_solve_5.5/lp_scale.c ****     col_max = exp(col_max/lp->columns);
 10878               		.loc 1 865 0 is_stmt 1
 10879 4c94 CD8C      		ldd r12,Y+29
 10880 4c96 DE8C      		ldd r13,Y+30
 10881 4c98 EF8C      		ldd r14,Y+31
 10882 4c9a F8A0      		ldd r15,Y+32
 10883 4c9c 8DA1      		ldd r24,Y+37
 10884 4c9e 9EA1      		ldd r25,Y+38
 10885 4ca0 8451      		subi r24,20
 10886 4ca2 9E4F      		sbci r25,-2
 10887 4ca4 FC01      		movw r30,r24
 10888 4ca6 8081      		ld r24,Z
 10889 4ca8 9181      		ldd r25,Z+1
 10890 4caa 092E      		mov __tmp_reg__,r25
 10891 4cac 000C      		lsl r0
 10892 4cae AA0B      		sbc r26,r26
 10893 4cb0 BB0B      		sbc r27,r27
 10894 4cb2 BC01      		movw r22,r24
 10895 4cb4 CD01      		movw r24,r26
 10896 4cb6 0E94 0000 		call __floatsisf
 10897 4cba DC01      		movw r26,r24
 10898 4cbc CB01      		movw r24,r22
 10899 4cbe 9C01      		movw r18,r24
 10900 4cc0 AD01      		movw r20,r26
 10901 4cc2 C701      		movw r24,r14
 10902 4cc4 B601      		movw r22,r12
 10903 4cc6 0E94 0000 		call __divsf3
 10904 4cca DC01      		movw r26,r24
 10905 4ccc CB01      		movw r24,r22
 10906 4cce BC01      		movw r22,r24
 10907 4cd0 CD01      		movw r24,r26
 10908 4cd2 0E94 0000 		call exp
 10909 4cd6 DC01      		movw r26,r24
 10910 4cd8 CB01      		movw r24,r22
 10911 4cda 8D8F      		std Y+29,r24
 10912 4cdc 9E8F      		std Y+30,r25
 10913 4cde AF8F      		std Y+31,r26
 10914 4ce0 B8A3      		std Y+32,r27
 866:lp_solve_5.5/lp_scale.c **** 
 867:lp_solve_5.5/lp_scale.c ****     i = 0;
 10915               		.loc 1 867 0
 10916 4ce2 1A82      		std Y+2,__zero_reg__
 10917 4ce4 1982      		std Y+1,__zero_reg__
 868:lp_solve_5.5/lp_scale.c ****     col_min = 0;
 10918               		.loc 1 868 0
 10919 4ce6 19A2      		std Y+33,__zero_reg__
 10920 4ce8 1AA2      		std Y+34,__zero_reg__
 10921 4cea 1BA2      		std Y+35,__zero_reg__
 10922 4cec 1CA2      		std Y+36,__zero_reg__
 869:lp_solve_5.5/lp_scale.c ****     for(; i <= lp->rows; i++)
 10923               		.loc 1 869 0
 10924 4cee 00C0      		rjmp .L360
 10925               	.L361:
 870:lp_solve_5.5/lp_scale.c ****       col_min += log(scalechange[i]);
 10926               		.loc 1 870 0 discriminator 2
 10927 4cf0 2B8D      		ldd r18,Y+27
 10928 4cf2 3C8D      		ldd r19,Y+28
 10929 4cf4 8981      		ldd r24,Y+1
 10930 4cf6 9A81      		ldd r25,Y+2
 10931 4cf8 880F      		lsl r24
 10932 4cfa 991F      		rol r25
 10933 4cfc 880F      		lsl r24
 10934 4cfe 991F      		rol r25
 10935 4d00 820F      		add r24,r18
 10936 4d02 931F      		adc r25,r19
 10937 4d04 FC01      		movw r30,r24
 10938 4d06 8081      		ld r24,Z
 10939 4d08 9181      		ldd r25,Z+1
 10940 4d0a A281      		ldd r26,Z+2
 10941 4d0c B381      		ldd r27,Z+3
 10942 4d0e BC01      		movw r22,r24
 10943 4d10 CD01      		movw r24,r26
 10944 4d12 0E94 0000 		call log
 10945 4d16 7B01      		movw r14,r22
 10946 4d18 8C01      		movw r16,r24
 10947 4d1a 89A1      		ldd r24,Y+33
 10948 4d1c 9AA1      		ldd r25,Y+34
 10949 4d1e ABA1      		ldd r26,Y+35
 10950 4d20 BCA1      		ldd r27,Y+36
 10951 4d22 9C01      		movw r18,r24
 10952 4d24 AD01      		movw r20,r26
 10953 4d26 C801      		movw r24,r16
 10954 4d28 B701      		movw r22,r14
 10955 4d2a 0E94 0000 		call __addsf3
 10956 4d2e DC01      		movw r26,r24
 10957 4d30 CB01      		movw r24,r22
 10958 4d32 89A3      		std Y+33,r24
 10959 4d34 9AA3      		std Y+34,r25
 10960 4d36 ABA3      		std Y+35,r26
 10961 4d38 BCA3      		std Y+36,r27
 869:lp_solve_5.5/lp_scale.c ****     for(; i <= lp->rows; i++)
 10962               		.loc 1 869 0 discriminator 2
 10963 4d3a 8981      		ldd r24,Y+1
 10964 4d3c 9A81      		ldd r25,Y+2
 10965 4d3e 0196      		adiw r24,1
 10966 4d40 9A83      		std Y+2,r25
 10967 4d42 8983      		std Y+1,r24
 10968               	.L360:
 869:lp_solve_5.5/lp_scale.c ****     for(; i <= lp->rows; i++)
 10969               		.loc 1 869 0 is_stmt 0 discriminator 1
 10970 4d44 8DA1      		ldd r24,Y+37
 10971 4d46 9EA1      		ldd r25,Y+38
 10972 4d48 8651      		subi r24,22
 10973 4d4a 9E4F      		sbci r25,-2
 10974 4d4c FC01      		movw r30,r24
 10975 4d4e 2081      		ld r18,Z
 10976 4d50 3181      		ldd r19,Z+1
 10977 4d52 8981      		ldd r24,Y+1
 10978 4d54 9A81      		ldd r25,Y+2
 10979 4d56 2817      		cp r18,r24
 10980 4d58 3907      		cpc r19,r25
 10981 4d5a 04F4      		brge .L361
 871:lp_solve_5.5/lp_scale.c ****     col_min = exp(col_min/row_count);
 10982               		.loc 1 871 0 is_stmt 1
 10983 4d5c C9A0      		ldd r12,Y+33
 10984 4d5e DAA0      		ldd r13,Y+34
 10985 4d60 EBA0      		ldd r14,Y+35
 10986 4d62 FCA0      		ldd r15,Y+36
 10987 4d64 8B89      		ldd r24,Y+19
 10988 4d66 9C89      		ldd r25,Y+20
 10989 4d68 092E      		mov __tmp_reg__,r25
 10990 4d6a 000C      		lsl r0
 10991 4d6c AA0B      		sbc r26,r26
 10992 4d6e BB0B      		sbc r27,r27
 10993 4d70 BC01      		movw r22,r24
 10994 4d72 CD01      		movw r24,r26
 10995 4d74 0E94 0000 		call __floatsisf
 10996 4d78 DC01      		movw r26,r24
 10997 4d7a CB01      		movw r24,r22
 10998 4d7c 9C01      		movw r18,r24
 10999 4d7e AD01      		movw r20,r26
 11000 4d80 C701      		movw r24,r14
 11001 4d82 B601      		movw r22,r12
 11002 4d84 0E94 0000 		call __divsf3
 11003 4d88 DC01      		movw r26,r24
 11004 4d8a CB01      		movw r24,r22
 11005 4d8c BC01      		movw r22,r24
 11006 4d8e CD01      		movw r24,r26
 11007 4d90 0E94 0000 		call exp
 11008 4d94 DC01      		movw r26,r24
 11009 4d96 CB01      		movw r24,r22
 11010 4d98 89A3      		std Y+33,r24
 11011 4d9a 9AA3      		std Y+34,r25
 11012 4d9c ABA3      		std Y+35,r26
 11013 4d9e BCA3      		std Y+36,r27
 11014 4da0 00C0      		rjmp .L362
 11015               	.L357:
 872:lp_solve_5.5/lp_scale.c ****   }
 873:lp_solve_5.5/lp_scale.c ****   else {
 874:lp_solve_5.5/lp_scale.c ****     col_max = 1;
 11016               		.loc 1 874 0
 11017 4da2 80E0      		ldi r24,0
 11018 4da4 90E0      		ldi r25,0
 11019 4da6 A0E8      		ldi r26,lo8(-128)
 11020 4da8 BFE3      		ldi r27,lo8(63)
 11021 4daa 8D8F      		std Y+29,r24
 11022 4dac 9E8F      		std Y+30,r25
 11023 4dae AF8F      		std Y+31,r26
 11024 4db0 B8A3      		std Y+32,r27
 875:lp_solve_5.5/lp_scale.c ****     col_min = 1;
 11025               		.loc 1 875 0
 11026 4db2 80E0      		ldi r24,0
 11027 4db4 90E0      		ldi r25,0
 11028 4db6 A0E8      		ldi r26,lo8(-128)
 11029 4db8 BFE3      		ldi r27,lo8(63)
 11030 4dba 89A3      		std Y+33,r24
 11031 4dbc 9AA3      		std Y+34,r25
 11032 4dbe ABA3      		std Y+35,r26
 11033 4dc0 BCA3      		std Y+36,r27
 11034               	.L362:
 876:lp_solve_5.5/lp_scale.c ****   }
 877:lp_solve_5.5/lp_scale.c **** 
 878:lp_solve_5.5/lp_scale.c ****   if(scaledelta == NULL)
 11035               		.loc 1 878 0
 11036 4dc2 8FA1      		ldd r24,Y+39
 11037 4dc4 98A5      		ldd r25,Y+40
 11038 4dc6 892B      		or r24,r25
 11039 4dc8 01F4      		brne .L363
 879:lp_solve_5.5/lp_scale.c ****     FREE(scalechange);
 11040               		.loc 1 879 0
 11041 4dca 8B8D      		ldd r24,Y+27
 11042 4dcc 9C8D      		ldd r25,Y+28
 11043 4dce 892B      		or r24,r25
 11044 4dd0 01F0      		breq .L363
 11045               		.loc 1 879 0 is_stmt 0 discriminator 1
 11046 4dd2 8B8D      		ldd r24,Y+27
 11047 4dd4 9C8D      		ldd r25,Y+28
 11048 4dd6 0E94 0000 		call free
 11049 4dda 1C8E      		std Y+28,__zero_reg__
 11050 4ddc 1B8E      		std Y+27,__zero_reg__
 11051               	.L363:
 880:lp_solve_5.5/lp_scale.c **** 
 881:lp_solve_5.5/lp_scale.c ****   return(1 - sqrt(col_max*col_min));
 11052               		.loc 1 881 0 is_stmt 1
 11053 4dde 8D8D      		ldd r24,Y+29
 11054 4de0 9E8D      		ldd r25,Y+30
 11055 4de2 AF8D      		ldd r26,Y+31
 11056 4de4 B8A1      		ldd r27,Y+32
 11057 4de6 29A1      		ldd r18,Y+33
 11058 4de8 3AA1      		ldd r19,Y+34
 11059 4dea 4BA1      		ldd r20,Y+35
 11060 4dec 5CA1      		ldd r21,Y+36
 11061 4dee BC01      		movw r22,r24
 11062 4df0 CD01      		movw r24,r26
 11063 4df2 0E94 0000 		call __mulsf3
 11064 4df6 DC01      		movw r26,r24
 11065 4df8 CB01      		movw r24,r22
 11066 4dfa BC01      		movw r22,r24
 11067 4dfc CD01      		movw r24,r26
 11068 4dfe 0E94 0000 		call sqrt
 11069 4e02 DC01      		movw r26,r24
 11070 4e04 CB01      		movw r24,r22
 11071 4e06 9C01      		movw r18,r24
 11072 4e08 AD01      		movw r20,r26
 11073 4e0a 60E0      		ldi r22,0
 11074 4e0c 70E0      		ldi r23,0
 11075 4e0e 80E8      		ldi r24,lo8(-128)
 11076 4e10 9FE3      		ldi r25,lo8(63)
 11077 4e12 0E94 0000 		call __subsf3
 11078 4e16 DC01      		movw r26,r24
 11079 4e18 CB01      		movw r24,r22
 11080               	.L364:
 882:lp_solve_5.5/lp_scale.c **** }
 11081               		.loc 1 882 0 discriminator 1
 11082 4e1a BC01      		movw r22,r24
 11083 4e1c CD01      		movw r24,r26
 11084               	/* epilogue start */
 11085 4e1e A896      		adiw r28,40
 11086 4e20 0FB6      		in __tmp_reg__,__SREG__
 11087 4e22 F894      		cli
 11088 4e24 DEBF      		out __SP_H__,r29
 11089 4e26 0FBE      		out __SREG__,__tmp_reg__
 11090 4e28 CDBF      		out __SP_L__,r28
 11091 4e2a DF91      		pop r29
 11092 4e2c CF91      		pop r28
 11093 4e2e 1F91      		pop r17
 11094 4e30 0F91      		pop r16
 11095 4e32 FF90      		pop r15
 11096 4e34 EF90      		pop r14
 11097 4e36 DF90      		pop r13
 11098 4e38 CF90      		pop r12
 11099 4e3a 0895      		ret
 11100               		.cfi_endproc
 11101               	.LFE22:
 11103               	.global	finalize_scaling
 11105               	finalize_scaling:
 11106               	.LFB23:
 883:lp_solve_5.5/lp_scale.c **** 
 884:lp_solve_5.5/lp_scale.c **** STATIC MYBOOL finalize_scaling(lprec *lp, REAL *scaledelta)
 885:lp_solve_5.5/lp_scale.c **** {
 11107               		.loc 1 885 0
 11108               		.cfi_startproc
 11109 4e3c 0F93      		push r16
 11110               	.LCFI108:
 11111               		.cfi_def_cfa_offset 3
 11112               		.cfi_offset 16, -2
 11113 4e3e 1F93      		push r17
 11114               	.LCFI109:
 11115               		.cfi_def_cfa_offset 4
 11116               		.cfi_offset 17, -3
 11117 4e40 CF93      		push r28
 11118               	.LCFI110:
 11119               		.cfi_def_cfa_offset 5
 11120               		.cfi_offset 28, -4
 11121 4e42 DF93      		push r29
 11122               	.LCFI111:
 11123               		.cfi_def_cfa_offset 6
 11124               		.cfi_offset 29, -5
 11125 4e44 CDB7      		in r28,__SP_L__
 11126 4e46 DEB7      		in r29,__SP_H__
 11127               	.LCFI112:
 11128               		.cfi_def_cfa_register 28
 11129 4e48 2A97      		sbiw r28,10
 11130               	.LCFI113:
 11131               		.cfi_def_cfa_offset 16
 11132 4e4a 0FB6      		in __tmp_reg__,__SREG__
 11133 4e4c F894      		cli
 11134 4e4e DEBF      		out __SP_H__,r29
 11135 4e50 0FBE      		out __SREG__,__tmp_reg__
 11136 4e52 CDBF      		out __SP_L__,r28
 11137               	/* prologue: function */
 11138               	/* frame size = 10 */
 11139               	/* stack size = 14 */
 11140               	.L__stack_usage = 14
 11141 4e54 9887      		std Y+8,r25
 11142 4e56 8F83      		std Y+7,r24
 11143 4e58 7A87      		std Y+10,r23
 11144 4e5a 6987      		std Y+9,r22
 886:lp_solve_5.5/lp_scale.c ****   int i;
 887:lp_solve_5.5/lp_scale.c **** 
 888:lp_solve_5.5/lp_scale.c ****   /* Check if we should equilibrate */
 889:lp_solve_5.5/lp_scale.c ****   if(is_scalemode(lp, SCALE_EQUILIBRATE) && !is_scaletype(lp, SCALE_CURTISREID)) {
 11145               		.loc 1 889 0
 11146 4e5c 8F81      		ldd r24,Y+7
 11147 4e5e 9885      		ldd r25,Y+8
 11148 4e60 60E4      		ldi r22,lo8(64)
 11149 4e62 70E0      		ldi r23,0
 11150 4e64 0E94 0000 		call is_scalemode
 11151 4e68 8823      		tst r24
 11152 4e6a 01F0      		breq .L370
 11153               		.loc 1 889 0 is_stmt 0 discriminator 1
 11154 4e6c 8F81      		ldd r24,Y+7
 11155 4e6e 9885      		ldd r25,Y+8
 11156 4e70 67E0      		ldi r22,lo8(7)
 11157 4e72 70E0      		ldi r23,0
 11158 4e74 0E94 0000 		call is_scaletype
 11159 4e78 8823      		tst r24
 11160 4e7a 01F4      		brne .L370
 11161               	.LBB2:
 890:lp_solve_5.5/lp_scale.c ****     int oldmode;
 891:lp_solve_5.5/lp_scale.c **** 
 892:lp_solve_5.5/lp_scale.c ****     oldmode = lp->scalemode;
 11162               		.loc 1 892 0 is_stmt 1
 11163 4e7c 8F81      		ldd r24,Y+7
 11164 4e7e 9885      		ldd r25,Y+8
 11165 4e80 8259      		subi r24,-110
 11166 4e82 9D4F      		sbci r25,-3
 11167 4e84 FC01      		movw r30,r24
 11168 4e86 8081      		ld r24,Z
 11169 4e88 9181      		ldd r25,Z+1
 11170 4e8a 9E83      		std Y+6,r25
 11171 4e8c 8D83      		std Y+5,r24
 893:lp_solve_5.5/lp_scale.c ****     lp->scalemode = SCALE_LINEAR + SCALE_EXTREME;
 11172               		.loc 1 893 0
 11173 4e8e 8F81      		ldd r24,Y+7
 11174 4e90 9885      		ldd r25,Y+8
 11175 4e92 8259      		subi r24,-110
 11176 4e94 9D4F      		sbci r25,-3
 11177 4e96 21E0      		ldi r18,lo8(1)
 11178 4e98 30E0      		ldi r19,0
 11179 4e9a FC01      		movw r30,r24
 11180 4e9c 3183      		std Z+1,r19
 11181 4e9e 2083      		st Z,r18
 894:lp_solve_5.5/lp_scale.c ****     scale(lp, scaledelta);
 11182               		.loc 1 894 0
 11183 4ea0 2985      		ldd r18,Y+9
 11184 4ea2 3A85      		ldd r19,Y+10
 11185 4ea4 8F81      		ldd r24,Y+7
 11186 4ea6 9885      		ldd r25,Y+8
 11187 4ea8 B901      		movw r22,r18
 11188 4eaa 0E94 0000 		call scale
 895:lp_solve_5.5/lp_scale.c ****     lp->scalemode = oldmode;
 11189               		.loc 1 895 0
 11190 4eae 8F81      		ldd r24,Y+7
 11191 4eb0 9885      		ldd r25,Y+8
 11192 4eb2 8259      		subi r24,-110
 11193 4eb4 9D4F      		sbci r25,-3
 11194 4eb6 2D81      		ldd r18,Y+5
 11195 4eb8 3E81      		ldd r19,Y+6
 11196 4eba FC01      		movw r30,r24
 11197 4ebc 3183      		std Z+1,r19
 11198 4ebe 2083      		st Z,r18
 11199               	.L370:
 11200               	.LBE2:
 896:lp_solve_5.5/lp_scale.c ****   }
 897:lp_solve_5.5/lp_scale.c **** 
 898:lp_solve_5.5/lp_scale.c ****   /* Check if we should prevent rounding errors */
 899:lp_solve_5.5/lp_scale.c ****   if(is_scalemode(lp, SCALE_POWER2)) {
 11201               		.loc 1 899 0
 11202 4ec0 8F81      		ldd r24,Y+7
 11203 4ec2 9885      		ldd r25,Y+8
 11204 4ec4 60E2      		ldi r22,lo8(32)
 11205 4ec6 70E0      		ldi r23,0
 11206 4ec8 0E94 0000 		call is_scalemode
 11207 4ecc 8823      		tst r24
 11208 4ece 01F4      		brne .+2
 11209 4ed0 00C0      		rjmp .L371
 11210               	.LBB3:
 900:lp_solve_5.5/lp_scale.c ****     REAL *scalars;
 901:lp_solve_5.5/lp_scale.c ****     if(scaledelta == NULL)
 11211               		.loc 1 901 0
 11212 4ed2 8985      		ldd r24,Y+9
 11213 4ed4 9A85      		ldd r25,Y+10
 11214 4ed6 892B      		or r24,r25
 11215 4ed8 01F4      		brne .L372
 902:lp_solve_5.5/lp_scale.c ****       scalars = lp->scalars;
 11216               		.loc 1 902 0
 11217 4eda 8F81      		ldd r24,Y+7
 11218 4edc 9885      		ldd r25,Y+8
 11219 4ede 8C53      		subi r24,60
 11220 4ee0 9D4F      		sbci r25,-3
 11221 4ee2 FC01      		movw r30,r24
 11222 4ee4 8081      		ld r24,Z
 11223 4ee6 9181      		ldd r25,Z+1
 11224 4ee8 9C83      		std Y+4,r25
 11225 4eea 8B83      		std Y+3,r24
 11226 4eec 00C0      		rjmp .L373
 11227               	.L372:
 903:lp_solve_5.5/lp_scale.c ****     else
 904:lp_solve_5.5/lp_scale.c ****       scalars = scaledelta;
 11228               		.loc 1 904 0
 11229 4eee 8985      		ldd r24,Y+9
 11230 4ef0 9A85      		ldd r25,Y+10
 11231 4ef2 9C83      		std Y+4,r25
 11232 4ef4 8B83      		std Y+3,r24
 11233               	.L373:
 905:lp_solve_5.5/lp_scale.c **** 
 906:lp_solve_5.5/lp_scale.c ****     for(i = 0; i <= lp->sum; i++)
 11234               		.loc 1 906 0
 11235 4ef6 1A82      		std Y+2,__zero_reg__
 11236 4ef8 1982      		std Y+1,__zero_reg__
 11237 4efa 00C0      		rjmp .L374
 11238               	.L375:
 907:lp_solve_5.5/lp_scale.c ****       scalars[i] = roundPower2(scalars[i]);
 11239               		.loc 1 907 0 discriminator 3
 11240 4efc 8981      		ldd r24,Y+1
 11241 4efe 9A81      		ldd r25,Y+2
 11242 4f00 880F      		lsl r24
 11243 4f02 991F      		rol r25
 11244 4f04 880F      		lsl r24
 11245 4f06 991F      		rol r25
 11246 4f08 2B81      		ldd r18,Y+3
 11247 4f0a 3C81      		ldd r19,Y+4
 11248 4f0c 8901      		movw r16,r18
 11249 4f0e 080F      		add r16,r24
 11250 4f10 191F      		adc r17,r25
 11251 4f12 8981      		ldd r24,Y+1
 11252 4f14 9A81      		ldd r25,Y+2
 11253 4f16 880F      		lsl r24
 11254 4f18 991F      		rol r25
 11255 4f1a 880F      		lsl r24
 11256 4f1c 991F      		rol r25
 11257 4f1e 2B81      		ldd r18,Y+3
 11258 4f20 3C81      		ldd r19,Y+4
 11259 4f22 820F      		add r24,r18
 11260 4f24 931F      		adc r25,r19
 11261 4f26 FC01      		movw r30,r24
 11262 4f28 8081      		ld r24,Z
 11263 4f2a 9181      		ldd r25,Z+1
 11264 4f2c A281      		ldd r26,Z+2
 11265 4f2e B381      		ldd r27,Z+3
 11266 4f30 BC01      		movw r22,r24
 11267 4f32 CD01      		movw r24,r26
 11268 4f34 0E94 0000 		call roundPower2
 11269 4f38 DC01      		movw r26,r24
 11270 4f3a CB01      		movw r24,r22
 11271 4f3c F801      		movw r30,r16
 11272 4f3e 8083      		st Z,r24
 11273 4f40 9183      		std Z+1,r25
 11274 4f42 A283      		std Z+2,r26
 11275 4f44 B383      		std Z+3,r27
 906:lp_solve_5.5/lp_scale.c ****       scalars[i] = roundPower2(scalars[i]);
 11276               		.loc 1 906 0 discriminator 3
 11277 4f46 8981      		ldd r24,Y+1
 11278 4f48 9A81      		ldd r25,Y+2
 11279 4f4a 0196      		adiw r24,1
 11280 4f4c 9A83      		std Y+2,r25
 11281 4f4e 8983      		std Y+1,r24
 11282               	.L374:
 906:lp_solve_5.5/lp_scale.c ****       scalars[i] = roundPower2(scalars[i]);
 11283               		.loc 1 906 0 is_stmt 0 discriminator 1
 11284 4f50 8F81      		ldd r24,Y+7
 11285 4f52 9885      		ldd r25,Y+8
 11286 4f54 8851      		subi r24,24
 11287 4f56 9E4F      		sbci r25,-2
 11288 4f58 FC01      		movw r30,r24
 11289 4f5a 2081      		ld r18,Z
 11290 4f5c 3181      		ldd r19,Z+1
 11291 4f5e 8981      		ldd r24,Y+1
 11292 4f60 9A81      		ldd r25,Y+2
 11293 4f62 2817      		cp r18,r24
 11294 4f64 3907      		cpc r19,r25
 11295 4f66 04F4      		brge .L375
 11296               	.L371:
 11297               	.LBE3:
 908:lp_solve_5.5/lp_scale.c ****   }
 909:lp_solve_5.5/lp_scale.c **** 
 910:lp_solve_5.5/lp_scale.c ****   /* Then transfer the scalars to the model's data */
 911:lp_solve_5.5/lp_scale.c ****   return( scale_rows(lp, scaledelta) && scale_columns(lp, scaledelta) );
 11298               		.loc 1 911 0 is_stmt 1
 11299 4f68 2985      		ldd r18,Y+9
 11300 4f6a 3A85      		ldd r19,Y+10
 11301 4f6c 8F81      		ldd r24,Y+7
 11302 4f6e 9885      		ldd r25,Y+8
 11303 4f70 B901      		movw r22,r18
 11304 4f72 0E94 0000 		call scale_rows
 11305 4f76 8823      		tst r24
 11306 4f78 01F0      		breq .L376
 11307               		.loc 1 911 0 is_stmt 0 discriminator 1
 11308 4f7a 2985      		ldd r18,Y+9
 11309 4f7c 3A85      		ldd r19,Y+10
 11310 4f7e 8F81      		ldd r24,Y+7
 11311 4f80 9885      		ldd r25,Y+8
 11312 4f82 B901      		movw r22,r18
 11313 4f84 0E94 0000 		call scale_columns
 11314 4f88 8823      		tst r24
 11315 4f8a 01F0      		breq .L376
 11316               		.loc 1 911 0 discriminator 3
 11317 4f8c 81E0      		ldi r24,lo8(1)
 11318 4f8e 90E0      		ldi r25,0
 11319 4f90 00C0      		rjmp .L377
 11320               	.L376:
 11321               		.loc 1 911 0 discriminator 4
 11322 4f92 80E0      		ldi r24,0
 11323 4f94 90E0      		ldi r25,0
 11324               	.L377:
 11325               	/* epilogue start */
 912:lp_solve_5.5/lp_scale.c **** 
 913:lp_solve_5.5/lp_scale.c **** }
 11326               		.loc 1 913 0 is_stmt 1 discriminator 6
 11327 4f96 2A96      		adiw r28,10
 11328 4f98 0FB6      		in __tmp_reg__,__SREG__
 11329 4f9a F894      		cli
 11330 4f9c DEBF      		out __SP_H__,r29
 11331 4f9e 0FBE      		out __SREG__,__tmp_reg__
 11332 4fa0 CDBF      		out __SP_L__,r28
 11333 4fa2 DF91      		pop r29
 11334 4fa4 CF91      		pop r28
 11335 4fa6 1F91      		pop r17
 11336 4fa8 0F91      		pop r16
 11337 4faa 0895      		ret
 11338               		.cfi_endproc
 11339               	.LFE23:
 11341               	.global	__floatunsisf
 11342               	.global	__gesf2
 11343               	.global	auto_scale
 11345               	auto_scale:
 11346               	.LFB24:
 914:lp_solve_5.5/lp_scale.c **** 
 915:lp_solve_5.5/lp_scale.c **** STATIC REAL auto_scale(lprec *lp)
 916:lp_solve_5.5/lp_scale.c **** {
 11347               		.loc 1 916 0
 11348               		.cfi_startproc
 11349 4fac CF93      		push r28
 11350               	.LCFI114:
 11351               		.cfi_def_cfa_offset 3
 11352               		.cfi_offset 28, -2
 11353 4fae DF93      		push r29
 11354               	.LCFI115:
 11355               		.cfi_def_cfa_offset 4
 11356               		.cfi_offset 29, -3
 11357 4fb0 CDB7      		in r28,__SP_L__
 11358 4fb2 DEB7      		in r29,__SP_H__
 11359               	.LCFI116:
 11360               		.cfi_def_cfa_register 28
 11361 4fb4 6497      		sbiw r28,20
 11362               	.LCFI117:
 11363               		.cfi_def_cfa_offset 24
 11364 4fb6 0FB6      		in __tmp_reg__,__SREG__
 11365 4fb8 F894      		cli
 11366 4fba DEBF      		out __SP_H__,r29
 11367 4fbc 0FBE      		out __SREG__,__tmp_reg__
 11368 4fbe CDBF      		out __SP_L__,r28
 11369               	/* prologue: function */
 11370               	/* frame size = 20 */
 11371               	/* stack size = 22 */
 11372               	.L__stack_usage = 22
 11373 4fc0 9C8B      		std Y+20,r25
 11374 4fc2 8B8B      		std Y+19,r24
 917:lp_solve_5.5/lp_scale.c ****   int    n = 1;
 11375               		.loc 1 917 0
 11376 4fc4 81E0      		ldi r24,lo8(1)
 11377 4fc6 90E0      		ldi r25,0
 11378 4fc8 9A83      		std Y+2,r25
 11379 4fca 8983      		std Y+1,r24
 918:lp_solve_5.5/lp_scale.c ****   REAL   scalingmetric = 0, *scalenew = NULL;
 11380               		.loc 1 918 0
 11381 4fcc 1B82      		std Y+3,__zero_reg__
 11382 4fce 1C82      		std Y+4,__zero_reg__
 11383 4fd0 1D82      		std Y+5,__zero_reg__
 11384 4fd2 1E82      		std Y+6,__zero_reg__
 11385 4fd4 1A8A      		std Y+18,__zero_reg__
 11386 4fd6 198A      		std Y+17,__zero_reg__
 919:lp_solve_5.5/lp_scale.c **** 
 920:lp_solve_5.5/lp_scale.c ****   if(lp->scaling_used &&
 11387               		.loc 1 920 0
 11388 4fd8 8B89      		ldd r24,Y+19
 11389 4fda 9C89      		ldd r25,Y+20
 11390 4fdc 8A53      		subi r24,58
 11391 4fde 9D4F      		sbci r25,-3
 11392 4fe0 FC01      		movw r30,r24
 11393 4fe2 8081      		ld r24,Z
 11394 4fe4 8823      		tst r24
 11395 4fe6 01F0      		breq .L380
 921:lp_solve_5.5/lp_scale.c ****      ((((lp->scalemode & SCALE_DYNUPDATE) == 0)) || (lp->bb_level > 0)))
 11396               		.loc 1 921 0 discriminator 1
 11397 4fe8 8B89      		ldd r24,Y+19
 11398 4fea 9C89      		ldd r25,Y+20
 11399 4fec 8259      		subi r24,-110
 11400 4fee 9D4F      		sbci r25,-3
 11401 4ff0 FC01      		movw r30,r24
 11402 4ff2 8081      		ld r24,Z
 11403 4ff4 9181      		ldd r25,Z+1
 11404 4ff6 8827      		clr r24
 11405 4ff8 9170      		andi r25,1
 920:lp_solve_5.5/lp_scale.c ****      ((((lp->scalemode & SCALE_DYNUPDATE) == 0)) || (lp->bb_level > 0)))
 11406               		.loc 1 920 0 discriminator 1
 11407 4ffa 892B      		or r24,r25
 11408 4ffc 01F0      		breq .L381
 11409               		.loc 1 921 0
 11410 4ffe 8B89      		ldd r24,Y+19
 11411 5000 9C89      		ldd r25,Y+20
 11412 5002 805D      		subi r24,-48
 11413 5004 9C4F      		sbci r25,-4
 11414 5006 FC01      		movw r30,r24
 11415 5008 8081      		ld r24,Z
 11416 500a 9181      		ldd r25,Z+1
 11417 500c 1816      		cp __zero_reg__,r24
 11418 500e 1906      		cpc __zero_reg__,r25
 11419 5010 04F4      		brge .L380
 11420               	.L381:
 922:lp_solve_5.5/lp_scale.c ****     return( scalingmetric);
 11421               		.loc 1 922 0
 11422 5012 8B81      		ldd r24,Y+3
 11423 5014 9C81      		ldd r25,Y+4
 11424 5016 AD81      		ldd r26,Y+5
 11425 5018 BE81      		ldd r27,Y+6
 11426 501a 00C0      		rjmp .L401
 11427               	.L380:
 923:lp_solve_5.5/lp_scale.c **** 
 924:lp_solve_5.5/lp_scale.c ****   if(lp->scalemode != SCALE_NONE) {
 11428               		.loc 1 924 0
 11429 501c 8B89      		ldd r24,Y+19
 11430 501e 9C89      		ldd r25,Y+20
 11431 5020 8259      		subi r24,-110
 11432 5022 9D4F      		sbci r25,-3
 11433 5024 FC01      		movw r30,r24
 11434 5026 8081      		ld r24,Z
 11435 5028 9181      		ldd r25,Z+1
 11436 502a 892B      		or r24,r25
 11437 502c 01F4      		brne .+2
 11438 502e 00C0      		rjmp .L383
 925:lp_solve_5.5/lp_scale.c **** 
 926:lp_solve_5.5/lp_scale.c ****     /* Allocate array for incremental scaling if appropriate */
 927:lp_solve_5.5/lp_scale.c ****     if((lp->solvecount > 1) && (lp->bb_level < 1) &&
 11439               		.loc 1 927 0
 11440 5030 8B89      		ldd r24,Y+19
 11441 5032 9C89      		ldd r25,Y+20
 11442 5034 805B      		subi r24,-80
 11443 5036 9D4F      		sbci r25,-3
 11444 5038 FC01      		movw r30,r24
 11445 503a 8081      		ld r24,Z
 11446 503c 9181      		ldd r25,Z+1
 11447 503e 0297      		sbiw r24,2
 11448 5040 04F0      		brlt .L384
 11449               		.loc 1 927 0 is_stmt 0 discriminator 1
 11450 5042 8B89      		ldd r24,Y+19
 11451 5044 9C89      		ldd r25,Y+20
 11452 5046 805D      		subi r24,-48
 11453 5048 9C4F      		sbci r25,-4
 11454 504a FC01      		movw r30,r24
 11455 504c 8081      		ld r24,Z
 11456 504e 9181      		ldd r25,Z+1
 11457 5050 1816      		cp __zero_reg__,r24
 11458 5052 1906      		cpc __zero_reg__,r25
 11459 5054 04F0      		brlt .L384
 928:lp_solve_5.5/lp_scale.c ****        ((lp->scalemode & SCALE_DYNUPDATE) != 0))
 11460               		.loc 1 928 0 is_stmt 1 discriminator 2
 11461 5056 8B89      		ldd r24,Y+19
 11462 5058 9C89      		ldd r25,Y+20
 11463 505a 8259      		subi r24,-110
 11464 505c 9D4F      		sbci r25,-3
 11465 505e FC01      		movw r30,r24
 11466 5060 8081      		ld r24,Z
 11467 5062 9181      		ldd r25,Z+1
 11468 5064 8827      		clr r24
 11469 5066 9170      		andi r25,1
 927:lp_solve_5.5/lp_scale.c ****        ((lp->scalemode & SCALE_DYNUPDATE) != 0))
 11470               		.loc 1 927 0 discriminator 2
 11471 5068 892B      		or r24,r25
 11472 506a 01F0      		breq .L384
 929:lp_solve_5.5/lp_scale.c ****       allocREAL(lp, &scalenew, lp->sum + 1, FALSE);
 11473               		.loc 1 929 0
 11474 506c 8B89      		ldd r24,Y+19
 11475 506e 9C89      		ldd r25,Y+20
 11476 5070 8851      		subi r24,24
 11477 5072 9E4F      		sbci r25,-2
 11478 5074 FC01      		movw r30,r24
 11479 5076 8081      		ld r24,Z
 11480 5078 9181      		ldd r25,Z+1
 11481 507a AC01      		movw r20,r24
 11482 507c 4F5F      		subi r20,-1
 11483 507e 5F4F      		sbci r21,-1
 11484 5080 BE01      		movw r22,r28
 11485 5082 6F5E      		subi r22,-17
 11486 5084 7F4F      		sbci r23,-1
 11487 5086 8B89      		ldd r24,Y+19
 11488 5088 9C89      		ldd r25,Y+20
 11489 508a 20E0      		ldi r18,0
 11490 508c 0E94 0000 		call allocREAL
 11491               	.L384:
 930:lp_solve_5.5/lp_scale.c **** 
 931:lp_solve_5.5/lp_scale.c ****     if(is_scaletype(lp, SCALE_CURTISREID)) {
 11492               		.loc 1 931 0
 11493 5090 8B89      		ldd r24,Y+19
 11494 5092 9C89      		ldd r25,Y+20
 11495 5094 67E0      		ldi r22,lo8(7)
 11496 5096 70E0      		ldi r23,0
 11497 5098 0E94 0000 		call is_scaletype
 11498 509c 8823      		tst r24
 11499 509e 01F0      		breq .L385
 932:lp_solve_5.5/lp_scale.c ****       scalingmetric = scaleCR(lp, scalenew);
 11500               		.loc 1 932 0
 11501 50a0 2989      		ldd r18,Y+17
 11502 50a2 3A89      		ldd r19,Y+18
 11503 50a4 8B89      		ldd r24,Y+19
 11504 50a6 9C89      		ldd r25,Y+20
 11505 50a8 B901      		movw r22,r18
 11506 50aa 0E94 0000 		call scaleCR
 11507 50ae 882F      		mov r24,r24
 11508 50b0 90E0      		ldi r25,0
 11509 50b2 A0E0      		ldi r26,0
 11510 50b4 B0E0      		ldi r27,0
 11511 50b6 BC01      		movw r22,r24
 11512 50b8 CD01      		movw r24,r26
 11513 50ba 0E94 0000 		call __floatunsisf
 11514 50be DC01      		movw r26,r24
 11515 50c0 CB01      		movw r24,r22
 11516 50c2 8B83      		std Y+3,r24
 11517 50c4 9C83      		std Y+4,r25
 11518 50c6 AD83      		std Y+5,r26
 11519 50c8 BE83      		std Y+6,r27
 11520 50ca 00C0      		rjmp .L383
 11521               	.L385:
 11522               	.LBB4:
 933:lp_solve_5.5/lp_scale.c ****     }
 934:lp_solve_5.5/lp_scale.c ****     else {
 935:lp_solve_5.5/lp_scale.c ****       REAL scalinglimit, scalingdelta;
 936:lp_solve_5.5/lp_scale.c ****       int  count;
 937:lp_solve_5.5/lp_scale.c **** 
 938:lp_solve_5.5/lp_scale.c ****       /* Integer value of scalelimit holds the maximum number of iterations; default to 1 */
 939:lp_solve_5.5/lp_scale.c ****       count = (int) floor(lp->scalelimit);
 11523               		.loc 1 939 0
 11524 50cc 8B89      		ldd r24,Y+19
 11525 50ce 9C89      		ldd r25,Y+20
 11526 50d0 8659      		subi r24,-106
 11527 50d2 9D4F      		sbci r25,-3
 11528 50d4 FC01      		movw r30,r24
 11529 50d6 8081      		ld r24,Z
 11530 50d8 9181      		ldd r25,Z+1
 11531 50da A281      		ldd r26,Z+2
 11532 50dc B381      		ldd r27,Z+3
 11533 50de BC01      		movw r22,r24
 11534 50e0 CD01      		movw r24,r26
 11535 50e2 0E94 0000 		call floor
 11536 50e6 DC01      		movw r26,r24
 11537 50e8 CB01      		movw r24,r22
 11538 50ea BC01      		movw r22,r24
 11539 50ec CD01      		movw r24,r26
 11540 50ee 0E94 0000 		call __fixsfsi
 11541 50f2 DC01      		movw r26,r24
 11542 50f4 CB01      		movw r24,r22
 11543 50f6 988B      		std Y+16,r25
 11544 50f8 8F87      		std Y+15,r24
 940:lp_solve_5.5/lp_scale.c ****       scalinglimit = lp->scalelimit;
 11545               		.loc 1 940 0
 11546 50fa 8B89      		ldd r24,Y+19
 11547 50fc 9C89      		ldd r25,Y+20
 11548 50fe 8659      		subi r24,-106
 11549 5100 9D4F      		sbci r25,-3
 11550 5102 FC01      		movw r30,r24
 11551 5104 8081      		ld r24,Z
 11552 5106 9181      		ldd r25,Z+1
 11553 5108 A281      		ldd r26,Z+2
 11554 510a B381      		ldd r27,Z+3
 11555 510c 8F83      		std Y+7,r24
 11556 510e 9887      		std Y+8,r25
 11557 5110 A987      		std Y+9,r26
 11558 5112 BA87      		std Y+10,r27
 941:lp_solve_5.5/lp_scale.c ****       if((count == 0) || (scalinglimit == 0)) {
 11559               		.loc 1 941 0
 11560 5114 8F85      		ldd r24,Y+15
 11561 5116 9889      		ldd r25,Y+16
 11562 5118 892B      		or r24,r25
 11563 511a 01F0      		breq .L386
 11564               		.loc 1 941 0 is_stmt 0 discriminator 1
 11565 511c 20E0      		ldi r18,0
 11566 511e 30E0      		ldi r19,0
 11567 5120 A901      		movw r20,r18
 11568 5122 6F81      		ldd r22,Y+7
 11569 5124 7885      		ldd r23,Y+8
 11570 5126 8985      		ldd r24,Y+9
 11571 5128 9A85      		ldd r25,Y+10
 11572 512a 0E94 0000 		call __eqsf2
 11573 512e 8823      		tst r24
 11574 5130 01F4      		brne .L404
 11575               	.L386:
 942:lp_solve_5.5/lp_scale.c ****         if(scalinglimit > 0)
 11576               		.loc 1 942 0 is_stmt 1
 11577 5132 20E0      		ldi r18,0
 11578 5134 30E0      		ldi r19,0
 11579 5136 A901      		movw r20,r18
 11580 5138 6F81      		ldd r22,Y+7
 11581 513a 7885      		ldd r23,Y+8
 11582 513c 8985      		ldd r24,Y+9
 11583 513e 9A85      		ldd r25,Y+10
 11584 5140 0E94 0000 		call __gtsf2
 11585 5144 1816      		cp __zero_reg__,r24
 11586 5146 04F4      		brge .L405
 943:lp_solve_5.5/lp_scale.c ****           count = DEF_SCALINGLIMIT;  /* A non-zero convergence has been given, default to max 5 ite
 11587               		.loc 1 943 0
 11588 5148 85E0      		ldi r24,lo8(5)
 11589 514a 90E0      		ldi r25,0
 11590 514c 988B      		std Y+16,r25
 11591 514e 8F87      		std Y+15,r24
 942:lp_solve_5.5/lp_scale.c ****         if(scalinglimit > 0)
 11592               		.loc 1 942 0
 11593 5150 00C0      		rjmp .L392
 11594               	.L405:
 944:lp_solve_5.5/lp_scale.c ****         else
 945:lp_solve_5.5/lp_scale.c ****           count = 1;
 11595               		.loc 1 945 0
 11596 5152 81E0      		ldi r24,lo8(1)
 11597 5154 90E0      		ldi r25,0
 11598 5156 988B      		std Y+16,r25
 11599 5158 8F87      		std Y+15,r24
 942:lp_solve_5.5/lp_scale.c ****           count = DEF_SCALINGLIMIT;  /* A non-zero convergence has been given, default to max 5 ite
 11600               		.loc 1 942 0
 11601 515a 00C0      		rjmp .L392
 11602               	.L404:
 946:lp_solve_5.5/lp_scale.c ****       }
 947:lp_solve_5.5/lp_scale.c ****       else
 948:lp_solve_5.5/lp_scale.c ****         scalinglimit -= count;
 11603               		.loc 1 948 0
 11604 515c 8F85      		ldd r24,Y+15
 11605 515e 9889      		ldd r25,Y+16
 11606 5160 092E      		mov __tmp_reg__,r25
 11607 5162 000C      		lsl r0
 11608 5164 AA0B      		sbc r26,r26
 11609 5166 BB0B      		sbc r27,r27
 11610 5168 BC01      		movw r22,r24
 11611 516a CD01      		movw r24,r26
 11612 516c 0E94 0000 		call __floatsisf
 11613 5170 DC01      		movw r26,r24
 11614 5172 CB01      		movw r24,r22
 11615 5174 9C01      		movw r18,r24
 11616 5176 AD01      		movw r20,r26
 11617 5178 6F81      		ldd r22,Y+7
 11618 517a 7885      		ldd r23,Y+8
 11619 517c 8985      		ldd r24,Y+9
 11620 517e 9A85      		ldd r25,Y+10
 11621 5180 0E94 0000 		call __subsf3
 11622 5184 DC01      		movw r26,r24
 11623 5186 CB01      		movw r24,r22
 11624 5188 8F83      		std Y+7,r24
 11625 518a 9887      		std Y+8,r25
 11626 518c A987      		std Y+9,r26
 11627 518e BA87      		std Y+10,r27
 11628               	.L392:
 949:lp_solve_5.5/lp_scale.c **** 
 950:lp_solve_5.5/lp_scale.c ****       /* Scale to desired relative convergence or iteration limit */
 951:lp_solve_5.5/lp_scale.c ****       n = 0;
 11629               		.loc 1 951 0
 11630 5190 1A82      		std Y+2,__zero_reg__
 11631 5192 1982      		std Y+1,__zero_reg__
 952:lp_solve_5.5/lp_scale.c ****       scalingdelta = 1.0;
 11632               		.loc 1 952 0
 11633 5194 80E0      		ldi r24,0
 11634 5196 90E0      		ldi r25,0
 11635 5198 A0E8      		ldi r26,lo8(-128)
 11636 519a BFE3      		ldi r27,lo8(63)
 11637 519c 8B87      		std Y+11,r24
 11638 519e 9C87      		std Y+12,r25
 11639 51a0 AD87      		std Y+13,r26
 11640 51a2 BE87      		std Y+14,r27
 953:lp_solve_5.5/lp_scale.c ****       scalingmetric = 1.0;
 11641               		.loc 1 953 0
 11642 51a4 80E0      		ldi r24,0
 11643 51a6 90E0      		ldi r25,0
 11644 51a8 A0E8      		ldi r26,lo8(-128)
 11645 51aa BFE3      		ldi r27,lo8(63)
 11646 51ac 8B83      		std Y+3,r24
 11647 51ae 9C83      		std Y+4,r25
 11648 51b0 AD83      		std Y+5,r26
 11649 51b2 BE83      		std Y+6,r27
 954:lp_solve_5.5/lp_scale.c ****       while((n < count) && (fabs(scalingdelta) > scalinglimit)) {
 11650               		.loc 1 954 0
 11651 51b4 00C0      		rjmp .L393
 11652               	.L395:
 955:lp_solve_5.5/lp_scale.c ****         n++;
 11653               		.loc 1 955 0
 11654 51b6 8981      		ldd r24,Y+1
 11655 51b8 9A81      		ldd r25,Y+2
 11656 51ba 0196      		adiw r24,1
 11657 51bc 9A83      		std Y+2,r25
 11658 51be 8983      		std Y+1,r24
 956:lp_solve_5.5/lp_scale.c ****         scalingdelta = scale(lp, scalenew);
 11659               		.loc 1 956 0
 11660 51c0 2989      		ldd r18,Y+17
 11661 51c2 3A89      		ldd r19,Y+18
 11662 51c4 8B89      		ldd r24,Y+19
 11663 51c6 9C89      		ldd r25,Y+20
 11664 51c8 B901      		movw r22,r18
 11665 51ca 0E94 0000 		call scale
 11666 51ce DC01      		movw r26,r24
 11667 51d0 CB01      		movw r24,r22
 11668 51d2 8B87      		std Y+11,r24
 11669 51d4 9C87      		std Y+12,r25
 11670 51d6 AD87      		std Y+13,r26
 11671 51d8 BE87      		std Y+14,r27
 957:lp_solve_5.5/lp_scale.c ****         scalingmetric = scalingmetric*(1+scalingdelta);
 11672               		.loc 1 957 0
 11673 51da 20E0      		ldi r18,0
 11674 51dc 30E0      		ldi r19,0
 11675 51de 40E8      		ldi r20,lo8(-128)
 11676 51e0 5FE3      		ldi r21,lo8(63)
 11677 51e2 6B85      		ldd r22,Y+11
 11678 51e4 7C85      		ldd r23,Y+12
 11679 51e6 8D85      		ldd r24,Y+13
 11680 51e8 9E85      		ldd r25,Y+14
 11681 51ea 0E94 0000 		call __addsf3
 11682 51ee DC01      		movw r26,r24
 11683 51f0 CB01      		movw r24,r22
 11684 51f2 9C01      		movw r18,r24
 11685 51f4 AD01      		movw r20,r26
 11686 51f6 6B81      		ldd r22,Y+3
 11687 51f8 7C81      		ldd r23,Y+4
 11688 51fa 8D81      		ldd r24,Y+5
 11689 51fc 9E81      		ldd r25,Y+6
 11690 51fe 0E94 0000 		call __mulsf3
 11691 5202 DC01      		movw r26,r24
 11692 5204 CB01      		movw r24,r22
 11693 5206 8B83      		std Y+3,r24
 11694 5208 9C83      		std Y+4,r25
 11695 520a AD83      		std Y+5,r26
 11696 520c BE83      		std Y+6,r27
 11697               	.L393:
 954:lp_solve_5.5/lp_scale.c ****         n++;
 11698               		.loc 1 954 0
 11699 520e 2981      		ldd r18,Y+1
 11700 5210 3A81      		ldd r19,Y+2
 11701 5212 8F85      		ldd r24,Y+15
 11702 5214 9889      		ldd r25,Y+16
 11703 5216 2817      		cp r18,r24
 11704 5218 3907      		cpc r19,r25
 11705 521a 04F4      		brge .L394
 954:lp_solve_5.5/lp_scale.c ****         n++;
 11706               		.loc 1 954 0 is_stmt 0 discriminator 1
 11707 521c 8B85      		ldd r24,Y+11
 11708 521e 9C85      		ldd r25,Y+12
 11709 5220 AD85      		ldd r26,Y+13
 11710 5222 BE85      		ldd r27,Y+14
 11711 5224 BF77      		andi r27,0x7f
 11712 5226 2F81      		ldd r18,Y+7
 11713 5228 3885      		ldd r19,Y+8
 11714 522a 4985      		ldd r20,Y+9
 11715 522c 5A85      		ldd r21,Y+10
 11716 522e BC01      		movw r22,r24
 11717 5230 CD01      		movw r24,r26
 11718 5232 0E94 0000 		call __gtsf2
 11719 5236 1816      		cp __zero_reg__,r24
 11720 5238 04F4      		brge .+2
 11721 523a 00C0      		rjmp .L395
 11722               	.L394:
 958:lp_solve_5.5/lp_scale.c ****       }
 959:lp_solve_5.5/lp_scale.c ****       scalingmetric -= 1;
 11723               		.loc 1 959 0 is_stmt 1
 11724 523c 20E0      		ldi r18,0
 11725 523e 30E0      		ldi r19,0
 11726 5240 40E8      		ldi r20,lo8(-128)
 11727 5242 5FE3      		ldi r21,lo8(63)
 11728 5244 6B81      		ldd r22,Y+3
 11729 5246 7C81      		ldd r23,Y+4
 11730 5248 8D81      		ldd r24,Y+5
 11731 524a 9E81      		ldd r25,Y+6
 11732 524c 0E94 0000 		call __subsf3
 11733 5250 DC01      		movw r26,r24
 11734 5252 CB01      		movw r24,r22
 11735 5254 8B83      		std Y+3,r24
 11736 5256 9C83      		std Y+4,r25
 11737 5258 AD83      		std Y+5,r26
 11738 525a BE83      		std Y+6,r27
 11739               	.L383:
 11740               	.LBE4:
 960:lp_solve_5.5/lp_scale.c ****     }
 961:lp_solve_5.5/lp_scale.c ****   }
 962:lp_solve_5.5/lp_scale.c **** 
 963:lp_solve_5.5/lp_scale.c ****   /* Update the inf norm of the elements of the matrix (excluding the OF) */
 964:lp_solve_5.5/lp_scale.c ****   mat_computemax(lp->matA);
 11741               		.loc 1 964 0
 11742 525c 8B89      		ldd r24,Y+19
 11743 525e 9C89      		ldd r25,Y+20
 11744 5260 8A54      		subi r24,74
 11745 5262 9D4F      		sbci r25,-3
 11746 5264 FC01      		movw r30,r24
 11747 5266 8081      		ld r24,Z
 11748 5268 9181      		ldd r25,Z+1
 11749 526a 0E94 0000 		call mat_computemax
 965:lp_solve_5.5/lp_scale.c **** 
 966:lp_solve_5.5/lp_scale.c ****   /* Check if we really have to do scaling */
 967:lp_solve_5.5/lp_scale.c ****   if(lp->scaling_used && (fabs(scalingmetric) >= lp->epsprimal))
 11750               		.loc 1 967 0
 11751 526e 8B89      		ldd r24,Y+19
 11752 5270 9C89      		ldd r25,Y+20
 11753 5272 8A53      		subi r24,58
 11754 5274 9D4F      		sbci r25,-3
 11755 5276 FC01      		movw r30,r24
 11756 5278 8081      		ld r24,Z
 11757 527a 8823      		tst r24
 11758 527c 01F0      		breq .L396
 11759               		.loc 1 967 0 is_stmt 0 discriminator 1
 11760 527e 8B81      		ldd r24,Y+3
 11761 5280 9C81      		ldd r25,Y+4
 11762 5282 AD81      		ldd r26,Y+5
 11763 5284 BE81      		ldd r27,Y+6
 11764 5286 BF77      		andi r27,0x7f
 11765 5288 2B89      		ldd r18,Y+19
 11766 528a 3C89      		ldd r19,Y+20
 11767 528c 265E      		subi r18,-26
 11768 528e 3C4F      		sbci r19,-4
 11769 5290 F901      		movw r30,r18
 11770 5292 2081      		ld r18,Z
 11771 5294 3181      		ldd r19,Z+1
 11772 5296 4281      		ldd r20,Z+2
 11773 5298 5381      		ldd r21,Z+3
 11774 529a BC01      		movw r22,r24
 11775 529c CD01      		movw r24,r26
 11776 529e 0E94 0000 		call __gesf2
 11777 52a2 8823      		tst r24
 11778 52a4 04F0      		brlt .L396
 968:lp_solve_5.5/lp_scale.c ****     /* Ok, do it */
 969:lp_solve_5.5/lp_scale.c ****     finalize_scaling(lp, scalenew);
 11779               		.loc 1 969 0 is_stmt 1
 11780 52a6 2989      		ldd r18,Y+17
 11781 52a8 3A89      		ldd r19,Y+18
 11782 52aa 8B89      		ldd r24,Y+19
 11783 52ac 9C89      		ldd r25,Y+20
 11784 52ae B901      		movw r22,r18
 11785 52b0 0E94 0000 		call finalize_scaling
 11786 52b4 00C0      		rjmp .L398
 11787               	.L396:
 970:lp_solve_5.5/lp_scale.c **** 
 971:lp_solve_5.5/lp_scale.c ****   else {
 972:lp_solve_5.5/lp_scale.c **** 
 973:lp_solve_5.5/lp_scale.c ****     /* Otherwise reset scaling variables */
 974:lp_solve_5.5/lp_scale.c ****     if(lp->scalars != NULL) {
 11788               		.loc 1 974 0
 11789 52b6 8B89      		ldd r24,Y+19
 11790 52b8 9C89      		ldd r25,Y+20
 11791 52ba 8C53      		subi r24,60
 11792 52bc 9D4F      		sbci r25,-3
 11793 52be FC01      		movw r30,r24
 11794 52c0 8081      		ld r24,Z
 11795 52c2 9181      		ldd r25,Z+1
 11796 52c4 892B      		or r24,r25
 11797 52c6 01F0      		breq .L399
 975:lp_solve_5.5/lp_scale.c ****       FREE(lp->scalars);
 11798               		.loc 1 975 0
 11799 52c8 8B89      		ldd r24,Y+19
 11800 52ca 9C89      		ldd r25,Y+20
 11801 52cc 8C53      		subi r24,60
 11802 52ce 9D4F      		sbci r25,-3
 11803 52d0 FC01      		movw r30,r24
 11804 52d2 8081      		ld r24,Z
 11805 52d4 9181      		ldd r25,Z+1
 11806 52d6 892B      		or r24,r25
 11807 52d8 01F0      		breq .L399
 11808               		.loc 1 975 0 is_stmt 0 discriminator 1
 11809 52da 8B89      		ldd r24,Y+19
 11810 52dc 9C89      		ldd r25,Y+20
 11811 52de 8C53      		subi r24,60
 11812 52e0 9D4F      		sbci r25,-3
 11813 52e2 FC01      		movw r30,r24
 11814 52e4 8081      		ld r24,Z
 11815 52e6 9181      		ldd r25,Z+1
 11816 52e8 0E94 0000 		call free
 11817 52ec 8B89      		ldd r24,Y+19
 11818 52ee 9C89      		ldd r25,Y+20
 11819 52f0 8C53      		subi r24,60
 11820 52f2 9D4F      		sbci r25,-3
 11821 52f4 FC01      		movw r30,r24
 11822 52f6 1182      		std Z+1,__zero_reg__
 11823 52f8 1082      		st Z,__zero_reg__
 11824               	.L399:
 976:lp_solve_5.5/lp_scale.c ****     }
 977:lp_solve_5.5/lp_scale.c ****     lp->scaling_used = FALSE;
 11825               		.loc 1 977 0 is_stmt 1
 11826 52fa 8B89      		ldd r24,Y+19
 11827 52fc 9C89      		ldd r25,Y+20
 11828 52fe 8A53      		subi r24,58
 11829 5300 9D4F      		sbci r25,-3
 11830 5302 FC01      		movw r30,r24
 11831 5304 1082      		st Z,__zero_reg__
 978:lp_solve_5.5/lp_scale.c ****     lp->columns_scaled = FALSE;
 11832               		.loc 1 978 0
 11833 5306 8B89      		ldd r24,Y+19
 11834 5308 9C89      		ldd r25,Y+20
 11835 530a 8953      		subi r24,57
 11836 530c 9D4F      		sbci r25,-3
 11837 530e FC01      		movw r30,r24
 11838 5310 1082      		st Z,__zero_reg__
 11839               	.L398:
 979:lp_solve_5.5/lp_scale.c ****   }
 980:lp_solve_5.5/lp_scale.c ****   if(scalenew != NULL)
 11840               		.loc 1 980 0
 11841 5312 8989      		ldd r24,Y+17
 11842 5314 9A89      		ldd r25,Y+18
 11843 5316 892B      		or r24,r25
 11844 5318 01F0      		breq .L400
 981:lp_solve_5.5/lp_scale.c ****     FREE(scalenew);
 11845               		.loc 1 981 0
 11846 531a 8989      		ldd r24,Y+17
 11847 531c 9A89      		ldd r25,Y+18
 11848 531e 892B      		or r24,r25
 11849 5320 01F0      		breq .L400
 11850               		.loc 1 981 0 is_stmt 0 discriminator 1
 11851 5322 8989      		ldd r24,Y+17
 11852 5324 9A89      		ldd r25,Y+18
 11853 5326 0E94 0000 		call free
 11854 532a 1A8A      		std Y+18,__zero_reg__
 11855 532c 198A      		std Y+17,__zero_reg__
 11856               	.L400:
 982:lp_solve_5.5/lp_scale.c **** 
 983:lp_solve_5.5/lp_scale.c ****   return(scalingmetric);
 11857               		.loc 1 983 0 is_stmt 1
 11858 532e 8B81      		ldd r24,Y+3
 11859 5330 9C81      		ldd r25,Y+4
 11860 5332 AD81      		ldd r26,Y+5
 11861 5334 BE81      		ldd r27,Y+6
 11862               	.L401:
 984:lp_solve_5.5/lp_scale.c **** }
 11863               		.loc 1 984 0 discriminator 1
 11864 5336 BC01      		movw r22,r24
 11865 5338 CD01      		movw r24,r26
 11866               	/* epilogue start */
 11867 533a 6496      		adiw r28,20
 11868 533c 0FB6      		in __tmp_reg__,__SREG__
 11869 533e F894      		cli
 11870 5340 DEBF      		out __SP_H__,r29
 11871 5342 0FBE      		out __SREG__,__tmp_reg__
 11872 5344 CDBF      		out __SP_L__,r28
 11873 5346 DF91      		pop r29
 11874 5348 CF91      		pop r28
 11875 534a 0895      		ret
 11876               		.cfi_endproc
 11877               	.LFE24:
 11879               	.global	unscale_columns
 11881               	unscale_columns:
 11882               	.LFB25:
 985:lp_solve_5.5/lp_scale.c **** 
 986:lp_solve_5.5/lp_scale.c **** STATIC void unscale_columns(lprec *lp)
 987:lp_solve_5.5/lp_scale.c **** {
 11883               		.loc 1 987 0
 11884               		.cfi_startproc
 11885 534c EF92      		push r14
 11886               	.LCFI118:
 11887               		.cfi_def_cfa_offset 3
 11888               		.cfi_offset 14, -2
 11889 534e FF92      		push r15
 11890               	.LCFI119:
 11891               		.cfi_def_cfa_offset 4
 11892               		.cfi_offset 15, -3
 11893 5350 0F93      		push r16
 11894               	.LCFI120:
 11895               		.cfi_def_cfa_offset 5
 11896               		.cfi_offset 16, -4
 11897 5352 1F93      		push r17
 11898               	.LCFI121:
 11899               		.cfi_def_cfa_offset 6
 11900               		.cfi_offset 17, -5
 11901 5354 CF93      		push r28
 11902               	.LCFI122:
 11903               		.cfi_def_cfa_offset 7
 11904               		.cfi_offset 28, -6
 11905 5356 DF93      		push r29
 11906               	.LCFI123:
 11907               		.cfi_def_cfa_offset 8
 11908               		.cfi_offset 29, -7
 11909 5358 CDB7      		in r28,__SP_L__
 11910 535a DEB7      		in r29,__SP_H__
 11911               	.LCFI124:
 11912               		.cfi_def_cfa_register 28
 11913 535c 6097      		sbiw r28,16
 11914               	.LCFI125:
 11915               		.cfi_def_cfa_offset 24
 11916 535e 0FB6      		in __tmp_reg__,__SREG__
 11917 5360 F894      		cli
 11918 5362 DEBF      		out __SP_H__,r29
 11919 5364 0FBE      		out __SREG__,__tmp_reg__
 11920 5366 CDBF      		out __SP_L__,r28
 11921               	/* prologue: function */
 11922               	/* frame size = 16 */
 11923               	/* stack size = 22 */
 11924               	.L__stack_usage = 22
 11925 5368 988B      		std Y+16,r25
 11926 536a 8F87      		std Y+15,r24
 988:lp_solve_5.5/lp_scale.c ****   int     i, j, nz;
 989:lp_solve_5.5/lp_scale.c ****   MATrec  *mat = lp->matA;
 11927               		.loc 1 989 0
 11928 536c 8F85      		ldd r24,Y+15
 11929 536e 9889      		ldd r25,Y+16
 11930 5370 8A54      		subi r24,74
 11931 5372 9D4F      		sbci r25,-3
 11932 5374 FC01      		movw r30,r24
 11933 5376 8081      		ld r24,Z
 11934 5378 9181      		ldd r25,Z+1
 11935 537a 9C87      		std Y+12,r25
 11936 537c 8B87      		std Y+11,r24
 990:lp_solve_5.5/lp_scale.c ****   REAL    *value;
 991:lp_solve_5.5/lp_scale.c ****   int     *rownr, *colnr;
 992:lp_solve_5.5/lp_scale.c **** 
 993:lp_solve_5.5/lp_scale.c ****   if(!lp->columns_scaled)
 11937               		.loc 1 993 0
 11938 537e 8F85      		ldd r24,Y+15
 11939 5380 9889      		ldd r25,Y+16
 11940 5382 8953      		subi r24,57
 11941 5384 9D4F      		sbci r25,-3
 11942 5386 FC01      		movw r30,r24
 11943 5388 8081      		ld r24,Z
 11944 538a 8823      		tst r24
 11945 538c 01F4      		brne .+2
 11946 538e 00C0      		rjmp .L417
 994:lp_solve_5.5/lp_scale.c ****     return;
 995:lp_solve_5.5/lp_scale.c **** 
 996:lp_solve_5.5/lp_scale.c ****   /* Unscale OF */
 997:lp_solve_5.5/lp_scale.c ****   for(j = 1; j <= lp->columns; j++) {
 11947               		.loc 1 997 0
 11948 5390 81E0      		ldi r24,lo8(1)
 11949 5392 90E0      		ldi r25,0
 11950 5394 9C83      		std Y+4,r25
 11951 5396 8B83      		std Y+3,r24
 11952 5398 00C0      		rjmp .L409
 11953               	.L410:
 998:lp_solve_5.5/lp_scale.c ****     lp->orig_obj[j] = unscaled_mat(lp, lp->orig_obj[j], 0, j);
 11954               		.loc 1 998 0 discriminator 3
 11955 539a 8F85      		ldd r24,Y+15
 11956 539c 9889      		ldd r25,Y+16
 11957 539e 845D      		subi r24,-44
 11958 53a0 9D4F      		sbci r25,-3
 11959 53a2 FC01      		movw r30,r24
 11960 53a4 2081      		ld r18,Z
 11961 53a6 3181      		ldd r19,Z+1
 11962 53a8 8B81      		ldd r24,Y+3
 11963 53aa 9C81      		ldd r25,Y+4
 11964 53ac 880F      		lsl r24
 11965 53ae 991F      		rol r25
 11966 53b0 880F      		lsl r24
 11967 53b2 991F      		rol r25
 11968 53b4 7901      		movw r14,r18
 11969 53b6 E80E      		add r14,r24
 11970 53b8 F91E      		adc r15,r25
 11971 53ba 8F85      		ldd r24,Y+15
 11972 53bc 9889      		ldd r25,Y+16
 11973 53be 845D      		subi r24,-44
 11974 53c0 9D4F      		sbci r25,-3
 11975 53c2 FC01      		movw r30,r24
 11976 53c4 2081      		ld r18,Z
 11977 53c6 3181      		ldd r19,Z+1
 11978 53c8 8B81      		ldd r24,Y+3
 11979 53ca 9C81      		ldd r25,Y+4
 11980 53cc 880F      		lsl r24
 11981 53ce 991F      		rol r25
 11982 53d0 880F      		lsl r24
 11983 53d2 991F      		rol r25
 11984 53d4 820F      		add r24,r18
 11985 53d6 931F      		adc r25,r19
 11986 53d8 FC01      		movw r30,r24
 11987 53da 8081      		ld r24,Z
 11988 53dc 9181      		ldd r25,Z+1
 11989 53de A281      		ldd r26,Z+2
 11990 53e0 B381      		ldd r27,Z+3
 11991 53e2 2B81      		ldd r18,Y+3
 11992 53e4 3C81      		ldd r19,Y+4
 11993 53e6 EF85      		ldd r30,Y+15
 11994 53e8 F889      		ldd r31,Y+16
 11995 53ea 8901      		movw r16,r18
 11996 53ec 20E0      		ldi r18,0
 11997 53ee 30E0      		ldi r19,0
 11998 53f0 AC01      		movw r20,r24
 11999 53f2 BD01      		movw r22,r26
 12000 53f4 CF01      		movw r24,r30
 12001 53f6 0E94 0000 		call unscaled_mat
 12002 53fa DC01      		movw r26,r24
 12003 53fc CB01      		movw r24,r22
 12004 53fe F701      		movw r30,r14
 12005 5400 8083      		st Z,r24
 12006 5402 9183      		std Z+1,r25
 12007 5404 A283      		std Z+2,r26
 12008 5406 B383      		std Z+3,r27
 997:lp_solve_5.5/lp_scale.c ****     lp->orig_obj[j] = unscaled_mat(lp, lp->orig_obj[j], 0, j);
 12009               		.loc 1 997 0 discriminator 3
 12010 5408 8B81      		ldd r24,Y+3
 12011 540a 9C81      		ldd r25,Y+4
 12012 540c 0196      		adiw r24,1
 12013 540e 9C83      		std Y+4,r25
 12014 5410 8B83      		std Y+3,r24
 12015               	.L409:
 997:lp_solve_5.5/lp_scale.c ****     lp->orig_obj[j] = unscaled_mat(lp, lp->orig_obj[j], 0, j);
 12016               		.loc 1 997 0 is_stmt 0 discriminator 1
 12017 5412 8F85      		ldd r24,Y+15
 12018 5414 9889      		ldd r25,Y+16
 12019 5416 8451      		subi r24,20
 12020 5418 9E4F      		sbci r25,-2
 12021 541a FC01      		movw r30,r24
 12022 541c 2081      		ld r18,Z
 12023 541e 3181      		ldd r19,Z+1
 12024 5420 8B81      		ldd r24,Y+3
 12025 5422 9C81      		ldd r25,Y+4
 12026 5424 2817      		cp r18,r24
 12027 5426 3907      		cpc r19,r25
 12028 5428 04F0      		brlt .+2
 12029 542a 00C0      		rjmp .L410
 999:lp_solve_5.5/lp_scale.c ****   }
1000:lp_solve_5.5/lp_scale.c **** 
1001:lp_solve_5.5/lp_scale.c ****   /* Unscale mat */
1002:lp_solve_5.5/lp_scale.c ****   mat_validate(mat);
 12030               		.loc 1 1002 0 is_stmt 1
 12031 542c 8B85      		ldd r24,Y+11
 12032 542e 9C85      		ldd r25,Y+12
 12033 5430 0E94 0000 		call mat_validate
1003:lp_solve_5.5/lp_scale.c ****   nz = get_nonzeros(lp);
 12034               		.loc 1 1003 0
 12035 5434 8F85      		ldd r24,Y+15
 12036 5436 9889      		ldd r25,Y+16
 12037 5438 0E94 0000 		call get_nonzeros
 12038 543c 9E87      		std Y+14,r25
 12039 543e 8D87      		std Y+13,r24
1004:lp_solve_5.5/lp_scale.c ****   value = &(COL_MAT_VALUE(0));
 12040               		.loc 1 1004 0
 12041 5440 8B85      		ldd r24,Y+11
 12042 5442 9C85      		ldd r25,Y+12
 12043 5444 FC01      		movw r30,r24
 12044 5446 8089      		ldd r24,Z+16
 12045 5448 9189      		ldd r25,Z+17
 12046 544a 9E83      		std Y+6,r25
 12047 544c 8D83      		std Y+5,r24
1005:lp_solve_5.5/lp_scale.c ****   rownr = &(COL_MAT_ROWNR(0));
 12048               		.loc 1 1005 0
 12049 544e 8B85      		ldd r24,Y+11
 12050 5450 9C85      		ldd r25,Y+12
 12051 5452 FC01      		movw r30,r24
 12052 5454 8685      		ldd r24,Z+14
 12053 5456 9785      		ldd r25,Z+15
 12054 5458 9887      		std Y+8,r25
 12055 545a 8F83      		std Y+7,r24
1006:lp_solve_5.5/lp_scale.c ****   colnr = &(COL_MAT_COLNR(0));
 12056               		.loc 1 1006 0
 12057 545c 8B85      		ldd r24,Y+11
 12058 545e 9C85      		ldd r25,Y+12
 12059 5460 FC01      		movw r30,r24
 12060 5462 8485      		ldd r24,Z+12
 12061 5464 9585      		ldd r25,Z+13
 12062 5466 9A87      		std Y+10,r25
 12063 5468 8987      		std Y+9,r24
1007:lp_solve_5.5/lp_scale.c ****   for(j = 0; j < nz;
 12064               		.loc 1 1007 0
 12065 546a 1C82      		std Y+4,__zero_reg__
 12066 546c 1B82      		std Y+3,__zero_reg__
 12067 546e 00C0      		rjmp .L411
 12068               	.L412:
1008:lp_solve_5.5/lp_scale.c ****       j++, value += matValueStep, rownr += matRowColStep, colnr += matRowColStep) {
1009:lp_solve_5.5/lp_scale.c ****     *value = unscaled_mat(lp, *value, *rownr, *colnr);
 12069               		.loc 1 1009 0
 12070 5470 8985      		ldd r24,Y+9
 12071 5472 9A85      		ldd r25,Y+10
 12072 5474 FC01      		movw r30,r24
 12073 5476 4081      		ld r20,Z
 12074 5478 5181      		ldd r21,Z+1
 12075 547a 8F81      		ldd r24,Y+7
 12076 547c 9885      		ldd r25,Y+8
 12077 547e FC01      		movw r30,r24
 12078 5480 2081      		ld r18,Z
 12079 5482 3181      		ldd r19,Z+1
 12080 5484 8D81      		ldd r24,Y+5
 12081 5486 9E81      		ldd r25,Y+6
 12082 5488 FC01      		movw r30,r24
 12083 548a 8081      		ld r24,Z
 12084 548c 9181      		ldd r25,Z+1
 12085 548e A281      		ldd r26,Z+2
 12086 5490 B381      		ldd r27,Z+3
 12087 5492 EF85      		ldd r30,Y+15
 12088 5494 F889      		ldd r31,Y+16
 12089 5496 8A01      		movw r16,r20
 12090 5498 AC01      		movw r20,r24
 12091 549a BD01      		movw r22,r26
 12092 549c CF01      		movw r24,r30
 12093 549e 0E94 0000 		call unscaled_mat
 12094 54a2 DC01      		movw r26,r24
 12095 54a4 CB01      		movw r24,r22
 12096 54a6 2D81      		ldd r18,Y+5
 12097 54a8 3E81      		ldd r19,Y+6
 12098 54aa F901      		movw r30,r18
 12099 54ac 8083      		st Z,r24
 12100 54ae 9183      		std Z+1,r25
 12101 54b0 A283      		std Z+2,r26
 12102 54b2 B383      		std Z+3,r27
1008:lp_solve_5.5/lp_scale.c ****       j++, value += matValueStep, rownr += matRowColStep, colnr += matRowColStep) {
 12103               		.loc 1 1008 0
 12104 54b4 8B81      		ldd r24,Y+3
 12105 54b6 9C81      		ldd r25,Y+4
 12106 54b8 0196      		adiw r24,1
 12107 54ba 9C83      		std Y+4,r25
 12108 54bc 8B83      		std Y+3,r24
 12109 54be 8D81      		ldd r24,Y+5
 12110 54c0 9E81      		ldd r25,Y+6
 12111 54c2 0496      		adiw r24,4
 12112 54c4 9E83      		std Y+6,r25
 12113 54c6 8D83      		std Y+5,r24
 12114 54c8 8F81      		ldd r24,Y+7
 12115 54ca 9885      		ldd r25,Y+8
 12116 54cc 0296      		adiw r24,2
 12117 54ce 9887      		std Y+8,r25
 12118 54d0 8F83      		std Y+7,r24
 12119 54d2 8985      		ldd r24,Y+9
 12120 54d4 9A85      		ldd r25,Y+10
 12121 54d6 0296      		adiw r24,2
 12122 54d8 9A87      		std Y+10,r25
 12123 54da 8987      		std Y+9,r24
 12124               	.L411:
1007:lp_solve_5.5/lp_scale.c ****   for(j = 0; j < nz;
 12125               		.loc 1 1007 0 discriminator 1
 12126 54dc 2B81      		ldd r18,Y+3
 12127 54de 3C81      		ldd r19,Y+4
 12128 54e0 8D85      		ldd r24,Y+13
 12129 54e2 9E85      		ldd r25,Y+14
 12130 54e4 2817      		cp r18,r24
 12131 54e6 3907      		cpc r19,r25
 12132 54e8 04F0      		brlt .L412
1010:lp_solve_5.5/lp_scale.c ****   }
1011:lp_solve_5.5/lp_scale.c **** 
1012:lp_solve_5.5/lp_scale.c ****   /* Unscale bounds as well */
1013:lp_solve_5.5/lp_scale.c ****   for(i = lp->rows + 1, j = 1; i <= lp->sum; i++, j++) {
 12133               		.loc 1 1013 0
 12134 54ea 8F85      		ldd r24,Y+15
 12135 54ec 9889      		ldd r25,Y+16
 12136 54ee 8651      		subi r24,22
 12137 54f0 9E4F      		sbci r25,-2
 12138 54f2 FC01      		movw r30,r24
 12139 54f4 8081      		ld r24,Z
 12140 54f6 9181      		ldd r25,Z+1
 12141 54f8 0196      		adiw r24,1
 12142 54fa 9A83      		std Y+2,r25
 12143 54fc 8983      		std Y+1,r24
 12144 54fe 81E0      		ldi r24,lo8(1)
 12145 5500 90E0      		ldi r25,0
 12146 5502 9C83      		std Y+4,r25
 12147 5504 8B83      		std Y+3,r24
 12148 5506 00C0      		rjmp .L413
 12149               	.L414:
1014:lp_solve_5.5/lp_scale.c ****     lp->orig_lowbo[i] = unscaled_value(lp, lp->orig_lowbo[i], i);
 12150               		.loc 1 1014 0 discriminator 3
 12151 5508 8F85      		ldd r24,Y+15
 12152 550a 9889      		ldd r25,Y+16
 12153 550c 8E54      		subi r24,78
 12154 550e 9D4F      		sbci r25,-3
 12155 5510 FC01      		movw r30,r24
 12156 5512 2081      		ld r18,Z
 12157 5514 3181      		ldd r19,Z+1
 12158 5516 8981      		ldd r24,Y+1
 12159 5518 9A81      		ldd r25,Y+2
 12160 551a 880F      		lsl r24
 12161 551c 991F      		rol r25
 12162 551e 880F      		lsl r24
 12163 5520 991F      		rol r25
 12164 5522 8901      		movw r16,r18
 12165 5524 080F      		add r16,r24
 12166 5526 191F      		adc r17,r25
 12167 5528 8F85      		ldd r24,Y+15
 12168 552a 9889      		ldd r25,Y+16
 12169 552c 8E54      		subi r24,78
 12170 552e 9D4F      		sbci r25,-3
 12171 5530 FC01      		movw r30,r24
 12172 5532 2081      		ld r18,Z
 12173 5534 3181      		ldd r19,Z+1
 12174 5536 8981      		ldd r24,Y+1
 12175 5538 9A81      		ldd r25,Y+2
 12176 553a 880F      		lsl r24
 12177 553c 991F      		rol r25
 12178 553e 880F      		lsl r24
 12179 5540 991F      		rol r25
 12180 5542 820F      		add r24,r18
 12181 5544 931F      		adc r25,r19
 12182 5546 FC01      		movw r30,r24
 12183 5548 8081      		ld r24,Z
 12184 554a 9181      		ldd r25,Z+1
 12185 554c A281      		ldd r26,Z+2
 12186 554e B381      		ldd r27,Z+3
 12187 5550 2981      		ldd r18,Y+1
 12188 5552 3A81      		ldd r19,Y+2
 12189 5554 EF85      		ldd r30,Y+15
 12190 5556 F889      		ldd r31,Y+16
 12191 5558 AC01      		movw r20,r24
 12192 555a BD01      		movw r22,r26
 12193 555c CF01      		movw r24,r30
 12194 555e 0E94 0000 		call unscaled_value
 12195 5562 DC01      		movw r26,r24
 12196 5564 CB01      		movw r24,r22
 12197 5566 F801      		movw r30,r16
 12198 5568 8083      		st Z,r24
 12199 556a 9183      		std Z+1,r25
 12200 556c A283      		std Z+2,r26
 12201 556e B383      		std Z+3,r27
1015:lp_solve_5.5/lp_scale.c ****     lp->orig_upbo[i]  = unscaled_value(lp, lp->orig_upbo[i], i);
 12202               		.loc 1 1015 0 discriminator 3
 12203 5570 8F85      		ldd r24,Y+15
 12204 5572 9889      		ldd r25,Y+16
 12205 5574 8255      		subi r24,82
 12206 5576 9D4F      		sbci r25,-3
 12207 5578 FC01      		movw r30,r24
 12208 557a 2081      		ld r18,Z
 12209 557c 3181      		ldd r19,Z+1
 12210 557e 8981      		ldd r24,Y+1
 12211 5580 9A81      		ldd r25,Y+2
 12212 5582 880F      		lsl r24
 12213 5584 991F      		rol r25
 12214 5586 880F      		lsl r24
 12215 5588 991F      		rol r25
 12216 558a 8901      		movw r16,r18
 12217 558c 080F      		add r16,r24
 12218 558e 191F      		adc r17,r25
 12219 5590 8F85      		ldd r24,Y+15
 12220 5592 9889      		ldd r25,Y+16
 12221 5594 8255      		subi r24,82
 12222 5596 9D4F      		sbci r25,-3
 12223 5598 FC01      		movw r30,r24
 12224 559a 2081      		ld r18,Z
 12225 559c 3181      		ldd r19,Z+1
 12226 559e 8981      		ldd r24,Y+1
 12227 55a0 9A81      		ldd r25,Y+2
 12228 55a2 880F      		lsl r24
 12229 55a4 991F      		rol r25
 12230 55a6 880F      		lsl r24
 12231 55a8 991F      		rol r25
 12232 55aa 820F      		add r24,r18
 12233 55ac 931F      		adc r25,r19
 12234 55ae FC01      		movw r30,r24
 12235 55b0 8081      		ld r24,Z
 12236 55b2 9181      		ldd r25,Z+1
 12237 55b4 A281      		ldd r26,Z+2
 12238 55b6 B381      		ldd r27,Z+3
 12239 55b8 2981      		ldd r18,Y+1
 12240 55ba 3A81      		ldd r19,Y+2
 12241 55bc EF85      		ldd r30,Y+15
 12242 55be F889      		ldd r31,Y+16
 12243 55c0 AC01      		movw r20,r24
 12244 55c2 BD01      		movw r22,r26
 12245 55c4 CF01      		movw r24,r30
 12246 55c6 0E94 0000 		call unscaled_value
 12247 55ca DC01      		movw r26,r24
 12248 55cc CB01      		movw r24,r22
 12249 55ce F801      		movw r30,r16
 12250 55d0 8083      		st Z,r24
 12251 55d2 9183      		std Z+1,r25
 12252 55d4 A283      		std Z+2,r26
 12253 55d6 B383      		std Z+3,r27
1016:lp_solve_5.5/lp_scale.c ****     lp->sc_lobound[j]  = unscaled_value(lp, lp->sc_lobound[j], i);
 12254               		.loc 1 1016 0 discriminator 3
 12255 55d8 8F85      		ldd r24,Y+15
 12256 55da 9889      		ldd r25,Y+16
 12257 55dc 8E56      		subi r24,110
 12258 55de 9D4F      		sbci r25,-3
 12259 55e0 FC01      		movw r30,r24
 12260 55e2 2081      		ld r18,Z
 12261 55e4 3181      		ldd r19,Z+1
 12262 55e6 8B81      		ldd r24,Y+3
 12263 55e8 9C81      		ldd r25,Y+4
 12264 55ea 880F      		lsl r24
 12265 55ec 991F      		rol r25
 12266 55ee 880F      		lsl r24
 12267 55f0 991F      		rol r25
 12268 55f2 8901      		movw r16,r18
 12269 55f4 080F      		add r16,r24
 12270 55f6 191F      		adc r17,r25
 12271 55f8 8F85      		ldd r24,Y+15
 12272 55fa 9889      		ldd r25,Y+16
 12273 55fc 8E56      		subi r24,110
 12274 55fe 9D4F      		sbci r25,-3
 12275 5600 FC01      		movw r30,r24
 12276 5602 2081      		ld r18,Z
 12277 5604 3181      		ldd r19,Z+1
 12278 5606 8B81      		ldd r24,Y+3
 12279 5608 9C81      		ldd r25,Y+4
 12280 560a 880F      		lsl r24
 12281 560c 991F      		rol r25
 12282 560e 880F      		lsl r24
 12283 5610 991F      		rol r25
 12284 5612 820F      		add r24,r18
 12285 5614 931F      		adc r25,r19
 12286 5616 FC01      		movw r30,r24
 12287 5618 8081      		ld r24,Z
 12288 561a 9181      		ldd r25,Z+1
 12289 561c A281      		ldd r26,Z+2
 12290 561e B381      		ldd r27,Z+3
 12291 5620 2981      		ldd r18,Y+1
 12292 5622 3A81      		ldd r19,Y+2
 12293 5624 EF85      		ldd r30,Y+15
 12294 5626 F889      		ldd r31,Y+16
 12295 5628 AC01      		movw r20,r24
 12296 562a BD01      		movw r22,r26
 12297 562c CF01      		movw r24,r30
 12298 562e 0E94 0000 		call unscaled_value
 12299 5632 DC01      		movw r26,r24
 12300 5634 CB01      		movw r24,r22
 12301 5636 F801      		movw r30,r16
 12302 5638 8083      		st Z,r24
 12303 563a 9183      		std Z+1,r25
 12304 563c A283      		std Z+2,r26
 12305 563e B383      		std Z+3,r27
1013:lp_solve_5.5/lp_scale.c ****     lp->orig_lowbo[i] = unscaled_value(lp, lp->orig_lowbo[i], i);
 12306               		.loc 1 1013 0 discriminator 3
 12307 5640 8981      		ldd r24,Y+1
 12308 5642 9A81      		ldd r25,Y+2
 12309 5644 0196      		adiw r24,1
 12310 5646 9A83      		std Y+2,r25
 12311 5648 8983      		std Y+1,r24
 12312 564a 8B81      		ldd r24,Y+3
 12313 564c 9C81      		ldd r25,Y+4
 12314 564e 0196      		adiw r24,1
 12315 5650 9C83      		std Y+4,r25
 12316 5652 8B83      		std Y+3,r24
 12317               	.L413:
1013:lp_solve_5.5/lp_scale.c ****     lp->orig_lowbo[i] = unscaled_value(lp, lp->orig_lowbo[i], i);
 12318               		.loc 1 1013 0 is_stmt 0 discriminator 1
 12319 5654 8F85      		ldd r24,Y+15
 12320 5656 9889      		ldd r25,Y+16
 12321 5658 8851      		subi r24,24
 12322 565a 9E4F      		sbci r25,-2
 12323 565c FC01      		movw r30,r24
 12324 565e 2081      		ld r18,Z
 12325 5660 3181      		ldd r19,Z+1
 12326 5662 8981      		ldd r24,Y+1
 12327 5664 9A81      		ldd r25,Y+2
 12328 5666 2817      		cp r18,r24
 12329 5668 3907      		cpc r19,r25
 12330 566a 04F0      		brlt .+2
 12331 566c 00C0      		rjmp .L414
1017:lp_solve_5.5/lp_scale.c ****   }
1018:lp_solve_5.5/lp_scale.c **** 
1019:lp_solve_5.5/lp_scale.c ****   for(i = lp->rows + 1; i<= lp->sum; i++)
 12332               		.loc 1 1019 0 is_stmt 1
 12333 566e 8F85      		ldd r24,Y+15
 12334 5670 9889      		ldd r25,Y+16
 12335 5672 8651      		subi r24,22
 12336 5674 9E4F      		sbci r25,-2
 12337 5676 FC01      		movw r30,r24
 12338 5678 8081      		ld r24,Z
 12339 567a 9181      		ldd r25,Z+1
 12340 567c 0196      		adiw r24,1
 12341 567e 9A83      		std Y+2,r25
 12342 5680 8983      		std Y+1,r24
 12343 5682 00C0      		rjmp .L415
 12344               	.L416:
1020:lp_solve_5.5/lp_scale.c ****     lp->scalars[i] = 1;
 12345               		.loc 1 1020 0 discriminator 3
 12346 5684 8F85      		ldd r24,Y+15
 12347 5686 9889      		ldd r25,Y+16
 12348 5688 8C53      		subi r24,60
 12349 568a 9D4F      		sbci r25,-3
 12350 568c FC01      		movw r30,r24
 12351 568e 2081      		ld r18,Z
 12352 5690 3181      		ldd r19,Z+1
 12353 5692 8981      		ldd r24,Y+1
 12354 5694 9A81      		ldd r25,Y+2
 12355 5696 880F      		lsl r24
 12356 5698 991F      		rol r25
 12357 569a 880F      		lsl r24
 12358 569c 991F      		rol r25
 12359 569e 280F      		add r18,r24
 12360 56a0 391F      		adc r19,r25
 12361 56a2 80E0      		ldi r24,0
 12362 56a4 90E0      		ldi r25,0
 12363 56a6 A0E8      		ldi r26,lo8(-128)
 12364 56a8 BFE3      		ldi r27,lo8(63)
 12365 56aa F901      		movw r30,r18
 12366 56ac 8083      		st Z,r24
 12367 56ae 9183      		std Z+1,r25
 12368 56b0 A283      		std Z+2,r26
 12369 56b2 B383      		std Z+3,r27
1019:lp_solve_5.5/lp_scale.c ****     lp->scalars[i] = 1;
 12370               		.loc 1 1019 0 discriminator 3
 12371 56b4 8981      		ldd r24,Y+1
 12372 56b6 9A81      		ldd r25,Y+2
 12373 56b8 0196      		adiw r24,1
 12374 56ba 9A83      		std Y+2,r25
 12375 56bc 8983      		std Y+1,r24
 12376               	.L415:
1019:lp_solve_5.5/lp_scale.c ****     lp->scalars[i] = 1;
 12377               		.loc 1 1019 0 is_stmt 0 discriminator 1
 12378 56be 8F85      		ldd r24,Y+15
 12379 56c0 9889      		ldd r25,Y+16
 12380 56c2 8851      		subi r24,24
 12381 56c4 9E4F      		sbci r25,-2
 12382 56c6 FC01      		movw r30,r24
 12383 56c8 2081      		ld r18,Z
 12384 56ca 3181      		ldd r19,Z+1
 12385 56cc 8981      		ldd r24,Y+1
 12386 56ce 9A81      		ldd r25,Y+2
 12387 56d0 2817      		cp r18,r24
 12388 56d2 3907      		cpc r19,r25
 12389 56d4 04F4      		brge .L416
1021:lp_solve_5.5/lp_scale.c **** 
1022:lp_solve_5.5/lp_scale.c ****   lp->columns_scaled = FALSE;
 12390               		.loc 1 1022 0 is_stmt 1
 12391 56d6 8F85      		ldd r24,Y+15
 12392 56d8 9889      		ldd r25,Y+16
 12393 56da 8953      		subi r24,57
 12394 56dc 9D4F      		sbci r25,-3
 12395 56de FC01      		movw r30,r24
 12396 56e0 1082      		st Z,__zero_reg__
1023:lp_solve_5.5/lp_scale.c ****   set_action(&lp->spx_action, ACTION_REBASE | ACTION_REINVERT | ACTION_RECOMPUTE);
 12397               		.loc 1 1023 0
 12398 56e2 8F85      		ldd r24,Y+15
 12399 56e4 9889      		ldd r25,Y+16
 12400 56e6 8E50      		subi r24,14
 12401 56e8 9D4F      		sbci r25,-3
 12402 56ea 66E1      		ldi r22,lo8(22)
 12403 56ec 70E0      		ldi r23,0
 12404 56ee 0E94 0000 		call set_action
 12405 56f2 00C0      		rjmp .L406
 12406               	.L417:
 994:lp_solve_5.5/lp_scale.c **** 
 12407               		.loc 1 994 0
 12408 56f4 0000      		nop
 12409               	.L406:
 12410               	/* epilogue start */
1024:lp_solve_5.5/lp_scale.c **** }
 12411               		.loc 1 1024 0
 12412 56f6 6096      		adiw r28,16
 12413 56f8 0FB6      		in __tmp_reg__,__SREG__
 12414 56fa F894      		cli
 12415 56fc DEBF      		out __SP_H__,r29
 12416 56fe 0FBE      		out __SREG__,__tmp_reg__
 12417 5700 CDBF      		out __SP_L__,r28
 12418 5702 DF91      		pop r29
 12419 5704 CF91      		pop r28
 12420 5706 1F91      		pop r17
 12421 5708 0F91      		pop r16
 12422 570a FF90      		pop r15
 12423 570c EF90      		pop r14
 12424 570e 0895      		ret
 12425               		.cfi_endproc
 12426               	.LFE25:
 12428               	.global	undoscale
 12430               	undoscale:
 12431               	.LFB26:
1025:lp_solve_5.5/lp_scale.c **** 
1026:lp_solve_5.5/lp_scale.c **** void undoscale(lprec *lp)
1027:lp_solve_5.5/lp_scale.c **** {
 12432               		.loc 1 1027 0
 12433               		.cfi_startproc
 12434 5710 EF92      		push r14
 12435               	.LCFI126:
 12436               		.cfi_def_cfa_offset 3
 12437               		.cfi_offset 14, -2
 12438 5712 FF92      		push r15
 12439               	.LCFI127:
 12440               		.cfi_def_cfa_offset 4
 12441               		.cfi_offset 15, -3
 12442 5714 0F93      		push r16
 12443               	.LCFI128:
 12444               		.cfi_def_cfa_offset 5
 12445               		.cfi_offset 16, -4
 12446 5716 1F93      		push r17
 12447               	.LCFI129:
 12448               		.cfi_def_cfa_offset 6
 12449               		.cfi_offset 17, -5
 12450 5718 CF93      		push r28
 12451               	.LCFI130:
 12452               		.cfi_def_cfa_offset 7
 12453               		.cfi_offset 28, -6
 12454 571a DF93      		push r29
 12455               	.LCFI131:
 12456               		.cfi_def_cfa_offset 8
 12457               		.cfi_offset 29, -7
 12458 571c CDB7      		in r28,__SP_L__
 12459 571e DEB7      		in r29,__SP_H__
 12460               	.LCFI132:
 12461               		.cfi_def_cfa_register 28
 12462 5720 6097      		sbiw r28,16
 12463               	.LCFI133:
 12464               		.cfi_def_cfa_offset 24
 12465 5722 0FB6      		in __tmp_reg__,__SREG__
 12466 5724 F894      		cli
 12467 5726 DEBF      		out __SP_H__,r29
 12468 5728 0FBE      		out __SREG__,__tmp_reg__
 12469 572a CDBF      		out __SP_L__,r28
 12470               	/* prologue: function */
 12471               	/* frame size = 16 */
 12472               	/* stack size = 22 */
 12473               	.L__stack_usage = 22
 12474 572c 988B      		std Y+16,r25
 12475 572e 8F87      		std Y+15,r24
1028:lp_solve_5.5/lp_scale.c ****   int     i, j, nz;
1029:lp_solve_5.5/lp_scale.c ****   MATrec  *mat = lp->matA;
 12476               		.loc 1 1029 0
 12477 5730 8F85      		ldd r24,Y+15
 12478 5732 9889      		ldd r25,Y+16
 12479 5734 8A54      		subi r24,74
 12480 5736 9D4F      		sbci r25,-3
 12481 5738 FC01      		movw r30,r24
 12482 573a 8081      		ld r24,Z
 12483 573c 9181      		ldd r25,Z+1
 12484 573e 9C87      		std Y+12,r25
 12485 5740 8B87      		std Y+11,r24
1030:lp_solve_5.5/lp_scale.c ****   REAL    *value;
1031:lp_solve_5.5/lp_scale.c ****   int     *rownr, *colnr;
1032:lp_solve_5.5/lp_scale.c **** 
1033:lp_solve_5.5/lp_scale.c ****   if(lp->scaling_used) {
 12486               		.loc 1 1033 0
 12487 5742 8F85      		ldd r24,Y+15
 12488 5744 9889      		ldd r25,Y+16
 12489 5746 8A53      		subi r24,58
 12490 5748 9D4F      		sbci r25,-3
 12491 574a FC01      		movw r30,r24
 12492 574c 8081      		ld r24,Z
 12493 574e 8823      		tst r24
 12494 5750 01F4      		brne .+2
 12495 5752 00C0      		rjmp .L430
1034:lp_solve_5.5/lp_scale.c **** 
1035:lp_solve_5.5/lp_scale.c ****     /* Unscale the OF */
1036:lp_solve_5.5/lp_scale.c ****     for(j = 1; j <= lp->columns; j++) {
 12496               		.loc 1 1036 0
 12497 5754 81E0      		ldi r24,lo8(1)
 12498 5756 90E0      		ldi r25,0
 12499 5758 9C83      		std Y+4,r25
 12500 575a 8B83      		std Y+3,r24
 12501 575c 00C0      		rjmp .L420
 12502               	.L421:
1037:lp_solve_5.5/lp_scale.c ****       lp->orig_obj[j] = unscaled_mat(lp, lp->orig_obj[j], 0, j);
 12503               		.loc 1 1037 0 discriminator 3
 12504 575e 8F85      		ldd r24,Y+15
 12505 5760 9889      		ldd r25,Y+16
 12506 5762 845D      		subi r24,-44
 12507 5764 9D4F      		sbci r25,-3
 12508 5766 FC01      		movw r30,r24
 12509 5768 2081      		ld r18,Z
 12510 576a 3181      		ldd r19,Z+1
 12511 576c 8B81      		ldd r24,Y+3
 12512 576e 9C81      		ldd r25,Y+4
 12513 5770 880F      		lsl r24
 12514 5772 991F      		rol r25
 12515 5774 880F      		lsl r24
 12516 5776 991F      		rol r25
 12517 5778 7901      		movw r14,r18
 12518 577a E80E      		add r14,r24
 12519 577c F91E      		adc r15,r25
 12520 577e 8F85      		ldd r24,Y+15
 12521 5780 9889      		ldd r25,Y+16
 12522 5782 845D      		subi r24,-44
 12523 5784 9D4F      		sbci r25,-3
 12524 5786 FC01      		movw r30,r24
 12525 5788 2081      		ld r18,Z
 12526 578a 3181      		ldd r19,Z+1
 12527 578c 8B81      		ldd r24,Y+3
 12528 578e 9C81      		ldd r25,Y+4
 12529 5790 880F      		lsl r24
 12530 5792 991F      		rol r25
 12531 5794 880F      		lsl r24
 12532 5796 991F      		rol r25
 12533 5798 820F      		add r24,r18
 12534 579a 931F      		adc r25,r19
 12535 579c FC01      		movw r30,r24
 12536 579e 8081      		ld r24,Z
 12537 57a0 9181      		ldd r25,Z+1
 12538 57a2 A281      		ldd r26,Z+2
 12539 57a4 B381      		ldd r27,Z+3
 12540 57a6 2B81      		ldd r18,Y+3
 12541 57a8 3C81      		ldd r19,Y+4
 12542 57aa EF85      		ldd r30,Y+15
 12543 57ac F889      		ldd r31,Y+16
 12544 57ae 8901      		movw r16,r18
 12545 57b0 20E0      		ldi r18,0
 12546 57b2 30E0      		ldi r19,0
 12547 57b4 AC01      		movw r20,r24
 12548 57b6 BD01      		movw r22,r26
 12549 57b8 CF01      		movw r24,r30
 12550 57ba 0E94 0000 		call unscaled_mat
 12551 57be DC01      		movw r26,r24
 12552 57c0 CB01      		movw r24,r22
 12553 57c2 F701      		movw r30,r14
 12554 57c4 8083      		st Z,r24
 12555 57c6 9183      		std Z+1,r25
 12556 57c8 A283      		std Z+2,r26
 12557 57ca B383      		std Z+3,r27
1036:lp_solve_5.5/lp_scale.c ****       lp->orig_obj[j] = unscaled_mat(lp, lp->orig_obj[j], 0, j);
 12558               		.loc 1 1036 0 discriminator 3
 12559 57cc 8B81      		ldd r24,Y+3
 12560 57ce 9C81      		ldd r25,Y+4
 12561 57d0 0196      		adiw r24,1
 12562 57d2 9C83      		std Y+4,r25
 12563 57d4 8B83      		std Y+3,r24
 12564               	.L420:
1036:lp_solve_5.5/lp_scale.c ****       lp->orig_obj[j] = unscaled_mat(lp, lp->orig_obj[j], 0, j);
 12565               		.loc 1 1036 0 is_stmt 0 discriminator 1
 12566 57d6 8F85      		ldd r24,Y+15
 12567 57d8 9889      		ldd r25,Y+16
 12568 57da 8451      		subi r24,20
 12569 57dc 9E4F      		sbci r25,-2
 12570 57de FC01      		movw r30,r24
 12571 57e0 2081      		ld r18,Z
 12572 57e2 3181      		ldd r19,Z+1
 12573 57e4 8B81      		ldd r24,Y+3
 12574 57e6 9C81      		ldd r25,Y+4
 12575 57e8 2817      		cp r18,r24
 12576 57ea 3907      		cpc r19,r25
 12577 57ec 04F0      		brlt .+2
 12578 57ee 00C0      		rjmp .L421
1038:lp_solve_5.5/lp_scale.c ****     }
1039:lp_solve_5.5/lp_scale.c **** 
1040:lp_solve_5.5/lp_scale.c ****     /* Unscale the matrix */
1041:lp_solve_5.5/lp_scale.c ****     mat_validate(mat);
 12579               		.loc 1 1041 0 is_stmt 1
 12580 57f0 8B85      		ldd r24,Y+11
 12581 57f2 9C85      		ldd r25,Y+12
 12582 57f4 0E94 0000 		call mat_validate
1042:lp_solve_5.5/lp_scale.c ****     nz = get_nonzeros(lp);
 12583               		.loc 1 1042 0
 12584 57f8 8F85      		ldd r24,Y+15
 12585 57fa 9889      		ldd r25,Y+16
 12586 57fc 0E94 0000 		call get_nonzeros
 12587 5800 9E87      		std Y+14,r25
 12588 5802 8D87      		std Y+13,r24
1043:lp_solve_5.5/lp_scale.c ****     value = &(COL_MAT_VALUE(0));
 12589               		.loc 1 1043 0
 12590 5804 8B85      		ldd r24,Y+11
 12591 5806 9C85      		ldd r25,Y+12
 12592 5808 FC01      		movw r30,r24
 12593 580a 8089      		ldd r24,Z+16
 12594 580c 9189      		ldd r25,Z+17
 12595 580e 9E83      		std Y+6,r25
 12596 5810 8D83      		std Y+5,r24
1044:lp_solve_5.5/lp_scale.c ****     rownr = &(COL_MAT_ROWNR(0));
 12597               		.loc 1 1044 0
 12598 5812 8B85      		ldd r24,Y+11
 12599 5814 9C85      		ldd r25,Y+12
 12600 5816 FC01      		movw r30,r24
 12601 5818 8685      		ldd r24,Z+14
 12602 581a 9785      		ldd r25,Z+15
 12603 581c 9887      		std Y+8,r25
 12604 581e 8F83      		std Y+7,r24
1045:lp_solve_5.5/lp_scale.c ****     colnr = &(COL_MAT_COLNR(0));
 12605               		.loc 1 1045 0
 12606 5820 8B85      		ldd r24,Y+11
 12607 5822 9C85      		ldd r25,Y+12
 12608 5824 FC01      		movw r30,r24
 12609 5826 8485      		ldd r24,Z+12
 12610 5828 9585      		ldd r25,Z+13
 12611 582a 9A87      		std Y+10,r25
 12612 582c 8987      		std Y+9,r24
1046:lp_solve_5.5/lp_scale.c ****     for(j = 0; j < nz;
 12613               		.loc 1 1046 0
 12614 582e 1C82      		std Y+4,__zero_reg__
 12615 5830 1B82      		std Y+3,__zero_reg__
 12616 5832 00C0      		rjmp .L422
 12617               	.L423:
1047:lp_solve_5.5/lp_scale.c ****         j++, value += matValueStep, rownr += matRowColStep, colnr += matRowColStep) {
1048:lp_solve_5.5/lp_scale.c ****       *value = unscaled_mat(lp, *value, *rownr, *colnr);
 12618               		.loc 1 1048 0
 12619 5834 8985      		ldd r24,Y+9
 12620 5836 9A85      		ldd r25,Y+10
 12621 5838 FC01      		movw r30,r24
 12622 583a 4081      		ld r20,Z
 12623 583c 5181      		ldd r21,Z+1
 12624 583e 8F81      		ldd r24,Y+7
 12625 5840 9885      		ldd r25,Y+8
 12626 5842 FC01      		movw r30,r24
 12627 5844 2081      		ld r18,Z
 12628 5846 3181      		ldd r19,Z+1
 12629 5848 8D81      		ldd r24,Y+5
 12630 584a 9E81      		ldd r25,Y+6
 12631 584c FC01      		movw r30,r24
 12632 584e 8081      		ld r24,Z
 12633 5850 9181      		ldd r25,Z+1
 12634 5852 A281      		ldd r26,Z+2
 12635 5854 B381      		ldd r27,Z+3
 12636 5856 EF85      		ldd r30,Y+15
 12637 5858 F889      		ldd r31,Y+16
 12638 585a 8A01      		movw r16,r20
 12639 585c AC01      		movw r20,r24
 12640 585e BD01      		movw r22,r26
 12641 5860 CF01      		movw r24,r30
 12642 5862 0E94 0000 		call unscaled_mat
 12643 5866 DC01      		movw r26,r24
 12644 5868 CB01      		movw r24,r22
 12645 586a 2D81      		ldd r18,Y+5
 12646 586c 3E81      		ldd r19,Y+6
 12647 586e F901      		movw r30,r18
 12648 5870 8083      		st Z,r24
 12649 5872 9183      		std Z+1,r25
 12650 5874 A283      		std Z+2,r26
 12651 5876 B383      		std Z+3,r27
1047:lp_solve_5.5/lp_scale.c ****         j++, value += matValueStep, rownr += matRowColStep, colnr += matRowColStep) {
 12652               		.loc 1 1047 0
 12653 5878 8B81      		ldd r24,Y+3
 12654 587a 9C81      		ldd r25,Y+4
 12655 587c 0196      		adiw r24,1
 12656 587e 9C83      		std Y+4,r25
 12657 5880 8B83      		std Y+3,r24
 12658 5882 8D81      		ldd r24,Y+5
 12659 5884 9E81      		ldd r25,Y+6
 12660 5886 0496      		adiw r24,4
 12661 5888 9E83      		std Y+6,r25
 12662 588a 8D83      		std Y+5,r24
 12663 588c 8F81      		ldd r24,Y+7
 12664 588e 9885      		ldd r25,Y+8
 12665 5890 0296      		adiw r24,2
 12666 5892 9887      		std Y+8,r25
 12667 5894 8F83      		std Y+7,r24
 12668 5896 8985      		ldd r24,Y+9
 12669 5898 9A85      		ldd r25,Y+10
 12670 589a 0296      		adiw r24,2
 12671 589c 9A87      		std Y+10,r25
 12672 589e 8987      		std Y+9,r24
 12673               	.L422:
1046:lp_solve_5.5/lp_scale.c ****     for(j = 0; j < nz;
 12674               		.loc 1 1046 0 discriminator 1
 12675 58a0 2B81      		ldd r18,Y+3
 12676 58a2 3C81      		ldd r19,Y+4
 12677 58a4 8D85      		ldd r24,Y+13
 12678 58a6 9E85      		ldd r25,Y+14
 12679 58a8 2817      		cp r18,r24
 12680 58aa 3907      		cpc r19,r25
 12681 58ac 04F0      		brlt .L423
1049:lp_solve_5.5/lp_scale.c ****     }
1050:lp_solve_5.5/lp_scale.c **** 
1051:lp_solve_5.5/lp_scale.c ****     /* Unscale variable bounds */
1052:lp_solve_5.5/lp_scale.c ****     for(i = lp->rows + 1, j = 1; i <= lp->sum; i++, j++) {
 12682               		.loc 1 1052 0
 12683 58ae 8F85      		ldd r24,Y+15
 12684 58b0 9889      		ldd r25,Y+16
 12685 58b2 8651      		subi r24,22
 12686 58b4 9E4F      		sbci r25,-2
 12687 58b6 FC01      		movw r30,r24
 12688 58b8 8081      		ld r24,Z
 12689 58ba 9181      		ldd r25,Z+1
 12690 58bc 0196      		adiw r24,1
 12691 58be 9A83      		std Y+2,r25
 12692 58c0 8983      		std Y+1,r24
 12693 58c2 81E0      		ldi r24,lo8(1)
 12694 58c4 90E0      		ldi r25,0
 12695 58c6 9C83      		std Y+4,r25
 12696 58c8 8B83      		std Y+3,r24
 12697 58ca 00C0      		rjmp .L424
 12698               	.L425:
1053:lp_solve_5.5/lp_scale.c ****       lp->orig_lowbo[i] = unscaled_value(lp, lp->orig_lowbo[i], i);
 12699               		.loc 1 1053 0 discriminator 3
 12700 58cc 8F85      		ldd r24,Y+15
 12701 58ce 9889      		ldd r25,Y+16
 12702 58d0 8E54      		subi r24,78
 12703 58d2 9D4F      		sbci r25,-3
 12704 58d4 FC01      		movw r30,r24
 12705 58d6 2081      		ld r18,Z
 12706 58d8 3181      		ldd r19,Z+1
 12707 58da 8981      		ldd r24,Y+1
 12708 58dc 9A81      		ldd r25,Y+2
 12709 58de 880F      		lsl r24
 12710 58e0 991F      		rol r25
 12711 58e2 880F      		lsl r24
 12712 58e4 991F      		rol r25
 12713 58e6 8901      		movw r16,r18
 12714 58e8 080F      		add r16,r24
 12715 58ea 191F      		adc r17,r25
 12716 58ec 8F85      		ldd r24,Y+15
 12717 58ee 9889      		ldd r25,Y+16
 12718 58f0 8E54      		subi r24,78
 12719 58f2 9D4F      		sbci r25,-3
 12720 58f4 FC01      		movw r30,r24
 12721 58f6 2081      		ld r18,Z
 12722 58f8 3181      		ldd r19,Z+1
 12723 58fa 8981      		ldd r24,Y+1
 12724 58fc 9A81      		ldd r25,Y+2
 12725 58fe 880F      		lsl r24
 12726 5900 991F      		rol r25
 12727 5902 880F      		lsl r24
 12728 5904 991F      		rol r25
 12729 5906 820F      		add r24,r18
 12730 5908 931F      		adc r25,r19
 12731 590a FC01      		movw r30,r24
 12732 590c 8081      		ld r24,Z
 12733 590e 9181      		ldd r25,Z+1
 12734 5910 A281      		ldd r26,Z+2
 12735 5912 B381      		ldd r27,Z+3
 12736 5914 2981      		ldd r18,Y+1
 12737 5916 3A81      		ldd r19,Y+2
 12738 5918 EF85      		ldd r30,Y+15
 12739 591a F889      		ldd r31,Y+16
 12740 591c AC01      		movw r20,r24
 12741 591e BD01      		movw r22,r26
 12742 5920 CF01      		movw r24,r30
 12743 5922 0E94 0000 		call unscaled_value
 12744 5926 DC01      		movw r26,r24
 12745 5928 CB01      		movw r24,r22
 12746 592a F801      		movw r30,r16
 12747 592c 8083      		st Z,r24
 12748 592e 9183      		std Z+1,r25
 12749 5930 A283      		std Z+2,r26
 12750 5932 B383      		std Z+3,r27
1054:lp_solve_5.5/lp_scale.c ****       lp->orig_upbo[i]  = unscaled_value(lp, lp->orig_upbo[i], i);
 12751               		.loc 1 1054 0 discriminator 3
 12752 5934 8F85      		ldd r24,Y+15
 12753 5936 9889      		ldd r25,Y+16
 12754 5938 8255      		subi r24,82
 12755 593a 9D4F      		sbci r25,-3
 12756 593c FC01      		movw r30,r24
 12757 593e 2081      		ld r18,Z
 12758 5940 3181      		ldd r19,Z+1
 12759 5942 8981      		ldd r24,Y+1
 12760 5944 9A81      		ldd r25,Y+2
 12761 5946 880F      		lsl r24
 12762 5948 991F      		rol r25
 12763 594a 880F      		lsl r24
 12764 594c 991F      		rol r25
 12765 594e 8901      		movw r16,r18
 12766 5950 080F      		add r16,r24
 12767 5952 191F      		adc r17,r25
 12768 5954 8F85      		ldd r24,Y+15
 12769 5956 9889      		ldd r25,Y+16
 12770 5958 8255      		subi r24,82
 12771 595a 9D4F      		sbci r25,-3
 12772 595c FC01      		movw r30,r24
 12773 595e 2081      		ld r18,Z
 12774 5960 3181      		ldd r19,Z+1
 12775 5962 8981      		ldd r24,Y+1
 12776 5964 9A81      		ldd r25,Y+2
 12777 5966 880F      		lsl r24
 12778 5968 991F      		rol r25
 12779 596a 880F      		lsl r24
 12780 596c 991F      		rol r25
 12781 596e 820F      		add r24,r18
 12782 5970 931F      		adc r25,r19
 12783 5972 FC01      		movw r30,r24
 12784 5974 8081      		ld r24,Z
 12785 5976 9181      		ldd r25,Z+1
 12786 5978 A281      		ldd r26,Z+2
 12787 597a B381      		ldd r27,Z+3
 12788 597c 2981      		ldd r18,Y+1
 12789 597e 3A81      		ldd r19,Y+2
 12790 5980 EF85      		ldd r30,Y+15
 12791 5982 F889      		ldd r31,Y+16
 12792 5984 AC01      		movw r20,r24
 12793 5986 BD01      		movw r22,r26
 12794 5988 CF01      		movw r24,r30
 12795 598a 0E94 0000 		call unscaled_value
 12796 598e DC01      		movw r26,r24
 12797 5990 CB01      		movw r24,r22
 12798 5992 F801      		movw r30,r16
 12799 5994 8083      		st Z,r24
 12800 5996 9183      		std Z+1,r25
 12801 5998 A283      		std Z+2,r26
 12802 599a B383      		std Z+3,r27
1055:lp_solve_5.5/lp_scale.c ****       lp->sc_lobound[j]  = unscaled_value(lp, lp->sc_lobound[j], i);
 12803               		.loc 1 1055 0 discriminator 3
 12804 599c 8F85      		ldd r24,Y+15
 12805 599e 9889      		ldd r25,Y+16
 12806 59a0 8E56      		subi r24,110
 12807 59a2 9D4F      		sbci r25,-3
 12808 59a4 FC01      		movw r30,r24
 12809 59a6 2081      		ld r18,Z
 12810 59a8 3181      		ldd r19,Z+1
 12811 59aa 8B81      		ldd r24,Y+3
 12812 59ac 9C81      		ldd r25,Y+4
 12813 59ae 880F      		lsl r24
 12814 59b0 991F      		rol r25
 12815 59b2 880F      		lsl r24
 12816 59b4 991F      		rol r25
 12817 59b6 8901      		movw r16,r18
 12818 59b8 080F      		add r16,r24
 12819 59ba 191F      		adc r17,r25
 12820 59bc 8F85      		ldd r24,Y+15
 12821 59be 9889      		ldd r25,Y+16
 12822 59c0 8E56      		subi r24,110
 12823 59c2 9D4F      		sbci r25,-3
 12824 59c4 FC01      		movw r30,r24
 12825 59c6 2081      		ld r18,Z
 12826 59c8 3181      		ldd r19,Z+1
 12827 59ca 8B81      		ldd r24,Y+3
 12828 59cc 9C81      		ldd r25,Y+4
 12829 59ce 880F      		lsl r24
 12830 59d0 991F      		rol r25
 12831 59d2 880F      		lsl r24
 12832 59d4 991F      		rol r25
 12833 59d6 820F      		add r24,r18
 12834 59d8 931F      		adc r25,r19
 12835 59da FC01      		movw r30,r24
 12836 59dc 8081      		ld r24,Z
 12837 59de 9181      		ldd r25,Z+1
 12838 59e0 A281      		ldd r26,Z+2
 12839 59e2 B381      		ldd r27,Z+3
 12840 59e4 2981      		ldd r18,Y+1
 12841 59e6 3A81      		ldd r19,Y+2
 12842 59e8 EF85      		ldd r30,Y+15
 12843 59ea F889      		ldd r31,Y+16
 12844 59ec AC01      		movw r20,r24
 12845 59ee BD01      		movw r22,r26
 12846 59f0 CF01      		movw r24,r30
 12847 59f2 0E94 0000 		call unscaled_value
 12848 59f6 DC01      		movw r26,r24
 12849 59f8 CB01      		movw r24,r22
 12850 59fa F801      		movw r30,r16
 12851 59fc 8083      		st Z,r24
 12852 59fe 9183      		std Z+1,r25
 12853 5a00 A283      		std Z+2,r26
 12854 5a02 B383      		std Z+3,r27
1052:lp_solve_5.5/lp_scale.c ****       lp->orig_lowbo[i] = unscaled_value(lp, lp->orig_lowbo[i], i);
 12855               		.loc 1 1052 0 discriminator 3
 12856 5a04 8981      		ldd r24,Y+1
 12857 5a06 9A81      		ldd r25,Y+2
 12858 5a08 0196      		adiw r24,1
 12859 5a0a 9A83      		std Y+2,r25
 12860 5a0c 8983      		std Y+1,r24
 12861 5a0e 8B81      		ldd r24,Y+3
 12862 5a10 9C81      		ldd r25,Y+4
 12863 5a12 0196      		adiw r24,1
 12864 5a14 9C83      		std Y+4,r25
 12865 5a16 8B83      		std Y+3,r24
 12866               	.L424:
1052:lp_solve_5.5/lp_scale.c ****       lp->orig_lowbo[i] = unscaled_value(lp, lp->orig_lowbo[i], i);
 12867               		.loc 1 1052 0 is_stmt 0 discriminator 1
 12868 5a18 8F85      		ldd r24,Y+15
 12869 5a1a 9889      		ldd r25,Y+16
 12870 5a1c 8851      		subi r24,24
 12871 5a1e 9E4F      		sbci r25,-2
 12872 5a20 FC01      		movw r30,r24
 12873 5a22 2081      		ld r18,Z
 12874 5a24 3181      		ldd r19,Z+1
 12875 5a26 8981      		ldd r24,Y+1
 12876 5a28 9A81      		ldd r25,Y+2
 12877 5a2a 2817      		cp r18,r24
 12878 5a2c 3907      		cpc r19,r25
 12879 5a2e 04F0      		brlt .+2
 12880 5a30 00C0      		rjmp .L425
1056:lp_solve_5.5/lp_scale.c ****     }
1057:lp_solve_5.5/lp_scale.c **** 
1058:lp_solve_5.5/lp_scale.c ****     /* Unscale the rhs, upper and lower bounds... */
1059:lp_solve_5.5/lp_scale.c ****     for(i = 0; i <= lp->rows; i++) {
 12881               		.loc 1 1059 0 is_stmt 1
 12882 5a32 1A82      		std Y+2,__zero_reg__
 12883 5a34 1982      		std Y+1,__zero_reg__
 12884 5a36 00C0      		rjmp .L426
 12885               	.L428:
1060:lp_solve_5.5/lp_scale.c ****       lp->orig_rhs[i] = unscaled_value(lp, lp->orig_rhs[i], i);
 12886               		.loc 1 1060 0
 12887 5a38 8F85      		ldd r24,Y+15
 12888 5a3a 9889      		ldd r25,Y+16
 12889 5a3c 8A55      		subi r24,90
 12890 5a3e 9D4F      		sbci r25,-3
 12891 5a40 FC01      		movw r30,r24
 12892 5a42 2081      		ld r18,Z
 12893 5a44 3181      		ldd r19,Z+1
 12894 5a46 8981      		ldd r24,Y+1
 12895 5a48 9A81      		ldd r25,Y+2
 12896 5a4a 880F      		lsl r24
 12897 5a4c 991F      		rol r25
 12898 5a4e 880F      		lsl r24
 12899 5a50 991F      		rol r25
 12900 5a52 8901      		movw r16,r18
 12901 5a54 080F      		add r16,r24
 12902 5a56 191F      		adc r17,r25
 12903 5a58 8F85      		ldd r24,Y+15
 12904 5a5a 9889      		ldd r25,Y+16
 12905 5a5c 8A55      		subi r24,90
 12906 5a5e 9D4F      		sbci r25,-3
 12907 5a60 FC01      		movw r30,r24
 12908 5a62 2081      		ld r18,Z
 12909 5a64 3181      		ldd r19,Z+1
 12910 5a66 8981      		ldd r24,Y+1
 12911 5a68 9A81      		ldd r25,Y+2
 12912 5a6a 880F      		lsl r24
 12913 5a6c 991F      		rol r25
 12914 5a6e 880F      		lsl r24
 12915 5a70 991F      		rol r25
 12916 5a72 820F      		add r24,r18
 12917 5a74 931F      		adc r25,r19
 12918 5a76 FC01      		movw r30,r24
 12919 5a78 8081      		ld r24,Z
 12920 5a7a 9181      		ldd r25,Z+1
 12921 5a7c A281      		ldd r26,Z+2
 12922 5a7e B381      		ldd r27,Z+3
 12923 5a80 2981      		ldd r18,Y+1
 12924 5a82 3A81      		ldd r19,Y+2
 12925 5a84 EF85      		ldd r30,Y+15
 12926 5a86 F889      		ldd r31,Y+16
 12927 5a88 AC01      		movw r20,r24
 12928 5a8a BD01      		movw r22,r26
 12929 5a8c CF01      		movw r24,r30
 12930 5a8e 0E94 0000 		call unscaled_value
 12931 5a92 DC01      		movw r26,r24
 12932 5a94 CB01      		movw r24,r22
 12933 5a96 F801      		movw r30,r16
 12934 5a98 8083      		st Z,r24
 12935 5a9a 9183      		std Z+1,r25
 12936 5a9c A283      		std Z+2,r26
 12937 5a9e B383      		std Z+3,r27
1061:lp_solve_5.5/lp_scale.c ****       j = lp->presolve_undo->var_to_orig[i];
 12938               		.loc 1 1061 0
 12939 5aa0 8F85      		ldd r24,Y+15
 12940 5aa2 9889      		ldd r25,Y+16
 12941 5aa4 8A59      		subi r24,-102
 12942 5aa6 9C4F      		sbci r25,-4
 12943 5aa8 FC01      		movw r30,r24
 12944 5aaa 8081      		ld r24,Z
 12945 5aac 9181      		ldd r25,Z+1
 12946 5aae FC01      		movw r30,r24
 12947 5ab0 2085      		ldd r18,Z+8
 12948 5ab2 3185      		ldd r19,Z+9
 12949 5ab4 8981      		ldd r24,Y+1
 12950 5ab6 9A81      		ldd r25,Y+2
 12951 5ab8 880F      		lsl r24
 12952 5aba 991F      		rol r25
 12953 5abc 820F      		add r24,r18
 12954 5abe 931F      		adc r25,r19
 12955 5ac0 FC01      		movw r30,r24
 12956 5ac2 8081      		ld r24,Z
 12957 5ac4 9181      		ldd r25,Z+1
 12958 5ac6 9C83      		std Y+4,r25
 12959 5ac8 8B83      		std Y+3,r24
1062:lp_solve_5.5/lp_scale.c ****       if(j != 0)
 12960               		.loc 1 1062 0
 12961 5aca 8B81      		ldd r24,Y+3
 12962 5acc 9C81      		ldd r25,Y+4
 12963 5ace 892B      		or r24,r25
 12964 5ad0 01F0      		breq .L427
1063:lp_solve_5.5/lp_scale.c ****         lp->presolve_undo->fixed_rhs[j] = unscaled_value(lp, lp->presolve_undo->fixed_rhs[j], i);
 12965               		.loc 1 1063 0
 12966 5ad2 8F85      		ldd r24,Y+15
 12967 5ad4 9889      		ldd r25,Y+16
 12968 5ad6 8A59      		subi r24,-102
 12969 5ad8 9C4F      		sbci r25,-4
 12970 5ada FC01      		movw r30,r24
 12971 5adc 8081      		ld r24,Z
 12972 5ade 9181      		ldd r25,Z+1
 12973 5ae0 FC01      		movw r30,r24
 12974 5ae2 2485      		ldd r18,Z+12
 12975 5ae4 3585      		ldd r19,Z+13
 12976 5ae6 8B81      		ldd r24,Y+3
 12977 5ae8 9C81      		ldd r25,Y+4
 12978 5aea 880F      		lsl r24
 12979 5aec 991F      		rol r25
 12980 5aee 880F      		lsl r24
 12981 5af0 991F      		rol r25
 12982 5af2 8901      		movw r16,r18
 12983 5af4 080F      		add r16,r24
 12984 5af6 191F      		adc r17,r25
 12985 5af8 8F85      		ldd r24,Y+15
 12986 5afa 9889      		ldd r25,Y+16
 12987 5afc 8A59      		subi r24,-102
 12988 5afe 9C4F      		sbci r25,-4
 12989 5b00 FC01      		movw r30,r24
 12990 5b02 8081      		ld r24,Z
 12991 5b04 9181      		ldd r25,Z+1
 12992 5b06 FC01      		movw r30,r24
 12993 5b08 2485      		ldd r18,Z+12
 12994 5b0a 3585      		ldd r19,Z+13
 12995 5b0c 8B81      		ldd r24,Y+3
 12996 5b0e 9C81      		ldd r25,Y+4
 12997 5b10 880F      		lsl r24
 12998 5b12 991F      		rol r25
 12999 5b14 880F      		lsl r24
 13000 5b16 991F      		rol r25
 13001 5b18 820F      		add r24,r18
 13002 5b1a 931F      		adc r25,r19
 13003 5b1c FC01      		movw r30,r24
 13004 5b1e 8081      		ld r24,Z
 13005 5b20 9181      		ldd r25,Z+1
 13006 5b22 A281      		ldd r26,Z+2
 13007 5b24 B381      		ldd r27,Z+3
 13008 5b26 2981      		ldd r18,Y+1
 13009 5b28 3A81      		ldd r19,Y+2
 13010 5b2a EF85      		ldd r30,Y+15
 13011 5b2c F889      		ldd r31,Y+16
 13012 5b2e AC01      		movw r20,r24
 13013 5b30 BD01      		movw r22,r26
 13014 5b32 CF01      		movw r24,r30
 13015 5b34 0E94 0000 		call unscaled_value
 13016 5b38 DC01      		movw r26,r24
 13017 5b3a CB01      		movw r24,r22
 13018 5b3c F801      		movw r30,r16
 13019 5b3e 8083      		st Z,r24
 13020 5b40 9183      		std Z+1,r25
 13021 5b42 A283      		std Z+2,r26
 13022 5b44 B383      		std Z+3,r27
 13023               	.L427:
1064:lp_solve_5.5/lp_scale.c ****       lp->orig_lowbo[i] = unscaled_value(lp, lp->orig_lowbo[i], i);
 13024               		.loc 1 1064 0 discriminator 2
 13025 5b46 8F85      		ldd r24,Y+15
 13026 5b48 9889      		ldd r25,Y+16
 13027 5b4a 8E54      		subi r24,78
 13028 5b4c 9D4F      		sbci r25,-3
 13029 5b4e FC01      		movw r30,r24
 13030 5b50 2081      		ld r18,Z
 13031 5b52 3181      		ldd r19,Z+1
 13032 5b54 8981      		ldd r24,Y+1
 13033 5b56 9A81      		ldd r25,Y+2
 13034 5b58 880F      		lsl r24
 13035 5b5a 991F      		rol r25
 13036 5b5c 880F      		lsl r24
 13037 5b5e 991F      		rol r25
 13038 5b60 8901      		movw r16,r18
 13039 5b62 080F      		add r16,r24
 13040 5b64 191F      		adc r17,r25
 13041 5b66 8F85      		ldd r24,Y+15
 13042 5b68 9889      		ldd r25,Y+16
 13043 5b6a 8E54      		subi r24,78
 13044 5b6c 9D4F      		sbci r25,-3
 13045 5b6e FC01      		movw r30,r24
 13046 5b70 2081      		ld r18,Z
 13047 5b72 3181      		ldd r19,Z+1
 13048 5b74 8981      		ldd r24,Y+1
 13049 5b76 9A81      		ldd r25,Y+2
 13050 5b78 880F      		lsl r24
 13051 5b7a 991F      		rol r25
 13052 5b7c 880F      		lsl r24
 13053 5b7e 991F      		rol r25
 13054 5b80 820F      		add r24,r18
 13055 5b82 931F      		adc r25,r19
 13056 5b84 FC01      		movw r30,r24
 13057 5b86 8081      		ld r24,Z
 13058 5b88 9181      		ldd r25,Z+1
 13059 5b8a A281      		ldd r26,Z+2
 13060 5b8c B381      		ldd r27,Z+3
 13061 5b8e 2981      		ldd r18,Y+1
 13062 5b90 3A81      		ldd r19,Y+2
 13063 5b92 EF85      		ldd r30,Y+15
 13064 5b94 F889      		ldd r31,Y+16
 13065 5b96 AC01      		movw r20,r24
 13066 5b98 BD01      		movw r22,r26
 13067 5b9a CF01      		movw r24,r30
 13068 5b9c 0E94 0000 		call unscaled_value
 13069 5ba0 DC01      		movw r26,r24
 13070 5ba2 CB01      		movw r24,r22
 13071 5ba4 F801      		movw r30,r16
 13072 5ba6 8083      		st Z,r24
 13073 5ba8 9183      		std Z+1,r25
 13074 5baa A283      		std Z+2,r26
 13075 5bac B383      		std Z+3,r27
1065:lp_solve_5.5/lp_scale.c ****       lp->orig_upbo[i] = unscaled_value(lp, lp->orig_upbo[i], i);
 13076               		.loc 1 1065 0 discriminator 2
 13077 5bae 8F85      		ldd r24,Y+15
 13078 5bb0 9889      		ldd r25,Y+16
 13079 5bb2 8255      		subi r24,82
 13080 5bb4 9D4F      		sbci r25,-3
 13081 5bb6 FC01      		movw r30,r24
 13082 5bb8 2081      		ld r18,Z
 13083 5bba 3181      		ldd r19,Z+1
 13084 5bbc 8981      		ldd r24,Y+1
 13085 5bbe 9A81      		ldd r25,Y+2
 13086 5bc0 880F      		lsl r24
 13087 5bc2 991F      		rol r25
 13088 5bc4 880F      		lsl r24
 13089 5bc6 991F      		rol r25
 13090 5bc8 8901      		movw r16,r18
 13091 5bca 080F      		add r16,r24
 13092 5bcc 191F      		adc r17,r25
 13093 5bce 8F85      		ldd r24,Y+15
 13094 5bd0 9889      		ldd r25,Y+16
 13095 5bd2 8255      		subi r24,82
 13096 5bd4 9D4F      		sbci r25,-3
 13097 5bd6 FC01      		movw r30,r24
 13098 5bd8 2081      		ld r18,Z
 13099 5bda 3181      		ldd r19,Z+1
 13100 5bdc 8981      		ldd r24,Y+1
 13101 5bde 9A81      		ldd r25,Y+2
 13102 5be0 880F      		lsl r24
 13103 5be2 991F      		rol r25
 13104 5be4 880F      		lsl r24
 13105 5be6 991F      		rol r25
 13106 5be8 820F      		add r24,r18
 13107 5bea 931F      		adc r25,r19
 13108 5bec FC01      		movw r30,r24
 13109 5bee 8081      		ld r24,Z
 13110 5bf0 9181      		ldd r25,Z+1
 13111 5bf2 A281      		ldd r26,Z+2
 13112 5bf4 B381      		ldd r27,Z+3
 13113 5bf6 2981      		ldd r18,Y+1
 13114 5bf8 3A81      		ldd r19,Y+2
 13115 5bfa EF85      		ldd r30,Y+15
 13116 5bfc F889      		ldd r31,Y+16
 13117 5bfe AC01      		movw r20,r24
 13118 5c00 BD01      		movw r22,r26
 13119 5c02 CF01      		movw r24,r30
 13120 5c04 0E94 0000 		call unscaled_value
 13121 5c08 DC01      		movw r26,r24
 13122 5c0a CB01      		movw r24,r22
 13123 5c0c F801      		movw r30,r16
 13124 5c0e 8083      		st Z,r24
 13125 5c10 9183      		std Z+1,r25
 13126 5c12 A283      		std Z+2,r26
 13127 5c14 B383      		std Z+3,r27
1059:lp_solve_5.5/lp_scale.c ****       lp->orig_rhs[i] = unscaled_value(lp, lp->orig_rhs[i], i);
 13128               		.loc 1 1059 0 discriminator 2
 13129 5c16 8981      		ldd r24,Y+1
 13130 5c18 9A81      		ldd r25,Y+2
 13131 5c1a 0196      		adiw r24,1
 13132 5c1c 9A83      		std Y+2,r25
 13133 5c1e 8983      		std Y+1,r24
 13134               	.L426:
1059:lp_solve_5.5/lp_scale.c ****       lp->orig_rhs[i] = unscaled_value(lp, lp->orig_rhs[i], i);
 13135               		.loc 1 1059 0 is_stmt 0 discriminator 1
 13136 5c20 8F85      		ldd r24,Y+15
 13137 5c22 9889      		ldd r25,Y+16
 13138 5c24 8651      		subi r24,22
 13139 5c26 9E4F      		sbci r25,-2
 13140 5c28 FC01      		movw r30,r24
 13141 5c2a 2081      		ld r18,Z
 13142 5c2c 3181      		ldd r19,Z+1
 13143 5c2e 8981      		ldd r24,Y+1
 13144 5c30 9A81      		ldd r25,Y+2
 13145 5c32 2817      		cp r18,r24
 13146 5c34 3907      		cpc r19,r25
 13147 5c36 04F0      		brlt .+2
 13148 5c38 00C0      		rjmp .L428
1066:lp_solve_5.5/lp_scale.c ****     }
1067:lp_solve_5.5/lp_scale.c **** 
1068:lp_solve_5.5/lp_scale.c ****     FREE(lp->scalars);
 13149               		.loc 1 1068 0 is_stmt 1
 13150 5c3a 8F85      		ldd r24,Y+15
 13151 5c3c 9889      		ldd r25,Y+16
 13152 5c3e 8C53      		subi r24,60
 13153 5c40 9D4F      		sbci r25,-3
 13154 5c42 FC01      		movw r30,r24
 13155 5c44 8081      		ld r24,Z
 13156 5c46 9181      		ldd r25,Z+1
 13157 5c48 892B      		or r24,r25
 13158 5c4a 01F0      		breq .L429
 13159               		.loc 1 1068 0 is_stmt 0 discriminator 1
 13160 5c4c 8F85      		ldd r24,Y+15
 13161 5c4e 9889      		ldd r25,Y+16
 13162 5c50 8C53      		subi r24,60
 13163 5c52 9D4F      		sbci r25,-3
 13164 5c54 FC01      		movw r30,r24
 13165 5c56 8081      		ld r24,Z
 13166 5c58 9181      		ldd r25,Z+1
 13167 5c5a 0E94 0000 		call free
 13168 5c5e 8F85      		ldd r24,Y+15
 13169 5c60 9889      		ldd r25,Y+16
 13170 5c62 8C53      		subi r24,60
 13171 5c64 9D4F      		sbci r25,-3
 13172 5c66 FC01      		movw r30,r24
 13173 5c68 1182      		std Z+1,__zero_reg__
 13174 5c6a 1082      		st Z,__zero_reg__
 13175               	.L429:
1069:lp_solve_5.5/lp_scale.c ****     lp->scaling_used = FALSE;
 13176               		.loc 1 1069 0 is_stmt 1
 13177 5c6c 8F85      		ldd r24,Y+15
 13178 5c6e 9889      		ldd r25,Y+16
 13179 5c70 8A53      		subi r24,58
 13180 5c72 9D4F      		sbci r25,-3
 13181 5c74 FC01      		movw r30,r24
 13182 5c76 1082      		st Z,__zero_reg__
1070:lp_solve_5.5/lp_scale.c ****     lp->columns_scaled = FALSE;
 13183               		.loc 1 1070 0
 13184 5c78 8F85      		ldd r24,Y+15
 13185 5c7a 9889      		ldd r25,Y+16
 13186 5c7c 8953      		subi r24,57
 13187 5c7e 9D4F      		sbci r25,-3
 13188 5c80 FC01      		movw r30,r24
 13189 5c82 1082      		st Z,__zero_reg__
1071:lp_solve_5.5/lp_scale.c **** 
1072:lp_solve_5.5/lp_scale.c ****     set_action(&lp->spx_action, ACTION_REBASE | ACTION_REINVERT | ACTION_RECOMPUTE);
 13190               		.loc 1 1072 0
 13191 5c84 8F85      		ldd r24,Y+15
 13192 5c86 9889      		ldd r25,Y+16
 13193 5c88 8E50      		subi r24,14
 13194 5c8a 9D4F      		sbci r25,-3
 13195 5c8c 66E1      		ldi r22,lo8(22)
 13196 5c8e 70E0      		ldi r23,0
 13197 5c90 0E94 0000 		call set_action
 13198               	.L430:
1073:lp_solve_5.5/lp_scale.c ****   }
1074:lp_solve_5.5/lp_scale.c **** }
 13199               		.loc 1 1074 0
 13200 5c94 0000      		nop
 13201               	/* epilogue start */
 13202 5c96 6096      		adiw r28,16
 13203 5c98 0FB6      		in __tmp_reg__,__SREG__
 13204 5c9a F894      		cli
 13205 5c9c DEBF      		out __SP_H__,r29
 13206 5c9e 0FBE      		out __SREG__,__tmp_reg__
 13207 5ca0 CDBF      		out __SP_L__,r28
 13208 5ca2 DF91      		pop r29
 13209 5ca4 CF91      		pop r28
 13210 5ca6 1F91      		pop r17
 13211 5ca8 0F91      		pop r16
 13212 5caa FF90      		pop r15
 13213 5cac EF90      		pop r14
 13214 5cae 0895      		ret
 13215               		.cfi_endproc
 13216               	.LFE26:
 13218               	.Letext0:
 13219               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 13220               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 13221               		.file 4 "lp_solve_5.5\\shared/commonlib.h"
 13222               		.file 5 "lp_solve_5.5/lp_types.h"
 13223               		.file 6 "lp_solve_5.5/lp_lib.h"
 13224               		.file 7 "lp_solve_5.5/lp_utils.h"
 13225               		.file 8 "lp_solve_5.5/lp_Hash.h"
 13226               		.file 9 "lp_solve_5.5/lp_matrix.h"
 13227               		.file 10 "lp_solve_5.5/lp_mipbb.h"
 13228               		.file 11 "lp_solve_5.5/lp_SOS.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lp_scale.c
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:16     .text:00000000 scaled_value
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:236    .text:00000170 unscaled_value
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:455    .text:000002e0 scaled_mat
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:605    .text:000003ca unscaled_mat
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:758    .text:000004b4 CurtisReidMeasure
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:1189   .text:0000079c CurtisReidScales
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:6216   .text:00002cde scaleCR
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:7799   .text:0000371e scale_updaterows
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:7466   .text:000034f6 scale_updatecolumns
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:6506   .text:00002ebe transform_for_scale
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:6637   .text:00002f88 accumulate_for_scale
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:6836   .text:000030c6 minmax_to_scale
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:7244   .text:0000337e roundPower2
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:8096   .text:000038fe scale_columns
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:8791   .text:00003de0 scale_rows
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:9535   .text:0000432c scale
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:11105  .text:00004e3c finalize_scaling
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:11345  .text:00004fac auto_scale
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:11881  .text:0000534c unscale_columns
C:\Users\GUILHE~1\AppData\Local\Temp\ccMZwPV9.s:12430  .text:00005710 undoscale

UNDEFINED SYMBOLS
__ltsf2
__divsf3
__mulsf3
__gtsf2
__addsf3
__subsf3
log
mat_validate
get_nonzeros
__floatsisf
__nesf2
allocREAL
allocINT
floor
exp
is_int
is_integerscaling
free
set_action
is_scalemode
is_scaletype
__eqsf2
sqrt
__fixsfsi
ceil
mat_rowlength
mat_collength
__floatunsisf
__gesf2
mat_computemax
