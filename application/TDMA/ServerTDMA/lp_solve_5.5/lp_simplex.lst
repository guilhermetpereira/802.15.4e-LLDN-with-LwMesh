   1               		.file	"lp_simplex.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	presolve_rowlength:
  13               	.LFB7:
  14               		.file 1 "lp_solve_5.5/lp_presolve.h"
   1:lp_solve_5.5/lp_presolve.h **** #ifndef HEADER_lp_presolve
   2:lp_solve_5.5/lp_presolve.h **** #define HEADER_lp_presolve
   3:lp_solve_5.5/lp_presolve.h **** 
   4:lp_solve_5.5/lp_presolve.h **** #include "lp_types.h"
   5:lp_solve_5.5/lp_presolve.h **** #include "lp_matrix.h"
   6:lp_solve_5.5/lp_presolve.h **** 
   7:lp_solve_5.5/lp_presolve.h **** /* -------------------------------------------------------------------------------------------- */
   8:lp_solve_5.5/lp_presolve.h **** /* Defines for various presolve options                                                         */
   9:lp_solve_5.5/lp_presolve.h **** /* -------------------------------------------------------------------------------------------- */
  10:lp_solve_5.5/lp_presolve.h **** 
  11:lp_solve_5.5/lp_presolve.h **** #define MAX_PSMERGELOOPS                2                 /* Max loops to merge compatible constrai
  12:lp_solve_5.5/lp_presolve.h **** #define MAX_PSLINDEPLOOPS               1   /* Max loops to detect linearly dependendent constraint
  13:lp_solve_5.5/lp_presolve.h **** #define MAX_PSBOUNDTIGHTENLOOPS         5     /* Maximumn number of loops to allow bound tightening
  14:lp_solve_5.5/lp_presolve.h **** #define MIN_SOS1LENGTH                  4   /* Minimum length of a constraint for conversion to SOS
  15:lp_solve_5.5/lp_presolve.h **** #if 1
  16:lp_solve_5.5/lp_presolve.h ****   #define PRESOLVE_EPSVALUE (0.1*lp->epsprimal)
  17:lp_solve_5.5/lp_presolve.h **** #else
  18:lp_solve_5.5/lp_presolve.h ****   #define PRESOLVE_EPSVALUE  lp->epsvalue
  19:lp_solve_5.5/lp_presolve.h **** #endif
  20:lp_solve_5.5/lp_presolve.h **** #define PRESOLVE_EPSPIVOT         1.0e-3        /* Looses robustness at values smaller than ~1.0e-3
  21:lp_solve_5.5/lp_presolve.h **** #define PRESOLVE_BOUNDSLACK           10                     /* Extra error recovery/tolerance marg
  22:lp_solve_5.5/lp_presolve.h **** 
  23:lp_solve_5.5/lp_presolve.h **** #define DoPresolveRounding              /* Use absolute and directed rounding (disable at own risk)
  24:lp_solve_5.5/lp_presolve.h **** /*#define DoPresolveRelativeTest*/
  25:lp_solve_5.5/lp_presolve.h **** 
  26:lp_solve_5.5/lp_presolve.h **** /*#define PresolveForceUpdateMax*/
  27:lp_solve_5.5/lp_presolve.h **** 
  28:lp_solve_5.5/lp_presolve.h **** /*#define DualFeasibilityLogicEQ2*/              /* Add low-order feasibility/accuracy logic to eli
  29:lp_solve_5.5/lp_presolve.h **** #define DivisorIntegralityLogicEQ2                                   /* Always prefer integer divis
  30:lp_solve_5.5/lp_presolve.h **** #define FindImpliedEqualities                               /* Detect equalities (default is enable
  31:lp_solve_5.5/lp_presolve.h **** #define Eq2Reldiff
  32:lp_solve_5.5/lp_presolve.h **** 
  33:lp_solve_5.5/lp_presolve.h **** /*#define SavePresolveEliminated */        /* Enable to activate storage of eliminated matrix data 
  34:lp_solve_5.5/lp_presolve.h **** /*#define UseDualPresolve */                    /* Enable to use full dual information for presolve
  35:lp_solve_5.5/lp_presolve.h **** 
  36:lp_solve_5.5/lp_presolve.h **** 
  37:lp_solve_5.5/lp_presolve.h **** typedef struct _psrec
  38:lp_solve_5.5/lp_presolve.h **** {
  39:lp_solve_5.5/lp_presolve.h ****   LLrec *varmap;
  40:lp_solve_5.5/lp_presolve.h ****   int  **next;
  41:lp_solve_5.5/lp_presolve.h ****   int  *empty;
  42:lp_solve_5.5/lp_presolve.h ****   int  *plucount;
  43:lp_solve_5.5/lp_presolve.h ****   int  *negcount;
  44:lp_solve_5.5/lp_presolve.h ****   int  *pluneg;
  45:lp_solve_5.5/lp_presolve.h ****   int  *infcount;
  46:lp_solve_5.5/lp_presolve.h ****   REAL  *plulower;
  47:lp_solve_5.5/lp_presolve.h ****   REAL  *neglower;
  48:lp_solve_5.5/lp_presolve.h ****   REAL  *pluupper;
  49:lp_solve_5.5/lp_presolve.h ****   REAL  *negupper;
  50:lp_solve_5.5/lp_presolve.h ****   int  allocsize;
  51:lp_solve_5.5/lp_presolve.h **** } psrec;
  52:lp_solve_5.5/lp_presolve.h **** 
  53:lp_solve_5.5/lp_presolve.h **** typedef struct _presolverec
  54:lp_solve_5.5/lp_presolve.h **** {
  55:lp_solve_5.5/lp_presolve.h ****   psrec *rows;
  56:lp_solve_5.5/lp_presolve.h ****   psrec *cols;
  57:lp_solve_5.5/lp_presolve.h ****   LLrec *EQmap;
  58:lp_solve_5.5/lp_presolve.h ****   LLrec *LTmap;
  59:lp_solve_5.5/lp_presolve.h ****   LLrec *INTmap;
  60:lp_solve_5.5/lp_presolve.h ****   REAL  *pv_upbo;
  61:lp_solve_5.5/lp_presolve.h ****   REAL  *pv_lobo;
  62:lp_solve_5.5/lp_presolve.h ****   REAL  *dv_upbo;
  63:lp_solve_5.5/lp_presolve.h ****   REAL  *dv_lobo;
  64:lp_solve_5.5/lp_presolve.h ****   lprec *lp;
  65:lp_solve_5.5/lp_presolve.h ****   REAL  epsvalue;
  66:lp_solve_5.5/lp_presolve.h ****   REAL  epspivot;
  67:lp_solve_5.5/lp_presolve.h ****   int   innerloops;
  68:lp_solve_5.5/lp_presolve.h ****   int   middleloops;
  69:lp_solve_5.5/lp_presolve.h ****   int   outerloops;
  70:lp_solve_5.5/lp_presolve.h ****   int   nzdeleted;
  71:lp_solve_5.5/lp_presolve.h ****   MYBOOL forceupdate;
  72:lp_solve_5.5/lp_presolve.h **** } presolverec;
  73:lp_solve_5.5/lp_presolve.h **** 
  74:lp_solve_5.5/lp_presolve.h **** #ifdef __cplusplus
  75:lp_solve_5.5/lp_presolve.h **** extern "C" {
  76:lp_solve_5.5/lp_presolve.h **** #endif
  77:lp_solve_5.5/lp_presolve.h **** 
  78:lp_solve_5.5/lp_presolve.h **** /* Put function headers here */
  79:lp_solve_5.5/lp_presolve.h **** 
  80:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL presolve_createUndo(lprec *lp);
  81:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL presolve_rebuildUndo(lprec *lp, MYBOOL isprimal);
  82:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL inc_presolve_space(lprec *lp, int delta, MYBOOL isrows);
  83:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL presolve_setOrig(lprec *lp, int orig_rows, int orig_cols);
  84:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL presolve_colfix(presolverec *psdata, int colnr, REAL newvalue, MYBOOL remove, int *ta
  85:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL presolve_fillUndo(lprec *lp, int orig_rows, int orig_cols, MYBOOL setOrig);
  86:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL presolve_freeUndo(lprec *lp);
  87:lp_solve_5.5/lp_presolve.h **** 
  88:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL presolve_updatesums(presolverec *psdata);
  89:lp_solve_5.5/lp_presolve.h **** 
  90:lp_solve_5.5/lp_presolve.h **** INLINE int presolve_nextrow(presolverec *psdata, int colnr, int *previtem);
  91:lp_solve_5.5/lp_presolve.h **** INLINE int presolve_nextcol(presolverec *psdata, int rownr, int *previtem);
  92:lp_solve_5.5/lp_presolve.h **** 
  93:lp_solve_5.5/lp_presolve.h **** STATIC presolverec *presolve_init(lprec *lp);
  94:lp_solve_5.5/lp_presolve.h **** STATIC void presolve_free(presolverec **psdata);
  95:lp_solve_5.5/lp_presolve.h **** STATIC int presolve_shrink(presolverec *psdata, int *nConRemove, int *nVarRemove);
  96:lp_solve_5.5/lp_presolve.h **** STATIC void presolve_rowremove(presolverec *psdata, int rownr, MYBOOL allowcoldelete);
  97:lp_solve_5.5/lp_presolve.h **** STATIC int presolve_colremove(presolverec *psdata, int colnr, MYBOOL allowrowdelete);
  98:lp_solve_5.5/lp_presolve.h **** 
  99:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL presolve_colfixdual(presolverec *psdata, int colnr, REAL *fixValue, int *status);
 100:lp_solve_5.5/lp_presolve.h **** 
 101:lp_solve_5.5/lp_presolve.h **** INLINE int presolve_rowlength(presolverec *psdata, int rownr)
 102:lp_solve_5.5/lp_presolve.h **** {
  15               		.loc 1 102 0
  16               		.cfi_startproc
  17 0000 CF93      		push r28
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 28, -2
  21 0002 DF93      		push r29
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 29, -3
  25 0004 00D0      		rcall .
  26 0006 00D0      		rcall .
  27 0008 00D0      		rcall .
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 10
  30 000a CDB7      		in r28,__SP_L__
  31 000c DEB7      		in r29,__SP_H__
  32               	.LCFI3:
  33               		.cfi_def_cfa_register 28
  34               	/* prologue: function */
  35               	/* frame size = 6 */
  36               	/* stack size = 8 */
  37               	.L__stack_usage = 8
  38 000e 9C83      		std Y+4,r25
  39 0010 8B83      		std Y+3,r24
  40 0012 7E83      		std Y+6,r23
  41 0014 6D83      		std Y+5,r22
 103:lp_solve_5.5/lp_presolve.h ****   int *items = psdata->rows->next[rownr];
  42               		.loc 1 103 0
  43 0016 8B81      		ldd r24,Y+3
  44 0018 9C81      		ldd r25,Y+4
  45 001a FC01      		movw r30,r24
  46 001c 8081      		ld r24,Z
  47 001e 9181      		ldd r25,Z+1
  48 0020 FC01      		movw r30,r24
  49 0022 2281      		ldd r18,Z+2
  50 0024 3381      		ldd r19,Z+3
  51 0026 8D81      		ldd r24,Y+5
  52 0028 9E81      		ldd r25,Y+6
  53 002a 880F      		lsl r24
  54 002c 991F      		rol r25
  55 002e 820F      		add r24,r18
  56 0030 931F      		adc r25,r19
  57 0032 FC01      		movw r30,r24
  58 0034 8081      		ld r24,Z
  59 0036 9181      		ldd r25,Z+1
  60 0038 9A83      		std Y+2,r25
  61 003a 8983      		std Y+1,r24
 104:lp_solve_5.5/lp_presolve.h **** 
 105:lp_solve_5.5/lp_presolve.h ****   if(items == NULL)
  62               		.loc 1 105 0
  63 003c 8981      		ldd r24,Y+1
  64 003e 9A81      		ldd r25,Y+2
  65 0040 892B      		or r24,r25
  66 0042 01F4      		brne .L2
 106:lp_solve_5.5/lp_presolve.h ****     return( 0 );
  67               		.loc 1 106 0
  68 0044 80E0      		ldi r24,0
  69 0046 90E0      		ldi r25,0
  70 0048 00C0      		rjmp .L3
  71               	.L2:
 107:lp_solve_5.5/lp_presolve.h ****   else
 108:lp_solve_5.5/lp_presolve.h ****     return( items[0] );
  72               		.loc 1 108 0
  73 004a 8981      		ldd r24,Y+1
  74 004c 9A81      		ldd r25,Y+2
  75 004e FC01      		movw r30,r24
  76 0050 8081      		ld r24,Z
  77 0052 9181      		ldd r25,Z+1
  78               	.L3:
  79               	/* epilogue start */
 109:lp_solve_5.5/lp_presolve.h **** }
  80               		.loc 1 109 0
  81 0054 2696      		adiw r28,6
  82 0056 0FB6      		in __tmp_reg__,__SREG__
  83 0058 F894      		cli
  84 005a DEBF      		out __SP_H__,r29
  85 005c 0FBE      		out __SREG__,__tmp_reg__
  86 005e CDBF      		out __SP_L__,r28
  87 0060 DF91      		pop r29
  88 0062 CF91      		pop r28
  89 0064 0895      		ret
  90               		.cfi_endproc
  91               	.LFE7:
  94               	presolve_collength:
  95               	.LFB8:
 110:lp_solve_5.5/lp_presolve.h **** INLINE int presolve_collength(presolverec *psdata, int colnr)
 111:lp_solve_5.5/lp_presolve.h **** {
  96               		.loc 1 111 0
  97               		.cfi_startproc
  98 0066 CF93      		push r28
  99               	.LCFI4:
 100               		.cfi_def_cfa_offset 3
 101               		.cfi_offset 28, -2
 102 0068 DF93      		push r29
 103               	.LCFI5:
 104               		.cfi_def_cfa_offset 4
 105               		.cfi_offset 29, -3
 106 006a 00D0      		rcall .
 107 006c 00D0      		rcall .
 108 006e 00D0      		rcall .
 109               	.LCFI6:
 110               		.cfi_def_cfa_offset 10
 111 0070 CDB7      		in r28,__SP_L__
 112 0072 DEB7      		in r29,__SP_H__
 113               	.LCFI7:
 114               		.cfi_def_cfa_register 28
 115               	/* prologue: function */
 116               	/* frame size = 6 */
 117               	/* stack size = 8 */
 118               	.L__stack_usage = 8
 119 0074 9C83      		std Y+4,r25
 120 0076 8B83      		std Y+3,r24
 121 0078 7E83      		std Y+6,r23
 122 007a 6D83      		std Y+5,r22
 112:lp_solve_5.5/lp_presolve.h ****   int *items = psdata->cols->next[colnr];
 123               		.loc 1 112 0
 124 007c 8B81      		ldd r24,Y+3
 125 007e 9C81      		ldd r25,Y+4
 126 0080 FC01      		movw r30,r24
 127 0082 8281      		ldd r24,Z+2
 128 0084 9381      		ldd r25,Z+3
 129 0086 FC01      		movw r30,r24
 130 0088 2281      		ldd r18,Z+2
 131 008a 3381      		ldd r19,Z+3
 132 008c 8D81      		ldd r24,Y+5
 133 008e 9E81      		ldd r25,Y+6
 134 0090 880F      		lsl r24
 135 0092 991F      		rol r25
 136 0094 820F      		add r24,r18
 137 0096 931F      		adc r25,r19
 138 0098 FC01      		movw r30,r24
 139 009a 8081      		ld r24,Z
 140 009c 9181      		ldd r25,Z+1
 141 009e 9A83      		std Y+2,r25
 142 00a0 8983      		std Y+1,r24
 113:lp_solve_5.5/lp_presolve.h ****   if(items == NULL)
 143               		.loc 1 113 0
 144 00a2 8981      		ldd r24,Y+1
 145 00a4 9A81      		ldd r25,Y+2
 146 00a6 892B      		or r24,r25
 147 00a8 01F4      		brne .L5
 114:lp_solve_5.5/lp_presolve.h ****     return( 0 );
 148               		.loc 1 114 0
 149 00aa 80E0      		ldi r24,0
 150 00ac 90E0      		ldi r25,0
 151 00ae 00C0      		rjmp .L6
 152               	.L5:
 115:lp_solve_5.5/lp_presolve.h ****   else
 116:lp_solve_5.5/lp_presolve.h ****     return( items[0] );
 153               		.loc 1 116 0
 154 00b0 8981      		ldd r24,Y+1
 155 00b2 9A81      		ldd r25,Y+2
 156 00b4 FC01      		movw r30,r24
 157 00b6 8081      		ld r24,Z
 158 00b8 9181      		ldd r25,Z+1
 159               	.L6:
 160               	/* epilogue start */
 117:lp_solve_5.5/lp_presolve.h **** }
 161               		.loc 1 117 0
 162 00ba 2696      		adiw r28,6
 163 00bc 0FB6      		in __tmp_reg__,__SREG__
 164 00be F894      		cli
 165 00c0 DEBF      		out __SP_H__,r29
 166 00c2 0FBE      		out __SREG__,__tmp_reg__
 167 00c4 CDBF      		out __SP_L__,r28
 168 00c6 DF91      		pop r29
 169 00c8 CF91      		pop r28
 170 00ca 0895      		ret
 171               		.cfi_endproc
 172               	.LFE8:
 174               	.global	stallMonitor_update
 176               	stallMonitor_update:
 177               	.LFB9:
 178               		.file 2 "lp_solve_5.5/lp_simplex.c"
   1:lp_solve_5.5/lp_simplex.c **** 
   2:lp_solve_5.5/lp_simplex.c **** /*
   3:lp_solve_5.5/lp_simplex.c ****     Core optimization drivers for lp_solve v5.0+
   4:lp_solve_5.5/lp_simplex.c ****    ----------------------------------------------------------------------------------
   5:lp_solve_5.5/lp_simplex.c ****     Author:        Michel Berkelaar (to lp_solve v3.2),
   6:lp_solve_5.5/lp_simplex.c ****                    Kjell Eikland    (v4.0 and forward)
   7:lp_solve_5.5/lp_simplex.c ****     Contact:
   8:lp_solve_5.5/lp_simplex.c ****     License terms: LGPL.
   9:lp_solve_5.5/lp_simplex.c **** 
  10:lp_solve_5.5/lp_simplex.c ****     Requires:      lp_lib.h, lp_simplex.h, lp_presolve.h, lp_pricerPSE.h
  11:lp_solve_5.5/lp_simplex.c **** 
  12:lp_solve_5.5/lp_simplex.c ****     Release notes:
  13:lp_solve_5.5/lp_simplex.c ****     v5.0.0  1 January 2004      New unit applying stacked basis and bounds storage.
  14:lp_solve_5.5/lp_simplex.c ****     v5.0.1 31 January 2004      Moved B&B routines to separate file and implemented
  15:lp_solve_5.5/lp_simplex.c ****                                 a new runsolver() general purpose call method.
  16:lp_solve_5.5/lp_simplex.c ****     v5.0.2  1 May 2004          Changed routine names to be more intuitive.
  17:lp_solve_5.5/lp_simplex.c ****     v5.1.0  10 January 2005     Created modular stalling/cycling functions.
  18:lp_solve_5.5/lp_simplex.c ****                                 Rewrote dualloop() to optimize long dual and
  19:lp_solve_5.5/lp_simplex.c ****                                 also streamlined primloop() correspondingly.
  20:lp_solve_5.5/lp_simplex.c ****     v5.2.0  20 March 2005       Reimplemented primal phase 1 logic.
  21:lp_solve_5.5/lp_simplex.c ****                                 Made multiple pricing finally work (primal simplex).
  22:lp_solve_5.5/lp_simplex.c **** 
  23:lp_solve_5.5/lp_simplex.c ****    ----------------------------------------------------------------------------------
  24:lp_solve_5.5/lp_simplex.c **** */
  25:lp_solve_5.5/lp_simplex.c **** 
  26:lp_solve_5.5/lp_simplex.c **** #include <string.h>
  27:lp_solve_5.5/lp_simplex.c **** #include "commonlib.h"
  28:lp_solve_5.5/lp_simplex.c **** #include "lp_lib.h"
  29:lp_solve_5.5/lp_simplex.c **** #include "lp_BFP.h"
  30:lp_solve_5.5/lp_simplex.c **** #include "lp_simplex.h"
  31:lp_solve_5.5/lp_simplex.c **** #include "lp_crash.h"
  32:lp_solve_5.5/lp_simplex.c **** #include "lp_presolve.h"
  33:lp_solve_5.5/lp_simplex.c **** #include "lp_price.h"
  34:lp_solve_5.5/lp_simplex.c **** #include "lp_pricePSE.h"
  35:lp_solve_5.5/lp_simplex.c **** #include "lp_report.h"
  36:lp_solve_5.5/lp_simplex.c **** 
  37:lp_solve_5.5/lp_simplex.c **** #ifdef FORTIFY
  38:lp_solve_5.5/lp_simplex.c **** # include "lp_fortify.h"
  39:lp_solve_5.5/lp_simplex.c **** #endif
  40:lp_solve_5.5/lp_simplex.c **** 
  41:lp_solve_5.5/lp_simplex.c **** 
  42:lp_solve_5.5/lp_simplex.c **** STATIC void stallMonitor_update(lprec *lp, REAL newOF)
  43:lp_solve_5.5/lp_simplex.c **** {
 179               		.loc 2 43 0
 180               		.cfi_startproc
 181 00cc CF93      		push r28
 182               	.LCFI8:
 183               		.cfi_def_cfa_offset 3
 184               		.cfi_offset 28, -2
 185 00ce DF93      		push r29
 186               	.LCFI9:
 187               		.cfi_def_cfa_offset 4
 188               		.cfi_offset 29, -3
 189 00d0 CDB7      		in r28,__SP_L__
 190 00d2 DEB7      		in r29,__SP_H__
 191               	.LCFI10:
 192               		.cfi_def_cfa_register 28
 193 00d4 2A97      		sbiw r28,10
 194               	.LCFI11:
 195               		.cfi_def_cfa_offset 14
 196 00d6 0FB6      		in __tmp_reg__,__SREG__
 197 00d8 F894      		cli
 198 00da DEBF      		out __SP_H__,r29
 199 00dc 0FBE      		out __SREG__,__tmp_reg__
 200 00de CDBF      		out __SP_L__,r28
 201               	/* prologue: function */
 202               	/* frame size = 10 */
 203               	/* stack size = 12 */
 204               	.L__stack_usage = 12
 205 00e0 9E83      		std Y+6,r25
 206 00e2 8D83      		std Y+5,r24
 207 00e4 4F83      		std Y+7,r20
 208 00e6 5887      		std Y+8,r21
 209 00e8 6987      		std Y+9,r22
 210 00ea 7A87      		std Y+10,r23
  44:lp_solve_5.5/lp_simplex.c ****   int newpos;
  45:lp_solve_5.5/lp_simplex.c ****   OBJmonrec *monitor = lp->monitor;
 211               		.loc 2 45 0
 212 00ec 8D81      		ldd r24,Y+5
 213 00ee 9E81      		ldd r25,Y+6
 214 00f0 8E53      		subi r24,62
 215 00f2 9D4F      		sbci r25,-3
 216 00f4 FC01      		movw r30,r24
 217 00f6 8081      		ld r24,Z
 218 00f8 9181      		ldd r25,Z+1
 219 00fa 9A83      		std Y+2,r25
 220 00fc 8983      		std Y+1,r24
  46:lp_solve_5.5/lp_simplex.c **** 
  47:lp_solve_5.5/lp_simplex.c ****   if(monitor->countstep < OBJ_STEPS)
 221               		.loc 2 47 0
 222 00fe 8981      		ldd r24,Y+1
 223 0100 9A81      		ldd r25,Y+2
 224 0102 FC01      		movw r30,r24
 225 0104 828D      		ldd r24,Z+26
 226 0106 938D      		ldd r25,Z+27
 227 0108 0597      		sbiw r24,5
 228 010a 04F4      		brge .L8
  48:lp_solve_5.5/lp_simplex.c ****     monitor->countstep++;
 229               		.loc 2 48 0
 230 010c 8981      		ldd r24,Y+1
 231 010e 9A81      		ldd r25,Y+2
 232 0110 FC01      		movw r30,r24
 233 0112 828D      		ldd r24,Z+26
 234 0114 938D      		ldd r25,Z+27
 235 0116 9C01      		movw r18,r24
 236 0118 2F5F      		subi r18,-1
 237 011a 3F4F      		sbci r19,-1
 238 011c 8981      		ldd r24,Y+1
 239 011e 9A81      		ldd r25,Y+2
 240 0120 FC01      		movw r30,r24
 241 0122 338F      		std Z+27,r19
 242 0124 228F      		std Z+26,r18
 243 0126 00C0      		rjmp .L9
 244               	.L8:
  49:lp_solve_5.5/lp_simplex.c ****   else
  50:lp_solve_5.5/lp_simplex.c ****     monitor->startstep = mod(monitor->startstep + 1, OBJ_STEPS);
 245               		.loc 2 50 0
 246 0128 8981      		ldd r24,Y+1
 247 012a 9A81      		ldd r25,Y+2
 248 012c FC01      		movw r30,r24
 249 012e 848D      		ldd r24,Z+28
 250 0130 958D      		ldd r25,Z+29
 251 0132 0196      		adiw r24,1
 252 0134 65E0      		ldi r22,lo8(5)
 253 0136 70E0      		ldi r23,0
 254 0138 0E94 0000 		call mod
 255 013c 9C01      		movw r18,r24
 256 013e 8981      		ldd r24,Y+1
 257 0140 9A81      		ldd r25,Y+2
 258 0142 FC01      		movw r30,r24
 259 0144 358F      		std Z+29,r19
 260 0146 248F      		std Z+28,r18
 261               	.L9:
  51:lp_solve_5.5/lp_simplex.c ****   newpos = mod(monitor->startstep + monitor->countstep - 1, OBJ_STEPS);
 262               		.loc 2 51 0
 263 0148 8981      		ldd r24,Y+1
 264 014a 9A81      		ldd r25,Y+2
 265 014c FC01      		movw r30,r24
 266 014e 248D      		ldd r18,Z+28
 267 0150 358D      		ldd r19,Z+29
 268 0152 8981      		ldd r24,Y+1
 269 0154 9A81      		ldd r25,Y+2
 270 0156 FC01      		movw r30,r24
 271 0158 828D      		ldd r24,Z+26
 272 015a 938D      		ldd r25,Z+27
 273 015c 820F      		add r24,r18
 274 015e 931F      		adc r25,r19
 275 0160 0197      		sbiw r24,1
 276 0162 65E0      		ldi r22,lo8(5)
 277 0164 70E0      		ldi r23,0
 278 0166 0E94 0000 		call mod
 279 016a 9C83      		std Y+4,r25
 280 016c 8B83      		std Y+3,r24
  52:lp_solve_5.5/lp_simplex.c ****   monitor->objstep[newpos] = newOF;
 281               		.loc 2 52 0
 282 016e 2981      		ldd r18,Y+1
 283 0170 3A81      		ldd r19,Y+2
 284 0172 8B81      		ldd r24,Y+3
 285 0174 9C81      		ldd r25,Y+4
 286 0176 880F      		lsl r24
 287 0178 991F      		rol r25
 288 017a 880F      		lsl r24
 289 017c 991F      		rol r25
 290 017e 820F      		add r24,r18
 291 0180 931F      		adc r25,r19
 292 0182 9C01      		movw r18,r24
 293 0184 2E5C      		subi r18,-50
 294 0186 3F4F      		sbci r19,-1
 295 0188 8F81      		ldd r24,Y+7
 296 018a 9885      		ldd r25,Y+8
 297 018c A985      		ldd r26,Y+9
 298 018e BA85      		ldd r27,Y+10
 299 0190 F901      		movw r30,r18
 300 0192 8083      		st Z,r24
 301 0194 9183      		std Z+1,r25
 302 0196 A283      		std Z+2,r26
 303 0198 B383      		std Z+3,r27
  53:lp_solve_5.5/lp_simplex.c ****   monitor->idxstep[newpos] = monitor->Icount;
 304               		.loc 2 53 0
 305 019a 8981      		ldd r24,Y+1
 306 019c 9A81      		ldd r25,Y+2
 307 019e FC01      		movw r30,r24
 308 01a0 20A5      		ldd r18,Z+40
 309 01a2 31A5      		ldd r19,Z+41
 310 01a4 4981      		ldd r20,Y+1
 311 01a6 5A81      		ldd r21,Y+2
 312 01a8 8B81      		ldd r24,Y+3
 313 01aa 9C81      		ldd r25,Y+4
 314 01ac 0896      		adiw r24,8
 315 01ae 880F      		lsl r24
 316 01b0 991F      		rol r25
 317 01b2 840F      		add r24,r20
 318 01b4 951F      		adc r25,r21
 319 01b6 FC01      		movw r30,r24
 320 01b8 3183      		std Z+1,r19
 321 01ba 2083      		st Z,r18
  54:lp_solve_5.5/lp_simplex.c ****   monitor->currentstep = newpos;
 322               		.loc 2 54 0
 323 01bc 8981      		ldd r24,Y+1
 324 01be 9A81      		ldd r25,Y+2
 325 01c0 2B81      		ldd r18,Y+3
 326 01c2 3C81      		ldd r19,Y+4
 327 01c4 FC01      		movw r30,r24
 328 01c6 378F      		std Z+31,r19
 329 01c8 268F      		std Z+30,r18
  55:lp_solve_5.5/lp_simplex.c **** }
 330               		.loc 2 55 0
 331 01ca 0000      		nop
 332               	/* epilogue start */
 333 01cc 2A96      		adiw r28,10
 334 01ce 0FB6      		in __tmp_reg__,__SREG__
 335 01d0 F894      		cli
 336 01d2 DEBF      		out __SP_H__,r29
 337 01d4 0FBE      		out __SREG__,__tmp_reg__
 338 01d6 CDBF      		out __SP_L__,r28
 339 01d8 DF91      		pop r29
 340 01da CF91      		pop r28
 341 01dc 0895      		ret
 342               		.cfi_endproc
 343               	.LFE9:
 345               	.global	__subsf3
 346               	.global	__floatsisf
 347               	.global	__divsf3
 348               	.global	__nesf2
 349               	.global	__gtsf2
 350               	.global	stallMonitor_creepingObj
 352               	stallMonitor_creepingObj:
 353               	.LFB10:
  56:lp_solve_5.5/lp_simplex.c **** 
  57:lp_solve_5.5/lp_simplex.c **** STATIC MYBOOL stallMonitor_creepingObj(lprec *lp)
  58:lp_solve_5.5/lp_simplex.c **** {
 354               		.loc 2 58 0
 355               		.cfi_startproc
 356 01de CF92      		push r12
 357               	.LCFI12:
 358               		.cfi_def_cfa_offset 3
 359               		.cfi_offset 12, -2
 360 01e0 DF92      		push r13
 361               	.LCFI13:
 362               		.cfi_def_cfa_offset 4
 363               		.cfi_offset 13, -3
 364 01e2 EF92      		push r14
 365               	.LCFI14:
 366               		.cfi_def_cfa_offset 5
 367               		.cfi_offset 14, -4
 368 01e4 FF92      		push r15
 369               	.LCFI15:
 370               		.cfi_def_cfa_offset 6
 371               		.cfi_offset 15, -5
 372 01e6 1F93      		push r17
 373               	.LCFI16:
 374               		.cfi_def_cfa_offset 7
 375               		.cfi_offset 17, -6
 376 01e8 CF93      		push r28
 377               	.LCFI17:
 378               		.cfi_def_cfa_offset 8
 379               		.cfi_offset 28, -7
 380 01ea DF93      		push r29
 381               	.LCFI18:
 382               		.cfi_def_cfa_offset 9
 383               		.cfi_offset 29, -8
 384 01ec CDB7      		in r28,__SP_L__
 385 01ee DEB7      		in r29,__SP_H__
 386               	.LCFI19:
 387               		.cfi_def_cfa_register 28
 388 01f0 2897      		sbiw r28,8
 389               	.LCFI20:
 390               		.cfi_def_cfa_offset 17
 391 01f2 0FB6      		in __tmp_reg__,__SREG__
 392 01f4 F894      		cli
 393 01f6 DEBF      		out __SP_H__,r29
 394 01f8 0FBE      		out __SREG__,__tmp_reg__
 395 01fa CDBF      		out __SP_L__,r28
 396               	/* prologue: function */
 397               	/* frame size = 8 */
 398               	/* stack size = 15 */
 399               	.L__stack_usage = 15
 400 01fc 9887      		std Y+8,r25
 401 01fe 8F83      		std Y+7,r24
  59:lp_solve_5.5/lp_simplex.c ****   OBJmonrec *monitor = lp->monitor;
 402               		.loc 2 59 0
 403 0200 8F81      		ldd r24,Y+7
 404 0202 9885      		ldd r25,Y+8
 405 0204 8E53      		subi r24,62
 406 0206 9D4F      		sbci r25,-3
 407 0208 FC01      		movw r30,r24
 408 020a 8081      		ld r24,Z
 409 020c 9181      		ldd r25,Z+1
 410 020e 9A83      		std Y+2,r25
 411 0210 8983      		std Y+1,r24
  60:lp_solve_5.5/lp_simplex.c **** 
  61:lp_solve_5.5/lp_simplex.c ****   if(monitor->countstep > 1) {
 412               		.loc 2 61 0
 413 0212 8981      		ldd r24,Y+1
 414 0214 9A81      		ldd r25,Y+2
 415 0216 FC01      		movw r30,r24
 416 0218 828D      		ldd r24,Z+26
 417 021a 938D      		ldd r25,Z+27
 418 021c 0297      		sbiw r24,2
 419 021e 04F4      		brge .+2
 420 0220 00C0      		rjmp .L11
 421               	.LBB2:
  62:lp_solve_5.5/lp_simplex.c ****     REAL deltaOF = (monitor->objstep[monitor->currentstep] -
 422               		.loc 2 62 0
 423 0222 8981      		ldd r24,Y+1
 424 0224 9A81      		ldd r25,Y+2
 425 0226 FC01      		movw r30,r24
 426 0228 868D      		ldd r24,Z+30
 427 022a 978D      		ldd r25,Z+31
 428 022c 2981      		ldd r18,Y+1
 429 022e 3A81      		ldd r19,Y+2
 430 0230 880F      		lsl r24
 431 0232 991F      		rol r25
 432 0234 880F      		lsl r24
 433 0236 991F      		rol r25
 434 0238 820F      		add r24,r18
 435 023a 931F      		adc r25,r19
 436 023c C296      		adiw r24,50
 437 023e FC01      		movw r30,r24
 438 0240 8081      		ld r24,Z
 439 0242 9181      		ldd r25,Z+1
 440 0244 A281      		ldd r26,Z+2
 441 0246 B381      		ldd r27,Z+3
  63:lp_solve_5.5/lp_simplex.c ****                     monitor->objstep[monitor->startstep]) / monitor->countstep;
 442               		.loc 2 63 0
 443 0248 2981      		ldd r18,Y+1
 444 024a 3A81      		ldd r19,Y+2
 445 024c F901      		movw r30,r18
 446 024e 248D      		ldd r18,Z+28
 447 0250 358D      		ldd r19,Z+29
 448 0252 4981      		ldd r20,Y+1
 449 0254 5A81      		ldd r21,Y+2
 450 0256 220F      		lsl r18
 451 0258 331F      		rol r19
 452 025a 220F      		lsl r18
 453 025c 331F      		rol r19
 454 025e 240F      		add r18,r20
 455 0260 351F      		adc r19,r21
 456 0262 2E5C      		subi r18,-50
 457 0264 3F4F      		sbci r19,-1
 458 0266 F901      		movw r30,r18
 459 0268 2081      		ld r18,Z
 460 026a 3181      		ldd r19,Z+1
 461 026c 4281      		ldd r20,Z+2
 462 026e 5381      		ldd r21,Z+3
  62:lp_solve_5.5/lp_simplex.c ****     REAL deltaOF = (monitor->objstep[monitor->currentstep] -
 463               		.loc 2 62 0
 464 0270 BC01      		movw r22,r24
 465 0272 CD01      		movw r24,r26
 466 0274 0E94 0000 		call __subsf3
 467 0278 DC01      		movw r26,r24
 468 027a CB01      		movw r24,r22
 469 027c 6C01      		movw r12,r24
 470 027e 7D01      		movw r14,r26
 471               		.loc 2 63 0
 472 0280 8981      		ldd r24,Y+1
 473 0282 9A81      		ldd r25,Y+2
 474 0284 FC01      		movw r30,r24
 475 0286 828D      		ldd r24,Z+26
 476 0288 938D      		ldd r25,Z+27
 477 028a 092E      		mov __tmp_reg__,r25
 478 028c 000C      		lsl r0
 479 028e AA0B      		sbc r26,r26
 480 0290 BB0B      		sbc r27,r27
 481 0292 BC01      		movw r22,r24
 482 0294 CD01      		movw r24,r26
 483 0296 0E94 0000 		call __floatsisf
 484 029a DC01      		movw r26,r24
 485 029c CB01      		movw r24,r22
  62:lp_solve_5.5/lp_simplex.c ****     REAL deltaOF = (monitor->objstep[monitor->currentstep] -
 486               		.loc 2 62 0
 487 029e 9C01      		movw r18,r24
 488 02a0 AD01      		movw r20,r26
 489 02a2 C701      		movw r24,r14
 490 02a4 B601      		movw r22,r12
 491 02a6 0E94 0000 		call __divsf3
 492 02aa DC01      		movw r26,r24
 493 02ac CB01      		movw r24,r22
 494 02ae 8B83      		std Y+3,r24
 495 02b0 9C83      		std Y+4,r25
 496 02b2 AD83      		std Y+5,r26
 497 02b4 BE83      		std Y+6,r27
  64:lp_solve_5.5/lp_simplex.c ****     deltaOF /= MAX(1, (monitor->idxstep[monitor->currentstep] -
 498               		.loc 2 64 0
 499 02b6 8981      		ldd r24,Y+1
 500 02b8 9A81      		ldd r25,Y+2
 501 02ba FC01      		movw r30,r24
 502 02bc 868D      		ldd r24,Z+30
 503 02be 978D      		ldd r25,Z+31
 504 02c0 2981      		ldd r18,Y+1
 505 02c2 3A81      		ldd r19,Y+2
 506 02c4 0896      		adiw r24,8
 507 02c6 880F      		lsl r24
 508 02c8 991F      		rol r25
 509 02ca 820F      		add r24,r18
 510 02cc 931F      		adc r25,r19
 511 02ce FC01      		movw r30,r24
 512 02d0 2081      		ld r18,Z
 513 02d2 3181      		ldd r19,Z+1
 514 02d4 8981      		ldd r24,Y+1
 515 02d6 9A81      		ldd r25,Y+2
 516 02d8 FC01      		movw r30,r24
 517 02da 848D      		ldd r24,Z+28
 518 02dc 958D      		ldd r25,Z+29
 519 02de 4981      		ldd r20,Y+1
 520 02e0 5A81      		ldd r21,Y+2
 521 02e2 0896      		adiw r24,8
 522 02e4 880F      		lsl r24
 523 02e6 991F      		rol r25
 524 02e8 840F      		add r24,r20
 525 02ea 951F      		adc r25,r21
 526 02ec FC01      		movw r30,r24
 527 02ee 8081      		ld r24,Z
 528 02f0 9181      		ldd r25,Z+1
 529 02f2 A901      		movw r20,r18
 530 02f4 481B      		sub r20,r24
 531 02f6 590B      		sbc r21,r25
 532 02f8 CA01      		movw r24,r20
 533 02fa 1816      		cp __zero_reg__,r24
 534 02fc 1906      		cpc __zero_reg__,r25
 535 02fe 04F4      		brge .L12
 536               		.loc 2 64 0 is_stmt 0 discriminator 1
 537 0300 8981      		ldd r24,Y+1
 538 0302 9A81      		ldd r25,Y+2
 539 0304 FC01      		movw r30,r24
 540 0306 868D      		ldd r24,Z+30
 541 0308 978D      		ldd r25,Z+31
 542 030a 2981      		ldd r18,Y+1
 543 030c 3A81      		ldd r19,Y+2
 544 030e 0896      		adiw r24,8
 545 0310 880F      		lsl r24
 546 0312 991F      		rol r25
 547 0314 820F      		add r24,r18
 548 0316 931F      		adc r25,r19
 549 0318 FC01      		movw r30,r24
 550 031a 2081      		ld r18,Z
 551 031c 3181      		ldd r19,Z+1
 552 031e 8981      		ldd r24,Y+1
 553 0320 9A81      		ldd r25,Y+2
 554 0322 FC01      		movw r30,r24
 555 0324 848D      		ldd r24,Z+28
 556 0326 958D      		ldd r25,Z+29
 557 0328 4981      		ldd r20,Y+1
 558 032a 5A81      		ldd r21,Y+2
 559 032c 0896      		adiw r24,8
 560 032e 880F      		lsl r24
 561 0330 991F      		rol r25
 562 0332 840F      		add r24,r20
 563 0334 951F      		adc r25,r21
 564 0336 FC01      		movw r30,r24
 565 0338 8081      		ld r24,Z
 566 033a 9181      		ldd r25,Z+1
 567 033c A901      		movw r20,r18
 568 033e 481B      		sub r20,r24
 569 0340 590B      		sbc r21,r25
 570 0342 CA01      		movw r24,r20
 571 0344 092E      		mov __tmp_reg__,r25
 572 0346 000C      		lsl r0
 573 0348 AA0B      		sbc r26,r26
 574 034a BB0B      		sbc r27,r27
 575 034c BC01      		movw r22,r24
 576 034e CD01      		movw r24,r26
 577 0350 0E94 0000 		call __floatsisf
 578 0354 DC01      		movw r26,r24
 579 0356 CB01      		movw r24,r22
 580 0358 00C0      		rjmp .L13
 581               	.L12:
 582               		.loc 2 64 0 discriminator 2
 583 035a 80E0      		ldi r24,0
 584 035c 90E0      		ldi r25,0
 585 035e A0E8      		ldi r26,lo8(-128)
 586 0360 BFE3      		ldi r27,lo8(63)
 587               	.L13:
 588               		.loc 2 64 0 discriminator 4
 589 0362 9C01      		movw r18,r24
 590 0364 AD01      		movw r20,r26
 591 0366 6B81      		ldd r22,Y+3
 592 0368 7C81      		ldd r23,Y+4
 593 036a 8D81      		ldd r24,Y+5
 594 036c 9E81      		ldd r25,Y+6
 595 036e 0E94 0000 		call __divsf3
 596 0372 DC01      		movw r26,r24
 597 0374 CB01      		movw r24,r22
 598 0376 8B83      		std Y+3,r24
 599 0378 9C83      		std Y+4,r25
 600 037a AD83      		std Y+5,r26
 601 037c BE83      		std Y+6,r27
  65:lp_solve_5.5/lp_simplex.c ****                        monitor->idxstep[monitor->startstep]));
  66:lp_solve_5.5/lp_simplex.c ****     deltaOF = my_chsign(monitor->isdual, deltaOF);
 602               		.loc 2 66 0 is_stmt 1 discriminator 4
 603 037e 8981      		ldd r24,Y+1
 604 0380 9A81      		ldd r25,Y+2
 605 0382 835A      		subi r24,-93
 606 0384 9F4F      		sbci r25,-1
 607 0386 FC01      		movw r30,r24
 608 0388 8081      		ld r24,Z
 609 038a 8823      		tst r24
 610 038c 01F0      		breq .L14
 611               		.loc 2 66 0 is_stmt 0 discriminator 1
 612 038e 20E0      		ldi r18,0
 613 0390 30E0      		ldi r19,0
 614 0392 A901      		movw r20,r18
 615 0394 6B81      		ldd r22,Y+3
 616 0396 7C81      		ldd r23,Y+4
 617 0398 8D81      		ldd r24,Y+5
 618 039a 9E81      		ldd r25,Y+6
 619 039c 0E94 0000 		call __nesf2
 620 03a0 8823      		tst r24
 621 03a2 01F0      		breq .L14
 622               		.loc 2 66 0 discriminator 3
 623 03a4 8B81      		ldd r24,Y+3
 624 03a6 9C81      		ldd r25,Y+4
 625 03a8 AD81      		ldd r26,Y+5
 626 03aa BE81      		ldd r27,Y+6
 627 03ac B058      		subi r27,0x80
 628 03ae 00C0      		rjmp .L16
 629               	.L14:
 630               		.loc 2 66 0 discriminator 4
 631 03b0 8B81      		ldd r24,Y+3
 632 03b2 9C81      		ldd r25,Y+4
 633 03b4 AD81      		ldd r26,Y+5
 634 03b6 BE81      		ldd r27,Y+6
 635               	.L16:
 636               		.loc 2 66 0 discriminator 6
 637 03b8 8B83      		std Y+3,r24
 638 03ba 9C83      		std Y+4,r25
 639 03bc AD83      		std Y+5,r26
 640 03be BE83      		std Y+6,r27
  67:lp_solve_5.5/lp_simplex.c ****     return( (MYBOOL) (deltaOF < monitor->epsvalue) );
 641               		.loc 2 67 0 is_stmt 1 discriminator 6
 642 03c0 8981      		ldd r24,Y+1
 643 03c2 9A81      		ldd r25,Y+2
 644 03c4 825B      		subi r24,-78
 645 03c6 9F4F      		sbci r25,-1
 646 03c8 FC01      		movw r30,r24
 647 03ca 8081      		ld r24,Z
 648 03cc 9181      		ldd r25,Z+1
 649 03ce A281      		ldd r26,Z+2
 650 03d0 B381      		ldd r27,Z+3
 651 03d2 11E0      		ldi r17,lo8(1)
 652 03d4 2B81      		ldd r18,Y+3
 653 03d6 3C81      		ldd r19,Y+4
 654 03d8 4D81      		ldd r20,Y+5
 655 03da 5E81      		ldd r21,Y+6
 656 03dc BC01      		movw r22,r24
 657 03de CD01      		movw r24,r26
 658 03e0 0E94 0000 		call __gtsf2
 659 03e4 1816      		cp __zero_reg__,r24
 660 03e6 04F0      		brlt .L17
 661 03e8 10E0      		ldi r17,0
 662               	.L17:
 663 03ea 812F      		mov r24,r17
 664 03ec 00C0      		rjmp .L18
 665               	.L11:
 666               	.LBE2:
  68:lp_solve_5.5/lp_simplex.c ****   }
  69:lp_solve_5.5/lp_simplex.c ****   else
  70:lp_solve_5.5/lp_simplex.c ****     return( FALSE );
 667               		.loc 2 70 0
 668 03ee 80E0      		ldi r24,0
 669               	.L18:
 670               	/* epilogue start */
  71:lp_solve_5.5/lp_simplex.c **** }
 671               		.loc 2 71 0
 672 03f0 2896      		adiw r28,8
 673 03f2 0FB6      		in __tmp_reg__,__SREG__
 674 03f4 F894      		cli
 675 03f6 DEBF      		out __SP_H__,r29
 676 03f8 0FBE      		out __SREG__,__tmp_reg__
 677 03fa CDBF      		out __SP_L__,r28
 678 03fc DF91      		pop r29
 679 03fe CF91      		pop r28
 680 0400 1F91      		pop r17
 681 0402 FF90      		pop r15
 682 0404 EF90      		pop r14
 683 0406 DF90      		pop r13
 684 0408 CF90      		pop r12
 685 040a 0895      		ret
 686               		.cfi_endproc
 687               	.LFE10:
 689               	.global	__mulsf3
 690               	.global	__ltsf2
 691               	.global	stallMonitor_shortSteps
 693               	stallMonitor_shortSteps:
 694               	.LFB11:
  72:lp_solve_5.5/lp_simplex.c **** 
  73:lp_solve_5.5/lp_simplex.c **** STATIC MYBOOL stallMonitor_shortSteps(lprec *lp)
  74:lp_solve_5.5/lp_simplex.c **** {
 695               		.loc 2 74 0
 696               		.cfi_startproc
 697 040c 1F93      		push r17
 698               	.LCFI21:
 699               		.cfi_def_cfa_offset 3
 700               		.cfi_offset 17, -2
 701 040e CF93      		push r28
 702               	.LCFI22:
 703               		.cfi_def_cfa_offset 4
 704               		.cfi_offset 28, -3
 705 0410 DF93      		push r29
 706               	.LCFI23:
 707               		.cfi_def_cfa_offset 5
 708               		.cfi_offset 29, -4
 709 0412 CDB7      		in r28,__SP_L__
 710 0414 DEB7      		in r29,__SP_H__
 711               	.LCFI24:
 712               		.cfi_def_cfa_register 28
 713 0416 2897      		sbiw r28,8
 714               	.LCFI25:
 715               		.cfi_def_cfa_offset 13
 716 0418 0FB6      		in __tmp_reg__,__SREG__
 717 041a F894      		cli
 718 041c DEBF      		out __SP_H__,r29
 719 041e 0FBE      		out __SREG__,__tmp_reg__
 720 0420 CDBF      		out __SP_L__,r28
 721               	/* prologue: function */
 722               	/* frame size = 8 */
 723               	/* stack size = 11 */
 724               	.L__stack_usage = 11
 725 0422 9887      		std Y+8,r25
 726 0424 8F83      		std Y+7,r24
  75:lp_solve_5.5/lp_simplex.c ****   OBJmonrec *monitor = lp->monitor;
 727               		.loc 2 75 0
 728 0426 8F81      		ldd r24,Y+7
 729 0428 9885      		ldd r25,Y+8
 730 042a 8E53      		subi r24,62
 731 042c 9D4F      		sbci r25,-3
 732 042e FC01      		movw r30,r24
 733 0430 8081      		ld r24,Z
 734 0432 9181      		ldd r25,Z+1
 735 0434 9A83      		std Y+2,r25
 736 0436 8983      		std Y+1,r24
  76:lp_solve_5.5/lp_simplex.c **** 
  77:lp_solve_5.5/lp_simplex.c ****   if(monitor->countstep == OBJ_STEPS) {
 737               		.loc 2 77 0
 738 0438 8981      		ldd r24,Y+1
 739 043a 9A81      		ldd r25,Y+2
 740 043c FC01      		movw r30,r24
 741 043e 828D      		ldd r24,Z+26
 742 0440 938D      		ldd r25,Z+27
 743 0442 0597      		sbiw r24,5
 744 0444 01F0      		breq .+2
 745 0446 00C0      		rjmp .L21
 746               	.LBB3:
  78:lp_solve_5.5/lp_simplex.c ****     REAL deltaOF = MAX(1, (monitor->idxstep[monitor->currentstep] -
 747               		.loc 2 78 0
 748 0448 8981      		ldd r24,Y+1
 749 044a 9A81      		ldd r25,Y+2
 750 044c FC01      		movw r30,r24
 751 044e 868D      		ldd r24,Z+30
 752 0450 978D      		ldd r25,Z+31
 753 0452 2981      		ldd r18,Y+1
 754 0454 3A81      		ldd r19,Y+2
 755 0456 0896      		adiw r24,8
 756 0458 880F      		lsl r24
 757 045a 991F      		rol r25
 758 045c 820F      		add r24,r18
 759 045e 931F      		adc r25,r19
 760 0460 FC01      		movw r30,r24
 761 0462 2081      		ld r18,Z
 762 0464 3181      		ldd r19,Z+1
 763 0466 8981      		ldd r24,Y+1
 764 0468 9A81      		ldd r25,Y+2
 765 046a FC01      		movw r30,r24
 766 046c 848D      		ldd r24,Z+28
 767 046e 958D      		ldd r25,Z+29
 768 0470 4981      		ldd r20,Y+1
 769 0472 5A81      		ldd r21,Y+2
 770 0474 0896      		adiw r24,8
 771 0476 880F      		lsl r24
 772 0478 991F      		rol r25
 773 047a 840F      		add r24,r20
 774 047c 951F      		adc r25,r21
 775 047e FC01      		movw r30,r24
 776 0480 8081      		ld r24,Z
 777 0482 9181      		ldd r25,Z+1
 778 0484 A901      		movw r20,r18
 779 0486 481B      		sub r20,r24
 780 0488 590B      		sbc r21,r25
 781 048a CA01      		movw r24,r20
 782 048c 1816      		cp __zero_reg__,r24
 783 048e 1906      		cpc __zero_reg__,r25
 784 0490 04F0      		brlt .L22
 785 0492 81E0      		ldi r24,lo8(1)
 786 0494 90E0      		ldi r25,0
 787               	.L22:
  79:lp_solve_5.5/lp_simplex.c ****                            monitor->idxstep[monitor->startstep])) / monitor->countstep;
 788               		.loc 2 79 0
 789 0496 2981      		ldd r18,Y+1
 790 0498 3A81      		ldd r19,Y+2
 791 049a F901      		movw r30,r18
 792 049c 228D      		ldd r18,Z+26
 793 049e 338D      		ldd r19,Z+27
 794 04a0 B901      		movw r22,r18
 795 04a2 0E94 0000 		call __divmodhi4
 796 04a6 CB01      		movw r24,r22
  78:lp_solve_5.5/lp_simplex.c ****     REAL deltaOF = MAX(1, (monitor->idxstep[monitor->currentstep] -
 797               		.loc 2 78 0
 798 04a8 092E      		mov __tmp_reg__,r25
 799 04aa 000C      		lsl r0
 800 04ac AA0B      		sbc r26,r26
 801 04ae BB0B      		sbc r27,r27
 802 04b0 BC01      		movw r22,r24
 803 04b2 CD01      		movw r24,r26
 804 04b4 0E94 0000 		call __floatsisf
 805 04b8 DC01      		movw r26,r24
 806 04ba CB01      		movw r24,r22
 807 04bc 8B83      		std Y+3,r24
 808 04be 9C83      		std Y+4,r25
 809 04c0 AD83      		std Y+5,r26
 810 04c2 BE83      		std Y+6,r27
  80:lp_solve_5.5/lp_simplex.c ****     deltaOF = pow(deltaOF*OBJ_STEPS, 0.66);
 811               		.loc 2 80 0
 812 04c4 20E0      		ldi r18,0
 813 04c6 30E0      		ldi r19,0
 814 04c8 40EA      		ldi r20,lo8(-96)
 815 04ca 50E4      		ldi r21,lo8(64)
 816 04cc 6B81      		ldd r22,Y+3
 817 04ce 7C81      		ldd r23,Y+4
 818 04d0 8D81      		ldd r24,Y+5
 819 04d2 9E81      		ldd r25,Y+6
 820 04d4 0E94 0000 		call __mulsf3
 821 04d8 DC01      		movw r26,r24
 822 04da CB01      		movw r24,r22
 823 04dc 23EC      		ldi r18,lo8(-61)
 824 04de 35EF      		ldi r19,lo8(-11)
 825 04e0 48E2      		ldi r20,lo8(40)
 826 04e2 5FE3      		ldi r21,lo8(63)
 827 04e4 BC01      		movw r22,r24
 828 04e6 CD01      		movw r24,r26
 829 04e8 0E94 0000 		call pow
 830 04ec DC01      		movw r26,r24
 831 04ee CB01      		movw r24,r22
 832 04f0 8B83      		std Y+3,r24
 833 04f2 9C83      		std Y+4,r25
 834 04f4 AD83      		std Y+5,r26
 835 04f6 BE83      		std Y+6,r27
  81:lp_solve_5.5/lp_simplex.c ****     return( (MYBOOL) (deltaOF > monitor->limitstall[TRUE]) );
 836               		.loc 2 81 0
 837 04f8 8981      		ldd r24,Y+1
 838 04fa 9A81      		ldd r25,Y+2
 839 04fc FC01      		movw r30,r24
 840 04fe 8485      		ldd r24,Z+12
 841 0500 9585      		ldd r25,Z+13
 842 0502 092E      		mov __tmp_reg__,r25
 843 0504 000C      		lsl r0
 844 0506 AA0B      		sbc r26,r26
 845 0508 BB0B      		sbc r27,r27
 846 050a BC01      		movw r22,r24
 847 050c CD01      		movw r24,r26
 848 050e 0E94 0000 		call __floatsisf
 849 0512 DC01      		movw r26,r24
 850 0514 CB01      		movw r24,r22
 851 0516 11E0      		ldi r17,lo8(1)
 852 0518 2B81      		ldd r18,Y+3
 853 051a 3C81      		ldd r19,Y+4
 854 051c 4D81      		ldd r20,Y+5
 855 051e 5E81      		ldd r21,Y+6
 856 0520 BC01      		movw r22,r24
 857 0522 CD01      		movw r24,r26
 858 0524 0E94 0000 		call __ltsf2
 859 0528 8823      		tst r24
 860 052a 04F0      		brlt .L23
 861 052c 10E0      		ldi r17,0
 862               	.L23:
 863 052e 812F      		mov r24,r17
 864 0530 00C0      		rjmp .L24
 865               	.L21:
 866               	.LBE3:
  82:lp_solve_5.5/lp_simplex.c ****   }
  83:lp_solve_5.5/lp_simplex.c ****   else
  84:lp_solve_5.5/lp_simplex.c ****     return( FALSE );
 867               		.loc 2 84 0
 868 0532 80E0      		ldi r24,0
 869               	.L24:
 870               	/* epilogue start */
  85:lp_solve_5.5/lp_simplex.c **** }
 871               		.loc 2 85 0
 872 0534 2896      		adiw r28,8
 873 0536 0FB6      		in __tmp_reg__,__SREG__
 874 0538 F894      		cli
 875 053a DEBF      		out __SP_H__,r29
 876 053c 0FBE      		out __SREG__,__tmp_reg__
 877 053e CDBF      		out __SP_L__,r28
 878 0540 DF91      		pop r29
 879 0542 CF91      		pop r28
 880 0544 1F91      		pop r17
 881 0546 0895      		ret
 882               		.cfi_endproc
 883               	.LFE11:
 885               	.global	stallMonitor_reset
 887               	stallMonitor_reset:
 888               	.LFB12:
  86:lp_solve_5.5/lp_simplex.c **** 
  87:lp_solve_5.5/lp_simplex.c **** STATIC void stallMonitor_reset(lprec *lp)
  88:lp_solve_5.5/lp_simplex.c **** {
 889               		.loc 2 88 0
 890               		.cfi_startproc
 891 0548 CF93      		push r28
 892               	.LCFI26:
 893               		.cfi_def_cfa_offset 3
 894               		.cfi_offset 28, -2
 895 054a DF93      		push r29
 896               	.LCFI27:
 897               		.cfi_def_cfa_offset 4
 898               		.cfi_offset 29, -3
 899 054c 00D0      		rcall .
 900 054e 00D0      		rcall .
 901               	.LCFI28:
 902               		.cfi_def_cfa_offset 8
 903 0550 CDB7      		in r28,__SP_L__
 904 0552 DEB7      		in r29,__SP_H__
 905               	.LCFI29:
 906               		.cfi_def_cfa_register 28
 907               	/* prologue: function */
 908               	/* frame size = 4 */
 909               	/* stack size = 6 */
 910               	.L__stack_usage = 6
 911 0554 9C83      		std Y+4,r25
 912 0556 8B83      		std Y+3,r24
  89:lp_solve_5.5/lp_simplex.c ****   OBJmonrec *monitor = lp->monitor;
 913               		.loc 2 89 0
 914 0558 8B81      		ldd r24,Y+3
 915 055a 9C81      		ldd r25,Y+4
 916 055c 8E53      		subi r24,62
 917 055e 9D4F      		sbci r25,-3
 918 0560 FC01      		movw r30,r24
 919 0562 8081      		ld r24,Z
 920 0564 9181      		ldd r25,Z+1
 921 0566 9A83      		std Y+2,r25
 922 0568 8983      		std Y+1,r24
  90:lp_solve_5.5/lp_simplex.c **** 
  91:lp_solve_5.5/lp_simplex.c ****   monitor->ruleswitches = 0;
 923               		.loc 2 91 0
 924 056a 8981      		ldd r24,Y+1
 925 056c 9A81      		ldd r25,Y+2
 926 056e FC01      		movw r30,r24
 927 0570 1186      		std Z+9,__zero_reg__
 928 0572 1086      		std Z+8,__zero_reg__
  92:lp_solve_5.5/lp_simplex.c ****   monitor->Ncycle = 0;
 929               		.loc 2 92 0
 930 0574 8981      		ldd r24,Y+1
 931 0576 9A81      		ldd r25,Y+2
 932 0578 FC01      		movw r30,r24
 933 057a 15A2      		std Z+37,__zero_reg__
 934 057c 14A2      		std Z+36,__zero_reg__
  93:lp_solve_5.5/lp_simplex.c ****   monitor->Mcycle = 0;
 935               		.loc 2 93 0
 936 057e 8981      		ldd r24,Y+1
 937 0580 9A81      		ldd r25,Y+2
 938 0582 FC01      		movw r30,r24
 939 0584 17A2      		std Z+39,__zero_reg__
 940 0586 16A2      		std Z+38,__zero_reg__
  94:lp_solve_5.5/lp_simplex.c ****   monitor->Icount = 0;
 941               		.loc 2 94 0
 942 0588 8981      		ldd r24,Y+1
 943 058a 9A81      		ldd r25,Y+2
 944 058c FC01      		movw r30,r24
 945 058e 11A6      		std Z+41,__zero_reg__
 946 0590 10A6      		std Z+40,__zero_reg__
  95:lp_solve_5.5/lp_simplex.c ****   monitor->startstep = 0;
 947               		.loc 2 95 0
 948 0592 8981      		ldd r24,Y+1
 949 0594 9A81      		ldd r25,Y+2
 950 0596 FC01      		movw r30,r24
 951 0598 158E      		std Z+29,__zero_reg__
 952 059a 148E      		std Z+28,__zero_reg__
  96:lp_solve_5.5/lp_simplex.c ****   monitor->objstep[monitor->startstep] = lp->infinite;
 953               		.loc 2 96 0
 954 059c 8981      		ldd r24,Y+1
 955 059e 9A81      		ldd r25,Y+2
 956 05a0 FC01      		movw r30,r24
 957 05a2 248D      		ldd r18,Z+28
 958 05a4 358D      		ldd r19,Z+29
 959 05a6 8B81      		ldd r24,Y+3
 960 05a8 9C81      		ldd r25,Y+4
 961 05aa 865F      		subi r24,-10
 962 05ac 9C4F      		sbci r25,-4
 963 05ae FC01      		movw r30,r24
 964 05b0 8081      		ld r24,Z
 965 05b2 9181      		ldd r25,Z+1
 966 05b4 A281      		ldd r26,Z+2
 967 05b6 B381      		ldd r27,Z+3
 968 05b8 4981      		ldd r20,Y+1
 969 05ba 5A81      		ldd r21,Y+2
 970 05bc 220F      		lsl r18
 971 05be 331F      		rol r19
 972 05c0 220F      		lsl r18
 973 05c2 331F      		rol r19
 974 05c4 240F      		add r18,r20
 975 05c6 351F      		adc r19,r21
 976 05c8 2E5C      		subi r18,-50
 977 05ca 3F4F      		sbci r19,-1
 978 05cc F901      		movw r30,r18
 979 05ce 8083      		st Z,r24
 980 05d0 9183      		std Z+1,r25
 981 05d2 A283      		std Z+2,r26
 982 05d4 B383      		std Z+3,r27
  97:lp_solve_5.5/lp_simplex.c ****   monitor->idxstep[monitor->startstep] = monitor->Icount;
 983               		.loc 2 97 0
 984 05d6 8981      		ldd r24,Y+1
 985 05d8 9A81      		ldd r25,Y+2
 986 05da FC01      		movw r30,r24
 987 05dc 848D      		ldd r24,Z+28
 988 05de 958D      		ldd r25,Z+29
 989 05e0 2981      		ldd r18,Y+1
 990 05e2 3A81      		ldd r19,Y+2
 991 05e4 F901      		movw r30,r18
 992 05e6 20A5      		ldd r18,Z+40
 993 05e8 31A5      		ldd r19,Z+41
 994 05ea 4981      		ldd r20,Y+1
 995 05ec 5A81      		ldd r21,Y+2
 996 05ee 0896      		adiw r24,8
 997 05f0 880F      		lsl r24
 998 05f2 991F      		rol r25
 999 05f4 840F      		add r24,r20
 1000 05f6 951F      		adc r25,r21
 1001 05f8 FC01      		movw r30,r24
 1002 05fa 3183      		std Z+1,r19
 1003 05fc 2083      		st Z,r18
  98:lp_solve_5.5/lp_simplex.c ****   monitor->prevobj = 0;
 1004               		.loc 2 98 0
 1005 05fe 8981      		ldd r24,Y+1
 1006 0600 9A81      		ldd r25,Y+2
 1007 0602 FC01      		movw r30,r24
 1008 0604 16A6      		std Z+46,__zero_reg__
 1009 0606 17A6      		std Z+47,__zero_reg__
 1010 0608 10AA      		std Z+48,__zero_reg__
 1011 060a 11AA      		std Z+49,__zero_reg__
  99:lp_solve_5.5/lp_simplex.c ****   monitor->countstep = 1;
 1012               		.loc 2 99 0
 1013 060c 8981      		ldd r24,Y+1
 1014 060e 9A81      		ldd r25,Y+2
 1015 0610 21E0      		ldi r18,lo8(1)
 1016 0612 30E0      		ldi r19,0
 1017 0614 FC01      		movw r30,r24
 1018 0616 338F      		std Z+27,r19
 1019 0618 228F      		std Z+26,r18
 100:lp_solve_5.5/lp_simplex.c **** }
 1020               		.loc 2 100 0
 1021 061a 0000      		nop
 1022               	/* epilogue start */
 1023 061c 0F90      		pop __tmp_reg__
 1024 061e 0F90      		pop __tmp_reg__
 1025 0620 0F90      		pop __tmp_reg__
 1026 0622 0F90      		pop __tmp_reg__
 1027 0624 DF91      		pop r29
 1028 0626 CF91      		pop r28
 1029 0628 0895      		ret
 1030               		.cfi_endproc
 1031               	.LFE12:
 1033               	.global	__fixsfsi
 1034               	.global	stallMonitor_create
 1036               	stallMonitor_create:
 1037               	.LFB13:
 101:lp_solve_5.5/lp_simplex.c **** 
 102:lp_solve_5.5/lp_simplex.c **** STATIC MYBOOL stallMonitor_create(lprec *lp, MYBOOL isdual, char *funcname)
 103:lp_solve_5.5/lp_simplex.c **** {
 1038               		.loc 2 103 0
 1039               		.cfi_startproc
 1040 062a CF93      		push r28
 1041               	.LCFI30:
 1042               		.cfi_def_cfa_offset 3
 1043               		.cfi_offset 28, -2
 1044 062c DF93      		push r29
 1045               	.LCFI31:
 1046               		.cfi_def_cfa_offset 4
 1047               		.cfi_offset 29, -3
 1048 062e CDB7      		in r28,__SP_L__
 1049 0630 DEB7      		in r29,__SP_H__
 1050               	.LCFI32:
 1051               		.cfi_def_cfa_register 28
 1052 0632 2797      		sbiw r28,7
 1053               	.LCFI33:
 1054               		.cfi_def_cfa_offset 11
 1055 0634 0FB6      		in __tmp_reg__,__SREG__
 1056 0636 F894      		cli
 1057 0638 DEBF      		out __SP_H__,r29
 1058 063a 0FBE      		out __SREG__,__tmp_reg__
 1059 063c CDBF      		out __SP_L__,r28
 1060               	/* prologue: function */
 1061               	/* frame size = 7 */
 1062               	/* stack size = 9 */
 1063               	.L__stack_usage = 9
 1064 063e 9C83      		std Y+4,r25
 1065 0640 8B83      		std Y+3,r24
 1066 0642 6D83      		std Y+5,r22
 1067 0644 5F83      		std Y+7,r21
 1068 0646 4E83      		std Y+6,r20
 104:lp_solve_5.5/lp_simplex.c ****   OBJmonrec *monitor = NULL;
 1069               		.loc 2 104 0
 1070 0648 1A82      		std Y+2,__zero_reg__
 1071 064a 1982      		std Y+1,__zero_reg__
 105:lp_solve_5.5/lp_simplex.c ****   if(lp->monitor != NULL)
 1072               		.loc 2 105 0
 1073 064c 8B81      		ldd r24,Y+3
 1074 064e 9C81      		ldd r25,Y+4
 1075 0650 8E53      		subi r24,62
 1076 0652 9D4F      		sbci r25,-3
 1077 0654 FC01      		movw r30,r24
 1078 0656 8081      		ld r24,Z
 1079 0658 9181      		ldd r25,Z+1
 1080 065a 892B      		or r24,r25
 1081 065c 01F0      		breq .L27
 106:lp_solve_5.5/lp_simplex.c ****     return( FALSE );
 1082               		.loc 2 106 0
 1083 065e 80E0      		ldi r24,0
 1084 0660 00C0      		rjmp .L28
 1085               	.L27:
 107:lp_solve_5.5/lp_simplex.c **** 
 108:lp_solve_5.5/lp_simplex.c ****   monitor = (OBJmonrec *) calloc(sizeof(*monitor), 1);
 1086               		.loc 2 108 0
 1087 0662 61E0      		ldi r22,lo8(1)
 1088 0664 70E0      		ldi r23,0
 1089 0666 8FE5      		ldi r24,lo8(95)
 1090 0668 90E0      		ldi r25,0
 1091 066a 0E94 0000 		call calloc
 1092 066e 9A83      		std Y+2,r25
 1093 0670 8983      		std Y+1,r24
 109:lp_solve_5.5/lp_simplex.c ****   if(monitor == NULL)
 1094               		.loc 2 109 0
 1095 0672 8981      		ldd r24,Y+1
 1096 0674 9A81      		ldd r25,Y+2
 1097 0676 892B      		or r24,r25
 1098 0678 01F4      		brne .L29
 110:lp_solve_5.5/lp_simplex.c ****     return( FALSE );
 1099               		.loc 2 110 0
 1100 067a 80E0      		ldi r24,0
 1101 067c 00C0      		rjmp .L28
 1102               	.L29:
 111:lp_solve_5.5/lp_simplex.c **** 
 112:lp_solve_5.5/lp_simplex.c ****   monitor->lp = lp;
 1103               		.loc 2 112 0
 1104 067e 8981      		ldd r24,Y+1
 1105 0680 9A81      		ldd r25,Y+2
 1106 0682 2B81      		ldd r18,Y+3
 1107 0684 3C81      		ldd r19,Y+4
 1108 0686 FC01      		movw r30,r24
 1109 0688 3183      		std Z+1,r19
 1110 068a 2083      		st Z,r18
 113:lp_solve_5.5/lp_simplex.c ****   strcpy(monitor->spxfunc, funcname);
 1111               		.loc 2 113 0
 1112 068c 8981      		ldd r24,Y+1
 1113 068e 9A81      		ldd r25,Y+2
 1114 0690 8E5A      		subi r24,-82
 1115 0692 9F4F      		sbci r25,-1
 1116 0694 2E81      		ldd r18,Y+6
 1117 0696 3F81      		ldd r19,Y+7
 1118 0698 B901      		movw r22,r18
 1119 069a 0E94 0000 		call strcpy
 114:lp_solve_5.5/lp_simplex.c ****   monitor->isdual = isdual;
 1120               		.loc 2 114 0
 1121 069e 8981      		ldd r24,Y+1
 1122 06a0 9A81      		ldd r25,Y+2
 1123 06a2 835A      		subi r24,-93
 1124 06a4 9F4F      		sbci r25,-1
 1125 06a6 2D81      		ldd r18,Y+5
 1126 06a8 FC01      		movw r30,r24
 1127 06aa 2083      		st Z,r18
 115:lp_solve_5.5/lp_simplex.c ****   monitor->pivdynamic = is_piv_mode(lp, PRICE_ADAPTIVE);
 1128               		.loc 2 115 0
 1129 06ac 8B81      		ldd r24,Y+3
 1130 06ae 9C81      		ldd r25,Y+4
 1131 06b0 60E2      		ldi r22,lo8(32)
 1132 06b2 70E0      		ldi r23,0
 1133 06b4 0E94 0000 		call is_piv_mode
 1134 06b8 282F      		mov r18,r24
 1135 06ba 8981      		ldd r24,Y+1
 1136 06bc 9A81      		ldd r25,Y+2
 1137 06be 845A      		subi r24,-92
 1138 06c0 9F4F      		sbci r25,-1
 1139 06c2 FC01      		movw r30,r24
 1140 06c4 2083      		st Z,r18
 116:lp_solve_5.5/lp_simplex.c ****   monitor->oldpivstrategy = lp->piv_strategy;
 1141               		.loc 2 116 0
 1142 06c6 8B81      		ldd r24,Y+3
 1143 06c8 9C81      		ldd r25,Y+4
 1144 06ca 805A      		subi r24,-96
 1145 06cc 9D4F      		sbci r25,-3
 1146 06ce FC01      		movw r30,r24
 1147 06d0 2081      		ld r18,Z
 1148 06d2 3181      		ldd r19,Z+1
 1149 06d4 8981      		ldd r24,Y+1
 1150 06d6 9A81      		ldd r25,Y+2
 1151 06d8 FC01      		movw r30,r24
 1152 06da 3383      		std Z+3,r19
 1153 06dc 2283      		std Z+2,r18
 117:lp_solve_5.5/lp_simplex.c ****   monitor->oldpivrule = get_piv_rule(lp);
 1154               		.loc 2 117 0
 1155 06de 8B81      		ldd r24,Y+3
 1156 06e0 9C81      		ldd r25,Y+4
 1157 06e2 0E94 0000 		call get_piv_rule
 1158 06e6 9C01      		movw r18,r24
 1159 06e8 8981      		ldd r24,Y+1
 1160 06ea 9A81      		ldd r25,Y+2
 1161 06ec FC01      		movw r30,r24
 1162 06ee 3583      		std Z+5,r19
 1163 06f0 2483      		std Z+4,r18
 118:lp_solve_5.5/lp_simplex.c ****   if(MAX_STALLCOUNT <= 1)
 119:lp_solve_5.5/lp_simplex.c ****     monitor->limitstall[FALSE] = 0;
 120:lp_solve_5.5/lp_simplex.c ****   else
 121:lp_solve_5.5/lp_simplex.c ****     monitor->limitstall[FALSE] = MAX(MAX_STALLCOUNT,
 1164               		.loc 2 121 0
 1165 06f2 8B81      		ldd r24,Y+3
 1166 06f4 9C81      		ldd r25,Y+4
 1167 06f6 8651      		subi r24,22
 1168 06f8 9E4F      		sbci r25,-2
 1169 06fa FC01      		movw r30,r24
 1170 06fc 2081      		ld r18,Z
 1171 06fe 3181      		ldd r19,Z+1
 1172 0700 8B81      		ldd r24,Y+3
 1173 0702 9C81      		ldd r25,Y+4
 1174 0704 8451      		subi r24,20
 1175 0706 9E4F      		sbci r25,-2
 1176 0708 FC01      		movw r30,r24
 1177 070a 8081      		ld r24,Z
 1178 070c 9181      		ldd r25,Z+1
 1179 070e 820F      		add r24,r18
 1180 0710 931F      		adc r25,r19
 1181 0712 092E      		mov __tmp_reg__,r25
 1182 0714 000C      		lsl r0
 1183 0716 AA0B      		sbc r26,r26
 1184 0718 BB0B      		sbc r27,r27
 1185 071a BC01      		movw r22,r24
 1186 071c CD01      		movw r24,r26
 1187 071e 0E94 0000 		call __floatsisf
 1188 0722 DC01      		movw r26,r24
 1189 0724 CB01      		movw r24,r22
 1190 0726 20E0      		ldi r18,0
 1191 0728 30E0      		ldi r19,0
 1192 072a 40E0      		ldi r20,0
 1193 072c 50E4      		ldi r21,lo8(64)
 1194 072e BC01      		movw r22,r24
 1195 0730 CD01      		movw r24,r26
 1196 0732 0E94 0000 		call __divsf3
 1197 0736 DC01      		movw r26,r24
 1198 0738 CB01      		movw r24,r22
 1199 073a 23E8      		ldi r18,lo8(-125)
 1200 073c 30EC      		ldi r19,lo8(-64)
 1201 073e 4AE2      		ldi r20,lo8(42)
 1202 0740 5FE3      		ldi r21,lo8(63)
 1203 0742 BC01      		movw r22,r24
 1204 0744 CD01      		movw r24,r26
 1205 0746 0E94 0000 		call pow
 1206 074a DC01      		movw r26,r24
 1207 074c CB01      		movw r24,r22
 1208 074e BC01      		movw r22,r24
 1209 0750 CD01      		movw r24,r26
 1210 0752 0E94 0000 		call __fixsfsi
 1211 0756 DC01      		movw r26,r24
 1212 0758 CB01      		movw r24,r22
 1213 075a 8C30      		cpi r24,12
 1214 075c 9105      		cpc r25,__zero_reg__
 1215 075e 04F4      		brge .L30
 1216 0760 8CE0      		ldi r24,lo8(12)
 1217 0762 90E0      		ldi r25,0
 1218               	.L30:
 1219 0764 2981      		ldd r18,Y+1
 1220 0766 3A81      		ldd r19,Y+2
 1221 0768 F901      		movw r30,r18
 1222 076a 9387      		std Z+11,r25
 1223 076c 8287      		std Z+10,r24
 122:lp_solve_5.5/lp_simplex.c ****                                      (int) pow((REAL) (lp->rows+lp->columns)/2, 0.667));
 123:lp_solve_5.5/lp_simplex.c **** #if 1
 124:lp_solve_5.5/lp_simplex.c ****   monitor->limitstall[FALSE] *= 2+2;  /* Expand degeneracy/stalling tolerance range */
 1224               		.loc 2 124 0
 1225 076e 8981      		ldd r24,Y+1
 1226 0770 9A81      		ldd r25,Y+2
 1227 0772 FC01      		movw r30,r24
 1228 0774 8285      		ldd r24,Z+10
 1229 0776 9385      		ldd r25,Z+11
 1230 0778 9C01      		movw r18,r24
 1231 077a 220F      		lsl r18
 1232 077c 331F      		rol r19
 1233 077e 220F      		lsl r18
 1234 0780 331F      		rol r19
 1235 0782 8981      		ldd r24,Y+1
 1236 0784 9A81      		ldd r25,Y+2
 1237 0786 FC01      		movw r30,r24
 1238 0788 3387      		std Z+11,r19
 1239 078a 2287      		std Z+10,r18
 125:lp_solve_5.5/lp_simplex.c **** #endif
 126:lp_solve_5.5/lp_simplex.c ****   monitor->limitstall[TRUE] = monitor->limitstall[FALSE];
 1240               		.loc 2 126 0
 1241 078c 8981      		ldd r24,Y+1
 1242 078e 9A81      		ldd r25,Y+2
 1243 0790 FC01      		movw r30,r24
 1244 0792 2285      		ldd r18,Z+10
 1245 0794 3385      		ldd r19,Z+11
 1246 0796 8981      		ldd r24,Y+1
 1247 0798 9A81      		ldd r25,Y+2
 1248 079a FC01      		movw r30,r24
 1249 079c 3587      		std Z+13,r19
 1250 079e 2487      		std Z+12,r18
 127:lp_solve_5.5/lp_simplex.c ****   if(monitor->oldpivrule == PRICER_DEVEX) /* Increase tolerance since primal Steepest Edge is expen
 1251               		.loc 2 127 0
 1252 07a0 8981      		ldd r24,Y+1
 1253 07a2 9A81      		ldd r25,Y+2
 1254 07a4 FC01      		movw r30,r24
 1255 07a6 8481      		ldd r24,Z+4
 1256 07a8 9581      		ldd r25,Z+5
 1257 07aa 0297      		sbiw r24,2
 1258 07ac 01F4      		brne .L34
 128:lp_solve_5.5/lp_simplex.c ****     monitor->limitstall[TRUE] *= 2;
 1259               		.loc 2 128 0
 1260 07ae 8981      		ldd r24,Y+1
 1261 07b0 9A81      		ldd r25,Y+2
 1262 07b2 FC01      		movw r30,r24
 1263 07b4 8485      		ldd r24,Z+12
 1264 07b6 9585      		ldd r25,Z+13
 1265 07b8 9C01      		movw r18,r24
 1266 07ba 220F      		lsl r18
 1267 07bc 331F      		rol r19
 1268 07be 8981      		ldd r24,Y+1
 1269 07c0 9A81      		ldd r25,Y+2
 1270 07c2 FC01      		movw r30,r24
 1271 07c4 3587      		std Z+13,r19
 1272 07c6 2487      		std Z+12,r18
 1273               	.L34:
 129:lp_solve_5.5/lp_simplex.c ****   if(MAX_RULESWITCH <= 0)
 130:lp_solve_5.5/lp_simplex.c ****     monitor->limitruleswitches = MAXINT32;
 131:lp_solve_5.5/lp_simplex.c ****   else
 132:lp_solve_5.5/lp_simplex.c ****     monitor->limitruleswitches = MAX(MAX_RULESWITCH,
 1274               		.loc 2 132 0
 1275 07c8 8B81      		ldd r24,Y+3
 1276 07ca 9C81      		ldd r25,Y+4
 1277 07cc 8651      		subi r24,22
 1278 07ce 9E4F      		sbci r25,-2
 1279 07d0 FC01      		movw r30,r24
 1280 07d2 8081      		ld r24,Z
 1281 07d4 9181      		ldd r25,Z+1
 1282 07d6 4997      		sbiw r24,25
 1283 07d8 04F0      		brlt .L32
 1284               		.loc 2 132 0 is_stmt 0 discriminator 1
 1285 07da 8B81      		ldd r24,Y+3
 1286 07dc 9C81      		ldd r25,Y+4
 1287 07de 8651      		subi r24,22
 1288 07e0 9E4F      		sbci r25,-2
 1289 07e2 FC01      		movw r30,r24
 1290 07e4 8081      		ld r24,Z
 1291 07e6 9181      		ldd r25,Z+1
 1292 07e8 25E0      		ldi r18,lo8(5)
 1293 07ea 30E0      		ldi r19,0
 1294 07ec B901      		movw r22,r18
 1295 07ee 0E94 0000 		call __divmodhi4
 1296 07f2 CB01      		movw r24,r22
 1297 07f4 00C0      		rjmp .L33
 1298               	.L32:
 1299               		.loc 2 132 0 discriminator 2
 1300 07f6 85E0      		ldi r24,lo8(5)
 1301 07f8 90E0      		ldi r25,0
 1302               	.L33:
 1303               		.loc 2 132 0 discriminator 4
 1304 07fa 2981      		ldd r18,Y+1
 1305 07fc 3A81      		ldd r19,Y+2
 1306 07fe F901      		movw r30,r18
 1307 0800 9787      		std Z+15,r25
 1308 0802 8687      		std Z+14,r24
 133:lp_solve_5.5/lp_simplex.c ****                                      lp->rows/MAX_RULESWITCH);
 134:lp_solve_5.5/lp_simplex.c ****   monitor->epsvalue = lp->epsprimal; /* lp->epsvalue; */
 1309               		.loc 2 134 0 is_stmt 1 discriminator 4
 1310 0804 8B81      		ldd r24,Y+3
 1311 0806 9C81      		ldd r25,Y+4
 1312 0808 865E      		subi r24,-26
 1313 080a 9C4F      		sbci r25,-4
 1314 080c FC01      		movw r30,r24
 1315 080e 8081      		ld r24,Z
 1316 0810 9181      		ldd r25,Z+1
 1317 0812 A281      		ldd r26,Z+2
 1318 0814 B381      		ldd r27,Z+3
 1319 0816 2981      		ldd r18,Y+1
 1320 0818 3A81      		ldd r19,Y+2
 1321 081a 225B      		subi r18,-78
 1322 081c 3F4F      		sbci r19,-1
 1323 081e F901      		movw r30,r18
 1324 0820 8083      		st Z,r24
 1325 0822 9183      		std Z+1,r25
 1326 0824 A283      		std Z+2,r26
 1327 0826 B383      		std Z+3,r27
 135:lp_solve_5.5/lp_simplex.c ****   lp->monitor = monitor;
 1328               		.loc 2 135 0 discriminator 4
 1329 0828 8B81      		ldd r24,Y+3
 1330 082a 9C81      		ldd r25,Y+4
 1331 082c 8E53      		subi r24,62
 1332 082e 9D4F      		sbci r25,-3
 1333 0830 2981      		ldd r18,Y+1
 1334 0832 3A81      		ldd r19,Y+2
 1335 0834 FC01      		movw r30,r24
 1336 0836 3183      		std Z+1,r19
 1337 0838 2083      		st Z,r18
 136:lp_solve_5.5/lp_simplex.c ****   stallMonitor_reset(lp);
 1338               		.loc 2 136 0 discriminator 4
 1339 083a 8B81      		ldd r24,Y+3
 1340 083c 9C81      		ldd r25,Y+4
 1341 083e 0E94 0000 		call stallMonitor_reset
 137:lp_solve_5.5/lp_simplex.c ****   lp->suminfeas = lp->infinite;
 1342               		.loc 2 137 0 discriminator 4
 1343 0842 8B81      		ldd r24,Y+3
 1344 0844 9C81      		ldd r25,Y+4
 1345 0846 865F      		subi r24,-10
 1346 0848 9C4F      		sbci r25,-4
 1347 084a FC01      		movw r30,r24
 1348 084c 8081      		ld r24,Z
 1349 084e 9181      		ldd r25,Z+1
 1350 0850 A281      		ldd r26,Z+2
 1351 0852 B381      		ldd r27,Z+3
 1352 0854 2B81      		ldd r18,Y+3
 1353 0856 3C81      		ldd r19,Y+4
 1354 0858 2C51      		subi r18,28
 1355 085a 3D4F      		sbci r19,-3
 1356 085c F901      		movw r30,r18
 1357 085e 8083      		st Z,r24
 1358 0860 9183      		std Z+1,r25
 1359 0862 A283      		std Z+2,r26
 1360 0864 B383      		std Z+3,r27
 138:lp_solve_5.5/lp_simplex.c ****   return( TRUE );
 1361               		.loc 2 138 0 discriminator 4
 1362 0866 81E0      		ldi r24,lo8(1)
 1363               	.L28:
 1364               	/* epilogue start */
 139:lp_solve_5.5/lp_simplex.c **** }
 1365               		.loc 2 139 0
 1366 0868 2796      		adiw r28,7
 1367 086a 0FB6      		in __tmp_reg__,__SREG__
 1368 086c F894      		cli
 1369 086e DEBF      		out __SP_H__,r29
 1370 0870 0FBE      		out __SREG__,__tmp_reg__
 1371 0872 CDBF      		out __SP_L__,r28
 1372 0874 DF91      		pop r29
 1373 0876 CF91      		pop r28
 1374 0878 0895      		ret
 1375               		.cfi_endproc
 1376               	.LFE13:
 1378               		.section	.rodata
 1379               	.LC0:
 1380 0000 3C00      		.string	"<"
 1381               	.LC1:
 1382 0002 7C00      		.string	"|"
 1383               	.global	__floatdisf
 1384               	.LC2:
 1385 0004 2573 3A20 		.string	"%s: Objective at iter %10.0f is %18.12g (%4d: %4d %s- %4d)\n"
 1385      4F62 6A65 
 1385      6374 6976 
 1385      6520 6174 
 1385      2069 7465 
 1386               	.global	__addsf3
 1387               	.LC3:
 1388 0040 2573 3A20 		.string	"%s: Stalling at iter %10.0f; no alternative strategy left.\n"
 1388      5374 616C 
 1388      6C69 6E67 
 1388      2061 7420 
 1388      6974 6572 
 1389               	.LC4:
 1390 007c 2573 3A20 		.string	"%s: Stalling at iter %10.0f; changed to '%s' rule.\n"
 1390      5374 616C 
 1390      6C69 6E67 
 1390      2061 7420 
 1390      6974 6572 
 1391               	.LC5:
 1392 00b0 2573 3A20 		.string	"%s: Stalling at iter %10.0f; proceed to bound relaxation.\n"
 1392      5374 616C 
 1392      6C69 6E67 
 1392      2061 7420 
 1392      6974 6572 
 1393               	.LC6:
 1394 00eb 2E2E 2E72 		.string	"...returned to original pivot selection rule at iter %.0f.\n"
 1394      6574 7572 
 1394      6E65 6420 
 1394      746F 206F 
 1394      7269 6769 
 1395               	.global	__lesf2
 1396               		.text
 1397               	.global	stallMonitor_check
 1399               	stallMonitor_check:
 1400               	.LFB14:
 140:lp_solve_5.5/lp_simplex.c **** 
 141:lp_solve_5.5/lp_simplex.c **** STATIC MYBOOL stallMonitor_check(lprec *lp, int rownr, int colnr, int lastnr,
 142:lp_solve_5.5/lp_simplex.c ****                                  MYBOOL minit, MYBOOL approved, MYBOOL *forceoutEQ)
 143:lp_solve_5.5/lp_simplex.c **** {
 1401               		.loc 2 143 0
 1402               		.cfi_startproc
 1403 087a 4F92      		push r4
 1404               	.LCFI34:
 1405               		.cfi_def_cfa_offset 3
 1406               		.cfi_offset 4, -2
 1407 087c 5F92      		push r5
 1408               	.LCFI35:
 1409               		.cfi_def_cfa_offset 4
 1410               		.cfi_offset 5, -3
 1411 087e 6F92      		push r6
 1412               	.LCFI36:
 1413               		.cfi_def_cfa_offset 5
 1414               		.cfi_offset 6, -4
 1415 0880 7F92      		push r7
 1416               	.LCFI37:
 1417               		.cfi_def_cfa_offset 6
 1418               		.cfi_offset 7, -5
 1419 0882 8F92      		push r8
 1420               	.LCFI38:
 1421               		.cfi_def_cfa_offset 7
 1422               		.cfi_offset 8, -6
 1423 0884 9F92      		push r9
 1424               	.LCFI39:
 1425               		.cfi_def_cfa_offset 8
 1426               		.cfi_offset 9, -7
 1427 0886 AF92      		push r10
 1428               	.LCFI40:
 1429               		.cfi_def_cfa_offset 9
 1430               		.cfi_offset 10, -8
 1431 0888 BF92      		push r11
 1432               	.LCFI41:
 1433               		.cfi_def_cfa_offset 10
 1434               		.cfi_offset 11, -9
 1435 088a CF92      		push r12
 1436               	.LCFI42:
 1437               		.cfi_def_cfa_offset 11
 1438               		.cfi_offset 12, -10
 1439 088c DF92      		push r13
 1440               	.LCFI43:
 1441               		.cfi_def_cfa_offset 12
 1442               		.cfi_offset 13, -11
 1443 088e EF92      		push r14
 1444               	.LCFI44:
 1445               		.cfi_def_cfa_offset 13
 1446               		.cfi_offset 14, -12
 1447 0890 FF92      		push r15
 1448               	.LCFI45:
 1449               		.cfi_def_cfa_offset 14
 1450               		.cfi_offset 15, -13
 1451 0892 0F93      		push r16
 1452               	.LCFI46:
 1453               		.cfi_def_cfa_offset 15
 1454               		.cfi_offset 16, -14
 1455 0894 1F93      		push r17
 1456               	.LCFI47:
 1457               		.cfi_def_cfa_offset 16
 1458               		.cfi_offset 17, -15
 1459 0896 CF93      		push r28
 1460               	.LCFI48:
 1461               		.cfi_def_cfa_offset 17
 1462               		.cfi_offset 28, -16
 1463 0898 DF93      		push r29
 1464               	.LCFI49:
 1465               		.cfi_def_cfa_offset 18
 1466               		.cfi_offset 29, -17
 1467 089a CDB7      		in r28,__SP_L__
 1468 089c DEB7      		in r29,__SP_H__
 1469               	.LCFI50:
 1470               		.cfi_def_cfa_register 28
 1471 089e A197      		sbiw r28,33
 1472               	.LCFI51:
 1473               		.cfi_def_cfa_offset 51
 1474 08a0 0FB6      		in __tmp_reg__,__SREG__
 1475 08a2 F894      		cli
 1476 08a4 DEBF      		out __SP_H__,r29
 1477 08a6 0FBE      		out __SREG__,__tmp_reg__
 1478 08a8 CDBF      		out __SP_L__,r28
 1479               	/* prologue: function */
 1480               	/* frame size = 33 */
 1481               	/* stack size = 49 */
 1482               	.L__stack_usage = 49
 1483 08aa 9F8B      		std Y+23,r25
 1484 08ac 8E8B      		std Y+22,r24
 1485 08ae 798F      		std Y+25,r23
 1486 08b0 688F      		std Y+24,r22
 1487 08b2 5B8F      		std Y+27,r21
 1488 08b4 4A8F      		std Y+26,r20
 1489 08b6 3D8F      		std Y+29,r19
 1490 08b8 2C8F      		std Y+28,r18
 1491 08ba 0E8F      		std Y+30,r16
 1492 08bc EF8E      		std Y+31,r14
 1493 08be D9A2      		std Y+33,r13
 1494 08c0 C8A2      		std Y+32,r12
 144:lp_solve_5.5/lp_simplex.c ****   OBJmonrec *monitor = lp->monitor;
 1495               		.loc 2 144 0
 1496 08c2 8E89      		ldd r24,Y+22
 1497 08c4 9F89      		ldd r25,Y+23
 1498 08c6 8E53      		subi r24,62
 1499 08c8 9D4F      		sbci r25,-3
 1500 08ca FC01      		movw r30,r24
 1501 08cc 8081      		ld r24,Z
 1502 08ce 9181      		ldd r25,Z+1
 1503 08d0 9A87      		std Y+10,r25
 1504 08d2 8987      		std Y+9,r24
 145:lp_solve_5.5/lp_simplex.c ****   MYBOOL    isStalled, isCreeping, acceptance = TRUE;
 1505               		.loc 2 145 0
 1506 08d4 81E0      		ldi r24,lo8(1)
 1507 08d6 8A83      		std Y+2,r24
 146:lp_solve_5.5/lp_simplex.c ****   int       altrule,
 147:lp_solve_5.5/lp_simplex.c **** #ifdef Paranoia
 148:lp_solve_5.5/lp_simplex.c ****          msglevel = NORMAL;
 149:lp_solve_5.5/lp_simplex.c **** #else
 150:lp_solve_5.5/lp_simplex.c ****          msglevel = DETAILED;
 1508               		.loc 2 150 0
 1509 08d8 85E0      		ldi r24,lo8(5)
 1510 08da 90E0      		ldi r25,0
 1511 08dc 9C87      		std Y+12,r25
 1512 08de 8B87      		std Y+11,r24
 151:lp_solve_5.5/lp_simplex.c **** #endif
 152:lp_solve_5.5/lp_simplex.c ****   REAL   deltaobj = lp->suminfeas;
 1513               		.loc 2 152 0
 1514 08e0 8E89      		ldd r24,Y+22
 1515 08e2 9F89      		ldd r25,Y+23
 1516 08e4 8C51      		subi r24,28
 1517 08e6 9D4F      		sbci r25,-3
 1518 08e8 FC01      		movw r30,r24
 1519 08ea 8081      		ld r24,Z
 1520 08ec 9181      		ldd r25,Z+1
 1521 08ee A281      		ldd r26,Z+2
 1522 08f0 B381      		ldd r27,Z+3
 1523 08f2 8D87      		std Y+13,r24
 1524 08f4 9E87      		std Y+14,r25
 1525 08f6 AF87      		std Y+15,r26
 1526 08f8 B88B      		std Y+16,r27
 153:lp_solve_5.5/lp_simplex.c **** 
 154:lp_solve_5.5/lp_simplex.c ****   /* Accept unconditionally if this is the first or second call */
 155:lp_solve_5.5/lp_simplex.c ****   monitor->active = FALSE;
 1527               		.loc 2 155 0
 1528 08fa 8985      		ldd r24,Y+9
 1529 08fc 9A85      		ldd r25,Y+10
 1530 08fe 825A      		subi r24,-94
 1531 0900 9F4F      		sbci r25,-1
 1532 0902 FC01      		movw r30,r24
 1533 0904 1082      		st Z,__zero_reg__
 156:lp_solve_5.5/lp_simplex.c ****   if(monitor->Icount <= 1) {
 1534               		.loc 2 156 0
 1535 0906 8985      		ldd r24,Y+9
 1536 0908 9A85      		ldd r25,Y+10
 1537 090a FC01      		movw r30,r24
 1538 090c 80A5      		ldd r24,Z+40
 1539 090e 91A5      		ldd r25,Z+41
 1540 0910 0297      		sbiw r24,2
 1541 0912 04F4      		brge .L36
 157:lp_solve_5.5/lp_simplex.c ****     if(monitor->Icount == 1) {
 1542               		.loc 2 157 0
 1543 0914 8985      		ldd r24,Y+9
 1544 0916 9A85      		ldd r25,Y+10
 1545 0918 FC01      		movw r30,r24
 1546 091a 80A5      		ldd r24,Z+40
 1547 091c 91A5      		ldd r25,Z+41
 1548 091e 0197      		sbiw r24,1
 1549 0920 01F4      		brne .L37
 158:lp_solve_5.5/lp_simplex.c ****       monitor->prevobj = lp->rhs[0];
 1550               		.loc 2 158 0
 1551 0922 8E89      		ldd r24,Y+22
 1552 0924 9F89      		ldd r25,Y+23
 1553 0926 8855      		subi r24,88
 1554 0928 9D4F      		sbci r25,-3
 1555 092a FC01      		movw r30,r24
 1556 092c 8081      		ld r24,Z
 1557 092e 9181      		ldd r25,Z+1
 1558 0930 FC01      		movw r30,r24
 1559 0932 8081      		ld r24,Z
 1560 0934 9181      		ldd r25,Z+1
 1561 0936 A281      		ldd r26,Z+2
 1562 0938 B381      		ldd r27,Z+3
 1563 093a 2985      		ldd r18,Y+9
 1564 093c 3A85      		ldd r19,Y+10
 1565 093e F901      		movw r30,r18
 1566 0940 86A7      		std Z+46,r24
 1567 0942 97A7      		std Z+47,r25
 1568 0944 A0AB      		std Z+48,r26
 1569 0946 B1AB      		std Z+49,r27
 159:lp_solve_5.5/lp_simplex.c ****       monitor->previnfeas = deltaobj;
 1570               		.loc 2 159 0
 1571 0948 8985      		ldd r24,Y+9
 1572 094a 9A85      		ldd r25,Y+10
 1573 094c 9C01      		movw r18,r24
 1574 094e 265B      		subi r18,-74
 1575 0950 3F4F      		sbci r19,-1
 1576 0952 8D85      		ldd r24,Y+13
 1577 0954 9E85      		ldd r25,Y+14
 1578 0956 AF85      		ldd r26,Y+15
 1579 0958 B889      		ldd r27,Y+16
 1580 095a F901      		movw r30,r18
 1581 095c 8083      		st Z,r24
 1582 095e 9183      		std Z+1,r25
 1583 0960 A283      		std Z+2,r26
 1584 0962 B383      		std Z+3,r27
 1585               	.L37:
 160:lp_solve_5.5/lp_simplex.c ****     }
 161:lp_solve_5.5/lp_simplex.c ****     monitor->Icount++;
 1586               		.loc 2 161 0
 1587 0964 8985      		ldd r24,Y+9
 1588 0966 9A85      		ldd r25,Y+10
 1589 0968 FC01      		movw r30,r24
 1590 096a 80A5      		ldd r24,Z+40
 1591 096c 91A5      		ldd r25,Z+41
 1592 096e 9C01      		movw r18,r24
 1593 0970 2F5F      		subi r18,-1
 1594 0972 3F4F      		sbci r19,-1
 1595 0974 8985      		ldd r24,Y+9
 1596 0976 9A85      		ldd r25,Y+10
 1597 0978 FC01      		movw r30,r24
 1598 097a 31A7      		std Z+41,r19
 1599 097c 20A7      		std Z+40,r18
 162:lp_solve_5.5/lp_simplex.c ****     return( acceptance );
 1600               		.loc 2 162 0
 1601 097e 8A81      		ldd r24,Y+2
 1602 0980 00C0      		rjmp .L38
 1603               	.L36:
 163:lp_solve_5.5/lp_simplex.c ****   }
 164:lp_solve_5.5/lp_simplex.c **** 
 165:lp_solve_5.5/lp_simplex.c ****   /* Define progress as primal objective less sum of (primal/dual) infeasibilities */
 166:lp_solve_5.5/lp_simplex.c ****   monitor->thisobj = lp->rhs[0];
 1604               		.loc 2 166 0
 1605 0982 8E89      		ldd r24,Y+22
 1606 0984 9F89      		ldd r25,Y+23
 1607 0986 8855      		subi r24,88
 1608 0988 9D4F      		sbci r25,-3
 1609 098a FC01      		movw r30,r24
 1610 098c 8081      		ld r24,Z
 1611 098e 9181      		ldd r25,Z+1
 1612 0990 FC01      		movw r30,r24
 1613 0992 8081      		ld r24,Z
 1614 0994 9181      		ldd r25,Z+1
 1615 0996 A281      		ldd r26,Z+2
 1616 0998 B381      		ldd r27,Z+3
 1617 099a 2985      		ldd r18,Y+9
 1618 099c 3A85      		ldd r19,Y+10
 1619 099e F901      		movw r30,r18
 1620 09a0 82A7      		std Z+42,r24
 1621 09a2 93A7      		std Z+43,r25
 1622 09a4 A4A7      		std Z+44,r26
 1623 09a6 B5A7      		std Z+45,r27
 167:lp_solve_5.5/lp_simplex.c ****   monitor->thisinfeas = deltaobj;
 1624               		.loc 2 167 0
 1625 09a8 8985      		ldd r24,Y+9
 1626 09aa 9A85      		ldd r25,Y+10
 1627 09ac 9C01      		movw r18,r24
 1628 09ae 2A5B      		subi r18,-70
 1629 09b0 3F4F      		sbci r19,-1
 1630 09b2 8D85      		ldd r24,Y+13
 1631 09b4 9E85      		ldd r25,Y+14
 1632 09b6 AF85      		ldd r26,Y+15
 1633 09b8 B889      		ldd r27,Y+16
 1634 09ba F901      		movw r30,r18
 1635 09bc 8083      		st Z,r24
 1636 09be 9183      		std Z+1,r25
 1637 09c0 A283      		std Z+2,r26
 1638 09c2 B383      		std Z+3,r27
 168:lp_solve_5.5/lp_simplex.c ****   if(lp->spx_trace &&
 1639               		.loc 2 168 0
 1640 09c4 8E89      		ldd r24,Y+22
 1641 09c6 9F89      		ldd r25,Y+23
 1642 09c8 8E5F      		subi r24,-2
 1643 09ca 9D4F      		sbci r25,-3
 1644 09cc FC01      		movw r30,r24
 1645 09ce 8081      		ld r24,Z
 1646 09d0 8823      		tst r24
 1647 09d2 01F4      		brne .+2
 1648 09d4 00C0      		rjmp .L39
 1649               		.loc 2 168 0 is_stmt 0 discriminator 1
 1650 09d6 8C8D      		ldd r24,Y+28
 1651 09d8 9D8D      		ldd r25,Y+29
 1652 09da 1816      		cp __zero_reg__,r24
 1653 09dc 1906      		cpc __zero_reg__,r25
 1654 09de 04F0      		brlt .+2
 1655 09e0 00C0      		rjmp .L39
 169:lp_solve_5.5/lp_simplex.c ****      (lastnr > 0))
 170:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "%s: Objective at iter %10.0f is " RESULTVALUEMASK " (%4d: %4d %s- %4d)\n",
 1656               		.loc 2 170 0 is_stmt 1
 1657 09e2 8E8D      		ldd r24,Y+30
 1658 09e4 8823      		tst r24
 1659 09e6 01F4      		brne .L40
 1660               		.loc 2 170 0 is_stmt 0 discriminator 1
 1661 09e8 0F2E      		mov __tmp_reg__,r31
 1662 09ea F0E0      		ldi r31,lo8(.LC0)
 1663 09ec 4F2E      		mov r4,r31
 1664 09ee F0E0      		ldi r31,hi8(.LC0)
 1665 09f0 5F2E      		mov r5,r31
 1666 09f2 F02D      		mov r31,__tmp_reg__
 1667 09f4 00C0      		rjmp .L41
 1668               	.L40:
 1669               		.loc 2 170 0 discriminator 2
 1670 09f6 0F2E      		mov __tmp_reg__,r31
 1671 09f8 F0E0      		ldi r31,lo8(.LC1)
 1672 09fa 4F2E      		mov r4,r31
 1673 09fc F0E0      		ldi r31,hi8(.LC1)
 1674 09fe 5F2E      		mov r5,r31
 1675 0a00 F02D      		mov r31,__tmp_reg__
 1676               	.L41:
 1677               		.loc 2 170 0 discriminator 4
 1678 0a02 8985      		ldd r24,Y+9
 1679 0a04 9A85      		ldd r25,Y+10
 1680 0a06 FC01      		movw r30,r24
 1681 0a08 62A4      		ldd r6,Z+42
 1682 0a0a 73A4      		ldd r7,Z+43
 1683 0a0c 84A4      		ldd r8,Z+44
 1684 0a0e 95A4      		ldd r9,Z+45
 171:lp_solve_5.5/lp_simplex.c ****                        monitor->spxfunc,
 172:lp_solve_5.5/lp_simplex.c ****                        (double) get_total_iter(lp), monitor->thisobj, rownr, lastnr,
 1685               		.loc 2 172 0 is_stmt 1 discriminator 4
 1686 0a10 8E89      		ldd r24,Y+22
 1687 0a12 9F89      		ldd r25,Y+23
 1688 0a14 0E94 0000 		call get_total_iter
 1689 0a18 A22E      		mov r10,r18
 1690 0a1a B32E      		mov r11,r19
 1691 0a1c C42E      		mov r12,r20
 1692 0a1e D52E      		mov r13,r21
 1693 0a20 E62E      		mov r14,r22
 1694 0a22 F72E      		mov r15,r23
 1695 0a24 082F      		mov r16,r24
 1696 0a26 192F      		mov r17,r25
 170:lp_solve_5.5/lp_simplex.c ****                        monitor->spxfunc,
 1697               		.loc 2 170 0 discriminator 4
 1698 0a28 2A2D      		mov r18,r10
 1699 0a2a 3B2D      		mov r19,r11
 1700 0a2c 4C2D      		mov r20,r12
 1701 0a2e 5D2D      		mov r21,r13
 1702 0a30 6E2D      		mov r22,r14
 1703 0a32 7F2D      		mov r23,r15
 1704 0a34 802F      		mov r24,r16
 1705 0a36 912F      		mov r25,r17
 1706 0a38 0E94 0000 		call __floatdisf
 1707 0a3c DC01      		movw r26,r24
 1708 0a3e CB01      		movw r24,r22
 171:lp_solve_5.5/lp_simplex.c ****                        monitor->spxfunc,
 1709               		.loc 2 171 0 discriminator 4
 1710 0a40 2985      		ldd r18,Y+9
 1711 0a42 3A85      		ldd r19,Y+10
 1712 0a44 2E5A      		subi r18,-82
 1713 0a46 3F4F      		sbci r19,-1
 170:lp_solve_5.5/lp_simplex.c ****                        monitor->spxfunc,
 1714               		.loc 2 170 0 discriminator 4
 1715 0a48 4B8D      		ldd r20,Y+27
 1716 0a4a 4F93      		push r20
 1717 0a4c 4A8D      		ldd r20,Y+26
 1718 0a4e 4F93      		push r20
 1719 0a50 452D      		mov r20,r5
 1720 0a52 4F93      		push r20
 1721 0a54 442D      		mov r20,r4
 1722 0a56 4F93      		push r20
 1723 0a58 4D8D      		ldd r20,Y+29
 1724 0a5a 4F93      		push r20
 1725 0a5c 4C8D      		ldd r20,Y+28
 1726 0a5e 4F93      		push r20
 1727 0a60 498D      		ldd r20,Y+25
 1728 0a62 4F93      		push r20
 1729 0a64 488D      		ldd r20,Y+24
 1730 0a66 4F93      		push r20
 1731 0a68 492D      		mov r20,r9
 1732 0a6a 4F93      		push r20
 1733 0a6c 482D      		mov r20,r8
 1734 0a6e 4F93      		push r20
 1735 0a70 472D      		mov r20,r7
 1736 0a72 4F93      		push r20
 1737 0a74 462D      		mov r20,r6
 1738 0a76 4F93      		push r20
 1739 0a78 4B2F      		mov r20,r27
 1740 0a7a 4F93      		push r20
 1741 0a7c 4A2F      		mov r20,r26
 1742 0a7e 4F93      		push r20
 1743 0a80 492F      		mov r20,r25
 1744 0a82 4F93      		push r20
 1745 0a84 8F93      		push r24
 1746 0a86 832F      		mov r24,r19
 1747 0a88 8F93      		push r24
 1748 0a8a 822F      		mov r24,r18
 1749 0a8c 8F93      		push r24
 1750 0a8e 80E0      		ldi r24,lo8(.LC2)
 1751 0a90 90E0      		ldi r25,hi8(.LC2)
 1752 0a92 892F      		mov r24,r25
 1753 0a94 8F93      		push r24
 1754 0a96 80E0      		ldi r24,lo8(.LC2)
 1755 0a98 90E0      		ldi r25,hi8(.LC2)
 1756 0a9a 8F93      		push r24
 1757 0a9c 1F92      		push __zero_reg__
 1758 0a9e 84E0      		ldi r24,lo8(4)
 1759 0aa0 8F93      		push r24
 1760 0aa2 8F89      		ldd r24,Y+23
 1761 0aa4 8F93      		push r24
 1762 0aa6 8E89      		ldd r24,Y+22
 1763 0aa8 8F93      		push r24
 1764 0aaa 0E94 0000 		call report
 1765 0aae 8DB7      		in r24,__SP_L__
 1766 0ab0 9EB7      		in r25,__SP_H__
 1767 0ab2 4896      		adiw r24,24
 1768 0ab4 0FB6      		in __tmp_reg__,__SREG__
 1769 0ab6 F894      		cli
 1770 0ab8 DEBF      		out __SP_H__,r29
 1771 0aba 0FBE      		out __SREG__,__tmp_reg__
 1772 0abc CDBF      		out __SP_L__,r28
 1773               	.L39:
 173:lp_solve_5.5/lp_simplex.c ****                        my_if(minit == ITERATE_MAJORMAJOR, "<","|"), colnr);
 174:lp_solve_5.5/lp_simplex.c ****   monitor->pivrule = get_piv_rule(lp);
 1774               		.loc 2 174 0
 1775 0abe 8E89      		ldd r24,Y+22
 1776 0ac0 9F89      		ldd r25,Y+23
 1777 0ac2 0E94 0000 		call get_piv_rule
 1778 0ac6 9C01      		movw r18,r24
 1779 0ac8 8985      		ldd r24,Y+9
 1780 0aca 9A85      		ldd r25,Y+10
 1781 0acc FC01      		movw r30,r24
 1782 0ace 3783      		std Z+7,r19
 1783 0ad0 2683      		std Z+6,r18
 175:lp_solve_5.5/lp_simplex.c **** 
 176:lp_solve_5.5/lp_simplex.c ****   /* Check if we have a stationary solution at selected tolerance level;
 177:lp_solve_5.5/lp_simplex.c ****      allow some difference in case we just refactorized the basis. */
 178:lp_solve_5.5/lp_simplex.c ****   deltaobj = my_reldiff(monitor->thisobj, monitor->prevobj);
 1784               		.loc 2 178 0
 1785 0ad2 8985      		ldd r24,Y+9
 1786 0ad4 9A85      		ldd r25,Y+10
 1787 0ad6 FC01      		movw r30,r24
 1788 0ad8 82A5      		ldd r24,Z+42
 1789 0ada 93A5      		ldd r25,Z+43
 1790 0adc A4A5      		ldd r26,Z+44
 1791 0ade B5A5      		ldd r27,Z+45
 1792 0ae0 2985      		ldd r18,Y+9
 1793 0ae2 3A85      		ldd r19,Y+10
 1794 0ae4 F901      		movw r30,r18
 1795 0ae6 26A5      		ldd r18,Z+46
 1796 0ae8 37A5      		ldd r19,Z+47
 1797 0aea 40A9      		ldd r20,Z+48
 1798 0aec 51A9      		ldd r21,Z+49
 1799 0aee BC01      		movw r22,r24
 1800 0af0 CD01      		movw r24,r26
 1801 0af2 0E94 0000 		call __subsf3
 1802 0af6 DC01      		movw r26,r24
 1803 0af8 CB01      		movw r24,r22
 1804 0afa 6C01      		movw r12,r24
 1805 0afc 7D01      		movw r14,r26
 1806 0afe 8985      		ldd r24,Y+9
 1807 0b00 9A85      		ldd r25,Y+10
 1808 0b02 FC01      		movw r30,r24
 1809 0b04 86A5      		ldd r24,Z+46
 1810 0b06 97A5      		ldd r25,Z+47
 1811 0b08 A0A9      		ldd r26,Z+48
 1812 0b0a B1A9      		ldd r27,Z+49
 1813 0b0c BF77      		andi r27,0x7f
 1814 0b0e 20E0      		ldi r18,0
 1815 0b10 30E0      		ldi r19,0
 1816 0b12 40E8      		ldi r20,lo8(-128)
 1817 0b14 5FE3      		ldi r21,lo8(63)
 1818 0b16 BC01      		movw r22,r24
 1819 0b18 CD01      		movw r24,r26
 1820 0b1a 0E94 0000 		call __addsf3
 1821 0b1e DC01      		movw r26,r24
 1822 0b20 CB01      		movw r24,r22
 1823 0b22 9C01      		movw r18,r24
 1824 0b24 AD01      		movw r20,r26
 1825 0b26 C701      		movw r24,r14
 1826 0b28 B601      		movw r22,r12
 1827 0b2a 0E94 0000 		call __divsf3
 1828 0b2e DC01      		movw r26,r24
 1829 0b30 CB01      		movw r24,r22
 1830 0b32 8D87      		std Y+13,r24
 1831 0b34 9E87      		std Y+14,r25
 1832 0b36 AF87      		std Y+15,r26
 1833 0b38 B88B      		std Y+16,r27
 179:lp_solve_5.5/lp_simplex.c ****   deltaobj = fabs(deltaobj); /* Pre v5.2 version */
 1834               		.loc 2 179 0
 1835 0b3a 8D85      		ldd r24,Y+13
 1836 0b3c 9E85      		ldd r25,Y+14
 1837 0b3e AF85      		ldd r26,Y+15
 1838 0b40 B889      		ldd r27,Y+16
 1839 0b42 BF77      		andi r27,0x7f
 1840 0b44 8D87      		std Y+13,r24
 1841 0b46 9E87      		std Y+14,r25
 1842 0b48 AF87      		std Y+15,r26
 1843 0b4a B88B      		std Y+16,r27
 180:lp_solve_5.5/lp_simplex.c ****   isStalled = (MYBOOL) (deltaobj < monitor->epsvalue);
 1844               		.loc 2 180 0
 1845 0b4c 8985      		ldd r24,Y+9
 1846 0b4e 9A85      		ldd r25,Y+10
 1847 0b50 825B      		subi r24,-78
 1848 0b52 9F4F      		sbci r25,-1
 1849 0b54 FC01      		movw r30,r24
 1850 0b56 8081      		ld r24,Z
 1851 0b58 9181      		ldd r25,Z+1
 1852 0b5a A281      		ldd r26,Z+2
 1853 0b5c B381      		ldd r27,Z+3
 1854 0b5e 11E0      		ldi r17,lo8(1)
 1855 0b60 2D85      		ldd r18,Y+13
 1856 0b62 3E85      		ldd r19,Y+14
 1857 0b64 4F85      		ldd r20,Y+15
 1858 0b66 5889      		ldd r21,Y+16
 1859 0b68 BC01      		movw r22,r24
 1860 0b6a CD01      		movw r24,r26
 1861 0b6c 0E94 0000 		call __gtsf2
 1862 0b70 1816      		cp __zero_reg__,r24
 1863 0b72 04F0      		brlt .L42
 1864 0b74 10E0      		ldi r17,0
 1865               	.L42:
 1866 0b76 1983      		std Y+1,r17
 181:lp_solve_5.5/lp_simplex.c **** 
 182:lp_solve_5.5/lp_simplex.c ****   /* Also require that we have a measure of infeasibility-stalling */
 183:lp_solve_5.5/lp_simplex.c ****   if(isStalled) {
 1867               		.loc 2 183 0
 1868 0b78 8981      		ldd r24,Y+1
 1869 0b7a 8823      		tst r24
 1870 0b7c 01F4      		brne .+2
 1871 0b7e 00C0      		rjmp .L43
 1872               	.LBB4:
 184:lp_solve_5.5/lp_simplex.c ****     REAL testvalue, refvalue = monitor->epsvalue;
 1873               		.loc 2 184 0
 1874 0b80 8985      		ldd r24,Y+9
 1875 0b82 9A85      		ldd r25,Y+10
 1876 0b84 825B      		subi r24,-78
 1877 0b86 9F4F      		sbci r25,-1
 1878 0b88 FC01      		movw r30,r24
 1879 0b8a 8081      		ld r24,Z
 1880 0b8c 9181      		ldd r25,Z+1
 1881 0b8e A281      		ldd r26,Z+2
 1882 0b90 B381      		ldd r27,Z+3
 1883 0b92 8D83      		std Y+5,r24
 1884 0b94 9E83      		std Y+6,r25
 1885 0b96 AF83      		std Y+7,r26
 1886 0b98 B887      		std Y+8,r27
 185:lp_solve_5.5/lp_simplex.c **** #if 1
 186:lp_solve_5.5/lp_simplex.c ****     if(monitor->isdual)
 1887               		.loc 2 186 0
 1888 0b9a 8985      		ldd r24,Y+9
 1889 0b9c 9A85      		ldd r25,Y+10
 1890 0b9e 835A      		subi r24,-93
 1891 0ba0 9F4F      		sbci r25,-1
 1892 0ba2 FC01      		movw r30,r24
 1893 0ba4 8081      		ld r24,Z
 1894 0ba6 8823      		tst r24
 1895 0ba8 01F0      		breq .L44
 187:lp_solve_5.5/lp_simplex.c ****       refvalue *= 1000*log10(9.0+lp->rows);
 1896               		.loc 2 187 0
 1897 0baa 8E89      		ldd r24,Y+22
 1898 0bac 9F89      		ldd r25,Y+23
 1899 0bae 8651      		subi r24,22
 1900 0bb0 9E4F      		sbci r25,-2
 1901 0bb2 FC01      		movw r30,r24
 1902 0bb4 8081      		ld r24,Z
 1903 0bb6 9181      		ldd r25,Z+1
 1904 0bb8 092E      		mov __tmp_reg__,r25
 1905 0bba 000C      		lsl r0
 1906 0bbc AA0B      		sbc r26,r26
 1907 0bbe BB0B      		sbc r27,r27
 1908 0bc0 BC01      		movw r22,r24
 1909 0bc2 CD01      		movw r24,r26
 1910 0bc4 0E94 0000 		call __floatsisf
 1911 0bc8 DC01      		movw r26,r24
 1912 0bca CB01      		movw r24,r22
 1913 0bcc 20E0      		ldi r18,0
 1914 0bce 30E0      		ldi r19,0
 1915 0bd0 40E1      		ldi r20,lo8(16)
 1916 0bd2 51E4      		ldi r21,lo8(65)
 1917 0bd4 BC01      		movw r22,r24
 1918 0bd6 CD01      		movw r24,r26
 1919 0bd8 0E94 0000 		call __addsf3
 1920 0bdc DC01      		movw r26,r24
 1921 0bde CB01      		movw r24,r22
 1922 0be0 BC01      		movw r22,r24
 1923 0be2 CD01      		movw r24,r26
 1924 0be4 0E94 0000 		call log10
 1925 0be8 DC01      		movw r26,r24
 1926 0bea CB01      		movw r24,r22
 1927 0bec 20E0      		ldi r18,0
 1928 0bee 30E0      		ldi r19,0
 1929 0bf0 4AE7      		ldi r20,lo8(122)
 1930 0bf2 54E4      		ldi r21,lo8(68)
 1931 0bf4 BC01      		movw r22,r24
 1932 0bf6 CD01      		movw r24,r26
 1933 0bf8 0E94 0000 		call __mulsf3
 1934 0bfc DC01      		movw r26,r24
 1935 0bfe CB01      		movw r24,r22
 1936 0c00 9C01      		movw r18,r24
 1937 0c02 AD01      		movw r20,r26
 1938 0c04 6D81      		ldd r22,Y+5
 1939 0c06 7E81      		ldd r23,Y+6
 1940 0c08 8F81      		ldd r24,Y+7
 1941 0c0a 9885      		ldd r25,Y+8
 1942 0c0c 0E94 0000 		call __mulsf3
 1943 0c10 DC01      		movw r26,r24
 1944 0c12 CB01      		movw r24,r22
 1945 0c14 8D83      		std Y+5,r24
 1946 0c16 9E83      		std Y+6,r25
 1947 0c18 AF83      		std Y+7,r26
 1948 0c1a B887      		std Y+8,r27
 1949 0c1c 00C0      		rjmp .L45
 1950               	.L44:
 188:lp_solve_5.5/lp_simplex.c ****     else
 189:lp_solve_5.5/lp_simplex.c ****       refvalue *= 1000*log10(9.0+lp->columns);
 1951               		.loc 2 189 0
 1952 0c1e 8E89      		ldd r24,Y+22
 1953 0c20 9F89      		ldd r25,Y+23
 1954 0c22 8451      		subi r24,20
 1955 0c24 9E4F      		sbci r25,-2
 1956 0c26 FC01      		movw r30,r24
 1957 0c28 8081      		ld r24,Z
 1958 0c2a 9181      		ldd r25,Z+1
 1959 0c2c 092E      		mov __tmp_reg__,r25
 1960 0c2e 000C      		lsl r0
 1961 0c30 AA0B      		sbc r26,r26
 1962 0c32 BB0B      		sbc r27,r27
 1963 0c34 BC01      		movw r22,r24
 1964 0c36 CD01      		movw r24,r26
 1965 0c38 0E94 0000 		call __floatsisf
 1966 0c3c DC01      		movw r26,r24
 1967 0c3e CB01      		movw r24,r22
 1968 0c40 20E0      		ldi r18,0
 1969 0c42 30E0      		ldi r19,0
 1970 0c44 40E1      		ldi r20,lo8(16)
 1971 0c46 51E4      		ldi r21,lo8(65)
 1972 0c48 BC01      		movw r22,r24
 1973 0c4a CD01      		movw r24,r26
 1974 0c4c 0E94 0000 		call __addsf3
 1975 0c50 DC01      		movw r26,r24
 1976 0c52 CB01      		movw r24,r22
 1977 0c54 BC01      		movw r22,r24
 1978 0c56 CD01      		movw r24,r26
 1979 0c58 0E94 0000 		call log10
 1980 0c5c DC01      		movw r26,r24
 1981 0c5e CB01      		movw r24,r22
 1982 0c60 20E0      		ldi r18,0
 1983 0c62 30E0      		ldi r19,0
 1984 0c64 4AE7      		ldi r20,lo8(122)
 1985 0c66 54E4      		ldi r21,lo8(68)
 1986 0c68 BC01      		movw r22,r24
 1987 0c6a CD01      		movw r24,r26
 1988 0c6c 0E94 0000 		call __mulsf3
 1989 0c70 DC01      		movw r26,r24
 1990 0c72 CB01      		movw r24,r22
 1991 0c74 9C01      		movw r18,r24
 1992 0c76 AD01      		movw r20,r26
 1993 0c78 6D81      		ldd r22,Y+5
 1994 0c7a 7E81      		ldd r23,Y+6
 1995 0c7c 8F81      		ldd r24,Y+7
 1996 0c7e 9885      		ldd r25,Y+8
 1997 0c80 0E94 0000 		call __mulsf3
 1998 0c84 DC01      		movw r26,r24
 1999 0c86 CB01      		movw r24,r22
 2000 0c88 8D83      		std Y+5,r24
 2001 0c8a 9E83      		std Y+6,r25
 2002 0c8c AF83      		std Y+7,r26
 2003 0c8e B887      		std Y+8,r27
 2004               	.L45:
 190:lp_solve_5.5/lp_simplex.c **** #else
 191:lp_solve_5.5/lp_simplex.c ****       refvalue *= 1000*log10(9.0+lp->sum);
 192:lp_solve_5.5/lp_simplex.c **** #endif
 193:lp_solve_5.5/lp_simplex.c ****     testvalue = my_reldiff(monitor->thisinfeas, monitor->previnfeas);
 2005               		.loc 2 193 0
 2006 0c90 8985      		ldd r24,Y+9
 2007 0c92 9A85      		ldd r25,Y+10
 2008 0c94 8A5B      		subi r24,-70
 2009 0c96 9F4F      		sbci r25,-1
 2010 0c98 FC01      		movw r30,r24
 2011 0c9a 8081      		ld r24,Z
 2012 0c9c 9181      		ldd r25,Z+1
 2013 0c9e A281      		ldd r26,Z+2
 2014 0ca0 B381      		ldd r27,Z+3
 2015 0ca2 2985      		ldd r18,Y+9
 2016 0ca4 3A85      		ldd r19,Y+10
 2017 0ca6 265B      		subi r18,-74
 2018 0ca8 3F4F      		sbci r19,-1
 2019 0caa F901      		movw r30,r18
 2020 0cac 2081      		ld r18,Z
 2021 0cae 3181      		ldd r19,Z+1
 2022 0cb0 4281      		ldd r20,Z+2
 2023 0cb2 5381      		ldd r21,Z+3
 2024 0cb4 BC01      		movw r22,r24
 2025 0cb6 CD01      		movw r24,r26
 2026 0cb8 0E94 0000 		call __subsf3
 2027 0cbc DC01      		movw r26,r24
 2028 0cbe CB01      		movw r24,r22
 2029 0cc0 6C01      		movw r12,r24
 2030 0cc2 7D01      		movw r14,r26
 2031 0cc4 8985      		ldd r24,Y+9
 2032 0cc6 9A85      		ldd r25,Y+10
 2033 0cc8 865B      		subi r24,-74
 2034 0cca 9F4F      		sbci r25,-1
 2035 0ccc FC01      		movw r30,r24
 2036 0cce 8081      		ld r24,Z
 2037 0cd0 9181      		ldd r25,Z+1
 2038 0cd2 A281      		ldd r26,Z+2
 2039 0cd4 B381      		ldd r27,Z+3
 2040 0cd6 BF77      		andi r27,0x7f
 2041 0cd8 20E0      		ldi r18,0
 2042 0cda 30E0      		ldi r19,0
 2043 0cdc 40E8      		ldi r20,lo8(-128)
 2044 0cde 5FE3      		ldi r21,lo8(63)
 2045 0ce0 BC01      		movw r22,r24
 2046 0ce2 CD01      		movw r24,r26
 2047 0ce4 0E94 0000 		call __addsf3
 2048 0ce8 DC01      		movw r26,r24
 2049 0cea CB01      		movw r24,r22
 2050 0cec 9C01      		movw r18,r24
 2051 0cee AD01      		movw r20,r26
 2052 0cf0 C701      		movw r24,r14
 2053 0cf2 B601      		movw r22,r12
 2054 0cf4 0E94 0000 		call __divsf3
 2055 0cf8 DC01      		movw r26,r24
 2056 0cfa CB01      		movw r24,r22
 2057 0cfc 898B      		std Y+17,r24
 2058 0cfe 9A8B      		std Y+18,r25
 2059 0d00 AB8B      		std Y+19,r26
 2060 0d02 BC8B      		std Y+20,r27
 194:lp_solve_5.5/lp_simplex.c ****     isStalled &= (fabs(testvalue) < refvalue);
 2061               		.loc 2 194 0
 2062 0d04 8989      		ldd r24,Y+17
 2063 0d06 9A89      		ldd r25,Y+18
 2064 0d08 AB89      		ldd r26,Y+19
 2065 0d0a BC89      		ldd r27,Y+20
 2066 0d0c BF77      		andi r27,0x7f
 2067 0d0e 11E0      		ldi r17,lo8(1)
 2068 0d10 2D81      		ldd r18,Y+5
 2069 0d12 3E81      		ldd r19,Y+6
 2070 0d14 4F81      		ldd r20,Y+7
 2071 0d16 5885      		ldd r21,Y+8
 2072 0d18 BC01      		movw r22,r24
 2073 0d1a CD01      		movw r24,r26
 2074 0d1c 0E94 0000 		call __ltsf2
 2075 0d20 8823      		tst r24
 2076 0d22 04F0      		brlt .L46
 2077 0d24 10E0      		ldi r17,0
 2078               	.L46:
 2079 0d26 912F      		mov r25,r17
 2080 0d28 8981      		ldd r24,Y+1
 2081 0d2a 8923      		and r24,r25
 2082 0d2c 8983      		std Y+1,r24
 195:lp_solve_5.5/lp_simplex.c **** 
 196:lp_solve_5.5/lp_simplex.c ****     /* Check if we should force "major" pivoting, i.e. no bound flips;
 197:lp_solve_5.5/lp_simplex.c ****       this is activated when we see the feasibility deteriorate */
 198:lp_solve_5.5/lp_simplex.c **** /*    if(!isStalled && (testvalue > 0) && (TRUE || is_action(lp->anti_degen, ANTIDEGEN_BOUNDFLIP)))
 199:lp_solve_5.5/lp_simplex.c **** #if !defined _PRICE_NOBOUNDFLIP
 200:lp_solve_5.5/lp_simplex.c ****     if(!isStalled && (testvalue > 0) && is_action(lp->anti_degen, ANTIDEGEN_BOUNDFLIP))
 2083               		.loc 2 200 0
 2084 0d2e 8981      		ldd r24,Y+1
 2085 0d30 8823      		tst r24
 2086 0d32 01F4      		brne .L43
 2087               		.loc 2 200 0 is_stmt 0 discriminator 1
 2088 0d34 20E0      		ldi r18,0
 2089 0d36 30E0      		ldi r19,0
 2090 0d38 A901      		movw r20,r18
 2091 0d3a 6989      		ldd r22,Y+17
 2092 0d3c 7A89      		ldd r23,Y+18
 2093 0d3e 8B89      		ldd r24,Y+19
 2094 0d40 9C89      		ldd r25,Y+20
 2095 0d42 0E94 0000 		call __gtsf2
 2096 0d46 1816      		cp __zero_reg__,r24
 2097 0d48 04F4      		brge .L43
 2098               		.loc 2 200 0 discriminator 2
 2099 0d4a 8E89      		ldd r24,Y+22
 2100 0d4c 9F89      		ldd r25,Y+23
 2101 0d4e 8E58      		subi r24,-114
 2102 0d50 9D4F      		sbci r25,-3
 2103 0d52 FC01      		movw r30,r24
 2104 0d54 8081      		ld r24,Z
 2105 0d56 9181      		ldd r25,Z+1
 2106 0d58 60E0      		ldi r22,0
 2107 0d5a 72E0      		ldi r23,lo8(2)
 2108 0d5c 0E94 0000 		call is_action
 2109 0d60 8823      		tst r24
 2110 0d62 01F0      		breq .L43
 201:lp_solve_5.5/lp_simplex.c ****       acceptance = AUTOMATIC;
 2111               		.loc 2 201 0 is_stmt 1
 2112 0d64 82E0      		ldi r24,lo8(2)
 2113 0d66 8A83      		std Y+2,r24
 2114               	.L43:
 2115               	.LBE4:
 202:lp_solve_5.5/lp_simplex.c ****   }
 203:lp_solve_5.5/lp_simplex.c **** #else
 204:lp_solve_5.5/lp_simplex.c ****     if(!isStalled && (testvalue > 0) && !ISMASKSET(lp->piv_strategy, PRICE_NOBOUNDFLIP)) {
 205:lp_solve_5.5/lp_simplex.c ****       SETMASK(lp->piv_strategy, PRICE_NOBOUNDFLIP);
 206:lp_solve_5.5/lp_simplex.c ****       acceptance = AUTOMATIC;
 207:lp_solve_5.5/lp_simplex.c ****     }
 208:lp_solve_5.5/lp_simplex.c ****   }
 209:lp_solve_5.5/lp_simplex.c ****   else
 210:lp_solve_5.5/lp_simplex.c ****     CLEARMASK(lp->piv_strategy, PRICE_NOBOUNDFLIP);
 211:lp_solve_5.5/lp_simplex.c **** #endif
 212:lp_solve_5.5/lp_simplex.c **** 
 213:lp_solve_5.5/lp_simplex.c **** #if 1
 214:lp_solve_5.5/lp_simplex.c ****   isCreeping = FALSE;
 2116               		.loc 2 214 0
 2117 0d68 1D8A      		std Y+21,__zero_reg__
 215:lp_solve_5.5/lp_simplex.c **** #else
 216:lp_solve_5.5/lp_simplex.c ****   isCreeping |= stallMonitor_creepingObj(lp);
 217:lp_solve_5.5/lp_simplex.c **** /*  isCreeping |= stallMonitor_shortSteps(lp); */
 218:lp_solve_5.5/lp_simplex.c **** #endif
 219:lp_solve_5.5/lp_simplex.c ****   if(isStalled || isCreeping) {
 2118               		.loc 2 219 0
 2119 0d6a 8981      		ldd r24,Y+1
 2120 0d6c 8823      		tst r24
 2121 0d6e 01F4      		brne .L48
 2122               		.loc 2 219 0 is_stmt 0 discriminator 1
 2123 0d70 8D89      		ldd r24,Y+21
 2124 0d72 8823      		tst r24
 2125 0d74 01F4      		brne .+2
 2126 0d76 00C0      		rjmp .L49
 2127               	.L48:
 220:lp_solve_5.5/lp_simplex.c **** 
 221:lp_solve_5.5/lp_simplex.c ****     /* Update counters along with specific tolerance for bound flips */
 222:lp_solve_5.5/lp_simplex.c **** #if 1
 223:lp_solve_5.5/lp_simplex.c ****     if(minit != ITERATE_MAJORMAJOR) {
 2128               		.loc 2 223 0 is_stmt 1
 2129 0d78 8E8D      		ldd r24,Y+30
 2130 0d7a 8823      		tst r24
 2131 0d7c 01F0      		breq .L50
 224:lp_solve_5.5/lp_simplex.c ****       if(++monitor->Mcycle > 2) {
 2132               		.loc 2 224 0
 2133 0d7e 8985      		ldd r24,Y+9
 2134 0d80 9A85      		ldd r25,Y+10
 2135 0d82 FC01      		movw r30,r24
 2136 0d84 86A1      		ldd r24,Z+38
 2137 0d86 97A1      		ldd r25,Z+39
 2138 0d88 9C01      		movw r18,r24
 2139 0d8a 2F5F      		subi r18,-1
 2140 0d8c 3F4F      		sbci r19,-1
 2141 0d8e 8985      		ldd r24,Y+9
 2142 0d90 9A85      		ldd r25,Y+10
 2143 0d92 FC01      		movw r30,r24
 2144 0d94 37A3      		std Z+39,r19
 2145 0d96 26A3      		std Z+38,r18
 2146 0d98 8985      		ldd r24,Y+9
 2147 0d9a 9A85      		ldd r25,Y+10
 2148 0d9c FC01      		movw r30,r24
 2149 0d9e 86A1      		ldd r24,Z+38
 2150 0da0 97A1      		ldd r25,Z+39
 2151 0da2 0397      		sbiw r24,3
 2152 0da4 04F0      		brlt .L52
 225:lp_solve_5.5/lp_simplex.c ****         monitor->Mcycle = 0;
 2153               		.loc 2 225 0
 2154 0da6 8985      		ldd r24,Y+9
 2155 0da8 9A85      		ldd r25,Y+10
 2156 0daa FC01      		movw r30,r24
 2157 0dac 17A2      		std Z+39,__zero_reg__
 2158 0dae 16A2      		std Z+38,__zero_reg__
 226:lp_solve_5.5/lp_simplex.c ****         monitor->Ncycle++;
 2159               		.loc 2 226 0
 2160 0db0 8985      		ldd r24,Y+9
 2161 0db2 9A85      		ldd r25,Y+10
 2162 0db4 FC01      		movw r30,r24
 2163 0db6 84A1      		ldd r24,Z+36
 2164 0db8 95A1      		ldd r25,Z+37
 2165 0dba 9C01      		movw r18,r24
 2166 0dbc 2F5F      		subi r18,-1
 2167 0dbe 3F4F      		sbci r19,-1
 2168 0dc0 8985      		ldd r24,Y+9
 2169 0dc2 9A85      		ldd r25,Y+10
 2170 0dc4 FC01      		movw r30,r24
 2171 0dc6 35A3      		std Z+37,r19
 2172 0dc8 24A3      		std Z+36,r18
 2173 0dca 00C0      		rjmp .L52
 2174               	.L50:
 227:lp_solve_5.5/lp_simplex.c ****       }
 228:lp_solve_5.5/lp_simplex.c ****     }
 229:lp_solve_5.5/lp_simplex.c ****     else
 230:lp_solve_5.5/lp_simplex.c **** #endif
 231:lp_solve_5.5/lp_simplex.c ****       monitor->Ncycle++;
 2175               		.loc 2 231 0
 2176 0dcc 8985      		ldd r24,Y+9
 2177 0dce 9A85      		ldd r25,Y+10
 2178 0dd0 FC01      		movw r30,r24
 2179 0dd2 84A1      		ldd r24,Z+36
 2180 0dd4 95A1      		ldd r25,Z+37
 2181 0dd6 9C01      		movw r18,r24
 2182 0dd8 2F5F      		subi r18,-1
 2183 0dda 3F4F      		sbci r19,-1
 2184 0ddc 8985      		ldd r24,Y+9
 2185 0dde 9A85      		ldd r25,Y+10
 2186 0de0 FC01      		movw r30,r24
 2187 0de2 35A3      		std Z+37,r19
 2188 0de4 24A3      		std Z+36,r18
 2189               	.L52:
 232:lp_solve_5.5/lp_simplex.c **** 
 233:lp_solve_5.5/lp_simplex.c ****     /* Start to monitor for variable cycling if this is the initial stationarity */
 234:lp_solve_5.5/lp_simplex.c ****     if(monitor->Ncycle <= 1) {
 2190               		.loc 2 234 0
 2191 0de6 8985      		ldd r24,Y+9
 2192 0de8 9A85      		ldd r25,Y+10
 2193 0dea FC01      		movw r30,r24
 2194 0dec 84A1      		ldd r24,Z+36
 2195 0dee 95A1      		ldd r25,Z+37
 2196 0df0 0297      		sbiw r24,2
 2197 0df2 04F4      		brge .L53
 235:lp_solve_5.5/lp_simplex.c ****       monitor->Ccycle = colnr;
 2198               		.loc 2 235 0
 2199 0df4 8985      		ldd r24,Y+9
 2200 0df6 9A85      		ldd r25,Y+10
 2201 0df8 2A8D      		ldd r18,Y+26
 2202 0dfa 3B8D      		ldd r19,Y+27
 2203 0dfc FC01      		movw r30,r24
 2204 0dfe 33A3      		std Z+35,r19
 2205 0e00 22A3      		std Z+34,r18
 236:lp_solve_5.5/lp_simplex.c ****       monitor->Rcycle = rownr;
 2206               		.loc 2 236 0
 2207 0e02 8985      		ldd r24,Y+9
 2208 0e04 9A85      		ldd r25,Y+10
 2209 0e06 288D      		ldd r18,Y+24
 2210 0e08 398D      		ldd r19,Y+25
 2211 0e0a FC01      		movw r30,r24
 2212 0e0c 31A3      		std Z+33,r19
 2213 0e0e 20A3      		std Z+32,r18
 234:lp_solve_5.5/lp_simplex.c ****       monitor->Ccycle = colnr;
 2214               		.loc 2 234 0
 2215 0e10 00C0      		rjmp .L78
 2216               	.L53:
 237:lp_solve_5.5/lp_simplex.c ****     }
 238:lp_solve_5.5/lp_simplex.c **** 
 239:lp_solve_5.5/lp_simplex.c ****     /* Check if we should change pivoting strategy */
 240:lp_solve_5.5/lp_simplex.c ****     else if(isCreeping ||                                                 /* We have OF creep */
 2217               		.loc 2 240 0
 2218 0e12 8D89      		ldd r24,Y+21
 2219 0e14 8823      		tst r24
 2220 0e16 01F4      		brne .L55
 241:lp_solve_5.5/lp_simplex.c ****             (monitor->Ncycle > monitor->limitstall[monitor->isdual]) ||   /* KE empirical value */
 2221               		.loc 2 241 0 discriminator 1
 2222 0e18 8985      		ldd r24,Y+9
 2223 0e1a 9A85      		ldd r25,Y+10
 2224 0e1c FC01      		movw r30,r24
 2225 0e1e 24A1      		ldd r18,Z+36
 2226 0e20 35A1      		ldd r19,Z+37
 2227 0e22 8985      		ldd r24,Y+9
 2228 0e24 9A85      		ldd r25,Y+10
 2229 0e26 835A      		subi r24,-93
 2230 0e28 9F4F      		sbci r25,-1
 2231 0e2a FC01      		movw r30,r24
 2232 0e2c 8081      		ld r24,Z
 2233 0e2e 882F      		mov r24,r24
 2234 0e30 90E0      		ldi r25,0
 2235 0e32 4985      		ldd r20,Y+9
 2236 0e34 5A85      		ldd r21,Y+10
 2237 0e36 0596      		adiw r24,5
 2238 0e38 880F      		lsl r24
 2239 0e3a 991F      		rol r25
 2240 0e3c 840F      		add r24,r20
 2241 0e3e 951F      		adc r25,r21
 2242 0e40 FC01      		movw r30,r24
 2243 0e42 8081      		ld r24,Z
 2244 0e44 9181      		ldd r25,Z+1
 240:lp_solve_5.5/lp_simplex.c ****             (monitor->Ncycle > monitor->limitstall[monitor->isdual]) ||   /* KE empirical value */
 2245               		.loc 2 240 0 discriminator 1
 2246 0e46 8217      		cp r24,r18
 2247 0e48 9307      		cpc r25,r19
 2248 0e4a 04F0      		brlt .L55
 242:lp_solve_5.5/lp_simplex.c ****             ((monitor->Ccycle == rownr) && (monitor->Rcycle == colnr))) {   /* Obvious cycling */
 2249               		.loc 2 242 0
 2250 0e4c 8985      		ldd r24,Y+9
 2251 0e4e 9A85      		ldd r25,Y+10
 2252 0e50 FC01      		movw r30,r24
 2253 0e52 22A1      		ldd r18,Z+34
 2254 0e54 33A1      		ldd r19,Z+35
 241:lp_solve_5.5/lp_simplex.c ****             (monitor->Ncycle > monitor->limitstall[monitor->isdual]) ||   /* KE empirical value */
 2255               		.loc 2 241 0
 2256 0e56 888D      		ldd r24,Y+24
 2257 0e58 998D      		ldd r25,Y+25
 2258 0e5a 2817      		cp r18,r24
 2259 0e5c 3907      		cpc r19,r25
 2260 0e5e 01F0      		breq .+2
 2261 0e60 00C0      		rjmp .L78
 2262               		.loc 2 242 0
 2263 0e62 8985      		ldd r24,Y+9
 2264 0e64 9A85      		ldd r25,Y+10
 2265 0e66 FC01      		movw r30,r24
 2266 0e68 20A1      		ldd r18,Z+32
 2267 0e6a 31A1      		ldd r19,Z+33
 2268 0e6c 8A8D      		ldd r24,Y+26
 2269 0e6e 9B8D      		ldd r25,Y+27
 2270 0e70 2817      		cp r18,r24
 2271 0e72 3907      		cpc r19,r25
 2272 0e74 01F0      		breq .+2
 2273 0e76 00C0      		rjmp .L78
 2274               	.L55:
 243:lp_solve_5.5/lp_simplex.c **** 
 244:lp_solve_5.5/lp_simplex.c ****       monitor->active = TRUE;
 2275               		.loc 2 244 0
 2276 0e78 8985      		ldd r24,Y+9
 2277 0e7a 9A85      		ldd r25,Y+10
 2278 0e7c 825A      		subi r24,-94
 2279 0e7e 9F4F      		sbci r25,-1
 2280 0e80 21E0      		ldi r18,lo8(1)
 2281 0e82 FC01      		movw r30,r24
 2282 0e84 2083      		st Z,r18
 245:lp_solve_5.5/lp_simplex.c **** 
 246:lp_solve_5.5/lp_simplex.c ****       /* Try to force out equality slacks to combat degeneracy */
 247:lp_solve_5.5/lp_simplex.c ****       if((lp->fixedvars > 0) && (*forceoutEQ != TRUE)) {
 2283               		.loc 2 247 0
 2284 0e86 8E89      		ldd r24,Y+22
 2285 0e88 9F89      		ldd r25,Y+23
 2286 0e8a 8457      		subi r24,116
 2287 0e8c 9D4F      		sbci r25,-3
 2288 0e8e FC01      		movw r30,r24
 2289 0e90 8081      		ld r24,Z
 2290 0e92 9181      		ldd r25,Z+1
 2291 0e94 1816      		cp __zero_reg__,r24
 2292 0e96 1906      		cpc __zero_reg__,r25
 2293 0e98 04F4      		brge .L56
 2294               		.loc 2 247 0 is_stmt 0 discriminator 1
 2295 0e9a 88A1      		ldd r24,Y+32
 2296 0e9c 99A1      		ldd r25,Y+33
 2297 0e9e FC01      		movw r30,r24
 2298 0ea0 8081      		ld r24,Z
 2299 0ea2 8130      		cpi r24,lo8(1)
 2300 0ea4 01F0      		breq .L56
 248:lp_solve_5.5/lp_simplex.c ****         *forceoutEQ = TRUE;
 2301               		.loc 2 248 0 is_stmt 1
 2302 0ea6 88A1      		ldd r24,Y+32
 2303 0ea8 99A1      		ldd r25,Y+33
 2304 0eaa 21E0      		ldi r18,lo8(1)
 2305 0eac FC01      		movw r30,r24
 2306 0eae 2083      		st Z,r18
 249:lp_solve_5.5/lp_simplex.c ****         goto Proceed;
 2307               		.loc 2 249 0
 2308 0eb0 00C0      		rjmp .L57
 2309               	.L56:
 250:lp_solve_5.5/lp_simplex.c ****       }
 251:lp_solve_5.5/lp_simplex.c **** 
 252:lp_solve_5.5/lp_simplex.c ****       /* Our options are now to select an alternative rule or to do bound perturbation;
 253:lp_solve_5.5/lp_simplex.c ****          check if these options are available to us or if we must signal failure and break out. */
 254:lp_solve_5.5/lp_simplex.c ****       approved &= monitor->pivdynamic && (monitor->ruleswitches < monitor->limitruleswitches);
 2310               		.loc 2 254 0
 2311 0eb2 8985      		ldd r24,Y+9
 2312 0eb4 9A85      		ldd r25,Y+10
 2313 0eb6 845A      		subi r24,-92
 2314 0eb8 9F4F      		sbci r25,-1
 2315 0eba FC01      		movw r30,r24
 2316 0ebc 8081      		ld r24,Z
 2317 0ebe 8823      		tst r24
 2318 0ec0 01F0      		breq .L58
 2319               		.loc 2 254 0 is_stmt 0 discriminator 1
 2320 0ec2 8985      		ldd r24,Y+9
 2321 0ec4 9A85      		ldd r25,Y+10
 2322 0ec6 FC01      		movw r30,r24
 2323 0ec8 2085      		ldd r18,Z+8
 2324 0eca 3185      		ldd r19,Z+9
 2325 0ecc 8985      		ldd r24,Y+9
 2326 0ece 9A85      		ldd r25,Y+10
 2327 0ed0 FC01      		movw r30,r24
 2328 0ed2 8685      		ldd r24,Z+14
 2329 0ed4 9785      		ldd r25,Z+15
 2330 0ed6 2817      		cp r18,r24
 2331 0ed8 3907      		cpc r19,r25
 2332 0eda 04F4      		brge .L58
 2333               		.loc 2 254 0 discriminator 3
 2334 0edc 81E0      		ldi r24,lo8(1)
 2335 0ede 90E0      		ldi r25,0
 2336 0ee0 00C0      		rjmp .L59
 2337               	.L58:
 2338               		.loc 2 254 0 discriminator 4
 2339 0ee2 80E0      		ldi r24,0
 2340 0ee4 90E0      		ldi r25,0
 2341               	.L59:
 2342               		.loc 2 254 0 discriminator 6
 2343 0ee6 982F      		mov r25,r24
 2344 0ee8 8F8D      		ldd r24,Y+31
 2345 0eea 8923      		and r24,r25
 2346 0eec 8F8F      		std Y+31,r24
 255:lp_solve_5.5/lp_simplex.c ****       if(!approved && !is_anti_degen(lp, ANTIDEGEN_STALLING)) {
 2347               		.loc 2 255 0 is_stmt 1 discriminator 6
 2348 0eee 8F8D      		ldd r24,Y+31
 2349 0ef0 8823      		tst r24
 2350 0ef2 01F0      		breq .+2
 2351 0ef4 00C0      		rjmp .L60
 2352               		.loc 2 255 0 is_stmt 0 discriminator 1
 2353 0ef6 8E89      		ldd r24,Y+22
 2354 0ef8 9F89      		ldd r25,Y+23
 2355 0efa 64E0      		ldi r22,lo8(4)
 2356 0efc 70E0      		ldi r23,0
 2357 0efe 0E94 0000 		call is_anti_degen
 2358 0f02 8823      		tst r24
 2359 0f04 01F0      		breq .+2
 2360 0f06 00C0      		rjmp .L60
 256:lp_solve_5.5/lp_simplex.c ****         lp->spx_status = DEGENERATE;
 2361               		.loc 2 256 0 is_stmt 1
 2362 0f08 8E89      		ldd r24,Y+22
 2363 0f0a 9F89      		ldd r25,Y+23
 2364 0f0c 8A5F      		subi r24,-6
 2365 0f0e 9D4F      		sbci r25,-3
 2366 0f10 24E0      		ldi r18,lo8(4)
 2367 0f12 30E0      		ldi r19,0
 2368 0f14 FC01      		movw r30,r24
 2369 0f16 3183      		std Z+1,r19
 2370 0f18 2083      		st Z,r18
 257:lp_solve_5.5/lp_simplex.c ****         report(lp, msglevel, "%s: Stalling at iter %10.0f; no alternative strategy left.\n",
 258:lp_solve_5.5/lp_simplex.c ****                              monitor->spxfunc, (double) get_total_iter(lp));
 2371               		.loc 2 258 0
 2372 0f1a 8E89      		ldd r24,Y+22
 2373 0f1c 9F89      		ldd r25,Y+23
 2374 0f1e 0E94 0000 		call get_total_iter
 2375 0f22 A22E      		mov r10,r18
 2376 0f24 B32E      		mov r11,r19
 2377 0f26 C42E      		mov r12,r20
 2378 0f28 D52E      		mov r13,r21
 2379 0f2a E62E      		mov r14,r22
 2380 0f2c F72E      		mov r15,r23
 2381 0f2e 082F      		mov r16,r24
 2382 0f30 192F      		mov r17,r25
 257:lp_solve_5.5/lp_simplex.c ****         report(lp, msglevel, "%s: Stalling at iter %10.0f; no alternative strategy left.\n",
 2383               		.loc 2 257 0
 2384 0f32 2A2D      		mov r18,r10
 2385 0f34 3B2D      		mov r19,r11
 2386 0f36 4C2D      		mov r20,r12
 2387 0f38 5D2D      		mov r21,r13
 2388 0f3a 6E2D      		mov r22,r14
 2389 0f3c 7F2D      		mov r23,r15
 2390 0f3e 802F      		mov r24,r16
 2391 0f40 912F      		mov r25,r17
 2392 0f42 0E94 0000 		call __floatdisf
 2393 0f46 DC01      		movw r26,r24
 2394 0f48 CB01      		movw r24,r22
 2395               		.loc 2 258 0
 2396 0f4a 2985      		ldd r18,Y+9
 2397 0f4c 3A85      		ldd r19,Y+10
 2398 0f4e 2E5A      		subi r18,-82
 2399 0f50 3F4F      		sbci r19,-1
 257:lp_solve_5.5/lp_simplex.c ****         report(lp, msglevel, "%s: Stalling at iter %10.0f; no alternative strategy left.\n",
 2400               		.loc 2 257 0
 2401 0f52 4B2F      		mov r20,r27
 2402 0f54 4F93      		push r20
 2403 0f56 4A2F      		mov r20,r26
 2404 0f58 4F93      		push r20
 2405 0f5a 492F      		mov r20,r25
 2406 0f5c 4F93      		push r20
 2407 0f5e 8F93      		push r24
 2408 0f60 832F      		mov r24,r19
 2409 0f62 8F93      		push r24
 2410 0f64 822F      		mov r24,r18
 2411 0f66 8F93      		push r24
 2412 0f68 80E0      		ldi r24,lo8(.LC3)
 2413 0f6a 90E0      		ldi r25,hi8(.LC3)
 2414 0f6c 892F      		mov r24,r25
 2415 0f6e 8F93      		push r24
 2416 0f70 80E0      		ldi r24,lo8(.LC3)
 2417 0f72 90E0      		ldi r25,hi8(.LC3)
 2418 0f74 8F93      		push r24
 2419 0f76 8C85      		ldd r24,Y+12
 2420 0f78 8F93      		push r24
 2421 0f7a 8B85      		ldd r24,Y+11
 2422 0f7c 8F93      		push r24
 2423 0f7e 8F89      		ldd r24,Y+23
 2424 0f80 8F93      		push r24
 2425 0f82 8E89      		ldd r24,Y+22
 2426 0f84 8F93      		push r24
 2427 0f86 0E94 0000 		call report
 2428 0f8a 8DB7      		in r24,__SP_L__
 2429 0f8c 9EB7      		in r25,__SP_H__
 2430 0f8e 0C96      		adiw r24,12
 2431 0f90 0FB6      		in __tmp_reg__,__SREG__
 2432 0f92 F894      		cli
 2433 0f94 DEBF      		out __SP_H__,r29
 2434 0f96 0FBE      		out __SREG__,__tmp_reg__
 2435 0f98 CDBF      		out __SP_L__,r28
 259:lp_solve_5.5/lp_simplex.c ****         acceptance = FALSE;
 2436               		.loc 2 259 0
 2437 0f9a 1A82      		std Y+2,__zero_reg__
 260:lp_solve_5.5/lp_simplex.c ****         return( acceptance );
 2438               		.loc 2 260 0
 2439 0f9c 8A81      		ldd r24,Y+2
 2440 0f9e 00C0      		rjmp .L38
 2441               	.L60:
 261:lp_solve_5.5/lp_simplex.c ****       }
 262:lp_solve_5.5/lp_simplex.c **** 
 263:lp_solve_5.5/lp_simplex.c ****       /* See if we can do the appropriate alternative rule. */
 264:lp_solve_5.5/lp_simplex.c ****       switch (monitor->oldpivrule) {
 2442               		.loc 2 264 0
 2443 0fa0 8985      		ldd r24,Y+9
 2444 0fa2 9A85      		ldd r25,Y+10
 2445 0fa4 FC01      		movw r30,r24
 2446 0fa6 8481      		ldd r24,Z+4
 2447 0fa8 9581      		ldd r25,Z+5
 2448 0faa 8130      		cpi r24,1
 2449 0fac 9105      		cpc r25,__zero_reg__
 2450 0fae 01F0      		breq .L62
 2451 0fb0 8230      		cpi r24,2
 2452 0fb2 9105      		cpc r25,__zero_reg__
 2453 0fb4 04F4      		brge .L63
 2454 0fb6 892B      		or r24,r25
 2455 0fb8 01F0      		breq .L64
 2456 0fba 00C0      		rjmp .L61
 2457               	.L63:
 2458 0fbc 8230      		cpi r24,2
 2459 0fbe 9105      		cpc r25,__zero_reg__
 2460 0fc0 01F0      		breq .L65
 2461 0fc2 0397      		sbiw r24,3
 2462 0fc4 01F0      		breq .L66
 2463 0fc6 00C0      		rjmp .L61
 2464               	.L64:
 265:lp_solve_5.5/lp_simplex.c ****         case PRICER_FIRSTINDEX:    altrule = PRICER_DEVEX;
 2465               		.loc 2 265 0
 2466 0fc8 82E0      		ldi r24,lo8(2)
 2467 0fca 90E0      		ldi r25,0
 2468 0fcc 9C83      		std Y+4,r25
 2469 0fce 8B83      		std Y+3,r24
 266:lp_solve_5.5/lp_simplex.c ****                                    break;
 2470               		.loc 2 266 0
 2471 0fd0 00C0      		rjmp .L67
 2472               	.L62:
 267:lp_solve_5.5/lp_simplex.c ****         case PRICER_DANTZIG:       altrule = PRICER_DEVEX;
 2473               		.loc 2 267 0
 2474 0fd2 82E0      		ldi r24,lo8(2)
 2475 0fd4 90E0      		ldi r25,0
 2476 0fd6 9C83      		std Y+4,r25
 2477 0fd8 8B83      		std Y+3,r24
 268:lp_solve_5.5/lp_simplex.c ****                                    break;
 2478               		.loc 2 268 0
 2479 0fda 00C0      		rjmp .L67
 2480               	.L65:
 269:lp_solve_5.5/lp_simplex.c ****         case PRICER_DEVEX:         altrule = PRICER_STEEPESTEDGE;
 2481               		.loc 2 269 0
 2482 0fdc 83E0      		ldi r24,lo8(3)
 2483 0fde 90E0      		ldi r25,0
 2484 0fe0 9C83      		std Y+4,r25
 2485 0fe2 8B83      		std Y+3,r24
 270:lp_solve_5.5/lp_simplex.c ****                                    break;
 2486               		.loc 2 270 0
 2487 0fe4 00C0      		rjmp .L67
 2488               	.L66:
 271:lp_solve_5.5/lp_simplex.c ****         case PRICER_STEEPESTEDGE:  altrule = PRICER_DEVEX;
 2489               		.loc 2 271 0
 2490 0fe6 82E0      		ldi r24,lo8(2)
 2491 0fe8 90E0      		ldi r25,0
 2492 0fea 9C83      		std Y+4,r25
 2493 0fec 8B83      		std Y+3,r24
 272:lp_solve_5.5/lp_simplex.c ****                                    break;
 2494               		.loc 2 272 0
 2495 0fee 00C0      		rjmp .L67
 2496               	.L61:
 273:lp_solve_5.5/lp_simplex.c ****         default:                   altrule = PRICER_FIRSTINDEX;
 2497               		.loc 2 273 0
 2498 0ff0 1C82      		std Y+4,__zero_reg__
 2499 0ff2 1B82      		std Y+3,__zero_reg__
 2500               	.L67:
 274:lp_solve_5.5/lp_simplex.c ****       }
 275:lp_solve_5.5/lp_simplex.c ****       if(approved &&
 2501               		.loc 2 275 0
 2502 0ff4 8F8D      		ldd r24,Y+31
 2503 0ff6 8823      		tst r24
 2504 0ff8 01F4      		brne .+2
 2505 0ffa 00C0      		rjmp .L68
 276:lp_solve_5.5/lp_simplex.c ****          (monitor->pivrule != altrule) && (monitor->pivrule == monitor->oldpivrule)) {
 2506               		.loc 2 276 0 discriminator 1
 2507 0ffc 8985      		ldd r24,Y+9
 2508 0ffe 9A85      		ldd r25,Y+10
 2509 1000 FC01      		movw r30,r24
 2510 1002 2681      		ldd r18,Z+6
 2511 1004 3781      		ldd r19,Z+7
 275:lp_solve_5.5/lp_simplex.c ****          (monitor->pivrule != altrule) && (monitor->pivrule == monitor->oldpivrule)) {
 2512               		.loc 2 275 0 discriminator 1
 2513 1006 8B81      		ldd r24,Y+3
 2514 1008 9C81      		ldd r25,Y+4
 2515 100a 2817      		cp r18,r24
 2516 100c 3907      		cpc r19,r25
 2517 100e 01F4      		brne .+2
 2518 1010 00C0      		rjmp .L68
 2519               		.loc 2 276 0
 2520 1012 8985      		ldd r24,Y+9
 2521 1014 9A85      		ldd r25,Y+10
 2522 1016 FC01      		movw r30,r24
 2523 1018 2681      		ldd r18,Z+6
 2524 101a 3781      		ldd r19,Z+7
 2525 101c 8985      		ldd r24,Y+9
 2526 101e 9A85      		ldd r25,Y+10
 2527 1020 FC01      		movw r30,r24
 2528 1022 8481      		ldd r24,Z+4
 2529 1024 9581      		ldd r25,Z+5
 2530 1026 2817      		cp r18,r24
 2531 1028 3907      		cpc r19,r25
 2532 102a 01F0      		breq .+2
 2533 102c 00C0      		rjmp .L68
 277:lp_solve_5.5/lp_simplex.c **** 
 278:lp_solve_5.5/lp_simplex.c ****         /* Switch rule to combat degeneracy. */
 279:lp_solve_5.5/lp_simplex.c ****         monitor->ruleswitches++;
 2534               		.loc 2 279 0
 2535 102e 8985      		ldd r24,Y+9
 2536 1030 9A85      		ldd r25,Y+10
 2537 1032 FC01      		movw r30,r24
 2538 1034 8085      		ldd r24,Z+8
 2539 1036 9185      		ldd r25,Z+9
 2540 1038 9C01      		movw r18,r24
 2541 103a 2F5F      		subi r18,-1
 2542 103c 3F4F      		sbci r19,-1
 2543 103e 8985      		ldd r24,Y+9
 2544 1040 9A85      		ldd r25,Y+10
 2545 1042 FC01      		movw r30,r24
 2546 1044 3187      		std Z+9,r19
 2547 1046 2087      		std Z+8,r18
 280:lp_solve_5.5/lp_simplex.c ****         lp->piv_strategy = altrule;
 2548               		.loc 2 280 0
 2549 1048 8E89      		ldd r24,Y+22
 2550 104a 9F89      		ldd r25,Y+23
 2551 104c 805A      		subi r24,-96
 2552 104e 9D4F      		sbci r25,-3
 2553 1050 2B81      		ldd r18,Y+3
 2554 1052 3C81      		ldd r19,Y+4
 2555 1054 FC01      		movw r30,r24
 2556 1056 3183      		std Z+1,r19
 2557 1058 2083      		st Z,r18
 281:lp_solve_5.5/lp_simplex.c ****         monitor->Ccycle = 0;
 2558               		.loc 2 281 0
 2559 105a 8985      		ldd r24,Y+9
 2560 105c 9A85      		ldd r25,Y+10
 2561 105e FC01      		movw r30,r24
 2562 1060 13A2      		std Z+35,__zero_reg__
 2563 1062 12A2      		std Z+34,__zero_reg__
 282:lp_solve_5.5/lp_simplex.c ****         monitor->Rcycle = 0;
 2564               		.loc 2 282 0
 2565 1064 8985      		ldd r24,Y+9
 2566 1066 9A85      		ldd r25,Y+10
 2567 1068 FC01      		movw r30,r24
 2568 106a 11A2      		std Z+33,__zero_reg__
 2569 106c 10A2      		std Z+32,__zero_reg__
 283:lp_solve_5.5/lp_simplex.c ****         monitor->Ncycle = 0;
 2570               		.loc 2 283 0
 2571 106e 8985      		ldd r24,Y+9
 2572 1070 9A85      		ldd r25,Y+10
 2573 1072 FC01      		movw r30,r24
 2574 1074 15A2      		std Z+37,__zero_reg__
 2575 1076 14A2      		std Z+36,__zero_reg__
 284:lp_solve_5.5/lp_simplex.c ****         monitor->Mcycle = 0;
 2576               		.loc 2 284 0
 2577 1078 8985      		ldd r24,Y+9
 2578 107a 9A85      		ldd r25,Y+10
 2579 107c FC01      		movw r30,r24
 2580 107e 17A2      		std Z+39,__zero_reg__
 2581 1080 16A2      		std Z+38,__zero_reg__
 285:lp_solve_5.5/lp_simplex.c ****         report(lp, msglevel, "%s: Stalling at iter %10.0f; changed to '%s' rule.\n",
 2582               		.loc 2 285 0
 2583 1082 8E89      		ldd r24,Y+22
 2584 1084 9F89      		ldd r25,Y+23
 2585 1086 0E94 0000 		call get_piv_rule
 2586 108a 0E94 0000 		call get_str_piv_rule
 2587 108e 4C01      		movw r8,r24
 286:lp_solve_5.5/lp_simplex.c ****                              monitor->spxfunc, (double) get_total_iter(lp),
 2588               		.loc 2 286 0
 2589 1090 8E89      		ldd r24,Y+22
 2590 1092 9F89      		ldd r25,Y+23
 2591 1094 0E94 0000 		call get_total_iter
 2592 1098 A22E      		mov r10,r18
 2593 109a B32E      		mov r11,r19
 2594 109c C42E      		mov r12,r20
 2595 109e D52E      		mov r13,r21
 2596 10a0 E62E      		mov r14,r22
 2597 10a2 F72E      		mov r15,r23
 2598 10a4 082F      		mov r16,r24
 2599 10a6 192F      		mov r17,r25
 285:lp_solve_5.5/lp_simplex.c ****         report(lp, msglevel, "%s: Stalling at iter %10.0f; changed to '%s' rule.\n",
 2600               		.loc 2 285 0
 2601 10a8 2A2D      		mov r18,r10
 2602 10aa 3B2D      		mov r19,r11
 2603 10ac 4C2D      		mov r20,r12
 2604 10ae 5D2D      		mov r21,r13
 2605 10b0 6E2D      		mov r22,r14
 2606 10b2 7F2D      		mov r23,r15
 2607 10b4 802F      		mov r24,r16
 2608 10b6 912F      		mov r25,r17
 2609 10b8 0E94 0000 		call __floatdisf
 2610 10bc DC01      		movw r26,r24
 2611 10be CB01      		movw r24,r22
 2612               		.loc 2 286 0
 2613 10c0 2985      		ldd r18,Y+9
 2614 10c2 3A85      		ldd r19,Y+10
 2615 10c4 2E5A      		subi r18,-82
 2616 10c6 3F4F      		sbci r19,-1
 285:lp_solve_5.5/lp_simplex.c ****         report(lp, msglevel, "%s: Stalling at iter %10.0f; changed to '%s' rule.\n",
 2617               		.loc 2 285 0
 2618 10c8 492D      		mov r20,r9
 2619 10ca 4F93      		push r20
 2620 10cc 482D      		mov r20,r8
 2621 10ce 4F93      		push r20
 2622 10d0 4B2F      		mov r20,r27
 2623 10d2 4F93      		push r20
 2624 10d4 4A2F      		mov r20,r26
 2625 10d6 4F93      		push r20
 2626 10d8 492F      		mov r20,r25
 2627 10da 4F93      		push r20
 2628 10dc 8F93      		push r24
 2629 10de 832F      		mov r24,r19
 2630 10e0 8F93      		push r24
 2631 10e2 822F      		mov r24,r18
 2632 10e4 8F93      		push r24
 2633 10e6 80E0      		ldi r24,lo8(.LC4)
 2634 10e8 90E0      		ldi r25,hi8(.LC4)
 2635 10ea 892F      		mov r24,r25
 2636 10ec 8F93      		push r24
 2637 10ee 80E0      		ldi r24,lo8(.LC4)
 2638 10f0 90E0      		ldi r25,hi8(.LC4)
 2639 10f2 8F93      		push r24
 2640 10f4 8C85      		ldd r24,Y+12
 2641 10f6 8F93      		push r24
 2642 10f8 8B85      		ldd r24,Y+11
 2643 10fa 8F93      		push r24
 2644 10fc 8F89      		ldd r24,Y+23
 2645 10fe 8F93      		push r24
 2646 1100 8E89      		ldd r24,Y+22
 2647 1102 8F93      		push r24
 2648 1104 0E94 0000 		call report
 2649 1108 8DB7      		in r24,__SP_L__
 2650 110a 9EB7      		in r25,__SP_H__
 2651 110c 0E96      		adiw r24,14
 2652 110e 0FB6      		in __tmp_reg__,__SREG__
 2653 1110 F894      		cli
 2654 1112 DEBF      		out __SP_H__,r29
 2655 1114 0FBE      		out __SREG__,__tmp_reg__
 2656 1116 CDBF      		out __SP_L__,r28
 287:lp_solve_5.5/lp_simplex.c ****                              get_str_piv_rule(get_piv_rule(lp)));
 288:lp_solve_5.5/lp_simplex.c ****         if((altrule == PRICER_DEVEX) || (altrule == PRICER_STEEPESTEDGE))
 2657               		.loc 2 288 0
 2658 1118 8B81      		ldd r24,Y+3
 2659 111a 9C81      		ldd r25,Y+4
 2660 111c 0297      		sbiw r24,2
 2661 111e 01F0      		breq .L69
 2662               		.loc 2 288 0 is_stmt 0 discriminator 1
 2663 1120 8B81      		ldd r24,Y+3
 2664 1122 9C81      		ldd r25,Y+4
 2665 1124 0397      		sbiw r24,3
 2666 1126 01F0      		breq .+2
 2667 1128 00C0      		rjmp .L79
 2668               	.L69:
 289:lp_solve_5.5/lp_simplex.c ****           restartPricer(lp, AUTOMATIC);
 2669               		.loc 2 289 0 is_stmt 1
 2670 112a 8E89      		ldd r24,Y+22
 2671 112c 9F89      		ldd r25,Y+23
 2672 112e 62E0      		ldi r22,lo8(2)
 2673 1130 0E94 0000 		call restartPricer
 288:lp_solve_5.5/lp_simplex.c ****           restartPricer(lp, AUTOMATIC);
 2674               		.loc 2 288 0
 2675 1134 00C0      		rjmp .L79
 2676               	.L68:
 290:lp_solve_5.5/lp_simplex.c ****       }
 291:lp_solve_5.5/lp_simplex.c **** 
 292:lp_solve_5.5/lp_simplex.c ****       /* If not, code for bound relaxation/perturbation */
 293:lp_solve_5.5/lp_simplex.c ****       else {
 294:lp_solve_5.5/lp_simplex.c ****         report(lp, msglevel, "%s: Stalling at iter %10.0f; proceed to bound relaxation.\n",
 295:lp_solve_5.5/lp_simplex.c ****                              monitor->spxfunc, (double) get_total_iter(lp));
 2677               		.loc 2 295 0
 2678 1136 8E89      		ldd r24,Y+22
 2679 1138 9F89      		ldd r25,Y+23
 2680 113a 0E94 0000 		call get_total_iter
 2681 113e A22E      		mov r10,r18
 2682 1140 B32E      		mov r11,r19
 2683 1142 C42E      		mov r12,r20
 2684 1144 D52E      		mov r13,r21
 2685 1146 E62E      		mov r14,r22
 2686 1148 F72E      		mov r15,r23
 2687 114a 082F      		mov r16,r24
 2688 114c 192F      		mov r17,r25
 294:lp_solve_5.5/lp_simplex.c ****                              monitor->spxfunc, (double) get_total_iter(lp));
 2689               		.loc 2 294 0
 2690 114e 2A2D      		mov r18,r10
 2691 1150 3B2D      		mov r19,r11
 2692 1152 4C2D      		mov r20,r12
 2693 1154 5D2D      		mov r21,r13
 2694 1156 6E2D      		mov r22,r14
 2695 1158 7F2D      		mov r23,r15
 2696 115a 802F      		mov r24,r16
 2697 115c 912F      		mov r25,r17
 2698 115e 0E94 0000 		call __floatdisf
 2699 1162 DC01      		movw r26,r24
 2700 1164 CB01      		movw r24,r22
 2701               		.loc 2 295 0
 2702 1166 2985      		ldd r18,Y+9
 2703 1168 3A85      		ldd r19,Y+10
 2704 116a 2E5A      		subi r18,-82
 2705 116c 3F4F      		sbci r19,-1
 294:lp_solve_5.5/lp_simplex.c ****                              monitor->spxfunc, (double) get_total_iter(lp));
 2706               		.loc 2 294 0
 2707 116e 4B2F      		mov r20,r27
 2708 1170 4F93      		push r20
 2709 1172 4A2F      		mov r20,r26
 2710 1174 4F93      		push r20
 2711 1176 492F      		mov r20,r25
 2712 1178 4F93      		push r20
 2713 117a 8F93      		push r24
 2714 117c 832F      		mov r24,r19
 2715 117e 8F93      		push r24
 2716 1180 822F      		mov r24,r18
 2717 1182 8F93      		push r24
 2718 1184 80E0      		ldi r24,lo8(.LC5)
 2719 1186 90E0      		ldi r25,hi8(.LC5)
 2720 1188 892F      		mov r24,r25
 2721 118a 8F93      		push r24
 2722 118c 80E0      		ldi r24,lo8(.LC5)
 2723 118e 90E0      		ldi r25,hi8(.LC5)
 2724 1190 8F93      		push r24
 2725 1192 8C85      		ldd r24,Y+12
 2726 1194 8F93      		push r24
 2727 1196 8B85      		ldd r24,Y+11
 2728 1198 8F93      		push r24
 2729 119a 8F89      		ldd r24,Y+23
 2730 119c 8F93      		push r24
 2731 119e 8E89      		ldd r24,Y+22
 2732 11a0 8F93      		push r24
 2733 11a2 0E94 0000 		call report
 2734 11a6 EDB7      		in r30,__SP_L__
 2735 11a8 FEB7      		in r31,__SP_H__
 2736 11aa 3C96      		adiw r30,12
 2737 11ac 0FB6      		in __tmp_reg__,__SREG__
 2738 11ae F894      		cli
 2739 11b0 DEBF      		out __SP_H__,r29
 2740 11b2 0FBE      		out __SREG__,__tmp_reg__
 2741 11b4 CDBF      		out __SP_L__,r28
 296:lp_solve_5.5/lp_simplex.c ****         acceptance = FALSE;
 2742               		.loc 2 296 0
 2743 11b6 1A82      		std Y+2,__zero_reg__
 297:lp_solve_5.5/lp_simplex.c ****         lp->spx_status = DEGENERATE;
 2744               		.loc 2 297 0
 2745 11b8 8E89      		ldd r24,Y+22
 2746 11ba 9F89      		ldd r25,Y+23
 2747 11bc 8A5F      		subi r24,-6
 2748 11be 9D4F      		sbci r25,-3
 2749 11c0 24E0      		ldi r18,lo8(4)
 2750 11c2 30E0      		ldi r19,0
 2751 11c4 FC01      		movw r30,r24
 2752 11c6 3183      		std Z+1,r19
 2753 11c8 2083      		st Z,r18
 298:lp_solve_5.5/lp_simplex.c ****         return( acceptance );
 2754               		.loc 2 298 0
 2755 11ca 8A81      		ldd r24,Y+2
 2756 11cc 00C0      		rjmp .L38
 2757               	.L79:
 288:lp_solve_5.5/lp_simplex.c ****           restartPricer(lp, AUTOMATIC);
 2758               		.loc 2 288 0
 2759 11ce 0000      		nop
 234:lp_solve_5.5/lp_simplex.c ****       monitor->Ccycle = colnr;
 2760               		.loc 2 234 0
 2761 11d0 00C0      		rjmp .L78
 2762               	.L49:
 299:lp_solve_5.5/lp_simplex.c ****       }
 300:lp_solve_5.5/lp_simplex.c ****     }
 301:lp_solve_5.5/lp_simplex.c ****   }
 302:lp_solve_5.5/lp_simplex.c **** 
 303:lp_solve_5.5/lp_simplex.c ****   /* Otherwise change back to original selection strategy as soon as possible */
 304:lp_solve_5.5/lp_simplex.c ****   else {
 305:lp_solve_5.5/lp_simplex.c ****     if(monitor->pivrule != monitor->oldpivrule) {
 2763               		.loc 2 305 0
 2764 11d2 8985      		ldd r24,Y+9
 2765 11d4 9A85      		ldd r25,Y+10
 2766 11d6 FC01      		movw r30,r24
 2767 11d8 2681      		ldd r18,Z+6
 2768 11da 3781      		ldd r19,Z+7
 2769 11dc 8985      		ldd r24,Y+9
 2770 11de 9A85      		ldd r25,Y+10
 2771 11e0 FC01      		movw r30,r24
 2772 11e2 8481      		ldd r24,Z+4
 2773 11e4 9581      		ldd r25,Z+5
 2774 11e6 2817      		cp r18,r24
 2775 11e8 3907      		cpc r19,r25
 2776 11ea 01F4      		brne .+2
 2777 11ec 00C0      		rjmp .L71
 306:lp_solve_5.5/lp_simplex.c ****       lp->piv_strategy = monitor->oldpivstrategy;
 2778               		.loc 2 306 0
 2779 11ee 8985      		ldd r24,Y+9
 2780 11f0 9A85      		ldd r25,Y+10
 2781 11f2 FC01      		movw r30,r24
 2782 11f4 2281      		ldd r18,Z+2
 2783 11f6 3381      		ldd r19,Z+3
 2784 11f8 8E89      		ldd r24,Y+22
 2785 11fa 9F89      		ldd r25,Y+23
 2786 11fc 805A      		subi r24,-96
 2787 11fe 9D4F      		sbci r25,-3
 2788 1200 FC01      		movw r30,r24
 2789 1202 3183      		std Z+1,r19
 2790 1204 2083      		st Z,r18
 307:lp_solve_5.5/lp_simplex.c ****       altrule = monitor->oldpivrule;
 2791               		.loc 2 307 0
 2792 1206 8985      		ldd r24,Y+9
 2793 1208 9A85      		ldd r25,Y+10
 2794 120a FC01      		movw r30,r24
 2795 120c 8481      		ldd r24,Z+4
 2796 120e 9581      		ldd r25,Z+5
 2797 1210 9C83      		std Y+4,r25
 2798 1212 8B83      		std Y+3,r24
 308:lp_solve_5.5/lp_simplex.c ****       if((altrule == PRICER_DEVEX) || (altrule == PRICER_STEEPESTEDGE))
 2799               		.loc 2 308 0
 2800 1214 8B81      		ldd r24,Y+3
 2801 1216 9C81      		ldd r25,Y+4
 2802 1218 0297      		sbiw r24,2
 2803 121a 01F0      		breq .L72
 2804               		.loc 2 308 0 is_stmt 0 discriminator 1
 2805 121c 8B81      		ldd r24,Y+3
 2806 121e 9C81      		ldd r25,Y+4
 2807 1220 0397      		sbiw r24,3
 2808 1222 01F4      		brne .L73
 2809               	.L72:
 309:lp_solve_5.5/lp_simplex.c ****         restartPricer(lp, AUTOMATIC);
 2810               		.loc 2 309 0 is_stmt 1
 2811 1224 8E89      		ldd r24,Y+22
 2812 1226 9F89      		ldd r25,Y+23
 2813 1228 62E0      		ldi r22,lo8(2)
 2814 122a 0E94 0000 		call restartPricer
 2815               	.L73:
 310:lp_solve_5.5/lp_simplex.c ****       report(lp, msglevel, "...returned to original pivot selection rule at iter %.0f.\n",
 311:lp_solve_5.5/lp_simplex.c ****                            (double) get_total_iter(lp));
 2816               		.loc 2 311 0
 2817 122e 8E89      		ldd r24,Y+22
 2818 1230 9F89      		ldd r25,Y+23
 2819 1232 0E94 0000 		call get_total_iter
 2820 1236 A22E      		mov r10,r18
 2821 1238 B32E      		mov r11,r19
 2822 123a C42E      		mov r12,r20
 2823 123c D52E      		mov r13,r21
 2824 123e E62E      		mov r14,r22
 2825 1240 F72E      		mov r15,r23
 2826 1242 082F      		mov r16,r24
 2827 1244 192F      		mov r17,r25
 310:lp_solve_5.5/lp_simplex.c ****       report(lp, msglevel, "...returned to original pivot selection rule at iter %.0f.\n",
 2828               		.loc 2 310 0
 2829 1246 2A2D      		mov r18,r10
 2830 1248 3B2D      		mov r19,r11
 2831 124a 4C2D      		mov r20,r12
 2832 124c 5D2D      		mov r21,r13
 2833 124e 6E2D      		mov r22,r14
 2834 1250 7F2D      		mov r23,r15
 2835 1252 802F      		mov r24,r16
 2836 1254 912F      		mov r25,r17
 2837 1256 0E94 0000 		call __floatdisf
 2838 125a DC01      		movw r26,r24
 2839 125c CB01      		movw r24,r22
 2840 125e 2B2F      		mov r18,r27
 2841 1260 2F93      		push r18
 2842 1262 2A2F      		mov r18,r26
 2843 1264 2F93      		push r18
 2844 1266 292F      		mov r18,r25
 2845 1268 2F93      		push r18
 2846 126a 8F93      		push r24
 2847 126c 80E0      		ldi r24,lo8(.LC6)
 2848 126e 90E0      		ldi r25,hi8(.LC6)
 2849 1270 892F      		mov r24,r25
 2850 1272 8F93      		push r24
 2851 1274 80E0      		ldi r24,lo8(.LC6)
 2852 1276 90E0      		ldi r25,hi8(.LC6)
 2853 1278 8F93      		push r24
 2854 127a 8C85      		ldd r24,Y+12
 2855 127c 8F93      		push r24
 2856 127e 8B85      		ldd r24,Y+11
 2857 1280 8F93      		push r24
 2858 1282 8F89      		ldd r24,Y+23
 2859 1284 8F93      		push r24
 2860 1286 8E89      		ldd r24,Y+22
 2861 1288 8F93      		push r24
 2862 128a 0E94 0000 		call report
 2863 128e 8DB7      		in r24,__SP_L__
 2864 1290 9EB7      		in r25,__SP_H__
 2865 1292 0A96      		adiw r24,10
 2866 1294 0FB6      		in __tmp_reg__,__SREG__
 2867 1296 F894      		cli
 2868 1298 DEBF      		out __SP_H__,r29
 2869 129a 0FBE      		out __SREG__,__tmp_reg__
 2870 129c CDBF      		out __SP_L__,r28
 2871               	.L71:
 312:lp_solve_5.5/lp_simplex.c ****     }
 313:lp_solve_5.5/lp_simplex.c ****     stallMonitor_update(lp, monitor->thisobj);
 2872               		.loc 2 313 0
 2873 129e 8985      		ldd r24,Y+9
 2874 12a0 9A85      		ldd r25,Y+10
 2875 12a2 FC01      		movw r30,r24
 2876 12a4 82A5      		ldd r24,Z+42
 2877 12a6 93A5      		ldd r25,Z+43
 2878 12a8 A4A5      		ldd r26,Z+44
 2879 12aa B5A5      		ldd r27,Z+45
 2880 12ac 2E89      		ldd r18,Y+22
 2881 12ae 3F89      		ldd r19,Y+23
 2882 12b0 AC01      		movw r20,r24
 2883 12b2 BD01      		movw r22,r26
 2884 12b4 C901      		movw r24,r18
 2885 12b6 0E94 0000 		call stallMonitor_update
 314:lp_solve_5.5/lp_simplex.c ****     monitor->Ccycle = 0;
 2886               		.loc 2 314 0
 2887 12ba 8985      		ldd r24,Y+9
 2888 12bc 9A85      		ldd r25,Y+10
 2889 12be FC01      		movw r30,r24
 2890 12c0 13A2      		std Z+35,__zero_reg__
 2891 12c2 12A2      		std Z+34,__zero_reg__
 315:lp_solve_5.5/lp_simplex.c ****     monitor->Rcycle = 0;
 2892               		.loc 2 315 0
 2893 12c4 8985      		ldd r24,Y+9
 2894 12c6 9A85      		ldd r25,Y+10
 2895 12c8 FC01      		movw r30,r24
 2896 12ca 11A2      		std Z+33,__zero_reg__
 2897 12cc 10A2      		std Z+32,__zero_reg__
 316:lp_solve_5.5/lp_simplex.c ****     monitor->Ncycle = 0;
 2898               		.loc 2 316 0
 2899 12ce 8985      		ldd r24,Y+9
 2900 12d0 9A85      		ldd r25,Y+10
 2901 12d2 FC01      		movw r30,r24
 2902 12d4 15A2      		std Z+37,__zero_reg__
 2903 12d6 14A2      		std Z+36,__zero_reg__
 317:lp_solve_5.5/lp_simplex.c ****     monitor->Mcycle = 0;
 2904               		.loc 2 317 0
 2905 12d8 8985      		ldd r24,Y+9
 2906 12da 9A85      		ldd r25,Y+10
 2907 12dc FC01      		movw r30,r24
 2908 12de 17A2      		std Z+39,__zero_reg__
 2909 12e0 16A2      		std Z+38,__zero_reg__
 2910 12e2 00C0      		rjmp .L57
 2911               	.L78:
 234:lp_solve_5.5/lp_simplex.c ****       monitor->Ccycle = colnr;
 2912               		.loc 2 234 0
 2913 12e4 0000      		nop
 2914               	.L57:
 318:lp_solve_5.5/lp_simplex.c ****   }
 319:lp_solve_5.5/lp_simplex.c **** 
 320:lp_solve_5.5/lp_simplex.c ****   /* Update objective progress tracker */
 321:lp_solve_5.5/lp_simplex.c **** Proceed:
 322:lp_solve_5.5/lp_simplex.c ****   monitor->Icount++;
 2915               		.loc 2 322 0
 2916 12e6 8985      		ldd r24,Y+9
 2917 12e8 9A85      		ldd r25,Y+10
 2918 12ea FC01      		movw r30,r24
 2919 12ec 80A5      		ldd r24,Z+40
 2920 12ee 91A5      		ldd r25,Z+41
 2921 12f0 9C01      		movw r18,r24
 2922 12f2 2F5F      		subi r18,-1
 2923 12f4 3F4F      		sbci r19,-1
 2924 12f6 8985      		ldd r24,Y+9
 2925 12f8 9A85      		ldd r25,Y+10
 2926 12fa FC01      		movw r30,r24
 2927 12fc 31A7      		std Z+41,r19
 2928 12fe 20A7      		std Z+40,r18
 323:lp_solve_5.5/lp_simplex.c ****   if(deltaobj >= monitor->epsvalue)
 2929               		.loc 2 323 0
 2930 1300 8985      		ldd r24,Y+9
 2931 1302 9A85      		ldd r25,Y+10
 2932 1304 825B      		subi r24,-78
 2933 1306 9F4F      		sbci r25,-1
 2934 1308 FC01      		movw r30,r24
 2935 130a 8081      		ld r24,Z
 2936 130c 9181      		ldd r25,Z+1
 2937 130e A281      		ldd r26,Z+2
 2938 1310 B381      		ldd r27,Z+3
 2939 1312 2D85      		ldd r18,Y+13
 2940 1314 3E85      		ldd r19,Y+14
 2941 1316 4F85      		ldd r20,Y+15
 2942 1318 5889      		ldd r21,Y+16
 2943 131a BC01      		movw r22,r24
 2944 131c CD01      		movw r24,r26
 2945 131e 0E94 0000 		call __lesf2
 2946 1322 1816      		cp __zero_reg__,r24
 2947 1324 04F0      		brlt .L74
 324:lp_solve_5.5/lp_simplex.c ****     monitor->prevobj = monitor->thisobj;
 2948               		.loc 2 324 0
 2949 1326 8985      		ldd r24,Y+9
 2950 1328 9A85      		ldd r25,Y+10
 2951 132a FC01      		movw r30,r24
 2952 132c 82A5      		ldd r24,Z+42
 2953 132e 93A5      		ldd r25,Z+43
 2954 1330 A4A5      		ldd r26,Z+44
 2955 1332 B5A5      		ldd r27,Z+45
 2956 1334 2985      		ldd r18,Y+9
 2957 1336 3A85      		ldd r19,Y+10
 2958 1338 F901      		movw r30,r18
 2959 133a 86A7      		std Z+46,r24
 2960 133c 97A7      		std Z+47,r25
 2961 133e A0AB      		std Z+48,r26
 2962 1340 B1AB      		std Z+49,r27
 2963               	.L74:
 325:lp_solve_5.5/lp_simplex.c ****   monitor->previnfeas = monitor->thisinfeas;
 2964               		.loc 2 325 0
 2965 1342 8985      		ldd r24,Y+9
 2966 1344 9A85      		ldd r25,Y+10
 2967 1346 8A5B      		subi r24,-70
 2968 1348 9F4F      		sbci r25,-1
 2969 134a FC01      		movw r30,r24
 2970 134c 8081      		ld r24,Z
 2971 134e 9181      		ldd r25,Z+1
 2972 1350 A281      		ldd r26,Z+2
 2973 1352 B381      		ldd r27,Z+3
 2974 1354 2985      		ldd r18,Y+9
 2975 1356 3A85      		ldd r19,Y+10
 2976 1358 265B      		subi r18,-74
 2977 135a 3F4F      		sbci r19,-1
 2978 135c F901      		movw r30,r18
 2979 135e 8083      		st Z,r24
 2980 1360 9183      		std Z+1,r25
 2981 1362 A283      		std Z+2,r26
 2982 1364 B383      		std Z+3,r27
 326:lp_solve_5.5/lp_simplex.c **** 
 327:lp_solve_5.5/lp_simplex.c ****   return( acceptance );
 2983               		.loc 2 327 0
 2984 1366 8A81      		ldd r24,Y+2
 2985               	.L38:
 2986               	/* epilogue start */
 328:lp_solve_5.5/lp_simplex.c **** }
 2987               		.loc 2 328 0
 2988 1368 A196      		adiw r28,33
 2989 136a 0FB6      		in __tmp_reg__,__SREG__
 2990 136c F894      		cli
 2991 136e DEBF      		out __SP_H__,r29
 2992 1370 0FBE      		out __SREG__,__tmp_reg__
 2993 1372 CDBF      		out __SP_L__,r28
 2994 1374 DF91      		pop r29
 2995 1376 CF91      		pop r28
 2996 1378 1F91      		pop r17
 2997 137a 0F91      		pop r16
 2998 137c FF90      		pop r15
 2999 137e EF90      		pop r14
 3000 1380 DF90      		pop r13
 3001 1382 CF90      		pop r12
 3002 1384 BF90      		pop r11
 3003 1386 AF90      		pop r10
 3004 1388 9F90      		pop r9
 3005 138a 8F90      		pop r8
 3006 138c 7F90      		pop r7
 3007 138e 6F90      		pop r6
 3008 1390 5F90      		pop r5
 3009 1392 4F90      		pop r4
 3010 1394 0895      		ret
 3011               		.cfi_endproc
 3012               	.LFE14:
 3014               	.global	stallMonitor_finish
 3016               	stallMonitor_finish:
 3017               	.LFB15:
 329:lp_solve_5.5/lp_simplex.c **** 
 330:lp_solve_5.5/lp_simplex.c **** STATIC void stallMonitor_finish(lprec *lp)
 331:lp_solve_5.5/lp_simplex.c **** {
 3018               		.loc 2 331 0
 3019               		.cfi_startproc
 3020 1396 CF93      		push r28
 3021               	.LCFI52:
 3022               		.cfi_def_cfa_offset 3
 3023               		.cfi_offset 28, -2
 3024 1398 DF93      		push r29
 3025               	.LCFI53:
 3026               		.cfi_def_cfa_offset 4
 3027               		.cfi_offset 29, -3
 3028 139a 00D0      		rcall .
 3029 139c 00D0      		rcall .
 3030               	.LCFI54:
 3031               		.cfi_def_cfa_offset 8
 3032 139e CDB7      		in r28,__SP_L__
 3033 13a0 DEB7      		in r29,__SP_H__
 3034               	.LCFI55:
 3035               		.cfi_def_cfa_register 28
 3036               	/* prologue: function */
 3037               	/* frame size = 4 */
 3038               	/* stack size = 6 */
 3039               	.L__stack_usage = 6
 3040 13a2 9C83      		std Y+4,r25
 3041 13a4 8B83      		std Y+3,r24
 332:lp_solve_5.5/lp_simplex.c ****   OBJmonrec *monitor = lp->monitor;
 3042               		.loc 2 332 0
 3043 13a6 8B81      		ldd r24,Y+3
 3044 13a8 9C81      		ldd r25,Y+4
 3045 13aa 8E53      		subi r24,62
 3046 13ac 9D4F      		sbci r25,-3
 3047 13ae FC01      		movw r30,r24
 3048 13b0 8081      		ld r24,Z
 3049 13b2 9181      		ldd r25,Z+1
 3050 13b4 9A83      		std Y+2,r25
 3051 13b6 8983      		std Y+1,r24
 333:lp_solve_5.5/lp_simplex.c ****   if(monitor == NULL)
 3052               		.loc 2 333 0
 3053 13b8 8981      		ldd r24,Y+1
 3054 13ba 9A81      		ldd r25,Y+2
 3055 13bc 892B      		or r24,r25
 3056 13be 01F0      		breq .L85
 334:lp_solve_5.5/lp_simplex.c ****     return;
 335:lp_solve_5.5/lp_simplex.c ****   if(lp->piv_strategy != monitor->oldpivstrategy)
 3057               		.loc 2 335 0
 3058 13c0 8B81      		ldd r24,Y+3
 3059 13c2 9C81      		ldd r25,Y+4
 3060 13c4 805A      		subi r24,-96
 3061 13c6 9D4F      		sbci r25,-3
 3062 13c8 FC01      		movw r30,r24
 3063 13ca 2081      		ld r18,Z
 3064 13cc 3181      		ldd r19,Z+1
 3065 13ce 8981      		ldd r24,Y+1
 3066 13d0 9A81      		ldd r25,Y+2
 3067 13d2 FC01      		movw r30,r24
 3068 13d4 8281      		ldd r24,Z+2
 3069 13d6 9381      		ldd r25,Z+3
 3070 13d8 2817      		cp r18,r24
 3071 13da 3907      		cpc r19,r25
 3072 13dc 01F0      		breq .L83
 336:lp_solve_5.5/lp_simplex.c ****     lp->piv_strategy = monitor->oldpivstrategy;
 3073               		.loc 2 336 0
 3074 13de 8981      		ldd r24,Y+1
 3075 13e0 9A81      		ldd r25,Y+2
 3076 13e2 FC01      		movw r30,r24
 3077 13e4 2281      		ldd r18,Z+2
 3078 13e6 3381      		ldd r19,Z+3
 3079 13e8 8B81      		ldd r24,Y+3
 3080 13ea 9C81      		ldd r25,Y+4
 3081 13ec 805A      		subi r24,-96
 3082 13ee 9D4F      		sbci r25,-3
 3083 13f0 FC01      		movw r30,r24
 3084 13f2 3183      		std Z+1,r19
 3085 13f4 2083      		st Z,r18
 3086               	.L83:
 337:lp_solve_5.5/lp_simplex.c ****   FREE(monitor);
 3087               		.loc 2 337 0
 3088 13f6 8981      		ldd r24,Y+1
 3089 13f8 9A81      		ldd r25,Y+2
 3090 13fa 892B      		or r24,r25
 3091 13fc 01F0      		breq .L84
 3092               		.loc 2 337 0 is_stmt 0 discriminator 1
 3093 13fe 8981      		ldd r24,Y+1
 3094 1400 9A81      		ldd r25,Y+2
 3095 1402 0E94 0000 		call free
 3096 1406 1A82      		std Y+2,__zero_reg__
 3097 1408 1982      		std Y+1,__zero_reg__
 3098               	.L84:
 338:lp_solve_5.5/lp_simplex.c ****   lp->monitor = NULL;
 3099               		.loc 2 338 0 is_stmt 1
 3100 140a 8B81      		ldd r24,Y+3
 3101 140c 9C81      		ldd r25,Y+4
 3102 140e 8E53      		subi r24,62
 3103 1410 9D4F      		sbci r25,-3
 3104 1412 FC01      		movw r30,r24
 3105 1414 1182      		std Z+1,__zero_reg__
 3106 1416 1082      		st Z,__zero_reg__
 3107 1418 00C0      		rjmp .L80
 3108               	.L85:
 334:lp_solve_5.5/lp_simplex.c ****   if(lp->piv_strategy != monitor->oldpivstrategy)
 3109               		.loc 2 334 0
 3110 141a 0000      		nop
 3111               	.L80:
 3112               	/* epilogue start */
 339:lp_solve_5.5/lp_simplex.c **** }
 3113               		.loc 2 339 0
 3114 141c 0F90      		pop __tmp_reg__
 3115 141e 0F90      		pop __tmp_reg__
 3116 1420 0F90      		pop __tmp_reg__
 3117 1422 0F90      		pop __tmp_reg__
 3118 1424 DF91      		pop r29
 3119 1426 CF91      		pop r28
 3120 1428 0895      		ret
 3121               		.cfi_endproc
 3122               	.LFE15:
 3124               		.section	.rodata
 3125               	.LC7:
 3126 0127 6164 645F 		.string	"add_artificial: Could not find replacement basis variable for row %d\n"
 3126      6172 7469 
 3126      6669 6369 
 3126      616C 3A20 
 3126      436F 756C 
 3127               		.text
 3128               	.global	add_artificial
 3130               	add_artificial:
 3131               	.LFB16:
 340:lp_solve_5.5/lp_simplex.c **** 
 341:lp_solve_5.5/lp_simplex.c **** 
 342:lp_solve_5.5/lp_simplex.c **** STATIC MYBOOL add_artificial(lprec *lp, int forrownr, REAL *nzarray, int *idxarray)
 343:lp_solve_5.5/lp_simplex.c **** /* This routine is called for each constraint at the start of
 344:lp_solve_5.5/lp_simplex.c ****    primloop and the primal problem is infeasible. Its
 345:lp_solve_5.5/lp_simplex.c ****    purpose is to add artificial variables and associated
 346:lp_solve_5.5/lp_simplex.c ****    objective function values to populate primal phase 1. */
 347:lp_solve_5.5/lp_simplex.c **** {
 3132               		.loc 2 347 0
 3133               		.cfi_startproc
 3134 142a 0F93      		push r16
 3135               	.LCFI56:
 3136               		.cfi_def_cfa_offset 3
 3137               		.cfi_offset 16, -2
 3138 142c 1F93      		push r17
 3139               	.LCFI57:
 3140               		.cfi_def_cfa_offset 4
 3141               		.cfi_offset 17, -3
 3142 142e CF93      		push r28
 3143               	.LCFI58:
 3144               		.cfi_def_cfa_offset 5
 3145               		.cfi_offset 28, -4
 3146 1430 DF93      		push r29
 3147               	.LCFI59:
 3148               		.cfi_def_cfa_offset 6
 3149               		.cfi_offset 29, -5
 3150 1432 CDB7      		in r28,__SP_L__
 3151 1434 DEB7      		in r29,__SP_H__
 3152               	.LCFI60:
 3153               		.cfi_def_cfa_register 28
 3154 1436 6D97      		sbiw r28,29
 3155               	.LCFI61:
 3156               		.cfi_def_cfa_offset 35
 3157 1438 0FB6      		in __tmp_reg__,__SREG__
 3158 143a F894      		cli
 3159 143c DEBF      		out __SP_H__,r29
 3160 143e 0FBE      		out __SREG__,__tmp_reg__
 3161 1440 CDBF      		out __SP_L__,r28
 3162               	/* prologue: function */
 3163               	/* frame size = 29 */
 3164               	/* stack size = 33 */
 3165               	.L__stack_usage = 33
 3166 1442 9F8B      		std Y+23,r25
 3167 1444 8E8B      		std Y+22,r24
 3168 1446 798F      		std Y+25,r23
 3169 1448 688F      		std Y+24,r22
 3170 144a 5B8F      		std Y+27,r21
 3171 144c 4A8F      		std Y+26,r20
 3172 144e 3D8F      		std Y+29,r19
 3173 1450 2C8F      		std Y+28,r18
 348:lp_solve_5.5/lp_simplex.c ****   MYBOOL add;
 349:lp_solve_5.5/lp_simplex.c **** 
 350:lp_solve_5.5/lp_simplex.c ****   /* Make sure we don't add unnecessary artificials, i.e. avoid
 351:lp_solve_5.5/lp_simplex.c ****      cases where the slack variable is enough */
 352:lp_solve_5.5/lp_simplex.c ****   add = !isBasisVarFeasible(lp, lp->epspivot, forrownr);
 3174               		.loc 2 352 0
 3175 1452 8E89      		ldd r24,Y+22
 3176 1454 9F89      		ldd r25,Y+23
 3177 1456 8E5D      		subi r24,-34
 3178 1458 9C4F      		sbci r25,-4
 3179 145a FC01      		movw r30,r24
 3180 145c 8081      		ld r24,Z
 3181 145e 9181      		ldd r25,Z+1
 3182 1460 A281      		ldd r26,Z+2
 3183 1462 B381      		ldd r27,Z+3
 3184 1464 288D      		ldd r18,Y+24
 3185 1466 398D      		ldd r19,Y+25
 3186 1468 EE89      		ldd r30,Y+22
 3187 146a FF89      		ldd r31,Y+23
 3188 146c AC01      		movw r20,r24
 3189 146e BD01      		movw r22,r26
 3190 1470 CF01      		movw r24,r30
 3191 1472 0E94 0000 		call isBasisVarFeasible
 3192 1476 982F      		mov r25,r24
 3193 1478 81E0      		ldi r24,lo8(1)
 3194 147a 9923      		tst r25
 3195 147c 01F0      		breq .L87
 3196 147e 80E0      		ldi r24,0
 3197               	.L87:
 3198 1480 8983      		std Y+1,r24
 353:lp_solve_5.5/lp_simplex.c **** 
 354:lp_solve_5.5/lp_simplex.c ****   if(add) {
 3199               		.loc 2 354 0
 3200 1482 8981      		ldd r24,Y+1
 3201 1484 8823      		tst r24
 3202 1486 01F4      		brne .+2
 3203 1488 00C0      		rjmp .L88
 3204               	.LBB5:
 355:lp_solve_5.5/lp_simplex.c ****     int    *rownr = NULL, i, bvar, ii;
 3205               		.loc 2 355 0
 3206 148a 1B8A      		std Y+19,__zero_reg__
 3207 148c 1A8A      		std Y+18,__zero_reg__
 356:lp_solve_5.5/lp_simplex.c ****     REAL   *avalue = NULL, rhscoef, acoef;
 3208               		.loc 2 356 0
 3209 148e 1D8A      		std Y+21,__zero_reg__
 3210 1490 1C8A      		std Y+20,__zero_reg__
 357:lp_solve_5.5/lp_simplex.c ****     MATrec *mat = lp->matA;
 3211               		.loc 2 357 0
 3212 1492 8E89      		ldd r24,Y+22
 3213 1494 9F89      		ldd r25,Y+23
 3214 1496 8A54      		subi r24,74
 3215 1498 9D4F      		sbci r25,-3
 3216 149a FC01      		movw r30,r24
 3217 149c 8081      		ld r24,Z
 3218 149e 9181      		ldd r25,Z+1
 3219 14a0 9987      		std Y+9,r25
 3220 14a2 8887      		std Y+8,r24
 358:lp_solve_5.5/lp_simplex.c **** 
 359:lp_solve_5.5/lp_simplex.c ****     /* Check the simple case where a slack is basic */
 360:lp_solve_5.5/lp_simplex.c ****     for(i = 1; i <= lp->rows; i++) {
 3221               		.loc 2 360 0
 3222 14a4 81E0      		ldi r24,lo8(1)
 3223 14a6 90E0      		ldi r25,0
 3224 14a8 9B83      		std Y+3,r25
 3225 14aa 8A83      		std Y+2,r24
 3226 14ac 00C0      		rjmp .L89
 3227               	.L92:
 361:lp_solve_5.5/lp_simplex.c ****       if(lp->var_basic[i] == forrownr)
 3228               		.loc 2 361 0
 3229 14ae 8E89      		ldd r24,Y+22
 3230 14b0 9F89      		ldd r25,Y+23
 3231 14b2 8453      		subi r24,52
 3232 14b4 9D4F      		sbci r25,-3
 3233 14b6 FC01      		movw r30,r24
 3234 14b8 2081      		ld r18,Z
 3235 14ba 3181      		ldd r19,Z+1
 3236 14bc 8A81      		ldd r24,Y+2
 3237 14be 9B81      		ldd r25,Y+3
 3238 14c0 880F      		lsl r24
 3239 14c2 991F      		rol r25
 3240 14c4 820F      		add r24,r18
 3241 14c6 931F      		adc r25,r19
 3242 14c8 FC01      		movw r30,r24
 3243 14ca 2081      		ld r18,Z
 3244 14cc 3181      		ldd r19,Z+1
 3245 14ce 888D      		ldd r24,Y+24
 3246 14d0 998D      		ldd r25,Y+25
 3247 14d2 2817      		cp r18,r24
 3248 14d4 3907      		cpc r19,r25
 3249 14d6 01F0      		breq .L123
 360:lp_solve_5.5/lp_simplex.c ****       if(lp->var_basic[i] == forrownr)
 3250               		.loc 2 360 0 discriminator 2
 3251 14d8 8A81      		ldd r24,Y+2
 3252 14da 9B81      		ldd r25,Y+3
 3253 14dc 0196      		adiw r24,1
 3254 14de 9B83      		std Y+3,r25
 3255 14e0 8A83      		std Y+2,r24
 3256               	.L89:
 360:lp_solve_5.5/lp_simplex.c ****       if(lp->var_basic[i] == forrownr)
 3257               		.loc 2 360 0 is_stmt 0 discriminator 1
 3258 14e2 8E89      		ldd r24,Y+22
 3259 14e4 9F89      		ldd r25,Y+23
 3260 14e6 8651      		subi r24,22
 3261 14e8 9E4F      		sbci r25,-2
 3262 14ea FC01      		movw r30,r24
 3263 14ec 2081      		ld r18,Z
 3264 14ee 3181      		ldd r19,Z+1
 3265 14f0 8A81      		ldd r24,Y+2
 3266 14f2 9B81      		ldd r25,Y+3
 3267 14f4 2817      		cp r18,r24
 3268 14f6 3907      		cpc r19,r25
 3269 14f8 04F4      		brge .L92
 3270 14fa 00C0      		rjmp .L91
 3271               	.L123:
 362:lp_solve_5.5/lp_simplex.c ****         break;
 3272               		.loc 2 362 0 is_stmt 1
 3273 14fc 0000      		nop
 3274               	.L91:
 363:lp_solve_5.5/lp_simplex.c ****     }
 364:lp_solve_5.5/lp_simplex.c ****     acoef = 1;
 3275               		.loc 2 364 0
 3276 14fe 80E0      		ldi r24,0
 3277 1500 90E0      		ldi r25,0
 3278 1502 A0E8      		ldi r26,lo8(-128)
 3279 1504 BFE3      		ldi r27,lo8(63)
 3280 1506 8C83      		std Y+4,r24
 3281 1508 9D83      		std Y+5,r25
 3282 150a AE83      		std Y+6,r26
 3283 150c BF83      		std Y+7,r27
 365:lp_solve_5.5/lp_simplex.c **** 
 366:lp_solve_5.5/lp_simplex.c ****     /* If not, look for any basic user variable that has a
 367:lp_solve_5.5/lp_simplex.c ****        non-zero coefficient in the current constraint row */
 368:lp_solve_5.5/lp_simplex.c ****     if(i > lp->rows) {
 3284               		.loc 2 368 0
 3285 150e 8E89      		ldd r24,Y+22
 3286 1510 9F89      		ldd r25,Y+23
 3287 1512 8651      		subi r24,22
 3288 1514 9E4F      		sbci r25,-2
 3289 1516 FC01      		movw r30,r24
 3290 1518 2081      		ld r18,Z
 3291 151a 3181      		ldd r19,Z+1
 3292 151c 8A81      		ldd r24,Y+2
 3293 151e 9B81      		ldd r25,Y+3
 3294 1520 2817      		cp r18,r24
 3295 1522 3907      		cpc r19,r25
 3296 1524 04F0      		brlt .+2
 3297 1526 00C0      		rjmp .L93
 369:lp_solve_5.5/lp_simplex.c ****       for(i = 1; i <= lp->rows; i++) {
 3298               		.loc 2 369 0
 3299 1528 81E0      		ldi r24,lo8(1)
 3300 152a 90E0      		ldi r25,0
 3301 152c 9B83      		std Y+3,r25
 3302 152e 8A83      		std Y+2,r24
 3303 1530 00C0      		rjmp .L94
 3304               	.L98:
 370:lp_solve_5.5/lp_simplex.c ****         ii = lp->var_basic[i] - lp->rows;
 3305               		.loc 2 370 0
 3306 1532 8E89      		ldd r24,Y+22
 3307 1534 9F89      		ldd r25,Y+23
 3308 1536 8453      		subi r24,52
 3309 1538 9D4F      		sbci r25,-3
 3310 153a FC01      		movw r30,r24
 3311 153c 2081      		ld r18,Z
 3312 153e 3181      		ldd r19,Z+1
 3313 1540 8A81      		ldd r24,Y+2
 3314 1542 9B81      		ldd r25,Y+3
 3315 1544 880F      		lsl r24
 3316 1546 991F      		rol r25
 3317 1548 820F      		add r24,r18
 3318 154a 931F      		adc r25,r19
 3319 154c FC01      		movw r30,r24
 3320 154e 2081      		ld r18,Z
 3321 1550 3181      		ldd r19,Z+1
 3322 1552 8E89      		ldd r24,Y+22
 3323 1554 9F89      		ldd r25,Y+23
 3324 1556 8651      		subi r24,22
 3325 1558 9E4F      		sbci r25,-2
 3326 155a FC01      		movw r30,r24
 3327 155c 8081      		ld r24,Z
 3328 155e 9181      		ldd r25,Z+1
 3329 1560 A901      		movw r20,r18
 3330 1562 481B      		sub r20,r24
 3331 1564 590B      		sbc r21,r25
 3332 1566 CA01      		movw r24,r20
 3333 1568 9B87      		std Y+11,r25
 3334 156a 8A87      		std Y+10,r24
 371:lp_solve_5.5/lp_simplex.c ****         if((ii <= 0) || (ii > (lp->columns-lp->P1extraDim)))
 3335               		.loc 2 371 0
 3336 156c 8A85      		ldd r24,Y+10
 3337 156e 9B85      		ldd r25,Y+11
 3338 1570 1816      		cp __zero_reg__,r24
 3339 1572 1906      		cpc __zero_reg__,r25
 3340 1574 04F4      		brge .L124
 3341               		.loc 2 371 0 is_stmt 0 discriminator 1
 3342 1576 8E89      		ldd r24,Y+22
 3343 1578 9F89      		ldd r25,Y+23
 3344 157a 8451      		subi r24,20
 3345 157c 9E4F      		sbci r25,-2
 3346 157e FC01      		movw r30,r24
 3347 1580 2081      		ld r18,Z
 3348 1582 3181      		ldd r19,Z+1
 3349 1584 8E89      		ldd r24,Y+22
 3350 1586 9F89      		ldd r25,Y+23
 3351 1588 8051      		subi r24,16
 3352 158a 9D4F      		sbci r25,-3
 3353 158c FC01      		movw r30,r24
 3354 158e 8081      		ld r24,Z
 3355 1590 9181      		ldd r25,Z+1
 3356 1592 281B      		sub r18,r24
 3357 1594 390B      		sbc r19,r25
 3358 1596 8A85      		ldd r24,Y+10
 3359 1598 9B85      		ldd r25,Y+11
 3360 159a 2817      		cp r18,r24
 3361 159c 3907      		cpc r19,r25
 3362 159e 04F0      		brlt .L124
 372:lp_solve_5.5/lp_simplex.c ****           continue;
 373:lp_solve_5.5/lp_simplex.c ****         ii = mat_findelm(mat, forrownr, ii);
 3363               		.loc 2 373 0 is_stmt 1
 3364 15a0 4A85      		ldd r20,Y+10
 3365 15a2 5B85      		ldd r21,Y+11
 3366 15a4 288D      		ldd r18,Y+24
 3367 15a6 398D      		ldd r19,Y+25
 3368 15a8 8885      		ldd r24,Y+8
 3369 15aa 9985      		ldd r25,Y+9
 3370 15ac B901      		movw r22,r18
 3371 15ae 0E94 0000 		call mat_findelm
 3372 15b2 9B87      		std Y+11,r25
 3373 15b4 8A87      		std Y+10,r24
 374:lp_solve_5.5/lp_simplex.c ****         if(ii >= 0) {
 3374               		.loc 2 374 0
 3375 15b6 8A85      		ldd r24,Y+10
 3376 15b8 9B85      		ldd r25,Y+11
 3377 15ba 9923      		tst r25
 3378 15bc 04F0      		brlt .L97
 375:lp_solve_5.5/lp_simplex.c ****           acoef = COL_MAT_VALUE(ii);
 3379               		.loc 2 375 0
 3380 15be 8885      		ldd r24,Y+8
 3381 15c0 9985      		ldd r25,Y+9
 3382 15c2 FC01      		movw r30,r24
 3383 15c4 2089      		ldd r18,Z+16
 3384 15c6 3189      		ldd r19,Z+17
 3385 15c8 8A85      		ldd r24,Y+10
 3386 15ca 9B85      		ldd r25,Y+11
 3387 15cc 880F      		lsl r24
 3388 15ce 991F      		rol r25
 3389 15d0 880F      		lsl r24
 3390 15d2 991F      		rol r25
 3391 15d4 820F      		add r24,r18
 3392 15d6 931F      		adc r25,r19
 3393 15d8 FC01      		movw r30,r24
 3394 15da 8081      		ld r24,Z
 3395 15dc 9181      		ldd r25,Z+1
 3396 15de A281      		ldd r26,Z+2
 3397 15e0 B381      		ldd r27,Z+3
 3398 15e2 8C83      		std Y+4,r24
 3399 15e4 9D83      		std Y+5,r25
 3400 15e6 AE83      		std Y+6,r26
 3401 15e8 BF83      		std Y+7,r27
 376:lp_solve_5.5/lp_simplex.c ****           break;
 3402               		.loc 2 376 0
 3403 15ea 00C0      		rjmp .L93
 3404               	.L124:
 372:lp_solve_5.5/lp_simplex.c ****         ii = mat_findelm(mat, forrownr, ii);
 3405               		.loc 2 372 0
 3406 15ec 0000      		nop
 3407               	.L97:
 369:lp_solve_5.5/lp_simplex.c ****         ii = lp->var_basic[i] - lp->rows;
 3408               		.loc 2 369 0 discriminator 2
 3409 15ee 8A81      		ldd r24,Y+2
 3410 15f0 9B81      		ldd r25,Y+3
 3411 15f2 0196      		adiw r24,1
 3412 15f4 9B83      		std Y+3,r25
 3413 15f6 8A83      		std Y+2,r24
 3414               	.L94:
 369:lp_solve_5.5/lp_simplex.c ****         ii = lp->var_basic[i] - lp->rows;
 3415               		.loc 2 369 0 is_stmt 0 discriminator 1
 3416 15f8 8E89      		ldd r24,Y+22
 3417 15fa 9F89      		ldd r25,Y+23
 3418 15fc 8651      		subi r24,22
 3419 15fe 9E4F      		sbci r25,-2
 3420 1600 FC01      		movw r30,r24
 3421 1602 2081      		ld r18,Z
 3422 1604 3181      		ldd r19,Z+1
 3423 1606 8A81      		ldd r24,Y+2
 3424 1608 9B81      		ldd r25,Y+3
 3425 160a 2817      		cp r18,r24
 3426 160c 3907      		cpc r19,r25
 3427 160e 04F0      		brlt .+2
 3428 1610 00C0      		rjmp .L98
 3429               	.L93:
 377:lp_solve_5.5/lp_simplex.c ****         }
 378:lp_solve_5.5/lp_simplex.c ****       }
 379:lp_solve_5.5/lp_simplex.c ****     }
 380:lp_solve_5.5/lp_simplex.c **** 
 381:lp_solve_5.5/lp_simplex.c ****     /* If no candidate was found above, gamble on using the densest column available */
 382:lp_solve_5.5/lp_simplex.c **** #if 0
 383:lp_solve_5.5/lp_simplex.c ****     if(i > lp->rows) {
 384:lp_solve_5.5/lp_simplex.c ****       int len = 0;
 385:lp_solve_5.5/lp_simplex.c ****       bvar = 0;
 386:lp_solve_5.5/lp_simplex.c ****       for(i = 1; i <= lp->rows; i++) {
 387:lp_solve_5.5/lp_simplex.c ****         ii = lp->var_basic[i] - lp->rows;
 388:lp_solve_5.5/lp_simplex.c ****         if((ii <= 0) || (ii > (lp->columns-lp->P1extraDim)))
 389:lp_solve_5.5/lp_simplex.c ****           continue;
 390:lp_solve_5.5/lp_simplex.c ****         if(mat_collength(mat, ii) > len) {
 391:lp_solve_5.5/lp_simplex.c ****           len = mat_collength(mat, ii);
 392:lp_solve_5.5/lp_simplex.c ****           bvar = i;
 393:lp_solve_5.5/lp_simplex.c ****         }
 394:lp_solve_5.5/lp_simplex.c ****       }
 395:lp_solve_5.5/lp_simplex.c ****       i = bvar;
 396:lp_solve_5.5/lp_simplex.c ****       acoef = 1;
 397:lp_solve_5.5/lp_simplex.c ****     }
 398:lp_solve_5.5/lp_simplex.c **** #endif
 399:lp_solve_5.5/lp_simplex.c **** 
 400:lp_solve_5.5/lp_simplex.c ****     bvar = i;
 3430               		.loc 2 400 0 is_stmt 1
 3431 1612 8A81      		ldd r24,Y+2
 3432 1614 9B81      		ldd r25,Y+3
 3433 1616 9D87      		std Y+13,r25
 3434 1618 8C87      		std Y+12,r24
 401:lp_solve_5.5/lp_simplex.c **** 
 402:lp_solve_5.5/lp_simplex.c ****     add = (MYBOOL) (bvar <= lp->rows);
 3435               		.loc 2 402 0
 3436 161a 8E89      		ldd r24,Y+22
 3437 161c 9F89      		ldd r25,Y+23
 3438 161e 8651      		subi r24,22
 3439 1620 9E4F      		sbci r25,-2
 3440 1622 FC01      		movw r30,r24
 3441 1624 2081      		ld r18,Z
 3442 1626 3181      		ldd r19,Z+1
 3443 1628 41E0      		ldi r20,lo8(1)
 3444 162a 8C85      		ldd r24,Y+12
 3445 162c 9D85      		ldd r25,Y+13
 3446 162e 2817      		cp r18,r24
 3447 1630 3907      		cpc r19,r25
 3448 1632 04F4      		brge .L99
 3449 1634 40E0      		ldi r20,0
 3450               	.L99:
 3451 1636 4983      		std Y+1,r20
 403:lp_solve_5.5/lp_simplex.c ****     if(add) {
 3452               		.loc 2 403 0
 3453 1638 8981      		ldd r24,Y+1
 3454 163a 8823      		tst r24
 3455 163c 01F4      		brne .+2
 3456 163e 00C0      		rjmp .L100
 404:lp_solve_5.5/lp_simplex.c ****       rhscoef = lp->rhs[forrownr];
 3457               		.loc 2 404 0
 3458 1640 8E89      		ldd r24,Y+22
 3459 1642 9F89      		ldd r25,Y+23
 3460 1644 8855      		subi r24,88
 3461 1646 9D4F      		sbci r25,-3
 3462 1648 FC01      		movw r30,r24
 3463 164a 2081      		ld r18,Z
 3464 164c 3181      		ldd r19,Z+1
 3465 164e 888D      		ldd r24,Y+24
 3466 1650 998D      		ldd r25,Y+25
 3467 1652 880F      		lsl r24
 3468 1654 991F      		rol r25
 3469 1656 880F      		lsl r24
 3470 1658 991F      		rol r25
 3471 165a 820F      		add r24,r18
 3472 165c 931F      		adc r25,r19
 3473 165e FC01      		movw r30,r24
 3474 1660 8081      		ld r24,Z
 3475 1662 9181      		ldd r25,Z+1
 3476 1664 A281      		ldd r26,Z+2
 3477 1666 B381      		ldd r27,Z+3
 3478 1668 8E87      		std Y+14,r24
 3479 166a 9F87      		std Y+15,r25
 3480 166c A88B      		std Y+16,r26
 3481 166e B98B      		std Y+17,r27
 405:lp_solve_5.5/lp_simplex.c **** 
 406:lp_solve_5.5/lp_simplex.c ****      /* Create temporary sparse array storage */
 407:lp_solve_5.5/lp_simplex.c ****       if(nzarray == NULL)
 3482               		.loc 2 407 0
 3483 1670 8A8D      		ldd r24,Y+26
 3484 1672 9B8D      		ldd r25,Y+27
 3485 1674 892B      		or r24,r25
 3486 1676 01F4      		brne .L101
 408:lp_solve_5.5/lp_simplex.c ****         allocREAL(lp, &avalue, 2, FALSE);
 3487               		.loc 2 408 0
 3488 1678 BE01      		movw r22,r28
 3489 167a 6C5E      		subi r22,-20
 3490 167c 7F4F      		sbci r23,-1
 3491 167e 8E89      		ldd r24,Y+22
 3492 1680 9F89      		ldd r25,Y+23
 3493 1682 20E0      		ldi r18,0
 3494 1684 42E0      		ldi r20,lo8(2)
 3495 1686 50E0      		ldi r21,0
 3496 1688 0E94 0000 		call allocREAL
 3497 168c 00C0      		rjmp .L102
 3498               	.L101:
 409:lp_solve_5.5/lp_simplex.c ****       else
 410:lp_solve_5.5/lp_simplex.c ****         avalue = nzarray;
 3499               		.loc 2 410 0
 3500 168e 8A8D      		ldd r24,Y+26
 3501 1690 9B8D      		ldd r25,Y+27
 3502 1692 9D8B      		std Y+21,r25
 3503 1694 8C8B      		std Y+20,r24
 3504               	.L102:
 411:lp_solve_5.5/lp_simplex.c ****       if(idxarray == NULL)
 3505               		.loc 2 411 0
 3506 1696 8C8D      		ldd r24,Y+28
 3507 1698 9D8D      		ldd r25,Y+29
 3508 169a 892B      		or r24,r25
 3509 169c 01F4      		brne .L103
 412:lp_solve_5.5/lp_simplex.c ****         allocINT(lp, &rownr, 2, FALSE);
 3510               		.loc 2 412 0
 3511 169e BE01      		movw r22,r28
 3512 16a0 6E5E      		subi r22,-18
 3513 16a2 7F4F      		sbci r23,-1
 3514 16a4 8E89      		ldd r24,Y+22
 3515 16a6 9F89      		ldd r25,Y+23
 3516 16a8 20E0      		ldi r18,0
 3517 16aa 42E0      		ldi r20,lo8(2)
 3518 16ac 50E0      		ldi r21,0
 3519 16ae 0E94 0000 		call allocINT
 3520 16b2 00C0      		rjmp .L104
 3521               	.L103:
 413:lp_solve_5.5/lp_simplex.c ****       else
 414:lp_solve_5.5/lp_simplex.c ****         rownr = idxarray;
 3522               		.loc 2 414 0
 3523 16b4 8C8D      		ldd r24,Y+28
 3524 16b6 9D8D      		ldd r25,Y+29
 3525 16b8 9B8B      		std Y+19,r25
 3526 16ba 8A8B      		std Y+18,r24
 3527               	.L104:
 415:lp_solve_5.5/lp_simplex.c **** 
 416:lp_solve_5.5/lp_simplex.c ****      /* Set the objective coefficient */
 417:lp_solve_5.5/lp_simplex.c ****       rownr[0]  =  0;
 3528               		.loc 2 417 0
 3529 16bc 8A89      		ldd r24,Y+18
 3530 16be 9B89      		ldd r25,Y+19
 3531 16c0 FC01      		movw r30,r24
 3532 16c2 1182      		std Z+1,__zero_reg__
 3533 16c4 1082      		st Z,__zero_reg__
 418:lp_solve_5.5/lp_simplex.c ****       avalue[0] = my_chsign(is_chsign(lp, 0), 1);
 3534               		.loc 2 418 0
 3535 16c6 0C89      		ldd r16,Y+20
 3536 16c8 1D89      		ldd r17,Y+21
 3537 16ca 8E89      		ldd r24,Y+22
 3538 16cc 9F89      		ldd r25,Y+23
 3539 16ce 60E0      		ldi r22,0
 3540 16d0 70E0      		ldi r23,0
 3541 16d2 0E94 0000 		call is_chsign
 3542 16d6 8823      		tst r24
 3543 16d8 01F0      		breq .L105
 3544               		.loc 2 418 0 is_stmt 0 discriminator 3
 3545 16da 80E0      		ldi r24,0
 3546 16dc 90E0      		ldi r25,0
 3547 16de A0E8      		ldi r26,lo8(-128)
 3548 16e0 BFEB      		ldi r27,lo8(-65)
 3549 16e2 00C0      		rjmp .L106
 3550               	.L105:
 3551               		.loc 2 418 0 discriminator 4
 3552 16e4 80E0      		ldi r24,0
 3553 16e6 90E0      		ldi r25,0
 3554 16e8 A0E8      		ldi r26,lo8(-128)
 3555 16ea BFE3      		ldi r27,lo8(63)
 3556               	.L106:
 3557               		.loc 2 418 0 discriminator 6
 3558 16ec F801      		movw r30,r16
 3559 16ee 8083      		st Z,r24
 3560 16f0 9183      		std Z+1,r25
 3561 16f2 A283      		std Z+2,r26
 3562 16f4 B383      		std Z+3,r27
 419:lp_solve_5.5/lp_simplex.c **** 
 420:lp_solve_5.5/lp_simplex.c ****      /* Set the constraint row coefficient */
 421:lp_solve_5.5/lp_simplex.c ****       rownr[1]  = forrownr;
 3563               		.loc 2 421 0 is_stmt 1 discriminator 6
 3564 16f6 8A89      		ldd r24,Y+18
 3565 16f8 9B89      		ldd r25,Y+19
 3566 16fa 0296      		adiw r24,2
 3567 16fc 288D      		ldd r18,Y+24
 3568 16fe 398D      		ldd r19,Y+25
 3569 1700 FC01      		movw r30,r24
 3570 1702 3183      		std Z+1,r19
 3571 1704 2083      		st Z,r18
 422:lp_solve_5.5/lp_simplex.c ****       avalue[1] = my_chsign(is_chsign(lp, forrownr), my_sign(rhscoef/acoef));
 3572               		.loc 2 422 0 discriminator 6
 3573 1706 8C89      		ldd r24,Y+20
 3574 1708 9D89      		ldd r25,Y+21
 3575 170a 8C01      		movw r16,r24
 3576 170c 0C5F      		subi r16,-4
 3577 170e 1F4F      		sbci r17,-1
 3578 1710 288D      		ldd r18,Y+24
 3579 1712 398D      		ldd r19,Y+25
 3580 1714 8E89      		ldd r24,Y+22
 3581 1716 9F89      		ldd r25,Y+23
 3582 1718 B901      		movw r22,r18
 3583 171a 0E94 0000 		call is_chsign
 3584 171e 8823      		tst r24
 3585 1720 01F0      		breq .L107
 3586               		.loc 2 422 0 is_stmt 0 discriminator 3
 3587 1722 2C81      		ldd r18,Y+4
 3588 1724 3D81      		ldd r19,Y+5
 3589 1726 4E81      		ldd r20,Y+6
 3590 1728 5F81      		ldd r21,Y+7
 3591 172a 6E85      		ldd r22,Y+14
 3592 172c 7F85      		ldd r23,Y+15
 3593 172e 8889      		ldd r24,Y+16
 3594 1730 9989      		ldd r25,Y+17
 3595 1732 0E94 0000 		call __divsf3
 3596 1736 DC01      		movw r26,r24
 3597 1738 CB01      		movw r24,r22
 3598 173a 20E0      		ldi r18,0
 3599 173c 30E0      		ldi r19,0
 3600 173e A901      		movw r20,r18
 3601 1740 BC01      		movw r22,r24
 3602 1742 CD01      		movw r24,r26
 3603 1744 0E94 0000 		call __ltsf2
 3604 1748 8823      		tst r24
 3605 174a 04F4      		brge .L121
 3606               		.loc 2 422 0 discriminator 5
 3607 174c 80E0      		ldi r24,0
 3608 174e 90E0      		ldi r25,0
 3609 1750 A0E8      		ldi r26,lo8(-128)
 3610 1752 BFE3      		ldi r27,lo8(63)
 3611 1754 00C0      		rjmp .L111
 3612               	.L121:
 3613               		.loc 2 422 0 discriminator 6
 3614 1756 80E0      		ldi r24,0
 3615 1758 90E0      		ldi r25,0
 3616 175a A0E8      		ldi r26,lo8(-128)
 3617 175c BFEB      		ldi r27,lo8(-65)
 3618 175e 00C0      		rjmp .L111
 3619               	.L107:
 3620               		.loc 2 422 0 discriminator 4
 3621 1760 2C81      		ldd r18,Y+4
 3622 1762 3D81      		ldd r19,Y+5
 3623 1764 4E81      		ldd r20,Y+6
 3624 1766 5F81      		ldd r21,Y+7
 3625 1768 6E85      		ldd r22,Y+14
 3626 176a 7F85      		ldd r23,Y+15
 3627 176c 8889      		ldd r24,Y+16
 3628 176e 9989      		ldd r25,Y+17
 3629 1770 0E94 0000 		call __divsf3
 3630 1774 DC01      		movw r26,r24
 3631 1776 CB01      		movw r24,r22
 3632 1778 20E0      		ldi r18,0
 3633 177a 30E0      		ldi r19,0
 3634 177c A901      		movw r20,r18
 3635 177e BC01      		movw r22,r24
 3636 1780 CD01      		movw r24,r26
 3637 1782 0E94 0000 		call __ltsf2
 3638 1786 8823      		tst r24
 3639 1788 04F4      		brge .L122
 3640               		.loc 2 422 0 discriminator 10
 3641 178a 80E0      		ldi r24,0
 3642 178c 90E0      		ldi r25,0
 3643 178e A0E8      		ldi r26,lo8(-128)
 3644 1790 BFEB      		ldi r27,lo8(-65)
 3645 1792 00C0      		rjmp .L111
 3646               	.L122:
 3647               		.loc 2 422 0 discriminator 11
 3648 1794 80E0      		ldi r24,0
 3649 1796 90E0      		ldi r25,0
 3650 1798 A0E8      		ldi r26,lo8(-128)
 3651 179a BFE3      		ldi r27,lo8(63)
 3652               	.L111:
 3653               		.loc 2 422 0 discriminator 14
 3654 179c F801      		movw r30,r16
 3655 179e 8083      		st Z,r24
 3656 17a0 9183      		std Z+1,r25
 3657 17a2 A283      		std Z+2,r26
 3658 17a4 B383      		std Z+3,r27
 423:lp_solve_5.5/lp_simplex.c **** 
 424:lp_solve_5.5/lp_simplex.c ****      /* Add the column of artificial variable data to the user data matrix */
 425:lp_solve_5.5/lp_simplex.c ****       add_columnex(lp, 2, avalue, rownr);
 3659               		.loc 2 425 0 is_stmt 1 discriminator 14
 3660 17a6 2A89      		ldd r18,Y+18
 3661 17a8 3B89      		ldd r19,Y+19
 3662 17aa 4C89      		ldd r20,Y+20
 3663 17ac 5D89      		ldd r21,Y+21
 3664 17ae 8E89      		ldd r24,Y+22
 3665 17b0 9F89      		ldd r25,Y+23
 3666 17b2 62E0      		ldi r22,lo8(2)
 3667 17b4 70E0      		ldi r23,0
 3668 17b6 0E94 0000 		call add_columnex
 426:lp_solve_5.5/lp_simplex.c **** 
 427:lp_solve_5.5/lp_simplex.c ****      /* Free the temporary sparse array storage */
 428:lp_solve_5.5/lp_simplex.c ****       if(idxarray == NULL)
 3669               		.loc 2 428 0 discriminator 14
 3670 17ba 8C8D      		ldd r24,Y+28
 3671 17bc 9D8D      		ldd r25,Y+29
 3672 17be 892B      		or r24,r25
 3673 17c0 01F4      		brne .L115
 429:lp_solve_5.5/lp_simplex.c ****         FREE(rownr);
 3674               		.loc 2 429 0
 3675 17c2 8A89      		ldd r24,Y+18
 3676 17c4 9B89      		ldd r25,Y+19
 3677 17c6 892B      		or r24,r25
 3678 17c8 01F0      		breq .L115
 3679               		.loc 2 429 0 is_stmt 0 discriminator 1
 3680 17ca 8A89      		ldd r24,Y+18
 3681 17cc 9B89      		ldd r25,Y+19
 3682 17ce 0E94 0000 		call free
 3683 17d2 1B8A      		std Y+19,__zero_reg__
 3684 17d4 1A8A      		std Y+18,__zero_reg__
 3685               	.L115:
 430:lp_solve_5.5/lp_simplex.c ****       if(nzarray == NULL)
 3686               		.loc 2 430 0 is_stmt 1
 3687 17d6 8A8D      		ldd r24,Y+26
 3688 17d8 9B8D      		ldd r25,Y+27
 3689 17da 892B      		or r24,r25
 3690 17dc 01F4      		brne .L116
 431:lp_solve_5.5/lp_simplex.c ****         FREE(avalue);
 3691               		.loc 2 431 0
 3692 17de 8C89      		ldd r24,Y+20
 3693 17e0 9D89      		ldd r25,Y+21
 3694 17e2 892B      		or r24,r25
 3695 17e4 01F0      		breq .L116
 3696               		.loc 2 431 0 is_stmt 0 discriminator 1
 3697 17e6 8C89      		ldd r24,Y+20
 3698 17e8 9D89      		ldd r25,Y+21
 3699 17ea 0E94 0000 		call free
 3700 17ee 1D8A      		std Y+21,__zero_reg__
 3701 17f0 1C8A      		std Y+20,__zero_reg__
 3702               	.L116:
 432:lp_solve_5.5/lp_simplex.c **** 
 433:lp_solve_5.5/lp_simplex.c ****      /* Now set the artificial variable to be basic */
 434:lp_solve_5.5/lp_simplex.c ****       set_basisvar(lp, bvar, lp->sum);
 3703               		.loc 2 434 0 is_stmt 1
 3704 17f2 8E89      		ldd r24,Y+22
 3705 17f4 9F89      		ldd r25,Y+23
 3706 17f6 8851      		subi r24,24
 3707 17f8 9E4F      		sbci r25,-2
 3708 17fa FC01      		movw r30,r24
 3709 17fc 4081      		ld r20,Z
 3710 17fe 5181      		ldd r21,Z+1
 3711 1800 2C85      		ldd r18,Y+12
 3712 1802 3D85      		ldd r19,Y+13
 3713 1804 8E89      		ldd r24,Y+22
 3714 1806 9F89      		ldd r25,Y+23
 3715 1808 B901      		movw r22,r18
 3716 180a 0E94 0000 		call set_basisvar
 435:lp_solve_5.5/lp_simplex.c ****       lp->P1extraDim++;
 3717               		.loc 2 435 0
 3718 180e 8E89      		ldd r24,Y+22
 3719 1810 9F89      		ldd r25,Y+23
 3720 1812 8051      		subi r24,16
 3721 1814 9D4F      		sbci r25,-3
 3722 1816 FC01      		movw r30,r24
 3723 1818 8081      		ld r24,Z
 3724 181a 9181      		ldd r25,Z+1
 3725 181c 9C01      		movw r18,r24
 3726 181e 2F5F      		subi r18,-1
 3727 1820 3F4F      		sbci r19,-1
 3728 1822 8E89      		ldd r24,Y+22
 3729 1824 9F89      		ldd r25,Y+23
 3730 1826 8051      		subi r24,16
 3731 1828 9D4F      		sbci r25,-3
 3732 182a FC01      		movw r30,r24
 3733 182c 3183      		std Z+1,r19
 3734 182e 2083      		st Z,r18
 3735 1830 00C0      		rjmp .L88
 3736               	.L100:
 436:lp_solve_5.5/lp_simplex.c ****     }
 437:lp_solve_5.5/lp_simplex.c ****     else {
 438:lp_solve_5.5/lp_simplex.c ****       report(lp, CRITICAL, "add_artificial: Could not find replacement basis variable for row %d\n"
 3737               		.loc 2 438 0
 3738 1832 898D      		ldd r24,Y+25
 3739 1834 8F93      		push r24
 3740 1836 888D      		ldd r24,Y+24
 3741 1838 8F93      		push r24
 3742 183a 80E0      		ldi r24,lo8(.LC7)
 3743 183c 90E0      		ldi r25,hi8(.LC7)
 3744 183e 892F      		mov r24,r25
 3745 1840 8F93      		push r24
 3746 1842 80E0      		ldi r24,lo8(.LC7)
 3747 1844 90E0      		ldi r25,hi8(.LC7)
 3748 1846 8F93      		push r24
 3749 1848 1F92      		push __zero_reg__
 3750 184a 81E0      		ldi r24,lo8(1)
 3751 184c 8F93      		push r24
 3752 184e 8F89      		ldd r24,Y+23
 3753 1850 8F93      		push r24
 3754 1852 8E89      		ldd r24,Y+22
 3755 1854 8F93      		push r24
 3756 1856 0E94 0000 		call report
 3757 185a 4DB7      		in r20,__SP_L__
 3758 185c 5EB7      		in r21,__SP_H__
 3759 185e 485F      		subi r20,-8
 3760 1860 5F4F      		sbci r21,-1
 3761 1862 0FB6      		in __tmp_reg__,__SREG__
 3762 1864 F894      		cli
 3763 1866 DEBF      		out __SP_H__,r29
 3764 1868 0FBE      		out __SREG__,__tmp_reg__
 3765 186a CDBF      		out __SP_L__,r28
 439:lp_solve_5.5/lp_simplex.c ****                            forrownr);
 440:lp_solve_5.5/lp_simplex.c ****       lp->basis_valid = FALSE;
 3766               		.loc 2 440 0
 3767 186c 8E89      		ldd r24,Y+22
 3768 186e 9F89      		ldd r25,Y+23
 3769 1870 8753      		subi r24,55
 3770 1872 9D4F      		sbci r25,-3
 3771 1874 FC01      		movw r30,r24
 3772 1876 1082      		st Z,__zero_reg__
 3773               	.L88:
 3774               	.LBE5:
 441:lp_solve_5.5/lp_simplex.c ****     }
 442:lp_solve_5.5/lp_simplex.c **** 
 443:lp_solve_5.5/lp_simplex.c ****   }
 444:lp_solve_5.5/lp_simplex.c **** 
 445:lp_solve_5.5/lp_simplex.c ****   return(add);
 3775               		.loc 2 445 0
 3776 1878 8981      		ldd r24,Y+1
 3777               	/* epilogue start */
 446:lp_solve_5.5/lp_simplex.c **** 
 447:lp_solve_5.5/lp_simplex.c **** }
 3778               		.loc 2 447 0
 3779 187a 6D96      		adiw r28,29
 3780 187c 0FB6      		in __tmp_reg__,__SREG__
 3781 187e F894      		cli
 3782 1880 DEBF      		out __SP_H__,r29
 3783 1882 0FBE      		out __SREG__,__tmp_reg__
 3784 1884 CDBF      		out __SP_L__,r28
 3785 1886 DF91      		pop r29
 3786 1888 CF91      		pop r28
 3787 188a 1F91      		pop r17
 3788 188c 0F91      		pop r16
 3789 188e 0895      		ret
 3790               		.cfi_endproc
 3791               	.LFE16:
 3793               	.global	get_artificialRow
 3795               	get_artificialRow:
 3796               	.LFB17:
 448:lp_solve_5.5/lp_simplex.c **** 
 449:lp_solve_5.5/lp_simplex.c **** STATIC int get_artificialRow(lprec *lp, int colnr)
 450:lp_solve_5.5/lp_simplex.c **** {
 3797               		.loc 2 450 0
 3798               		.cfi_startproc
 3799 1890 CF93      		push r28
 3800               	.LCFI62:
 3801               		.cfi_def_cfa_offset 3
 3802               		.cfi_offset 28, -2
 3803 1892 DF93      		push r29
 3804               	.LCFI63:
 3805               		.cfi_def_cfa_offset 4
 3806               		.cfi_offset 29, -3
 3807 1894 00D0      		rcall .
 3808 1896 00D0      		rcall .
 3809 1898 00D0      		rcall .
 3810               	.LCFI64:
 3811               		.cfi_def_cfa_offset 10
 3812 189a CDB7      		in r28,__SP_L__
 3813 189c DEB7      		in r29,__SP_H__
 3814               	.LCFI65:
 3815               		.cfi_def_cfa_register 28
 3816               	/* prologue: function */
 3817               	/* frame size = 6 */
 3818               	/* stack size = 8 */
 3819               	.L__stack_usage = 8
 3820 189e 9C83      		std Y+4,r25
 3821 18a0 8B83      		std Y+3,r24
 3822 18a2 7E83      		std Y+6,r23
 3823 18a4 6D83      		std Y+5,r22
 451:lp_solve_5.5/lp_simplex.c ****   MATrec *mat = lp->matA;
 3824               		.loc 2 451 0
 3825 18a6 8B81      		ldd r24,Y+3
 3826 18a8 9C81      		ldd r25,Y+4
 3827 18aa 8A54      		subi r24,74
 3828 18ac 9D4F      		sbci r25,-3
 3829 18ae FC01      		movw r30,r24
 3830 18b0 8081      		ld r24,Z
 3831 18b2 9181      		ldd r25,Z+1
 3832 18b4 9A83      		std Y+2,r25
 3833 18b6 8983      		std Y+1,r24
 452:lp_solve_5.5/lp_simplex.c **** 
 453:lp_solve_5.5/lp_simplex.c **** #ifdef Paranoia
 454:lp_solve_5.5/lp_simplex.c ****   if((colnr <= lp->columns-abs(lp->P1extraDim)) || (colnr > lp->columns))
 455:lp_solve_5.5/lp_simplex.c ****     report(lp, SEVERE, "get_artificialRow: Invalid column index %d\n", colnr);
 456:lp_solve_5.5/lp_simplex.c ****   if(mat->col_end[colnr] - mat->col_end[colnr-1] != 1)
 457:lp_solve_5.5/lp_simplex.c ****     report(lp, SEVERE, "get_artificialRow: Invalid column non-zero count\n");
 458:lp_solve_5.5/lp_simplex.c **** #endif
 459:lp_solve_5.5/lp_simplex.c **** 
 460:lp_solve_5.5/lp_simplex.c ****   /* Return the row index of the singleton */
 461:lp_solve_5.5/lp_simplex.c ****   colnr = mat->col_end[colnr-1];
 3834               		.loc 2 461 0
 3835 18b8 8981      		ldd r24,Y+1
 3836 18ba 9A81      		ldd r25,Y+2
 3837 18bc FC01      		movw r30,r24
 3838 18be 2289      		ldd r18,Z+18
 3839 18c0 3389      		ldd r19,Z+19
 3840 18c2 8D81      		ldd r24,Y+5
 3841 18c4 9E81      		ldd r25,Y+6
 3842 18c6 8150      		subi r24,1
 3843 18c8 9048      		sbci r25,-128
 3844 18ca 880F      		lsl r24
 3845 18cc 991F      		rol r25
 3846 18ce 820F      		add r24,r18
 3847 18d0 931F      		adc r25,r19
 3848 18d2 FC01      		movw r30,r24
 3849 18d4 8081      		ld r24,Z
 3850 18d6 9181      		ldd r25,Z+1
 3851 18d8 9E83      		std Y+6,r25
 3852 18da 8D83      		std Y+5,r24
 462:lp_solve_5.5/lp_simplex.c ****   colnr = COL_MAT_ROWNR(colnr);
 3853               		.loc 2 462 0
 3854 18dc 8981      		ldd r24,Y+1
 3855 18de 9A81      		ldd r25,Y+2
 3856 18e0 FC01      		movw r30,r24
 3857 18e2 2685      		ldd r18,Z+14
 3858 18e4 3785      		ldd r19,Z+15
 3859 18e6 8D81      		ldd r24,Y+5
 3860 18e8 9E81      		ldd r25,Y+6
 3861 18ea 880F      		lsl r24
 3862 18ec 991F      		rol r25
 3863 18ee 820F      		add r24,r18
 3864 18f0 931F      		adc r25,r19
 3865 18f2 FC01      		movw r30,r24
 3866 18f4 8081      		ld r24,Z
 3867 18f6 9181      		ldd r25,Z+1
 3868 18f8 9E83      		std Y+6,r25
 3869 18fa 8D83      		std Y+5,r24
 463:lp_solve_5.5/lp_simplex.c ****   return( colnr );
 3870               		.loc 2 463 0
 3871 18fc 8D81      		ldd r24,Y+5
 3872 18fe 9E81      		ldd r25,Y+6
 3873               	/* epilogue start */
 464:lp_solve_5.5/lp_simplex.c **** }
 3874               		.loc 2 464 0
 3875 1900 2696      		adiw r28,6
 3876 1902 0FB6      		in __tmp_reg__,__SREG__
 3877 1904 F894      		cli
 3878 1906 DEBF      		out __SP_H__,r29
 3879 1908 0FBE      		out __SREG__,__tmp_reg__
 3880 190a CDBF      		out __SP_L__,r28
 3881 190c DF91      		pop r29
 3882 190e CF91      		pop r28
 3883 1910 0895      		ret
 3884               		.cfi_endproc
 3885               	.LFE17:
 3887               	.global	__eqsf2
 3888               	.global	findAnti_artificial
 3890               	findAnti_artificial:
 3891               	.LFB18:
 465:lp_solve_5.5/lp_simplex.c **** 
 466:lp_solve_5.5/lp_simplex.c **** STATIC int findAnti_artificial(lprec *lp, int colnr)
 467:lp_solve_5.5/lp_simplex.c **** /* Primal simplex: Find a basic artificial variable to swap
 468:lp_solve_5.5/lp_simplex.c ****    against the non-basic slack variable, if possible */
 469:lp_solve_5.5/lp_simplex.c **** {
 3892               		.loc 2 469 0
 3893               		.cfi_startproc
 3894 1912 CF93      		push r28
 3895               	.LCFI66:
 3896               		.cfi_def_cfa_offset 3
 3897               		.cfi_offset 28, -2
 3898 1914 DF93      		push r29
 3899               	.LCFI67:
 3900               		.cfi_def_cfa_offset 4
 3901               		.cfi_offset 29, -3
 3902 1916 CDB7      		in r28,__SP_L__
 3903 1918 DEB7      		in r29,__SP_H__
 3904               	.LCFI68:
 3905               		.cfi_def_cfa_register 28
 3906 191a 2C97      		sbiw r28,12
 3907               	.LCFI69:
 3908               		.cfi_def_cfa_offset 16
 3909 191c 0FB6      		in __tmp_reg__,__SREG__
 3910 191e F894      		cli
 3911 1920 DEBF      		out __SP_H__,r29
 3912 1922 0FBE      		out __SREG__,__tmp_reg__
 3913 1924 CDBF      		out __SP_L__,r28
 3914               	/* prologue: function */
 3915               	/* frame size = 12 */
 3916               	/* stack size = 14 */
 3917               	.L__stack_usage = 14
 3918 1926 9A87      		std Y+10,r25
 3919 1928 8987      		std Y+9,r24
 3920 192a 7C87      		std Y+12,r23
 3921 192c 6B87      		std Y+11,r22
 470:lp_solve_5.5/lp_simplex.c ****   int    i, k, rownr = 0, P1extraDim = abs(lp->P1extraDim);
 3922               		.loc 2 470 0
 3923 192e 1C82      		std Y+4,__zero_reg__
 3924 1930 1B82      		std Y+3,__zero_reg__
 3925 1932 8985      		ldd r24,Y+9
 3926 1934 9A85      		ldd r25,Y+10
 3927 1936 8051      		subi r24,16
 3928 1938 9D4F      		sbci r25,-3
 3929 193a FC01      		movw r30,r24
 3930 193c 8081      		ld r24,Z
 3931 193e 9181      		ldd r25,Z+1
 3932 1940 9923      		tst r25
 3933 1942 04F4      		brge .L128
 3934 1944 9195      		neg r25
 3935 1946 8195      		neg r24
 3936 1948 9109      		sbc r25,__zero_reg__
 3937               	.L128:
 3938 194a 9E83      		std Y+6,r25
 3939 194c 8D83      		std Y+5,r24
 471:lp_solve_5.5/lp_simplex.c **** 
 472:lp_solve_5.5/lp_simplex.c ****   if((P1extraDim == 0) || (colnr > lp->rows) || !lp->is_basic[colnr])
 3940               		.loc 2 472 0
 3941 194e 8D81      		ldd r24,Y+5
 3942 1950 9E81      		ldd r25,Y+6
 3943 1952 892B      		or r24,r25
 3944 1954 01F0      		breq .L129
 3945               		.loc 2 472 0 is_stmt 0 discriminator 1
 3946 1956 8985      		ldd r24,Y+9
 3947 1958 9A85      		ldd r25,Y+10
 3948 195a 8651      		subi r24,22
 3949 195c 9E4F      		sbci r25,-2
 3950 195e FC01      		movw r30,r24
 3951 1960 2081      		ld r18,Z
 3952 1962 3181      		ldd r19,Z+1
 3953 1964 8B85      		ldd r24,Y+11
 3954 1966 9C85      		ldd r25,Y+12
 3955 1968 2817      		cp r18,r24
 3956 196a 3907      		cpc r19,r25
 3957 196c 04F0      		brlt .L129
 3958               		.loc 2 472 0 discriminator 2
 3959 196e 8985      		ldd r24,Y+9
 3960 1970 9A85      		ldd r25,Y+10
 3961 1972 8053      		subi r24,48
 3962 1974 9D4F      		sbci r25,-3
 3963 1976 FC01      		movw r30,r24
 3964 1978 2081      		ld r18,Z
 3965 197a 3181      		ldd r19,Z+1
 3966 197c 8B85      		ldd r24,Y+11
 3967 197e 9C85      		ldd r25,Y+12
 3968 1980 820F      		add r24,r18
 3969 1982 931F      		adc r25,r19
 3970 1984 FC01      		movw r30,r24
 3971 1986 8081      		ld r24,Z
 3972 1988 8823      		tst r24
 3973 198a 01F4      		brne .L130
 3974               	.L129:
 473:lp_solve_5.5/lp_simplex.c ****     return( rownr );
 3975               		.loc 2 473 0 is_stmt 1
 3976 198c 8B81      		ldd r24,Y+3
 3977 198e 9C81      		ldd r25,Y+4
 3978 1990 00C0      		rjmp .L131
 3979               	.L130:
 474:lp_solve_5.5/lp_simplex.c **** 
 475:lp_solve_5.5/lp_simplex.c ****   for(i = 1; i <= lp->rows; i++) {
 3980               		.loc 2 475 0
 3981 1992 81E0      		ldi r24,lo8(1)
 3982 1994 90E0      		ldi r25,0
 3983 1996 9A83      		std Y+2,r25
 3984 1998 8983      		std Y+1,r24
 3985 199a 00C0      		rjmp .L132
 3986               	.L137:
 476:lp_solve_5.5/lp_simplex.c ****     k = lp->var_basic[i];
 3987               		.loc 2 476 0
 3988 199c 8985      		ldd r24,Y+9
 3989 199e 9A85      		ldd r25,Y+10
 3990 19a0 8453      		subi r24,52
 3991 19a2 9D4F      		sbci r25,-3
 3992 19a4 FC01      		movw r30,r24
 3993 19a6 2081      		ld r18,Z
 3994 19a8 3181      		ldd r19,Z+1
 3995 19aa 8981      		ldd r24,Y+1
 3996 19ac 9A81      		ldd r25,Y+2
 3997 19ae 880F      		lsl r24
 3998 19b0 991F      		rol r25
 3999 19b2 820F      		add r24,r18
 4000 19b4 931F      		adc r25,r19
 4001 19b6 FC01      		movw r30,r24
 4002 19b8 8081      		ld r24,Z
 4003 19ba 9181      		ldd r25,Z+1
 4004 19bc 9887      		std Y+8,r25
 4005 19be 8F83      		std Y+7,r24
 477:lp_solve_5.5/lp_simplex.c ****     if((k > lp->sum-P1extraDim) && (lp->rhs[i] == 0)) {
 4006               		.loc 2 477 0
 4007 19c0 8985      		ldd r24,Y+9
 4008 19c2 9A85      		ldd r25,Y+10
 4009 19c4 8851      		subi r24,24
 4010 19c6 9E4F      		sbci r25,-2
 4011 19c8 FC01      		movw r30,r24
 4012 19ca 2081      		ld r18,Z
 4013 19cc 3181      		ldd r19,Z+1
 4014 19ce 8D81      		ldd r24,Y+5
 4015 19d0 9E81      		ldd r25,Y+6
 4016 19d2 281B      		sub r18,r24
 4017 19d4 390B      		sbc r19,r25
 4018 19d6 8F81      		ldd r24,Y+7
 4019 19d8 9885      		ldd r25,Y+8
 4020 19da 2817      		cp r18,r24
 4021 19dc 3907      		cpc r19,r25
 4022 19de 04F4      		brge .L133
 4023               		.loc 2 477 0 is_stmt 0 discriminator 1
 4024 19e0 8985      		ldd r24,Y+9
 4025 19e2 9A85      		ldd r25,Y+10
 4026 19e4 8855      		subi r24,88
 4027 19e6 9D4F      		sbci r25,-3
 4028 19e8 FC01      		movw r30,r24
 4029 19ea 2081      		ld r18,Z
 4030 19ec 3181      		ldd r19,Z+1
 4031 19ee 8981      		ldd r24,Y+1
 4032 19f0 9A81      		ldd r25,Y+2
 4033 19f2 880F      		lsl r24
 4034 19f4 991F      		rol r25
 4035 19f6 880F      		lsl r24
 4036 19f8 991F      		rol r25
 4037 19fa 820F      		add r24,r18
 4038 19fc 931F      		adc r25,r19
 4039 19fe FC01      		movw r30,r24
 4040 1a00 8081      		ld r24,Z
 4041 1a02 9181      		ldd r25,Z+1
 4042 1a04 A281      		ldd r26,Z+2
 4043 1a06 B381      		ldd r27,Z+3
 4044 1a08 20E0      		ldi r18,0
 4045 1a0a 30E0      		ldi r19,0
 4046 1a0c A901      		movw r20,r18
 4047 1a0e BC01      		movw r22,r24
 4048 1a10 CD01      		movw r24,r26
 4049 1a12 0E94 0000 		call __eqsf2
 4050 1a16 8823      		tst r24
 4051 1a18 01F4      		brne .L133
 478:lp_solve_5.5/lp_simplex.c ****       rownr = get_artificialRow(lp, k-lp->rows);
 4052               		.loc 2 478 0 is_stmt 1
 4053 1a1a 8985      		ldd r24,Y+9
 4054 1a1c 9A85      		ldd r25,Y+10
 4055 1a1e 8651      		subi r24,22
 4056 1a20 9E4F      		sbci r25,-2
 4057 1a22 FC01      		movw r30,r24
 4058 1a24 8081      		ld r24,Z
 4059 1a26 9181      		ldd r25,Z+1
 4060 1a28 2F81      		ldd r18,Y+7
 4061 1a2a 3885      		ldd r19,Y+8
 4062 1a2c 281B      		sub r18,r24
 4063 1a2e 390B      		sbc r19,r25
 4064 1a30 8985      		ldd r24,Y+9
 4065 1a32 9A85      		ldd r25,Y+10
 4066 1a34 B901      		movw r22,r18
 4067 1a36 0E94 0000 		call get_artificialRow
 4068 1a3a 9C83      		std Y+4,r25
 4069 1a3c 8B83      		std Y+3,r24
 479:lp_solve_5.5/lp_simplex.c **** 
 480:lp_solve_5.5/lp_simplex.c ****       /* Should we find the artificial's slack direct "antibody"? */
 481:lp_solve_5.5/lp_simplex.c ****       if(rownr == colnr)
 4070               		.loc 2 481 0
 4071 1a3e 2B81      		ldd r18,Y+3
 4072 1a40 3C81      		ldd r19,Y+4
 4073 1a42 8B85      		ldd r24,Y+11
 4074 1a44 9C85      		ldd r25,Y+12
 4075 1a46 2817      		cp r18,r24
 4076 1a48 3907      		cpc r19,r25
 4077 1a4a 01F0      		breq .L139
 482:lp_solve_5.5/lp_simplex.c ****         break;
 483:lp_solve_5.5/lp_simplex.c ****       rownr = 0;
 4078               		.loc 2 483 0
 4079 1a4c 1C82      		std Y+4,__zero_reg__
 4080 1a4e 1B82      		std Y+3,__zero_reg__
 4081               	.L133:
 475:lp_solve_5.5/lp_simplex.c ****     k = lp->var_basic[i];
 4082               		.loc 2 475 0 discriminator 2
 4083 1a50 8981      		ldd r24,Y+1
 4084 1a52 9A81      		ldd r25,Y+2
 4085 1a54 0196      		adiw r24,1
 4086 1a56 9A83      		std Y+2,r25
 4087 1a58 8983      		std Y+1,r24
 4088               	.L132:
 475:lp_solve_5.5/lp_simplex.c ****     k = lp->var_basic[i];
 4089               		.loc 2 475 0 is_stmt 0 discriminator 1
 4090 1a5a 8985      		ldd r24,Y+9
 4091 1a5c 9A85      		ldd r25,Y+10
 4092 1a5e 8651      		subi r24,22
 4093 1a60 9E4F      		sbci r25,-2
 4094 1a62 FC01      		movw r30,r24
 4095 1a64 2081      		ld r18,Z
 4096 1a66 3181      		ldd r19,Z+1
 4097 1a68 8981      		ldd r24,Y+1
 4098 1a6a 9A81      		ldd r25,Y+2
 4099 1a6c 2817      		cp r18,r24
 4100 1a6e 3907      		cpc r19,r25
 4101 1a70 04F0      		brlt .+2
 4102 1a72 00C0      		rjmp .L137
 4103 1a74 00C0      		rjmp .L136
 4104               	.L139:
 482:lp_solve_5.5/lp_simplex.c ****         break;
 4105               		.loc 2 482 0 is_stmt 1
 4106 1a76 0000      		nop
 4107               	.L136:
 484:lp_solve_5.5/lp_simplex.c ****     }
 485:lp_solve_5.5/lp_simplex.c ****   }
 486:lp_solve_5.5/lp_simplex.c ****   return( rownr );
 4108               		.loc 2 486 0
 4109 1a78 8B81      		ldd r24,Y+3
 4110 1a7a 9C81      		ldd r25,Y+4
 4111               	.L131:
 4112               	/* epilogue start */
 487:lp_solve_5.5/lp_simplex.c **** }
 4113               		.loc 2 487 0
 4114 1a7c 2C96      		adiw r28,12
 4115 1a7e 0FB6      		in __tmp_reg__,__SREG__
 4116 1a80 F894      		cli
 4117 1a82 DEBF      		out __SP_H__,r29
 4118 1a84 0FBE      		out __SREG__,__tmp_reg__
 4119 1a86 CDBF      		out __SP_L__,r28
 4120 1a88 DF91      		pop r29
 4121 1a8a CF91      		pop r28
 4122 1a8c 0895      		ret
 4123               		.cfi_endproc
 4124               	.LFE18:
 4126               	.global	findBasicArtificial
 4128               	findBasicArtificial:
 4129               	.LFB19:
 488:lp_solve_5.5/lp_simplex.c **** 
 489:lp_solve_5.5/lp_simplex.c **** STATIC int findBasicArtificial(lprec *lp, int before)
 490:lp_solve_5.5/lp_simplex.c **** {
 4130               		.loc 2 490 0
 4131               		.cfi_startproc
 4132 1a8e CF93      		push r28
 4133               	.LCFI70:
 4134               		.cfi_def_cfa_offset 3
 4135               		.cfi_offset 28, -2
 4136 1a90 DF93      		push r29
 4137               	.LCFI71:
 4138               		.cfi_def_cfa_offset 4
 4139               		.cfi_offset 29, -3
 4140 1a92 CDB7      		in r28,__SP_L__
 4141 1a94 DEB7      		in r29,__SP_H__
 4142               	.LCFI72:
 4143               		.cfi_def_cfa_register 28
 4144 1a96 2897      		sbiw r28,8
 4145               	.LCFI73:
 4146               		.cfi_def_cfa_offset 12
 4147 1a98 0FB6      		in __tmp_reg__,__SREG__
 4148 1a9a F894      		cli
 4149 1a9c DEBF      		out __SP_H__,r29
 4150 1a9e 0FBE      		out __SREG__,__tmp_reg__
 4151 1aa0 CDBF      		out __SP_L__,r28
 4152               	/* prologue: function */
 4153               	/* frame size = 8 */
 4154               	/* stack size = 10 */
 4155               	.L__stack_usage = 10
 4156 1aa2 9E83      		std Y+6,r25
 4157 1aa4 8D83      		std Y+5,r24
 4158 1aa6 7887      		std Y+8,r23
 4159 1aa8 6F83      		std Y+7,r22
 491:lp_solve_5.5/lp_simplex.c ****   int i = 0, P1extraDim = abs(lp->P1extraDim);
 4160               		.loc 2 491 0
 4161 1aaa 1A82      		std Y+2,__zero_reg__
 4162 1aac 1982      		std Y+1,__zero_reg__
 4163 1aae 8D81      		ldd r24,Y+5
 4164 1ab0 9E81      		ldd r25,Y+6
 4165 1ab2 8051      		subi r24,16
 4166 1ab4 9D4F      		sbci r25,-3
 4167 1ab6 FC01      		movw r30,r24
 4168 1ab8 8081      		ld r24,Z
 4169 1aba 9181      		ldd r25,Z+1
 4170 1abc 9923      		tst r25
 4171 1abe 04F4      		brge .L141
 4172 1ac0 9195      		neg r25
 4173 1ac2 8195      		neg r24
 4174 1ac4 9109      		sbc r25,__zero_reg__
 4175               	.L141:
 4176 1ac6 9C83      		std Y+4,r25
 4177 1ac8 8B83      		std Y+3,r24
 492:lp_solve_5.5/lp_simplex.c **** 
 493:lp_solve_5.5/lp_simplex.c ****   if(P1extraDim > 0) {
 4178               		.loc 2 493 0
 4179 1aca 8B81      		ldd r24,Y+3
 4180 1acc 9C81      		ldd r25,Y+4
 4181 1ace 1816      		cp __zero_reg__,r24
 4182 1ad0 1906      		cpc __zero_reg__,r25
 4183 1ad2 04F0      		brlt .+2
 4184 1ad4 00C0      		rjmp .L142
 494:lp_solve_5.5/lp_simplex.c ****     if(before > lp->rows || before <= 1)
 4185               		.loc 2 494 0
 4186 1ad6 8D81      		ldd r24,Y+5
 4187 1ad8 9E81      		ldd r25,Y+6
 4188 1ada 8651      		subi r24,22
 4189 1adc 9E4F      		sbci r25,-2
 4190 1ade FC01      		movw r30,r24
 4191 1ae0 2081      		ld r18,Z
 4192 1ae2 3181      		ldd r19,Z+1
 4193 1ae4 8F81      		ldd r24,Y+7
 4194 1ae6 9885      		ldd r25,Y+8
 4195 1ae8 2817      		cp r18,r24
 4196 1aea 3907      		cpc r19,r25
 4197 1aec 04F0      		brlt .L143
 4198               		.loc 2 494 0 is_stmt 0 discriminator 1
 4199 1aee 8F81      		ldd r24,Y+7
 4200 1af0 9885      		ldd r25,Y+8
 4201 1af2 0297      		sbiw r24,2
 4202 1af4 04F4      		brge .L144
 4203               	.L143:
 495:lp_solve_5.5/lp_simplex.c ****       i = lp->rows;
 4204               		.loc 2 495 0 is_stmt 1
 4205 1af6 8D81      		ldd r24,Y+5
 4206 1af8 9E81      		ldd r25,Y+6
 4207 1afa 8651      		subi r24,22
 4208 1afc 9E4F      		sbci r25,-2
 4209 1afe FC01      		movw r30,r24
 4210 1b00 8081      		ld r24,Z
 4211 1b02 9181      		ldd r25,Z+1
 4212 1b04 9A83      		std Y+2,r25
 4213 1b06 8983      		std Y+1,r24
 4214 1b08 00C0      		rjmp .L145
 4215               	.L144:
 496:lp_solve_5.5/lp_simplex.c ****     else
 497:lp_solve_5.5/lp_simplex.c ****       i = before;
 4216               		.loc 2 497 0
 4217 1b0a 8F81      		ldd r24,Y+7
 4218 1b0c 9885      		ldd r25,Y+8
 4219 1b0e 9A83      		std Y+2,r25
 4220 1b10 8983      		std Y+1,r24
 4221               	.L145:
 498:lp_solve_5.5/lp_simplex.c **** 
 499:lp_solve_5.5/lp_simplex.c ****     while((i > 0) && (lp->var_basic[i] <= lp->sum-P1extraDim))
 4222               		.loc 2 499 0
 4223 1b12 00C0      		rjmp .L146
 4224               	.L147:
 500:lp_solve_5.5/lp_simplex.c ****       i--;
 4225               		.loc 2 500 0
 4226 1b14 8981      		ldd r24,Y+1
 4227 1b16 9A81      		ldd r25,Y+2
 4228 1b18 0197      		sbiw r24,1
 4229 1b1a 9A83      		std Y+2,r25
 4230 1b1c 8983      		std Y+1,r24
 4231               	.L146:
 499:lp_solve_5.5/lp_simplex.c ****       i--;
 4232               		.loc 2 499 0
 4233 1b1e 8981      		ldd r24,Y+1
 4234 1b20 9A81      		ldd r25,Y+2
 4235 1b22 1816      		cp __zero_reg__,r24
 4236 1b24 1906      		cpc __zero_reg__,r25
 4237 1b26 04F4      		brge .L142
 499:lp_solve_5.5/lp_simplex.c ****       i--;
 4238               		.loc 2 499 0 is_stmt 0 discriminator 1
 4239 1b28 8D81      		ldd r24,Y+5
 4240 1b2a 9E81      		ldd r25,Y+6
 4241 1b2c 8453      		subi r24,52
 4242 1b2e 9D4F      		sbci r25,-3
 4243 1b30 FC01      		movw r30,r24
 4244 1b32 2081      		ld r18,Z
 4245 1b34 3181      		ldd r19,Z+1
 4246 1b36 8981      		ldd r24,Y+1
 4247 1b38 9A81      		ldd r25,Y+2
 4248 1b3a 880F      		lsl r24
 4249 1b3c 991F      		rol r25
 4250 1b3e 820F      		add r24,r18
 4251 1b40 931F      		adc r25,r19
 4252 1b42 FC01      		movw r30,r24
 4253 1b44 2081      		ld r18,Z
 4254 1b46 3181      		ldd r19,Z+1
 4255 1b48 8D81      		ldd r24,Y+5
 4256 1b4a 9E81      		ldd r25,Y+6
 4257 1b4c 8851      		subi r24,24
 4258 1b4e 9E4F      		sbci r25,-2
 4259 1b50 FC01      		movw r30,r24
 4260 1b52 4081      		ld r20,Z
 4261 1b54 5181      		ldd r21,Z+1
 4262 1b56 8B81      		ldd r24,Y+3
 4263 1b58 9C81      		ldd r25,Y+4
 4264 1b5a BA01      		movw r22,r20
 4265 1b5c 681B      		sub r22,r24
 4266 1b5e 790B      		sbc r23,r25
 4267 1b60 CB01      		movw r24,r22
 4268 1b62 8217      		cp r24,r18
 4269 1b64 9307      		cpc r25,r19
 4270 1b66 04F4      		brge .L147
 4271               	.L142:
 501:lp_solve_5.5/lp_simplex.c ****   }
 502:lp_solve_5.5/lp_simplex.c **** 
 503:lp_solve_5.5/lp_simplex.c ****   return(i);
 4272               		.loc 2 503 0 is_stmt 1
 4273 1b68 8981      		ldd r24,Y+1
 4274 1b6a 9A81      		ldd r25,Y+2
 4275               	/* epilogue start */
 504:lp_solve_5.5/lp_simplex.c **** }
 4276               		.loc 2 504 0
 4277 1b6c 2896      		adiw r28,8
 4278 1b6e 0FB6      		in __tmp_reg__,__SREG__
 4279 1b70 F894      		cli
 4280 1b72 DEBF      		out __SP_H__,r29
 4281 1b74 0FBE      		out __SREG__,__tmp_reg__
 4282 1b76 CDBF      		out __SP_L__,r28
 4283 1b78 DF91      		pop r29
 4284 1b7a CF91      		pop r28
 4285 1b7c 0895      		ret
 4286               		.cfi_endproc
 4287               	.LFE19:
 4289               	.global	eliminate_artificials
 4291               	eliminate_artificials:
 4292               	.LFB20:
 505:lp_solve_5.5/lp_simplex.c **** 
 506:lp_solve_5.5/lp_simplex.c **** STATIC void eliminate_artificials(lprec *lp, REAL *prow)
 507:lp_solve_5.5/lp_simplex.c **** {
 4293               		.loc 2 507 0
 4294               		.cfi_startproc
 4295 1b7e CF93      		push r28
 4296               	.LCFI74:
 4297               		.cfi_def_cfa_offset 3
 4298               		.cfi_offset 28, -2
 4299 1b80 DF93      		push r29
 4300               	.LCFI75:
 4301               		.cfi_def_cfa_offset 4
 4302               		.cfi_offset 29, -3
 4303 1b82 CDB7      		in r28,__SP_L__
 4304 1b84 DEB7      		in r29,__SP_H__
 4305               	.LCFI76:
 4306               		.cfi_def_cfa_register 28
 4307 1b86 2E97      		sbiw r28,14
 4308               	.LCFI77:
 4309               		.cfi_def_cfa_offset 18
 4310 1b88 0FB6      		in __tmp_reg__,__SREG__
 4311 1b8a F894      		cli
 4312 1b8c DEBF      		out __SP_H__,r29
 4313 1b8e 0FBE      		out __SREG__,__tmp_reg__
 4314 1b90 CDBF      		out __SP_L__,r28
 4315               	/* prologue: function */
 4316               	/* frame size = 14 */
 4317               	/* stack size = 16 */
 4318               	.L__stack_usage = 16
 4319 1b92 9C87      		std Y+12,r25
 4320 1b94 8B87      		std Y+11,r24
 4321 1b96 7E87      		std Y+14,r23
 4322 1b98 6D87      		std Y+13,r22
 508:lp_solve_5.5/lp_simplex.c ****   int   i, j, colnr, rownr, P1extraDim = abs(lp->P1extraDim);
 4323               		.loc 2 508 0
 4324 1b9a 8B85      		ldd r24,Y+11
 4325 1b9c 9C85      		ldd r25,Y+12
 4326 1b9e 8051      		subi r24,16
 4327 1ba0 9D4F      		sbci r25,-3
 4328 1ba2 FC01      		movw r30,r24
 4329 1ba4 8081      		ld r24,Z
 4330 1ba6 9181      		ldd r25,Z+1
 4331 1ba8 9923      		tst r25
 4332 1baa 04F4      		brge .L150
 4333 1bac 9195      		neg r25
 4334 1bae 8195      		neg r24
 4335 1bb0 9109      		sbc r25,__zero_reg__
 4336               	.L150:
 4337 1bb2 9C83      		std Y+4,r25
 4338 1bb4 8B83      		std Y+3,r24
 509:lp_solve_5.5/lp_simplex.c **** 
 510:lp_solve_5.5/lp_simplex.c ****   for(i = 1; (i <= lp->rows) && (P1extraDim > 0); i++) {
 4339               		.loc 2 510 0
 4340 1bb6 81E0      		ldi r24,lo8(1)
 4341 1bb8 90E0      		ldi r25,0
 4342 1bba 9A83      		std Y+2,r25
 4343 1bbc 8983      		std Y+1,r24
 4344 1bbe 00C0      		rjmp .L151
 4345               	.L155:
 511:lp_solve_5.5/lp_simplex.c ****     j = lp->var_basic[i];
 4346               		.loc 2 511 0
 4347 1bc0 8B85      		ldd r24,Y+11
 4348 1bc2 9C85      		ldd r25,Y+12
 4349 1bc4 8453      		subi r24,52
 4350 1bc6 9D4F      		sbci r25,-3
 4351 1bc8 FC01      		movw r30,r24
 4352 1bca 2081      		ld r18,Z
 4353 1bcc 3181      		ldd r19,Z+1
 4354 1bce 8981      		ldd r24,Y+1
 4355 1bd0 9A81      		ldd r25,Y+2
 4356 1bd2 880F      		lsl r24
 4357 1bd4 991F      		rol r25
 4358 1bd6 820F      		add r24,r18
 4359 1bd8 931F      		adc r25,r19
 4360 1bda FC01      		movw r30,r24
 4361 1bdc 8081      		ld r24,Z
 4362 1bde 9181      		ldd r25,Z+1
 4363 1be0 9E83      		std Y+6,r25
 4364 1be2 8D83      		std Y+5,r24
 512:lp_solve_5.5/lp_simplex.c ****     if(j <= lp->sum-P1extraDim)
 4365               		.loc 2 512 0
 4366 1be4 8B85      		ldd r24,Y+11
 4367 1be6 9C85      		ldd r25,Y+12
 4368 1be8 8851      		subi r24,24
 4369 1bea 9E4F      		sbci r25,-2
 4370 1bec FC01      		movw r30,r24
 4371 1bee 2081      		ld r18,Z
 4372 1bf0 3181      		ldd r19,Z+1
 4373 1bf2 8B81      		ldd r24,Y+3
 4374 1bf4 9C81      		ldd r25,Y+4
 4375 1bf6 281B      		sub r18,r24
 4376 1bf8 390B      		sbc r19,r25
 4377 1bfa 8D81      		ldd r24,Y+5
 4378 1bfc 9E81      		ldd r25,Y+6
 4379 1bfe 2817      		cp r18,r24
 4380 1c00 3907      		cpc r19,r25
 4381 1c02 04F4      		brge .L156
 513:lp_solve_5.5/lp_simplex.c ****       continue;
 514:lp_solve_5.5/lp_simplex.c ****     j -= lp->rows;
 4382               		.loc 2 514 0
 4383 1c04 8B85      		ldd r24,Y+11
 4384 1c06 9C85      		ldd r25,Y+12
 4385 1c08 8651      		subi r24,22
 4386 1c0a 9E4F      		sbci r25,-2
 4387 1c0c FC01      		movw r30,r24
 4388 1c0e 8081      		ld r24,Z
 4389 1c10 9181      		ldd r25,Z+1
 4390 1c12 2D81      		ldd r18,Y+5
 4391 1c14 3E81      		ldd r19,Y+6
 4392 1c16 A901      		movw r20,r18
 4393 1c18 481B      		sub r20,r24
 4394 1c1a 590B      		sbc r21,r25
 4395 1c1c CA01      		movw r24,r20
 4396 1c1e 9E83      		std Y+6,r25
 4397 1c20 8D83      		std Y+5,r24
 515:lp_solve_5.5/lp_simplex.c ****     rownr = get_artificialRow(lp, j);
 4398               		.loc 2 515 0
 4399 1c22 2D81      		ldd r18,Y+5
 4400 1c24 3E81      		ldd r19,Y+6
 4401 1c26 8B85      		ldd r24,Y+11
 4402 1c28 9C85      		ldd r25,Y+12
 4403 1c2a B901      		movw r22,r18
 4404 1c2c 0E94 0000 		call get_artificialRow
 4405 1c30 9887      		std Y+8,r25
 4406 1c32 8F83      		std Y+7,r24
 516:lp_solve_5.5/lp_simplex.c ****     colnr = find_rowReplacement(lp, rownr, prow, NULL);
 4407               		.loc 2 516 0
 4408 1c34 4D85      		ldd r20,Y+13
 4409 1c36 5E85      		ldd r21,Y+14
 4410 1c38 6F81      		ldd r22,Y+7
 4411 1c3a 7885      		ldd r23,Y+8
 4412 1c3c 8B85      		ldd r24,Y+11
 4413 1c3e 9C85      		ldd r25,Y+12
 4414 1c40 20E0      		ldi r18,0
 4415 1c42 30E0      		ldi r19,0
 4416 1c44 0E94 0000 		call find_rowReplacement
 4417 1c48 9A87      		std Y+10,r25
 4418 1c4a 8987      		std Y+9,r24
 517:lp_solve_5.5/lp_simplex.c **** #if 0
 518:lp_solve_5.5/lp_simplex.c ****     performiteration(lp, rownr, colnr, 0.0, TRUE, FALSE, prow, NULL,
 519:lp_solve_5.5/lp_simplex.c ****                                                           NULL, NULL, NULL);
 520:lp_solve_5.5/lp_simplex.c **** #else
 521:lp_solve_5.5/lp_simplex.c ****     set_basisvar(lp, rownr, colnr);
 4419               		.loc 2 521 0
 4420 1c4c 4985      		ldd r20,Y+9
 4421 1c4e 5A85      		ldd r21,Y+10
 4422 1c50 2F81      		ldd r18,Y+7
 4423 1c52 3885      		ldd r19,Y+8
 4424 1c54 8B85      		ldd r24,Y+11
 4425 1c56 9C85      		ldd r25,Y+12
 4426 1c58 B901      		movw r22,r18
 4427 1c5a 0E94 0000 		call set_basisvar
 522:lp_solve_5.5/lp_simplex.c **** #endif
 523:lp_solve_5.5/lp_simplex.c ****     del_column(lp, j);
 4428               		.loc 2 523 0
 4429 1c5e 2D81      		ldd r18,Y+5
 4430 1c60 3E81      		ldd r19,Y+6
 4431 1c62 8B85      		ldd r24,Y+11
 4432 1c64 9C85      		ldd r25,Y+12
 4433 1c66 B901      		movw r22,r18
 4434 1c68 0E94 0000 		call del_column
 524:lp_solve_5.5/lp_simplex.c ****     P1extraDim--;
 4435               		.loc 2 524 0
 4436 1c6c 8B81      		ldd r24,Y+3
 4437 1c6e 9C81      		ldd r25,Y+4
 4438 1c70 0197      		sbiw r24,1
 4439 1c72 9C83      		std Y+4,r25
 4440 1c74 8B83      		std Y+3,r24
 4441 1c76 00C0      		rjmp .L153
 4442               	.L156:
 513:lp_solve_5.5/lp_simplex.c ****     j -= lp->rows;
 4443               		.loc 2 513 0
 4444 1c78 0000      		nop
 4445               	.L153:
 510:lp_solve_5.5/lp_simplex.c ****     j = lp->var_basic[i];
 4446               		.loc 2 510 0 discriminator 2
 4447 1c7a 8981      		ldd r24,Y+1
 4448 1c7c 9A81      		ldd r25,Y+2
 4449 1c7e 0196      		adiw r24,1
 4450 1c80 9A83      		std Y+2,r25
 4451 1c82 8983      		std Y+1,r24
 4452               	.L151:
 510:lp_solve_5.5/lp_simplex.c ****     j = lp->var_basic[i];
 4453               		.loc 2 510 0 is_stmt 0 discriminator 1
 4454 1c84 8B85      		ldd r24,Y+11
 4455 1c86 9C85      		ldd r25,Y+12
 4456 1c88 8651      		subi r24,22
 4457 1c8a 9E4F      		sbci r25,-2
 4458 1c8c FC01      		movw r30,r24
 4459 1c8e 2081      		ld r18,Z
 4460 1c90 3181      		ldd r19,Z+1
 4461 1c92 8981      		ldd r24,Y+1
 4462 1c94 9A81      		ldd r25,Y+2
 4463 1c96 2817      		cp r18,r24
 4464 1c98 3907      		cpc r19,r25
 4465 1c9a 04F0      		brlt .L154
 510:lp_solve_5.5/lp_simplex.c ****     j = lp->var_basic[i];
 4466               		.loc 2 510 0 discriminator 3
 4467 1c9c 8B81      		ldd r24,Y+3
 4468 1c9e 9C81      		ldd r25,Y+4
 4469 1ca0 1816      		cp __zero_reg__,r24
 4470 1ca2 1906      		cpc __zero_reg__,r25
 4471 1ca4 04F4      		brge .+2
 4472 1ca6 00C0      		rjmp .L155
 4473               	.L154:
 525:lp_solve_5.5/lp_simplex.c ****   }
 526:lp_solve_5.5/lp_simplex.c ****   lp->P1extraDim = 0;
 4474               		.loc 2 526 0 is_stmt 1
 4475 1ca8 8B85      		ldd r24,Y+11
 4476 1caa 9C85      		ldd r25,Y+12
 4477 1cac 8051      		subi r24,16
 4478 1cae 9D4F      		sbci r25,-3
 4479 1cb0 FC01      		movw r30,r24
 4480 1cb2 1182      		std Z+1,__zero_reg__
 4481 1cb4 1082      		st Z,__zero_reg__
 527:lp_solve_5.5/lp_simplex.c **** }
 4482               		.loc 2 527 0
 4483 1cb6 0000      		nop
 4484               	/* epilogue start */
 4485 1cb8 2E96      		adiw r28,14
 4486 1cba 0FB6      		in __tmp_reg__,__SREG__
 4487 1cbc F894      		cli
 4488 1cbe DEBF      		out __SP_H__,r29
 4489 1cc0 0FBE      		out __SREG__,__tmp_reg__
 4490 1cc2 CDBF      		out __SP_L__,r28
 4491 1cc4 DF91      		pop r29
 4492 1cc6 CF91      		pop r28
 4493 1cc8 0895      		ret
 4494               		.cfi_endproc
 4495               	.LFE20:
 4497               	.global	clear_artificials
 4499               	clear_artificials:
 4500               	.LFB21:
 528:lp_solve_5.5/lp_simplex.c **** 
 529:lp_solve_5.5/lp_simplex.c **** STATIC void clear_artificials(lprec *lp)
 530:lp_solve_5.5/lp_simplex.c **** {
 4501               		.loc 2 530 0
 4502               		.cfi_startproc
 4503 1cca CF93      		push r28
 4504               	.LCFI78:
 4505               		.cfi_def_cfa_offset 3
 4506               		.cfi_offset 28, -2
 4507 1ccc DF93      		push r29
 4508               	.LCFI79:
 4509               		.cfi_def_cfa_offset 4
 4510               		.cfi_offset 29, -3
 4511 1cce CDB7      		in r28,__SP_L__
 4512 1cd0 DEB7      		in r29,__SP_H__
 4513               	.LCFI80:
 4514               		.cfi_def_cfa_register 28
 4515 1cd2 2A97      		sbiw r28,10
 4516               	.LCFI81:
 4517               		.cfi_def_cfa_offset 14
 4518 1cd4 0FB6      		in __tmp_reg__,__SREG__
 4519 1cd6 F894      		cli
 4520 1cd8 DEBF      		out __SP_H__,r29
 4521 1cda 0FBE      		out __SREG__,__tmp_reg__
 4522 1cdc CDBF      		out __SP_L__,r28
 4523               	/* prologue: function */
 4524               	/* frame size = 10 */
 4525               	/* stack size = 12 */
 4526               	.L__stack_usage = 12
 4527 1cde 9A87      		std Y+10,r25
 4528 1ce0 8987      		std Y+9,r24
 531:lp_solve_5.5/lp_simplex.c ****   int i, j, n, P1extraDim;
 532:lp_solve_5.5/lp_simplex.c **** 
 533:lp_solve_5.5/lp_simplex.c ****   /* Substitute any basic artificial variable for its slack counterpart */
 534:lp_solve_5.5/lp_simplex.c ****   n = 0;
 4529               		.loc 2 534 0
 4530 1ce2 1C82      		std Y+4,__zero_reg__
 4531 1ce4 1B82      		std Y+3,__zero_reg__
 535:lp_solve_5.5/lp_simplex.c ****   P1extraDim = abs(lp->P1extraDim);
 4532               		.loc 2 535 0
 4533 1ce6 8985      		ldd r24,Y+9
 4534 1ce8 9A85      		ldd r25,Y+10
 4535 1cea 8051      		subi r24,16
 4536 1cec 9D4F      		sbci r25,-3
 4537 1cee FC01      		movw r30,r24
 4538 1cf0 8081      		ld r24,Z
 4539 1cf2 9181      		ldd r25,Z+1
 4540 1cf4 9923      		tst r25
 4541 1cf6 04F4      		brge .L158
 4542 1cf8 9195      		neg r25
 4543 1cfa 8195      		neg r24
 4544 1cfc 9109      		sbc r25,__zero_reg__
 4545               	.L158:
 4546 1cfe 9E83      		std Y+6,r25
 4547 1d00 8D83      		std Y+5,r24
 536:lp_solve_5.5/lp_simplex.c ****   for(i = 1; (i <= lp->rows) && (n < P1extraDim); i++) {
 4548               		.loc 2 536 0
 4549 1d02 81E0      		ldi r24,lo8(1)
 4550 1d04 90E0      		ldi r25,0
 4551 1d06 9A83      		std Y+2,r25
 4552 1d08 8983      		std Y+1,r24
 4553 1d0a 00C0      		rjmp .L159
 4554               	.L163:
 537:lp_solve_5.5/lp_simplex.c ****     j = lp->var_basic[i];
 4555               		.loc 2 537 0
 4556 1d0c 8985      		ldd r24,Y+9
 4557 1d0e 9A85      		ldd r25,Y+10
 4558 1d10 8453      		subi r24,52
 4559 1d12 9D4F      		sbci r25,-3
 4560 1d14 FC01      		movw r30,r24
 4561 1d16 2081      		ld r18,Z
 4562 1d18 3181      		ldd r19,Z+1
 4563 1d1a 8981      		ldd r24,Y+1
 4564 1d1c 9A81      		ldd r25,Y+2
 4565 1d1e 880F      		lsl r24
 4566 1d20 991F      		rol r25
 4567 1d22 820F      		add r24,r18
 4568 1d24 931F      		adc r25,r19
 4569 1d26 FC01      		movw r30,r24
 4570 1d28 8081      		ld r24,Z
 4571 1d2a 9181      		ldd r25,Z+1
 4572 1d2c 9887      		std Y+8,r25
 4573 1d2e 8F83      		std Y+7,r24
 538:lp_solve_5.5/lp_simplex.c ****     if(j <= lp->sum-P1extraDim)
 4574               		.loc 2 538 0
 4575 1d30 8985      		ldd r24,Y+9
 4576 1d32 9A85      		ldd r25,Y+10
 4577 1d34 8851      		subi r24,24
 4578 1d36 9E4F      		sbci r25,-2
 4579 1d38 FC01      		movw r30,r24
 4580 1d3a 2081      		ld r18,Z
 4581 1d3c 3181      		ldd r19,Z+1
 4582 1d3e 8D81      		ldd r24,Y+5
 4583 1d40 9E81      		ldd r25,Y+6
 4584 1d42 281B      		sub r18,r24
 4585 1d44 390B      		sbc r19,r25
 4586 1d46 8F81      		ldd r24,Y+7
 4587 1d48 9885      		ldd r25,Y+8
 4588 1d4a 2817      		cp r18,r24
 4589 1d4c 3907      		cpc r19,r25
 4590 1d4e 04F4      		brge .L167
 539:lp_solve_5.5/lp_simplex.c ****       continue;
 540:lp_solve_5.5/lp_simplex.c ****     j = get_artificialRow(lp, j-lp->rows);
 4591               		.loc 2 540 0
 4592 1d50 8985      		ldd r24,Y+9
 4593 1d52 9A85      		ldd r25,Y+10
 4594 1d54 8651      		subi r24,22
 4595 1d56 9E4F      		sbci r25,-2
 4596 1d58 FC01      		movw r30,r24
 4597 1d5a 8081      		ld r24,Z
 4598 1d5c 9181      		ldd r25,Z+1
 4599 1d5e 2F81      		ldd r18,Y+7
 4600 1d60 3885      		ldd r19,Y+8
 4601 1d62 281B      		sub r18,r24
 4602 1d64 390B      		sbc r19,r25
 4603 1d66 8985      		ldd r24,Y+9
 4604 1d68 9A85      		ldd r25,Y+10
 4605 1d6a B901      		movw r22,r18
 4606 1d6c 0E94 0000 		call get_artificialRow
 4607 1d70 9887      		std Y+8,r25
 4608 1d72 8F83      		std Y+7,r24
 541:lp_solve_5.5/lp_simplex.c ****     set_basisvar(lp, i, j);
 4609               		.loc 2 541 0
 4610 1d74 4F81      		ldd r20,Y+7
 4611 1d76 5885      		ldd r21,Y+8
 4612 1d78 2981      		ldd r18,Y+1
 4613 1d7a 3A81      		ldd r19,Y+2
 4614 1d7c 8985      		ldd r24,Y+9
 4615 1d7e 9A85      		ldd r25,Y+10
 4616 1d80 B901      		movw r22,r18
 4617 1d82 0E94 0000 		call set_basisvar
 542:lp_solve_5.5/lp_simplex.c ****     n++;
 4618               		.loc 2 542 0
 4619 1d86 8B81      		ldd r24,Y+3
 4620 1d88 9C81      		ldd r25,Y+4
 4621 1d8a 0196      		adiw r24,1
 4622 1d8c 9C83      		std Y+4,r25
 4623 1d8e 8B83      		std Y+3,r24
 4624 1d90 00C0      		rjmp .L161
 4625               	.L167:
 539:lp_solve_5.5/lp_simplex.c ****       continue;
 4626               		.loc 2 539 0
 4627 1d92 0000      		nop
 4628               	.L161:
 536:lp_solve_5.5/lp_simplex.c ****     j = lp->var_basic[i];
 4629               		.loc 2 536 0 discriminator 2
 4630 1d94 8981      		ldd r24,Y+1
 4631 1d96 9A81      		ldd r25,Y+2
 4632 1d98 0196      		adiw r24,1
 4633 1d9a 9A83      		std Y+2,r25
 4634 1d9c 8983      		std Y+1,r24
 4635               	.L159:
 536:lp_solve_5.5/lp_simplex.c ****     j = lp->var_basic[i];
 4636               		.loc 2 536 0 is_stmt 0 discriminator 1
 4637 1d9e 8985      		ldd r24,Y+9
 4638 1da0 9A85      		ldd r25,Y+10
 4639 1da2 8651      		subi r24,22
 4640 1da4 9E4F      		sbci r25,-2
 4641 1da6 FC01      		movw r30,r24
 4642 1da8 2081      		ld r18,Z
 4643 1daa 3181      		ldd r19,Z+1
 4644 1dac 8981      		ldd r24,Y+1
 4645 1dae 9A81      		ldd r25,Y+2
 4646 1db0 2817      		cp r18,r24
 4647 1db2 3907      		cpc r19,r25
 4648 1db4 04F0      		brlt .L164
 536:lp_solve_5.5/lp_simplex.c ****     j = lp->var_basic[i];
 4649               		.loc 2 536 0 discriminator 3
 4650 1db6 2B81      		ldd r18,Y+3
 4651 1db8 3C81      		ldd r19,Y+4
 4652 1dba 8D81      		ldd r24,Y+5
 4653 1dbc 9E81      		ldd r25,Y+6
 4654 1dbe 2817      		cp r18,r24
 4655 1dc0 3907      		cpc r19,r25
 4656 1dc2 04F4      		brge .+2
 4657 1dc4 00C0      		rjmp .L163
 543:lp_solve_5.5/lp_simplex.c ****   }
 544:lp_solve_5.5/lp_simplex.c **** #ifdef Paranoia
 545:lp_solve_5.5/lp_simplex.c ****   if(n != lp->P1extraDim)
 546:lp_solve_5.5/lp_simplex.c ****     report(lp, SEVERE, "clear_artificials: Unable to clear all basic artificial variables\n");
 547:lp_solve_5.5/lp_simplex.c **** #endif
 548:lp_solve_5.5/lp_simplex.c **** 
 549:lp_solve_5.5/lp_simplex.c ****   /* Delete any remaining non-basic artificial variables */
 550:lp_solve_5.5/lp_simplex.c ****   while(P1extraDim > 0) {
 4658               		.loc 2 550 0 is_stmt 1
 4659 1dc6 00C0      		rjmp .L164
 4660               	.L165:
 551:lp_solve_5.5/lp_simplex.c ****     i = lp->sum-lp->rows;
 4661               		.loc 2 551 0
 4662 1dc8 8985      		ldd r24,Y+9
 4663 1dca 9A85      		ldd r25,Y+10
 4664 1dcc 8851      		subi r24,24
 4665 1dce 9E4F      		sbci r25,-2
 4666 1dd0 FC01      		movw r30,r24
 4667 1dd2 2081      		ld r18,Z
 4668 1dd4 3181      		ldd r19,Z+1
 4669 1dd6 8985      		ldd r24,Y+9
 4670 1dd8 9A85      		ldd r25,Y+10
 4671 1dda 8651      		subi r24,22
 4672 1ddc 9E4F      		sbci r25,-2
 4673 1dde FC01      		movw r30,r24
 4674 1de0 8081      		ld r24,Z
 4675 1de2 9181      		ldd r25,Z+1
 4676 1de4 A901      		movw r20,r18
 4677 1de6 481B      		sub r20,r24
 4678 1de8 590B      		sbc r21,r25
 4679 1dea CA01      		movw r24,r20
 4680 1dec 9A83      		std Y+2,r25
 4681 1dee 8983      		std Y+1,r24
 552:lp_solve_5.5/lp_simplex.c ****     del_column(lp, i);
 4682               		.loc 2 552 0
 4683 1df0 2981      		ldd r18,Y+1
 4684 1df2 3A81      		ldd r19,Y+2
 4685 1df4 8985      		ldd r24,Y+9
 4686 1df6 9A85      		ldd r25,Y+10
 4687 1df8 B901      		movw r22,r18
 4688 1dfa 0E94 0000 		call del_column
 553:lp_solve_5.5/lp_simplex.c ****     P1extraDim--;
 4689               		.loc 2 553 0
 4690 1dfe 8D81      		ldd r24,Y+5
 4691 1e00 9E81      		ldd r25,Y+6
 4692 1e02 0197      		sbiw r24,1
 4693 1e04 9E83      		std Y+6,r25
 4694 1e06 8D83      		std Y+5,r24
 4695               	.L164:
 550:lp_solve_5.5/lp_simplex.c ****     i = lp->sum-lp->rows;
 4696               		.loc 2 550 0
 4697 1e08 8D81      		ldd r24,Y+5
 4698 1e0a 9E81      		ldd r25,Y+6
 4699 1e0c 1816      		cp __zero_reg__,r24
 4700 1e0e 1906      		cpc __zero_reg__,r25
 4701 1e10 04F0      		brlt .L165
 554:lp_solve_5.5/lp_simplex.c ****   }
 555:lp_solve_5.5/lp_simplex.c ****   lp->P1extraDim = 0;
 4702               		.loc 2 555 0
 4703 1e12 8985      		ldd r24,Y+9
 4704 1e14 9A85      		ldd r25,Y+10
 4705 1e16 8051      		subi r24,16
 4706 1e18 9D4F      		sbci r25,-3
 4707 1e1a FC01      		movw r30,r24
 4708 1e1c 1182      		std Z+1,__zero_reg__
 4709 1e1e 1082      		st Z,__zero_reg__
 556:lp_solve_5.5/lp_simplex.c ****   if(n > 0) {
 4710               		.loc 2 556 0
 4711 1e20 8B81      		ldd r24,Y+3
 4712 1e22 9C81      		ldd r25,Y+4
 4713 1e24 1816      		cp __zero_reg__,r24
 4714 1e26 1906      		cpc __zero_reg__,r25
 4715 1e28 04F4      		brge .L168
 557:lp_solve_5.5/lp_simplex.c ****     set_action(&lp->spx_action, ACTION_REINVERT);
 4716               		.loc 2 557 0
 4717 1e2a 8985      		ldd r24,Y+9
 4718 1e2c 9A85      		ldd r25,Y+10
 4719 1e2e 8E50      		subi r24,14
 4720 1e30 9D4F      		sbci r25,-3
 4721 1e32 60E1      		ldi r22,lo8(16)
 4722 1e34 70E0      		ldi r23,0
 4723 1e36 0E94 0000 		call set_action
 558:lp_solve_5.5/lp_simplex.c ****     lp->basis_valid = TRUE;
 4724               		.loc 2 558 0
 4725 1e3a 8985      		ldd r24,Y+9
 4726 1e3c 9A85      		ldd r25,Y+10
 4727 1e3e 8753      		subi r24,55
 4728 1e40 9D4F      		sbci r25,-3
 4729 1e42 21E0      		ldi r18,lo8(1)
 4730 1e44 FC01      		movw r30,r24
 4731 1e46 2083      		st Z,r18
 4732               	.L168:
 559:lp_solve_5.5/lp_simplex.c ****   }
 560:lp_solve_5.5/lp_simplex.c **** }
 4733               		.loc 2 560 0
 4734 1e48 0000      		nop
 4735               	/* epilogue start */
 4736 1e4a 2A96      		adiw r28,10
 4737 1e4c 0FB6      		in __tmp_reg__,__SREG__
 4738 1e4e F894      		cli
 4739 1e50 DEBF      		out __SP_H__,r29
 4740 1e52 0FBE      		out __SREG__,__tmp_reg__
 4741 1e54 CDBF      		out __SP_L__,r28
 4742 1e56 DF91      		pop r29
 4743 1e58 CF91      		pop r28
 4744 1e5a 0895      		ret
 4745               		.cfi_endproc
 4746               	.LFE21:
 4748               		.section	.rodata
 4749               	.LC8:
 4750 016d 4641 4C53 		.string	"FALSE"
 4750      4500 
 4751               	.LC9:
 4752 0173 5452 5545 		.string	"TRUE"
 4752      00
 4753               	.LC10:
 4754 0178 456E 7465 		.string	"Entered primal simplex algorithm with feasibility %s\n"
 4754      7265 6420 
 4754      7072 696D 
 4754      616C 2073 
 4754      696D 706C 
 4755               	.LC11:
 4756 01ae 5031 6578 		.string	"P1extraDim count = %d\n"
 4756      7472 6144 
 4756      696D 2063 
 4756      6F75 6E74 
 4756      203D 2025 
 4757               	.LC12:
 4758 01c5 7072 696D 		.string	"primloop"
 4758      6C6F 6F70 
 4758      00
 4759               	.LC13:
 4760 01ce 5468 6520 		.string	"The model is primal unbounded.\n"
 4760      6D6F 6465 
 4760      6C20 6973 
 4760      2070 7269 
 4760      6D61 6C20 
 4761               	.LC14:
 4762 01ee 456E 7465 		.string	"Entering column %d found to be non-improving due to degeneracy.\n"
 4762      7269 6E67 
 4762      2063 6F6C 
 4762      756D 6E20 
 4762      2564 2066 
 4763               	.LC15:
 4764 022f 4761 7665 		.string	"Gave up trying to find a strictly improving entering column.\n"
 4764      2075 7020 
 4764      7472 7969 
 4764      6E67 2074 
 4764      6F20 6669 
 4765               	.LC16:
 4766 026d 7072 696D 		.string	"primloop: Assuming convergence with reduced accuracy %g.\n"
 4766      6C6F 6F70 
 4766      3A20 4173 
 4766      7375 6D69 
 4766      6E67 2063 
 4767               	.LC17:
 4768 02a7 2E2E 2E74 		.string	"...trying to recover via another pivot column.\n"
 4768      7279 696E 
 4768      6720 746F 
 4768      2072 6563 
 4768      6F76 6572 
 4769               	.LC18:
 4770 02d7 466F 756E 		.string	"Found feasibility by primal simplex after  %10.0f iter.\n"
 4770      6420 6665 
 4770      6173 6962 
 4770      696C 6974 
 4770      7920 6279 
 4771               	.LC19:
 4772 0310 4D6F 6465 		.string	"Model infeasible by primal simplex at iter   %10.0f.\n"
 4772      6C20 696E 
 4772      6665 6173 
 4772      6962 6C65 
 4772      2062 7920 
 4773               	.LC20:
 4774 0346 7072 696D 		.string	"primloop: Lost primal feasibility at iter  %10.0f: will try to recover.\n"
 4774      6C6F 6F70 
 4774      3A20 4C6F 
 4774      7374 2070 
 4774      7269 6D61 
 4775               		.text
 4776               	.global	primloop
 4778               	primloop:
 4779               	.LFB22:
 561:lp_solve_5.5/lp_simplex.c **** 
 562:lp_solve_5.5/lp_simplex.c **** 
 563:lp_solve_5.5/lp_simplex.c **** STATIC int primloop(lprec *lp, MYBOOL primalfeasible, REAL primaloffset)
 564:lp_solve_5.5/lp_simplex.c **** {
 4780               		.loc 2 564 0
 4781               		.cfi_startproc
 4782 1e5c 8F92      		push r8
 4783               	.LCFI82:
 4784               		.cfi_def_cfa_offset 3
 4785               		.cfi_offset 8, -2
 4786 1e5e 9F92      		push r9
 4787               	.LCFI83:
 4788               		.cfi_def_cfa_offset 4
 4789               		.cfi_offset 9, -3
 4790 1e60 AF92      		push r10
 4791               	.LCFI84:
 4792               		.cfi_def_cfa_offset 5
 4793               		.cfi_offset 10, -4
 4794 1e62 BF92      		push r11
 4795               	.LCFI85:
 4796               		.cfi_def_cfa_offset 6
 4797               		.cfi_offset 11, -5
 4798 1e64 CF92      		push r12
 4799               	.LCFI86:
 4800               		.cfi_def_cfa_offset 7
 4801               		.cfi_offset 12, -6
 4802 1e66 DF92      		push r13
 4803               	.LCFI87:
 4804               		.cfi_def_cfa_offset 8
 4805               		.cfi_offset 13, -7
 4806 1e68 EF92      		push r14
 4807               	.LCFI88:
 4808               		.cfi_def_cfa_offset 9
 4809               		.cfi_offset 14, -8
 4810 1e6a FF92      		push r15
 4811               	.LCFI89:
 4812               		.cfi_def_cfa_offset 10
 4813               		.cfi_offset 15, -9
 4814 1e6c 0F93      		push r16
 4815               	.LCFI90:
 4816               		.cfi_def_cfa_offset 11
 4817               		.cfi_offset 16, -10
 4818 1e6e 1F93      		push r17
 4819               	.LCFI91:
 4820               		.cfi_def_cfa_offset 12
 4821               		.cfi_offset 17, -11
 4822 1e70 CF93      		push r28
 4823               	.LCFI92:
 4824               		.cfi_def_cfa_offset 13
 4825               		.cfi_offset 28, -12
 4826 1e72 DF93      		push r29
 4827               	.LCFI93:
 4828               		.cfi_def_cfa_offset 14
 4829               		.cfi_offset 29, -13
 4830 1e74 CDB7      		in r28,__SP_L__
 4831 1e76 DEB7      		in r29,__SP_H__
 4832               	.LCFI94:
 4833               		.cfi_def_cfa_register 28
 4834 1e78 EC97      		sbiw r28,60
 4835               	.LCFI95:
 4836               		.cfi_def_cfa_offset 74
 4837 1e7a 0FB6      		in __tmp_reg__,__SREG__
 4838 1e7c F894      		cli
 4839 1e7e DEBF      		out __SP_H__,r29
 4840 1e80 0FBE      		out __SREG__,__tmp_reg__
 4841 1e82 CDBF      		out __SP_L__,r28
 4842               	/* prologue: function */
 4843               	/* frame size = 60 */
 4844               	/* stack size = 72 */
 4845               	.L__stack_usage = 72
 4846 1e84 9FAB      		std Y+55,r25
 4847 1e86 8EAB      		std Y+54,r24
 4848 1e88 68AF      		std Y+56,r22
 4849 1e8a 29AF      		std Y+57,r18
 4850 1e8c 3AAF      		std Y+58,r19
 4851 1e8e 4BAF      		std Y+59,r20
 4852 1e90 5CAF      		std Y+60,r21
 565:lp_solve_5.5/lp_simplex.c ****   MYBOOL primal = TRUE, bfpfinal = FALSE, changedphase = FALSE, forceoutEQ = AUTOMATIC,
 4853               		.loc 2 565 0
 4854 1e92 81E0      		ldi r24,lo8(1)
 4855 1e94 8D8B      		std Y+21,r24
 4856 1e96 1982      		std Y+1,__zero_reg__
 4857 1e98 1A82      		std Y+2,__zero_reg__
 4858 1e9a 82E0      		ldi r24,lo8(2)
 4859 1e9c 8BA3      		std Y+35,r24
 566:lp_solve_5.5/lp_simplex.c ****          primalphase1, pricerCanChange, minit, stallaccept, pendingunbounded;
 567:lp_solve_5.5/lp_simplex.c ****   int    i, j, k, colnr = 0, rownr = 0, lastnr = 0,
 4860               		.loc 2 567 0
 4861 1e9e 1886      		std Y+8,__zero_reg__
 4862 1ea0 1F82      		std Y+7,__zero_reg__
 4863 1ea2 1A86      		std Y+10,__zero_reg__
 4864 1ea4 1986      		std Y+9,__zero_reg__
 4865 1ea6 1C86      		std Y+12,__zero_reg__
 4866 1ea8 1B86      		std Y+11,__zero_reg__
 568:lp_solve_5.5/lp_simplex.c ****          candidatecount = 0, minitcount = 0, ok = TRUE;
 4867               		.loc 2 568 0
 4868 1eaa 1DA2      		std Y+37,__zero_reg__
 4869 1eac 1CA2      		std Y+36,__zero_reg__
 4870 1eae 1E86      		std Y+14,__zero_reg__
 4871 1eb0 1D86      		std Y+13,__zero_reg__
 4872 1eb2 81E0      		ldi r24,lo8(1)
 4873 1eb4 90E0      		ldi r25,0
 4874 1eb6 988B      		std Y+16,r25
 4875 1eb8 8F87      		std Y+15,r24
 569:lp_solve_5.5/lp_simplex.c ****   LREAL  theta = 0.0;
 4876               		.loc 2 569 0
 4877 1eba 1EA2      		std Y+38,__zero_reg__
 4878 1ebc 1FA2      		std Y+39,__zero_reg__
 4879 1ebe 18A6      		std Y+40,__zero_reg__
 4880 1ec0 19A6      		std Y+41,__zero_reg__
 570:lp_solve_5.5/lp_simplex.c ****   REAL   epsvalue, xviolated = 0.0, cviolated = 0.0,
 4881               		.loc 2 570 0
 4882 1ec2 1AA6      		std Y+42,__zero_reg__
 4883 1ec4 1BA6      		std Y+43,__zero_reg__
 4884 1ec6 1CA6      		std Y+44,__zero_reg__
 4885 1ec8 1DA6      		std Y+45,__zero_reg__
 4886 1eca 1EA6      		std Y+46,__zero_reg__
 4887 1ecc 1FA6      		std Y+47,__zero_reg__
 4888 1ece 18AA      		std Y+48,__zero_reg__
 4889 1ed0 19AA      		std Y+49,__zero_reg__
 571:lp_solve_5.5/lp_simplex.c ****          *prow = NULL, *pcol = NULL,
 4890               		.loc 2 571 0
 4891 1ed2 1BAA      		std Y+51,__zero_reg__
 4892 1ed4 1AAA      		std Y+50,__zero_reg__
 4893 1ed6 1DAA      		std Y+53,__zero_reg__
 4894 1ed8 1CAA      		std Y+52,__zero_reg__
 572:lp_solve_5.5/lp_simplex.c ****          *drow = lp->drow;
 4895               		.loc 2 572 0
 4896 1eda 8EA9      		ldd r24,Y+54
 4897 1edc 9FA9      		ldd r25,Y+55
 4898 1ede 865E      		subi r24,-26
 4899 1ee0 9D4F      		sbci r25,-3
 4900 1ee2 DC01      		movw r26,r24
 4901 1ee4 8D91      		ld r24,X+
 4902 1ee6 9C91      		ld r25,X
 4903 1ee8 9A8B      		std Y+18,r25
 4904 1eea 898B      		std Y+17,r24
 573:lp_solve_5.5/lp_simplex.c ****   int    *workINT = NULL,
 4905               		.loc 2 573 0
 4906 1eec 1F8A      		std Y+23,__zero_reg__
 4907 1eee 1E8A      		std Y+22,__zero_reg__
 574:lp_solve_5.5/lp_simplex.c ****          *nzdrow = lp->nzdrow;
 4908               		.loc 2 574 0
 4909 1ef0 8EA9      		ldd r24,Y+54
 4910 1ef2 9FA9      		ldd r25,Y+55
 4911 1ef4 845E      		subi r24,-28
 4912 1ef6 9D4F      		sbci r25,-3
 4913 1ef8 FC01      		movw r30,r24
 4914 1efa 8081      		ld r24,Z
 4915 1efc 9181      		ldd r25,Z+1
 4916 1efe 9C8B      		std Y+20,r25
 4917 1f00 8B8B      		std Y+19,r24
 575:lp_solve_5.5/lp_simplex.c **** 
 576:lp_solve_5.5/lp_simplex.c ****   if(lp->spx_trace)
 4918               		.loc 2 576 0
 4919 1f02 8EA9      		ldd r24,Y+54
 4920 1f04 9FA9      		ldd r25,Y+55
 4921 1f06 8E5F      		subi r24,-2
 4922 1f08 9D4F      		sbci r25,-3
 4923 1f0a DC01      		movw r26,r24
 4924 1f0c 8C91      		ld r24,X
 4925 1f0e 8823      		tst r24
 4926 1f10 01F0      		breq .L170
 577:lp_solve_5.5/lp_simplex.c ****     report(lp, DETAILED, "Entered primal simplex algorithm with feasibility %s\n",
 4927               		.loc 2 577 0
 4928 1f12 88AD      		ldd r24,Y+56
 4929 1f14 8823      		tst r24
 4930 1f16 01F4      		brne .L171
 4931               		.loc 2 577 0 is_stmt 0 discriminator 1
 4932 1f18 80E0      		ldi r24,lo8(.LC8)
 4933 1f1a 90E0      		ldi r25,hi8(.LC8)
 4934 1f1c 00C0      		rjmp .L172
 4935               	.L171:
 4936               		.loc 2 577 0 discriminator 2
 4937 1f1e 80E0      		ldi r24,lo8(.LC9)
 4938 1f20 90E0      		ldi r25,hi8(.LC9)
 4939               	.L172:
 4940               		.loc 2 577 0 discriminator 4
 4941 1f22 292F      		mov r18,r25
 4942 1f24 2F93      		push r18
 4943 1f26 8F93      		push r24
 4944 1f28 80E0      		ldi r24,lo8(.LC10)
 4945 1f2a 90E0      		ldi r25,hi8(.LC10)
 4946 1f2c 892F      		mov r24,r25
 4947 1f2e 8F93      		push r24
 4948 1f30 80E0      		ldi r24,lo8(.LC10)
 4949 1f32 90E0      		ldi r25,hi8(.LC10)
 4950 1f34 8F93      		push r24
 4951 1f36 1F92      		push __zero_reg__
 4952 1f38 85E0      		ldi r24,lo8(5)
 4953 1f3a 8F93      		push r24
 4954 1f3c 8FA9      		ldd r24,Y+55
 4955 1f3e 8F93      		push r24
 4956 1f40 8EA9      		ldd r24,Y+54
 4957 1f42 8F93      		push r24
 4958 1f44 0E94 0000 		call report
 4959 1f48 EDB7      		in r30,__SP_L__
 4960 1f4a FEB7      		in r31,__SP_H__
 4961 1f4c 3896      		adiw r30,8
 4962 1f4e 0FB6      		in __tmp_reg__,__SREG__
 4963 1f50 F894      		cli
 4964 1f52 DEBF      		out __SP_H__,r29
 4965 1f54 0FBE      		out __SREG__,__tmp_reg__
 4966 1f56 CDBF      		out __SP_L__,r28
 4967               	.L170:
 578:lp_solve_5.5/lp_simplex.c ****                          my_boolstr(primalfeasible));
 579:lp_solve_5.5/lp_simplex.c **** 
 580:lp_solve_5.5/lp_simplex.c ****  /* Add sufficent number of artificial variables to make the problem feasible
 581:lp_solve_5.5/lp_simplex.c ****     through the first phase; delete when primal feasibility has been achieved */
 582:lp_solve_5.5/lp_simplex.c ****   lp->P1extraDim = 0;
 4968               		.loc 2 582 0 is_stmt 1
 4969 1f58 8EA9      		ldd r24,Y+54
 4970 1f5a 9FA9      		ldd r25,Y+55
 4971 1f5c 8051      		subi r24,16
 4972 1f5e 9D4F      		sbci r25,-3
 4973 1f60 DC01      		movw r26,r24
 4974 1f62 1D92      		st X+,__zero_reg__
 4975 1f64 1C92      		st X,__zero_reg__
 583:lp_solve_5.5/lp_simplex.c ****   if(!primalfeasible) {
 4976               		.loc 2 583 0
 4977 1f66 88AD      		ldd r24,Y+56
 4978 1f68 8823      		tst r24
 4979 1f6a 01F0      		breq .+2
 4980 1f6c 00C0      		rjmp .L173
 584:lp_solve_5.5/lp_simplex.c ****     lp->simplex_mode = SIMPLEX_Phase1_PRIMAL;
 4981               		.loc 2 584 0
 4982 1f6e 8EA9      		ldd r24,Y+54
 4983 1f70 9FA9      		ldd r25,Y+55
 4984 1f72 8A5A      		subi r24,-86
 4985 1f74 9D4F      		sbci r25,-3
 4986 1f76 21E0      		ldi r18,lo8(1)
 4987 1f78 30E0      		ldi r19,0
 4988 1f7a FC01      		movw r30,r24
 4989 1f7c 3183      		std Z+1,r19
 4990 1f7e 2083      		st Z,r18
 585:lp_solve_5.5/lp_simplex.c **** #ifdef Paranoia
 586:lp_solve_5.5/lp_simplex.c ****     if(!verify_basis(lp))
 587:lp_solve_5.5/lp_simplex.c ****       report(lp, SEVERE, "primloop: No valid basis for artificial variables\n");
 588:lp_solve_5.5/lp_simplex.c **** #endif
 589:lp_solve_5.5/lp_simplex.c **** #if 0
 590:lp_solve_5.5/lp_simplex.c ****     /* First check if we can get away with a single artificial variable */
 591:lp_solve_5.5/lp_simplex.c ****     if(lp->equalities == 0) {
 592:lp_solve_5.5/lp_simplex.c ****       i = (int) feasibilityOffset(lp, !primal);
 593:lp_solve_5.5/lp_simplex.c ****       add_artificial(lp, i, prow, (int *) pcol);
 594:lp_solve_5.5/lp_simplex.c ****     }
 595:lp_solve_5.5/lp_simplex.c ****     else
 596:lp_solve_5.5/lp_simplex.c **** #endif
 597:lp_solve_5.5/lp_simplex.c ****     /* Otherwise add as many artificial variables as is necessary
 598:lp_solve_5.5/lp_simplex.c ****        to force primal feasibility. */
 599:lp_solve_5.5/lp_simplex.c ****       for(i = 1; i <= lp->rows; i++) {
 4991               		.loc 2 599 0
 4992 1f80 81E0      		ldi r24,lo8(1)
 4993 1f82 90E0      		ldi r25,0
 4994 1f84 9E83      		std Y+6,r25
 4995 1f86 8D83      		std Y+5,r24
 4996 1f88 00C0      		rjmp .L174
 4997               	.L175:
 600:lp_solve_5.5/lp_simplex.c ****         add_artificial(lp, i, NULL, NULL);
 4998               		.loc 2 600 0 discriminator 3
 4999 1f8a 6D81      		ldd r22,Y+5
 5000 1f8c 7E81      		ldd r23,Y+6
 5001 1f8e 8EA9      		ldd r24,Y+54
 5002 1f90 9FA9      		ldd r25,Y+55
 5003 1f92 20E0      		ldi r18,0
 5004 1f94 30E0      		ldi r19,0
 5005 1f96 40E0      		ldi r20,0
 5006 1f98 50E0      		ldi r21,0
 5007 1f9a 0E94 0000 		call add_artificial
 599:lp_solve_5.5/lp_simplex.c ****         add_artificial(lp, i, NULL, NULL);
 5008               		.loc 2 599 0 discriminator 3
 5009 1f9e 8D81      		ldd r24,Y+5
 5010 1fa0 9E81      		ldd r25,Y+6
 5011 1fa2 0196      		adiw r24,1
 5012 1fa4 9E83      		std Y+6,r25
 5013 1fa6 8D83      		std Y+5,r24
 5014               	.L174:
 599:lp_solve_5.5/lp_simplex.c ****         add_artificial(lp, i, NULL, NULL);
 5015               		.loc 2 599 0 is_stmt 0 discriminator 1
 5016 1fa8 8EA9      		ldd r24,Y+54
 5017 1faa 9FA9      		ldd r25,Y+55
 5018 1fac 8651      		subi r24,22
 5019 1fae 9E4F      		sbci r25,-2
 5020 1fb0 DC01      		movw r26,r24
 5021 1fb2 2D91      		ld r18,X+
 5022 1fb4 3C91      		ld r19,X
 5023 1fb6 8D81      		ldd r24,Y+5
 5024 1fb8 9E81      		ldd r25,Y+6
 5025 1fba 2817      		cp r18,r24
 5026 1fbc 3907      		cpc r19,r25
 5027 1fbe 04F4      		brge .L175
 601:lp_solve_5.5/lp_simplex.c ****       }
 602:lp_solve_5.5/lp_simplex.c **** 
 603:lp_solve_5.5/lp_simplex.c ****     /* Make sure we update the working objective */
 604:lp_solve_5.5/lp_simplex.c ****     if(lp->P1extraDim > 0) {
 5028               		.loc 2 604 0 is_stmt 1
 5029 1fc0 8EA9      		ldd r24,Y+54
 5030 1fc2 9FA9      		ldd r25,Y+55
 5031 1fc4 8051      		subi r24,16
 5032 1fc6 9D4F      		sbci r25,-3
 5033 1fc8 FC01      		movw r30,r24
 5034 1fca 8081      		ld r24,Z
 5035 1fcc 9181      		ldd r25,Z+1
 5036 1fce 1816      		cp __zero_reg__,r24
 5037 1fd0 1906      		cpc __zero_reg__,r25
 5038 1fd2 04F0      		brlt .+2
 5039 1fd4 00C0      		rjmp .L176
 605:lp_solve_5.5/lp_simplex.c **** #if 1 /* v5.1 code: Not really necessary since we do not price the artificial
 606:lp_solve_5.5/lp_simplex.c ****         variables (stored at the end of the column list, they are initially
 607:lp_solve_5.5/lp_simplex.c ****         basic and are never allowed to enter the basis, once they exit) */
 608:lp_solve_5.5/lp_simplex.c ****       ok = allocREAL(lp, &(lp->drow), lp->sum+1, AUTOMATIC) &&
 5040               		.loc 2 608 0
 5041 1fd6 8EA9      		ldd r24,Y+54
 5042 1fd8 9FA9      		ldd r25,Y+55
 5043 1fda 8851      		subi r24,24
 5044 1fdc 9E4F      		sbci r25,-2
 5045 1fde DC01      		movw r26,r24
 5046 1fe0 8D91      		ld r24,X+
 5047 1fe2 9C91      		ld r25,X
 5048 1fe4 AC01      		movw r20,r24
 5049 1fe6 4F5F      		subi r20,-1
 5050 1fe8 5F4F      		sbci r21,-1
 5051 1fea 8EA9      		ldd r24,Y+54
 5052 1fec 9FA9      		ldd r25,Y+55
 5053 1fee BC01      		movw r22,r24
 5054 1ff0 665E      		subi r22,-26
 5055 1ff2 7D4F      		sbci r23,-3
 5056 1ff4 8EA9      		ldd r24,Y+54
 5057 1ff6 9FA9      		ldd r25,Y+55
 5058 1ff8 22E0      		ldi r18,lo8(2)
 5059 1ffa 0E94 0000 		call allocREAL
 5060 1ffe 8823      		tst r24
 5061 2000 01F0      		breq .L177
 609:lp_solve_5.5/lp_simplex.c ****            allocINT(lp, &(lp->nzdrow), lp->sum+1, AUTOMATIC);
 5062               		.loc 2 609 0 discriminator 1
 5063 2002 8EA9      		ldd r24,Y+54
 5064 2004 9FA9      		ldd r25,Y+55
 5065 2006 8851      		subi r24,24
 5066 2008 9E4F      		sbci r25,-2
 5067 200a FC01      		movw r30,r24
 5068 200c 8081      		ld r24,Z
 5069 200e 9181      		ldd r25,Z+1
 5070 2010 AC01      		movw r20,r24
 5071 2012 4F5F      		subi r20,-1
 5072 2014 5F4F      		sbci r21,-1
 5073 2016 8EA9      		ldd r24,Y+54
 5074 2018 9FA9      		ldd r25,Y+55
 5075 201a BC01      		movw r22,r24
 5076 201c 645E      		subi r22,-28
 5077 201e 7D4F      		sbci r23,-3
 5078 2020 8EA9      		ldd r24,Y+54
 5079 2022 9FA9      		ldd r25,Y+55
 5080 2024 22E0      		ldi r18,lo8(2)
 5081 2026 0E94 0000 		call allocINT
 608:lp_solve_5.5/lp_simplex.c ****            allocINT(lp, &(lp->nzdrow), lp->sum+1, AUTOMATIC);
 5082               		.loc 2 608 0 discriminator 1
 5083 202a 8823      		tst r24
 5084 202c 01F0      		breq .L177
 608:lp_solve_5.5/lp_simplex.c ****            allocINT(lp, &(lp->nzdrow), lp->sum+1, AUTOMATIC);
 5085               		.loc 2 608 0 is_stmt 0 discriminator 3
 5086 202e 81E0      		ldi r24,lo8(1)
 5087 2030 90E0      		ldi r25,0
 5088 2032 00C0      		rjmp .L178
 5089               	.L177:
 608:lp_solve_5.5/lp_simplex.c ****            allocINT(lp, &(lp->nzdrow), lp->sum+1, AUTOMATIC);
 5090               		.loc 2 608 0 discriminator 4
 5091 2034 80E0      		ldi r24,0
 5092 2036 90E0      		ldi r25,0
 5093               	.L178:
 608:lp_solve_5.5/lp_simplex.c ****            allocINT(lp, &(lp->nzdrow), lp->sum+1, AUTOMATIC);
 5094               		.loc 2 608 0 discriminator 6
 5095 2038 988B      		std Y+16,r25
 5096 203a 8F87      		std Y+15,r24
 610:lp_solve_5.5/lp_simplex.c ****       if(!ok)
 5097               		.loc 2 610 0 is_stmt 1 discriminator 6
 5098 203c 8F85      		ldd r24,Y+15
 5099 203e 9889      		ldd r25,Y+16
 5100 2040 892B      		or r24,r25
 5101 2042 01F4      		brne .+4
 5102 2044 0C94 0000 		jmp .L265
 611:lp_solve_5.5/lp_simplex.c ****         goto Finish;
 612:lp_solve_5.5/lp_simplex.c ****       lp->nzdrow[0] = 0;
 5103               		.loc 2 612 0
 5104 2048 8EA9      		ldd r24,Y+54
 5105 204a 9FA9      		ldd r25,Y+55
 5106 204c 845E      		subi r24,-28
 5107 204e 9D4F      		sbci r25,-3
 5108 2050 DC01      		movw r26,r24
 5109 2052 8D91      		ld r24,X+
 5110 2054 9C91      		ld r25,X
 5111 2056 FC01      		movw r30,r24
 5112 2058 1182      		std Z+1,__zero_reg__
 5113 205a 1082      		st Z,__zero_reg__
 613:lp_solve_5.5/lp_simplex.c ****       drow = lp->drow;
 5114               		.loc 2 613 0
 5115 205c 8EA9      		ldd r24,Y+54
 5116 205e 9FA9      		ldd r25,Y+55
 5117 2060 865E      		subi r24,-26
 5118 2062 9D4F      		sbci r25,-3
 5119 2064 DC01      		movw r26,r24
 5120 2066 8D91      		ld r24,X+
 5121 2068 9C91      		ld r25,X
 5122 206a 9A8B      		std Y+18,r25
 5123 206c 898B      		std Y+17,r24
 614:lp_solve_5.5/lp_simplex.c ****       nzdrow = lp->nzdrow;
 5124               		.loc 2 614 0
 5125 206e 8EA9      		ldd r24,Y+54
 5126 2070 9FA9      		ldd r25,Y+55
 5127 2072 845E      		subi r24,-28
 5128 2074 9D4F      		sbci r25,-3
 5129 2076 FC01      		movw r30,r24
 5130 2078 8081      		ld r24,Z
 5131 207a 9181      		ldd r25,Z+1
 5132 207c 9C8B      		std Y+20,r25
 5133 207e 8B8B      		std Y+19,r24
 615:lp_solve_5.5/lp_simplex.c **** #endif
 616:lp_solve_5.5/lp_simplex.c ****       mat_validate(lp->matA);
 5134               		.loc 2 616 0
 5135 2080 8EA9      		ldd r24,Y+54
 5136 2082 9FA9      		ldd r25,Y+55
 5137 2084 8A54      		subi r24,74
 5138 2086 9D4F      		sbci r25,-3
 5139 2088 DC01      		movw r26,r24
 5140 208a 8D91      		ld r24,X+
 5141 208c 9C91      		ld r25,X
 5142 208e 0E94 0000 		call mat_validate
 617:lp_solve_5.5/lp_simplex.c ****       set_OF_p1extra(lp, 0.0);
 5143               		.loc 2 617 0
 5144 2092 8EA9      		ldd r24,Y+54
 5145 2094 9FA9      		ldd r25,Y+55
 5146 2096 40E0      		ldi r20,0
 5147 2098 50E0      		ldi r21,0
 5148 209a BA01      		movw r22,r20
 5149 209c 0E94 0000 		call set_OF_p1extra
 5150               	.L176:
 618:lp_solve_5.5/lp_simplex.c ****     }
 619:lp_solve_5.5/lp_simplex.c ****     if(lp->spx_trace)
 5151               		.loc 2 619 0
 5152 20a0 8EA9      		ldd r24,Y+54
 5153 20a2 9FA9      		ldd r25,Y+55
 5154 20a4 8E5F      		subi r24,-2
 5155 20a6 9D4F      		sbci r25,-3
 5156 20a8 FC01      		movw r30,r24
 5157 20aa 8081      		ld r24,Z
 5158 20ac 8823      		tst r24
 5159 20ae 01F0      		breq .L181
 620:lp_solve_5.5/lp_simplex.c ****       report(lp, DETAILED, "P1extraDim count = %d\n", lp->P1extraDim);
 5160               		.loc 2 620 0
 5161 20b0 8EA9      		ldd r24,Y+54
 5162 20b2 9FA9      		ldd r25,Y+55
 5163 20b4 8051      		subi r24,16
 5164 20b6 9D4F      		sbci r25,-3
 5165 20b8 DC01      		movw r26,r24
 5166 20ba 8D91      		ld r24,X+
 5167 20bc 9C91      		ld r25,X
 5168 20be 292F      		mov r18,r25
 5169 20c0 2F93      		push r18
 5170 20c2 8F93      		push r24
 5171 20c4 80E0      		ldi r24,lo8(.LC11)
 5172 20c6 90E0      		ldi r25,hi8(.LC11)
 5173 20c8 892F      		mov r24,r25
 5174 20ca 8F93      		push r24
 5175 20cc 80E0      		ldi r24,lo8(.LC11)
 5176 20ce 90E0      		ldi r25,hi8(.LC11)
 5177 20d0 8F93      		push r24
 5178 20d2 1F92      		push __zero_reg__
 5179 20d4 85E0      		ldi r24,lo8(5)
 5180 20d6 8F93      		push r24
 5181 20d8 8FA9      		ldd r24,Y+55
 5182 20da 8F93      		push r24
 5183 20dc 8EA9      		ldd r24,Y+54
 5184 20de 8F93      		push r24
 5185 20e0 0E94 0000 		call report
 5186 20e4 EDB7      		in r30,__SP_L__
 5187 20e6 FEB7      		in r31,__SP_H__
 5188 20e8 3896      		adiw r30,8
 5189 20ea 0FB6      		in __tmp_reg__,__SREG__
 5190 20ec F894      		cli
 5191 20ee DEBF      		out __SP_H__,r29
 5192 20f0 0FBE      		out __SREG__,__tmp_reg__
 5193 20f2 CDBF      		out __SP_L__,r28
 5194               	.L181:
 621:lp_solve_5.5/lp_simplex.c **** 
 622:lp_solve_5.5/lp_simplex.c ****     simplexPricer(lp, (MYBOOL)!primal);
 5195               		.loc 2 622 0
 5196 20f4 81E0      		ldi r24,lo8(1)
 5197 20f6 9D89      		ldd r25,Y+21
 5198 20f8 9923      		tst r25
 5199 20fa 01F0      		breq .L182
 5200 20fc 80E0      		ldi r24,0
 5201               	.L182:
 5202 20fe 282F      		mov r18,r24
 5203 2100 8EA9      		ldd r24,Y+54
 5204 2102 9FA9      		ldd r25,Y+55
 5205 2104 622F      		mov r22,r18
 5206 2106 0E94 0000 		call simplexPricer
 623:lp_solve_5.5/lp_simplex.c ****     invert(lp, INITSOL_USEZERO, TRUE);
 5207               		.loc 2 623 0
 5208 210a 8EA9      		ldd r24,Y+54
 5209 210c 9FA9      		ldd r25,Y+55
 5210 210e 41E0      		ldi r20,lo8(1)
 5211 2110 61E0      		ldi r22,lo8(1)
 5212 2112 0E94 0000 		call invert
 5213 2116 00C0      		rjmp .L183
 5214               	.L173:
 624:lp_solve_5.5/lp_simplex.c ****   }
 625:lp_solve_5.5/lp_simplex.c ****   else {
 626:lp_solve_5.5/lp_simplex.c ****     lp->simplex_mode = SIMPLEX_Phase2_PRIMAL;
 5215               		.loc 2 626 0
 5216 2118 8EA9      		ldd r24,Y+54
 5217 211a 9FA9      		ldd r25,Y+55
 5218 211c 8A5A      		subi r24,-86
 5219 211e 9D4F      		sbci r25,-3
 5220 2120 24E0      		ldi r18,lo8(4)
 5221 2122 30E0      		ldi r19,0
 5222 2124 DC01      		movw r26,r24
 5223 2126 2D93      		st X+,r18
 5224 2128 3C93      		st X,r19
 627:lp_solve_5.5/lp_simplex.c ****     restartPricer(lp, (MYBOOL)!primal);
 5225               		.loc 2 627 0
 5226 212a 81E0      		ldi r24,lo8(1)
 5227 212c 9D89      		ldd r25,Y+21
 5228 212e 9923      		tst r25
 5229 2130 01F0      		breq .L184
 5230 2132 80E0      		ldi r24,0
 5231               	.L184:
 5232 2134 282F      		mov r18,r24
 5233 2136 8EA9      		ldd r24,Y+54
 5234 2138 9FA9      		ldd r25,Y+55
 5235 213a 622F      		mov r22,r18
 5236 213c 0E94 0000 		call restartPricer
 5237               	.L183:
 628:lp_solve_5.5/lp_simplex.c ****   }
 629:lp_solve_5.5/lp_simplex.c **** 
 630:lp_solve_5.5/lp_simplex.c ****   /* Create work arrays and optionally the multiple pricing structure */
 631:lp_solve_5.5/lp_simplex.c ****   ok = allocREAL(lp, &(lp->bsolveVal), lp->rows + 1, FALSE) &&
 5238               		.loc 2 631 0
 5239 2140 8EA9      		ldd r24,Y+54
 5240 2142 9FA9      		ldd r25,Y+55
 5241 2144 8651      		subi r24,22
 5242 2146 9E4F      		sbci r25,-2
 5243 2148 FC01      		movw r30,r24
 5244 214a 8081      		ld r24,Z
 5245 214c 9181      		ldd r25,Z+1
 5246 214e AC01      		movw r20,r24
 5247 2150 4F5F      		subi r20,-1
 5248 2152 5F4F      		sbci r21,-1
 5249 2154 8EA9      		ldd r24,Y+54
 5250 2156 9FA9      		ldd r25,Y+55
 5251 2158 BC01      		movw r22,r24
 5252 215a 6E55      		subi r22,94
 5253 215c 7D4F      		sbci r23,-3
 5254 215e 8EA9      		ldd r24,Y+54
 5255 2160 9FA9      		ldd r25,Y+55
 5256 2162 20E0      		ldi r18,0
 5257 2164 0E94 0000 		call allocREAL
 632:lp_solve_5.5/lp_simplex.c ****        allocREAL(lp, &prow, lp->sum + 1, TRUE) &&
 5258               		.loc 2 632 0
 5259 2168 8823      		tst r24
 5260 216a 01F0      		breq .L185
 5261               		.loc 2 632 0 is_stmt 0 discriminator 1
 5262 216c 8EA9      		ldd r24,Y+54
 5263 216e 9FA9      		ldd r25,Y+55
 5264 2170 8851      		subi r24,24
 5265 2172 9E4F      		sbci r25,-2
 5266 2174 DC01      		movw r26,r24
 5267 2176 8D91      		ld r24,X+
 5268 2178 9C91      		ld r25,X
 5269 217a AC01      		movw r20,r24
 5270 217c 4F5F      		subi r20,-1
 5271 217e 5F4F      		sbci r21,-1
 5272 2180 BE01      		movw r22,r28
 5273 2182 6E5C      		subi r22,-50
 5274 2184 7F4F      		sbci r23,-1
 5275 2186 8EA9      		ldd r24,Y+54
 5276 2188 9FA9      		ldd r25,Y+55
 5277 218a 21E0      		ldi r18,lo8(1)
 5278 218c 0E94 0000 		call allocREAL
 631:lp_solve_5.5/lp_simplex.c ****        allocREAL(lp, &prow, lp->sum + 1, TRUE) &&
 5279               		.loc 2 631 0 is_stmt 1 discriminator 1
 5280 2190 8823      		tst r24
 5281 2192 01F0      		breq .L185
 633:lp_solve_5.5/lp_simplex.c ****        allocREAL(lp, &pcol, lp->rows + 1, TRUE);
 5282               		.loc 2 633 0 discriminator 4
 5283 2194 8EA9      		ldd r24,Y+54
 5284 2196 9FA9      		ldd r25,Y+55
 5285 2198 8651      		subi r24,22
 5286 219a 9E4F      		sbci r25,-2
 5287 219c FC01      		movw r30,r24
 5288 219e 8081      		ld r24,Z
 5289 21a0 9181      		ldd r25,Z+1
 5290 21a2 AC01      		movw r20,r24
 5291 21a4 4F5F      		subi r20,-1
 5292 21a6 5F4F      		sbci r21,-1
 5293 21a8 BE01      		movw r22,r28
 5294 21aa 6C5C      		subi r22,-52
 5295 21ac 7F4F      		sbci r23,-1
 5296 21ae 8EA9      		ldd r24,Y+54
 5297 21b0 9FA9      		ldd r25,Y+55
 5298 21b2 21E0      		ldi r18,lo8(1)
 5299 21b4 0E94 0000 		call allocREAL
 632:lp_solve_5.5/lp_simplex.c ****        allocREAL(lp, &prow, lp->sum + 1, TRUE) &&
 5300               		.loc 2 632 0 discriminator 4
 5301 21b8 8823      		tst r24
 5302 21ba 01F0      		breq .L185
 632:lp_solve_5.5/lp_simplex.c ****        allocREAL(lp, &prow, lp->sum + 1, TRUE) &&
 5303               		.loc 2 632 0 is_stmt 0 discriminator 3
 5304 21bc 81E0      		ldi r24,lo8(1)
 5305 21be 90E0      		ldi r25,0
 5306 21c0 00C0      		rjmp .L186
 5307               	.L185:
 632:lp_solve_5.5/lp_simplex.c ****        allocREAL(lp, &prow, lp->sum + 1, TRUE) &&
 5308               		.loc 2 632 0 discriminator 2
 5309 21c2 80E0      		ldi r24,0
 5310 21c4 90E0      		ldi r25,0
 5311               	.L186:
 631:lp_solve_5.5/lp_simplex.c ****        allocREAL(lp, &prow, lp->sum + 1, TRUE) &&
 5312               		.loc 2 631 0 is_stmt 1
 5313 21c6 988B      		std Y+16,r25
 5314 21c8 8F87      		std Y+15,r24
 634:lp_solve_5.5/lp_simplex.c ****   if(is_piv_mode(lp, PRICE_MULTIPLE) && (lp->multiblockdiv > 1)) {
 5315               		.loc 2 634 0
 5316 21ca 8EA9      		ldd r24,Y+54
 5317 21cc 9FA9      		ldd r25,Y+55
 5318 21ce 68E0      		ldi r22,lo8(8)
 5319 21d0 70E0      		ldi r23,0
 5320 21d2 0E94 0000 		call is_piv_mode
 5321 21d6 8823      		tst r24
 5322 21d8 01F4      		brne .+2
 5323 21da 00C0      		rjmp .L187
 5324               		.loc 2 634 0 is_stmt 0 discriminator 1
 5325 21dc 8EA9      		ldd r24,Y+54
 5326 21de 9FA9      		ldd r25,Y+55
 5327 21e0 8657      		subi r24,118
 5328 21e2 9D4F      		sbci r25,-3
 5329 21e4 DC01      		movw r26,r24
 5330 21e6 8D91      		ld r24,X+
 5331 21e8 9C91      		ld r25,X
 5332 21ea 0297      		sbiw r24,2
 5333 21ec 04F4      		brge .+2
 5334 21ee 00C0      		rjmp .L187
 635:lp_solve_5.5/lp_simplex.c ****     lp->multivars = multi_create(lp, FALSE);
 5335               		.loc 2 635 0 is_stmt 1
 5336 21f0 8EA9      		ldd r24,Y+54
 5337 21f2 9FA9      		ldd r25,Y+55
 5338 21f4 60E0      		ldi r22,0
 5339 21f6 0E94 0000 		call multi_create
 5340 21fa 9C01      		movw r18,r24
 5341 21fc 8EA9      		ldd r24,Y+54
 5342 21fe 9FA9      		ldd r25,Y+55
 5343 2200 8857      		subi r24,120
 5344 2202 9D4F      		sbci r25,-3
 5345 2204 FC01      		movw r30,r24
 5346 2206 3183      		std Z+1,r19
 5347 2208 2083      		st Z,r18
 636:lp_solve_5.5/lp_simplex.c ****     ok &= (lp->multivars != NULL) &&
 5348               		.loc 2 636 0
 5349 220a 8EA9      		ldd r24,Y+54
 5350 220c 9FA9      		ldd r25,Y+55
 5351 220e 8857      		subi r24,120
 5352 2210 9D4F      		sbci r25,-3
 5353 2212 DC01      		movw r26,r24
 5354 2214 8D91      		ld r24,X+
 5355 2216 9C91      		ld r25,X
 5356 2218 892B      		or r24,r25
 5357 221a 01F0      		breq .L188
 637:lp_solve_5.5/lp_simplex.c ****           multi_resize(lp->multivars, lp->sum / lp->multiblockdiv, 2, FALSE, TRUE);
 5358               		.loc 2 637 0 discriminator 1
 5359 221c 8EA9      		ldd r24,Y+54
 5360 221e 9FA9      		ldd r25,Y+55
 5361 2220 8851      		subi r24,24
 5362 2222 9E4F      		sbci r25,-2
 5363 2224 FC01      		movw r30,r24
 5364 2226 4081      		ld r20,Z
 5365 2228 5181      		ldd r21,Z+1
 5366 222a 8EA9      		ldd r24,Y+54
 5367 222c 9FA9      		ldd r25,Y+55
 5368 222e 8657      		subi r24,118
 5369 2230 9D4F      		sbci r25,-3
 5370 2232 DC01      		movw r26,r24
 5371 2234 2D91      		ld r18,X+
 5372 2236 3C91      		ld r19,X
 5373 2238 CA01      		movw r24,r20
 5374 223a B901      		movw r22,r18
 5375 223c 0E94 0000 		call __divmodhi4
 5376 2240 CB01      		movw r24,r22
 5377 2242 BC01      		movw r22,r24
 5378 2244 8EA9      		ldd r24,Y+54
 5379 2246 9FA9      		ldd r25,Y+55
 5380 2248 8857      		subi r24,120
 5381 224a 9D4F      		sbci r25,-3
 5382 224c FC01      		movw r30,r24
 5383 224e 8081      		ld r24,Z
 5384 2250 9181      		ldd r25,Z+1
 5385 2252 01E0      		ldi r16,lo8(1)
 5386 2254 20E0      		ldi r18,0
 5387 2256 42E0      		ldi r20,lo8(2)
 5388 2258 50E0      		ldi r21,0
 5389 225a 0E94 0000 		call multi_resize
 636:lp_solve_5.5/lp_simplex.c ****     ok &= (lp->multivars != NULL) &&
 5390               		.loc 2 636 0 discriminator 1
 5391 225e 8823      		tst r24
 5392 2260 01F0      		breq .L188
 636:lp_solve_5.5/lp_simplex.c ****     ok &= (lp->multivars != NULL) &&
 5393               		.loc 2 636 0 is_stmt 0 discriminator 3
 5394 2262 81E0      		ldi r24,lo8(1)
 5395 2264 90E0      		ldi r25,0
 5396 2266 00C0      		rjmp .L189
 5397               	.L188:
 636:lp_solve_5.5/lp_simplex.c ****     ok &= (lp->multivars != NULL) &&
 5398               		.loc 2 636 0 discriminator 4
 5399 2268 80E0      		ldi r24,0
 5400 226a 90E0      		ldi r25,0
 5401               	.L189:
 636:lp_solve_5.5/lp_simplex.c ****     ok &= (lp->multivars != NULL) &&
 5402               		.loc 2 636 0 discriminator 6
 5403 226c 2F85      		ldd r18,Y+15
 5404 226e 3889      		ldd r19,Y+16
 5405 2270 8223      		and r24,r18
 5406 2272 9323      		and r25,r19
 5407 2274 988B      		std Y+16,r25
 5408 2276 8F87      		std Y+15,r24
 5409               	.L187:
 638:lp_solve_5.5/lp_simplex.c ****   }
 639:lp_solve_5.5/lp_simplex.c ****   if(!ok)
 5410               		.loc 2 639 0 is_stmt 1
 5411 2278 8F85      		ldd r24,Y+15
 5412 227a 9889      		ldd r25,Y+16
 5413 227c 892B      		or r24,r25
 5414 227e 01F4      		brne .+4
 5415 2280 0C94 0000 		jmp .L266
 640:lp_solve_5.5/lp_simplex.c ****     goto Finish;
 641:lp_solve_5.5/lp_simplex.c **** 
 642:lp_solve_5.5/lp_simplex.c ****   /* Initialize regular primal simplex algorithm variables */
 643:lp_solve_5.5/lp_simplex.c ****   lp->spx_status = RUNNING;
 5416               		.loc 2 643 0
 5417 2284 8EA9      		ldd r24,Y+54
 5418 2286 9FA9      		ldd r25,Y+55
 5419 2288 8A5F      		subi r24,-6
 5420 228a 9D4F      		sbci r25,-3
 5421 228c 28E0      		ldi r18,lo8(8)
 5422 228e 30E0      		ldi r19,0
 5423 2290 DC01      		movw r26,r24
 5424 2292 2D93      		st X+,r18
 5425 2294 3C93      		st X,r19
 644:lp_solve_5.5/lp_simplex.c ****   minit = ITERATE_MAJORMAJOR;
 5426               		.loc 2 644 0
 5427 2296 1B82      		std Y+3,__zero_reg__
 645:lp_solve_5.5/lp_simplex.c ****   epsvalue = lp->epspivot;
 5428               		.loc 2 645 0
 5429 2298 8EA9      		ldd r24,Y+54
 5430 229a 9FA9      		ldd r25,Y+55
 5431 229c 8E5D      		subi r24,-34
 5432 229e 9C4F      		sbci r25,-4
 5433 22a0 FC01      		movw r30,r24
 5434 22a2 8081      		ld r24,Z
 5435 22a4 9181      		ldd r25,Z+1
 5436 22a6 A281      		ldd r26,Z+2
 5437 22a8 B381      		ldd r27,Z+3
 5438 22aa 888F      		std Y+24,r24
 5439 22ac 998F      		std Y+25,r25
 5440 22ae AA8F      		std Y+26,r26
 5441 22b0 BB8F      		std Y+27,r27
 646:lp_solve_5.5/lp_simplex.c ****   pendingunbounded = FALSE;
 5442               		.loc 2 646 0
 5443 22b2 1C82      		std Y+4,__zero_reg__
 647:lp_solve_5.5/lp_simplex.c **** 
 648:lp_solve_5.5/lp_simplex.c ****   ok = stallMonitor_create(lp, FALSE, "primloop");
 5444               		.loc 2 648 0
 5445 22b4 8EA9      		ldd r24,Y+54
 5446 22b6 9FA9      		ldd r25,Y+55
 5447 22b8 40E0      		ldi r20,lo8(.LC12)
 5448 22ba 50E0      		ldi r21,hi8(.LC12)
 5449 22bc 60E0      		ldi r22,0
 5450 22be 0E94 0000 		call stallMonitor_create
 5451 22c2 882F      		mov r24,r24
 5452 22c4 90E0      		ldi r25,0
 5453 22c6 988B      		std Y+16,r25
 5454 22c8 8F87      		std Y+15,r24
 649:lp_solve_5.5/lp_simplex.c ****   if(!ok)
 5455               		.loc 2 649 0
 5456 22ca 8F85      		ldd r24,Y+15
 5457 22cc 9889      		ldd r25,Y+16
 5458 22ce 892B      		or r24,r25
 5459 22d0 01F4      		brne .+4
 5460 22d2 0C94 0000 		jmp .L267
 650:lp_solve_5.5/lp_simplex.c ****     goto Finish;
 651:lp_solve_5.5/lp_simplex.c **** 
 652:lp_solve_5.5/lp_simplex.c ****   lp->rejectpivot[0] = 0;
 5461               		.loc 2 652 0
 5462 22d6 8EA9      		ldd r24,Y+54
 5463 22d8 9FA9      		ldd r25,Y+55
 5464 22da 8C52      		subi r24,44
 5465 22dc 9D4F      		sbci r25,-3
 5466 22de DC01      		movw r26,r24
 5467 22e0 8D91      		ld r24,X+
 5468 22e2 9C91      		ld r25,X
 5469 22e4 FC01      		movw r30,r24
 5470 22e6 1182      		std Z+1,__zero_reg__
 5471 22e8 1082      		st Z,__zero_reg__
 653:lp_solve_5.5/lp_simplex.c **** 
 654:lp_solve_5.5/lp_simplex.c ****  /* Iterate while we are successful; exit when the model is infeasible/unbounded,
 655:lp_solve_5.5/lp_simplex.c ****     or we must terminate due to numeric instability or user-determined reasons */
 656:lp_solve_5.5/lp_simplex.c ****   while((lp->spx_status == RUNNING) && !userabort(lp, -1)) {
 5472               		.loc 2 656 0
 5473 22ea 0C94 0000 		jmp .L192
 5474               	.L253:
 657:lp_solve_5.5/lp_simplex.c **** 
 658:lp_solve_5.5/lp_simplex.c ****     primalphase1 = (MYBOOL) (lp->P1extraDim > 0);
 5475               		.loc 2 658 0
 5476 22ee 8EA9      		ldd r24,Y+54
 5477 22f0 9FA9      		ldd r25,Y+55
 5478 22f2 8051      		subi r24,16
 5479 22f4 9D4F      		sbci r25,-3
 5480 22f6 DC01      		movw r26,r24
 5481 22f8 8D91      		ld r24,X+
 5482 22fa 9C91      		ld r25,X
 5483 22fc 21E0      		ldi r18,lo8(1)
 5484 22fe 1816      		cp __zero_reg__,r24
 5485 2300 1906      		cpc __zero_reg__,r25
 5486 2302 04F0      		brlt .L193
 5487 2304 20E0      		ldi r18,0
 5488               	.L193:
 5489 2306 2C8F      		std Y+28,r18
 659:lp_solve_5.5/lp_simplex.c ****     clear_action(&lp->spx_action, ACTION_REINVERT | ACTION_ITERATE);
 5490               		.loc 2 659 0
 5491 2308 8EA9      		ldd r24,Y+54
 5492 230a 9FA9      		ldd r25,Y+55
 5493 230c 8E50      		subi r24,14
 5494 230e 9D4F      		sbci r25,-3
 5495 2310 60E5      		ldi r22,lo8(80)
 5496 2312 70E0      		ldi r23,0
 5497 2314 0E94 0000 		call clear_action
 660:lp_solve_5.5/lp_simplex.c **** 
 661:lp_solve_5.5/lp_simplex.c ****     /* Check if we have stalling (from numerics or degenerate cycling) */
 662:lp_solve_5.5/lp_simplex.c ****     pricerCanChange = !primalphase1;
 5498               		.loc 2 662 0
 5499 2318 81E0      		ldi r24,lo8(1)
 5500 231a 9C8D      		ldd r25,Y+28
 5501 231c 9923      		tst r25
 5502 231e 01F0      		breq .L194
 5503 2320 80E0      		ldi r24,0
 5504               	.L194:
 5505 2322 8D8F      		std Y+29,r24
 663:lp_solve_5.5/lp_simplex.c ****     stallaccept = stallMonitor_check(lp, rownr, colnr, lastnr, minit, pricerCanChange, &forceoutEQ)
 5506               		.loc 2 663 0
 5507 2324 FE01      		movw r30,r28
 5508 2326 B396      		adiw r30,35
 5509 2328 2B85      		ldd r18,Y+11
 5510 232a 3C85      		ldd r19,Y+12
 5511 232c 4F81      		ldd r20,Y+7
 5512 232e 5885      		ldd r21,Y+8
 5513 2330 6985      		ldd r22,Y+9
 5514 2332 7A85      		ldd r23,Y+10
 5515 2334 8EA9      		ldd r24,Y+54
 5516 2336 9FA9      		ldd r25,Y+55
 5517 2338 6F01      		movw r12,r30
 5518 233a ED8C      		ldd r14,Y+29
 5519 233c 0B81      		ldd r16,Y+3
 5520 233e 0E94 0000 		call stallMonitor_check
 5521 2342 8E8F      		std Y+30,r24
 664:lp_solve_5.5/lp_simplex.c ****     if(!stallaccept)
 5522               		.loc 2 664 0
 5523 2344 8E8D      		ldd r24,Y+30
 5524 2346 8823      		tst r24
 5525 2348 01F4      		brne .+2
 5526 234a 00C0      		rjmp .L268
 5527               	.L195:
 665:lp_solve_5.5/lp_simplex.c ****       break;
 666:lp_solve_5.5/lp_simplex.c **** 
 667:lp_solve_5.5/lp_simplex.c ****    /* Find best column to enter the basis */
 668:lp_solve_5.5/lp_simplex.c **** RetryCol:
 669:lp_solve_5.5/lp_simplex.c **** #if 0
 670:lp_solve_5.5/lp_simplex.c ****     if(verify_solution(lp, FALSE, "spx_loop") > 0)
 671:lp_solve_5.5/lp_simplex.c ****       i = 1; /* This is just a debug trap */
 672:lp_solve_5.5/lp_simplex.c **** #endif
 673:lp_solve_5.5/lp_simplex.c ****     if(!changedphase) {
 5528               		.loc 2 673 0
 5529 234c 8A81      		ldd r24,Y+2
 5530 234e 8823      		tst r24
 5531 2350 01F0      		breq .+2
 5532 2352 00C0      		rjmp .L197
 674:lp_solve_5.5/lp_simplex.c ****       i = 0;
 5533               		.loc 2 674 0
 5534 2354 1E82      		std Y+6,__zero_reg__
 5535 2356 1D82      		std Y+5,__zero_reg__
 5536               	.L202:
 675:lp_solve_5.5/lp_simplex.c ****       do {
 676:lp_solve_5.5/lp_simplex.c ****         i++;
 5537               		.loc 2 676 0
 5538 2358 8D81      		ldd r24,Y+5
 5539 235a 9E81      		ldd r25,Y+6
 5540 235c 0196      		adiw r24,1
 5541 235e 9E83      		std Y+6,r25
 5542 2360 8D83      		std Y+5,r24
 677:lp_solve_5.5/lp_simplex.c ****         colnr = colprim(lp, drow, nzdrow, (MYBOOL) (minit == ITERATE_MINORRETRY), i, &candidatecoun
 5543               		.loc 2 677 0
 5544 2362 81E0      		ldi r24,lo8(1)
 5545 2364 9B81      		ldd r25,Y+3
 5546 2366 9230      		cpi r25,lo8(2)
 5547 2368 01F0      		breq .L198
 5548 236a 80E0      		ldi r24,0
 5549               	.L198:
 5550 236c D82E      		mov r13,r24
 5551 236e DE01      		movw r26,r28
 5552 2370 9A96      		adiw r26,42
 5553 2372 FE01      		movw r30,r28
 5554 2374 B496      		adiw r30,36
 5555 2376 2D81      		ldd r18,Y+5
 5556 2378 3E81      		ldd r19,Y+6
 5557 237a 4B89      		ldd r20,Y+19
 5558 237c 5C89      		ldd r21,Y+20
 5559 237e 6989      		ldd r22,Y+17
 5560 2380 7A89      		ldd r23,Y+18
 5561 2382 8EA9      		ldd r24,Y+54
 5562 2384 9FA9      		ldd r25,Y+55
 5563 2386 5D01      		movw r10,r26
 5564 2388 CC24      		clr r12
 5565 238a C394      		inc r12
 5566 238c 7F01      		movw r14,r30
 5567 238e 8901      		movw r16,r18
 5568 2390 2D2D      		mov r18,r13
 5569 2392 0E94 0000 		call colprim
 5570 2396 9887      		std Y+8,r25
 5571 2398 8F83      		std Y+7,r24
 678:lp_solve_5.5/lp_simplex.c ****       } while ((colnr == 0) && (i < partial_countBlocks(lp, (MYBOOL) !primal)) &&
 679:lp_solve_5.5/lp_simplex.c ****                                 partial_blockStep(lp, (MYBOOL) !primal));
 5572               		.loc 2 679 0
 5573 239a 8F81      		ldd r24,Y+7
 5574 239c 9885      		ldd r25,Y+8
 5575 239e 892B      		or r24,r25
 5576 23a0 01F4      		brne .L199
 678:lp_solve_5.5/lp_simplex.c ****       } while ((colnr == 0) && (i < partial_countBlocks(lp, (MYBOOL) !primal)) &&
 5577               		.loc 2 678 0
 5578 23a2 81E0      		ldi r24,lo8(1)
 5579 23a4 9D89      		ldd r25,Y+21
 5580 23a6 9923      		tst r25
 5581 23a8 01F0      		breq .L200
 5582 23aa 80E0      		ldi r24,0
 5583               	.L200:
 5584 23ac 282F      		mov r18,r24
 5585 23ae 8EA9      		ldd r24,Y+54
 5586 23b0 9FA9      		ldd r25,Y+55
 5587 23b2 622F      		mov r22,r18
 5588 23b4 0E94 0000 		call partial_countBlocks
 5589 23b8 9C01      		movw r18,r24
 5590 23ba 8D81      		ldd r24,Y+5
 5591 23bc 9E81      		ldd r25,Y+6
 5592 23be 8217      		cp r24,r18
 5593 23c0 9307      		cpc r25,r19
 5594 23c2 04F4      		brge .L199
 5595               		.loc 2 679 0 discriminator 1
 5596 23c4 81E0      		ldi r24,lo8(1)
 5597 23c6 9D89      		ldd r25,Y+21
 5598 23c8 9923      		tst r25
 5599 23ca 01F0      		breq .L201
 5600 23cc 80E0      		ldi r24,0
 5601               	.L201:
 5602 23ce 282F      		mov r18,r24
 5603 23d0 8EA9      		ldd r24,Y+54
 5604 23d2 9FA9      		ldd r25,Y+55
 5605 23d4 622F      		mov r22,r18
 5606 23d6 0E94 0000 		call partial_blockStep
 678:lp_solve_5.5/lp_simplex.c ****       } while ((colnr == 0) && (i < partial_countBlocks(lp, (MYBOOL) !primal)) &&
 5607               		.loc 2 678 0 discriminator 1
 5608 23da 8823      		tst r24
 5609 23dc 01F0      		breq .+2
 5610 23de 00C0      		rjmp .L202
 5611               	.L199:
 680:lp_solve_5.5/lp_simplex.c **** 
 681:lp_solve_5.5/lp_simplex.c ****       /* Handle direct outcomes */
 682:lp_solve_5.5/lp_simplex.c ****       if(colnr == 0)
 5612               		.loc 2 682 0
 5613 23e0 8F81      		ldd r24,Y+7
 5614 23e2 9885      		ldd r25,Y+8
 5615 23e4 892B      		or r24,r25
 5616 23e6 01F4      		brne .L203
 683:lp_solve_5.5/lp_simplex.c ****         lp->spx_status = OPTIMAL;
 5617               		.loc 2 683 0
 5618 23e8 8EA9      		ldd r24,Y+54
 5619 23ea 9FA9      		ldd r25,Y+55
 5620 23ec 8A5F      		subi r24,-6
 5621 23ee 9D4F      		sbci r25,-3
 5622 23f0 FC01      		movw r30,r24
 5623 23f2 1182      		std Z+1,__zero_reg__
 5624 23f4 1082      		st Z,__zero_reg__
 5625               	.L203:
 684:lp_solve_5.5/lp_simplex.c ****       if(lp->rejectpivot[0] > 0)
 5626               		.loc 2 684 0
 5627 23f6 8EA9      		ldd r24,Y+54
 5628 23f8 9FA9      		ldd r25,Y+55
 5629 23fa 8C52      		subi r24,44
 5630 23fc 9D4F      		sbci r25,-3
 5631 23fe DC01      		movw r26,r24
 5632 2400 8D91      		ld r24,X+
 5633 2402 9C91      		ld r25,X
 5634 2404 FC01      		movw r30,r24
 5635 2406 8081      		ld r24,Z
 5636 2408 9181      		ldd r25,Z+1
 5637 240a 1816      		cp __zero_reg__,r24
 5638 240c 1906      		cpc __zero_reg__,r25
 5639 240e 04F4      		brge .L204
 685:lp_solve_5.5/lp_simplex.c ****         minit = ITERATE_MAJORMAJOR;
 5640               		.loc 2 685 0
 5641 2410 1B82      		std Y+3,__zero_reg__
 5642               	.L204:
 686:lp_solve_5.5/lp_simplex.c **** 
 687:lp_solve_5.5/lp_simplex.c ****       /* See if accuracy check during compute_reducedcosts flagged refactorization */
 688:lp_solve_5.5/lp_simplex.c ****       if(is_action(lp->spx_action, ACTION_REINVERT))
 5643               		.loc 2 688 0
 5644 2412 8EA9      		ldd r24,Y+54
 5645 2414 9FA9      		ldd r25,Y+55
 5646 2416 8E50      		subi r24,14
 5647 2418 9D4F      		sbci r25,-3
 5648 241a DC01      		movw r26,r24
 5649 241c 8D91      		ld r24,X+
 5650 241e 9C91      		ld r25,X
 5651 2420 60E1      		ldi r22,lo8(16)
 5652 2422 70E0      		ldi r23,0
 5653 2424 0E94 0000 		call is_action
 5654 2428 8823      		tst r24
 5655 242a 01F0      		breq .L197
 689:lp_solve_5.5/lp_simplex.c ****         bfpfinal = TRUE;
 5656               		.loc 2 689 0
 5657 242c 81E0      		ldi r24,lo8(1)
 5658 242e 8983      		std Y+1,r24
 5659               	.L197:
 690:lp_solve_5.5/lp_simplex.c **** 
 691:lp_solve_5.5/lp_simplex.c ****     }
 692:lp_solve_5.5/lp_simplex.c **** 
 693:lp_solve_5.5/lp_simplex.c ****     /* Make sure that we do not erroneously conclude that an unbounded model is optimal */
 694:lp_solve_5.5/lp_simplex.c **** #ifdef primal_UseRejectionList
 695:lp_solve_5.5/lp_simplex.c ****     if((colnr == 0) && (lp->rejectpivot[0] > 0)) {
 5660               		.loc 2 695 0
 5661 2430 8F81      		ldd r24,Y+7
 5662 2432 9885      		ldd r25,Y+8
 5663 2434 892B      		or r24,r25
 5664 2436 01F0      		breq .+2
 5665 2438 00C0      		rjmp .L205
 5666               		.loc 2 695 0 is_stmt 0 discriminator 1
 5667 243a 8EA9      		ldd r24,Y+54
 5668 243c 9FA9      		ldd r25,Y+55
 5669 243e 8C52      		subi r24,44
 5670 2440 9D4F      		sbci r25,-3
 5671 2442 FC01      		movw r30,r24
 5672 2444 8081      		ld r24,Z
 5673 2446 9181      		ldd r25,Z+1
 5674 2448 DC01      		movw r26,r24
 5675 244a 8D91      		ld r24,X+
 5676 244c 9C91      		ld r25,X
 5677 244e 1816      		cp __zero_reg__,r24
 5678 2450 1906      		cpc __zero_reg__,r25
 5679 2452 04F0      		brlt .+2
 5680 2454 00C0      		rjmp .L205
 696:lp_solve_5.5/lp_simplex.c ****       lp->spx_status = UNBOUNDED;
 5681               		.loc 2 696 0 is_stmt 1
 5682 2456 8EA9      		ldd r24,Y+54
 5683 2458 9FA9      		ldd r25,Y+55
 5684 245a 8A5F      		subi r24,-6
 5685 245c 9D4F      		sbci r25,-3
 5686 245e 23E0      		ldi r18,lo8(3)
 5687 2460 30E0      		ldi r19,0
 5688 2462 FC01      		movw r30,r24
 5689 2464 3183      		std Z+1,r19
 5690 2466 2083      		st Z,r18
 697:lp_solve_5.5/lp_simplex.c ****       if((lp->spx_trace && (lp->bb_totalnodes == 0)) ||
 5691               		.loc 2 697 0
 5692 2468 8EA9      		ldd r24,Y+54
 5693 246a 9FA9      		ldd r25,Y+55
 5694 246c 8E5F      		subi r24,-2
 5695 246e 9D4F      		sbci r25,-3
 5696 2470 DC01      		movw r26,r24
 5697 2472 8C91      		ld r24,X
 5698 2474 8823      		tst r24
 5699 2476 01F0      		breq .L206
 5700               		.loc 2 697 0 is_stmt 0 discriminator 1
 5701 2478 8EA9      		ldd r24,Y+54
 5702 247a 9FA9      		ldd r25,Y+55
 5703 247c 8A5C      		subi r24,-54
 5704 247e 9C4F      		sbci r25,-4
 5705 2480 FC01      		movw r30,r24
 5706 2482 A080      		ld r10,Z
 5707 2484 DC01      		movw r26,r24
 5708 2486 1196      		adiw r26,1
 5709 2488 BC90      		ld r11,X
 5710 248a FC01      		movw r30,r24
 5711 248c C280      		ldd r12,Z+2
 5712 248e DC01      		movw r26,r24
 5713 2490 1396      		adiw r26,3
 5714 2492 DC90      		ld r13,X
 5715 2494 FC01      		movw r30,r24
 5716 2496 E480      		ldd r14,Z+4
 5717 2498 DC01      		movw r26,r24
 5718 249a 1596      		adiw r26,5
 5719 249c FC90      		ld r15,X
 5720 249e FC01      		movw r30,r24
 5721 24a0 0681      		ldd r16,Z+6
 5722 24a2 DC01      		movw r26,r24
 5723 24a4 1796      		adiw r26,7
 5724 24a6 1C91      		ld r17,X
 5725 24a8 2A2D      		mov r18,r10
 5726 24aa 3B2D      		mov r19,r11
 5727 24ac 4C2D      		mov r20,r12
 5728 24ae 5D2D      		mov r21,r13
 5729 24b0 6E2D      		mov r22,r14
 5730 24b2 7F2D      		mov r23,r15
 5731 24b4 802F      		mov r24,r16
 5732 24b6 912F      		mov r25,r17
 5733 24b8 A0E0      		ldi r26,0
 5734 24ba 0E94 0000 		call __cmpdi2_s8
 5735 24be 01F0      		breq .L207
 5736               	.L206:
 698:lp_solve_5.5/lp_simplex.c ****          (lp->bb_trace && (lp->bb_totalnodes > 0)))
 5737               		.loc 2 698 0 is_stmt 1 discriminator 3
 5738 24c0 8EA9      		ldd r24,Y+54
 5739 24c2 9FA9      		ldd r25,Y+55
 5740 24c4 8D5F      		subi r24,-3
 5741 24c6 9D4F      		sbci r25,-3
 5742 24c8 FC01      		movw r30,r24
 5743 24ca 8081      		ld r24,Z
 697:lp_solve_5.5/lp_simplex.c ****       if((lp->spx_trace && (lp->bb_totalnodes == 0)) ||
 5744               		.loc 2 697 0 discriminator 3
 5745 24cc 8823      		tst r24
 5746 24ce 01F0      		breq .L208
 5747               		.loc 2 698 0
 5748 24d0 8EA9      		ldd r24,Y+54
 5749 24d2 9FA9      		ldd r25,Y+55
 5750 24d4 8A5C      		subi r24,-54
 5751 24d6 9C4F      		sbci r25,-4
 5752 24d8 DC01      		movw r26,r24
 5753 24da AC90      		ld r10,X
 5754 24dc FC01      		movw r30,r24
 5755 24de B180      		ldd r11,Z+1
 5756 24e0 DC01      		movw r26,r24
 5757 24e2 1296      		adiw r26,2
 5758 24e4 CC90      		ld r12,X
 5759 24e6 FC01      		movw r30,r24
 5760 24e8 D380      		ldd r13,Z+3
 5761 24ea DC01      		movw r26,r24
 5762 24ec 1496      		adiw r26,4
 5763 24ee EC90      		ld r14,X
 5764 24f0 FC01      		movw r30,r24
 5765 24f2 F580      		ldd r15,Z+5
 5766 24f4 DC01      		movw r26,r24
 5767 24f6 1696      		adiw r26,6
 5768 24f8 0C91      		ld r16,X
 5769 24fa FC01      		movw r30,r24
 5770 24fc 1781      		ldd r17,Z+7
 5771 24fe 2A2D      		mov r18,r10
 5772 2500 3B2D      		mov r19,r11
 5773 2502 4C2D      		mov r20,r12
 5774 2504 5D2D      		mov r21,r13
 5775 2506 6E2D      		mov r22,r14
 5776 2508 7F2D      		mov r23,r15
 5777 250a 802F      		mov r24,r16
 5778 250c 912F      		mov r25,r17
 5779 250e A0E0      		ldi r26,0
 5780 2510 0E94 0000 		call __cmpdi2_s8
 5781 2514 01F0      		breq .L208
 5782 2516 04F0      		brlt .L208
 5783               	.L207:
 699:lp_solve_5.5/lp_simplex.c ****         report(lp, DETAILED, "The model is primal unbounded.\n");
 5784               		.loc 2 699 0
 5785 2518 80E0      		ldi r24,lo8(.LC13)
 5786 251a 90E0      		ldi r25,hi8(.LC13)
 5787 251c 892F      		mov r24,r25
 5788 251e 8F93      		push r24
 5789 2520 80E0      		ldi r24,lo8(.LC13)
 5790 2522 90E0      		ldi r25,hi8(.LC13)
 5791 2524 8F93      		push r24
 5792 2526 1F92      		push __zero_reg__
 5793 2528 85E0      		ldi r24,lo8(5)
 5794 252a 8F93      		push r24
 5795 252c 8FA9      		ldd r24,Y+55
 5796 252e 8F93      		push r24
 5797 2530 8EA9      		ldd r24,Y+54
 5798 2532 8F93      		push r24
 5799 2534 0E94 0000 		call report
 5800 2538 0F90      		pop __tmp_reg__
 5801 253a 0F90      		pop __tmp_reg__
 5802 253c 0F90      		pop __tmp_reg__
 5803 253e 0F90      		pop __tmp_reg__
 5804 2540 0F90      		pop __tmp_reg__
 5805 2542 0F90      		pop __tmp_reg__
 5806               	.L208:
 700:lp_solve_5.5/lp_simplex.c ****       colnr = lp->rejectpivot[1];
 5807               		.loc 2 700 0
 5808 2544 8EA9      		ldd r24,Y+54
 5809 2546 9FA9      		ldd r25,Y+55
 5810 2548 8C52      		subi r24,44
 5811 254a 9D4F      		sbci r25,-3
 5812 254c DC01      		movw r26,r24
 5813 254e 8D91      		ld r24,X+
 5814 2550 9C91      		ld r25,X
 5815 2552 FC01      		movw r30,r24
 5816 2554 8281      		ldd r24,Z+2
 5817 2556 9381      		ldd r25,Z+3
 5818 2558 9887      		std Y+8,r25
 5819 255a 8F83      		std Y+7,r24
 701:lp_solve_5.5/lp_simplex.c ****       rownr = 0;
 5820               		.loc 2 701 0
 5821 255c 1A86      		std Y+10,__zero_reg__
 5822 255e 1986      		std Y+9,__zero_reg__
 702:lp_solve_5.5/lp_simplex.c ****       lp->rejectpivot[0] = 0;
 5823               		.loc 2 702 0
 5824 2560 8EA9      		ldd r24,Y+54
 5825 2562 9FA9      		ldd r25,Y+55
 5826 2564 8C52      		subi r24,44
 5827 2566 9D4F      		sbci r25,-3
 5828 2568 DC01      		movw r26,r24
 5829 256a 8D91      		ld r24,X+
 5830 256c 9C91      		ld r25,X
 5831 256e FC01      		movw r30,r24
 5832 2570 1182      		std Z+1,__zero_reg__
 5833 2572 1082      		st Z,__zero_reg__
 703:lp_solve_5.5/lp_simplex.c ****       ok = FALSE;
 5834               		.loc 2 703 0
 5835 2574 188A      		std Y+16,__zero_reg__
 5836 2576 1F86      		std Y+15,__zero_reg__
 704:lp_solve_5.5/lp_simplex.c ****       break;
 5837               		.loc 2 704 0
 5838 2578 00C0      		rjmp .L196
 5839               	.L205:
 705:lp_solve_5.5/lp_simplex.c ****     }
 706:lp_solve_5.5/lp_simplex.c **** #endif
 707:lp_solve_5.5/lp_simplex.c **** 
 708:lp_solve_5.5/lp_simplex.c ****     /* Check if we found an entering variable (indicating that we are still dual infeasible) */
 709:lp_solve_5.5/lp_simplex.c ****     if(colnr > 0) {
 5840               		.loc 2 709 0
 5841 257a 8F81      		ldd r24,Y+7
 5842 257c 9885      		ldd r25,Y+8
 5843 257e 1816      		cp __zero_reg__,r24
 5844 2580 1906      		cpc __zero_reg__,r25
 5845 2582 04F0      		brlt .+2
 5846 2584 00C0      		rjmp .L209
 710:lp_solve_5.5/lp_simplex.c ****       changedphase = FALSE;
 5847               		.loc 2 710 0
 5848 2586 1A82      		std Y+2,__zero_reg__
 711:lp_solve_5.5/lp_simplex.c ****       fsolve(lp, colnr, pcol, NULL, lp->epsmachine, 1.0, TRUE);  /* Solve entering column for Pi */
 5849               		.loc 2 711 0
 5850 2588 8EA9      		ldd r24,Y+54
 5851 258a 9FA9      		ldd r25,Y+55
 5852 258c 8E5E      		subi r24,-18
 5853 258e 9C4F      		sbci r25,-4
 5854 2590 FC01      		movw r30,r24
 5855 2592 8081      		ld r24,Z
 5856 2594 9181      		ldd r25,Z+1
 5857 2596 A281      		ldd r26,Z+2
 5858 2598 B381      		ldd r27,Z+3
 5859 259a 4CA9      		ldd r20,Y+52
 5860 259c 5DA9      		ldd r21,Y+53
 5861 259e 6F81      		ldd r22,Y+7
 5862 25a0 7885      		ldd r23,Y+8
 5863 25a2 EEA9      		ldd r30,Y+54
 5864 25a4 FFA9      		ldd r31,Y+55
 5865 25a6 8824      		clr r8
 5866 25a8 8394      		inc r8
 5867 25aa 0F2E      		mov __tmp_reg__,r31
 5868 25ac A12C      		mov r10,__zero_reg__
 5869 25ae B12C      		mov r11,__zero_reg__
 5870 25b0 F0E8      		ldi r31,lo8(-128)
 5871 25b2 CF2E      		mov r12,r31
 5872 25b4 FFE3      		ldi r31,lo8(63)
 5873 25b6 DF2E      		mov r13,r31
 5874 25b8 F02D      		mov r31,__tmp_reg__
 5875 25ba 7C01      		movw r14,r24
 5876 25bc 8D01      		movw r16,r26
 5877 25be 20E0      		ldi r18,0
 5878 25c0 30E0      		ldi r19,0
 5879 25c2 CF01      		movw r24,r30
 5880 25c4 0E94 0000 		call fsolve
 712:lp_solve_5.5/lp_simplex.c **** 
 713:lp_solve_5.5/lp_simplex.c ****       /* Do special anti-degeneracy column selection, if specified */
 714:lp_solve_5.5/lp_simplex.c ****       if(is_anti_degen(lp, ANTIDEGEN_COLUMNCHECK) && !check_degeneracy(lp, pcol, NULL)) {
 5881               		.loc 2 714 0
 5882 25c8 8EA9      		ldd r24,Y+54
 5883 25ca 9FA9      		ldd r25,Y+55
 5884 25cc 62E0      		ldi r22,lo8(2)
 5885 25ce 70E0      		ldi r23,0
 5886 25d0 0E94 0000 		call is_anti_degen
 5887 25d4 8823      		tst r24
 5888 25d6 01F4      		brne .+2
 5889 25d8 00C0      		rjmp .L210
 5890               		.loc 2 714 0 is_stmt 0 discriminator 1
 5891 25da 2CA9      		ldd r18,Y+52
 5892 25dc 3DA9      		ldd r19,Y+53
 5893 25de 8EA9      		ldd r24,Y+54
 5894 25e0 9FA9      		ldd r25,Y+55
 5895 25e2 40E0      		ldi r20,0
 5896 25e4 50E0      		ldi r21,0
 5897 25e6 B901      		movw r22,r18
 5898 25e8 0E94 0000 		call check_degeneracy
 5899 25ec 8823      		tst r24
 5900 25ee 01F0      		breq .+2
 5901 25f0 00C0      		rjmp .L210
 715:lp_solve_5.5/lp_simplex.c ****         if(lp->rejectpivot[0] < DEF_MAXPIVOTRETRY/3) {
 5902               		.loc 2 715 0 is_stmt 1
 5903 25f2 8EA9      		ldd r24,Y+54
 5904 25f4 9FA9      		ldd r25,Y+55
 5905 25f6 8C52      		subi r24,44
 5906 25f8 9D4F      		sbci r25,-3
 5907 25fa DC01      		movw r26,r24
 5908 25fc 8D91      		ld r24,X+
 5909 25fe 9C91      		ld r25,X
 5910 2600 FC01      		movw r30,r24
 5911 2602 8081      		ld r24,Z
 5912 2604 9181      		ldd r25,Z+1
 5913 2606 0397      		sbiw r24,3
 5914 2608 04F0      		brlt .+2
 5915 260a 00C0      		rjmp .L211
 716:lp_solve_5.5/lp_simplex.c ****           i = ++lp->rejectpivot[0];
 5916               		.loc 2 716 0
 5917 260c 8EA9      		ldd r24,Y+54
 5918 260e 9FA9      		ldd r25,Y+55
 5919 2610 8C52      		subi r24,44
 5920 2612 9D4F      		sbci r25,-3
 5921 2614 DC01      		movw r26,r24
 5922 2616 8D91      		ld r24,X+
 5923 2618 9C91      		ld r25,X
 5924 261a FC01      		movw r30,r24
 5925 261c 2081      		ld r18,Z
 5926 261e 3181      		ldd r19,Z+1
 5927 2620 2F5F      		subi r18,-1
 5928 2622 3F4F      		sbci r19,-1
 5929 2624 DC01      		movw r26,r24
 5930 2626 2D93      		st X+,r18
 5931 2628 3C93      		st X,r19
 5932 262a FC01      		movw r30,r24
 5933 262c 8081      		ld r24,Z
 5934 262e 9181      		ldd r25,Z+1
 5935 2630 9E83      		std Y+6,r25
 5936 2632 8D83      		std Y+5,r24
 717:lp_solve_5.5/lp_simplex.c ****           lp->rejectpivot[i] = colnr;
 5937               		.loc 2 717 0
 5938 2634 8EA9      		ldd r24,Y+54
 5939 2636 9FA9      		ldd r25,Y+55
 5940 2638 8C52      		subi r24,44
 5941 263a 9D4F      		sbci r25,-3
 5942 263c DC01      		movw r26,r24
 5943 263e 2D91      		ld r18,X+
 5944 2640 3C91      		ld r19,X
 5945 2642 8D81      		ldd r24,Y+5
 5946 2644 9E81      		ldd r25,Y+6
 5947 2646 880F      		lsl r24
 5948 2648 991F      		rol r25
 5949 264a 820F      		add r24,r18
 5950 264c 931F      		adc r25,r19
 5951 264e 2F81      		ldd r18,Y+7
 5952 2650 3885      		ldd r19,Y+8
 5953 2652 FC01      		movw r30,r24
 5954 2654 3183      		std Z+1,r19
 5955 2656 2083      		st Z,r18
 718:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "Entering column %d found to be non-improving due to degeneracy.\n",
 5956               		.loc 2 718 0
 5957 2658 8885      		ldd r24,Y+8
 5958 265a 8F93      		push r24
 5959 265c 8F81      		ldd r24,Y+7
 5960 265e 8F93      		push r24
 5961 2660 80E0      		ldi r24,lo8(.LC14)
 5962 2662 90E0      		ldi r25,hi8(.LC14)
 5963 2664 892F      		mov r24,r25
 5964 2666 8F93      		push r24
 5965 2668 80E0      		ldi r24,lo8(.LC14)
 5966 266a 90E0      		ldi r25,hi8(.LC14)
 5967 266c 8F93      		push r24
 5968 266e 1F92      		push __zero_reg__
 5969 2670 85E0      		ldi r24,lo8(5)
 5970 2672 8F93      		push r24
 5971 2674 8FA9      		ldd r24,Y+55
 5972 2676 8F93      		push r24
 5973 2678 8EA9      		ldd r24,Y+54
 5974 267a 8F93      		push r24
 5975 267c 0E94 0000 		call report
 5976 2680 4DB7      		in r20,__SP_L__
 5977 2682 5EB7      		in r21,__SP_H__
 5978 2684 485F      		subi r20,-8
 5979 2686 5F4F      		sbci r21,-1
 5980 2688 0FB6      		in __tmp_reg__,__SREG__
 5981 268a F894      		cli
 5982 268c DEBF      		out __SP_H__,r29
 5983 268e 0FBE      		out __SREG__,__tmp_reg__
 5984 2690 CDBF      		out __SP_L__,r28
 719:lp_solve_5.5/lp_simplex.c ****                      colnr);
 720:lp_solve_5.5/lp_simplex.c ****           minit = ITERATE_MINORRETRY;
 5985               		.loc 2 720 0
 5986 2692 82E0      		ldi r24,lo8(2)
 5987 2694 8B83      		std Y+3,r24
 721:lp_solve_5.5/lp_simplex.c ****           goto RetryCol;
 5988               		.loc 2 721 0
 5989 2696 00C0      		rjmp .L195
 5990               	.L211:
 722:lp_solve_5.5/lp_simplex.c ****         }
 723:lp_solve_5.5/lp_simplex.c ****         else {
 724:lp_solve_5.5/lp_simplex.c ****           lp->rejectpivot[0] = 0;
 5991               		.loc 2 724 0
 5992 2698 8EA9      		ldd r24,Y+54
 5993 269a 9FA9      		ldd r25,Y+55
 5994 269c 8C52      		subi r24,44
 5995 269e 9D4F      		sbci r25,-3
 5996 26a0 DC01      		movw r26,r24
 5997 26a2 8D91      		ld r24,X+
 5998 26a4 9C91      		ld r25,X
 5999 26a6 FC01      		movw r30,r24
 6000 26a8 1182      		std Z+1,__zero_reg__
 6001 26aa 1082      		st Z,__zero_reg__
 725:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "Gave up trying to find a strictly improving entering column.\n");
 6002               		.loc 2 725 0
 6003 26ac 80E0      		ldi r24,lo8(.LC15)
 6004 26ae 90E0      		ldi r25,hi8(.LC15)
 6005 26b0 892F      		mov r24,r25
 6006 26b2 8F93      		push r24
 6007 26b4 80E0      		ldi r24,lo8(.LC15)
 6008 26b6 90E0      		ldi r25,hi8(.LC15)
 6009 26b8 8F93      		push r24
 6010 26ba 1F92      		push __zero_reg__
 6011 26bc 85E0      		ldi r24,lo8(5)
 6012 26be 8F93      		push r24
 6013 26c0 8FA9      		ldd r24,Y+55
 6014 26c2 8F93      		push r24
 6015 26c4 8EA9      		ldd r24,Y+54
 6016 26c6 8F93      		push r24
 6017 26c8 0E94 0000 		call report
 6018 26cc 0F90      		pop __tmp_reg__
 6019 26ce 0F90      		pop __tmp_reg__
 6020 26d0 0F90      		pop __tmp_reg__
 6021 26d2 0F90      		pop __tmp_reg__
 6022 26d4 0F90      		pop __tmp_reg__
 6023 26d6 0F90      		pop __tmp_reg__
 6024               	.L210:
 726:lp_solve_5.5/lp_simplex.c ****         }
 727:lp_solve_5.5/lp_simplex.c ****       }
 728:lp_solve_5.5/lp_simplex.c **** 
 729:lp_solve_5.5/lp_simplex.c ****       /* Find the leaving variable that gives the most stringent bound on the entering variable */
 730:lp_solve_5.5/lp_simplex.c ****       theta = drow[colnr];
 6025               		.loc 2 730 0
 6026 26d8 8F81      		ldd r24,Y+7
 6027 26da 9885      		ldd r25,Y+8
 6028 26dc 880F      		lsl r24
 6029 26de 991F      		rol r25
 6030 26e0 880F      		lsl r24
 6031 26e2 991F      		rol r25
 6032 26e4 2989      		ldd r18,Y+17
 6033 26e6 3A89      		ldd r19,Y+18
 6034 26e8 820F      		add r24,r18
 6035 26ea 931F      		adc r25,r19
 6036 26ec FC01      		movw r30,r24
 6037 26ee 8081      		ld r24,Z
 6038 26f0 9181      		ldd r25,Z+1
 6039 26f2 A281      		ldd r26,Z+2
 6040 26f4 B381      		ldd r27,Z+3
 6041 26f6 8EA3      		std Y+38,r24
 6042 26f8 9FA3      		std Y+39,r25
 6043 26fa A8A7      		std Y+40,r26
 6044 26fc B9A7      		std Y+41,r27
 731:lp_solve_5.5/lp_simplex.c ****       rownr = rowprim(lp, colnr, &theta, pcol, workINT, forceoutEQ, &cviolated);
 6045               		.loc 2 731 0
 6046 26fe 1BA1      		ldd r17,Y+35
 6047 2700 2CA9      		ldd r18,Y+52
 6048 2702 3DA9      		ldd r19,Y+53
 6049 2704 DE01      		movw r26,r28
 6050 2706 9E96      		adiw r26,46
 6051 2708 EE89      		ldd r30,Y+22
 6052 270a FF89      		ldd r31,Y+23
 6053 270c AE01      		movw r20,r28
 6054 270e 4A5D      		subi r20,-38
 6055 2710 5F4F      		sbci r21,-1
 6056 2712 6F81      		ldd r22,Y+7
 6057 2714 7885      		ldd r23,Y+8
 6058 2716 8EA9      		ldd r24,Y+54
 6059 2718 9FA9      		ldd r25,Y+55
 6060 271a 6D01      		movw r12,r26
 6061 271c E12E      		mov r14,r17
 6062 271e 8F01      		movw r16,r30
 6063 2720 0E94 0000 		call rowprim
 6064 2724 9A87      		std Y+10,r25
 6065 2726 8987      		std Y+9,r24
 732:lp_solve_5.5/lp_simplex.c **** 
 733:lp_solve_5.5/lp_simplex.c **** #ifdef AcceptMarginalAccuracy
 734:lp_solve_5.5/lp_simplex.c ****       /* Check for marginal accuracy */
 735:lp_solve_5.5/lp_simplex.c ****       if((rownr > 0) && (xviolated+cviolated < lp->epspivot)) {
 6066               		.loc 2 735 0
 6067 2728 8985      		ldd r24,Y+9
 6068 272a 9A85      		ldd r25,Y+10
 6069 272c 1816      		cp __zero_reg__,r24
 6070 272e 1906      		cpc __zero_reg__,r25
 6071 2730 04F0      		brlt .+2
 6072 2732 00C0      		rjmp .L212
 6073               		.loc 2 735 0 is_stmt 0 discriminator 1
 6074 2734 8AA5      		ldd r24,Y+42
 6075 2736 9BA5      		ldd r25,Y+43
 6076 2738 ACA5      		ldd r26,Y+44
 6077 273a BDA5      		ldd r27,Y+45
 6078 273c 2EA5      		ldd r18,Y+46
 6079 273e 3FA5      		ldd r19,Y+47
 6080 2740 48A9      		ldd r20,Y+48
 6081 2742 59A9      		ldd r21,Y+49
 6082 2744 BC01      		movw r22,r24
 6083 2746 CD01      		movw r24,r26
 6084 2748 0E94 0000 		call __addsf3
 6085 274c DC01      		movw r26,r24
 6086 274e CB01      		movw r24,r22
 6087 2750 7C01      		movw r14,r24
 6088 2752 8D01      		movw r16,r26
 6089 2754 8EA9      		ldd r24,Y+54
 6090 2756 9FA9      		ldd r25,Y+55
 6091 2758 8E5D      		subi r24,-34
 6092 275a 9C4F      		sbci r25,-4
 6093 275c FC01      		movw r30,r24
 6094 275e 8081      		ld r24,Z
 6095 2760 9181      		ldd r25,Z+1
 6096 2762 A281      		ldd r26,Z+2
 6097 2764 B381      		ldd r27,Z+3
 6098 2766 9C01      		movw r18,r24
 6099 2768 AD01      		movw r20,r26
 6100 276a C801      		movw r24,r16
 6101 276c B701      		movw r22,r14
 6102 276e 0E94 0000 		call __ltsf2
 6103 2772 8823      		tst r24
 6104 2774 04F0      		brlt .+2
 6105 2776 00C0      		rjmp .L212
 736:lp_solve_5.5/lp_simplex.c ****         if(lp->bb_trace || (lp->bb_totalnodes == 0))
 6106               		.loc 2 736 0 is_stmt 1
 6107 2778 8EA9      		ldd r24,Y+54
 6108 277a 9FA9      		ldd r25,Y+55
 6109 277c 8D5F      		subi r24,-3
 6110 277e 9D4F      		sbci r25,-3
 6111 2780 DC01      		movw r26,r24
 6112 2782 8C91      		ld r24,X
 6113 2784 8823      		tst r24
 6114 2786 01F4      		brne .L214
 6115               		.loc 2 736 0 is_stmt 0 discriminator 1
 6116 2788 8EA9      		ldd r24,Y+54
 6117 278a 9FA9      		ldd r25,Y+55
 6118 278c 8A5C      		subi r24,-54
 6119 278e 9C4F      		sbci r25,-4
 6120 2790 FC01      		movw r30,r24
 6121 2792 A080      		ld r10,Z
 6122 2794 DC01      		movw r26,r24
 6123 2796 1196      		adiw r26,1
 6124 2798 BC90      		ld r11,X
 6125 279a FC01      		movw r30,r24
 6126 279c C280      		ldd r12,Z+2
 6127 279e DC01      		movw r26,r24
 6128 27a0 1396      		adiw r26,3
 6129 27a2 DC90      		ld r13,X
 6130 27a4 FC01      		movw r30,r24
 6131 27a6 E480      		ldd r14,Z+4
 6132 27a8 DC01      		movw r26,r24
 6133 27aa 1596      		adiw r26,5
 6134 27ac FC90      		ld r15,X
 6135 27ae FC01      		movw r30,r24
 6136 27b0 0681      		ldd r16,Z+6
 6137 27b2 DC01      		movw r26,r24
 6138 27b4 1796      		adiw r26,7
 6139 27b6 1C91      		ld r17,X
 6140 27b8 2A2D      		mov r18,r10
 6141 27ba 3B2D      		mov r19,r11
 6142 27bc 4C2D      		mov r20,r12
 6143 27be 5D2D      		mov r21,r13
 6144 27c0 6E2D      		mov r22,r14
 6145 27c2 7F2D      		mov r23,r15
 6146 27c4 802F      		mov r24,r16
 6147 27c6 912F      		mov r25,r17
 6148 27c8 A0E0      		ldi r26,0
 6149 27ca 0E94 0000 		call __cmpdi2_s8
 6150 27ce 01F4      		brne .L215
 6151               	.L214:
 737:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "primloop: Assuming convergence with reduced accuracy %g.\n",
 738:lp_solve_5.5/lp_simplex.c ****                                MAX(xviolated, cviolated));
 6152               		.loc 2 738 0 is_stmt 1
 6153 27d0 8AA5      		ldd r24,Y+42
 6154 27d2 9BA5      		ldd r25,Y+43
 6155 27d4 ACA5      		ldd r26,Y+44
 6156 27d6 BDA5      		ldd r27,Y+45
 6157 27d8 2EA5      		ldd r18,Y+46
 6158 27da 3FA5      		ldd r19,Y+47
 6159 27dc 48A9      		ldd r20,Y+48
 6160 27de 59A9      		ldd r21,Y+49
 737:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "primloop: Assuming convergence with reduced accuracy %g.\n",
 6161               		.loc 2 737 0
 6162 27e0 BC01      		movw r22,r24
 6163 27e2 CD01      		movw r24,r26
 6164 27e4 0E94 0000 		call __gtsf2
 6165 27e8 1816      		cp __zero_reg__,r24
 6166 27ea 04F4      		brge .L264
 737:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "primloop: Assuming convergence with reduced accuracy %g.\n",
 6167               		.loc 2 737 0 is_stmt 0 discriminator 1
 6168 27ec 8AA5      		ldd r24,Y+42
 6169 27ee 9BA5      		ldd r25,Y+43
 6170 27f0 ACA5      		ldd r26,Y+44
 6171 27f2 BDA5      		ldd r27,Y+45
 6172 27f4 00C0      		rjmp .L218
 6173               	.L264:
 737:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "primloop: Assuming convergence with reduced accuracy %g.\n",
 6174               		.loc 2 737 0 discriminator 2
 6175 27f6 8EA5      		ldd r24,Y+46
 6176 27f8 9FA5      		ldd r25,Y+47
 6177 27fa A8A9      		ldd r26,Y+48
 6178 27fc B9A9      		ldd r27,Y+49
 6179               	.L218:
 737:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "primloop: Assuming convergence with reduced accuracy %g.\n",
 6180               		.loc 2 737 0 discriminator 4
 6181 27fe 2B2F      		mov r18,r27
 6182 2800 2F93      		push r18
 6183 2802 2A2F      		mov r18,r26
 6184 2804 2F93      		push r18
 6185 2806 292F      		mov r18,r25
 6186 2808 2F93      		push r18
 6187 280a 8F93      		push r24
 6188 280c 80E0      		ldi r24,lo8(.LC16)
 6189 280e 90E0      		ldi r25,hi8(.LC16)
 6190 2810 892F      		mov r24,r25
 6191 2812 8F93      		push r24
 6192 2814 80E0      		ldi r24,lo8(.LC16)
 6193 2816 90E0      		ldi r25,hi8(.LC16)
 6194 2818 8F93      		push r24
 6195 281a 1F92      		push __zero_reg__
 6196 281c 85E0      		ldi r24,lo8(5)
 6197 281e 8F93      		push r24
 6198 2820 8FA9      		ldd r24,Y+55
 6199 2822 8F93      		push r24
 6200 2824 8EA9      		ldd r24,Y+54
 6201 2826 8F93      		push r24
 6202 2828 0E94 0000 		call report
 6203 282c EDB7      		in r30,__SP_L__
 6204 282e FEB7      		in r31,__SP_H__
 6205 2830 3A96      		adiw r30,10
 6206 2832 0FB6      		in __tmp_reg__,__SREG__
 6207 2834 F894      		cli
 6208 2836 DEBF      		out __SP_H__,r29
 6209 2838 0FBE      		out __SREG__,__tmp_reg__
 6210 283a CDBF      		out __SP_L__,r28
 6211               	.L215:
 739:lp_solve_5.5/lp_simplex.c ****         rownr = 0;
 6212               		.loc 2 739 0 is_stmt 1
 6213 283c 1A86      		std Y+10,__zero_reg__
 6214 283e 1986      		std Y+9,__zero_reg__
 740:lp_solve_5.5/lp_simplex.c ****         colnr = 0;
 6215               		.loc 2 740 0
 6216 2840 1886      		std Y+8,__zero_reg__
 6217 2842 1F82      		std Y+7,__zero_reg__
 741:lp_solve_5.5/lp_simplex.c ****         goto Optimality;
 6218               		.loc 2 741 0
 6219 2844 00C0      		rjmp .L209
 6220               	.L212:
 742:lp_solve_5.5/lp_simplex.c ****       }
 743:lp_solve_5.5/lp_simplex.c ****       else
 744:lp_solve_5.5/lp_simplex.c **** #endif
 745:lp_solve_5.5/lp_simplex.c **** 
 746:lp_solve_5.5/lp_simplex.c ****       /* See if we can do a straight artificial<->slack replacement (when "colnr" is a slack) */
 747:lp_solve_5.5/lp_simplex.c ****       if((lp->P1extraDim != 0) && (rownr == 0) && (colnr <= lp->rows))
 6221               		.loc 2 747 0
 6222 2846 8EA9      		ldd r24,Y+54
 6223 2848 9FA9      		ldd r25,Y+55
 6224 284a 8051      		subi r24,16
 6225 284c 9D4F      		sbci r25,-3
 6226 284e DC01      		movw r26,r24
 6227 2850 8D91      		ld r24,X+
 6228 2852 9C91      		ld r25,X
 6229 2854 892B      		or r24,r25
 6230 2856 01F0      		breq .L219
 6231               		.loc 2 747 0 is_stmt 0 discriminator 1
 6232 2858 8985      		ldd r24,Y+9
 6233 285a 9A85      		ldd r25,Y+10
 6234 285c 892B      		or r24,r25
 6235 285e 01F4      		brne .L219
 6236               		.loc 2 747 0 discriminator 2
 6237 2860 8EA9      		ldd r24,Y+54
 6238 2862 9FA9      		ldd r25,Y+55
 6239 2864 8651      		subi r24,22
 6240 2866 9E4F      		sbci r25,-2
 6241 2868 FC01      		movw r30,r24
 6242 286a 2081      		ld r18,Z
 6243 286c 3181      		ldd r19,Z+1
 6244 286e 8F81      		ldd r24,Y+7
 6245 2870 9885      		ldd r25,Y+8
 6246 2872 2817      		cp r18,r24
 6247 2874 3907      		cpc r19,r25
 6248 2876 04F0      		brlt .L219
 748:lp_solve_5.5/lp_simplex.c ****         rownr = findAnti_artificial(lp, colnr);
 6249               		.loc 2 748 0 is_stmt 1
 6250 2878 2F81      		ldd r18,Y+7
 6251 287a 3885      		ldd r19,Y+8
 6252 287c 8EA9      		ldd r24,Y+54
 6253 287e 9FA9      		ldd r25,Y+55
 6254 2880 B901      		movw r22,r18
 6255 2882 0E94 0000 		call findAnti_artificial
 6256 2886 9A87      		std Y+10,r25
 6257 2888 8987      		std Y+9,r24
 6258               	.L219:
 749:lp_solve_5.5/lp_simplex.c **** 
 750:lp_solve_5.5/lp_simplex.c ****       if(rownr > 0) {
 6259               		.loc 2 750 0
 6260 288a 8985      		ldd r24,Y+9
 6261 288c 9A85      		ldd r25,Y+10
 6262 288e 1816      		cp __zero_reg__,r24
 6263 2890 1906      		cpc __zero_reg__,r25
 6264 2892 04F0      		brlt .+2
 6265 2894 00C0      		rjmp .L220
 751:lp_solve_5.5/lp_simplex.c ****         pendingunbounded = FALSE;
 6266               		.loc 2 751 0
 6267 2896 1C82      		std Y+4,__zero_reg__
 752:lp_solve_5.5/lp_simplex.c ****         lp->rejectpivot[0] = 0;
 6268               		.loc 2 752 0
 6269 2898 8EA9      		ldd r24,Y+54
 6270 289a 9FA9      		ldd r25,Y+55
 6271 289c 8C52      		subi r24,44
 6272 289e 9D4F      		sbci r25,-3
 6273 28a0 DC01      		movw r26,r24
 6274 28a2 8D91      		ld r24,X+
 6275 28a4 9C91      		ld r25,X
 6276 28a6 FC01      		movw r30,r24
 6277 28a8 1182      		std Z+1,__zero_reg__
 6278 28aa 1082      		st Z,__zero_reg__
 753:lp_solve_5.5/lp_simplex.c ****         set_action(&lp->spx_action, ACTION_ITERATE);
 6279               		.loc 2 753 0
 6280 28ac 8EA9      		ldd r24,Y+54
 6281 28ae 9FA9      		ldd r25,Y+55
 6282 28b0 8E50      		subi r24,14
 6283 28b2 9D4F      		sbci r25,-3
 6284 28b4 60E4      		ldi r22,lo8(64)
 6285 28b6 70E0      		ldi r23,0
 6286 28b8 0E94 0000 		call set_action
 754:lp_solve_5.5/lp_simplex.c ****         if(!lp->obj_in_basis)  /* We must manually copy the reduced cost for RHS update */
 6287               		.loc 2 754 0
 6288 28bc 8EA9      		ldd r24,Y+54
 6289 28be 9FA9      		ldd r25,Y+55
 6290 28c0 8B5F      		subi r24,-5
 6291 28c2 9D4F      		sbci r25,-3
 6292 28c4 DC01      		movw r26,r24
 6293 28c6 8C91      		ld r24,X
 6294 28c8 8823      		tst r24
 6295 28ca 01F0      		breq .+2
 6296 28cc 00C0      		rjmp .L221
 755:lp_solve_5.5/lp_simplex.c ****           pcol[0] = my_chsign(!lp->is_lower[colnr], drow[colnr]);
 6297               		.loc 2 755 0
 6298 28ce 0CA9      		ldd r16,Y+52
 6299 28d0 1DA9      		ldd r17,Y+53
 6300 28d2 8EA9      		ldd r24,Y+54
 6301 28d4 9FA9      		ldd r25,Y+55
 6302 28d6 8E52      		subi r24,46
 6303 28d8 9D4F      		sbci r25,-3
 6304 28da FC01      		movw r30,r24
 6305 28dc 2081      		ld r18,Z
 6306 28de 3181      		ldd r19,Z+1
 6307 28e0 8F81      		ldd r24,Y+7
 6308 28e2 9885      		ldd r25,Y+8
 6309 28e4 820F      		add r24,r18
 6310 28e6 931F      		adc r25,r19
 6311 28e8 DC01      		movw r26,r24
 6312 28ea 8C91      		ld r24,X
 6313 28ec 8823      		tst r24
 6314 28ee 01F4      		brne .L222
 6315               		.loc 2 755 0 is_stmt 0 discriminator 1
 6316 28f0 8F81      		ldd r24,Y+7
 6317 28f2 9885      		ldd r25,Y+8
 6318 28f4 880F      		lsl r24
 6319 28f6 991F      		rol r25
 6320 28f8 880F      		lsl r24
 6321 28fa 991F      		rol r25
 6322 28fc 2989      		ldd r18,Y+17
 6323 28fe 3A89      		ldd r19,Y+18
 6324 2900 820F      		add r24,r18
 6325 2902 931F      		adc r25,r19
 6326 2904 FC01      		movw r30,r24
 6327 2906 8081      		ld r24,Z
 6328 2908 9181      		ldd r25,Z+1
 6329 290a A281      		ldd r26,Z+2
 6330 290c B381      		ldd r27,Z+3
 6331 290e 20E0      		ldi r18,0
 6332 2910 30E0      		ldi r19,0
 6333 2912 A901      		movw r20,r18
 6334 2914 BC01      		movw r22,r24
 6335 2916 CD01      		movw r24,r26
 6336 2918 0E94 0000 		call __nesf2
 6337 291c 8823      		tst r24
 6338 291e 01F0      		breq .L222
 6339               		.loc 2 755 0 discriminator 3
 6340 2920 8F81      		ldd r24,Y+7
 6341 2922 9885      		ldd r25,Y+8
 6342 2924 880F      		lsl r24
 6343 2926 991F      		rol r25
 6344 2928 880F      		lsl r24
 6345 292a 991F      		rol r25
 6346 292c 2989      		ldd r18,Y+17
 6347 292e 3A89      		ldd r19,Y+18
 6348 2930 820F      		add r24,r18
 6349 2932 931F      		adc r25,r19
 6350 2934 FC01      		movw r30,r24
 6351 2936 8081      		ld r24,Z
 6352 2938 9181      		ldd r25,Z+1
 6353 293a A281      		ldd r26,Z+2
 6354 293c B381      		ldd r27,Z+3
 6355 293e B058      		subi r27,0x80
 6356 2940 00C0      		rjmp .L224
 6357               	.L222:
 6358               		.loc 2 755 0 discriminator 4
 6359 2942 8F81      		ldd r24,Y+7
 6360 2944 9885      		ldd r25,Y+8
 6361 2946 880F      		lsl r24
 6362 2948 991F      		rol r25
 6363 294a 880F      		lsl r24
 6364 294c 991F      		rol r25
 6365 294e 2989      		ldd r18,Y+17
 6366 2950 3A89      		ldd r19,Y+18
 6367 2952 820F      		add r24,r18
 6368 2954 931F      		adc r25,r19
 6369 2956 FC01      		movw r30,r24
 6370 2958 8081      		ld r24,Z
 6371 295a 9181      		ldd r25,Z+1
 6372 295c A281      		ldd r26,Z+2
 6373 295e B381      		ldd r27,Z+3
 6374               	.L224:
 6375               		.loc 2 755 0 discriminator 6
 6376 2960 F801      		movw r30,r16
 6377 2962 8083      		st Z,r24
 6378 2964 9183      		std Z+1,r25
 6379 2966 A283      		std Z+2,r26
 6380 2968 B383      		std Z+3,r27
 6381               	.L221:
 756:lp_solve_5.5/lp_simplex.c ****         lp->bfp_prepareupdate(lp, rownr, colnr, pcol);
 6382               		.loc 2 756 0 is_stmt 1
 6383 296a 8EA9      		ldd r24,Y+54
 6384 296c 9FA9      		ldd r25,Y+55
 6385 296e 8655      		subi r24,86
 6386 2970 9C4F      		sbci r25,-4
 6387 2972 DC01      		movw r26,r24
 6388 2974 ED91      		ld r30,X+
 6389 2976 FC91      		ld r31,X
 6390 2978 2CA9      		ldd r18,Y+52
 6391 297a 3DA9      		ldd r19,Y+53
 6392 297c 4F81      		ldd r20,Y+7
 6393 297e 5885      		ldd r21,Y+8
 6394 2980 6985      		ldd r22,Y+9
 6395 2982 7A85      		ldd r23,Y+10
 6396 2984 8EA9      		ldd r24,Y+54
 6397 2986 9FA9      		ldd r25,Y+55
 6398 2988 0995      		icall
 6399 298a 00C0      		rjmp .L228
 6400               	.L220:
 757:lp_solve_5.5/lp_simplex.c ****       }
 758:lp_solve_5.5/lp_simplex.c **** 
 759:lp_solve_5.5/lp_simplex.c ****       /* We may be unbounded... */
 760:lp_solve_5.5/lp_simplex.c ****       else {
 761:lp_solve_5.5/lp_simplex.c ****         /* First make sure that we are not suffering from precision loss */
 762:lp_solve_5.5/lp_simplex.c **** #ifdef primal_UseRejectionList
 763:lp_solve_5.5/lp_simplex.c ****         if(lp->rejectpivot[0] < DEF_MAXPIVOTRETRY) {
 6401               		.loc 2 763 0
 6402 298c 8EA9      		ldd r24,Y+54
 6403 298e 9FA9      		ldd r25,Y+55
 6404 2990 8C52      		subi r24,44
 6405 2992 9D4F      		sbci r25,-3
 6406 2994 FC01      		movw r30,r24
 6407 2996 8081      		ld r24,Z
 6408 2998 9181      		ldd r25,Z+1
 6409 299a DC01      		movw r26,r24
 6410 299c 8D91      		ld r24,X+
 6411 299e 9C91      		ld r25,X
 6412 29a0 0A97      		sbiw r24,10
 6413 29a2 04F0      		brlt .+2
 6414 29a4 00C0      		rjmp .L226
 764:lp_solve_5.5/lp_simplex.c ****           lp->spx_status = RUNNING;
 6415               		.loc 2 764 0
 6416 29a6 8EA9      		ldd r24,Y+54
 6417 29a8 9FA9      		ldd r25,Y+55
 6418 29aa 8A5F      		subi r24,-6
 6419 29ac 9D4F      		sbci r25,-3
 6420 29ae 28E0      		ldi r18,lo8(8)
 6421 29b0 30E0      		ldi r19,0
 6422 29b2 FC01      		movw r30,r24
 6423 29b4 3183      		std Z+1,r19
 6424 29b6 2083      		st Z,r18
 765:lp_solve_5.5/lp_simplex.c ****           lp->rejectpivot[0]++;
 6425               		.loc 2 765 0
 6426 29b8 8EA9      		ldd r24,Y+54
 6427 29ba 9FA9      		ldd r25,Y+55
 6428 29bc 8C52      		subi r24,44
 6429 29be 9D4F      		sbci r25,-3
 6430 29c0 DC01      		movw r26,r24
 6431 29c2 8D91      		ld r24,X+
 6432 29c4 9C91      		ld r25,X
 6433 29c6 FC01      		movw r30,r24
 6434 29c8 2081      		ld r18,Z
 6435 29ca 3181      		ldd r19,Z+1
 6436 29cc 2F5F      		subi r18,-1
 6437 29ce 3F4F      		sbci r19,-1
 6438 29d0 DC01      		movw r26,r24
 6439 29d2 2D93      		st X+,r18
 6440 29d4 3C93      		st X,r19
 766:lp_solve_5.5/lp_simplex.c ****           lp->rejectpivot[lp->rejectpivot[0]] = colnr;
 6441               		.loc 2 766 0
 6442 29d6 8EA9      		ldd r24,Y+54
 6443 29d8 9FA9      		ldd r25,Y+55
 6444 29da 8C52      		subi r24,44
 6445 29dc 9D4F      		sbci r25,-3
 6446 29de FC01      		movw r30,r24
 6447 29e0 2081      		ld r18,Z
 6448 29e2 3181      		ldd r19,Z+1
 6449 29e4 8EA9      		ldd r24,Y+54
 6450 29e6 9FA9      		ldd r25,Y+55
 6451 29e8 8C52      		subi r24,44
 6452 29ea 9D4F      		sbci r25,-3
 6453 29ec DC01      		movw r26,r24
 6454 29ee 8D91      		ld r24,X+
 6455 29f0 9C91      		ld r25,X
 6456 29f2 FC01      		movw r30,r24
 6457 29f4 8081      		ld r24,Z
 6458 29f6 9181      		ldd r25,Z+1
 6459 29f8 880F      		lsl r24
 6460 29fa 991F      		rol r25
 6461 29fc 820F      		add r24,r18
 6462 29fe 931F      		adc r25,r19
 6463 2a00 2F81      		ldd r18,Y+7
 6464 2a02 3885      		ldd r19,Y+8
 6465 2a04 DC01      		movw r26,r24
 6466 2a06 2D93      		st X+,r18
 6467 2a08 3C93      		st X,r19
 767:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "...trying to recover via another pivot column.\n");
 6468               		.loc 2 767 0
 6469 2a0a 80E0      		ldi r24,lo8(.LC17)
 6470 2a0c 90E0      		ldi r25,hi8(.LC17)
 6471 2a0e 892F      		mov r24,r25
 6472 2a10 8F93      		push r24
 6473 2a12 80E0      		ldi r24,lo8(.LC17)
 6474 2a14 90E0      		ldi r25,hi8(.LC17)
 6475 2a16 8F93      		push r24
 6476 2a18 1F92      		push __zero_reg__
 6477 2a1a 85E0      		ldi r24,lo8(5)
 6478 2a1c 8F93      		push r24
 6479 2a1e 8FA9      		ldd r24,Y+55
 6480 2a20 8F93      		push r24
 6481 2a22 8EA9      		ldd r24,Y+54
 6482 2a24 8F93      		push r24
 6483 2a26 0E94 0000 		call report
 6484 2a2a 0F90      		pop __tmp_reg__
 6485 2a2c 0F90      		pop __tmp_reg__
 6486 2a2e 0F90      		pop __tmp_reg__
 6487 2a30 0F90      		pop __tmp_reg__
 6488 2a32 0F90      		pop __tmp_reg__
 6489 2a34 0F90      		pop __tmp_reg__
 768:lp_solve_5.5/lp_simplex.c ****           minit = ITERATE_MINORRETRY;
 6490               		.loc 2 768 0
 6491 2a36 82E0      		ldi r24,lo8(2)
 6492 2a38 8B83      		std Y+3,r24
 769:lp_solve_5.5/lp_simplex.c ****           goto RetryCol;
 6493               		.loc 2 769 0
 6494 2a3a 00C0      		rjmp .L195
 6495               	.L226:
 770:lp_solve_5.5/lp_simplex.c ****         }
 771:lp_solve_5.5/lp_simplex.c ****         else
 772:lp_solve_5.5/lp_simplex.c **** #endif
 773:lp_solve_5.5/lp_simplex.c ****         /* Check that we are not having numerical problems */
 774:lp_solve_5.5/lp_simplex.c ****         if(!refactRecent(lp) && !pendingunbounded) {
 6496               		.loc 2 774 0
 6497 2a3c 8EA9      		ldd r24,Y+54
 6498 2a3e 9FA9      		ldd r25,Y+55
 6499 2a40 0E94 0000 		call refactRecent
 6500 2a44 8823      		tst r24
 6501 2a46 01F4      		brne .L227
 6502               		.loc 2 774 0 is_stmt 0 discriminator 1
 6503 2a48 8C81      		ldd r24,Y+4
 6504 2a4a 8823      		tst r24
 6505 2a4c 01F4      		brne .L227
 775:lp_solve_5.5/lp_simplex.c ****           bfpfinal = TRUE;
 6506               		.loc 2 775 0 is_stmt 1
 6507 2a4e 81E0      		ldi r24,lo8(1)
 6508 2a50 8983      		std Y+1,r24
 776:lp_solve_5.5/lp_simplex.c ****           pendingunbounded = TRUE;
 6509               		.loc 2 776 0
 6510 2a52 81E0      		ldi r24,lo8(1)
 6511 2a54 8C83      		std Y+4,r24
 777:lp_solve_5.5/lp_simplex.c ****           set_action(&lp->spx_action, ACTION_REINVERT);
 6512               		.loc 2 777 0
 6513 2a56 8EA9      		ldd r24,Y+54
 6514 2a58 9FA9      		ldd r25,Y+55
 6515 2a5a 8E50      		subi r24,14
 6516 2a5c 9D4F      		sbci r25,-3
 6517 2a5e 60E1      		ldi r22,lo8(16)
 6518 2a60 70E0      		ldi r23,0
 6519 2a62 0E94 0000 		call set_action
 6520 2a66 00C0      		rjmp .L228
 6521               	.L227:
 778:lp_solve_5.5/lp_simplex.c ****         }
 779:lp_solve_5.5/lp_simplex.c **** 
 780:lp_solve_5.5/lp_simplex.c ****         /* Conclude that the model is unbounded */
 781:lp_solve_5.5/lp_simplex.c ****         else {
 782:lp_solve_5.5/lp_simplex.c ****           lp->spx_status = UNBOUNDED;
 6522               		.loc 2 782 0
 6523 2a68 8EA9      		ldd r24,Y+54
 6524 2a6a 9FA9      		ldd r25,Y+55
 6525 2a6c 8A5F      		subi r24,-6
 6526 2a6e 9D4F      		sbci r25,-3
 6527 2a70 23E0      		ldi r18,lo8(3)
 6528 2a72 30E0      		ldi r19,0
 6529 2a74 FC01      		movw r30,r24
 6530 2a76 3183      		std Z+1,r19
 6531 2a78 2083      		st Z,r18
 783:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "The model is primal unbounded.\n");
 6532               		.loc 2 783 0
 6533 2a7a 80E0      		ldi r24,lo8(.LC13)
 6534 2a7c 90E0      		ldi r25,hi8(.LC13)
 6535 2a7e 892F      		mov r24,r25
 6536 2a80 8F93      		push r24
 6537 2a82 80E0      		ldi r24,lo8(.LC13)
 6538 2a84 90E0      		ldi r25,hi8(.LC13)
 6539 2a86 8F93      		push r24
 6540 2a88 1F92      		push __zero_reg__
 6541 2a8a 85E0      		ldi r24,lo8(5)
 6542 2a8c 8F93      		push r24
 6543 2a8e 8FA9      		ldd r24,Y+55
 6544 2a90 8F93      		push r24
 6545 2a92 8EA9      		ldd r24,Y+54
 6546 2a94 8F93      		push r24
 6547 2a96 0E94 0000 		call report
 6548 2a9a 0F90      		pop __tmp_reg__
 6549 2a9c 0F90      		pop __tmp_reg__
 6550 2a9e 0F90      		pop __tmp_reg__
 6551 2aa0 0F90      		pop __tmp_reg__
 6552 2aa2 0F90      		pop __tmp_reg__
 6553 2aa4 0F90      		pop __tmp_reg__
 784:lp_solve_5.5/lp_simplex.c ****           break;
 6554               		.loc 2 784 0
 6555 2aa6 00C0      		rjmp .L196
 6556               	.L209:
 785:lp_solve_5.5/lp_simplex.c ****         }
 786:lp_solve_5.5/lp_simplex.c ****       }
 787:lp_solve_5.5/lp_simplex.c ****     }
 788:lp_solve_5.5/lp_simplex.c **** 
 789:lp_solve_5.5/lp_simplex.c ****     /* We handle optimality and phase 1 infeasibility ... */
 790:lp_solve_5.5/lp_simplex.c ****     else {
 791:lp_solve_5.5/lp_simplex.c **** 
 792:lp_solve_5.5/lp_simplex.c **** Optimality:
 793:lp_solve_5.5/lp_simplex.c ****       /* Handle possible transition from phase 1 to phase 2 */
 794:lp_solve_5.5/lp_simplex.c ****       if(!primalfeasible || isP1extra(lp)) {
 6557               		.loc 2 794 0
 6558 2aa8 88AD      		ldd r24,Y+56
 6559 2aaa 8823      		tst r24
 6560 2aac 01F0      		breq .L229
 6561               		.loc 2 794 0 is_stmt 0 discriminator 1
 6562 2aae 8EA9      		ldd r24,Y+54
 6563 2ab0 9FA9      		ldd r25,Y+55
 6564 2ab2 0E94 0000 		call isP1extra
 6565 2ab6 8823      		tst r24
 6566 2ab8 01F4      		brne .+2
 6567 2aba 00C0      		rjmp .L230
 6568               	.L229:
 795:lp_solve_5.5/lp_simplex.c **** 
 796:lp_solve_5.5/lp_simplex.c ****         if(feasiblePhase1(lp, epsvalue)) {
 6569               		.loc 2 796 0 is_stmt 1
 6570 2abc 888D      		ldd r24,Y+24
 6571 2abe 998D      		ldd r25,Y+25
 6572 2ac0 AA8D      		ldd r26,Y+26
 6573 2ac2 BB8D      		ldd r27,Y+27
 6574 2ac4 2EA9      		ldd r18,Y+54
 6575 2ac6 3FA9      		ldd r19,Y+55
 6576 2ac8 AC01      		movw r20,r24
 6577 2aca BD01      		movw r22,r26
 6578 2acc C901      		movw r24,r18
 6579 2ace 0E94 0000 		call feasiblePhase1
 6580 2ad2 8823      		tst r24
 6581 2ad4 01F4      		brne .+2
 6582 2ad6 00C0      		rjmp .L231
 797:lp_solve_5.5/lp_simplex.c ****           lp->spx_status = RUNNING;
 6583               		.loc 2 797 0
 6584 2ad8 8EA9      		ldd r24,Y+54
 6585 2ada 9FA9      		ldd r25,Y+55
 6586 2adc 8A5F      		subi r24,-6
 6587 2ade 9D4F      		sbci r25,-3
 6588 2ae0 28E0      		ldi r18,lo8(8)
 6589 2ae2 30E0      		ldi r19,0
 6590 2ae4 DC01      		movw r26,r24
 6591 2ae6 2D93      		st X+,r18
 6592 2ae8 3C93      		st X,r19
 798:lp_solve_5.5/lp_simplex.c ****           if(lp->bb_totalnodes == 0) {
 6593               		.loc 2 798 0
 6594 2aea 8EA9      		ldd r24,Y+54
 6595 2aec 9FA9      		ldd r25,Y+55
 6596 2aee 8A5C      		subi r24,-54
 6597 2af0 9C4F      		sbci r25,-4
 6598 2af2 FC01      		movw r30,r24
 6599 2af4 A080      		ld r10,Z
 6600 2af6 DC01      		movw r26,r24
 6601 2af8 1196      		adiw r26,1
 6602 2afa BC90      		ld r11,X
 6603 2afc FC01      		movw r30,r24
 6604 2afe C280      		ldd r12,Z+2
 6605 2b00 DC01      		movw r26,r24
 6606 2b02 1396      		adiw r26,3
 6607 2b04 DC90      		ld r13,X
 6608 2b06 FC01      		movw r30,r24
 6609 2b08 E480      		ldd r14,Z+4
 6610 2b0a DC01      		movw r26,r24
 6611 2b0c 1596      		adiw r26,5
 6612 2b0e FC90      		ld r15,X
 6613 2b10 FC01      		movw r30,r24
 6614 2b12 0681      		ldd r16,Z+6
 6615 2b14 DC01      		movw r26,r24
 6616 2b16 1796      		adiw r26,7
 6617 2b18 1C91      		ld r17,X
 6618 2b1a 2A2D      		mov r18,r10
 6619 2b1c 3B2D      		mov r19,r11
 6620 2b1e 4C2D      		mov r20,r12
 6621 2b20 5D2D      		mov r21,r13
 6622 2b22 6E2D      		mov r22,r14
 6623 2b24 7F2D      		mov r23,r15
 6624 2b26 802F      		mov r24,r16
 6625 2b28 912F      		mov r25,r17
 6626 2b2a A0E0      		ldi r26,0
 6627 2b2c 0E94 0000 		call __cmpdi2_s8
 6628 2b30 01F0      		breq .+2
 6629 2b32 00C0      		rjmp .L232
 799:lp_solve_5.5/lp_simplex.c ****             report(lp, NORMAL, "Found feasibility by primal simplex after  %10.0f iter.\n",
 800:lp_solve_5.5/lp_simplex.c ****                                 (double) get_total_iter(lp));
 6630               		.loc 2 800 0
 6631 2b34 8EA9      		ldd r24,Y+54
 6632 2b36 9FA9      		ldd r25,Y+55
 6633 2b38 0E94 0000 		call get_total_iter
 6634 2b3c A22E      		mov r10,r18
 6635 2b3e B32E      		mov r11,r19
 6636 2b40 C42E      		mov r12,r20
 6637 2b42 D52E      		mov r13,r21
 6638 2b44 E62E      		mov r14,r22
 6639 2b46 F72E      		mov r15,r23
 6640 2b48 082F      		mov r16,r24
 6641 2b4a 192F      		mov r17,r25
 799:lp_solve_5.5/lp_simplex.c ****             report(lp, NORMAL, "Found feasibility by primal simplex after  %10.0f iter.\n",
 6642               		.loc 2 799 0
 6643 2b4c 2A2D      		mov r18,r10
 6644 2b4e 3B2D      		mov r19,r11
 6645 2b50 4C2D      		mov r20,r12
 6646 2b52 5D2D      		mov r21,r13
 6647 2b54 6E2D      		mov r22,r14
 6648 2b56 7F2D      		mov r23,r15
 6649 2b58 802F      		mov r24,r16
 6650 2b5a 912F      		mov r25,r17
 6651 2b5c 0E94 0000 		call __floatdisf
 6652 2b60 DC01      		movw r26,r24
 6653 2b62 CB01      		movw r24,r22
 6654 2b64 2B2F      		mov r18,r27
 6655 2b66 2F93      		push r18
 6656 2b68 2A2F      		mov r18,r26
 6657 2b6a 2F93      		push r18
 6658 2b6c 292F      		mov r18,r25
 6659 2b6e 2F93      		push r18
 6660 2b70 8F93      		push r24
 6661 2b72 80E0      		ldi r24,lo8(.LC18)
 6662 2b74 90E0      		ldi r25,hi8(.LC18)
 6663 2b76 892F      		mov r24,r25
 6664 2b78 8F93      		push r24
 6665 2b7a 80E0      		ldi r24,lo8(.LC18)
 6666 2b7c 90E0      		ldi r25,hi8(.LC18)
 6667 2b7e 8F93      		push r24
 6668 2b80 1F92      		push __zero_reg__
 6669 2b82 84E0      		ldi r24,lo8(4)
 6670 2b84 8F93      		push r24
 6671 2b86 8FA9      		ldd r24,Y+55
 6672 2b88 8F93      		push r24
 6673 2b8a 8EA9      		ldd r24,Y+54
 6674 2b8c 8F93      		push r24
 6675 2b8e 0E94 0000 		call report
 6676 2b92 EDB7      		in r30,__SP_L__
 6677 2b94 FEB7      		in r31,__SP_H__
 6678 2b96 3A96      		adiw r30,10
 6679 2b98 0FB6      		in __tmp_reg__,__SREG__
 6680 2b9a F894      		cli
 6681 2b9c DEBF      		out __SP_H__,r29
 6682 2b9e 0FBE      		out __SREG__,__tmp_reg__
 6683 2ba0 CDBF      		out __SP_L__,r28
 801:lp_solve_5.5/lp_simplex.c ****             if((lp->usermessage != NULL) && (lp->msgmask & MSG_LPFEASIBLE))
 6684               		.loc 2 801 0
 6685 2ba2 8EA9      		ldd r24,Y+54
 6686 2ba4 9FA9      		ldd r25,Y+55
 6687 2ba6 9C5F      		subi r25,-4
 6688 2ba8 DC01      		movw r26,r24
 6689 2baa 8D91      		ld r24,X+
 6690 2bac 9C91      		ld r25,X
 6691 2bae 892B      		or r24,r25
 6692 2bb0 01F0      		breq .L232
 6693               		.loc 2 801 0 is_stmt 0 discriminator 1
 6694 2bb2 8EA9      		ldd r24,Y+54
 6695 2bb4 9FA9      		ldd r25,Y+55
 6696 2bb6 8E5F      		subi r24,-2
 6697 2bb8 9B4F      		sbci r25,-5
 6698 2bba FC01      		movw r30,r24
 6699 2bbc 8081      		ld r24,Z
 6700 2bbe 9181      		ldd r25,Z+1
 6701 2bc0 8870      		andi r24,8
 6702 2bc2 9927      		clr r25
 6703 2bc4 892B      		or r24,r25
 6704 2bc6 01F0      		breq .L232
 802:lp_solve_5.5/lp_simplex.c ****               lp->usermessage(lp, lp->msghandle, MSG_LPFEASIBLE);
 6705               		.loc 2 802 0 is_stmt 1
 6706 2bc8 8EA9      		ldd r24,Y+54
 6707 2bca 9FA9      		ldd r25,Y+55
 6708 2bcc 9C5F      		subi r25,-4
 6709 2bce DC01      		movw r26,r24
 6710 2bd0 2D91      		ld r18,X+
 6711 2bd2 3C91      		ld r19,X
 6712 2bd4 8EA9      		ldd r24,Y+54
 6713 2bd6 9FA9      		ldd r25,Y+55
 6714 2bd8 8C5F      		subi r24,-4
 6715 2bda 9B4F      		sbci r25,-5
 6716 2bdc FC01      		movw r30,r24
 6717 2bde 6081      		ld r22,Z
 6718 2be0 7181      		ldd r23,Z+1
 6719 2be2 8EA9      		ldd r24,Y+54
 6720 2be4 9FA9      		ldd r25,Y+55
 6721 2be6 48E0      		ldi r20,lo8(8)
 6722 2be8 50E0      		ldi r21,0
 6723 2bea F901      		movw r30,r18
 6724 2bec 0995      		icall
 6725               	.L232:
 803:lp_solve_5.5/lp_simplex.c ****           }
 804:lp_solve_5.5/lp_simplex.c ****           changedphase = FALSE;
 6726               		.loc 2 804 0
 6727 2bee 1A82      		std Y+2,__zero_reg__
 805:lp_solve_5.5/lp_simplex.c ****           primalfeasible = TRUE;
 6728               		.loc 2 805 0
 6729 2bf0 81E0      		ldi r24,lo8(1)
 6730 2bf2 88AF      		std Y+56,r24
 806:lp_solve_5.5/lp_simplex.c ****           lp->simplex_mode = SIMPLEX_Phase2_PRIMAL;
 6731               		.loc 2 806 0
 6732 2bf4 8EA9      		ldd r24,Y+54
 6733 2bf6 9FA9      		ldd r25,Y+55
 6734 2bf8 8A5A      		subi r24,-86
 6735 2bfa 9D4F      		sbci r25,-3
 6736 2bfc 24E0      		ldi r18,lo8(4)
 6737 2bfe 30E0      		ldi r19,0
 6738 2c00 DC01      		movw r26,r24
 6739 2c02 2D93      		st X+,r18
 6740 2c04 3C93      		st X,r19
 807:lp_solve_5.5/lp_simplex.c ****           set_OF_p1extra(lp, 0.0);
 6741               		.loc 2 807 0
 6742 2c06 8EA9      		ldd r24,Y+54
 6743 2c08 9FA9      		ldd r25,Y+55
 6744 2c0a 40E0      		ldi r20,0
 6745 2c0c 50E0      		ldi r21,0
 6746 2c0e BA01      		movw r22,r20
 6747 2c10 0E94 0000 		call set_OF_p1extra
 808:lp_solve_5.5/lp_simplex.c **** 
 809:lp_solve_5.5/lp_simplex.c ****          /* We can do two things now;
 810:lp_solve_5.5/lp_simplex.c ****             1) delete the rows belonging to those variables, since they are redundant, OR
 811:lp_solve_5.5/lp_simplex.c ****             2) drive out the existing artificial variables via pivoting. */
 812:lp_solve_5.5/lp_simplex.c ****           if(lp->P1extraDim > 0) {
 6748               		.loc 2 812 0
 6749 2c14 8EA9      		ldd r24,Y+54
 6750 2c16 9FA9      		ldd r25,Y+55
 6751 2c18 8051      		subi r24,16
 6752 2c1a 9D4F      		sbci r25,-3
 6753 2c1c FC01      		movw r30,r24
 6754 2c1e 8081      		ld r24,Z
 6755 2c20 9181      		ldd r25,Z+1
 6756 2c22 1816      		cp __zero_reg__,r24
 6757 2c24 1906      		cpc __zero_reg__,r25
 6758 2c26 04F0      		brlt .+2
 6759 2c28 00C0      		rjmp .L233
 813:lp_solve_5.5/lp_simplex.c **** 
 814:lp_solve_5.5/lp_simplex.c **** #ifdef Phase1EliminateRedundant
 815:lp_solve_5.5/lp_simplex.c ****            /* If it is not a MIP model we can try to delete redundant rows */
 816:lp_solve_5.5/lp_simplex.c ****             if((lp->bb_totalnodes == 0) && (MIP_count(lp) == 0)) {
 6760               		.loc 2 816 0
 6761 2c2a 8EA9      		ldd r24,Y+54
 6762 2c2c 9FA9      		ldd r25,Y+55
 6763 2c2e 8A5C      		subi r24,-54
 6764 2c30 9C4F      		sbci r25,-4
 6765 2c32 DC01      		movw r26,r24
 6766 2c34 AC90      		ld r10,X
 6767 2c36 FC01      		movw r30,r24
 6768 2c38 B180      		ldd r11,Z+1
 6769 2c3a DC01      		movw r26,r24
 6770 2c3c 1296      		adiw r26,2
 6771 2c3e CC90      		ld r12,X
 6772 2c40 FC01      		movw r30,r24
 6773 2c42 D380      		ldd r13,Z+3
 6774 2c44 DC01      		movw r26,r24
 6775 2c46 1496      		adiw r26,4
 6776 2c48 EC90      		ld r14,X
 6777 2c4a FC01      		movw r30,r24
 6778 2c4c F580      		ldd r15,Z+5
 6779 2c4e DC01      		movw r26,r24
 6780 2c50 1696      		adiw r26,6
 6781 2c52 0C91      		ld r16,X
 6782 2c54 FC01      		movw r30,r24
 6783 2c56 1781      		ldd r17,Z+7
 6784 2c58 2A2D      		mov r18,r10
 6785 2c5a 3B2D      		mov r19,r11
 6786 2c5c 4C2D      		mov r20,r12
 6787 2c5e 5D2D      		mov r21,r13
 6788 2c60 6E2D      		mov r22,r14
 6789 2c62 7F2D      		mov r23,r15
 6790 2c64 802F      		mov r24,r16
 6791 2c66 912F      		mov r25,r17
 6792 2c68 A0E0      		ldi r26,0
 6793 2c6a 0E94 0000 		call __cmpdi2_s8
 6794 2c6e 01F0      		breq .+2
 6795 2c70 00C0      		rjmp .L234
 6796               		.loc 2 816 0 is_stmt 0 discriminator 1
 6797 2c72 8EA9      		ldd r24,Y+54
 6798 2c74 9FA9      		ldd r25,Y+55
 6799 2c76 0E94 0000 		call MIP_count
 6800 2c7a 892B      		or r24,r25
 6801 2c7c 01F0      		breq .+2
 6802 2c7e 00C0      		rjmp .L234
 817:lp_solve_5.5/lp_simplex.c ****               while(lp->P1extraDim > 0) {
 6803               		.loc 2 817 0 is_stmt 1
 6804 2c80 00C0      		rjmp .L235
 6805               	.L241:
 818:lp_solve_5.5/lp_simplex.c ****                 i = lp->rows;
 6806               		.loc 2 818 0
 6807 2c82 8EA9      		ldd r24,Y+54
 6808 2c84 9FA9      		ldd r25,Y+55
 6809 2c86 8651      		subi r24,22
 6810 2c88 9E4F      		sbci r25,-2
 6811 2c8a DC01      		movw r26,r24
 6812 2c8c 8D91      		ld r24,X+
 6813 2c8e 9C91      		ld r25,X
 6814 2c90 9E83      		std Y+6,r25
 6815 2c92 8D83      		std Y+5,r24
 819:lp_solve_5.5/lp_simplex.c ****                 while((i > 0) && (lp->var_basic[i] <= lp->sum-lp->P1extraDim))
 6816               		.loc 2 819 0
 6817 2c94 00C0      		rjmp .L236
 6818               	.L238:
 820:lp_solve_5.5/lp_simplex.c ****                   i--;
 6819               		.loc 2 820 0
 6820 2c96 8D81      		ldd r24,Y+5
 6821 2c98 9E81      		ldd r25,Y+6
 6822 2c9a 0197      		sbiw r24,1
 6823 2c9c 9E83      		std Y+6,r25
 6824 2c9e 8D83      		std Y+5,r24
 6825               	.L236:
 819:lp_solve_5.5/lp_simplex.c ****                 while((i > 0) && (lp->var_basic[i] <= lp->sum-lp->P1extraDim))
 6826               		.loc 2 819 0
 6827 2ca0 8D81      		ldd r24,Y+5
 6828 2ca2 9E81      		ldd r25,Y+6
 6829 2ca4 1816      		cp __zero_reg__,r24
 6830 2ca6 1906      		cpc __zero_reg__,r25
 6831 2ca8 04F4      		brge .L237
 819:lp_solve_5.5/lp_simplex.c ****                 while((i > 0) && (lp->var_basic[i] <= lp->sum-lp->P1extraDim))
 6832               		.loc 2 819 0 is_stmt 0 discriminator 1
 6833 2caa 8EA9      		ldd r24,Y+54
 6834 2cac 9FA9      		ldd r25,Y+55
 6835 2cae 8453      		subi r24,52
 6836 2cb0 9D4F      		sbci r25,-3
 6837 2cb2 FC01      		movw r30,r24
 6838 2cb4 2081      		ld r18,Z
 6839 2cb6 3181      		ldd r19,Z+1
 6840 2cb8 8D81      		ldd r24,Y+5
 6841 2cba 9E81      		ldd r25,Y+6
 6842 2cbc 880F      		lsl r24
 6843 2cbe 991F      		rol r25
 6844 2cc0 820F      		add r24,r18
 6845 2cc2 931F      		adc r25,r19
 6846 2cc4 DC01      		movw r26,r24
 6847 2cc6 2D91      		ld r18,X+
 6848 2cc8 3C91      		ld r19,X
 6849 2cca 8EA9      		ldd r24,Y+54
 6850 2ccc 9FA9      		ldd r25,Y+55
 6851 2cce 8851      		subi r24,24
 6852 2cd0 9E4F      		sbci r25,-2
 6853 2cd2 FC01      		movw r30,r24
 6854 2cd4 4081      		ld r20,Z
 6855 2cd6 5181      		ldd r21,Z+1
 6856 2cd8 8EA9      		ldd r24,Y+54
 6857 2cda 9FA9      		ldd r25,Y+55
 6858 2cdc 8051      		subi r24,16
 6859 2cde 9D4F      		sbci r25,-3
 6860 2ce0 DC01      		movw r26,r24
 6861 2ce2 8D91      		ld r24,X+
 6862 2ce4 9C91      		ld r25,X
 6863 2ce6 FA01      		movw r30,r20
 6864 2ce8 E81B      		sub r30,r24
 6865 2cea F90B      		sbc r31,r25
 6866 2cec CF01      		movw r24,r30
 6867 2cee 8217      		cp r24,r18
 6868 2cf0 9307      		cpc r25,r19
 6869 2cf2 04F4      		brge .L238
 6870               	.L237:
 821:lp_solve_5.5/lp_simplex.c **** #ifdef Paranoia
 822:lp_solve_5.5/lp_simplex.c ****                 if(i <= 0) {
 823:lp_solve_5.5/lp_simplex.c ****                   report(lp, SEVERE, "primloop: Could not find redundant artificial.\n");
 824:lp_solve_5.5/lp_simplex.c ****                   break;
 825:lp_solve_5.5/lp_simplex.c ****                 }
 826:lp_solve_5.5/lp_simplex.c **** #endif
 827:lp_solve_5.5/lp_simplex.c ****                 /* Obtain column and row indeces */
 828:lp_solve_5.5/lp_simplex.c ****                 j = lp->var_basic[i]-lp->rows;
 6871               		.loc 2 828 0 is_stmt 1
 6872 2cf4 8EA9      		ldd r24,Y+54
 6873 2cf6 9FA9      		ldd r25,Y+55
 6874 2cf8 8453      		subi r24,52
 6875 2cfa 9D4F      		sbci r25,-3
 6876 2cfc DC01      		movw r26,r24
 6877 2cfe 2D91      		ld r18,X+
 6878 2d00 3C91      		ld r19,X
 6879 2d02 8D81      		ldd r24,Y+5
 6880 2d04 9E81      		ldd r25,Y+6
 6881 2d06 880F      		lsl r24
 6882 2d08 991F      		rol r25
 6883 2d0a 820F      		add r24,r18
 6884 2d0c 931F      		adc r25,r19
 6885 2d0e FC01      		movw r30,r24
 6886 2d10 2081      		ld r18,Z
 6887 2d12 3181      		ldd r19,Z+1
 6888 2d14 8EA9      		ldd r24,Y+54
 6889 2d16 9FA9      		ldd r25,Y+55
 6890 2d18 8651      		subi r24,22
 6891 2d1a 9E4F      		sbci r25,-2
 6892 2d1c DC01      		movw r26,r24
 6893 2d1e 8D91      		ld r24,X+
 6894 2d20 9C91      		ld r25,X
 6895 2d22 F901      		movw r30,r18
 6896 2d24 E81B      		sub r30,r24
 6897 2d26 F90B      		sbc r31,r25
 6898 2d28 CF01      		movw r24,r30
 6899 2d2a 98A3      		std Y+32,r25
 6900 2d2c 8F8F      		std Y+31,r24
 829:lp_solve_5.5/lp_simplex.c ****                 k = get_artificialRow(lp, j);
 6901               		.loc 2 829 0
 6902 2d2e 2F8D      		ldd r18,Y+31
 6903 2d30 38A1      		ldd r19,Y+32
 6904 2d32 8EA9      		ldd r24,Y+54
 6905 2d34 9FA9      		ldd r25,Y+55
 6906 2d36 B901      		movw r22,r18
 6907 2d38 0E94 0000 		call get_artificialRow
 6908 2d3c 9AA3      		std Y+34,r25
 6909 2d3e 89A3      		std Y+33,r24
 830:lp_solve_5.5/lp_simplex.c **** 
 831:lp_solve_5.5/lp_simplex.c ****                 /* Delete row before column due to basis "compensation logic" */
 832:lp_solve_5.5/lp_simplex.c ****                 if(lp->is_basic[k]) {
 6910               		.loc 2 832 0
 6911 2d40 8EA9      		ldd r24,Y+54
 6912 2d42 9FA9      		ldd r25,Y+55
 6913 2d44 8053      		subi r24,48
 6914 2d46 9D4F      		sbci r25,-3
 6915 2d48 DC01      		movw r26,r24
 6916 2d4a 2D91      		ld r18,X+
 6917 2d4c 3C91      		ld r19,X
 6918 2d4e 89A1      		ldd r24,Y+33
 6919 2d50 9AA1      		ldd r25,Y+34
 6920 2d52 820F      		add r24,r18
 6921 2d54 931F      		adc r25,r19
 6922 2d56 FC01      		movw r30,r24
 6923 2d58 8081      		ld r24,Z
 6924 2d5a 8823      		tst r24
 6925 2d5c 01F0      		breq .L239
 833:lp_solve_5.5/lp_simplex.c ****                   lp->is_basic[lp->rows+j] = FALSE;
 6926               		.loc 2 833 0
 6927 2d5e 8EA9      		ldd r24,Y+54
 6928 2d60 9FA9      		ldd r25,Y+55
 6929 2d62 8053      		subi r24,48
 6930 2d64 9D4F      		sbci r25,-3
 6931 2d66 DC01      		movw r26,r24
 6932 2d68 8D91      		ld r24,X+
 6933 2d6a 9C91      		ld r25,X
 6934 2d6c 2EA9      		ldd r18,Y+54
 6935 2d6e 3FA9      		ldd r19,Y+55
 6936 2d70 2651      		subi r18,22
 6937 2d72 3E4F      		sbci r19,-2
 6938 2d74 F901      		movw r30,r18
 6939 2d76 4081      		ld r20,Z
 6940 2d78 5181      		ldd r21,Z+1
 6941 2d7a 2F8D      		ldd r18,Y+31
 6942 2d7c 38A1      		ldd r19,Y+32
 6943 2d7e 240F      		add r18,r20
 6944 2d80 351F      		adc r19,r21
 6945 2d82 820F      		add r24,r18
 6946 2d84 931F      		adc r25,r19
 6947 2d86 DC01      		movw r26,r24
 6948 2d88 1C92      		st X,__zero_reg__
 834:lp_solve_5.5/lp_simplex.c ****                   del_constraint(lp, k);
 6949               		.loc 2 834 0
 6950 2d8a 29A1      		ldd r18,Y+33
 6951 2d8c 3AA1      		ldd r19,Y+34
 6952 2d8e 8EA9      		ldd r24,Y+54
 6953 2d90 9FA9      		ldd r25,Y+55
 6954 2d92 B901      		movw r22,r18
 6955 2d94 0E94 0000 		call del_constraint
 6956 2d98 00C0      		rjmp .L240
 6957               	.L239:
 835:lp_solve_5.5/lp_simplex.c ****                 }
 836:lp_solve_5.5/lp_simplex.c ****                 else
 837:lp_solve_5.5/lp_simplex.c ****                   set_basisvar(lp, i, k);
 6958               		.loc 2 837 0
 6959 2d9a 49A1      		ldd r20,Y+33
 6960 2d9c 5AA1      		ldd r21,Y+34
 6961 2d9e 2D81      		ldd r18,Y+5
 6962 2da0 3E81      		ldd r19,Y+6
 6963 2da2 8EA9      		ldd r24,Y+54
 6964 2da4 9FA9      		ldd r25,Y+55
 6965 2da6 B901      		movw r22,r18
 6966 2da8 0E94 0000 		call set_basisvar
 6967               	.L240:
 838:lp_solve_5.5/lp_simplex.c ****                 del_column(lp, j);
 6968               		.loc 2 838 0
 6969 2dac 2F8D      		ldd r18,Y+31
 6970 2dae 38A1      		ldd r19,Y+32
 6971 2db0 8EA9      		ldd r24,Y+54
 6972 2db2 9FA9      		ldd r25,Y+55
 6973 2db4 B901      		movw r22,r18
 6974 2db6 0E94 0000 		call del_column
 839:lp_solve_5.5/lp_simplex.c ****                 lp->P1extraDim--;
 6975               		.loc 2 839 0
 6976 2dba 8EA9      		ldd r24,Y+54
 6977 2dbc 9FA9      		ldd r25,Y+55
 6978 2dbe 8051      		subi r24,16
 6979 2dc0 9D4F      		sbci r25,-3
 6980 2dc2 FC01      		movw r30,r24
 6981 2dc4 8081      		ld r24,Z
 6982 2dc6 9181      		ldd r25,Z+1
 6983 2dc8 9C01      		movw r18,r24
 6984 2dca 2150      		subi r18,1
 6985 2dcc 3109      		sbc r19,__zero_reg__
 6986 2dce 8EA9      		ldd r24,Y+54
 6987 2dd0 9FA9      		ldd r25,Y+55
 6988 2dd2 8051      		subi r24,16
 6989 2dd4 9D4F      		sbci r25,-3
 6990 2dd6 DC01      		movw r26,r24
 6991 2dd8 2D93      		st X+,r18
 6992 2dda 3C93      		st X,r19
 6993               	.L235:
 817:lp_solve_5.5/lp_simplex.c ****                 i = lp->rows;
 6994               		.loc 2 817 0
 6995 2ddc 8EA9      		ldd r24,Y+54
 6996 2dde 9FA9      		ldd r25,Y+55
 6997 2de0 8051      		subi r24,16
 6998 2de2 9D4F      		sbci r25,-3
 6999 2de4 FC01      		movw r30,r24
 7000 2de6 8081      		ld r24,Z
 7001 2de8 9181      		ldd r25,Z+1
 7002 2dea 1816      		cp __zero_reg__,r24
 7003 2dec 1906      		cpc __zero_reg__,r25
 7004 2dee 04F4      		brge .+2
 7005 2df0 00C0      		rjmp .L241
 840:lp_solve_5.5/lp_simplex.c ****               }
 841:lp_solve_5.5/lp_simplex.c ****               lp->basis_valid = TRUE;
 7006               		.loc 2 841 0
 7007 2df2 8EA9      		ldd r24,Y+54
 7008 2df4 9FA9      		ldd r25,Y+55
 7009 2df6 8753      		subi r24,55
 7010 2df8 9D4F      		sbci r25,-3
 7011 2dfa 21E0      		ldi r18,lo8(1)
 7012 2dfc DC01      		movw r26,r24
 7013 2dfe 2C93      		st X,r18
 7014 2e00 00C0      		rjmp .L233
 7015               	.L234:
 842:lp_solve_5.5/lp_simplex.c ****             }
 843:lp_solve_5.5/lp_simplex.c ****            /* Otherwise we drive out the artificials by elimination pivoting */
 844:lp_solve_5.5/lp_simplex.c ****             else
 845:lp_solve_5.5/lp_simplex.c ****               eliminate_artificials(lp, prow);
 7016               		.loc 2 845 0
 7017 2e02 2AA9      		ldd r18,Y+50
 7018 2e04 3BA9      		ldd r19,Y+51
 7019 2e06 8EA9      		ldd r24,Y+54
 7020 2e08 9FA9      		ldd r25,Y+55
 7021 2e0a B901      		movw r22,r18
 7022 2e0c 0E94 0000 		call eliminate_artificials
 7023               	.L233:
 846:lp_solve_5.5/lp_simplex.c **** 
 847:lp_solve_5.5/lp_simplex.c **** #else
 848:lp_solve_5.5/lp_simplex.c ****             /* Indicate phase 2 with artificial variables by negating P1extraDim */
 849:lp_solve_5.5/lp_simplex.c ****             lp->P1extraDim = my_flipsign(lp->P1extraDim);
 850:lp_solve_5.5/lp_simplex.c **** #endif
 851:lp_solve_5.5/lp_simplex.c ****           }
 852:lp_solve_5.5/lp_simplex.c **** 
 853:lp_solve_5.5/lp_simplex.c ****           /* We must refactorize since the OF changes from phase 1 to phase 2 */
 854:lp_solve_5.5/lp_simplex.c ****           set_action(&lp->spx_action, ACTION_REINVERT);
 7024               		.loc 2 854 0
 7025 2e10 8EA9      		ldd r24,Y+54
 7026 2e12 9FA9      		ldd r25,Y+55
 7027 2e14 8E50      		subi r24,14
 7028 2e16 9D4F      		sbci r25,-3
 7029 2e18 60E1      		ldi r22,lo8(16)
 7030 2e1a 70E0      		ldi r23,0
 7031 2e1c 0E94 0000 		call set_action
 855:lp_solve_5.5/lp_simplex.c ****           bfpfinal = TRUE;
 7032               		.loc 2 855 0
 7033 2e20 81E0      		ldi r24,lo8(1)
 7034 2e22 8983      		std Y+1,r24
 7035 2e24 00C0      		rjmp .L230
 7036               	.L231:
 856:lp_solve_5.5/lp_simplex.c ****         }
 857:lp_solve_5.5/lp_simplex.c **** 
 858:lp_solve_5.5/lp_simplex.c ****         /* We are infeasible in phase 1 */
 859:lp_solve_5.5/lp_simplex.c ****         else {
 860:lp_solve_5.5/lp_simplex.c ****           lp->spx_status = INFEASIBLE;
 7037               		.loc 2 860 0
 7038 2e26 8EA9      		ldd r24,Y+54
 7039 2e28 9FA9      		ldd r25,Y+55
 7040 2e2a 8A5F      		subi r24,-6
 7041 2e2c 9D4F      		sbci r25,-3
 7042 2e2e 22E0      		ldi r18,lo8(2)
 7043 2e30 30E0      		ldi r19,0
 7044 2e32 FC01      		movw r30,r24
 7045 2e34 3183      		std Z+1,r19
 7046 2e36 2083      		st Z,r18
 861:lp_solve_5.5/lp_simplex.c ****           minit = ITERATE_MAJORMAJOR;
 7047               		.loc 2 861 0
 7048 2e38 1B82      		std Y+3,__zero_reg__
 862:lp_solve_5.5/lp_simplex.c ****           if(lp->spx_trace)
 7049               		.loc 2 862 0
 7050 2e3a 8EA9      		ldd r24,Y+54
 7051 2e3c 9FA9      		ldd r25,Y+55
 7052 2e3e 8E5F      		subi r24,-2
 7053 2e40 9D4F      		sbci r25,-3
 7054 2e42 DC01      		movw r26,r24
 7055 2e44 8C91      		ld r24,X
 7056 2e46 8823      		tst r24
 7057 2e48 01F0      		breq .L230
 863:lp_solve_5.5/lp_simplex.c ****             report(lp, NORMAL, "Model infeasible by primal simplex at iter   %10.0f.\n",
 864:lp_solve_5.5/lp_simplex.c ****                                (double) get_total_iter(lp));
 7058               		.loc 2 864 0
 7059 2e4a 8EA9      		ldd r24,Y+54
 7060 2e4c 9FA9      		ldd r25,Y+55
 7061 2e4e 0E94 0000 		call get_total_iter
 7062 2e52 A22E      		mov r10,r18
 7063 2e54 B32E      		mov r11,r19
 7064 2e56 C42E      		mov r12,r20
 7065 2e58 D52E      		mov r13,r21
 7066 2e5a E62E      		mov r14,r22
 7067 2e5c F72E      		mov r15,r23
 7068 2e5e 082F      		mov r16,r24
 7069 2e60 192F      		mov r17,r25
 863:lp_solve_5.5/lp_simplex.c ****             report(lp, NORMAL, "Model infeasible by primal simplex at iter   %10.0f.\n",
 7070               		.loc 2 863 0
 7071 2e62 2A2D      		mov r18,r10
 7072 2e64 3B2D      		mov r19,r11
 7073 2e66 4C2D      		mov r20,r12
 7074 2e68 5D2D      		mov r21,r13
 7075 2e6a 6E2D      		mov r22,r14
 7076 2e6c 7F2D      		mov r23,r15
 7077 2e6e 802F      		mov r24,r16
 7078 2e70 912F      		mov r25,r17
 7079 2e72 0E94 0000 		call __floatdisf
 7080 2e76 DC01      		movw r26,r24
 7081 2e78 CB01      		movw r24,r22
 7082 2e7a 2B2F      		mov r18,r27
 7083 2e7c 2F93      		push r18
 7084 2e7e 2A2F      		mov r18,r26
 7085 2e80 2F93      		push r18
 7086 2e82 292F      		mov r18,r25
 7087 2e84 2F93      		push r18
 7088 2e86 8F93      		push r24
 7089 2e88 80E0      		ldi r24,lo8(.LC19)
 7090 2e8a 90E0      		ldi r25,hi8(.LC19)
 7091 2e8c 892F      		mov r24,r25
 7092 2e8e 8F93      		push r24
 7093 2e90 80E0      		ldi r24,lo8(.LC19)
 7094 2e92 90E0      		ldi r25,hi8(.LC19)
 7095 2e94 8F93      		push r24
 7096 2e96 1F92      		push __zero_reg__
 7097 2e98 84E0      		ldi r24,lo8(4)
 7098 2e9a 8F93      		push r24
 7099 2e9c 8FA9      		ldd r24,Y+55
 7100 2e9e 8F93      		push r24
 7101 2ea0 8EA9      		ldd r24,Y+54
 7102 2ea2 8F93      		push r24
 7103 2ea4 0E94 0000 		call report
 7104 2ea8 EDB7      		in r30,__SP_L__
 7105 2eaa FEB7      		in r31,__SP_H__
 7106 2eac 3A96      		adiw r30,10
 7107 2eae 0FB6      		in __tmp_reg__,__SREG__
 7108 2eb0 F894      		cli
 7109 2eb2 DEBF      		out __SP_H__,r29
 7110 2eb4 0FBE      		out __SREG__,__tmp_reg__
 7111 2eb6 CDBF      		out __SP_L__,r28
 7112               	.L230:
 865:lp_solve_5.5/lp_simplex.c ****         }
 866:lp_solve_5.5/lp_simplex.c ****       }
 867:lp_solve_5.5/lp_simplex.c **** 
 868:lp_solve_5.5/lp_simplex.c ****       /* Handle phase 1 optimality */
 869:lp_solve_5.5/lp_simplex.c ****       else {
 870:lp_solve_5.5/lp_simplex.c ****         /* (Do nothing special) */
 871:lp_solve_5.5/lp_simplex.c ****       }
 872:lp_solve_5.5/lp_simplex.c **** 
 873:lp_solve_5.5/lp_simplex.c ****       /* Check if we are still primal feasible; the default assumes that this check
 874:lp_solve_5.5/lp_simplex.c ****          is not necessary after the relaxed problem has been solved satisfactorily. */
 875:lp_solve_5.5/lp_simplex.c ****       if((lp->bb_level <= 1) || (lp->improve & IMPROVE_BBSIMPLEX) /* || (lp->bb_rule & NODE_RCOSTFI
 7113               		.loc 2 875 0
 7114 2eb8 8EA9      		ldd r24,Y+54
 7115 2eba 9FA9      		ldd r25,Y+55
 7116 2ebc 805D      		subi r24,-48
 7117 2ebe 9C4F      		sbci r25,-4
 7118 2ec0 DC01      		movw r26,r24
 7119 2ec2 8D91      		ld r24,X+
 7120 2ec4 9C91      		ld r25,X
 7121 2ec6 0297      		sbiw r24,2
 7122 2ec8 04F0      		brlt .L242
 7123               		.loc 2 875 0 is_stmt 0 discriminator 1
 7124 2eca 8EA9      		ldd r24,Y+54
 7125 2ecc 9FA9      		ldd r25,Y+55
 7126 2ece 8059      		subi r24,-112
 7127 2ed0 9D4F      		sbci r25,-3
 7128 2ed2 FC01      		movw r30,r24
 7129 2ed4 8081      		ld r24,Z
 7130 2ed6 9181      		ldd r25,Z+1
 7131 2ed8 8870      		andi r24,8
 7132 2eda 9927      		clr r25
 7133 2edc 892B      		or r24,r25
 7134 2ede 01F4      		brne .+2
 7135 2ee0 00C0      		rjmp .L228
 7136               	.L242:
 876:lp_solve_5.5/lp_simplex.c ****         set_action(&lp->piv_strategy, PRICE_FORCEFULL);
 7137               		.loc 2 876 0 is_stmt 1
 7138 2ee2 8EA9      		ldd r24,Y+54
 7139 2ee4 9FA9      		ldd r25,Y+55
 7140 2ee6 805A      		subi r24,-96
 7141 2ee8 9D4F      		sbci r25,-3
 7142 2eea 60E0      		ldi r22,0
 7143 2eec 70E2      		ldi r23,lo8(32)
 7144 2eee 0E94 0000 		call set_action
 877:lp_solve_5.5/lp_simplex.c ****           i = rowdual(lp, lp->rhs, FALSE, FALSE, NULL);
 7145               		.loc 2 877 0
 7146 2ef2 8EA9      		ldd r24,Y+54
 7147 2ef4 9FA9      		ldd r25,Y+55
 7148 2ef6 8855      		subi r24,88
 7149 2ef8 9D4F      		sbci r25,-3
 7150 2efa DC01      		movw r26,r24
 7151 2efc 6D91      		ld r22,X+
 7152 2efe 7C91      		ld r23,X
 7153 2f00 8EA9      		ldd r24,Y+54
 7154 2f02 9FA9      		ldd r25,Y+55
 7155 2f04 00E0      		ldi r16,0
 7156 2f06 10E0      		ldi r17,0
 7157 2f08 20E0      		ldi r18,0
 7158 2f0a 40E0      		ldi r20,0
 7159 2f0c 0E94 0000 		call rowdual
 7160 2f10 9E83      		std Y+6,r25
 7161 2f12 8D83      		std Y+5,r24
 878:lp_solve_5.5/lp_simplex.c ****         clear_action(&lp->piv_strategy, PRICE_FORCEFULL);
 7162               		.loc 2 878 0
 7163 2f14 8EA9      		ldd r24,Y+54
 7164 2f16 9FA9      		ldd r25,Y+55
 7165 2f18 805A      		subi r24,-96
 7166 2f1a 9D4F      		sbci r25,-3
 7167 2f1c 60E0      		ldi r22,0
 7168 2f1e 70E2      		ldi r23,lo8(32)
 7169 2f20 0E94 0000 		call clear_action
 879:lp_solve_5.5/lp_simplex.c ****         if(i > 0) {
 7170               		.loc 2 879 0
 7171 2f24 8D81      		ldd r24,Y+5
 7172 2f26 9E81      		ldd r25,Y+6
 7173 2f28 1816      		cp __zero_reg__,r24
 7174 2f2a 1906      		cpc __zero_reg__,r25
 7175 2f2c 04F0      		brlt .+2
 7176 2f2e 00C0      		rjmp .L228
 880:lp_solve_5.5/lp_simplex.c ****           lp->spx_status = LOSTFEAS;
 7177               		.loc 2 880 0
 7178 2f30 8EA9      		ldd r24,Y+54
 7179 2f32 9FA9      		ldd r25,Y+55
 7180 2f34 8A5F      		subi r24,-6
 7181 2f36 9D4F      		sbci r25,-3
 7182 2f38 27E1      		ldi r18,lo8(23)
 7183 2f3a 30E0      		ldi r19,0
 7184 2f3c FC01      		movw r30,r24
 7185 2f3e 3183      		std Z+1,r19
 7186 2f40 2083      		st Z,r18
 881:lp_solve_5.5/lp_simplex.c ****           if(lp->total_iter == 0)
 7187               		.loc 2 881 0
 7188 2f42 8EA9      		ldd r24,Y+54
 7189 2f44 9FA9      		ldd r25,Y+55
 7190 2f46 885C      		subi r24,-56
 7191 2f48 9D4F      		sbci r25,-3
 7192 2f4a DC01      		movw r26,r24
 7193 2f4c AC90      		ld r10,X
 7194 2f4e FC01      		movw r30,r24
 7195 2f50 B180      		ldd r11,Z+1
 7196 2f52 DC01      		movw r26,r24
 7197 2f54 1296      		adiw r26,2
 7198 2f56 CC90      		ld r12,X
 7199 2f58 FC01      		movw r30,r24
 7200 2f5a D380      		ldd r13,Z+3
 7201 2f5c DC01      		movw r26,r24
 7202 2f5e 1496      		adiw r26,4
 7203 2f60 EC90      		ld r14,X
 7204 2f62 FC01      		movw r30,r24
 7205 2f64 F580      		ldd r15,Z+5
 7206 2f66 DC01      		movw r26,r24
 7207 2f68 1696      		adiw r26,6
 7208 2f6a 0C91      		ld r16,X
 7209 2f6c FC01      		movw r30,r24
 7210 2f6e 1781      		ldd r17,Z+7
 7211 2f70 2A2D      		mov r18,r10
 7212 2f72 3B2D      		mov r19,r11
 7213 2f74 4C2D      		mov r20,r12
 7214 2f76 5D2D      		mov r21,r13
 7215 2f78 6E2D      		mov r22,r14
 7216 2f7a 7F2D      		mov r23,r15
 7217 2f7c 802F      		mov r24,r16
 7218 2f7e 912F      		mov r25,r17
 7219 2f80 A0E0      		ldi r26,0
 7220 2f82 0E94 0000 		call __cmpdi2_s8
 7221 2f86 01F4      		brne .L228
 882:lp_solve_5.5/lp_simplex.c ****             report(lp, DETAILED, "primloop: Lost primal feasibility at iter  %10.0f: will try to re
 883:lp_solve_5.5/lp_simplex.c ****                                  (double) get_total_iter(lp));
 7222               		.loc 2 883 0
 7223 2f88 8EA9      		ldd r24,Y+54
 7224 2f8a 9FA9      		ldd r25,Y+55
 7225 2f8c 0E94 0000 		call get_total_iter
 7226 2f90 A22E      		mov r10,r18
 7227 2f92 B32E      		mov r11,r19
 7228 2f94 C42E      		mov r12,r20
 7229 2f96 D52E      		mov r13,r21
 7230 2f98 E62E      		mov r14,r22
 7231 2f9a F72E      		mov r15,r23
 7232 2f9c 082F      		mov r16,r24
 7233 2f9e 192F      		mov r17,r25
 882:lp_solve_5.5/lp_simplex.c ****             report(lp, DETAILED, "primloop: Lost primal feasibility at iter  %10.0f: will try to re
 7234               		.loc 2 882 0
 7235 2fa0 2A2D      		mov r18,r10
 7236 2fa2 3B2D      		mov r19,r11
 7237 2fa4 4C2D      		mov r20,r12
 7238 2fa6 5D2D      		mov r21,r13
 7239 2fa8 6E2D      		mov r22,r14
 7240 2faa 7F2D      		mov r23,r15
 7241 2fac 802F      		mov r24,r16
 7242 2fae 912F      		mov r25,r17
 7243 2fb0 0E94 0000 		call __floatdisf
 7244 2fb4 DC01      		movw r26,r24
 7245 2fb6 CB01      		movw r24,r22
 7246 2fb8 2B2F      		mov r18,r27
 7247 2fba 2F93      		push r18
 7248 2fbc 2A2F      		mov r18,r26
 7249 2fbe 2F93      		push r18
 7250 2fc0 292F      		mov r18,r25
 7251 2fc2 2F93      		push r18
 7252 2fc4 8F93      		push r24
 7253 2fc6 80E0      		ldi r24,lo8(.LC20)
 7254 2fc8 90E0      		ldi r25,hi8(.LC20)
 7255 2fca 892F      		mov r24,r25
 7256 2fcc 8F93      		push r24
 7257 2fce 80E0      		ldi r24,lo8(.LC20)
 7258 2fd0 90E0      		ldi r25,hi8(.LC20)
 7259 2fd2 8F93      		push r24
 7260 2fd4 1F92      		push __zero_reg__
 7261 2fd6 85E0      		ldi r24,lo8(5)
 7262 2fd8 8F93      		push r24
 7263 2fda 8FA9      		ldd r24,Y+55
 7264 2fdc 8F93      		push r24
 7265 2fde 8EA9      		ldd r24,Y+54
 7266 2fe0 8F93      		push r24
 7267 2fe2 0E94 0000 		call report
 7268 2fe6 4DB7      		in r20,__SP_L__
 7269 2fe8 5EB7      		in r21,__SP_H__
 7270 2fea 465F      		subi r20,-10
 7271 2fec 5F4F      		sbci r21,-1
 7272 2fee 0FB6      		in __tmp_reg__,__SREG__
 7273 2ff0 F894      		cli
 7274 2ff2 DEBF      		out __SP_H__,r29
 7275 2ff4 0FBE      		out __SREG__,__tmp_reg__
 7276 2ff6 CDBF      		out __SP_L__,r28
 7277               	.L228:
 884:lp_solve_5.5/lp_simplex.c ****         }
 885:lp_solve_5.5/lp_simplex.c ****       }
 886:lp_solve_5.5/lp_simplex.c ****     }
 887:lp_solve_5.5/lp_simplex.c **** 
 888:lp_solve_5.5/lp_simplex.c ****     /* Pivot row/col and update the inverse */
 889:lp_solve_5.5/lp_simplex.c ****     if(is_action(lp->spx_action, ACTION_ITERATE)) {
 7278               		.loc 2 889 0
 7279 2ff8 8EA9      		ldd r24,Y+54
 7280 2ffa 9FA9      		ldd r25,Y+55
 7281 2ffc 8E50      		subi r24,14
 7282 2ffe 9D4F      		sbci r25,-3
 7283 3000 DC01      		movw r26,r24
 7284 3002 8D91      		ld r24,X+
 7285 3004 9C91      		ld r25,X
 7286 3006 60E4      		ldi r22,lo8(64)
 7287 3008 70E0      		ldi r23,0
 7288 300a 0E94 0000 		call is_action
 7289 300e 8823      		tst r24
 7290 3010 01F4      		brne .+2
 7291 3012 00C0      		rjmp .L243
 890:lp_solve_5.5/lp_simplex.c ****       lastnr = lp->var_basic[rownr];
 7292               		.loc 2 890 0
 7293 3014 8EA9      		ldd r24,Y+54
 7294 3016 9FA9      		ldd r25,Y+55
 7295 3018 8453      		subi r24,52
 7296 301a 9D4F      		sbci r25,-3
 7297 301c FC01      		movw r30,r24
 7298 301e 2081      		ld r18,Z
 7299 3020 3181      		ldd r19,Z+1
 7300 3022 8985      		ldd r24,Y+9
 7301 3024 9A85      		ldd r25,Y+10
 7302 3026 880F      		lsl r24
 7303 3028 991F      		rol r25
 7304 302a 820F      		add r24,r18
 7305 302c 931F      		adc r25,r19
 7306 302e DC01      		movw r26,r24
 7307 3030 8D91      		ld r24,X+
 7308 3032 9C91      		ld r25,X
 7309 3034 9C87      		std Y+12,r25
 7310 3036 8B87      		std Y+11,r24
 891:lp_solve_5.5/lp_simplex.c **** 
 892:lp_solve_5.5/lp_simplex.c ****       if(refactRecent(lp) == AUTOMATIC)
 7311               		.loc 2 892 0
 7312 3038 8EA9      		ldd r24,Y+54
 7313 303a 9FA9      		ldd r25,Y+55
 7314 303c 0E94 0000 		call refactRecent
 7315 3040 8230      		cpi r24,lo8(2)
 7316 3042 01F4      		brne .L244
 893:lp_solve_5.5/lp_simplex.c ****         minitcount = 0;
 7317               		.loc 2 893 0
 7318 3044 1E86      		std Y+14,__zero_reg__
 7319 3046 1D86      		std Y+13,__zero_reg__
 7320 3048 00C0      		rjmp .L245
 7321               	.L244:
 894:lp_solve_5.5/lp_simplex.c ****       else if(minitcount > MAX_MINITUPDATES) {
 7322               		.loc 2 894 0
 7323 304a 8D85      		ldd r24,Y+13
 7324 304c 9E85      		ldd r25,Y+14
 7325 304e CD97      		sbiw r24,61
 7326 3050 04F0      		brlt .L245
 895:lp_solve_5.5/lp_simplex.c ****         recompute_solution(lp, INITSOL_USEZERO);
 7327               		.loc 2 895 0
 7328 3052 8EA9      		ldd r24,Y+54
 7329 3054 9FA9      		ldd r25,Y+55
 7330 3056 61E0      		ldi r22,lo8(1)
 7331 3058 0E94 0000 		call recompute_solution
 896:lp_solve_5.5/lp_simplex.c ****         minitcount = 0;
 7332               		.loc 2 896 0
 7333 305c 1E86      		std Y+14,__zero_reg__
 7334 305e 1D86      		std Y+13,__zero_reg__
 7335               	.L245:
 897:lp_solve_5.5/lp_simplex.c ****       }
 898:lp_solve_5.5/lp_simplex.c ****       minit = performiteration(lp, rownr, colnr, theta, primal,
 7336               		.loc 2 898 0
 7337 3060 2CA9      		ldd r18,Y+52
 7338 3062 3DA9      		ldd r19,Y+53
 7339 3064 81E0      		ldi r24,lo8(1)
 7340 3066 9E8D      		ldd r25,Y+30
 7341 3068 9230      		cpi r25,lo8(2)
 7342 306a 01F4      		brne .L246
 7343 306c 80E0      		ldi r24,0
 7344               	.L246:
 7345 306e 082F      		mov r16,r24
 7346 3070 8EA1      		ldd r24,Y+38
 7347 3072 9FA1      		ldd r25,Y+39
 7348 3074 A8A5      		ldd r26,Y+40
 7349 3076 B9A5      		ldd r27,Y+41
 7350 3078 4F81      		ldd r20,Y+7
 7351 307a 5885      		ldd r21,Y+8
 7352 307c 6985      		ldd r22,Y+9
 7353 307e 7A85      		ldd r23,Y+10
 7354 3080 EEA9      		ldd r30,Y+54
 7355 3082 FFA9      		ldd r31,Y+55
 7356 3084 1F92      		push __zero_reg__
 7357 3086 1F92      		push __zero_reg__
 7358 3088 1F92      		push __zero_reg__
 7359 308a 1F92      		push __zero_reg__
 7360 308c 132F      		mov r17,r19
 7361 308e 1F93      		push r17
 7362 3090 2F93      		push r18
 7363 3092 812C      		mov r8,__zero_reg__
 7364 3094 912C      		mov r9,__zero_reg__
 7365 3096 A12C      		mov r10,__zero_reg__
 7366 3098 B12C      		mov r11,__zero_reg__
 7367 309a C02E      		mov r12,r16
 7368 309c ED88      		ldd r14,Y+21
 7369 309e 8C01      		movw r16,r24
 7370 30a0 9D01      		movw r18,r26
 7371 30a2 CF01      		movw r24,r30
 7372 30a4 0E94 0000 		call performiteration
 7373 30a8 0F90      		pop __tmp_reg__
 7374 30aa 0F90      		pop __tmp_reg__
 7375 30ac 0F90      		pop __tmp_reg__
 7376 30ae 0F90      		pop __tmp_reg__
 7377 30b0 0F90      		pop __tmp_reg__
 7378 30b2 0F90      		pop __tmp_reg__
 7379 30b4 8B83      		std Y+3,r24
 899:lp_solve_5.5/lp_simplex.c ****                                                  (MYBOOL) (/*(candidatecount > 1) && */
 900:lp_solve_5.5/lp_simplex.c ****                                                            (stallaccept != AUTOMATIC)),
 901:lp_solve_5.5/lp_simplex.c ****                                                  NULL, NULL,
 902:lp_solve_5.5/lp_simplex.c ****                                                  pcol, NULL, NULL);
 903:lp_solve_5.5/lp_simplex.c ****       if(minit != ITERATE_MAJORMAJOR)
 7380               		.loc 2 903 0
 7381 30b6 8B81      		ldd r24,Y+3
 7382 30b8 8823      		tst r24
 7383 30ba 01F0      		breq .L247
 904:lp_solve_5.5/lp_simplex.c ****         minitcount++;
 7384               		.loc 2 904 0
 7385 30bc 8D85      		ldd r24,Y+13
 7386 30be 9E85      		ldd r25,Y+14
 7387 30c0 0196      		adiw r24,1
 7388 30c2 9E87      		std Y+14,r25
 7389 30c4 8D87      		std Y+13,r24
 7390               	.L247:
 905:lp_solve_5.5/lp_simplex.c **** 
 906:lp_solve_5.5/lp_simplex.c ****       if((lp->spx_status == USERABORT) || (lp->spx_status == TIMEOUT))
 7391               		.loc 2 906 0
 7392 30c6 8EA9      		ldd r24,Y+54
 7393 30c8 9FA9      		ldd r25,Y+55
 7394 30ca 8A5F      		subi r24,-6
 7395 30cc 9D4F      		sbci r25,-3
 7396 30ce FC01      		movw r30,r24
 7397 30d0 8081      		ld r24,Z
 7398 30d2 9181      		ldd r25,Z+1
 7399 30d4 0697      		sbiw r24,6
 7400 30d6 01F4      		brne .+2
 7401 30d8 00C0      		rjmp .L196
 7402               		.loc 2 906 0 is_stmt 0 discriminator 1
 7403 30da 8EA9      		ldd r24,Y+54
 7404 30dc 9FA9      		ldd r25,Y+55
 7405 30de 8A5F      		subi r24,-6
 7406 30e0 9D4F      		sbci r25,-3
 7407 30e2 DC01      		movw r26,r24
 7408 30e4 8D91      		ld r24,X+
 7409 30e6 9C91      		ld r25,X
 7410 30e8 0797      		sbiw r24,7
 7411 30ea 01F4      		brne .+2
 7412 30ec 00C0      		rjmp .L196
 907:lp_solve_5.5/lp_simplex.c ****         break;
 908:lp_solve_5.5/lp_simplex.c ****       else if(minit == ITERATE_MINORMAJOR)
 7413               		.loc 2 908 0 is_stmt 1
 7414 30ee 8B81      		ldd r24,Y+3
 7415 30f0 8130      		cpi r24,lo8(1)
 7416 30f2 01F4      		brne .L248
 909:lp_solve_5.5/lp_simplex.c ****         continue;
 7417               		.loc 2 909 0
 7418 30f4 00C0      		rjmp .L192
 7419               	.L248:
 910:lp_solve_5.5/lp_simplex.c **** #ifdef UsePrimalReducedCostUpdate
 911:lp_solve_5.5/lp_simplex.c ****       /* Do a fast update of the reduced costs in preparation for the next iteration */
 912:lp_solve_5.5/lp_simplex.c ****       if(minit == ITERATE_MAJORMAJOR)
 913:lp_solve_5.5/lp_simplex.c ****         update_reducedcosts(lp, primal, lastnr, colnr, pcol, drow);
 914:lp_solve_5.5/lp_simplex.c **** #endif
 915:lp_solve_5.5/lp_simplex.c **** 
 916:lp_solve_5.5/lp_simplex.c ****       /* Detect if an auxiliary variable has left the basis and delete it; if
 917:lp_solve_5.5/lp_simplex.c ****          the non-basic variable only changed bound (a "minor iteration"), the
 918:lp_solve_5.5/lp_simplex.c ****          basic artificial variable did not leave and there is nothing to do */
 919:lp_solve_5.5/lp_simplex.c ****       if((minit == ITERATE_MAJORMAJOR) && (lastnr > lp->sum - abs(lp->P1extraDim))) {
 7420               		.loc 2 919 0
 7421 30f6 8B81      		ldd r24,Y+3
 7422 30f8 8823      		tst r24
 7423 30fa 01F0      		breq .+2
 7424 30fc 00C0      		rjmp .L243
 7425               		.loc 2 919 0 is_stmt 0 discriminator 1
 7426 30fe 8EA9      		ldd r24,Y+54
 7427 3100 9FA9      		ldd r25,Y+55
 7428 3102 8851      		subi r24,24
 7429 3104 9E4F      		sbci r25,-2
 7430 3106 FC01      		movw r30,r24
 7431 3108 2081      		ld r18,Z
 7432 310a 3181      		ldd r19,Z+1
 7433 310c 8EA9      		ldd r24,Y+54
 7434 310e 9FA9      		ldd r25,Y+55
 7435 3110 8051      		subi r24,16
 7436 3112 9D4F      		sbci r25,-3
 7437 3114 DC01      		movw r26,r24
 7438 3116 8D91      		ld r24,X+
 7439 3118 9C91      		ld r25,X
 7440 311a 9923      		tst r25
 7441 311c 04F4      		brge .L249
 7442 311e 9195      		neg r25
 7443 3120 8195      		neg r24
 7444 3122 9109      		sbc r25,__zero_reg__
 7445               	.L249:
 7446 3124 281B      		sub r18,r24
 7447 3126 390B      		sbc r19,r25
 7448 3128 8B85      		ldd r24,Y+11
 7449 312a 9C85      		ldd r25,Y+12
 7450 312c 2817      		cp r18,r24
 7451 312e 3907      		cpc r19,r25
 7452 3130 04F0      		brlt .+2
 7453 3132 00C0      		rjmp .L243
 920:lp_solve_5.5/lp_simplex.c **** #ifdef Paranoia
 921:lp_solve_5.5/lp_simplex.c ****         if(lp->is_basic[lastnr] || !lp->is_basic[colnr])
 922:lp_solve_5.5/lp_simplex.c ****           report(lp, SEVERE, "primloop: Invalid basis indicator for variable %d at iter %10.0f.\n",
 923:lp_solve_5.5/lp_simplex.c ****                               lastnr, (double) get_total_iter(lp));
 924:lp_solve_5.5/lp_simplex.c **** #endif
 925:lp_solve_5.5/lp_simplex.c ****         del_column(lp, lastnr-lp->rows);
 7454               		.loc 2 925 0 is_stmt 1
 7455 3134 8EA9      		ldd r24,Y+54
 7456 3136 9FA9      		ldd r25,Y+55
 7457 3138 8651      		subi r24,22
 7458 313a 9E4F      		sbci r25,-2
 7459 313c FC01      		movw r30,r24
 7460 313e 8081      		ld r24,Z
 7461 3140 9181      		ldd r25,Z+1
 7462 3142 2B85      		ldd r18,Y+11
 7463 3144 3C85      		ldd r19,Y+12
 7464 3146 281B      		sub r18,r24
 7465 3148 390B      		sbc r19,r25
 7466 314a 8EA9      		ldd r24,Y+54
 7467 314c 9FA9      		ldd r25,Y+55
 7468 314e B901      		movw r22,r18
 7469 3150 0E94 0000 		call del_column
 926:lp_solve_5.5/lp_simplex.c ****         if(lp->P1extraDim > 0)
 7470               		.loc 2 926 0
 7471 3154 8EA9      		ldd r24,Y+54
 7472 3156 9FA9      		ldd r25,Y+55
 7473 3158 8051      		subi r24,16
 7474 315a 9D4F      		sbci r25,-3
 7475 315c DC01      		movw r26,r24
 7476 315e 8D91      		ld r24,X+
 7477 3160 9C91      		ld r25,X
 7478 3162 1816      		cp __zero_reg__,r24
 7479 3164 1906      		cpc __zero_reg__,r25
 7480 3166 04F4      		brge .L250
 927:lp_solve_5.5/lp_simplex.c ****           lp->P1extraDim--;
 7481               		.loc 2 927 0
 7482 3168 8EA9      		ldd r24,Y+54
 7483 316a 9FA9      		ldd r25,Y+55
 7484 316c 8051      		subi r24,16
 7485 316e 9D4F      		sbci r25,-3
 7486 3170 FC01      		movw r30,r24
 7487 3172 8081      		ld r24,Z
 7488 3174 9181      		ldd r25,Z+1
 7489 3176 9C01      		movw r18,r24
 7490 3178 2150      		subi r18,1
 7491 317a 3109      		sbc r19,__zero_reg__
 7492 317c 8EA9      		ldd r24,Y+54
 7493 317e 9FA9      		ldd r25,Y+55
 7494 3180 8051      		subi r24,16
 7495 3182 9D4F      		sbci r25,-3
 7496 3184 DC01      		movw r26,r24
 7497 3186 2D93      		st X+,r18
 7498 3188 3C93      		st X,r19
 7499 318a 00C0      		rjmp .L251
 7500               	.L250:
 928:lp_solve_5.5/lp_simplex.c ****         else
 929:lp_solve_5.5/lp_simplex.c ****           lp->P1extraDim++;
 7501               		.loc 2 929 0
 7502 318c 8EA9      		ldd r24,Y+54
 7503 318e 9FA9      		ldd r25,Y+55
 7504 3190 8051      		subi r24,16
 7505 3192 9D4F      		sbci r25,-3
 7506 3194 FC01      		movw r30,r24
 7507 3196 8081      		ld r24,Z
 7508 3198 9181      		ldd r25,Z+1
 7509 319a 9C01      		movw r18,r24
 7510 319c 2F5F      		subi r18,-1
 7511 319e 3F4F      		sbci r19,-1
 7512 31a0 8EA9      		ldd r24,Y+54
 7513 31a2 9FA9      		ldd r25,Y+55
 7514 31a4 8051      		subi r24,16
 7515 31a6 9D4F      		sbci r25,-3
 7516 31a8 DC01      		movw r26,r24
 7517 31aa 2D93      		st X+,r18
 7518 31ac 3C93      		st X,r19
 7519               	.L251:
 930:lp_solve_5.5/lp_simplex.c ****         if(lp->P1extraDim == 0) {
 7520               		.loc 2 930 0
 7521 31ae 8EA9      		ldd r24,Y+54
 7522 31b0 9FA9      		ldd r25,Y+55
 7523 31b2 8051      		subi r24,16
 7524 31b4 9D4F      		sbci r25,-3
 7525 31b6 FC01      		movw r30,r24
 7526 31b8 8081      		ld r24,Z
 7527 31ba 9181      		ldd r25,Z+1
 7528 31bc 892B      		or r24,r25
 7529 31be 01F4      		brne .L243
 931:lp_solve_5.5/lp_simplex.c ****           colnr = 0;
 7530               		.loc 2 931 0
 7531 31c0 1886      		std Y+8,__zero_reg__
 7532 31c2 1F82      		std Y+7,__zero_reg__
 932:lp_solve_5.5/lp_simplex.c ****           changedphase = TRUE;
 7533               		.loc 2 932 0
 7534 31c4 81E0      		ldi r24,lo8(1)
 7535 31c6 8A83      		std Y+2,r24
 933:lp_solve_5.5/lp_simplex.c ****           stallMonitor_reset(lp);
 7536               		.loc 2 933 0
 7537 31c8 8EA9      		ldd r24,Y+54
 7538 31ca 9FA9      		ldd r25,Y+55
 7539 31cc 0E94 0000 		call stallMonitor_reset
 7540               	.L243:
 934:lp_solve_5.5/lp_simplex.c ****         }
 935:lp_solve_5.5/lp_simplex.c ****       }
 936:lp_solve_5.5/lp_simplex.c ****     }
 937:lp_solve_5.5/lp_simplex.c **** 
 938:lp_solve_5.5/lp_simplex.c ****     if(lp->spx_status == SWITCH_TO_DUAL)
 7541               		.loc 2 938 0
 7542 31d0 8EA9      		ldd r24,Y+54
 7543 31d2 9FA9      		ldd r25,Y+55
 7544 31d4 8A5F      		subi r24,-6
 7545 31d6 9D4F      		sbci r25,-3
 7546 31d8 DC01      		movw r26,r24
 7547 31da 8D91      		ld r24,X+
 7548 31dc 9C91      		ld r25,X
 7549 31de 4597      		sbiw r24,21
 7550 31e0 01F0      		breq .L192
 939:lp_solve_5.5/lp_simplex.c ****       ;
 940:lp_solve_5.5/lp_simplex.c ****     else if(!changedphase && lp->bfp_mustrefactorize(lp)) {
 7551               		.loc 2 940 0
 7552 31e2 8A81      		ldd r24,Y+2
 7553 31e4 8823      		tst r24
 7554 31e6 01F4      		brne .L192
 7555               		.loc 2 940 0 is_stmt 0 discriminator 1
 7556 31e8 8EA9      		ldd r24,Y+54
 7557 31ea 9FA9      		ldd r25,Y+55
 7558 31ec 8056      		subi r24,96
 7559 31ee 9C4F      		sbci r25,-4
 7560 31f0 FC01      		movw r30,r24
 7561 31f2 2081      		ld r18,Z
 7562 31f4 3181      		ldd r19,Z+1
 7563 31f6 8EA9      		ldd r24,Y+54
 7564 31f8 9FA9      		ldd r25,Y+55
 7565 31fa F901      		movw r30,r18
 7566 31fc 0995      		icall
 7567 31fe 8823      		tst r24
 7568 3200 01F0      		breq .L192
 941:lp_solve_5.5/lp_simplex.c **** #ifdef ResetMinitOnReinvert
 942:lp_solve_5.5/lp_simplex.c ****       minit = ITERATE_MAJORMAJOR;
 7569               		.loc 2 942 0 is_stmt 1
 7570 3202 1B82      		std Y+3,__zero_reg__
 943:lp_solve_5.5/lp_simplex.c **** #endif
 944:lp_solve_5.5/lp_simplex.c ****       if(!invert(lp, INITSOL_USEZERO, bfpfinal))
 7571               		.loc 2 944 0
 7572 3204 8EA9      		ldd r24,Y+54
 7573 3206 9FA9      		ldd r25,Y+55
 7574 3208 4981      		ldd r20,Y+1
 7575 320a 61E0      		ldi r22,lo8(1)
 7576 320c 0E94 0000 		call invert
 7577 3210 8823      		tst r24
 7578 3212 01F4      		brne .L252
 945:lp_solve_5.5/lp_simplex.c ****         lp->spx_status = SINGULAR_BASIS;
 7579               		.loc 2 945 0
 7580 3214 8EA9      		ldd r24,Y+54
 7581 3216 9FA9      		ldd r25,Y+55
 7582 3218 8A5F      		subi r24,-6
 7583 321a 9D4F      		sbci r25,-3
 7584 321c 26E1      		ldi r18,lo8(22)
 7585 321e 30E0      		ldi r19,0
 7586 3220 DC01      		movw r26,r24
 7587 3222 2D93      		st X+,r18
 7588 3224 3C93      		st X,r19
 7589               	.L252:
 946:lp_solve_5.5/lp_simplex.c ****       bfpfinal = FALSE;
 7590               		.loc 2 946 0
 7591 3226 1982      		std Y+1,__zero_reg__
 7592               	.L192:
 656:lp_solve_5.5/lp_simplex.c **** 
 7593               		.loc 2 656 0
 7594 3228 8EA9      		ldd r24,Y+54
 7595 322a 9FA9      		ldd r25,Y+55
 7596 322c 8A5F      		subi r24,-6
 7597 322e 9D4F      		sbci r25,-3
 7598 3230 FC01      		movw r30,r24
 7599 3232 8081      		ld r24,Z
 7600 3234 9181      		ldd r25,Z+1
 7601 3236 0897      		sbiw r24,8
 7602 3238 01F4      		brne .L196
 656:lp_solve_5.5/lp_simplex.c **** 
 7603               		.loc 2 656 0 is_stmt 0 discriminator 1
 7604 323a 8EA9      		ldd r24,Y+54
 7605 323c 9FA9      		ldd r25,Y+55
 7606 323e 6FEF      		ldi r22,lo8(-1)
 7607 3240 7FEF      		ldi r23,lo8(-1)
 7608 3242 0E94 0000 		call userabort
 7609 3246 8823      		tst r24
 7610 3248 01F4      		brne .+2
 7611 324a 00C0      		rjmp .L253
 7612 324c 00C0      		rjmp .L196
 7613               	.L268:
 665:lp_solve_5.5/lp_simplex.c **** 
 7614               		.loc 2 665 0 is_stmt 1
 7615 324e 0000      		nop
 7616               	.L196:
 947:lp_solve_5.5/lp_simplex.c ****     }
 948:lp_solve_5.5/lp_simplex.c ****   }
 949:lp_solve_5.5/lp_simplex.c **** 
 950:lp_solve_5.5/lp_simplex.c ****   /* Remove any remaining artificial variables (feasible or infeasible model) */
 951:lp_solve_5.5/lp_simplex.c ****   lp->P1extraDim = abs(lp->P1extraDim);
 7617               		.loc 2 951 0
 7618 3250 8EA9      		ldd r24,Y+54
 7619 3252 9FA9      		ldd r25,Y+55
 7620 3254 8051      		subi r24,16
 7621 3256 9D4F      		sbci r25,-3
 7622 3258 DC01      		movw r26,r24
 7623 325a 8D91      		ld r24,X+
 7624 325c 9C91      		ld r25,X
 7625 325e 9923      		tst r25
 7626 3260 04F4      		brge .L254
 7627 3262 9195      		neg r25
 7628 3264 8195      		neg r24
 7629 3266 9109      		sbc r25,__zero_reg__
 7630               	.L254:
 7631 3268 9C01      		movw r18,r24
 7632 326a 8EA9      		ldd r24,Y+54
 7633 326c 9FA9      		ldd r25,Y+55
 7634 326e 8051      		subi r24,16
 7635 3270 9D4F      		sbci r25,-3
 7636 3272 FC01      		movw r30,r24
 7637 3274 3183      		std Z+1,r19
 7638 3276 2083      		st Z,r18
 952:lp_solve_5.5/lp_simplex.c **** /*  if((lp->P1extraDim > 0) && (lp->spx_status != DEGENERATE)) { */
 953:lp_solve_5.5/lp_simplex.c ****   if(lp->P1extraDim > 0) {
 7639               		.loc 2 953 0
 7640 3278 8EA9      		ldd r24,Y+54
 7641 327a 9FA9      		ldd r25,Y+55
 7642 327c 8051      		subi r24,16
 7643 327e 9D4F      		sbci r25,-3
 7644 3280 DC01      		movw r26,r24
 7645 3282 8D91      		ld r24,X+
 7646 3284 9C91      		ld r25,X
 7647 3286 1816      		cp __zero_reg__,r24
 7648 3288 1906      		cpc __zero_reg__,r25
 7649 328a 04F4      		brge .L255
 954:lp_solve_5.5/lp_simplex.c ****     clear_artificials(lp);
 7650               		.loc 2 954 0
 7651 328c 8EA9      		ldd r24,Y+54
 7652 328e 9FA9      		ldd r25,Y+55
 7653 3290 0E94 0000 		call clear_artificials
 955:lp_solve_5.5/lp_simplex.c ****     if(lp->spx_status != OPTIMAL)
 7654               		.loc 2 955 0
 7655 3294 8EA9      		ldd r24,Y+54
 7656 3296 9FA9      		ldd r25,Y+55
 7657 3298 8A5F      		subi r24,-6
 7658 329a 9D4F      		sbci r25,-3
 7659 329c FC01      		movw r30,r24
 7660 329e 8081      		ld r24,Z
 7661 32a0 9181      		ldd r25,Z+1
 7662 32a2 892B      		or r24,r25
 7663 32a4 01F0      		breq .L256
 956:lp_solve_5.5/lp_simplex.c ****       restore_basis(lp);
 7664               		.loc 2 956 0
 7665 32a6 8EA9      		ldd r24,Y+54
 7666 32a8 9FA9      		ldd r25,Y+55
 7667 32aa 0E94 0000 		call restore_basis
 7668               	.L256:
 957:lp_solve_5.5/lp_simplex.c ****     i = invert(lp, INITSOL_USEZERO, TRUE);
 7669               		.loc 2 957 0
 7670 32ae 8EA9      		ldd r24,Y+54
 7671 32b0 9FA9      		ldd r25,Y+55
 7672 32b2 41E0      		ldi r20,lo8(1)
 7673 32b4 61E0      		ldi r22,lo8(1)
 7674 32b6 0E94 0000 		call invert
 7675 32ba 882F      		mov r24,r24
 7676 32bc 90E0      		ldi r25,0
 7677 32be 9E83      		std Y+6,r25
 7678 32c0 8D83      		std Y+5,r24
 7679               	.L255:
 958:lp_solve_5.5/lp_simplex.c ****   }
 959:lp_solve_5.5/lp_simplex.c **** #ifdef Paranoia
 960:lp_solve_5.5/lp_simplex.c ****   if(!verify_basis(lp))
 961:lp_solve_5.5/lp_simplex.c ****     report(lp, SEVERE, "primloop: Invalid basis detected due to internal error\n");
 962:lp_solve_5.5/lp_simplex.c **** #endif
 963:lp_solve_5.5/lp_simplex.c **** 
 964:lp_solve_5.5/lp_simplex.c ****   /* Switch to dual phase 1 simplex for MIP models during
 965:lp_solve_5.5/lp_simplex.c ****      B&B phases, since this is typically far more efficient */
 966:lp_solve_5.5/lp_simplex.c **** #ifdef ForceDualSimplexInBB
 967:lp_solve_5.5/lp_simplex.c ****   if((lp->bb_totalnodes == 0) && (MIP_count(lp) > 0) &&
 7680               		.loc 2 967 0
 7681 32c2 8EA9      		ldd r24,Y+54
 7682 32c4 9FA9      		ldd r25,Y+55
 7683 32c6 8A5C      		subi r24,-54
 7684 32c8 9C4F      		sbci r25,-4
 7685 32ca DC01      		movw r26,r24
 7686 32cc AC90      		ld r10,X
 7687 32ce FC01      		movw r30,r24
 7688 32d0 B180      		ldd r11,Z+1
 7689 32d2 DC01      		movw r26,r24
 7690 32d4 1296      		adiw r26,2
 7691 32d6 CC90      		ld r12,X
 7692 32d8 FC01      		movw r30,r24
 7693 32da D380      		ldd r13,Z+3
 7694 32dc DC01      		movw r26,r24
 7695 32de 1496      		adiw r26,4
 7696 32e0 EC90      		ld r14,X
 7697 32e2 FC01      		movw r30,r24
 7698 32e4 F580      		ldd r15,Z+5
 7699 32e6 DC01      		movw r26,r24
 7700 32e8 1696      		adiw r26,6
 7701 32ea 0C91      		ld r16,X
 7702 32ec FC01      		movw r30,r24
 7703 32ee 1781      		ldd r17,Z+7
 7704 32f0 2A2D      		mov r18,r10
 7705 32f2 3B2D      		mov r19,r11
 7706 32f4 4C2D      		mov r20,r12
 7707 32f6 5D2D      		mov r21,r13
 7708 32f8 6E2D      		mov r22,r14
 7709 32fa 7F2D      		mov r23,r15
 7710 32fc 802F      		mov r24,r16
 7711 32fe 912F      		mov r25,r17
 7712 3300 A0E0      		ldi r26,0
 7713 3302 0E94 0000 		call __cmpdi2_s8
 7714 3306 01F4      		brne .L180
 7715               		.loc 2 967 0 is_stmt 0 discriminator 1
 7716 3308 8EA9      		ldd r24,Y+54
 7717 330a 9FA9      		ldd r25,Y+55
 7718 330c 0E94 0000 		call MIP_count
 7719 3310 1816      		cp __zero_reg__,r24
 7720 3312 1906      		cpc __zero_reg__,r25
 7721 3314 04F4      		brge .L180
 968:lp_solve_5.5/lp_simplex.c ****      ((lp->simplex_strategy & SIMPLEX_Phase1_DUAL) == 0)) {
 7722               		.loc 2 968 0 is_stmt 1 discriminator 2
 7723 3316 8EA9      		ldd r24,Y+54
 7724 3318 9FA9      		ldd r25,Y+55
 7725 331a 8C5A      		subi r24,-84
 7726 331c 9D4F      		sbci r25,-3
 7727 331e DC01      		movw r26,r24
 7728 3320 8D91      		ld r24,X+
 7729 3322 9C91      		ld r25,X
 7730 3324 8270      		andi r24,2
 7731 3326 9927      		clr r25
 967:lp_solve_5.5/lp_simplex.c ****      ((lp->simplex_strategy & SIMPLEX_Phase1_DUAL) == 0)) {
 7732               		.loc 2 967 0 discriminator 2
 7733 3328 892B      		or r24,r25
 7734 332a 01F4      		brne .L180
 969:lp_solve_5.5/lp_simplex.c ****     lp->simplex_strategy &= ~SIMPLEX_Phase1_PRIMAL;
 7735               		.loc 2 969 0
 7736 332c 8EA9      		ldd r24,Y+54
 7737 332e 9FA9      		ldd r25,Y+55
 7738 3330 8C5A      		subi r24,-84
 7739 3332 9D4F      		sbci r25,-3
 7740 3334 FC01      		movw r30,r24
 7741 3336 8081      		ld r24,Z
 7742 3338 9181      		ldd r25,Z+1
 7743 333a 9C01      		movw r18,r24
 7744 333c 2E7F      		andi r18,254
 7745 333e 8EA9      		ldd r24,Y+54
 7746 3340 9FA9      		ldd r25,Y+55
 7747 3342 8C5A      		subi r24,-84
 7748 3344 9D4F      		sbci r25,-3
 7749 3346 DC01      		movw r26,r24
 7750 3348 2D93      		st X+,r18
 7751 334a 3C93      		st X,r19
 970:lp_solve_5.5/lp_simplex.c ****     lp->simplex_strategy += SIMPLEX_Phase1_DUAL;
 7752               		.loc 2 970 0
 7753 334c 8EA9      		ldd r24,Y+54
 7754 334e 9FA9      		ldd r25,Y+55
 7755 3350 8C5A      		subi r24,-84
 7756 3352 9D4F      		sbci r25,-3
 7757 3354 FC01      		movw r30,r24
 7758 3356 8081      		ld r24,Z
 7759 3358 9181      		ldd r25,Z+1
 7760 335a 9C01      		movw r18,r24
 7761 335c 2E5F      		subi r18,-2
 7762 335e 3F4F      		sbci r19,-1
 7763 3360 8EA9      		ldd r24,Y+54
 7764 3362 9FA9      		ldd r25,Y+55
 7765 3364 8C5A      		subi r24,-84
 7766 3366 9D4F      		sbci r25,-3
 7767 3368 DC01      		movw r26,r24
 7768 336a 2D93      		st X+,r18
 7769 336c 3C93      		st X,r19
 7770 336e 00C0      		rjmp .L180
 7771               	.L265:
 611:lp_solve_5.5/lp_simplex.c ****       lp->nzdrow[0] = 0;
 7772               		.loc 2 611 0
 7773 3370 0000      		nop
 7774 3372 00C0      		rjmp .L180
 7775               	.L266:
 640:lp_solve_5.5/lp_simplex.c **** 
 7776               		.loc 2 640 0
 7777 3374 0000      		nop
 7778 3376 00C0      		rjmp .L180
 7779               	.L267:
 650:lp_solve_5.5/lp_simplex.c **** 
 7780               		.loc 2 650 0
 7781 3378 0000      		nop
 7782               	.L180:
 971:lp_solve_5.5/lp_simplex.c ****   }
 972:lp_solve_5.5/lp_simplex.c **** #endif
 973:lp_solve_5.5/lp_simplex.c **** 
 974:lp_solve_5.5/lp_simplex.c **** Finish:
 975:lp_solve_5.5/lp_simplex.c ****   stallMonitor_finish(lp);
 7783               		.loc 2 975 0
 7784 337a 8EA9      		ldd r24,Y+54
 7785 337c 9FA9      		ldd r25,Y+55
 7786 337e 0E94 0000 		call stallMonitor_finish
 976:lp_solve_5.5/lp_simplex.c ****   multi_free(&(lp->multivars));
 7787               		.loc 2 976 0
 7788 3382 8EA9      		ldd r24,Y+54
 7789 3384 9FA9      		ldd r25,Y+55
 7790 3386 8857      		subi r24,120
 7791 3388 9D4F      		sbci r25,-3
 7792 338a 0E94 0000 		call multi_free
 977:lp_solve_5.5/lp_simplex.c ****   FREE(prow);
 7793               		.loc 2 977 0
 7794 338e 8AA9      		ldd r24,Y+50
 7795 3390 9BA9      		ldd r25,Y+51
 7796 3392 892B      		or r24,r25
 7797 3394 01F0      		breq .L257
 7798               		.loc 2 977 0 is_stmt 0 discriminator 1
 7799 3396 8AA9      		ldd r24,Y+50
 7800 3398 9BA9      		ldd r25,Y+51
 7801 339a 0E94 0000 		call free
 7802 339e 1BAA      		std Y+51,__zero_reg__
 7803 33a0 1AAA      		std Y+50,__zero_reg__
 7804               	.L257:
 978:lp_solve_5.5/lp_simplex.c ****   FREE(pcol);
 7805               		.loc 2 978 0 is_stmt 1
 7806 33a2 8CA9      		ldd r24,Y+52
 7807 33a4 9DA9      		ldd r25,Y+53
 7808 33a6 892B      		or r24,r25
 7809 33a8 01F0      		breq .L258
 7810               		.loc 2 978 0 is_stmt 0 discriminator 1
 7811 33aa 8CA9      		ldd r24,Y+52
 7812 33ac 9DA9      		ldd r25,Y+53
 7813 33ae 0E94 0000 		call free
 7814 33b2 1DAA      		std Y+53,__zero_reg__
 7815 33b4 1CAA      		std Y+52,__zero_reg__
 7816               	.L258:
 979:lp_solve_5.5/lp_simplex.c ****   FREE(lp->bsolveVal);
 7817               		.loc 2 979 0 is_stmt 1
 7818 33b6 8EA9      		ldd r24,Y+54
 7819 33b8 9FA9      		ldd r25,Y+55
 7820 33ba 8E55      		subi r24,94
 7821 33bc 9D4F      		sbci r25,-3
 7822 33be FC01      		movw r30,r24
 7823 33c0 8081      		ld r24,Z
 7824 33c2 9181      		ldd r25,Z+1
 7825 33c4 892B      		or r24,r25
 7826 33c6 01F0      		breq .L259
 7827               		.loc 2 979 0 is_stmt 0 discriminator 1
 7828 33c8 8EA9      		ldd r24,Y+54
 7829 33ca 9FA9      		ldd r25,Y+55
 7830 33cc 8E55      		subi r24,94
 7831 33ce 9D4F      		sbci r25,-3
 7832 33d0 DC01      		movw r26,r24
 7833 33d2 8D91      		ld r24,X+
 7834 33d4 9C91      		ld r25,X
 7835 33d6 0E94 0000 		call free
 7836 33da 8EA9      		ldd r24,Y+54
 7837 33dc 9FA9      		ldd r25,Y+55
 7838 33de 8E55      		subi r24,94
 7839 33e0 9D4F      		sbci r25,-3
 7840 33e2 FC01      		movw r30,r24
 7841 33e4 1182      		std Z+1,__zero_reg__
 7842 33e6 1082      		st Z,__zero_reg__
 7843               	.L259:
 980:lp_solve_5.5/lp_simplex.c **** 
 981:lp_solve_5.5/lp_simplex.c ****   return(ok);
 7844               		.loc 2 981 0 is_stmt 1
 7845 33e8 8F85      		ldd r24,Y+15
 7846 33ea 9889      		ldd r25,Y+16
 7847               	/* epilogue start */
 982:lp_solve_5.5/lp_simplex.c **** } /* primloop */
 7848               		.loc 2 982 0
 7849 33ec EC96      		adiw r28,60
 7850 33ee 0FB6      		in __tmp_reg__,__SREG__
 7851 33f0 F894      		cli
 7852 33f2 DEBF      		out __SP_H__,r29
 7853 33f4 0FBE      		out __SREG__,__tmp_reg__
 7854 33f6 CDBF      		out __SP_L__,r28
 7855 33f8 DF91      		pop r29
 7856 33fa CF91      		pop r28
 7857 33fc 1F91      		pop r17
 7858 33fe 0F91      		pop r16
 7859 3400 FF90      		pop r15
 7860 3402 EF90      		pop r14
 7861 3404 DF90      		pop r13
 7862 3406 CF90      		pop r12
 7863 3408 BF90      		pop r11
 7864 340a AF90      		pop r10
 7865 340c 9F90      		pop r9
 7866 340e 8F90      		pop r8
 7867 3410 0895      		ret
 7868               		.cfi_endproc
 7869               	.LFE22:
 7871               		.section	.rodata
 7872               	.LC21:
 7873 038f 456E 7465 		.string	"Entered dual simplex algorithm with feasibility %s.\n"
 7873      7265 6420 
 7873      6475 616C 
 7873      2073 696D 
 7873      706C 6578 
 7874               	.LC22:
 7875 03c4 6475 616C 		.string	"dualloop"
 7875      6C6F 6F70 
 7875      00
 7876               	.LC23:
 7877 03cd 5468 6520 		.string	"The model is primal infeasible.\n"
 7877      6D6F 6465 
 7877      6C20 6973 
 7877      2070 7269 
 7877      6D61 6C20 
 7878               	.LC24:
 7879 03ee 6475 616C 		.string	"dualloop: Assuming convergence with reduced accuracy %g.\n"
 7879      6C6F 6F70 
 7879      3A20 4173 
 7879      7375 6D69 
 7879      6E67 2063 
 7880               	.LC25:
 7881 0428 6475 616C 		.string	"dualloop: Attempt to divide by zero (pcol[%d])\n"
 7881      6C6F 6F70 
 7881      3A20 4174 
 7881      7465 6D70 
 7881      7420 746F 
 7882               	.LC26:
 7883 0458 2E2E 2E74 		.string	"...trying to recover by refactorizing basis.\n"
 7883      7279 696E 
 7883      6720 746F 
 7883      2072 6563 
 7883      6F76 6572 
 7884               	.LC27:
 7885 0486 2E2E 2E63 		.string	"...cannot recover by refactorizing basis.\n"
 7885      616E 6E6F 
 7885      7420 7265 
 7885      636F 7665 
 7885      7220 6279 
 7886               	.LC28:
 7887 04b1 6475 616C 		.string	"dualloop: Refactorizing at iter %.0f due to loss of accuracy.\n"
 7887      6C6F 6F70 
 7887      3A20 5265 
 7887      6661 6374 
 7887      6F72 697A 
 7888               	.LC29:
 7889 04f0 2E2E 2E74 		.string	"...trying to find another pivot row!\n"
 7889      7279 696E 
 7889      6720 746F 
 7889      2066 696E 
 7889      6420 616E 
 7890               	.LC30:
 7891 0516 6475 616C 		.string	"dualloop: Model lost dual feasibility.\n"
 7891      6C6F 6F70 
 7891      3A20 4D6F 
 7891      6465 6C20 
 7891      6C6F 7374 
 7892               	.LC31:
 7893 053e 5468 6520 		.string	"The model is primal optimal, but marginally infeasible.\n"
 7893      6D6F 6465 
 7893      6C20 6973 
 7893      2070 7269 
 7893      6D61 6C20 
 7894               	.LC32:
 7895 0577 6475 616C 		.string	"dualloop: Trying to pivot out %d fixed basic variables at iter %.0f\n"
 7895      6C6F 6F70 
 7895      3A20 5472 
 7895      7969 6E67 
 7895      2074 6F20 
 7896               	.LC33:
 7897 05bc 5468 6520 		.string	"The model is primal infeasible and dual feasible.\n"
 7897      6D6F 6465 
 7897      6C20 6973 
 7897      2070 7269 
 7897      6D61 6C20 
 7898               	.LC34:
 7899 05ef 5468 6520 		.string	"The model is primal infeasible and dual unbounded.\n"
 7899      6D6F 6465 
 7899      6C20 6973 
 7899      2070 7269 
 7899      6D61 6C20 
 7900               	.LC35:
 7901 0623 466F 756E 		.string	"Found feasibility by dual simplex after    %10.0f iter.\n"
 7901      6420 6665 
 7901      6173 6962 
 7901      696C 6974 
 7901      7920 6279 
 7902               	.LC36:
 7903 065c 466F 756E 		.string	"Found dual solution with %d fixed slack variables left basic.\n"
 7903      6420 6475 
 7903      616C 2073 
 7903      6F6C 7574 
 7903      696F 6E20 
 7904               	.LC37:
 7905 069b 5265 636F 		.string	"Recovering lost dual feasibility at iter %10.0f.\n"
 7905      7665 7269 
 7905      6E67 206C 
 7905      6F73 7420 
 7905      6475 616C 
 7906               	.LC38:
 7907 06cd 5573 6520 		.string	"Use primal simplex for finalization at iter  %10.0f.\n"
 7907      7072 696D 
 7907      616C 2073 
 7907      696D 706C 
 7907      6578 2066 
 7908               	.LC39:
 7909 0703 4F70 7469 		.string	"Optimal solution with dual simplex at iter   %10.0f.\n"
 7909      6D61 6C20 
 7909      736F 6C75 
 7909      7469 6F6E 
 7909      2077 6974 
 7910               		.text
 7911               	.global	dualloop
 7913               	dualloop:
 7914               	.LFB23:
 983:lp_solve_5.5/lp_simplex.c **** 
 984:lp_solve_5.5/lp_simplex.c **** STATIC int dualloop(lprec *lp, MYBOOL dualfeasible, int dualinfeasibles[], REAL dualoffset)
 985:lp_solve_5.5/lp_simplex.c **** {
 7915               		.loc 2 985 0
 7916               		.cfi_startproc
 7917 3412 8F92      		push r8
 7918               	.LCFI96:
 7919               		.cfi_def_cfa_offset 3
 7920               		.cfi_offset 8, -2
 7921 3414 9F92      		push r9
 7922               	.LCFI97:
 7923               		.cfi_def_cfa_offset 4
 7924               		.cfi_offset 9, -3
 7925 3416 AF92      		push r10
 7926               	.LCFI98:
 7927               		.cfi_def_cfa_offset 5
 7928               		.cfi_offset 10, -4
 7929 3418 BF92      		push r11
 7930               	.LCFI99:
 7931               		.cfi_def_cfa_offset 6
 7932               		.cfi_offset 11, -5
 7933 341a CF92      		push r12
 7934               	.LCFI100:
 7935               		.cfi_def_cfa_offset 7
 7936               		.cfi_offset 12, -6
 7937 341c DF92      		push r13
 7938               	.LCFI101:
 7939               		.cfi_def_cfa_offset 8
 7940               		.cfi_offset 13, -7
 7941 341e EF92      		push r14
 7942               	.LCFI102:
 7943               		.cfi_def_cfa_offset 9
 7944               		.cfi_offset 14, -8
 7945 3420 FF92      		push r15
 7946               	.LCFI103:
 7947               		.cfi_def_cfa_offset 10
 7948               		.cfi_offset 15, -9
 7949 3422 0F93      		push r16
 7950               	.LCFI104:
 7951               		.cfi_def_cfa_offset 11
 7952               		.cfi_offset 16, -10
 7953 3424 1F93      		push r17
 7954               	.LCFI105:
 7955               		.cfi_def_cfa_offset 12
 7956               		.cfi_offset 17, -11
 7957 3426 CF93      		push r28
 7958               	.LCFI106:
 7959               		.cfi_def_cfa_offset 13
 7960               		.cfi_offset 28, -12
 7961 3428 DF93      		push r29
 7962               	.LCFI107:
 7963               		.cfi_def_cfa_offset 14
 7964               		.cfi_offset 29, -13
 7965 342a CDB7      		in r28,__SP_L__
 7966 342c DEB7      		in r29,__SP_H__
 7967               	.LCFI108:
 7968               		.cfi_def_cfa_register 28
 7969 342e EF97      		sbiw r28,63
 7970               	.LCFI109:
 7971               		.cfi_def_cfa_offset 77
 7972 3430 0FB6      		in __tmp_reg__,__SREG__
 7973 3432 F894      		cli
 7974 3434 DEBF      		out __SP_H__,r29
 7975 3436 0FBE      		out __SREG__,__tmp_reg__
 7976 3438 CDBF      		out __SP_L__,r28
 7977               	/* prologue: function */
 7978               	/* frame size = 63 */
 7979               	/* stack size = 75 */
 7980               	.L__stack_usage = 75
 7981 343a 98AF      		std Y+56,r25
 7982 343c 8FAB      		std Y+55,r24
 7983 343e 69AF      		std Y+57,r22
 7984 3440 5BAF      		std Y+59,r21
 7985 3442 4AAF      		std Y+58,r20
 7986 3444 0CAF      		std Y+60,r16
 7987 3446 1DAF      		std Y+61,r17
 7988 3448 2EAF      		std Y+62,r18
 7989 344a 3FAF      		std Y+63,r19
 986:lp_solve_5.5/lp_simplex.c ****   MYBOOL primal = FALSE, inP1extra, dualphase1 = FALSE, changedphase = TRUE,
 7990               		.loc 2 986 0
 7991 344c 1C8A      		std Y+20,__zero_reg__
 7992 344e 1A82      		std Y+2,__zero_reg__
 7993 3450 81E0      		ldi r24,lo8(1)
 7994 3452 8B83      		std Y+3,r24
 987:lp_solve_5.5/lp_simplex.c ****          pricerCanChange, minit, stallaccept, longsteps,
 988:lp_solve_5.5/lp_simplex.c ****          forceoutEQ = FALSE, bfpfinal = FALSE;
 7995               		.loc 2 988 0
 7996 3454 1AA2      		std Y+34,__zero_reg__
 7997 3456 1D82      		std Y+5,__zero_reg__
 989:lp_solve_5.5/lp_simplex.c ****   int    i, colnr = 0, rownr = 0, lastnr = 0,
 7998               		.loc 2 989 0
 7999 3458 1986      		std Y+9,__zero_reg__
 8000 345a 1886      		std Y+8,__zero_reg__
 8001 345c 1B86      		std Y+11,__zero_reg__
 8002 345e 1A86      		std Y+10,__zero_reg__
 8003 3460 1D86      		std Y+13,__zero_reg__
 8004 3462 1C86      		std Y+12,__zero_reg__
 990:lp_solve_5.5/lp_simplex.c ****          candidatecount = 0, minitcount = 0,
 8005               		.loc 2 990 0
 8006 3464 1CA2      		std Y+36,__zero_reg__
 8007 3466 1BA2      		std Y+35,__zero_reg__
 8008 3468 1F86      		std Y+15,__zero_reg__
 8009 346a 1E86      		std Y+14,__zero_reg__
 991:lp_solve_5.5/lp_simplex.c **** #ifdef FixInaccurateDualMinit
 992:lp_solve_5.5/lp_simplex.c ****          minitcolnr = 0,
 993:lp_solve_5.5/lp_simplex.c **** #endif
 994:lp_solve_5.5/lp_simplex.c ****          ok = TRUE;
 8010               		.loc 2 994 0
 8011 346c 81E0      		ldi r24,lo8(1)
 8012 346e 90E0      		ldi r25,0
 8013 3470 998B      		std Y+17,r25
 8014 3472 888B      		std Y+16,r24
 995:lp_solve_5.5/lp_simplex.c ****   int    *boundswaps = NULL;
 8015               		.loc 2 995 0
 8016 3474 1B8A      		std Y+19,__zero_reg__
 8017 3476 1A8A      		std Y+18,__zero_reg__
 996:lp_solve_5.5/lp_simplex.c ****   LREAL  theta = 0.0;
 8018               		.loc 2 996 0
 8019 3478 1DA2      		std Y+37,__zero_reg__
 8020 347a 1EA2      		std Y+38,__zero_reg__
 8021 347c 1FA2      		std Y+39,__zero_reg__
 8022 347e 18A6      		std Y+40,__zero_reg__
 997:lp_solve_5.5/lp_simplex.c ****   REAL   epsvalue, xviolated, cviolated,
 998:lp_solve_5.5/lp_simplex.c ****          *prow = NULL, *pcol = NULL,
 8023               		.loc 2 998 0
 8024 3480 1AAA      		std Y+50,__zero_reg__
 8025 3482 19AA      		std Y+49,__zero_reg__
 8026 3484 1CAA      		std Y+52,__zero_reg__
 8027 3486 1BAA      		std Y+51,__zero_reg__
 999:lp_solve_5.5/lp_simplex.c ****          *drow = lp->drow;
 8028               		.loc 2 999 0
 8029 3488 8FA9      		ldd r24,Y+55
 8030 348a 98AD      		ldd r25,Y+56
 8031 348c 865E      		subi r24,-26
 8032 348e 9D4F      		sbci r25,-3
 8033 3490 DC01      		movw r26,r24
 8034 3492 8D91      		ld r24,X+
 8035 3494 9C91      		ld r25,X
 8036 3496 9E8B      		std Y+22,r25
 8037 3498 8D8B      		std Y+21,r24
1000:lp_solve_5.5/lp_simplex.c ****   int    *nzprow = NULL, *workINT = NULL,
 8038               		.loc 2 1000 0
 8039 349a 1EAA      		std Y+54,__zero_reg__
 8040 349c 1DAA      		std Y+53,__zero_reg__
 8041 349e 188E      		std Y+24,__zero_reg__
 8042 34a0 1F8A      		std Y+23,__zero_reg__
1001:lp_solve_5.5/lp_simplex.c ****          *nzdrow = lp->nzdrow;
 8043               		.loc 2 1001 0
 8044 34a2 8FA9      		ldd r24,Y+55
 8045 34a4 98AD      		ldd r25,Y+56
 8046 34a6 845E      		subi r24,-28
 8047 34a8 9D4F      		sbci r25,-3
 8048 34aa FC01      		movw r30,r24
 8049 34ac 8081      		ld r24,Z
 8050 34ae 9181      		ldd r25,Z+1
 8051 34b0 9A8F      		std Y+26,r25
 8052 34b2 898F      		std Y+25,r24
1002:lp_solve_5.5/lp_simplex.c **** 
1003:lp_solve_5.5/lp_simplex.c ****   if(lp->spx_trace)
 8053               		.loc 2 1003 0
 8054 34b4 8FA9      		ldd r24,Y+55
 8055 34b6 98AD      		ldd r25,Y+56
 8056 34b8 8E5F      		subi r24,-2
 8057 34ba 9D4F      		sbci r25,-3
 8058 34bc DC01      		movw r26,r24
 8059 34be 8C91      		ld r24,X
 8060 34c0 8823      		tst r24
 8061 34c2 01F0      		breq .L270
1004:lp_solve_5.5/lp_simplex.c ****     report(lp, DETAILED, "Entered dual simplex algorithm with feasibility %s.\n",
 8062               		.loc 2 1004 0
 8063 34c4 89AD      		ldd r24,Y+57
 8064 34c6 8823      		tst r24
 8065 34c8 01F4      		brne .L271
 8066               		.loc 2 1004 0 is_stmt 0 discriminator 1
 8067 34ca 80E0      		ldi r24,lo8(.LC8)
 8068 34cc 90E0      		ldi r25,hi8(.LC8)
 8069 34ce 00C0      		rjmp .L272
 8070               	.L271:
 8071               		.loc 2 1004 0 discriminator 2
 8072 34d0 80E0      		ldi r24,lo8(.LC9)
 8073 34d2 90E0      		ldi r25,hi8(.LC9)
 8074               	.L272:
 8075               		.loc 2 1004 0 discriminator 4
 8076 34d4 292F      		mov r18,r25
 8077 34d6 2F93      		push r18
 8078 34d8 8F93      		push r24
 8079 34da 80E0      		ldi r24,lo8(.LC21)
 8080 34dc 90E0      		ldi r25,hi8(.LC21)
 8081 34de 892F      		mov r24,r25
 8082 34e0 8F93      		push r24
 8083 34e2 80E0      		ldi r24,lo8(.LC21)
 8084 34e4 90E0      		ldi r25,hi8(.LC21)
 8085 34e6 8F93      		push r24
 8086 34e8 1F92      		push __zero_reg__
 8087 34ea 85E0      		ldi r24,lo8(5)
 8088 34ec 8F93      		push r24
 8089 34ee 88AD      		ldd r24,Y+56
 8090 34f0 8F93      		push r24
 8091 34f2 8FA9      		ldd r24,Y+55
 8092 34f4 8F93      		push r24
 8093 34f6 0E94 0000 		call report
 8094 34fa EDB7      		in r30,__SP_L__
 8095 34fc FEB7      		in r31,__SP_H__
 8096 34fe 3896      		adiw r30,8
 8097 3500 0FB6      		in __tmp_reg__,__SREG__
 8098 3502 F894      		cli
 8099 3504 DEBF      		out __SP_H__,r29
 8100 3506 0FBE      		out __SREG__,__tmp_reg__
 8101 3508 CDBF      		out __SP_L__,r28
 8102               	.L270:
1005:lp_solve_5.5/lp_simplex.c ****                          my_boolstr(dualfeasible));
1006:lp_solve_5.5/lp_simplex.c **** 
1007:lp_solve_5.5/lp_simplex.c ****   /* Allocate work arrays */
1008:lp_solve_5.5/lp_simplex.c ****   ok = allocREAL(lp, &prow,   lp->sum + 1,  TRUE) &&
 8103               		.loc 2 1008 0 is_stmt 1
 8104 350a 8FA9      		ldd r24,Y+55
 8105 350c 98AD      		ldd r25,Y+56
 8106 350e 8851      		subi r24,24
 8107 3510 9E4F      		sbci r25,-2
 8108 3512 DC01      		movw r26,r24
 8109 3514 8D91      		ld r24,X+
 8110 3516 9C91      		ld r25,X
 8111 3518 AC01      		movw r20,r24
 8112 351a 4F5F      		subi r20,-1
 8113 351c 5F4F      		sbci r21,-1
 8114 351e BE01      		movw r22,r28
 8115 3520 6F5C      		subi r22,-49
 8116 3522 7F4F      		sbci r23,-1
 8117 3524 8FA9      		ldd r24,Y+55
 8118 3526 98AD      		ldd r25,Y+56
 8119 3528 21E0      		ldi r18,lo8(1)
 8120 352a 0E94 0000 		call allocREAL
1009:lp_solve_5.5/lp_simplex.c ****        allocINT (lp, &nzprow, lp->sum + 1,  FALSE) &&
 8121               		.loc 2 1009 0
 8122 352e 8823      		tst r24
 8123 3530 01F0      		breq .L273
 8124               		.loc 2 1009 0 is_stmt 0 discriminator 1
 8125 3532 8FA9      		ldd r24,Y+55
 8126 3534 98AD      		ldd r25,Y+56
 8127 3536 8851      		subi r24,24
 8128 3538 9E4F      		sbci r25,-2
 8129 353a FC01      		movw r30,r24
 8130 353c 8081      		ld r24,Z
 8131 353e 9181      		ldd r25,Z+1
 8132 3540 AC01      		movw r20,r24
 8133 3542 4F5F      		subi r20,-1
 8134 3544 5F4F      		sbci r21,-1
 8135 3546 BE01      		movw r22,r28
 8136 3548 6B5C      		subi r22,-53
 8137 354a 7F4F      		sbci r23,-1
 8138 354c 8FA9      		ldd r24,Y+55
 8139 354e 98AD      		ldd r25,Y+56
 8140 3550 20E0      		ldi r18,0
 8141 3552 0E94 0000 		call allocINT
1008:lp_solve_5.5/lp_simplex.c ****        allocINT (lp, &nzprow, lp->sum + 1,  FALSE) &&
 8142               		.loc 2 1008 0 is_stmt 1 discriminator 1
 8143 3556 8823      		tst r24
 8144 3558 01F0      		breq .L273
1010:lp_solve_5.5/lp_simplex.c ****        allocREAL(lp, &pcol,   lp->rows + 1, TRUE);
 8145               		.loc 2 1010 0 discriminator 4
 8146 355a 8FA9      		ldd r24,Y+55
 8147 355c 98AD      		ldd r25,Y+56
 8148 355e 8651      		subi r24,22
 8149 3560 9E4F      		sbci r25,-2
 8150 3562 DC01      		movw r26,r24
 8151 3564 8D91      		ld r24,X+
 8152 3566 9C91      		ld r25,X
 8153 3568 AC01      		movw r20,r24
 8154 356a 4F5F      		subi r20,-1
 8155 356c 5F4F      		sbci r21,-1
 8156 356e BE01      		movw r22,r28
 8157 3570 6D5C      		subi r22,-51
 8158 3572 7F4F      		sbci r23,-1
 8159 3574 8FA9      		ldd r24,Y+55
 8160 3576 98AD      		ldd r25,Y+56
 8161 3578 21E0      		ldi r18,lo8(1)
 8162 357a 0E94 0000 		call allocREAL
1009:lp_solve_5.5/lp_simplex.c ****        allocINT (lp, &nzprow, lp->sum + 1,  FALSE) &&
 8163               		.loc 2 1009 0 discriminator 4
 8164 357e 8823      		tst r24
 8165 3580 01F0      		breq .L273
1009:lp_solve_5.5/lp_simplex.c ****        allocINT (lp, &nzprow, lp->sum + 1,  FALSE) &&
 8166               		.loc 2 1009 0 is_stmt 0 discriminator 3
 8167 3582 81E0      		ldi r24,lo8(1)
 8168 3584 90E0      		ldi r25,0
 8169 3586 00C0      		rjmp .L274
 8170               	.L273:
1009:lp_solve_5.5/lp_simplex.c ****        allocINT (lp, &nzprow, lp->sum + 1,  FALSE) &&
 8171               		.loc 2 1009 0 discriminator 2
 8172 3588 80E0      		ldi r24,0
 8173 358a 90E0      		ldi r25,0
 8174               	.L274:
1008:lp_solve_5.5/lp_simplex.c ****        allocINT (lp, &nzprow, lp->sum + 1,  FALSE) &&
 8175               		.loc 2 1008 0 is_stmt 1
 8176 358c 998B      		std Y+17,r25
 8177 358e 888B      		std Y+16,r24
1011:lp_solve_5.5/lp_simplex.c ****   if(!ok)
 8178               		.loc 2 1011 0
 8179 3590 8889      		ldd r24,Y+16
 8180 3592 9989      		ldd r25,Y+17
 8181 3594 892B      		or r24,r25
 8182 3596 01F4      		brne .+4
 8183 3598 0C94 0000 		jmp .L400
1012:lp_solve_5.5/lp_simplex.c ****     goto Finish;
1013:lp_solve_5.5/lp_simplex.c **** 
1014:lp_solve_5.5/lp_simplex.c ****   /* Set non-zero P1extraVal value to force dual feasibility when the dual
1015:lp_solve_5.5/lp_simplex.c ****      simplex is used as a phase 1 algorithm for the primal simplex.
1016:lp_solve_5.5/lp_simplex.c ****      The value will be reset when primal feasibility has been achieved, or
1017:lp_solve_5.5/lp_simplex.c ****      a dual non-feasibility has been encountered (no candidate for a first
1018:lp_solve_5.5/lp_simplex.c ****      leaving variable) */
1019:lp_solve_5.5/lp_simplex.c ****   inP1extra = (MYBOOL) (dualoffset != 0);
 8184               		.loc 2 1019 0
 8185 359c 11E0      		ldi r17,lo8(1)
 8186 359e 20E0      		ldi r18,0
 8187 35a0 30E0      		ldi r19,0
 8188 35a2 A901      		movw r20,r18
 8189 35a4 6CAD      		ldd r22,Y+60
 8190 35a6 7DAD      		ldd r23,Y+61
 8191 35a8 8EAD      		ldd r24,Y+62
 8192 35aa 9FAD      		ldd r25,Y+63
 8193 35ac 0E94 0000 		call __nesf2
 8194 35b0 8823      		tst r24
 8195 35b2 01F4      		brne .L277
 8196 35b4 10E0      		ldi r17,0
 8197               	.L277:
 8198 35b6 1983      		std Y+1,r17
1020:lp_solve_5.5/lp_simplex.c ****   if(inP1extra) {
 8199               		.loc 2 1020 0
 8200 35b8 8981      		ldd r24,Y+1
 8201 35ba 8823      		tst r24
 8202 35bc 01F0      		breq .L278
1021:lp_solve_5.5/lp_simplex.c ****     set_OF_p1extra(lp, dualoffset);
 8203               		.loc 2 1021 0
 8204 35be 8CAD      		ldd r24,Y+60
 8205 35c0 9DAD      		ldd r25,Y+61
 8206 35c2 AEAD      		ldd r26,Y+62
 8207 35c4 BFAD      		ldd r27,Y+63
 8208 35c6 2FA9      		ldd r18,Y+55
 8209 35c8 38AD      		ldd r19,Y+56
 8210 35ca AC01      		movw r20,r24
 8211 35cc BD01      		movw r22,r26
 8212 35ce C901      		movw r24,r18
 8213 35d0 0E94 0000 		call set_OF_p1extra
1022:lp_solve_5.5/lp_simplex.c ****     simplexPricer(lp, (MYBOOL)!primal);
 8214               		.loc 2 1022 0
 8215 35d4 81E0      		ldi r24,lo8(1)
 8216 35d6 9C89      		ldd r25,Y+20
 8217 35d8 9923      		tst r25
 8218 35da 01F0      		breq .L279
 8219 35dc 80E0      		ldi r24,0
 8220               	.L279:
 8221 35de 282F      		mov r18,r24
 8222 35e0 8FA9      		ldd r24,Y+55
 8223 35e2 98AD      		ldd r25,Y+56
 8224 35e4 622F      		mov r22,r18
 8225 35e6 0E94 0000 		call simplexPricer
1023:lp_solve_5.5/lp_simplex.c ****     invert(lp, INITSOL_USEZERO, TRUE);
 8226               		.loc 2 1023 0
 8227 35ea 8FA9      		ldd r24,Y+55
 8228 35ec 98AD      		ldd r25,Y+56
 8229 35ee 41E0      		ldi r20,lo8(1)
 8230 35f0 61E0      		ldi r22,lo8(1)
 8231 35f2 0E94 0000 		call invert
 8232 35f6 00C0      		rjmp .L280
 8233               	.L278:
1024:lp_solve_5.5/lp_simplex.c ****   }
1025:lp_solve_5.5/lp_simplex.c ****   else
1026:lp_solve_5.5/lp_simplex.c ****     restartPricer(lp, (MYBOOL)!primal);
 8234               		.loc 2 1026 0
 8235 35f8 81E0      		ldi r24,lo8(1)
 8236 35fa 9C89      		ldd r25,Y+20
 8237 35fc 9923      		tst r25
 8238 35fe 01F0      		breq .L281
 8239 3600 80E0      		ldi r24,0
 8240               	.L281:
 8241 3602 282F      		mov r18,r24
 8242 3604 8FA9      		ldd r24,Y+55
 8243 3606 98AD      		ldd r25,Y+56
 8244 3608 622F      		mov r22,r18
 8245 360a 0E94 0000 		call restartPricer
 8246               	.L280:
1027:lp_solve_5.5/lp_simplex.c **** 
1028:lp_solve_5.5/lp_simplex.c ****   /* Prepare dual long-step structures */
1029:lp_solve_5.5/lp_simplex.c **** #if 0
1030:lp_solve_5.5/lp_simplex.c ****   longsteps = TRUE;
1031:lp_solve_5.5/lp_simplex.c **** #elif 0
1032:lp_solve_5.5/lp_simplex.c ****   longsteps = (MYBOOL) ((MIP_count(lp) > 0) && (lp->bb_level > 1));
1033:lp_solve_5.5/lp_simplex.c **** #elif 0
1034:lp_solve_5.5/lp_simplex.c ****   longsteps = (MYBOOL) ((MIP_count(lp) > 0) && (lp->solutioncount >= 1));
1035:lp_solve_5.5/lp_simplex.c **** #else
1036:lp_solve_5.5/lp_simplex.c ****   longsteps = FALSE;
 8247               		.loc 2 1036 0
 8248 360e 1B8E      		std Y+27,__zero_reg__
1037:lp_solve_5.5/lp_simplex.c **** #endif
1038:lp_solve_5.5/lp_simplex.c **** #ifdef UseLongStepDualPhase1
1039:lp_solve_5.5/lp_simplex.c ****   longsteps = !dualfeasible && (MYBOOL) (dualinfeasibles != NULL);
1040:lp_solve_5.5/lp_simplex.c **** #endif
1041:lp_solve_5.5/lp_simplex.c **** 
1042:lp_solve_5.5/lp_simplex.c ****   if(longsteps) {
 8249               		.loc 2 1042 0
 8250 3610 8B8D      		ldd r24,Y+27
 8251 3612 8823      		tst r24
 8252 3614 01F4      		brne .+2
 8253 3616 00C0      		rjmp .L282
1043:lp_solve_5.5/lp_simplex.c ****     lp->longsteps = multi_create(lp, TRUE);
 8254               		.loc 2 1043 0
 8255 3618 8FA9      		ldd r24,Y+55
 8256 361a 98AD      		ldd r25,Y+56
 8257 361c 61E0      		ldi r22,lo8(1)
 8258 361e 0E94 0000 		call multi_create
 8259 3622 9C01      		movw r18,r24
 8260 3624 8FA9      		ldd r24,Y+55
 8261 3626 98AD      		ldd r25,Y+56
 8262 3628 8455      		subi r24,84
 8263 362a 9D4F      		sbci r25,-3
 8264 362c FC01      		movw r30,r24
 8265 362e 3183      		std Z+1,r19
 8266 3630 2083      		st Z,r18
1044:lp_solve_5.5/lp_simplex.c ****     ok = (lp->longsteps != NULL) &&
 8267               		.loc 2 1044 0
 8268 3632 8FA9      		ldd r24,Y+55
 8269 3634 98AD      		ldd r25,Y+56
 8270 3636 8455      		subi r24,84
 8271 3638 9D4F      		sbci r25,-3
 8272 363a DC01      		movw r26,r24
 8273 363c 8D91      		ld r24,X+
 8274 363e 9C91      		ld r25,X
 8275 3640 892B      		or r24,r25
 8276 3642 01F0      		breq .L283
1045:lp_solve_5.5/lp_simplex.c ****          multi_resize(lp->longsteps, MIN(lp->boundedvars+2, 11), 1, TRUE, TRUE);
 8277               		.loc 2 1045 0 discriminator 1
 8278 3644 8FA9      		ldd r24,Y+55
 8279 3646 98AD      		ldd r25,Y+56
 8280 3648 8051      		subi r24,16
 8281 364a 9E4F      		sbci r25,-2
 8282 364c FC01      		movw r30,r24
 8283 364e 8081      		ld r24,Z
 8284 3650 9181      		ldd r25,Z+1
 8285 3652 0296      		adiw r24,2
 8286 3654 8C30      		cpi r24,12
 8287 3656 9105      		cpc r25,__zero_reg__
 8288 3658 04F0      		brlt .L284
 8289 365a 8BE0      		ldi r24,lo8(11)
 8290 365c 90E0      		ldi r25,0
 8291               	.L284:
 8292 365e 2FA9      		ldd r18,Y+55
 8293 3660 38AD      		ldd r19,Y+56
 8294 3662 2455      		subi r18,84
 8295 3664 3D4F      		sbci r19,-3
 8296 3666 D901      		movw r26,r18
 8297 3668 ED91      		ld r30,X+
 8298 366a FC91      		ld r31,X
 8299 366c 01E0      		ldi r16,lo8(1)
 8300 366e 21E0      		ldi r18,lo8(1)
 8301 3670 41E0      		ldi r20,lo8(1)
 8302 3672 50E0      		ldi r21,0
 8303 3674 BC01      		movw r22,r24
 8304 3676 CF01      		movw r24,r30
 8305 3678 0E94 0000 		call multi_resize
1044:lp_solve_5.5/lp_simplex.c ****     ok = (lp->longsteps != NULL) &&
 8306               		.loc 2 1044 0 discriminator 1
 8307 367c 8823      		tst r24
 8308 367e 01F0      		breq .L283
1044:lp_solve_5.5/lp_simplex.c ****     ok = (lp->longsteps != NULL) &&
 8309               		.loc 2 1044 0 is_stmt 0 discriminator 3
 8310 3680 81E0      		ldi r24,lo8(1)
 8311 3682 90E0      		ldi r25,0
 8312 3684 00C0      		rjmp .L285
 8313               	.L283:
1044:lp_solve_5.5/lp_simplex.c ****     ok = (lp->longsteps != NULL) &&
 8314               		.loc 2 1044 0 discriminator 4
 8315 3686 80E0      		ldi r24,0
 8316 3688 90E0      		ldi r25,0
 8317               	.L285:
1044:lp_solve_5.5/lp_simplex.c ****     ok = (lp->longsteps != NULL) &&
 8318               		.loc 2 1044 0 discriminator 6
 8319 368a 998B      		std Y+17,r25
 8320 368c 888B      		std Y+16,r24
1046:lp_solve_5.5/lp_simplex.c ****     if(!ok)
 8321               		.loc 2 1046 0 is_stmt 1 discriminator 6
 8322 368e 8889      		ldd r24,Y+16
 8323 3690 9989      		ldd r25,Y+17
 8324 3692 892B      		or r24,r25
 8325 3694 01F4      		brne .+4
 8326 3696 0C94 0000 		jmp .L401
1047:lp_solve_5.5/lp_simplex.c ****       goto Finish;
1048:lp_solve_5.5/lp_simplex.c **** #ifdef UseLongStepPruning
1049:lp_solve_5.5/lp_simplex.c ****     lp->longsteps->objcheck = TRUE;
1050:lp_solve_5.5/lp_simplex.c **** #endif
1051:lp_solve_5.5/lp_simplex.c ****     boundswaps = multi_indexSet(lp->longsteps, FALSE);
 8327               		.loc 2 1051 0
 8328 369a 8FA9      		ldd r24,Y+55
 8329 369c 98AD      		ldd r25,Y+56
 8330 369e 8455      		subi r24,84
 8331 36a0 9D4F      		sbci r25,-3
 8332 36a2 FC01      		movw r30,r24
 8333 36a4 8081      		ld r24,Z
 8334 36a6 9181      		ldd r25,Z+1
 8335 36a8 60E0      		ldi r22,0
 8336 36aa 0E94 0000 		call multi_indexSet
 8337 36ae 9B8B      		std Y+19,r25
 8338 36b0 8A8B      		std Y+18,r24
 8339               	.L282:
1052:lp_solve_5.5/lp_simplex.c ****   }
1053:lp_solve_5.5/lp_simplex.c **** 
1054:lp_solve_5.5/lp_simplex.c ****   /* Do regular dual simplex variable initializations */
1055:lp_solve_5.5/lp_simplex.c ****   lp->spx_status = RUNNING;
 8340               		.loc 2 1055 0
 8341 36b2 8FA9      		ldd r24,Y+55
 8342 36b4 98AD      		ldd r25,Y+56
 8343 36b6 8A5F      		subi r24,-6
 8344 36b8 9D4F      		sbci r25,-3
 8345 36ba 28E0      		ldi r18,lo8(8)
 8346 36bc 30E0      		ldi r19,0
 8347 36be DC01      		movw r26,r24
 8348 36c0 2D93      		st X+,r18
 8349 36c2 3C93      		st X,r19
1056:lp_solve_5.5/lp_simplex.c ****   minit = ITERATE_MAJORMAJOR;
 8350               		.loc 2 1056 0
 8351 36c4 1C82      		std Y+4,__zero_reg__
1057:lp_solve_5.5/lp_simplex.c ****   epsvalue = lp->epspivot;
 8352               		.loc 2 1057 0
 8353 36c6 8FA9      		ldd r24,Y+55
 8354 36c8 98AD      		ldd r25,Y+56
 8355 36ca 8E5D      		subi r24,-34
 8356 36cc 9C4F      		sbci r25,-4
 8357 36ce FC01      		movw r30,r24
 8358 36d0 8081      		ld r24,Z
 8359 36d2 9181      		ldd r25,Z+1
 8360 36d4 A281      		ldd r26,Z+2
 8361 36d6 B381      		ldd r27,Z+3
 8362 36d8 8C8F      		std Y+28,r24
 8363 36da 9D8F      		std Y+29,r25
 8364 36dc AE8F      		std Y+30,r26
 8365 36de BF8F      		std Y+31,r27
1058:lp_solve_5.5/lp_simplex.c **** 
1059:lp_solve_5.5/lp_simplex.c ****   ok = stallMonitor_create(lp, TRUE, "dualloop");
 8366               		.loc 2 1059 0
 8367 36e0 8FA9      		ldd r24,Y+55
 8368 36e2 98AD      		ldd r25,Y+56
 8369 36e4 40E0      		ldi r20,lo8(.LC22)
 8370 36e6 50E0      		ldi r21,hi8(.LC22)
 8371 36e8 61E0      		ldi r22,lo8(1)
 8372 36ea 0E94 0000 		call stallMonitor_create
 8373 36ee 882F      		mov r24,r24
 8374 36f0 90E0      		ldi r25,0
 8375 36f2 998B      		std Y+17,r25
 8376 36f4 888B      		std Y+16,r24
1060:lp_solve_5.5/lp_simplex.c ****   if(!ok)
 8377               		.loc 2 1060 0
 8378 36f6 8889      		ldd r24,Y+16
 8379 36f8 9989      		ldd r25,Y+17
 8380 36fa 892B      		or r24,r25
 8381 36fc 01F4      		brne .+4
 8382 36fe 0C94 0000 		jmp .L402
1061:lp_solve_5.5/lp_simplex.c ****     goto Finish;
1062:lp_solve_5.5/lp_simplex.c **** 
1063:lp_solve_5.5/lp_simplex.c ****   lp->rejectpivot[0] = 0;
 8383               		.loc 2 1063 0
 8384 3702 8FA9      		ldd r24,Y+55
 8385 3704 98AD      		ldd r25,Y+56
 8386 3706 8C52      		subi r24,44
 8387 3708 9D4F      		sbci r25,-3
 8388 370a DC01      		movw r26,r24
 8389 370c 8D91      		ld r24,X+
 8390 370e 9C91      		ld r25,X
 8391 3710 FC01      		movw r30,r24
 8392 3712 1182      		std Z+1,__zero_reg__
 8393 3714 1082      		st Z,__zero_reg__
1064:lp_solve_5.5/lp_simplex.c ****   if(dualfeasible)
 8394               		.loc 2 1064 0
 8395 3716 89AD      		ldd r24,Y+57
 8396 3718 8823      		tst r24
 8397 371a 01F0      		breq .L288
1065:lp_solve_5.5/lp_simplex.c ****     lp->simplex_mode = SIMPLEX_Phase2_DUAL;
 8398               		.loc 2 1065 0
 8399 371c 8FA9      		ldd r24,Y+55
 8400 371e 98AD      		ldd r25,Y+56
 8401 3720 8A5A      		subi r24,-86
 8402 3722 9D4F      		sbci r25,-3
 8403 3724 28E0      		ldi r18,lo8(8)
 8404 3726 30E0      		ldi r19,0
 8405 3728 DC01      		movw r26,r24
 8406 372a 2D93      		st X+,r18
 8407 372c 3C93      		st X,r19
 8408 372e 00C0      		rjmp .L289
 8409               	.L288:
1066:lp_solve_5.5/lp_simplex.c ****   else
1067:lp_solve_5.5/lp_simplex.c ****     lp->simplex_mode = SIMPLEX_Phase1_DUAL;
 8410               		.loc 2 1067 0
 8411 3730 8FA9      		ldd r24,Y+55
 8412 3732 98AD      		ldd r25,Y+56
 8413 3734 8A5A      		subi r24,-86
 8414 3736 9D4F      		sbci r25,-3
 8415 3738 22E0      		ldi r18,lo8(2)
 8416 373a 30E0      		ldi r19,0
 8417 373c FC01      		movw r30,r24
 8418 373e 3183      		std Z+1,r19
 8419 3740 2083      		st Z,r18
 8420               	.L289:
1068:lp_solve_5.5/lp_simplex.c **** 
1069:lp_solve_5.5/lp_simplex.c ****   /* Check if we have equality slacks in the basis and we should try to
1070:lp_solve_5.5/lp_simplex.c ****      drive them out in order to reduce chance of degeneracy in Phase 1.
1071:lp_solve_5.5/lp_simplex.c ****      forceoutEQ = FALSE :    Only eliminate assured "good" violated
1072:lp_solve_5.5/lp_simplex.c ****                              equality constraint slacks
1073:lp_solve_5.5/lp_simplex.c ****                   AUTOMATIC: Seek more elimination of equality constraint
1074:lp_solve_5.5/lp_simplex.c ****                              slacks (but not as aggressive as the rule
1075:lp_solve_5.5/lp_simplex.c ****                              used in lp_solve v4.0 and earlier)
1076:lp_solve_5.5/lp_simplex.c ****                   TRUE:      Force remaining equality slacks out of the
1077:lp_solve_5.5/lp_simplex.c ****                              basis */
1078:lp_solve_5.5/lp_simplex.c ****   if(dualphase1 || inP1extra ||
 8421               		.loc 2 1078 0
 8422 3742 8A81      		ldd r24,Y+2
 8423 3744 8823      		tst r24
 8424 3746 01F4      		brne .L290
 8425               		.loc 2 1078 0 is_stmt 0 discriminator 1
 8426 3748 8981      		ldd r24,Y+1
 8427 374a 8823      		tst r24
 8428 374c 01F4      		brne .L290
1079:lp_solve_5.5/lp_simplex.c ****      ((lp->fixedvars > 0) && is_anti_degen(lp, ANTIDEGEN_FIXEDVARS))) {
 8429               		.loc 2 1079 0 is_stmt 1 discriminator 2
 8430 374e 8FA9      		ldd r24,Y+55
 8431 3750 98AD      		ldd r25,Y+56
 8432 3752 8457      		subi r24,116
 8433 3754 9D4F      		sbci r25,-3
 8434 3756 DC01      		movw r26,r24
 8435 3758 8D91      		ld r24,X+
 8436 375a 9C91      		ld r25,X
1078:lp_solve_5.5/lp_simplex.c ****      ((lp->fixedvars > 0) && is_anti_degen(lp, ANTIDEGEN_FIXEDVARS))) {
 8437               		.loc 2 1078 0 discriminator 2
 8438 375c 1816      		cp __zero_reg__,r24
 8439 375e 1906      		cpc __zero_reg__,r25
 8440 3760 04F4      		brge .L291
 8441               		.loc 2 1079 0
 8442 3762 8FA9      		ldd r24,Y+55
 8443 3764 98AD      		ldd r25,Y+56
 8444 3766 61E0      		ldi r22,lo8(1)
 8445 3768 70E0      		ldi r23,0
 8446 376a 0E94 0000 		call is_anti_degen
 8447 376e 8823      		tst r24
 8448 3770 01F0      		breq .L291
 8449               	.L290:
1080:lp_solve_5.5/lp_simplex.c ****     forceoutEQ = AUTOMATIC;
 8450               		.loc 2 1080 0
 8451 3772 82E0      		ldi r24,lo8(2)
 8452 3774 8AA3      		std Y+34,r24
 8453               	.L291:
1081:lp_solve_5.5/lp_simplex.c ****   }
1082:lp_solve_5.5/lp_simplex.c **** #if 1
1083:lp_solve_5.5/lp_simplex.c ****   if(is_anti_degen(lp, ANTIDEGEN_DYNAMIC) && (bin_count(lp, TRUE)*2 > lp->columns)) {
 8454               		.loc 2 1083 0
 8455 3776 8FA9      		ldd r24,Y+55
 8456 3778 98AD      		ldd r25,Y+56
 8457 377a 60E4      		ldi r22,lo8(64)
 8458 377c 70E0      		ldi r23,0
 8459 377e 0E94 0000 		call is_anti_degen
 8460 3782 8823      		tst r24
 8461 3784 01F4      		brne .+4
 8462 3786 0C94 0000 		jmp .L294
 8463               		.loc 2 1083 0 is_stmt 0 discriminator 1
 8464 378a 8FA9      		ldd r24,Y+55
 8465 378c 98AD      		ldd r25,Y+56
 8466 378e 61E0      		ldi r22,lo8(1)
 8467 3790 0E94 0000 		call bin_count
 8468 3794 9C01      		movw r18,r24
 8469 3796 220F      		lsl r18
 8470 3798 331F      		rol r19
 8471 379a 8FA9      		ldd r24,Y+55
 8472 379c 98AD      		ldd r25,Y+56
 8473 379e 8451      		subi r24,20
 8474 37a0 9E4F      		sbci r25,-2
 8475 37a2 FC01      		movw r30,r24
 8476 37a4 8081      		ld r24,Z
 8477 37a6 9181      		ldd r25,Z+1
 8478 37a8 8217      		cp r24,r18
 8479 37aa 9307      		cpc r25,r19
 8480 37ac 04F0      		brlt .+4
 8481 37ae 0C94 0000 		jmp .L294
1084:lp_solve_5.5/lp_simplex.c ****     switch (forceoutEQ) {
 8482               		.loc 2 1084 0 is_stmt 1
 8483 37b2 8AA1      		ldd r24,Y+34
 8484 37b4 882F      		mov r24,r24
 8485 37b6 90E0      		ldi r25,0
 8486 37b8 892B      		or r24,r25
 8487 37ba 01F4      		brne .L292
1085:lp_solve_5.5/lp_simplex.c ****       case FALSE:     forceoutEQ = AUTOMATIC;
 8488               		.loc 2 1085 0
 8489 37bc 82E0      		ldi r24,lo8(2)
 8490 37be 8AA3      		std Y+34,r24
1086:lp_solve_5.5/lp_simplex.c ****                       break;
 8491               		.loc 2 1086 0
 8492 37c0 0000      		nop
 8493               	.L292:
1087:lp_solve_5.5/lp_simplex.c ****  /*     case AUTOMATIC: forceoutEQ = TRUE;
1088:lp_solve_5.5/lp_simplex.c ****                       break;
1089:lp_solve_5.5/lp_simplex.c ****       default:        forceoutEQ = TRUE; */
1090:lp_solve_5.5/lp_simplex.c ****     }
1091:lp_solve_5.5/lp_simplex.c ****   }
1092:lp_solve_5.5/lp_simplex.c **** #endif
1093:lp_solve_5.5/lp_simplex.c **** 
1094:lp_solve_5.5/lp_simplex.c ****   while((lp->spx_status == RUNNING) && !userabort(lp, -1)) {
 8494               		.loc 2 1094 0
 8495 37c2 0C94 0000 		jmp .L294
 8496               	.L384:
1095:lp_solve_5.5/lp_simplex.c **** 
1096:lp_solve_5.5/lp_simplex.c ****     /* Check if we have stalling (from numerics or degenerate cycling) */
1097:lp_solve_5.5/lp_simplex.c ****     pricerCanChange = !dualphase1 && !inP1extra;
 8497               		.loc 2 1097 0
 8498 37c6 8A81      		ldd r24,Y+2
 8499 37c8 8823      		tst r24
 8500 37ca 01F4      		brne .L295
 8501               		.loc 2 1097 0 is_stmt 0 discriminator 1
 8502 37cc 8981      		ldd r24,Y+1
 8503 37ce 8823      		tst r24
 8504 37d0 01F4      		brne .L295
 8505               		.loc 2 1097 0 discriminator 3
 8506 37d2 81E0      		ldi r24,lo8(1)
 8507 37d4 90E0      		ldi r25,0
 8508 37d6 00C0      		rjmp .L296
 8509               	.L295:
 8510               		.loc 2 1097 0 discriminator 4
 8511 37d8 80E0      		ldi r24,0
 8512 37da 90E0      		ldi r25,0
 8513               	.L296:
 8514               		.loc 2 1097 0 discriminator 6
 8515 37dc 88A3      		std Y+32,r24
1098:lp_solve_5.5/lp_simplex.c ****     stallaccept = stallMonitor_check(lp, rownr, colnr, lastnr, minit, pricerCanChange, &forceoutEQ)
 8516               		.loc 2 1098 0 is_stmt 1 discriminator 6
 8517 37de FE01      		movw r30,r28
 8518 37e0 B296      		adiw r30,34
 8519 37e2 2C85      		ldd r18,Y+12
 8520 37e4 3D85      		ldd r19,Y+13
 8521 37e6 4885      		ldd r20,Y+8
 8522 37e8 5985      		ldd r21,Y+9
 8523 37ea 6A85      		ldd r22,Y+10
 8524 37ec 7B85      		ldd r23,Y+11
 8525 37ee 8FA9      		ldd r24,Y+55
 8526 37f0 98AD      		ldd r25,Y+56
 8527 37f2 6F01      		movw r12,r30
 8528 37f4 E8A0      		ldd r14,Y+32
 8529 37f6 0C81      		ldd r16,Y+4
 8530 37f8 0E94 0000 		call stallMonitor_check
 8531 37fc 89A3      		std Y+33,r24
1099:lp_solve_5.5/lp_simplex.c ****     if(!stallaccept)
 8532               		.loc 2 1099 0 discriminator 6
 8533 37fe 89A1      		ldd r24,Y+33
 8534 3800 8823      		tst r24
 8535 3802 01F4      		brne .+4
 8536 3804 0C94 0000 		jmp .L403
1100:lp_solve_5.5/lp_simplex.c ****       break;
1101:lp_solve_5.5/lp_simplex.c **** 
1102:lp_solve_5.5/lp_simplex.c ****     /* Store current LP index for reference at next iteration */
1103:lp_solve_5.5/lp_simplex.c ****     changedphase = FALSE;
 8537               		.loc 2 1103 0
 8538 3808 1B82      		std Y+3,__zero_reg__
1104:lp_solve_5.5/lp_simplex.c **** 
1105:lp_solve_5.5/lp_simplex.c ****     /* Compute (pure) dual phase1 offsets / reduced costs if appropriate */
1106:lp_solve_5.5/lp_simplex.c ****     dualphase1 &= (MYBOOL) (lp->simplex_mode == SIMPLEX_Phase1_DUAL);
 8539               		.loc 2 1106 0
 8540 380a 8FA9      		ldd r24,Y+55
 8541 380c 98AD      		ldd r25,Y+56
 8542 380e 8A5A      		subi r24,-86
 8543 3810 9D4F      		sbci r25,-3
 8544 3812 DC01      		movw r26,r24
 8545 3814 8D91      		ld r24,X+
 8546 3816 9C91      		ld r25,X
 8547 3818 21E0      		ldi r18,lo8(1)
 8548 381a 0297      		sbiw r24,2
 8549 381c 01F0      		breq .L298
 8550 381e 20E0      		ldi r18,0
 8551               	.L298:
 8552 3820 922F      		mov r25,r18
 8553 3822 8A81      		ldd r24,Y+2
 8554 3824 8923      		and r24,r25
 8555 3826 8A83      		std Y+2,r24
1107:lp_solve_5.5/lp_simplex.c ****     if(longsteps && dualphase1 && !inP1extra) {
 8556               		.loc 2 1107 0
 8557 3828 8B8D      		ldd r24,Y+27
 8558 382a 8823      		tst r24
 8559 382c 01F4      		brne .+2
 8560 382e 00C0      		rjmp .L299
 8561               		.loc 2 1107 0 is_stmt 0 discriminator 1
 8562 3830 8A81      		ldd r24,Y+2
 8563 3832 8823      		tst r24
 8564 3834 01F4      		brne .+2
 8565 3836 00C0      		rjmp .L299
 8566               		.loc 2 1107 0 discriminator 2
 8567 3838 8981      		ldd r24,Y+1
 8568 383a 8823      		tst r24
 8569 383c 01F0      		breq .+2
 8570 383e 00C0      		rjmp .L299
1108:lp_solve_5.5/lp_simplex.c ****       obtain_column(lp, dualinfeasibles[1], pcol, NULL, NULL);
 8571               		.loc 2 1108 0 is_stmt 1
 8572 3840 4BA9      		ldd r20,Y+51
 8573 3842 5CA9      		ldd r21,Y+52
 8574 3844 8AAD      		ldd r24,Y+58
 8575 3846 9BAD      		ldd r25,Y+59
 8576 3848 0296      		adiw r24,2
 8577 384a FC01      		movw r30,r24
 8578 384c 6081      		ld r22,Z
 8579 384e 7181      		ldd r23,Z+1
 8580 3850 8FA9      		ldd r24,Y+55
 8581 3852 98AD      		ldd r25,Y+56
 8582 3854 00E0      		ldi r16,0
 8583 3856 10E0      		ldi r17,0
 8584 3858 20E0      		ldi r18,0
 8585 385a 30E0      		ldi r19,0
 8586 385c 0E94 0000 		call obtain_column
1109:lp_solve_5.5/lp_simplex.c ****       i = 2;
 8587               		.loc 2 1109 0
 8588 3860 82E0      		ldi r24,lo8(2)
 8589 3862 90E0      		ldi r25,0
 8590 3864 9F83      		std Y+7,r25
 8591 3866 8E83      		std Y+6,r24
1110:lp_solve_5.5/lp_simplex.c ****       for(i = 2; i <= dualinfeasibles[0]; i++)
 8592               		.loc 2 1110 0
 8593 3868 82E0      		ldi r24,lo8(2)
 8594 386a 90E0      		ldi r25,0
 8595 386c 9F83      		std Y+7,r25
 8596 386e 8E83      		std Y+6,r24
 8597 3870 00C0      		rjmp .L300
 8598               	.L301:
1111:lp_solve_5.5/lp_simplex.c ****         mat_multadd(lp->matA, pcol, dualinfeasibles[i], 1.0);
 8599               		.loc 2 1111 0 discriminator 3
 8600 3872 8E81      		ldd r24,Y+6
 8601 3874 9F81      		ldd r25,Y+7
 8602 3876 880F      		lsl r24
 8603 3878 991F      		rol r25
 8604 387a 2AAD      		ldd r18,Y+58
 8605 387c 3BAD      		ldd r19,Y+59
 8606 387e 820F      		add r24,r18
 8607 3880 931F      		adc r25,r19
 8608 3882 DC01      		movw r26,r24
 8609 3884 4D91      		ld r20,X+
 8610 3886 5C91      		ld r21,X
 8611 3888 6BA9      		ldd r22,Y+51
 8612 388a 7CA9      		ldd r23,Y+52
 8613 388c 8FA9      		ldd r24,Y+55
 8614 388e 98AD      		ldd r25,Y+56
 8615 3890 8A54      		subi r24,74
 8616 3892 9D4F      		sbci r25,-3
 8617 3894 FC01      		movw r30,r24
 8618 3896 8081      		ld r24,Z
 8619 3898 9181      		ldd r25,Z+1
 8620 389a 00E0      		ldi r16,0
 8621 389c 10E0      		ldi r17,0
 8622 389e 20E8      		ldi r18,lo8(-128)
 8623 38a0 3FE3      		ldi r19,lo8(63)
 8624 38a2 0E94 0000 		call mat_multadd
1110:lp_solve_5.5/lp_simplex.c ****       for(i = 2; i <= dualinfeasibles[0]; i++)
 8625               		.loc 2 1110 0 discriminator 3
 8626 38a6 8E81      		ldd r24,Y+6
 8627 38a8 9F81      		ldd r25,Y+7
 8628 38aa 0196      		adiw r24,1
 8629 38ac 9F83      		std Y+7,r25
 8630 38ae 8E83      		std Y+6,r24
 8631               	.L300:
1110:lp_solve_5.5/lp_simplex.c ****       for(i = 2; i <= dualinfeasibles[0]; i++)
 8632               		.loc 2 1110 0 is_stmt 0 discriminator 1
 8633 38b0 8AAD      		ldd r24,Y+58
 8634 38b2 9BAD      		ldd r25,Y+59
 8635 38b4 DC01      		movw r26,r24
 8636 38b6 2D91      		ld r18,X+
 8637 38b8 3C91      		ld r19,X
 8638 38ba 8E81      		ldd r24,Y+6
 8639 38bc 9F81      		ldd r25,Y+7
 8640 38be 2817      		cp r18,r24
 8641 38c0 3907      		cpc r19,r25
 8642 38c2 04F4      		brge .L301
1112:lp_solve_5.5/lp_simplex.c ****       /* Solve (note that solved pcol will be used instead of lp->rhs) */
1113:lp_solve_5.5/lp_simplex.c ****       ftran(lp, pcol, NULL, lp->epsmachine);
 8643               		.loc 2 1113 0 is_stmt 1
 8644 38c4 8FA9      		ldd r24,Y+55
 8645 38c6 98AD      		ldd r25,Y+56
 8646 38c8 8E5E      		subi r24,-18
 8647 38ca 9C4F      		sbci r25,-4
 8648 38cc FC01      		movw r30,r24
 8649 38ce 8081      		ld r24,Z
 8650 38d0 9181      		ldd r25,Z+1
 8651 38d2 A281      		ldd r26,Z+2
 8652 38d4 B381      		ldd r27,Z+3
 8653 38d6 6BA9      		ldd r22,Y+51
 8654 38d8 7CA9      		ldd r23,Y+52
 8655 38da EFA9      		ldd r30,Y+55
 8656 38dc F8AD      		ldd r31,Y+56
 8657 38de 8C01      		movw r16,r24
 8658 38e0 9D01      		movw r18,r26
 8659 38e2 40E0      		ldi r20,0
 8660 38e4 50E0      		ldi r21,0
 8661 38e6 CF01      		movw r24,r30
 8662 38e8 0E94 0000 		call ftran
 8663               	.L299:
1114:lp_solve_5.5/lp_simplex.c ****     }
1115:lp_solve_5.5/lp_simplex.c **** 
1116:lp_solve_5.5/lp_simplex.c ****     /* Do minor iterations (non-basic variable bound flips) for as
1117:lp_solve_5.5/lp_simplex.c ****        long as possible since this is a cheap way of iterating */
1118:lp_solve_5.5/lp_simplex.c **** #if (defined dual_Phase1PriceEqualities) || (defined dual_UseRejectionList)
1119:lp_solve_5.5/lp_simplex.c **** RetryRow:
1120:lp_solve_5.5/lp_simplex.c **** #endif
1121:lp_solve_5.5/lp_simplex.c ****     if(minit != ITERATE_MINORRETRY) {
 8664               		.loc 2 1121 0
 8665 38ec 8C81      		ldd r24,Y+4
 8666 38ee 8230      		cpi r24,lo8(2)
 8667 38f0 01F4      		brne .+2
 8668 38f2 00C0      		rjmp .L302
1122:lp_solve_5.5/lp_simplex.c ****       i = 0;
 8669               		.loc 2 1122 0
 8670 38f4 1F82      		std Y+7,__zero_reg__
 8671 38f6 1E82      		std Y+6,__zero_reg__
 8672               	.L307:
1123:lp_solve_5.5/lp_simplex.c ****       do {
1124:lp_solve_5.5/lp_simplex.c ****         i++;
 8673               		.loc 2 1124 0
 8674 38f8 8E81      		ldd r24,Y+6
 8675 38fa 9F81      		ldd r25,Y+7
 8676 38fc 0196      		adiw r24,1
 8677 38fe 9F83      		std Y+7,r25
 8678 3900 8E83      		std Y+6,r24
1125:lp_solve_5.5/lp_simplex.c ****         rownr = rowdual(lp, my_if(dualphase1, pcol, NULL), forceoutEQ, TRUE, &xviolated);
 8679               		.loc 2 1125 0
 8680 3902 4AA1      		ldd r20,Y+34
 8681 3904 8A81      		ldd r24,Y+2
 8682 3906 8823      		tst r24
 8683 3908 01F0      		breq .L303
 8684               		.loc 2 1125 0 is_stmt 0 discriminator 1
 8685 390a 8BA9      		ldd r24,Y+51
 8686 390c 9CA9      		ldd r25,Y+52
 8687 390e 00C0      		rjmp .L304
 8688               	.L303:
 8689               		.loc 2 1125 0 discriminator 2
 8690 3910 80E0      		ldi r24,0
 8691 3912 90E0      		ldi r25,0
 8692               	.L304:
 8693               		.loc 2 1125 0 discriminator 4
 8694 3914 9E01      		movw r18,r28
 8695 3916 275D      		subi r18,-41
 8696 3918 3F4F      		sbci r19,-1
 8697 391a EFA9      		ldd r30,Y+55
 8698 391c F8AD      		ldd r31,Y+56
 8699 391e 8901      		movw r16,r18
 8700 3920 21E0      		ldi r18,lo8(1)
 8701 3922 BC01      		movw r22,r24
 8702 3924 CF01      		movw r24,r30
 8703 3926 0E94 0000 		call rowdual
 8704 392a 9B87      		std Y+11,r25
 8705 392c 8A87      		std Y+10,r24
1126:lp_solve_5.5/lp_simplex.c ****       } while ((rownr == 0) && (i < partial_countBlocks(lp, (MYBOOL) !primal)) &&
1127:lp_solve_5.5/lp_simplex.c ****                                 partial_blockStep(lp, (MYBOOL) !primal));
 8706               		.loc 2 1127 0 is_stmt 1 discriminator 4
 8707 392e 8A85      		ldd r24,Y+10
 8708 3930 9B85      		ldd r25,Y+11
 8709 3932 892B      		or r24,r25
 8710 3934 01F4      		brne .L302
1126:lp_solve_5.5/lp_simplex.c ****       } while ((rownr == 0) && (i < partial_countBlocks(lp, (MYBOOL) !primal)) &&
 8711               		.loc 2 1126 0
 8712 3936 81E0      		ldi r24,lo8(1)
 8713 3938 9C89      		ldd r25,Y+20
 8714 393a 9923      		tst r25
 8715 393c 01F0      		breq .L305
 8716 393e 80E0      		ldi r24,0
 8717               	.L305:
 8718 3940 282F      		mov r18,r24
 8719 3942 8FA9      		ldd r24,Y+55
 8720 3944 98AD      		ldd r25,Y+56
 8721 3946 622F      		mov r22,r18
 8722 3948 0E94 0000 		call partial_countBlocks
 8723 394c 9C01      		movw r18,r24
 8724 394e 8E81      		ldd r24,Y+6
 8725 3950 9F81      		ldd r25,Y+7
 8726 3952 8217      		cp r24,r18
 8727 3954 9307      		cpc r25,r19
 8728 3956 04F4      		brge .L302
 8729               		.loc 2 1127 0 discriminator 1
 8730 3958 81E0      		ldi r24,lo8(1)
 8731 395a 9C89      		ldd r25,Y+20
 8732 395c 9923      		tst r25
 8733 395e 01F0      		breq .L306
 8734 3960 80E0      		ldi r24,0
 8735               	.L306:
 8736 3962 282F      		mov r18,r24
 8737 3964 8FA9      		ldd r24,Y+55
 8738 3966 98AD      		ldd r25,Y+56
 8739 3968 622F      		mov r22,r18
 8740 396a 0E94 0000 		call partial_blockStep
1126:lp_solve_5.5/lp_simplex.c ****       } while ((rownr == 0) && (i < partial_countBlocks(lp, (MYBOOL) !primal)) &&
 8741               		.loc 2 1126 0 discriminator 1
 8742 396e 8823      		tst r24
 8743 3970 01F4      		brne .L307
 8744               	.L302:
1128:lp_solve_5.5/lp_simplex.c ****     }
1129:lp_solve_5.5/lp_simplex.c **** 
1130:lp_solve_5.5/lp_simplex.c ****     /* Make sure that we do not erroneously conclude that an infeasible model is optimal */
1131:lp_solve_5.5/lp_simplex.c **** #ifdef dual_UseRejectionList
1132:lp_solve_5.5/lp_simplex.c ****     if((rownr == 0) && (lp->rejectpivot[0] > 0)) {
 8745               		.loc 2 1132 0
 8746 3972 8A85      		ldd r24,Y+10
 8747 3974 9B85      		ldd r25,Y+11
 8748 3976 892B      		or r24,r25
 8749 3978 01F0      		breq .+2
 8750 397a 00C0      		rjmp .L308
 8751               		.loc 2 1132 0 is_stmt 0 discriminator 1
 8752 397c 8FA9      		ldd r24,Y+55
 8753 397e 98AD      		ldd r25,Y+56
 8754 3980 8C52      		subi r24,44
 8755 3982 9D4F      		sbci r25,-3
 8756 3984 DC01      		movw r26,r24
 8757 3986 8D91      		ld r24,X+
 8758 3988 9C91      		ld r25,X
 8759 398a FC01      		movw r30,r24
 8760 398c 8081      		ld r24,Z
 8761 398e 9181      		ldd r25,Z+1
 8762 3990 1816      		cp __zero_reg__,r24
 8763 3992 1906      		cpc __zero_reg__,r25
 8764 3994 04F0      		brlt .+2
 8765 3996 00C0      		rjmp .L308
1133:lp_solve_5.5/lp_simplex.c ****       lp->spx_status = INFEASIBLE;
 8766               		.loc 2 1133 0 is_stmt 1
 8767 3998 8FA9      		ldd r24,Y+55
 8768 399a 98AD      		ldd r25,Y+56
 8769 399c 8A5F      		subi r24,-6
 8770 399e 9D4F      		sbci r25,-3
 8771 39a0 22E0      		ldi r18,lo8(2)
 8772 39a2 30E0      		ldi r19,0
 8773 39a4 DC01      		movw r26,r24
 8774 39a6 2D93      		st X+,r18
 8775 39a8 3C93      		st X,r19
1134:lp_solve_5.5/lp_simplex.c ****       if((lp->spx_trace && (lp->bb_totalnodes == 0)) ||
 8776               		.loc 2 1134 0
 8777 39aa 8FA9      		ldd r24,Y+55
 8778 39ac 98AD      		ldd r25,Y+56
 8779 39ae 8E5F      		subi r24,-2
 8780 39b0 9D4F      		sbci r25,-3
 8781 39b2 FC01      		movw r30,r24
 8782 39b4 8081      		ld r24,Z
 8783 39b6 8823      		tst r24
 8784 39b8 01F0      		breq .L309
 8785               		.loc 2 1134 0 is_stmt 0 discriminator 1
 8786 39ba 8FA9      		ldd r24,Y+55
 8787 39bc 98AD      		ldd r25,Y+56
 8788 39be 8A5C      		subi r24,-54
 8789 39c0 9C4F      		sbci r25,-4
 8790 39c2 DC01      		movw r26,r24
 8791 39c4 AC90      		ld r10,X
 8792 39c6 FC01      		movw r30,r24
 8793 39c8 B180      		ldd r11,Z+1
 8794 39ca DC01      		movw r26,r24
 8795 39cc 1296      		adiw r26,2
 8796 39ce CC90      		ld r12,X
 8797 39d0 FC01      		movw r30,r24
 8798 39d2 D380      		ldd r13,Z+3
 8799 39d4 DC01      		movw r26,r24
 8800 39d6 1496      		adiw r26,4
 8801 39d8 EC90      		ld r14,X
 8802 39da FC01      		movw r30,r24
 8803 39dc F580      		ldd r15,Z+5
 8804 39de DC01      		movw r26,r24
 8805 39e0 1696      		adiw r26,6
 8806 39e2 0C91      		ld r16,X
 8807 39e4 FC01      		movw r30,r24
 8808 39e6 1781      		ldd r17,Z+7
 8809 39e8 2A2D      		mov r18,r10
 8810 39ea 3B2D      		mov r19,r11
 8811 39ec 4C2D      		mov r20,r12
 8812 39ee 5D2D      		mov r21,r13
 8813 39f0 6E2D      		mov r22,r14
 8814 39f2 7F2D      		mov r23,r15
 8815 39f4 802F      		mov r24,r16
 8816 39f6 912F      		mov r25,r17
 8817 39f8 A0E0      		ldi r26,0
 8818 39fa 0E94 0000 		call __cmpdi2_s8
 8819 39fe 01F0      		breq .L310
 8820               	.L309:
1135:lp_solve_5.5/lp_simplex.c ****          (lp->bb_trace && (lp->bb_totalnodes > 0)))
 8821               		.loc 2 1135 0 is_stmt 1 discriminator 3
 8822 3a00 8FA9      		ldd r24,Y+55
 8823 3a02 98AD      		ldd r25,Y+56
 8824 3a04 8D5F      		subi r24,-3
 8825 3a06 9D4F      		sbci r25,-3
 8826 3a08 DC01      		movw r26,r24
 8827 3a0a 8C91      		ld r24,X
1134:lp_solve_5.5/lp_simplex.c ****       if((lp->spx_trace && (lp->bb_totalnodes == 0)) ||
 8828               		.loc 2 1134 0 discriminator 3
 8829 3a0c 8823      		tst r24
 8830 3a0e 01F0      		breq .L311
 8831               		.loc 2 1135 0
 8832 3a10 8FA9      		ldd r24,Y+55
 8833 3a12 98AD      		ldd r25,Y+56
 8834 3a14 8A5C      		subi r24,-54
 8835 3a16 9C4F      		sbci r25,-4
 8836 3a18 FC01      		movw r30,r24
 8837 3a1a A080      		ld r10,Z
 8838 3a1c DC01      		movw r26,r24
 8839 3a1e 1196      		adiw r26,1
 8840 3a20 BC90      		ld r11,X
 8841 3a22 FC01      		movw r30,r24
 8842 3a24 C280      		ldd r12,Z+2
 8843 3a26 DC01      		movw r26,r24
 8844 3a28 1396      		adiw r26,3
 8845 3a2a DC90      		ld r13,X
 8846 3a2c FC01      		movw r30,r24
 8847 3a2e E480      		ldd r14,Z+4
 8848 3a30 DC01      		movw r26,r24
 8849 3a32 1596      		adiw r26,5
 8850 3a34 FC90      		ld r15,X
 8851 3a36 FC01      		movw r30,r24
 8852 3a38 0681      		ldd r16,Z+6
 8853 3a3a DC01      		movw r26,r24
 8854 3a3c 1796      		adiw r26,7
 8855 3a3e 1C91      		ld r17,X
 8856 3a40 2A2D      		mov r18,r10
 8857 3a42 3B2D      		mov r19,r11
 8858 3a44 4C2D      		mov r20,r12
 8859 3a46 5D2D      		mov r21,r13
 8860 3a48 6E2D      		mov r22,r14
 8861 3a4a 7F2D      		mov r23,r15
 8862 3a4c 802F      		mov r24,r16
 8863 3a4e 912F      		mov r25,r17
 8864 3a50 A0E0      		ldi r26,0
 8865 3a52 0E94 0000 		call __cmpdi2_s8
 8866 3a56 01F0      		breq .L311
 8867 3a58 04F0      		brlt .L311
 8868               	.L310:
1136:lp_solve_5.5/lp_simplex.c ****         report(lp, DETAILED, "The model is primal infeasible.\n");
 8869               		.loc 2 1136 0
 8870 3a5a 80E0      		ldi r24,lo8(.LC23)
 8871 3a5c 90E0      		ldi r25,hi8(.LC23)
 8872 3a5e 892F      		mov r24,r25
 8873 3a60 8F93      		push r24
 8874 3a62 80E0      		ldi r24,lo8(.LC23)
 8875 3a64 90E0      		ldi r25,hi8(.LC23)
 8876 3a66 8F93      		push r24
 8877 3a68 1F92      		push __zero_reg__
 8878 3a6a 85E0      		ldi r24,lo8(5)
 8879 3a6c 8F93      		push r24
 8880 3a6e 88AD      		ldd r24,Y+56
 8881 3a70 8F93      		push r24
 8882 3a72 8FA9      		ldd r24,Y+55
 8883 3a74 8F93      		push r24
 8884 3a76 0E94 0000 		call report
 8885 3a7a 0F90      		pop __tmp_reg__
 8886 3a7c 0F90      		pop __tmp_reg__
 8887 3a7e 0F90      		pop __tmp_reg__
 8888 3a80 0F90      		pop __tmp_reg__
 8889 3a82 0F90      		pop __tmp_reg__
 8890 3a84 0F90      		pop __tmp_reg__
 8891               	.L311:
1137:lp_solve_5.5/lp_simplex.c ****       rownr = lp->rejectpivot[1];
 8892               		.loc 2 1137 0
 8893 3a86 8FA9      		ldd r24,Y+55
 8894 3a88 98AD      		ldd r25,Y+56
 8895 3a8a 8C52      		subi r24,44
 8896 3a8c 9D4F      		sbci r25,-3
 8897 3a8e FC01      		movw r30,r24
 8898 3a90 8081      		ld r24,Z
 8899 3a92 9181      		ldd r25,Z+1
 8900 3a94 DC01      		movw r26,r24
 8901 3a96 1296      		adiw r26,2
 8902 3a98 8D91      		ld r24,X+
 8903 3a9a 9C91      		ld r25,X
 8904 3a9c 1397      		sbiw r26,2+1
 8905 3a9e 9B87      		std Y+11,r25
 8906 3aa0 8A87      		std Y+10,r24
1138:lp_solve_5.5/lp_simplex.c ****       colnr = 0;
 8907               		.loc 2 1138 0
 8908 3aa2 1986      		std Y+9,__zero_reg__
 8909 3aa4 1886      		std Y+8,__zero_reg__
1139:lp_solve_5.5/lp_simplex.c ****       lp->rejectpivot[0] = 0;
 8910               		.loc 2 1139 0
 8911 3aa6 8FA9      		ldd r24,Y+55
 8912 3aa8 98AD      		ldd r25,Y+56
 8913 3aaa 8C52      		subi r24,44
 8914 3aac 9D4F      		sbci r25,-3
 8915 3aae FC01      		movw r30,r24
 8916 3ab0 8081      		ld r24,Z
 8917 3ab2 9181      		ldd r25,Z+1
 8918 3ab4 DC01      		movw r26,r24
 8919 3ab6 1D92      		st X+,__zero_reg__
 8920 3ab8 1C92      		st X,__zero_reg__
1140:lp_solve_5.5/lp_simplex.c ****       ok = FALSE;
 8921               		.loc 2 1140 0
 8922 3aba 198A      		std Y+17,__zero_reg__
 8923 3abc 188A      		std Y+16,__zero_reg__
1141:lp_solve_5.5/lp_simplex.c ****       break;
 8924               		.loc 2 1141 0
 8925 3abe 0C94 0000 		jmp .L276
 8926               	.L308:
1142:lp_solve_5.5/lp_simplex.c ****     }
1143:lp_solve_5.5/lp_simplex.c **** #endif
1144:lp_solve_5.5/lp_simplex.c **** 
1145:lp_solve_5.5/lp_simplex.c ****     /* If we found a leaving variable, find a matching entering one */
1146:lp_solve_5.5/lp_simplex.c ****     clear_action(&lp->spx_action, ACTION_ITERATE);
 8927               		.loc 2 1146 0
 8928 3ac2 8FA9      		ldd r24,Y+55
 8929 3ac4 98AD      		ldd r25,Y+56
 8930 3ac6 8E50      		subi r24,14
 8931 3ac8 9D4F      		sbci r25,-3
 8932 3aca 60E4      		ldi r22,lo8(64)
 8933 3acc 70E0      		ldi r23,0
 8934 3ace 0E94 0000 		call clear_action
1147:lp_solve_5.5/lp_simplex.c ****     if(rownr > 0) {
 8935               		.loc 2 1147 0
 8936 3ad2 8A85      		ldd r24,Y+10
 8937 3ad4 9B85      		ldd r25,Y+11
 8938 3ad6 1816      		cp __zero_reg__,r24
 8939 3ad8 1906      		cpc __zero_reg__,r25
 8940 3ada 04F0      		brlt .+2
 8941 3adc 00C0      		rjmp .L312
1148:lp_solve_5.5/lp_simplex.c ****       colnr = coldual(lp, rownr, prow, nzprow, drow, nzdrow,
 8942               		.loc 2 1148 0
 8943 3ade 81E0      		ldi r24,lo8(1)
 8944 3ae0 9C81      		ldd r25,Y+4
 8945 3ae2 9230      		cpi r25,lo8(2)
 8946 3ae4 01F0      		breq .L313
 8947 3ae6 80E0      		ldi r24,0
 8948               	.L313:
 8949 3ae8 B82E      		mov r11,r24
1149:lp_solve_5.5/lp_simplex.c ****                                  (MYBOOL) (dualphase1 && !inP1extra),
 8950               		.loc 2 1149 0
 8951 3aea 8A81      		ldd r24,Y+2
 8952 3aec 8823      		tst r24
 8953 3aee 01F0      		breq .L314
 8954               		.loc 2 1149 0 is_stmt 0 discriminator 1
 8955 3af0 8981      		ldd r24,Y+1
 8956 3af2 8823      		tst r24
 8957 3af4 01F4      		brne .L314
 8958               		.loc 2 1149 0 discriminator 3
 8959 3af6 81E0      		ldi r24,lo8(1)
 8960 3af8 90E0      		ldi r25,0
 8961 3afa 00C0      		rjmp .L315
 8962               	.L314:
 8963               		.loc 2 1149 0 discriminator 4
 8964 3afc 80E0      		ldi r24,0
 8965 3afe 90E0      		ldi r25,0
 8966               	.L315:
1148:lp_solve_5.5/lp_simplex.c ****       colnr = coldual(lp, rownr, prow, nzprow, drow, nzdrow,
 8967               		.loc 2 1148 0 is_stmt 1
 8968 3b00 C82E      		mov r12,r24
 8969 3b02 2DA9      		ldd r18,Y+53
 8970 3b04 3EA9      		ldd r19,Y+54
 8971 3b06 49A9      		ldd r20,Y+49
 8972 3b08 5AA9      		ldd r21,Y+50
 8973 3b0a 7E01      		movw r14,r28
 8974 3b0c B3E2      		ldi r27,35
 8975 3b0e EB0E      		add r14,r27
 8976 3b10 F11C      		adc r15,__zero_reg__
 8977 3b12 098D      		ldd r16,Y+25
 8978 3b14 1A8D      		ldd r17,Y+26
 8979 3b16 AD89      		ldd r26,Y+21
 8980 3b18 BE89      		ldd r27,Y+22
 8981 3b1a 6A85      		ldd r22,Y+10
 8982 3b1c 7B85      		ldd r23,Y+11
 8983 3b1e EFA9      		ldd r30,Y+55
 8984 3b20 F8AD      		ldd r31,Y+56
 8985 3b22 CE01      		movw r24,r28
 8986 3b24 8D96      		adiw r24,45
 8987 3b26 D92E      		mov r13,r25
 8988 3b28 DF92      		push r13
 8989 3b2a 8F93      		push r24
 8990 3b2c 4701      		movw r8,r14
 8991 3b2e AB2C      		mov r10,r11
 8992 3b30 7801      		movw r14,r16
 8993 3b32 8D01      		movw r16,r26
 8994 3b34 CF01      		movw r24,r30
 8995 3b36 0E94 0000 		call coldual
 8996 3b3a 0F90      		pop __tmp_reg__
 8997 3b3c 0F90      		pop __tmp_reg__
 8998 3b3e 9987      		std Y+9,r25
 8999 3b40 8887      		std Y+8,r24
1150:lp_solve_5.5/lp_simplex.c ****                                  (MYBOOL) (minit == ITERATE_MINORRETRY), &candidatecount, &cviolate
1151:lp_solve_5.5/lp_simplex.c ****       if(colnr < 0) {
 9000               		.loc 2 1151 0
 9001 3b42 8885      		ldd r24,Y+8
 9002 3b44 9985      		ldd r25,Y+9
 9003 3b46 9923      		tst r25
 9004 3b48 04F4      		brge .L316
1152:lp_solve_5.5/lp_simplex.c ****         minit = ITERATE_MAJORMAJOR;
 9005               		.loc 2 1152 0
 9006 3b4a 1C82      		std Y+4,__zero_reg__
1153:lp_solve_5.5/lp_simplex.c ****         continue;
 9007               		.loc 2 1153 0
 9008 3b4c 0C94 0000 		jmp .L294
 9009               	.L316:
1154:lp_solve_5.5/lp_simplex.c ****       }
1155:lp_solve_5.5/lp_simplex.c **** #ifdef AcceptMarginalAccuracy
1156:lp_solve_5.5/lp_simplex.c ****       else if(xviolated+cviolated < lp->epspivot) {
 9010               		.loc 2 1156 0
 9011 3b50 89A5      		ldd r24,Y+41
 9012 3b52 9AA5      		ldd r25,Y+42
 9013 3b54 ABA5      		ldd r26,Y+43
 9014 3b56 BCA5      		ldd r27,Y+44
 9015 3b58 2DA5      		ldd r18,Y+45
 9016 3b5a 3EA5      		ldd r19,Y+46
 9017 3b5c 4FA5      		ldd r20,Y+47
 9018 3b5e 58A9      		ldd r21,Y+48
 9019 3b60 BC01      		movw r22,r24
 9020 3b62 CD01      		movw r24,r26
 9021 3b64 0E94 0000 		call __addsf3
 9022 3b68 DC01      		movw r26,r24
 9023 3b6a CB01      		movw r24,r22
 9024 3b6c 7C01      		movw r14,r24
 9025 3b6e 8D01      		movw r16,r26
 9026 3b70 8FA9      		ldd r24,Y+55
 9027 3b72 98AD      		ldd r25,Y+56
 9028 3b74 8E5D      		subi r24,-34
 9029 3b76 9C4F      		sbci r25,-4
 9030 3b78 FC01      		movw r30,r24
 9031 3b7a 8081      		ld r24,Z
 9032 3b7c 9181      		ldd r25,Z+1
 9033 3b7e A281      		ldd r26,Z+2
 9034 3b80 B381      		ldd r27,Z+3
 9035 3b82 9C01      		movw r18,r24
 9036 3b84 AD01      		movw r20,r26
 9037 3b86 C801      		movw r24,r16
 9038 3b88 B701      		movw r22,r14
 9039 3b8a 0E94 0000 		call __ltsf2
 9040 3b8e 8823      		tst r24
 9041 3b90 04F0      		brlt .+2
 9042 3b92 00C0      		rjmp .L317
1157:lp_solve_5.5/lp_simplex.c ****         if(lp->bb_trace || (lp->bb_totalnodes == 0))
 9043               		.loc 2 1157 0
 9044 3b94 8FA9      		ldd r24,Y+55
 9045 3b96 98AD      		ldd r25,Y+56
 9046 3b98 8D5F      		subi r24,-3
 9047 3b9a 9D4F      		sbci r25,-3
 9048 3b9c DC01      		movw r26,r24
 9049 3b9e 8C91      		ld r24,X
 9050 3ba0 8823      		tst r24
 9051 3ba2 01F4      		brne .L319
 9052               		.loc 2 1157 0 is_stmt 0 discriminator 1
 9053 3ba4 8FA9      		ldd r24,Y+55
 9054 3ba6 98AD      		ldd r25,Y+56
 9055 3ba8 8A5C      		subi r24,-54
 9056 3baa 9C4F      		sbci r25,-4
 9057 3bac FC01      		movw r30,r24
 9058 3bae A080      		ld r10,Z
 9059 3bb0 DC01      		movw r26,r24
 9060 3bb2 1196      		adiw r26,1
 9061 3bb4 BC90      		ld r11,X
 9062 3bb6 FC01      		movw r30,r24
 9063 3bb8 C280      		ldd r12,Z+2
 9064 3bba DC01      		movw r26,r24
 9065 3bbc 1396      		adiw r26,3
 9066 3bbe DC90      		ld r13,X
 9067 3bc0 FC01      		movw r30,r24
 9068 3bc2 E480      		ldd r14,Z+4
 9069 3bc4 DC01      		movw r26,r24
 9070 3bc6 1596      		adiw r26,5
 9071 3bc8 FC90      		ld r15,X
 9072 3bca FC01      		movw r30,r24
 9073 3bcc 0681      		ldd r16,Z+6
 9074 3bce DC01      		movw r26,r24
 9075 3bd0 1796      		adiw r26,7
 9076 3bd2 1C91      		ld r17,X
 9077 3bd4 2A2D      		mov r18,r10
 9078 3bd6 3B2D      		mov r19,r11
 9079 3bd8 4C2D      		mov r20,r12
 9080 3bda 5D2D      		mov r21,r13
 9081 3bdc 6E2D      		mov r22,r14
 9082 3bde 7F2D      		mov r23,r15
 9083 3be0 802F      		mov r24,r16
 9084 3be2 912F      		mov r25,r17
 9085 3be4 A0E0      		ldi r26,0
 9086 3be6 0E94 0000 		call __cmpdi2_s8
 9087 3bea 01F4      		brne .L320
 9088               	.L319:
1158:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "dualloop: Assuming convergence with reduced accuracy %g.\n",
1159:lp_solve_5.5/lp_simplex.c ****                                MAX(xviolated, cviolated));
 9089               		.loc 2 1159 0 is_stmt 1
 9090 3bec 89A5      		ldd r24,Y+41
 9091 3bee 9AA5      		ldd r25,Y+42
 9092 3bf0 ABA5      		ldd r26,Y+43
 9093 3bf2 BCA5      		ldd r27,Y+44
 9094 3bf4 2DA5      		ldd r18,Y+45
 9095 3bf6 3EA5      		ldd r19,Y+46
 9096 3bf8 4FA5      		ldd r20,Y+47
 9097 3bfa 58A9      		ldd r21,Y+48
1158:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "dualloop: Assuming convergence with reduced accuracy %g.\n",
 9098               		.loc 2 1158 0
 9099 3bfc BC01      		movw r22,r24
 9100 3bfe CD01      		movw r24,r26
 9101 3c00 0E94 0000 		call __gtsf2
 9102 3c04 1816      		cp __zero_reg__,r24
 9103 3c06 04F4      		brge .L397
1158:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "dualloop: Assuming convergence with reduced accuracy %g.\n",
 9104               		.loc 2 1158 0 is_stmt 0 discriminator 1
 9105 3c08 89A5      		ldd r24,Y+41
 9106 3c0a 9AA5      		ldd r25,Y+42
 9107 3c0c ABA5      		ldd r26,Y+43
 9108 3c0e BCA5      		ldd r27,Y+44
 9109 3c10 00C0      		rjmp .L323
 9110               	.L397:
1158:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "dualloop: Assuming convergence with reduced accuracy %g.\n",
 9111               		.loc 2 1158 0 discriminator 2
 9112 3c12 8DA5      		ldd r24,Y+45
 9113 3c14 9EA5      		ldd r25,Y+46
 9114 3c16 AFA5      		ldd r26,Y+47
 9115 3c18 B8A9      		ldd r27,Y+48
 9116               	.L323:
1158:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "dualloop: Assuming convergence with reduced accuracy %g.\n",
 9117               		.loc 2 1158 0 discriminator 4
 9118 3c1a 2B2F      		mov r18,r27
 9119 3c1c 2F93      		push r18
 9120 3c1e 2A2F      		mov r18,r26
 9121 3c20 2F93      		push r18
 9122 3c22 292F      		mov r18,r25
 9123 3c24 2F93      		push r18
 9124 3c26 8F93      		push r24
 9125 3c28 80E0      		ldi r24,lo8(.LC24)
 9126 3c2a 90E0      		ldi r25,hi8(.LC24)
 9127 3c2c 892F      		mov r24,r25
 9128 3c2e 8F93      		push r24
 9129 3c30 80E0      		ldi r24,lo8(.LC24)
 9130 3c32 90E0      		ldi r25,hi8(.LC24)
 9131 3c34 8F93      		push r24
 9132 3c36 1F92      		push __zero_reg__
 9133 3c38 85E0      		ldi r24,lo8(5)
 9134 3c3a 8F93      		push r24
 9135 3c3c 88AD      		ldd r24,Y+56
 9136 3c3e 8F93      		push r24
 9137 3c40 8FA9      		ldd r24,Y+55
 9138 3c42 8F93      		push r24
 9139 3c44 0E94 0000 		call report
 9140 3c48 EDB7      		in r30,__SP_L__
 9141 3c4a FEB7      		in r31,__SP_H__
 9142 3c4c 3A96      		adiw r30,10
 9143 3c4e 0FB6      		in __tmp_reg__,__SREG__
 9144 3c50 F894      		cli
 9145 3c52 DEBF      		out __SP_H__,r29
 9146 3c54 0FBE      		out __SREG__,__tmp_reg__
 9147 3c56 CDBF      		out __SP_L__,r28
 9148               	.L320:
1160:lp_solve_5.5/lp_simplex.c ****         rownr = 0;
 9149               		.loc 2 1160 0 is_stmt 1
 9150 3c58 1B86      		std Y+11,__zero_reg__
 9151 3c5a 1A86      		std Y+10,__zero_reg__
1161:lp_solve_5.5/lp_simplex.c ****         colnr = 0;
 9152               		.loc 2 1161 0
 9153 3c5c 1986      		std Y+9,__zero_reg__
 9154 3c5e 1886      		std Y+8,__zero_reg__
 9155               	.L317:
1162:lp_solve_5.5/lp_simplex.c ****       }
1163:lp_solve_5.5/lp_simplex.c **** #endif
1164:lp_solve_5.5/lp_simplex.c ****       /* Check if the long-dual found reason to prune the B&B tree */
1165:lp_solve_5.5/lp_simplex.c ****       if(lp->spx_status == FATHOMED)
 9156               		.loc 2 1165 0
 9157 3c60 8FA9      		ldd r24,Y+55
 9158 3c62 98AD      		ldd r25,Y+56
 9159 3c64 8A5F      		subi r24,-6
 9160 3c66 9D4F      		sbci r25,-3
 9161 3c68 DC01      		movw r26,r24
 9162 3c6a 8D91      		ld r24,X+
 9163 3c6c 9C91      		ld r25,X
 9164 3c6e 0E97      		sbiw r24,14
 9165 3c70 01F4      		brne .L324
1166:lp_solve_5.5/lp_simplex.c ****         break;
 9166               		.loc 2 1166 0
 9167 3c72 0C94 0000 		jmp .L276
 9168               	.L312:
1167:lp_solve_5.5/lp_simplex.c ****     }
1168:lp_solve_5.5/lp_simplex.c ****     else
1169:lp_solve_5.5/lp_simplex.c ****       colnr = 0;
 9169               		.loc 2 1169 0
 9170 3c76 1986      		std Y+9,__zero_reg__
 9171 3c78 1886      		std Y+8,__zero_reg__
 9172               	.L324:
1170:lp_solve_5.5/lp_simplex.c **** 
1171:lp_solve_5.5/lp_simplex.c ****     /* Process primal-infeasible row */
1172:lp_solve_5.5/lp_simplex.c ****     if(rownr > 0) {
 9173               		.loc 2 1172 0
 9174 3c7a 8A85      		ldd r24,Y+10
 9175 3c7c 9B85      		ldd r25,Y+11
 9176 3c7e 1816      		cp __zero_reg__,r24
 9177 3c80 1906      		cpc __zero_reg__,r25
 9178 3c82 04F0      		brlt .+2
 9179 3c84 00C0      		rjmp .L325
1173:lp_solve_5.5/lp_simplex.c **** 
1174:lp_solve_5.5/lp_simplex.c ****       if(colnr > 0) {
 9180               		.loc 2 1174 0
 9181 3c86 8885      		ldd r24,Y+8
 9182 3c88 9985      		ldd r25,Y+9
 9183 3c8a 1816      		cp __zero_reg__,r24
 9184 3c8c 1906      		cpc __zero_reg__,r25
 9185 3c8e 04F0      		brlt .+2
 9186 3c90 00C0      		rjmp .L326
1175:lp_solve_5.5/lp_simplex.c **** #ifdef Paranoia
1176:lp_solve_5.5/lp_simplex.c ****         if((rownr > lp->rows) || (colnr > lp->sum)) {
1177:lp_solve_5.5/lp_simplex.c ****           report(lp, SEVERE, "dualloop: Invalid row %d(%d) and column %d(%d) pair selected at itera
1178:lp_solve_5.5/lp_simplex.c ****                              rownr, lp->rows, colnr-lp->columns, lp->columns, (double) get_total_it
1179:lp_solve_5.5/lp_simplex.c ****           lp->spx_status = UNKNOWNERROR;
1180:lp_solve_5.5/lp_simplex.c ****           break;
1181:lp_solve_5.5/lp_simplex.c ****         }
1182:lp_solve_5.5/lp_simplex.c **** #endif
1183:lp_solve_5.5/lp_simplex.c ****         fsolve(lp, colnr, pcol, workINT, lp->epsmachine, 1.0, TRUE);
 9187               		.loc 2 1183 0
 9188 3c92 8FA9      		ldd r24,Y+55
 9189 3c94 98AD      		ldd r25,Y+56
 9190 3c96 8E5E      		subi r24,-18
 9191 3c98 9C4F      		sbci r25,-4
 9192 3c9a FC01      		movw r30,r24
 9193 3c9c 8081      		ld r24,Z
 9194 3c9e 9181      		ldd r25,Z+1
 9195 3ca0 A281      		ldd r26,Z+2
 9196 3ca2 B381      		ldd r27,Z+3
 9197 3ca4 4BA9      		ldd r20,Y+51
 9198 3ca6 5CA9      		ldd r21,Y+52
 9199 3ca8 2F89      		ldd r18,Y+23
 9200 3caa 388D      		ldd r19,Y+24
 9201 3cac 6885      		ldd r22,Y+8
 9202 3cae 7985      		ldd r23,Y+9
 9203 3cb0 EFA9      		ldd r30,Y+55
 9204 3cb2 F8AD      		ldd r31,Y+56
 9205 3cb4 8824      		clr r8
 9206 3cb6 8394      		inc r8
 9207 3cb8 0F2E      		mov __tmp_reg__,r31
 9208 3cba A12C      		mov r10,__zero_reg__
 9209 3cbc B12C      		mov r11,__zero_reg__
 9210 3cbe F0E8      		ldi r31,lo8(-128)
 9211 3cc0 CF2E      		mov r12,r31
 9212 3cc2 FFE3      		ldi r31,lo8(63)
 9213 3cc4 DF2E      		mov r13,r31
 9214 3cc6 F02D      		mov r31,__tmp_reg__
 9215 3cc8 7C01      		movw r14,r24
 9216 3cca 8D01      		movw r16,r26
 9217 3ccc CF01      		movw r24,r30
 9218 3cce 0E94 0000 		call fsolve
1184:lp_solve_5.5/lp_simplex.c **** 
1185:lp_solve_5.5/lp_simplex.c **** #ifdef FixInaccurateDualMinit
1186:lp_solve_5.5/lp_simplex.c ****        /* Prevent bound flip-flops during minor iterations; used to detect
1187:lp_solve_5.5/lp_simplex.c ****           infeasibility after triggering of minor iteration accuracy management */
1188:lp_solve_5.5/lp_simplex.c ****         if(colnr != minitcolnr)
1189:lp_solve_5.5/lp_simplex.c ****           minitcolnr = 0;
1190:lp_solve_5.5/lp_simplex.c **** #endif
1191:lp_solve_5.5/lp_simplex.c **** 
1192:lp_solve_5.5/lp_simplex.c ****        /* Getting division by zero here; catch it and try to recover */
1193:lp_solve_5.5/lp_simplex.c ****         if(pcol[rownr] == 0) {
 9219               		.loc 2 1193 0
 9220 3cd2 2BA9      		ldd r18,Y+51
 9221 3cd4 3CA9      		ldd r19,Y+52
 9222 3cd6 8A85      		ldd r24,Y+10
 9223 3cd8 9B85      		ldd r25,Y+11
 9224 3cda 880F      		lsl r24
 9225 3cdc 991F      		rol r25
 9226 3cde 880F      		lsl r24
 9227 3ce0 991F      		rol r25
 9228 3ce2 820F      		add r24,r18
 9229 3ce4 931F      		adc r25,r19
 9230 3ce6 FC01      		movw r30,r24
 9231 3ce8 8081      		ld r24,Z
 9232 3cea 9181      		ldd r25,Z+1
 9233 3cec A281      		ldd r26,Z+2
 9234 3cee B381      		ldd r27,Z+3
 9235 3cf0 20E0      		ldi r18,0
 9236 3cf2 30E0      		ldi r19,0
 9237 3cf4 A901      		movw r20,r18
 9238 3cf6 BC01      		movw r22,r24
 9239 3cf8 CD01      		movw r24,r26
 9240 3cfa 0E94 0000 		call __eqsf2
 9241 3cfe 8823      		tst r24
 9242 3d00 01F0      		breq .+2
 9243 3d02 00C0      		rjmp .L398
1194:lp_solve_5.5/lp_simplex.c ****           if(lp->spx_trace)
 9244               		.loc 2 1194 0
 9245 3d04 8FA9      		ldd r24,Y+55
 9246 3d06 98AD      		ldd r25,Y+56
 9247 3d08 8E5F      		subi r24,-2
 9248 3d0a 9D4F      		sbci r25,-3
 9249 3d0c DC01      		movw r26,r24
 9250 3d0e 8C91      		ld r24,X
 9251 3d10 8823      		tst r24
 9252 3d12 01F0      		breq .L329
1195:lp_solve_5.5/lp_simplex.c ****             report(lp, DETAILED, "dualloop: Attempt to divide by zero (pcol[%d])\n", rownr);
 9253               		.loc 2 1195 0
 9254 3d14 8B85      		ldd r24,Y+11
 9255 3d16 8F93      		push r24
 9256 3d18 8A85      		ldd r24,Y+10
 9257 3d1a 8F93      		push r24
 9258 3d1c 80E0      		ldi r24,lo8(.LC25)
 9259 3d1e 90E0      		ldi r25,hi8(.LC25)
 9260 3d20 892F      		mov r24,r25
 9261 3d22 8F93      		push r24
 9262 3d24 80E0      		ldi r24,lo8(.LC25)
 9263 3d26 90E0      		ldi r25,hi8(.LC25)
 9264 3d28 8F93      		push r24
 9265 3d2a 1F92      		push __zero_reg__
 9266 3d2c 85E0      		ldi r24,lo8(5)
 9267 3d2e 8F93      		push r24
 9268 3d30 88AD      		ldd r24,Y+56
 9269 3d32 8F93      		push r24
 9270 3d34 8FA9      		ldd r24,Y+55
 9271 3d36 8F93      		push r24
 9272 3d38 0E94 0000 		call report
 9273 3d3c EDB7      		in r30,__SP_L__
 9274 3d3e FEB7      		in r31,__SP_H__
 9275 3d40 3896      		adiw r30,8
 9276 3d42 0FB6      		in __tmp_reg__,__SREG__
 9277 3d44 F894      		cli
 9278 3d46 DEBF      		out __SP_H__,r29
 9279 3d48 0FBE      		out __SREG__,__tmp_reg__
 9280 3d4a CDBF      		out __SP_L__,r28
 9281               	.L329:
1196:lp_solve_5.5/lp_simplex.c ****           if(!refactRecent(lp)) {
 9282               		.loc 2 1196 0
 9283 3d4c 8FA9      		ldd r24,Y+55
 9284 3d4e 98AD      		ldd r25,Y+56
 9285 3d50 0E94 0000 		call refactRecent
 9286 3d54 8823      		tst r24
 9287 3d56 01F4      		brne .L330
1197:lp_solve_5.5/lp_simplex.c ****             report(lp, DETAILED, "...trying to recover by refactorizing basis.\n");
 9288               		.loc 2 1197 0
 9289 3d58 80E0      		ldi r24,lo8(.LC26)
 9290 3d5a 90E0      		ldi r25,hi8(.LC26)
 9291 3d5c 892F      		mov r24,r25
 9292 3d5e 8F93      		push r24
 9293 3d60 80E0      		ldi r24,lo8(.LC26)
 9294 3d62 90E0      		ldi r25,hi8(.LC26)
 9295 3d64 8F93      		push r24
 9296 3d66 1F92      		push __zero_reg__
 9297 3d68 85E0      		ldi r24,lo8(5)
 9298 3d6a 8F93      		push r24
 9299 3d6c 88AD      		ldd r24,Y+56
 9300 3d6e 8F93      		push r24
 9301 3d70 8FA9      		ldd r24,Y+55
 9302 3d72 8F93      		push r24
 9303 3d74 0E94 0000 		call report
 9304 3d78 0F90      		pop __tmp_reg__
 9305 3d7a 0F90      		pop __tmp_reg__
 9306 3d7c 0F90      		pop __tmp_reg__
 9307 3d7e 0F90      		pop __tmp_reg__
 9308 3d80 0F90      		pop __tmp_reg__
 9309 3d82 0F90      		pop __tmp_reg__
1198:lp_solve_5.5/lp_simplex.c ****             set_action(&lp->spx_action, ACTION_REINVERT);
 9310               		.loc 2 1198 0
 9311 3d84 8FA9      		ldd r24,Y+55
 9312 3d86 98AD      		ldd r25,Y+56
 9313 3d88 8E50      		subi r24,14
 9314 3d8a 9D4F      		sbci r25,-3
 9315 3d8c 60E1      		ldi r22,lo8(16)
 9316 3d8e 70E0      		ldi r23,0
 9317 3d90 0E94 0000 		call set_action
1199:lp_solve_5.5/lp_simplex.c ****             bfpfinal = FALSE;
 9318               		.loc 2 1199 0
 9319 3d94 1D82      		std Y+5,__zero_reg__
 9320 3d96 0C94 0000 		jmp .L341
 9321               	.L330:
1200:lp_solve_5.5/lp_simplex.c ****           }
1201:lp_solve_5.5/lp_simplex.c ****           else {
1202:lp_solve_5.5/lp_simplex.c ****             if(lp->bb_totalnodes == 0)
 9322               		.loc 2 1202 0
 9323 3d9a 8FA9      		ldd r24,Y+55
 9324 3d9c 98AD      		ldd r25,Y+56
 9325 3d9e 8A5C      		subi r24,-54
 9326 3da0 9C4F      		sbci r25,-4
 9327 3da2 DC01      		movw r26,r24
 9328 3da4 AC90      		ld r10,X
 9329 3da6 FC01      		movw r30,r24
 9330 3da8 B180      		ldd r11,Z+1
 9331 3daa DC01      		movw r26,r24
 9332 3dac 1296      		adiw r26,2
 9333 3dae CC90      		ld r12,X
 9334 3db0 FC01      		movw r30,r24
 9335 3db2 D380      		ldd r13,Z+3
 9336 3db4 DC01      		movw r26,r24
 9337 3db6 1496      		adiw r26,4
 9338 3db8 EC90      		ld r14,X
 9339 3dba FC01      		movw r30,r24
 9340 3dbc F580      		ldd r15,Z+5
 9341 3dbe DC01      		movw r26,r24
 9342 3dc0 1696      		adiw r26,6
 9343 3dc2 0C91      		ld r16,X
 9344 3dc4 FC01      		movw r30,r24
 9345 3dc6 1781      		ldd r17,Z+7
 9346 3dc8 2A2D      		mov r18,r10
 9347 3dca 3B2D      		mov r19,r11
 9348 3dcc 4C2D      		mov r20,r12
 9349 3dce 5D2D      		mov r21,r13
 9350 3dd0 6E2D      		mov r22,r14
 9351 3dd2 7F2D      		mov r23,r15
 9352 3dd4 802F      		mov r24,r16
 9353 3dd6 912F      		mov r25,r17
 9354 3dd8 A0E0      		ldi r26,0
 9355 3dda 0E94 0000 		call __cmpdi2_s8
 9356 3dde 01F4      		brne .L332
1203:lp_solve_5.5/lp_simplex.c ****               report(lp, DETAILED, "...cannot recover by refactorizing basis.\n");
 9357               		.loc 2 1203 0
 9358 3de0 80E0      		ldi r24,lo8(.LC27)
 9359 3de2 90E0      		ldi r25,hi8(.LC27)
 9360 3de4 892F      		mov r24,r25
 9361 3de6 8F93      		push r24
 9362 3de8 80E0      		ldi r24,lo8(.LC27)
 9363 3dea 90E0      		ldi r25,hi8(.LC27)
 9364 3dec 8F93      		push r24
 9365 3dee 1F92      		push __zero_reg__
 9366 3df0 85E0      		ldi r24,lo8(5)
 9367 3df2 8F93      		push r24
 9368 3df4 88AD      		ldd r24,Y+56
 9369 3df6 8F93      		push r24
 9370 3df8 8FA9      		ldd r24,Y+55
 9371 3dfa 8F93      		push r24
 9372 3dfc 0E94 0000 		call report
 9373 3e00 0F90      		pop __tmp_reg__
 9374 3e02 0F90      		pop __tmp_reg__
 9375 3e04 0F90      		pop __tmp_reg__
 9376 3e06 0F90      		pop __tmp_reg__
 9377 3e08 0F90      		pop __tmp_reg__
 9378 3e0a 0F90      		pop __tmp_reg__
 9379               	.L332:
1204:lp_solve_5.5/lp_simplex.c ****             lp->spx_status = NUMFAILURE;
 9380               		.loc 2 1204 0
 9381 3e0c 8FA9      		ldd r24,Y+55
 9382 3e0e 98AD      		ldd r25,Y+56
 9383 3e10 8A5F      		subi r24,-6
 9384 3e12 9D4F      		sbci r25,-3
 9385 3e14 25E0      		ldi r18,lo8(5)
 9386 3e16 30E0      		ldi r19,0
 9387 3e18 DC01      		movw r26,r24
 9388 3e1a 2D93      		st X+,r18
 9389 3e1c 3C93      		st X,r19
1205:lp_solve_5.5/lp_simplex.c ****             ok = FALSE;
 9390               		.loc 2 1205 0
 9391 3e1e 198A      		std Y+17,__zero_reg__
 9392 3e20 188A      		std Y+16,__zero_reg__
 9393 3e22 0C94 0000 		jmp .L341
 9394               	.L398:
1206:lp_solve_5.5/lp_simplex.c ****           }
1207:lp_solve_5.5/lp_simplex.c ****         }
1208:lp_solve_5.5/lp_simplex.c ****         else {
1209:lp_solve_5.5/lp_simplex.c ****           set_action(&lp->spx_action, ACTION_ITERATE);
 9395               		.loc 2 1209 0
 9396 3e26 8FA9      		ldd r24,Y+55
 9397 3e28 98AD      		ldd r25,Y+56
 9398 3e2a 8E50      		subi r24,14
 9399 3e2c 9D4F      		sbci r25,-3
 9400 3e2e 60E4      		ldi r22,lo8(64)
 9401 3e30 70E0      		ldi r23,0
 9402 3e32 0E94 0000 		call set_action
1210:lp_solve_5.5/lp_simplex.c ****           lp->rejectpivot[0] = 0;
 9403               		.loc 2 1210 0
 9404 3e36 8FA9      		ldd r24,Y+55
 9405 3e38 98AD      		ldd r25,Y+56
 9406 3e3a 8C52      		subi r24,44
 9407 3e3c 9D4F      		sbci r25,-3
 9408 3e3e FC01      		movw r30,r24
 9409 3e40 8081      		ld r24,Z
 9410 3e42 9181      		ldd r25,Z+1
 9411 3e44 DC01      		movw r26,r24
 9412 3e46 1D92      		st X+,__zero_reg__
 9413 3e48 1C92      		st X,__zero_reg__
1211:lp_solve_5.5/lp_simplex.c ****           if(!lp->obj_in_basis)  /* We must manually copy the reduced cost for RHS update */
 9414               		.loc 2 1211 0
 9415 3e4a 8FA9      		ldd r24,Y+55
 9416 3e4c 98AD      		ldd r25,Y+56
 9417 3e4e 8B5F      		subi r24,-5
 9418 3e50 9D4F      		sbci r25,-3
 9419 3e52 FC01      		movw r30,r24
 9420 3e54 8081      		ld r24,Z
 9421 3e56 8823      		tst r24
 9422 3e58 01F0      		breq .+2
 9423 3e5a 00C0      		rjmp .L334
1212:lp_solve_5.5/lp_simplex.c ****             pcol[0] = my_chsign(!lp->is_lower[colnr], drow[colnr]);
 9424               		.loc 2 1212 0
 9425 3e5c 0BA9      		ldd r16,Y+51
 9426 3e5e 1CA9      		ldd r17,Y+52
 9427 3e60 8FA9      		ldd r24,Y+55
 9428 3e62 98AD      		ldd r25,Y+56
 9429 3e64 8E52      		subi r24,46
 9430 3e66 9D4F      		sbci r25,-3
 9431 3e68 DC01      		movw r26,r24
 9432 3e6a 2D91      		ld r18,X+
 9433 3e6c 3C91      		ld r19,X
 9434 3e6e 8885      		ldd r24,Y+8
 9435 3e70 9985      		ldd r25,Y+9
 9436 3e72 820F      		add r24,r18
 9437 3e74 931F      		adc r25,r19
 9438 3e76 FC01      		movw r30,r24
 9439 3e78 8081      		ld r24,Z
 9440 3e7a 8823      		tst r24
 9441 3e7c 01F4      		brne .L335
 9442               		.loc 2 1212 0 is_stmt 0 discriminator 1
 9443 3e7e 8885      		ldd r24,Y+8
 9444 3e80 9985      		ldd r25,Y+9
 9445 3e82 880F      		lsl r24
 9446 3e84 991F      		rol r25
 9447 3e86 880F      		lsl r24
 9448 3e88 991F      		rol r25
 9449 3e8a 2D89      		ldd r18,Y+21
 9450 3e8c 3E89      		ldd r19,Y+22
 9451 3e8e 820F      		add r24,r18
 9452 3e90 931F      		adc r25,r19
 9453 3e92 FC01      		movw r30,r24
 9454 3e94 8081      		ld r24,Z
 9455 3e96 9181      		ldd r25,Z+1
 9456 3e98 A281      		ldd r26,Z+2
 9457 3e9a B381      		ldd r27,Z+3
 9458 3e9c 20E0      		ldi r18,0
 9459 3e9e 30E0      		ldi r19,0
 9460 3ea0 A901      		movw r20,r18
 9461 3ea2 BC01      		movw r22,r24
 9462 3ea4 CD01      		movw r24,r26
 9463 3ea6 0E94 0000 		call __nesf2
 9464 3eaa 8823      		tst r24
 9465 3eac 01F0      		breq .L335
 9466               		.loc 2 1212 0 discriminator 3
 9467 3eae 8885      		ldd r24,Y+8
 9468 3eb0 9985      		ldd r25,Y+9
 9469 3eb2 880F      		lsl r24
 9470 3eb4 991F      		rol r25
 9471 3eb6 880F      		lsl r24
 9472 3eb8 991F      		rol r25
 9473 3eba 2D89      		ldd r18,Y+21
 9474 3ebc 3E89      		ldd r19,Y+22
 9475 3ebe 820F      		add r24,r18
 9476 3ec0 931F      		adc r25,r19
 9477 3ec2 FC01      		movw r30,r24
 9478 3ec4 8081      		ld r24,Z
 9479 3ec6 9181      		ldd r25,Z+1
 9480 3ec8 A281      		ldd r26,Z+2
 9481 3eca B381      		ldd r27,Z+3
 9482 3ecc B058      		subi r27,0x80
 9483 3ece 00C0      		rjmp .L337
 9484               	.L335:
 9485               		.loc 2 1212 0 discriminator 4
 9486 3ed0 8885      		ldd r24,Y+8
 9487 3ed2 9985      		ldd r25,Y+9
 9488 3ed4 880F      		lsl r24
 9489 3ed6 991F      		rol r25
 9490 3ed8 880F      		lsl r24
 9491 3eda 991F      		rol r25
 9492 3edc 2D89      		ldd r18,Y+21
 9493 3ede 3E89      		ldd r19,Y+22
 9494 3ee0 820F      		add r24,r18
 9495 3ee2 931F      		adc r25,r19
 9496 3ee4 FC01      		movw r30,r24
 9497 3ee6 8081      		ld r24,Z
 9498 3ee8 9181      		ldd r25,Z+1
 9499 3eea A281      		ldd r26,Z+2
 9500 3eec B381      		ldd r27,Z+3
 9501               	.L337:
 9502               		.loc 2 1212 0 discriminator 6
 9503 3eee F801      		movw r30,r16
 9504 3ef0 8083      		st Z,r24
 9505 3ef2 9183      		std Z+1,r25
 9506 3ef4 A283      		std Z+2,r26
 9507 3ef6 B383      		std Z+3,r27
 9508               	.L334:
1213:lp_solve_5.5/lp_simplex.c ****           theta = lp->bfp_prepareupdate(lp, rownr, colnr, pcol);
 9509               		.loc 2 1213 0 is_stmt 1
 9510 3ef8 8FA9      		ldd r24,Y+55
 9511 3efa 98AD      		ldd r25,Y+56
 9512 3efc 8655      		subi r24,86
 9513 3efe 9C4F      		sbci r25,-4
 9514 3f00 DC01      		movw r26,r24
 9515 3f02 ED91      		ld r30,X+
 9516 3f04 FC91      		ld r31,X
 9517 3f06 2BA9      		ldd r18,Y+51
 9518 3f08 3CA9      		ldd r19,Y+52
 9519 3f0a 4885      		ldd r20,Y+8
 9520 3f0c 5985      		ldd r21,Y+9
 9521 3f0e 6A85      		ldd r22,Y+10
 9522 3f10 7B85      		ldd r23,Y+11
 9523 3f12 8FA9      		ldd r24,Y+55
 9524 3f14 98AD      		ldd r25,Y+56
 9525 3f16 0995      		icall
 9526 3f18 DC01      		movw r26,r24
 9527 3f1a CB01      		movw r24,r22
 9528 3f1c 8DA3      		std Y+37,r24
 9529 3f1e 9EA3      		std Y+38,r25
 9530 3f20 AFA3      		std Y+39,r26
 9531 3f22 B8A7      		std Y+40,r27
1214:lp_solve_5.5/lp_simplex.c **** 
1215:lp_solve_5.5/lp_simplex.c ****          /* Verify numeric accuracy of the basis factorization and change to
1216:lp_solve_5.5/lp_simplex.c ****             the "theoretically" correct version of the theta */
1217:lp_solve_5.5/lp_simplex.c ****           if((lp->improve & IMPROVE_THETAGAP) && !refactRecent(lp) &&
 9532               		.loc 2 1217 0
 9533 3f24 8FA9      		ldd r24,Y+55
 9534 3f26 98AD      		ldd r25,Y+56
 9535 3f28 8059      		subi r24,-112
 9536 3f2a 9D4F      		sbci r25,-3
 9537 3f2c FC01      		movw r30,r24
 9538 3f2e 8081      		ld r24,Z
 9539 3f30 9181      		ldd r25,Z+1
 9540 3f32 8470      		andi r24,4
 9541 3f34 9927      		clr r25
 9542 3f36 892B      		or r24,r25
 9543 3f38 01F4      		brne .+2
 9544 3f3a 00C0      		rjmp .L338
 9545               		.loc 2 1217 0 is_stmt 0 discriminator 1
 9546 3f3c 8FA9      		ldd r24,Y+55
 9547 3f3e 98AD      		ldd r25,Y+56
 9548 3f40 0E94 0000 		call refactRecent
 9549 3f44 8823      		tst r24
 9550 3f46 01F0      		breq .+2
 9551 3f48 00C0      		rjmp .L338
1218:lp_solve_5.5/lp_simplex.c ****              (my_reldiff(fabs(theta), fabs(prow[colnr])) >
 9552               		.loc 2 1218 0 is_stmt 1 discriminator 2
 9553 3f4a 8DA1      		ldd r24,Y+37
 9554 3f4c 9EA1      		ldd r25,Y+38
 9555 3f4e AFA1      		ldd r26,Y+39
 9556 3f50 B8A5      		ldd r27,Y+40
 9557 3f52 7C01      		movw r14,r24
 9558 3f54 8D01      		movw r16,r26
 9559 3f56 E894      		clt
 9560 3f58 17F9      		bld r17,7
 9561 3f5a 29A9      		ldd r18,Y+49
 9562 3f5c 3AA9      		ldd r19,Y+50
 9563 3f5e 8885      		ldd r24,Y+8
 9564 3f60 9985      		ldd r25,Y+9
 9565 3f62 880F      		lsl r24
 9566 3f64 991F      		rol r25
 9567 3f66 880F      		lsl r24
 9568 3f68 991F      		rol r25
 9569 3f6a 820F      		add r24,r18
 9570 3f6c 931F      		adc r25,r19
 9571 3f6e FC01      		movw r30,r24
 9572 3f70 8081      		ld r24,Z
 9573 3f72 9181      		ldd r25,Z+1
 9574 3f74 A281      		ldd r26,Z+2
 9575 3f76 B381      		ldd r27,Z+3
 9576 3f78 BF77      		andi r27,0x7f
 9577 3f7a 9C01      		movw r18,r24
 9578 3f7c AD01      		movw r20,r26
 9579 3f7e C801      		movw r24,r16
 9580 3f80 B701      		movw r22,r14
 9581 3f82 0E94 0000 		call __subsf3
 9582 3f86 DC01      		movw r26,r24
 9583 3f88 CB01      		movw r24,r22
 9584 3f8a 6C01      		movw r12,r24
 9585 3f8c 7D01      		movw r14,r26
 9586 3f8e 29A9      		ldd r18,Y+49
 9587 3f90 3AA9      		ldd r19,Y+50
 9588 3f92 8885      		ldd r24,Y+8
 9589 3f94 9985      		ldd r25,Y+9
 9590 3f96 880F      		lsl r24
 9591 3f98 991F      		rol r25
 9592 3f9a 880F      		lsl r24
 9593 3f9c 991F      		rol r25
 9594 3f9e 820F      		add r24,r18
 9595 3fa0 931F      		adc r25,r19
 9596 3fa2 FC01      		movw r30,r24
 9597 3fa4 8081      		ld r24,Z
 9598 3fa6 9181      		ldd r25,Z+1
 9599 3fa8 A281      		ldd r26,Z+2
 9600 3faa B381      		ldd r27,Z+3
 9601 3fac BF77      		andi r27,0x7f
 9602 3fae 20E0      		ldi r18,0
 9603 3fb0 30E0      		ldi r19,0
 9604 3fb2 40E8      		ldi r20,lo8(-128)
 9605 3fb4 5FE3      		ldi r21,lo8(63)
 9606 3fb6 BC01      		movw r22,r24
 9607 3fb8 CD01      		movw r24,r26
 9608 3fba 0E94 0000 		call __addsf3
 9609 3fbe DC01      		movw r26,r24
 9610 3fc0 CB01      		movw r24,r22
 9611 3fc2 9C01      		movw r18,r24
 9612 3fc4 AD01      		movw r20,r26
 9613 3fc6 C701      		movw r24,r14
 9614 3fc8 B601      		movw r22,r12
 9615 3fca 0E94 0000 		call __divsf3
 9616 3fce DC01      		movw r26,r24
 9617 3fd0 CB01      		movw r24,r22
 9618 3fd2 6C01      		movw r12,r24
 9619 3fd4 7D01      		movw r14,r26
1219:lp_solve_5.5/lp_simplex.c ****               lp->epspivot*10.0*log(2.0+50.0*lp->rows))) {  /* This is my kludge - KE */
 9620               		.loc 2 1219 0 discriminator 2
 9621 3fd6 8FA9      		ldd r24,Y+55
 9622 3fd8 98AD      		ldd r25,Y+56
 9623 3fda 8E5D      		subi r24,-34
 9624 3fdc 9C4F      		sbci r25,-4
 9625 3fde FC01      		movw r30,r24
 9626 3fe0 8081      		ld r24,Z
 9627 3fe2 9181      		ldd r25,Z+1
 9628 3fe4 A281      		ldd r26,Z+2
 9629 3fe6 B381      		ldd r27,Z+3
 9630 3fe8 20E0      		ldi r18,0
 9631 3fea 30E0      		ldi r19,0
 9632 3fec 40E2      		ldi r20,lo8(32)
 9633 3fee 51E4      		ldi r21,lo8(65)
 9634 3ff0 BC01      		movw r22,r24
 9635 3ff2 CD01      		movw r24,r26
 9636 3ff4 0E94 0000 		call __mulsf3
 9637 3ff8 DC01      		movw r26,r24
 9638 3ffa CB01      		movw r24,r22
 9639 3ffc 4C01      		movw r8,r24
 9640 3ffe 5D01      		movw r10,r26
 9641 4000 8FA9      		ldd r24,Y+55
 9642 4002 98AD      		ldd r25,Y+56
 9643 4004 8651      		subi r24,22
 9644 4006 9E4F      		sbci r25,-2
 9645 4008 DC01      		movw r26,r24
 9646 400a 8D91      		ld r24,X+
 9647 400c 9C91      		ld r25,X
 9648 400e 092E      		mov __tmp_reg__,r25
 9649 4010 000C      		lsl r0
 9650 4012 AA0B      		sbc r26,r26
 9651 4014 BB0B      		sbc r27,r27
 9652 4016 BC01      		movw r22,r24
 9653 4018 CD01      		movw r24,r26
 9654 401a 0E94 0000 		call __floatsisf
 9655 401e DC01      		movw r26,r24
 9656 4020 CB01      		movw r24,r22
 9657 4022 20E0      		ldi r18,0
 9658 4024 30E0      		ldi r19,0
 9659 4026 48E4      		ldi r20,lo8(72)
 9660 4028 52E4      		ldi r21,lo8(66)
 9661 402a BC01      		movw r22,r24
 9662 402c CD01      		movw r24,r26
 9663 402e 0E94 0000 		call __mulsf3
 9664 4032 DC01      		movw r26,r24
 9665 4034 CB01      		movw r24,r22
 9666 4036 20E0      		ldi r18,0
 9667 4038 30E0      		ldi r19,0
 9668 403a 40E0      		ldi r20,0
 9669 403c 50E4      		ldi r21,lo8(64)
 9670 403e BC01      		movw r22,r24
 9671 4040 CD01      		movw r24,r26
 9672 4042 0E94 0000 		call __addsf3
 9673 4046 DC01      		movw r26,r24
 9674 4048 CB01      		movw r24,r22
 9675 404a BC01      		movw r22,r24
 9676 404c CD01      		movw r24,r26
 9677 404e 0E94 0000 		call log
 9678 4052 DC01      		movw r26,r24
 9679 4054 CB01      		movw r24,r22
 9680 4056 9C01      		movw r18,r24
 9681 4058 AD01      		movw r20,r26
 9682 405a C501      		movw r24,r10
 9683 405c B401      		movw r22,r8
 9684 405e 0E94 0000 		call __mulsf3
 9685 4062 DC01      		movw r26,r24
 9686 4064 CB01      		movw r24,r22
1217:lp_solve_5.5/lp_simplex.c ****              (my_reldiff(fabs(theta), fabs(prow[colnr])) >
 9687               		.loc 2 1217 0 discriminator 2
 9688 4066 9C01      		movw r18,r24
 9689 4068 AD01      		movw r20,r26
 9690 406a C701      		movw r24,r14
 9691 406c B601      		movw r22,r12
 9692 406e 0E94 0000 		call __gtsf2
 9693 4072 1816      		cp __zero_reg__,r24
 9694 4074 04F0      		brlt .+2
 9695 4076 00C0      		rjmp .L338
1220:lp_solve_5.5/lp_simplex.c ****             set_action(&lp->spx_action, ACTION_REINVERT);
 9696               		.loc 2 1220 0
 9697 4078 8FA9      		ldd r24,Y+55
 9698 407a 98AD      		ldd r25,Y+56
 9699 407c 8E50      		subi r24,14
 9700 407e 9D4F      		sbci r25,-3
 9701 4080 60E1      		ldi r22,lo8(16)
 9702 4082 70E0      		ldi r23,0
 9703 4084 0E94 0000 		call set_action
1221:lp_solve_5.5/lp_simplex.c ****             bfpfinal = TRUE;
 9704               		.loc 2 1221 0
 9705 4088 81E0      		ldi r24,lo8(1)
 9706 408a 8D83      		std Y+5,r24
1222:lp_solve_5.5/lp_simplex.c **** #ifdef IncreasePivotOnReducedAccuracy
1223:lp_solve_5.5/lp_simplex.c ****             lp->epspivot = MIN(1.0e-4, lp->epspivot*2.0);
1224:lp_solve_5.5/lp_simplex.c **** #endif
1225:lp_solve_5.5/lp_simplex.c ****             report(lp, DETAILED, "dualloop: Refactorizing at iter %.0f due to loss of accuracy.\n",
1226:lp_solve_5.5/lp_simplex.c ****                                  (double) get_total_iter(lp));
 9707               		.loc 2 1226 0
 9708 408c 8FA9      		ldd r24,Y+55
 9709 408e 98AD      		ldd r25,Y+56
 9710 4090 0E94 0000 		call get_total_iter
 9711 4094 A22E      		mov r10,r18
 9712 4096 B32E      		mov r11,r19
 9713 4098 C42E      		mov r12,r20
 9714 409a D52E      		mov r13,r21
 9715 409c E62E      		mov r14,r22
 9716 409e F72E      		mov r15,r23
 9717 40a0 082F      		mov r16,r24
 9718 40a2 192F      		mov r17,r25
1225:lp_solve_5.5/lp_simplex.c ****                                  (double) get_total_iter(lp));
 9719               		.loc 2 1225 0
 9720 40a4 2A2D      		mov r18,r10
 9721 40a6 3B2D      		mov r19,r11
 9722 40a8 4C2D      		mov r20,r12
 9723 40aa 5D2D      		mov r21,r13
 9724 40ac 6E2D      		mov r22,r14
 9725 40ae 7F2D      		mov r23,r15
 9726 40b0 802F      		mov r24,r16
 9727 40b2 912F      		mov r25,r17
 9728 40b4 0E94 0000 		call __floatdisf
 9729 40b8 DC01      		movw r26,r24
 9730 40ba CB01      		movw r24,r22
 9731 40bc 2B2F      		mov r18,r27
 9732 40be 2F93      		push r18
 9733 40c0 2A2F      		mov r18,r26
 9734 40c2 2F93      		push r18
 9735 40c4 292F      		mov r18,r25
 9736 40c6 2F93      		push r18
 9737 40c8 8F93      		push r24
 9738 40ca 80E0      		ldi r24,lo8(.LC28)
 9739 40cc 90E0      		ldi r25,hi8(.LC28)
 9740 40ce 892F      		mov r24,r25
 9741 40d0 8F93      		push r24
 9742 40d2 80E0      		ldi r24,lo8(.LC28)
 9743 40d4 90E0      		ldi r25,hi8(.LC28)
 9744 40d6 8F93      		push r24
 9745 40d8 1F92      		push __zero_reg__
 9746 40da 85E0      		ldi r24,lo8(5)
 9747 40dc 8F93      		push r24
 9748 40de 88AD      		ldd r24,Y+56
 9749 40e0 8F93      		push r24
 9750 40e2 8FA9      		ldd r24,Y+55
 9751 40e4 8F93      		push r24
 9752 40e6 0E94 0000 		call report
 9753 40ea EDB7      		in r30,__SP_L__
 9754 40ec FEB7      		in r31,__SP_H__
 9755 40ee 3A96      		adiw r30,10
 9756 40f0 0FB6      		in __tmp_reg__,__SREG__
 9757 40f2 F894      		cli
 9758 40f4 DEBF      		out __SP_H__,r29
 9759 40f6 0FBE      		out __SREG__,__tmp_reg__
 9760 40f8 CDBF      		out __SP_L__,r28
 9761               	.L338:
1227:lp_solve_5.5/lp_simplex.c ****           }
1228:lp_solve_5.5/lp_simplex.c ****           theta = prow[colnr];
 9762               		.loc 2 1228 0
 9763 40fa 29A9      		ldd r18,Y+49
 9764 40fc 3AA9      		ldd r19,Y+50
 9765 40fe 8885      		ldd r24,Y+8
 9766 4100 9985      		ldd r25,Y+9
 9767 4102 880F      		lsl r24
 9768 4104 991F      		rol r25
 9769 4106 880F      		lsl r24
 9770 4108 991F      		rol r25
 9771 410a 820F      		add r24,r18
 9772 410c 931F      		adc r25,r19
 9773 410e FC01      		movw r30,r24
 9774 4110 8081      		ld r24,Z
 9775 4112 9181      		ldd r25,Z+1
 9776 4114 A281      		ldd r26,Z+2
 9777 4116 B381      		ldd r27,Z+3
 9778 4118 8DA3      		std Y+37,r24
 9779 411a 9EA3      		std Y+38,r25
 9780 411c AFA3      		std Y+39,r26
 9781 411e B8A7      		std Y+40,r27
1229:lp_solve_5.5/lp_simplex.c ****           compute_theta(lp, rownr, &theta, !lp->is_lower[colnr], 0, primal);
 9782               		.loc 2 1229 0
 9783 4120 8FA9      		ldd r24,Y+55
 9784 4122 98AD      		ldd r25,Y+56
 9785 4124 8E52      		subi r24,46
 9786 4126 9D4F      		sbci r25,-3
 9787 4128 DC01      		movw r26,r24
 9788 412a 2D91      		ld r18,X+
 9789 412c 3C91      		ld r19,X
 9790 412e 8885      		ldd r24,Y+8
 9791 4130 9985      		ldd r25,Y+9
 9792 4132 820F      		add r24,r18
 9793 4134 931F      		adc r25,r19
 9794 4136 FC01      		movw r30,r24
 9795 4138 9081      		ld r25,Z
 9796 413a 81E0      		ldi r24,lo8(1)
 9797 413c 9923      		tst r25
 9798 413e 01F0      		breq .L340
 9799 4140 80E0      		ldi r24,0
 9800               	.L340:
 9801 4142 282F      		mov r18,r24
 9802 4144 30E0      		ldi r19,0
 9803 4146 AE01      		movw r20,r28
 9804 4148 4B5D      		subi r20,-37
 9805 414a 5F4F      		sbci r21,-1
 9806 414c 6A85      		ldd r22,Y+10
 9807 414e 7B85      		ldd r23,Y+11
 9808 4150 8FA9      		ldd r24,Y+55
 9809 4152 98AD      		ldd r25,Y+56
 9810 4154 CC88      		ldd r12,Y+20
 9811 4156 E12C      		mov r14,__zero_reg__
 9812 4158 F12C      		mov r15,__zero_reg__
 9813 415a 8701      		movw r16,r14
 9814 415c 0E94 0000 		call compute_theta
 9815 4160 00C0      		rjmp .L341
 9816               	.L326:
1230:lp_solve_5.5/lp_simplex.c ****         }
1231:lp_solve_5.5/lp_simplex.c ****       }
1232:lp_solve_5.5/lp_simplex.c **** 
1233:lp_solve_5.5/lp_simplex.c **** #ifdef FixInaccurateDualMinit
1234:lp_solve_5.5/lp_simplex.c ****       /* Force reinvertion and try another row if we did not find a bound-violated leaving column *
1235:lp_solve_5.5/lp_simplex.c ****       else if(!refactRecent(lp) && (minit != ITERATE_MAJORMAJOR) && (colnr != minitcolnr)) {
1236:lp_solve_5.5/lp_simplex.c ****         minitcolnr = colnr;
1237:lp_solve_5.5/lp_simplex.c ****         i = invert(lp, INITSOL_USEZERO, TRUE);
1238:lp_solve_5.5/lp_simplex.c ****         if((lp->spx_status == USERABORT) || (lp->spx_status == TIMEOUT))
1239:lp_solve_5.5/lp_simplex.c ****           break;
1240:lp_solve_5.5/lp_simplex.c ****         else if(!i) {
1241:lp_solve_5.5/lp_simplex.c ****           lp->spx_status = SINGULAR_BASIS;
1242:lp_solve_5.5/lp_simplex.c ****           break;
1243:lp_solve_5.5/lp_simplex.c ****         }
1244:lp_solve_5.5/lp_simplex.c ****         minit = ITERATE_MAJORMAJOR;
1245:lp_solve_5.5/lp_simplex.c ****         continue;
1246:lp_solve_5.5/lp_simplex.c ****       }
1247:lp_solve_5.5/lp_simplex.c **** #endif
1248:lp_solve_5.5/lp_simplex.c **** 
1249:lp_solve_5.5/lp_simplex.c ****       /* We may be infeasible, have lost dual feasibility, or simply have no valid entering
1250:lp_solve_5.5/lp_simplex.c ****          variable for the selected row.  The strategy is to refactorize if we suspect numerical
1251:lp_solve_5.5/lp_simplex.c ****          problems and loss of dual feasibility; this is done if it has been a while since
1252:lp_solve_5.5/lp_simplex.c ****          refactorization.  If not, first try to select a different row/leaving variable to
1253:lp_solve_5.5/lp_simplex.c ****          see if a valid entering variable can be found.  Otherwise, determine this model
1254:lp_solve_5.5/lp_simplex.c ****          as infeasible. */
1255:lp_solve_5.5/lp_simplex.c ****       else {
1256:lp_solve_5.5/lp_simplex.c **** 
1257:lp_solve_5.5/lp_simplex.c ****         /* As a first option, try to recover from any numerical trouble by refactorizing */
1258:lp_solve_5.5/lp_simplex.c ****         if(!refactRecent(lp)) {
 9817               		.loc 2 1258 0
 9818 4162 8FA9      		ldd r24,Y+55
 9819 4164 98AD      		ldd r25,Y+56
 9820 4166 0E94 0000 		call refactRecent
 9821 416a 8823      		tst r24
 9822 416c 01F4      		brne .L342
1259:lp_solve_5.5/lp_simplex.c ****           set_action(&lp->spx_action, ACTION_REINVERT);
 9823               		.loc 2 1259 0
 9824 416e 8FA9      		ldd r24,Y+55
 9825 4170 98AD      		ldd r25,Y+56
 9826 4172 8E50      		subi r24,14
 9827 4174 9D4F      		sbci r25,-3
 9828 4176 60E1      		ldi r22,lo8(16)
 9829 4178 70E0      		ldi r23,0
 9830 417a 0E94 0000 		call set_action
1260:lp_solve_5.5/lp_simplex.c ****           bfpfinal = TRUE;
 9831               		.loc 2 1260 0
 9832 417e 81E0      		ldi r24,lo8(1)
 9833 4180 8D83      		std Y+5,r24
 9834 4182 00C0      		rjmp .L341
 9835               	.L342:
1261:lp_solve_5.5/lp_simplex.c ****         }
1262:lp_solve_5.5/lp_simplex.c **** 
1263:lp_solve_5.5/lp_simplex.c **** #ifdef dual_UseRejectionList
1264:lp_solve_5.5/lp_simplex.c ****         /* Check for pivot size issues */
1265:lp_solve_5.5/lp_simplex.c ****         else if(lp->rejectpivot[0] < DEF_MAXPIVOTRETRY) {
 9836               		.loc 2 1265 0
 9837 4184 8FA9      		ldd r24,Y+55
 9838 4186 98AD      		ldd r25,Y+56
 9839 4188 8C52      		subi r24,44
 9840 418a 9D4F      		sbci r25,-3
 9841 418c DC01      		movw r26,r24
 9842 418e 8D91      		ld r24,X+
 9843 4190 9C91      		ld r25,X
 9844 4192 FC01      		movw r30,r24
 9845 4194 8081      		ld r24,Z
 9846 4196 9181      		ldd r25,Z+1
 9847 4198 0A97      		sbiw r24,10
 9848 419a 04F0      		brlt .+2
 9849 419c 00C0      		rjmp .L343
1266:lp_solve_5.5/lp_simplex.c ****           lp->spx_status = RUNNING;
 9850               		.loc 2 1266 0
 9851 419e 8FA9      		ldd r24,Y+55
 9852 41a0 98AD      		ldd r25,Y+56
 9853 41a2 8A5F      		subi r24,-6
 9854 41a4 9D4F      		sbci r25,-3
 9855 41a6 28E0      		ldi r18,lo8(8)
 9856 41a8 30E0      		ldi r19,0
 9857 41aa DC01      		movw r26,r24
 9858 41ac 2D93      		st X+,r18
 9859 41ae 3C93      		st X,r19
1267:lp_solve_5.5/lp_simplex.c ****           lp->rejectpivot[0]++;
 9860               		.loc 2 1267 0
 9861 41b0 8FA9      		ldd r24,Y+55
 9862 41b2 98AD      		ldd r25,Y+56
 9863 41b4 8C52      		subi r24,44
 9864 41b6 9D4F      		sbci r25,-3
 9865 41b8 FC01      		movw r30,r24
 9866 41ba 8081      		ld r24,Z
 9867 41bc 9181      		ldd r25,Z+1
 9868 41be DC01      		movw r26,r24
 9869 41c0 2D91      		ld r18,X+
 9870 41c2 3C91      		ld r19,X
 9871 41c4 2F5F      		subi r18,-1
 9872 41c6 3F4F      		sbci r19,-1
 9873 41c8 FC01      		movw r30,r24
 9874 41ca 3183      		std Z+1,r19
 9875 41cc 2083      		st Z,r18
1268:lp_solve_5.5/lp_simplex.c ****           lp->rejectpivot[lp->rejectpivot[0]] = rownr;
 9876               		.loc 2 1268 0
 9877 41ce 8FA9      		ldd r24,Y+55
 9878 41d0 98AD      		ldd r25,Y+56
 9879 41d2 8C52      		subi r24,44
 9880 41d4 9D4F      		sbci r25,-3
 9881 41d6 DC01      		movw r26,r24
 9882 41d8 2D91      		ld r18,X+
 9883 41da 3C91      		ld r19,X
 9884 41dc 8FA9      		ldd r24,Y+55
 9885 41de 98AD      		ldd r25,Y+56
 9886 41e0 8C52      		subi r24,44
 9887 41e2 9D4F      		sbci r25,-3
 9888 41e4 FC01      		movw r30,r24
 9889 41e6 8081      		ld r24,Z
 9890 41e8 9181      		ldd r25,Z+1
 9891 41ea DC01      		movw r26,r24
 9892 41ec 8D91      		ld r24,X+
 9893 41ee 9C91      		ld r25,X
 9894 41f0 880F      		lsl r24
 9895 41f2 991F      		rol r25
 9896 41f4 820F      		add r24,r18
 9897 41f6 931F      		adc r25,r19
 9898 41f8 2A85      		ldd r18,Y+10
 9899 41fa 3B85      		ldd r19,Y+11
 9900 41fc FC01      		movw r30,r24
 9901 41fe 3183      		std Z+1,r19
 9902 4200 2083      		st Z,r18
1269:lp_solve_5.5/lp_simplex.c ****           if(lp->bb_totalnodes == 0)
 9903               		.loc 2 1269 0
 9904 4202 8FA9      		ldd r24,Y+55
 9905 4204 98AD      		ldd r25,Y+56
 9906 4206 8A5C      		subi r24,-54
 9907 4208 9C4F      		sbci r25,-4
 9908 420a DC01      		movw r26,r24
 9909 420c AC90      		ld r10,X
 9910 420e FC01      		movw r30,r24
 9911 4210 B180      		ldd r11,Z+1
 9912 4212 DC01      		movw r26,r24
 9913 4214 1296      		adiw r26,2
 9914 4216 CC90      		ld r12,X
 9915 4218 FC01      		movw r30,r24
 9916 421a D380      		ldd r13,Z+3
 9917 421c DC01      		movw r26,r24
 9918 421e 1496      		adiw r26,4
 9919 4220 EC90      		ld r14,X
 9920 4222 FC01      		movw r30,r24
 9921 4224 F580      		ldd r15,Z+5
 9922 4226 DC01      		movw r26,r24
 9923 4228 1696      		adiw r26,6
 9924 422a 0C91      		ld r16,X
 9925 422c FC01      		movw r30,r24
 9926 422e 1781      		ldd r17,Z+7
 9927 4230 2A2D      		mov r18,r10
 9928 4232 3B2D      		mov r19,r11
 9929 4234 4C2D      		mov r20,r12
 9930 4236 5D2D      		mov r21,r13
 9931 4238 6E2D      		mov r22,r14
 9932 423a 7F2D      		mov r23,r15
 9933 423c 802F      		mov r24,r16
 9934 423e 912F      		mov r25,r17
 9935 4240 A0E0      		ldi r26,0
 9936 4242 0E94 0000 		call __cmpdi2_s8
 9937 4246 01F0      		breq .+2
 9938 4248 00C0      		rjmp .L299
1270:lp_solve_5.5/lp_simplex.c ****             report(lp, DETAILED, "...trying to find another pivot row!\n");
 9939               		.loc 2 1270 0
 9940 424a 80E0      		ldi r24,lo8(.LC29)
 9941 424c 90E0      		ldi r25,hi8(.LC29)
 9942 424e 892F      		mov r24,r25
 9943 4250 8F93      		push r24
 9944 4252 80E0      		ldi r24,lo8(.LC29)
 9945 4254 90E0      		ldi r25,hi8(.LC29)
 9946 4256 8F93      		push r24
 9947 4258 1F92      		push __zero_reg__
 9948 425a 85E0      		ldi r24,lo8(5)
 9949 425c 8F93      		push r24
 9950 425e 88AD      		ldd r24,Y+56
 9951 4260 8F93      		push r24
 9952 4262 8FA9      		ldd r24,Y+55
 9953 4264 8F93      		push r24
 9954 4266 0E94 0000 		call report
 9955 426a 0F90      		pop __tmp_reg__
 9956 426c 0F90      		pop __tmp_reg__
 9957 426e 0F90      		pop __tmp_reg__
 9958 4270 0F90      		pop __tmp_reg__
 9959 4272 0F90      		pop __tmp_reg__
 9960 4274 0F90      		pop __tmp_reg__
1271:lp_solve_5.5/lp_simplex.c ****           goto RetryRow;
 9961               		.loc 2 1271 0
 9962 4276 00C0      		rjmp .L299
 9963               	.L343:
1272:lp_solve_5.5/lp_simplex.c ****         }
1273:lp_solve_5.5/lp_simplex.c **** #endif
1274:lp_solve_5.5/lp_simplex.c ****         /* Check if we may have lost dual feasibility if we also did phase 1 here */
1275:lp_solve_5.5/lp_simplex.c ****         else if(dualphase1 && (dualoffset != 0)) {
 9964               		.loc 2 1275 0
 9965 4278 8A81      		ldd r24,Y+2
 9966 427a 8823      		tst r24
 9967 427c 01F4      		brne .+2
 9968 427e 00C0      		rjmp .L345
 9969               		.loc 2 1275 0 is_stmt 0 discriminator 1
 9970 4280 20E0      		ldi r18,0
 9971 4282 30E0      		ldi r19,0
 9972 4284 A901      		movw r20,r18
 9973 4286 6CAD      		ldd r22,Y+60
 9974 4288 7DAD      		ldd r23,Y+61
 9975 428a 8EAD      		ldd r24,Y+62
 9976 428c 9FAD      		ldd r25,Y+63
 9977 428e 0E94 0000 		call __nesf2
 9978 4292 8823      		tst r24
 9979 4294 01F4      		brne .+2
 9980 4296 00C0      		rjmp .L345
1276:lp_solve_5.5/lp_simplex.c ****           lp->spx_status = LOSTFEAS;
 9981               		.loc 2 1276 0 is_stmt 1
 9982 4298 8FA9      		ldd r24,Y+55
 9983 429a 98AD      		ldd r25,Y+56
 9984 429c 8A5F      		subi r24,-6
 9985 429e 9D4F      		sbci r25,-3
 9986 42a0 27E1      		ldi r18,lo8(23)
 9987 42a2 30E0      		ldi r19,0
 9988 42a4 DC01      		movw r26,r24
 9989 42a6 2D93      		st X+,r18
 9990 42a8 3C93      		st X,r19
1277:lp_solve_5.5/lp_simplex.c ****           if((lp->spx_trace && (lp->bb_totalnodes == 0)) ||
 9991               		.loc 2 1277 0
 9992 42aa 8FA9      		ldd r24,Y+55
 9993 42ac 98AD      		ldd r25,Y+56
 9994 42ae 8E5F      		subi r24,-2
 9995 42b0 9D4F      		sbci r25,-3
 9996 42b2 FC01      		movw r30,r24
 9997 42b4 8081      		ld r24,Z
 9998 42b6 8823      		tst r24
 9999 42b8 01F0      		breq .L347
 10000               		.loc 2 1277 0 is_stmt 0 discriminator 1
 10001 42ba 8FA9      		ldd r24,Y+55
 10002 42bc 98AD      		ldd r25,Y+56
 10003 42be 8A5C      		subi r24,-54
 10004 42c0 9C4F      		sbci r25,-4
 10005 42c2 DC01      		movw r26,r24
 10006 42c4 AC90      		ld r10,X
 10007 42c6 FC01      		movw r30,r24
 10008 42c8 B180      		ldd r11,Z+1
 10009 42ca DC01      		movw r26,r24
 10010 42cc 1296      		adiw r26,2
 10011 42ce CC90      		ld r12,X
 10012 42d0 FC01      		movw r30,r24
 10013 42d2 D380      		ldd r13,Z+3
 10014 42d4 DC01      		movw r26,r24
 10015 42d6 1496      		adiw r26,4
 10016 42d8 EC90      		ld r14,X
 10017 42da FC01      		movw r30,r24
 10018 42dc F580      		ldd r15,Z+5
 10019 42de DC01      		movw r26,r24
 10020 42e0 1696      		adiw r26,6
 10021 42e2 0C91      		ld r16,X
 10022 42e4 FC01      		movw r30,r24
 10023 42e6 1781      		ldd r17,Z+7
 10024 42e8 2A2D      		mov r18,r10
 10025 42ea 3B2D      		mov r19,r11
 10026 42ec 4C2D      		mov r20,r12
 10027 42ee 5D2D      		mov r21,r13
 10028 42f0 6E2D      		mov r22,r14
 10029 42f2 7F2D      		mov r23,r15
 10030 42f4 802F      		mov r24,r16
 10031 42f6 912F      		mov r25,r17
 10032 42f8 A0E0      		ldi r26,0
 10033 42fa 0E94 0000 		call __cmpdi2_s8
 10034 42fe 01F0      		breq .L348
 10035               	.L347:
1278:lp_solve_5.5/lp_simplex.c ****              (lp->bb_trace && (lp->bb_totalnodes > 0)))
 10036               		.loc 2 1278 0 is_stmt 1 discriminator 3
 10037 4300 8FA9      		ldd r24,Y+55
 10038 4302 98AD      		ldd r25,Y+56
 10039 4304 8D5F      		subi r24,-3
 10040 4306 9D4F      		sbci r25,-3
 10041 4308 DC01      		movw r26,r24
 10042 430a 8C91      		ld r24,X
1277:lp_solve_5.5/lp_simplex.c ****           if((lp->spx_trace && (lp->bb_totalnodes == 0)) ||
 10043               		.loc 2 1277 0 discriminator 3
 10044 430c 8823      		tst r24
 10045 430e 01F0      		breq .L349
 10046               		.loc 2 1278 0
 10047 4310 8FA9      		ldd r24,Y+55
 10048 4312 98AD      		ldd r25,Y+56
 10049 4314 8A5C      		subi r24,-54
 10050 4316 9C4F      		sbci r25,-4
 10051 4318 FC01      		movw r30,r24
 10052 431a A080      		ld r10,Z
 10053 431c DC01      		movw r26,r24
 10054 431e 1196      		adiw r26,1
 10055 4320 BC90      		ld r11,X
 10056 4322 FC01      		movw r30,r24
 10057 4324 C280      		ldd r12,Z+2
 10058 4326 DC01      		movw r26,r24
 10059 4328 1396      		adiw r26,3
 10060 432a DC90      		ld r13,X
 10061 432c FC01      		movw r30,r24
 10062 432e E480      		ldd r14,Z+4
 10063 4330 DC01      		movw r26,r24
 10064 4332 1596      		adiw r26,5
 10065 4334 FC90      		ld r15,X
 10066 4336 FC01      		movw r30,r24
 10067 4338 0681      		ldd r16,Z+6
 10068 433a DC01      		movw r26,r24
 10069 433c 1796      		adiw r26,7
 10070 433e 1C91      		ld r17,X
 10071 4340 2A2D      		mov r18,r10
 10072 4342 3B2D      		mov r19,r11
 10073 4344 4C2D      		mov r20,r12
 10074 4346 5D2D      		mov r21,r13
 10075 4348 6E2D      		mov r22,r14
 10076 434a 7F2D      		mov r23,r15
 10077 434c 802F      		mov r24,r16
 10078 434e 912F      		mov r25,r17
 10079 4350 A0E0      		ldi r26,0
 10080 4352 0E94 0000 		call __cmpdi2_s8
 10081 4356 01F0      		breq .L349
 10082 4358 04F0      		brlt .L349
 10083               	.L348:
1279:lp_solve_5.5/lp_simplex.c ****             report(lp, DETAILED, "dualloop: Model lost dual feasibility.\n");
 10084               		.loc 2 1279 0
 10085 435a 80E0      		ldi r24,lo8(.LC30)
 10086 435c 90E0      		ldi r25,hi8(.LC30)
 10087 435e 892F      		mov r24,r25
 10088 4360 8F93      		push r24
 10089 4362 80E0      		ldi r24,lo8(.LC30)
 10090 4364 90E0      		ldi r25,hi8(.LC30)
 10091 4366 8F93      		push r24
 10092 4368 1F92      		push __zero_reg__
 10093 436a 85E0      		ldi r24,lo8(5)
 10094 436c 8F93      		push r24
 10095 436e 88AD      		ldd r24,Y+56
 10096 4370 8F93      		push r24
 10097 4372 8FA9      		ldd r24,Y+55
 10098 4374 8F93      		push r24
 10099 4376 0E94 0000 		call report
 10100 437a 0F90      		pop __tmp_reg__
 10101 437c 0F90      		pop __tmp_reg__
 10102 437e 0F90      		pop __tmp_reg__
 10103 4380 0F90      		pop __tmp_reg__
 10104 4382 0F90      		pop __tmp_reg__
 10105 4384 0F90      		pop __tmp_reg__
 10106               	.L349:
1280:lp_solve_5.5/lp_simplex.c ****           ok = FALSE;
 10107               		.loc 2 1280 0
 10108 4386 198A      		std Y+17,__zero_reg__
 10109 4388 188A      		std Y+16,__zero_reg__
1281:lp_solve_5.5/lp_simplex.c ****           break;
 10110               		.loc 2 1281 0
 10111 438a 00C0      		rjmp .L276
 10112               	.L345:
1282:lp_solve_5.5/lp_simplex.c ****         }
1283:lp_solve_5.5/lp_simplex.c **** 
1284:lp_solve_5.5/lp_simplex.c ****         /* Otherwise just determine that we are infeasible */
1285:lp_solve_5.5/lp_simplex.c ****         else {
1286:lp_solve_5.5/lp_simplex.c ****           if(lp->spx_status == RUNNING) {
 10113               		.loc 2 1286 0
 10114 438c 8FA9      		ldd r24,Y+55
 10115 438e 98AD      		ldd r25,Y+56
 10116 4390 8A5F      		subi r24,-6
 10117 4392 9D4F      		sbci r25,-3
 10118 4394 FC01      		movw r30,r24
 10119 4396 8081      		ld r24,Z
 10120 4398 9181      		ldd r25,Z+1
 10121 439a 0897      		sbiw r24,8
 10122 439c 01F0      		breq .+2
 10123 439e 00C0      		rjmp .L350
1287:lp_solve_5.5/lp_simplex.c **** #if 1
1288:lp_solve_5.5/lp_simplex.c ****             if(xviolated < lp->epspivot) {
 10124               		.loc 2 1288 0
 10125 43a0 8FA9      		ldd r24,Y+55
 10126 43a2 98AD      		ldd r25,Y+56
 10127 43a4 8E5D      		subi r24,-34
 10128 43a6 9C4F      		sbci r25,-4
 10129 43a8 FC01      		movw r30,r24
 10130 43aa 8081      		ld r24,Z
 10131 43ac 9181      		ldd r25,Z+1
 10132 43ae A281      		ldd r26,Z+2
 10133 43b0 B381      		ldd r27,Z+3
 10134 43b2 29A5      		ldd r18,Y+41
 10135 43b4 3AA5      		ldd r19,Y+42
 10136 43b6 4BA5      		ldd r20,Y+43
 10137 43b8 5CA5      		ldd r21,Y+44
 10138 43ba BC01      		movw r22,r24
 10139 43bc CD01      		movw r24,r26
 10140 43be 0E94 0000 		call __gtsf2
 10141 43c2 1816      		cp __zero_reg__,r24
 10142 43c4 04F0      		brlt .+2
 10143 43c6 00C0      		rjmp .L399
1289:lp_solve_5.5/lp_simplex.c ****               if(lp->bb_trace || (lp->bb_totalnodes == 0))
 10144               		.loc 2 1289 0
 10145 43c8 8FA9      		ldd r24,Y+55
 10146 43ca 98AD      		ldd r25,Y+56
 10147 43cc 8D5F      		subi r24,-3
 10148 43ce 9D4F      		sbci r25,-3
 10149 43d0 DC01      		movw r26,r24
 10150 43d2 8C91      		ld r24,X
 10151 43d4 8823      		tst r24
 10152 43d6 01F4      		brne .L353
 10153               		.loc 2 1289 0 is_stmt 0 discriminator 1
 10154 43d8 8FA9      		ldd r24,Y+55
 10155 43da 98AD      		ldd r25,Y+56
 10156 43dc 8A5C      		subi r24,-54
 10157 43de 9C4F      		sbci r25,-4
 10158 43e0 FC01      		movw r30,r24
 10159 43e2 A080      		ld r10,Z
 10160 43e4 DC01      		movw r26,r24
 10161 43e6 1196      		adiw r26,1
 10162 43e8 BC90      		ld r11,X
 10163 43ea FC01      		movw r30,r24
 10164 43ec C280      		ldd r12,Z+2
 10165 43ee DC01      		movw r26,r24
 10166 43f0 1396      		adiw r26,3
 10167 43f2 DC90      		ld r13,X
 10168 43f4 FC01      		movw r30,r24
 10169 43f6 E480      		ldd r14,Z+4
 10170 43f8 DC01      		movw r26,r24
 10171 43fa 1596      		adiw r26,5
 10172 43fc FC90      		ld r15,X
 10173 43fe FC01      		movw r30,r24
 10174 4400 0681      		ldd r16,Z+6
 10175 4402 DC01      		movw r26,r24
 10176 4404 1796      		adiw r26,7
 10177 4406 1C91      		ld r17,X
 10178 4408 2A2D      		mov r18,r10
 10179 440a 3B2D      		mov r19,r11
 10180 440c 4C2D      		mov r20,r12
 10181 440e 5D2D      		mov r21,r13
 10182 4410 6E2D      		mov r22,r14
 10183 4412 7F2D      		mov r23,r15
 10184 4414 802F      		mov r24,r16
 10185 4416 912F      		mov r25,r17
 10186 4418 A0E0      		ldi r26,0
 10187 441a 0E94 0000 		call __cmpdi2_s8
 10188 441e 01F4      		brne .L354
 10189               	.L353:
1290:lp_solve_5.5/lp_simplex.c ****                 report(lp, NORMAL, "The model is primal optimal, but marginally infeasible.\n");
 10190               		.loc 2 1290 0 is_stmt 1
 10191 4420 80E0      		ldi r24,lo8(.LC31)
 10192 4422 90E0      		ldi r25,hi8(.LC31)
 10193 4424 892F      		mov r24,r25
 10194 4426 8F93      		push r24
 10195 4428 80E0      		ldi r24,lo8(.LC31)
 10196 442a 90E0      		ldi r25,hi8(.LC31)
 10197 442c 8F93      		push r24
 10198 442e 1F92      		push __zero_reg__
 10199 4430 84E0      		ldi r24,lo8(4)
 10200 4432 8F93      		push r24
 10201 4434 88AD      		ldd r24,Y+56
 10202 4436 8F93      		push r24
 10203 4438 8FA9      		ldd r24,Y+55
 10204 443a 8F93      		push r24
 10205 443c 0E94 0000 		call report
 10206 4440 0F90      		pop __tmp_reg__
 10207 4442 0F90      		pop __tmp_reg__
 10208 4444 0F90      		pop __tmp_reg__
 10209 4446 0F90      		pop __tmp_reg__
 10210 4448 0F90      		pop __tmp_reg__
 10211 444a 0F90      		pop __tmp_reg__
 10212               	.L354:
1291:lp_solve_5.5/lp_simplex.c ****               lp->spx_status = OPTIMAL;
 10213               		.loc 2 1291 0
 10214 444c 8FA9      		ldd r24,Y+55
 10215 444e 98AD      		ldd r25,Y+56
 10216 4450 8A5F      		subi r24,-6
 10217 4452 9D4F      		sbci r25,-3
 10218 4454 FC01      		movw r30,r24
 10219 4456 1182      		std Z+1,__zero_reg__
 10220 4458 1082      		st Z,__zero_reg__
1292:lp_solve_5.5/lp_simplex.c ****               break;
 10221               		.loc 2 1292 0
 10222 445a 00C0      		rjmp .L276
 10223               	.L399:
1293:lp_solve_5.5/lp_simplex.c ****             }
1294:lp_solve_5.5/lp_simplex.c **** #endif
1295:lp_solve_5.5/lp_simplex.c ****             lp->spx_status = INFEASIBLE;
 10224               		.loc 2 1295 0
 10225 445c 8FA9      		ldd r24,Y+55
 10226 445e 98AD      		ldd r25,Y+56
 10227 4460 8A5F      		subi r24,-6
 10228 4462 9D4F      		sbci r25,-3
 10229 4464 22E0      		ldi r18,lo8(2)
 10230 4466 30E0      		ldi r19,0
 10231 4468 DC01      		movw r26,r24
 10232 446a 2D93      		st X+,r18
 10233 446c 3C93      		st X,r19
1296:lp_solve_5.5/lp_simplex.c ****             if((lp->spx_trace && (lp->bb_totalnodes == 0)) ||
 10234               		.loc 2 1296 0
 10235 446e 8FA9      		ldd r24,Y+55
 10236 4470 98AD      		ldd r25,Y+56
 10237 4472 8E5F      		subi r24,-2
 10238 4474 9D4F      		sbci r25,-3
 10239 4476 FC01      		movw r30,r24
 10240 4478 8081      		ld r24,Z
 10241 447a 8823      		tst r24
 10242 447c 01F0      		breq .L355
 10243               		.loc 2 1296 0 is_stmt 0 discriminator 1
 10244 447e 8FA9      		ldd r24,Y+55
 10245 4480 98AD      		ldd r25,Y+56
 10246 4482 8A5C      		subi r24,-54
 10247 4484 9C4F      		sbci r25,-4
 10248 4486 DC01      		movw r26,r24
 10249 4488 AC90      		ld r10,X
 10250 448a FC01      		movw r30,r24
 10251 448c B180      		ldd r11,Z+1
 10252 448e DC01      		movw r26,r24
 10253 4490 1296      		adiw r26,2
 10254 4492 CC90      		ld r12,X
 10255 4494 FC01      		movw r30,r24
 10256 4496 D380      		ldd r13,Z+3
 10257 4498 DC01      		movw r26,r24
 10258 449a 1496      		adiw r26,4
 10259 449c EC90      		ld r14,X
 10260 449e FC01      		movw r30,r24
 10261 44a0 F580      		ldd r15,Z+5
 10262 44a2 DC01      		movw r26,r24
 10263 44a4 1696      		adiw r26,6
 10264 44a6 0C91      		ld r16,X
 10265 44a8 FC01      		movw r30,r24
 10266 44aa 1781      		ldd r17,Z+7
 10267 44ac 2A2D      		mov r18,r10
 10268 44ae 3B2D      		mov r19,r11
 10269 44b0 4C2D      		mov r20,r12
 10270 44b2 5D2D      		mov r21,r13
 10271 44b4 6E2D      		mov r22,r14
 10272 44b6 7F2D      		mov r23,r15
 10273 44b8 802F      		mov r24,r16
 10274 44ba 912F      		mov r25,r17
 10275 44bc A0E0      		ldi r26,0
 10276 44be 0E94 0000 		call __cmpdi2_s8
 10277 44c2 01F0      		breq .L356
 10278               	.L355:
1297:lp_solve_5.5/lp_simplex.c ****                (lp->bb_trace && (lp->bb_totalnodes > 0)))
 10279               		.loc 2 1297 0 is_stmt 1 discriminator 3
 10280 44c4 8FA9      		ldd r24,Y+55
 10281 44c6 98AD      		ldd r25,Y+56
 10282 44c8 8D5F      		subi r24,-3
 10283 44ca 9D4F      		sbci r25,-3
 10284 44cc DC01      		movw r26,r24
 10285 44ce 8C91      		ld r24,X
1296:lp_solve_5.5/lp_simplex.c ****             if((lp->spx_trace && (lp->bb_totalnodes == 0)) ||
 10286               		.loc 2 1296 0 discriminator 3
 10287 44d0 8823      		tst r24
 10288 44d2 01F0      		breq .L350
 10289               		.loc 2 1297 0
 10290 44d4 8FA9      		ldd r24,Y+55
 10291 44d6 98AD      		ldd r25,Y+56
 10292 44d8 8A5C      		subi r24,-54
 10293 44da 9C4F      		sbci r25,-4
 10294 44dc FC01      		movw r30,r24
 10295 44de A080      		ld r10,Z
 10296 44e0 DC01      		movw r26,r24
 10297 44e2 1196      		adiw r26,1
 10298 44e4 BC90      		ld r11,X
 10299 44e6 FC01      		movw r30,r24
 10300 44e8 C280      		ldd r12,Z+2
 10301 44ea DC01      		movw r26,r24
 10302 44ec 1396      		adiw r26,3
 10303 44ee DC90      		ld r13,X
 10304 44f0 FC01      		movw r30,r24
 10305 44f2 E480      		ldd r14,Z+4
 10306 44f4 DC01      		movw r26,r24
 10307 44f6 1596      		adiw r26,5
 10308 44f8 FC90      		ld r15,X
 10309 44fa FC01      		movw r30,r24
 10310 44fc 0681      		ldd r16,Z+6
 10311 44fe DC01      		movw r26,r24
 10312 4500 1796      		adiw r26,7
 10313 4502 1C91      		ld r17,X
 10314 4504 2A2D      		mov r18,r10
 10315 4506 3B2D      		mov r19,r11
 10316 4508 4C2D      		mov r20,r12
 10317 450a 5D2D      		mov r21,r13
 10318 450c 6E2D      		mov r22,r14
 10319 450e 7F2D      		mov r23,r15
 10320 4510 802F      		mov r24,r16
 10321 4512 912F      		mov r25,r17
 10322 4514 A0E0      		ldi r26,0
 10323 4516 0E94 0000 		call __cmpdi2_s8
 10324 451a 01F0      		breq .L350
 10325 451c 04F0      		brlt .L350
 10326               	.L356:
1298:lp_solve_5.5/lp_simplex.c ****             report(lp, DETAILED, "The model is primal infeasible.\n");
 10327               		.loc 2 1298 0
 10328 451e 80E0      		ldi r24,lo8(.LC23)
 10329 4520 90E0      		ldi r25,hi8(.LC23)
 10330 4522 892F      		mov r24,r25
 10331 4524 8F93      		push r24
 10332 4526 80E0      		ldi r24,lo8(.LC23)
 10333 4528 90E0      		ldi r25,hi8(.LC23)
 10334 452a 8F93      		push r24
 10335 452c 1F92      		push __zero_reg__
 10336 452e 85E0      		ldi r24,lo8(5)
 10337 4530 8F93      		push r24
 10338 4532 88AD      		ldd r24,Y+56
 10339 4534 8F93      		push r24
 10340 4536 8FA9      		ldd r24,Y+55
 10341 4538 8F93      		push r24
 10342 453a 0E94 0000 		call report
 10343 453e 0F90      		pop __tmp_reg__
 10344 4540 0F90      		pop __tmp_reg__
 10345 4542 0F90      		pop __tmp_reg__
 10346 4544 0F90      		pop __tmp_reg__
 10347 4546 0F90      		pop __tmp_reg__
 10348 4548 0F90      		pop __tmp_reg__
 10349               	.L350:
1299:lp_solve_5.5/lp_simplex.c ****           }
1300:lp_solve_5.5/lp_simplex.c ****           ok = FALSE;
 10350               		.loc 2 1300 0
 10351 454a 198A      		std Y+17,__zero_reg__
 10352 454c 188A      		std Y+16,__zero_reg__
1301:lp_solve_5.5/lp_simplex.c ****           break;
 10353               		.loc 2 1301 0
 10354 454e 00C0      		rjmp .L276
 10355               	.L325:
1302:lp_solve_5.5/lp_simplex.c ****         }
1303:lp_solve_5.5/lp_simplex.c ****       }
1304:lp_solve_5.5/lp_simplex.c ****     }
1305:lp_solve_5.5/lp_simplex.c **** 
1306:lp_solve_5.5/lp_simplex.c ****     /* Make sure that we enter the primal simplex with a high quality solution */
1307:lp_solve_5.5/lp_simplex.c ****     else if(inP1extra && !refactRecent(lp) && is_action(lp->improve, IMPROVE_INVERSE)) {
 10356               		.loc 2 1307 0
 10357 4550 8981      		ldd r24,Y+1
 10358 4552 8823      		tst r24
 10359 4554 01F0      		breq .L357
 10360               		.loc 2 1307 0 is_stmt 0 discriminator 1
 10361 4556 8FA9      		ldd r24,Y+55
 10362 4558 98AD      		ldd r25,Y+56
 10363 455a 0E94 0000 		call refactRecent
 10364 455e 8823      		tst r24
 10365 4560 01F4      		brne .L357
 10366               		.loc 2 1307 0 discriminator 2
 10367 4562 8FA9      		ldd r24,Y+55
 10368 4564 98AD      		ldd r25,Y+56
 10369 4566 8059      		subi r24,-112
 10370 4568 9D4F      		sbci r25,-3
 10371 456a FC01      		movw r30,r24
 10372 456c 8081      		ld r24,Z
 10373 456e 9181      		ldd r25,Z+1
 10374 4570 65E0      		ldi r22,lo8(5)
 10375 4572 70E0      		ldi r23,0
 10376 4574 0E94 0000 		call is_action
 10377 4578 8823      		tst r24
 10378 457a 01F0      		breq .L357
1308:lp_solve_5.5/lp_simplex.c ****        set_action(&lp->spx_action, ACTION_REINVERT);
 10379               		.loc 2 1308 0 is_stmt 1
 10380 457c 8FA9      		ldd r24,Y+55
 10381 457e 98AD      		ldd r25,Y+56
 10382 4580 8E50      		subi r24,14
 10383 4582 9D4F      		sbci r25,-3
 10384 4584 60E1      		ldi r22,lo8(16)
 10385 4586 70E0      		ldi r23,0
 10386 4588 0E94 0000 		call set_action
1309:lp_solve_5.5/lp_simplex.c ****        bfpfinal = TRUE;
 10387               		.loc 2 1309 0
 10388 458c 81E0      		ldi r24,lo8(1)
 10389 458e 8D83      		std Y+5,r24
 10390 4590 00C0      		rjmp .L341
 10391               	.L357:
1310:lp_solve_5.5/lp_simplex.c ****     }
1311:lp_solve_5.5/lp_simplex.c **** 
1312:lp_solve_5.5/lp_simplex.c ****     /* High quality solution with no leaving candidates available ... */
1313:lp_solve_5.5/lp_simplex.c ****     else {
1314:lp_solve_5.5/lp_simplex.c **** 
1315:lp_solve_5.5/lp_simplex.c ****       bfpfinal = TRUE;
 10392               		.loc 2 1315 0
 10393 4592 81E0      		ldi r24,lo8(1)
 10394 4594 8D83      		std Y+5,r24
1316:lp_solve_5.5/lp_simplex.c **** 
1317:lp_solve_5.5/lp_simplex.c **** #ifdef dual_RemoveBasicFixedVars
1318:lp_solve_5.5/lp_simplex.c ****       /* See if we should try to eliminate basic fixed variables;
1319:lp_solve_5.5/lp_simplex.c ****         can be time-consuming for some models */
1320:lp_solve_5.5/lp_simplex.c ****       if(inP1extra && (colnr == 0) && (lp->fixedvars > 0) && is_anti_degen(lp, ANTIDEGEN_FIXEDVARS)
 10395               		.loc 2 1320 0
 10396 4596 8981      		ldd r24,Y+1
 10397 4598 8823      		tst r24
 10398 459a 01F4      		brne .+2
 10399 459c 00C0      		rjmp .L358
 10400               		.loc 2 1320 0 is_stmt 0 discriminator 1
 10401 459e 8885      		ldd r24,Y+8
 10402 45a0 9985      		ldd r25,Y+9
 10403 45a2 892B      		or r24,r25
 10404 45a4 01F0      		breq .+2
 10405 45a6 00C0      		rjmp .L358
 10406               		.loc 2 1320 0 discriminator 2
 10407 45a8 8FA9      		ldd r24,Y+55
 10408 45aa 98AD      		ldd r25,Y+56
 10409 45ac 8457      		subi r24,116
 10410 45ae 9D4F      		sbci r25,-3
 10411 45b0 DC01      		movw r26,r24
 10412 45b2 8D91      		ld r24,X+
 10413 45b4 9C91      		ld r25,X
 10414 45b6 1816      		cp __zero_reg__,r24
 10415 45b8 1906      		cpc __zero_reg__,r25
 10416 45ba 04F0      		brlt .+2
 10417 45bc 00C0      		rjmp .L358
 10418               		.loc 2 1320 0 discriminator 3
 10419 45be 8FA9      		ldd r24,Y+55
 10420 45c0 98AD      		ldd r25,Y+56
 10421 45c2 61E0      		ldi r22,lo8(1)
 10422 45c4 70E0      		ldi r23,0
 10423 45c6 0E94 0000 		call is_anti_degen
 10424 45ca 8823      		tst r24
 10425 45cc 01F4      		brne .+2
 10426 45ce 00C0      		rjmp .L358
1321:lp_solve_5.5/lp_simplex.c ****         report(lp, DETAILED, "dualloop: Trying to pivot out %d fixed basic variables at iter %.0f\n
1322:lp_solve_5.5/lp_simplex.c ****                              lp->fixedvars, (double) get_total_iter(lp));
 10427               		.loc 2 1322 0 is_stmt 1
 10428 45d0 8FA9      		ldd r24,Y+55
 10429 45d2 98AD      		ldd r25,Y+56
 10430 45d4 0E94 0000 		call get_total_iter
 10431 45d8 A22E      		mov r10,r18
 10432 45da B32E      		mov r11,r19
 10433 45dc C42E      		mov r12,r20
 10434 45de D52E      		mov r13,r21
 10435 45e0 E62E      		mov r14,r22
 10436 45e2 F72E      		mov r15,r23
 10437 45e4 082F      		mov r16,r24
 10438 45e6 192F      		mov r17,r25
1321:lp_solve_5.5/lp_simplex.c ****         report(lp, DETAILED, "dualloop: Trying to pivot out %d fixed basic variables at iter %.0f\n
 10439               		.loc 2 1321 0
 10440 45e8 2A2D      		mov r18,r10
 10441 45ea 3B2D      		mov r19,r11
 10442 45ec 4C2D      		mov r20,r12
 10443 45ee 5D2D      		mov r21,r13
 10444 45f0 6E2D      		mov r22,r14
 10445 45f2 7F2D      		mov r23,r15
 10446 45f4 802F      		mov r24,r16
 10447 45f6 912F      		mov r25,r17
 10448 45f8 0E94 0000 		call __floatdisf
 10449 45fc DC01      		movw r26,r24
 10450 45fe CB01      		movw r24,r22
 10451 4600 2FA9      		ldd r18,Y+55
 10452 4602 38AD      		ldd r19,Y+56
 10453 4604 2457      		subi r18,116
 10454 4606 3D4F      		sbci r19,-3
 10455 4608 F901      		movw r30,r18
 10456 460a 2081      		ld r18,Z
 10457 460c 3181      		ldd r19,Z+1
 10458 460e 4B2F      		mov r20,r27
 10459 4610 4F93      		push r20
 10460 4612 4A2F      		mov r20,r26
 10461 4614 4F93      		push r20
 10462 4616 492F      		mov r20,r25
 10463 4618 4F93      		push r20
 10464 461a 8F93      		push r24
 10465 461c 832F      		mov r24,r19
 10466 461e 8F93      		push r24
 10467 4620 822F      		mov r24,r18
 10468 4622 8F93      		push r24
 10469 4624 80E0      		ldi r24,lo8(.LC32)
 10470 4626 90E0      		ldi r25,hi8(.LC32)
 10471 4628 892F      		mov r24,r25
 10472 462a 8F93      		push r24
 10473 462c 80E0      		ldi r24,lo8(.LC32)
 10474 462e 90E0      		ldi r25,hi8(.LC32)
 10475 4630 8F93      		push r24
 10476 4632 1F92      		push __zero_reg__
 10477 4634 85E0      		ldi r24,lo8(5)
 10478 4636 8F93      		push r24
 10479 4638 88AD      		ldd r24,Y+56
 10480 463a 8F93      		push r24
 10481 463c 8FA9      		ldd r24,Y+55
 10482 463e 8F93      		push r24
 10483 4640 0E94 0000 		call report
 10484 4644 8DB7      		in r24,__SP_L__
 10485 4646 9EB7      		in r25,__SP_H__
 10486 4648 0C96      		adiw r24,12
 10487 464a 0FB6      		in __tmp_reg__,__SREG__
 10488 464c F894      		cli
 10489 464e DEBF      		out __SP_H__,r29
 10490 4650 0FBE      		out __SREG__,__tmp_reg__
 10491 4652 CDBF      		out __SP_L__,r28
1323:lp_solve_5.5/lp_simplex.c ****         rownr = 0;
 10492               		.loc 2 1323 0
 10493 4654 1B86      		std Y+11,__zero_reg__
 10494 4656 1A86      		std Y+10,__zero_reg__
1324:lp_solve_5.5/lp_simplex.c ****         while(lp->fixedvars > 0) {
 10495               		.loc 2 1324 0
 10496 4658 00C0      		rjmp .L359
 10497               	.L361:
1325:lp_solve_5.5/lp_simplex.c ****           rownr = findBasicFixedvar(lp, rownr, TRUE);
 10498               		.loc 2 1325 0
 10499 465a 2A85      		ldd r18,Y+10
 10500 465c 3B85      		ldd r19,Y+11
 10501 465e 8FA9      		ldd r24,Y+55
 10502 4660 98AD      		ldd r25,Y+56
 10503 4662 41E0      		ldi r20,lo8(1)
 10504 4664 B901      		movw r22,r18
 10505 4666 0E94 0000 		call findBasicFixedvar
 10506 466a 9B87      		std Y+11,r25
 10507 466c 8A87      		std Y+10,r24
1326:lp_solve_5.5/lp_simplex.c ****           if(rownr == 0) {
 10508               		.loc 2 1326 0
 10509 466e 8A85      		ldd r24,Y+10
 10510 4670 9B85      		ldd r25,Y+11
 10511 4672 892B      		or r24,r25
 10512 4674 01F4      		brne .L360
1327:lp_solve_5.5/lp_simplex.c ****             colnr = 0;
 10513               		.loc 2 1327 0
 10514 4676 1986      		std Y+9,__zero_reg__
 10515 4678 1886      		std Y+8,__zero_reg__
1328:lp_solve_5.5/lp_simplex.c ****             break;
 10516               		.loc 2 1328 0
 10517 467a 00C0      		rjmp .L358
 10518               	.L360:
1329:lp_solve_5.5/lp_simplex.c ****           }
1330:lp_solve_5.5/lp_simplex.c ****           colnr = find_rowReplacement(lp, rownr, prow, nzprow);
 10519               		.loc 2 1330 0
 10520 467c 2DA9      		ldd r18,Y+53
 10521 467e 3EA9      		ldd r19,Y+54
 10522 4680 49A9      		ldd r20,Y+49
 10523 4682 5AA9      		ldd r21,Y+50
 10524 4684 6A85      		ldd r22,Y+10
 10525 4686 7B85      		ldd r23,Y+11
 10526 4688 8FA9      		ldd r24,Y+55
 10527 468a 98AD      		ldd r25,Y+56
 10528 468c 0E94 0000 		call find_rowReplacement
 10529 4690 9987      		std Y+9,r25
 10530 4692 8887      		std Y+8,r24
1331:lp_solve_5.5/lp_simplex.c ****           if(colnr > 0) {
 10531               		.loc 2 1331 0
 10532 4694 8885      		ldd r24,Y+8
 10533 4696 9985      		ldd r25,Y+9
 10534 4698 1816      		cp __zero_reg__,r24
 10535 469a 1906      		cpc __zero_reg__,r25
 10536 469c 04F4      		brge .L359
1332:lp_solve_5.5/lp_simplex.c ****             theta = 0;
 10537               		.loc 2 1332 0
 10538 469e 1DA2      		std Y+37,__zero_reg__
 10539 46a0 1EA2      		std Y+38,__zero_reg__
 10540 46a2 1FA2      		std Y+39,__zero_reg__
 10541 46a4 18A6      		std Y+40,__zero_reg__
1333:lp_solve_5.5/lp_simplex.c ****             performiteration(lp, rownr, colnr, theta, TRUE, FALSE, prow, NULL,
 10542               		.loc 2 1333 0
 10543 46a6 29A9      		ldd r18,Y+49
 10544 46a8 3AA9      		ldd r19,Y+50
 10545 46aa 8DA1      		ldd r24,Y+37
 10546 46ac 9EA1      		ldd r25,Y+38
 10547 46ae AFA1      		ldd r26,Y+39
 10548 46b0 B8A5      		ldd r27,Y+40
 10549 46b2 4885      		ldd r20,Y+8
 10550 46b4 5985      		ldd r21,Y+9
 10551 46b6 6A85      		ldd r22,Y+10
 10552 46b8 7B85      		ldd r23,Y+11
 10553 46ba EFA9      		ldd r30,Y+55
 10554 46bc F8AD      		ldd r31,Y+56
 10555 46be 1F92      		push __zero_reg__
 10556 46c0 1F92      		push __zero_reg__
 10557 46c2 1F92      		push __zero_reg__
 10558 46c4 1F92      		push __zero_reg__
 10559 46c6 1F92      		push __zero_reg__
 10560 46c8 1F92      		push __zero_reg__
 10561 46ca 812C      		mov r8,__zero_reg__
 10562 46cc 912C      		mov r9,__zero_reg__
 10563 46ce 5901      		movw r10,r18
 10564 46d0 C12C      		mov r12,__zero_reg__
 10565 46d2 EE24      		clr r14
 10566 46d4 E394      		inc r14
 10567 46d6 8C01      		movw r16,r24
 10568 46d8 9D01      		movw r18,r26
 10569 46da CF01      		movw r24,r30
 10570 46dc 0E94 0000 		call performiteration
 10571 46e0 0F90      		pop __tmp_reg__
 10572 46e2 0F90      		pop __tmp_reg__
 10573 46e4 0F90      		pop __tmp_reg__
 10574 46e6 0F90      		pop __tmp_reg__
 10575 46e8 0F90      		pop __tmp_reg__
 10576 46ea 0F90      		pop __tmp_reg__
1334:lp_solve_5.5/lp_simplex.c ****                                                             NULL, NULL, NULL);
1335:lp_solve_5.5/lp_simplex.c ****             lp->fixedvars--;
 10577               		.loc 2 1335 0
 10578 46ec 8FA9      		ldd r24,Y+55
 10579 46ee 98AD      		ldd r25,Y+56
 10580 46f0 8457      		subi r24,116
 10581 46f2 9D4F      		sbci r25,-3
 10582 46f4 DC01      		movw r26,r24
 10583 46f6 8D91      		ld r24,X+
 10584 46f8 9C91      		ld r25,X
 10585 46fa 9C01      		movw r18,r24
 10586 46fc 2150      		subi r18,1
 10587 46fe 3109      		sbc r19,__zero_reg__
 10588 4700 8FA9      		ldd r24,Y+55
 10589 4702 98AD      		ldd r25,Y+56
 10590 4704 8457      		subi r24,116
 10591 4706 9D4F      		sbci r25,-3
 10592 4708 FC01      		movw r30,r24
 10593 470a 3183      		std Z+1,r19
 10594 470c 2083      		st Z,r18
 10595               	.L359:
1324:lp_solve_5.5/lp_simplex.c ****           rownr = findBasicFixedvar(lp, rownr, TRUE);
 10596               		.loc 2 1324 0
 10597 470e 8FA9      		ldd r24,Y+55
 10598 4710 98AD      		ldd r25,Y+56
 10599 4712 8457      		subi r24,116
 10600 4714 9D4F      		sbci r25,-3
 10601 4716 DC01      		movw r26,r24
 10602 4718 8D91      		ld r24,X+
 10603 471a 9C91      		ld r25,X
 10604 471c 1816      		cp __zero_reg__,r24
 10605 471e 1906      		cpc __zero_reg__,r25
 10606 4720 04F4      		brge .+2
 10607 4722 00C0      		rjmp .L361
 10608               	.L358:
1336:lp_solve_5.5/lp_simplex.c ****           }
1337:lp_solve_5.5/lp_simplex.c ****         }
1338:lp_solve_5.5/lp_simplex.c ****       }
1339:lp_solve_5.5/lp_simplex.c **** #endif
1340:lp_solve_5.5/lp_simplex.c **** 
1341:lp_solve_5.5/lp_simplex.c ****       /* Check if we are INFEASIBLE for the case that the dual is used
1342:lp_solve_5.5/lp_simplex.c ****          as phase 1 before the primal simplex phase 2 */
1343:lp_solve_5.5/lp_simplex.c ****       if(inP1extra && (colnr < 0) && !isPrimalFeasible(lp, lp->epsprimal, NULL, NULL)) {
 10609               		.loc 2 1343 0
 10610 4724 8981      		ldd r24,Y+1
 10611 4726 8823      		tst r24
 10612 4728 01F4      		brne .+2
 10613 472a 00C0      		rjmp .L362
 10614               		.loc 2 1343 0 is_stmt 0 discriminator 1
 10615 472c 8885      		ldd r24,Y+8
 10616 472e 9985      		ldd r25,Y+9
 10617 4730 9923      		tst r25
 10618 4732 04F0      		brlt .+2
 10619 4734 00C0      		rjmp .L362
 10620               		.loc 2 1343 0 discriminator 2
 10621 4736 8FA9      		ldd r24,Y+55
 10622 4738 98AD      		ldd r25,Y+56
 10623 473a 865E      		subi r24,-26
 10624 473c 9C4F      		sbci r25,-4
 10625 473e FC01      		movw r30,r24
 10626 4740 8081      		ld r24,Z
 10627 4742 9181      		ldd r25,Z+1
 10628 4744 A281      		ldd r26,Z+2
 10629 4746 B381      		ldd r27,Z+3
 10630 4748 EFA9      		ldd r30,Y+55
 10631 474a F8AD      		ldd r31,Y+56
 10632 474c 00E0      		ldi r16,0
 10633 474e 10E0      		ldi r17,0
 10634 4750 20E0      		ldi r18,0
 10635 4752 30E0      		ldi r19,0
 10636 4754 AC01      		movw r20,r24
 10637 4756 BD01      		movw r22,r26
 10638 4758 CF01      		movw r24,r30
 10639 475a 0E94 0000 		call isPrimalFeasible
 10640 475e 8823      		tst r24
 10641 4760 01F0      		breq .+2
 10642 4762 00C0      		rjmp .L362
1344:lp_solve_5.5/lp_simplex.c ****         if(lp->bb_totalnodes == 0) {
 10643               		.loc 2 1344 0 is_stmt 1
 10644 4764 8FA9      		ldd r24,Y+55
 10645 4766 98AD      		ldd r25,Y+56
 10646 4768 8A5C      		subi r24,-54
 10647 476a 9C4F      		sbci r25,-4
 10648 476c DC01      		movw r26,r24
 10649 476e AC90      		ld r10,X
 10650 4770 FC01      		movw r30,r24
 10651 4772 B180      		ldd r11,Z+1
 10652 4774 DC01      		movw r26,r24
 10653 4776 1296      		adiw r26,2
 10654 4778 CC90      		ld r12,X
 10655 477a FC01      		movw r30,r24
 10656 477c D380      		ldd r13,Z+3
 10657 477e DC01      		movw r26,r24
 10658 4780 1496      		adiw r26,4
 10659 4782 EC90      		ld r14,X
 10660 4784 FC01      		movw r30,r24
 10661 4786 F580      		ldd r15,Z+5
 10662 4788 DC01      		movw r26,r24
 10663 478a 1696      		adiw r26,6
 10664 478c 0C91      		ld r16,X
 10665 478e FC01      		movw r30,r24
 10666 4790 1781      		ldd r17,Z+7
 10667 4792 2A2D      		mov r18,r10
 10668 4794 3B2D      		mov r19,r11
 10669 4796 4C2D      		mov r20,r12
 10670 4798 5D2D      		mov r21,r13
 10671 479a 6E2D      		mov r22,r14
 10672 479c 7F2D      		mov r23,r15
 10673 479e 802F      		mov r24,r16
 10674 47a0 912F      		mov r25,r17
 10675 47a2 A0E0      		ldi r26,0
 10676 47a4 0E94 0000 		call __cmpdi2_s8
 10677 47a8 01F4      		brne .L363
1345:lp_solve_5.5/lp_simplex.c ****           if(dualfeasible)
 10678               		.loc 2 1345 0
 10679 47aa 89AD      		ldd r24,Y+57
 10680 47ac 8823      		tst r24
 10681 47ae 01F0      		breq .L364
1346:lp_solve_5.5/lp_simplex.c ****             report(lp, DETAILED, "The model is primal infeasible and dual feasible.\n");
 10682               		.loc 2 1346 0
 10683 47b0 80E0      		ldi r24,lo8(.LC33)
 10684 47b2 90E0      		ldi r25,hi8(.LC33)
 10685 47b4 892F      		mov r24,r25
 10686 47b6 8F93      		push r24
 10687 47b8 80E0      		ldi r24,lo8(.LC33)
 10688 47ba 90E0      		ldi r25,hi8(.LC33)
 10689 47bc 8F93      		push r24
 10690 47be 1F92      		push __zero_reg__
 10691 47c0 85E0      		ldi r24,lo8(5)
 10692 47c2 8F93      		push r24
 10693 47c4 88AD      		ldd r24,Y+56
 10694 47c6 8F93      		push r24
 10695 47c8 8FA9      		ldd r24,Y+55
 10696 47ca 8F93      		push r24
 10697 47cc 0E94 0000 		call report
 10698 47d0 0F90      		pop __tmp_reg__
 10699 47d2 0F90      		pop __tmp_reg__
 10700 47d4 0F90      		pop __tmp_reg__
 10701 47d6 0F90      		pop __tmp_reg__
 10702 47d8 0F90      		pop __tmp_reg__
 10703 47da 0F90      		pop __tmp_reg__
 10704 47dc 00C0      		rjmp .L363
 10705               	.L364:
1347:lp_solve_5.5/lp_simplex.c ****           else
1348:lp_solve_5.5/lp_simplex.c ****             report(lp, DETAILED, "The model is primal infeasible and dual unbounded.\n");
 10706               		.loc 2 1348 0
 10707 47de 80E0      		ldi r24,lo8(.LC34)
 10708 47e0 90E0      		ldi r25,hi8(.LC34)
 10709 47e2 892F      		mov r24,r25
 10710 47e4 8F93      		push r24
 10711 47e6 80E0      		ldi r24,lo8(.LC34)
 10712 47e8 90E0      		ldi r25,hi8(.LC34)
 10713 47ea 8F93      		push r24
 10714 47ec 1F92      		push __zero_reg__
 10715 47ee 85E0      		ldi r24,lo8(5)
 10716 47f0 8F93      		push r24
 10717 47f2 88AD      		ldd r24,Y+56
 10718 47f4 8F93      		push r24
 10719 47f6 8FA9      		ldd r24,Y+55
 10720 47f8 8F93      		push r24
 10721 47fa 0E94 0000 		call report
 10722 47fe 0F90      		pop __tmp_reg__
 10723 4800 0F90      		pop __tmp_reg__
 10724 4802 0F90      		pop __tmp_reg__
 10725 4804 0F90      		pop __tmp_reg__
 10726 4806 0F90      		pop __tmp_reg__
 10727 4808 0F90      		pop __tmp_reg__
 10728               	.L363:
1349:lp_solve_5.5/lp_simplex.c ****         }
1350:lp_solve_5.5/lp_simplex.c ****         set_OF_p1extra(lp, 0);
 10729               		.loc 2 1350 0
 10730 480a 8FA9      		ldd r24,Y+55
 10731 480c 98AD      		ldd r25,Y+56
 10732 480e 40E0      		ldi r20,0
 10733 4810 50E0      		ldi r21,0
 10734 4812 BA01      		movw r22,r20
 10735 4814 0E94 0000 		call set_OF_p1extra
1351:lp_solve_5.5/lp_simplex.c ****         inP1extra = FALSE;
 10736               		.loc 2 1351 0
 10737 4818 1982      		std Y+1,__zero_reg__
1352:lp_solve_5.5/lp_simplex.c ****         set_action(&lp->spx_action, ACTION_REINVERT);
 10738               		.loc 2 1352 0
 10739 481a 8FA9      		ldd r24,Y+55
 10740 481c 98AD      		ldd r25,Y+56
 10741 481e 8E50      		subi r24,14
 10742 4820 9D4F      		sbci r25,-3
 10743 4822 60E1      		ldi r22,lo8(16)
 10744 4824 70E0      		ldi r23,0
 10745 4826 0E94 0000 		call set_action
1353:lp_solve_5.5/lp_simplex.c ****         lp->spx_status = INFEASIBLE;
 10746               		.loc 2 1353 0
 10747 482a 8FA9      		ldd r24,Y+55
 10748 482c 98AD      		ldd r25,Y+56
 10749 482e 8A5F      		subi r24,-6
 10750 4830 9D4F      		sbci r25,-3
 10751 4832 22E0      		ldi r18,lo8(2)
 10752 4834 30E0      		ldi r19,0
 10753 4836 DC01      		movw r26,r24
 10754 4838 2D93      		st X+,r18
 10755 483a 3C93      		st X,r19
1354:lp_solve_5.5/lp_simplex.c ****         lp->simplex_mode = SIMPLEX_UNDEFINED;
 10756               		.loc 2 1354 0
 10757 483c 8FA9      		ldd r24,Y+55
 10758 483e 98AD      		ldd r25,Y+56
 10759 4840 8A5A      		subi r24,-86
 10760 4842 9D4F      		sbci r25,-3
 10761 4844 FC01      		movw r30,r24
 10762 4846 1182      		std Z+1,__zero_reg__
 10763 4848 1082      		st Z,__zero_reg__
1355:lp_solve_5.5/lp_simplex.c ****         ok = FALSE;
 10764               		.loc 2 1355 0
 10765 484a 198A      		std Y+17,__zero_reg__
 10766 484c 188A      		std Y+16,__zero_reg__
 10767 484e 00C0      		rjmp .L365
 10768               	.L362:
1356:lp_solve_5.5/lp_simplex.c ****       }
1357:lp_solve_5.5/lp_simplex.c **** 
1358:lp_solve_5.5/lp_simplex.c ****       /* Check if we are FEASIBLE (and possibly also optimal) for the case that the
1359:lp_solve_5.5/lp_simplex.c ****          dual is used as phase 1 before the primal simplex phase 2 */
1360:lp_solve_5.5/lp_simplex.c ****       else if(inP1extra) {
 10769               		.loc 2 1360 0
 10770 4850 8981      		ldd r24,Y+1
 10771 4852 8823      		tst r24
 10772 4854 01F4      		brne .+2
 10773 4856 00C0      		rjmp .L366
1361:lp_solve_5.5/lp_simplex.c **** 
1362:lp_solve_5.5/lp_simplex.c ****         /* Set default action; force an update of the rhs vector, adjusted for
1363:lp_solve_5.5/lp_simplex.c ****            the new P1extraVal=0 (set here so that usermessage() behaves properly) */
1364:lp_solve_5.5/lp_simplex.c ****         if(lp->bb_totalnodes == 0) {
 10774               		.loc 2 1364 0
 10775 4858 8FA9      		ldd r24,Y+55
 10776 485a 98AD      		ldd r25,Y+56
 10777 485c 8A5C      		subi r24,-54
 10778 485e 9C4F      		sbci r25,-4
 10779 4860 DC01      		movw r26,r24
 10780 4862 AC90      		ld r10,X
 10781 4864 FC01      		movw r30,r24
 10782 4866 B180      		ldd r11,Z+1
 10783 4868 DC01      		movw r26,r24
 10784 486a 1296      		adiw r26,2
 10785 486c CC90      		ld r12,X
 10786 486e FC01      		movw r30,r24
 10787 4870 D380      		ldd r13,Z+3
 10788 4872 DC01      		movw r26,r24
 10789 4874 1496      		adiw r26,4
 10790 4876 EC90      		ld r14,X
 10791 4878 FC01      		movw r30,r24
 10792 487a F580      		ldd r15,Z+5
 10793 487c DC01      		movw r26,r24
 10794 487e 1696      		adiw r26,6
 10795 4880 0C91      		ld r16,X
 10796 4882 FC01      		movw r30,r24
 10797 4884 1781      		ldd r17,Z+7
 10798 4886 2A2D      		mov r18,r10
 10799 4888 3B2D      		mov r19,r11
 10800 488a 4C2D      		mov r20,r12
 10801 488c 5D2D      		mov r21,r13
 10802 488e 6E2D      		mov r22,r14
 10803 4890 7F2D      		mov r23,r15
 10804 4892 802F      		mov r24,r16
 10805 4894 912F      		mov r25,r17
 10806 4896 A0E0      		ldi r26,0
 10807 4898 0E94 0000 		call __cmpdi2_s8
 10808 489c 01F0      		breq .+2
 10809 489e 00C0      		rjmp .L367
1365:lp_solve_5.5/lp_simplex.c ****           report(lp, NORMAL, "Found feasibility by dual simplex after    %10.0f iter.\n",
1366:lp_solve_5.5/lp_simplex.c ****                              (double) get_total_iter(lp));
 10810               		.loc 2 1366 0
 10811 48a0 8FA9      		ldd r24,Y+55
 10812 48a2 98AD      		ldd r25,Y+56
 10813 48a4 0E94 0000 		call get_total_iter
 10814 48a8 A22E      		mov r10,r18
 10815 48aa B32E      		mov r11,r19
 10816 48ac C42E      		mov r12,r20
 10817 48ae D52E      		mov r13,r21
 10818 48b0 E62E      		mov r14,r22
 10819 48b2 F72E      		mov r15,r23
 10820 48b4 082F      		mov r16,r24
 10821 48b6 192F      		mov r17,r25
1365:lp_solve_5.5/lp_simplex.c ****           report(lp, NORMAL, "Found feasibility by dual simplex after    %10.0f iter.\n",
 10822               		.loc 2 1365 0
 10823 48b8 2A2D      		mov r18,r10
 10824 48ba 3B2D      		mov r19,r11
 10825 48bc 4C2D      		mov r20,r12
 10826 48be 5D2D      		mov r21,r13
 10827 48c0 6E2D      		mov r22,r14
 10828 48c2 7F2D      		mov r23,r15
 10829 48c4 802F      		mov r24,r16
 10830 48c6 912F      		mov r25,r17
 10831 48c8 0E94 0000 		call __floatdisf
 10832 48cc DC01      		movw r26,r24
 10833 48ce CB01      		movw r24,r22
 10834 48d0 2B2F      		mov r18,r27
 10835 48d2 2F93      		push r18
 10836 48d4 2A2F      		mov r18,r26
 10837 48d6 2F93      		push r18
 10838 48d8 292F      		mov r18,r25
 10839 48da 2F93      		push r18
 10840 48dc 8F93      		push r24
 10841 48de 80E0      		ldi r24,lo8(.LC35)
 10842 48e0 90E0      		ldi r25,hi8(.LC35)
 10843 48e2 892F      		mov r24,r25
 10844 48e4 8F93      		push r24
 10845 48e6 80E0      		ldi r24,lo8(.LC35)
 10846 48e8 90E0      		ldi r25,hi8(.LC35)
 10847 48ea 8F93      		push r24
 10848 48ec 1F92      		push __zero_reg__
 10849 48ee 84E0      		ldi r24,lo8(4)
 10850 48f0 8F93      		push r24
 10851 48f2 88AD      		ldd r24,Y+56
 10852 48f4 8F93      		push r24
 10853 48f6 8FA9      		ldd r24,Y+55
 10854 48f8 8F93      		push r24
 10855 48fa 0E94 0000 		call report
 10856 48fe 8DB7      		in r24,__SP_L__
 10857 4900 9EB7      		in r25,__SP_H__
 10858 4902 0A96      		adiw r24,10
 10859 4904 0FB6      		in __tmp_reg__,__SREG__
 10860 4906 F894      		cli
 10861 4908 DEBF      		out __SP_H__,r29
 10862 490a 0FBE      		out __SREG__,__tmp_reg__
 10863 490c CDBF      		out __SP_L__,r28
1367:lp_solve_5.5/lp_simplex.c ****           if((lp->usermessage != NULL) && (lp->msgmask & MSG_LPFEASIBLE))
 10864               		.loc 2 1367 0
 10865 490e 8FA9      		ldd r24,Y+55
 10866 4910 98AD      		ldd r25,Y+56
 10867 4912 9C5F      		subi r25,-4
 10868 4914 DC01      		movw r26,r24
 10869 4916 8D91      		ld r24,X+
 10870 4918 9C91      		ld r25,X
 10871 491a 892B      		or r24,r25
 10872 491c 01F0      		breq .L367
 10873               		.loc 2 1367 0 is_stmt 0 discriminator 1
 10874 491e 8FA9      		ldd r24,Y+55
 10875 4920 98AD      		ldd r25,Y+56
 10876 4922 8E5F      		subi r24,-2
 10877 4924 9B4F      		sbci r25,-5
 10878 4926 FC01      		movw r30,r24
 10879 4928 8081      		ld r24,Z
 10880 492a 9181      		ldd r25,Z+1
 10881 492c 8870      		andi r24,8
 10882 492e 9927      		clr r25
 10883 4930 892B      		or r24,r25
 10884 4932 01F0      		breq .L367
1368:lp_solve_5.5/lp_simplex.c ****             lp->usermessage(lp, lp->msghandle, MSG_LPFEASIBLE);
 10885               		.loc 2 1368 0 is_stmt 1
 10886 4934 8FA9      		ldd r24,Y+55
 10887 4936 98AD      		ldd r25,Y+56
 10888 4938 9C5F      		subi r25,-4
 10889 493a DC01      		movw r26,r24
 10890 493c 2D91      		ld r18,X+
 10891 493e 3C91      		ld r19,X
 10892 4940 8FA9      		ldd r24,Y+55
 10893 4942 98AD      		ldd r25,Y+56
 10894 4944 8C5F      		subi r24,-4
 10895 4946 9B4F      		sbci r25,-5
 10896 4948 FC01      		movw r30,r24
 10897 494a 6081      		ld r22,Z
 10898 494c 7181      		ldd r23,Z+1
 10899 494e 8FA9      		ldd r24,Y+55
 10900 4950 98AD      		ldd r25,Y+56
 10901 4952 48E0      		ldi r20,lo8(8)
 10902 4954 50E0      		ldi r21,0
 10903 4956 F901      		movw r30,r18
 10904 4958 0995      		icall
 10905               	.L367:
1369:lp_solve_5.5/lp_simplex.c ****         }
1370:lp_solve_5.5/lp_simplex.c ****         set_OF_p1extra(lp, 0);
 10906               		.loc 2 1370 0
 10907 495a 8FA9      		ldd r24,Y+55
 10908 495c 98AD      		ldd r25,Y+56
 10909 495e 40E0      		ldi r20,0
 10910 4960 50E0      		ldi r21,0
 10911 4962 BA01      		movw r22,r20
 10912 4964 0E94 0000 		call set_OF_p1extra
1371:lp_solve_5.5/lp_simplex.c ****         inP1extra = FALSE;
 10913               		.loc 2 1371 0
 10914 4968 1982      		std Y+1,__zero_reg__
1372:lp_solve_5.5/lp_simplex.c ****         set_action(&lp->spx_action, ACTION_REINVERT);
 10915               		.loc 2 1372 0
 10916 496a 8FA9      		ldd r24,Y+55
 10917 496c 98AD      		ldd r25,Y+56
 10918 496e 8E50      		subi r24,14
 10919 4970 9D4F      		sbci r25,-3
 10920 4972 60E1      		ldi r22,lo8(16)
 10921 4974 70E0      		ldi r23,0
 10922 4976 0E94 0000 		call set_action
1373:lp_solve_5.5/lp_simplex.c **** 
1374:lp_solve_5.5/lp_simplex.c **** #if 1
1375:lp_solve_5.5/lp_simplex.c ****         /* Optionally try another dual loop, if so selected by the user */
1376:lp_solve_5.5/lp_simplex.c ****         if((lp->simplex_strategy & SIMPLEX_DUAL_PRIMAL) && (lp->fixedvars == 0))
 10923               		.loc 2 1376 0
 10924 497a 8FA9      		ldd r24,Y+55
 10925 497c 98AD      		ldd r25,Y+56
 10926 497e 8C5A      		subi r24,-84
 10927 4980 9D4F      		sbci r25,-3
 10928 4982 DC01      		movw r26,r24
 10929 4984 8D91      		ld r24,X+
 10930 4986 9C91      		ld r25,X
 10931 4988 8670      		andi r24,6
 10932 498a 9927      		clr r25
 10933 498c 892B      		or r24,r25
 10934 498e 01F0      		breq .L368
 10935               		.loc 2 1376 0 is_stmt 0 discriminator 1
 10936 4990 8FA9      		ldd r24,Y+55
 10937 4992 98AD      		ldd r25,Y+56
 10938 4994 8457      		subi r24,116
 10939 4996 9D4F      		sbci r25,-3
 10940 4998 FC01      		movw r30,r24
 10941 499a 8081      		ld r24,Z
 10942 499c 9181      		ldd r25,Z+1
 10943 499e 892B      		or r24,r25
 10944 49a0 01F4      		brne .L368
1377:lp_solve_5.5/lp_simplex.c ****           lp->spx_status = SWITCH_TO_PRIMAL;
 10945               		.loc 2 1377 0 is_stmt 1
 10946 49a2 8FA9      		ldd r24,Y+55
 10947 49a4 98AD      		ldd r25,Y+56
 10948 49a6 8A5F      		subi r24,-6
 10949 49a8 9D4F      		sbci r25,-3
 10950 49aa 24E1      		ldi r18,lo8(20)
 10951 49ac 30E0      		ldi r19,0
 10952 49ae DC01      		movw r26,r24
 10953 49b0 2D93      		st X+,r18
 10954 49b2 3C93      		st X,r19
 10955               	.L368:
1378:lp_solve_5.5/lp_simplex.c **** #endif
1379:lp_solve_5.5/lp_simplex.c ****         changedphase = TRUE;
 10956               		.loc 2 1379 0
 10957 49b4 81E0      		ldi r24,lo8(1)
 10958 49b6 8B83      		std Y+3,r24
 10959 49b8 00C0      		rjmp .L365
 10960               	.L366:
1380:lp_solve_5.5/lp_simplex.c **** 
1381:lp_solve_5.5/lp_simplex.c ****       }
1382:lp_solve_5.5/lp_simplex.c **** 
1383:lp_solve_5.5/lp_simplex.c ****       /* We are primal feasible and also optimal if we were in phase 2 */
1384:lp_solve_5.5/lp_simplex.c ****       else  {
1385:lp_solve_5.5/lp_simplex.c **** 
1386:lp_solve_5.5/lp_simplex.c ****         lp->simplex_mode = SIMPLEX_Phase2_DUAL;
 10961               		.loc 2 1386 0
 10962 49ba 8FA9      		ldd r24,Y+55
 10963 49bc 98AD      		ldd r25,Y+56
 10964 49be 8A5A      		subi r24,-86
 10965 49c0 9D4F      		sbci r25,-3
 10966 49c2 28E0      		ldi r18,lo8(8)
 10967 49c4 30E0      		ldi r19,0
 10968 49c6 FC01      		movw r30,r24
 10969 49c8 3183      		std Z+1,r19
 10970 49ca 2083      		st Z,r18
1387:lp_solve_5.5/lp_simplex.c **** 
1388:lp_solve_5.5/lp_simplex.c ****         /* Check if we still have equality slacks stuck in the basis; drive them out? */
1389:lp_solve_5.5/lp_simplex.c ****         if((lp->fixedvars > 0) && (lp->bb_totalnodes == 0)) {
 10971               		.loc 2 1389 0
 10972 49cc 8FA9      		ldd r24,Y+55
 10973 49ce 98AD      		ldd r25,Y+56
 10974 49d0 8457      		subi r24,116
 10975 49d2 9D4F      		sbci r25,-3
 10976 49d4 DC01      		movw r26,r24
 10977 49d6 8D91      		ld r24,X+
 10978 49d8 9C91      		ld r25,X
 10979 49da 1816      		cp __zero_reg__,r24
 10980 49dc 1906      		cpc __zero_reg__,r25
 10981 49de 04F0      		brlt .+2
 10982 49e0 00C0      		rjmp .L369
 10983               		.loc 2 1389 0 is_stmt 0 discriminator 1
 10984 49e2 8FA9      		ldd r24,Y+55
 10985 49e4 98AD      		ldd r25,Y+56
 10986 49e6 8A5C      		subi r24,-54
 10987 49e8 9C4F      		sbci r25,-4
 10988 49ea FC01      		movw r30,r24
 10989 49ec A080      		ld r10,Z
 10990 49ee DC01      		movw r26,r24
 10991 49f0 1196      		adiw r26,1
 10992 49f2 BC90      		ld r11,X
 10993 49f4 FC01      		movw r30,r24
 10994 49f6 C280      		ldd r12,Z+2
 10995 49f8 DC01      		movw r26,r24
 10996 49fa 1396      		adiw r26,3
 10997 49fc DC90      		ld r13,X
 10998 49fe FC01      		movw r30,r24
 10999 4a00 E480      		ldd r14,Z+4
 11000 4a02 DC01      		movw r26,r24
 11001 4a04 1596      		adiw r26,5
 11002 4a06 FC90      		ld r15,X
 11003 4a08 FC01      		movw r30,r24
 11004 4a0a 0681      		ldd r16,Z+6
 11005 4a0c DC01      		movw r26,r24
 11006 4a0e 1796      		adiw r26,7
 11007 4a10 1C91      		ld r17,X
 11008 4a12 2A2D      		mov r18,r10
 11009 4a14 3B2D      		mov r19,r11
 11010 4a16 4C2D      		mov r20,r12
 11011 4a18 5D2D      		mov r21,r13
 11012 4a1a 6E2D      		mov r22,r14
 11013 4a1c 7F2D      		mov r23,r15
 11014 4a1e 802F      		mov r24,r16
 11015 4a20 912F      		mov r25,r17
 11016 4a22 A0E0      		ldi r26,0
 11017 4a24 0E94 0000 		call __cmpdi2_s8
 11018 4a28 01F4      		brne .L369
1390:lp_solve_5.5/lp_simplex.c **** #ifdef dual_Phase1PriceEqualities
1391:lp_solve_5.5/lp_simplex.c ****           if(forceoutEQ != TRUE) {
1392:lp_solve_5.5/lp_simplex.c ****             forceoutEQ = TRUE;
1393:lp_solve_5.5/lp_simplex.c ****             goto RetryRow;
1394:lp_solve_5.5/lp_simplex.c ****           }
1395:lp_solve_5.5/lp_simplex.c **** #endif
1396:lp_solve_5.5/lp_simplex.c **** #ifdef Paranoia
1397:lp_solve_5.5/lp_simplex.c ****           report(lp, NORMAL,
1398:lp_solve_5.5/lp_simplex.c **** #else
1399:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED,
 11019               		.loc 2 1399 0 is_stmt 1
 11020 4a2a 8FA9      		ldd r24,Y+55
 11021 4a2c 98AD      		ldd r25,Y+56
 11022 4a2e 8457      		subi r24,116
 11023 4a30 9D4F      		sbci r25,-3
 11024 4a32 FC01      		movw r30,r24
 11025 4a34 8081      		ld r24,Z
 11026 4a36 9181      		ldd r25,Z+1
 11027 4a38 292F      		mov r18,r25
 11028 4a3a 2F93      		push r18
 11029 4a3c 8F93      		push r24
 11030 4a3e 80E0      		ldi r24,lo8(.LC36)
 11031 4a40 90E0      		ldi r25,hi8(.LC36)
 11032 4a42 892F      		mov r24,r25
 11033 4a44 8F93      		push r24
 11034 4a46 80E0      		ldi r24,lo8(.LC36)
 11035 4a48 90E0      		ldi r25,hi8(.LC36)
 11036 4a4a 8F93      		push r24
 11037 4a4c 1F92      		push __zero_reg__
 11038 4a4e 85E0      		ldi r24,lo8(5)
 11039 4a50 8F93      		push r24
 11040 4a52 88AD      		ldd r24,Y+56
 11041 4a54 8F93      		push r24
 11042 4a56 8FA9      		ldd r24,Y+55
 11043 4a58 8F93      		push r24
 11044 4a5a 0E94 0000 		call report
 11045 4a5e 8DB7      		in r24,__SP_L__
 11046 4a60 9EB7      		in r25,__SP_H__
 11047 4a62 0896      		adiw r24,8
 11048 4a64 0FB6      		in __tmp_reg__,__SREG__
 11049 4a66 F894      		cli
 11050 4a68 DEBF      		out __SP_H__,r29
 11051 4a6a 0FBE      		out __SREG__,__tmp_reg__
 11052 4a6c CDBF      		out __SP_L__,r28
 11053               	.L369:
1400:lp_solve_5.5/lp_simplex.c **** #endif
1401:lp_solve_5.5/lp_simplex.c ****                     "Found dual solution with %d fixed slack variables left basic.\n",
1402:lp_solve_5.5/lp_simplex.c ****                     lp->fixedvars);
1403:lp_solve_5.5/lp_simplex.c ****         }
1404:lp_solve_5.5/lp_simplex.c ****         /* Check if we are still dual feasible; the default assumes that this check
1405:lp_solve_5.5/lp_simplex.c ****           is not necessary after the relaxed problem has been solved satisfactorily. */
1406:lp_solve_5.5/lp_simplex.c ****         colnr = 0;
 11054               		.loc 2 1406 0
 11055 4a6e 1986      		std Y+9,__zero_reg__
 11056 4a70 1886      		std Y+8,__zero_reg__
1407:lp_solve_5.5/lp_simplex.c ****         if((dualoffset != 0) || (lp->bb_level <= 1) || (lp->improve & IMPROVE_BBSIMPLEX) || (lp->bb
 11057               		.loc 2 1407 0
 11058 4a72 20E0      		ldi r18,0
 11059 4a74 30E0      		ldi r19,0
 11060 4a76 A901      		movw r20,r18
 11061 4a78 6CAD      		ldd r22,Y+60
 11062 4a7a 7DAD      		ldd r23,Y+61
 11063 4a7c 8EAD      		ldd r24,Y+62
 11064 4a7e 9FAD      		ldd r25,Y+63
 11065 4a80 0E94 0000 		call __nesf2
 11066 4a84 8823      		tst r24
 11067 4a86 01F4      		brne .L370
 11068               		.loc 2 1407 0 is_stmt 0 discriminator 1
 11069 4a88 8FA9      		ldd r24,Y+55
 11070 4a8a 98AD      		ldd r25,Y+56
 11071 4a8c 805D      		subi r24,-48
 11072 4a8e 9C4F      		sbci r25,-4
 11073 4a90 DC01      		movw r26,r24
 11074 4a92 8D91      		ld r24,X+
 11075 4a94 9C91      		ld r25,X
 11076 4a96 0297      		sbiw r24,2
 11077 4a98 04F0      		brlt .L370
 11078               		.loc 2 1407 0 discriminator 2
 11079 4a9a 8FA9      		ldd r24,Y+55
 11080 4a9c 98AD      		ldd r25,Y+56
 11081 4a9e 8059      		subi r24,-112
 11082 4aa0 9D4F      		sbci r25,-3
 11083 4aa2 FC01      		movw r30,r24
 11084 4aa4 8081      		ld r24,Z
 11085 4aa6 9181      		ldd r25,Z+1
 11086 4aa8 8870      		andi r24,8
 11087 4aaa 9927      		clr r25
 11088 4aac 892B      		or r24,r25
 11089 4aae 01F4      		brne .L370
 11090               		.loc 2 1407 0 discriminator 3
 11091 4ab0 8FA9      		ldd r24,Y+55
 11092 4ab2 98AD      		ldd r25,Y+56
 11093 4ab4 8C59      		subi r24,-100
 11094 4ab6 9D4F      		sbci r25,-3
 11095 4ab8 DC01      		movw r26,r24
 11096 4aba 8D91      		ld r24,X+
 11097 4abc 9C91      		ld r25,X
 11098 4abe 8827      		clr r24
 11099 4ac0 9074      		andi r25,64
 11100 4ac2 892B      		or r24,r25
 11101 4ac4 01F4      		brne .+2
 11102 4ac6 00C0      		rjmp .L371
 11103               	.L370:
1408:lp_solve_5.5/lp_simplex.c ****           set_action(&lp->piv_strategy, PRICE_FORCEFULL);
 11104               		.loc 2 1408 0 is_stmt 1
 11105 4ac8 8FA9      		ldd r24,Y+55
 11106 4aca 98AD      		ldd r25,Y+56
 11107 4acc 805A      		subi r24,-96
 11108 4ace 9D4F      		sbci r25,-3
 11109 4ad0 60E0      		ldi r22,0
 11110 4ad2 70E2      		ldi r23,lo8(32)
 11111 4ad4 0E94 0000 		call set_action
1409:lp_solve_5.5/lp_simplex.c ****             colnr = colprim(lp, drow, nzdrow, FALSE, 1, &candidatecount, FALSE, NULL);
 11112               		.loc 2 1409 0
 11113 4ad8 9E01      		movw r18,r28
 11114 4ada 2D5D      		subi r18,-35
 11115 4adc 3F4F      		sbci r19,-1
 11116 4ade 498D      		ldd r20,Y+25
 11117 4ae0 5A8D      		ldd r21,Y+26
 11118 4ae2 6D89      		ldd r22,Y+21
 11119 4ae4 7E89      		ldd r23,Y+22
 11120 4ae6 8FA9      		ldd r24,Y+55
 11121 4ae8 98AD      		ldd r25,Y+56
 11122 4aea A12C      		mov r10,__zero_reg__
 11123 4aec B12C      		mov r11,__zero_reg__
 11124 4aee C12C      		mov r12,__zero_reg__
 11125 4af0 7901      		movw r14,r18
 11126 4af2 01E0      		ldi r16,lo8(1)
 11127 4af4 10E0      		ldi r17,0
 11128 4af6 20E0      		ldi r18,0
 11129 4af8 0E94 0000 		call colprim
 11130 4afc 9987      		std Y+9,r25
 11131 4afe 8887      		std Y+8,r24
1410:lp_solve_5.5/lp_simplex.c ****           clear_action(&lp->piv_strategy, PRICE_FORCEFULL);
 11132               		.loc 2 1410 0
 11133 4b00 8FA9      		ldd r24,Y+55
 11134 4b02 98AD      		ldd r25,Y+56
 11135 4b04 805A      		subi r24,-96
 11136 4b06 9D4F      		sbci r25,-3
 11137 4b08 60E0      		ldi r22,0
 11138 4b0a 70E2      		ldi r23,lo8(32)
 11139 4b0c 0E94 0000 		call clear_action
1411:lp_solve_5.5/lp_simplex.c ****           if((dualoffset == 0) && (colnr > 0)) {
 11140               		.loc 2 1411 0
 11141 4b10 20E0      		ldi r18,0
 11142 4b12 30E0      		ldi r19,0
 11143 4b14 A901      		movw r20,r18
 11144 4b16 6CAD      		ldd r22,Y+60
 11145 4b18 7DAD      		ldd r23,Y+61
 11146 4b1a 8EAD      		ldd r24,Y+62
 11147 4b1c 9FAD      		ldd r25,Y+63
 11148 4b1e 0E94 0000 		call __eqsf2
 11149 4b22 8823      		tst r24
 11150 4b24 01F0      		breq .+2
 11151 4b26 00C0      		rjmp .L371
 11152               		.loc 2 1411 0 is_stmt 0 discriminator 1
 11153 4b28 8885      		ldd r24,Y+8
 11154 4b2a 9985      		ldd r25,Y+9
 11155 4b2c 1816      		cp __zero_reg__,r24
 11156 4b2e 1906      		cpc __zero_reg__,r25
 11157 4b30 04F0      		brlt .+2
 11158 4b32 00C0      		rjmp .L371
1412:lp_solve_5.5/lp_simplex.c ****             lp->spx_status = LOSTFEAS;
 11159               		.loc 2 1412 0 is_stmt 1
 11160 4b34 8FA9      		ldd r24,Y+55
 11161 4b36 98AD      		ldd r25,Y+56
 11162 4b38 8A5F      		subi r24,-6
 11163 4b3a 9D4F      		sbci r25,-3
 11164 4b3c 27E1      		ldi r18,lo8(23)
 11165 4b3e 30E0      		ldi r19,0
 11166 4b40 FC01      		movw r30,r24
 11167 4b42 3183      		std Z+1,r19
 11168 4b44 2083      		st Z,r18
1413:lp_solve_5.5/lp_simplex.c ****             if(lp->total_iter == 0)
 11169               		.loc 2 1413 0
 11170 4b46 8FA9      		ldd r24,Y+55
 11171 4b48 98AD      		ldd r25,Y+56
 11172 4b4a 885C      		subi r24,-56
 11173 4b4c 9D4F      		sbci r25,-3
 11174 4b4e DC01      		movw r26,r24
 11175 4b50 AC90      		ld r10,X
 11176 4b52 FC01      		movw r30,r24
 11177 4b54 B180      		ldd r11,Z+1
 11178 4b56 DC01      		movw r26,r24
 11179 4b58 1296      		adiw r26,2
 11180 4b5a CC90      		ld r12,X
 11181 4b5c FC01      		movw r30,r24
 11182 4b5e D380      		ldd r13,Z+3
 11183 4b60 DC01      		movw r26,r24
 11184 4b62 1496      		adiw r26,4
 11185 4b64 EC90      		ld r14,X
 11186 4b66 FC01      		movw r30,r24
 11187 4b68 F580      		ldd r15,Z+5
 11188 4b6a DC01      		movw r26,r24
 11189 4b6c 1696      		adiw r26,6
 11190 4b6e 0C91      		ld r16,X
 11191 4b70 FC01      		movw r30,r24
 11192 4b72 1781      		ldd r17,Z+7
 11193 4b74 2A2D      		mov r18,r10
 11194 4b76 3B2D      		mov r19,r11
 11195 4b78 4C2D      		mov r20,r12
 11196 4b7a 5D2D      		mov r21,r13
 11197 4b7c 6E2D      		mov r22,r14
 11198 4b7e 7F2D      		mov r23,r15
 11199 4b80 802F      		mov r24,r16
 11200 4b82 912F      		mov r25,r17
 11201 4b84 A0E0      		ldi r26,0
 11202 4b86 0E94 0000 		call __cmpdi2_s8
 11203 4b8a 01F0      		breq .+2
 11204 4b8c 00C0      		rjmp .L404
1414:lp_solve_5.5/lp_simplex.c ****               report(lp, DETAILED, "Recovering lost dual feasibility at iter %10.0f.\n",
1415:lp_solve_5.5/lp_simplex.c ****                                    (double) get_total_iter(lp));
 11205               		.loc 2 1415 0
 11206 4b8e 8FA9      		ldd r24,Y+55
 11207 4b90 98AD      		ldd r25,Y+56
 11208 4b92 0E94 0000 		call get_total_iter
 11209 4b96 A22E      		mov r10,r18
 11210 4b98 B32E      		mov r11,r19
 11211 4b9a C42E      		mov r12,r20
 11212 4b9c D52E      		mov r13,r21
 11213 4b9e E62E      		mov r14,r22
 11214 4ba0 F72E      		mov r15,r23
 11215 4ba2 082F      		mov r16,r24
 11216 4ba4 192F      		mov r17,r25
1414:lp_solve_5.5/lp_simplex.c ****               report(lp, DETAILED, "Recovering lost dual feasibility at iter %10.0f.\n",
 11217               		.loc 2 1414 0
 11218 4ba6 2A2D      		mov r18,r10
 11219 4ba8 3B2D      		mov r19,r11
 11220 4baa 4C2D      		mov r20,r12
 11221 4bac 5D2D      		mov r21,r13
 11222 4bae 6E2D      		mov r22,r14
 11223 4bb0 7F2D      		mov r23,r15
 11224 4bb2 802F      		mov r24,r16
 11225 4bb4 912F      		mov r25,r17
 11226 4bb6 0E94 0000 		call __floatdisf
 11227 4bba DC01      		movw r26,r24
 11228 4bbc CB01      		movw r24,r22
 11229 4bbe 2B2F      		mov r18,r27
 11230 4bc0 2F93      		push r18
 11231 4bc2 2A2F      		mov r18,r26
 11232 4bc4 2F93      		push r18
 11233 4bc6 292F      		mov r18,r25
 11234 4bc8 2F93      		push r18
 11235 4bca 8F93      		push r24
 11236 4bcc 80E0      		ldi r24,lo8(.LC37)
 11237 4bce 90E0      		ldi r25,hi8(.LC37)
 11238 4bd0 892F      		mov r24,r25
 11239 4bd2 8F93      		push r24
 11240 4bd4 80E0      		ldi r24,lo8(.LC37)
 11241 4bd6 90E0      		ldi r25,hi8(.LC37)
 11242 4bd8 8F93      		push r24
 11243 4bda 1F92      		push __zero_reg__
 11244 4bdc 85E0      		ldi r24,lo8(5)
 11245 4bde 8F93      		push r24
 11246 4be0 88AD      		ldd r24,Y+56
 11247 4be2 8F93      		push r24
 11248 4be4 8FA9      		ldd r24,Y+55
 11249 4be6 8F93      		push r24
 11250 4be8 0E94 0000 		call report
 11251 4bec 8DB7      		in r24,__SP_L__
 11252 4bee 9EB7      		in r25,__SP_H__
 11253 4bf0 0A96      		adiw r24,10
 11254 4bf2 0FB6      		in __tmp_reg__,__SREG__
 11255 4bf4 F894      		cli
 11256 4bf6 DEBF      		out __SP_H__,r29
 11257 4bf8 0FBE      		out __SREG__,__tmp_reg__
 11258 4bfa CDBF      		out __SP_L__,r28
1416:lp_solve_5.5/lp_simplex.c ****             break;
 11259               		.loc 2 1416 0
 11260 4bfc 00C0      		rjmp .L404
 11261               	.L371:
1417:lp_solve_5.5/lp_simplex.c ****           }
1418:lp_solve_5.5/lp_simplex.c ****         }
1419:lp_solve_5.5/lp_simplex.c **** 
1420:lp_solve_5.5/lp_simplex.c ****         if(colnr == 0)
 11262               		.loc 2 1420 0
 11263 4bfe 8885      		ldd r24,Y+8
 11264 4c00 9985      		ldd r25,Y+9
 11265 4c02 892B      		or r24,r25
 11266 4c04 01F4      		brne .L374
1421:lp_solve_5.5/lp_simplex.c ****           lp->spx_status = OPTIMAL;
 11267               		.loc 2 1421 0
 11268 4c06 8FA9      		ldd r24,Y+55
 11269 4c08 98AD      		ldd r25,Y+56
 11270 4c0a 8A5F      		subi r24,-6
 11271 4c0c 9D4F      		sbci r25,-3
 11272 4c0e DC01      		movw r26,r24
 11273 4c10 1D92      		st X+,__zero_reg__
 11274 4c12 1C92      		st X,__zero_reg__
 11275 4c14 00C0      		rjmp .L375
 11276               	.L374:
1422:lp_solve_5.5/lp_simplex.c ****         else {
1423:lp_solve_5.5/lp_simplex.c ****           lp->spx_status = SWITCH_TO_PRIMAL;
 11277               		.loc 2 1423 0
 11278 4c16 8FA9      		ldd r24,Y+55
 11279 4c18 98AD      		ldd r25,Y+56
 11280 4c1a 8A5F      		subi r24,-6
 11281 4c1c 9D4F      		sbci r25,-3
 11282 4c1e 24E1      		ldi r18,lo8(20)
 11283 4c20 30E0      		ldi r19,0
 11284 4c22 FC01      		movw r30,r24
 11285 4c24 3183      		std Z+1,r19
 11286 4c26 2083      		st Z,r18
1424:lp_solve_5.5/lp_simplex.c ****           if(lp->total_iter == 0)
 11287               		.loc 2 1424 0
 11288 4c28 8FA9      		ldd r24,Y+55
 11289 4c2a 98AD      		ldd r25,Y+56
 11290 4c2c 885C      		subi r24,-56
 11291 4c2e 9D4F      		sbci r25,-3
 11292 4c30 DC01      		movw r26,r24
 11293 4c32 AC90      		ld r10,X
 11294 4c34 FC01      		movw r30,r24
 11295 4c36 B180      		ldd r11,Z+1
 11296 4c38 DC01      		movw r26,r24
 11297 4c3a 1296      		adiw r26,2
 11298 4c3c CC90      		ld r12,X
 11299 4c3e FC01      		movw r30,r24
 11300 4c40 D380      		ldd r13,Z+3
 11301 4c42 DC01      		movw r26,r24
 11302 4c44 1496      		adiw r26,4
 11303 4c46 EC90      		ld r14,X
 11304 4c48 FC01      		movw r30,r24
 11305 4c4a F580      		ldd r15,Z+5
 11306 4c4c DC01      		movw r26,r24
 11307 4c4e 1696      		adiw r26,6
 11308 4c50 0C91      		ld r16,X
 11309 4c52 FC01      		movw r30,r24
 11310 4c54 1781      		ldd r17,Z+7
 11311 4c56 2A2D      		mov r18,r10
 11312 4c58 3B2D      		mov r19,r11
 11313 4c5a 4C2D      		mov r20,r12
 11314 4c5c 5D2D      		mov r21,r13
 11315 4c5e 6E2D      		mov r22,r14
 11316 4c60 7F2D      		mov r23,r15
 11317 4c62 802F      		mov r24,r16
 11318 4c64 912F      		mov r25,r17
 11319 4c66 A0E0      		ldi r26,0
 11320 4c68 0E94 0000 		call __cmpdi2_s8
 11321 4c6c 01F4      		brne .L375
1425:lp_solve_5.5/lp_simplex.c ****             report(lp, DETAILED, "Use primal simplex for finalization at iter  %10.0f.\n",
1426:lp_solve_5.5/lp_simplex.c ****                                  (double) get_total_iter(lp));
 11322               		.loc 2 1426 0
 11323 4c6e 8FA9      		ldd r24,Y+55
 11324 4c70 98AD      		ldd r25,Y+56
 11325 4c72 0E94 0000 		call get_total_iter
 11326 4c76 A22E      		mov r10,r18
 11327 4c78 B32E      		mov r11,r19
 11328 4c7a C42E      		mov r12,r20
 11329 4c7c D52E      		mov r13,r21
 11330 4c7e E62E      		mov r14,r22
 11331 4c80 F72E      		mov r15,r23
 11332 4c82 082F      		mov r16,r24
 11333 4c84 192F      		mov r17,r25
1425:lp_solve_5.5/lp_simplex.c ****             report(lp, DETAILED, "Use primal simplex for finalization at iter  %10.0f.\n",
 11334               		.loc 2 1425 0
 11335 4c86 2A2D      		mov r18,r10
 11336 4c88 3B2D      		mov r19,r11
 11337 4c8a 4C2D      		mov r20,r12
 11338 4c8c 5D2D      		mov r21,r13
 11339 4c8e 6E2D      		mov r22,r14
 11340 4c90 7F2D      		mov r23,r15
 11341 4c92 802F      		mov r24,r16
 11342 4c94 912F      		mov r25,r17
 11343 4c96 0E94 0000 		call __floatdisf
 11344 4c9a DC01      		movw r26,r24
 11345 4c9c CB01      		movw r24,r22
 11346 4c9e 2B2F      		mov r18,r27
 11347 4ca0 2F93      		push r18
 11348 4ca2 2A2F      		mov r18,r26
 11349 4ca4 2F93      		push r18
 11350 4ca6 292F      		mov r18,r25
 11351 4ca8 2F93      		push r18
 11352 4caa 8F93      		push r24
 11353 4cac 80E0      		ldi r24,lo8(.LC38)
 11354 4cae 90E0      		ldi r25,hi8(.LC38)
 11355 4cb0 892F      		mov r24,r25
 11356 4cb2 8F93      		push r24
 11357 4cb4 80E0      		ldi r24,lo8(.LC38)
 11358 4cb6 90E0      		ldi r25,hi8(.LC38)
 11359 4cb8 8F93      		push r24
 11360 4cba 1F92      		push __zero_reg__
 11361 4cbc 85E0      		ldi r24,lo8(5)
 11362 4cbe 8F93      		push r24
 11363 4cc0 88AD      		ldd r24,Y+56
 11364 4cc2 8F93      		push r24
 11365 4cc4 8FA9      		ldd r24,Y+55
 11366 4cc6 8F93      		push r24
 11367 4cc8 0E94 0000 		call report
 11368 4ccc 8DB7      		in r24,__SP_L__
 11369 4cce 9EB7      		in r25,__SP_H__
 11370 4cd0 0A96      		adiw r24,10
 11371 4cd2 0FB6      		in __tmp_reg__,__SREG__
 11372 4cd4 F894      		cli
 11373 4cd6 DEBF      		out __SP_H__,r29
 11374 4cd8 0FBE      		out __SREG__,__tmp_reg__
 11375 4cda CDBF      		out __SP_L__,r28
 11376               	.L375:
1427:lp_solve_5.5/lp_simplex.c ****         }
1428:lp_solve_5.5/lp_simplex.c ****         if((lp->total_iter == 0) && (lp->spx_status == OPTIMAL))
 11377               		.loc 2 1428 0
 11378 4cdc 8FA9      		ldd r24,Y+55
 11379 4cde 98AD      		ldd r25,Y+56
 11380 4ce0 885C      		subi r24,-56
 11381 4ce2 9D4F      		sbci r25,-3
 11382 4ce4 DC01      		movw r26,r24
 11383 4ce6 AC90      		ld r10,X
 11384 4ce8 FC01      		movw r30,r24
 11385 4cea B180      		ldd r11,Z+1
 11386 4cec DC01      		movw r26,r24
 11387 4cee 1296      		adiw r26,2
 11388 4cf0 CC90      		ld r12,X
 11389 4cf2 FC01      		movw r30,r24
 11390 4cf4 D380      		ldd r13,Z+3
 11391 4cf6 DC01      		movw r26,r24
 11392 4cf8 1496      		adiw r26,4
 11393 4cfa EC90      		ld r14,X
 11394 4cfc FC01      		movw r30,r24
 11395 4cfe F580      		ldd r15,Z+5
 11396 4d00 DC01      		movw r26,r24
 11397 4d02 1696      		adiw r26,6
 11398 4d04 0C91      		ld r16,X
 11399 4d06 FC01      		movw r30,r24
 11400 4d08 1781      		ldd r17,Z+7
 11401 4d0a 2A2D      		mov r18,r10
 11402 4d0c 3B2D      		mov r19,r11
 11403 4d0e 4C2D      		mov r20,r12
 11404 4d10 5D2D      		mov r21,r13
 11405 4d12 6E2D      		mov r22,r14
 11406 4d14 7F2D      		mov r23,r15
 11407 4d16 802F      		mov r24,r16
 11408 4d18 912F      		mov r25,r17
 11409 4d1a A0E0      		ldi r26,0
 11410 4d1c 0E94 0000 		call __cmpdi2_s8
 11411 4d20 01F0      		breq .+2
 11412 4d22 00C0      		rjmp .L365
 11413               		.loc 2 1428 0 is_stmt 0 discriminator 1
 11414 4d24 8FA9      		ldd r24,Y+55
 11415 4d26 98AD      		ldd r25,Y+56
 11416 4d28 8A5F      		subi r24,-6
 11417 4d2a 9D4F      		sbci r25,-3
 11418 4d2c DC01      		movw r26,r24
 11419 4d2e 8D91      		ld r24,X+
 11420 4d30 9C91      		ld r25,X
 11421 4d32 892B      		or r24,r25
 11422 4d34 01F4      		brne .L365
1429:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "Optimal solution with dual simplex at iter   %10.0f.\n",
1430:lp_solve_5.5/lp_simplex.c ****                                (double) get_total_iter(lp));
 11423               		.loc 2 1430 0 is_stmt 1
 11424 4d36 8FA9      		ldd r24,Y+55
 11425 4d38 98AD      		ldd r25,Y+56
 11426 4d3a 0E94 0000 		call get_total_iter
 11427 4d3e A22E      		mov r10,r18
 11428 4d40 B32E      		mov r11,r19
 11429 4d42 C42E      		mov r12,r20
 11430 4d44 D52E      		mov r13,r21
 11431 4d46 E62E      		mov r14,r22
 11432 4d48 F72E      		mov r15,r23
 11433 4d4a 082F      		mov r16,r24
 11434 4d4c 192F      		mov r17,r25
1429:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "Optimal solution with dual simplex at iter   %10.0f.\n",
 11435               		.loc 2 1429 0
 11436 4d4e 2A2D      		mov r18,r10
 11437 4d50 3B2D      		mov r19,r11
 11438 4d52 4C2D      		mov r20,r12
 11439 4d54 5D2D      		mov r21,r13
 11440 4d56 6E2D      		mov r22,r14
 11441 4d58 7F2D      		mov r23,r15
 11442 4d5a 802F      		mov r24,r16
 11443 4d5c 912F      		mov r25,r17
 11444 4d5e 0E94 0000 		call __floatdisf
 11445 4d62 DC01      		movw r26,r24
 11446 4d64 CB01      		movw r24,r22
 11447 4d66 2B2F      		mov r18,r27
 11448 4d68 2F93      		push r18
 11449 4d6a 2A2F      		mov r18,r26
 11450 4d6c 2F93      		push r18
 11451 4d6e 292F      		mov r18,r25
 11452 4d70 2F93      		push r18
 11453 4d72 8F93      		push r24
 11454 4d74 80E0      		ldi r24,lo8(.LC39)
 11455 4d76 90E0      		ldi r25,hi8(.LC39)
 11456 4d78 892F      		mov r24,r25
 11457 4d7a 8F93      		push r24
 11458 4d7c 80E0      		ldi r24,lo8(.LC39)
 11459 4d7e 90E0      		ldi r25,hi8(.LC39)
 11460 4d80 8F93      		push r24
 11461 4d82 1F92      		push __zero_reg__
 11462 4d84 85E0      		ldi r24,lo8(5)
 11463 4d86 8F93      		push r24
 11464 4d88 88AD      		ldd r24,Y+56
 11465 4d8a 8F93      		push r24
 11466 4d8c 8FA9      		ldd r24,Y+55
 11467 4d8e 8F93      		push r24
 11468 4d90 0E94 0000 		call report
 11469 4d94 EDB7      		in r30,__SP_L__
 11470 4d96 FEB7      		in r31,__SP_H__
 11471 4d98 3A96      		adiw r30,10
 11472 4d9a 0FB6      		in __tmp_reg__,__SREG__
 11473 4d9c F894      		cli
 11474 4d9e DEBF      		out __SP_H__,r29
 11475 4da0 0FBE      		out __SREG__,__tmp_reg__
 11476 4da2 CDBF      		out __SP_L__,r28
 11477               	.L365:
1431:lp_solve_5.5/lp_simplex.c ****       }
1432:lp_solve_5.5/lp_simplex.c **** 
1433:lp_solve_5.5/lp_simplex.c ****       /* Determine if we are ready to break out of the loop */
1434:lp_solve_5.5/lp_simplex.c ****       if(!changedphase)
 11478               		.loc 2 1434 0
 11479 4da4 8B81      		ldd r24,Y+3
 11480 4da6 8823      		tst r24
 11481 4da8 01F4      		brne .+2
 11482 4daa 00C0      		rjmp .L405
 11483               	.L341:
1435:lp_solve_5.5/lp_simplex.c ****         break;
1436:lp_solve_5.5/lp_simplex.c ****     }
1437:lp_solve_5.5/lp_simplex.c **** 
1438:lp_solve_5.5/lp_simplex.c ****     /* Check if we are allowed to iterate on the chosen column and row */
1439:lp_solve_5.5/lp_simplex.c ****     if(is_action(lp->spx_action, ACTION_ITERATE)) {
 11484               		.loc 2 1439 0
 11485 4dac 8FA9      		ldd r24,Y+55
 11486 4dae 98AD      		ldd r25,Y+56
 11487 4db0 8E50      		subi r24,14
 11488 4db2 9D4F      		sbci r25,-3
 11489 4db4 DC01      		movw r26,r24
 11490 4db6 8D91      		ld r24,X+
 11491 4db8 9C91      		ld r25,X
 11492 4dba 60E4      		ldi r22,lo8(64)
 11493 4dbc 70E0      		ldi r23,0
 11494 4dbe 0E94 0000 		call is_action
 11495 4dc2 8823      		tst r24
 11496 4dc4 01F4      		brne .+2
 11497 4dc6 00C0      		rjmp .L376
1440:lp_solve_5.5/lp_simplex.c **** 
1441:lp_solve_5.5/lp_simplex.c ****       lastnr = lp->var_basic[rownr];
 11498               		.loc 2 1441 0
 11499 4dc8 8FA9      		ldd r24,Y+55
 11500 4dca 98AD      		ldd r25,Y+56
 11501 4dcc 8453      		subi r24,52
 11502 4dce 9D4F      		sbci r25,-3
 11503 4dd0 FC01      		movw r30,r24
 11504 4dd2 2081      		ld r18,Z
 11505 4dd4 3181      		ldd r19,Z+1
 11506 4dd6 8A85      		ldd r24,Y+10
 11507 4dd8 9B85      		ldd r25,Y+11
 11508 4dda 880F      		lsl r24
 11509 4ddc 991F      		rol r25
 11510 4dde 820F      		add r24,r18
 11511 4de0 931F      		adc r25,r19
 11512 4de2 DC01      		movw r26,r24
 11513 4de4 8D91      		ld r24,X+
 11514 4de6 9C91      		ld r25,X
 11515 4de8 9D87      		std Y+13,r25
 11516 4dea 8C87      		std Y+12,r24
1442:lp_solve_5.5/lp_simplex.c ****       if(refactRecent(lp) == AUTOMATIC)
 11517               		.loc 2 1442 0
 11518 4dec 8FA9      		ldd r24,Y+55
 11519 4dee 98AD      		ldd r25,Y+56
 11520 4df0 0E94 0000 		call refactRecent
 11521 4df4 8230      		cpi r24,lo8(2)
 11522 4df6 01F4      		brne .L377
1443:lp_solve_5.5/lp_simplex.c ****         minitcount = 0;
 11523               		.loc 2 1443 0
 11524 4df8 1F86      		std Y+15,__zero_reg__
 11525 4dfa 1E86      		std Y+14,__zero_reg__
 11526 4dfc 00C0      		rjmp .L378
 11527               	.L377:
1444:lp_solve_5.5/lp_simplex.c ****       else if(minitcount > MAX_MINITUPDATES) {
 11528               		.loc 2 1444 0
 11529 4dfe 8E85      		ldd r24,Y+14
 11530 4e00 9F85      		ldd r25,Y+15
 11531 4e02 CD97      		sbiw r24,61
 11532 4e04 04F0      		brlt .L378
1445:lp_solve_5.5/lp_simplex.c ****         recompute_solution(lp, INITSOL_USEZERO);
 11533               		.loc 2 1445 0
 11534 4e06 8FA9      		ldd r24,Y+55
 11535 4e08 98AD      		ldd r25,Y+56
 11536 4e0a 61E0      		ldi r22,lo8(1)
 11537 4e0c 0E94 0000 		call recompute_solution
1446:lp_solve_5.5/lp_simplex.c ****         minitcount = 0;
 11538               		.loc 2 1446 0
 11539 4e10 1F86      		std Y+15,__zero_reg__
 11540 4e12 1E86      		std Y+14,__zero_reg__
 11541               	.L378:
1447:lp_solve_5.5/lp_simplex.c ****       }
1448:lp_solve_5.5/lp_simplex.c ****       minit = performiteration(lp, rownr, colnr, theta, primal,
 11542               		.loc 2 1448 0
 11543 4e14 2BA9      		ldd r18,Y+51
 11544 4e16 3CA9      		ldd r19,Y+52
 11545 4e18 EDA8      		ldd r14,Y+53
 11546 4e1a FEA8      		ldd r15,Y+54
 11547 4e1c 09A9      		ldd r16,Y+49
 11548 4e1e 1AA9      		ldd r17,Y+50
 11549 4e20 81E0      		ldi r24,lo8(1)
 11550 4e22 99A1      		ldd r25,Y+33
 11551 4e24 9230      		cpi r25,lo8(2)
 11552 4e26 01F4      		brne .L379
 11553 4e28 80E0      		ldi r24,0
 11554               	.L379:
 11555 4e2a C82E      		mov r12,r24
 11556 4e2c 8DA1      		ldd r24,Y+37
 11557 4e2e 9EA1      		ldd r25,Y+38
 11558 4e30 AFA1      		ldd r26,Y+39
 11559 4e32 B8A5      		ldd r27,Y+40
 11560 4e34 4885      		ldd r20,Y+8
 11561 4e36 5985      		ldd r21,Y+9
 11562 4e38 6A85      		ldd r22,Y+10
 11563 4e3a 7B85      		ldd r23,Y+11
 11564 4e3c EFA9      		ldd r30,Y+55
 11565 4e3e F8AD      		ldd r31,Y+56
 11566 4e40 DB88      		ldd r13,Y+19
 11567 4e42 DF92      		push r13
 11568 4e44 DA88      		ldd r13,Y+18
 11569 4e46 DF92      		push r13
 11570 4e48 1F92      		push __zero_reg__
 11571 4e4a 1F92      		push __zero_reg__
 11572 4e4c D32E      		mov r13,r19
 11573 4e4e DF92      		push r13
 11574 4e50 2F93      		push r18
 11575 4e52 4701      		movw r8,r14
 11576 4e54 5801      		movw r10,r16
 11577 4e56 EC88      		ldd r14,Y+20
 11578 4e58 8C01      		movw r16,r24
 11579 4e5a 9D01      		movw r18,r26
 11580 4e5c CF01      		movw r24,r30
 11581 4e5e 0E94 0000 		call performiteration
 11582 4e62 0F90      		pop __tmp_reg__
 11583 4e64 0F90      		pop __tmp_reg__
 11584 4e66 0F90      		pop __tmp_reg__
 11585 4e68 0F90      		pop __tmp_reg__
 11586 4e6a 0F90      		pop __tmp_reg__
 11587 4e6c 0F90      		pop __tmp_reg__
 11588 4e6e 8C83      		std Y+4,r24
1449:lp_solve_5.5/lp_simplex.c ****                                                  (MYBOOL) (/*(candidatecount > 1) && */
1450:lp_solve_5.5/lp_simplex.c ****                                                            (stallaccept != AUTOMATIC)),
1451:lp_solve_5.5/lp_simplex.c ****                                                  prow, nzprow,
1452:lp_solve_5.5/lp_simplex.c ****                                                  pcol, NULL, boundswaps);
1453:lp_solve_5.5/lp_simplex.c **** 
1454:lp_solve_5.5/lp_simplex.c ****       /* Check if we should abandon iterations on finding that there is no
1455:lp_solve_5.5/lp_simplex.c ****         hope that this branch can improve on the incumbent B&B solution */
1456:lp_solve_5.5/lp_simplex.c ****       if(!lp->is_strongbranch && (lp->solutioncount >= 1) && !lp->spx_perturbed && !inP1extra &&
 11589               		.loc 2 1456 0
 11590 4e70 8FA9      		ldd r24,Y+55
 11591 4e72 98AD      		ldd r25,Y+56
 11592 4e74 8452      		subi r24,36
 11593 4e76 9D4F      		sbci r25,-3
 11594 4e78 FC01      		movw r30,r24
 11595 4e7a 8081      		ld r24,Z
 11596 4e7c 9181      		ldd r25,Z+1
 11597 4e7e 892B      		or r24,r25
 11598 4e80 01F4      		brne .L380
 11599               		.loc 2 1456 0 is_stmt 0 discriminator 1
 11600 4e82 8FA9      		ldd r24,Y+55
 11601 4e84 98AD      		ldd r25,Y+56
 11602 4e86 865F      		subi r24,-10
 11603 4e88 9D4F      		sbci r25,-3
 11604 4e8a DC01      		movw r26,r24
 11605 4e8c 8D91      		ld r24,X+
 11606 4e8e 9C91      		ld r25,X
 11607 4e90 1816      		cp __zero_reg__,r24
 11608 4e92 1906      		cpc __zero_reg__,r25
 11609 4e94 04F4      		brge .L380
 11610               		.loc 2 1456 0 discriminator 2
 11611 4e96 8FA9      		ldd r24,Y+55
 11612 4e98 98AD      		ldd r25,Y+56
 11613 4e9a 8C50      		subi r24,12
 11614 4e9c 9D4F      		sbci r25,-3
 11615 4e9e FC01      		movw r30,r24
 11616 4ea0 8081      		ld r24,Z
 11617 4ea2 8823      		tst r24
 11618 4ea4 01F4      		brne .L380
 11619               		.loc 2 1456 0 discriminator 3
 11620 4ea6 8981      		ldd r24,Y+1
 11621 4ea8 8823      		tst r24
 11622 4eaa 01F4      		brne .L380
1457:lp_solve_5.5/lp_simplex.c ****           bb_better(lp, OF_WORKING, OF_TEST_WE)) {
 11623               		.loc 2 1457 0 is_stmt 1 discriminator 4
 11624 4eac 8FA9      		ldd r24,Y+55
 11625 4eae 98AD      		ldd r25,Y+56
 11626 4eb0 44E0      		ldi r20,lo8(4)
 11627 4eb2 50E0      		ldi r21,0
 11628 4eb4 62E0      		ldi r22,lo8(2)
 11629 4eb6 70E0      		ldi r23,0
 11630 4eb8 0E94 0000 		call bb_better
1456:lp_solve_5.5/lp_simplex.c ****           bb_better(lp, OF_WORKING, OF_TEST_WE)) {
 11631               		.loc 2 1456 0 discriminator 4
 11632 4ebc 8823      		tst r24
 11633 4ebe 01F0      		breq .L380
1458:lp_solve_5.5/lp_simplex.c ****         lp->spx_status = FATHOMED;
 11634               		.loc 2 1458 0
 11635 4ec0 8FA9      		ldd r24,Y+55
 11636 4ec2 98AD      		ldd r25,Y+56
 11637 4ec4 8A5F      		subi r24,-6
 11638 4ec6 9D4F      		sbci r25,-3
 11639 4ec8 2EE0      		ldi r18,lo8(14)
 11640 4eca 30E0      		ldi r19,0
 11641 4ecc DC01      		movw r26,r24
 11642 4ece 2D93      		st X+,r18
 11643 4ed0 3C93      		st X,r19
1459:lp_solve_5.5/lp_simplex.c ****         ok = FALSE;
 11644               		.loc 2 1459 0
 11645 4ed2 198A      		std Y+17,__zero_reg__
 11646 4ed4 188A      		std Y+16,__zero_reg__
1460:lp_solve_5.5/lp_simplex.c ****         break;
 11647               		.loc 2 1460 0
 11648 4ed6 00C0      		rjmp .L276
 11649               	.L380:
1461:lp_solve_5.5/lp_simplex.c ****       }
1462:lp_solve_5.5/lp_simplex.c **** 
1463:lp_solve_5.5/lp_simplex.c ****       if(minit != ITERATE_MAJORMAJOR)
 11650               		.loc 2 1463 0
 11651 4ed8 8C81      		ldd r24,Y+4
 11652 4eda 8823      		tst r24
 11653 4edc 01F0      		breq .L381
1464:lp_solve_5.5/lp_simplex.c ****         minitcount++;
 11654               		.loc 2 1464 0
 11655 4ede 8E85      		ldd r24,Y+14
 11656 4ee0 9F85      		ldd r25,Y+15
 11657 4ee2 0196      		adiw r24,1
 11658 4ee4 9F87      		std Y+15,r25
 11659 4ee6 8E87      		std Y+14,r24
 11660               	.L381:
1465:lp_solve_5.5/lp_simplex.c **** 
1466:lp_solve_5.5/lp_simplex.c ****       /* Update reduced costs for (pure) dual long-step phase 1 */
1467:lp_solve_5.5/lp_simplex.c ****       if(longsteps && dualphase1 && !inP1extra) {
 11661               		.loc 2 1467 0
 11662 4ee8 8B8D      		ldd r24,Y+27
 11663 4eea 8823      		tst r24
 11664 4eec 01F0      		breq .L382
 11665               		.loc 2 1467 0 is_stmt 0 discriminator 1
 11666 4eee 8A81      		ldd r24,Y+2
 11667 4ef0 8823      		tst r24
 11668 4ef2 01F0      		breq .L382
 11669               		.loc 2 1467 0 discriminator 2
 11670 4ef4 8981      		ldd r24,Y+1
 11671 4ef6 8823      		tst r24
 11672 4ef8 01F4      		brne .L382
1468:lp_solve_5.5/lp_simplex.c ****         dualfeasible = isDualFeasible(lp, lp->epsprimal, NULL, dualinfeasibles, NULL);
 11673               		.loc 2 1468 0 is_stmt 1
 11674 4efa 8FA9      		ldd r24,Y+55
 11675 4efc 98AD      		ldd r25,Y+56
 11676 4efe 865E      		subi r24,-26
 11677 4f00 9C4F      		sbci r25,-4
 11678 4f02 FC01      		movw r30,r24
 11679 4f04 8081      		ld r24,Z
 11680 4f06 9181      		ldd r25,Z+1
 11681 4f08 A281      		ldd r26,Z+2
 11682 4f0a B381      		ldd r27,Z+3
 11683 4f0c 2AAD      		ldd r18,Y+58
 11684 4f0e 3BAD      		ldd r19,Y+59
 11685 4f10 EFA9      		ldd r30,Y+55
 11686 4f12 F8AD      		ldd r31,Y+56
 11687 4f14 E12C      		mov r14,__zero_reg__
 11688 4f16 F12C      		mov r15,__zero_reg__
 11689 4f18 8901      		movw r16,r18
 11690 4f1a 20E0      		ldi r18,0
 11691 4f1c 30E0      		ldi r19,0
 11692 4f1e AC01      		movw r20,r24
 11693 4f20 BD01      		movw r22,r26
 11694 4f22 CF01      		movw r24,r30
 11695 4f24 0E94 0000 		call isDualFeasible
 11696 4f28 89AF      		std Y+57,r24
1469:lp_solve_5.5/lp_simplex.c ****         if(dualfeasible) {
 11697               		.loc 2 1469 0
 11698 4f2a 89AD      		ldd r24,Y+57
 11699 4f2c 8823      		tst r24
 11700 4f2e 01F0      		breq .L382
1470:lp_solve_5.5/lp_simplex.c ****           dualphase1 = FALSE;
 11701               		.loc 2 1470 0
 11702 4f30 1A82      		std Y+2,__zero_reg__
1471:lp_solve_5.5/lp_simplex.c ****           changedphase = TRUE;
 11703               		.loc 2 1471 0
 11704 4f32 81E0      		ldi r24,lo8(1)
 11705 4f34 8B83      		std Y+3,r24
1472:lp_solve_5.5/lp_simplex.c ****           lp->simplex_mode = SIMPLEX_Phase2_DUAL;
 11706               		.loc 2 1472 0
 11707 4f36 8FA9      		ldd r24,Y+55
 11708 4f38 98AD      		ldd r25,Y+56
 11709 4f3a 8A5A      		subi r24,-86
 11710 4f3c 9D4F      		sbci r25,-3
 11711 4f3e 28E0      		ldi r18,lo8(8)
 11712 4f40 30E0      		ldi r19,0
 11713 4f42 DC01      		movw r26,r24
 11714 4f44 2D93      		st X+,r18
 11715 4f46 3C93      		st X,r19
 11716               	.L382:
1473:lp_solve_5.5/lp_simplex.c ****         }
1474:lp_solve_5.5/lp_simplex.c ****       }
1475:lp_solve_5.5/lp_simplex.c **** #ifdef UseDualReducedCostUpdate
1476:lp_solve_5.5/lp_simplex.c ****       /* Do a fast update of reduced costs in preparation for the next iteration */
1477:lp_solve_5.5/lp_simplex.c ****       else if(minit == ITERATE_MAJORMAJOR)
1478:lp_solve_5.5/lp_simplex.c ****         update_reducedcosts(lp, primal, lastnr, colnr, prow, drow);
1479:lp_solve_5.5/lp_simplex.c **** #endif
1480:lp_solve_5.5/lp_simplex.c ****       if((minit == ITERATE_MAJORMAJOR) && (lastnr <= lp->rows) && is_fixedvar(lp, lastnr))
 11717               		.loc 2 1480 0
 11718 4f48 8C81      		ldd r24,Y+4
 11719 4f4a 8823      		tst r24
 11720 4f4c 01F4      		brne .L376
 11721               		.loc 2 1480 0 is_stmt 0 discriminator 1
 11722 4f4e 8FA9      		ldd r24,Y+55
 11723 4f50 98AD      		ldd r25,Y+56
 11724 4f52 8651      		subi r24,22
 11725 4f54 9E4F      		sbci r25,-2
 11726 4f56 FC01      		movw r30,r24
 11727 4f58 2081      		ld r18,Z
 11728 4f5a 3181      		ldd r19,Z+1
 11729 4f5c 8C85      		ldd r24,Y+12
 11730 4f5e 9D85      		ldd r25,Y+13
 11731 4f60 2817      		cp r18,r24
 11732 4f62 3907      		cpc r19,r25
 11733 4f64 04F0      		brlt .L376
 11734               		.loc 2 1480 0 discriminator 2
 11735 4f66 2C85      		ldd r18,Y+12
 11736 4f68 3D85      		ldd r19,Y+13
 11737 4f6a 8FA9      		ldd r24,Y+55
 11738 4f6c 98AD      		ldd r25,Y+56
 11739 4f6e B901      		movw r22,r18
 11740 4f70 0E94 0000 		call is_fixedvar
 11741 4f74 8823      		tst r24
 11742 4f76 01F0      		breq .L376
1481:lp_solve_5.5/lp_simplex.c ****         lp->fixedvars--;
 11743               		.loc 2 1481 0 is_stmt 1
 11744 4f78 8FA9      		ldd r24,Y+55
 11745 4f7a 98AD      		ldd r25,Y+56
 11746 4f7c 8457      		subi r24,116
 11747 4f7e 9D4F      		sbci r25,-3
 11748 4f80 DC01      		movw r26,r24
 11749 4f82 8D91      		ld r24,X+
 11750 4f84 9C91      		ld r25,X
 11751 4f86 9C01      		movw r18,r24
 11752 4f88 2150      		subi r18,1
 11753 4f8a 3109      		sbc r19,__zero_reg__
 11754 4f8c 8FA9      		ldd r24,Y+55
 11755 4f8e 98AD      		ldd r25,Y+56
 11756 4f90 8457      		subi r24,116
 11757 4f92 9D4F      		sbci r25,-3
 11758 4f94 FC01      		movw r30,r24
 11759 4f96 3183      		std Z+1,r19
 11760 4f98 2083      		st Z,r18
 11761               	.L376:
1482:lp_solve_5.5/lp_simplex.c ****     }
1483:lp_solve_5.5/lp_simplex.c **** 
1484:lp_solve_5.5/lp_simplex.c ****     /* Refactorize if required to */
1485:lp_solve_5.5/lp_simplex.c ****     if(lp->bfp_mustrefactorize(lp)) {
 11762               		.loc 2 1485 0
 11763 4f9a 8FA9      		ldd r24,Y+55
 11764 4f9c 98AD      		ldd r25,Y+56
 11765 4f9e 8056      		subi r24,96
 11766 4fa0 9C4F      		sbci r25,-4
 11767 4fa2 DC01      		movw r26,r24
 11768 4fa4 2D91      		ld r18,X+
 11769 4fa6 3C91      		ld r19,X
 11770 4fa8 8FA9      		ldd r24,Y+55
 11771 4faa 98AD      		ldd r25,Y+56
 11772 4fac F901      		movw r30,r18
 11773 4fae 0995      		icall
 11774 4fb0 8823      		tst r24
 11775 4fb2 01F0      		breq .L294
1486:lp_solve_5.5/lp_simplex.c ****       if(invert(lp, INITSOL_USEZERO, bfpfinal)) {
 11776               		.loc 2 1486 0
 11777 4fb4 8FA9      		ldd r24,Y+55
 11778 4fb6 98AD      		ldd r25,Y+56
 11779 4fb8 4D81      		ldd r20,Y+5
 11780 4fba 61E0      		ldi r22,lo8(1)
 11781 4fbc 0E94 0000 		call invert
 11782 4fc0 8823      		tst r24
 11783 4fc2 01F0      		breq .L383
1487:lp_solve_5.5/lp_simplex.c **** 
1488:lp_solve_5.5/lp_simplex.c **** #if 0
1489:lp_solve_5.5/lp_simplex.c ****         /* Verify dual feasibility in case we are attempting the extra dual loop */
1490:lp_solve_5.5/lp_simplex.c ****         if(changedphase && (dualoffset != 0) && !inP1extra && (lp->spx_status != SWITCH_TO_PRIMAL))
1491:lp_solve_5.5/lp_simplex.c **** #if 1
1492:lp_solve_5.5/lp_simplex.c ****           if(!isDualFeasible(lp, lp->epsdual, &colnr, NULL, NULL)) {
1493:lp_solve_5.5/lp_simplex.c **** #else
1494:lp_solve_5.5/lp_simplex.c ****           set_action(&lp->piv_strategy, PRICE_FORCEFULL);
1495:lp_solve_5.5/lp_simplex.c ****             colnr = colprim(lp, drow, nzdrow, FALSE, 1, &candidatecount, FALSE, NULL);
1496:lp_solve_5.5/lp_simplex.c ****           clear_action(&lp->piv_strategy, PRICE_FORCEFULL);
1497:lp_solve_5.5/lp_simplex.c ****           if(colnr > 0) {
1498:lp_solve_5.5/lp_simplex.c **** #endif
1499:lp_solve_5.5/lp_simplex.c ****             lp->spx_status = SWITCH_TO_PRIMAL;
1500:lp_solve_5.5/lp_simplex.c ****             colnr = 0;
1501:lp_solve_5.5/lp_simplex.c ****           }
1502:lp_solve_5.5/lp_simplex.c ****         }
1503:lp_solve_5.5/lp_simplex.c **** #endif
1504:lp_solve_5.5/lp_simplex.c **** 
1505:lp_solve_5.5/lp_simplex.c ****         bfpfinal = FALSE;
 11784               		.loc 2 1505 0
 11785 4fc4 1D82      		std Y+5,__zero_reg__
1506:lp_solve_5.5/lp_simplex.c **** #ifdef ResetMinitOnReinvert
1507:lp_solve_5.5/lp_simplex.c ****         minit = ITERATE_MAJORMAJOR;
 11786               		.loc 2 1507 0
 11787 4fc6 1C82      		std Y+4,__zero_reg__
 11788 4fc8 00C0      		rjmp .L294
 11789               	.L383:
1508:lp_solve_5.5/lp_simplex.c **** #endif
1509:lp_solve_5.5/lp_simplex.c ****       }
1510:lp_solve_5.5/lp_simplex.c ****       else
1511:lp_solve_5.5/lp_simplex.c ****         lp->spx_status = SINGULAR_BASIS;
 11790               		.loc 2 1511 0
 11791 4fca 8FA9      		ldd r24,Y+55
 11792 4fcc 98AD      		ldd r25,Y+56
 11793 4fce 8A5F      		subi r24,-6
 11794 4fd0 9D4F      		sbci r25,-3
 11795 4fd2 26E1      		ldi r18,lo8(22)
 11796 4fd4 30E0      		ldi r19,0
 11797 4fd6 DC01      		movw r26,r24
 11798 4fd8 2D93      		st X+,r18
 11799 4fda 3C93      		st X,r19
 11800               	.L294:
1094:lp_solve_5.5/lp_simplex.c **** 
 11801               		.loc 2 1094 0
 11802 4fdc 8FA9      		ldd r24,Y+55
 11803 4fde 98AD      		ldd r25,Y+56
 11804 4fe0 8A5F      		subi r24,-6
 11805 4fe2 9D4F      		sbci r25,-3
 11806 4fe4 FC01      		movw r30,r24
 11807 4fe6 8081      		ld r24,Z
 11808 4fe8 9181      		ldd r25,Z+1
 11809 4fea 0897      		sbiw r24,8
 11810 4fec 01F4      		brne .L276
1094:lp_solve_5.5/lp_simplex.c **** 
 11811               		.loc 2 1094 0 is_stmt 0 discriminator 1
 11812 4fee 8FA9      		ldd r24,Y+55
 11813 4ff0 98AD      		ldd r25,Y+56
 11814 4ff2 6FEF      		ldi r22,lo8(-1)
 11815 4ff4 7FEF      		ldi r23,lo8(-1)
 11816 4ff6 0E94 0000 		call userabort
 11817 4ffa 8823      		tst r24
 11818 4ffc 01F4      		brne .+4
 11819 4ffe 0C94 0000 		jmp .L384
 11820 5002 00C0      		rjmp .L276
 11821               	.L400:
1012:lp_solve_5.5/lp_simplex.c **** 
 11822               		.loc 2 1012 0 is_stmt 1
 11823 5004 0000      		nop
 11824 5006 00C0      		rjmp .L276
 11825               	.L401:
1047:lp_solve_5.5/lp_simplex.c **** #ifdef UseLongStepPruning
 11826               		.loc 2 1047 0
 11827 5008 0000      		nop
 11828 500a 00C0      		rjmp .L276
 11829               	.L402:
1061:lp_solve_5.5/lp_simplex.c **** 
 11830               		.loc 2 1061 0
 11831 500c 0000      		nop
 11832 500e 00C0      		rjmp .L276
 11833               	.L403:
1100:lp_solve_5.5/lp_simplex.c **** 
 11834               		.loc 2 1100 0
 11835 5010 0000      		nop
 11836 5012 00C0      		rjmp .L276
 11837               	.L404:
1416:lp_solve_5.5/lp_simplex.c ****           }
 11838               		.loc 2 1416 0
 11839 5014 0000      		nop
 11840 5016 00C0      		rjmp .L276
 11841               	.L405:
1435:lp_solve_5.5/lp_simplex.c ****     }
 11842               		.loc 2 1435 0
 11843 5018 0000      		nop
 11844               	.L276:
1512:lp_solve_5.5/lp_simplex.c ****     }
1513:lp_solve_5.5/lp_simplex.c ****   }
1514:lp_solve_5.5/lp_simplex.c **** 
1515:lp_solve_5.5/lp_simplex.c **** Finish:
1516:lp_solve_5.5/lp_simplex.c ****   stallMonitor_finish(lp);
 11845               		.loc 2 1516 0
 11846 501a 8FA9      		ldd r24,Y+55
 11847 501c 98AD      		ldd r25,Y+56
 11848 501e 0E94 0000 		call stallMonitor_finish
1517:lp_solve_5.5/lp_simplex.c ****   multi_free(&(lp->longsteps));
 11849               		.loc 2 1517 0
 11850 5022 8FA9      		ldd r24,Y+55
 11851 5024 98AD      		ldd r25,Y+56
 11852 5026 8455      		subi r24,84
 11853 5028 9D4F      		sbci r25,-3
 11854 502a 0E94 0000 		call multi_free
1518:lp_solve_5.5/lp_simplex.c ****   FREE(prow);
 11855               		.loc 2 1518 0
 11856 502e 89A9      		ldd r24,Y+49
 11857 5030 9AA9      		ldd r25,Y+50
 11858 5032 892B      		or r24,r25
 11859 5034 01F0      		breq .L385
 11860               		.loc 2 1518 0 is_stmt 0 discriminator 1
 11861 5036 89A9      		ldd r24,Y+49
 11862 5038 9AA9      		ldd r25,Y+50
 11863 503a 0E94 0000 		call free
 11864 503e 1AAA      		std Y+50,__zero_reg__
 11865 5040 19AA      		std Y+49,__zero_reg__
 11866               	.L385:
1519:lp_solve_5.5/lp_simplex.c ****   FREE(nzprow);
 11867               		.loc 2 1519 0 is_stmt 1
 11868 5042 8DA9      		ldd r24,Y+53
 11869 5044 9EA9      		ldd r25,Y+54
 11870 5046 892B      		or r24,r25
 11871 5048 01F0      		breq .L386
 11872               		.loc 2 1519 0 is_stmt 0 discriminator 1
 11873 504a 8DA9      		ldd r24,Y+53
 11874 504c 9EA9      		ldd r25,Y+54
 11875 504e 0E94 0000 		call free
 11876 5052 1EAA      		std Y+54,__zero_reg__
 11877 5054 1DAA      		std Y+53,__zero_reg__
 11878               	.L386:
1520:lp_solve_5.5/lp_simplex.c ****   FREE(pcol);
 11879               		.loc 2 1520 0 is_stmt 1
 11880 5056 8BA9      		ldd r24,Y+51
 11881 5058 9CA9      		ldd r25,Y+52
 11882 505a 892B      		or r24,r25
 11883 505c 01F0      		breq .L387
 11884               		.loc 2 1520 0 is_stmt 0 discriminator 1
 11885 505e 8BA9      		ldd r24,Y+51
 11886 5060 9CA9      		ldd r25,Y+52
 11887 5062 0E94 0000 		call free
 11888 5066 1CAA      		std Y+52,__zero_reg__
 11889 5068 1BAA      		std Y+51,__zero_reg__
 11890               	.L387:
1521:lp_solve_5.5/lp_simplex.c **** 
1522:lp_solve_5.5/lp_simplex.c ****   return(ok);
 11891               		.loc 2 1522 0 is_stmt 1
 11892 506a 8889      		ldd r24,Y+16
 11893 506c 9989      		ldd r25,Y+17
 11894               	/* epilogue start */
1523:lp_solve_5.5/lp_simplex.c **** }
 11895               		.loc 2 1523 0
 11896 506e EF96      		adiw r28,63
 11897 5070 0FB6      		in __tmp_reg__,__SREG__
 11898 5072 F894      		cli
 11899 5074 DEBF      		out __SP_H__,r29
 11900 5076 0FBE      		out __SREG__,__tmp_reg__
 11901 5078 CDBF      		out __SP_L__,r28
 11902 507a DF91      		pop r29
 11903 507c CF91      		pop r28
 11904 507e 1F91      		pop r17
 11905 5080 0F91      		pop r16
 11906 5082 FF90      		pop r15
 11907 5084 EF90      		pop r14
 11908 5086 DF90      		pop r13
 11909 5088 CF90      		pop r12
 11910 508a BF90      		pop r11
 11911 508c AF90      		pop r10
 11912 508e 9F90      		pop r9
 11913 5090 8F90      		pop r8
 11914 5092 0895      		ret
 11915               		.cfi_endproc
 11916               	.LFE23:
 11918               		.section	.rodata
 11919               	.LC40:
 11920 0739 5374 6172 		.string	"Start at primal feasible basis\n"
 11920      7420 6174 
 11920      2070 7269 
 11920      6D61 6C20 
 11920      6665 6173 
 11921               	.LC41:
 11922 0759 5374 6172 		.string	"Start at dual feasible basis\n"
 11922      7420 6174 
 11922      2064 7561 
 11922      6C20 6665 
 11922      6173 6962 
 11923               	.LC42:
 11924 0777 436F 6E74 		.string	"Continuing at infeasible basis\n"
 11924      696E 7569 
 11924      6E67 2061 
 11924      7420 696E 
 11924      6665 6173 
 11925               	.LC43:
 11926 0797 5374 6172 		.string	"Start at infeasible basis\n"
 11926      7420 6174 
 11926      2069 6E66 
 11926      6561 7369 
 11926      626C 6520 
 11927               	.LC44:
 11928 07b2 7370 785F 		.string	"spx_run: Failure due to too many singular bases.\n"
 11928      7275 6E3A 
 11928      2046 6169 
 11928      6C75 7265 
 11928      2064 7565 
 11929               	.LC45:
 11930 07e4 7370 785F 		.string	"spx_run: Singular basis; attempting to recover.\n"
 11930      7275 6E3A 
 11930      2053 696E 
 11930      6775 6C61 
 11930      7220 6261 
 11931               	.LC46:
 11932 0815 7370 785F 		.string	"spx_run: Recover lost feasibility at iter  %10.0f.\n"
 11932      7275 6E3A 
 11932      2052 6563 
 11932      6F76 6572 
 11932      206C 6F73 
 11933               	.LC47:
 11934 0849 7370 785F 		.string	"spx_run: Lost feasibility %d times - iter %10.0f and %9.0f nodes.\n"
 11934      7275 6E3A 
 11934      204C 6F73 
 11934      7420 6665 
 11934      6173 6962 
 11935               		.text
 11936               	.global	spx_run
 11938               	spx_run:
 11939               	.LFB24:
1524:lp_solve_5.5/lp_simplex.c **** 
1525:lp_solve_5.5/lp_simplex.c **** STATIC int spx_run(lprec *lp, MYBOOL validInvB)
1526:lp_solve_5.5/lp_simplex.c **** {
 11940               		.loc 2 1526 0
 11941               		.cfi_startproc
 11942 5094 2F92      		push r2
 11943               	.LCFI110:
 11944               		.cfi_def_cfa_offset 3
 11945               		.cfi_offset 2, -2
 11946 5096 3F92      		push r3
 11947               	.LCFI111:
 11948               		.cfi_def_cfa_offset 4
 11949               		.cfi_offset 3, -3
 11950 5098 4F92      		push r4
 11951               	.LCFI112:
 11952               		.cfi_def_cfa_offset 5
 11953               		.cfi_offset 4, -4
 11954 509a 5F92      		push r5
 11955               	.LCFI113:
 11956               		.cfi_def_cfa_offset 6
 11957               		.cfi_offset 5, -5
 11958 509c 6F92      		push r6
 11959               	.LCFI114:
 11960               		.cfi_def_cfa_offset 7
 11961               		.cfi_offset 6, -6
 11962 509e 7F92      		push r7
 11963               	.LCFI115:
 11964               		.cfi_def_cfa_offset 8
 11965               		.cfi_offset 7, -7
 11966 50a0 8F92      		push r8
 11967               	.LCFI116:
 11968               		.cfi_def_cfa_offset 9
 11969               		.cfi_offset 8, -8
 11970 50a2 9F92      		push r9
 11971               	.LCFI117:
 11972               		.cfi_def_cfa_offset 10
 11973               		.cfi_offset 9, -9
 11974 50a4 AF92      		push r10
 11975               	.LCFI118:
 11976               		.cfi_def_cfa_offset 11
 11977               		.cfi_offset 10, -10
 11978 50a6 BF92      		push r11
 11979               	.LCFI119:
 11980               		.cfi_def_cfa_offset 12
 11981               		.cfi_offset 11, -11
 11982 50a8 CF92      		push r12
 11983               	.LCFI120:
 11984               		.cfi_def_cfa_offset 13
 11985               		.cfi_offset 12, -12
 11986 50aa DF92      		push r13
 11987               	.LCFI121:
 11988               		.cfi_def_cfa_offset 14
 11989               		.cfi_offset 13, -13
 11990 50ac EF92      		push r14
 11991               	.LCFI122:
 11992               		.cfi_def_cfa_offset 15
 11993               		.cfi_offset 14, -14
 11994 50ae FF92      		push r15
 11995               	.LCFI123:
 11996               		.cfi_def_cfa_offset 16
 11997               		.cfi_offset 15, -15
 11998 50b0 0F93      		push r16
 11999               	.LCFI124:
 12000               		.cfi_def_cfa_offset 17
 12001               		.cfi_offset 16, -16
 12002 50b2 1F93      		push r17
 12003               	.LCFI125:
 12004               		.cfi_def_cfa_offset 18
 12005               		.cfi_offset 17, -17
 12006 50b4 CF93      		push r28
 12007               	.LCFI126:
 12008               		.cfi_def_cfa_offset 19
 12009               		.cfi_offset 28, -18
 12010 50b6 DF93      		push r29
 12011               	.LCFI127:
 12012               		.cfi_def_cfa_offset 20
 12013               		.cfi_offset 29, -19
 12014 50b8 CDB7      		in r28,__SP_L__
 12015 50ba DEB7      		in r29,__SP_H__
 12016               	.LCFI128:
 12017               		.cfi_def_cfa_register 28
 12018 50bc 6B97      		sbiw r28,27
 12019               	.LCFI129:
 12020               		.cfi_def_cfa_offset 47
 12021 50be 0FB6      		in __tmp_reg__,__SREG__
 12022 50c0 F894      		cli
 12023 50c2 DEBF      		out __SP_H__,r29
 12024 50c4 0FBE      		out __SREG__,__tmp_reg__
 12025 50c6 CDBF      		out __SP_L__,r28
 12026               	/* prologue: function */
 12027               	/* frame size = 27 */
 12028               	/* stack size = 45 */
 12029               	.L__stack_usage = 45
 12030 50c8 9A8F      		std Y+26,r25
 12031 50ca 898F      		std Y+25,r24
 12032 50cc 6B8F      		std Y+27,r22
1527:lp_solve_5.5/lp_simplex.c ****   int    i, j, singular_count, lost_feas_count, *infeasibles = NULL, *boundflip_count;
 12033               		.loc 2 1527 0
 12034 50ce 1986      		std Y+9,__zero_reg__
 12035 50d0 1886      		std Y+8,__zero_reg__
1528:lp_solve_5.5/lp_simplex.c ****   MYBOOL primalfeasible, dualfeasible, lost_feas_state, isbb;
1529:lp_solve_5.5/lp_simplex.c ****   REAL   primaloffset = 0, dualoffset = 0;
 12036               		.loc 2 1529 0
 12037 50d2 198A      		std Y+17,__zero_reg__
 12038 50d4 1A8A      		std Y+18,__zero_reg__
 12039 50d6 1B8A      		std Y+19,__zero_reg__
 12040 50d8 1C8A      		std Y+20,__zero_reg__
 12041 50da 1D8A      		std Y+21,__zero_reg__
 12042 50dc 1E8A      		std Y+22,__zero_reg__
 12043 50de 1F8A      		std Y+23,__zero_reg__
 12044 50e0 188E      		std Y+24,__zero_reg__
1530:lp_solve_5.5/lp_simplex.c **** 
1531:lp_solve_5.5/lp_simplex.c ****   lp->current_iter  = 0;
 12045               		.loc 2 1531 0
 12046 50e2 898D      		ldd r24,Y+25
 12047 50e4 9A8D      		ldd r25,Y+26
 12048 50e6 805D      		subi r24,-48
 12049 50e8 9D4F      		sbci r25,-3
 12050 50ea FC01      		movw r30,r24
 12051 50ec 1082      		st Z,__zero_reg__
 12052 50ee FC01      		movw r30,r24
 12053 50f0 1182      		std Z+1,__zero_reg__
 12054 50f2 FC01      		movw r30,r24
 12055 50f4 1282      		std Z+2,__zero_reg__
 12056 50f6 FC01      		movw r30,r24
 12057 50f8 1382      		std Z+3,__zero_reg__
 12058 50fa FC01      		movw r30,r24
 12059 50fc 1482      		std Z+4,__zero_reg__
 12060 50fe FC01      		movw r30,r24
 12061 5100 1582      		std Z+5,__zero_reg__
 12062 5102 FC01      		movw r30,r24
 12063 5104 1682      		std Z+6,__zero_reg__
 12064 5106 FC01      		movw r30,r24
 12065 5108 1782      		std Z+7,__zero_reg__
1532:lp_solve_5.5/lp_simplex.c ****   lp->current_bswap = 0;
 12066               		.loc 2 1532 0
 12067 510a 898D      		ldd r24,Y+25
 12068 510c 9A8D      		ldd r25,Y+26
 12069 510e 805C      		subi r24,-64
 12070 5110 9D4F      		sbci r25,-3
 12071 5112 FC01      		movw r30,r24
 12072 5114 1082      		st Z,__zero_reg__
 12073 5116 FC01      		movw r30,r24
 12074 5118 1182      		std Z+1,__zero_reg__
 12075 511a FC01      		movw r30,r24
 12076 511c 1282      		std Z+2,__zero_reg__
 12077 511e FC01      		movw r30,r24
 12078 5120 1382      		std Z+3,__zero_reg__
 12079 5122 FC01      		movw r30,r24
 12080 5124 1482      		std Z+4,__zero_reg__
 12081 5126 FC01      		movw r30,r24
 12082 5128 1582      		std Z+5,__zero_reg__
 12083 512a FC01      		movw r30,r24
 12084 512c 1682      		std Z+6,__zero_reg__
 12085 512e FC01      		movw r30,r24
 12086 5130 1782      		std Z+7,__zero_reg__
1533:lp_solve_5.5/lp_simplex.c ****   lp->spx_status    = RUNNING;
 12087               		.loc 2 1533 0
 12088 5132 898D      		ldd r24,Y+25
 12089 5134 9A8D      		ldd r25,Y+26
 12090 5136 8A5F      		subi r24,-6
 12091 5138 9D4F      		sbci r25,-3
 12092 513a 28E0      		ldi r18,lo8(8)
 12093 513c 30E0      		ldi r19,0
 12094 513e FC01      		movw r30,r24
 12095 5140 3183      		std Z+1,r19
 12096 5142 2083      		st Z,r18
1534:lp_solve_5.5/lp_simplex.c ****   lp->bb_status = lp->spx_status;
 12097               		.loc 2 1534 0
 12098 5144 898D      		ldd r24,Y+25
 12099 5146 9A8D      		ldd r25,Y+26
 12100 5148 8A5F      		subi r24,-6
 12101 514a 9D4F      		sbci r25,-3
 12102 514c FC01      		movw r30,r24
 12103 514e 2081      		ld r18,Z
 12104 5150 3181      		ldd r19,Z+1
 12105 5152 898D      		ldd r24,Y+25
 12106 5154 9A8D      		ldd r25,Y+26
 12107 5156 825D      		subi r24,-46
 12108 5158 9C4F      		sbci r25,-4
 12109 515a FC01      		movw r30,r24
 12110 515c 3183      		std Z+1,r19
 12111 515e 2083      		st Z,r18
1535:lp_solve_5.5/lp_simplex.c ****   lp->P1extraDim = 0;
 12112               		.loc 2 1535 0
 12113 5160 898D      		ldd r24,Y+25
 12114 5162 9A8D      		ldd r25,Y+26
 12115 5164 8051      		subi r24,16
 12116 5166 9D4F      		sbci r25,-3
 12117 5168 FC01      		movw r30,r24
 12118 516a 1182      		std Z+1,__zero_reg__
 12119 516c 1082      		st Z,__zero_reg__
1536:lp_solve_5.5/lp_simplex.c ****   set_OF_p1extra(lp, 0);
 12120               		.loc 2 1536 0
 12121 516e 898D      		ldd r24,Y+25
 12122 5170 9A8D      		ldd r25,Y+26
 12123 5172 40E0      		ldi r20,0
 12124 5174 50E0      		ldi r21,0
 12125 5176 BA01      		movw r22,r20
 12126 5178 0E94 0000 		call set_OF_p1extra
1537:lp_solve_5.5/lp_simplex.c ****   singular_count  = 0;
 12127               		.loc 2 1537 0
 12128 517c 1A82      		std Y+2,__zero_reg__
 12129 517e 1982      		std Y+1,__zero_reg__
1538:lp_solve_5.5/lp_simplex.c ****   lost_feas_count = 0;
 12130               		.loc 2 1538 0
 12131 5180 1C82      		std Y+4,__zero_reg__
 12132 5182 1B82      		std Y+3,__zero_reg__
1539:lp_solve_5.5/lp_simplex.c ****   lost_feas_state = FALSE;
 12133               		.loc 2 1539 0
 12134 5184 1F82      		std Y+7,__zero_reg__
1540:lp_solve_5.5/lp_simplex.c ****   lp->simplex_mode = SIMPLEX_DYNAMIC;
 12135               		.loc 2 1540 0
 12136 5186 898D      		ldd r24,Y+25
 12137 5188 9A8D      		ldd r25,Y+26
 12138 518a 8A5A      		subi r24,-86
 12139 518c 9D4F      		sbci r25,-3
 12140 518e 20E1      		ldi r18,lo8(16)
 12141 5190 30E0      		ldi r19,0
 12142 5192 FC01      		movw r30,r24
 12143 5194 3183      		std Z+1,r19
 12144 5196 2083      		st Z,r18
1541:lp_solve_5.5/lp_simplex.c **** 
1542:lp_solve_5.5/lp_simplex.c ****   /* Compute the number of fixed basic and bounded variables (used in long duals) */
1543:lp_solve_5.5/lp_simplex.c ****   lp->fixedvars = 0;
 12145               		.loc 2 1543 0
 12146 5198 898D      		ldd r24,Y+25
 12147 519a 9A8D      		ldd r25,Y+26
 12148 519c 8457      		subi r24,116
 12149 519e 9D4F      		sbci r25,-3
 12150 51a0 FC01      		movw r30,r24
 12151 51a2 1182      		std Z+1,__zero_reg__
 12152 51a4 1082      		st Z,__zero_reg__
1544:lp_solve_5.5/lp_simplex.c ****   lp->boundedvars = 0;
 12153               		.loc 2 1544 0
 12154 51a6 898D      		ldd r24,Y+25
 12155 51a8 9A8D      		ldd r25,Y+26
 12156 51aa 8051      		subi r24,16
 12157 51ac 9E4F      		sbci r25,-2
 12158 51ae FC01      		movw r30,r24
 12159 51b0 1182      		std Z+1,__zero_reg__
 12160 51b2 1082      		st Z,__zero_reg__
1545:lp_solve_5.5/lp_simplex.c ****   for(i = 1; i <= lp->rows; i++) {
 12161               		.loc 2 1545 0
 12162 51b4 81E0      		ldi r24,lo8(1)
 12163 51b6 90E0      		ldi r25,0
 12164 51b8 988B      		std Y+16,r25
 12165 51ba 8F87      		std Y+15,r24
 12166 51bc 00C0      		rjmp .L407
 12167               	.L412:
1546:lp_solve_5.5/lp_simplex.c ****     j = lp->var_basic[i];
 12168               		.loc 2 1546 0
 12169 51be 898D      		ldd r24,Y+25
 12170 51c0 9A8D      		ldd r25,Y+26
 12171 51c2 8453      		subi r24,52
 12172 51c4 9D4F      		sbci r25,-3
 12173 51c6 FC01      		movw r30,r24
 12174 51c8 2081      		ld r18,Z
 12175 51ca 3181      		ldd r19,Z+1
 12176 51cc 8F85      		ldd r24,Y+15
 12177 51ce 9889      		ldd r25,Y+16
 12178 51d0 880F      		lsl r24
 12179 51d2 991F      		rol r25
 12180 51d4 820F      		add r24,r18
 12181 51d6 931F      		adc r25,r19
 12182 51d8 FC01      		movw r30,r24
 12183 51da 8081      		ld r24,Z
 12184 51dc 9181      		ldd r25,Z+1
 12185 51de 9B87      		std Y+11,r25
 12186 51e0 8A87      		std Y+10,r24
1547:lp_solve_5.5/lp_simplex.c ****     if((j <= lp->rows) && is_fixedvar(lp, j))
 12187               		.loc 2 1547 0
 12188 51e2 898D      		ldd r24,Y+25
 12189 51e4 9A8D      		ldd r25,Y+26
 12190 51e6 8651      		subi r24,22
 12191 51e8 9E4F      		sbci r25,-2
 12192 51ea FC01      		movw r30,r24
 12193 51ec 2081      		ld r18,Z
 12194 51ee 3181      		ldd r19,Z+1
 12195 51f0 8A85      		ldd r24,Y+10
 12196 51f2 9B85      		ldd r25,Y+11
 12197 51f4 2817      		cp r18,r24
 12198 51f6 3907      		cpc r19,r25
 12199 51f8 04F0      		brlt .L408
 12200               		.loc 2 1547 0 is_stmt 0 discriminator 1
 12201 51fa 2A85      		ldd r18,Y+10
 12202 51fc 3B85      		ldd r19,Y+11
 12203 51fe 898D      		ldd r24,Y+25
 12204 5200 9A8D      		ldd r25,Y+26
 12205 5202 B901      		movw r22,r18
 12206 5204 0E94 0000 		call is_fixedvar
 12207 5208 8823      		tst r24
 12208 520a 01F0      		breq .L408
1548:lp_solve_5.5/lp_simplex.c ****       lp->fixedvars++;
 12209               		.loc 2 1548 0 is_stmt 1
 12210 520c 898D      		ldd r24,Y+25
 12211 520e 9A8D      		ldd r25,Y+26
 12212 5210 8457      		subi r24,116
 12213 5212 9D4F      		sbci r25,-3
 12214 5214 FC01      		movw r30,r24
 12215 5216 8081      		ld r24,Z
 12216 5218 9181      		ldd r25,Z+1
 12217 521a 9C01      		movw r18,r24
 12218 521c 2F5F      		subi r18,-1
 12219 521e 3F4F      		sbci r19,-1
 12220 5220 898D      		ldd r24,Y+25
 12221 5222 9A8D      		ldd r25,Y+26
 12222 5224 8457      		subi r24,116
 12223 5226 9D4F      		sbci r25,-3
 12224 5228 FC01      		movw r30,r24
 12225 522a 3183      		std Z+1,r19
 12226 522c 2083      		st Z,r18
 12227               	.L408:
1549:lp_solve_5.5/lp_simplex.c ****     if((lp->upbo[i] < lp->infinite) && (lp->upbo[i] > lp->epsprimal))
 12228               		.loc 2 1549 0
 12229 522e 898D      		ldd r24,Y+25
 12230 5230 9A8D      		ldd r25,Y+26
 12231 5232 8055      		subi r24,80
 12232 5234 9D4F      		sbci r25,-3
 12233 5236 FC01      		movw r30,r24
 12234 5238 2081      		ld r18,Z
 12235 523a 3181      		ldd r19,Z+1
 12236 523c 8F85      		ldd r24,Y+15
 12237 523e 9889      		ldd r25,Y+16
 12238 5240 880F      		lsl r24
 12239 5242 991F      		rol r25
 12240 5244 880F      		lsl r24
 12241 5246 991F      		rol r25
 12242 5248 820F      		add r24,r18
 12243 524a 931F      		adc r25,r19
 12244 524c FC01      		movw r30,r24
 12245 524e 8081      		ld r24,Z
 12246 5250 9181      		ldd r25,Z+1
 12247 5252 A281      		ldd r26,Z+2
 12248 5254 B381      		ldd r27,Z+3
 12249 5256 298D      		ldd r18,Y+25
 12250 5258 3A8D      		ldd r19,Y+26
 12251 525a 265F      		subi r18,-10
 12252 525c 3C4F      		sbci r19,-4
 12253 525e F901      		movw r30,r18
 12254 5260 2081      		ld r18,Z
 12255 5262 3181      		ldd r19,Z+1
 12256 5264 4281      		ldd r20,Z+2
 12257 5266 5381      		ldd r21,Z+3
 12258 5268 BC01      		movw r22,r24
 12259 526a CD01      		movw r24,r26
 12260 526c 0E94 0000 		call __ltsf2
 12261 5270 8823      		tst r24
 12262 5272 04F4      		brge .L409
 12263               		.loc 2 1549 0 is_stmt 0 discriminator 1
 12264 5274 898D      		ldd r24,Y+25
 12265 5276 9A8D      		ldd r25,Y+26
 12266 5278 8055      		subi r24,80
 12267 527a 9D4F      		sbci r25,-3
 12268 527c FC01      		movw r30,r24
 12269 527e 2081      		ld r18,Z
 12270 5280 3181      		ldd r19,Z+1
 12271 5282 8F85      		ldd r24,Y+15
 12272 5284 9889      		ldd r25,Y+16
 12273 5286 880F      		lsl r24
 12274 5288 991F      		rol r25
 12275 528a 880F      		lsl r24
 12276 528c 991F      		rol r25
 12277 528e 820F      		add r24,r18
 12278 5290 931F      		adc r25,r19
 12279 5292 FC01      		movw r30,r24
 12280 5294 8081      		ld r24,Z
 12281 5296 9181      		ldd r25,Z+1
 12282 5298 A281      		ldd r26,Z+2
 12283 529a B381      		ldd r27,Z+3
 12284 529c 298D      		ldd r18,Y+25
 12285 529e 3A8D      		ldd r19,Y+26
 12286 52a0 265E      		subi r18,-26
 12287 52a2 3C4F      		sbci r19,-4
 12288 52a4 F901      		movw r30,r18
 12289 52a6 2081      		ld r18,Z
 12290 52a8 3181      		ldd r19,Z+1
 12291 52aa 4281      		ldd r20,Z+2
 12292 52ac 5381      		ldd r21,Z+3
 12293 52ae BC01      		movw r22,r24
 12294 52b0 CD01      		movw r24,r26
 12295 52b2 0E94 0000 		call __gtsf2
 12296 52b6 1816      		cp __zero_reg__,r24
 12297 52b8 04F4      		brge .L409
1550:lp_solve_5.5/lp_simplex.c ****       lp->boundedvars++;
 12298               		.loc 2 1550 0 is_stmt 1
 12299 52ba 898D      		ldd r24,Y+25
 12300 52bc 9A8D      		ldd r25,Y+26
 12301 52be 8051      		subi r24,16
 12302 52c0 9E4F      		sbci r25,-2
 12303 52c2 FC01      		movw r30,r24
 12304 52c4 8081      		ld r24,Z
 12305 52c6 9181      		ldd r25,Z+1
 12306 52c8 9C01      		movw r18,r24
 12307 52ca 2F5F      		subi r18,-1
 12308 52cc 3F4F      		sbci r19,-1
 12309 52ce 898D      		ldd r24,Y+25
 12310 52d0 9A8D      		ldd r25,Y+26
 12311 52d2 8051      		subi r24,16
 12312 52d4 9E4F      		sbci r25,-2
 12313 52d6 FC01      		movw r30,r24
 12314 52d8 3183      		std Z+1,r19
 12315 52da 2083      		st Z,r18
 12316               	.L409:
1545:lp_solve_5.5/lp_simplex.c ****     j = lp->var_basic[i];
 12317               		.loc 2 1545 0 discriminator 2
 12318 52dc 8F85      		ldd r24,Y+15
 12319 52de 9889      		ldd r25,Y+16
 12320 52e0 0196      		adiw r24,1
 12321 52e2 988B      		std Y+16,r25
 12322 52e4 8F87      		std Y+15,r24
 12323               	.L407:
1545:lp_solve_5.5/lp_simplex.c ****     j = lp->var_basic[i];
 12324               		.loc 2 1545 0 is_stmt 0 discriminator 1
 12325 52e6 898D      		ldd r24,Y+25
 12326 52e8 9A8D      		ldd r25,Y+26
 12327 52ea 8651      		subi r24,22
 12328 52ec 9E4F      		sbci r25,-2
 12329 52ee FC01      		movw r30,r24
 12330 52f0 2081      		ld r18,Z
 12331 52f2 3181      		ldd r19,Z+1
 12332 52f4 8F85      		ldd r24,Y+15
 12333 52f6 9889      		ldd r25,Y+16
 12334 52f8 2817      		cp r18,r24
 12335 52fa 3907      		cpc r19,r25
 12336 52fc 04F0      		brlt .+2
 12337 52fe 00C0      		rjmp .L412
1551:lp_solve_5.5/lp_simplex.c ****   }
1552:lp_solve_5.5/lp_simplex.c ****   for(; i <= lp->sum; i++){
 12338               		.loc 2 1552 0 is_stmt 1
 12339 5300 00C0      		rjmp .L413
 12340               	.L417:
1553:lp_solve_5.5/lp_simplex.c ****     if((lp->upbo[i] < lp->infinite) && (lp->upbo[i] > lp->epsprimal))
 12341               		.loc 2 1553 0
 12342 5302 898D      		ldd r24,Y+25
 12343 5304 9A8D      		ldd r25,Y+26
 12344 5306 8055      		subi r24,80
 12345 5308 9D4F      		sbci r25,-3
 12346 530a FC01      		movw r30,r24
 12347 530c 2081      		ld r18,Z
 12348 530e 3181      		ldd r19,Z+1
 12349 5310 8F85      		ldd r24,Y+15
 12350 5312 9889      		ldd r25,Y+16
 12351 5314 880F      		lsl r24
 12352 5316 991F      		rol r25
 12353 5318 880F      		lsl r24
 12354 531a 991F      		rol r25
 12355 531c 820F      		add r24,r18
 12356 531e 931F      		adc r25,r19
 12357 5320 FC01      		movw r30,r24
 12358 5322 8081      		ld r24,Z
 12359 5324 9181      		ldd r25,Z+1
 12360 5326 A281      		ldd r26,Z+2
 12361 5328 B381      		ldd r27,Z+3
 12362 532a 298D      		ldd r18,Y+25
 12363 532c 3A8D      		ldd r19,Y+26
 12364 532e 265F      		subi r18,-10
 12365 5330 3C4F      		sbci r19,-4
 12366 5332 F901      		movw r30,r18
 12367 5334 2081      		ld r18,Z
 12368 5336 3181      		ldd r19,Z+1
 12369 5338 4281      		ldd r20,Z+2
 12370 533a 5381      		ldd r21,Z+3
 12371 533c BC01      		movw r22,r24
 12372 533e CD01      		movw r24,r26
 12373 5340 0E94 0000 		call __ltsf2
 12374 5344 8823      		tst r24
 12375 5346 04F4      		brge .L414
 12376               		.loc 2 1553 0 is_stmt 0 discriminator 1
 12377 5348 898D      		ldd r24,Y+25
 12378 534a 9A8D      		ldd r25,Y+26
 12379 534c 8055      		subi r24,80
 12380 534e 9D4F      		sbci r25,-3
 12381 5350 FC01      		movw r30,r24
 12382 5352 2081      		ld r18,Z
 12383 5354 3181      		ldd r19,Z+1
 12384 5356 8F85      		ldd r24,Y+15
 12385 5358 9889      		ldd r25,Y+16
 12386 535a 880F      		lsl r24
 12387 535c 991F      		rol r25
 12388 535e 880F      		lsl r24
 12389 5360 991F      		rol r25
 12390 5362 820F      		add r24,r18
 12391 5364 931F      		adc r25,r19
 12392 5366 FC01      		movw r30,r24
 12393 5368 8081      		ld r24,Z
 12394 536a 9181      		ldd r25,Z+1
 12395 536c A281      		ldd r26,Z+2
 12396 536e B381      		ldd r27,Z+3
 12397 5370 298D      		ldd r18,Y+25
 12398 5372 3A8D      		ldd r19,Y+26
 12399 5374 265E      		subi r18,-26
 12400 5376 3C4F      		sbci r19,-4
 12401 5378 F901      		movw r30,r18
 12402 537a 2081      		ld r18,Z
 12403 537c 3181      		ldd r19,Z+1
 12404 537e 4281      		ldd r20,Z+2
 12405 5380 5381      		ldd r21,Z+3
 12406 5382 BC01      		movw r22,r24
 12407 5384 CD01      		movw r24,r26
 12408 5386 0E94 0000 		call __gtsf2
 12409 538a 1816      		cp __zero_reg__,r24
 12410 538c 04F4      		brge .L414
1554:lp_solve_5.5/lp_simplex.c ****       lp->boundedvars++;
 12411               		.loc 2 1554 0 is_stmt 1
 12412 538e 898D      		ldd r24,Y+25
 12413 5390 9A8D      		ldd r25,Y+26
 12414 5392 8051      		subi r24,16
 12415 5394 9E4F      		sbci r25,-2
 12416 5396 FC01      		movw r30,r24
 12417 5398 8081      		ld r24,Z
 12418 539a 9181      		ldd r25,Z+1
 12419 539c 9C01      		movw r18,r24
 12420 539e 2F5F      		subi r18,-1
 12421 53a0 3F4F      		sbci r19,-1
 12422 53a2 898D      		ldd r24,Y+25
 12423 53a4 9A8D      		ldd r25,Y+26
 12424 53a6 8051      		subi r24,16
 12425 53a8 9E4F      		sbci r25,-2
 12426 53aa FC01      		movw r30,r24
 12427 53ac 3183      		std Z+1,r19
 12428 53ae 2083      		st Z,r18
 12429               	.L414:
1552:lp_solve_5.5/lp_simplex.c ****     if((lp->upbo[i] < lp->infinite) && (lp->upbo[i] > lp->epsprimal))
 12430               		.loc 2 1552 0
 12431 53b0 8F85      		ldd r24,Y+15
 12432 53b2 9889      		ldd r25,Y+16
 12433 53b4 0196      		adiw r24,1
 12434 53b6 988B      		std Y+16,r25
 12435 53b8 8F87      		std Y+15,r24
 12436               	.L413:
1552:lp_solve_5.5/lp_simplex.c ****     if((lp->upbo[i] < lp->infinite) && (lp->upbo[i] > lp->epsprimal))
 12437               		.loc 2 1552 0 is_stmt 0 discriminator 1
 12438 53ba 898D      		ldd r24,Y+25
 12439 53bc 9A8D      		ldd r25,Y+26
 12440 53be 8851      		subi r24,24
 12441 53c0 9E4F      		sbci r25,-2
 12442 53c2 FC01      		movw r30,r24
 12443 53c4 2081      		ld r18,Z
 12444 53c6 3181      		ldd r19,Z+1
 12445 53c8 8F85      		ldd r24,Y+15
 12446 53ca 9889      		ldd r25,Y+16
 12447 53cc 2817      		cp r18,r24
 12448 53ce 3907      		cpc r19,r25
 12449 53d0 04F0      		brlt .+2
 12450 53d2 00C0      		rjmp .L417
1555:lp_solve_5.5/lp_simplex.c ****   }
1556:lp_solve_5.5/lp_simplex.c **** #ifdef UseLongStepDualPhase1
1557:lp_solve_5.5/lp_simplex.c ****   allocINT(lp, &infeasibles, lp->columns + 1, FALSE);
1558:lp_solve_5.5/lp_simplex.c ****   infeasibles[0] = 0;
1559:lp_solve_5.5/lp_simplex.c **** #endif
1560:lp_solve_5.5/lp_simplex.c **** 
1561:lp_solve_5.5/lp_simplex.c ****   /* Reinvert for initialization, if necessary */
1562:lp_solve_5.5/lp_simplex.c ****   isbb = (MYBOOL) ((MIP_count(lp) > 0) && (lp->bb_level > 1));
 12451               		.loc 2 1562 0 is_stmt 1
 12452 53d4 898D      		ldd r24,Y+25
 12453 53d6 9A8D      		ldd r25,Y+26
 12454 53d8 0E94 0000 		call MIP_count
 12455 53dc 1816      		cp __zero_reg__,r24
 12456 53de 1906      		cpc __zero_reg__,r25
 12457 53e0 04F4      		brge .L418
 12458               		.loc 2 1562 0 is_stmt 0 discriminator 1
 12459 53e2 898D      		ldd r24,Y+25
 12460 53e4 9A8D      		ldd r25,Y+26
 12461 53e6 805D      		subi r24,-48
 12462 53e8 9C4F      		sbci r25,-4
 12463 53ea FC01      		movw r30,r24
 12464 53ec 8081      		ld r24,Z
 12465 53ee 9181      		ldd r25,Z+1
 12466 53f0 0297      		sbiw r24,2
 12467 53f2 04F0      		brlt .L418
 12468               		.loc 2 1562 0 discriminator 3
 12469 53f4 81E0      		ldi r24,lo8(1)
 12470 53f6 90E0      		ldi r25,0
 12471 53f8 00C0      		rjmp .L419
 12472               	.L418:
 12473               		.loc 2 1562 0 discriminator 4
 12474 53fa 80E0      		ldi r24,0
 12475 53fc 90E0      		ldi r25,0
 12476               	.L419:
 12477               		.loc 2 1562 0 discriminator 6
 12478 53fe 8C87      		std Y+12,r24
1563:lp_solve_5.5/lp_simplex.c ****   if(is_action(lp->spx_action, ACTION_REINVERT)) {
 12479               		.loc 2 1563 0 is_stmt 1 discriminator 6
 12480 5400 898D      		ldd r24,Y+25
 12481 5402 9A8D      		ldd r25,Y+26
 12482 5404 8E50      		subi r24,14
 12483 5406 9D4F      		sbci r25,-3
 12484 5408 FC01      		movw r30,r24
 12485 540a 8081      		ld r24,Z
 12486 540c 9181      		ldd r25,Z+1
 12487 540e 60E1      		ldi r22,lo8(16)
 12488 5410 70E0      		ldi r23,0
 12489 5412 0E94 0000 		call is_action
 12490 5416 8823      		tst r24
 12491 5418 01F0      		breq .L420
1564:lp_solve_5.5/lp_simplex.c ****     if(isbb && (lp->bb_bounds->nodessolved == 0))
 12492               		.loc 2 1564 0
 12493 541a 8C85      		ldd r24,Y+12
 12494 541c 8823      		tst r24
 12495 541e 01F0      		breq .L421
 12496               		.loc 2 1564 0 is_stmt 0 discriminator 1
 12497 5420 898D      		ldd r24,Y+25
 12498 5422 9A8D      		ldd r25,Y+26
 12499 5424 8654      		subi r24,70
 12500 5426 9D4F      		sbci r25,-3
 12501 5428 FC01      		movw r30,r24
 12502 542a 8081      		ld r24,Z
 12503 542c 9181      		ldd r25,Z+1
 12504 542e FC01      		movw r30,r24
 12505 5430 8089      		ldd r24,Z+16
 12506 5432 9189      		ldd r25,Z+17
 12507 5434 892B      		or r24,r25
 12508 5436 01F4      		brne .L421
1565:lp_solve_5.5/lp_simplex.c **** /*    if(isbb && (lp->bb_basis->pivots == 0)) */
1566:lp_solve_5.5/lp_simplex.c ****       recompute_solution(lp, INITSOL_SHIFTZERO);
 12509               		.loc 2 1566 0 is_stmt 1
 12510 5438 898D      		ldd r24,Y+25
 12511 543a 9A8D      		ldd r25,Y+26
 12512 543c 60E0      		ldi r22,0
 12513 543e 0E94 0000 		call recompute_solution
 12514 5442 00C0      		rjmp .L424
 12515               	.L421:
1567:lp_solve_5.5/lp_simplex.c ****     else {
1568:lp_solve_5.5/lp_simplex.c ****       i = my_if(is_action(lp->spx_action, ACTION_REBASE), INITSOL_SHIFTZERO, INITSOL_USEZERO);
 12516               		.loc 2 1568 0
 12517 5444 898D      		ldd r24,Y+25
 12518 5446 9A8D      		ldd r25,Y+26
 12519 5448 8E50      		subi r24,14
 12520 544a 9D4F      		sbci r25,-3
 12521 544c FC01      		movw r30,r24
 12522 544e 8081      		ld r24,Z
 12523 5450 9181      		ldd r25,Z+1
 12524 5452 62E0      		ldi r22,lo8(2)
 12525 5454 70E0      		ldi r23,0
 12526 5456 0E94 0000 		call is_action
 12527 545a 982F      		mov r25,r24
 12528 545c 81E0      		ldi r24,lo8(1)
 12529 545e 9923      		tst r25
 12530 5460 01F0      		breq .L423
 12531 5462 80E0      		ldi r24,0
 12532               	.L423:
 12533 5464 882F      		mov r24,r24
 12534 5466 90E0      		ldi r25,0
 12535 5468 988B      		std Y+16,r25
 12536 546a 8F87      		std Y+15,r24
1569:lp_solve_5.5/lp_simplex.c ****       invert(lp, (MYBOOL) i, TRUE);
 12537               		.loc 2 1569 0
 12538 546c 8F85      		ldd r24,Y+15
 12539 546e 9889      		ldd r25,Y+16
 12540 5470 282F      		mov r18,r24
 12541 5472 898D      		ldd r24,Y+25
 12542 5474 9A8D      		ldd r25,Y+26
 12543 5476 41E0      		ldi r20,lo8(1)
 12544 5478 622F      		mov r22,r18
 12545 547a 0E94 0000 		call invert
 12546 547e 00C0      		rjmp .L424
 12547               	.L420:
1570:lp_solve_5.5/lp_simplex.c ****     }
1571:lp_solve_5.5/lp_simplex.c ****   }
1572:lp_solve_5.5/lp_simplex.c ****   else if(is_action(lp->spx_action, ACTION_REBASE))
 12548               		.loc 2 1572 0
 12549 5480 898D      		ldd r24,Y+25
 12550 5482 9A8D      		ldd r25,Y+26
 12551 5484 8E50      		subi r24,14
 12552 5486 9D4F      		sbci r25,-3
 12553 5488 FC01      		movw r30,r24
 12554 548a 8081      		ld r24,Z
 12555 548c 9181      		ldd r25,Z+1
 12556 548e 62E0      		ldi r22,lo8(2)
 12557 5490 70E0      		ldi r23,0
 12558 5492 0E94 0000 		call is_action
 12559 5496 8823      		tst r24
 12560 5498 01F0      		breq .L424
1573:lp_solve_5.5/lp_simplex.c ****     recompute_solution(lp, INITSOL_SHIFTZERO);
 12561               		.loc 2 1573 0
 12562 549a 898D      		ldd r24,Y+25
 12563 549c 9A8D      		ldd r25,Y+26
 12564 549e 60E0      		ldi r22,0
 12565 54a0 0E94 0000 		call recompute_solution
 12566               	.L424:
1574:lp_solve_5.5/lp_simplex.c **** 
1575:lp_solve_5.5/lp_simplex.c ****   /* Optionally try to do bound flips to obtain dual feasibility */
1576:lp_solve_5.5/lp_simplex.c ****   if(is_action(lp->improve, IMPROVE_DUALFEAS) || (lp->rows == 0))
 12567               		.loc 2 1576 0
 12568 54a4 898D      		ldd r24,Y+25
 12569 54a6 9A8D      		ldd r25,Y+26
 12570 54a8 8059      		subi r24,-112
 12571 54aa 9D4F      		sbci r25,-3
 12572 54ac FC01      		movw r30,r24
 12573 54ae 8081      		ld r24,Z
 12574 54b0 9181      		ldd r25,Z+1
 12575 54b2 62E0      		ldi r22,lo8(2)
 12576 54b4 70E0      		ldi r23,0
 12577 54b6 0E94 0000 		call is_action
 12578 54ba 8823      		tst r24
 12579 54bc 01F4      		brne .L425
 12580               		.loc 2 1576 0 is_stmt 0 discriminator 1
 12581 54be 898D      		ldd r24,Y+25
 12582 54c0 9A8D      		ldd r25,Y+26
 12583 54c2 8651      		subi r24,22
 12584 54c4 9E4F      		sbci r25,-2
 12585 54c6 FC01      		movw r30,r24
 12586 54c8 8081      		ld r24,Z
 12587 54ca 9181      		ldd r25,Z+1
 12588 54cc 892B      		or r24,r25
 12589 54ce 01F4      		brne .L426
 12590               	.L425:
1577:lp_solve_5.5/lp_simplex.c ****     boundflip_count = &i;
 12591               		.loc 2 1577 0 is_stmt 1
 12592 54d0 CE01      		movw r24,r28
 12593 54d2 0F96      		adiw r24,15
 12594 54d4 9E83      		std Y+6,r25
 12595 54d6 8D83      		std Y+5,r24
 12596 54d8 00C0      		rjmp .L427
 12597               	.L426:
1578:lp_solve_5.5/lp_simplex.c ****   else
1579:lp_solve_5.5/lp_simplex.c ****     boundflip_count = NULL;
 12598               		.loc 2 1579 0
 12599 54da 1E82      		std Y+6,__zero_reg__
 12600 54dc 1D82      		std Y+5,__zero_reg__
 12601               	.L427:
1580:lp_solve_5.5/lp_simplex.c **** 
1581:lp_solve_5.5/lp_simplex.c ****   /* Loop for as long as is needed */
1582:lp_solve_5.5/lp_simplex.c ****   while(lp->spx_status == RUNNING) {
 12602               		.loc 2 1582 0
 12603 54de 00C0      		rjmp .L428
 12604               	.L459:
1583:lp_solve_5.5/lp_simplex.c **** 
1584:lp_solve_5.5/lp_simplex.c ****     /* Check for dual and primal feasibility */
1585:lp_solve_5.5/lp_simplex.c ****     dualfeasible   = isbb ||
 12605               		.loc 2 1585 0
 12606 54e0 8C85      		ldd r24,Y+12
 12607 54e2 8823      		tst r24
 12608 54e4 01F4      		brne .L429
1586:lp_solve_5.5/lp_simplex.c ****                      isDualFeasible(lp, lp->epsprimal, boundflip_count, infeasibles, &dualoffset);
 12609               		.loc 2 1586 0 discriminator 2
 12610 54e6 898D      		ldd r24,Y+25
 12611 54e8 9A8D      		ldd r25,Y+26
 12612 54ea 865E      		subi r24,-26
 12613 54ec 9C4F      		sbci r25,-4
 12614 54ee FC01      		movw r30,r24
 12615 54f0 8081      		ld r24,Z
 12616 54f2 9181      		ldd r25,Z+1
 12617 54f4 A281      		ldd r26,Z+2
 12618 54f6 B381      		ldd r27,Z+3
 12619 54f8 BE01      		movw r22,r28
 12620 54fa 6B5E      		subi r22,-21
 12621 54fc 7F4F      		sbci r23,-1
 12622 54fe 4885      		ldd r20,Y+8
 12623 5500 5985      		ldd r21,Y+9
 12624 5502 2D81      		ldd r18,Y+5
 12625 5504 3E81      		ldd r19,Y+6
 12626 5506 E98D      		ldd r30,Y+25
 12627 5508 FA8D      		ldd r31,Y+26
 12628 550a 7B01      		movw r14,r22
 12629 550c 8A01      		movw r16,r20
 12630 550e AC01      		movw r20,r24
 12631 5510 BD01      		movw r22,r26
 12632 5512 CF01      		movw r24,r30
 12633 5514 0E94 0000 		call isDualFeasible
1585:lp_solve_5.5/lp_simplex.c ****                      isDualFeasible(lp, lp->epsprimal, boundflip_count, infeasibles, &dualoffset);
 12634               		.loc 2 1585 0 discriminator 2
 12635 5518 8823      		tst r24
 12636 551a 01F0      		breq .L430
 12637               	.L429:
1585:lp_solve_5.5/lp_simplex.c ****                      isDualFeasible(lp, lp->epsprimal, boundflip_count, infeasibles, &dualoffset);
 12638               		.loc 2 1585 0 is_stmt 0 discriminator 3
 12639 551c 81E0      		ldi r24,lo8(1)
 12640 551e 90E0      		ldi r25,0
 12641 5520 00C0      		rjmp .L431
 12642               	.L430:
1585:lp_solve_5.5/lp_simplex.c ****                      isDualFeasible(lp, lp->epsprimal, boundflip_count, infeasibles, &dualoffset);
 12643               		.loc 2 1585 0 discriminator 4
 12644 5522 80E0      		ldi r24,0
 12645 5524 90E0      		ldi r25,0
 12646               	.L431:
1585:lp_solve_5.5/lp_simplex.c ****                      isDualFeasible(lp, lp->epsprimal, boundflip_count, infeasibles, &dualoffset);
 12647               		.loc 2 1585 0 discriminator 6
 12648 5526 8D87      		std Y+13,r24
1587:lp_solve_5.5/lp_simplex.c **** 
1588:lp_solve_5.5/lp_simplex.c ****     /* Recompute if the dual feasibility check included bound flips */
1589:lp_solve_5.5/lp_simplex.c ****     if(is_action(lp->spx_action, ACTION_RECOMPUTE))
 12649               		.loc 2 1589 0 is_stmt 1 discriminator 6
 12650 5528 898D      		ldd r24,Y+25
 12651 552a 9A8D      		ldd r25,Y+26
 12652 552c 8E50      		subi r24,14
 12653 552e 9D4F      		sbci r25,-3
 12654 5530 FC01      		movw r30,r24
 12655 5532 8081      		ld r24,Z
 12656 5534 9181      		ldd r25,Z+1
 12657 5536 64E0      		ldi r22,lo8(4)
 12658 5538 70E0      		ldi r23,0
 12659 553a 0E94 0000 		call is_action
 12660 553e 8823      		tst r24
 12661 5540 01F0      		breq .L432
1590:lp_solve_5.5/lp_simplex.c ****       recompute_solution(lp, INITSOL_USEZERO);
 12662               		.loc 2 1590 0
 12663 5542 898D      		ldd r24,Y+25
 12664 5544 9A8D      		ldd r25,Y+26
 12665 5546 61E0      		ldi r22,lo8(1)
 12666 5548 0E94 0000 		call recompute_solution
 12667               	.L432:
1591:lp_solve_5.5/lp_simplex.c ****     primalfeasible = isPrimalFeasible(lp, lp->epsprimal, NULL, &primaloffset);
 12668               		.loc 2 1591 0
 12669 554c 898D      		ldd r24,Y+25
 12670 554e 9A8D      		ldd r25,Y+26
 12671 5550 865E      		subi r24,-26
 12672 5552 9C4F      		sbci r25,-4
 12673 5554 FC01      		movw r30,r24
 12674 5556 8081      		ld r24,Z
 12675 5558 9181      		ldd r25,Z+1
 12676 555a A281      		ldd r26,Z+2
 12677 555c B381      		ldd r27,Z+3
 12678 555e 9E01      		movw r18,r28
 12679 5560 2F5E      		subi r18,-17
 12680 5562 3F4F      		sbci r19,-1
 12681 5564 E98D      		ldd r30,Y+25
 12682 5566 FA8D      		ldd r31,Y+26
 12683 5568 8901      		movw r16,r18
 12684 556a 20E0      		ldi r18,0
 12685 556c 30E0      		ldi r19,0
 12686 556e AC01      		movw r20,r24
 12687 5570 BD01      		movw r22,r26
 12688 5572 CF01      		movw r24,r30
 12689 5574 0E94 0000 		call isPrimalFeasible
 12690 5578 8E87      		std Y+14,r24
1592:lp_solve_5.5/lp_simplex.c **** 
1593:lp_solve_5.5/lp_simplex.c ****     if(userabort(lp, -1))
 12691               		.loc 2 1593 0
 12692 557a 898D      		ldd r24,Y+25
 12693 557c 9A8D      		ldd r25,Y+26
 12694 557e 6FEF      		ldi r22,lo8(-1)
 12695 5580 7FEF      		ldi r23,lo8(-1)
 12696 5582 0E94 0000 		call userabort
 12697 5586 8823      		tst r24
 12698 5588 01F0      		breq .+2
 12699 558a 00C0      		rjmp .L466
1594:lp_solve_5.5/lp_simplex.c ****       break;
1595:lp_solve_5.5/lp_simplex.c **** 
1596:lp_solve_5.5/lp_simplex.c ****     if(lp->spx_trace) {
 12700               		.loc 2 1596 0
 12701 558c 898D      		ldd r24,Y+25
 12702 558e 9A8D      		ldd r25,Y+26
 12703 5590 8E5F      		subi r24,-2
 12704 5592 9D4F      		sbci r25,-3
 12705 5594 FC01      		movw r30,r24
 12706 5596 8081      		ld r24,Z
 12707 5598 8823      		tst r24
 12708 559a 01F4      		brne .+2
 12709 559c 00C0      		rjmp .L435
1597:lp_solve_5.5/lp_simplex.c ****       if(primalfeasible)
 12710               		.loc 2 1597 0
 12711 559e 8E85      		ldd r24,Y+14
 12712 55a0 8823      		tst r24
 12713 55a2 01F0      		breq .L436
1598:lp_solve_5.5/lp_simplex.c ****         report(lp, NORMAL, "Start at primal feasible basis\n");
 12714               		.loc 2 1598 0
 12715 55a4 80E0      		ldi r24,lo8(.LC40)
 12716 55a6 90E0      		ldi r25,hi8(.LC40)
 12717 55a8 892F      		mov r24,r25
 12718 55aa 8F93      		push r24
 12719 55ac 80E0      		ldi r24,lo8(.LC40)
 12720 55ae 90E0      		ldi r25,hi8(.LC40)
 12721 55b0 8F93      		push r24
 12722 55b2 1F92      		push __zero_reg__
 12723 55b4 84E0      		ldi r24,lo8(4)
 12724 55b6 8F93      		push r24
 12725 55b8 8A8D      		ldd r24,Y+26
 12726 55ba 8F93      		push r24
 12727 55bc 898D      		ldd r24,Y+25
 12728 55be 8F93      		push r24
 12729 55c0 0E94 0000 		call report
 12730 55c4 0F90      		pop __tmp_reg__
 12731 55c6 0F90      		pop __tmp_reg__
 12732 55c8 0F90      		pop __tmp_reg__
 12733 55ca 0F90      		pop __tmp_reg__
 12734 55cc 0F90      		pop __tmp_reg__
 12735 55ce 0F90      		pop __tmp_reg__
 12736 55d0 00C0      		rjmp .L435
 12737               	.L436:
1599:lp_solve_5.5/lp_simplex.c ****       else if(dualfeasible)
 12738               		.loc 2 1599 0
 12739 55d2 8D85      		ldd r24,Y+13
 12740 55d4 8823      		tst r24
 12741 55d6 01F0      		breq .L437
1600:lp_solve_5.5/lp_simplex.c ****         report(lp, NORMAL, "Start at dual feasible basis\n");
 12742               		.loc 2 1600 0
 12743 55d8 80E0      		ldi r24,lo8(.LC41)
 12744 55da 90E0      		ldi r25,hi8(.LC41)
 12745 55dc 892F      		mov r24,r25
 12746 55de 8F93      		push r24
 12747 55e0 80E0      		ldi r24,lo8(.LC41)
 12748 55e2 90E0      		ldi r25,hi8(.LC41)
 12749 55e4 8F93      		push r24
 12750 55e6 1F92      		push __zero_reg__
 12751 55e8 84E0      		ldi r24,lo8(4)
 12752 55ea 8F93      		push r24
 12753 55ec 8A8D      		ldd r24,Y+26
 12754 55ee 8F93      		push r24
 12755 55f0 898D      		ldd r24,Y+25
 12756 55f2 8F93      		push r24
 12757 55f4 0E94 0000 		call report
 12758 55f8 0F90      		pop __tmp_reg__
 12759 55fa 0F90      		pop __tmp_reg__
 12760 55fc 0F90      		pop __tmp_reg__
 12761 55fe 0F90      		pop __tmp_reg__
 12762 5600 0F90      		pop __tmp_reg__
 12763 5602 0F90      		pop __tmp_reg__
 12764 5604 00C0      		rjmp .L435
 12765               	.L437:
1601:lp_solve_5.5/lp_simplex.c ****       else if(lost_feas_count > 0)
 12766               		.loc 2 1601 0
 12767 5606 8B81      		ldd r24,Y+3
 12768 5608 9C81      		ldd r25,Y+4
 12769 560a 1816      		cp __zero_reg__,r24
 12770 560c 1906      		cpc __zero_reg__,r25
 12771 560e 04F4      		brge .L438
1602:lp_solve_5.5/lp_simplex.c ****         report(lp, NORMAL, "Continuing at infeasible basis\n");
 12772               		.loc 2 1602 0
 12773 5610 80E0      		ldi r24,lo8(.LC42)
 12774 5612 90E0      		ldi r25,hi8(.LC42)
 12775 5614 892F      		mov r24,r25
 12776 5616 8F93      		push r24
 12777 5618 80E0      		ldi r24,lo8(.LC42)
 12778 561a 90E0      		ldi r25,hi8(.LC42)
 12779 561c 8F93      		push r24
 12780 561e 1F92      		push __zero_reg__
 12781 5620 84E0      		ldi r24,lo8(4)
 12782 5622 8F93      		push r24
 12783 5624 8A8D      		ldd r24,Y+26
 12784 5626 8F93      		push r24
 12785 5628 898D      		ldd r24,Y+25
 12786 562a 8F93      		push r24
 12787 562c 0E94 0000 		call report
 12788 5630 0F90      		pop __tmp_reg__
 12789 5632 0F90      		pop __tmp_reg__
 12790 5634 0F90      		pop __tmp_reg__
 12791 5636 0F90      		pop __tmp_reg__
 12792 5638 0F90      		pop __tmp_reg__
 12793 563a 0F90      		pop __tmp_reg__
 12794 563c 00C0      		rjmp .L435
 12795               	.L438:
1603:lp_solve_5.5/lp_simplex.c ****       else
1604:lp_solve_5.5/lp_simplex.c ****         report(lp, NORMAL, "Start at infeasible basis\n");
 12796               		.loc 2 1604 0
 12797 563e 80E0      		ldi r24,lo8(.LC43)
 12798 5640 90E0      		ldi r25,hi8(.LC43)
 12799 5642 892F      		mov r24,r25
 12800 5644 8F93      		push r24
 12801 5646 80E0      		ldi r24,lo8(.LC43)
 12802 5648 90E0      		ldi r25,hi8(.LC43)
 12803 564a 8F93      		push r24
 12804 564c 1F92      		push __zero_reg__
 12805 564e 84E0      		ldi r24,lo8(4)
 12806 5650 8F93      		push r24
 12807 5652 8A8D      		ldd r24,Y+26
 12808 5654 8F93      		push r24
 12809 5656 898D      		ldd r24,Y+25
 12810 5658 8F93      		push r24
 12811 565a 0E94 0000 		call report
 12812 565e 0F90      		pop __tmp_reg__
 12813 5660 0F90      		pop __tmp_reg__
 12814 5662 0F90      		pop __tmp_reg__
 12815 5664 0F90      		pop __tmp_reg__
 12816 5666 0F90      		pop __tmp_reg__
 12817 5668 0F90      		pop __tmp_reg__
 12818               	.L435:
1605:lp_solve_5.5/lp_simplex.c ****     }
1606:lp_solve_5.5/lp_simplex.c **** 
1607:lp_solve_5.5/lp_simplex.c ****    /* Now do the simplex magic */
1608:lp_solve_5.5/lp_simplex.c ****     if(((lp->simplex_strategy & SIMPLEX_Phase1_DUAL) == 0) ||
 12819               		.loc 2 1608 0
 12820 566a 898D      		ldd r24,Y+25
 12821 566c 9A8D      		ldd r25,Y+26
 12822 566e 8C5A      		subi r24,-84
 12823 5670 9D4F      		sbci r25,-3
 12824 5672 FC01      		movw r30,r24
 12825 5674 8081      		ld r24,Z
 12826 5676 9181      		ldd r25,Z+1
 12827 5678 8270      		andi r24,2
 12828 567a 9927      		clr r25
 12829 567c 892B      		or r24,r25
 12830 567e 01F0      		breq .L439
1609:lp_solve_5.5/lp_simplex.c ****        ((MIP_count(lp) > 0) && (lp->total_iter == 0) &&
 12831               		.loc 2 1609 0 discriminator 1
 12832 5680 898D      		ldd r24,Y+25
 12833 5682 9A8D      		ldd r25,Y+26
 12834 5684 0E94 0000 		call MIP_count
1608:lp_solve_5.5/lp_simplex.c ****        ((MIP_count(lp) > 0) && (lp->total_iter == 0) &&
 12835               		.loc 2 1608 0 discriminator 1
 12836 5688 1816      		cp __zero_reg__,r24
 12837 568a 1906      		cpc __zero_reg__,r25
 12838 568c 04F0      		brlt .+2
 12839 568e 00C0      		rjmp .L440
 12840               		.loc 2 1609 0
 12841 5690 898D      		ldd r24,Y+25
 12842 5692 9A8D      		ldd r25,Y+26
 12843 5694 885C      		subi r24,-56
 12844 5696 9D4F      		sbci r25,-3
 12845 5698 FC01      		movw r30,r24
 12846 569a A080      		ld r10,Z
 12847 569c FC01      		movw r30,r24
 12848 569e B180      		ldd r11,Z+1
 12849 56a0 FC01      		movw r30,r24
 12850 56a2 C280      		ldd r12,Z+2
 12851 56a4 FC01      		movw r30,r24
 12852 56a6 D380      		ldd r13,Z+3
 12853 56a8 FC01      		movw r30,r24
 12854 56aa E480      		ldd r14,Z+4
 12855 56ac FC01      		movw r30,r24
 12856 56ae F580      		ldd r15,Z+5
 12857 56b0 FC01      		movw r30,r24
 12858 56b2 0681      		ldd r16,Z+6
 12859 56b4 FC01      		movw r30,r24
 12860 56b6 1781      		ldd r17,Z+7
 12861 56b8 2A2D      		mov r18,r10
 12862 56ba 3B2D      		mov r19,r11
 12863 56bc 4C2D      		mov r20,r12
 12864 56be 5D2D      		mov r21,r13
 12865 56c0 6E2D      		mov r22,r14
 12866 56c2 7F2D      		mov r23,r15
 12867 56c4 802F      		mov r24,r16
 12868 56c6 912F      		mov r25,r17
 12869 56c8 A0E0      		ldi r26,0
 12870 56ca 0E94 0000 		call __cmpdi2_s8
 12871 56ce 01F0      		breq .+2
 12872 56d0 00C0      		rjmp .L440
1610:lp_solve_5.5/lp_simplex.c ****         is_presolve(lp, PRESOLVE_REDUCEMIP))) {
 12873               		.loc 2 1610 0 discriminator 1
 12874 56d2 898D      		ldd r24,Y+25
 12875 56d4 9A8D      		ldd r25,Y+26
 12876 56d6 60E4      		ldi r22,lo8(64)
 12877 56d8 70E0      		ldi r23,0
 12878 56da 0E94 0000 		call is_presolve
1609:lp_solve_5.5/lp_simplex.c ****        ((MIP_count(lp) > 0) && (lp->total_iter == 0) &&
 12879               		.loc 2 1609 0 discriminator 1
 12880 56de 8823      		tst r24
 12881 56e0 01F0      		breq .L440
 12882               	.L439:
1611:lp_solve_5.5/lp_simplex.c ****       if(!lost_feas_state && primalfeasible && ((lp->simplex_strategy & SIMPLEX_Phase2_DUAL) > 0))
 12883               		.loc 2 1611 0
 12884 56e2 8F81      		ldd r24,Y+7
 12885 56e4 8823      		tst r24
 12886 56e6 01F4      		brne .L441
 12887               		.loc 2 1611 0 is_stmt 0 discriminator 1
 12888 56e8 8E85      		ldd r24,Y+14
 12889 56ea 8823      		tst r24
 12890 56ec 01F0      		breq .L441
 12891               		.loc 2 1611 0 discriminator 2
 12892 56ee 898D      		ldd r24,Y+25
 12893 56f0 9A8D      		ldd r25,Y+26
 12894 56f2 8C5A      		subi r24,-84
 12895 56f4 9D4F      		sbci r25,-3
 12896 56f6 FC01      		movw r30,r24
 12897 56f8 8081      		ld r24,Z
 12898 56fa 9181      		ldd r25,Z+1
 12899 56fc 8870      		andi r24,8
 12900 56fe 9927      		clr r25
 12901 5700 1816      		cp __zero_reg__,r24
 12902 5702 1906      		cpc __zero_reg__,r25
 12903 5704 04F4      		brge .L441
1612:lp_solve_5.5/lp_simplex.c ****         lp->spx_status = SWITCH_TO_DUAL;
 12904               		.loc 2 1612 0 is_stmt 1
 12905 5706 898D      		ldd r24,Y+25
 12906 5708 9A8D      		ldd r25,Y+26
 12907 570a 8A5F      		subi r24,-6
 12908 570c 9D4F      		sbci r25,-3
 12909 570e 25E1      		ldi r18,lo8(21)
 12910 5710 30E0      		ldi r19,0
 12911 5712 FC01      		movw r30,r24
 12912 5714 3183      		std Z+1,r19
 12913 5716 2083      		st Z,r18
 12914 5718 00C0      		rjmp .L442
 12915               	.L441:
1613:lp_solve_5.5/lp_simplex.c ****       else
1614:lp_solve_5.5/lp_simplex.c ****         primloop(lp, primalfeasible, 0.0);
 12916               		.loc 2 1614 0
 12917 571a 898D      		ldd r24,Y+25
 12918 571c 9A8D      		ldd r25,Y+26
 12919 571e 20E0      		ldi r18,0
 12920 5720 30E0      		ldi r19,0
 12921 5722 A901      		movw r20,r18
 12922 5724 6E85      		ldd r22,Y+14
 12923 5726 0E94 0000 		call primloop
 12924               	.L442:
1615:lp_solve_5.5/lp_simplex.c ****       if(lp->spx_status == SWITCH_TO_DUAL)
 12925               		.loc 2 1615 0
 12926 572a 898D      		ldd r24,Y+25
 12927 572c 9A8D      		ldd r25,Y+26
 12928 572e 8A5F      		subi r24,-6
 12929 5730 9D4F      		sbci r25,-3
 12930 5732 FC01      		movw r30,r24
 12931 5734 8081      		ld r24,Z
 12932 5736 9181      		ldd r25,Z+1
 12933 5738 4597      		sbiw r24,21
 12934 573a 01F0      		breq .+2
 12935 573c 00C0      		rjmp .L444
1616:lp_solve_5.5/lp_simplex.c ****         dualloop(lp, TRUE, NULL, 0.0);
 12936               		.loc 2 1616 0
 12937 573e 898D      		ldd r24,Y+25
 12938 5740 9A8D      		ldd r25,Y+26
 12939 5742 00E0      		ldi r16,0
 12940 5744 10E0      		ldi r17,0
 12941 5746 9801      		movw r18,r16
 12942 5748 40E0      		ldi r20,0
 12943 574a 50E0      		ldi r21,0
 12944 574c 61E0      		ldi r22,lo8(1)
 12945 574e 0E94 0000 		call dualloop
1615:lp_solve_5.5/lp_simplex.c ****       if(lp->spx_status == SWITCH_TO_DUAL)
 12946               		.loc 2 1615 0
 12947 5752 00C0      		rjmp .L444
 12948               	.L440:
1617:lp_solve_5.5/lp_simplex.c ****     }
1618:lp_solve_5.5/lp_simplex.c ****     else {
1619:lp_solve_5.5/lp_simplex.c ****       if(!lost_feas_state && primalfeasible && ((lp->simplex_strategy & SIMPLEX_Phase2_PRIMAL) > 0)
 12949               		.loc 2 1619 0
 12950 5754 8F81      		ldd r24,Y+7
 12951 5756 8823      		tst r24
 12952 5758 01F4      		brne .L445
 12953               		.loc 2 1619 0 is_stmt 0 discriminator 1
 12954 575a 8E85      		ldd r24,Y+14
 12955 575c 8823      		tst r24
 12956 575e 01F0      		breq .L445
 12957               		.loc 2 1619 0 discriminator 2
 12958 5760 898D      		ldd r24,Y+25
 12959 5762 9A8D      		ldd r25,Y+26
 12960 5764 8C5A      		subi r24,-84
 12961 5766 9D4F      		sbci r25,-3
 12962 5768 FC01      		movw r30,r24
 12963 576a 8081      		ld r24,Z
 12964 576c 9181      		ldd r25,Z+1
 12965 576e 8470      		andi r24,4
 12966 5770 9927      		clr r25
 12967 5772 1816      		cp __zero_reg__,r24
 12968 5774 1906      		cpc __zero_reg__,r25
 12969 5776 04F4      		brge .L445
1620:lp_solve_5.5/lp_simplex.c ****         lp->spx_status = SWITCH_TO_PRIMAL;
 12970               		.loc 2 1620 0 is_stmt 1
 12971 5778 898D      		ldd r24,Y+25
 12972 577a 9A8D      		ldd r25,Y+26
 12973 577c 8A5F      		subi r24,-6
 12974 577e 9D4F      		sbci r25,-3
 12975 5780 24E1      		ldi r18,lo8(20)
 12976 5782 30E0      		ldi r19,0
 12977 5784 FC01      		movw r30,r24
 12978 5786 3183      		std Z+1,r19
 12979 5788 2083      		st Z,r18
 12980 578a 00C0      		rjmp .L446
 12981               	.L445:
1621:lp_solve_5.5/lp_simplex.c ****       else
1622:lp_solve_5.5/lp_simplex.c ****         dualloop(lp, dualfeasible, infeasibles, dualoffset);
 12982               		.loc 2 1622 0
 12983 578c 8D89      		ldd r24,Y+21
 12984 578e 9E89      		ldd r25,Y+22
 12985 5790 AF89      		ldd r26,Y+23
 12986 5792 B88D      		ldd r27,Y+24
 12987 5794 4885      		ldd r20,Y+8
 12988 5796 5985      		ldd r21,Y+9
 12989 5798 E98D      		ldd r30,Y+25
 12990 579a FA8D      		ldd r31,Y+26
 12991 579c 8C01      		movw r16,r24
 12992 579e 9D01      		movw r18,r26
 12993 57a0 6D85      		ldd r22,Y+13
 12994 57a2 CF01      		movw r24,r30
 12995 57a4 0E94 0000 		call dualloop
 12996               	.L446:
1623:lp_solve_5.5/lp_simplex.c ****       if(lp->spx_status == SWITCH_TO_PRIMAL)
 12997               		.loc 2 1623 0
 12998 57a8 898D      		ldd r24,Y+25
 12999 57aa 9A8D      		ldd r25,Y+26
 13000 57ac 8A5F      		subi r24,-6
 13001 57ae 9D4F      		sbci r25,-3
 13002 57b0 FC01      		movw r30,r24
 13003 57b2 8081      		ld r24,Z
 13004 57b4 9181      		ldd r25,Z+1
 13005 57b6 4497      		sbiw r24,20
 13006 57b8 01F4      		brne .L444
1624:lp_solve_5.5/lp_simplex.c ****         primloop(lp, TRUE, 0.0);
 13007               		.loc 2 1624 0
 13008 57ba 898D      		ldd r24,Y+25
 13009 57bc 9A8D      		ldd r25,Y+26
 13010 57be 20E0      		ldi r18,0
 13011 57c0 30E0      		ldi r19,0
 13012 57c2 A901      		movw r20,r18
 13013 57c4 61E0      		ldi r22,lo8(1)
 13014 57c6 0E94 0000 		call primloop
 13015               	.L444:
1625:lp_solve_5.5/lp_simplex.c ****     }
1626:lp_solve_5.5/lp_simplex.c **** 
1627:lp_solve_5.5/lp_simplex.c ****     /* Check for simplex outcomes that always involve breaking out of the loop;
1628:lp_solve_5.5/lp_simplex.c ****        this includes optimality, unboundedness, pure infeasibility (i.e. not
1629:lp_solve_5.5/lp_simplex.c ****        loss of feasibility), numerical failure and perturbation-based degeneracy
1630:lp_solve_5.5/lp_simplex.c ****        handling */
1631:lp_solve_5.5/lp_simplex.c ****     i = lp->spx_status;
 13016               		.loc 2 1631 0
 13017 57ca 898D      		ldd r24,Y+25
 13018 57cc 9A8D      		ldd r25,Y+26
 13019 57ce 8A5F      		subi r24,-6
 13020 57d0 9D4F      		sbci r25,-3
 13021 57d2 FC01      		movw r30,r24
 13022 57d4 8081      		ld r24,Z
 13023 57d6 9181      		ldd r25,Z+1
 13024 57d8 988B      		std Y+16,r25
 13025 57da 8F87      		std Y+15,r24
1632:lp_solve_5.5/lp_simplex.c ****     primalfeasible = (MYBOOL) (i == OPTIMAL);
 13026               		.loc 2 1632 0
 13027 57dc 8F85      		ldd r24,Y+15
 13028 57de 9889      		ldd r25,Y+16
 13029 57e0 21E0      		ldi r18,lo8(1)
 13030 57e2 892B      		or r24,r25
 13031 57e4 01F0      		breq .L447
 13032 57e6 20E0      		ldi r18,0
 13033               	.L447:
 13034 57e8 2E87      		std Y+14,r18
1633:lp_solve_5.5/lp_simplex.c ****     if(primalfeasible || (i == UNBOUNDED))
 13035               		.loc 2 1633 0
 13036 57ea 8E85      		ldd r24,Y+14
 13037 57ec 8823      		tst r24
 13038 57ee 01F0      		breq .+2
 13039 57f0 00C0      		rjmp .L434
 13040               		.loc 2 1633 0 is_stmt 0 discriminator 1
 13041 57f2 8F85      		ldd r24,Y+15
 13042 57f4 9889      		ldd r25,Y+16
 13043 57f6 0397      		sbiw r24,3
 13044 57f8 01F4      		brne .+2
 13045 57fa 00C0      		rjmp .L434
1634:lp_solve_5.5/lp_simplex.c ****       break;
1635:lp_solve_5.5/lp_simplex.c ****     else if(((i == INFEASIBLE) && is_anti_degen(lp, ANTIDEGEN_INFEASIBLE)) ||
 13046               		.loc 2 1635 0 is_stmt 1
 13047 57fc 8F85      		ldd r24,Y+15
 13048 57fe 9889      		ldd r25,Y+16
 13049 5800 0297      		sbiw r24,2
 13050 5802 01F4      		brne .L448
 13051               		.loc 2 1635 0 is_stmt 0 discriminator 1
 13052 5804 898D      		ldd r24,Y+25
 13053 5806 9A8D      		ldd r25,Y+26
 13054 5808 60E2      		ldi r22,lo8(32)
 13055 580a 70E0      		ldi r23,0
 13056 580c 0E94 0000 		call is_anti_degen
 13057 5810 8823      		tst r24
 13058 5812 01F4      		brne .L449
 13059               	.L448:
1636:lp_solve_5.5/lp_simplex.c ****              ((i == LOSTFEAS)   && is_anti_degen(lp, ANTIDEGEN_LOSTFEAS)) ||
 13060               		.loc 2 1636 0 is_stmt 1 discriminator 3
 13061 5814 8F85      		ldd r24,Y+15
 13062 5816 9889      		ldd r25,Y+16
1635:lp_solve_5.5/lp_simplex.c ****              ((i == LOSTFEAS)   && is_anti_degen(lp, ANTIDEGEN_LOSTFEAS)) ||
 13063               		.loc 2 1635 0 discriminator 3
 13064 5818 4797      		sbiw r24,23
 13065 581a 01F4      		brne .L450
 13066               		.loc 2 1636 0
 13067 581c 898D      		ldd r24,Y+25
 13068 581e 9A8D      		ldd r25,Y+26
 13069 5820 60E1      		ldi r22,lo8(16)
 13070 5822 70E0      		ldi r23,0
 13071 5824 0E94 0000 		call is_anti_degen
 13072 5828 8823      		tst r24
 13073 582a 01F4      		brne .L449
 13074               	.L450:
1637:lp_solve_5.5/lp_simplex.c ****              ((i == NUMFAILURE) && is_anti_degen(lp, ANTIDEGEN_NUMFAILURE)) ||
 13075               		.loc 2 1637 0 discriminator 1
 13076 582c 8F85      		ldd r24,Y+15
 13077 582e 9889      		ldd r25,Y+16
1636:lp_solve_5.5/lp_simplex.c ****              ((i == LOSTFEAS)   && is_anti_degen(lp, ANTIDEGEN_LOSTFEAS)) ||
 13078               		.loc 2 1636 0 discriminator 1
 13079 5830 0597      		sbiw r24,5
 13080 5832 01F4      		brne .L451
 13081               		.loc 2 1637 0
 13082 5834 898D      		ldd r24,Y+25
 13083 5836 9A8D      		ldd r25,Y+26
 13084 5838 68E0      		ldi r22,lo8(8)
 13085 583a 70E0      		ldi r23,0
 13086 583c 0E94 0000 		call is_anti_degen
 13087 5840 8823      		tst r24
 13088 5842 01F4      		brne .L449
 13089               	.L451:
1638:lp_solve_5.5/lp_simplex.c ****              ((i == DEGENERATE) && is_anti_degen(lp, ANTIDEGEN_STALLING))) {
 13090               		.loc 2 1638 0 discriminator 1
 13091 5844 8F85      		ldd r24,Y+15
 13092 5846 9889      		ldd r25,Y+16
1637:lp_solve_5.5/lp_simplex.c ****              ((i == NUMFAILURE) && is_anti_degen(lp, ANTIDEGEN_NUMFAILURE)) ||
 13093               		.loc 2 1637 0 discriminator 1
 13094 5848 0497      		sbiw r24,4
 13095 584a 01F4      		brne .L452
 13096               		.loc 2 1638 0
 13097 584c 898D      		ldd r24,Y+25
 13098 584e 9A8D      		ldd r25,Y+26
 13099 5850 64E0      		ldi r22,lo8(4)
 13100 5852 70E0      		ldi r23,0
 13101 5854 0E94 0000 		call is_anti_degen
 13102 5858 8823      		tst r24
 13103 585a 01F0      		breq .L452
 13104               	.L449:
1639:lp_solve_5.5/lp_simplex.c ****       /* Check if we should not loop here, but do perturbations */
1640:lp_solve_5.5/lp_simplex.c ****       if((lp->bb_level <= 1)   || is_anti_degen(lp, ANTIDEGEN_DURINGBB))
 13105               		.loc 2 1640 0
 13106 585c 898D      		ldd r24,Y+25
 13107 585e 9A8D      		ldd r25,Y+26
 13108 5860 805D      		subi r24,-48
 13109 5862 9C4F      		sbci r25,-4
 13110 5864 FC01      		movw r30,r24
 13111 5866 8081      		ld r24,Z
 13112 5868 9181      		ldd r25,Z+1
 13113 586a 0297      		sbiw r24,2
 13114 586c 04F4      		brge .+2
 13115 586e 00C0      		rjmp .L434
 13116               		.loc 2 1640 0 is_stmt 0 discriminator 1
 13117 5870 898D      		ldd r24,Y+25
 13118 5872 9A8D      		ldd r25,Y+26
 13119 5874 60E8      		ldi r22,lo8(-128)
 13120 5876 70E0      		ldi r23,0
 13121 5878 0E94 0000 		call is_anti_degen
 13122 587c 8823      		tst r24
 13123 587e 01F0      		breq .+2
 13124 5880 00C0      		rjmp .L434
1641:lp_solve_5.5/lp_simplex.c ****         break;
1642:lp_solve_5.5/lp_simplex.c **** 
1643:lp_solve_5.5/lp_simplex.c ****       /* Assume that accuracy during B&B is high and that infeasibility is "real" */
1644:lp_solve_5.5/lp_simplex.c **** #ifdef AssumeHighAccuracyInBB
1645:lp_solve_5.5/lp_simplex.c ****       if((lp->bb_level > 1) && (i == INFEASIBLE))
 13125               		.loc 2 1645 0 is_stmt 1
 13126 5882 898D      		ldd r24,Y+25
 13127 5884 9A8D      		ldd r25,Y+26
 13128 5886 805D      		subi r24,-48
 13129 5888 9C4F      		sbci r25,-4
 13130 588a FC01      		movw r30,r24
 13131 588c 8081      		ld r24,Z
 13132 588e 9181      		ldd r25,Z+1
 13133 5890 0297      		sbiw r24,2
 13134 5892 04F0      		brlt .L452
 13135               		.loc 2 1645 0 is_stmt 0 discriminator 1
 13136 5894 8F85      		ldd r24,Y+15
 13137 5896 9889      		ldd r25,Y+16
 13138 5898 0297      		sbiw r24,2
 13139 589a 01F4      		brne .+2
 13140 589c 00C0      		rjmp .L467
 13141               	.L452:
1646:lp_solve_5.5/lp_simplex.c ****         break;
1647:lp_solve_5.5/lp_simplex.c **** #endif
1648:lp_solve_5.5/lp_simplex.c ****     }
1649:lp_solve_5.5/lp_simplex.c **** 
1650:lp_solve_5.5/lp_simplex.c ****     /* Check for outcomes that may involve trying another simplex loop */
1651:lp_solve_5.5/lp_simplex.c ****     if(lp->spx_status == SINGULAR_BASIS) {
 13142               		.loc 2 1651 0 is_stmt 1
 13143 589e 898D      		ldd r24,Y+25
 13144 58a0 9A8D      		ldd r25,Y+26
 13145 58a2 8A5F      		subi r24,-6
 13146 58a4 9D4F      		sbci r25,-3
 13147 58a6 FC01      		movw r30,r24
 13148 58a8 8081      		ld r24,Z
 13149 58aa 9181      		ldd r25,Z+1
 13150 58ac 4697      		sbiw r24,22
 13151 58ae 01F0      		breq .+2
 13152 58b0 00C0      		rjmp .L453
1652:lp_solve_5.5/lp_simplex.c ****       lost_feas_state = FALSE;
 13153               		.loc 2 1652 0
 13154 58b2 1F82      		std Y+7,__zero_reg__
1653:lp_solve_5.5/lp_simplex.c ****       singular_count++;
 13155               		.loc 2 1653 0
 13156 58b4 8981      		ldd r24,Y+1
 13157 58b6 9A81      		ldd r25,Y+2
 13158 58b8 0196      		adiw r24,1
 13159 58ba 9A83      		std Y+2,r25
 13160 58bc 8983      		std Y+1,r24
1654:lp_solve_5.5/lp_simplex.c ****       if(singular_count >= DEF_MAXSINGULARITIES) {
 13161               		.loc 2 1654 0
 13162 58be 8981      		ldd r24,Y+1
 13163 58c0 9A81      		ldd r25,Y+2
 13164 58c2 0A97      		sbiw r24,10
 13165 58c4 04F0      		brlt .L454
1655:lp_solve_5.5/lp_simplex.c ****         report(lp, IMPORTANT, "spx_run: Failure due to too many singular bases.\n");
 13166               		.loc 2 1655 0
 13167 58c6 80E0      		ldi r24,lo8(.LC44)
 13168 58c8 90E0      		ldi r25,hi8(.LC44)
 13169 58ca 892F      		mov r24,r25
 13170 58cc 8F93      		push r24
 13171 58ce 80E0      		ldi r24,lo8(.LC44)
 13172 58d0 90E0      		ldi r25,hi8(.LC44)
 13173 58d2 8F93      		push r24
 13174 58d4 1F92      		push __zero_reg__
 13175 58d6 83E0      		ldi r24,lo8(3)
 13176 58d8 8F93      		push r24
 13177 58da 8A8D      		ldd r24,Y+26
 13178 58dc 8F93      		push r24
 13179 58de 898D      		ldd r24,Y+25
 13180 58e0 8F93      		push r24
 13181 58e2 0E94 0000 		call report
 13182 58e6 0F90      		pop __tmp_reg__
 13183 58e8 0F90      		pop __tmp_reg__
 13184 58ea 0F90      		pop __tmp_reg__
 13185 58ec 0F90      		pop __tmp_reg__
 13186 58ee 0F90      		pop __tmp_reg__
 13187 58f0 0F90      		pop __tmp_reg__
1656:lp_solve_5.5/lp_simplex.c ****         lp->spx_status = NUMFAILURE;
 13188               		.loc 2 1656 0
 13189 58f2 898D      		ldd r24,Y+25
 13190 58f4 9A8D      		ldd r25,Y+26
 13191 58f6 8A5F      		subi r24,-6
 13192 58f8 9D4F      		sbci r25,-3
 13193 58fa 25E0      		ldi r18,lo8(5)
 13194 58fc 30E0      		ldi r19,0
 13195 58fe FC01      		movw r30,r24
 13196 5900 3183      		std Z+1,r19
 13197 5902 2083      		st Z,r18
1657:lp_solve_5.5/lp_simplex.c ****         break;
 13198               		.loc 2 1657 0
 13199 5904 00C0      		rjmp .L434
 13200               	.L454:
1658:lp_solve_5.5/lp_simplex.c ****       }
1659:lp_solve_5.5/lp_simplex.c ****       if(lp->spx_trace || (lp->verbose > DETAILED))
 13201               		.loc 2 1659 0
 13202 5906 898D      		ldd r24,Y+25
 13203 5908 9A8D      		ldd r25,Y+26
 13204 590a 8E5F      		subi r24,-2
 13205 590c 9D4F      		sbci r25,-3
 13206 590e FC01      		movw r30,r24
 13207 5910 8081      		ld r24,Z
 13208 5912 8823      		tst r24
 13209 5914 01F4      		brne .L455
 13210               		.loc 2 1659 0 is_stmt 0 discriminator 1
 13211 5916 898D      		ldd r24,Y+25
 13212 5918 9A8D      		ldd r25,Y+26
 13213 591a 885A      		subi r24,-88
 13214 591c 9D4F      		sbci r25,-3
 13215 591e FC01      		movw r30,r24
 13216 5920 8081      		ld r24,Z
 13217 5922 9181      		ldd r25,Z+1
 13218 5924 0697      		sbiw r24,6
 13219 5926 04F0      		brlt .L456
 13220               	.L455:
1660:lp_solve_5.5/lp_simplex.c ****         report(lp, NORMAL, "spx_run: Singular basis; attempting to recover.\n");
 13221               		.loc 2 1660 0 is_stmt 1
 13222 5928 80E0      		ldi r24,lo8(.LC45)
 13223 592a 90E0      		ldi r25,hi8(.LC45)
 13224 592c 892F      		mov r24,r25
 13225 592e 8F93      		push r24
 13226 5930 80E0      		ldi r24,lo8(.LC45)
 13227 5932 90E0      		ldi r25,hi8(.LC45)
 13228 5934 8F93      		push r24
 13229 5936 1F92      		push __zero_reg__
 13230 5938 84E0      		ldi r24,lo8(4)
 13231 593a 8F93      		push r24
 13232 593c 8A8D      		ldd r24,Y+26
 13233 593e 8F93      		push r24
 13234 5940 898D      		ldd r24,Y+25
 13235 5942 8F93      		push r24
 13236 5944 0E94 0000 		call report
 13237 5948 0F90      		pop __tmp_reg__
 13238 594a 0F90      		pop __tmp_reg__
 13239 594c 0F90      		pop __tmp_reg__
 13240 594e 0F90      		pop __tmp_reg__
 13241 5950 0F90      		pop __tmp_reg__
 13242 5952 0F90      		pop __tmp_reg__
 13243               	.L456:
1661:lp_solve_5.5/lp_simplex.c ****       lp->spx_status = RUNNING;
 13244               		.loc 2 1661 0
 13245 5954 898D      		ldd r24,Y+25
 13246 5956 9A8D      		ldd r25,Y+26
 13247 5958 8A5F      		subi r24,-6
 13248 595a 9D4F      		sbci r25,-3
 13249 595c 28E0      		ldi r18,lo8(8)
 13250 595e 30E0      		ldi r19,0
 13251 5960 FC01      		movw r30,r24
 13252 5962 3183      		std Z+1,r19
 13253 5964 2083      		st Z,r18
 13254 5966 00C0      		rjmp .L428
 13255               	.L453:
1662:lp_solve_5.5/lp_simplex.c ****       /* Singular pivots are simply skipped by the inversion, leaving a row's
1663:lp_solve_5.5/lp_simplex.c ****          slack variable in the basis instead of the singular user variable. */
1664:lp_solve_5.5/lp_simplex.c ****     }
1665:lp_solve_5.5/lp_simplex.c ****     else {
1666:lp_solve_5.5/lp_simplex.c ****       lost_feas_state = (MYBOOL) (lp->spx_status == LOSTFEAS);
 13256               		.loc 2 1666 0
 13257 5968 898D      		ldd r24,Y+25
 13258 596a 9A8D      		ldd r25,Y+26
 13259 596c 8A5F      		subi r24,-6
 13260 596e 9D4F      		sbci r25,-3
 13261 5970 FC01      		movw r30,r24
 13262 5972 8081      		ld r24,Z
 13263 5974 9181      		ldd r25,Z+1
 13264 5976 21E0      		ldi r18,lo8(1)
 13265 5978 4797      		sbiw r24,23
 13266 597a 01F0      		breq .L457
 13267 597c 20E0      		ldi r18,0
 13268               	.L457:
 13269 597e 2F83      		std Y+7,r18
1667:lp_solve_5.5/lp_simplex.c **** #if 0
1668:lp_solve_5.5/lp_simplex.c ****       /* Optionally handle loss of numerical accuracy as loss of feasibility,
1669:lp_solve_5.5/lp_simplex.c ****          but only attempt a single loop to try to recover from this. */
1670:lp_solve_5.5/lp_simplex.c ****       lost_feas_state |= (MYBOOL) ((lp->spx_status == NUMFAILURE) && (lost_feas_count < 1));
1671:lp_solve_5.5/lp_simplex.c **** #endif
1672:lp_solve_5.5/lp_simplex.c ****       if(lost_feas_state) {
 13270               		.loc 2 1672 0
 13271 5980 8F81      		ldd r24,Y+7
 13272 5982 8823      		tst r24
 13273 5984 01F4      		brne .+2
 13274 5986 00C0      		rjmp .L428
1673:lp_solve_5.5/lp_simplex.c ****         lost_feas_count++;
 13275               		.loc 2 1673 0
 13276 5988 8B81      		ldd r24,Y+3
 13277 598a 9C81      		ldd r25,Y+4
 13278 598c 0196      		adiw r24,1
 13279 598e 9C83      		std Y+4,r25
 13280 5990 8B83      		std Y+3,r24
1674:lp_solve_5.5/lp_simplex.c ****         if(lost_feas_count < DEF_MAXSINGULARITIES) {
 13281               		.loc 2 1674 0
 13282 5992 8B81      		ldd r24,Y+3
 13283 5994 9C81      		ldd r25,Y+4
 13284 5996 0A97      		sbiw r24,10
 13285 5998 04F0      		brlt .+2
 13286 599a 00C0      		rjmp .L458
1675:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "spx_run: Recover lost feasibility at iter  %10.0f.\n",
1676:lp_solve_5.5/lp_simplex.c ****                                 (double) get_total_iter(lp));
 13287               		.loc 2 1676 0
 13288 599c 898D      		ldd r24,Y+25
 13289 599e 9A8D      		ldd r25,Y+26
 13290 59a0 0E94 0000 		call get_total_iter
 13291 59a4 A22E      		mov r10,r18
 13292 59a6 B32E      		mov r11,r19
 13293 59a8 C42E      		mov r12,r20
 13294 59aa D52E      		mov r13,r21
 13295 59ac E62E      		mov r14,r22
 13296 59ae F72E      		mov r15,r23
 13297 59b0 082F      		mov r16,r24
 13298 59b2 192F      		mov r17,r25
1675:lp_solve_5.5/lp_simplex.c ****           report(lp, DETAILED, "spx_run: Recover lost feasibility at iter  %10.0f.\n",
 13299               		.loc 2 1675 0
 13300 59b4 2A2D      		mov r18,r10
 13301 59b6 3B2D      		mov r19,r11
 13302 59b8 4C2D      		mov r20,r12
 13303 59ba 5D2D      		mov r21,r13
 13304 59bc 6E2D      		mov r22,r14
 13305 59be 7F2D      		mov r23,r15
 13306 59c0 802F      		mov r24,r16
 13307 59c2 912F      		mov r25,r17
 13308 59c4 0E94 0000 		call __floatdisf
 13309 59c8 DC01      		movw r26,r24
 13310 59ca CB01      		movw r24,r22
 13311 59cc 2B2F      		mov r18,r27
 13312 59ce 2F93      		push r18
 13313 59d0 2A2F      		mov r18,r26
 13314 59d2 2F93      		push r18
 13315 59d4 292F      		mov r18,r25
 13316 59d6 2F93      		push r18
 13317 59d8 8F93      		push r24
 13318 59da 80E0      		ldi r24,lo8(.LC46)
 13319 59dc 90E0      		ldi r25,hi8(.LC46)
 13320 59de 892F      		mov r24,r25
 13321 59e0 8F93      		push r24
 13322 59e2 80E0      		ldi r24,lo8(.LC46)
 13323 59e4 90E0      		ldi r25,hi8(.LC46)
 13324 59e6 8F93      		push r24
 13325 59e8 1F92      		push __zero_reg__
 13326 59ea 85E0      		ldi r24,lo8(5)
 13327 59ec 8F93      		push r24
 13328 59ee 8A8D      		ldd r24,Y+26
 13329 59f0 8F93      		push r24
 13330 59f2 898D      		ldd r24,Y+25
 13331 59f4 8F93      		push r24
 13332 59f6 0E94 0000 		call report
 13333 59fa 8DB7      		in r24,__SP_L__
 13334 59fc 9EB7      		in r25,__SP_H__
 13335 59fe 0A96      		adiw r24,10
 13336 5a00 0FB6      		in __tmp_reg__,__SREG__
 13337 5a02 F894      		cli
 13338 5a04 DEBF      		out __SP_H__,r29
 13339 5a06 0FBE      		out __SREG__,__tmp_reg__
 13340 5a08 CDBF      		out __SP_L__,r28
1677:lp_solve_5.5/lp_simplex.c ****           lp->spx_status = RUNNING;
 13341               		.loc 2 1677 0
 13342 5a0a 898D      		ldd r24,Y+25
 13343 5a0c 9A8D      		ldd r25,Y+26
 13344 5a0e 8A5F      		subi r24,-6
 13345 5a10 9D4F      		sbci r25,-3
 13346 5a12 28E0      		ldi r18,lo8(8)
 13347 5a14 30E0      		ldi r19,0
 13348 5a16 FC01      		movw r30,r24
 13349 5a18 3183      		std Z+1,r19
 13350 5a1a 2083      		st Z,r18
 13351 5a1c 00C0      		rjmp .L428
 13352               	.L458:
1678:lp_solve_5.5/lp_simplex.c ****         }
1679:lp_solve_5.5/lp_simplex.c ****         else {
1680:lp_solve_5.5/lp_simplex.c ****           report(lp, IMPORTANT, "spx_run: Lost feasibility %d times - iter %10.0f and %9.0f nodes.\
1681:lp_solve_5.5/lp_simplex.c ****                                 lost_feas_count, (double) get_total_iter(lp), (double) lp->bb_total
 13353               		.loc 2 1681 0
 13354 5a1e 898D      		ldd r24,Y+25
 13355 5a20 9A8D      		ldd r25,Y+26
 13356 5a22 8A5C      		subi r24,-54
 13357 5a24 9C4F      		sbci r25,-4
 13358 5a26 FC01      		movw r30,r24
 13359 5a28 A080      		ld r10,Z
 13360 5a2a FC01      		movw r30,r24
 13361 5a2c B180      		ldd r11,Z+1
 13362 5a2e FC01      		movw r30,r24
 13363 5a30 C280      		ldd r12,Z+2
 13364 5a32 FC01      		movw r30,r24
 13365 5a34 D380      		ldd r13,Z+3
 13366 5a36 FC01      		movw r30,r24
 13367 5a38 E480      		ldd r14,Z+4
 13368 5a3a FC01      		movw r30,r24
 13369 5a3c F580      		ldd r15,Z+5
 13370 5a3e FC01      		movw r30,r24
 13371 5a40 0681      		ldd r16,Z+6
 13372 5a42 FC01      		movw r30,r24
 13373 5a44 1781      		ldd r17,Z+7
1680:lp_solve_5.5/lp_simplex.c ****                                 lost_feas_count, (double) get_total_iter(lp), (double) lp->bb_total
 13374               		.loc 2 1680 0
 13375 5a46 2A2D      		mov r18,r10
 13376 5a48 3B2D      		mov r19,r11
 13377 5a4a 4C2D      		mov r20,r12
 13378 5a4c 5D2D      		mov r21,r13
 13379 5a4e 6E2D      		mov r22,r14
 13380 5a50 7F2D      		mov r23,r15
 13381 5a52 802F      		mov r24,r16
 13382 5a54 912F      		mov r25,r17
 13383 5a56 0E94 0000 		call __floatdisf
 13384 5a5a 3B01      		movw r6,r22
 13385 5a5c 4C01      		movw r8,r24
 13386               		.loc 2 1681 0
 13387 5a5e 898D      		ldd r24,Y+25
 13388 5a60 9A8D      		ldd r25,Y+26
 13389 5a62 0E94 0000 		call get_total_iter
 13390 5a66 A22E      		mov r10,r18
 13391 5a68 B32E      		mov r11,r19
 13392 5a6a C42E      		mov r12,r20
 13393 5a6c D52E      		mov r13,r21
 13394 5a6e E62E      		mov r14,r22
 13395 5a70 F72E      		mov r15,r23
 13396 5a72 082F      		mov r16,r24
 13397 5a74 192F      		mov r17,r25
1680:lp_solve_5.5/lp_simplex.c ****                                 lost_feas_count, (double) get_total_iter(lp), (double) lp->bb_total
 13398               		.loc 2 1680 0
 13399 5a76 2A2D      		mov r18,r10
 13400 5a78 3B2D      		mov r19,r11
 13401 5a7a 4C2D      		mov r20,r12
 13402 5a7c 5D2D      		mov r21,r13
 13403 5a7e 6E2D      		mov r22,r14
 13404 5a80 7F2D      		mov r23,r15
 13405 5a82 802F      		mov r24,r16
 13406 5a84 912F      		mov r25,r17
 13407 5a86 0E94 0000 		call __floatdisf
 13408 5a8a DC01      		movw r26,r24
 13409 5a8c CB01      		movw r24,r22
 13410 5a8e 292D      		mov r18,r9
 13411 5a90 2F93      		push r18
 13412 5a92 282D      		mov r18,r8
 13413 5a94 2F93      		push r18
 13414 5a96 272D      		mov r18,r7
 13415 5a98 2F93      		push r18
 13416 5a9a 262D      		mov r18,r6
 13417 5a9c 2F93      		push r18
 13418 5a9e 2B2F      		mov r18,r27
 13419 5aa0 2F93      		push r18
 13420 5aa2 2A2F      		mov r18,r26
 13421 5aa4 2F93      		push r18
 13422 5aa6 292F      		mov r18,r25
 13423 5aa8 2F93      		push r18
 13424 5aaa 8F93      		push r24
 13425 5aac 8C81      		ldd r24,Y+4
 13426 5aae 8F93      		push r24
 13427 5ab0 8B81      		ldd r24,Y+3
 13428 5ab2 8F93      		push r24
 13429 5ab4 80E0      		ldi r24,lo8(.LC47)
 13430 5ab6 90E0      		ldi r25,hi8(.LC47)
 13431 5ab8 892F      		mov r24,r25
 13432 5aba 8F93      		push r24
 13433 5abc 80E0      		ldi r24,lo8(.LC47)
 13434 5abe 90E0      		ldi r25,hi8(.LC47)
 13435 5ac0 8F93      		push r24
 13436 5ac2 1F92      		push __zero_reg__
 13437 5ac4 83E0      		ldi r24,lo8(3)
 13438 5ac6 8F93      		push r24
 13439 5ac8 8A8D      		ldd r24,Y+26
 13440 5aca 8F93      		push r24
 13441 5acc 898D      		ldd r24,Y+25
 13442 5ace 8F93      		push r24
 13443 5ad0 0E94 0000 		call report
 13444 5ad4 8DB7      		in r24,__SP_L__
 13445 5ad6 9EB7      		in r25,__SP_H__
 13446 5ad8 4096      		adiw r24,16
 13447 5ada 0FB6      		in __tmp_reg__,__SREG__
 13448 5adc F894      		cli
 13449 5ade DEBF      		out __SP_H__,r29
 13450 5ae0 0FBE      		out __SREG__,__tmp_reg__
 13451 5ae2 CDBF      		out __SP_L__,r28
1682:lp_solve_5.5/lp_simplex.c ****           lp->spx_status = NUMFAILURE;
 13452               		.loc 2 1682 0
 13453 5ae4 898D      		ldd r24,Y+25
 13454 5ae6 9A8D      		ldd r25,Y+26
 13455 5ae8 8A5F      		subi r24,-6
 13456 5aea 9D4F      		sbci r25,-3
 13457 5aec 25E0      		ldi r18,lo8(5)
 13458 5aee 30E0      		ldi r19,0
 13459 5af0 FC01      		movw r30,r24
 13460 5af2 3183      		std Z+1,r19
 13461 5af4 2083      		st Z,r18
 13462               	.L428:
1582:lp_solve_5.5/lp_simplex.c **** 
 13463               		.loc 2 1582 0
 13464 5af6 898D      		ldd r24,Y+25
 13465 5af8 9A8D      		ldd r25,Y+26
 13466 5afa 8A5F      		subi r24,-6
 13467 5afc 9D4F      		sbci r25,-3
 13468 5afe FC01      		movw r30,r24
 13469 5b00 8081      		ld r24,Z
 13470 5b02 9181      		ldd r25,Z+1
 13471 5b04 0897      		sbiw r24,8
 13472 5b06 01F4      		brne .+2
 13473 5b08 00C0      		rjmp .L459
 13474 5b0a 00C0      		rjmp .L434
 13475               	.L466:
1594:lp_solve_5.5/lp_simplex.c **** 
 13476               		.loc 2 1594 0
 13477 5b0c 0000      		nop
 13478 5b0e 00C0      		rjmp .L434
 13479               	.L467:
1646:lp_solve_5.5/lp_simplex.c **** #endif
 13480               		.loc 2 1646 0
 13481 5b10 0000      		nop
 13482               	.L434:
1683:lp_solve_5.5/lp_simplex.c ****         }
1684:lp_solve_5.5/lp_simplex.c ****       }
1685:lp_solve_5.5/lp_simplex.c ****     }
1686:lp_solve_5.5/lp_simplex.c ****   }
1687:lp_solve_5.5/lp_simplex.c **** 
1688:lp_solve_5.5/lp_simplex.c ****   /* Update iteration tallies before returning */
1689:lp_solve_5.5/lp_simplex.c ****   lp->total_iter   += lp->current_iter;
 13483               		.loc 2 1689 0
 13484 5b12 898D      		ldd r24,Y+25
 13485 5b14 9A8D      		ldd r25,Y+26
 13486 5b16 885C      		subi r24,-56
 13487 5b18 9D4F      		sbci r25,-3
 13488 5b1a FC01      		movw r30,r24
 13489 5b1c A080      		ld r10,Z
 13490 5b1e FC01      		movw r30,r24
 13491 5b20 B180      		ldd r11,Z+1
 13492 5b22 FC01      		movw r30,r24
 13493 5b24 C280      		ldd r12,Z+2
 13494 5b26 FC01      		movw r30,r24
 13495 5b28 D380      		ldd r13,Z+3
 13496 5b2a FC01      		movw r30,r24
 13497 5b2c E480      		ldd r14,Z+4
 13498 5b2e FC01      		movw r30,r24
 13499 5b30 F580      		ldd r15,Z+5
 13500 5b32 FC01      		movw r30,r24
 13501 5b34 0681      		ldd r16,Z+6
 13502 5b36 FC01      		movw r30,r24
 13503 5b38 1781      		ldd r17,Z+7
 13504 5b3a 898D      		ldd r24,Y+25
 13505 5b3c 9A8D      		ldd r25,Y+26
 13506 5b3e 805D      		subi r24,-48
 13507 5b40 9D4F      		sbci r25,-3
 13508 5b42 FC01      		movw r30,r24
 13509 5b44 2080      		ld r2,Z
 13510 5b46 FC01      		movw r30,r24
 13511 5b48 3180      		ldd r3,Z+1
 13512 5b4a FC01      		movw r30,r24
 13513 5b4c 4280      		ldd r4,Z+2
 13514 5b4e FC01      		movw r30,r24
 13515 5b50 5380      		ldd r5,Z+3
 13516 5b52 FC01      		movw r30,r24
 13517 5b54 6480      		ldd r6,Z+4
 13518 5b56 FC01      		movw r30,r24
 13519 5b58 7580      		ldd r7,Z+5
 13520 5b5a FC01      		movw r30,r24
 13521 5b5c 8680      		ldd r8,Z+6
 13522 5b5e FC01      		movw r30,r24
 13523 5b60 9780      		ldd r9,Z+7
 13524 5b62 2A2D      		mov r18,r10
 13525 5b64 3B2D      		mov r19,r11
 13526 5b66 4C2D      		mov r20,r12
 13527 5b68 5D2D      		mov r21,r13
 13528 5b6a 6E2D      		mov r22,r14
 13529 5b6c 7F2D      		mov r23,r15
 13530 5b6e 802F      		mov r24,r16
 13531 5b70 912F      		mov r25,r17
 13532 5b72 A22C      		mov r10,r2
 13533 5b74 B32C      		mov r11,r3
 13534 5b76 C42C      		mov r12,r4
 13535 5b78 D52C      		mov r13,r5
 13536 5b7a E62C      		mov r14,r6
 13537 5b7c F72C      		mov r15,r7
 13538 5b7e 082D      		mov r16,r8
 13539 5b80 192D      		mov r17,r9
 13540 5b82 0E94 0000 		call __adddi3
 13541 5b86 A22E      		mov r10,r18
 13542 5b88 B32E      		mov r11,r19
 13543 5b8a C42E      		mov r12,r20
 13544 5b8c D52E      		mov r13,r21
 13545 5b8e E62E      		mov r14,r22
 13546 5b90 F72E      		mov r15,r23
 13547 5b92 082F      		mov r16,r24
 13548 5b94 192F      		mov r17,r25
 13549 5b96 898D      		ldd r24,Y+25
 13550 5b98 9A8D      		ldd r25,Y+26
 13551 5b9a 885C      		subi r24,-56
 13552 5b9c 9D4F      		sbci r25,-3
 13553 5b9e FC01      		movw r30,r24
 13554 5ba0 A082      		st Z,r10
 13555 5ba2 FC01      		movw r30,r24
 13556 5ba4 B182      		std Z+1,r11
 13557 5ba6 FC01      		movw r30,r24
 13558 5ba8 C282      		std Z+2,r12
 13559 5baa FC01      		movw r30,r24
 13560 5bac D382      		std Z+3,r13
 13561 5bae FC01      		movw r30,r24
 13562 5bb0 E482      		std Z+4,r14
 13563 5bb2 FC01      		movw r30,r24
 13564 5bb4 F582      		std Z+5,r15
 13565 5bb6 FC01      		movw r30,r24
 13566 5bb8 0683      		std Z+6,r16
 13567 5bba FC01      		movw r30,r24
 13568 5bbc 1783      		std Z+7,r17
1690:lp_solve_5.5/lp_simplex.c ****   lp->current_iter  = 0;
 13569               		.loc 2 1690 0
 13570 5bbe 898D      		ldd r24,Y+25
 13571 5bc0 9A8D      		ldd r25,Y+26
 13572 5bc2 805D      		subi r24,-48
 13573 5bc4 9D4F      		sbci r25,-3
 13574 5bc6 FC01      		movw r30,r24
 13575 5bc8 1082      		st Z,__zero_reg__
 13576 5bca FC01      		movw r30,r24
 13577 5bcc 1182      		std Z+1,__zero_reg__
 13578 5bce FC01      		movw r30,r24
 13579 5bd0 1282      		std Z+2,__zero_reg__
 13580 5bd2 FC01      		movw r30,r24
 13581 5bd4 1382      		std Z+3,__zero_reg__
 13582 5bd6 FC01      		movw r30,r24
 13583 5bd8 1482      		std Z+4,__zero_reg__
 13584 5bda FC01      		movw r30,r24
 13585 5bdc 1582      		std Z+5,__zero_reg__
 13586 5bde FC01      		movw r30,r24
 13587 5be0 1682      		std Z+6,__zero_reg__
 13588 5be2 FC01      		movw r30,r24
 13589 5be4 1782      		std Z+7,__zero_reg__
1691:lp_solve_5.5/lp_simplex.c ****   lp->total_bswap  += lp->current_bswap;
 13590               		.loc 2 1691 0
 13591 5be6 898D      		ldd r24,Y+25
 13592 5be8 9A8D      		ldd r25,Y+26
 13593 5bea 885B      		subi r24,-72
 13594 5bec 9D4F      		sbci r25,-3
 13595 5bee FC01      		movw r30,r24
 13596 5bf0 A080      		ld r10,Z
 13597 5bf2 FC01      		movw r30,r24
 13598 5bf4 B180      		ldd r11,Z+1
 13599 5bf6 FC01      		movw r30,r24
 13600 5bf8 C280      		ldd r12,Z+2
 13601 5bfa FC01      		movw r30,r24
 13602 5bfc D380      		ldd r13,Z+3
 13603 5bfe FC01      		movw r30,r24
 13604 5c00 E480      		ldd r14,Z+4
 13605 5c02 FC01      		movw r30,r24
 13606 5c04 F580      		ldd r15,Z+5
 13607 5c06 FC01      		movw r30,r24
 13608 5c08 0681      		ldd r16,Z+6
 13609 5c0a FC01      		movw r30,r24
 13610 5c0c 1781      		ldd r17,Z+7
 13611 5c0e 898D      		ldd r24,Y+25
 13612 5c10 9A8D      		ldd r25,Y+26
 13613 5c12 805C      		subi r24,-64
 13614 5c14 9D4F      		sbci r25,-3
 13615 5c16 FC01      		movw r30,r24
 13616 5c18 2080      		ld r2,Z
 13617 5c1a FC01      		movw r30,r24
 13618 5c1c 3180      		ldd r3,Z+1
 13619 5c1e FC01      		movw r30,r24
 13620 5c20 4280      		ldd r4,Z+2
 13621 5c22 FC01      		movw r30,r24
 13622 5c24 5380      		ldd r5,Z+3
 13623 5c26 FC01      		movw r30,r24
 13624 5c28 6480      		ldd r6,Z+4
 13625 5c2a FC01      		movw r30,r24
 13626 5c2c 7580      		ldd r7,Z+5
 13627 5c2e FC01      		movw r30,r24
 13628 5c30 8680      		ldd r8,Z+6
 13629 5c32 FC01      		movw r30,r24
 13630 5c34 9780      		ldd r9,Z+7
 13631 5c36 2A2D      		mov r18,r10
 13632 5c38 3B2D      		mov r19,r11
 13633 5c3a 4C2D      		mov r20,r12
 13634 5c3c 5D2D      		mov r21,r13
 13635 5c3e 6E2D      		mov r22,r14
 13636 5c40 7F2D      		mov r23,r15
 13637 5c42 802F      		mov r24,r16
 13638 5c44 912F      		mov r25,r17
 13639 5c46 A22C      		mov r10,r2
 13640 5c48 B32C      		mov r11,r3
 13641 5c4a C42C      		mov r12,r4
 13642 5c4c D52C      		mov r13,r5
 13643 5c4e E62C      		mov r14,r6
 13644 5c50 F72C      		mov r15,r7
 13645 5c52 082D      		mov r16,r8
 13646 5c54 192D      		mov r17,r9
 13647 5c56 0E94 0000 		call __adddi3
 13648 5c5a A22E      		mov r10,r18
 13649 5c5c B32E      		mov r11,r19
 13650 5c5e C42E      		mov r12,r20
 13651 5c60 D52E      		mov r13,r21
 13652 5c62 E62E      		mov r14,r22
 13653 5c64 F72E      		mov r15,r23
 13654 5c66 082F      		mov r16,r24
 13655 5c68 192F      		mov r17,r25
 13656 5c6a 898D      		ldd r24,Y+25
 13657 5c6c 9A8D      		ldd r25,Y+26
 13658 5c6e 885B      		subi r24,-72
 13659 5c70 9D4F      		sbci r25,-3
 13660 5c72 FC01      		movw r30,r24
 13661 5c74 A082      		st Z,r10
 13662 5c76 FC01      		movw r30,r24
 13663 5c78 B182      		std Z+1,r11
 13664 5c7a FC01      		movw r30,r24
 13665 5c7c C282      		std Z+2,r12
 13666 5c7e FC01      		movw r30,r24
 13667 5c80 D382      		std Z+3,r13
 13668 5c82 FC01      		movw r30,r24
 13669 5c84 E482      		std Z+4,r14
 13670 5c86 FC01      		movw r30,r24
 13671 5c88 F582      		std Z+5,r15
 13672 5c8a FC01      		movw r30,r24
 13673 5c8c 0683      		std Z+6,r16
 13674 5c8e FC01      		movw r30,r24
 13675 5c90 1783      		std Z+7,r17
1692:lp_solve_5.5/lp_simplex.c ****   lp->current_bswap = 0;
 13676               		.loc 2 1692 0
 13677 5c92 898D      		ldd r24,Y+25
 13678 5c94 9A8D      		ldd r25,Y+26
 13679 5c96 805C      		subi r24,-64
 13680 5c98 9D4F      		sbci r25,-3
 13681 5c9a FC01      		movw r30,r24
 13682 5c9c 1082      		st Z,__zero_reg__
 13683 5c9e FC01      		movw r30,r24
 13684 5ca0 1182      		std Z+1,__zero_reg__
 13685 5ca2 FC01      		movw r30,r24
 13686 5ca4 1282      		std Z+2,__zero_reg__
 13687 5ca6 FC01      		movw r30,r24
 13688 5ca8 1382      		std Z+3,__zero_reg__
 13689 5caa FC01      		movw r30,r24
 13690 5cac 1482      		std Z+4,__zero_reg__
 13691 5cae FC01      		movw r30,r24
 13692 5cb0 1582      		std Z+5,__zero_reg__
 13693 5cb2 FC01      		movw r30,r24
 13694 5cb4 1682      		std Z+6,__zero_reg__
 13695 5cb6 FC01      		movw r30,r24
 13696 5cb8 1782      		std Z+7,__zero_reg__
1693:lp_solve_5.5/lp_simplex.c ****   FREE(infeasibles);
 13697               		.loc 2 1693 0
 13698 5cba 8885      		ldd r24,Y+8
 13699 5cbc 9985      		ldd r25,Y+9
 13700 5cbe 892B      		or r24,r25
 13701 5cc0 01F0      		breq .L460
 13702               		.loc 2 1693 0 is_stmt 0 discriminator 1
 13703 5cc2 8885      		ldd r24,Y+8
 13704 5cc4 9985      		ldd r25,Y+9
 13705 5cc6 0E94 0000 		call free
 13706 5cca 1986      		std Y+9,__zero_reg__
 13707 5ccc 1886      		std Y+8,__zero_reg__
 13708               	.L460:
1694:lp_solve_5.5/lp_simplex.c **** 
1695:lp_solve_5.5/lp_simplex.c ****   return(lp->spx_status);
 13709               		.loc 2 1695 0 is_stmt 1
 13710 5cce 898D      		ldd r24,Y+25
 13711 5cd0 9A8D      		ldd r25,Y+26
 13712 5cd2 8A5F      		subi r24,-6
 13713 5cd4 9D4F      		sbci r25,-3
 13714 5cd6 FC01      		movw r30,r24
 13715 5cd8 8081      		ld r24,Z
 13716 5cda 9181      		ldd r25,Z+1
 13717               	/* epilogue start */
1696:lp_solve_5.5/lp_simplex.c **** } /* spx_run */
 13718               		.loc 2 1696 0
 13719 5cdc 6B96      		adiw r28,27
 13720 5cde 0FB6      		in __tmp_reg__,__SREG__
 13721 5ce0 F894      		cli
 13722 5ce2 DEBF      		out __SP_H__,r29
 13723 5ce4 0FBE      		out __SREG__,__tmp_reg__
 13724 5ce6 CDBF      		out __SP_L__,r28
 13725 5ce8 DF91      		pop r29
 13726 5cea CF91      		pop r28
 13727 5cec 1F91      		pop r17
 13728 5cee 0F91      		pop r16
 13729 5cf0 FF90      		pop r15
 13730 5cf2 EF90      		pop r14
 13731 5cf4 DF90      		pop r13
 13732 5cf6 CF90      		pop r12
 13733 5cf8 BF90      		pop r11
 13734 5cfa AF90      		pop r10
 13735 5cfc 9F90      		pop r9
 13736 5cfe 8F90      		pop r8
 13737 5d00 7F90      		pop r7
 13738 5d02 6F90      		pop r6
 13739 5d04 5F90      		pop r5
 13740 5d06 4F90      		pop r4
 13741 5d08 3F90      		pop r3
 13742 5d0a 2F90      		pop r2
 13743 5d0c 0895      		ret
 13744               		.cfi_endproc
 13745               	.LFE24:
 13747               	.global	make_lag
 13749               	make_lag:
 13750               	.LFB25:
1697:lp_solve_5.5/lp_simplex.c **** 
1698:lp_solve_5.5/lp_simplex.c **** lprec *make_lag(lprec *lpserver)
1699:lp_solve_5.5/lp_simplex.c **** {
 13751               		.loc 2 1699 0
 13752               		.cfi_startproc
 13753 5d0e CF92      		push r12
 13754               	.LCFI130:
 13755               		.cfi_def_cfa_offset 3
 13756               		.cfi_offset 12, -2
 13757 5d10 DF92      		push r13
 13758               	.LCFI131:
 13759               		.cfi_def_cfa_offset 4
 13760               		.cfi_offset 13, -3
 13761 5d12 EF92      		push r14
 13762               	.LCFI132:
 13763               		.cfi_def_cfa_offset 5
 13764               		.cfi_offset 14, -4
 13765 5d14 FF92      		push r15
 13766               	.LCFI133:
 13767               		.cfi_def_cfa_offset 6
 13768               		.cfi_offset 15, -5
 13769 5d16 0F93      		push r16
 13770               	.LCFI134:
 13771               		.cfi_def_cfa_offset 7
 13772               		.cfi_offset 16, -6
 13773 5d18 1F93      		push r17
 13774               	.LCFI135:
 13775               		.cfi_def_cfa_offset 8
 13776               		.cfi_offset 17, -7
 13777 5d1a CF93      		push r28
 13778               	.LCFI136:
 13779               		.cfi_def_cfa_offset 9
 13780               		.cfi_offset 28, -8
 13781 5d1c DF93      		push r29
 13782               	.LCFI137:
 13783               		.cfi_def_cfa_offset 10
 13784               		.cfi_offset 29, -9
 13785 5d1e CDB7      		in r28,__SP_L__
 13786 5d20 DEB7      		in r29,__SP_H__
 13787               	.LCFI138:
 13788               		.cfi_def_cfa_register 28
 13789 5d22 2997      		sbiw r28,9
 13790               	.LCFI139:
 13791               		.cfi_def_cfa_offset 19
 13792 5d24 0FB6      		in __tmp_reg__,__SREG__
 13793 5d26 F894      		cli
 13794 5d28 DEBF      		out __SP_H__,r29
 13795 5d2a 0FBE      		out __SREG__,__tmp_reg__
 13796 5d2c CDBF      		out __SP_L__,r28
 13797               	/* prologue: function */
 13798               	/* frame size = 9 */
 13799               	/* stack size = 17 */
 13800               	.L__stack_usage = 17
 13801 5d2e 9987      		std Y+9,r25
 13802 5d30 8887      		std Y+8,r24
1700:lp_solve_5.5/lp_simplex.c ****   int    i;
1701:lp_solve_5.5/lp_simplex.c ****   lprec  *hlp;
1702:lp_solve_5.5/lp_simplex.c ****   MYBOOL ret;
1703:lp_solve_5.5/lp_simplex.c ****   REAL   *duals;
1704:lp_solve_5.5/lp_simplex.c **** 
1705:lp_solve_5.5/lp_simplex.c ****   /* Create a Lagrangean solver instance */
1706:lp_solve_5.5/lp_simplex.c ****   hlp = make_lp(0, lpserver->columns);
 13803               		.loc 2 1706 0
 13804 5d32 8885      		ldd r24,Y+8
 13805 5d34 9985      		ldd r25,Y+9
 13806 5d36 8451      		subi r24,20
 13807 5d38 9E4F      		sbci r25,-2
 13808 5d3a FC01      		movw r30,r24
 13809 5d3c 8081      		ld r24,Z
 13810 5d3e 9181      		ldd r25,Z+1
 13811 5d40 BC01      		movw r22,r24
 13812 5d42 80E0      		ldi r24,0
 13813 5d44 90E0      		ldi r25,0
 13814 5d46 0E94 0000 		call make_lp
 13815 5d4a 9C83      		std Y+4,r25
 13816 5d4c 8B83      		std Y+3,r24
1707:lp_solve_5.5/lp_simplex.c **** 
1708:lp_solve_5.5/lp_simplex.c ****   if(hlp != NULL) {
 13817               		.loc 2 1708 0
 13818 5d4e 8B81      		ldd r24,Y+3
 13819 5d50 9C81      		ldd r25,Y+4
 13820 5d52 892B      		or r24,r25
 13821 5d54 01F4      		brne .+2
 13822 5d56 00C0      		rjmp .L469
1709:lp_solve_5.5/lp_simplex.c **** 
1710:lp_solve_5.5/lp_simplex.c ****     /* First create and core variable data */
1711:lp_solve_5.5/lp_simplex.c ****     set_sense(hlp, is_maxim(lpserver));
 13823               		.loc 2 1711 0
 13824 5d58 8885      		ldd r24,Y+8
 13825 5d5a 9985      		ldd r25,Y+9
 13826 5d5c 0E94 0000 		call is_maxim
 13827 5d60 282F      		mov r18,r24
 13828 5d62 8B81      		ldd r24,Y+3
 13829 5d64 9C81      		ldd r25,Y+4
 13830 5d66 622F      		mov r22,r18
 13831 5d68 0E94 0000 		call set_sense
1712:lp_solve_5.5/lp_simplex.c ****     /*hlp->lag_bound = lpserver->bb_limitOF;*/
1713:lp_solve_5.5/lp_simplex.c ****     for(i = 1; i <= lpserver->columns; i++) {
 13832               		.loc 2 1713 0
 13833 5d6c 81E0      		ldi r24,lo8(1)
 13834 5d6e 90E0      		ldi r25,0
 13835 5d70 9A83      		std Y+2,r25
 13836 5d72 8983      		std Y+1,r24
 13837 5d74 00C0      		rjmp .L470
 13838               	.L473:
1714:lp_solve_5.5/lp_simplex.c ****       set_mat(hlp, 0, i, get_mat(lpserver, 0, i));
 13839               		.loc 2 1714 0
 13840 5d76 2981      		ldd r18,Y+1
 13841 5d78 3A81      		ldd r19,Y+2
 13842 5d7a 8885      		ldd r24,Y+8
 13843 5d7c 9985      		ldd r25,Y+9
 13844 5d7e A901      		movw r20,r18
 13845 5d80 60E0      		ldi r22,0
 13846 5d82 70E0      		ldi r23,0
 13847 5d84 0E94 0000 		call get_mat
 13848 5d88 8B01      		movw r16,r22
 13849 5d8a 9C01      		movw r18,r24
 13850 5d8c 4981      		ldd r20,Y+1
 13851 5d8e 5A81      		ldd r21,Y+2
 13852 5d90 8B81      		ldd r24,Y+3
 13853 5d92 9C81      		ldd r25,Y+4
 13854 5d94 60E0      		ldi r22,0
 13855 5d96 70E0      		ldi r23,0
 13856 5d98 0E94 0000 		call set_mat
1715:lp_solve_5.5/lp_simplex.c ****       if(is_binary(lpserver, i))
 13857               		.loc 2 1715 0
 13858 5d9c 2981      		ldd r18,Y+1
 13859 5d9e 3A81      		ldd r19,Y+2
 13860 5da0 8885      		ldd r24,Y+8
 13861 5da2 9985      		ldd r25,Y+9
 13862 5da4 B901      		movw r22,r18
 13863 5da6 0E94 0000 		call is_binary
 13864 5daa 8823      		tst r24
 13865 5dac 01F0      		breq .L471
1716:lp_solve_5.5/lp_simplex.c ****         set_binary(hlp, i, TRUE);
 13866               		.loc 2 1716 0
 13867 5dae 2981      		ldd r18,Y+1
 13868 5db0 3A81      		ldd r19,Y+2
 13869 5db2 8B81      		ldd r24,Y+3
 13870 5db4 9C81      		ldd r25,Y+4
 13871 5db6 41E0      		ldi r20,lo8(1)
 13872 5db8 B901      		movw r22,r18
 13873 5dba 0E94 0000 		call set_binary
 13874 5dbe 00C0      		rjmp .L472
 13875               	.L471:
1717:lp_solve_5.5/lp_simplex.c ****       else {
1718:lp_solve_5.5/lp_simplex.c ****         set_int(hlp, i, is_int(lpserver, i));
 13876               		.loc 2 1718 0
 13877 5dc0 2981      		ldd r18,Y+1
 13878 5dc2 3A81      		ldd r19,Y+2
 13879 5dc4 8885      		ldd r24,Y+8
 13880 5dc6 9985      		ldd r25,Y+9
 13881 5dc8 B901      		movw r22,r18
 13882 5dca 0E94 0000 		call is_int
 13883 5dce 482F      		mov r20,r24
 13884 5dd0 2981      		ldd r18,Y+1
 13885 5dd2 3A81      		ldd r19,Y+2
 13886 5dd4 8B81      		ldd r24,Y+3
 13887 5dd6 9C81      		ldd r25,Y+4
 13888 5dd8 B901      		movw r22,r18
 13889 5dda 0E94 0000 		call set_int
1719:lp_solve_5.5/lp_simplex.c ****         set_bounds(hlp, i, get_lowbo(lpserver, i), get_upbo(lpserver, i));
 13890               		.loc 2 1719 0
 13891 5dde 2981      		ldd r18,Y+1
 13892 5de0 3A81      		ldd r19,Y+2
 13893 5de2 8885      		ldd r24,Y+8
 13894 5de4 9985      		ldd r25,Y+9
 13895 5de6 B901      		movw r22,r18
 13896 5de8 0E94 0000 		call get_upbo
 13897 5dec 6B01      		movw r12,r22
 13898 5dee 7C01      		movw r14,r24
 13899 5df0 2981      		ldd r18,Y+1
 13900 5df2 3A81      		ldd r19,Y+2
 13901 5df4 8885      		ldd r24,Y+8
 13902 5df6 9985      		ldd r25,Y+9
 13903 5df8 B901      		movw r22,r18
 13904 5dfa 0E94 0000 		call get_lowbo
 13905 5dfe 9B01      		movw r18,r22
 13906 5e00 AC01      		movw r20,r24
 13907 5e02 6981      		ldd r22,Y+1
 13908 5e04 7A81      		ldd r23,Y+2
 13909 5e06 8B81      		ldd r24,Y+3
 13910 5e08 9C81      		ldd r25,Y+4
 13911 5e0a 8701      		movw r16,r14
 13912 5e0c 7601      		movw r14,r12
 13913 5e0e 0E94 0000 		call set_bounds
 13914               	.L472:
1713:lp_solve_5.5/lp_simplex.c ****       set_mat(hlp, 0, i, get_mat(lpserver, 0, i));
 13915               		.loc 2 1713 0 discriminator 2
 13916 5e12 8981      		ldd r24,Y+1
 13917 5e14 9A81      		ldd r25,Y+2
 13918 5e16 0196      		adiw r24,1
 13919 5e18 9A83      		std Y+2,r25
 13920 5e1a 8983      		std Y+1,r24
 13921               	.L470:
1713:lp_solve_5.5/lp_simplex.c ****       set_mat(hlp, 0, i, get_mat(lpserver, 0, i));
 13922               		.loc 2 1713 0 is_stmt 0 discriminator 1
 13923 5e1c 8885      		ldd r24,Y+8
 13924 5e1e 9985      		ldd r25,Y+9
 13925 5e20 8451      		subi r24,20
 13926 5e22 9E4F      		sbci r25,-2
 13927 5e24 FC01      		movw r30,r24
 13928 5e26 2081      		ld r18,Z
 13929 5e28 3181      		ldd r19,Z+1
 13930 5e2a 8981      		ldd r24,Y+1
 13931 5e2c 9A81      		ldd r25,Y+2
 13932 5e2e 2817      		cp r18,r24
 13933 5e30 3907      		cpc r19,r25
 13934 5e32 04F0      		brlt .+2
 13935 5e34 00C0      		rjmp .L473
1720:lp_solve_5.5/lp_simplex.c ****       }
1721:lp_solve_5.5/lp_simplex.c ****     }
1722:lp_solve_5.5/lp_simplex.c ****     /* Then fill data for the Lagrangean constraints */
1723:lp_solve_5.5/lp_simplex.c ****     hlp->matL = lpserver->matA;
 13936               		.loc 2 1723 0 is_stmt 1
 13937 5e36 8885      		ldd r24,Y+8
 13938 5e38 9985      		ldd r25,Y+9
 13939 5e3a 8A54      		subi r24,74
 13940 5e3c 9D4F      		sbci r25,-3
 13941 5e3e FC01      		movw r30,r24
 13942 5e40 2081      		ld r18,Z
 13943 5e42 3181      		ldd r19,Z+1
 13944 5e44 8B81      		ldd r24,Y+3
 13945 5e46 9C81      		ldd r25,Y+4
 13946 5e48 8650      		subi r24,6
 13947 5e4a 9D4F      		sbci r25,-3
 13948 5e4c FC01      		movw r30,r24
 13949 5e4e 3183      		std Z+1,r19
 13950 5e50 2083      		st Z,r18
1724:lp_solve_5.5/lp_simplex.c ****     inc_lag_space(hlp, lpserver->rows, TRUE);
 13951               		.loc 2 1724 0
 13952 5e52 8885      		ldd r24,Y+8
 13953 5e54 9985      		ldd r25,Y+9
 13954 5e56 8651      		subi r24,22
 13955 5e58 9E4F      		sbci r25,-2
 13956 5e5a FC01      		movw r30,r24
 13957 5e5c 2081      		ld r18,Z
 13958 5e5e 3181      		ldd r19,Z+1
 13959 5e60 8B81      		ldd r24,Y+3
 13960 5e62 9C81      		ldd r25,Y+4
 13961 5e64 41E0      		ldi r20,lo8(1)
 13962 5e66 B901      		movw r22,r18
 13963 5e68 0E94 0000 		call inc_lag_space
1725:lp_solve_5.5/lp_simplex.c ****     ret = get_ptr_sensitivity_rhs(hlp, &duals, NULL, NULL);
 13964               		.loc 2 1725 0
 13965 5e6c BE01      		movw r22,r28
 13966 5e6e 6A5F      		subi r22,-6
 13967 5e70 7F4F      		sbci r23,-1
 13968 5e72 8B81      		ldd r24,Y+3
 13969 5e74 9C81      		ldd r25,Y+4
 13970 5e76 20E0      		ldi r18,0
 13971 5e78 30E0      		ldi r19,0
 13972 5e7a 40E0      		ldi r20,0
 13973 5e7c 50E0      		ldi r21,0
 13974 5e7e 0E94 0000 		call get_ptr_sensitivity_rhs
 13975 5e82 8D83      		std Y+5,r24
1726:lp_solve_5.5/lp_simplex.c ****     for(i = 1; i <= lpserver->rows; i++) {
 13976               		.loc 2 1726 0
 13977 5e84 81E0      		ldi r24,lo8(1)
 13978 5e86 90E0      		ldi r25,0
 13979 5e88 9A83      		std Y+2,r25
 13980 5e8a 8983      		std Y+1,r24
 13981 5e8c 00C0      		rjmp .L474
 13982               	.L477:
1727:lp_solve_5.5/lp_simplex.c ****       hlp->lag_con_type[i] = get_constr_type(lpserver, i);
 13983               		.loc 2 1727 0
 13984 5e8e 8B81      		ldd r24,Y+3
 13985 5e90 9C81      		ldd r25,Y+4
 13986 5e92 8250      		subi r24,2
 13987 5e94 9D4F      		sbci r25,-3
 13988 5e96 FC01      		movw r30,r24
 13989 5e98 2081      		ld r18,Z
 13990 5e9a 3181      		ldd r19,Z+1
 13991 5e9c 8981      		ldd r24,Y+1
 13992 5e9e 9A81      		ldd r25,Y+2
 13993 5ea0 880F      		lsl r24
 13994 5ea2 991F      		rol r25
 13995 5ea4 8901      		movw r16,r18
 13996 5ea6 080F      		add r16,r24
 13997 5ea8 191F      		adc r17,r25
 13998 5eaa 2981      		ldd r18,Y+1
 13999 5eac 3A81      		ldd r19,Y+2
 14000 5eae 8885      		ldd r24,Y+8
 14001 5eb0 9985      		ldd r25,Y+9
 14002 5eb2 B901      		movw r22,r18
 14003 5eb4 0E94 0000 		call get_constr_type
 14004 5eb8 F801      		movw r30,r16
 14005 5eba 9183      		std Z+1,r25
 14006 5ebc 8083      		st Z,r24
1728:lp_solve_5.5/lp_simplex.c ****       hlp->lag_rhs[i] = lpserver->orig_rhs[i];
 14007               		.loc 2 1728 0
 14008 5ebe 8B81      		ldd r24,Y+3
 14009 5ec0 9C81      		ldd r25,Y+4
 14010 5ec2 8450      		subi r24,4
 14011 5ec4 9D4F      		sbci r25,-3
 14012 5ec6 FC01      		movw r30,r24
 14013 5ec8 2081      		ld r18,Z
 14014 5eca 3181      		ldd r19,Z+1
 14015 5ecc 8981      		ldd r24,Y+1
 14016 5ece 9A81      		ldd r25,Y+2
 14017 5ed0 880F      		lsl r24
 14018 5ed2 991F      		rol r25
 14019 5ed4 880F      		lsl r24
 14020 5ed6 991F      		rol r25
 14021 5ed8 280F      		add r18,r24
 14022 5eda 391F      		adc r19,r25
 14023 5edc 8885      		ldd r24,Y+8
 14024 5ede 9985      		ldd r25,Y+9
 14025 5ee0 8A55      		subi r24,90
 14026 5ee2 9D4F      		sbci r25,-3
 14027 5ee4 FC01      		movw r30,r24
 14028 5ee6 4081      		ld r20,Z
 14029 5ee8 5181      		ldd r21,Z+1
 14030 5eea 8981      		ldd r24,Y+1
 14031 5eec 9A81      		ldd r25,Y+2
 14032 5eee 880F      		lsl r24
 14033 5ef0 991F      		rol r25
 14034 5ef2 880F      		lsl r24
 14035 5ef4 991F      		rol r25
 14036 5ef6 840F      		add r24,r20
 14037 5ef8 951F      		adc r25,r21
 14038 5efa FC01      		movw r30,r24
 14039 5efc 8081      		ld r24,Z
 14040 5efe 9181      		ldd r25,Z+1
 14041 5f00 A281      		ldd r26,Z+2
 14042 5f02 B381      		ldd r27,Z+3
 14043 5f04 F901      		movw r30,r18
 14044 5f06 8083      		st Z,r24
 14045 5f08 9183      		std Z+1,r25
 14046 5f0a A283      		std Z+2,r26
 14047 5f0c B383      		std Z+3,r27
1729:lp_solve_5.5/lp_simplex.c ****       hlp->lambda[i] = (ret) ? duals[i - 1] : 0.0;
 14048               		.loc 2 1729 0
 14049 5f0e 8B81      		ldd r24,Y+3
 14050 5f10 9C81      		ldd r25,Y+4
 14051 5f12 9D5F      		subi r25,-3
 14052 5f14 FC01      		movw r30,r24
 14053 5f16 2081      		ld r18,Z
 14054 5f18 3181      		ldd r19,Z+1
 14055 5f1a 8981      		ldd r24,Y+1
 14056 5f1c 9A81      		ldd r25,Y+2
 14057 5f1e 880F      		lsl r24
 14058 5f20 991F      		rol r25
 14059 5f22 880F      		lsl r24
 14060 5f24 991F      		rol r25
 14061 5f26 280F      		add r18,r24
 14062 5f28 391F      		adc r19,r25
 14063 5f2a 8D81      		ldd r24,Y+5
 14064 5f2c 8823      		tst r24
 14065 5f2e 01F0      		breq .L475
 14066               		.loc 2 1729 0 is_stmt 0 discriminator 1
 14067 5f30 4E81      		ldd r20,Y+6
 14068 5f32 5F81      		ldd r21,Y+7
 14069 5f34 8981      		ldd r24,Y+1
 14070 5f36 9A81      		ldd r25,Y+2
 14071 5f38 8150      		subi r24,1
 14072 5f3a 904C      		sbci r25,-64
 14073 5f3c 880F      		lsl r24
 14074 5f3e 991F      		rol r25
 14075 5f40 880F      		lsl r24
 14076 5f42 991F      		rol r25
 14077 5f44 840F      		add r24,r20
 14078 5f46 951F      		adc r25,r21
 14079 5f48 FC01      		movw r30,r24
 14080 5f4a 8081      		ld r24,Z
 14081 5f4c 9181      		ldd r25,Z+1
 14082 5f4e A281      		ldd r26,Z+2
 14083 5f50 B381      		ldd r27,Z+3
 14084 5f52 00C0      		rjmp .L476
 14085               	.L475:
 14086               		.loc 2 1729 0 discriminator 2
 14087 5f54 80E0      		ldi r24,0
 14088 5f56 90E0      		ldi r25,0
 14089 5f58 DC01      		movw r26,r24
 14090               	.L476:
 14091               		.loc 2 1729 0 discriminator 4
 14092 5f5a F901      		movw r30,r18
 14093 5f5c 8083      		st Z,r24
 14094 5f5e 9183      		std Z+1,r25
 14095 5f60 A283      		std Z+2,r26
 14096 5f62 B383      		std Z+3,r27
1726:lp_solve_5.5/lp_simplex.c ****       hlp->lag_con_type[i] = get_constr_type(lpserver, i);
 14097               		.loc 2 1726 0 is_stmt 1 discriminator 4
 14098 5f64 8981      		ldd r24,Y+1
 14099 5f66 9A81      		ldd r25,Y+2
 14100 5f68 0196      		adiw r24,1
 14101 5f6a 9A83      		std Y+2,r25
 14102 5f6c 8983      		std Y+1,r24
 14103               	.L474:
1726:lp_solve_5.5/lp_simplex.c ****       hlp->lag_con_type[i] = get_constr_type(lpserver, i);
 14104               		.loc 2 1726 0 is_stmt 0 discriminator 2
 14105 5f6e 8885      		ldd r24,Y+8
 14106 5f70 9985      		ldd r25,Y+9
 14107 5f72 8651      		subi r24,22
 14108 5f74 9E4F      		sbci r25,-2
 14109 5f76 FC01      		movw r30,r24
 14110 5f78 2081      		ld r18,Z
 14111 5f7a 3181      		ldd r19,Z+1
 14112 5f7c 8981      		ldd r24,Y+1
 14113 5f7e 9A81      		ldd r25,Y+2
 14114 5f80 2817      		cp r18,r24
 14115 5f82 3907      		cpc r19,r25
 14116 5f84 04F0      		brlt .+2
 14117 5f86 00C0      		rjmp .L477
 14118               	.L469:
1730:lp_solve_5.5/lp_simplex.c ****     }
1731:lp_solve_5.5/lp_simplex.c ****   }
1732:lp_solve_5.5/lp_simplex.c **** 
1733:lp_solve_5.5/lp_simplex.c ****   return(hlp);
 14119               		.loc 2 1733 0 is_stmt 1
 14120 5f88 8B81      		ldd r24,Y+3
 14121 5f8a 9C81      		ldd r25,Y+4
 14122               	/* epilogue start */
1734:lp_solve_5.5/lp_simplex.c **** }
 14123               		.loc 2 1734 0
 14124 5f8c 2996      		adiw r28,9
 14125 5f8e 0FB6      		in __tmp_reg__,__SREG__
 14126 5f90 F894      		cli
 14127 5f92 DEBF      		out __SP_H__,r29
 14128 5f94 0FBE      		out __SREG__,__tmp_reg__
 14129 5f96 CDBF      		out __SP_L__,r28
 14130 5f98 DF91      		pop r29
 14131 5f9a CF91      		pop r28
 14132 5f9c 1F91      		pop r17
 14133 5f9e 0F91      		pop r16
 14134 5fa0 FF90      		pop r15
 14135 5fa2 EF90      		pop r14
 14136 5fa4 DF90      		pop r13
 14137 5fa6 CF90      		pop r12
 14138 5fa8 0895      		ret
 14139               		.cfi_endproc
 14140               	.LFE25:
 14142               	.global	heuristics
 14144               	heuristics:
 14145               	.LFB26:
1735:lp_solve_5.5/lp_simplex.c **** 
1736:lp_solve_5.5/lp_simplex.c **** STATIC int heuristics(lprec *lp, int mode)
1737:lp_solve_5.5/lp_simplex.c **** /* Initialize / bound a MIP problem */
1738:lp_solve_5.5/lp_simplex.c **** {
 14146               		.loc 2 1738 0
 14147               		.cfi_startproc
 14148 5faa CF93      		push r28
 14149               	.LCFI140:
 14150               		.cfi_def_cfa_offset 3
 14151               		.cfi_offset 28, -2
 14152 5fac DF93      		push r29
 14153               	.LCFI141:
 14154               		.cfi_def_cfa_offset 4
 14155               		.cfi_offset 29, -3
 14156 5fae 00D0      		rcall .
 14157 5fb0 00D0      		rcall .
 14158 5fb2 00D0      		rcall .
 14159               	.LCFI142:
 14160               		.cfi_def_cfa_offset 10
 14161 5fb4 CDB7      		in r28,__SP_L__
 14162 5fb6 DEB7      		in r29,__SP_H__
 14163               	.LCFI143:
 14164               		.cfi_def_cfa_register 28
 14165               	/* prologue: function */
 14166               	/* frame size = 6 */
 14167               	/* stack size = 8 */
 14168               	.L__stack_usage = 8
 14169 5fb8 9C83      		std Y+4,r25
 14170 5fba 8B83      		std Y+3,r24
 14171 5fbc 7E83      		std Y+6,r23
 14172 5fbe 6D83      		std Y+5,r22
1739:lp_solve_5.5/lp_simplex.c ****   lprec *hlp;
1740:lp_solve_5.5/lp_simplex.c ****   int   status = PROCFAIL;
 14173               		.loc 2 1740 0
 14174 5fc0 8AE0      		ldi r24,lo8(10)
 14175 5fc2 90E0      		ldi r25,0
 14176 5fc4 9A83      		std Y+2,r25
 14177 5fc6 8983      		std Y+1,r24
1741:lp_solve_5.5/lp_simplex.c **** 
1742:lp_solve_5.5/lp_simplex.c ****   if(lp->bb_level > 1)
 14178               		.loc 2 1742 0
 14179 5fc8 8B81      		ldd r24,Y+3
 14180 5fca 9C81      		ldd r25,Y+4
 14181 5fcc 805D      		subi r24,-48
 14182 5fce 9C4F      		sbci r25,-4
 14183 5fd0 FC01      		movw r30,r24
 14184 5fd2 8081      		ld r24,Z
 14185 5fd4 9181      		ldd r25,Z+1
 14186 5fd6 0297      		sbiw r24,2
 14187 5fd8 04F0      		brlt .L480
1743:lp_solve_5.5/lp_simplex.c ****     return( status );
 14188               		.loc 2 1743 0
 14189 5fda 8981      		ldd r24,Y+1
 14190 5fdc 9A81      		ldd r25,Y+2
 14191 5fde 00C0      		rjmp .L481
 14192               	.L480:
1744:lp_solve_5.5/lp_simplex.c **** 
1745:lp_solve_5.5/lp_simplex.c ****   status = RUNNING;
 14193               		.loc 2 1745 0
 14194 5fe0 88E0      		ldi r24,lo8(8)
 14195 5fe2 90E0      		ldi r25,0
 14196 5fe4 9A83      		std Y+2,r25
 14197 5fe6 8983      		std Y+1,r24
1746:lp_solve_5.5/lp_simplex.c ****   lp->bb_limitOF = my_chsign(is_maxim(lp), -lp->infinite);
 14198               		.loc 2 1746 0
 14199 5fe8 8B81      		ldd r24,Y+3
 14200 5fea 9C81      		ldd r25,Y+4
 14201 5fec 0E94 0000 		call is_maxim
 14202 5ff0 8823      		tst r24
 14203 5ff2 01F0      		breq .L482
 14204               		.loc 2 1746 0 is_stmt 0 discriminator 1
 14205 5ff4 8B81      		ldd r24,Y+3
 14206 5ff6 9C81      		ldd r25,Y+4
 14207 5ff8 865F      		subi r24,-10
 14208 5ffa 9C4F      		sbci r25,-4
 14209 5ffc FC01      		movw r30,r24
 14210 5ffe 8081      		ld r24,Z
 14211 6000 9181      		ldd r25,Z+1
 14212 6002 A281      		ldd r26,Z+2
 14213 6004 B381      		ldd r27,Z+3
 14214 6006 20E0      		ldi r18,0
 14215 6008 30E0      		ldi r19,0
 14216 600a A901      		movw r20,r18
 14217 600c BC01      		movw r22,r24
 14218 600e CD01      		movw r24,r26
 14219 6010 0E94 0000 		call __nesf2
 14220 6014 8823      		tst r24
 14221 6016 01F0      		breq .L482
 14222               		.loc 2 1746 0 discriminator 3
 14223 6018 8B81      		ldd r24,Y+3
 14224 601a 9C81      		ldd r25,Y+4
 14225 601c 865F      		subi r24,-10
 14226 601e 9C4F      		sbci r25,-4
 14227 6020 FC01      		movw r30,r24
 14228 6022 8081      		ld r24,Z
 14229 6024 9181      		ldd r25,Z+1
 14230 6026 A281      		ldd r26,Z+2
 14231 6028 B381      		ldd r27,Z+3
 14232 602a 00C0      		rjmp .L484
 14233               	.L482:
 14234               		.loc 2 1746 0 discriminator 4
 14235 602c 8B81      		ldd r24,Y+3
 14236 602e 9C81      		ldd r25,Y+4
 14237 6030 865F      		subi r24,-10
 14238 6032 9C4F      		sbci r25,-4
 14239 6034 FC01      		movw r30,r24
 14240 6036 8081      		ld r24,Z
 14241 6038 9181      		ldd r25,Z+1
 14242 603a A281      		ldd r26,Z+2
 14243 603c B381      		ldd r27,Z+3
 14244 603e B058      		subi r27,0x80
 14245               	.L484:
 14246               		.loc 2 1746 0 discriminator 6
 14247 6040 2B81      		ldd r18,Y+3
 14248 6042 3C81      		ldd r19,Y+4
 14249 6044 2A5A      		subi r18,-86
 14250 6046 3C4F      		sbci r19,-4
 14251 6048 F901      		movw r30,r18
 14252 604a 8083      		st Z,r24
 14253 604c 9183      		std Z+1,r25
 14254 604e A283      		std Z+2,r26
 14255 6050 B383      		std Z+3,r27
1747:lp_solve_5.5/lp_simplex.c ****   if(FALSE && (lp->int_vars > 0)) {
1748:lp_solve_5.5/lp_simplex.c **** 
1749:lp_solve_5.5/lp_simplex.c ****     /* 1. Copy the problem into a new relaxed instance, extracting Lagrangean constraints */
1750:lp_solve_5.5/lp_simplex.c ****     hlp = make_lag(lp);
1751:lp_solve_5.5/lp_simplex.c **** 
1752:lp_solve_5.5/lp_simplex.c ****     /* 2. Run the Lagrangean relaxation */
1753:lp_solve_5.5/lp_simplex.c ****     status = solve(hlp);
1754:lp_solve_5.5/lp_simplex.c **** 
1755:lp_solve_5.5/lp_simplex.c ****     /* 3. Copy the key results (bound) into the original problem */
1756:lp_solve_5.5/lp_simplex.c ****     lp->bb_heuristicOF = hlp->best_solution[0];
1757:lp_solve_5.5/lp_simplex.c **** 
1758:lp_solve_5.5/lp_simplex.c ****     /* 4. Delete the helper heuristic */
1759:lp_solve_5.5/lp_simplex.c ****     hlp->matL = NULL;
1760:lp_solve_5.5/lp_simplex.c ****     delete_lp(hlp);
1761:lp_solve_5.5/lp_simplex.c ****   }
1762:lp_solve_5.5/lp_simplex.c **** 
1763:lp_solve_5.5/lp_simplex.c ****   lp->timeheuristic = timeNow();
 14256               		.loc 2 1763 0 is_stmt 1 discriminator 6
 14257 6052 0E94 0000 		call timeNow
 14258 6056 DC01      		movw r26,r24
 14259 6058 CB01      		movw r24,r22
 14260 605a 2B81      		ldd r18,Y+3
 14261 605c 3C81      		ldd r19,Y+4
 14262 605e 2258      		subi r18,-126
 14263 6060 3C4F      		sbci r19,-4
 14264 6062 F901      		movw r30,r18
 14265 6064 8083      		st Z,r24
 14266 6066 9183      		std Z+1,r25
 14267 6068 A283      		std Z+2,r26
 14268 606a B383      		std Z+3,r27
1764:lp_solve_5.5/lp_simplex.c ****   return( status );
 14269               		.loc 2 1764 0 discriminator 6
 14270 606c 8981      		ldd r24,Y+1
 14271 606e 9A81      		ldd r25,Y+2
 14272               	.L481:
 14273               	/* epilogue start */
1765:lp_solve_5.5/lp_simplex.c **** }
 14274               		.loc 2 1765 0
 14275 6070 2696      		adiw r28,6
 14276 6072 0FB6      		in __tmp_reg__,__SREG__
 14277 6074 F894      		cli
 14278 6076 DEBF      		out __SP_H__,r29
 14279 6078 0FBE      		out __SREG__,__tmp_reg__
 14280 607a CDBF      		out __SP_L__,r28
 14281 607c DF91      		pop r29
 14282 607e CF91      		pop r28
 14283 6080 0895      		ret
 14284               		.cfi_endproc
 14285               	.LFE26:
 14287               		.section	.rodata
 14288               	.LC48:
 14289 088c 6C61 675F 		.string	"lag_solve: Improved feasible solution at iteration %d of %g\n"
 14289      736F 6C76 
 14289      653A 2049 
 14289      6D70 726F 
 14289      7665 6420 
 14290               	.LC49:
 14291 08c9 5A75 623A 		.string	"Zub: %10g Zlb: %10g Stepsize: %10g Phi: %10g Feas %d\n"
 14291      2025 3130 
 14291      6720 5A6C 
 14291      623A 2025 
 14291      3130 6720 
 14292               	.LC50:
 14293 08ff 2533 6420 		.string	"%3d SubGrad %10g lambda %10g\n"
 14293      5375 6247 
 14293      7261 6420 
 14293      2531 3067 
 14293      206C 616D 
 14294               	.LC51:
 14295 091d 6C61 675F 		.string	"lag_solve: Unbounded solution encountered with this OF:\n"
 14295      736F 6C76 
 14295      653A 2055 
 14295      6E62 6F75 
 14295      6E64 6564 
 14296               	.LC52:
 14297 0956 2531 382E 		.string	"%18.12g "
 14297      3132 6720 
 14297      00
 14298               	.LC53:
 14299 095f 6C61 675F 		.string	"lag_solve: Simplex status code %d, same basis %s\n"
 14299      736F 6C76 
 14299      653A 2053 
 14299      696D 706C 
 14299      6578 2073 
 14300               	.LC54:
 14301 0991 0A4C 6167 		.string	"\nLagrangean convergence achieved in %d iterations\n"
 14301      7261 6E67 
 14301      6561 6E20 
 14301      636F 6E76 
 14301      6572 6765 
 14302               	.LC55:
 14303 09c4 0A55 6E73 		.string	"\nUnsatisfactory convergence achieved over %d Lagrangean iterations.\n"
 14303      6174 6973 
 14303      6661 6374 
 14303      6F72 7920 
 14303      636F 6E76 
 14304               	.LC56:
 14305 0a09 5468 6520 		.string	"The best feasible Lagrangean objective function value was %g\n"
 14305      6265 7374 
 14305      2066 6561 
 14305      7369 626C 
 14305      6520 4C61 
 14306               		.text
 14307               	.global	lag_solve
 14309               	lag_solve:
 14310               	.LFB27:
1766:lp_solve_5.5/lp_simplex.c **** 
1767:lp_solve_5.5/lp_simplex.c **** STATIC int lag_solve(lprec *lp, REAL start_bound, int num_iter)
1768:lp_solve_5.5/lp_simplex.c **** {
 14311               		.loc 2 1768 0
 14312               		.cfi_startproc
 14313 6082 AF92      		push r10
 14314               	.LCFI144:
 14315               		.cfi_def_cfa_offset 3
 14316               		.cfi_offset 10, -2
 14317 6084 BF92      		push r11
 14318               	.LCFI145:
 14319               		.cfi_def_cfa_offset 4
 14320               		.cfi_offset 11, -3
 14321 6086 CF92      		push r12
 14322               	.LCFI146:
 14323               		.cfi_def_cfa_offset 5
 14324               		.cfi_offset 12, -4
 14325 6088 DF92      		push r13
 14326               	.LCFI147:
 14327               		.cfi_def_cfa_offset 6
 14328               		.cfi_offset 13, -5
 14329 608a EF92      		push r14
 14330               	.LCFI148:
 14331               		.cfi_def_cfa_offset 7
 14332               		.cfi_offset 14, -6
 14333 608c FF92      		push r15
 14334               	.LCFI149:
 14335               		.cfi_def_cfa_offset 8
 14336               		.cfi_offset 15, -7
 14337 608e 0F93      		push r16
 14338               	.LCFI150:
 14339               		.cfi_def_cfa_offset 9
 14340               		.cfi_offset 16, -8
 14341 6090 1F93      		push r17
 14342               	.LCFI151:
 14343               		.cfi_def_cfa_offset 10
 14344               		.cfi_offset 17, -9
 14345 6092 CF93      		push r28
 14346               	.LCFI152:
 14347               		.cfi_def_cfa_offset 11
 14348               		.cfi_offset 28, -10
 14349 6094 DF93      		push r29
 14350               	.LCFI153:
 14351               		.cfi_def_cfa_offset 12
 14352               		.cfi_offset 29, -11
 14353 6096 CDB7      		in r28,__SP_L__
 14354 6098 DEB7      		in r29,__SP_H__
 14355               	.LCFI154:
 14356               		.cfi_def_cfa_register 28
 14357 609a C854      		subi r28,72
 14358 609c D109      		sbc r29,__zero_reg__
 14359               	.LCFI155:
 14360               		.cfi_def_cfa_offset 84
 14361 609e 0FB6      		in __tmp_reg__,__SREG__
 14362 60a0 F894      		cli
 14363 60a2 DEBF      		out __SP_H__,r29
 14364 60a4 0FBE      		out __SREG__,__tmp_reg__
 14365 60a6 CDBF      		out __SP_L__,r28
 14366               	/* prologue: function */
 14367               	/* frame size = 72 */
 14368               	/* stack size = 82 */
 14369               	.L__stack_usage = 82
 14370 60a8 FE01      		movw r30,r28
 14371 60aa FF96      		adiw r30,63
 14372 60ac 9183      		std Z+1,r25
 14373 60ae 8083      		st Z,r24
 14374 60b0 CE01      		movw r24,r28
 14375 60b2 8F5B      		subi r24,-65
 14376 60b4 9F4F      		sbci r25,-1
 14377 60b6 FC01      		movw r30,r24
 14378 60b8 4083      		st Z,r20
 14379 60ba 5183      		std Z+1,r21
 14380 60bc 6283      		std Z+2,r22
 14381 60be 7383      		std Z+3,r23
 14382 60c0 CE01      		movw r24,r28
 14383 60c2 8B5B      		subi r24,-69
 14384 60c4 9F4F      		sbci r25,-1
 14385 60c6 FC01      		movw r30,r24
 14386 60c8 3183      		std Z+1,r19
 14387 60ca 2083      		st Z,r18
1769:lp_solve_5.5/lp_simplex.c ****   int    i, j, citer, nochange, oldpresolve;
1770:lp_solve_5.5/lp_simplex.c ****   MYBOOL LagFeas, AnyFeas, Converged, same_basis;
1771:lp_solve_5.5/lp_simplex.c ****   REAL   *OrigObj, *ModObj, *SubGrad, *BestFeasSol;
1772:lp_solve_5.5/lp_simplex.c ****   REAL   Zub, Zlb, Znow, Zprev, Zbest, rhsmod, hold;
1773:lp_solve_5.5/lp_simplex.c ****   REAL   Phi, StepSize = 0.0, SqrsumSubGrad;
 14388               		.loc 2 1773 0
 14389 60cc 18A2      		std Y+32,__zero_reg__
 14390 60ce 19A2      		std Y+33,__zero_reg__
 14391 60d0 1AA2      		std Y+34,__zero_reg__
 14392 60d2 1BA2      		std Y+35,__zero_reg__
1774:lp_solve_5.5/lp_simplex.c **** 
1775:lp_solve_5.5/lp_simplex.c ****   /* Make sure we have something to work with */
1776:lp_solve_5.5/lp_simplex.c ****   if(lp->spx_status != OPTIMAL) {
 14393               		.loc 2 1776 0
 14394 60d4 CE01      		movw r24,r28
 14395 60d6 CF96      		adiw r24,63
 14396 60d8 FC01      		movw r30,r24
 14397 60da 8081      		ld r24,Z
 14398 60dc 9181      		ldd r25,Z+1
 14399 60de 8A5F      		subi r24,-6
 14400 60e0 9D4F      		sbci r25,-3
 14401 60e2 FC01      		movw r30,r24
 14402 60e4 8081      		ld r24,Z
 14403 60e6 9181      		ldd r25,Z+1
 14404 60e8 892B      		or r24,r25
 14405 60ea 01F0      		breq .L487
1777:lp_solve_5.5/lp_simplex.c ****     lp->lag_status = NOTRUN;
 14406               		.loc 2 1777 0
 14407 60ec CE01      		movw r24,r28
 14408 60ee CF96      		adiw r24,63
 14409 60f0 FC01      		movw r30,r24
 14410 60f2 8081      		ld r24,Z
 14411 60f4 9181      		ldd r25,Z+1
 14412 60f6 885F      		subi r24,-8
 14413 60f8 9D4F      		sbci r25,-3
 14414 60fa 2FEF      		ldi r18,lo8(-1)
 14415 60fc 3FEF      		ldi r19,lo8(-1)
 14416 60fe FC01      		movw r30,r24
 14417 6100 3183      		std Z+1,r19
 14418 6102 2083      		st Z,r18
1778:lp_solve_5.5/lp_simplex.c ****     return( lp->lag_status );
 14419               		.loc 2 1778 0
 14420 6104 CE01      		movw r24,r28
 14421 6106 CF96      		adiw r24,63
 14422 6108 FC01      		movw r30,r24
 14423 610a 8081      		ld r24,Z
 14424 610c 9181      		ldd r25,Z+1
 14425 610e 885F      		subi r24,-8
 14426 6110 9D4F      		sbci r25,-3
 14427 6112 FC01      		movw r30,r24
 14428 6114 8081      		ld r24,Z
 14429 6116 9181      		ldd r25,Z+1
 14430 6118 0C94 0000 		jmp .L567
 14431               	.L487:
1779:lp_solve_5.5/lp_simplex.c ****   }
1780:lp_solve_5.5/lp_simplex.c **** 
1781:lp_solve_5.5/lp_simplex.c ****   /* Allocate iteration arrays */
1782:lp_solve_5.5/lp_simplex.c ****   if(!allocREAL(lp, &OrigObj, lp->columns + 1, FALSE) ||
 14432               		.loc 2 1782 0
 14433 611c CE01      		movw r24,r28
 14434 611e CF96      		adiw r24,63
 14435 6120 FC01      		movw r30,r24
 14436 6122 8081      		ld r24,Z
 14437 6124 9181      		ldd r25,Z+1
 14438 6126 8451      		subi r24,20
 14439 6128 9E4F      		sbci r25,-2
 14440 612a FC01      		movw r30,r24
 14441 612c 8081      		ld r24,Z
 14442 612e 9181      		ldd r25,Z+1
 14443 6130 AC01      		movw r20,r24
 14444 6132 4F5F      		subi r20,-1
 14445 6134 5F4F      		sbci r21,-1
 14446 6136 BE01      		movw r22,r28
 14447 6138 695C      		subi r22,-55
 14448 613a 7F4F      		sbci r23,-1
 14449 613c CE01      		movw r24,r28
 14450 613e CF96      		adiw r24,63
 14451 6140 FC01      		movw r30,r24
 14452 6142 8081      		ld r24,Z
 14453 6144 9181      		ldd r25,Z+1
 14454 6146 20E0      		ldi r18,0
 14455 6148 0E94 0000 		call allocREAL
 14456 614c 8823      		tst r24
 14457 614e 01F4      		brne .+2
 14458 6150 00C0      		rjmp .L489
1783:lp_solve_5.5/lp_simplex.c ****      !allocREAL(lp, &ModObj,  lp->columns + 1, TRUE) ||
 14459               		.loc 2 1783 0 discriminator 1
 14460 6152 CE01      		movw r24,r28
 14461 6154 CF96      		adiw r24,63
 14462 6156 FC01      		movw r30,r24
 14463 6158 8081      		ld r24,Z
 14464 615a 9181      		ldd r25,Z+1
 14465 615c 8451      		subi r24,20
 14466 615e 9E4F      		sbci r25,-2
 14467 6160 FC01      		movw r30,r24
 14468 6162 8081      		ld r24,Z
 14469 6164 9181      		ldd r25,Z+1
 14470 6166 AC01      		movw r20,r24
 14471 6168 4F5F      		subi r20,-1
 14472 616a 5F4F      		sbci r21,-1
 14473 616c BE01      		movw r22,r28
 14474 616e 675C      		subi r22,-57
 14475 6170 7F4F      		sbci r23,-1
 14476 6172 CE01      		movw r24,r28
 14477 6174 CF96      		adiw r24,63
 14478 6176 FC01      		movw r30,r24
 14479 6178 8081      		ld r24,Z
 14480 617a 9181      		ldd r25,Z+1
 14481 617c 21E0      		ldi r18,lo8(1)
 14482 617e 0E94 0000 		call allocREAL
1782:lp_solve_5.5/lp_simplex.c ****      !allocREAL(lp, &ModObj,  lp->columns + 1, TRUE) ||
 14483               		.loc 2 1782 0 discriminator 1
 14484 6182 8823      		tst r24
 14485 6184 01F0      		breq .L489
1784:lp_solve_5.5/lp_simplex.c ****      !allocREAL(lp, &SubGrad, get_Lrows(lp) + 1, TRUE) ||
 14486               		.loc 2 1784 0
 14487 6186 CE01      		movw r24,r28
 14488 6188 CF96      		adiw r24,63
 14489 618a FC01      		movw r30,r24
 14490 618c 8081      		ld r24,Z
 14491 618e 9181      		ldd r25,Z+1
 14492 6190 0E94 0000 		call get_Lrows
 14493 6194 AC01      		movw r20,r24
 14494 6196 4F5F      		subi r20,-1
 14495 6198 5F4F      		sbci r21,-1
 14496 619a BE01      		movw r22,r28
 14497 619c 655C      		subi r22,-59
 14498 619e 7F4F      		sbci r23,-1
 14499 61a0 CE01      		movw r24,r28
 14500 61a2 CF96      		adiw r24,63
 14501 61a4 FC01      		movw r30,r24
 14502 61a6 8081      		ld r24,Z
 14503 61a8 9181      		ldd r25,Z+1
 14504 61aa 21E0      		ldi r18,lo8(1)
 14505 61ac 0E94 0000 		call allocREAL
1783:lp_solve_5.5/lp_simplex.c ****      !allocREAL(lp, &ModObj,  lp->columns + 1, TRUE) ||
 14506               		.loc 2 1783 0
 14507 61b0 8823      		tst r24
 14508 61b2 01F0      		breq .L489
1785:lp_solve_5.5/lp_simplex.c ****      !allocREAL(lp, &BestFeasSol, lp->sum + 1, TRUE)) {
 14509               		.loc 2 1785 0
 14510 61b4 CE01      		movw r24,r28
 14511 61b6 CF96      		adiw r24,63
 14512 61b8 FC01      		movw r30,r24
 14513 61ba 8081      		ld r24,Z
 14514 61bc 9181      		ldd r25,Z+1
 14515 61be 8851      		subi r24,24
 14516 61c0 9E4F      		sbci r25,-2
 14517 61c2 FC01      		movw r30,r24
 14518 61c4 8081      		ld r24,Z
 14519 61c6 9181      		ldd r25,Z+1
 14520 61c8 AC01      		movw r20,r24
 14521 61ca 4F5F      		subi r20,-1
 14522 61cc 5F4F      		sbci r21,-1
 14523 61ce BE01      		movw r22,r28
 14524 61d0 635C      		subi r22,-61
 14525 61d2 7F4F      		sbci r23,-1
 14526 61d4 CE01      		movw r24,r28
 14527 61d6 CF96      		adiw r24,63
 14528 61d8 FC01      		movw r30,r24
 14529 61da 8081      		ld r24,Z
 14530 61dc 9181      		ldd r25,Z+1
 14531 61de 21E0      		ldi r18,lo8(1)
 14532 61e0 0E94 0000 		call allocREAL
1784:lp_solve_5.5/lp_simplex.c ****      !allocREAL(lp, &SubGrad, get_Lrows(lp) + 1, TRUE) ||
 14533               		.loc 2 1784 0
 14534 61e4 8823      		tst r24
 14535 61e6 01F4      		brne .L490
 14536               	.L489:
1786:lp_solve_5.5/lp_simplex.c ****     lp->lag_status = NOMEMORY;
 14537               		.loc 2 1786 0
 14538 61e8 CE01      		movw r24,r28
 14539 61ea CF96      		adiw r24,63
 14540 61ec FC01      		movw r30,r24
 14541 61ee 8081      		ld r24,Z
 14542 61f0 9181      		ldd r25,Z+1
 14543 61f2 885F      		subi r24,-8
 14544 61f4 9D4F      		sbci r25,-3
 14545 61f6 2EEF      		ldi r18,lo8(-2)
 14546 61f8 3FEF      		ldi r19,lo8(-1)
 14547 61fa FC01      		movw r30,r24
 14548 61fc 3183      		std Z+1,r19
 14549 61fe 2083      		st Z,r18
1787:lp_solve_5.5/lp_simplex.c ****      return( lp->lag_status );
 14550               		.loc 2 1787 0
 14551 6200 CE01      		movw r24,r28
 14552 6202 CF96      		adiw r24,63
 14553 6204 FC01      		movw r30,r24
 14554 6206 8081      		ld r24,Z
 14555 6208 9181      		ldd r25,Z+1
 14556 620a 885F      		subi r24,-8
 14557 620c 9D4F      		sbci r25,-3
 14558 620e FC01      		movw r30,r24
 14559 6210 8081      		ld r24,Z
 14560 6212 9181      		ldd r25,Z+1
 14561 6214 0C94 0000 		jmp .L567
 14562               	.L490:
1788:lp_solve_5.5/lp_simplex.c ****   }
1789:lp_solve_5.5/lp_simplex.c ****   lp->lag_status = RUNNING;
 14563               		.loc 2 1789 0
 14564 6218 CE01      		movw r24,r28
 14565 621a CF96      		adiw r24,63
 14566 621c FC01      		movw r30,r24
 14567 621e 8081      		ld r24,Z
 14568 6220 9181      		ldd r25,Z+1
 14569 6222 885F      		subi r24,-8
 14570 6224 9D4F      		sbci r25,-3
 14571 6226 28E0      		ldi r18,lo8(8)
 14572 6228 30E0      		ldi r19,0
 14573 622a FC01      		movw r30,r24
 14574 622c 3183      		std Z+1,r19
 14575 622e 2083      		st Z,r18
1790:lp_solve_5.5/lp_simplex.c **** 
1791:lp_solve_5.5/lp_simplex.c ****   /* Prepare for Lagrangean iterations using results from relaxed problem */
1792:lp_solve_5.5/lp_simplex.c ****   oldpresolve = lp->do_presolve;
 14576               		.loc 2 1792 0
 14577 6230 CE01      		movw r24,r28
 14578 6232 CF96      		adiw r24,63
 14579 6234 FC01      		movw r30,r24
 14580 6236 8081      		ld r24,Z
 14581 6238 9181      		ldd r25,Z+1
 14582 623a 8C58      		subi r24,-116
 14583 623c 9D4F      		sbci r25,-3
 14584 623e FC01      		movw r30,r24
 14585 6240 8081      		ld r24,Z
 14586 6242 9181      		ldd r25,Z+1
 14587 6244 99A7      		std Y+41,r25
 14588 6246 88A7      		std Y+40,r24
1793:lp_solve_5.5/lp_simplex.c ****   lp->do_presolve = PRESOLVE_NONE;
 14589               		.loc 2 1793 0
 14590 6248 CE01      		movw r24,r28
 14591 624a CF96      		adiw r24,63
 14592 624c FC01      		movw r30,r24
 14593 624e 8081      		ld r24,Z
 14594 6250 9181      		ldd r25,Z+1
 14595 6252 8C58      		subi r24,-116
 14596 6254 9D4F      		sbci r25,-3
 14597 6256 FC01      		movw r30,r24
 14598 6258 1182      		std Z+1,__zero_reg__
 14599 625a 1082      		st Z,__zero_reg__
1794:lp_solve_5.5/lp_simplex.c ****   push_basis(lp, NULL, NULL, NULL);
 14600               		.loc 2 1794 0
 14601 625c CE01      		movw r24,r28
 14602 625e CF96      		adiw r24,63
 14603 6260 FC01      		movw r30,r24
 14604 6262 8081      		ld r24,Z
 14605 6264 9181      		ldd r25,Z+1
 14606 6266 20E0      		ldi r18,0
 14607 6268 30E0      		ldi r19,0
 14608 626a 40E0      		ldi r20,0
 14609 626c 50E0      		ldi r21,0
 14610 626e 60E0      		ldi r22,0
 14611 6270 70E0      		ldi r23,0
 14612 6272 0E94 0000 		call push_basis
1795:lp_solve_5.5/lp_simplex.c **** 
1796:lp_solve_5.5/lp_simplex.c ****   /* Initialize variables (assume minimization problem in overall structure) */
1797:lp_solve_5.5/lp_simplex.c ****   Zlb      = lp->best_solution[0];
 14613               		.loc 2 1797 0
 14614 6276 CE01      		movw r24,r28
 14615 6278 CF96      		adiw r24,63
 14616 627a FC01      		movw r30,r24
 14617 627c 8081      		ld r24,Z
 14618 627e 9181      		ldd r25,Z+1
 14619 6280 8C5E      		subi r24,-20
 14620 6282 9D4F      		sbci r25,-3
 14621 6284 FC01      		movw r30,r24
 14622 6286 8081      		ld r24,Z
 14623 6288 9181      		ldd r25,Z+1
 14624 628a FC01      		movw r30,r24
 14625 628c 8081      		ld r24,Z
 14626 628e 9181      		ldd r25,Z+1
 14627 6290 A281      		ldd r26,Z+2
 14628 6292 B381      		ldd r27,Z+3
 14629 6294 8AA7      		std Y+42,r24
 14630 6296 9BA7      		std Y+43,r25
 14631 6298 ACA7      		std Y+44,r26
 14632 629a BDA7      		std Y+45,r27
1798:lp_solve_5.5/lp_simplex.c ****   Zub      = start_bound;
 14633               		.loc 2 1798 0
 14634 629c CE01      		movw r24,r28
 14635 629e 8F5B      		subi r24,-65
 14636 62a0 9F4F      		sbci r25,-1
 14637 62a2 FC01      		movw r30,r24
 14638 62a4 8081      		ld r24,Z
 14639 62a6 9181      		ldd r25,Z+1
 14640 62a8 A281      		ldd r26,Z+2
 14641 62aa B381      		ldd r27,Z+3
 14642 62ac 8EA7      		std Y+46,r24
 14643 62ae 9FA7      		std Y+47,r25
 14644 62b0 A8AB      		std Y+48,r26
 14645 62b2 B9AB      		std Y+49,r27
1799:lp_solve_5.5/lp_simplex.c ****   Zbest    = Zub;
 14646               		.loc 2 1799 0
 14647 62b4 8EA5      		ldd r24,Y+46
 14648 62b6 9FA5      		ldd r25,Y+47
 14649 62b8 A8A9      		ldd r26,Y+48
 14650 62ba B9A9      		ldd r27,Y+49
 14651 62bc 888B      		std Y+16,r24
 14652 62be 998B      		std Y+17,r25
 14653 62c0 AA8B      		std Y+18,r26
 14654 62c2 BB8B      		std Y+19,r27
1800:lp_solve_5.5/lp_simplex.c ****   Znow     = Zlb;
 14655               		.loc 2 1800 0
 14656 62c4 8AA5      		ldd r24,Y+42
 14657 62c6 9BA5      		ldd r25,Y+43
 14658 62c8 ACA5      		ldd r26,Y+44
 14659 62ca BDA5      		ldd r27,Y+45
 14660 62cc 8AAB      		std Y+50,r24
 14661 62ce 9BAB      		std Y+51,r25
 14662 62d0 ACAB      		std Y+52,r26
 14663 62d2 BDAB      		std Y+53,r27
1801:lp_solve_5.5/lp_simplex.c ****   Zprev    = lp->infinite;
 14664               		.loc 2 1801 0
 14665 62d4 CE01      		movw r24,r28
 14666 62d6 CF96      		adiw r24,63
 14667 62d8 FC01      		movw r30,r24
 14668 62da 8081      		ld r24,Z
 14669 62dc 9181      		ldd r25,Z+1
 14670 62de 865F      		subi r24,-10
 14671 62e0 9C4F      		sbci r25,-4
 14672 62e2 FC01      		movw r30,r24
 14673 62e4 8081      		ld r24,Z
 14674 62e6 9181      		ldd r25,Z+1
 14675 62e8 A281      		ldd r26,Z+2
 14676 62ea B381      		ldd r27,Z+3
 14677 62ec 8C87      		std Y+12,r24
 14678 62ee 9D87      		std Y+13,r25
 14679 62f0 AE87      		std Y+14,r26
 14680 62f2 BF87      		std Y+15,r27
1802:lp_solve_5.5/lp_simplex.c ****   rhsmod   = 0;
 14681               		.loc 2 1802 0
 14682 62f4 1C8A      		std Y+20,__zero_reg__
 14683 62f6 1D8A      		std Y+21,__zero_reg__
 14684 62f8 1E8A      		std Y+22,__zero_reg__
 14685 62fa 1F8A      		std Y+23,__zero_reg__
1803:lp_solve_5.5/lp_simplex.c **** 
1804:lp_solve_5.5/lp_simplex.c ****   Phi      = DEF_LAGCONTRACT; /* In the range 0-2.0 to guarantee convergence */
 14686               		.loc 2 1804 0
 14687 62fc 86E6      		ldi r24,lo8(102)
 14688 62fe 96E6      		ldi r25,lo8(102)
 14689 6300 A6E6      		ldi r26,lo8(102)
 14690 6302 BFE3      		ldi r27,lo8(63)
 14691 6304 8C8F      		std Y+28,r24
 14692 6306 9D8F      		std Y+29,r25
 14693 6308 AE8F      		std Y+30,r26
 14694 630a BF8F      		std Y+31,r27
1805:lp_solve_5.5/lp_simplex.c **** /*  Phi      = 0.15; */
1806:lp_solve_5.5/lp_simplex.c ****   LagFeas  = FALSE;
 14695               		.loc 2 1806 0
 14696 630c 1986      		std Y+9,__zero_reg__
1807:lp_solve_5.5/lp_simplex.c ****   Converged= FALSE;
 14697               		.loc 2 1807 0
 14698 630e 1B86      		std Y+11,__zero_reg__
1808:lp_solve_5.5/lp_simplex.c ****   AnyFeas  = FALSE;
 14699               		.loc 2 1808 0
 14700 6310 1A86      		std Y+10,__zero_reg__
1809:lp_solve_5.5/lp_simplex.c ****   citer    = 0;
 14701               		.loc 2 1809 0
 14702 6312 1E82      		std Y+6,__zero_reg__
 14703 6314 1D82      		std Y+5,__zero_reg__
1810:lp_solve_5.5/lp_simplex.c ****   nochange = 0;
 14704               		.loc 2 1810 0
 14705 6316 1886      		std Y+8,__zero_reg__
 14706 6318 1F82      		std Y+7,__zero_reg__
1811:lp_solve_5.5/lp_simplex.c **** 
1812:lp_solve_5.5/lp_simplex.c ****   /* Initialize reference and solution vectors; don't bother about the
1813:lp_solve_5.5/lp_simplex.c ****      original OF offset since we are maintaining an offset locally. */
1814:lp_solve_5.5/lp_simplex.c **** 
1815:lp_solve_5.5/lp_simplex.c **** /* #define DirectOverrideOF */
1816:lp_solve_5.5/lp_simplex.c **** 
1817:lp_solve_5.5/lp_simplex.c ****   get_row(lp, 0, OrigObj);
 14707               		.loc 2 1817 0
 14708 631a 2FA9      		ldd r18,Y+55
 14709 631c 38AD      		ldd r19,Y+56
 14710 631e CE01      		movw r24,r28
 14711 6320 CF96      		adiw r24,63
 14712 6322 FC01      		movw r30,r24
 14713 6324 8081      		ld r24,Z
 14714 6326 9181      		ldd r25,Z+1
 14715 6328 A901      		movw r20,r18
 14716 632a 60E0      		ldi r22,0
 14717 632c 70E0      		ldi r23,0
 14718 632e 0E94 0000 		call get_row
1818:lp_solve_5.5/lp_simplex.c **** #ifdef DirectOverrideOF
1819:lp_solve_5.5/lp_simplex.c ****   set_OF_override(lp, ModObj);
1820:lp_solve_5.5/lp_simplex.c **** #endif
1821:lp_solve_5.5/lp_simplex.c ****   OrigObj[0] = get_rh(lp, 0);
 14719               		.loc 2 1821 0
 14720 6332 0FA9      		ldd r16,Y+55
 14721 6334 18AD      		ldd r17,Y+56
 14722 6336 CE01      		movw r24,r28
 14723 6338 CF96      		adiw r24,63
 14724 633a FC01      		movw r30,r24
 14725 633c 8081      		ld r24,Z
 14726 633e 9181      		ldd r25,Z+1
 14727 6340 60E0      		ldi r22,0
 14728 6342 70E0      		ldi r23,0
 14729 6344 0E94 0000 		call get_rh
 14730 6348 DC01      		movw r26,r24
 14731 634a CB01      		movw r24,r22
 14732 634c F801      		movw r30,r16
 14733 634e 8083      		st Z,r24
 14734 6350 9183      		std Z+1,r25
 14735 6352 A283      		std Z+2,r26
 14736 6354 B383      		std Z+3,r27
1822:lp_solve_5.5/lp_simplex.c ****   for(i = 1 ; i <= get_Lrows(lp); i++)
 14737               		.loc 2 1822 0
 14738 6356 81E0      		ldi r24,lo8(1)
 14739 6358 90E0      		ldi r25,0
 14740 635a 9A83      		std Y+2,r25
 14741 635c 8983      		std Y+1,r24
 14742 635e 00C0      		rjmp .L491
 14743               	.L492:
1823:lp_solve_5.5/lp_simplex.c ****     lp->lambda[i] = 0;
 14744               		.loc 2 1823 0 discriminator 3
 14745 6360 CE01      		movw r24,r28
 14746 6362 CF96      		adiw r24,63
 14747 6364 FC01      		movw r30,r24
 14748 6366 8081      		ld r24,Z
 14749 6368 9181      		ldd r25,Z+1
 14750 636a 9D5F      		subi r25,-3
 14751 636c FC01      		movw r30,r24
 14752 636e 2081      		ld r18,Z
 14753 6370 3181      		ldd r19,Z+1
 14754 6372 8981      		ldd r24,Y+1
 14755 6374 9A81      		ldd r25,Y+2
 14756 6376 880F      		lsl r24
 14757 6378 991F      		rol r25
 14758 637a 880F      		lsl r24
 14759 637c 991F      		rol r25
 14760 637e 820F      		add r24,r18
 14761 6380 931F      		adc r25,r19
 14762 6382 FC01      		movw r30,r24
 14763 6384 1082      		st Z,__zero_reg__
 14764 6386 1182      		std Z+1,__zero_reg__
 14765 6388 1282      		std Z+2,__zero_reg__
 14766 638a 1382      		std Z+3,__zero_reg__
1822:lp_solve_5.5/lp_simplex.c ****   for(i = 1 ; i <= get_Lrows(lp); i++)
 14767               		.loc 2 1822 0 discriminator 3
 14768 638c 8981      		ldd r24,Y+1
 14769 638e 9A81      		ldd r25,Y+2
 14770 6390 0196      		adiw r24,1
 14771 6392 9A83      		std Y+2,r25
 14772 6394 8983      		std Y+1,r24
 14773               	.L491:
1822:lp_solve_5.5/lp_simplex.c ****   for(i = 1 ; i <= get_Lrows(lp); i++)
 14774               		.loc 2 1822 0 is_stmt 0 discriminator 1
 14775 6396 CE01      		movw r24,r28
 14776 6398 CF96      		adiw r24,63
 14777 639a FC01      		movw r30,r24
 14778 639c 8081      		ld r24,Z
 14779 639e 9181      		ldd r25,Z+1
 14780 63a0 0E94 0000 		call get_Lrows
 14781 63a4 9C01      		movw r18,r24
 14782 63a6 8981      		ldd r24,Y+1
 14783 63a8 9A81      		ldd r25,Y+2
 14784 63aa 2817      		cp r18,r24
 14785 63ac 3907      		cpc r19,r25
 14786 63ae 04F4      		brge .L492
1824:lp_solve_5.5/lp_simplex.c **** 
1825:lp_solve_5.5/lp_simplex.c ****   /* Iterate to convergence, failure or user-specified termination */
1826:lp_solve_5.5/lp_simplex.c ****   while((lp->lag_status == RUNNING) && (citer < num_iter)) {
 14787               		.loc 2 1826 0 is_stmt 1
 14788 63b0 00C0      		rjmp .L493
 14789               	.L547:
1827:lp_solve_5.5/lp_simplex.c **** 
1828:lp_solve_5.5/lp_simplex.c ****     citer++;
 14790               		.loc 2 1828 0
 14791 63b2 8D81      		ldd r24,Y+5
 14792 63b4 9E81      		ldd r25,Y+6
 14793 63b6 0196      		adiw r24,1
 14794 63b8 9E83      		std Y+6,r25
 14795 63ba 8D83      		std Y+5,r24
1829:lp_solve_5.5/lp_simplex.c **** 
1830:lp_solve_5.5/lp_simplex.c ****     /* Compute constraint feasibility gaps and associated sum of squares,
1831:lp_solve_5.5/lp_simplex.c ****        and determine feasibility over the Lagrangean constraints;
1832:lp_solve_5.5/lp_simplex.c ****        SubGrad is the subgradient, which here is identical to the slack. */
1833:lp_solve_5.5/lp_simplex.c ****     LagFeas = TRUE;
 14796               		.loc 2 1833 0
 14797 63bc 81E0      		ldi r24,lo8(1)
 14798 63be 8987      		std Y+9,r24
1834:lp_solve_5.5/lp_simplex.c ****     Converged = TRUE;
 14799               		.loc 2 1834 0
 14800 63c0 81E0      		ldi r24,lo8(1)
 14801 63c2 8B87      		std Y+11,r24
1835:lp_solve_5.5/lp_simplex.c ****     SqrsumSubGrad = 0;
 14802               		.loc 2 1835 0
 14803 63c4 1CA2      		std Y+36,__zero_reg__
 14804 63c6 1DA2      		std Y+37,__zero_reg__
 14805 63c8 1EA2      		std Y+38,__zero_reg__
 14806 63ca 1FA2      		std Y+39,__zero_reg__
1836:lp_solve_5.5/lp_simplex.c ****     for(i = 1; i <= get_Lrows(lp); i++) {
 14807               		.loc 2 1836 0
 14808 63cc 81E0      		ldi r24,lo8(1)
 14809 63ce 90E0      		ldi r25,0
 14810 63d0 9A83      		std Y+2,r25
 14811 63d2 8983      		std Y+1,r24
 14812 63d4 00C0      		rjmp .L494
 14813               	.L504:
1837:lp_solve_5.5/lp_simplex.c ****       hold = lp->lag_rhs[i];
 14814               		.loc 2 1837 0
 14815 63d6 CE01      		movw r24,r28
 14816 63d8 CF96      		adiw r24,63
 14817 63da FC01      		movw r30,r24
 14818 63dc 8081      		ld r24,Z
 14819 63de 9181      		ldd r25,Z+1
 14820 63e0 8450      		subi r24,4
 14821 63e2 9D4F      		sbci r25,-3
 14822 63e4 FC01      		movw r30,r24
 14823 63e6 2081      		ld r18,Z
 14824 63e8 3181      		ldd r19,Z+1
 14825 63ea 8981      		ldd r24,Y+1
 14826 63ec 9A81      		ldd r25,Y+2
 14827 63ee 880F      		lsl r24
 14828 63f0 991F      		rol r25
 14829 63f2 880F      		lsl r24
 14830 63f4 991F      		rol r25
 14831 63f6 820F      		add r24,r18
 14832 63f8 931F      		adc r25,r19
 14833 63fa FC01      		movw r30,r24
 14834 63fc 8081      		ld r24,Z
 14835 63fe 9181      		ldd r25,Z+1
 14836 6400 A281      		ldd r26,Z+2
 14837 6402 B381      		ldd r27,Z+3
 14838 6404 888F      		std Y+24,r24
 14839 6406 998F      		std Y+25,r25
 14840 6408 AA8F      		std Y+26,r26
 14841 640a BB8F      		std Y+27,r27
1838:lp_solve_5.5/lp_simplex.c ****       for(j = 1; j <= lp->columns; j++)
 14842               		.loc 2 1838 0
 14843 640c 81E0      		ldi r24,lo8(1)
 14844 640e 90E0      		ldi r25,0
 14845 6410 9C83      		std Y+4,r25
 14846 6412 8B83      		std Y+3,r24
 14847 6414 00C0      		rjmp .L495
 14848               	.L496:
1839:lp_solve_5.5/lp_simplex.c ****         hold -= mat_getitem(lp->matL, i, j) * lp->best_solution[lp->rows + j];
 14849               		.loc 2 1839 0 discriminator 3
 14850 6416 CE01      		movw r24,r28
 14851 6418 CF96      		adiw r24,63
 14852 641a FC01      		movw r30,r24
 14853 641c 8081      		ld r24,Z
 14854 641e 9181      		ldd r25,Z+1
 14855 6420 8650      		subi r24,6
 14856 6422 9D4F      		sbci r25,-3
 14857 6424 FC01      		movw r30,r24
 14858 6426 8081      		ld r24,Z
 14859 6428 9181      		ldd r25,Z+1
 14860 642a 4B81      		ldd r20,Y+3
 14861 642c 5C81      		ldd r21,Y+4
 14862 642e 2981      		ldd r18,Y+1
 14863 6430 3A81      		ldd r19,Y+2
 14864 6432 B901      		movw r22,r18
 14865 6434 0E94 0000 		call mat_getitem
 14866 6438 7B01      		movw r14,r22
 14867 643a 8C01      		movw r16,r24
 14868 643c CE01      		movw r24,r28
 14869 643e CF96      		adiw r24,63
 14870 6440 FC01      		movw r30,r24
 14871 6442 8081      		ld r24,Z
 14872 6444 9181      		ldd r25,Z+1
 14873 6446 8C5E      		subi r24,-20
 14874 6448 9D4F      		sbci r25,-3
 14875 644a FC01      		movw r30,r24
 14876 644c 2081      		ld r18,Z
 14877 644e 3181      		ldd r19,Z+1
 14878 6450 CE01      		movw r24,r28
 14879 6452 CF96      		adiw r24,63
 14880 6454 FC01      		movw r30,r24
 14881 6456 8081      		ld r24,Z
 14882 6458 9181      		ldd r25,Z+1
 14883 645a 8651      		subi r24,22
 14884 645c 9E4F      		sbci r25,-2
 14885 645e FC01      		movw r30,r24
 14886 6460 4081      		ld r20,Z
 14887 6462 5181      		ldd r21,Z+1
 14888 6464 8B81      		ldd r24,Y+3
 14889 6466 9C81      		ldd r25,Y+4
 14890 6468 840F      		add r24,r20
 14891 646a 951F      		adc r25,r21
 14892 646c 880F      		lsl r24
 14893 646e 991F      		rol r25
 14894 6470 880F      		lsl r24
 14895 6472 991F      		rol r25
 14896 6474 820F      		add r24,r18
 14897 6476 931F      		adc r25,r19
 14898 6478 FC01      		movw r30,r24
 14899 647a 8081      		ld r24,Z
 14900 647c 9181      		ldd r25,Z+1
 14901 647e A281      		ldd r26,Z+2
 14902 6480 B381      		ldd r27,Z+3
 14903 6482 9C01      		movw r18,r24
 14904 6484 AD01      		movw r20,r26
 14905 6486 C801      		movw r24,r16
 14906 6488 B701      		movw r22,r14
 14907 648a 0E94 0000 		call __mulsf3
 14908 648e DC01      		movw r26,r24
 14909 6490 CB01      		movw r24,r22
 14910 6492 9C01      		movw r18,r24
 14911 6494 AD01      		movw r20,r26
 14912 6496 688D      		ldd r22,Y+24
 14913 6498 798D      		ldd r23,Y+25
 14914 649a 8A8D      		ldd r24,Y+26
 14915 649c 9B8D      		ldd r25,Y+27
 14916 649e 0E94 0000 		call __subsf3
 14917 64a2 DC01      		movw r26,r24
 14918 64a4 CB01      		movw r24,r22
 14919 64a6 888F      		std Y+24,r24
 14920 64a8 998F      		std Y+25,r25
 14921 64aa AA8F      		std Y+26,r26
 14922 64ac BB8F      		std Y+27,r27
1838:lp_solve_5.5/lp_simplex.c ****       for(j = 1; j <= lp->columns; j++)
 14923               		.loc 2 1838 0 discriminator 3
 14924 64ae 8B81      		ldd r24,Y+3
 14925 64b0 9C81      		ldd r25,Y+4
 14926 64b2 0196      		adiw r24,1
 14927 64b4 9C83      		std Y+4,r25
 14928 64b6 8B83      		std Y+3,r24
 14929               	.L495:
1838:lp_solve_5.5/lp_simplex.c ****       for(j = 1; j <= lp->columns; j++)
 14930               		.loc 2 1838 0 is_stmt 0 discriminator 1
 14931 64b8 CE01      		movw r24,r28
 14932 64ba CF96      		adiw r24,63
 14933 64bc FC01      		movw r30,r24
 14934 64be 8081      		ld r24,Z
 14935 64c0 9181      		ldd r25,Z+1
 14936 64c2 8451      		subi r24,20
 14937 64c4 9E4F      		sbci r25,-2
 14938 64c6 FC01      		movw r30,r24
 14939 64c8 2081      		ld r18,Z
 14940 64ca 3181      		ldd r19,Z+1
 14941 64cc 8B81      		ldd r24,Y+3
 14942 64ce 9C81      		ldd r25,Y+4
 14943 64d0 2817      		cp r18,r24
 14944 64d2 3907      		cpc r19,r25
 14945 64d4 04F0      		brlt .+2
 14946 64d6 00C0      		rjmp .L496
1840:lp_solve_5.5/lp_simplex.c ****       if(LagFeas) {
 14947               		.loc 2 1840 0 is_stmt 1
 14948 64d8 8985      		ldd r24,Y+9
 14949 64da 8823      		tst r24
 14950 64dc 01F4      		brne .+2
 14951 64de 00C0      		rjmp .L497
1841:lp_solve_5.5/lp_simplex.c ****         if(lp->lag_con_type[i] == EQ) {
 14952               		.loc 2 1841 0
 14953 64e0 CE01      		movw r24,r28
 14954 64e2 CF96      		adiw r24,63
 14955 64e4 FC01      		movw r30,r24
 14956 64e6 8081      		ld r24,Z
 14957 64e8 9181      		ldd r25,Z+1
 14958 64ea 8250      		subi r24,2
 14959 64ec 9D4F      		sbci r25,-3
 14960 64ee FC01      		movw r30,r24
 14961 64f0 2081      		ld r18,Z
 14962 64f2 3181      		ldd r19,Z+1
 14963 64f4 8981      		ldd r24,Y+1
 14964 64f6 9A81      		ldd r25,Y+2
 14965 64f8 880F      		lsl r24
 14966 64fa 991F      		rol r25
 14967 64fc 820F      		add r24,r18
 14968 64fe 931F      		adc r25,r19
 14969 6500 FC01      		movw r30,r24
 14970 6502 8081      		ld r24,Z
 14971 6504 9181      		ldd r25,Z+1
 14972 6506 0397      		sbiw r24,3
 14973 6508 01F4      		brne .L498
1842:lp_solve_5.5/lp_simplex.c ****           if(fabs(hold) > lp->epsprimal)
 14974               		.loc 2 1842 0
 14975 650a 888D      		ldd r24,Y+24
 14976 650c 998D      		ldd r25,Y+25
 14977 650e AA8D      		ldd r26,Y+26
 14978 6510 BB8D      		ldd r27,Y+27
 14979 6512 BF77      		andi r27,0x7f
 14980 6514 9E01      		movw r18,r28
 14981 6516 215C      		subi r18,-63
 14982 6518 3F4F      		sbci r19,-1
 14983 651a F901      		movw r30,r18
 14984 651c 2081      		ld r18,Z
 14985 651e 3181      		ldd r19,Z+1
 14986 6520 265E      		subi r18,-26
 14987 6522 3C4F      		sbci r19,-4
 14988 6524 F901      		movw r30,r18
 14989 6526 2081      		ld r18,Z
 14990 6528 3181      		ldd r19,Z+1
 14991 652a 4281      		ldd r20,Z+2
 14992 652c 5381      		ldd r21,Z+3
 14993 652e BC01      		movw r22,r24
 14994 6530 CD01      		movw r24,r26
 14995 6532 0E94 0000 		call __gtsf2
 14996 6536 1816      		cp __zero_reg__,r24
 14997 6538 04F4      		brge .L497
1843:lp_solve_5.5/lp_simplex.c ****             LagFeas = FALSE;
 14998               		.loc 2 1843 0
 14999 653a 1986      		std Y+9,__zero_reg__
 15000 653c 00C0      		rjmp .L497
 15001               	.L498:
1844:lp_solve_5.5/lp_simplex.c ****         }
1845:lp_solve_5.5/lp_simplex.c ****         else if(hold < -lp->epsprimal)
 15002               		.loc 2 1845 0
 15003 653e CE01      		movw r24,r28
 15004 6540 CF96      		adiw r24,63
 15005 6542 FC01      		movw r30,r24
 15006 6544 8081      		ld r24,Z
 15007 6546 9181      		ldd r25,Z+1
 15008 6548 865E      		subi r24,-26
 15009 654a 9C4F      		sbci r25,-4
 15010 654c FC01      		movw r30,r24
 15011 654e 8081      		ld r24,Z
 15012 6550 9181      		ldd r25,Z+1
 15013 6552 A281      		ldd r26,Z+2
 15014 6554 B381      		ldd r27,Z+3
 15015 6556 B058      		subi r27,0x80
 15016 6558 288D      		ldd r18,Y+24
 15017 655a 398D      		ldd r19,Y+25
 15018 655c 4A8D      		ldd r20,Y+26
 15019 655e 5B8D      		ldd r21,Y+27
 15020 6560 BC01      		movw r22,r24
 15021 6562 CD01      		movw r24,r26
 15022 6564 0E94 0000 		call __gtsf2
 15023 6568 1816      		cp __zero_reg__,r24
 15024 656a 04F4      		brge .L497
1846:lp_solve_5.5/lp_simplex.c ****           LagFeas = FALSE;
 15025               		.loc 2 1846 0
 15026 656c 1986      		std Y+9,__zero_reg__
 15027               	.L497:
1847:lp_solve_5.5/lp_simplex.c ****       }
1848:lp_solve_5.5/lp_simplex.c ****       /* Test for convergence and update */
1849:lp_solve_5.5/lp_simplex.c ****       if(Converged && (fabs(my_reldiff(hold , SubGrad[i])) > /* lp->lag_accept */ DEF_LAGACCEPT))
 15028               		.loc 2 1849 0
 15029 656e 8B85      		ldd r24,Y+11
 15030 6570 8823      		tst r24
 15031 6572 01F4      		brne .+2
 15032 6574 00C0      		rjmp .L502
 15033               		.loc 2 1849 0 is_stmt 0 discriminator 1
 15034 6576 2BAD      		ldd r18,Y+59
 15035 6578 3CAD      		ldd r19,Y+60
 15036 657a 8981      		ldd r24,Y+1
 15037 657c 9A81      		ldd r25,Y+2
 15038 657e 880F      		lsl r24
 15039 6580 991F      		rol r25
 15040 6582 880F      		lsl r24
 15041 6584 991F      		rol r25
 15042 6586 820F      		add r24,r18
 15043 6588 931F      		adc r25,r19
 15044 658a FC01      		movw r30,r24
 15045 658c 8081      		ld r24,Z
 15046 658e 9181      		ldd r25,Z+1
 15047 6590 A281      		ldd r26,Z+2
 15048 6592 B381      		ldd r27,Z+3
 15049 6594 9C01      		movw r18,r24
 15050 6596 AD01      		movw r20,r26
 15051 6598 688D      		ldd r22,Y+24
 15052 659a 798D      		ldd r23,Y+25
 15053 659c 8A8D      		ldd r24,Y+26
 15054 659e 9B8D      		ldd r25,Y+27
 15055 65a0 0E94 0000 		call __subsf3
 15056 65a4 DC01      		movw r26,r24
 15057 65a6 CB01      		movw r24,r22
 15058 65a8 6C01      		movw r12,r24
 15059 65aa 7D01      		movw r14,r26
 15060 65ac 2BAD      		ldd r18,Y+59
 15061 65ae 3CAD      		ldd r19,Y+60
 15062 65b0 8981      		ldd r24,Y+1
 15063 65b2 9A81      		ldd r25,Y+2
 15064 65b4 880F      		lsl r24
 15065 65b6 991F      		rol r25
 15066 65b8 880F      		lsl r24
 15067 65ba 991F      		rol r25
 15068 65bc 820F      		add r24,r18
 15069 65be 931F      		adc r25,r19
 15070 65c0 FC01      		movw r30,r24
 15071 65c2 8081      		ld r24,Z
 15072 65c4 9181      		ldd r25,Z+1
 15073 65c6 A281      		ldd r26,Z+2
 15074 65c8 B381      		ldd r27,Z+3
 15075 65ca BF77      		andi r27,0x7f
 15076 65cc 20E0      		ldi r18,0
 15077 65ce 30E0      		ldi r19,0
 15078 65d0 40E8      		ldi r20,lo8(-128)
 15079 65d2 5FE3      		ldi r21,lo8(63)
 15080 65d4 BC01      		movw r22,r24
 15081 65d6 CD01      		movw r24,r26
 15082 65d8 0E94 0000 		call __addsf3
 15083 65dc DC01      		movw r26,r24
 15084 65de CB01      		movw r24,r22
 15085 65e0 9C01      		movw r18,r24
 15086 65e2 AD01      		movw r20,r26
 15087 65e4 C701      		movw r24,r14
 15088 65e6 B601      		movw r22,r12
 15089 65e8 0E94 0000 		call __divsf3
 15090 65ec DC01      		movw r26,r24
 15091 65ee CB01      		movw r24,r22
 15092 65f0 BF77      		andi r27,0x7f
 15093 65f2 2FE6      		ldi r18,lo8(111)
 15094 65f4 32E1      		ldi r19,lo8(18)
 15095 65f6 43E8      		ldi r20,lo8(-125)
 15096 65f8 5AE3      		ldi r21,lo8(58)
 15097 65fa BC01      		movw r22,r24
 15098 65fc CD01      		movw r24,r26
 15099 65fe 0E94 0000 		call __gtsf2
 15100 6602 1816      		cp __zero_reg__,r24
 15101 6604 04F4      		brge .L502
1850:lp_solve_5.5/lp_simplex.c ****         Converged = FALSE;
 15102               		.loc 2 1850 0 is_stmt 1
 15103 6606 1B86      		std Y+11,__zero_reg__
 15104               	.L502:
1851:lp_solve_5.5/lp_simplex.c ****       SubGrad[i] = hold;
 15105               		.loc 2 1851 0 discriminator 2
 15106 6608 2BAD      		ldd r18,Y+59
 15107 660a 3CAD      		ldd r19,Y+60
 15108 660c 8981      		ldd r24,Y+1
 15109 660e 9A81      		ldd r25,Y+2
 15110 6610 880F      		lsl r24
 15111 6612 991F      		rol r25
 15112 6614 880F      		lsl r24
 15113 6616 991F      		rol r25
 15114 6618 280F      		add r18,r24
 15115 661a 391F      		adc r19,r25
 15116 661c 888D      		ldd r24,Y+24
 15117 661e 998D      		ldd r25,Y+25
 15118 6620 AA8D      		ldd r26,Y+26
 15119 6622 BB8D      		ldd r27,Y+27
 15120 6624 F901      		movw r30,r18
 15121 6626 8083      		st Z,r24
 15122 6628 9183      		std Z+1,r25
 15123 662a A283      		std Z+2,r26
 15124 662c B383      		std Z+3,r27
1852:lp_solve_5.5/lp_simplex.c ****       SqrsumSubGrad += hold * hold;
 15125               		.loc 2 1852 0 discriminator 2
 15126 662e 288D      		ldd r18,Y+24
 15127 6630 398D      		ldd r19,Y+25
 15128 6632 4A8D      		ldd r20,Y+26
 15129 6634 5B8D      		ldd r21,Y+27
 15130 6636 688D      		ldd r22,Y+24
 15131 6638 798D      		ldd r23,Y+25
 15132 663a 8A8D      		ldd r24,Y+26
 15133 663c 9B8D      		ldd r25,Y+27
 15134 663e 0E94 0000 		call __mulsf3
 15135 6642 DC01      		movw r26,r24
 15136 6644 CB01      		movw r24,r22
 15137 6646 9C01      		movw r18,r24
 15138 6648 AD01      		movw r20,r26
 15139 664a 6CA1      		ldd r22,Y+36
 15140 664c 7DA1      		ldd r23,Y+37
 15141 664e 8EA1      		ldd r24,Y+38
 15142 6650 9FA1      		ldd r25,Y+39
 15143 6652 0E94 0000 		call __addsf3
 15144 6656 DC01      		movw r26,r24
 15145 6658 CB01      		movw r24,r22
 15146 665a 8CA3      		std Y+36,r24
 15147 665c 9DA3      		std Y+37,r25
 15148 665e AEA3      		std Y+38,r26
 15149 6660 BFA3      		std Y+39,r27
1836:lp_solve_5.5/lp_simplex.c ****       hold = lp->lag_rhs[i];
 15150               		.loc 2 1836 0 discriminator 2
 15151 6662 8981      		ldd r24,Y+1
 15152 6664 9A81      		ldd r25,Y+2
 15153 6666 0196      		adiw r24,1
 15154 6668 9A83      		std Y+2,r25
 15155 666a 8983      		std Y+1,r24
 15156               	.L494:
1836:lp_solve_5.5/lp_simplex.c ****       hold = lp->lag_rhs[i];
 15157               		.loc 2 1836 0 is_stmt 0 discriminator 1
 15158 666c CE01      		movw r24,r28
 15159 666e CF96      		adiw r24,63
 15160 6670 FC01      		movw r30,r24
 15161 6672 8081      		ld r24,Z
 15162 6674 9181      		ldd r25,Z+1
 15163 6676 0E94 0000 		call get_Lrows
 15164 667a 9C01      		movw r18,r24
 15165 667c 8981      		ldd r24,Y+1
 15166 667e 9A81      		ldd r25,Y+2
 15167 6680 2817      		cp r18,r24
 15168 6682 3907      		cpc r19,r25
 15169 6684 04F0      		brlt .+2
 15170 6686 00C0      		rjmp .L504
1853:lp_solve_5.5/lp_simplex.c ****     }
1854:lp_solve_5.5/lp_simplex.c ****     SqrsumSubGrad = sqrt(SqrsumSubGrad);
 15171               		.loc 2 1854 0 is_stmt 1
 15172 6688 8CA1      		ldd r24,Y+36
 15173 668a 9DA1      		ldd r25,Y+37
 15174 668c AEA1      		ldd r26,Y+38
 15175 668e BFA1      		ldd r27,Y+39
 15176 6690 BC01      		movw r22,r24
 15177 6692 CD01      		movw r24,r26
 15178 6694 0E94 0000 		call sqrt
 15179 6698 DC01      		movw r26,r24
 15180 669a CB01      		movw r24,r22
 15181 669c 8CA3      		std Y+36,r24
 15182 669e 9DA3      		std Y+37,r25
 15183 66a0 AEA3      		std Y+38,r26
 15184 66a2 BFA3      		std Y+39,r27
1855:lp_solve_5.5/lp_simplex.c **** #if 1
1856:lp_solve_5.5/lp_simplex.c ****     Converged &= LagFeas;
 15185               		.loc 2 1856 0
 15186 66a4 9B85      		ldd r25,Y+11
 15187 66a6 8985      		ldd r24,Y+9
 15188 66a8 8923      		and r24,r25
 15189 66aa 8B87      		std Y+11,r24
1857:lp_solve_5.5/lp_simplex.c **** #endif
1858:lp_solve_5.5/lp_simplex.c ****     if(Converged)
 15190               		.loc 2 1858 0
 15191 66ac 8B85      		ldd r24,Y+11
 15192 66ae 8823      		tst r24
 15193 66b0 01F0      		breq .+2
 15194 66b2 00C0      		rjmp .L581
1859:lp_solve_5.5/lp_simplex.c ****       break;
1860:lp_solve_5.5/lp_simplex.c **** 
1861:lp_solve_5.5/lp_simplex.c ****     /* Modify step parameters and initialize ahead of next iteration */
1862:lp_solve_5.5/lp_simplex.c ****     Znow = lp->best_solution[0] - rhsmod;
 15195               		.loc 2 1862 0
 15196 66b4 CE01      		movw r24,r28
 15197 66b6 CF96      		adiw r24,63
 15198 66b8 FC01      		movw r30,r24
 15199 66ba 8081      		ld r24,Z
 15200 66bc 9181      		ldd r25,Z+1
 15201 66be 8C5E      		subi r24,-20
 15202 66c0 9D4F      		sbci r25,-3
 15203 66c2 FC01      		movw r30,r24
 15204 66c4 8081      		ld r24,Z
 15205 66c6 9181      		ldd r25,Z+1
 15206 66c8 FC01      		movw r30,r24
 15207 66ca 8081      		ld r24,Z
 15208 66cc 9181      		ldd r25,Z+1
 15209 66ce A281      		ldd r26,Z+2
 15210 66d0 B381      		ldd r27,Z+3
 15211 66d2 2C89      		ldd r18,Y+20
 15212 66d4 3D89      		ldd r19,Y+21
 15213 66d6 4E89      		ldd r20,Y+22
 15214 66d8 5F89      		ldd r21,Y+23
 15215 66da BC01      		movw r22,r24
 15216 66dc CD01      		movw r24,r26
 15217 66de 0E94 0000 		call __subsf3
 15218 66e2 DC01      		movw r26,r24
 15219 66e4 CB01      		movw r24,r22
 15220 66e6 8AAB      		std Y+50,r24
 15221 66e8 9BAB      		std Y+51,r25
 15222 66ea ACAB      		std Y+52,r26
 15223 66ec BDAB      		std Y+53,r27
1863:lp_solve_5.5/lp_simplex.c ****     if(Znow > Zub) {
 15224               		.loc 2 1863 0
 15225 66ee 2EA5      		ldd r18,Y+46
 15226 66f0 3FA5      		ldd r19,Y+47
 15227 66f2 48A9      		ldd r20,Y+48
 15228 66f4 59A9      		ldd r21,Y+49
 15229 66f6 6AA9      		ldd r22,Y+50
 15230 66f8 7BA9      		ldd r23,Y+51
 15231 66fa 8CA9      		ldd r24,Y+52
 15232 66fc 9DA9      		ldd r25,Y+53
 15233 66fe 0E94 0000 		call __gtsf2
 15234 6702 1816      		cp __zero_reg__,r24
 15235 6704 04F0      		brlt .+2
 15236 6706 00C0      		rjmp .L579
1864:lp_solve_5.5/lp_simplex.c ****       /* Handle exceptional case where we overshoot */
1865:lp_solve_5.5/lp_simplex.c ****       Phi *= DEF_LAGCONTRACT;
 15237               		.loc 2 1865 0
 15238 6708 26E6      		ldi r18,lo8(102)
 15239 670a 36E6      		ldi r19,lo8(102)
 15240 670c 46E6      		ldi r20,lo8(102)
 15241 670e 5FE3      		ldi r21,lo8(63)
 15242 6710 6C8D      		ldd r22,Y+28
 15243 6712 7D8D      		ldd r23,Y+29
 15244 6714 8E8D      		ldd r24,Y+30
 15245 6716 9F8D      		ldd r25,Y+31
 15246 6718 0E94 0000 		call __mulsf3
 15247 671c DC01      		movw r26,r24
 15248 671e CB01      		movw r24,r22
 15249 6720 8C8F      		std Y+28,r24
 15250 6722 9D8F      		std Y+29,r25
 15251 6724 AE8F      		std Y+30,r26
 15252 6726 BF8F      		std Y+31,r27
1866:lp_solve_5.5/lp_simplex.c ****       StepSize *= (Zub-Zlb) / (Znow-Zlb);
 15253               		.loc 2 1866 0
 15254 6728 2AA5      		ldd r18,Y+42
 15255 672a 3BA5      		ldd r19,Y+43
 15256 672c 4CA5      		ldd r20,Y+44
 15257 672e 5DA5      		ldd r21,Y+45
 15258 6730 6EA5      		ldd r22,Y+46
 15259 6732 7FA5      		ldd r23,Y+47
 15260 6734 88A9      		ldd r24,Y+48
 15261 6736 99A9      		ldd r25,Y+49
 15262 6738 0E94 0000 		call __subsf3
 15263 673c DC01      		movw r26,r24
 15264 673e CB01      		movw r24,r22
 15265 6740 6C01      		movw r12,r24
 15266 6742 7D01      		movw r14,r26
 15267 6744 2AA5      		ldd r18,Y+42
 15268 6746 3BA5      		ldd r19,Y+43
 15269 6748 4CA5      		ldd r20,Y+44
 15270 674a 5DA5      		ldd r21,Y+45
 15271 674c 6AA9      		ldd r22,Y+50
 15272 674e 7BA9      		ldd r23,Y+51
 15273 6750 8CA9      		ldd r24,Y+52
 15274 6752 9DA9      		ldd r25,Y+53
 15275 6754 0E94 0000 		call __subsf3
 15276 6758 DC01      		movw r26,r24
 15277 675a CB01      		movw r24,r22
 15278 675c 9C01      		movw r18,r24
 15279 675e AD01      		movw r20,r26
 15280 6760 C701      		movw r24,r14
 15281 6762 B601      		movw r22,r12
 15282 6764 0E94 0000 		call __divsf3
 15283 6768 DC01      		movw r26,r24
 15284 676a CB01      		movw r24,r22
 15285 676c 9C01      		movw r18,r24
 15286 676e AD01      		movw r20,r26
 15287 6770 68A1      		ldd r22,Y+32
 15288 6772 79A1      		ldd r23,Y+33
 15289 6774 8AA1      		ldd r24,Y+34
 15290 6776 9BA1      		ldd r25,Y+35
 15291 6778 0E94 0000 		call __mulsf3
 15292 677c DC01      		movw r26,r24
 15293 677e CB01      		movw r24,r22
 15294 6780 88A3      		std Y+32,r24
 15295 6782 99A3      		std Y+33,r25
 15296 6784 AAA3      		std Y+34,r26
 15297 6786 BBA3      		std Y+35,r27
 15298 6788 00C0      		rjmp .L509
 15299               	.L579:
1867:lp_solve_5.5/lp_simplex.c ****     }
1868:lp_solve_5.5/lp_simplex.c ****     else
1869:lp_solve_5.5/lp_simplex.c **** #define LagBasisContract
1870:lp_solve_5.5/lp_simplex.c **** #ifdef LagBasisContract
1871:lp_solve_5.5/lp_simplex.c **** /*      StepSize = Phi * (Zub - Znow) / SqrsumSubGrad; */
1872:lp_solve_5.5/lp_simplex.c ****       StepSize = Phi * (2-DEF_LAGCONTRACT) * (Zub - Znow) / SqrsumSubGrad;
 15300               		.loc 2 1872 0
 15301 678a 2DEC      		ldi r18,lo8(-51)
 15302 678c 3CEC      		ldi r19,lo8(-52)
 15303 678e 4CE8      		ldi r20,lo8(-116)
 15304 6790 5FE3      		ldi r21,lo8(63)
 15305 6792 6C8D      		ldd r22,Y+28
 15306 6794 7D8D      		ldd r23,Y+29
 15307 6796 8E8D      		ldd r24,Y+30
 15308 6798 9F8D      		ldd r25,Y+31
 15309 679a 0E94 0000 		call __mulsf3
 15310 679e DC01      		movw r26,r24
 15311 67a0 CB01      		movw r24,r22
 15312 67a2 6C01      		movw r12,r24
 15313 67a4 7D01      		movw r14,r26
 15314 67a6 2AA9      		ldd r18,Y+50
 15315 67a8 3BA9      		ldd r19,Y+51
 15316 67aa 4CA9      		ldd r20,Y+52
 15317 67ac 5DA9      		ldd r21,Y+53
 15318 67ae 6EA5      		ldd r22,Y+46
 15319 67b0 7FA5      		ldd r23,Y+47
 15320 67b2 88A9      		ldd r24,Y+48
 15321 67b4 99A9      		ldd r25,Y+49
 15322 67b6 0E94 0000 		call __subsf3
 15323 67ba DC01      		movw r26,r24
 15324 67bc CB01      		movw r24,r22
 15325 67be 9C01      		movw r18,r24
 15326 67c0 AD01      		movw r20,r26
 15327 67c2 C701      		movw r24,r14
 15328 67c4 B601      		movw r22,r12
 15329 67c6 0E94 0000 		call __mulsf3
 15330 67ca DC01      		movw r26,r24
 15331 67cc CB01      		movw r24,r22
 15332 67ce 2CA1      		ldd r18,Y+36
 15333 67d0 3DA1      		ldd r19,Y+37
 15334 67d2 4EA1      		ldd r20,Y+38
 15335 67d4 5FA1      		ldd r21,Y+39
 15336 67d6 BC01      		movw r22,r24
 15337 67d8 CD01      		movw r24,r26
 15338 67da 0E94 0000 		call __divsf3
 15339 67de DC01      		movw r26,r24
 15340 67e0 CB01      		movw r24,r22
 15341 67e2 88A3      		std Y+32,r24
 15342 67e4 99A3      		std Y+33,r25
 15343 67e6 AAA3      		std Y+34,r26
 15344 67e8 BBA3      		std Y+35,r27
 15345               	.L509:
1873:lp_solve_5.5/lp_simplex.c **** #else
1874:lp_solve_5.5/lp_simplex.c ****       StepSize = Phi * (Zub - Znow) / SqrsumSubGrad;
1875:lp_solve_5.5/lp_simplex.c **** #endif
1876:lp_solve_5.5/lp_simplex.c **** 
1877:lp_solve_5.5/lp_simplex.c ****     /* Compute the new dual price vector (Lagrangean multipliers, lambda) */
1878:lp_solve_5.5/lp_simplex.c ****     for(i = 1; i <= get_Lrows(lp); i++) {
 15346               		.loc 2 1878 0
 15347 67ea 81E0      		ldi r24,lo8(1)
 15348 67ec 90E0      		ldi r25,0
 15349 67ee 9A83      		std Y+2,r25
 15350 67f0 8983      		std Y+1,r24
 15351 67f2 00C0      		rjmp .L510
 15352               	.L514:
1879:lp_solve_5.5/lp_simplex.c ****       lp->lambda[i] += StepSize * SubGrad[i];
 15353               		.loc 2 1879 0
 15354 67f4 CE01      		movw r24,r28
 15355 67f6 CF96      		adiw r24,63
 15356 67f8 FC01      		movw r30,r24
 15357 67fa 8081      		ld r24,Z
 15358 67fc 9181      		ldd r25,Z+1
 15359 67fe 9D5F      		subi r25,-3
 15360 6800 FC01      		movw r30,r24
 15361 6802 2081      		ld r18,Z
 15362 6804 3181      		ldd r19,Z+1
 15363 6806 8981      		ldd r24,Y+1
 15364 6808 9A81      		ldd r25,Y+2
 15365 680a 880F      		lsl r24
 15366 680c 991F      		rol r25
 15367 680e 880F      		lsl r24
 15368 6810 991F      		rol r25
 15369 6812 8901      		movw r16,r18
 15370 6814 080F      		add r16,r24
 15371 6816 191F      		adc r17,r25
 15372 6818 CE01      		movw r24,r28
 15373 681a CF96      		adiw r24,63
 15374 681c FC01      		movw r30,r24
 15375 681e 8081      		ld r24,Z
 15376 6820 9181      		ldd r25,Z+1
 15377 6822 9D5F      		subi r25,-3
 15378 6824 FC01      		movw r30,r24
 15379 6826 2081      		ld r18,Z
 15380 6828 3181      		ldd r19,Z+1
 15381 682a 8981      		ldd r24,Y+1
 15382 682c 9A81      		ldd r25,Y+2
 15383 682e 880F      		lsl r24
 15384 6830 991F      		rol r25
 15385 6832 880F      		lsl r24
 15386 6834 991F      		rol r25
 15387 6836 820F      		add r24,r18
 15388 6838 931F      		adc r25,r19
 15389 683a FC01      		movw r30,r24
 15390 683c C080      		ld r12,Z
 15391 683e D180      		ldd r13,Z+1
 15392 6840 E280      		ldd r14,Z+2
 15393 6842 F380      		ldd r15,Z+3
 15394 6844 2BAD      		ldd r18,Y+59
 15395 6846 3CAD      		ldd r19,Y+60
 15396 6848 8981      		ldd r24,Y+1
 15397 684a 9A81      		ldd r25,Y+2
 15398 684c 880F      		lsl r24
 15399 684e 991F      		rol r25
 15400 6850 880F      		lsl r24
 15401 6852 991F      		rol r25
 15402 6854 820F      		add r24,r18
 15403 6856 931F      		adc r25,r19
 15404 6858 FC01      		movw r30,r24
 15405 685a 8081      		ld r24,Z
 15406 685c 9181      		ldd r25,Z+1
 15407 685e A281      		ldd r26,Z+2
 15408 6860 B381      		ldd r27,Z+3
 15409 6862 28A1      		ldd r18,Y+32
 15410 6864 39A1      		ldd r19,Y+33
 15411 6866 4AA1      		ldd r20,Y+34
 15412 6868 5BA1      		ldd r21,Y+35
 15413 686a BC01      		movw r22,r24
 15414 686c CD01      		movw r24,r26
 15415 686e 0E94 0000 		call __mulsf3
 15416 6872 DC01      		movw r26,r24
 15417 6874 CB01      		movw r24,r22
 15418 6876 9C01      		movw r18,r24
 15419 6878 AD01      		movw r20,r26
 15420 687a C701      		movw r24,r14
 15421 687c B601      		movw r22,r12
 15422 687e 0E94 0000 		call __addsf3
 15423 6882 DC01      		movw r26,r24
 15424 6884 CB01      		movw r24,r22
 15425 6886 F801      		movw r30,r16
 15426 6888 8083      		st Z,r24
 15427 688a 9183      		std Z+1,r25
 15428 688c A283      		std Z+2,r26
 15429 688e B383      		std Z+3,r27
1880:lp_solve_5.5/lp_simplex.c ****       if((lp->lag_con_type[i] != EQ) && (lp->lambda[i] > 0)) {
 15430               		.loc 2 1880 0
 15431 6890 CE01      		movw r24,r28
 15432 6892 CF96      		adiw r24,63
 15433 6894 FC01      		movw r30,r24
 15434 6896 8081      		ld r24,Z
 15435 6898 9181      		ldd r25,Z+1
 15436 689a 8250      		subi r24,2
 15437 689c 9D4F      		sbci r25,-3
 15438 689e FC01      		movw r30,r24
 15439 68a0 2081      		ld r18,Z
 15440 68a2 3181      		ldd r19,Z+1
 15441 68a4 8981      		ldd r24,Y+1
 15442 68a6 9A81      		ldd r25,Y+2
 15443 68a8 880F      		lsl r24
 15444 68aa 991F      		rol r25
 15445 68ac 820F      		add r24,r18
 15446 68ae 931F      		adc r25,r19
 15447 68b0 FC01      		movw r30,r24
 15448 68b2 8081      		ld r24,Z
 15449 68b4 9181      		ldd r25,Z+1
 15450 68b6 0397      		sbiw r24,3
 15451 68b8 01F4      		brne .+2
 15452 68ba 00C0      		rjmp .L511
 15453               		.loc 2 1880 0 is_stmt 0 discriminator 1
 15454 68bc CE01      		movw r24,r28
 15455 68be CF96      		adiw r24,63
 15456 68c0 FC01      		movw r30,r24
 15457 68c2 8081      		ld r24,Z
 15458 68c4 9181      		ldd r25,Z+1
 15459 68c6 9D5F      		subi r25,-3
 15460 68c8 FC01      		movw r30,r24
 15461 68ca 2081      		ld r18,Z
 15462 68cc 3181      		ldd r19,Z+1
 15463 68ce 8981      		ldd r24,Y+1
 15464 68d0 9A81      		ldd r25,Y+2
 15465 68d2 880F      		lsl r24
 15466 68d4 991F      		rol r25
 15467 68d6 880F      		lsl r24
 15468 68d8 991F      		rol r25
 15469 68da 820F      		add r24,r18
 15470 68dc 931F      		adc r25,r19
 15471 68de FC01      		movw r30,r24
 15472 68e0 8081      		ld r24,Z
 15473 68e2 9181      		ldd r25,Z+1
 15474 68e4 A281      		ldd r26,Z+2
 15475 68e6 B381      		ldd r27,Z+3
 15476 68e8 20E0      		ldi r18,0
 15477 68ea 30E0      		ldi r19,0
 15478 68ec A901      		movw r20,r18
 15479 68ee BC01      		movw r22,r24
 15480 68f0 CD01      		movw r24,r26
 15481 68f2 0E94 0000 		call __gtsf2
 15482 68f6 1816      		cp __zero_reg__,r24
 15483 68f8 04F4      		brge .L511
1881:lp_solve_5.5/lp_simplex.c ****         /* Handle case where we overshoot and need to correct (see above) */
1882:lp_solve_5.5/lp_simplex.c ****         if(Znow < Zub)
 15484               		.loc 2 1882 0 is_stmt 1
 15485 68fa 2EA5      		ldd r18,Y+46
 15486 68fc 3FA5      		ldd r19,Y+47
 15487 68fe 48A9      		ldd r20,Y+48
 15488 6900 59A9      		ldd r21,Y+49
 15489 6902 6AA9      		ldd r22,Y+50
 15490 6904 7BA9      		ldd r23,Y+51
 15491 6906 8CA9      		ldd r24,Y+52
 15492 6908 9DA9      		ldd r25,Y+53
 15493 690a 0E94 0000 		call __ltsf2
 15494 690e 8823      		tst r24
 15495 6910 04F4      		brge .L511
1883:lp_solve_5.5/lp_simplex.c ****           lp->lambda[i] = 0;
 15496               		.loc 2 1883 0
 15497 6912 CE01      		movw r24,r28
 15498 6914 CF96      		adiw r24,63
 15499 6916 FC01      		movw r30,r24
 15500 6918 8081      		ld r24,Z
 15501 691a 9181      		ldd r25,Z+1
 15502 691c 9D5F      		subi r25,-3
 15503 691e FC01      		movw r30,r24
 15504 6920 2081      		ld r18,Z
 15505 6922 3181      		ldd r19,Z+1
 15506 6924 8981      		ldd r24,Y+1
 15507 6926 9A81      		ldd r25,Y+2
 15508 6928 880F      		lsl r24
 15509 692a 991F      		rol r25
 15510 692c 880F      		lsl r24
 15511 692e 991F      		rol r25
 15512 6930 820F      		add r24,r18
 15513 6932 931F      		adc r25,r19
 15514 6934 FC01      		movw r30,r24
 15515 6936 1082      		st Z,__zero_reg__
 15516 6938 1182      		std Z+1,__zero_reg__
 15517 693a 1282      		std Z+2,__zero_reg__
 15518 693c 1382      		std Z+3,__zero_reg__
 15519               	.L511:
1878:lp_solve_5.5/lp_simplex.c ****       lp->lambda[i] += StepSize * SubGrad[i];
 15520               		.loc 2 1878 0 discriminator 2
 15521 693e 8981      		ldd r24,Y+1
 15522 6940 9A81      		ldd r25,Y+2
 15523 6942 0196      		adiw r24,1
 15524 6944 9A83      		std Y+2,r25
 15525 6946 8983      		std Y+1,r24
 15526               	.L510:
1878:lp_solve_5.5/lp_simplex.c ****       lp->lambda[i] += StepSize * SubGrad[i];
 15527               		.loc 2 1878 0 is_stmt 0 discriminator 1
 15528 6948 CE01      		movw r24,r28
 15529 694a CF96      		adiw r24,63
 15530 694c FC01      		movw r30,r24
 15531 694e 8081      		ld r24,Z
 15532 6950 9181      		ldd r25,Z+1
 15533 6952 0E94 0000 		call get_Lrows
 15534 6956 9C01      		movw r18,r24
 15535 6958 8981      		ldd r24,Y+1
 15536 695a 9A81      		ldd r25,Y+2
 15537 695c 2817      		cp r18,r24
 15538 695e 3907      		cpc r19,r25
 15539 6960 04F0      		brlt .+2
 15540 6962 00C0      		rjmp .L514
1884:lp_solve_5.5/lp_simplex.c ****       }
1885:lp_solve_5.5/lp_simplex.c ****     }
1886:lp_solve_5.5/lp_simplex.c **** /*    normalizeVector(lp->lambda, get_Lrows(lp)); */
1887:lp_solve_5.5/lp_simplex.c **** 
1888:lp_solve_5.5/lp_simplex.c ****     /* Save the current vector if it is better */
1889:lp_solve_5.5/lp_simplex.c ****     if(LagFeas && (Znow < Zbest)) {
 15541               		.loc 2 1889 0 is_stmt 1
 15542 6964 8985      		ldd r24,Y+9
 15543 6966 8823      		tst r24
 15544 6968 01F4      		brne .+2
 15545 696a 00C0      		rjmp .L515
 15546               		.loc 2 1889 0 is_stmt 0 discriminator 1
 15547 696c 2889      		ldd r18,Y+16
 15548 696e 3989      		ldd r19,Y+17
 15549 6970 4A89      		ldd r20,Y+18
 15550 6972 5B89      		ldd r21,Y+19
 15551 6974 6AA9      		ldd r22,Y+50
 15552 6976 7BA9      		ldd r23,Y+51
 15553 6978 8CA9      		ldd r24,Y+52
 15554 697a 9DA9      		ldd r25,Y+53
 15555 697c 0E94 0000 		call __ltsf2
 15556 6980 8823      		tst r24
 15557 6982 04F0      		brlt .+2
 15558 6984 00C0      		rjmp .L515
1890:lp_solve_5.5/lp_simplex.c **** 
1891:lp_solve_5.5/lp_simplex.c ****       /* Recompute the objective function value in terms of the original values */
1892:lp_solve_5.5/lp_simplex.c ****       MEMCOPY(BestFeasSol, lp->best_solution, lp->sum+1);
 15559               		.loc 2 1892 0 is_stmt 1
 15560 6986 CE01      		movw r24,r28
 15561 6988 CF96      		adiw r24,63
 15562 698a FC01      		movw r30,r24
 15563 698c 8081      		ld r24,Z
 15564 698e 9181      		ldd r25,Z+1
 15565 6990 8851      		subi r24,24
 15566 6992 9E4F      		sbci r25,-2
 15567 6994 FC01      		movw r30,r24
 15568 6996 8081      		ld r24,Z
 15569 6998 9181      		ldd r25,Z+1
 15570 699a 0196      		adiw r24,1
 15571 699c AC01      		movw r20,r24
 15572 699e 440F      		lsl r20
 15573 69a0 551F      		rol r21
 15574 69a2 440F      		lsl r20
 15575 69a4 551F      		rol r21
 15576 69a6 CE01      		movw r24,r28
 15577 69a8 CF96      		adiw r24,63
 15578 69aa FC01      		movw r30,r24
 15579 69ac 8081      		ld r24,Z
 15580 69ae 9181      		ldd r25,Z+1
 15581 69b0 8C5E      		subi r24,-20
 15582 69b2 9D4F      		sbci r25,-3
 15583 69b4 FC01      		movw r30,r24
 15584 69b6 2081      		ld r18,Z
 15585 69b8 3181      		ldd r19,Z+1
 15586 69ba 8DAD      		ldd r24,Y+61
 15587 69bc 9EAD      		ldd r25,Y+62
 15588 69be B901      		movw r22,r18
 15589 69c0 0E94 0000 		call memcpy
1893:lp_solve_5.5/lp_simplex.c ****       hold = OrigObj[0];
 15590               		.loc 2 1893 0
 15591 69c4 8FA9      		ldd r24,Y+55
 15592 69c6 98AD      		ldd r25,Y+56
 15593 69c8 FC01      		movw r30,r24
 15594 69ca 8081      		ld r24,Z
 15595 69cc 9181      		ldd r25,Z+1
 15596 69ce A281      		ldd r26,Z+2
 15597 69d0 B381      		ldd r27,Z+3
 15598 69d2 888F      		std Y+24,r24
 15599 69d4 998F      		std Y+25,r25
 15600 69d6 AA8F      		std Y+26,r26
 15601 69d8 BB8F      		std Y+27,r27
1894:lp_solve_5.5/lp_simplex.c ****       for(i = 1; i <= lp->columns; i++)
 15602               		.loc 2 1894 0
 15603 69da 81E0      		ldi r24,lo8(1)
 15604 69dc 90E0      		ldi r25,0
 15605 69de 9A83      		std Y+2,r25
 15606 69e0 8983      		std Y+1,r24
 15607 69e2 00C0      		rjmp .L517
 15608               	.L518:
1895:lp_solve_5.5/lp_simplex.c ****         hold += lp->best_solution[lp->rows + i] * OrigObj[i];
 15609               		.loc 2 1895 0 discriminator 3
 15610 69e4 CE01      		movw r24,r28
 15611 69e6 CF96      		adiw r24,63
 15612 69e8 FC01      		movw r30,r24
 15613 69ea 8081      		ld r24,Z
 15614 69ec 9181      		ldd r25,Z+1
 15615 69ee 8C5E      		subi r24,-20
 15616 69f0 9D4F      		sbci r25,-3
 15617 69f2 FC01      		movw r30,r24
 15618 69f4 2081      		ld r18,Z
 15619 69f6 3181      		ldd r19,Z+1
 15620 69f8 CE01      		movw r24,r28
 15621 69fa CF96      		adiw r24,63
 15622 69fc FC01      		movw r30,r24
 15623 69fe 8081      		ld r24,Z
 15624 6a00 9181      		ldd r25,Z+1
 15625 6a02 8651      		subi r24,22
 15626 6a04 9E4F      		sbci r25,-2
 15627 6a06 FC01      		movw r30,r24
 15628 6a08 4081      		ld r20,Z
 15629 6a0a 5181      		ldd r21,Z+1
 15630 6a0c 8981      		ldd r24,Y+1
 15631 6a0e 9A81      		ldd r25,Y+2
 15632 6a10 840F      		add r24,r20
 15633 6a12 951F      		adc r25,r21
 15634 6a14 880F      		lsl r24
 15635 6a16 991F      		rol r25
 15636 6a18 880F      		lsl r24
 15637 6a1a 991F      		rol r25
 15638 6a1c 820F      		add r24,r18
 15639 6a1e 931F      		adc r25,r19
 15640 6a20 FC01      		movw r30,r24
 15641 6a22 8081      		ld r24,Z
 15642 6a24 9181      		ldd r25,Z+1
 15643 6a26 A281      		ldd r26,Z+2
 15644 6a28 B381      		ldd r27,Z+3
 15645 6a2a 4FA9      		ldd r20,Y+55
 15646 6a2c 58AD      		ldd r21,Y+56
 15647 6a2e 2981      		ldd r18,Y+1
 15648 6a30 3A81      		ldd r19,Y+2
 15649 6a32 220F      		lsl r18
 15650 6a34 331F      		rol r19
 15651 6a36 220F      		lsl r18
 15652 6a38 331F      		rol r19
 15653 6a3a 240F      		add r18,r20
 15654 6a3c 351F      		adc r19,r21
 15655 6a3e F901      		movw r30,r18
 15656 6a40 2081      		ld r18,Z
 15657 6a42 3181      		ldd r19,Z+1
 15658 6a44 4281      		ldd r20,Z+2
 15659 6a46 5381      		ldd r21,Z+3
 15660 6a48 BC01      		movw r22,r24
 15661 6a4a CD01      		movw r24,r26
 15662 6a4c 0E94 0000 		call __mulsf3
 15663 6a50 DC01      		movw r26,r24
 15664 6a52 CB01      		movw r24,r22
 15665 6a54 9C01      		movw r18,r24
 15666 6a56 AD01      		movw r20,r26
 15667 6a58 688D      		ldd r22,Y+24
 15668 6a5a 798D      		ldd r23,Y+25
 15669 6a5c 8A8D      		ldd r24,Y+26
 15670 6a5e 9B8D      		ldd r25,Y+27
 15671 6a60 0E94 0000 		call __addsf3
 15672 6a64 DC01      		movw r26,r24
 15673 6a66 CB01      		movw r24,r22
 15674 6a68 888F      		std Y+24,r24
 15675 6a6a 998F      		std Y+25,r25
 15676 6a6c AA8F      		std Y+26,r26
 15677 6a6e BB8F      		std Y+27,r27
1894:lp_solve_5.5/lp_simplex.c ****       for(i = 1; i <= lp->columns; i++)
 15678               		.loc 2 1894 0 discriminator 3
 15679 6a70 8981      		ldd r24,Y+1
 15680 6a72 9A81      		ldd r25,Y+2
 15681 6a74 0196      		adiw r24,1
 15682 6a76 9A83      		std Y+2,r25
 15683 6a78 8983      		std Y+1,r24
 15684               	.L517:
1894:lp_solve_5.5/lp_simplex.c ****       for(i = 1; i <= lp->columns; i++)
 15685               		.loc 2 1894 0 is_stmt 0 discriminator 1
 15686 6a7a CE01      		movw r24,r28
 15687 6a7c CF96      		adiw r24,63
 15688 6a7e FC01      		movw r30,r24
 15689 6a80 8081      		ld r24,Z
 15690 6a82 9181      		ldd r25,Z+1
 15691 6a84 8451      		subi r24,20
 15692 6a86 9E4F      		sbci r25,-2
 15693 6a88 FC01      		movw r30,r24
 15694 6a8a 2081      		ld r18,Z
 15695 6a8c 3181      		ldd r19,Z+1
 15696 6a8e 8981      		ldd r24,Y+1
 15697 6a90 9A81      		ldd r25,Y+2
 15698 6a92 2817      		cp r18,r24
 15699 6a94 3907      		cpc r19,r25
 15700 6a96 04F0      		brlt .+2
 15701 6a98 00C0      		rjmp .L518
1896:lp_solve_5.5/lp_simplex.c ****       BestFeasSol[0] = hold;
 15702               		.loc 2 1896 0 is_stmt 1
 15703 6a9a 2DAD      		ldd r18,Y+61
 15704 6a9c 3EAD      		ldd r19,Y+62
 15705 6a9e 888D      		ldd r24,Y+24
 15706 6aa0 998D      		ldd r25,Y+25
 15707 6aa2 AA8D      		ldd r26,Y+26
 15708 6aa4 BB8D      		ldd r27,Y+27
 15709 6aa6 F901      		movw r30,r18
 15710 6aa8 8083      		st Z,r24
 15711 6aaa 9183      		std Z+1,r25
 15712 6aac A283      		std Z+2,r26
 15713 6aae B383      		std Z+3,r27
1897:lp_solve_5.5/lp_simplex.c ****       if(lp->lag_trace)
 15714               		.loc 2 1897 0
 15715 6ab0 CE01      		movw r24,r28
 15716 6ab2 CF96      		adiw r24,63
 15717 6ab4 FC01      		movw r30,r24
 15718 6ab6 8081      		ld r24,Z
 15719 6ab8 9181      		ldd r25,Z+1
 15720 6aba 8F5F      		subi r24,-1
 15721 6abc 9D4F      		sbci r25,-3
 15722 6abe FC01      		movw r30,r24
 15723 6ac0 8081      		ld r24,Z
 15724 6ac2 8823      		tst r24
 15725 6ac4 01F0      		breq .L519
1898:lp_solve_5.5/lp_simplex.c ****         report(lp, NORMAL, "lag_solve: Improved feasible solution at iteration %d of %g\n",
 15726               		.loc 2 1898 0
 15727 6ac6 8B8D      		ldd r24,Y+27
 15728 6ac8 8F93      		push r24
 15729 6aca 8A8D      		ldd r24,Y+26
 15730 6acc 8F93      		push r24
 15731 6ace 898D      		ldd r24,Y+25
 15732 6ad0 8F93      		push r24
 15733 6ad2 888D      		ldd r24,Y+24
 15734 6ad4 8F93      		push r24
 15735 6ad6 8E81      		ldd r24,Y+6
 15736 6ad8 8F93      		push r24
 15737 6ada 8D81      		ldd r24,Y+5
 15738 6adc 8F93      		push r24
 15739 6ade 80E0      		ldi r24,lo8(.LC48)
 15740 6ae0 90E0      		ldi r25,hi8(.LC48)
 15741 6ae2 892F      		mov r24,r25
 15742 6ae4 8F93      		push r24
 15743 6ae6 80E0      		ldi r24,lo8(.LC48)
 15744 6ae8 90E0      		ldi r25,hi8(.LC48)
 15745 6aea 8F93      		push r24
 15746 6aec 1F92      		push __zero_reg__
 15747 6aee 84E0      		ldi r24,lo8(4)
 15748 6af0 8F93      		push r24
 15749 6af2 CE01      		movw r24,r28
 15750 6af4 805C      		subi r24,-64
 15751 6af6 9F4F      		sbci r25,-1
 15752 6af8 FC01      		movw r30,r24
 15753 6afa 8081      		ld r24,Z
 15754 6afc 8F93      		push r24
 15755 6afe 8FAD      		ldd r24,Y+63
 15756 6b00 8F93      		push r24
 15757 6b02 0E94 0000 		call report
 15758 6b06 6DB7      		in r22,__SP_L__
 15759 6b08 7EB7      		in r23,__SP_H__
 15760 6b0a 645F      		subi r22,-12
 15761 6b0c 7F4F      		sbci r23,-1
 15762 6b0e 0FB6      		in __tmp_reg__,__SREG__
 15763 6b10 F894      		cli
 15764 6b12 DEBF      		out __SP_H__,r29
 15765 6b14 0FBE      		out __SREG__,__tmp_reg__
 15766 6b16 CDBF      		out __SP_L__,r28
 15767               	.L519:
1899:lp_solve_5.5/lp_simplex.c ****                            citer, hold);
1900:lp_solve_5.5/lp_simplex.c **** 
1901:lp_solve_5.5/lp_simplex.c ****       /* Reset variables */
1902:lp_solve_5.5/lp_simplex.c ****       Zbest = Znow;
 15768               		.loc 2 1902 0
 15769 6b18 8AA9      		ldd r24,Y+50
 15770 6b1a 9BA9      		ldd r25,Y+51
 15771 6b1c ACA9      		ldd r26,Y+52
 15772 6b1e BDA9      		ldd r27,Y+53
 15773 6b20 888B      		std Y+16,r24
 15774 6b22 998B      		std Y+17,r25
 15775 6b24 AA8B      		std Y+18,r26
 15776 6b26 BB8B      		std Y+19,r27
1903:lp_solve_5.5/lp_simplex.c ****       AnyFeas  = TRUE;
 15777               		.loc 2 1903 0
 15778 6b28 81E0      		ldi r24,lo8(1)
 15779 6b2a 8A87      		std Y+10,r24
1904:lp_solve_5.5/lp_simplex.c ****       nochange = 0;
 15780               		.loc 2 1904 0
 15781 6b2c 1886      		std Y+8,__zero_reg__
 15782 6b2e 1F82      		std Y+7,__zero_reg__
 15783 6b30 00C0      		rjmp .L520
 15784               	.L515:
1905:lp_solve_5.5/lp_simplex.c ****     }
1906:lp_solve_5.5/lp_simplex.c ****     else if(Znow == Zprev) {
 15785               		.loc 2 1906 0
 15786 6b32 2C85      		ldd r18,Y+12
 15787 6b34 3D85      		ldd r19,Y+13
 15788 6b36 4E85      		ldd r20,Y+14
 15789 6b38 5F85      		ldd r21,Y+15
 15790 6b3a 6AA9      		ldd r22,Y+50
 15791 6b3c 7BA9      		ldd r23,Y+51
 15792 6b3e 8CA9      		ldd r24,Y+52
 15793 6b40 9DA9      		ldd r25,Y+53
 15794 6b42 0E94 0000 		call __eqsf2
 15795 6b46 8823      		tst r24
 15796 6b48 01F4      		brne .L520
1907:lp_solve_5.5/lp_simplex.c ****       nochange++;
 15797               		.loc 2 1907 0
 15798 6b4a 8F81      		ldd r24,Y+7
 15799 6b4c 9885      		ldd r25,Y+8
 15800 6b4e 0196      		adiw r24,1
 15801 6b50 9887      		std Y+8,r25
 15802 6b52 8F83      		std Y+7,r24
1908:lp_solve_5.5/lp_simplex.c ****       if(nochange > LAG_SINGULARLIMIT) {
 15803               		.loc 2 1908 0
 15804 6b54 8F81      		ldd r24,Y+7
 15805 6b56 9885      		ldd r25,Y+8
 15806 6b58 0697      		sbiw r24,6
 15807 6b5a 04F0      		brlt .L520
1909:lp_solve_5.5/lp_simplex.c ****         Phi *= 0.5;
 15808               		.loc 2 1909 0
 15809 6b5c 20E0      		ldi r18,0
 15810 6b5e 30E0      		ldi r19,0
 15811 6b60 40E0      		ldi r20,0
 15812 6b62 5FE3      		ldi r21,lo8(63)
 15813 6b64 6C8D      		ldd r22,Y+28
 15814 6b66 7D8D      		ldd r23,Y+29
 15815 6b68 8E8D      		ldd r24,Y+30
 15816 6b6a 9F8D      		ldd r25,Y+31
 15817 6b6c 0E94 0000 		call __mulsf3
 15818 6b70 DC01      		movw r26,r24
 15819 6b72 CB01      		movw r24,r22
 15820 6b74 8C8F      		std Y+28,r24
 15821 6b76 9D8F      		std Y+29,r25
 15822 6b78 AE8F      		std Y+30,r26
 15823 6b7a BF8F      		std Y+31,r27
1910:lp_solve_5.5/lp_simplex.c ****         nochange = 0;
 15824               		.loc 2 1910 0
 15825 6b7c 1886      		std Y+8,__zero_reg__
 15826 6b7e 1F82      		std Y+7,__zero_reg__
 15827               	.L520:
1911:lp_solve_5.5/lp_simplex.c ****       }
1912:lp_solve_5.5/lp_simplex.c ****     }
1913:lp_solve_5.5/lp_simplex.c ****     Zprev = Znow;
 15828               		.loc 2 1913 0
 15829 6b80 8AA9      		ldd r24,Y+50
 15830 6b82 9BA9      		ldd r25,Y+51
 15831 6b84 ACA9      		ldd r26,Y+52
 15832 6b86 BDA9      		ldd r27,Y+53
 15833 6b88 8C87      		std Y+12,r24
 15834 6b8a 9D87      		std Y+13,r25
 15835 6b8c AE87      		std Y+14,r26
 15836 6b8e BF87      		std Y+15,r27
1914:lp_solve_5.5/lp_simplex.c **** 
1915:lp_solve_5.5/lp_simplex.c ****     /* Recompute the objective function values for the next iteration */
1916:lp_solve_5.5/lp_simplex.c ****     for(j = 1; j <= lp->columns; j++) {
 15837               		.loc 2 1916 0
 15838 6b90 81E0      		ldi r24,lo8(1)
 15839 6b92 90E0      		ldi r25,0
 15840 6b94 9C83      		std Y+4,r25
 15841 6b96 8B83      		std Y+3,r24
 15842 6b98 00C0      		rjmp .L522
 15843               	.L528:
1917:lp_solve_5.5/lp_simplex.c ****       hold = 0;
 15844               		.loc 2 1917 0
 15845 6b9a 188E      		std Y+24,__zero_reg__
 15846 6b9c 198E      		std Y+25,__zero_reg__
 15847 6b9e 1A8E      		std Y+26,__zero_reg__
 15848 6ba0 1B8E      		std Y+27,__zero_reg__
1918:lp_solve_5.5/lp_simplex.c ****       for(i = 1; i <= get_Lrows(lp); i++)
 15849               		.loc 2 1918 0
 15850 6ba2 81E0      		ldi r24,lo8(1)
 15851 6ba4 90E0      		ldi r25,0
 15852 6ba6 9A83      		std Y+2,r25
 15853 6ba8 8983      		std Y+1,r24
 15854 6baa 00C0      		rjmp .L523
 15855               	.L524:
1919:lp_solve_5.5/lp_simplex.c ****         hold += lp->lambda[i] * mat_getitem(lp->matL, i, j);
 15856               		.loc 2 1919 0 discriminator 3
 15857 6bac CE01      		movw r24,r28
 15858 6bae CF96      		adiw r24,63
 15859 6bb0 FC01      		movw r30,r24
 15860 6bb2 8081      		ld r24,Z
 15861 6bb4 9181      		ldd r25,Z+1
 15862 6bb6 9D5F      		subi r25,-3
 15863 6bb8 FC01      		movw r30,r24
 15864 6bba 2081      		ld r18,Z
 15865 6bbc 3181      		ldd r19,Z+1
 15866 6bbe 8981      		ldd r24,Y+1
 15867 6bc0 9A81      		ldd r25,Y+2
 15868 6bc2 880F      		lsl r24
 15869 6bc4 991F      		rol r25
 15870 6bc6 880F      		lsl r24
 15871 6bc8 991F      		rol r25
 15872 6bca 820F      		add r24,r18
 15873 6bcc 931F      		adc r25,r19
 15874 6bce FC01      		movw r30,r24
 15875 6bd0 C080      		ld r12,Z
 15876 6bd2 D180      		ldd r13,Z+1
 15877 6bd4 E280      		ldd r14,Z+2
 15878 6bd6 F380      		ldd r15,Z+3
 15879 6bd8 CE01      		movw r24,r28
 15880 6bda CF96      		adiw r24,63
 15881 6bdc FC01      		movw r30,r24
 15882 6bde 8081      		ld r24,Z
 15883 6be0 9181      		ldd r25,Z+1
 15884 6be2 8650      		subi r24,6
 15885 6be4 9D4F      		sbci r25,-3
 15886 6be6 FC01      		movw r30,r24
 15887 6be8 8081      		ld r24,Z
 15888 6bea 9181      		ldd r25,Z+1
 15889 6bec 4B81      		ldd r20,Y+3
 15890 6bee 5C81      		ldd r21,Y+4
 15891 6bf0 2981      		ldd r18,Y+1
 15892 6bf2 3A81      		ldd r19,Y+2
 15893 6bf4 B901      		movw r22,r18
 15894 6bf6 0E94 0000 		call mat_getitem
 15895 6bfa DC01      		movw r26,r24
 15896 6bfc CB01      		movw r24,r22
 15897 6bfe 9C01      		movw r18,r24
 15898 6c00 AD01      		movw r20,r26
 15899 6c02 C701      		movw r24,r14
 15900 6c04 B601      		movw r22,r12
 15901 6c06 0E94 0000 		call __mulsf3
 15902 6c0a DC01      		movw r26,r24
 15903 6c0c CB01      		movw r24,r22
 15904 6c0e 9C01      		movw r18,r24
 15905 6c10 AD01      		movw r20,r26
 15906 6c12 688D      		ldd r22,Y+24
 15907 6c14 798D      		ldd r23,Y+25
 15908 6c16 8A8D      		ldd r24,Y+26
 15909 6c18 9B8D      		ldd r25,Y+27
 15910 6c1a 0E94 0000 		call __addsf3
 15911 6c1e DC01      		movw r26,r24
 15912 6c20 CB01      		movw r24,r22
 15913 6c22 888F      		std Y+24,r24
 15914 6c24 998F      		std Y+25,r25
 15915 6c26 AA8F      		std Y+26,r26
 15916 6c28 BB8F      		std Y+27,r27
1918:lp_solve_5.5/lp_simplex.c ****       for(i = 1; i <= get_Lrows(lp); i++)
 15917               		.loc 2 1918 0 discriminator 3
 15918 6c2a 8981      		ldd r24,Y+1
 15919 6c2c 9A81      		ldd r25,Y+2
 15920 6c2e 0196      		adiw r24,1
 15921 6c30 9A83      		std Y+2,r25
 15922 6c32 8983      		std Y+1,r24
 15923               	.L523:
1918:lp_solve_5.5/lp_simplex.c ****       for(i = 1; i <= get_Lrows(lp); i++)
 15924               		.loc 2 1918 0 is_stmt 0 discriminator 1
 15925 6c34 CE01      		movw r24,r28
 15926 6c36 CF96      		adiw r24,63
 15927 6c38 FC01      		movw r30,r24
 15928 6c3a 8081      		ld r24,Z
 15929 6c3c 9181      		ldd r25,Z+1
 15930 6c3e 0E94 0000 		call get_Lrows
 15931 6c42 9C01      		movw r18,r24
 15932 6c44 8981      		ldd r24,Y+1
 15933 6c46 9A81      		ldd r25,Y+2
 15934 6c48 2817      		cp r18,r24
 15935 6c4a 3907      		cpc r19,r25
 15936 6c4c 04F0      		brlt .+2
 15937 6c4e 00C0      		rjmp .L524
1920:lp_solve_5.5/lp_simplex.c ****       ModObj[j] = OrigObj[j] - my_chsign(is_maxim(lp), hold);
 15938               		.loc 2 1920 0 is_stmt 1
 15939 6c50 29AD      		ldd r18,Y+57
 15940 6c52 3AAD      		ldd r19,Y+58
 15941 6c54 8B81      		ldd r24,Y+3
 15942 6c56 9C81      		ldd r25,Y+4
 15943 6c58 880F      		lsl r24
 15944 6c5a 991F      		rol r25
 15945 6c5c 880F      		lsl r24
 15946 6c5e 991F      		rol r25
 15947 6c60 8901      		movw r16,r18
 15948 6c62 080F      		add r16,r24
 15949 6c64 191F      		adc r17,r25
 15950 6c66 2FA9      		ldd r18,Y+55
 15951 6c68 38AD      		ldd r19,Y+56
 15952 6c6a 8B81      		ldd r24,Y+3
 15953 6c6c 9C81      		ldd r25,Y+4
 15954 6c6e 880F      		lsl r24
 15955 6c70 991F      		rol r25
 15956 6c72 880F      		lsl r24
 15957 6c74 991F      		rol r25
 15958 6c76 820F      		add r24,r18
 15959 6c78 931F      		adc r25,r19
 15960 6c7a FC01      		movw r30,r24
 15961 6c7c C080      		ld r12,Z
 15962 6c7e D180      		ldd r13,Z+1
 15963 6c80 E280      		ldd r14,Z+2
 15964 6c82 F380      		ldd r15,Z+3
 15965 6c84 CE01      		movw r24,r28
 15966 6c86 CF96      		adiw r24,63
 15967 6c88 FC01      		movw r30,r24
 15968 6c8a 8081      		ld r24,Z
 15969 6c8c 9181      		ldd r25,Z+1
 15970 6c8e 0E94 0000 		call is_maxim
 15971 6c92 8823      		tst r24
 15972 6c94 01F0      		breq .L525
 15973               		.loc 2 1920 0 is_stmt 0 discriminator 1
 15974 6c96 20E0      		ldi r18,0
 15975 6c98 30E0      		ldi r19,0
 15976 6c9a A901      		movw r20,r18
 15977 6c9c 688D      		ldd r22,Y+24
 15978 6c9e 798D      		ldd r23,Y+25
 15979 6ca0 8A8D      		ldd r24,Y+26
 15980 6ca2 9B8D      		ldd r25,Y+27
 15981 6ca4 0E94 0000 		call __nesf2
 15982 6ca8 8823      		tst r24
 15983 6caa 01F0      		breq .L525
 15984               		.loc 2 1920 0 discriminator 3
 15985 6cac 888D      		ldd r24,Y+24
 15986 6cae 998D      		ldd r25,Y+25
 15987 6cb0 AA8D      		ldd r26,Y+26
 15988 6cb2 BB8D      		ldd r27,Y+27
 15989 6cb4 B058      		subi r27,0x80
 15990 6cb6 00C0      		rjmp .L527
 15991               	.L525:
 15992               		.loc 2 1920 0 discriminator 4
 15993 6cb8 888D      		ldd r24,Y+24
 15994 6cba 998D      		ldd r25,Y+25
 15995 6cbc AA8D      		ldd r26,Y+26
 15996 6cbe BB8D      		ldd r27,Y+27
 15997               	.L527:
 15998               		.loc 2 1920 0 discriminator 6
 15999 6cc0 9C01      		movw r18,r24
 16000 6cc2 AD01      		movw r20,r26
 16001 6cc4 C701      		movw r24,r14
 16002 6cc6 B601      		movw r22,r12
 16003 6cc8 0E94 0000 		call __subsf3
 16004 6ccc DC01      		movw r26,r24
 16005 6cce CB01      		movw r24,r22
 16006 6cd0 F801      		movw r30,r16
 16007 6cd2 8083      		st Z,r24
 16008 6cd4 9183      		std Z+1,r25
 16009 6cd6 A283      		std Z+2,r26
 16010 6cd8 B383      		std Z+3,r27
1921:lp_solve_5.5/lp_simplex.c **** #ifndef DirectOverrideOF
1922:lp_solve_5.5/lp_simplex.c ****       set_mat(lp, 0, j, ModObj[j]);
 16011               		.loc 2 1922 0 is_stmt 1 discriminator 6
 16012 6cda 29AD      		ldd r18,Y+57
 16013 6cdc 3AAD      		ldd r19,Y+58
 16014 6cde 8B81      		ldd r24,Y+3
 16015 6ce0 9C81      		ldd r25,Y+4
 16016 6ce2 880F      		lsl r24
 16017 6ce4 991F      		rol r25
 16018 6ce6 880F      		lsl r24
 16019 6ce8 991F      		rol r25
 16020 6cea 820F      		add r24,r18
 16021 6cec 931F      		adc r25,r19
 16022 6cee FC01      		movw r30,r24
 16023 6cf0 8081      		ld r24,Z
 16024 6cf2 9181      		ldd r25,Z+1
 16025 6cf4 A281      		ldd r26,Z+2
 16026 6cf6 B381      		ldd r27,Z+3
 16027 6cf8 4B81      		ldd r20,Y+3
 16028 6cfa 5C81      		ldd r21,Y+4
 16029 6cfc 9E01      		movw r18,r28
 16030 6cfe 215C      		subi r18,-63
 16031 6d00 3F4F      		sbci r19,-1
 16032 6d02 F901      		movw r30,r18
 16033 6d04 0190      		ld __tmp_reg__,Z+
 16034 6d06 F081      		ld r31,Z
 16035 6d08 E02D      		mov r30,__tmp_reg__
 16036 6d0a 2996      		adiw r28,71-62
 16037 6d0c FFAF      		std Y+63,r31
 16038 6d0e EEAF      		std Y+62,r30
 16039 6d10 2997      		sbiw r28,71-62
 16040 6d12 8C01      		movw r16,r24
 16041 6d14 9D01      		movw r18,r26
 16042 6d16 60E0      		ldi r22,0
 16043 6d18 70E0      		ldi r23,0
 16044 6d1a 2996      		adiw r28,71-62
 16045 6d1c 8EAD      		ldd r24,Y+62
 16046 6d1e 9FAD      		ldd r25,Y+63
 16047 6d20 2997      		sbiw r28,71-62
 16048 6d22 0E94 0000 		call set_mat
1916:lp_solve_5.5/lp_simplex.c ****       hold = 0;
 16049               		.loc 2 1916 0 discriminator 6
 16050 6d26 8B81      		ldd r24,Y+3
 16051 6d28 9C81      		ldd r25,Y+4
 16052 6d2a 0196      		adiw r24,1
 16053 6d2c 9C83      		std Y+4,r25
 16054 6d2e 8B83      		std Y+3,r24
 16055               	.L522:
1916:lp_solve_5.5/lp_simplex.c ****       hold = 0;
 16056               		.loc 2 1916 0 is_stmt 0 discriminator 2
 16057 6d30 CE01      		movw r24,r28
 16058 6d32 CF96      		adiw r24,63
 16059 6d34 FC01      		movw r30,r24
 16060 6d36 8081      		ld r24,Z
 16061 6d38 9181      		ldd r25,Z+1
 16062 6d3a 8451      		subi r24,20
 16063 6d3c 9E4F      		sbci r25,-2
 16064 6d3e FC01      		movw r30,r24
 16065 6d40 2081      		ld r18,Z
 16066 6d42 3181      		ldd r19,Z+1
 16067 6d44 8B81      		ldd r24,Y+3
 16068 6d46 9C81      		ldd r25,Y+4
 16069 6d48 2817      		cp r18,r24
 16070 6d4a 3907      		cpc r19,r25
 16071 6d4c 04F0      		brlt .+2
 16072 6d4e 00C0      		rjmp .L528
1923:lp_solve_5.5/lp_simplex.c **** #endif
1924:lp_solve_5.5/lp_simplex.c ****     }
1925:lp_solve_5.5/lp_simplex.c **** 
1926:lp_solve_5.5/lp_simplex.c ****     /* Recompute the fixed part of the new objective function */
1927:lp_solve_5.5/lp_simplex.c ****     rhsmod = my_chsign(is_maxim(lp), get_rh(lp, 0));
 16073               		.loc 2 1927 0 is_stmt 1
 16074 6d50 CE01      		movw r24,r28
 16075 6d52 CF96      		adiw r24,63
 16076 6d54 FC01      		movw r30,r24
 16077 6d56 8081      		ld r24,Z
 16078 6d58 9181      		ldd r25,Z+1
 16079 6d5a 0E94 0000 		call is_maxim
 16080 6d5e 8823      		tst r24
 16081 6d60 01F0      		breq .L529
 16082               		.loc 2 1927 0 is_stmt 0 discriminator 1
 16083 6d62 CE01      		movw r24,r28
 16084 6d64 CF96      		adiw r24,63
 16085 6d66 FC01      		movw r30,r24
 16086 6d68 8081      		ld r24,Z
 16087 6d6a 9181      		ldd r25,Z+1
 16088 6d6c 60E0      		ldi r22,0
 16089 6d6e 70E0      		ldi r23,0
 16090 6d70 0E94 0000 		call get_rh
 16091 6d74 DC01      		movw r26,r24
 16092 6d76 CB01      		movw r24,r22
 16093 6d78 20E0      		ldi r18,0
 16094 6d7a 30E0      		ldi r19,0
 16095 6d7c A901      		movw r20,r18
 16096 6d7e BC01      		movw r22,r24
 16097 6d80 CD01      		movw r24,r26
 16098 6d82 0E94 0000 		call __nesf2
 16099 6d86 8823      		tst r24
 16100 6d88 01F0      		breq .L529
 16101               		.loc 2 1927 0 discriminator 3
 16102 6d8a CE01      		movw r24,r28
 16103 6d8c CF96      		adiw r24,63
 16104 6d8e FC01      		movw r30,r24
 16105 6d90 8081      		ld r24,Z
 16106 6d92 9181      		ldd r25,Z+1
 16107 6d94 60E0      		ldi r22,0
 16108 6d96 70E0      		ldi r23,0
 16109 6d98 0E94 0000 		call get_rh
 16110 6d9c DC01      		movw r26,r24
 16111 6d9e CB01      		movw r24,r22
 16112 6da0 B058      		subi r27,0x80
 16113 6da2 00C0      		rjmp .L531
 16114               	.L529:
 16115               		.loc 2 1927 0 discriminator 4
 16116 6da4 CE01      		movw r24,r28
 16117 6da6 CF96      		adiw r24,63
 16118 6da8 FC01      		movw r30,r24
 16119 6daa 8081      		ld r24,Z
 16120 6dac 9181      		ldd r25,Z+1
 16121 6dae 60E0      		ldi r22,0
 16122 6db0 70E0      		ldi r23,0
 16123 6db2 0E94 0000 		call get_rh
 16124 6db6 DC01      		movw r26,r24
 16125 6db8 CB01      		movw r24,r22
 16126               	.L531:
 16127               		.loc 2 1927 0 discriminator 6
 16128 6dba 8C8B      		std Y+20,r24
 16129 6dbc 9D8B      		std Y+21,r25
 16130 6dbe AE8B      		std Y+22,r26
 16131 6dc0 BF8B      		std Y+23,r27
1928:lp_solve_5.5/lp_simplex.c ****     for(i = 1; i <= get_Lrows(lp); i++)
 16132               		.loc 2 1928 0 is_stmt 1 discriminator 6
 16133 6dc2 81E0      		ldi r24,lo8(1)
 16134 6dc4 90E0      		ldi r25,0
 16135 6dc6 9A83      		std Y+2,r25
 16136 6dc8 8983      		std Y+1,r24
 16137 6dca 00C0      		rjmp .L532
 16138               	.L533:
1929:lp_solve_5.5/lp_simplex.c ****       rhsmod += lp->lambda[i] * lp->lag_rhs[i];
 16139               		.loc 2 1929 0 discriminator 3
 16140 6dcc CE01      		movw r24,r28
 16141 6dce CF96      		adiw r24,63
 16142 6dd0 FC01      		movw r30,r24
 16143 6dd2 8081      		ld r24,Z
 16144 6dd4 9181      		ldd r25,Z+1
 16145 6dd6 9D5F      		subi r25,-3
 16146 6dd8 FC01      		movw r30,r24
 16147 6dda 2081      		ld r18,Z
 16148 6ddc 3181      		ldd r19,Z+1
 16149 6dde 8981      		ldd r24,Y+1
 16150 6de0 9A81      		ldd r25,Y+2
 16151 6de2 880F      		lsl r24
 16152 6de4 991F      		rol r25
 16153 6de6 880F      		lsl r24
 16154 6de8 991F      		rol r25
 16155 6dea 820F      		add r24,r18
 16156 6dec 931F      		adc r25,r19
 16157 6dee FC01      		movw r30,r24
 16158 6df0 8081      		ld r24,Z
 16159 6df2 9181      		ldd r25,Z+1
 16160 6df4 A281      		ldd r26,Z+2
 16161 6df6 B381      		ldd r27,Z+3
 16162 6df8 9E01      		movw r18,r28
 16163 6dfa 215C      		subi r18,-63
 16164 6dfc 3F4F      		sbci r19,-1
 16165 6dfe F901      		movw r30,r18
 16166 6e00 2081      		ld r18,Z
 16167 6e02 3181      		ldd r19,Z+1
 16168 6e04 2450      		subi r18,4
 16169 6e06 3D4F      		sbci r19,-3
 16170 6e08 F901      		movw r30,r18
 16171 6e0a 4081      		ld r20,Z
 16172 6e0c 5181      		ldd r21,Z+1
 16173 6e0e 2981      		ldd r18,Y+1
 16174 6e10 3A81      		ldd r19,Y+2
 16175 6e12 220F      		lsl r18
 16176 6e14 331F      		rol r19
 16177 6e16 220F      		lsl r18
 16178 6e18 331F      		rol r19
 16179 6e1a 240F      		add r18,r20
 16180 6e1c 351F      		adc r19,r21
 16181 6e1e F901      		movw r30,r18
 16182 6e20 2081      		ld r18,Z
 16183 6e22 3181      		ldd r19,Z+1
 16184 6e24 4281      		ldd r20,Z+2
 16185 6e26 5381      		ldd r21,Z+3
 16186 6e28 BC01      		movw r22,r24
 16187 6e2a CD01      		movw r24,r26
 16188 6e2c 0E94 0000 		call __mulsf3
 16189 6e30 DC01      		movw r26,r24
 16190 6e32 CB01      		movw r24,r22
 16191 6e34 9C01      		movw r18,r24
 16192 6e36 AD01      		movw r20,r26
 16193 6e38 6C89      		ldd r22,Y+20
 16194 6e3a 7D89      		ldd r23,Y+21
 16195 6e3c 8E89      		ldd r24,Y+22
 16196 6e3e 9F89      		ldd r25,Y+23
 16197 6e40 0E94 0000 		call __addsf3
 16198 6e44 DC01      		movw r26,r24
 16199 6e46 CB01      		movw r24,r22
 16200 6e48 8C8B      		std Y+20,r24
 16201 6e4a 9D8B      		std Y+21,r25
 16202 6e4c AE8B      		std Y+22,r26
 16203 6e4e BF8B      		std Y+23,r27
1928:lp_solve_5.5/lp_simplex.c ****     for(i = 1; i <= get_Lrows(lp); i++)
 16204               		.loc 2 1928 0 discriminator 3
 16205 6e50 8981      		ldd r24,Y+1
 16206 6e52 9A81      		ldd r25,Y+2
 16207 6e54 0196      		adiw r24,1
 16208 6e56 9A83      		std Y+2,r25
 16209 6e58 8983      		std Y+1,r24
 16210               	.L532:
1928:lp_solve_5.5/lp_simplex.c ****     for(i = 1; i <= get_Lrows(lp); i++)
 16211               		.loc 2 1928 0 is_stmt 0 discriminator 1
 16212 6e5a CE01      		movw r24,r28
 16213 6e5c CF96      		adiw r24,63
 16214 6e5e FC01      		movw r30,r24
 16215 6e60 8081      		ld r24,Z
 16216 6e62 9181      		ldd r25,Z+1
 16217 6e64 0E94 0000 		call get_Lrows
 16218 6e68 9C01      		movw r18,r24
 16219 6e6a 8981      		ldd r24,Y+1
 16220 6e6c 9A81      		ldd r25,Y+2
 16221 6e6e 2817      		cp r18,r24
 16222 6e70 3907      		cpc r19,r25
 16223 6e72 04F0      		brlt .+2
 16224 6e74 00C0      		rjmp .L533
1930:lp_solve_5.5/lp_simplex.c **** 
1931:lp_solve_5.5/lp_simplex.c ****     /* Print trace/debugging information, if specified */
1932:lp_solve_5.5/lp_simplex.c ****     if(lp->lag_trace) {
 16225               		.loc 2 1932 0 is_stmt 1
 16226 6e76 CE01      		movw r24,r28
 16227 6e78 CF96      		adiw r24,63
 16228 6e7a FC01      		movw r30,r24
 16229 6e7c 8081      		ld r24,Z
 16230 6e7e 9181      		ldd r25,Z+1
 16231 6e80 8F5F      		subi r24,-1
 16232 6e82 9D4F      		sbci r25,-3
 16233 6e84 FC01      		movw r30,r24
 16234 6e86 8081      		ld r24,Z
 16235 6e88 8823      		tst r24
 16236 6e8a 01F4      		brne .+2
 16237 6e8c 00C0      		rjmp .L534
1933:lp_solve_5.5/lp_simplex.c ****       report(lp, IMPORTANT, "Zub: %10g Zlb: %10g Stepsize: %10g Phi: %10g Feas %d\n",
 16238               		.loc 2 1933 0
 16239 6e8e 8985      		ldd r24,Y+9
 16240 6e90 882F      		mov r24,r24
 16241 6e92 90E0      		ldi r25,0
 16242 6e94 292F      		mov r18,r25
 16243 6e96 2F93      		push r18
 16244 6e98 8F93      		push r24
 16245 6e9a 8F8D      		ldd r24,Y+31
 16246 6e9c 8F93      		push r24
 16247 6e9e 8E8D      		ldd r24,Y+30
 16248 6ea0 8F93      		push r24
 16249 6ea2 8D8D      		ldd r24,Y+29
 16250 6ea4 8F93      		push r24
 16251 6ea6 8C8D      		ldd r24,Y+28
 16252 6ea8 8F93      		push r24
 16253 6eaa 8BA1      		ldd r24,Y+35
 16254 6eac 8F93      		push r24
 16255 6eae 8AA1      		ldd r24,Y+34
 16256 6eb0 8F93      		push r24
 16257 6eb2 89A1      		ldd r24,Y+33
 16258 6eb4 8F93      		push r24
 16259 6eb6 88A1      		ldd r24,Y+32
 16260 6eb8 8F93      		push r24
 16261 6eba 8DA5      		ldd r24,Y+45
 16262 6ebc 8F93      		push r24
 16263 6ebe 8CA5      		ldd r24,Y+44
 16264 6ec0 8F93      		push r24
 16265 6ec2 8BA5      		ldd r24,Y+43
 16266 6ec4 8F93      		push r24
 16267 6ec6 8AA5      		ldd r24,Y+42
 16268 6ec8 8F93      		push r24
 16269 6eca 89A9      		ldd r24,Y+49
 16270 6ecc 8F93      		push r24
 16271 6ece 88A9      		ldd r24,Y+48
 16272 6ed0 8F93      		push r24
 16273 6ed2 8FA5      		ldd r24,Y+47
 16274 6ed4 8F93      		push r24
 16275 6ed6 8EA5      		ldd r24,Y+46
 16276 6ed8 8F93      		push r24
 16277 6eda 80E0      		ldi r24,lo8(.LC49)
 16278 6edc 90E0      		ldi r25,hi8(.LC49)
 16279 6ede 892F      		mov r24,r25
 16280 6ee0 8F93      		push r24
 16281 6ee2 80E0      		ldi r24,lo8(.LC49)
 16282 6ee4 90E0      		ldi r25,hi8(.LC49)
 16283 6ee6 8F93      		push r24
 16284 6ee8 1F92      		push __zero_reg__
 16285 6eea 83E0      		ldi r24,lo8(3)
 16286 6eec 8F93      		push r24
 16287 6eee CE01      		movw r24,r28
 16288 6ef0 805C      		subi r24,-64
 16289 6ef2 9F4F      		sbci r25,-1
 16290 6ef4 FC01      		movw r30,r24
 16291 6ef6 8081      		ld r24,Z
 16292 6ef8 8F93      		push r24
 16293 6efa 8FAD      		ldd r24,Y+63
 16294 6efc 8F93      		push r24
 16295 6efe 0E94 0000 		call report
 16296 6f02 6DB7      		in r22,__SP_L__
 16297 6f04 7EB7      		in r23,__SP_H__
 16298 6f06 685E      		subi r22,-24
 16299 6f08 7F4F      		sbci r23,-1
 16300 6f0a 0FB6      		in __tmp_reg__,__SREG__
 16301 6f0c F894      		cli
 16302 6f0e DEBF      		out __SP_H__,r29
 16303 6f10 0FBE      		out __SREG__,__tmp_reg__
 16304 6f12 CDBF      		out __SP_L__,r28
1934:lp_solve_5.5/lp_simplex.c ****                  (double) Zub, (double) Zlb, (double) StepSize, (double) Phi, LagFeas);
1935:lp_solve_5.5/lp_simplex.c ****       for(i = 1; i <= get_Lrows(lp); i++)
 16305               		.loc 2 1935 0
 16306 6f14 81E0      		ldi r24,lo8(1)
 16307 6f16 90E0      		ldi r25,0
 16308 6f18 9A83      		std Y+2,r25
 16309 6f1a 8983      		std Y+1,r24
 16310 6f1c 00C0      		rjmp .L535
 16311               	.L536:
1936:lp_solve_5.5/lp_simplex.c ****         report(lp, IMPORTANT, "%3d SubGrad %10g lambda %10g\n",
1937:lp_solve_5.5/lp_simplex.c ****                    i, (double) SubGrad[i], (double) lp->lambda[i]);
 16312               		.loc 2 1937 0 discriminator 3
 16313 6f1e CE01      		movw r24,r28
 16314 6f20 CF96      		adiw r24,63
 16315 6f22 FC01      		movw r30,r24
 16316 6f24 8081      		ld r24,Z
 16317 6f26 9181      		ldd r25,Z+1
 16318 6f28 9D5F      		subi r25,-3
 16319 6f2a FC01      		movw r30,r24
 16320 6f2c 2081      		ld r18,Z
 16321 6f2e 3181      		ldd r19,Z+1
 16322 6f30 8981      		ldd r24,Y+1
 16323 6f32 9A81      		ldd r25,Y+2
 16324 6f34 880F      		lsl r24
 16325 6f36 991F      		rol r25
 16326 6f38 880F      		lsl r24
 16327 6f3a 991F      		rol r25
 16328 6f3c 820F      		add r24,r18
 16329 6f3e 931F      		adc r25,r19
1936:lp_solve_5.5/lp_simplex.c ****         report(lp, IMPORTANT, "%3d SubGrad %10g lambda %10g\n",
 16330               		.loc 2 1936 0 discriminator 3
 16331 6f40 FC01      		movw r30,r24
 16332 6f42 2081      		ld r18,Z
 16333 6f44 3181      		ldd r19,Z+1
 16334 6f46 4281      		ldd r20,Z+2
 16335 6f48 5381      		ldd r21,Z+3
 16336               		.loc 2 1937 0 discriminator 3
 16337 6f4a 6BAD      		ldd r22,Y+59
 16338 6f4c 7CAD      		ldd r23,Y+60
 16339 6f4e 8981      		ldd r24,Y+1
 16340 6f50 9A81      		ldd r25,Y+2
 16341 6f52 880F      		lsl r24
 16342 6f54 991F      		rol r25
 16343 6f56 880F      		lsl r24
 16344 6f58 991F      		rol r25
 16345 6f5a 860F      		add r24,r22
 16346 6f5c 971F      		adc r25,r23
1936:lp_solve_5.5/lp_simplex.c ****         report(lp, IMPORTANT, "%3d SubGrad %10g lambda %10g\n",
 16347               		.loc 2 1936 0 discriminator 3
 16348 6f5e FC01      		movw r30,r24
 16349 6f60 8081      		ld r24,Z
 16350 6f62 9181      		ldd r25,Z+1
 16351 6f64 A281      		ldd r26,Z+2
 16352 6f66 B381      		ldd r27,Z+3
 16353 6f68 652F      		mov r22,r21
 16354 6f6a 6F93      		push r22
 16355 6f6c 642F      		mov r22,r20
 16356 6f6e 6F93      		push r22
 16357 6f70 632F      		mov r22,r19
 16358 6f72 6F93      		push r22
 16359 6f74 2F93      		push r18
 16360 6f76 2B2F      		mov r18,r27
 16361 6f78 2F93      		push r18
 16362 6f7a 2A2F      		mov r18,r26
 16363 6f7c 2F93      		push r18
 16364 6f7e 292F      		mov r18,r25
 16365 6f80 2F93      		push r18
 16366 6f82 8F93      		push r24
 16367 6f84 8A81      		ldd r24,Y+2
 16368 6f86 8F93      		push r24
 16369 6f88 8981      		ldd r24,Y+1
 16370 6f8a 8F93      		push r24
 16371 6f8c 80E0      		ldi r24,lo8(.LC50)
 16372 6f8e 90E0      		ldi r25,hi8(.LC50)
 16373 6f90 892F      		mov r24,r25
 16374 6f92 8F93      		push r24
 16375 6f94 80E0      		ldi r24,lo8(.LC50)
 16376 6f96 90E0      		ldi r25,hi8(.LC50)
 16377 6f98 8F93      		push r24
 16378 6f9a 1F92      		push __zero_reg__
 16379 6f9c 83E0      		ldi r24,lo8(3)
 16380 6f9e 8F93      		push r24
 16381 6fa0 CE01      		movw r24,r28
 16382 6fa2 805C      		subi r24,-64
 16383 6fa4 9F4F      		sbci r25,-1
 16384 6fa6 FC01      		movw r30,r24
 16385 6fa8 8081      		ld r24,Z
 16386 6faa 8F93      		push r24
 16387 6fac 8FAD      		ldd r24,Y+63
 16388 6fae 8F93      		push r24
 16389 6fb0 0E94 0000 		call report
 16390 6fb4 6DB7      		in r22,__SP_L__
 16391 6fb6 7EB7      		in r23,__SP_H__
 16392 6fb8 605F      		subi r22,-16
 16393 6fba 7F4F      		sbci r23,-1
 16394 6fbc 0FB6      		in __tmp_reg__,__SREG__
 16395 6fbe F894      		cli
 16396 6fc0 DEBF      		out __SP_H__,r29
 16397 6fc2 0FBE      		out __SREG__,__tmp_reg__
 16398 6fc4 CDBF      		out __SP_L__,r28
1935:lp_solve_5.5/lp_simplex.c ****         report(lp, IMPORTANT, "%3d SubGrad %10g lambda %10g\n",
 16399               		.loc 2 1935 0 discriminator 3
 16400 6fc6 8981      		ldd r24,Y+1
 16401 6fc8 9A81      		ldd r25,Y+2
 16402 6fca 0196      		adiw r24,1
 16403 6fcc 9A83      		std Y+2,r25
 16404 6fce 8983      		std Y+1,r24
 16405               	.L535:
1935:lp_solve_5.5/lp_simplex.c ****         report(lp, IMPORTANT, "%3d SubGrad %10g lambda %10g\n",
 16406               		.loc 2 1935 0 is_stmt 0 discriminator 1
 16407 6fd0 CE01      		movw r24,r28
 16408 6fd2 CF96      		adiw r24,63
 16409 6fd4 FC01      		movw r30,r24
 16410 6fd6 8081      		ld r24,Z
 16411 6fd8 9181      		ldd r25,Z+1
 16412 6fda 0E94 0000 		call get_Lrows
 16413 6fde 9C01      		movw r18,r24
 16414 6fe0 8981      		ldd r24,Y+1
 16415 6fe2 9A81      		ldd r25,Y+2
 16416 6fe4 2817      		cp r18,r24
 16417 6fe6 3907      		cpc r19,r25
 16418 6fe8 04F0      		brlt .+2
 16419 6fea 00C0      		rjmp .L536
1938:lp_solve_5.5/lp_simplex.c ****       if(lp->sum < 20)
 16420               		.loc 2 1938 0 is_stmt 1
 16421 6fec CE01      		movw r24,r28
 16422 6fee CF96      		adiw r24,63
 16423 6ff0 FC01      		movw r30,r24
 16424 6ff2 8081      		ld r24,Z
 16425 6ff4 9181      		ldd r25,Z+1
 16426 6ff6 8851      		subi r24,24
 16427 6ff8 9E4F      		sbci r25,-2
 16428 6ffa FC01      		movw r30,r24
 16429 6ffc 8081      		ld r24,Z
 16430 6ffe 9181      		ldd r25,Z+1
 16431 7000 4497      		sbiw r24,20
 16432 7002 04F4      		brge .L534
1939:lp_solve_5.5/lp_simplex.c ****         print_lp(lp);
 16433               		.loc 2 1939 0
 16434 7004 CE01      		movw r24,r28
 16435 7006 CF96      		adiw r24,63
 16436 7008 FC01      		movw r30,r24
 16437 700a 8081      		ld r24,Z
 16438 700c 9181      		ldd r25,Z+1
 16439 700e 0E94 0000 		call print_lp
 16440               	.L534:
1940:lp_solve_5.5/lp_simplex.c ****     }
1941:lp_solve_5.5/lp_simplex.c **** 
1942:lp_solve_5.5/lp_simplex.c ****     /* Solve the Lagrangean relaxation, handle failures and compute
1943:lp_solve_5.5/lp_simplex.c ****        the Lagrangean objective value, if successful */
1944:lp_solve_5.5/lp_simplex.c ****     i = spx_solve(lp);
 16441               		.loc 2 1944 0
 16442 7012 CE01      		movw r24,r28
 16443 7014 CF96      		adiw r24,63
 16444 7016 FC01      		movw r30,r24
 16445 7018 8081      		ld r24,Z
 16446 701a 9181      		ldd r25,Z+1
 16447 701c 0E94 0000 		call spx_solve
 16448 7020 9A83      		std Y+2,r25
 16449 7022 8983      		std Y+1,r24
1945:lp_solve_5.5/lp_simplex.c ****     if(lp->spx_status == UNBOUNDED) {
 16450               		.loc 2 1945 0
 16451 7024 CE01      		movw r24,r28
 16452 7026 CF96      		adiw r24,63
 16453 7028 FC01      		movw r30,r24
 16454 702a 8081      		ld r24,Z
 16455 702c 9181      		ldd r25,Z+1
 16456 702e 8A5F      		subi r24,-6
 16457 7030 9D4F      		sbci r25,-3
 16458 7032 FC01      		movw r30,r24
 16459 7034 8081      		ld r24,Z
 16460 7036 9181      		ldd r25,Z+1
 16461 7038 0397      		sbiw r24,3
 16462 703a 01F0      		breq .+2
 16463 703c 00C0      		rjmp .L537
1946:lp_solve_5.5/lp_simplex.c ****       if(lp->lag_trace) {
 16464               		.loc 2 1946 0
 16465 703e CE01      		movw r24,r28
 16466 7040 CF96      		adiw r24,63
 16467 7042 FC01      		movw r30,r24
 16468 7044 8081      		ld r24,Z
 16469 7046 9181      		ldd r25,Z+1
 16470 7048 8F5F      		subi r24,-1
 16471 704a 9D4F      		sbci r25,-3
 16472 704c FC01      		movw r30,r24
 16473 704e 8081      		ld r24,Z
 16474 7050 8823      		tst r24
 16475 7052 01F4      		brne .+2
 16476 7054 00C0      		rjmp .L582
1947:lp_solve_5.5/lp_simplex.c ****         report(lp, NORMAL, "lag_solve: Unbounded solution encountered with this OF:\n");
 16477               		.loc 2 1947 0
 16478 7056 80E0      		ldi r24,lo8(.LC51)
 16479 7058 90E0      		ldi r25,hi8(.LC51)
 16480 705a 892F      		mov r24,r25
 16481 705c 8F93      		push r24
 16482 705e 80E0      		ldi r24,lo8(.LC51)
 16483 7060 90E0      		ldi r25,hi8(.LC51)
 16484 7062 8F93      		push r24
 16485 7064 1F92      		push __zero_reg__
 16486 7066 84E0      		ldi r24,lo8(4)
 16487 7068 8F93      		push r24
 16488 706a CE01      		movw r24,r28
 16489 706c 805C      		subi r24,-64
 16490 706e 9F4F      		sbci r25,-1
 16491 7070 FC01      		movw r30,r24
 16492 7072 8081      		ld r24,Z
 16493 7074 8F93      		push r24
 16494 7076 8FAD      		ldd r24,Y+63
 16495 7078 8F93      		push r24
 16496 707a 0E94 0000 		call report
 16497 707e 0F90      		pop __tmp_reg__
 16498 7080 0F90      		pop __tmp_reg__
 16499 7082 0F90      		pop __tmp_reg__
 16500 7084 0F90      		pop __tmp_reg__
 16501 7086 0F90      		pop __tmp_reg__
 16502 7088 0F90      		pop __tmp_reg__
1948:lp_solve_5.5/lp_simplex.c ****         for(i = 1; i <= lp->columns; i++)
 16503               		.loc 2 1948 0
 16504 708a 81E0      		ldi r24,lo8(1)
 16505 708c 90E0      		ldi r25,0
 16506 708e 9A83      		std Y+2,r25
 16507 7090 8983      		std Y+1,r24
 16508 7092 00C0      		rjmp .L539
 16509               	.L540:
1949:lp_solve_5.5/lp_simplex.c ****           report(lp, NORMAL, RESULTVALUEMASK " ", (double) ModObj[i]);
 16510               		.loc 2 1949 0 discriminator 3
 16511 7094 29AD      		ldd r18,Y+57
 16512 7096 3AAD      		ldd r19,Y+58
 16513 7098 8981      		ldd r24,Y+1
 16514 709a 9A81      		ldd r25,Y+2
 16515 709c 880F      		lsl r24
 16516 709e 991F      		rol r25
 16517 70a0 880F      		lsl r24
 16518 70a2 991F      		rol r25
 16519 70a4 820F      		add r24,r18
 16520 70a6 931F      		adc r25,r19
 16521 70a8 FC01      		movw r30,r24
 16522 70aa 8081      		ld r24,Z
 16523 70ac 9181      		ldd r25,Z+1
 16524 70ae A281      		ldd r26,Z+2
 16525 70b0 B381      		ldd r27,Z+3
 16526 70b2 2B2F      		mov r18,r27
 16527 70b4 2F93      		push r18
 16528 70b6 2A2F      		mov r18,r26
 16529 70b8 2F93      		push r18
 16530 70ba 292F      		mov r18,r25
 16531 70bc 2F93      		push r18
 16532 70be 8F93      		push r24
 16533 70c0 80E0      		ldi r24,lo8(.LC52)
 16534 70c2 90E0      		ldi r25,hi8(.LC52)
 16535 70c4 892F      		mov r24,r25
 16536 70c6 8F93      		push r24
 16537 70c8 80E0      		ldi r24,lo8(.LC52)
 16538 70ca 90E0      		ldi r25,hi8(.LC52)
 16539 70cc 8F93      		push r24
 16540 70ce 1F92      		push __zero_reg__
 16541 70d0 84E0      		ldi r24,lo8(4)
 16542 70d2 8F93      		push r24
 16543 70d4 CE01      		movw r24,r28
 16544 70d6 805C      		subi r24,-64
 16545 70d8 9F4F      		sbci r25,-1
 16546 70da FC01      		movw r30,r24
 16547 70dc 8081      		ld r24,Z
 16548 70de 8F93      		push r24
 16549 70e0 8FAD      		ldd r24,Y+63
 16550 70e2 8F93      		push r24
 16551 70e4 0E94 0000 		call report
 16552 70e8 6DB7      		in r22,__SP_L__
 16553 70ea 7EB7      		in r23,__SP_H__
 16554 70ec 665F      		subi r22,-10
 16555 70ee 7F4F      		sbci r23,-1
 16556 70f0 0FB6      		in __tmp_reg__,__SREG__
 16557 70f2 F894      		cli
 16558 70f4 DEBF      		out __SP_H__,r29
 16559 70f6 0FBE      		out __SREG__,__tmp_reg__
 16560 70f8 CDBF      		out __SP_L__,r28
1948:lp_solve_5.5/lp_simplex.c ****         for(i = 1; i <= lp->columns; i++)
 16561               		.loc 2 1948 0 discriminator 3
 16562 70fa 8981      		ldd r24,Y+1
 16563 70fc 9A81      		ldd r25,Y+2
 16564 70fe 0196      		adiw r24,1
 16565 7100 9A83      		std Y+2,r25
 16566 7102 8983      		std Y+1,r24
 16567               	.L539:
1948:lp_solve_5.5/lp_simplex.c ****         for(i = 1; i <= lp->columns; i++)
 16568               		.loc 2 1948 0 is_stmt 0 discriminator 1
 16569 7104 CE01      		movw r24,r28
 16570 7106 CF96      		adiw r24,63
 16571 7108 FC01      		movw r30,r24
 16572 710a 8081      		ld r24,Z
 16573 710c 9181      		ldd r25,Z+1
 16574 710e 8451      		subi r24,20
 16575 7110 9E4F      		sbci r25,-2
 16576 7112 FC01      		movw r30,r24
 16577 7114 2081      		ld r18,Z
 16578 7116 3181      		ldd r19,Z+1
 16579 7118 8981      		ldd r24,Y+1
 16580 711a 9A81      		ldd r25,Y+2
 16581 711c 2817      		cp r18,r24
 16582 711e 3907      		cpc r19,r25
 16583 7120 04F0      		brlt .+2
 16584 7122 00C0      		rjmp .L540
1950:lp_solve_5.5/lp_simplex.c ****       }
1951:lp_solve_5.5/lp_simplex.c ****       goto Leave;
 16585               		.loc 2 1951 0 is_stmt 1
 16586 7124 00C0      		rjmp .L582
 16587               	.L537:
1952:lp_solve_5.5/lp_simplex.c ****     }
1953:lp_solve_5.5/lp_simplex.c ****     else if((lp->spx_status == NUMFAILURE)   || (lp->spx_status == PROCFAIL) ||
 16588               		.loc 2 1953 0
 16589 7126 CE01      		movw r24,r28
 16590 7128 CF96      		adiw r24,63
 16591 712a FC01      		movw r30,r24
 16592 712c 8081      		ld r24,Z
 16593 712e 9181      		ldd r25,Z+1
 16594 7130 8A5F      		subi r24,-6
 16595 7132 9D4F      		sbci r25,-3
 16596 7134 FC01      		movw r30,r24
 16597 7136 8081      		ld r24,Z
 16598 7138 9181      		ldd r25,Z+1
 16599 713a 0597      		sbiw r24,5
 16600 713c 01F0      		breq .L542
 16601               		.loc 2 1953 0 is_stmt 0 discriminator 1
 16602 713e CE01      		movw r24,r28
 16603 7140 CF96      		adiw r24,63
 16604 7142 FC01      		movw r30,r24
 16605 7144 8081      		ld r24,Z
 16606 7146 9181      		ldd r25,Z+1
 16607 7148 8A5F      		subi r24,-6
 16608 714a 9D4F      		sbci r25,-3
 16609 714c FC01      		movw r30,r24
 16610 714e 8081      		ld r24,Z
 16611 7150 9181      		ldd r25,Z+1
 16612 7152 0A97      		sbiw r24,10
 16613 7154 01F0      		breq .L542
1954:lp_solve_5.5/lp_simplex.c ****             (lp->spx_status == USERABORT) || (lp->spx_status == TIMEOUT) ||
 16614               		.loc 2 1954 0 is_stmt 1 discriminator 2
 16615 7156 CE01      		movw r24,r28
 16616 7158 CF96      		adiw r24,63
 16617 715a FC01      		movw r30,r24
 16618 715c 8081      		ld r24,Z
 16619 715e 9181      		ldd r25,Z+1
 16620 7160 8A5F      		subi r24,-6
 16621 7162 9D4F      		sbci r25,-3
 16622 7164 FC01      		movw r30,r24
 16623 7166 8081      		ld r24,Z
 16624 7168 9181      		ldd r25,Z+1
1953:lp_solve_5.5/lp_simplex.c ****             (lp->spx_status == USERABORT) || (lp->spx_status == TIMEOUT) ||
 16625               		.loc 2 1953 0 discriminator 2
 16626 716a 0697      		sbiw r24,6
 16627 716c 01F0      		breq .L542
 16628               		.loc 2 1954 0
 16629 716e CE01      		movw r24,r28
 16630 7170 CF96      		adiw r24,63
 16631 7172 FC01      		movw r30,r24
 16632 7174 8081      		ld r24,Z
 16633 7176 9181      		ldd r25,Z+1
 16634 7178 8A5F      		subi r24,-6
 16635 717a 9D4F      		sbci r25,-3
 16636 717c FC01      		movw r30,r24
 16637 717e 8081      		ld r24,Z
 16638 7180 9181      		ldd r25,Z+1
 16639 7182 0797      		sbiw r24,7
 16640 7184 01F0      		breq .L542
1955:lp_solve_5.5/lp_simplex.c ****             (lp->spx_status == INFEASIBLE)) {
 16641               		.loc 2 1955 0 discriminator 1
 16642 7186 CE01      		movw r24,r28
 16643 7188 CF96      		adiw r24,63
 16644 718a FC01      		movw r30,r24
 16645 718c 8081      		ld r24,Z
 16646 718e 9181      		ldd r25,Z+1
 16647 7190 8A5F      		subi r24,-6
 16648 7192 9D4F      		sbci r25,-3
 16649 7194 FC01      		movw r30,r24
 16650 7196 8081      		ld r24,Z
 16651 7198 9181      		ldd r25,Z+1
1954:lp_solve_5.5/lp_simplex.c ****             (lp->spx_status == USERABORT) || (lp->spx_status == TIMEOUT) ||
 16652               		.loc 2 1954 0 discriminator 1
 16653 719a 0297      		sbiw r24,2
 16654 719c 01F4      		brne .L543
 16655               	.L542:
1956:lp_solve_5.5/lp_simplex.c ****       lp->lag_status = lp->spx_status;
 16656               		.loc 2 1956 0
 16657 719e CE01      		movw r24,r28
 16658 71a0 CF96      		adiw r24,63
 16659 71a2 FC01      		movw r30,r24
 16660 71a4 8081      		ld r24,Z
 16661 71a6 9181      		ldd r25,Z+1
 16662 71a8 8A5F      		subi r24,-6
 16663 71aa 9D4F      		sbci r25,-3
 16664 71ac FC01      		movw r30,r24
 16665 71ae 2081      		ld r18,Z
 16666 71b0 3181      		ldd r19,Z+1
 16667 71b2 CE01      		movw r24,r28
 16668 71b4 CF96      		adiw r24,63
 16669 71b6 FC01      		movw r30,r24
 16670 71b8 8081      		ld r24,Z
 16671 71ba 9181      		ldd r25,Z+1
 16672 71bc 885F      		subi r24,-8
 16673 71be 9D4F      		sbci r25,-3
 16674 71c0 FC01      		movw r30,r24
 16675 71c2 3183      		std Z+1,r19
 16676 71c4 2083      		st Z,r18
 16677               	.L543:
1957:lp_solve_5.5/lp_simplex.c ****     }
1958:lp_solve_5.5/lp_simplex.c **** 
1959:lp_solve_5.5/lp_simplex.c ****     /* Compare optimal bases and contract if we have basis stationarity */
1960:lp_solve_5.5/lp_simplex.c **** #ifdef LagBasisContract
1961:lp_solve_5.5/lp_simplex.c ****     same_basis = compare_basis(lp);
 16678               		.loc 2 1961 0
 16679 71c6 CE01      		movw r24,r28
 16680 71c8 CF96      		adiw r24,63
 16681 71ca FC01      		movw r30,r24
 16682 71cc 8081      		ld r24,Z
 16683 71ce 9181      		ldd r25,Z+1
 16684 71d0 0E94 0000 		call compare_basis
 16685 71d4 8EAB      		std Y+54,r24
1962:lp_solve_5.5/lp_simplex.c ****     if(LagFeas &&
 16686               		.loc 2 1962 0
 16687 71d6 8985      		ldd r24,Y+9
 16688 71d8 8823      		tst r24
 16689 71da 01F0      		breq .L544
 16690               		.loc 2 1962 0 is_stmt 0 discriminator 1
 16691 71dc 8EA9      		ldd r24,Y+54
 16692 71de 8823      		tst r24
 16693 71e0 01F4      		brne .L544
1963:lp_solve_5.5/lp_simplex.c ****        !same_basis) {
1964:lp_solve_5.5/lp_simplex.c ****       pop_basis(lp, FALSE);
 16694               		.loc 2 1964 0 is_stmt 1
 16695 71e2 CE01      		movw r24,r28
 16696 71e4 CF96      		adiw r24,63
 16697 71e6 FC01      		movw r30,r24
 16698 71e8 8081      		ld r24,Z
 16699 71ea 9181      		ldd r25,Z+1
 16700 71ec 60E0      		ldi r22,0
 16701 71ee 0E94 0000 		call pop_basis
1965:lp_solve_5.5/lp_simplex.c ****       push_basis(lp, NULL, NULL, NULL);
 16702               		.loc 2 1965 0
 16703 71f2 CE01      		movw r24,r28
 16704 71f4 CF96      		adiw r24,63
 16705 71f6 FC01      		movw r30,r24
 16706 71f8 8081      		ld r24,Z
 16707 71fa 9181      		ldd r25,Z+1
 16708 71fc 20E0      		ldi r18,0
 16709 71fe 30E0      		ldi r19,0
 16710 7200 40E0      		ldi r20,0
 16711 7202 50E0      		ldi r21,0
 16712 7204 60E0      		ldi r22,0
 16713 7206 70E0      		ldi r23,0
 16714 7208 0E94 0000 		call push_basis
1966:lp_solve_5.5/lp_simplex.c ****       Phi *= DEF_LAGCONTRACT;
 16715               		.loc 2 1966 0
 16716 720c 26E6      		ldi r18,lo8(102)
 16717 720e 36E6      		ldi r19,lo8(102)
 16718 7210 46E6      		ldi r20,lo8(102)
 16719 7212 5FE3      		ldi r21,lo8(63)
 16720 7214 6C8D      		ldd r22,Y+28
 16721 7216 7D8D      		ldd r23,Y+29
 16722 7218 8E8D      		ldd r24,Y+30
 16723 721a 9F8D      		ldd r25,Y+31
 16724 721c 0E94 0000 		call __mulsf3
 16725 7220 DC01      		movw r26,r24
 16726 7222 CB01      		movw r24,r22
 16727 7224 8C8F      		std Y+28,r24
 16728 7226 9D8F      		std Y+29,r25
 16729 7228 AE8F      		std Y+30,r26
 16730 722a BF8F      		std Y+31,r27
 16731               	.L544:
1967:lp_solve_5.5/lp_simplex.c ****     }
1968:lp_solve_5.5/lp_simplex.c ****     if(lp->lag_trace) {
 16732               		.loc 2 1968 0
 16733 722c CE01      		movw r24,r28
 16734 722e CF96      		adiw r24,63
 16735 7230 FC01      		movw r30,r24
 16736 7232 8081      		ld r24,Z
 16737 7234 9181      		ldd r25,Z+1
 16738 7236 8F5F      		subi r24,-1
 16739 7238 9D4F      		sbci r25,-3
 16740 723a FC01      		movw r30,r24
 16741 723c 8081      		ld r24,Z
 16742 723e 8823      		tst r24
 16743 7240 01F4      		brne .+2
 16744 7242 00C0      		rjmp .L493
1969:lp_solve_5.5/lp_simplex.c ****       report(lp, DETAILED, "lag_solve: Simplex status code %d, same basis %s\n",
 16745               		.loc 2 1969 0
 16746 7244 8EA9      		ldd r24,Y+54
 16747 7246 8823      		tst r24
 16748 7248 01F4      		brne .L545
 16749               		.loc 2 1969 0 is_stmt 0 discriminator 1
 16750 724a 80E0      		ldi r24,lo8(.LC8)
 16751 724c 90E0      		ldi r25,hi8(.LC8)
 16752 724e 00C0      		rjmp .L546
 16753               	.L545:
 16754               		.loc 2 1969 0 discriminator 2
 16755 7250 80E0      		ldi r24,lo8(.LC9)
 16756 7252 90E0      		ldi r25,hi8(.LC9)
 16757               	.L546:
 16758               		.loc 2 1969 0 discriminator 4
 16759 7254 9E01      		movw r18,r28
 16760 7256 215C      		subi r18,-63
 16761 7258 3F4F      		sbci r19,-1
 16762 725a F901      		movw r30,r18
 16763 725c 2081      		ld r18,Z
 16764 725e 3181      		ldd r19,Z+1
 16765 7260 2A5F      		subi r18,-6
 16766 7262 3D4F      		sbci r19,-3
 16767 7264 F901      		movw r30,r18
 16768 7266 2081      		ld r18,Z
 16769 7268 3181      		ldd r19,Z+1
 16770 726a 492F      		mov r20,r25
 16771 726c 4F93      		push r20
 16772 726e 8F93      		push r24
 16773 7270 832F      		mov r24,r19
 16774 7272 8F93      		push r24
 16775 7274 822F      		mov r24,r18
 16776 7276 8F93      		push r24
 16777 7278 80E0      		ldi r24,lo8(.LC53)
 16778 727a 90E0      		ldi r25,hi8(.LC53)
 16779 727c 892F      		mov r24,r25
 16780 727e 8F93      		push r24
 16781 7280 80E0      		ldi r24,lo8(.LC53)
 16782 7282 90E0      		ldi r25,hi8(.LC53)
 16783 7284 8F93      		push r24
 16784 7286 1F92      		push __zero_reg__
 16785 7288 85E0      		ldi r24,lo8(5)
 16786 728a 8F93      		push r24
 16787 728c CE01      		movw r24,r28
 16788 728e 805C      		subi r24,-64
 16789 7290 9F4F      		sbci r25,-1
 16790 7292 FC01      		movw r30,r24
 16791 7294 8081      		ld r24,Z
 16792 7296 8F93      		push r24
 16793 7298 8FAD      		ldd r24,Y+63
 16794 729a 8F93      		push r24
 16795 729c 0E94 0000 		call report
 16796 72a0 6DB7      		in r22,__SP_L__
 16797 72a2 7EB7      		in r23,__SP_H__
 16798 72a4 665F      		subi r22,-10
 16799 72a6 7F4F      		sbci r23,-1
 16800 72a8 0FB6      		in __tmp_reg__,__SREG__
 16801 72aa F894      		cli
 16802 72ac DEBF      		out __SP_H__,r29
 16803 72ae 0FBE      		out __SREG__,__tmp_reg__
 16804 72b0 CDBF      		out __SP_L__,r28
1970:lp_solve_5.5/lp_simplex.c ****                  lp->spx_status, my_boolstr(same_basis));
1971:lp_solve_5.5/lp_simplex.c ****       print_solution(lp, 1);
 16805               		.loc 2 1971 0 is_stmt 1 discriminator 4
 16806 72b2 CE01      		movw r24,r28
 16807 72b4 CF96      		adiw r24,63
 16808 72b6 FC01      		movw r30,r24
 16809 72b8 8081      		ld r24,Z
 16810 72ba 9181      		ldd r25,Z+1
 16811 72bc 61E0      		ldi r22,lo8(1)
 16812 72be 70E0      		ldi r23,0
 16813 72c0 0E94 0000 		call print_solution
 16814               	.L493:
1826:lp_solve_5.5/lp_simplex.c **** 
 16815               		.loc 2 1826 0
 16816 72c4 CE01      		movw r24,r28
 16817 72c6 CF96      		adiw r24,63
 16818 72c8 FC01      		movw r30,r24
 16819 72ca 8081      		ld r24,Z
 16820 72cc 9181      		ldd r25,Z+1
 16821 72ce 885F      		subi r24,-8
 16822 72d0 9D4F      		sbci r25,-3
 16823 72d2 FC01      		movw r30,r24
 16824 72d4 8081      		ld r24,Z
 16825 72d6 9181      		ldd r25,Z+1
 16826 72d8 0897      		sbiw r24,8
 16827 72da 01F4      		brne .L506
1826:lp_solve_5.5/lp_simplex.c **** 
 16828               		.loc 2 1826 0 is_stmt 0 discriminator 1
 16829 72dc CE01      		movw r24,r28
 16830 72de 8B5B      		subi r24,-69
 16831 72e0 9F4F      		sbci r25,-1
 16832 72e2 2D81      		ldd r18,Y+5
 16833 72e4 3E81      		ldd r19,Y+6
 16834 72e6 FC01      		movw r30,r24
 16835 72e8 8081      		ld r24,Z
 16836 72ea 9181      		ldd r25,Z+1
 16837 72ec 2817      		cp r18,r24
 16838 72ee 3907      		cpc r19,r25
 16839 72f0 04F4      		brge .+2
 16840 72f2 00C0      		rjmp .L547
 16841 72f4 00C0      		rjmp .L506
 16842               	.L581:
1859:lp_solve_5.5/lp_simplex.c **** 
 16843               		.loc 2 1859 0 is_stmt 1
 16844 72f6 0000      		nop
 16845               	.L506:
1972:lp_solve_5.5/lp_simplex.c ****     }
1973:lp_solve_5.5/lp_simplex.c **** #endif
1974:lp_solve_5.5/lp_simplex.c ****   }
1975:lp_solve_5.5/lp_simplex.c **** 
1976:lp_solve_5.5/lp_simplex.c ****   /* Transfer solution values */
1977:lp_solve_5.5/lp_simplex.c ****   if(AnyFeas) {
 16846               		.loc 2 1977 0
 16847 72f8 8A85      		ldd r24,Y+10
 16848 72fa 8823      		tst r24
 16849 72fc 01F4      		brne .+2
 16850 72fe 00C0      		rjmp .L541
1978:lp_solve_5.5/lp_simplex.c ****     /*lp->lag_bound = my_chsign(is_maxim(lp), Zbest);*/
1979:lp_solve_5.5/lp_simplex.c ****     for(i = 0; i <= lp->sum; i++)
 16851               		.loc 2 1979 0
 16852 7300 1A82      		std Y+2,__zero_reg__
 16853 7302 1982      		std Y+1,__zero_reg__
 16854 7304 00C0      		rjmp .L548
 16855               	.L549:
1980:lp_solve_5.5/lp_simplex.c ****       lp->solution[i] = BestFeasSol[i];
 16856               		.loc 2 1980 0 discriminator 3
 16857 7306 CE01      		movw r24,r28
 16858 7308 CF96      		adiw r24,63
 16859 730a FC01      		movw r30,r24
 16860 730c 8081      		ld r24,Z
 16861 730e 9181      		ldd r25,Z+1
 16862 7310 8E5E      		subi r24,-18
 16863 7312 9D4F      		sbci r25,-3
 16864 7314 FC01      		movw r30,r24
 16865 7316 2081      		ld r18,Z
 16866 7318 3181      		ldd r19,Z+1
 16867 731a 8981      		ldd r24,Y+1
 16868 731c 9A81      		ldd r25,Y+2
 16869 731e 880F      		lsl r24
 16870 7320 991F      		rol r25
 16871 7322 880F      		lsl r24
 16872 7324 991F      		rol r25
 16873 7326 280F      		add r18,r24
 16874 7328 391F      		adc r19,r25
 16875 732a 4DAD      		ldd r20,Y+61
 16876 732c 5EAD      		ldd r21,Y+62
 16877 732e 8981      		ldd r24,Y+1
 16878 7330 9A81      		ldd r25,Y+2
 16879 7332 880F      		lsl r24
 16880 7334 991F      		rol r25
 16881 7336 880F      		lsl r24
 16882 7338 991F      		rol r25
 16883 733a 840F      		add r24,r20
 16884 733c 951F      		adc r25,r21
 16885 733e FC01      		movw r30,r24
 16886 7340 8081      		ld r24,Z
 16887 7342 9181      		ldd r25,Z+1
 16888 7344 A281      		ldd r26,Z+2
 16889 7346 B381      		ldd r27,Z+3
 16890 7348 F901      		movw r30,r18
 16891 734a 8083      		st Z,r24
 16892 734c 9183      		std Z+1,r25
 16893 734e A283      		std Z+2,r26
 16894 7350 B383      		std Z+3,r27
1979:lp_solve_5.5/lp_simplex.c ****       lp->solution[i] = BestFeasSol[i];
 16895               		.loc 2 1979 0 discriminator 3
 16896 7352 8981      		ldd r24,Y+1
 16897 7354 9A81      		ldd r25,Y+2
 16898 7356 0196      		adiw r24,1
 16899 7358 9A83      		std Y+2,r25
 16900 735a 8983      		std Y+1,r24
 16901               	.L548:
1979:lp_solve_5.5/lp_simplex.c ****       lp->solution[i] = BestFeasSol[i];
 16902               		.loc 2 1979 0 is_stmt 0 discriminator 1
 16903 735c CE01      		movw r24,r28
 16904 735e CF96      		adiw r24,63
 16905 7360 FC01      		movw r30,r24
 16906 7362 8081      		ld r24,Z
 16907 7364 9181      		ldd r25,Z+1
 16908 7366 8851      		subi r24,24
 16909 7368 9E4F      		sbci r25,-2
 16910 736a FC01      		movw r30,r24
 16911 736c 2081      		ld r18,Z
 16912 736e 3181      		ldd r19,Z+1
 16913 7370 8981      		ldd r24,Y+1
 16914 7372 9A81      		ldd r25,Y+2
 16915 7374 2817      		cp r18,r24
 16916 7376 3907      		cpc r19,r25
 16917 7378 04F4      		brge .L549
1981:lp_solve_5.5/lp_simplex.c ****     transfer_solution(lp, TRUE);
 16918               		.loc 2 1981 0 is_stmt 1
 16919 737a CE01      		movw r24,r28
 16920 737c CF96      		adiw r24,63
 16921 737e FC01      		movw r30,r24
 16922 7380 8081      		ld r24,Z
 16923 7382 9181      		ldd r25,Z+1
 16924 7384 61E0      		ldi r22,lo8(1)
 16925 7386 0E94 0000 		call transfer_solution
1982:lp_solve_5.5/lp_simplex.c ****     if(!is_maxim(lp))
 16926               		.loc 2 1982 0
 16927 738a CE01      		movw r24,r28
 16928 738c CF96      		adiw r24,63
 16929 738e FC01      		movw r30,r24
 16930 7390 8081      		ld r24,Z
 16931 7392 9181      		ldd r25,Z+1
 16932 7394 0E94 0000 		call is_maxim
 16933 7398 8823      		tst r24
 16934 739a 01F0      		breq .+2
 16935 739c 00C0      		rjmp .L541
1983:lp_solve_5.5/lp_simplex.c ****       for(i = 1; i <= get_Lrows(lp); i++)
 16936               		.loc 2 1983 0
 16937 739e 81E0      		ldi r24,lo8(1)
 16938 73a0 90E0      		ldi r25,0
 16939 73a2 9A83      		std Y+2,r25
 16940 73a4 8983      		std Y+1,r24
 16941 73a6 00C0      		rjmp .L550
 16942               	.L554:
1984:lp_solve_5.5/lp_simplex.c ****         lp->lambda[i] = my_flipsign(lp->lambda[i]);
 16943               		.loc 2 1984 0
 16944 73a8 CE01      		movw r24,r28
 16945 73aa CF96      		adiw r24,63
 16946 73ac FC01      		movw r30,r24
 16947 73ae 8081      		ld r24,Z
 16948 73b0 9181      		ldd r25,Z+1
 16949 73b2 9D5F      		subi r25,-3
 16950 73b4 FC01      		movw r30,r24
 16951 73b6 2081      		ld r18,Z
 16952 73b8 3181      		ldd r19,Z+1
 16953 73ba 8981      		ldd r24,Y+1
 16954 73bc 9A81      		ldd r25,Y+2
 16955 73be 880F      		lsl r24
 16956 73c0 991F      		rol r25
 16957 73c2 880F      		lsl r24
 16958 73c4 991F      		rol r25
 16959 73c6 8901      		movw r16,r18
 16960 73c8 080F      		add r16,r24
 16961 73ca 191F      		adc r17,r25
 16962 73cc CE01      		movw r24,r28
 16963 73ce CF96      		adiw r24,63
 16964 73d0 FC01      		movw r30,r24
 16965 73d2 8081      		ld r24,Z
 16966 73d4 9181      		ldd r25,Z+1
 16967 73d6 9D5F      		subi r25,-3
 16968 73d8 FC01      		movw r30,r24
 16969 73da 2081      		ld r18,Z
 16970 73dc 3181      		ldd r19,Z+1
 16971 73de 8981      		ldd r24,Y+1
 16972 73e0 9A81      		ldd r25,Y+2
 16973 73e2 880F      		lsl r24
 16974 73e4 991F      		rol r25
 16975 73e6 880F      		lsl r24
 16976 73e8 991F      		rol r25
 16977 73ea 820F      		add r24,r18
 16978 73ec 931F      		adc r25,r19
 16979 73ee FC01      		movw r30,r24
 16980 73f0 8081      		ld r24,Z
 16981 73f2 9181      		ldd r25,Z+1
 16982 73f4 A281      		ldd r26,Z+2
 16983 73f6 B381      		ldd r27,Z+3
 16984 73f8 20E0      		ldi r18,0
 16985 73fa 30E0      		ldi r19,0
 16986 73fc A901      		movw r20,r18
 16987 73fe BC01      		movw r22,r24
 16988 7400 CD01      		movw r24,r26
 16989 7402 0E94 0000 		call __nesf2
 16990 7406 8823      		tst r24
 16991 7408 01F0      		breq .L580
 16992               		.loc 2 1984 0 is_stmt 0 discriminator 1
 16993 740a CE01      		movw r24,r28
 16994 740c CF96      		adiw r24,63
 16995 740e FC01      		movw r30,r24
 16996 7410 8081      		ld r24,Z
 16997 7412 9181      		ldd r25,Z+1
 16998 7414 9D5F      		subi r25,-3
 16999 7416 FC01      		movw r30,r24
 17000 7418 2081      		ld r18,Z
 17001 741a 3181      		ldd r19,Z+1
 17002 741c 8981      		ldd r24,Y+1
 17003 741e 9A81      		ldd r25,Y+2
 17004 7420 880F      		lsl r24
 17005 7422 991F      		rol r25
 17006 7424 880F      		lsl r24
 17007 7426 991F      		rol r25
 17008 7428 820F      		add r24,r18
 17009 742a 931F      		adc r25,r19
 17010 742c FC01      		movw r30,r24
 17011 742e 8081      		ld r24,Z
 17012 7430 9181      		ldd r25,Z+1
 17013 7432 A281      		ldd r26,Z+2
 17014 7434 B381      		ldd r27,Z+3
 17015 7436 B058      		subi r27,0x80
 17016 7438 00C0      		rjmp .L553
 17017               	.L580:
 17018               		.loc 2 1984 0 discriminator 2
 17019 743a 80E0      		ldi r24,0
 17020 743c 90E0      		ldi r25,0
 17021 743e DC01      		movw r26,r24
 17022               	.L553:
 17023               		.loc 2 1984 0 discriminator 4
 17024 7440 F801      		movw r30,r16
 17025 7442 8083      		st Z,r24
 17026 7444 9183      		std Z+1,r25
 17027 7446 A283      		std Z+2,r26
 17028 7448 B383      		std Z+3,r27
1983:lp_solve_5.5/lp_simplex.c ****       for(i = 1; i <= get_Lrows(lp); i++)
 17029               		.loc 2 1983 0 is_stmt 1 discriminator 4
 17030 744a 8981      		ldd r24,Y+1
 17031 744c 9A81      		ldd r25,Y+2
 17032 744e 0196      		adiw r24,1
 17033 7450 9A83      		std Y+2,r25
 17034 7452 8983      		std Y+1,r24
 17035               	.L550:
1983:lp_solve_5.5/lp_simplex.c ****       for(i = 1; i <= get_Lrows(lp); i++)
 17036               		.loc 2 1983 0 is_stmt 0 discriminator 2
 17037 7454 CE01      		movw r24,r28
 17038 7456 CF96      		adiw r24,63
 17039 7458 FC01      		movw r30,r24
 17040 745a 8081      		ld r24,Z
 17041 745c 9181      		ldd r25,Z+1
 17042 745e 0E94 0000 		call get_Lrows
 17043 7462 9C01      		movw r18,r24
 17044 7464 8981      		ldd r24,Y+1
 17045 7466 9A81      		ldd r25,Y+2
 17046 7468 2817      		cp r18,r24
 17047 746a 3907      		cpc r19,r25
 17048 746c 04F0      		brlt .+2
 17049 746e 00C0      		rjmp .L554
 17050 7470 00C0      		rjmp .L541
 17051               	.L582:
1951:lp_solve_5.5/lp_simplex.c ****     }
 17052               		.loc 2 1951 0 is_stmt 1
 17053 7472 0000      		nop
 17054               	.L541:
1985:lp_solve_5.5/lp_simplex.c ****   }
1986:lp_solve_5.5/lp_simplex.c **** 
1987:lp_solve_5.5/lp_simplex.c ****   /* Do standard postprocessing */
1988:lp_solve_5.5/lp_simplex.c **** Leave:
1989:lp_solve_5.5/lp_simplex.c **** 
1990:lp_solve_5.5/lp_simplex.c ****   /* Set status variables and report */
1991:lp_solve_5.5/lp_simplex.c ****   if(citer >= num_iter) {
 17055               		.loc 2 1991 0
 17056 7474 CE01      		movw r24,r28
 17057 7476 8B5B      		subi r24,-69
 17058 7478 9F4F      		sbci r25,-1
 17059 747a 2D81      		ldd r18,Y+5
 17060 747c 3E81      		ldd r19,Y+6
 17061 747e FC01      		movw r30,r24
 17062 7480 8081      		ld r24,Z
 17063 7482 9181      		ldd r25,Z+1
 17064 7484 2817      		cp r18,r24
 17065 7486 3907      		cpc r19,r25
 17066 7488 04F0      		brlt .L555
1992:lp_solve_5.5/lp_simplex.c ****     if(AnyFeas)
 17067               		.loc 2 1992 0
 17068 748a 8A85      		ldd r24,Y+10
 17069 748c 8823      		tst r24
 17070 748e 01F0      		breq .L556
1993:lp_solve_5.5/lp_simplex.c ****       lp->lag_status = FEASFOUND;
 17071               		.loc 2 1993 0
 17072 7490 CE01      		movw r24,r28
 17073 7492 CF96      		adiw r24,63
 17074 7494 FC01      		movw r30,r24
 17075 7496 8081      		ld r24,Z
 17076 7498 9181      		ldd r25,Z+1
 17077 749a 885F      		subi r24,-8
 17078 749c 9D4F      		sbci r25,-3
 17079 749e 2CE0      		ldi r18,lo8(12)
 17080 74a0 30E0      		ldi r19,0
 17081 74a2 FC01      		movw r30,r24
 17082 74a4 3183      		std Z+1,r19
 17083 74a6 2083      		st Z,r18
 17084 74a8 00C0      		rjmp .L558
 17085               	.L556:
1994:lp_solve_5.5/lp_simplex.c ****     else
1995:lp_solve_5.5/lp_simplex.c ****       lp->lag_status = NOFEASFOUND;
 17086               		.loc 2 1995 0
 17087 74aa CE01      		movw r24,r28
 17088 74ac CF96      		adiw r24,63
 17089 74ae FC01      		movw r30,r24
 17090 74b0 8081      		ld r24,Z
 17091 74b2 9181      		ldd r25,Z+1
 17092 74b4 885F      		subi r24,-8
 17093 74b6 9D4F      		sbci r25,-3
 17094 74b8 2DE0      		ldi r18,lo8(13)
 17095 74ba 30E0      		ldi r19,0
 17096 74bc FC01      		movw r30,r24
 17097 74be 3183      		std Z+1,r19
 17098 74c0 2083      		st Z,r18
 17099 74c2 00C0      		rjmp .L558
 17100               	.L555:
1996:lp_solve_5.5/lp_simplex.c ****   }
1997:lp_solve_5.5/lp_simplex.c ****   else
1998:lp_solve_5.5/lp_simplex.c ****     lp->lag_status = lp->spx_status;
 17101               		.loc 2 1998 0
 17102 74c4 CE01      		movw r24,r28
 17103 74c6 CF96      		adiw r24,63
 17104 74c8 FC01      		movw r30,r24
 17105 74ca 8081      		ld r24,Z
 17106 74cc 9181      		ldd r25,Z+1
 17107 74ce 8A5F      		subi r24,-6
 17108 74d0 9D4F      		sbci r25,-3
 17109 74d2 FC01      		movw r30,r24
 17110 74d4 2081      		ld r18,Z
 17111 74d6 3181      		ldd r19,Z+1
 17112 74d8 CE01      		movw r24,r28
 17113 74da CF96      		adiw r24,63
 17114 74dc FC01      		movw r30,r24
 17115 74de 8081      		ld r24,Z
 17116 74e0 9181      		ldd r25,Z+1
 17117 74e2 885F      		subi r24,-8
 17118 74e4 9D4F      		sbci r25,-3
 17119 74e6 FC01      		movw r30,r24
 17120 74e8 3183      		std Z+1,r19
 17121 74ea 2083      		st Z,r18
 17122               	.L558:
1999:lp_solve_5.5/lp_simplex.c ****   if(lp->lag_status == OPTIMAL) {
 17123               		.loc 2 1999 0
 17124 74ec CE01      		movw r24,r28
 17125 74ee CF96      		adiw r24,63
 17126 74f0 FC01      		movw r30,r24
 17127 74f2 8081      		ld r24,Z
 17128 74f4 9181      		ldd r25,Z+1
 17129 74f6 885F      		subi r24,-8
 17130 74f8 9D4F      		sbci r25,-3
 17131 74fa FC01      		movw r30,r24
 17132 74fc 8081      		ld r24,Z
 17133 74fe 9181      		ldd r25,Z+1
 17134 7500 892B      		or r24,r25
 17135 7502 01F0      		breq .+2
 17136 7504 00C0      		rjmp .L559
2000:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "\nLagrangean convergence achieved in %d iterations\n",  citer);
 17137               		.loc 2 2000 0
 17138 7506 8E81      		ldd r24,Y+6
 17139 7508 8F93      		push r24
 17140 750a 8D81      		ldd r24,Y+5
 17141 750c 8F93      		push r24
 17142 750e 80E0      		ldi r24,lo8(.LC54)
 17143 7510 90E0      		ldi r25,hi8(.LC54)
 17144 7512 892F      		mov r24,r25
 17145 7514 8F93      		push r24
 17146 7516 80E0      		ldi r24,lo8(.LC54)
 17147 7518 90E0      		ldi r25,hi8(.LC54)
 17148 751a 8F93      		push r24
 17149 751c 1F92      		push __zero_reg__
 17150 751e 84E0      		ldi r24,lo8(4)
 17151 7520 8F93      		push r24
 17152 7522 CE01      		movw r24,r28
 17153 7524 805C      		subi r24,-64
 17154 7526 9F4F      		sbci r25,-1
 17155 7528 FC01      		movw r30,r24
 17156 752a 8081      		ld r24,Z
 17157 752c 8F93      		push r24
 17158 752e 8FAD      		ldd r24,Y+63
 17159 7530 8F93      		push r24
 17160 7532 0E94 0000 		call report
 17161 7536 6DB7      		in r22,__SP_L__
 17162 7538 7EB7      		in r23,__SP_H__
 17163 753a 685F      		subi r22,-8
 17164 753c 7F4F      		sbci r23,-1
 17165 753e 0FB6      		in __tmp_reg__,__SREG__
 17166 7540 F894      		cli
 17167 7542 DEBF      		out __SP_H__,r29
 17168 7544 0FBE      		out __SREG__,__tmp_reg__
 17169 7546 CDBF      		out __SP_L__,r28
2001:lp_solve_5.5/lp_simplex.c ****     i = check_solution(lp, lp->columns,
 17170               		.loc 2 2001 0
 17171 7548 CE01      		movw r24,r28
 17172 754a CF96      		adiw r24,63
 17173 754c FC01      		movw r30,r24
 17174 754e 8081      		ld r24,Z
 17175 7550 9181      		ldd r25,Z+1
 17176 7552 865D      		subi r24,-42
 17177 7554 9C4F      		sbci r25,-4
 17178 7556 FC01      		movw r30,r24
 17179 7558 8081      		ld r24,Z
 17180 755a 9181      		ldd r25,Z+1
 17181 755c A281      		ldd r26,Z+2
 17182 755e B381      		ldd r27,Z+3
 17183 7560 9E01      		movw r18,r28
 17184 7562 215C      		subi r18,-63
 17185 7564 3F4F      		sbci r19,-1
 17186 7566 F901      		movw r30,r18
 17187 7568 2081      		ld r18,Z
 17188 756a 3181      		ldd r19,Z+1
 17189 756c 2E54      		subi r18,78
 17190 756e 3D4F      		sbci r19,-3
 17191 7570 F901      		movw r30,r18
 17192 7572 0081      		ld r16,Z
 17193 7574 1181      		ldd r17,Z+1
 17194 7576 9E01      		movw r18,r28
 17195 7578 215C      		subi r18,-63
 17196 757a 3F4F      		sbci r19,-1
 17197 757c F901      		movw r30,r18
 17198 757e 2081      		ld r18,Z
 17199 7580 3181      		ldd r19,Z+1
 17200 7582 2255      		subi r18,82
 17201 7584 3D4F      		sbci r19,-3
 17202 7586 F901      		movw r30,r18
 17203 7588 A080      		ld r10,Z
 17204 758a B180      		ldd r11,Z+1
 17205 758c 9E01      		movw r18,r28
 17206 758e 215C      		subi r18,-63
 17207 7590 3F4F      		sbci r19,-1
 17208 7592 F901      		movw r30,r18
 17209 7594 2081      		ld r18,Z
 17210 7596 3181      		ldd r19,Z+1
 17211 7598 2C5E      		subi r18,-20
 17212 759a 3D4F      		sbci r19,-3
 17213 759c F901      		movw r30,r18
 17214 759e 4081      		ld r20,Z
 17215 75a0 5181      		ldd r21,Z+1
 17216 75a2 9E01      		movw r18,r28
 17217 75a4 215C      		subi r18,-63
 17218 75a6 3F4F      		sbci r19,-1
 17219 75a8 F901      		movw r30,r18
 17220 75aa 2081      		ld r18,Z
 17221 75ac 3181      		ldd r19,Z+1
 17222 75ae 2451      		subi r18,20
 17223 75b0 3E4F      		sbci r19,-2
 17224 75b2 F901      		movw r30,r18
 17225 75b4 6081      		ld r22,Z
 17226 75b6 7181      		ldd r23,Z+1
 17227 75b8 9E01      		movw r18,r28
 17228 75ba 215C      		subi r18,-63
 17229 75bc 3F4F      		sbci r19,-1
 17230 75be F901      		movw r30,r18
 17231 75c0 0190      		ld __tmp_reg__,Z+
 17232 75c2 F081      		ld r31,Z
 17233 75c4 E02D      		mov r30,__tmp_reg__
 17234 75c6 2996      		adiw r28,71-62
 17235 75c8 FFAF      		std Y+63,r31
 17236 75ca EEAF      		std Y+62,r30
 17237 75cc 2997      		sbiw r28,71-62
 17238 75ce 6C01      		movw r12,r24
 17239 75d0 7D01      		movw r14,r26
 17240 75d2 9501      		movw r18,r10
 17241 75d4 2996      		adiw r28,71-62
 17242 75d6 8EAD      		ldd r24,Y+62
 17243 75d8 9FAD      		ldd r25,Y+63
 17244 75da 2997      		sbiw r28,71-62
 17245 75dc 0E94 0000 		call check_solution
 17246 75e0 9A83      		std Y+2,r25
 17247 75e2 8983      		std Y+1,r24
 17248 75e4 00C0      		rjmp .L560
 17249               	.L559:
2002:lp_solve_5.5/lp_simplex.c ****                        lp->best_solution, lp->orig_upbo, lp->orig_lowbo, lp->epssolution);
2003:lp_solve_5.5/lp_simplex.c ****   }
2004:lp_solve_5.5/lp_simplex.c ****   else {
2005:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "\nUnsatisfactory convergence achieved over %d Lagrangean iterations.\n",
 17250               		.loc 2 2005 0
 17251 75e6 8E81      		ldd r24,Y+6
 17252 75e8 8F93      		push r24
 17253 75ea 8D81      		ldd r24,Y+5
 17254 75ec 8F93      		push r24
 17255 75ee 80E0      		ldi r24,lo8(.LC55)
 17256 75f0 90E0      		ldi r25,hi8(.LC55)
 17257 75f2 892F      		mov r24,r25
 17258 75f4 8F93      		push r24
 17259 75f6 80E0      		ldi r24,lo8(.LC55)
 17260 75f8 90E0      		ldi r25,hi8(.LC55)
 17261 75fa 8F93      		push r24
 17262 75fc 1F92      		push __zero_reg__
 17263 75fe 84E0      		ldi r24,lo8(4)
 17264 7600 8F93      		push r24
 17265 7602 CE01      		movw r24,r28
 17266 7604 805C      		subi r24,-64
 17267 7606 9F4F      		sbci r25,-1
 17268 7608 FC01      		movw r30,r24
 17269 760a 8081      		ld r24,Z
 17270 760c 8F93      		push r24
 17271 760e 8FAD      		ldd r24,Y+63
 17272 7610 8F93      		push r24
 17273 7612 0E94 0000 		call report
 17274 7616 6DB7      		in r22,__SP_L__
 17275 7618 7EB7      		in r23,__SP_H__
 17276 761a 685F      		subi r22,-8
 17277 761c 7F4F      		sbci r23,-1
 17278 761e 0FB6      		in __tmp_reg__,__SREG__
 17279 7620 F894      		cli
 17280 7622 DEBF      		out __SP_H__,r29
 17281 7624 0FBE      		out __SREG__,__tmp_reg__
 17282 7626 CDBF      		out __SP_L__,r28
2006:lp_solve_5.5/lp_simplex.c ****                        citer);
2007:lp_solve_5.5/lp_simplex.c ****     if(AnyFeas)
 17283               		.loc 2 2007 0
 17284 7628 8A85      		ldd r24,Y+10
 17285 762a 8823      		tst r24
 17286 762c 01F0      		breq .L560
2008:lp_solve_5.5/lp_simplex.c ****       report(lp, NORMAL, "The best feasible Lagrangean objective function value was %g\n",
2009:lp_solve_5.5/lp_simplex.c ****                          lp->best_solution[0]);
 17287               		.loc 2 2009 0
 17288 762e CE01      		movw r24,r28
 17289 7630 CF96      		adiw r24,63
 17290 7632 FC01      		movw r30,r24
 17291 7634 8081      		ld r24,Z
 17292 7636 9181      		ldd r25,Z+1
 17293 7638 8C5E      		subi r24,-20
 17294 763a 9D4F      		sbci r25,-3
 17295 763c FC01      		movw r30,r24
 17296 763e 8081      		ld r24,Z
 17297 7640 9181      		ldd r25,Z+1
2008:lp_solve_5.5/lp_simplex.c ****       report(lp, NORMAL, "The best feasible Lagrangean objective function value was %g\n",
 17298               		.loc 2 2008 0
 17299 7642 FC01      		movw r30,r24
 17300 7644 8081      		ld r24,Z
 17301 7646 9181      		ldd r25,Z+1
 17302 7648 A281      		ldd r26,Z+2
 17303 764a B381      		ldd r27,Z+3
 17304 764c 2B2F      		mov r18,r27
 17305 764e 2F93      		push r18
 17306 7650 2A2F      		mov r18,r26
 17307 7652 2F93      		push r18
 17308 7654 292F      		mov r18,r25
 17309 7656 2F93      		push r18
 17310 7658 8F93      		push r24
 17311 765a 80E0      		ldi r24,lo8(.LC56)
 17312 765c 90E0      		ldi r25,hi8(.LC56)
 17313 765e 892F      		mov r24,r25
 17314 7660 8F93      		push r24
 17315 7662 80E0      		ldi r24,lo8(.LC56)
 17316 7664 90E0      		ldi r25,hi8(.LC56)
 17317 7666 8F93      		push r24
 17318 7668 1F92      		push __zero_reg__
 17319 766a 84E0      		ldi r24,lo8(4)
 17320 766c 8F93      		push r24
 17321 766e CE01      		movw r24,r28
 17322 7670 805C      		subi r24,-64
 17323 7672 9F4F      		sbci r25,-1
 17324 7674 FC01      		movw r30,r24
 17325 7676 8081      		ld r24,Z
 17326 7678 8F93      		push r24
 17327 767a 8FAD      		ldd r24,Y+63
 17328 767c 8F93      		push r24
 17329 767e 0E94 0000 		call report
 17330 7682 6DB7      		in r22,__SP_L__
 17331 7684 7EB7      		in r23,__SP_H__
 17332 7686 665F      		subi r22,-10
 17333 7688 7F4F      		sbci r23,-1
 17334 768a 0FB6      		in __tmp_reg__,__SREG__
 17335 768c F894      		cli
 17336 768e DEBF      		out __SP_H__,r29
 17337 7690 0FBE      		out __SREG__,__tmp_reg__
 17338 7692 CDBF      		out __SP_L__,r28
 17339               	.L560:
2010:lp_solve_5.5/lp_simplex.c ****   }
2011:lp_solve_5.5/lp_simplex.c **** 
2012:lp_solve_5.5/lp_simplex.c ****   /* Restore the original objective function */
2013:lp_solve_5.5/lp_simplex.c **** #ifdef DirectOverrideOF
2014:lp_solve_5.5/lp_simplex.c ****   set_OF_override(lp, NULL);
2015:lp_solve_5.5/lp_simplex.c **** #else
2016:lp_solve_5.5/lp_simplex.c ****   for(i = 1; i <= lp->columns; i++)
 17340               		.loc 2 2016 0
 17341 7694 81E0      		ldi r24,lo8(1)
 17342 7696 90E0      		ldi r25,0
 17343 7698 9A83      		std Y+2,r25
 17344 769a 8983      		std Y+1,r24
 17345 769c 00C0      		rjmp .L561
 17346               	.L562:
2017:lp_solve_5.5/lp_simplex.c ****     set_mat(lp, 0, i, OrigObj[i]);
 17347               		.loc 2 2017 0 discriminator 3
 17348 769e 2FA9      		ldd r18,Y+55
 17349 76a0 38AD      		ldd r19,Y+56
 17350 76a2 8981      		ldd r24,Y+1
 17351 76a4 9A81      		ldd r25,Y+2
 17352 76a6 880F      		lsl r24
 17353 76a8 991F      		rol r25
 17354 76aa 880F      		lsl r24
 17355 76ac 991F      		rol r25
 17356 76ae 820F      		add r24,r18
 17357 76b0 931F      		adc r25,r19
 17358 76b2 FC01      		movw r30,r24
 17359 76b4 8081      		ld r24,Z
 17360 76b6 9181      		ldd r25,Z+1
 17361 76b8 A281      		ldd r26,Z+2
 17362 76ba B381      		ldd r27,Z+3
 17363 76bc 4981      		ldd r20,Y+1
 17364 76be 5A81      		ldd r21,Y+2
 17365 76c0 9E01      		movw r18,r28
 17366 76c2 215C      		subi r18,-63
 17367 76c4 3F4F      		sbci r19,-1
 17368 76c6 F901      		movw r30,r18
 17369 76c8 0190      		ld __tmp_reg__,Z+
 17370 76ca F081      		ld r31,Z
 17371 76cc E02D      		mov r30,__tmp_reg__
 17372 76ce 2996      		adiw r28,71-62
 17373 76d0 FFAF      		std Y+63,r31
 17374 76d2 EEAF      		std Y+62,r30
 17375 76d4 2997      		sbiw r28,71-62
 17376 76d6 8C01      		movw r16,r24
 17377 76d8 9D01      		movw r18,r26
 17378 76da 60E0      		ldi r22,0
 17379 76dc 70E0      		ldi r23,0
 17380 76de 2996      		adiw r28,71-62
 17381 76e0 8EAD      		ldd r24,Y+62
 17382 76e2 9FAD      		ldd r25,Y+63
 17383 76e4 2997      		sbiw r28,71-62
 17384 76e6 0E94 0000 		call set_mat
2016:lp_solve_5.5/lp_simplex.c ****     set_mat(lp, 0, i, OrigObj[i]);
 17385               		.loc 2 2016 0 discriminator 3
 17386 76ea 8981      		ldd r24,Y+1
 17387 76ec 9A81      		ldd r25,Y+2
 17388 76ee 0196      		adiw r24,1
 17389 76f0 9A83      		std Y+2,r25
 17390 76f2 8983      		std Y+1,r24
 17391               	.L561:
2016:lp_solve_5.5/lp_simplex.c ****     set_mat(lp, 0, i, OrigObj[i]);
 17392               		.loc 2 2016 0 is_stmt 0 discriminator 1
 17393 76f4 CE01      		movw r24,r28
 17394 76f6 CF96      		adiw r24,63
 17395 76f8 FC01      		movw r30,r24
 17396 76fa 8081      		ld r24,Z
 17397 76fc 9181      		ldd r25,Z+1
 17398 76fe 8451      		subi r24,20
 17399 7700 9E4F      		sbci r25,-2
 17400 7702 FC01      		movw r30,r24
 17401 7704 2081      		ld r18,Z
 17402 7706 3181      		ldd r19,Z+1
 17403 7708 8981      		ldd r24,Y+1
 17404 770a 9A81      		ldd r25,Y+2
 17405 770c 2817      		cp r18,r24
 17406 770e 3907      		cpc r19,r25
 17407 7710 04F4      		brge .L562
2018:lp_solve_5.5/lp_simplex.c **** #endif
2019:lp_solve_5.5/lp_simplex.c **** 
2020:lp_solve_5.5/lp_simplex.c ****   /* ... and then free memory */
2021:lp_solve_5.5/lp_simplex.c ****   FREE(BestFeasSol);
 17408               		.loc 2 2021 0 is_stmt 1
 17409 7712 8DAD      		ldd r24,Y+61
 17410 7714 9EAD      		ldd r25,Y+62
 17411 7716 892B      		or r24,r25
 17412 7718 01F0      		breq .L563
 17413               		.loc 2 2021 0 is_stmt 0 discriminator 1
 17414 771a 8DAD      		ldd r24,Y+61
 17415 771c 9EAD      		ldd r25,Y+62
 17416 771e 0E94 0000 		call free
 17417 7722 1EAE      		std Y+62,__zero_reg__
 17418 7724 1DAE      		std Y+61,__zero_reg__
 17419               	.L563:
2022:lp_solve_5.5/lp_simplex.c ****   FREE(SubGrad);
 17420               		.loc 2 2022 0 is_stmt 1
 17421 7726 8BAD      		ldd r24,Y+59
 17422 7728 9CAD      		ldd r25,Y+60
 17423 772a 892B      		or r24,r25
 17424 772c 01F0      		breq .L564
 17425               		.loc 2 2022 0 is_stmt 0 discriminator 1
 17426 772e 8BAD      		ldd r24,Y+59
 17427 7730 9CAD      		ldd r25,Y+60
 17428 7732 0E94 0000 		call free
 17429 7736 1CAE      		std Y+60,__zero_reg__
 17430 7738 1BAE      		std Y+59,__zero_reg__
 17431               	.L564:
2023:lp_solve_5.5/lp_simplex.c ****   FREE(OrigObj);
 17432               		.loc 2 2023 0 is_stmt 1
 17433 773a 8FA9      		ldd r24,Y+55
 17434 773c 98AD      		ldd r25,Y+56
 17435 773e 892B      		or r24,r25
 17436 7740 01F0      		breq .L565
 17437               		.loc 2 2023 0 is_stmt 0 discriminator 1
 17438 7742 8FA9      		ldd r24,Y+55
 17439 7744 98AD      		ldd r25,Y+56
 17440 7746 0E94 0000 		call free
 17441 774a 18AE      		std Y+56,__zero_reg__
 17442 774c 1FAA      		std Y+55,__zero_reg__
 17443               	.L565:
2024:lp_solve_5.5/lp_simplex.c ****   FREE(ModObj);
 17444               		.loc 2 2024 0 is_stmt 1
 17445 774e 89AD      		ldd r24,Y+57
 17446 7750 9AAD      		ldd r25,Y+58
 17447 7752 892B      		or r24,r25
 17448 7754 01F0      		breq .L566
 17449               		.loc 2 2024 0 is_stmt 0 discriminator 1
 17450 7756 89AD      		ldd r24,Y+57
 17451 7758 9AAD      		ldd r25,Y+58
 17452 775a 0E94 0000 		call free
 17453 775e 1AAE      		std Y+58,__zero_reg__
 17454 7760 19AE      		std Y+57,__zero_reg__
 17455               	.L566:
2025:lp_solve_5.5/lp_simplex.c ****   pop_basis(lp, FALSE);
 17456               		.loc 2 2025 0 is_stmt 1
 17457 7762 CE01      		movw r24,r28
 17458 7764 CF96      		adiw r24,63
 17459 7766 FC01      		movw r30,r24
 17460 7768 8081      		ld r24,Z
 17461 776a 9181      		ldd r25,Z+1
 17462 776c 60E0      		ldi r22,0
 17463 776e 0E94 0000 		call pop_basis
2026:lp_solve_5.5/lp_simplex.c **** 
2027:lp_solve_5.5/lp_simplex.c ****   lp->do_presolve = oldpresolve;
 17464               		.loc 2 2027 0
 17465 7772 CE01      		movw r24,r28
 17466 7774 CF96      		adiw r24,63
 17467 7776 FC01      		movw r30,r24
 17468 7778 8081      		ld r24,Z
 17469 777a 9181      		ldd r25,Z+1
 17470 777c 8C58      		subi r24,-116
 17471 777e 9D4F      		sbci r25,-3
 17472 7780 28A5      		ldd r18,Y+40
 17473 7782 39A5      		ldd r19,Y+41
 17474 7784 FC01      		movw r30,r24
 17475 7786 3183      		std Z+1,r19
 17476 7788 2083      		st Z,r18
2028:lp_solve_5.5/lp_simplex.c **** 
2029:lp_solve_5.5/lp_simplex.c ****   return( lp->lag_status );
 17477               		.loc 2 2029 0
 17478 778a CE01      		movw r24,r28
 17479 778c CF96      		adiw r24,63
 17480 778e FC01      		movw r30,r24
 17481 7790 8081      		ld r24,Z
 17482 7792 9181      		ldd r25,Z+1
 17483 7794 885F      		subi r24,-8
 17484 7796 9D4F      		sbci r25,-3
 17485 7798 FC01      		movw r30,r24
 17486 779a 8081      		ld r24,Z
 17487 779c 9181      		ldd r25,Z+1
 17488               	.L567:
 17489               	/* epilogue start */
2030:lp_solve_5.5/lp_simplex.c **** }
 17490               		.loc 2 2030 0 discriminator 1
 17491 779e C85B      		subi r28,-72
 17492 77a0 DF4F      		sbci r29,-1
 17493 77a2 0FB6      		in __tmp_reg__,__SREG__
 17494 77a4 F894      		cli
 17495 77a6 DEBF      		out __SP_H__,r29
 17496 77a8 0FBE      		out __SREG__,__tmp_reg__
 17497 77aa CDBF      		out __SP_L__,r28
 17498 77ac DF91      		pop r29
 17499 77ae CF91      		pop r28
 17500 77b0 1F91      		pop r17
 17501 77b2 0F91      		pop r16
 17502 77b4 FF90      		pop r15
 17503 77b6 EF90      		pop r14
 17504 77b8 DF90      		pop r13
 17505 77ba CF90      		pop r12
 17506 77bc BF90      		pop r11
 17507 77be AF90      		pop r10
 17508 77c0 0895      		ret
 17509               		.cfi_endproc
 17510               	.LFE27:
 17512               		.section	.rodata
 17513               	.LC57:
 17514 0a47 7370 785F 		.string	"spx_solve: Failure during postsolve.\n"
 17514      736F 6C76 
 17514      653A 2046 
 17514      6169 6C75 
 17514      7265 2064 
 17515               	.LC58:
 17516 0a6d 7370 785F 		.string	"spx_solve: The current LP seems to be invalid\n"
 17516      736F 6C76 
 17516      653A 2054 
 17516      6865 2063 
 17516      7572 7265 
 17517               	.LC59:
 17518 0a9c 0A20 00   		.string	"\n "
 17519               	.LC60:
 17520 0a9f 4D45 4D4F 		.string	"MEMO: lp_solve version %d.%d.%d.%d for %d bit OS, with %d bit REAL variables.\n"
 17520      3A20 6C70 
 17520      5F73 6F6C 
 17520      7665 2076 
 17520      6572 7369 
 17521               	.LC61:
 17522 0aee 2020 2020 		.string	"      In the total iteration count %.0f, %.0f (%.1f%%) were bound flips.\n"
 17522      2020 496E 
 17522      2074 6865 
 17522      2074 6F74 
 17522      616C 2069 
 17523               	.LC62:
 17524 0b38 2020 2020 		.string	"      There were %d refactorizations, %d triggered by time and %d by density.\n"
 17524      2020 5468 
 17524      6572 6520 
 17524      7765 7265 
 17524      2025 6420 
 17525               	.LC63:
 17526 0b87 2020 2020 		.string	"       ... on average %.1f major pivots per refactorization.\n"
 17526      2020 202E 
 17526      2E2E 206F 
 17526      6E20 6176 
 17526      6572 6167 
 17527               	.LC64:
 17528 0bc5 2020 2020 		.string	"      The largest [%s] fact(B) had %d NZ entries, %.1fx largest basis.\n"
 17528      2020 5468 
 17528      6520 6C61 
 17528      7267 6573 
 17528      7420 5B25 
 17529               	.LC65:
 17530 0c0d 2020 2020 		.string	"      The bounds were relaxed via perturbations %d times.\n"
 17530      2020 5468 
 17530      6520 626F 
 17530      756E 6473 
 17530      2077 6572 
 17531               	.LC66:
 17532 0c48 2020 2020 		.string	"      The maximum B&B level was %d, %.1fx MIP order, %d at the optimal solution.\n"
 17532      2020 5468 
 17532      6520 6D61 
 17532      7869 6D75 
 17532      6D20 4226 
 17533               	.LC67:
 17534 0c9a 2020 2020 		.string	"      The maximum B&B level was %d, %.1fx MIP order, with %.0f nodes explored.\n"
 17534      2020 5468 
 17534      6520 6D61 
 17534      7869 6D75 
 17534      6D20 4226 
 17535               	.LC68:
 17536 0cea 2020 2020 		.string	"      %d general upper-bounded (GUB) structures were employed during B&B.\n"
 17536      2020 2564 
 17536      2067 656E 
 17536      6572 616C 
 17536      2075 7070 
 17537               	.LC69:
 17538 0d35 2020 2020 		.string	"      The constraint matrix inf-norm is %g, with a dynamic range of %g.\n"
 17538      2020 5468 
 17538      6520 636F 
 17538      6E73 7472 
 17538      6169 6E74 
 17539               	.LC70:
 17540 0d7e 2020 2020 		.string	"      Time to load data was %.3f seconds, presolve used %.3f seconds,\n"
 17540      2020 5469 
 17540      6D65 2074 
 17540      6F20 6C6F 
 17540      6164 2064 
 17541               	.LC71:
 17542 0dc5 2020 2020 		.string	"       ... %.3f seconds in simplex solver, in total %.3f seconds.\n"
 17542      2020 202E 
 17542      2E2E 2025 
 17542      2E33 6620 
 17542      7365 636F 
 17543               		.text
 17544               	.global	spx_solve
 17546               	spx_solve:
 17547               	.LFB28:
2031:lp_solve_5.5/lp_simplex.c **** 
2032:lp_solve_5.5/lp_simplex.c **** STATIC int spx_solve(lprec *lp)
2033:lp_solve_5.5/lp_simplex.c **** {
 17548               		.loc 2 2033 0
 17549               		.cfi_startproc
 17550 77c2 6F92      		push r6
 17551               	.LCFI156:
 17552               		.cfi_def_cfa_offset 3
 17553               		.cfi_offset 6, -2
 17554 77c4 7F92      		push r7
 17555               	.LCFI157:
 17556               		.cfi_def_cfa_offset 4
 17557               		.cfi_offset 7, -3
 17558 77c6 8F92      		push r8
 17559               	.LCFI158:
 17560               		.cfi_def_cfa_offset 5
 17561               		.cfi_offset 8, -4
 17562 77c8 9F92      		push r9
 17563               	.LCFI159:
 17564               		.cfi_def_cfa_offset 6
 17565               		.cfi_offset 9, -5
 17566 77ca AF92      		push r10
 17567               	.LCFI160:
 17568               		.cfi_def_cfa_offset 7
 17569               		.cfi_offset 10, -6
 17570 77cc BF92      		push r11
 17571               	.LCFI161:
 17572               		.cfi_def_cfa_offset 8
 17573               		.cfi_offset 11, -7
 17574 77ce CF92      		push r12
 17575               	.LCFI162:
 17576               		.cfi_def_cfa_offset 9
 17577               		.cfi_offset 12, -8
 17578 77d0 DF92      		push r13
 17579               	.LCFI163:
 17580               		.cfi_def_cfa_offset 10
 17581               		.cfi_offset 13, -9
 17582 77d2 EF92      		push r14
 17583               	.LCFI164:
 17584               		.cfi_def_cfa_offset 11
 17585               		.cfi_offset 14, -10
 17586 77d4 FF92      		push r15
 17587               	.LCFI165:
 17588               		.cfi_def_cfa_offset 12
 17589               		.cfi_offset 15, -11
 17590 77d6 0F93      		push r16
 17591               	.LCFI166:
 17592               		.cfi_def_cfa_offset 13
 17593               		.cfi_offset 16, -12
 17594 77d8 1F93      		push r17
 17595               	.LCFI167:
 17596               		.cfi_def_cfa_offset 14
 17597               		.cfi_offset 17, -13
 17598 77da CF93      		push r28
 17599               	.LCFI168:
 17600               		.cfi_def_cfa_offset 15
 17601               		.cfi_offset 28, -14
 17602 77dc DF93      		push r29
 17603               	.LCFI169:
 17604               		.cfi_def_cfa_offset 16
 17605               		.cfi_offset 29, -15
 17606 77de CDB7      		in r28,__SP_L__
 17607 77e0 DEB7      		in r29,__SP_H__
 17608               	.LCFI170:
 17609               		.cfi_def_cfa_register 28
 17610 77e2 2B97      		sbiw r28,11
 17611               	.LCFI171:
 17612               		.cfi_def_cfa_offset 27
 17613 77e4 0FB6      		in __tmp_reg__,__SREG__
 17614 77e6 F894      		cli
 17615 77e8 DEBF      		out __SP_H__,r29
 17616 77ea 0FBE      		out __SREG__,__tmp_reg__
 17617 77ec CDBF      		out __SP_L__,r28
 17618               	/* prologue: function */
 17619               	/* frame size = 11 */
 17620               	/* stack size = 25 */
 17621               	.L__stack_usage = 25
 17622 77ee 9B87      		std Y+11,r25
 17623 77f0 8A87      		std Y+10,r24
2034:lp_solve_5.5/lp_simplex.c ****   int       status;
2035:lp_solve_5.5/lp_simplex.c ****   MYBOOL    iprocessed;
2036:lp_solve_5.5/lp_simplex.c **** 
2037:lp_solve_5.5/lp_simplex.c ****   lp->total_iter       = 0;
 17624               		.loc 2 2037 0
 17625 77f2 8A85      		ldd r24,Y+10
 17626 77f4 9B85      		ldd r25,Y+11
 17627 77f6 885C      		subi r24,-56
 17628 77f8 9D4F      		sbci r25,-3
 17629 77fa FC01      		movw r30,r24
 17630 77fc 1082      		st Z,__zero_reg__
 17631 77fe FC01      		movw r30,r24
 17632 7800 1182      		std Z+1,__zero_reg__
 17633 7802 FC01      		movw r30,r24
 17634 7804 1282      		std Z+2,__zero_reg__
 17635 7806 FC01      		movw r30,r24
 17636 7808 1382      		std Z+3,__zero_reg__
 17637 780a FC01      		movw r30,r24
 17638 780c 1482      		std Z+4,__zero_reg__
 17639 780e FC01      		movw r30,r24
 17640 7810 1582      		std Z+5,__zero_reg__
 17641 7812 FC01      		movw r30,r24
 17642 7814 1682      		std Z+6,__zero_reg__
 17643 7816 FC01      		movw r30,r24
 17644 7818 1782      		std Z+7,__zero_reg__
2038:lp_solve_5.5/lp_simplex.c ****   lp->total_bswap      = 0;
 17645               		.loc 2 2038 0
 17646 781a 8A85      		ldd r24,Y+10
 17647 781c 9B85      		ldd r25,Y+11
 17648 781e 885B      		subi r24,-72
 17649 7820 9D4F      		sbci r25,-3
 17650 7822 FC01      		movw r30,r24
 17651 7824 1082      		st Z,__zero_reg__
 17652 7826 FC01      		movw r30,r24
 17653 7828 1182      		std Z+1,__zero_reg__
 17654 782a FC01      		movw r30,r24
 17655 782c 1282      		std Z+2,__zero_reg__
 17656 782e FC01      		movw r30,r24
 17657 7830 1382      		std Z+3,__zero_reg__
 17658 7832 FC01      		movw r30,r24
 17659 7834 1482      		std Z+4,__zero_reg__
 17660 7836 FC01      		movw r30,r24
 17661 7838 1582      		std Z+5,__zero_reg__
 17662 783a FC01      		movw r30,r24
 17663 783c 1682      		std Z+6,__zero_reg__
 17664 783e FC01      		movw r30,r24
 17665 7840 1782      		std Z+7,__zero_reg__
2039:lp_solve_5.5/lp_simplex.c ****   lp->perturb_count    = 0;
 17666               		.loc 2 2039 0
 17667 7842 8A85      		ldd r24,Y+10
 17668 7844 9B85      		ldd r25,Y+11
 17669 7846 8858      		subi r24,-120
 17670 7848 9D4F      		sbci r25,-3
 17671 784a FC01      		movw r30,r24
 17672 784c 1182      		std Z+1,__zero_reg__
 17673 784e 1082      		st Z,__zero_reg__
2040:lp_solve_5.5/lp_simplex.c ****   lp->bb_maxlevel      = 1;
 17674               		.loc 2 2040 0
 17675 7850 8A85      		ldd r24,Y+10
 17676 7852 9B85      		ldd r25,Y+11
 17677 7854 8E5C      		subi r24,-50
 17678 7856 9C4F      		sbci r25,-4
 17679 7858 21E0      		ldi r18,lo8(1)
 17680 785a 30E0      		ldi r19,0
 17681 785c FC01      		movw r30,r24
 17682 785e 3183      		std Z+1,r19
 17683 7860 2083      		st Z,r18
2041:lp_solve_5.5/lp_simplex.c ****   lp->bb_totalnodes    = 0;
 17684               		.loc 2 2041 0
 17685 7862 8A85      		ldd r24,Y+10
 17686 7864 9B85      		ldd r25,Y+11
 17687 7866 8A5C      		subi r24,-54
 17688 7868 9C4F      		sbci r25,-4
 17689 786a FC01      		movw r30,r24
 17690 786c 1082      		st Z,__zero_reg__
 17691 786e FC01      		movw r30,r24
 17692 7870 1182      		std Z+1,__zero_reg__
 17693 7872 FC01      		movw r30,r24
 17694 7874 1282      		std Z+2,__zero_reg__
 17695 7876 FC01      		movw r30,r24
 17696 7878 1382      		std Z+3,__zero_reg__
 17697 787a FC01      		movw r30,r24
 17698 787c 1482      		std Z+4,__zero_reg__
 17699 787e FC01      		movw r30,r24
 17700 7880 1582      		std Z+5,__zero_reg__
 17701 7882 FC01      		movw r30,r24
 17702 7884 1682      		std Z+6,__zero_reg__
 17703 7886 FC01      		movw r30,r24
 17704 7888 1782      		std Z+7,__zero_reg__
2042:lp_solve_5.5/lp_simplex.c ****   lp->bb_improvements  = 0;
 17705               		.loc 2 2042 0
 17706 788a 8A85      		ldd r24,Y+10
 17707 788c 9B85      		ldd r25,Y+11
 17708 788e 8252      		subi r24,34
 17709 7890 9D4F      		sbci r25,-3
 17710 7892 FC01      		movw r30,r24
 17711 7894 1182      		std Z+1,__zero_reg__
 17712 7896 1082      		st Z,__zero_reg__
2043:lp_solve_5.5/lp_simplex.c ****   lp->bb_strongbranches= 0;
 17713               		.loc 2 2043 0
 17714 7898 8A85      		ldd r24,Y+10
 17715 789a 9B85      		ldd r25,Y+11
 17716 789c 8652      		subi r24,38
 17717 789e 9D4F      		sbci r25,-3
 17718 78a0 FC01      		movw r30,r24
 17719 78a2 1182      		std Z+1,__zero_reg__
 17720 78a4 1082      		st Z,__zero_reg__
2044:lp_solve_5.5/lp_simplex.c ****   lp->is_strongbranch  = FALSE;
 17721               		.loc 2 2044 0
 17722 78a6 8A85      		ldd r24,Y+10
 17723 78a8 9B85      		ldd r25,Y+11
 17724 78aa 8452      		subi r24,36
 17725 78ac 9D4F      		sbci r25,-3
 17726 78ae FC01      		movw r30,r24
 17727 78b0 1182      		std Z+1,__zero_reg__
 17728 78b2 1082      		st Z,__zero_reg__
2045:lp_solve_5.5/lp_simplex.c ****   lp->bb_level         = 0;
 17729               		.loc 2 2045 0
 17730 78b4 8A85      		ldd r24,Y+10
 17731 78b6 9B85      		ldd r25,Y+11
 17732 78b8 805D      		subi r24,-48
 17733 78ba 9C4F      		sbci r25,-4
 17734 78bc FC01      		movw r30,r24
 17735 78be 1182      		std Z+1,__zero_reg__
 17736 78c0 1082      		st Z,__zero_reg__
2046:lp_solve_5.5/lp_simplex.c ****   lp->bb_solutionlevel = 0;
 17737               		.loc 2 2046 0
 17738 78c2 8A85      		ldd r24,Y+10
 17739 78c4 9B85      		ldd r25,Y+11
 17740 78c6 825C      		subi r24,-62
 17741 78c8 9C4F      		sbci r25,-4
 17742 78ca FC01      		movw r30,r24
 17743 78cc 1182      		std Z+1,__zero_reg__
 17744 78ce 1082      		st Z,__zero_reg__
2047:lp_solve_5.5/lp_simplex.c ****   lp->best_solution[0] = my_chsign(is_maxim(lp), lp->infinite);
 17745               		.loc 2 2047 0
 17746 78d0 8A85      		ldd r24,Y+10
 17747 78d2 9B85      		ldd r25,Y+11
 17748 78d4 8C5E      		subi r24,-20
 17749 78d6 9D4F      		sbci r25,-3
 17750 78d8 FC01      		movw r30,r24
 17751 78da 0081      		ld r16,Z
 17752 78dc 1181      		ldd r17,Z+1
 17753 78de 8A85      		ldd r24,Y+10
 17754 78e0 9B85      		ldd r25,Y+11
 17755 78e2 0E94 0000 		call is_maxim
 17756 78e6 8823      		tst r24
 17757 78e8 01F0      		breq .L584
 17758               		.loc 2 2047 0 is_stmt 0 discriminator 1
 17759 78ea 8A85      		ldd r24,Y+10
 17760 78ec 9B85      		ldd r25,Y+11
 17761 78ee 865F      		subi r24,-10
 17762 78f0 9C4F      		sbci r25,-4
 17763 78f2 FC01      		movw r30,r24
 17764 78f4 8081      		ld r24,Z
 17765 78f6 9181      		ldd r25,Z+1
 17766 78f8 A281      		ldd r26,Z+2
 17767 78fa B381      		ldd r27,Z+3
 17768 78fc 20E0      		ldi r18,0
 17769 78fe 30E0      		ldi r19,0
 17770 7900 A901      		movw r20,r18
 17771 7902 BC01      		movw r22,r24
 17772 7904 CD01      		movw r24,r26
 17773 7906 0E94 0000 		call __nesf2
 17774 790a 8823      		tst r24
 17775 790c 01F0      		breq .L584
 17776               		.loc 2 2047 0 discriminator 3
 17777 790e 8A85      		ldd r24,Y+10
 17778 7910 9B85      		ldd r25,Y+11
 17779 7912 865F      		subi r24,-10
 17780 7914 9C4F      		sbci r25,-4
 17781 7916 FC01      		movw r30,r24
 17782 7918 8081      		ld r24,Z
 17783 791a 9181      		ldd r25,Z+1
 17784 791c A281      		ldd r26,Z+2
 17785 791e B381      		ldd r27,Z+3
 17786 7920 B058      		subi r27,0x80
 17787 7922 00C0      		rjmp .L586
 17788               	.L584:
 17789               		.loc 2 2047 0 discriminator 4
 17790 7924 8A85      		ldd r24,Y+10
 17791 7926 9B85      		ldd r25,Y+11
 17792 7928 865F      		subi r24,-10
 17793 792a 9C4F      		sbci r25,-4
 17794 792c FC01      		movw r30,r24
 17795 792e 8081      		ld r24,Z
 17796 7930 9181      		ldd r25,Z+1
 17797 7932 A281      		ldd r26,Z+2
 17798 7934 B381      		ldd r27,Z+3
 17799               	.L586:
 17800               		.loc 2 2047 0 discriminator 6
 17801 7936 F801      		movw r30,r16
 17802 7938 8083      		st Z,r24
 17803 793a 9183      		std Z+1,r25
 17804 793c A283      		std Z+2,r26
 17805 793e B383      		std Z+3,r27
2048:lp_solve_5.5/lp_simplex.c ****   if(lp->invB != NULL)
 17806               		.loc 2 2048 0 is_stmt 1 discriminator 6
 17807 7940 8A85      		ldd r24,Y+10
 17808 7942 9B85      		ldd r25,Y+11
 17809 7944 8854      		subi r24,72
 17810 7946 9D4F      		sbci r25,-3
 17811 7948 FC01      		movw r30,r24
 17812 794a 8081      		ld r24,Z
 17813 794c 9181      		ldd r25,Z+1
 17814 794e 892B      		or r24,r25
 17815 7950 01F0      		breq .L587
2049:lp_solve_5.5/lp_simplex.c ****     lp->bfp_restart(lp);
 17816               		.loc 2 2049 0
 17817 7952 8A85      		ldd r24,Y+10
 17818 7954 9B85      		ldd r25,Y+11
 17819 7956 8256      		subi r24,98
 17820 7958 9C4F      		sbci r25,-4
 17821 795a FC01      		movw r30,r24
 17822 795c 2081      		ld r18,Z
 17823 795e 3181      		ldd r19,Z+1
 17824 7960 8A85      		ldd r24,Y+10
 17825 7962 9B85      		ldd r25,Y+11
 17826 7964 F901      		movw r30,r18
 17827 7966 0995      		icall
 17828               	.L587:
2050:lp_solve_5.5/lp_simplex.c **** 
2051:lp_solve_5.5/lp_simplex.c ****   lp->spx_status = presolve(lp);
 17829               		.loc 2 2051 0
 17830 7968 8A85      		ldd r24,Y+10
 17831 796a 9B85      		ldd r25,Y+11
 17832 796c 0E94 0000 		call presolve
 17833 7970 9C01      		movw r18,r24
 17834 7972 8A85      		ldd r24,Y+10
 17835 7974 9B85      		ldd r25,Y+11
 17836 7976 8A5F      		subi r24,-6
 17837 7978 9D4F      		sbci r25,-3
 17838 797a FC01      		movw r30,r24
 17839 797c 3183      		std Z+1,r19
 17840 797e 2083      		st Z,r18
2052:lp_solve_5.5/lp_simplex.c ****   if(lp->spx_status == PRESOLVED) {
 17841               		.loc 2 2052 0
 17842 7980 8A85      		ldd r24,Y+10
 17843 7982 9B85      		ldd r25,Y+11
 17844 7984 8A5F      		subi r24,-6
 17845 7986 9D4F      		sbci r25,-3
 17846 7988 FC01      		movw r30,r24
 17847 798a 8081      		ld r24,Z
 17848 798c 9181      		ldd r25,Z+1
 17849 798e 0997      		sbiw r24,9
 17850 7990 01F4      		brne .L588
2053:lp_solve_5.5/lp_simplex.c ****     status = lp->spx_status;
 17851               		.loc 2 2053 0
 17852 7992 8A85      		ldd r24,Y+10
 17853 7994 9B85      		ldd r25,Y+11
 17854 7996 8A5F      		subi r24,-6
 17855 7998 9D4F      		sbci r25,-3
 17856 799a FC01      		movw r30,r24
 17857 799c 8081      		ld r24,Z
 17858 799e 9181      		ldd r25,Z+1
 17859 79a0 9A83      		std Y+2,r25
 17860 79a2 8983      		std Y+1,r24
2054:lp_solve_5.5/lp_simplex.c ****     goto Reconstruct;
 17861               		.loc 2 2054 0
 17862 79a4 00C0      		rjmp .L589
 17863               	.L588:
2055:lp_solve_5.5/lp_simplex.c ****   }
2056:lp_solve_5.5/lp_simplex.c ****   else if(lp->spx_status != RUNNING)
 17864               		.loc 2 2056 0
 17865 79a6 8A85      		ldd r24,Y+10
 17866 79a8 9B85      		ldd r25,Y+11
 17867 79aa 8A5F      		subi r24,-6
 17868 79ac 9D4F      		sbci r25,-3
 17869 79ae FC01      		movw r30,r24
 17870 79b0 8081      		ld r24,Z
 17871 79b2 9181      		ldd r25,Z+1
 17872 79b4 0897      		sbiw r24,8
 17873 79b6 01F0      		breq .+2
 17874 79b8 00C0      		rjmp .L605
2057:lp_solve_5.5/lp_simplex.c ****     goto Leave;
2058:lp_solve_5.5/lp_simplex.c **** 
2059:lp_solve_5.5/lp_simplex.c ****   iprocessed = !lp->wasPreprocessed;
 17875               		.loc 2 2059 0
 17876 79ba 8A85      		ldd r24,Y+10
 17877 79bc 9B85      		ldd r25,Y+11
 17878 79be 8A50      		subi r24,10
 17879 79c0 9D4F      		sbci r25,-3
 17880 79c2 FC01      		movw r30,r24
 17881 79c4 9081      		ld r25,Z
 17882 79c6 81E0      		ldi r24,lo8(1)
 17883 79c8 9923      		tst r25
 17884 79ca 01F0      		breq .L592
 17885 79cc 80E0      		ldi r24,0
 17886               	.L592:
 17887 79ce 8F83      		std Y+7,r24
2060:lp_solve_5.5/lp_simplex.c ****   if(!preprocess(lp) || userabort(lp, -1))
 17888               		.loc 2 2060 0
 17889 79d0 8A85      		ldd r24,Y+10
 17890 79d2 9B85      		ldd r25,Y+11
 17891 79d4 0E94 0000 		call preprocess
 17892 79d8 892B      		or r24,r25
 17893 79da 01F4      		brne .+2
 17894 79dc 00C0      		rjmp .L591
 17895               		.loc 2 2060 0 is_stmt 0 discriminator 1
 17896 79de 8A85      		ldd r24,Y+10
 17897 79e0 9B85      		ldd r25,Y+11
 17898 79e2 6FEF      		ldi r22,lo8(-1)
 17899 79e4 7FEF      		ldi r23,lo8(-1)
 17900 79e6 0E94 0000 		call userabort
 17901 79ea 8823      		tst r24
 17902 79ec 01F0      		breq .+2
 17903 79ee 00C0      		rjmp .L591
2061:lp_solve_5.5/lp_simplex.c ****     goto Leave;
2062:lp_solve_5.5/lp_simplex.c **** 
2063:lp_solve_5.5/lp_simplex.c ****   if(mat_validate(lp->matA)) {
 17904               		.loc 2 2063 0 is_stmt 1
 17905 79f0 8A85      		ldd r24,Y+10
 17906 79f2 9B85      		ldd r25,Y+11
 17907 79f4 8A54      		subi r24,74
 17908 79f6 9D4F      		sbci r25,-3
 17909 79f8 FC01      		movw r30,r24
 17910 79fa 8081      		ld r24,Z
 17911 79fc 9181      		ldd r25,Z+1
 17912 79fe 0E94 0000 		call mat_validate
 17913 7a02 8823      		tst r24
 17914 7a04 01F4      		brne .+2
 17915 7a06 00C0      		rjmp .L593
2064:lp_solve_5.5/lp_simplex.c **** 
2065:lp_solve_5.5/lp_simplex.c ****     /* Do standard initializations */
2066:lp_solve_5.5/lp_simplex.c ****     lp->solutioncount = 0;
 17916               		.loc 2 2066 0
 17917 7a08 8A85      		ldd r24,Y+10
 17918 7a0a 9B85      		ldd r25,Y+11
 17919 7a0c 865F      		subi r24,-10
 17920 7a0e 9D4F      		sbci r25,-3
 17921 7a10 FC01      		movw r30,r24
 17922 7a12 1182      		std Z+1,__zero_reg__
 17923 7a14 1082      		st Z,__zero_reg__
2067:lp_solve_5.5/lp_simplex.c ****     lp->real_solution = lp->infinite;
 17924               		.loc 2 2067 0
 17925 7a16 8A85      		ldd r24,Y+10
 17926 7a18 9B85      		ldd r25,Y+11
 17927 7a1a 865F      		subi r24,-10
 17928 7a1c 9C4F      		sbci r25,-4
 17929 7a1e FC01      		movw r30,r24
 17930 7a20 8081      		ld r24,Z
 17931 7a22 9181      		ldd r25,Z+1
 17932 7a24 A281      		ldd r26,Z+2
 17933 7a26 B381      		ldd r27,Z+3
 17934 7a28 2A85      		ldd r18,Y+10
 17935 7a2a 3B85      		ldd r19,Y+11
 17936 7a2c 225F      		subi r18,-14
 17937 7a2e 3D4F      		sbci r19,-3
 17938 7a30 F901      		movw r30,r18
 17939 7a32 8083      		st Z,r24
 17940 7a34 9183      		std Z+1,r25
 17941 7a36 A283      		std Z+2,r26
 17942 7a38 B383      		std Z+3,r27
2068:lp_solve_5.5/lp_simplex.c ****     set_action(&lp->spx_action, ACTION_REBASE | ACTION_REINVERT);
 17943               		.loc 2 2068 0
 17944 7a3a 8A85      		ldd r24,Y+10
 17945 7a3c 9B85      		ldd r25,Y+11
 17946 7a3e 8E50      		subi r24,14
 17947 7a40 9D4F      		sbci r25,-3
 17948 7a42 62E1      		ldi r22,lo8(18)
 17949 7a44 70E0      		ldi r23,0
 17950 7a46 0E94 0000 		call set_action
2069:lp_solve_5.5/lp_simplex.c ****     lp->bb_break = FALSE;
 17951               		.loc 2 2069 0
 17952 7a4a 8A85      		ldd r24,Y+10
 17953 7a4c 9B85      		ldd r25,Y+11
 17954 7a4e 8B50      		subi r24,11
 17955 7a50 9D4F      		sbci r25,-3
 17956 7a52 FC01      		movw r30,r24
 17957 7a54 1082      		st Z,__zero_reg__
2070:lp_solve_5.5/lp_simplex.c **** 
2071:lp_solve_5.5/lp_simplex.c ****     /* Do the call to the real underlying solver (note that
2072:lp_solve_5.5/lp_simplex.c ****        run_BB is replaceable with any compatible MIP solver) */
2073:lp_solve_5.5/lp_simplex.c ****     status = run_BB(lp);
 17958               		.loc 2 2073 0
 17959 7a56 8A85      		ldd r24,Y+10
 17960 7a58 9B85      		ldd r25,Y+11
 17961 7a5a 0E94 0000 		call run_BB
 17962 7a5e 9A83      		std Y+2,r25
 17963 7a60 8983      		std Y+1,r24
2074:lp_solve_5.5/lp_simplex.c **** 
2075:lp_solve_5.5/lp_simplex.c ****     /* Restore modified problem */
2076:lp_solve_5.5/lp_simplex.c ****     if(iprocessed)
 17964               		.loc 2 2076 0
 17965 7a62 8F81      		ldd r24,Y+7
 17966 7a64 8823      		tst r24
 17967 7a66 01F0      		breq .L589
2077:lp_solve_5.5/lp_simplex.c ****       postprocess(lp);
 17968               		.loc 2 2077 0
 17969 7a68 8A85      		ldd r24,Y+10
 17970 7a6a 9B85      		ldd r25,Y+11
 17971 7a6c 0E94 0000 		call postprocess
 17972               	.L589:
2078:lp_solve_5.5/lp_simplex.c **** 
2079:lp_solve_5.5/lp_simplex.c ****     /* Restore data related to presolve (mainly a placeholder as of v5.1) */
2080:lp_solve_5.5/lp_simplex.c **** Reconstruct:
2081:lp_solve_5.5/lp_simplex.c ****     if(!postsolve(lp, status))
 17973               		.loc 2 2081 0
 17974 7a70 2981      		ldd r18,Y+1
 17975 7a72 3A81      		ldd r19,Y+2
 17976 7a74 8A85      		ldd r24,Y+10
 17977 7a76 9B85      		ldd r25,Y+11
 17978 7a78 B901      		movw r22,r18
 17979 7a7a 0E94 0000 		call postsolve
 17980 7a7e 8823      		tst r24
 17981 7a80 01F0      		breq .+2
 17982 7a82 00C0      		rjmp .L606
2082:lp_solve_5.5/lp_simplex.c ****       report(lp, SEVERE, "spx_solve: Failure during postsolve.\n");
 17983               		.loc 2 2082 0
 17984 7a84 80E0      		ldi r24,lo8(.LC57)
 17985 7a86 90E0      		ldi r25,hi8(.LC57)
 17986 7a88 892F      		mov r24,r25
 17987 7a8a 8F93      		push r24
 17988 7a8c 80E0      		ldi r24,lo8(.LC57)
 17989 7a8e 90E0      		ldi r25,hi8(.LC57)
 17990 7a90 8F93      		push r24
 17991 7a92 1F92      		push __zero_reg__
 17992 7a94 82E0      		ldi r24,lo8(2)
 17993 7a96 8F93      		push r24
 17994 7a98 8B85      		ldd r24,Y+11
 17995 7a9a 8F93      		push r24
 17996 7a9c 8A85      		ldd r24,Y+10
 17997 7a9e 8F93      		push r24
 17998 7aa0 0E94 0000 		call report
 17999 7aa4 0F90      		pop __tmp_reg__
 18000 7aa6 0F90      		pop __tmp_reg__
 18001 7aa8 0F90      		pop __tmp_reg__
 18002 7aaa 0F90      		pop __tmp_reg__
 18003 7aac 0F90      		pop __tmp_reg__
 18004 7aae 0F90      		pop __tmp_reg__
2083:lp_solve_5.5/lp_simplex.c **** 
2084:lp_solve_5.5/lp_simplex.c ****     goto Leave;
 18005               		.loc 2 2084 0
 18006 7ab0 00C0      		rjmp .L606
 18007               	.L593:
2085:lp_solve_5.5/lp_simplex.c ****   }
2086:lp_solve_5.5/lp_simplex.c **** 
2087:lp_solve_5.5/lp_simplex.c ****   /* If we get here, mat_validate(lp) failed. */
2088:lp_solve_5.5/lp_simplex.c ****   if(lp->bb_trace || lp->spx_trace)
 18008               		.loc 2 2088 0
 18009 7ab2 8A85      		ldd r24,Y+10
 18010 7ab4 9B85      		ldd r25,Y+11
 18011 7ab6 8D5F      		subi r24,-3
 18012 7ab8 9D4F      		sbci r25,-3
 18013 7aba FC01      		movw r30,r24
 18014 7abc 8081      		ld r24,Z
 18015 7abe 8823      		tst r24
 18016 7ac0 01F4      		brne .L595
 18017               		.loc 2 2088 0 is_stmt 0 discriminator 1
 18018 7ac2 8A85      		ldd r24,Y+10
 18019 7ac4 9B85      		ldd r25,Y+11
 18020 7ac6 8E5F      		subi r24,-2
 18021 7ac8 9D4F      		sbci r25,-3
 18022 7aca FC01      		movw r30,r24
 18023 7acc 8081      		ld r24,Z
 18024 7ace 8823      		tst r24
 18025 7ad0 01F0      		breq .L596
 18026               	.L595:
2089:lp_solve_5.5/lp_simplex.c ****     report(lp, CRITICAL, "spx_solve: The current LP seems to be invalid\n");
 18027               		.loc 2 2089 0 is_stmt 1
 18028 7ad2 80E0      		ldi r24,lo8(.LC58)
 18029 7ad4 90E0      		ldi r25,hi8(.LC58)
 18030 7ad6 892F      		mov r24,r25
 18031 7ad8 8F93      		push r24
 18032 7ada 80E0      		ldi r24,lo8(.LC58)
 18033 7adc 90E0      		ldi r25,hi8(.LC58)
 18034 7ade 8F93      		push r24
 18035 7ae0 1F92      		push __zero_reg__
 18036 7ae2 81E0      		ldi r24,lo8(1)
 18037 7ae4 8F93      		push r24
 18038 7ae6 8B85      		ldd r24,Y+11
 18039 7ae8 8F93      		push r24
 18040 7aea 8A85      		ldd r24,Y+10
 18041 7aec 8F93      		push r24
 18042 7aee 0E94 0000 		call report
 18043 7af2 0F90      		pop __tmp_reg__
 18044 7af4 0F90      		pop __tmp_reg__
 18045 7af6 0F90      		pop __tmp_reg__
 18046 7af8 0F90      		pop __tmp_reg__
 18047 7afa 0F90      		pop __tmp_reg__
 18048 7afc 0F90      		pop __tmp_reg__
 18049               	.L596:
2090:lp_solve_5.5/lp_simplex.c ****   lp->spx_status = NUMFAILURE;
 18050               		.loc 2 2090 0
 18051 7afe 8A85      		ldd r24,Y+10
 18052 7b00 9B85      		ldd r25,Y+11
 18053 7b02 8A5F      		subi r24,-6
 18054 7b04 9D4F      		sbci r25,-3
 18055 7b06 25E0      		ldi r18,lo8(5)
 18056 7b08 30E0      		ldi r19,0
 18057 7b0a FC01      		movw r30,r24
 18058 7b0c 3183      		std Z+1,r19
 18059 7b0e 2083      		st Z,r18
 18060 7b10 00C0      		rjmp .L591
 18061               	.L605:
2057:lp_solve_5.5/lp_simplex.c **** 
 18062               		.loc 2 2057 0
 18063 7b12 0000      		nop
 18064 7b14 00C0      		rjmp .L591
 18065               	.L606:
2084:lp_solve_5.5/lp_simplex.c ****   }
 18066               		.loc 2 2084 0
 18067 7b16 0000      		nop
 18068               	.L591:
2091:lp_solve_5.5/lp_simplex.c **** 
2092:lp_solve_5.5/lp_simplex.c **** Leave:
2093:lp_solve_5.5/lp_simplex.c ****   lp->timeend = timeNow();
 18069               		.loc 2 2093 0
 18070 7b18 0E94 0000 		call timeNow
 18071 7b1c DC01      		movw r26,r24
 18072 7b1e CB01      		movw r24,r22
 18073 7b20 2A85      		ldd r18,Y+10
 18074 7b22 3B85      		ldd r19,Y+11
 18075 7b24 2A57      		subi r18,122
 18076 7b26 3C4F      		sbci r19,-4
 18077 7b28 F901      		movw r30,r18
 18078 7b2a 8083      		st Z,r24
 18079 7b2c 9183      		std Z+1,r25
 18080 7b2e A283      		std Z+2,r26
 18081 7b30 B383      		std Z+3,r27
2094:lp_solve_5.5/lp_simplex.c **** 
2095:lp_solve_5.5/lp_simplex.c ****   if((lp->lag_status != RUNNING) && (lp->invB != NULL)) {
 18082               		.loc 2 2095 0
 18083 7b32 8A85      		ldd r24,Y+10
 18084 7b34 9B85      		ldd r25,Y+11
 18085 7b36 885F      		subi r24,-8
 18086 7b38 9D4F      		sbci r25,-3
 18087 7b3a FC01      		movw r30,r24
 18088 7b3c 8081      		ld r24,Z
 18089 7b3e 9181      		ldd r25,Z+1
 18090 7b40 0897      		sbiw r24,8
 18091 7b42 01F4      		brne .+2
 18092 7b44 00C0      		rjmp .L597
 18093               		.loc 2 2095 0 is_stmt 0 discriminator 1
 18094 7b46 8A85      		ldd r24,Y+10
 18095 7b48 9B85      		ldd r25,Y+11
 18096 7b4a 8854      		subi r24,72
 18097 7b4c 9D4F      		sbci r25,-3
 18098 7b4e FC01      		movw r30,r24
 18099 7b50 8081      		ld r24,Z
 18100 7b52 9181      		ldd r25,Z+1
 18101 7b54 892B      		or r24,r25
 18102 7b56 01F4      		brne .+2
 18103 7b58 00C0      		rjmp .L597
 18104               	.LBB6:
2096:lp_solve_5.5/lp_simplex.c ****     int       itemp;
2097:lp_solve_5.5/lp_simplex.c ****     REAL      test;
2098:lp_solve_5.5/lp_simplex.c **** 
2099:lp_solve_5.5/lp_simplex.c ****     itemp = lp->bfp_nonzeros(lp, TRUE);
 18105               		.loc 2 2099 0 is_stmt 1
 18106 7b5a 8A85      		ldd r24,Y+10
 18107 7b5c 9B85      		ldd r25,Y+11
 18108 7b5e 8654      		subi r24,70
 18109 7b60 9C4F      		sbci r25,-4
 18110 7b62 FC01      		movw r30,r24
 18111 7b64 2081      		ld r18,Z
 18112 7b66 3181      		ldd r19,Z+1
 18113 7b68 8A85      		ldd r24,Y+10
 18114 7b6a 9B85      		ldd r25,Y+11
 18115 7b6c 61E0      		ldi r22,lo8(1)
 18116 7b6e F901      		movw r30,r18
 18117 7b70 0995      		icall
 18118 7b72 9987      		std Y+9,r25
 18119 7b74 8887      		std Y+8,r24
2100:lp_solve_5.5/lp_simplex.c ****     test = 100;
 18120               		.loc 2 2100 0
 18121 7b76 80E0      		ldi r24,0
 18122 7b78 90E0      		ldi r25,0
 18123 7b7a A8EC      		ldi r26,lo8(-56)
 18124 7b7c B2E4      		ldi r27,lo8(66)
 18125 7b7e 8B83      		std Y+3,r24
 18126 7b80 9C83      		std Y+4,r25
 18127 7b82 AD83      		std Y+5,r26
 18128 7b84 BE83      		std Y+6,r27
2101:lp_solve_5.5/lp_simplex.c ****     if(lp->total_iter > 0)
 18129               		.loc 2 2101 0
 18130 7b86 8A85      		ldd r24,Y+10
 18131 7b88 9B85      		ldd r25,Y+11
 18132 7b8a 885C      		subi r24,-56
 18133 7b8c 9D4F      		sbci r25,-3
 18134 7b8e FC01      		movw r30,r24
 18135 7b90 A080      		ld r10,Z
 18136 7b92 FC01      		movw r30,r24
 18137 7b94 B180      		ldd r11,Z+1
 18138 7b96 FC01      		movw r30,r24
 18139 7b98 C280      		ldd r12,Z+2
 18140 7b9a FC01      		movw r30,r24
 18141 7b9c D380      		ldd r13,Z+3
 18142 7b9e FC01      		movw r30,r24
 18143 7ba0 E480      		ldd r14,Z+4
 18144 7ba2 FC01      		movw r30,r24
 18145 7ba4 F580      		ldd r15,Z+5
 18146 7ba6 FC01      		movw r30,r24
 18147 7ba8 0681      		ldd r16,Z+6
 18148 7baa FC01      		movw r30,r24
 18149 7bac 1781      		ldd r17,Z+7
 18150 7bae 2A2D      		mov r18,r10
 18151 7bb0 3B2D      		mov r19,r11
 18152 7bb2 4C2D      		mov r20,r12
 18153 7bb4 5D2D      		mov r21,r13
 18154 7bb6 6E2D      		mov r22,r14
 18155 7bb8 7F2D      		mov r23,r15
 18156 7bba 802F      		mov r24,r16
 18157 7bbc 912F      		mov r25,r17
 18158 7bbe A0E0      		ldi r26,0
 18159 7bc0 0E94 0000 		call __cmpdi2_s8
 18160 7bc4 01F0      		breq .+2
 18161 7bc6 04F4      		brge .+2
 18162 7bc8 00C0      		rjmp .L598
2102:lp_solve_5.5/lp_simplex.c ****       test *= (REAL) lp->total_bswap/lp->total_iter;
 18163               		.loc 2 2102 0
 18164 7bca 8A85      		ldd r24,Y+10
 18165 7bcc 9B85      		ldd r25,Y+11
 18166 7bce 885B      		subi r24,-72
 18167 7bd0 9D4F      		sbci r25,-3
 18168 7bd2 FC01      		movw r30,r24
 18169 7bd4 A080      		ld r10,Z
 18170 7bd6 FC01      		movw r30,r24
 18171 7bd8 B180      		ldd r11,Z+1
 18172 7bda FC01      		movw r30,r24
 18173 7bdc C280      		ldd r12,Z+2
 18174 7bde FC01      		movw r30,r24
 18175 7be0 D380      		ldd r13,Z+3
 18176 7be2 FC01      		movw r30,r24
 18177 7be4 E480      		ldd r14,Z+4
 18178 7be6 FC01      		movw r30,r24
 18179 7be8 F580      		ldd r15,Z+5
 18180 7bea FC01      		movw r30,r24
 18181 7bec 0681      		ldd r16,Z+6
 18182 7bee FC01      		movw r30,r24
 18183 7bf0 1781      		ldd r17,Z+7
 18184 7bf2 2A2D      		mov r18,r10
 18185 7bf4 3B2D      		mov r19,r11
 18186 7bf6 4C2D      		mov r20,r12
 18187 7bf8 5D2D      		mov r21,r13
 18188 7bfa 6E2D      		mov r22,r14
 18189 7bfc 7F2D      		mov r23,r15
 18190 7bfe 802F      		mov r24,r16
 18191 7c00 912F      		mov r25,r17
 18192 7c02 0E94 0000 		call __floatdisf
 18193 7c06 3B01      		movw r6,r22
 18194 7c08 4C01      		movw r8,r24
 18195 7c0a 8A85      		ldd r24,Y+10
 18196 7c0c 9B85      		ldd r25,Y+11
 18197 7c0e 885C      		subi r24,-56
 18198 7c10 9D4F      		sbci r25,-3
 18199 7c12 FC01      		movw r30,r24
 18200 7c14 A080      		ld r10,Z
 18201 7c16 FC01      		movw r30,r24
 18202 7c18 B180      		ldd r11,Z+1
 18203 7c1a FC01      		movw r30,r24
 18204 7c1c C280      		ldd r12,Z+2
 18205 7c1e FC01      		movw r30,r24
 18206 7c20 D380      		ldd r13,Z+3
 18207 7c22 FC01      		movw r30,r24
 18208 7c24 E480      		ldd r14,Z+4
 18209 7c26 FC01      		movw r30,r24
 18210 7c28 F580      		ldd r15,Z+5
 18211 7c2a FC01      		movw r30,r24
 18212 7c2c 0681      		ldd r16,Z+6
 18213 7c2e FC01      		movw r30,r24
 18214 7c30 1781      		ldd r17,Z+7
 18215 7c32 2A2D      		mov r18,r10
 18216 7c34 3B2D      		mov r19,r11
 18217 7c36 4C2D      		mov r20,r12
 18218 7c38 5D2D      		mov r21,r13
 18219 7c3a 6E2D      		mov r22,r14
 18220 7c3c 7F2D      		mov r23,r15
 18221 7c3e 802F      		mov r24,r16
 18222 7c40 912F      		mov r25,r17
 18223 7c42 0E94 0000 		call __floatdisf
 18224 7c46 DC01      		movw r26,r24
 18225 7c48 CB01      		movw r24,r22
 18226 7c4a 9C01      		movw r18,r24
 18227 7c4c AD01      		movw r20,r26
 18228 7c4e C401      		movw r24,r8
 18229 7c50 B301      		movw r22,r6
 18230 7c52 0E94 0000 		call __divsf3
 18231 7c56 DC01      		movw r26,r24
 18232 7c58 CB01      		movw r24,r22
 18233 7c5a 9C01      		movw r18,r24
 18234 7c5c AD01      		movw r20,r26
 18235 7c5e 6B81      		ldd r22,Y+3
 18236 7c60 7C81      		ldd r23,Y+4
 18237 7c62 8D81      		ldd r24,Y+5
 18238 7c64 9E81      		ldd r25,Y+6
 18239 7c66 0E94 0000 		call __mulsf3
 18240 7c6a DC01      		movw r26,r24
 18241 7c6c CB01      		movw r24,r22
 18242 7c6e 8B83      		std Y+3,r24
 18243 7c70 9C83      		std Y+4,r25
 18244 7c72 AD83      		std Y+5,r26
 18245 7c74 BE83      		std Y+6,r27
 18246               	.L598:
2103:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "\n ");
 18247               		.loc 2 2103 0
 18248 7c76 80E0      		ldi r24,lo8(.LC59)
 18249 7c78 90E0      		ldi r25,hi8(.LC59)
 18250 7c7a 892F      		mov r24,r25
 18251 7c7c 8F93      		push r24
 18252 7c7e 80E0      		ldi r24,lo8(.LC59)
 18253 7c80 90E0      		ldi r25,hi8(.LC59)
 18254 7c82 8F93      		push r24
 18255 7c84 1F92      		push __zero_reg__
 18256 7c86 84E0      		ldi r24,lo8(4)
 18257 7c88 8F93      		push r24
 18258 7c8a 8B85      		ldd r24,Y+11
 18259 7c8c 8F93      		push r24
 18260 7c8e 8A85      		ldd r24,Y+10
 18261 7c90 8F93      		push r24
 18262 7c92 0E94 0000 		call report
 18263 7c96 0F90      		pop __tmp_reg__
 18264 7c98 0F90      		pop __tmp_reg__
 18265 7c9a 0F90      		pop __tmp_reg__
 18266 7c9c 0F90      		pop __tmp_reg__
 18267 7c9e 0F90      		pop __tmp_reg__
 18268 7ca0 0F90      		pop __tmp_reg__
2104:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "MEMO: lp_solve version %d.%d.%d.%d for %d bit OS, with %d bit REAL variable
 18269               		.loc 2 2104 0
 18270 7ca2 1F92      		push __zero_reg__
 18271 7ca4 80E2      		ldi r24,lo8(32)
 18272 7ca6 8F93      		push r24
 18273 7ca8 1F92      		push __zero_reg__
 18274 7caa 80E1      		ldi r24,lo8(16)
 18275 7cac 8F93      		push r24
 18276 7cae 1F92      		push __zero_reg__
 18277 7cb0 85E0      		ldi r24,lo8(5)
 18278 7cb2 8F93      		push r24
 18279 7cb4 1F92      		push __zero_reg__
 18280 7cb6 82E0      		ldi r24,lo8(2)
 18281 7cb8 8F93      		push r24
 18282 7cba 1F92      		push __zero_reg__
 18283 7cbc 85E0      		ldi r24,lo8(5)
 18284 7cbe 8F93      		push r24
 18285 7cc0 1F92      		push __zero_reg__
 18286 7cc2 85E0      		ldi r24,lo8(5)
 18287 7cc4 8F93      		push r24
 18288 7cc6 80E0      		ldi r24,lo8(.LC60)
 18289 7cc8 90E0      		ldi r25,hi8(.LC60)
 18290 7cca 892F      		mov r24,r25
 18291 7ccc 8F93      		push r24
 18292 7cce 80E0      		ldi r24,lo8(.LC60)
 18293 7cd0 90E0      		ldi r25,hi8(.LC60)
 18294 7cd2 8F93      		push r24
 18295 7cd4 1F92      		push __zero_reg__
 18296 7cd6 84E0      		ldi r24,lo8(4)
 18297 7cd8 8F93      		push r24
 18298 7cda 8B85      		ldd r24,Y+11
 18299 7cdc 8F93      		push r24
 18300 7cde 8A85      		ldd r24,Y+10
 18301 7ce0 8F93      		push r24
 18302 7ce2 0E94 0000 		call report
 18303 7ce6 8DB7      		in r24,__SP_L__
 18304 7ce8 9EB7      		in r25,__SP_H__
 18305 7cea 4296      		adiw r24,18
 18306 7cec 0FB6      		in __tmp_reg__,__SREG__
 18307 7cee F894      		cli
 18308 7cf0 DEBF      		out __SP_H__,r29
 18309 7cf2 0FBE      		out __SREG__,__tmp_reg__
 18310 7cf4 CDBF      		out __SP_L__,r28
2105:lp_solve_5.5/lp_simplex.c ****                         MAJORVERSION, MINORVERSION, RELEASE, BUILD, 8*sizeof(void *), 8*sizeof(REAL
2106:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "      In the total iteration count %.0f, %.0f (%.1f%%) were bound flips.\n"
2107:lp_solve_5.5/lp_simplex.c ****                         (double) lp->total_iter, (double) lp->total_bswap, test);
 18311               		.loc 2 2107 0
 18312 7cf6 8A85      		ldd r24,Y+10
 18313 7cf8 9B85      		ldd r25,Y+11
 18314 7cfa 885B      		subi r24,-72
 18315 7cfc 9D4F      		sbci r25,-3
 18316 7cfe FC01      		movw r30,r24
 18317 7d00 A080      		ld r10,Z
 18318 7d02 FC01      		movw r30,r24
 18319 7d04 B180      		ldd r11,Z+1
 18320 7d06 FC01      		movw r30,r24
 18321 7d08 C280      		ldd r12,Z+2
 18322 7d0a FC01      		movw r30,r24
 18323 7d0c D380      		ldd r13,Z+3
 18324 7d0e FC01      		movw r30,r24
 18325 7d10 E480      		ldd r14,Z+4
 18326 7d12 FC01      		movw r30,r24
 18327 7d14 F580      		ldd r15,Z+5
 18328 7d16 FC01      		movw r30,r24
 18329 7d18 0681      		ldd r16,Z+6
 18330 7d1a FC01      		movw r30,r24
 18331 7d1c 1781      		ldd r17,Z+7
2106:lp_solve_5.5/lp_simplex.c ****                         (double) lp->total_iter, (double) lp->total_bswap, test);
 18332               		.loc 2 2106 0
 18333 7d1e 2A2D      		mov r18,r10
 18334 7d20 3B2D      		mov r19,r11
 18335 7d22 4C2D      		mov r20,r12
 18336 7d24 5D2D      		mov r21,r13
 18337 7d26 6E2D      		mov r22,r14
 18338 7d28 7F2D      		mov r23,r15
 18339 7d2a 802F      		mov r24,r16
 18340 7d2c 912F      		mov r25,r17
 18341 7d2e 0E94 0000 		call __floatdisf
 18342 7d32 3B01      		movw r6,r22
 18343 7d34 4C01      		movw r8,r24
 18344               		.loc 2 2107 0
 18345 7d36 8A85      		ldd r24,Y+10
 18346 7d38 9B85      		ldd r25,Y+11
 18347 7d3a 885C      		subi r24,-56
 18348 7d3c 9D4F      		sbci r25,-3
 18349 7d3e FC01      		movw r30,r24
 18350 7d40 A080      		ld r10,Z
 18351 7d42 FC01      		movw r30,r24
 18352 7d44 B180      		ldd r11,Z+1
 18353 7d46 FC01      		movw r30,r24
 18354 7d48 C280      		ldd r12,Z+2
 18355 7d4a FC01      		movw r30,r24
 18356 7d4c D380      		ldd r13,Z+3
 18357 7d4e FC01      		movw r30,r24
 18358 7d50 E480      		ldd r14,Z+4
 18359 7d52 FC01      		movw r30,r24
 18360 7d54 F580      		ldd r15,Z+5
 18361 7d56 FC01      		movw r30,r24
 18362 7d58 0681      		ldd r16,Z+6
 18363 7d5a FC01      		movw r30,r24
 18364 7d5c 1781      		ldd r17,Z+7
2106:lp_solve_5.5/lp_simplex.c ****                         (double) lp->total_iter, (double) lp->total_bswap, test);
 18365               		.loc 2 2106 0
 18366 7d5e 2A2D      		mov r18,r10
 18367 7d60 3B2D      		mov r19,r11
 18368 7d62 4C2D      		mov r20,r12
 18369 7d64 5D2D      		mov r21,r13
 18370 7d66 6E2D      		mov r22,r14
 18371 7d68 7F2D      		mov r23,r15
 18372 7d6a 802F      		mov r24,r16
 18373 7d6c 912F      		mov r25,r17
 18374 7d6e 0E94 0000 		call __floatdisf
 18375 7d72 DC01      		movw r26,r24
 18376 7d74 CB01      		movw r24,r22
 18377 7d76 2E81      		ldd r18,Y+6
 18378 7d78 2F93      		push r18
 18379 7d7a 2D81      		ldd r18,Y+5
 18380 7d7c 2F93      		push r18
 18381 7d7e 2C81      		ldd r18,Y+4
 18382 7d80 2F93      		push r18
 18383 7d82 2B81      		ldd r18,Y+3
 18384 7d84 2F93      		push r18
 18385 7d86 292D      		mov r18,r9
 18386 7d88 2F93      		push r18
 18387 7d8a 282D      		mov r18,r8
 18388 7d8c 2F93      		push r18
 18389 7d8e 272D      		mov r18,r7
 18390 7d90 2F93      		push r18
 18391 7d92 262D      		mov r18,r6
 18392 7d94 2F93      		push r18
 18393 7d96 2B2F      		mov r18,r27
 18394 7d98 2F93      		push r18
 18395 7d9a 2A2F      		mov r18,r26
 18396 7d9c 2F93      		push r18
 18397 7d9e 292F      		mov r18,r25
 18398 7da0 2F93      		push r18
 18399 7da2 8F93      		push r24
 18400 7da4 80E0      		ldi r24,lo8(.LC61)
 18401 7da6 90E0      		ldi r25,hi8(.LC61)
 18402 7da8 892F      		mov r24,r25
 18403 7daa 8F93      		push r24
 18404 7dac 80E0      		ldi r24,lo8(.LC61)
 18405 7dae 90E0      		ldi r25,hi8(.LC61)
 18406 7db0 8F93      		push r24
 18407 7db2 1F92      		push __zero_reg__
 18408 7db4 84E0      		ldi r24,lo8(4)
 18409 7db6 8F93      		push r24
 18410 7db8 8B85      		ldd r24,Y+11
 18411 7dba 8F93      		push r24
 18412 7dbc 8A85      		ldd r24,Y+10
 18413 7dbe 8F93      		push r24
 18414 7dc0 0E94 0000 		call report
 18415 7dc4 8DB7      		in r24,__SP_L__
 18416 7dc6 9EB7      		in r25,__SP_H__
 18417 7dc8 4296      		adiw r24,18
 18418 7dca 0FB6      		in __tmp_reg__,__SREG__
 18419 7dcc F894      		cli
 18420 7dce DEBF      		out __SP_H__,r29
 18421 7dd0 0FBE      		out __SREG__,__tmp_reg__
 18422 7dd2 CDBF      		out __SP_L__,r28
2108:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "      There were %d refactorizations, %d triggered by time and %d by densit
2109:lp_solve_5.5/lp_simplex.c ****                         lp->bfp_refactcount(lp, BFP_STAT_REFACT_TOTAL),
2110:lp_solve_5.5/lp_simplex.c ****                         lp->bfp_refactcount(lp, BFP_STAT_REFACT_TIMED),
2111:lp_solve_5.5/lp_simplex.c ****                         lp->bfp_refactcount(lp, BFP_STAT_REFACT_DENSE));
 18423               		.loc 2 2111 0
 18424 7dd4 8A85      		ldd r24,Y+10
 18425 7dd6 9B85      		ldd r25,Y+11
 18426 7dd8 8053      		subi r24,48
 18427 7dda 9C4F      		sbci r25,-4
 18428 7ddc FC01      		movw r30,r24
 18429 7dde 2081      		ld r18,Z
 18430 7de0 3181      		ldd r19,Z+1
2108:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "      There were %d refactorizations, %d triggered by time and %d by densit
 18431               		.loc 2 2108 0
 18432 7de2 8A85      		ldd r24,Y+10
 18433 7de4 9B85      		ldd r25,Y+11
 18434 7de6 62E0      		ldi r22,lo8(2)
 18435 7de8 70E0      		ldi r23,0
 18436 7dea F901      		movw r30,r18
 18437 7dec 0995      		icall
 18438 7dee 7C01      		movw r14,r24
2110:lp_solve_5.5/lp_simplex.c ****                         lp->bfp_refactcount(lp, BFP_STAT_REFACT_DENSE));
 18439               		.loc 2 2110 0
 18440 7df0 8A85      		ldd r24,Y+10
 18441 7df2 9B85      		ldd r25,Y+11
 18442 7df4 8053      		subi r24,48
 18443 7df6 9C4F      		sbci r25,-4
 18444 7df8 FC01      		movw r30,r24
 18445 7dfa 2081      		ld r18,Z
 18446 7dfc 3181      		ldd r19,Z+1
2108:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "      There were %d refactorizations, %d triggered by time and %d by densit
 18447               		.loc 2 2108 0
 18448 7dfe 8A85      		ldd r24,Y+10
 18449 7e00 9B85      		ldd r25,Y+11
 18450 7e02 61E0      		ldi r22,lo8(1)
 18451 7e04 70E0      		ldi r23,0
 18452 7e06 F901      		movw r30,r18
 18453 7e08 0995      		icall
 18454 7e0a 8C01      		movw r16,r24
2109:lp_solve_5.5/lp_simplex.c ****                         lp->bfp_refactcount(lp, BFP_STAT_REFACT_TIMED),
 18455               		.loc 2 2109 0
 18456 7e0c 8A85      		ldd r24,Y+10
 18457 7e0e 9B85      		ldd r25,Y+11
 18458 7e10 8053      		subi r24,48
 18459 7e12 9C4F      		sbci r25,-4
 18460 7e14 FC01      		movw r30,r24
 18461 7e16 2081      		ld r18,Z
 18462 7e18 3181      		ldd r19,Z+1
2108:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "      There were %d refactorizations, %d triggered by time and %d by densit
 18463               		.loc 2 2108 0
 18464 7e1a 8A85      		ldd r24,Y+10
 18465 7e1c 9B85      		ldd r25,Y+11
 18466 7e1e 60E0      		ldi r22,0
 18467 7e20 70E0      		ldi r23,0
 18468 7e22 F901      		movw r30,r18
 18469 7e24 0995      		icall
 18470 7e26 2F2D      		mov r18,r15
 18471 7e28 2F93      		push r18
 18472 7e2a 2E2D      		mov r18,r14
 18473 7e2c 2F93      		push r18
 18474 7e2e 212F      		mov r18,r17
 18475 7e30 2F93      		push r18
 18476 7e32 202F      		mov r18,r16
 18477 7e34 2F93      		push r18
 18478 7e36 292F      		mov r18,r25
 18479 7e38 2F93      		push r18
 18480 7e3a 8F93      		push r24
 18481 7e3c 80E0      		ldi r24,lo8(.LC62)
 18482 7e3e 90E0      		ldi r25,hi8(.LC62)
 18483 7e40 892F      		mov r24,r25
 18484 7e42 8F93      		push r24
 18485 7e44 80E0      		ldi r24,lo8(.LC62)
 18486 7e46 90E0      		ldi r25,hi8(.LC62)
 18487 7e48 8F93      		push r24
 18488 7e4a 1F92      		push __zero_reg__
 18489 7e4c 84E0      		ldi r24,lo8(4)
 18490 7e4e 8F93      		push r24
 18491 7e50 8B85      		ldd r24,Y+11
 18492 7e52 8F93      		push r24
 18493 7e54 8A85      		ldd r24,Y+10
 18494 7e56 8F93      		push r24
 18495 7e58 0E94 0000 		call report
 18496 7e5c 8DB7      		in r24,__SP_L__
 18497 7e5e 9EB7      		in r25,__SP_H__
 18498 7e60 0C96      		adiw r24,12
 18499 7e62 0FB6      		in __tmp_reg__,__SREG__
 18500 7e64 F894      		cli
 18501 7e66 DEBF      		out __SP_H__,r29
 18502 7e68 0FBE      		out __SREG__,__tmp_reg__
 18503 7e6a CDBF      		out __SP_L__,r28
2112:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "       ... on average %.1f major pivots per refactorization.\n",
 18504               		.loc 2 2112 0
 18505 7e6c 8A85      		ldd r24,Y+10
 18506 7e6e 9B85      		ldd r25,Y+11
 18507 7e70 61E0      		ldi r22,lo8(1)
 18508 7e72 0E94 0000 		call get_refactfrequency
 18509 7e76 DC01      		movw r26,r24
 18510 7e78 CB01      		movw r24,r22
 18511 7e7a 2B2F      		mov r18,r27
 18512 7e7c 2F93      		push r18
 18513 7e7e 2A2F      		mov r18,r26
 18514 7e80 2F93      		push r18
 18515 7e82 292F      		mov r18,r25
 18516 7e84 2F93      		push r18
 18517 7e86 8F93      		push r24
 18518 7e88 80E0      		ldi r24,lo8(.LC63)
 18519 7e8a 90E0      		ldi r25,hi8(.LC63)
 18520 7e8c 892F      		mov r24,r25
 18521 7e8e 8F93      		push r24
 18522 7e90 80E0      		ldi r24,lo8(.LC63)
 18523 7e92 90E0      		ldi r25,hi8(.LC63)
 18524 7e94 8F93      		push r24
 18525 7e96 1F92      		push __zero_reg__
 18526 7e98 84E0      		ldi r24,lo8(4)
 18527 7e9a 8F93      		push r24
 18528 7e9c 8B85      		ldd r24,Y+11
 18529 7e9e 8F93      		push r24
 18530 7ea0 8A85      		ldd r24,Y+10
 18531 7ea2 8F93      		push r24
 18532 7ea4 0E94 0000 		call report
 18533 7ea8 EDB7      		in r30,__SP_L__
 18534 7eaa FEB7      		in r31,__SP_H__
 18535 7eac 3A96      		adiw r30,10
 18536 7eae 0FB6      		in __tmp_reg__,__SREG__
 18537 7eb0 F894      		cli
 18538 7eb2 DEBF      		out __SP_H__,r29
 18539 7eb4 0FBE      		out __SREG__,__tmp_reg__
 18540 7eb6 CDBF      		out __SP_L__,r28
2113:lp_solve_5.5/lp_simplex.c ****                         get_refactfrequency(lp, TRUE));
2114:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "      The largest [%s] fact(B) had %d NZ entries, %.1fx largest basis.\n",
2115:lp_solve_5.5/lp_simplex.c ****                         lp->bfp_name(), itemp, lp->bfp_efficiency(lp));
 18541               		.loc 2 2115 0
 18542 7eb8 8A85      		ldd r24,Y+10
 18543 7eba 9B85      		ldd r25,Y+11
 18544 7ebc 8653      		subi r24,54
 18545 7ebe 9C4F      		sbci r25,-4
 18546 7ec0 FC01      		movw r30,r24
 18547 7ec2 2081      		ld r18,Z
 18548 7ec4 3181      		ldd r19,Z+1
2114:lp_solve_5.5/lp_simplex.c ****                         lp->bfp_name(), itemp, lp->bfp_efficiency(lp));
 18549               		.loc 2 2114 0
 18550 7ec6 8A85      		ldd r24,Y+10
 18551 7ec8 9B85      		ldd r25,Y+11
 18552 7eca F901      		movw r30,r18
 18553 7ecc 0995      		icall
 18554 7ece 6B01      		movw r12,r22
 18555 7ed0 7C01      		movw r14,r24
 18556               		.loc 2 2115 0
 18557 7ed2 8A85      		ldd r24,Y+10
 18558 7ed4 9B85      		ldd r25,Y+11
 18559 7ed6 8E56      		subi r24,110
 18560 7ed8 9C4F      		sbci r25,-4
 18561 7eda FC01      		movw r30,r24
 18562 7edc 8081      		ld r24,Z
 18563 7ede 9181      		ldd r25,Z+1
2114:lp_solve_5.5/lp_simplex.c ****                         lp->bfp_name(), itemp, lp->bfp_efficiency(lp));
 18564               		.loc 2 2114 0
 18565 7ee0 FC01      		movw r30,r24
 18566 7ee2 0995      		icall
 18567 7ee4 2F2D      		mov r18,r15
 18568 7ee6 2F93      		push r18
 18569 7ee8 2E2D      		mov r18,r14
 18570 7eea 2F93      		push r18
 18571 7eec 2D2D      		mov r18,r13
 18572 7eee 2F93      		push r18
 18573 7ef0 2C2D      		mov r18,r12
 18574 7ef2 2F93      		push r18
 18575 7ef4 2985      		ldd r18,Y+9
 18576 7ef6 2F93      		push r18
 18577 7ef8 2885      		ldd r18,Y+8
 18578 7efa 2F93      		push r18
 18579 7efc 292F      		mov r18,r25
 18580 7efe 2F93      		push r18
 18581 7f00 8F93      		push r24
 18582 7f02 80E0      		ldi r24,lo8(.LC64)
 18583 7f04 90E0      		ldi r25,hi8(.LC64)
 18584 7f06 892F      		mov r24,r25
 18585 7f08 8F93      		push r24
 18586 7f0a 80E0      		ldi r24,lo8(.LC64)
 18587 7f0c 90E0      		ldi r25,hi8(.LC64)
 18588 7f0e 8F93      		push r24
 18589 7f10 1F92      		push __zero_reg__
 18590 7f12 84E0      		ldi r24,lo8(4)
 18591 7f14 8F93      		push r24
 18592 7f16 8B85      		ldd r24,Y+11
 18593 7f18 8F93      		push r24
 18594 7f1a 8A85      		ldd r24,Y+10
 18595 7f1c 8F93      		push r24
 18596 7f1e 0E94 0000 		call report
 18597 7f22 8DB7      		in r24,__SP_L__
 18598 7f24 9EB7      		in r25,__SP_H__
 18599 7f26 0E96      		adiw r24,14
 18600 7f28 0FB6      		in __tmp_reg__,__SREG__
 18601 7f2a F894      		cli
 18602 7f2c DEBF      		out __SP_H__,r29
 18603 7f2e 0FBE      		out __SREG__,__tmp_reg__
 18604 7f30 CDBF      		out __SP_L__,r28
2116:lp_solve_5.5/lp_simplex.c ****     if(lp->perturb_count > 0)
 18605               		.loc 2 2116 0
 18606 7f32 8A85      		ldd r24,Y+10
 18607 7f34 9B85      		ldd r25,Y+11
 18608 7f36 8858      		subi r24,-120
 18609 7f38 9D4F      		sbci r25,-3
 18610 7f3a FC01      		movw r30,r24
 18611 7f3c 8081      		ld r24,Z
 18612 7f3e 9181      		ldd r25,Z+1
 18613 7f40 1816      		cp __zero_reg__,r24
 18614 7f42 1906      		cpc __zero_reg__,r25
 18615 7f44 04F4      		brge .L599
2117:lp_solve_5.5/lp_simplex.c ****       report(lp, NORMAL, "      The bounds were relaxed via perturbations %d times.\n",
 18616               		.loc 2 2117 0
 18617 7f46 8A85      		ldd r24,Y+10
 18618 7f48 9B85      		ldd r25,Y+11
 18619 7f4a 8858      		subi r24,-120
 18620 7f4c 9D4F      		sbci r25,-3
 18621 7f4e FC01      		movw r30,r24
 18622 7f50 8081      		ld r24,Z
 18623 7f52 9181      		ldd r25,Z+1
 18624 7f54 292F      		mov r18,r25
 18625 7f56 2F93      		push r18
 18626 7f58 8F93      		push r24
 18627 7f5a 80E0      		ldi r24,lo8(.LC65)
 18628 7f5c 90E0      		ldi r25,hi8(.LC65)
 18629 7f5e 892F      		mov r24,r25
 18630 7f60 8F93      		push r24
 18631 7f62 80E0      		ldi r24,lo8(.LC65)
 18632 7f64 90E0      		ldi r25,hi8(.LC65)
 18633 7f66 8F93      		push r24
 18634 7f68 1F92      		push __zero_reg__
 18635 7f6a 84E0      		ldi r24,lo8(4)
 18636 7f6c 8F93      		push r24
 18637 7f6e 8B85      		ldd r24,Y+11
 18638 7f70 8F93      		push r24
 18639 7f72 8A85      		ldd r24,Y+10
 18640 7f74 8F93      		push r24
 18641 7f76 0E94 0000 		call report
 18642 7f7a 8DB7      		in r24,__SP_L__
 18643 7f7c 9EB7      		in r25,__SP_H__
 18644 7f7e 0896      		adiw r24,8
 18645 7f80 0FB6      		in __tmp_reg__,__SREG__
 18646 7f82 F894      		cli
 18647 7f84 DEBF      		out __SP_H__,r29
 18648 7f86 0FBE      		out __SREG__,__tmp_reg__
 18649 7f88 CDBF      		out __SP_L__,r28
 18650               	.L599:
2118:lp_solve_5.5/lp_simplex.c ****                           lp->perturb_count);
2119:lp_solve_5.5/lp_simplex.c ****     if(MIP_count(lp) > 0) {
 18651               		.loc 2 2119 0
 18652 7f8a 8A85      		ldd r24,Y+10
 18653 7f8c 9B85      		ldd r25,Y+11
 18654 7f8e 0E94 0000 		call MIP_count
 18655 7f92 1816      		cp __zero_reg__,r24
 18656 7f94 1906      		cpc __zero_reg__,r25
 18657 7f96 04F0      		brlt .+2
 18658 7f98 00C0      		rjmp .L600
2120:lp_solve_5.5/lp_simplex.c ****       if(lp->bb_solutionlevel > 0)
 18659               		.loc 2 2120 0
 18660 7f9a 8A85      		ldd r24,Y+10
 18661 7f9c 9B85      		ldd r25,Y+11
 18662 7f9e 825C      		subi r24,-62
 18663 7fa0 9C4F      		sbci r25,-4
 18664 7fa2 FC01      		movw r30,r24
 18665 7fa4 8081      		ld r24,Z
 18666 7fa6 9181      		ldd r25,Z+1
 18667 7fa8 1816      		cp __zero_reg__,r24
 18668 7faa 1906      		cpc __zero_reg__,r25
 18669 7fac 04F0      		brlt .+2
 18670 7fae 00C0      		rjmp .L601
2121:lp_solve_5.5/lp_simplex.c ****         report(lp, NORMAL, "      The maximum B&B level was %d, %.1fx MIP order, %d at the optimal 
 18671               		.loc 2 2121 0
 18672 7fb0 8A85      		ldd r24,Y+10
 18673 7fb2 9B85      		ldd r25,Y+11
 18674 7fb4 825C      		subi r24,-62
 18675 7fb6 9C4F      		sbci r25,-4
 18676 7fb8 FC01      		movw r30,r24
 18677 7fba 0081      		ld r16,Z
 18678 7fbc 1181      		ldd r17,Z+1
2122:lp_solve_5.5/lp_simplex.c ****                         lp->bb_maxlevel, (double) lp->bb_maxlevel / (MIP_count(lp)+lp->int_vars), l
 18679               		.loc 2 2122 0
 18680 7fbe 8A85      		ldd r24,Y+10
 18681 7fc0 9B85      		ldd r25,Y+11
 18682 7fc2 8E5C      		subi r24,-50
 18683 7fc4 9C4F      		sbci r25,-4
 18684 7fc6 FC01      		movw r30,r24
 18685 7fc8 8081      		ld r24,Z
 18686 7fca 9181      		ldd r25,Z+1
 18687 7fcc 092E      		mov __tmp_reg__,r25
 18688 7fce 000C      		lsl r0
 18689 7fd0 AA0B      		sbc r26,r26
 18690 7fd2 BB0B      		sbc r27,r27
 18691 7fd4 BC01      		movw r22,r24
 18692 7fd6 CD01      		movw r24,r26
 18693 7fd8 0E94 0000 		call __floatsisf
 18694 7fdc 6B01      		movw r12,r22
 18695 7fde 7C01      		movw r14,r24
 18696 7fe0 8A85      		ldd r24,Y+10
 18697 7fe2 9B85      		ldd r25,Y+11
 18698 7fe4 0E94 0000 		call MIP_count
 18699 7fe8 9C01      		movw r18,r24
 18700 7fea 8A85      		ldd r24,Y+10
 18701 7fec 9B85      		ldd r25,Y+11
 18702 7fee 8257      		subi r24,114
 18703 7ff0 9D4F      		sbci r25,-3
 18704 7ff2 FC01      		movw r30,r24
 18705 7ff4 8081      		ld r24,Z
 18706 7ff6 9181      		ldd r25,Z+1
 18707 7ff8 820F      		add r24,r18
 18708 7ffa 931F      		adc r25,r19
2121:lp_solve_5.5/lp_simplex.c ****         report(lp, NORMAL, "      The maximum B&B level was %d, %.1fx MIP order, %d at the optimal 
 18709               		.loc 2 2121 0
 18710 7ffc 092E      		mov __tmp_reg__,r25
 18711 7ffe 000C      		lsl r0
 18712 8000 AA0B      		sbc r26,r26
 18713 8002 BB0B      		sbc r27,r27
 18714 8004 BC01      		movw r22,r24
 18715 8006 CD01      		movw r24,r26
 18716 8008 0E94 0000 		call __floatsisf
 18717 800c DC01      		movw r26,r24
 18718 800e CB01      		movw r24,r22
 18719 8010 9C01      		movw r18,r24
 18720 8012 AD01      		movw r20,r26
 18721 8014 C701      		movw r24,r14
 18722 8016 B601      		movw r22,r12
 18723 8018 0E94 0000 		call __divsf3
 18724 801c DC01      		movw r26,r24
 18725 801e CB01      		movw r24,r22
 18726 8020 2A85      		ldd r18,Y+10
 18727 8022 3B85      		ldd r19,Y+11
 18728 8024 2E5C      		subi r18,-50
 18729 8026 3C4F      		sbci r19,-4
 18730 8028 F901      		movw r30,r18
 18731 802a 2081      		ld r18,Z
 18732 802c 3181      		ldd r19,Z+1
 18733 802e 412F      		mov r20,r17
 18734 8030 4F93      		push r20
 18735 8032 402F      		mov r20,r16
 18736 8034 4F93      		push r20
 18737 8036 4B2F      		mov r20,r27
 18738 8038 4F93      		push r20
 18739 803a 4A2F      		mov r20,r26
 18740 803c 4F93      		push r20
 18741 803e 492F      		mov r20,r25
 18742 8040 4F93      		push r20
 18743 8042 8F93      		push r24
 18744 8044 832F      		mov r24,r19
 18745 8046 8F93      		push r24
 18746 8048 822F      		mov r24,r18
 18747 804a 8F93      		push r24
 18748 804c 80E0      		ldi r24,lo8(.LC66)
 18749 804e 90E0      		ldi r25,hi8(.LC66)
 18750 8050 892F      		mov r24,r25
 18751 8052 8F93      		push r24
 18752 8054 80E0      		ldi r24,lo8(.LC66)
 18753 8056 90E0      		ldi r25,hi8(.LC66)
 18754 8058 8F93      		push r24
 18755 805a 1F92      		push __zero_reg__
 18756 805c 84E0      		ldi r24,lo8(4)
 18757 805e 8F93      		push r24
 18758 8060 8B85      		ldd r24,Y+11
 18759 8062 8F93      		push r24
 18760 8064 8A85      		ldd r24,Y+10
 18761 8066 8F93      		push r24
 18762 8068 0E94 0000 		call report
 18763 806c 8DB7      		in r24,__SP_L__
 18764 806e 9EB7      		in r25,__SP_H__
 18765 8070 0E96      		adiw r24,14
 18766 8072 0FB6      		in __tmp_reg__,__SREG__
 18767 8074 F894      		cli
 18768 8076 DEBF      		out __SP_H__,r29
 18769 8078 0FBE      		out __SREG__,__tmp_reg__
 18770 807a CDBF      		out __SP_L__,r28
 18771 807c 00C0      		rjmp .L602
 18772               	.L601:
2123:lp_solve_5.5/lp_simplex.c ****       else
2124:lp_solve_5.5/lp_simplex.c ****         report(lp, NORMAL, "      The maximum B&B level was %d, %.1fx MIP order, with %.0f nodes ex
2125:lp_solve_5.5/lp_simplex.c ****                         lp->bb_maxlevel, (double) lp->bb_maxlevel / (MIP_count(lp)+lp->int_vars), (
 18773               		.loc 2 2125 0
 18774 807e 8A85      		ldd r24,Y+10
 18775 8080 9B85      		ldd r25,Y+11
 18776 8082 0E94 0000 		call get_total_nodes
 18777 8086 A22E      		mov r10,r18
 18778 8088 B32E      		mov r11,r19
 18779 808a C42E      		mov r12,r20
 18780 808c D52E      		mov r13,r21
 18781 808e E62E      		mov r14,r22
 18782 8090 F72E      		mov r15,r23
 18783 8092 082F      		mov r16,r24
 18784 8094 192F      		mov r17,r25
2124:lp_solve_5.5/lp_simplex.c ****                         lp->bb_maxlevel, (double) lp->bb_maxlevel / (MIP_count(lp)+lp->int_vars), (
 18785               		.loc 2 2124 0
 18786 8096 2A2D      		mov r18,r10
 18787 8098 3B2D      		mov r19,r11
 18788 809a 4C2D      		mov r20,r12
 18789 809c 5D2D      		mov r21,r13
 18790 809e 6E2D      		mov r22,r14
 18791 80a0 7F2D      		mov r23,r15
 18792 80a2 802F      		mov r24,r16
 18793 80a4 912F      		mov r25,r17
 18794 80a6 0E94 0000 		call __floatdisf
 18795 80aa 6B01      		movw r12,r22
 18796 80ac 7C01      		movw r14,r24
 18797               		.loc 2 2125 0
 18798 80ae 8A85      		ldd r24,Y+10
 18799 80b0 9B85      		ldd r25,Y+11
 18800 80b2 8E5C      		subi r24,-50
 18801 80b4 9C4F      		sbci r25,-4
 18802 80b6 FC01      		movw r30,r24
 18803 80b8 8081      		ld r24,Z
 18804 80ba 9181      		ldd r25,Z+1
 18805 80bc 092E      		mov __tmp_reg__,r25
 18806 80be 000C      		lsl r0
 18807 80c0 AA0B      		sbc r26,r26
 18808 80c2 BB0B      		sbc r27,r27
 18809 80c4 BC01      		movw r22,r24
 18810 80c6 CD01      		movw r24,r26
 18811 80c8 0E94 0000 		call __floatsisf
 18812 80cc 4B01      		movw r8,r22
 18813 80ce 5C01      		movw r10,r24
 18814 80d0 8A85      		ldd r24,Y+10
 18815 80d2 9B85      		ldd r25,Y+11
 18816 80d4 0E94 0000 		call MIP_count
 18817 80d8 9C01      		movw r18,r24
 18818 80da 8A85      		ldd r24,Y+10
 18819 80dc 9B85      		ldd r25,Y+11
 18820 80de 8257      		subi r24,114
 18821 80e0 9D4F      		sbci r25,-3
 18822 80e2 FC01      		movw r30,r24
 18823 80e4 8081      		ld r24,Z
 18824 80e6 9181      		ldd r25,Z+1
 18825 80e8 820F      		add r24,r18
 18826 80ea 931F      		adc r25,r19
2124:lp_solve_5.5/lp_simplex.c ****                         lp->bb_maxlevel, (double) lp->bb_maxlevel / (MIP_count(lp)+lp->int_vars), (
 18827               		.loc 2 2124 0
 18828 80ec 092E      		mov __tmp_reg__,r25
 18829 80ee 000C      		lsl r0
 18830 80f0 AA0B      		sbc r26,r26
 18831 80f2 BB0B      		sbc r27,r27
 18832 80f4 BC01      		movw r22,r24
 18833 80f6 CD01      		movw r24,r26
 18834 80f8 0E94 0000 		call __floatsisf
 18835 80fc DC01      		movw r26,r24
 18836 80fe CB01      		movw r24,r22
 18837 8100 9C01      		movw r18,r24
 18838 8102 AD01      		movw r20,r26
 18839 8104 C501      		movw r24,r10
 18840 8106 B401      		movw r22,r8
 18841 8108 0E94 0000 		call __divsf3
 18842 810c DC01      		movw r26,r24
 18843 810e CB01      		movw r24,r22
 18844 8110 2A85      		ldd r18,Y+10
 18845 8112 3B85      		ldd r19,Y+11
 18846 8114 2E5C      		subi r18,-50
 18847 8116 3C4F      		sbci r19,-4
 18848 8118 F901      		movw r30,r18
 18849 811a 2081      		ld r18,Z
 18850 811c 3181      		ldd r19,Z+1
 18851 811e 4F2D      		mov r20,r15
 18852 8120 4F93      		push r20
 18853 8122 4E2D      		mov r20,r14
 18854 8124 4F93      		push r20
 18855 8126 4D2D      		mov r20,r13
 18856 8128 4F93      		push r20
 18857 812a 4C2D      		mov r20,r12
 18858 812c 4F93      		push r20
 18859 812e 4B2F      		mov r20,r27
 18860 8130 4F93      		push r20
 18861 8132 4A2F      		mov r20,r26
 18862 8134 4F93      		push r20
 18863 8136 492F      		mov r20,r25
 18864 8138 4F93      		push r20
 18865 813a 8F93      		push r24
 18866 813c 832F      		mov r24,r19
 18867 813e 8F93      		push r24
 18868 8140 822F      		mov r24,r18
 18869 8142 8F93      		push r24
 18870 8144 80E0      		ldi r24,lo8(.LC67)
 18871 8146 90E0      		ldi r25,hi8(.LC67)
 18872 8148 892F      		mov r24,r25
 18873 814a 8F93      		push r24
 18874 814c 80E0      		ldi r24,lo8(.LC67)
 18875 814e 90E0      		ldi r25,hi8(.LC67)
 18876 8150 8F93      		push r24
 18877 8152 1F92      		push __zero_reg__
 18878 8154 84E0      		ldi r24,lo8(4)
 18879 8156 8F93      		push r24
 18880 8158 8B85      		ldd r24,Y+11
 18881 815a 8F93      		push r24
 18882 815c 8A85      		ldd r24,Y+10
 18883 815e 8F93      		push r24
 18884 8160 0E94 0000 		call report
 18885 8164 8DB7      		in r24,__SP_L__
 18886 8166 9EB7      		in r25,__SP_H__
 18887 8168 4096      		adiw r24,16
 18888 816a 0FB6      		in __tmp_reg__,__SREG__
 18889 816c F894      		cli
 18890 816e DEBF      		out __SP_H__,r29
 18891 8170 0FBE      		out __SREG__,__tmp_reg__
 18892 8172 CDBF      		out __SP_L__,r28
 18893               	.L602:
2126:lp_solve_5.5/lp_simplex.c ****       if(GUB_count(lp) > 0)
 18894               		.loc 2 2126 0
 18895 8174 8A85      		ldd r24,Y+10
 18896 8176 9B85      		ldd r25,Y+11
 18897 8178 0E94 0000 		call GUB_count
 18898 817c 1816      		cp __zero_reg__,r24
 18899 817e 1906      		cpc __zero_reg__,r25
 18900 8180 04F4      		brge .L600
2127:lp_solve_5.5/lp_simplex.c ****         report(lp, NORMAL, "      %d general upper-bounded (GUB) structures were employed during B&
 18901               		.loc 2 2127 0
 18902 8182 8A85      		ldd r24,Y+10
 18903 8184 9B85      		ldd r25,Y+11
 18904 8186 0E94 0000 		call GUB_count
 18905 818a 292F      		mov r18,r25
 18906 818c 2F93      		push r18
 18907 818e 8F93      		push r24
 18908 8190 80E0      		ldi r24,lo8(.LC68)
 18909 8192 90E0      		ldi r25,hi8(.LC68)
 18910 8194 892F      		mov r24,r25
 18911 8196 8F93      		push r24
 18912 8198 80E0      		ldi r24,lo8(.LC68)
 18913 819a 90E0      		ldi r25,hi8(.LC68)
 18914 819c 8F93      		push r24
 18915 819e 1F92      		push __zero_reg__
 18916 81a0 84E0      		ldi r24,lo8(4)
 18917 81a2 8F93      		push r24
 18918 81a4 8B85      		ldd r24,Y+11
 18919 81a6 8F93      		push r24
 18920 81a8 8A85      		ldd r24,Y+10
 18921 81aa 8F93      		push r24
 18922 81ac 0E94 0000 		call report
 18923 81b0 EDB7      		in r30,__SP_L__
 18924 81b2 FEB7      		in r31,__SP_H__
 18925 81b4 3896      		adiw r30,8
 18926 81b6 0FB6      		in __tmp_reg__,__SREG__
 18927 81b8 F894      		cli
 18928 81ba DEBF      		out __SP_H__,r29
 18929 81bc 0FBE      		out __SREG__,__tmp_reg__
 18930 81be CDBF      		out __SP_L__,r28
 18931               	.L600:
2128:lp_solve_5.5/lp_simplex.c ****                          GUB_count(lp));
2129:lp_solve_5.5/lp_simplex.c ****     }
2130:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "      The constraint matrix inf-norm is %g, with a dynamic range of %g.\n",
2131:lp_solve_5.5/lp_simplex.c ****                         lp->matA->infnorm, lp->matA->dynrange);
 18932               		.loc 2 2131 0
 18933 81c0 8A85      		ldd r24,Y+10
 18934 81c2 9B85      		ldd r25,Y+11
 18935 81c4 8A54      		subi r24,74
 18936 81c6 9D4F      		sbci r25,-3
 18937 81c8 FC01      		movw r30,r24
 18938 81ca 8081      		ld r24,Z
 18939 81cc 9181      		ldd r25,Z+1
2130:lp_solve_5.5/lp_simplex.c ****                         lp->matA->infnorm, lp->matA->dynrange);
 18940               		.loc 2 2130 0
 18941 81ce FC01      		movw r30,r24
 18942 81d0 20A5      		ldd r18,Z+40
 18943 81d2 31A5      		ldd r19,Z+41
 18944 81d4 42A5      		ldd r20,Z+42
 18945 81d6 53A5      		ldd r21,Z+43
 18946               		.loc 2 2131 0
 18947 81d8 8A85      		ldd r24,Y+10
 18948 81da 9B85      		ldd r25,Y+11
 18949 81dc 8A54      		subi r24,74
 18950 81de 9D4F      		sbci r25,-3
 18951 81e0 FC01      		movw r30,r24
 18952 81e2 8081      		ld r24,Z
 18953 81e4 9181      		ldd r25,Z+1
2130:lp_solve_5.5/lp_simplex.c ****                         lp->matA->infnorm, lp->matA->dynrange);
 18954               		.loc 2 2130 0
 18955 81e6 FC01      		movw r30,r24
 18956 81e8 84A1      		ldd r24,Z+36
 18957 81ea 95A1      		ldd r25,Z+37
 18958 81ec A6A1      		ldd r26,Z+38
 18959 81ee B7A1      		ldd r27,Z+39
 18960 81f0 652F      		mov r22,r21
 18961 81f2 6F93      		push r22
 18962 81f4 642F      		mov r22,r20
 18963 81f6 6F93      		push r22
 18964 81f8 632F      		mov r22,r19
 18965 81fa 6F93      		push r22
 18966 81fc 2F93      		push r18
 18967 81fe 2B2F      		mov r18,r27
 18968 8200 2F93      		push r18
 18969 8202 2A2F      		mov r18,r26
 18970 8204 2F93      		push r18
 18971 8206 292F      		mov r18,r25
 18972 8208 2F93      		push r18
 18973 820a 8F93      		push r24
 18974 820c 80E0      		ldi r24,lo8(.LC69)
 18975 820e 90E0      		ldi r25,hi8(.LC69)
 18976 8210 892F      		mov r24,r25
 18977 8212 8F93      		push r24
 18978 8214 80E0      		ldi r24,lo8(.LC69)
 18979 8216 90E0      		ldi r25,hi8(.LC69)
 18980 8218 8F93      		push r24
 18981 821a 1F92      		push __zero_reg__
 18982 821c 84E0      		ldi r24,lo8(4)
 18983 821e 8F93      		push r24
 18984 8220 8B85      		ldd r24,Y+11
 18985 8222 8F93      		push r24
 18986 8224 8A85      		ldd r24,Y+10
 18987 8226 8F93      		push r24
 18988 8228 0E94 0000 		call report
 18989 822c 8DB7      		in r24,__SP_L__
 18990 822e 9EB7      		in r25,__SP_H__
 18991 8230 0E96      		adiw r24,14
 18992 8232 0FB6      		in __tmp_reg__,__SREG__
 18993 8234 F894      		cli
 18994 8236 DEBF      		out __SP_H__,r29
 18995 8238 0FBE      		out __SREG__,__tmp_reg__
 18996 823a CDBF      		out __SP_L__,r28
2132:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "      Time to load data was %.3f seconds, presolve used %.3f seconds,\n",
2133:lp_solve_5.5/lp_simplex.c ****                         lp->timestart-lp->timecreate, lp->timepresolved-lp->timestart);
 18997               		.loc 2 2133 0
 18998 823c 8A85      		ldd r24,Y+10
 18999 823e 9B85      		ldd r25,Y+11
 19000 8240 8E57      		subi r24,126
 19001 8242 9C4F      		sbci r25,-4
 19002 8244 FC01      		movw r30,r24
 19003 8246 8081      		ld r24,Z
 19004 8248 9181      		ldd r25,Z+1
 19005 824a A281      		ldd r26,Z+2
 19006 824c B381      		ldd r27,Z+3
 19007 824e 2A85      		ldd r18,Y+10
 19008 8250 3B85      		ldd r19,Y+11
 19009 8252 2658      		subi r18,-122
 19010 8254 3C4F      		sbci r19,-4
 19011 8256 F901      		movw r30,r18
 19012 8258 2081      		ld r18,Z
 19013 825a 3181      		ldd r19,Z+1
 19014 825c 4281      		ldd r20,Z+2
 19015 825e 5381      		ldd r21,Z+3
2132:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "      Time to load data was %.3f seconds, presolve used %.3f seconds,\n",
 19016               		.loc 2 2132 0
 19017 8260 BC01      		movw r22,r24
 19018 8262 CD01      		movw r24,r26
 19019 8264 0E94 0000 		call __subsf3
 19020 8268 DC01      		movw r26,r24
 19021 826a CB01      		movw r24,r22
 19022 826c 6C01      		movw r12,r24
 19023 826e 7D01      		movw r14,r26
 19024               		.loc 2 2133 0
 19025 8270 8A85      		ldd r24,Y+10
 19026 8272 9B85      		ldd r25,Y+11
 19027 8274 8658      		subi r24,-122
 19028 8276 9C4F      		sbci r25,-4
 19029 8278 FC01      		movw r30,r24
 19030 827a 8081      		ld r24,Z
 19031 827c 9181      		ldd r25,Z+1
 19032 827e A281      		ldd r26,Z+2
 19033 8280 B381      		ldd r27,Z+3
 19034 8282 2A85      		ldd r18,Y+10
 19035 8284 3B85      		ldd r19,Y+11
 19036 8286 2A58      		subi r18,-118
 19037 8288 3C4F      		sbci r19,-4
 19038 828a F901      		movw r30,r18
 19039 828c 2081      		ld r18,Z
 19040 828e 3181      		ldd r19,Z+1
 19041 8290 4281      		ldd r20,Z+2
 19042 8292 5381      		ldd r21,Z+3
2132:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "      Time to load data was %.3f seconds, presolve used %.3f seconds,\n",
 19043               		.loc 2 2132 0
 19044 8294 BC01      		movw r22,r24
 19045 8296 CD01      		movw r24,r26
 19046 8298 0E94 0000 		call __subsf3
 19047 829c DC01      		movw r26,r24
 19048 829e CB01      		movw r24,r22
 19049 82a0 2F2D      		mov r18,r15
 19050 82a2 2F93      		push r18
 19051 82a4 2E2D      		mov r18,r14
 19052 82a6 2F93      		push r18
 19053 82a8 2D2D      		mov r18,r13
 19054 82aa 2F93      		push r18
 19055 82ac 2C2D      		mov r18,r12
 19056 82ae 2F93      		push r18
 19057 82b0 2B2F      		mov r18,r27
 19058 82b2 2F93      		push r18
 19059 82b4 2A2F      		mov r18,r26
 19060 82b6 2F93      		push r18
 19061 82b8 292F      		mov r18,r25
 19062 82ba 2F93      		push r18
 19063 82bc 8F93      		push r24
 19064 82be 80E0      		ldi r24,lo8(.LC70)
 19065 82c0 90E0      		ldi r25,hi8(.LC70)
 19066 82c2 892F      		mov r24,r25
 19067 82c4 8F93      		push r24
 19068 82c6 80E0      		ldi r24,lo8(.LC70)
 19069 82c8 90E0      		ldi r25,hi8(.LC70)
 19070 82ca 8F93      		push r24
 19071 82cc 1F92      		push __zero_reg__
 19072 82ce 84E0      		ldi r24,lo8(4)
 19073 82d0 8F93      		push r24
 19074 82d2 8B85      		ldd r24,Y+11
 19075 82d4 8F93      		push r24
 19076 82d6 8A85      		ldd r24,Y+10
 19077 82d8 8F93      		push r24
 19078 82da 0E94 0000 		call report
 19079 82de 8DB7      		in r24,__SP_L__
 19080 82e0 9EB7      		in r25,__SP_H__
 19081 82e2 0E96      		adiw r24,14
 19082 82e4 0FB6      		in __tmp_reg__,__SREG__
 19083 82e6 F894      		cli
 19084 82e8 DEBF      		out __SP_H__,r29
 19085 82ea 0FBE      		out __SREG__,__tmp_reg__
 19086 82ec CDBF      		out __SP_L__,r28
2134:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "       ... %.3f seconds in simplex solver, in total %.3f seconds.\n",
2135:lp_solve_5.5/lp_simplex.c ****                         lp->timeend-lp->timepresolved, lp->timeend-lp->timecreate);
 19087               		.loc 2 2135 0
 19088 82ee 8A85      		ldd r24,Y+10
 19089 82f0 9B85      		ldd r25,Y+11
 19090 82f2 8A57      		subi r24,122
 19091 82f4 9C4F      		sbci r25,-4
 19092 82f6 FC01      		movw r30,r24
 19093 82f8 8081      		ld r24,Z
 19094 82fa 9181      		ldd r25,Z+1
 19095 82fc A281      		ldd r26,Z+2
 19096 82fe B381      		ldd r27,Z+3
 19097 8300 2A85      		ldd r18,Y+10
 19098 8302 3B85      		ldd r19,Y+11
 19099 8304 2A58      		subi r18,-118
 19100 8306 3C4F      		sbci r19,-4
 19101 8308 F901      		movw r30,r18
 19102 830a 2081      		ld r18,Z
 19103 830c 3181      		ldd r19,Z+1
 19104 830e 4281      		ldd r20,Z+2
 19105 8310 5381      		ldd r21,Z+3
2134:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "       ... %.3f seconds in simplex solver, in total %.3f seconds.\n",
 19106               		.loc 2 2134 0
 19107 8312 BC01      		movw r22,r24
 19108 8314 CD01      		movw r24,r26
 19109 8316 0E94 0000 		call __subsf3
 19110 831a DC01      		movw r26,r24
 19111 831c CB01      		movw r24,r22
 19112 831e 6C01      		movw r12,r24
 19113 8320 7D01      		movw r14,r26
 19114               		.loc 2 2135 0
 19115 8322 8A85      		ldd r24,Y+10
 19116 8324 9B85      		ldd r25,Y+11
 19117 8326 8A57      		subi r24,122
 19118 8328 9C4F      		sbci r25,-4
 19119 832a FC01      		movw r30,r24
 19120 832c 8081      		ld r24,Z
 19121 832e 9181      		ldd r25,Z+1
 19122 8330 A281      		ldd r26,Z+2
 19123 8332 B381      		ldd r27,Z+3
 19124 8334 2A85      		ldd r18,Y+10
 19125 8336 3B85      		ldd r19,Y+11
 19126 8338 2E57      		subi r18,126
 19127 833a 3C4F      		sbci r19,-4
 19128 833c F901      		movw r30,r18
 19129 833e 2081      		ld r18,Z
 19130 8340 3181      		ldd r19,Z+1
 19131 8342 4281      		ldd r20,Z+2
 19132 8344 5381      		ldd r21,Z+3
2134:lp_solve_5.5/lp_simplex.c ****     report(lp, NORMAL, "       ... %.3f seconds in simplex solver, in total %.3f seconds.\n",
 19133               		.loc 2 2134 0
 19134 8346 BC01      		movw r22,r24
 19135 8348 CD01      		movw r24,r26
 19136 834a 0E94 0000 		call __subsf3
 19137 834e DC01      		movw r26,r24
 19138 8350 CB01      		movw r24,r22
 19139 8352 2F2D      		mov r18,r15
 19140 8354 2F93      		push r18
 19141 8356 2E2D      		mov r18,r14
 19142 8358 2F93      		push r18
 19143 835a 2D2D      		mov r18,r13
 19144 835c 2F93      		push r18
 19145 835e 2C2D      		mov r18,r12
 19146 8360 2F93      		push r18
 19147 8362 2B2F      		mov r18,r27
 19148 8364 2F93      		push r18
 19149 8366 2A2F      		mov r18,r26
 19150 8368 2F93      		push r18
 19151 836a 292F      		mov r18,r25
 19152 836c 2F93      		push r18
 19153 836e 8F93      		push r24
 19154 8370 80E0      		ldi r24,lo8(.LC71)
 19155 8372 90E0      		ldi r25,hi8(.LC71)
 19156 8374 892F      		mov r24,r25
 19157 8376 8F93      		push r24
 19158 8378 80E0      		ldi r24,lo8(.LC71)
 19159 837a 90E0      		ldi r25,hi8(.LC71)
 19160 837c 8F93      		push r24
 19161 837e 1F92      		push __zero_reg__
 19162 8380 84E0      		ldi r24,lo8(4)
 19163 8382 8F93      		push r24
 19164 8384 8B85      		ldd r24,Y+11
 19165 8386 8F93      		push r24
 19166 8388 8A85      		ldd r24,Y+10
 19167 838a 8F93      		push r24
 19168 838c 0E94 0000 		call report
 19169 8390 8DB7      		in r24,__SP_L__
 19170 8392 9EB7      		in r25,__SP_H__
 19171 8394 0E96      		adiw r24,14
 19172 8396 0FB6      		in __tmp_reg__,__SREG__
 19173 8398 F894      		cli
 19174 839a DEBF      		out __SP_H__,r29
 19175 839c 0FBE      		out __SREG__,__tmp_reg__
 19176 839e CDBF      		out __SP_L__,r28
 19177               	.L597:
 19178               	.LBE6:
2136:lp_solve_5.5/lp_simplex.c ****   }
2137:lp_solve_5.5/lp_simplex.c ****   return( lp->spx_status );
 19179               		.loc 2 2137 0
 19180 83a0 8A85      		ldd r24,Y+10
 19181 83a2 9B85      		ldd r25,Y+11
 19182 83a4 8A5F      		subi r24,-6
 19183 83a6 9D4F      		sbci r25,-3
 19184 83a8 FC01      		movw r30,r24
 19185 83aa 8081      		ld r24,Z
 19186 83ac 9181      		ldd r25,Z+1
 19187               	/* epilogue start */
2138:lp_solve_5.5/lp_simplex.c **** 
2139:lp_solve_5.5/lp_simplex.c **** } /* spx_solve */
 19188               		.loc 2 2139 0
 19189 83ae 2B96      		adiw r28,11
 19190 83b0 0FB6      		in __tmp_reg__,__SREG__
 19191 83b2 F894      		cli
 19192 83b4 DEBF      		out __SP_H__,r29
 19193 83b6 0FBE      		out __SREG__,__tmp_reg__
 19194 83b8 CDBF      		out __SP_L__,r28
 19195 83ba DF91      		pop r29
 19196 83bc CF91      		pop r28
 19197 83be 1F91      		pop r17
 19198 83c0 0F91      		pop r16
 19199 83c2 FF90      		pop r15
 19200 83c4 EF90      		pop r14
 19201 83c6 DF90      		pop r13
 19202 83c8 CF90      		pop r12
 19203 83ca BF90      		pop r11
 19204 83cc AF90      		pop r10
 19205 83ce 9F90      		pop r9
 19206 83d0 8F90      		pop r8
 19207 83d2 7F90      		pop r7
 19208 83d4 6F90      		pop r6
 19209 83d6 0895      		ret
 19210               		.cfi_endproc
 19211               	.LFE28:
 19213               		.section	.rodata
 19214               	.LC72:
 19215 0e08 0A43 616E 		.string	"\nCannot do Lagrangean optimization since root model was not solved.\n"
 19215      6E6F 7420 
 19215      646F 204C 
 19215      6167 7261 
 19215      6E67 6561 
 19216               		.text
 19217               	.global	lin_solve
 19219               	lin_solve:
 19220               	.LFB29:
2140:lp_solve_5.5/lp_simplex.c **** 
2141:lp_solve_5.5/lp_simplex.c **** int lin_solve(lprec *lp)
2142:lp_solve_5.5/lp_simplex.c **** {
 19221               		.loc 2 2142 0
 19222               		.cfi_startproc
 19223 83d8 AF92      		push r10
 19224               	.LCFI172:
 19225               		.cfi_def_cfa_offset 3
 19226               		.cfi_offset 10, -2
 19227 83da BF92      		push r11
 19228               	.LCFI173:
 19229               		.cfi_def_cfa_offset 4
 19230               		.cfi_offset 11, -3
 19231 83dc CF92      		push r12
 19232               	.LCFI174:
 19233               		.cfi_def_cfa_offset 5
 19234               		.cfi_offset 12, -4
 19235 83de DF92      		push r13
 19236               	.LCFI175:
 19237               		.cfi_def_cfa_offset 6
 19238               		.cfi_offset 13, -5
 19239 83e0 EF92      		push r14
 19240               	.LCFI176:
 19241               		.cfi_def_cfa_offset 7
 19242               		.cfi_offset 14, -6
 19243 83e2 FF92      		push r15
 19244               	.LCFI177:
 19245               		.cfi_def_cfa_offset 8
 19246               		.cfi_offset 15, -7
 19247 83e4 0F93      		push r16
 19248               	.LCFI178:
 19249               		.cfi_def_cfa_offset 9
 19250               		.cfi_offset 16, -8
 19251 83e6 1F93      		push r17
 19252               	.LCFI179:
 19253               		.cfi_def_cfa_offset 10
 19254               		.cfi_offset 17, -9
 19255 83e8 CF93      		push r28
 19256               	.LCFI180:
 19257               		.cfi_def_cfa_offset 11
 19258               		.cfi_offset 28, -10
 19259 83ea DF93      		push r29
 19260               	.LCFI181:
 19261               		.cfi_def_cfa_offset 12
 19262               		.cfi_offset 29, -11
 19263 83ec 00D0      		rcall .
 19264 83ee 00D0      		rcall .
 19265               	.LCFI182:
 19266               		.cfi_def_cfa_offset 16
 19267 83f0 CDB7      		in r28,__SP_L__
 19268 83f2 DEB7      		in r29,__SP_H__
 19269               	.LCFI183:
 19270               		.cfi_def_cfa_register 28
 19271               	/* prologue: function */
 19272               	/* frame size = 4 */
 19273               	/* stack size = 14 */
 19274               	.L__stack_usage = 14
 19275 83f4 9C83      		std Y+4,r25
 19276 83f6 8B83      		std Y+3,r24
2143:lp_solve_5.5/lp_simplex.c ****   int status = NOTRUN;
 19277               		.loc 2 2143 0
 19278 83f8 8FEF      		ldi r24,lo8(-1)
 19279 83fa 9FEF      		ldi r25,lo8(-1)
 19280 83fc 9A83      		std Y+2,r25
 19281 83fe 8983      		std Y+1,r24
2144:lp_solve_5.5/lp_simplex.c **** 
2145:lp_solve_5.5/lp_simplex.c ****   /* Don't do anything in case of an empty model */
2146:lp_solve_5.5/lp_simplex.c ****   lp->lag_status = NOTRUN;
 19282               		.loc 2 2146 0
 19283 8400 8B81      		ldd r24,Y+3
 19284 8402 9C81      		ldd r25,Y+4
 19285 8404 885F      		subi r24,-8
 19286 8406 9D4F      		sbci r25,-3
 19287 8408 2FEF      		ldi r18,lo8(-1)
 19288 840a 3FEF      		ldi r19,lo8(-1)
 19289 840c FC01      		movw r30,r24
 19290 840e 3183      		std Z+1,r19
 19291 8410 2083      		st Z,r18
2147:lp_solve_5.5/lp_simplex.c ****   /* if(get_nonzeros(lp) == 0) { */
2148:lp_solve_5.5/lp_simplex.c ****   if(lp->columns == 0) {
 19292               		.loc 2 2148 0
 19293 8412 8B81      		ldd r24,Y+3
 19294 8414 9C81      		ldd r25,Y+4
 19295 8416 8451      		subi r24,20
 19296 8418 9E4F      		sbci r25,-2
 19297 841a FC01      		movw r30,r24
 19298 841c 8081      		ld r24,Z
 19299 841e 9181      		ldd r25,Z+1
 19300 8420 892B      		or r24,r25
 19301 8422 01F4      		brne .L608
2149:lp_solve_5.5/lp_simplex.c ****     default_basis(lp);
 19302               		.loc 2 2149 0
 19303 8424 8B81      		ldd r24,Y+3
 19304 8426 9C81      		ldd r25,Y+4
 19305 8428 0E94 0000 		call default_basis
2150:lp_solve_5.5/lp_simplex.c ****     lp->spx_status = NOTRUN;
 19306               		.loc 2 2150 0
 19307 842c 8B81      		ldd r24,Y+3
 19308 842e 9C81      		ldd r25,Y+4
 19309 8430 8A5F      		subi r24,-6
 19310 8432 9D4F      		sbci r25,-3
 19311 8434 2FEF      		ldi r18,lo8(-1)
 19312 8436 3FEF      		ldi r19,lo8(-1)
 19313 8438 FC01      		movw r30,r24
 19314 843a 3183      		std Z+1,r19
 19315 843c 2083      		st Z,r18
2151:lp_solve_5.5/lp_simplex.c ****     return( /* OPTIMAL */ lp->spx_status);
 19316               		.loc 2 2151 0
 19317 843e 8B81      		ldd r24,Y+3
 19318 8440 9C81      		ldd r25,Y+4
 19319 8442 8A5F      		subi r24,-6
 19320 8444 9D4F      		sbci r25,-3
 19321 8446 FC01      		movw r30,r24
 19322 8448 8081      		ld r24,Z
 19323 844a 9181      		ldd r25,Z+1
 19324 844c 00C0      		rjmp .L609
 19325               	.L608:
2152:lp_solve_5.5/lp_simplex.c ****   }
2153:lp_solve_5.5/lp_simplex.c **** 
2154:lp_solve_5.5/lp_simplex.c ****   /* Otherwise reset selected arrays before solving */
2155:lp_solve_5.5/lp_simplex.c ****   unset_OF_p1extra(lp);
 19326               		.loc 2 2155 0
 19327 844e 8B81      		ldd r24,Y+3
 19328 8450 9C81      		ldd r25,Y+4
 19329 8452 0E94 0000 		call unset_OF_p1extra
2156:lp_solve_5.5/lp_simplex.c ****   free_duals(lp);
 19330               		.loc 2 2156 0
 19331 8456 8B81      		ldd r24,Y+3
 19332 8458 9C81      		ldd r25,Y+4
 19333 845a 0E94 0000 		call free_duals
2157:lp_solve_5.5/lp_simplex.c ****   FREE(lp->drow);
 19334               		.loc 2 2157 0
 19335 845e 8B81      		ldd r24,Y+3
 19336 8460 9C81      		ldd r25,Y+4
 19337 8462 865E      		subi r24,-26
 19338 8464 9D4F      		sbci r25,-3
 19339 8466 FC01      		movw r30,r24
 19340 8468 8081      		ld r24,Z
 19341 846a 9181      		ldd r25,Z+1
 19342 846c 892B      		or r24,r25
 19343 846e 01F0      		breq .L610
 19344               		.loc 2 2157 0 is_stmt 0 discriminator 1
 19345 8470 8B81      		ldd r24,Y+3
 19346 8472 9C81      		ldd r25,Y+4
 19347 8474 865E      		subi r24,-26
 19348 8476 9D4F      		sbci r25,-3
 19349 8478 FC01      		movw r30,r24
 19350 847a 8081      		ld r24,Z
 19351 847c 9181      		ldd r25,Z+1
 19352 847e 0E94 0000 		call free
 19353 8482 8B81      		ldd r24,Y+3
 19354 8484 9C81      		ldd r25,Y+4
 19355 8486 865E      		subi r24,-26
 19356 8488 9D4F      		sbci r25,-3
 19357 848a FC01      		movw r30,r24
 19358 848c 1182      		std Z+1,__zero_reg__
 19359 848e 1082      		st Z,__zero_reg__
 19360               	.L610:
2158:lp_solve_5.5/lp_simplex.c ****   FREE(lp->nzdrow);
 19361               		.loc 2 2158 0 is_stmt 1
 19362 8490 8B81      		ldd r24,Y+3
 19363 8492 9C81      		ldd r25,Y+4
 19364 8494 845E      		subi r24,-28
 19365 8496 9D4F      		sbci r25,-3
 19366 8498 FC01      		movw r30,r24
 19367 849a 8081      		ld r24,Z
 19368 849c 9181      		ldd r25,Z+1
 19369 849e 892B      		or r24,r25
 19370 84a0 01F0      		breq .L611
 19371               		.loc 2 2158 0 is_stmt 0 discriminator 1
 19372 84a2 8B81      		ldd r24,Y+3
 19373 84a4 9C81      		ldd r25,Y+4
 19374 84a6 845E      		subi r24,-28
 19375 84a8 9D4F      		sbci r25,-3
 19376 84aa FC01      		movw r30,r24
 19377 84ac 8081      		ld r24,Z
 19378 84ae 9181      		ldd r25,Z+1
 19379 84b0 0E94 0000 		call free
 19380 84b4 8B81      		ldd r24,Y+3
 19381 84b6 9C81      		ldd r25,Y+4
 19382 84b8 845E      		subi r24,-28
 19383 84ba 9D4F      		sbci r25,-3
 19384 84bc FC01      		movw r30,r24
 19385 84be 1182      		std Z+1,__zero_reg__
 19386 84c0 1082      		st Z,__zero_reg__
 19387               	.L611:
2159:lp_solve_5.5/lp_simplex.c ****   if(lp->bb_cuttype != NULL)
 19388               		.loc 2 2159 0 is_stmt 1
 19389 84c2 8B81      		ldd r24,Y+3
 19390 84c4 9C81      		ldd r25,Y+4
 19391 84c6 8A5B      		subi r24,-70
 19392 84c8 9C4F      		sbci r25,-4
 19393 84ca FC01      		movw r30,r24
 19394 84cc 8081      		ld r24,Z
 19395 84ce 9181      		ldd r25,Z+1
 19396 84d0 892B      		or r24,r25
 19397 84d2 01F0      		breq .L612
2160:lp_solve_5.5/lp_simplex.c ****     freecuts_BB(lp);
 19398               		.loc 2 2160 0
 19399 84d4 8B81      		ldd r24,Y+3
 19400 84d6 9C81      		ldd r25,Y+4
 19401 84d8 0E94 0000 		call freecuts_BB
 19402               	.L612:
2161:lp_solve_5.5/lp_simplex.c **** 
2162:lp_solve_5.5/lp_simplex.c ****   /* Reset/initialize timers */
2163:lp_solve_5.5/lp_simplex.c ****   lp->timestart        = timeNow();
 19403               		.loc 2 2163 0
 19404 84dc 0E94 0000 		call timeNow
 19405 84e0 DC01      		movw r26,r24
 19406 84e2 CB01      		movw r24,r22
 19407 84e4 2B81      		ldd r18,Y+3
 19408 84e6 3C81      		ldd r19,Y+4
 19409 84e8 2658      		subi r18,-122
 19410 84ea 3C4F      		sbci r19,-4
 19411 84ec F901      		movw r30,r18
 19412 84ee 8083      		st Z,r24
 19413 84f0 9183      		std Z+1,r25
 19414 84f2 A283      		std Z+2,r26
 19415 84f4 B383      		std Z+3,r27
2164:lp_solve_5.5/lp_simplex.c ****   lp->timeheuristic    = 0;
 19416               		.loc 2 2164 0
 19417 84f6 8B81      		ldd r24,Y+3
 19418 84f8 9C81      		ldd r25,Y+4
 19419 84fa 8258      		subi r24,-126
 19420 84fc 9C4F      		sbci r25,-4
 19421 84fe FC01      		movw r30,r24
 19422 8500 1082      		st Z,__zero_reg__
 19423 8502 1182      		std Z+1,__zero_reg__
 19424 8504 1282      		std Z+2,__zero_reg__
 19425 8506 1382      		std Z+3,__zero_reg__
2165:lp_solve_5.5/lp_simplex.c ****   lp->timepresolved    = 0;
 19426               		.loc 2 2165 0
 19427 8508 8B81      		ldd r24,Y+3
 19428 850a 9C81      		ldd r25,Y+4
 19429 850c 8E57      		subi r24,126
 19430 850e 9C4F      		sbci r25,-4
 19431 8510 FC01      		movw r30,r24
 19432 8512 1082      		st Z,__zero_reg__
 19433 8514 1182      		std Z+1,__zero_reg__
 19434 8516 1282      		std Z+2,__zero_reg__
 19435 8518 1382      		std Z+3,__zero_reg__
2166:lp_solve_5.5/lp_simplex.c ****   lp->timeend          = 0;
 19436               		.loc 2 2166 0
 19437 851a 8B81      		ldd r24,Y+3
 19438 851c 9C81      		ldd r25,Y+4
 19439 851e 8A57      		subi r24,122
 19440 8520 9C4F      		sbci r25,-4
 19441 8522 FC01      		movw r30,r24
 19442 8524 1082      		st Z,__zero_reg__
 19443 8526 1182      		std Z+1,__zero_reg__
 19444 8528 1282      		std Z+2,__zero_reg__
 19445 852a 1382      		std Z+3,__zero_reg__
2167:lp_solve_5.5/lp_simplex.c **** 
2168:lp_solve_5.5/lp_simplex.c ****   /* Do heuristics ahead of solving the model */
2169:lp_solve_5.5/lp_simplex.c ****   if(heuristics(lp, AUTOMATIC) != RUNNING)
 19446               		.loc 2 2169 0
 19447 852c 8B81      		ldd r24,Y+3
 19448 852e 9C81      		ldd r25,Y+4
 19449 8530 62E0      		ldi r22,lo8(2)
 19450 8532 70E0      		ldi r23,0
 19451 8534 0E94 0000 		call heuristics
 19452 8538 0897      		sbiw r24,8
 19453 853a 01F0      		breq .L613
2170:lp_solve_5.5/lp_simplex.c ****     return( INFEASIBLE );
 19454               		.loc 2 2170 0
 19455 853c 82E0      		ldi r24,lo8(2)
 19456 853e 90E0      		ldi r25,0
 19457 8540 00C0      		rjmp .L609
 19458               	.L613:
2171:lp_solve_5.5/lp_simplex.c **** 
2172:lp_solve_5.5/lp_simplex.c ****   /* Solve the full, prepared model */
2173:lp_solve_5.5/lp_simplex.c ****   status = spx_solve(lp);
 19459               		.loc 2 2173 0
 19460 8542 8B81      		ldd r24,Y+3
 19461 8544 9C81      		ldd r25,Y+4
 19462 8546 0E94 0000 		call spx_solve
 19463 854a 9A83      		std Y+2,r25
 19464 854c 8983      		std Y+1,r24
2174:lp_solve_5.5/lp_simplex.c ****   if((get_Lrows(lp) > 0) && (lp->lag_status == NOTRUN)) {
 19465               		.loc 2 2174 0
 19466 854e 8B81      		ldd r24,Y+3
 19467 8550 9C81      		ldd r25,Y+4
 19468 8552 0E94 0000 		call get_Lrows
 19469 8556 1816      		cp __zero_reg__,r24
 19470 8558 1906      		cpc __zero_reg__,r25
 19471 855a 04F4      		brge .L614
 19472               		.loc 2 2174 0 is_stmt 0 discriminator 1
 19473 855c 8B81      		ldd r24,Y+3
 19474 855e 9C81      		ldd r25,Y+4
 19475 8560 885F      		subi r24,-8
 19476 8562 9D4F      		sbci r25,-3
 19477 8564 FC01      		movw r30,r24
 19478 8566 8081      		ld r24,Z
 19479 8568 9181      		ldd r25,Z+1
 19480 856a 0196      		adiw r24,1
 19481 856c 01F4      		brne .L614
2175:lp_solve_5.5/lp_simplex.c ****     if(status == OPTIMAL)
 19482               		.loc 2 2175 0 is_stmt 1
 19483 856e 8981      		ldd r24,Y+1
 19484 8570 9A81      		ldd r25,Y+2
 19485 8572 892B      		or r24,r25
 19486 8574 01F4      		brne .L615
2176:lp_solve_5.5/lp_simplex.c ****       status = lag_solve(lp, lp->bb_heuristicOF, DEF_LAGMAXITERATIONS);
 19487               		.loc 2 2176 0
 19488 8576 8B81      		ldd r24,Y+3
 19489 8578 9C81      		ldd r25,Y+4
 19490 857a 865A      		subi r24,-90
 19491 857c 9C4F      		sbci r25,-4
 19492 857e FC01      		movw r30,r24
 19493 8580 8081      		ld r24,Z
 19494 8582 9181      		ldd r25,Z+1
 19495 8584 A281      		ldd r26,Z+2
 19496 8586 B381      		ldd r27,Z+3
 19497 8588 EB81      		ldd r30,Y+3
 19498 858a FC81      		ldd r31,Y+4
 19499 858c 24E6      		ldi r18,lo8(100)
 19500 858e 30E0      		ldi r19,0
 19501 8590 AC01      		movw r20,r24
 19502 8592 BD01      		movw r22,r26
 19503 8594 CF01      		movw r24,r30
 19504 8596 0E94 0000 		call lag_solve
 19505 859a 9A83      		std Y+2,r25
 19506 859c 8983      		std Y+1,r24
 19507 859e 00C0      		rjmp .L614
 19508               	.L615:
2177:lp_solve_5.5/lp_simplex.c ****     else
2178:lp_solve_5.5/lp_simplex.c ****       report(lp, IMPORTANT, "\nCannot do Lagrangean optimization since root model was not solved.\n
 19509               		.loc 2 2178 0
 19510 85a0 80E0      		ldi r24,lo8(.LC72)
 19511 85a2 90E0      		ldi r25,hi8(.LC72)
 19512 85a4 892F      		mov r24,r25
 19513 85a6 8F93      		push r24
 19514 85a8 80E0      		ldi r24,lo8(.LC72)
 19515 85aa 90E0      		ldi r25,hi8(.LC72)
 19516 85ac 8F93      		push r24
 19517 85ae 1F92      		push __zero_reg__
 19518 85b0 83E0      		ldi r24,lo8(3)
 19519 85b2 8F93      		push r24
 19520 85b4 8C81      		ldd r24,Y+4
 19521 85b6 8F93      		push r24
 19522 85b8 8B81      		ldd r24,Y+3
 19523 85ba 8F93      		push r24
 19524 85bc 0E94 0000 		call report
 19525 85c0 0F90      		pop __tmp_reg__
 19526 85c2 0F90      		pop __tmp_reg__
 19527 85c4 0F90      		pop __tmp_reg__
 19528 85c6 0F90      		pop __tmp_reg__
 19529 85c8 0F90      		pop __tmp_reg__
 19530 85ca 0F90      		pop __tmp_reg__
 19531               	.L614:
2179:lp_solve_5.5/lp_simplex.c ****   }
2180:lp_solve_5.5/lp_simplex.c **** 
2181:lp_solve_5.5/lp_simplex.c ****   /* Reset heuristic in preparation for next run (if any) */
2182:lp_solve_5.5/lp_simplex.c ****   lp->bb_heuristicOF = my_chsign(is_maxim(lp), lp->infinite);
 19532               		.loc 2 2182 0
 19533 85cc 8B81      		ldd r24,Y+3
 19534 85ce 9C81      		ldd r25,Y+4
 19535 85d0 0E94 0000 		call is_maxim
 19536 85d4 8823      		tst r24
 19537 85d6 01F0      		breq .L616
 19538               		.loc 2 2182 0 is_stmt 0 discriminator 1
 19539 85d8 8B81      		ldd r24,Y+3
 19540 85da 9C81      		ldd r25,Y+4
 19541 85dc 865F      		subi r24,-10
 19542 85de 9C4F      		sbci r25,-4
 19543 85e0 FC01      		movw r30,r24
 19544 85e2 8081      		ld r24,Z
 19545 85e4 9181      		ldd r25,Z+1
 19546 85e6 A281      		ldd r26,Z+2
 19547 85e8 B381      		ldd r27,Z+3
 19548 85ea 20E0      		ldi r18,0
 19549 85ec 30E0      		ldi r19,0
 19550 85ee A901      		movw r20,r18
 19551 85f0 BC01      		movw r22,r24
 19552 85f2 CD01      		movw r24,r26
 19553 85f4 0E94 0000 		call __nesf2
 19554 85f8 8823      		tst r24
 19555 85fa 01F0      		breq .L616
 19556               		.loc 2 2182 0 discriminator 3
 19557 85fc 8B81      		ldd r24,Y+3
 19558 85fe 9C81      		ldd r25,Y+4
 19559 8600 865F      		subi r24,-10
 19560 8602 9C4F      		sbci r25,-4
 19561 8604 FC01      		movw r30,r24
 19562 8606 8081      		ld r24,Z
 19563 8608 9181      		ldd r25,Z+1
 19564 860a A281      		ldd r26,Z+2
 19565 860c B381      		ldd r27,Z+3
 19566 860e B058      		subi r27,0x80
 19567 8610 00C0      		rjmp .L618
 19568               	.L616:
 19569               		.loc 2 2182 0 discriminator 4
 19570 8612 8B81      		ldd r24,Y+3
 19571 8614 9C81      		ldd r25,Y+4
 19572 8616 865F      		subi r24,-10
 19573 8618 9C4F      		sbci r25,-4
 19574 861a FC01      		movw r30,r24
 19575 861c 8081      		ld r24,Z
 19576 861e 9181      		ldd r25,Z+1
 19577 8620 A281      		ldd r26,Z+2
 19578 8622 B381      		ldd r27,Z+3
 19579               	.L618:
 19580               		.loc 2 2182 0 discriminator 6
 19581 8624 2B81      		ldd r18,Y+3
 19582 8626 3C81      		ldd r19,Y+4
 19583 8628 265A      		subi r18,-90
 19584 862a 3C4F      		sbci r19,-4
 19585 862c F901      		movw r30,r18
 19586 862e 8083      		st Z,r24
 19587 8630 9183      		std Z+1,r25
 19588 8632 A283      		std Z+2,r26
 19589 8634 B383      		std Z+3,r27
2183:lp_solve_5.5/lp_simplex.c **** 
2184:lp_solve_5.5/lp_simplex.c ****   /* Check that correct status code is returned */
2185:lp_solve_5.5/lp_simplex.c **** /*
2186:lp_solve_5.5/lp_simplex.c ****    peno 26.12.07
2187:lp_solve_5.5/lp_simplex.c ****    status was not set to SUBOPTIMAL, only lp->spx_status
2188:lp_solve_5.5/lp_simplex.c ****    Bug occured by a change in 5.5.0.10 when  && (lp->bb_totalnodes > 0) was added
2189:lp_solve_5.5/lp_simplex.c ****    added status =
2190:lp_solve_5.5/lp_simplex.c ****    See UnitTest3
2191:lp_solve_5.5/lp_simplex.c **** */
2192:lp_solve_5.5/lp_simplex.c **** /*
2193:lp_solve_5.5/lp_simplex.c ****    peno 12.01.08
2194:lp_solve_5.5/lp_simplex.c ****    If an integer solution is found with the same objective value as the relaxed solution then
2195:lp_solve_5.5/lp_simplex.c ****    searching is stopped. This by setting lp->bb_break. However this resulted in a report of SUBOPTI
2196:lp_solve_5.5/lp_simplex.c ****    solution. For this,  && !bb_better(lp, OF_DUALLIMIT, OF_TEST_BE) is added in the test.
2197:lp_solve_5.5/lp_simplex.c ****    See UnitTest20
2198:lp_solve_5.5/lp_simplex.c **** */
2199:lp_solve_5.5/lp_simplex.c ****   if((lp->spx_status == OPTIMAL) && (lp->bb_totalnodes > 0)) {
 19590               		.loc 2 2199 0 is_stmt 1 discriminator 6
 19591 8636 8B81      		ldd r24,Y+3
 19592 8638 9C81      		ldd r25,Y+4
 19593 863a 8A5F      		subi r24,-6
 19594 863c 9D4F      		sbci r25,-3
 19595 863e FC01      		movw r30,r24
 19596 8640 8081      		ld r24,Z
 19597 8642 9181      		ldd r25,Z+1
 19598 8644 892B      		or r24,r25
 19599 8646 01F0      		breq .+2
 19600 8648 00C0      		rjmp .L619
 19601               		.loc 2 2199 0 is_stmt 0 discriminator 1
 19602 864a 8B81      		ldd r24,Y+3
 19603 864c 9C81      		ldd r25,Y+4
 19604 864e 8A5C      		subi r24,-54
 19605 8650 9C4F      		sbci r25,-4
 19606 8652 FC01      		movw r30,r24
 19607 8654 A080      		ld r10,Z
 19608 8656 FC01      		movw r30,r24
 19609 8658 B180      		ldd r11,Z+1
 19610 865a FC01      		movw r30,r24
 19611 865c C280      		ldd r12,Z+2
 19612 865e FC01      		movw r30,r24
 19613 8660 D380      		ldd r13,Z+3
 19614 8662 FC01      		movw r30,r24
 19615 8664 E480      		ldd r14,Z+4
 19616 8666 FC01      		movw r30,r24
 19617 8668 F580      		ldd r15,Z+5
 19618 866a FC01      		movw r30,r24
 19619 866c 0681      		ldd r16,Z+6
 19620 866e FC01      		movw r30,r24
 19621 8670 1781      		ldd r17,Z+7
 19622 8672 2A2D      		mov r18,r10
 19623 8674 3B2D      		mov r19,r11
 19624 8676 4C2D      		mov r20,r12
 19625 8678 5D2D      		mov r21,r13
 19626 867a 6E2D      		mov r22,r14
 19627 867c 7F2D      		mov r23,r15
 19628 867e 802F      		mov r24,r16
 19629 8680 912F      		mov r25,r17
 19630 8682 A0E0      		ldi r26,0
 19631 8684 0E94 0000 		call __cmpdi2_s8
 19632 8688 01F0      		breq .L619
 19633 868a 04F0      		brlt .L619
2200:lp_solve_5.5/lp_simplex.c ****     if((lp->bb_break && !bb_better(lp, OF_DUALLIMIT, OF_TEST_BE)) /* ||
 19634               		.loc 2 2200 0 is_stmt 1
 19635 868c 8B81      		ldd r24,Y+3
 19636 868e 9C81      		ldd r25,Y+4
 19637 8690 8B50      		subi r24,11
 19638 8692 9D4F      		sbci r25,-3
 19639 8694 FC01      		movw r30,r24
 19640 8696 8081      		ld r24,Z
 19641 8698 8823      		tst r24
 19642 869a 01F0      		breq .L619
 19643               		.loc 2 2200 0 is_stmt 0 discriminator 1
 19644 869c 8B81      		ldd r24,Y+3
 19645 869e 9C81      		ldd r25,Y+4
 19646 86a0 42E0      		ldi r20,lo8(2)
 19647 86a2 50E0      		ldi r21,0
 19648 86a4 65E0      		ldi r22,lo8(5)
 19649 86a6 70E0      		ldi r23,0
 19650 86a8 0E94 0000 		call bb_better
 19651 86ac 8823      		tst r24
 19652 86ae 01F4      		brne .L619
2201:lp_solve_5.5/lp_simplex.c ****        ISMASKSET(lp->trace, TRACE_NOBBLIMIT) */)
2202:lp_solve_5.5/lp_simplex.c ****     status = lp->spx_status = SUBOPTIMAL;
 19653               		.loc 2 2202 0 is_stmt 1
 19654 86b0 8B81      		ldd r24,Y+3
 19655 86b2 9C81      		ldd r25,Y+4
 19656 86b4 8A5F      		subi r24,-6
 19657 86b6 9D4F      		sbci r25,-3
 19658 86b8 21E0      		ldi r18,lo8(1)
 19659 86ba 30E0      		ldi r19,0
 19660 86bc FC01      		movw r30,r24
 19661 86be 3183      		std Z+1,r19
 19662 86c0 2083      		st Z,r18
 19663 86c2 8B81      		ldd r24,Y+3
 19664 86c4 9C81      		ldd r25,Y+4
 19665 86c6 8A5F      		subi r24,-6
 19666 86c8 9D4F      		sbci r25,-3
 19667 86ca FC01      		movw r30,r24
 19668 86cc 8081      		ld r24,Z
 19669 86ce 9181      		ldd r25,Z+1
 19670 86d0 9A83      		std Y+2,r25
 19671 86d2 8983      		std Y+1,r24
 19672               	.L619:
2203:lp_solve_5.5/lp_simplex.c ****   }
2204:lp_solve_5.5/lp_simplex.c **** 
2205:lp_solve_5.5/lp_simplex.c ****   return( status );
 19673               		.loc 2 2205 0
 19674 86d4 8981      		ldd r24,Y+1
 19675 86d6 9A81      		ldd r25,Y+2
 19676               	.L609:
 19677               	/* epilogue start */
2206:lp_solve_5.5/lp_simplex.c **** }
 19678               		.loc 2 2206 0
 19679 86d8 0F90      		pop __tmp_reg__
 19680 86da 0F90      		pop __tmp_reg__
 19681 86dc 0F90      		pop __tmp_reg__
 19682 86de 0F90      		pop __tmp_reg__
 19683 86e0 DF91      		pop r29
 19684 86e2 CF91      		pop r28
 19685 86e4 1F91      		pop r17
 19686 86e6 0F91      		pop r16
 19687 86e8 FF90      		pop r15
 19688 86ea EF90      		pop r14
 19689 86ec DF90      		pop r13
 19690 86ee CF90      		pop r12
 19691 86f0 BF90      		pop r11
 19692 86f2 AF90      		pop r10
 19693 86f4 0895      		ret
 19694               		.cfi_endproc
 19695               	.LFE29:
 19697               	.Letext0:
 19698               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\lib\\gc
 19699               		.file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 19700               		.file 5 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 19701               		.file 6 "lp_solve_5.5\\shared/commonlib.h"
 19702               		.file 7 "lp_solve_5.5/lp_types.h"
 19703               		.file 8 "lp_solve_5.5/lp_lib.h"
 19704               		.file 9 "lp_solve_5.5/lp_utils.h"
 19705               		.file 10 "lp_solve_5.5/lp_Hash.h"
 19706               		.file 11 "lp_solve_5.5/lp_matrix.h"
 19707               		.file 12 "lp_solve_5.5/lp_mipbb.h"
 19708               		.file 13 "lp_solve_5.5/lp_SOS.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lp_simplex.c
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:12     .text:00000000 presolve_rowlength
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:94     .text:00000066 presolve_collength
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:176    .text:000000cc stallMonitor_update
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:352    .text:000001de stallMonitor_creepingObj
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:693    .text:0000040c stallMonitor_shortSteps
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:887    .text:00000548 stallMonitor_reset
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:1036   .text:0000062a stallMonitor_create
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:1399   .text:0000087a stallMonitor_check
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:3016   .text:00001396 stallMonitor_finish
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:3130   .text:0000142a add_artificial
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:3795   .text:00001890 get_artificialRow
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:3890   .text:00001912 findAnti_artificial
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:4128   .text:00001a8e findBasicArtificial
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:4291   .text:00001b7e eliminate_artificials
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:4499   .text:00001cca clear_artificials
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:4778   .text:00001e5c primloop
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:7913   .text:00003412 dualloop
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:11938  .text:00005094 spx_run
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:13749  .text:00005d0e make_lag
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:14144  .text:00005faa heuristics
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:14309  .text:00006082 lag_solve
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:17546  .text:000077c2 spx_solve
C:\Users\GUILHE~1\AppData\Local\Temp\ccxTUkAL.s:19219  .text:000083d8 lin_solve

UNDEFINED SYMBOLS
mod
__subsf3
__floatsisf
__divsf3
__nesf2
__gtsf2
__mulsf3
__ltsf2
__divmodhi4
pow
__fixsfsi
calloc
strcpy
is_piv_mode
get_piv_rule
__floatdisf
__addsf3
__lesf2
get_total_iter
report
log10
is_action
is_anti_degen
get_str_piv_rule
restartPricer
free
isBasisVarFeasible
mat_findelm
allocREAL
allocINT
is_chsign
add_columnex
set_basisvar
__eqsf2
find_rowReplacement
del_column
set_action
mat_validate
set_OF_p1extra
simplexPricer
invert
multi_create
multi_resize
clear_action
colprim
partial_countBlocks
partial_blockStep
__cmpdi2_s8
fsolve
check_degeneracy
rowprim
refactRecent
isP1extra
feasiblePhase1
MIP_count
del_constraint
rowdual
recompute_solution
performiteration
userabort
restore_basis
multi_free
multi_indexSet
bin_count
obtain_column
mat_multadd
ftran
coldual
log
compute_theta
findBasicFixedvar
isPrimalFeasible
bb_better
isDualFeasible
is_fixedvar
is_presolve
__adddi3
make_lp
is_maxim
set_sense
get_mat
set_mat
is_binary
set_binary
is_int
set_int
get_upbo
get_lowbo
set_bounds
inc_lag_space
get_ptr_sensitivity_rhs
get_constr_type
timeNow
get_Lrows
push_basis
get_row
get_rh
mat_getitem
sqrt
memcpy
print_lp
compare_basis
pop_basis
print_solution
transfer_solution
check_solution
presolve
preprocess
run_BB
postprocess
postsolve
get_refactfrequency
get_total_nodes
GUB_count
default_basis
unset_OF_p1extra
free_duals
freecuts_BB
__do_copy_data
