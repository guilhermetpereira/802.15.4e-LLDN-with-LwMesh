   1               		.file	"lp_presolve.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	presolve_rowlength:
  13               	.LFB7:
  14               		.file 1 "lp_solve_5.5/lp_presolve.h"
   1:lp_solve_5.5/lp_presolve.h **** #ifndef HEADER_lp_presolve
   2:lp_solve_5.5/lp_presolve.h **** #define HEADER_lp_presolve
   3:lp_solve_5.5/lp_presolve.h **** 
   4:lp_solve_5.5/lp_presolve.h **** #include "lp_types.h"
   5:lp_solve_5.5/lp_presolve.h **** #include "lp_matrix.h"
   6:lp_solve_5.5/lp_presolve.h **** 
   7:lp_solve_5.5/lp_presolve.h **** /* -------------------------------------------------------------------------------------------- */
   8:lp_solve_5.5/lp_presolve.h **** /* Defines for various presolve options                                                         */
   9:lp_solve_5.5/lp_presolve.h **** /* -------------------------------------------------------------------------------------------- */
  10:lp_solve_5.5/lp_presolve.h **** 
  11:lp_solve_5.5/lp_presolve.h **** #define MAX_PSMERGELOOPS                2                 /* Max loops to merge compatible constrai
  12:lp_solve_5.5/lp_presolve.h **** #define MAX_PSLINDEPLOOPS               1   /* Max loops to detect linearly dependendent constraint
  13:lp_solve_5.5/lp_presolve.h **** #define MAX_PSBOUNDTIGHTENLOOPS         5     /* Maximumn number of loops to allow bound tightening
  14:lp_solve_5.5/lp_presolve.h **** #define MIN_SOS1LENGTH                  4   /* Minimum length of a constraint for conversion to SOS
  15:lp_solve_5.5/lp_presolve.h **** #if 1
  16:lp_solve_5.5/lp_presolve.h ****   #define PRESOLVE_EPSVALUE (0.1*lp->epsprimal)
  17:lp_solve_5.5/lp_presolve.h **** #else
  18:lp_solve_5.5/lp_presolve.h ****   #define PRESOLVE_EPSVALUE  lp->epsvalue
  19:lp_solve_5.5/lp_presolve.h **** #endif
  20:lp_solve_5.5/lp_presolve.h **** #define PRESOLVE_EPSPIVOT         1.0e-3        /* Looses robustness at values smaller than ~1.0e-3
  21:lp_solve_5.5/lp_presolve.h **** #define PRESOLVE_BOUNDSLACK           10                     /* Extra error recovery/tolerance marg
  22:lp_solve_5.5/lp_presolve.h **** 
  23:lp_solve_5.5/lp_presolve.h **** #define DoPresolveRounding              /* Use absolute and directed rounding (disable at own risk)
  24:lp_solve_5.5/lp_presolve.h **** /*#define DoPresolveRelativeTest*/
  25:lp_solve_5.5/lp_presolve.h **** 
  26:lp_solve_5.5/lp_presolve.h **** /*#define PresolveForceUpdateMax*/
  27:lp_solve_5.5/lp_presolve.h **** 
  28:lp_solve_5.5/lp_presolve.h **** /*#define DualFeasibilityLogicEQ2*/              /* Add low-order feasibility/accuracy logic to eli
  29:lp_solve_5.5/lp_presolve.h **** #define DivisorIntegralityLogicEQ2                                   /* Always prefer integer divis
  30:lp_solve_5.5/lp_presolve.h **** #define FindImpliedEqualities                               /* Detect equalities (default is enable
  31:lp_solve_5.5/lp_presolve.h **** #define Eq2Reldiff
  32:lp_solve_5.5/lp_presolve.h **** 
  33:lp_solve_5.5/lp_presolve.h **** /*#define SavePresolveEliminated */        /* Enable to activate storage of eliminated matrix data 
  34:lp_solve_5.5/lp_presolve.h **** /*#define UseDualPresolve */                    /* Enable to use full dual information for presolve
  35:lp_solve_5.5/lp_presolve.h **** 
  36:lp_solve_5.5/lp_presolve.h **** 
  37:lp_solve_5.5/lp_presolve.h **** typedef struct _psrec
  38:lp_solve_5.5/lp_presolve.h **** {
  39:lp_solve_5.5/lp_presolve.h ****   LLrec *varmap;
  40:lp_solve_5.5/lp_presolve.h ****   int  **next;
  41:lp_solve_5.5/lp_presolve.h ****   int  *empty;
  42:lp_solve_5.5/lp_presolve.h ****   int  *plucount;
  43:lp_solve_5.5/lp_presolve.h ****   int  *negcount;
  44:lp_solve_5.5/lp_presolve.h ****   int  *pluneg;
  45:lp_solve_5.5/lp_presolve.h ****   int  *infcount;
  46:lp_solve_5.5/lp_presolve.h ****   REAL  *plulower;
  47:lp_solve_5.5/lp_presolve.h ****   REAL  *neglower;
  48:lp_solve_5.5/lp_presolve.h ****   REAL  *pluupper;
  49:lp_solve_5.5/lp_presolve.h ****   REAL  *negupper;
  50:lp_solve_5.5/lp_presolve.h ****   int  allocsize;
  51:lp_solve_5.5/lp_presolve.h **** } psrec;
  52:lp_solve_5.5/lp_presolve.h **** 
  53:lp_solve_5.5/lp_presolve.h **** typedef struct _presolverec
  54:lp_solve_5.5/lp_presolve.h **** {
  55:lp_solve_5.5/lp_presolve.h ****   psrec *rows;
  56:lp_solve_5.5/lp_presolve.h ****   psrec *cols;
  57:lp_solve_5.5/lp_presolve.h ****   LLrec *EQmap;
  58:lp_solve_5.5/lp_presolve.h ****   LLrec *LTmap;
  59:lp_solve_5.5/lp_presolve.h ****   LLrec *INTmap;
  60:lp_solve_5.5/lp_presolve.h ****   REAL  *pv_upbo;
  61:lp_solve_5.5/lp_presolve.h ****   REAL  *pv_lobo;
  62:lp_solve_5.5/lp_presolve.h ****   REAL  *dv_upbo;
  63:lp_solve_5.5/lp_presolve.h ****   REAL  *dv_lobo;
  64:lp_solve_5.5/lp_presolve.h ****   lprec *lp;
  65:lp_solve_5.5/lp_presolve.h ****   REAL  epsvalue;
  66:lp_solve_5.5/lp_presolve.h ****   REAL  epspivot;
  67:lp_solve_5.5/lp_presolve.h ****   int   innerloops;
  68:lp_solve_5.5/lp_presolve.h ****   int   middleloops;
  69:lp_solve_5.5/lp_presolve.h ****   int   outerloops;
  70:lp_solve_5.5/lp_presolve.h ****   int   nzdeleted;
  71:lp_solve_5.5/lp_presolve.h ****   MYBOOL forceupdate;
  72:lp_solve_5.5/lp_presolve.h **** } presolverec;
  73:lp_solve_5.5/lp_presolve.h **** 
  74:lp_solve_5.5/lp_presolve.h **** #ifdef __cplusplus
  75:lp_solve_5.5/lp_presolve.h **** extern "C" {
  76:lp_solve_5.5/lp_presolve.h **** #endif
  77:lp_solve_5.5/lp_presolve.h **** 
  78:lp_solve_5.5/lp_presolve.h **** /* Put function headers here */
  79:lp_solve_5.5/lp_presolve.h **** 
  80:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL presolve_createUndo(lprec *lp);
  81:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL presolve_rebuildUndo(lprec *lp, MYBOOL isprimal);
  82:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL inc_presolve_space(lprec *lp, int delta, MYBOOL isrows);
  83:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL presolve_setOrig(lprec *lp, int orig_rows, int orig_cols);
  84:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL presolve_colfix(presolverec *psdata, int colnr, REAL newvalue, MYBOOL remove, int *ta
  85:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL presolve_fillUndo(lprec *lp, int orig_rows, int orig_cols, MYBOOL setOrig);
  86:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL presolve_freeUndo(lprec *lp);
  87:lp_solve_5.5/lp_presolve.h **** 
  88:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL presolve_updatesums(presolverec *psdata);
  89:lp_solve_5.5/lp_presolve.h **** 
  90:lp_solve_5.5/lp_presolve.h **** INLINE int presolve_nextrow(presolverec *psdata, int colnr, int *previtem);
  91:lp_solve_5.5/lp_presolve.h **** INLINE int presolve_nextcol(presolverec *psdata, int rownr, int *previtem);
  92:lp_solve_5.5/lp_presolve.h **** 
  93:lp_solve_5.5/lp_presolve.h **** STATIC presolverec *presolve_init(lprec *lp);
  94:lp_solve_5.5/lp_presolve.h **** STATIC void presolve_free(presolverec **psdata);
  95:lp_solve_5.5/lp_presolve.h **** STATIC int presolve_shrink(presolverec *psdata, int *nConRemove, int *nVarRemove);
  96:lp_solve_5.5/lp_presolve.h **** STATIC void presolve_rowremove(presolverec *psdata, int rownr, MYBOOL allowcoldelete);
  97:lp_solve_5.5/lp_presolve.h **** STATIC int presolve_colremove(presolverec *psdata, int colnr, MYBOOL allowrowdelete);
  98:lp_solve_5.5/lp_presolve.h **** 
  99:lp_solve_5.5/lp_presolve.h **** STATIC MYBOOL presolve_colfixdual(presolverec *psdata, int colnr, REAL *fixValue, int *status);
 100:lp_solve_5.5/lp_presolve.h **** 
 101:lp_solve_5.5/lp_presolve.h **** INLINE int presolve_rowlength(presolverec *psdata, int rownr)
 102:lp_solve_5.5/lp_presolve.h **** {
  15               		.loc 1 102 0
  16               		.cfi_startproc
  17 0000 CF93      		push r28
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 28, -2
  21 0002 DF93      		push r29
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 29, -3
  25 0004 00D0      		rcall .
  26 0006 00D0      		rcall .
  27 0008 00D0      		rcall .
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 10
  30 000a CDB7      		in r28,__SP_L__
  31 000c DEB7      		in r29,__SP_H__
  32               	.LCFI3:
  33               		.cfi_def_cfa_register 28
  34               	/* prologue: function */
  35               	/* frame size = 6 */
  36               	/* stack size = 8 */
  37               	.L__stack_usage = 8
  38 000e 9C83      		std Y+4,r25
  39 0010 8B83      		std Y+3,r24
  40 0012 7E83      		std Y+6,r23
  41 0014 6D83      		std Y+5,r22
 103:lp_solve_5.5/lp_presolve.h ****   int *items = psdata->rows->next[rownr];
  42               		.loc 1 103 0
  43 0016 8B81      		ldd r24,Y+3
  44 0018 9C81      		ldd r25,Y+4
  45 001a FC01      		movw r30,r24
  46 001c 8081      		ld r24,Z
  47 001e 9181      		ldd r25,Z+1
  48 0020 FC01      		movw r30,r24
  49 0022 2281      		ldd r18,Z+2
  50 0024 3381      		ldd r19,Z+3
  51 0026 8D81      		ldd r24,Y+5
  52 0028 9E81      		ldd r25,Y+6
  53 002a 880F      		lsl r24
  54 002c 991F      		rol r25
  55 002e 820F      		add r24,r18
  56 0030 931F      		adc r25,r19
  57 0032 FC01      		movw r30,r24
  58 0034 8081      		ld r24,Z
  59 0036 9181      		ldd r25,Z+1
  60 0038 9A83      		std Y+2,r25
  61 003a 8983      		std Y+1,r24
 104:lp_solve_5.5/lp_presolve.h **** 
 105:lp_solve_5.5/lp_presolve.h ****   if(items == NULL)
  62               		.loc 1 105 0
  63 003c 8981      		ldd r24,Y+1
  64 003e 9A81      		ldd r25,Y+2
  65 0040 892B      		or r24,r25
  66 0042 01F4      		brne .L2
 106:lp_solve_5.5/lp_presolve.h ****     return( 0 );
  67               		.loc 1 106 0
  68 0044 80E0      		ldi r24,0
  69 0046 90E0      		ldi r25,0
  70 0048 00C0      		rjmp .L3
  71               	.L2:
 107:lp_solve_5.5/lp_presolve.h ****   else
 108:lp_solve_5.5/lp_presolve.h ****     return( items[0] );
  72               		.loc 1 108 0
  73 004a 8981      		ldd r24,Y+1
  74 004c 9A81      		ldd r25,Y+2
  75 004e FC01      		movw r30,r24
  76 0050 8081      		ld r24,Z
  77 0052 9181      		ldd r25,Z+1
  78               	.L3:
  79               	/* epilogue start */
 109:lp_solve_5.5/lp_presolve.h **** }
  80               		.loc 1 109 0
  81 0054 2696      		adiw r28,6
  82 0056 0FB6      		in __tmp_reg__,__SREG__
  83 0058 F894      		cli
  84 005a DEBF      		out __SP_H__,r29
  85 005c 0FBE      		out __SREG__,__tmp_reg__
  86 005e CDBF      		out __SP_L__,r28
  87 0060 DF91      		pop r29
  88 0062 CF91      		pop r28
  89 0064 0895      		ret
  90               		.cfi_endproc
  91               	.LFE7:
  94               	presolve_collength:
  95               	.LFB8:
 110:lp_solve_5.5/lp_presolve.h **** INLINE int presolve_collength(presolverec *psdata, int colnr)
 111:lp_solve_5.5/lp_presolve.h **** {
  96               		.loc 1 111 0
  97               		.cfi_startproc
  98 0066 CF93      		push r28
  99               	.LCFI4:
 100               		.cfi_def_cfa_offset 3
 101               		.cfi_offset 28, -2
 102 0068 DF93      		push r29
 103               	.LCFI5:
 104               		.cfi_def_cfa_offset 4
 105               		.cfi_offset 29, -3
 106 006a 00D0      		rcall .
 107 006c 00D0      		rcall .
 108 006e 00D0      		rcall .
 109               	.LCFI6:
 110               		.cfi_def_cfa_offset 10
 111 0070 CDB7      		in r28,__SP_L__
 112 0072 DEB7      		in r29,__SP_H__
 113               	.LCFI7:
 114               		.cfi_def_cfa_register 28
 115               	/* prologue: function */
 116               	/* frame size = 6 */
 117               	/* stack size = 8 */
 118               	.L__stack_usage = 8
 119 0074 9C83      		std Y+4,r25
 120 0076 8B83      		std Y+3,r24
 121 0078 7E83      		std Y+6,r23
 122 007a 6D83      		std Y+5,r22
 112:lp_solve_5.5/lp_presolve.h ****   int *items = psdata->cols->next[colnr];
 123               		.loc 1 112 0
 124 007c 8B81      		ldd r24,Y+3
 125 007e 9C81      		ldd r25,Y+4
 126 0080 FC01      		movw r30,r24
 127 0082 8281      		ldd r24,Z+2
 128 0084 9381      		ldd r25,Z+3
 129 0086 FC01      		movw r30,r24
 130 0088 2281      		ldd r18,Z+2
 131 008a 3381      		ldd r19,Z+3
 132 008c 8D81      		ldd r24,Y+5
 133 008e 9E81      		ldd r25,Y+6
 134 0090 880F      		lsl r24
 135 0092 991F      		rol r25
 136 0094 820F      		add r24,r18
 137 0096 931F      		adc r25,r19
 138 0098 FC01      		movw r30,r24
 139 009a 8081      		ld r24,Z
 140 009c 9181      		ldd r25,Z+1
 141 009e 9A83      		std Y+2,r25
 142 00a0 8983      		std Y+1,r24
 113:lp_solve_5.5/lp_presolve.h ****   if(items == NULL)
 143               		.loc 1 113 0
 144 00a2 8981      		ldd r24,Y+1
 145 00a4 9A81      		ldd r25,Y+2
 146 00a6 892B      		or r24,r25
 147 00a8 01F4      		brne .L5
 114:lp_solve_5.5/lp_presolve.h ****     return( 0 );
 148               		.loc 1 114 0
 149 00aa 80E0      		ldi r24,0
 150 00ac 90E0      		ldi r25,0
 151 00ae 00C0      		rjmp .L6
 152               	.L5:
 115:lp_solve_5.5/lp_presolve.h ****   else
 116:lp_solve_5.5/lp_presolve.h ****     return( items[0] );
 153               		.loc 1 116 0
 154 00b0 8981      		ldd r24,Y+1
 155 00b2 9A81      		ldd r25,Y+2
 156 00b4 FC01      		movw r30,r24
 157 00b6 8081      		ld r24,Z
 158 00b8 9181      		ldd r25,Z+1
 159               	.L6:
 160               	/* epilogue start */
 117:lp_solve_5.5/lp_presolve.h **** }
 161               		.loc 1 117 0
 162 00ba 2696      		adiw r28,6
 163 00bc 0FB6      		in __tmp_reg__,__SREG__
 164 00be F894      		cli
 165 00c0 DEBF      		out __SP_H__,r29
 166 00c2 0FBE      		out __SREG__,__tmp_reg__
 167 00c4 CDBF      		out __SP_L__,r28
 168 00c6 DF91      		pop r29
 169 00c8 CF91      		pop r28
 170 00ca 0895      		ret
 171               		.cfi_endproc
 172               	.LFE8:
 174               		.section	.rodata
 175               	.LC0:
 176 0000 556E 6B6E 		.string	"Unknown"
 176      6F77 6E00 
 177               	.LC1:
 178 0008 494E 4645 		.string	"INFEASIBLE"
 178      4153 4942 
 178      4C45 00
 179               	.LC2:
 180 0013 554E 424F 		.string	"UNBOUNDED"
 180      554E 4445 
 180      4400 
 181               	.LC3:
 182 001d 7072 6573 		.string	"presolve_setstatus: Status set to '%s' on code line %d, file '%s'\n"
 182      6F6C 7665 
 182      5F73 6574 
 182      7374 6174 
 182      7573 3A20 
 183               		.text
 184               	.global	presolve_setstatusex
 186               	presolve_setstatusex:
 187               	.LFB9:
 188               		.file 2 "lp_solve_5.5/lp_presolve.c"
   1:lp_solve_5.5/lp_presolve.c **** 
   2:lp_solve_5.5/lp_presolve.c **** /* -------------------------------------------------------------------------
   3:lp_solve_5.5/lp_presolve.c ****    Presolve routines for lp_solve v5.0+
   4:lp_solve_5.5/lp_presolve.c ****    -------------------------------------------------------------------------
   5:lp_solve_5.5/lp_presolve.c ****     Author:        Kjell Eikland
   6:lp_solve_5.5/lp_presolve.c ****     Contact:       kjell.eikland@broadpark.no
   7:lp_solve_5.5/lp_presolve.c ****     License terms: LGPL.
   8:lp_solve_5.5/lp_presolve.c **** 
   9:lp_solve_5.5/lp_presolve.c ****     Requires:      lp_lib.h, lp_presolve, lp_crash.h, lp_scale.h, lp_report.h
  10:lp_solve_5.5/lp_presolve.c **** 
  11:lp_solve_5.5/lp_presolve.c ****     Release notes:
  12:lp_solve_5.5/lp_presolve.c ****     v1.0.0  1 January 2003      Initial crude version used with lp_solve v4.
  13:lp_solve_5.5/lp_presolve.c ****     v5.0.0  1 January 2004      Significantly expanded and repackaged
  14:lp_solve_5.5/lp_presolve.c ****                                 presolve routines for lp_solve v5 release.
  15:lp_solve_5.5/lp_presolve.c ****     v5.0.1  1 April   2004      Added reference to new crash module
  16:lp_solve_5.5/lp_presolve.c ****     v5.1.0  20 August 2004      Reworked infeasibility detection.
  17:lp_solve_5.5/lp_presolve.c ****                                 Added encapsulation of presolve undo logic.
  18:lp_solve_5.5/lp_presolve.c ****     v5.1.1  10 September 2004   Added variable bound tightening based on
  19:lp_solve_5.5/lp_presolve.c ****                                 full-constraint information, as well as
  20:lp_solve_5.5/lp_presolve.c ****                                 variable fixing by duality.
  21:lp_solve_5.5/lp_presolve.c ****     v5.2.0  1 January 2005      Fixes to bound fixing handling.
  22:lp_solve_5.5/lp_presolve.c ****                                 Added fast batch compression after presolve.
  23:lp_solve_5.5/lp_presolve.c ****                                 Restructured calls by adding presolve wrapper.
  24:lp_solve_5.5/lp_presolve.c ****                                 Major optimization of identification logic
  25:lp_solve_5.5/lp_presolve.c ****                                   along with bug fixes.
  26:lp_solve_5.5/lp_presolve.c ****                                 Enabled storage of eliminated matrix data.
  27:lp_solve_5.5/lp_presolve.c ****                                 Added function to report on constraint classes.
  28:lp_solve_5.5/lp_presolve.c ****     v5.5.0  1 June 2005         Added implied slack presolve, restructured
  29:lp_solve_5.5/lp_presolve.c ****                                 looping logic to be more modular, and made
  30:lp_solve_5.5/lp_presolve.c ****                                 active row/column selection logic faster.
  31:lp_solve_5.5/lp_presolve.c ****     v5.5.1  18 June 2005        Finished sparsity-enhancing logic and added
  32:lp_solve_5.5/lp_presolve.c ****                                 initial version of column aggregation code.
  33:lp_solve_5.5/lp_presolve.c ****    ------------------------------------------------------------------------- */
  34:lp_solve_5.5/lp_presolve.c **** 
  35:lp_solve_5.5/lp_presolve.c **** #include <string.h>
  36:lp_solve_5.5/lp_presolve.c **** #include "commonlib.h"
  37:lp_solve_5.5/lp_presolve.c **** #include "lp_lib.h"
  38:lp_solve_5.5/lp_presolve.c **** #include "lp_presolve.h"
  39:lp_solve_5.5/lp_presolve.c **** #include "lp_crash.h"
  40:lp_solve_5.5/lp_presolve.c **** #include "lp_scale.h"
  41:lp_solve_5.5/lp_presolve.c **** #include "lp_report.h"
  42:lp_solve_5.5/lp_presolve.c **** 
  43:lp_solve_5.5/lp_presolve.c **** #ifdef FORTIFY
  44:lp_solve_5.5/lp_presolve.c **** # include "lp_fortify.h"
  45:lp_solve_5.5/lp_presolve.c **** #endif
  46:lp_solve_5.5/lp_presolve.c **** 
  47:lp_solve_5.5/lp_presolve.c **** 
  48:lp_solve_5.5/lp_presolve.c **** #define presolve_setstatus(one, two)  presolve_setstatusex(one, two, __LINE__, __FILE__)
  49:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_setstatusex(presolverec *psdata, int status, int lineno, char *filename)
  50:lp_solve_5.5/lp_presolve.c **** {
 189               		.loc 2 50 0
 190               		.cfi_startproc
 191 00cc CF93      		push r28
 192               	.LCFI8:
 193               		.cfi_def_cfa_offset 3
 194               		.cfi_offset 28, -2
 195 00ce DF93      		push r29
 196               	.LCFI9:
 197               		.cfi_def_cfa_offset 4
 198               		.cfi_offset 29, -3
 199 00d0 CDB7      		in r28,__SP_L__
 200 00d2 DEB7      		in r29,__SP_H__
 201               	.LCFI10:
 202               		.cfi_def_cfa_register 28
 203 00d4 2897      		sbiw r28,8
 204               	.LCFI11:
 205               		.cfi_def_cfa_offset 12
 206 00d6 0FB6      		in __tmp_reg__,__SREG__
 207 00d8 F894      		cli
 208 00da DEBF      		out __SP_H__,r29
 209 00dc 0FBE      		out __SREG__,__tmp_reg__
 210 00de CDBF      		out __SP_L__,r28
 211               	/* prologue: function */
 212               	/* frame size = 8 */
 213               	/* stack size = 10 */
 214               	.L__stack_usage = 10
 215 00e0 9A83      		std Y+2,r25
 216 00e2 8983      		std Y+1,r24
 217 00e4 7C83      		std Y+4,r23
 218 00e6 6B83      		std Y+3,r22
 219 00e8 5E83      		std Y+6,r21
 220 00ea 4D83      		std Y+5,r20
 221 00ec 3887      		std Y+8,r19
 222 00ee 2F83      		std Y+7,r18
  51:lp_solve_5.5/lp_presolve.c ****   if((status == INFEASIBLE) || (status == UNBOUNDED)) {
 223               		.loc 2 51 0
 224 00f0 8B81      		ldd r24,Y+3
 225 00f2 9C81      		ldd r25,Y+4
 226 00f4 0297      		sbiw r24,2
 227 00f6 01F0      		breq .L8
 228               		.loc 2 51 0 is_stmt 0 discriminator 1
 229 00f8 8B81      		ldd r24,Y+3
 230 00fa 9C81      		ldd r25,Y+4
 231 00fc 0397      		sbiw r24,3
 232 00fe 01F4      		brne .L9
 233               	.L8:
  52:lp_solve_5.5/lp_presolve.c ****     report(psdata->lp,
 234               		.loc 2 52 0 is_stmt 1
 235 0100 8F81      		ldd r24,Y+7
 236 0102 9885      		ldd r25,Y+8
 237 0104 892B      		or r24,r25
 238 0106 01F0      		breq .L10
 239               		.loc 2 52 0 is_stmt 0 discriminator 1
 240 0108 2F81      		ldd r18,Y+7
 241 010a 3885      		ldd r19,Y+8
 242 010c 00C0      		rjmp .L11
 243               	.L10:
 244               		.loc 2 52 0 discriminator 2
 245 010e 20E0      		ldi r18,lo8(.LC0)
 246 0110 30E0      		ldi r19,hi8(.LC0)
 247               	.L11:
 248               		.loc 2 52 0 discriminator 4
 249 0112 8B81      		ldd r24,Y+3
 250 0114 9C81      		ldd r25,Y+4
 251 0116 0297      		sbiw r24,2
 252 0118 01F4      		brne .L12
 253               		.loc 2 52 0 discriminator 5
 254 011a 80E0      		ldi r24,lo8(.LC1)
 255 011c 90E0      		ldi r25,hi8(.LC1)
 256 011e 00C0      		rjmp .L13
 257               	.L12:
 258               		.loc 2 52 0 discriminator 6
 259 0120 80E0      		ldi r24,lo8(.LC2)
 260 0122 90E0      		ldi r25,hi8(.LC2)
 261               	.L13:
 262               		.loc 2 52 0 discriminator 8
 263 0124 4981      		ldd r20,Y+1
 264 0126 5A81      		ldd r21,Y+2
 265 0128 FA01      		movw r30,r20
 266 012a 4289      		ldd r20,Z+18
 267 012c 5389      		ldd r21,Z+19
 268 012e 632F      		mov r22,r19
 269 0130 6F93      		push r22
 270 0132 2F93      		push r18
 271 0134 2E81      		ldd r18,Y+6
 272 0136 2F93      		push r18
 273 0138 2D81      		ldd r18,Y+5
 274 013a 2F93      		push r18
 275 013c 292F      		mov r18,r25
 276 013e 2F93      		push r18
 277 0140 8F93      		push r24
 278 0142 80E0      		ldi r24,lo8(.LC3)
 279 0144 90E0      		ldi r25,hi8(.LC3)
 280 0146 892F      		mov r24,r25
 281 0148 8F93      		push r24
 282 014a 80E0      		ldi r24,lo8(.LC3)
 283 014c 90E0      		ldi r25,hi8(.LC3)
 284 014e 8F93      		push r24
 285 0150 1F92      		push __zero_reg__
 286 0152 85E0      		ldi r24,lo8(5)
 287 0154 8F93      		push r24
 288 0156 852F      		mov r24,r21
 289 0158 8F93      		push r24
 290 015a 842F      		mov r24,r20
 291 015c 8F93      		push r24
 292 015e 0E94 0000 		call report
 293 0162 8DB7      		in r24,__SP_L__
 294 0164 9EB7      		in r25,__SP_H__
 295 0166 0C96      		adiw r24,12
 296 0168 0FB6      		in __tmp_reg__,__SREG__
 297 016a F894      		cli
 298 016c DEBF      		out __SP_H__,r29
 299 016e 0FBE      		out __SREG__,__tmp_reg__
 300 0170 CDBF      		out __SP_L__,r28
 301               	.L9:
  53:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
  54:lp_solve_5.5/lp_presolve.c ****            NORMAL,
  55:lp_solve_5.5/lp_presolve.c **** #else
  56:lp_solve_5.5/lp_presolve.c ****            DETAILED,
  57:lp_solve_5.5/lp_presolve.c **** #endif
  58:lp_solve_5.5/lp_presolve.c ****            "presolve_setstatus: Status set to '%s' on code line %d, file '%s'\n",
  59:lp_solve_5.5/lp_presolve.c ****            (status == INFEASIBLE ? "INFEASIBLE" : "UNBOUNDED"), lineno, (filename == NULL ? "Unknow
  60:lp_solve_5.5/lp_presolve.c ****   }
  61:lp_solve_5.5/lp_presolve.c ****   return( status );
 302               		.loc 2 61 0 is_stmt 1
 303 0172 8B81      		ldd r24,Y+3
 304 0174 9C81      		ldd r25,Y+4
 305               	/* epilogue start */
  62:lp_solve_5.5/lp_presolve.c **** }
 306               		.loc 2 62 0
 307 0176 2896      		adiw r28,8
 308 0178 0FB6      		in __tmp_reg__,__SREG__
 309 017a F894      		cli
 310 017c DEBF      		out __SP_H__,r29
 311 017e 0FBE      		out __SREG__,__tmp_reg__
 312 0180 CDBF      		out __SP_L__,r28
 313 0182 DF91      		pop r29
 314 0184 CF91      		pop r28
 315 0186 0895      		ret
 316               		.cfi_endproc
 317               	.LFE9:
 319               	.global	presolve_statuscheck
 321               	presolve_statuscheck:
 322               	.LFB10:
  63:lp_solve_5.5/lp_presolve.c **** 
  64:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_statuscheck(presolverec *psdata, int *status)
  65:lp_solve_5.5/lp_presolve.c **** {
 323               		.loc 2 65 0
 324               		.cfi_startproc
 325 0188 CF93      		push r28
 326               	.LCFI12:
 327               		.cfi_def_cfa_offset 3
 328               		.cfi_offset 28, -2
 329 018a DF93      		push r29
 330               	.LCFI13:
 331               		.cfi_def_cfa_offset 4
 332               		.cfi_offset 29, -3
 333 018c 00D0      		rcall .
 334 018e 00D0      		rcall .
 335 0190 00D0      		rcall .
 336               	.LCFI14:
 337               		.cfi_def_cfa_offset 10
 338 0192 CDB7      		in r28,__SP_L__
 339 0194 DEB7      		in r29,__SP_H__
 340               	.LCFI15:
 341               		.cfi_def_cfa_register 28
 342               	/* prologue: function */
 343               	/* frame size = 6 */
 344               	/* stack size = 8 */
 345               	.L__stack_usage = 8
 346 0196 9C83      		std Y+4,r25
 347 0198 8B83      		std Y+3,r24
 348 019a 7E83      		std Y+6,r23
 349 019c 6D83      		std Y+5,r22
  66:lp_solve_5.5/lp_presolve.c ****   if(*status == RUNNING) {
 350               		.loc 2 66 0
 351 019e 8D81      		ldd r24,Y+5
 352 01a0 9E81      		ldd r25,Y+6
 353 01a2 FC01      		movw r30,r24
 354 01a4 8081      		ld r24,Z
 355 01a6 9181      		ldd r25,Z+1
 356 01a8 0897      		sbiw r24,8
 357 01aa 01F4      		brne .L16
 358               	.LBB2:
  67:lp_solve_5.5/lp_presolve.c ****     lprec *lp = psdata->lp;
 359               		.loc 2 67 0
 360 01ac 8B81      		ldd r24,Y+3
 361 01ae 9C81      		ldd r25,Y+4
 362 01b0 FC01      		movw r30,r24
 363 01b2 8289      		ldd r24,Z+18
 364 01b4 9389      		ldd r25,Z+19
 365 01b6 9A83      		std Y+2,r25
 366 01b8 8983      		std Y+1,r24
  68:lp_solve_5.5/lp_presolve.c ****     if(!mat_validate(lp->matA))
 367               		.loc 2 68 0
 368 01ba 8981      		ldd r24,Y+1
 369 01bc 9A81      		ldd r25,Y+2
 370 01be 8A54      		subi r24,74
 371 01c0 9D4F      		sbci r25,-3
 372 01c2 FC01      		movw r30,r24
 373 01c4 8081      		ld r24,Z
 374 01c6 9181      		ldd r25,Z+1
 375 01c8 0E94 0000 		call mat_validate
 376 01cc 8823      		tst r24
 377 01ce 01F4      		brne .L17
  69:lp_solve_5.5/lp_presolve.c ****       *status = MATRIXERROR;
 378               		.loc 2 69 0
 379 01d0 8D81      		ldd r24,Y+5
 380 01d2 9E81      		ldd r25,Y+6
 381 01d4 28E1      		ldi r18,lo8(24)
 382 01d6 30E0      		ldi r19,0
 383 01d8 FC01      		movw r30,r24
 384 01da 3183      		std Z+1,r19
 385 01dc 2083      		st Z,r18
 386 01de 00C0      		rjmp .L16
 387               	.L17:
  70:lp_solve_5.5/lp_presolve.c ****     else if(userabort(lp, -1))
 388               		.loc 2 70 0
 389 01e0 8981      		ldd r24,Y+1
 390 01e2 9A81      		ldd r25,Y+2
 391 01e4 6FEF      		ldi r22,lo8(-1)
 392 01e6 7FEF      		ldi r23,lo8(-1)
 393 01e8 0E94 0000 		call userabort
 394 01ec 8823      		tst r24
 395 01ee 01F0      		breq .L16
  71:lp_solve_5.5/lp_presolve.c ****       *status = lp->spx_status;
 396               		.loc 2 71 0
 397 01f0 8981      		ldd r24,Y+1
 398 01f2 9A81      		ldd r25,Y+2
 399 01f4 8A5F      		subi r24,-6
 400 01f6 9D4F      		sbci r25,-3
 401 01f8 FC01      		movw r30,r24
 402 01fa 2081      		ld r18,Z
 403 01fc 3181      		ldd r19,Z+1
 404 01fe 8D81      		ldd r24,Y+5
 405 0200 9E81      		ldd r25,Y+6
 406 0202 FC01      		movw r30,r24
 407 0204 3183      		std Z+1,r19
 408 0206 2083      		st Z,r18
 409               	.L16:
 410               	.LBE2:
  72:lp_solve_5.5/lp_presolve.c ****   }
  73:lp_solve_5.5/lp_presolve.c ****   return( (MYBOOL) (*status == RUNNING) );
 411               		.loc 2 73 0
 412 0208 8D81      		ldd r24,Y+5
 413 020a 9E81      		ldd r25,Y+6
 414 020c FC01      		movw r30,r24
 415 020e 8081      		ld r24,Z
 416 0210 9181      		ldd r25,Z+1
 417 0212 21E0      		ldi r18,lo8(1)
 418 0214 0897      		sbiw r24,8
 419 0216 01F0      		breq .L18
 420 0218 20E0      		ldi r18,0
 421               	.L18:
 422 021a 822F      		mov r24,r18
 423               	/* epilogue start */
  74:lp_solve_5.5/lp_presolve.c **** }
 424               		.loc 2 74 0
 425 021c 2696      		adiw r28,6
 426 021e 0FB6      		in __tmp_reg__,__SREG__
 427 0220 F894      		cli
 428 0222 DEBF      		out __SP_H__,r29
 429 0224 0FBE      		out __SREG__,__tmp_reg__
 430 0226 CDBF      		out __SP_L__,r28
 431 0228 DF91      		pop r29
 432 022a CF91      		pop r28
 433 022c 0895      		ret
 434               		.cfi_endproc
 435               	.LFE10:
 437               	.global	presolve_createUndo
 439               	presolve_createUndo:
 440               	.LFB11:
  75:lp_solve_5.5/lp_presolve.c **** 
  76:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_createUndo(lprec *lp)
  77:lp_solve_5.5/lp_presolve.c **** {
 441               		.loc 2 77 0
 442               		.cfi_startproc
 443 022e CF93      		push r28
 444               	.LCFI16:
 445               		.cfi_def_cfa_offset 3
 446               		.cfi_offset 28, -2
 447 0230 DF93      		push r29
 448               	.LCFI17:
 449               		.cfi_def_cfa_offset 4
 450               		.cfi_offset 29, -3
 451 0232 00D0      		rcall .
 452               	.LCFI18:
 453               		.cfi_def_cfa_offset 6
 454 0234 CDB7      		in r28,__SP_L__
 455 0236 DEB7      		in r29,__SP_H__
 456               	.LCFI19:
 457               		.cfi_def_cfa_register 28
 458               	/* prologue: function */
 459               	/* frame size = 2 */
 460               	/* stack size = 4 */
 461               	.L__stack_usage = 4
 462 0238 9A83      		std Y+2,r25
 463 023a 8983      		std Y+1,r24
  78:lp_solve_5.5/lp_presolve.c ****   if(lp->presolve_undo != NULL)
 464               		.loc 2 78 0
 465 023c 8981      		ldd r24,Y+1
 466 023e 9A81      		ldd r25,Y+2
 467 0240 8A59      		subi r24,-102
 468 0242 9C4F      		sbci r25,-4
 469 0244 FC01      		movw r30,r24
 470 0246 8081      		ld r24,Z
 471 0248 9181      		ldd r25,Z+1
 472 024a 892B      		or r24,r25
 473 024c 01F0      		breq .L21
  79:lp_solve_5.5/lp_presolve.c ****     presolve_freeUndo(lp);
 474               		.loc 2 79 0
 475 024e 8981      		ldd r24,Y+1
 476 0250 9A81      		ldd r25,Y+2
 477 0252 0E94 0000 		call presolve_freeUndo
 478               	.L21:
  80:lp_solve_5.5/lp_presolve.c ****   lp->presolve_undo = (presolveundorec *) calloc(1, sizeof(presolveundorec));
 479               		.loc 2 80 0
 480 0256 67E1      		ldi r22,lo8(23)
 481 0258 70E0      		ldi r23,0
 482 025a 81E0      		ldi r24,lo8(1)
 483 025c 90E0      		ldi r25,0
 484 025e 0E94 0000 		call calloc
 485 0262 9C01      		movw r18,r24
 486 0264 8981      		ldd r24,Y+1
 487 0266 9A81      		ldd r25,Y+2
 488 0268 8A59      		subi r24,-102
 489 026a 9C4F      		sbci r25,-4
 490 026c FC01      		movw r30,r24
 491 026e 3183      		std Z+1,r19
 492 0270 2083      		st Z,r18
  81:lp_solve_5.5/lp_presolve.c ****   lp->presolve_undo->lp = lp;
 493               		.loc 2 81 0
 494 0272 8981      		ldd r24,Y+1
 495 0274 9A81      		ldd r25,Y+2
 496 0276 8A59      		subi r24,-102
 497 0278 9C4F      		sbci r25,-4
 498 027a FC01      		movw r30,r24
 499 027c 8081      		ld r24,Z
 500 027e 9181      		ldd r25,Z+1
 501 0280 2981      		ldd r18,Y+1
 502 0282 3A81      		ldd r19,Y+2
 503 0284 FC01      		movw r30,r24
 504 0286 3183      		std Z+1,r19
 505 0288 2083      		st Z,r18
  82:lp_solve_5.5/lp_presolve.c ****   if(lp->presolve_undo == NULL)
 506               		.loc 2 82 0
 507 028a 8981      		ldd r24,Y+1
 508 028c 9A81      		ldd r25,Y+2
 509 028e 8A59      		subi r24,-102
 510 0290 9C4F      		sbci r25,-4
 511 0292 FC01      		movw r30,r24
 512 0294 8081      		ld r24,Z
 513 0296 9181      		ldd r25,Z+1
 514 0298 892B      		or r24,r25
 515 029a 01F4      		brne .L22
  83:lp_solve_5.5/lp_presolve.c ****     return( FALSE );
 516               		.loc 2 83 0
 517 029c 80E0      		ldi r24,0
 518 029e 00C0      		rjmp .L23
 519               	.L22:
  84:lp_solve_5.5/lp_presolve.c ****   return( TRUE );
 520               		.loc 2 84 0
 521 02a0 81E0      		ldi r24,lo8(1)
 522               	.L23:
 523               	/* epilogue start */
  85:lp_solve_5.5/lp_presolve.c **** }
 524               		.loc 2 85 0
 525 02a2 0F90      		pop __tmp_reg__
 526 02a4 0F90      		pop __tmp_reg__
 527 02a6 DF91      		pop r29
 528 02a8 CF91      		pop r28
 529 02aa 0895      		ret
 530               		.cfi_endproc
 531               	.LFE11:
 533               	.global	inc_presolve_space
 535               	inc_presolve_space:
 536               	.LFB12:
  86:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL inc_presolve_space(lprec *lp, int delta, MYBOOL isrows)
  87:lp_solve_5.5/lp_presolve.c **** {
 537               		.loc 2 87 0
 538               		.cfi_startproc
 539 02ac CF93      		push r28
 540               	.LCFI20:
 541               		.cfi_def_cfa_offset 3
 542               		.cfi_offset 28, -2
 543 02ae DF93      		push r29
 544               	.LCFI21:
 545               		.cfi_def_cfa_offset 4
 546               		.cfi_offset 29, -3
 547 02b0 CDB7      		in r28,__SP_L__
 548 02b2 DEB7      		in r29,__SP_H__
 549               	.LCFI22:
 550               		.cfi_def_cfa_register 28
 551 02b4 6397      		sbiw r28,19
 552               	.LCFI23:
 553               		.cfi_def_cfa_offset 23
 554 02b6 0FB6      		in __tmp_reg__,__SREG__
 555 02b8 F894      		cli
 556 02ba DEBF      		out __SP_H__,r29
 557 02bc 0FBE      		out __SREG__,__tmp_reg__
 558 02be CDBF      		out __SP_L__,r28
 559               	/* prologue: function */
 560               	/* frame size = 19 */
 561               	/* stack size = 21 */
 562               	.L__stack_usage = 21
 563 02c0 988B      		std Y+16,r25
 564 02c2 8F87      		std Y+15,r24
 565 02c4 7A8B      		std Y+18,r23
 566 02c6 698B      		std Y+17,r22
 567 02c8 4B8B      		std Y+19,r20
  88:lp_solve_5.5/lp_presolve.c ****   int i, ii,
  89:lp_solve_5.5/lp_presolve.c ****       oldrowcolalloc, rowcolsum, oldrowalloc, oldcolalloc;
  90:lp_solve_5.5/lp_presolve.c ****   presolveundorec *psundo = lp->presolve_undo;
 568               		.loc 2 90 0
 569 02ca 8F85      		ldd r24,Y+15
 570 02cc 9889      		ldd r25,Y+16
 571 02ce 8A59      		subi r24,-102
 572 02d0 9C4F      		sbci r25,-4
 573 02d2 FC01      		movw r30,r24
 574 02d4 8081      		ld r24,Z
 575 02d6 9181      		ldd r25,Z+1
 576 02d8 9E83      		std Y+6,r25
 577 02da 8D83      		std Y+5,r24
  91:lp_solve_5.5/lp_presolve.c **** 
  92:lp_solve_5.5/lp_presolve.c ****   if(psundo == NULL) {
 578               		.loc 2 92 0
 579 02dc 8D81      		ldd r24,Y+5
 580 02de 9E81      		ldd r25,Y+6
 581 02e0 892B      		or r24,r25
 582 02e2 01F4      		brne .L25
  93:lp_solve_5.5/lp_presolve.c ****     presolve_createUndo(lp);
 583               		.loc 2 93 0
 584 02e4 8F85      		ldd r24,Y+15
 585 02e6 9889      		ldd r25,Y+16
 586 02e8 0E94 0000 		call presolve_createUndo
  94:lp_solve_5.5/lp_presolve.c ****     psundo = lp->presolve_undo;
 587               		.loc 2 94 0
 588 02ec 8F85      		ldd r24,Y+15
 589 02ee 9889      		ldd r25,Y+16
 590 02f0 8A59      		subi r24,-102
 591 02f2 9C4F      		sbci r25,-4
 592 02f4 FC01      		movw r30,r24
 593 02f6 8081      		ld r24,Z
 594 02f8 9181      		ldd r25,Z+1
 595 02fa 9E83      		std Y+6,r25
 596 02fc 8D83      		std Y+5,r24
 597               	.L25:
  95:lp_solve_5.5/lp_presolve.c ****   }
  96:lp_solve_5.5/lp_presolve.c **** 
  97:lp_solve_5.5/lp_presolve.c ****   /* Set constants */
  98:lp_solve_5.5/lp_presolve.c ****   oldrowalloc = lp->rows_alloc-delta;
 598               		.loc 2 98 0
 599 02fe 8F85      		ldd r24,Y+15
 600 0300 9889      		ldd r25,Y+16
 601 0302 8A50      		subi r24,10
 602 0304 9E4F      		sbci r25,-2
 603 0306 FC01      		movw r30,r24
 604 0308 2081      		ld r18,Z
 605 030a 3181      		ldd r19,Z+1
 606 030c 8989      		ldd r24,Y+17
 607 030e 9A89      		ldd r25,Y+18
 608 0310 A901      		movw r20,r18
 609 0312 481B      		sub r20,r24
 610 0314 590B      		sbc r21,r25
 611 0316 CA01      		movw r24,r20
 612 0318 9887      		std Y+8,r25
 613 031a 8F83      		std Y+7,r24
  99:lp_solve_5.5/lp_presolve.c ****   oldcolalloc = lp->columns_alloc-delta;
 614               		.loc 2 99 0
 615 031c 8F85      		ldd r24,Y+15
 616 031e 9889      		ldd r25,Y+16
 617 0320 8850      		subi r24,8
 618 0322 9E4F      		sbci r25,-2
 619 0324 FC01      		movw r30,r24
 620 0326 2081      		ld r18,Z
 621 0328 3181      		ldd r19,Z+1
 622 032a 8989      		ldd r24,Y+17
 623 032c 9A89      		ldd r25,Y+18
 624 032e A901      		movw r20,r18
 625 0330 481B      		sub r20,r24
 626 0332 590B      		sbc r21,r25
 627 0334 CA01      		movw r24,r20
 628 0336 9A87      		std Y+10,r25
 629 0338 8987      		std Y+9,r24
 100:lp_solve_5.5/lp_presolve.c ****   oldrowcolalloc = lp->sum_alloc-delta;
 630               		.loc 2 100 0
 631 033a 8F85      		ldd r24,Y+15
 632 033c 9889      		ldd r25,Y+16
 633 033e 8C50      		subi r24,12
 634 0340 9E4F      		sbci r25,-2
 635 0342 FC01      		movw r30,r24
 636 0344 2081      		ld r18,Z
 637 0346 3181      		ldd r19,Z+1
 638 0348 8989      		ldd r24,Y+17
 639 034a 9A89      		ldd r25,Y+18
 640 034c A901      		movw r20,r18
 641 034e 481B      		sub r20,r24
 642 0350 590B      		sbc r21,r25
 643 0352 CA01      		movw r24,r20
 644 0354 9C87      		std Y+12,r25
 645 0356 8B87      		std Y+11,r24
 101:lp_solve_5.5/lp_presolve.c ****   rowcolsum = lp->sum_alloc + 1;
 646               		.loc 2 101 0
 647 0358 8F85      		ldd r24,Y+15
 648 035a 9889      		ldd r25,Y+16
 649 035c 8C50      		subi r24,12
 650 035e 9E4F      		sbci r25,-2
 651 0360 FC01      		movw r30,r24
 652 0362 8081      		ld r24,Z
 653 0364 9181      		ldd r25,Z+1
 654 0366 0196      		adiw r24,1
 655 0368 9E87      		std Y+14,r25
 656 036a 8D87      		std Y+13,r24
 102:lp_solve_5.5/lp_presolve.c **** 
 103:lp_solve_5.5/lp_presolve.c ****   /* Reallocate lp memory */
 104:lp_solve_5.5/lp_presolve.c ****   if(isrows)
 657               		.loc 2 104 0
 658 036c 8B89      		ldd r24,Y+19
 659 036e 8823      		tst r24
 660 0370 01F0      		breq .L26
 105:lp_solve_5.5/lp_presolve.c ****     allocREAL(lp, &psundo->fixed_rhs,   lp->rows_alloc+1, AUTOMATIC);
 661               		.loc 2 105 0
 662 0372 8F85      		ldd r24,Y+15
 663 0374 9889      		ldd r25,Y+16
 664 0376 8A50      		subi r24,10
 665 0378 9E4F      		sbci r25,-2
 666 037a FC01      		movw r30,r24
 667 037c 8081      		ld r24,Z
 668 037e 9181      		ldd r25,Z+1
 669 0380 AC01      		movw r20,r24
 670 0382 4F5F      		subi r20,-1
 671 0384 5F4F      		sbci r21,-1
 672 0386 8D81      		ldd r24,Y+5
 673 0388 9E81      		ldd r25,Y+6
 674 038a BC01      		movw r22,r24
 675 038c 645F      		subi r22,-12
 676 038e 7F4F      		sbci r23,-1
 677 0390 8F85      		ldd r24,Y+15
 678 0392 9889      		ldd r25,Y+16
 679 0394 22E0      		ldi r18,lo8(2)
 680 0396 0E94 0000 		call allocREAL
 681 039a 00C0      		rjmp .L27
 682               	.L26:
 106:lp_solve_5.5/lp_presolve.c ****   else
 107:lp_solve_5.5/lp_presolve.c ****     allocREAL(lp, &psundo->fixed_obj,   lp->columns_alloc+1, AUTOMATIC);
 683               		.loc 2 107 0
 684 039c 8F85      		ldd r24,Y+15
 685 039e 9889      		ldd r25,Y+16
 686 03a0 8850      		subi r24,8
 687 03a2 9E4F      		sbci r25,-2
 688 03a4 FC01      		movw r30,r24
 689 03a6 8081      		ld r24,Z
 690 03a8 9181      		ldd r25,Z+1
 691 03aa AC01      		movw r20,r24
 692 03ac 4F5F      		subi r20,-1
 693 03ae 5F4F      		sbci r21,-1
 694 03b0 8D81      		ldd r24,Y+5
 695 03b2 9E81      		ldd r25,Y+6
 696 03b4 BC01      		movw r22,r24
 697 03b6 625F      		subi r22,-14
 698 03b8 7F4F      		sbci r23,-1
 699 03ba 8F85      		ldd r24,Y+15
 700 03bc 9889      		ldd r25,Y+16
 701 03be 22E0      		ldi r18,lo8(2)
 702 03c0 0E94 0000 		call allocREAL
 703               	.L27:
 108:lp_solve_5.5/lp_presolve.c ****   allocINT(lp,  &psundo->var_to_orig, rowcolsum, AUTOMATIC);
 704               		.loc 2 108 0
 705 03c4 8D81      		ldd r24,Y+5
 706 03c6 9E81      		ldd r25,Y+6
 707 03c8 BC01      		movw r22,r24
 708 03ca 685F      		subi r22,-8
 709 03cc 7F4F      		sbci r23,-1
 710 03ce 4D85      		ldd r20,Y+13
 711 03d0 5E85      		ldd r21,Y+14
 712 03d2 8F85      		ldd r24,Y+15
 713 03d4 9889      		ldd r25,Y+16
 714 03d6 22E0      		ldi r18,lo8(2)
 715 03d8 0E94 0000 		call allocINT
 109:lp_solve_5.5/lp_presolve.c ****   allocINT(lp,  &psundo->orig_to_var, rowcolsum, AUTOMATIC);
 716               		.loc 2 109 0
 717 03dc 8D81      		ldd r24,Y+5
 718 03de 9E81      		ldd r25,Y+6
 719 03e0 BC01      		movw r22,r24
 720 03e2 665F      		subi r22,-10
 721 03e4 7F4F      		sbci r23,-1
 722 03e6 4D85      		ldd r20,Y+13
 723 03e8 5E85      		ldd r21,Y+14
 724 03ea 8F85      		ldd r24,Y+15
 725 03ec 9889      		ldd r25,Y+16
 726 03ee 22E0      		ldi r18,lo8(2)
 727 03f0 0E94 0000 		call allocINT
 110:lp_solve_5.5/lp_presolve.c **** 
 111:lp_solve_5.5/lp_presolve.c ****   /* Fill in default values, where appropriate */
 112:lp_solve_5.5/lp_presolve.c ****   if(isrows)
 728               		.loc 2 112 0
 729 03f4 8B89      		ldd r24,Y+19
 730 03f6 8823      		tst r24
 731 03f8 01F0      		breq .L28
 113:lp_solve_5.5/lp_presolve.c ****     ii = oldrowalloc+1;
 732               		.loc 2 113 0
 733 03fa 8F81      		ldd r24,Y+7
 734 03fc 9885      		ldd r25,Y+8
 735 03fe 0196      		adiw r24,1
 736 0400 9C83      		std Y+4,r25
 737 0402 8B83      		std Y+3,r24
 738 0404 00C0      		rjmp .L29
 739               	.L28:
 114:lp_solve_5.5/lp_presolve.c ****   else
 115:lp_solve_5.5/lp_presolve.c ****     ii = oldcolalloc+1;
 740               		.loc 2 115 0
 741 0406 8985      		ldd r24,Y+9
 742 0408 9A85      		ldd r25,Y+10
 743 040a 0196      		adiw r24,1
 744 040c 9C83      		std Y+4,r25
 745 040e 8B83      		std Y+3,r24
 746               	.L29:
 116:lp_solve_5.5/lp_presolve.c ****   for(i = oldrowcolalloc+1; i < rowcolsum; i++, ii++) {
 747               		.loc 2 116 0
 748 0410 8B85      		ldd r24,Y+11
 749 0412 9C85      		ldd r25,Y+12
 750 0414 0196      		adiw r24,1
 751 0416 9A83      		std Y+2,r25
 752 0418 8983      		std Y+1,r24
 753 041a 00C0      		rjmp .L30
 754               	.L33:
 117:lp_solve_5.5/lp_presolve.c ****     psundo->var_to_orig[i] = 0;
 755               		.loc 2 117 0
 756 041c 8D81      		ldd r24,Y+5
 757 041e 9E81      		ldd r25,Y+6
 758 0420 FC01      		movw r30,r24
 759 0422 2085      		ldd r18,Z+8
 760 0424 3185      		ldd r19,Z+9
 761 0426 8981      		ldd r24,Y+1
 762 0428 9A81      		ldd r25,Y+2
 763 042a 880F      		lsl r24
 764 042c 991F      		rol r25
 765 042e 820F      		add r24,r18
 766 0430 931F      		adc r25,r19
 767 0432 FC01      		movw r30,r24
 768 0434 1182      		std Z+1,__zero_reg__
 769 0436 1082      		st Z,__zero_reg__
 118:lp_solve_5.5/lp_presolve.c ****     psundo->orig_to_var[i] = 0;
 770               		.loc 2 118 0
 771 0438 8D81      		ldd r24,Y+5
 772 043a 9E81      		ldd r25,Y+6
 773 043c FC01      		movw r30,r24
 774 043e 2285      		ldd r18,Z+10
 775 0440 3385      		ldd r19,Z+11
 776 0442 8981      		ldd r24,Y+1
 777 0444 9A81      		ldd r25,Y+2
 778 0446 880F      		lsl r24
 779 0448 991F      		rol r25
 780 044a 820F      		add r24,r18
 781 044c 931F      		adc r25,r19
 782 044e FC01      		movw r30,r24
 783 0450 1182      		std Z+1,__zero_reg__
 784 0452 1082      		st Z,__zero_reg__
 119:lp_solve_5.5/lp_presolve.c ****     if(isrows)
 785               		.loc 2 119 0
 786 0454 8B89      		ldd r24,Y+19
 787 0456 8823      		tst r24
 788 0458 01F0      		breq .L31
 120:lp_solve_5.5/lp_presolve.c ****       psundo->fixed_rhs[ii] = 0;
 789               		.loc 2 120 0
 790 045a 8D81      		ldd r24,Y+5
 791 045c 9E81      		ldd r25,Y+6
 792 045e FC01      		movw r30,r24
 793 0460 2485      		ldd r18,Z+12
 794 0462 3585      		ldd r19,Z+13
 795 0464 8B81      		ldd r24,Y+3
 796 0466 9C81      		ldd r25,Y+4
 797 0468 880F      		lsl r24
 798 046a 991F      		rol r25
 799 046c 880F      		lsl r24
 800 046e 991F      		rol r25
 801 0470 820F      		add r24,r18
 802 0472 931F      		adc r25,r19
 803 0474 FC01      		movw r30,r24
 804 0476 1082      		st Z,__zero_reg__
 805 0478 1182      		std Z+1,__zero_reg__
 806 047a 1282      		std Z+2,__zero_reg__
 807 047c 1382      		std Z+3,__zero_reg__
 808 047e 00C0      		rjmp .L32
 809               	.L31:
 121:lp_solve_5.5/lp_presolve.c ****     else
 122:lp_solve_5.5/lp_presolve.c ****       psundo->fixed_obj[ii] = 0;
 810               		.loc 2 122 0
 811 0480 8D81      		ldd r24,Y+5
 812 0482 9E81      		ldd r25,Y+6
 813 0484 FC01      		movw r30,r24
 814 0486 2685      		ldd r18,Z+14
 815 0488 3785      		ldd r19,Z+15
 816 048a 8B81      		ldd r24,Y+3
 817 048c 9C81      		ldd r25,Y+4
 818 048e 880F      		lsl r24
 819 0490 991F      		rol r25
 820 0492 880F      		lsl r24
 821 0494 991F      		rol r25
 822 0496 820F      		add r24,r18
 823 0498 931F      		adc r25,r19
 824 049a FC01      		movw r30,r24
 825 049c 1082      		st Z,__zero_reg__
 826 049e 1182      		std Z+1,__zero_reg__
 827 04a0 1282      		std Z+2,__zero_reg__
 828 04a2 1382      		std Z+3,__zero_reg__
 829               	.L32:
 116:lp_solve_5.5/lp_presolve.c ****     psundo->var_to_orig[i] = 0;
 830               		.loc 2 116 0 discriminator 2
 831 04a4 8981      		ldd r24,Y+1
 832 04a6 9A81      		ldd r25,Y+2
 833 04a8 0196      		adiw r24,1
 834 04aa 9A83      		std Y+2,r25
 835 04ac 8983      		std Y+1,r24
 836 04ae 8B81      		ldd r24,Y+3
 837 04b0 9C81      		ldd r25,Y+4
 838 04b2 0196      		adiw r24,1
 839 04b4 9C83      		std Y+4,r25
 840 04b6 8B83      		std Y+3,r24
 841               	.L30:
 116:lp_solve_5.5/lp_presolve.c ****     psundo->var_to_orig[i] = 0;
 842               		.loc 2 116 0 is_stmt 0 discriminator 1
 843 04b8 2981      		ldd r18,Y+1
 844 04ba 3A81      		ldd r19,Y+2
 845 04bc 8D85      		ldd r24,Y+13
 846 04be 9E85      		ldd r25,Y+14
 847 04c0 2817      		cp r18,r24
 848 04c2 3907      		cpc r19,r25
 849 04c4 04F4      		brge .+2
 850 04c6 00C0      		rjmp .L33
 123:lp_solve_5.5/lp_presolve.c ****   }
 124:lp_solve_5.5/lp_presolve.c **** 
 125:lp_solve_5.5/lp_presolve.c ****   return(TRUE);
 851               		.loc 2 125 0 is_stmt 1
 852 04c8 81E0      		ldi r24,lo8(1)
 853               	/* epilogue start */
 126:lp_solve_5.5/lp_presolve.c **** }
 854               		.loc 2 126 0
 855 04ca 6396      		adiw r28,19
 856 04cc 0FB6      		in __tmp_reg__,__SREG__
 857 04ce F894      		cli
 858 04d0 DEBF      		out __SP_H__,r29
 859 04d2 0FBE      		out __SREG__,__tmp_reg__
 860 04d4 CDBF      		out __SP_L__,r28
 861 04d6 DF91      		pop r29
 862 04d8 CF91      		pop r28
 863 04da 0895      		ret
 864               		.cfi_endproc
 865               	.LFE12:
 867               	.global	presolve_setOrig
 869               	presolve_setOrig:
 870               	.LFB13:
 127:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_setOrig(lprec *lp, int orig_rows, int orig_cols)
 128:lp_solve_5.5/lp_presolve.c **** {
 871               		.loc 2 128 0
 872               		.cfi_startproc
 873 04dc CF93      		push r28
 874               	.LCFI24:
 875               		.cfi_def_cfa_offset 3
 876               		.cfi_offset 28, -2
 877 04de DF93      		push r29
 878               	.LCFI25:
 879               		.cfi_def_cfa_offset 4
 880               		.cfi_offset 29, -3
 881 04e0 CDB7      		in r28,__SP_L__
 882 04e2 DEB7      		in r29,__SP_H__
 883               	.LCFI26:
 884               		.cfi_def_cfa_register 28
 885 04e4 2897      		sbiw r28,8
 886               	.LCFI27:
 887               		.cfi_def_cfa_offset 12
 888 04e6 0FB6      		in __tmp_reg__,__SREG__
 889 04e8 F894      		cli
 890 04ea DEBF      		out __SP_H__,r29
 891 04ec 0FBE      		out __SREG__,__tmp_reg__
 892 04ee CDBF      		out __SP_L__,r28
 893               	/* prologue: function */
 894               	/* frame size = 8 */
 895               	/* stack size = 10 */
 896               	.L__stack_usage = 10
 897 04f0 9C83      		std Y+4,r25
 898 04f2 8B83      		std Y+3,r24
 899 04f4 7E83      		std Y+6,r23
 900 04f6 6D83      		std Y+5,r22
 901 04f8 5887      		std Y+8,r21
 902 04fa 4F83      		std Y+7,r20
 129:lp_solve_5.5/lp_presolve.c ****   presolveundorec *psundo = lp->presolve_undo;
 903               		.loc 2 129 0
 904 04fc 8B81      		ldd r24,Y+3
 905 04fe 9C81      		ldd r25,Y+4
 906 0500 8A59      		subi r24,-102
 907 0502 9C4F      		sbci r25,-4
 908 0504 FC01      		movw r30,r24
 909 0506 8081      		ld r24,Z
 910 0508 9181      		ldd r25,Z+1
 911 050a 9A83      		std Y+2,r25
 912 050c 8983      		std Y+1,r24
 130:lp_solve_5.5/lp_presolve.c **** 
 131:lp_solve_5.5/lp_presolve.c ****   if(psundo == NULL)
 913               		.loc 2 131 0
 914 050e 8981      		ldd r24,Y+1
 915 0510 9A81      		ldd r25,Y+2
 916 0512 892B      		or r24,r25
 917 0514 01F4      		brne .L36
 132:lp_solve_5.5/lp_presolve.c ****     return( FALSE );
 918               		.loc 2 132 0
 919 0516 80E0      		ldi r24,0
 920 0518 00C0      		rjmp .L37
 921               	.L36:
 133:lp_solve_5.5/lp_presolve.c ****   psundo->orig_rows = orig_rows;
 922               		.loc 2 133 0
 923 051a 8981      		ldd r24,Y+1
 924 051c 9A81      		ldd r25,Y+2
 925 051e 2D81      		ldd r18,Y+5
 926 0520 3E81      		ldd r19,Y+6
 927 0522 FC01      		movw r30,r24
 928 0524 3383      		std Z+3,r19
 929 0526 2283      		std Z+2,r18
 134:lp_solve_5.5/lp_presolve.c ****   psundo->orig_columns = orig_cols;
 930               		.loc 2 134 0
 931 0528 8981      		ldd r24,Y+1
 932 052a 9A81      		ldd r25,Y+2
 933 052c 2F81      		ldd r18,Y+7
 934 052e 3885      		ldd r19,Y+8
 935 0530 FC01      		movw r30,r24
 936 0532 3583      		std Z+5,r19
 937 0534 2483      		std Z+4,r18
 135:lp_solve_5.5/lp_presolve.c ****   psundo->orig_sum = orig_rows + orig_cols;
 938               		.loc 2 135 0
 939 0536 2D81      		ldd r18,Y+5
 940 0538 3E81      		ldd r19,Y+6
 941 053a 8F81      		ldd r24,Y+7
 942 053c 9885      		ldd r25,Y+8
 943 053e 280F      		add r18,r24
 944 0540 391F      		adc r19,r25
 945 0542 8981      		ldd r24,Y+1
 946 0544 9A81      		ldd r25,Y+2
 947 0546 FC01      		movw r30,r24
 948 0548 3783      		std Z+7,r19
 949 054a 2683      		std Z+6,r18
 136:lp_solve_5.5/lp_presolve.c ****   if(lp->wasPresolved)
 950               		.loc 2 136 0
 951 054c 8B81      		ldd r24,Y+3
 952 054e 9C81      		ldd r25,Y+4
 953 0550 8950      		subi r24,9
 954 0552 9D4F      		sbci r25,-3
 955 0554 FC01      		movw r30,r24
 956 0556 8081      		ld r24,Z
 957 0558 8823      		tst r24
 958 055a 01F0      		breq .L38
 137:lp_solve_5.5/lp_presolve.c ****     presolve_fillUndo(lp, orig_rows, orig_cols, FALSE);
 959               		.loc 2 137 0
 960 055c 4F81      		ldd r20,Y+7
 961 055e 5885      		ldd r21,Y+8
 962 0560 6D81      		ldd r22,Y+5
 963 0562 7E81      		ldd r23,Y+6
 964 0564 8B81      		ldd r24,Y+3
 965 0566 9C81      		ldd r25,Y+4
 966 0568 20E0      		ldi r18,0
 967 056a 0E94 0000 		call presolve_fillUndo
 968               	.L38:
 138:lp_solve_5.5/lp_presolve.c ****   return( TRUE );
 969               		.loc 2 138 0
 970 056e 81E0      		ldi r24,lo8(1)
 971               	.L37:
 972               	/* epilogue start */
 139:lp_solve_5.5/lp_presolve.c **** }
 973               		.loc 2 139 0
 974 0570 2896      		adiw r28,8
 975 0572 0FB6      		in __tmp_reg__,__SREG__
 976 0574 F894      		cli
 977 0576 DEBF      		out __SP_H__,r29
 978 0578 0FBE      		out __SREG__,__tmp_reg__
 979 057a CDBF      		out __SP_L__,r28
 980 057c DF91      		pop r29
 981 057e CF91      		pop r28
 982 0580 0895      		ret
 983               		.cfi_endproc
 984               	.LFE13:
 986               	.global	presolve_fillUndo
 988               	presolve_fillUndo:
 989               	.LFB14:
 140:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_fillUndo(lprec *lp, int orig_rows, int orig_cols, MYBOOL setOrig)
 141:lp_solve_5.5/lp_presolve.c **** {
 990               		.loc 2 141 0
 991               		.cfi_startproc
 992 0582 CF93      		push r28
 993               	.LCFI28:
 994               		.cfi_def_cfa_offset 3
 995               		.cfi_offset 28, -2
 996 0584 DF93      		push r29
 997               	.LCFI29:
 998               		.cfi_def_cfa_offset 4
 999               		.cfi_offset 29, -3
 1000 0586 CDB7      		in r28,__SP_L__
 1001 0588 DEB7      		in r29,__SP_H__
 1002               	.LCFI30:
 1003               		.cfi_def_cfa_register 28
 1004 058a 2B97      		sbiw r28,11
 1005               	.LCFI31:
 1006               		.cfi_def_cfa_offset 15
 1007 058c 0FB6      		in __tmp_reg__,__SREG__
 1008 058e F894      		cli
 1009 0590 DEBF      		out __SP_H__,r29
 1010 0592 0FBE      		out __SREG__,__tmp_reg__
 1011 0594 CDBF      		out __SP_L__,r28
 1012               	/* prologue: function */
 1013               	/* frame size = 11 */
 1014               	/* stack size = 13 */
 1015               	.L__stack_usage = 13
 1016 0596 9E83      		std Y+6,r25
 1017 0598 8D83      		std Y+5,r24
 1018 059a 7887      		std Y+8,r23
 1019 059c 6F83      		std Y+7,r22
 1020 059e 5A87      		std Y+10,r21
 1021 05a0 4987      		std Y+9,r20
 1022 05a2 2B87      		std Y+11,r18
 142:lp_solve_5.5/lp_presolve.c ****   int i;
 143:lp_solve_5.5/lp_presolve.c ****   presolveundorec *psundo = lp->presolve_undo;
 1023               		.loc 2 143 0
 1024 05a4 8D81      		ldd r24,Y+5
 1025 05a6 9E81      		ldd r25,Y+6
 1026 05a8 8A59      		subi r24,-102
 1027 05aa 9C4F      		sbci r25,-4
 1028 05ac FC01      		movw r30,r24
 1029 05ae 8081      		ld r24,Z
 1030 05b0 9181      		ldd r25,Z+1
 1031 05b2 9C83      		std Y+4,r25
 1032 05b4 8B83      		std Y+3,r24
 144:lp_solve_5.5/lp_presolve.c **** 
 145:lp_solve_5.5/lp_presolve.c ****   for(i = 0; i <= orig_rows; i++) {
 1033               		.loc 2 145 0
 1034 05b6 1A82      		std Y+2,__zero_reg__
 1035 05b8 1982      		std Y+1,__zero_reg__
 1036 05ba 00C0      		rjmp .L40
 1037               	.L41:
 146:lp_solve_5.5/lp_presolve.c ****     psundo->var_to_orig[i] = i;
 1038               		.loc 2 146 0 discriminator 3
 1039 05bc 8B81      		ldd r24,Y+3
 1040 05be 9C81      		ldd r25,Y+4
 1041 05c0 FC01      		movw r30,r24
 1042 05c2 2085      		ldd r18,Z+8
 1043 05c4 3185      		ldd r19,Z+9
 1044 05c6 8981      		ldd r24,Y+1
 1045 05c8 9A81      		ldd r25,Y+2
 1046 05ca 880F      		lsl r24
 1047 05cc 991F      		rol r25
 1048 05ce 820F      		add r24,r18
 1049 05d0 931F      		adc r25,r19
 1050 05d2 2981      		ldd r18,Y+1
 1051 05d4 3A81      		ldd r19,Y+2
 1052 05d6 FC01      		movw r30,r24
 1053 05d8 3183      		std Z+1,r19
 1054 05da 2083      		st Z,r18
 147:lp_solve_5.5/lp_presolve.c ****     psundo->orig_to_var[i] = i;
 1055               		.loc 2 147 0 discriminator 3
 1056 05dc 8B81      		ldd r24,Y+3
 1057 05de 9C81      		ldd r25,Y+4
 1058 05e0 FC01      		movw r30,r24
 1059 05e2 2285      		ldd r18,Z+10
 1060 05e4 3385      		ldd r19,Z+11
 1061 05e6 8981      		ldd r24,Y+1
 1062 05e8 9A81      		ldd r25,Y+2
 1063 05ea 880F      		lsl r24
 1064 05ec 991F      		rol r25
 1065 05ee 820F      		add r24,r18
 1066 05f0 931F      		adc r25,r19
 1067 05f2 2981      		ldd r18,Y+1
 1068 05f4 3A81      		ldd r19,Y+2
 1069 05f6 FC01      		movw r30,r24
 1070 05f8 3183      		std Z+1,r19
 1071 05fa 2083      		st Z,r18
 148:lp_solve_5.5/lp_presolve.c ****     psundo->fixed_rhs[i]   = 0;
 1072               		.loc 2 148 0 discriminator 3
 1073 05fc 8B81      		ldd r24,Y+3
 1074 05fe 9C81      		ldd r25,Y+4
 1075 0600 FC01      		movw r30,r24
 1076 0602 2485      		ldd r18,Z+12
 1077 0604 3585      		ldd r19,Z+13
 1078 0606 8981      		ldd r24,Y+1
 1079 0608 9A81      		ldd r25,Y+2
 1080 060a 880F      		lsl r24
 1081 060c 991F      		rol r25
 1082 060e 880F      		lsl r24
 1083 0610 991F      		rol r25
 1084 0612 820F      		add r24,r18
 1085 0614 931F      		adc r25,r19
 1086 0616 FC01      		movw r30,r24
 1087 0618 1082      		st Z,__zero_reg__
 1088 061a 1182      		std Z+1,__zero_reg__
 1089 061c 1282      		std Z+2,__zero_reg__
 1090 061e 1382      		std Z+3,__zero_reg__
 145:lp_solve_5.5/lp_presolve.c ****     psundo->var_to_orig[i] = i;
 1091               		.loc 2 145 0 discriminator 3
 1092 0620 8981      		ldd r24,Y+1
 1093 0622 9A81      		ldd r25,Y+2
 1094 0624 0196      		adiw r24,1
 1095 0626 9A83      		std Y+2,r25
 1096 0628 8983      		std Y+1,r24
 1097               	.L40:
 145:lp_solve_5.5/lp_presolve.c ****     psundo->var_to_orig[i] = i;
 1098               		.loc 2 145 0 is_stmt 0 discriminator 1
 1099 062a 2981      		ldd r18,Y+1
 1100 062c 3A81      		ldd r19,Y+2
 1101 062e 8F81      		ldd r24,Y+7
 1102 0630 9885      		ldd r25,Y+8
 1103 0632 8217      		cp r24,r18
 1104 0634 9307      		cpc r25,r19
 1105 0636 04F4      		brge .L41
 149:lp_solve_5.5/lp_presolve.c ****   }
 150:lp_solve_5.5/lp_presolve.c ****   for(i = 1; i <= orig_cols; i++) {
 1106               		.loc 2 150 0 is_stmt 1
 1107 0638 81E0      		ldi r24,lo8(1)
 1108 063a 90E0      		ldi r25,0
 1109 063c 9A83      		std Y+2,r25
 1110 063e 8983      		std Y+1,r24
 1111 0640 00C0      		rjmp .L42
 1112               	.L43:
 151:lp_solve_5.5/lp_presolve.c ****     psundo->var_to_orig[orig_rows + i] = i;
 1113               		.loc 2 151 0 discriminator 3
 1114 0642 8B81      		ldd r24,Y+3
 1115 0644 9C81      		ldd r25,Y+4
 1116 0646 FC01      		movw r30,r24
 1117 0648 2085      		ldd r18,Z+8
 1118 064a 3185      		ldd r19,Z+9
 1119 064c 4F81      		ldd r20,Y+7
 1120 064e 5885      		ldd r21,Y+8
 1121 0650 8981      		ldd r24,Y+1
 1122 0652 9A81      		ldd r25,Y+2
 1123 0654 840F      		add r24,r20
 1124 0656 951F      		adc r25,r21
 1125 0658 880F      		lsl r24
 1126 065a 991F      		rol r25
 1127 065c 820F      		add r24,r18
 1128 065e 931F      		adc r25,r19
 1129 0660 2981      		ldd r18,Y+1
 1130 0662 3A81      		ldd r19,Y+2
 1131 0664 FC01      		movw r30,r24
 1132 0666 3183      		std Z+1,r19
 1133 0668 2083      		st Z,r18
 152:lp_solve_5.5/lp_presolve.c ****     psundo->orig_to_var[orig_rows + i] = i;
 1134               		.loc 2 152 0 discriminator 3
 1135 066a 8B81      		ldd r24,Y+3
 1136 066c 9C81      		ldd r25,Y+4
 1137 066e FC01      		movw r30,r24
 1138 0670 2285      		ldd r18,Z+10
 1139 0672 3385      		ldd r19,Z+11
 1140 0674 4F81      		ldd r20,Y+7
 1141 0676 5885      		ldd r21,Y+8
 1142 0678 8981      		ldd r24,Y+1
 1143 067a 9A81      		ldd r25,Y+2
 1144 067c 840F      		add r24,r20
 1145 067e 951F      		adc r25,r21
 1146 0680 880F      		lsl r24
 1147 0682 991F      		rol r25
 1148 0684 820F      		add r24,r18
 1149 0686 931F      		adc r25,r19
 1150 0688 2981      		ldd r18,Y+1
 1151 068a 3A81      		ldd r19,Y+2
 1152 068c FC01      		movw r30,r24
 1153 068e 3183      		std Z+1,r19
 1154 0690 2083      		st Z,r18
 153:lp_solve_5.5/lp_presolve.c ****     psundo->fixed_obj[i] = 0;
 1155               		.loc 2 153 0 discriminator 3
 1156 0692 8B81      		ldd r24,Y+3
 1157 0694 9C81      		ldd r25,Y+4
 1158 0696 FC01      		movw r30,r24
 1159 0698 2685      		ldd r18,Z+14
 1160 069a 3785      		ldd r19,Z+15
 1161 069c 8981      		ldd r24,Y+1
 1162 069e 9A81      		ldd r25,Y+2
 1163 06a0 880F      		lsl r24
 1164 06a2 991F      		rol r25
 1165 06a4 880F      		lsl r24
 1166 06a6 991F      		rol r25
 1167 06a8 820F      		add r24,r18
 1168 06aa 931F      		adc r25,r19
 1169 06ac FC01      		movw r30,r24
 1170 06ae 1082      		st Z,__zero_reg__
 1171 06b0 1182      		std Z+1,__zero_reg__
 1172 06b2 1282      		std Z+2,__zero_reg__
 1173 06b4 1382      		std Z+3,__zero_reg__
 150:lp_solve_5.5/lp_presolve.c ****     psundo->var_to_orig[orig_rows + i] = i;
 1174               		.loc 2 150 0 discriminator 3
 1175 06b6 8981      		ldd r24,Y+1
 1176 06b8 9A81      		ldd r25,Y+2
 1177 06ba 0196      		adiw r24,1
 1178 06bc 9A83      		std Y+2,r25
 1179 06be 8983      		std Y+1,r24
 1180               	.L42:
 150:lp_solve_5.5/lp_presolve.c ****     psundo->var_to_orig[orig_rows + i] = i;
 1181               		.loc 2 150 0 is_stmt 0 discriminator 1
 1182 06c0 2981      		ldd r18,Y+1
 1183 06c2 3A81      		ldd r19,Y+2
 1184 06c4 8985      		ldd r24,Y+9
 1185 06c6 9A85      		ldd r25,Y+10
 1186 06c8 8217      		cp r24,r18
 1187 06ca 9307      		cpc r25,r19
 1188 06cc 04F0      		brlt .+2
 1189 06ce 00C0      		rjmp .L43
 154:lp_solve_5.5/lp_presolve.c ****   }
 155:lp_solve_5.5/lp_presolve.c ****   if(setOrig)
 1190               		.loc 2 155 0 is_stmt 1
 1191 06d0 8B85      		ldd r24,Y+11
 1192 06d2 8823      		tst r24
 1193 06d4 01F0      		breq .L44
 156:lp_solve_5.5/lp_presolve.c ****     presolve_setOrig(lp, orig_rows, orig_cols);
 1194               		.loc 2 156 0
 1195 06d6 4985      		ldd r20,Y+9
 1196 06d8 5A85      		ldd r21,Y+10
 1197 06da 2F81      		ldd r18,Y+7
 1198 06dc 3885      		ldd r19,Y+8
 1199 06de 8D81      		ldd r24,Y+5
 1200 06e0 9E81      		ldd r25,Y+6
 1201 06e2 B901      		movw r22,r18
 1202 06e4 0E94 0000 		call presolve_setOrig
 1203               	.L44:
 157:lp_solve_5.5/lp_presolve.c **** 
 158:lp_solve_5.5/lp_presolve.c ****   return( TRUE );
 1204               		.loc 2 158 0
 1205 06e8 81E0      		ldi r24,lo8(1)
 1206               	/* epilogue start */
 159:lp_solve_5.5/lp_presolve.c **** }
 1207               		.loc 2 159 0
 1208 06ea 2B96      		adiw r28,11
 1209 06ec 0FB6      		in __tmp_reg__,__SREG__
 1210 06ee F894      		cli
 1211 06f0 DEBF      		out __SP_H__,r29
 1212 06f2 0FBE      		out __SREG__,__tmp_reg__
 1213 06f4 CDBF      		out __SP_L__,r28
 1214 06f6 DF91      		pop r29
 1215 06f8 CF91      		pop r28
 1216 06fa 0895      		ret
 1217               		.cfi_endproc
 1218               	.LFE14:
 1220               	.global	__addsf3
 1221               	.global	__mulsf3
 1222               	.global	__subsf3
 1223               	.global	__gtsf2
 1224               	.global	presolve_rebuildUndo
 1226               	presolve_rebuildUndo:
 1227               	.LFB15:
 160:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_rebuildUndo(lprec *lp, MYBOOL isprimal)
 161:lp_solve_5.5/lp_presolve.c **** {
 1228               		.loc 2 161 0
 1229               		.cfi_startproc
 1230 06fc CF93      		push r28
 1231               	.LCFI32:
 1232               		.cfi_def_cfa_offset 3
 1233               		.cfi_offset 28, -2
 1234 06fe DF93      		push r29
 1235               	.LCFI33:
 1236               		.cfi_def_cfa_offset 4
 1237               		.cfi_offset 29, -3
 1238 0700 CDB7      		in r28,__SP_L__
 1239 0702 DEB7      		in r29,__SP_H__
 1240               	.LCFI34:
 1241               		.cfi_def_cfa_register 28
 1242 0704 6D97      		sbiw r28,29
 1243               	.LCFI35:
 1244               		.cfi_def_cfa_offset 33
 1245 0706 0FB6      		in __tmp_reg__,__SREG__
 1246 0708 F894      		cli
 1247 070a DEBF      		out __SP_H__,r29
 1248 070c 0FBE      		out __SREG__,__tmp_reg__
 1249 070e CDBF      		out __SP_L__,r28
 1250               	/* prologue: function */
 1251               	/* frame size = 29 */
 1252               	/* stack size = 31 */
 1253               	.L__stack_usage = 31
 1254 0710 9C8F      		std Y+28,r25
 1255 0712 8B8F      		std Y+27,r24
 1256 0714 6D8F      		std Y+29,r22
 162:lp_solve_5.5/lp_presolve.c ****   int             ik, ie, ix, j, k, *colnrDep;
 163:lp_solve_5.5/lp_presolve.c ****   REAL             hold, *value, *solution, *slacks;
 164:lp_solve_5.5/lp_presolve.c ****   presolveundorec *psdata = lp->presolve_undo;
 1257               		.loc 2 164 0
 1258 0716 8B8D      		ldd r24,Y+27
 1259 0718 9C8D      		ldd r25,Y+28
 1260 071a 8A59      		subi r24,-102
 1261 071c 9C4F      		sbci r25,-4
 1262 071e FC01      		movw r30,r24
 1263 0720 8081      		ld r24,Z
 1264 0722 9181      		ldd r25,Z+1
 1265 0724 9C8B      		std Y+20,r25
 1266 0726 8B8B      		std Y+19,r24
 165:lp_solve_5.5/lp_presolve.c ****   MATrec          *mat = NULL;
 1267               		.loc 2 165 0
 1268 0728 1A8A      		std Y+18,__zero_reg__
 1269 072a 198A      		std Y+17,__zero_reg__
 166:lp_solve_5.5/lp_presolve.c **** 
 167:lp_solve_5.5/lp_presolve.c ****   /* Point to and initialize undo structure at first call */
 168:lp_solve_5.5/lp_presolve.c ****   if(isprimal) {
 1270               		.loc 2 168 0
 1271 072c 8D8D      		ldd r24,Y+29
 1272 072e 8823      		tst r24
 1273 0730 01F0      		breq .L47
 169:lp_solve_5.5/lp_presolve.c ****     if(psdata->primalundo != NULL)
 1274               		.loc 2 169 0
 1275 0732 8B89      		ldd r24,Y+19
 1276 0734 9C89      		ldd r25,Y+20
 1277 0736 FC01      		movw r30,r24
 1278 0738 8289      		ldd r24,Z+18
 1279 073a 9389      		ldd r25,Z+19
 1280 073c 892B      		or r24,r25
 1281 073e 01F0      		breq .L48
 170:lp_solve_5.5/lp_presolve.c ****       mat = psdata->primalundo->tracker;
 1282               		.loc 2 170 0
 1283 0740 8B89      		ldd r24,Y+19
 1284 0742 9C89      		ldd r25,Y+20
 1285 0744 FC01      		movw r30,r24
 1286 0746 8289      		ldd r24,Z+18
 1287 0748 9389      		ldd r25,Z+19
 1288 074a FC01      		movw r30,r24
 1289 074c 8481      		ldd r24,Z+4
 1290 074e 9581      		ldd r25,Z+5
 1291 0750 9A8B      		std Y+18,r25
 1292 0752 898B      		std Y+17,r24
 1293               	.L48:
 171:lp_solve_5.5/lp_presolve.c ****     solution = lp->full_solution + lp->presolve_undo->orig_rows;
 1294               		.loc 2 171 0
 1295 0754 8B8D      		ldd r24,Y+27
 1296 0756 9C8D      		ldd r25,Y+28
 1297 0758 8A5E      		subi r24,-22
 1298 075a 9D4F      		sbci r25,-3
 1299 075c FC01      		movw r30,r24
 1300 075e 2081      		ld r18,Z
 1301 0760 3181      		ldd r19,Z+1
 1302 0762 8B8D      		ldd r24,Y+27
 1303 0764 9C8D      		ldd r25,Y+28
 1304 0766 8A59      		subi r24,-102
 1305 0768 9C4F      		sbci r25,-4
 1306 076a FC01      		movw r30,r24
 1307 076c 8081      		ld r24,Z
 1308 076e 9181      		ldd r25,Z+1
 1309 0770 FC01      		movw r30,r24
 1310 0772 8281      		ldd r24,Z+2
 1311 0774 9381      		ldd r25,Z+3
 1312 0776 880F      		lsl r24
 1313 0778 991F      		rol r25
 1314 077a 880F      		lsl r24
 1315 077c 991F      		rol r25
 1316 077e 820F      		add r24,r18
 1317 0780 931F      		adc r25,r19
 1318 0782 9E87      		std Y+14,r25
 1319 0784 8D87      		std Y+13,r24
 172:lp_solve_5.5/lp_presolve.c ****     slacks   = lp->full_solution;
 1320               		.loc 2 172 0
 1321 0786 8B8D      		ldd r24,Y+27
 1322 0788 9C8D      		ldd r25,Y+28
 1323 078a 8A5E      		subi r24,-22
 1324 078c 9D4F      		sbci r25,-3
 1325 078e FC01      		movw r30,r24
 1326 0790 8081      		ld r24,Z
 1327 0792 9181      		ldd r25,Z+1
 1328 0794 988B      		std Y+16,r25
 1329 0796 8F87      		std Y+15,r24
 1330 0798 00C0      		rjmp .L49
 1331               	.L47:
 173:lp_solve_5.5/lp_presolve.c ****   }
 174:lp_solve_5.5/lp_presolve.c ****   else {
 175:lp_solve_5.5/lp_presolve.c ****     if(psdata->dualundo != NULL)
 1332               		.loc 2 175 0
 1333 079a 8B89      		ldd r24,Y+19
 1334 079c 9C89      		ldd r25,Y+20
 1335 079e FC01      		movw r30,r24
 1336 07a0 8489      		ldd r24,Z+20
 1337 07a2 9589      		ldd r25,Z+21
 1338 07a4 892B      		or r24,r25
 1339 07a6 01F0      		breq .L50
 176:lp_solve_5.5/lp_presolve.c ****       mat = psdata->dualundo->tracker;
 1340               		.loc 2 176 0
 1341 07a8 8B89      		ldd r24,Y+19
 1342 07aa 9C89      		ldd r25,Y+20
 1343 07ac FC01      		movw r30,r24
 1344 07ae 8489      		ldd r24,Z+20
 1345 07b0 9589      		ldd r25,Z+21
 1346 07b2 FC01      		movw r30,r24
 1347 07b4 8481      		ldd r24,Z+4
 1348 07b6 9581      		ldd r25,Z+5
 1349 07b8 9A8B      		std Y+18,r25
 1350 07ba 898B      		std Y+17,r24
 1351               	.L50:
 177:lp_solve_5.5/lp_presolve.c ****     solution = lp->full_duals;
 1352               		.loc 2 177 0
 1353 07bc 8B8D      		ldd r24,Y+27
 1354 07be 9C8D      		ldd r25,Y+28
 1355 07c0 805E      		subi r24,-32
 1356 07c2 9D4F      		sbci r25,-3
 1357 07c4 FC01      		movw r30,r24
 1358 07c6 8081      		ld r24,Z
 1359 07c8 9181      		ldd r25,Z+1
 1360 07ca 9E87      		std Y+14,r25
 1361 07cc 8D87      		std Y+13,r24
 178:lp_solve_5.5/lp_presolve.c ****     slacks   = lp->full_duals + lp->presolve_undo->orig_rows;
 1362               		.loc 2 178 0
 1363 07ce 8B8D      		ldd r24,Y+27
 1364 07d0 9C8D      		ldd r25,Y+28
 1365 07d2 805E      		subi r24,-32
 1366 07d4 9D4F      		sbci r25,-3
 1367 07d6 FC01      		movw r30,r24
 1368 07d8 2081      		ld r18,Z
 1369 07da 3181      		ldd r19,Z+1
 1370 07dc 8B8D      		ldd r24,Y+27
 1371 07de 9C8D      		ldd r25,Y+28
 1372 07e0 8A59      		subi r24,-102
 1373 07e2 9C4F      		sbci r25,-4
 1374 07e4 FC01      		movw r30,r24
 1375 07e6 8081      		ld r24,Z
 1376 07e8 9181      		ldd r25,Z+1
 1377 07ea FC01      		movw r30,r24
 1378 07ec 8281      		ldd r24,Z+2
 1379 07ee 9381      		ldd r25,Z+3
 1380 07f0 880F      		lsl r24
 1381 07f2 991F      		rol r25
 1382 07f4 880F      		lsl r24
 1383 07f6 991F      		rol r25
 1384 07f8 820F      		add r24,r18
 1385 07fa 931F      		adc r25,r19
 1386 07fc 988B      		std Y+16,r25
 1387 07fe 8F87      		std Y+15,r24
 1388               	.L49:
 179:lp_solve_5.5/lp_presolve.c ****   }
 180:lp_solve_5.5/lp_presolve.c ****   if(mat == NULL)
 1389               		.loc 2 180 0
 1390 0800 8989      		ldd r24,Y+17
 1391 0802 9A89      		ldd r25,Y+18
 1392 0804 892B      		or r24,r25
 1393 0806 01F4      		brne .L51
 181:lp_solve_5.5/lp_presolve.c ****     return( FALSE );
 1394               		.loc 2 181 0
 1395 0808 80E0      		ldi r24,0
 1396 080a 00C0      		rjmp .L52
 1397               	.L51:
 182:lp_solve_5.5/lp_presolve.c **** 
 183:lp_solve_5.5/lp_presolve.c ****   /* Loop backward over the undo chain */
 184:lp_solve_5.5/lp_presolve.c ****   for(j = mat->col_tag[0]; j > 0; j--) {
 1398               		.loc 2 184 0
 1399 080c 8989      		ldd r24,Y+17
 1400 080e 9A89      		ldd r25,Y+18
 1401 0810 FC01      		movw r30,r24
 1402 0812 8489      		ldd r24,Z+20
 1403 0814 9589      		ldd r25,Z+21
 1404 0816 FC01      		movw r30,r24
 1405 0818 8081      		ld r24,Z
 1406 081a 9181      		ldd r25,Z+1
 1407 081c 9C83      		std Y+4,r25
 1408 081e 8B83      		std Y+3,r24
 1409 0820 00C0      		rjmp .L53
 1410               	.L62:
 185:lp_solve_5.5/lp_presolve.c ****     ix = mat->col_tag[j];
 1411               		.loc 2 185 0
 1412 0822 8989      		ldd r24,Y+17
 1413 0824 9A89      		ldd r25,Y+18
 1414 0826 FC01      		movw r30,r24
 1415 0828 2489      		ldd r18,Z+20
 1416 082a 3589      		ldd r19,Z+21
 1417 082c 8B81      		ldd r24,Y+3
 1418 082e 9C81      		ldd r25,Y+4
 1419 0830 880F      		lsl r24
 1420 0832 991F      		rol r25
 1421 0834 820F      		add r24,r18
 1422 0836 931F      		adc r25,r19
 1423 0838 FC01      		movw r30,r24
 1424 083a 8081      		ld r24,Z
 1425 083c 9181      		ldd r25,Z+1
 1426 083e 9E8B      		std Y+22,r25
 1427 0840 8D8B      		std Y+21,r24
 186:lp_solve_5.5/lp_presolve.c ****     ik = mat->col_end[j-1];
 1428               		.loc 2 186 0
 1429 0842 8989      		ldd r24,Y+17
 1430 0844 9A89      		ldd r25,Y+18
 1431 0846 FC01      		movw r30,r24
 1432 0848 2289      		ldd r18,Z+18
 1433 084a 3389      		ldd r19,Z+19
 1434 084c 8B81      		ldd r24,Y+3
 1435 084e 9C81      		ldd r25,Y+4
 1436 0850 8150      		subi r24,1
 1437 0852 9048      		sbci r25,-128
 1438 0854 880F      		lsl r24
 1439 0856 991F      		rol r25
 1440 0858 820F      		add r24,r18
 1441 085a 931F      		adc r25,r19
 1442 085c FC01      		movw r30,r24
 1443 085e 8081      		ld r24,Z
 1444 0860 9181      		ldd r25,Z+1
 1445 0862 9A83      		std Y+2,r25
 1446 0864 8983      		std Y+1,r24
 187:lp_solve_5.5/lp_presolve.c ****     ie = mat->col_end[j];
 1447               		.loc 2 187 0
 1448 0866 8989      		ldd r24,Y+17
 1449 0868 9A89      		ldd r25,Y+18
 1450 086a FC01      		movw r30,r24
 1451 086c 2289      		ldd r18,Z+18
 1452 086e 3389      		ldd r19,Z+19
 1453 0870 8B81      		ldd r24,Y+3
 1454 0872 9C81      		ldd r25,Y+4
 1455 0874 880F      		lsl r24
 1456 0876 991F      		rol r25
 1457 0878 820F      		add r24,r18
 1458 087a 931F      		adc r25,r19
 1459 087c FC01      		movw r30,r24
 1460 087e 8081      		ld r24,Z
 1461 0880 9181      		ldd r25,Z+1
 1462 0882 988F      		std Y+24,r25
 1463 0884 8F8B      		std Y+23,r24
 188:lp_solve_5.5/lp_presolve.c ****     colnrDep = &COL_MAT_ROWNR(ik);
 1464               		.loc 2 188 0
 1465 0886 8989      		ldd r24,Y+17
 1466 0888 9A89      		ldd r25,Y+18
 1467 088a FC01      		movw r30,r24
 1468 088c 2685      		ldd r18,Z+14
 1469 088e 3785      		ldd r19,Z+15
 1470 0890 8981      		ldd r24,Y+1
 1471 0892 9A81      		ldd r25,Y+2
 1472 0894 880F      		lsl r24
 1473 0896 991F      		rol r25
 1474 0898 820F      		add r24,r18
 1475 089a 931F      		adc r25,r19
 1476 089c 9E83      		std Y+6,r25
 1477 089e 8D83      		std Y+5,r24
 189:lp_solve_5.5/lp_presolve.c ****     value    = &COL_MAT_VALUE(ik);
 1478               		.loc 2 189 0
 1479 08a0 8989      		ldd r24,Y+17
 1480 08a2 9A89      		ldd r25,Y+18
 1481 08a4 FC01      		movw r30,r24
 1482 08a6 2089      		ldd r18,Z+16
 1483 08a8 3189      		ldd r19,Z+17
 1484 08aa 8981      		ldd r24,Y+1
 1485 08ac 9A81      		ldd r25,Y+2
 1486 08ae 880F      		lsl r24
 1487 08b0 991F      		rol r25
 1488 08b2 880F      		lsl r24
 1489 08b4 991F      		rol r25
 1490 08b6 820F      		add r24,r18
 1491 08b8 931F      		adc r25,r19
 1492 08ba 9C87      		std Y+12,r25
 1493 08bc 8B87      		std Y+11,r24
 190:lp_solve_5.5/lp_presolve.c ****     hold = 0;
 1494               		.loc 2 190 0
 1495 08be 1F82      		std Y+7,__zero_reg__
 1496 08c0 1886      		std Y+8,__zero_reg__
 1497 08c2 1986      		std Y+9,__zero_reg__
 1498 08c4 1A86      		std Y+10,__zero_reg__
 191:lp_solve_5.5/lp_presolve.c ****     k = 0;
 1499               		.loc 2 191 0
 1500 08c6 1A8E      		std Y+26,__zero_reg__
 1501 08c8 198E      		std Y+25,__zero_reg__
 192:lp_solve_5.5/lp_presolve.c ****     for(; ik < ie; ik++, colnrDep += matRowColStep, value += matValueStep) {
 1502               		.loc 2 192 0
 1503 08ca 00C0      		rjmp .L54
 1504               	.L59:
 193:lp_solve_5.5/lp_presolve.c **** 
 194:lp_solve_5.5/lp_presolve.c ****       /* Constant term */
 195:lp_solve_5.5/lp_presolve.c ****       if(*colnrDep == 0)
 1505               		.loc 2 195 0
 1506 08cc 8D81      		ldd r24,Y+5
 1507 08ce 9E81      		ldd r25,Y+6
 1508 08d0 FC01      		movw r30,r24
 1509 08d2 8081      		ld r24,Z
 1510 08d4 9181      		ldd r25,Z+1
 1511 08d6 892B      		or r24,r25
 1512 08d8 01F4      		brne .L55
 196:lp_solve_5.5/lp_presolve.c ****         hold += *value;
 1513               		.loc 2 196 0
 1514 08da 8B85      		ldd r24,Y+11
 1515 08dc 9C85      		ldd r25,Y+12
 1516 08de FC01      		movw r30,r24
 1517 08e0 8081      		ld r24,Z
 1518 08e2 9181      		ldd r25,Z+1
 1519 08e4 A281      		ldd r26,Z+2
 1520 08e6 B381      		ldd r27,Z+3
 1521 08e8 9C01      		movw r18,r24
 1522 08ea AD01      		movw r20,r26
 1523 08ec 6F81      		ldd r22,Y+7
 1524 08ee 7885      		ldd r23,Y+8
 1525 08f0 8985      		ldd r24,Y+9
 1526 08f2 9A85      		ldd r25,Y+10
 1527 08f4 0E94 0000 		call __addsf3
 1528 08f8 DC01      		movw r26,r24
 1529 08fa CB01      		movw r24,r22
 1530 08fc 8F83      		std Y+7,r24
 1531 08fe 9887      		std Y+8,r25
 1532 0900 A987      		std Y+9,r26
 1533 0902 BA87      		std Y+10,r27
 1534 0904 00C0      		rjmp .L56
 1535               	.L55:
 197:lp_solve_5.5/lp_presolve.c **** 
 198:lp_solve_5.5/lp_presolve.c ****       /* Special case with dependence on a slack variable */
 199:lp_solve_5.5/lp_presolve.c ****       else if(isprimal && (*colnrDep > lp->presolve_undo->orig_columns)) {
 1536               		.loc 2 199 0
 1537 0906 8D8D      		ldd r24,Y+29
 1538 0908 8823      		tst r24
 1539 090a 01F4      		brne .+2
 1540 090c 00C0      		rjmp .L57
 1541               		.loc 2 199 0 is_stmt 0 discriminator 1
 1542 090e 8D81      		ldd r24,Y+5
 1543 0910 9E81      		ldd r25,Y+6
 1544 0912 FC01      		movw r30,r24
 1545 0914 2081      		ld r18,Z
 1546 0916 3181      		ldd r19,Z+1
 1547 0918 8B8D      		ldd r24,Y+27
 1548 091a 9C8D      		ldd r25,Y+28
 1549 091c 8A59      		subi r24,-102
 1550 091e 9C4F      		sbci r25,-4
 1551 0920 FC01      		movw r30,r24
 1552 0922 8081      		ld r24,Z
 1553 0924 9181      		ldd r25,Z+1
 1554 0926 FC01      		movw r30,r24
 1555 0928 8481      		ldd r24,Z+4
 1556 092a 9581      		ldd r25,Z+5
 1557 092c 8217      		cp r24,r18
 1558 092e 9307      		cpc r25,r19
 1559 0930 04F0      		brlt .+2
 1560 0932 00C0      		rjmp .L57
 200:lp_solve_5.5/lp_presolve.c ****         k = (*colnrDep) - lp->presolve_undo->orig_columns;
 1561               		.loc 2 200 0 is_stmt 1
 1562 0934 8D81      		ldd r24,Y+5
 1563 0936 9E81      		ldd r25,Y+6
 1564 0938 FC01      		movw r30,r24
 1565 093a 2081      		ld r18,Z
 1566 093c 3181      		ldd r19,Z+1
 1567 093e 8B8D      		ldd r24,Y+27
 1568 0940 9C8D      		ldd r25,Y+28
 1569 0942 8A59      		subi r24,-102
 1570 0944 9C4F      		sbci r25,-4
 1571 0946 FC01      		movw r30,r24
 1572 0948 8081      		ld r24,Z
 1573 094a 9181      		ldd r25,Z+1
 1574 094c FC01      		movw r30,r24
 1575 094e 8481      		ldd r24,Z+4
 1576 0950 9581      		ldd r25,Z+5
 1577 0952 A901      		movw r20,r18
 1578 0954 481B      		sub r20,r24
 1579 0956 590B      		sbc r21,r25
 1580 0958 CA01      		movw r24,r20
 1581 095a 9A8F      		std Y+26,r25
 1582 095c 898F      		std Y+25,r24
 201:lp_solve_5.5/lp_presolve.c ****         hold -= (*value) * slacks[k];
 1583               		.loc 2 201 0
 1584 095e 8B85      		ldd r24,Y+11
 1585 0960 9C85      		ldd r25,Y+12
 1586 0962 FC01      		movw r30,r24
 1587 0964 8081      		ld r24,Z
 1588 0966 9181      		ldd r25,Z+1
 1589 0968 A281      		ldd r26,Z+2
 1590 096a B381      		ldd r27,Z+3
 1591 096c 298D      		ldd r18,Y+25
 1592 096e 3A8D      		ldd r19,Y+26
 1593 0970 220F      		lsl r18
 1594 0972 331F      		rol r19
 1595 0974 220F      		lsl r18
 1596 0976 331F      		rol r19
 1597 0978 4F85      		ldd r20,Y+15
 1598 097a 5889      		ldd r21,Y+16
 1599 097c 240F      		add r18,r20
 1600 097e 351F      		adc r19,r21
 1601 0980 F901      		movw r30,r18
 1602 0982 2081      		ld r18,Z
 1603 0984 3181      		ldd r19,Z+1
 1604 0986 4281      		ldd r20,Z+2
 1605 0988 5381      		ldd r21,Z+3
 1606 098a BC01      		movw r22,r24
 1607 098c CD01      		movw r24,r26
 1608 098e 0E94 0000 		call __mulsf3
 1609 0992 DC01      		movw r26,r24
 1610 0994 CB01      		movw r24,r22
 1611 0996 9C01      		movw r18,r24
 1612 0998 AD01      		movw r20,r26
 1613 099a 6F81      		ldd r22,Y+7
 1614 099c 7885      		ldd r23,Y+8
 1615 099e 8985      		ldd r24,Y+9
 1616 09a0 9A85      		ldd r25,Y+10
 1617 09a2 0E94 0000 		call __subsf3
 1618 09a6 DC01      		movw r26,r24
 1619 09a8 CB01      		movw r24,r22
 1620 09aa 8F83      		std Y+7,r24
 1621 09ac 9887      		std Y+8,r25
 1622 09ae A987      		std Y+9,r26
 1623 09b0 BA87      		std Y+10,r27
 202:lp_solve_5.5/lp_presolve.c ****         slacks[k] = 0;
 1624               		.loc 2 202 0
 1625 09b2 898D      		ldd r24,Y+25
 1626 09b4 9A8D      		ldd r25,Y+26
 1627 09b6 880F      		lsl r24
 1628 09b8 991F      		rol r25
 1629 09ba 880F      		lsl r24
 1630 09bc 991F      		rol r25
 1631 09be 2F85      		ldd r18,Y+15
 1632 09c0 3889      		ldd r19,Y+16
 1633 09c2 820F      		add r24,r18
 1634 09c4 931F      		adc r25,r19
 1635 09c6 FC01      		movw r30,r24
 1636 09c8 1082      		st Z,__zero_reg__
 1637 09ca 1182      		std Z+1,__zero_reg__
 1638 09cc 1282      		std Z+2,__zero_reg__
 1639 09ce 1382      		std Z+3,__zero_reg__
 1640 09d0 00C0      		rjmp .L56
 1641               	.L57:
 203:lp_solve_5.5/lp_presolve.c ****       }
 204:lp_solve_5.5/lp_presolve.c ****       else if(!isprimal && (*colnrDep > lp->presolve_undo->orig_rows)) {
 1642               		.loc 2 204 0
 1643 09d2 8D8D      		ldd r24,Y+29
 1644 09d4 8823      		tst r24
 1645 09d6 01F0      		breq .+2
 1646 09d8 00C0      		rjmp .L58
 1647               		.loc 2 204 0 is_stmt 0 discriminator 1
 1648 09da 8D81      		ldd r24,Y+5
 1649 09dc 9E81      		ldd r25,Y+6
 1650 09de FC01      		movw r30,r24
 1651 09e0 2081      		ld r18,Z
 1652 09e2 3181      		ldd r19,Z+1
 1653 09e4 8B8D      		ldd r24,Y+27
 1654 09e6 9C8D      		ldd r25,Y+28
 1655 09e8 8A59      		subi r24,-102
 1656 09ea 9C4F      		sbci r25,-4
 1657 09ec FC01      		movw r30,r24
 1658 09ee 8081      		ld r24,Z
 1659 09f0 9181      		ldd r25,Z+1
 1660 09f2 FC01      		movw r30,r24
 1661 09f4 8281      		ldd r24,Z+2
 1662 09f6 9381      		ldd r25,Z+3
 1663 09f8 8217      		cp r24,r18
 1664 09fa 9307      		cpc r25,r19
 1665 09fc 04F0      		brlt .+2
 1666 09fe 00C0      		rjmp .L58
 205:lp_solve_5.5/lp_presolve.c ****         k = (*colnrDep) - lp->presolve_undo->orig_rows;
 1667               		.loc 2 205 0 is_stmt 1
 1668 0a00 8D81      		ldd r24,Y+5
 1669 0a02 9E81      		ldd r25,Y+6
 1670 0a04 FC01      		movw r30,r24
 1671 0a06 2081      		ld r18,Z
 1672 0a08 3181      		ldd r19,Z+1
 1673 0a0a 8B8D      		ldd r24,Y+27
 1674 0a0c 9C8D      		ldd r25,Y+28
 1675 0a0e 8A59      		subi r24,-102
 1676 0a10 9C4F      		sbci r25,-4
 1677 0a12 FC01      		movw r30,r24
 1678 0a14 8081      		ld r24,Z
 1679 0a16 9181      		ldd r25,Z+1
 1680 0a18 FC01      		movw r30,r24
 1681 0a1a 8281      		ldd r24,Z+2
 1682 0a1c 9381      		ldd r25,Z+3
 1683 0a1e A901      		movw r20,r18
 1684 0a20 481B      		sub r20,r24
 1685 0a22 590B      		sbc r21,r25
 1686 0a24 CA01      		movw r24,r20
 1687 0a26 9A8F      		std Y+26,r25
 1688 0a28 898F      		std Y+25,r24
 206:lp_solve_5.5/lp_presolve.c ****         hold -= (*value) * slacks[k];
 1689               		.loc 2 206 0
 1690 0a2a 8B85      		ldd r24,Y+11
 1691 0a2c 9C85      		ldd r25,Y+12
 1692 0a2e FC01      		movw r30,r24
 1693 0a30 8081      		ld r24,Z
 1694 0a32 9181      		ldd r25,Z+1
 1695 0a34 A281      		ldd r26,Z+2
 1696 0a36 B381      		ldd r27,Z+3
 1697 0a38 298D      		ldd r18,Y+25
 1698 0a3a 3A8D      		ldd r19,Y+26
 1699 0a3c 220F      		lsl r18
 1700 0a3e 331F      		rol r19
 1701 0a40 220F      		lsl r18
 1702 0a42 331F      		rol r19
 1703 0a44 4F85      		ldd r20,Y+15
 1704 0a46 5889      		ldd r21,Y+16
 1705 0a48 240F      		add r18,r20
 1706 0a4a 351F      		adc r19,r21
 1707 0a4c F901      		movw r30,r18
 1708 0a4e 2081      		ld r18,Z
 1709 0a50 3181      		ldd r19,Z+1
 1710 0a52 4281      		ldd r20,Z+2
 1711 0a54 5381      		ldd r21,Z+3
 1712 0a56 BC01      		movw r22,r24
 1713 0a58 CD01      		movw r24,r26
 1714 0a5a 0E94 0000 		call __mulsf3
 1715 0a5e DC01      		movw r26,r24
 1716 0a60 CB01      		movw r24,r22
 1717 0a62 9C01      		movw r18,r24
 1718 0a64 AD01      		movw r20,r26
 1719 0a66 6F81      		ldd r22,Y+7
 1720 0a68 7885      		ldd r23,Y+8
 1721 0a6a 8985      		ldd r24,Y+9
 1722 0a6c 9A85      		ldd r25,Y+10
 1723 0a6e 0E94 0000 		call __subsf3
 1724 0a72 DC01      		movw r26,r24
 1725 0a74 CB01      		movw r24,r22
 1726 0a76 8F83      		std Y+7,r24
 1727 0a78 9887      		std Y+8,r25
 1728 0a7a A987      		std Y+9,r26
 1729 0a7c BA87      		std Y+10,r27
 207:lp_solve_5.5/lp_presolve.c ****         slacks[k] = 0;
 1730               		.loc 2 207 0
 1731 0a7e 898D      		ldd r24,Y+25
 1732 0a80 9A8D      		ldd r25,Y+26
 1733 0a82 880F      		lsl r24
 1734 0a84 991F      		rol r25
 1735 0a86 880F      		lsl r24
 1736 0a88 991F      		rol r25
 1737 0a8a 2F85      		ldd r18,Y+15
 1738 0a8c 3889      		ldd r19,Y+16
 1739 0a8e 820F      		add r24,r18
 1740 0a90 931F      		adc r25,r19
 1741 0a92 FC01      		movw r30,r24
 1742 0a94 1082      		st Z,__zero_reg__
 1743 0a96 1182      		std Z+1,__zero_reg__
 1744 0a98 1282      		std Z+2,__zero_reg__
 1745 0a9a 1382      		std Z+3,__zero_reg__
 1746 0a9c 00C0      		rjmp .L56
 1747               	.L58:
 208:lp_solve_5.5/lp_presolve.c ****       }
 209:lp_solve_5.5/lp_presolve.c **** 
 210:lp_solve_5.5/lp_presolve.c ****       /* Dependence on other user variable */
 211:lp_solve_5.5/lp_presolve.c ****       else
 212:lp_solve_5.5/lp_presolve.c ****         hold -= (*value) * solution[*colnrDep];
 1748               		.loc 2 212 0
 1749 0a9e 8B85      		ldd r24,Y+11
 1750 0aa0 9C85      		ldd r25,Y+12
 1751 0aa2 FC01      		movw r30,r24
 1752 0aa4 8081      		ld r24,Z
 1753 0aa6 9181      		ldd r25,Z+1
 1754 0aa8 A281      		ldd r26,Z+2
 1755 0aaa B381      		ldd r27,Z+3
 1756 0aac 2D81      		ldd r18,Y+5
 1757 0aae 3E81      		ldd r19,Y+6
 1758 0ab0 F901      		movw r30,r18
 1759 0ab2 2081      		ld r18,Z
 1760 0ab4 3181      		ldd r19,Z+1
 1761 0ab6 220F      		lsl r18
 1762 0ab8 331F      		rol r19
 1763 0aba 220F      		lsl r18
 1764 0abc 331F      		rol r19
 1765 0abe 4D85      		ldd r20,Y+13
 1766 0ac0 5E85      		ldd r21,Y+14
 1767 0ac2 240F      		add r18,r20
 1768 0ac4 351F      		adc r19,r21
 1769 0ac6 F901      		movw r30,r18
 1770 0ac8 2081      		ld r18,Z
 1771 0aca 3181      		ldd r19,Z+1
 1772 0acc 4281      		ldd r20,Z+2
 1773 0ace 5381      		ldd r21,Z+3
 1774 0ad0 BC01      		movw r22,r24
 1775 0ad2 CD01      		movw r24,r26
 1776 0ad4 0E94 0000 		call __mulsf3
 1777 0ad8 DC01      		movw r26,r24
 1778 0ada CB01      		movw r24,r22
 1779 0adc 9C01      		movw r18,r24
 1780 0ade AD01      		movw r20,r26
 1781 0ae0 6F81      		ldd r22,Y+7
 1782 0ae2 7885      		ldd r23,Y+8
 1783 0ae4 8985      		ldd r24,Y+9
 1784 0ae6 9A85      		ldd r25,Y+10
 1785 0ae8 0E94 0000 		call __subsf3
 1786 0aec DC01      		movw r26,r24
 1787 0aee CB01      		movw r24,r22
 1788 0af0 8F83      		std Y+7,r24
 1789 0af2 9887      		std Y+8,r25
 1790 0af4 A987      		std Y+9,r26
 1791 0af6 BA87      		std Y+10,r27
 1792               	.L56:
 213:lp_solve_5.5/lp_presolve.c **** 
 214:lp_solve_5.5/lp_presolve.c ****       *value = 0;
 1793               		.loc 2 214 0
 1794 0af8 8B85      		ldd r24,Y+11
 1795 0afa 9C85      		ldd r25,Y+12
 1796 0afc FC01      		movw r30,r24
 1797 0afe 1082      		st Z,__zero_reg__
 1798 0b00 1182      		std Z+1,__zero_reg__
 1799 0b02 1282      		std Z+2,__zero_reg__
 1800 0b04 1382      		std Z+3,__zero_reg__
 192:lp_solve_5.5/lp_presolve.c **** 
 1801               		.loc 2 192 0
 1802 0b06 8981      		ldd r24,Y+1
 1803 0b08 9A81      		ldd r25,Y+2
 1804 0b0a 0196      		adiw r24,1
 1805 0b0c 9A83      		std Y+2,r25
 1806 0b0e 8983      		std Y+1,r24
 1807 0b10 8D81      		ldd r24,Y+5
 1808 0b12 9E81      		ldd r25,Y+6
 1809 0b14 0296      		adiw r24,2
 1810 0b16 9E83      		std Y+6,r25
 1811 0b18 8D83      		std Y+5,r24
 1812 0b1a 8B85      		ldd r24,Y+11
 1813 0b1c 9C85      		ldd r25,Y+12
 1814 0b1e 0496      		adiw r24,4
 1815 0b20 9C87      		std Y+12,r25
 1816 0b22 8B87      		std Y+11,r24
 1817               	.L54:
 192:lp_solve_5.5/lp_presolve.c **** 
 1818               		.loc 2 192 0 is_stmt 0 discriminator 1
 1819 0b24 2981      		ldd r18,Y+1
 1820 0b26 3A81      		ldd r19,Y+2
 1821 0b28 8F89      		ldd r24,Y+23
 1822 0b2a 988D      		ldd r25,Y+24
 1823 0b2c 2817      		cp r18,r24
 1824 0b2e 3907      		cpc r19,r25
 1825 0b30 04F4      		brge .+2
 1826 0b32 00C0      		rjmp .L59
 215:lp_solve_5.5/lp_presolve.c ****     }
 216:lp_solve_5.5/lp_presolve.c ****     if(fabs(hold) > lp->epsvalue)
 1827               		.loc 2 216 0 is_stmt 1
 1828 0b34 8F81      		ldd r24,Y+7
 1829 0b36 9885      		ldd r25,Y+8
 1830 0b38 A985      		ldd r26,Y+9
 1831 0b3a BA85      		ldd r27,Y+10
 1832 0b3c BF77      		andi r27,0x7f
 1833 0b3e 2B8D      		ldd r18,Y+27
 1834 0b40 3C8D      		ldd r19,Y+28
 1835 0b42 2A5E      		subi r18,-22
 1836 0b44 3C4F      		sbci r19,-4
 1837 0b46 F901      		movw r30,r18
 1838 0b48 2081      		ld r18,Z
 1839 0b4a 3181      		ldd r19,Z+1
 1840 0b4c 4281      		ldd r20,Z+2
 1841 0b4e 5381      		ldd r21,Z+3
 1842 0b50 BC01      		movw r22,r24
 1843 0b52 CD01      		movw r24,r26
 1844 0b54 0E94 0000 		call __gtsf2
 1845 0b58 1816      		cp __zero_reg__,r24
 1846 0b5a 04F4      		brge .L60
 217:lp_solve_5.5/lp_presolve.c ****       solution[ix] = hold;
 1847               		.loc 2 217 0
 1848 0b5c 8D89      		ldd r24,Y+21
 1849 0b5e 9E89      		ldd r25,Y+22
 1850 0b60 880F      		lsl r24
 1851 0b62 991F      		rol r25
 1852 0b64 880F      		lsl r24
 1853 0b66 991F      		rol r25
 1854 0b68 2D85      		ldd r18,Y+13
 1855 0b6a 3E85      		ldd r19,Y+14
 1856 0b6c 280F      		add r18,r24
 1857 0b6e 391F      		adc r19,r25
 1858 0b70 8F81      		ldd r24,Y+7
 1859 0b72 9885      		ldd r25,Y+8
 1860 0b74 A985      		ldd r26,Y+9
 1861 0b76 BA85      		ldd r27,Y+10
 1862 0b78 F901      		movw r30,r18
 1863 0b7a 8083      		st Z,r24
 1864 0b7c 9183      		std Z+1,r25
 1865 0b7e A283      		std Z+2,r26
 1866 0b80 B383      		std Z+3,r27
 1867               	.L60:
 184:lp_solve_5.5/lp_presolve.c ****     ix = mat->col_tag[j];
 1868               		.loc 2 184 0 discriminator 2
 1869 0b82 8B81      		ldd r24,Y+3
 1870 0b84 9C81      		ldd r25,Y+4
 1871 0b86 0197      		sbiw r24,1
 1872 0b88 9C83      		std Y+4,r25
 1873 0b8a 8B83      		std Y+3,r24
 1874               	.L53:
 184:lp_solve_5.5/lp_presolve.c ****     ix = mat->col_tag[j];
 1875               		.loc 2 184 0 is_stmt 0 discriminator 1
 1876 0b8c 8B81      		ldd r24,Y+3
 1877 0b8e 9C81      		ldd r25,Y+4
 1878 0b90 1816      		cp __zero_reg__,r24
 1879 0b92 1906      		cpc __zero_reg__,r25
 1880 0b94 04F4      		brge .+2
 1881 0b96 00C0      		rjmp .L62
 218:lp_solve_5.5/lp_presolve.c ****   }
 219:lp_solve_5.5/lp_presolve.c **** 
 220:lp_solve_5.5/lp_presolve.c ****   return( TRUE );
 1882               		.loc 2 220 0 is_stmt 1
 1883 0b98 81E0      		ldi r24,lo8(1)
 1884               	.L52:
 1885               	/* epilogue start */
 221:lp_solve_5.5/lp_presolve.c **** }
 1886               		.loc 2 221 0
 1887 0b9a 6D96      		adiw r28,29
 1888 0b9c 0FB6      		in __tmp_reg__,__SREG__
 1889 0b9e F894      		cli
 1890 0ba0 DEBF      		out __SP_H__,r29
 1891 0ba2 0FBE      		out __SREG__,__tmp_reg__
 1892 0ba4 CDBF      		out __SP_L__,r28
 1893 0ba6 DF91      		pop r29
 1894 0ba8 CF91      		pop r28
 1895 0baa 0895      		ret
 1896               		.cfi_endproc
 1897               	.LFE15:
 1899               	.global	presolve_freeUndo
 1901               	presolve_freeUndo:
 1902               	.LFB16:
 222:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_freeUndo(lprec *lp)
 223:lp_solve_5.5/lp_presolve.c **** {
 1903               		.loc 2 223 0
 1904               		.cfi_startproc
 1905 0bac CF93      		push r28
 1906               	.LCFI36:
 1907               		.cfi_def_cfa_offset 3
 1908               		.cfi_offset 28, -2
 1909 0bae DF93      		push r29
 1910               	.LCFI37:
 1911               		.cfi_def_cfa_offset 4
 1912               		.cfi_offset 29, -3
 1913 0bb0 00D0      		rcall .
 1914 0bb2 00D0      		rcall .
 1915               	.LCFI38:
 1916               		.cfi_def_cfa_offset 8
 1917 0bb4 CDB7      		in r28,__SP_L__
 1918 0bb6 DEB7      		in r29,__SP_H__
 1919               	.LCFI39:
 1920               		.cfi_def_cfa_register 28
 1921               	/* prologue: function */
 1922               	/* frame size = 4 */
 1923               	/* stack size = 6 */
 1924               	.L__stack_usage = 6
 1925 0bb8 9C83      		std Y+4,r25
 1926 0bba 8B83      		std Y+3,r24
 224:lp_solve_5.5/lp_presolve.c ****   presolveundorec *psundo = lp->presolve_undo;
 1927               		.loc 2 224 0
 1928 0bbc 8B81      		ldd r24,Y+3
 1929 0bbe 9C81      		ldd r25,Y+4
 1930 0bc0 8A59      		subi r24,-102
 1931 0bc2 9C4F      		sbci r25,-4
 1932 0bc4 FC01      		movw r30,r24
 1933 0bc6 8081      		ld r24,Z
 1934 0bc8 9181      		ldd r25,Z+1
 1935 0bca 9A83      		std Y+2,r25
 1936 0bcc 8983      		std Y+1,r24
 225:lp_solve_5.5/lp_presolve.c **** 
 226:lp_solve_5.5/lp_presolve.c ****   if(psundo == NULL)
 1937               		.loc 2 226 0
 1938 0bce 8981      		ldd r24,Y+1
 1939 0bd0 9A81      		ldd r25,Y+2
 1940 0bd2 892B      		or r24,r25
 1941 0bd4 01F4      		brne .L65
 227:lp_solve_5.5/lp_presolve.c ****     return( FALSE );
 1942               		.loc 2 227 0
 1943 0bd6 80E0      		ldi r24,0
 1944 0bd8 00C0      		rjmp .L66
 1945               	.L65:
 228:lp_solve_5.5/lp_presolve.c ****   FREE(psundo->orig_to_var);
 1946               		.loc 2 228 0
 1947 0bda 8981      		ldd r24,Y+1
 1948 0bdc 9A81      		ldd r25,Y+2
 1949 0bde FC01      		movw r30,r24
 1950 0be0 8285      		ldd r24,Z+10
 1951 0be2 9385      		ldd r25,Z+11
 1952 0be4 892B      		or r24,r25
 1953 0be6 01F0      		breq .L67
 1954               		.loc 2 228 0 is_stmt 0 discriminator 1
 1955 0be8 8981      		ldd r24,Y+1
 1956 0bea 9A81      		ldd r25,Y+2
 1957 0bec FC01      		movw r30,r24
 1958 0bee 8285      		ldd r24,Z+10
 1959 0bf0 9385      		ldd r25,Z+11
 1960 0bf2 0E94 0000 		call free
 1961 0bf6 8981      		ldd r24,Y+1
 1962 0bf8 9A81      		ldd r25,Y+2
 1963 0bfa FC01      		movw r30,r24
 1964 0bfc 1386      		std Z+11,__zero_reg__
 1965 0bfe 1286      		std Z+10,__zero_reg__
 1966               	.L67:
 229:lp_solve_5.5/lp_presolve.c ****   FREE(psundo->var_to_orig);
 1967               		.loc 2 229 0 is_stmt 1
 1968 0c00 8981      		ldd r24,Y+1
 1969 0c02 9A81      		ldd r25,Y+2
 1970 0c04 FC01      		movw r30,r24
 1971 0c06 8085      		ldd r24,Z+8
 1972 0c08 9185      		ldd r25,Z+9
 1973 0c0a 892B      		or r24,r25
 1974 0c0c 01F0      		breq .L68
 1975               		.loc 2 229 0 is_stmt 0 discriminator 1
 1976 0c0e 8981      		ldd r24,Y+1
 1977 0c10 9A81      		ldd r25,Y+2
 1978 0c12 FC01      		movw r30,r24
 1979 0c14 8085      		ldd r24,Z+8
 1980 0c16 9185      		ldd r25,Z+9
 1981 0c18 0E94 0000 		call free
 1982 0c1c 8981      		ldd r24,Y+1
 1983 0c1e 9A81      		ldd r25,Y+2
 1984 0c20 FC01      		movw r30,r24
 1985 0c22 1186      		std Z+9,__zero_reg__
 1986 0c24 1086      		std Z+8,__zero_reg__
 1987               	.L68:
 230:lp_solve_5.5/lp_presolve.c ****   FREE(psundo->fixed_rhs);
 1988               		.loc 2 230 0 is_stmt 1
 1989 0c26 8981      		ldd r24,Y+1
 1990 0c28 9A81      		ldd r25,Y+2
 1991 0c2a FC01      		movw r30,r24
 1992 0c2c 8485      		ldd r24,Z+12
 1993 0c2e 9585      		ldd r25,Z+13
 1994 0c30 892B      		or r24,r25
 1995 0c32 01F0      		breq .L69
 1996               		.loc 2 230 0 is_stmt 0 discriminator 1
 1997 0c34 8981      		ldd r24,Y+1
 1998 0c36 9A81      		ldd r25,Y+2
 1999 0c38 FC01      		movw r30,r24
 2000 0c3a 8485      		ldd r24,Z+12
 2001 0c3c 9585      		ldd r25,Z+13
 2002 0c3e 0E94 0000 		call free
 2003 0c42 8981      		ldd r24,Y+1
 2004 0c44 9A81      		ldd r25,Y+2
 2005 0c46 FC01      		movw r30,r24
 2006 0c48 1586      		std Z+13,__zero_reg__
 2007 0c4a 1486      		std Z+12,__zero_reg__
 2008               	.L69:
 231:lp_solve_5.5/lp_presolve.c ****   FREE(psundo->fixed_obj);
 2009               		.loc 2 231 0 is_stmt 1
 2010 0c4c 8981      		ldd r24,Y+1
 2011 0c4e 9A81      		ldd r25,Y+2
 2012 0c50 FC01      		movw r30,r24
 2013 0c52 8685      		ldd r24,Z+14
 2014 0c54 9785      		ldd r25,Z+15
 2015 0c56 892B      		or r24,r25
 2016 0c58 01F0      		breq .L70
 2017               		.loc 2 231 0 is_stmt 0 discriminator 1
 2018 0c5a 8981      		ldd r24,Y+1
 2019 0c5c 9A81      		ldd r25,Y+2
 2020 0c5e FC01      		movw r30,r24
 2021 0c60 8685      		ldd r24,Z+14
 2022 0c62 9785      		ldd r25,Z+15
 2023 0c64 0E94 0000 		call free
 2024 0c68 8981      		ldd r24,Y+1
 2025 0c6a 9A81      		ldd r25,Y+2
 2026 0c6c FC01      		movw r30,r24
 2027 0c6e 1786      		std Z+15,__zero_reg__
 2028 0c70 1686      		std Z+14,__zero_reg__
 2029               	.L70:
 232:lp_solve_5.5/lp_presolve.c ****   if(psundo->deletedA != NULL)
 2030               		.loc 2 232 0 is_stmt 1
 2031 0c72 8981      		ldd r24,Y+1
 2032 0c74 9A81      		ldd r25,Y+2
 2033 0c76 FC01      		movw r30,r24
 2034 0c78 8089      		ldd r24,Z+16
 2035 0c7a 9189      		ldd r25,Z+17
 2036 0c7c 892B      		or r24,r25
 2037 0c7e 01F0      		breq .L71
 233:lp_solve_5.5/lp_presolve.c ****     freeUndoLadder(&(psundo->deletedA));
 2038               		.loc 2 233 0
 2039 0c80 8981      		ldd r24,Y+1
 2040 0c82 9A81      		ldd r25,Y+2
 2041 0c84 4096      		adiw r24,16
 2042 0c86 0E94 0000 		call freeUndoLadder
 2043               	.L71:
 234:lp_solve_5.5/lp_presolve.c ****   if(psundo->primalundo != NULL)
 2044               		.loc 2 234 0
 2045 0c8a 8981      		ldd r24,Y+1
 2046 0c8c 9A81      		ldd r25,Y+2
 2047 0c8e FC01      		movw r30,r24
 2048 0c90 8289      		ldd r24,Z+18
 2049 0c92 9389      		ldd r25,Z+19
 2050 0c94 892B      		or r24,r25
 2051 0c96 01F0      		breq .L72
 235:lp_solve_5.5/lp_presolve.c ****     freeUndoLadder(&(psundo->primalundo));
 2052               		.loc 2 235 0
 2053 0c98 8981      		ldd r24,Y+1
 2054 0c9a 9A81      		ldd r25,Y+2
 2055 0c9c 4296      		adiw r24,18
 2056 0c9e 0E94 0000 		call freeUndoLadder
 2057               	.L72:
 236:lp_solve_5.5/lp_presolve.c ****   if(psundo->dualundo != NULL)
 2058               		.loc 2 236 0
 2059 0ca2 8981      		ldd r24,Y+1
 2060 0ca4 9A81      		ldd r25,Y+2
 2061 0ca6 FC01      		movw r30,r24
 2062 0ca8 8489      		ldd r24,Z+20
 2063 0caa 9589      		ldd r25,Z+21
 2064 0cac 892B      		or r24,r25
 2065 0cae 01F0      		breq .L73
 237:lp_solve_5.5/lp_presolve.c ****     freeUndoLadder(&(psundo->dualundo));
 2066               		.loc 2 237 0
 2067 0cb0 8981      		ldd r24,Y+1
 2068 0cb2 9A81      		ldd r25,Y+2
 2069 0cb4 4496      		adiw r24,20
 2070 0cb6 0E94 0000 		call freeUndoLadder
 2071               	.L73:
 238:lp_solve_5.5/lp_presolve.c ****   FREE(lp->presolve_undo);
 2072               		.loc 2 238 0
 2073 0cba 8B81      		ldd r24,Y+3
 2074 0cbc 9C81      		ldd r25,Y+4
 2075 0cbe 8A59      		subi r24,-102
 2076 0cc0 9C4F      		sbci r25,-4
 2077 0cc2 FC01      		movw r30,r24
 2078 0cc4 8081      		ld r24,Z
 2079 0cc6 9181      		ldd r25,Z+1
 2080 0cc8 892B      		or r24,r25
 2081 0cca 01F0      		breq .L74
 2082               		.loc 2 238 0 is_stmt 0 discriminator 1
 2083 0ccc 8B81      		ldd r24,Y+3
 2084 0cce 9C81      		ldd r25,Y+4
 2085 0cd0 8A59      		subi r24,-102
 2086 0cd2 9C4F      		sbci r25,-4
 2087 0cd4 FC01      		movw r30,r24
 2088 0cd6 8081      		ld r24,Z
 2089 0cd8 9181      		ldd r25,Z+1
 2090 0cda 0E94 0000 		call free
 2091 0cde 8B81      		ldd r24,Y+3
 2092 0ce0 9C81      		ldd r25,Y+4
 2093 0ce2 8A59      		subi r24,-102
 2094 0ce4 9C4F      		sbci r25,-4
 2095 0ce6 FC01      		movw r30,r24
 2096 0ce8 1182      		std Z+1,__zero_reg__
 2097 0cea 1082      		st Z,__zero_reg__
 2098               	.L74:
 239:lp_solve_5.5/lp_presolve.c ****   return( TRUE );
 2099               		.loc 2 239 0 is_stmt 1
 2100 0cec 81E0      		ldi r24,lo8(1)
 2101               	.L66:
 2102               	/* epilogue start */
 240:lp_solve_5.5/lp_presolve.c **** }
 2103               		.loc 2 240 0
 2104 0cee 0F90      		pop __tmp_reg__
 2105 0cf0 0F90      		pop __tmp_reg__
 2106 0cf2 0F90      		pop __tmp_reg__
 2107 0cf4 0F90      		pop __tmp_reg__
 2108 0cf6 DF91      		pop r29
 2109 0cf8 CF91      		pop r28
 2110 0cfa 0895      		ret
 2111               		.cfi_endproc
 2112               	.LFE16:
 2114               	.global	__divsf3
 2115               	.global	presolve_storeDualUndo
 2117               	presolve_storeDualUndo:
 2118               	.LFB17:
 241:lp_solve_5.5/lp_presolve.c **** 
 242:lp_solve_5.5/lp_presolve.c **** STATIC void presolve_storeDualUndo(presolverec *psdata, int rownr, int colnr)
 243:lp_solve_5.5/lp_presolve.c **** {
 2119               		.loc 2 243 0
 2120               		.cfi_startproc
 2121 0cfc 6F92      		push r6
 2122               	.LCFI40:
 2123               		.cfi_def_cfa_offset 3
 2124               		.cfi_offset 6, -2
 2125 0cfe 7F92      		push r7
 2126               	.LCFI41:
 2127               		.cfi_def_cfa_offset 4
 2128               		.cfi_offset 7, -3
 2129 0d00 8F92      		push r8
 2130               	.LCFI42:
 2131               		.cfi_def_cfa_offset 5
 2132               		.cfi_offset 8, -4
 2133 0d02 9F92      		push r9
 2134               	.LCFI43:
 2135               		.cfi_def_cfa_offset 6
 2136               		.cfi_offset 9, -5
 2137 0d04 AF92      		push r10
 2138               	.LCFI44:
 2139               		.cfi_def_cfa_offset 7
 2140               		.cfi_offset 10, -6
 2141 0d06 BF92      		push r11
 2142               	.LCFI45:
 2143               		.cfi_def_cfa_offset 8
 2144               		.cfi_offset 11, -7
 2145 0d08 CF92      		push r12
 2146               	.LCFI46:
 2147               		.cfi_def_cfa_offset 9
 2148               		.cfi_offset 12, -8
 2149 0d0a DF92      		push r13
 2150               	.LCFI47:
 2151               		.cfi_def_cfa_offset 10
 2152               		.cfi_offset 13, -9
 2153 0d0c EF92      		push r14
 2154               	.LCFI48:
 2155               		.cfi_def_cfa_offset 11
 2156               		.cfi_offset 14, -10
 2157 0d0e FF92      		push r15
 2158               	.LCFI49:
 2159               		.cfi_def_cfa_offset 12
 2160               		.cfi_offset 15, -11
 2161 0d10 0F93      		push r16
 2162               	.LCFI50:
 2163               		.cfi_def_cfa_offset 13
 2164               		.cfi_offset 16, -12
 2165 0d12 1F93      		push r17
 2166               	.LCFI51:
 2167               		.cfi_def_cfa_offset 14
 2168               		.cfi_offset 17, -13
 2169 0d14 CF93      		push r28
 2170               	.LCFI52:
 2171               		.cfi_def_cfa_offset 15
 2172               		.cfi_offset 28, -14
 2173 0d16 DF93      		push r29
 2174               	.LCFI53:
 2175               		.cfi_def_cfa_offset 16
 2176               		.cfi_offset 29, -15
 2177 0d18 CDB7      		in r28,__SP_L__
 2178 0d1a DEB7      		in r29,__SP_H__
 2179               	.LCFI54:
 2180               		.cfi_def_cfa_register 28
 2181 0d1c 6597      		sbiw r28,21
 2182               	.LCFI55:
 2183               		.cfi_def_cfa_offset 37
 2184 0d1e 0FB6      		in __tmp_reg__,__SREG__
 2185 0d20 F894      		cli
 2186 0d22 DEBF      		out __SP_H__,r29
 2187 0d24 0FBE      		out __SREG__,__tmp_reg__
 2188 0d26 CDBF      		out __SP_L__,r28
 2189               	/* prologue: function */
 2190               	/* frame size = 21 */
 2191               	/* stack size = 35 */
 2192               	.L__stack_usage = 35
 2193 0d28 998B      		std Y+17,r25
 2194 0d2a 888B      		std Y+16,r24
 2195 0d2c 7B8B      		std Y+19,r23
 2196 0d2e 6A8B      		std Y+18,r22
 2197 0d30 5D8B      		std Y+21,r21
 2198 0d32 4C8B      		std Y+20,r20
 244:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 2199               		.loc 2 244 0
 2200 0d34 8889      		ldd r24,Y+16
 2201 0d36 9989      		ldd r25,Y+17
 2202 0d38 FC01      		movw r30,r24
 2203 0d3a 8289      		ldd r24,Z+18
 2204 0d3c 9389      		ldd r25,Z+19
 2205 0d3e 9D83      		std Y+5,r25
 2206 0d40 8C83      		std Y+4,r24
 245:lp_solve_5.5/lp_presolve.c ****   MYBOOL   firstdone = FALSE;
 2207               		.loc 2 245 0
 2208 0d42 1982      		std Y+1,__zero_reg__
 246:lp_solve_5.5/lp_presolve.c ****   int      ix, iix, item;
 247:lp_solve_5.5/lp_presolve.c ****   REAL     Aij = get_mat(lp, rownr, colnr);
 2209               		.loc 2 247 0
 2210 0d44 4C89      		ldd r20,Y+20
 2211 0d46 5D89      		ldd r21,Y+21
 2212 0d48 2A89      		ldd r18,Y+18
 2213 0d4a 3B89      		ldd r19,Y+19
 2214 0d4c 8C81      		ldd r24,Y+4
 2215 0d4e 9D81      		ldd r25,Y+5
 2216 0d50 B901      		movw r22,r18
 2217 0d52 0E94 0000 		call get_mat
 2218 0d56 DC01      		movw r26,r24
 2219 0d58 CB01      		movw r24,r22
 2220 0d5a 8E83      		std Y+6,r24
 2221 0d5c 9F83      		std Y+7,r25
 2222 0d5e A887      		std Y+8,r26
 2223 0d60 B987      		std Y+9,r27
 248:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 2224               		.loc 2 248 0
 2225 0d62 8C81      		ldd r24,Y+4
 2226 0d64 9D81      		ldd r25,Y+5
 2227 0d66 8A54      		subi r24,74
 2228 0d68 9D4F      		sbci r25,-3
 2229 0d6a FC01      		movw r30,r24
 2230 0d6c 8081      		ld r24,Z
 2231 0d6e 9181      		ldd r25,Z+1
 2232 0d70 9B87      		std Y+11,r25
 2233 0d72 8A87      		std Y+10,r24
 249:lp_solve_5.5/lp_presolve.c **** 
 250:lp_solve_5.5/lp_presolve.c ****   if(presolve_collength(psdata, colnr) == 0)
 2234               		.loc 2 250 0
 2235 0d74 2C89      		ldd r18,Y+20
 2236 0d76 3D89      		ldd r19,Y+21
 2237 0d78 8889      		ldd r24,Y+16
 2238 0d7a 9989      		ldd r25,Y+17
 2239 0d7c B901      		movw r22,r18
 2240 0d7e 0E94 0000 		call presolve_collength
 2241 0d82 892B      		or r24,r25
 2242 0d84 01F4      		brne .+2
 2243 0d86 00C0      		rjmp .L83
 251:lp_solve_5.5/lp_presolve.c ****     return;
 252:lp_solve_5.5/lp_presolve.c **** 
 253:lp_solve_5.5/lp_presolve.c ****   /* Add undo information for the dual of the deleted constraint */
 254:lp_solve_5.5/lp_presolve.c ****   item = 0;
 2244               		.loc 2 254 0
 2245 0d88 1F86      		std Y+15,__zero_reg__
 2246 0d8a 1E86      		std Y+14,__zero_reg__
 255:lp_solve_5.5/lp_presolve.c ****   for(ix = presolve_nextrow(psdata, colnr, &item); ix >= 0;
 2247               		.loc 2 255 0
 2248 0d8c AE01      		movw r20,r28
 2249 0d8e 425F      		subi r20,-14
 2250 0d90 5F4F      		sbci r21,-1
 2251 0d92 2C89      		ldd r18,Y+20
 2252 0d94 3D89      		ldd r19,Y+21
 2253 0d96 8889      		ldd r24,Y+16
 2254 0d98 9989      		ldd r25,Y+17
 2255 0d9a B901      		movw r22,r18
 2256 0d9c 0E94 0000 		call presolve_nextrow
 2257 0da0 9B83      		std Y+3,r25
 2258 0da2 8A83      		std Y+2,r24
 2259 0da4 00C0      		rjmp .L78
 2260               	.L82:
 256:lp_solve_5.5/lp_presolve.c ****       ix = presolve_nextrow(psdata, colnr, &item)) {
 257:lp_solve_5.5/lp_presolve.c ****     iix = COL_MAT_ROWNR(ix);
 2261               		.loc 2 257 0
 2262 0da6 8A85      		ldd r24,Y+10
 2263 0da8 9B85      		ldd r25,Y+11
 2264 0daa FC01      		movw r30,r24
 2265 0dac 2685      		ldd r18,Z+14
 2266 0dae 3785      		ldd r19,Z+15
 2267 0db0 8A81      		ldd r24,Y+2
 2268 0db2 9B81      		ldd r25,Y+3
 2269 0db4 880F      		lsl r24
 2270 0db6 991F      		rol r25
 2271 0db8 820F      		add r24,r18
 2272 0dba 931F      		adc r25,r19
 2273 0dbc FC01      		movw r30,r24
 2274 0dbe 8081      		ld r24,Z
 2275 0dc0 9181      		ldd r25,Z+1
 2276 0dc2 9D87      		std Y+13,r25
 2277 0dc4 8C87      		std Y+12,r24
 258:lp_solve_5.5/lp_presolve.c ****     if(iix == rownr)
 2278               		.loc 2 258 0
 2279 0dc6 2C85      		ldd r18,Y+12
 2280 0dc8 3D85      		ldd r19,Y+13
 2281 0dca 8A89      		ldd r24,Y+18
 2282 0dcc 9B89      		ldd r25,Y+19
 2283 0dce 2817      		cp r18,r24
 2284 0dd0 3907      		cpc r19,r25
 2285 0dd2 01F4      		brne .+2
 2286 0dd4 00C0      		rjmp .L84
 259:lp_solve_5.5/lp_presolve.c ****       continue;
 260:lp_solve_5.5/lp_presolve.c ****     if(!firstdone)
 2287               		.loc 2 260 0
 2288 0dd6 8981      		ldd r24,Y+1
 2289 0dd8 8823      		tst r24
 2290 0dda 01F4      		brne .L81
 261:lp_solve_5.5/lp_presolve.c ****       firstdone = addUndoPresolve(lp, FALSE, rownr, get_mat(lp, 0, colnr)/Aij,
 262:lp_solve_5.5/lp_presolve.c ****                                                     get_mat_byindex(lp, ix, FALSE, TRUE)/Aij, iix);
 2291               		.loc 2 262 0
 2292 0ddc 6A81      		ldd r22,Y+2
 2293 0dde 7B81      		ldd r23,Y+3
 2294 0de0 8C81      		ldd r24,Y+4
 2295 0de2 9D81      		ldd r25,Y+5
 2296 0de4 21E0      		ldi r18,lo8(1)
 2297 0de6 40E0      		ldi r20,0
 2298 0de8 0E94 0000 		call get_mat_byindex
 2299 0dec DC01      		movw r26,r24
 2300 0dee CB01      		movw r24,r22
 261:lp_solve_5.5/lp_presolve.c ****       firstdone = addUndoPresolve(lp, FALSE, rownr, get_mat(lp, 0, colnr)/Aij,
 2301               		.loc 2 261 0
 2302 0df0 2E81      		ldd r18,Y+6
 2303 0df2 3F81      		ldd r19,Y+7
 2304 0df4 4885      		ldd r20,Y+8
 2305 0df6 5985      		ldd r21,Y+9
 2306 0df8 BC01      		movw r22,r24
 2307 0dfa CD01      		movw r24,r26
 2308 0dfc 0E94 0000 		call __divsf3
 2309 0e00 DC01      		movw r26,r24
 2310 0e02 CB01      		movw r24,r22
 2311 0e04 6C01      		movw r12,r24
 2312 0e06 7D01      		movw r14,r26
 2313 0e08 2C89      		ldd r18,Y+20
 2314 0e0a 3D89      		ldd r19,Y+21
 2315 0e0c 8C81      		ldd r24,Y+4
 2316 0e0e 9D81      		ldd r25,Y+5
 2317 0e10 A901      		movw r20,r18
 2318 0e12 60E0      		ldi r22,0
 2319 0e14 70E0      		ldi r23,0
 2320 0e16 0E94 0000 		call get_mat
 2321 0e1a DC01      		movw r26,r24
 2322 0e1c CB01      		movw r24,r22
 2323 0e1e 2E81      		ldd r18,Y+6
 2324 0e20 3F81      		ldd r19,Y+7
 2325 0e22 4885      		ldd r20,Y+8
 2326 0e24 5985      		ldd r21,Y+9
 2327 0e26 BC01      		movw r22,r24
 2328 0e28 CD01      		movw r24,r26
 2329 0e2a 0E94 0000 		call __divsf3
 2330 0e2e DC01      		movw r26,r24
 2331 0e30 CB01      		movw r24,r22
 2332 0e32 3C01      		movw r6,r24
 2333 0e34 4D01      		movw r8,r26
 2334 0e36 2C85      		ldd r18,Y+12
 2335 0e38 3D85      		ldd r19,Y+13
 2336 0e3a 4A89      		ldd r20,Y+18
 2337 0e3c 5B89      		ldd r21,Y+19
 2338 0e3e 8C81      		ldd r24,Y+4
 2339 0e40 9D81      		ldd r25,Y+5
 2340 0e42 5901      		movw r10,r18
 2341 0e44 9401      		movw r18,r8
 2342 0e46 8301      		movw r16,r6
 2343 0e48 60E0      		ldi r22,0
 2344 0e4a 0E94 0000 		call addUndoPresolve
 2345 0e4e 8983      		std Y+1,r24
 2346 0e50 00C0      		rjmp .L80
 2347               	.L81:
 263:lp_solve_5.5/lp_presolve.c ****     else
 264:lp_solve_5.5/lp_presolve.c ****       appendUndoPresolve(lp, FALSE, get_mat_byindex(lp, ix, FALSE, TRUE)/Aij, iix);
 2348               		.loc 2 264 0
 2349 0e52 6A81      		ldd r22,Y+2
 2350 0e54 7B81      		ldd r23,Y+3
 2351 0e56 8C81      		ldd r24,Y+4
 2352 0e58 9D81      		ldd r25,Y+5
 2353 0e5a 21E0      		ldi r18,lo8(1)
 2354 0e5c 40E0      		ldi r20,0
 2355 0e5e 0E94 0000 		call get_mat_byindex
 2356 0e62 DC01      		movw r26,r24
 2357 0e64 CB01      		movw r24,r22
 2358 0e66 2E81      		ldd r18,Y+6
 2359 0e68 3F81      		ldd r19,Y+7
 2360 0e6a 4885      		ldd r20,Y+8
 2361 0e6c 5985      		ldd r21,Y+9
 2362 0e6e BC01      		movw r22,r24
 2363 0e70 CD01      		movw r24,r26
 2364 0e72 0E94 0000 		call __divsf3
 2365 0e76 DC01      		movw r26,r24
 2366 0e78 CB01      		movw r24,r22
 2367 0e7a AC01      		movw r20,r24
 2368 0e7c BD01      		movw r22,r26
 2369 0e7e 2C85      		ldd r18,Y+12
 2370 0e80 3D85      		ldd r19,Y+13
 2371 0e82 8C81      		ldd r24,Y+4
 2372 0e84 9D81      		ldd r25,Y+5
 2373 0e86 8901      		movw r16,r18
 2374 0e88 9A01      		movw r18,r20
 2375 0e8a AB01      		movw r20,r22
 2376 0e8c 60E0      		ldi r22,0
 2377 0e8e 0E94 0000 		call appendUndoPresolve
 2378 0e92 00C0      		rjmp .L80
 2379               	.L84:
 259:lp_solve_5.5/lp_presolve.c ****     if(!firstdone)
 2380               		.loc 2 259 0
 2381 0e94 0000      		nop
 2382               	.L80:
 256:lp_solve_5.5/lp_presolve.c ****     iix = COL_MAT_ROWNR(ix);
 2383               		.loc 2 256 0
 2384 0e96 AE01      		movw r20,r28
 2385 0e98 425F      		subi r20,-14
 2386 0e9a 5F4F      		sbci r21,-1
 2387 0e9c 2C89      		ldd r18,Y+20
 2388 0e9e 3D89      		ldd r19,Y+21
 2389 0ea0 8889      		ldd r24,Y+16
 2390 0ea2 9989      		ldd r25,Y+17
 2391 0ea4 B901      		movw r22,r18
 2392 0ea6 0E94 0000 		call presolve_nextrow
 2393 0eaa 9B83      		std Y+3,r25
 2394 0eac 8A83      		std Y+2,r24
 2395               	.L78:
 255:lp_solve_5.5/lp_presolve.c ****       ix = presolve_nextrow(psdata, colnr, &item)) {
 2396               		.loc 2 255 0 discriminator 1
 2397 0eae 8A81      		ldd r24,Y+2
 2398 0eb0 9B81      		ldd r25,Y+3
 2399 0eb2 9923      		tst r25
 2400 0eb4 04F0      		brlt .+2
 2401 0eb6 00C0      		rjmp .L82
 2402 0eb8 00C0      		rjmp .L75
 2403               	.L83:
 251:lp_solve_5.5/lp_presolve.c **** 
 2404               		.loc 2 251 0
 2405 0eba 0000      		nop
 2406               	.L75:
 2407               	/* epilogue start */
 265:lp_solve_5.5/lp_presolve.c ****   }
 266:lp_solve_5.5/lp_presolve.c **** }
 2408               		.loc 2 266 0
 2409 0ebc 6596      		adiw r28,21
 2410 0ebe 0FB6      		in __tmp_reg__,__SREG__
 2411 0ec0 F894      		cli
 2412 0ec2 DEBF      		out __SP_H__,r29
 2413 0ec4 0FBE      		out __SREG__,__tmp_reg__
 2414 0ec6 CDBF      		out __SP_L__,r28
 2415 0ec8 DF91      		pop r29
 2416 0eca CF91      		pop r28
 2417 0ecc 1F91      		pop r17
 2418 0ece 0F91      		pop r16
 2419 0ed0 FF90      		pop r15
 2420 0ed2 EF90      		pop r14
 2421 0ed4 DF90      		pop r13
 2422 0ed6 CF90      		pop r12
 2423 0ed8 BF90      		pop r11
 2424 0eda AF90      		pop r10
 2425 0edc 9F90      		pop r9
 2426 0ede 8F90      		pop r8
 2427 0ee0 7F90      		pop r7
 2428 0ee2 6F90      		pop r6
 2429 0ee4 0895      		ret
 2430               		.cfi_endproc
 2431               	.LFE17:
 2433               		.section	.rodata
 2434               	.LC4:
 2435 0060 7072 6573 		.string	"presolve_SOScheck: A - Column index %d is outside of valid range\n"
 2435      6F6C 7665 
 2435      5F53 4F53 
 2435      6368 6563 
 2435      6B3A 2041 
 2436               	.LC5:
 2437 00a2 7072 6573 		.string	"presolve_SOScheck: B - Column index %d has been marked for deletion\n"
 2437      6F6C 7665 
 2437      5F53 4F53 
 2437      6368 6563 
 2437      6B3A 2042 
 2438               	.LC6:
 2439 00e7 7072 6573 		.string	"presolve_SOScheck: C - Column index %d not found in fast search array\n"
 2439      6F6C 7665 
 2439      5F53 4F53 
 2439      6368 6563 
 2439      6B3A 2043 
 2440               	.LC7:
 2441 012e 7072 6573 		.string	"presolve_SOScheck: D - Column index %d was not found in sparse array\n"
 2441      6F6C 7665 
 2441      5F53 4F53 
 2441      6368 6563 
 2441      6B3A 2044 
 2442               	.LC8:
 2443 0174 7072 6573 		.string	"presolve_SOScheck: E - Sparse array did not indicate column index %d as member of SOS %d\
 2443      6F6C 7665 
 2443      5F53 4F53 
 2443      6368 6563 
 2443      6B3A 2045 
 2444               	.LC9:
 2445 01ce 7072 6573 		.string	"presolve_SOScheck: There were %d errors\n"
 2445      6F6C 7665 
 2445      5F53 4F53 
 2445      6368 6563 
 2445      6B3A 2054 
 2446               		.text
 2447               	.global	presolve_SOScheck
 2449               	presolve_SOScheck:
 2450               	.LFB18:
 267:lp_solve_5.5/lp_presolve.c **** 
 268:lp_solve_5.5/lp_presolve.c **** /* ----------------------------------------------------------------------------- */
 269:lp_solve_5.5/lp_presolve.c **** /* Presolve debugging routines                                                   */
 270:lp_solve_5.5/lp_presolve.c **** /* ----------------------------------------------------------------------------- */
 271:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_SOScheck(presolverec *psdata)
 272:lp_solve_5.5/lp_presolve.c **** {
 2451               		.loc 2 272 0
 2452               		.cfi_startproc
 2453 0ee6 CF93      		push r28
 2454               	.LCFI56:
 2455               		.cfi_def_cfa_offset 3
 2456               		.cfi_offset 28, -2
 2457 0ee8 DF93      		push r29
 2458               	.LCFI57:
 2459               		.cfi_def_cfa_offset 4
 2460               		.cfi_offset 29, -3
 2461 0eea CDB7      		in r28,__SP_L__
 2462 0eec DEB7      		in r29,__SP_H__
 2463               	.LCFI58:
 2464               		.cfi_def_cfa_register 28
 2465 0eee 6997      		sbiw r28,25
 2466               	.LCFI59:
 2467               		.cfi_def_cfa_offset 29
 2468 0ef0 0FB6      		in __tmp_reg__,__SREG__
 2469 0ef2 F894      		cli
 2470 0ef4 DEBF      		out __SP_H__,r29
 2471 0ef6 0FBE      		out __SREG__,__tmp_reg__
 2472 0ef8 CDBF      		out __SP_L__,r28
 2473               	/* prologue: function */
 2474               	/* frame size = 25 */
 2475               	/* stack size = 27 */
 2476               	.L__stack_usage = 27
 2477 0efa 998F      		std Y+25,r25
 2478 0efc 888F      		std Y+24,r24
 273:lp_solve_5.5/lp_presolve.c ****   MYBOOL status = TRUE;
 2479               		.loc 2 273 0
 2480 0efe 81E0      		ldi r24,lo8(1)
 2481 0f00 8B87      		std Y+11,r24
 274:lp_solve_5.5/lp_presolve.c ****   lprec  *lp = psdata->lp;
 2482               		.loc 2 274 0
 2483 0f02 888D      		ldd r24,Y+24
 2484 0f04 998D      		ldd r25,Y+25
 2485 0f06 FC01      		movw r30,r24
 2486 0f08 8289      		ldd r24,Z+18
 2487 0f0a 9389      		ldd r25,Z+19
 2488 0f0c 9D87      		std Y+13,r25
 2489 0f0e 8C87      		std Y+12,r24
 275:lp_solve_5.5/lp_presolve.c ****   int    *list, i, j, n, k, nk, colnr, nSOS = SOS_count(lp), nerr = 0;
 2490               		.loc 2 275 0
 2491 0f10 8C85      		ldd r24,Y+12
 2492 0f12 9D85      		ldd r25,Y+13
 2493 0f14 0E94 0000 		call SOS_count
 2494 0f18 9F87      		std Y+15,r25
 2495 0f1a 8E87      		std Y+14,r24
 2496 0f1c 1A86      		std Y+10,__zero_reg__
 2497 0f1e 1986      		std Y+9,__zero_reg__
 276:lp_solve_5.5/lp_presolve.c ****   SOSrec *SOS;
 277:lp_solve_5.5/lp_presolve.c **** 
 278:lp_solve_5.5/lp_presolve.c ****   if(nSOS == 0)
 2498               		.loc 2 278 0
 2499 0f20 8E85      		ldd r24,Y+14
 2500 0f22 9F85      		ldd r25,Y+15
 2501 0f24 892B      		or r24,r25
 2502 0f26 01F4      		brne .L86
 279:lp_solve_5.5/lp_presolve.c ****     return( status );
 2503               		.loc 2 279 0
 2504 0f28 8B85      		ldd r24,Y+11
 2505 0f2a 00C0      		rjmp .L87
 2506               	.L86:
 280:lp_solve_5.5/lp_presolve.c **** 
 281:lp_solve_5.5/lp_presolve.c ****   /* For each SOS and each member check validity */
 282:lp_solve_5.5/lp_presolve.c ****   for(i = 1; i<= nSOS; i++) {
 2507               		.loc 2 282 0
 2508 0f2c 81E0      		ldi r24,lo8(1)
 2509 0f2e 90E0      		ldi r25,0
 2510 0f30 9A83      		std Y+2,r25
 2511 0f32 8983      		std Y+1,r24
 2512 0f34 00C0      		rjmp .L88
 2513               	.L99:
 283:lp_solve_5.5/lp_presolve.c ****     SOS = lp->SOS->sos_list[i-1];
 2514               		.loc 2 283 0
 2515 0f36 8C85      		ldd r24,Y+12
 2516 0f38 9D85      		ldd r25,Y+13
 2517 0f3a 8256      		subi r24,98
 2518 0f3c 9D4F      		sbci r25,-3
 2519 0f3e FC01      		movw r30,r24
 2520 0f40 8081      		ld r24,Z
 2521 0f42 9181      		ldd r25,Z+1
 2522 0f44 FC01      		movw r30,r24
 2523 0f46 2281      		ldd r18,Z+2
 2524 0f48 3381      		ldd r19,Z+3
 2525 0f4a 8981      		ldd r24,Y+1
 2526 0f4c 9A81      		ldd r25,Y+2
 2527 0f4e 8150      		subi r24,1
 2528 0f50 9048      		sbci r25,-128
 2529 0f52 880F      		lsl r24
 2530 0f54 991F      		rol r25
 2531 0f56 820F      		add r24,r18
 2532 0f58 931F      		adc r25,r19
 2533 0f5a FC01      		movw r30,r24
 2534 0f5c 8081      		ld r24,Z
 2535 0f5e 9181      		ldd r25,Z+1
 2536 0f60 998B      		std Y+17,r25
 2537 0f62 888B      		std Y+16,r24
 284:lp_solve_5.5/lp_presolve.c ****     list = SOS->members;
 2538               		.loc 2 284 0
 2539 0f64 8889      		ldd r24,Y+16
 2540 0f66 9989      		ldd r25,Y+17
 2541 0f68 FC01      		movw r30,r24
 2542 0f6a 8585      		ldd r24,Z+13
 2543 0f6c 9685      		ldd r25,Z+14
 2544 0f6e 9B8B      		std Y+19,r25
 2545 0f70 8A8B      		std Y+18,r24
 285:lp_solve_5.5/lp_presolve.c ****     n = list[0];
 2546               		.loc 2 285 0
 2547 0f72 8A89      		ldd r24,Y+18
 2548 0f74 9B89      		ldd r25,Y+19
 2549 0f76 FC01      		movw r30,r24
 2550 0f78 8081      		ld r24,Z
 2551 0f7a 9181      		ldd r25,Z+1
 2552 0f7c 9D8B      		std Y+21,r25
 2553 0f7e 8C8B      		std Y+20,r24
 286:lp_solve_5.5/lp_presolve.c ****     for(j = 1; j<= n; j++) {
 2554               		.loc 2 286 0
 2555 0f80 81E0      		ldi r24,lo8(1)
 2556 0f82 90E0      		ldi r25,0
 2557 0f84 9C83      		std Y+4,r25
 2558 0f86 8B83      		std Y+3,r24
 2559 0f88 00C0      		rjmp .L89
 2560               	.L98:
 287:lp_solve_5.5/lp_presolve.c ****       colnr = list[j];
 2561               		.loc 2 287 0
 2562 0f8a 8B81      		ldd r24,Y+3
 2563 0f8c 9C81      		ldd r25,Y+4
 2564 0f8e 880F      		lsl r24
 2565 0f90 991F      		rol r25
 2566 0f92 2A89      		ldd r18,Y+18
 2567 0f94 3B89      		ldd r19,Y+19
 2568 0f96 820F      		add r24,r18
 2569 0f98 931F      		adc r25,r19
 2570 0f9a FC01      		movw r30,r24
 2571 0f9c 8081      		ld r24,Z
 2572 0f9e 9181      		ldd r25,Z+1
 2573 0fa0 9887      		std Y+8,r25
 2574 0fa2 8F83      		std Y+7,r24
 288:lp_solve_5.5/lp_presolve.c ****       /* Check valid range */
 289:lp_solve_5.5/lp_presolve.c ****       if((colnr < 1) || (colnr > lp->columns)) {
 2575               		.loc 2 289 0
 2576 0fa4 8F81      		ldd r24,Y+7
 2577 0fa6 9885      		ldd r25,Y+8
 2578 0fa8 1816      		cp __zero_reg__,r24
 2579 0faa 1906      		cpc __zero_reg__,r25
 2580 0fac 04F4      		brge .L90
 2581               		.loc 2 289 0 is_stmt 0 discriminator 1
 2582 0fae 8C85      		ldd r24,Y+12
 2583 0fb0 9D85      		ldd r25,Y+13
 2584 0fb2 8451      		subi r24,20
 2585 0fb4 9E4F      		sbci r25,-2
 2586 0fb6 FC01      		movw r30,r24
 2587 0fb8 2081      		ld r18,Z
 2588 0fba 3181      		ldd r19,Z+1
 2589 0fbc 8F81      		ldd r24,Y+7
 2590 0fbe 9885      		ldd r25,Y+8
 2591 0fc0 2817      		cp r18,r24
 2592 0fc2 3907      		cpc r19,r25
 2593 0fc4 04F4      		brge .L91
 2594               	.L90:
 290:lp_solve_5.5/lp_presolve.c ****         nerr++;
 2595               		.loc 2 290 0 is_stmt 1
 2596 0fc6 8985      		ldd r24,Y+9
 2597 0fc8 9A85      		ldd r25,Y+10
 2598 0fca 0196      		adiw r24,1
 2599 0fcc 9A87      		std Y+10,r25
 2600 0fce 8987      		std Y+9,r24
 291:lp_solve_5.5/lp_presolve.c ****         report(lp, IMPORTANT, "presolve_SOScheck: A - Column index %d is outside of valid range\n",
 2601               		.loc 2 291 0
 2602 0fd0 8885      		ldd r24,Y+8
 2603 0fd2 8F93      		push r24
 2604 0fd4 8F81      		ldd r24,Y+7
 2605 0fd6 8F93      		push r24
 2606 0fd8 80E0      		ldi r24,lo8(.LC4)
 2607 0fda 90E0      		ldi r25,hi8(.LC4)
 2608 0fdc 892F      		mov r24,r25
 2609 0fde 8F93      		push r24
 2610 0fe0 80E0      		ldi r24,lo8(.LC4)
 2611 0fe2 90E0      		ldi r25,hi8(.LC4)
 2612 0fe4 8F93      		push r24
 2613 0fe6 1F92      		push __zero_reg__
 2614 0fe8 83E0      		ldi r24,lo8(3)
 2615 0fea 8F93      		push r24
 2616 0fec 8D85      		ldd r24,Y+13
 2617 0fee 8F93      		push r24
 2618 0ff0 8C85      		ldd r24,Y+12
 2619 0ff2 8F93      		push r24
 2620 0ff4 0E94 0000 		call report
 2621 0ff8 8DB7      		in r24,__SP_L__
 2622 0ffa 9EB7      		in r25,__SP_H__
 2623 0ffc 0896      		adiw r24,8
 2624 0ffe 0FB6      		in __tmp_reg__,__SREG__
 2625 1000 F894      		cli
 2626 1002 DEBF      		out __SP_H__,r29
 2627 1004 0FBE      		out __SREG__,__tmp_reg__
 2628 1006 CDBF      		out __SP_L__,r28
 2629               	.L91:
 292:lp_solve_5.5/lp_presolve.c ****                               colnr);
 293:lp_solve_5.5/lp_presolve.c ****       }
 294:lp_solve_5.5/lp_presolve.c ****       /* Check for deletion */
 295:lp_solve_5.5/lp_presolve.c ****       if(!isActiveLink(psdata->cols->varmap, colnr)) {
 2630               		.loc 2 295 0
 2631 1008 888D      		ldd r24,Y+24
 2632 100a 998D      		ldd r25,Y+25
 2633 100c FC01      		movw r30,r24
 2634 100e 8281      		ldd r24,Z+2
 2635 1010 9381      		ldd r25,Z+3
 2636 1012 FC01      		movw r30,r24
 2637 1014 8081      		ld r24,Z
 2638 1016 9181      		ldd r25,Z+1
 2639 1018 2F81      		ldd r18,Y+7
 2640 101a 3885      		ldd r19,Y+8
 2641 101c B901      		movw r22,r18
 2642 101e 0E94 0000 		call isActiveLink
 2643 1022 8823      		tst r24
 2644 1024 01F4      		brne .L92
 296:lp_solve_5.5/lp_presolve.c ****         nerr++;
 2645               		.loc 2 296 0
 2646 1026 8985      		ldd r24,Y+9
 2647 1028 9A85      		ldd r25,Y+10
 2648 102a 0196      		adiw r24,1
 2649 102c 9A87      		std Y+10,r25
 2650 102e 8987      		std Y+9,r24
 297:lp_solve_5.5/lp_presolve.c ****         report(lp, IMPORTANT, "presolve_SOScheck: B - Column index %d has been marked for deletion\
 2651               		.loc 2 297 0
 2652 1030 8885      		ldd r24,Y+8
 2653 1032 8F93      		push r24
 2654 1034 8F81      		ldd r24,Y+7
 2655 1036 8F93      		push r24
 2656 1038 80E0      		ldi r24,lo8(.LC5)
 2657 103a 90E0      		ldi r25,hi8(.LC5)
 2658 103c 892F      		mov r24,r25
 2659 103e 8F93      		push r24
 2660 1040 80E0      		ldi r24,lo8(.LC5)
 2661 1042 90E0      		ldi r25,hi8(.LC5)
 2662 1044 8F93      		push r24
 2663 1046 1F92      		push __zero_reg__
 2664 1048 83E0      		ldi r24,lo8(3)
 2665 104a 8F93      		push r24
 2666 104c 8D85      		ldd r24,Y+13
 2667 104e 8F93      		push r24
 2668 1050 8C85      		ldd r24,Y+12
 2669 1052 8F93      		push r24
 2670 1054 0E94 0000 		call report
 2671 1058 8DB7      		in r24,__SP_L__
 2672 105a 9EB7      		in r25,__SP_H__
 2673 105c 0896      		adiw r24,8
 2674 105e 0FB6      		in __tmp_reg__,__SREG__
 2675 1060 F894      		cli
 2676 1062 DEBF      		out __SP_H__,r29
 2677 1064 0FBE      		out __SREG__,__tmp_reg__
 2678 1066 CDBF      		out __SP_L__,r28
 2679               	.L92:
 298:lp_solve_5.5/lp_presolve.c ****                               colnr);
 299:lp_solve_5.5/lp_presolve.c ****       }
 300:lp_solve_5.5/lp_presolve.c ****       /* Check if sorted member array is Ok */
 301:lp_solve_5.5/lp_presolve.c ****       if(SOS_member_index(lp->SOS, i, colnr) != j) {
 2680               		.loc 2 301 0
 2681 1068 8C85      		ldd r24,Y+12
 2682 106a 9D85      		ldd r25,Y+13
 2683 106c 8256      		subi r24,98
 2684 106e 9D4F      		sbci r25,-3
 2685 1070 FC01      		movw r30,r24
 2686 1072 8081      		ld r24,Z
 2687 1074 9181      		ldd r25,Z+1
 2688 1076 4F81      		ldd r20,Y+7
 2689 1078 5885      		ldd r21,Y+8
 2690 107a 2981      		ldd r18,Y+1
 2691 107c 3A81      		ldd r19,Y+2
 2692 107e B901      		movw r22,r18
 2693 1080 0E94 0000 		call SOS_member_index
 2694 1084 9C01      		movw r18,r24
 2695 1086 8B81      		ldd r24,Y+3
 2696 1088 9C81      		ldd r25,Y+4
 2697 108a 2817      		cp r18,r24
 2698 108c 3907      		cpc r19,r25
 2699 108e 01F0      		breq .L93
 302:lp_solve_5.5/lp_presolve.c ****         nerr++;
 2700               		.loc 2 302 0
 2701 1090 8985      		ldd r24,Y+9
 2702 1092 9A85      		ldd r25,Y+10
 2703 1094 0196      		adiw r24,1
 2704 1096 9A87      		std Y+10,r25
 2705 1098 8987      		std Y+9,r24
 303:lp_solve_5.5/lp_presolve.c ****         report(lp, IMPORTANT, "presolve_SOScheck: C - Column index %d not found in fast search arra
 2706               		.loc 2 303 0
 2707 109a 8885      		ldd r24,Y+8
 2708 109c 8F93      		push r24
 2709 109e 8F81      		ldd r24,Y+7
 2710 10a0 8F93      		push r24
 2711 10a2 80E0      		ldi r24,lo8(.LC6)
 2712 10a4 90E0      		ldi r25,hi8(.LC6)
 2713 10a6 892F      		mov r24,r25
 2714 10a8 8F93      		push r24
 2715 10aa 80E0      		ldi r24,lo8(.LC6)
 2716 10ac 90E0      		ldi r25,hi8(.LC6)
 2717 10ae 8F93      		push r24
 2718 10b0 1F92      		push __zero_reg__
 2719 10b2 83E0      		ldi r24,lo8(3)
 2720 10b4 8F93      		push r24
 2721 10b6 8D85      		ldd r24,Y+13
 2722 10b8 8F93      		push r24
 2723 10ba 8C85      		ldd r24,Y+12
 2724 10bc 8F93      		push r24
 2725 10be 0E94 0000 		call report
 2726 10c2 8DB7      		in r24,__SP_L__
 2727 10c4 9EB7      		in r25,__SP_H__
 2728 10c6 0896      		adiw r24,8
 2729 10c8 0FB6      		in __tmp_reg__,__SREG__
 2730 10ca F894      		cli
 2731 10cc DEBF      		out __SP_H__,r29
 2732 10ce 0FBE      		out __SREG__,__tmp_reg__
 2733 10d0 CDBF      		out __SP_L__,r28
 2734               	.L93:
 304:lp_solve_5.5/lp_presolve.c ****                               colnr);
 305:lp_solve_5.5/lp_presolve.c ****       }
 306:lp_solve_5.5/lp_presolve.c ****       /* Check for variable membership in this SOS record of the sparse storage */
 307:lp_solve_5.5/lp_presolve.c ****       k = lp->SOS->memberpos[colnr-1];
 2735               		.loc 2 307 0
 2736 10d2 8C85      		ldd r24,Y+12
 2737 10d4 9D85      		ldd r25,Y+13
 2738 10d6 8256      		subi r24,98
 2739 10d8 9D4F      		sbci r25,-3
 2740 10da FC01      		movw r30,r24
 2741 10dc 8081      		ld r24,Z
 2742 10de 9181      		ldd r25,Z+1
 2743 10e0 FC01      		movw r30,r24
 2744 10e2 2685      		ldd r18,Z+14
 2745 10e4 3785      		ldd r19,Z+15
 2746 10e6 8F81      		ldd r24,Y+7
 2747 10e8 9885      		ldd r25,Y+8
 2748 10ea 8150      		subi r24,1
 2749 10ec 9048      		sbci r25,-128
 2750 10ee 880F      		lsl r24
 2751 10f0 991F      		rol r25
 2752 10f2 820F      		add r24,r18
 2753 10f4 931F      		adc r25,r19
 2754 10f6 FC01      		movw r30,r24
 2755 10f8 8081      		ld r24,Z
 2756 10fa 9181      		ldd r25,Z+1
 2757 10fc 9E83      		std Y+6,r25
 2758 10fe 8D83      		std Y+5,r24
 308:lp_solve_5.5/lp_presolve.c ****       nk = lp->SOS->memberpos[colnr];
 2759               		.loc 2 308 0
 2760 1100 8C85      		ldd r24,Y+12
 2761 1102 9D85      		ldd r25,Y+13
 2762 1104 8256      		subi r24,98
 2763 1106 9D4F      		sbci r25,-3
 2764 1108 FC01      		movw r30,r24
 2765 110a 8081      		ld r24,Z
 2766 110c 9181      		ldd r25,Z+1
 2767 110e FC01      		movw r30,r24
 2768 1110 2685      		ldd r18,Z+14
 2769 1112 3785      		ldd r19,Z+15
 2770 1114 8F81      		ldd r24,Y+7
 2771 1116 9885      		ldd r25,Y+8
 2772 1118 880F      		lsl r24
 2773 111a 991F      		rol r25
 2774 111c 820F      		add r24,r18
 2775 111e 931F      		adc r25,r19
 2776 1120 FC01      		movw r30,r24
 2777 1122 8081      		ld r24,Z
 2778 1124 9181      		ldd r25,Z+1
 2779 1126 9F8B      		std Y+23,r25
 2780 1128 8E8B      		std Y+22,r24
 309:lp_solve_5.5/lp_presolve.c ****       while((k < nk) && (lp->SOS->membership[k] != i))
 2781               		.loc 2 309 0
 2782 112a 00C0      		rjmp .L94
 2783               	.L96:
 310:lp_solve_5.5/lp_presolve.c ****         k++;
 2784               		.loc 2 310 0
 2785 112c 8D81      		ldd r24,Y+5
 2786 112e 9E81      		ldd r25,Y+6
 2787 1130 0196      		adiw r24,1
 2788 1132 9E83      		std Y+6,r25
 2789 1134 8D83      		std Y+5,r24
 2790               	.L94:
 309:lp_solve_5.5/lp_presolve.c ****       while((k < nk) && (lp->SOS->membership[k] != i))
 2791               		.loc 2 309 0
 2792 1136 2D81      		ldd r18,Y+5
 2793 1138 3E81      		ldd r19,Y+6
 2794 113a 8E89      		ldd r24,Y+22
 2795 113c 9F89      		ldd r25,Y+23
 2796 113e 2817      		cp r18,r24
 2797 1140 3907      		cpc r19,r25
 2798 1142 04F4      		brge .L95
 309:lp_solve_5.5/lp_presolve.c ****       while((k < nk) && (lp->SOS->membership[k] != i))
 2799               		.loc 2 309 0 is_stmt 0 discriminator 1
 2800 1144 8C85      		ldd r24,Y+12
 2801 1146 9D85      		ldd r25,Y+13
 2802 1148 8256      		subi r24,98
 2803 114a 9D4F      		sbci r25,-3
 2804 114c FC01      		movw r30,r24
 2805 114e 8081      		ld r24,Z
 2806 1150 9181      		ldd r25,Z+1
 2807 1152 FC01      		movw r30,r24
 2808 1154 2485      		ldd r18,Z+12
 2809 1156 3585      		ldd r19,Z+13
 2810 1158 8D81      		ldd r24,Y+5
 2811 115a 9E81      		ldd r25,Y+6
 2812 115c 880F      		lsl r24
 2813 115e 991F      		rol r25
 2814 1160 820F      		add r24,r18
 2815 1162 931F      		adc r25,r19
 2816 1164 FC01      		movw r30,r24
 2817 1166 2081      		ld r18,Z
 2818 1168 3181      		ldd r19,Z+1
 2819 116a 8981      		ldd r24,Y+1
 2820 116c 9A81      		ldd r25,Y+2
 2821 116e 2817      		cp r18,r24
 2822 1170 3907      		cpc r19,r25
 2823 1172 01F4      		brne .L96
 2824               	.L95:
 311:lp_solve_5.5/lp_presolve.c ****       if(k >= nk) {
 2825               		.loc 2 311 0 is_stmt 1
 2826 1174 2D81      		ldd r18,Y+5
 2827 1176 3E81      		ldd r19,Y+6
 2828 1178 8E89      		ldd r24,Y+22
 2829 117a 9F89      		ldd r25,Y+23
 2830 117c 2817      		cp r18,r24
 2831 117e 3907      		cpc r19,r25
 2832 1180 04F0      		brlt .L97
 312:lp_solve_5.5/lp_presolve.c ****         nerr++;
 2833               		.loc 2 312 0
 2834 1182 8985      		ldd r24,Y+9
 2835 1184 9A85      		ldd r25,Y+10
 2836 1186 0196      		adiw r24,1
 2837 1188 9A87      		std Y+10,r25
 2838 118a 8987      		std Y+9,r24
 313:lp_solve_5.5/lp_presolve.c ****         report(lp, IMPORTANT, "presolve_SOScheck: D - Column index %d was not found in sparse array
 2839               		.loc 2 313 0
 2840 118c 8885      		ldd r24,Y+8
 2841 118e 8F93      		push r24
 2842 1190 8F81      		ldd r24,Y+7
 2843 1192 8F93      		push r24
 2844 1194 80E0      		ldi r24,lo8(.LC7)
 2845 1196 90E0      		ldi r25,hi8(.LC7)
 2846 1198 892F      		mov r24,r25
 2847 119a 8F93      		push r24
 2848 119c 80E0      		ldi r24,lo8(.LC7)
 2849 119e 90E0      		ldi r25,hi8(.LC7)
 2850 11a0 8F93      		push r24
 2851 11a2 1F92      		push __zero_reg__
 2852 11a4 83E0      		ldi r24,lo8(3)
 2853 11a6 8F93      		push r24
 2854 11a8 8D85      		ldd r24,Y+13
 2855 11aa 8F93      		push r24
 2856 11ac 8C85      		ldd r24,Y+12
 2857 11ae 8F93      		push r24
 2858 11b0 0E94 0000 		call report
 2859 11b4 8DB7      		in r24,__SP_L__
 2860 11b6 9EB7      		in r25,__SP_H__
 2861 11b8 0896      		adiw r24,8
 2862 11ba 0FB6      		in __tmp_reg__,__SREG__
 2863 11bc F894      		cli
 2864 11be DEBF      		out __SP_H__,r29
 2865 11c0 0FBE      		out __SREG__,__tmp_reg__
 2866 11c2 CDBF      		out __SP_L__,r28
 2867               	.L97:
 286:lp_solve_5.5/lp_presolve.c ****       colnr = list[j];
 2868               		.loc 2 286 0 discriminator 2
 2869 11c4 8B81      		ldd r24,Y+3
 2870 11c6 9C81      		ldd r25,Y+4
 2871 11c8 0196      		adiw r24,1
 2872 11ca 9C83      		std Y+4,r25
 2873 11cc 8B83      		std Y+3,r24
 2874               	.L89:
 286:lp_solve_5.5/lp_presolve.c ****       colnr = list[j];
 2875               		.loc 2 286 0 is_stmt 0 discriminator 1
 2876 11ce 2B81      		ldd r18,Y+3
 2877 11d0 3C81      		ldd r19,Y+4
 2878 11d2 8C89      		ldd r24,Y+20
 2879 11d4 9D89      		ldd r25,Y+21
 2880 11d6 8217      		cp r24,r18
 2881 11d8 9307      		cpc r25,r19
 2882 11da 04F0      		brlt .+2
 2883 11dc 00C0      		rjmp .L98
 282:lp_solve_5.5/lp_presolve.c ****     SOS = lp->SOS->sos_list[i-1];
 2884               		.loc 2 282 0 is_stmt 1 discriminator 2
 2885 11de 8981      		ldd r24,Y+1
 2886 11e0 9A81      		ldd r25,Y+2
 2887 11e2 0196      		adiw r24,1
 2888 11e4 9A83      		std Y+2,r25
 2889 11e6 8983      		std Y+1,r24
 2890               	.L88:
 282:lp_solve_5.5/lp_presolve.c ****     SOS = lp->SOS->sos_list[i-1];
 2891               		.loc 2 282 0 is_stmt 0 discriminator 1
 2892 11e8 2981      		ldd r18,Y+1
 2893 11ea 3A81      		ldd r19,Y+2
 2894 11ec 8E85      		ldd r24,Y+14
 2895 11ee 9F85      		ldd r25,Y+15
 2896 11f0 8217      		cp r24,r18
 2897 11f2 9307      		cpc r25,r19
 2898 11f4 04F0      		brlt .+2
 2899 11f6 00C0      		rjmp .L99
 314:lp_solve_5.5/lp_presolve.c ****                               colnr);
 315:lp_solve_5.5/lp_presolve.c ****       }
 316:lp_solve_5.5/lp_presolve.c ****     }
 317:lp_solve_5.5/lp_presolve.c ****   }
 318:lp_solve_5.5/lp_presolve.c **** 
 319:lp_solve_5.5/lp_presolve.c ****   /* Check that all members in the sparse array can be validated as SOS members */
 320:lp_solve_5.5/lp_presolve.c ****   for(colnr = 1; colnr <= lp->columns; colnr++) {
 2900               		.loc 2 320 0 is_stmt 1
 2901 11f8 81E0      		ldi r24,lo8(1)
 2902 11fa 90E0      		ldi r25,0
 2903 11fc 9887      		std Y+8,r25
 2904 11fe 8F83      		std Y+7,r24
 2905 1200 00C0      		rjmp .L100
 2906               	.L104:
 321:lp_solve_5.5/lp_presolve.c ****     k = lp->SOS->memberpos[colnr-1];
 2907               		.loc 2 321 0
 2908 1202 8C85      		ldd r24,Y+12
 2909 1204 9D85      		ldd r25,Y+13
 2910 1206 8256      		subi r24,98
 2911 1208 9D4F      		sbci r25,-3
 2912 120a FC01      		movw r30,r24
 2913 120c 8081      		ld r24,Z
 2914 120e 9181      		ldd r25,Z+1
 2915 1210 FC01      		movw r30,r24
 2916 1212 2685      		ldd r18,Z+14
 2917 1214 3785      		ldd r19,Z+15
 2918 1216 8F81      		ldd r24,Y+7
 2919 1218 9885      		ldd r25,Y+8
 2920 121a 8150      		subi r24,1
 2921 121c 9048      		sbci r25,-128
 2922 121e 880F      		lsl r24
 2923 1220 991F      		rol r25
 2924 1222 820F      		add r24,r18
 2925 1224 931F      		adc r25,r19
 2926 1226 FC01      		movw r30,r24
 2927 1228 8081      		ld r24,Z
 2928 122a 9181      		ldd r25,Z+1
 2929 122c 9E83      		std Y+6,r25
 2930 122e 8D83      		std Y+5,r24
 322:lp_solve_5.5/lp_presolve.c ****     nk = lp->SOS->memberpos[colnr];
 2931               		.loc 2 322 0
 2932 1230 8C85      		ldd r24,Y+12
 2933 1232 9D85      		ldd r25,Y+13
 2934 1234 8256      		subi r24,98
 2935 1236 9D4F      		sbci r25,-3
 2936 1238 FC01      		movw r30,r24
 2937 123a 8081      		ld r24,Z
 2938 123c 9181      		ldd r25,Z+1
 2939 123e FC01      		movw r30,r24
 2940 1240 2685      		ldd r18,Z+14
 2941 1242 3785      		ldd r19,Z+15
 2942 1244 8F81      		ldd r24,Y+7
 2943 1246 9885      		ldd r25,Y+8
 2944 1248 880F      		lsl r24
 2945 124a 991F      		rol r25
 2946 124c 820F      		add r24,r18
 2947 124e 931F      		adc r25,r19
 2948 1250 FC01      		movw r30,r24
 2949 1252 8081      		ld r24,Z
 2950 1254 9181      		ldd r25,Z+1
 2951 1256 9F8B      		std Y+23,r25
 2952 1258 8E8B      		std Y+22,r24
 323:lp_solve_5.5/lp_presolve.c ****     for(; k < nk; k++) {
 2953               		.loc 2 323 0
 2954 125a 00C0      		rjmp .L101
 2955               	.L103:
 324:lp_solve_5.5/lp_presolve.c ****       if(!SOS_is_member(lp->SOS, lp->SOS->membership[k], colnr)) {
 2956               		.loc 2 324 0
 2957 125c 8C85      		ldd r24,Y+12
 2958 125e 9D85      		ldd r25,Y+13
 2959 1260 8256      		subi r24,98
 2960 1262 9D4F      		sbci r25,-3
 2961 1264 FC01      		movw r30,r24
 2962 1266 8081      		ld r24,Z
 2963 1268 9181      		ldd r25,Z+1
 2964 126a FC01      		movw r30,r24
 2965 126c 2485      		ldd r18,Z+12
 2966 126e 3585      		ldd r19,Z+13
 2967 1270 8D81      		ldd r24,Y+5
 2968 1272 9E81      		ldd r25,Y+6
 2969 1274 880F      		lsl r24
 2970 1276 991F      		rol r25
 2971 1278 820F      		add r24,r18
 2972 127a 931F      		adc r25,r19
 2973 127c FC01      		movw r30,r24
 2974 127e 2081      		ld r18,Z
 2975 1280 3181      		ldd r19,Z+1
 2976 1282 8C85      		ldd r24,Y+12
 2977 1284 9D85      		ldd r25,Y+13
 2978 1286 8256      		subi r24,98
 2979 1288 9D4F      		sbci r25,-3
 2980 128a FC01      		movw r30,r24
 2981 128c 8081      		ld r24,Z
 2982 128e 9181      		ldd r25,Z+1
 2983 1290 4F81      		ldd r20,Y+7
 2984 1292 5885      		ldd r21,Y+8
 2985 1294 B901      		movw r22,r18
 2986 1296 0E94 0000 		call SOS_is_member
 2987 129a 892B      		or r24,r25
 2988 129c 01F4      		brne .L102
 325:lp_solve_5.5/lp_presolve.c ****         nerr++;
 2989               		.loc 2 325 0
 2990 129e 8985      		ldd r24,Y+9
 2991 12a0 9A85      		ldd r25,Y+10
 2992 12a2 0196      		adiw r24,1
 2993 12a4 9A87      		std Y+10,r25
 2994 12a6 8987      		std Y+9,r24
 326:lp_solve_5.5/lp_presolve.c ****         report(lp, IMPORTANT, "presolve_SOScheck: E - Sparse array did not indicate column index %d
 327:lp_solve_5.5/lp_presolve.c ****                               colnr, lp->SOS->membership[k]);
 2995               		.loc 2 327 0
 2996 12a8 8C85      		ldd r24,Y+12
 2997 12aa 9D85      		ldd r25,Y+13
 2998 12ac 8256      		subi r24,98
 2999 12ae 9D4F      		sbci r25,-3
 3000 12b0 FC01      		movw r30,r24
 3001 12b2 8081      		ld r24,Z
 3002 12b4 9181      		ldd r25,Z+1
 3003 12b6 FC01      		movw r30,r24
 3004 12b8 2485      		ldd r18,Z+12
 3005 12ba 3585      		ldd r19,Z+13
 3006 12bc 8D81      		ldd r24,Y+5
 3007 12be 9E81      		ldd r25,Y+6
 3008 12c0 880F      		lsl r24
 3009 12c2 991F      		rol r25
 3010 12c4 820F      		add r24,r18
 3011 12c6 931F      		adc r25,r19
 326:lp_solve_5.5/lp_presolve.c ****         report(lp, IMPORTANT, "presolve_SOScheck: E - Sparse array did not indicate column index %d
 3012               		.loc 2 326 0
 3013 12c8 FC01      		movw r30,r24
 3014 12ca 8081      		ld r24,Z
 3015 12cc 9181      		ldd r25,Z+1
 3016 12ce 292F      		mov r18,r25
 3017 12d0 2F93      		push r18
 3018 12d2 8F93      		push r24
 3019 12d4 8885      		ldd r24,Y+8
 3020 12d6 8F93      		push r24
 3021 12d8 8F81      		ldd r24,Y+7
 3022 12da 8F93      		push r24
 3023 12dc 80E0      		ldi r24,lo8(.LC8)
 3024 12de 90E0      		ldi r25,hi8(.LC8)
 3025 12e0 892F      		mov r24,r25
 3026 12e2 8F93      		push r24
 3027 12e4 80E0      		ldi r24,lo8(.LC8)
 3028 12e6 90E0      		ldi r25,hi8(.LC8)
 3029 12e8 8F93      		push r24
 3030 12ea 1F92      		push __zero_reg__
 3031 12ec 83E0      		ldi r24,lo8(3)
 3032 12ee 8F93      		push r24
 3033 12f0 8D85      		ldd r24,Y+13
 3034 12f2 8F93      		push r24
 3035 12f4 8C85      		ldd r24,Y+12
 3036 12f6 8F93      		push r24
 3037 12f8 0E94 0000 		call report
 3038 12fc 8DB7      		in r24,__SP_L__
 3039 12fe 9EB7      		in r25,__SP_H__
 3040 1300 0A96      		adiw r24,10
 3041 1302 0FB6      		in __tmp_reg__,__SREG__
 3042 1304 F894      		cli
 3043 1306 DEBF      		out __SP_H__,r29
 3044 1308 0FBE      		out __SREG__,__tmp_reg__
 3045 130a CDBF      		out __SP_L__,r28
 3046               	.L102:
 323:lp_solve_5.5/lp_presolve.c ****       if(!SOS_is_member(lp->SOS, lp->SOS->membership[k], colnr)) {
 3047               		.loc 2 323 0
 3048 130c 8D81      		ldd r24,Y+5
 3049 130e 9E81      		ldd r25,Y+6
 3050 1310 0196      		adiw r24,1
 3051 1312 9E83      		std Y+6,r25
 3052 1314 8D83      		std Y+5,r24
 3053               	.L101:
 323:lp_solve_5.5/lp_presolve.c ****       if(!SOS_is_member(lp->SOS, lp->SOS->membership[k], colnr)) {
 3054               		.loc 2 323 0 is_stmt 0 discriminator 1
 3055 1316 2D81      		ldd r18,Y+5
 3056 1318 3E81      		ldd r19,Y+6
 3057 131a 8E89      		ldd r24,Y+22
 3058 131c 9F89      		ldd r25,Y+23
 3059 131e 2817      		cp r18,r24
 3060 1320 3907      		cpc r19,r25
 3061 1322 04F4      		brge .+2
 3062 1324 00C0      		rjmp .L103
 320:lp_solve_5.5/lp_presolve.c ****     k = lp->SOS->memberpos[colnr-1];
 3063               		.loc 2 320 0 is_stmt 1 discriminator 2
 3064 1326 8F81      		ldd r24,Y+7
 3065 1328 9885      		ldd r25,Y+8
 3066 132a 0196      		adiw r24,1
 3067 132c 9887      		std Y+8,r25
 3068 132e 8F83      		std Y+7,r24
 3069               	.L100:
 320:lp_solve_5.5/lp_presolve.c ****     k = lp->SOS->memberpos[colnr-1];
 3070               		.loc 2 320 0 is_stmt 0 discriminator 1
 3071 1330 8C85      		ldd r24,Y+12
 3072 1332 9D85      		ldd r25,Y+13
 3073 1334 8451      		subi r24,20
 3074 1336 9E4F      		sbci r25,-2
 3075 1338 FC01      		movw r30,r24
 3076 133a 2081      		ld r18,Z
 3077 133c 3181      		ldd r19,Z+1
 3078 133e 8F81      		ldd r24,Y+7
 3079 1340 9885      		ldd r25,Y+8
 3080 1342 2817      		cp r18,r24
 3081 1344 3907      		cpc r19,r25
 3082 1346 04F0      		brlt .+2
 3083 1348 00C0      		rjmp .L104
 328:lp_solve_5.5/lp_presolve.c ****       }
 329:lp_solve_5.5/lp_presolve.c ****     }
 330:lp_solve_5.5/lp_presolve.c ****   }
 331:lp_solve_5.5/lp_presolve.c ****   status = (MYBOOL) (nerr == 0);
 3084               		.loc 2 331 0 is_stmt 1
 3085 134a 21E0      		ldi r18,lo8(1)
 3086 134c 8985      		ldd r24,Y+9
 3087 134e 9A85      		ldd r25,Y+10
 3088 1350 892B      		or r24,r25
 3089 1352 01F0      		breq .L105
 3090 1354 20E0      		ldi r18,0
 3091               	.L105:
 3092 1356 2B87      		std Y+11,r18
 332:lp_solve_5.5/lp_presolve.c ****   if(!status)
 3093               		.loc 2 332 0
 3094 1358 8B85      		ldd r24,Y+11
 3095 135a 8823      		tst r24
 3096 135c 01F4      		brne .L106
 333:lp_solve_5.5/lp_presolve.c ****     report(lp, IMPORTANT, "presolve_SOScheck: There were %d errors\n",
 3097               		.loc 2 333 0
 3098 135e 8A85      		ldd r24,Y+10
 3099 1360 8F93      		push r24
 3100 1362 8985      		ldd r24,Y+9
 3101 1364 8F93      		push r24
 3102 1366 80E0      		ldi r24,lo8(.LC9)
 3103 1368 90E0      		ldi r25,hi8(.LC9)
 3104 136a 892F      		mov r24,r25
 3105 136c 8F93      		push r24
 3106 136e 80E0      		ldi r24,lo8(.LC9)
 3107 1370 90E0      		ldi r25,hi8(.LC9)
 3108 1372 8F93      		push r24
 3109 1374 1F92      		push __zero_reg__
 3110 1376 83E0      		ldi r24,lo8(3)
 3111 1378 8F93      		push r24
 3112 137a 8D85      		ldd r24,Y+13
 3113 137c 8F93      		push r24
 3114 137e 8C85      		ldd r24,Y+12
 3115 1380 8F93      		push r24
 3116 1382 0E94 0000 		call report
 3117 1386 8DB7      		in r24,__SP_L__
 3118 1388 9EB7      		in r25,__SP_H__
 3119 138a 0896      		adiw r24,8
 3120 138c 0FB6      		in __tmp_reg__,__SREG__
 3121 138e F894      		cli
 3122 1390 DEBF      		out __SP_H__,r29
 3123 1392 0FBE      		out __SREG__,__tmp_reg__
 3124 1394 CDBF      		out __SP_L__,r28
 3125               	.L106:
 334:lp_solve_5.5/lp_presolve.c ****                            nerr);
 335:lp_solve_5.5/lp_presolve.c **** 
 336:lp_solve_5.5/lp_presolve.c **** 
 337:lp_solve_5.5/lp_presolve.c ****   return( status );
 3126               		.loc 2 337 0
 3127 1396 8B85      		ldd r24,Y+11
 3128               	.L87:
 3129               	/* epilogue start */
 338:lp_solve_5.5/lp_presolve.c **** }
 3130               		.loc 2 338 0
 3131 1398 6996      		adiw r28,25
 3132 139a 0FB6      		in __tmp_reg__,__SREG__
 3133 139c F894      		cli
 3134 139e DEBF      		out __SP_H__,r29
 3135 13a0 0FBE      		out __SREG__,__tmp_reg__
 3136 13a2 CDBF      		out __SP_L__,r28
 3137 13a4 DF91      		pop r29
 3138 13a6 CF91      		pop r28
 3139 13a8 0895      		ret
 3140               		.cfi_endproc
 3141               	.LFE18:
 3143               	.global	__nesf2
 3144               	.global	__ltsf2
 3146               	presolve_roundrhs:
 3147               	.LFB19:
 339:lp_solve_5.5/lp_presolve.c **** 
 340:lp_solve_5.5/lp_presolve.c **** /* ----------------------------------------------------------------------------- */
 341:lp_solve_5.5/lp_presolve.c **** /* Presolve routines for tightening the model                                    */
 342:lp_solve_5.5/lp_presolve.c **** /* ----------------------------------------------------------------------------- */
 343:lp_solve_5.5/lp_presolve.c **** 
 344:lp_solve_5.5/lp_presolve.c **** INLINE REAL presolve_roundrhs(lprec *lp, REAL value, MYBOOL isGE)
 345:lp_solve_5.5/lp_presolve.c **** {
 3148               		.loc 2 345 0
 3149               		.cfi_startproc
 3150 13aa 1F93      		push r17
 3151               	.LCFI60:
 3152               		.cfi_def_cfa_offset 3
 3153               		.cfi_offset 17, -2
 3154 13ac CF93      		push r28
 3155               	.LCFI61:
 3156               		.cfi_def_cfa_offset 4
 3157               		.cfi_offset 28, -3
 3158 13ae DF93      		push r29
 3159               	.LCFI62:
 3160               		.cfi_def_cfa_offset 5
 3161               		.cfi_offset 29, -4
 3162 13b0 CDB7      		in r28,__SP_L__
 3163 13b2 DEB7      		in r29,__SP_H__
 3164               	.LCFI63:
 3165               		.cfi_def_cfa_register 28
 3166 13b4 2F97      		sbiw r28,15
 3167               	.LCFI64:
 3168               		.cfi_def_cfa_offset 20
 3169 13b6 0FB6      		in __tmp_reg__,__SREG__
 3170 13b8 F894      		cli
 3171 13ba DEBF      		out __SP_H__,r29
 3172 13bc 0FBE      		out __SREG__,__tmp_reg__
 3173 13be CDBF      		out __SP_L__,r28
 3174               	/* prologue: function */
 3175               	/* frame size = 15 */
 3176               	/* stack size = 18 */
 3177               	.L__stack_usage = 18
 3178 13c0 9A87      		std Y+10,r25
 3179 13c2 8987      		std Y+9,r24
 3180 13c4 4B87      		std Y+11,r20
 3181 13c6 5C87      		std Y+12,r21
 3182 13c8 6D87      		std Y+13,r22
 3183 13ca 7E87      		std Y+14,r23
 3184 13cc 2F87      		std Y+15,r18
 346:lp_solve_5.5/lp_presolve.c **** #ifdef DoPresolveRounding
 347:lp_solve_5.5/lp_presolve.c ****   REAL eps = PRESOLVE_EPSVALUE*1000,
 3185               		.loc 2 347 0
 3186 13ce 8985      		ldd r24,Y+9
 3187 13d0 9A85      		ldd r25,Y+10
 3188 13d2 865E      		subi r24,-26
 3189 13d4 9C4F      		sbci r25,-4
 3190 13d6 FC01      		movw r30,r24
 3191 13d8 8081      		ld r24,Z
 3192 13da 9181      		ldd r25,Z+1
 3193 13dc A281      		ldd r26,Z+2
 3194 13de B381      		ldd r27,Z+3
 3195 13e0 2DEC      		ldi r18,lo8(-51)
 3196 13e2 3CEC      		ldi r19,lo8(-52)
 3197 13e4 4CEC      		ldi r20,lo8(-52)
 3198 13e6 5DE3      		ldi r21,lo8(61)
 3199 13e8 BC01      		movw r22,r24
 3200 13ea CD01      		movw r24,r26
 3201 13ec 0E94 0000 		call __mulsf3
 3202 13f0 DC01      		movw r26,r24
 3203 13f2 CB01      		movw r24,r22
 3204 13f4 20E0      		ldi r18,0
 3205 13f6 30E0      		ldi r19,0
 3206 13f8 4AE7      		ldi r20,lo8(122)
 3207 13fa 54E4      		ldi r21,lo8(68)
 3208 13fc BC01      		movw r22,r24
 3209 13fe CD01      		movw r24,r26
 3210 1400 0E94 0000 		call __mulsf3
 3211 1404 DC01      		movw r26,r24
 3212 1406 CB01      		movw r24,r22
 3213 1408 8983      		std Y+1,r24
 3214 140a 9A83      		std Y+2,r25
 3215 140c AB83      		std Y+3,r26
 3216 140e BC83      		std Y+4,r27
 348:lp_solve_5.5/lp_presolve.c ****   /* REAL eps = PRESOLVE_EPSVALUE*pow(10.0,MAX(0,log10(1+fabs(value)))), */
 349:lp_solve_5.5/lp_presolve.c ****   testout = my_precision(value, eps);
 3217               		.loc 2 349 0
 3218 1410 2981      		ldd r18,Y+1
 3219 1412 3A81      		ldd r19,Y+2
 3220 1414 4B81      		ldd r20,Y+3
 3221 1416 5C81      		ldd r21,Y+4
 3222 1418 8B85      		ldd r24,Y+11
 3223 141a 9C85      		ldd r25,Y+12
 3224 141c AD85      		ldd r26,Y+13
 3225 141e BE85      		ldd r27,Y+14
 3226 1420 BC01      		movw r22,r24
 3227 1422 CD01      		movw r24,r26
 3228 1424 0E94 0000 		call restoreINT
 3229 1428 DC01      		movw r26,r24
 3230 142a CB01      		movw r24,r22
 3231 142c 8D83      		std Y+5,r24
 3232 142e 9E83      		std Y+6,r25
 3233 1430 AF83      		std Y+7,r26
 3234 1432 B887      		std Y+8,r27
 350:lp_solve_5.5/lp_presolve.c **** #if 1
 351:lp_solve_5.5/lp_presolve.c ****   if(my_chsign(isGE, value-testout) < 0)
 3235               		.loc 2 351 0
 3236 1434 8F85      		ldd r24,Y+15
 3237 1436 8823      		tst r24
 3238 1438 01F0      		breq .L108
 3239               		.loc 2 351 0 is_stmt 0 discriminator 1
 3240 143a 2D81      		ldd r18,Y+5
 3241 143c 3E81      		ldd r19,Y+6
 3242 143e 4F81      		ldd r20,Y+7
 3243 1440 5885      		ldd r21,Y+8
 3244 1442 6B85      		ldd r22,Y+11
 3245 1444 7C85      		ldd r23,Y+12
 3246 1446 8D85      		ldd r24,Y+13
 3247 1448 9E85      		ldd r25,Y+14
 3248 144a 0E94 0000 		call __subsf3
 3249 144e DC01      		movw r26,r24
 3250 1450 CB01      		movw r24,r22
 3251 1452 20E0      		ldi r18,0
 3252 1454 30E0      		ldi r19,0
 3253 1456 A901      		movw r20,r18
 3254 1458 BC01      		movw r22,r24
 3255 145a CD01      		movw r24,r26
 3256 145c 0E94 0000 		call __nesf2
 3257 1460 8823      		tst r24
 3258 1462 01F0      		breq .L108
 3259               		.loc 2 351 0 discriminator 3
 3260 1464 2D81      		ldd r18,Y+5
 3261 1466 3E81      		ldd r19,Y+6
 3262 1468 4F81      		ldd r20,Y+7
 3263 146a 5885      		ldd r21,Y+8
 3264 146c 6B85      		ldd r22,Y+11
 3265 146e 7C85      		ldd r23,Y+12
 3266 1470 8D85      		ldd r24,Y+13
 3267 1472 9E85      		ldd r25,Y+14
 3268 1474 0E94 0000 		call __subsf3
 3269 1478 DC01      		movw r26,r24
 3270 147a CB01      		movw r24,r22
 3271 147c 11E0      		ldi r17,lo8(1)
 3272 147e 20E0      		ldi r18,0
 3273 1480 30E0      		ldi r19,0
 3274 1482 A901      		movw r20,r18
 3275 1484 BC01      		movw r22,r24
 3276 1486 CD01      		movw r24,r26
 3277 1488 0E94 0000 		call __gtsf2
 3278 148c 1816      		cp __zero_reg__,r24
 3279 148e 04F0      		brlt .L111
 3280 1490 10E0      		ldi r17,0
 3281 1492 00C0      		rjmp .L111
 3282               	.L108:
 3283               		.loc 2 351 0 discriminator 4
 3284 1494 2D81      		ldd r18,Y+5
 3285 1496 3E81      		ldd r19,Y+6
 3286 1498 4F81      		ldd r20,Y+7
 3287 149a 5885      		ldd r21,Y+8
 3288 149c 6B85      		ldd r22,Y+11
 3289 149e 7C85      		ldd r23,Y+12
 3290 14a0 8D85      		ldd r24,Y+13
 3291 14a2 9E85      		ldd r25,Y+14
 3292 14a4 0E94 0000 		call __subsf3
 3293 14a8 DC01      		movw r26,r24
 3294 14aa CB01      		movw r24,r22
 3295 14ac 11E0      		ldi r17,lo8(1)
 3296 14ae 20E0      		ldi r18,0
 3297 14b0 30E0      		ldi r19,0
 3298 14b2 A901      		movw r20,r18
 3299 14b4 BC01      		movw r22,r24
 3300 14b6 CD01      		movw r24,r26
 3301 14b8 0E94 0000 		call __ltsf2
 3302 14bc 8823      		tst r24
 3303 14be 04F0      		brlt .L111
 3304 14c0 10E0      		ldi r17,0
 3305               	.L111:
 3306               		.loc 2 351 0 discriminator 6
 3307 14c2 1123      		tst r17
 3308 14c4 01F0      		breq .L113
 352:lp_solve_5.5/lp_presolve.c ****     value = testout;
 3309               		.loc 2 352 0 is_stmt 1
 3310 14c6 8D81      		ldd r24,Y+5
 3311 14c8 9E81      		ldd r25,Y+6
 3312 14ca AF81      		ldd r26,Y+7
 3313 14cc B885      		ldd r27,Y+8
 3314 14ce 8B87      		std Y+11,r24
 3315 14d0 9C87      		std Y+12,r25
 3316 14d2 AD87      		std Y+13,r26
 3317 14d4 BE87      		std Y+14,r27
 3318               	.L113:
 353:lp_solve_5.5/lp_presolve.c **** #elif 0
 354:lp_solve_5.5/lp_presolve.c ****   if(my_chsign(isGE, value-testout) < 0)
 355:lp_solve_5.5/lp_presolve.c ****     value = testout;
 356:lp_solve_5.5/lp_presolve.c ****   else if(value != testout)
 357:lp_solve_5.5/lp_presolve.c ****     value += my_chsign(isGE, (value-testout)/2);
 358:lp_solve_5.5/lp_presolve.c ****     /* value = testout + my_chsign(isGE, (value-testout)/2); */
 359:lp_solve_5.5/lp_presolve.c **** #else
 360:lp_solve_5.5/lp_presolve.c ****   if(testout != value)
 361:lp_solve_5.5/lp_presolve.c ****     value += my_chsign(isGE, eps*1000);              /* BASE OPTION */
 362:lp_solve_5.5/lp_presolve.c **** #endif
 363:lp_solve_5.5/lp_presolve.c **** 
 364:lp_solve_5.5/lp_presolve.c **** #endif
 365:lp_solve_5.5/lp_presolve.c ****   return( value );
 3319               		.loc 2 365 0
 3320 14d6 8B85      		ldd r24,Y+11
 3321 14d8 9C85      		ldd r25,Y+12
 3322 14da AD85      		ldd r26,Y+13
 3323 14dc BE85      		ldd r27,Y+14
 366:lp_solve_5.5/lp_presolve.c **** }
 3324               		.loc 2 366 0
 3325 14de BC01      		movw r22,r24
 3326 14e0 CD01      		movw r24,r26
 3327               	/* epilogue start */
 3328 14e2 2F96      		adiw r28,15
 3329 14e4 0FB6      		in __tmp_reg__,__SREG__
 3330 14e6 F894      		cli
 3331 14e8 DEBF      		out __SP_H__,r29
 3332 14ea 0FBE      		out __SREG__,__tmp_reg__
 3333 14ec CDBF      		out __SP_L__,r28
 3334 14ee DF91      		pop r29
 3335 14f0 CF91      		pop r28
 3336 14f2 1F91      		pop r17
 3337 14f4 0895      		ret
 3338               		.cfi_endproc
 3339               	.LFE19:
 3342               	presolve_roundval:
 3343               	.LFB20:
 367:lp_solve_5.5/lp_presolve.c **** 
 368:lp_solve_5.5/lp_presolve.c **** INLINE REAL presolve_roundval(lprec *lp, REAL value)
 369:lp_solve_5.5/lp_presolve.c **** {
 3344               		.loc 2 369 0
 3345               		.cfi_startproc
 3346 14f6 CF93      		push r28
 3347               	.LCFI65:
 3348               		.cfi_def_cfa_offset 3
 3349               		.cfi_offset 28, -2
 3350 14f8 DF93      		push r29
 3351               	.LCFI66:
 3352               		.cfi_def_cfa_offset 4
 3353               		.cfi_offset 29, -3
 3354 14fa 00D0      		rcall .
 3355 14fc 00D0      		rcall .
 3356 14fe 00D0      		rcall .
 3357               	.LCFI67:
 3358               		.cfi_def_cfa_offset 10
 3359 1500 CDB7      		in r28,__SP_L__
 3360 1502 DEB7      		in r29,__SP_H__
 3361               	.LCFI68:
 3362               		.cfi_def_cfa_register 28
 3363               	/* prologue: function */
 3364               	/* frame size = 6 */
 3365               	/* stack size = 8 */
 3366               	.L__stack_usage = 8
 3367 1504 9A83      		std Y+2,r25
 3368 1506 8983      		std Y+1,r24
 3369 1508 4B83      		std Y+3,r20
 3370 150a 5C83      		std Y+4,r21
 3371 150c 6D83      		std Y+5,r22
 3372 150e 7E83      		std Y+6,r23
 370:lp_solve_5.5/lp_presolve.c **** #ifdef DoPresolveRounding
 371:lp_solve_5.5/lp_presolve.c ****   /* value = my_precision(value, PRESOLVE_EPSVALUE*MAX(1,log10(1+fabs(value)))); */
 372:lp_solve_5.5/lp_presolve.c ****   value = my_precision(value, PRESOLVE_EPSVALUE);    /* BASE OPTION */
 3373               		.loc 2 372 0
 3374 1510 8981      		ldd r24,Y+1
 3375 1512 9A81      		ldd r25,Y+2
 3376 1514 865E      		subi r24,-26
 3377 1516 9C4F      		sbci r25,-4
 3378 1518 FC01      		movw r30,r24
 3379 151a 8081      		ld r24,Z
 3380 151c 9181      		ldd r25,Z+1
 3381 151e A281      		ldd r26,Z+2
 3382 1520 B381      		ldd r27,Z+3
 3383 1522 2DEC      		ldi r18,lo8(-51)
 3384 1524 3CEC      		ldi r19,lo8(-52)
 3385 1526 4CEC      		ldi r20,lo8(-52)
 3386 1528 5DE3      		ldi r21,lo8(61)
 3387 152a BC01      		movw r22,r24
 3388 152c CD01      		movw r24,r26
 3389 152e 0E94 0000 		call __mulsf3
 3390 1532 DC01      		movw r26,r24
 3391 1534 CB01      		movw r24,r22
 3392 1536 9C01      		movw r18,r24
 3393 1538 AD01      		movw r20,r26
 3394 153a 8B81      		ldd r24,Y+3
 3395 153c 9C81      		ldd r25,Y+4
 3396 153e AD81      		ldd r26,Y+5
 3397 1540 BE81      		ldd r27,Y+6
 3398 1542 BC01      		movw r22,r24
 3399 1544 CD01      		movw r24,r26
 3400 1546 0E94 0000 		call restoreINT
 3401 154a DC01      		movw r26,r24
 3402 154c CB01      		movw r24,r22
 3403 154e 8B83      		std Y+3,r24
 3404 1550 9C83      		std Y+4,r25
 3405 1552 AD83      		std Y+5,r26
 3406 1554 BE83      		std Y+6,r27
 373:lp_solve_5.5/lp_presolve.c **** #endif
 374:lp_solve_5.5/lp_presolve.c ****   return( value );
 3407               		.loc 2 374 0
 3408 1556 8B81      		ldd r24,Y+3
 3409 1558 9C81      		ldd r25,Y+4
 3410 155a AD81      		ldd r26,Y+5
 3411 155c BE81      		ldd r27,Y+6
 375:lp_solve_5.5/lp_presolve.c **** }
 3412               		.loc 2 375 0
 3413 155e BC01      		movw r22,r24
 3414 1560 CD01      		movw r24,r26
 3415               	/* epilogue start */
 3416 1562 2696      		adiw r28,6
 3417 1564 0FB6      		in __tmp_reg__,__SREG__
 3418 1566 F894      		cli
 3419 1568 DEBF      		out __SP_H__,r29
 3420 156a 0FBE      		out __SREG__,__tmp_reg__
 3421 156c CDBF      		out __SP_L__,r28
 3422 156e DF91      		pop r29
 3423 1570 CF91      		pop r28
 3424 1572 0895      		ret
 3425               		.cfi_endproc
 3426               	.LFE20:
 3428               	.global	__gesf2
 3430               	presolve_mustupdate:
 3431               	.LFB21:
 376:lp_solve_5.5/lp_presolve.c **** 
 377:lp_solve_5.5/lp_presolve.c **** INLINE MYBOOL presolve_mustupdate(lprec *lp, int colnr)
 378:lp_solve_5.5/lp_presolve.c **** {
 3432               		.loc 2 378 0
 3433               		.cfi_startproc
 3434 1574 CF93      		push r28
 3435               	.LCFI69:
 3436               		.cfi_def_cfa_offset 3
 3437               		.cfi_offset 28, -2
 3438 1576 DF93      		push r29
 3439               	.LCFI70:
 3440               		.cfi_def_cfa_offset 4
 3441               		.cfi_offset 29, -3
 3442 1578 00D0      		rcall .
 3443 157a 00D0      		rcall .
 3444               	.LCFI71:
 3445               		.cfi_def_cfa_offset 8
 3446 157c CDB7      		in r28,__SP_L__
 3447 157e DEB7      		in r29,__SP_H__
 3448               	.LCFI72:
 3449               		.cfi_def_cfa_register 28
 3450               	/* prologue: function */
 3451               	/* frame size = 4 */
 3452               	/* stack size = 6 */
 3453               	.L__stack_usage = 6
 3454 1580 9A83      		std Y+2,r25
 3455 1582 8983      		std Y+1,r24
 3456 1584 7C83      		std Y+4,r23
 3457 1586 6B83      		std Y+3,r22
 379:lp_solve_5.5/lp_presolve.c **** #if 0
 380:lp_solve_5.5/lp_presolve.c ****   return( my_infinite(lp, get_lowbo(lp, colnr)) ||
 381:lp_solve_5.5/lp_presolve.c ****           my_infinite(lp, get_upbo(lp, colnr)) );
 382:lp_solve_5.5/lp_presolve.c **** #else
 383:lp_solve_5.5/lp_presolve.c ****   return( my_infinite(lp, lp->orig_lowbo[lp->rows+colnr]) ||
 3458               		.loc 2 383 0
 3459 1588 8981      		ldd r24,Y+1
 3460 158a 9A81      		ldd r25,Y+2
 3461 158c 8E54      		subi r24,78
 3462 158e 9D4F      		sbci r25,-3
 3463 1590 FC01      		movw r30,r24
 3464 1592 2081      		ld r18,Z
 3465 1594 3181      		ldd r19,Z+1
 3466 1596 8981      		ldd r24,Y+1
 3467 1598 9A81      		ldd r25,Y+2
 3468 159a 8651      		subi r24,22
 3469 159c 9E4F      		sbci r25,-2
 3470 159e FC01      		movw r30,r24
 3471 15a0 4081      		ld r20,Z
 3472 15a2 5181      		ldd r21,Z+1
 3473 15a4 8B81      		ldd r24,Y+3
 3474 15a6 9C81      		ldd r25,Y+4
 3475 15a8 840F      		add r24,r20
 3476 15aa 951F      		adc r25,r21
 3477 15ac 880F      		lsl r24
 3478 15ae 991F      		rol r25
 3479 15b0 880F      		lsl r24
 3480 15b2 991F      		rol r25
 3481 15b4 820F      		add r24,r18
 3482 15b6 931F      		adc r25,r19
 3483 15b8 FC01      		movw r30,r24
 3484 15ba 8081      		ld r24,Z
 3485 15bc 9181      		ldd r25,Z+1
 3486 15be A281      		ldd r26,Z+2
 3487 15c0 B381      		ldd r27,Z+3
 3488 15c2 BF77      		andi r27,0x7f
 3489 15c4 2981      		ldd r18,Y+1
 3490 15c6 3A81      		ldd r19,Y+2
 3491 15c8 265F      		subi r18,-10
 3492 15ca 3C4F      		sbci r19,-4
 3493 15cc F901      		movw r30,r18
 3494 15ce 2081      		ld r18,Z
 3495 15d0 3181      		ldd r19,Z+1
 3496 15d2 4281      		ldd r20,Z+2
 3497 15d4 5381      		ldd r21,Z+3
 3498 15d6 BC01      		movw r22,r24
 3499 15d8 CD01      		movw r24,r26
 3500 15da 0E94 0000 		call __gesf2
 3501 15de 8823      		tst r24
 3502 15e0 04F4      		brge .L119
 384:lp_solve_5.5/lp_presolve.c ****           my_infinite(lp, lp->orig_upbo[lp->rows+colnr]) );
 3503               		.loc 2 384 0 discriminator 2
 3504 15e2 8981      		ldd r24,Y+1
 3505 15e4 9A81      		ldd r25,Y+2
 3506 15e6 8255      		subi r24,82
 3507 15e8 9D4F      		sbci r25,-3
 3508 15ea FC01      		movw r30,r24
 3509 15ec 2081      		ld r18,Z
 3510 15ee 3181      		ldd r19,Z+1
 3511 15f0 8981      		ldd r24,Y+1
 3512 15f2 9A81      		ldd r25,Y+2
 3513 15f4 8651      		subi r24,22
 3514 15f6 9E4F      		sbci r25,-2
 3515 15f8 FC01      		movw r30,r24
 3516 15fa 4081      		ld r20,Z
 3517 15fc 5181      		ldd r21,Z+1
 3518 15fe 8B81      		ldd r24,Y+3
 3519 1600 9C81      		ldd r25,Y+4
 3520 1602 840F      		add r24,r20
 3521 1604 951F      		adc r25,r21
 3522 1606 880F      		lsl r24
 3523 1608 991F      		rol r25
 3524 160a 880F      		lsl r24
 3525 160c 991F      		rol r25
 3526 160e 820F      		add r24,r18
 3527 1610 931F      		adc r25,r19
 3528 1612 FC01      		movw r30,r24
 3529 1614 8081      		ld r24,Z
 3530 1616 9181      		ldd r25,Z+1
 3531 1618 A281      		ldd r26,Z+2
 3532 161a B381      		ldd r27,Z+3
 3533 161c BF77      		andi r27,0x7f
 3534 161e 2981      		ldd r18,Y+1
 3535 1620 3A81      		ldd r19,Y+2
 3536 1622 265F      		subi r18,-10
 3537 1624 3C4F      		sbci r19,-4
 3538 1626 F901      		movw r30,r18
 3539 1628 2081      		ld r18,Z
 3540 162a 3181      		ldd r19,Z+1
 3541 162c 4281      		ldd r20,Z+2
 3542 162e 5381      		ldd r21,Z+3
 383:lp_solve_5.5/lp_presolve.c ****           my_infinite(lp, lp->orig_upbo[lp->rows+colnr]) );
 3543               		.loc 2 383 0 discriminator 2
 3544 1630 BC01      		movw r22,r24
 3545 1632 CD01      		movw r24,r26
 3546 1634 0E94 0000 		call __gesf2
 3547 1638 8823      		tst r24
 3548 163a 04F0      		brlt .L124
 3549               	.L119:
 383:lp_solve_5.5/lp_presolve.c ****           my_infinite(lp, lp->orig_upbo[lp->rows+colnr]) );
 3550               		.loc 2 383 0 is_stmt 0 discriminator 3
 3551 163c 81E0      		ldi r24,lo8(1)
 3552 163e 90E0      		ldi r25,0
 3553 1640 00C0      		rjmp .L122
 3554               	.L124:
 383:lp_solve_5.5/lp_presolve.c ****           my_infinite(lp, lp->orig_upbo[lp->rows+colnr]) );
 3555               		.loc 2 383 0 discriminator 4
 3556 1642 80E0      		ldi r24,0
 3557 1644 90E0      		ldi r25,0
 3558               	.L122:
 3559               	/* epilogue start */
 385:lp_solve_5.5/lp_presolve.c **** #endif
 386:lp_solve_5.5/lp_presolve.c **** }
 3560               		.loc 2 386 0 is_stmt 1 discriminator 6
 3561 1646 0F90      		pop __tmp_reg__
 3562 1648 0F90      		pop __tmp_reg__
 3563 164a 0F90      		pop __tmp_reg__
 3564 164c 0F90      		pop __tmp_reg__
 3565 164e DF91      		pop r29
 3566 1650 CF91      		pop r28
 3567 1652 0895      		ret
 3568               		.cfi_endproc
 3569               	.LFE21:
 3572               	presolve_sumplumin:
 3573               	.LFB22:
 387:lp_solve_5.5/lp_presolve.c **** 
 388:lp_solve_5.5/lp_presolve.c **** INLINE REAL presolve_sumplumin(lprec *lp, int item, psrec *ps, MYBOOL doUpper)
 389:lp_solve_5.5/lp_presolve.c **** {
 3574               		.loc 2 389 0
 3575               		.cfi_startproc
 3576 1654 CF93      		push r28
 3577               	.LCFI73:
 3578               		.cfi_def_cfa_offset 3
 3579               		.cfi_offset 28, -2
 3580 1656 DF93      		push r29
 3581               	.LCFI74:
 3582               		.cfi_def_cfa_offset 4
 3583               		.cfi_offset 29, -3
 3584 1658 CDB7      		in r28,__SP_L__
 3585 165a DEB7      		in r29,__SP_H__
 3586               	.LCFI75:
 3587               		.cfi_def_cfa_register 28
 3588 165c 2B97      		sbiw r28,11
 3589               	.LCFI76:
 3590               		.cfi_def_cfa_offset 15
 3591 165e 0FB6      		in __tmp_reg__,__SREG__
 3592 1660 F894      		cli
 3593 1662 DEBF      		out __SP_H__,r29
 3594 1664 0FBE      		out __SREG__,__tmp_reg__
 3595 1666 CDBF      		out __SP_L__,r28
 3596               	/* prologue: function */
 3597               	/* frame size = 11 */
 3598               	/* stack size = 13 */
 3599               	.L__stack_usage = 13
 3600 1668 9E83      		std Y+6,r25
 3601 166a 8D83      		std Y+5,r24
 3602 166c 7887      		std Y+8,r23
 3603 166e 6F83      		std Y+7,r22
 3604 1670 5A87      		std Y+10,r21
 3605 1672 4987      		std Y+9,r20
 3606 1674 2B87      		std Y+11,r18
 390:lp_solve_5.5/lp_presolve.c ****   REAL *plu = (doUpper ? ps->pluupper : ps->plulower),
 3607               		.loc 2 390 0
 3608 1676 8B85      		ldd r24,Y+11
 3609 1678 8823      		tst r24
 3610 167a 01F0      		breq .L126
 3611               		.loc 2 390 0 is_stmt 0 discriminator 1
 3612 167c 8985      		ldd r24,Y+9
 3613 167e 9A85      		ldd r25,Y+10
 3614 1680 FC01      		movw r30,r24
 3615 1682 8289      		ldd r24,Z+18
 3616 1684 9389      		ldd r25,Z+19
 3617 1686 00C0      		rjmp .L127
 3618               	.L126:
 3619               		.loc 2 390 0 discriminator 2
 3620 1688 8985      		ldd r24,Y+9
 3621 168a 9A85      		ldd r25,Y+10
 3622 168c FC01      		movw r30,r24
 3623 168e 8685      		ldd r24,Z+14
 3624 1690 9785      		ldd r25,Z+15
 3625               	.L127:
 3626               		.loc 2 390 0 discriminator 4
 3627 1692 9A83      		std Y+2,r25
 3628 1694 8983      		std Y+1,r24
 391:lp_solve_5.5/lp_presolve.c ****        *neg = (doUpper ? ps->negupper : ps->neglower);
 3629               		.loc 2 391 0 is_stmt 1 discriminator 4
 3630 1696 8B85      		ldd r24,Y+11
 3631 1698 8823      		tst r24
 3632 169a 01F0      		breq .L128
 3633               		.loc 2 391 0 is_stmt 0 discriminator 1
 3634 169c 8985      		ldd r24,Y+9
 3635 169e 9A85      		ldd r25,Y+10
 3636 16a0 FC01      		movw r30,r24
 3637 16a2 8489      		ldd r24,Z+20
 3638 16a4 9589      		ldd r25,Z+21
 3639 16a6 00C0      		rjmp .L129
 3640               	.L128:
 3641               		.loc 2 391 0 discriminator 2
 3642 16a8 8985      		ldd r24,Y+9
 3643 16aa 9A85      		ldd r25,Y+10
 3644 16ac FC01      		movw r30,r24
 3645 16ae 8089      		ldd r24,Z+16
 3646 16b0 9189      		ldd r25,Z+17
 3647               	.L129:
 3648               		.loc 2 391 0 discriminator 4
 3649 16b2 9C83      		std Y+4,r25
 3650 16b4 8B83      		std Y+3,r24
 392:lp_solve_5.5/lp_presolve.c **** 
 393:lp_solve_5.5/lp_presolve.c ****   if(fabs(plu[item]) >= lp->infinite)
 3651               		.loc 2 393 0 is_stmt 1 discriminator 4
 3652 16b6 8F81      		ldd r24,Y+7
 3653 16b8 9885      		ldd r25,Y+8
 3654 16ba 880F      		lsl r24
 3655 16bc 991F      		rol r25
 3656 16be 880F      		lsl r24
 3657 16c0 991F      		rol r25
 3658 16c2 2981      		ldd r18,Y+1
 3659 16c4 3A81      		ldd r19,Y+2
 3660 16c6 820F      		add r24,r18
 3661 16c8 931F      		adc r25,r19
 3662 16ca FC01      		movw r30,r24
 3663 16cc 8081      		ld r24,Z
 3664 16ce 9181      		ldd r25,Z+1
 3665 16d0 A281      		ldd r26,Z+2
 3666 16d2 B381      		ldd r27,Z+3
 3667 16d4 BF77      		andi r27,0x7f
 3668 16d6 2D81      		ldd r18,Y+5
 3669 16d8 3E81      		ldd r19,Y+6
 3670 16da 265F      		subi r18,-10
 3671 16dc 3C4F      		sbci r19,-4
 3672 16de F901      		movw r30,r18
 3673 16e0 2081      		ld r18,Z
 3674 16e2 3181      		ldd r19,Z+1
 3675 16e4 4281      		ldd r20,Z+2
 3676 16e6 5381      		ldd r21,Z+3
 3677 16e8 BC01      		movw r22,r24
 3678 16ea CD01      		movw r24,r26
 3679 16ec 0E94 0000 		call __gesf2
 3680 16f0 8823      		tst r24
 3681 16f2 04F0      		brlt .L137
 394:lp_solve_5.5/lp_presolve.c ****     return( plu[item] );
 3682               		.loc 2 394 0
 3683 16f4 8F81      		ldd r24,Y+7
 3684 16f6 9885      		ldd r25,Y+8
 3685 16f8 880F      		lsl r24
 3686 16fa 991F      		rol r25
 3687 16fc 880F      		lsl r24
 3688 16fe 991F      		rol r25
 3689 1700 2981      		ldd r18,Y+1
 3690 1702 3A81      		ldd r19,Y+2
 3691 1704 820F      		add r24,r18
 3692 1706 931F      		adc r25,r19
 3693 1708 FC01      		movw r30,r24
 3694 170a 8081      		ld r24,Z
 3695 170c 9181      		ldd r25,Z+1
 3696 170e A281      		ldd r26,Z+2
 3697 1710 B381      		ldd r27,Z+3
 3698 1712 00C0      		rjmp .L132
 3699               	.L137:
 395:lp_solve_5.5/lp_presolve.c ****   else if(fabs(neg[item]) >= lp->infinite)
 3700               		.loc 2 395 0
 3701 1714 8F81      		ldd r24,Y+7
 3702 1716 9885      		ldd r25,Y+8
 3703 1718 880F      		lsl r24
 3704 171a 991F      		rol r25
 3705 171c 880F      		lsl r24
 3706 171e 991F      		rol r25
 3707 1720 2B81      		ldd r18,Y+3
 3708 1722 3C81      		ldd r19,Y+4
 3709 1724 820F      		add r24,r18
 3710 1726 931F      		adc r25,r19
 3711 1728 FC01      		movw r30,r24
 3712 172a 8081      		ld r24,Z
 3713 172c 9181      		ldd r25,Z+1
 3714 172e A281      		ldd r26,Z+2
 3715 1730 B381      		ldd r27,Z+3
 3716 1732 BF77      		andi r27,0x7f
 3717 1734 2D81      		ldd r18,Y+5
 3718 1736 3E81      		ldd r19,Y+6
 3719 1738 265F      		subi r18,-10
 3720 173a 3C4F      		sbci r19,-4
 3721 173c F901      		movw r30,r18
 3722 173e 2081      		ld r18,Z
 3723 1740 3181      		ldd r19,Z+1
 3724 1742 4281      		ldd r20,Z+2
 3725 1744 5381      		ldd r21,Z+3
 3726 1746 BC01      		movw r22,r24
 3727 1748 CD01      		movw r24,r26
 3728 174a 0E94 0000 		call __gesf2
 3729 174e 8823      		tst r24
 3730 1750 04F0      		brlt .L138
 396:lp_solve_5.5/lp_presolve.c ****     return( neg[item] );
 3731               		.loc 2 396 0
 3732 1752 8F81      		ldd r24,Y+7
 3733 1754 9885      		ldd r25,Y+8
 3734 1756 880F      		lsl r24
 3735 1758 991F      		rol r25
 3736 175a 880F      		lsl r24
 3737 175c 991F      		rol r25
 3738 175e 2B81      		ldd r18,Y+3
 3739 1760 3C81      		ldd r19,Y+4
 3740 1762 820F      		add r24,r18
 3741 1764 931F      		adc r25,r19
 3742 1766 FC01      		movw r30,r24
 3743 1768 8081      		ld r24,Z
 3744 176a 9181      		ldd r25,Z+1
 3745 176c A281      		ldd r26,Z+2
 3746 176e B381      		ldd r27,Z+3
 3747 1770 00C0      		rjmp .L132
 3748               	.L138:
 397:lp_solve_5.5/lp_presolve.c ****   else
 398:lp_solve_5.5/lp_presolve.c ****     return( plu[item]+neg[item] );
 3749               		.loc 2 398 0
 3750 1772 8F81      		ldd r24,Y+7
 3751 1774 9885      		ldd r25,Y+8
 3752 1776 880F      		lsl r24
 3753 1778 991F      		rol r25
 3754 177a 880F      		lsl r24
 3755 177c 991F      		rol r25
 3756 177e 2981      		ldd r18,Y+1
 3757 1780 3A81      		ldd r19,Y+2
 3758 1782 820F      		add r24,r18
 3759 1784 931F      		adc r25,r19
 3760 1786 FC01      		movw r30,r24
 3761 1788 8081      		ld r24,Z
 3762 178a 9181      		ldd r25,Z+1
 3763 178c A281      		ldd r26,Z+2
 3764 178e B381      		ldd r27,Z+3
 3765 1790 2F81      		ldd r18,Y+7
 3766 1792 3885      		ldd r19,Y+8
 3767 1794 220F      		lsl r18
 3768 1796 331F      		rol r19
 3769 1798 220F      		lsl r18
 3770 179a 331F      		rol r19
 3771 179c 4B81      		ldd r20,Y+3
 3772 179e 5C81      		ldd r21,Y+4
 3773 17a0 240F      		add r18,r20
 3774 17a2 351F      		adc r19,r21
 3775 17a4 F901      		movw r30,r18
 3776 17a6 2081      		ld r18,Z
 3777 17a8 3181      		ldd r19,Z+1
 3778 17aa 4281      		ldd r20,Z+2
 3779 17ac 5381      		ldd r21,Z+3
 3780 17ae BC01      		movw r22,r24
 3781 17b0 CD01      		movw r24,r26
 3782 17b2 0E94 0000 		call __addsf3
 3783 17b6 DC01      		movw r26,r24
 3784 17b8 CB01      		movw r24,r22
 3785               	.L132:
 399:lp_solve_5.5/lp_presolve.c **** }
 3786               		.loc 2 399 0
 3787 17ba BC01      		movw r22,r24
 3788 17bc CD01      		movw r24,r26
 3789               	/* epilogue start */
 3790 17be 2B96      		adiw r28,11
 3791 17c0 0FB6      		in __tmp_reg__,__SREG__
 3792 17c2 F894      		cli
 3793 17c4 DEBF      		out __SP_H__,r29
 3794 17c6 0FBE      		out __SREG__,__tmp_reg__
 3795 17c8 CDBF      		out __SP_L__,r28
 3796 17ca DF91      		pop r29
 3797 17cc CF91      		pop r28
 3798 17ce 0895      		ret
 3799               		.cfi_endproc
 3800               	.LFE22:
 3803               	presolve_range:
 3804               	.LFB23:
 400:lp_solve_5.5/lp_presolve.c **** 
 401:lp_solve_5.5/lp_presolve.c **** INLINE void presolve_range(lprec *lp, int rownr, psrec *ps, REAL *loValue, REAL *hiValue)
 402:lp_solve_5.5/lp_presolve.c **** {
 3805               		.loc 2 402 0
 3806               		.cfi_startproc
 3807 17d0 0F93      		push r16
 3808               	.LCFI77:
 3809               		.cfi_def_cfa_offset 3
 3810               		.cfi_offset 16, -2
 3811 17d2 1F93      		push r17
 3812               	.LCFI78:
 3813               		.cfi_def_cfa_offset 4
 3814               		.cfi_offset 17, -3
 3815 17d4 CF93      		push r28
 3816               	.LCFI79:
 3817               		.cfi_def_cfa_offset 5
 3818               		.cfi_offset 28, -4
 3819 17d6 DF93      		push r29
 3820               	.LCFI80:
 3821               		.cfi_def_cfa_offset 6
 3822               		.cfi_offset 29, -5
 3823 17d8 CDB7      		in r28,__SP_L__
 3824 17da DEB7      		in r29,__SP_H__
 3825               	.LCFI81:
 3826               		.cfi_def_cfa_register 28
 3827 17dc 2A97      		sbiw r28,10
 3828               	.LCFI82:
 3829               		.cfi_def_cfa_offset 16
 3830 17de 0FB6      		in __tmp_reg__,__SREG__
 3831 17e0 F894      		cli
 3832 17e2 DEBF      		out __SP_H__,r29
 3833 17e4 0FBE      		out __SREG__,__tmp_reg__
 3834 17e6 CDBF      		out __SP_L__,r28
 3835               	/* prologue: function */
 3836               	/* frame size = 10 */
 3837               	/* stack size = 14 */
 3838               	.L__stack_usage = 14
 3839 17e8 9A83      		std Y+2,r25
 3840 17ea 8983      		std Y+1,r24
 3841 17ec 7C83      		std Y+4,r23
 3842 17ee 6B83      		std Y+3,r22
 3843 17f0 5E83      		std Y+6,r21
 3844 17f2 4D83      		std Y+5,r20
 3845 17f4 3887      		std Y+8,r19
 3846 17f6 2F83      		std Y+7,r18
 3847 17f8 1A87      		std Y+10,r17
 3848 17fa 0987      		std Y+9,r16
 403:lp_solve_5.5/lp_presolve.c ****   *loValue = presolve_sumplumin(lp, rownr,   ps, FALSE);
 3849               		.loc 2 403 0
 3850 17fc 4D81      		ldd r20,Y+5
 3851 17fe 5E81      		ldd r21,Y+6
 3852 1800 6B81      		ldd r22,Y+3
 3853 1802 7C81      		ldd r23,Y+4
 3854 1804 8981      		ldd r24,Y+1
 3855 1806 9A81      		ldd r25,Y+2
 3856 1808 20E0      		ldi r18,0
 3857 180a 0E94 0000 		call presolve_sumplumin
 3858 180e DC01      		movw r26,r24
 3859 1810 CB01      		movw r24,r22
 3860 1812 2F81      		ldd r18,Y+7
 3861 1814 3885      		ldd r19,Y+8
 3862 1816 F901      		movw r30,r18
 3863 1818 8083      		st Z,r24
 3864 181a 9183      		std Z+1,r25
 3865 181c A283      		std Z+2,r26
 3866 181e B383      		std Z+3,r27
 404:lp_solve_5.5/lp_presolve.c ****   *hiValue = presolve_sumplumin(lp, rownr,   ps, TRUE);
 3867               		.loc 2 404 0
 3868 1820 4D81      		ldd r20,Y+5
 3869 1822 5E81      		ldd r21,Y+6
 3870 1824 6B81      		ldd r22,Y+3
 3871 1826 7C81      		ldd r23,Y+4
 3872 1828 8981      		ldd r24,Y+1
 3873 182a 9A81      		ldd r25,Y+2
 3874 182c 21E0      		ldi r18,lo8(1)
 3875 182e 0E94 0000 		call presolve_sumplumin
 3876 1832 DC01      		movw r26,r24
 3877 1834 CB01      		movw r24,r22
 3878 1836 2985      		ldd r18,Y+9
 3879 1838 3A85      		ldd r19,Y+10
 3880 183a F901      		movw r30,r18
 3881 183c 8083      		st Z,r24
 3882 183e 9183      		std Z+1,r25
 3883 1840 A283      		std Z+2,r26
 3884 1842 B383      		std Z+3,r27
 405:lp_solve_5.5/lp_presolve.c **** }
 3885               		.loc 2 405 0
 3886 1844 0000      		nop
 3887               	/* epilogue start */
 3888 1846 2A96      		adiw r28,10
 3889 1848 0FB6      		in __tmp_reg__,__SREG__
 3890 184a F894      		cli
 3891 184c DEBF      		out __SP_H__,r29
 3892 184e 0FBE      		out __SREG__,__tmp_reg__
 3893 1850 CDBF      		out __SP_L__,r28
 3894 1852 DF91      		pop r29
 3895 1854 CF91      		pop r28
 3896 1856 1F91      		pop r17
 3897 1858 0F91      		pop r16
 3898 185a 0895      		ret
 3899               		.cfi_endproc
 3900               	.LFE23:
 3902               	.global	presolve_rangeorig
 3904               	presolve_rangeorig:
 3905               	.LFB24:
 406:lp_solve_5.5/lp_presolve.c **** 
 407:lp_solve_5.5/lp_presolve.c **** STATIC void presolve_rangeorig(lprec *lp, int rownr, psrec *ps, REAL *loValue, REAL *hiValue, REAL 
 408:lp_solve_5.5/lp_presolve.c **** {
 3906               		.loc 2 408 0
 3907               		.cfi_startproc
 3908 185c CF92      		push r12
 3909               	.LCFI83:
 3910               		.cfi_def_cfa_offset 3
 3911               		.cfi_offset 12, -2
 3912 185e DF92      		push r13
 3913               	.LCFI84:
 3914               		.cfi_def_cfa_offset 4
 3915               		.cfi_offset 13, -3
 3916 1860 EF92      		push r14
 3917               	.LCFI85:
 3918               		.cfi_def_cfa_offset 5
 3919               		.cfi_offset 14, -4
 3920 1862 FF92      		push r15
 3921               	.LCFI86:
 3922               		.cfi_def_cfa_offset 6
 3923               		.cfi_offset 15, -5
 3924 1864 0F93      		push r16
 3925               	.LCFI87:
 3926               		.cfi_def_cfa_offset 7
 3927               		.cfi_offset 16, -6
 3928 1866 1F93      		push r17
 3929               	.LCFI88:
 3930               		.cfi_def_cfa_offset 8
 3931               		.cfi_offset 17, -7
 3932 1868 CF93      		push r28
 3933               	.LCFI89:
 3934               		.cfi_def_cfa_offset 9
 3935               		.cfi_offset 28, -8
 3936 186a DF93      		push r29
 3937               	.LCFI90:
 3938               		.cfi_def_cfa_offset 10
 3939               		.cfi_offset 29, -9
 3940 186c CDB7      		in r28,__SP_L__
 3941 186e DEB7      		in r29,__SP_H__
 3942               	.LCFI91:
 3943               		.cfi_def_cfa_register 28
 3944 1870 2E97      		sbiw r28,14
 3945               	.LCFI92:
 3946               		.cfi_def_cfa_offset 24
 3947 1872 0FB6      		in __tmp_reg__,__SREG__
 3948 1874 F894      		cli
 3949 1876 DEBF      		out __SP_H__,r29
 3950 1878 0FBE      		out __SREG__,__tmp_reg__
 3951 187a CDBF      		out __SP_L__,r28
 3952               	/* prologue: function */
 3953               	/* frame size = 14 */
 3954               	/* stack size = 22 */
 3955               	.L__stack_usage = 22
 3956 187c 9A83      		std Y+2,r25
 3957 187e 8983      		std Y+1,r24
 3958 1880 7C83      		std Y+4,r23
 3959 1882 6B83      		std Y+3,r22
 3960 1884 5E83      		std Y+6,r21
 3961 1886 4D83      		std Y+5,r20
 3962 1888 3887      		std Y+8,r19
 3963 188a 2F83      		std Y+7,r18
 3964 188c 1A87      		std Y+10,r17
 3965 188e 0987      		std Y+9,r16
 3966 1890 CB86      		std Y+11,r12
 3967 1892 DC86      		std Y+12,r13
 3968 1894 ED86      		std Y+13,r14
 3969 1896 FE86      		std Y+14,r15
 409:lp_solve_5.5/lp_presolve.c ****   delta = my_chsign(is_chsign(lp, rownr), lp->presolve_undo->fixed_rhs[rownr] + delta);
 3970               		.loc 2 409 0
 3971 1898 2B81      		ldd r18,Y+3
 3972 189a 3C81      		ldd r19,Y+4
 3973 189c 8981      		ldd r24,Y+1
 3974 189e 9A81      		ldd r25,Y+2
 3975 18a0 B901      		movw r22,r18
 3976 18a2 0E94 0000 		call is_chsign
 3977 18a6 8823      		tst r24
 3978 18a8 01F4      		brne .+2
 3979 18aa 00C0      		rjmp .L141
 3980               		.loc 2 409 0 is_stmt 0 discriminator 1
 3981 18ac 8981      		ldd r24,Y+1
 3982 18ae 9A81      		ldd r25,Y+2
 3983 18b0 8A59      		subi r24,-102
 3984 18b2 9C4F      		sbci r25,-4
 3985 18b4 FC01      		movw r30,r24
 3986 18b6 8081      		ld r24,Z
 3987 18b8 9181      		ldd r25,Z+1
 3988 18ba FC01      		movw r30,r24
 3989 18bc 2485      		ldd r18,Z+12
 3990 18be 3585      		ldd r19,Z+13
 3991 18c0 8B81      		ldd r24,Y+3
 3992 18c2 9C81      		ldd r25,Y+4
 3993 18c4 880F      		lsl r24
 3994 18c6 991F      		rol r25
 3995 18c8 880F      		lsl r24
 3996 18ca 991F      		rol r25
 3997 18cc 820F      		add r24,r18
 3998 18ce 931F      		adc r25,r19
 3999 18d0 FC01      		movw r30,r24
 4000 18d2 8081      		ld r24,Z
 4001 18d4 9181      		ldd r25,Z+1
 4002 18d6 A281      		ldd r26,Z+2
 4003 18d8 B381      		ldd r27,Z+3
 4004 18da 2B85      		ldd r18,Y+11
 4005 18dc 3C85      		ldd r19,Y+12
 4006 18de 4D85      		ldd r20,Y+13
 4007 18e0 5E85      		ldd r21,Y+14
 4008 18e2 BC01      		movw r22,r24
 4009 18e4 CD01      		movw r24,r26
 4010 18e6 0E94 0000 		call __addsf3
 4011 18ea DC01      		movw r26,r24
 4012 18ec CB01      		movw r24,r22
 4013 18ee 20E0      		ldi r18,0
 4014 18f0 30E0      		ldi r19,0
 4015 18f2 A901      		movw r20,r18
 4016 18f4 BC01      		movw r22,r24
 4017 18f6 CD01      		movw r24,r26
 4018 18f8 0E94 0000 		call __nesf2
 4019 18fc 8823      		tst r24
 4020 18fe 01F0      		breq .L141
 4021               		.loc 2 409 0 discriminator 3
 4022 1900 8981      		ldd r24,Y+1
 4023 1902 9A81      		ldd r25,Y+2
 4024 1904 8A59      		subi r24,-102
 4025 1906 9C4F      		sbci r25,-4
 4026 1908 FC01      		movw r30,r24
 4027 190a 8081      		ld r24,Z
 4028 190c 9181      		ldd r25,Z+1
 4029 190e FC01      		movw r30,r24
 4030 1910 2485      		ldd r18,Z+12
 4031 1912 3585      		ldd r19,Z+13
 4032 1914 8B81      		ldd r24,Y+3
 4033 1916 9C81      		ldd r25,Y+4
 4034 1918 880F      		lsl r24
 4035 191a 991F      		rol r25
 4036 191c 880F      		lsl r24
 4037 191e 991F      		rol r25
 4038 1920 820F      		add r24,r18
 4039 1922 931F      		adc r25,r19
 4040 1924 FC01      		movw r30,r24
 4041 1926 8081      		ld r24,Z
 4042 1928 9181      		ldd r25,Z+1
 4043 192a A281      		ldd r26,Z+2
 4044 192c B381      		ldd r27,Z+3
 4045 192e 2B85      		ldd r18,Y+11
 4046 1930 3C85      		ldd r19,Y+12
 4047 1932 4D85      		ldd r20,Y+13
 4048 1934 5E85      		ldd r21,Y+14
 4049 1936 BC01      		movw r22,r24
 4050 1938 CD01      		movw r24,r26
 4051 193a 0E94 0000 		call __addsf3
 4052 193e DC01      		movw r26,r24
 4053 1940 CB01      		movw r24,r22
 4054 1942 B058      		subi r27,0x80
 4055 1944 00C0      		rjmp .L143
 4056               	.L141:
 4057               		.loc 2 409 0 discriminator 4
 4058 1946 8981      		ldd r24,Y+1
 4059 1948 9A81      		ldd r25,Y+2
 4060 194a 8A59      		subi r24,-102
 4061 194c 9C4F      		sbci r25,-4
 4062 194e FC01      		movw r30,r24
 4063 1950 8081      		ld r24,Z
 4064 1952 9181      		ldd r25,Z+1
 4065 1954 FC01      		movw r30,r24
 4066 1956 2485      		ldd r18,Z+12
 4067 1958 3585      		ldd r19,Z+13
 4068 195a 8B81      		ldd r24,Y+3
 4069 195c 9C81      		ldd r25,Y+4
 4070 195e 880F      		lsl r24
 4071 1960 991F      		rol r25
 4072 1962 880F      		lsl r24
 4073 1964 991F      		rol r25
 4074 1966 820F      		add r24,r18
 4075 1968 931F      		adc r25,r19
 4076 196a FC01      		movw r30,r24
 4077 196c 8081      		ld r24,Z
 4078 196e 9181      		ldd r25,Z+1
 4079 1970 A281      		ldd r26,Z+2
 4080 1972 B381      		ldd r27,Z+3
 4081 1974 2B85      		ldd r18,Y+11
 4082 1976 3C85      		ldd r19,Y+12
 4083 1978 4D85      		ldd r20,Y+13
 4084 197a 5E85      		ldd r21,Y+14
 4085 197c BC01      		movw r22,r24
 4086 197e CD01      		movw r24,r26
 4087 1980 0E94 0000 		call __addsf3
 4088 1984 DC01      		movw r26,r24
 4089 1986 CB01      		movw r24,r22
 4090               	.L143:
 4091               		.loc 2 409 0 discriminator 6
 4092 1988 8B87      		std Y+11,r24
 4093 198a 9C87      		std Y+12,r25
 4094 198c AD87      		std Y+13,r26
 4095 198e BE87      		std Y+14,r27
 410:lp_solve_5.5/lp_presolve.c ****   *loValue = presolve_sumplumin(lp, rownr,   ps, FALSE) + delta;
 4096               		.loc 2 410 0 is_stmt 1 discriminator 6
 4097 1990 4D81      		ldd r20,Y+5
 4098 1992 5E81      		ldd r21,Y+6
 4099 1994 6B81      		ldd r22,Y+3
 4100 1996 7C81      		ldd r23,Y+4
 4101 1998 8981      		ldd r24,Y+1
 4102 199a 9A81      		ldd r25,Y+2
 4103 199c 20E0      		ldi r18,0
 4104 199e 0E94 0000 		call presolve_sumplumin
 4105 19a2 DC01      		movw r26,r24
 4106 19a4 CB01      		movw r24,r22
 4107 19a6 2B85      		ldd r18,Y+11
 4108 19a8 3C85      		ldd r19,Y+12
 4109 19aa 4D85      		ldd r20,Y+13
 4110 19ac 5E85      		ldd r21,Y+14
 4111 19ae BC01      		movw r22,r24
 4112 19b0 CD01      		movw r24,r26
 4113 19b2 0E94 0000 		call __addsf3
 4114 19b6 DC01      		movw r26,r24
 4115 19b8 CB01      		movw r24,r22
 4116 19ba 2F81      		ldd r18,Y+7
 4117 19bc 3885      		ldd r19,Y+8
 4118 19be F901      		movw r30,r18
 4119 19c0 8083      		st Z,r24
 4120 19c2 9183      		std Z+1,r25
 4121 19c4 A283      		std Z+2,r26
 4122 19c6 B383      		std Z+3,r27
 411:lp_solve_5.5/lp_presolve.c ****   *hiValue = presolve_sumplumin(lp, rownr,   ps, TRUE) + delta;
 4123               		.loc 2 411 0 discriminator 6
 4124 19c8 4D81      		ldd r20,Y+5
 4125 19ca 5E81      		ldd r21,Y+6
 4126 19cc 6B81      		ldd r22,Y+3
 4127 19ce 7C81      		ldd r23,Y+4
 4128 19d0 8981      		ldd r24,Y+1
 4129 19d2 9A81      		ldd r25,Y+2
 4130 19d4 21E0      		ldi r18,lo8(1)
 4131 19d6 0E94 0000 		call presolve_sumplumin
 4132 19da DC01      		movw r26,r24
 4133 19dc CB01      		movw r24,r22
 4134 19de 2B85      		ldd r18,Y+11
 4135 19e0 3C85      		ldd r19,Y+12
 4136 19e2 4D85      		ldd r20,Y+13
 4137 19e4 5E85      		ldd r21,Y+14
 4138 19e6 BC01      		movw r22,r24
 4139 19e8 CD01      		movw r24,r26
 4140 19ea 0E94 0000 		call __addsf3
 4141 19ee DC01      		movw r26,r24
 4142 19f0 CB01      		movw r24,r22
 4143 19f2 2985      		ldd r18,Y+9
 4144 19f4 3A85      		ldd r19,Y+10
 4145 19f6 F901      		movw r30,r18
 4146 19f8 8083      		st Z,r24
 4147 19fa 9183      		std Z+1,r25
 4148 19fc A283      		std Z+2,r26
 4149 19fe B383      		std Z+3,r27
 412:lp_solve_5.5/lp_presolve.c **** }
 4150               		.loc 2 412 0 discriminator 6
 4151 1a00 0000      		nop
 4152               	/* epilogue start */
 4153 1a02 2E96      		adiw r28,14
 4154 1a04 0FB6      		in __tmp_reg__,__SREG__
 4155 1a06 F894      		cli
 4156 1a08 DEBF      		out __SP_H__,r29
 4157 1a0a 0FBE      		out __SREG__,__tmp_reg__
 4158 1a0c CDBF      		out __SP_L__,r28
 4159 1a0e DF91      		pop r29
 4160 1a10 CF91      		pop r28
 4161 1a12 1F91      		pop r17
 4162 1a14 0F91      		pop r16
 4163 1a16 FF90      		pop r15
 4164 1a18 EF90      		pop r14
 4165 1a1a DF90      		pop r13
 4166 1a1c CF90      		pop r12
 4167 1a1e 0895      		ret
 4168               		.cfi_endproc
 4169               	.LFE24:
 4171               		.section	.rodata
 4172               	.LC10:
 4173 01f7 7072 6573 		.string	"presolve_rowfeasible: Lower bound infeasibility in %s row %s (%g << %g)\n"
 4173      6F6C 7665 
 4173      5F72 6F77 
 4173      6665 6173 
 4173      6962 6C65 
 4174               	.LC11:
 4175 0240 2020 2020 		.string	"        ...           Input row base used for testing was %s\n"
 4175      2020 2020 
 4175      2E2E 2E20 
 4175      2020 2020 
 4175      2020 2020 
 4176               	.LC12:
 4177 027e 7072 6573 		.string	"presolve_rowfeasible: Upper bound infeasibility in %s row %s (%g >> %g)\n"
 4177      6F6C 7665 
 4177      5F72 6F77 
 4177      6665 6173 
 4177      6962 6C65 
 4178               		.text
 4179               	.global	presolve_rowfeasible
 4181               	presolve_rowfeasible:
 4182               	.LFB25:
 413:lp_solve_5.5/lp_presolve.c **** 
 414:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_rowfeasible(presolverec *psdata, int rownr, MYBOOL userowmap)
 415:lp_solve_5.5/lp_presolve.c **** {
 4183               		.loc 2 415 0
 4184               		.cfi_startproc
 4185 1a20 0F93      		push r16
 4186               	.LCFI93:
 4187               		.cfi_def_cfa_offset 3
 4188               		.cfi_offset 16, -2
 4189 1a22 1F93      		push r17
 4190               	.LCFI94:
 4191               		.cfi_def_cfa_offset 4
 4192               		.cfi_offset 17, -3
 4193 1a24 CF93      		push r28
 4194               	.LCFI95:
 4195               		.cfi_def_cfa_offset 5
 4196               		.cfi_offset 28, -4
 4197 1a26 DF93      		push r29
 4198               	.LCFI96:
 4199               		.cfi_def_cfa_offset 6
 4200               		.cfi_offset 29, -5
 4201 1a28 CDB7      		in r28,__SP_L__
 4202 1a2a DEB7      		in r29,__SP_H__
 4203               	.LCFI97:
 4204               		.cfi_def_cfa_register 28
 4205 1a2c 6897      		sbiw r28,24
 4206               	.LCFI98:
 4207               		.cfi_def_cfa_offset 30
 4208 1a2e 0FB6      		in __tmp_reg__,__SREG__
 4209 1a30 F894      		cli
 4210 1a32 DEBF      		out __SP_H__,r29
 4211 1a34 0FBE      		out __SREG__,__tmp_reg__
 4212 1a36 CDBF      		out __SP_L__,r28
 4213               	/* prologue: function */
 4214               	/* frame size = 24 */
 4215               	/* stack size = 28 */
 4216               	.L__stack_usage = 28
 4217 1a38 9D8B      		std Y+21,r25
 4218 1a3a 8C8B      		std Y+20,r24
 4219 1a3c 7F8B      		std Y+23,r23
 4220 1a3e 6E8B      		std Y+22,r22
 4221 1a40 488F      		std Y+24,r20
 416:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 4222               		.loc 2 416 0
 4223 1a42 8C89      		ldd r24,Y+20
 4224 1a44 9D89      		ldd r25,Y+21
 4225 1a46 FC01      		movw r30,r24
 4226 1a48 8289      		ldd r24,Z+18
 4227 1a4a 9389      		ldd r25,Z+19
 4228 1a4c 9B83      		std Y+3,r25
 4229 1a4e 8A83      		std Y+2,r24
 417:lp_solve_5.5/lp_presolve.c ****   MYBOOL   status = TRUE;
 4230               		.loc 2 417 0
 4231 1a50 81E0      		ldi r24,lo8(1)
 4232 1a52 8983      		std Y+1,r24
 418:lp_solve_5.5/lp_presolve.c ****   int      contype, origrownr = rownr;
 4233               		.loc 2 418 0
 4234 1a54 8E89      		ldd r24,Y+22
 4235 1a56 9F89      		ldd r25,Y+23
 4236 1a58 9D83      		std Y+5,r25
 4237 1a5a 8C83      		std Y+4,r24
 419:lp_solve_5.5/lp_presolve.c ****   REAL     LHS, RHS, value;
 420:lp_solve_5.5/lp_presolve.c **** 
 421:lp_solve_5.5/lp_presolve.c ****   /* Optionally loop across all active rows in the provided map (debugging) */
 422:lp_solve_5.5/lp_presolve.c ****   if(userowmap)
 4238               		.loc 2 422 0
 4239 1a5c 888D      		ldd r24,Y+24
 4240 1a5e 8823      		tst r24
 4241 1a60 01F4      		brne .+2
 4242 1a62 00C0      		rjmp .L147
 423:lp_solve_5.5/lp_presolve.c ****     rownr = firstActiveLink(psdata->rows->varmap);
 4243               		.loc 2 423 0
 4244 1a64 8C89      		ldd r24,Y+20
 4245 1a66 9D89      		ldd r25,Y+21
 4246 1a68 FC01      		movw r30,r24
 4247 1a6a 8081      		ld r24,Z
 4248 1a6c 9181      		ldd r25,Z+1
 4249 1a6e FC01      		movw r30,r24
 4250 1a70 8081      		ld r24,Z
 4251 1a72 9181      		ldd r25,Z+1
 4252 1a74 0E94 0000 		call firstActiveLink
 4253 1a78 9F8B      		std Y+23,r25
 4254 1a7a 8E8B      		std Y+22,r24
 424:lp_solve_5.5/lp_presolve.c **** 
 425:lp_solve_5.5/lp_presolve.c ****   /* Now do once for ingoing rownr or loop across rowmap */
 426:lp_solve_5.5/lp_presolve.c ****   while((status == TRUE) && (rownr != 0)) {
 4255               		.loc 2 426 0
 4256 1a7c 00C0      		rjmp .L147
 4257               	.L155:
 427:lp_solve_5.5/lp_presolve.c **** 
 428:lp_solve_5.5/lp_presolve.c ****     /* Check the lower bound */
 429:lp_solve_5.5/lp_presolve.c ****     value = presolve_sumplumin(lp, rownr, psdata->rows, TRUE);
 4258               		.loc 2 429 0
 4259 1a7e 8C89      		ldd r24,Y+20
 4260 1a80 9D89      		ldd r25,Y+21
 4261 1a82 FC01      		movw r30,r24
 4262 1a84 4081      		ld r20,Z
 4263 1a86 5181      		ldd r21,Z+1
 4264 1a88 6E89      		ldd r22,Y+22
 4265 1a8a 7F89      		ldd r23,Y+23
 4266 1a8c 8A81      		ldd r24,Y+2
 4267 1a8e 9B81      		ldd r25,Y+3
 4268 1a90 21E0      		ldi r18,lo8(1)
 4269 1a92 0E94 0000 		call presolve_sumplumin
 4270 1a96 DC01      		movw r26,r24
 4271 1a98 CB01      		movw r24,r22
 4272 1a9a 8E83      		std Y+6,r24
 4273 1a9c 9F83      		std Y+7,r25
 4274 1a9e A887      		std Y+8,r26
 4275 1aa0 B987      		std Y+9,r27
 430:lp_solve_5.5/lp_presolve.c ****     LHS = get_rh_lower(lp, rownr);
 4276               		.loc 2 430 0
 4277 1aa2 2E89      		ldd r18,Y+22
 4278 1aa4 3F89      		ldd r19,Y+23
 4279 1aa6 8A81      		ldd r24,Y+2
 4280 1aa8 9B81      		ldd r25,Y+3
 4281 1aaa B901      		movw r22,r18
 4282 1aac 0E94 0000 		call get_rh_lower
 4283 1ab0 DC01      		movw r26,r24
 4284 1ab2 CB01      		movw r24,r22
 4285 1ab4 8A87      		std Y+10,r24
 4286 1ab6 9B87      		std Y+11,r25
 4287 1ab8 AC87      		std Y+12,r26
 4288 1aba BD87      		std Y+13,r27
 431:lp_solve_5.5/lp_presolve.c ****     if(value < LHS-lp->epssolution) {
 4289               		.loc 2 431 0
 4290 1abc 8A81      		ldd r24,Y+2
 4291 1abe 9B81      		ldd r25,Y+3
 4292 1ac0 865D      		subi r24,-42
 4293 1ac2 9C4F      		sbci r25,-4
 4294 1ac4 FC01      		movw r30,r24
 4295 1ac6 8081      		ld r24,Z
 4296 1ac8 9181      		ldd r25,Z+1
 4297 1aca A281      		ldd r26,Z+2
 4298 1acc B381      		ldd r27,Z+3
 4299 1ace 9C01      		movw r18,r24
 4300 1ad0 AD01      		movw r20,r26
 4301 1ad2 6A85      		ldd r22,Y+10
 4302 1ad4 7B85      		ldd r23,Y+11
 4303 1ad6 8C85      		ldd r24,Y+12
 4304 1ad8 9D85      		ldd r25,Y+13
 4305 1ada 0E94 0000 		call __subsf3
 4306 1ade DC01      		movw r26,r24
 4307 1ae0 CB01      		movw r24,r22
 4308 1ae2 2E81      		ldd r18,Y+6
 4309 1ae4 3F81      		ldd r19,Y+7
 4310 1ae6 4885      		ldd r20,Y+8
 4311 1ae8 5985      		ldd r21,Y+9
 4312 1aea BC01      		movw r22,r24
 4313 1aec CD01      		movw r24,r26
 4314 1aee 0E94 0000 		call __gtsf2
 4315 1af2 1816      		cp __zero_reg__,r24
 4316 1af4 04F0      		brlt .+2
 4317 1af6 00C0      		rjmp .L148
 432:lp_solve_5.5/lp_presolve.c ****       contype = get_constr_type(lp, rownr);
 4318               		.loc 2 432 0
 4319 1af8 2E89      		ldd r18,Y+22
 4320 1afa 3F89      		ldd r19,Y+23
 4321 1afc 8A81      		ldd r24,Y+2
 4322 1afe 9B81      		ldd r25,Y+3
 4323 1b00 B901      		movw r22,r18
 4324 1b02 0E94 0000 		call get_constr_type
 4325 1b06 9F87      		std Y+15,r25
 4326 1b08 8E87      		std Y+14,r24
 433:lp_solve_5.5/lp_presolve.c ****       report(lp, NORMAL, "presolve_rowfeasible: Lower bound infeasibility in %s row %s (%g << %g)\n
 4327               		.loc 2 433 0
 4328 1b0a 2E89      		ldd r18,Y+22
 4329 1b0c 3F89      		ldd r19,Y+23
 4330 1b0e 8A81      		ldd r24,Y+2
 4331 1b10 9B81      		ldd r25,Y+3
 4332 1b12 B901      		movw r22,r18
 4333 1b14 0E94 0000 		call get_row_name
 4334 1b18 8C01      		movw r16,r24
 4335 1b1a 2E85      		ldd r18,Y+14
 4336 1b1c 3F85      		ldd r19,Y+15
 4337 1b1e 8A81      		ldd r24,Y+2
 4338 1b20 9B81      		ldd r25,Y+3
 4339 1b22 B901      		movw r22,r18
 4340 1b24 0E94 0000 		call get_str_constr_type
 4341 1b28 2D85      		ldd r18,Y+13
 4342 1b2a 2F93      		push r18
 4343 1b2c 2C85      		ldd r18,Y+12
 4344 1b2e 2F93      		push r18
 4345 1b30 2B85      		ldd r18,Y+11
 4346 1b32 2F93      		push r18
 4347 1b34 2A85      		ldd r18,Y+10
 4348 1b36 2F93      		push r18
 4349 1b38 2985      		ldd r18,Y+9
 4350 1b3a 2F93      		push r18
 4351 1b3c 2885      		ldd r18,Y+8
 4352 1b3e 2F93      		push r18
 4353 1b40 2F81      		ldd r18,Y+7
 4354 1b42 2F93      		push r18
 4355 1b44 2E81      		ldd r18,Y+6
 4356 1b46 2F93      		push r18
 4357 1b48 212F      		mov r18,r17
 4358 1b4a 2F93      		push r18
 4359 1b4c 202F      		mov r18,r16
 4360 1b4e 2F93      		push r18
 4361 1b50 292F      		mov r18,r25
 4362 1b52 2F93      		push r18
 4363 1b54 8F93      		push r24
 4364 1b56 80E0      		ldi r24,lo8(.LC10)
 4365 1b58 90E0      		ldi r25,hi8(.LC10)
 4366 1b5a 892F      		mov r24,r25
 4367 1b5c 8F93      		push r24
 4368 1b5e 80E0      		ldi r24,lo8(.LC10)
 4369 1b60 90E0      		ldi r25,hi8(.LC10)
 4370 1b62 8F93      		push r24
 4371 1b64 1F92      		push __zero_reg__
 4372 1b66 84E0      		ldi r24,lo8(4)
 4373 1b68 8F93      		push r24
 4374 1b6a 8B81      		ldd r24,Y+3
 4375 1b6c 8F93      		push r24
 4376 1b6e 8A81      		ldd r24,Y+2
 4377 1b70 8F93      		push r24
 4378 1b72 0E94 0000 		call report
 4379 1b76 8DB7      		in r24,__SP_L__
 4380 1b78 9EB7      		in r25,__SP_H__
 4381 1b7a 4296      		adiw r24,18
 4382 1b7c 0FB6      		in __tmp_reg__,__SREG__
 4383 1b7e F894      		cli
 4384 1b80 DEBF      		out __SP_H__,r29
 4385 1b82 0FBE      		out __SREG__,__tmp_reg__
 4386 1b84 CDBF      		out __SP_L__,r28
 434:lp_solve_5.5/lp_presolve.c ****                           get_str_constr_type(lp, contype), get_row_name(lp, rownr), value, LHS);
 435:lp_solve_5.5/lp_presolve.c ****       if(rownr != origrownr)
 4387               		.loc 2 435 0
 4388 1b86 2E89      		ldd r18,Y+22
 4389 1b88 3F89      		ldd r19,Y+23
 4390 1b8a 8C81      		ldd r24,Y+4
 4391 1b8c 9D81      		ldd r25,Y+5
 4392 1b8e 2817      		cp r18,r24
 4393 1b90 3907      		cpc r19,r25
 4394 1b92 01F0      		breq .L150
 436:lp_solve_5.5/lp_presolve.c ****       report(lp, NORMAL, "        ...           Input row base used for testing was %s\n",
 4395               		.loc 2 436 0
 4396 1b94 2C81      		ldd r18,Y+4
 4397 1b96 3D81      		ldd r19,Y+5
 4398 1b98 8A81      		ldd r24,Y+2
 4399 1b9a 9B81      		ldd r25,Y+3
 4400 1b9c B901      		movw r22,r18
 4401 1b9e 0E94 0000 		call get_row_name
 4402 1ba2 292F      		mov r18,r25
 4403 1ba4 2F93      		push r18
 4404 1ba6 8F93      		push r24
 4405 1ba8 80E0      		ldi r24,lo8(.LC11)
 4406 1baa 90E0      		ldi r25,hi8(.LC11)
 4407 1bac 892F      		mov r24,r25
 4408 1bae 8F93      		push r24
 4409 1bb0 80E0      		ldi r24,lo8(.LC11)
 4410 1bb2 90E0      		ldi r25,hi8(.LC11)
 4411 1bb4 8F93      		push r24
 4412 1bb6 1F92      		push __zero_reg__
 4413 1bb8 84E0      		ldi r24,lo8(4)
 4414 1bba 8F93      		push r24
 4415 1bbc 8B81      		ldd r24,Y+3
 4416 1bbe 8F93      		push r24
 4417 1bc0 8A81      		ldd r24,Y+2
 4418 1bc2 8F93      		push r24
 4419 1bc4 0E94 0000 		call report
 4420 1bc8 EDB7      		in r30,__SP_L__
 4421 1bca FEB7      		in r31,__SP_H__
 4422 1bcc 3896      		adiw r30,8
 4423 1bce 0FB6      		in __tmp_reg__,__SREG__
 4424 1bd0 F894      		cli
 4425 1bd2 DEBF      		out __SP_H__,r29
 4426 1bd4 0FBE      		out __SREG__,__tmp_reg__
 4427 1bd6 CDBF      		out __SP_L__,r28
 4428               	.L150:
 437:lp_solve_5.5/lp_presolve.c ****                                                     get_row_name(lp, origrownr));
 438:lp_solve_5.5/lp_presolve.c ****       status = FALSE;
 4429               		.loc 2 438 0
 4430 1bd8 1982      		std Y+1,__zero_reg__
 4431               	.L148:
 439:lp_solve_5.5/lp_presolve.c ****     }
 440:lp_solve_5.5/lp_presolve.c **** 
 441:lp_solve_5.5/lp_presolve.c ****     /* Check the upper bound */
 442:lp_solve_5.5/lp_presolve.c ****     value = presolve_sumplumin(lp, rownr, psdata->rows, FALSE);
 4432               		.loc 2 442 0
 4433 1bda 8C89      		ldd r24,Y+20
 4434 1bdc 9D89      		ldd r25,Y+21
 4435 1bde FC01      		movw r30,r24
 4436 1be0 4081      		ld r20,Z
 4437 1be2 5181      		ldd r21,Z+1
 4438 1be4 6E89      		ldd r22,Y+22
 4439 1be6 7F89      		ldd r23,Y+23
 4440 1be8 8A81      		ldd r24,Y+2
 4441 1bea 9B81      		ldd r25,Y+3
 4442 1bec 20E0      		ldi r18,0
 4443 1bee 0E94 0000 		call presolve_sumplumin
 4444 1bf2 DC01      		movw r26,r24
 4445 1bf4 CB01      		movw r24,r22
 4446 1bf6 8E83      		std Y+6,r24
 4447 1bf8 9F83      		std Y+7,r25
 4448 1bfa A887      		std Y+8,r26
 4449 1bfc B987      		std Y+9,r27
 443:lp_solve_5.5/lp_presolve.c ****     RHS = get_rh_upper(lp, rownr);
 4450               		.loc 2 443 0
 4451 1bfe 2E89      		ldd r18,Y+22
 4452 1c00 3F89      		ldd r19,Y+23
 4453 1c02 8A81      		ldd r24,Y+2
 4454 1c04 9B81      		ldd r25,Y+3
 4455 1c06 B901      		movw r22,r18
 4456 1c08 0E94 0000 		call get_rh_upper
 4457 1c0c DC01      		movw r26,r24
 4458 1c0e CB01      		movw r24,r22
 4459 1c10 888B      		std Y+16,r24
 4460 1c12 998B      		std Y+17,r25
 4461 1c14 AA8B      		std Y+18,r26
 4462 1c16 BB8B      		std Y+19,r27
 444:lp_solve_5.5/lp_presolve.c ****     if(value > RHS+lp->epssolution) {
 4463               		.loc 2 444 0
 4464 1c18 8A81      		ldd r24,Y+2
 4465 1c1a 9B81      		ldd r25,Y+3
 4466 1c1c 865D      		subi r24,-42
 4467 1c1e 9C4F      		sbci r25,-4
 4468 1c20 FC01      		movw r30,r24
 4469 1c22 8081      		ld r24,Z
 4470 1c24 9181      		ldd r25,Z+1
 4471 1c26 A281      		ldd r26,Z+2
 4472 1c28 B381      		ldd r27,Z+3
 4473 1c2a 2889      		ldd r18,Y+16
 4474 1c2c 3989      		ldd r19,Y+17
 4475 1c2e 4A89      		ldd r20,Y+18
 4476 1c30 5B89      		ldd r21,Y+19
 4477 1c32 BC01      		movw r22,r24
 4478 1c34 CD01      		movw r24,r26
 4479 1c36 0E94 0000 		call __addsf3
 4480 1c3a DC01      		movw r26,r24
 4481 1c3c CB01      		movw r24,r22
 4482 1c3e 2E81      		ldd r18,Y+6
 4483 1c40 3F81      		ldd r19,Y+7
 4484 1c42 4885      		ldd r20,Y+8
 4485 1c44 5985      		ldd r21,Y+9
 4486 1c46 BC01      		movw r22,r24
 4487 1c48 CD01      		movw r24,r26
 4488 1c4a 0E94 0000 		call __ltsf2
 4489 1c4e 8823      		tst r24
 4490 1c50 04F0      		brlt .+2
 4491 1c52 00C0      		rjmp .L151
 445:lp_solve_5.5/lp_presolve.c ****       contype = get_constr_type(lp, rownr);
 4492               		.loc 2 445 0
 4493 1c54 2E89      		ldd r18,Y+22
 4494 1c56 3F89      		ldd r19,Y+23
 4495 1c58 8A81      		ldd r24,Y+2
 4496 1c5a 9B81      		ldd r25,Y+3
 4497 1c5c B901      		movw r22,r18
 4498 1c5e 0E94 0000 		call get_constr_type
 4499 1c62 9F87      		std Y+15,r25
 4500 1c64 8E87      		std Y+14,r24
 446:lp_solve_5.5/lp_presolve.c ****       report(lp, NORMAL, "presolve_rowfeasible: Upper bound infeasibility in %s row %s (%g >> %g)\n
 4501               		.loc 2 446 0
 4502 1c66 2E89      		ldd r18,Y+22
 4503 1c68 3F89      		ldd r19,Y+23
 4504 1c6a 8A81      		ldd r24,Y+2
 4505 1c6c 9B81      		ldd r25,Y+3
 4506 1c6e B901      		movw r22,r18
 4507 1c70 0E94 0000 		call get_row_name
 4508 1c74 8C01      		movw r16,r24
 4509 1c76 2E85      		ldd r18,Y+14
 4510 1c78 3F85      		ldd r19,Y+15
 4511 1c7a 8A81      		ldd r24,Y+2
 4512 1c7c 9B81      		ldd r25,Y+3
 4513 1c7e B901      		movw r22,r18
 4514 1c80 0E94 0000 		call get_str_constr_type
 4515 1c84 2B89      		ldd r18,Y+19
 4516 1c86 2F93      		push r18
 4517 1c88 2A89      		ldd r18,Y+18
 4518 1c8a 2F93      		push r18
 4519 1c8c 2989      		ldd r18,Y+17
 4520 1c8e 2F93      		push r18
 4521 1c90 2889      		ldd r18,Y+16
 4522 1c92 2F93      		push r18
 4523 1c94 2985      		ldd r18,Y+9
 4524 1c96 2F93      		push r18
 4525 1c98 2885      		ldd r18,Y+8
 4526 1c9a 2F93      		push r18
 4527 1c9c 2F81      		ldd r18,Y+7
 4528 1c9e 2F93      		push r18
 4529 1ca0 2E81      		ldd r18,Y+6
 4530 1ca2 2F93      		push r18
 4531 1ca4 212F      		mov r18,r17
 4532 1ca6 2F93      		push r18
 4533 1ca8 202F      		mov r18,r16
 4534 1caa 2F93      		push r18
 4535 1cac 292F      		mov r18,r25
 4536 1cae 2F93      		push r18
 4537 1cb0 8F93      		push r24
 4538 1cb2 80E0      		ldi r24,lo8(.LC12)
 4539 1cb4 90E0      		ldi r25,hi8(.LC12)
 4540 1cb6 892F      		mov r24,r25
 4541 1cb8 8F93      		push r24
 4542 1cba 80E0      		ldi r24,lo8(.LC12)
 4543 1cbc 90E0      		ldi r25,hi8(.LC12)
 4544 1cbe 8F93      		push r24
 4545 1cc0 1F92      		push __zero_reg__
 4546 1cc2 84E0      		ldi r24,lo8(4)
 4547 1cc4 8F93      		push r24
 4548 1cc6 8B81      		ldd r24,Y+3
 4549 1cc8 8F93      		push r24
 4550 1cca 8A81      		ldd r24,Y+2
 4551 1ccc 8F93      		push r24
 4552 1cce 0E94 0000 		call report
 4553 1cd2 8DB7      		in r24,__SP_L__
 4554 1cd4 9EB7      		in r25,__SP_H__
 4555 1cd6 4296      		adiw r24,18
 4556 1cd8 0FB6      		in __tmp_reg__,__SREG__
 4557 1cda F894      		cli
 4558 1cdc DEBF      		out __SP_H__,r29
 4559 1cde 0FBE      		out __SREG__,__tmp_reg__
 4560 1ce0 CDBF      		out __SP_L__,r28
 447:lp_solve_5.5/lp_presolve.c ****                           get_str_constr_type(lp, contype), get_row_name(lp, rownr), value, RHS);
 448:lp_solve_5.5/lp_presolve.c ****       status = FALSE;
 4561               		.loc 2 448 0
 4562 1ce2 1982      		std Y+1,__zero_reg__
 4563               	.L151:
 449:lp_solve_5.5/lp_presolve.c ****     }
 450:lp_solve_5.5/lp_presolve.c ****     if(userowmap)
 4564               		.loc 2 450 0
 4565 1ce4 888D      		ldd r24,Y+24
 4566 1ce6 8823      		tst r24
 4567 1ce8 01F0      		breq .L153
 451:lp_solve_5.5/lp_presolve.c ****       rownr = nextActiveLink(psdata->rows->varmap, rownr);
 4568               		.loc 2 451 0
 4569 1cea 8C89      		ldd r24,Y+20
 4570 1cec 9D89      		ldd r25,Y+21
 4571 1cee FC01      		movw r30,r24
 4572 1cf0 8081      		ld r24,Z
 4573 1cf2 9181      		ldd r25,Z+1
 4574 1cf4 FC01      		movw r30,r24
 4575 1cf6 8081      		ld r24,Z
 4576 1cf8 9181      		ldd r25,Z+1
 4577 1cfa 2E89      		ldd r18,Y+22
 4578 1cfc 3F89      		ldd r19,Y+23
 4579 1cfe B901      		movw r22,r18
 4580 1d00 0E94 0000 		call nextActiveLink
 4581 1d04 9F8B      		std Y+23,r25
 4582 1d06 8E8B      		std Y+22,r24
 4583 1d08 00C0      		rjmp .L147
 4584               	.L153:
 452:lp_solve_5.5/lp_presolve.c ****     else
 453:lp_solve_5.5/lp_presolve.c ****       rownr = 0;
 4585               		.loc 2 453 0
 4586 1d0a 1F8A      		std Y+23,__zero_reg__
 4587 1d0c 1E8A      		std Y+22,__zero_reg__
 4588               	.L147:
 426:lp_solve_5.5/lp_presolve.c **** 
 4589               		.loc 2 426 0
 4590 1d0e 8981      		ldd r24,Y+1
 4591 1d10 8130      		cpi r24,lo8(1)
 4592 1d12 01F4      		brne .L154
 426:lp_solve_5.5/lp_presolve.c **** 
 4593               		.loc 2 426 0 is_stmt 0 discriminator 1
 4594 1d14 8E89      		ldd r24,Y+22
 4595 1d16 9F89      		ldd r25,Y+23
 4596 1d18 892B      		or r24,r25
 4597 1d1a 01F0      		breq .+2
 4598 1d1c 00C0      		rjmp .L155
 4599               	.L154:
 454:lp_solve_5.5/lp_presolve.c ****   }
 455:lp_solve_5.5/lp_presolve.c ****   return( status );
 4600               		.loc 2 455 0 is_stmt 1
 4601 1d1e 8981      		ldd r24,Y+1
 4602               	/* epilogue start */
 456:lp_solve_5.5/lp_presolve.c **** }
 4603               		.loc 2 456 0
 4604 1d20 6896      		adiw r28,24
 4605 1d22 0FB6      		in __tmp_reg__,__SREG__
 4606 1d24 F894      		cli
 4607 1d26 DEBF      		out __SP_H__,r29
 4608 1d28 0FBE      		out __SREG__,__tmp_reg__
 4609 1d2a CDBF      		out __SP_L__,r28
 4610 1d2c DF91      		pop r29
 4611 1d2e CF91      		pop r28
 4612 1d30 1F91      		pop r17
 4613 1d32 0F91      		pop r16
 4614 1d34 0895      		ret
 4615               		.cfi_endproc
 4616               	.LFE25:
 4618               		.section	.rodata
 4619               	.LC13:
 4620 02c7 7072 6573 		.string	"presolve_debugmap: Inactive column %d is non-empty\n"
 4620      6F6C 7665 
 4620      5F64 6562 
 4620      7567 6D61 
 4620      703A 2049 
 4621               	.LC14:
 4622 02fb 7072 6573 		.string	"presolve_debugmap: Active column %d is empty\n"
 4622      6F6C 7665 
 4622      5F64 6562 
 4622      7567 6D61 
 4622      703A 2041 
 4623               	.LC15:
 4624 0329 7072 6573 		.string	"presolve_debugmap: NZ index %d for column %d out of range (index %d<=%d)\n"
 4624      6F6C 7665 
 4624      5F64 6562 
 4624      7567 6D61 
 4624      703A 204E 
 4625               	.LC16:
 4626 0373 7072 6573 		.string	"presolve_debugmap: NZ index %d for column %d to row %d out of range\n"
 4626      6F6C 7665 
 4626      5F64 6562 
 4626      7567 6D61 
 4626      703A 204E 
 4627               	.LC17:
 4628 03b8 2E2E 2E63 		.string	"...caller was '%s'\n"
 4628      616C 6C65 
 4628      7220 7761 
 4628      7320 2725 
 4628      7327 0A00 
 4629               		.text
 4630               	.global	presolve_debugmap
 4632               	presolve_debugmap:
 4633               	.LFB26:
 457:lp_solve_5.5/lp_presolve.c **** 
 458:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_debugmap(presolverec *psdata, char *caption)
 459:lp_solve_5.5/lp_presolve.c **** {
 4634               		.loc 2 459 0
 4635               		.cfi_startproc
 4636 1d36 CF93      		push r28
 4637               	.LCFI99:
 4638               		.cfi_def_cfa_offset 3
 4639               		.cfi_offset 28, -2
 4640 1d38 DF93      		push r29
 4641               	.LCFI100:
 4642               		.cfi_def_cfa_offset 4
 4643               		.cfi_offset 29, -3
 4644 1d3a CDB7      		in r28,__SP_L__
 4645 1d3c DEB7      		in r29,__SP_H__
 4646               	.LCFI101:
 4647               		.cfi_def_cfa_register 28
 4648 1d3e 6D97      		sbiw r28,29
 4649               	.LCFI102:
 4650               		.cfi_def_cfa_offset 33
 4651 1d40 0FB6      		in __tmp_reg__,__SREG__
 4652 1d42 F894      		cli
 4653 1d44 DEBF      		out __SP_H__,r29
 4654 1d46 0FBE      		out __SREG__,__tmp_reg__
 4655 1d48 CDBF      		out __SP_L__,r28
 4656               	/* prologue: function */
 4657               	/* frame size = 29 */
 4658               	/* stack size = 31 */
 4659               	.L__stack_usage = 31
 4660 1d4a 9B8F      		std Y+27,r25
 4661 1d4c 8A8F      		std Y+26,r24
 4662 1d4e 7D8F      		std Y+29,r23
 4663 1d50 6C8F      		std Y+28,r22
 460:lp_solve_5.5/lp_presolve.c ****   lprec *lp = psdata->lp;
 4664               		.loc 2 460 0
 4665 1d52 8A8D      		ldd r24,Y+26
 4666 1d54 9B8D      		ldd r25,Y+27
 4667 1d56 FC01      		movw r30,r24
 4668 1d58 8289      		ldd r24,Z+18
 4669 1d5a 9389      		ldd r25,Z+19
 4670 1d5c 9B87      		std Y+11,r25
 4671 1d5e 8A87      		std Y+10,r24
 461:lp_solve_5.5/lp_presolve.c ****   MATrec *mat = lp->matA;
 4672               		.loc 2 461 0
 4673 1d60 8A85      		ldd r24,Y+10
 4674 1d62 9B85      		ldd r25,Y+11
 4675 1d64 8A54      		subi r24,74
 4676 1d66 9D4F      		sbci r25,-3
 4677 1d68 FC01      		movw r30,r24
 4678 1d6a 8081      		ld r24,Z
 4679 1d6c 9181      		ldd r25,Z+1
 4680 1d6e 9D87      		std Y+13,r25
 4681 1d70 8C87      		std Y+12,r24
 462:lp_solve_5.5/lp_presolve.c ****   int    colnr, ix, ie, nx, jx, je, *cols, *rows, n;
 463:lp_solve_5.5/lp_presolve.c ****   int    nz = mat->col_end[lp->columns] - 1;
 4682               		.loc 2 463 0
 4683 1d72 8C85      		ldd r24,Y+12
 4684 1d74 9D85      		ldd r25,Y+13
 4685 1d76 FC01      		movw r30,r24
 4686 1d78 2289      		ldd r18,Z+18
 4687 1d7a 3389      		ldd r19,Z+19
 4688 1d7c 8A85      		ldd r24,Y+10
 4689 1d7e 9B85      		ldd r25,Y+11
 4690 1d80 8451      		subi r24,20
 4691 1d82 9E4F      		sbci r25,-2
 4692 1d84 FC01      		movw r30,r24
 4693 1d86 8081      		ld r24,Z
 4694 1d88 9181      		ldd r25,Z+1
 4695 1d8a 880F      		lsl r24
 4696 1d8c 991F      		rol r25
 4697 1d8e 820F      		add r24,r18
 4698 1d90 931F      		adc r25,r19
 4699 1d92 FC01      		movw r30,r24
 4700 1d94 8081      		ld r24,Z
 4701 1d96 9181      		ldd r25,Z+1
 4702 1d98 0197      		sbiw r24,1
 4703 1d9a 9F87      		std Y+15,r25
 4704 1d9c 8E87      		std Y+14,r24
 464:lp_solve_5.5/lp_presolve.c ****   MYBOOL status = FALSE;
 4705               		.loc 2 464 0
 4706 1d9e 1986      		std Y+9,__zero_reg__
 465:lp_solve_5.5/lp_presolve.c **** 
 466:lp_solve_5.5/lp_presolve.c ****   for(colnr = 1; colnr <= lp->columns; colnr++) {
 4707               		.loc 2 466 0
 4708 1da0 81E0      		ldi r24,lo8(1)
 4709 1da2 90E0      		ldi r25,0
 4710 1da4 9A83      		std Y+2,r25
 4711 1da6 8983      		std Y+1,r24
 4712 1da8 00C0      		rjmp .L160
 4713               	.L174:
 467:lp_solve_5.5/lp_presolve.c ****     rows = psdata->cols->next[colnr];
 4714               		.loc 2 467 0
 4715 1daa 8A8D      		ldd r24,Y+26
 4716 1dac 9B8D      		ldd r25,Y+27
 4717 1dae FC01      		movw r30,r24
 4718 1db0 8281      		ldd r24,Z+2
 4719 1db2 9381      		ldd r25,Z+3
 4720 1db4 FC01      		movw r30,r24
 4721 1db6 2281      		ldd r18,Z+2
 4722 1db8 3381      		ldd r19,Z+3
 4723 1dba 8981      		ldd r24,Y+1
 4724 1dbc 9A81      		ldd r25,Y+2
 4725 1dbe 880F      		lsl r24
 4726 1dc0 991F      		rol r25
 4727 1dc2 820F      		add r24,r18
 4728 1dc4 931F      		adc r25,r19
 4729 1dc6 FC01      		movw r30,r24
 4730 1dc8 8081      		ld r24,Z
 4731 1dca 9181      		ldd r25,Z+1
 4732 1dcc 9887      		std Y+8,r25
 4733 1dce 8F83      		std Y+7,r24
 468:lp_solve_5.5/lp_presolve.c ****     if(!isActiveLink(psdata->cols->varmap, colnr)) {
 4734               		.loc 2 468 0
 4735 1dd0 8A8D      		ldd r24,Y+26
 4736 1dd2 9B8D      		ldd r25,Y+27
 4737 1dd4 FC01      		movw r30,r24
 4738 1dd6 8281      		ldd r24,Z+2
 4739 1dd8 9381      		ldd r25,Z+3
 4740 1dda FC01      		movw r30,r24
 4741 1ddc 8081      		ld r24,Z
 4742 1dde 9181      		ldd r25,Z+1
 4743 1de0 2981      		ldd r18,Y+1
 4744 1de2 3A81      		ldd r19,Y+2
 4745 1de4 B901      		movw r22,r18
 4746 1de6 0E94 0000 		call isActiveLink
 4747 1dea 8823      		tst r24
 4748 1dec 01F4      		brne .L161
 469:lp_solve_5.5/lp_presolve.c ****       if(rows != NULL) {
 4749               		.loc 2 469 0
 4750 1dee 8F81      		ldd r24,Y+7
 4751 1df0 9885      		ldd r25,Y+8
 4752 1df2 892B      		or r24,r25
 4753 1df4 01F4      		brne .+2
 4754 1df6 00C0      		rjmp .L177
 470:lp_solve_5.5/lp_presolve.c ****         report(lp, SEVERE, "presolve_debugmap: Inactive column %d is non-empty\n",
 4755               		.loc 2 470 0
 4756 1df8 8A81      		ldd r24,Y+2
 4757 1dfa 8F93      		push r24
 4758 1dfc 8981      		ldd r24,Y+1
 4759 1dfe 8F93      		push r24
 4760 1e00 80E0      		ldi r24,lo8(.LC13)
 4761 1e02 90E0      		ldi r25,hi8(.LC13)
 4762 1e04 892F      		mov r24,r25
 4763 1e06 8F93      		push r24
 4764 1e08 80E0      		ldi r24,lo8(.LC13)
 4765 1e0a 90E0      		ldi r25,hi8(.LC13)
 4766 1e0c 8F93      		push r24
 4767 1e0e 1F92      		push __zero_reg__
 4768 1e10 82E0      		ldi r24,lo8(2)
 4769 1e12 8F93      		push r24
 4770 1e14 8B85      		ldd r24,Y+11
 4771 1e16 8F93      		push r24
 4772 1e18 8A85      		ldd r24,Y+10
 4773 1e1a 8F93      		push r24
 4774 1e1c 0E94 0000 		call report
 4775 1e20 8DB7      		in r24,__SP_L__
 4776 1e22 9EB7      		in r25,__SP_H__
 4777 1e24 0896      		adiw r24,8
 4778 1e26 0FB6      		in __tmp_reg__,__SREG__
 4779 1e28 F894      		cli
 4780 1e2a DEBF      		out __SP_H__,r29
 4781 1e2c 0FBE      		out __SREG__,__tmp_reg__
 4782 1e2e CDBF      		out __SP_L__,r28
 471:lp_solve_5.5/lp_presolve.c ****                            colnr);
 472:lp_solve_5.5/lp_presolve.c ****         goto Done;
 4783               		.loc 2 472 0
 4784 1e30 00C0      		rjmp .L163
 4785               	.L161:
 473:lp_solve_5.5/lp_presolve.c ****       }
 474:lp_solve_5.5/lp_presolve.c ****       else
 475:lp_solve_5.5/lp_presolve.c ****         continue;
 476:lp_solve_5.5/lp_presolve.c ****     }
 477:lp_solve_5.5/lp_presolve.c ****     if(rows == NULL)
 4786               		.loc 2 477 0
 4787 1e32 8F81      		ldd r24,Y+7
 4788 1e34 9885      		ldd r25,Y+8
 4789 1e36 892B      		or r24,r25
 4790 1e38 01F4      		brne .L165
 478:lp_solve_5.5/lp_presolve.c ****       report(lp, SEVERE, "presolve_debugmap: Active column %d is empty\n",
 4791               		.loc 2 478 0
 4792 1e3a 8A81      		ldd r24,Y+2
 4793 1e3c 8F93      		push r24
 4794 1e3e 8981      		ldd r24,Y+1
 4795 1e40 8F93      		push r24
 4796 1e42 80E0      		ldi r24,lo8(.LC14)
 4797 1e44 90E0      		ldi r25,hi8(.LC14)
 4798 1e46 892F      		mov r24,r25
 4799 1e48 8F93      		push r24
 4800 1e4a 80E0      		ldi r24,lo8(.LC14)
 4801 1e4c 90E0      		ldi r25,hi8(.LC14)
 4802 1e4e 8F93      		push r24
 4803 1e50 1F92      		push __zero_reg__
 4804 1e52 82E0      		ldi r24,lo8(2)
 4805 1e54 8F93      		push r24
 4806 1e56 8B85      		ldd r24,Y+11
 4807 1e58 8F93      		push r24
 4808 1e5a 8A85      		ldd r24,Y+10
 4809 1e5c 8F93      		push r24
 4810 1e5e 0E94 0000 		call report
 4811 1e62 EDB7      		in r30,__SP_L__
 4812 1e64 FEB7      		in r31,__SP_H__
 4813 1e66 3896      		adiw r30,8
 4814 1e68 0FB6      		in __tmp_reg__,__SREG__
 4815 1e6a F894      		cli
 4816 1e6c DEBF      		out __SP_H__,r29
 4817 1e6e 0FBE      		out __SREG__,__tmp_reg__
 4818 1e70 CDBF      		out __SP_L__,r28
 4819               	.L165:
 479:lp_solve_5.5/lp_presolve.c ****                          colnr);
 480:lp_solve_5.5/lp_presolve.c ****     je = *rows;
 4820               		.loc 2 480 0
 4821 1e72 8F81      		ldd r24,Y+7
 4822 1e74 9885      		ldd r25,Y+8
 4823 1e76 FC01      		movw r30,r24
 4824 1e78 8081      		ld r24,Z
 4825 1e7a 9181      		ldd r25,Z+1
 4826 1e7c 998B      		std Y+17,r25
 4827 1e7e 888B      		std Y+16,r24
 481:lp_solve_5.5/lp_presolve.c ****     rows++;
 4828               		.loc 2 481 0
 4829 1e80 8F81      		ldd r24,Y+7
 4830 1e82 9885      		ldd r25,Y+8
 4831 1e84 0296      		adiw r24,2
 4832 1e86 9887      		std Y+8,r25
 4833 1e88 8F83      		std Y+7,r24
 482:lp_solve_5.5/lp_presolve.c ****     for(jx = 1; jx <= je; jx++, rows++) {
 4834               		.loc 2 482 0
 4835 1e8a 81E0      		ldi r24,lo8(1)
 4836 1e8c 90E0      		ldi r25,0
 4837 1e8e 9E83      		std Y+6,r25
 4838 1e90 8D83      		std Y+5,r24
 4839 1e92 00C0      		rjmp .L166
 4840               	.L173:
 483:lp_solve_5.5/lp_presolve.c ****       if((*rows < 0) || (*rows > nz)) {
 4841               		.loc 2 483 0
 4842 1e94 8F81      		ldd r24,Y+7
 4843 1e96 9885      		ldd r25,Y+8
 4844 1e98 FC01      		movw r30,r24
 4845 1e9a 8081      		ld r24,Z
 4846 1e9c 9181      		ldd r25,Z+1
 4847 1e9e 9923      		tst r25
 4848 1ea0 04F0      		brlt .L167
 4849               		.loc 2 483 0 is_stmt 0 discriminator 1
 4850 1ea2 8F81      		ldd r24,Y+7
 4851 1ea4 9885      		ldd r25,Y+8
 4852 1ea6 FC01      		movw r30,r24
 4853 1ea8 2081      		ld r18,Z
 4854 1eaa 3181      		ldd r19,Z+1
 4855 1eac 8E85      		ldd r24,Y+14
 4856 1eae 9F85      		ldd r25,Y+15
 4857 1eb0 8217      		cp r24,r18
 4858 1eb2 9307      		cpc r25,r19
 4859 1eb4 04F4      		brge .L168
 4860               	.L167:
 484:lp_solve_5.5/lp_presolve.c ****         report(lp, SEVERE, "presolve_debugmap: NZ index %d for column %d out of range (index %d<=%d
 4861               		.loc 2 484 0 is_stmt 1
 4862 1eb6 8F81      		ldd r24,Y+7
 4863 1eb8 9885      		ldd r25,Y+8
 4864 1eba FC01      		movw r30,r24
 4865 1ebc 8081      		ld r24,Z
 4866 1ebe 9181      		ldd r25,Z+1
 4867 1ec0 2989      		ldd r18,Y+17
 4868 1ec2 2F93      		push r18
 4869 1ec4 2889      		ldd r18,Y+16
 4870 1ec6 2F93      		push r18
 4871 1ec8 2E81      		ldd r18,Y+6
 4872 1eca 2F93      		push r18
 4873 1ecc 2D81      		ldd r18,Y+5
 4874 1ece 2F93      		push r18
 4875 1ed0 2A81      		ldd r18,Y+2
 4876 1ed2 2F93      		push r18
 4877 1ed4 2981      		ldd r18,Y+1
 4878 1ed6 2F93      		push r18
 4879 1ed8 292F      		mov r18,r25
 4880 1eda 2F93      		push r18
 4881 1edc 8F93      		push r24
 4882 1ede 80E0      		ldi r24,lo8(.LC15)
 4883 1ee0 90E0      		ldi r25,hi8(.LC15)
 4884 1ee2 892F      		mov r24,r25
 4885 1ee4 8F93      		push r24
 4886 1ee6 80E0      		ldi r24,lo8(.LC15)
 4887 1ee8 90E0      		ldi r25,hi8(.LC15)
 4888 1eea 8F93      		push r24
 4889 1eec 1F92      		push __zero_reg__
 4890 1eee 82E0      		ldi r24,lo8(2)
 4891 1ef0 8F93      		push r24
 4892 1ef2 8B85      		ldd r24,Y+11
 4893 1ef4 8F93      		push r24
 4894 1ef6 8A85      		ldd r24,Y+10
 4895 1ef8 8F93      		push r24
 4896 1efa 0E94 0000 		call report
 4897 1efe 8DB7      		in r24,__SP_L__
 4898 1f00 9EB7      		in r25,__SP_H__
 4899 1f02 0E96      		adiw r24,14
 4900 1f04 0FB6      		in __tmp_reg__,__SREG__
 4901 1f06 F894      		cli
 4902 1f08 DEBF      		out __SP_H__,r29
 4903 1f0a 0FBE      		out __SREG__,__tmp_reg__
 4904 1f0c CDBF      		out __SP_L__,r28
 485:lp_solve_5.5/lp_presolve.c ****                            *rows, colnr, jx, je);
 486:lp_solve_5.5/lp_presolve.c ****         goto Done;
 4905               		.loc 2 486 0
 4906 1f0e 00C0      		rjmp .L163
 4907               	.L168:
 487:lp_solve_5.5/lp_presolve.c ****       }
 488:lp_solve_5.5/lp_presolve.c ****       cols = psdata->rows->next[COL_MAT_ROWNR(*rows)];
 4908               		.loc 2 488 0
 4909 1f10 8A8D      		ldd r24,Y+26
 4910 1f12 9B8D      		ldd r25,Y+27
 4911 1f14 FC01      		movw r30,r24
 4912 1f16 8081      		ld r24,Z
 4913 1f18 9181      		ldd r25,Z+1
 4914 1f1a FC01      		movw r30,r24
 4915 1f1c 2281      		ldd r18,Z+2
 4916 1f1e 3381      		ldd r19,Z+3
 4917 1f20 8C85      		ldd r24,Y+12
 4918 1f22 9D85      		ldd r25,Y+13
 4919 1f24 FC01      		movw r30,r24
 4920 1f26 4685      		ldd r20,Z+14
 4921 1f28 5785      		ldd r21,Z+15
 4922 1f2a 8F81      		ldd r24,Y+7
 4923 1f2c 9885      		ldd r25,Y+8
 4924 1f2e FC01      		movw r30,r24
 4925 1f30 8081      		ld r24,Z
 4926 1f32 9181      		ldd r25,Z+1
 4927 1f34 880F      		lsl r24
 4928 1f36 991F      		rol r25
 4929 1f38 840F      		add r24,r20
 4930 1f3a 951F      		adc r25,r21
 4931 1f3c FC01      		movw r30,r24
 4932 1f3e 8081      		ld r24,Z
 4933 1f40 9181      		ldd r25,Z+1
 4934 1f42 880F      		lsl r24
 4935 1f44 991F      		rol r25
 4936 1f46 820F      		add r24,r18
 4937 1f48 931F      		adc r25,r19
 4938 1f4a FC01      		movw r30,r24
 4939 1f4c 8081      		ld r24,Z
 4940 1f4e 9181      		ldd r25,Z+1
 4941 1f50 9B8B      		std Y+19,r25
 4942 1f52 8A8B      		std Y+18,r24
 489:lp_solve_5.5/lp_presolve.c ****       ie = cols[0];
 4943               		.loc 2 489 0
 4944 1f54 8A89      		ldd r24,Y+18
 4945 1f56 9B89      		ldd r25,Y+19
 4946 1f58 FC01      		movw r30,r24
 4947 1f5a 8081      		ld r24,Z
 4948 1f5c 9181      		ldd r25,Z+1
 4949 1f5e 9D8B      		std Y+21,r25
 4950 1f60 8C8B      		std Y+20,r24
 490:lp_solve_5.5/lp_presolve.c ****       n = 0;
 4951               		.loc 2 490 0
 4952 1f62 1F8A      		std Y+23,__zero_reg__
 4953 1f64 1E8A      		std Y+22,__zero_reg__
 491:lp_solve_5.5/lp_presolve.c ****       for(ix = 1; ix <= ie; ix++) {
 4954               		.loc 2 491 0
 4955 1f66 81E0      		ldi r24,lo8(1)
 4956 1f68 90E0      		ldi r25,0
 4957 1f6a 9C83      		std Y+4,r25
 4958 1f6c 8B83      		std Y+3,r24
 4959 1f6e 00C0      		rjmp .L169
 4960               	.L172:
 492:lp_solve_5.5/lp_presolve.c ****         nx = cols[ix];
 4961               		.loc 2 492 0
 4962 1f70 8B81      		ldd r24,Y+3
 4963 1f72 9C81      		ldd r25,Y+4
 4964 1f74 880F      		lsl r24
 4965 1f76 991F      		rol r25
 4966 1f78 2A89      		ldd r18,Y+18
 4967 1f7a 3B89      		ldd r19,Y+19
 4968 1f7c 820F      		add r24,r18
 4969 1f7e 931F      		adc r25,r19
 4970 1f80 FC01      		movw r30,r24
 4971 1f82 8081      		ld r24,Z
 4972 1f84 9181      		ldd r25,Z+1
 4973 1f86 998F      		std Y+25,r25
 4974 1f88 888F      		std Y+24,r24
 493:lp_solve_5.5/lp_presolve.c ****         if((nx < 0) || (nx > nz)) {
 4975               		.loc 2 493 0
 4976 1f8a 888D      		ldd r24,Y+24
 4977 1f8c 998D      		ldd r25,Y+25
 4978 1f8e 9923      		tst r25
 4979 1f90 04F0      		brlt .L170
 4980               		.loc 2 493 0 is_stmt 0 discriminator 1
 4981 1f92 288D      		ldd r18,Y+24
 4982 1f94 398D      		ldd r19,Y+25
 4983 1f96 8E85      		ldd r24,Y+14
 4984 1f98 9F85      		ldd r25,Y+15
 4985 1f9a 8217      		cp r24,r18
 4986 1f9c 9307      		cpc r25,r19
 4987 1f9e 04F4      		brge .L171
 4988               	.L170:
 494:lp_solve_5.5/lp_presolve.c ****           report(lp, SEVERE, "presolve_debugmap: NZ index %d for column %d to row %d out of range\n
 4989               		.loc 2 494 0 is_stmt 1
 4990 1fa0 8E81      		ldd r24,Y+6
 4991 1fa2 8F93      		push r24
 4992 1fa4 8D81      		ldd r24,Y+5
 4993 1fa6 8F93      		push r24
 4994 1fa8 8A81      		ldd r24,Y+2
 4995 1faa 8F93      		push r24
 4996 1fac 8981      		ldd r24,Y+1
 4997 1fae 8F93      		push r24
 4998 1fb0 898D      		ldd r24,Y+25
 4999 1fb2 8F93      		push r24
 5000 1fb4 888D      		ldd r24,Y+24
 5001 1fb6 8F93      		push r24
 5002 1fb8 80E0      		ldi r24,lo8(.LC16)
 5003 1fba 90E0      		ldi r25,hi8(.LC16)
 5004 1fbc 892F      		mov r24,r25
 5005 1fbe 8F93      		push r24
 5006 1fc0 80E0      		ldi r24,lo8(.LC16)
 5007 1fc2 90E0      		ldi r25,hi8(.LC16)
 5008 1fc4 8F93      		push r24
 5009 1fc6 1F92      		push __zero_reg__
 5010 1fc8 82E0      		ldi r24,lo8(2)
 5011 1fca 8F93      		push r24
 5012 1fcc 8B85      		ldd r24,Y+11
 5013 1fce 8F93      		push r24
 5014 1fd0 8A85      		ldd r24,Y+10
 5015 1fd2 8F93      		push r24
 5016 1fd4 0E94 0000 		call report
 5017 1fd8 8DB7      		in r24,__SP_L__
 5018 1fda 9EB7      		in r25,__SP_H__
 5019 1fdc 0C96      		adiw r24,12
 5020 1fde 0FB6      		in __tmp_reg__,__SREG__
 5021 1fe0 F894      		cli
 5022 1fe2 DEBF      		out __SP_H__,r29
 5023 1fe4 0FBE      		out __SREG__,__tmp_reg__
 5024 1fe6 CDBF      		out __SP_L__,r28
 495:lp_solve_5.5/lp_presolve.c ****                              nx, colnr, jx);
 496:lp_solve_5.5/lp_presolve.c ****           goto Done;
 5025               		.loc 2 496 0
 5026 1fe8 00C0      		rjmp .L163
 5027               	.L171:
 491:lp_solve_5.5/lp_presolve.c ****         nx = cols[ix];
 5028               		.loc 2 491 0 discriminator 2
 5029 1fea 8B81      		ldd r24,Y+3
 5030 1fec 9C81      		ldd r25,Y+4
 5031 1fee 0196      		adiw r24,1
 5032 1ff0 9C83      		std Y+4,r25
 5033 1ff2 8B83      		std Y+3,r24
 5034               	.L169:
 491:lp_solve_5.5/lp_presolve.c ****         nx = cols[ix];
 5035               		.loc 2 491 0 is_stmt 0 discriminator 1
 5036 1ff4 2B81      		ldd r18,Y+3
 5037 1ff6 3C81      		ldd r19,Y+4
 5038 1ff8 8C89      		ldd r24,Y+20
 5039 1ffa 9D89      		ldd r25,Y+21
 5040 1ffc 8217      		cp r24,r18
 5041 1ffe 9307      		cpc r25,r19
 5042 2000 04F0      		brlt .+2
 5043 2002 00C0      		rjmp .L172
 482:lp_solve_5.5/lp_presolve.c ****       if((*rows < 0) || (*rows > nz)) {
 5044               		.loc 2 482 0 is_stmt 1 discriminator 2
 5045 2004 8D81      		ldd r24,Y+5
 5046 2006 9E81      		ldd r25,Y+6
 5047 2008 0196      		adiw r24,1
 5048 200a 9E83      		std Y+6,r25
 5049 200c 8D83      		std Y+5,r24
 5050 200e 8F81      		ldd r24,Y+7
 5051 2010 9885      		ldd r25,Y+8
 5052 2012 0296      		adiw r24,2
 5053 2014 9887      		std Y+8,r25
 5054 2016 8F83      		std Y+7,r24
 5055               	.L166:
 482:lp_solve_5.5/lp_presolve.c ****       if((*rows < 0) || (*rows > nz)) {
 5056               		.loc 2 482 0 is_stmt 0 discriminator 1
 5057 2018 2D81      		ldd r18,Y+5
 5058 201a 3E81      		ldd r19,Y+6
 5059 201c 8889      		ldd r24,Y+16
 5060 201e 9989      		ldd r25,Y+17
 5061 2020 8217      		cp r24,r18
 5062 2022 9307      		cpc r25,r19
 5063 2024 04F0      		brlt .+2
 5064 2026 00C0      		rjmp .L173
 5065 2028 00C0      		rjmp .L164
 5066               	.L177:
 475:lp_solve_5.5/lp_presolve.c ****     }
 5067               		.loc 2 475 0 is_stmt 1
 5068 202a 0000      		nop
 5069               	.L164:
 466:lp_solve_5.5/lp_presolve.c ****     rows = psdata->cols->next[colnr];
 5070               		.loc 2 466 0 discriminator 2
 5071 202c 8981      		ldd r24,Y+1
 5072 202e 9A81      		ldd r25,Y+2
 5073 2030 0196      		adiw r24,1
 5074 2032 9A83      		std Y+2,r25
 5075 2034 8983      		std Y+1,r24
 5076               	.L160:
 466:lp_solve_5.5/lp_presolve.c ****     rows = psdata->cols->next[colnr];
 5077               		.loc 2 466 0 is_stmt 0 discriminator 1
 5078 2036 8A85      		ldd r24,Y+10
 5079 2038 9B85      		ldd r25,Y+11
 5080 203a 8451      		subi r24,20
 5081 203c 9E4F      		sbci r25,-2
 5082 203e FC01      		movw r30,r24
 5083 2040 2081      		ld r18,Z
 5084 2042 3181      		ldd r19,Z+1
 5085 2044 8981      		ldd r24,Y+1
 5086 2046 9A81      		ldd r25,Y+2
 5087 2048 2817      		cp r18,r24
 5088 204a 3907      		cpc r19,r25
 5089 204c 04F0      		brlt .+2
 5090 204e 00C0      		rjmp .L174
 497:lp_solve_5.5/lp_presolve.c ****         }
 498:lp_solve_5.5/lp_presolve.c ****       }
 499:lp_solve_5.5/lp_presolve.c ****     }
 500:lp_solve_5.5/lp_presolve.c ****   }
 501:lp_solve_5.5/lp_presolve.c ****   status = TRUE;
 5091               		.loc 2 501 0 is_stmt 1
 5092 2050 81E0      		ldi r24,lo8(1)
 5093 2052 8987      		std Y+9,r24
 5094               	.L163:
 502:lp_solve_5.5/lp_presolve.c **** Done:
 503:lp_solve_5.5/lp_presolve.c ****   if(!status && (caption != NULL))
 5095               		.loc 2 503 0
 5096 2054 8985      		ldd r24,Y+9
 5097 2056 8823      		tst r24
 5098 2058 01F4      		brne .L175
 5099               		.loc 2 503 0 is_stmt 0 discriminator 1
 5100 205a 8C8D      		ldd r24,Y+28
 5101 205c 9D8D      		ldd r25,Y+29
 5102 205e 892B      		or r24,r25
 5103 2060 01F0      		breq .L175
 504:lp_solve_5.5/lp_presolve.c ****     report(lp, SEVERE, "...caller was '%s'\n", caption);
 5104               		.loc 2 504 0 is_stmt 1
 5105 2062 8D8D      		ldd r24,Y+29
 5106 2064 8F93      		push r24
 5107 2066 8C8D      		ldd r24,Y+28
 5108 2068 8F93      		push r24
 5109 206a 80E0      		ldi r24,lo8(.LC17)
 5110 206c 90E0      		ldi r25,hi8(.LC17)
 5111 206e 892F      		mov r24,r25
 5112 2070 8F93      		push r24
 5113 2072 80E0      		ldi r24,lo8(.LC17)
 5114 2074 90E0      		ldi r25,hi8(.LC17)
 5115 2076 8F93      		push r24
 5116 2078 1F92      		push __zero_reg__
 5117 207a 82E0      		ldi r24,lo8(2)
 5118 207c 8F93      		push r24
 5119 207e 8B85      		ldd r24,Y+11
 5120 2080 8F93      		push r24
 5121 2082 8A85      		ldd r24,Y+10
 5122 2084 8F93      		push r24
 5123 2086 0E94 0000 		call report
 5124 208a 8DB7      		in r24,__SP_L__
 5125 208c 9EB7      		in r25,__SP_H__
 5126 208e 0896      		adiw r24,8
 5127 2090 0FB6      		in __tmp_reg__,__SREG__
 5128 2092 F894      		cli
 5129 2094 DEBF      		out __SP_H__,r29
 5130 2096 0FBE      		out __SREG__,__tmp_reg__
 5131 2098 CDBF      		out __SP_L__,r28
 5132               	.L175:
 505:lp_solve_5.5/lp_presolve.c ****   return( status );
 5133               		.loc 2 505 0
 5134 209a 8985      		ldd r24,Y+9
 5135               	/* epilogue start */
 506:lp_solve_5.5/lp_presolve.c **** }
 5136               		.loc 2 506 0
 5137 209c 6D96      		adiw r28,29
 5138 209e 0FB6      		in __tmp_reg__,__SREG__
 5139 20a0 F894      		cli
 5140 20a2 DEBF      		out __SP_H__,r29
 5141 20a4 0FBE      		out __SREG__,__tmp_reg__
 5142 20a6 CDBF      		out __SP_L__,r28
 5143 20a8 DF91      		pop r29
 5144 20aa CF91      		pop r28
 5145 20ac 0895      		ret
 5146               		.cfi_endproc
 5147               	.LFE26:
 5149               	.global	presolve_validate
 5151               	presolve_validate:
 5152               	.LFB27:
 507:lp_solve_5.5/lp_presolve.c **** 
 508:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_validate(presolverec *psdata, MYBOOL forceupdate)
 509:lp_solve_5.5/lp_presolve.c **** {
 5153               		.loc 2 509 0
 5154               		.cfi_startproc
 5155 20ae 1F93      		push r17
 5156               	.LCFI103:
 5157               		.cfi_def_cfa_offset 3
 5158               		.cfi_offset 17, -2
 5159 20b0 CF93      		push r28
 5160               	.LCFI104:
 5161               		.cfi_def_cfa_offset 4
 5162               		.cfi_offset 28, -3
 5163 20b2 DF93      		push r29
 5164               	.LCFI105:
 5165               		.cfi_def_cfa_offset 5
 5166               		.cfi_offset 29, -4
 5167 20b4 CDB7      		in r28,__SP_L__
 5168 20b6 DEB7      		in r29,__SP_H__
 5169               	.LCFI106:
 5170               		.cfi_def_cfa_register 28
 5171 20b8 A297      		sbiw r28,34
 5172               	.LCFI107:
 5173               		.cfi_def_cfa_offset 39
 5174 20ba 0FB6      		in __tmp_reg__,__SREG__
 5175 20bc F894      		cli
 5176 20be DEBF      		out __SP_H__,r29
 5177 20c0 0FBE      		out __SREG__,__tmp_reg__
 5178 20c2 CDBF      		out __SP_L__,r28
 5179               	/* prologue: function */
 5180               	/* frame size = 34 */
 5181               	/* stack size = 37 */
 5182               	.L__stack_usage = 37
 5183 20c4 99A3      		std Y+33,r25
 5184 20c6 88A3      		std Y+32,r24
 5185 20c8 6AA3      		std Y+34,r22
 510:lp_solve_5.5/lp_presolve.c ****   int    i, ie, j, je, k, rownr, *items;
 511:lp_solve_5.5/lp_presolve.c ****   REAL   upbound, lobound, value;
 512:lp_solve_5.5/lp_presolve.c ****   lprec  *lp = psdata->lp;
 5186               		.loc 2 512 0
 5187 20ca 88A1      		ldd r24,Y+32
 5188 20cc 99A1      		ldd r25,Y+33
 5189 20ce FC01      		movw r30,r24
 5190 20d0 8289      		ldd r24,Z+18
 5191 20d2 9389      		ldd r25,Z+19
 5192 20d4 998B      		std Y+17,r25
 5193 20d6 888B      		std Y+16,r24
 513:lp_solve_5.5/lp_presolve.c ****   MATrec *mat = lp->matA;
 5194               		.loc 2 513 0
 5195 20d8 8889      		ldd r24,Y+16
 5196 20da 9989      		ldd r25,Y+17
 5197 20dc 8A54      		subi r24,74
 5198 20de 9D4F      		sbci r25,-3
 5199 20e0 FC01      		movw r30,r24
 5200 20e2 8081      		ld r24,Z
 5201 20e4 9181      		ldd r25,Z+1
 5202 20e6 9B8B      		std Y+19,r25
 5203 20e8 8A8B      		std Y+18,r24
 514:lp_solve_5.5/lp_presolve.c ****   MYBOOL status = mat->row_end_valid && !forceupdate;
 5204               		.loc 2 514 0
 5205 20ea 8A89      		ldd r24,Y+18
 5206 20ec 9B89      		ldd r25,Y+19
 5207 20ee FC01      		movw r30,r24
 5208 20f0 84A5      		ldd r24,Z+44
 5209 20f2 8823      		tst r24
 5210 20f4 01F0      		breq .L179
 5211               		.loc 2 514 0 is_stmt 0 discriminator 1
 5212 20f6 8AA1      		ldd r24,Y+34
 5213 20f8 8823      		tst r24
 5214 20fa 01F4      		brne .L179
 5215               		.loc 2 514 0 discriminator 3
 5216 20fc 81E0      		ldi r24,lo8(1)
 5217 20fe 90E0      		ldi r25,0
 5218 2100 00C0      		rjmp .L180
 5219               	.L179:
 5220               		.loc 2 514 0 discriminator 4
 5221 2102 80E0      		ldi r24,0
 5222 2104 90E0      		ldi r25,0
 5223               	.L180:
 5224               		.loc 2 514 0 discriminator 6
 5225 2106 8F87      		std Y+15,r24
 515:lp_solve_5.5/lp_presolve.c **** 
 516:lp_solve_5.5/lp_presolve.c ****   if(status)
 5226               		.loc 2 516 0 is_stmt 1 discriminator 6
 5227 2108 8F85      		ldd r24,Y+15
 5228 210a 8823      		tst r24
 5229 210c 01F0      		breq .L181
 517:lp_solve_5.5/lp_presolve.c ****     return( status );
 5230               		.loc 2 517 0
 5231 210e 8F85      		ldd r24,Y+15
 5232 2110 00C0      		rjmp .L182
 5233               	.L181:
 518:lp_solve_5.5/lp_presolve.c ****   else if(!mat->row_end_valid)
 5234               		.loc 2 518 0
 5235 2112 8A89      		ldd r24,Y+18
 5236 2114 9B89      		ldd r25,Y+19
 5237 2116 FC01      		movw r30,r24
 5238 2118 84A5      		ldd r24,Z+44
 5239 211a 8823      		tst r24
 5240 211c 01F4      		brne .L183
 519:lp_solve_5.5/lp_presolve.c ****     status = mat_validate(mat);
 5241               		.loc 2 519 0
 5242 211e 8A89      		ldd r24,Y+18
 5243 2120 9B89      		ldd r25,Y+19
 5244 2122 0E94 0000 		call mat_validate
 5245 2126 8F87      		std Y+15,r24
 5246 2128 00C0      		rjmp .L184
 5247               	.L183:
 520:lp_solve_5.5/lp_presolve.c ****   else
 521:lp_solve_5.5/lp_presolve.c ****     status = forceupdate;
 5248               		.loc 2 521 0
 5249 212a 8AA1      		ldd r24,Y+34
 5250 212c 8F87      		std Y+15,r24
 5251               	.L184:
 522:lp_solve_5.5/lp_presolve.c ****   if(status) {
 5252               		.loc 2 522 0
 5253 212e 8F85      		ldd r24,Y+15
 5254 2130 8823      		tst r24
 5255 2132 01F4      		brne .+2
 5256 2134 00C0      		rjmp .L185
 523:lp_solve_5.5/lp_presolve.c **** 
 524:lp_solve_5.5/lp_presolve.c ****     /* First update rows... */
 525:lp_solve_5.5/lp_presolve.c ****     for(i = 1; i <= lp->rows; i++) {
 5257               		.loc 2 525 0
 5258 2136 81E0      		ldi r24,lo8(1)
 5259 2138 90E0      		ldi r25,0
 5260 213a 9A83      		std Y+2,r25
 5261 213c 8983      		std Y+1,r24
 5262 213e 00C0      		rjmp .L186
 5263               	.L193:
 526:lp_solve_5.5/lp_presolve.c **** 
 527:lp_solve_5.5/lp_presolve.c ****       psdata->rows->plucount[i] = 0;
 5264               		.loc 2 527 0
 5265 2140 88A1      		ldd r24,Y+32
 5266 2142 99A1      		ldd r25,Y+33
 5267 2144 FC01      		movw r30,r24
 5268 2146 8081      		ld r24,Z
 5269 2148 9181      		ldd r25,Z+1
 5270 214a FC01      		movw r30,r24
 5271 214c 2681      		ldd r18,Z+6
 5272 214e 3781      		ldd r19,Z+7
 5273 2150 8981      		ldd r24,Y+1
 5274 2152 9A81      		ldd r25,Y+2
 5275 2154 880F      		lsl r24
 5276 2156 991F      		rol r25
 5277 2158 820F      		add r24,r18
 5278 215a 931F      		adc r25,r19
 5279 215c FC01      		movw r30,r24
 5280 215e 1182      		std Z+1,__zero_reg__
 5281 2160 1082      		st Z,__zero_reg__
 528:lp_solve_5.5/lp_presolve.c ****       psdata->rows->negcount[i] = 0;
 5282               		.loc 2 528 0
 5283 2162 88A1      		ldd r24,Y+32
 5284 2164 99A1      		ldd r25,Y+33
 5285 2166 FC01      		movw r30,r24
 5286 2168 8081      		ld r24,Z
 5287 216a 9181      		ldd r25,Z+1
 5288 216c FC01      		movw r30,r24
 5289 216e 2085      		ldd r18,Z+8
 5290 2170 3185      		ldd r19,Z+9
 5291 2172 8981      		ldd r24,Y+1
 5292 2174 9A81      		ldd r25,Y+2
 5293 2176 880F      		lsl r24
 5294 2178 991F      		rol r25
 5295 217a 820F      		add r24,r18
 5296 217c 931F      		adc r25,r19
 5297 217e FC01      		movw r30,r24
 5298 2180 1182      		std Z+1,__zero_reg__
 5299 2182 1082      		st Z,__zero_reg__
 529:lp_solve_5.5/lp_presolve.c ****       psdata->rows->pluneg[i]   = 0;
 5300               		.loc 2 529 0
 5301 2184 88A1      		ldd r24,Y+32
 5302 2186 99A1      		ldd r25,Y+33
 5303 2188 FC01      		movw r30,r24
 5304 218a 8081      		ld r24,Z
 5305 218c 9181      		ldd r25,Z+1
 5306 218e FC01      		movw r30,r24
 5307 2190 2285      		ldd r18,Z+10
 5308 2192 3385      		ldd r19,Z+11
 5309 2194 8981      		ldd r24,Y+1
 5310 2196 9A81      		ldd r25,Y+2
 5311 2198 880F      		lsl r24
 5312 219a 991F      		rol r25
 5313 219c 820F      		add r24,r18
 5314 219e 931F      		adc r25,r19
 5315 21a0 FC01      		movw r30,r24
 5316 21a2 1182      		std Z+1,__zero_reg__
 5317 21a4 1082      		st Z,__zero_reg__
 530:lp_solve_5.5/lp_presolve.c **** 
 531:lp_solve_5.5/lp_presolve.c ****       if(!isActiveLink(psdata->rows->varmap, i)) {
 5318               		.loc 2 531 0
 5319 21a6 88A1      		ldd r24,Y+32
 5320 21a8 99A1      		ldd r25,Y+33
 5321 21aa FC01      		movw r30,r24
 5322 21ac 8081      		ld r24,Z
 5323 21ae 9181      		ldd r25,Z+1
 5324 21b0 FC01      		movw r30,r24
 5325 21b2 8081      		ld r24,Z
 5326 21b4 9181      		ldd r25,Z+1
 5327 21b6 2981      		ldd r18,Y+1
 5328 21b8 3A81      		ldd r19,Y+2
 5329 21ba B901      		movw r22,r18
 5330 21bc 0E94 0000 		call isActiveLink
 5331 21c0 8823      		tst r24
 5332 21c2 01F4      		brne .L187
 532:lp_solve_5.5/lp_presolve.c ****         FREE(psdata->rows->next[i]);
 5333               		.loc 2 532 0
 5334 21c4 88A1      		ldd r24,Y+32
 5335 21c6 99A1      		ldd r25,Y+33
 5336 21c8 FC01      		movw r30,r24
 5337 21ca 8081      		ld r24,Z
 5338 21cc 9181      		ldd r25,Z+1
 5339 21ce FC01      		movw r30,r24
 5340 21d0 2281      		ldd r18,Z+2
 5341 21d2 3381      		ldd r19,Z+3
 5342 21d4 8981      		ldd r24,Y+1
 5343 21d6 9A81      		ldd r25,Y+2
 5344 21d8 880F      		lsl r24
 5345 21da 991F      		rol r25
 5346 21dc 820F      		add r24,r18
 5347 21de 931F      		adc r25,r19
 5348 21e0 FC01      		movw r30,r24
 5349 21e2 8081      		ld r24,Z
 5350 21e4 9181      		ldd r25,Z+1
 5351 21e6 892B      		or r24,r25
 5352 21e8 01F4      		brne .+2
 5353 21ea 00C0      		rjmp .L189
 5354               		.loc 2 532 0 is_stmt 0 discriminator 1
 5355 21ec 88A1      		ldd r24,Y+32
 5356 21ee 99A1      		ldd r25,Y+33
 5357 21f0 FC01      		movw r30,r24
 5358 21f2 8081      		ld r24,Z
 5359 21f4 9181      		ldd r25,Z+1
 5360 21f6 FC01      		movw r30,r24
 5361 21f8 2281      		ldd r18,Z+2
 5362 21fa 3381      		ldd r19,Z+3
 5363 21fc 8981      		ldd r24,Y+1
 5364 21fe 9A81      		ldd r25,Y+2
 5365 2200 880F      		lsl r24
 5366 2202 991F      		rol r25
 5367 2204 820F      		add r24,r18
 5368 2206 931F      		adc r25,r19
 5369 2208 FC01      		movw r30,r24
 5370 220a 8081      		ld r24,Z
 5371 220c 9181      		ldd r25,Z+1
 5372 220e 0E94 0000 		call free
 5373 2212 88A1      		ldd r24,Y+32
 5374 2214 99A1      		ldd r25,Y+33
 5375 2216 FC01      		movw r30,r24
 5376 2218 8081      		ld r24,Z
 5377 221a 9181      		ldd r25,Z+1
 5378 221c FC01      		movw r30,r24
 5379 221e 2281      		ldd r18,Z+2
 5380 2220 3381      		ldd r19,Z+3
 5381 2222 8981      		ldd r24,Y+1
 5382 2224 9A81      		ldd r25,Y+2
 5383 2226 880F      		lsl r24
 5384 2228 991F      		rol r25
 5385 222a 820F      		add r24,r18
 5386 222c 931F      		adc r25,r19
 5387 222e FC01      		movw r30,r24
 5388 2230 1182      		std Z+1,__zero_reg__
 5389 2232 1082      		st Z,__zero_reg__
 5390 2234 00C0      		rjmp .L189
 5391               	.L187:
 533:lp_solve_5.5/lp_presolve.c ****       }
 534:lp_solve_5.5/lp_presolve.c ****       else {
 535:lp_solve_5.5/lp_presolve.c ****         /* Create next column pointers by row */
 536:lp_solve_5.5/lp_presolve.c ****         k = mat_rowlength(mat, i);
 5392               		.loc 2 536 0 is_stmt 1
 5393 2236 2981      		ldd r18,Y+1
 5394 2238 3A81      		ldd r19,Y+2
 5395 223a 8A89      		ldd r24,Y+18
 5396 223c 9B89      		ldd r25,Y+19
 5397 223e B901      		movw r22,r18
 5398 2240 0E94 0000 		call mat_rowlength
 5399 2244 9E83      		std Y+6,r25
 5400 2246 8D83      		std Y+5,r24
 537:lp_solve_5.5/lp_presolve.c ****         allocINT(lp, &(psdata->rows->next[i]), k+1, AUTOMATIC);
 5401               		.loc 2 537 0
 5402 2248 8D81      		ldd r24,Y+5
 5403 224a 9E81      		ldd r25,Y+6
 5404 224c AC01      		movw r20,r24
 5405 224e 4F5F      		subi r20,-1
 5406 2250 5F4F      		sbci r21,-1
 5407 2252 88A1      		ldd r24,Y+32
 5408 2254 99A1      		ldd r25,Y+33
 5409 2256 FC01      		movw r30,r24
 5410 2258 8081      		ld r24,Z
 5411 225a 9181      		ldd r25,Z+1
 5412 225c FC01      		movw r30,r24
 5413 225e 2281      		ldd r18,Z+2
 5414 2260 3381      		ldd r19,Z+3
 5415 2262 8981      		ldd r24,Y+1
 5416 2264 9A81      		ldd r25,Y+2
 5417 2266 880F      		lsl r24
 5418 2268 991F      		rol r25
 5419 226a B901      		movw r22,r18
 5420 226c 680F      		add r22,r24
 5421 226e 791F      		adc r23,r25
 5422 2270 8889      		ldd r24,Y+16
 5423 2272 9989      		ldd r25,Y+17
 5424 2274 22E0      		ldi r18,lo8(2)
 5425 2276 0E94 0000 		call allocINT
 538:lp_solve_5.5/lp_presolve.c ****         items = psdata->rows->next[i];
 5426               		.loc 2 538 0
 5427 227a 88A1      		ldd r24,Y+32
 5428 227c 99A1      		ldd r25,Y+33
 5429 227e FC01      		movw r30,r24
 5430 2280 8081      		ld r24,Z
 5431 2282 9181      		ldd r25,Z+1
 5432 2284 FC01      		movw r30,r24
 5433 2286 2281      		ldd r18,Z+2
 5434 2288 3381      		ldd r19,Z+3
 5435 228a 8981      		ldd r24,Y+1
 5436 228c 9A81      		ldd r25,Y+2
 5437 228e 880F      		lsl r24
 5438 2290 991F      		rol r25
 5439 2292 820F      		add r24,r18
 5440 2294 931F      		adc r25,r19
 5441 2296 FC01      		movw r30,r24
 5442 2298 8081      		ld r24,Z
 5443 229a 9181      		ldd r25,Z+1
 5444 229c 9D8B      		std Y+21,r25
 5445 229e 8C8B      		std Y+20,r24
 539:lp_solve_5.5/lp_presolve.c ****         je = mat->row_end[i];
 5446               		.loc 2 539 0
 5447 22a0 8A89      		ldd r24,Y+18
 5448 22a2 9B89      		ldd r25,Y+19
 5449 22a4 FC01      		movw r30,r24
 5450 22a6 208D      		ldd r18,Z+24
 5451 22a8 318D      		ldd r19,Z+25
 5452 22aa 8981      		ldd r24,Y+1
 5453 22ac 9A81      		ldd r25,Y+2
 5454 22ae 880F      		lsl r24
 5455 22b0 991F      		rol r25
 5456 22b2 820F      		add r24,r18
 5457 22b4 931F      		adc r25,r19
 5458 22b6 FC01      		movw r30,r24
 5459 22b8 8081      		ld r24,Z
 5460 22ba 9181      		ldd r25,Z+1
 5461 22bc 9F8B      		std Y+23,r25
 5462 22be 8E8B      		std Y+22,r24
 540:lp_solve_5.5/lp_presolve.c ****         k = 0;
 5463               		.loc 2 540 0
 5464 22c0 1E82      		std Y+6,__zero_reg__
 5465 22c2 1D82      		std Y+5,__zero_reg__
 541:lp_solve_5.5/lp_presolve.c ****         for(j = mat->row_end[i-1]; j < je; j++)
 5466               		.loc 2 541 0
 5467 22c4 8A89      		ldd r24,Y+18
 5468 22c6 9B89      		ldd r25,Y+19
 5469 22c8 FC01      		movw r30,r24
 5470 22ca 208D      		ldd r18,Z+24
 5471 22cc 318D      		ldd r19,Z+25
 5472 22ce 8981      		ldd r24,Y+1
 5473 22d0 9A81      		ldd r25,Y+2
 5474 22d2 8150      		subi r24,1
 5475 22d4 9048      		sbci r25,-128
 5476 22d6 880F      		lsl r24
 5477 22d8 991F      		rol r25
 5478 22da 820F      		add r24,r18
 5479 22dc 931F      		adc r25,r19
 5480 22de FC01      		movw r30,r24
 5481 22e0 8081      		ld r24,Z
 5482 22e2 9181      		ldd r25,Z+1
 5483 22e4 9C83      		std Y+4,r25
 5484 22e6 8B83      		std Y+3,r24
 5485 22e8 00C0      		rjmp .L190
 5486               	.L192:
 542:lp_solve_5.5/lp_presolve.c ****           if(isActiveLink(psdata->cols->varmap, ROW_MAT_COLNR(j))) {
 5487               		.loc 2 542 0
 5488 22ea 8A89      		ldd r24,Y+18
 5489 22ec 9B89      		ldd r25,Y+19
 5490 22ee FC01      		movw r30,r24
 5491 22f0 2485      		ldd r18,Z+12
 5492 22f2 3585      		ldd r19,Z+13
 5493 22f4 8A89      		ldd r24,Y+18
 5494 22f6 9B89      		ldd r25,Y+19
 5495 22f8 FC01      		movw r30,r24
 5496 22fa 4689      		ldd r20,Z+22
 5497 22fc 5789      		ldd r21,Z+23
 5498 22fe 8B81      		ldd r24,Y+3
 5499 2300 9C81      		ldd r25,Y+4
 5500 2302 880F      		lsl r24
 5501 2304 991F      		rol r25
 5502 2306 840F      		add r24,r20
 5503 2308 951F      		adc r25,r21
 5504 230a FC01      		movw r30,r24
 5505 230c 8081      		ld r24,Z
 5506 230e 9181      		ldd r25,Z+1
 5507 2310 880F      		lsl r24
 5508 2312 991F      		rol r25
 5509 2314 820F      		add r24,r18
 5510 2316 931F      		adc r25,r19
 5511 2318 FC01      		movw r30,r24
 5512 231a 2081      		ld r18,Z
 5513 231c 3181      		ldd r19,Z+1
 5514 231e 88A1      		ldd r24,Y+32
 5515 2320 99A1      		ldd r25,Y+33
 5516 2322 FC01      		movw r30,r24
 5517 2324 8281      		ldd r24,Z+2
 5518 2326 9381      		ldd r25,Z+3
 5519 2328 FC01      		movw r30,r24
 5520 232a 8081      		ld r24,Z
 5521 232c 9181      		ldd r25,Z+1
 5522 232e B901      		movw r22,r18
 5523 2330 0E94 0000 		call isActiveLink
 5524 2334 8823      		tst r24
 5525 2336 01F0      		breq .L191
 543:lp_solve_5.5/lp_presolve.c ****             k++;
 5526               		.loc 2 543 0
 5527 2338 8D81      		ldd r24,Y+5
 5528 233a 9E81      		ldd r25,Y+6
 5529 233c 0196      		adiw r24,1
 5530 233e 9E83      		std Y+6,r25
 5531 2340 8D83      		std Y+5,r24
 544:lp_solve_5.5/lp_presolve.c ****             items[k] = j;
 5532               		.loc 2 544 0
 5533 2342 8D81      		ldd r24,Y+5
 5534 2344 9E81      		ldd r25,Y+6
 5535 2346 880F      		lsl r24
 5536 2348 991F      		rol r25
 5537 234a 2C89      		ldd r18,Y+20
 5538 234c 3D89      		ldd r19,Y+21
 5539 234e 820F      		add r24,r18
 5540 2350 931F      		adc r25,r19
 5541 2352 2B81      		ldd r18,Y+3
 5542 2354 3C81      		ldd r19,Y+4
 5543 2356 FC01      		movw r30,r24
 5544 2358 3183      		std Z+1,r19
 5545 235a 2083      		st Z,r18
 5546               	.L191:
 541:lp_solve_5.5/lp_presolve.c ****           if(isActiveLink(psdata->cols->varmap, ROW_MAT_COLNR(j))) {
 5547               		.loc 2 541 0 discriminator 2
 5548 235c 8B81      		ldd r24,Y+3
 5549 235e 9C81      		ldd r25,Y+4
 5550 2360 0196      		adiw r24,1
 5551 2362 9C83      		std Y+4,r25
 5552 2364 8B83      		std Y+3,r24
 5553               	.L190:
 541:lp_solve_5.5/lp_presolve.c ****           if(isActiveLink(psdata->cols->varmap, ROW_MAT_COLNR(j))) {
 5554               		.loc 2 541 0 is_stmt 0 discriminator 1
 5555 2366 2B81      		ldd r18,Y+3
 5556 2368 3C81      		ldd r19,Y+4
 5557 236a 8E89      		ldd r24,Y+22
 5558 236c 9F89      		ldd r25,Y+23
 5559 236e 2817      		cp r18,r24
 5560 2370 3907      		cpc r19,r25
 5561 2372 04F4      		brge .+2
 5562 2374 00C0      		rjmp .L192
 545:lp_solve_5.5/lp_presolve.c ****           }
 546:lp_solve_5.5/lp_presolve.c ****         items[0] = k;
 5563               		.loc 2 546 0 is_stmt 1
 5564 2376 8C89      		ldd r24,Y+20
 5565 2378 9D89      		ldd r25,Y+21
 5566 237a 2D81      		ldd r18,Y+5
 5567 237c 3E81      		ldd r19,Y+6
 5568 237e FC01      		movw r30,r24
 5569 2380 3183      		std Z+1,r19
 5570 2382 2083      		st Z,r18
 5571               	.L189:
 525:lp_solve_5.5/lp_presolve.c **** 
 5572               		.loc 2 525 0 discriminator 2
 5573 2384 8981      		ldd r24,Y+1
 5574 2386 9A81      		ldd r25,Y+2
 5575 2388 0196      		adiw r24,1
 5576 238a 9A83      		std Y+2,r25
 5577 238c 8983      		std Y+1,r24
 5578               	.L186:
 525:lp_solve_5.5/lp_presolve.c **** 
 5579               		.loc 2 525 0 is_stmt 0 discriminator 1
 5580 238e 8889      		ldd r24,Y+16
 5581 2390 9989      		ldd r25,Y+17
 5582 2392 8651      		subi r24,22
 5583 2394 9E4F      		sbci r25,-2
 5584 2396 FC01      		movw r30,r24
 5585 2398 2081      		ld r18,Z
 5586 239a 3181      		ldd r19,Z+1
 5587 239c 8981      		ldd r24,Y+1
 5588 239e 9A81      		ldd r25,Y+2
 5589 23a0 2817      		cp r18,r24
 5590 23a2 3907      		cpc r19,r25
 5591 23a4 04F0      		brlt .+2
 5592 23a6 00C0      		rjmp .L193
 547:lp_solve_5.5/lp_presolve.c ****       }
 548:lp_solve_5.5/lp_presolve.c ****     }
 549:lp_solve_5.5/lp_presolve.c **** 
 550:lp_solve_5.5/lp_presolve.c ****     /* ...then update columns */
 551:lp_solve_5.5/lp_presolve.c ****     for(j = 1; j <= lp->columns; j++) {
 5593               		.loc 2 551 0 is_stmt 1
 5594 23a8 81E0      		ldi r24,lo8(1)
 5595 23aa 90E0      		ldi r25,0
 5596 23ac 9C83      		std Y+4,r25
 5597 23ae 8B83      		std Y+3,r24
 5598 23b0 00C0      		rjmp .L194
 5599               	.L215:
 552:lp_solve_5.5/lp_presolve.c **** 
 553:lp_solve_5.5/lp_presolve.c ****       psdata->cols->plucount[j] = 0;
 5600               		.loc 2 553 0
 5601 23b2 88A1      		ldd r24,Y+32
 5602 23b4 99A1      		ldd r25,Y+33
 5603 23b6 FC01      		movw r30,r24
 5604 23b8 8281      		ldd r24,Z+2
 5605 23ba 9381      		ldd r25,Z+3
 5606 23bc FC01      		movw r30,r24
 5607 23be 2681      		ldd r18,Z+6
 5608 23c0 3781      		ldd r19,Z+7
 5609 23c2 8B81      		ldd r24,Y+3
 5610 23c4 9C81      		ldd r25,Y+4
 5611 23c6 880F      		lsl r24
 5612 23c8 991F      		rol r25
 5613 23ca 820F      		add r24,r18
 5614 23cc 931F      		adc r25,r19
 5615 23ce FC01      		movw r30,r24
 5616 23d0 1182      		std Z+1,__zero_reg__
 5617 23d2 1082      		st Z,__zero_reg__
 554:lp_solve_5.5/lp_presolve.c ****       psdata->cols->negcount[j] = 0;
 5618               		.loc 2 554 0
 5619 23d4 88A1      		ldd r24,Y+32
 5620 23d6 99A1      		ldd r25,Y+33
 5621 23d8 FC01      		movw r30,r24
 5622 23da 8281      		ldd r24,Z+2
 5623 23dc 9381      		ldd r25,Z+3
 5624 23de FC01      		movw r30,r24
 5625 23e0 2085      		ldd r18,Z+8
 5626 23e2 3185      		ldd r19,Z+9
 5627 23e4 8B81      		ldd r24,Y+3
 5628 23e6 9C81      		ldd r25,Y+4
 5629 23e8 880F      		lsl r24
 5630 23ea 991F      		rol r25
 5631 23ec 820F      		add r24,r18
 5632 23ee 931F      		adc r25,r19
 5633 23f0 FC01      		movw r30,r24
 5634 23f2 1182      		std Z+1,__zero_reg__
 5635 23f4 1082      		st Z,__zero_reg__
 555:lp_solve_5.5/lp_presolve.c ****       psdata->cols->pluneg[j]   = 0;
 5636               		.loc 2 555 0
 5637 23f6 88A1      		ldd r24,Y+32
 5638 23f8 99A1      		ldd r25,Y+33
 5639 23fa FC01      		movw r30,r24
 5640 23fc 8281      		ldd r24,Z+2
 5641 23fe 9381      		ldd r25,Z+3
 5642 2400 FC01      		movw r30,r24
 5643 2402 2285      		ldd r18,Z+10
 5644 2404 3385      		ldd r19,Z+11
 5645 2406 8B81      		ldd r24,Y+3
 5646 2408 9C81      		ldd r25,Y+4
 5647 240a 880F      		lsl r24
 5648 240c 991F      		rol r25
 5649 240e 820F      		add r24,r18
 5650 2410 931F      		adc r25,r19
 5651 2412 FC01      		movw r30,r24
 5652 2414 1182      		std Z+1,__zero_reg__
 5653 2416 1082      		st Z,__zero_reg__
 556:lp_solve_5.5/lp_presolve.c **** 
 557:lp_solve_5.5/lp_presolve.c ****       if(!isActiveLink(psdata->cols->varmap, j)) {
 5654               		.loc 2 557 0
 5655 2418 88A1      		ldd r24,Y+32
 5656 241a 99A1      		ldd r25,Y+33
 5657 241c FC01      		movw r30,r24
 5658 241e 8281      		ldd r24,Z+2
 5659 2420 9381      		ldd r25,Z+3
 5660 2422 FC01      		movw r30,r24
 5661 2424 8081      		ld r24,Z
 5662 2426 9181      		ldd r25,Z+1
 5663 2428 2B81      		ldd r18,Y+3
 5664 242a 3C81      		ldd r19,Y+4
 5665 242c B901      		movw r22,r18
 5666 242e 0E94 0000 		call isActiveLink
 5667 2432 8823      		tst r24
 5668 2434 01F4      		brne .L195
 558:lp_solve_5.5/lp_presolve.c ****         FREE(psdata->cols->next[j]);
 5669               		.loc 2 558 0
 5670 2436 88A1      		ldd r24,Y+32
 5671 2438 99A1      		ldd r25,Y+33
 5672 243a FC01      		movw r30,r24
 5673 243c 8281      		ldd r24,Z+2
 5674 243e 9381      		ldd r25,Z+3
 5675 2440 FC01      		movw r30,r24
 5676 2442 2281      		ldd r18,Z+2
 5677 2444 3381      		ldd r19,Z+3
 5678 2446 8B81      		ldd r24,Y+3
 5679 2448 9C81      		ldd r25,Y+4
 5680 244a 880F      		lsl r24
 5681 244c 991F      		rol r25
 5682 244e 820F      		add r24,r18
 5683 2450 931F      		adc r25,r19
 5684 2452 FC01      		movw r30,r24
 5685 2454 8081      		ld r24,Z
 5686 2456 9181      		ldd r25,Z+1
 5687 2458 892B      		or r24,r25
 5688 245a 01F4      		brne .+2
 5689 245c 00C0      		rjmp .L197
 5690               		.loc 2 558 0 is_stmt 0 discriminator 1
 5691 245e 88A1      		ldd r24,Y+32
 5692 2460 99A1      		ldd r25,Y+33
 5693 2462 FC01      		movw r30,r24
 5694 2464 8281      		ldd r24,Z+2
 5695 2466 9381      		ldd r25,Z+3
 5696 2468 FC01      		movw r30,r24
 5697 246a 2281      		ldd r18,Z+2
 5698 246c 3381      		ldd r19,Z+3
 5699 246e 8B81      		ldd r24,Y+3
 5700 2470 9C81      		ldd r25,Y+4
 5701 2472 880F      		lsl r24
 5702 2474 991F      		rol r25
 5703 2476 820F      		add r24,r18
 5704 2478 931F      		adc r25,r19
 5705 247a FC01      		movw r30,r24
 5706 247c 8081      		ld r24,Z
 5707 247e 9181      		ldd r25,Z+1
 5708 2480 0E94 0000 		call free
 5709 2484 88A1      		ldd r24,Y+32
 5710 2486 99A1      		ldd r25,Y+33
 5711 2488 FC01      		movw r30,r24
 5712 248a 8281      		ldd r24,Z+2
 5713 248c 9381      		ldd r25,Z+3
 5714 248e FC01      		movw r30,r24
 5715 2490 2281      		ldd r18,Z+2
 5716 2492 3381      		ldd r19,Z+3
 5717 2494 8B81      		ldd r24,Y+3
 5718 2496 9C81      		ldd r25,Y+4
 5719 2498 880F      		lsl r24
 5720 249a 991F      		rol r25
 5721 249c 820F      		add r24,r18
 5722 249e 931F      		adc r25,r19
 5723 24a0 FC01      		movw r30,r24
 5724 24a2 1182      		std Z+1,__zero_reg__
 5725 24a4 1082      		st Z,__zero_reg__
 5726 24a6 00C0      		rjmp .L197
 5727               	.L195:
 559:lp_solve_5.5/lp_presolve.c ****       }
 560:lp_solve_5.5/lp_presolve.c ****       else {
 561:lp_solve_5.5/lp_presolve.c ****         upbound = get_upbo(lp, j);
 5728               		.loc 2 561 0 is_stmt 1
 5729 24a8 2B81      		ldd r18,Y+3
 5730 24aa 3C81      		ldd r19,Y+4
 5731 24ac 8889      		ldd r24,Y+16
 5732 24ae 9989      		ldd r25,Y+17
 5733 24b0 B901      		movw r22,r18
 5734 24b2 0E94 0000 		call get_upbo
 5735 24b6 DC01      		movw r26,r24
 5736 24b8 CB01      		movw r24,r22
 5737 24ba 8F83      		std Y+7,r24
 5738 24bc 9887      		std Y+8,r25
 5739 24be A987      		std Y+9,r26
 5740 24c0 BA87      		std Y+10,r27
 562:lp_solve_5.5/lp_presolve.c ****         lobound = get_lowbo(lp, j);
 5741               		.loc 2 562 0
 5742 24c2 2B81      		ldd r18,Y+3
 5743 24c4 3C81      		ldd r19,Y+4
 5744 24c6 8889      		ldd r24,Y+16
 5745 24c8 9989      		ldd r25,Y+17
 5746 24ca B901      		movw r22,r18
 5747 24cc 0E94 0000 		call get_lowbo
 5748 24d0 DC01      		movw r26,r24
 5749 24d2 CB01      		movw r24,r22
 5750 24d4 8B87      		std Y+11,r24
 5751 24d6 9C87      		std Y+12,r25
 5752 24d8 AD87      		std Y+13,r26
 5753 24da BE87      		std Y+14,r27
 563:lp_solve_5.5/lp_presolve.c ****         if(is_semicont(lp, j) && (upbound > lobound)) {
 5754               		.loc 2 563 0
 5755 24dc 2B81      		ldd r18,Y+3
 5756 24de 3C81      		ldd r19,Y+4
 5757 24e0 8889      		ldd r24,Y+16
 5758 24e2 9989      		ldd r25,Y+17
 5759 24e4 B901      		movw r22,r18
 5760 24e6 0E94 0000 		call is_semicont
 5761 24ea 8823      		tst r24
 5762 24ec 01F0      		breq .L198
 5763               		.loc 2 563 0 is_stmt 0 discriminator 1
 5764 24ee 2B85      		ldd r18,Y+11
 5765 24f0 3C85      		ldd r19,Y+12
 5766 24f2 4D85      		ldd r20,Y+13
 5767 24f4 5E85      		ldd r21,Y+14
 5768 24f6 6F81      		ldd r22,Y+7
 5769 24f8 7885      		ldd r23,Y+8
 5770 24fa 8985      		ldd r24,Y+9
 5771 24fc 9A85      		ldd r25,Y+10
 5772 24fe 0E94 0000 		call __gtsf2
 5773 2502 1816      		cp __zero_reg__,r24
 5774 2504 04F4      		brge .L198
 564:lp_solve_5.5/lp_presolve.c ****           if(lobound > 0)
 5775               		.loc 2 564 0 is_stmt 1
 5776 2506 20E0      		ldi r18,0
 5777 2508 30E0      		ldi r19,0
 5778 250a A901      		movw r20,r18
 5779 250c 6B85      		ldd r22,Y+11
 5780 250e 7C85      		ldd r23,Y+12
 5781 2510 8D85      		ldd r24,Y+13
 5782 2512 9E85      		ldd r25,Y+14
 5783 2514 0E94 0000 		call __gtsf2
 5784 2518 1816      		cp __zero_reg__,r24
 5785 251a 04F4      		brge .L222
 565:lp_solve_5.5/lp_presolve.c ****             lobound = 0;
 5786               		.loc 2 565 0
 5787 251c 1B86      		std Y+11,__zero_reg__
 5788 251e 1C86      		std Y+12,__zero_reg__
 5789 2520 1D86      		std Y+13,__zero_reg__
 5790 2522 1E86      		std Y+14,__zero_reg__
 5791 2524 00C0      		rjmp .L198
 5792               	.L222:
 566:lp_solve_5.5/lp_presolve.c ****           else if(upbound < 0)
 5793               		.loc 2 566 0
 5794 2526 20E0      		ldi r18,0
 5795 2528 30E0      		ldi r19,0
 5796 252a A901      		movw r20,r18
 5797 252c 6F81      		ldd r22,Y+7
 5798 252e 7885      		ldd r23,Y+8
 5799 2530 8985      		ldd r24,Y+9
 5800 2532 9A85      		ldd r25,Y+10
 5801 2534 0E94 0000 		call __ltsf2
 5802 2538 8823      		tst r24
 5803 253a 04F4      		brge .L198
 567:lp_solve_5.5/lp_presolve.c ****             upbound = 0;
 5804               		.loc 2 567 0
 5805 253c 1F82      		std Y+7,__zero_reg__
 5806 253e 1886      		std Y+8,__zero_reg__
 5807 2540 1986      		std Y+9,__zero_reg__
 5808 2542 1A86      		std Y+10,__zero_reg__
 5809               	.L198:
 568:lp_solve_5.5/lp_presolve.c ****         }
 569:lp_solve_5.5/lp_presolve.c **** 
 570:lp_solve_5.5/lp_presolve.c ****         /* Create next row pointers by column */
 571:lp_solve_5.5/lp_presolve.c ****         k = mat_collength(mat, j);
 5810               		.loc 2 571 0
 5811 2544 2B81      		ldd r18,Y+3
 5812 2546 3C81      		ldd r19,Y+4
 5813 2548 8A89      		ldd r24,Y+18
 5814 254a 9B89      		ldd r25,Y+19
 5815 254c B901      		movw r22,r18
 5816 254e 0E94 0000 		call mat_collength
 5817 2552 9E83      		std Y+6,r25
 5818 2554 8D83      		std Y+5,r24
 572:lp_solve_5.5/lp_presolve.c ****         allocINT(lp, &(psdata->cols->next[j]), k+1, AUTOMATIC);
 5819               		.loc 2 572 0
 5820 2556 8D81      		ldd r24,Y+5
 5821 2558 9E81      		ldd r25,Y+6
 5822 255a AC01      		movw r20,r24
 5823 255c 4F5F      		subi r20,-1
 5824 255e 5F4F      		sbci r21,-1
 5825 2560 88A1      		ldd r24,Y+32
 5826 2562 99A1      		ldd r25,Y+33
 5827 2564 FC01      		movw r30,r24
 5828 2566 8281      		ldd r24,Z+2
 5829 2568 9381      		ldd r25,Z+3
 5830 256a FC01      		movw r30,r24
 5831 256c 2281      		ldd r18,Z+2
 5832 256e 3381      		ldd r19,Z+3
 5833 2570 8B81      		ldd r24,Y+3
 5834 2572 9C81      		ldd r25,Y+4
 5835 2574 880F      		lsl r24
 5836 2576 991F      		rol r25
 5837 2578 B901      		movw r22,r18
 5838 257a 680F      		add r22,r24
 5839 257c 791F      		adc r23,r25
 5840 257e 8889      		ldd r24,Y+16
 5841 2580 9989      		ldd r25,Y+17
 5842 2582 22E0      		ldi r18,lo8(2)
 5843 2584 0E94 0000 		call allocINT
 573:lp_solve_5.5/lp_presolve.c ****         items = psdata->cols->next[j];
 5844               		.loc 2 573 0
 5845 2588 88A1      		ldd r24,Y+32
 5846 258a 99A1      		ldd r25,Y+33
 5847 258c FC01      		movw r30,r24
 5848 258e 8281      		ldd r24,Z+2
 5849 2590 9381      		ldd r25,Z+3
 5850 2592 FC01      		movw r30,r24
 5851 2594 2281      		ldd r18,Z+2
 5852 2596 3381      		ldd r19,Z+3
 5853 2598 8B81      		ldd r24,Y+3
 5854 259a 9C81      		ldd r25,Y+4
 5855 259c 880F      		lsl r24
 5856 259e 991F      		rol r25
 5857 25a0 820F      		add r24,r18
 5858 25a2 931F      		adc r25,r19
 5859 25a4 FC01      		movw r30,r24
 5860 25a6 8081      		ld r24,Z
 5861 25a8 9181      		ldd r25,Z+1
 5862 25aa 9D8B      		std Y+21,r25
 5863 25ac 8C8B      		std Y+20,r24
 574:lp_solve_5.5/lp_presolve.c ****         ie = mat->col_end[j];
 5864               		.loc 2 574 0
 5865 25ae 8A89      		ldd r24,Y+18
 5866 25b0 9B89      		ldd r25,Y+19
 5867 25b2 FC01      		movw r30,r24
 5868 25b4 2289      		ldd r18,Z+18
 5869 25b6 3389      		ldd r19,Z+19
 5870 25b8 8B81      		ldd r24,Y+3
 5871 25ba 9C81      		ldd r25,Y+4
 5872 25bc 880F      		lsl r24
 5873 25be 991F      		rol r25
 5874 25c0 820F      		add r24,r18
 5875 25c2 931F      		adc r25,r19
 5876 25c4 FC01      		movw r30,r24
 5877 25c6 8081      		ld r24,Z
 5878 25c8 9181      		ldd r25,Z+1
 5879 25ca 998F      		std Y+25,r25
 5880 25cc 888F      		std Y+24,r24
 575:lp_solve_5.5/lp_presolve.c ****         k = 0;
 5881               		.loc 2 575 0
 5882 25ce 1E82      		std Y+6,__zero_reg__
 5883 25d0 1D82      		std Y+5,__zero_reg__
 576:lp_solve_5.5/lp_presolve.c ****         for(i = mat->col_end[j-1]; i < ie; i++) {
 5884               		.loc 2 576 0
 5885 25d2 8A89      		ldd r24,Y+18
 5886 25d4 9B89      		ldd r25,Y+19
 5887 25d6 FC01      		movw r30,r24
 5888 25d8 2289      		ldd r18,Z+18
 5889 25da 3389      		ldd r19,Z+19
 5890 25dc 8B81      		ldd r24,Y+3
 5891 25de 9C81      		ldd r25,Y+4
 5892 25e0 8150      		subi r24,1
 5893 25e2 9048      		sbci r25,-128
 5894 25e4 880F      		lsl r24
 5895 25e6 991F      		rol r25
 5896 25e8 820F      		add r24,r18
 5897 25ea 931F      		adc r25,r19
 5898 25ec FC01      		movw r30,r24
 5899 25ee 8081      		ld r24,Z
 5900 25f0 9181      		ldd r25,Z+1
 5901 25f2 9A83      		std Y+2,r25
 5902 25f4 8983      		std Y+1,r24
 5903 25f6 00C0      		rjmp .L203
 5904               	.L214:
 577:lp_solve_5.5/lp_presolve.c ****           rownr = COL_MAT_ROWNR(i);
 5905               		.loc 2 577 0
 5906 25f8 8A89      		ldd r24,Y+18
 5907 25fa 9B89      		ldd r25,Y+19
 5908 25fc FC01      		movw r30,r24
 5909 25fe 2685      		ldd r18,Z+14
 5910 2600 3785      		ldd r19,Z+15
 5911 2602 8981      		ldd r24,Y+1
 5912 2604 9A81      		ldd r25,Y+2
 5913 2606 880F      		lsl r24
 5914 2608 991F      		rol r25
 5915 260a 820F      		add r24,r18
 5916 260c 931F      		adc r25,r19
 5917 260e FC01      		movw r30,r24
 5918 2610 8081      		ld r24,Z
 5919 2612 9181      		ldd r25,Z+1
 5920 2614 9B8F      		std Y+27,r25
 5921 2616 8A8F      		std Y+26,r24
 578:lp_solve_5.5/lp_presolve.c ****           if(isActiveLink(psdata->rows->varmap, rownr)) {
 5922               		.loc 2 578 0
 5923 2618 88A1      		ldd r24,Y+32
 5924 261a 99A1      		ldd r25,Y+33
 5925 261c FC01      		movw r30,r24
 5926 261e 8081      		ld r24,Z
 5927 2620 9181      		ldd r25,Z+1
 5928 2622 FC01      		movw r30,r24
 5929 2624 8081      		ld r24,Z
 5930 2626 9181      		ldd r25,Z+1
 5931 2628 2A8D      		ldd r18,Y+26
 5932 262a 3B8D      		ldd r19,Y+27
 5933 262c B901      		movw r22,r18
 5934 262e 0E94 0000 		call isActiveLink
 5935 2632 8823      		tst r24
 5936 2634 01F4      		brne .+2
 5937 2636 00C0      		rjmp .L204
 579:lp_solve_5.5/lp_presolve.c ****             k++;
 5938               		.loc 2 579 0
 5939 2638 8D81      		ldd r24,Y+5
 5940 263a 9E81      		ldd r25,Y+6
 5941 263c 0196      		adiw r24,1
 5942 263e 9E83      		std Y+6,r25
 5943 2640 8D83      		std Y+5,r24
 580:lp_solve_5.5/lp_presolve.c ****             items[k] = i;
 5944               		.loc 2 580 0
 5945 2642 8D81      		ldd r24,Y+5
 5946 2644 9E81      		ldd r25,Y+6
 5947 2646 880F      		lsl r24
 5948 2648 991F      		rol r25
 5949 264a 2C89      		ldd r18,Y+20
 5950 264c 3D89      		ldd r19,Y+21
 5951 264e 820F      		add r24,r18
 5952 2650 931F      		adc r25,r19
 5953 2652 2981      		ldd r18,Y+1
 5954 2654 3A81      		ldd r19,Y+2
 5955 2656 FC01      		movw r30,r24
 5956 2658 3183      		std Z+1,r19
 5957 265a 2083      		st Z,r18
 581:lp_solve_5.5/lp_presolve.c **** 
 582:lp_solve_5.5/lp_presolve.c ****             /* Cumulate counts */
 583:lp_solve_5.5/lp_presolve.c ****             value = COL_MAT_VALUE(i);
 5958               		.loc 2 583 0
 5959 265c 8A89      		ldd r24,Y+18
 5960 265e 9B89      		ldd r25,Y+19
 5961 2660 FC01      		movw r30,r24
 5962 2662 2089      		ldd r18,Z+16
 5963 2664 3189      		ldd r19,Z+17
 5964 2666 8981      		ldd r24,Y+1
 5965 2668 9A81      		ldd r25,Y+2
 5966 266a 880F      		lsl r24
 5967 266c 991F      		rol r25
 5968 266e 880F      		lsl r24
 5969 2670 991F      		rol r25
 5970 2672 820F      		add r24,r18
 5971 2674 931F      		adc r25,r19
 5972 2676 FC01      		movw r30,r24
 5973 2678 8081      		ld r24,Z
 5974 267a 9181      		ldd r25,Z+1
 5975 267c A281      		ldd r26,Z+2
 5976 267e B381      		ldd r27,Z+3
 5977 2680 8C8F      		std Y+28,r24
 5978 2682 9D8F      		std Y+29,r25
 5979 2684 AE8F      		std Y+30,r26
 5980 2686 BF8F      		std Y+31,r27
 584:lp_solve_5.5/lp_presolve.c ****             if(my_chsign(is_chsign(lp, rownr), value) > 0) {
 5981               		.loc 2 584 0
 5982 2688 2A8D      		ldd r18,Y+26
 5983 268a 3B8D      		ldd r19,Y+27
 5984 268c 8889      		ldd r24,Y+16
 5985 268e 9989      		ldd r25,Y+17
 5986 2690 B901      		movw r22,r18
 5987 2692 0E94 0000 		call is_chsign
 5988 2696 8823      		tst r24
 5989 2698 01F0      		breq .L205
 5990               		.loc 2 584 0 is_stmt 0 discriminator 1
 5991 269a 20E0      		ldi r18,0
 5992 269c 30E0      		ldi r19,0
 5993 269e A901      		movw r20,r18
 5994 26a0 6C8D      		ldd r22,Y+28
 5995 26a2 7D8D      		ldd r23,Y+29
 5996 26a4 8E8D      		ldd r24,Y+30
 5997 26a6 9F8D      		ldd r25,Y+31
 5998 26a8 0E94 0000 		call __nesf2
 5999 26ac 8823      		tst r24
 6000 26ae 01F0      		breq .L205
 6001               		.loc 2 584 0 discriminator 3
 6002 26b0 11E0      		ldi r17,lo8(1)
 6003 26b2 20E0      		ldi r18,0
 6004 26b4 30E0      		ldi r19,0
 6005 26b6 A901      		movw r20,r18
 6006 26b8 6C8D      		ldd r22,Y+28
 6007 26ba 7D8D      		ldd r23,Y+29
 6008 26bc 8E8D      		ldd r24,Y+30
 6009 26be 9F8D      		ldd r25,Y+31
 6010 26c0 0E94 0000 		call __ltsf2
 6011 26c4 8823      		tst r24
 6012 26c6 04F0      		brlt .L208
 6013 26c8 10E0      		ldi r17,0
 6014 26ca 00C0      		rjmp .L208
 6015               	.L205:
 6016               		.loc 2 584 0 discriminator 4
 6017 26cc 11E0      		ldi r17,lo8(1)
 6018 26ce 20E0      		ldi r18,0
 6019 26d0 30E0      		ldi r19,0
 6020 26d2 A901      		movw r20,r18
 6021 26d4 6C8D      		ldd r22,Y+28
 6022 26d6 7D8D      		ldd r23,Y+29
 6023 26d8 8E8D      		ldd r24,Y+30
 6024 26da 9F8D      		ldd r25,Y+31
 6025 26dc 0E94 0000 		call __gtsf2
 6026 26e0 1816      		cp __zero_reg__,r24
 6027 26e2 04F0      		brlt .L208
 6028 26e4 10E0      		ldi r17,0
 6029               	.L208:
 6030               		.loc 2 584 0 discriminator 6
 6031 26e6 1123      		tst r17
 6032 26e8 01F0      		breq .L210
 585:lp_solve_5.5/lp_presolve.c ****               psdata->rows->plucount[rownr]++;
 6033               		.loc 2 585 0 is_stmt 1
 6034 26ea 88A1      		ldd r24,Y+32
 6035 26ec 99A1      		ldd r25,Y+33
 6036 26ee FC01      		movw r30,r24
 6037 26f0 8081      		ld r24,Z
 6038 26f2 9181      		ldd r25,Z+1
 6039 26f4 FC01      		movw r30,r24
 6040 26f6 2681      		ldd r18,Z+6
 6041 26f8 3781      		ldd r19,Z+7
 6042 26fa 8A8D      		ldd r24,Y+26
 6043 26fc 9B8D      		ldd r25,Y+27
 6044 26fe 880F      		lsl r24
 6045 2700 991F      		rol r25
 6046 2702 820F      		add r24,r18
 6047 2704 931F      		adc r25,r19
 6048 2706 FC01      		movw r30,r24
 6049 2708 2081      		ld r18,Z
 6050 270a 3181      		ldd r19,Z+1
 6051 270c 2F5F      		subi r18,-1
 6052 270e 3F4F      		sbci r19,-1
 6053 2710 FC01      		movw r30,r24
 6054 2712 3183      		std Z+1,r19
 6055 2714 2083      		st Z,r18
 586:lp_solve_5.5/lp_presolve.c ****               psdata->cols->plucount[j]++;
 6056               		.loc 2 586 0
 6057 2716 88A1      		ldd r24,Y+32
 6058 2718 99A1      		ldd r25,Y+33
 6059 271a FC01      		movw r30,r24
 6060 271c 8281      		ldd r24,Z+2
 6061 271e 9381      		ldd r25,Z+3
 6062 2720 FC01      		movw r30,r24
 6063 2722 2681      		ldd r18,Z+6
 6064 2724 3781      		ldd r19,Z+7
 6065 2726 8B81      		ldd r24,Y+3
 6066 2728 9C81      		ldd r25,Y+4
 6067 272a 880F      		lsl r24
 6068 272c 991F      		rol r25
 6069 272e 820F      		add r24,r18
 6070 2730 931F      		adc r25,r19
 6071 2732 FC01      		movw r30,r24
 6072 2734 2081      		ld r18,Z
 6073 2736 3181      		ldd r19,Z+1
 6074 2738 2F5F      		subi r18,-1
 6075 273a 3F4F      		sbci r19,-1
 6076 273c FC01      		movw r30,r24
 6077 273e 3183      		std Z+1,r19
 6078 2740 2083      		st Z,r18
 6079 2742 00C0      		rjmp .L211
 6080               	.L210:
 587:lp_solve_5.5/lp_presolve.c ****             }
 588:lp_solve_5.5/lp_presolve.c ****             else {
 589:lp_solve_5.5/lp_presolve.c ****               psdata->rows->negcount[rownr]++;
 6081               		.loc 2 589 0
 6082 2744 88A1      		ldd r24,Y+32
 6083 2746 99A1      		ldd r25,Y+33
 6084 2748 FC01      		movw r30,r24
 6085 274a 8081      		ld r24,Z
 6086 274c 9181      		ldd r25,Z+1
 6087 274e FC01      		movw r30,r24
 6088 2750 2085      		ldd r18,Z+8
 6089 2752 3185      		ldd r19,Z+9
 6090 2754 8A8D      		ldd r24,Y+26
 6091 2756 9B8D      		ldd r25,Y+27
 6092 2758 880F      		lsl r24
 6093 275a 991F      		rol r25
 6094 275c 820F      		add r24,r18
 6095 275e 931F      		adc r25,r19
 6096 2760 FC01      		movw r30,r24
 6097 2762 2081      		ld r18,Z
 6098 2764 3181      		ldd r19,Z+1
 6099 2766 2F5F      		subi r18,-1
 6100 2768 3F4F      		sbci r19,-1
 6101 276a FC01      		movw r30,r24
 6102 276c 3183      		std Z+1,r19
 6103 276e 2083      		st Z,r18
 590:lp_solve_5.5/lp_presolve.c ****               psdata->cols->negcount[j]++;
 6104               		.loc 2 590 0
 6105 2770 88A1      		ldd r24,Y+32
 6106 2772 99A1      		ldd r25,Y+33
 6107 2774 FC01      		movw r30,r24
 6108 2776 8281      		ldd r24,Z+2
 6109 2778 9381      		ldd r25,Z+3
 6110 277a FC01      		movw r30,r24
 6111 277c 2085      		ldd r18,Z+8
 6112 277e 3185      		ldd r19,Z+9
 6113 2780 8B81      		ldd r24,Y+3
 6114 2782 9C81      		ldd r25,Y+4
 6115 2784 880F      		lsl r24
 6116 2786 991F      		rol r25
 6117 2788 820F      		add r24,r18
 6118 278a 931F      		adc r25,r19
 6119 278c FC01      		movw r30,r24
 6120 278e 2081      		ld r18,Z
 6121 2790 3181      		ldd r19,Z+1
 6122 2792 2F5F      		subi r18,-1
 6123 2794 3F4F      		sbci r19,-1
 6124 2796 FC01      		movw r30,r24
 6125 2798 3183      		std Z+1,r19
 6126 279a 2083      		st Z,r18
 6127               	.L211:
 591:lp_solve_5.5/lp_presolve.c ****             }
 592:lp_solve_5.5/lp_presolve.c ****             if((lobound < 0) && (upbound >= 0)) {
 6128               		.loc 2 592 0
 6129 279c 20E0      		ldi r18,0
 6130 279e 30E0      		ldi r19,0
 6131 27a0 A901      		movw r20,r18
 6132 27a2 6B85      		ldd r22,Y+11
 6133 27a4 7C85      		ldd r23,Y+12
 6134 27a6 8D85      		ldd r24,Y+13
 6135 27a8 9E85      		ldd r25,Y+14
 6136 27aa 0E94 0000 		call __ltsf2
 6137 27ae 8823      		tst r24
 6138 27b0 04F4      		brge .L204
 6139               		.loc 2 592 0 is_stmt 0 discriminator 1
 6140 27b2 20E0      		ldi r18,0
 6141 27b4 30E0      		ldi r19,0
 6142 27b6 A901      		movw r20,r18
 6143 27b8 6F81      		ldd r22,Y+7
 6144 27ba 7885      		ldd r23,Y+8
 6145 27bc 8985      		ldd r24,Y+9
 6146 27be 9A85      		ldd r25,Y+10
 6147 27c0 0E94 0000 		call __gesf2
 6148 27c4 8823      		tst r24
 6149 27c6 04F0      		brlt .L204
 593:lp_solve_5.5/lp_presolve.c ****               psdata->rows->pluneg[rownr]++;
 6150               		.loc 2 593 0 is_stmt 1
 6151 27c8 88A1      		ldd r24,Y+32
 6152 27ca 99A1      		ldd r25,Y+33
 6153 27cc FC01      		movw r30,r24
 6154 27ce 8081      		ld r24,Z
 6155 27d0 9181      		ldd r25,Z+1
 6156 27d2 FC01      		movw r30,r24
 6157 27d4 2285      		ldd r18,Z+10
 6158 27d6 3385      		ldd r19,Z+11
 6159 27d8 8A8D      		ldd r24,Y+26
 6160 27da 9B8D      		ldd r25,Y+27
 6161 27dc 880F      		lsl r24
 6162 27de 991F      		rol r25
 6163 27e0 820F      		add r24,r18
 6164 27e2 931F      		adc r25,r19
 6165 27e4 FC01      		movw r30,r24
 6166 27e6 2081      		ld r18,Z
 6167 27e8 3181      		ldd r19,Z+1
 6168 27ea 2F5F      		subi r18,-1
 6169 27ec 3F4F      		sbci r19,-1
 6170 27ee FC01      		movw r30,r24
 6171 27f0 3183      		std Z+1,r19
 6172 27f2 2083      		st Z,r18
 594:lp_solve_5.5/lp_presolve.c ****               psdata->cols->pluneg[j]++;
 6173               		.loc 2 594 0
 6174 27f4 88A1      		ldd r24,Y+32
 6175 27f6 99A1      		ldd r25,Y+33
 6176 27f8 FC01      		movw r30,r24
 6177 27fa 8281      		ldd r24,Z+2
 6178 27fc 9381      		ldd r25,Z+3
 6179 27fe FC01      		movw r30,r24
 6180 2800 2285      		ldd r18,Z+10
 6181 2802 3385      		ldd r19,Z+11
 6182 2804 8B81      		ldd r24,Y+3
 6183 2806 9C81      		ldd r25,Y+4
 6184 2808 880F      		lsl r24
 6185 280a 991F      		rol r25
 6186 280c 820F      		add r24,r18
 6187 280e 931F      		adc r25,r19
 6188 2810 FC01      		movw r30,r24
 6189 2812 2081      		ld r18,Z
 6190 2814 3181      		ldd r19,Z+1
 6191 2816 2F5F      		subi r18,-1
 6192 2818 3F4F      		sbci r19,-1
 6193 281a FC01      		movw r30,r24
 6194 281c 3183      		std Z+1,r19
 6195 281e 2083      		st Z,r18
 6196               	.L204:
 576:lp_solve_5.5/lp_presolve.c ****           rownr = COL_MAT_ROWNR(i);
 6197               		.loc 2 576 0 discriminator 2
 6198 2820 8981      		ldd r24,Y+1
 6199 2822 9A81      		ldd r25,Y+2
 6200 2824 0196      		adiw r24,1
 6201 2826 9A83      		std Y+2,r25
 6202 2828 8983      		std Y+1,r24
 6203               	.L203:
 576:lp_solve_5.5/lp_presolve.c ****           rownr = COL_MAT_ROWNR(i);
 6204               		.loc 2 576 0 is_stmt 0 discriminator 1
 6205 282a 2981      		ldd r18,Y+1
 6206 282c 3A81      		ldd r19,Y+2
 6207 282e 888D      		ldd r24,Y+24
 6208 2830 998D      		ldd r25,Y+25
 6209 2832 2817      		cp r18,r24
 6210 2834 3907      		cpc r19,r25
 6211 2836 04F4      		brge .+2
 6212 2838 00C0      		rjmp .L214
 595:lp_solve_5.5/lp_presolve.c ****             }
 596:lp_solve_5.5/lp_presolve.c ****           }
 597:lp_solve_5.5/lp_presolve.c ****         }
 598:lp_solve_5.5/lp_presolve.c ****         items[0] = k;
 6213               		.loc 2 598 0 is_stmt 1
 6214 283a 8C89      		ldd r24,Y+20
 6215 283c 9D89      		ldd r25,Y+21
 6216 283e 2D81      		ldd r18,Y+5
 6217 2840 3E81      		ldd r19,Y+6
 6218 2842 FC01      		movw r30,r24
 6219 2844 3183      		std Z+1,r19
 6220 2846 2083      		st Z,r18
 6221               	.L197:
 551:lp_solve_5.5/lp_presolve.c **** 
 6222               		.loc 2 551 0 discriminator 2
 6223 2848 8B81      		ldd r24,Y+3
 6224 284a 9C81      		ldd r25,Y+4
 6225 284c 0196      		adiw r24,1
 6226 284e 9C83      		std Y+4,r25
 6227 2850 8B83      		std Y+3,r24
 6228               	.L194:
 551:lp_solve_5.5/lp_presolve.c **** 
 6229               		.loc 2 551 0 is_stmt 0 discriminator 1
 6230 2852 8889      		ldd r24,Y+16
 6231 2854 9989      		ldd r25,Y+17
 6232 2856 8451      		subi r24,20
 6233 2858 9E4F      		sbci r25,-2
 6234 285a FC01      		movw r30,r24
 6235 285c 2081      		ld r18,Z
 6236 285e 3181      		ldd r19,Z+1
 6237 2860 8B81      		ldd r24,Y+3
 6238 2862 9C81      		ldd r25,Y+4
 6239 2864 2817      		cp r18,r24
 6240 2866 3907      		cpc r19,r25
 6241 2868 04F0      		brlt .+2
 6242 286a 00C0      		rjmp .L215
 6243               	.L185:
 599:lp_solve_5.5/lp_presolve.c ****       }
 600:lp_solve_5.5/lp_presolve.c ****     }
 601:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
 602:lp_solve_5.5/lp_presolve.c ****     presolve_debugmap(psdata, "presolve_validate");
 603:lp_solve_5.5/lp_presolve.c **** #endif
 604:lp_solve_5.5/lp_presolve.c ****   }
 605:lp_solve_5.5/lp_presolve.c ****   return( status );
 6244               		.loc 2 605 0 is_stmt 1
 6245 286c 8F85      		ldd r24,Y+15
 6246               	.L182:
 6247               	/* epilogue start */
 606:lp_solve_5.5/lp_presolve.c **** }
 6248               		.loc 2 606 0
 6249 286e A296      		adiw r28,34
 6250 2870 0FB6      		in __tmp_reg__,__SREG__
 6251 2872 F894      		cli
 6252 2874 DEBF      		out __SP_H__,r29
 6253 2876 0FBE      		out __SREG__,__tmp_reg__
 6254 2878 CDBF      		out __SP_L__,r28
 6255 287a DF91      		pop r29
 6256 287c CF91      		pop r28
 6257 287e 1F91      		pop r17
 6258 2880 0895      		ret
 6259               		.cfi_endproc
 6260               	.LFE27:
 6262               	.global	presolve_rowtallies
 6264               	presolve_rowtallies:
 6265               	.LFB28:
 607:lp_solve_5.5/lp_presolve.c **** 
 608:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_rowtallies(presolverec *psdata, int rownr, int *plu, int *neg, int *pluneg)
 609:lp_solve_5.5/lp_presolve.c **** {
 6266               		.loc 2 609 0
 6267               		.cfi_startproc
 6268 2882 0F93      		push r16
 6269               	.LCFI108:
 6270               		.cfi_def_cfa_offset 3
 6271               		.cfi_offset 16, -2
 6272 2884 1F93      		push r17
 6273               	.LCFI109:
 6274               		.cfi_def_cfa_offset 4
 6275               		.cfi_offset 17, -3
 6276 2886 CF93      		push r28
 6277               	.LCFI110:
 6278               		.cfi_def_cfa_offset 5
 6279               		.cfi_offset 28, -4
 6280 2888 DF93      		push r29
 6281               	.LCFI111:
 6282               		.cfi_def_cfa_offset 6
 6283               		.cfi_offset 29, -5
 6284 288a CDB7      		in r28,__SP_L__
 6285 288c DEB7      		in r29,__SP_H__
 6286               	.LCFI112:
 6287               		.cfi_def_cfa_register 28
 6288 288e 6997      		sbiw r28,25
 6289               	.LCFI113:
 6290               		.cfi_def_cfa_offset 31
 6291 2890 0FB6      		in __tmp_reg__,__SREG__
 6292 2892 F894      		cli
 6293 2894 DEBF      		out __SP_H__,r29
 6294 2896 0FBE      		out __SREG__,__tmp_reg__
 6295 2898 CDBF      		out __SP_L__,r28
 6296               	/* prologue: function */
 6297               	/* frame size = 25 */
 6298               	/* stack size = 29 */
 6299               	.L__stack_usage = 29
 6300 289a 998B      		std Y+17,r25
 6301 289c 888B      		std Y+16,r24
 6302 289e 7B8B      		std Y+19,r23
 6303 28a0 6A8B      		std Y+18,r22
 6304 28a2 5D8B      		std Y+21,r21
 6305 28a4 4C8B      		std Y+20,r20
 6306 28a6 3F8B      		std Y+23,r19
 6307 28a8 2E8B      		std Y+22,r18
 6308 28aa 198F      		std Y+25,r17
 6309 28ac 088F      		std Y+24,r16
 610:lp_solve_5.5/lp_presolve.c ****   REAL   value;
 611:lp_solve_5.5/lp_presolve.c ****   lprec  *lp = psdata->lp;
 6310               		.loc 2 611 0
 6311 28ae 8889      		ldd r24,Y+16
 6312 28b0 9989      		ldd r25,Y+17
 6313 28b2 FC01      		movw r30,r24
 6314 28b4 8289      		ldd r24,Z+18
 6315 28b6 9389      		ldd r25,Z+19
 6316 28b8 9C83      		std Y+4,r25
 6317 28ba 8B83      		std Y+3,r24
 612:lp_solve_5.5/lp_presolve.c ****   MATrec *mat = lp->matA;
 6318               		.loc 2 612 0
 6319 28bc 8B81      		ldd r24,Y+3
 6320 28be 9C81      		ldd r25,Y+4
 6321 28c0 8A54      		subi r24,74
 6322 28c2 9D4F      		sbci r25,-3
 6323 28c4 FC01      		movw r30,r24
 6324 28c6 8081      		ld r24,Z
 6325 28c8 9181      		ldd r25,Z+1
 6326 28ca 9E83      		std Y+6,r25
 6327 28cc 8D83      		std Y+5,r24
 613:lp_solve_5.5/lp_presolve.c ****   int    ix, jx, ib = 0;
 6328               		.loc 2 613 0
 6329 28ce 1F86      		std Y+15,__zero_reg__
 6330 28d0 1E86      		std Y+14,__zero_reg__
 614:lp_solve_5.5/lp_presolve.c ****   MYBOOL chsign = is_chsign(lp, rownr);
 6331               		.loc 2 614 0
 6332 28d2 2A89      		ldd r18,Y+18
 6333 28d4 3B89      		ldd r19,Y+19
 6334 28d6 8B81      		ldd r24,Y+3
 6335 28d8 9C81      		ldd r25,Y+4
 6336 28da B901      		movw r22,r18
 6337 28dc 0E94 0000 		call is_chsign
 6338 28e0 8F83      		std Y+7,r24
 615:lp_solve_5.5/lp_presolve.c **** 
 616:lp_solve_5.5/lp_presolve.c ****   /* Initialize */
 617:lp_solve_5.5/lp_presolve.c ****   *plu = 0;
 6339               		.loc 2 617 0
 6340 28e2 8C89      		ldd r24,Y+20
 6341 28e4 9D89      		ldd r25,Y+21
 6342 28e6 FC01      		movw r30,r24
 6343 28e8 1182      		std Z+1,__zero_reg__
 6344 28ea 1082      		st Z,__zero_reg__
 618:lp_solve_5.5/lp_presolve.c ****   *neg = 0;
 6345               		.loc 2 618 0
 6346 28ec 8E89      		ldd r24,Y+22
 6347 28ee 9F89      		ldd r25,Y+23
 6348 28f0 FC01      		movw r30,r24
 6349 28f2 1182      		std Z+1,__zero_reg__
 6350 28f4 1082      		st Z,__zero_reg__
 619:lp_solve_5.5/lp_presolve.c ****   *pluneg = 0;
 6351               		.loc 2 619 0
 6352 28f6 888D      		ldd r24,Y+24
 6353 28f8 998D      		ldd r25,Y+25
 6354 28fa FC01      		movw r30,r24
 6355 28fc 1182      		std Z+1,__zero_reg__
 6356 28fe 1082      		st Z,__zero_reg__
 620:lp_solve_5.5/lp_presolve.c **** 
 621:lp_solve_5.5/lp_presolve.c ****   /* Loop over still active row members */
 622:lp_solve_5.5/lp_presolve.c ****   for(ix = presolve_nextcol(psdata, rownr, &ib); ix >= 0; ix = presolve_nextcol(psdata, rownr, &ib)
 6357               		.loc 2 622 0
 6358 2900 AE01      		movw r20,r28
 6359 2902 425F      		subi r20,-14
 6360 2904 5F4F      		sbci r21,-1
 6361 2906 2A89      		ldd r18,Y+18
 6362 2908 3B89      		ldd r19,Y+19
 6363 290a 8889      		ldd r24,Y+16
 6364 290c 9989      		ldd r25,Y+17
 6365 290e B901      		movw r22,r18
 6366 2910 0E94 0000 		call presolve_nextcol
 6367 2914 9A83      		std Y+2,r25
 6368 2916 8983      		std Y+1,r24
 6369 2918 00C0      		rjmp .L224
 6370               	.L235:
 623:lp_solve_5.5/lp_presolve.c **** 
 624:lp_solve_5.5/lp_presolve.c ****     /* Get matrix column and value */
 625:lp_solve_5.5/lp_presolve.c ****     jx    = ROW_MAT_COLNR(ix);
 6371               		.loc 2 625 0
 6372 291a 8D81      		ldd r24,Y+5
 6373 291c 9E81      		ldd r25,Y+6
 6374 291e FC01      		movw r30,r24
 6375 2920 2485      		ldd r18,Z+12
 6376 2922 3585      		ldd r19,Z+13
 6377 2924 8D81      		ldd r24,Y+5
 6378 2926 9E81      		ldd r25,Y+6
 6379 2928 FC01      		movw r30,r24
 6380 292a 4689      		ldd r20,Z+22
 6381 292c 5789      		ldd r21,Z+23
 6382 292e 8981      		ldd r24,Y+1
 6383 2930 9A81      		ldd r25,Y+2
 6384 2932 880F      		lsl r24
 6385 2934 991F      		rol r25
 6386 2936 840F      		add r24,r20
 6387 2938 951F      		adc r25,r21
 6388 293a FC01      		movw r30,r24
 6389 293c 8081      		ld r24,Z
 6390 293e 9181      		ldd r25,Z+1
 6391 2940 880F      		lsl r24
 6392 2942 991F      		rol r25
 6393 2944 820F      		add r24,r18
 6394 2946 931F      		adc r25,r19
 6395 2948 FC01      		movw r30,r24
 6396 294a 8081      		ld r24,Z
 6397 294c 9181      		ldd r25,Z+1
 6398 294e 9987      		std Y+9,r25
 6399 2950 8887      		std Y+8,r24
 626:lp_solve_5.5/lp_presolve.c ****     value = ROW_MAT_VALUE(ix);
 6400               		.loc 2 626 0
 6401 2952 8D81      		ldd r24,Y+5
 6402 2954 9E81      		ldd r25,Y+6
 6403 2956 FC01      		movw r30,r24
 6404 2958 2089      		ldd r18,Z+16
 6405 295a 3189      		ldd r19,Z+17
 6406 295c 8D81      		ldd r24,Y+5
 6407 295e 9E81      		ldd r25,Y+6
 6408 2960 FC01      		movw r30,r24
 6409 2962 4689      		ldd r20,Z+22
 6410 2964 5789      		ldd r21,Z+23
 6411 2966 8981      		ldd r24,Y+1
 6412 2968 9A81      		ldd r25,Y+2
 6413 296a 880F      		lsl r24
 6414 296c 991F      		rol r25
 6415 296e 840F      		add r24,r20
 6416 2970 951F      		adc r25,r21
 6417 2972 FC01      		movw r30,r24
 6418 2974 8081      		ld r24,Z
 6419 2976 9181      		ldd r25,Z+1
 6420 2978 880F      		lsl r24
 6421 297a 991F      		rol r25
 6422 297c 880F      		lsl r24
 6423 297e 991F      		rol r25
 6424 2980 820F      		add r24,r18
 6425 2982 931F      		adc r25,r19
 6426 2984 FC01      		movw r30,r24
 6427 2986 8081      		ld r24,Z
 6428 2988 9181      		ldd r25,Z+1
 6429 298a A281      		ldd r26,Z+2
 6430 298c B381      		ldd r27,Z+3
 6431 298e 8A87      		std Y+10,r24
 6432 2990 9B87      		std Y+11,r25
 6433 2992 AC87      		std Y+12,r26
 6434 2994 BD87      		std Y+13,r27
 627:lp_solve_5.5/lp_presolve.c **** 
 628:lp_solve_5.5/lp_presolve.c ****     /* Cumulate counts */
 629:lp_solve_5.5/lp_presolve.c ****     if(my_chsign(chsign, value) > 0)
 6435               		.loc 2 629 0
 6436 2996 8F81      		ldd r24,Y+7
 6437 2998 8823      		tst r24
 6438 299a 01F0      		breq .L225
 6439               		.loc 2 629 0 is_stmt 0 discriminator 1
 6440 299c 20E0      		ldi r18,0
 6441 299e 30E0      		ldi r19,0
 6442 29a0 A901      		movw r20,r18
 6443 29a2 6A85      		ldd r22,Y+10
 6444 29a4 7B85      		ldd r23,Y+11
 6445 29a6 8C85      		ldd r24,Y+12
 6446 29a8 9D85      		ldd r25,Y+13
 6447 29aa 0E94 0000 		call __nesf2
 6448 29ae 8823      		tst r24
 6449 29b0 01F0      		breq .L225
 6450               		.loc 2 629 0 discriminator 3
 6451 29b2 11E0      		ldi r17,lo8(1)
 6452 29b4 20E0      		ldi r18,0
 6453 29b6 30E0      		ldi r19,0
 6454 29b8 A901      		movw r20,r18
 6455 29ba 6A85      		ldd r22,Y+10
 6456 29bc 7B85      		ldd r23,Y+11
 6457 29be 8C85      		ldd r24,Y+12
 6458 29c0 9D85      		ldd r25,Y+13
 6459 29c2 0E94 0000 		call __ltsf2
 6460 29c6 8823      		tst r24
 6461 29c8 04F0      		brlt .L228
 6462 29ca 10E0      		ldi r17,0
 6463 29cc 00C0      		rjmp .L228
 6464               	.L225:
 6465               		.loc 2 629 0 discriminator 4
 6466 29ce 11E0      		ldi r17,lo8(1)
 6467 29d0 20E0      		ldi r18,0
 6468 29d2 30E0      		ldi r19,0
 6469 29d4 A901      		movw r20,r18
 6470 29d6 6A85      		ldd r22,Y+10
 6471 29d8 7B85      		ldd r23,Y+11
 6472 29da 8C85      		ldd r24,Y+12
 6473 29dc 9D85      		ldd r25,Y+13
 6474 29de 0E94 0000 		call __gtsf2
 6475 29e2 1816      		cp __zero_reg__,r24
 6476 29e4 04F0      		brlt .L228
 6477 29e6 10E0      		ldi r17,0
 6478               	.L228:
 6479               		.loc 2 629 0 discriminator 6
 6480 29e8 1123      		tst r17
 6481 29ea 01F0      		breq .L230
 630:lp_solve_5.5/lp_presolve.c ****       (*plu)++;
 6482               		.loc 2 630 0 is_stmt 1
 6483 29ec 8C89      		ldd r24,Y+20
 6484 29ee 9D89      		ldd r25,Y+21
 6485 29f0 FC01      		movw r30,r24
 6486 29f2 8081      		ld r24,Z
 6487 29f4 9181      		ldd r25,Z+1
 6488 29f6 9C01      		movw r18,r24
 6489 29f8 2F5F      		subi r18,-1
 6490 29fa 3F4F      		sbci r19,-1
 6491 29fc 8C89      		ldd r24,Y+20
 6492 29fe 9D89      		ldd r25,Y+21
 6493 2a00 FC01      		movw r30,r24
 6494 2a02 3183      		std Z+1,r19
 6495 2a04 2083      		st Z,r18
 6496 2a06 00C0      		rjmp .L231
 6497               	.L230:
 631:lp_solve_5.5/lp_presolve.c ****     else
 632:lp_solve_5.5/lp_presolve.c ****       (*neg)++;
 6498               		.loc 2 632 0
 6499 2a08 8E89      		ldd r24,Y+22
 6500 2a0a 9F89      		ldd r25,Y+23
 6501 2a0c FC01      		movw r30,r24
 6502 2a0e 8081      		ld r24,Z
 6503 2a10 9181      		ldd r25,Z+1
 6504 2a12 9C01      		movw r18,r24
 6505 2a14 2F5F      		subi r18,-1
 6506 2a16 3F4F      		sbci r19,-1
 6507 2a18 8E89      		ldd r24,Y+22
 6508 2a1a 9F89      		ldd r25,Y+23
 6509 2a1c FC01      		movw r30,r24
 6510 2a1e 3183      		std Z+1,r19
 6511 2a20 2083      		st Z,r18
 6512               	.L231:
 633:lp_solve_5.5/lp_presolve.c ****     if((get_lowbo(lp, jx) < 0) && (get_upbo(lp, jx) >= 0))
 6513               		.loc 2 633 0
 6514 2a22 2885      		ldd r18,Y+8
 6515 2a24 3985      		ldd r19,Y+9
 6516 2a26 8B81      		ldd r24,Y+3
 6517 2a28 9C81      		ldd r25,Y+4
 6518 2a2a B901      		movw r22,r18
 6519 2a2c 0E94 0000 		call get_lowbo
 6520 2a30 DC01      		movw r26,r24
 6521 2a32 CB01      		movw r24,r22
 6522 2a34 20E0      		ldi r18,0
 6523 2a36 30E0      		ldi r19,0
 6524 2a38 A901      		movw r20,r18
 6525 2a3a BC01      		movw r22,r24
 6526 2a3c CD01      		movw r24,r26
 6527 2a3e 0E94 0000 		call __ltsf2
 6528 2a42 8823      		tst r24
 6529 2a44 04F4      		brge .L232
 6530               		.loc 2 633 0 is_stmt 0 discriminator 1
 6531 2a46 2885      		ldd r18,Y+8
 6532 2a48 3985      		ldd r19,Y+9
 6533 2a4a 8B81      		ldd r24,Y+3
 6534 2a4c 9C81      		ldd r25,Y+4
 6535 2a4e B901      		movw r22,r18
 6536 2a50 0E94 0000 		call get_upbo
 6537 2a54 DC01      		movw r26,r24
 6538 2a56 CB01      		movw r24,r22
 6539 2a58 20E0      		ldi r18,0
 6540 2a5a 30E0      		ldi r19,0
 6541 2a5c A901      		movw r20,r18
 6542 2a5e BC01      		movw r22,r24
 6543 2a60 CD01      		movw r24,r26
 6544 2a62 0E94 0000 		call __gesf2
 6545 2a66 8823      		tst r24
 6546 2a68 04F0      		brlt .L232
 634:lp_solve_5.5/lp_presolve.c ****       (*pluneg)++;
 6547               		.loc 2 634 0 is_stmt 1
 6548 2a6a 888D      		ldd r24,Y+24
 6549 2a6c 998D      		ldd r25,Y+25
 6550 2a6e FC01      		movw r30,r24
 6551 2a70 8081      		ld r24,Z
 6552 2a72 9181      		ldd r25,Z+1
 6553 2a74 9C01      		movw r18,r24
 6554 2a76 2F5F      		subi r18,-1
 6555 2a78 3F4F      		sbci r19,-1
 6556 2a7a 888D      		ldd r24,Y+24
 6557 2a7c 998D      		ldd r25,Y+25
 6558 2a7e FC01      		movw r30,r24
 6559 2a80 3183      		std Z+1,r19
 6560 2a82 2083      		st Z,r18
 6561               	.L232:
 622:lp_solve_5.5/lp_presolve.c **** 
 6562               		.loc 2 622 0 discriminator 2
 6563 2a84 AE01      		movw r20,r28
 6564 2a86 425F      		subi r20,-14
 6565 2a88 5F4F      		sbci r21,-1
 6566 2a8a 2A89      		ldd r18,Y+18
 6567 2a8c 3B89      		ldd r19,Y+19
 6568 2a8e 8889      		ldd r24,Y+16
 6569 2a90 9989      		ldd r25,Y+17
 6570 2a92 B901      		movw r22,r18
 6571 2a94 0E94 0000 		call presolve_nextcol
 6572 2a98 9A83      		std Y+2,r25
 6573 2a9a 8983      		std Y+1,r24
 6574               	.L224:
 622:lp_solve_5.5/lp_presolve.c **** 
 6575               		.loc 2 622 0 is_stmt 0 discriminator 1
 6576 2a9c 8981      		ldd r24,Y+1
 6577 2a9e 9A81      		ldd r25,Y+2
 6578 2aa0 9923      		tst r25
 6579 2aa2 04F0      		brlt .+2
 6580 2aa4 00C0      		rjmp .L235
 635:lp_solve_5.5/lp_presolve.c ****   }
 636:lp_solve_5.5/lp_presolve.c ****   return( TRUE );
 6581               		.loc 2 636 0 is_stmt 1
 6582 2aa6 81E0      		ldi r24,lo8(1)
 6583               	/* epilogue start */
 637:lp_solve_5.5/lp_presolve.c **** }
 6584               		.loc 2 637 0
 6585 2aa8 6996      		adiw r28,25
 6586 2aaa 0FB6      		in __tmp_reg__,__SREG__
 6587 2aac F894      		cli
 6588 2aae DEBF      		out __SP_H__,r29
 6589 2ab0 0FBE      		out __SREG__,__tmp_reg__
 6590 2ab2 CDBF      		out __SP_L__,r28
 6591 2ab4 DF91      		pop r29
 6592 2ab6 CF91      		pop r28
 6593 2ab8 1F91      		pop r17
 6594 2aba 0F91      		pop r16
 6595 2abc 0895      		ret
 6596               		.cfi_endproc
 6597               	.LFE28:
 6599               		.section	.rodata
 6600               	.LC18:
 6601 03cc 7072 6573 		.string	"presolve_debugrowtallies: Detected inconsistent count for row %d\n"
 6601      6F6C 7665 
 6601      5F64 6562 
 6601      7567 726F 
 6601      7774 616C 
 6602               		.text
 6603               	.global	presolve_debugrowtallies
 6605               	presolve_debugrowtallies:
 6606               	.LFB29:
 638:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_debugrowtallies(presolverec *psdata)
 639:lp_solve_5.5/lp_presolve.c **** {
 6607               		.loc 2 639 0
 6608               		.cfi_startproc
 6609 2abe 0F93      		push r16
 6610               	.LCFI114:
 6611               		.cfi_def_cfa_offset 3
 6612               		.cfi_offset 16, -2
 6613 2ac0 1F93      		push r17
 6614               	.LCFI115:
 6615               		.cfi_def_cfa_offset 4
 6616               		.cfi_offset 17, -3
 6617 2ac2 CF93      		push r28
 6618               	.LCFI116:
 6619               		.cfi_def_cfa_offset 5
 6620               		.cfi_offset 28, -4
 6621 2ac4 DF93      		push r29
 6622               	.LCFI117:
 6623               		.cfi_def_cfa_offset 6
 6624               		.cfi_offset 29, -5
 6625 2ac6 CDB7      		in r28,__SP_L__
 6626 2ac8 DEB7      		in r29,__SP_H__
 6627               	.LCFI118:
 6628               		.cfi_def_cfa_register 28
 6629 2aca 2E97      		sbiw r28,14
 6630               	.LCFI119:
 6631               		.cfi_def_cfa_offset 20
 6632 2acc 0FB6      		in __tmp_reg__,__SREG__
 6633 2ace F894      		cli
 6634 2ad0 DEBF      		out __SP_H__,r29
 6635 2ad2 0FBE      		out __SREG__,__tmp_reg__
 6636 2ad4 CDBF      		out __SP_L__,r28
 6637               	/* prologue: function */
 6638               	/* frame size = 14 */
 6639               	/* stack size = 18 */
 6640               	.L__stack_usage = 18
 6641 2ad6 9E87      		std Y+14,r25
 6642 2ad8 8D87      		std Y+13,r24
 640:lp_solve_5.5/lp_presolve.c ****   lprec  *lp = psdata->lp;
 6643               		.loc 2 640 0
 6644 2ada 8D85      		ldd r24,Y+13
 6645 2adc 9E85      		ldd r25,Y+14
 6646 2ade FC01      		movw r30,r24
 6647 2ae0 8289      		ldd r24,Z+18
 6648 2ae2 9389      		ldd r25,Z+19
 6649 2ae4 9E83      		std Y+6,r25
 6650 2ae6 8D83      		std Y+5,r24
 641:lp_solve_5.5/lp_presolve.c ****   int    i, plu, neg, pluneg, nerr = 0;
 6651               		.loc 2 641 0
 6652 2ae8 1C82      		std Y+4,__zero_reg__
 6653 2aea 1B82      		std Y+3,__zero_reg__
 642:lp_solve_5.5/lp_presolve.c **** 
 643:lp_solve_5.5/lp_presolve.c ****   for(i = 1; i <= lp->rows; i++)
 6654               		.loc 2 643 0
 6655 2aec 81E0      		ldi r24,lo8(1)
 6656 2aee 90E0      		ldi r25,0
 6657 2af0 9A83      		std Y+2,r25
 6658 2af2 8983      		std Y+1,r24
 6659 2af4 00C0      		rjmp .L241
 6660               	.L244:
 644:lp_solve_5.5/lp_presolve.c ****     if(isActiveLink(psdata->rows->varmap, i) &&
 6661               		.loc 2 644 0
 6662 2af6 8D85      		ldd r24,Y+13
 6663 2af8 9E85      		ldd r25,Y+14
 6664 2afa FC01      		movw r30,r24
 6665 2afc 8081      		ld r24,Z
 6666 2afe 9181      		ldd r25,Z+1
 6667 2b00 FC01      		movw r30,r24
 6668 2b02 8081      		ld r24,Z
 6669 2b04 9181      		ldd r25,Z+1
 6670 2b06 2981      		ldd r18,Y+1
 6671 2b08 3A81      		ldd r19,Y+2
 6672 2b0a B901      		movw r22,r18
 6673 2b0c 0E94 0000 		call isActiveLink
 6674 2b10 8823      		tst r24
 6675 2b12 01F4      		brne .+2
 6676 2b14 00C0      		rjmp .L242
 645:lp_solve_5.5/lp_presolve.c ****        presolve_rowtallies(psdata, i, &plu, &neg, &pluneg)) {
 6677               		.loc 2 645 0 discriminator 1
 6678 2b16 FE01      		movw r30,r28
 6679 2b18 3B96      		adiw r30,11
 6680 2b1a 9E01      		movw r18,r28
 6681 2b1c 275F      		subi r18,-9
 6682 2b1e 3F4F      		sbci r19,-1
 6683 2b20 AE01      		movw r20,r28
 6684 2b22 495F      		subi r20,-7
 6685 2b24 5F4F      		sbci r21,-1
 6686 2b26 6981      		ldd r22,Y+1
 6687 2b28 7A81      		ldd r23,Y+2
 6688 2b2a 8D85      		ldd r24,Y+13
 6689 2b2c 9E85      		ldd r25,Y+14
 6690 2b2e 8F01      		movw r16,r30
 6691 2b30 0E94 0000 		call presolve_rowtallies
 644:lp_solve_5.5/lp_presolve.c ****     if(isActiveLink(psdata->rows->varmap, i) &&
 6692               		.loc 2 644 0 discriminator 1
 6693 2b34 8823      		tst r24
 6694 2b36 01F4      		brne .+2
 6695 2b38 00C0      		rjmp .L242
 646:lp_solve_5.5/lp_presolve.c ****       if((psdata->rows->plucount[i] != plu) ||
 6696               		.loc 2 646 0
 6697 2b3a 8D85      		ldd r24,Y+13
 6698 2b3c 9E85      		ldd r25,Y+14
 6699 2b3e FC01      		movw r30,r24
 6700 2b40 8081      		ld r24,Z
 6701 2b42 9181      		ldd r25,Z+1
 6702 2b44 FC01      		movw r30,r24
 6703 2b46 2681      		ldd r18,Z+6
 6704 2b48 3781      		ldd r19,Z+7
 6705 2b4a 8981      		ldd r24,Y+1
 6706 2b4c 9A81      		ldd r25,Y+2
 6707 2b4e 880F      		lsl r24
 6708 2b50 991F      		rol r25
 6709 2b52 820F      		add r24,r18
 6710 2b54 931F      		adc r25,r19
 6711 2b56 FC01      		movw r30,r24
 6712 2b58 2081      		ld r18,Z
 6713 2b5a 3181      		ldd r19,Z+1
 6714 2b5c 8F81      		ldd r24,Y+7
 6715 2b5e 9885      		ldd r25,Y+8
 6716 2b60 2817      		cp r18,r24
 6717 2b62 3907      		cpc r19,r25
 6718 2b64 01F4      		brne .L243
 647:lp_solve_5.5/lp_presolve.c ****          (psdata->rows->negcount[i] != neg) ||
 6719               		.loc 2 647 0 discriminator 1
 6720 2b66 8D85      		ldd r24,Y+13
 6721 2b68 9E85      		ldd r25,Y+14
 6722 2b6a FC01      		movw r30,r24
 6723 2b6c 8081      		ld r24,Z
 6724 2b6e 9181      		ldd r25,Z+1
 6725 2b70 FC01      		movw r30,r24
 6726 2b72 2085      		ldd r18,Z+8
 6727 2b74 3185      		ldd r19,Z+9
 6728 2b76 8981      		ldd r24,Y+1
 6729 2b78 9A81      		ldd r25,Y+2
 6730 2b7a 880F      		lsl r24
 6731 2b7c 991F      		rol r25
 6732 2b7e 820F      		add r24,r18
 6733 2b80 931F      		adc r25,r19
 6734 2b82 FC01      		movw r30,r24
 6735 2b84 2081      		ld r18,Z
 6736 2b86 3181      		ldd r19,Z+1
 6737 2b88 8985      		ldd r24,Y+9
 6738 2b8a 9A85      		ldd r25,Y+10
 646:lp_solve_5.5/lp_presolve.c ****       if((psdata->rows->plucount[i] != plu) ||
 6739               		.loc 2 646 0 discriminator 1
 6740 2b8c 2817      		cp r18,r24
 6741 2b8e 3907      		cpc r19,r25
 6742 2b90 01F4      		brne .L243
 648:lp_solve_5.5/lp_presolve.c ****          (psdata->rows->pluneg[i] != pluneg)) {
 6743               		.loc 2 648 0
 6744 2b92 8D85      		ldd r24,Y+13
 6745 2b94 9E85      		ldd r25,Y+14
 6746 2b96 FC01      		movw r30,r24
 6747 2b98 8081      		ld r24,Z
 6748 2b9a 9181      		ldd r25,Z+1
 6749 2b9c FC01      		movw r30,r24
 6750 2b9e 2285      		ldd r18,Z+10
 6751 2ba0 3385      		ldd r19,Z+11
 6752 2ba2 8981      		ldd r24,Y+1
 6753 2ba4 9A81      		ldd r25,Y+2
 6754 2ba6 880F      		lsl r24
 6755 2ba8 991F      		rol r25
 6756 2baa 820F      		add r24,r18
 6757 2bac 931F      		adc r25,r19
 6758 2bae FC01      		movw r30,r24
 6759 2bb0 2081      		ld r18,Z
 6760 2bb2 3181      		ldd r19,Z+1
 6761 2bb4 8B85      		ldd r24,Y+11
 6762 2bb6 9C85      		ldd r25,Y+12
 647:lp_solve_5.5/lp_presolve.c ****          (psdata->rows->negcount[i] != neg) ||
 6763               		.loc 2 647 0
 6764 2bb8 2817      		cp r18,r24
 6765 2bba 3907      		cpc r19,r25
 6766 2bbc 01F0      		breq .L242
 6767               	.L243:
 649:lp_solve_5.5/lp_presolve.c ****         nerr++;
 6768               		.loc 2 649 0
 6769 2bbe 8B81      		ldd r24,Y+3
 6770 2bc0 9C81      		ldd r25,Y+4
 6771 2bc2 0196      		adiw r24,1
 6772 2bc4 9C83      		std Y+4,r25
 6773 2bc6 8B83      		std Y+3,r24
 650:lp_solve_5.5/lp_presolve.c ****         report(lp, SEVERE, "presolve_debugrowtallies: Detected inconsistent count for row %d\n", i)
 6774               		.loc 2 650 0
 6775 2bc8 8A81      		ldd r24,Y+2
 6776 2bca 8F93      		push r24
 6777 2bcc 8981      		ldd r24,Y+1
 6778 2bce 8F93      		push r24
 6779 2bd0 80E0      		ldi r24,lo8(.LC18)
 6780 2bd2 90E0      		ldi r25,hi8(.LC18)
 6781 2bd4 892F      		mov r24,r25
 6782 2bd6 8F93      		push r24
 6783 2bd8 80E0      		ldi r24,lo8(.LC18)
 6784 2bda 90E0      		ldi r25,hi8(.LC18)
 6785 2bdc 8F93      		push r24
 6786 2bde 1F92      		push __zero_reg__
 6787 2be0 82E0      		ldi r24,lo8(2)
 6788 2be2 8F93      		push r24
 6789 2be4 8E81      		ldd r24,Y+6
 6790 2be6 8F93      		push r24
 6791 2be8 8D81      		ldd r24,Y+5
 6792 2bea 8F93      		push r24
 6793 2bec 0E94 0000 		call report
 6794 2bf0 8DB7      		in r24,__SP_L__
 6795 2bf2 9EB7      		in r25,__SP_H__
 6796 2bf4 0896      		adiw r24,8
 6797 2bf6 0FB6      		in __tmp_reg__,__SREG__
 6798 2bf8 F894      		cli
 6799 2bfa DEBF      		out __SP_H__,r29
 6800 2bfc 0FBE      		out __SREG__,__tmp_reg__
 6801 2bfe CDBF      		out __SP_L__,r28
 6802               	.L242:
 643:lp_solve_5.5/lp_presolve.c ****     if(isActiveLink(psdata->rows->varmap, i) &&
 6803               		.loc 2 643 0 discriminator 2
 6804 2c00 8981      		ldd r24,Y+1
 6805 2c02 9A81      		ldd r25,Y+2
 6806 2c04 0196      		adiw r24,1
 6807 2c06 9A83      		std Y+2,r25
 6808 2c08 8983      		std Y+1,r24
 6809               	.L241:
 643:lp_solve_5.5/lp_presolve.c ****     if(isActiveLink(psdata->rows->varmap, i) &&
 6810               		.loc 2 643 0 is_stmt 0 discriminator 1
 6811 2c0a 8D81      		ldd r24,Y+5
 6812 2c0c 9E81      		ldd r25,Y+6
 6813 2c0e 8651      		subi r24,22
 6814 2c10 9E4F      		sbci r25,-2
 6815 2c12 FC01      		movw r30,r24
 6816 2c14 2081      		ld r18,Z
 6817 2c16 3181      		ldd r19,Z+1
 6818 2c18 8981      		ldd r24,Y+1
 6819 2c1a 9A81      		ldd r25,Y+2
 6820 2c1c 2817      		cp r18,r24
 6821 2c1e 3907      		cpc r19,r25
 6822 2c20 04F0      		brlt .+2
 6823 2c22 00C0      		rjmp .L244
 651:lp_solve_5.5/lp_presolve.c ****       }
 652:lp_solve_5.5/lp_presolve.c ****     }
 653:lp_solve_5.5/lp_presolve.c ****   return( (MYBOOL) (nerr == 0) );
 6824               		.loc 2 653 0 is_stmt 1
 6825 2c24 21E0      		ldi r18,lo8(1)
 6826 2c26 8B81      		ldd r24,Y+3
 6827 2c28 9C81      		ldd r25,Y+4
 6828 2c2a 892B      		or r24,r25
 6829 2c2c 01F0      		breq .L245
 6830 2c2e 20E0      		ldi r18,0
 6831               	.L245:
 6832 2c30 822F      		mov r24,r18
 6833               	/* epilogue start */
 654:lp_solve_5.5/lp_presolve.c **** }
 6834               		.loc 2 654 0
 6835 2c32 2E96      		adiw r28,14
 6836 2c34 0FB6      		in __tmp_reg__,__SREG__
 6837 2c36 F894      		cli
 6838 2c38 DEBF      		out __SP_H__,r29
 6839 2c3a 0FBE      		out __SREG__,__tmp_reg__
 6840 2c3c CDBF      		out __SP_L__,r28
 6841 2c3e DF91      		pop r29
 6842 2c40 CF91      		pop r28
 6843 2c42 1F91      		pop r17
 6844 2c44 0F91      		pop r16
 6845 2c46 0895      		ret
 6846               		.cfi_endproc
 6847               	.LFE29:
 6849               		.section	.rodata
 6850               	.LC19:
 6851 040e 7072 6573 		.string	"presolve_debugcheck: Detected negative range %g for row %d\n"
 6851      6F6C 7665 
 6851      5F64 6562 
 6851      7567 6368 
 6851      6563 6B3A 
 6852               	.LC20:
 6853 044a 7072 6573 		.string	"presolve_debugcheck: Detected UB < LB for column %d\n"
 6853      6F6C 7665 
 6853      5F64 6562 
 6853      7567 6368 
 6853      6563 6B3A 
 6854               		.text
 6855               	.global	presolve_debugcheck
 6857               	presolve_debugcheck:
 6858               	.LFB30:
 655:lp_solve_5.5/lp_presolve.c **** 
 656:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_debugcheck(lprec *lp, LLrec *rowmap, LLrec *colmap)
 657:lp_solve_5.5/lp_presolve.c **** {
 6859               		.loc 2 657 0
 6860               		.cfi_startproc
 6861 2c48 CF93      		push r28
 6862               	.LCFI120:
 6863               		.cfi_def_cfa_offset 3
 6864               		.cfi_offset 28, -2
 6865 2c4a DF93      		push r29
 6866               	.LCFI121:
 6867               		.cfi_def_cfa_offset 4
 6868               		.cfi_offset 29, -3
 6869 2c4c CDB7      		in r28,__SP_L__
 6870 2c4e DEB7      		in r29,__SP_H__
 6871               	.LCFI122:
 6872               		.cfi_def_cfa_register 28
 6873 2c50 2C97      		sbiw r28,12
 6874               	.LCFI123:
 6875               		.cfi_def_cfa_offset 16
 6876 2c52 0FB6      		in __tmp_reg__,__SREG__
 6877 2c54 F894      		cli
 6878 2c56 DEBF      		out __SP_H__,r29
 6879 2c58 0FBE      		out __SREG__,__tmp_reg__
 6880 2c5a CDBF      		out __SP_L__,r28
 6881               	/* prologue: function */
 6882               	/* frame size = 12 */
 6883               	/* stack size = 14 */
 6884               	.L__stack_usage = 14
 6885 2c5c 9887      		std Y+8,r25
 6886 2c5e 8F83      		std Y+7,r24
 6887 2c60 7A87      		std Y+10,r23
 6888 2c62 6987      		std Y+9,r22
 6889 2c64 5C87      		std Y+12,r21
 6890 2c66 4B87      		std Y+11,r20
 658:lp_solve_5.5/lp_presolve.c ****   int i, j, errc = 0;
 6891               		.loc 2 658 0
 6892 2c68 1E82      		std Y+6,__zero_reg__
 6893 2c6a 1D82      		std Y+5,__zero_reg__
 659:lp_solve_5.5/lp_presolve.c **** 
 660:lp_solve_5.5/lp_presolve.c ****   /* Validate constraint bounds */
 661:lp_solve_5.5/lp_presolve.c ****   for(i = 1; i < lp->rows; i++) {
 6894               		.loc 2 661 0
 6895 2c6c 81E0      		ldi r24,lo8(1)
 6896 2c6e 90E0      		ldi r25,0
 6897 2c70 9A83      		std Y+2,r25
 6898 2c72 8983      		std Y+1,r24
 6899 2c74 00C0      		rjmp .L248
 6900               	.L252:
 662:lp_solve_5.5/lp_presolve.c ****     if((rowmap != NULL) && !isActiveLink(rowmap, i))
 6901               		.loc 2 662 0
 6902 2c76 8985      		ldd r24,Y+9
 6903 2c78 9A85      		ldd r25,Y+10
 6904 2c7a 892B      		or r24,r25
 6905 2c7c 01F0      		breq .L249
 6906               		.loc 2 662 0 is_stmt 0 discriminator 1
 6907 2c7e 2981      		ldd r18,Y+1
 6908 2c80 3A81      		ldd r19,Y+2
 6909 2c82 8985      		ldd r24,Y+9
 6910 2c84 9A85      		ldd r25,Y+10
 6911 2c86 B901      		movw r22,r18
 6912 2c88 0E94 0000 		call isActiveLink
 6913 2c8c 8823      		tst r24
 6914 2c8e 01F4      		brne .+2
 6915 2c90 00C0      		rjmp .L261
 6916               	.L249:
 663:lp_solve_5.5/lp_presolve.c ****       continue;
 664:lp_solve_5.5/lp_presolve.c ****     /* Check if we have a negative range */
 665:lp_solve_5.5/lp_presolve.c ****     if(lp->orig_upbo[i] < 0) {
 6917               		.loc 2 665 0 is_stmt 1
 6918 2c92 8F81      		ldd r24,Y+7
 6919 2c94 9885      		ldd r25,Y+8
 6920 2c96 8255      		subi r24,82
 6921 2c98 9D4F      		sbci r25,-3
 6922 2c9a FC01      		movw r30,r24
 6923 2c9c 2081      		ld r18,Z
 6924 2c9e 3181      		ldd r19,Z+1
 6925 2ca0 8981      		ldd r24,Y+1
 6926 2ca2 9A81      		ldd r25,Y+2
 6927 2ca4 880F      		lsl r24
 6928 2ca6 991F      		rol r25
 6929 2ca8 880F      		lsl r24
 6930 2caa 991F      		rol r25
 6931 2cac 820F      		add r24,r18
 6932 2cae 931F      		adc r25,r19
 6933 2cb0 FC01      		movw r30,r24
 6934 2cb2 8081      		ld r24,Z
 6935 2cb4 9181      		ldd r25,Z+1
 6936 2cb6 A281      		ldd r26,Z+2
 6937 2cb8 B381      		ldd r27,Z+3
 6938 2cba 20E0      		ldi r18,0
 6939 2cbc 30E0      		ldi r19,0
 6940 2cbe A901      		movw r20,r18
 6941 2cc0 BC01      		movw r22,r24
 6942 2cc2 CD01      		movw r24,r26
 6943 2cc4 0E94 0000 		call __ltsf2
 6944 2cc8 8823      		tst r24
 6945 2cca 04F4      		brge .L250
 666:lp_solve_5.5/lp_presolve.c ****       errc++;
 6946               		.loc 2 666 0
 6947 2ccc 8D81      		ldd r24,Y+5
 6948 2cce 9E81      		ldd r25,Y+6
 6949 2cd0 0196      		adiw r24,1
 6950 2cd2 9E83      		std Y+6,r25
 6951 2cd4 8D83      		std Y+5,r24
 667:lp_solve_5.5/lp_presolve.c ****       report(lp, SEVERE, "presolve_debugcheck: Detected negative range %g for row %d\n",
 668:lp_solve_5.5/lp_presolve.c ****                          lp->orig_upbo[i], i);
 6952               		.loc 2 668 0
 6953 2cd6 8F81      		ldd r24,Y+7
 6954 2cd8 9885      		ldd r25,Y+8
 6955 2cda 8255      		subi r24,82
 6956 2cdc 9D4F      		sbci r25,-3
 6957 2cde FC01      		movw r30,r24
 6958 2ce0 2081      		ld r18,Z
 6959 2ce2 3181      		ldd r19,Z+1
 6960 2ce4 8981      		ldd r24,Y+1
 6961 2ce6 9A81      		ldd r25,Y+2
 6962 2ce8 880F      		lsl r24
 6963 2cea 991F      		rol r25
 6964 2cec 880F      		lsl r24
 6965 2cee 991F      		rol r25
 6966 2cf0 820F      		add r24,r18
 6967 2cf2 931F      		adc r25,r19
 667:lp_solve_5.5/lp_presolve.c ****       report(lp, SEVERE, "presolve_debugcheck: Detected negative range %g for row %d\n",
 6968               		.loc 2 667 0
 6969 2cf4 FC01      		movw r30,r24
 6970 2cf6 8081      		ld r24,Z
 6971 2cf8 9181      		ldd r25,Z+1
 6972 2cfa A281      		ldd r26,Z+2
 6973 2cfc B381      		ldd r27,Z+3
 6974 2cfe 2A81      		ldd r18,Y+2
 6975 2d00 2F93      		push r18
 6976 2d02 2981      		ldd r18,Y+1
 6977 2d04 2F93      		push r18
 6978 2d06 2B2F      		mov r18,r27
 6979 2d08 2F93      		push r18
 6980 2d0a 2A2F      		mov r18,r26
 6981 2d0c 2F93      		push r18
 6982 2d0e 292F      		mov r18,r25
 6983 2d10 2F93      		push r18
 6984 2d12 8F93      		push r24
 6985 2d14 80E0      		ldi r24,lo8(.LC19)
 6986 2d16 90E0      		ldi r25,hi8(.LC19)
 6987 2d18 892F      		mov r24,r25
 6988 2d1a 8F93      		push r24
 6989 2d1c 80E0      		ldi r24,lo8(.LC19)
 6990 2d1e 90E0      		ldi r25,hi8(.LC19)
 6991 2d20 8F93      		push r24
 6992 2d22 1F92      		push __zero_reg__
 6993 2d24 82E0      		ldi r24,lo8(2)
 6994 2d26 8F93      		push r24
 6995 2d28 8885      		ldd r24,Y+8
 6996 2d2a 8F93      		push r24
 6997 2d2c 8F81      		ldd r24,Y+7
 6998 2d2e 8F93      		push r24
 6999 2d30 0E94 0000 		call report
 7000 2d34 8DB7      		in r24,__SP_L__
 7001 2d36 9EB7      		in r25,__SP_H__
 7002 2d38 0C96      		adiw r24,12
 7003 2d3a 0FB6      		in __tmp_reg__,__SREG__
 7004 2d3c F894      		cli
 7005 2d3e DEBF      		out __SP_H__,r29
 7006 2d40 0FBE      		out __SREG__,__tmp_reg__
 7007 2d42 CDBF      		out __SP_L__,r28
 7008 2d44 00C0      		rjmp .L250
 7009               	.L261:
 663:lp_solve_5.5/lp_presolve.c ****     /* Check if we have a negative range */
 7010               		.loc 2 663 0
 7011 2d46 0000      		nop
 7012               	.L250:
 661:lp_solve_5.5/lp_presolve.c ****     if((rowmap != NULL) && !isActiveLink(rowmap, i))
 7013               		.loc 2 661 0 discriminator 2
 7014 2d48 8981      		ldd r24,Y+1
 7015 2d4a 9A81      		ldd r25,Y+2
 7016 2d4c 0196      		adiw r24,1
 7017 2d4e 9A83      		std Y+2,r25
 7018 2d50 8983      		std Y+1,r24
 7019               	.L248:
 661:lp_solve_5.5/lp_presolve.c ****     if((rowmap != NULL) && !isActiveLink(rowmap, i))
 7020               		.loc 2 661 0 is_stmt 0 discriminator 1
 7021 2d52 8F81      		ldd r24,Y+7
 7022 2d54 9885      		ldd r25,Y+8
 7023 2d56 8651      		subi r24,22
 7024 2d58 9E4F      		sbci r25,-2
 7025 2d5a FC01      		movw r30,r24
 7026 2d5c 2081      		ld r18,Z
 7027 2d5e 3181      		ldd r19,Z+1
 7028 2d60 8981      		ldd r24,Y+1
 7029 2d62 9A81      		ldd r25,Y+2
 7030 2d64 8217      		cp r24,r18
 7031 2d66 9307      		cpc r25,r19
 7032 2d68 04F4      		brge .+2
 7033 2d6a 00C0      		rjmp .L252
 669:lp_solve_5.5/lp_presolve.c ****     }
 670:lp_solve_5.5/lp_presolve.c ****   }
 671:lp_solve_5.5/lp_presolve.c ****   /* Validate variables */
 672:lp_solve_5.5/lp_presolve.c ****   for(j = 1; j < lp->columns; j++) {
 7034               		.loc 2 672 0 is_stmt 1
 7035 2d6c 81E0      		ldi r24,lo8(1)
 7036 2d6e 90E0      		ldi r25,0
 7037 2d70 9C83      		std Y+4,r25
 7038 2d72 8B83      		std Y+3,r24
 7039 2d74 00C0      		rjmp .L253
 7040               	.L257:
 673:lp_solve_5.5/lp_presolve.c ****     if((colmap != NULL) && !isActiveLink(colmap, j))
 7041               		.loc 2 673 0
 7042 2d76 8B85      		ldd r24,Y+11
 7043 2d78 9C85      		ldd r25,Y+12
 7044 2d7a 892B      		or r24,r25
 7045 2d7c 01F0      		breq .L254
 7046               		.loc 2 673 0 is_stmt 0 discriminator 1
 7047 2d7e 2B81      		ldd r18,Y+3
 7048 2d80 3C81      		ldd r19,Y+4
 7049 2d82 8B85      		ldd r24,Y+11
 7050 2d84 9C85      		ldd r25,Y+12
 7051 2d86 B901      		movw r22,r18
 7052 2d88 0E94 0000 		call isActiveLink
 7053 2d8c 8823      		tst r24
 7054 2d8e 01F4      		brne .+2
 7055 2d90 00C0      		rjmp .L262
 7056               	.L254:
 674:lp_solve_5.5/lp_presolve.c ****       continue;
 675:lp_solve_5.5/lp_presolve.c ****     i = lp->rows+j;
 7057               		.loc 2 675 0 is_stmt 1
 7058 2d92 8F81      		ldd r24,Y+7
 7059 2d94 9885      		ldd r25,Y+8
 7060 2d96 8651      		subi r24,22
 7061 2d98 9E4F      		sbci r25,-2
 7062 2d9a FC01      		movw r30,r24
 7063 2d9c 2081      		ld r18,Z
 7064 2d9e 3181      		ldd r19,Z+1
 7065 2da0 8B81      		ldd r24,Y+3
 7066 2da2 9C81      		ldd r25,Y+4
 7067 2da4 820F      		add r24,r18
 7068 2da6 931F      		adc r25,r19
 7069 2da8 9A83      		std Y+2,r25
 7070 2daa 8983      		std Y+1,r24
 676:lp_solve_5.5/lp_presolve.c ****     /* Check if we have infeasible  bounds */
 677:lp_solve_5.5/lp_presolve.c ****     if(lp->orig_lowbo[i] > lp->orig_upbo[i]) {
 7071               		.loc 2 677 0
 7072 2dac 8F81      		ldd r24,Y+7
 7073 2dae 9885      		ldd r25,Y+8
 7074 2db0 8E54      		subi r24,78
 7075 2db2 9D4F      		sbci r25,-3
 7076 2db4 FC01      		movw r30,r24
 7077 2db6 2081      		ld r18,Z
 7078 2db8 3181      		ldd r19,Z+1
 7079 2dba 8981      		ldd r24,Y+1
 7080 2dbc 9A81      		ldd r25,Y+2
 7081 2dbe 880F      		lsl r24
 7082 2dc0 991F      		rol r25
 7083 2dc2 880F      		lsl r24
 7084 2dc4 991F      		rol r25
 7085 2dc6 820F      		add r24,r18
 7086 2dc8 931F      		adc r25,r19
 7087 2dca FC01      		movw r30,r24
 7088 2dcc 8081      		ld r24,Z
 7089 2dce 9181      		ldd r25,Z+1
 7090 2dd0 A281      		ldd r26,Z+2
 7091 2dd2 B381      		ldd r27,Z+3
 7092 2dd4 2F81      		ldd r18,Y+7
 7093 2dd6 3885      		ldd r19,Y+8
 7094 2dd8 2255      		subi r18,82
 7095 2dda 3D4F      		sbci r19,-3
 7096 2ddc F901      		movw r30,r18
 7097 2dde 4081      		ld r20,Z
 7098 2de0 5181      		ldd r21,Z+1
 7099 2de2 2981      		ldd r18,Y+1
 7100 2de4 3A81      		ldd r19,Y+2
 7101 2de6 220F      		lsl r18
 7102 2de8 331F      		rol r19
 7103 2dea 220F      		lsl r18
 7104 2dec 331F      		rol r19
 7105 2dee 240F      		add r18,r20
 7106 2df0 351F      		adc r19,r21
 7107 2df2 F901      		movw r30,r18
 7108 2df4 2081      		ld r18,Z
 7109 2df6 3181      		ldd r19,Z+1
 7110 2df8 4281      		ldd r20,Z+2
 7111 2dfa 5381      		ldd r21,Z+3
 7112 2dfc BC01      		movw r22,r24
 7113 2dfe CD01      		movw r24,r26
 7114 2e00 0E94 0000 		call __gtsf2
 7115 2e04 1816      		cp __zero_reg__,r24
 7116 2e06 04F4      		brge .L255
 678:lp_solve_5.5/lp_presolve.c ****       errc++;
 7117               		.loc 2 678 0
 7118 2e08 8D81      		ldd r24,Y+5
 7119 2e0a 9E81      		ldd r25,Y+6
 7120 2e0c 0196      		adiw r24,1
 7121 2e0e 9E83      		std Y+6,r25
 7122 2e10 8D83      		std Y+5,r24
 679:lp_solve_5.5/lp_presolve.c ****       report(lp, SEVERE, "presolve_debugcheck: Detected UB < LB for column %d\n",
 7123               		.loc 2 679 0
 7124 2e12 8C81      		ldd r24,Y+4
 7125 2e14 8F93      		push r24
 7126 2e16 8B81      		ldd r24,Y+3
 7127 2e18 8F93      		push r24
 7128 2e1a 80E0      		ldi r24,lo8(.LC20)
 7129 2e1c 90E0      		ldi r25,hi8(.LC20)
 7130 2e1e 892F      		mov r24,r25
 7131 2e20 8F93      		push r24
 7132 2e22 80E0      		ldi r24,lo8(.LC20)
 7133 2e24 90E0      		ldi r25,hi8(.LC20)
 7134 2e26 8F93      		push r24
 7135 2e28 1F92      		push __zero_reg__
 7136 2e2a 82E0      		ldi r24,lo8(2)
 7137 2e2c 8F93      		push r24
 7138 2e2e 8885      		ldd r24,Y+8
 7139 2e30 8F93      		push r24
 7140 2e32 8F81      		ldd r24,Y+7
 7141 2e34 8F93      		push r24
 7142 2e36 0E94 0000 		call report
 7143 2e3a 8DB7      		in r24,__SP_L__
 7144 2e3c 9EB7      		in r25,__SP_H__
 7145 2e3e 0896      		adiw r24,8
 7146 2e40 0FB6      		in __tmp_reg__,__SREG__
 7147 2e42 F894      		cli
 7148 2e44 DEBF      		out __SP_H__,r29
 7149 2e46 0FBE      		out __SREG__,__tmp_reg__
 7150 2e48 CDBF      		out __SP_L__,r28
 7151 2e4a 00C0      		rjmp .L255
 7152               	.L262:
 674:lp_solve_5.5/lp_presolve.c ****     i = lp->rows+j;
 7153               		.loc 2 674 0
 7154 2e4c 0000      		nop
 7155               	.L255:
 672:lp_solve_5.5/lp_presolve.c ****     if((colmap != NULL) && !isActiveLink(colmap, j))
 7156               		.loc 2 672 0 discriminator 2
 7157 2e4e 8B81      		ldd r24,Y+3
 7158 2e50 9C81      		ldd r25,Y+4
 7159 2e52 0196      		adiw r24,1
 7160 2e54 9C83      		std Y+4,r25
 7161 2e56 8B83      		std Y+3,r24
 7162               	.L253:
 672:lp_solve_5.5/lp_presolve.c ****     if((colmap != NULL) && !isActiveLink(colmap, j))
 7163               		.loc 2 672 0 is_stmt 0 discriminator 1
 7164 2e58 8F81      		ldd r24,Y+7
 7165 2e5a 9885      		ldd r25,Y+8
 7166 2e5c 8451      		subi r24,20
 7167 2e5e 9E4F      		sbci r25,-2
 7168 2e60 FC01      		movw r30,r24
 7169 2e62 2081      		ld r18,Z
 7170 2e64 3181      		ldd r19,Z+1
 7171 2e66 8B81      		ldd r24,Y+3
 7172 2e68 9C81      		ldd r25,Y+4
 7173 2e6a 8217      		cp r24,r18
 7174 2e6c 9307      		cpc r25,r19
 7175 2e6e 04F4      		brge .+2
 7176 2e70 00C0      		rjmp .L257
 680:lp_solve_5.5/lp_presolve.c ****                          j);
 681:lp_solve_5.5/lp_presolve.c ****     }
 682:lp_solve_5.5/lp_presolve.c ****   }
 683:lp_solve_5.5/lp_presolve.c ****   /* Return total number of errors */
 684:lp_solve_5.5/lp_presolve.c ****   return( errc );
 7177               		.loc 2 684 0 is_stmt 1
 7178 2e72 8D81      		ldd r24,Y+5
 7179 2e74 9E81      		ldd r25,Y+6
 7180               	/* epilogue start */
 685:lp_solve_5.5/lp_presolve.c **** }
 7181               		.loc 2 685 0
 7182 2e76 2C96      		adiw r28,12
 7183 2e78 0FB6      		in __tmp_reg__,__SREG__
 7184 2e7a F894      		cli
 7185 2e7c DEBF      		out __SP_H__,r29
 7186 2e7e 0FBE      		out __SREG__,__tmp_reg__
 7187 2e80 CDBF      		out __SP_L__,r28
 7188 2e82 DF91      		pop r29
 7189 2e84 CF91      		pop r28
 7190 2e86 0895      		ret
 7191               		.cfi_endproc
 7192               	.LFE30:
 7194               	.global	presolve_candeletevar
 7196               	presolve_candeletevar:
 7197               	.LFB31:
 686:lp_solve_5.5/lp_presolve.c **** 
 687:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_candeletevar(presolverec *psdata, int colnr)
 688:lp_solve_5.5/lp_presolve.c **** {
 7198               		.loc 2 688 0
 7199               		.cfi_startproc
 7200 2e88 CF93      		push r28
 7201               	.LCFI124:
 7202               		.cfi_def_cfa_offset 3
 7203               		.cfi_offset 28, -2
 7204 2e8a DF93      		push r29
 7205               	.LCFI125:
 7206               		.cfi_def_cfa_offset 4
 7207               		.cfi_offset 29, -3
 7208 2e8c CDB7      		in r28,__SP_L__
 7209 2e8e DEB7      		in r29,__SP_H__
 7210               	.LCFI126:
 7211               		.cfi_def_cfa_register 28
 7212 2e90 2897      		sbiw r28,8
 7213               	.LCFI127:
 7214               		.cfi_def_cfa_offset 12
 7215 2e92 0FB6      		in __tmp_reg__,__SREG__
 7216 2e94 F894      		cli
 7217 2e96 DEBF      		out __SP_H__,r29
 7218 2e98 0FBE      		out __SREG__,__tmp_reg__
 7219 2e9a CDBF      		out __SP_L__,r28
 7220               	/* prologue: function */
 7221               	/* frame size = 8 */
 7222               	/* stack size = 10 */
 7223               	.L__stack_usage = 10
 7224 2e9c 9E83      		std Y+6,r25
 7225 2e9e 8D83      		std Y+5,r24
 7226 2ea0 7887      		std Y+8,r23
 7227 2ea2 6F83      		std Y+7,r22
 689:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 7228               		.loc 2 689 0
 7229 2ea4 8D81      		ldd r24,Y+5
 7230 2ea6 9E81      		ldd r25,Y+6
 7231 2ea8 FC01      		movw r30,r24
 7232 2eaa 8289      		ldd r24,Z+18
 7233 2eac 9389      		ldd r25,Z+19
 7234 2eae 9A83      		std Y+2,r25
 7235 2eb0 8983      		std Y+1,r24
 690:lp_solve_5.5/lp_presolve.c ****   int      usecount = SOS_memberships(lp->SOS, colnr);
 7236               		.loc 2 690 0
 7237 2eb2 8981      		ldd r24,Y+1
 7238 2eb4 9A81      		ldd r25,Y+2
 7239 2eb6 8256      		subi r24,98
 7240 2eb8 9D4F      		sbci r25,-3
 7241 2eba FC01      		movw r30,r24
 7242 2ebc 8081      		ld r24,Z
 7243 2ebe 9181      		ldd r25,Z+1
 7244 2ec0 2F81      		ldd r18,Y+7
 7245 2ec2 3885      		ldd r19,Y+8
 7246 2ec4 B901      		movw r22,r18
 7247 2ec6 0E94 0000 		call SOS_memberships
 7248 2eca 9C83      		std Y+4,r25
 7249 2ecc 8B83      		std Y+3,r24
 691:lp_solve_5.5/lp_presolve.c **** 
 692:lp_solve_5.5/lp_presolve.c ****   return( (MYBOOL) ((lp->SOS == NULL) || (usecount == 0) ||
 7250               		.loc 2 692 0
 7251 2ece 8981      		ldd r24,Y+1
 7252 2ed0 9A81      		ldd r25,Y+2
 7253 2ed2 8256      		subi r24,98
 7254 2ed4 9D4F      		sbci r25,-3
 7255 2ed6 FC01      		movw r30,r24
 7256 2ed8 8081      		ld r24,Z
 7257 2eda 9181      		ldd r25,Z+1
 7258 2edc 892B      		or r24,r25
 7259 2ede 01F0      		breq .L264
 7260               		.loc 2 692 0 is_stmt 0 discriminator 2
 7261 2ee0 8B81      		ldd r24,Y+3
 7262 2ee2 9C81      		ldd r25,Y+4
 7263 2ee4 892B      		or r24,r25
 7264 2ee6 01F0      		breq .L264
 693:lp_solve_5.5/lp_presolve.c ****                     (/*is_presolve(lp, PRESOLVE_SOS) &&*/
 694:lp_solve_5.5/lp_presolve.c ****                      (((lp->SOS->sos1_count == lp->SOS->sos_count)) ||
 7265               		.loc 2 694 0 is_stmt 1 discriminator 4
 7266 2ee8 8981      		ldd r24,Y+1
 7267 2eea 9A81      		ldd r25,Y+2
 7268 2eec 8256      		subi r24,98
 7269 2eee 9D4F      		sbci r25,-3
 7270 2ef0 FC01      		movw r30,r24
 7271 2ef2 8081      		ld r24,Z
 7272 2ef4 9181      		ldd r25,Z+1
 7273 2ef6 FC01      		movw r30,r24
 7274 2ef8 2285      		ldd r18,Z+10
 7275 2efa 3385      		ldd r19,Z+11
 7276 2efc 8981      		ldd r24,Y+1
 7277 2efe 9A81      		ldd r25,Y+2
 7278 2f00 8256      		subi r24,98
 7279 2f02 9D4F      		sbci r25,-3
 7280 2f04 FC01      		movw r30,r24
 7281 2f06 8081      		ld r24,Z
 7282 2f08 9181      		ldd r25,Z+1
 7283 2f0a FC01      		movw r30,r24
 7284 2f0c 8681      		ldd r24,Z+6
 7285 2f0e 9781      		ldd r25,Z+7
 692:lp_solve_5.5/lp_presolve.c ****                     (/*is_presolve(lp, PRESOLVE_SOS) &&*/
 7286               		.loc 2 692 0 discriminator 4
 7287 2f10 2817      		cp r18,r24
 7288 2f12 3907      		cpc r19,r25
 7289 2f14 01F0      		breq .L264
 695:lp_solve_5.5/lp_presolve.c ****                       (usecount == SOS_is_member_of_type(lp->SOS, colnr, SOS1))))) );
 7290               		.loc 2 695 0
 7291 2f16 8981      		ldd r24,Y+1
 7292 2f18 9A81      		ldd r25,Y+2
 7293 2f1a 8256      		subi r24,98
 7294 2f1c 9D4F      		sbci r25,-3
 7295 2f1e FC01      		movw r30,r24
 7296 2f20 8081      		ld r24,Z
 7297 2f22 9181      		ldd r25,Z+1
 7298 2f24 2F81      		ldd r18,Y+7
 7299 2f26 3885      		ldd r19,Y+8
 7300 2f28 41E0      		ldi r20,lo8(1)
 7301 2f2a 50E0      		ldi r21,0
 7302 2f2c B901      		movw r22,r18
 7303 2f2e 0E94 0000 		call SOS_is_member_of_type
 7304 2f32 282F      		mov r18,r24
 7305 2f34 30E0      		ldi r19,0
 694:lp_solve_5.5/lp_presolve.c ****                       (usecount == SOS_is_member_of_type(lp->SOS, colnr, SOS1))))) );
 7306               		.loc 2 694 0
 7307 2f36 8B81      		ldd r24,Y+3
 7308 2f38 9C81      		ldd r25,Y+4
 7309 2f3a 2817      		cp r18,r24
 7310 2f3c 3907      		cpc r19,r25
 7311 2f3e 01F4      		brne .L265
 7312               	.L264:
 692:lp_solve_5.5/lp_presolve.c ****                     (/*is_presolve(lp, PRESOLVE_SOS) &&*/
 7313               		.loc 2 692 0 discriminator 5
 7314 2f40 81E0      		ldi r24,lo8(1)
 7315 2f42 90E0      		ldi r25,0
 7316 2f44 00C0      		rjmp .L266
 7317               	.L265:
 692:lp_solve_5.5/lp_presolve.c ****                     (/*is_presolve(lp, PRESOLVE_SOS) &&*/
 7318               		.loc 2 692 0 is_stmt 0 discriminator 7
 7319 2f46 80E0      		ldi r24,0
 7320 2f48 90E0      		ldi r25,0
 7321               	.L266:
 7322               	/* epilogue start */
 696:lp_solve_5.5/lp_presolve.c **** }
 7323               		.loc 2 696 0 is_stmt 1 discriminator 6
 7324 2f4a 2896      		adiw r28,8
 7325 2f4c 0FB6      		in __tmp_reg__,__SREG__
 7326 2f4e F894      		cli
 7327 2f50 DEBF      		out __SP_H__,r29
 7328 2f52 0FBE      		out __SREG__,__tmp_reg__
 7329 2f54 CDBF      		out __SP_L__,r28
 7330 2f56 DF91      		pop r29
 7331 2f58 CF91      		pop r28
 7332 2f5a 0895      		ret
 7333               		.cfi_endproc
 7334               	.LFE31:
 7336               	.global	presolve_rowlengthex
 7338               	presolve_rowlengthex:
 7339               	.LFB32:
 697:lp_solve_5.5/lp_presolve.c **** 
 698:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_rowlengthex(presolverec *psdata, int rownr)
 699:lp_solve_5.5/lp_presolve.c **** {
 7340               		.loc 2 699 0
 7341               		.cfi_startproc
 7342 2f5c CF93      		push r28
 7343               	.LCFI128:
 7344               		.cfi_def_cfa_offset 3
 7345               		.cfi_offset 28, -2
 7346 2f5e DF93      		push r29
 7347               	.LCFI129:
 7348               		.cfi_def_cfa_offset 4
 7349               		.cfi_offset 29, -3
 7350 2f60 00D0      		rcall .
 7351 2f62 00D0      		rcall .
 7352 2f64 00D0      		rcall .
 7353               	.LCFI130:
 7354               		.cfi_def_cfa_offset 10
 7355 2f66 CDB7      		in r28,__SP_L__
 7356 2f68 DEB7      		in r29,__SP_H__
 7357               	.LCFI131:
 7358               		.cfi_def_cfa_register 28
 7359               	/* prologue: function */
 7360               	/* frame size = 6 */
 7361               	/* stack size = 8 */
 7362               	.L__stack_usage = 8
 7363 2f6a 9C83      		std Y+4,r25
 7364 2f6c 8B83      		std Y+3,r24
 7365 2f6e 7E83      		std Y+6,r23
 7366 2f70 6D83      		std Y+5,r22
 700:lp_solve_5.5/lp_presolve.c ****   int j1 = psdata->rows->plucount[rownr] + psdata->rows->negcount[rownr];
 7367               		.loc 2 700 0
 7368 2f72 8B81      		ldd r24,Y+3
 7369 2f74 9C81      		ldd r25,Y+4
 7370 2f76 FC01      		movw r30,r24
 7371 2f78 8081      		ld r24,Z
 7372 2f7a 9181      		ldd r25,Z+1
 7373 2f7c FC01      		movw r30,r24
 7374 2f7e 2681      		ldd r18,Z+6
 7375 2f80 3781      		ldd r19,Z+7
 7376 2f82 8D81      		ldd r24,Y+5
 7377 2f84 9E81      		ldd r25,Y+6
 7378 2f86 880F      		lsl r24
 7379 2f88 991F      		rol r25
 7380 2f8a 820F      		add r24,r18
 7381 2f8c 931F      		adc r25,r19
 7382 2f8e FC01      		movw r30,r24
 7383 2f90 2081      		ld r18,Z
 7384 2f92 3181      		ldd r19,Z+1
 7385 2f94 8B81      		ldd r24,Y+3
 7386 2f96 9C81      		ldd r25,Y+4
 7387 2f98 FC01      		movw r30,r24
 7388 2f9a 8081      		ld r24,Z
 7389 2f9c 9181      		ldd r25,Z+1
 7390 2f9e FC01      		movw r30,r24
 7391 2fa0 4085      		ldd r20,Z+8
 7392 2fa2 5185      		ldd r21,Z+9
 7393 2fa4 8D81      		ldd r24,Y+5
 7394 2fa6 9E81      		ldd r25,Y+6
 7395 2fa8 880F      		lsl r24
 7396 2faa 991F      		rol r25
 7397 2fac 840F      		add r24,r20
 7398 2fae 951F      		adc r25,r21
 7399 2fb0 FC01      		movw r30,r24
 7400 2fb2 8081      		ld r24,Z
 7401 2fb4 9181      		ldd r25,Z+1
 7402 2fb6 820F      		add r24,r18
 7403 2fb8 931F      		adc r25,r19
 7404 2fba 9A83      		std Y+2,r25
 7405 2fbc 8983      		std Y+1,r24
 701:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
 702:lp_solve_5.5/lp_presolve.c ****   int j2 = presolve_rowlength(psdata, rownr);
 703:lp_solve_5.5/lp_presolve.c **** 
 704:lp_solve_5.5/lp_presolve.c ****   if(j1 != j2) {
 705:lp_solve_5.5/lp_presolve.c ****     report(psdata->lp, SEVERE, "presolve_rowlengthex: Expected row length %d, but found %d in row %
 706:lp_solve_5.5/lp_presolve.c ****                                 j2, j1, get_row_name(psdata->lp, rownr));
 707:lp_solve_5.5/lp_presolve.c ****     j1 = -j1;
 708:lp_solve_5.5/lp_presolve.c ****   }
 709:lp_solve_5.5/lp_presolve.c **** #endif
 710:lp_solve_5.5/lp_presolve.c **** 
 711:lp_solve_5.5/lp_presolve.c ****   return( j1 );
 7406               		.loc 2 711 0
 7407 2fbe 8981      		ldd r24,Y+1
 7408 2fc0 9A81      		ldd r25,Y+2
 7409               	/* epilogue start */
 712:lp_solve_5.5/lp_presolve.c **** }
 7410               		.loc 2 712 0
 7411 2fc2 2696      		adiw r28,6
 7412 2fc4 0FB6      		in __tmp_reg__,__SREG__
 7413 2fc6 F894      		cli
 7414 2fc8 DEBF      		out __SP_H__,r29
 7415 2fca 0FBE      		out __SREG__,__tmp_reg__
 7416 2fcc CDBF      		out __SP_L__,r28
 7417 2fce DF91      		pop r29
 7418 2fd0 CF91      		pop r28
 7419 2fd2 0895      		ret
 7420               		.cfi_endproc
 7421               	.LFE32:
 7423               	.global	presolve_rowlengthdebug
 7425               	presolve_rowlengthdebug:
 7426               	.LFB33:
 713:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_rowlengthdebug(presolverec *psdata)
 714:lp_solve_5.5/lp_presolve.c **** {
 7427               		.loc 2 714 0
 7428               		.cfi_startproc
 7429 2fd4 CF93      		push r28
 7430               	.LCFI132:
 7431               		.cfi_def_cfa_offset 3
 7432               		.cfi_offset 28, -2
 7433 2fd6 DF93      		push r29
 7434               	.LCFI133:
 7435               		.cfi_def_cfa_offset 4
 7436               		.cfi_offset 29, -3
 7437 2fd8 00D0      		rcall .
 7438 2fda 00D0      		rcall .
 7439 2fdc 00D0      		rcall .
 7440               	.LCFI134:
 7441               		.cfi_def_cfa_offset 10
 7442 2fde CDB7      		in r28,__SP_L__
 7443 2fe0 DEB7      		in r29,__SP_H__
 7444               	.LCFI135:
 7445               		.cfi_def_cfa_register 28
 7446               	/* prologue: function */
 7447               	/* frame size = 6 */
 7448               	/* stack size = 8 */
 7449               	.L__stack_usage = 8
 7450 2fe2 9E83      		std Y+6,r25
 7451 2fe4 8D83      		std Y+5,r24
 715:lp_solve_5.5/lp_presolve.c ****   int rownr, n = 0;
 7452               		.loc 2 715 0
 7453 2fe6 1C82      		std Y+4,__zero_reg__
 7454 2fe8 1B82      		std Y+3,__zero_reg__
 716:lp_solve_5.5/lp_presolve.c **** 
 717:lp_solve_5.5/lp_presolve.c ****   for(rownr = firstActiveLink(psdata->rows->varmap); rownr != 0;
 7455               		.loc 2 717 0
 7456 2fea 8D81      		ldd r24,Y+5
 7457 2fec 9E81      		ldd r25,Y+6
 7458 2fee FC01      		movw r30,r24
 7459 2ff0 8081      		ld r24,Z
 7460 2ff2 9181      		ldd r25,Z+1
 7461 2ff4 FC01      		movw r30,r24
 7462 2ff6 8081      		ld r24,Z
 7463 2ff8 9181      		ldd r25,Z+1
 7464 2ffa 0E94 0000 		call firstActiveLink
 7465 2ffe 9A83      		std Y+2,r25
 7466 3000 8983      		std Y+1,r24
 7467 3002 00C0      		rjmp .L271
 7468               	.L272:
 718:lp_solve_5.5/lp_presolve.c ****     rownr = nextActiveLink(psdata->rows->varmap, rownr))
 719:lp_solve_5.5/lp_presolve.c ****     n += presolve_rowlengthex(psdata, rownr);
 7469               		.loc 2 719 0
 7470 3004 2981      		ldd r18,Y+1
 7471 3006 3A81      		ldd r19,Y+2
 7472 3008 8D81      		ldd r24,Y+5
 7473 300a 9E81      		ldd r25,Y+6
 7474 300c B901      		movw r22,r18
 7475 300e 0E94 0000 		call presolve_rowlengthex
 7476 3012 9C01      		movw r18,r24
 7477 3014 8B81      		ldd r24,Y+3
 7478 3016 9C81      		ldd r25,Y+4
 7479 3018 820F      		add r24,r18
 7480 301a 931F      		adc r25,r19
 7481 301c 9C83      		std Y+4,r25
 7482 301e 8B83      		std Y+3,r24
 718:lp_solve_5.5/lp_presolve.c ****     rownr = nextActiveLink(psdata->rows->varmap, rownr))
 7483               		.loc 2 718 0
 7484 3020 8D81      		ldd r24,Y+5
 7485 3022 9E81      		ldd r25,Y+6
 7486 3024 FC01      		movw r30,r24
 7487 3026 8081      		ld r24,Z
 7488 3028 9181      		ldd r25,Z+1
 7489 302a FC01      		movw r30,r24
 7490 302c 8081      		ld r24,Z
 7491 302e 9181      		ldd r25,Z+1
 7492 3030 2981      		ldd r18,Y+1
 7493 3032 3A81      		ldd r19,Y+2
 7494 3034 B901      		movw r22,r18
 7495 3036 0E94 0000 		call nextActiveLink
 7496 303a 9A83      		std Y+2,r25
 7497 303c 8983      		std Y+1,r24
 7498               	.L271:
 717:lp_solve_5.5/lp_presolve.c ****     rownr = nextActiveLink(psdata->rows->varmap, rownr))
 7499               		.loc 2 717 0 discriminator 1
 7500 303e 8981      		ldd r24,Y+1
 7501 3040 9A81      		ldd r25,Y+2
 7502 3042 892B      		or r24,r25
 7503 3044 01F4      		brne .L272
 720:lp_solve_5.5/lp_presolve.c ****   return( n );
 7504               		.loc 2 720 0
 7505 3046 8B81      		ldd r24,Y+3
 7506 3048 9C81      		ldd r25,Y+4
 7507               	/* epilogue start */
 721:lp_solve_5.5/lp_presolve.c **** }
 7508               		.loc 2 721 0
 7509 304a 2696      		adiw r28,6
 7510 304c 0FB6      		in __tmp_reg__,__SREG__
 7511 304e F894      		cli
 7512 3050 DEBF      		out __SP_H__,r29
 7513 3052 0FBE      		out __SREG__,__tmp_reg__
 7514 3054 CDBF      		out __SP_L__,r28
 7515 3056 DF91      		pop r29
 7516 3058 CF91      		pop r28
 7517 305a 0895      		ret
 7518               		.cfi_endproc
 7519               	.LFE33:
 7522               	presolve_nextrecord:
 7523               	.LFB34:
 722:lp_solve_5.5/lp_presolve.c **** 
 723:lp_solve_5.5/lp_presolve.c **** INLINE int presolve_nextrecord(psrec *ps, int recnr, int *previtem)
 724:lp_solve_5.5/lp_presolve.c **** {
 7524               		.loc 2 724 0
 7525               		.cfi_startproc
 7526 305c CF93      		push r28
 7527               	.LCFI136:
 7528               		.cfi_def_cfa_offset 3
 7529               		.cfi_offset 28, -2
 7530 305e DF93      		push r29
 7531               	.LCFI137:
 7532               		.cfi_def_cfa_offset 4
 7533               		.cfi_offset 29, -3
 7534 3060 CDB7      		in r28,__SP_L__
 7535 3062 DEB7      		in r29,__SP_H__
 7536               	.LCFI138:
 7537               		.cfi_def_cfa_register 28
 7538 3064 2C97      		sbiw r28,12
 7539               	.LCFI139:
 7540               		.cfi_def_cfa_offset 16
 7541 3066 0FB6      		in __tmp_reg__,__SREG__
 7542 3068 F894      		cli
 7543 306a DEBF      		out __SP_H__,r29
 7544 306c 0FBE      		out __SREG__,__tmp_reg__
 7545 306e CDBF      		out __SP_L__,r28
 7546               	/* prologue: function */
 7547               	/* frame size = 12 */
 7548               	/* stack size = 14 */
 7549               	.L__stack_usage = 14
 7550 3070 9887      		std Y+8,r25
 7551 3072 8F83      		std Y+7,r24
 7552 3074 7A87      		std Y+10,r23
 7553 3076 6987      		std Y+9,r22
 7554 3078 5C87      		std Y+12,r21
 7555 307a 4B87      		std Y+11,r20
 725:lp_solve_5.5/lp_presolve.c ****   int *nzlist = ps->next[recnr], nzcount = nzlist[0], status = -1;
 7556               		.loc 2 725 0
 7557 307c 8F81      		ldd r24,Y+7
 7558 307e 9885      		ldd r25,Y+8
 7559 3080 FC01      		movw r30,r24
 7560 3082 2281      		ldd r18,Z+2
 7561 3084 3381      		ldd r19,Z+3
 7562 3086 8985      		ldd r24,Y+9
 7563 3088 9A85      		ldd r25,Y+10
 7564 308a 880F      		lsl r24
 7565 308c 991F      		rol r25
 7566 308e 820F      		add r24,r18
 7567 3090 931F      		adc r25,r19
 7568 3092 FC01      		movw r30,r24
 7569 3094 8081      		ld r24,Z
 7570 3096 9181      		ldd r25,Z+1
 7571 3098 9C83      		std Y+4,r25
 7572 309a 8B83      		std Y+3,r24
 7573 309c 8B81      		ldd r24,Y+3
 7574 309e 9C81      		ldd r25,Y+4
 7575 30a0 FC01      		movw r30,r24
 7576 30a2 8081      		ld r24,Z
 7577 30a4 9181      		ldd r25,Z+1
 7578 30a6 9E83      		std Y+6,r25
 7579 30a8 8D83      		std Y+5,r24
 7580 30aa 8FEF      		ldi r24,lo8(-1)
 7581 30ac 9FEF      		ldi r25,lo8(-1)
 7582 30ae 9A83      		std Y+2,r25
 7583 30b0 8983      		std Y+1,r24
 726:lp_solve_5.5/lp_presolve.c **** 
 727:lp_solve_5.5/lp_presolve.c ****   /* Check if we simply wish the last active column */
 728:lp_solve_5.5/lp_presolve.c ****   if(previtem == NULL) {
 7584               		.loc 2 728 0
 7585 30b2 8B85      		ldd r24,Y+11
 7586 30b4 9C85      		ldd r25,Y+12
 7587 30b6 892B      		or r24,r25
 7588 30b8 01F4      		brne .L275
 729:lp_solve_5.5/lp_presolve.c ****     if(nzlist != NULL)
 7589               		.loc 2 729 0
 7590 30ba 8B81      		ldd r24,Y+3
 7591 30bc 9C81      		ldd r25,Y+4
 7592 30be 892B      		or r24,r25
 7593 30c0 01F0      		breq .L276
 730:lp_solve_5.5/lp_presolve.c ****       status = nzlist[*nzlist];
 7594               		.loc 2 730 0
 7595 30c2 8B81      		ldd r24,Y+3
 7596 30c4 9C81      		ldd r25,Y+4
 7597 30c6 FC01      		movw r30,r24
 7598 30c8 8081      		ld r24,Z
 7599 30ca 9181      		ldd r25,Z+1
 7600 30cc 880F      		lsl r24
 7601 30ce 991F      		rol r25
 7602 30d0 2B81      		ldd r18,Y+3
 7603 30d2 3C81      		ldd r19,Y+4
 7604 30d4 820F      		add r24,r18
 7605 30d6 931F      		adc r25,r19
 7606 30d8 FC01      		movw r30,r24
 7607 30da 8081      		ld r24,Z
 7608 30dc 9181      		ldd r25,Z+1
 7609 30de 9A83      		std Y+2,r25
 7610 30e0 8983      		std Y+1,r24
 7611               	.L276:
 731:lp_solve_5.5/lp_presolve.c ****     return( status );
 7612               		.loc 2 731 0
 7613 30e2 8981      		ldd r24,Y+1
 7614 30e4 9A81      		ldd r25,Y+2
 7615 30e6 00C0      		rjmp .L277
 7616               	.L275:
 732:lp_solve_5.5/lp_presolve.c ****   }
 733:lp_solve_5.5/lp_presolve.c **** 
 734:lp_solve_5.5/lp_presolve.c ****   /* Step to next */
 735:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
 736:lp_solve_5.5/lp_presolve.c ****   else if((*previtem < 0) || (*previtem > nzcount))
 737:lp_solve_5.5/lp_presolve.c ****     return( status );
 738:lp_solve_5.5/lp_presolve.c **** #endif
 739:lp_solve_5.5/lp_presolve.c ****   (*previtem)++;
 7617               		.loc 2 739 0
 7618 30e8 8B85      		ldd r24,Y+11
 7619 30ea 9C85      		ldd r25,Y+12
 7620 30ec FC01      		movw r30,r24
 7621 30ee 8081      		ld r24,Z
 7622 30f0 9181      		ldd r25,Z+1
 7623 30f2 9C01      		movw r18,r24
 7624 30f4 2F5F      		subi r18,-1
 7625 30f6 3F4F      		sbci r19,-1
 7626 30f8 8B85      		ldd r24,Y+11
 7627 30fa 9C85      		ldd r25,Y+12
 7628 30fc FC01      		movw r30,r24
 7629 30fe 3183      		std Z+1,r19
 7630 3100 2083      		st Z,r18
 740:lp_solve_5.5/lp_presolve.c **** 
 741:lp_solve_5.5/lp_presolve.c ****   /* Set the return values */
 742:lp_solve_5.5/lp_presolve.c ****   if(*previtem > nzcount)
 7631               		.loc 2 742 0
 7632 3102 8B85      		ldd r24,Y+11
 7633 3104 9C85      		ldd r25,Y+12
 7634 3106 FC01      		movw r30,r24
 7635 3108 2081      		ld r18,Z
 7636 310a 3181      		ldd r19,Z+1
 7637 310c 8D81      		ldd r24,Y+5
 7638 310e 9E81      		ldd r25,Y+6
 7639 3110 8217      		cp r24,r18
 7640 3112 9307      		cpc r25,r19
 7641 3114 04F4      		brge .L278
 743:lp_solve_5.5/lp_presolve.c ****     (*previtem) = 0;
 7642               		.loc 2 743 0
 7643 3116 8B85      		ldd r24,Y+11
 7644 3118 9C85      		ldd r25,Y+12
 7645 311a FC01      		movw r30,r24
 7646 311c 1182      		std Z+1,__zero_reg__
 7647 311e 1082      		st Z,__zero_reg__
 7648 3120 00C0      		rjmp .L279
 7649               	.L278:
 744:lp_solve_5.5/lp_presolve.c ****   else
 745:lp_solve_5.5/lp_presolve.c ****     status = nzlist[*previtem];
 7650               		.loc 2 745 0
 7651 3122 8B85      		ldd r24,Y+11
 7652 3124 9C85      		ldd r25,Y+12
 7653 3126 FC01      		movw r30,r24
 7654 3128 8081      		ld r24,Z
 7655 312a 9181      		ldd r25,Z+1
 7656 312c 880F      		lsl r24
 7657 312e 991F      		rol r25
 7658 3130 2B81      		ldd r18,Y+3
 7659 3132 3C81      		ldd r19,Y+4
 7660 3134 820F      		add r24,r18
 7661 3136 931F      		adc r25,r19
 7662 3138 FC01      		movw r30,r24
 7663 313a 8081      		ld r24,Z
 7664 313c 9181      		ldd r25,Z+1
 7665 313e 9A83      		std Y+2,r25
 7666 3140 8983      		std Y+1,r24
 7667               	.L279:
 746:lp_solve_5.5/lp_presolve.c **** 
 747:lp_solve_5.5/lp_presolve.c ****   return( status );
 7668               		.loc 2 747 0
 7669 3142 8981      		ldd r24,Y+1
 7670 3144 9A81      		ldd r25,Y+2
 7671               	.L277:
 7672               	/* epilogue start */
 748:lp_solve_5.5/lp_presolve.c **** }
 7673               		.loc 2 748 0
 7674 3146 2C96      		adiw r28,12
 7675 3148 0FB6      		in __tmp_reg__,__SREG__
 7676 314a F894      		cli
 7677 314c DEBF      		out __SP_H__,r29
 7678 314e 0FBE      		out __SREG__,__tmp_reg__
 7679 3150 CDBF      		out __SP_L__,r28
 7680 3152 DF91      		pop r29
 7681 3154 CF91      		pop r28
 7682 3156 0895      		ret
 7683               		.cfi_endproc
 7684               	.LFE34:
 7687               	presolve_nextcol:
 7688               	.LFB35:
 749:lp_solve_5.5/lp_presolve.c **** INLINE int presolve_nextcol(presolverec *psdata, int rownr, int *previtem)
 750:lp_solve_5.5/lp_presolve.c **** /* Find the first active (non-eliminated) nonzero column in rownr after prevcol */
 751:lp_solve_5.5/lp_presolve.c **** {
 7689               		.loc 2 751 0
 7690               		.cfi_startproc
 7691 3158 CF93      		push r28
 7692               	.LCFI140:
 7693               		.cfi_def_cfa_offset 3
 7694               		.cfi_offset 28, -2
 7695 315a DF93      		push r29
 7696               	.LCFI141:
 7697               		.cfi_def_cfa_offset 4
 7698               		.cfi_offset 29, -3
 7699 315c 00D0      		rcall .
 7700 315e 00D0      		rcall .
 7701 3160 00D0      		rcall .
 7702               	.LCFI142:
 7703               		.cfi_def_cfa_offset 10
 7704 3162 CDB7      		in r28,__SP_L__
 7705 3164 DEB7      		in r29,__SP_H__
 7706               	.LCFI143:
 7707               		.cfi_def_cfa_register 28
 7708               	/* prologue: function */
 7709               	/* frame size = 6 */
 7710               	/* stack size = 8 */
 7711               	.L__stack_usage = 8
 7712 3166 9A83      		std Y+2,r25
 7713 3168 8983      		std Y+1,r24
 7714 316a 7C83      		std Y+4,r23
 7715 316c 6B83      		std Y+3,r22
 7716 316e 5E83      		std Y+6,r21
 7717 3170 4D83      		std Y+5,r20
 752:lp_solve_5.5/lp_presolve.c ****   return( presolve_nextrecord(psdata->rows, rownr, previtem) );
 7718               		.loc 2 752 0
 7719 3172 8981      		ldd r24,Y+1
 7720 3174 9A81      		ldd r25,Y+2
 7721 3176 FC01      		movw r30,r24
 7722 3178 8081      		ld r24,Z
 7723 317a 9181      		ldd r25,Z+1
 7724 317c 4D81      		ldd r20,Y+5
 7725 317e 5E81      		ldd r21,Y+6
 7726 3180 2B81      		ldd r18,Y+3
 7727 3182 3C81      		ldd r19,Y+4
 7728 3184 B901      		movw r22,r18
 7729 3186 0E94 0000 		call presolve_nextrecord
 7730               	/* epilogue start */
 753:lp_solve_5.5/lp_presolve.c **** }
 7731               		.loc 2 753 0
 7732 318a 2696      		adiw r28,6
 7733 318c 0FB6      		in __tmp_reg__,__SREG__
 7734 318e F894      		cli
 7735 3190 DEBF      		out __SP_H__,r29
 7736 3192 0FBE      		out __SREG__,__tmp_reg__
 7737 3194 CDBF      		out __SP_L__,r28
 7738 3196 DF91      		pop r29
 7739 3198 CF91      		pop r28
 7740 319a 0895      		ret
 7741               		.cfi_endproc
 7742               	.LFE35:
 7745               	presolve_lastcol:
 7746               	.LFB36:
 754:lp_solve_5.5/lp_presolve.c **** INLINE int presolve_lastcol(presolverec *psdata, int rownr)
 755:lp_solve_5.5/lp_presolve.c **** {
 7747               		.loc 2 755 0
 7748               		.cfi_startproc
 7749 319c CF93      		push r28
 7750               	.LCFI144:
 7751               		.cfi_def_cfa_offset 3
 7752               		.cfi_offset 28, -2
 7753 319e DF93      		push r29
 7754               	.LCFI145:
 7755               		.cfi_def_cfa_offset 4
 7756               		.cfi_offset 29, -3
 7757 31a0 00D0      		rcall .
 7758 31a2 00D0      		rcall .
 7759               	.LCFI146:
 7760               		.cfi_def_cfa_offset 8
 7761 31a4 CDB7      		in r28,__SP_L__
 7762 31a6 DEB7      		in r29,__SP_H__
 7763               	.LCFI147:
 7764               		.cfi_def_cfa_register 28
 7765               	/* prologue: function */
 7766               	/* frame size = 4 */
 7767               	/* stack size = 6 */
 7768               	.L__stack_usage = 6
 7769 31a8 9A83      		std Y+2,r25
 7770 31aa 8983      		std Y+1,r24
 7771 31ac 7C83      		std Y+4,r23
 7772 31ae 6B83      		std Y+3,r22
 756:lp_solve_5.5/lp_presolve.c ****   return( presolve_nextrecord(psdata->rows, rownr, NULL) );
 7773               		.loc 2 756 0
 7774 31b0 8981      		ldd r24,Y+1
 7775 31b2 9A81      		ldd r25,Y+2
 7776 31b4 FC01      		movw r30,r24
 7777 31b6 8081      		ld r24,Z
 7778 31b8 9181      		ldd r25,Z+1
 7779 31ba 2B81      		ldd r18,Y+3
 7780 31bc 3C81      		ldd r19,Y+4
 7781 31be 40E0      		ldi r20,0
 7782 31c0 50E0      		ldi r21,0
 7783 31c2 B901      		movw r22,r18
 7784 31c4 0E94 0000 		call presolve_nextrecord
 7785               	/* epilogue start */
 757:lp_solve_5.5/lp_presolve.c **** }
 7786               		.loc 2 757 0
 7787 31c8 0F90      		pop __tmp_reg__
 7788 31ca 0F90      		pop __tmp_reg__
 7789 31cc 0F90      		pop __tmp_reg__
 7790 31ce 0F90      		pop __tmp_reg__
 7791 31d0 DF91      		pop r29
 7792 31d2 CF91      		pop r28
 7793 31d4 0895      		ret
 7794               		.cfi_endproc
 7795               	.LFE36:
 7798               	presolve_nextrow:
 7799               	.LFB37:
 758:lp_solve_5.5/lp_presolve.c **** INLINE int presolve_nextrow(presolverec *psdata, int colnr, int *previtem)
 759:lp_solve_5.5/lp_presolve.c **** /* Find the first active (non-eliminated) nonzero row in colnr after prevrow */
 760:lp_solve_5.5/lp_presolve.c **** {
 7800               		.loc 2 760 0
 7801               		.cfi_startproc
 7802 31d6 CF93      		push r28
 7803               	.LCFI148:
 7804               		.cfi_def_cfa_offset 3
 7805               		.cfi_offset 28, -2
 7806 31d8 DF93      		push r29
 7807               	.LCFI149:
 7808               		.cfi_def_cfa_offset 4
 7809               		.cfi_offset 29, -3
 7810 31da 00D0      		rcall .
 7811 31dc 00D0      		rcall .
 7812 31de 00D0      		rcall .
 7813               	.LCFI150:
 7814               		.cfi_def_cfa_offset 10
 7815 31e0 CDB7      		in r28,__SP_L__
 7816 31e2 DEB7      		in r29,__SP_H__
 7817               	.LCFI151:
 7818               		.cfi_def_cfa_register 28
 7819               	/* prologue: function */
 7820               	/* frame size = 6 */
 7821               	/* stack size = 8 */
 7822               	.L__stack_usage = 8
 7823 31e4 9A83      		std Y+2,r25
 7824 31e6 8983      		std Y+1,r24
 7825 31e8 7C83      		std Y+4,r23
 7826 31ea 6B83      		std Y+3,r22
 7827 31ec 5E83      		std Y+6,r21
 7828 31ee 4D83      		std Y+5,r20
 761:lp_solve_5.5/lp_presolve.c ****   return( presolve_nextrecord(psdata->cols, colnr, previtem) );
 7829               		.loc 2 761 0
 7830 31f0 8981      		ldd r24,Y+1
 7831 31f2 9A81      		ldd r25,Y+2
 7832 31f4 FC01      		movw r30,r24
 7833 31f6 8281      		ldd r24,Z+2
 7834 31f8 9381      		ldd r25,Z+3
 7835 31fa 4D81      		ldd r20,Y+5
 7836 31fc 5E81      		ldd r21,Y+6
 7837 31fe 2B81      		ldd r18,Y+3
 7838 3200 3C81      		ldd r19,Y+4
 7839 3202 B901      		movw r22,r18
 7840 3204 0E94 0000 		call presolve_nextrecord
 7841               	/* epilogue start */
 762:lp_solve_5.5/lp_presolve.c **** }
 7842               		.loc 2 762 0
 7843 3208 2696      		adiw r28,6
 7844 320a 0FB6      		in __tmp_reg__,__SREG__
 7845 320c F894      		cli
 7846 320e DEBF      		out __SP_H__,r29
 7847 3210 0FBE      		out __SREG__,__tmp_reg__
 7848 3212 CDBF      		out __SP_L__,r28
 7849 3214 DF91      		pop r29
 7850 3216 CF91      		pop r28
 7851 3218 0895      		ret
 7852               		.cfi_endproc
 7853               	.LFE37:
 7856               	presolve_lastrow:
 7857               	.LFB38:
 763:lp_solve_5.5/lp_presolve.c **** INLINE int presolve_lastrow(presolverec *psdata, int colnr)
 764:lp_solve_5.5/lp_presolve.c **** {
 7858               		.loc 2 764 0
 7859               		.cfi_startproc
 7860 321a CF93      		push r28
 7861               	.LCFI152:
 7862               		.cfi_def_cfa_offset 3
 7863               		.cfi_offset 28, -2
 7864 321c DF93      		push r29
 7865               	.LCFI153:
 7866               		.cfi_def_cfa_offset 4
 7867               		.cfi_offset 29, -3
 7868 321e 00D0      		rcall .
 7869 3220 00D0      		rcall .
 7870               	.LCFI154:
 7871               		.cfi_def_cfa_offset 8
 7872 3222 CDB7      		in r28,__SP_L__
 7873 3224 DEB7      		in r29,__SP_H__
 7874               	.LCFI155:
 7875               		.cfi_def_cfa_register 28
 7876               	/* prologue: function */
 7877               	/* frame size = 4 */
 7878               	/* stack size = 6 */
 7879               	.L__stack_usage = 6
 7880 3226 9A83      		std Y+2,r25
 7881 3228 8983      		std Y+1,r24
 7882 322a 7C83      		std Y+4,r23
 7883 322c 6B83      		std Y+3,r22
 765:lp_solve_5.5/lp_presolve.c ****   return( presolve_nextrecord(psdata->cols, colnr, NULL) );
 7884               		.loc 2 765 0
 7885 322e 8981      		ldd r24,Y+1
 7886 3230 9A81      		ldd r25,Y+2
 7887 3232 FC01      		movw r30,r24
 7888 3234 8281      		ldd r24,Z+2
 7889 3236 9381      		ldd r25,Z+3
 7890 3238 2B81      		ldd r18,Y+3
 7891 323a 3C81      		ldd r19,Y+4
 7892 323c 40E0      		ldi r20,0
 7893 323e 50E0      		ldi r21,0
 7894 3240 B901      		movw r22,r18
 7895 3242 0E94 0000 		call presolve_nextrecord
 7896               	/* epilogue start */
 766:lp_solve_5.5/lp_presolve.c **** }
 7897               		.loc 2 766 0
 7898 3246 0F90      		pop __tmp_reg__
 7899 3248 0F90      		pop __tmp_reg__
 7900 324a 0F90      		pop __tmp_reg__
 7901 324c 0F90      		pop __tmp_reg__
 7902 324e DF91      		pop r29
 7903 3250 CF91      		pop r28
 7904 3252 0895      		ret
 7905               		.cfi_endproc
 7906               	.LFE38:
 7909               	presolve_adjustrhs:
 7910               	.LFB39:
 767:lp_solve_5.5/lp_presolve.c **** 
 768:lp_solve_5.5/lp_presolve.c **** INLINE void presolve_adjustrhs(presolverec *psdata, int rownr, REAL fixdelta, REAL epsvalue)
 769:lp_solve_5.5/lp_presolve.c **** {
 7911               		.loc 2 769 0
 7912               		.cfi_startproc
 7913 3254 EF92      		push r14
 7914               	.LCFI156:
 7915               		.cfi_def_cfa_offset 3
 7916               		.cfi_offset 14, -2
 7917 3256 FF92      		push r15
 7918               	.LCFI157:
 7919               		.cfi_def_cfa_offset 4
 7920               		.cfi_offset 15, -3
 7921 3258 0F93      		push r16
 7922               	.LCFI158:
 7923               		.cfi_def_cfa_offset 5
 7924               		.cfi_offset 16, -4
 7925 325a 1F93      		push r17
 7926               	.LCFI159:
 7927               		.cfi_def_cfa_offset 6
 7928               		.cfi_offset 17, -5
 7929 325c CF93      		push r28
 7930               	.LCFI160:
 7931               		.cfi_def_cfa_offset 7
 7932               		.cfi_offset 28, -6
 7933 325e DF93      		push r29
 7934               	.LCFI161:
 7935               		.cfi_def_cfa_offset 8
 7936               		.cfi_offset 29, -7
 7937 3260 CDB7      		in r28,__SP_L__
 7938 3262 DEB7      		in r29,__SP_H__
 7939               	.LCFI162:
 7940               		.cfi_def_cfa_register 28
 7941 3264 2E97      		sbiw r28,14
 7942               	.LCFI163:
 7943               		.cfi_def_cfa_offset 22
 7944 3266 0FB6      		in __tmp_reg__,__SREG__
 7945 3268 F894      		cli
 7946 326a DEBF      		out __SP_H__,r29
 7947 326c 0FBE      		out __SREG__,__tmp_reg__
 7948 326e CDBF      		out __SP_L__,r28
 7949               	/* prologue: function */
 7950               	/* frame size = 14 */
 7951               	/* stack size = 20 */
 7952               	.L__stack_usage = 20
 7953 3270 9C83      		std Y+4,r25
 7954 3272 8B83      		std Y+3,r24
 7955 3274 7E83      		std Y+6,r23
 7956 3276 6D83      		std Y+5,r22
 7957 3278 2F83      		std Y+7,r18
 7958 327a 3887      		std Y+8,r19
 7959 327c 4987      		std Y+9,r20
 7960 327e 5A87      		std Y+10,r21
 7961 3280 EB86      		std Y+11,r14
 7962 3282 FC86      		std Y+12,r15
 7963 3284 0D87      		std Y+13,r16
 7964 3286 1E87      		std Y+14,r17
 770:lp_solve_5.5/lp_presolve.c ****   lprec *lp = psdata->lp;
 7965               		.loc 2 770 0
 7966 3288 8B81      		ldd r24,Y+3
 7967 328a 9C81      		ldd r25,Y+4
 7968 328c FC01      		movw r30,r24
 7969 328e 8289      		ldd r24,Z+18
 7970 3290 9389      		ldd r25,Z+19
 7971 3292 9A83      		std Y+2,r25
 7972 3294 8983      		std Y+1,r24
 771:lp_solve_5.5/lp_presolve.c **** 
 772:lp_solve_5.5/lp_presolve.c ****   lp->orig_rhs[rownr] -= fixdelta;
 7973               		.loc 2 772 0
 7974 3296 8981      		ldd r24,Y+1
 7975 3298 9A81      		ldd r25,Y+2
 7976 329a 8A55      		subi r24,90
 7977 329c 9D4F      		sbci r25,-3
 7978 329e FC01      		movw r30,r24
 7979 32a0 2081      		ld r18,Z
 7980 32a2 3181      		ldd r19,Z+1
 7981 32a4 8D81      		ldd r24,Y+5
 7982 32a6 9E81      		ldd r25,Y+6
 7983 32a8 880F      		lsl r24
 7984 32aa 991F      		rol r25
 7985 32ac 880F      		lsl r24
 7986 32ae 991F      		rol r25
 7987 32b0 8901      		movw r16,r18
 7988 32b2 080F      		add r16,r24
 7989 32b4 191F      		adc r17,r25
 7990 32b6 8981      		ldd r24,Y+1
 7991 32b8 9A81      		ldd r25,Y+2
 7992 32ba 8A55      		subi r24,90
 7993 32bc 9D4F      		sbci r25,-3
 7994 32be FC01      		movw r30,r24
 7995 32c0 2081      		ld r18,Z
 7996 32c2 3181      		ldd r19,Z+1
 7997 32c4 8D81      		ldd r24,Y+5
 7998 32c6 9E81      		ldd r25,Y+6
 7999 32c8 880F      		lsl r24
 8000 32ca 991F      		rol r25
 8001 32cc 880F      		lsl r24
 8002 32ce 991F      		rol r25
 8003 32d0 820F      		add r24,r18
 8004 32d2 931F      		adc r25,r19
 8005 32d4 FC01      		movw r30,r24
 8006 32d6 8081      		ld r24,Z
 8007 32d8 9181      		ldd r25,Z+1
 8008 32da A281      		ldd r26,Z+2
 8009 32dc B381      		ldd r27,Z+3
 8010 32de 2F81      		ldd r18,Y+7
 8011 32e0 3885      		ldd r19,Y+8
 8012 32e2 4985      		ldd r20,Y+9
 8013 32e4 5A85      		ldd r21,Y+10
 8014 32e6 BC01      		movw r22,r24
 8015 32e8 CD01      		movw r24,r26
 8016 32ea 0E94 0000 		call __subsf3
 8017 32ee DC01      		movw r26,r24
 8018 32f0 CB01      		movw r24,r22
 8019 32f2 F801      		movw r30,r16
 8020 32f4 8083      		st Z,r24
 8021 32f6 9183      		std Z+1,r25
 8022 32f8 A283      		std Z+2,r26
 8023 32fa B383      		std Z+3,r27
 773:lp_solve_5.5/lp_presolve.c ****   if(epsvalue > 0)
 8024               		.loc 2 773 0
 8025 32fc 20E0      		ldi r18,0
 8026 32fe 30E0      		ldi r19,0
 8027 3300 A901      		movw r20,r18
 8028 3302 6B85      		ldd r22,Y+11
 8029 3304 7C85      		ldd r23,Y+12
 8030 3306 8D85      		ldd r24,Y+13
 8031 3308 9E85      		ldd r25,Y+14
 8032 330a 0E94 0000 		call __gtsf2
 8033 330e 1816      		cp __zero_reg__,r24
 8034 3310 04F4      		brge .L289
 774:lp_solve_5.5/lp_presolve.c **** #if 1
 775:lp_solve_5.5/lp_presolve.c ****     my_roundzero(lp->orig_rhs[rownr], epsvalue);
 8035               		.loc 2 775 0
 8036 3312 8981      		ldd r24,Y+1
 8037 3314 9A81      		ldd r25,Y+2
 8038 3316 8A55      		subi r24,90
 8039 3318 9D4F      		sbci r25,-3
 8040 331a FC01      		movw r30,r24
 8041 331c 2081      		ld r18,Z
 8042 331e 3181      		ldd r19,Z+1
 8043 3320 8D81      		ldd r24,Y+5
 8044 3322 9E81      		ldd r25,Y+6
 8045 3324 880F      		lsl r24
 8046 3326 991F      		rol r25
 8047 3328 880F      		lsl r24
 8048 332a 991F      		rol r25
 8049 332c 820F      		add r24,r18
 8050 332e 931F      		adc r25,r19
 8051 3330 FC01      		movw r30,r24
 8052 3332 8081      		ld r24,Z
 8053 3334 9181      		ldd r25,Z+1
 8054 3336 A281      		ldd r26,Z+2
 8055 3338 B381      		ldd r27,Z+3
 8056 333a BF77      		andi r27,0x7f
 8057 333c 2B85      		ldd r18,Y+11
 8058 333e 3C85      		ldd r19,Y+12
 8059 3340 4D85      		ldd r20,Y+13
 8060 3342 5E85      		ldd r21,Y+14
 8061 3344 BC01      		movw r22,r24
 8062 3346 CD01      		movw r24,r26
 8063 3348 0E94 0000 		call __ltsf2
 8064 334c 8823      		tst r24
 8065 334e 04F4      		brge .L289
 8066               		.loc 2 775 0 is_stmt 0 discriminator 1
 8067 3350 8981      		ldd r24,Y+1
 8068 3352 9A81      		ldd r25,Y+2
 8069 3354 8A55      		subi r24,90
 8070 3356 9D4F      		sbci r25,-3
 8071 3358 FC01      		movw r30,r24
 8072 335a 2081      		ld r18,Z
 8073 335c 3181      		ldd r19,Z+1
 8074 335e 8D81      		ldd r24,Y+5
 8075 3360 9E81      		ldd r25,Y+6
 8076 3362 880F      		lsl r24
 8077 3364 991F      		rol r25
 8078 3366 880F      		lsl r24
 8079 3368 991F      		rol r25
 8080 336a 820F      		add r24,r18
 8081 336c 931F      		adc r25,r19
 8082 336e FC01      		movw r30,r24
 8083 3370 1082      		st Z,__zero_reg__
 8084 3372 1182      		std Z+1,__zero_reg__
 8085 3374 1282      		std Z+2,__zero_reg__
 8086 3376 1382      		std Z+3,__zero_reg__
 8087               	.L289:
 776:lp_solve_5.5/lp_presolve.c **** #else
 777:lp_solve_5.5/lp_presolve.c ****     lp->orig_rhs[rownr] = presolve_roundrhs(lp, lp->orig_rhs[rownr], FALSE);
 778:lp_solve_5.5/lp_presolve.c **** #endif
 779:lp_solve_5.5/lp_presolve.c ****   lp->presolve_undo->fixed_rhs[rownr] += fixdelta;
 8088               		.loc 2 779 0 is_stmt 1
 8089 3378 8981      		ldd r24,Y+1
 8090 337a 9A81      		ldd r25,Y+2
 8091 337c 8A59      		subi r24,-102
 8092 337e 9C4F      		sbci r25,-4
 8093 3380 FC01      		movw r30,r24
 8094 3382 8081      		ld r24,Z
 8095 3384 9181      		ldd r25,Z+1
 8096 3386 FC01      		movw r30,r24
 8097 3388 2485      		ldd r18,Z+12
 8098 338a 3585      		ldd r19,Z+13
 8099 338c 8D81      		ldd r24,Y+5
 8100 338e 9E81      		ldd r25,Y+6
 8101 3390 880F      		lsl r24
 8102 3392 991F      		rol r25
 8103 3394 880F      		lsl r24
 8104 3396 991F      		rol r25
 8105 3398 8901      		movw r16,r18
 8106 339a 080F      		add r16,r24
 8107 339c 191F      		adc r17,r25
 8108 339e 8981      		ldd r24,Y+1
 8109 33a0 9A81      		ldd r25,Y+2
 8110 33a2 8A59      		subi r24,-102
 8111 33a4 9C4F      		sbci r25,-4
 8112 33a6 FC01      		movw r30,r24
 8113 33a8 8081      		ld r24,Z
 8114 33aa 9181      		ldd r25,Z+1
 8115 33ac FC01      		movw r30,r24
 8116 33ae 2485      		ldd r18,Z+12
 8117 33b0 3585      		ldd r19,Z+13
 8118 33b2 8D81      		ldd r24,Y+5
 8119 33b4 9E81      		ldd r25,Y+6
 8120 33b6 880F      		lsl r24
 8121 33b8 991F      		rol r25
 8122 33ba 880F      		lsl r24
 8123 33bc 991F      		rol r25
 8124 33be 820F      		add r24,r18
 8125 33c0 931F      		adc r25,r19
 8126 33c2 FC01      		movw r30,r24
 8127 33c4 8081      		ld r24,Z
 8128 33c6 9181      		ldd r25,Z+1
 8129 33c8 A281      		ldd r26,Z+2
 8130 33ca B381      		ldd r27,Z+3
 8131 33cc 2F81      		ldd r18,Y+7
 8132 33ce 3885      		ldd r19,Y+8
 8133 33d0 4985      		ldd r20,Y+9
 8134 33d2 5A85      		ldd r21,Y+10
 8135 33d4 BC01      		movw r22,r24
 8136 33d6 CD01      		movw r24,r26
 8137 33d8 0E94 0000 		call __addsf3
 8138 33dc DC01      		movw r26,r24
 8139 33de CB01      		movw r24,r22
 8140 33e0 F801      		movw r30,r16
 8141 33e2 8083      		st Z,r24
 8142 33e4 9183      		std Z+1,r25
 8143 33e6 A283      		std Z+2,r26
 8144 33e8 B383      		std Z+3,r27
 780:lp_solve_5.5/lp_presolve.c **** }
 8145               		.loc 2 780 0
 8146 33ea 0000      		nop
 8147               	/* epilogue start */
 8148 33ec 2E96      		adiw r28,14
 8149 33ee 0FB6      		in __tmp_reg__,__SREG__
 8150 33f0 F894      		cli
 8151 33f2 DEBF      		out __SP_H__,r29
 8152 33f4 0FBE      		out __SREG__,__tmp_reg__
 8153 33f6 CDBF      		out __SP_L__,r28
 8154 33f8 DF91      		pop r29
 8155 33fa CF91      		pop r28
 8156 33fc 1F91      		pop r17
 8157 33fe 0F91      		pop r16
 8158 3400 FF90      		pop r15
 8159 3402 EF90      		pop r14
 8160 3404 0895      		ret
 8161               		.cfi_endproc
 8162               	.LFE39:
 8164               		.section	.rodata
 8165               	.LC21:
 8166 047f 6C70 5F73 		.string	"lp_solve_5.5/lp_presolve.c"
 8166      6F6C 7665 
 8166      5F35 2E35 
 8166      2F6C 705F 
 8166      7072 6573 
 8167               	.LC22:
 8168 049a 7072 6573 		.string	"presolve_shrink: Empty column %d is member of a SOS\n"
 8168      6F6C 7665 
 8168      5F73 6872 
 8168      696E 6B3A 
 8168      2045 6D70 
 8169               		.text
 8170               	.global	presolve_shrink
 8172               	presolve_shrink:
 8173               	.LFB40:
 781:lp_solve_5.5/lp_presolve.c **** 
 782:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_shrink(presolverec *psdata, int *nConRemove, int *nVarRemove)
 783:lp_solve_5.5/lp_presolve.c **** {
 8174               		.loc 2 783 0
 8175               		.cfi_startproc
 8176 3406 EF92      		push r14
 8177               	.LCFI164:
 8178               		.cfi_def_cfa_offset 3
 8179               		.cfi_offset 14, -2
 8180 3408 FF92      		push r15
 8181               	.LCFI165:
 8182               		.cfi_def_cfa_offset 4
 8183               		.cfi_offset 15, -3
 8184 340a 0F93      		push r16
 8185               	.LCFI166:
 8186               		.cfi_def_cfa_offset 5
 8187               		.cfi_offset 16, -4
 8188 340c CF93      		push r28
 8189               	.LCFI167:
 8190               		.cfi_def_cfa_offset 6
 8191               		.cfi_offset 28, -5
 8192 340e DF93      		push r29
 8193               	.LCFI168:
 8194               		.cfi_def_cfa_offset 7
 8195               		.cfi_offset 29, -6
 8196 3410 CDB7      		in r28,__SP_L__
 8197 3412 DEB7      		in r29,__SP_H__
 8198               	.LCFI169:
 8199               		.cfi_def_cfa_register 28
 8200 3414 6A97      		sbiw r28,26
 8201               	.LCFI170:
 8202               		.cfi_def_cfa_offset 33
 8203 3416 0FB6      		in __tmp_reg__,__SREG__
 8204 3418 F894      		cli
 8205 341a DEBF      		out __SP_H__,r29
 8206 341c 0FBE      		out __SREG__,__tmp_reg__
 8207 341e CDBF      		out __SP_L__,r28
 8208               	/* prologue: function */
 8209               	/* frame size = 26 */
 8210               	/* stack size = 31 */
 8211               	.L__stack_usage = 31
 8212 3420 9E8B      		std Y+22,r25
 8213 3422 8D8B      		std Y+21,r24
 8214 3424 788F      		std Y+24,r23
 8215 3426 6F8B      		std Y+23,r22
 8216 3428 5A8F      		std Y+26,r21
 8217 342a 498F      		std Y+25,r20
 784:lp_solve_5.5/lp_presolve.c ****   SOSgroup *SOS = psdata->lp->SOS;
 8218               		.loc 2 784 0
 8219 342c 8D89      		ldd r24,Y+21
 8220 342e 9E89      		ldd r25,Y+22
 8221 3430 FC01      		movw r30,r24
 8222 3432 8289      		ldd r24,Z+18
 8223 3434 9389      		ldd r25,Z+19
 8224 3436 8256      		subi r24,98
 8225 3438 9D4F      		sbci r25,-3
 8226 343a FC01      		movw r30,r24
 8227 343c 8081      		ld r24,Z
 8228 343e 9181      		ldd r25,Z+1
 8229 3440 9887      		std Y+8,r25
 8230 3442 8F83      		std Y+7,r24
 785:lp_solve_5.5/lp_presolve.c ****   int     status = RUNNING, countR = 0, countC = 0,
 8231               		.loc 2 785 0
 8232 3444 88E0      		ldi r24,lo8(8)
 8233 3446 90E0      		ldi r25,0
 8234 3448 988B      		std Y+16,r25
 8235 344a 8F87      		std Y+15,r24
 8236 344c 1A82      		std Y+2,__zero_reg__
 8237 344e 1982      		std Y+1,__zero_reg__
 8238 3450 1C82      		std Y+4,__zero_reg__
 8239 3452 1B82      		std Y+3,__zero_reg__
 786:lp_solve_5.5/lp_presolve.c ****           i, ix, n, *list;
 787:lp_solve_5.5/lp_presolve.c ****   REAL    fixValue;
 788:lp_solve_5.5/lp_presolve.c **** 
 789:lp_solve_5.5/lp_presolve.c ****   /* Remove empty rows */
 790:lp_solve_5.5/lp_presolve.c ****   list = psdata->rows->empty;
 8240               		.loc 2 790 0
 8241 3454 8D89      		ldd r24,Y+21
 8242 3456 9E89      		ldd r25,Y+22
 8243 3458 FC01      		movw r30,r24
 8244 345a 8081      		ld r24,Z
 8245 345c 9181      		ldd r25,Z+1
 8246 345e FC01      		movw r30,r24
 8247 3460 8481      		ldd r24,Z+4
 8248 3462 9581      		ldd r25,Z+5
 8249 3464 9A87      		std Y+10,r25
 8250 3466 8987      		std Y+9,r24
 791:lp_solve_5.5/lp_presolve.c ****   if(list != NULL) {
 8251               		.loc 2 791 0
 8252 3468 8985      		ldd r24,Y+9
 8253 346a 9A85      		ldd r25,Y+10
 8254 346c 892B      		or r24,r25
 8255 346e 01F4      		brne .+2
 8256 3470 00C0      		rjmp .L295
 792:lp_solve_5.5/lp_presolve.c ****     n = list[0];
 8257               		.loc 2 792 0
 8258 3472 8985      		ldd r24,Y+9
 8259 3474 9A85      		ldd r25,Y+10
 8260 3476 FC01      		movw r30,r24
 8261 3478 8081      		ld r24,Z
 8262 347a 9181      		ldd r25,Z+1
 8263 347c 9C87      		std Y+12,r25
 8264 347e 8B87      		std Y+11,r24
 793:lp_solve_5.5/lp_presolve.c ****     for(i = 1; i <= n; i++)
 8265               		.loc 2 793 0
 8266 3480 81E0      		ldi r24,lo8(1)
 8267 3482 90E0      		ldi r25,0
 8268 3484 9E83      		std Y+6,r25
 8269 3486 8D83      		std Y+5,r24
 8270 3488 00C0      		rjmp .L296
 8271               	.L298:
 794:lp_solve_5.5/lp_presolve.c ****       if(isActiveLink(psdata->rows->varmap, list[i])) {
 8272               		.loc 2 794 0
 8273 348a 8D81      		ldd r24,Y+5
 8274 348c 9E81      		ldd r25,Y+6
 8275 348e 880F      		lsl r24
 8276 3490 991F      		rol r25
 8277 3492 2985      		ldd r18,Y+9
 8278 3494 3A85      		ldd r19,Y+10
 8279 3496 820F      		add r24,r18
 8280 3498 931F      		adc r25,r19
 8281 349a FC01      		movw r30,r24
 8282 349c 2081      		ld r18,Z
 8283 349e 3181      		ldd r19,Z+1
 8284 34a0 8D89      		ldd r24,Y+21
 8285 34a2 9E89      		ldd r25,Y+22
 8286 34a4 FC01      		movw r30,r24
 8287 34a6 8081      		ld r24,Z
 8288 34a8 9181      		ldd r25,Z+1
 8289 34aa FC01      		movw r30,r24
 8290 34ac 8081      		ld r24,Z
 8291 34ae 9181      		ldd r25,Z+1
 8292 34b0 B901      		movw r22,r18
 8293 34b2 0E94 0000 		call isActiveLink
 8294 34b6 8823      		tst r24
 8295 34b8 01F0      		breq .L297
 795:lp_solve_5.5/lp_presolve.c ****         presolve_rowremove(psdata, list[i], FALSE);
 8296               		.loc 2 795 0
 8297 34ba 8D81      		ldd r24,Y+5
 8298 34bc 9E81      		ldd r25,Y+6
 8299 34be 880F      		lsl r24
 8300 34c0 991F      		rol r25
 8301 34c2 2985      		ldd r18,Y+9
 8302 34c4 3A85      		ldd r19,Y+10
 8303 34c6 820F      		add r24,r18
 8304 34c8 931F      		adc r25,r19
 8305 34ca FC01      		movw r30,r24
 8306 34cc 2081      		ld r18,Z
 8307 34ce 3181      		ldd r19,Z+1
 8308 34d0 8D89      		ldd r24,Y+21
 8309 34d2 9E89      		ldd r25,Y+22
 8310 34d4 40E0      		ldi r20,0
 8311 34d6 B901      		movw r22,r18
 8312 34d8 0E94 0000 		call presolve_rowremove
 796:lp_solve_5.5/lp_presolve.c ****         countR++;
 8313               		.loc 2 796 0
 8314 34dc 8981      		ldd r24,Y+1
 8315 34de 9A81      		ldd r25,Y+2
 8316 34e0 0196      		adiw r24,1
 8317 34e2 9A83      		std Y+2,r25
 8318 34e4 8983      		std Y+1,r24
 8319               	.L297:
 793:lp_solve_5.5/lp_presolve.c ****       if(isActiveLink(psdata->rows->varmap, list[i])) {
 8320               		.loc 2 793 0 discriminator 2
 8321 34e6 8D81      		ldd r24,Y+5
 8322 34e8 9E81      		ldd r25,Y+6
 8323 34ea 0196      		adiw r24,1
 8324 34ec 9E83      		std Y+6,r25
 8325 34ee 8D83      		std Y+5,r24
 8326               	.L296:
 793:lp_solve_5.5/lp_presolve.c ****       if(isActiveLink(psdata->rows->varmap, list[i])) {
 8327               		.loc 2 793 0 is_stmt 0 discriminator 1
 8328 34f0 2D81      		ldd r18,Y+5
 8329 34f2 3E81      		ldd r19,Y+6
 8330 34f4 8B85      		ldd r24,Y+11
 8331 34f6 9C85      		ldd r25,Y+12
 8332 34f8 8217      		cp r24,r18
 8333 34fa 9307      		cpc r25,r19
 8334 34fc 04F4      		brge .L298
 797:lp_solve_5.5/lp_presolve.c ****       }
 798:lp_solve_5.5/lp_presolve.c ****     if(nConRemove != NULL)
 8335               		.loc 2 798 0 is_stmt 1
 8336 34fe 8F89      		ldd r24,Y+23
 8337 3500 988D      		ldd r25,Y+24
 8338 3502 892B      		or r24,r25
 8339 3504 01F0      		breq .L299
 799:lp_solve_5.5/lp_presolve.c ****       (*nConRemove) += countR;
 8340               		.loc 2 799 0
 8341 3506 8F89      		ldd r24,Y+23
 8342 3508 988D      		ldd r25,Y+24
 8343 350a FC01      		movw r30,r24
 8344 350c 2081      		ld r18,Z
 8345 350e 3181      		ldd r19,Z+1
 8346 3510 8981      		ldd r24,Y+1
 8347 3512 9A81      		ldd r25,Y+2
 8348 3514 280F      		add r18,r24
 8349 3516 391F      		adc r19,r25
 8350 3518 8F89      		ldd r24,Y+23
 8351 351a 988D      		ldd r25,Y+24
 8352 351c FC01      		movw r30,r24
 8353 351e 3183      		std Z+1,r19
 8354 3520 2083      		st Z,r18
 8355               	.L299:
 800:lp_solve_5.5/lp_presolve.c ****     list[0] = 0;
 8356               		.loc 2 800 0
 8357 3522 8985      		ldd r24,Y+9
 8358 3524 9A85      		ldd r25,Y+10
 8359 3526 FC01      		movw r30,r24
 8360 3528 1182      		std Z+1,__zero_reg__
 8361 352a 1082      		st Z,__zero_reg__
 8362               	.L295:
 801:lp_solve_5.5/lp_presolve.c ****   }
 802:lp_solve_5.5/lp_presolve.c **** 
 803:lp_solve_5.5/lp_presolve.c ****   /* Fix and remove empty columns (unless they are in a SOS) */
 804:lp_solve_5.5/lp_presolve.c ****   list = psdata->cols->empty;
 8363               		.loc 2 804 0
 8364 352c 8D89      		ldd r24,Y+21
 8365 352e 9E89      		ldd r25,Y+22
 8366 3530 FC01      		movw r30,r24
 8367 3532 8281      		ldd r24,Z+2
 8368 3534 9381      		ldd r25,Z+3
 8369 3536 FC01      		movw r30,r24
 8370 3538 8481      		ldd r24,Z+4
 8371 353a 9581      		ldd r25,Z+5
 8372 353c 9A87      		std Y+10,r25
 8373 353e 8987      		std Y+9,r24
 805:lp_solve_5.5/lp_presolve.c ****   if(list != NULL) {
 8374               		.loc 2 805 0
 8375 3540 8985      		ldd r24,Y+9
 8376 3542 9A85      		ldd r25,Y+10
 8377 3544 892B      		or r24,r25
 8378 3546 01F4      		brne .+2
 8379 3548 00C0      		rjmp .L300
 806:lp_solve_5.5/lp_presolve.c ****     n = list[0];
 8380               		.loc 2 806 0
 8381 354a 8985      		ldd r24,Y+9
 8382 354c 9A85      		ldd r25,Y+10
 8383 354e FC01      		movw r30,r24
 8384 3550 8081      		ld r24,Z
 8385 3552 9181      		ldd r25,Z+1
 8386 3554 9C87      		std Y+12,r25
 8387 3556 8B87      		std Y+11,r24
 807:lp_solve_5.5/lp_presolve.c ****     for(i = 1; i <= n; i++) {
 8388               		.loc 2 807 0
 8389 3558 81E0      		ldi r24,lo8(1)
 8390 355a 90E0      		ldi r25,0
 8391 355c 9E83      		std Y+6,r25
 8392 355e 8D83      		std Y+5,r24
 8393 3560 00C0      		rjmp .L301
 8394               	.L306:
 808:lp_solve_5.5/lp_presolve.c ****       ix = list[i];
 8395               		.loc 2 808 0
 8396 3562 8D81      		ldd r24,Y+5
 8397 3564 9E81      		ldd r25,Y+6
 8398 3566 880F      		lsl r24
 8399 3568 991F      		rol r25
 8400 356a 2985      		ldd r18,Y+9
 8401 356c 3A85      		ldd r19,Y+10
 8402 356e 820F      		add r24,r18
 8403 3570 931F      		adc r25,r19
 8404 3572 FC01      		movw r30,r24
 8405 3574 8081      		ld r24,Z
 8406 3576 9181      		ldd r25,Z+1
 8407 3578 9E87      		std Y+14,r25
 8408 357a 8D87      		std Y+13,r24
 809:lp_solve_5.5/lp_presolve.c ****       if(isActiveLink(psdata->cols->varmap, ix)) {
 8409               		.loc 2 809 0
 8410 357c 8D89      		ldd r24,Y+21
 8411 357e 9E89      		ldd r25,Y+22
 8412 3580 FC01      		movw r30,r24
 8413 3582 8281      		ldd r24,Z+2
 8414 3584 9381      		ldd r25,Z+3
 8415 3586 FC01      		movw r30,r24
 8416 3588 8081      		ld r24,Z
 8417 358a 9181      		ldd r25,Z+1
 8418 358c 2D85      		ldd r18,Y+13
 8419 358e 3E85      		ldd r19,Y+14
 8420 3590 B901      		movw r22,r18
 8421 3592 0E94 0000 		call isActiveLink
 8422 3596 8823      		tst r24
 8423 3598 01F4      		brne .+2
 8424 359a 00C0      		rjmp .L302
 810:lp_solve_5.5/lp_presolve.c ****         if(presolve_colfixdual(psdata, ix, &fixValue, &status)) {
 8425               		.loc 2 810 0
 8426 359c 9E01      		movw r18,r28
 8427 359e 215F      		subi r18,-15
 8428 35a0 3F4F      		sbci r19,-1
 8429 35a2 AE01      		movw r20,r28
 8430 35a4 4F5E      		subi r20,-17
 8431 35a6 5F4F      		sbci r21,-1
 8432 35a8 6D85      		ldd r22,Y+13
 8433 35aa 7E85      		ldd r23,Y+14
 8434 35ac 8D89      		ldd r24,Y+21
 8435 35ae 9E89      		ldd r25,Y+22
 8436 35b0 0E94 0000 		call presolve_colfixdual
 8437 35b4 8823      		tst r24
 8438 35b6 01F0      		breq .L303
 811:lp_solve_5.5/lp_presolve.c ****           if(!presolve_colfix(psdata, ix, fixValue, TRUE, nVarRemove)) {
 8439               		.loc 2 811 0
 8440 35b8 8989      		ldd r24,Y+17
 8441 35ba 9A89      		ldd r25,Y+18
 8442 35bc AB89      		ldd r26,Y+19
 8443 35be BC89      		ldd r27,Y+20
 8444 35c0 298D      		ldd r18,Y+25
 8445 35c2 3A8D      		ldd r19,Y+26
 8446 35c4 6D85      		ldd r22,Y+13
 8447 35c6 7E85      		ldd r23,Y+14
 8448 35c8 ED89      		ldd r30,Y+21
 8449 35ca FE89      		ldd r31,Y+22
 8450 35cc 7901      		movw r14,r18
 8451 35ce 01E0      		ldi r16,lo8(1)
 8452 35d0 9C01      		movw r18,r24
 8453 35d2 AD01      		movw r20,r26
 8454 35d4 CF01      		movw r24,r30
 8455 35d6 0E94 0000 		call presolve_colfix
 8456 35da 8823      		tst r24
 8457 35dc 01F4      		brne .L304
 812:lp_solve_5.5/lp_presolve.c ****             status = presolve_setstatus(psdata, INFEASIBLE);
 8458               		.loc 2 812 0
 8459 35de 8D89      		ldd r24,Y+21
 8460 35e0 9E89      		ldd r25,Y+22
 8461 35e2 20E0      		ldi r18,lo8(.LC21)
 8462 35e4 30E0      		ldi r19,hi8(.LC21)
 8463 35e6 4CE2      		ldi r20,lo8(44)
 8464 35e8 53E0      		ldi r21,lo8(3)
 8465 35ea 62E0      		ldi r22,lo8(2)
 8466 35ec 70E0      		ldi r23,0
 8467 35ee 0E94 0000 		call presolve_setstatusex
 8468 35f2 988B      		std Y+16,r25
 8469 35f4 8F87      		std Y+15,r24
 813:lp_solve_5.5/lp_presolve.c ****             break;
 8470               		.loc 2 813 0
 8471 35f6 00C0      		rjmp .L305
 8472               	.L304:
 814:lp_solve_5.5/lp_presolve.c ****           }
 815:lp_solve_5.5/lp_presolve.c ****           presolve_colremove(psdata, ix, FALSE);
 8473               		.loc 2 815 0
 8474 35f8 2D85      		ldd r18,Y+13
 8475 35fa 3E85      		ldd r19,Y+14
 8476 35fc 8D89      		ldd r24,Y+21
 8477 35fe 9E89      		ldd r25,Y+22
 8478 3600 40E0      		ldi r20,0
 8479 3602 B901      		movw r22,r18
 8480 3604 0E94 0000 		call presolve_colremove
 816:lp_solve_5.5/lp_presolve.c ****           countC++;
 8481               		.loc 2 816 0
 8482 3608 8B81      		ldd r24,Y+3
 8483 360a 9C81      		ldd r25,Y+4
 8484 360c 0196      		adiw r24,1
 8485 360e 9C83      		std Y+4,r25
 8486 3610 8B83      		std Y+3,r24
 8487 3612 00C0      		rjmp .L302
 8488               	.L303:
 817:lp_solve_5.5/lp_presolve.c ****         }
 818:lp_solve_5.5/lp_presolve.c ****         else if(SOS_is_member(SOS, 0, ix))
 8489               		.loc 2 818 0
 8490 3614 2D85      		ldd r18,Y+13
 8491 3616 3E85      		ldd r19,Y+14
 8492 3618 8F81      		ldd r24,Y+7
 8493 361a 9885      		ldd r25,Y+8
 8494 361c A901      		movw r20,r18
 8495 361e 60E0      		ldi r22,0
 8496 3620 70E0      		ldi r23,0
 8497 3622 0E94 0000 		call SOS_is_member
 8498 3626 892B      		or r24,r25
 8499 3628 01F0      		breq .L302
 819:lp_solve_5.5/lp_presolve.c ****           report(psdata->lp, DETAILED, "presolve_shrink: Empty column %d is member of a SOS\n", ix)
 8500               		.loc 2 819 0
 8501 362a 8D89      		ldd r24,Y+21
 8502 362c 9E89      		ldd r25,Y+22
 8503 362e FC01      		movw r30,r24
 8504 3630 8289      		ldd r24,Z+18
 8505 3632 9389      		ldd r25,Z+19
 8506 3634 2E85      		ldd r18,Y+14
 8507 3636 2F93      		push r18
 8508 3638 2D85      		ldd r18,Y+13
 8509 363a 2F93      		push r18
 8510 363c 20E0      		ldi r18,lo8(.LC22)
 8511 363e 30E0      		ldi r19,hi8(.LC22)
 8512 3640 232F      		mov r18,r19
 8513 3642 2F93      		push r18
 8514 3644 20E0      		ldi r18,lo8(.LC22)
 8515 3646 30E0      		ldi r19,hi8(.LC22)
 8516 3648 2F93      		push r18
 8517 364a 1F92      		push __zero_reg__
 8518 364c 25E0      		ldi r18,lo8(5)
 8519 364e 2F93      		push r18
 8520 3650 292F      		mov r18,r25
 8521 3652 2F93      		push r18
 8522 3654 8F93      		push r24
 8523 3656 0E94 0000 		call report
 8524 365a 8DB7      		in r24,__SP_L__
 8525 365c 9EB7      		in r25,__SP_H__
 8526 365e 0896      		adiw r24,8
 8527 3660 0FB6      		in __tmp_reg__,__SREG__
 8528 3662 F894      		cli
 8529 3664 DEBF      		out __SP_H__,r29
 8530 3666 0FBE      		out __SREG__,__tmp_reg__
 8531 3668 CDBF      		out __SP_L__,r28
 8532               	.L302:
 807:lp_solve_5.5/lp_presolve.c ****       ix = list[i];
 8533               		.loc 2 807 0 discriminator 2
 8534 366a 8D81      		ldd r24,Y+5
 8535 366c 9E81      		ldd r25,Y+6
 8536 366e 0196      		adiw r24,1
 8537 3670 9E83      		std Y+6,r25
 8538 3672 8D83      		std Y+5,r24
 8539               	.L301:
 807:lp_solve_5.5/lp_presolve.c ****       ix = list[i];
 8540               		.loc 2 807 0 is_stmt 0 discriminator 1
 8541 3674 2D81      		ldd r18,Y+5
 8542 3676 3E81      		ldd r19,Y+6
 8543 3678 8B85      		ldd r24,Y+11
 8544 367a 9C85      		ldd r25,Y+12
 8545 367c 8217      		cp r24,r18
 8546 367e 9307      		cpc r25,r19
 8547 3680 04F0      		brlt .+2
 8548 3682 00C0      		rjmp .L306
 8549               	.L305:
 820:lp_solve_5.5/lp_presolve.c ****       }
 821:lp_solve_5.5/lp_presolve.c ****     }
 822:lp_solve_5.5/lp_presolve.c ****     list[0] = 0;
 8550               		.loc 2 822 0 is_stmt 1
 8551 3684 8985      		ldd r24,Y+9
 8552 3686 9A85      		ldd r25,Y+10
 8553 3688 FC01      		movw r30,r24
 8554 368a 1182      		std Z+1,__zero_reg__
 8555 368c 1082      		st Z,__zero_reg__
 8556               	.L300:
 823:lp_solve_5.5/lp_presolve.c ****   }
 824:lp_solve_5.5/lp_presolve.c **** 
 825:lp_solve_5.5/lp_presolve.c ****   return( status );
 8557               		.loc 2 825 0
 8558 368e 8F85      		ldd r24,Y+15
 8559 3690 9889      		ldd r25,Y+16
 8560               	/* epilogue start */
 826:lp_solve_5.5/lp_presolve.c **** }
 8561               		.loc 2 826 0
 8562 3692 6A96      		adiw r28,26
 8563 3694 0FB6      		in __tmp_reg__,__SREG__
 8564 3696 F894      		cli
 8565 3698 DEBF      		out __SP_H__,r29
 8566 369a 0FBE      		out __SREG__,__tmp_reg__
 8567 369c CDBF      		out __SP_L__,r28
 8568 369e DF91      		pop r29
 8569 36a0 CF91      		pop r28
 8570 36a2 0F91      		pop r16
 8571 36a4 FF90      		pop r15
 8572 36a6 EF90      		pop r14
 8573 36a8 0895      		ret
 8574               		.cfi_endproc
 8575               	.LFE40:
 8577               	.global	presolve_rowremove
 8579               	presolve_rowremove:
 8580               	.LFB41:
 827:lp_solve_5.5/lp_presolve.c **** 
 828:lp_solve_5.5/lp_presolve.c **** STATIC void presolve_rowremove(presolverec *psdata, int rownr, MYBOOL allowcoldelete)
 829:lp_solve_5.5/lp_presolve.c **** {
 8581               		.loc 2 829 0
 8582               		.cfi_startproc
 8583 36aa CF93      		push r28
 8584               	.LCFI171:
 8585               		.cfi_def_cfa_offset 3
 8586               		.cfi_offset 28, -2
 8587 36ac DF93      		push r29
 8588               	.LCFI172:
 8589               		.cfi_def_cfa_offset 4
 8590               		.cfi_offset 29, -3
 8591 36ae CDB7      		in r28,__SP_L__
 8592 36b0 DEB7      		in r29,__SP_H__
 8593               	.LCFI173:
 8594               		.cfi_def_cfa_register 28
 8595 36b2 6D97      		sbiw r28,29
 8596               	.LCFI174:
 8597               		.cfi_def_cfa_offset 33
 8598 36b4 0FB6      		in __tmp_reg__,__SREG__
 8599 36b6 F894      		cli
 8600 36b8 DEBF      		out __SP_H__,r29
 8601 36ba 0FBE      		out __SREG__,__tmp_reg__
 8602 36bc CDBF      		out __SP_L__,r28
 8603               	/* prologue: function */
 8604               	/* frame size = 29 */
 8605               	/* stack size = 31 */
 8606               	.L__stack_usage = 31
 8607 36be 9A8F      		std Y+26,r25
 8608 36c0 898F      		std Y+25,r24
 8609 36c2 7C8F      		std Y+28,r23
 8610 36c4 6B8F      		std Y+27,r22
 8611 36c6 4D8F      		std Y+29,r20
 830:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 8612               		.loc 2 830 0
 8613 36c8 898D      		ldd r24,Y+25
 8614 36ca 9A8D      		ldd r25,Y+26
 8615 36cc FC01      		movw r30,r24
 8616 36ce 8289      		ldd r24,Z+18
 8617 36d0 9389      		ldd r25,Z+19
 8618 36d2 9A87      		std Y+10,r25
 8619 36d4 8987      		std Y+9,r24
 831:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 8620               		.loc 2 831 0
 8621 36d6 8985      		ldd r24,Y+9
 8622 36d8 9A85      		ldd r25,Y+10
 8623 36da 8A54      		subi r24,74
 8624 36dc 9D4F      		sbci r25,-3
 8625 36de FC01      		movw r30,r24
 8626 36e0 8081      		ld r24,Z
 8627 36e2 9181      		ldd r25,Z+1
 8628 36e4 9C87      		std Y+12,r25
 8629 36e6 8B87      		std Y+11,r24
 832:lp_solve_5.5/lp_presolve.c ****   int      ix, ie, nx, jx, je, *cols, *rows, n, colnr;
 833:lp_solve_5.5/lp_presolve.c **** 
 834:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
 835:lp_solve_5.5/lp_presolve.c ****   if((rownr < 1) || (rownr > lp->rows))
 836:lp_solve_5.5/lp_presolve.c ****     report(lp, SEVERE, "presolve_rowremove: Row %d out of range\n", rownr);
 837:lp_solve_5.5/lp_presolve.c **** #endif
 838:lp_solve_5.5/lp_presolve.c **** 
 839:lp_solve_5.5/lp_presolve.c ****   /* Remove this row for each column that is active in the row */
 840:lp_solve_5.5/lp_presolve.c ****   cols = psdata->rows->next[rownr];
 8630               		.loc 2 840 0
 8631 36e8 898D      		ldd r24,Y+25
 8632 36ea 9A8D      		ldd r25,Y+26
 8633 36ec FC01      		movw r30,r24
 8634 36ee 8081      		ld r24,Z
 8635 36f0 9181      		ldd r25,Z+1
 8636 36f2 FC01      		movw r30,r24
 8637 36f4 2281      		ldd r18,Z+2
 8638 36f6 3381      		ldd r19,Z+3
 8639 36f8 8B8D      		ldd r24,Y+27
 8640 36fa 9C8D      		ldd r25,Y+28
 8641 36fc 880F      		lsl r24
 8642 36fe 991F      		rol r25
 8643 3700 820F      		add r24,r18
 8644 3702 931F      		adc r25,r19
 8645 3704 FC01      		movw r30,r24
 8646 3706 8081      		ld r24,Z
 8647 3708 9181      		ldd r25,Z+1
 8648 370a 9E83      		std Y+6,r25
 8649 370c 8D83      		std Y+5,r24
 841:lp_solve_5.5/lp_presolve.c ****   ie = *cols;
 8650               		.loc 2 841 0
 8651 370e 8D81      		ldd r24,Y+5
 8652 3710 9E81      		ldd r25,Y+6
 8653 3712 FC01      		movw r30,r24
 8654 3714 8081      		ld r24,Z
 8655 3716 9181      		ldd r25,Z+1
 8656 3718 9E87      		std Y+14,r25
 8657 371a 8D87      		std Y+13,r24
 842:lp_solve_5.5/lp_presolve.c ****   cols++;
 8658               		.loc 2 842 0
 8659 371c 8D81      		ldd r24,Y+5
 8660 371e 9E81      		ldd r25,Y+6
 8661 3720 0296      		adiw r24,2
 8662 3722 9E83      		std Y+6,r25
 8663 3724 8D83      		std Y+5,r24
 843:lp_solve_5.5/lp_presolve.c ****   for(ix = 1; ix <= ie; ix++, cols++) {
 8664               		.loc 2 843 0
 8665 3726 81E0      		ldi r24,lo8(1)
 8666 3728 90E0      		ldi r25,0
 8667 372a 9A83      		std Y+2,r25
 8668 372c 8983      		std Y+1,r24
 8669 372e 00C0      		rjmp .L309
 8670               	.L317:
 844:lp_solve_5.5/lp_presolve.c ****     n = 0;
 8671               		.loc 2 844 0
 8672 3730 1886      		std Y+8,__zero_reg__
 8673 3732 1F82      		std Y+7,__zero_reg__
 845:lp_solve_5.5/lp_presolve.c ****     colnr = ROW_MAT_COLNR(*cols);
 8674               		.loc 2 845 0
 8675 3734 8B85      		ldd r24,Y+11
 8676 3736 9C85      		ldd r25,Y+12
 8677 3738 FC01      		movw r30,r24
 8678 373a 2485      		ldd r18,Z+12
 8679 373c 3585      		ldd r19,Z+13
 8680 373e 8B85      		ldd r24,Y+11
 8681 3740 9C85      		ldd r25,Y+12
 8682 3742 FC01      		movw r30,r24
 8683 3744 4689      		ldd r20,Z+22
 8684 3746 5789      		ldd r21,Z+23
 8685 3748 8D81      		ldd r24,Y+5
 8686 374a 9E81      		ldd r25,Y+6
 8687 374c FC01      		movw r30,r24
 8688 374e 8081      		ld r24,Z
 8689 3750 9181      		ldd r25,Z+1
 8690 3752 880F      		lsl r24
 8691 3754 991F      		rol r25
 8692 3756 840F      		add r24,r20
 8693 3758 951F      		adc r25,r21
 8694 375a FC01      		movw r30,r24
 8695 375c 8081      		ld r24,Z
 8696 375e 9181      		ldd r25,Z+1
 8697 3760 880F      		lsl r24
 8698 3762 991F      		rol r25
 8699 3764 820F      		add r24,r18
 8700 3766 931F      		adc r25,r19
 8701 3768 FC01      		movw r30,r24
 8702 376a 8081      		ld r24,Z
 8703 376c 9181      		ldd r25,Z+1
 8704 376e 988B      		std Y+16,r25
 8705 3770 8F87      		std Y+15,r24
 846:lp_solve_5.5/lp_presolve.c ****     rows = psdata->cols->next[colnr];
 8706               		.loc 2 846 0
 8707 3772 898D      		ldd r24,Y+25
 8708 3774 9A8D      		ldd r25,Y+26
 8709 3776 FC01      		movw r30,r24
 8710 3778 8281      		ldd r24,Z+2
 8711 377a 9381      		ldd r25,Z+3
 8712 377c FC01      		movw r30,r24
 8713 377e 2281      		ldd r18,Z+2
 8714 3780 3381      		ldd r19,Z+3
 8715 3782 8F85      		ldd r24,Y+15
 8716 3784 9889      		ldd r25,Y+16
 8717 3786 880F      		lsl r24
 8718 3788 991F      		rol r25
 8719 378a 820F      		add r24,r18
 8720 378c 931F      		adc r25,r19
 8721 378e FC01      		movw r30,r24
 8722 3790 8081      		ld r24,Z
 8723 3792 9181      		ldd r25,Z+1
 8724 3794 9A8B      		std Y+18,r25
 8725 3796 898B      		std Y+17,r24
 847:lp_solve_5.5/lp_presolve.c ****     je = rows[0];
 8726               		.loc 2 847 0
 8727 3798 8989      		ldd r24,Y+17
 8728 379a 9A89      		ldd r25,Y+18
 8729 379c FC01      		movw r30,r24
 8730 379e 8081      		ld r24,Z
 8731 37a0 9181      		ldd r25,Z+1
 8732 37a2 9C8B      		std Y+20,r25
 8733 37a4 8B8B      		std Y+19,r24
 848:lp_solve_5.5/lp_presolve.c ****     /* See if we can narrow the search window */
 849:lp_solve_5.5/lp_presolve.c ****     jx = je / 2;
 8734               		.loc 2 849 0
 8735 37a6 8B89      		ldd r24,Y+19
 8736 37a8 9C89      		ldd r25,Y+20
 8737 37aa 9923      		tst r25
 8738 37ac 04F4      		brge .L310
 8739 37ae 0196      		adiw r24,1
 8740               	.L310:
 8741 37b0 9595      		asr r25
 8742 37b2 8795      		ror r24
 8743 37b4 9C83      		std Y+4,r25
 8744 37b6 8B83      		std Y+3,r24
 850:lp_solve_5.5/lp_presolve.c ****     if((jx > 5) && (rownr >= COL_MAT_ROWNR(rows[jx])))
 8745               		.loc 2 850 0
 8746 37b8 8B81      		ldd r24,Y+3
 8747 37ba 9C81      		ldd r25,Y+4
 8748 37bc 0697      		sbiw r24,6
 8749 37be 04F0      		brlt .L311
 8750               		.loc 2 850 0 is_stmt 0 discriminator 1
 8751 37c0 8B85      		ldd r24,Y+11
 8752 37c2 9C85      		ldd r25,Y+12
 8753 37c4 FC01      		movw r30,r24
 8754 37c6 2685      		ldd r18,Z+14
 8755 37c8 3785      		ldd r19,Z+15
 8756 37ca 8B81      		ldd r24,Y+3
 8757 37cc 9C81      		ldd r25,Y+4
 8758 37ce 880F      		lsl r24
 8759 37d0 991F      		rol r25
 8760 37d2 4989      		ldd r20,Y+17
 8761 37d4 5A89      		ldd r21,Y+18
 8762 37d6 840F      		add r24,r20
 8763 37d8 951F      		adc r25,r21
 8764 37da FC01      		movw r30,r24
 8765 37dc 8081      		ld r24,Z
 8766 37de 9181      		ldd r25,Z+1
 8767 37e0 880F      		lsl r24
 8768 37e2 991F      		rol r25
 8769 37e4 820F      		add r24,r18
 8770 37e6 931F      		adc r25,r19
 8771 37e8 FC01      		movw r30,r24
 8772 37ea 2081      		ld r18,Z
 8773 37ec 3181      		ldd r19,Z+1
 8774 37ee 8B8D      		ldd r24,Y+27
 8775 37f0 9C8D      		ldd r25,Y+28
 8776 37f2 8217      		cp r24,r18
 8777 37f4 9307      		cpc r25,r19
 8778 37f6 04F0      		brlt .L311
 851:lp_solve_5.5/lp_presolve.c ****       n = jx-1;
 8779               		.loc 2 851 0 is_stmt 1
 8780 37f8 8B81      		ldd r24,Y+3
 8781 37fa 9C81      		ldd r25,Y+4
 8782 37fc 0197      		sbiw r24,1
 8783 37fe 9887      		std Y+8,r25
 8784 3800 8F83      		std Y+7,r24
 8785 3802 00C0      		rjmp .L312
 8786               	.L311:
 852:lp_solve_5.5/lp_presolve.c ****     else
 853:lp_solve_5.5/lp_presolve.c ****       jx = 1;
 8787               		.loc 2 853 0
 8788 3804 81E0      		ldi r24,lo8(1)
 8789 3806 90E0      		ldi r25,0
 8790 3808 9C83      		std Y+4,r25
 8791 380a 8B83      		std Y+3,r24
 8792               	.L312:
 854:lp_solve_5.5/lp_presolve.c ****     /* Do the compression loop */
 855:lp_solve_5.5/lp_presolve.c ****     for(; jx <= je; jx++) {
 8793               		.loc 2 855 0
 8794 380c 00C0      		rjmp .L313
 8795               	.L315:
 856:lp_solve_5.5/lp_presolve.c ****       nx = rows[jx];
 8796               		.loc 2 856 0
 8797 380e 8B81      		ldd r24,Y+3
 8798 3810 9C81      		ldd r25,Y+4
 8799 3812 880F      		lsl r24
 8800 3814 991F      		rol r25
 8801 3816 2989      		ldd r18,Y+17
 8802 3818 3A89      		ldd r19,Y+18
 8803 381a 820F      		add r24,r18
 8804 381c 931F      		adc r25,r19
 8805 381e FC01      		movw r30,r24
 8806 3820 8081      		ld r24,Z
 8807 3822 9181      		ldd r25,Z+1
 8808 3824 9E8B      		std Y+22,r25
 8809 3826 8D8B      		std Y+21,r24
 857:lp_solve_5.5/lp_presolve.c ****       if(COL_MAT_ROWNR(nx) != rownr) {
 8810               		.loc 2 857 0
 8811 3828 8B85      		ldd r24,Y+11
 8812 382a 9C85      		ldd r25,Y+12
 8813 382c FC01      		movw r30,r24
 8814 382e 2685      		ldd r18,Z+14
 8815 3830 3785      		ldd r19,Z+15
 8816 3832 8D89      		ldd r24,Y+21
 8817 3834 9E89      		ldd r25,Y+22
 8818 3836 880F      		lsl r24
 8819 3838 991F      		rol r25
 8820 383a 820F      		add r24,r18
 8821 383c 931F      		adc r25,r19
 8822 383e FC01      		movw r30,r24
 8823 3840 2081      		ld r18,Z
 8824 3842 3181      		ldd r19,Z+1
 8825 3844 8B8D      		ldd r24,Y+27
 8826 3846 9C8D      		ldd r25,Y+28
 8827 3848 2817      		cp r18,r24
 8828 384a 3907      		cpc r19,r25
 8829 384c 01F0      		breq .L314
 858:lp_solve_5.5/lp_presolve.c ****         n++;
 8830               		.loc 2 858 0
 8831 384e 8F81      		ldd r24,Y+7
 8832 3850 9885      		ldd r25,Y+8
 8833 3852 0196      		adiw r24,1
 8834 3854 9887      		std Y+8,r25
 8835 3856 8F83      		std Y+7,r24
 859:lp_solve_5.5/lp_presolve.c ****         rows[n] = nx;
 8836               		.loc 2 859 0
 8837 3858 8F81      		ldd r24,Y+7
 8838 385a 9885      		ldd r25,Y+8
 8839 385c 880F      		lsl r24
 8840 385e 991F      		rol r25
 8841 3860 2989      		ldd r18,Y+17
 8842 3862 3A89      		ldd r19,Y+18
 8843 3864 820F      		add r24,r18
 8844 3866 931F      		adc r25,r19
 8845 3868 2D89      		ldd r18,Y+21
 8846 386a 3E89      		ldd r19,Y+22
 8847 386c FC01      		movw r30,r24
 8848 386e 3183      		std Z+1,r19
 8849 3870 2083      		st Z,r18
 8850               	.L314:
 855:lp_solve_5.5/lp_presolve.c ****       nx = rows[jx];
 8851               		.loc 2 855 0
 8852 3872 8B81      		ldd r24,Y+3
 8853 3874 9C81      		ldd r25,Y+4
 8854 3876 0196      		adiw r24,1
 8855 3878 9C83      		std Y+4,r25
 8856 387a 8B83      		std Y+3,r24
 8857               	.L313:
 855:lp_solve_5.5/lp_presolve.c ****       nx = rows[jx];
 8858               		.loc 2 855 0 is_stmt 0 discriminator 1
 8859 387c 2B81      		ldd r18,Y+3
 8860 387e 3C81      		ldd r19,Y+4
 8861 3880 8B89      		ldd r24,Y+19
 8862 3882 9C89      		ldd r25,Y+20
 8863 3884 8217      		cp r24,r18
 8864 3886 9307      		cpc r25,r19
 8865 3888 04F4      		brge .L315
 860:lp_solve_5.5/lp_presolve.c ****       }
 861:lp_solve_5.5/lp_presolve.c ****     }
 862:lp_solve_5.5/lp_presolve.c ****     rows[0] = n;
 8866               		.loc 2 862 0 is_stmt 1
 8867 388a 8989      		ldd r24,Y+17
 8868 388c 9A89      		ldd r25,Y+18
 8869 388e 2F81      		ldd r18,Y+7
 8870 3890 3885      		ldd r19,Y+8
 8871 3892 FC01      		movw r30,r24
 8872 3894 3183      		std Z+1,r19
 8873 3896 2083      		st Z,r18
 863:lp_solve_5.5/lp_presolve.c **** 
 864:lp_solve_5.5/lp_presolve.c ****     /* Make sure we delete columns that have become empty */
 865:lp_solve_5.5/lp_presolve.c **** #if 1
 866:lp_solve_5.5/lp_presolve.c ****     if((n == 0) && allowcoldelete) {
 8874               		.loc 2 866 0
 8875 3898 8F81      		ldd r24,Y+7
 8876 389a 9885      		ldd r25,Y+8
 8877 389c 892B      		or r24,r25
 8878 389e 01F4      		brne .L316
 8879               		.loc 2 866 0 is_stmt 0 discriminator 1
 8880 38a0 8D8D      		ldd r24,Y+29
 8881 38a2 8823      		tst r24
 8882 38a4 01F0      		breq .L316
 8883               	.LBB3:
 867:lp_solve_5.5/lp_presolve.c ****       int *list = psdata->cols->empty;
 8884               		.loc 2 867 0 is_stmt 1
 8885 38a6 898D      		ldd r24,Y+25
 8886 38a8 9A8D      		ldd r25,Y+26
 8887 38aa FC01      		movw r30,r24
 8888 38ac 8281      		ldd r24,Z+2
 8889 38ae 9381      		ldd r25,Z+3
 8890 38b0 FC01      		movw r30,r24
 8891 38b2 8481      		ldd r24,Z+4
 8892 38b4 9581      		ldd r25,Z+5
 8893 38b6 988F      		std Y+24,r25
 8894 38b8 8F8B      		std Y+23,r24
 868:lp_solve_5.5/lp_presolve.c ****       n = ++list[0];
 8895               		.loc 2 868 0
 8896 38ba 8F89      		ldd r24,Y+23
 8897 38bc 988D      		ldd r25,Y+24
 8898 38be FC01      		movw r30,r24
 8899 38c0 8081      		ld r24,Z
 8900 38c2 9181      		ldd r25,Z+1
 8901 38c4 9C01      		movw r18,r24
 8902 38c6 2F5F      		subi r18,-1
 8903 38c8 3F4F      		sbci r19,-1
 8904 38ca 8F89      		ldd r24,Y+23
 8905 38cc 988D      		ldd r25,Y+24
 8906 38ce FC01      		movw r30,r24
 8907 38d0 3183      		std Z+1,r19
 8908 38d2 2083      		st Z,r18
 8909 38d4 8F89      		ldd r24,Y+23
 8910 38d6 988D      		ldd r25,Y+24
 8911 38d8 FC01      		movw r30,r24
 8912 38da 8081      		ld r24,Z
 8913 38dc 9181      		ldd r25,Z+1
 8914 38de 9887      		std Y+8,r25
 8915 38e0 8F83      		std Y+7,r24
 869:lp_solve_5.5/lp_presolve.c ****       list[n] = colnr;
 8916               		.loc 2 869 0
 8917 38e2 8F81      		ldd r24,Y+7
 8918 38e4 9885      		ldd r25,Y+8
 8919 38e6 880F      		lsl r24
 8920 38e8 991F      		rol r25
 8921 38ea 2F89      		ldd r18,Y+23
 8922 38ec 388D      		ldd r19,Y+24
 8923 38ee 820F      		add r24,r18
 8924 38f0 931F      		adc r25,r19
 8925 38f2 2F85      		ldd r18,Y+15
 8926 38f4 3889      		ldd r19,Y+16
 8927 38f6 FC01      		movw r30,r24
 8928 38f8 3183      		std Z+1,r19
 8929 38fa 2083      		st Z,r18
 8930               	.L316:
 8931               	.LBE3:
 843:lp_solve_5.5/lp_presolve.c ****     n = 0;
 8932               		.loc 2 843 0 discriminator 2
 8933 38fc 8981      		ldd r24,Y+1
 8934 38fe 9A81      		ldd r25,Y+2
 8935 3900 0196      		adiw r24,1
 8936 3902 9A83      		std Y+2,r25
 8937 3904 8983      		std Y+1,r24
 8938 3906 8D81      		ldd r24,Y+5
 8939 3908 9E81      		ldd r25,Y+6
 8940 390a 0296      		adiw r24,2
 8941 390c 9E83      		std Y+6,r25
 8942 390e 8D83      		std Y+5,r24
 8943               	.L309:
 843:lp_solve_5.5/lp_presolve.c ****     n = 0;
 8944               		.loc 2 843 0 is_stmt 0 discriminator 1
 8945 3910 2981      		ldd r18,Y+1
 8946 3912 3A81      		ldd r19,Y+2
 8947 3914 8D85      		ldd r24,Y+13
 8948 3916 9E85      		ldd r25,Y+14
 8949 3918 8217      		cp r24,r18
 8950 391a 9307      		cpc r25,r19
 8951 391c 04F0      		brlt .+2
 8952 391e 00C0      		rjmp .L317
 870:lp_solve_5.5/lp_presolve.c ****     }
 871:lp_solve_5.5/lp_presolve.c **** #endif
 872:lp_solve_5.5/lp_presolve.c **** 
 873:lp_solve_5.5/lp_presolve.c ****   }
 874:lp_solve_5.5/lp_presolve.c ****   FREE(psdata->rows->next[rownr]);
 8953               		.loc 2 874 0 is_stmt 1
 8954 3920 898D      		ldd r24,Y+25
 8955 3922 9A8D      		ldd r25,Y+26
 8956 3924 FC01      		movw r30,r24
 8957 3926 8081      		ld r24,Z
 8958 3928 9181      		ldd r25,Z+1
 8959 392a FC01      		movw r30,r24
 8960 392c 2281      		ldd r18,Z+2
 8961 392e 3381      		ldd r19,Z+3
 8962 3930 8B8D      		ldd r24,Y+27
 8963 3932 9C8D      		ldd r25,Y+28
 8964 3934 880F      		lsl r24
 8965 3936 991F      		rol r25
 8966 3938 820F      		add r24,r18
 8967 393a 931F      		adc r25,r19
 8968 393c FC01      		movw r30,r24
 8969 393e 8081      		ld r24,Z
 8970 3940 9181      		ldd r25,Z+1
 8971 3942 892B      		or r24,r25
 8972 3944 01F0      		breq .L318
 8973               		.loc 2 874 0 is_stmt 0 discriminator 1
 8974 3946 898D      		ldd r24,Y+25
 8975 3948 9A8D      		ldd r25,Y+26
 8976 394a FC01      		movw r30,r24
 8977 394c 8081      		ld r24,Z
 8978 394e 9181      		ldd r25,Z+1
 8979 3950 FC01      		movw r30,r24
 8980 3952 2281      		ldd r18,Z+2
 8981 3954 3381      		ldd r19,Z+3
 8982 3956 8B8D      		ldd r24,Y+27
 8983 3958 9C8D      		ldd r25,Y+28
 8984 395a 880F      		lsl r24
 8985 395c 991F      		rol r25
 8986 395e 820F      		add r24,r18
 8987 3960 931F      		adc r25,r19
 8988 3962 FC01      		movw r30,r24
 8989 3964 8081      		ld r24,Z
 8990 3966 9181      		ldd r25,Z+1
 8991 3968 0E94 0000 		call free
 8992 396c 898D      		ldd r24,Y+25
 8993 396e 9A8D      		ldd r25,Y+26
 8994 3970 FC01      		movw r30,r24
 8995 3972 8081      		ld r24,Z
 8996 3974 9181      		ldd r25,Z+1
 8997 3976 FC01      		movw r30,r24
 8998 3978 2281      		ldd r18,Z+2
 8999 397a 3381      		ldd r19,Z+3
 9000 397c 8B8D      		ldd r24,Y+27
 9001 397e 9C8D      		ldd r25,Y+28
 9002 3980 880F      		lsl r24
 9003 3982 991F      		rol r25
 9004 3984 820F      		add r24,r18
 9005 3986 931F      		adc r25,r19
 9006 3988 FC01      		movw r30,r24
 9007 398a 1182      		std Z+1,__zero_reg__
 9008 398c 1082      		st Z,__zero_reg__
 9009               	.L318:
 875:lp_solve_5.5/lp_presolve.c **** 
 876:lp_solve_5.5/lp_presolve.c ****   removeLink(psdata->rows->varmap, rownr);
 9010               		.loc 2 876 0 is_stmt 1
 9011 398e 898D      		ldd r24,Y+25
 9012 3990 9A8D      		ldd r25,Y+26
 9013 3992 FC01      		movw r30,r24
 9014 3994 8081      		ld r24,Z
 9015 3996 9181      		ldd r25,Z+1
 9016 3998 FC01      		movw r30,r24
 9017 399a 8081      		ld r24,Z
 9018 399c 9181      		ldd r25,Z+1
 9019 399e 2B8D      		ldd r18,Y+27
 9020 39a0 3C8D      		ldd r19,Y+28
 9021 39a2 B901      		movw r22,r18
 9022 39a4 0E94 0000 		call removeLink
 877:lp_solve_5.5/lp_presolve.c ****   switch(get_constr_type(lp, rownr)) {
 9023               		.loc 2 877 0
 9024 39a8 2B8D      		ldd r18,Y+27
 9025 39aa 3C8D      		ldd r19,Y+28
 9026 39ac 8985      		ldd r24,Y+9
 9027 39ae 9A85      		ldd r25,Y+10
 9028 39b0 B901      		movw r22,r18
 9029 39b2 0E94 0000 		call get_constr_type
 9030 39b6 8130      		cpi r24,1
 9031 39b8 9105      		cpc r25,__zero_reg__
 9032 39ba 01F0      		breq .L320
 9033 39bc 0397      		sbiw r24,3
 9034 39be 01F0      		breq .L321
 9035 39c0 00C0      		rjmp .L319
 9036               	.L320:
 878:lp_solve_5.5/lp_presolve.c ****     case LE: removeLink(psdata->LTmap, rownr);
 9037               		.loc 2 878 0
 9038 39c2 898D      		ldd r24,Y+25
 9039 39c4 9A8D      		ldd r25,Y+26
 9040 39c6 FC01      		movw r30,r24
 9041 39c8 8681      		ldd r24,Z+6
 9042 39ca 9781      		ldd r25,Z+7
 9043 39cc 2B8D      		ldd r18,Y+27
 9044 39ce 3C8D      		ldd r19,Y+28
 9045 39d0 B901      		movw r22,r18
 9046 39d2 0E94 0000 		call removeLink
 879:lp_solve_5.5/lp_presolve.c ****               break;
 9047               		.loc 2 879 0
 9048 39d6 00C0      		rjmp .L319
 9049               	.L321:
 880:lp_solve_5.5/lp_presolve.c ****     case EQ: removeLink(psdata->EQmap, rownr);
 9050               		.loc 2 880 0
 9051 39d8 898D      		ldd r24,Y+25
 9052 39da 9A8D      		ldd r25,Y+26
 9053 39dc FC01      		movw r30,r24
 9054 39de 8481      		ldd r24,Z+4
 9055 39e0 9581      		ldd r25,Z+5
 9056 39e2 2B8D      		ldd r18,Y+27
 9057 39e4 3C8D      		ldd r19,Y+28
 9058 39e6 B901      		movw r22,r18
 9059 39e8 0E94 0000 		call removeLink
 881:lp_solve_5.5/lp_presolve.c ****               break;
 9060               		.loc 2 881 0
 9061 39ec 0000      		nop
 9062               	.L319:
 882:lp_solve_5.5/lp_presolve.c ****   }
 883:lp_solve_5.5/lp_presolve.c ****   if(isActiveLink(psdata->INTmap, rownr))
 9063               		.loc 2 883 0
 9064 39ee 898D      		ldd r24,Y+25
 9065 39f0 9A8D      		ldd r25,Y+26
 9066 39f2 FC01      		movw r30,r24
 9067 39f4 8085      		ldd r24,Z+8
 9068 39f6 9185      		ldd r25,Z+9
 9069 39f8 2B8D      		ldd r18,Y+27
 9070 39fa 3C8D      		ldd r19,Y+28
 9071 39fc B901      		movw r22,r18
 9072 39fe 0E94 0000 		call isActiveLink
 9073 3a02 8823      		tst r24
 9074 3a04 01F0      		breq .L323
 884:lp_solve_5.5/lp_presolve.c ****     removeLink(psdata->INTmap, rownr);
 9075               		.loc 2 884 0
 9076 3a06 898D      		ldd r24,Y+25
 9077 3a08 9A8D      		ldd r25,Y+26
 9078 3a0a FC01      		movw r30,r24
 9079 3a0c 8085      		ldd r24,Z+8
 9080 3a0e 9185      		ldd r25,Z+9
 9081 3a10 2B8D      		ldd r18,Y+27
 9082 3a12 3C8D      		ldd r19,Y+28
 9083 3a14 B901      		movw r22,r18
 9084 3a16 0E94 0000 		call removeLink
 9085               	.L323:
 885:lp_solve_5.5/lp_presolve.c **** }
 9086               		.loc 2 885 0
 9087 3a1a 0000      		nop
 9088               	/* epilogue start */
 9089 3a1c 6D96      		adiw r28,29
 9090 3a1e 0FB6      		in __tmp_reg__,__SREG__
 9091 3a20 F894      		cli
 9092 3a22 DEBF      		out __SP_H__,r29
 9093 3a24 0FBE      		out __SREG__,__tmp_reg__
 9094 3a26 CDBF      		out __SP_L__,r28
 9095 3a28 DF91      		pop r29
 9096 3a2a CF91      		pop r28
 9097 3a2c 0895      		ret
 9098               		.cfi_endproc
 9099               	.LFE41:
 9101               	.global	presolve_colremove
 9103               	presolve_colremove:
 9104               	.LFB42:
 886:lp_solve_5.5/lp_presolve.c **** 
 887:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_colremove(presolverec *psdata, int colnr, MYBOOL allowrowdelete)
 888:lp_solve_5.5/lp_presolve.c **** {
 9105               		.loc 2 888 0
 9106               		.cfi_startproc
 9107 3a2e CF93      		push r28
 9108               	.LCFI175:
 9109               		.cfi_def_cfa_offset 3
 9110               		.cfi_offset 28, -2
 9111 3a30 DF93      		push r29
 9112               	.LCFI176:
 9113               		.cfi_def_cfa_offset 4
 9114               		.cfi_offset 29, -3
 9115 3a32 CDB7      		in r28,__SP_L__
 9116 3a34 DEB7      		in r29,__SP_H__
 9117               	.LCFI177:
 9118               		.cfi_def_cfa_register 28
 9119 3a36 6D97      		sbiw r28,29
 9120               	.LCFI178:
 9121               		.cfi_def_cfa_offset 33
 9122 3a38 0FB6      		in __tmp_reg__,__SREG__
 9123 3a3a F894      		cli
 9124 3a3c DEBF      		out __SP_H__,r29
 9125 3a3e 0FBE      		out __SREG__,__tmp_reg__
 9126 3a40 CDBF      		out __SP_L__,r28
 9127               	/* prologue: function */
 9128               	/* frame size = 29 */
 9129               	/* stack size = 31 */
 9130               	.L__stack_usage = 31
 9131 3a42 9A8F      		std Y+26,r25
 9132 3a44 898F      		std Y+25,r24
 9133 3a46 7C8F      		std Y+28,r23
 9134 3a48 6B8F      		std Y+27,r22
 9135 3a4a 4D8F      		std Y+29,r20
 889:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 9136               		.loc 2 889 0
 9137 3a4c 898D      		ldd r24,Y+25
 9138 3a4e 9A8D      		ldd r25,Y+26
 9139 3a50 FC01      		movw r30,r24
 9140 3a52 8289      		ldd r24,Z+18
 9141 3a54 9389      		ldd r25,Z+19
 9142 3a56 9A87      		std Y+10,r25
 9143 3a58 8987      		std Y+9,r24
 9144               	.LBB4:
 890:lp_solve_5.5/lp_presolve.c **** 
 891:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
 892:lp_solve_5.5/lp_presolve.c ****   if((colnr < 1) || (colnr > lp->columns))
 893:lp_solve_5.5/lp_presolve.c ****     report(lp, SEVERE, "presolve_colremove: Column %d out of range\n", colnr);
 894:lp_solve_5.5/lp_presolve.c ****   if(!isActiveLink(psdata->cols->varmap, colnr) || !presolve_candeletevar(psdata, colnr))
 895:lp_solve_5.5/lp_presolve.c ****     colnr = -1;
 896:lp_solve_5.5/lp_presolve.c ****   else
 897:lp_solve_5.5/lp_presolve.c **** #endif
 898:lp_solve_5.5/lp_presolve.c ****   {
 899:lp_solve_5.5/lp_presolve.c ****     MATrec *mat = lp->matA;
 9145               		.loc 2 899 0
 9146 3a5a 8985      		ldd r24,Y+9
 9147 3a5c 9A85      		ldd r25,Y+10
 9148 3a5e 8A54      		subi r24,74
 9149 3a60 9D4F      		sbci r25,-3
 9150 3a62 FC01      		movw r30,r24
 9151 3a64 8081      		ld r24,Z
 9152 3a66 9181      		ldd r25,Z+1
 9153 3a68 9C87      		std Y+12,r25
 9154 3a6a 8B87      		std Y+11,r24
 900:lp_solve_5.5/lp_presolve.c ****     int    ix, ie, nx, jx, je, *cols, *rows, n, rownr;
 901:lp_solve_5.5/lp_presolve.c **** 
 902:lp_solve_5.5/lp_presolve.c ****     /* Remove this column for each row that is active in the column */
 903:lp_solve_5.5/lp_presolve.c ****     rows = psdata->cols->next[colnr];
 9155               		.loc 2 903 0
 9156 3a6c 898D      		ldd r24,Y+25
 9157 3a6e 9A8D      		ldd r25,Y+26
 9158 3a70 FC01      		movw r30,r24
 9159 3a72 8281      		ldd r24,Z+2
 9160 3a74 9381      		ldd r25,Z+3
 9161 3a76 FC01      		movw r30,r24
 9162 3a78 2281      		ldd r18,Z+2
 9163 3a7a 3381      		ldd r19,Z+3
 9164 3a7c 8B8D      		ldd r24,Y+27
 9165 3a7e 9C8D      		ldd r25,Y+28
 9166 3a80 880F      		lsl r24
 9167 3a82 991F      		rol r25
 9168 3a84 820F      		add r24,r18
 9169 3a86 931F      		adc r25,r19
 9170 3a88 FC01      		movw r30,r24
 9171 3a8a 8081      		ld r24,Z
 9172 3a8c 9181      		ldd r25,Z+1
 9173 3a8e 9E83      		std Y+6,r25
 9174 3a90 8D83      		std Y+5,r24
 904:lp_solve_5.5/lp_presolve.c ****     je = *rows;
 9175               		.loc 2 904 0
 9176 3a92 8D81      		ldd r24,Y+5
 9177 3a94 9E81      		ldd r25,Y+6
 9178 3a96 FC01      		movw r30,r24
 9179 3a98 8081      		ld r24,Z
 9180 3a9a 9181      		ldd r25,Z+1
 9181 3a9c 9E87      		std Y+14,r25
 9182 3a9e 8D87      		std Y+13,r24
 905:lp_solve_5.5/lp_presolve.c ****     rows++;
 9183               		.loc 2 905 0
 9184 3aa0 8D81      		ldd r24,Y+5
 9185 3aa2 9E81      		ldd r25,Y+6
 9186 3aa4 0296      		adiw r24,2
 9187 3aa6 9E83      		std Y+6,r25
 9188 3aa8 8D83      		std Y+5,r24
 906:lp_solve_5.5/lp_presolve.c ****     for(jx = 1; jx <= je; jx++, rows++) {
 9189               		.loc 2 906 0
 9190 3aaa 81E0      		ldi r24,lo8(1)
 9191 3aac 90E0      		ldi r25,0
 9192 3aae 9C83      		std Y+4,r25
 9193 3ab0 8B83      		std Y+3,r24
 9194 3ab2 00C0      		rjmp .L325
 9195               	.L333:
 907:lp_solve_5.5/lp_presolve.c ****       n = 0;
 9196               		.loc 2 907 0
 9197 3ab4 1886      		std Y+8,__zero_reg__
 9198 3ab6 1F82      		std Y+7,__zero_reg__
 908:lp_solve_5.5/lp_presolve.c ****       rownr = COL_MAT_ROWNR(*rows);
 9199               		.loc 2 908 0
 9200 3ab8 8B85      		ldd r24,Y+11
 9201 3aba 9C85      		ldd r25,Y+12
 9202 3abc FC01      		movw r30,r24
 9203 3abe 2685      		ldd r18,Z+14
 9204 3ac0 3785      		ldd r19,Z+15
 9205 3ac2 8D81      		ldd r24,Y+5
 9206 3ac4 9E81      		ldd r25,Y+6
 9207 3ac6 FC01      		movw r30,r24
 9208 3ac8 8081      		ld r24,Z
 9209 3aca 9181      		ldd r25,Z+1
 9210 3acc 880F      		lsl r24
 9211 3ace 991F      		rol r25
 9212 3ad0 820F      		add r24,r18
 9213 3ad2 931F      		adc r25,r19
 9214 3ad4 FC01      		movw r30,r24
 9215 3ad6 8081      		ld r24,Z
 9216 3ad8 9181      		ldd r25,Z+1
 9217 3ada 988B      		std Y+16,r25
 9218 3adc 8F87      		std Y+15,r24
 909:lp_solve_5.5/lp_presolve.c ****       cols = psdata->rows->next[rownr];
 9219               		.loc 2 909 0
 9220 3ade 898D      		ldd r24,Y+25
 9221 3ae0 9A8D      		ldd r25,Y+26
 9222 3ae2 FC01      		movw r30,r24
 9223 3ae4 8081      		ld r24,Z
 9224 3ae6 9181      		ldd r25,Z+1
 9225 3ae8 FC01      		movw r30,r24
 9226 3aea 2281      		ldd r18,Z+2
 9227 3aec 3381      		ldd r19,Z+3
 9228 3aee 8F85      		ldd r24,Y+15
 9229 3af0 9889      		ldd r25,Y+16
 9230 3af2 880F      		lsl r24
 9231 3af4 991F      		rol r25
 9232 3af6 820F      		add r24,r18
 9233 3af8 931F      		adc r25,r19
 9234 3afa FC01      		movw r30,r24
 9235 3afc 8081      		ld r24,Z
 9236 3afe 9181      		ldd r25,Z+1
 9237 3b00 9A8B      		std Y+18,r25
 9238 3b02 898B      		std Y+17,r24
 910:lp_solve_5.5/lp_presolve.c ****       ie = cols[0];
 9239               		.loc 2 910 0
 9240 3b04 8989      		ldd r24,Y+17
 9241 3b06 9A89      		ldd r25,Y+18
 9242 3b08 FC01      		movw r30,r24
 9243 3b0a 8081      		ld r24,Z
 9244 3b0c 9181      		ldd r25,Z+1
 9245 3b0e 9C8B      		std Y+20,r25
 9246 3b10 8B8B      		std Y+19,r24
 911:lp_solve_5.5/lp_presolve.c ****       /* See if we can narrow the search window */
 912:lp_solve_5.5/lp_presolve.c ****       ix = ie / 2;
 9247               		.loc 2 912 0
 9248 3b12 8B89      		ldd r24,Y+19
 9249 3b14 9C89      		ldd r25,Y+20
 9250 3b16 9923      		tst r25
 9251 3b18 04F4      		brge .L326
 9252 3b1a 0196      		adiw r24,1
 9253               	.L326:
 9254 3b1c 9595      		asr r25
 9255 3b1e 8795      		ror r24
 9256 3b20 9A83      		std Y+2,r25
 9257 3b22 8983      		std Y+1,r24
 913:lp_solve_5.5/lp_presolve.c ****       if((ix > 5) && (colnr >= ROW_MAT_COLNR(cols[ix])))
 9258               		.loc 2 913 0
 9259 3b24 8981      		ldd r24,Y+1
 9260 3b26 9A81      		ldd r25,Y+2
 9261 3b28 0697      		sbiw r24,6
 9262 3b2a 04F0      		brlt .L327
 9263               		.loc 2 913 0 is_stmt 0 discriminator 1
 9264 3b2c 8B85      		ldd r24,Y+11
 9265 3b2e 9C85      		ldd r25,Y+12
 9266 3b30 FC01      		movw r30,r24
 9267 3b32 2485      		ldd r18,Z+12
 9268 3b34 3585      		ldd r19,Z+13
 9269 3b36 8B85      		ldd r24,Y+11
 9270 3b38 9C85      		ldd r25,Y+12
 9271 3b3a FC01      		movw r30,r24
 9272 3b3c 4689      		ldd r20,Z+22
 9273 3b3e 5789      		ldd r21,Z+23
 9274 3b40 8981      		ldd r24,Y+1
 9275 3b42 9A81      		ldd r25,Y+2
 9276 3b44 880F      		lsl r24
 9277 3b46 991F      		rol r25
 9278 3b48 6989      		ldd r22,Y+17
 9279 3b4a 7A89      		ldd r23,Y+18
 9280 3b4c 860F      		add r24,r22
 9281 3b4e 971F      		adc r25,r23
 9282 3b50 FC01      		movw r30,r24
 9283 3b52 8081      		ld r24,Z
 9284 3b54 9181      		ldd r25,Z+1
 9285 3b56 880F      		lsl r24
 9286 3b58 991F      		rol r25
 9287 3b5a 840F      		add r24,r20
 9288 3b5c 951F      		adc r25,r21
 9289 3b5e FC01      		movw r30,r24
 9290 3b60 8081      		ld r24,Z
 9291 3b62 9181      		ldd r25,Z+1
 9292 3b64 880F      		lsl r24
 9293 3b66 991F      		rol r25
 9294 3b68 820F      		add r24,r18
 9295 3b6a 931F      		adc r25,r19
 9296 3b6c FC01      		movw r30,r24
 9297 3b6e 2081      		ld r18,Z
 9298 3b70 3181      		ldd r19,Z+1
 9299 3b72 8B8D      		ldd r24,Y+27
 9300 3b74 9C8D      		ldd r25,Y+28
 9301 3b76 8217      		cp r24,r18
 9302 3b78 9307      		cpc r25,r19
 9303 3b7a 04F0      		brlt .L327
 914:lp_solve_5.5/lp_presolve.c ****         n = ix-1;
 9304               		.loc 2 914 0 is_stmt 1
 9305 3b7c 8981      		ldd r24,Y+1
 9306 3b7e 9A81      		ldd r25,Y+2
 9307 3b80 0197      		sbiw r24,1
 9308 3b82 9887      		std Y+8,r25
 9309 3b84 8F83      		std Y+7,r24
 9310 3b86 00C0      		rjmp .L328
 9311               	.L327:
 915:lp_solve_5.5/lp_presolve.c ****       else
 916:lp_solve_5.5/lp_presolve.c ****         ix = 1;
 9312               		.loc 2 916 0
 9313 3b88 81E0      		ldi r24,lo8(1)
 9314 3b8a 90E0      		ldi r25,0
 9315 3b8c 9A83      		std Y+2,r25
 9316 3b8e 8983      		std Y+1,r24
 9317               	.L328:
 917:lp_solve_5.5/lp_presolve.c ****       /* Do the compression loop */
 918:lp_solve_5.5/lp_presolve.c ****       for(; ix <= ie; ix++) {
 9318               		.loc 2 918 0
 9319 3b90 00C0      		rjmp .L329
 9320               	.L331:
 919:lp_solve_5.5/lp_presolve.c ****         nx = cols[ix];
 9321               		.loc 2 919 0
 9322 3b92 8981      		ldd r24,Y+1
 9323 3b94 9A81      		ldd r25,Y+2
 9324 3b96 880F      		lsl r24
 9325 3b98 991F      		rol r25
 9326 3b9a 2989      		ldd r18,Y+17
 9327 3b9c 3A89      		ldd r19,Y+18
 9328 3b9e 820F      		add r24,r18
 9329 3ba0 931F      		adc r25,r19
 9330 3ba2 FC01      		movw r30,r24
 9331 3ba4 8081      		ld r24,Z
 9332 3ba6 9181      		ldd r25,Z+1
 9333 3ba8 9E8B      		std Y+22,r25
 9334 3baa 8D8B      		std Y+21,r24
 920:lp_solve_5.5/lp_presolve.c ****         if(ROW_MAT_COLNR(nx) != colnr) {
 9335               		.loc 2 920 0
 9336 3bac 8B85      		ldd r24,Y+11
 9337 3bae 9C85      		ldd r25,Y+12
 9338 3bb0 FC01      		movw r30,r24
 9339 3bb2 2485      		ldd r18,Z+12
 9340 3bb4 3585      		ldd r19,Z+13
 9341 3bb6 8B85      		ldd r24,Y+11
 9342 3bb8 9C85      		ldd r25,Y+12
 9343 3bba FC01      		movw r30,r24
 9344 3bbc 4689      		ldd r20,Z+22
 9345 3bbe 5789      		ldd r21,Z+23
 9346 3bc0 8D89      		ldd r24,Y+21
 9347 3bc2 9E89      		ldd r25,Y+22
 9348 3bc4 880F      		lsl r24
 9349 3bc6 991F      		rol r25
 9350 3bc8 840F      		add r24,r20
 9351 3bca 951F      		adc r25,r21
 9352 3bcc FC01      		movw r30,r24
 9353 3bce 8081      		ld r24,Z
 9354 3bd0 9181      		ldd r25,Z+1
 9355 3bd2 880F      		lsl r24
 9356 3bd4 991F      		rol r25
 9357 3bd6 820F      		add r24,r18
 9358 3bd8 931F      		adc r25,r19
 9359 3bda FC01      		movw r30,r24
 9360 3bdc 2081      		ld r18,Z
 9361 3bde 3181      		ldd r19,Z+1
 9362 3be0 8B8D      		ldd r24,Y+27
 9363 3be2 9C8D      		ldd r25,Y+28
 9364 3be4 2817      		cp r18,r24
 9365 3be6 3907      		cpc r19,r25
 9366 3be8 01F0      		breq .L330
 921:lp_solve_5.5/lp_presolve.c ****           n++;
 9367               		.loc 2 921 0
 9368 3bea 8F81      		ldd r24,Y+7
 9369 3bec 9885      		ldd r25,Y+8
 9370 3bee 0196      		adiw r24,1
 9371 3bf0 9887      		std Y+8,r25
 9372 3bf2 8F83      		std Y+7,r24
 922:lp_solve_5.5/lp_presolve.c ****           cols[n] = nx;
 9373               		.loc 2 922 0
 9374 3bf4 8F81      		ldd r24,Y+7
 9375 3bf6 9885      		ldd r25,Y+8
 9376 3bf8 880F      		lsl r24
 9377 3bfa 991F      		rol r25
 9378 3bfc 2989      		ldd r18,Y+17
 9379 3bfe 3A89      		ldd r19,Y+18
 9380 3c00 820F      		add r24,r18
 9381 3c02 931F      		adc r25,r19
 9382 3c04 2D89      		ldd r18,Y+21
 9383 3c06 3E89      		ldd r19,Y+22
 9384 3c08 FC01      		movw r30,r24
 9385 3c0a 3183      		std Z+1,r19
 9386 3c0c 2083      		st Z,r18
 9387               	.L330:
 918:lp_solve_5.5/lp_presolve.c ****         nx = cols[ix];
 9388               		.loc 2 918 0
 9389 3c0e 8981      		ldd r24,Y+1
 9390 3c10 9A81      		ldd r25,Y+2
 9391 3c12 0196      		adiw r24,1
 9392 3c14 9A83      		std Y+2,r25
 9393 3c16 8983      		std Y+1,r24
 9394               	.L329:
 918:lp_solve_5.5/lp_presolve.c ****         nx = cols[ix];
 9395               		.loc 2 918 0 is_stmt 0 discriminator 1
 9396 3c18 2981      		ldd r18,Y+1
 9397 3c1a 3A81      		ldd r19,Y+2
 9398 3c1c 8B89      		ldd r24,Y+19
 9399 3c1e 9C89      		ldd r25,Y+20
 9400 3c20 8217      		cp r24,r18
 9401 3c22 9307      		cpc r25,r19
 9402 3c24 04F0      		brlt .+2
 9403 3c26 00C0      		rjmp .L331
 923:lp_solve_5.5/lp_presolve.c ****         }
 924:lp_solve_5.5/lp_presolve.c ****       }
 925:lp_solve_5.5/lp_presolve.c ****       cols[0] = n;
 9404               		.loc 2 925 0 is_stmt 1
 9405 3c28 8989      		ldd r24,Y+17
 9406 3c2a 9A89      		ldd r25,Y+18
 9407 3c2c 2F81      		ldd r18,Y+7
 9408 3c2e 3885      		ldd r19,Y+8
 9409 3c30 FC01      		movw r30,r24
 9410 3c32 3183      		std Z+1,r19
 9411 3c34 2083      		st Z,r18
 926:lp_solve_5.5/lp_presolve.c **** 
 927:lp_solve_5.5/lp_presolve.c ****       /* Make sure we delete rows that become empty */
 928:lp_solve_5.5/lp_presolve.c **** #if 1
 929:lp_solve_5.5/lp_presolve.c ****       if((n == 0) && allowrowdelete) {
 9412               		.loc 2 929 0
 9413 3c36 8F81      		ldd r24,Y+7
 9414 3c38 9885      		ldd r25,Y+8
 9415 3c3a 892B      		or r24,r25
 9416 3c3c 01F4      		brne .L332
 9417               		.loc 2 929 0 is_stmt 0 discriminator 1
 9418 3c3e 8D8D      		ldd r24,Y+29
 9419 3c40 8823      		tst r24
 9420 3c42 01F0      		breq .L332
 9421               	.LBB5:
 930:lp_solve_5.5/lp_presolve.c ****         int *list = psdata->rows->empty;
 9422               		.loc 2 930 0 is_stmt 1
 9423 3c44 898D      		ldd r24,Y+25
 9424 3c46 9A8D      		ldd r25,Y+26
 9425 3c48 FC01      		movw r30,r24
 9426 3c4a 8081      		ld r24,Z
 9427 3c4c 9181      		ldd r25,Z+1
 9428 3c4e FC01      		movw r30,r24
 9429 3c50 8481      		ldd r24,Z+4
 9430 3c52 9581      		ldd r25,Z+5
 9431 3c54 988F      		std Y+24,r25
 9432 3c56 8F8B      		std Y+23,r24
 931:lp_solve_5.5/lp_presolve.c ****         n = ++list[0];
 9433               		.loc 2 931 0
 9434 3c58 8F89      		ldd r24,Y+23
 9435 3c5a 988D      		ldd r25,Y+24
 9436 3c5c FC01      		movw r30,r24
 9437 3c5e 8081      		ld r24,Z
 9438 3c60 9181      		ldd r25,Z+1
 9439 3c62 9C01      		movw r18,r24
 9440 3c64 2F5F      		subi r18,-1
 9441 3c66 3F4F      		sbci r19,-1
 9442 3c68 8F89      		ldd r24,Y+23
 9443 3c6a 988D      		ldd r25,Y+24
 9444 3c6c FC01      		movw r30,r24
 9445 3c6e 3183      		std Z+1,r19
 9446 3c70 2083      		st Z,r18
 9447 3c72 8F89      		ldd r24,Y+23
 9448 3c74 988D      		ldd r25,Y+24
 9449 3c76 FC01      		movw r30,r24
 9450 3c78 8081      		ld r24,Z
 9451 3c7a 9181      		ldd r25,Z+1
 9452 3c7c 9887      		std Y+8,r25
 9453 3c7e 8F83      		std Y+7,r24
 932:lp_solve_5.5/lp_presolve.c ****         list[n] = rownr;
 9454               		.loc 2 932 0
 9455 3c80 8F81      		ldd r24,Y+7
 9456 3c82 9885      		ldd r25,Y+8
 9457 3c84 880F      		lsl r24
 9458 3c86 991F      		rol r25
 9459 3c88 2F89      		ldd r18,Y+23
 9460 3c8a 388D      		ldd r19,Y+24
 9461 3c8c 820F      		add r24,r18
 9462 3c8e 931F      		adc r25,r19
 9463 3c90 2F85      		ldd r18,Y+15
 9464 3c92 3889      		ldd r19,Y+16
 9465 3c94 FC01      		movw r30,r24
 9466 3c96 3183      		std Z+1,r19
 9467 3c98 2083      		st Z,r18
 9468               	.L332:
 9469               	.LBE5:
 906:lp_solve_5.5/lp_presolve.c ****       n = 0;
 9470               		.loc 2 906 0 discriminator 2
 9471 3c9a 8B81      		ldd r24,Y+3
 9472 3c9c 9C81      		ldd r25,Y+4
 9473 3c9e 0196      		adiw r24,1
 9474 3ca0 9C83      		std Y+4,r25
 9475 3ca2 8B83      		std Y+3,r24
 9476 3ca4 8D81      		ldd r24,Y+5
 9477 3ca6 9E81      		ldd r25,Y+6
 9478 3ca8 0296      		adiw r24,2
 9479 3caa 9E83      		std Y+6,r25
 9480 3cac 8D83      		std Y+5,r24
 9481               	.L325:
 906:lp_solve_5.5/lp_presolve.c ****       n = 0;
 9482               		.loc 2 906 0 is_stmt 0 discriminator 1
 9483 3cae 2B81      		ldd r18,Y+3
 9484 3cb0 3C81      		ldd r19,Y+4
 9485 3cb2 8D85      		ldd r24,Y+13
 9486 3cb4 9E85      		ldd r25,Y+14
 9487 3cb6 8217      		cp r24,r18
 9488 3cb8 9307      		cpc r25,r19
 9489 3cba 04F0      		brlt .+2
 9490 3cbc 00C0      		rjmp .L333
 933:lp_solve_5.5/lp_presolve.c ****       }
 934:lp_solve_5.5/lp_presolve.c **** #endif
 935:lp_solve_5.5/lp_presolve.c **** 
 936:lp_solve_5.5/lp_presolve.c ****     }
 937:lp_solve_5.5/lp_presolve.c ****     FREE(psdata->cols->next[colnr]);
 9491               		.loc 2 937 0 is_stmt 1
 9492 3cbe 898D      		ldd r24,Y+25
 9493 3cc0 9A8D      		ldd r25,Y+26
 9494 3cc2 FC01      		movw r30,r24
 9495 3cc4 8281      		ldd r24,Z+2
 9496 3cc6 9381      		ldd r25,Z+3
 9497 3cc8 FC01      		movw r30,r24
 9498 3cca 2281      		ldd r18,Z+2
 9499 3ccc 3381      		ldd r19,Z+3
 9500 3cce 8B8D      		ldd r24,Y+27
 9501 3cd0 9C8D      		ldd r25,Y+28
 9502 3cd2 880F      		lsl r24
 9503 3cd4 991F      		rol r25
 9504 3cd6 820F      		add r24,r18
 9505 3cd8 931F      		adc r25,r19
 9506 3cda FC01      		movw r30,r24
 9507 3cdc 8081      		ld r24,Z
 9508 3cde 9181      		ldd r25,Z+1
 9509 3ce0 892B      		or r24,r25
 9510 3ce2 01F0      		breq .L334
 9511               		.loc 2 937 0 is_stmt 0 discriminator 1
 9512 3ce4 898D      		ldd r24,Y+25
 9513 3ce6 9A8D      		ldd r25,Y+26
 9514 3ce8 FC01      		movw r30,r24
 9515 3cea 8281      		ldd r24,Z+2
 9516 3cec 9381      		ldd r25,Z+3
 9517 3cee FC01      		movw r30,r24
 9518 3cf0 2281      		ldd r18,Z+2
 9519 3cf2 3381      		ldd r19,Z+3
 9520 3cf4 8B8D      		ldd r24,Y+27
 9521 3cf6 9C8D      		ldd r25,Y+28
 9522 3cf8 880F      		lsl r24
 9523 3cfa 991F      		rol r25
 9524 3cfc 820F      		add r24,r18
 9525 3cfe 931F      		adc r25,r19
 9526 3d00 FC01      		movw r30,r24
 9527 3d02 8081      		ld r24,Z
 9528 3d04 9181      		ldd r25,Z+1
 9529 3d06 0E94 0000 		call free
 9530 3d0a 898D      		ldd r24,Y+25
 9531 3d0c 9A8D      		ldd r25,Y+26
 9532 3d0e FC01      		movw r30,r24
 9533 3d10 8281      		ldd r24,Z+2
 9534 3d12 9381      		ldd r25,Z+3
 9535 3d14 FC01      		movw r30,r24
 9536 3d16 2281      		ldd r18,Z+2
 9537 3d18 3381      		ldd r19,Z+3
 9538 3d1a 8B8D      		ldd r24,Y+27
 9539 3d1c 9C8D      		ldd r25,Y+28
 9540 3d1e 880F      		lsl r24
 9541 3d20 991F      		rol r25
 9542 3d22 820F      		add r24,r18
 9543 3d24 931F      		adc r25,r19
 9544 3d26 FC01      		movw r30,r24
 9545 3d28 1182      		std Z+1,__zero_reg__
 9546 3d2a 1082      		st Z,__zero_reg__
 9547               	.L334:
 938:lp_solve_5.5/lp_presolve.c **** 
 939:lp_solve_5.5/lp_presolve.c ****     /* Update other counts */
 940:lp_solve_5.5/lp_presolve.c ****     if(SOS_is_member(lp->SOS, 0, colnr)) {
 9548               		.loc 2 940 0 is_stmt 1
 9549 3d2c 8985      		ldd r24,Y+9
 9550 3d2e 9A85      		ldd r25,Y+10
 9551 3d30 8256      		subi r24,98
 9552 3d32 9D4F      		sbci r25,-3
 9553 3d34 FC01      		movw r30,r24
 9554 3d36 8081      		ld r24,Z
 9555 3d38 9181      		ldd r25,Z+1
 9556 3d3a 2B8D      		ldd r18,Y+27
 9557 3d3c 3C8D      		ldd r19,Y+28
 9558 3d3e A901      		movw r20,r18
 9559 3d40 60E0      		ldi r22,0
 9560 3d42 70E0      		ldi r23,0
 9561 3d44 0E94 0000 		call SOS_is_member
 9562 3d48 892B      		or r24,r25
 9563 3d4a 01F4      		brne .+2
 9564 3d4c 00C0      		rjmp .L335
 941:lp_solve_5.5/lp_presolve.c ****       if(lp->sos_priority != NULL) {
 9565               		.loc 2 941 0
 9566 3d4e 8985      		ldd r24,Y+9
 9567 3d50 9A85      		ldd r25,Y+10
 9568 3d52 8056      		subi r24,96
 9569 3d54 9D4F      		sbci r25,-3
 9570 3d56 FC01      		movw r30,r24
 9571 3d58 8081      		ld r24,Z
 9572 3d5a 9181      		ldd r25,Z+1
 9573 3d5c 892B      		or r24,r25
 9574 3d5e 01F0      		breq .L336
 942:lp_solve_5.5/lp_presolve.c ****         lp->sos_vars--;
 9575               		.loc 2 942 0
 9576 3d60 8985      		ldd r24,Y+9
 9577 3d62 9A85      		ldd r25,Y+10
 9578 3d64 8656      		subi r24,102
 9579 3d66 9D4F      		sbci r25,-3
 9580 3d68 FC01      		movw r30,r24
 9581 3d6a 8081      		ld r24,Z
 9582 3d6c 9181      		ldd r25,Z+1
 9583 3d6e 9C01      		movw r18,r24
 9584 3d70 2150      		subi r18,1
 9585 3d72 3109      		sbc r19,__zero_reg__
 9586 3d74 8985      		ldd r24,Y+9
 9587 3d76 9A85      		ldd r25,Y+10
 9588 3d78 8656      		subi r24,102
 9589 3d7a 9D4F      		sbci r25,-3
 9590 3d7c FC01      		movw r30,r24
 9591 3d7e 3183      		std Z+1,r19
 9592 3d80 2083      		st Z,r18
 943:lp_solve_5.5/lp_presolve.c ****         if(is_int(lp, colnr))
 9593               		.loc 2 943 0
 9594 3d82 2B8D      		ldd r18,Y+27
 9595 3d84 3C8D      		ldd r19,Y+28
 9596 3d86 8985      		ldd r24,Y+9
 9597 3d88 9A85      		ldd r25,Y+10
 9598 3d8a B901      		movw r22,r18
 9599 3d8c 0E94 0000 		call is_int
 9600 3d90 8823      		tst r24
 9601 3d92 01F0      		breq .L336
 944:lp_solve_5.5/lp_presolve.c ****           lp->sos_ints--;
 9602               		.loc 2 944 0
 9603 3d94 8985      		ldd r24,Y+9
 9604 3d96 9A85      		ldd r25,Y+10
 9605 3d98 8456      		subi r24,100
 9606 3d9a 9D4F      		sbci r25,-3
 9607 3d9c FC01      		movw r30,r24
 9608 3d9e 8081      		ld r24,Z
 9609 3da0 9181      		ldd r25,Z+1
 9610 3da2 9C01      		movw r18,r24
 9611 3da4 2150      		subi r18,1
 9612 3da6 3109      		sbc r19,__zero_reg__
 9613 3da8 8985      		ldd r24,Y+9
 9614 3daa 9A85      		ldd r25,Y+10
 9615 3dac 8456      		subi r24,100
 9616 3dae 9D4F      		sbci r25,-3
 9617 3db0 FC01      		movw r30,r24
 9618 3db2 3183      		std Z+1,r19
 9619 3db4 2083      		st Z,r18
 9620               	.L336:
 945:lp_solve_5.5/lp_presolve.c ****       }
 946:lp_solve_5.5/lp_presolve.c ****       SOS_member_delete(lp->SOS, 0, colnr);
 9621               		.loc 2 946 0
 9622 3db6 8985      		ldd r24,Y+9
 9623 3db8 9A85      		ldd r25,Y+10
 9624 3dba 8256      		subi r24,98
 9625 3dbc 9D4F      		sbci r25,-3
 9626 3dbe FC01      		movw r30,r24
 9627 3dc0 8081      		ld r24,Z
 9628 3dc2 9181      		ldd r25,Z+1
 9629 3dc4 2B8D      		ldd r18,Y+27
 9630 3dc6 3C8D      		ldd r19,Y+28
 9631 3dc8 A901      		movw r20,r18
 9632 3dca 60E0      		ldi r22,0
 9633 3dcc 70E0      		ldi r23,0
 9634 3dce 0E94 0000 		call SOS_member_delete
 947:lp_solve_5.5/lp_presolve.c ****       clean_SOSgroup(lp->SOS, TRUE);
 9635               		.loc 2 947 0
 9636 3dd2 8985      		ldd r24,Y+9
 9637 3dd4 9A85      		ldd r25,Y+10
 9638 3dd6 8256      		subi r24,98
 9639 3dd8 9D4F      		sbci r25,-3
 9640 3dda FC01      		movw r30,r24
 9641 3ddc 8081      		ld r24,Z
 9642 3dde 9181      		ldd r25,Z+1
 9643 3de0 61E0      		ldi r22,lo8(1)
 9644 3de2 0E94 0000 		call clean_SOSgroup
 948:lp_solve_5.5/lp_presolve.c ****       if(SOS_count(lp) == 0)
 9645               		.loc 2 948 0
 9646 3de6 8985      		ldd r24,Y+9
 9647 3de8 9A85      		ldd r25,Y+10
 9648 3dea 0E94 0000 		call SOS_count
 9649 3dee 892B      		or r24,r25
 9650 3df0 01F4      		brne .L335
 949:lp_solve_5.5/lp_presolve.c ****         free_SOSgroup(&(lp->SOS));
 9651               		.loc 2 949 0
 9652 3df2 8985      		ldd r24,Y+9
 9653 3df4 9A85      		ldd r25,Y+10
 9654 3df6 8256      		subi r24,98
 9655 3df8 9D4F      		sbci r25,-3
 9656 3dfa 0E94 0000 		call free_SOSgroup
 9657               	.L335:
 950:lp_solve_5.5/lp_presolve.c ****     }
 951:lp_solve_5.5/lp_presolve.c **** 
 952:lp_solve_5.5/lp_presolve.c ****     /* Finally remove the column from the active column list */
 953:lp_solve_5.5/lp_presolve.c ****     colnr = removeLink(psdata->cols->varmap, colnr);
 9658               		.loc 2 953 0
 9659 3dfe 898D      		ldd r24,Y+25
 9660 3e00 9A8D      		ldd r25,Y+26
 9661 3e02 FC01      		movw r30,r24
 9662 3e04 8281      		ldd r24,Z+2
 9663 3e06 9381      		ldd r25,Z+3
 9664 3e08 FC01      		movw r30,r24
 9665 3e0a 8081      		ld r24,Z
 9666 3e0c 9181      		ldd r25,Z+1
 9667 3e0e 2B8D      		ldd r18,Y+27
 9668 3e10 3C8D      		ldd r19,Y+28
 9669 3e12 B901      		movw r22,r18
 9670 3e14 0E94 0000 		call removeLink
 9671 3e18 9C8F      		std Y+28,r25
 9672 3e1a 8B8F      		std Y+27,r24
 9673               	.LBE4:
 954:lp_solve_5.5/lp_presolve.c ****   }
 955:lp_solve_5.5/lp_presolve.c ****   return( colnr );
 9674               		.loc 2 955 0
 9675 3e1c 8B8D      		ldd r24,Y+27
 9676 3e1e 9C8D      		ldd r25,Y+28
 9677               	/* epilogue start */
 956:lp_solve_5.5/lp_presolve.c **** }
 9678               		.loc 2 956 0
 9679 3e20 6D96      		adiw r28,29
 9680 3e22 0FB6      		in __tmp_reg__,__SREG__
 9681 3e24 F894      		cli
 9682 3e26 DEBF      		out __SP_H__,r29
 9683 3e28 0FBE      		out __SREG__,__tmp_reg__
 9684 3e2a CDBF      		out __SP_L__,r28
 9685 3e2c DF91      		pop r29
 9686 3e2e CF91      		pop r28
 9687 3e30 0895      		ret
 9688               		.cfi_endproc
 9689               	.LFE42:
 9691               	.global	presolve_redundantSOS
 9693               	presolve_redundantSOS:
 9694               	.LFB43:
 957:lp_solve_5.5/lp_presolve.c **** 
 958:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_redundantSOS(presolverec *psdata, int *nb, int *nSum)
 959:lp_solve_5.5/lp_presolve.c **** {
 9695               		.loc 2 959 0
 9696               		.cfi_startproc
 9697 3e32 EF92      		push r14
 9698               	.LCFI179:
 9699               		.cfi_def_cfa_offset 3
 9700               		.cfi_offset 14, -2
 9701 3e34 FF92      		push r15
 9702               	.LCFI180:
 9703               		.cfi_def_cfa_offset 4
 9704               		.cfi_offset 15, -3
 9705 3e36 0F93      		push r16
 9706               	.LCFI181:
 9707               		.cfi_def_cfa_offset 5
 9708               		.cfi_offset 16, -4
 9709 3e38 CF93      		push r28
 9710               	.LCFI182:
 9711               		.cfi_def_cfa_offset 6
 9712               		.cfi_offset 28, -5
 9713 3e3a DF93      		push r29
 9714               	.LCFI183:
 9715               		.cfi_def_cfa_offset 7
 9716               		.cfi_offset 29, -6
 9717 3e3c CDB7      		in r28,__SP_L__
 9718 3e3e DEB7      		in r29,__SP_H__
 9719               	.LCFI184:
 9720               		.cfi_def_cfa_register 28
 9721 3e40 6C97      		sbiw r28,28
 9722               	.LCFI185:
 9723               		.cfi_def_cfa_offset 35
 9724 3e42 0FB6      		in __tmp_reg__,__SREG__
 9725 3e44 F894      		cli
 9726 3e46 DEBF      		out __SP_H__,r29
 9727 3e48 0FBE      		out __SREG__,__tmp_reg__
 9728 3e4a CDBF      		out __SP_L__,r28
 9729               	/* prologue: function */
 9730               	/* frame size = 28 */
 9731               	/* stack size = 33 */
 9732               	.L__stack_usage = 33
 9733 3e4c 988F      		std Y+24,r25
 9734 3e4e 8F8B      		std Y+23,r24
 9735 3e50 7A8F      		std Y+26,r23
 9736 3e52 698F      		std Y+25,r22
 9737 3e54 5C8F      		std Y+28,r21
 9738 3e56 4B8F      		std Y+27,r20
 960:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 9739               		.loc 2 960 0
 9740 3e58 8F89      		ldd r24,Y+23
 9741 3e5a 988D      		ldd r25,Y+24
 9742 3e5c FC01      		movw r30,r24
 9743 3e5e 8289      		ldd r24,Z+18
 9744 3e60 9389      		ldd r25,Z+19
 9745 3e62 9887      		std Y+8,r25
 9746 3e64 8F83      		std Y+7,r24
 961:lp_solve_5.5/lp_presolve.c ****   int      i, ii, k, kk, j, nrows = lp->rows, *fixed = NULL,
 9747               		.loc 2 961 0
 9748 3e66 8F81      		ldd r24,Y+7
 9749 3e68 9885      		ldd r25,Y+8
 9750 3e6a 8651      		subi r24,22
 9751 3e6c 9E4F      		sbci r25,-2
 9752 3e6e FC01      		movw r30,r24
 9753 3e70 8081      		ld r24,Z
 9754 3e72 9181      		ldd r25,Z+1
 9755 3e74 9A87      		std Y+10,r25
 9756 3e76 8987      		std Y+9,r24
 9757 3e78 1C8A      		std Y+20,__zero_reg__
 9758 3e7a 1B8A      		std Y+19,__zero_reg__
 962:lp_solve_5.5/lp_presolve.c ****            iBoundTighten = 0, status = RUNNING;
 9759               		.loc 2 962 0
 9760 3e7c 1E8A      		std Y+22,__zero_reg__
 9761 3e7e 1D8A      		std Y+21,__zero_reg__
 9762 3e80 88E0      		ldi r24,lo8(8)
 9763 3e82 90E0      		ldi r25,0
 9764 3e84 9E83      		std Y+6,r25
 9765 3e86 8D83      		std Y+5,r24
 963:lp_solve_5.5/lp_presolve.c ****   SOSrec   *SOS;
 964:lp_solve_5.5/lp_presolve.c **** 
 965:lp_solve_5.5/lp_presolve.c ****   /* Is there anything to do? */
 966:lp_solve_5.5/lp_presolve.c ****   i = ii = SOS_count(lp);
 9766               		.loc 2 966 0
 9767 3e88 8F81      		ldd r24,Y+7
 9768 3e8a 9885      		ldd r25,Y+8
 9769 3e8c 0E94 0000 		call SOS_count
 9770 3e90 9C87      		std Y+12,r25
 9771 3e92 8B87      		std Y+11,r24
 9772 3e94 8B85      		ldd r24,Y+11
 9773 3e96 9C85      		ldd r25,Y+12
 9774 3e98 9A83      		std Y+2,r25
 9775 3e9a 8983      		std Y+1,r24
 967:lp_solve_5.5/lp_presolve.c ****   if(ii == 0)
 9776               		.loc 2 967 0
 9777 3e9c 8B85      		ldd r24,Y+11
 9778 3e9e 9C85      		ldd r25,Y+12
 9779 3ea0 892B      		or r24,r25
 9780 3ea2 01F4      		brne .L339
 968:lp_solve_5.5/lp_presolve.c ****     return( status );
 9781               		.loc 2 968 0
 9782 3ea4 8D81      		ldd r24,Y+5
 9783 3ea6 9E81      		ldd r25,Y+6
 9784 3ea8 00C0      		rjmp .L369
 9785               	.L339:
 969:lp_solve_5.5/lp_presolve.c **** 
 970:lp_solve_5.5/lp_presolve.c ****   /* Allocate working member list */
 971:lp_solve_5.5/lp_presolve.c ****   if(!allocINT(lp, &fixed, lp->columns+1, FALSE) )
 9786               		.loc 2 971 0
 9787 3eaa 8F81      		ldd r24,Y+7
 9788 3eac 9885      		ldd r25,Y+8
 9789 3eae 8451      		subi r24,20
 9790 3eb0 9E4F      		sbci r25,-2
 9791 3eb2 FC01      		movw r30,r24
 9792 3eb4 8081      		ld r24,Z
 9793 3eb6 9181      		ldd r25,Z+1
 9794 3eb8 AC01      		movw r20,r24
 9795 3eba 4F5F      		subi r20,-1
 9796 3ebc 5F4F      		sbci r21,-1
 9797 3ebe BE01      		movw r22,r28
 9798 3ec0 6D5E      		subi r22,-19
 9799 3ec2 7F4F      		sbci r23,-1
 9800 3ec4 8F81      		ldd r24,Y+7
 9801 3ec6 9885      		ldd r25,Y+8
 9802 3ec8 20E0      		ldi r18,0
 9803 3eca 0E94 0000 		call allocINT
 9804 3ece 8823      		tst r24
 9805 3ed0 01F0      		breq .+2
 9806 3ed2 00C0      		rjmp .L342
 972:lp_solve_5.5/lp_presolve.c ****     return( lp->spx_status );
 9807               		.loc 2 972 0
 9808 3ed4 8F81      		ldd r24,Y+7
 9809 3ed6 9885      		ldd r25,Y+8
 9810 3ed8 8A5F      		subi r24,-6
 9811 3eda 9D4F      		sbci r25,-3
 9812 3edc FC01      		movw r30,r24
 9813 3ede 8081      		ld r24,Z
 9814 3ee0 9181      		ldd r25,Z+1
 9815 3ee2 00C0      		rjmp .L369
 9816               	.L363:
 973:lp_solve_5.5/lp_presolve.c **** 
 974:lp_solve_5.5/lp_presolve.c ****   /* Check if we have SOS'es that are already satisfied or fixable/satisfiable */
 975:lp_solve_5.5/lp_presolve.c ****   while(i > 0) {
 976:lp_solve_5.5/lp_presolve.c ****     SOS = lp->SOS->sos_list[i-1];
 9817               		.loc 2 976 0
 9818 3ee4 8F81      		ldd r24,Y+7
 9819 3ee6 9885      		ldd r25,Y+8
 9820 3ee8 8256      		subi r24,98
 9821 3eea 9D4F      		sbci r25,-3
 9822 3eec FC01      		movw r30,r24
 9823 3eee 8081      		ld r24,Z
 9824 3ef0 9181      		ldd r25,Z+1
 9825 3ef2 FC01      		movw r30,r24
 9826 3ef4 2281      		ldd r18,Z+2
 9827 3ef6 3381      		ldd r19,Z+3
 9828 3ef8 8981      		ldd r24,Y+1
 9829 3efa 9A81      		ldd r25,Y+2
 9830 3efc 8150      		subi r24,1
 9831 3efe 9048      		sbci r25,-128
 9832 3f00 880F      		lsl r24
 9833 3f02 991F      		rol r25
 9834 3f04 820F      		add r24,r18
 9835 3f06 931F      		adc r25,r19
 9836 3f08 FC01      		movw r30,r24
 9837 3f0a 8081      		ld r24,Z
 9838 3f0c 9181      		ldd r25,Z+1
 9839 3f0e 9E87      		std Y+14,r25
 9840 3f10 8D87      		std Y+13,r24
 977:lp_solve_5.5/lp_presolve.c ****     kk = SOS->members[0];
 9841               		.loc 2 977 0
 9842 3f12 8D85      		ldd r24,Y+13
 9843 3f14 9E85      		ldd r25,Y+14
 9844 3f16 FC01      		movw r30,r24
 9845 3f18 8585      		ldd r24,Z+13
 9846 3f1a 9685      		ldd r25,Z+14
 9847 3f1c FC01      		movw r30,r24
 9848 3f1e 8081      		ld r24,Z
 9849 3f20 9181      		ldd r25,Z+1
 9850 3f22 988B      		std Y+16,r25
 9851 3f24 8F87      		std Y+15,r24
 978:lp_solve_5.5/lp_presolve.c ****     fixed[0] = 0;
 9852               		.loc 2 978 0
 9853 3f26 8B89      		ldd r24,Y+19
 9854 3f28 9C89      		ldd r25,Y+20
 9855 3f2a FC01      		movw r30,r24
 9856 3f2c 1182      		std Z+1,__zero_reg__
 9857 3f2e 1082      		st Z,__zero_reg__
 979:lp_solve_5.5/lp_presolve.c ****     for(k = 1; k <= kk; k++) {
 9858               		.loc 2 979 0
 9859 3f30 81E0      		ldi r24,lo8(1)
 9860 3f32 90E0      		ldi r25,0
 9861 3f34 9C83      		std Y+4,r25
 9862 3f36 8B83      		std Y+3,r24
 9863 3f38 00C0      		rjmp .L343
 9864               	.L347:
 980:lp_solve_5.5/lp_presolve.c ****       j = SOS->members[k];
 9865               		.loc 2 980 0
 9866 3f3a 8D85      		ldd r24,Y+13
 9867 3f3c 9E85      		ldd r25,Y+14
 9868 3f3e FC01      		movw r30,r24
 9869 3f40 2585      		ldd r18,Z+13
 9870 3f42 3685      		ldd r19,Z+14
 9871 3f44 8B81      		ldd r24,Y+3
 9872 3f46 9C81      		ldd r25,Y+4
 9873 3f48 880F      		lsl r24
 9874 3f4a 991F      		rol r25
 9875 3f4c 820F      		add r24,r18
 9876 3f4e 931F      		adc r25,r19
 9877 3f50 FC01      		movw r30,r24
 9878 3f52 8081      		ld r24,Z
 9879 3f54 9181      		ldd r25,Z+1
 9880 3f56 9A8B      		std Y+18,r25
 9881 3f58 898B      		std Y+17,r24
 981:lp_solve_5.5/lp_presolve.c ****       if((get_lowbo(lp, j) > 0) && !is_semicont(lp, j)) {
 9882               		.loc 2 981 0
 9883 3f5a 2989      		ldd r18,Y+17
 9884 3f5c 3A89      		ldd r19,Y+18
 9885 3f5e 8F81      		ldd r24,Y+7
 9886 3f60 9885      		ldd r25,Y+8
 9887 3f62 B901      		movw r22,r18
 9888 3f64 0E94 0000 		call get_lowbo
 9889 3f68 DC01      		movw r26,r24
 9890 3f6a CB01      		movw r24,r22
 9891 3f6c 20E0      		ldi r18,0
 9892 3f6e 30E0      		ldi r19,0
 9893 3f70 A901      		movw r20,r18
 9894 3f72 BC01      		movw r22,r24
 9895 3f74 CD01      		movw r24,r26
 9896 3f76 0E94 0000 		call __gtsf2
 9897 3f7a 1816      		cp __zero_reg__,r24
 9898 3f7c 04F4      		brge .L344
 9899               		.loc 2 981 0 is_stmt 0 discriminator 1
 9900 3f7e 2989      		ldd r18,Y+17
 9901 3f80 3A89      		ldd r19,Y+18
 9902 3f82 8F81      		ldd r24,Y+7
 9903 3f84 9885      		ldd r25,Y+8
 9904 3f86 B901      		movw r22,r18
 9905 3f88 0E94 0000 		call is_semicont
 9906 3f8c 8823      		tst r24
 9907 3f8e 01F4      		brne .L344
 982:lp_solve_5.5/lp_presolve.c ****         fixed[++fixed[0]] = k;
 9908               		.loc 2 982 0 is_stmt 1
 9909 3f90 2B89      		ldd r18,Y+19
 9910 3f92 3C89      		ldd r19,Y+20
 9911 3f94 8B89      		ldd r24,Y+19
 9912 3f96 9C89      		ldd r25,Y+20
 9913 3f98 FC01      		movw r30,r24
 9914 3f9a 4081      		ld r20,Z
 9915 3f9c 5181      		ldd r21,Z+1
 9916 3f9e 4F5F      		subi r20,-1
 9917 3fa0 5F4F      		sbci r21,-1
 9918 3fa2 FC01      		movw r30,r24
 9919 3fa4 5183      		std Z+1,r21
 9920 3fa6 4083      		st Z,r20
 9921 3fa8 FC01      		movw r30,r24
 9922 3faa 8081      		ld r24,Z
 9923 3fac 9181      		ldd r25,Z+1
 9924 3fae 880F      		lsl r24
 9925 3fb0 991F      		rol r25
 9926 3fb2 820F      		add r24,r18
 9927 3fb4 931F      		adc r25,r19
 9928 3fb6 2B81      		ldd r18,Y+3
 9929 3fb8 3C81      		ldd r19,Y+4
 9930 3fba FC01      		movw r30,r24
 9931 3fbc 3183      		std Z+1,r19
 9932 3fbe 2083      		st Z,r18
 983:lp_solve_5.5/lp_presolve.c ****         /* Abort if we have identified SOS infeasibility */
 984:lp_solve_5.5/lp_presolve.c ****         if(fixed[0] > SOS->type) {
 9933               		.loc 2 984 0
 9934 3fc0 8B89      		ldd r24,Y+19
 9935 3fc2 9C89      		ldd r25,Y+20
 9936 3fc4 FC01      		movw r30,r24
 9937 3fc6 2081      		ld r18,Z
 9938 3fc8 3181      		ldd r19,Z+1
 9939 3fca 8D85      		ldd r24,Y+13
 9940 3fcc 9E85      		ldd r25,Y+14
 9941 3fce FC01      		movw r30,r24
 9942 3fd0 8681      		ldd r24,Z+6
 9943 3fd2 9781      		ldd r25,Z+7
 9944 3fd4 8217      		cp r24,r18
 9945 3fd6 9307      		cpc r25,r19
 9946 3fd8 04F4      		brge .L344
 985:lp_solve_5.5/lp_presolve.c ****           status = presolve_setstatus(psdata, INFEASIBLE);
 9947               		.loc 2 985 0
 9948 3fda 8F89      		ldd r24,Y+23
 9949 3fdc 988D      		ldd r25,Y+24
 9950 3fde 20E0      		ldi r18,lo8(.LC21)
 9951 3fe0 30E0      		ldi r19,hi8(.LC21)
 9952 3fe2 49ED      		ldi r20,lo8(-39)
 9953 3fe4 53E0      		ldi r21,lo8(3)
 9954 3fe6 62E0      		ldi r22,lo8(2)
 9955 3fe8 70E0      		ldi r23,0
 9956 3fea 0E94 0000 		call presolve_setstatusex
 9957 3fee 9E83      		std Y+6,r25
 9958 3ff0 8D83      		std Y+5,r24
 986:lp_solve_5.5/lp_presolve.c ****           goto Done;
 9959               		.loc 2 986 0
 9960 3ff2 00C0      		rjmp .L346
 9961               	.L344:
 979:lp_solve_5.5/lp_presolve.c ****       j = SOS->members[k];
 9962               		.loc 2 979 0 discriminator 2
 9963 3ff4 8B81      		ldd r24,Y+3
 9964 3ff6 9C81      		ldd r25,Y+4
 9965 3ff8 0196      		adiw r24,1
 9966 3ffa 9C83      		std Y+4,r25
 9967 3ffc 8B83      		std Y+3,r24
 9968               	.L343:
 979:lp_solve_5.5/lp_presolve.c ****       j = SOS->members[k];
 9969               		.loc 2 979 0 is_stmt 0 discriminator 1
 9970 3ffe 2B81      		ldd r18,Y+3
 9971 4000 3C81      		ldd r19,Y+4
 9972 4002 8F85      		ldd r24,Y+15
 9973 4004 9889      		ldd r25,Y+16
 9974 4006 8217      		cp r24,r18
 9975 4008 9307      		cpc r25,r19
 9976 400a 04F0      		brlt .+2
 9977 400c 00C0      		rjmp .L347
 987:lp_solve_5.5/lp_presolve.c ****         }
 988:lp_solve_5.5/lp_presolve.c ****       }
 989:lp_solve_5.5/lp_presolve.c ****     }
 990:lp_solve_5.5/lp_presolve.c ****     /* If there were an exact number of non-zero SOS members, check their sequentiality */
 991:lp_solve_5.5/lp_presolve.c ****     if(fixed[0] == SOS->type) {
 9978               		.loc 2 991 0 is_stmt 1
 9979 400e 8B89      		ldd r24,Y+19
 9980 4010 9C89      		ldd r25,Y+20
 9981 4012 FC01      		movw r30,r24
 9982 4014 2081      		ld r18,Z
 9983 4016 3181      		ldd r19,Z+1
 9984 4018 8D85      		ldd r24,Y+13
 9985 401a 9E85      		ldd r25,Y+14
 9986 401c FC01      		movw r30,r24
 9987 401e 8681      		ldd r24,Z+6
 9988 4020 9781      		ldd r25,Z+7
 9989 4022 2817      		cp r18,r24
 9990 4024 3907      		cpc r19,r25
 9991 4026 01F0      		breq .+2
 9992 4028 00C0      		rjmp .L348
 992:lp_solve_5.5/lp_presolve.c ****       /* Check sequentiality of members with non-zero lower bounds */
 993:lp_solve_5.5/lp_presolve.c ****       for(k = 2; k <= fixed[0]; k++) {
 9993               		.loc 2 993 0
 9994 402a 82E0      		ldi r24,lo8(2)
 9995 402c 90E0      		ldi r25,0
 9996 402e 9C83      		std Y+4,r25
 9997 4030 8B83      		std Y+3,r24
 9998 4032 00C0      		rjmp .L349
 9999               	.L351:
 994:lp_solve_5.5/lp_presolve.c ****         if(fixed[k] != fixed[k-1]+1) {
 10000               		.loc 2 994 0
 10001 4034 2B89      		ldd r18,Y+19
 10002 4036 3C89      		ldd r19,Y+20
 10003 4038 8B81      		ldd r24,Y+3
 10004 403a 9C81      		ldd r25,Y+4
 10005 403c 880F      		lsl r24
 10006 403e 991F      		rol r25
 10007 4040 820F      		add r24,r18
 10008 4042 931F      		adc r25,r19
 10009 4044 FC01      		movw r30,r24
 10010 4046 2081      		ld r18,Z
 10011 4048 3181      		ldd r19,Z+1
 10012 404a 4B89      		ldd r20,Y+19
 10013 404c 5C89      		ldd r21,Y+20
 10014 404e 8B81      		ldd r24,Y+3
 10015 4050 9C81      		ldd r25,Y+4
 10016 4052 8150      		subi r24,1
 10017 4054 9048      		sbci r25,-128
 10018 4056 880F      		lsl r24
 10019 4058 991F      		rol r25
 10020 405a 840F      		add r24,r20
 10021 405c 951F      		adc r25,r21
 10022 405e FC01      		movw r30,r24
 10023 4060 8081      		ld r24,Z
 10024 4062 9181      		ldd r25,Z+1
 10025 4064 0196      		adiw r24,1
 10026 4066 2817      		cp r18,r24
 10027 4068 3907      		cpc r19,r25
 10028 406a 01F0      		breq .L350
 995:lp_solve_5.5/lp_presolve.c ****           status = presolve_setstatus(psdata, INFEASIBLE);
 10029               		.loc 2 995 0
 10030 406c 8F89      		ldd r24,Y+23
 10031 406e 988D      		ldd r25,Y+24
 10032 4070 20E0      		ldi r18,lo8(.LC21)
 10033 4072 30E0      		ldi r19,hi8(.LC21)
 10034 4074 43EE      		ldi r20,lo8(-29)
 10035 4076 53E0      		ldi r21,lo8(3)
 10036 4078 62E0      		ldi r22,lo8(2)
 10037 407a 70E0      		ldi r23,0
 10038 407c 0E94 0000 		call presolve_setstatusex
 10039 4080 9E83      		std Y+6,r25
 10040 4082 8D83      		std Y+5,r24
 996:lp_solve_5.5/lp_presolve.c ****           goto Done;
 10041               		.loc 2 996 0
 10042 4084 00C0      		rjmp .L346
 10043               	.L350:
 993:lp_solve_5.5/lp_presolve.c ****         if(fixed[k] != fixed[k-1]+1) {
 10044               		.loc 2 993 0 discriminator 2
 10045 4086 8B81      		ldd r24,Y+3
 10046 4088 9C81      		ldd r25,Y+4
 10047 408a 0196      		adiw r24,1
 10048 408c 9C83      		std Y+4,r25
 10049 408e 8B83      		std Y+3,r24
 10050               	.L349:
 993:lp_solve_5.5/lp_presolve.c ****         if(fixed[k] != fixed[k-1]+1) {
 10051               		.loc 2 993 0 is_stmt 0 discriminator 1
 10052 4090 8B89      		ldd r24,Y+19
 10053 4092 9C89      		ldd r25,Y+20
 10054 4094 FC01      		movw r30,r24
 10055 4096 2081      		ld r18,Z
 10056 4098 3181      		ldd r19,Z+1
 10057 409a 8B81      		ldd r24,Y+3
 10058 409c 9C81      		ldd r25,Y+4
 10059 409e 2817      		cp r18,r24
 10060 40a0 3907      		cpc r19,r25
 10061 40a2 04F4      		brge .L351
 997:lp_solve_5.5/lp_presolve.c ****         }
 998:lp_solve_5.5/lp_presolve.c ****       }
 999:lp_solve_5.5/lp_presolve.c ****       /* Fix other member variables to zero, if necessary */
1000:lp_solve_5.5/lp_presolve.c ****       for(k = kk; k > 0; k--) {
 10062               		.loc 2 1000 0 is_stmt 1
 10063 40a4 8F85      		ldd r24,Y+15
 10064 40a6 9889      		ldd r25,Y+16
 10065 40a8 9C83      		std Y+4,r25
 10066 40aa 8B83      		std Y+3,r24
 10067 40ac 00C0      		rjmp .L352
 10068               	.L356:
1001:lp_solve_5.5/lp_presolve.c ****         j = SOS->members[k];
 10069               		.loc 2 1001 0
 10070 40ae 8D85      		ldd r24,Y+13
 10071 40b0 9E85      		ldd r25,Y+14
 10072 40b2 FC01      		movw r30,r24
 10073 40b4 2585      		ldd r18,Z+13
 10074 40b6 3685      		ldd r19,Z+14
 10075 40b8 8B81      		ldd r24,Y+3
 10076 40ba 9C81      		ldd r25,Y+4
 10077 40bc 880F      		lsl r24
 10078 40be 991F      		rol r25
 10079 40c0 820F      		add r24,r18
 10080 40c2 931F      		adc r25,r19
 10081 40c4 FC01      		movw r30,r24
 10082 40c6 8081      		ld r24,Z
 10083 40c8 9181      		ldd r25,Z+1
 10084 40ca 9A8B      		std Y+18,r25
 10085 40cc 898B      		std Y+17,r24
1002:lp_solve_5.5/lp_presolve.c ****         if((get_lowbo(lp, j) > 0) && !is_semicont(lp, j))
 10086               		.loc 2 1002 0
 10087 40ce 2989      		ldd r18,Y+17
 10088 40d0 3A89      		ldd r19,Y+18
 10089 40d2 8F81      		ldd r24,Y+7
 10090 40d4 9885      		ldd r25,Y+8
 10091 40d6 B901      		movw r22,r18
 10092 40d8 0E94 0000 		call get_lowbo
 10093 40dc DC01      		movw r26,r24
 10094 40de CB01      		movw r24,r22
 10095 40e0 20E0      		ldi r18,0
 10096 40e2 30E0      		ldi r19,0
 10097 40e4 A901      		movw r20,r18
 10098 40e6 BC01      		movw r22,r24
 10099 40e8 CD01      		movw r24,r26
 10100 40ea 0E94 0000 		call __gtsf2
 10101 40ee 1816      		cp __zero_reg__,r24
 10102 40f0 04F4      		brge .L353
 10103               		.loc 2 1002 0 is_stmt 0 discriminator 1
 10104 40f2 2989      		ldd r18,Y+17
 10105 40f4 3A89      		ldd r19,Y+18
 10106 40f6 8F81      		ldd r24,Y+7
 10107 40f8 9885      		ldd r25,Y+8
 10108 40fa B901      		movw r22,r18
 10109 40fc 0E94 0000 		call is_semicont
 10110 4100 8823      		tst r24
 10111 4102 01F0      		breq .L372
 10112               	.L353:
1003:lp_solve_5.5/lp_presolve.c ****           continue;
1004:lp_solve_5.5/lp_presolve.c ****         if(!presolve_colfix(psdata, j, 0.0, AUTOMATIC, &iBoundTighten)) {
 10113               		.loc 2 1004 0 is_stmt 1
 10114 4104 9E01      		movw r18,r28
 10115 4106 2B5E      		subi r18,-21
 10116 4108 3F4F      		sbci r19,-1
 10117 410a 6989      		ldd r22,Y+17
 10118 410c 7A89      		ldd r23,Y+18
 10119 410e 8F89      		ldd r24,Y+23
 10120 4110 988D      		ldd r25,Y+24
 10121 4112 7901      		movw r14,r18
 10122 4114 02E0      		ldi r16,lo8(2)
 10123 4116 20E0      		ldi r18,0
 10124 4118 30E0      		ldi r19,0
 10125 411a A901      		movw r20,r18
 10126 411c 0E94 0000 		call presolve_colfix
 10127 4120 8823      		tst r24
 10128 4122 01F4      		brne .L355
1005:lp_solve_5.5/lp_presolve.c ****           status = presolve_setstatus(psdata, INFEASIBLE);
 10129               		.loc 2 1005 0
 10130 4124 8F89      		ldd r24,Y+23
 10131 4126 988D      		ldd r25,Y+24
 10132 4128 20E0      		ldi r18,lo8(.LC21)
 10133 412a 30E0      		ldi r19,hi8(.LC21)
 10134 412c 4DEE      		ldi r20,lo8(-19)
 10135 412e 53E0      		ldi r21,lo8(3)
 10136 4130 62E0      		ldi r22,lo8(2)
 10137 4132 70E0      		ldi r23,0
 10138 4134 0E94 0000 		call presolve_setstatusex
 10139 4138 9E83      		std Y+6,r25
 10140 413a 8D83      		std Y+5,r24
1006:lp_solve_5.5/lp_presolve.c ****           goto Done;
 10141               		.loc 2 1006 0
 10142 413c 00C0      		rjmp .L346
 10143               	.L372:
1003:lp_solve_5.5/lp_presolve.c ****           continue;
 10144               		.loc 2 1003 0
 10145 413e 0000      		nop
 10146               	.L355:
1000:lp_solve_5.5/lp_presolve.c ****         j = SOS->members[k];
 10147               		.loc 2 1000 0 discriminator 2
 10148 4140 8B81      		ldd r24,Y+3
 10149 4142 9C81      		ldd r25,Y+4
 10150 4144 0197      		sbiw r24,1
 10151 4146 9C83      		std Y+4,r25
 10152 4148 8B83      		std Y+3,r24
 10153               	.L352:
1000:lp_solve_5.5/lp_presolve.c ****         j = SOS->members[k];
 10154               		.loc 2 1000 0 is_stmt 0 discriminator 1
 10155 414a 8B81      		ldd r24,Y+3
 10156 414c 9C81      		ldd r25,Y+4
 10157 414e 1816      		cp __zero_reg__,r24
 10158 4150 1906      		cpc __zero_reg__,r25
 10159 4152 04F4      		brge .+2
 10160 4154 00C0      		rjmp .L356
1007:lp_solve_5.5/lp_presolve.c ****         }
1008:lp_solve_5.5/lp_presolve.c ****       }
1009:lp_solve_5.5/lp_presolve.c ****       /* Remove the SOS */
1010:lp_solve_5.5/lp_presolve.c ****       delete_SOSrec(lp->SOS, i /* , FALSE */);
 10161               		.loc 2 1010 0 is_stmt 1
 10162 4156 8F81      		ldd r24,Y+7
 10163 4158 9885      		ldd r25,Y+8
 10164 415a 8256      		subi r24,98
 10165 415c 9D4F      		sbci r25,-3
 10166 415e FC01      		movw r30,r24
 10167 4160 8081      		ld r24,Z
 10168 4162 9181      		ldd r25,Z+1
 10169 4164 2981      		ldd r18,Y+1
 10170 4166 3A81      		ldd r19,Y+2
 10171 4168 B901      		movw r22,r18
 10172 416a 0E94 0000 		call delete_SOSrec
 10173 416e 00C0      		rjmp .L357
 10174               	.L348:
1011:lp_solve_5.5/lp_presolve.c ****     }
1012:lp_solve_5.5/lp_presolve.c ****     /* Otherwise, try to fix variables outside the SOS type window */
1013:lp_solve_5.5/lp_presolve.c ****     else if(fixed[0] > 0) {
 10175               		.loc 2 1013 0
 10176 4170 8B89      		ldd r24,Y+19
 10177 4172 9C89      		ldd r25,Y+20
 10178 4174 FC01      		movw r30,r24
 10179 4176 8081      		ld r24,Z
 10180 4178 9181      		ldd r25,Z+1
 10181 417a 1816      		cp __zero_reg__,r24
 10182 417c 1906      		cpc __zero_reg__,r25
 10183 417e 04F0      		brlt .+2
 10184 4180 00C0      		rjmp .L357
1014:lp_solve_5.5/lp_presolve.c ****       for(k = kk; k > 0; k--) {
 10185               		.loc 2 1014 0
 10186 4182 8F85      		ldd r24,Y+15
 10187 4184 9889      		ldd r25,Y+16
 10188 4186 9C83      		std Y+4,r25
 10189 4188 8B83      		std Y+3,r24
 10190 418a 00C0      		rjmp .L358
 10191               	.L362:
1015:lp_solve_5.5/lp_presolve.c ****         if((k > fixed[fixed[0]]-SOS->type) && /* After leading entries   */
 10192               		.loc 2 1015 0
 10193 418c 2B89      		ldd r18,Y+19
 10194 418e 3C89      		ldd r19,Y+20
 10195 4190 8B89      		ldd r24,Y+19
 10196 4192 9C89      		ldd r25,Y+20
 10197 4194 FC01      		movw r30,r24
 10198 4196 8081      		ld r24,Z
 10199 4198 9181      		ldd r25,Z+1
 10200 419a 880F      		lsl r24
 10201 419c 991F      		rol r25
 10202 419e 820F      		add r24,r18
 10203 41a0 931F      		adc r25,r19
 10204 41a2 FC01      		movw r30,r24
 10205 41a4 2081      		ld r18,Z
 10206 41a6 3181      		ldd r19,Z+1
 10207 41a8 8D85      		ldd r24,Y+13
 10208 41aa 9E85      		ldd r25,Y+14
 10209 41ac FC01      		movw r30,r24
 10210 41ae 8681      		ldd r24,Z+6
 10211 41b0 9781      		ldd r25,Z+7
 10212 41b2 281B      		sub r18,r24
 10213 41b4 390B      		sbc r19,r25
 10214 41b6 8B81      		ldd r24,Y+3
 10215 41b8 9C81      		ldd r25,Y+4
 10216 41ba 2817      		cp r18,r24
 10217 41bc 3907      		cpc r19,r25
 10218 41be 04F4      		brge .L359
1016:lp_solve_5.5/lp_presolve.c ****            (k < fixed[1]+SOS->type))          /* Before trailing entries */
 10219               		.loc 2 1016 0 discriminator 1
 10220 41c0 8B89      		ldd r24,Y+19
 10221 41c2 9C89      		ldd r25,Y+20
 10222 41c4 0296      		adiw r24,2
 10223 41c6 FC01      		movw r30,r24
 10224 41c8 2081      		ld r18,Z
 10225 41ca 3181      		ldd r19,Z+1
 10226 41cc 8D85      		ldd r24,Y+13
 10227 41ce 9E85      		ldd r25,Y+14
 10228 41d0 FC01      		movw r30,r24
 10229 41d2 8681      		ldd r24,Z+6
 10230 41d4 9781      		ldd r25,Z+7
 10231 41d6 280F      		add r18,r24
 10232 41d8 391F      		adc r19,r25
1015:lp_solve_5.5/lp_presolve.c ****         if((k > fixed[fixed[0]]-SOS->type) && /* After leading entries   */
 10233               		.loc 2 1015 0 discriminator 1
 10234 41da 8B81      		ldd r24,Y+3
 10235 41dc 9C81      		ldd r25,Y+4
 10236 41de 8217      		cp r24,r18
 10237 41e0 9307      		cpc r25,r19
 10238 41e2 04F4      		brge .+2
 10239 41e4 00C0      		rjmp .L373
 10240               	.L359:
1017:lp_solve_5.5/lp_presolve.c ****           continue;
1018:lp_solve_5.5/lp_presolve.c ****         j = SOS->members[k];
 10241               		.loc 2 1018 0
 10242 41e6 8D85      		ldd r24,Y+13
 10243 41e8 9E85      		ldd r25,Y+14
 10244 41ea FC01      		movw r30,r24
 10245 41ec 2585      		ldd r18,Z+13
 10246 41ee 3685      		ldd r19,Z+14
 10247 41f0 8B81      		ldd r24,Y+3
 10248 41f2 9C81      		ldd r25,Y+4
 10249 41f4 880F      		lsl r24
 10250 41f6 991F      		rol r25
 10251 41f8 820F      		add r24,r18
 10252 41fa 931F      		adc r25,r19
 10253 41fc FC01      		movw r30,r24
 10254 41fe 8081      		ld r24,Z
 10255 4200 9181      		ldd r25,Z+1
 10256 4202 9A8B      		std Y+18,r25
 10257 4204 898B      		std Y+17,r24
1019:lp_solve_5.5/lp_presolve.c ****         SOS_member_delete(lp->SOS, i, j);
 10258               		.loc 2 1019 0
 10259 4206 8F81      		ldd r24,Y+7
 10260 4208 9885      		ldd r25,Y+8
 10261 420a 8256      		subi r24,98
 10262 420c 9D4F      		sbci r25,-3
 10263 420e FC01      		movw r30,r24
 10264 4210 8081      		ld r24,Z
 10265 4212 9181      		ldd r25,Z+1
 10266 4214 4989      		ldd r20,Y+17
 10267 4216 5A89      		ldd r21,Y+18
 10268 4218 2981      		ldd r18,Y+1
 10269 421a 3A81      		ldd r19,Y+2
 10270 421c B901      		movw r22,r18
 10271 421e 0E94 0000 		call SOS_member_delete
1020:lp_solve_5.5/lp_presolve.c ****         /* if(get_upbo(lp, j) - get_lowbo(lp, j) < lp->epsprimal) */
1021:lp_solve_5.5/lp_presolve.c ****         if(is_fixedvar(lp, nrows+j))
 10272               		.loc 2 1021 0
 10273 4222 2985      		ldd r18,Y+9
 10274 4224 3A85      		ldd r19,Y+10
 10275 4226 8989      		ldd r24,Y+17
 10276 4228 9A89      		ldd r25,Y+18
 10277 422a 280F      		add r18,r24
 10278 422c 391F      		adc r19,r25
 10279 422e 8F81      		ldd r24,Y+7
 10280 4230 9885      		ldd r25,Y+8
 10281 4232 B901      		movw r22,r18
 10282 4234 0E94 0000 		call is_fixedvar
 10283 4238 8823      		tst r24
 10284 423a 01F4      		brne .L374
1022:lp_solve_5.5/lp_presolve.c ****           continue;
1023:lp_solve_5.5/lp_presolve.c ****         if(!presolve_colfix(psdata, j, 0.0, AUTOMATIC, &iBoundTighten)) {
 10285               		.loc 2 1023 0
 10286 423c 9E01      		movw r18,r28
 10287 423e 2B5E      		subi r18,-21
 10288 4240 3F4F      		sbci r19,-1
 10289 4242 6989      		ldd r22,Y+17
 10290 4244 7A89      		ldd r23,Y+18
 10291 4246 8F89      		ldd r24,Y+23
 10292 4248 988D      		ldd r25,Y+24
 10293 424a 7901      		movw r14,r18
 10294 424c 02E0      		ldi r16,lo8(2)
 10295 424e 20E0      		ldi r18,0
 10296 4250 30E0      		ldi r19,0
 10297 4252 A901      		movw r20,r18
 10298 4254 0E94 0000 		call presolve_colfix
 10299 4258 8823      		tst r24
 10300 425a 01F4      		brne .L360
1024:lp_solve_5.5/lp_presolve.c ****           status = presolve_setstatus(psdata, INFEASIBLE);
 10301               		.loc 2 1024 0
 10302 425c 8F89      		ldd r24,Y+23
 10303 425e 988D      		ldd r25,Y+24
 10304 4260 20E0      		ldi r18,lo8(.LC21)
 10305 4262 30E0      		ldi r19,hi8(.LC21)
 10306 4264 40E0      		ldi r20,0
 10307 4266 54E0      		ldi r21,lo8(4)
 10308 4268 62E0      		ldi r22,lo8(2)
 10309 426a 70E0      		ldi r23,0
 10310 426c 0E94 0000 		call presolve_setstatusex
 10311 4270 9E83      		std Y+6,r25
 10312 4272 8D83      		std Y+5,r24
1025:lp_solve_5.5/lp_presolve.c ****           goto Done;
 10313               		.loc 2 1025 0
 10314 4274 00C0      		rjmp .L346
 10315               	.L373:
1017:lp_solve_5.5/lp_presolve.c ****         j = SOS->members[k];
 10316               		.loc 2 1017 0
 10317 4276 0000      		nop
 10318 4278 00C0      		rjmp .L360
 10319               	.L374:
1022:lp_solve_5.5/lp_presolve.c ****         if(!presolve_colfix(psdata, j, 0.0, AUTOMATIC, &iBoundTighten)) {
 10320               		.loc 2 1022 0
 10321 427a 0000      		nop
 10322               	.L360:
1014:lp_solve_5.5/lp_presolve.c ****         if((k > fixed[fixed[0]]-SOS->type) && /* After leading entries   */
 10323               		.loc 2 1014 0 discriminator 2
 10324 427c 8B81      		ldd r24,Y+3
 10325 427e 9C81      		ldd r25,Y+4
 10326 4280 0197      		sbiw r24,1
 10327 4282 9C83      		std Y+4,r25
 10328 4284 8B83      		std Y+3,r24
 10329               	.L358:
1014:lp_solve_5.5/lp_presolve.c ****         if((k > fixed[fixed[0]]-SOS->type) && /* After leading entries   */
 10330               		.loc 2 1014 0 is_stmt 0 discriminator 1
 10331 4286 8B81      		ldd r24,Y+3
 10332 4288 9C81      		ldd r25,Y+4
 10333 428a 1816      		cp __zero_reg__,r24
 10334 428c 1906      		cpc __zero_reg__,r25
 10335 428e 04F4      		brge .+2
 10336 4290 00C0      		rjmp .L362
 10337               	.L357:
1026:lp_solve_5.5/lp_presolve.c ****         }
1027:lp_solve_5.5/lp_presolve.c ****       }
1028:lp_solve_5.5/lp_presolve.c ****     }
1029:lp_solve_5.5/lp_presolve.c ****     i--;
 10338               		.loc 2 1029 0 is_stmt 1
 10339 4292 8981      		ldd r24,Y+1
 10340 4294 9A81      		ldd r25,Y+2
 10341 4296 0197      		sbiw r24,1
 10342 4298 9A83      		std Y+2,r25
 10343 429a 8983      		std Y+1,r24
 10344               	.L342:
 975:lp_solve_5.5/lp_presolve.c ****     SOS = lp->SOS->sos_list[i-1];
 10345               		.loc 2 975 0
 10346 429c 8981      		ldd r24,Y+1
 10347 429e 9A81      		ldd r25,Y+2
 10348 42a0 1816      		cp __zero_reg__,r24
 10349 42a2 1906      		cpc __zero_reg__,r25
 10350 42a4 04F4      		brge .+2
 10351 42a6 00C0      		rjmp .L363
1030:lp_solve_5.5/lp_presolve.c ****   }
1031:lp_solve_5.5/lp_presolve.c **** 
1032:lp_solve_5.5/lp_presolve.c ****   /* Update the sparse member map if there were SOS deletions;
1033:lp_solve_5.5/lp_presolve.c ****      Remember that delete_SOSrec() above specified deferred updating! */
1034:lp_solve_5.5/lp_presolve.c ****   i = SOS_count(lp);
 10352               		.loc 2 1034 0
 10353 42a8 8F81      		ldd r24,Y+7
 10354 42aa 9885      		ldd r25,Y+8
 10355 42ac 0E94 0000 		call SOS_count
 10356 42b0 9A83      		std Y+2,r25
 10357 42b2 8983      		std Y+1,r24
1035:lp_solve_5.5/lp_presolve.c ****   if((i < ii) || (iBoundTighten > 0)) {
 10358               		.loc 2 1035 0
 10359 42b4 2981      		ldd r18,Y+1
 10360 42b6 3A81      		ldd r19,Y+2
 10361 42b8 8B85      		ldd r24,Y+11
 10362 42ba 9C85      		ldd r25,Y+12
 10363 42bc 2817      		cp r18,r24
 10364 42be 3907      		cpc r19,r25
 10365 42c0 04F0      		brlt .L364
 10366               		.loc 2 1035 0 is_stmt 0 discriminator 1
 10367 42c2 8D89      		ldd r24,Y+21
 10368 42c4 9E89      		ldd r25,Y+22
 10369 42c6 1816      		cp __zero_reg__,r24
 10370 42c8 1906      		cpc __zero_reg__,r25
 10371 42ca 04F4      		brge .L366
 10372               	.L364:
1036:lp_solve_5.5/lp_presolve.c ****     SOS_member_updatemap(lp->SOS);
 10373               		.loc 2 1036 0 is_stmt 1
 10374 42cc 8F81      		ldd r24,Y+7
 10375 42ce 9885      		ldd r25,Y+8
 10376 42d0 8256      		subi r24,98
 10377 42d2 9D4F      		sbci r25,-3
 10378 42d4 FC01      		movw r30,r24
 10379 42d6 8081      		ld r24,Z
 10380 42d8 9181      		ldd r25,Z+1
 10381 42da 0E94 0000 		call SOS_member_updatemap
1037:lp_solve_5.5/lp_presolve.c ****   }
1038:lp_solve_5.5/lp_presolve.c **** 
1039:lp_solve_5.5/lp_presolve.c ****   /* Update tag orders */
1040:lp_solve_5.5/lp_presolve.c ****   for(; i > 0; i--)
 10382               		.loc 2 1040 0
 10383 42de 00C0      		rjmp .L366
 10384               	.L367:
1041:lp_solve_5.5/lp_presolve.c ****     lp->SOS->sos_list[i-1]->tagorder = i;
 10385               		.loc 2 1041 0 discriminator 2
 10386 42e0 8F81      		ldd r24,Y+7
 10387 42e2 9885      		ldd r25,Y+8
 10388 42e4 8256      		subi r24,98
 10389 42e6 9D4F      		sbci r25,-3
 10390 42e8 FC01      		movw r30,r24
 10391 42ea 8081      		ld r24,Z
 10392 42ec 9181      		ldd r25,Z+1
 10393 42ee FC01      		movw r30,r24
 10394 42f0 2281      		ldd r18,Z+2
 10395 42f2 3381      		ldd r19,Z+3
 10396 42f4 8981      		ldd r24,Y+1
 10397 42f6 9A81      		ldd r25,Y+2
 10398 42f8 8150      		subi r24,1
 10399 42fa 9048      		sbci r25,-128
 10400 42fc 880F      		lsl r24
 10401 42fe 991F      		rol r25
 10402 4300 820F      		add r24,r18
 10403 4302 931F      		adc r25,r19
 10404 4304 FC01      		movw r30,r24
 10405 4306 8081      		ld r24,Z
 10406 4308 9181      		ldd r25,Z+1
 10407 430a 2981      		ldd r18,Y+1
 10408 430c 3A81      		ldd r19,Y+2
 10409 430e FC01      		movw r30,r24
 10410 4310 3383      		std Z+3,r19
 10411 4312 2283      		std Z+2,r18
1040:lp_solve_5.5/lp_presolve.c ****     lp->SOS->sos_list[i-1]->tagorder = i;
 10412               		.loc 2 1040 0 discriminator 2
 10413 4314 8981      		ldd r24,Y+1
 10414 4316 9A81      		ldd r25,Y+2
 10415 4318 0197      		sbiw r24,1
 10416 431a 9A83      		std Y+2,r25
 10417 431c 8983      		std Y+1,r24
 10418               	.L366:
1040:lp_solve_5.5/lp_presolve.c ****     lp->SOS->sos_list[i-1]->tagorder = i;
 10419               		.loc 2 1040 0 is_stmt 0 discriminator 1
 10420 431e 8981      		ldd r24,Y+1
 10421 4320 9A81      		ldd r25,Y+2
 10422 4322 1816      		cp __zero_reg__,r24
 10423 4324 1906      		cpc __zero_reg__,r25
 10424 4326 04F0      		brlt .L367
 10425               	.L346:
1042:lp_solve_5.5/lp_presolve.c **** 
1043:lp_solve_5.5/lp_presolve.c **** Done:
1044:lp_solve_5.5/lp_presolve.c ****   FREE(fixed);
 10426               		.loc 2 1044 0 is_stmt 1
 10427 4328 8B89      		ldd r24,Y+19
 10428 432a 9C89      		ldd r25,Y+20
 10429 432c 892B      		or r24,r25
 10430 432e 01F0      		breq .L368
 10431               		.loc 2 1044 0 is_stmt 0 discriminator 1
 10432 4330 8B89      		ldd r24,Y+19
 10433 4332 9C89      		ldd r25,Y+20
 10434 4334 0E94 0000 		call free
 10435 4338 1C8A      		std Y+20,__zero_reg__
 10436 433a 1B8A      		std Y+19,__zero_reg__
 10437               	.L368:
1045:lp_solve_5.5/lp_presolve.c ****   (*nb) += iBoundTighten;
 10438               		.loc 2 1045 0 is_stmt 1
 10439 433c 898D      		ldd r24,Y+25
 10440 433e 9A8D      		ldd r25,Y+26
 10441 4340 FC01      		movw r30,r24
 10442 4342 2081      		ld r18,Z
 10443 4344 3181      		ldd r19,Z+1
 10444 4346 8D89      		ldd r24,Y+21
 10445 4348 9E89      		ldd r25,Y+22
 10446 434a 280F      		add r18,r24
 10447 434c 391F      		adc r19,r25
 10448 434e 898D      		ldd r24,Y+25
 10449 4350 9A8D      		ldd r25,Y+26
 10450 4352 FC01      		movw r30,r24
 10451 4354 3183      		std Z+1,r19
 10452 4356 2083      		st Z,r18
1046:lp_solve_5.5/lp_presolve.c ****   (*nSum) += iBoundTighten;
 10453               		.loc 2 1046 0
 10454 4358 8B8D      		ldd r24,Y+27
 10455 435a 9C8D      		ldd r25,Y+28
 10456 435c FC01      		movw r30,r24
 10457 435e 2081      		ld r18,Z
 10458 4360 3181      		ldd r19,Z+1
 10459 4362 8D89      		ldd r24,Y+21
 10460 4364 9E89      		ldd r25,Y+22
 10461 4366 280F      		add r18,r24
 10462 4368 391F      		adc r19,r25
 10463 436a 8B8D      		ldd r24,Y+27
 10464 436c 9C8D      		ldd r25,Y+28
 10465 436e FC01      		movw r30,r24
 10466 4370 3183      		std Z+1,r19
 10467 4372 2083      		st Z,r18
1047:lp_solve_5.5/lp_presolve.c **** 
1048:lp_solve_5.5/lp_presolve.c ****   return( status );
 10468               		.loc 2 1048 0
 10469 4374 8D81      		ldd r24,Y+5
 10470 4376 9E81      		ldd r25,Y+6
 10471               	.L369:
 10472               	/* epilogue start */
1049:lp_solve_5.5/lp_presolve.c **** }
 10473               		.loc 2 1049 0 discriminator 1
 10474 4378 6C96      		adiw r28,28
 10475 437a 0FB6      		in __tmp_reg__,__SREG__
 10476 437c F894      		cli
 10477 437e DEBF      		out __SP_H__,r29
 10478 4380 0FBE      		out __SREG__,__tmp_reg__
 10479 4382 CDBF      		out __SP_L__,r28
 10480 4384 DF91      		pop r29
 10481 4386 CF91      		pop r28
 10482 4388 0F91      		pop r16
 10483 438a FF90      		pop r15
 10484 438c EF90      		pop r14
 10485 438e 0895      		ret
 10486               		.cfi_endproc
 10487               	.LFE43:
 10489               	.global	presolve_fixSOS1
 10491               	presolve_fixSOS1:
 10492               	.LFB44:
1050:lp_solve_5.5/lp_presolve.c **** 
1051:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_fixSOS1(presolverec *psdata, int colnr, REAL fixvalue, int *nr, int *nv)
1052:lp_solve_5.5/lp_presolve.c **** {
 10493               		.loc 2 1052 0
 10494               		.cfi_startproc
 10495 4390 EF92      		push r14
 10496               	.LCFI186:
 10497               		.cfi_def_cfa_offset 3
 10498               		.cfi_offset 14, -2
 10499 4392 FF92      		push r15
 10500               	.LCFI187:
 10501               		.cfi_def_cfa_offset 4
 10502               		.cfi_offset 15, -3
 10503 4394 0F93      		push r16
 10504               	.LCFI188:
 10505               		.cfi_def_cfa_offset 5
 10506               		.cfi_offset 16, -4
 10507 4396 1F93      		push r17
 10508               	.LCFI189:
 10509               		.cfi_def_cfa_offset 6
 10510               		.cfi_offset 17, -5
 10511 4398 CF93      		push r28
 10512               	.LCFI190:
 10513               		.cfi_def_cfa_offset 7
 10514               		.cfi_offset 28, -6
 10515 439a DF93      		push r29
 10516               	.LCFI191:
 10517               		.cfi_def_cfa_offset 8
 10518               		.cfi_offset 29, -7
 10519 439c CDB7      		in r28,__SP_L__
 10520 439e DEB7      		in r29,__SP_H__
 10521               	.LCFI192:
 10522               		.cfi_def_cfa_register 28
 10523 43a0 6D97      		sbiw r28,29
 10524               	.LCFI193:
 10525               		.cfi_def_cfa_offset 37
 10526 43a2 0FB6      		in __tmp_reg__,__SREG__
 10527 43a4 F894      		cli
 10528 43a6 DEBF      		out __SP_H__,r29
 10529 43a8 0FBE      		out __SREG__,__tmp_reg__
 10530 43aa CDBF      		out __SP_L__,r28
 10531               	/* prologue: function */
 10532               	/* frame size = 29 */
 10533               	/* stack size = 35 */
 10534               	.L__stack_usage = 35
 10535 43ac 9B8B      		std Y+19,r25
 10536 43ae 8A8B      		std Y+18,r24
 10537 43b0 7D8B      		std Y+21,r23
 10538 43b2 6C8B      		std Y+20,r22
 10539 43b4 2E8B      		std Y+22,r18
 10540 43b6 3F8B      		std Y+23,r19
 10541 43b8 488F      		std Y+24,r20
 10542 43ba 598F      		std Y+25,r21
 10543 43bc 1B8F      		std Y+27,r17
 10544 43be 0A8F      		std Y+26,r16
 10545 43c0 FD8E      		std Y+29,r15
 10546 43c2 EC8E      		std Y+28,r14
1053:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 10547               		.loc 2 1053 0
 10548 43c4 8A89      		ldd r24,Y+18
 10549 43c6 9B89      		ldd r25,Y+19
 10550 43c8 FC01      		movw r30,r24
 10551 43ca 8289      		ldd r24,Z+18
 10552 43cc 9389      		ldd r25,Z+19
 10553 43ce 9D87      		std Y+13,r25
 10554 43d0 8C87      		std Y+12,r24
1054:lp_solve_5.5/lp_presolve.c ****   int      i, k, j;
1055:lp_solve_5.5/lp_presolve.c ****   SOSrec   *SOS;
1056:lp_solve_5.5/lp_presolve.c ****   REAL     newvalue;
1057:lp_solve_5.5/lp_presolve.c ****   MYBOOL   *fixed = NULL, status = FALSE;
 10555               		.loc 2 1057 0
 10556 43d2 198A      		std Y+17,__zero_reg__
 10557 43d4 188A      		std Y+16,__zero_reg__
 10558 43d6 1B86      		std Y+11,__zero_reg__
1058:lp_solve_5.5/lp_presolve.c **** 
1059:lp_solve_5.5/lp_presolve.c ****   /* Allocate working member list */
1060:lp_solve_5.5/lp_presolve.c ****   if(!allocMYBOOL(lp, &fixed, lp->columns+1, TRUE) )
 10559               		.loc 2 1060 0
 10560 43d8 8C85      		ldd r24,Y+12
 10561 43da 9D85      		ldd r25,Y+13
 10562 43dc 8451      		subi r24,20
 10563 43de 9E4F      		sbci r25,-2
 10564 43e0 FC01      		movw r30,r24
 10565 43e2 8081      		ld r24,Z
 10566 43e4 9181      		ldd r25,Z+1
 10567 43e6 AC01      		movw r20,r24
 10568 43e8 4F5F      		subi r20,-1
 10569 43ea 5F4F      		sbci r21,-1
 10570 43ec BE01      		movw r22,r28
 10571 43ee 605F      		subi r22,-16
 10572 43f0 7F4F      		sbci r23,-1
 10573 43f2 8C85      		ldd r24,Y+12
 10574 43f4 9D85      		ldd r25,Y+13
 10575 43f6 21E0      		ldi r18,lo8(1)
 10576 43f8 0E94 0000 		call allocMYBOOL
 10577 43fc 8823      		tst r24
 10578 43fe 01F4      		brne .L376
1061:lp_solve_5.5/lp_presolve.c ****     return(FALSE);
 10579               		.loc 2 1061 0
 10580 4400 80E0      		ldi r24,0
 10581 4402 00C0      		rjmp .L407
 10582               	.L376:
1062:lp_solve_5.5/lp_presolve.c **** 
1063:lp_solve_5.5/lp_presolve.c ****   /* Fix variables in SOS's where colnr is a member */
1064:lp_solve_5.5/lp_presolve.c ****   i = SOS_count(lp);
 10583               		.loc 2 1064 0
 10584 4404 8C85      		ldd r24,Y+12
 10585 4406 9D85      		ldd r25,Y+13
 10586 4408 0E94 0000 		call SOS_count
 10587 440c 9A83      		std Y+2,r25
 10588 440e 8983      		std Y+1,r24
1065:lp_solve_5.5/lp_presolve.c ****   while(i > 0) {
 10589               		.loc 2 1065 0
 10590 4410 00C0      		rjmp .L378
 10591               	.L388:
1066:lp_solve_5.5/lp_presolve.c ****     /* Set next SOS target (note that colnr has been tested earlier as not being a member of a high
1067:lp_solve_5.5/lp_presolve.c ****     SOS = lp->SOS->sos_list[i-1];
 10592               		.loc 2 1067 0
 10593 4412 8C85      		ldd r24,Y+12
 10594 4414 9D85      		ldd r25,Y+13
 10595 4416 8256      		subi r24,98
 10596 4418 9D4F      		sbci r25,-3
 10597 441a FC01      		movw r30,r24
 10598 441c 8081      		ld r24,Z
 10599 441e 9181      		ldd r25,Z+1
 10600 4420 FC01      		movw r30,r24
 10601 4422 2281      		ldd r18,Z+2
 10602 4424 3381      		ldd r19,Z+3
 10603 4426 8981      		ldd r24,Y+1
 10604 4428 9A81      		ldd r25,Y+2
 10605 442a 8150      		subi r24,1
 10606 442c 9048      		sbci r25,-128
 10607 442e 880F      		lsl r24
 10608 4430 991F      		rol r25
 10609 4432 820F      		add r24,r18
 10610 4434 931F      		adc r25,r19
 10611 4436 FC01      		movw r30,r24
 10612 4438 8081      		ld r24,Z
 10613 443a 9181      		ldd r25,Z+1
 10614 443c 9F87      		std Y+15,r25
 10615 443e 8E87      		std Y+14,r24
1068:lp_solve_5.5/lp_presolve.c ****     if(SOS_is_member(lp->SOS, i, colnr)) {
 10616               		.loc 2 1068 0
 10617 4440 8C85      		ldd r24,Y+12
 10618 4442 9D85      		ldd r25,Y+13
 10619 4444 8256      		subi r24,98
 10620 4446 9D4F      		sbci r25,-3
 10621 4448 FC01      		movw r30,r24
 10622 444a 8081      		ld r24,Z
 10623 444c 9181      		ldd r25,Z+1
 10624 444e 4C89      		ldd r20,Y+20
 10625 4450 5D89      		ldd r21,Y+21
 10626 4452 2981      		ldd r18,Y+1
 10627 4454 3A81      		ldd r19,Y+2
 10628 4456 B901      		movw r22,r18
 10629 4458 0E94 0000 		call SOS_is_member
 10630 445c 892B      		or r24,r25
 10631 445e 01F4      		brne .+2
 10632 4460 00C0      		rjmp .L379
1069:lp_solve_5.5/lp_presolve.c ****       for(k = SOS->members[0]; k > 0; k--) {
 10633               		.loc 2 1069 0
 10634 4462 8E85      		ldd r24,Y+14
 10635 4464 9F85      		ldd r25,Y+15
 10636 4466 FC01      		movw r30,r24
 10637 4468 8585      		ldd r24,Z+13
 10638 446a 9685      		ldd r25,Z+14
 10639 446c FC01      		movw r30,r24
 10640 446e 8081      		ld r24,Z
 10641 4470 9181      		ldd r25,Z+1
 10642 4472 9C83      		std Y+4,r25
 10643 4474 8B83      		std Y+3,r24
 10644 4476 00C0      		rjmp .L380
 10645               	.L387:
1070:lp_solve_5.5/lp_presolve.c ****         j = SOS->members[k];
 10646               		.loc 2 1070 0
 10647 4478 8E85      		ldd r24,Y+14
 10648 447a 9F85      		ldd r25,Y+15
 10649 447c FC01      		movw r30,r24
 10650 447e 2585      		ldd r18,Z+13
 10651 4480 3685      		ldd r19,Z+14
 10652 4482 8B81      		ldd r24,Y+3
 10653 4484 9C81      		ldd r25,Y+4
 10654 4486 880F      		lsl r24
 10655 4488 991F      		rol r25
 10656 448a 820F      		add r24,r18
 10657 448c 931F      		adc r25,r19
 10658 448e FC01      		movw r30,r24
 10659 4490 8081      		ld r24,Z
 10660 4492 9181      		ldd r25,Z+1
 10661 4494 9E83      		std Y+6,r25
 10662 4496 8D83      		std Y+5,r24
1071:lp_solve_5.5/lp_presolve.c ****         if(fixed[j])
 10663               		.loc 2 1071 0
 10664 4498 2889      		ldd r18,Y+16
 10665 449a 3989      		ldd r19,Y+17
 10666 449c 8D81      		ldd r24,Y+5
 10667 449e 9E81      		ldd r25,Y+6
 10668 44a0 820F      		add r24,r18
 10669 44a2 931F      		adc r25,r19
 10670 44a4 FC01      		movw r30,r24
 10671 44a6 8081      		ld r24,Z
 10672 44a8 8823      		tst r24
 10673 44aa 01F0      		breq .+2
 10674 44ac 00C0      		rjmp .L408
1072:lp_solve_5.5/lp_presolve.c ****           continue;
1073:lp_solve_5.5/lp_presolve.c ****         if(j == colnr) {
 10675               		.loc 2 1073 0
 10676 44ae 2D81      		ldd r18,Y+5
 10677 44b0 3E81      		ldd r19,Y+6
 10678 44b2 8C89      		ldd r24,Y+20
 10679 44b4 9D89      		ldd r25,Y+21
 10680 44b6 2817      		cp r18,r24
 10681 44b8 3907      		cpc r19,r25
 10682 44ba 01F4      		brne .L383
1074:lp_solve_5.5/lp_presolve.c ****           fixed[j] = TRUE;
 10683               		.loc 2 1074 0
 10684 44bc 2889      		ldd r18,Y+16
 10685 44be 3989      		ldd r19,Y+17
 10686 44c0 8D81      		ldd r24,Y+5
 10687 44c2 9E81      		ldd r25,Y+6
 10688 44c4 820F      		add r24,r18
 10689 44c6 931F      		adc r25,r19
 10690 44c8 21E0      		ldi r18,lo8(1)
 10691 44ca FC01      		movw r30,r24
 10692 44cc 2083      		st Z,r18
1075:lp_solve_5.5/lp_presolve.c ****           newvalue = fixvalue;
 10693               		.loc 2 1075 0
 10694 44ce 8E89      		ldd r24,Y+22
 10695 44d0 9F89      		ldd r25,Y+23
 10696 44d2 A88D      		ldd r26,Y+24
 10697 44d4 B98D      		ldd r27,Y+25
 10698 44d6 8F83      		std Y+7,r24
 10699 44d8 9887      		std Y+8,r25
 10700 44da A987      		std Y+9,r26
 10701 44dc BA87      		std Y+10,r27
 10702 44de 00C0      		rjmp .L384
 10703               	.L383:
1076:lp_solve_5.5/lp_presolve.c ****         }
1077:lp_solve_5.5/lp_presolve.c ****         else {
1078:lp_solve_5.5/lp_presolve.c ****           fixed[j] = AUTOMATIC;
 10704               		.loc 2 1078 0
 10705 44e0 2889      		ldd r18,Y+16
 10706 44e2 3989      		ldd r19,Y+17
 10707 44e4 8D81      		ldd r24,Y+5
 10708 44e6 9E81      		ldd r25,Y+6
 10709 44e8 820F      		add r24,r18
 10710 44ea 931F      		adc r25,r19
 10711 44ec 22E0      		ldi r18,lo8(2)
 10712 44ee FC01      		movw r30,r24
 10713 44f0 2083      		st Z,r18
1079:lp_solve_5.5/lp_presolve.c ****           newvalue = 0.0;
 10714               		.loc 2 1079 0
 10715 44f2 1F82      		std Y+7,__zero_reg__
 10716 44f4 1886      		std Y+8,__zero_reg__
 10717 44f6 1986      		std Y+9,__zero_reg__
 10718 44f8 1A86      		std Y+10,__zero_reg__
 10719               	.L384:
1080:lp_solve_5.5/lp_presolve.c ****         }
1081:lp_solve_5.5/lp_presolve.c ****         /* If it is a member of a higher order SOS then just change bounds */
1082:lp_solve_5.5/lp_presolve.c ****         if(!presolve_candeletevar(psdata, j)) {
 10720               		.loc 2 1082 0
 10721 44fa 2D81      		ldd r18,Y+5
 10722 44fc 3E81      		ldd r19,Y+6
 10723 44fe 8A89      		ldd r24,Y+18
 10724 4500 9B89      		ldd r25,Y+19
 10725 4502 B901      		movw r22,r18
 10726 4504 0E94 0000 		call presolve_candeletevar
 10727 4508 8823      		tst r24
 10728 450a 01F4      		brne .L385
1083:lp_solve_5.5/lp_presolve.c ****           set_bounds(lp, j, newvalue, newvalue);
 10729               		.loc 2 1083 0
 10730 450c 2F81      		ldd r18,Y+7
 10731 450e 3885      		ldd r19,Y+8
 10732 4510 4985      		ldd r20,Y+9
 10733 4512 5A85      		ldd r21,Y+10
 10734 4514 8F81      		ldd r24,Y+7
 10735 4516 9885      		ldd r25,Y+8
 10736 4518 A985      		ldd r26,Y+9
 10737 451a BA85      		ldd r27,Y+10
 10738 451c 6D81      		ldd r22,Y+5
 10739 451e 7E81      		ldd r23,Y+6
 10740 4520 EC85      		ldd r30,Y+12
 10741 4522 FD85      		ldd r31,Y+13
 10742 4524 7901      		movw r14,r18
 10743 4526 8A01      		movw r16,r20
 10744 4528 9C01      		movw r18,r24
 10745 452a AD01      		movw r20,r26
 10746 452c CF01      		movw r24,r30
 10747 452e 0E94 0000 		call set_bounds
1084:lp_solve_5.5/lp_presolve.c ****           fixed[j] = TRUE | AUTOMATIC;
 10748               		.loc 2 1084 0
 10749 4532 2889      		ldd r18,Y+16
 10750 4534 3989      		ldd r19,Y+17
 10751 4536 8D81      		ldd r24,Y+5
 10752 4538 9E81      		ldd r25,Y+6
 10753 453a 820F      		add r24,r18
 10754 453c 931F      		adc r25,r19
 10755 453e 23E0      		ldi r18,lo8(3)
 10756 4540 FC01      		movw r30,r24
 10757 4542 2083      		st Z,r18
1085:lp_solve_5.5/lp_presolve.c ****           psdata->forceupdate = TRUE;
 10758               		.loc 2 1085 0
 10759 4544 8A89      		ldd r24,Y+18
 10760 4546 9B89      		ldd r25,Y+19
 10761 4548 21E0      		ldi r18,lo8(1)
 10762 454a FC01      		movw r30,r24
 10763 454c 24A3      		std Z+36,r18
 10764 454e 00C0      		rjmp .L382
 10765               	.L385:
1086:lp_solve_5.5/lp_presolve.c ****         }
1087:lp_solve_5.5/lp_presolve.c ****         /* Otherwise fix it in preparation for removal */
1088:lp_solve_5.5/lp_presolve.c ****         else if(!presolve_colfix(psdata, j, newvalue, TRUE, nv))
 10766               		.loc 2 1088 0
 10767 4550 2C8D      		ldd r18,Y+28
 10768 4552 3D8D      		ldd r19,Y+29
 10769 4554 8F81      		ldd r24,Y+7
 10770 4556 9885      		ldd r25,Y+8
 10771 4558 A985      		ldd r26,Y+9
 10772 455a BA85      		ldd r27,Y+10
 10773 455c 6D81      		ldd r22,Y+5
 10774 455e 7E81      		ldd r23,Y+6
 10775 4560 EA89      		ldd r30,Y+18
 10776 4562 FB89      		ldd r31,Y+19
 10777 4564 7901      		movw r14,r18
 10778 4566 01E0      		ldi r16,lo8(1)
 10779 4568 9C01      		movw r18,r24
 10780 456a AD01      		movw r20,r26
 10781 456c CF01      		movw r24,r30
 10782 456e 0E94 0000 		call presolve_colfix
 10783 4572 8823      		tst r24
 10784 4574 01F4      		brne .+2
 10785 4576 00C0      		rjmp .L409
 10786 4578 00C0      		rjmp .L382
 10787               	.L408:
1072:lp_solve_5.5/lp_presolve.c ****         if(j == colnr) {
 10788               		.loc 2 1072 0
 10789 457a 0000      		nop
 10790               	.L382:
1069:lp_solve_5.5/lp_presolve.c ****         j = SOS->members[k];
 10791               		.loc 2 1069 0 discriminator 2
 10792 457c 8B81      		ldd r24,Y+3
 10793 457e 9C81      		ldd r25,Y+4
 10794 4580 0197      		sbiw r24,1
 10795 4582 9C83      		std Y+4,r25
 10796 4584 8B83      		std Y+3,r24
 10797               	.L380:
1069:lp_solve_5.5/lp_presolve.c ****         j = SOS->members[k];
 10798               		.loc 2 1069 0 is_stmt 0 discriminator 1
 10799 4586 8B81      		ldd r24,Y+3
 10800 4588 9C81      		ldd r25,Y+4
 10801 458a 1816      		cp __zero_reg__,r24
 10802 458c 1906      		cpc __zero_reg__,r25
 10803 458e 04F4      		brge .+2
 10804 4590 00C0      		rjmp .L387
 10805               	.L379:
1089:lp_solve_5.5/lp_presolve.c ****           goto Done;
1090:lp_solve_5.5/lp_presolve.c ****       }
1091:lp_solve_5.5/lp_presolve.c ****     }
1092:lp_solve_5.5/lp_presolve.c ****     i--;
 10806               		.loc 2 1092 0 is_stmt 1
 10807 4592 8981      		ldd r24,Y+1
 10808 4594 9A81      		ldd r25,Y+2
 10809 4596 0197      		sbiw r24,1
 10810 4598 9A83      		std Y+2,r25
 10811 459a 8983      		std Y+1,r24
 10812               	.L378:
1065:lp_solve_5.5/lp_presolve.c ****     /* Set next SOS target (note that colnr has been tested earlier as not being a member of a high
 10813               		.loc 2 1065 0
 10814 459c 8981      		ldd r24,Y+1
 10815 459e 9A81      		ldd r25,Y+2
 10816 45a0 1816      		cp __zero_reg__,r24
 10817 45a2 1906      		cpc __zero_reg__,r25
 10818 45a4 04F4      		brge .+2
 10819 45a6 00C0      		rjmp .L388
1093:lp_solve_5.5/lp_presolve.c ****   }
1094:lp_solve_5.5/lp_presolve.c **** 
1095:lp_solve_5.5/lp_presolve.c ****   /* Delete SOS'es or SOS member variables where we can */
1096:lp_solve_5.5/lp_presolve.c ****   k = i = SOS_count(lp);
 10820               		.loc 2 1096 0
 10821 45a8 8C85      		ldd r24,Y+12
 10822 45aa 9D85      		ldd r25,Y+13
 10823 45ac 0E94 0000 		call SOS_count
 10824 45b0 9A83      		std Y+2,r25
 10825 45b2 8983      		std Y+1,r24
 10826 45b4 8981      		ldd r24,Y+1
 10827 45b6 9A81      		ldd r25,Y+2
 10828 45b8 9C83      		std Y+4,r25
 10829 45ba 8B83      		std Y+3,r24
1097:lp_solve_5.5/lp_presolve.c ****   while(i > 0) {
 10830               		.loc 2 1097 0
 10831 45bc 00C0      		rjmp .L389
 10832               	.L398:
1098:lp_solve_5.5/lp_presolve.c ****     /* Set next SOS target */
1099:lp_solve_5.5/lp_presolve.c ****     SOS = lp->SOS->sos_list[i-1];
 10833               		.loc 2 1099 0
 10834 45be 8C85      		ldd r24,Y+12
 10835 45c0 9D85      		ldd r25,Y+13
 10836 45c2 8256      		subi r24,98
 10837 45c4 9D4F      		sbci r25,-3
 10838 45c6 FC01      		movw r30,r24
 10839 45c8 8081      		ld r24,Z
 10840 45ca 9181      		ldd r25,Z+1
 10841 45cc FC01      		movw r30,r24
 10842 45ce 2281      		ldd r18,Z+2
 10843 45d0 3381      		ldd r19,Z+3
 10844 45d2 8981      		ldd r24,Y+1
 10845 45d4 9A81      		ldd r25,Y+2
 10846 45d6 8150      		subi r24,1
 10847 45d8 9048      		sbci r25,-128
 10848 45da 880F      		lsl r24
 10849 45dc 991F      		rol r25
 10850 45de 820F      		add r24,r18
 10851 45e0 931F      		adc r25,r19
 10852 45e2 FC01      		movw r30,r24
 10853 45e4 8081      		ld r24,Z
 10854 45e6 9181      		ldd r25,Z+1
 10855 45e8 9F87      		std Y+15,r25
 10856 45ea 8E87      		std Y+14,r24
1100:lp_solve_5.5/lp_presolve.c ****     if(SOS_is_member(lp->SOS, i, colnr)) {
 10857               		.loc 2 1100 0
 10858 45ec 8C85      		ldd r24,Y+12
 10859 45ee 9D85      		ldd r25,Y+13
 10860 45f0 8256      		subi r24,98
 10861 45f2 9D4F      		sbci r25,-3
 10862 45f4 FC01      		movw r30,r24
 10863 45f6 8081      		ld r24,Z
 10864 45f8 9181      		ldd r25,Z+1
 10865 45fa 4C89      		ldd r20,Y+20
 10866 45fc 5D89      		ldd r21,Y+21
 10867 45fe 2981      		ldd r18,Y+1
 10868 4600 3A81      		ldd r19,Y+2
 10869 4602 B901      		movw r22,r18
 10870 4604 0E94 0000 		call SOS_is_member
 10871 4608 892B      		or r24,r25
 10872 460a 01F4      		brne .+2
 10873 460c 00C0      		rjmp .L390
1101:lp_solve_5.5/lp_presolve.c ****       /* Always delete SOS1's */
1102:lp_solve_5.5/lp_presolve.c ****       if(SOS->type == SOS1)
 10874               		.loc 2 1102 0
 10875 460e 8E85      		ldd r24,Y+14
 10876 4610 9F85      		ldd r25,Y+15
 10877 4612 FC01      		movw r30,r24
 10878 4614 8681      		ldd r24,Z+6
 10879 4616 9781      		ldd r25,Z+7
 10880 4618 0197      		sbiw r24,1
 10881 461a 01F4      		brne .L391
1103:lp_solve_5.5/lp_presolve.c ****         delete_SOSrec(lp->SOS, i /* , FALSE */);
 10882               		.loc 2 1103 0
 10883 461c 8C85      		ldd r24,Y+12
 10884 461e 9D85      		ldd r25,Y+13
 10885 4620 8256      		subi r24,98
 10886 4622 9D4F      		sbci r25,-3
 10887 4624 FC01      		movw r30,r24
 10888 4626 8081      		ld r24,Z
 10889 4628 9181      		ldd r25,Z+1
 10890 462a 2981      		ldd r18,Y+1
 10891 462c 3A81      		ldd r19,Y+2
 10892 462e B901      		movw r22,r18
 10893 4630 0E94 0000 		call delete_SOSrec
 10894 4634 00C0      		rjmp .L390
 10895               	.L391:
1104:lp_solve_5.5/lp_presolve.c ****       /* Only delete leading or trailing SOS members in higher-order SOS'es that are fixed at 0;
1105:lp_solve_5.5/lp_presolve.c ****         (note that this section of the code will never be called in the current setup) */
1106:lp_solve_5.5/lp_presolve.c ****       else {
1107:lp_solve_5.5/lp_presolve.c ****         /* First the leading entries... */
1108:lp_solve_5.5/lp_presolve.c ****         for(j = 1; j <= SOS->members[0]; j++) {
 10896               		.loc 2 1108 0
 10897 4636 81E0      		ldi r24,lo8(1)
 10898 4638 90E0      		ldi r25,0
 10899 463a 9E83      		std Y+6,r25
 10900 463c 8D83      		std Y+5,r24
 10901 463e 00C0      		rjmp .L392
 10902               	.L394:
1109:lp_solve_5.5/lp_presolve.c ****           if(fixed[SOS->members[j]] == AUTOMATIC)
 10903               		.loc 2 1109 0
 10904 4640 8889      		ldd r24,Y+16
 10905 4642 9989      		ldd r25,Y+17
 10906 4644 2E85      		ldd r18,Y+14
 10907 4646 3F85      		ldd r19,Y+15
 10908 4648 F901      		movw r30,r18
 10909 464a 4585      		ldd r20,Z+13
 10910 464c 5685      		ldd r21,Z+14
 10911 464e 2D81      		ldd r18,Y+5
 10912 4650 3E81      		ldd r19,Y+6
 10913 4652 220F      		lsl r18
 10914 4654 331F      		rol r19
 10915 4656 240F      		add r18,r20
 10916 4658 351F      		adc r19,r21
 10917 465a F901      		movw r30,r18
 10918 465c 2081      		ld r18,Z
 10919 465e 3181      		ldd r19,Z+1
 10920 4660 820F      		add r24,r18
 10921 4662 931F      		adc r25,r19
 10922 4664 FC01      		movw r30,r24
 10923 4666 8081      		ld r24,Z
 10924 4668 8230      		cpi r24,lo8(2)
 10925 466a 01F4      		brne .L393
1110:lp_solve_5.5/lp_presolve.c ****             SOS_member_delete(lp->SOS, i, SOS->members[j]);
 10926               		.loc 2 1110 0
 10927 466c 8E85      		ldd r24,Y+14
 10928 466e 9F85      		ldd r25,Y+15
 10929 4670 FC01      		movw r30,r24
 10930 4672 2585      		ldd r18,Z+13
 10931 4674 3685      		ldd r19,Z+14
 10932 4676 8D81      		ldd r24,Y+5
 10933 4678 9E81      		ldd r25,Y+6
 10934 467a 880F      		lsl r24
 10935 467c 991F      		rol r25
 10936 467e 820F      		add r24,r18
 10937 4680 931F      		adc r25,r19
 10938 4682 FC01      		movw r30,r24
 10939 4684 4081      		ld r20,Z
 10940 4686 5181      		ldd r21,Z+1
 10941 4688 8C85      		ldd r24,Y+12
 10942 468a 9D85      		ldd r25,Y+13
 10943 468c 8256      		subi r24,98
 10944 468e 9D4F      		sbci r25,-3
 10945 4690 FC01      		movw r30,r24
 10946 4692 8081      		ld r24,Z
 10947 4694 9181      		ldd r25,Z+1
 10948 4696 2981      		ldd r18,Y+1
 10949 4698 3A81      		ldd r19,Y+2
 10950 469a B901      		movw r22,r18
 10951 469c 0E94 0000 		call SOS_member_delete
 10952               	.L393:
1108:lp_solve_5.5/lp_presolve.c ****           if(fixed[SOS->members[j]] == AUTOMATIC)
 10953               		.loc 2 1108 0 discriminator 2
 10954 46a0 8D81      		ldd r24,Y+5
 10955 46a2 9E81      		ldd r25,Y+6
 10956 46a4 0196      		adiw r24,1
 10957 46a6 9E83      		std Y+6,r25
 10958 46a8 8D83      		std Y+5,r24
 10959               	.L392:
1108:lp_solve_5.5/lp_presolve.c ****           if(fixed[SOS->members[j]] == AUTOMATIC)
 10960               		.loc 2 1108 0 is_stmt 0 discriminator 1
 10961 46aa 8E85      		ldd r24,Y+14
 10962 46ac 9F85      		ldd r25,Y+15
 10963 46ae FC01      		movw r30,r24
 10964 46b0 8585      		ldd r24,Z+13
 10965 46b2 9685      		ldd r25,Z+14
 10966 46b4 FC01      		movw r30,r24
 10967 46b6 2081      		ld r18,Z
 10968 46b8 3181      		ldd r19,Z+1
 10969 46ba 8D81      		ldd r24,Y+5
 10970 46bc 9E81      		ldd r25,Y+6
 10971 46be 2817      		cp r18,r24
 10972 46c0 3907      		cpc r19,r25
 10973 46c2 04F0      		brlt .+2
 10974 46c4 00C0      		rjmp .L394
1111:lp_solve_5.5/lp_presolve.c ****         }
1112:lp_solve_5.5/lp_presolve.c ****         /* ...then trailing entries */
1113:lp_solve_5.5/lp_presolve.c ****         for(j = SOS->members[0]; j > 0; j--) {
 10975               		.loc 2 1113 0 is_stmt 1
 10976 46c6 8E85      		ldd r24,Y+14
 10977 46c8 9F85      		ldd r25,Y+15
 10978 46ca FC01      		movw r30,r24
 10979 46cc 8585      		ldd r24,Z+13
 10980 46ce 9685      		ldd r25,Z+14
 10981 46d0 FC01      		movw r30,r24
 10982 46d2 8081      		ld r24,Z
 10983 46d4 9181      		ldd r25,Z+1
 10984 46d6 9E83      		std Y+6,r25
 10985 46d8 8D83      		std Y+5,r24
 10986 46da 00C0      		rjmp .L395
 10987               	.L397:
1114:lp_solve_5.5/lp_presolve.c ****           if(fixed[SOS->members[j]] == AUTOMATIC)
 10988               		.loc 2 1114 0
 10989 46dc 8889      		ldd r24,Y+16
 10990 46de 9989      		ldd r25,Y+17
 10991 46e0 2E85      		ldd r18,Y+14
 10992 46e2 3F85      		ldd r19,Y+15
 10993 46e4 F901      		movw r30,r18
 10994 46e6 4585      		ldd r20,Z+13
 10995 46e8 5685      		ldd r21,Z+14
 10996 46ea 2D81      		ldd r18,Y+5
 10997 46ec 3E81      		ldd r19,Y+6
 10998 46ee 220F      		lsl r18
 10999 46f0 331F      		rol r19
 11000 46f2 240F      		add r18,r20
 11001 46f4 351F      		adc r19,r21
 11002 46f6 F901      		movw r30,r18
 11003 46f8 2081      		ld r18,Z
 11004 46fa 3181      		ldd r19,Z+1
 11005 46fc 820F      		add r24,r18
 11006 46fe 931F      		adc r25,r19
 11007 4700 FC01      		movw r30,r24
 11008 4702 8081      		ld r24,Z
 11009 4704 8230      		cpi r24,lo8(2)
 11010 4706 01F4      		brne .L396
1115:lp_solve_5.5/lp_presolve.c ****             SOS_member_delete(lp->SOS, i, SOS->members[j]);
 11011               		.loc 2 1115 0
 11012 4708 8E85      		ldd r24,Y+14
 11013 470a 9F85      		ldd r25,Y+15
 11014 470c FC01      		movw r30,r24
 11015 470e 2585      		ldd r18,Z+13
 11016 4710 3685      		ldd r19,Z+14
 11017 4712 8D81      		ldd r24,Y+5
 11018 4714 9E81      		ldd r25,Y+6
 11019 4716 880F      		lsl r24
 11020 4718 991F      		rol r25
 11021 471a 820F      		add r24,r18
 11022 471c 931F      		adc r25,r19
 11023 471e FC01      		movw r30,r24
 11024 4720 4081      		ld r20,Z
 11025 4722 5181      		ldd r21,Z+1
 11026 4724 8C85      		ldd r24,Y+12
 11027 4726 9D85      		ldd r25,Y+13
 11028 4728 8256      		subi r24,98
 11029 472a 9D4F      		sbci r25,-3
 11030 472c FC01      		movw r30,r24
 11031 472e 8081      		ld r24,Z
 11032 4730 9181      		ldd r25,Z+1
 11033 4732 2981      		ldd r18,Y+1
 11034 4734 3A81      		ldd r19,Y+2
 11035 4736 B901      		movw r22,r18
 11036 4738 0E94 0000 		call SOS_member_delete
 11037               	.L396:
1113:lp_solve_5.5/lp_presolve.c ****           if(fixed[SOS->members[j]] == AUTOMATIC)
 11038               		.loc 2 1113 0 discriminator 2
 11039 473c 8D81      		ldd r24,Y+5
 11040 473e 9E81      		ldd r25,Y+6
 11041 4740 0197      		sbiw r24,1
 11042 4742 9E83      		std Y+6,r25
 11043 4744 8D83      		std Y+5,r24
 11044               	.L395:
1113:lp_solve_5.5/lp_presolve.c ****           if(fixed[SOS->members[j]] == AUTOMATIC)
 11045               		.loc 2 1113 0 is_stmt 0 discriminator 1
 11046 4746 8D81      		ldd r24,Y+5
 11047 4748 9E81      		ldd r25,Y+6
 11048 474a 1816      		cp __zero_reg__,r24
 11049 474c 1906      		cpc __zero_reg__,r25
 11050 474e 04F0      		brlt .L397
 11051               	.L390:
1116:lp_solve_5.5/lp_presolve.c ****         }
1117:lp_solve_5.5/lp_presolve.c ****       }
1118:lp_solve_5.5/lp_presolve.c ****     }
1119:lp_solve_5.5/lp_presolve.c ****     i--;
 11052               		.loc 2 1119 0 is_stmt 1
 11053 4750 8981      		ldd r24,Y+1
 11054 4752 9A81      		ldd r25,Y+2
 11055 4754 0197      		sbiw r24,1
 11056 4756 9A83      		std Y+2,r25
 11057 4758 8983      		std Y+1,r24
 11058               	.L389:
1097:lp_solve_5.5/lp_presolve.c ****     /* Set next SOS target */
 11059               		.loc 2 1097 0
 11060 475a 8981      		ldd r24,Y+1
 11061 475c 9A81      		ldd r25,Y+2
 11062 475e 1816      		cp __zero_reg__,r24
 11063 4760 1906      		cpc __zero_reg__,r25
 11064 4762 04F4      		brge .+2
 11065 4764 00C0      		rjmp .L398
1120:lp_solve_5.5/lp_presolve.c ****   }
1121:lp_solve_5.5/lp_presolve.c **** 
1122:lp_solve_5.5/lp_presolve.c ****   /* Update the sparse member map if there were SOS deletions; delete_SOSrec() above
1123:lp_solve_5.5/lp_presolve.c ****      specified deferred updating */
1124:lp_solve_5.5/lp_presolve.c ****   i = SOS_count(lp);
 11066               		.loc 2 1124 0
 11067 4766 8C85      		ldd r24,Y+12
 11068 4768 9D85      		ldd r25,Y+13
 11069 476a 0E94 0000 		call SOS_count
 11070 476e 9A83      		std Y+2,r25
 11071 4770 8983      		std Y+1,r24
1125:lp_solve_5.5/lp_presolve.c ****   if(i < k)
 11072               		.loc 2 1125 0
 11073 4772 2981      		ldd r18,Y+1
 11074 4774 3A81      		ldd r19,Y+2
 11075 4776 8B81      		ldd r24,Y+3
 11076 4778 9C81      		ldd r25,Y+4
 11077 477a 2817      		cp r18,r24
 11078 477c 3907      		cpc r19,r25
 11079 477e 04F4      		brge .L399
1126:lp_solve_5.5/lp_presolve.c ****     SOS_member_updatemap(lp->SOS);
 11080               		.loc 2 1126 0
 11081 4780 8C85      		ldd r24,Y+12
 11082 4782 9D85      		ldd r25,Y+13
 11083 4784 8256      		subi r24,98
 11084 4786 9D4F      		sbci r25,-3
 11085 4788 FC01      		movw r30,r24
 11086 478a 8081      		ld r24,Z
 11087 478c 9181      		ldd r25,Z+1
 11088 478e 0E94 0000 		call SOS_member_updatemap
 11089               	.L399:
1127:lp_solve_5.5/lp_presolve.c **** 
1128:lp_solve_5.5/lp_presolve.c ****   /* Delete the variables that have been fixed */
1129:lp_solve_5.5/lp_presolve.c ****   k = 0;
 11090               		.loc 2 1129 0
 11091 4792 1C82      		std Y+4,__zero_reg__
 11092 4794 1B82      		std Y+3,__zero_reg__
1130:lp_solve_5.5/lp_presolve.c ****   for(j = lp->columns; j > 0; j--) {
 11093               		.loc 2 1130 0
 11094 4796 8C85      		ldd r24,Y+12
 11095 4798 9D85      		ldd r25,Y+13
 11096 479a 8451      		subi r24,20
 11097 479c 9E4F      		sbci r25,-2
 11098 479e FC01      		movw r30,r24
 11099 47a0 8081      		ld r24,Z
 11100 47a2 9181      		ldd r25,Z+1
 11101 47a4 9E83      		std Y+6,r25
 11102 47a6 8D83      		std Y+5,r24
 11103 47a8 00C0      		rjmp .L400
 11104               	.L403:
1131:lp_solve_5.5/lp_presolve.c ****     if((fixed[j] == TRUE) || (fixed[j] == AUTOMATIC)) {
 11105               		.loc 2 1131 0
 11106 47aa 2889      		ldd r18,Y+16
 11107 47ac 3989      		ldd r19,Y+17
 11108 47ae 8D81      		ldd r24,Y+5
 11109 47b0 9E81      		ldd r25,Y+6
 11110 47b2 820F      		add r24,r18
 11111 47b4 931F      		adc r25,r19
 11112 47b6 FC01      		movw r30,r24
 11113 47b8 8081      		ld r24,Z
 11114 47ba 8130      		cpi r24,lo8(1)
 11115 47bc 01F0      		breq .L401
 11116               		.loc 2 1131 0 is_stmt 0 discriminator 1
 11117 47be 2889      		ldd r18,Y+16
 11118 47c0 3989      		ldd r19,Y+17
 11119 47c2 8D81      		ldd r24,Y+5
 11120 47c4 9E81      		ldd r25,Y+6
 11121 47c6 820F      		add r24,r18
 11122 47c8 931F      		adc r25,r19
 11123 47ca FC01      		movw r30,r24
 11124 47cc 8081      		ld r24,Z
 11125 47ce 8230      		cpi r24,lo8(2)
 11126 47d0 01F4      		brne .L402
 11127               	.L401:
1132:lp_solve_5.5/lp_presolve.c ****        presolve_colremove(psdata, j, TRUE);
 11128               		.loc 2 1132 0 is_stmt 1
 11129 47d2 2D81      		ldd r18,Y+5
 11130 47d4 3E81      		ldd r19,Y+6
 11131 47d6 8A89      		ldd r24,Y+18
 11132 47d8 9B89      		ldd r25,Y+19
 11133 47da 41E0      		ldi r20,lo8(1)
 11134 47dc B901      		movw r22,r18
 11135 47de 0E94 0000 		call presolve_colremove
1133:lp_solve_5.5/lp_presolve.c ****        k++;
 11136               		.loc 2 1133 0
 11137 47e2 8B81      		ldd r24,Y+3
 11138 47e4 9C81      		ldd r25,Y+4
 11139 47e6 0196      		adiw r24,1
 11140 47e8 9C83      		std Y+4,r25
 11141 47ea 8B83      		std Y+3,r24
 11142               	.L402:
1130:lp_solve_5.5/lp_presolve.c ****     if((fixed[j] == TRUE) || (fixed[j] == AUTOMATIC)) {
 11143               		.loc 2 1130 0 discriminator 2
 11144 47ec 8D81      		ldd r24,Y+5
 11145 47ee 9E81      		ldd r25,Y+6
 11146 47f0 0197      		sbiw r24,1
 11147 47f2 9E83      		std Y+6,r25
 11148 47f4 8D83      		std Y+5,r24
 11149               	.L400:
1130:lp_solve_5.5/lp_presolve.c ****     if((fixed[j] == TRUE) || (fixed[j] == AUTOMATIC)) {
 11150               		.loc 2 1130 0 is_stmt 0 discriminator 1
 11151 47f6 8D81      		ldd r24,Y+5
 11152 47f8 9E81      		ldd r25,Y+6
 11153 47fa 1816      		cp __zero_reg__,r24
 11154 47fc 1906      		cpc __zero_reg__,r25
 11155 47fe 04F0      		brlt .L403
1134:lp_solve_5.5/lp_presolve.c ****     }
1135:lp_solve_5.5/lp_presolve.c ****   }
1136:lp_solve_5.5/lp_presolve.c **** 
1137:lp_solve_5.5/lp_presolve.c ****   /* Update tag orders */
1138:lp_solve_5.5/lp_presolve.c ****   i = SOS_count(lp);
 11156               		.loc 2 1138 0 is_stmt 1
 11157 4800 8C85      		ldd r24,Y+12
 11158 4802 9D85      		ldd r25,Y+13
 11159 4804 0E94 0000 		call SOS_count
 11160 4808 9A83      		std Y+2,r25
 11161 480a 8983      		std Y+1,r24
1139:lp_solve_5.5/lp_presolve.c ****   for(; i > 0; i--)
 11162               		.loc 2 1139 0
 11163 480c 00C0      		rjmp .L404
 11164               	.L405:
1140:lp_solve_5.5/lp_presolve.c ****     lp->SOS->sos_list[i-1]->tagorder = i;
 11165               		.loc 2 1140 0 discriminator 2
 11166 480e 8C85      		ldd r24,Y+12
 11167 4810 9D85      		ldd r25,Y+13
 11168 4812 8256      		subi r24,98
 11169 4814 9D4F      		sbci r25,-3
 11170 4816 FC01      		movw r30,r24
 11171 4818 8081      		ld r24,Z
 11172 481a 9181      		ldd r25,Z+1
 11173 481c FC01      		movw r30,r24
 11174 481e 2281      		ldd r18,Z+2
 11175 4820 3381      		ldd r19,Z+3
 11176 4822 8981      		ldd r24,Y+1
 11177 4824 9A81      		ldd r25,Y+2
 11178 4826 8150      		subi r24,1
 11179 4828 9048      		sbci r25,-128
 11180 482a 880F      		lsl r24
 11181 482c 991F      		rol r25
 11182 482e 820F      		add r24,r18
 11183 4830 931F      		adc r25,r19
 11184 4832 FC01      		movw r30,r24
 11185 4834 8081      		ld r24,Z
 11186 4836 9181      		ldd r25,Z+1
 11187 4838 2981      		ldd r18,Y+1
 11188 483a 3A81      		ldd r19,Y+2
 11189 483c FC01      		movw r30,r24
 11190 483e 3383      		std Z+3,r19
 11191 4840 2283      		std Z+2,r18
1139:lp_solve_5.5/lp_presolve.c ****   for(; i > 0; i--)
 11192               		.loc 2 1139 0 discriminator 2
 11193 4842 8981      		ldd r24,Y+1
 11194 4844 9A81      		ldd r25,Y+2
 11195 4846 0197      		sbiw r24,1
 11196 4848 9A83      		std Y+2,r25
 11197 484a 8983      		std Y+1,r24
 11198               	.L404:
1139:lp_solve_5.5/lp_presolve.c ****   for(; i > 0; i--)
 11199               		.loc 2 1139 0 is_stmt 0 discriminator 1
 11200 484c 8981      		ldd r24,Y+1
 11201 484e 9A81      		ldd r25,Y+2
 11202 4850 1816      		cp __zero_reg__,r24
 11203 4852 1906      		cpc __zero_reg__,r25
 11204 4854 04F0      		brlt .L405
1141:lp_solve_5.5/lp_presolve.c **** 
1142:lp_solve_5.5/lp_presolve.c ****   status = TRUE;
 11205               		.loc 2 1142 0 is_stmt 1
 11206 4856 81E0      		ldi r24,lo8(1)
 11207 4858 8B87      		std Y+11,r24
 11208 485a 00C0      		rjmp .L386
 11209               	.L409:
1089:lp_solve_5.5/lp_presolve.c ****       }
 11210               		.loc 2 1089 0
 11211 485c 0000      		nop
 11212               	.L386:
1143:lp_solve_5.5/lp_presolve.c **** 
1144:lp_solve_5.5/lp_presolve.c **** Done:
1145:lp_solve_5.5/lp_presolve.c ****   FREE(fixed);
 11213               		.loc 2 1145 0
 11214 485e 8889      		ldd r24,Y+16
 11215 4860 9989      		ldd r25,Y+17
 11216 4862 892B      		or r24,r25
 11217 4864 01F0      		breq .L406
 11218               		.loc 2 1145 0 is_stmt 0 discriminator 1
 11219 4866 8889      		ldd r24,Y+16
 11220 4868 9989      		ldd r25,Y+17
 11221 486a 0E94 0000 		call free
 11222 486e 198A      		std Y+17,__zero_reg__
 11223 4870 188A      		std Y+16,__zero_reg__
 11224               	.L406:
1146:lp_solve_5.5/lp_presolve.c ****   return( status );
 11225               		.loc 2 1146 0 is_stmt 1
 11226 4872 8B85      		ldd r24,Y+11
 11227               	.L407:
 11228               	/* epilogue start */
1147:lp_solve_5.5/lp_presolve.c **** }
 11229               		.loc 2 1147 0 discriminator 1
 11230 4874 6D96      		adiw r28,29
 11231 4876 0FB6      		in __tmp_reg__,__SREG__
 11232 4878 F894      		cli
 11233 487a DEBF      		out __SP_H__,r29
 11234 487c 0FBE      		out __SREG__,__tmp_reg__
 11235 487e CDBF      		out __SP_L__,r28
 11236 4880 DF91      		pop r29
 11237 4882 CF91      		pop r28
 11238 4884 1F91      		pop r17
 11239 4886 0F91      		pop r16
 11240 4888 FF90      		pop r15
 11241 488a EF90      		pop r14
 11242 488c 0895      		ret
 11243               		.cfi_endproc
 11244               	.LFE44:
 11246               	.global	presolve_setEQ
 11248               	presolve_setEQ:
 11249               	.LFB45:
1148:lp_solve_5.5/lp_presolve.c **** 
1149:lp_solve_5.5/lp_presolve.c **** STATIC void presolve_setEQ(presolverec *psdata, int rownr)
1150:lp_solve_5.5/lp_presolve.c **** {
 11250               		.loc 2 1150 0
 11251               		.cfi_startproc
 11252 488e CF93      		push r28
 11253               	.LCFI194:
 11254               		.cfi_def_cfa_offset 3
 11255               		.cfi_offset 28, -2
 11256 4890 DF93      		push r29
 11257               	.LCFI195:
 11258               		.cfi_def_cfa_offset 4
 11259               		.cfi_offset 29, -3
 11260 4892 00D0      		rcall .
 11261 4894 00D0      		rcall .
 11262 4896 00D0      		rcall .
 11263               	.LCFI196:
 11264               		.cfi_def_cfa_offset 10
 11265 4898 CDB7      		in r28,__SP_L__
 11266 489a DEB7      		in r29,__SP_H__
 11267               	.LCFI197:
 11268               		.cfi_def_cfa_register 28
 11269               	/* prologue: function */
 11270               	/* frame size = 6 */
 11271               	/* stack size = 8 */
 11272               	.L__stack_usage = 8
 11273 489c 9C83      		std Y+4,r25
 11274 489e 8B83      		std Y+3,r24
 11275 48a0 7E83      		std Y+6,r23
 11276 48a2 6D83      		std Y+5,r22
1151:lp_solve_5.5/lp_presolve.c ****   lprec *lp = psdata->lp;
 11277               		.loc 2 1151 0
 11278 48a4 8B81      		ldd r24,Y+3
 11279 48a6 9C81      		ldd r25,Y+4
 11280 48a8 FC01      		movw r30,r24
 11281 48aa 8289      		ldd r24,Z+18
 11282 48ac 9389      		ldd r25,Z+19
 11283 48ae 9A83      		std Y+2,r25
 11284 48b0 8983      		std Y+1,r24
1152:lp_solve_5.5/lp_presolve.c **** 
1153:lp_solve_5.5/lp_presolve.c ****   if(is_constr_type(lp, rownr, LE))
 11285               		.loc 2 1153 0
 11286 48b2 2D81      		ldd r18,Y+5
 11287 48b4 3E81      		ldd r19,Y+6
 11288 48b6 8981      		ldd r24,Y+1
 11289 48b8 9A81      		ldd r25,Y+2
 11290 48ba 41E0      		ldi r20,lo8(1)
 11291 48bc 50E0      		ldi r21,0
 11292 48be B901      		movw r22,r18
 11293 48c0 0E94 0000 		call is_constr_type
 11294 48c4 8823      		tst r24
 11295 48c6 01F0      		breq .L411
1154:lp_solve_5.5/lp_presolve.c ****      removeLink(psdata->LTmap, rownr);
 11296               		.loc 2 1154 0
 11297 48c8 8B81      		ldd r24,Y+3
 11298 48ca 9C81      		ldd r25,Y+4
 11299 48cc FC01      		movw r30,r24
 11300 48ce 8681      		ldd r24,Z+6
 11301 48d0 9781      		ldd r25,Z+7
 11302 48d2 2D81      		ldd r18,Y+5
 11303 48d4 3E81      		ldd r19,Y+6
 11304 48d6 B901      		movw r22,r18
 11305 48d8 0E94 0000 		call removeLink
 11306               	.L411:
1155:lp_solve_5.5/lp_presolve.c ****    setLink(psdata->EQmap, rownr);
 11307               		.loc 2 1155 0
 11308 48dc 8B81      		ldd r24,Y+3
 11309 48de 9C81      		ldd r25,Y+4
 11310 48e0 FC01      		movw r30,r24
 11311 48e2 8481      		ldd r24,Z+4
 11312 48e4 9581      		ldd r25,Z+5
 11313 48e6 2D81      		ldd r18,Y+5
 11314 48e8 3E81      		ldd r19,Y+6
 11315 48ea B901      		movw r22,r18
 11316 48ec 0E94 0000 		call setLink
1156:lp_solve_5.5/lp_presolve.c ****    set_constr_type(lp, rownr, EQ);
 11317               		.loc 2 1156 0
 11318 48f0 2D81      		ldd r18,Y+5
 11319 48f2 3E81      		ldd r19,Y+6
 11320 48f4 8981      		ldd r24,Y+1
 11321 48f6 9A81      		ldd r25,Y+2
 11322 48f8 43E0      		ldi r20,lo8(3)
 11323 48fa 50E0      		ldi r21,0
 11324 48fc B901      		movw r22,r18
 11325 48fe 0E94 0000 		call set_constr_type
1157:lp_solve_5.5/lp_presolve.c ****    psdata->dv_lobo[rownr] = -lp->infinite;
 11326               		.loc 2 1157 0
 11327 4902 8B81      		ldd r24,Y+3
 11328 4904 9C81      		ldd r25,Y+4
 11329 4906 FC01      		movw r30,r24
 11330 4908 2089      		ldd r18,Z+16
 11331 490a 3189      		ldd r19,Z+17
 11332 490c 8D81      		ldd r24,Y+5
 11333 490e 9E81      		ldd r25,Y+6
 11334 4910 880F      		lsl r24
 11335 4912 991F      		rol r25
 11336 4914 880F      		lsl r24
 11337 4916 991F      		rol r25
 11338 4918 280F      		add r18,r24
 11339 491a 391F      		adc r19,r25
 11340 491c 8981      		ldd r24,Y+1
 11341 491e 9A81      		ldd r25,Y+2
 11342 4920 865F      		subi r24,-10
 11343 4922 9C4F      		sbci r25,-4
 11344 4924 FC01      		movw r30,r24
 11345 4926 8081      		ld r24,Z
 11346 4928 9181      		ldd r25,Z+1
 11347 492a A281      		ldd r26,Z+2
 11348 492c B381      		ldd r27,Z+3
 11349 492e B058      		subi r27,0x80
 11350 4930 F901      		movw r30,r18
 11351 4932 8083      		st Z,r24
 11352 4934 9183      		std Z+1,r25
 11353 4936 A283      		std Z+2,r26
 11354 4938 B383      		std Z+3,r27
1158:lp_solve_5.5/lp_presolve.c ****    psdata->dv_upbo[rownr] = lp->infinite;
 11355               		.loc 2 1158 0
 11356 493a 8B81      		ldd r24,Y+3
 11357 493c 9C81      		ldd r25,Y+4
 11358 493e FC01      		movw r30,r24
 11359 4940 2685      		ldd r18,Z+14
 11360 4942 3785      		ldd r19,Z+15
 11361 4944 8D81      		ldd r24,Y+5
 11362 4946 9E81      		ldd r25,Y+6
 11363 4948 880F      		lsl r24
 11364 494a 991F      		rol r25
 11365 494c 880F      		lsl r24
 11366 494e 991F      		rol r25
 11367 4950 280F      		add r18,r24
 11368 4952 391F      		adc r19,r25
 11369 4954 8981      		ldd r24,Y+1
 11370 4956 9A81      		ldd r25,Y+2
 11371 4958 865F      		subi r24,-10
 11372 495a 9C4F      		sbci r25,-4
 11373 495c FC01      		movw r30,r24
 11374 495e 8081      		ld r24,Z
 11375 4960 9181      		ldd r25,Z+1
 11376 4962 A281      		ldd r26,Z+2
 11377 4964 B381      		ldd r27,Z+3
 11378 4966 F901      		movw r30,r18
 11379 4968 8083      		st Z,r24
 11380 496a 9183      		std Z+1,r25
 11381 496c A283      		std Z+2,r26
 11382 496e B383      		std Z+3,r27
1159:lp_solve_5.5/lp_presolve.c **** }
 11383               		.loc 2 1159 0
 11384 4970 0000      		nop
 11385               	/* epilogue start */
 11386 4972 2696      		adiw r28,6
 11387 4974 0FB6      		in __tmp_reg__,__SREG__
 11388 4976 F894      		cli
 11389 4978 DEBF      		out __SP_H__,r29
 11390 497a 0FBE      		out __SREG__,__tmp_reg__
 11391 497c CDBF      		out __SP_L__,r28
 11392 497e DF91      		pop r29
 11393 4980 CF91      		pop r28
 11394 4982 0895      		ret
 11395               		.cfi_endproc
 11396               	.LFE45:
 11398               		.section	.rodata
 11399               	.LC23:
 11400 04cf 7072 6573 		.string	"presolve_singletonbounds: Singleton variable %s in row %s infeasibility (%g << %g)\n"
 11400      6F6C 7665 
 11400      5F73 696E 
 11400      676C 6574 
 11400      6F6E 626F 
 11401               		.text
 11402               	.global	presolve_singletonbounds
 11404               	presolve_singletonbounds:
 11405               	.LFB46:
1160:lp_solve_5.5/lp_presolve.c **** 
1161:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_singletonbounds(presolverec *psdata, int rownr, int colnr, REAL *lobound, RE
1162:lp_solve_5.5/lp_presolve.c **** {
 11406               		.loc 2 1162 0
 11407               		.cfi_startproc
 11408 4984 8F92      		push r8
 11409               	.LCFI198:
 11410               		.cfi_def_cfa_offset 3
 11411               		.cfi_offset 8, -2
 11412 4986 9F92      		push r9
 11413               	.LCFI199:
 11414               		.cfi_def_cfa_offset 4
 11415               		.cfi_offset 9, -3
 11416 4988 AF92      		push r10
 11417               	.LCFI200:
 11418               		.cfi_def_cfa_offset 5
 11419               		.cfi_offset 10, -4
 11420 498a BF92      		push r11
 11421               	.LCFI201:
 11422               		.cfi_def_cfa_offset 6
 11423               		.cfi_offset 11, -5
 11424 498c CF92      		push r12
 11425               	.LCFI202:
 11426               		.cfi_def_cfa_offset 7
 11427               		.cfi_offset 12, -6
 11428 498e DF92      		push r13
 11429               	.LCFI203:
 11430               		.cfi_def_cfa_offset 8
 11431               		.cfi_offset 13, -7
 11432 4990 EF92      		push r14
 11433               	.LCFI204:
 11434               		.cfi_def_cfa_offset 9
 11435               		.cfi_offset 14, -8
 11436 4992 FF92      		push r15
 11437               	.LCFI205:
 11438               		.cfi_def_cfa_offset 10
 11439               		.cfi_offset 15, -9
 11440 4994 0F93      		push r16
 11441               	.LCFI206:
 11442               		.cfi_def_cfa_offset 11
 11443               		.cfi_offset 16, -10
 11444 4996 1F93      		push r17
 11445               	.LCFI207:
 11446               		.cfi_def_cfa_offset 12
 11447               		.cfi_offset 17, -11
 11448 4998 CF93      		push r28
 11449               	.LCFI208:
 11450               		.cfi_def_cfa_offset 13
 11451               		.cfi_offset 28, -12
 11452 499a DF93      		push r29
 11453               	.LCFI209:
 11454               		.cfi_def_cfa_offset 14
 11455               		.cfi_offset 29, -13
 11456 499c CDB7      		in r28,__SP_L__
 11457 499e DEB7      		in r29,__SP_H__
 11458               	.LCFI210:
 11459               		.cfi_def_cfa_register 28
 11460 49a0 6797      		sbiw r28,23
 11461               	.LCFI211:
 11462               		.cfi_def_cfa_offset 37
 11463 49a2 0FB6      		in __tmp_reg__,__SREG__
 11464 49a4 F894      		cli
 11465 49a6 DEBF      		out __SP_H__,r29
 11466 49a8 0FBE      		out __SREG__,__tmp_reg__
 11467 49aa CDBF      		out __SP_L__,r28
 11468               	/* prologue: function */
 11469               	/* frame size = 23 */
 11470               	/* stack size = 35 */
 11471               	.L__stack_usage = 35
 11472 49ac 9D87      		std Y+13,r25
 11473 49ae 8C87      		std Y+12,r24
 11474 49b0 7F87      		std Y+15,r23
 11475 49b2 6E87      		std Y+14,r22
 11476 49b4 598B      		std Y+17,r21
 11477 49b6 488B      		std Y+16,r20
 11478 49b8 3B8B      		std Y+19,r19
 11479 49ba 2A8B      		std Y+18,r18
 11480 49bc 1D8B      		std Y+21,r17
 11481 49be 0C8B      		std Y+20,r16
 11482 49c0 FF8A      		std Y+23,r15
 11483 49c2 EE8A      		std Y+22,r14
1163:lp_solve_5.5/lp_presolve.c ****   lprec  *lp = psdata->lp;
 11484               		.loc 2 1163 0
 11485 49c4 8C85      		ldd r24,Y+12
 11486 49c6 9D85      		ldd r25,Y+13
 11487 49c8 FC01      		movw r30,r24
 11488 49ca 8289      		ldd r24,Z+18
 11489 49cc 9389      		ldd r25,Z+19
 11490 49ce 9F83      		std Y+7,r25
 11491 49d0 8E83      		std Y+6,r24
1164:lp_solve_5.5/lp_presolve.c ****   REAL   coeff_a, epsvalue = psdata->epsvalue;
 11492               		.loc 2 1164 0
 11493 49d2 8C85      		ldd r24,Y+12
 11494 49d4 9D85      		ldd r25,Y+13
 11495 49d6 FC01      		movw r30,r24
 11496 49d8 8489      		ldd r24,Z+20
 11497 49da 9589      		ldd r25,Z+21
 11498 49dc A689      		ldd r26,Z+22
 11499 49de B789      		ldd r27,Z+23
 11500 49e0 8887      		std Y+8,r24
 11501 49e2 9987      		std Y+9,r25
 11502 49e4 AA87      		std Y+10,r26
 11503 49e6 BB87      		std Y+11,r27
1165:lp_solve_5.5/lp_presolve.c ****   MYBOOL isneg;
1166:lp_solve_5.5/lp_presolve.c **** 
1167:lp_solve_5.5/lp_presolve.c ****   /* Compute row singleton variable range */
1168:lp_solve_5.5/lp_presolve.c ****   if(is_constr_type(lp, rownr, EQ) && (fabs(*lobound) < epsvalue))
 11504               		.loc 2 1168 0
 11505 49e8 2E85      		ldd r18,Y+14
 11506 49ea 3F85      		ldd r19,Y+15
 11507 49ec 8E81      		ldd r24,Y+6
 11508 49ee 9F81      		ldd r25,Y+7
 11509 49f0 43E0      		ldi r20,lo8(3)
 11510 49f2 50E0      		ldi r21,0
 11511 49f4 B901      		movw r22,r18
 11512 49f6 0E94 0000 		call is_constr_type
 11513 49fa 8823      		tst r24
 11514 49fc 01F0      		breq .L413
 11515               		.loc 2 1168 0 is_stmt 0 discriminator 1
 11516 49fe 8A89      		ldd r24,Y+18
 11517 4a00 9B89      		ldd r25,Y+19
 11518 4a02 FC01      		movw r30,r24
 11519 4a04 8081      		ld r24,Z
 11520 4a06 9181      		ldd r25,Z+1
 11521 4a08 A281      		ldd r26,Z+2
 11522 4a0a B381      		ldd r27,Z+3
 11523 4a0c BF77      		andi r27,0x7f
 11524 4a0e 2885      		ldd r18,Y+8
 11525 4a10 3985      		ldd r19,Y+9
 11526 4a12 4A85      		ldd r20,Y+10
 11527 4a14 5B85      		ldd r21,Y+11
 11528 4a16 BC01      		movw r22,r24
 11529 4a18 CD01      		movw r24,r26
 11530 4a1a 0E94 0000 		call __ltsf2
 11531 4a1e 8823      		tst r24
 11532 4a20 04F4      		brge .L413
1169:lp_solve_5.5/lp_presolve.c ****     *lobound = *upbound = 0;
 11533               		.loc 2 1169 0 is_stmt 1
 11534 4a22 8C89      		ldd r24,Y+20
 11535 4a24 9D89      		ldd r25,Y+21
 11536 4a26 FC01      		movw r30,r24
 11537 4a28 1082      		st Z,__zero_reg__
 11538 4a2a 1182      		std Z+1,__zero_reg__
 11539 4a2c 1282      		std Z+2,__zero_reg__
 11540 4a2e 1382      		std Z+3,__zero_reg__
 11541 4a30 8C89      		ldd r24,Y+20
 11542 4a32 9D89      		ldd r25,Y+21
 11543 4a34 FC01      		movw r30,r24
 11544 4a36 8081      		ld r24,Z
 11545 4a38 9181      		ldd r25,Z+1
 11546 4a3a A281      		ldd r26,Z+2
 11547 4a3c B381      		ldd r27,Z+3
 11548 4a3e 2A89      		ldd r18,Y+18
 11549 4a40 3B89      		ldd r19,Y+19
 11550 4a42 F901      		movw r30,r18
 11551 4a44 8083      		st Z,r24
 11552 4a46 9183      		std Z+1,r25
 11553 4a48 A283      		std Z+2,r26
 11554 4a4a B383      		std Z+3,r27
 11555 4a4c 00C0      		rjmp .L415
 11556               	.L413:
1170:lp_solve_5.5/lp_presolve.c ****   else {
1171:lp_solve_5.5/lp_presolve.c ****     if(aval == NULL)
 11557               		.loc 2 1171 0
 11558 4a4e 8E89      		ldd r24,Y+22
 11559 4a50 9F89      		ldd r25,Y+23
 11560 4a52 892B      		or r24,r25
 11561 4a54 01F4      		brne .L416
1172:lp_solve_5.5/lp_presolve.c ****       coeff_a = get_mat(lp, rownr, colnr);
 11562               		.loc 2 1172 0
 11563 4a56 4889      		ldd r20,Y+16
 11564 4a58 5989      		ldd r21,Y+17
 11565 4a5a 2E85      		ldd r18,Y+14
 11566 4a5c 3F85      		ldd r19,Y+15
 11567 4a5e 8E81      		ldd r24,Y+6
 11568 4a60 9F81      		ldd r25,Y+7
 11569 4a62 B901      		movw r22,r18
 11570 4a64 0E94 0000 		call get_mat
 11571 4a68 DC01      		movw r26,r24
 11572 4a6a CB01      		movw r24,r22
 11573 4a6c 8983      		std Y+1,r24
 11574 4a6e 9A83      		std Y+2,r25
 11575 4a70 AB83      		std Y+3,r26
 11576 4a72 BC83      		std Y+4,r27
 11577 4a74 00C0      		rjmp .L417
 11578               	.L416:
1173:lp_solve_5.5/lp_presolve.c ****     else
1174:lp_solve_5.5/lp_presolve.c ****       coeff_a = *aval;
 11579               		.loc 2 1174 0
 11580 4a76 8E89      		ldd r24,Y+22
 11581 4a78 9F89      		ldd r25,Y+23
 11582 4a7a FC01      		movw r30,r24
 11583 4a7c 8081      		ld r24,Z
 11584 4a7e 9181      		ldd r25,Z+1
 11585 4a80 A281      		ldd r26,Z+2
 11586 4a82 B381      		ldd r27,Z+3
 11587 4a84 8983      		std Y+1,r24
 11588 4a86 9A83      		std Y+2,r25
 11589 4a88 AB83      		std Y+3,r26
 11590 4a8a BC83      		std Y+4,r27
 11591               	.L417:
1175:lp_solve_5.5/lp_presolve.c ****     isneg = (MYBOOL) (coeff_a < 0);
 11592               		.loc 2 1175 0
 11593 4a8c 11E0      		ldi r17,lo8(1)
 11594 4a8e 20E0      		ldi r18,0
 11595 4a90 30E0      		ldi r19,0
 11596 4a92 A901      		movw r20,r18
 11597 4a94 6981      		ldd r22,Y+1
 11598 4a96 7A81      		ldd r23,Y+2
 11599 4a98 8B81      		ldd r24,Y+3
 11600 4a9a 9C81      		ldd r25,Y+4
 11601 4a9c 0E94 0000 		call __ltsf2
 11602 4aa0 8823      		tst r24
 11603 4aa2 04F0      		brlt .L418
 11604 4aa4 10E0      		ldi r17,0
 11605               	.L418:
 11606 4aa6 1D83      		std Y+5,r17
1176:lp_solve_5.5/lp_presolve.c ****     if(*lobound > -lp->infinite)
 11607               		.loc 2 1176 0
 11608 4aa8 8A89      		ldd r24,Y+18
 11609 4aaa 9B89      		ldd r25,Y+19
 11610 4aac FC01      		movw r30,r24
 11611 4aae E080      		ld r14,Z
 11612 4ab0 F180      		ldd r15,Z+1
 11613 4ab2 0281      		ldd r16,Z+2
 11614 4ab4 1381      		ldd r17,Z+3
 11615 4ab6 8E81      		ldd r24,Y+6
 11616 4ab8 9F81      		ldd r25,Y+7
 11617 4aba 865F      		subi r24,-10
 11618 4abc 9C4F      		sbci r25,-4
 11619 4abe FC01      		movw r30,r24
 11620 4ac0 8081      		ld r24,Z
 11621 4ac2 9181      		ldd r25,Z+1
 11622 4ac4 A281      		ldd r26,Z+2
 11623 4ac6 B381      		ldd r27,Z+3
 11624 4ac8 B058      		subi r27,0x80
 11625 4aca 9C01      		movw r18,r24
 11626 4acc AD01      		movw r20,r26
 11627 4ace C801      		movw r24,r16
 11628 4ad0 B701      		movw r22,r14
 11629 4ad2 0E94 0000 		call __gtsf2
 11630 4ad6 1816      		cp __zero_reg__,r24
 11631 4ad8 04F4      		brge .L462
1177:lp_solve_5.5/lp_presolve.c ****       *lobound /= coeff_a;
 11632               		.loc 2 1177 0
 11633 4ada 8A89      		ldd r24,Y+18
 11634 4adc 9B89      		ldd r25,Y+19
 11635 4ade FC01      		movw r30,r24
 11636 4ae0 8081      		ld r24,Z
 11637 4ae2 9181      		ldd r25,Z+1
 11638 4ae4 A281      		ldd r26,Z+2
 11639 4ae6 B381      		ldd r27,Z+3
 11640 4ae8 2981      		ldd r18,Y+1
 11641 4aea 3A81      		ldd r19,Y+2
 11642 4aec 4B81      		ldd r20,Y+3
 11643 4aee 5C81      		ldd r21,Y+4
 11644 4af0 BC01      		movw r22,r24
 11645 4af2 CD01      		movw r24,r26
 11646 4af4 0E94 0000 		call __divsf3
 11647 4af8 DC01      		movw r26,r24
 11648 4afa CB01      		movw r24,r22
 11649 4afc 2A89      		ldd r18,Y+18
 11650 4afe 3B89      		ldd r19,Y+19
 11651 4b00 F901      		movw r30,r18
 11652 4b02 8083      		st Z,r24
 11653 4b04 9183      		std Z+1,r25
 11654 4b06 A283      		std Z+2,r26
 11655 4b08 B383      		std Z+3,r27
 11656 4b0a 00C0      		rjmp .L421
 11657               	.L462:
1178:lp_solve_5.5/lp_presolve.c ****     else if(isneg)
 11658               		.loc 2 1178 0
 11659 4b0c 8D81      		ldd r24,Y+5
 11660 4b0e 8823      		tst r24
 11661 4b10 01F0      		breq .L421
1179:lp_solve_5.5/lp_presolve.c ****       *lobound = -(*lobound);
 11662               		.loc 2 1179 0
 11663 4b12 8A89      		ldd r24,Y+18
 11664 4b14 9B89      		ldd r25,Y+19
 11665 4b16 FC01      		movw r30,r24
 11666 4b18 8081      		ld r24,Z
 11667 4b1a 9181      		ldd r25,Z+1
 11668 4b1c A281      		ldd r26,Z+2
 11669 4b1e B381      		ldd r27,Z+3
 11670 4b20 B058      		subi r27,0x80
 11671 4b22 2A89      		ldd r18,Y+18
 11672 4b24 3B89      		ldd r19,Y+19
 11673 4b26 F901      		movw r30,r18
 11674 4b28 8083      		st Z,r24
 11675 4b2a 9183      		std Z+1,r25
 11676 4b2c A283      		std Z+2,r26
 11677 4b2e B383      		std Z+3,r27
 11678               	.L421:
1180:lp_solve_5.5/lp_presolve.c ****     if(*upbound < lp->infinite)
 11679               		.loc 2 1180 0
 11680 4b30 8C89      		ldd r24,Y+20
 11681 4b32 9D89      		ldd r25,Y+21
 11682 4b34 FC01      		movw r30,r24
 11683 4b36 8081      		ld r24,Z
 11684 4b38 9181      		ldd r25,Z+1
 11685 4b3a A281      		ldd r26,Z+2
 11686 4b3c B381      		ldd r27,Z+3
 11687 4b3e 2E81      		ldd r18,Y+6
 11688 4b40 3F81      		ldd r19,Y+7
 11689 4b42 265F      		subi r18,-10
 11690 4b44 3C4F      		sbci r19,-4
 11691 4b46 F901      		movw r30,r18
 11692 4b48 2081      		ld r18,Z
 11693 4b4a 3181      		ldd r19,Z+1
 11694 4b4c 4281      		ldd r20,Z+2
 11695 4b4e 5381      		ldd r21,Z+3
 11696 4b50 BC01      		movw r22,r24
 11697 4b52 CD01      		movw r24,r26
 11698 4b54 0E94 0000 		call __ltsf2
 11699 4b58 8823      		tst r24
 11700 4b5a 04F4      		brge .L463
1181:lp_solve_5.5/lp_presolve.c ****       *upbound /= coeff_a;
 11701               		.loc 2 1181 0
 11702 4b5c 8C89      		ldd r24,Y+20
 11703 4b5e 9D89      		ldd r25,Y+21
 11704 4b60 FC01      		movw r30,r24
 11705 4b62 8081      		ld r24,Z
 11706 4b64 9181      		ldd r25,Z+1
 11707 4b66 A281      		ldd r26,Z+2
 11708 4b68 B381      		ldd r27,Z+3
 11709 4b6a 2981      		ldd r18,Y+1
 11710 4b6c 3A81      		ldd r19,Y+2
 11711 4b6e 4B81      		ldd r20,Y+3
 11712 4b70 5C81      		ldd r21,Y+4
 11713 4b72 BC01      		movw r22,r24
 11714 4b74 CD01      		movw r24,r26
 11715 4b76 0E94 0000 		call __divsf3
 11716 4b7a DC01      		movw r26,r24
 11717 4b7c CB01      		movw r24,r22
 11718 4b7e 2C89      		ldd r18,Y+20
 11719 4b80 3D89      		ldd r19,Y+21
 11720 4b82 F901      		movw r30,r18
 11721 4b84 8083      		st Z,r24
 11722 4b86 9183      		std Z+1,r25
 11723 4b88 A283      		std Z+2,r26
 11724 4b8a B383      		std Z+3,r27
 11725 4b8c 00C0      		rjmp .L424
 11726               	.L463:
1182:lp_solve_5.5/lp_presolve.c ****     else if(isneg)
 11727               		.loc 2 1182 0
 11728 4b8e 8D81      		ldd r24,Y+5
 11729 4b90 8823      		tst r24
 11730 4b92 01F0      		breq .L424
1183:lp_solve_5.5/lp_presolve.c ****       *upbound = -(*upbound);
 11731               		.loc 2 1183 0
 11732 4b94 8C89      		ldd r24,Y+20
 11733 4b96 9D89      		ldd r25,Y+21
 11734 4b98 FC01      		movw r30,r24
 11735 4b9a 8081      		ld r24,Z
 11736 4b9c 9181      		ldd r25,Z+1
 11737 4b9e A281      		ldd r26,Z+2
 11738 4ba0 B381      		ldd r27,Z+3
 11739 4ba2 B058      		subi r27,0x80
 11740 4ba4 2C89      		ldd r18,Y+20
 11741 4ba6 3D89      		ldd r19,Y+21
 11742 4ba8 F901      		movw r30,r18
 11743 4baa 8083      		st Z,r24
 11744 4bac 9183      		std Z+1,r25
 11745 4bae A283      		std Z+2,r26
 11746 4bb0 B383      		std Z+3,r27
 11747               	.L424:
1184:lp_solve_5.5/lp_presolve.c ****     if(isneg)
 11748               		.loc 2 1184 0
 11749 4bb2 8D81      		ldd r24,Y+5
 11750 4bb4 8823      		tst r24
 11751 4bb6 01F0      		breq .L415
1185:lp_solve_5.5/lp_presolve.c ****       swapREAL(lobound, upbound);
 11752               		.loc 2 1185 0
 11753 4bb8 2C89      		ldd r18,Y+20
 11754 4bba 3D89      		ldd r19,Y+21
 11755 4bbc 8A89      		ldd r24,Y+18
 11756 4bbe 9B89      		ldd r25,Y+19
 11757 4bc0 B901      		movw r22,r18
 11758 4bc2 0E94 0000 		call swapREAL
 11759               	.L415:
1186:lp_solve_5.5/lp_presolve.c ****   }
1187:lp_solve_5.5/lp_presolve.c **** 
1188:lp_solve_5.5/lp_presolve.c ****   /* Check against bound - handle SC variables specially */
1189:lp_solve_5.5/lp_presolve.c ****   if(is_semicont(lp, colnr)) {
 11760               		.loc 2 1189 0
 11761 4bc6 2889      		ldd r18,Y+16
 11762 4bc8 3989      		ldd r19,Y+17
 11763 4bca 8E81      		ldd r24,Y+6
 11764 4bcc 9F81      		ldd r25,Y+7
 11765 4bce B901      		movw r22,r18
 11766 4bd0 0E94 0000 		call is_semicont
 11767 4bd4 8823      		tst r24
 11768 4bd6 01F4      		brne .+2
 11769 4bd8 00C0      		rjmp .L425
1190:lp_solve_5.5/lp_presolve.c ****     coeff_a = get_lowbo(lp, colnr);
 11770               		.loc 2 1190 0
 11771 4bda 2889      		ldd r18,Y+16
 11772 4bdc 3989      		ldd r19,Y+17
 11773 4bde 8E81      		ldd r24,Y+6
 11774 4be0 9F81      		ldd r25,Y+7
 11775 4be2 B901      		movw r22,r18
 11776 4be4 0E94 0000 		call get_lowbo
 11777 4be8 DC01      		movw r26,r24
 11778 4bea CB01      		movw r24,r22
 11779 4bec 8983      		std Y+1,r24
 11780 4bee 9A83      		std Y+2,r25
 11781 4bf0 AB83      		std Y+3,r26
 11782 4bf2 BC83      		std Y+4,r27
1191:lp_solve_5.5/lp_presolve.c ****     if(coeff_a > 0) {
 11783               		.loc 2 1191 0
 11784 4bf4 20E0      		ldi r18,0
 11785 4bf6 30E0      		ldi r19,0
 11786 4bf8 A901      		movw r20,r18
 11787 4bfa 6981      		ldd r22,Y+1
 11788 4bfc 7A81      		ldd r23,Y+2
 11789 4bfe 8B81      		ldd r24,Y+3
 11790 4c00 9C81      		ldd r25,Y+4
 11791 4c02 0E94 0000 		call __gtsf2
 11792 4c06 1816      		cp __zero_reg__,r24
 11793 4c08 04F0      		brlt .+2
 11794 4c0a 00C0      		rjmp .L464
1192:lp_solve_5.5/lp_presolve.c ****       SETMAX(*lobound, 0.0);
 11795               		.loc 2 1192 0
 11796 4c0c 8A89      		ldd r24,Y+18
 11797 4c0e 9B89      		ldd r25,Y+19
 11798 4c10 FC01      		movw r30,r24
 11799 4c12 8081      		ld r24,Z
 11800 4c14 9181      		ldd r25,Z+1
 11801 4c16 A281      		ldd r26,Z+2
 11802 4c18 B381      		ldd r27,Z+3
 11803 4c1a 20E0      		ldi r18,0
 11804 4c1c 30E0      		ldi r19,0
 11805 4c1e A901      		movw r20,r18
 11806 4c20 BC01      		movw r22,r24
 11807 4c22 CD01      		movw r24,r26
 11808 4c24 0E94 0000 		call __ltsf2
 11809 4c28 8823      		tst r24
 11810 4c2a 04F4      		brge .L428
 11811               		.loc 2 1192 0 is_stmt 0 discriminator 1
 11812 4c2c 8A89      		ldd r24,Y+18
 11813 4c2e 9B89      		ldd r25,Y+19
 11814 4c30 FC01      		movw r30,r24
 11815 4c32 1082      		st Z,__zero_reg__
 11816 4c34 1182      		std Z+1,__zero_reg__
 11817 4c36 1282      		std Z+2,__zero_reg__
 11818 4c38 1382      		std Z+3,__zero_reg__
 11819               	.L428:
1193:lp_solve_5.5/lp_presolve.c ****       SETMIN(*upbound, get_upbo(lp, colnr));
 11820               		.loc 2 1193 0 is_stmt 1
 11821 4c3a 8C89      		ldd r24,Y+20
 11822 4c3c 9D89      		ldd r25,Y+21
 11823 4c3e FC01      		movw r30,r24
 11824 4c40 C080      		ld r12,Z
 11825 4c42 D180      		ldd r13,Z+1
 11826 4c44 E280      		ldd r14,Z+2
 11827 4c46 F380      		ldd r15,Z+3
 11828 4c48 2889      		ldd r18,Y+16
 11829 4c4a 3989      		ldd r19,Y+17
 11830 4c4c 8E81      		ldd r24,Y+6
 11831 4c4e 9F81      		ldd r25,Y+7
 11832 4c50 B901      		movw r22,r18
 11833 4c52 0E94 0000 		call get_upbo
 11834 4c56 DC01      		movw r26,r24
 11835 4c58 CB01      		movw r24,r22
 11836 4c5a 9C01      		movw r18,r24
 11837 4c5c AD01      		movw r20,r26
 11838 4c5e C701      		movw r24,r14
 11839 4c60 B601      		movw r22,r12
 11840 4c62 0E94 0000 		call __gtsf2
 11841 4c66 1816      		cp __zero_reg__,r24
 11842 4c68 04F0      		brlt .+2
 11843 4c6a 00C0      		rjmp .L437
 11844               		.loc 2 1193 0 is_stmt 0 discriminator 1
 11845 4c6c 2889      		ldd r18,Y+16
 11846 4c6e 3989      		ldd r19,Y+17
 11847 4c70 8E81      		ldd r24,Y+6
 11848 4c72 9F81      		ldd r25,Y+7
 11849 4c74 B901      		movw r22,r18
 11850 4c76 0E94 0000 		call get_upbo
 11851 4c7a DC01      		movw r26,r24
 11852 4c7c CB01      		movw r24,r22
 11853 4c7e 2C89      		ldd r18,Y+20
 11854 4c80 3D89      		ldd r19,Y+21
 11855 4c82 F901      		movw r30,r18
 11856 4c84 8083      		st Z,r24
 11857 4c86 9183      		std Z+1,r25
 11858 4c88 A283      		std Z+2,r26
 11859 4c8a B383      		std Z+3,r27
 11860 4c8c 00C0      		rjmp .L437
 11861               	.L464:
1194:lp_solve_5.5/lp_presolve.c ****     }
1195:lp_solve_5.5/lp_presolve.c ****     else {
1196:lp_solve_5.5/lp_presolve.c ****       coeff_a = get_upbo(lp, colnr);
 11862               		.loc 2 1196 0 is_stmt 1
 11863 4c8e 2889      		ldd r18,Y+16
 11864 4c90 3989      		ldd r19,Y+17
 11865 4c92 8E81      		ldd r24,Y+6
 11866 4c94 9F81      		ldd r25,Y+7
 11867 4c96 B901      		movw r22,r18
 11868 4c98 0E94 0000 		call get_upbo
 11869 4c9c DC01      		movw r26,r24
 11870 4c9e CB01      		movw r24,r22
 11871 4ca0 8983      		std Y+1,r24
 11872 4ca2 9A83      		std Y+2,r25
 11873 4ca4 AB83      		std Y+3,r26
 11874 4ca6 BC83      		std Y+4,r27
1197:lp_solve_5.5/lp_presolve.c ****       if(coeff_a > 0) {
 11875               		.loc 2 1197 0
 11876 4ca8 20E0      		ldi r18,0
 11877 4caa 30E0      		ldi r19,0
 11878 4cac A901      		movw r20,r18
 11879 4cae 6981      		ldd r22,Y+1
 11880 4cb0 7A81      		ldd r23,Y+2
 11881 4cb2 8B81      		ldd r24,Y+3
 11882 4cb4 9C81      		ldd r25,Y+4
 11883 4cb6 0E94 0000 		call __gtsf2
 11884 4cba 1816      		cp __zero_reg__,r24
 11885 4cbc 04F0      		brlt .+2
 11886 4cbe 00C0      		rjmp .L437
1198:lp_solve_5.5/lp_presolve.c ****         SETMAX(*lobound, get_lowbo(lp, colnr));
 11887               		.loc 2 1198 0
 11888 4cc0 8A89      		ldd r24,Y+18
 11889 4cc2 9B89      		ldd r25,Y+19
 11890 4cc4 FC01      		movw r30,r24
 11891 4cc6 C080      		ld r12,Z
 11892 4cc8 D180      		ldd r13,Z+1
 11893 4cca E280      		ldd r14,Z+2
 11894 4ccc F380      		ldd r15,Z+3
 11895 4cce 2889      		ldd r18,Y+16
 11896 4cd0 3989      		ldd r19,Y+17
 11897 4cd2 8E81      		ldd r24,Y+6
 11898 4cd4 9F81      		ldd r25,Y+7
 11899 4cd6 B901      		movw r22,r18
 11900 4cd8 0E94 0000 		call get_lowbo
 11901 4cdc DC01      		movw r26,r24
 11902 4cde CB01      		movw r24,r22
 11903 4ce0 9C01      		movw r18,r24
 11904 4ce2 AD01      		movw r20,r26
 11905 4ce4 C701      		movw r24,r14
 11906 4ce6 B601      		movw r22,r12
 11907 4ce8 0E94 0000 		call __ltsf2
 11908 4cec 8823      		tst r24
 11909 4cee 04F4      		brge .L434
 11910               		.loc 2 1198 0 is_stmt 0 discriminator 1
 11911 4cf0 2889      		ldd r18,Y+16
 11912 4cf2 3989      		ldd r19,Y+17
 11913 4cf4 8E81      		ldd r24,Y+6
 11914 4cf6 9F81      		ldd r25,Y+7
 11915 4cf8 B901      		movw r22,r18
 11916 4cfa 0E94 0000 		call get_lowbo
 11917 4cfe DC01      		movw r26,r24
 11918 4d00 CB01      		movw r24,r22
 11919 4d02 2A89      		ldd r18,Y+18
 11920 4d04 3B89      		ldd r19,Y+19
 11921 4d06 F901      		movw r30,r18
 11922 4d08 8083      		st Z,r24
 11923 4d0a 9183      		std Z+1,r25
 11924 4d0c A283      		std Z+2,r26
 11925 4d0e B383      		std Z+3,r27
 11926               	.L434:
1199:lp_solve_5.5/lp_presolve.c ****         SETMIN(*upbound, 0.0);
 11927               		.loc 2 1199 0 is_stmt 1
 11928 4d10 8C89      		ldd r24,Y+20
 11929 4d12 9D89      		ldd r25,Y+21
 11930 4d14 FC01      		movw r30,r24
 11931 4d16 8081      		ld r24,Z
 11932 4d18 9181      		ldd r25,Z+1
 11933 4d1a A281      		ldd r26,Z+2
 11934 4d1c B381      		ldd r27,Z+3
 11935 4d1e 20E0      		ldi r18,0
 11936 4d20 30E0      		ldi r19,0
 11937 4d22 A901      		movw r20,r18
 11938 4d24 BC01      		movw r22,r24
 11939 4d26 CD01      		movw r24,r26
 11940 4d28 0E94 0000 		call __gtsf2
 11941 4d2c 1816      		cp __zero_reg__,r24
 11942 4d2e 04F0      		brlt .+2
 11943 4d30 00C0      		rjmp .L437
 11944               		.loc 2 1199 0 is_stmt 0 discriminator 1
 11945 4d32 8C89      		ldd r24,Y+20
 11946 4d34 9D89      		ldd r25,Y+21
 11947 4d36 FC01      		movw r30,r24
 11948 4d38 1082      		st Z,__zero_reg__
 11949 4d3a 1182      		std Z+1,__zero_reg__
 11950 4d3c 1282      		std Z+2,__zero_reg__
 11951 4d3e 1382      		std Z+3,__zero_reg__
 11952 4d40 00C0      		rjmp .L437
 11953               	.L425:
1200:lp_solve_5.5/lp_presolve.c ****       }
1201:lp_solve_5.5/lp_presolve.c ****     }
1202:lp_solve_5.5/lp_presolve.c ****   }
1203:lp_solve_5.5/lp_presolve.c ****   else {
1204:lp_solve_5.5/lp_presolve.c ****     SETMAX(*lobound, get_lowbo(lp, colnr));
 11954               		.loc 2 1204 0 is_stmt 1
 11955 4d42 8A89      		ldd r24,Y+18
 11956 4d44 9B89      		ldd r25,Y+19
 11957 4d46 FC01      		movw r30,r24
 11958 4d48 C080      		ld r12,Z
 11959 4d4a D180      		ldd r13,Z+1
 11960 4d4c E280      		ldd r14,Z+2
 11961 4d4e F380      		ldd r15,Z+3
 11962 4d50 2889      		ldd r18,Y+16
 11963 4d52 3989      		ldd r19,Y+17
 11964 4d54 8E81      		ldd r24,Y+6
 11965 4d56 9F81      		ldd r25,Y+7
 11966 4d58 B901      		movw r22,r18
 11967 4d5a 0E94 0000 		call get_lowbo
 11968 4d5e DC01      		movw r26,r24
 11969 4d60 CB01      		movw r24,r22
 11970 4d62 9C01      		movw r18,r24
 11971 4d64 AD01      		movw r20,r26
 11972 4d66 C701      		movw r24,r14
 11973 4d68 B601      		movw r22,r12
 11974 4d6a 0E94 0000 		call __ltsf2
 11975 4d6e 8823      		tst r24
 11976 4d70 04F4      		brge .L438
 11977               		.loc 2 1204 0 is_stmt 0 discriminator 1
 11978 4d72 2889      		ldd r18,Y+16
 11979 4d74 3989      		ldd r19,Y+17
 11980 4d76 8E81      		ldd r24,Y+6
 11981 4d78 9F81      		ldd r25,Y+7
 11982 4d7a B901      		movw r22,r18
 11983 4d7c 0E94 0000 		call get_lowbo
 11984 4d80 DC01      		movw r26,r24
 11985 4d82 CB01      		movw r24,r22
 11986 4d84 2A89      		ldd r18,Y+18
 11987 4d86 3B89      		ldd r19,Y+19
 11988 4d88 F901      		movw r30,r18
 11989 4d8a 8083      		st Z,r24
 11990 4d8c 9183      		std Z+1,r25
 11991 4d8e A283      		std Z+2,r26
 11992 4d90 B383      		std Z+3,r27
 11993               	.L438:
1205:lp_solve_5.5/lp_presolve.c ****     SETMIN(*upbound, get_upbo(lp, colnr));
 11994               		.loc 2 1205 0 is_stmt 1
 11995 4d92 8C89      		ldd r24,Y+20
 11996 4d94 9D89      		ldd r25,Y+21
 11997 4d96 FC01      		movw r30,r24
 11998 4d98 C080      		ld r12,Z
 11999 4d9a D180      		ldd r13,Z+1
 12000 4d9c E280      		ldd r14,Z+2
 12001 4d9e F380      		ldd r15,Z+3
 12002 4da0 2889      		ldd r18,Y+16
 12003 4da2 3989      		ldd r19,Y+17
 12004 4da4 8E81      		ldd r24,Y+6
 12005 4da6 9F81      		ldd r25,Y+7
 12006 4da8 B901      		movw r22,r18
 12007 4daa 0E94 0000 		call get_upbo
 12008 4dae DC01      		movw r26,r24
 12009 4db0 CB01      		movw r24,r22
 12010 4db2 9C01      		movw r18,r24
 12011 4db4 AD01      		movw r20,r26
 12012 4db6 C701      		movw r24,r14
 12013 4db8 B601      		movw r22,r12
 12014 4dba 0E94 0000 		call __gtsf2
 12015 4dbe 1816      		cp __zero_reg__,r24
 12016 4dc0 04F4      		brge .L437
 12017               		.loc 2 1205 0 is_stmt 0 discriminator 1
 12018 4dc2 2889      		ldd r18,Y+16
 12019 4dc4 3989      		ldd r19,Y+17
 12020 4dc6 8E81      		ldd r24,Y+6
 12021 4dc8 9F81      		ldd r25,Y+7
 12022 4dca B901      		movw r22,r18
 12023 4dcc 0E94 0000 		call get_upbo
 12024 4dd0 DC01      		movw r26,r24
 12025 4dd2 CB01      		movw r24,r22
 12026 4dd4 2C89      		ldd r18,Y+20
 12027 4dd6 3D89      		ldd r19,Y+21
 12028 4dd8 F901      		movw r30,r18
 12029 4dda 8083      		st Z,r24
 12030 4ddc 9183      		std Z+1,r25
 12031 4dde A283      		std Z+2,r26
 12032 4de0 B383      		std Z+3,r27
 12033               	.L437:
1206:lp_solve_5.5/lp_presolve.c ****   }
1207:lp_solve_5.5/lp_presolve.c **** 
1208:lp_solve_5.5/lp_presolve.c ****   /* Return with consistency status */
1209:lp_solve_5.5/lp_presolve.c **** #ifdef DoPresolveRelativeTest
1210:lp_solve_5.5/lp_presolve.c ****   isneg = (MYBOOL) (my_reldiff(*upbound, *lobound) >= - epsvalue);
1211:lp_solve_5.5/lp_presolve.c **** #else
1212:lp_solve_5.5/lp_presolve.c ****   isneg = (MYBOOL) (*upbound >= *lobound - epsvalue);
 12034               		.loc 2 1212 0 is_stmt 1
 12035 4de2 8C89      		ldd r24,Y+20
 12036 4de4 9D89      		ldd r25,Y+21
 12037 4de6 FC01      		movw r30,r24
 12038 4de8 C080      		ld r12,Z
 12039 4dea D180      		ldd r13,Z+1
 12040 4dec E280      		ldd r14,Z+2
 12041 4dee F380      		ldd r15,Z+3
 12042 4df0 8A89      		ldd r24,Y+18
 12043 4df2 9B89      		ldd r25,Y+19
 12044 4df4 FC01      		movw r30,r24
 12045 4df6 8081      		ld r24,Z
 12046 4df8 9181      		ldd r25,Z+1
 12047 4dfa A281      		ldd r26,Z+2
 12048 4dfc B381      		ldd r27,Z+3
 12049 4dfe 2885      		ldd r18,Y+8
 12050 4e00 3985      		ldd r19,Y+9
 12051 4e02 4A85      		ldd r20,Y+10
 12052 4e04 5B85      		ldd r21,Y+11
 12053 4e06 BC01      		movw r22,r24
 12054 4e08 CD01      		movw r24,r26
 12055 4e0a 0E94 0000 		call __subsf3
 12056 4e0e DC01      		movw r26,r24
 12057 4e10 CB01      		movw r24,r22
 12058 4e12 11E0      		ldi r17,lo8(1)
 12059 4e14 9C01      		movw r18,r24
 12060 4e16 AD01      		movw r20,r26
 12061 4e18 C701      		movw r24,r14
 12062 4e1a B601      		movw r22,r12
 12063 4e1c 0E94 0000 		call __gesf2
 12064 4e20 8823      		tst r24
 12065 4e22 04F4      		brge .L441
 12066 4e24 10E0      		ldi r17,0
 12067               	.L441:
 12068 4e26 1D83      		std Y+5,r17
1213:lp_solve_5.5/lp_presolve.c **** #endif
1214:lp_solve_5.5/lp_presolve.c ****   if(!isneg) {
 12069               		.loc 2 1214 0
 12070 4e28 8D81      		ldd r24,Y+5
 12071 4e2a 8823      		tst r24
 12072 4e2c 01F0      		breq .+2
 12073 4e2e 00C0      		rjmp .L442
1215:lp_solve_5.5/lp_presolve.c ****     /* Attempt bound-related error correction */
1216:lp_solve_5.5/lp_presolve.c ****     if(fabs(my_reldiff(*lobound, get_upbo(lp, colnr))) < PRESOLVE_BOUNDSLACK*epsvalue)
 12074               		.loc 2 1216 0
 12075 4e30 8A89      		ldd r24,Y+18
 12076 4e32 9B89      		ldd r25,Y+19
 12077 4e34 FC01      		movw r30,r24
 12078 4e36 C080      		ld r12,Z
 12079 4e38 D180      		ldd r13,Z+1
 12080 4e3a E280      		ldd r14,Z+2
 12081 4e3c F380      		ldd r15,Z+3
 12082 4e3e 2889      		ldd r18,Y+16
 12083 4e40 3989      		ldd r19,Y+17
 12084 4e42 8E81      		ldd r24,Y+6
 12085 4e44 9F81      		ldd r25,Y+7
 12086 4e46 B901      		movw r22,r18
 12087 4e48 0E94 0000 		call get_upbo
 12088 4e4c DC01      		movw r26,r24
 12089 4e4e CB01      		movw r24,r22
 12090 4e50 9C01      		movw r18,r24
 12091 4e52 AD01      		movw r20,r26
 12092 4e54 C701      		movw r24,r14
 12093 4e56 B601      		movw r22,r12
 12094 4e58 0E94 0000 		call __subsf3
 12095 4e5c DC01      		movw r26,r24
 12096 4e5e CB01      		movw r24,r22
 12097 4e60 6C01      		movw r12,r24
 12098 4e62 7D01      		movw r14,r26
 12099 4e64 2889      		ldd r18,Y+16
 12100 4e66 3989      		ldd r19,Y+17
 12101 4e68 8E81      		ldd r24,Y+6
 12102 4e6a 9F81      		ldd r25,Y+7
 12103 4e6c B901      		movw r22,r18
 12104 4e6e 0E94 0000 		call get_upbo
 12105 4e72 DC01      		movw r26,r24
 12106 4e74 CB01      		movw r24,r22
 12107 4e76 BF77      		andi r27,0x7f
 12108 4e78 20E0      		ldi r18,0
 12109 4e7a 30E0      		ldi r19,0
 12110 4e7c 40E8      		ldi r20,lo8(-128)
 12111 4e7e 5FE3      		ldi r21,lo8(63)
 12112 4e80 BC01      		movw r22,r24
 12113 4e82 CD01      		movw r24,r26
 12114 4e84 0E94 0000 		call __addsf3
 12115 4e88 DC01      		movw r26,r24
 12116 4e8a CB01      		movw r24,r22
 12117 4e8c 9C01      		movw r18,r24
 12118 4e8e AD01      		movw r20,r26
 12119 4e90 C701      		movw r24,r14
 12120 4e92 B601      		movw r22,r12
 12121 4e94 0E94 0000 		call __divsf3
 12122 4e98 DC01      		movw r26,r24
 12123 4e9a CB01      		movw r24,r22
 12124 4e9c 6C01      		movw r12,r24
 12125 4e9e 7D01      		movw r14,r26
 12126 4ea0 E894      		clt
 12127 4ea2 F7F8      		bld r15,7
 12128 4ea4 20E0      		ldi r18,0
 12129 4ea6 30E0      		ldi r19,0
 12130 4ea8 40E2      		ldi r20,lo8(32)
 12131 4eaa 51E4      		ldi r21,lo8(65)
 12132 4eac 6885      		ldd r22,Y+8
 12133 4eae 7985      		ldd r23,Y+9
 12134 4eb0 8A85      		ldd r24,Y+10
 12135 4eb2 9B85      		ldd r25,Y+11
 12136 4eb4 0E94 0000 		call __mulsf3
 12137 4eb8 DC01      		movw r26,r24
 12138 4eba CB01      		movw r24,r22
 12139 4ebc 9C01      		movw r18,r24
 12140 4ebe AD01      		movw r20,r26
 12141 4ec0 C701      		movw r24,r14
 12142 4ec2 B601      		movw r22,r12
 12143 4ec4 0E94 0000 		call __ltsf2
 12144 4ec8 8823      		tst r24
 12145 4eca 04F4      		brge .L465
1217:lp_solve_5.5/lp_presolve.c ****       *lobound = get_upbo(lp, colnr);
 12146               		.loc 2 1217 0
 12147 4ecc 2889      		ldd r18,Y+16
 12148 4ece 3989      		ldd r19,Y+17
 12149 4ed0 8E81      		ldd r24,Y+6
 12150 4ed2 9F81      		ldd r25,Y+7
 12151 4ed4 B901      		movw r22,r18
 12152 4ed6 0E94 0000 		call get_upbo
 12153 4eda DC01      		movw r26,r24
 12154 4edc CB01      		movw r24,r22
 12155 4ede 2A89      		ldd r18,Y+18
 12156 4ee0 3B89      		ldd r19,Y+19
 12157 4ee2 F901      		movw r30,r18
 12158 4ee4 8083      		st Z,r24
 12159 4ee6 9183      		std Z+1,r25
 12160 4ee8 A283      		std Z+2,r26
 12161 4eea B383      		std Z+3,r27
 12162 4eec 00C0      		rjmp .L445
 12163               	.L465:
1218:lp_solve_5.5/lp_presolve.c ****     else if(fabs(my_reldiff(*upbound, get_lowbo(lp, colnr))) < PRESOLVE_BOUNDSLACK*epsvalue)
 12164               		.loc 2 1218 0
 12165 4eee 8C89      		ldd r24,Y+20
 12166 4ef0 9D89      		ldd r25,Y+21
 12167 4ef2 FC01      		movw r30,r24
 12168 4ef4 C080      		ld r12,Z
 12169 4ef6 D180      		ldd r13,Z+1
 12170 4ef8 E280      		ldd r14,Z+2
 12171 4efa F380      		ldd r15,Z+3
 12172 4efc 2889      		ldd r18,Y+16
 12173 4efe 3989      		ldd r19,Y+17
 12174 4f00 8E81      		ldd r24,Y+6
 12175 4f02 9F81      		ldd r25,Y+7
 12176 4f04 B901      		movw r22,r18
 12177 4f06 0E94 0000 		call get_lowbo
 12178 4f0a DC01      		movw r26,r24
 12179 4f0c CB01      		movw r24,r22
 12180 4f0e 9C01      		movw r18,r24
 12181 4f10 AD01      		movw r20,r26
 12182 4f12 C701      		movw r24,r14
 12183 4f14 B601      		movw r22,r12
 12184 4f16 0E94 0000 		call __subsf3
 12185 4f1a DC01      		movw r26,r24
 12186 4f1c CB01      		movw r24,r22
 12187 4f1e 6C01      		movw r12,r24
 12188 4f20 7D01      		movw r14,r26
 12189 4f22 2889      		ldd r18,Y+16
 12190 4f24 3989      		ldd r19,Y+17
 12191 4f26 8E81      		ldd r24,Y+6
 12192 4f28 9F81      		ldd r25,Y+7
 12193 4f2a B901      		movw r22,r18
 12194 4f2c 0E94 0000 		call get_lowbo
 12195 4f30 DC01      		movw r26,r24
 12196 4f32 CB01      		movw r24,r22
 12197 4f34 BF77      		andi r27,0x7f
 12198 4f36 20E0      		ldi r18,0
 12199 4f38 30E0      		ldi r19,0
 12200 4f3a 40E8      		ldi r20,lo8(-128)
 12201 4f3c 5FE3      		ldi r21,lo8(63)
 12202 4f3e BC01      		movw r22,r24
 12203 4f40 CD01      		movw r24,r26
 12204 4f42 0E94 0000 		call __addsf3
 12205 4f46 DC01      		movw r26,r24
 12206 4f48 CB01      		movw r24,r22
 12207 4f4a 9C01      		movw r18,r24
 12208 4f4c AD01      		movw r20,r26
 12209 4f4e C701      		movw r24,r14
 12210 4f50 B601      		movw r22,r12
 12211 4f52 0E94 0000 		call __divsf3
 12212 4f56 DC01      		movw r26,r24
 12213 4f58 CB01      		movw r24,r22
 12214 4f5a 6C01      		movw r12,r24
 12215 4f5c 7D01      		movw r14,r26
 12216 4f5e E894      		clt
 12217 4f60 F7F8      		bld r15,7
 12218 4f62 20E0      		ldi r18,0
 12219 4f64 30E0      		ldi r19,0
 12220 4f66 40E2      		ldi r20,lo8(32)
 12221 4f68 51E4      		ldi r21,lo8(65)
 12222 4f6a 6885      		ldd r22,Y+8
 12223 4f6c 7985      		ldd r23,Y+9
 12224 4f6e 8A85      		ldd r24,Y+10
 12225 4f70 9B85      		ldd r25,Y+11
 12226 4f72 0E94 0000 		call __mulsf3
 12227 4f76 DC01      		movw r26,r24
 12228 4f78 CB01      		movw r24,r22
 12229 4f7a 9C01      		movw r18,r24
 12230 4f7c AD01      		movw r20,r26
 12231 4f7e C701      		movw r24,r14
 12232 4f80 B601      		movw r22,r12
 12233 4f82 0E94 0000 		call __ltsf2
 12234 4f86 8823      		tst r24
 12235 4f88 04F4      		brge .L445
1219:lp_solve_5.5/lp_presolve.c ****       *upbound = get_lowbo(lp, colnr);
 12236               		.loc 2 1219 0
 12237 4f8a 2889      		ldd r18,Y+16
 12238 4f8c 3989      		ldd r19,Y+17
 12239 4f8e 8E81      		ldd r24,Y+6
 12240 4f90 9F81      		ldd r25,Y+7
 12241 4f92 B901      		movw r22,r18
 12242 4f94 0E94 0000 		call get_lowbo
 12243 4f98 DC01      		movw r26,r24
 12244 4f9a CB01      		movw r24,r22
 12245 4f9c 2C89      		ldd r18,Y+20
 12246 4f9e 3D89      		ldd r19,Y+21
 12247 4fa0 F901      		movw r30,r18
 12248 4fa2 8083      		st Z,r24
 12249 4fa4 9183      		std Z+1,r25
 12250 4fa6 A283      		std Z+2,r26
 12251 4fa8 B383      		std Z+3,r27
 12252               	.L445:
1220:lp_solve_5.5/lp_presolve.c **** #ifdef DoPresolveRelativeTest
1221:lp_solve_5.5/lp_presolve.c ****     isneg = (MYBOOL) (my_reldiff(*upbound, *lobound) >= - epsvalue);
1222:lp_solve_5.5/lp_presolve.c **** #else
1223:lp_solve_5.5/lp_presolve.c ****     isneg = (MYBOOL) (*upbound >= *lobound - epsvalue);
 12253               		.loc 2 1223 0
 12254 4faa 8C89      		ldd r24,Y+20
 12255 4fac 9D89      		ldd r25,Y+21
 12256 4fae FC01      		movw r30,r24
 12257 4fb0 C080      		ld r12,Z
 12258 4fb2 D180      		ldd r13,Z+1
 12259 4fb4 E280      		ldd r14,Z+2
 12260 4fb6 F380      		ldd r15,Z+3
 12261 4fb8 8A89      		ldd r24,Y+18
 12262 4fba 9B89      		ldd r25,Y+19
 12263 4fbc FC01      		movw r30,r24
 12264 4fbe 8081      		ld r24,Z
 12265 4fc0 9181      		ldd r25,Z+1
 12266 4fc2 A281      		ldd r26,Z+2
 12267 4fc4 B381      		ldd r27,Z+3
 12268 4fc6 2885      		ldd r18,Y+8
 12269 4fc8 3985      		ldd r19,Y+9
 12270 4fca 4A85      		ldd r20,Y+10
 12271 4fcc 5B85      		ldd r21,Y+11
 12272 4fce BC01      		movw r22,r24
 12273 4fd0 CD01      		movw r24,r26
 12274 4fd2 0E94 0000 		call __subsf3
 12275 4fd6 DC01      		movw r26,r24
 12276 4fd8 CB01      		movw r24,r22
 12277 4fda 11E0      		ldi r17,lo8(1)
 12278 4fdc 9C01      		movw r18,r24
 12279 4fde AD01      		movw r20,r26
 12280 4fe0 C701      		movw r24,r14
 12281 4fe2 B601      		movw r22,r12
 12282 4fe4 0E94 0000 		call __gesf2
 12283 4fe8 8823      		tst r24
 12284 4fea 04F4      		brge .L447
 12285 4fec 10E0      		ldi r17,0
 12286               	.L447:
 12287 4fee 1D83      		std Y+5,r17
1224:lp_solve_5.5/lp_presolve.c **** #endif
1225:lp_solve_5.5/lp_presolve.c ****     if(!isneg)
 12288               		.loc 2 1225 0
 12289 4ff0 8D81      		ldd r24,Y+5
 12290 4ff2 8823      		tst r24
 12291 4ff4 01F0      		breq .+2
 12292 4ff6 00C0      		rjmp .L442
1226:lp_solve_5.5/lp_presolve.c ****       report(lp, NORMAL, "presolve_singletonbounds: Singleton variable %s in row %s infeasibility (
 12293               		.loc 2 1226 0
 12294 4ff8 8C89      		ldd r24,Y+20
 12295 4ffa 9D89      		ldd r25,Y+21
 12296 4ffc FC01      		movw r30,r24
 12297 4ffe 8080      		ld r8,Z
 12298 5000 9180      		ldd r9,Z+1
 12299 5002 A280      		ldd r10,Z+2
 12300 5004 B380      		ldd r11,Z+3
 12301 5006 8A89      		ldd r24,Y+18
 12302 5008 9B89      		ldd r25,Y+19
 12303 500a FC01      		movw r30,r24
 12304 500c C080      		ld r12,Z
 12305 500e D180      		ldd r13,Z+1
 12306 5010 E280      		ldd r14,Z+2
 12307 5012 F380      		ldd r15,Z+3
 12308 5014 2E85      		ldd r18,Y+14
 12309 5016 3F85      		ldd r19,Y+15
 12310 5018 8E81      		ldd r24,Y+6
 12311 501a 9F81      		ldd r25,Y+7
 12312 501c B901      		movw r22,r18
 12313 501e 0E94 0000 		call get_row_name
 12314 5022 8C01      		movw r16,r24
 12315 5024 2889      		ldd r18,Y+16
 12316 5026 3989      		ldd r19,Y+17
 12317 5028 8E81      		ldd r24,Y+6
 12318 502a 9F81      		ldd r25,Y+7
 12319 502c B901      		movw r22,r18
 12320 502e 0E94 0000 		call get_col_name
 12321 5032 2B2D      		mov r18,r11
 12322 5034 2F93      		push r18
 12323 5036 2A2D      		mov r18,r10
 12324 5038 2F93      		push r18
 12325 503a 292D      		mov r18,r9
 12326 503c 2F93      		push r18
 12327 503e 282D      		mov r18,r8
 12328 5040 2F93      		push r18
 12329 5042 2F2D      		mov r18,r15
 12330 5044 2F93      		push r18
 12331 5046 2E2D      		mov r18,r14
 12332 5048 2F93      		push r18
 12333 504a 2D2D      		mov r18,r13
 12334 504c 2F93      		push r18
 12335 504e 2C2D      		mov r18,r12
 12336 5050 2F93      		push r18
 12337 5052 212F      		mov r18,r17
 12338 5054 2F93      		push r18
 12339 5056 202F      		mov r18,r16
 12340 5058 2F93      		push r18
 12341 505a 292F      		mov r18,r25
 12342 505c 2F93      		push r18
 12343 505e 8F93      		push r24
 12344 5060 80E0      		ldi r24,lo8(.LC23)
 12345 5062 90E0      		ldi r25,hi8(.LC23)
 12346 5064 892F      		mov r24,r25
 12347 5066 8F93      		push r24
 12348 5068 80E0      		ldi r24,lo8(.LC23)
 12349 506a 90E0      		ldi r25,hi8(.LC23)
 12350 506c 8F93      		push r24
 12351 506e 1F92      		push __zero_reg__
 12352 5070 84E0      		ldi r24,lo8(4)
 12353 5072 8F93      		push r24
 12354 5074 8F81      		ldd r24,Y+7
 12355 5076 8F93      		push r24
 12356 5078 8E81      		ldd r24,Y+6
 12357 507a 8F93      		push r24
 12358 507c 0E94 0000 		call report
 12359 5080 8DB7      		in r24,__SP_L__
 12360 5082 9EB7      		in r25,__SP_H__
 12361 5084 4296      		adiw r24,18
 12362 5086 0FB6      		in __tmp_reg__,__SREG__
 12363 5088 F894      		cli
 12364 508a DEBF      		out __SP_H__,r29
 12365 508c 0FBE      		out __SREG__,__tmp_reg__
 12366 508e CDBF      		out __SP_L__,r28
 12367               	.L442:
1227:lp_solve_5.5/lp_presolve.c ****                          get_col_name(lp, colnr), get_row_name(lp, rownr), *lobound, *upbound);
1228:lp_solve_5.5/lp_presolve.c ****   }
1229:lp_solve_5.5/lp_presolve.c ****   return( isneg );
 12368               		.loc 2 1229 0
 12369 5090 8D81      		ldd r24,Y+5
 12370               	/* epilogue start */
1230:lp_solve_5.5/lp_presolve.c **** }
 12371               		.loc 2 1230 0
 12372 5092 6796      		adiw r28,23
 12373 5094 0FB6      		in __tmp_reg__,__SREG__
 12374 5096 F894      		cli
 12375 5098 DEBF      		out __SP_H__,r29
 12376 509a 0FBE      		out __SREG__,__tmp_reg__
 12377 509c CDBF      		out __SP_L__,r28
 12378 509e DF91      		pop r29
 12379 50a0 CF91      		pop r28
 12380 50a2 1F91      		pop r17
 12381 50a4 0F91      		pop r16
 12382 50a6 FF90      		pop r15
 12383 50a8 EF90      		pop r14
 12384 50aa DF90      		pop r13
 12385 50ac CF90      		pop r12
 12386 50ae BF90      		pop r11
 12387 50b0 AF90      		pop r10
 12388 50b2 9F90      		pop r9
 12389 50b4 8F90      		pop r8
 12390 50b6 0895      		ret
 12391               		.cfi_endproc
 12392               	.LFE46:
 12394               		.section	.rodata
 12395               	.LC24:
 12396 0523 7072 6573 		.string	"presolve_altsingletonvalid: Singleton variable %s in row %s infeasible (%g)\n"
 12396      6F6C 7665 
 12396      5F61 6C74 
 12396      7369 6E67 
 12396      6C65 746F 
 12397               		.text
 12398               	.global	presolve_altsingletonvalid
 12400               	presolve_altsingletonvalid:
 12401               	.LFB47:
1231:lp_solve_5.5/lp_presolve.c **** 
1232:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_altsingletonvalid(presolverec *psdata, int rownr, int colnr, REAL reflotest,
1233:lp_solve_5.5/lp_presolve.c **** {
 12402               		.loc 2 1233 0
 12403               		.cfi_startproc
 12404 50b8 CF92      		push r12
 12405               	.LCFI212:
 12406               		.cfi_def_cfa_offset 3
 12407               		.cfi_offset 12, -2
 12408 50ba DF92      		push r13
 12409               	.LCFI213:
 12410               		.cfi_def_cfa_offset 4
 12411               		.cfi_offset 13, -3
 12412 50bc EF92      		push r14
 12413               	.LCFI214:
 12414               		.cfi_def_cfa_offset 5
 12415               		.cfi_offset 14, -4
 12416 50be FF92      		push r15
 12417               	.LCFI215:
 12418               		.cfi_def_cfa_offset 6
 12419               		.cfi_offset 15, -5
 12420 50c0 0F93      		push r16
 12421               	.LCFI216:
 12422               		.cfi_def_cfa_offset 7
 12423               		.cfi_offset 16, -6
 12424 50c2 1F93      		push r17
 12425               	.LCFI217:
 12426               		.cfi_def_cfa_offset 8
 12427               		.cfi_offset 17, -7
 12428 50c4 CF93      		push r28
 12429               	.LCFI218:
 12430               		.cfi_def_cfa_offset 9
 12431               		.cfi_offset 28, -8
 12432 50c6 DF93      		push r29
 12433               	.LCFI219:
 12434               		.cfi_def_cfa_offset 10
 12435               		.cfi_offset 29, -9
 12436 50c8 CDB7      		in r28,__SP_L__
 12437 50ca DEB7      		in r29,__SP_H__
 12438               	.LCFI220:
 12439               		.cfi_def_cfa_register 28
 12440 50cc 6C97      		sbiw r28,28
 12441               	.LCFI221:
 12442               		.cfi_def_cfa_offset 38
 12443 50ce 0FB6      		in __tmp_reg__,__SREG__
 12444 50d0 F894      		cli
 12445 50d2 DEBF      		out __SP_H__,r29
 12446 50d4 0FBE      		out __SREG__,__tmp_reg__
 12447 50d6 CDBF      		out __SP_L__,r28
 12448               	/* prologue: function */
 12449               	/* frame size = 28 */
 12450               	/* stack size = 36 */
 12451               	.L__stack_usage = 36
 12452 50d8 988B      		std Y+16,r25
 12453 50da 8F87      		std Y+15,r24
 12454 50dc 7A8B      		std Y+18,r23
 12455 50de 698B      		std Y+17,r22
 12456 50e0 5C8B      		std Y+20,r21
 12457 50e2 4B8B      		std Y+19,r20
 12458 50e4 0D8B      		std Y+21,r16
 12459 50e6 1E8B      		std Y+22,r17
 12460 50e8 2F8B      		std Y+23,r18
 12461 50ea 388F      		std Y+24,r19
 12462 50ec C98E      		std Y+25,r12
 12463 50ee DA8E      		std Y+26,r13
 12464 50f0 EB8E      		std Y+27,r14
 12465 50f2 FC8E      		std Y+28,r15
1234:lp_solve_5.5/lp_presolve.c ****   lprec *lp = psdata->lp;
 12466               		.loc 2 1234 0
 12467 50f4 8F85      		ldd r24,Y+15
 12468 50f6 9889      		ldd r25,Y+16
 12469 50f8 FC01      		movw r30,r24
 12470 50fa 8289      		ldd r24,Z+18
 12471 50fc 9389      		ldd r25,Z+19
 12472 50fe 9A83      		std Y+2,r25
 12473 5100 8983      		std Y+1,r24
1235:lp_solve_5.5/lp_presolve.c ****   REAL  coeff_bl, coeff_bu, epsvalue = psdata->epsvalue;
 12474               		.loc 2 1235 0
 12475 5102 8F85      		ldd r24,Y+15
 12476 5104 9889      		ldd r25,Y+16
 12477 5106 FC01      		movw r30,r24
 12478 5108 8489      		ldd r24,Z+20
 12479 510a 9589      		ldd r25,Z+21
 12480 510c A689      		ldd r26,Z+22
 12481 510e B789      		ldd r27,Z+23
 12482 5110 8B83      		std Y+3,r24
 12483 5112 9C83      		std Y+4,r25
 12484 5114 AD83      		std Y+5,r26
 12485 5116 BE83      		std Y+6,r27
1236:lp_solve_5.5/lp_presolve.c **** 
1237:lp_solve_5.5/lp_presolve.c ****   coeff_bl = get_rh_lower(lp, rownr);
 12486               		.loc 2 1237 0
 12487 5118 2989      		ldd r18,Y+17
 12488 511a 3A89      		ldd r19,Y+18
 12489 511c 8981      		ldd r24,Y+1
 12490 511e 9A81      		ldd r25,Y+2
 12491 5120 B901      		movw r22,r18
 12492 5122 0E94 0000 		call get_rh_lower
 12493 5126 DC01      		movw r26,r24
 12494 5128 CB01      		movw r24,r22
 12495 512a 8F83      		std Y+7,r24
 12496 512c 9887      		std Y+8,r25
 12497 512e A987      		std Y+9,r26
 12498 5130 BA87      		std Y+10,r27
1238:lp_solve_5.5/lp_presolve.c ****   coeff_bu = get_rh_upper(lp, rownr);
 12499               		.loc 2 1238 0
 12500 5132 2989      		ldd r18,Y+17
 12501 5134 3A89      		ldd r19,Y+18
 12502 5136 8981      		ldd r24,Y+1
 12503 5138 9A81      		ldd r25,Y+2
 12504 513a B901      		movw r22,r18
 12505 513c 0E94 0000 		call get_rh_upper
 12506 5140 DC01      		movw r26,r24
 12507 5142 CB01      		movw r24,r22
 12508 5144 8B87      		std Y+11,r24
 12509 5146 9C87      		std Y+12,r25
 12510 5148 AD87      		std Y+13,r26
 12511 514a BE87      		std Y+14,r27
1239:lp_solve_5.5/lp_presolve.c **** 
1240:lp_solve_5.5/lp_presolve.c ****   /* Check base data validity */
1241:lp_solve_5.5/lp_presolve.c **** #ifdef DoPresolveRelativeTest
1242:lp_solve_5.5/lp_presolve.c ****   if((my_reldiff(refuptest, reflotest) < -epsvalue) ||
1243:lp_solve_5.5/lp_presolve.c **** #else
1244:lp_solve_5.5/lp_presolve.c ****   if((reflotest > refuptest + epsvalue) ||
 12512               		.loc 2 1244 0
 12513 514c 2B81      		ldd r18,Y+3
 12514 514e 3C81      		ldd r19,Y+4
 12515 5150 4D81      		ldd r20,Y+5
 12516 5152 5E81      		ldd r21,Y+6
 12517 5154 698D      		ldd r22,Y+25
 12518 5156 7A8D      		ldd r23,Y+26
 12519 5158 8B8D      		ldd r24,Y+27
 12520 515a 9C8D      		ldd r25,Y+28
 12521 515c 0E94 0000 		call __addsf3
 12522 5160 DC01      		movw r26,r24
 12523 5162 CB01      		movw r24,r22
 12524 5164 2D89      		ldd r18,Y+21
 12525 5166 3E89      		ldd r19,Y+22
 12526 5168 4F89      		ldd r20,Y+23
 12527 516a 588D      		ldd r21,Y+24
 12528 516c BC01      		movw r22,r24
 12529 516e CD01      		movw r24,r26
 12530 5170 0E94 0000 		call __ltsf2
 12531 5174 8823      		tst r24
 12532 5176 04F0      		brlt .L467
1245:lp_solve_5.5/lp_presolve.c **** #endif
1246:lp_solve_5.5/lp_presolve.c ****      !presolve_singletonbounds(psdata, rownr, colnr, &coeff_bl, &coeff_bu, NULL))
 12533               		.loc 2 1246 0 discriminator 1
 12534 5178 FE01      		movw r30,r28
 12535 517a 3B96      		adiw r30,11
 12536 517c 9E01      		movw r18,r28
 12537 517e 295F      		subi r18,-7
 12538 5180 3F4F      		sbci r19,-1
 12539 5182 4B89      		ldd r20,Y+19
 12540 5184 5C89      		ldd r21,Y+20
 12541 5186 6989      		ldd r22,Y+17
 12542 5188 7A89      		ldd r23,Y+18
 12543 518a 8F85      		ldd r24,Y+15
 12544 518c 9889      		ldd r25,Y+16
 12545 518e E12C      		mov r14,__zero_reg__
 12546 5190 F12C      		mov r15,__zero_reg__
 12547 5192 8F01      		movw r16,r30
 12548 5194 0E94 0000 		call presolve_singletonbounds
1244:lp_solve_5.5/lp_presolve.c **** #endif
 12549               		.loc 2 1244 0 discriminator 1
 12550 5198 8823      		tst r24
 12551 519a 01F4      		brne .L468
 12552               	.L467:
1247:lp_solve_5.5/lp_presolve.c ****     return( FALSE );
 12553               		.loc 2 1247 0
 12554 519c 80E0      		ldi r24,0
 12555 519e 00C0      		rjmp .L478
 12556               	.L468:
1248:lp_solve_5.5/lp_presolve.c **** 
1249:lp_solve_5.5/lp_presolve.c ****   /* Base data is Ok, now check against against each other */
1250:lp_solve_5.5/lp_presolve.c ****   epsvalue = MAX(reflotest-coeff_bu, coeff_bl-refuptest) / epsvalue;
 12557               		.loc 2 1250 0
 12558 51a0 8B85      		ldd r24,Y+11
 12559 51a2 9C85      		ldd r25,Y+12
 12560 51a4 AD85      		ldd r26,Y+13
 12561 51a6 BE85      		ldd r27,Y+14
 12562 51a8 9C01      		movw r18,r24
 12563 51aa AD01      		movw r20,r26
 12564 51ac 6D89      		ldd r22,Y+21
 12565 51ae 7E89      		ldd r23,Y+22
 12566 51b0 8F89      		ldd r24,Y+23
 12567 51b2 988D      		ldd r25,Y+24
 12568 51b4 0E94 0000 		call __subsf3
 12569 51b8 DC01      		movw r26,r24
 12570 51ba CB01      		movw r24,r22
 12571 51bc 6C01      		movw r12,r24
 12572 51be 7D01      		movw r14,r26
 12573 51c0 8F81      		ldd r24,Y+7
 12574 51c2 9885      		ldd r25,Y+8
 12575 51c4 A985      		ldd r26,Y+9
 12576 51c6 BA85      		ldd r27,Y+10
 12577 51c8 298D      		ldd r18,Y+25
 12578 51ca 3A8D      		ldd r19,Y+26
 12579 51cc 4B8D      		ldd r20,Y+27
 12580 51ce 5C8D      		ldd r21,Y+28
 12581 51d0 BC01      		movw r22,r24
 12582 51d2 CD01      		movw r24,r26
 12583 51d4 0E94 0000 		call __subsf3
 12584 51d8 DC01      		movw r26,r24
 12585 51da CB01      		movw r24,r22
 12586 51dc 9C01      		movw r18,r24
 12587 51de AD01      		movw r20,r26
 12588 51e0 C701      		movw r24,r14
 12589 51e2 B601      		movw r22,r12
 12590 51e4 0E94 0000 		call __gtsf2
 12591 51e8 1816      		cp __zero_reg__,r24
 12592 51ea 04F4      		brge .L482
 12593               		.loc 2 1250 0 is_stmt 0 discriminator 1
 12594 51ec 8B85      		ldd r24,Y+11
 12595 51ee 9C85      		ldd r25,Y+12
 12596 51f0 AD85      		ldd r26,Y+13
 12597 51f2 BE85      		ldd r27,Y+14
 12598 51f4 9C01      		movw r18,r24
 12599 51f6 AD01      		movw r20,r26
 12600 51f8 6D89      		ldd r22,Y+21
 12601 51fa 7E89      		ldd r23,Y+22
 12602 51fc 8F89      		ldd r24,Y+23
 12603 51fe 988D      		ldd r25,Y+24
 12604 5200 0E94 0000 		call __subsf3
 12605 5204 DC01      		movw r26,r24
 12606 5206 CB01      		movw r24,r22
 12607 5208 00C0      		rjmp .L472
 12608               	.L482:
 12609               		.loc 2 1250 0 discriminator 2
 12610 520a 8F81      		ldd r24,Y+7
 12611 520c 9885      		ldd r25,Y+8
 12612 520e A985      		ldd r26,Y+9
 12613 5210 BA85      		ldd r27,Y+10
 12614 5212 298D      		ldd r18,Y+25
 12615 5214 3A8D      		ldd r19,Y+26
 12616 5216 4B8D      		ldd r20,Y+27
 12617 5218 5C8D      		ldd r21,Y+28
 12618 521a BC01      		movw r22,r24
 12619 521c CD01      		movw r24,r26
 12620 521e 0E94 0000 		call __subsf3
 12621 5222 DC01      		movw r26,r24
 12622 5224 CB01      		movw r24,r22
 12623               	.L472:
 12624               		.loc 2 1250 0 discriminator 4
 12625 5226 2B81      		ldd r18,Y+3
 12626 5228 3C81      		ldd r19,Y+4
 12627 522a 4D81      		ldd r20,Y+5
 12628 522c 5E81      		ldd r21,Y+6
 12629 522e BC01      		movw r22,r24
 12630 5230 CD01      		movw r24,r26
 12631 5232 0E94 0000 		call __divsf3
 12632 5236 DC01      		movw r26,r24
 12633 5238 CB01      		movw r24,r22
 12634 523a 8B83      		std Y+3,r24
 12635 523c 9C83      		std Y+4,r25
 12636 523e AD83      		std Y+5,r26
 12637 5240 BE83      		std Y+6,r27
1251:lp_solve_5.5/lp_presolve.c ****   if(epsvalue > PRESOLVE_BOUNDSLACK) {
 12638               		.loc 2 1251 0 is_stmt 1 discriminator 4
 12639 5242 20E0      		ldi r18,0
 12640 5244 30E0      		ldi r19,0
 12641 5246 40E2      		ldi r20,lo8(32)
 12642 5248 51E4      		ldi r21,lo8(65)
 12643 524a 6B81      		ldd r22,Y+3
 12644 524c 7C81      		ldd r23,Y+4
 12645 524e 8D81      		ldd r24,Y+5
 12646 5250 9E81      		ldd r25,Y+6
 12647 5252 0E94 0000 		call __gtsf2
 12648 5256 1816      		cp __zero_reg__,r24
 12649 5258 04F0      		brlt .+2
 12650 525a 00C0      		rjmp .L483
1252:lp_solve_5.5/lp_presolve.c ****     report(lp, NORMAL, "presolve_altsingletonvalid: Singleton variable %s in row %s infeasible (%g)
1253:lp_solve_5.5/lp_presolve.c ****                        get_col_name(lp, colnr), get_row_name(lp, rownr), MAX(reflotest-coeff_bu, co
 12651               		.loc 2 1253 0
 12652 525c 8B85      		ldd r24,Y+11
 12653 525e 9C85      		ldd r25,Y+12
 12654 5260 AD85      		ldd r26,Y+13
 12655 5262 BE85      		ldd r27,Y+14
 12656 5264 9C01      		movw r18,r24
 12657 5266 AD01      		movw r20,r26
 12658 5268 6D89      		ldd r22,Y+21
 12659 526a 7E89      		ldd r23,Y+22
 12660 526c 8F89      		ldd r24,Y+23
 12661 526e 988D      		ldd r25,Y+24
 12662 5270 0E94 0000 		call __subsf3
 12663 5274 DC01      		movw r26,r24
 12664 5276 CB01      		movw r24,r22
 12665 5278 6C01      		movw r12,r24
 12666 527a 7D01      		movw r14,r26
 12667 527c 8F81      		ldd r24,Y+7
 12668 527e 9885      		ldd r25,Y+8
 12669 5280 A985      		ldd r26,Y+9
 12670 5282 BA85      		ldd r27,Y+10
 12671 5284 298D      		ldd r18,Y+25
 12672 5286 3A8D      		ldd r19,Y+26
 12673 5288 4B8D      		ldd r20,Y+27
 12674 528a 5C8D      		ldd r21,Y+28
 12675 528c BC01      		movw r22,r24
 12676 528e CD01      		movw r24,r26
 12677 5290 0E94 0000 		call __subsf3
 12678 5294 DC01      		movw r26,r24
 12679 5296 CB01      		movw r24,r22
1252:lp_solve_5.5/lp_presolve.c ****     report(lp, NORMAL, "presolve_altsingletonvalid: Singleton variable %s in row %s infeasible (%g)
 12680               		.loc 2 1252 0
 12681 5298 9C01      		movw r18,r24
 12682 529a AD01      		movw r20,r26
 12683 529c C701      		movw r24,r14
 12684 529e B601      		movw r22,r12
 12685 52a0 0E94 0000 		call __gtsf2
 12686 52a4 1816      		cp __zero_reg__,r24
 12687 52a6 04F4      		brge .L484
 12688               		.loc 2 1253 0 discriminator 1
 12689 52a8 8B85      		ldd r24,Y+11
 12690 52aa 9C85      		ldd r25,Y+12
 12691 52ac AD85      		ldd r26,Y+13
 12692 52ae BE85      		ldd r27,Y+14
1252:lp_solve_5.5/lp_presolve.c ****     report(lp, NORMAL, "presolve_altsingletonvalid: Singleton variable %s in row %s infeasible (%g)
 12693               		.loc 2 1252 0 discriminator 1
 12694 52b0 9C01      		movw r18,r24
 12695 52b2 AD01      		movw r20,r26
 12696 52b4 6D89      		ldd r22,Y+21
 12697 52b6 7E89      		ldd r23,Y+22
 12698 52b8 8F89      		ldd r24,Y+23
 12699 52ba 988D      		ldd r25,Y+24
 12700 52bc 0E94 0000 		call __subsf3
 12701 52c0 DC01      		movw r26,r24
 12702 52c2 CB01      		movw r24,r22
 12703 52c4 6C01      		movw r12,r24
 12704 52c6 7D01      		movw r14,r26
 12705 52c8 00C0      		rjmp .L477
 12706               	.L484:
 12707               		.loc 2 1253 0 discriminator 2
 12708 52ca 8F81      		ldd r24,Y+7
 12709 52cc 9885      		ldd r25,Y+8
 12710 52ce A985      		ldd r26,Y+9
 12711 52d0 BA85      		ldd r27,Y+10
1252:lp_solve_5.5/lp_presolve.c ****     report(lp, NORMAL, "presolve_altsingletonvalid: Singleton variable %s in row %s infeasible (%g)
 12712               		.loc 2 1252 0 discriminator 2
 12713 52d2 298D      		ldd r18,Y+25
 12714 52d4 3A8D      		ldd r19,Y+26
 12715 52d6 4B8D      		ldd r20,Y+27
 12716 52d8 5C8D      		ldd r21,Y+28
 12717 52da BC01      		movw r22,r24
 12718 52dc CD01      		movw r24,r26
 12719 52de 0E94 0000 		call __subsf3
 12720 52e2 DC01      		movw r26,r24
 12721 52e4 CB01      		movw r24,r22
 12722 52e6 6C01      		movw r12,r24
 12723 52e8 7D01      		movw r14,r26
 12724               	.L477:
1252:lp_solve_5.5/lp_presolve.c ****     report(lp, NORMAL, "presolve_altsingletonvalid: Singleton variable %s in row %s infeasible (%g)
 12725               		.loc 2 1252 0 is_stmt 0 discriminator 4
 12726 52ea 2989      		ldd r18,Y+17
 12727 52ec 3A89      		ldd r19,Y+18
 12728 52ee 8981      		ldd r24,Y+1
 12729 52f0 9A81      		ldd r25,Y+2
 12730 52f2 B901      		movw r22,r18
 12731 52f4 0E94 0000 		call get_row_name
 12732 52f8 8C01      		movw r16,r24
 12733 52fa 2B89      		ldd r18,Y+19
 12734 52fc 3C89      		ldd r19,Y+20
 12735 52fe 8981      		ldd r24,Y+1
 12736 5300 9A81      		ldd r25,Y+2
 12737 5302 B901      		movw r22,r18
 12738 5304 0E94 0000 		call get_col_name
 12739 5308 2F2D      		mov r18,r15
 12740 530a 2F93      		push r18
 12741 530c 2E2D      		mov r18,r14
 12742 530e 2F93      		push r18
 12743 5310 2D2D      		mov r18,r13
 12744 5312 2F93      		push r18
 12745 5314 2C2D      		mov r18,r12
 12746 5316 2F93      		push r18
 12747 5318 212F      		mov r18,r17
 12748 531a 2F93      		push r18
 12749 531c 202F      		mov r18,r16
 12750 531e 2F93      		push r18
 12751 5320 292F      		mov r18,r25
 12752 5322 2F93      		push r18
 12753 5324 8F93      		push r24
 12754 5326 80E0      		ldi r24,lo8(.LC24)
 12755 5328 90E0      		ldi r25,hi8(.LC24)
 12756 532a 892F      		mov r24,r25
 12757 532c 8F93      		push r24
 12758 532e 80E0      		ldi r24,lo8(.LC24)
 12759 5330 90E0      		ldi r25,hi8(.LC24)
 12760 5332 8F93      		push r24
 12761 5334 1F92      		push __zero_reg__
 12762 5336 84E0      		ldi r24,lo8(4)
 12763 5338 8F93      		push r24
 12764 533a 8A81      		ldd r24,Y+2
 12765 533c 8F93      		push r24
 12766 533e 8981      		ldd r24,Y+1
 12767 5340 8F93      		push r24
 12768 5342 0E94 0000 		call report
 12769 5346 8DB7      		in r24,__SP_L__
 12770 5348 9EB7      		in r25,__SP_H__
 12771 534a 0E96      		adiw r24,14
 12772 534c 0FB6      		in __tmp_reg__,__SREG__
 12773 534e F894      		cli
 12774 5350 DEBF      		out __SP_H__,r29
 12775 5352 0FBE      		out __SREG__,__tmp_reg__
 12776 5354 CDBF      		out __SP_L__,r28
1254:lp_solve_5.5/lp_presolve.c ****     return( FALSE );
 12777               		.loc 2 1254 0 is_stmt 1 discriminator 4
 12778 5356 80E0      		ldi r24,0
 12779 5358 00C0      		rjmp .L478
 12780               	.L483:
1255:lp_solve_5.5/lp_presolve.c ****   }
1256:lp_solve_5.5/lp_presolve.c ****   else
1257:lp_solve_5.5/lp_presolve.c ****     return( TRUE );
 12781               		.loc 2 1257 0
 12782 535a 81E0      		ldi r24,lo8(1)
 12783               	.L478:
 12784               	/* epilogue start */
1258:lp_solve_5.5/lp_presolve.c **** }
 12785               		.loc 2 1258 0 discriminator 1
 12786 535c 6C96      		adiw r28,28
 12787 535e 0FB6      		in __tmp_reg__,__SREG__
 12788 5360 F894      		cli
 12789 5362 DEBF      		out __SP_H__,r29
 12790 5364 0FBE      		out __SREG__,__tmp_reg__
 12791 5366 CDBF      		out __SP_L__,r28
 12792 5368 DF91      		pop r29
 12793 536a CF91      		pop r28
 12794 536c 1F91      		pop r17
 12795 536e 0F91      		pop r16
 12796 5370 FF90      		pop r15
 12797 5372 EF90      		pop r14
 12798 5374 DF90      		pop r13
 12799 5376 CF90      		pop r12
 12800 5378 0895      		ret
 12801               		.cfi_endproc
 12802               	.LFE47:
 12804               	.global	presolve_multibounds
 12806               	presolve_multibounds:
 12807               	.LFB48:
1259:lp_solve_5.5/lp_presolve.c **** 
1260:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_multibounds(presolverec *psdata, int rownr, int colnr,
1261:lp_solve_5.5/lp_presolve.c ****                                    REAL *lobound, REAL *upbound, REAL *aval, MYBOOL *rowbinds)
1262:lp_solve_5.5/lp_presolve.c **** {
 12808               		.loc 2 1262 0
 12809               		.cfi_startproc
 12810 537a CF92      		push r12
 12811               	.LCFI222:
 12812               		.cfi_def_cfa_offset 3
 12813               		.cfi_offset 12, -2
 12814 537c DF92      		push r13
 12815               	.LCFI223:
 12816               		.cfi_def_cfa_offset 4
 12817               		.cfi_offset 13, -3
 12818 537e EF92      		push r14
 12819               	.LCFI224:
 12820               		.cfi_def_cfa_offset 5
 12821               		.cfi_offset 14, -4
 12822 5380 FF92      		push r15
 12823               	.LCFI225:
 12824               		.cfi_def_cfa_offset 6
 12825               		.cfi_offset 15, -5
 12826 5382 0F93      		push r16
 12827               	.LCFI226:
 12828               		.cfi_def_cfa_offset 7
 12829               		.cfi_offset 16, -6
 12830 5384 1F93      		push r17
 12831               	.LCFI227:
 12832               		.cfi_def_cfa_offset 8
 12833               		.cfi_offset 17, -7
 12834 5386 CF93      		push r28
 12835               	.LCFI228:
 12836               		.cfi_def_cfa_offset 9
 12837               		.cfi_offset 28, -8
 12838 5388 DF93      		push r29
 12839               	.LCFI229:
 12840               		.cfi_def_cfa_offset 10
 12841               		.cfi_offset 29, -9
 12842 538a CDB7      		in r28,__SP_L__
 12843 538c DEB7      		in r29,__SP_H__
 12844               	.LCFI230:
 12845               		.cfi_def_cfa_register 28
 12846 538e AE97      		sbiw r28,46
 12847               	.LCFI231:
 12848               		.cfi_def_cfa_offset 56
 12849 5390 0FB6      		in __tmp_reg__,__SREG__
 12850 5392 F894      		cli
 12851 5394 DEBF      		out __SP_H__,r29
 12852 5396 0FBE      		out __SREG__,__tmp_reg__
 12853 5398 CDBF      		out __SP_L__,r28
 12854               	/* prologue: function */
 12855               	/* frame size = 46 */
 12856               	/* stack size = 54 */
 12857               	.L__stack_usage = 54
 12858 539a 9AA3      		std Y+34,r25
 12859 539c 89A3      		std Y+33,r24
 12860 539e 7CA3      		std Y+36,r23
 12861 53a0 6BA3      		std Y+35,r22
 12862 53a2 5EA3      		std Y+38,r21
 12863 53a4 4DA3      		std Y+37,r20
 12864 53a6 38A7      		std Y+40,r19
 12865 53a8 2FA3      		std Y+39,r18
 12866 53aa 1AA7      		std Y+42,r17
 12867 53ac 09A7      		std Y+41,r16
 12868 53ae FCA6      		std Y+44,r15
 12869 53b0 EBA6      		std Y+43,r14
 12870 53b2 DEA6      		std Y+46,r13
 12871 53b4 CDA6      		std Y+45,r12
1263:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 12872               		.loc 2 1263 0
 12873 53b6 89A1      		ldd r24,Y+33
 12874 53b8 9AA1      		ldd r25,Y+34
 12875 53ba FC01      		movw r30,r24
 12876 53bc 8289      		ldd r24,Z+18
 12877 53be 9389      		ldd r25,Z+19
 12878 53c0 988B      		std Y+16,r25
 12879 53c2 8F87      		std Y+15,r24
1264:lp_solve_5.5/lp_presolve.c ****   MYBOOL   rowbindsvar = FALSE, status = FALSE;
 12880               		.loc 2 1264 0
 12881 53c4 1982      		std Y+1,__zero_reg__
 12882 53c6 1A82      		std Y+2,__zero_reg__
1265:lp_solve_5.5/lp_presolve.c ****   REAL     coeff_a, LHS, RHS, netX, Xupper, Xlower, epsvalue = psdata->epsvalue;
 12883               		.loc 2 1265 0
 12884 53c8 89A1      		ldd r24,Y+33
 12885 53ca 9AA1      		ldd r25,Y+34
 12886 53cc FC01      		movw r30,r24
 12887 53ce 8489      		ldd r24,Z+20
 12888 53d0 9589      		ldd r25,Z+21
 12889 53d2 A689      		ldd r26,Z+22
 12890 53d4 B789      		ldd r27,Z+23
 12891 53d6 898B      		std Y+17,r24
 12892 53d8 9A8B      		std Y+18,r25
 12893 53da AB8B      		std Y+19,r26
 12894 53dc BC8B      		std Y+20,r27
1266:lp_solve_5.5/lp_presolve.c **** 
1267:lp_solve_5.5/lp_presolve.c ****   /* Get variable bounds for netting */
1268:lp_solve_5.5/lp_presolve.c ****   LHS = *lobound;
 12895               		.loc 2 1268 0
 12896 53de 8FA1      		ldd r24,Y+39
 12897 53e0 98A5      		ldd r25,Y+40
 12898 53e2 FC01      		movw r30,r24
 12899 53e4 8081      		ld r24,Z
 12900 53e6 9181      		ldd r25,Z+1
 12901 53e8 A281      		ldd r26,Z+2
 12902 53ea B381      		ldd r27,Z+3
 12903 53ec 8D8B      		std Y+21,r24
 12904 53ee 9E8B      		std Y+22,r25
 12905 53f0 AF8B      		std Y+23,r26
 12906 53f2 B88F      		std Y+24,r27
1269:lp_solve_5.5/lp_presolve.c ****   RHS = *upbound;
 12907               		.loc 2 1269 0
 12908 53f4 89A5      		ldd r24,Y+41
 12909 53f6 9AA5      		ldd r25,Y+42
 12910 53f8 FC01      		movw r30,r24
 12911 53fa 8081      		ld r24,Z
 12912 53fc 9181      		ldd r25,Z+1
 12913 53fe A281      		ldd r26,Z+2
 12914 5400 B381      		ldd r27,Z+3
 12915 5402 898F      		std Y+25,r24
 12916 5404 9A8F      		std Y+26,r25
 12917 5406 AB8F      		std Y+27,r26
 12918 5408 BC8F      		std Y+28,r27
1270:lp_solve_5.5/lp_presolve.c ****   Xlower = get_lowbo(lp, colnr);
 12919               		.loc 2 1270 0
 12920 540a 2DA1      		ldd r18,Y+37
 12921 540c 3EA1      		ldd r19,Y+38
 12922 540e 8F85      		ldd r24,Y+15
 12923 5410 9889      		ldd r25,Y+16
 12924 5412 B901      		movw r22,r18
 12925 5414 0E94 0000 		call get_lowbo
 12926 5418 DC01      		movw r26,r24
 12927 541a CB01      		movw r24,r22
 12928 541c 8B87      		std Y+11,r24
 12929 541e 9C87      		std Y+12,r25
 12930 5420 AD87      		std Y+13,r26
 12931 5422 BE87      		std Y+14,r27
1271:lp_solve_5.5/lp_presolve.c ****   Xupper = get_upbo(lp, colnr);
 12932               		.loc 2 1271 0
 12933 5424 2DA1      		ldd r18,Y+37
 12934 5426 3EA1      		ldd r19,Y+38
 12935 5428 8F85      		ldd r24,Y+15
 12936 542a 9889      		ldd r25,Y+16
 12937 542c B901      		movw r22,r18
 12938 542e 0E94 0000 		call get_upbo
 12939 5432 DC01      		movw r26,r24
 12940 5434 CB01      		movw r24,r22
 12941 5436 8F83      		std Y+7,r24
 12942 5438 9887      		std Y+8,r25
 12943 543a A987      		std Y+9,r26
 12944 543c BA87      		std Y+10,r27
1272:lp_solve_5.5/lp_presolve.c **** 
1273:lp_solve_5.5/lp_presolve.c ****   /* Identify opportunity for bound tightening */
1274:lp_solve_5.5/lp_presolve.c ****   if(aval == NULL)
 12945               		.loc 2 1274 0
 12946 543e 8BA5      		ldd r24,Y+43
 12947 5440 9CA5      		ldd r25,Y+44
 12948 5442 892B      		or r24,r25
 12949 5444 01F4      		brne .L486
1275:lp_solve_5.5/lp_presolve.c ****     coeff_a = get_mat(lp, rownr, colnr);
 12950               		.loc 2 1275 0
 12951 5446 4DA1      		ldd r20,Y+37
 12952 5448 5EA1      		ldd r21,Y+38
 12953 544a 2BA1      		ldd r18,Y+35
 12954 544c 3CA1      		ldd r19,Y+36
 12955 544e 8F85      		ldd r24,Y+15
 12956 5450 9889      		ldd r25,Y+16
 12957 5452 B901      		movw r22,r18
 12958 5454 0E94 0000 		call get_mat
 12959 5458 DC01      		movw r26,r24
 12960 545a CB01      		movw r24,r22
 12961 545c 8B83      		std Y+3,r24
 12962 545e 9C83      		std Y+4,r25
 12963 5460 AD83      		std Y+5,r26
 12964 5462 BE83      		std Y+6,r27
 12965 5464 00C0      		rjmp .L487
 12966               	.L486:
1276:lp_solve_5.5/lp_presolve.c ****   else
1277:lp_solve_5.5/lp_presolve.c ****     coeff_a = *aval;
 12967               		.loc 2 1277 0
 12968 5466 8BA5      		ldd r24,Y+43
 12969 5468 9CA5      		ldd r25,Y+44
 12970 546a FC01      		movw r30,r24
 12971 546c 8081      		ld r24,Z
 12972 546e 9181      		ldd r25,Z+1
 12973 5470 A281      		ldd r26,Z+2
 12974 5472 B381      		ldd r27,Z+3
 12975 5474 8B83      		std Y+3,r24
 12976 5476 9C83      		std Y+4,r25
 12977 5478 AD83      		std Y+5,r26
 12978 547a BE83      		std Y+6,r27
 12979               	.L487:
1278:lp_solve_5.5/lp_presolve.c **** 
1279:lp_solve_5.5/lp_presolve.c ****   netX = presolve_sumplumin(lp, rownr, psdata->rows, TRUE);
 12980               		.loc 2 1279 0
 12981 547c 89A1      		ldd r24,Y+33
 12982 547e 9AA1      		ldd r25,Y+34
 12983 5480 FC01      		movw r30,r24
 12984 5482 4081      		ld r20,Z
 12985 5484 5181      		ldd r21,Z+1
 12986 5486 6BA1      		ldd r22,Y+35
 12987 5488 7CA1      		ldd r23,Y+36
 12988 548a 8F85      		ldd r24,Y+15
 12989 548c 9889      		ldd r25,Y+16
 12990 548e 21E0      		ldi r18,lo8(1)
 12991 5490 0E94 0000 		call presolve_sumplumin
 12992 5494 DC01      		movw r26,r24
 12993 5496 CB01      		movw r24,r22
 12994 5498 8D8F      		std Y+29,r24
 12995 549a 9E8F      		std Y+30,r25
 12996 549c AF8F      		std Y+31,r26
 12997 549e B8A3      		std Y+32,r27
1280:lp_solve_5.5/lp_presolve.c ****   if(!my_infinite(lp, LHS) && !my_infinite(lp, netX)) {
 12998               		.loc 2 1280 0
 12999 54a0 8D89      		ldd r24,Y+21
 13000 54a2 9E89      		ldd r25,Y+22
 13001 54a4 AF89      		ldd r26,Y+23
 13002 54a6 B88D      		ldd r27,Y+24
 13003 54a8 BF77      		andi r27,0x7f
 13004 54aa 2F85      		ldd r18,Y+15
 13005 54ac 3889      		ldd r19,Y+16
 13006 54ae 265F      		subi r18,-10
 13007 54b0 3C4F      		sbci r19,-4
 13008 54b2 F901      		movw r30,r18
 13009 54b4 2081      		ld r18,Z
 13010 54b6 3181      		ldd r19,Z+1
 13011 54b8 4281      		ldd r20,Z+2
 13012 54ba 5381      		ldd r21,Z+3
 13013 54bc 11E0      		ldi r17,lo8(1)
 13014 54be BC01      		movw r22,r24
 13015 54c0 CD01      		movw r24,r26
 13016 54c2 0E94 0000 		call __gesf2
 13017 54c6 8823      		tst r24
 13018 54c8 04F4      		brge .L488
 13019 54ca 10E0      		ldi r17,0
 13020               	.L488:
 13021 54cc 81E0      		ldi r24,lo8(1)
 13022 54ce 8127      		eor r24,r17
 13023 54d0 8823      		tst r24
 13024 54d2 01F4      		brne .+2
 13025 54d4 00C0      		rjmp .L489
 13026               		.loc 2 1280 0 is_stmt 0 discriminator 1
 13027 54d6 8D8D      		ldd r24,Y+29
 13028 54d8 9E8D      		ldd r25,Y+30
 13029 54da AF8D      		ldd r26,Y+31
 13030 54dc B8A1      		ldd r27,Y+32
 13031 54de BF77      		andi r27,0x7f
 13032 54e0 2F85      		ldd r18,Y+15
 13033 54e2 3889      		ldd r19,Y+16
 13034 54e4 265F      		subi r18,-10
 13035 54e6 3C4F      		sbci r19,-4
 13036 54e8 F901      		movw r30,r18
 13037 54ea 2081      		ld r18,Z
 13038 54ec 3181      		ldd r19,Z+1
 13039 54ee 4281      		ldd r20,Z+2
 13040 54f0 5381      		ldd r21,Z+3
 13041 54f2 11E0      		ldi r17,lo8(1)
 13042 54f4 BC01      		movw r22,r24
 13043 54f6 CD01      		movw r24,r26
 13044 54f8 0E94 0000 		call __gesf2
 13045 54fc 8823      		tst r24
 13046 54fe 04F4      		brge .L490
 13047 5500 10E0      		ldi r17,0
 13048               	.L490:
 13049 5502 81E0      		ldi r24,lo8(1)
 13050 5504 8127      		eor r24,r17
 13051 5506 8823      		tst r24
 13052 5508 01F4      		brne .+2
 13053 550a 00C0      		rjmp .L489
1281:lp_solve_5.5/lp_presolve.c ****     if(coeff_a > 0) {
 13054               		.loc 2 1281 0 is_stmt 1
 13055 550c 20E0      		ldi r18,0
 13056 550e 30E0      		ldi r19,0
 13057 5510 A901      		movw r20,r18
 13058 5512 6B81      		ldd r22,Y+3
 13059 5514 7C81      		ldd r23,Y+4
 13060 5516 8D81      		ldd r24,Y+5
 13061 5518 9E81      		ldd r25,Y+6
 13062 551a 0E94 0000 		call __gtsf2
 13063 551e 1816      		cp __zero_reg__,r24
 13064 5520 04F0      		brlt .+2
 13065 5522 00C0      		rjmp .L526
1282:lp_solve_5.5/lp_presolve.c ****       LHS -= netX-coeff_a*Xupper;
 13066               		.loc 2 1282 0
 13067 5524 2F81      		ldd r18,Y+7
 13068 5526 3885      		ldd r19,Y+8
 13069 5528 4985      		ldd r20,Y+9
 13070 552a 5A85      		ldd r21,Y+10
 13071 552c 6B81      		ldd r22,Y+3
 13072 552e 7C81      		ldd r23,Y+4
 13073 5530 8D81      		ldd r24,Y+5
 13074 5532 9E81      		ldd r25,Y+6
 13075 5534 0E94 0000 		call __mulsf3
 13076 5538 DC01      		movw r26,r24
 13077 553a CB01      		movw r24,r22
 13078 553c 9C01      		movw r18,r24
 13079 553e AD01      		movw r20,r26
 13080 5540 6D8D      		ldd r22,Y+29
 13081 5542 7E8D      		ldd r23,Y+30
 13082 5544 8F8D      		ldd r24,Y+31
 13083 5546 98A1      		ldd r25,Y+32
 13084 5548 0E94 0000 		call __subsf3
 13085 554c DC01      		movw r26,r24
 13086 554e CB01      		movw r24,r22
 13087 5550 9C01      		movw r18,r24
 13088 5552 AD01      		movw r20,r26
 13089 5554 6D89      		ldd r22,Y+21
 13090 5556 7E89      		ldd r23,Y+22
 13091 5558 8F89      		ldd r24,Y+23
 13092 555a 988D      		ldd r25,Y+24
 13093 555c 0E94 0000 		call __subsf3
 13094 5560 DC01      		movw r26,r24
 13095 5562 CB01      		movw r24,r22
 13096 5564 8D8B      		std Y+21,r24
 13097 5566 9E8B      		std Y+22,r25
 13098 5568 AF8B      		std Y+23,r26
 13099 556a B88F      		std Y+24,r27
1283:lp_solve_5.5/lp_presolve.c ****       LHS /= coeff_a;
 13100               		.loc 2 1283 0
 13101 556c 2B81      		ldd r18,Y+3
 13102 556e 3C81      		ldd r19,Y+4
 13103 5570 4D81      		ldd r20,Y+5
 13104 5572 5E81      		ldd r21,Y+6
 13105 5574 6D89      		ldd r22,Y+21
 13106 5576 7E89      		ldd r23,Y+22
 13107 5578 8F89      		ldd r24,Y+23
 13108 557a 988D      		ldd r25,Y+24
 13109 557c 0E94 0000 		call __divsf3
 13110 5580 DC01      		movw r26,r24
 13111 5582 CB01      		movw r24,r22
 13112 5584 8D8B      		std Y+21,r24
 13113 5586 9E8B      		std Y+22,r25
 13114 5588 AF8B      		std Y+23,r26
 13115 558a B88F      		std Y+24,r27
1284:lp_solve_5.5/lp_presolve.c ****       if(LHS > Xlower + epsvalue) {
 13116               		.loc 2 1284 0
 13117 558c 2989      		ldd r18,Y+17
 13118 558e 3A89      		ldd r19,Y+18
 13119 5590 4B89      		ldd r20,Y+19
 13120 5592 5C89      		ldd r21,Y+20
 13121 5594 6B85      		ldd r22,Y+11
 13122 5596 7C85      		ldd r23,Y+12
 13123 5598 8D85      		ldd r24,Y+13
 13124 559a 9E85      		ldd r25,Y+14
 13125 559c 0E94 0000 		call __addsf3
 13126 55a0 DC01      		movw r26,r24
 13127 55a2 CB01      		movw r24,r22
 13128 55a4 2D89      		ldd r18,Y+21
 13129 55a6 3E89      		ldd r19,Y+22
 13130 55a8 4F89      		ldd r20,Y+23
 13131 55aa 588D      		ldd r21,Y+24
 13132 55ac BC01      		movw r22,r24
 13133 55ae CD01      		movw r24,r26
 13134 55b0 0E94 0000 		call __ltsf2
 13135 55b4 8823      		tst r24
 13136 55b6 04F4      		brge .L527
1285:lp_solve_5.5/lp_presolve.c ****         Xlower = presolve_roundrhs(lp, LHS, TRUE);
 13137               		.loc 2 1285 0
 13138 55b8 8D89      		ldd r24,Y+21
 13139 55ba 9E89      		ldd r25,Y+22
 13140 55bc AF89      		ldd r26,Y+23
 13141 55be B88D      		ldd r27,Y+24
 13142 55c0 EF85      		ldd r30,Y+15
 13143 55c2 F889      		ldd r31,Y+16
 13144 55c4 21E0      		ldi r18,lo8(1)
 13145 55c6 AC01      		movw r20,r24
 13146 55c8 BD01      		movw r22,r26
 13147 55ca CF01      		movw r24,r30
 13148 55cc 0E94 0000 		call presolve_roundrhs
 13149 55d0 DC01      		movw r26,r24
 13150 55d2 CB01      		movw r24,r22
 13151 55d4 8B87      		std Y+11,r24
 13152 55d6 9C87      		std Y+12,r25
 13153 55d8 AD87      		std Y+13,r26
 13154 55da BE87      		std Y+14,r27
1286:lp_solve_5.5/lp_presolve.c ****         status = TRUE;
 13155               		.loc 2 1286 0
 13156 55dc 81E0      		ldi r24,lo8(1)
 13157 55de 8A83      		std Y+2,r24
 13158 55e0 00C0      		rjmp .L489
 13159               	.L527:
1287:lp_solve_5.5/lp_presolve.c ****       }
1288:lp_solve_5.5/lp_presolve.c ****       else if(LHS > Xlower - epsvalue)
 13160               		.loc 2 1288 0
 13161 55e2 2989      		ldd r18,Y+17
 13162 55e4 3A89      		ldd r19,Y+18
 13163 55e6 4B89      		ldd r20,Y+19
 13164 55e8 5C89      		ldd r21,Y+20
 13165 55ea 6B85      		ldd r22,Y+11
 13166 55ec 7C85      		ldd r23,Y+12
 13167 55ee 8D85      		ldd r24,Y+13
 13168 55f0 9E85      		ldd r25,Y+14
 13169 55f2 0E94 0000 		call __subsf3
 13170 55f6 DC01      		movw r26,r24
 13171 55f8 CB01      		movw r24,r22
 13172 55fa 2D89      		ldd r18,Y+21
 13173 55fc 3E89      		ldd r19,Y+22
 13174 55fe 4F89      		ldd r20,Y+23
 13175 5600 588D      		ldd r21,Y+24
 13176 5602 BC01      		movw r22,r24
 13177 5604 CD01      		movw r24,r26
 13178 5606 0E94 0000 		call __ltsf2
 13179 560a 8823      		tst r24
 13180 560c 04F0      		brlt .+2
 13181 560e 00C0      		rjmp .L489
1289:lp_solve_5.5/lp_presolve.c ****         rowbindsvar = TRUE;
 13182               		.loc 2 1289 0
 13183 5610 81E0      		ldi r24,lo8(1)
 13184 5612 8983      		std Y+1,r24
 13185 5614 00C0      		rjmp .L489
 13186               	.L526:
1290:lp_solve_5.5/lp_presolve.c ****     }
1291:lp_solve_5.5/lp_presolve.c ****     else {
1292:lp_solve_5.5/lp_presolve.c ****       LHS -= netX-coeff_a*Xlower;
 13187               		.loc 2 1292 0
 13188 5616 2B85      		ldd r18,Y+11
 13189 5618 3C85      		ldd r19,Y+12
 13190 561a 4D85      		ldd r20,Y+13
 13191 561c 5E85      		ldd r21,Y+14
 13192 561e 6B81      		ldd r22,Y+3
 13193 5620 7C81      		ldd r23,Y+4
 13194 5622 8D81      		ldd r24,Y+5
 13195 5624 9E81      		ldd r25,Y+6
 13196 5626 0E94 0000 		call __mulsf3
 13197 562a DC01      		movw r26,r24
 13198 562c CB01      		movw r24,r22
 13199 562e 9C01      		movw r18,r24
 13200 5630 AD01      		movw r20,r26
 13201 5632 6D8D      		ldd r22,Y+29
 13202 5634 7E8D      		ldd r23,Y+30
 13203 5636 8F8D      		ldd r24,Y+31
 13204 5638 98A1      		ldd r25,Y+32
 13205 563a 0E94 0000 		call __subsf3
 13206 563e DC01      		movw r26,r24
 13207 5640 CB01      		movw r24,r22
 13208 5642 9C01      		movw r18,r24
 13209 5644 AD01      		movw r20,r26
 13210 5646 6D89      		ldd r22,Y+21
 13211 5648 7E89      		ldd r23,Y+22
 13212 564a 8F89      		ldd r24,Y+23
 13213 564c 988D      		ldd r25,Y+24
 13214 564e 0E94 0000 		call __subsf3
 13215 5652 DC01      		movw r26,r24
 13216 5654 CB01      		movw r24,r22
 13217 5656 8D8B      		std Y+21,r24
 13218 5658 9E8B      		std Y+22,r25
 13219 565a AF8B      		std Y+23,r26
 13220 565c B88F      		std Y+24,r27
1293:lp_solve_5.5/lp_presolve.c ****       LHS /= coeff_a;
 13221               		.loc 2 1293 0
 13222 565e 2B81      		ldd r18,Y+3
 13223 5660 3C81      		ldd r19,Y+4
 13224 5662 4D81      		ldd r20,Y+5
 13225 5664 5E81      		ldd r21,Y+6
 13226 5666 6D89      		ldd r22,Y+21
 13227 5668 7E89      		ldd r23,Y+22
 13228 566a 8F89      		ldd r24,Y+23
 13229 566c 988D      		ldd r25,Y+24
 13230 566e 0E94 0000 		call __divsf3
 13231 5672 DC01      		movw r26,r24
 13232 5674 CB01      		movw r24,r22
 13233 5676 8D8B      		std Y+21,r24
 13234 5678 9E8B      		std Y+22,r25
 13235 567a AF8B      		std Y+23,r26
 13236 567c B88F      		std Y+24,r27
1294:lp_solve_5.5/lp_presolve.c ****       if(LHS < Xupper - epsvalue) {
 13237               		.loc 2 1294 0
 13238 567e 2989      		ldd r18,Y+17
 13239 5680 3A89      		ldd r19,Y+18
 13240 5682 4B89      		ldd r20,Y+19
 13241 5684 5C89      		ldd r21,Y+20
 13242 5686 6F81      		ldd r22,Y+7
 13243 5688 7885      		ldd r23,Y+8
 13244 568a 8985      		ldd r24,Y+9
 13245 568c 9A85      		ldd r25,Y+10
 13246 568e 0E94 0000 		call __subsf3
 13247 5692 DC01      		movw r26,r24
 13248 5694 CB01      		movw r24,r22
 13249 5696 2D89      		ldd r18,Y+21
 13250 5698 3E89      		ldd r19,Y+22
 13251 569a 4F89      		ldd r20,Y+23
 13252 569c 588D      		ldd r21,Y+24
 13253 569e BC01      		movw r22,r24
 13254 56a0 CD01      		movw r24,r26
 13255 56a2 0E94 0000 		call __gtsf2
 13256 56a6 1816      		cp __zero_reg__,r24
 13257 56a8 04F4      		brge .L528
1295:lp_solve_5.5/lp_presolve.c ****         Xupper = presolve_roundrhs(lp, LHS, FALSE);
 13258               		.loc 2 1295 0
 13259 56aa 8D89      		ldd r24,Y+21
 13260 56ac 9E89      		ldd r25,Y+22
 13261 56ae AF89      		ldd r26,Y+23
 13262 56b0 B88D      		ldd r27,Y+24
 13263 56b2 EF85      		ldd r30,Y+15
 13264 56b4 F889      		ldd r31,Y+16
 13265 56b6 20E0      		ldi r18,0
 13266 56b8 AC01      		movw r20,r24
 13267 56ba BD01      		movw r22,r26
 13268 56bc CF01      		movw r24,r30
 13269 56be 0E94 0000 		call presolve_roundrhs
 13270 56c2 DC01      		movw r26,r24
 13271 56c4 CB01      		movw r24,r22
 13272 56c6 8F83      		std Y+7,r24
 13273 56c8 9887      		std Y+8,r25
 13274 56ca A987      		std Y+9,r26
 13275 56cc BA87      		std Y+10,r27
1296:lp_solve_5.5/lp_presolve.c ****         status = AUTOMATIC;
 13276               		.loc 2 1296 0
 13277 56ce 82E0      		ldi r24,lo8(2)
 13278 56d0 8A83      		std Y+2,r24
 13279 56d2 00C0      		rjmp .L489
 13280               	.L528:
1297:lp_solve_5.5/lp_presolve.c ****       }
1298:lp_solve_5.5/lp_presolve.c ****       else if(LHS < Xupper + epsvalue)
 13281               		.loc 2 1298 0
 13282 56d4 2989      		ldd r18,Y+17
 13283 56d6 3A89      		ldd r19,Y+18
 13284 56d8 4B89      		ldd r20,Y+19
 13285 56da 5C89      		ldd r21,Y+20
 13286 56dc 6F81      		ldd r22,Y+7
 13287 56de 7885      		ldd r23,Y+8
 13288 56e0 8985      		ldd r24,Y+9
 13289 56e2 9A85      		ldd r25,Y+10
 13290 56e4 0E94 0000 		call __addsf3
 13291 56e8 DC01      		movw r26,r24
 13292 56ea CB01      		movw r24,r22
 13293 56ec 2D89      		ldd r18,Y+21
 13294 56ee 3E89      		ldd r19,Y+22
 13295 56f0 4F89      		ldd r20,Y+23
 13296 56f2 588D      		ldd r21,Y+24
 13297 56f4 BC01      		movw r22,r24
 13298 56f6 CD01      		movw r24,r26
 13299 56f8 0E94 0000 		call __gtsf2
 13300 56fc 1816      		cp __zero_reg__,r24
 13301 56fe 04F4      		brge .L489
1299:lp_solve_5.5/lp_presolve.c ****         rowbindsvar = AUTOMATIC;
 13302               		.loc 2 1299 0
 13303 5700 82E0      		ldi r24,lo8(2)
 13304 5702 8983      		std Y+1,r24
 13305               	.L489:
1300:lp_solve_5.5/lp_presolve.c ****     }
1301:lp_solve_5.5/lp_presolve.c ****   }
1302:lp_solve_5.5/lp_presolve.c **** 
1303:lp_solve_5.5/lp_presolve.c ****   netX = presolve_sumplumin(lp, rownr, psdata->rows, FALSE);
 13306               		.loc 2 1303 0
 13307 5704 89A1      		ldd r24,Y+33
 13308 5706 9AA1      		ldd r25,Y+34
 13309 5708 FC01      		movw r30,r24
 13310 570a 4081      		ld r20,Z
 13311 570c 5181      		ldd r21,Z+1
 13312 570e 6BA1      		ldd r22,Y+35
 13313 5710 7CA1      		ldd r23,Y+36
 13314 5712 8F85      		ldd r24,Y+15
 13315 5714 9889      		ldd r25,Y+16
 13316 5716 20E0      		ldi r18,0
 13317 5718 0E94 0000 		call presolve_sumplumin
 13318 571c DC01      		movw r26,r24
 13319 571e CB01      		movw r24,r22
 13320 5720 8D8F      		std Y+29,r24
 13321 5722 9E8F      		std Y+30,r25
 13322 5724 AF8F      		std Y+31,r26
 13323 5726 B8A3      		std Y+32,r27
1304:lp_solve_5.5/lp_presolve.c ****   if(!my_infinite(lp, RHS) && !my_infinite(lp, netX)) {
 13324               		.loc 2 1304 0
 13325 5728 898D      		ldd r24,Y+25
 13326 572a 9A8D      		ldd r25,Y+26
 13327 572c AB8D      		ldd r26,Y+27
 13328 572e BC8D      		ldd r27,Y+28
 13329 5730 BF77      		andi r27,0x7f
 13330 5732 2F85      		ldd r18,Y+15
 13331 5734 3889      		ldd r19,Y+16
 13332 5736 265F      		subi r18,-10
 13333 5738 3C4F      		sbci r19,-4
 13334 573a F901      		movw r30,r18
 13335 573c 2081      		ld r18,Z
 13336 573e 3181      		ldd r19,Z+1
 13337 5740 4281      		ldd r20,Z+2
 13338 5742 5381      		ldd r21,Z+3
 13339 5744 11E0      		ldi r17,lo8(1)
 13340 5746 BC01      		movw r22,r24
 13341 5748 CD01      		movw r24,r26
 13342 574a 0E94 0000 		call __gesf2
 13343 574e 8823      		tst r24
 13344 5750 04F4      		brge .L500
 13345 5752 10E0      		ldi r17,0
 13346               	.L500:
 13347 5754 81E0      		ldi r24,lo8(1)
 13348 5756 8127      		eor r24,r17
 13349 5758 8823      		tst r24
 13350 575a 01F4      		brne .+2
 13351 575c 00C0      		rjmp .L501
 13352               		.loc 2 1304 0 is_stmt 0 discriminator 1
 13353 575e 8D8D      		ldd r24,Y+29
 13354 5760 9E8D      		ldd r25,Y+30
 13355 5762 AF8D      		ldd r26,Y+31
 13356 5764 B8A1      		ldd r27,Y+32
 13357 5766 BF77      		andi r27,0x7f
 13358 5768 2F85      		ldd r18,Y+15
 13359 576a 3889      		ldd r19,Y+16
 13360 576c 265F      		subi r18,-10
 13361 576e 3C4F      		sbci r19,-4
 13362 5770 F901      		movw r30,r18
 13363 5772 2081      		ld r18,Z
 13364 5774 3181      		ldd r19,Z+1
 13365 5776 4281      		ldd r20,Z+2
 13366 5778 5381      		ldd r21,Z+3
 13367 577a 11E0      		ldi r17,lo8(1)
 13368 577c BC01      		movw r22,r24
 13369 577e CD01      		movw r24,r26
 13370 5780 0E94 0000 		call __gesf2
 13371 5784 8823      		tst r24
 13372 5786 04F4      		brge .L502
 13373 5788 10E0      		ldi r17,0
 13374               	.L502:
 13375 578a 81E0      		ldi r24,lo8(1)
 13376 578c 8127      		eor r24,r17
 13377 578e 8823      		tst r24
 13378 5790 01F4      		brne .+2
 13379 5792 00C0      		rjmp .L501
1305:lp_solve_5.5/lp_presolve.c ****     if(coeff_a < 0) {
 13380               		.loc 2 1305 0 is_stmt 1
 13381 5794 20E0      		ldi r18,0
 13382 5796 30E0      		ldi r19,0
 13383 5798 A901      		movw r20,r18
 13384 579a 6B81      		ldd r22,Y+3
 13385 579c 7C81      		ldd r23,Y+4
 13386 579e 8D81      		ldd r24,Y+5
 13387 57a0 9E81      		ldd r25,Y+6
 13388 57a2 0E94 0000 		call __ltsf2
 13389 57a6 8823      		tst r24
 13390 57a8 04F0      		brlt .+2
 13391 57aa 00C0      		rjmp .L529
1306:lp_solve_5.5/lp_presolve.c ****       if(!my_infinite(lp, Xupper)) {
 13392               		.loc 2 1306 0
 13393 57ac 8F81      		ldd r24,Y+7
 13394 57ae 9885      		ldd r25,Y+8
 13395 57b0 A985      		ldd r26,Y+9
 13396 57b2 BA85      		ldd r27,Y+10
 13397 57b4 BF77      		andi r27,0x7f
 13398 57b6 2F85      		ldd r18,Y+15
 13399 57b8 3889      		ldd r19,Y+16
 13400 57ba 265F      		subi r18,-10
 13401 57bc 3C4F      		sbci r19,-4
 13402 57be F901      		movw r30,r18
 13403 57c0 2081      		ld r18,Z
 13404 57c2 3181      		ldd r19,Z+1
 13405 57c4 4281      		ldd r20,Z+2
 13406 57c6 5381      		ldd r21,Z+3
 13407 57c8 11E0      		ldi r17,lo8(1)
 13408 57ca BC01      		movw r22,r24
 13409 57cc CD01      		movw r24,r26
 13410 57ce 0E94 0000 		call __gesf2
 13411 57d2 8823      		tst r24
 13412 57d4 04F4      		brge .L505
 13413 57d6 10E0      		ldi r17,0
 13414               	.L505:
 13415 57d8 81E0      		ldi r24,lo8(1)
 13416 57da 8127      		eor r24,r17
 13417 57dc 8823      		tst r24
 13418 57de 01F4      		brne .+2
 13419 57e0 00C0      		rjmp .L501
1307:lp_solve_5.5/lp_presolve.c ****         RHS -= netX-coeff_a*Xupper;
 13420               		.loc 2 1307 0
 13421 57e2 2F81      		ldd r18,Y+7
 13422 57e4 3885      		ldd r19,Y+8
 13423 57e6 4985      		ldd r20,Y+9
 13424 57e8 5A85      		ldd r21,Y+10
 13425 57ea 6B81      		ldd r22,Y+3
 13426 57ec 7C81      		ldd r23,Y+4
 13427 57ee 8D81      		ldd r24,Y+5
 13428 57f0 9E81      		ldd r25,Y+6
 13429 57f2 0E94 0000 		call __mulsf3
 13430 57f6 DC01      		movw r26,r24
 13431 57f8 CB01      		movw r24,r22
 13432 57fa 9C01      		movw r18,r24
 13433 57fc AD01      		movw r20,r26
 13434 57fe 6D8D      		ldd r22,Y+29
 13435 5800 7E8D      		ldd r23,Y+30
 13436 5802 8F8D      		ldd r24,Y+31
 13437 5804 98A1      		ldd r25,Y+32
 13438 5806 0E94 0000 		call __subsf3
 13439 580a DC01      		movw r26,r24
 13440 580c CB01      		movw r24,r22
 13441 580e 9C01      		movw r18,r24
 13442 5810 AD01      		movw r20,r26
 13443 5812 698D      		ldd r22,Y+25
 13444 5814 7A8D      		ldd r23,Y+26
 13445 5816 8B8D      		ldd r24,Y+27
 13446 5818 9C8D      		ldd r25,Y+28
 13447 581a 0E94 0000 		call __subsf3
 13448 581e DC01      		movw r26,r24
 13449 5820 CB01      		movw r24,r22
 13450 5822 898F      		std Y+25,r24
 13451 5824 9A8F      		std Y+26,r25
 13452 5826 AB8F      		std Y+27,r26
 13453 5828 BC8F      		std Y+28,r27
1308:lp_solve_5.5/lp_presolve.c ****         RHS /= coeff_a;
 13454               		.loc 2 1308 0
 13455 582a 2B81      		ldd r18,Y+3
 13456 582c 3C81      		ldd r19,Y+4
 13457 582e 4D81      		ldd r20,Y+5
 13458 5830 5E81      		ldd r21,Y+6
 13459 5832 698D      		ldd r22,Y+25
 13460 5834 7A8D      		ldd r23,Y+26
 13461 5836 8B8D      		ldd r24,Y+27
 13462 5838 9C8D      		ldd r25,Y+28
 13463 583a 0E94 0000 		call __divsf3
 13464 583e DC01      		movw r26,r24
 13465 5840 CB01      		movw r24,r22
 13466 5842 898F      		std Y+25,r24
 13467 5844 9A8F      		std Y+26,r25
 13468 5846 AB8F      		std Y+27,r26
 13469 5848 BC8F      		std Y+28,r27
1309:lp_solve_5.5/lp_presolve.c ****         if(RHS > Xlower + epsvalue) {
 13470               		.loc 2 1309 0
 13471 584a 2989      		ldd r18,Y+17
 13472 584c 3A89      		ldd r19,Y+18
 13473 584e 4B89      		ldd r20,Y+19
 13474 5850 5C89      		ldd r21,Y+20
 13475 5852 6B85      		ldd r22,Y+11
 13476 5854 7C85      		ldd r23,Y+12
 13477 5856 8D85      		ldd r24,Y+13
 13478 5858 9E85      		ldd r25,Y+14
 13479 585a 0E94 0000 		call __addsf3
 13480 585e DC01      		movw r26,r24
 13481 5860 CB01      		movw r24,r22
 13482 5862 298D      		ldd r18,Y+25
 13483 5864 3A8D      		ldd r19,Y+26
 13484 5866 4B8D      		ldd r20,Y+27
 13485 5868 5C8D      		ldd r21,Y+28
 13486 586a BC01      		movw r22,r24
 13487 586c CD01      		movw r24,r26
 13488 586e 0E94 0000 		call __ltsf2
 13489 5872 8823      		tst r24
 13490 5874 04F4      		brge .L530
1310:lp_solve_5.5/lp_presolve.c ****           Xlower = presolve_roundrhs(lp, RHS, TRUE);
 13491               		.loc 2 1310 0
 13492 5876 898D      		ldd r24,Y+25
 13493 5878 9A8D      		ldd r25,Y+26
 13494 587a AB8D      		ldd r26,Y+27
 13495 587c BC8D      		ldd r27,Y+28
 13496 587e EF85      		ldd r30,Y+15
 13497 5880 F889      		ldd r31,Y+16
 13498 5882 21E0      		ldi r18,lo8(1)
 13499 5884 AC01      		movw r20,r24
 13500 5886 BD01      		movw r22,r26
 13501 5888 CF01      		movw r24,r30
 13502 588a 0E94 0000 		call presolve_roundrhs
 13503 588e DC01      		movw r26,r24
 13504 5890 CB01      		movw r24,r22
 13505 5892 8B87      		std Y+11,r24
 13506 5894 9C87      		std Y+12,r25
 13507 5896 AD87      		std Y+13,r26
 13508 5898 BE87      		std Y+14,r27
1311:lp_solve_5.5/lp_presolve.c ****           status |= TRUE;
 13509               		.loc 2 1311 0
 13510 589a 8A81      		ldd r24,Y+2
 13511 589c 8160      		ori r24,lo8(1)
 13512 589e 8A83      		std Y+2,r24
 13513 58a0 00C0      		rjmp .L501
 13514               	.L530:
1312:lp_solve_5.5/lp_presolve.c ****         }
1313:lp_solve_5.5/lp_presolve.c ****         else if(RHS > Xlower - epsvalue)
 13515               		.loc 2 1313 0
 13516 58a2 2989      		ldd r18,Y+17
 13517 58a4 3A89      		ldd r19,Y+18
 13518 58a6 4B89      		ldd r20,Y+19
 13519 58a8 5C89      		ldd r21,Y+20
 13520 58aa 6B85      		ldd r22,Y+11
 13521 58ac 7C85      		ldd r23,Y+12
 13522 58ae 8D85      		ldd r24,Y+13
 13523 58b0 9E85      		ldd r25,Y+14
 13524 58b2 0E94 0000 		call __subsf3
 13525 58b6 DC01      		movw r26,r24
 13526 58b8 CB01      		movw r24,r22
 13527 58ba 298D      		ldd r18,Y+25
 13528 58bc 3A8D      		ldd r19,Y+26
 13529 58be 4B8D      		ldd r20,Y+27
 13530 58c0 5C8D      		ldd r21,Y+28
 13531 58c2 BC01      		movw r22,r24
 13532 58c4 CD01      		movw r24,r26
 13533 58c6 0E94 0000 		call __ltsf2
 13534 58ca 8823      		tst r24
 13535 58cc 04F0      		brlt .+2
 13536 58ce 00C0      		rjmp .L501
1314:lp_solve_5.5/lp_presolve.c ****           rowbindsvar |= TRUE;
 13537               		.loc 2 1314 0
 13538 58d0 8981      		ldd r24,Y+1
 13539 58d2 8160      		ori r24,lo8(1)
 13540 58d4 8983      		std Y+1,r24
 13541 58d6 00C0      		rjmp .L501
 13542               	.L529:
1315:lp_solve_5.5/lp_presolve.c ****       }
1316:lp_solve_5.5/lp_presolve.c ****     }
1317:lp_solve_5.5/lp_presolve.c ****     else if(!my_infinite(lp, Xlower)) {
 13543               		.loc 2 1317 0
 13544 58d8 8B85      		ldd r24,Y+11
 13545 58da 9C85      		ldd r25,Y+12
 13546 58dc AD85      		ldd r26,Y+13
 13547 58de BE85      		ldd r27,Y+14
 13548 58e0 BF77      		andi r27,0x7f
 13549 58e2 2F85      		ldd r18,Y+15
 13550 58e4 3889      		ldd r19,Y+16
 13551 58e6 265F      		subi r18,-10
 13552 58e8 3C4F      		sbci r19,-4
 13553 58ea F901      		movw r30,r18
 13554 58ec 2081      		ld r18,Z
 13555 58ee 3181      		ldd r19,Z+1
 13556 58f0 4281      		ldd r20,Z+2
 13557 58f2 5381      		ldd r21,Z+3
 13558 58f4 11E0      		ldi r17,lo8(1)
 13559 58f6 BC01      		movw r22,r24
 13560 58f8 CD01      		movw r24,r26
 13561 58fa 0E94 0000 		call __gesf2
 13562 58fe 8823      		tst r24
 13563 5900 04F4      		brge .L510
 13564 5902 10E0      		ldi r17,0
 13565               	.L510:
 13566 5904 81E0      		ldi r24,lo8(1)
 13567 5906 8127      		eor r24,r17
 13568 5908 8823      		tst r24
 13569 590a 01F4      		brne .+2
 13570 590c 00C0      		rjmp .L501
1318:lp_solve_5.5/lp_presolve.c ****       RHS -= netX-coeff_a*Xlower;
 13571               		.loc 2 1318 0
 13572 590e 2B85      		ldd r18,Y+11
 13573 5910 3C85      		ldd r19,Y+12
 13574 5912 4D85      		ldd r20,Y+13
 13575 5914 5E85      		ldd r21,Y+14
 13576 5916 6B81      		ldd r22,Y+3
 13577 5918 7C81      		ldd r23,Y+4
 13578 591a 8D81      		ldd r24,Y+5
 13579 591c 9E81      		ldd r25,Y+6
 13580 591e 0E94 0000 		call __mulsf3
 13581 5922 DC01      		movw r26,r24
 13582 5924 CB01      		movw r24,r22
 13583 5926 9C01      		movw r18,r24
 13584 5928 AD01      		movw r20,r26
 13585 592a 6D8D      		ldd r22,Y+29
 13586 592c 7E8D      		ldd r23,Y+30
 13587 592e 8F8D      		ldd r24,Y+31
 13588 5930 98A1      		ldd r25,Y+32
 13589 5932 0E94 0000 		call __subsf3
 13590 5936 DC01      		movw r26,r24
 13591 5938 CB01      		movw r24,r22
 13592 593a 9C01      		movw r18,r24
 13593 593c AD01      		movw r20,r26
 13594 593e 698D      		ldd r22,Y+25
 13595 5940 7A8D      		ldd r23,Y+26
 13596 5942 8B8D      		ldd r24,Y+27
 13597 5944 9C8D      		ldd r25,Y+28
 13598 5946 0E94 0000 		call __subsf3
 13599 594a DC01      		movw r26,r24
 13600 594c CB01      		movw r24,r22
 13601 594e 898F      		std Y+25,r24
 13602 5950 9A8F      		std Y+26,r25
 13603 5952 AB8F      		std Y+27,r26
 13604 5954 BC8F      		std Y+28,r27
1319:lp_solve_5.5/lp_presolve.c ****       RHS /= coeff_a;
 13605               		.loc 2 1319 0
 13606 5956 2B81      		ldd r18,Y+3
 13607 5958 3C81      		ldd r19,Y+4
 13608 595a 4D81      		ldd r20,Y+5
 13609 595c 5E81      		ldd r21,Y+6
 13610 595e 698D      		ldd r22,Y+25
 13611 5960 7A8D      		ldd r23,Y+26
 13612 5962 8B8D      		ldd r24,Y+27
 13613 5964 9C8D      		ldd r25,Y+28
 13614 5966 0E94 0000 		call __divsf3
 13615 596a DC01      		movw r26,r24
 13616 596c CB01      		movw r24,r22
 13617 596e 898F      		std Y+25,r24
 13618 5970 9A8F      		std Y+26,r25
 13619 5972 AB8F      		std Y+27,r26
 13620 5974 BC8F      		std Y+28,r27
1320:lp_solve_5.5/lp_presolve.c ****       if(RHS < Xupper - epsvalue) {
 13621               		.loc 2 1320 0
 13622 5976 2989      		ldd r18,Y+17
 13623 5978 3A89      		ldd r19,Y+18
 13624 597a 4B89      		ldd r20,Y+19
 13625 597c 5C89      		ldd r21,Y+20
 13626 597e 6F81      		ldd r22,Y+7
 13627 5980 7885      		ldd r23,Y+8
 13628 5982 8985      		ldd r24,Y+9
 13629 5984 9A85      		ldd r25,Y+10
 13630 5986 0E94 0000 		call __subsf3
 13631 598a DC01      		movw r26,r24
 13632 598c CB01      		movw r24,r22
 13633 598e 298D      		ldd r18,Y+25
 13634 5990 3A8D      		ldd r19,Y+26
 13635 5992 4B8D      		ldd r20,Y+27
 13636 5994 5C8D      		ldd r21,Y+28
 13637 5996 BC01      		movw r22,r24
 13638 5998 CD01      		movw r24,r26
 13639 599a 0E94 0000 		call __gtsf2
 13640 599e 1816      		cp __zero_reg__,r24
 13641 59a0 04F4      		brge .L531
1321:lp_solve_5.5/lp_presolve.c ****         Xupper = presolve_roundrhs(lp, RHS, FALSE);
 13642               		.loc 2 1321 0
 13643 59a2 898D      		ldd r24,Y+25
 13644 59a4 9A8D      		ldd r25,Y+26
 13645 59a6 AB8D      		ldd r26,Y+27
 13646 59a8 BC8D      		ldd r27,Y+28
 13647 59aa EF85      		ldd r30,Y+15
 13648 59ac F889      		ldd r31,Y+16
 13649 59ae 20E0      		ldi r18,0
 13650 59b0 AC01      		movw r20,r24
 13651 59b2 BD01      		movw r22,r26
 13652 59b4 CF01      		movw r24,r30
 13653 59b6 0E94 0000 		call presolve_roundrhs
 13654 59ba DC01      		movw r26,r24
 13655 59bc CB01      		movw r24,r22
 13656 59be 8F83      		std Y+7,r24
 13657 59c0 9887      		std Y+8,r25
 13658 59c2 A987      		std Y+9,r26
 13659 59c4 BA87      		std Y+10,r27
1322:lp_solve_5.5/lp_presolve.c ****         status |= AUTOMATIC;
 13660               		.loc 2 1322 0
 13661 59c6 8A81      		ldd r24,Y+2
 13662 59c8 8260      		ori r24,lo8(2)
 13663 59ca 8A83      		std Y+2,r24
 13664 59cc 00C0      		rjmp .L501
 13665               	.L531:
1323:lp_solve_5.5/lp_presolve.c ****       }
1324:lp_solve_5.5/lp_presolve.c ****       else if(RHS < Xupper + epsvalue)
 13666               		.loc 2 1324 0
 13667 59ce 2989      		ldd r18,Y+17
 13668 59d0 3A89      		ldd r19,Y+18
 13669 59d2 4B89      		ldd r20,Y+19
 13670 59d4 5C89      		ldd r21,Y+20
 13671 59d6 6F81      		ldd r22,Y+7
 13672 59d8 7885      		ldd r23,Y+8
 13673 59da 8985      		ldd r24,Y+9
 13674 59dc 9A85      		ldd r25,Y+10
 13675 59de 0E94 0000 		call __addsf3
 13676 59e2 DC01      		movw r26,r24
 13677 59e4 CB01      		movw r24,r22
 13678 59e6 298D      		ldd r18,Y+25
 13679 59e8 3A8D      		ldd r19,Y+26
 13680 59ea 4B8D      		ldd r20,Y+27
 13681 59ec 5C8D      		ldd r21,Y+28
 13682 59ee BC01      		movw r22,r24
 13683 59f0 CD01      		movw r24,r26
 13684 59f2 0E94 0000 		call __gtsf2
 13685 59f6 1816      		cp __zero_reg__,r24
 13686 59f8 04F4      		brge .L501
1325:lp_solve_5.5/lp_presolve.c ****         rowbindsvar |= AUTOMATIC;
 13687               		.loc 2 1325 0
 13688 59fa 8981      		ldd r24,Y+1
 13689 59fc 8260      		ori r24,lo8(2)
 13690 59fe 8983      		std Y+1,r24
 13691               	.L501:
1326:lp_solve_5.5/lp_presolve.c ****     }
1327:lp_solve_5.5/lp_presolve.c ****   }
1328:lp_solve_5.5/lp_presolve.c **** 
1329:lp_solve_5.5/lp_presolve.c ****   *lobound = Xlower;
 13692               		.loc 2 1329 0
 13693 5a00 2FA1      		ldd r18,Y+39
 13694 5a02 38A5      		ldd r19,Y+40
 13695 5a04 8B85      		ldd r24,Y+11
 13696 5a06 9C85      		ldd r25,Y+12
 13697 5a08 AD85      		ldd r26,Y+13
 13698 5a0a BE85      		ldd r27,Y+14
 13699 5a0c F901      		movw r30,r18
 13700 5a0e 8083      		st Z,r24
 13701 5a10 9183      		std Z+1,r25
 13702 5a12 A283      		std Z+2,r26
 13703 5a14 B383      		std Z+3,r27
1330:lp_solve_5.5/lp_presolve.c ****   *upbound = Xupper;
 13704               		.loc 2 1330 0
 13705 5a16 29A5      		ldd r18,Y+41
 13706 5a18 3AA5      		ldd r19,Y+42
 13707 5a1a 8F81      		ldd r24,Y+7
 13708 5a1c 9885      		ldd r25,Y+8
 13709 5a1e A985      		ldd r26,Y+9
 13710 5a20 BA85      		ldd r27,Y+10
 13711 5a22 F901      		movw r30,r18
 13712 5a24 8083      		st Z,r24
 13713 5a26 9183      		std Z+1,r25
 13714 5a28 A283      		std Z+2,r26
 13715 5a2a B383      		std Z+3,r27
1331:lp_solve_5.5/lp_presolve.c ****   if(rowbinds != NULL)
 13716               		.loc 2 1331 0
 13717 5a2c 8DA5      		ldd r24,Y+45
 13718 5a2e 9EA5      		ldd r25,Y+46
 13719 5a30 892B      		or r24,r25
 13720 5a32 01F0      		breq .L514
1332:lp_solve_5.5/lp_presolve.c ****     *rowbinds = rowbindsvar;
 13721               		.loc 2 1332 0
 13722 5a34 8DA5      		ldd r24,Y+45
 13723 5a36 9EA5      		ldd r25,Y+46
 13724 5a38 2981      		ldd r18,Y+1
 13725 5a3a FC01      		movw r30,r24
 13726 5a3c 2083      		st Z,r18
 13727               	.L514:
1333:lp_solve_5.5/lp_presolve.c **** 
1334:lp_solve_5.5/lp_presolve.c ****   return(status);
 13728               		.loc 2 1334 0
 13729 5a3e 8A81      		ldd r24,Y+2
 13730               	/* epilogue start */
1335:lp_solve_5.5/lp_presolve.c **** }
 13731               		.loc 2 1335 0
 13732 5a40 AE96      		adiw r28,46
 13733 5a42 0FB6      		in __tmp_reg__,__SREG__
 13734 5a44 F894      		cli
 13735 5a46 DEBF      		out __SP_H__,r29
 13736 5a48 0FBE      		out __SREG__,__tmp_reg__
 13737 5a4a CDBF      		out __SP_L__,r28
 13738 5a4c DF91      		pop r29
 13739 5a4e CF91      		pop r28
 13740 5a50 1F91      		pop r17
 13741 5a52 0F91      		pop r16
 13742 5a54 FF90      		pop r15
 13743 5a56 EF90      		pop r14
 13744 5a58 DF90      		pop r13
 13745 5a5a CF90      		pop r12
 13746 5a5c 0895      		ret
 13747               		.cfi_endproc
 13748               	.LFE48:
 13750               	.global	isnz_origobj
 13752               	isnz_origobj:
 13753               	.LFB49:
1336:lp_solve_5.5/lp_presolve.c **** 
1337:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL isnz_origobj(lprec *lp, int colnr)
1338:lp_solve_5.5/lp_presolve.c **** {
 13754               		.loc 2 1338 0
 13755               		.cfi_startproc
 13756 5a5e 1F93      		push r17
 13757               	.LCFI232:
 13758               		.cfi_def_cfa_offset 3
 13759               		.cfi_offset 17, -2
 13760 5a60 CF93      		push r28
 13761               	.LCFI233:
 13762               		.cfi_def_cfa_offset 4
 13763               		.cfi_offset 28, -3
 13764 5a62 DF93      		push r29
 13765               	.LCFI234:
 13766               		.cfi_def_cfa_offset 5
 13767               		.cfi_offset 29, -4
 13768 5a64 00D0      		rcall .
 13769 5a66 00D0      		rcall .
 13770               	.LCFI235:
 13771               		.cfi_def_cfa_offset 9
 13772 5a68 CDB7      		in r28,__SP_L__
 13773 5a6a DEB7      		in r29,__SP_H__
 13774               	.LCFI236:
 13775               		.cfi_def_cfa_register 28
 13776               	/* prologue: function */
 13777               	/* frame size = 4 */
 13778               	/* stack size = 7 */
 13779               	.L__stack_usage = 7
 13780 5a6c 9A83      		std Y+2,r25
 13781 5a6e 8983      		std Y+1,r24
 13782 5a70 7C83      		std Y+4,r23
 13783 5a72 6B83      		std Y+3,r22
1339:lp_solve_5.5/lp_presolve.c ****   return( (MYBOOL) (lp->orig_obj[colnr] != 0) );
 13784               		.loc 2 1339 0
 13785 5a74 8981      		ldd r24,Y+1
 13786 5a76 9A81      		ldd r25,Y+2
 13787 5a78 845D      		subi r24,-44
 13788 5a7a 9D4F      		sbci r25,-3
 13789 5a7c FC01      		movw r30,r24
 13790 5a7e 2081      		ld r18,Z
 13791 5a80 3181      		ldd r19,Z+1
 13792 5a82 8B81      		ldd r24,Y+3
 13793 5a84 9C81      		ldd r25,Y+4
 13794 5a86 880F      		lsl r24
 13795 5a88 991F      		rol r25
 13796 5a8a 880F      		lsl r24
 13797 5a8c 991F      		rol r25
 13798 5a8e 820F      		add r24,r18
 13799 5a90 931F      		adc r25,r19
 13800 5a92 FC01      		movw r30,r24
 13801 5a94 8081      		ld r24,Z
 13802 5a96 9181      		ldd r25,Z+1
 13803 5a98 A281      		ldd r26,Z+2
 13804 5a9a B381      		ldd r27,Z+3
 13805 5a9c 11E0      		ldi r17,lo8(1)
 13806 5a9e 20E0      		ldi r18,0
 13807 5aa0 30E0      		ldi r19,0
 13808 5aa2 A901      		movw r20,r18
 13809 5aa4 BC01      		movw r22,r24
 13810 5aa6 CD01      		movw r24,r26
 13811 5aa8 0E94 0000 		call __nesf2
 13812 5aac 8823      		tst r24
 13813 5aae 01F4      		brne .L533
 13814 5ab0 10E0      		ldi r17,0
 13815               	.L533:
 13816 5ab2 812F      		mov r24,r17
 13817               	/* epilogue start */
1340:lp_solve_5.5/lp_presolve.c **** }
 13818               		.loc 2 1340 0
 13819 5ab4 0F90      		pop __tmp_reg__
 13820 5ab6 0F90      		pop __tmp_reg__
 13821 5ab8 0F90      		pop __tmp_reg__
 13822 5aba 0F90      		pop __tmp_reg__
 13823 5abc DF91      		pop r29
 13824 5abe CF91      		pop r28
 13825 5ac0 1F91      		pop r17
 13826 5ac2 0895      		ret
 13827               		.cfi_endproc
 13828               	.LFE49:
 13830               	.global	presolve_testrow
 13832               	presolve_testrow:
 13833               	.LFB50:
1341:lp_solve_5.5/lp_presolve.c **** 
1342:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_testrow(presolverec *psdata, int lastrow)
1343:lp_solve_5.5/lp_presolve.c **** {
 13834               		.loc 2 1343 0
 13835               		.cfi_startproc
 13836 5ac4 CF93      		push r28
 13837               	.LCFI237:
 13838               		.cfi_def_cfa_offset 3
 13839               		.cfi_offset 28, -2
 13840 5ac6 DF93      		push r29
 13841               	.LCFI238:
 13842               		.cfi_def_cfa_offset 4
 13843               		.cfi_offset 29, -3
 13844 5ac8 00D0      		rcall .
 13845 5aca 00D0      		rcall .
 13846               	.LCFI239:
 13847               		.cfi_def_cfa_offset 8
 13848 5acc CDB7      		in r28,__SP_L__
 13849 5ace DEB7      		in r29,__SP_H__
 13850               	.LCFI240:
 13851               		.cfi_def_cfa_register 28
 13852               	/* prologue: function */
 13853               	/* frame size = 4 */
 13854               	/* stack size = 6 */
 13855               	.L__stack_usage = 6
 13856 5ad0 9A83      		std Y+2,r25
 13857 5ad2 8983      		std Y+1,r24
 13858 5ad4 7C83      		std Y+4,r23
 13859 5ad6 6B83      		std Y+3,r22
1344:lp_solve_5.5/lp_presolve.c ****   if(psdata->forceupdate) {
 13860               		.loc 2 1344 0
 13861 5ad8 8981      		ldd r24,Y+1
 13862 5ada 9A81      		ldd r25,Y+2
 13863 5adc FC01      		movw r30,r24
 13864 5ade 84A1      		ldd r24,Z+36
 13865 5ae0 8823      		tst r24
 13866 5ae2 01F0      		breq .L536
1345:lp_solve_5.5/lp_presolve.c ****     presolve_updatesums(psdata);
 13867               		.loc 2 1345 0
 13868 5ae4 8981      		ldd r24,Y+1
 13869 5ae6 9A81      		ldd r25,Y+2
 13870 5ae8 0E94 0000 		call presolve_updatesums
1346:lp_solve_5.5/lp_presolve.c ****     psdata->forceupdate = FALSE;
 13871               		.loc 2 1346 0
 13872 5aec 8981      		ldd r24,Y+1
 13873 5aee 9A81      		ldd r25,Y+2
 13874 5af0 FC01      		movw r30,r24
 13875 5af2 14A2      		std Z+36,__zero_reg__
 13876               	.L536:
1347:lp_solve_5.5/lp_presolve.c ****   }
1348:lp_solve_5.5/lp_presolve.c ****   if(!presolve_rowfeasible(psdata, 0, TRUE))
 13877               		.loc 2 1348 0
 13878 5af4 8981      		ldd r24,Y+1
 13879 5af6 9A81      		ldd r25,Y+2
 13880 5af8 41E0      		ldi r20,lo8(1)
 13881 5afa 60E0      		ldi r22,0
 13882 5afc 70E0      		ldi r23,0
 13883 5afe 0E94 0000 		call presolve_rowfeasible
 13884 5b02 8823      		tst r24
 13885 5b04 01F4      		brne .L537
1349:lp_solve_5.5/lp_presolve.c ****     return( FALSE );
 13886               		.loc 2 1349 0
 13887 5b06 80E0      		ldi r24,0
 13888 5b08 00C0      		rjmp .L538
 13889               	.L537:
1350:lp_solve_5.5/lp_presolve.c ****   else
1351:lp_solve_5.5/lp_presolve.c ****     return( TRUE );
 13890               		.loc 2 1351 0
 13891 5b0a 81E0      		ldi r24,lo8(1)
 13892               	.L538:
 13893               	/* epilogue start */
1352:lp_solve_5.5/lp_presolve.c **** }
 13894               		.loc 2 1352 0
 13895 5b0c 0F90      		pop __tmp_reg__
 13896 5b0e 0F90      		pop __tmp_reg__
 13897 5b10 0F90      		pop __tmp_reg__
 13898 5b12 0F90      		pop __tmp_reg__
 13899 5b14 DF91      		pop r29
 13900 5b16 CF91      		pop r28
 13901 5b18 0895      		ret
 13902               		.cfi_endproc
 13903               	.LFE50:
 13905               		.section	.rodata
 13906               	.LC25:
 13907 0570 7072 6573 		.string	"presolve_coltighten: Found column %s with LB %g > UB %g\n"
 13907      6F6C 7665 
 13907      5F63 6F6C 
 13907      7469 6768 
 13907      7465 6E3A 
 13908               	.LC26:
 13909 05a9 7072 6573 		.string	"presolve_coltighten: Replaced bounds on column %s to [%g ... %g]\n"
 13909      6F6C 7665 
 13909      5F63 6F6C 
 13909      7469 6768 
 13909      7465 6E3A 
 13910               		.text
 13911               	.global	presolve_coltighten
 13913               	presolve_coltighten:
 13914               	.LFB51:
1353:lp_solve_5.5/lp_presolve.c **** 
1354:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_coltighten(presolverec *psdata, int colnr, REAL LOnew, REAL UPnew, int *coun
1355:lp_solve_5.5/lp_presolve.c **** {
 13915               		.loc 2 1355 0
 13916               		.cfi_startproc
 13917 5b1a CF92      		push r12
 13918               	.LCFI241:
 13919               		.cfi_def_cfa_offset 3
 13920               		.cfi_offset 12, -2
 13921 5b1c DF92      		push r13
 13922               	.LCFI242:
 13923               		.cfi_def_cfa_offset 4
 13924               		.cfi_offset 13, -3
 13925 5b1e EF92      		push r14
 13926               	.LCFI243:
 13927               		.cfi_def_cfa_offset 5
 13928               		.cfi_offset 14, -4
 13929 5b20 FF92      		push r15
 13930               	.LCFI244:
 13931               		.cfi_def_cfa_offset 6
 13932               		.cfi_offset 15, -5
 13933 5b22 0F93      		push r16
 13934               	.LCFI245:
 13935               		.cfi_def_cfa_offset 7
 13936               		.cfi_offset 16, -6
 13937 5b24 1F93      		push r17
 13938               	.LCFI246:
 13939               		.cfi_def_cfa_offset 8
 13940               		.cfi_offset 17, -7
 13941 5b26 CF93      		push r28
 13942               	.LCFI247:
 13943               		.cfi_def_cfa_offset 9
 13944               		.cfi_offset 28, -8
 13945 5b28 DF93      		push r29
 13946               	.LCFI248:
 13947               		.cfi_def_cfa_offset 10
 13948               		.cfi_offset 29, -9
 13949 5b2a CDB7      		in r28,__SP_L__
 13950 5b2c DEB7      		in r29,__SP_H__
 13951               	.LCFI249:
 13952               		.cfi_def_cfa_register 28
 13953 5b2e E297      		sbiw r28,50
 13954               	.LCFI250:
 13955               		.cfi_def_cfa_offset 60
 13956 5b30 0FB6      		in __tmp_reg__,__SREG__
 13957 5b32 F894      		cli
 13958 5b34 DEBF      		out __SP_H__,r29
 13959 5b36 0FBE      		out __SREG__,__tmp_reg__
 13960 5b38 CDBF      		out __SP_L__,r28
 13961               	/* prologue: function */
 13962               	/* frame size = 50 */
 13963               	/* stack size = 58 */
 13964               	.L__stack_usage = 58
 13965 5b3a 9EA3      		std Y+38,r25
 13966 5b3c 8DA3      		std Y+37,r24
 13967 5b3e 78A7      		std Y+40,r23
 13968 5b40 6FA3      		std Y+39,r22
 13969 5b42 29A7      		std Y+41,r18
 13970 5b44 3AA7      		std Y+42,r19
 13971 5b46 4BA7      		std Y+43,r20
 13972 5b48 5CA7      		std Y+44,r21
 13973 5b4a EDA6      		std Y+45,r14
 13974 5b4c FEA6      		std Y+46,r15
 13975 5b4e 0FA7      		std Y+47,r16
 13976 5b50 18AB      		std Y+48,r17
 13977 5b52 DAAA      		std Y+50,r13
 13978 5b54 C9AA      		std Y+49,r12
1356:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 13979               		.loc 2 1356 0
 13980 5b56 8DA1      		ldd r24,Y+37
 13981 5b58 9EA1      		ldd r25,Y+38
 13982 5b5a FC01      		movw r30,r24
 13983 5b5c 8289      		ldd r24,Z+18
 13984 5b5e 9389      		ldd r25,Z+19
 13985 5b60 988B      		std Y+16,r25
 13986 5b62 8F87      		std Y+15,r24
1357:lp_solve_5.5/lp_presolve.c ****   int      elmnr, elmend, k, oldcount = 0, newcount = 0, deltainf;
 13987               		.loc 2 1357 0
 13988 5b64 1A8A      		std Y+18,__zero_reg__
 13989 5b66 198A      		std Y+17,__zero_reg__
 13990 5b68 1C82      		std Y+4,__zero_reg__
 13991 5b6a 1B82      		std Y+3,__zero_reg__
1358:lp_solve_5.5/lp_presolve.c ****   REAL     LOold, UPold, Value, margin = psdata->epsvalue;
 13992               		.loc 2 1358 0
 13993 5b6c 8DA1      		ldd r24,Y+37
 13994 5b6e 9EA1      		ldd r25,Y+38
 13995 5b70 FC01      		movw r30,r24
 13996 5b72 8489      		ldd r24,Z+20
 13997 5b74 9589      		ldd r25,Z+21
 13998 5b76 A689      		ldd r26,Z+22
 13999 5b78 B789      		ldd r27,Z+23
 14000 5b7a 8B8B      		std Y+19,r24
 14001 5b7c 9C8B      		std Y+20,r25
 14002 5b7e AD8B      		std Y+21,r26
 14003 5b80 BE8B      		std Y+22,r27
1359:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 14004               		.loc 2 1359 0
 14005 5b82 8F85      		ldd r24,Y+15
 14006 5b84 9889      		ldd r25,Y+16
 14007 5b86 8A54      		subi r24,74
 14008 5b88 9D4F      		sbci r25,-3
 14009 5b8a FC01      		movw r30,r24
 14010 5b8c 8081      		ld r24,Z
 14011 5b8e 9181      		ldd r25,Z+1
 14012 5b90 988F      		std Y+24,r25
 14013 5b92 8F8B      		std Y+23,r24
1360:lp_solve_5.5/lp_presolve.c ****   REAL     *value;
1361:lp_solve_5.5/lp_presolve.c ****   int      *rownr;
1362:lp_solve_5.5/lp_presolve.c **** 
1363:lp_solve_5.5/lp_presolve.c ****   /* Attempt correction of marginally equal, but inconsistent input values */
1364:lp_solve_5.5/lp_presolve.c ****   Value = UPnew - LOnew;
 14014               		.loc 2 1364 0
 14015 5b94 29A5      		ldd r18,Y+41
 14016 5b96 3AA5      		ldd r19,Y+42
 14017 5b98 4BA5      		ldd r20,Y+43
 14018 5b9a 5CA5      		ldd r21,Y+44
 14019 5b9c 6DA5      		ldd r22,Y+45
 14020 5b9e 7EA5      		ldd r23,Y+46
 14021 5ba0 8FA5      		ldd r24,Y+47
 14022 5ba2 98A9      		ldd r25,Y+48
 14023 5ba4 0E94 0000 		call __subsf3
 14024 5ba8 DC01      		movw r26,r24
 14025 5baa CB01      		movw r24,r22
 14026 5bac 898F      		std Y+25,r24
 14027 5bae 9A8F      		std Y+26,r25
 14028 5bb0 AB8F      		std Y+27,r26
 14029 5bb2 BC8F      		std Y+28,r27
1365:lp_solve_5.5/lp_presolve.c ****   if((Value <= -margin) && (Value > -lp->epsprimal)) {
 14030               		.loc 2 1365 0
 14031 5bb4 8B89      		ldd r24,Y+19
 14032 5bb6 9C89      		ldd r25,Y+20
 14033 5bb8 AD89      		ldd r26,Y+21
 14034 5bba BE89      		ldd r27,Y+22
 14035 5bbc B058      		subi r27,0x80
 14036 5bbe 298D      		ldd r18,Y+25
 14037 5bc0 3A8D      		ldd r19,Y+26
 14038 5bc2 4B8D      		ldd r20,Y+27
 14039 5bc4 5C8D      		ldd r21,Y+28
 14040 5bc6 BC01      		movw r22,r24
 14041 5bc8 CD01      		movw r24,r26
 14042 5bca 0E94 0000 		call __gesf2
 14043 5bce 8823      		tst r24
 14044 5bd0 04F4      		brge .+2
 14045 5bd2 00C0      		rjmp .L540
 14046               		.loc 2 1365 0 is_stmt 0 discriminator 1
 14047 5bd4 8F85      		ldd r24,Y+15
 14048 5bd6 9889      		ldd r25,Y+16
 14049 5bd8 865E      		subi r24,-26
 14050 5bda 9C4F      		sbci r25,-4
 14051 5bdc FC01      		movw r30,r24
 14052 5bde 8081      		ld r24,Z
 14053 5be0 9181      		ldd r25,Z+1
 14054 5be2 A281      		ldd r26,Z+2
 14055 5be4 B381      		ldd r27,Z+3
 14056 5be6 B058      		subi r27,0x80
 14057 5be8 298D      		ldd r18,Y+25
 14058 5bea 3A8D      		ldd r19,Y+26
 14059 5bec 4B8D      		ldd r20,Y+27
 14060 5bee 5C8D      		ldd r21,Y+28
 14061 5bf0 BC01      		movw r22,r24
 14062 5bf2 CD01      		movw r24,r26
 14063 5bf4 0E94 0000 		call __ltsf2
 14064 5bf8 8823      		tst r24
 14065 5bfa 04F4      		brge .L540
1366:lp_solve_5.5/lp_presolve.c ****     if(fabs(fmod(UPnew, 1.0)) < margin)
 14066               		.loc 2 1366 0 is_stmt 1
 14067 5bfc 8DA5      		ldd r24,Y+45
 14068 5bfe 9EA5      		ldd r25,Y+46
 14069 5c00 AFA5      		ldd r26,Y+47
 14070 5c02 B8A9      		ldd r27,Y+48
 14071 5c04 20E0      		ldi r18,0
 14072 5c06 30E0      		ldi r19,0
 14073 5c08 40E8      		ldi r20,lo8(-128)
 14074 5c0a 5FE3      		ldi r21,lo8(63)
 14075 5c0c BC01      		movw r22,r24
 14076 5c0e CD01      		movw r24,r26
 14077 5c10 0E94 0000 		call fmod
 14078 5c14 DC01      		movw r26,r24
 14079 5c16 CB01      		movw r24,r22
 14080 5c18 BF77      		andi r27,0x7f
 14081 5c1a 2B89      		ldd r18,Y+19
 14082 5c1c 3C89      		ldd r19,Y+20
 14083 5c1e 4D89      		ldd r20,Y+21
 14084 5c20 5E89      		ldd r21,Y+22
 14085 5c22 BC01      		movw r22,r24
 14086 5c24 CD01      		movw r24,r26
 14087 5c26 0E94 0000 		call __ltsf2
 14088 5c2a 8823      		tst r24
 14089 5c2c 04F4      		brge .L656
1367:lp_solve_5.5/lp_presolve.c ****       LOnew = UPnew;
 14090               		.loc 2 1367 0
 14091 5c2e 8DA5      		ldd r24,Y+45
 14092 5c30 9EA5      		ldd r25,Y+46
 14093 5c32 AFA5      		ldd r26,Y+47
 14094 5c34 B8A9      		ldd r27,Y+48
 14095 5c36 89A7      		std Y+41,r24
 14096 5c38 9AA7      		std Y+42,r25
 14097 5c3a ABA7      		std Y+43,r26
 14098 5c3c BCA7      		std Y+44,r27
 14099 5c3e 00C0      		rjmp .L540
 14100               	.L656:
1368:lp_solve_5.5/lp_presolve.c ****     else
1369:lp_solve_5.5/lp_presolve.c ****       UPnew = LOnew;
 14101               		.loc 2 1369 0
 14102 5c40 89A5      		ldd r24,Y+41
 14103 5c42 9AA5      		ldd r25,Y+42
 14104 5c44 ABA5      		ldd r26,Y+43
 14105 5c46 BCA5      		ldd r27,Y+44
 14106 5c48 8DA7      		std Y+45,r24
 14107 5c4a 9EA7      		std Y+46,r25
 14108 5c4c AFA7      		std Y+47,r26
 14109 5c4e B8AB      		std Y+48,r27
 14110               	.L540:
1370:lp_solve_5.5/lp_presolve.c ****   }
1371:lp_solve_5.5/lp_presolve.c **** 
1372:lp_solve_5.5/lp_presolve.c ****   /* Check if there is anything to do */
1373:lp_solve_5.5/lp_presolve.c ****   LOold = get_lowbo(lp, colnr);
 14111               		.loc 2 1373 0
 14112 5c50 2FA1      		ldd r18,Y+39
 14113 5c52 38A5      		ldd r19,Y+40
 14114 5c54 8F85      		ldd r24,Y+15
 14115 5c56 9889      		ldd r25,Y+16
 14116 5c58 B901      		movw r22,r18
 14117 5c5a 0E94 0000 		call get_lowbo
 14118 5c5e DC01      		movw r26,r24
 14119 5c60 CB01      		movw r24,r22
 14120 5c62 8D8F      		std Y+29,r24
 14121 5c64 9E8F      		std Y+30,r25
 14122 5c66 AF8F      		std Y+31,r26
 14123 5c68 B8A3      		std Y+32,r27
1374:lp_solve_5.5/lp_presolve.c ****   UPold = get_upbo(lp, colnr);
 14124               		.loc 2 1374 0
 14125 5c6a 2FA1      		ldd r18,Y+39
 14126 5c6c 38A5      		ldd r19,Y+40
 14127 5c6e 8F85      		ldd r24,Y+15
 14128 5c70 9889      		ldd r25,Y+16
 14129 5c72 B901      		movw r22,r18
 14130 5c74 0E94 0000 		call get_upbo
 14131 5c78 DC01      		movw r26,r24
 14132 5c7a CB01      		movw r24,r22
 14133 5c7c 8F83      		std Y+7,r24
 14134 5c7e 9887      		std Y+8,r25
 14135 5c80 A987      		std Y+9,r26
 14136 5c82 BA87      		std Y+10,r27
1375:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
1376:lp_solve_5.5/lp_presolve.c ****   if(((LOold > LOnew) && !is_semicont(lp, colnr)) || (UPold < UPnew)) {
1377:lp_solve_5.5/lp_presolve.c ****     report(lp, SEVERE, "presolve_coltighten: Inconsistent new bounds requested for column %d\n", co
1378:lp_solve_5.5/lp_presolve.c ****     return( FALSE );
1379:lp_solve_5.5/lp_presolve.c ****   }
1380:lp_solve_5.5/lp_presolve.c **** #endif
1381:lp_solve_5.5/lp_presolve.c ****   if(count != NULL)
 14137               		.loc 2 1381 0
 14138 5c84 89A9      		ldd r24,Y+49
 14139 5c86 9AA9      		ldd r25,Y+50
 14140 5c88 892B      		or r24,r25
 14141 5c8a 01F0      		breq .L545
1382:lp_solve_5.5/lp_presolve.c ****     newcount = *count;
 14142               		.loc 2 1382 0
 14143 5c8c 89A9      		ldd r24,Y+49
 14144 5c8e 9AA9      		ldd r25,Y+50
 14145 5c90 FC01      		movw r30,r24
 14146 5c92 8081      		ld r24,Z
 14147 5c94 9181      		ldd r25,Z+1
 14148 5c96 9C83      		std Y+4,r25
 14149 5c98 8B83      		std Y+3,r24
 14150               	.L545:
1383:lp_solve_5.5/lp_presolve.c ****   oldcount = newcount;
 14151               		.loc 2 1383 0
 14152 5c9a 8B81      		ldd r24,Y+3
 14153 5c9c 9C81      		ldd r25,Y+4
 14154 5c9e 9A8B      		std Y+18,r25
 14155 5ca0 898B      		std Y+17,r24
1384:lp_solve_5.5/lp_presolve.c **** 
1385:lp_solve_5.5/lp_presolve.c ****   /* Modify inf-count */
1386:lp_solve_5.5/lp_presolve.c ****   deltainf = 0;
 14156               		.loc 2 1386 0
 14157 5ca2 1E82      		std Y+6,__zero_reg__
 14158 5ca4 1D82      		std Y+5,__zero_reg__
1387:lp_solve_5.5/lp_presolve.c ****   if((UPold < lp->infinite) || (LOold > -lp->infinite))
 14159               		.loc 2 1387 0
 14160 5ca6 8F85      		ldd r24,Y+15
 14161 5ca8 9889      		ldd r25,Y+16
 14162 5caa 865F      		subi r24,-10
 14163 5cac 9C4F      		sbci r25,-4
 14164 5cae FC01      		movw r30,r24
 14165 5cb0 8081      		ld r24,Z
 14166 5cb2 9181      		ldd r25,Z+1
 14167 5cb4 A281      		ldd r26,Z+2
 14168 5cb6 B381      		ldd r27,Z+3
 14169 5cb8 2F81      		ldd r18,Y+7
 14170 5cba 3885      		ldd r19,Y+8
 14171 5cbc 4985      		ldd r20,Y+9
 14172 5cbe 5A85      		ldd r21,Y+10
 14173 5cc0 BC01      		movw r22,r24
 14174 5cc2 CD01      		movw r24,r26
 14175 5cc4 0E94 0000 		call __gtsf2
 14176 5cc8 1816      		cp __zero_reg__,r24
 14177 5cca 04F0      		brlt .L546
 14178               		.loc 2 1387 0 is_stmt 0 discriminator 1
 14179 5ccc 8F85      		ldd r24,Y+15
 14180 5cce 9889      		ldd r25,Y+16
 14181 5cd0 865F      		subi r24,-10
 14182 5cd2 9C4F      		sbci r25,-4
 14183 5cd4 FC01      		movw r30,r24
 14184 5cd6 8081      		ld r24,Z
 14185 5cd8 9181      		ldd r25,Z+1
 14186 5cda A281      		ldd r26,Z+2
 14187 5cdc B381      		ldd r27,Z+3
 14188 5cde B058      		subi r27,0x80
 14189 5ce0 2D8D      		ldd r18,Y+29
 14190 5ce2 3E8D      		ldd r19,Y+30
 14191 5ce4 4F8D      		ldd r20,Y+31
 14192 5ce6 58A1      		ldd r21,Y+32
 14193 5ce8 BC01      		movw r22,r24
 14194 5cea CD01      		movw r24,r26
 14195 5cec 0E94 0000 		call __ltsf2
 14196 5cf0 8823      		tst r24
 14197 5cf2 04F4      		brge .L547
 14198               	.L546:
1388:lp_solve_5.5/lp_presolve.c ****     deltainf -= 1;
 14199               		.loc 2 1388 0 is_stmt 1
 14200 5cf4 8D81      		ldd r24,Y+5
 14201 5cf6 9E81      		ldd r25,Y+6
 14202 5cf8 0197      		sbiw r24,1
 14203 5cfa 9E83      		std Y+6,r25
 14204 5cfc 8D83      		std Y+5,r24
 14205               	.L547:
1389:lp_solve_5.5/lp_presolve.c ****   if((UPnew < lp->infinite) || (LOnew > -lp->infinite))
 14206               		.loc 2 1389 0
 14207 5cfe 8F85      		ldd r24,Y+15
 14208 5d00 9889      		ldd r25,Y+16
 14209 5d02 865F      		subi r24,-10
 14210 5d04 9C4F      		sbci r25,-4
 14211 5d06 FC01      		movw r30,r24
 14212 5d08 8081      		ld r24,Z
 14213 5d0a 9181      		ldd r25,Z+1
 14214 5d0c A281      		ldd r26,Z+2
 14215 5d0e B381      		ldd r27,Z+3
 14216 5d10 2DA5      		ldd r18,Y+45
 14217 5d12 3EA5      		ldd r19,Y+46
 14218 5d14 4FA5      		ldd r20,Y+47
 14219 5d16 58A9      		ldd r21,Y+48
 14220 5d18 BC01      		movw r22,r24
 14221 5d1a CD01      		movw r24,r26
 14222 5d1c 0E94 0000 		call __gtsf2
 14223 5d20 1816      		cp __zero_reg__,r24
 14224 5d22 04F0      		brlt .L549
 14225               		.loc 2 1389 0 is_stmt 0 discriminator 1
 14226 5d24 8F85      		ldd r24,Y+15
 14227 5d26 9889      		ldd r25,Y+16
 14228 5d28 865F      		subi r24,-10
 14229 5d2a 9C4F      		sbci r25,-4
 14230 5d2c FC01      		movw r30,r24
 14231 5d2e 8081      		ld r24,Z
 14232 5d30 9181      		ldd r25,Z+1
 14233 5d32 A281      		ldd r26,Z+2
 14234 5d34 B381      		ldd r27,Z+3
 14235 5d36 B058      		subi r27,0x80
 14236 5d38 29A5      		ldd r18,Y+41
 14237 5d3a 3AA5      		ldd r19,Y+42
 14238 5d3c 4BA5      		ldd r20,Y+43
 14239 5d3e 5CA5      		ldd r21,Y+44
 14240 5d40 BC01      		movw r22,r24
 14241 5d42 CD01      		movw r24,r26
 14242 5d44 0E94 0000 		call __ltsf2
 14243 5d48 8823      		tst r24
 14244 5d4a 04F4      		brge .L550
 14245               	.L549:
1390:lp_solve_5.5/lp_presolve.c ****     deltainf += 1;
 14246               		.loc 2 1390 0 is_stmt 1
 14247 5d4c 8D81      		ldd r24,Y+5
 14248 5d4e 9E81      		ldd r25,Y+6
 14249 5d50 0196      		adiw r24,1
 14250 5d52 9E83      		std Y+6,r25
 14251 5d54 8D83      		std Y+5,r24
 14252               	.L550:
1391:lp_solve_5.5/lp_presolve.c ****   if(isnz_origobj(lp, colnr))
 14253               		.loc 2 1391 0
 14254 5d56 2FA1      		ldd r18,Y+39
 14255 5d58 38A5      		ldd r19,Y+40
 14256 5d5a 8F85      		ldd r24,Y+15
 14257 5d5c 9889      		ldd r25,Y+16
 14258 5d5e B901      		movw r22,r18
 14259 5d60 0E94 0000 		call isnz_origobj
 14260 5d64 8823      		tst r24
 14261 5d66 01F0      		breq .L552
1392:lp_solve_5.5/lp_presolve.c ****     psdata->rows->infcount[0] += deltainf;
 14262               		.loc 2 1392 0
 14263 5d68 8DA1      		ldd r24,Y+37
 14264 5d6a 9EA1      		ldd r25,Y+38
 14265 5d6c FC01      		movw r30,r24
 14266 5d6e 8081      		ld r24,Z
 14267 5d70 9181      		ldd r25,Z+1
 14268 5d72 FC01      		movw r30,r24
 14269 5d74 8485      		ldd r24,Z+12
 14270 5d76 9585      		ldd r25,Z+13
 14271 5d78 2DA1      		ldd r18,Y+37
 14272 5d7a 3EA1      		ldd r19,Y+38
 14273 5d7c F901      		movw r30,r18
 14274 5d7e 2081      		ld r18,Z
 14275 5d80 3181      		ldd r19,Z+1
 14276 5d82 F901      		movw r30,r18
 14277 5d84 2485      		ldd r18,Z+12
 14278 5d86 3585      		ldd r19,Z+13
 14279 5d88 F901      		movw r30,r18
 14280 5d8a 4081      		ld r20,Z
 14281 5d8c 5181      		ldd r21,Z+1
 14282 5d8e 2D81      		ldd r18,Y+5
 14283 5d90 3E81      		ldd r19,Y+6
 14284 5d92 240F      		add r18,r20
 14285 5d94 351F      		adc r19,r21
 14286 5d96 FC01      		movw r30,r24
 14287 5d98 3183      		std Z+1,r19
 14288 5d9a 2083      		st Z,r18
 14289               	.L552:
1393:lp_solve_5.5/lp_presolve.c ****   elmnr = mat->col_end[colnr-1];
 14290               		.loc 2 1393 0
 14291 5d9c 8F89      		ldd r24,Y+23
 14292 5d9e 988D      		ldd r25,Y+24
 14293 5da0 FC01      		movw r30,r24
 14294 5da2 2289      		ldd r18,Z+18
 14295 5da4 3389      		ldd r19,Z+19
 14296 5da6 8FA1      		ldd r24,Y+39
 14297 5da8 98A5      		ldd r25,Y+40
 14298 5daa 8150      		subi r24,1
 14299 5dac 9048      		sbci r25,-128
 14300 5dae 880F      		lsl r24
 14301 5db0 991F      		rol r25
 14302 5db2 820F      		add r24,r18
 14303 5db4 931F      		adc r25,r19
 14304 5db6 FC01      		movw r30,r24
 14305 5db8 8081      		ld r24,Z
 14306 5dba 9181      		ldd r25,Z+1
 14307 5dbc 9A83      		std Y+2,r25
 14308 5dbe 8983      		std Y+1,r24
1394:lp_solve_5.5/lp_presolve.c ****   elmend = mat->col_end[colnr];
 14309               		.loc 2 1394 0
 14310 5dc0 8F89      		ldd r24,Y+23
 14311 5dc2 988D      		ldd r25,Y+24
 14312 5dc4 FC01      		movw r30,r24
 14313 5dc6 2289      		ldd r18,Z+18
 14314 5dc8 3389      		ldd r19,Z+19
 14315 5dca 8FA1      		ldd r24,Y+39
 14316 5dcc 98A5      		ldd r25,Y+40
 14317 5dce 880F      		lsl r24
 14318 5dd0 991F      		rol r25
 14319 5dd2 820F      		add r24,r18
 14320 5dd4 931F      		adc r25,r19
 14321 5dd6 FC01      		movw r30,r24
 14322 5dd8 8081      		ld r24,Z
 14323 5dda 9181      		ldd r25,Z+1
 14324 5ddc 9AA3      		std Y+34,r25
 14325 5dde 89A3      		std Y+33,r24
1395:lp_solve_5.5/lp_presolve.c ****   rownr = &COL_MAT_ROWNR(elmnr);
 14326               		.loc 2 1395 0
 14327 5de0 8F89      		ldd r24,Y+23
 14328 5de2 988D      		ldd r25,Y+24
 14329 5de4 FC01      		movw r30,r24
 14330 5de6 2685      		ldd r18,Z+14
 14331 5de8 3785      		ldd r19,Z+15
 14332 5dea 8981      		ldd r24,Y+1
 14333 5dec 9A81      		ldd r25,Y+2
 14334 5dee 880F      		lsl r24
 14335 5df0 991F      		rol r25
 14336 5df2 820F      		add r24,r18
 14337 5df4 931F      		adc r25,r19
 14338 5df6 9E87      		std Y+14,r25
 14339 5df8 8D87      		std Y+13,r24
1396:lp_solve_5.5/lp_presolve.c ****   for(; elmnr < elmend; elmnr++, rownr += matRowColStep) {
 14340               		.loc 2 1396 0
 14341 5dfa 00C0      		rjmp .L553
 14342               	.L555:
1397:lp_solve_5.5/lp_presolve.c ****     k = *rownr;
 14343               		.loc 2 1397 0
 14344 5dfc 8D85      		ldd r24,Y+13
 14345 5dfe 9E85      		ldd r25,Y+14
 14346 5e00 FC01      		movw r30,r24
 14347 5e02 8081      		ld r24,Z
 14348 5e04 9181      		ldd r25,Z+1
 14349 5e06 9CA3      		std Y+36,r25
 14350 5e08 8BA3      		std Y+35,r24
1398:lp_solve_5.5/lp_presolve.c ****     if(isActiveLink(psdata->rows->varmap, k))
 14351               		.loc 2 1398 0
 14352 5e0a 8DA1      		ldd r24,Y+37
 14353 5e0c 9EA1      		ldd r25,Y+38
 14354 5e0e FC01      		movw r30,r24
 14355 5e10 8081      		ld r24,Z
 14356 5e12 9181      		ldd r25,Z+1
 14357 5e14 FC01      		movw r30,r24
 14358 5e16 8081      		ld r24,Z
 14359 5e18 9181      		ldd r25,Z+1
 14360 5e1a 2BA1      		ldd r18,Y+35
 14361 5e1c 3CA1      		ldd r19,Y+36
 14362 5e1e B901      		movw r22,r18
 14363 5e20 0E94 0000 		call isActiveLink
 14364 5e24 8823      		tst r24
 14365 5e26 01F0      		breq .L554
1399:lp_solve_5.5/lp_presolve.c ****       psdata->rows->infcount[k] += deltainf;
 14366               		.loc 2 1399 0
 14367 5e28 8DA1      		ldd r24,Y+37
 14368 5e2a 9EA1      		ldd r25,Y+38
 14369 5e2c FC01      		movw r30,r24
 14370 5e2e 8081      		ld r24,Z
 14371 5e30 9181      		ldd r25,Z+1
 14372 5e32 FC01      		movw r30,r24
 14373 5e34 2485      		ldd r18,Z+12
 14374 5e36 3585      		ldd r19,Z+13
 14375 5e38 8BA1      		ldd r24,Y+35
 14376 5e3a 9CA1      		ldd r25,Y+36
 14377 5e3c 880F      		lsl r24
 14378 5e3e 991F      		rol r25
 14379 5e40 820F      		add r24,r18
 14380 5e42 931F      		adc r25,r19
 14381 5e44 2DA1      		ldd r18,Y+37
 14382 5e46 3EA1      		ldd r19,Y+38
 14383 5e48 F901      		movw r30,r18
 14384 5e4a 2081      		ld r18,Z
 14385 5e4c 3181      		ldd r19,Z+1
 14386 5e4e F901      		movw r30,r18
 14387 5e50 4485      		ldd r20,Z+12
 14388 5e52 5585      		ldd r21,Z+13
 14389 5e54 2BA1      		ldd r18,Y+35
 14390 5e56 3CA1      		ldd r19,Y+36
 14391 5e58 220F      		lsl r18
 14392 5e5a 331F      		rol r19
 14393 5e5c 240F      		add r18,r20
 14394 5e5e 351F      		adc r19,r21
 14395 5e60 F901      		movw r30,r18
 14396 5e62 4081      		ld r20,Z
 14397 5e64 5181      		ldd r21,Z+1
 14398 5e66 2D81      		ldd r18,Y+5
 14399 5e68 3E81      		ldd r19,Y+6
 14400 5e6a 240F      		add r18,r20
 14401 5e6c 351F      		adc r19,r21
 14402 5e6e FC01      		movw r30,r24
 14403 5e70 3183      		std Z+1,r19
 14404 5e72 2083      		st Z,r18
 14405               	.L554:
1396:lp_solve_5.5/lp_presolve.c ****     k = *rownr;
 14406               		.loc 2 1396 0
 14407 5e74 8981      		ldd r24,Y+1
 14408 5e76 9A81      		ldd r25,Y+2
 14409 5e78 0196      		adiw r24,1
 14410 5e7a 9A83      		std Y+2,r25
 14411 5e7c 8983      		std Y+1,r24
 14412 5e7e 8D85      		ldd r24,Y+13
 14413 5e80 9E85      		ldd r25,Y+14
 14414 5e82 0296      		adiw r24,2
 14415 5e84 9E87      		std Y+14,r25
 14416 5e86 8D87      		std Y+13,r24
 14417               	.L553:
1396:lp_solve_5.5/lp_presolve.c ****     k = *rownr;
 14418               		.loc 2 1396 0 is_stmt 0 discriminator 1
 14419 5e88 2981      		ldd r18,Y+1
 14420 5e8a 3A81      		ldd r19,Y+2
 14421 5e8c 89A1      		ldd r24,Y+33
 14422 5e8e 9AA1      		ldd r25,Y+34
 14423 5e90 2817      		cp r18,r24
 14424 5e92 3907      		cpc r19,r25
 14425 5e94 04F4      		brge .+2
 14426 5e96 00C0      		rjmp .L555
1400:lp_solve_5.5/lp_presolve.c ****   }
1401:lp_solve_5.5/lp_presolve.c **** 
1402:lp_solve_5.5/lp_presolve.c ****   /* Look for opportunity to tighten upper variable bound */
1403:lp_solve_5.5/lp_presolve.c ****   if((UPnew < lp->infinite) && (UPnew+margin < UPold)) {
 14427               		.loc 2 1403 0 is_stmt 1
 14428 5e98 8F85      		ldd r24,Y+15
 14429 5e9a 9889      		ldd r25,Y+16
 14430 5e9c 865F      		subi r24,-10
 14431 5e9e 9C4F      		sbci r25,-4
 14432 5ea0 FC01      		movw r30,r24
 14433 5ea2 8081      		ld r24,Z
 14434 5ea4 9181      		ldd r25,Z+1
 14435 5ea6 A281      		ldd r26,Z+2
 14436 5ea8 B381      		ldd r27,Z+3
 14437 5eaa 2DA5      		ldd r18,Y+45
 14438 5eac 3EA5      		ldd r19,Y+46
 14439 5eae 4FA5      		ldd r20,Y+47
 14440 5eb0 58A9      		ldd r21,Y+48
 14441 5eb2 BC01      		movw r22,r24
 14442 5eb4 CD01      		movw r24,r26
 14443 5eb6 0E94 0000 		call __gtsf2
 14444 5eba 1816      		cp __zero_reg__,r24
 14445 5ebc 04F0      		brlt .+2
 14446 5ebe 00C0      		rjmp .L556
 14447               		.loc 2 1403 0 is_stmt 0 discriminator 1
 14448 5ec0 2B89      		ldd r18,Y+19
 14449 5ec2 3C89      		ldd r19,Y+20
 14450 5ec4 4D89      		ldd r20,Y+21
 14451 5ec6 5E89      		ldd r21,Y+22
 14452 5ec8 6DA5      		ldd r22,Y+45
 14453 5eca 7EA5      		ldd r23,Y+46
 14454 5ecc 8FA5      		ldd r24,Y+47
 14455 5ece 98A9      		ldd r25,Y+48
 14456 5ed0 0E94 0000 		call __addsf3
 14457 5ed4 DC01      		movw r26,r24
 14458 5ed6 CB01      		movw r24,r22
 14459 5ed8 2F81      		ldd r18,Y+7
 14460 5eda 3885      		ldd r19,Y+8
 14461 5edc 4985      		ldd r20,Y+9
 14462 5ede 5A85      		ldd r21,Y+10
 14463 5ee0 BC01      		movw r22,r24
 14464 5ee2 CD01      		movw r24,r26
 14465 5ee4 0E94 0000 		call __ltsf2
 14466 5ee8 8823      		tst r24
 14467 5eea 04F0      		brlt .+2
 14468 5eec 00C0      		rjmp .L556
1404:lp_solve_5.5/lp_presolve.c ****     if(is_int(lp, colnr))
 14469               		.loc 2 1404 0 is_stmt 1
 14470 5eee 2FA1      		ldd r18,Y+39
 14471 5ef0 38A5      		ldd r19,Y+40
 14472 5ef2 8F85      		ldd r24,Y+15
 14473 5ef4 9889      		ldd r25,Y+16
 14474 5ef6 B901      		movw r22,r18
 14475 5ef8 0E94 0000 		call is_int
 14476 5efc 8823      		tst r24
 14477 5efe 01F0      		breq .L559
1405:lp_solve_5.5/lp_presolve.c ****       UPnew = floor(UPnew+margin);
 14478               		.loc 2 1405 0
 14479 5f00 2B89      		ldd r18,Y+19
 14480 5f02 3C89      		ldd r19,Y+20
 14481 5f04 4D89      		ldd r20,Y+21
 14482 5f06 5E89      		ldd r21,Y+22
 14483 5f08 6DA5      		ldd r22,Y+45
 14484 5f0a 7EA5      		ldd r23,Y+46
 14485 5f0c 8FA5      		ldd r24,Y+47
 14486 5f0e 98A9      		ldd r25,Y+48
 14487 5f10 0E94 0000 		call __addsf3
 14488 5f14 DC01      		movw r26,r24
 14489 5f16 CB01      		movw r24,r22
 14490 5f18 BC01      		movw r22,r24
 14491 5f1a CD01      		movw r24,r26
 14492 5f1c 0E94 0000 		call floor
 14493 5f20 DC01      		movw r26,r24
 14494 5f22 CB01      		movw r24,r22
 14495 5f24 8DA7      		std Y+45,r24
 14496 5f26 9EA7      		std Y+46,r25
 14497 5f28 AFA7      		std Y+47,r26
 14498 5f2a B8AB      		std Y+48,r27
 14499               	.L559:
1406:lp_solve_5.5/lp_presolve.c ****     if(UPold < lp->infinite) {
 14500               		.loc 2 1406 0
 14501 5f2c 8F85      		ldd r24,Y+15
 14502 5f2e 9889      		ldd r25,Y+16
 14503 5f30 865F      		subi r24,-10
 14504 5f32 9C4F      		sbci r25,-4
 14505 5f34 FC01      		movw r30,r24
 14506 5f36 8081      		ld r24,Z
 14507 5f38 9181      		ldd r25,Z+1
 14508 5f3a A281      		ldd r26,Z+2
 14509 5f3c B381      		ldd r27,Z+3
 14510 5f3e 2F81      		ldd r18,Y+7
 14511 5f40 3885      		ldd r19,Y+8
 14512 5f42 4985      		ldd r20,Y+9
 14513 5f44 5A85      		ldd r21,Y+10
 14514 5f46 BC01      		movw r22,r24
 14515 5f48 CD01      		movw r24,r26
 14516 5f4a 0E94 0000 		call __gtsf2
 14517 5f4e 1816      		cp __zero_reg__,r24
 14518 5f50 04F0      		brlt .+2
 14519 5f52 00C0      		rjmp .L657
1407:lp_solve_5.5/lp_presolve.c ****       /* First do OF */
1408:lp_solve_5.5/lp_presolve.c ****       k = 0;
 14520               		.loc 2 1408 0
 14521 5f54 1CA2      		std Y+36,__zero_reg__
 14522 5f56 1BA2      		std Y+35,__zero_reg__
1409:lp_solve_5.5/lp_presolve.c ****       Value = my_chsign(is_chsign(lp, k), lp->orig_obj[colnr]);
 14523               		.loc 2 1409 0
 14524 5f58 2BA1      		ldd r18,Y+35
 14525 5f5a 3CA1      		ldd r19,Y+36
 14526 5f5c 8F85      		ldd r24,Y+15
 14527 5f5e 9889      		ldd r25,Y+16
 14528 5f60 B901      		movw r22,r18
 14529 5f62 0E94 0000 		call is_chsign
 14530 5f66 8823      		tst r24
 14531 5f68 01F0      		breq .L562
 14532               		.loc 2 1409 0 is_stmt 0 discriminator 1
 14533 5f6a 8F85      		ldd r24,Y+15
 14534 5f6c 9889      		ldd r25,Y+16
 14535 5f6e 845D      		subi r24,-44
 14536 5f70 9D4F      		sbci r25,-3
 14537 5f72 FC01      		movw r30,r24
 14538 5f74 2081      		ld r18,Z
 14539 5f76 3181      		ldd r19,Z+1
 14540 5f78 8FA1      		ldd r24,Y+39
 14541 5f7a 98A5      		ldd r25,Y+40
 14542 5f7c 880F      		lsl r24
 14543 5f7e 991F      		rol r25
 14544 5f80 880F      		lsl r24
 14545 5f82 991F      		rol r25
 14546 5f84 820F      		add r24,r18
 14547 5f86 931F      		adc r25,r19
 14548 5f88 FC01      		movw r30,r24
 14549 5f8a 8081      		ld r24,Z
 14550 5f8c 9181      		ldd r25,Z+1
 14551 5f8e A281      		ldd r26,Z+2
 14552 5f90 B381      		ldd r27,Z+3
 14553 5f92 20E0      		ldi r18,0
 14554 5f94 30E0      		ldi r19,0
 14555 5f96 A901      		movw r20,r18
 14556 5f98 BC01      		movw r22,r24
 14557 5f9a CD01      		movw r24,r26
 14558 5f9c 0E94 0000 		call __nesf2
 14559 5fa0 8823      		tst r24
 14560 5fa2 01F0      		breq .L562
 14561               		.loc 2 1409 0 discriminator 3
 14562 5fa4 8F85      		ldd r24,Y+15
 14563 5fa6 9889      		ldd r25,Y+16
 14564 5fa8 845D      		subi r24,-44
 14565 5faa 9D4F      		sbci r25,-3
 14566 5fac FC01      		movw r30,r24
 14567 5fae 2081      		ld r18,Z
 14568 5fb0 3181      		ldd r19,Z+1
 14569 5fb2 8FA1      		ldd r24,Y+39
 14570 5fb4 98A5      		ldd r25,Y+40
 14571 5fb6 880F      		lsl r24
 14572 5fb8 991F      		rol r25
 14573 5fba 880F      		lsl r24
 14574 5fbc 991F      		rol r25
 14575 5fbe 820F      		add r24,r18
 14576 5fc0 931F      		adc r25,r19
 14577 5fc2 FC01      		movw r30,r24
 14578 5fc4 8081      		ld r24,Z
 14579 5fc6 9181      		ldd r25,Z+1
 14580 5fc8 A281      		ldd r26,Z+2
 14581 5fca B381      		ldd r27,Z+3
 14582 5fcc B058      		subi r27,0x80
 14583 5fce 00C0      		rjmp .L564
 14584               	.L562:
 14585               		.loc 2 1409 0 discriminator 4
 14586 5fd0 8F85      		ldd r24,Y+15
 14587 5fd2 9889      		ldd r25,Y+16
 14588 5fd4 845D      		subi r24,-44
 14589 5fd6 9D4F      		sbci r25,-3
 14590 5fd8 FC01      		movw r30,r24
 14591 5fda 2081      		ld r18,Z
 14592 5fdc 3181      		ldd r19,Z+1
 14593 5fde 8FA1      		ldd r24,Y+39
 14594 5fe0 98A5      		ldd r25,Y+40
 14595 5fe2 880F      		lsl r24
 14596 5fe4 991F      		rol r25
 14597 5fe6 880F      		lsl r24
 14598 5fe8 991F      		rol r25
 14599 5fea 820F      		add r24,r18
 14600 5fec 931F      		adc r25,r19
 14601 5fee FC01      		movw r30,r24
 14602 5ff0 8081      		ld r24,Z
 14603 5ff2 9181      		ldd r25,Z+1
 14604 5ff4 A281      		ldd r26,Z+2
 14605 5ff6 B381      		ldd r27,Z+3
 14606               	.L564:
 14607               		.loc 2 1409 0 discriminator 6
 14608 5ff8 898F      		std Y+25,r24
 14609 5ffa 9A8F      		std Y+26,r25
 14610 5ffc AB8F      		std Y+27,r26
 14611 5ffe BC8F      		std Y+28,r27
1410:lp_solve_5.5/lp_presolve.c ****       if((Value > 0) && (psdata->rows->pluupper[k] < lp->infinite))
 14612               		.loc 2 1410 0 is_stmt 1 discriminator 6
 14613 6000 20E0      		ldi r18,0
 14614 6002 30E0      		ldi r19,0
 14615 6004 A901      		movw r20,r18
 14616 6006 698D      		ldd r22,Y+25
 14617 6008 7A8D      		ldd r23,Y+26
 14618 600a 8B8D      		ldd r24,Y+27
 14619 600c 9C8D      		ldd r25,Y+28
 14620 600e 0E94 0000 		call __gtsf2
 14621 6012 1816      		cp __zero_reg__,r24
 14622 6014 04F0      		brlt .+2
 14623 6016 00C0      		rjmp .L565
 14624               		.loc 2 1410 0 is_stmt 0 discriminator 1
 14625 6018 8DA1      		ldd r24,Y+37
 14626 601a 9EA1      		ldd r25,Y+38
 14627 601c FC01      		movw r30,r24
 14628 601e 8081      		ld r24,Z
 14629 6020 9181      		ldd r25,Z+1
 14630 6022 FC01      		movw r30,r24
 14631 6024 2289      		ldd r18,Z+18
 14632 6026 3389      		ldd r19,Z+19
 14633 6028 8BA1      		ldd r24,Y+35
 14634 602a 9CA1      		ldd r25,Y+36
 14635 602c 880F      		lsl r24
 14636 602e 991F      		rol r25
 14637 6030 880F      		lsl r24
 14638 6032 991F      		rol r25
 14639 6034 820F      		add r24,r18
 14640 6036 931F      		adc r25,r19
 14641 6038 FC01      		movw r30,r24
 14642 603a 8081      		ld r24,Z
 14643 603c 9181      		ldd r25,Z+1
 14644 603e A281      		ldd r26,Z+2
 14645 6040 B381      		ldd r27,Z+3
 14646 6042 2F85      		ldd r18,Y+15
 14647 6044 3889      		ldd r19,Y+16
 14648 6046 265F      		subi r18,-10
 14649 6048 3C4F      		sbci r19,-4
 14650 604a F901      		movw r30,r18
 14651 604c 2081      		ld r18,Z
 14652 604e 3181      		ldd r19,Z+1
 14653 6050 4281      		ldd r20,Z+2
 14654 6052 5381      		ldd r21,Z+3
 14655 6054 BC01      		movw r22,r24
 14656 6056 CD01      		movw r24,r26
 14657 6058 0E94 0000 		call __ltsf2
 14658 605c 8823      		tst r24
 14659 605e 04F0      		brlt .+2
 14660 6060 00C0      		rjmp .L565
1411:lp_solve_5.5/lp_presolve.c ****         psdata->rows->pluupper[k] += (UPnew-UPold)*Value;
 14661               		.loc 2 1411 0 is_stmt 1
 14662 6062 8DA1      		ldd r24,Y+37
 14663 6064 9EA1      		ldd r25,Y+38
 14664 6066 FC01      		movw r30,r24
 14665 6068 8081      		ld r24,Z
 14666 606a 9181      		ldd r25,Z+1
 14667 606c FC01      		movw r30,r24
 14668 606e 2289      		ldd r18,Z+18
 14669 6070 3389      		ldd r19,Z+19
 14670 6072 8BA1      		ldd r24,Y+35
 14671 6074 9CA1      		ldd r25,Y+36
 14672 6076 880F      		lsl r24
 14673 6078 991F      		rol r25
 14674 607a 880F      		lsl r24
 14675 607c 991F      		rol r25
 14676 607e 8901      		movw r16,r18
 14677 6080 080F      		add r16,r24
 14678 6082 191F      		adc r17,r25
 14679 6084 8DA1      		ldd r24,Y+37
 14680 6086 9EA1      		ldd r25,Y+38
 14681 6088 FC01      		movw r30,r24
 14682 608a 8081      		ld r24,Z
 14683 608c 9181      		ldd r25,Z+1
 14684 608e FC01      		movw r30,r24
 14685 6090 2289      		ldd r18,Z+18
 14686 6092 3389      		ldd r19,Z+19
 14687 6094 8BA1      		ldd r24,Y+35
 14688 6096 9CA1      		ldd r25,Y+36
 14689 6098 880F      		lsl r24
 14690 609a 991F      		rol r25
 14691 609c 880F      		lsl r24
 14692 609e 991F      		rol r25
 14693 60a0 820F      		add r24,r18
 14694 60a2 931F      		adc r25,r19
 14695 60a4 FC01      		movw r30,r24
 14696 60a6 C080      		ld r12,Z
 14697 60a8 D180      		ldd r13,Z+1
 14698 60aa E280      		ldd r14,Z+2
 14699 60ac F380      		ldd r15,Z+3
 14700 60ae 2F81      		ldd r18,Y+7
 14701 60b0 3885      		ldd r19,Y+8
 14702 60b2 4985      		ldd r20,Y+9
 14703 60b4 5A85      		ldd r21,Y+10
 14704 60b6 6DA5      		ldd r22,Y+45
 14705 60b8 7EA5      		ldd r23,Y+46
 14706 60ba 8FA5      		ldd r24,Y+47
 14707 60bc 98A9      		ldd r25,Y+48
 14708 60be 0E94 0000 		call __subsf3
 14709 60c2 DC01      		movw r26,r24
 14710 60c4 CB01      		movw r24,r22
 14711 60c6 298D      		ldd r18,Y+25
 14712 60c8 3A8D      		ldd r19,Y+26
 14713 60ca 4B8D      		ldd r20,Y+27
 14714 60cc 5C8D      		ldd r21,Y+28
 14715 60ce BC01      		movw r22,r24
 14716 60d0 CD01      		movw r24,r26
 14717 60d2 0E94 0000 		call __mulsf3
 14718 60d6 DC01      		movw r26,r24
 14719 60d8 CB01      		movw r24,r22
 14720 60da 9C01      		movw r18,r24
 14721 60dc AD01      		movw r20,r26
 14722 60de C701      		movw r24,r14
 14723 60e0 B601      		movw r22,r12
 14724 60e2 0E94 0000 		call __addsf3
 14725 60e6 DC01      		movw r26,r24
 14726 60e8 CB01      		movw r24,r22
 14727 60ea F801      		movw r30,r16
 14728 60ec 8083      		st Z,r24
 14729 60ee 9183      		std Z+1,r25
 14730 60f0 A283      		std Z+2,r26
 14731 60f2 B383      		std Z+3,r27
 14732 60f4 00C0      		rjmp .L568
 14733               	.L565:
1412:lp_solve_5.5/lp_presolve.c ****       else if((Value < 0) && (psdata->rows->negupper[k] < lp->infinite))
 14734               		.loc 2 1412 0
 14735 60f6 20E0      		ldi r18,0
 14736 60f8 30E0      		ldi r19,0
 14737 60fa A901      		movw r20,r18
 14738 60fc 698D      		ldd r22,Y+25
 14739 60fe 7A8D      		ldd r23,Y+26
 14740 6100 8B8D      		ldd r24,Y+27
 14741 6102 9C8D      		ldd r25,Y+28
 14742 6104 0E94 0000 		call __ltsf2
 14743 6108 8823      		tst r24
 14744 610a 04F0      		brlt .+2
 14745 610c 00C0      		rjmp .L568
 14746               		.loc 2 1412 0 is_stmt 0 discriminator 1
 14747 610e 8DA1      		ldd r24,Y+37
 14748 6110 9EA1      		ldd r25,Y+38
 14749 6112 FC01      		movw r30,r24
 14750 6114 8081      		ld r24,Z
 14751 6116 9181      		ldd r25,Z+1
 14752 6118 FC01      		movw r30,r24
 14753 611a 2489      		ldd r18,Z+20
 14754 611c 3589      		ldd r19,Z+21
 14755 611e 8BA1      		ldd r24,Y+35
 14756 6120 9CA1      		ldd r25,Y+36
 14757 6122 880F      		lsl r24
 14758 6124 991F      		rol r25
 14759 6126 880F      		lsl r24
 14760 6128 991F      		rol r25
 14761 612a 820F      		add r24,r18
 14762 612c 931F      		adc r25,r19
 14763 612e FC01      		movw r30,r24
 14764 6130 8081      		ld r24,Z
 14765 6132 9181      		ldd r25,Z+1
 14766 6134 A281      		ldd r26,Z+2
 14767 6136 B381      		ldd r27,Z+3
 14768 6138 2F85      		ldd r18,Y+15
 14769 613a 3889      		ldd r19,Y+16
 14770 613c 265F      		subi r18,-10
 14771 613e 3C4F      		sbci r19,-4
 14772 6140 F901      		movw r30,r18
 14773 6142 2081      		ld r18,Z
 14774 6144 3181      		ldd r19,Z+1
 14775 6146 4281      		ldd r20,Z+2
 14776 6148 5381      		ldd r21,Z+3
 14777 614a BC01      		movw r22,r24
 14778 614c CD01      		movw r24,r26
 14779 614e 0E94 0000 		call __ltsf2
 14780 6152 8823      		tst r24
 14781 6154 04F0      		brlt .+2
 14782 6156 00C0      		rjmp .L568
1413:lp_solve_5.5/lp_presolve.c ****         psdata->rows->negupper[k] += (LOnew-LOold)*Value;
 14783               		.loc 2 1413 0 is_stmt 1
 14784 6158 8DA1      		ldd r24,Y+37
 14785 615a 9EA1      		ldd r25,Y+38
 14786 615c FC01      		movw r30,r24
 14787 615e 8081      		ld r24,Z
 14788 6160 9181      		ldd r25,Z+1
 14789 6162 FC01      		movw r30,r24
 14790 6164 2489      		ldd r18,Z+20
 14791 6166 3589      		ldd r19,Z+21
 14792 6168 8BA1      		ldd r24,Y+35
 14793 616a 9CA1      		ldd r25,Y+36
 14794 616c 880F      		lsl r24
 14795 616e 991F      		rol r25
 14796 6170 880F      		lsl r24
 14797 6172 991F      		rol r25
 14798 6174 8901      		movw r16,r18
 14799 6176 080F      		add r16,r24
 14800 6178 191F      		adc r17,r25
 14801 617a 8DA1      		ldd r24,Y+37
 14802 617c 9EA1      		ldd r25,Y+38
 14803 617e FC01      		movw r30,r24
 14804 6180 8081      		ld r24,Z
 14805 6182 9181      		ldd r25,Z+1
 14806 6184 FC01      		movw r30,r24
 14807 6186 2489      		ldd r18,Z+20
 14808 6188 3589      		ldd r19,Z+21
 14809 618a 8BA1      		ldd r24,Y+35
 14810 618c 9CA1      		ldd r25,Y+36
 14811 618e 880F      		lsl r24
 14812 6190 991F      		rol r25
 14813 6192 880F      		lsl r24
 14814 6194 991F      		rol r25
 14815 6196 820F      		add r24,r18
 14816 6198 931F      		adc r25,r19
 14817 619a FC01      		movw r30,r24
 14818 619c C080      		ld r12,Z
 14819 619e D180      		ldd r13,Z+1
 14820 61a0 E280      		ldd r14,Z+2
 14821 61a2 F380      		ldd r15,Z+3
 14822 61a4 2D8D      		ldd r18,Y+29
 14823 61a6 3E8D      		ldd r19,Y+30
 14824 61a8 4F8D      		ldd r20,Y+31
 14825 61aa 58A1      		ldd r21,Y+32
 14826 61ac 69A5      		ldd r22,Y+41
 14827 61ae 7AA5      		ldd r23,Y+42
 14828 61b0 8BA5      		ldd r24,Y+43
 14829 61b2 9CA5      		ldd r25,Y+44
 14830 61b4 0E94 0000 		call __subsf3
 14831 61b8 DC01      		movw r26,r24
 14832 61ba CB01      		movw r24,r22
 14833 61bc 298D      		ldd r18,Y+25
 14834 61be 3A8D      		ldd r19,Y+26
 14835 61c0 4B8D      		ldd r20,Y+27
 14836 61c2 5C8D      		ldd r21,Y+28
 14837 61c4 BC01      		movw r22,r24
 14838 61c6 CD01      		movw r24,r26
 14839 61c8 0E94 0000 		call __mulsf3
 14840 61cc DC01      		movw r26,r24
 14841 61ce CB01      		movw r24,r22
 14842 61d0 9C01      		movw r18,r24
 14843 61d2 AD01      		movw r20,r26
 14844 61d4 C701      		movw r24,r14
 14845 61d6 B601      		movw r22,r12
 14846 61d8 0E94 0000 		call __addsf3
 14847 61dc DC01      		movw r26,r24
 14848 61de CB01      		movw r24,r22
 14849 61e0 F801      		movw r30,r16
 14850 61e2 8083      		st Z,r24
 14851 61e4 9183      		std Z+1,r25
 14852 61e6 A283      		std Z+2,r26
 14853 61e8 B383      		std Z+3,r27
 14854               	.L568:
1414:lp_solve_5.5/lp_presolve.c ****       psdata->rows->infcount[k] += deltainf;
 14855               		.loc 2 1414 0
 14856 61ea 8DA1      		ldd r24,Y+37
 14857 61ec 9EA1      		ldd r25,Y+38
 14858 61ee FC01      		movw r30,r24
 14859 61f0 8081      		ld r24,Z
 14860 61f2 9181      		ldd r25,Z+1
 14861 61f4 FC01      		movw r30,r24
 14862 61f6 2485      		ldd r18,Z+12
 14863 61f8 3585      		ldd r19,Z+13
 14864 61fa 8BA1      		ldd r24,Y+35
 14865 61fc 9CA1      		ldd r25,Y+36
 14866 61fe 880F      		lsl r24
 14867 6200 991F      		rol r25
 14868 6202 820F      		add r24,r18
 14869 6204 931F      		adc r25,r19
 14870 6206 2DA1      		ldd r18,Y+37
 14871 6208 3EA1      		ldd r19,Y+38
 14872 620a F901      		movw r30,r18
 14873 620c 2081      		ld r18,Z
 14874 620e 3181      		ldd r19,Z+1
 14875 6210 F901      		movw r30,r18
 14876 6212 4485      		ldd r20,Z+12
 14877 6214 5585      		ldd r21,Z+13
 14878 6216 2BA1      		ldd r18,Y+35
 14879 6218 3CA1      		ldd r19,Y+36
 14880 621a 220F      		lsl r18
 14881 621c 331F      		rol r19
 14882 621e 240F      		add r18,r20
 14883 6220 351F      		adc r19,r21
 14884 6222 F901      		movw r30,r18
 14885 6224 4081      		ld r20,Z
 14886 6226 5181      		ldd r21,Z+1
 14887 6228 2D81      		ldd r18,Y+5
 14888 622a 3E81      		ldd r19,Y+6
 14889 622c 240F      		add r18,r20
 14890 622e 351F      		adc r19,r21
 14891 6230 FC01      		movw r30,r24
 14892 6232 3183      		std Z+1,r19
 14893 6234 2083      		st Z,r18
1415:lp_solve_5.5/lp_presolve.c **** 
1416:lp_solve_5.5/lp_presolve.c ****       /* Then scan the constraint rows */
1417:lp_solve_5.5/lp_presolve.c ****       elmnr = mat->col_end[colnr-1];
 14894               		.loc 2 1417 0
 14895 6236 8F89      		ldd r24,Y+23
 14896 6238 988D      		ldd r25,Y+24
 14897 623a FC01      		movw r30,r24
 14898 623c 2289      		ldd r18,Z+18
 14899 623e 3389      		ldd r19,Z+19
 14900 6240 8FA1      		ldd r24,Y+39
 14901 6242 98A5      		ldd r25,Y+40
 14902 6244 8150      		subi r24,1
 14903 6246 9048      		sbci r25,-128
 14904 6248 880F      		lsl r24
 14905 624a 991F      		rol r25
 14906 624c 820F      		add r24,r18
 14907 624e 931F      		adc r25,r19
 14908 6250 FC01      		movw r30,r24
 14909 6252 8081      		ld r24,Z
 14910 6254 9181      		ldd r25,Z+1
 14911 6256 9A83      		std Y+2,r25
 14912 6258 8983      		std Y+1,r24
1418:lp_solve_5.5/lp_presolve.c ****       elmend = mat->col_end[colnr];
 14913               		.loc 2 1418 0
 14914 625a 8F89      		ldd r24,Y+23
 14915 625c 988D      		ldd r25,Y+24
 14916 625e FC01      		movw r30,r24
 14917 6260 2289      		ldd r18,Z+18
 14918 6262 3389      		ldd r19,Z+19
 14919 6264 8FA1      		ldd r24,Y+39
 14920 6266 98A5      		ldd r25,Y+40
 14921 6268 880F      		lsl r24
 14922 626a 991F      		rol r25
 14923 626c 820F      		add r24,r18
 14924 626e 931F      		adc r25,r19
 14925 6270 FC01      		movw r30,r24
 14926 6272 8081      		ld r24,Z
 14927 6274 9181      		ldd r25,Z+1
 14928 6276 9AA3      		std Y+34,r25
 14929 6278 89A3      		std Y+33,r24
1419:lp_solve_5.5/lp_presolve.c ****       rownr = &COL_MAT_ROWNR(elmnr);
 14930               		.loc 2 1419 0
 14931 627a 8F89      		ldd r24,Y+23
 14932 627c 988D      		ldd r25,Y+24
 14933 627e FC01      		movw r30,r24
 14934 6280 2685      		ldd r18,Z+14
 14935 6282 3785      		ldd r19,Z+15
 14936 6284 8981      		ldd r24,Y+1
 14937 6286 9A81      		ldd r25,Y+2
 14938 6288 880F      		lsl r24
 14939 628a 991F      		rol r25
 14940 628c 820F      		add r24,r18
 14941 628e 931F      		adc r25,r19
 14942 6290 9E87      		std Y+14,r25
 14943 6292 8D87      		std Y+13,r24
1420:lp_solve_5.5/lp_presolve.c ****       value = &COL_MAT_VALUE(elmnr);
 14944               		.loc 2 1420 0
 14945 6294 8F89      		ldd r24,Y+23
 14946 6296 988D      		ldd r25,Y+24
 14947 6298 FC01      		movw r30,r24
 14948 629a 2089      		ldd r18,Z+16
 14949 629c 3189      		ldd r19,Z+17
 14950 629e 8981      		ldd r24,Y+1
 14951 62a0 9A81      		ldd r25,Y+2
 14952 62a2 880F      		lsl r24
 14953 62a4 991F      		rol r25
 14954 62a6 880F      		lsl r24
 14955 62a8 991F      		rol r25
 14956 62aa 820F      		add r24,r18
 14957 62ac 931F      		adc r25,r19
 14958 62ae 9C87      		std Y+12,r25
 14959 62b0 8B87      		std Y+11,r24
1421:lp_solve_5.5/lp_presolve.c ****       for(; elmnr < elmend;
 14960               		.loc 2 1421 0
 14961 62b2 00C0      		rjmp .L571
 14962               	.L582:
1422:lp_solve_5.5/lp_presolve.c ****           elmnr++, rownr += matRowColStep, value += matValueStep) {
1423:lp_solve_5.5/lp_presolve.c ****         k = *rownr;
 14963               		.loc 2 1423 0
 14964 62b4 8D85      		ldd r24,Y+13
 14965 62b6 9E85      		ldd r25,Y+14
 14966 62b8 FC01      		movw r30,r24
 14967 62ba 8081      		ld r24,Z
 14968 62bc 9181      		ldd r25,Z+1
 14969 62be 9CA3      		std Y+36,r25
 14970 62c0 8BA3      		std Y+35,r24
1424:lp_solve_5.5/lp_presolve.c ****         if(!isActiveLink(psdata->rows->varmap, k))
 14971               		.loc 2 1424 0
 14972 62c2 8DA1      		ldd r24,Y+37
 14973 62c4 9EA1      		ldd r25,Y+38
 14974 62c6 FC01      		movw r30,r24
 14975 62c8 8081      		ld r24,Z
 14976 62ca 9181      		ldd r25,Z+1
 14977 62cc FC01      		movw r30,r24
 14978 62ce 8081      		ld r24,Z
 14979 62d0 9181      		ldd r25,Z+1
 14980 62d2 2BA1      		ldd r18,Y+35
 14981 62d4 3CA1      		ldd r19,Y+36
 14982 62d6 B901      		movw r22,r18
 14983 62d8 0E94 0000 		call isActiveLink
 14984 62dc 8823      		tst r24
 14985 62de 01F4      		brne .+2
 14986 62e0 00C0      		rjmp .L660
1425:lp_solve_5.5/lp_presolve.c ****           continue;
1426:lp_solve_5.5/lp_presolve.c ****         Value = my_chsign(is_chsign(lp, k), *value);
 14987               		.loc 2 1426 0
 14988 62e2 2BA1      		ldd r18,Y+35
 14989 62e4 3CA1      		ldd r19,Y+36
 14990 62e6 8F85      		ldd r24,Y+15
 14991 62e8 9889      		ldd r25,Y+16
 14992 62ea B901      		movw r22,r18
 14993 62ec 0E94 0000 		call is_chsign
 14994 62f0 8823      		tst r24
 14995 62f2 01F0      		breq .L574
 14996               		.loc 2 1426 0 is_stmt 0 discriminator 1
 14997 62f4 8B85      		ldd r24,Y+11
 14998 62f6 9C85      		ldd r25,Y+12
 14999 62f8 FC01      		movw r30,r24
 15000 62fa 8081      		ld r24,Z
 15001 62fc 9181      		ldd r25,Z+1
 15002 62fe A281      		ldd r26,Z+2
 15003 6300 B381      		ldd r27,Z+3
 15004 6302 20E0      		ldi r18,0
 15005 6304 30E0      		ldi r19,0
 15006 6306 A901      		movw r20,r18
 15007 6308 BC01      		movw r22,r24
 15008 630a CD01      		movw r24,r26
 15009 630c 0E94 0000 		call __nesf2
 15010 6310 8823      		tst r24
 15011 6312 01F0      		breq .L574
 15012               		.loc 2 1426 0 discriminator 3
 15013 6314 8B85      		ldd r24,Y+11
 15014 6316 9C85      		ldd r25,Y+12
 15015 6318 FC01      		movw r30,r24
 15016 631a 8081      		ld r24,Z
 15017 631c 9181      		ldd r25,Z+1
 15018 631e A281      		ldd r26,Z+2
 15019 6320 B381      		ldd r27,Z+3
 15020 6322 B058      		subi r27,0x80
 15021 6324 00C0      		rjmp .L576
 15022               	.L574:
 15023               		.loc 2 1426 0 discriminator 4
 15024 6326 8B85      		ldd r24,Y+11
 15025 6328 9C85      		ldd r25,Y+12
 15026 632a FC01      		movw r30,r24
 15027 632c 8081      		ld r24,Z
 15028 632e 9181      		ldd r25,Z+1
 15029 6330 A281      		ldd r26,Z+2
 15030 6332 B381      		ldd r27,Z+3
 15031               	.L576:
 15032               		.loc 2 1426 0 discriminator 6
 15033 6334 898F      		std Y+25,r24
 15034 6336 9A8F      		std Y+26,r25
 15035 6338 AB8F      		std Y+27,r26
 15036 633a BC8F      		std Y+28,r27
1427:lp_solve_5.5/lp_presolve.c ****         if((Value > 0) && (psdata->rows->pluupper[k] < lp->infinite))
 15037               		.loc 2 1427 0 is_stmt 1 discriminator 6
 15038 633c 20E0      		ldi r18,0
 15039 633e 30E0      		ldi r19,0
 15040 6340 A901      		movw r20,r18
 15041 6342 698D      		ldd r22,Y+25
 15042 6344 7A8D      		ldd r23,Y+26
 15043 6346 8B8D      		ldd r24,Y+27
 15044 6348 9C8D      		ldd r25,Y+28
 15045 634a 0E94 0000 		call __gtsf2
 15046 634e 1816      		cp __zero_reg__,r24
 15047 6350 04F0      		brlt .+2
 15048 6352 00C0      		rjmp .L577
 15049               		.loc 2 1427 0 is_stmt 0 discriminator 1
 15050 6354 8DA1      		ldd r24,Y+37
 15051 6356 9EA1      		ldd r25,Y+38
 15052 6358 FC01      		movw r30,r24
 15053 635a 8081      		ld r24,Z
 15054 635c 9181      		ldd r25,Z+1
 15055 635e FC01      		movw r30,r24
 15056 6360 2289      		ldd r18,Z+18
 15057 6362 3389      		ldd r19,Z+19
 15058 6364 8BA1      		ldd r24,Y+35
 15059 6366 9CA1      		ldd r25,Y+36
 15060 6368 880F      		lsl r24
 15061 636a 991F      		rol r25
 15062 636c 880F      		lsl r24
 15063 636e 991F      		rol r25
 15064 6370 820F      		add r24,r18
 15065 6372 931F      		adc r25,r19
 15066 6374 FC01      		movw r30,r24
 15067 6376 8081      		ld r24,Z
 15068 6378 9181      		ldd r25,Z+1
 15069 637a A281      		ldd r26,Z+2
 15070 637c B381      		ldd r27,Z+3
 15071 637e 2F85      		ldd r18,Y+15
 15072 6380 3889      		ldd r19,Y+16
 15073 6382 265F      		subi r18,-10
 15074 6384 3C4F      		sbci r19,-4
 15075 6386 F901      		movw r30,r18
 15076 6388 2081      		ld r18,Z
 15077 638a 3181      		ldd r19,Z+1
 15078 638c 4281      		ldd r20,Z+2
 15079 638e 5381      		ldd r21,Z+3
 15080 6390 BC01      		movw r22,r24
 15081 6392 CD01      		movw r24,r26
 15082 6394 0E94 0000 		call __ltsf2
 15083 6398 8823      		tst r24
 15084 639a 04F0      		brlt .+2
 15085 639c 00C0      		rjmp .L577
1428:lp_solve_5.5/lp_presolve.c ****           psdata->rows->pluupper[k] += (UPnew-UPold)*Value;
 15086               		.loc 2 1428 0 is_stmt 1
 15087 639e 8DA1      		ldd r24,Y+37
 15088 63a0 9EA1      		ldd r25,Y+38
 15089 63a2 FC01      		movw r30,r24
 15090 63a4 8081      		ld r24,Z
 15091 63a6 9181      		ldd r25,Z+1
 15092 63a8 FC01      		movw r30,r24
 15093 63aa 2289      		ldd r18,Z+18
 15094 63ac 3389      		ldd r19,Z+19
 15095 63ae 8BA1      		ldd r24,Y+35
 15096 63b0 9CA1      		ldd r25,Y+36
 15097 63b2 880F      		lsl r24
 15098 63b4 991F      		rol r25
 15099 63b6 880F      		lsl r24
 15100 63b8 991F      		rol r25
 15101 63ba 8901      		movw r16,r18
 15102 63bc 080F      		add r16,r24
 15103 63be 191F      		adc r17,r25
 15104 63c0 8DA1      		ldd r24,Y+37
 15105 63c2 9EA1      		ldd r25,Y+38
 15106 63c4 FC01      		movw r30,r24
 15107 63c6 8081      		ld r24,Z
 15108 63c8 9181      		ldd r25,Z+1
 15109 63ca FC01      		movw r30,r24
 15110 63cc 2289      		ldd r18,Z+18
 15111 63ce 3389      		ldd r19,Z+19
 15112 63d0 8BA1      		ldd r24,Y+35
 15113 63d2 9CA1      		ldd r25,Y+36
 15114 63d4 880F      		lsl r24
 15115 63d6 991F      		rol r25
 15116 63d8 880F      		lsl r24
 15117 63da 991F      		rol r25
 15118 63dc 820F      		add r24,r18
 15119 63de 931F      		adc r25,r19
 15120 63e0 FC01      		movw r30,r24
 15121 63e2 C080      		ld r12,Z
 15122 63e4 D180      		ldd r13,Z+1
 15123 63e6 E280      		ldd r14,Z+2
 15124 63e8 F380      		ldd r15,Z+3
 15125 63ea 2F81      		ldd r18,Y+7
 15126 63ec 3885      		ldd r19,Y+8
 15127 63ee 4985      		ldd r20,Y+9
 15128 63f0 5A85      		ldd r21,Y+10
 15129 63f2 6DA5      		ldd r22,Y+45
 15130 63f4 7EA5      		ldd r23,Y+46
 15131 63f6 8FA5      		ldd r24,Y+47
 15132 63f8 98A9      		ldd r25,Y+48
 15133 63fa 0E94 0000 		call __subsf3
 15134 63fe DC01      		movw r26,r24
 15135 6400 CB01      		movw r24,r22
 15136 6402 298D      		ldd r18,Y+25
 15137 6404 3A8D      		ldd r19,Y+26
 15138 6406 4B8D      		ldd r20,Y+27
 15139 6408 5C8D      		ldd r21,Y+28
 15140 640a BC01      		movw r22,r24
 15141 640c CD01      		movw r24,r26
 15142 640e 0E94 0000 		call __mulsf3
 15143 6412 DC01      		movw r26,r24
 15144 6414 CB01      		movw r24,r22
 15145 6416 9C01      		movw r18,r24
 15146 6418 AD01      		movw r20,r26
 15147 641a C701      		movw r24,r14
 15148 641c B601      		movw r22,r12
 15149 641e 0E94 0000 		call __addsf3
 15150 6422 DC01      		movw r26,r24
 15151 6424 CB01      		movw r24,r22
 15152 6426 F801      		movw r30,r16
 15153 6428 8083      		st Z,r24
 15154 642a 9183      		std Z+1,r25
 15155 642c A283      		std Z+2,r26
 15156 642e B383      		std Z+3,r27
 15157 6430 00C0      		rjmp .L573
 15158               	.L577:
1429:lp_solve_5.5/lp_presolve.c ****         else if((Value < 0) && (psdata->rows->negupper[k] < lp->infinite))
 15159               		.loc 2 1429 0
 15160 6432 20E0      		ldi r18,0
 15161 6434 30E0      		ldi r19,0
 15162 6436 A901      		movw r20,r18
 15163 6438 698D      		ldd r22,Y+25
 15164 643a 7A8D      		ldd r23,Y+26
 15165 643c 8B8D      		ldd r24,Y+27
 15166 643e 9C8D      		ldd r25,Y+28
 15167 6440 0E94 0000 		call __ltsf2
 15168 6444 8823      		tst r24
 15169 6446 04F0      		brlt .+2
 15170 6448 00C0      		rjmp .L573
 15171               		.loc 2 1429 0 is_stmt 0 discriminator 1
 15172 644a 8DA1      		ldd r24,Y+37
 15173 644c 9EA1      		ldd r25,Y+38
 15174 644e FC01      		movw r30,r24
 15175 6450 8081      		ld r24,Z
 15176 6452 9181      		ldd r25,Z+1
 15177 6454 FC01      		movw r30,r24
 15178 6456 2489      		ldd r18,Z+20
 15179 6458 3589      		ldd r19,Z+21
 15180 645a 8BA1      		ldd r24,Y+35
 15181 645c 9CA1      		ldd r25,Y+36
 15182 645e 880F      		lsl r24
 15183 6460 991F      		rol r25
 15184 6462 880F      		lsl r24
 15185 6464 991F      		rol r25
 15186 6466 820F      		add r24,r18
 15187 6468 931F      		adc r25,r19
 15188 646a FC01      		movw r30,r24
 15189 646c 8081      		ld r24,Z
 15190 646e 9181      		ldd r25,Z+1
 15191 6470 A281      		ldd r26,Z+2
 15192 6472 B381      		ldd r27,Z+3
 15193 6474 2F85      		ldd r18,Y+15
 15194 6476 3889      		ldd r19,Y+16
 15195 6478 265F      		subi r18,-10
 15196 647a 3C4F      		sbci r19,-4
 15197 647c F901      		movw r30,r18
 15198 647e 2081      		ld r18,Z
 15199 6480 3181      		ldd r19,Z+1
 15200 6482 4281      		ldd r20,Z+2
 15201 6484 5381      		ldd r21,Z+3
 15202 6486 BC01      		movw r22,r24
 15203 6488 CD01      		movw r24,r26
 15204 648a 0E94 0000 		call __ltsf2
 15205 648e 8823      		tst r24
 15206 6490 04F0      		brlt .+2
 15207 6492 00C0      		rjmp .L573
1430:lp_solve_5.5/lp_presolve.c ****           psdata->rows->negupper[k] += (LOnew-LOold)*Value;
 15208               		.loc 2 1430 0 is_stmt 1
 15209 6494 8DA1      		ldd r24,Y+37
 15210 6496 9EA1      		ldd r25,Y+38
 15211 6498 FC01      		movw r30,r24
 15212 649a 8081      		ld r24,Z
 15213 649c 9181      		ldd r25,Z+1
 15214 649e FC01      		movw r30,r24
 15215 64a0 2489      		ldd r18,Z+20
 15216 64a2 3589      		ldd r19,Z+21
 15217 64a4 8BA1      		ldd r24,Y+35
 15218 64a6 9CA1      		ldd r25,Y+36
 15219 64a8 880F      		lsl r24
 15220 64aa 991F      		rol r25
 15221 64ac 880F      		lsl r24
 15222 64ae 991F      		rol r25
 15223 64b0 8901      		movw r16,r18
 15224 64b2 080F      		add r16,r24
 15225 64b4 191F      		adc r17,r25
 15226 64b6 8DA1      		ldd r24,Y+37
 15227 64b8 9EA1      		ldd r25,Y+38
 15228 64ba FC01      		movw r30,r24
 15229 64bc 8081      		ld r24,Z
 15230 64be 9181      		ldd r25,Z+1
 15231 64c0 FC01      		movw r30,r24
 15232 64c2 2489      		ldd r18,Z+20
 15233 64c4 3589      		ldd r19,Z+21
 15234 64c6 8BA1      		ldd r24,Y+35
 15235 64c8 9CA1      		ldd r25,Y+36
 15236 64ca 880F      		lsl r24
 15237 64cc 991F      		rol r25
 15238 64ce 880F      		lsl r24
 15239 64d0 991F      		rol r25
 15240 64d2 820F      		add r24,r18
 15241 64d4 931F      		adc r25,r19
 15242 64d6 FC01      		movw r30,r24
 15243 64d8 C080      		ld r12,Z
 15244 64da D180      		ldd r13,Z+1
 15245 64dc E280      		ldd r14,Z+2
 15246 64de F380      		ldd r15,Z+3
 15247 64e0 2D8D      		ldd r18,Y+29
 15248 64e2 3E8D      		ldd r19,Y+30
 15249 64e4 4F8D      		ldd r20,Y+31
 15250 64e6 58A1      		ldd r21,Y+32
 15251 64e8 69A5      		ldd r22,Y+41
 15252 64ea 7AA5      		ldd r23,Y+42
 15253 64ec 8BA5      		ldd r24,Y+43
 15254 64ee 9CA5      		ldd r25,Y+44
 15255 64f0 0E94 0000 		call __subsf3
 15256 64f4 DC01      		movw r26,r24
 15257 64f6 CB01      		movw r24,r22
 15258 64f8 298D      		ldd r18,Y+25
 15259 64fa 3A8D      		ldd r19,Y+26
 15260 64fc 4B8D      		ldd r20,Y+27
 15261 64fe 5C8D      		ldd r21,Y+28
 15262 6500 BC01      		movw r22,r24
 15263 6502 CD01      		movw r24,r26
 15264 6504 0E94 0000 		call __mulsf3
 15265 6508 DC01      		movw r26,r24
 15266 650a CB01      		movw r24,r22
 15267 650c 9C01      		movw r18,r24
 15268 650e AD01      		movw r20,r26
 15269 6510 C701      		movw r24,r14
 15270 6512 B601      		movw r22,r12
 15271 6514 0E94 0000 		call __addsf3
 15272 6518 DC01      		movw r26,r24
 15273 651a CB01      		movw r24,r22
 15274 651c F801      		movw r30,r16
 15275 651e 8083      		st Z,r24
 15276 6520 9183      		std Z+1,r25
 15277 6522 A283      		std Z+2,r26
 15278 6524 B383      		std Z+3,r27
 15279 6526 00C0      		rjmp .L573
 15280               	.L660:
1425:lp_solve_5.5/lp_presolve.c ****         Value = my_chsign(is_chsign(lp, k), *value);
 15281               		.loc 2 1425 0
 15282 6528 0000      		nop
 15283               	.L573:
1422:lp_solve_5.5/lp_presolve.c ****         k = *rownr;
 15284               		.loc 2 1422 0
 15285 652a 8981      		ldd r24,Y+1
 15286 652c 9A81      		ldd r25,Y+2
 15287 652e 0196      		adiw r24,1
 15288 6530 9A83      		std Y+2,r25
 15289 6532 8983      		std Y+1,r24
 15290 6534 8D85      		ldd r24,Y+13
 15291 6536 9E85      		ldd r25,Y+14
 15292 6538 0296      		adiw r24,2
 15293 653a 9E87      		std Y+14,r25
 15294 653c 8D87      		std Y+13,r24
 15295 653e 8B85      		ldd r24,Y+11
 15296 6540 9C85      		ldd r25,Y+12
 15297 6542 0496      		adiw r24,4
 15298 6544 9C87      		std Y+12,r25
 15299 6546 8B87      		std Y+11,r24
 15300               	.L571:
1421:lp_solve_5.5/lp_presolve.c ****           elmnr++, rownr += matRowColStep, value += matValueStep) {
 15301               		.loc 2 1421 0
 15302 6548 2981      		ldd r18,Y+1
 15303 654a 3A81      		ldd r19,Y+2
 15304 654c 89A1      		ldd r24,Y+33
 15305 654e 9AA1      		ldd r25,Y+34
 15306 6550 2817      		cp r18,r24
 15307 6552 3907      		cpc r19,r25
 15308 6554 04F4      		brge .+2
 15309 6556 00C0      		rjmp .L582
 15310 6558 00C0      		rjmp .L583
 15311               	.L657:
1431:lp_solve_5.5/lp_presolve.c ****       }
1432:lp_solve_5.5/lp_presolve.c ****     }
1433:lp_solve_5.5/lp_presolve.c ****     else
1434:lp_solve_5.5/lp_presolve.c ****       psdata->forceupdate = TRUE;
 15312               		.loc 2 1434 0
 15313 655a 8DA1      		ldd r24,Y+37
 15314 655c 9EA1      		ldd r25,Y+38
 15315 655e 21E0      		ldi r18,lo8(1)
 15316 6560 FC01      		movw r30,r24
 15317 6562 24A3      		std Z+36,r18
 15318               	.L583:
1435:lp_solve_5.5/lp_presolve.c ****     if(UPnew < UPold) {
 15319               		.loc 2 1435 0
 15320 6564 2F81      		ldd r18,Y+7
 15321 6566 3885      		ldd r19,Y+8
 15322 6568 4985      		ldd r20,Y+9
 15323 656a 5A85      		ldd r21,Y+10
 15324 656c 6DA5      		ldd r22,Y+45
 15325 656e 7EA5      		ldd r23,Y+46
 15326 6570 8FA5      		ldd r24,Y+47
 15327 6572 98A9      		ldd r25,Y+48
 15328 6574 0E94 0000 		call __ltsf2
 15329 6578 8823      		tst r24
 15330 657a 04F4      		brge .L556
1436:lp_solve_5.5/lp_presolve.c ****       UPold = UPnew;
 15331               		.loc 2 1436 0
 15332 657c 8DA5      		ldd r24,Y+45
 15333 657e 9EA5      		ldd r25,Y+46
 15334 6580 AFA5      		ldd r26,Y+47
 15335 6582 B8A9      		ldd r27,Y+48
 15336 6584 8F83      		std Y+7,r24
 15337 6586 9887      		std Y+8,r25
 15338 6588 A987      		std Y+9,r26
 15339 658a BA87      		std Y+10,r27
1437:lp_solve_5.5/lp_presolve.c ****       newcount++;
 15340               		.loc 2 1437 0
 15341 658c 8B81      		ldd r24,Y+3
 15342 658e 9C81      		ldd r25,Y+4
 15343 6590 0196      		adiw r24,1
 15344 6592 9C83      		std Y+4,r25
 15345 6594 8B83      		std Y+3,r24
 15346               	.L556:
1438:lp_solve_5.5/lp_presolve.c ****     }
1439:lp_solve_5.5/lp_presolve.c ****   }
1440:lp_solve_5.5/lp_presolve.c **** 
1441:lp_solve_5.5/lp_presolve.c ****   /* Look for opportunity to tighten lower variable bound */
1442:lp_solve_5.5/lp_presolve.c ****   if((LOnew > -lp->infinite) && (LOnew-margin > LOold)) {
 15347               		.loc 2 1442 0
 15348 6596 8F85      		ldd r24,Y+15
 15349 6598 9889      		ldd r25,Y+16
 15350 659a 865F      		subi r24,-10
 15351 659c 9C4F      		sbci r25,-4
 15352 659e FC01      		movw r30,r24
 15353 65a0 8081      		ld r24,Z
 15354 65a2 9181      		ldd r25,Z+1
 15355 65a4 A281      		ldd r26,Z+2
 15356 65a6 B381      		ldd r27,Z+3
 15357 65a8 B058      		subi r27,0x80
 15358 65aa 29A5      		ldd r18,Y+41
 15359 65ac 3AA5      		ldd r19,Y+42
 15360 65ae 4BA5      		ldd r20,Y+43
 15361 65b0 5CA5      		ldd r21,Y+44
 15362 65b2 BC01      		movw r22,r24
 15363 65b4 CD01      		movw r24,r26
 15364 65b6 0E94 0000 		call __ltsf2
 15365 65ba 8823      		tst r24
 15366 65bc 04F0      		brlt .+2
 15367 65be 00C0      		rjmp .L585
 15368               		.loc 2 1442 0 is_stmt 0 discriminator 1
 15369 65c0 2B89      		ldd r18,Y+19
 15370 65c2 3C89      		ldd r19,Y+20
 15371 65c4 4D89      		ldd r20,Y+21
 15372 65c6 5E89      		ldd r21,Y+22
 15373 65c8 69A5      		ldd r22,Y+41
 15374 65ca 7AA5      		ldd r23,Y+42
 15375 65cc 8BA5      		ldd r24,Y+43
 15376 65ce 9CA5      		ldd r25,Y+44
 15377 65d0 0E94 0000 		call __subsf3
 15378 65d4 DC01      		movw r26,r24
 15379 65d6 CB01      		movw r24,r22
 15380 65d8 2D8D      		ldd r18,Y+29
 15381 65da 3E8D      		ldd r19,Y+30
 15382 65dc 4F8D      		ldd r20,Y+31
 15383 65de 58A1      		ldd r21,Y+32
 15384 65e0 BC01      		movw r22,r24
 15385 65e2 CD01      		movw r24,r26
 15386 65e4 0E94 0000 		call __gtsf2
 15387 65e8 1816      		cp __zero_reg__,r24
 15388 65ea 04F0      		brlt .+2
 15389 65ec 00C0      		rjmp .L585
1443:lp_solve_5.5/lp_presolve.c ****     if(is_int(lp, colnr))
 15390               		.loc 2 1443 0 is_stmt 1
 15391 65ee 2FA1      		ldd r18,Y+39
 15392 65f0 38A5      		ldd r19,Y+40
 15393 65f2 8F85      		ldd r24,Y+15
 15394 65f4 9889      		ldd r25,Y+16
 15395 65f6 B901      		movw r22,r18
 15396 65f8 0E94 0000 		call is_int
 15397 65fc 8823      		tst r24
 15398 65fe 01F0      		breq .L588
1444:lp_solve_5.5/lp_presolve.c ****        LOnew = ceil(LOnew-margin);
 15399               		.loc 2 1444 0
 15400 6600 2B89      		ldd r18,Y+19
 15401 6602 3C89      		ldd r19,Y+20
 15402 6604 4D89      		ldd r20,Y+21
 15403 6606 5E89      		ldd r21,Y+22
 15404 6608 69A5      		ldd r22,Y+41
 15405 660a 7AA5      		ldd r23,Y+42
 15406 660c 8BA5      		ldd r24,Y+43
 15407 660e 9CA5      		ldd r25,Y+44
 15408 6610 0E94 0000 		call __subsf3
 15409 6614 DC01      		movw r26,r24
 15410 6616 CB01      		movw r24,r22
 15411 6618 BC01      		movw r22,r24
 15412 661a CD01      		movw r24,r26
 15413 661c 0E94 0000 		call ceil
 15414 6620 DC01      		movw r26,r24
 15415 6622 CB01      		movw r24,r22
 15416 6624 89A7      		std Y+41,r24
 15417 6626 9AA7      		std Y+42,r25
 15418 6628 ABA7      		std Y+43,r26
 15419 662a BCA7      		std Y+44,r27
 15420               	.L588:
1445:lp_solve_5.5/lp_presolve.c ****     if(LOold > -lp->infinite) {
 15421               		.loc 2 1445 0
 15422 662c 8F85      		ldd r24,Y+15
 15423 662e 9889      		ldd r25,Y+16
 15424 6630 865F      		subi r24,-10
 15425 6632 9C4F      		sbci r25,-4
 15426 6634 FC01      		movw r30,r24
 15427 6636 8081      		ld r24,Z
 15428 6638 9181      		ldd r25,Z+1
 15429 663a A281      		ldd r26,Z+2
 15430 663c B381      		ldd r27,Z+3
 15431 663e B058      		subi r27,0x80
 15432 6640 2D8D      		ldd r18,Y+29
 15433 6642 3E8D      		ldd r19,Y+30
 15434 6644 4F8D      		ldd r20,Y+31
 15435 6646 58A1      		ldd r21,Y+32
 15436 6648 BC01      		movw r22,r24
 15437 664a CD01      		movw r24,r26
 15438 664c 0E94 0000 		call __ltsf2
 15439 6650 8823      		tst r24
 15440 6652 04F0      		brlt .+2
 15441 6654 00C0      		rjmp .L658
1446:lp_solve_5.5/lp_presolve.c ****       /* First do OF */
1447:lp_solve_5.5/lp_presolve.c ****       k = 0;
 15442               		.loc 2 1447 0
 15443 6656 1CA2      		std Y+36,__zero_reg__
 15444 6658 1BA2      		std Y+35,__zero_reg__
1448:lp_solve_5.5/lp_presolve.c ****       Value = my_chsign(is_chsign(lp, k), lp->orig_obj[colnr]);
 15445               		.loc 2 1448 0
 15446 665a 2BA1      		ldd r18,Y+35
 15447 665c 3CA1      		ldd r19,Y+36
 15448 665e 8F85      		ldd r24,Y+15
 15449 6660 9889      		ldd r25,Y+16
 15450 6662 B901      		movw r22,r18
 15451 6664 0E94 0000 		call is_chsign
 15452 6668 8823      		tst r24
 15453 666a 01F0      		breq .L591
 15454               		.loc 2 1448 0 is_stmt 0 discriminator 1
 15455 666c 8F85      		ldd r24,Y+15
 15456 666e 9889      		ldd r25,Y+16
 15457 6670 845D      		subi r24,-44
 15458 6672 9D4F      		sbci r25,-3
 15459 6674 FC01      		movw r30,r24
 15460 6676 2081      		ld r18,Z
 15461 6678 3181      		ldd r19,Z+1
 15462 667a 8FA1      		ldd r24,Y+39
 15463 667c 98A5      		ldd r25,Y+40
 15464 667e 880F      		lsl r24
 15465 6680 991F      		rol r25
 15466 6682 880F      		lsl r24
 15467 6684 991F      		rol r25
 15468 6686 820F      		add r24,r18
 15469 6688 931F      		adc r25,r19
 15470 668a FC01      		movw r30,r24
 15471 668c 8081      		ld r24,Z
 15472 668e 9181      		ldd r25,Z+1
 15473 6690 A281      		ldd r26,Z+2
 15474 6692 B381      		ldd r27,Z+3
 15475 6694 20E0      		ldi r18,0
 15476 6696 30E0      		ldi r19,0
 15477 6698 A901      		movw r20,r18
 15478 669a BC01      		movw r22,r24
 15479 669c CD01      		movw r24,r26
 15480 669e 0E94 0000 		call __nesf2
 15481 66a2 8823      		tst r24
 15482 66a4 01F0      		breq .L591
 15483               		.loc 2 1448 0 discriminator 3
 15484 66a6 8F85      		ldd r24,Y+15
 15485 66a8 9889      		ldd r25,Y+16
 15486 66aa 845D      		subi r24,-44
 15487 66ac 9D4F      		sbci r25,-3
 15488 66ae FC01      		movw r30,r24
 15489 66b0 2081      		ld r18,Z
 15490 66b2 3181      		ldd r19,Z+1
 15491 66b4 8FA1      		ldd r24,Y+39
 15492 66b6 98A5      		ldd r25,Y+40
 15493 66b8 880F      		lsl r24
 15494 66ba 991F      		rol r25
 15495 66bc 880F      		lsl r24
 15496 66be 991F      		rol r25
 15497 66c0 820F      		add r24,r18
 15498 66c2 931F      		adc r25,r19
 15499 66c4 FC01      		movw r30,r24
 15500 66c6 8081      		ld r24,Z
 15501 66c8 9181      		ldd r25,Z+1
 15502 66ca A281      		ldd r26,Z+2
 15503 66cc B381      		ldd r27,Z+3
 15504 66ce B058      		subi r27,0x80
 15505 66d0 00C0      		rjmp .L593
 15506               	.L591:
 15507               		.loc 2 1448 0 discriminator 4
 15508 66d2 8F85      		ldd r24,Y+15
 15509 66d4 9889      		ldd r25,Y+16
 15510 66d6 845D      		subi r24,-44
 15511 66d8 9D4F      		sbci r25,-3
 15512 66da FC01      		movw r30,r24
 15513 66dc 2081      		ld r18,Z
 15514 66de 3181      		ldd r19,Z+1
 15515 66e0 8FA1      		ldd r24,Y+39
 15516 66e2 98A5      		ldd r25,Y+40
 15517 66e4 880F      		lsl r24
 15518 66e6 991F      		rol r25
 15519 66e8 880F      		lsl r24
 15520 66ea 991F      		rol r25
 15521 66ec 820F      		add r24,r18
 15522 66ee 931F      		adc r25,r19
 15523 66f0 FC01      		movw r30,r24
 15524 66f2 8081      		ld r24,Z
 15525 66f4 9181      		ldd r25,Z+1
 15526 66f6 A281      		ldd r26,Z+2
 15527 66f8 B381      		ldd r27,Z+3
 15528               	.L593:
 15529               		.loc 2 1448 0 discriminator 6
 15530 66fa 898F      		std Y+25,r24
 15531 66fc 9A8F      		std Y+26,r25
 15532 66fe AB8F      		std Y+27,r26
 15533 6700 BC8F      		std Y+28,r27
1449:lp_solve_5.5/lp_presolve.c ****       if((Value > 0) && (psdata->rows->plulower[k] > -lp->infinite))
 15534               		.loc 2 1449 0 is_stmt 1 discriminator 6
 15535 6702 20E0      		ldi r18,0
 15536 6704 30E0      		ldi r19,0
 15537 6706 A901      		movw r20,r18
 15538 6708 698D      		ldd r22,Y+25
 15539 670a 7A8D      		ldd r23,Y+26
 15540 670c 8B8D      		ldd r24,Y+27
 15541 670e 9C8D      		ldd r25,Y+28
 15542 6710 0E94 0000 		call __gtsf2
 15543 6714 1816      		cp __zero_reg__,r24
 15544 6716 04F0      		brlt .+2
 15545 6718 00C0      		rjmp .L594
 15546               		.loc 2 1449 0 is_stmt 0 discriminator 1
 15547 671a 8DA1      		ldd r24,Y+37
 15548 671c 9EA1      		ldd r25,Y+38
 15549 671e FC01      		movw r30,r24
 15550 6720 8081      		ld r24,Z
 15551 6722 9181      		ldd r25,Z+1
 15552 6724 FC01      		movw r30,r24
 15553 6726 2685      		ldd r18,Z+14
 15554 6728 3785      		ldd r19,Z+15
 15555 672a 8BA1      		ldd r24,Y+35
 15556 672c 9CA1      		ldd r25,Y+36
 15557 672e 880F      		lsl r24
 15558 6730 991F      		rol r25
 15559 6732 880F      		lsl r24
 15560 6734 991F      		rol r25
 15561 6736 820F      		add r24,r18
 15562 6738 931F      		adc r25,r19
 15563 673a FC01      		movw r30,r24
 15564 673c E080      		ld r14,Z
 15565 673e F180      		ldd r15,Z+1
 15566 6740 0281      		ldd r16,Z+2
 15567 6742 1381      		ldd r17,Z+3
 15568 6744 8F85      		ldd r24,Y+15
 15569 6746 9889      		ldd r25,Y+16
 15570 6748 865F      		subi r24,-10
 15571 674a 9C4F      		sbci r25,-4
 15572 674c FC01      		movw r30,r24
 15573 674e 8081      		ld r24,Z
 15574 6750 9181      		ldd r25,Z+1
 15575 6752 A281      		ldd r26,Z+2
 15576 6754 B381      		ldd r27,Z+3
 15577 6756 B058      		subi r27,0x80
 15578 6758 9C01      		movw r18,r24
 15579 675a AD01      		movw r20,r26
 15580 675c C801      		movw r24,r16
 15581 675e B701      		movw r22,r14
 15582 6760 0E94 0000 		call __gtsf2
 15583 6764 1816      		cp __zero_reg__,r24
 15584 6766 04F0      		brlt .+2
 15585 6768 00C0      		rjmp .L594
1450:lp_solve_5.5/lp_presolve.c ****         psdata->rows->plulower[k] += (LOnew-LOold)*Value;
 15586               		.loc 2 1450 0 is_stmt 1
 15587 676a 8DA1      		ldd r24,Y+37
 15588 676c 9EA1      		ldd r25,Y+38
 15589 676e FC01      		movw r30,r24
 15590 6770 8081      		ld r24,Z
 15591 6772 9181      		ldd r25,Z+1
 15592 6774 FC01      		movw r30,r24
 15593 6776 2685      		ldd r18,Z+14
 15594 6778 3785      		ldd r19,Z+15
 15595 677a 8BA1      		ldd r24,Y+35
 15596 677c 9CA1      		ldd r25,Y+36
 15597 677e 880F      		lsl r24
 15598 6780 991F      		rol r25
 15599 6782 880F      		lsl r24
 15600 6784 991F      		rol r25
 15601 6786 8901      		movw r16,r18
 15602 6788 080F      		add r16,r24
 15603 678a 191F      		adc r17,r25
 15604 678c 8DA1      		ldd r24,Y+37
 15605 678e 9EA1      		ldd r25,Y+38
 15606 6790 FC01      		movw r30,r24
 15607 6792 8081      		ld r24,Z
 15608 6794 9181      		ldd r25,Z+1
 15609 6796 FC01      		movw r30,r24
 15610 6798 2685      		ldd r18,Z+14
 15611 679a 3785      		ldd r19,Z+15
 15612 679c 8BA1      		ldd r24,Y+35
 15613 679e 9CA1      		ldd r25,Y+36
 15614 67a0 880F      		lsl r24
 15615 67a2 991F      		rol r25
 15616 67a4 880F      		lsl r24
 15617 67a6 991F      		rol r25
 15618 67a8 820F      		add r24,r18
 15619 67aa 931F      		adc r25,r19
 15620 67ac FC01      		movw r30,r24
 15621 67ae C080      		ld r12,Z
 15622 67b0 D180      		ldd r13,Z+1
 15623 67b2 E280      		ldd r14,Z+2
 15624 67b4 F380      		ldd r15,Z+3
 15625 67b6 2D8D      		ldd r18,Y+29
 15626 67b8 3E8D      		ldd r19,Y+30
 15627 67ba 4F8D      		ldd r20,Y+31
 15628 67bc 58A1      		ldd r21,Y+32
 15629 67be 69A5      		ldd r22,Y+41
 15630 67c0 7AA5      		ldd r23,Y+42
 15631 67c2 8BA5      		ldd r24,Y+43
 15632 67c4 9CA5      		ldd r25,Y+44
 15633 67c6 0E94 0000 		call __subsf3
 15634 67ca DC01      		movw r26,r24
 15635 67cc CB01      		movw r24,r22
 15636 67ce 298D      		ldd r18,Y+25
 15637 67d0 3A8D      		ldd r19,Y+26
 15638 67d2 4B8D      		ldd r20,Y+27
 15639 67d4 5C8D      		ldd r21,Y+28
 15640 67d6 BC01      		movw r22,r24
 15641 67d8 CD01      		movw r24,r26
 15642 67da 0E94 0000 		call __mulsf3
 15643 67de DC01      		movw r26,r24
 15644 67e0 CB01      		movw r24,r22
 15645 67e2 9C01      		movw r18,r24
 15646 67e4 AD01      		movw r20,r26
 15647 67e6 C701      		movw r24,r14
 15648 67e8 B601      		movw r22,r12
 15649 67ea 0E94 0000 		call __addsf3
 15650 67ee DC01      		movw r26,r24
 15651 67f0 CB01      		movw r24,r22
 15652 67f2 F801      		movw r30,r16
 15653 67f4 8083      		st Z,r24
 15654 67f6 9183      		std Z+1,r25
 15655 67f8 A283      		std Z+2,r26
 15656 67fa B383      		std Z+3,r27
 15657 67fc 00C0      		rjmp .L597
 15658               	.L594:
1451:lp_solve_5.5/lp_presolve.c ****       else if((Value < 0) && (psdata->rows->neglower[k] > -lp->infinite))
 15659               		.loc 2 1451 0
 15660 67fe 20E0      		ldi r18,0
 15661 6800 30E0      		ldi r19,0
 15662 6802 A901      		movw r20,r18
 15663 6804 698D      		ldd r22,Y+25
 15664 6806 7A8D      		ldd r23,Y+26
 15665 6808 8B8D      		ldd r24,Y+27
 15666 680a 9C8D      		ldd r25,Y+28
 15667 680c 0E94 0000 		call __ltsf2
 15668 6810 8823      		tst r24
 15669 6812 04F0      		brlt .+2
 15670 6814 00C0      		rjmp .L597
 15671               		.loc 2 1451 0 is_stmt 0 discriminator 1
 15672 6816 8DA1      		ldd r24,Y+37
 15673 6818 9EA1      		ldd r25,Y+38
 15674 681a FC01      		movw r30,r24
 15675 681c 8081      		ld r24,Z
 15676 681e 9181      		ldd r25,Z+1
 15677 6820 FC01      		movw r30,r24
 15678 6822 2089      		ldd r18,Z+16
 15679 6824 3189      		ldd r19,Z+17
 15680 6826 8BA1      		ldd r24,Y+35
 15681 6828 9CA1      		ldd r25,Y+36
 15682 682a 880F      		lsl r24
 15683 682c 991F      		rol r25
 15684 682e 880F      		lsl r24
 15685 6830 991F      		rol r25
 15686 6832 820F      		add r24,r18
 15687 6834 931F      		adc r25,r19
 15688 6836 FC01      		movw r30,r24
 15689 6838 E080      		ld r14,Z
 15690 683a F180      		ldd r15,Z+1
 15691 683c 0281      		ldd r16,Z+2
 15692 683e 1381      		ldd r17,Z+3
 15693 6840 8F85      		ldd r24,Y+15
 15694 6842 9889      		ldd r25,Y+16
 15695 6844 865F      		subi r24,-10
 15696 6846 9C4F      		sbci r25,-4
 15697 6848 FC01      		movw r30,r24
 15698 684a 8081      		ld r24,Z
 15699 684c 9181      		ldd r25,Z+1
 15700 684e A281      		ldd r26,Z+2
 15701 6850 B381      		ldd r27,Z+3
 15702 6852 B058      		subi r27,0x80
 15703 6854 9C01      		movw r18,r24
 15704 6856 AD01      		movw r20,r26
 15705 6858 C801      		movw r24,r16
 15706 685a B701      		movw r22,r14
 15707 685c 0E94 0000 		call __gtsf2
 15708 6860 1816      		cp __zero_reg__,r24
 15709 6862 04F0      		brlt .+2
 15710 6864 00C0      		rjmp .L597
1452:lp_solve_5.5/lp_presolve.c ****         psdata->rows->neglower[k] += (UPnew-UPold)*Value;
 15711               		.loc 2 1452 0 is_stmt 1
 15712 6866 8DA1      		ldd r24,Y+37
 15713 6868 9EA1      		ldd r25,Y+38
 15714 686a FC01      		movw r30,r24
 15715 686c 8081      		ld r24,Z
 15716 686e 9181      		ldd r25,Z+1
 15717 6870 FC01      		movw r30,r24
 15718 6872 2089      		ldd r18,Z+16
 15719 6874 3189      		ldd r19,Z+17
 15720 6876 8BA1      		ldd r24,Y+35
 15721 6878 9CA1      		ldd r25,Y+36
 15722 687a 880F      		lsl r24
 15723 687c 991F      		rol r25
 15724 687e 880F      		lsl r24
 15725 6880 991F      		rol r25
 15726 6882 8901      		movw r16,r18
 15727 6884 080F      		add r16,r24
 15728 6886 191F      		adc r17,r25
 15729 6888 8DA1      		ldd r24,Y+37
 15730 688a 9EA1      		ldd r25,Y+38
 15731 688c FC01      		movw r30,r24
 15732 688e 8081      		ld r24,Z
 15733 6890 9181      		ldd r25,Z+1
 15734 6892 FC01      		movw r30,r24
 15735 6894 2089      		ldd r18,Z+16
 15736 6896 3189      		ldd r19,Z+17
 15737 6898 8BA1      		ldd r24,Y+35
 15738 689a 9CA1      		ldd r25,Y+36
 15739 689c 880F      		lsl r24
 15740 689e 991F      		rol r25
 15741 68a0 880F      		lsl r24
 15742 68a2 991F      		rol r25
 15743 68a4 820F      		add r24,r18
 15744 68a6 931F      		adc r25,r19
 15745 68a8 FC01      		movw r30,r24
 15746 68aa C080      		ld r12,Z
 15747 68ac D180      		ldd r13,Z+1
 15748 68ae E280      		ldd r14,Z+2
 15749 68b0 F380      		ldd r15,Z+3
 15750 68b2 2F81      		ldd r18,Y+7
 15751 68b4 3885      		ldd r19,Y+8
 15752 68b6 4985      		ldd r20,Y+9
 15753 68b8 5A85      		ldd r21,Y+10
 15754 68ba 6DA5      		ldd r22,Y+45
 15755 68bc 7EA5      		ldd r23,Y+46
 15756 68be 8FA5      		ldd r24,Y+47
 15757 68c0 98A9      		ldd r25,Y+48
 15758 68c2 0E94 0000 		call __subsf3
 15759 68c6 DC01      		movw r26,r24
 15760 68c8 CB01      		movw r24,r22
 15761 68ca 298D      		ldd r18,Y+25
 15762 68cc 3A8D      		ldd r19,Y+26
 15763 68ce 4B8D      		ldd r20,Y+27
 15764 68d0 5C8D      		ldd r21,Y+28
 15765 68d2 BC01      		movw r22,r24
 15766 68d4 CD01      		movw r24,r26
 15767 68d6 0E94 0000 		call __mulsf3
 15768 68da DC01      		movw r26,r24
 15769 68dc CB01      		movw r24,r22
 15770 68de 9C01      		movw r18,r24
 15771 68e0 AD01      		movw r20,r26
 15772 68e2 C701      		movw r24,r14
 15773 68e4 B601      		movw r22,r12
 15774 68e6 0E94 0000 		call __addsf3
 15775 68ea DC01      		movw r26,r24
 15776 68ec CB01      		movw r24,r22
 15777 68ee F801      		movw r30,r16
 15778 68f0 8083      		st Z,r24
 15779 68f2 9183      		std Z+1,r25
 15780 68f4 A283      		std Z+2,r26
 15781 68f6 B383      		std Z+3,r27
 15782               	.L597:
1453:lp_solve_5.5/lp_presolve.c **** 
1454:lp_solve_5.5/lp_presolve.c ****       /* Then scan the constraint rows */
1455:lp_solve_5.5/lp_presolve.c ****       elmnr = mat->col_end[colnr-1];
 15783               		.loc 2 1455 0
 15784 68f8 8F89      		ldd r24,Y+23
 15785 68fa 988D      		ldd r25,Y+24
 15786 68fc FC01      		movw r30,r24
 15787 68fe 2289      		ldd r18,Z+18
 15788 6900 3389      		ldd r19,Z+19
 15789 6902 8FA1      		ldd r24,Y+39
 15790 6904 98A5      		ldd r25,Y+40
 15791 6906 8150      		subi r24,1
 15792 6908 9048      		sbci r25,-128
 15793 690a 880F      		lsl r24
 15794 690c 991F      		rol r25
 15795 690e 820F      		add r24,r18
 15796 6910 931F      		adc r25,r19
 15797 6912 FC01      		movw r30,r24
 15798 6914 8081      		ld r24,Z
 15799 6916 9181      		ldd r25,Z+1
 15800 6918 9A83      		std Y+2,r25
 15801 691a 8983      		std Y+1,r24
1456:lp_solve_5.5/lp_presolve.c ****       elmend = mat->col_end[colnr];
 15802               		.loc 2 1456 0
 15803 691c 8F89      		ldd r24,Y+23
 15804 691e 988D      		ldd r25,Y+24
 15805 6920 FC01      		movw r30,r24
 15806 6922 2289      		ldd r18,Z+18
 15807 6924 3389      		ldd r19,Z+19
 15808 6926 8FA1      		ldd r24,Y+39
 15809 6928 98A5      		ldd r25,Y+40
 15810 692a 880F      		lsl r24
 15811 692c 991F      		rol r25
 15812 692e 820F      		add r24,r18
 15813 6930 931F      		adc r25,r19
 15814 6932 FC01      		movw r30,r24
 15815 6934 8081      		ld r24,Z
 15816 6936 9181      		ldd r25,Z+1
 15817 6938 9AA3      		std Y+34,r25
 15818 693a 89A3      		std Y+33,r24
1457:lp_solve_5.5/lp_presolve.c ****       rownr = &COL_MAT_ROWNR(elmnr);
 15819               		.loc 2 1457 0
 15820 693c 8F89      		ldd r24,Y+23
 15821 693e 988D      		ldd r25,Y+24
 15822 6940 FC01      		movw r30,r24
 15823 6942 2685      		ldd r18,Z+14
 15824 6944 3785      		ldd r19,Z+15
 15825 6946 8981      		ldd r24,Y+1
 15826 6948 9A81      		ldd r25,Y+2
 15827 694a 880F      		lsl r24
 15828 694c 991F      		rol r25
 15829 694e 820F      		add r24,r18
 15830 6950 931F      		adc r25,r19
 15831 6952 9E87      		std Y+14,r25
 15832 6954 8D87      		std Y+13,r24
1458:lp_solve_5.5/lp_presolve.c ****       value = &COL_MAT_VALUE(elmnr);
 15833               		.loc 2 1458 0
 15834 6956 8F89      		ldd r24,Y+23
 15835 6958 988D      		ldd r25,Y+24
 15836 695a FC01      		movw r30,r24
 15837 695c 2089      		ldd r18,Z+16
 15838 695e 3189      		ldd r19,Z+17
 15839 6960 8981      		ldd r24,Y+1
 15840 6962 9A81      		ldd r25,Y+2
 15841 6964 880F      		lsl r24
 15842 6966 991F      		rol r25
 15843 6968 880F      		lsl r24
 15844 696a 991F      		rol r25
 15845 696c 820F      		add r24,r18
 15846 696e 931F      		adc r25,r19
 15847 6970 9C87      		std Y+12,r25
 15848 6972 8B87      		std Y+11,r24
1459:lp_solve_5.5/lp_presolve.c ****       for(; elmnr < elmend;
 15849               		.loc 2 1459 0
 15850 6974 00C0      		rjmp .L600
 15851               	.L611:
1460:lp_solve_5.5/lp_presolve.c ****           elmnr++, rownr += matRowColStep, value += matValueStep) {
1461:lp_solve_5.5/lp_presolve.c ****         k = *rownr;
 15852               		.loc 2 1461 0
 15853 6976 8D85      		ldd r24,Y+13
 15854 6978 9E85      		ldd r25,Y+14
 15855 697a FC01      		movw r30,r24
 15856 697c 8081      		ld r24,Z
 15857 697e 9181      		ldd r25,Z+1
 15858 6980 9CA3      		std Y+36,r25
 15859 6982 8BA3      		std Y+35,r24
1462:lp_solve_5.5/lp_presolve.c ****         if(!isActiveLink(psdata->rows->varmap, k))
 15860               		.loc 2 1462 0
 15861 6984 8DA1      		ldd r24,Y+37
 15862 6986 9EA1      		ldd r25,Y+38
 15863 6988 FC01      		movw r30,r24
 15864 698a 8081      		ld r24,Z
 15865 698c 9181      		ldd r25,Z+1
 15866 698e FC01      		movw r30,r24
 15867 6990 8081      		ld r24,Z
 15868 6992 9181      		ldd r25,Z+1
 15869 6994 2BA1      		ldd r18,Y+35
 15870 6996 3CA1      		ldd r19,Y+36
 15871 6998 B901      		movw r22,r18
 15872 699a 0E94 0000 		call isActiveLink
 15873 699e 8823      		tst r24
 15874 69a0 01F4      		brne .+2
 15875 69a2 00C0      		rjmp .L661
1463:lp_solve_5.5/lp_presolve.c ****           continue;
1464:lp_solve_5.5/lp_presolve.c ****         Value = my_chsign(is_chsign(lp, k), *value);
 15876               		.loc 2 1464 0
 15877 69a4 2BA1      		ldd r18,Y+35
 15878 69a6 3CA1      		ldd r19,Y+36
 15879 69a8 8F85      		ldd r24,Y+15
 15880 69aa 9889      		ldd r25,Y+16
 15881 69ac B901      		movw r22,r18
 15882 69ae 0E94 0000 		call is_chsign
 15883 69b2 8823      		tst r24
 15884 69b4 01F0      		breq .L603
 15885               		.loc 2 1464 0 is_stmt 0 discriminator 1
 15886 69b6 8B85      		ldd r24,Y+11
 15887 69b8 9C85      		ldd r25,Y+12
 15888 69ba FC01      		movw r30,r24
 15889 69bc 8081      		ld r24,Z
 15890 69be 9181      		ldd r25,Z+1
 15891 69c0 A281      		ldd r26,Z+2
 15892 69c2 B381      		ldd r27,Z+3
 15893 69c4 20E0      		ldi r18,0
 15894 69c6 30E0      		ldi r19,0
 15895 69c8 A901      		movw r20,r18
 15896 69ca BC01      		movw r22,r24
 15897 69cc CD01      		movw r24,r26
 15898 69ce 0E94 0000 		call __nesf2
 15899 69d2 8823      		tst r24
 15900 69d4 01F0      		breq .L603
 15901               		.loc 2 1464 0 discriminator 3
 15902 69d6 8B85      		ldd r24,Y+11
 15903 69d8 9C85      		ldd r25,Y+12
 15904 69da FC01      		movw r30,r24
 15905 69dc 8081      		ld r24,Z
 15906 69de 9181      		ldd r25,Z+1
 15907 69e0 A281      		ldd r26,Z+2
 15908 69e2 B381      		ldd r27,Z+3
 15909 69e4 B058      		subi r27,0x80
 15910 69e6 00C0      		rjmp .L605
 15911               	.L603:
 15912               		.loc 2 1464 0 discriminator 4
 15913 69e8 8B85      		ldd r24,Y+11
 15914 69ea 9C85      		ldd r25,Y+12
 15915 69ec FC01      		movw r30,r24
 15916 69ee 8081      		ld r24,Z
 15917 69f0 9181      		ldd r25,Z+1
 15918 69f2 A281      		ldd r26,Z+2
 15919 69f4 B381      		ldd r27,Z+3
 15920               	.L605:
 15921               		.loc 2 1464 0 discriminator 6
 15922 69f6 898F      		std Y+25,r24
 15923 69f8 9A8F      		std Y+26,r25
 15924 69fa AB8F      		std Y+27,r26
 15925 69fc BC8F      		std Y+28,r27
1465:lp_solve_5.5/lp_presolve.c ****         if((Value > 0) && (psdata->rows->plulower[k] > -lp->infinite))
 15926               		.loc 2 1465 0 is_stmt 1 discriminator 6
 15927 69fe 20E0      		ldi r18,0
 15928 6a00 30E0      		ldi r19,0
 15929 6a02 A901      		movw r20,r18
 15930 6a04 698D      		ldd r22,Y+25
 15931 6a06 7A8D      		ldd r23,Y+26
 15932 6a08 8B8D      		ldd r24,Y+27
 15933 6a0a 9C8D      		ldd r25,Y+28
 15934 6a0c 0E94 0000 		call __gtsf2
 15935 6a10 1816      		cp __zero_reg__,r24
 15936 6a12 04F0      		brlt .+2
 15937 6a14 00C0      		rjmp .L606
 15938               		.loc 2 1465 0 is_stmt 0 discriminator 1
 15939 6a16 8DA1      		ldd r24,Y+37
 15940 6a18 9EA1      		ldd r25,Y+38
 15941 6a1a FC01      		movw r30,r24
 15942 6a1c 8081      		ld r24,Z
 15943 6a1e 9181      		ldd r25,Z+1
 15944 6a20 FC01      		movw r30,r24
 15945 6a22 2685      		ldd r18,Z+14
 15946 6a24 3785      		ldd r19,Z+15
 15947 6a26 8BA1      		ldd r24,Y+35
 15948 6a28 9CA1      		ldd r25,Y+36
 15949 6a2a 880F      		lsl r24
 15950 6a2c 991F      		rol r25
 15951 6a2e 880F      		lsl r24
 15952 6a30 991F      		rol r25
 15953 6a32 820F      		add r24,r18
 15954 6a34 931F      		adc r25,r19
 15955 6a36 FC01      		movw r30,r24
 15956 6a38 E080      		ld r14,Z
 15957 6a3a F180      		ldd r15,Z+1
 15958 6a3c 0281      		ldd r16,Z+2
 15959 6a3e 1381      		ldd r17,Z+3
 15960 6a40 8F85      		ldd r24,Y+15
 15961 6a42 9889      		ldd r25,Y+16
 15962 6a44 865F      		subi r24,-10
 15963 6a46 9C4F      		sbci r25,-4
 15964 6a48 FC01      		movw r30,r24
 15965 6a4a 8081      		ld r24,Z
 15966 6a4c 9181      		ldd r25,Z+1
 15967 6a4e A281      		ldd r26,Z+2
 15968 6a50 B381      		ldd r27,Z+3
 15969 6a52 B058      		subi r27,0x80
 15970 6a54 9C01      		movw r18,r24
 15971 6a56 AD01      		movw r20,r26
 15972 6a58 C801      		movw r24,r16
 15973 6a5a B701      		movw r22,r14
 15974 6a5c 0E94 0000 		call __gtsf2
 15975 6a60 1816      		cp __zero_reg__,r24
 15976 6a62 04F0      		brlt .+2
 15977 6a64 00C0      		rjmp .L606
1466:lp_solve_5.5/lp_presolve.c ****           psdata->rows->plulower[k] += (LOnew-LOold)*Value;
 15978               		.loc 2 1466 0 is_stmt 1
 15979 6a66 8DA1      		ldd r24,Y+37
 15980 6a68 9EA1      		ldd r25,Y+38
 15981 6a6a FC01      		movw r30,r24
 15982 6a6c 8081      		ld r24,Z
 15983 6a6e 9181      		ldd r25,Z+1
 15984 6a70 FC01      		movw r30,r24
 15985 6a72 2685      		ldd r18,Z+14
 15986 6a74 3785      		ldd r19,Z+15
 15987 6a76 8BA1      		ldd r24,Y+35
 15988 6a78 9CA1      		ldd r25,Y+36
 15989 6a7a 880F      		lsl r24
 15990 6a7c 991F      		rol r25
 15991 6a7e 880F      		lsl r24
 15992 6a80 991F      		rol r25
 15993 6a82 8901      		movw r16,r18
 15994 6a84 080F      		add r16,r24
 15995 6a86 191F      		adc r17,r25
 15996 6a88 8DA1      		ldd r24,Y+37
 15997 6a8a 9EA1      		ldd r25,Y+38
 15998 6a8c FC01      		movw r30,r24
 15999 6a8e 8081      		ld r24,Z
 16000 6a90 9181      		ldd r25,Z+1
 16001 6a92 FC01      		movw r30,r24
 16002 6a94 2685      		ldd r18,Z+14
 16003 6a96 3785      		ldd r19,Z+15
 16004 6a98 8BA1      		ldd r24,Y+35
 16005 6a9a 9CA1      		ldd r25,Y+36
 16006 6a9c 880F      		lsl r24
 16007 6a9e 991F      		rol r25
 16008 6aa0 880F      		lsl r24
 16009 6aa2 991F      		rol r25
 16010 6aa4 820F      		add r24,r18
 16011 6aa6 931F      		adc r25,r19
 16012 6aa8 FC01      		movw r30,r24
 16013 6aaa C080      		ld r12,Z
 16014 6aac D180      		ldd r13,Z+1
 16015 6aae E280      		ldd r14,Z+2
 16016 6ab0 F380      		ldd r15,Z+3
 16017 6ab2 2D8D      		ldd r18,Y+29
 16018 6ab4 3E8D      		ldd r19,Y+30
 16019 6ab6 4F8D      		ldd r20,Y+31
 16020 6ab8 58A1      		ldd r21,Y+32
 16021 6aba 69A5      		ldd r22,Y+41
 16022 6abc 7AA5      		ldd r23,Y+42
 16023 6abe 8BA5      		ldd r24,Y+43
 16024 6ac0 9CA5      		ldd r25,Y+44
 16025 6ac2 0E94 0000 		call __subsf3
 16026 6ac6 DC01      		movw r26,r24
 16027 6ac8 CB01      		movw r24,r22
 16028 6aca 298D      		ldd r18,Y+25
 16029 6acc 3A8D      		ldd r19,Y+26
 16030 6ace 4B8D      		ldd r20,Y+27
 16031 6ad0 5C8D      		ldd r21,Y+28
 16032 6ad2 BC01      		movw r22,r24
 16033 6ad4 CD01      		movw r24,r26
 16034 6ad6 0E94 0000 		call __mulsf3
 16035 6ada DC01      		movw r26,r24
 16036 6adc CB01      		movw r24,r22
 16037 6ade 9C01      		movw r18,r24
 16038 6ae0 AD01      		movw r20,r26
 16039 6ae2 C701      		movw r24,r14
 16040 6ae4 B601      		movw r22,r12
 16041 6ae6 0E94 0000 		call __addsf3
 16042 6aea DC01      		movw r26,r24
 16043 6aec CB01      		movw r24,r22
 16044 6aee F801      		movw r30,r16
 16045 6af0 8083      		st Z,r24
 16046 6af2 9183      		std Z+1,r25
 16047 6af4 A283      		std Z+2,r26
 16048 6af6 B383      		std Z+3,r27
 16049 6af8 00C0      		rjmp .L602
 16050               	.L606:
1467:lp_solve_5.5/lp_presolve.c ****         else if((Value < 0) && (psdata->rows->neglower[k] > -lp->infinite))
 16051               		.loc 2 1467 0
 16052 6afa 20E0      		ldi r18,0
 16053 6afc 30E0      		ldi r19,0
 16054 6afe A901      		movw r20,r18
 16055 6b00 698D      		ldd r22,Y+25
 16056 6b02 7A8D      		ldd r23,Y+26
 16057 6b04 8B8D      		ldd r24,Y+27
 16058 6b06 9C8D      		ldd r25,Y+28
 16059 6b08 0E94 0000 		call __ltsf2
 16060 6b0c 8823      		tst r24
 16061 6b0e 04F0      		brlt .+2
 16062 6b10 00C0      		rjmp .L602
 16063               		.loc 2 1467 0 is_stmt 0 discriminator 1
 16064 6b12 8DA1      		ldd r24,Y+37
 16065 6b14 9EA1      		ldd r25,Y+38
 16066 6b16 FC01      		movw r30,r24
 16067 6b18 8081      		ld r24,Z
 16068 6b1a 9181      		ldd r25,Z+1
 16069 6b1c FC01      		movw r30,r24
 16070 6b1e 2089      		ldd r18,Z+16
 16071 6b20 3189      		ldd r19,Z+17
 16072 6b22 8BA1      		ldd r24,Y+35
 16073 6b24 9CA1      		ldd r25,Y+36
 16074 6b26 880F      		lsl r24
 16075 6b28 991F      		rol r25
 16076 6b2a 880F      		lsl r24
 16077 6b2c 991F      		rol r25
 16078 6b2e 820F      		add r24,r18
 16079 6b30 931F      		adc r25,r19
 16080 6b32 FC01      		movw r30,r24
 16081 6b34 E080      		ld r14,Z
 16082 6b36 F180      		ldd r15,Z+1
 16083 6b38 0281      		ldd r16,Z+2
 16084 6b3a 1381      		ldd r17,Z+3
 16085 6b3c 8F85      		ldd r24,Y+15
 16086 6b3e 9889      		ldd r25,Y+16
 16087 6b40 865F      		subi r24,-10
 16088 6b42 9C4F      		sbci r25,-4
 16089 6b44 FC01      		movw r30,r24
 16090 6b46 8081      		ld r24,Z
 16091 6b48 9181      		ldd r25,Z+1
 16092 6b4a A281      		ldd r26,Z+2
 16093 6b4c B381      		ldd r27,Z+3
 16094 6b4e B058      		subi r27,0x80
 16095 6b50 9C01      		movw r18,r24
 16096 6b52 AD01      		movw r20,r26
 16097 6b54 C801      		movw r24,r16
 16098 6b56 B701      		movw r22,r14
 16099 6b58 0E94 0000 		call __gtsf2
 16100 6b5c 1816      		cp __zero_reg__,r24
 16101 6b5e 04F0      		brlt .+2
 16102 6b60 00C0      		rjmp .L602
1468:lp_solve_5.5/lp_presolve.c ****           psdata->rows->neglower[k] += (UPnew-UPold)*Value;
 16103               		.loc 2 1468 0 is_stmt 1
 16104 6b62 8DA1      		ldd r24,Y+37
 16105 6b64 9EA1      		ldd r25,Y+38
 16106 6b66 FC01      		movw r30,r24
 16107 6b68 8081      		ld r24,Z
 16108 6b6a 9181      		ldd r25,Z+1
 16109 6b6c FC01      		movw r30,r24
 16110 6b6e 2089      		ldd r18,Z+16
 16111 6b70 3189      		ldd r19,Z+17
 16112 6b72 8BA1      		ldd r24,Y+35
 16113 6b74 9CA1      		ldd r25,Y+36
 16114 6b76 880F      		lsl r24
 16115 6b78 991F      		rol r25
 16116 6b7a 880F      		lsl r24
 16117 6b7c 991F      		rol r25
 16118 6b7e 8901      		movw r16,r18
 16119 6b80 080F      		add r16,r24
 16120 6b82 191F      		adc r17,r25
 16121 6b84 8DA1      		ldd r24,Y+37
 16122 6b86 9EA1      		ldd r25,Y+38
 16123 6b88 FC01      		movw r30,r24
 16124 6b8a 8081      		ld r24,Z
 16125 6b8c 9181      		ldd r25,Z+1
 16126 6b8e FC01      		movw r30,r24
 16127 6b90 2089      		ldd r18,Z+16
 16128 6b92 3189      		ldd r19,Z+17
 16129 6b94 8BA1      		ldd r24,Y+35
 16130 6b96 9CA1      		ldd r25,Y+36
 16131 6b98 880F      		lsl r24
 16132 6b9a 991F      		rol r25
 16133 6b9c 880F      		lsl r24
 16134 6b9e 991F      		rol r25
 16135 6ba0 820F      		add r24,r18
 16136 6ba2 931F      		adc r25,r19
 16137 6ba4 FC01      		movw r30,r24
 16138 6ba6 C080      		ld r12,Z
 16139 6ba8 D180      		ldd r13,Z+1
 16140 6baa E280      		ldd r14,Z+2
 16141 6bac F380      		ldd r15,Z+3
 16142 6bae 2F81      		ldd r18,Y+7
 16143 6bb0 3885      		ldd r19,Y+8
 16144 6bb2 4985      		ldd r20,Y+9
 16145 6bb4 5A85      		ldd r21,Y+10
 16146 6bb6 6DA5      		ldd r22,Y+45
 16147 6bb8 7EA5      		ldd r23,Y+46
 16148 6bba 8FA5      		ldd r24,Y+47
 16149 6bbc 98A9      		ldd r25,Y+48
 16150 6bbe 0E94 0000 		call __subsf3
 16151 6bc2 DC01      		movw r26,r24
 16152 6bc4 CB01      		movw r24,r22
 16153 6bc6 298D      		ldd r18,Y+25
 16154 6bc8 3A8D      		ldd r19,Y+26
 16155 6bca 4B8D      		ldd r20,Y+27
 16156 6bcc 5C8D      		ldd r21,Y+28
 16157 6bce BC01      		movw r22,r24
 16158 6bd0 CD01      		movw r24,r26
 16159 6bd2 0E94 0000 		call __mulsf3
 16160 6bd6 DC01      		movw r26,r24
 16161 6bd8 CB01      		movw r24,r22
 16162 6bda 9C01      		movw r18,r24
 16163 6bdc AD01      		movw r20,r26
 16164 6bde C701      		movw r24,r14
 16165 6be0 B601      		movw r22,r12
 16166 6be2 0E94 0000 		call __addsf3
 16167 6be6 DC01      		movw r26,r24
 16168 6be8 CB01      		movw r24,r22
 16169 6bea F801      		movw r30,r16
 16170 6bec 8083      		st Z,r24
 16171 6bee 9183      		std Z+1,r25
 16172 6bf0 A283      		std Z+2,r26
 16173 6bf2 B383      		std Z+3,r27
 16174 6bf4 00C0      		rjmp .L602
 16175               	.L661:
1463:lp_solve_5.5/lp_presolve.c ****         Value = my_chsign(is_chsign(lp, k), *value);
 16176               		.loc 2 1463 0
 16177 6bf6 0000      		nop
 16178               	.L602:
1460:lp_solve_5.5/lp_presolve.c ****         k = *rownr;
 16179               		.loc 2 1460 0
 16180 6bf8 8981      		ldd r24,Y+1
 16181 6bfa 9A81      		ldd r25,Y+2
 16182 6bfc 0196      		adiw r24,1
 16183 6bfe 9A83      		std Y+2,r25
 16184 6c00 8983      		std Y+1,r24
 16185 6c02 8D85      		ldd r24,Y+13
 16186 6c04 9E85      		ldd r25,Y+14
 16187 6c06 0296      		adiw r24,2
 16188 6c08 9E87      		std Y+14,r25
 16189 6c0a 8D87      		std Y+13,r24
 16190 6c0c 8B85      		ldd r24,Y+11
 16191 6c0e 9C85      		ldd r25,Y+12
 16192 6c10 0496      		adiw r24,4
 16193 6c12 9C87      		std Y+12,r25
 16194 6c14 8B87      		std Y+11,r24
 16195               	.L600:
1459:lp_solve_5.5/lp_presolve.c ****           elmnr++, rownr += matRowColStep, value += matValueStep) {
 16196               		.loc 2 1459 0
 16197 6c16 2981      		ldd r18,Y+1
 16198 6c18 3A81      		ldd r19,Y+2
 16199 6c1a 89A1      		ldd r24,Y+33
 16200 6c1c 9AA1      		ldd r25,Y+34
 16201 6c1e 2817      		cp r18,r24
 16202 6c20 3907      		cpc r19,r25
 16203 6c22 04F4      		brge .+2
 16204 6c24 00C0      		rjmp .L611
 16205 6c26 00C0      		rjmp .L612
 16206               	.L658:
1469:lp_solve_5.5/lp_presolve.c ****       }
1470:lp_solve_5.5/lp_presolve.c ****     }
1471:lp_solve_5.5/lp_presolve.c ****     else
1472:lp_solve_5.5/lp_presolve.c ****       psdata->forceupdate = TRUE;
 16207               		.loc 2 1472 0
 16208 6c28 8DA1      		ldd r24,Y+37
 16209 6c2a 9EA1      		ldd r25,Y+38
 16210 6c2c 21E0      		ldi r18,lo8(1)
 16211 6c2e FC01      		movw r30,r24
 16212 6c30 24A3      		std Z+36,r18
 16213               	.L612:
1473:lp_solve_5.5/lp_presolve.c ****     if(LOnew > LOold) {
 16214               		.loc 2 1473 0
 16215 6c32 2D8D      		ldd r18,Y+29
 16216 6c34 3E8D      		ldd r19,Y+30
 16217 6c36 4F8D      		ldd r20,Y+31
 16218 6c38 58A1      		ldd r21,Y+32
 16219 6c3a 69A5      		ldd r22,Y+41
 16220 6c3c 7AA5      		ldd r23,Y+42
 16221 6c3e 8BA5      		ldd r24,Y+43
 16222 6c40 9CA5      		ldd r25,Y+44
 16223 6c42 0E94 0000 		call __gtsf2
 16224 6c46 1816      		cp __zero_reg__,r24
 16225 6c48 04F4      		brge .L585
1474:lp_solve_5.5/lp_presolve.c ****       LOold = LOnew;
 16226               		.loc 2 1474 0
 16227 6c4a 89A5      		ldd r24,Y+41
 16228 6c4c 9AA5      		ldd r25,Y+42
 16229 6c4e ABA5      		ldd r26,Y+43
 16230 6c50 BCA5      		ldd r27,Y+44
 16231 6c52 8D8F      		std Y+29,r24
 16232 6c54 9E8F      		std Y+30,r25
 16233 6c56 AF8F      		std Y+31,r26
 16234 6c58 B8A3      		std Y+32,r27
1475:lp_solve_5.5/lp_presolve.c ****       newcount++;
 16235               		.loc 2 1475 0
 16236 6c5a 8B81      		ldd r24,Y+3
 16237 6c5c 9C81      		ldd r25,Y+4
 16238 6c5e 0196      		adiw r24,1
 16239 6c60 9C83      		std Y+4,r25
 16240 6c62 8B83      		std Y+3,r24
 16241               	.L585:
1476:lp_solve_5.5/lp_presolve.c ****     }
1477:lp_solve_5.5/lp_presolve.c ****   }
1478:lp_solve_5.5/lp_presolve.c **** 
1479:lp_solve_5.5/lp_presolve.c ****   /* Now set the new variable bounds, if they are tighter */
1480:lp_solve_5.5/lp_presolve.c ****   if(newcount > oldcount) {
 16242               		.loc 2 1480 0
 16243 6c64 2B81      		ldd r18,Y+3
 16244 6c66 3C81      		ldd r19,Y+4
 16245 6c68 8989      		ldd r24,Y+17
 16246 6c6a 9A89      		ldd r25,Y+18
 16247 6c6c 8217      		cp r24,r18
 16248 6c6e 9307      		cpc r25,r19
 16249 6c70 04F0      		brlt .+2
 16250 6c72 00C0      		rjmp .L614
1481:lp_solve_5.5/lp_presolve.c ****     UPnew = presolve_roundval(lp, UPnew);
 16251               		.loc 2 1481 0
 16252 6c74 8DA5      		ldd r24,Y+45
 16253 6c76 9EA5      		ldd r25,Y+46
 16254 6c78 AFA5      		ldd r26,Y+47
 16255 6c7a B8A9      		ldd r27,Y+48
 16256 6c7c 2F85      		ldd r18,Y+15
 16257 6c7e 3889      		ldd r19,Y+16
 16258 6c80 AC01      		movw r20,r24
 16259 6c82 BD01      		movw r22,r26
 16260 6c84 C901      		movw r24,r18
 16261 6c86 0E94 0000 		call presolve_roundval
 16262 6c8a DC01      		movw r26,r24
 16263 6c8c CB01      		movw r24,r22
 16264 6c8e 8DA7      		std Y+45,r24
 16265 6c90 9EA7      		std Y+46,r25
 16266 6c92 AFA7      		std Y+47,r26
 16267 6c94 B8AB      		std Y+48,r27
1482:lp_solve_5.5/lp_presolve.c ****     LOnew = presolve_roundval(lp, LOnew);
 16268               		.loc 2 1482 0
 16269 6c96 89A5      		ldd r24,Y+41
 16270 6c98 9AA5      		ldd r25,Y+42
 16271 6c9a ABA5      		ldd r26,Y+43
 16272 6c9c BCA5      		ldd r27,Y+44
 16273 6c9e 2F85      		ldd r18,Y+15
 16274 6ca0 3889      		ldd r19,Y+16
 16275 6ca2 AC01      		movw r20,r24
 16276 6ca4 BD01      		movw r22,r26
 16277 6ca6 C901      		movw r24,r18
 16278 6ca8 0E94 0000 		call presolve_roundval
 16279 6cac DC01      		movw r26,r24
 16280 6cae CB01      		movw r24,r22
 16281 6cb0 89A7      		std Y+41,r24
 16282 6cb2 9AA7      		std Y+42,r25
 16283 6cb4 ABA7      		std Y+43,r26
 16284 6cb6 BCA7      		std Y+44,r27
1483:lp_solve_5.5/lp_presolve.c ****     if(LOnew > UPnew) {
 16285               		.loc 2 1483 0
 16286 6cb8 2DA5      		ldd r18,Y+45
 16287 6cba 3EA5      		ldd r19,Y+46
 16288 6cbc 4FA5      		ldd r20,Y+47
 16289 6cbe 58A9      		ldd r21,Y+48
 16290 6cc0 69A5      		ldd r22,Y+41
 16291 6cc2 7AA5      		ldd r23,Y+42
 16292 6cc4 8BA5      		ldd r24,Y+43
 16293 6cc6 9CA5      		ldd r25,Y+44
 16294 6cc8 0E94 0000 		call __gtsf2
 16295 6ccc 1816      		cp __zero_reg__,r24
 16296 6cce 04F0      		brlt .+2
 16297 6cd0 00C0      		rjmp .L615
1484:lp_solve_5.5/lp_presolve.c ****       if(LOnew-UPnew < margin) {
 16298               		.loc 2 1484 0
 16299 6cd2 2DA5      		ldd r18,Y+45
 16300 6cd4 3EA5      		ldd r19,Y+46
 16301 6cd6 4FA5      		ldd r20,Y+47
 16302 6cd8 58A9      		ldd r21,Y+48
 16303 6cda 69A5      		ldd r22,Y+41
 16304 6cdc 7AA5      		ldd r23,Y+42
 16305 6cde 8BA5      		ldd r24,Y+43
 16306 6ce0 9CA5      		ldd r25,Y+44
 16307 6ce2 0E94 0000 		call __subsf3
 16308 6ce6 DC01      		movw r26,r24
 16309 6ce8 CB01      		movw r24,r22
 16310 6cea 2B89      		ldd r18,Y+19
 16311 6cec 3C89      		ldd r19,Y+20
 16312 6cee 4D89      		ldd r20,Y+21
 16313 6cf0 5E89      		ldd r21,Y+22
 16314 6cf2 BC01      		movw r22,r24
 16315 6cf4 CD01      		movw r24,r26
 16316 6cf6 0E94 0000 		call __ltsf2
 16317 6cfa 8823      		tst r24
 16318 6cfc 04F4      		brge .L659
1485:lp_solve_5.5/lp_presolve.c ****         LOnew = UPnew;
 16319               		.loc 2 1485 0
 16320 6cfe 8DA5      		ldd r24,Y+45
 16321 6d00 9EA5      		ldd r25,Y+46
 16322 6d02 AFA5      		ldd r26,Y+47
 16323 6d04 B8A9      		ldd r27,Y+48
 16324 6d06 89A7      		std Y+41,r24
 16325 6d08 9AA7      		std Y+42,r25
 16326 6d0a ABA7      		std Y+43,r26
 16327 6d0c BCA7      		std Y+44,r27
 16328 6d0e 00C0      		rjmp .L615
 16329               	.L659:
1486:lp_solve_5.5/lp_presolve.c ****       }
1487:lp_solve_5.5/lp_presolve.c ****       else {
1488:lp_solve_5.5/lp_presolve.c ****         report(lp, NORMAL, "presolve_coltighten: Found column %s with LB %g > UB %g\n",
 16330               		.loc 2 1488 0
 16331 6d10 2FA1      		ldd r18,Y+39
 16332 6d12 38A5      		ldd r19,Y+40
 16333 6d14 8F85      		ldd r24,Y+15
 16334 6d16 9889      		ldd r25,Y+16
 16335 6d18 B901      		movw r22,r18
 16336 6d1a 0E94 0000 		call get_col_name
 16337 6d1e 28A9      		ldd r18,Y+48
 16338 6d20 2F93      		push r18
 16339 6d22 2FA5      		ldd r18,Y+47
 16340 6d24 2F93      		push r18
 16341 6d26 2EA5      		ldd r18,Y+46
 16342 6d28 2F93      		push r18
 16343 6d2a 2DA5      		ldd r18,Y+45
 16344 6d2c 2F93      		push r18
 16345 6d2e 2CA5      		ldd r18,Y+44
 16346 6d30 2F93      		push r18
 16347 6d32 2BA5      		ldd r18,Y+43
 16348 6d34 2F93      		push r18
 16349 6d36 2AA5      		ldd r18,Y+42
 16350 6d38 2F93      		push r18
 16351 6d3a 29A5      		ldd r18,Y+41
 16352 6d3c 2F93      		push r18
 16353 6d3e 292F      		mov r18,r25
 16354 6d40 2F93      		push r18
 16355 6d42 8F93      		push r24
 16356 6d44 80E0      		ldi r24,lo8(.LC25)
 16357 6d46 90E0      		ldi r25,hi8(.LC25)
 16358 6d48 892F      		mov r24,r25
 16359 6d4a 8F93      		push r24
 16360 6d4c 80E0      		ldi r24,lo8(.LC25)
 16361 6d4e 90E0      		ldi r25,hi8(.LC25)
 16362 6d50 8F93      		push r24
 16363 6d52 1F92      		push __zero_reg__
 16364 6d54 84E0      		ldi r24,lo8(4)
 16365 6d56 8F93      		push r24
 16366 6d58 8889      		ldd r24,Y+16
 16367 6d5a 8F93      		push r24
 16368 6d5c 8F85      		ldd r24,Y+15
 16369 6d5e 8F93      		push r24
 16370 6d60 0E94 0000 		call report
 16371 6d64 8DB7      		in r24,__SP_L__
 16372 6d66 9EB7      		in r25,__SP_H__
 16373 6d68 4096      		adiw r24,16
 16374 6d6a 0FB6      		in __tmp_reg__,__SREG__
 16375 6d6c F894      		cli
 16376 6d6e DEBF      		out __SP_H__,r29
 16377 6d70 0FBE      		out __SREG__,__tmp_reg__
 16378 6d72 CDBF      		out __SP_L__,r28
1489:lp_solve_5.5/lp_presolve.c ****                             get_col_name(lp, colnr), LOnew, UPnew);
1490:lp_solve_5.5/lp_presolve.c ****         return( FALSE );
 16379               		.loc 2 1490 0
 16380 6d74 80E0      		ldi r24,0
 16381 6d76 00C0      		rjmp .L619
 16382               	.L615:
1491:lp_solve_5.5/lp_presolve.c ****       }
1492:lp_solve_5.5/lp_presolve.c ****     }
1493:lp_solve_5.5/lp_presolve.c ****     if(lp->spx_trace || (lp->verbose > DETAILED))
 16383               		.loc 2 1493 0
 16384 6d78 8F85      		ldd r24,Y+15
 16385 6d7a 9889      		ldd r25,Y+16
 16386 6d7c 8E5F      		subi r24,-2
 16387 6d7e 9D4F      		sbci r25,-3
 16388 6d80 FC01      		movw r30,r24
 16389 6d82 8081      		ld r24,Z
 16390 6d84 8823      		tst r24
 16391 6d86 01F4      		brne .L620
 16392               		.loc 2 1493 0 is_stmt 0 discriminator 1
 16393 6d88 8F85      		ldd r24,Y+15
 16394 6d8a 9889      		ldd r25,Y+16
 16395 6d8c 885A      		subi r24,-88
 16396 6d8e 9D4F      		sbci r25,-3
 16397 6d90 FC01      		movw r30,r24
 16398 6d92 8081      		ld r24,Z
 16399 6d94 9181      		ldd r25,Z+1
 16400 6d96 0697      		sbiw r24,6
 16401 6d98 04F0      		brlt .L621
 16402               	.L620:
1494:lp_solve_5.5/lp_presolve.c ****       report(lp, NORMAL, "presolve_coltighten: Replaced bounds on column %s to [%g ... %g]\n",
 16403               		.loc 2 1494 0 is_stmt 1
 16404 6d9a 2FA1      		ldd r18,Y+39
 16405 6d9c 38A5      		ldd r19,Y+40
 16406 6d9e 8F85      		ldd r24,Y+15
 16407 6da0 9889      		ldd r25,Y+16
 16408 6da2 B901      		movw r22,r18
 16409 6da4 0E94 0000 		call get_col_name
 16410 6da8 28A9      		ldd r18,Y+48
 16411 6daa 2F93      		push r18
 16412 6dac 2FA5      		ldd r18,Y+47
 16413 6dae 2F93      		push r18
 16414 6db0 2EA5      		ldd r18,Y+46
 16415 6db2 2F93      		push r18
 16416 6db4 2DA5      		ldd r18,Y+45
 16417 6db6 2F93      		push r18
 16418 6db8 2CA5      		ldd r18,Y+44
 16419 6dba 2F93      		push r18
 16420 6dbc 2BA5      		ldd r18,Y+43
 16421 6dbe 2F93      		push r18
 16422 6dc0 2AA5      		ldd r18,Y+42
 16423 6dc2 2F93      		push r18
 16424 6dc4 29A5      		ldd r18,Y+41
 16425 6dc6 2F93      		push r18
 16426 6dc8 292F      		mov r18,r25
 16427 6dca 2F93      		push r18
 16428 6dcc 8F93      		push r24
 16429 6dce 80E0      		ldi r24,lo8(.LC26)
 16430 6dd0 90E0      		ldi r25,hi8(.LC26)
 16431 6dd2 892F      		mov r24,r25
 16432 6dd4 8F93      		push r24
 16433 6dd6 80E0      		ldi r24,lo8(.LC26)
 16434 6dd8 90E0      		ldi r25,hi8(.LC26)
 16435 6dda 8F93      		push r24
 16436 6ddc 1F92      		push __zero_reg__
 16437 6dde 84E0      		ldi r24,lo8(4)
 16438 6de0 8F93      		push r24
 16439 6de2 8889      		ldd r24,Y+16
 16440 6de4 8F93      		push r24
 16441 6de6 8F85      		ldd r24,Y+15
 16442 6de8 8F93      		push r24
 16443 6dea 0E94 0000 		call report
 16444 6dee 8DB7      		in r24,__SP_L__
 16445 6df0 9EB7      		in r25,__SP_H__
 16446 6df2 4096      		adiw r24,16
 16447 6df4 0FB6      		in __tmp_reg__,__SREG__
 16448 6df6 F894      		cli
 16449 6df8 DEBF      		out __SP_H__,r29
 16450 6dfa 0FBE      		out __SREG__,__tmp_reg__
 16451 6dfc CDBF      		out __SP_L__,r28
 16452               	.L621:
1495:lp_solve_5.5/lp_presolve.c ****                          get_col_name(lp, colnr), LOnew, UPnew);
1496:lp_solve_5.5/lp_presolve.c ****     set_bounds(lp, colnr, LOnew, UPnew);
 16453               		.loc 2 1496 0
 16454 6dfe 2DA5      		ldd r18,Y+45
 16455 6e00 3EA5      		ldd r19,Y+46
 16456 6e02 4FA5      		ldd r20,Y+47
 16457 6e04 58A9      		ldd r21,Y+48
 16458 6e06 89A5      		ldd r24,Y+41
 16459 6e08 9AA5      		ldd r25,Y+42
 16460 6e0a ABA5      		ldd r26,Y+43
 16461 6e0c BCA5      		ldd r27,Y+44
 16462 6e0e 6FA1      		ldd r22,Y+39
 16463 6e10 78A5      		ldd r23,Y+40
 16464 6e12 EF85      		ldd r30,Y+15
 16465 6e14 F889      		ldd r31,Y+16
 16466 6e16 7901      		movw r14,r18
 16467 6e18 8A01      		movw r16,r20
 16468 6e1a 9C01      		movw r18,r24
 16469 6e1c AD01      		movw r20,r26
 16470 6e1e CF01      		movw r24,r30
 16471 6e20 0E94 0000 		call set_bounds
 16472               	.L614:
1497:lp_solve_5.5/lp_presolve.c ****   }
1498:lp_solve_5.5/lp_presolve.c ****   if(count != NULL)
 16473               		.loc 2 1498 0
 16474 6e24 89A9      		ldd r24,Y+49
 16475 6e26 9AA9      		ldd r25,Y+50
 16476 6e28 892B      		or r24,r25
 16477 6e2a 01F0      		breq .L622
1499:lp_solve_5.5/lp_presolve.c ****     *count = newcount;
 16478               		.loc 2 1499 0
 16479 6e2c 89A9      		ldd r24,Y+49
 16480 6e2e 9AA9      		ldd r25,Y+50
 16481 6e30 2B81      		ldd r18,Y+3
 16482 6e32 3C81      		ldd r19,Y+4
 16483 6e34 FC01      		movw r30,r24
 16484 6e36 3183      		std Z+1,r19
 16485 6e38 2083      		st Z,r18
 16486               	.L622:
1500:lp_solve_5.5/lp_presolve.c **** 
1501:lp_solve_5.5/lp_presolve.c ****   return( TRUE );
 16487               		.loc 2 1501 0
 16488 6e3a 81E0      		ldi r24,lo8(1)
 16489               	.L619:
 16490               	/* epilogue start */
1502:lp_solve_5.5/lp_presolve.c **** }
 16491               		.loc 2 1502 0
 16492 6e3c E296      		adiw r28,50
 16493 6e3e 0FB6      		in __tmp_reg__,__SREG__
 16494 6e40 F894      		cli
 16495 6e42 DEBF      		out __SP_H__,r29
 16496 6e44 0FBE      		out __SREG__,__tmp_reg__
 16497 6e46 CDBF      		out __SP_L__,r28
 16498 6e48 DF91      		pop r29
 16499 6e4a CF91      		pop r28
 16500 6e4c 1F91      		pop r17
 16501 6e4e 0F91      		pop r16
 16502 6e50 FF90      		pop r15
 16503 6e52 EF90      		pop r14
 16504 6e54 DF90      		pop r13
 16505 6e56 CF90      		pop r12
 16506 6e58 0895      		ret
 16507               		.cfi_endproc
 16508               	.LFE51:
 16510               	.global	presolve_rowtighten
 16512               	presolve_rowtighten:
 16513               	.LFB52:
1503:lp_solve_5.5/lp_presolve.c **** 
1504:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_rowtighten(presolverec *psdata, int rownr, int *tally, MYBOOL intsonly)
1505:lp_solve_5.5/lp_presolve.c **** {
 16514               		.loc 2 1505 0
 16515               		.cfi_startproc
 16516 6e5a CF92      		push r12
 16517               	.LCFI251:
 16518               		.cfi_def_cfa_offset 3
 16519               		.cfi_offset 12, -2
 16520 6e5c DF92      		push r13
 16521               	.LCFI252:
 16522               		.cfi_def_cfa_offset 4
 16523               		.cfi_offset 13, -3
 16524 6e5e EF92      		push r14
 16525               	.LCFI253:
 16526               		.cfi_def_cfa_offset 5
 16527               		.cfi_offset 14, -4
 16528 6e60 FF92      		push r15
 16529               	.LCFI254:
 16530               		.cfi_def_cfa_offset 6
 16531               		.cfi_offset 15, -5
 16532 6e62 0F93      		push r16
 16533               	.LCFI255:
 16534               		.cfi_def_cfa_offset 7
 16535               		.cfi_offset 16, -6
 16536 6e64 1F93      		push r17
 16537               	.LCFI256:
 16538               		.cfi_def_cfa_offset 8
 16539               		.cfi_offset 17, -7
 16540 6e66 CF93      		push r28
 16541               	.LCFI257:
 16542               		.cfi_def_cfa_offset 9
 16543               		.cfi_offset 28, -8
 16544 6e68 DF93      		push r29
 16545               	.LCFI258:
 16546               		.cfi_def_cfa_offset 10
 16547               		.cfi_offset 29, -9
 16548 6e6a CDB7      		in r28,__SP_L__
 16549 6e6c DEB7      		in r29,__SP_H__
 16550               	.LCFI259:
 16551               		.cfi_def_cfa_register 28
 16552 6e6e E097      		sbiw r28,48
 16553               	.LCFI260:
 16554               		.cfi_def_cfa_offset 58
 16555 6e70 0FB6      		in __tmp_reg__,__SREG__
 16556 6e72 F894      		cli
 16557 6e74 DEBF      		out __SP_H__,r29
 16558 6e76 0FBE      		out __SREG__,__tmp_reg__
 16559 6e78 CDBF      		out __SP_L__,r28
 16560               	/* prologue: function */
 16561               	/* frame size = 48 */
 16562               	/* stack size = 56 */
 16563               	.L__stack_usage = 56
 16564 6e7a 9BA7      		std Y+43,r25
 16565 6e7c 8AA7      		std Y+42,r24
 16566 6e7e 7DA7      		std Y+45,r23
 16567 6e80 6CA7      		std Y+44,r22
 16568 6e82 5FA7      		std Y+47,r21
 16569 6e84 4EA7      		std Y+46,r20
 16570 6e86 28AB      		std Y+48,r18
1506:lp_solve_5.5/lp_presolve.c ****   lprec  *lp = psdata->lp;
 16571               		.loc 2 1506 0
 16572 6e88 8AA5      		ldd r24,Y+42
 16573 6e8a 9BA5      		ldd r25,Y+43
 16574 6e8c FC01      		movw r30,r24
 16575 6e8e 8289      		ldd r24,Z+18
 16576 6e90 9389      		ldd r25,Z+19
 16577 6e92 9A87      		std Y+10,r25
 16578 6e94 8987      		std Y+9,r24
1507:lp_solve_5.5/lp_presolve.c ****   MYBOOL rowbinds;
1508:lp_solve_5.5/lp_presolve.c ****   int    item = 0, jx, jjx, ix, idxn = 0, *idxbound = NULL, status = RUNNING;
 16579               		.loc 2 1508 0
 16580 6e96 198E      		std Y+25,__zero_reg__
 16581 6e98 188E      		std Y+24,__zero_reg__
 16582 6e9a 1E82      		std Y+6,__zero_reg__
 16583 6e9c 1D82      		std Y+5,__zero_reg__
 16584 6e9e 1B8E      		std Y+27,__zero_reg__
 16585 6ea0 1A8E      		std Y+26,__zero_reg__
 16586 6ea2 88E0      		ldi r24,lo8(8)
 16587 6ea4 90E0      		ldi r25,0
 16588 6ea6 9887      		std Y+8,r25
 16589 6ea8 8F83      		std Y+7,r24
1509:lp_solve_5.5/lp_presolve.c ****   REAL   *newbound = NULL, RHlo = get_rh_lower(lp, rownr), RHup = get_rh_upper(lp, rownr),
 16590               		.loc 2 1509 0
 16591 6eaa 1D8E      		std Y+29,__zero_reg__
 16592 6eac 1C8E      		std Y+28,__zero_reg__
 16593 6eae 2CA5      		ldd r18,Y+44
 16594 6eb0 3DA5      		ldd r19,Y+45
 16595 6eb2 8985      		ldd r24,Y+9
 16596 6eb4 9A85      		ldd r25,Y+10
 16597 6eb6 B901      		movw r22,r18
 16598 6eb8 0E94 0000 		call get_rh_lower
 16599 6ebc DC01      		movw r26,r24
 16600 6ebe CB01      		movw r24,r22
 16601 6ec0 8B87      		std Y+11,r24
 16602 6ec2 9C87      		std Y+12,r25
 16603 6ec4 AD87      		std Y+13,r26
 16604 6ec6 BE87      		std Y+14,r27
 16605 6ec8 2CA5      		ldd r18,Y+44
 16606 6eca 3DA5      		ldd r19,Y+45
 16607 6ecc 8985      		ldd r24,Y+9
 16608 6ece 9A85      		ldd r25,Y+10
 16609 6ed0 B901      		movw r22,r18
 16610 6ed2 0E94 0000 		call get_rh_upper
 16611 6ed6 DC01      		movw r26,r24
 16612 6ed8 CB01      		movw r24,r22
 16613 6eda 8F87      		std Y+15,r24
 16614 6edc 988B      		std Y+16,r25
 16615 6ede A98B      		std Y+17,r26
 16616 6ee0 BA8B      		std Y+18,r27
1510:lp_solve_5.5/lp_presolve.c ****          VARlo, VARup, Aval;
1511:lp_solve_5.5/lp_presolve.c ****   MATrec *mat = lp->matA;
 16617               		.loc 2 1511 0
 16618 6ee2 8985      		ldd r24,Y+9
 16619 6ee4 9A85      		ldd r25,Y+10
 16620 6ee6 8A54      		subi r24,74
 16621 6ee8 9D4F      		sbci r25,-3
 16622 6eea FC01      		movw r30,r24
 16623 6eec 8081      		ld r24,Z
 16624 6eee 9181      		ldd r25,Z+1
 16625 6ef0 9C8B      		std Y+20,r25
 16626 6ef2 8B8B      		std Y+19,r24
1512:lp_solve_5.5/lp_presolve.c **** 
1513:lp_solve_5.5/lp_presolve.c ****   jx = presolve_rowlength(psdata, rownr);
 16627               		.loc 2 1513 0
 16628 6ef4 2CA5      		ldd r18,Y+44
 16629 6ef6 3DA5      		ldd r19,Y+45
 16630 6ef8 8AA5      		ldd r24,Y+42
 16631 6efa 9BA5      		ldd r25,Y+43
 16632 6efc B901      		movw r22,r18
 16633 6efe 0E94 0000 		call presolve_rowlength
 16634 6f02 9A83      		std Y+2,r25
 16635 6f04 8983      		std Y+1,r24
1514:lp_solve_5.5/lp_presolve.c ****   allocREAL(lp, &newbound, 2*jx, TRUE);
 16636               		.loc 2 1514 0
 16637 6f06 8981      		ldd r24,Y+1
 16638 6f08 9A81      		ldd r25,Y+2
 16639 6f0a AC01      		movw r20,r24
 16640 6f0c 440F      		lsl r20
 16641 6f0e 551F      		rol r21
 16642 6f10 BE01      		movw r22,r28
 16643 6f12 645E      		subi r22,-28
 16644 6f14 7F4F      		sbci r23,-1
 16645 6f16 8985      		ldd r24,Y+9
 16646 6f18 9A85      		ldd r25,Y+10
 16647 6f1a 21E0      		ldi r18,lo8(1)
 16648 6f1c 0E94 0000 		call allocREAL
1515:lp_solve_5.5/lp_presolve.c ****   allocINT (lp, &idxbound, 2*jx, TRUE);
 16649               		.loc 2 1515 0
 16650 6f20 8981      		ldd r24,Y+1
 16651 6f22 9A81      		ldd r25,Y+2
 16652 6f24 AC01      		movw r20,r24
 16653 6f26 440F      		lsl r20
 16654 6f28 551F      		rol r21
 16655 6f2a BE01      		movw r22,r28
 16656 6f2c 665E      		subi r22,-26
 16657 6f2e 7F4F      		sbci r23,-1
 16658 6f30 8985      		ldd r24,Y+9
 16659 6f32 9A85      		ldd r25,Y+10
 16660 6f34 21E0      		ldi r18,lo8(1)
 16661 6f36 0E94 0000 		call allocINT
1516:lp_solve_5.5/lp_presolve.c **** 
1517:lp_solve_5.5/lp_presolve.c ****   /* Identify bound tightening for each active variable in the constraint */
1518:lp_solve_5.5/lp_presolve.c ****   for(jx = presolve_nextcol(psdata, rownr, &item); jx >= 0;
 16662               		.loc 2 1518 0
 16663 6f3a AE01      		movw r20,r28
 16664 6f3c 485E      		subi r20,-24
 16665 6f3e 5F4F      		sbci r21,-1
 16666 6f40 2CA5      		ldd r18,Y+44
 16667 6f42 3DA5      		ldd r19,Y+45
 16668 6f44 8AA5      		ldd r24,Y+42
 16669 6f46 9BA5      		ldd r25,Y+43
 16670 6f48 B901      		movw r22,r18
 16671 6f4a 0E94 0000 		call presolve_nextcol
 16672 6f4e 9A83      		std Y+2,r25
 16673 6f50 8983      		std Y+1,r24
 16674 6f52 00C0      		rjmp .L663
 16675               	.L669:
1519:lp_solve_5.5/lp_presolve.c ****       jx = presolve_nextcol(psdata, rownr, &item)) {
1520:lp_solve_5.5/lp_presolve.c ****     jjx = ROW_MAT_COLNR(jx);
 16676               		.loc 2 1520 0
 16677 6f54 8B89      		ldd r24,Y+19
 16678 6f56 9C89      		ldd r25,Y+20
 16679 6f58 FC01      		movw r30,r24
 16680 6f5a 2485      		ldd r18,Z+12
 16681 6f5c 3585      		ldd r19,Z+13
 16682 6f5e 8B89      		ldd r24,Y+19
 16683 6f60 9C89      		ldd r25,Y+20
 16684 6f62 FC01      		movw r30,r24
 16685 6f64 4689      		ldd r20,Z+22
 16686 6f66 5789      		ldd r21,Z+23
 16687 6f68 8981      		ldd r24,Y+1
 16688 6f6a 9A81      		ldd r25,Y+2
 16689 6f6c 880F      		lsl r24
 16690 6f6e 991F      		rol r25
 16691 6f70 840F      		add r24,r20
 16692 6f72 951F      		adc r25,r21
 16693 6f74 FC01      		movw r30,r24
 16694 6f76 8081      		ld r24,Z
 16695 6f78 9181      		ldd r25,Z+1
 16696 6f7a 880F      		lsl r24
 16697 6f7c 991F      		rol r25
 16698 6f7e 820F      		add r24,r18
 16699 6f80 931F      		adc r25,r19
 16700 6f82 FC01      		movw r30,r24
 16701 6f84 8081      		ld r24,Z
 16702 6f86 9181      		ldd r25,Z+1
 16703 6f88 9E8B      		std Y+22,r25
 16704 6f8a 8D8B      		std Y+21,r24
1521:lp_solve_5.5/lp_presolve.c ****     Aval = ROW_MAT_VALUE(jx);
 16705               		.loc 2 1521 0
 16706 6f8c 8B89      		ldd r24,Y+19
 16707 6f8e 9C89      		ldd r25,Y+20
 16708 6f90 FC01      		movw r30,r24
 16709 6f92 2089      		ldd r18,Z+16
 16710 6f94 3189      		ldd r19,Z+17
 16711 6f96 8B89      		ldd r24,Y+19
 16712 6f98 9C89      		ldd r25,Y+20
 16713 6f9a FC01      		movw r30,r24
 16714 6f9c 4689      		ldd r20,Z+22
 16715 6f9e 5789      		ldd r21,Z+23
 16716 6fa0 8981      		ldd r24,Y+1
 16717 6fa2 9A81      		ldd r25,Y+2
 16718 6fa4 880F      		lsl r24
 16719 6fa6 991F      		rol r25
 16720 6fa8 840F      		add r24,r20
 16721 6faa 951F      		adc r25,r21
 16722 6fac FC01      		movw r30,r24
 16723 6fae 8081      		ld r24,Z
 16724 6fb0 9181      		ldd r25,Z+1
 16725 6fb2 880F      		lsl r24
 16726 6fb4 991F      		rol r25
 16727 6fb6 880F      		lsl r24
 16728 6fb8 991F      		rol r25
 16729 6fba 820F      		add r24,r18
 16730 6fbc 931F      		adc r25,r19
 16731 6fbe FC01      		movw r30,r24
 16732 6fc0 8081      		ld r24,Z
 16733 6fc2 9181      		ldd r25,Z+1
 16734 6fc4 A281      		ldd r26,Z+2
 16735 6fc6 B381      		ldd r27,Z+3
 16736 6fc8 8EA3      		std Y+38,r24
 16737 6fca 9FA3      		std Y+39,r25
 16738 6fcc A8A7      		std Y+40,r26
 16739 6fce B9A7      		std Y+41,r27
1522:lp_solve_5.5/lp_presolve.c ****     Aval = my_chsign(rownr, Aval);
 16740               		.loc 2 1522 0
 16741 6fd0 8CA5      		ldd r24,Y+44
 16742 6fd2 9DA5      		ldd r25,Y+45
 16743 6fd4 892B      		or r24,r25
 16744 6fd6 01F0      		breq .L664
 16745               		.loc 2 1522 0 is_stmt 0 discriminator 1
 16746 6fd8 8EA1      		ldd r24,Y+38
 16747 6fda 9FA1      		ldd r25,Y+39
 16748 6fdc A8A5      		ldd r26,Y+40
 16749 6fde B9A5      		ldd r27,Y+41
 16750 6fe0 20E0      		ldi r18,0
 16751 6fe2 30E0      		ldi r19,0
 16752 6fe4 A901      		movw r20,r18
 16753 6fe6 BC01      		movw r22,r24
 16754 6fe8 CD01      		movw r24,r26
 16755 6fea 0E94 0000 		call __nesf2
 16756 6fee 8823      		tst r24
 16757 6ff0 01F0      		breq .L664
 16758               		.loc 2 1522 0 discriminator 3
 16759 6ff2 8EA1      		ldd r24,Y+38
 16760 6ff4 9FA1      		ldd r25,Y+39
 16761 6ff6 A8A5      		ldd r26,Y+40
 16762 6ff8 B9A5      		ldd r27,Y+41
 16763 6ffa B058      		subi r27,0x80
 16764 6ffc 00C0      		rjmp .L666
 16765               	.L664:
 16766               		.loc 2 1522 0 discriminator 4
 16767 6ffe 8EA1      		ldd r24,Y+38
 16768 7000 9FA1      		ldd r25,Y+39
 16769 7002 A8A5      		ldd r26,Y+40
 16770 7004 B9A5      		ldd r27,Y+41
 16771               	.L666:
 16772               		.loc 2 1522 0 discriminator 6
 16773 7006 8EA3      		std Y+38,r24
 16774 7008 9FA3      		std Y+39,r25
 16775 700a A8A7      		std Y+40,r26
 16776 700c B9A7      		std Y+41,r27
1523:lp_solve_5.5/lp_presolve.c **** 
1524:lp_solve_5.5/lp_presolve.c ****     VARlo = RHlo;
 16777               		.loc 2 1524 0 is_stmt 1 discriminator 6
 16778 700e 8B85      		ldd r24,Y+11
 16779 7010 9C85      		ldd r25,Y+12
 16780 7012 AD85      		ldd r26,Y+13
 16781 7014 BE85      		ldd r27,Y+14
 16782 7016 8E8F      		std Y+30,r24
 16783 7018 9F8F      		std Y+31,r25
 16784 701a A8A3      		std Y+32,r26
 16785 701c B9A3      		std Y+33,r27
1525:lp_solve_5.5/lp_presolve.c ****     VARup = RHup;
 16786               		.loc 2 1525 0 discriminator 6
 16787 701e 8F85      		ldd r24,Y+15
 16788 7020 9889      		ldd r25,Y+16
 16789 7022 A989      		ldd r26,Y+17
 16790 7024 BA89      		ldd r27,Y+18
 16791 7026 8AA3      		std Y+34,r24
 16792 7028 9BA3      		std Y+35,r25
 16793 702a ACA3      		std Y+36,r26
 16794 702c BDA3      		std Y+37,r27
1526:lp_solve_5.5/lp_presolve.c ****     presolve_multibounds(psdata, rownr,jjx, &VARlo, &VARup, &Aval, &rowbinds);
 16795               		.loc 2 1526 0 discriminator 6
 16796 702e 8E01      		movw r16,r28
 16797 7030 095E      		subi r16,-23
 16798 7032 1F4F      		sbci r17,-1
 16799 7034 DE01      		movw r26,r28
 16800 7036 9696      		adiw r26,38
 16801 7038 FE01      		movw r30,r28
 16802 703a B296      		adiw r30,34
 16803 703c 9E01      		movw r18,r28
 16804 703e 225E      		subi r18,-30
 16805 7040 3F4F      		sbci r19,-1
 16806 7042 4D89      		ldd r20,Y+21
 16807 7044 5E89      		ldd r21,Y+22
 16808 7046 6CA5      		ldd r22,Y+44
 16809 7048 7DA5      		ldd r23,Y+45
 16810 704a 8AA5      		ldd r24,Y+42
 16811 704c 9BA5      		ldd r25,Y+43
 16812 704e 6801      		movw r12,r16
 16813 7050 7D01      		movw r14,r26
 16814 7052 8F01      		movw r16,r30
 16815 7054 0E94 0000 		call presolve_multibounds
1527:lp_solve_5.5/lp_presolve.c ****     if(rowbinds & TRUE) {
 16816               		.loc 2 1527 0 discriminator 6
 16817 7058 8F89      		ldd r24,Y+23
 16818 705a 882F      		mov r24,r24
 16819 705c 90E0      		ldi r25,0
 16820 705e 8170      		andi r24,1
 16821 7060 9927      		clr r25
 16822 7062 892B      		or r24,r25
 16823 7064 01F0      		breq .L667
1528:lp_solve_5.5/lp_presolve.c ****       idxbound[idxn] = -jjx;
 16824               		.loc 2 1528 0
 16825 7066 2A8D      		ldd r18,Y+26
 16826 7068 3B8D      		ldd r19,Y+27
 16827 706a 8D81      		ldd r24,Y+5
 16828 706c 9E81      		ldd r25,Y+6
 16829 706e 880F      		lsl r24
 16830 7070 991F      		rol r25
 16831 7072 820F      		add r24,r18
 16832 7074 931F      		adc r25,r19
 16833 7076 2D89      		ldd r18,Y+21
 16834 7078 3E89      		ldd r19,Y+22
 16835 707a 3195      		neg r19
 16836 707c 2195      		neg r18
 16837 707e 3109      		sbc r19,__zero_reg__
 16838 7080 FC01      		movw r30,r24
 16839 7082 3183      		std Z+1,r19
 16840 7084 2083      		st Z,r18
1529:lp_solve_5.5/lp_presolve.c ****       newbound[idxn] = VARlo;
 16841               		.loc 2 1529 0
 16842 7086 2C8D      		ldd r18,Y+28
 16843 7088 3D8D      		ldd r19,Y+29
 16844 708a 8D81      		ldd r24,Y+5
 16845 708c 9E81      		ldd r25,Y+6
 16846 708e 880F      		lsl r24
 16847 7090 991F      		rol r25
 16848 7092 880F      		lsl r24
 16849 7094 991F      		rol r25
 16850 7096 280F      		add r18,r24
 16851 7098 391F      		adc r19,r25
 16852 709a 8E8D      		ldd r24,Y+30
 16853 709c 9F8D      		ldd r25,Y+31
 16854 709e A8A1      		ldd r26,Y+32
 16855 70a0 B9A1      		ldd r27,Y+33
 16856 70a2 F901      		movw r30,r18
 16857 70a4 8083      		st Z,r24
 16858 70a6 9183      		std Z+1,r25
 16859 70a8 A283      		std Z+2,r26
 16860 70aa B383      		std Z+3,r27
1530:lp_solve_5.5/lp_presolve.c ****       idxn++;
 16861               		.loc 2 1530 0
 16862 70ac 8D81      		ldd r24,Y+5
 16863 70ae 9E81      		ldd r25,Y+6
 16864 70b0 0196      		adiw r24,1
 16865 70b2 9E83      		std Y+6,r25
 16866 70b4 8D83      		std Y+5,r24
 16867               	.L667:
1531:lp_solve_5.5/lp_presolve.c ****     }
1532:lp_solve_5.5/lp_presolve.c ****     if(rowbinds & AUTOMATIC) {
 16868               		.loc 2 1532 0
 16869 70b6 8F89      		ldd r24,Y+23
 16870 70b8 882F      		mov r24,r24
 16871 70ba 90E0      		ldi r25,0
 16872 70bc 8270      		andi r24,2
 16873 70be 9927      		clr r25
 16874 70c0 892B      		or r24,r25
 16875 70c2 01F0      		breq .L668
1533:lp_solve_5.5/lp_presolve.c ****       idxbound[idxn] = jjx;
 16876               		.loc 2 1533 0
 16877 70c4 2A8D      		ldd r18,Y+26
 16878 70c6 3B8D      		ldd r19,Y+27
 16879 70c8 8D81      		ldd r24,Y+5
 16880 70ca 9E81      		ldd r25,Y+6
 16881 70cc 880F      		lsl r24
 16882 70ce 991F      		rol r25
 16883 70d0 820F      		add r24,r18
 16884 70d2 931F      		adc r25,r19
 16885 70d4 2D89      		ldd r18,Y+21
 16886 70d6 3E89      		ldd r19,Y+22
 16887 70d8 FC01      		movw r30,r24
 16888 70da 3183      		std Z+1,r19
 16889 70dc 2083      		st Z,r18
1534:lp_solve_5.5/lp_presolve.c ****       newbound[idxn] = VARup;
 16890               		.loc 2 1534 0
 16891 70de 2C8D      		ldd r18,Y+28
 16892 70e0 3D8D      		ldd r19,Y+29
 16893 70e2 8D81      		ldd r24,Y+5
 16894 70e4 9E81      		ldd r25,Y+6
 16895 70e6 880F      		lsl r24
 16896 70e8 991F      		rol r25
 16897 70ea 880F      		lsl r24
 16898 70ec 991F      		rol r25
 16899 70ee 280F      		add r18,r24
 16900 70f0 391F      		adc r19,r25
 16901 70f2 8AA1      		ldd r24,Y+34
 16902 70f4 9BA1      		ldd r25,Y+35
 16903 70f6 ACA1      		ldd r26,Y+36
 16904 70f8 BDA1      		ldd r27,Y+37
 16905 70fa F901      		movw r30,r18
 16906 70fc 8083      		st Z,r24
 16907 70fe 9183      		std Z+1,r25
 16908 7100 A283      		std Z+2,r26
 16909 7102 B383      		std Z+3,r27
1535:lp_solve_5.5/lp_presolve.c ****       idxn++;
 16910               		.loc 2 1535 0
 16911 7104 8D81      		ldd r24,Y+5
 16912 7106 9E81      		ldd r25,Y+6
 16913 7108 0196      		adiw r24,1
 16914 710a 9E83      		std Y+6,r25
 16915 710c 8D83      		std Y+5,r24
 16916               	.L668:
1519:lp_solve_5.5/lp_presolve.c ****     jjx = ROW_MAT_COLNR(jx);
 16917               		.loc 2 1519 0
 16918 710e AE01      		movw r20,r28
 16919 7110 485E      		subi r20,-24
 16920 7112 5F4F      		sbci r21,-1
 16921 7114 2CA5      		ldd r18,Y+44
 16922 7116 3DA5      		ldd r19,Y+45
 16923 7118 8AA5      		ldd r24,Y+42
 16924 711a 9BA5      		ldd r25,Y+43
 16925 711c B901      		movw r22,r18
 16926 711e 0E94 0000 		call presolve_nextcol
 16927 7122 9A83      		std Y+2,r25
 16928 7124 8983      		std Y+1,r24
 16929               	.L663:
1518:lp_solve_5.5/lp_presolve.c ****       jx = presolve_nextcol(psdata, rownr, &item)) {
 16930               		.loc 2 1518 0 discriminator 1
 16931 7126 8981      		ldd r24,Y+1
 16932 7128 9A81      		ldd r25,Y+2
 16933 712a 9923      		tst r25
 16934 712c 04F0      		brlt .+2
 16935 712e 00C0      		rjmp .L669
1536:lp_solve_5.5/lp_presolve.c ****     }
1537:lp_solve_5.5/lp_presolve.c ****   }
1538:lp_solve_5.5/lp_presolve.c **** 
1539:lp_solve_5.5/lp_presolve.c ****   /* Loop over the bounds identified for tightening and perform update */
1540:lp_solve_5.5/lp_presolve.c ****   ix = 0;
 16936               		.loc 2 1540 0
 16937 7130 1C82      		std Y+4,__zero_reg__
 16938 7132 1B82      		std Y+3,__zero_reg__
1541:lp_solve_5.5/lp_presolve.c ****   while(ix < idxn) {
 16939               		.loc 2 1541 0
 16940 7134 00C0      		rjmp .L670
 16941               	.L681:
1542:lp_solve_5.5/lp_presolve.c ****     jjx = idxbound[ix];
 16942               		.loc 2 1542 0
 16943 7136 2A8D      		ldd r18,Y+26
 16944 7138 3B8D      		ldd r19,Y+27
 16945 713a 8B81      		ldd r24,Y+3
 16946 713c 9C81      		ldd r25,Y+4
 16947 713e 880F      		lsl r24
 16948 7140 991F      		rol r25
 16949 7142 820F      		add r24,r18
 16950 7144 931F      		adc r25,r19
 16951 7146 FC01      		movw r30,r24
 16952 7148 8081      		ld r24,Z
 16953 714a 9181      		ldd r25,Z+1
 16954 714c 9E8B      		std Y+22,r25
 16955 714e 8D8B      		std Y+21,r24
1543:lp_solve_5.5/lp_presolve.c ****     jx = abs(jjx);
 16956               		.loc 2 1543 0
 16957 7150 8D89      		ldd r24,Y+21
 16958 7152 9E89      		ldd r25,Y+22
 16959 7154 9923      		tst r25
 16960 7156 04F4      		brge .L671
 16961 7158 9195      		neg r25
 16962 715a 8195      		neg r24
 16963 715c 9109      		sbc r25,__zero_reg__
 16964               	.L671:
 16965 715e 9A83      		std Y+2,r25
 16966 7160 8983      		std Y+1,r24
1544:lp_solve_5.5/lp_presolve.c **** 
1545:lp_solve_5.5/lp_presolve.c ****     /* Skip free variables and non-ints, if specified */
1546:lp_solve_5.5/lp_presolve.c ****     if(is_unbounded(lp, jx) ||
 16967               		.loc 2 1546 0
 16968 7162 2981      		ldd r18,Y+1
 16969 7164 3A81      		ldd r19,Y+2
 16970 7166 8985      		ldd r24,Y+9
 16971 7168 9A85      		ldd r25,Y+10
 16972 716a B901      		movw r22,r18
 16973 716c 0E94 0000 		call is_unbounded
 16974 7170 8823      		tst r24
 16975 7172 01F0      		breq .+2
 16976 7174 00C0      		rjmp .L670
 16977               		.loc 2 1546 0 is_stmt 0 discriminator 1
 16978 7176 88A9      		ldd r24,Y+48
 16979 7178 8823      		tst r24
 16980 717a 01F0      		breq .L673
1547:lp_solve_5.5/lp_presolve.c ****        (intsonly && !is_int(lp, jx)))
 16981               		.loc 2 1547 0 is_stmt 1
 16982 717c 2981      		ldd r18,Y+1
 16983 717e 3A81      		ldd r19,Y+2
 16984 7180 8985      		ldd r24,Y+9
 16985 7182 9A85      		ldd r25,Y+10
 16986 7184 B901      		movw r22,r18
 16987 7186 0E94 0000 		call is_int
 16988 718a 8823      		tst r24
 16989 718c 01F4      		brne .L673
1548:lp_solve_5.5/lp_presolve.c ****       continue;
 16990               		.loc 2 1548 0
 16991 718e 00C0      		rjmp .L670
 16992               	.L673:
1549:lp_solve_5.5/lp_presolve.c **** 
1550:lp_solve_5.5/lp_presolve.c ****     VARlo = get_lowbo(lp, jx);
 16993               		.loc 2 1550 0
 16994 7190 2981      		ldd r18,Y+1
 16995 7192 3A81      		ldd r19,Y+2
 16996 7194 8985      		ldd r24,Y+9
 16997 7196 9A85      		ldd r25,Y+10
 16998 7198 B901      		movw r22,r18
 16999 719a 0E94 0000 		call get_lowbo
 17000 719e DC01      		movw r26,r24
 17001 71a0 CB01      		movw r24,r22
 17002 71a2 8E8F      		std Y+30,r24
 17003 71a4 9F8F      		std Y+31,r25
 17004 71a6 A8A3      		std Y+32,r26
 17005 71a8 B9A3      		std Y+33,r27
1551:lp_solve_5.5/lp_presolve.c ****     VARup = get_upbo(lp, jx);
 17006               		.loc 2 1551 0
 17007 71aa 2981      		ldd r18,Y+1
 17008 71ac 3A81      		ldd r19,Y+2
 17009 71ae 8985      		ldd r24,Y+9
 17010 71b0 9A85      		ldd r25,Y+10
 17011 71b2 B901      		movw r22,r18
 17012 71b4 0E94 0000 		call get_upbo
 17013 71b8 DC01      		movw r26,r24
 17014 71ba CB01      		movw r24,r22
 17015 71bc 8AA3      		std Y+34,r24
 17016 71be 9BA3      		std Y+35,r25
 17017 71c0 ACA3      		std Y+36,r26
 17018 71c2 BDA3      		std Y+37,r27
1552:lp_solve_5.5/lp_presolve.c ****     /* while((ix < idxn) && (jx == abs(jjx))) { */
1553:lp_solve_5.5/lp_presolve.c ****     while((ix < idxn) && (jx == abs((jjx = idxbound[ix])))) {
 17019               		.loc 2 1553 0
 17020 71c4 00C0      		rjmp .L674
 17021               	.L679:
1554:lp_solve_5.5/lp_presolve.c ****       if(jjx < 0)
 17022               		.loc 2 1554 0
 17023 71c6 8D89      		ldd r24,Y+21
 17024 71c8 9E89      		ldd r25,Y+22
 17025 71ca 9923      		tst r25
 17026 71cc 04F4      		brge .L675
1555:lp_solve_5.5/lp_presolve.c ****         VARlo = newbound[ix];
 17027               		.loc 2 1555 0
 17028 71ce 2C8D      		ldd r18,Y+28
 17029 71d0 3D8D      		ldd r19,Y+29
 17030 71d2 8B81      		ldd r24,Y+3
 17031 71d4 9C81      		ldd r25,Y+4
 17032 71d6 880F      		lsl r24
 17033 71d8 991F      		rol r25
 17034 71da 880F      		lsl r24
 17035 71dc 991F      		rol r25
 17036 71de 820F      		add r24,r18
 17037 71e0 931F      		adc r25,r19
 17038 71e2 FC01      		movw r30,r24
 17039 71e4 8081      		ld r24,Z
 17040 71e6 9181      		ldd r25,Z+1
 17041 71e8 A281      		ldd r26,Z+2
 17042 71ea B381      		ldd r27,Z+3
 17043 71ec 8E8F      		std Y+30,r24
 17044 71ee 9F8F      		std Y+31,r25
 17045 71f0 A8A3      		std Y+32,r26
 17046 71f2 B9A3      		std Y+33,r27
 17047 71f4 00C0      		rjmp .L676
 17048               	.L675:
1556:lp_solve_5.5/lp_presolve.c ****       else
1557:lp_solve_5.5/lp_presolve.c ****         VARup = newbound[ix];
 17049               		.loc 2 1557 0
 17050 71f6 2C8D      		ldd r18,Y+28
 17051 71f8 3D8D      		ldd r19,Y+29
 17052 71fa 8B81      		ldd r24,Y+3
 17053 71fc 9C81      		ldd r25,Y+4
 17054 71fe 880F      		lsl r24
 17055 7200 991F      		rol r25
 17056 7202 880F      		lsl r24
 17057 7204 991F      		rol r25
 17058 7206 820F      		add r24,r18
 17059 7208 931F      		adc r25,r19
 17060 720a FC01      		movw r30,r24
 17061 720c 8081      		ld r24,Z
 17062 720e 9181      		ldd r25,Z+1
 17063 7210 A281      		ldd r26,Z+2
 17064 7212 B381      		ldd r27,Z+3
 17065 7214 8AA3      		std Y+34,r24
 17066 7216 9BA3      		std Y+35,r25
 17067 7218 ACA3      		std Y+36,r26
 17068 721a BDA3      		std Y+37,r27
 17069               	.L676:
1558:lp_solve_5.5/lp_presolve.c ****       ix++;
 17070               		.loc 2 1558 0
 17071 721c 8B81      		ldd r24,Y+3
 17072 721e 9C81      		ldd r25,Y+4
 17073 7220 0196      		adiw r24,1
 17074 7222 9C83      		std Y+4,r25
 17075 7224 8B83      		std Y+3,r24
 17076               	.L674:
1553:lp_solve_5.5/lp_presolve.c ****       if(jjx < 0)
 17077               		.loc 2 1553 0
 17078 7226 2B81      		ldd r18,Y+3
 17079 7228 3C81      		ldd r19,Y+4
 17080 722a 8D81      		ldd r24,Y+5
 17081 722c 9E81      		ldd r25,Y+6
 17082 722e 2817      		cp r18,r24
 17083 7230 3907      		cpc r19,r25
 17084 7232 04F4      		brge .L677
1553:lp_solve_5.5/lp_presolve.c ****       if(jjx < 0)
 17085               		.loc 2 1553 0 is_stmt 0 discriminator 1
 17086 7234 2A8D      		ldd r18,Y+26
 17087 7236 3B8D      		ldd r19,Y+27
 17088 7238 8B81      		ldd r24,Y+3
 17089 723a 9C81      		ldd r25,Y+4
 17090 723c 880F      		lsl r24
 17091 723e 991F      		rol r25
 17092 7240 820F      		add r24,r18
 17093 7242 931F      		adc r25,r19
 17094 7244 FC01      		movw r30,r24
 17095 7246 8081      		ld r24,Z
 17096 7248 9181      		ldd r25,Z+1
 17097 724a 9E8B      		std Y+22,r25
 17098 724c 8D8B      		std Y+21,r24
 17099 724e 8D89      		ldd r24,Y+21
 17100 7250 9E89      		ldd r25,Y+22
 17101 7252 9923      		tst r25
 17102 7254 04F4      		brge .L678
 17103 7256 9195      		neg r25
 17104 7258 8195      		neg r24
 17105 725a 9109      		sbc r25,__zero_reg__
 17106               	.L678:
 17107 725c 9C01      		movw r18,r24
 17108 725e 8981      		ldd r24,Y+1
 17109 7260 9A81      		ldd r25,Y+2
 17110 7262 2817      		cp r18,r24
 17111 7264 3907      		cpc r19,r25
 17112 7266 01F4      		brne .+2
 17113 7268 00C0      		rjmp .L679
 17114               	.L677:
1559:lp_solve_5.5/lp_presolve.c ****     }
1560:lp_solve_5.5/lp_presolve.c ****     if(!presolve_coltighten(psdata, jx, VARlo, VARup, tally)) {
 17115               		.loc 2 1560 0 is_stmt 1
 17116 726a 2AA1      		ldd r18,Y+34
 17117 726c 3BA1      		ldd r19,Y+35
 17118 726e 4CA1      		ldd r20,Y+36
 17119 7270 5DA1      		ldd r21,Y+37
 17120 7272 8E8D      		ldd r24,Y+30
 17121 7274 9F8D      		ldd r25,Y+31
 17122 7276 A8A1      		ldd r26,Y+32
 17123 7278 B9A1      		ldd r27,Y+33
 17124 727a 0EA5      		ldd r16,Y+46
 17125 727c 1FA5      		ldd r17,Y+47
 17126 727e 6981      		ldd r22,Y+1
 17127 7280 7A81      		ldd r23,Y+2
 17128 7282 EAA5      		ldd r30,Y+42
 17129 7284 FBA5      		ldd r31,Y+43
 17130 7286 6801      		movw r12,r16
 17131 7288 7901      		movw r14,r18
 17132 728a 8A01      		movw r16,r20
 17133 728c 9C01      		movw r18,r24
 17134 728e AD01      		movw r20,r26
 17135 7290 CF01      		movw r24,r30
 17136 7292 0E94 0000 		call presolve_coltighten
 17137 7296 8823      		tst r24
 17138 7298 01F4      		brne .L670
1561:lp_solve_5.5/lp_presolve.c ****       status = presolve_setstatus(psdata, INFEASIBLE);
 17139               		.loc 2 1561 0
 17140 729a 8AA5      		ldd r24,Y+42
 17141 729c 9BA5      		ldd r25,Y+43
 17142 729e 20E0      		ldi r18,lo8(.LC21)
 17143 72a0 30E0      		ldi r19,hi8(.LC21)
 17144 72a2 49E1      		ldi r20,lo8(25)
 17145 72a4 56E0      		ldi r21,lo8(6)
 17146 72a6 62E0      		ldi r22,lo8(2)
 17147 72a8 70E0      		ldi r23,0
 17148 72aa 0E94 0000 		call presolve_setstatusex
 17149 72ae 9887      		std Y+8,r25
 17150 72b0 8F83      		std Y+7,r24
1562:lp_solve_5.5/lp_presolve.c ****       break;
 17151               		.loc 2 1562 0
 17152 72b2 00C0      		rjmp .L680
 17153               	.L670:
1541:lp_solve_5.5/lp_presolve.c ****     jjx = idxbound[ix];
 17154               		.loc 2 1541 0
 17155 72b4 2B81      		ldd r18,Y+3
 17156 72b6 3C81      		ldd r19,Y+4
 17157 72b8 8D81      		ldd r24,Y+5
 17158 72ba 9E81      		ldd r25,Y+6
 17159 72bc 2817      		cp r18,r24
 17160 72be 3907      		cpc r19,r25
 17161 72c0 04F4      		brge .+2
 17162 72c2 00C0      		rjmp .L681
 17163               	.L680:
1563:lp_solve_5.5/lp_presolve.c ****     }
1564:lp_solve_5.5/lp_presolve.c ****   }
1565:lp_solve_5.5/lp_presolve.c **** 
1566:lp_solve_5.5/lp_presolve.c ****   FREE(newbound);
 17164               		.loc 2 1566 0
 17165 72c4 8C8D      		ldd r24,Y+28
 17166 72c6 9D8D      		ldd r25,Y+29
 17167 72c8 892B      		or r24,r25
 17168 72ca 01F0      		breq .L682
 17169               		.loc 2 1566 0 is_stmt 0 discriminator 1
 17170 72cc 8C8D      		ldd r24,Y+28
 17171 72ce 9D8D      		ldd r25,Y+29
 17172 72d0 0E94 0000 		call free
 17173 72d4 1D8E      		std Y+29,__zero_reg__
 17174 72d6 1C8E      		std Y+28,__zero_reg__
 17175               	.L682:
1567:lp_solve_5.5/lp_presolve.c ****   FREE(idxbound);
 17176               		.loc 2 1567 0 is_stmt 1
 17177 72d8 8A8D      		ldd r24,Y+26
 17178 72da 9B8D      		ldd r25,Y+27
 17179 72dc 892B      		or r24,r25
 17180 72de 01F0      		breq .L683
 17181               		.loc 2 1567 0 is_stmt 0 discriminator 1
 17182 72e0 8A8D      		ldd r24,Y+26
 17183 72e2 9B8D      		ldd r25,Y+27
 17184 72e4 0E94 0000 		call free
 17185 72e8 1B8E      		std Y+27,__zero_reg__
 17186 72ea 1A8E      		std Y+26,__zero_reg__
 17187               	.L683:
1568:lp_solve_5.5/lp_presolve.c **** 
1569:lp_solve_5.5/lp_presolve.c ****   return(status);
 17188               		.loc 2 1569 0 is_stmt 1
 17189 72ec 8F81      		ldd r24,Y+7
 17190 72ee 9885      		ldd r25,Y+8
 17191               	/* epilogue start */
1570:lp_solve_5.5/lp_presolve.c **** }
 17192               		.loc 2 1570 0
 17193 72f0 E096      		adiw r28,48
 17194 72f2 0FB6      		in __tmp_reg__,__SREG__
 17195 72f4 F894      		cli
 17196 72f6 DEBF      		out __SP_H__,r29
 17197 72f8 0FBE      		out __SREG__,__tmp_reg__
 17198 72fa CDBF      		out __SP_L__,r28
 17199 72fc DF91      		pop r29
 17200 72fe CF91      		pop r28
 17201 7300 1F91      		pop r17
 17202 7302 0F91      		pop r16
 17203 7304 FF90      		pop r15
 17204 7306 EF90      		pop r14
 17205 7308 DF90      		pop r13
 17206 730a CF90      		pop r12
 17207 730c 0895      		ret
 17208               		.cfi_endproc
 17209               	.LFE52:
 17211               	.global	set_dv_bounds
 17213               	set_dv_bounds:
 17214               	.LFB53:
1571:lp_solve_5.5/lp_presolve.c **** 
1572:lp_solve_5.5/lp_presolve.c **** STATIC void set_dv_bounds(presolverec *psdata, int rownr, REAL lowbo, REAL upbo)
1573:lp_solve_5.5/lp_presolve.c **** {
 17215               		.loc 2 1573 0
 17216               		.cfi_startproc
 17217 730e EF92      		push r14
 17218               	.LCFI261:
 17219               		.cfi_def_cfa_offset 3
 17220               		.cfi_offset 14, -2
 17221 7310 FF92      		push r15
 17222               	.LCFI262:
 17223               		.cfi_def_cfa_offset 4
 17224               		.cfi_offset 15, -3
 17225 7312 0F93      		push r16
 17226               	.LCFI263:
 17227               		.cfi_def_cfa_offset 5
 17228               		.cfi_offset 16, -4
 17229 7314 1F93      		push r17
 17230               	.LCFI264:
 17231               		.cfi_def_cfa_offset 6
 17232               		.cfi_offset 17, -5
 17233 7316 CF93      		push r28
 17234               	.LCFI265:
 17235               		.cfi_def_cfa_offset 7
 17236               		.cfi_offset 28, -6
 17237 7318 DF93      		push r29
 17238               	.LCFI266:
 17239               		.cfi_def_cfa_offset 8
 17240               		.cfi_offset 29, -7
 17241 731a CDB7      		in r28,__SP_L__
 17242 731c DEB7      		in r29,__SP_H__
 17243               	.LCFI267:
 17244               		.cfi_def_cfa_register 28
 17245 731e 2C97      		sbiw r28,12
 17246               	.LCFI268:
 17247               		.cfi_def_cfa_offset 20
 17248 7320 0FB6      		in __tmp_reg__,__SREG__
 17249 7322 F894      		cli
 17250 7324 DEBF      		out __SP_H__,r29
 17251 7326 0FBE      		out __SREG__,__tmp_reg__
 17252 7328 CDBF      		out __SP_L__,r28
 17253               	/* prologue: function */
 17254               	/* frame size = 12 */
 17255               	/* stack size = 18 */
 17256               	.L__stack_usage = 18
 17257 732a 9A83      		std Y+2,r25
 17258 732c 8983      		std Y+1,r24
 17259 732e 7C83      		std Y+4,r23
 17260 7330 6B83      		std Y+3,r22
 17261 7332 2D83      		std Y+5,r18
 17262 7334 3E83      		std Y+6,r19
 17263 7336 4F83      		std Y+7,r20
 17264 7338 5887      		std Y+8,r21
 17265 733a E986      		std Y+9,r14
 17266 733c FA86      		std Y+10,r15
 17267 733e 0B87      		std Y+11,r16
 17268 7340 1C87      		std Y+12,r17
1574:lp_solve_5.5/lp_presolve.c ****   psdata->dv_lobo[rownr] = lowbo;
 17269               		.loc 2 1574 0
 17270 7342 8981      		ldd r24,Y+1
 17271 7344 9A81      		ldd r25,Y+2
 17272 7346 FC01      		movw r30,r24
 17273 7348 2089      		ldd r18,Z+16
 17274 734a 3189      		ldd r19,Z+17
 17275 734c 8B81      		ldd r24,Y+3
 17276 734e 9C81      		ldd r25,Y+4
 17277 7350 880F      		lsl r24
 17278 7352 991F      		rol r25
 17279 7354 880F      		lsl r24
 17280 7356 991F      		rol r25
 17281 7358 280F      		add r18,r24
 17282 735a 391F      		adc r19,r25
 17283 735c 8D81      		ldd r24,Y+5
 17284 735e 9E81      		ldd r25,Y+6
 17285 7360 AF81      		ldd r26,Y+7
 17286 7362 B885      		ldd r27,Y+8
 17287 7364 F901      		movw r30,r18
 17288 7366 8083      		st Z,r24
 17289 7368 9183      		std Z+1,r25
 17290 736a A283      		std Z+2,r26
 17291 736c B383      		std Z+3,r27
1575:lp_solve_5.5/lp_presolve.c ****   psdata->dv_upbo[rownr] = upbo;
 17292               		.loc 2 1575 0
 17293 736e 8981      		ldd r24,Y+1
 17294 7370 9A81      		ldd r25,Y+2
 17295 7372 FC01      		movw r30,r24
 17296 7374 2685      		ldd r18,Z+14
 17297 7376 3785      		ldd r19,Z+15
 17298 7378 8B81      		ldd r24,Y+3
 17299 737a 9C81      		ldd r25,Y+4
 17300 737c 880F      		lsl r24
 17301 737e 991F      		rol r25
 17302 7380 880F      		lsl r24
 17303 7382 991F      		rol r25
 17304 7384 280F      		add r18,r24
 17305 7386 391F      		adc r19,r25
 17306 7388 8985      		ldd r24,Y+9
 17307 738a 9A85      		ldd r25,Y+10
 17308 738c AB85      		ldd r26,Y+11
 17309 738e BC85      		ldd r27,Y+12
 17310 7390 F901      		movw r30,r18
 17311 7392 8083      		st Z,r24
 17312 7394 9183      		std Z+1,r25
 17313 7396 A283      		std Z+2,r26
 17314 7398 B383      		std Z+3,r27
1576:lp_solve_5.5/lp_presolve.c **** }
 17315               		.loc 2 1576 0
 17316 739a 0000      		nop
 17317               	/* epilogue start */
 17318 739c 2C96      		adiw r28,12
 17319 739e 0FB6      		in __tmp_reg__,__SREG__
 17320 73a0 F894      		cli
 17321 73a2 DEBF      		out __SP_H__,r29
 17322 73a4 0FBE      		out __SREG__,__tmp_reg__
 17323 73a6 CDBF      		out __SP_L__,r28
 17324 73a8 DF91      		pop r29
 17325 73aa CF91      		pop r28
 17326 73ac 1F91      		pop r17
 17327 73ae 0F91      		pop r16
 17328 73b0 FF90      		pop r15
 17329 73b2 EF90      		pop r14
 17330 73b4 0895      		ret
 17331               		.cfi_endproc
 17332               	.LFE53:
 17334               	.global	get_dv_lower
 17336               	get_dv_lower:
 17337               	.LFB54:
1577:lp_solve_5.5/lp_presolve.c **** STATIC REAL get_dv_lower(presolverec *psdata, int rownr)
1578:lp_solve_5.5/lp_presolve.c **** {
 17338               		.loc 2 1578 0
 17339               		.cfi_startproc
 17340 73b6 CF93      		push r28
 17341               	.LCFI269:
 17342               		.cfi_def_cfa_offset 3
 17343               		.cfi_offset 28, -2
 17344 73b8 DF93      		push r29
 17345               	.LCFI270:
 17346               		.cfi_def_cfa_offset 4
 17347               		.cfi_offset 29, -3
 17348 73ba 00D0      		rcall .
 17349 73bc 00D0      		rcall .
 17350               	.LCFI271:
 17351               		.cfi_def_cfa_offset 8
 17352 73be CDB7      		in r28,__SP_L__
 17353 73c0 DEB7      		in r29,__SP_H__
 17354               	.LCFI272:
 17355               		.cfi_def_cfa_register 28
 17356               	/* prologue: function */
 17357               	/* frame size = 4 */
 17358               	/* stack size = 6 */
 17359               	.L__stack_usage = 6
 17360 73c2 9A83      		std Y+2,r25
 17361 73c4 8983      		std Y+1,r24
 17362 73c6 7C83      		std Y+4,r23
 17363 73c8 6B83      		std Y+3,r22
1579:lp_solve_5.5/lp_presolve.c ****   return( psdata->dv_lobo[rownr] );
 17364               		.loc 2 1579 0
 17365 73ca 8981      		ldd r24,Y+1
 17366 73cc 9A81      		ldd r25,Y+2
 17367 73ce FC01      		movw r30,r24
 17368 73d0 2089      		ldd r18,Z+16
 17369 73d2 3189      		ldd r19,Z+17
 17370 73d4 8B81      		ldd r24,Y+3
 17371 73d6 9C81      		ldd r25,Y+4
 17372 73d8 880F      		lsl r24
 17373 73da 991F      		rol r25
 17374 73dc 880F      		lsl r24
 17375 73de 991F      		rol r25
 17376 73e0 820F      		add r24,r18
 17377 73e2 931F      		adc r25,r19
 17378 73e4 FC01      		movw r30,r24
 17379 73e6 8081      		ld r24,Z
 17380 73e8 9181      		ldd r25,Z+1
 17381 73ea A281      		ldd r26,Z+2
 17382 73ec B381      		ldd r27,Z+3
1580:lp_solve_5.5/lp_presolve.c **** }
 17383               		.loc 2 1580 0
 17384 73ee BC01      		movw r22,r24
 17385 73f0 CD01      		movw r24,r26
 17386               	/* epilogue start */
 17387 73f2 0F90      		pop __tmp_reg__
 17388 73f4 0F90      		pop __tmp_reg__
 17389 73f6 0F90      		pop __tmp_reg__
 17390 73f8 0F90      		pop __tmp_reg__
 17391 73fa DF91      		pop r29
 17392 73fc CF91      		pop r28
 17393 73fe 0895      		ret
 17394               		.cfi_endproc
 17395               	.LFE54:
 17397               	.global	get_dv_upper
 17399               	get_dv_upper:
 17400               	.LFB55:
1581:lp_solve_5.5/lp_presolve.c **** 
1582:lp_solve_5.5/lp_presolve.c **** STATIC REAL get_dv_upper(presolverec *psdata, int rownr)
1583:lp_solve_5.5/lp_presolve.c **** {
 17401               		.loc 2 1583 0
 17402               		.cfi_startproc
 17403 7400 CF93      		push r28
 17404               	.LCFI273:
 17405               		.cfi_def_cfa_offset 3
 17406               		.cfi_offset 28, -2
 17407 7402 DF93      		push r29
 17408               	.LCFI274:
 17409               		.cfi_def_cfa_offset 4
 17410               		.cfi_offset 29, -3
 17411 7404 00D0      		rcall .
 17412 7406 00D0      		rcall .
 17413               	.LCFI275:
 17414               		.cfi_def_cfa_offset 8
 17415 7408 CDB7      		in r28,__SP_L__
 17416 740a DEB7      		in r29,__SP_H__
 17417               	.LCFI276:
 17418               		.cfi_def_cfa_register 28
 17419               	/* prologue: function */
 17420               	/* frame size = 4 */
 17421               	/* stack size = 6 */
 17422               	.L__stack_usage = 6
 17423 740c 9A83      		std Y+2,r25
 17424 740e 8983      		std Y+1,r24
 17425 7410 7C83      		std Y+4,r23
 17426 7412 6B83      		std Y+3,r22
1584:lp_solve_5.5/lp_presolve.c ****   return( psdata->dv_upbo[rownr] );
 17427               		.loc 2 1584 0
 17428 7414 8981      		ldd r24,Y+1
 17429 7416 9A81      		ldd r25,Y+2
 17430 7418 FC01      		movw r30,r24
 17431 741a 2685      		ldd r18,Z+14
 17432 741c 3785      		ldd r19,Z+15
 17433 741e 8B81      		ldd r24,Y+3
 17434 7420 9C81      		ldd r25,Y+4
 17435 7422 880F      		lsl r24
 17436 7424 991F      		rol r25
 17437 7426 880F      		lsl r24
 17438 7428 991F      		rol r25
 17439 742a 820F      		add r24,r18
 17440 742c 931F      		adc r25,r19
 17441 742e FC01      		movw r30,r24
 17442 7430 8081      		ld r24,Z
 17443 7432 9181      		ldd r25,Z+1
 17444 7434 A281      		ldd r26,Z+2
 17445 7436 B381      		ldd r27,Z+3
1585:lp_solve_5.5/lp_presolve.c **** }
 17446               		.loc 2 1585 0
 17447 7438 BC01      		movw r22,r24
 17448 743a CD01      		movw r24,r26
 17449               	/* epilogue start */
 17450 743c 0F90      		pop __tmp_reg__
 17451 743e 0F90      		pop __tmp_reg__
 17452 7440 0F90      		pop __tmp_reg__
 17453 7442 0F90      		pop __tmp_reg__
 17454 7444 DF91      		pop r29
 17455 7446 CF91      		pop r28
 17456 7448 0895      		ret
 17457               		.cfi_endproc
 17458               	.LFE55:
 17460               	.global	__eqsf2
 17461               	.global	__lesf2
 17462               		.section	.rodata
 17463               	.LC27:
 17464 05eb 7072 6573 		.string	"presolve: Row %s (%g << %g) infeasibility in column %s (OF=%g)\n"
 17464      6F6C 7665 
 17464      3A20 526F 
 17464      7720 2573 
 17464      2028 2567 
 17465               		.text
 17466               	.global	presolve_rowfix
 17468               	presolve_rowfix:
 17469               	.LFB56:
1586:lp_solve_5.5/lp_presolve.c **** 
1587:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_rowfix(presolverec *psdata, int rownr, REAL newvalue, MYBOOL remove, int *ta
1588:lp_solve_5.5/lp_presolve.c **** {
 17470               		.loc 2 1588 0
 17471               		.cfi_startproc
 17472 744a 8F92      		push r8
 17473               	.LCFI277:
 17474               		.cfi_def_cfa_offset 3
 17475               		.cfi_offset 8, -2
 17476 744c 9F92      		push r9
 17477               	.LCFI278:
 17478               		.cfi_def_cfa_offset 4
 17479               		.cfi_offset 9, -3
 17480 744e AF92      		push r10
 17481               	.LCFI279:
 17482               		.cfi_def_cfa_offset 5
 17483               		.cfi_offset 10, -4
 17484 7450 BF92      		push r11
 17485               	.LCFI280:
 17486               		.cfi_def_cfa_offset 6
 17487               		.cfi_offset 11, -5
 17488 7452 CF92      		push r12
 17489               	.LCFI281:
 17490               		.cfi_def_cfa_offset 7
 17491               		.cfi_offset 12, -6
 17492 7454 DF92      		push r13
 17493               	.LCFI282:
 17494               		.cfi_def_cfa_offset 8
 17495               		.cfi_offset 13, -7
 17496 7456 EF92      		push r14
 17497               	.LCFI283:
 17498               		.cfi_def_cfa_offset 9
 17499               		.cfi_offset 14, -8
 17500 7458 FF92      		push r15
 17501               	.LCFI284:
 17502               		.cfi_def_cfa_offset 10
 17503               		.cfi_offset 15, -9
 17504 745a 0F93      		push r16
 17505               	.LCFI285:
 17506               		.cfi_def_cfa_offset 11
 17507               		.cfi_offset 16, -10
 17508 745c 1F93      		push r17
 17509               	.LCFI286:
 17510               		.cfi_def_cfa_offset 12
 17511               		.cfi_offset 17, -11
 17512 745e CF93      		push r28
 17513               	.LCFI287:
 17514               		.cfi_def_cfa_offset 13
 17515               		.cfi_offset 28, -12
 17516 7460 DF93      		push r29
 17517               	.LCFI288:
 17518               		.cfi_def_cfa_offset 14
 17519               		.cfi_offset 29, -13
 17520 7462 CDB7      		in r28,__SP_L__
 17521 7464 DEB7      		in r29,__SP_H__
 17522               	.LCFI289:
 17523               		.cfi_def_cfa_register 28
 17524 7466 EC97      		sbiw r28,60
 17525               	.LCFI290:
 17526               		.cfi_def_cfa_offset 74
 17527 7468 0FB6      		in __tmp_reg__,__SREG__
 17528 746a F894      		cli
 17529 746c DEBF      		out __SP_H__,r29
 17530 746e 0FBE      		out __SREG__,__tmp_reg__
 17531 7470 CDBF      		out __SP_L__,r28
 17532               	/* prologue: function */
 17533               	/* frame size = 60 */
 17534               	/* stack size = 72 */
 17535               	.L__stack_usage = 72
 17536 7472 9BAB      		std Y+51,r25
 17537 7474 8AAB      		std Y+50,r24
 17538 7476 7DAB      		std Y+53,r23
 17539 7478 6CAB      		std Y+52,r22
 17540 747a 2EAB      		std Y+54,r18
 17541 747c 3FAB      		std Y+55,r19
 17542 747e 48AF      		std Y+56,r20
 17543 7480 59AF      		std Y+57,r21
 17544 7482 0AAF      		std Y+58,r16
 17545 7484 FCAE      		std Y+60,r15
 17546 7486 EBAE      		std Y+59,r14
1589:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 17547               		.loc 2 1589 0
 17548 7488 8AA9      		ldd r24,Y+50
 17549 748a 9BA9      		ldd r25,Y+51
 17550 748c FC01      		movw r30,r24
 17551 748e 8289      		ldd r24,Z+18
 17552 7490 9389      		ldd r25,Z+19
 17553 7492 9D87      		std Y+13,r25
 17554 7494 8C87      		std Y+12,r24
1590:lp_solve_5.5/lp_presolve.c ****   int      i, ix, ie;
1591:lp_solve_5.5/lp_presolve.c ****   MYBOOL   isneg, lofinite, upfinite, doupdate = FALSE, chsign = is_chsign(lp, rownr);
 17555               		.loc 2 1591 0
 17556 7496 1B82      		std Y+3,__zero_reg__
 17557 7498 2CA9      		ldd r18,Y+52
 17558 749a 3DA9      		ldd r19,Y+53
 17559 749c 8C85      		ldd r24,Y+12
 17560 749e 9D85      		ldd r25,Y+13
 17561 74a0 B901      		movw r22,r18
 17562 74a2 0E94 0000 		call is_chsign
 17563 74a6 8E87      		std Y+14,r24
1592:lp_solve_5.5/lp_presolve.c ****   REAL     lobound, upbound, lovalue, upvalue,
1593:lp_solve_5.5/lp_presolve.c ****            Value, fixvalue, fixprod, mult;
1594:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 17564               		.loc 2 1594 0
 17565 74a8 8C85      		ldd r24,Y+12
 17566 74aa 9D85      		ldd r25,Y+13
 17567 74ac 8A54      		subi r24,74
 17568 74ae 9D4F      		sbci r25,-3
 17569 74b0 FC01      		movw r30,r24
 17570 74b2 8081      		ld r24,Z
 17571 74b4 9181      		ldd r25,Z+1
 17572 74b6 988B      		std Y+16,r25
 17573 74b8 8F87      		std Y+15,r24
1595:lp_solve_5.5/lp_presolve.c ****   psrec    *ps = psdata->cols;
 17574               		.loc 2 1595 0
 17575 74ba 8AA9      		ldd r24,Y+50
 17576 74bc 9BA9      		ldd r25,Y+51
 17577 74be FC01      		movw r30,r24
 17578 74c0 8281      		ldd r24,Z+2
 17579 74c2 9381      		ldd r25,Z+3
 17580 74c4 9A8B      		std Y+18,r25
 17581 74c6 898B      		std Y+17,r24
1596:lp_solve_5.5/lp_presolve.c **** 
1597:lp_solve_5.5/lp_presolve.c ****   /* Set "fixed" value in case we are deleting a variable */
1598:lp_solve_5.5/lp_presolve.c ****   upbound = get_dv_upper(psdata, rownr);
 17582               		.loc 2 1598 0
 17583 74c8 2CA9      		ldd r18,Y+52
 17584 74ca 3DA9      		ldd r19,Y+53
 17585 74cc 8AA9      		ldd r24,Y+50
 17586 74ce 9BA9      		ldd r25,Y+51
 17587 74d0 B901      		movw r22,r18
 17588 74d2 0E94 0000 		call get_dv_upper
 17589 74d6 DC01      		movw r26,r24
 17590 74d8 CB01      		movw r24,r22
 17591 74da 8B8B      		std Y+19,r24
 17592 74dc 9C8B      		std Y+20,r25
 17593 74de AD8B      		std Y+21,r26
 17594 74e0 BE8B      		std Y+22,r27
1599:lp_solve_5.5/lp_presolve.c ****   lobound = get_dv_lower(psdata, rownr);
 17595               		.loc 2 1599 0
 17596 74e2 2CA9      		ldd r18,Y+52
 17597 74e4 3DA9      		ldd r19,Y+53
 17598 74e6 8AA9      		ldd r24,Y+50
 17599 74e8 9BA9      		ldd r25,Y+51
 17600 74ea B901      		movw r22,r18
 17601 74ec 0E94 0000 		call get_dv_lower
 17602 74f0 DC01      		movw r26,r24
 17603 74f2 CB01      		movw r24,r22
 17604 74f4 8F8B      		std Y+23,r24
 17605 74f6 988F      		std Y+24,r25
 17606 74f8 A98F      		std Y+25,r26
 17607 74fa BA8F      		std Y+26,r27
1600:lp_solve_5.5/lp_presolve.c ****   if(remove) {
 17608               		.loc 2 1600 0
 17609 74fc 8AAD      		ldd r24,Y+58
 17610 74fe 8823      		tst r24
 17611 7500 01F4      		brne .+2
 17612 7502 00C0      		rjmp .L692
1601:lp_solve_5.5/lp_presolve.c ****     if(upbound-lobound < psdata->epsvalue) {
 17613               		.loc 2 1601 0
 17614 7504 2F89      		ldd r18,Y+23
 17615 7506 388D      		ldd r19,Y+24
 17616 7508 498D      		ldd r20,Y+25
 17617 750a 5A8D      		ldd r21,Y+26
 17618 750c 6B89      		ldd r22,Y+19
 17619 750e 7C89      		ldd r23,Y+20
 17620 7510 8D89      		ldd r24,Y+21
 17621 7512 9E89      		ldd r25,Y+22
 17622 7514 0E94 0000 		call __subsf3
 17623 7518 DC01      		movw r26,r24
 17624 751a CB01      		movw r24,r22
 17625 751c 7C01      		movw r14,r24
 17626 751e 8D01      		movw r16,r26
 17627 7520 8AA9      		ldd r24,Y+50
 17628 7522 9BA9      		ldd r25,Y+51
 17629 7524 FC01      		movw r30,r24
 17630 7526 8489      		ldd r24,Z+20
 17631 7528 9589      		ldd r25,Z+21
 17632 752a A689      		ldd r26,Z+22
 17633 752c B789      		ldd r27,Z+23
 17634 752e 9C01      		movw r18,r24
 17635 7530 AD01      		movw r20,r26
 17636 7532 C801      		movw r24,r16
 17637 7534 B701      		movw r22,r14
 17638 7536 0E94 0000 		call __ltsf2
 17639 753a 8823      		tst r24
 17640 753c 04F4      		brge .L790
1602:lp_solve_5.5/lp_presolve.c ****       if((newvalue > lobound) && (newvalue < upbound))
 17641               		.loc 2 1602 0
 17642 753e 2F89      		ldd r18,Y+23
 17643 7540 388D      		ldd r19,Y+24
 17644 7542 498D      		ldd r20,Y+25
 17645 7544 5A8D      		ldd r21,Y+26
 17646 7546 6EA9      		ldd r22,Y+54
 17647 7548 7FA9      		ldd r23,Y+55
 17648 754a 88AD      		ldd r24,Y+56
 17649 754c 99AD      		ldd r25,Y+57
 17650 754e 0E94 0000 		call __gtsf2
 17651 7552 1816      		cp __zero_reg__,r24
 17652 7554 04F4      		brge .L695
 17653               		.loc 2 1602 0 is_stmt 0 discriminator 1
 17654 7556 2B89      		ldd r18,Y+19
 17655 7558 3C89      		ldd r19,Y+20
 17656 755a 4D89      		ldd r20,Y+21
 17657 755c 5E89      		ldd r21,Y+22
 17658 755e 6EA9      		ldd r22,Y+54
 17659 7560 7FA9      		ldd r23,Y+55
 17660 7562 88AD      		ldd r24,Y+56
 17661 7564 99AD      		ldd r25,Y+57
 17662 7566 0E94 0000 		call __ltsf2
 17663 756a 8823      		tst r24
 17664 756c 04F4      		brge .L695
1603:lp_solve_5.5/lp_presolve.c ****         fixvalue = newvalue;
 17665               		.loc 2 1603 0 is_stmt 1
 17666 756e 8EA9      		ldd r24,Y+54
 17667 7570 9FA9      		ldd r25,Y+55
 17668 7572 A8AD      		ldd r26,Y+56
 17669 7574 B9AD      		ldd r27,Y+57
 17670 7576 8C83      		std Y+4,r24
 17671 7578 9D83      		std Y+5,r25
 17672 757a AE83      		std Y+6,r26
 17673 757c BF83      		std Y+7,r27
 17674 757e 00C0      		rjmp .L699
 17675               	.L695:
1604:lp_solve_5.5/lp_presolve.c ****       else
1605:lp_solve_5.5/lp_presolve.c ****         fixvalue = lobound;
 17676               		.loc 2 1605 0
 17677 7580 8F89      		ldd r24,Y+23
 17678 7582 988D      		ldd r25,Y+24
 17679 7584 A98D      		ldd r26,Y+25
 17680 7586 BA8D      		ldd r27,Y+26
 17681 7588 8C83      		std Y+4,r24
 17682 758a 9D83      		std Y+5,r25
 17683 758c AE83      		std Y+6,r26
 17684 758e BF83      		std Y+7,r27
 17685 7590 00C0      		rjmp .L699
 17686               	.L790:
1606:lp_solve_5.5/lp_presolve.c ****     }
1607:lp_solve_5.5/lp_presolve.c ****     else {
1608:lp_solve_5.5/lp_presolve.c ****       if(my_infinite(lp, newvalue) && (get_rh(lp, rownr) == 0))
 17687               		.loc 2 1608 0
 17688 7592 8EA9      		ldd r24,Y+54
 17689 7594 9FA9      		ldd r25,Y+55
 17690 7596 A8AD      		ldd r26,Y+56
 17691 7598 B9AD      		ldd r27,Y+57
 17692 759a BF77      		andi r27,0x7f
 17693 759c 2C85      		ldd r18,Y+12
 17694 759e 3D85      		ldd r19,Y+13
 17695 75a0 265F      		subi r18,-10
 17696 75a2 3C4F      		sbci r19,-4
 17697 75a4 F901      		movw r30,r18
 17698 75a6 2081      		ld r18,Z
 17699 75a8 3181      		ldd r19,Z+1
 17700 75aa 4281      		ldd r20,Z+2
 17701 75ac 5381      		ldd r21,Z+3
 17702 75ae BC01      		movw r22,r24
 17703 75b0 CD01      		movw r24,r26
 17704 75b2 0E94 0000 		call __gesf2
 17705 75b6 8823      		tst r24
 17706 75b8 04F4      		brge .+2
 17707 75ba 00C0      		rjmp .L700
 17708               		.loc 2 1608 0 is_stmt 0 discriminator 1
 17709 75bc 2CA9      		ldd r18,Y+52
 17710 75be 3DA9      		ldd r19,Y+53
 17711 75c0 8C85      		ldd r24,Y+12
 17712 75c2 9D85      		ldd r25,Y+13
 17713 75c4 B901      		movw r22,r18
 17714 75c6 0E94 0000 		call get_rh
 17715 75ca DC01      		movw r26,r24
 17716 75cc CB01      		movw r24,r22
 17717 75ce 20E0      		ldi r18,0
 17718 75d0 30E0      		ldi r19,0
 17719 75d2 A901      		movw r20,r18
 17720 75d4 BC01      		movw r22,r24
 17721 75d6 CD01      		movw r24,r26
 17722 75d8 0E94 0000 		call __eqsf2
 17723 75dc 8823      		tst r24
 17724 75de 01F0      		breq .+2
 17725 75e0 00C0      		rjmp .L700
1609:lp_solve_5.5/lp_presolve.c ****         fixvalue = ((lobound <= 0) && (upbound >= 0) ? 0 : MIN(upbound, lobound));
 17726               		.loc 2 1609 0 is_stmt 1
 17727 75e2 11E0      		ldi r17,lo8(1)
 17728 75e4 20E0      		ldi r18,0
 17729 75e6 30E0      		ldi r19,0
 17730 75e8 A901      		movw r20,r18
 17731 75ea 6F89      		ldd r22,Y+23
 17732 75ec 788D      		ldd r23,Y+24
 17733 75ee 898D      		ldd r24,Y+25
 17734 75f0 9A8D      		ldd r25,Y+26
 17735 75f2 0E94 0000 		call __lesf2
 17736 75f6 1816      		cp __zero_reg__,r24
 17737 75f8 04F4      		brge .L703
 17738 75fa 10E0      		ldi r17,0
 17739               	.L703:
 17740 75fc 81E0      		ldi r24,lo8(1)
 17741 75fe 8127      		eor r24,r17
 17742 7600 8823      		tst r24
 17743 7602 01F4      		brne .L704
 17744               		.loc 2 1609 0 is_stmt 0 discriminator 2
 17745 7604 11E0      		ldi r17,lo8(1)
 17746 7606 20E0      		ldi r18,0
 17747 7608 30E0      		ldi r19,0
 17748 760a A901      		movw r20,r18
 17749 760c 6B89      		ldd r22,Y+19
 17750 760e 7C89      		ldd r23,Y+20
 17751 7610 8D89      		ldd r24,Y+21
 17752 7612 9E89      		ldd r25,Y+22
 17753 7614 0E94 0000 		call __gesf2
 17754 7618 8823      		tst r24
 17755 761a 04F4      		brge .L705
 17756 761c 10E0      		ldi r17,0
 17757               	.L705:
 17758 761e 81E0      		ldi r24,lo8(1)
 17759 7620 8127      		eor r24,r17
 17760 7622 8823      		tst r24
 17761 7624 01F0      		breq .L706
 17762               	.L704:
 17763               		.loc 2 1609 0 discriminator 3
 17764 7626 2F89      		ldd r18,Y+23
 17765 7628 388D      		ldd r19,Y+24
 17766 762a 498D      		ldd r20,Y+25
 17767 762c 5A8D      		ldd r21,Y+26
 17768 762e 6B89      		ldd r22,Y+19
 17769 7630 7C89      		ldd r23,Y+20
 17770 7632 8D89      		ldd r24,Y+21
 17771 7634 9E89      		ldd r25,Y+22
 17772 7636 0E94 0000 		call __ltsf2
 17773 763a 8823      		tst r24
 17774 763c 04F4      		brge .L791
 17775               		.loc 2 1609 0 discriminator 5
 17776 763e 8B89      		ldd r24,Y+19
 17777 7640 9C89      		ldd r25,Y+20
 17778 7642 AD89      		ldd r26,Y+21
 17779 7644 BE89      		ldd r27,Y+22
 17780 7646 00C0      		rjmp .L710
 17781               	.L791:
 17782               		.loc 2 1609 0 discriminator 6
 17783 7648 8F89      		ldd r24,Y+23
 17784 764a 988D      		ldd r25,Y+24
 17785 764c A98D      		ldd r26,Y+25
 17786 764e BA8D      		ldd r27,Y+26
 17787 7650 00C0      		rjmp .L710
 17788               	.L706:
 17789               		.loc 2 1609 0 discriminator 4
 17790 7652 80E0      		ldi r24,0
 17791 7654 90E0      		ldi r25,0
 17792 7656 DC01      		movw r26,r24
 17793               	.L710:
 17794               		.loc 2 1609 0 discriminator 10
 17795 7658 8C83      		std Y+4,r24
 17796 765a 9D83      		std Y+5,r25
 17797 765c AE83      		std Y+6,r26
 17798 765e BF83      		std Y+7,r27
 17799 7660 00C0      		rjmp .L699
 17800               	.L700:
1610:lp_solve_5.5/lp_presolve.c ****       else
1611:lp_solve_5.5/lp_presolve.c ****         fixvalue = newvalue;
 17801               		.loc 2 1611 0 is_stmt 1
 17802 7662 8EA9      		ldd r24,Y+54
 17803 7664 9FA9      		ldd r25,Y+55
 17804 7666 A8AD      		ldd r26,Y+56
 17805 7668 B9AD      		ldd r27,Y+57
 17806 766a 8C83      		std Y+4,r24
 17807 766c 9D83      		std Y+5,r25
 17808 766e AE83      		std Y+6,r26
 17809 7670 BF83      		std Y+7,r27
 17810               	.L699:
1612:lp_solve_5.5/lp_presolve.c ****     }
1613:lp_solve_5.5/lp_presolve.c ****     set_dv_bounds(psdata, rownr, fixvalue, fixvalue);
 17811               		.loc 2 1613 0
 17812 7672 2C81      		ldd r18,Y+4
 17813 7674 3D81      		ldd r19,Y+5
 17814 7676 4E81      		ldd r20,Y+6
 17815 7678 5F81      		ldd r21,Y+7
 17816 767a 8C81      		ldd r24,Y+4
 17817 767c 9D81      		ldd r25,Y+5
 17818 767e AE81      		ldd r26,Y+6
 17819 7680 BF81      		ldd r27,Y+7
 17820 7682 6CA9      		ldd r22,Y+52
 17821 7684 7DA9      		ldd r23,Y+53
 17822 7686 EAA9      		ldd r30,Y+50
 17823 7688 FBA9      		ldd r31,Y+51
 17824 768a 7901      		movw r14,r18
 17825 768c 8A01      		movw r16,r20
 17826 768e 9C01      		movw r18,r24
 17827 7690 AD01      		movw r20,r26
 17828 7692 CF01      		movw r24,r30
 17829 7694 0E94 0000 		call set_dv_bounds
1614:lp_solve_5.5/lp_presolve.c ****     if(fixvalue != 0)
 17830               		.loc 2 1614 0
 17831 7698 20E0      		ldi r18,0
 17832 769a 30E0      		ldi r19,0
 17833 769c A901      		movw r20,r18
 17834 769e 6C81      		ldd r22,Y+4
 17835 76a0 7D81      		ldd r23,Y+5
 17836 76a2 8E81      		ldd r24,Y+6
 17837 76a4 9F81      		ldd r25,Y+7
 17838 76a6 0E94 0000 		call __nesf2
 17839 76aa 8823      		tst r24
 17840 76ac 01F0      		breq .L711
1615:lp_solve_5.5/lp_presolve.c ****       addUndoPresolve(lp, FALSE, rownr, fixvalue, 0, 0);
 17841               		.loc 2 1615 0
 17842 76ae 8C81      		ldd r24,Y+4
 17843 76b0 9D81      		ldd r25,Y+5
 17844 76b2 AE81      		ldd r26,Y+6
 17845 76b4 BF81      		ldd r27,Y+7
 17846 76b6 4CA9      		ldd r20,Y+52
 17847 76b8 5DA9      		ldd r21,Y+53
 17848 76ba EC85      		ldd r30,Y+12
 17849 76bc FD85      		ldd r31,Y+13
 17850 76be A12C      		mov r10,__zero_reg__
 17851 76c0 B12C      		mov r11,__zero_reg__
 17852 76c2 C12C      		mov r12,__zero_reg__
 17853 76c4 D12C      		mov r13,__zero_reg__
 17854 76c6 7601      		movw r14,r12
 17855 76c8 8C01      		movw r16,r24
 17856 76ca 9D01      		movw r18,r26
 17857 76cc 60E0      		ldi r22,0
 17858 76ce CF01      		movw r24,r30
 17859 76d0 0E94 0000 		call addUndoPresolve
 17860               	.L711:
1616:lp_solve_5.5/lp_presolve.c ****     mult = -1;
 17861               		.loc 2 1616 0
 17862 76d4 80E0      		ldi r24,0
 17863 76d6 90E0      		ldi r25,0
 17864 76d8 A0E8      		ldi r26,lo8(-128)
 17865 76da BFEB      		ldi r27,lo8(-65)
 17866 76dc 8887      		std Y+8,r24
 17867 76de 9987      		std Y+9,r25
 17868 76e0 AA87      		std Y+10,r26
 17869 76e2 BB87      		std Y+11,r27
 17870 76e4 00C0      		rjmp .L713
 17871               	.L692:
1617:lp_solve_5.5/lp_presolve.c ****   }
1618:lp_solve_5.5/lp_presolve.c ****   else {
1619:lp_solve_5.5/lp_presolve.c ****     mult = 1;
 17872               		.loc 2 1619 0
 17873 76e6 80E0      		ldi r24,0
 17874 76e8 90E0      		ldi r25,0
 17875 76ea A0E8      		ldi r26,lo8(-128)
 17876 76ec BFE3      		ldi r27,lo8(63)
 17877 76ee 8887      		std Y+8,r24
 17878 76f0 9987      		std Y+9,r25
 17879 76f2 AA87      		std Y+10,r26
 17880 76f4 BB87      		std Y+11,r27
1620:lp_solve_5.5/lp_presolve.c ****     fixvalue = 0;
 17881               		.loc 2 1620 0
 17882 76f6 1C82      		std Y+4,__zero_reg__
 17883 76f8 1D82      		std Y+5,__zero_reg__
 17884 76fa 1E82      		std Y+6,__zero_reg__
 17885 76fc 1F82      		std Y+7,__zero_reg__
 17886               	.L713:
1621:lp_solve_5.5/lp_presolve.c ****   }
1622:lp_solve_5.5/lp_presolve.c **** 
1623:lp_solve_5.5/lp_presolve.c ****   /* Loop over rows to update statistics */
1624:lp_solve_5.5/lp_presolve.c ****   ix = mat->row_end[rownr - 1];
 17887               		.loc 2 1624 0
 17888 76fe 8F85      		ldd r24,Y+15
 17889 7700 9889      		ldd r25,Y+16
 17890 7702 FC01      		movw r30,r24
 17891 7704 208D      		ldd r18,Z+24
 17892 7706 318D      		ldd r19,Z+25
 17893 7708 8CA9      		ldd r24,Y+52
 17894 770a 9DA9      		ldd r25,Y+53
 17895 770c 8150      		subi r24,1
 17896 770e 9048      		sbci r25,-128
 17897 7710 880F      		lsl r24
 17898 7712 991F      		rol r25
 17899 7714 820F      		add r24,r18
 17900 7716 931F      		adc r25,r19
 17901 7718 FC01      		movw r30,r24
 17902 771a 8081      		ld r24,Z
 17903 771c 9181      		ldd r25,Z+1
 17904 771e 9A83      		std Y+2,r25
 17905 7720 8983      		std Y+1,r24
1625:lp_solve_5.5/lp_presolve.c ****   ie = mat->row_end[rownr];
 17906               		.loc 2 1625 0
 17907 7722 8F85      		ldd r24,Y+15
 17908 7724 9889      		ldd r25,Y+16
 17909 7726 FC01      		movw r30,r24
 17910 7728 208D      		ldd r18,Z+24
 17911 772a 318D      		ldd r19,Z+25
 17912 772c 8CA9      		ldd r24,Y+52
 17913 772e 9DA9      		ldd r25,Y+53
 17914 7730 880F      		lsl r24
 17915 7732 991F      		rol r25
 17916 7734 820F      		add r24,r18
 17917 7736 931F      		adc r25,r19
 17918 7738 FC01      		movw r30,r24
 17919 773a 8081      		ld r24,Z
 17920 773c 9181      		ldd r25,Z+1
 17921 773e 9C8F      		std Y+28,r25
 17922 7740 8B8F      		std Y+27,r24
1626:lp_solve_5.5/lp_presolve.c ****   for(; ix < ie; ix++) {
 17923               		.loc 2 1626 0
 17924 7742 00C0      		rjmp .L714
 17925               	.L769:
1627:lp_solve_5.5/lp_presolve.c **** 
1628:lp_solve_5.5/lp_presolve.c ****    /* Retrieve row data and adjust RHS if we are deleting a variable */
1629:lp_solve_5.5/lp_presolve.c ****     i     = ROW_MAT_COLNR(ix);
 17926               		.loc 2 1629 0
 17927 7744 8F85      		ldd r24,Y+15
 17928 7746 9889      		ldd r25,Y+16
 17929 7748 FC01      		movw r30,r24
 17930 774a 2485      		ldd r18,Z+12
 17931 774c 3585      		ldd r19,Z+13
 17932 774e 8F85      		ldd r24,Y+15
 17933 7750 9889      		ldd r25,Y+16
 17934 7752 FC01      		movw r30,r24
 17935 7754 4689      		ldd r20,Z+22
 17936 7756 5789      		ldd r21,Z+23
 17937 7758 8981      		ldd r24,Y+1
 17938 775a 9A81      		ldd r25,Y+2
 17939 775c 880F      		lsl r24
 17940 775e 991F      		rol r25
 17941 7760 840F      		add r24,r20
 17942 7762 951F      		adc r25,r21
 17943 7764 FC01      		movw r30,r24
 17944 7766 8081      		ld r24,Z
 17945 7768 9181      		ldd r25,Z+1
 17946 776a 880F      		lsl r24
 17947 776c 991F      		rol r25
 17948 776e 820F      		add r24,r18
 17949 7770 931F      		adc r25,r19
 17950 7772 FC01      		movw r30,r24
 17951 7774 8081      		ld r24,Z
 17952 7776 9181      		ldd r25,Z+1
 17953 7778 9E8F      		std Y+30,r25
 17954 777a 8D8F      		std Y+29,r24
1630:lp_solve_5.5/lp_presolve.c ****     Value = ROW_MAT_VALUE(ix);
 17955               		.loc 2 1630 0
 17956 777c 8F85      		ldd r24,Y+15
 17957 777e 9889      		ldd r25,Y+16
 17958 7780 FC01      		movw r30,r24
 17959 7782 2089      		ldd r18,Z+16
 17960 7784 3189      		ldd r19,Z+17
 17961 7786 8F85      		ldd r24,Y+15
 17962 7788 9889      		ldd r25,Y+16
 17963 778a FC01      		movw r30,r24
 17964 778c 4689      		ldd r20,Z+22
 17965 778e 5789      		ldd r21,Z+23
 17966 7790 8981      		ldd r24,Y+1
 17967 7792 9A81      		ldd r25,Y+2
 17968 7794 880F      		lsl r24
 17969 7796 991F      		rol r25
 17970 7798 840F      		add r24,r20
 17971 779a 951F      		adc r25,r21
 17972 779c FC01      		movw r30,r24
 17973 779e 8081      		ld r24,Z
 17974 77a0 9181      		ldd r25,Z+1
 17975 77a2 880F      		lsl r24
 17976 77a4 991F      		rol r25
 17977 77a6 880F      		lsl r24
 17978 77a8 991F      		rol r25
 17979 77aa 820F      		add r24,r18
 17980 77ac 931F      		adc r25,r19
 17981 77ae FC01      		movw r30,r24
 17982 77b0 8081      		ld r24,Z
 17983 77b2 9181      		ldd r25,Z+1
 17984 77b4 A281      		ldd r26,Z+2
 17985 77b6 B381      		ldd r27,Z+3
 17986 77b8 8F8F      		std Y+31,r24
 17987 77ba 98A3      		std Y+32,r25
 17988 77bc A9A3      		std Y+33,r26
 17989 77be BAA3      		std Y+34,r27
1631:lp_solve_5.5/lp_presolve.c ****     if(Value == 0)
 17990               		.loc 2 1631 0
 17991 77c0 20E0      		ldi r18,0
 17992 77c2 30E0      		ldi r19,0
 17993 77c4 A901      		movw r20,r18
 17994 77c6 6F8D      		ldd r22,Y+31
 17995 77c8 78A1      		ldd r23,Y+32
 17996 77ca 89A1      		ldd r24,Y+33
 17997 77cc 9AA1      		ldd r25,Y+34
 17998 77ce 0E94 0000 		call __eqsf2
 17999 77d2 8823      		tst r24
 18000 77d4 01F4      		brne .+2
 18001 77d6 00C0      		rjmp .L792
1632:lp_solve_5.5/lp_presolve.c ****       continue;
1633:lp_solve_5.5/lp_presolve.c **** 
1634:lp_solve_5.5/lp_presolve.c ****     if(remove && (fixvalue != 0)) {
 18002               		.loc 2 1634 0
 18003 77d8 8AAD      		ldd r24,Y+58
 18004 77da 8823      		tst r24
 18005 77dc 01F4      		brne .+2
 18006 77de 00C0      		rjmp .L718
 18007               		.loc 2 1634 0 is_stmt 0 discriminator 1
 18008 77e0 20E0      		ldi r18,0
 18009 77e2 30E0      		ldi r19,0
 18010 77e4 A901      		movw r20,r18
 18011 77e6 6C81      		ldd r22,Y+4
 18012 77e8 7D81      		ldd r23,Y+5
 18013 77ea 8E81      		ldd r24,Y+6
 18014 77ec 9F81      		ldd r25,Y+7
 18015 77ee 0E94 0000 		call __nesf2
 18016 77f2 8823      		tst r24
 18017 77f4 01F4      		brne .+2
 18018 77f6 00C0      		rjmp .L718
1635:lp_solve_5.5/lp_presolve.c ****       fixprod = Value*fixvalue;
 18019               		.loc 2 1635 0 is_stmt 1
 18020 77f8 2C81      		ldd r18,Y+4
 18021 77fa 3D81      		ldd r19,Y+5
 18022 77fc 4E81      		ldd r20,Y+6
 18023 77fe 5F81      		ldd r21,Y+7
 18024 7800 6F8D      		ldd r22,Y+31
 18025 7802 78A1      		ldd r23,Y+32
 18026 7804 89A1      		ldd r24,Y+33
 18027 7806 9AA1      		ldd r25,Y+34
 18028 7808 0E94 0000 		call __mulsf3
 18029 780c DC01      		movw r26,r24
 18030 780e CB01      		movw r24,r22
 18031 7810 8BA3      		std Y+35,r24
 18032 7812 9CA3      		std Y+36,r25
 18033 7814 ADA3      		std Y+37,r26
 18034 7816 BEA3      		std Y+38,r27
1636:lp_solve_5.5/lp_presolve.c ****       lp->orig_obj[i] -= fixprod;
 18035               		.loc 2 1636 0
 18036 7818 8C85      		ldd r24,Y+12
 18037 781a 9D85      		ldd r25,Y+13
 18038 781c 845D      		subi r24,-44
 18039 781e 9D4F      		sbci r25,-3
 18040 7820 FC01      		movw r30,r24
 18041 7822 2081      		ld r18,Z
 18042 7824 3181      		ldd r19,Z+1
 18043 7826 8D8D      		ldd r24,Y+29
 18044 7828 9E8D      		ldd r25,Y+30
 18045 782a 880F      		lsl r24
 18046 782c 991F      		rol r25
 18047 782e 880F      		lsl r24
 18048 7830 991F      		rol r25
 18049 7832 8901      		movw r16,r18
 18050 7834 080F      		add r16,r24
 18051 7836 191F      		adc r17,r25
 18052 7838 8C85      		ldd r24,Y+12
 18053 783a 9D85      		ldd r25,Y+13
 18054 783c 845D      		subi r24,-44
 18055 783e 9D4F      		sbci r25,-3
 18056 7840 FC01      		movw r30,r24
 18057 7842 2081      		ld r18,Z
 18058 7844 3181      		ldd r19,Z+1
 18059 7846 8D8D      		ldd r24,Y+29
 18060 7848 9E8D      		ldd r25,Y+30
 18061 784a 880F      		lsl r24
 18062 784c 991F      		rol r25
 18063 784e 880F      		lsl r24
 18064 7850 991F      		rol r25
 18065 7852 820F      		add r24,r18
 18066 7854 931F      		adc r25,r19
 18067 7856 FC01      		movw r30,r24
 18068 7858 8081      		ld r24,Z
 18069 785a 9181      		ldd r25,Z+1
 18070 785c A281      		ldd r26,Z+2
 18071 785e B381      		ldd r27,Z+3
 18072 7860 2BA1      		ldd r18,Y+35
 18073 7862 3CA1      		ldd r19,Y+36
 18074 7864 4DA1      		ldd r20,Y+37
 18075 7866 5EA1      		ldd r21,Y+38
 18076 7868 BC01      		movw r22,r24
 18077 786a CD01      		movw r24,r26
 18078 786c 0E94 0000 		call __subsf3
 18079 7870 DC01      		movw r26,r24
 18080 7872 CB01      		movw r24,r22
 18081 7874 F801      		movw r30,r16
 18082 7876 8083      		st Z,r24
 18083 7878 9183      		std Z+1,r25
 18084 787a A283      		std Z+2,r26
 18085 787c B383      		std Z+3,r27
1637:lp_solve_5.5/lp_presolve.c ****       my_roundzero(lp->orig_obj[i], psdata->epsvalue);
 18086               		.loc 2 1637 0
 18087 787e 8C85      		ldd r24,Y+12
 18088 7880 9D85      		ldd r25,Y+13
 18089 7882 845D      		subi r24,-44
 18090 7884 9D4F      		sbci r25,-3
 18091 7886 FC01      		movw r30,r24
 18092 7888 2081      		ld r18,Z
 18093 788a 3181      		ldd r19,Z+1
 18094 788c 8D8D      		ldd r24,Y+29
 18095 788e 9E8D      		ldd r25,Y+30
 18096 7890 880F      		lsl r24
 18097 7892 991F      		rol r25
 18098 7894 880F      		lsl r24
 18099 7896 991F      		rol r25
 18100 7898 820F      		add r24,r18
 18101 789a 931F      		adc r25,r19
 18102 789c FC01      		movw r30,r24
 18103 789e 8081      		ld r24,Z
 18104 78a0 9181      		ldd r25,Z+1
 18105 78a2 A281      		ldd r26,Z+2
 18106 78a4 B381      		ldd r27,Z+3
 18107 78a6 BF77      		andi r27,0x7f
 18108 78a8 2AA9      		ldd r18,Y+50
 18109 78aa 3BA9      		ldd r19,Y+51
 18110 78ac F901      		movw r30,r18
 18111 78ae 2489      		ldd r18,Z+20
 18112 78b0 3589      		ldd r19,Z+21
 18113 78b2 4689      		ldd r20,Z+22
 18114 78b4 5789      		ldd r21,Z+23
 18115 78b6 BC01      		movw r22,r24
 18116 78b8 CD01      		movw r24,r26
 18117 78ba 0E94 0000 		call __ltsf2
 18118 78be 8823      		tst r24
 18119 78c0 04F4      		brge .L720
 18120               		.loc 2 1637 0 is_stmt 0 discriminator 1
 18121 78c2 8C85      		ldd r24,Y+12
 18122 78c4 9D85      		ldd r25,Y+13
 18123 78c6 845D      		subi r24,-44
 18124 78c8 9D4F      		sbci r25,-3
 18125 78ca FC01      		movw r30,r24
 18126 78cc 2081      		ld r18,Z
 18127 78ce 3181      		ldd r19,Z+1
 18128 78d0 8D8D      		ldd r24,Y+29
 18129 78d2 9E8D      		ldd r25,Y+30
 18130 78d4 880F      		lsl r24
 18131 78d6 991F      		rol r25
 18132 78d8 880F      		lsl r24
 18133 78da 991F      		rol r25
 18134 78dc 820F      		add r24,r18
 18135 78de 931F      		adc r25,r19
 18136 78e0 FC01      		movw r30,r24
 18137 78e2 1082      		st Z,__zero_reg__
 18138 78e4 1182      		std Z+1,__zero_reg__
 18139 78e6 1282      		std Z+2,__zero_reg__
 18140 78e8 1382      		std Z+3,__zero_reg__
 18141               	.L720:
1638:lp_solve_5.5/lp_presolve.c ****       lp->presolve_undo->fixed_obj[i] += fixprod;
 18142               		.loc 2 1638 0 is_stmt 1
 18143 78ea 8C85      		ldd r24,Y+12
 18144 78ec 9D85      		ldd r25,Y+13
 18145 78ee 8A59      		subi r24,-102
 18146 78f0 9C4F      		sbci r25,-4
 18147 78f2 FC01      		movw r30,r24
 18148 78f4 8081      		ld r24,Z
 18149 78f6 9181      		ldd r25,Z+1
 18150 78f8 FC01      		movw r30,r24
 18151 78fa 2685      		ldd r18,Z+14
 18152 78fc 3785      		ldd r19,Z+15
 18153 78fe 8D8D      		ldd r24,Y+29
 18154 7900 9E8D      		ldd r25,Y+30
 18155 7902 880F      		lsl r24
 18156 7904 991F      		rol r25
 18157 7906 880F      		lsl r24
 18158 7908 991F      		rol r25
 18159 790a 8901      		movw r16,r18
 18160 790c 080F      		add r16,r24
 18161 790e 191F      		adc r17,r25
 18162 7910 8C85      		ldd r24,Y+12
 18163 7912 9D85      		ldd r25,Y+13
 18164 7914 8A59      		subi r24,-102
 18165 7916 9C4F      		sbci r25,-4
 18166 7918 FC01      		movw r30,r24
 18167 791a 8081      		ld r24,Z
 18168 791c 9181      		ldd r25,Z+1
 18169 791e FC01      		movw r30,r24
 18170 7920 2685      		ldd r18,Z+14
 18171 7922 3785      		ldd r19,Z+15
 18172 7924 8D8D      		ldd r24,Y+29
 18173 7926 9E8D      		ldd r25,Y+30
 18174 7928 880F      		lsl r24
 18175 792a 991F      		rol r25
 18176 792c 880F      		lsl r24
 18177 792e 991F      		rol r25
 18178 7930 820F      		add r24,r18
 18179 7932 931F      		adc r25,r19
 18180 7934 FC01      		movw r30,r24
 18181 7936 8081      		ld r24,Z
 18182 7938 9181      		ldd r25,Z+1
 18183 793a A281      		ldd r26,Z+2
 18184 793c B381      		ldd r27,Z+3
 18185 793e 2BA1      		ldd r18,Y+35
 18186 7940 3CA1      		ldd r19,Y+36
 18187 7942 4DA1      		ldd r20,Y+37
 18188 7944 5EA1      		ldd r21,Y+38
 18189 7946 BC01      		movw r22,r24
 18190 7948 CD01      		movw r24,r26
 18191 794a 0E94 0000 		call __addsf3
 18192 794e DC01      		movw r26,r24
 18193 7950 CB01      		movw r24,r22
 18194 7952 F801      		movw r30,r16
 18195 7954 8083      		st Z,r24
 18196 7956 9183      		std Z+1,r25
 18197 7958 A283      		std Z+2,r26
 18198 795a B383      		std Z+3,r27
 18199               	.L718:
1639:lp_solve_5.5/lp_presolve.c ****     }
1640:lp_solve_5.5/lp_presolve.c **** 
1641:lp_solve_5.5/lp_presolve.c ****    /* Prepare for further processing */
1642:lp_solve_5.5/lp_presolve.c ****     Value = my_chsign(chsign, Value);
 18200               		.loc 2 1642 0
 18201 795c 8E85      		ldd r24,Y+14
 18202 795e 8823      		tst r24
 18203 7960 01F0      		breq .L722
 18204               		.loc 2 1642 0 is_stmt 0 discriminator 1
 18205 7962 20E0      		ldi r18,0
 18206 7964 30E0      		ldi r19,0
 18207 7966 A901      		movw r20,r18
 18208 7968 6F8D      		ldd r22,Y+31
 18209 796a 78A1      		ldd r23,Y+32
 18210 796c 89A1      		ldd r24,Y+33
 18211 796e 9AA1      		ldd r25,Y+34
 18212 7970 0E94 0000 		call __nesf2
 18213 7974 8823      		tst r24
 18214 7976 01F0      		breq .L722
 18215               		.loc 2 1642 0 discriminator 3
 18216 7978 8F8D      		ldd r24,Y+31
 18217 797a 98A1      		ldd r25,Y+32
 18218 797c A9A1      		ldd r26,Y+33
 18219 797e BAA1      		ldd r27,Y+34
 18220 7980 B058      		subi r27,0x80
 18221 7982 00C0      		rjmp .L724
 18222               	.L722:
 18223               		.loc 2 1642 0 discriminator 4
 18224 7984 8F8D      		ldd r24,Y+31
 18225 7986 98A1      		ldd r25,Y+32
 18226 7988 A9A1      		ldd r26,Y+33
 18227 798a BAA1      		ldd r27,Y+34
 18228               	.L724:
 18229               		.loc 2 1642 0 discriminator 6
 18230 798c 8F8F      		std Y+31,r24
 18231 798e 98A3      		std Y+32,r25
 18232 7990 A9A3      		std Y+33,r26
 18233 7992 BAA3      		std Y+34,r27
1643:lp_solve_5.5/lp_presolve.c ****     isneg = (MYBOOL) (Value < 0);
 18234               		.loc 2 1643 0 is_stmt 1 discriminator 6
 18235 7994 11E0      		ldi r17,lo8(1)
 18236 7996 20E0      		ldi r18,0
 18237 7998 30E0      		ldi r19,0
 18238 799a A901      		movw r20,r18
 18239 799c 6F8D      		ldd r22,Y+31
 18240 799e 78A1      		ldd r23,Y+32
 18241 79a0 89A1      		ldd r24,Y+33
 18242 79a2 9AA1      		ldd r25,Y+34
 18243 79a4 0E94 0000 		call __ltsf2
 18244 79a8 8823      		tst r24
 18245 79aa 04F0      		brlt .L725
 18246 79ac 10E0      		ldi r17,0
 18247               	.L725:
 18248 79ae 1FA3      		std Y+39,r17
1644:lp_solve_5.5/lp_presolve.c **** 
1645:lp_solve_5.5/lp_presolve.c ****    /* Reduce row variable counts if we are removing the variable */
1646:lp_solve_5.5/lp_presolve.c ****     if(!isActiveLink(ps->varmap, i))
 18249               		.loc 2 1646 0 discriminator 6
 18250 79b0 8989      		ldd r24,Y+17
 18251 79b2 9A89      		ldd r25,Y+18
 18252 79b4 FC01      		movw r30,r24
 18253 79b6 8081      		ld r24,Z
 18254 79b8 9181      		ldd r25,Z+1
 18255 79ba 2D8D      		ldd r18,Y+29
 18256 79bc 3E8D      		ldd r19,Y+30
 18257 79be B901      		movw r22,r18
 18258 79c0 0E94 0000 		call isActiveLink
 18259 79c4 8823      		tst r24
 18260 79c6 01F4      		brne .+2
 18261 79c8 00C0      		rjmp .L793
1647:lp_solve_5.5/lp_presolve.c ****       continue;
1648:lp_solve_5.5/lp_presolve.c ****     if(remove) {
 18262               		.loc 2 1648 0
 18263 79ca 8AAD      		ldd r24,Y+58
 18264 79cc 8823      		tst r24
 18265 79ce 01F4      		brne .+2
 18266 79d0 00C0      		rjmp .L727
1649:lp_solve_5.5/lp_presolve.c ****       if(isneg) {
 18267               		.loc 2 1649 0
 18268 79d2 8FA1      		ldd r24,Y+39
 18269 79d4 8823      		tst r24
 18270 79d6 01F0      		breq .L728
1650:lp_solve_5.5/lp_presolve.c ****         ps->negcount[i]--;
 18271               		.loc 2 1650 0
 18272 79d8 8989      		ldd r24,Y+17
 18273 79da 9A89      		ldd r25,Y+18
 18274 79dc FC01      		movw r30,r24
 18275 79de 2085      		ldd r18,Z+8
 18276 79e0 3185      		ldd r19,Z+9
 18277 79e2 8D8D      		ldd r24,Y+29
 18278 79e4 9E8D      		ldd r25,Y+30
 18279 79e6 880F      		lsl r24
 18280 79e8 991F      		rol r25
 18281 79ea 820F      		add r24,r18
 18282 79ec 931F      		adc r25,r19
 18283 79ee FC01      		movw r30,r24
 18284 79f0 2081      		ld r18,Z
 18285 79f2 3181      		ldd r19,Z+1
 18286 79f4 2150      		subi r18,1
 18287 79f6 3109      		sbc r19,__zero_reg__
 18288 79f8 FC01      		movw r30,r24
 18289 79fa 3183      		std Z+1,r19
 18290 79fc 2083      		st Z,r18
 18291 79fe 00C0      		rjmp .L729
 18292               	.L728:
1651:lp_solve_5.5/lp_presolve.c ****       }
1652:lp_solve_5.5/lp_presolve.c ****       else {
1653:lp_solve_5.5/lp_presolve.c ****         ps->plucount[i]--;
 18293               		.loc 2 1653 0
 18294 7a00 8989      		ldd r24,Y+17
 18295 7a02 9A89      		ldd r25,Y+18
 18296 7a04 FC01      		movw r30,r24
 18297 7a06 2681      		ldd r18,Z+6
 18298 7a08 3781      		ldd r19,Z+7
 18299 7a0a 8D8D      		ldd r24,Y+29
 18300 7a0c 9E8D      		ldd r25,Y+30
 18301 7a0e 880F      		lsl r24
 18302 7a10 991F      		rol r25
 18303 7a12 820F      		add r24,r18
 18304 7a14 931F      		adc r25,r19
 18305 7a16 FC01      		movw r30,r24
 18306 7a18 2081      		ld r18,Z
 18307 7a1a 3181      		ldd r19,Z+1
 18308 7a1c 2150      		subi r18,1
 18309 7a1e 3109      		sbc r19,__zero_reg__
 18310 7a20 FC01      		movw r30,r24
 18311 7a22 3183      		std Z+1,r19
 18312 7a24 2083      		st Z,r18
 18313               	.L729:
1654:lp_solve_5.5/lp_presolve.c ****       }
1655:lp_solve_5.5/lp_presolve.c ****       if((lobound < 0) && (upbound >= 0)) {
 18314               		.loc 2 1655 0
 18315 7a26 20E0      		ldi r18,0
 18316 7a28 30E0      		ldi r19,0
 18317 7a2a A901      		movw r20,r18
 18318 7a2c 6F89      		ldd r22,Y+23
 18319 7a2e 788D      		ldd r23,Y+24
 18320 7a30 898D      		ldd r24,Y+25
 18321 7a32 9A8D      		ldd r25,Y+26
 18322 7a34 0E94 0000 		call __ltsf2
 18323 7a38 8823      		tst r24
 18324 7a3a 04F4      		brge .L727
 18325               		.loc 2 1655 0 is_stmt 0 discriminator 1
 18326 7a3c 20E0      		ldi r18,0
 18327 7a3e 30E0      		ldi r19,0
 18328 7a40 A901      		movw r20,r18
 18329 7a42 6B89      		ldd r22,Y+19
 18330 7a44 7C89      		ldd r23,Y+20
 18331 7a46 8D89      		ldd r24,Y+21
 18332 7a48 9E89      		ldd r25,Y+22
 18333 7a4a 0E94 0000 		call __gesf2
 18334 7a4e 8823      		tst r24
 18335 7a50 04F0      		brlt .L727
1656:lp_solve_5.5/lp_presolve.c ****         ps->pluneg[i]--;
 18336               		.loc 2 1656 0 is_stmt 1
 18337 7a52 8989      		ldd r24,Y+17
 18338 7a54 9A89      		ldd r25,Y+18
 18339 7a56 FC01      		movw r30,r24
 18340 7a58 2285      		ldd r18,Z+10
 18341 7a5a 3385      		ldd r19,Z+11
 18342 7a5c 8D8D      		ldd r24,Y+29
 18343 7a5e 9E8D      		ldd r25,Y+30
 18344 7a60 880F      		lsl r24
 18345 7a62 991F      		rol r25
 18346 7a64 820F      		add r24,r18
 18347 7a66 931F      		adc r25,r19
 18348 7a68 FC01      		movw r30,r24
 18349 7a6a 2081      		ld r18,Z
 18350 7a6c 3181      		ldd r19,Z+1
 18351 7a6e 2150      		subi r18,1
 18352 7a70 3109      		sbc r19,__zero_reg__
 18353 7a72 FC01      		movw r30,r24
 18354 7a74 3183      		std Z+1,r19
 18355 7a76 2083      		st Z,r18
 18356               	.L727:
1657:lp_solve_5.5/lp_presolve.c ****       }
1658:lp_solve_5.5/lp_presolve.c ****     }
1659:lp_solve_5.5/lp_presolve.c **** 
1660:lp_solve_5.5/lp_presolve.c ****    /* Compute associated constraint contribution values */
1661:lp_solve_5.5/lp_presolve.c ****     upfinite = (MYBOOL) (upbound < lp->infinite);
 18357               		.loc 2 1661 0
 18358 7a78 8C85      		ldd r24,Y+12
 18359 7a7a 9D85      		ldd r25,Y+13
 18360 7a7c 865F      		subi r24,-10
 18361 7a7e 9C4F      		sbci r25,-4
 18362 7a80 FC01      		movw r30,r24
 18363 7a82 8081      		ld r24,Z
 18364 7a84 9181      		ldd r25,Z+1
 18365 7a86 A281      		ldd r26,Z+2
 18366 7a88 B381      		ldd r27,Z+3
 18367 7a8a 11E0      		ldi r17,lo8(1)
 18368 7a8c 2B89      		ldd r18,Y+19
 18369 7a8e 3C89      		ldd r19,Y+20
 18370 7a90 4D89      		ldd r20,Y+21
 18371 7a92 5E89      		ldd r21,Y+22
 18372 7a94 BC01      		movw r22,r24
 18373 7a96 CD01      		movw r24,r26
 18374 7a98 0E94 0000 		call __gtsf2
 18375 7a9c 1816      		cp __zero_reg__,r24
 18376 7a9e 04F0      		brlt .L732
 18377 7aa0 10E0      		ldi r17,0
 18378               	.L732:
 18379 7aa2 18A7      		std Y+40,r17
1662:lp_solve_5.5/lp_presolve.c ****     lofinite = (MYBOOL) (lobound > -lp->infinite);
 18380               		.loc 2 1662 0
 18381 7aa4 8C85      		ldd r24,Y+12
 18382 7aa6 9D85      		ldd r25,Y+13
 18383 7aa8 865F      		subi r24,-10
 18384 7aaa 9C4F      		sbci r25,-4
 18385 7aac FC01      		movw r30,r24
 18386 7aae 8081      		ld r24,Z
 18387 7ab0 9181      		ldd r25,Z+1
 18388 7ab2 A281      		ldd r26,Z+2
 18389 7ab4 B381      		ldd r27,Z+3
 18390 7ab6 B058      		subi r27,0x80
 18391 7ab8 11E0      		ldi r17,lo8(1)
 18392 7aba 2F89      		ldd r18,Y+23
 18393 7abc 388D      		ldd r19,Y+24
 18394 7abe 498D      		ldd r20,Y+25
 18395 7ac0 5A8D      		ldd r21,Y+26
 18396 7ac2 BC01      		movw r22,r24
 18397 7ac4 CD01      		movw r24,r26
 18398 7ac6 0E94 0000 		call __ltsf2
 18399 7aca 8823      		tst r24
 18400 7acc 04F0      		brlt .L733
 18401 7ace 10E0      		ldi r17,0
 18402               	.L733:
 18403 7ad0 19A7      		std Y+41,r17
1663:lp_solve_5.5/lp_presolve.c ****     if(upfinite || lofinite) {
 18404               		.loc 2 1663 0
 18405 7ad2 88A5      		ldd r24,Y+40
 18406 7ad4 8823      		tst r24
 18407 7ad6 01F4      		brne .L734
 18408               		.loc 2 1663 0 is_stmt 0 discriminator 1
 18409 7ad8 89A5      		ldd r24,Y+41
 18410 7ada 8823      		tst r24
 18411 7adc 01F0      		breq .L735
 18412               	.L734:
1664:lp_solve_5.5/lp_presolve.c ****       if(remove)
 18413               		.loc 2 1664 0 is_stmt 1
 18414 7ade 8AAD      		ldd r24,Y+58
 18415 7ae0 8823      		tst r24
 18416 7ae2 01F0      		breq .L736
1665:lp_solve_5.5/lp_presolve.c ****         ps->infcount[i]--;
 18417               		.loc 2 1665 0
 18418 7ae4 8989      		ldd r24,Y+17
 18419 7ae6 9A89      		ldd r25,Y+18
 18420 7ae8 FC01      		movw r30,r24
 18421 7aea 2485      		ldd r18,Z+12
 18422 7aec 3585      		ldd r19,Z+13
 18423 7aee 8D8D      		ldd r24,Y+29
 18424 7af0 9E8D      		ldd r25,Y+30
 18425 7af2 880F      		lsl r24
 18426 7af4 991F      		rol r25
 18427 7af6 820F      		add r24,r18
 18428 7af8 931F      		adc r25,r19
 18429 7afa FC01      		movw r30,r24
 18430 7afc 2081      		ld r18,Z
 18431 7afe 3181      		ldd r19,Z+1
 18432 7b00 2150      		subi r18,1
 18433 7b02 3109      		sbc r19,__zero_reg__
 18434 7b04 FC01      		movw r30,r24
 18435 7b06 3183      		std Z+1,r19
 18436 7b08 2083      		st Z,r18
 18437 7b0a 00C0      		rjmp .L735
 18438               	.L736:
1666:lp_solve_5.5/lp_presolve.c ****       else
1667:lp_solve_5.5/lp_presolve.c ****         ps->infcount[i]++;
 18439               		.loc 2 1667 0
 18440 7b0c 8989      		ldd r24,Y+17
 18441 7b0e 9A89      		ldd r25,Y+18
 18442 7b10 FC01      		movw r30,r24
 18443 7b12 2485      		ldd r18,Z+12
 18444 7b14 3585      		ldd r19,Z+13
 18445 7b16 8D8D      		ldd r24,Y+29
 18446 7b18 9E8D      		ldd r25,Y+30
 18447 7b1a 880F      		lsl r24
 18448 7b1c 991F      		rol r25
 18449 7b1e 820F      		add r24,r18
 18450 7b20 931F      		adc r25,r19
 18451 7b22 FC01      		movw r30,r24
 18452 7b24 2081      		ld r18,Z
 18453 7b26 3181      		ldd r19,Z+1
 18454 7b28 2F5F      		subi r18,-1
 18455 7b2a 3F4F      		sbci r19,-1
 18456 7b2c FC01      		movw r30,r24
 18457 7b2e 3183      		std Z+1,r19
 18458 7b30 2083      		st Z,r18
 18459               	.L735:
1668:lp_solve_5.5/lp_presolve.c ****     }
1669:lp_solve_5.5/lp_presolve.c ****     upvalue = my_if(upfinite, Value*upbound, my_chsign(isneg, lp->infinite));
 18460               		.loc 2 1669 0
 18461 7b32 88A5      		ldd r24,Y+40
 18462 7b34 8823      		tst r24
 18463 7b36 01F0      		breq .L737
 18464               		.loc 2 1669 0 is_stmt 0 discriminator 1
 18465 7b38 2B89      		ldd r18,Y+19
 18466 7b3a 3C89      		ldd r19,Y+20
 18467 7b3c 4D89      		ldd r20,Y+21
 18468 7b3e 5E89      		ldd r21,Y+22
 18469 7b40 6F8D      		ldd r22,Y+31
 18470 7b42 78A1      		ldd r23,Y+32
 18471 7b44 89A1      		ldd r24,Y+33
 18472 7b46 9AA1      		ldd r25,Y+34
 18473 7b48 0E94 0000 		call __mulsf3
 18474 7b4c DC01      		movw r26,r24
 18475 7b4e CB01      		movw r24,r22
 18476 7b50 00C0      		rjmp .L738
 18477               	.L737:
 18478               		.loc 2 1669 0 discriminator 2
 18479 7b52 8FA1      		ldd r24,Y+39
 18480 7b54 8823      		tst r24
 18481 7b56 01F0      		breq .L739
 18482               		.loc 2 1669 0 discriminator 4
 18483 7b58 8C85      		ldd r24,Y+12
 18484 7b5a 9D85      		ldd r25,Y+13
 18485 7b5c 865F      		subi r24,-10
 18486 7b5e 9C4F      		sbci r25,-4
 18487 7b60 FC01      		movw r30,r24
 18488 7b62 8081      		ld r24,Z
 18489 7b64 9181      		ldd r25,Z+1
 18490 7b66 A281      		ldd r26,Z+2
 18491 7b68 B381      		ldd r27,Z+3
 18492 7b6a 20E0      		ldi r18,0
 18493 7b6c 30E0      		ldi r19,0
 18494 7b6e A901      		movw r20,r18
 18495 7b70 BC01      		movw r22,r24
 18496 7b72 CD01      		movw r24,r26
 18497 7b74 0E94 0000 		call __nesf2
 18498 7b78 8823      		tst r24
 18499 7b7a 01F0      		breq .L739
 18500               		.loc 2 1669 0 discriminator 6
 18501 7b7c 8C85      		ldd r24,Y+12
 18502 7b7e 9D85      		ldd r25,Y+13
 18503 7b80 865F      		subi r24,-10
 18504 7b82 9C4F      		sbci r25,-4
 18505 7b84 FC01      		movw r30,r24
 18506 7b86 8081      		ld r24,Z
 18507 7b88 9181      		ldd r25,Z+1
 18508 7b8a A281      		ldd r26,Z+2
 18509 7b8c B381      		ldd r27,Z+3
 18510 7b8e B058      		subi r27,0x80
 18511 7b90 00C0      		rjmp .L738
 18512               	.L739:
 18513               		.loc 2 1669 0 discriminator 7
 18514 7b92 8C85      		ldd r24,Y+12
 18515 7b94 9D85      		ldd r25,Y+13
 18516 7b96 865F      		subi r24,-10
 18517 7b98 9C4F      		sbci r25,-4
 18518 7b9a FC01      		movw r30,r24
 18519 7b9c 8081      		ld r24,Z
 18520 7b9e 9181      		ldd r25,Z+1
 18521 7ba0 A281      		ldd r26,Z+2
 18522 7ba2 B381      		ldd r27,Z+3
 18523               	.L738:
 18524               		.loc 2 1669 0 discriminator 10
 18525 7ba4 8EA7      		std Y+46,r24
 18526 7ba6 9FA7      		std Y+47,r25
 18527 7ba8 A8AB      		std Y+48,r26
 18528 7baa B9AB      		std Y+49,r27
1670:lp_solve_5.5/lp_presolve.c ****     lovalue = my_if(lofinite, Value*lobound, my_chsign(isneg, -lp->infinite));
 18529               		.loc 2 1670 0 is_stmt 1 discriminator 10
 18530 7bac 89A5      		ldd r24,Y+41
 18531 7bae 8823      		tst r24
 18532 7bb0 01F0      		breq .L742
 18533               		.loc 2 1670 0 is_stmt 0 discriminator 1
 18534 7bb2 2F89      		ldd r18,Y+23
 18535 7bb4 388D      		ldd r19,Y+24
 18536 7bb6 498D      		ldd r20,Y+25
 18537 7bb8 5A8D      		ldd r21,Y+26
 18538 7bba 6F8D      		ldd r22,Y+31
 18539 7bbc 78A1      		ldd r23,Y+32
 18540 7bbe 89A1      		ldd r24,Y+33
 18541 7bc0 9AA1      		ldd r25,Y+34
 18542 7bc2 0E94 0000 		call __mulsf3
 18543 7bc6 DC01      		movw r26,r24
 18544 7bc8 CB01      		movw r24,r22
 18545 7bca 00C0      		rjmp .L743
 18546               	.L742:
 18547               		.loc 2 1670 0 discriminator 2
 18548 7bcc 8FA1      		ldd r24,Y+39
 18549 7bce 8823      		tst r24
 18550 7bd0 01F0      		breq .L744
 18551               		.loc 2 1670 0 discriminator 4
 18552 7bd2 8C85      		ldd r24,Y+12
 18553 7bd4 9D85      		ldd r25,Y+13
 18554 7bd6 865F      		subi r24,-10
 18555 7bd8 9C4F      		sbci r25,-4
 18556 7bda FC01      		movw r30,r24
 18557 7bdc 8081      		ld r24,Z
 18558 7bde 9181      		ldd r25,Z+1
 18559 7be0 A281      		ldd r26,Z+2
 18560 7be2 B381      		ldd r27,Z+3
 18561 7be4 20E0      		ldi r18,0
 18562 7be6 30E0      		ldi r19,0
 18563 7be8 A901      		movw r20,r18
 18564 7bea BC01      		movw r22,r24
 18565 7bec CD01      		movw r24,r26
 18566 7bee 0E94 0000 		call __nesf2
 18567 7bf2 8823      		tst r24
 18568 7bf4 01F0      		breq .L744
 18569               		.loc 2 1670 0 discriminator 6
 18570 7bf6 8C85      		ldd r24,Y+12
 18571 7bf8 9D85      		ldd r25,Y+13
 18572 7bfa 865F      		subi r24,-10
 18573 7bfc 9C4F      		sbci r25,-4
 18574 7bfe FC01      		movw r30,r24
 18575 7c00 8081      		ld r24,Z
 18576 7c02 9181      		ldd r25,Z+1
 18577 7c04 A281      		ldd r26,Z+2
 18578 7c06 B381      		ldd r27,Z+3
 18579 7c08 00C0      		rjmp .L743
 18580               	.L744:
 18581               		.loc 2 1670 0 discriminator 7
 18582 7c0a 8C85      		ldd r24,Y+12
 18583 7c0c 9D85      		ldd r25,Y+13
 18584 7c0e 865F      		subi r24,-10
 18585 7c10 9C4F      		sbci r25,-4
 18586 7c12 FC01      		movw r30,r24
 18587 7c14 8081      		ld r24,Z
 18588 7c16 9181      		ldd r25,Z+1
 18589 7c18 A281      		ldd r26,Z+2
 18590 7c1a B381      		ldd r27,Z+3
 18591 7c1c B058      		subi r27,0x80
 18592               	.L743:
 18593               		.loc 2 1670 0 discriminator 10
 18594 7c1e 8AA7      		std Y+42,r24
 18595 7c20 9BA7      		std Y+43,r25
 18596 7c22 ACA7      		std Y+44,r26
 18597 7c24 BDA7      		std Y+45,r27
1671:lp_solve_5.5/lp_presolve.c **** 
1672:lp_solve_5.5/lp_presolve.c ****    /* Cumulate effective upper column bound (only bother with non-finite bound) */
1673:lp_solve_5.5/lp_presolve.c ****     if(isneg) {
 18598               		.loc 2 1673 0 is_stmt 1 discriminator 10
 18599 7c26 8FA1      		ldd r24,Y+39
 18600 7c28 8823      		tst r24
 18601 7c2a 01F4      		brne .+2
 18602 7c2c 00C0      		rjmp .L747
1674:lp_solve_5.5/lp_presolve.c ****       if((ps->negupper[i] < lp->infinite) && lofinite) {
 18603               		.loc 2 1674 0
 18604 7c2e 8989      		ldd r24,Y+17
 18605 7c30 9A89      		ldd r25,Y+18
 18606 7c32 FC01      		movw r30,r24
 18607 7c34 2489      		ldd r18,Z+20
 18608 7c36 3589      		ldd r19,Z+21
 18609 7c38 8D8D      		ldd r24,Y+29
 18610 7c3a 9E8D      		ldd r25,Y+30
 18611 7c3c 880F      		lsl r24
 18612 7c3e 991F      		rol r25
 18613 7c40 880F      		lsl r24
 18614 7c42 991F      		rol r25
 18615 7c44 820F      		add r24,r18
 18616 7c46 931F      		adc r25,r19
 18617 7c48 FC01      		movw r30,r24
 18618 7c4a 8081      		ld r24,Z
 18619 7c4c 9181      		ldd r25,Z+1
 18620 7c4e A281      		ldd r26,Z+2
 18621 7c50 B381      		ldd r27,Z+3
 18622 7c52 2C85      		ldd r18,Y+12
 18623 7c54 3D85      		ldd r19,Y+13
 18624 7c56 265F      		subi r18,-10
 18625 7c58 3C4F      		sbci r19,-4
 18626 7c5a F901      		movw r30,r18
 18627 7c5c 2081      		ld r18,Z
 18628 7c5e 3181      		ldd r19,Z+1
 18629 7c60 4281      		ldd r20,Z+2
 18630 7c62 5381      		ldd r21,Z+3
 18631 7c64 BC01      		movw r22,r24
 18632 7c66 CD01      		movw r24,r26
 18633 7c68 0E94 0000 		call __ltsf2
 18634 7c6c 8823      		tst r24
 18635 7c6e 04F0      		brlt .+2
 18636 7c70 00C0      		rjmp .L748
 18637               		.loc 2 1674 0 is_stmt 0 discriminator 1
 18638 7c72 89A5      		ldd r24,Y+41
 18639 7c74 8823      		tst r24
 18640 7c76 01F4      		brne .+2
 18641 7c78 00C0      		rjmp .L748
1675:lp_solve_5.5/lp_presolve.c ****         ps->negupper[i] += mult*lovalue;
 18642               		.loc 2 1675 0 is_stmt 1
 18643 7c7a 8989      		ldd r24,Y+17
 18644 7c7c 9A89      		ldd r25,Y+18
 18645 7c7e FC01      		movw r30,r24
 18646 7c80 2489      		ldd r18,Z+20
 18647 7c82 3589      		ldd r19,Z+21
 18648 7c84 8D8D      		ldd r24,Y+29
 18649 7c86 9E8D      		ldd r25,Y+30
 18650 7c88 880F      		lsl r24
 18651 7c8a 991F      		rol r25
 18652 7c8c 880F      		lsl r24
 18653 7c8e 991F      		rol r25
 18654 7c90 8901      		movw r16,r18
 18655 7c92 080F      		add r16,r24
 18656 7c94 191F      		adc r17,r25
 18657 7c96 8989      		ldd r24,Y+17
 18658 7c98 9A89      		ldd r25,Y+18
 18659 7c9a FC01      		movw r30,r24
 18660 7c9c 2489      		ldd r18,Z+20
 18661 7c9e 3589      		ldd r19,Z+21
 18662 7ca0 8D8D      		ldd r24,Y+29
 18663 7ca2 9E8D      		ldd r25,Y+30
 18664 7ca4 880F      		lsl r24
 18665 7ca6 991F      		rol r25
 18666 7ca8 880F      		lsl r24
 18667 7caa 991F      		rol r25
 18668 7cac 820F      		add r24,r18
 18669 7cae 931F      		adc r25,r19
 18670 7cb0 FC01      		movw r30,r24
 18671 7cb2 C080      		ld r12,Z
 18672 7cb4 D180      		ldd r13,Z+1
 18673 7cb6 E280      		ldd r14,Z+2
 18674 7cb8 F380      		ldd r15,Z+3
 18675 7cba 8AA5      		ldd r24,Y+42
 18676 7cbc 9BA5      		ldd r25,Y+43
 18677 7cbe ACA5      		ldd r26,Y+44
 18678 7cc0 BDA5      		ldd r27,Y+45
 18679 7cc2 2885      		ldd r18,Y+8
 18680 7cc4 3985      		ldd r19,Y+9
 18681 7cc6 4A85      		ldd r20,Y+10
 18682 7cc8 5B85      		ldd r21,Y+11
 18683 7cca BC01      		movw r22,r24
 18684 7ccc CD01      		movw r24,r26
 18685 7cce 0E94 0000 		call __mulsf3
 18686 7cd2 DC01      		movw r26,r24
 18687 7cd4 CB01      		movw r24,r22
 18688 7cd6 9C01      		movw r18,r24
 18689 7cd8 AD01      		movw r20,r26
 18690 7cda C701      		movw r24,r14
 18691 7cdc B601      		movw r22,r12
 18692 7cde 0E94 0000 		call __addsf3
 18693 7ce2 DC01      		movw r26,r24
 18694 7ce4 CB01      		movw r24,r22
 18695 7ce6 F801      		movw r30,r16
 18696 7ce8 8083      		st Z,r24
 18697 7cea 9183      		std Z+1,r25
 18698 7cec A283      		std Z+2,r26
 18699 7cee B383      		std Z+3,r27
1676:lp_solve_5.5/lp_presolve.c ****         ps->negupper[i] = presolve_roundrhs(lp, ps->negupper[i], FALSE);
 18700               		.loc 2 1676 0
 18701 7cf0 8989      		ldd r24,Y+17
 18702 7cf2 9A89      		ldd r25,Y+18
 18703 7cf4 FC01      		movw r30,r24
 18704 7cf6 2489      		ldd r18,Z+20
 18705 7cf8 3589      		ldd r19,Z+21
 18706 7cfa 8D8D      		ldd r24,Y+29
 18707 7cfc 9E8D      		ldd r25,Y+30
 18708 7cfe 880F      		lsl r24
 18709 7d00 991F      		rol r25
 18710 7d02 880F      		lsl r24
 18711 7d04 991F      		rol r25
 18712 7d06 8901      		movw r16,r18
 18713 7d08 080F      		add r16,r24
 18714 7d0a 191F      		adc r17,r25
 18715 7d0c 8989      		ldd r24,Y+17
 18716 7d0e 9A89      		ldd r25,Y+18
 18717 7d10 FC01      		movw r30,r24
 18718 7d12 2489      		ldd r18,Z+20
 18719 7d14 3589      		ldd r19,Z+21
 18720 7d16 8D8D      		ldd r24,Y+29
 18721 7d18 9E8D      		ldd r25,Y+30
 18722 7d1a 880F      		lsl r24
 18723 7d1c 991F      		rol r25
 18724 7d1e 880F      		lsl r24
 18725 7d20 991F      		rol r25
 18726 7d22 820F      		add r24,r18
 18727 7d24 931F      		adc r25,r19
 18728 7d26 FC01      		movw r30,r24
 18729 7d28 8081      		ld r24,Z
 18730 7d2a 9181      		ldd r25,Z+1
 18731 7d2c A281      		ldd r26,Z+2
 18732 7d2e B381      		ldd r27,Z+3
 18733 7d30 EC85      		ldd r30,Y+12
 18734 7d32 FD85      		ldd r31,Y+13
 18735 7d34 20E0      		ldi r18,0
 18736 7d36 AC01      		movw r20,r24
 18737 7d38 BD01      		movw r22,r26
 18738 7d3a CF01      		movw r24,r30
 18739 7d3c 0E94 0000 		call presolve_roundrhs
 18740 7d40 DC01      		movw r26,r24
 18741 7d42 CB01      		movw r24,r22
 18742 7d44 F801      		movw r30,r16
 18743 7d46 8083      		st Z,r24
 18744 7d48 9183      		std Z+1,r25
 18745 7d4a A283      		std Z+2,r26
 18746 7d4c B383      		std Z+3,r27
 18747 7d4e 00C0      		rjmp .L752
 18748               	.L748:
1677:lp_solve_5.5/lp_presolve.c ****       }
1678:lp_solve_5.5/lp_presolve.c ****       else if(remove && !lofinite)
 18749               		.loc 2 1678 0
 18750 7d50 8AAD      		ldd r24,Y+58
 18751 7d52 8823      		tst r24
 18752 7d54 01F0      		breq .L751
 18753               		.loc 2 1678 0 is_stmt 0 discriminator 1
 18754 7d56 89A5      		ldd r24,Y+41
 18755 7d58 8823      		tst r24
 18756 7d5a 01F4      		brne .L751
1679:lp_solve_5.5/lp_presolve.c ****         doupdate = TRUE;
 18757               		.loc 2 1679 0 is_stmt 1
 18758 7d5c 81E0      		ldi r24,lo8(1)
 18759 7d5e 8B83      		std Y+3,r24
 18760 7d60 00C0      		rjmp .L752
 18761               	.L751:
1680:lp_solve_5.5/lp_presolve.c ****       else
1681:lp_solve_5.5/lp_presolve.c ****         ps->negupper[i] = lp->infinite;
 18762               		.loc 2 1681 0
 18763 7d62 8989      		ldd r24,Y+17
 18764 7d64 9A89      		ldd r25,Y+18
 18765 7d66 FC01      		movw r30,r24
 18766 7d68 2489      		ldd r18,Z+20
 18767 7d6a 3589      		ldd r19,Z+21
 18768 7d6c 8D8D      		ldd r24,Y+29
 18769 7d6e 9E8D      		ldd r25,Y+30
 18770 7d70 880F      		lsl r24
 18771 7d72 991F      		rol r25
 18772 7d74 880F      		lsl r24
 18773 7d76 991F      		rol r25
 18774 7d78 280F      		add r18,r24
 18775 7d7a 391F      		adc r19,r25
 18776 7d7c 8C85      		ldd r24,Y+12
 18777 7d7e 9D85      		ldd r25,Y+13
 18778 7d80 865F      		subi r24,-10
 18779 7d82 9C4F      		sbci r25,-4
 18780 7d84 FC01      		movw r30,r24
 18781 7d86 8081      		ld r24,Z
 18782 7d88 9181      		ldd r25,Z+1
 18783 7d8a A281      		ldd r26,Z+2
 18784 7d8c B381      		ldd r27,Z+3
 18785 7d8e F901      		movw r30,r18
 18786 7d90 8083      		st Z,r24
 18787 7d92 9183      		std Z+1,r25
 18788 7d94 A283      		std Z+2,r26
 18789 7d96 B383      		std Z+3,r27
 18790 7d98 00C0      		rjmp .L752
 18791               	.L747:
1682:lp_solve_5.5/lp_presolve.c ****     }
1683:lp_solve_5.5/lp_presolve.c ****     else {
1684:lp_solve_5.5/lp_presolve.c ****       if((ps->pluupper[i] < lp->infinite) && upfinite) {
 18792               		.loc 2 1684 0
 18793 7d9a 8989      		ldd r24,Y+17
 18794 7d9c 9A89      		ldd r25,Y+18
 18795 7d9e FC01      		movw r30,r24
 18796 7da0 2289      		ldd r18,Z+18
 18797 7da2 3389      		ldd r19,Z+19
 18798 7da4 8D8D      		ldd r24,Y+29
 18799 7da6 9E8D      		ldd r25,Y+30
 18800 7da8 880F      		lsl r24
 18801 7daa 991F      		rol r25
 18802 7dac 880F      		lsl r24
 18803 7dae 991F      		rol r25
 18804 7db0 820F      		add r24,r18
 18805 7db2 931F      		adc r25,r19
 18806 7db4 FC01      		movw r30,r24
 18807 7db6 8081      		ld r24,Z
 18808 7db8 9181      		ldd r25,Z+1
 18809 7dba A281      		ldd r26,Z+2
 18810 7dbc B381      		ldd r27,Z+3
 18811 7dbe 2C85      		ldd r18,Y+12
 18812 7dc0 3D85      		ldd r19,Y+13
 18813 7dc2 265F      		subi r18,-10
 18814 7dc4 3C4F      		sbci r19,-4
 18815 7dc6 F901      		movw r30,r18
 18816 7dc8 2081      		ld r18,Z
 18817 7dca 3181      		ldd r19,Z+1
 18818 7dcc 4281      		ldd r20,Z+2
 18819 7dce 5381      		ldd r21,Z+3
 18820 7dd0 BC01      		movw r22,r24
 18821 7dd2 CD01      		movw r24,r26
 18822 7dd4 0E94 0000 		call __ltsf2
 18823 7dd8 8823      		tst r24
 18824 7dda 04F0      		brlt .+2
 18825 7ddc 00C0      		rjmp .L753
 18826               		.loc 2 1684 0 is_stmt 0 discriminator 1
 18827 7dde 88A5      		ldd r24,Y+40
 18828 7de0 8823      		tst r24
 18829 7de2 01F4      		brne .+2
 18830 7de4 00C0      		rjmp .L753
1685:lp_solve_5.5/lp_presolve.c ****         ps->pluupper[i] += mult*upvalue;
 18831               		.loc 2 1685 0 is_stmt 1
 18832 7de6 8989      		ldd r24,Y+17
 18833 7de8 9A89      		ldd r25,Y+18
 18834 7dea FC01      		movw r30,r24
 18835 7dec 2289      		ldd r18,Z+18
 18836 7dee 3389      		ldd r19,Z+19
 18837 7df0 8D8D      		ldd r24,Y+29
 18838 7df2 9E8D      		ldd r25,Y+30
 18839 7df4 880F      		lsl r24
 18840 7df6 991F      		rol r25
 18841 7df8 880F      		lsl r24
 18842 7dfa 991F      		rol r25
 18843 7dfc 8901      		movw r16,r18
 18844 7dfe 080F      		add r16,r24
 18845 7e00 191F      		adc r17,r25
 18846 7e02 8989      		ldd r24,Y+17
 18847 7e04 9A89      		ldd r25,Y+18
 18848 7e06 FC01      		movw r30,r24
 18849 7e08 2289      		ldd r18,Z+18
 18850 7e0a 3389      		ldd r19,Z+19
 18851 7e0c 8D8D      		ldd r24,Y+29
 18852 7e0e 9E8D      		ldd r25,Y+30
 18853 7e10 880F      		lsl r24
 18854 7e12 991F      		rol r25
 18855 7e14 880F      		lsl r24
 18856 7e16 991F      		rol r25
 18857 7e18 820F      		add r24,r18
 18858 7e1a 931F      		adc r25,r19
 18859 7e1c FC01      		movw r30,r24
 18860 7e1e C080      		ld r12,Z
 18861 7e20 D180      		ldd r13,Z+1
 18862 7e22 E280      		ldd r14,Z+2
 18863 7e24 F380      		ldd r15,Z+3
 18864 7e26 8EA5      		ldd r24,Y+46
 18865 7e28 9FA5      		ldd r25,Y+47
 18866 7e2a A8A9      		ldd r26,Y+48
 18867 7e2c B9A9      		ldd r27,Y+49
 18868 7e2e 2885      		ldd r18,Y+8
 18869 7e30 3985      		ldd r19,Y+9
 18870 7e32 4A85      		ldd r20,Y+10
 18871 7e34 5B85      		ldd r21,Y+11
 18872 7e36 BC01      		movw r22,r24
 18873 7e38 CD01      		movw r24,r26
 18874 7e3a 0E94 0000 		call __mulsf3
 18875 7e3e DC01      		movw r26,r24
 18876 7e40 CB01      		movw r24,r22
 18877 7e42 9C01      		movw r18,r24
 18878 7e44 AD01      		movw r20,r26
 18879 7e46 C701      		movw r24,r14
 18880 7e48 B601      		movw r22,r12
 18881 7e4a 0E94 0000 		call __addsf3
 18882 7e4e DC01      		movw r26,r24
 18883 7e50 CB01      		movw r24,r22
 18884 7e52 F801      		movw r30,r16
 18885 7e54 8083      		st Z,r24
 18886 7e56 9183      		std Z+1,r25
 18887 7e58 A283      		std Z+2,r26
 18888 7e5a B383      		std Z+3,r27
1686:lp_solve_5.5/lp_presolve.c ****         ps->pluupper[i] = presolve_roundrhs(lp, ps->pluupper[i], FALSE);
 18889               		.loc 2 1686 0
 18890 7e5c 8989      		ldd r24,Y+17
 18891 7e5e 9A89      		ldd r25,Y+18
 18892 7e60 FC01      		movw r30,r24
 18893 7e62 2289      		ldd r18,Z+18
 18894 7e64 3389      		ldd r19,Z+19
 18895 7e66 8D8D      		ldd r24,Y+29
 18896 7e68 9E8D      		ldd r25,Y+30
 18897 7e6a 880F      		lsl r24
 18898 7e6c 991F      		rol r25
 18899 7e6e 880F      		lsl r24
 18900 7e70 991F      		rol r25
 18901 7e72 8901      		movw r16,r18
 18902 7e74 080F      		add r16,r24
 18903 7e76 191F      		adc r17,r25
 18904 7e78 8989      		ldd r24,Y+17
 18905 7e7a 9A89      		ldd r25,Y+18
 18906 7e7c FC01      		movw r30,r24
 18907 7e7e 2289      		ldd r18,Z+18
 18908 7e80 3389      		ldd r19,Z+19
 18909 7e82 8D8D      		ldd r24,Y+29
 18910 7e84 9E8D      		ldd r25,Y+30
 18911 7e86 880F      		lsl r24
 18912 7e88 991F      		rol r25
 18913 7e8a 880F      		lsl r24
 18914 7e8c 991F      		rol r25
 18915 7e8e 820F      		add r24,r18
 18916 7e90 931F      		adc r25,r19
 18917 7e92 FC01      		movw r30,r24
 18918 7e94 8081      		ld r24,Z
 18919 7e96 9181      		ldd r25,Z+1
 18920 7e98 A281      		ldd r26,Z+2
 18921 7e9a B381      		ldd r27,Z+3
 18922 7e9c EC85      		ldd r30,Y+12
 18923 7e9e FD85      		ldd r31,Y+13
 18924 7ea0 20E0      		ldi r18,0
 18925 7ea2 AC01      		movw r20,r24
 18926 7ea4 BD01      		movw r22,r26
 18927 7ea6 CF01      		movw r24,r30
 18928 7ea8 0E94 0000 		call presolve_roundrhs
 18929 7eac DC01      		movw r26,r24
 18930 7eae CB01      		movw r24,r22
 18931 7eb0 F801      		movw r30,r16
 18932 7eb2 8083      		st Z,r24
 18933 7eb4 9183      		std Z+1,r25
 18934 7eb6 A283      		std Z+2,r26
 18935 7eb8 B383      		std Z+3,r27
 18936 7eba 00C0      		rjmp .L752
 18937               	.L753:
1687:lp_solve_5.5/lp_presolve.c ****       }
1688:lp_solve_5.5/lp_presolve.c ****       else if(remove && !upfinite)
 18938               		.loc 2 1688 0
 18939 7ebc 8AAD      		ldd r24,Y+58
 18940 7ebe 8823      		tst r24
 18941 7ec0 01F0      		breq .L755
 18942               		.loc 2 1688 0 is_stmt 0 discriminator 1
 18943 7ec2 88A5      		ldd r24,Y+40
 18944 7ec4 8823      		tst r24
 18945 7ec6 01F4      		brne .L755
1689:lp_solve_5.5/lp_presolve.c ****         doupdate = TRUE;
 18946               		.loc 2 1689 0 is_stmt 1
 18947 7ec8 81E0      		ldi r24,lo8(1)
 18948 7eca 8B83      		std Y+3,r24
 18949 7ecc 00C0      		rjmp .L752
 18950               	.L755:
1690:lp_solve_5.5/lp_presolve.c ****       else
1691:lp_solve_5.5/lp_presolve.c ****         ps->pluupper[i] = lp->infinite;
 18951               		.loc 2 1691 0
 18952 7ece 8989      		ldd r24,Y+17
 18953 7ed0 9A89      		ldd r25,Y+18
 18954 7ed2 FC01      		movw r30,r24
 18955 7ed4 2289      		ldd r18,Z+18
 18956 7ed6 3389      		ldd r19,Z+19
 18957 7ed8 8D8D      		ldd r24,Y+29
 18958 7eda 9E8D      		ldd r25,Y+30
 18959 7edc 880F      		lsl r24
 18960 7ede 991F      		rol r25
 18961 7ee0 880F      		lsl r24
 18962 7ee2 991F      		rol r25
 18963 7ee4 280F      		add r18,r24
 18964 7ee6 391F      		adc r19,r25
 18965 7ee8 8C85      		ldd r24,Y+12
 18966 7eea 9D85      		ldd r25,Y+13
 18967 7eec 865F      		subi r24,-10
 18968 7eee 9C4F      		sbci r25,-4
 18969 7ef0 FC01      		movw r30,r24
 18970 7ef2 8081      		ld r24,Z
 18971 7ef4 9181      		ldd r25,Z+1
 18972 7ef6 A281      		ldd r26,Z+2
 18973 7ef8 B381      		ldd r27,Z+3
 18974 7efa F901      		movw r30,r18
 18975 7efc 8083      		st Z,r24
 18976 7efe 9183      		std Z+1,r25
 18977 7f00 A283      		std Z+2,r26
 18978 7f02 B383      		std Z+3,r27
 18979               	.L752:
1692:lp_solve_5.5/lp_presolve.c ****     }
1693:lp_solve_5.5/lp_presolve.c **** 
1694:lp_solve_5.5/lp_presolve.c ****    /* Cumulate effective lower column bound (only bother with non-finite bound) */
1695:lp_solve_5.5/lp_presolve.c ****     if(isneg) {
 18980               		.loc 2 1695 0
 18981 7f04 8FA1      		ldd r24,Y+39
 18982 7f06 8823      		tst r24
 18983 7f08 01F4      		brne .+2
 18984 7f0a 00C0      		rjmp .L756
1696:lp_solve_5.5/lp_presolve.c ****       if((ps->neglower[i] > -lp->infinite) && upfinite) {
 18985               		.loc 2 1696 0
 18986 7f0c 8989      		ldd r24,Y+17
 18987 7f0e 9A89      		ldd r25,Y+18
 18988 7f10 FC01      		movw r30,r24
 18989 7f12 2089      		ldd r18,Z+16
 18990 7f14 3189      		ldd r19,Z+17
 18991 7f16 8D8D      		ldd r24,Y+29
 18992 7f18 9E8D      		ldd r25,Y+30
 18993 7f1a 880F      		lsl r24
 18994 7f1c 991F      		rol r25
 18995 7f1e 880F      		lsl r24
 18996 7f20 991F      		rol r25
 18997 7f22 820F      		add r24,r18
 18998 7f24 931F      		adc r25,r19
 18999 7f26 FC01      		movw r30,r24
 19000 7f28 E080      		ld r14,Z
 19001 7f2a F180      		ldd r15,Z+1
 19002 7f2c 0281      		ldd r16,Z+2
 19003 7f2e 1381      		ldd r17,Z+3
 19004 7f30 8C85      		ldd r24,Y+12
 19005 7f32 9D85      		ldd r25,Y+13
 19006 7f34 865F      		subi r24,-10
 19007 7f36 9C4F      		sbci r25,-4
 19008 7f38 FC01      		movw r30,r24
 19009 7f3a 8081      		ld r24,Z
 19010 7f3c 9181      		ldd r25,Z+1
 19011 7f3e A281      		ldd r26,Z+2
 19012 7f40 B381      		ldd r27,Z+3
 19013 7f42 B058      		subi r27,0x80
 19014 7f44 9C01      		movw r18,r24
 19015 7f46 AD01      		movw r20,r26
 19016 7f48 C801      		movw r24,r16
 19017 7f4a B701      		movw r22,r14
 19018 7f4c 0E94 0000 		call __gtsf2
 19019 7f50 1816      		cp __zero_reg__,r24
 19020 7f52 04F0      		brlt .+2
 19021 7f54 00C0      		rjmp .L757
 19022               		.loc 2 1696 0 is_stmt 0 discriminator 1
 19023 7f56 88A5      		ldd r24,Y+40
 19024 7f58 8823      		tst r24
 19025 7f5a 01F4      		brne .+2
 19026 7f5c 00C0      		rjmp .L757
1697:lp_solve_5.5/lp_presolve.c ****         ps->neglower[i] += mult*upvalue;
 19027               		.loc 2 1697 0 is_stmt 1
 19028 7f5e 8989      		ldd r24,Y+17
 19029 7f60 9A89      		ldd r25,Y+18
 19030 7f62 FC01      		movw r30,r24
 19031 7f64 2089      		ldd r18,Z+16
 19032 7f66 3189      		ldd r19,Z+17
 19033 7f68 8D8D      		ldd r24,Y+29
 19034 7f6a 9E8D      		ldd r25,Y+30
 19035 7f6c 880F      		lsl r24
 19036 7f6e 991F      		rol r25
 19037 7f70 880F      		lsl r24
 19038 7f72 991F      		rol r25
 19039 7f74 8901      		movw r16,r18
 19040 7f76 080F      		add r16,r24
 19041 7f78 191F      		adc r17,r25
 19042 7f7a 8989      		ldd r24,Y+17
 19043 7f7c 9A89      		ldd r25,Y+18
 19044 7f7e FC01      		movw r30,r24
 19045 7f80 2089      		ldd r18,Z+16
 19046 7f82 3189      		ldd r19,Z+17
 19047 7f84 8D8D      		ldd r24,Y+29
 19048 7f86 9E8D      		ldd r25,Y+30
 19049 7f88 880F      		lsl r24
 19050 7f8a 991F      		rol r25
 19051 7f8c 880F      		lsl r24
 19052 7f8e 991F      		rol r25
 19053 7f90 820F      		add r24,r18
 19054 7f92 931F      		adc r25,r19
 19055 7f94 FC01      		movw r30,r24
 19056 7f96 C080      		ld r12,Z
 19057 7f98 D180      		ldd r13,Z+1
 19058 7f9a E280      		ldd r14,Z+2
 19059 7f9c F380      		ldd r15,Z+3
 19060 7f9e 8EA5      		ldd r24,Y+46
 19061 7fa0 9FA5      		ldd r25,Y+47
 19062 7fa2 A8A9      		ldd r26,Y+48
 19063 7fa4 B9A9      		ldd r27,Y+49
 19064 7fa6 2885      		ldd r18,Y+8
 19065 7fa8 3985      		ldd r19,Y+9
 19066 7faa 4A85      		ldd r20,Y+10
 19067 7fac 5B85      		ldd r21,Y+11
 19068 7fae BC01      		movw r22,r24
 19069 7fb0 CD01      		movw r24,r26
 19070 7fb2 0E94 0000 		call __mulsf3
 19071 7fb6 DC01      		movw r26,r24
 19072 7fb8 CB01      		movw r24,r22
 19073 7fba 9C01      		movw r18,r24
 19074 7fbc AD01      		movw r20,r26
 19075 7fbe C701      		movw r24,r14
 19076 7fc0 B601      		movw r22,r12
 19077 7fc2 0E94 0000 		call __addsf3
 19078 7fc6 DC01      		movw r26,r24
 19079 7fc8 CB01      		movw r24,r22
 19080 7fca F801      		movw r30,r16
 19081 7fcc 8083      		st Z,r24
 19082 7fce 9183      		std Z+1,r25
 19083 7fd0 A283      		std Z+2,r26
 19084 7fd2 B383      		std Z+3,r27
1698:lp_solve_5.5/lp_presolve.c ****         ps->neglower[i] = presolve_roundrhs(lp, ps->neglower[i], TRUE);
 19085               		.loc 2 1698 0
 19086 7fd4 8989      		ldd r24,Y+17
 19087 7fd6 9A89      		ldd r25,Y+18
 19088 7fd8 FC01      		movw r30,r24
 19089 7fda 2089      		ldd r18,Z+16
 19090 7fdc 3189      		ldd r19,Z+17
 19091 7fde 8D8D      		ldd r24,Y+29
 19092 7fe0 9E8D      		ldd r25,Y+30
 19093 7fe2 880F      		lsl r24
 19094 7fe4 991F      		rol r25
 19095 7fe6 880F      		lsl r24
 19096 7fe8 991F      		rol r25
 19097 7fea 8901      		movw r16,r18
 19098 7fec 080F      		add r16,r24
 19099 7fee 191F      		adc r17,r25
 19100 7ff0 8989      		ldd r24,Y+17
 19101 7ff2 9A89      		ldd r25,Y+18
 19102 7ff4 FC01      		movw r30,r24
 19103 7ff6 2089      		ldd r18,Z+16
 19104 7ff8 3189      		ldd r19,Z+17
 19105 7ffa 8D8D      		ldd r24,Y+29
 19106 7ffc 9E8D      		ldd r25,Y+30
 19107 7ffe 880F      		lsl r24
 19108 8000 991F      		rol r25
 19109 8002 880F      		lsl r24
 19110 8004 991F      		rol r25
 19111 8006 820F      		add r24,r18
 19112 8008 931F      		adc r25,r19
 19113 800a FC01      		movw r30,r24
 19114 800c 8081      		ld r24,Z
 19115 800e 9181      		ldd r25,Z+1
 19116 8010 A281      		ldd r26,Z+2
 19117 8012 B381      		ldd r27,Z+3
 19118 8014 EC85      		ldd r30,Y+12
 19119 8016 FD85      		ldd r31,Y+13
 19120 8018 21E0      		ldi r18,lo8(1)
 19121 801a AC01      		movw r20,r24
 19122 801c BD01      		movw r22,r26
 19123 801e CF01      		movw r24,r30
 19124 8020 0E94 0000 		call presolve_roundrhs
 19125 8024 DC01      		movw r26,r24
 19126 8026 CB01      		movw r24,r22
 19127 8028 F801      		movw r30,r16
 19128 802a 8083      		st Z,r24
 19129 802c 9183      		std Z+1,r25
 19130 802e A283      		std Z+2,r26
 19131 8030 B383      		std Z+3,r27
 19132 8032 00C0      		rjmp .L761
 19133               	.L757:
1699:lp_solve_5.5/lp_presolve.c ****       }
1700:lp_solve_5.5/lp_presolve.c ****       else if(remove && !upfinite)
 19134               		.loc 2 1700 0
 19135 8034 8AAD      		ldd r24,Y+58
 19136 8036 8823      		tst r24
 19137 8038 01F0      		breq .L760
 19138               		.loc 2 1700 0 is_stmt 0 discriminator 1
 19139 803a 88A5      		ldd r24,Y+40
 19140 803c 8823      		tst r24
 19141 803e 01F4      		brne .L760
1701:lp_solve_5.5/lp_presolve.c ****         doupdate = TRUE;
 19142               		.loc 2 1701 0 is_stmt 1
 19143 8040 81E0      		ldi r24,lo8(1)
 19144 8042 8B83      		std Y+3,r24
 19145 8044 00C0      		rjmp .L761
 19146               	.L760:
1702:lp_solve_5.5/lp_presolve.c ****       else
1703:lp_solve_5.5/lp_presolve.c ****         ps->neglower[i] = -lp->infinite;
 19147               		.loc 2 1703 0
 19148 8046 8989      		ldd r24,Y+17
 19149 8048 9A89      		ldd r25,Y+18
 19150 804a FC01      		movw r30,r24
 19151 804c 2089      		ldd r18,Z+16
 19152 804e 3189      		ldd r19,Z+17
 19153 8050 8D8D      		ldd r24,Y+29
 19154 8052 9E8D      		ldd r25,Y+30
 19155 8054 880F      		lsl r24
 19156 8056 991F      		rol r25
 19157 8058 880F      		lsl r24
 19158 805a 991F      		rol r25
 19159 805c 280F      		add r18,r24
 19160 805e 391F      		adc r19,r25
 19161 8060 8C85      		ldd r24,Y+12
 19162 8062 9D85      		ldd r25,Y+13
 19163 8064 865F      		subi r24,-10
 19164 8066 9C4F      		sbci r25,-4
 19165 8068 FC01      		movw r30,r24
 19166 806a 8081      		ld r24,Z
 19167 806c 9181      		ldd r25,Z+1
 19168 806e A281      		ldd r26,Z+2
 19169 8070 B381      		ldd r27,Z+3
 19170 8072 B058      		subi r27,0x80
 19171 8074 F901      		movw r30,r18
 19172 8076 8083      		st Z,r24
 19173 8078 9183      		std Z+1,r25
 19174 807a A283      		std Z+2,r26
 19175 807c B383      		std Z+3,r27
 19176 807e 00C0      		rjmp .L761
 19177               	.L756:
1704:lp_solve_5.5/lp_presolve.c ****     }
1705:lp_solve_5.5/lp_presolve.c ****     else {
1706:lp_solve_5.5/lp_presolve.c ****       if((ps->plulower[i] > -lp->infinite) && lofinite) {
 19178               		.loc 2 1706 0
 19179 8080 8989      		ldd r24,Y+17
 19180 8082 9A89      		ldd r25,Y+18
 19181 8084 FC01      		movw r30,r24
 19182 8086 2685      		ldd r18,Z+14
 19183 8088 3785      		ldd r19,Z+15
 19184 808a 8D8D      		ldd r24,Y+29
 19185 808c 9E8D      		ldd r25,Y+30
 19186 808e 880F      		lsl r24
 19187 8090 991F      		rol r25
 19188 8092 880F      		lsl r24
 19189 8094 991F      		rol r25
 19190 8096 820F      		add r24,r18
 19191 8098 931F      		adc r25,r19
 19192 809a FC01      		movw r30,r24
 19193 809c E080      		ld r14,Z
 19194 809e F180      		ldd r15,Z+1
 19195 80a0 0281      		ldd r16,Z+2
 19196 80a2 1381      		ldd r17,Z+3
 19197 80a4 8C85      		ldd r24,Y+12
 19198 80a6 9D85      		ldd r25,Y+13
 19199 80a8 865F      		subi r24,-10
 19200 80aa 9C4F      		sbci r25,-4
 19201 80ac FC01      		movw r30,r24
 19202 80ae 8081      		ld r24,Z
 19203 80b0 9181      		ldd r25,Z+1
 19204 80b2 A281      		ldd r26,Z+2
 19205 80b4 B381      		ldd r27,Z+3
 19206 80b6 B058      		subi r27,0x80
 19207 80b8 9C01      		movw r18,r24
 19208 80ba AD01      		movw r20,r26
 19209 80bc C801      		movw r24,r16
 19210 80be B701      		movw r22,r14
 19211 80c0 0E94 0000 		call __gtsf2
 19212 80c4 1816      		cp __zero_reg__,r24
 19213 80c6 04F0      		brlt .+2
 19214 80c8 00C0      		rjmp .L762
 19215               		.loc 2 1706 0 is_stmt 0 discriminator 1
 19216 80ca 89A5      		ldd r24,Y+41
 19217 80cc 8823      		tst r24
 19218 80ce 01F4      		brne .+2
 19219 80d0 00C0      		rjmp .L762
1707:lp_solve_5.5/lp_presolve.c ****         ps->plulower[i] += mult*lovalue;
 19220               		.loc 2 1707 0 is_stmt 1
 19221 80d2 8989      		ldd r24,Y+17
 19222 80d4 9A89      		ldd r25,Y+18
 19223 80d6 FC01      		movw r30,r24
 19224 80d8 2685      		ldd r18,Z+14
 19225 80da 3785      		ldd r19,Z+15
 19226 80dc 8D8D      		ldd r24,Y+29
 19227 80de 9E8D      		ldd r25,Y+30
 19228 80e0 880F      		lsl r24
 19229 80e2 991F      		rol r25
 19230 80e4 880F      		lsl r24
 19231 80e6 991F      		rol r25
 19232 80e8 8901      		movw r16,r18
 19233 80ea 080F      		add r16,r24
 19234 80ec 191F      		adc r17,r25
 19235 80ee 8989      		ldd r24,Y+17
 19236 80f0 9A89      		ldd r25,Y+18
 19237 80f2 FC01      		movw r30,r24
 19238 80f4 2685      		ldd r18,Z+14
 19239 80f6 3785      		ldd r19,Z+15
 19240 80f8 8D8D      		ldd r24,Y+29
 19241 80fa 9E8D      		ldd r25,Y+30
 19242 80fc 880F      		lsl r24
 19243 80fe 991F      		rol r25
 19244 8100 880F      		lsl r24
 19245 8102 991F      		rol r25
 19246 8104 820F      		add r24,r18
 19247 8106 931F      		adc r25,r19
 19248 8108 FC01      		movw r30,r24
 19249 810a C080      		ld r12,Z
 19250 810c D180      		ldd r13,Z+1
 19251 810e E280      		ldd r14,Z+2
 19252 8110 F380      		ldd r15,Z+3
 19253 8112 8AA5      		ldd r24,Y+42
 19254 8114 9BA5      		ldd r25,Y+43
 19255 8116 ACA5      		ldd r26,Y+44
 19256 8118 BDA5      		ldd r27,Y+45
 19257 811a 2885      		ldd r18,Y+8
 19258 811c 3985      		ldd r19,Y+9
 19259 811e 4A85      		ldd r20,Y+10
 19260 8120 5B85      		ldd r21,Y+11
 19261 8122 BC01      		movw r22,r24
 19262 8124 CD01      		movw r24,r26
 19263 8126 0E94 0000 		call __mulsf3
 19264 812a DC01      		movw r26,r24
 19265 812c CB01      		movw r24,r22
 19266 812e 9C01      		movw r18,r24
 19267 8130 AD01      		movw r20,r26
 19268 8132 C701      		movw r24,r14
 19269 8134 B601      		movw r22,r12
 19270 8136 0E94 0000 		call __addsf3
 19271 813a DC01      		movw r26,r24
 19272 813c CB01      		movw r24,r22
 19273 813e F801      		movw r30,r16
 19274 8140 8083      		st Z,r24
 19275 8142 9183      		std Z+1,r25
 19276 8144 A283      		std Z+2,r26
 19277 8146 B383      		std Z+3,r27
1708:lp_solve_5.5/lp_presolve.c ****         ps->plulower[i] = presolve_roundrhs(lp, ps->plulower[i], TRUE);
 19278               		.loc 2 1708 0
 19279 8148 8989      		ldd r24,Y+17
 19280 814a 9A89      		ldd r25,Y+18
 19281 814c FC01      		movw r30,r24
 19282 814e 2685      		ldd r18,Z+14
 19283 8150 3785      		ldd r19,Z+15
 19284 8152 8D8D      		ldd r24,Y+29
 19285 8154 9E8D      		ldd r25,Y+30
 19286 8156 880F      		lsl r24
 19287 8158 991F      		rol r25
 19288 815a 880F      		lsl r24
 19289 815c 991F      		rol r25
 19290 815e 8901      		movw r16,r18
 19291 8160 080F      		add r16,r24
 19292 8162 191F      		adc r17,r25
 19293 8164 8989      		ldd r24,Y+17
 19294 8166 9A89      		ldd r25,Y+18
 19295 8168 FC01      		movw r30,r24
 19296 816a 2685      		ldd r18,Z+14
 19297 816c 3785      		ldd r19,Z+15
 19298 816e 8D8D      		ldd r24,Y+29
 19299 8170 9E8D      		ldd r25,Y+30
 19300 8172 880F      		lsl r24
 19301 8174 991F      		rol r25
 19302 8176 880F      		lsl r24
 19303 8178 991F      		rol r25
 19304 817a 820F      		add r24,r18
 19305 817c 931F      		adc r25,r19
 19306 817e FC01      		movw r30,r24
 19307 8180 8081      		ld r24,Z
 19308 8182 9181      		ldd r25,Z+1
 19309 8184 A281      		ldd r26,Z+2
 19310 8186 B381      		ldd r27,Z+3
 19311 8188 EC85      		ldd r30,Y+12
 19312 818a FD85      		ldd r31,Y+13
 19313 818c 21E0      		ldi r18,lo8(1)
 19314 818e AC01      		movw r20,r24
 19315 8190 BD01      		movw r22,r26
 19316 8192 CF01      		movw r24,r30
 19317 8194 0E94 0000 		call presolve_roundrhs
 19318 8198 DC01      		movw r26,r24
 19319 819a CB01      		movw r24,r22
 19320 819c F801      		movw r30,r16
 19321 819e 8083      		st Z,r24
 19322 81a0 9183      		std Z+1,r25
 19323 81a2 A283      		std Z+2,r26
 19324 81a4 B383      		std Z+3,r27
 19325 81a6 00C0      		rjmp .L761
 19326               	.L762:
1709:lp_solve_5.5/lp_presolve.c ****       }
1710:lp_solve_5.5/lp_presolve.c ****       else if(remove && !lofinite)
 19327               		.loc 2 1710 0
 19328 81a8 8AAD      		ldd r24,Y+58
 19329 81aa 8823      		tst r24
 19330 81ac 01F0      		breq .L764
 19331               		.loc 2 1710 0 is_stmt 0 discriminator 1
 19332 81ae 89A5      		ldd r24,Y+41
 19333 81b0 8823      		tst r24
 19334 81b2 01F4      		brne .L764
1711:lp_solve_5.5/lp_presolve.c ****         doupdate = TRUE;
 19335               		.loc 2 1711 0 is_stmt 1
 19336 81b4 81E0      		ldi r24,lo8(1)
 19337 81b6 8B83      		std Y+3,r24
 19338 81b8 00C0      		rjmp .L761
 19339               	.L764:
1712:lp_solve_5.5/lp_presolve.c ****       else
1713:lp_solve_5.5/lp_presolve.c ****         ps->plulower[i] = -lp->infinite;
 19340               		.loc 2 1713 0
 19341 81ba 8989      		ldd r24,Y+17
 19342 81bc 9A89      		ldd r25,Y+18
 19343 81be FC01      		movw r30,r24
 19344 81c0 2685      		ldd r18,Z+14
 19345 81c2 3785      		ldd r19,Z+15
 19346 81c4 8D8D      		ldd r24,Y+29
 19347 81c6 9E8D      		ldd r25,Y+30
 19348 81c8 880F      		lsl r24
 19349 81ca 991F      		rol r25
 19350 81cc 880F      		lsl r24
 19351 81ce 991F      		rol r25
 19352 81d0 280F      		add r18,r24
 19353 81d2 391F      		adc r19,r25
 19354 81d4 8C85      		ldd r24,Y+12
 19355 81d6 9D85      		ldd r25,Y+13
 19356 81d8 865F      		subi r24,-10
 19357 81da 9C4F      		sbci r25,-4
 19358 81dc FC01      		movw r30,r24
 19359 81de 8081      		ld r24,Z
 19360 81e0 9181      		ldd r25,Z+1
 19361 81e2 A281      		ldd r26,Z+2
 19362 81e4 B381      		ldd r27,Z+3
 19363 81e6 B058      		subi r27,0x80
 19364 81e8 F901      		movw r30,r18
 19365 81ea 8083      		st Z,r24
 19366 81ec 9183      		std Z+1,r25
 19367 81ee A283      		std Z+2,r26
 19368 81f0 B383      		std Z+3,r27
 19369               	.L761:
1714:lp_solve_5.5/lp_presolve.c ****     }
1715:lp_solve_5.5/lp_presolve.c **** 
1716:lp_solve_5.5/lp_presolve.c ****    /* Validate consistency of eliminated singleton */
1717:lp_solve_5.5/lp_presolve.c ****     if(remove && ((i == 0) || (ps->next[i][0] == 1)) && !psdata->forceupdate) {
 19370               		.loc 2 1717 0
 19371 81f2 8AAD      		ldd r24,Y+58
 19372 81f4 8823      		tst r24
 19373 81f6 01F4      		brne .+2
 19374 81f8 00C0      		rjmp .L717
 19375               		.loc 2 1717 0 is_stmt 0 discriminator 1
 19376 81fa 8D8D      		ldd r24,Y+29
 19377 81fc 9E8D      		ldd r25,Y+30
 19378 81fe 892B      		or r24,r25
 19379 8200 01F0      		breq .L765
 19380               		.loc 2 1717 0 discriminator 3
 19381 8202 8989      		ldd r24,Y+17
 19382 8204 9A89      		ldd r25,Y+18
 19383 8206 FC01      		movw r30,r24
 19384 8208 2281      		ldd r18,Z+2
 19385 820a 3381      		ldd r19,Z+3
 19386 820c 8D8D      		ldd r24,Y+29
 19387 820e 9E8D      		ldd r25,Y+30
 19388 8210 880F      		lsl r24
 19389 8212 991F      		rol r25
 19390 8214 820F      		add r24,r18
 19391 8216 931F      		adc r25,r19
 19392 8218 FC01      		movw r30,r24
 19393 821a 8081      		ld r24,Z
 19394 821c 9181      		ldd r25,Z+1
 19395 821e FC01      		movw r30,r24
 19396 8220 8081      		ld r24,Z
 19397 8222 9181      		ldd r25,Z+1
 19398 8224 0197      		sbiw r24,1
 19399 8226 01F0      		breq .+2
 19400 8228 00C0      		rjmp .L717
 19401               	.L765:
 19402               		.loc 2 1717 0 discriminator 4
 19403 822a 8AA9      		ldd r24,Y+50
 19404 822c 9BA9      		ldd r25,Y+51
 19405 822e FC01      		movw r30,r24
 19406 8230 84A1      		ldd r24,Z+36
 19407 8232 8823      		tst r24
 19408 8234 01F0      		breq .+2
 19409 8236 00C0      		rjmp .L717
1718:lp_solve_5.5/lp_presolve.c ****       presolve_range(lp, i, ps, &lovalue, &upvalue);
 19410               		.loc 2 1718 0 is_stmt 1
 19411 8238 FE01      		movw r30,r28
 19412 823a BE96      		adiw r30,46
 19413 823c 9E01      		movw r18,r28
 19414 823e 265D      		subi r18,-42
 19415 8240 3F4F      		sbci r19,-1
 19416 8242 4989      		ldd r20,Y+17
 19417 8244 5A89      		ldd r21,Y+18
 19418 8246 6D8D      		ldd r22,Y+29
 19419 8248 7E8D      		ldd r23,Y+30
 19420 824a 8C85      		ldd r24,Y+12
 19421 824c 9D85      		ldd r25,Y+13
 19422 824e 8F01      		movw r16,r30
 19423 8250 0E94 0000 		call presolve_range
1719:lp_solve_5.5/lp_presolve.c ****       Value = get_mat(lp, 0, i);
 19424               		.loc 2 1719 0
 19425 8254 2D8D      		ldd r18,Y+29
 19426 8256 3E8D      		ldd r19,Y+30
 19427 8258 8C85      		ldd r24,Y+12
 19428 825a 9D85      		ldd r25,Y+13
 19429 825c A901      		movw r20,r18
 19430 825e 60E0      		ldi r22,0
 19431 8260 70E0      		ldi r23,0
 19432 8262 0E94 0000 		call get_mat
 19433 8266 DC01      		movw r26,r24
 19434 8268 CB01      		movw r24,r22
 19435 826a 8F8F      		std Y+31,r24
 19436 826c 98A3      		std Y+32,r25
 19437 826e A9A3      		std Y+33,r26
 19438 8270 BAA3      		std Y+34,r27
1720:lp_solve_5.5/lp_presolve.c ****       if((upvalue < Value) ||
 19439               		.loc 2 1720 0
 19440 8272 8EA5      		ldd r24,Y+46
 19441 8274 9FA5      		ldd r25,Y+47
 19442 8276 A8A9      		ldd r26,Y+48
 19443 8278 B9A9      		ldd r27,Y+49
 19444 827a 2F8D      		ldd r18,Y+31
 19445 827c 38A1      		ldd r19,Y+32
 19446 827e 49A1      		ldd r20,Y+33
 19447 8280 5AA1      		ldd r21,Y+34
 19448 8282 BC01      		movw r22,r24
 19449 8284 CD01      		movw r24,r26
 19450 8286 0E94 0000 		call __ltsf2
 19451 828a 8823      		tst r24
 19452 828c 04F0      		brlt .L766
1721:lp_solve_5.5/lp_presolve.c ****          (lovalue > Value)) {
 19453               		.loc 2 1721 0 discriminator 1
 19454 828e 8AA5      		ldd r24,Y+42
 19455 8290 9BA5      		ldd r25,Y+43
 19456 8292 ACA5      		ldd r26,Y+44
 19457 8294 BDA5      		ldd r27,Y+45
1720:lp_solve_5.5/lp_presolve.c ****       if((upvalue < Value) ||
 19458               		.loc 2 1720 0 discriminator 1
 19459 8296 2F8D      		ldd r18,Y+31
 19460 8298 38A1      		ldd r19,Y+32
 19461 829a 49A1      		ldd r20,Y+33
 19462 829c 5AA1      		ldd r21,Y+34
 19463 829e BC01      		movw r22,r24
 19464 82a0 CD01      		movw r24,r26
 19465 82a2 0E94 0000 		call __gtsf2
 19466 82a6 1816      		cp __zero_reg__,r24
 19467 82a8 04F0      		brlt .+2
 19468 82aa 00C0      		rjmp .L717
 19469               	.L766:
1722:lp_solve_5.5/lp_presolve.c ****         report(lp, IMPORTANT, "presolve: Row %s (%g << %g) infeasibility in column %s (OF=%g)\n",
 19470               		.loc 2 1722 0
 19471 82ac 2D8D      		ldd r18,Y+29
 19472 82ae 3E8D      		ldd r19,Y+30
 19473 82b0 8C85      		ldd r24,Y+12
 19474 82b2 9D85      		ldd r25,Y+13
 19475 82b4 B901      		movw r22,r18
 19476 82b6 0E94 0000 		call get_col_name
 19477 82ba 8C01      		movw r16,r24
 19478 82bc 8EA4      		ldd r8,Y+46
 19479 82be 9FA4      		ldd r9,Y+47
 19480 82c0 A8A8      		ldd r10,Y+48
 19481 82c2 B9A8      		ldd r11,Y+49
 19482 82c4 CAA4      		ldd r12,Y+42
 19483 82c6 DBA4      		ldd r13,Y+43
 19484 82c8 ECA4      		ldd r14,Y+44
 19485 82ca FDA4      		ldd r15,Y+45
 19486 82cc 2CA9      		ldd r18,Y+52
 19487 82ce 3DA9      		ldd r19,Y+53
 19488 82d0 8C85      		ldd r24,Y+12
 19489 82d2 9D85      		ldd r25,Y+13
 19490 82d4 B901      		movw r22,r18
 19491 82d6 0E94 0000 		call get_row_name
 19492 82da 2AA1      		ldd r18,Y+34
 19493 82dc 2F93      		push r18
 19494 82de 29A1      		ldd r18,Y+33
 19495 82e0 2F93      		push r18
 19496 82e2 28A1      		ldd r18,Y+32
 19497 82e4 2F93      		push r18
 19498 82e6 2F8D      		ldd r18,Y+31
 19499 82e8 2F93      		push r18
 19500 82ea 212F      		mov r18,r17
 19501 82ec 2F93      		push r18
 19502 82ee 202F      		mov r18,r16
 19503 82f0 2F93      		push r18
 19504 82f2 2B2D      		mov r18,r11
 19505 82f4 2F93      		push r18
 19506 82f6 2A2D      		mov r18,r10
 19507 82f8 2F93      		push r18
 19508 82fa 292D      		mov r18,r9
 19509 82fc 2F93      		push r18
 19510 82fe 282D      		mov r18,r8
 19511 8300 2F93      		push r18
 19512 8302 2F2D      		mov r18,r15
 19513 8304 2F93      		push r18
 19514 8306 2E2D      		mov r18,r14
 19515 8308 2F93      		push r18
 19516 830a 2D2D      		mov r18,r13
 19517 830c 2F93      		push r18
 19518 830e 2C2D      		mov r18,r12
 19519 8310 2F93      		push r18
 19520 8312 292F      		mov r18,r25
 19521 8314 2F93      		push r18
 19522 8316 8F93      		push r24
 19523 8318 80E0      		ldi r24,lo8(.LC27)
 19524 831a 90E0      		ldi r25,hi8(.LC27)
 19525 831c 892F      		mov r24,r25
 19526 831e 8F93      		push r24
 19527 8320 80E0      		ldi r24,lo8(.LC27)
 19528 8322 90E0      		ldi r25,hi8(.LC27)
 19529 8324 8F93      		push r24
 19530 8326 1F92      		push __zero_reg__
 19531 8328 83E0      		ldi r24,lo8(3)
 19532 832a 8F93      		push r24
 19533 832c 8D85      		ldd r24,Y+13
 19534 832e 8F93      		push r24
 19535 8330 8C85      		ldd r24,Y+12
 19536 8332 8F93      		push r24
 19537 8334 0E94 0000 		call report
 19538 8338 8DB7      		in r24,__SP_L__
 19539 833a 9EB7      		in r25,__SP_H__
 19540 833c 4696      		adiw r24,22
 19541 833e 0FB6      		in __tmp_reg__,__SREG__
 19542 8340 F894      		cli
 19543 8342 DEBF      		out __SP_H__,r29
 19544 8344 0FBE      		out __SREG__,__tmp_reg__
 19545 8346 CDBF      		out __SP_L__,r28
1723:lp_solve_5.5/lp_presolve.c ****                               get_row_name(lp, rownr), lovalue, upvalue, get_col_name(lp, i), Value
1724:lp_solve_5.5/lp_presolve.c ****         return( FALSE );
 19546               		.loc 2 1724 0
 19547 8348 80E0      		ldi r24,0
 19548 834a 00C0      		rjmp .L771
 19549               	.L792:
1632:lp_solve_5.5/lp_presolve.c **** 
 19550               		.loc 2 1632 0
 19551 834c 0000      		nop
 19552 834e 00C0      		rjmp .L717
 19553               	.L793:
1647:lp_solve_5.5/lp_presolve.c ****     if(remove) {
 19554               		.loc 2 1647 0
 19555 8350 0000      		nop
 19556               	.L717:
1626:lp_solve_5.5/lp_presolve.c **** 
 19557               		.loc 2 1626 0
 19558 8352 8981      		ldd r24,Y+1
 19559 8354 9A81      		ldd r25,Y+2
 19560 8356 0196      		adiw r24,1
 19561 8358 9A83      		std Y+2,r25
 19562 835a 8983      		std Y+1,r24
 19563               	.L714:
1626:lp_solve_5.5/lp_presolve.c **** 
 19564               		.loc 2 1626 0 is_stmt 0 discriminator 1
 19565 835c 2981      		ldd r18,Y+1
 19566 835e 3A81      		ldd r19,Y+2
 19567 8360 8B8D      		ldd r24,Y+27
 19568 8362 9C8D      		ldd r25,Y+28
 19569 8364 2817      		cp r18,r24
 19570 8366 3907      		cpc r19,r25
 19571 8368 04F4      		brge .+2
 19572 836a 00C0      		rjmp .L769
1725:lp_solve_5.5/lp_presolve.c ****       }
1726:lp_solve_5.5/lp_presolve.c ****     }
1727:lp_solve_5.5/lp_presolve.c ****   }
1728:lp_solve_5.5/lp_presolve.c ****   if(remove) {
 19573               		.loc 2 1728 0 is_stmt 1
 19574 836c 8AAD      		ldd r24,Y+58
 19575 836e 8823      		tst r24
 19576 8370 01F0      		breq .L770
1729:lp_solve_5.5/lp_presolve.c ****     psdata->forceupdate |= doupdate;
 19577               		.loc 2 1729 0
 19578 8372 8AA9      		ldd r24,Y+50
 19579 8374 9BA9      		ldd r25,Y+51
 19580 8376 FC01      		movw r30,r24
 19581 8378 94A1      		ldd r25,Z+36
 19582 837a 8B81      		ldd r24,Y+3
 19583 837c 292F      		mov r18,r25
 19584 837e 282B      		or r18,r24
 19585 8380 8AA9      		ldd r24,Y+50
 19586 8382 9BA9      		ldd r25,Y+51
 19587 8384 FC01      		movw r30,r24
 19588 8386 24A3      		std Z+36,r18
1730:lp_solve_5.5/lp_presolve.c ****     if(tally != NULL)
 19589               		.loc 2 1730 0
 19590 8388 8BAD      		ldd r24,Y+59
 19591 838a 9CAD      		ldd r25,Y+60
 19592 838c 892B      		or r24,r25
 19593 838e 01F0      		breq .L770
1731:lp_solve_5.5/lp_presolve.c ****       (*tally)++;
 19594               		.loc 2 1731 0
 19595 8390 8BAD      		ldd r24,Y+59
 19596 8392 9CAD      		ldd r25,Y+60
 19597 8394 FC01      		movw r30,r24
 19598 8396 8081      		ld r24,Z
 19599 8398 9181      		ldd r25,Z+1
 19600 839a 9C01      		movw r18,r24
 19601 839c 2F5F      		subi r18,-1
 19602 839e 3F4F      		sbci r19,-1
 19603 83a0 8BAD      		ldd r24,Y+59
 19604 83a2 9CAD      		ldd r25,Y+60
 19605 83a4 FC01      		movw r30,r24
 19606 83a6 3183      		std Z+1,r19
 19607 83a8 2083      		st Z,r18
 19608               	.L770:
1732:lp_solve_5.5/lp_presolve.c ****   }
1733:lp_solve_5.5/lp_presolve.c ****   return( TRUE );
 19609               		.loc 2 1733 0
 19610 83aa 81E0      		ldi r24,lo8(1)
 19611               	.L771:
 19612               	/* epilogue start */
1734:lp_solve_5.5/lp_presolve.c **** }
 19613               		.loc 2 1734 0 discriminator 1
 19614 83ac EC96      		adiw r28,60
 19615 83ae 0FB6      		in __tmp_reg__,__SREG__
 19616 83b0 F894      		cli
 19617 83b2 DEBF      		out __SP_H__,r29
 19618 83b4 0FBE      		out __SREG__,__tmp_reg__
 19619 83b6 CDBF      		out __SP_L__,r28
 19620 83b8 DF91      		pop r29
 19621 83ba CF91      		pop r28
 19622 83bc 1F91      		pop r17
 19623 83be 0F91      		pop r16
 19624 83c0 FF90      		pop r15
 19625 83c2 EF90      		pop r14
 19626 83c4 DF90      		pop r13
 19627 83c6 CF90      		pop r12
 19628 83c8 BF90      		pop r11
 19629 83ca AF90      		pop r10
 19630 83cc 9F90      		pop r9
 19631 83ce 8F90      		pop r8
 19632 83d0 0895      		ret
 19633               		.cfi_endproc
 19634               	.LFE56:
 19636               	.global	presolve_colsingleton
 19638               	presolve_colsingleton:
 19639               	.LFB57:
1735:lp_solve_5.5/lp_presolve.c **** 
1736:lp_solve_5.5/lp_presolve.c **** 
1737:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_colsingleton(presolverec *psdata, int i, int j, int *count)
1738:lp_solve_5.5/lp_presolve.c **** {
 19640               		.loc 2 1738 0
 19641               		.cfi_startproc
 19642 83d2 CF92      		push r12
 19643               	.LCFI291:
 19644               		.cfi_def_cfa_offset 3
 19645               		.cfi_offset 12, -2
 19646 83d4 DF92      		push r13
 19647               	.LCFI292:
 19648               		.cfi_def_cfa_offset 4
 19649               		.cfi_offset 13, -3
 19650 83d6 EF92      		push r14
 19651               	.LCFI293:
 19652               		.cfi_def_cfa_offset 5
 19653               		.cfi_offset 14, -4
 19654 83d8 FF92      		push r15
 19655               	.LCFI294:
 19656               		.cfi_def_cfa_offset 6
 19657               		.cfi_offset 15, -5
 19658 83da 0F93      		push r16
 19659               	.LCFI295:
 19660               		.cfi_def_cfa_offset 7
 19661               		.cfi_offset 16, -6
 19662 83dc 1F93      		push r17
 19663               	.LCFI296:
 19664               		.cfi_def_cfa_offset 8
 19665               		.cfi_offset 17, -7
 19666 83de CF93      		push r28
 19667               	.LCFI297:
 19668               		.cfi_def_cfa_offset 9
 19669               		.cfi_offset 28, -8
 19670 83e0 DF93      		push r29
 19671               	.LCFI298:
 19672               		.cfi_def_cfa_offset 10
 19673               		.cfi_offset 29, -9
 19674 83e2 CDB7      		in r28,__SP_L__
 19675 83e4 DEB7      		in r29,__SP_H__
 19676               	.LCFI299:
 19677               		.cfi_def_cfa_register 28
 19678 83e6 6E97      		sbiw r28,30
 19679               	.LCFI300:
 19680               		.cfi_def_cfa_offset 40
 19681 83e8 0FB6      		in __tmp_reg__,__SREG__
 19682 83ea F894      		cli
 19683 83ec DEBF      		out __SP_H__,r29
 19684 83ee 0FBE      		out __SREG__,__tmp_reg__
 19685 83f0 CDBF      		out __SP_L__,r28
 19686               	/* prologue: function */
 19687               	/* frame size = 30 */
 19688               	/* stack size = 38 */
 19689               	.L__stack_usage = 38
 19690 83f2 988F      		std Y+24,r25
 19691 83f4 8F8B      		std Y+23,r24
 19692 83f6 7A8F      		std Y+26,r23
 19693 83f8 698F      		std Y+25,r22
 19694 83fa 5C8F      		std Y+28,r21
 19695 83fc 4B8F      		std Y+27,r20
 19696 83fe 3E8F      		std Y+30,r19
 19697 8400 2D8F      		std Y+29,r18
1739:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 19698               		.loc 2 1739 0
 19699 8402 8F89      		ldd r24,Y+23
 19700 8404 988D      		ldd r25,Y+24
 19701 8406 FC01      		movw r30,r24
 19702 8408 8289      		ldd r24,Z+18
 19703 840a 9389      		ldd r25,Z+19
 19704 840c 9A83      		std Y+2,r25
 19705 840e 8983      		std Y+1,r24
1740:lp_solve_5.5/lp_presolve.c ****   REAL     RHlow, RHup, LObound, UPbound, Value;
1741:lp_solve_5.5/lp_presolve.c **** 
1742:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
1743:lp_solve_5.5/lp_presolve.c ****   if(!isActiveLink(psdata->cols->varmap, j))
1744:lp_solve_5.5/lp_presolve.c ****     report(lp, SEVERE, "presolve_colsingleton: Nothing to do, column %d was eliminated earlier\n",
1745:lp_solve_5.5/lp_presolve.c ****                        j);
1746:lp_solve_5.5/lp_presolve.c **** #endif
1747:lp_solve_5.5/lp_presolve.c **** 
1748:lp_solve_5.5/lp_presolve.c ****   Value = get_mat(lp,i,j);
 19706               		.loc 2 1748 0
 19707 8410 4B8D      		ldd r20,Y+27
 19708 8412 5C8D      		ldd r21,Y+28
 19709 8414 298D      		ldd r18,Y+25
 19710 8416 3A8D      		ldd r19,Y+26
 19711 8418 8981      		ldd r24,Y+1
 19712 841a 9A81      		ldd r25,Y+2
 19713 841c B901      		movw r22,r18
 19714 841e 0E94 0000 		call get_mat
 19715 8422 DC01      		movw r26,r24
 19716 8424 CB01      		movw r24,r22
 19717 8426 8B8B      		std Y+19,r24
 19718 8428 9C8B      		std Y+20,r25
 19719 842a AD8B      		std Y+21,r26
 19720 842c BE8B      		std Y+22,r27
1749:lp_solve_5.5/lp_presolve.c ****   if(Value == 0)
 19721               		.loc 2 1749 0
 19722 842e 8B89      		ldd r24,Y+19
 19723 8430 9C89      		ldd r25,Y+20
 19724 8432 AD89      		ldd r26,Y+21
 19725 8434 BE89      		ldd r27,Y+22
 19726 8436 20E0      		ldi r18,0
 19727 8438 30E0      		ldi r19,0
 19728 843a A901      		movw r20,r18
 19729 843c BC01      		movw r22,r24
 19730 843e CD01      		movw r24,r26
 19731 8440 0E94 0000 		call __eqsf2
 19732 8444 8823      		tst r24
 19733 8446 01F4      		brne .L810
1750:lp_solve_5.5/lp_presolve.c ****     return( RUNNING );
 19734               		.loc 2 1750 0
 19735 8448 88E0      		ldi r24,lo8(8)
 19736 844a 90E0      		ldi r25,0
 19737 844c 00C0      		rjmp .L805
 19738               	.L810:
1751:lp_solve_5.5/lp_presolve.c **** 
1752:lp_solve_5.5/lp_presolve.c ****   /* Initialize and identify semicontinuous variable */
1753:lp_solve_5.5/lp_presolve.c ****   LObound = get_lowbo(lp, j);
 19739               		.loc 2 1753 0
 19740 844e 2B8D      		ldd r18,Y+27
 19741 8450 3C8D      		ldd r19,Y+28
 19742 8452 8981      		ldd r24,Y+1
 19743 8454 9A81      		ldd r25,Y+2
 19744 8456 B901      		movw r22,r18
 19745 8458 0E94 0000 		call get_lowbo
 19746 845c DC01      		movw r26,r24
 19747 845e CB01      		movw r24,r22
 19748 8460 8B83      		std Y+3,r24
 19749 8462 9C83      		std Y+4,r25
 19750 8464 AD83      		std Y+5,r26
 19751 8466 BE83      		std Y+6,r27
1754:lp_solve_5.5/lp_presolve.c ****   UPbound = get_upbo(lp, j);
 19752               		.loc 2 1754 0
 19753 8468 2B8D      		ldd r18,Y+27
 19754 846a 3C8D      		ldd r19,Y+28
 19755 846c 8981      		ldd r24,Y+1
 19756 846e 9A81      		ldd r25,Y+2
 19757 8470 B901      		movw r22,r18
 19758 8472 0E94 0000 		call get_upbo
 19759 8476 DC01      		movw r26,r24
 19760 8478 CB01      		movw r24,r22
 19761 847a 8F83      		std Y+7,r24
 19762 847c 9887      		std Y+8,r25
 19763 847e A987      		std Y+9,r26
 19764 8480 BA87      		std Y+10,r27
1755:lp_solve_5.5/lp_presolve.c ****   if(is_semicont(lp, j) && (UPbound > LObound)) {
 19765               		.loc 2 1755 0
 19766 8482 2B8D      		ldd r18,Y+27
 19767 8484 3C8D      		ldd r19,Y+28
 19768 8486 8981      		ldd r24,Y+1
 19769 8488 9A81      		ldd r25,Y+2
 19770 848a B901      		movw r22,r18
 19771 848c 0E94 0000 		call is_semicont
 19772 8490 8823      		tst r24
 19773 8492 01F0      		breq .L798
 19774               		.loc 2 1755 0 is_stmt 0 discriminator 1
 19775 8494 2B81      		ldd r18,Y+3
 19776 8496 3C81      		ldd r19,Y+4
 19777 8498 4D81      		ldd r20,Y+5
 19778 849a 5E81      		ldd r21,Y+6
 19779 849c 6F81      		ldd r22,Y+7
 19780 849e 7885      		ldd r23,Y+8
 19781 84a0 8985      		ldd r24,Y+9
 19782 84a2 9A85      		ldd r25,Y+10
 19783 84a4 0E94 0000 		call __gtsf2
 19784 84a8 1816      		cp __zero_reg__,r24
 19785 84aa 04F4      		brge .L798
1756:lp_solve_5.5/lp_presolve.c ****     if(LObound > 0)
 19786               		.loc 2 1756 0 is_stmt 1
 19787 84ac 20E0      		ldi r18,0
 19788 84ae 30E0      		ldi r19,0
 19789 84b0 A901      		movw r20,r18
 19790 84b2 6B81      		ldd r22,Y+3
 19791 84b4 7C81      		ldd r23,Y+4
 19792 84b6 8D81      		ldd r24,Y+5
 19793 84b8 9E81      		ldd r25,Y+6
 19794 84ba 0E94 0000 		call __gtsf2
 19795 84be 1816      		cp __zero_reg__,r24
 19796 84c0 04F4      		brge .L811
1757:lp_solve_5.5/lp_presolve.c ****       LObound = 0;
 19797               		.loc 2 1757 0
 19798 84c2 1B82      		std Y+3,__zero_reg__
 19799 84c4 1C82      		std Y+4,__zero_reg__
 19800 84c6 1D82      		std Y+5,__zero_reg__
 19801 84c8 1E82      		std Y+6,__zero_reg__
 19802 84ca 00C0      		rjmp .L798
 19803               	.L811:
1758:lp_solve_5.5/lp_presolve.c ****     else if(UPbound < 0)
 19804               		.loc 2 1758 0
 19805 84cc 20E0      		ldi r18,0
 19806 84ce 30E0      		ldi r19,0
 19807 84d0 A901      		movw r20,r18
 19808 84d2 6F81      		ldd r22,Y+7
 19809 84d4 7885      		ldd r23,Y+8
 19810 84d6 8985      		ldd r24,Y+9
 19811 84d8 9A85      		ldd r25,Y+10
 19812 84da 0E94 0000 		call __ltsf2
 19813 84de 8823      		tst r24
 19814 84e0 04F4      		brge .L798
1759:lp_solve_5.5/lp_presolve.c ****       UPbound = 0;
 19815               		.loc 2 1759 0
 19816 84e2 1F82      		std Y+7,__zero_reg__
 19817 84e4 1886      		std Y+8,__zero_reg__
 19818 84e6 1986      		std Y+9,__zero_reg__
 19819 84e8 1A86      		std Y+10,__zero_reg__
 19820               	.L798:
1760:lp_solve_5.5/lp_presolve.c ****   }
1761:lp_solve_5.5/lp_presolve.c **** 
1762:lp_solve_5.5/lp_presolve.c ****   /* Get singleton variable bounds */
1763:lp_solve_5.5/lp_presolve.c ****   RHlow = get_rh_lower(lp, i);
 19821               		.loc 2 1763 0
 19822 84ea 298D      		ldd r18,Y+25
 19823 84ec 3A8D      		ldd r19,Y+26
 19824 84ee 8981      		ldd r24,Y+1
 19825 84f0 9A81      		ldd r25,Y+2
 19826 84f2 B901      		movw r22,r18
 19827 84f4 0E94 0000 		call get_rh_lower
 19828 84f8 DC01      		movw r26,r24
 19829 84fa CB01      		movw r24,r22
 19830 84fc 8B87      		std Y+11,r24
 19831 84fe 9C87      		std Y+12,r25
 19832 8500 AD87      		std Y+13,r26
 19833 8502 BE87      		std Y+14,r27
1764:lp_solve_5.5/lp_presolve.c ****   RHup  = get_rh_upper(lp, i);
 19834               		.loc 2 1764 0
 19835 8504 298D      		ldd r18,Y+25
 19836 8506 3A8D      		ldd r19,Y+26
 19837 8508 8981      		ldd r24,Y+1
 19838 850a 9A81      		ldd r25,Y+2
 19839 850c B901      		movw r22,r18
 19840 850e 0E94 0000 		call get_rh_upper
 19841 8512 DC01      		movw r26,r24
 19842 8514 CB01      		movw r24,r22
 19843 8516 8F87      		std Y+15,r24
 19844 8518 988B      		std Y+16,r25
 19845 851a A98B      		std Y+17,r26
 19846 851c BA8B      		std Y+18,r27
1765:lp_solve_5.5/lp_presolve.c ****   if(!presolve_singletonbounds(psdata, i,j, &RHlow, &RHup, &Value))
 19847               		.loc 2 1765 0
 19848 851e DE01      		movw r26,r28
 19849 8520 5396      		adiw r26,19
 19850 8522 FE01      		movw r30,r28
 19851 8524 3F96      		adiw r30,15
 19852 8526 9E01      		movw r18,r28
 19853 8528 255F      		subi r18,-11
 19854 852a 3F4F      		sbci r19,-1
 19855 852c 4B8D      		ldd r20,Y+27
 19856 852e 5C8D      		ldd r21,Y+28
 19857 8530 698D      		ldd r22,Y+25
 19858 8532 7A8D      		ldd r23,Y+26
 19859 8534 8F89      		ldd r24,Y+23
 19860 8536 988D      		ldd r25,Y+24
 19861 8538 7D01      		movw r14,r26
 19862 853a 8F01      		movw r16,r30
 19863 853c 0E94 0000 		call presolve_singletonbounds
 19864 8540 8823      		tst r24
 19865 8542 01F4      		brne .L803
1766:lp_solve_5.5/lp_presolve.c ****     return( presolve_setstatus(psdata, INFEASIBLE) );
 19866               		.loc 2 1766 0
 19867 8544 8F89      		ldd r24,Y+23
 19868 8546 988D      		ldd r25,Y+24
 19869 8548 20E0      		ldi r18,lo8(.LC21)
 19870 854a 30E0      		ldi r19,hi8(.LC21)
 19871 854c 46EE      		ldi r20,lo8(-26)
 19872 854e 56E0      		ldi r21,lo8(6)
 19873 8550 62E0      		ldi r22,lo8(2)
 19874 8552 70E0      		ldi r23,0
 19875 8554 0E94 0000 		call presolve_setstatusex
 19876 8558 00C0      		rjmp .L805
 19877               	.L803:
1767:lp_solve_5.5/lp_presolve.c **** 
1768:lp_solve_5.5/lp_presolve.c ****   if(presolve_coltighten(psdata, j, RHlow, RHup, count))
 19878               		.loc 2 1768 0
 19879 855a 2F85      		ldd r18,Y+15
 19880 855c 3889      		ldd r19,Y+16
 19881 855e 4989      		ldd r20,Y+17
 19882 8560 5A89      		ldd r21,Y+18
 19883 8562 8B85      		ldd r24,Y+11
 19884 8564 9C85      		ldd r25,Y+12
 19885 8566 AD85      		ldd r26,Y+13
 19886 8568 BE85      		ldd r27,Y+14
 19887 856a 0D8D      		ldd r16,Y+29
 19888 856c 1E8D      		ldd r17,Y+30
 19889 856e 6B8D      		ldd r22,Y+27
 19890 8570 7C8D      		ldd r23,Y+28
 19891 8572 EF89      		ldd r30,Y+23
 19892 8574 F88D      		ldd r31,Y+24
 19893 8576 6801      		movw r12,r16
 19894 8578 7901      		movw r14,r18
 19895 857a 8A01      		movw r16,r20
 19896 857c 9C01      		movw r18,r24
 19897 857e AD01      		movw r20,r26
 19898 8580 CF01      		movw r24,r30
 19899 8582 0E94 0000 		call presolve_coltighten
 19900 8586 8823      		tst r24
 19901 8588 01F0      		breq .L804
1769:lp_solve_5.5/lp_presolve.c ****     return( RUNNING );
 19902               		.loc 2 1769 0
 19903 858a 88E0      		ldi r24,lo8(8)
 19904 858c 90E0      		ldi r25,0
 19905 858e 00C0      		rjmp .L805
 19906               	.L804:
1770:lp_solve_5.5/lp_presolve.c ****   else
1771:lp_solve_5.5/lp_presolve.c ****     return( presolve_setstatus(psdata, INFEASIBLE) );
 19907               		.loc 2 1771 0
 19908 8590 8F89      		ldd r24,Y+23
 19909 8592 988D      		ldd r25,Y+24
 19910 8594 20E0      		ldi r18,lo8(.LC21)
 19911 8596 30E0      		ldi r19,hi8(.LC21)
 19912 8598 4BEE      		ldi r20,lo8(-21)
 19913 859a 56E0      		ldi r21,lo8(6)
 19914 859c 62E0      		ldi r22,lo8(2)
 19915 859e 70E0      		ldi r23,0
 19916 85a0 0E94 0000 		call presolve_setstatusex
 19917               	.L805:
 19918               	/* epilogue start */
1772:lp_solve_5.5/lp_presolve.c **** }
 19919               		.loc 2 1772 0 discriminator 1
 19920 85a4 6E96      		adiw r28,30
 19921 85a6 0FB6      		in __tmp_reg__,__SREG__
 19922 85a8 F894      		cli
 19923 85aa DEBF      		out __SP_H__,r29
 19924 85ac 0FBE      		out __SREG__,__tmp_reg__
 19925 85ae CDBF      		out __SP_L__,r28
 19926 85b0 DF91      		pop r29
 19927 85b2 CF91      		pop r28
 19928 85b4 1F91      		pop r17
 19929 85b6 0F91      		pop r16
 19930 85b8 FF90      		pop r15
 19931 85ba EF90      		pop r14
 19932 85bc DF90      		pop r13
 19933 85be CF90      		pop r12
 19934 85c0 0895      		ret
 19935               		.cfi_endproc
 19936               	.LFE57:
 19938               		.section	.rodata
 19939               	.LC28:
 19940 062b 7072 6573 		.string	"presolve_colfix: Objective determined by presolve as %18g\n"
 19940      6F6C 7665 
 19940      5F63 6F6C 
 19940      6669 783A 
 19940      204F 626A 
 19941               	.LC29:
 19942 0666 7072 6573 		.string	"presolve_colfix: Variable %s (%g << %g) infeasibility in row %s (%g << %g)\n"
 19942      6F6C 7665 
 19942      5F63 6F6C 
 19942      6669 783A 
 19942      2056 6172 
 19943               		.text
 19944               	.global	presolve_colfix
 19946               	presolve_colfix:
 19947               	.LFB58:
1773:lp_solve_5.5/lp_presolve.c **** 
1774:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_colfix(presolverec *psdata, int colnr, REAL newvalue, MYBOOL remove, int *ta
1775:lp_solve_5.5/lp_presolve.c **** {
 19948               		.loc 2 1775 0
 19949               		.cfi_startproc
 19950 85c2 4F92      		push r4
 19951               	.LCFI301:
 19952               		.cfi_def_cfa_offset 3
 19953               		.cfi_offset 4, -2
 19954 85c4 5F92      		push r5
 19955               	.LCFI302:
 19956               		.cfi_def_cfa_offset 4
 19957               		.cfi_offset 5, -3
 19958 85c6 6F92      		push r6
 19959               	.LCFI303:
 19960               		.cfi_def_cfa_offset 5
 19961               		.cfi_offset 6, -4
 19962 85c8 7F92      		push r7
 19963               	.LCFI304:
 19964               		.cfi_def_cfa_offset 6
 19965               		.cfi_offset 7, -5
 19966 85ca 8F92      		push r8
 19967               	.LCFI305:
 19968               		.cfi_def_cfa_offset 7
 19969               		.cfi_offset 8, -6
 19970 85cc 9F92      		push r9
 19971               	.LCFI306:
 19972               		.cfi_def_cfa_offset 8
 19973               		.cfi_offset 9, -7
 19974 85ce AF92      		push r10
 19975               	.LCFI307:
 19976               		.cfi_def_cfa_offset 9
 19977               		.cfi_offset 10, -8
 19978 85d0 BF92      		push r11
 19979               	.LCFI308:
 19980               		.cfi_def_cfa_offset 10
 19981               		.cfi_offset 11, -9
 19982 85d2 CF92      		push r12
 19983               	.LCFI309:
 19984               		.cfi_def_cfa_offset 11
 19985               		.cfi_offset 12, -10
 19986 85d4 DF92      		push r13
 19987               	.LCFI310:
 19988               		.cfi_def_cfa_offset 12
 19989               		.cfi_offset 13, -11
 19990 85d6 EF92      		push r14
 19991               	.LCFI311:
 19992               		.cfi_def_cfa_offset 13
 19993               		.cfi_offset 14, -12
 19994 85d8 FF92      		push r15
 19995               	.LCFI312:
 19996               		.cfi_def_cfa_offset 14
 19997               		.cfi_offset 15, -13
 19998 85da 0F93      		push r16
 19999               	.LCFI313:
 20000               		.cfi_def_cfa_offset 15
 20001               		.cfi_offset 16, -14
 20002 85dc 1F93      		push r17
 20003               	.LCFI314:
 20004               		.cfi_def_cfa_offset 16
 20005               		.cfi_offset 17, -15
 20006 85de CF93      		push r28
 20007               	.LCFI315:
 20008               		.cfi_def_cfa_offset 17
 20009               		.cfi_offset 28, -16
 20010 85e0 DF93      		push r29
 20011               	.LCFI316:
 20012               		.cfi_def_cfa_offset 18
 20013               		.cfi_offset 29, -17
 20014 85e2 CDB7      		in r28,__SP_L__
 20015 85e4 DEB7      		in r29,__SP_H__
 20016               	.LCFI317:
 20017               		.cfi_def_cfa_register 28
 20018 85e6 C054      		subi r28,64
 20019 85e8 D109      		sbc r29,__zero_reg__
 20020               	.LCFI318:
 20021               		.cfi_def_cfa_offset 82
 20022 85ea 0FB6      		in __tmp_reg__,__SREG__
 20023 85ec F894      		cli
 20024 85ee DEBF      		out __SP_H__,r29
 20025 85f0 0FBE      		out __SREG__,__tmp_reg__
 20026 85f2 CDBF      		out __SP_L__,r28
 20027               	/* prologue: function */
 20028               	/* frame size = 64 */
 20029               	/* stack size = 80 */
 20030               	.L__stack_usage = 80
 20031 85f4 9BAB      		std Y+51,r25
 20032 85f6 8AAB      		std Y+50,r24
 20033 85f8 7DAB      		std Y+53,r23
 20034 85fa 6CAB      		std Y+52,r22
 20035 85fc 2EAB      		std Y+54,r18
 20036 85fe 3FAB      		std Y+55,r19
 20037 8600 48AF      		std Y+56,r20
 20038 8602 59AF      		std Y+57,r21
 20039 8604 0AAF      		std Y+58,r16
 20040 8606 FCAE      		std Y+60,r15
 20041 8608 EBAE      		std Y+59,r14
1776:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 20042               		.loc 2 1776 0
 20043 860a 8AA9      		ldd r24,Y+50
 20044 860c 9BA9      		ldd r25,Y+51
 20045 860e FC01      		movw r30,r24
 20046 8610 8289      		ldd r24,Z+18
 20047 8612 9389      		ldd r25,Z+19
 20048 8614 98A3      		std Y+32,r25
 20049 8616 8F8F      		std Y+31,r24
1777:lp_solve_5.5/lp_presolve.c ****   int      i, ix, ie;
1778:lp_solve_5.5/lp_presolve.c ****   MYBOOL   isneg, lofinite, upfinite, doupdate = FALSE, doOF = TRUE;
 20050               		.loc 2 1778 0
 20051 8618 1D82      		std Y+5,__zero_reg__
 20052 861a 81E0      		ldi r24,lo8(1)
 20053 861c 8E83      		std Y+6,r24
1779:lp_solve_5.5/lp_presolve.c ****   REAL     lobound, upbound, lovalue, upvalue,
1780:lp_solve_5.5/lp_presolve.c ****            Value, fixvalue, mult;
1781:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 20054               		.loc 2 1781 0
 20055 861e 8F8D      		ldd r24,Y+31
 20056 8620 98A1      		ldd r25,Y+32
 20057 8622 8A54      		subi r24,74
 20058 8624 9D4F      		sbci r25,-3
 20059 8626 FC01      		movw r30,r24
 20060 8628 8081      		ld r24,Z
 20061 862a 9181      		ldd r25,Z+1
 20062 862c 9AA3      		std Y+34,r25
 20063 862e 89A3      		std Y+33,r24
1782:lp_solve_5.5/lp_presolve.c ****   psrec    *ps = psdata->rows;
 20064               		.loc 2 1782 0
 20065 8630 8AA9      		ldd r24,Y+50
 20066 8632 9BA9      		ldd r25,Y+51
 20067 8634 FC01      		movw r30,r24
 20068 8636 8081      		ld r24,Z
 20069 8638 9181      		ldd r25,Z+1
 20070 863a 9CA3      		std Y+36,r25
 20071 863c 8BA3      		std Y+35,r24
1783:lp_solve_5.5/lp_presolve.c ****   REAL     *value;
1784:lp_solve_5.5/lp_presolve.c ****   int      *rownr;
1785:lp_solve_5.5/lp_presolve.c **** 
1786:lp_solve_5.5/lp_presolve.c ****   /* Set "fixed" value in case we are deleting a variable */
1787:lp_solve_5.5/lp_presolve.c ****   upbound = get_upbo(lp, colnr);
 20072               		.loc 2 1787 0
 20073 863e 2CA9      		ldd r18,Y+52
 20074 8640 3DA9      		ldd r19,Y+53
 20075 8642 8F8D      		ldd r24,Y+31
 20076 8644 98A1      		ldd r25,Y+32
 20077 8646 B901      		movw r22,r18
 20078 8648 0E94 0000 		call get_upbo
 20079 864c DC01      		movw r26,r24
 20080 864e CB01      		movw r24,r22
 20081 8650 8B87      		std Y+11,r24
 20082 8652 9C87      		std Y+12,r25
 20083 8654 AD87      		std Y+13,r26
 20084 8656 BE87      		std Y+14,r27
1788:lp_solve_5.5/lp_presolve.c ****   lobound = get_lowbo(lp, colnr);
 20085               		.loc 2 1788 0
 20086 8658 2CA9      		ldd r18,Y+52
 20087 865a 3DA9      		ldd r19,Y+53
 20088 865c 8F8D      		ldd r24,Y+31
 20089 865e 98A1      		ldd r25,Y+32
 20090 8660 B901      		movw r22,r18
 20091 8662 0E94 0000 		call get_lowbo
 20092 8666 DC01      		movw r26,r24
 20093 8668 CB01      		movw r24,r22
 20094 866a 8F83      		std Y+7,r24
 20095 866c 9887      		std Y+8,r25
 20096 866e A987      		std Y+9,r26
 20097 8670 BA87      		std Y+10,r27
1789:lp_solve_5.5/lp_presolve.c ****   if(remove) {
 20098               		.loc 2 1789 0
 20099 8672 8AAD      		ldd r24,Y+58
 20100 8674 8823      		tst r24
 20101 8676 01F4      		brne .+2
 20102 8678 00C0      		rjmp .L813
1790:lp_solve_5.5/lp_presolve.c ****     if(upbound-lobound < psdata->epsvalue) {
 20103               		.loc 2 1790 0
 20104 867a 2F81      		ldd r18,Y+7
 20105 867c 3885      		ldd r19,Y+8
 20106 867e 4985      		ldd r20,Y+9
 20107 8680 5A85      		ldd r21,Y+10
 20108 8682 6B85      		ldd r22,Y+11
 20109 8684 7C85      		ldd r23,Y+12
 20110 8686 8D85      		ldd r24,Y+13
 20111 8688 9E85      		ldd r25,Y+14
 20112 868a 0E94 0000 		call __subsf3
 20113 868e DC01      		movw r26,r24
 20114 8690 CB01      		movw r24,r22
 20115 8692 7C01      		movw r14,r24
 20116 8694 8D01      		movw r16,r26
 20117 8696 8AA9      		ldd r24,Y+50
 20118 8698 9BA9      		ldd r25,Y+51
 20119 869a FC01      		movw r30,r24
 20120 869c 8489      		ldd r24,Z+20
 20121 869e 9589      		ldd r25,Z+21
 20122 86a0 A689      		ldd r26,Z+22
 20123 86a2 B789      		ldd r27,Z+23
 20124 86a4 9C01      		movw r18,r24
 20125 86a6 AD01      		movw r20,r26
 20126 86a8 C801      		movw r24,r16
 20127 86aa B701      		movw r22,r14
 20128 86ac 0E94 0000 		call __ltsf2
 20129 86b0 8823      		tst r24
 20130 86b2 04F4      		brge .L921
1791:lp_solve_5.5/lp_presolve.c ****       if((newvalue > lobound) && (newvalue < upbound))
 20131               		.loc 2 1791 0
 20132 86b4 2F81      		ldd r18,Y+7
 20133 86b6 3885      		ldd r19,Y+8
 20134 86b8 4985      		ldd r20,Y+9
 20135 86ba 5A85      		ldd r21,Y+10
 20136 86bc 6EA9      		ldd r22,Y+54
 20137 86be 7FA9      		ldd r23,Y+55
 20138 86c0 88AD      		ldd r24,Y+56
 20139 86c2 99AD      		ldd r25,Y+57
 20140 86c4 0E94 0000 		call __gtsf2
 20141 86c8 1816      		cp __zero_reg__,r24
 20142 86ca 04F4      		brge .L816
 20143               		.loc 2 1791 0 is_stmt 0 discriminator 1
 20144 86cc 2B85      		ldd r18,Y+11
 20145 86ce 3C85      		ldd r19,Y+12
 20146 86d0 4D85      		ldd r20,Y+13
 20147 86d2 5E85      		ldd r21,Y+14
 20148 86d4 6EA9      		ldd r22,Y+54
 20149 86d6 7FA9      		ldd r23,Y+55
 20150 86d8 88AD      		ldd r24,Y+56
 20151 86da 99AD      		ldd r25,Y+57
 20152 86dc 0E94 0000 		call __ltsf2
 20153 86e0 8823      		tst r24
 20154 86e2 04F4      		brge .L816
1792:lp_solve_5.5/lp_presolve.c ****         fixvalue = newvalue;
 20155               		.loc 2 1792 0 is_stmt 1
 20156 86e4 8EA9      		ldd r24,Y+54
 20157 86e6 9FA9      		ldd r25,Y+55
 20158 86e8 A8AD      		ldd r26,Y+56
 20159 86ea B9AD      		ldd r27,Y+57
 20160 86ec 8B8B      		std Y+19,r24
 20161 86ee 9C8B      		std Y+20,r25
 20162 86f0 AD8B      		std Y+21,r26
 20163 86f2 BE8B      		std Y+22,r27
 20164 86f4 00C0      		rjmp .L820
 20165               	.L816:
1793:lp_solve_5.5/lp_presolve.c ****       else
1794:lp_solve_5.5/lp_presolve.c ****         fixvalue = lobound;
 20166               		.loc 2 1794 0
 20167 86f6 8F81      		ldd r24,Y+7
 20168 86f8 9885      		ldd r25,Y+8
 20169 86fa A985      		ldd r26,Y+9
 20170 86fc BA85      		ldd r27,Y+10
 20171 86fe 8B8B      		std Y+19,r24
 20172 8700 9C8B      		std Y+20,r25
 20173 8702 AD8B      		std Y+21,r26
 20174 8704 BE8B      		std Y+22,r27
 20175 8706 00C0      		rjmp .L820
 20176               	.L921:
1795:lp_solve_5.5/lp_presolve.c ****     }
1796:lp_solve_5.5/lp_presolve.c ****     else {
1797:lp_solve_5.5/lp_presolve.c ****       if(my_infinite(lp, newvalue) && (get_mat(lp, 0, colnr) == 0))
 20177               		.loc 2 1797 0
 20178 8708 8EA9      		ldd r24,Y+54
 20179 870a 9FA9      		ldd r25,Y+55
 20180 870c A8AD      		ldd r26,Y+56
 20181 870e B9AD      		ldd r27,Y+57
 20182 8710 BF77      		andi r27,0x7f
 20183 8712 2F8D      		ldd r18,Y+31
 20184 8714 38A1      		ldd r19,Y+32
 20185 8716 265F      		subi r18,-10
 20186 8718 3C4F      		sbci r19,-4
 20187 871a F901      		movw r30,r18
 20188 871c 2081      		ld r18,Z
 20189 871e 3181      		ldd r19,Z+1
 20190 8720 4281      		ldd r20,Z+2
 20191 8722 5381      		ldd r21,Z+3
 20192 8724 BC01      		movw r22,r24
 20193 8726 CD01      		movw r24,r26
 20194 8728 0E94 0000 		call __gesf2
 20195 872c 8823      		tst r24
 20196 872e 04F4      		brge .+2
 20197 8730 00C0      		rjmp .L821
 20198               		.loc 2 1797 0 is_stmt 0 discriminator 1
 20199 8732 2CA9      		ldd r18,Y+52
 20200 8734 3DA9      		ldd r19,Y+53
 20201 8736 8F8D      		ldd r24,Y+31
 20202 8738 98A1      		ldd r25,Y+32
 20203 873a A901      		movw r20,r18
 20204 873c 60E0      		ldi r22,0
 20205 873e 70E0      		ldi r23,0
 20206 8740 0E94 0000 		call get_mat
 20207 8744 DC01      		movw r26,r24
 20208 8746 CB01      		movw r24,r22
 20209 8748 20E0      		ldi r18,0
 20210 874a 30E0      		ldi r19,0
 20211 874c A901      		movw r20,r18
 20212 874e BC01      		movw r22,r24
 20213 8750 CD01      		movw r24,r26
 20214 8752 0E94 0000 		call __eqsf2
 20215 8756 8823      		tst r24
 20216 8758 01F0      		breq .+2
 20217 875a 00C0      		rjmp .L821
1798:lp_solve_5.5/lp_presolve.c ****         fixvalue = ((lobound <= 0) && (upbound >= 0) ? 0 : MIN(upbound, lobound));
 20218               		.loc 2 1798 0 is_stmt 1
 20219 875c 11E0      		ldi r17,lo8(1)
 20220 875e 20E0      		ldi r18,0
 20221 8760 30E0      		ldi r19,0
 20222 8762 A901      		movw r20,r18
 20223 8764 6F81      		ldd r22,Y+7
 20224 8766 7885      		ldd r23,Y+8
 20225 8768 8985      		ldd r24,Y+9
 20226 876a 9A85      		ldd r25,Y+10
 20227 876c 0E94 0000 		call __lesf2
 20228 8770 1816      		cp __zero_reg__,r24
 20229 8772 04F4      		brge .L824
 20230 8774 10E0      		ldi r17,0
 20231               	.L824:
 20232 8776 81E0      		ldi r24,lo8(1)
 20233 8778 8127      		eor r24,r17
 20234 877a 8823      		tst r24
 20235 877c 01F4      		brne .L825
 20236               		.loc 2 1798 0 is_stmt 0 discriminator 2
 20237 877e 11E0      		ldi r17,lo8(1)
 20238 8780 20E0      		ldi r18,0
 20239 8782 30E0      		ldi r19,0
 20240 8784 A901      		movw r20,r18
 20241 8786 6B85      		ldd r22,Y+11
 20242 8788 7C85      		ldd r23,Y+12
 20243 878a 8D85      		ldd r24,Y+13
 20244 878c 9E85      		ldd r25,Y+14
 20245 878e 0E94 0000 		call __gesf2
 20246 8792 8823      		tst r24
 20247 8794 04F4      		brge .L826
 20248 8796 10E0      		ldi r17,0
 20249               	.L826:
 20250 8798 81E0      		ldi r24,lo8(1)
 20251 879a 8127      		eor r24,r17
 20252 879c 8823      		tst r24
 20253 879e 01F0      		breq .L827
 20254               	.L825:
 20255               		.loc 2 1798 0 discriminator 3
 20256 87a0 2F81      		ldd r18,Y+7
 20257 87a2 3885      		ldd r19,Y+8
 20258 87a4 4985      		ldd r20,Y+9
 20259 87a6 5A85      		ldd r21,Y+10
 20260 87a8 6B85      		ldd r22,Y+11
 20261 87aa 7C85      		ldd r23,Y+12
 20262 87ac 8D85      		ldd r24,Y+13
 20263 87ae 9E85      		ldd r25,Y+14
 20264 87b0 0E94 0000 		call __ltsf2
 20265 87b4 8823      		tst r24
 20266 87b6 04F4      		brge .L922
 20267               		.loc 2 1798 0 discriminator 5
 20268 87b8 8B85      		ldd r24,Y+11
 20269 87ba 9C85      		ldd r25,Y+12
 20270 87bc AD85      		ldd r26,Y+13
 20271 87be BE85      		ldd r27,Y+14
 20272 87c0 00C0      		rjmp .L831
 20273               	.L922:
 20274               		.loc 2 1798 0 discriminator 6
 20275 87c2 8F81      		ldd r24,Y+7
 20276 87c4 9885      		ldd r25,Y+8
 20277 87c6 A985      		ldd r26,Y+9
 20278 87c8 BA85      		ldd r27,Y+10
 20279 87ca 00C0      		rjmp .L831
 20280               	.L827:
 20281               		.loc 2 1798 0 discriminator 4
 20282 87cc 80E0      		ldi r24,0
 20283 87ce 90E0      		ldi r25,0
 20284 87d0 DC01      		movw r26,r24
 20285               	.L831:
 20286               		.loc 2 1798 0 discriminator 10
 20287 87d2 8B8B      		std Y+19,r24
 20288 87d4 9C8B      		std Y+20,r25
 20289 87d6 AD8B      		std Y+21,r26
 20290 87d8 BE8B      		std Y+22,r27
 20291 87da 00C0      		rjmp .L820
 20292               	.L821:
1799:lp_solve_5.5/lp_presolve.c ****       else
1800:lp_solve_5.5/lp_presolve.c ****         fixvalue = newvalue;
 20293               		.loc 2 1800 0 is_stmt 1
 20294 87dc 8EA9      		ldd r24,Y+54
 20295 87de 9FA9      		ldd r25,Y+55
 20296 87e0 A8AD      		ldd r26,Y+56
 20297 87e2 B9AD      		ldd r27,Y+57
 20298 87e4 8B8B      		std Y+19,r24
 20299 87e6 9C8B      		std Y+20,r25
 20300 87e8 AD8B      		std Y+21,r26
 20301 87ea BE8B      		std Y+22,r27
 20302               	.L820:
1801:lp_solve_5.5/lp_presolve.c ****     }
1802:lp_solve_5.5/lp_presolve.c **** #if 1 /* Fast normal version */
1803:lp_solve_5.5/lp_presolve.c ****     set_bounds(lp, colnr, fixvalue, fixvalue);
 20303               		.loc 2 1803 0
 20304 87ec 2B89      		ldd r18,Y+19
 20305 87ee 3C89      		ldd r19,Y+20
 20306 87f0 4D89      		ldd r20,Y+21
 20307 87f2 5E89      		ldd r21,Y+22
 20308 87f4 8B89      		ldd r24,Y+19
 20309 87f6 9C89      		ldd r25,Y+20
 20310 87f8 AD89      		ldd r26,Y+21
 20311 87fa BE89      		ldd r27,Y+22
 20312 87fc 6CA9      		ldd r22,Y+52
 20313 87fe 7DA9      		ldd r23,Y+53
 20314 8800 EF8D      		ldd r30,Y+31
 20315 8802 F8A1      		ldd r31,Y+32
 20316 8804 7901      		movw r14,r18
 20317 8806 8A01      		movw r16,r20
 20318 8808 9C01      		movw r18,r24
 20319 880a AD01      		movw r20,r26
 20320 880c CF01      		movw r24,r30
 20321 880e 0E94 0000 		call set_bounds
1804:lp_solve_5.5/lp_presolve.c **** #else /* Slower version that can be used for debugging/control purposes */
1805:lp_solve_5.5/lp_presolve.c ****     presolve_coltighten(psdata, colnr, fixvalue, fixvalue, NULL);
1806:lp_solve_5.5/lp_presolve.c ****     lobound = fixvalue;
1807:lp_solve_5.5/lp_presolve.c ****     upbound = fixvalue;
1808:lp_solve_5.5/lp_presolve.c **** #endif
1809:lp_solve_5.5/lp_presolve.c ****     if(fixvalue != 0)
 20322               		.loc 2 1809 0
 20323 8812 20E0      		ldi r18,0
 20324 8814 30E0      		ldi r19,0
 20325 8816 A901      		movw r20,r18
 20326 8818 6B89      		ldd r22,Y+19
 20327 881a 7C89      		ldd r23,Y+20
 20328 881c 8D89      		ldd r24,Y+21
 20329 881e 9E89      		ldd r25,Y+22
 20330 8820 0E94 0000 		call __nesf2
 20331 8824 8823      		tst r24
 20332 8826 01F0      		breq .L832
1810:lp_solve_5.5/lp_presolve.c ****       addUndoPresolve(lp, TRUE, colnr, fixvalue, 0, 0);
 20333               		.loc 2 1810 0
 20334 8828 8B89      		ldd r24,Y+19
 20335 882a 9C89      		ldd r25,Y+20
 20336 882c AD89      		ldd r26,Y+21
 20337 882e BE89      		ldd r27,Y+22
 20338 8830 4CA9      		ldd r20,Y+52
 20339 8832 5DA9      		ldd r21,Y+53
 20340 8834 EF8D      		ldd r30,Y+31
 20341 8836 F8A1      		ldd r31,Y+32
 20342 8838 A12C      		mov r10,__zero_reg__
 20343 883a B12C      		mov r11,__zero_reg__
 20344 883c C12C      		mov r12,__zero_reg__
 20345 883e D12C      		mov r13,__zero_reg__
 20346 8840 7601      		movw r14,r12
 20347 8842 8C01      		movw r16,r24
 20348 8844 9D01      		movw r18,r26
 20349 8846 61E0      		ldi r22,lo8(1)
 20350 8848 CF01      		movw r24,r30
 20351 884a 0E94 0000 		call addUndoPresolve
 20352               	.L832:
1811:lp_solve_5.5/lp_presolve.c ****     mult = -1;
 20353               		.loc 2 1811 0
 20354 884e 80E0      		ldi r24,0
 20355 8850 90E0      		ldi r25,0
 20356 8852 A0E8      		ldi r26,lo8(-128)
 20357 8854 BFEB      		ldi r27,lo8(-65)
 20358 8856 8F8B      		std Y+23,r24
 20359 8858 988F      		std Y+24,r25
 20360 885a A98F      		std Y+25,r26
 20361 885c BA8F      		std Y+26,r27
 20362 885e 00C0      		rjmp .L834
 20363               	.L813:
1812:lp_solve_5.5/lp_presolve.c ****   }
1813:lp_solve_5.5/lp_presolve.c ****   else {
1814:lp_solve_5.5/lp_presolve.c ****     mult = 1;
 20364               		.loc 2 1814 0
 20365 8860 80E0      		ldi r24,0
 20366 8862 90E0      		ldi r25,0
 20367 8864 A0E8      		ldi r26,lo8(-128)
 20368 8866 BFE3      		ldi r27,lo8(63)
 20369 8868 8F8B      		std Y+23,r24
 20370 886a 988F      		std Y+24,r25
 20371 886c A98F      		std Y+25,r26
 20372 886e BA8F      		std Y+26,r27
1815:lp_solve_5.5/lp_presolve.c ****     fixvalue = 0;
 20373               		.loc 2 1815 0
 20374 8870 1B8A      		std Y+19,__zero_reg__
 20375 8872 1C8A      		std Y+20,__zero_reg__
 20376 8874 1D8A      		std Y+21,__zero_reg__
 20377 8876 1E8A      		std Y+22,__zero_reg__
 20378               	.L834:
1816:lp_solve_5.5/lp_presolve.c ****   }
1817:lp_solve_5.5/lp_presolve.c **** 
1818:lp_solve_5.5/lp_presolve.c ****   /* Adjust semi-continuous variable bounds to zero-base */
1819:lp_solve_5.5/lp_presolve.c ****   if(is_semicont(lp, colnr) && (upbound > lobound)) {
 20379               		.loc 2 1819 0
 20380 8878 2CA9      		ldd r18,Y+52
 20381 887a 3DA9      		ldd r19,Y+53
 20382 887c 8F8D      		ldd r24,Y+31
 20383 887e 98A1      		ldd r25,Y+32
 20384 8880 B901      		movw r22,r18
 20385 8882 0E94 0000 		call is_semicont
 20386 8886 8823      		tst r24
 20387 8888 01F0      		breq .L835
 20388               		.loc 2 1819 0 is_stmt 0 discriminator 1
 20389 888a 2F81      		ldd r18,Y+7
 20390 888c 3885      		ldd r19,Y+8
 20391 888e 4985      		ldd r20,Y+9
 20392 8890 5A85      		ldd r21,Y+10
 20393 8892 6B85      		ldd r22,Y+11
 20394 8894 7C85      		ldd r23,Y+12
 20395 8896 8D85      		ldd r24,Y+13
 20396 8898 9E85      		ldd r25,Y+14
 20397 889a 0E94 0000 		call __gtsf2
 20398 889e 1816      		cp __zero_reg__,r24
 20399 88a0 04F4      		brge .L835
1820:lp_solve_5.5/lp_presolve.c ****     if(lobound > 0)
 20400               		.loc 2 1820 0 is_stmt 1
 20401 88a2 20E0      		ldi r18,0
 20402 88a4 30E0      		ldi r19,0
 20403 88a6 A901      		movw r20,r18
 20404 88a8 6F81      		ldd r22,Y+7
 20405 88aa 7885      		ldd r23,Y+8
 20406 88ac 8985      		ldd r24,Y+9
 20407 88ae 9A85      		ldd r25,Y+10
 20408 88b0 0E94 0000 		call __gtsf2
 20409 88b4 1816      		cp __zero_reg__,r24
 20410 88b6 04F4      		brge .L923
1821:lp_solve_5.5/lp_presolve.c ****       lobound = 0;
 20411               		.loc 2 1821 0
 20412 88b8 1F82      		std Y+7,__zero_reg__
 20413 88ba 1886      		std Y+8,__zero_reg__
 20414 88bc 1986      		std Y+9,__zero_reg__
 20415 88be 1A86      		std Y+10,__zero_reg__
 20416 88c0 00C0      		rjmp .L835
 20417               	.L923:
1822:lp_solve_5.5/lp_presolve.c ****     else if(upbound < 0)
 20418               		.loc 2 1822 0
 20419 88c2 20E0      		ldi r18,0
 20420 88c4 30E0      		ldi r19,0
 20421 88c6 A901      		movw r20,r18
 20422 88c8 6B85      		ldd r22,Y+11
 20423 88ca 7C85      		ldd r23,Y+12
 20424 88cc 8D85      		ldd r24,Y+13
 20425 88ce 9E85      		ldd r25,Y+14
 20426 88d0 0E94 0000 		call __ltsf2
 20427 88d4 8823      		tst r24
 20428 88d6 04F4      		brge .L835
1823:lp_solve_5.5/lp_presolve.c ****       upbound = 0;
 20429               		.loc 2 1823 0
 20430 88d8 1B86      		std Y+11,__zero_reg__
 20431 88da 1C86      		std Y+12,__zero_reg__
 20432 88dc 1D86      		std Y+13,__zero_reg__
 20433 88de 1E86      		std Y+14,__zero_reg__
 20434               	.L835:
1824:lp_solve_5.5/lp_presolve.c ****   }
1825:lp_solve_5.5/lp_presolve.c **** 
1826:lp_solve_5.5/lp_presolve.c ****   /* Loop over rows to update statistics */
1827:lp_solve_5.5/lp_presolve.c ****   ix = mat->col_end[colnr - 1];
 20435               		.loc 2 1827 0
 20436 88e0 89A1      		ldd r24,Y+33
 20437 88e2 9AA1      		ldd r25,Y+34
 20438 88e4 FC01      		movw r30,r24
 20439 88e6 2289      		ldd r18,Z+18
 20440 88e8 3389      		ldd r19,Z+19
 20441 88ea 8CA9      		ldd r24,Y+52
 20442 88ec 9DA9      		ldd r25,Y+53
 20443 88ee 8150      		subi r24,1
 20444 88f0 9048      		sbci r25,-128
 20445 88f2 880F      		lsl r24
 20446 88f4 991F      		rol r25
 20447 88f6 820F      		add r24,r18
 20448 88f8 931F      		adc r25,r19
 20449 88fa FC01      		movw r30,r24
 20450 88fc 8081      		ld r24,Z
 20451 88fe 9181      		ldd r25,Z+1
 20452 8900 9C83      		std Y+4,r25
 20453 8902 8B83      		std Y+3,r24
1828:lp_solve_5.5/lp_presolve.c ****   ie = mat->col_end[colnr];
 20454               		.loc 2 1828 0
 20455 8904 89A1      		ldd r24,Y+33
 20456 8906 9AA1      		ldd r25,Y+34
 20457 8908 FC01      		movw r30,r24
 20458 890a 2289      		ldd r18,Z+18
 20459 890c 3389      		ldd r19,Z+19
 20460 890e 8CA9      		ldd r24,Y+52
 20461 8910 9DA9      		ldd r25,Y+53
 20462 8912 880F      		lsl r24
 20463 8914 991F      		rol r25
 20464 8916 820F      		add r24,r18
 20465 8918 931F      		adc r25,r19
 20466 891a FC01      		movw r30,r24
 20467 891c 8081      		ld r24,Z
 20468 891e 9181      		ldd r25,Z+1
 20469 8920 9EA3      		std Y+38,r25
 20470 8922 8DA3      		std Y+37,r24
1829:lp_solve_5.5/lp_presolve.c ****   rownr = &COL_MAT_ROWNR(ix);
 20471               		.loc 2 1829 0
 20472 8924 89A1      		ldd r24,Y+33
 20473 8926 9AA1      		ldd r25,Y+34
 20474 8928 FC01      		movw r30,r24
 20475 892a 2685      		ldd r18,Z+14
 20476 892c 3785      		ldd r19,Z+15
 20477 892e 8B81      		ldd r24,Y+3
 20478 8930 9C81      		ldd r25,Y+4
 20479 8932 880F      		lsl r24
 20480 8934 991F      		rol r25
 20481 8936 820F      		add r24,r18
 20482 8938 931F      		adc r25,r19
 20483 893a 9E8F      		std Y+30,r25
 20484 893c 8D8F      		std Y+29,r24
1830:lp_solve_5.5/lp_presolve.c ****   value = &COL_MAT_VALUE(ix);
 20485               		.loc 2 1830 0
 20486 893e 89A1      		ldd r24,Y+33
 20487 8940 9AA1      		ldd r25,Y+34
 20488 8942 FC01      		movw r30,r24
 20489 8944 2089      		ldd r18,Z+16
 20490 8946 3189      		ldd r19,Z+17
 20491 8948 8B81      		ldd r24,Y+3
 20492 894a 9C81      		ldd r25,Y+4
 20493 894c 880F      		lsl r24
 20494 894e 991F      		rol r25
 20495 8950 880F      		lsl r24
 20496 8952 991F      		rol r25
 20497 8954 820F      		add r24,r18
 20498 8956 931F      		adc r25,r19
 20499 8958 9C8F      		std Y+28,r25
 20500 895a 8B8F      		std Y+27,r24
1831:lp_solve_5.5/lp_presolve.c ****   for(; doOF || (ix < ie);
 20501               		.loc 2 1831 0
 20502 895c 00C0      		rjmp .L840
 20503               	.L841:
1832:lp_solve_5.5/lp_presolve.c ****       ix++, rownr += matRowColStep, value += matValueStep) {
1833:lp_solve_5.5/lp_presolve.c **** 
1834:lp_solve_5.5/lp_presolve.c ****    /* Retrieve row data and adjust RHS if we are deleting a variable */
1835:lp_solve_5.5/lp_presolve.c **** Restart:
1836:lp_solve_5.5/lp_presolve.c ****     if(doOF) {
 20504               		.loc 2 1836 0
 20505 895e 8E81      		ldd r24,Y+6
 20506 8960 8823      		tst r24
 20507 8962 01F0      		breq .L842
1837:lp_solve_5.5/lp_presolve.c ****       i = 0;
 20508               		.loc 2 1837 0
 20509 8964 1A82      		std Y+2,__zero_reg__
 20510 8966 1982      		std Y+1,__zero_reg__
1838:lp_solve_5.5/lp_presolve.c ****       Value = lp->orig_obj[colnr];
 20511               		.loc 2 1838 0
 20512 8968 8F8D      		ldd r24,Y+31
 20513 896a 98A1      		ldd r25,Y+32
 20514 896c 845D      		subi r24,-44
 20515 896e 9D4F      		sbci r25,-3
 20516 8970 FC01      		movw r30,r24
 20517 8972 2081      		ld r18,Z
 20518 8974 3181      		ldd r19,Z+1
 20519 8976 8CA9      		ldd r24,Y+52
 20520 8978 9DA9      		ldd r25,Y+53
 20521 897a 880F      		lsl r24
 20522 897c 991F      		rol r25
 20523 897e 880F      		lsl r24
 20524 8980 991F      		rol r25
 20525 8982 820F      		add r24,r18
 20526 8984 931F      		adc r25,r19
 20527 8986 FC01      		movw r30,r24
 20528 8988 8081      		ld r24,Z
 20529 898a 9181      		ldd r25,Z+1
 20530 898c A281      		ldd r26,Z+2
 20531 898e B381      		ldd r27,Z+3
 20532 8990 8F87      		std Y+15,r24
 20533 8992 988B      		std Y+16,r25
 20534 8994 A98B      		std Y+17,r26
 20535 8996 BA8B      		std Y+18,r27
 20536 8998 00C0      		rjmp .L843
 20537               	.L842:
1839:lp_solve_5.5/lp_presolve.c ****     }
1840:lp_solve_5.5/lp_presolve.c ****     else {
1841:lp_solve_5.5/lp_presolve.c ****       i = *rownr;
 20538               		.loc 2 1841 0
 20539 899a 8D8D      		ldd r24,Y+29
 20540 899c 9E8D      		ldd r25,Y+30
 20541 899e FC01      		movw r30,r24
 20542 89a0 8081      		ld r24,Z
 20543 89a2 9181      		ldd r25,Z+1
 20544 89a4 9A83      		std Y+2,r25
 20545 89a6 8983      		std Y+1,r24
1842:lp_solve_5.5/lp_presolve.c ****       Value = *value;
 20546               		.loc 2 1842 0
 20547 89a8 8B8D      		ldd r24,Y+27
 20548 89aa 9C8D      		ldd r25,Y+28
 20549 89ac FC01      		movw r30,r24
 20550 89ae 8081      		ld r24,Z
 20551 89b0 9181      		ldd r25,Z+1
 20552 89b2 A281      		ldd r26,Z+2
 20553 89b4 B381      		ldd r27,Z+3
 20554 89b6 8F87      		std Y+15,r24
 20555 89b8 988B      		std Y+16,r25
 20556 89ba A98B      		std Y+17,r26
 20557 89bc BA8B      		std Y+18,r27
1843:lp_solve_5.5/lp_presolve.c ****       if(!isActiveLink(ps->varmap, i))
 20558               		.loc 2 1843 0
 20559 89be 8BA1      		ldd r24,Y+35
 20560 89c0 9CA1      		ldd r25,Y+36
 20561 89c2 FC01      		movw r30,r24
 20562 89c4 8081      		ld r24,Z
 20563 89c6 9181      		ldd r25,Z+1
 20564 89c8 2981      		ldd r18,Y+1
 20565 89ca 3A81      		ldd r19,Y+2
 20566 89cc B901      		movw r22,r18
 20567 89ce 0E94 0000 		call isActiveLink
 20568 89d2 8823      		tst r24
 20569 89d4 01F4      		brne .+2
 20570 89d6 00C0      		rjmp .L924
 20571               	.L843:
1844:lp_solve_5.5/lp_presolve.c ****         continue;
1845:lp_solve_5.5/lp_presolve.c ****     }
1846:lp_solve_5.5/lp_presolve.c ****     if(Value == 0)
 20572               		.loc 2 1846 0
 20573 89d8 20E0      		ldi r18,0
 20574 89da 30E0      		ldi r19,0
 20575 89dc A901      		movw r20,r18
 20576 89de 6F85      		ldd r22,Y+15
 20577 89e0 7889      		ldd r23,Y+16
 20578 89e2 8989      		ldd r24,Y+17
 20579 89e4 9A89      		ldd r25,Y+18
 20580 89e6 0E94 0000 		call __eqsf2
 20581 89ea 8823      		tst r24
 20582 89ec 01F4      		brne .+2
 20583 89ee 00C0      		rjmp .L925
1847:lp_solve_5.5/lp_presolve.c ****       goto BlockEnd;
1848:lp_solve_5.5/lp_presolve.c **** 
1849:lp_solve_5.5/lp_presolve.c ****     if(remove && (fixvalue != 0))
 20584               		.loc 2 1849 0
 20585 89f0 8AAD      		ldd r24,Y+58
 20586 89f2 8823      		tst r24
 20587 89f4 01F0      		breq .L848
 20588               		.loc 2 1849 0 is_stmt 0 discriminator 1
 20589 89f6 20E0      		ldi r18,0
 20590 89f8 30E0      		ldi r19,0
 20591 89fa A901      		movw r20,r18
 20592 89fc 6B89      		ldd r22,Y+19
 20593 89fe 7C89      		ldd r23,Y+20
 20594 8a00 8D89      		ldd r24,Y+21
 20595 8a02 9E89      		ldd r25,Y+22
 20596 8a04 0E94 0000 		call __nesf2
 20597 8a08 8823      		tst r24
 20598 8a0a 01F0      		breq .L848
1850:lp_solve_5.5/lp_presolve.c ****       presolve_adjustrhs(psdata, i, Value*fixvalue, psdata->epsvalue);
 20599               		.loc 2 1850 0 is_stmt 1
 20600 8a0c 8AA9      		ldd r24,Y+50
 20601 8a0e 9BA9      		ldd r25,Y+51
 20602 8a10 FC01      		movw r30,r24
 20603 8a12 C488      		ldd r12,Z+20
 20604 8a14 D588      		ldd r13,Z+21
 20605 8a16 E688      		ldd r14,Z+22
 20606 8a18 F788      		ldd r15,Z+23
 20607 8a1a 2B89      		ldd r18,Y+19
 20608 8a1c 3C89      		ldd r19,Y+20
 20609 8a1e 4D89      		ldd r20,Y+21
 20610 8a20 5E89      		ldd r21,Y+22
 20611 8a22 6F85      		ldd r22,Y+15
 20612 8a24 7889      		ldd r23,Y+16
 20613 8a26 8989      		ldd r24,Y+17
 20614 8a28 9A89      		ldd r25,Y+18
 20615 8a2a 0E94 0000 		call __mulsf3
 20616 8a2e DC01      		movw r26,r24
 20617 8a30 CB01      		movw r24,r22
 20618 8a32 9C01      		movw r18,r24
 20619 8a34 AD01      		movw r20,r26
 20620 8a36 6981      		ldd r22,Y+1
 20621 8a38 7A81      		ldd r23,Y+2
 20622 8a3a 8AA9      		ldd r24,Y+50
 20623 8a3c 9BA9      		ldd r25,Y+51
 20624 8a3e 8701      		movw r16,r14
 20625 8a40 7601      		movw r14,r12
 20626 8a42 0E94 0000 		call presolve_adjustrhs
 20627               	.L848:
1851:lp_solve_5.5/lp_presolve.c **** 
1852:lp_solve_5.5/lp_presolve.c ****    /* Prepare for further processing */
1853:lp_solve_5.5/lp_presolve.c ****     Value = my_chsign(is_chsign(lp, i), Value);
 20628               		.loc 2 1853 0
 20629 8a46 2981      		ldd r18,Y+1
 20630 8a48 3A81      		ldd r19,Y+2
 20631 8a4a 8F8D      		ldd r24,Y+31
 20632 8a4c 98A1      		ldd r25,Y+32
 20633 8a4e B901      		movw r22,r18
 20634 8a50 0E94 0000 		call is_chsign
 20635 8a54 8823      		tst r24
 20636 8a56 01F0      		breq .L850
 20637               		.loc 2 1853 0 is_stmt 0 discriminator 1
 20638 8a58 20E0      		ldi r18,0
 20639 8a5a 30E0      		ldi r19,0
 20640 8a5c A901      		movw r20,r18
 20641 8a5e 6F85      		ldd r22,Y+15
 20642 8a60 7889      		ldd r23,Y+16
 20643 8a62 8989      		ldd r24,Y+17
 20644 8a64 9A89      		ldd r25,Y+18
 20645 8a66 0E94 0000 		call __nesf2
 20646 8a6a 8823      		tst r24
 20647 8a6c 01F0      		breq .L850
 20648               		.loc 2 1853 0 discriminator 3
 20649 8a6e 8F85      		ldd r24,Y+15
 20650 8a70 9889      		ldd r25,Y+16
 20651 8a72 A989      		ldd r26,Y+17
 20652 8a74 BA89      		ldd r27,Y+18
 20653 8a76 B058      		subi r27,0x80
 20654 8a78 00C0      		rjmp .L852
 20655               	.L850:
 20656               		.loc 2 1853 0 discriminator 4
 20657 8a7a 8F85      		ldd r24,Y+15
 20658 8a7c 9889      		ldd r25,Y+16
 20659 8a7e A989      		ldd r26,Y+17
 20660 8a80 BA89      		ldd r27,Y+18
 20661               	.L852:
 20662               		.loc 2 1853 0 discriminator 6
 20663 8a82 8F87      		std Y+15,r24
 20664 8a84 988B      		std Y+16,r25
 20665 8a86 A98B      		std Y+17,r26
 20666 8a88 BA8B      		std Y+18,r27
1854:lp_solve_5.5/lp_presolve.c ****     isneg = (MYBOOL) (Value < 0);
 20667               		.loc 2 1854 0 is_stmt 1 discriminator 6
 20668 8a8a 11E0      		ldi r17,lo8(1)
 20669 8a8c 20E0      		ldi r18,0
 20670 8a8e 30E0      		ldi r19,0
 20671 8a90 A901      		movw r20,r18
 20672 8a92 6F85      		ldd r22,Y+15
 20673 8a94 7889      		ldd r23,Y+16
 20674 8a96 8989      		ldd r24,Y+17
 20675 8a98 9A89      		ldd r25,Y+18
 20676 8a9a 0E94 0000 		call __ltsf2
 20677 8a9e 8823      		tst r24
 20678 8aa0 04F0      		brlt .L853
 20679 8aa2 10E0      		ldi r17,0
 20680               	.L853:
 20681 8aa4 1FA3      		std Y+39,r17
1855:lp_solve_5.5/lp_presolve.c **** 
1856:lp_solve_5.5/lp_presolve.c ****    /* Reduce row variable counts if we are removing the variable */
1857:lp_solve_5.5/lp_presolve.c ****     if(remove == TRUE) {
 20682               		.loc 2 1857 0 discriminator 6
 20683 8aa6 8AAD      		ldd r24,Y+58
 20684 8aa8 8130      		cpi r24,lo8(1)
 20685 8aaa 01F0      		breq .+2
 20686 8aac 00C0      		rjmp .L854
1858:lp_solve_5.5/lp_presolve.c ****       if(isneg) {
 20687               		.loc 2 1858 0
 20688 8aae 8FA1      		ldd r24,Y+39
 20689 8ab0 8823      		tst r24
 20690 8ab2 01F0      		breq .L855
1859:lp_solve_5.5/lp_presolve.c ****         ps->negcount[i]--;
 20691               		.loc 2 1859 0
 20692 8ab4 8BA1      		ldd r24,Y+35
 20693 8ab6 9CA1      		ldd r25,Y+36
 20694 8ab8 FC01      		movw r30,r24
 20695 8aba 2085      		ldd r18,Z+8
 20696 8abc 3185      		ldd r19,Z+9
 20697 8abe 8981      		ldd r24,Y+1
 20698 8ac0 9A81      		ldd r25,Y+2
 20699 8ac2 880F      		lsl r24
 20700 8ac4 991F      		rol r25
 20701 8ac6 820F      		add r24,r18
 20702 8ac8 931F      		adc r25,r19
 20703 8aca FC01      		movw r30,r24
 20704 8acc 2081      		ld r18,Z
 20705 8ace 3181      		ldd r19,Z+1
 20706 8ad0 2150      		subi r18,1
 20707 8ad2 3109      		sbc r19,__zero_reg__
 20708 8ad4 FC01      		movw r30,r24
 20709 8ad6 3183      		std Z+1,r19
 20710 8ad8 2083      		st Z,r18
 20711 8ada 00C0      		rjmp .L856
 20712               	.L855:
1860:lp_solve_5.5/lp_presolve.c ****       }
1861:lp_solve_5.5/lp_presolve.c ****       else {
1862:lp_solve_5.5/lp_presolve.c ****         ps->plucount[i]--;
 20713               		.loc 2 1862 0
 20714 8adc 8BA1      		ldd r24,Y+35
 20715 8ade 9CA1      		ldd r25,Y+36
 20716 8ae0 FC01      		movw r30,r24
 20717 8ae2 2681      		ldd r18,Z+6
 20718 8ae4 3781      		ldd r19,Z+7
 20719 8ae6 8981      		ldd r24,Y+1
 20720 8ae8 9A81      		ldd r25,Y+2
 20721 8aea 880F      		lsl r24
 20722 8aec 991F      		rol r25
 20723 8aee 820F      		add r24,r18
 20724 8af0 931F      		adc r25,r19
 20725 8af2 FC01      		movw r30,r24
 20726 8af4 2081      		ld r18,Z
 20727 8af6 3181      		ldd r19,Z+1
 20728 8af8 2150      		subi r18,1
 20729 8afa 3109      		sbc r19,__zero_reg__
 20730 8afc FC01      		movw r30,r24
 20731 8afe 3183      		std Z+1,r19
 20732 8b00 2083      		st Z,r18
 20733               	.L856:
1863:lp_solve_5.5/lp_presolve.c ****       }
1864:lp_solve_5.5/lp_presolve.c ****       if((lobound < 0) && (upbound >= 0)) {
 20734               		.loc 2 1864 0
 20735 8b02 20E0      		ldi r18,0
 20736 8b04 30E0      		ldi r19,0
 20737 8b06 A901      		movw r20,r18
 20738 8b08 6F81      		ldd r22,Y+7
 20739 8b0a 7885      		ldd r23,Y+8
 20740 8b0c 8985      		ldd r24,Y+9
 20741 8b0e 9A85      		ldd r25,Y+10
 20742 8b10 0E94 0000 		call __ltsf2
 20743 8b14 8823      		tst r24
 20744 8b16 04F4      		brge .L854
 20745               		.loc 2 1864 0 is_stmt 0 discriminator 1
 20746 8b18 20E0      		ldi r18,0
 20747 8b1a 30E0      		ldi r19,0
 20748 8b1c A901      		movw r20,r18
 20749 8b1e 6B85      		ldd r22,Y+11
 20750 8b20 7C85      		ldd r23,Y+12
 20751 8b22 8D85      		ldd r24,Y+13
 20752 8b24 9E85      		ldd r25,Y+14
 20753 8b26 0E94 0000 		call __gesf2
 20754 8b2a 8823      		tst r24
 20755 8b2c 04F0      		brlt .L854
1865:lp_solve_5.5/lp_presolve.c ****         ps->pluneg[i]--;
 20756               		.loc 2 1865 0 is_stmt 1
 20757 8b2e 8BA1      		ldd r24,Y+35
 20758 8b30 9CA1      		ldd r25,Y+36
 20759 8b32 FC01      		movw r30,r24
 20760 8b34 2285      		ldd r18,Z+10
 20761 8b36 3385      		ldd r19,Z+11
 20762 8b38 8981      		ldd r24,Y+1
 20763 8b3a 9A81      		ldd r25,Y+2
 20764 8b3c 880F      		lsl r24
 20765 8b3e 991F      		rol r25
 20766 8b40 820F      		add r24,r18
 20767 8b42 931F      		adc r25,r19
 20768 8b44 FC01      		movw r30,r24
 20769 8b46 2081      		ld r18,Z
 20770 8b48 3181      		ldd r19,Z+1
 20771 8b4a 2150      		subi r18,1
 20772 8b4c 3109      		sbc r19,__zero_reg__
 20773 8b4e FC01      		movw r30,r24
 20774 8b50 3183      		std Z+1,r19
 20775 8b52 2083      		st Z,r18
 20776               	.L854:
1866:lp_solve_5.5/lp_presolve.c ****       }
1867:lp_solve_5.5/lp_presolve.c ****     }
1868:lp_solve_5.5/lp_presolve.c **** 
1869:lp_solve_5.5/lp_presolve.c ****    /* Compute associated constraint contribution values */
1870:lp_solve_5.5/lp_presolve.c ****     upfinite = (MYBOOL) (upbound < lp->infinite);
 20777               		.loc 2 1870 0
 20778 8b54 8F8D      		ldd r24,Y+31
 20779 8b56 98A1      		ldd r25,Y+32
 20780 8b58 865F      		subi r24,-10
 20781 8b5a 9C4F      		sbci r25,-4
 20782 8b5c FC01      		movw r30,r24
 20783 8b5e 8081      		ld r24,Z
 20784 8b60 9181      		ldd r25,Z+1
 20785 8b62 A281      		ldd r26,Z+2
 20786 8b64 B381      		ldd r27,Z+3
 20787 8b66 11E0      		ldi r17,lo8(1)
 20788 8b68 2B85      		ldd r18,Y+11
 20789 8b6a 3C85      		ldd r19,Y+12
 20790 8b6c 4D85      		ldd r20,Y+13
 20791 8b6e 5E85      		ldd r21,Y+14
 20792 8b70 BC01      		movw r22,r24
 20793 8b72 CD01      		movw r24,r26
 20794 8b74 0E94 0000 		call __gtsf2
 20795 8b78 1816      		cp __zero_reg__,r24
 20796 8b7a 04F0      		brlt .L859
 20797 8b7c 10E0      		ldi r17,0
 20798               	.L859:
 20799 8b7e 18A7      		std Y+40,r17
1871:lp_solve_5.5/lp_presolve.c ****     lofinite = (MYBOOL) (lobound > -lp->infinite);
 20800               		.loc 2 1871 0
 20801 8b80 8F8D      		ldd r24,Y+31
 20802 8b82 98A1      		ldd r25,Y+32
 20803 8b84 865F      		subi r24,-10
 20804 8b86 9C4F      		sbci r25,-4
 20805 8b88 FC01      		movw r30,r24
 20806 8b8a 8081      		ld r24,Z
 20807 8b8c 9181      		ldd r25,Z+1
 20808 8b8e A281      		ldd r26,Z+2
 20809 8b90 B381      		ldd r27,Z+3
 20810 8b92 B058      		subi r27,0x80
 20811 8b94 11E0      		ldi r17,lo8(1)
 20812 8b96 2F81      		ldd r18,Y+7
 20813 8b98 3885      		ldd r19,Y+8
 20814 8b9a 4985      		ldd r20,Y+9
 20815 8b9c 5A85      		ldd r21,Y+10
 20816 8b9e BC01      		movw r22,r24
 20817 8ba0 CD01      		movw r24,r26
 20818 8ba2 0E94 0000 		call __ltsf2
 20819 8ba6 8823      		tst r24
 20820 8ba8 04F0      		brlt .L860
 20821 8baa 10E0      		ldi r17,0
 20822               	.L860:
 20823 8bac 19A7      		std Y+41,r17
1872:lp_solve_5.5/lp_presolve.c ****     if(upfinite || lofinite) {
 20824               		.loc 2 1872 0
 20825 8bae 88A5      		ldd r24,Y+40
 20826 8bb0 8823      		tst r24
 20827 8bb2 01F4      		brne .L861
 20828               		.loc 2 1872 0 is_stmt 0 discriminator 1
 20829 8bb4 89A5      		ldd r24,Y+41
 20830 8bb6 8823      		tst r24
 20831 8bb8 01F0      		breq .L862
 20832               	.L861:
1873:lp_solve_5.5/lp_presolve.c ****       if(remove)
 20833               		.loc 2 1873 0 is_stmt 1
 20834 8bba 8AAD      		ldd r24,Y+58
 20835 8bbc 8823      		tst r24
 20836 8bbe 01F0      		breq .L863
1874:lp_solve_5.5/lp_presolve.c ****         ps->infcount[i]--;
 20837               		.loc 2 1874 0
 20838 8bc0 8BA1      		ldd r24,Y+35
 20839 8bc2 9CA1      		ldd r25,Y+36
 20840 8bc4 FC01      		movw r30,r24
 20841 8bc6 2485      		ldd r18,Z+12
 20842 8bc8 3585      		ldd r19,Z+13
 20843 8bca 8981      		ldd r24,Y+1
 20844 8bcc 9A81      		ldd r25,Y+2
 20845 8bce 880F      		lsl r24
 20846 8bd0 991F      		rol r25
 20847 8bd2 820F      		add r24,r18
 20848 8bd4 931F      		adc r25,r19
 20849 8bd6 FC01      		movw r30,r24
 20850 8bd8 2081      		ld r18,Z
 20851 8bda 3181      		ldd r19,Z+1
 20852 8bdc 2150      		subi r18,1
 20853 8bde 3109      		sbc r19,__zero_reg__
 20854 8be0 FC01      		movw r30,r24
 20855 8be2 3183      		std Z+1,r19
 20856 8be4 2083      		st Z,r18
 20857 8be6 00C0      		rjmp .L862
 20858               	.L863:
1875:lp_solve_5.5/lp_presolve.c ****       else
1876:lp_solve_5.5/lp_presolve.c ****         ps->infcount[i]++;
 20859               		.loc 2 1876 0
 20860 8be8 8BA1      		ldd r24,Y+35
 20861 8bea 9CA1      		ldd r25,Y+36
 20862 8bec FC01      		movw r30,r24
 20863 8bee 2485      		ldd r18,Z+12
 20864 8bf0 3585      		ldd r19,Z+13
 20865 8bf2 8981      		ldd r24,Y+1
 20866 8bf4 9A81      		ldd r25,Y+2
 20867 8bf6 880F      		lsl r24
 20868 8bf8 991F      		rol r25
 20869 8bfa 820F      		add r24,r18
 20870 8bfc 931F      		adc r25,r19
 20871 8bfe FC01      		movw r30,r24
 20872 8c00 2081      		ld r18,Z
 20873 8c02 3181      		ldd r19,Z+1
 20874 8c04 2F5F      		subi r18,-1
 20875 8c06 3F4F      		sbci r19,-1
 20876 8c08 FC01      		movw r30,r24
 20877 8c0a 3183      		std Z+1,r19
 20878 8c0c 2083      		st Z,r18
 20879               	.L862:
1877:lp_solve_5.5/lp_presolve.c ****     }
1878:lp_solve_5.5/lp_presolve.c ****     upvalue = my_if(upfinite, Value*upbound, my_chsign(isneg, lp->infinite));
 20880               		.loc 2 1878 0
 20881 8c0e 88A5      		ldd r24,Y+40
 20882 8c10 8823      		tst r24
 20883 8c12 01F0      		breq .L864
 20884               		.loc 2 1878 0 is_stmt 0 discriminator 1
 20885 8c14 2B85      		ldd r18,Y+11
 20886 8c16 3C85      		ldd r19,Y+12
 20887 8c18 4D85      		ldd r20,Y+13
 20888 8c1a 5E85      		ldd r21,Y+14
 20889 8c1c 6F85      		ldd r22,Y+15
 20890 8c1e 7889      		ldd r23,Y+16
 20891 8c20 8989      		ldd r24,Y+17
 20892 8c22 9A89      		ldd r25,Y+18
 20893 8c24 0E94 0000 		call __mulsf3
 20894 8c28 DC01      		movw r26,r24
 20895 8c2a CB01      		movw r24,r22
 20896 8c2c 00C0      		rjmp .L865
 20897               	.L864:
 20898               		.loc 2 1878 0 discriminator 2
 20899 8c2e 8FA1      		ldd r24,Y+39
 20900 8c30 8823      		tst r24
 20901 8c32 01F0      		breq .L866
 20902               		.loc 2 1878 0 discriminator 4
 20903 8c34 8F8D      		ldd r24,Y+31
 20904 8c36 98A1      		ldd r25,Y+32
 20905 8c38 865F      		subi r24,-10
 20906 8c3a 9C4F      		sbci r25,-4
 20907 8c3c FC01      		movw r30,r24
 20908 8c3e 8081      		ld r24,Z
 20909 8c40 9181      		ldd r25,Z+1
 20910 8c42 A281      		ldd r26,Z+2
 20911 8c44 B381      		ldd r27,Z+3
 20912 8c46 20E0      		ldi r18,0
 20913 8c48 30E0      		ldi r19,0
 20914 8c4a A901      		movw r20,r18
 20915 8c4c BC01      		movw r22,r24
 20916 8c4e CD01      		movw r24,r26
 20917 8c50 0E94 0000 		call __nesf2
 20918 8c54 8823      		tst r24
 20919 8c56 01F0      		breq .L866
 20920               		.loc 2 1878 0 discriminator 6
 20921 8c58 8F8D      		ldd r24,Y+31
 20922 8c5a 98A1      		ldd r25,Y+32
 20923 8c5c 865F      		subi r24,-10
 20924 8c5e 9C4F      		sbci r25,-4
 20925 8c60 FC01      		movw r30,r24
 20926 8c62 8081      		ld r24,Z
 20927 8c64 9181      		ldd r25,Z+1
 20928 8c66 A281      		ldd r26,Z+2
 20929 8c68 B381      		ldd r27,Z+3
 20930 8c6a B058      		subi r27,0x80
 20931 8c6c 00C0      		rjmp .L865
 20932               	.L866:
 20933               		.loc 2 1878 0 discriminator 7
 20934 8c6e 8F8D      		ldd r24,Y+31
 20935 8c70 98A1      		ldd r25,Y+32
 20936 8c72 865F      		subi r24,-10
 20937 8c74 9C4F      		sbci r25,-4
 20938 8c76 FC01      		movw r30,r24
 20939 8c78 8081      		ld r24,Z
 20940 8c7a 9181      		ldd r25,Z+1
 20941 8c7c A281      		ldd r26,Z+2
 20942 8c7e B381      		ldd r27,Z+3
 20943               	.L865:
 20944               		.loc 2 1878 0 discriminator 10
 20945 8c80 8EA7      		std Y+46,r24
 20946 8c82 9FA7      		std Y+47,r25
 20947 8c84 A8AB      		std Y+48,r26
 20948 8c86 B9AB      		std Y+49,r27
1879:lp_solve_5.5/lp_presolve.c ****     lovalue = my_if(lofinite, Value*lobound, my_chsign(isneg, -lp->infinite));
 20949               		.loc 2 1879 0 is_stmt 1 discriminator 10
 20950 8c88 89A5      		ldd r24,Y+41
 20951 8c8a 8823      		tst r24
 20952 8c8c 01F0      		breq .L869
 20953               		.loc 2 1879 0 is_stmt 0 discriminator 1
 20954 8c8e 2F81      		ldd r18,Y+7
 20955 8c90 3885      		ldd r19,Y+8
 20956 8c92 4985      		ldd r20,Y+9
 20957 8c94 5A85      		ldd r21,Y+10
 20958 8c96 6F85      		ldd r22,Y+15
 20959 8c98 7889      		ldd r23,Y+16
 20960 8c9a 8989      		ldd r24,Y+17
 20961 8c9c 9A89      		ldd r25,Y+18
 20962 8c9e 0E94 0000 		call __mulsf3
 20963 8ca2 DC01      		movw r26,r24
 20964 8ca4 CB01      		movw r24,r22
 20965 8ca6 00C0      		rjmp .L870
 20966               	.L869:
 20967               		.loc 2 1879 0 discriminator 2
 20968 8ca8 8FA1      		ldd r24,Y+39
 20969 8caa 8823      		tst r24
 20970 8cac 01F0      		breq .L871
 20971               		.loc 2 1879 0 discriminator 4
 20972 8cae 8F8D      		ldd r24,Y+31
 20973 8cb0 98A1      		ldd r25,Y+32
 20974 8cb2 865F      		subi r24,-10
 20975 8cb4 9C4F      		sbci r25,-4
 20976 8cb6 FC01      		movw r30,r24
 20977 8cb8 8081      		ld r24,Z
 20978 8cba 9181      		ldd r25,Z+1
 20979 8cbc A281      		ldd r26,Z+2
 20980 8cbe B381      		ldd r27,Z+3
 20981 8cc0 20E0      		ldi r18,0
 20982 8cc2 30E0      		ldi r19,0
 20983 8cc4 A901      		movw r20,r18
 20984 8cc6 BC01      		movw r22,r24
 20985 8cc8 CD01      		movw r24,r26
 20986 8cca 0E94 0000 		call __nesf2
 20987 8cce 8823      		tst r24
 20988 8cd0 01F0      		breq .L871
 20989               		.loc 2 1879 0 discriminator 6
 20990 8cd2 8F8D      		ldd r24,Y+31
 20991 8cd4 98A1      		ldd r25,Y+32
 20992 8cd6 865F      		subi r24,-10
 20993 8cd8 9C4F      		sbci r25,-4
 20994 8cda FC01      		movw r30,r24
 20995 8cdc 8081      		ld r24,Z
 20996 8cde 9181      		ldd r25,Z+1
 20997 8ce0 A281      		ldd r26,Z+2
 20998 8ce2 B381      		ldd r27,Z+3
 20999 8ce4 00C0      		rjmp .L870
 21000               	.L871:
 21001               		.loc 2 1879 0 discriminator 7
 21002 8ce6 8F8D      		ldd r24,Y+31
 21003 8ce8 98A1      		ldd r25,Y+32
 21004 8cea 865F      		subi r24,-10
 21005 8cec 9C4F      		sbci r25,-4
 21006 8cee FC01      		movw r30,r24
 21007 8cf0 8081      		ld r24,Z
 21008 8cf2 9181      		ldd r25,Z+1
 21009 8cf4 A281      		ldd r26,Z+2
 21010 8cf6 B381      		ldd r27,Z+3
 21011 8cf8 B058      		subi r27,0x80
 21012               	.L870:
 21013               		.loc 2 1879 0 discriminator 10
 21014 8cfa 8AA7      		std Y+42,r24
 21015 8cfc 9BA7      		std Y+43,r25
 21016 8cfe ACA7      		std Y+44,r26
 21017 8d00 BDA7      		std Y+45,r27
1880:lp_solve_5.5/lp_presolve.c **** 
1881:lp_solve_5.5/lp_presolve.c ****    /* Cumulate effective upper row bound (only bother with non-finite bound) */
1882:lp_solve_5.5/lp_presolve.c ****     if(isneg) {
 21018               		.loc 2 1882 0 is_stmt 1 discriminator 10
 21019 8d02 8FA1      		ldd r24,Y+39
 21020 8d04 8823      		tst r24
 21021 8d06 01F4      		brne .+2
 21022 8d08 00C0      		rjmp .L874
1883:lp_solve_5.5/lp_presolve.c ****       if((ps->negupper[i] < lp->infinite) && lofinite) {
 21023               		.loc 2 1883 0
 21024 8d0a 8BA1      		ldd r24,Y+35
 21025 8d0c 9CA1      		ldd r25,Y+36
 21026 8d0e FC01      		movw r30,r24
 21027 8d10 2489      		ldd r18,Z+20
 21028 8d12 3589      		ldd r19,Z+21
 21029 8d14 8981      		ldd r24,Y+1
 21030 8d16 9A81      		ldd r25,Y+2
 21031 8d18 880F      		lsl r24
 21032 8d1a 991F      		rol r25
 21033 8d1c 880F      		lsl r24
 21034 8d1e 991F      		rol r25
 21035 8d20 820F      		add r24,r18
 21036 8d22 931F      		adc r25,r19
 21037 8d24 FC01      		movw r30,r24
 21038 8d26 8081      		ld r24,Z
 21039 8d28 9181      		ldd r25,Z+1
 21040 8d2a A281      		ldd r26,Z+2
 21041 8d2c B381      		ldd r27,Z+3
 21042 8d2e 2F8D      		ldd r18,Y+31
 21043 8d30 38A1      		ldd r19,Y+32
 21044 8d32 265F      		subi r18,-10
 21045 8d34 3C4F      		sbci r19,-4
 21046 8d36 F901      		movw r30,r18
 21047 8d38 2081      		ld r18,Z
 21048 8d3a 3181      		ldd r19,Z+1
 21049 8d3c 4281      		ldd r20,Z+2
 21050 8d3e 5381      		ldd r21,Z+3
 21051 8d40 BC01      		movw r22,r24
 21052 8d42 CD01      		movw r24,r26
 21053 8d44 0E94 0000 		call __ltsf2
 21054 8d48 8823      		tst r24
 21055 8d4a 04F0      		brlt .+2
 21056 8d4c 00C0      		rjmp .L875
 21057               		.loc 2 1883 0 is_stmt 0 discriminator 1
 21058 8d4e 89A5      		ldd r24,Y+41
 21059 8d50 8823      		tst r24
 21060 8d52 01F4      		brne .+2
 21061 8d54 00C0      		rjmp .L875
1884:lp_solve_5.5/lp_presolve.c ****         ps->negupper[i] += mult*lovalue;
 21062               		.loc 2 1884 0 is_stmt 1
 21063 8d56 8BA1      		ldd r24,Y+35
 21064 8d58 9CA1      		ldd r25,Y+36
 21065 8d5a FC01      		movw r30,r24
 21066 8d5c 2489      		ldd r18,Z+20
 21067 8d5e 3589      		ldd r19,Z+21
 21068 8d60 8981      		ldd r24,Y+1
 21069 8d62 9A81      		ldd r25,Y+2
 21070 8d64 880F      		lsl r24
 21071 8d66 991F      		rol r25
 21072 8d68 880F      		lsl r24
 21073 8d6a 991F      		rol r25
 21074 8d6c 8901      		movw r16,r18
 21075 8d6e 080F      		add r16,r24
 21076 8d70 191F      		adc r17,r25
 21077 8d72 8BA1      		ldd r24,Y+35
 21078 8d74 9CA1      		ldd r25,Y+36
 21079 8d76 FC01      		movw r30,r24
 21080 8d78 2489      		ldd r18,Z+20
 21081 8d7a 3589      		ldd r19,Z+21
 21082 8d7c 8981      		ldd r24,Y+1
 21083 8d7e 9A81      		ldd r25,Y+2
 21084 8d80 880F      		lsl r24
 21085 8d82 991F      		rol r25
 21086 8d84 880F      		lsl r24
 21087 8d86 991F      		rol r25
 21088 8d88 820F      		add r24,r18
 21089 8d8a 931F      		adc r25,r19
 21090 8d8c FC01      		movw r30,r24
 21091 8d8e C080      		ld r12,Z
 21092 8d90 D180      		ldd r13,Z+1
 21093 8d92 E280      		ldd r14,Z+2
 21094 8d94 F380      		ldd r15,Z+3
 21095 8d96 8AA5      		ldd r24,Y+42
 21096 8d98 9BA5      		ldd r25,Y+43
 21097 8d9a ACA5      		ldd r26,Y+44
 21098 8d9c BDA5      		ldd r27,Y+45
 21099 8d9e 2F89      		ldd r18,Y+23
 21100 8da0 388D      		ldd r19,Y+24
 21101 8da2 498D      		ldd r20,Y+25
 21102 8da4 5A8D      		ldd r21,Y+26
 21103 8da6 BC01      		movw r22,r24
 21104 8da8 CD01      		movw r24,r26
 21105 8daa 0E94 0000 		call __mulsf3
 21106 8dae DC01      		movw r26,r24
 21107 8db0 CB01      		movw r24,r22
 21108 8db2 9C01      		movw r18,r24
 21109 8db4 AD01      		movw r20,r26
 21110 8db6 C701      		movw r24,r14
 21111 8db8 B601      		movw r22,r12
 21112 8dba 0E94 0000 		call __addsf3
 21113 8dbe DC01      		movw r26,r24
 21114 8dc0 CB01      		movw r24,r22
 21115 8dc2 F801      		movw r30,r16
 21116 8dc4 8083      		st Z,r24
 21117 8dc6 9183      		std Z+1,r25
 21118 8dc8 A283      		std Z+2,r26
 21119 8dca B383      		std Z+3,r27
1885:lp_solve_5.5/lp_presolve.c ****         ps->negupper[i] = presolve_roundrhs(lp, ps->negupper[i], FALSE);
 21120               		.loc 2 1885 0
 21121 8dcc 8BA1      		ldd r24,Y+35
 21122 8dce 9CA1      		ldd r25,Y+36
 21123 8dd0 FC01      		movw r30,r24
 21124 8dd2 2489      		ldd r18,Z+20
 21125 8dd4 3589      		ldd r19,Z+21
 21126 8dd6 8981      		ldd r24,Y+1
 21127 8dd8 9A81      		ldd r25,Y+2
 21128 8dda 880F      		lsl r24
 21129 8ddc 991F      		rol r25
 21130 8dde 880F      		lsl r24
 21131 8de0 991F      		rol r25
 21132 8de2 8901      		movw r16,r18
 21133 8de4 080F      		add r16,r24
 21134 8de6 191F      		adc r17,r25
 21135 8de8 8BA1      		ldd r24,Y+35
 21136 8dea 9CA1      		ldd r25,Y+36
 21137 8dec FC01      		movw r30,r24
 21138 8dee 2489      		ldd r18,Z+20
 21139 8df0 3589      		ldd r19,Z+21
 21140 8df2 8981      		ldd r24,Y+1
 21141 8df4 9A81      		ldd r25,Y+2
 21142 8df6 880F      		lsl r24
 21143 8df8 991F      		rol r25
 21144 8dfa 880F      		lsl r24
 21145 8dfc 991F      		rol r25
 21146 8dfe 820F      		add r24,r18
 21147 8e00 931F      		adc r25,r19
 21148 8e02 FC01      		movw r30,r24
 21149 8e04 8081      		ld r24,Z
 21150 8e06 9181      		ldd r25,Z+1
 21151 8e08 A281      		ldd r26,Z+2
 21152 8e0a B381      		ldd r27,Z+3
 21153 8e0c EF8D      		ldd r30,Y+31
 21154 8e0e F8A1      		ldd r31,Y+32
 21155 8e10 20E0      		ldi r18,0
 21156 8e12 AC01      		movw r20,r24
 21157 8e14 BD01      		movw r22,r26
 21158 8e16 CF01      		movw r24,r30
 21159 8e18 0E94 0000 		call presolve_roundrhs
 21160 8e1c DC01      		movw r26,r24
 21161 8e1e CB01      		movw r24,r22
 21162 8e20 F801      		movw r30,r16
 21163 8e22 8083      		st Z,r24
 21164 8e24 9183      		std Z+1,r25
 21165 8e26 A283      		std Z+2,r26
 21166 8e28 B383      		std Z+3,r27
 21167 8e2a 00C0      		rjmp .L879
 21168               	.L875:
1886:lp_solve_5.5/lp_presolve.c ****       }
1887:lp_solve_5.5/lp_presolve.c ****       else if(remove && !lofinite)
 21169               		.loc 2 1887 0
 21170 8e2c 8AAD      		ldd r24,Y+58
 21171 8e2e 8823      		tst r24
 21172 8e30 01F0      		breq .L878
 21173               		.loc 2 1887 0 is_stmt 0 discriminator 1
 21174 8e32 89A5      		ldd r24,Y+41
 21175 8e34 8823      		tst r24
 21176 8e36 01F4      		brne .L878
1888:lp_solve_5.5/lp_presolve.c ****         doupdate = TRUE;
 21177               		.loc 2 1888 0 is_stmt 1
 21178 8e38 81E0      		ldi r24,lo8(1)
 21179 8e3a 8D83      		std Y+5,r24
 21180 8e3c 00C0      		rjmp .L879
 21181               	.L878:
1889:lp_solve_5.5/lp_presolve.c ****       else
1890:lp_solve_5.5/lp_presolve.c ****         ps->negupper[i] = lp->infinite;
 21182               		.loc 2 1890 0
 21183 8e3e 8BA1      		ldd r24,Y+35
 21184 8e40 9CA1      		ldd r25,Y+36
 21185 8e42 FC01      		movw r30,r24
 21186 8e44 2489      		ldd r18,Z+20
 21187 8e46 3589      		ldd r19,Z+21
 21188 8e48 8981      		ldd r24,Y+1
 21189 8e4a 9A81      		ldd r25,Y+2
 21190 8e4c 880F      		lsl r24
 21191 8e4e 991F      		rol r25
 21192 8e50 880F      		lsl r24
 21193 8e52 991F      		rol r25
 21194 8e54 280F      		add r18,r24
 21195 8e56 391F      		adc r19,r25
 21196 8e58 8F8D      		ldd r24,Y+31
 21197 8e5a 98A1      		ldd r25,Y+32
 21198 8e5c 865F      		subi r24,-10
 21199 8e5e 9C4F      		sbci r25,-4
 21200 8e60 FC01      		movw r30,r24
 21201 8e62 8081      		ld r24,Z
 21202 8e64 9181      		ldd r25,Z+1
 21203 8e66 A281      		ldd r26,Z+2
 21204 8e68 B381      		ldd r27,Z+3
 21205 8e6a F901      		movw r30,r18
 21206 8e6c 8083      		st Z,r24
 21207 8e6e 9183      		std Z+1,r25
 21208 8e70 A283      		std Z+2,r26
 21209 8e72 B383      		std Z+3,r27
 21210 8e74 00C0      		rjmp .L879
 21211               	.L874:
1891:lp_solve_5.5/lp_presolve.c ****     }
1892:lp_solve_5.5/lp_presolve.c ****     else {
1893:lp_solve_5.5/lp_presolve.c ****       if((ps->pluupper[i] < lp->infinite) && upfinite) {
 21212               		.loc 2 1893 0
 21213 8e76 8BA1      		ldd r24,Y+35
 21214 8e78 9CA1      		ldd r25,Y+36
 21215 8e7a FC01      		movw r30,r24
 21216 8e7c 2289      		ldd r18,Z+18
 21217 8e7e 3389      		ldd r19,Z+19
 21218 8e80 8981      		ldd r24,Y+1
 21219 8e82 9A81      		ldd r25,Y+2
 21220 8e84 880F      		lsl r24
 21221 8e86 991F      		rol r25
 21222 8e88 880F      		lsl r24
 21223 8e8a 991F      		rol r25
 21224 8e8c 820F      		add r24,r18
 21225 8e8e 931F      		adc r25,r19
 21226 8e90 FC01      		movw r30,r24
 21227 8e92 8081      		ld r24,Z
 21228 8e94 9181      		ldd r25,Z+1
 21229 8e96 A281      		ldd r26,Z+2
 21230 8e98 B381      		ldd r27,Z+3
 21231 8e9a 2F8D      		ldd r18,Y+31
 21232 8e9c 38A1      		ldd r19,Y+32
 21233 8e9e 265F      		subi r18,-10
 21234 8ea0 3C4F      		sbci r19,-4
 21235 8ea2 F901      		movw r30,r18
 21236 8ea4 2081      		ld r18,Z
 21237 8ea6 3181      		ldd r19,Z+1
 21238 8ea8 4281      		ldd r20,Z+2
 21239 8eaa 5381      		ldd r21,Z+3
 21240 8eac BC01      		movw r22,r24
 21241 8eae CD01      		movw r24,r26
 21242 8eb0 0E94 0000 		call __ltsf2
 21243 8eb4 8823      		tst r24
 21244 8eb6 04F0      		brlt .+2
 21245 8eb8 00C0      		rjmp .L880
 21246               		.loc 2 1893 0 is_stmt 0 discriminator 1
 21247 8eba 88A5      		ldd r24,Y+40
 21248 8ebc 8823      		tst r24
 21249 8ebe 01F4      		brne .+2
 21250 8ec0 00C0      		rjmp .L880
1894:lp_solve_5.5/lp_presolve.c ****         ps->pluupper[i] += mult*upvalue;
 21251               		.loc 2 1894 0 is_stmt 1
 21252 8ec2 8BA1      		ldd r24,Y+35
 21253 8ec4 9CA1      		ldd r25,Y+36
 21254 8ec6 FC01      		movw r30,r24
 21255 8ec8 2289      		ldd r18,Z+18
 21256 8eca 3389      		ldd r19,Z+19
 21257 8ecc 8981      		ldd r24,Y+1
 21258 8ece 9A81      		ldd r25,Y+2
 21259 8ed0 880F      		lsl r24
 21260 8ed2 991F      		rol r25
 21261 8ed4 880F      		lsl r24
 21262 8ed6 991F      		rol r25
 21263 8ed8 8901      		movw r16,r18
 21264 8eda 080F      		add r16,r24
 21265 8edc 191F      		adc r17,r25
 21266 8ede 8BA1      		ldd r24,Y+35
 21267 8ee0 9CA1      		ldd r25,Y+36
 21268 8ee2 FC01      		movw r30,r24
 21269 8ee4 2289      		ldd r18,Z+18
 21270 8ee6 3389      		ldd r19,Z+19
 21271 8ee8 8981      		ldd r24,Y+1
 21272 8eea 9A81      		ldd r25,Y+2
 21273 8eec 880F      		lsl r24
 21274 8eee 991F      		rol r25
 21275 8ef0 880F      		lsl r24
 21276 8ef2 991F      		rol r25
 21277 8ef4 820F      		add r24,r18
 21278 8ef6 931F      		adc r25,r19
 21279 8ef8 FC01      		movw r30,r24
 21280 8efa C080      		ld r12,Z
 21281 8efc D180      		ldd r13,Z+1
 21282 8efe E280      		ldd r14,Z+2
 21283 8f00 F380      		ldd r15,Z+3
 21284 8f02 8EA5      		ldd r24,Y+46
 21285 8f04 9FA5      		ldd r25,Y+47
 21286 8f06 A8A9      		ldd r26,Y+48
 21287 8f08 B9A9      		ldd r27,Y+49
 21288 8f0a 2F89      		ldd r18,Y+23
 21289 8f0c 388D      		ldd r19,Y+24
 21290 8f0e 498D      		ldd r20,Y+25
 21291 8f10 5A8D      		ldd r21,Y+26
 21292 8f12 BC01      		movw r22,r24
 21293 8f14 CD01      		movw r24,r26
 21294 8f16 0E94 0000 		call __mulsf3
 21295 8f1a DC01      		movw r26,r24
 21296 8f1c CB01      		movw r24,r22
 21297 8f1e 9C01      		movw r18,r24
 21298 8f20 AD01      		movw r20,r26
 21299 8f22 C701      		movw r24,r14
 21300 8f24 B601      		movw r22,r12
 21301 8f26 0E94 0000 		call __addsf3
 21302 8f2a DC01      		movw r26,r24
 21303 8f2c CB01      		movw r24,r22
 21304 8f2e F801      		movw r30,r16
 21305 8f30 8083      		st Z,r24
 21306 8f32 9183      		std Z+1,r25
 21307 8f34 A283      		std Z+2,r26
 21308 8f36 B383      		std Z+3,r27
1895:lp_solve_5.5/lp_presolve.c ****         ps->pluupper[i] = presolve_roundrhs(lp, ps->pluupper[i], FALSE);
 21309               		.loc 2 1895 0
 21310 8f38 8BA1      		ldd r24,Y+35
 21311 8f3a 9CA1      		ldd r25,Y+36
 21312 8f3c FC01      		movw r30,r24
 21313 8f3e 2289      		ldd r18,Z+18
 21314 8f40 3389      		ldd r19,Z+19
 21315 8f42 8981      		ldd r24,Y+1
 21316 8f44 9A81      		ldd r25,Y+2
 21317 8f46 880F      		lsl r24
 21318 8f48 991F      		rol r25
 21319 8f4a 880F      		lsl r24
 21320 8f4c 991F      		rol r25
 21321 8f4e 8901      		movw r16,r18
 21322 8f50 080F      		add r16,r24
 21323 8f52 191F      		adc r17,r25
 21324 8f54 8BA1      		ldd r24,Y+35
 21325 8f56 9CA1      		ldd r25,Y+36
 21326 8f58 FC01      		movw r30,r24
 21327 8f5a 2289      		ldd r18,Z+18
 21328 8f5c 3389      		ldd r19,Z+19
 21329 8f5e 8981      		ldd r24,Y+1
 21330 8f60 9A81      		ldd r25,Y+2
 21331 8f62 880F      		lsl r24
 21332 8f64 991F      		rol r25
 21333 8f66 880F      		lsl r24
 21334 8f68 991F      		rol r25
 21335 8f6a 820F      		add r24,r18
 21336 8f6c 931F      		adc r25,r19
 21337 8f6e FC01      		movw r30,r24
 21338 8f70 8081      		ld r24,Z
 21339 8f72 9181      		ldd r25,Z+1
 21340 8f74 A281      		ldd r26,Z+2
 21341 8f76 B381      		ldd r27,Z+3
 21342 8f78 EF8D      		ldd r30,Y+31
 21343 8f7a F8A1      		ldd r31,Y+32
 21344 8f7c 20E0      		ldi r18,0
 21345 8f7e AC01      		movw r20,r24
 21346 8f80 BD01      		movw r22,r26
 21347 8f82 CF01      		movw r24,r30
 21348 8f84 0E94 0000 		call presolve_roundrhs
 21349 8f88 DC01      		movw r26,r24
 21350 8f8a CB01      		movw r24,r22
 21351 8f8c F801      		movw r30,r16
 21352 8f8e 8083      		st Z,r24
 21353 8f90 9183      		std Z+1,r25
 21354 8f92 A283      		std Z+2,r26
 21355 8f94 B383      		std Z+3,r27
 21356 8f96 00C0      		rjmp .L879
 21357               	.L880:
1896:lp_solve_5.5/lp_presolve.c ****       }
1897:lp_solve_5.5/lp_presolve.c ****       else if(remove && !upfinite)
 21358               		.loc 2 1897 0
 21359 8f98 8AAD      		ldd r24,Y+58
 21360 8f9a 8823      		tst r24
 21361 8f9c 01F0      		breq .L882
 21362               		.loc 2 1897 0 is_stmt 0 discriminator 1
 21363 8f9e 88A5      		ldd r24,Y+40
 21364 8fa0 8823      		tst r24
 21365 8fa2 01F4      		brne .L882
1898:lp_solve_5.5/lp_presolve.c ****         doupdate = TRUE;
 21366               		.loc 2 1898 0 is_stmt 1
 21367 8fa4 81E0      		ldi r24,lo8(1)
 21368 8fa6 8D83      		std Y+5,r24
 21369 8fa8 00C0      		rjmp .L879
 21370               	.L882:
1899:lp_solve_5.5/lp_presolve.c ****       else
1900:lp_solve_5.5/lp_presolve.c ****         ps->pluupper[i] = lp->infinite;
 21371               		.loc 2 1900 0
 21372 8faa 8BA1      		ldd r24,Y+35
 21373 8fac 9CA1      		ldd r25,Y+36
 21374 8fae FC01      		movw r30,r24
 21375 8fb0 2289      		ldd r18,Z+18
 21376 8fb2 3389      		ldd r19,Z+19
 21377 8fb4 8981      		ldd r24,Y+1
 21378 8fb6 9A81      		ldd r25,Y+2
 21379 8fb8 880F      		lsl r24
 21380 8fba 991F      		rol r25
 21381 8fbc 880F      		lsl r24
 21382 8fbe 991F      		rol r25
 21383 8fc0 280F      		add r18,r24
 21384 8fc2 391F      		adc r19,r25
 21385 8fc4 8F8D      		ldd r24,Y+31
 21386 8fc6 98A1      		ldd r25,Y+32
 21387 8fc8 865F      		subi r24,-10
 21388 8fca 9C4F      		sbci r25,-4
 21389 8fcc FC01      		movw r30,r24
 21390 8fce 8081      		ld r24,Z
 21391 8fd0 9181      		ldd r25,Z+1
 21392 8fd2 A281      		ldd r26,Z+2
 21393 8fd4 B381      		ldd r27,Z+3
 21394 8fd6 F901      		movw r30,r18
 21395 8fd8 8083      		st Z,r24
 21396 8fda 9183      		std Z+1,r25
 21397 8fdc A283      		std Z+2,r26
 21398 8fde B383      		std Z+3,r27
 21399               	.L879:
1901:lp_solve_5.5/lp_presolve.c ****     }
1902:lp_solve_5.5/lp_presolve.c **** 
1903:lp_solve_5.5/lp_presolve.c ****    /* Cumulate effective lower row bound (only bother with non-finite bound) */
1904:lp_solve_5.5/lp_presolve.c ****     if(isneg) {
 21400               		.loc 2 1904 0
 21401 8fe0 8FA1      		ldd r24,Y+39
 21402 8fe2 8823      		tst r24
 21403 8fe4 01F4      		brne .+2
 21404 8fe6 00C0      		rjmp .L883
1905:lp_solve_5.5/lp_presolve.c ****       if((ps->neglower[i] > -lp->infinite) && upfinite) {
 21405               		.loc 2 1905 0
 21406 8fe8 8BA1      		ldd r24,Y+35
 21407 8fea 9CA1      		ldd r25,Y+36
 21408 8fec FC01      		movw r30,r24
 21409 8fee 2089      		ldd r18,Z+16
 21410 8ff0 3189      		ldd r19,Z+17
 21411 8ff2 8981      		ldd r24,Y+1
 21412 8ff4 9A81      		ldd r25,Y+2
 21413 8ff6 880F      		lsl r24
 21414 8ff8 991F      		rol r25
 21415 8ffa 880F      		lsl r24
 21416 8ffc 991F      		rol r25
 21417 8ffe 820F      		add r24,r18
 21418 9000 931F      		adc r25,r19
 21419 9002 FC01      		movw r30,r24
 21420 9004 E080      		ld r14,Z
 21421 9006 F180      		ldd r15,Z+1
 21422 9008 0281      		ldd r16,Z+2
 21423 900a 1381      		ldd r17,Z+3
 21424 900c 8F8D      		ldd r24,Y+31
 21425 900e 98A1      		ldd r25,Y+32
 21426 9010 865F      		subi r24,-10
 21427 9012 9C4F      		sbci r25,-4
 21428 9014 FC01      		movw r30,r24
 21429 9016 8081      		ld r24,Z
 21430 9018 9181      		ldd r25,Z+1
 21431 901a A281      		ldd r26,Z+2
 21432 901c B381      		ldd r27,Z+3
 21433 901e B058      		subi r27,0x80
 21434 9020 9C01      		movw r18,r24
 21435 9022 AD01      		movw r20,r26
 21436 9024 C801      		movw r24,r16
 21437 9026 B701      		movw r22,r14
 21438 9028 0E94 0000 		call __gtsf2
 21439 902c 1816      		cp __zero_reg__,r24
 21440 902e 04F0      		brlt .+2
 21441 9030 00C0      		rjmp .L884
 21442               		.loc 2 1905 0 is_stmt 0 discriminator 1
 21443 9032 88A5      		ldd r24,Y+40
 21444 9034 8823      		tst r24
 21445 9036 01F4      		brne .+2
 21446 9038 00C0      		rjmp .L884
1906:lp_solve_5.5/lp_presolve.c ****         ps->neglower[i] += mult*upvalue;
 21447               		.loc 2 1906 0 is_stmt 1
 21448 903a 8BA1      		ldd r24,Y+35
 21449 903c 9CA1      		ldd r25,Y+36
 21450 903e FC01      		movw r30,r24
 21451 9040 2089      		ldd r18,Z+16
 21452 9042 3189      		ldd r19,Z+17
 21453 9044 8981      		ldd r24,Y+1
 21454 9046 9A81      		ldd r25,Y+2
 21455 9048 880F      		lsl r24
 21456 904a 991F      		rol r25
 21457 904c 880F      		lsl r24
 21458 904e 991F      		rol r25
 21459 9050 8901      		movw r16,r18
 21460 9052 080F      		add r16,r24
 21461 9054 191F      		adc r17,r25
 21462 9056 8BA1      		ldd r24,Y+35
 21463 9058 9CA1      		ldd r25,Y+36
 21464 905a FC01      		movw r30,r24
 21465 905c 2089      		ldd r18,Z+16
 21466 905e 3189      		ldd r19,Z+17
 21467 9060 8981      		ldd r24,Y+1
 21468 9062 9A81      		ldd r25,Y+2
 21469 9064 880F      		lsl r24
 21470 9066 991F      		rol r25
 21471 9068 880F      		lsl r24
 21472 906a 991F      		rol r25
 21473 906c 820F      		add r24,r18
 21474 906e 931F      		adc r25,r19
 21475 9070 FC01      		movw r30,r24
 21476 9072 C080      		ld r12,Z
 21477 9074 D180      		ldd r13,Z+1
 21478 9076 E280      		ldd r14,Z+2
 21479 9078 F380      		ldd r15,Z+3
 21480 907a 8EA5      		ldd r24,Y+46
 21481 907c 9FA5      		ldd r25,Y+47
 21482 907e A8A9      		ldd r26,Y+48
 21483 9080 B9A9      		ldd r27,Y+49
 21484 9082 2F89      		ldd r18,Y+23
 21485 9084 388D      		ldd r19,Y+24
 21486 9086 498D      		ldd r20,Y+25
 21487 9088 5A8D      		ldd r21,Y+26
 21488 908a BC01      		movw r22,r24
 21489 908c CD01      		movw r24,r26
 21490 908e 0E94 0000 		call __mulsf3
 21491 9092 DC01      		movw r26,r24
 21492 9094 CB01      		movw r24,r22
 21493 9096 9C01      		movw r18,r24
 21494 9098 AD01      		movw r20,r26
 21495 909a C701      		movw r24,r14
 21496 909c B601      		movw r22,r12
 21497 909e 0E94 0000 		call __addsf3
 21498 90a2 DC01      		movw r26,r24
 21499 90a4 CB01      		movw r24,r22
 21500 90a6 F801      		movw r30,r16
 21501 90a8 8083      		st Z,r24
 21502 90aa 9183      		std Z+1,r25
 21503 90ac A283      		std Z+2,r26
 21504 90ae B383      		std Z+3,r27
1907:lp_solve_5.5/lp_presolve.c ****         ps->neglower[i] = presolve_roundrhs(lp, ps->neglower[i], TRUE);
 21505               		.loc 2 1907 0
 21506 90b0 8BA1      		ldd r24,Y+35
 21507 90b2 9CA1      		ldd r25,Y+36
 21508 90b4 FC01      		movw r30,r24
 21509 90b6 2089      		ldd r18,Z+16
 21510 90b8 3189      		ldd r19,Z+17
 21511 90ba 8981      		ldd r24,Y+1
 21512 90bc 9A81      		ldd r25,Y+2
 21513 90be 880F      		lsl r24
 21514 90c0 991F      		rol r25
 21515 90c2 880F      		lsl r24
 21516 90c4 991F      		rol r25
 21517 90c6 8901      		movw r16,r18
 21518 90c8 080F      		add r16,r24
 21519 90ca 191F      		adc r17,r25
 21520 90cc 8BA1      		ldd r24,Y+35
 21521 90ce 9CA1      		ldd r25,Y+36
 21522 90d0 FC01      		movw r30,r24
 21523 90d2 2089      		ldd r18,Z+16
 21524 90d4 3189      		ldd r19,Z+17
 21525 90d6 8981      		ldd r24,Y+1
 21526 90d8 9A81      		ldd r25,Y+2
 21527 90da 880F      		lsl r24
 21528 90dc 991F      		rol r25
 21529 90de 880F      		lsl r24
 21530 90e0 991F      		rol r25
 21531 90e2 820F      		add r24,r18
 21532 90e4 931F      		adc r25,r19
 21533 90e6 FC01      		movw r30,r24
 21534 90e8 8081      		ld r24,Z
 21535 90ea 9181      		ldd r25,Z+1
 21536 90ec A281      		ldd r26,Z+2
 21537 90ee B381      		ldd r27,Z+3
 21538 90f0 EF8D      		ldd r30,Y+31
 21539 90f2 F8A1      		ldd r31,Y+32
 21540 90f4 21E0      		ldi r18,lo8(1)
 21541 90f6 AC01      		movw r20,r24
 21542 90f8 BD01      		movw r22,r26
 21543 90fa CF01      		movw r24,r30
 21544 90fc 0E94 0000 		call presolve_roundrhs
 21545 9100 DC01      		movw r26,r24
 21546 9102 CB01      		movw r24,r22
 21547 9104 F801      		movw r30,r16
 21548 9106 8083      		st Z,r24
 21549 9108 9183      		std Z+1,r25
 21550 910a A283      		std Z+2,r26
 21551 910c B383      		std Z+3,r27
 21552 910e 00C0      		rjmp .L888
 21553               	.L884:
1908:lp_solve_5.5/lp_presolve.c ****       }
1909:lp_solve_5.5/lp_presolve.c ****       else if(remove && !upfinite)
 21554               		.loc 2 1909 0
 21555 9110 8AAD      		ldd r24,Y+58
 21556 9112 8823      		tst r24
 21557 9114 01F0      		breq .L887
 21558               		.loc 2 1909 0 is_stmt 0 discriminator 1
 21559 9116 88A5      		ldd r24,Y+40
 21560 9118 8823      		tst r24
 21561 911a 01F4      		brne .L887
1910:lp_solve_5.5/lp_presolve.c ****         doupdate = TRUE;
 21562               		.loc 2 1910 0 is_stmt 1
 21563 911c 81E0      		ldi r24,lo8(1)
 21564 911e 8D83      		std Y+5,r24
 21565 9120 00C0      		rjmp .L888
 21566               	.L887:
1911:lp_solve_5.5/lp_presolve.c ****       else
1912:lp_solve_5.5/lp_presolve.c ****         ps->neglower[i] = -lp->infinite;
 21567               		.loc 2 1912 0
 21568 9122 8BA1      		ldd r24,Y+35
 21569 9124 9CA1      		ldd r25,Y+36
 21570 9126 FC01      		movw r30,r24
 21571 9128 2089      		ldd r18,Z+16
 21572 912a 3189      		ldd r19,Z+17
 21573 912c 8981      		ldd r24,Y+1
 21574 912e 9A81      		ldd r25,Y+2
 21575 9130 880F      		lsl r24
 21576 9132 991F      		rol r25
 21577 9134 880F      		lsl r24
 21578 9136 991F      		rol r25
 21579 9138 280F      		add r18,r24
 21580 913a 391F      		adc r19,r25
 21581 913c 8F8D      		ldd r24,Y+31
 21582 913e 98A1      		ldd r25,Y+32
 21583 9140 865F      		subi r24,-10
 21584 9142 9C4F      		sbci r25,-4
 21585 9144 FC01      		movw r30,r24
 21586 9146 8081      		ld r24,Z
 21587 9148 9181      		ldd r25,Z+1
 21588 914a A281      		ldd r26,Z+2
 21589 914c B381      		ldd r27,Z+3
 21590 914e B058      		subi r27,0x80
 21591 9150 F901      		movw r30,r18
 21592 9152 8083      		st Z,r24
 21593 9154 9183      		std Z+1,r25
 21594 9156 A283      		std Z+2,r26
 21595 9158 B383      		std Z+3,r27
 21596 915a 00C0      		rjmp .L888
 21597               	.L883:
1913:lp_solve_5.5/lp_presolve.c ****     }
1914:lp_solve_5.5/lp_presolve.c ****     else {
1915:lp_solve_5.5/lp_presolve.c ****       if((ps->plulower[i] > -lp->infinite) && lofinite) {
 21598               		.loc 2 1915 0
 21599 915c 8BA1      		ldd r24,Y+35
 21600 915e 9CA1      		ldd r25,Y+36
 21601 9160 FC01      		movw r30,r24
 21602 9162 2685      		ldd r18,Z+14
 21603 9164 3785      		ldd r19,Z+15
 21604 9166 8981      		ldd r24,Y+1
 21605 9168 9A81      		ldd r25,Y+2
 21606 916a 880F      		lsl r24
 21607 916c 991F      		rol r25
 21608 916e 880F      		lsl r24
 21609 9170 991F      		rol r25
 21610 9172 820F      		add r24,r18
 21611 9174 931F      		adc r25,r19
 21612 9176 FC01      		movw r30,r24
 21613 9178 E080      		ld r14,Z
 21614 917a F180      		ldd r15,Z+1
 21615 917c 0281      		ldd r16,Z+2
 21616 917e 1381      		ldd r17,Z+3
 21617 9180 8F8D      		ldd r24,Y+31
 21618 9182 98A1      		ldd r25,Y+32
 21619 9184 865F      		subi r24,-10
 21620 9186 9C4F      		sbci r25,-4
 21621 9188 FC01      		movw r30,r24
 21622 918a 8081      		ld r24,Z
 21623 918c 9181      		ldd r25,Z+1
 21624 918e A281      		ldd r26,Z+2
 21625 9190 B381      		ldd r27,Z+3
 21626 9192 B058      		subi r27,0x80
 21627 9194 9C01      		movw r18,r24
 21628 9196 AD01      		movw r20,r26
 21629 9198 C801      		movw r24,r16
 21630 919a B701      		movw r22,r14
 21631 919c 0E94 0000 		call __gtsf2
 21632 91a0 1816      		cp __zero_reg__,r24
 21633 91a2 04F0      		brlt .+2
 21634 91a4 00C0      		rjmp .L889
 21635               		.loc 2 1915 0 is_stmt 0 discriminator 1
 21636 91a6 89A5      		ldd r24,Y+41
 21637 91a8 8823      		tst r24
 21638 91aa 01F4      		brne .+2
 21639 91ac 00C0      		rjmp .L889
1916:lp_solve_5.5/lp_presolve.c ****         ps->plulower[i] += mult*lovalue;
 21640               		.loc 2 1916 0 is_stmt 1
 21641 91ae 8BA1      		ldd r24,Y+35
 21642 91b0 9CA1      		ldd r25,Y+36
 21643 91b2 FC01      		movw r30,r24
 21644 91b4 2685      		ldd r18,Z+14
 21645 91b6 3785      		ldd r19,Z+15
 21646 91b8 8981      		ldd r24,Y+1
 21647 91ba 9A81      		ldd r25,Y+2
 21648 91bc 880F      		lsl r24
 21649 91be 991F      		rol r25
 21650 91c0 880F      		lsl r24
 21651 91c2 991F      		rol r25
 21652 91c4 8901      		movw r16,r18
 21653 91c6 080F      		add r16,r24
 21654 91c8 191F      		adc r17,r25
 21655 91ca 8BA1      		ldd r24,Y+35
 21656 91cc 9CA1      		ldd r25,Y+36
 21657 91ce FC01      		movw r30,r24
 21658 91d0 2685      		ldd r18,Z+14
 21659 91d2 3785      		ldd r19,Z+15
 21660 91d4 8981      		ldd r24,Y+1
 21661 91d6 9A81      		ldd r25,Y+2
 21662 91d8 880F      		lsl r24
 21663 91da 991F      		rol r25
 21664 91dc 880F      		lsl r24
 21665 91de 991F      		rol r25
 21666 91e0 820F      		add r24,r18
 21667 91e2 931F      		adc r25,r19
 21668 91e4 FC01      		movw r30,r24
 21669 91e6 C080      		ld r12,Z
 21670 91e8 D180      		ldd r13,Z+1
 21671 91ea E280      		ldd r14,Z+2
 21672 91ec F380      		ldd r15,Z+3
 21673 91ee 8AA5      		ldd r24,Y+42
 21674 91f0 9BA5      		ldd r25,Y+43
 21675 91f2 ACA5      		ldd r26,Y+44
 21676 91f4 BDA5      		ldd r27,Y+45
 21677 91f6 2F89      		ldd r18,Y+23
 21678 91f8 388D      		ldd r19,Y+24
 21679 91fa 498D      		ldd r20,Y+25
 21680 91fc 5A8D      		ldd r21,Y+26
 21681 91fe BC01      		movw r22,r24
 21682 9200 CD01      		movw r24,r26
 21683 9202 0E94 0000 		call __mulsf3
 21684 9206 DC01      		movw r26,r24
 21685 9208 CB01      		movw r24,r22
 21686 920a 9C01      		movw r18,r24
 21687 920c AD01      		movw r20,r26
 21688 920e C701      		movw r24,r14
 21689 9210 B601      		movw r22,r12
 21690 9212 0E94 0000 		call __addsf3
 21691 9216 DC01      		movw r26,r24
 21692 9218 CB01      		movw r24,r22
 21693 921a F801      		movw r30,r16
 21694 921c 8083      		st Z,r24
 21695 921e 9183      		std Z+1,r25
 21696 9220 A283      		std Z+2,r26
 21697 9222 B383      		std Z+3,r27
1917:lp_solve_5.5/lp_presolve.c ****         ps->plulower[i] = presolve_roundrhs(lp, ps->plulower[i], TRUE);
 21698               		.loc 2 1917 0
 21699 9224 8BA1      		ldd r24,Y+35
 21700 9226 9CA1      		ldd r25,Y+36
 21701 9228 FC01      		movw r30,r24
 21702 922a 2685      		ldd r18,Z+14
 21703 922c 3785      		ldd r19,Z+15
 21704 922e 8981      		ldd r24,Y+1
 21705 9230 9A81      		ldd r25,Y+2
 21706 9232 880F      		lsl r24
 21707 9234 991F      		rol r25
 21708 9236 880F      		lsl r24
 21709 9238 991F      		rol r25
 21710 923a 8901      		movw r16,r18
 21711 923c 080F      		add r16,r24
 21712 923e 191F      		adc r17,r25
 21713 9240 8BA1      		ldd r24,Y+35
 21714 9242 9CA1      		ldd r25,Y+36
 21715 9244 FC01      		movw r30,r24
 21716 9246 2685      		ldd r18,Z+14
 21717 9248 3785      		ldd r19,Z+15
 21718 924a 8981      		ldd r24,Y+1
 21719 924c 9A81      		ldd r25,Y+2
 21720 924e 880F      		lsl r24
 21721 9250 991F      		rol r25
 21722 9252 880F      		lsl r24
 21723 9254 991F      		rol r25
 21724 9256 820F      		add r24,r18
 21725 9258 931F      		adc r25,r19
 21726 925a FC01      		movw r30,r24
 21727 925c 8081      		ld r24,Z
 21728 925e 9181      		ldd r25,Z+1
 21729 9260 A281      		ldd r26,Z+2
 21730 9262 B381      		ldd r27,Z+3
 21731 9264 EF8D      		ldd r30,Y+31
 21732 9266 F8A1      		ldd r31,Y+32
 21733 9268 21E0      		ldi r18,lo8(1)
 21734 926a AC01      		movw r20,r24
 21735 926c BD01      		movw r22,r26
 21736 926e CF01      		movw r24,r30
 21737 9270 0E94 0000 		call presolve_roundrhs
 21738 9274 DC01      		movw r26,r24
 21739 9276 CB01      		movw r24,r22
 21740 9278 F801      		movw r30,r16
 21741 927a 8083      		st Z,r24
 21742 927c 9183      		std Z+1,r25
 21743 927e A283      		std Z+2,r26
 21744 9280 B383      		std Z+3,r27
 21745 9282 00C0      		rjmp .L888
 21746               	.L889:
1918:lp_solve_5.5/lp_presolve.c ****       }
1919:lp_solve_5.5/lp_presolve.c ****       else if(remove && !lofinite)
 21747               		.loc 2 1919 0
 21748 9284 8AAD      		ldd r24,Y+58
 21749 9286 8823      		tst r24
 21750 9288 01F0      		breq .L891
 21751               		.loc 2 1919 0 is_stmt 0 discriminator 1
 21752 928a 89A5      		ldd r24,Y+41
 21753 928c 8823      		tst r24
 21754 928e 01F4      		brne .L891
1920:lp_solve_5.5/lp_presolve.c ****         doupdate = TRUE;
 21755               		.loc 2 1920 0 is_stmt 1
 21756 9290 81E0      		ldi r24,lo8(1)
 21757 9292 8D83      		std Y+5,r24
 21758 9294 00C0      		rjmp .L888
 21759               	.L891:
1921:lp_solve_5.5/lp_presolve.c ****       else
1922:lp_solve_5.5/lp_presolve.c ****         ps->plulower[i] = -lp->infinite;
 21760               		.loc 2 1922 0
 21761 9296 8BA1      		ldd r24,Y+35
 21762 9298 9CA1      		ldd r25,Y+36
 21763 929a FC01      		movw r30,r24
 21764 929c 2685      		ldd r18,Z+14
 21765 929e 3785      		ldd r19,Z+15
 21766 92a0 8981      		ldd r24,Y+1
 21767 92a2 9A81      		ldd r25,Y+2
 21768 92a4 880F      		lsl r24
 21769 92a6 991F      		rol r25
 21770 92a8 880F      		lsl r24
 21771 92aa 991F      		rol r25
 21772 92ac 280F      		add r18,r24
 21773 92ae 391F      		adc r19,r25
 21774 92b0 8F8D      		ldd r24,Y+31
 21775 92b2 98A1      		ldd r25,Y+32
 21776 92b4 865F      		subi r24,-10
 21777 92b6 9C4F      		sbci r25,-4
 21778 92b8 FC01      		movw r30,r24
 21779 92ba 8081      		ld r24,Z
 21780 92bc 9181      		ldd r25,Z+1
 21781 92be A281      		ldd r26,Z+2
 21782 92c0 B381      		ldd r27,Z+3
 21783 92c2 B058      		subi r27,0x80
 21784 92c4 F901      		movw r30,r18
 21785 92c6 8083      		st Z,r24
 21786 92c8 9183      		std Z+1,r25
 21787 92ca A283      		std Z+2,r26
 21788 92cc B383      		std Z+3,r27
 21789               	.L888:
1923:lp_solve_5.5/lp_presolve.c ****     }
1924:lp_solve_5.5/lp_presolve.c **** 
1925:lp_solve_5.5/lp_presolve.c ****    /* Validate consistency of eliminated singleton */
1926:lp_solve_5.5/lp_presolve.c ****     if(remove && ((i == 0) || (ps->next[i][0] == 1)) && !psdata->forceupdate) {
 21790               		.loc 2 1926 0
 21791 92ce 8AAD      		ldd r24,Y+58
 21792 92d0 8823      		tst r24
 21793 92d2 01F4      		brne .+2
 21794 92d4 00C0      		rjmp .L847
 21795               		.loc 2 1926 0 is_stmt 0 discriminator 1
 21796 92d6 8981      		ldd r24,Y+1
 21797 92d8 9A81      		ldd r25,Y+2
 21798 92da 892B      		or r24,r25
 21799 92dc 01F0      		breq .L892
 21800               		.loc 2 1926 0 discriminator 3
 21801 92de 8BA1      		ldd r24,Y+35
 21802 92e0 9CA1      		ldd r25,Y+36
 21803 92e2 FC01      		movw r30,r24
 21804 92e4 2281      		ldd r18,Z+2
 21805 92e6 3381      		ldd r19,Z+3
 21806 92e8 8981      		ldd r24,Y+1
 21807 92ea 9A81      		ldd r25,Y+2
 21808 92ec 880F      		lsl r24
 21809 92ee 991F      		rol r25
 21810 92f0 820F      		add r24,r18
 21811 92f2 931F      		adc r25,r19
 21812 92f4 FC01      		movw r30,r24
 21813 92f6 8081      		ld r24,Z
 21814 92f8 9181      		ldd r25,Z+1
 21815 92fa FC01      		movw r30,r24
 21816 92fc 8081      		ld r24,Z
 21817 92fe 9181      		ldd r25,Z+1
 21818 9300 0197      		sbiw r24,1
 21819 9302 01F0      		breq .+2
 21820 9304 00C0      		rjmp .L847
 21821               	.L892:
 21822               		.loc 2 1926 0 discriminator 4
 21823 9306 8AA9      		ldd r24,Y+50
 21824 9308 9BA9      		ldd r25,Y+51
 21825 930a FC01      		movw r30,r24
 21826 930c 84A1      		ldd r24,Z+36
 21827 930e 8823      		tst r24
 21828 9310 01F0      		breq .+2
 21829 9312 00C0      		rjmp .L847
1927:lp_solve_5.5/lp_presolve.c ****       if(i == 0) {
 21830               		.loc 2 1927 0 is_stmt 1
 21831 9314 8981      		ldd r24,Y+1
 21832 9316 9A81      		ldd r25,Y+2
 21833 9318 892B      		or r24,r25
 21834 931a 01F0      		breq .+2
 21835 931c 00C0      		rjmp .L893
1928:lp_solve_5.5/lp_presolve.c ****         lovalue = get_rh_lower(lp, i);
 21836               		.loc 2 1928 0
 21837 931e 2981      		ldd r18,Y+1
 21838 9320 3A81      		ldd r19,Y+2
 21839 9322 8F8D      		ldd r24,Y+31
 21840 9324 98A1      		ldd r25,Y+32
 21841 9326 B901      		movw r22,r18
 21842 9328 0E94 0000 		call get_rh_lower
 21843 932c DC01      		movw r26,r24
 21844 932e CB01      		movw r24,r22
 21845 9330 8AA7      		std Y+42,r24
 21846 9332 9BA7      		std Y+43,r25
 21847 9334 ACA7      		std Y+44,r26
 21848 9336 BDA7      		std Y+45,r27
1929:lp_solve_5.5/lp_presolve.c ****         upvalue = get_rh_upper(lp, i);
 21849               		.loc 2 1929 0
 21850 9338 2981      		ldd r18,Y+1
 21851 933a 3A81      		ldd r19,Y+2
 21852 933c 8F8D      		ldd r24,Y+31
 21853 933e 98A1      		ldd r25,Y+32
 21854 9340 B901      		movw r22,r18
 21855 9342 0E94 0000 		call get_rh_upper
 21856 9346 DC01      		movw r26,r24
 21857 9348 CB01      		movw r24,r22
 21858 934a 8EA7      		std Y+46,r24
 21859 934c 9FA7      		std Y+47,r25
 21860 934e A8AB      		std Y+48,r26
 21861 9350 B9AB      		std Y+49,r27
1930:lp_solve_5.5/lp_presolve.c ****         report(lp, DETAILED, "presolve_colfix: Objective determined by presolve as %18g\n",
1931:lp_solve_5.5/lp_presolve.c ****                              (is_maxim(lp) ? upvalue : lovalue));
 21862               		.loc 2 1931 0
 21863 9352 8F8D      		ldd r24,Y+31
 21864 9354 98A1      		ldd r25,Y+32
 21865 9356 0E94 0000 		call is_maxim
1930:lp_solve_5.5/lp_presolve.c ****         report(lp, DETAILED, "presolve_colfix: Objective determined by presolve as %18g\n",
 21866               		.loc 2 1930 0
 21867 935a 8823      		tst r24
 21868 935c 01F0      		breq .L894
1930:lp_solve_5.5/lp_presolve.c ****         report(lp, DETAILED, "presolve_colfix: Objective determined by presolve as %18g\n",
 21869               		.loc 2 1930 0 is_stmt 0 discriminator 1
 21870 935e 8EA5      		ldd r24,Y+46
 21871 9360 9FA5      		ldd r25,Y+47
 21872 9362 A8A9      		ldd r26,Y+48
 21873 9364 B9A9      		ldd r27,Y+49
 21874 9366 00C0      		rjmp .L895
 21875               	.L894:
1930:lp_solve_5.5/lp_presolve.c ****         report(lp, DETAILED, "presolve_colfix: Objective determined by presolve as %18g\n",
 21876               		.loc 2 1930 0 discriminator 2
 21877 9368 8AA5      		ldd r24,Y+42
 21878 936a 9BA5      		ldd r25,Y+43
 21879 936c ACA5      		ldd r26,Y+44
 21880 936e BDA5      		ldd r27,Y+45
 21881               	.L895:
1930:lp_solve_5.5/lp_presolve.c ****         report(lp, DETAILED, "presolve_colfix: Objective determined by presolve as %18g\n",
 21882               		.loc 2 1930 0 discriminator 4
 21883 9370 2B2F      		mov r18,r27
 21884 9372 2F93      		push r18
 21885 9374 2A2F      		mov r18,r26
 21886 9376 2F93      		push r18
 21887 9378 292F      		mov r18,r25
 21888 937a 2F93      		push r18
 21889 937c 8F93      		push r24
 21890 937e 80E0      		ldi r24,lo8(.LC28)
 21891 9380 90E0      		ldi r25,hi8(.LC28)
 21892 9382 892F      		mov r24,r25
 21893 9384 8F93      		push r24
 21894 9386 80E0      		ldi r24,lo8(.LC28)
 21895 9388 90E0      		ldi r25,hi8(.LC28)
 21896 938a 8F93      		push r24
 21897 938c 1F92      		push __zero_reg__
 21898 938e 85E0      		ldi r24,lo8(5)
 21899 9390 8F93      		push r24
 21900 9392 88A1      		ldd r24,Y+32
 21901 9394 8F93      		push r24
 21902 9396 8F8D      		ldd r24,Y+31
 21903 9398 8F93      		push r24
 21904 939a 0E94 0000 		call report
 21905 939e 8DB7      		in r24,__SP_L__
 21906 93a0 9EB7      		in r25,__SP_H__
 21907 93a2 0A96      		adiw r24,10
 21908 93a4 0FB6      		in __tmp_reg__,__SREG__
 21909 93a6 F894      		cli
 21910 93a8 DEBF      		out __SP_H__,r29
 21911 93aa 0FBE      		out __SREG__,__tmp_reg__
 21912 93ac CDBF      		out __SP_L__,r28
 21913 93ae 00C0      		rjmp .L847
 21914               	.L893:
1932:lp_solve_5.5/lp_presolve.c ****       }
1933:lp_solve_5.5/lp_presolve.c ****       else {
1934:lp_solve_5.5/lp_presolve.c ****         presolve_range(lp, i, ps, &lovalue, &upvalue);
 21915               		.loc 2 1934 0 is_stmt 1
 21916 93b0 FE01      		movw r30,r28
 21917 93b2 BE96      		adiw r30,46
 21918 93b4 9E01      		movw r18,r28
 21919 93b6 265D      		subi r18,-42
 21920 93b8 3F4F      		sbci r19,-1
 21921 93ba 4BA1      		ldd r20,Y+35
 21922 93bc 5CA1      		ldd r21,Y+36
 21923 93be 6981      		ldd r22,Y+1
 21924 93c0 7A81      		ldd r23,Y+2
 21925 93c2 8F8D      		ldd r24,Y+31
 21926 93c4 98A1      		ldd r25,Y+32
 21927 93c6 8F01      		movw r16,r30
 21928 93c8 0E94 0000 		call presolve_range
1935:lp_solve_5.5/lp_presolve.c **** #if 1
1936:lp_solve_5.5/lp_presolve.c ****         Value = 0;
 21929               		.loc 2 1936 0
 21930 93cc 1F86      		std Y+15,__zero_reg__
 21931 93ce 188A      		std Y+16,__zero_reg__
 21932 93d0 198A      		std Y+17,__zero_reg__
 21933 93d2 1A8A      		std Y+18,__zero_reg__
1937:lp_solve_5.5/lp_presolve.c **** #else
1938:lp_solve_5.5/lp_presolve.c ****         Value = MAX(fabs(upvalue), fabs(lovalue));
1939:lp_solve_5.5/lp_presolve.c ****         Value = psdata->epsvalue * MAX(1, Value);
1940:lp_solve_5.5/lp_presolve.c **** #endif
1941:lp_solve_5.5/lp_presolve.c ****         if((upvalue < get_rh_lower(lp, i)-Value) ||
 21934               		.loc 2 1941 0
 21935 93d4 2981      		ldd r18,Y+1
 21936 93d6 3A81      		ldd r19,Y+2
 21937 93d8 8F8D      		ldd r24,Y+31
 21938 93da 98A1      		ldd r25,Y+32
 21939 93dc B901      		movw r22,r18
 21940 93de 0E94 0000 		call get_rh_lower
 21941 93e2 DC01      		movw r26,r24
 21942 93e4 CB01      		movw r24,r22
 21943 93e6 2F85      		ldd r18,Y+15
 21944 93e8 3889      		ldd r19,Y+16
 21945 93ea 4989      		ldd r20,Y+17
 21946 93ec 5A89      		ldd r21,Y+18
 21947 93ee BC01      		movw r22,r24
 21948 93f0 CD01      		movw r24,r26
 21949 93f2 0E94 0000 		call __subsf3
 21950 93f6 DC01      		movw r26,r24
 21951 93f8 CB01      		movw r24,r22
 21952 93fa 7C01      		movw r14,r24
 21953 93fc 8D01      		movw r16,r26
 21954 93fe 8EA5      		ldd r24,Y+46
 21955 9400 9FA5      		ldd r25,Y+47
 21956 9402 A8A9      		ldd r26,Y+48
 21957 9404 B9A9      		ldd r27,Y+49
 21958 9406 9C01      		movw r18,r24
 21959 9408 AD01      		movw r20,r26
 21960 940a C801      		movw r24,r16
 21961 940c B701      		movw r22,r14
 21962 940e 0E94 0000 		call __gtsf2
 21963 9412 1816      		cp __zero_reg__,r24
 21964 9414 04F0      		brlt .L896
1942:lp_solve_5.5/lp_presolve.c ****            (lovalue > get_rh_upper(lp, i)+Value)) {
 21965               		.loc 2 1942 0 discriminator 1
 21966 9416 2981      		ldd r18,Y+1
 21967 9418 3A81      		ldd r19,Y+2
 21968 941a 8F8D      		ldd r24,Y+31
 21969 941c 98A1      		ldd r25,Y+32
 21970 941e B901      		movw r22,r18
 21971 9420 0E94 0000 		call get_rh_upper
 21972 9424 DC01      		movw r26,r24
 21973 9426 CB01      		movw r24,r22
 21974 9428 2F85      		ldd r18,Y+15
 21975 942a 3889      		ldd r19,Y+16
 21976 942c 4989      		ldd r20,Y+17
 21977 942e 5A89      		ldd r21,Y+18
 21978 9430 BC01      		movw r22,r24
 21979 9432 CD01      		movw r24,r26
 21980 9434 0E94 0000 		call __addsf3
 21981 9438 DC01      		movw r26,r24
 21982 943a CB01      		movw r24,r22
 21983 943c 7C01      		movw r14,r24
 21984 943e 8D01      		movw r16,r26
 21985 9440 8AA5      		ldd r24,Y+42
 21986 9442 9BA5      		ldd r25,Y+43
 21987 9444 ACA5      		ldd r26,Y+44
 21988 9446 BDA5      		ldd r27,Y+45
1941:lp_solve_5.5/lp_presolve.c ****            (lovalue > get_rh_upper(lp, i)+Value)) {
 21989               		.loc 2 1941 0 discriminator 1
 21990 9448 9C01      		movw r18,r24
 21991 944a AD01      		movw r20,r26
 21992 944c C801      		movw r24,r16
 21993 944e B701      		movw r22,r14
 21994 9450 0E94 0000 		call __ltsf2
 21995 9454 8823      		tst r24
 21996 9456 04F0      		brlt .+2
 21997 9458 00C0      		rjmp .L847
 21998               	.L896:
1943:lp_solve_5.5/lp_presolve.c ****           report(lp, NORMAL, "presolve_colfix: Variable %s (%g << %g) infeasibility in row %s (%g <
 21999               		.loc 2 1943 0
 22000 945a 2981      		ldd r18,Y+1
 22001 945c 3A81      		ldd r19,Y+2
 22002 945e 8F8D      		ldd r24,Y+31
 22003 9460 98A1      		ldd r25,Y+32
 22004 9462 B901      		movw r22,r18
 22005 9464 0E94 0000 		call get_rh_upper
 22006 9468 2196      		adiw r28,61-60
 22007 946a 6CAF      		std Y+60,r22
 22008 946c 7DAF      		std Y+61,r23
 22009 946e 8EAF      		std Y+62,r24
 22010 9470 9FAF      		std Y+63,r25
 22011 9472 2197      		sbiw r28,61-60
 22012 9474 2981      		ldd r18,Y+1
 22013 9476 3A81      		ldd r19,Y+2
 22014 9478 8F8D      		ldd r24,Y+31
 22015 947a 98A1      		ldd r25,Y+32
 22016 947c B901      		movw r22,r18
 22017 947e 0E94 0000 		call get_rh_lower
 22018 9482 2B01      		movw r4,r22
 22019 9484 3C01      		movw r6,r24
 22020 9486 2981      		ldd r18,Y+1
 22021 9488 3A81      		ldd r19,Y+2
 22022 948a 8F8D      		ldd r24,Y+31
 22023 948c 98A1      		ldd r25,Y+32
 22024 948e B901      		movw r22,r18
 22025 9490 0E94 0000 		call get_row_name
 22026 9494 8C01      		movw r16,r24
 22027 9496 8EA4      		ldd r8,Y+46
 22028 9498 9FA4      		ldd r9,Y+47
 22029 949a A8A8      		ldd r10,Y+48
 22030 949c B9A8      		ldd r11,Y+49
 22031 949e CAA4      		ldd r12,Y+42
 22032 94a0 DBA4      		ldd r13,Y+43
 22033 94a2 ECA4      		ldd r14,Y+44
 22034 94a4 FDA4      		ldd r15,Y+45
 22035 94a6 2CA9      		ldd r18,Y+52
 22036 94a8 3DA9      		ldd r19,Y+53
 22037 94aa 8F8D      		ldd r24,Y+31
 22038 94ac 98A1      		ldd r25,Y+32
 22039 94ae B901      		movw r22,r18
 22040 94b0 0E94 0000 		call get_col_name
 22041 94b4 2196      		adiw r28,64-63
 22042 94b6 2FAD      		ldd r18,Y+63
 22043 94b8 2197      		sbiw r28,64-63
 22044 94ba 2F93      		push r18
 22045 94bc 2FAD      		ldd r18,Y+63
 22046 94be 2F93      		push r18
 22047 94c0 2EAD      		ldd r18,Y+62
 22048 94c2 2F93      		push r18
 22049 94c4 2DAD      		ldd r18,Y+61
 22050 94c6 2F93      		push r18
 22051 94c8 272D      		mov r18,r7
 22052 94ca 2F93      		push r18
 22053 94cc 262D      		mov r18,r6
 22054 94ce 2F93      		push r18
 22055 94d0 252D      		mov r18,r5
 22056 94d2 2F93      		push r18
 22057 94d4 242D      		mov r18,r4
 22058 94d6 2F93      		push r18
 22059 94d8 212F      		mov r18,r17
 22060 94da 2F93      		push r18
 22061 94dc 202F      		mov r18,r16
 22062 94de 2F93      		push r18
 22063 94e0 2B2D      		mov r18,r11
 22064 94e2 2F93      		push r18
 22065 94e4 2A2D      		mov r18,r10
 22066 94e6 2F93      		push r18
 22067 94e8 292D      		mov r18,r9
 22068 94ea 2F93      		push r18
 22069 94ec 282D      		mov r18,r8
 22070 94ee 2F93      		push r18
 22071 94f0 2F2D      		mov r18,r15
 22072 94f2 2F93      		push r18
 22073 94f4 2E2D      		mov r18,r14
 22074 94f6 2F93      		push r18
 22075 94f8 2D2D      		mov r18,r13
 22076 94fa 2F93      		push r18
 22077 94fc 2C2D      		mov r18,r12
 22078 94fe 2F93      		push r18
 22079 9500 292F      		mov r18,r25
 22080 9502 2F93      		push r18
 22081 9504 8F93      		push r24
 22082 9506 80E0      		ldi r24,lo8(.LC29)
 22083 9508 90E0      		ldi r25,hi8(.LC29)
 22084 950a 892F      		mov r24,r25
 22085 950c 8F93      		push r24
 22086 950e 80E0      		ldi r24,lo8(.LC29)
 22087 9510 90E0      		ldi r25,hi8(.LC29)
 22088 9512 8F93      		push r24
 22089 9514 1F92      		push __zero_reg__
 22090 9516 84E0      		ldi r24,lo8(4)
 22091 9518 8F93      		push r24
 22092 951a 88A1      		ldd r24,Y+32
 22093 951c 8F93      		push r24
 22094 951e 8F8D      		ldd r24,Y+31
 22095 9520 8F93      		push r24
 22096 9522 0E94 0000 		call report
 22097 9526 EDB7      		in r30,__SP_L__
 22098 9528 FEB7      		in r31,__SP_H__
 22099 952a 7A96      		adiw r30,26
 22100 952c 0FB6      		in __tmp_reg__,__SREG__
 22101 952e F894      		cli
 22102 9530 DEBF      		out __SP_H__,r29
 22103 9532 0FBE      		out __SREG__,__tmp_reg__
 22104 9534 CDBF      		out __SP_L__,r28
1944:lp_solve_5.5/lp_presolve.c ****                               get_col_name(lp, colnr), lovalue, upvalue,
1945:lp_solve_5.5/lp_presolve.c ****                               get_row_name(lp, i), get_rh_lower(lp,i), get_rh_upper(lp, i));
1946:lp_solve_5.5/lp_presolve.c ****           return( FALSE );
 22105               		.loc 2 1946 0
 22106 9536 80E0      		ldi r24,0
 22107 9538 00C0      		rjmp .L900
 22108               	.L925:
1847:lp_solve_5.5/lp_presolve.c **** 
 22109               		.loc 2 1847 0
 22110 953a 0000      		nop
 22111               	.L847:
1947:lp_solve_5.5/lp_presolve.c ****         }
1948:lp_solve_5.5/lp_presolve.c ****       }
1949:lp_solve_5.5/lp_presolve.c ****     }
1950:lp_solve_5.5/lp_presolve.c **** BlockEnd:
1951:lp_solve_5.5/lp_presolve.c ****     if(doOF) {
 22112               		.loc 2 1951 0
 22113 953c 8E81      		ldd r24,Y+6
 22114 953e 8823      		tst r24
 22115 9540 01F0      		breq .L844
1952:lp_solve_5.5/lp_presolve.c ****       doOF = FALSE;
 22116               		.loc 2 1952 0
 22117 9542 1E82      		std Y+6,__zero_reg__
1953:lp_solve_5.5/lp_presolve.c ****       if(ix < ie)
 22118               		.loc 2 1953 0
 22119 9544 2B81      		ldd r18,Y+3
 22120 9546 3C81      		ldd r19,Y+4
 22121 9548 8DA1      		ldd r24,Y+37
 22122 954a 9EA1      		ldd r25,Y+38
 22123 954c 2817      		cp r18,r24
 22124 954e 3907      		cpc r19,r25
 22125 9550 04F4      		brge .L844
1954:lp_solve_5.5/lp_presolve.c ****         goto Restart;
 22126               		.loc 2 1954 0
 22127 9552 00C0      		rjmp .L841
 22128               	.L924:
1844:lp_solve_5.5/lp_presolve.c ****     }
 22129               		.loc 2 1844 0
 22130 9554 0000      		nop
 22131               	.L844:
1832:lp_solve_5.5/lp_presolve.c **** 
 22132               		.loc 2 1832 0
 22133 9556 8B81      		ldd r24,Y+3
 22134 9558 9C81      		ldd r25,Y+4
 22135 955a 0196      		adiw r24,1
 22136 955c 9C83      		std Y+4,r25
 22137 955e 8B83      		std Y+3,r24
 22138 9560 8D8D      		ldd r24,Y+29
 22139 9562 9E8D      		ldd r25,Y+30
 22140 9564 0296      		adiw r24,2
 22141 9566 9E8F      		std Y+30,r25
 22142 9568 8D8F      		std Y+29,r24
 22143 956a 8B8D      		ldd r24,Y+27
 22144 956c 9C8D      		ldd r25,Y+28
 22145 956e 0496      		adiw r24,4
 22146 9570 9C8F      		std Y+28,r25
 22147 9572 8B8F      		std Y+27,r24
 22148               	.L840:
1831:lp_solve_5.5/lp_presolve.c ****       ix++, rownr += matRowColStep, value += matValueStep) {
 22149               		.loc 2 1831 0
 22150 9574 8E81      		ldd r24,Y+6
 22151 9576 8823      		tst r24
 22152 9578 01F0      		breq .+2
 22153 957a 00C0      		rjmp .L841
1831:lp_solve_5.5/lp_presolve.c ****       ix++, rownr += matRowColStep, value += matValueStep) {
 22154               		.loc 2 1831 0 is_stmt 0 discriminator 1
 22155 957c 2B81      		ldd r18,Y+3
 22156 957e 3C81      		ldd r19,Y+4
 22157 9580 8DA1      		ldd r24,Y+37
 22158 9582 9EA1      		ldd r25,Y+38
 22159 9584 2817      		cp r18,r24
 22160 9586 3907      		cpc r19,r25
 22161 9588 04F4      		brge .+2
 22162 958a 00C0      		rjmp .L841
1955:lp_solve_5.5/lp_presolve.c ****     }
1956:lp_solve_5.5/lp_presolve.c **** 
1957:lp_solve_5.5/lp_presolve.c ****   }
1958:lp_solve_5.5/lp_presolve.c ****   if(remove) {
 22163               		.loc 2 1958 0 is_stmt 1
 22164 958c 8AAD      		ldd r24,Y+58
 22165 958e 8823      		tst r24
 22166 9590 01F0      		breq .L899
1959:lp_solve_5.5/lp_presolve.c ****     psdata->forceupdate |= doupdate;
 22167               		.loc 2 1959 0
 22168 9592 8AA9      		ldd r24,Y+50
 22169 9594 9BA9      		ldd r25,Y+51
 22170 9596 FC01      		movw r30,r24
 22171 9598 94A1      		ldd r25,Z+36
 22172 959a 8D81      		ldd r24,Y+5
 22173 959c 292F      		mov r18,r25
 22174 959e 282B      		or r18,r24
 22175 95a0 8AA9      		ldd r24,Y+50
 22176 95a2 9BA9      		ldd r25,Y+51
 22177 95a4 FC01      		movw r30,r24
 22178 95a6 24A3      		std Z+36,r18
1960:lp_solve_5.5/lp_presolve.c ****     if(tally != NULL)
 22179               		.loc 2 1960 0
 22180 95a8 8BAD      		ldd r24,Y+59
 22181 95aa 9CAD      		ldd r25,Y+60
 22182 95ac 892B      		or r24,r25
 22183 95ae 01F0      		breq .L899
1961:lp_solve_5.5/lp_presolve.c ****       (*tally)++;
 22184               		.loc 2 1961 0
 22185 95b0 8BAD      		ldd r24,Y+59
 22186 95b2 9CAD      		ldd r25,Y+60
 22187 95b4 FC01      		movw r30,r24
 22188 95b6 8081      		ld r24,Z
 22189 95b8 9181      		ldd r25,Z+1
 22190 95ba 9C01      		movw r18,r24
 22191 95bc 2F5F      		subi r18,-1
 22192 95be 3F4F      		sbci r19,-1
 22193 95c0 8BAD      		ldd r24,Y+59
 22194 95c2 9CAD      		ldd r25,Y+60
 22195 95c4 FC01      		movw r30,r24
 22196 95c6 3183      		std Z+1,r19
 22197 95c8 2083      		st Z,r18
 22198               	.L899:
1962:lp_solve_5.5/lp_presolve.c ****   }
1963:lp_solve_5.5/lp_presolve.c ****   return( TRUE );
 22199               		.loc 2 1963 0
 22200 95ca 81E0      		ldi r24,lo8(1)
 22201               	.L900:
 22202               	/* epilogue start */
1964:lp_solve_5.5/lp_presolve.c **** }
 22203               		.loc 2 1964 0 discriminator 1
 22204 95cc C05C      		subi r28,-64
 22205 95ce DF4F      		sbci r29,-1
 22206 95d0 0FB6      		in __tmp_reg__,__SREG__
 22207 95d2 F894      		cli
 22208 95d4 DEBF      		out __SP_H__,r29
 22209 95d6 0FBE      		out __SREG__,__tmp_reg__
 22210 95d8 CDBF      		out __SP_L__,r28
 22211 95da DF91      		pop r29
 22212 95dc CF91      		pop r28
 22213 95de 1F91      		pop r17
 22214 95e0 0F91      		pop r16
 22215 95e2 FF90      		pop r15
 22216 95e4 EF90      		pop r14
 22217 95e6 DF90      		pop r13
 22218 95e8 CF90      		pop r12
 22219 95ea BF90      		pop r11
 22220 95ec AF90      		pop r10
 22221 95ee 9F90      		pop r9
 22222 95f0 8F90      		pop r8
 22223 95f2 7F90      		pop r7
 22224 95f4 6F90      		pop r6
 22225 95f6 5F90      		pop r5
 22226 95f8 4F90      		pop r4
 22227 95fa 0895      		ret
 22228               		.cfi_endproc
 22229               	.LFE58:
 22231               	.global	presolve_rowfixzero
 22233               	presolve_rowfixzero:
 22234               	.LFB59:
1965:lp_solve_5.5/lp_presolve.c **** 
1966:lp_solve_5.5/lp_presolve.c **** /* Delete the columns of the specified row, but make sure we don't delete SOS variables.
1967:lp_solve_5.5/lp_presolve.c ****    Note that we cannot use presolve_nextcol() here, since the variables are deleted. */
1968:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_rowfixzero(presolverec *psdata, int rownr, int *nv)
1969:lp_solve_5.5/lp_presolve.c **** {
 22235               		.loc 2 1969 0
 22236               		.cfi_startproc
 22237 95fc EF92      		push r14
 22238               	.LCFI319:
 22239               		.cfi_def_cfa_offset 3
 22240               		.cfi_offset 14, -2
 22241 95fe FF92      		push r15
 22242               	.LCFI320:
 22243               		.cfi_def_cfa_offset 4
 22244               		.cfi_offset 15, -3
 22245 9600 0F93      		push r16
 22246               	.LCFI321:
 22247               		.cfi_def_cfa_offset 5
 22248               		.cfi_offset 16, -4
 22249 9602 CF93      		push r28
 22250               	.LCFI322:
 22251               		.cfi_def_cfa_offset 6
 22252               		.cfi_offset 28, -5
 22253 9604 DF93      		push r29
 22254               	.LCFI323:
 22255               		.cfi_def_cfa_offset 7
 22256               		.cfi_offset 29, -6
 22257 9606 CDB7      		in r28,__SP_L__
 22258 9608 DEB7      		in r29,__SP_H__
 22259               	.LCFI324:
 22260               		.cfi_def_cfa_register 28
 22261 960a 6097      		sbiw r28,16
 22262               	.LCFI325:
 22263               		.cfi_def_cfa_offset 23
 22264 960c 0FB6      		in __tmp_reg__,__SREG__
 22265 960e F894      		cli
 22266 9610 DEBF      		out __SP_H__,r29
 22267 9612 0FBE      		out __SREG__,__tmp_reg__
 22268 9614 CDBF      		out __SP_L__,r28
 22269               	/* prologue: function */
 22270               	/* frame size = 16 */
 22271               	/* stack size = 21 */
 22272               	.L__stack_usage = 21
 22273 9616 9C87      		std Y+12,r25
 22274 9618 8B87      		std Y+11,r24
 22275 961a 7E87      		std Y+14,r23
 22276 961c 6D87      		std Y+13,r22
 22277 961e 588B      		std Y+16,r21
 22278 9620 4F87      		std Y+15,r20
1970:lp_solve_5.5/lp_presolve.c ****   lprec  *lp = psdata->lp;
 22279               		.loc 2 1970 0
 22280 9622 8B85      		ldd r24,Y+11
 22281 9624 9C85      		ldd r25,Y+12
 22282 9626 FC01      		movw r30,r24
 22283 9628 8289      		ldd r24,Z+18
 22284 962a 9389      		ldd r25,Z+19
 22285 962c 9C83      		std Y+4,r25
 22286 962e 8B83      		std Y+3,r24
1971:lp_solve_5.5/lp_presolve.c ****   MATrec *mat = lp->matA;
 22287               		.loc 2 1971 0
 22288 9630 8B81      		ldd r24,Y+3
 22289 9632 9C81      		ldd r25,Y+4
 22290 9634 8A54      		subi r24,74
 22291 9636 9D4F      		sbci r25,-3
 22292 9638 FC01      		movw r30,r24
 22293 963a 8081      		ld r24,Z
 22294 963c 9181      		ldd r25,Z+1
 22295 963e 9E83      		std Y+6,r25
 22296 9640 8D83      		std Y+5,r24
1972:lp_solve_5.5/lp_presolve.c ****   int    ix, jx, ib = mat->row_end[rownr-1];
 22297               		.loc 2 1972 0
 22298 9642 8D81      		ldd r24,Y+5
 22299 9644 9E81      		ldd r25,Y+6
 22300 9646 FC01      		movw r30,r24
 22301 9648 208D      		ldd r18,Z+24
 22302 964a 318D      		ldd r19,Z+25
 22303 964c 8D85      		ldd r24,Y+13
 22304 964e 9E85      		ldd r25,Y+14
 22305 9650 8150      		subi r24,1
 22306 9652 9048      		sbci r25,-128
 22307 9654 880F      		lsl r24
 22308 9656 991F      		rol r25
 22309 9658 820F      		add r24,r18
 22310 965a 931F      		adc r25,r19
 22311 965c FC01      		movw r30,r24
 22312 965e 8081      		ld r24,Z
 22313 9660 9181      		ldd r25,Z+1
 22314 9662 9887      		std Y+8,r25
 22315 9664 8F83      		std Y+7,r24
1973:lp_solve_5.5/lp_presolve.c ****   for(ix = mat->row_end[rownr]-1; ix >= ib; ix--) {
 22316               		.loc 2 1973 0
 22317 9666 8D81      		ldd r24,Y+5
 22318 9668 9E81      		ldd r25,Y+6
 22319 966a FC01      		movw r30,r24
 22320 966c 208D      		ldd r18,Z+24
 22321 966e 318D      		ldd r19,Z+25
 22322 9670 8D85      		ldd r24,Y+13
 22323 9672 9E85      		ldd r25,Y+14
 22324 9674 880F      		lsl r24
 22325 9676 991F      		rol r25
 22326 9678 820F      		add r24,r18
 22327 967a 931F      		adc r25,r19
 22328 967c FC01      		movw r30,r24
 22329 967e 8081      		ld r24,Z
 22330 9680 9181      		ldd r25,Z+1
 22331 9682 0197      		sbiw r24,1
 22332 9684 9A83      		std Y+2,r25
 22333 9686 8983      		std Y+1,r24
 22334 9688 00C0      		rjmp .L927
 22335               	.L931:
1974:lp_solve_5.5/lp_presolve.c ****     jx = ROW_MAT_COLNR(ix);
 22336               		.loc 2 1974 0
 22337 968a 8D81      		ldd r24,Y+5
 22338 968c 9E81      		ldd r25,Y+6
 22339 968e FC01      		movw r30,r24
 22340 9690 2485      		ldd r18,Z+12
 22341 9692 3585      		ldd r19,Z+13
 22342 9694 8D81      		ldd r24,Y+5
 22343 9696 9E81      		ldd r25,Y+6
 22344 9698 FC01      		movw r30,r24
 22345 969a 4689      		ldd r20,Z+22
 22346 969c 5789      		ldd r21,Z+23
 22347 969e 8981      		ldd r24,Y+1
 22348 96a0 9A81      		ldd r25,Y+2
 22349 96a2 880F      		lsl r24
 22350 96a4 991F      		rol r25
 22351 96a6 840F      		add r24,r20
 22352 96a8 951F      		adc r25,r21
 22353 96aa FC01      		movw r30,r24
 22354 96ac 8081      		ld r24,Z
 22355 96ae 9181      		ldd r25,Z+1
 22356 96b0 880F      		lsl r24
 22357 96b2 991F      		rol r25
 22358 96b4 820F      		add r24,r18
 22359 96b6 931F      		adc r25,r19
 22360 96b8 FC01      		movw r30,r24
 22361 96ba 8081      		ld r24,Z
 22362 96bc 9181      		ldd r25,Z+1
 22363 96be 9A87      		std Y+10,r25
 22364 96c0 8987      		std Y+9,r24
1975:lp_solve_5.5/lp_presolve.c ****     if(isActiveLink(psdata->cols->varmap, jx)) {
 22365               		.loc 2 1975 0
 22366 96c2 8B85      		ldd r24,Y+11
 22367 96c4 9C85      		ldd r25,Y+12
 22368 96c6 FC01      		movw r30,r24
 22369 96c8 8281      		ldd r24,Z+2
 22370 96ca 9381      		ldd r25,Z+3
 22371 96cc FC01      		movw r30,r24
 22372 96ce 8081      		ld r24,Z
 22373 96d0 9181      		ldd r25,Z+1
 22374 96d2 2985      		ldd r18,Y+9
 22375 96d4 3A85      		ldd r19,Y+10
 22376 96d6 B901      		movw r22,r18
 22377 96d8 0E94 0000 		call isActiveLink
 22378 96dc 8823      		tst r24
 22379 96de 01F0      		breq .L928
1976:lp_solve_5.5/lp_presolve.c ****       if(!presolve_colfix(psdata, jx, 0.0, TRUE, nv))
 22380               		.loc 2 1976 0
 22381 96e0 2F85      		ldd r18,Y+15
 22382 96e2 3889      		ldd r19,Y+16
 22383 96e4 6985      		ldd r22,Y+9
 22384 96e6 7A85      		ldd r23,Y+10
 22385 96e8 8B85      		ldd r24,Y+11
 22386 96ea 9C85      		ldd r25,Y+12
 22387 96ec 7901      		movw r14,r18
 22388 96ee 01E0      		ldi r16,lo8(1)
 22389 96f0 20E0      		ldi r18,0
 22390 96f2 30E0      		ldi r19,0
 22391 96f4 A901      		movw r20,r18
 22392 96f6 0E94 0000 		call presolve_colfix
 22393 96fa 8823      		tst r24
 22394 96fc 01F4      		brne .L929
1977:lp_solve_5.5/lp_presolve.c ****         return( presolve_setstatus(psdata, INFEASIBLE) );
 22395               		.loc 2 1977 0
 22396 96fe 8B85      		ldd r24,Y+11
 22397 9700 9C85      		ldd r25,Y+12
 22398 9702 20E0      		ldi r18,lo8(.LC21)
 22399 9704 30E0      		ldi r19,hi8(.LC21)
 22400 9706 49EB      		ldi r20,lo8(-71)
 22401 9708 57E0      		ldi r21,lo8(7)
 22402 970a 62E0      		ldi r22,lo8(2)
 22403 970c 70E0      		ldi r23,0
 22404 970e 0E94 0000 		call presolve_setstatusex
 22405 9712 00C0      		rjmp .L930
 22406               	.L929:
1978:lp_solve_5.5/lp_presolve.c ****       if(presolve_candeletevar(psdata, jx))
 22407               		.loc 2 1978 0
 22408 9714 2985      		ldd r18,Y+9
 22409 9716 3A85      		ldd r19,Y+10
 22410 9718 8B85      		ldd r24,Y+11
 22411 971a 9C85      		ldd r25,Y+12
 22412 971c B901      		movw r22,r18
 22413 971e 0E94 0000 		call presolve_candeletevar
 22414 9722 8823      		tst r24
 22415 9724 01F0      		breq .L928
1979:lp_solve_5.5/lp_presolve.c ****         presolve_colremove(psdata, jx, TRUE);
 22416               		.loc 2 1979 0
 22417 9726 2985      		ldd r18,Y+9
 22418 9728 3A85      		ldd r19,Y+10
 22419 972a 8B85      		ldd r24,Y+11
 22420 972c 9C85      		ldd r25,Y+12
 22421 972e 41E0      		ldi r20,lo8(1)
 22422 9730 B901      		movw r22,r18
 22423 9732 0E94 0000 		call presolve_colremove
 22424               	.L928:
1973:lp_solve_5.5/lp_presolve.c ****     jx = ROW_MAT_COLNR(ix);
 22425               		.loc 2 1973 0 discriminator 2
 22426 9736 8981      		ldd r24,Y+1
 22427 9738 9A81      		ldd r25,Y+2
 22428 973a 0197      		sbiw r24,1
 22429 973c 9A83      		std Y+2,r25
 22430 973e 8983      		std Y+1,r24
 22431               	.L927:
1973:lp_solve_5.5/lp_presolve.c ****     jx = ROW_MAT_COLNR(ix);
 22432               		.loc 2 1973 0 is_stmt 0 discriminator 1
 22433 9740 2981      		ldd r18,Y+1
 22434 9742 3A81      		ldd r19,Y+2
 22435 9744 8F81      		ldd r24,Y+7
 22436 9746 9885      		ldd r25,Y+8
 22437 9748 2817      		cp r18,r24
 22438 974a 3907      		cpc r19,r25
 22439 974c 04F0      		brlt .+2
 22440 974e 00C0      		rjmp .L931
1980:lp_solve_5.5/lp_presolve.c ****     }
1981:lp_solve_5.5/lp_presolve.c ****   }
1982:lp_solve_5.5/lp_presolve.c **** #ifdef xxParanoia
1983:lp_solve_5.5/lp_presolve.c ****   if(!presolve_debugrowtallies(psdata))
1984:lp_solve_5.5/lp_presolve.c ****     return( INFEASIBLE );
1985:lp_solve_5.5/lp_presolve.c **** #endif
1986:lp_solve_5.5/lp_presolve.c ****   return( RUNNING );
 22441               		.loc 2 1986 0 is_stmt 1
 22442 9750 88E0      		ldi r24,lo8(8)
 22443 9752 90E0      		ldi r25,0
 22444               	.L930:
 22445               	/* epilogue start */
1987:lp_solve_5.5/lp_presolve.c **** }
 22446               		.loc 2 1987 0
 22447 9754 6096      		adiw r28,16
 22448 9756 0FB6      		in __tmp_reg__,__SREG__
 22449 9758 F894      		cli
 22450 975a DEBF      		out __SP_H__,r29
 22451 975c 0FBE      		out __SREG__,__tmp_reg__
 22452 975e CDBF      		out __SP_L__,r28
 22453 9760 DF91      		pop r29
 22454 9762 CF91      		pop r28
 22455 9764 0F91      		pop r16
 22456 9766 FF90      		pop r15
 22457 9768 EF90      		pop r14
 22458 976a 0895      		ret
 22459               		.cfi_endproc
 22460               	.LFE59:
 22462               	.global	presolve_colfixdual
 22464               	presolve_colfixdual:
 22465               	.LFB60:
1988:lp_solve_5.5/lp_presolve.c **** 
1989:lp_solve_5.5/lp_presolve.c **** /* Function to find if a variable can be fixed based on considering the dual */
1990:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_colfixdual(presolverec *psdata, int colnr, REAL *fixValue, int *status)
1991:lp_solve_5.5/lp_presolve.c **** {
 22466               		.loc 2 1991 0
 22467               		.cfi_startproc
 22468 976c CF92      		push r12
 22469               	.LCFI326:
 22470               		.cfi_def_cfa_offset 3
 22471               		.cfi_offset 12, -2
 22472 976e DF92      		push r13
 22473               	.LCFI327:
 22474               		.cfi_def_cfa_offset 4
 22475               		.cfi_offset 13, -3
 22476 9770 EF92      		push r14
 22477               	.LCFI328:
 22478               		.cfi_def_cfa_offset 5
 22479               		.cfi_offset 14, -4
 22480 9772 FF92      		push r15
 22481               	.LCFI329:
 22482               		.cfi_def_cfa_offset 6
 22483               		.cfi_offset 15, -5
 22484 9774 0F93      		push r16
 22485               	.LCFI330:
 22486               		.cfi_def_cfa_offset 7
 22487               		.cfi_offset 16, -6
 22488 9776 1F93      		push r17
 22489               	.LCFI331:
 22490               		.cfi_def_cfa_offset 8
 22491               		.cfi_offset 17, -7
 22492 9778 CF93      		push r28
 22493               	.LCFI332:
 22494               		.cfi_def_cfa_offset 9
 22495               		.cfi_offset 28, -8
 22496 977a DF93      		push r29
 22497               	.LCFI333:
 22498               		.cfi_def_cfa_offset 10
 22499               		.cfi_offset 29, -9
 22500 977c CDB7      		in r28,__SP_L__
 22501 977e DEB7      		in r29,__SP_H__
 22502               	.LCFI334:
 22503               		.cfi_def_cfa_register 28
 22504 9780 E397      		sbiw r28,51
 22505               	.LCFI335:
 22506               		.cfi_def_cfa_offset 61
 22507 9782 0FB6      		in __tmp_reg__,__SREG__
 22508 9784 F894      		cli
 22509 9786 DEBF      		out __SP_H__,r29
 22510 9788 0FBE      		out __SREG__,__tmp_reg__
 22511 978a CDBF      		out __SP_L__,r28
 22512               	/* prologue: function */
 22513               	/* frame size = 51 */
 22514               	/* stack size = 59 */
 22515               	.L__stack_usage = 59
 22516 978c 9DA7      		std Y+45,r25
 22517 978e 8CA7      		std Y+44,r24
 22518 9790 7FA7      		std Y+47,r23
 22519 9792 6EA7      		std Y+46,r22
 22520 9794 59AB      		std Y+49,r21
 22521 9796 48AB      		std Y+48,r20
 22522 9798 3BAB      		std Y+51,r19
 22523 979a 2AAB      		std Y+50,r18
1992:lp_solve_5.5/lp_presolve.c ****   lprec   *lp = psdata->lp;
 22524               		.loc 2 1992 0
 22525 979c 8CA5      		ldd r24,Y+44
 22526 979e 9DA5      		ldd r25,Y+45
 22527 97a0 FC01      		movw r30,r24
 22528 97a2 8289      		ldd r24,Z+18
 22529 97a4 9389      		ldd r25,Z+19
 22530 97a6 9B8B      		std Y+19,r25
 22531 97a8 8A8B      		std Y+18,r24
1993:lp_solve_5.5/lp_presolve.c ****   MYBOOL  hasOF, isMI, isDualFREE = TRUE;
 22532               		.loc 2 1993 0
 22533 97aa 81E0      		ldi r24,lo8(1)
 22534 97ac 8983      		std Y+1,r24
1994:lp_solve_5.5/lp_presolve.c ****   int     i, ix, ie, *rownr, signOF;
1995:lp_solve_5.5/lp_presolve.c ****   REAL    *value, loX, upX, eps = psdata->epsvalue;
 22535               		.loc 2 1995 0
 22536 97ae 8CA5      		ldd r24,Y+44
 22537 97b0 9DA5      		ldd r25,Y+45
 22538 97b2 FC01      		movw r30,r24
 22539 97b4 8489      		ldd r24,Z+20
 22540 97b6 9589      		ldd r25,Z+21
 22541 97b8 A689      		ldd r26,Z+22
 22542 97ba B789      		ldd r27,Z+23
 22543 97bc 8C8B      		std Y+20,r24
 22544 97be 9D8B      		std Y+21,r25
 22545 97c0 AE8B      		std Y+22,r26
 22546 97c2 BF8B      		std Y+23,r27
1996:lp_solve_5.5/lp_presolve.c ****   MATrec  *mat = lp->matA;
 22547               		.loc 2 1996 0
 22548 97c4 8A89      		ldd r24,Y+18
 22549 97c6 9B89      		ldd r25,Y+19
 22550 97c8 8A54      		subi r24,74
 22551 97ca 9D4F      		sbci r25,-3
 22552 97cc FC01      		movw r30,r24
 22553 97ce 8081      		ld r24,Z
 22554 97d0 9181      		ldd r25,Z+1
 22555 97d2 998F      		std Y+25,r25
 22556 97d4 888F      		std Y+24,r24
1997:lp_solve_5.5/lp_presolve.c **** 
1998:lp_solve_5.5/lp_presolve.c ****   /* First check basic variable range */
1999:lp_solve_5.5/lp_presolve.c ****   loX = get_lowbo(lp, colnr);
 22557               		.loc 2 1999 0
 22558 97d6 2EA5      		ldd r18,Y+46
 22559 97d8 3FA5      		ldd r19,Y+47
 22560 97da 8A89      		ldd r24,Y+18
 22561 97dc 9B89      		ldd r25,Y+19
 22562 97de B901      		movw r22,r18
 22563 97e0 0E94 0000 		call get_lowbo
 22564 97e4 DC01      		movw r26,r24
 22565 97e6 CB01      		movw r24,r22
 22566 97e8 8A87      		std Y+10,r24
 22567 97ea 9B87      		std Y+11,r25
 22568 97ec AC87      		std Y+12,r26
 22569 97ee BD87      		std Y+13,r27
2000:lp_solve_5.5/lp_presolve.c ****   upX = get_upbo(lp, colnr);
 22570               		.loc 2 2000 0
 22571 97f0 2EA5      		ldd r18,Y+46
 22572 97f2 3FA5      		ldd r19,Y+47
 22573 97f4 8A89      		ldd r24,Y+18
 22574 97f6 9B89      		ldd r25,Y+19
 22575 97f8 B901      		movw r22,r18
 22576 97fa 0E94 0000 		call get_upbo
 22577 97fe DC01      		movw r26,r24
 22578 9800 CB01      		movw r24,r22
 22579 9802 8E87      		std Y+14,r24
 22580 9804 9F87      		std Y+15,r25
 22581 9806 A88B      		std Y+16,r26
 22582 9808 B98B      		std Y+17,r27
2001:lp_solve_5.5/lp_presolve.c ****   if(((loX < 0) && (upX > 0)) ||
 22583               		.loc 2 2001 0
 22584 980a 20E0      		ldi r18,0
 22585 980c 30E0      		ldi r19,0
 22586 980e A901      		movw r20,r18
 22587 9810 6A85      		ldd r22,Y+10
 22588 9812 7B85      		ldd r23,Y+11
 22589 9814 8C85      		ldd r24,Y+12
 22590 9816 9D85      		ldd r25,Y+13
 22591 9818 0E94 0000 		call __ltsf2
 22592 981c 8823      		tst r24
 22593 981e 04F4      		brge .L933
 22594               		.loc 2 2001 0 is_stmt 0 discriminator 1
 22595 9820 20E0      		ldi r18,0
 22596 9822 30E0      		ldi r19,0
 22597 9824 A901      		movw r20,r18
 22598 9826 6E85      		ldd r22,Y+14
 22599 9828 7F85      		ldd r23,Y+15
 22600 982a 8889      		ldd r24,Y+16
 22601 982c 9989      		ldd r25,Y+17
 22602 982e 0E94 0000 		call __gtsf2
 22603 9832 1816      		cp __zero_reg__,r24
 22604 9834 04F0      		brlt .L935
 22605               	.L933:
2002:lp_solve_5.5/lp_presolve.c ****      (fabs(upX-loX) < lp->epsvalue) ||
 22606               		.loc 2 2002 0 is_stmt 1 discriminator 3
 22607 9836 2A85      		ldd r18,Y+10
 22608 9838 3B85      		ldd r19,Y+11
 22609 983a 4C85      		ldd r20,Y+12
 22610 983c 5D85      		ldd r21,Y+13
 22611 983e 6E85      		ldd r22,Y+14
 22612 9840 7F85      		ldd r23,Y+15
 22613 9842 8889      		ldd r24,Y+16
 22614 9844 9989      		ldd r25,Y+17
 22615 9846 0E94 0000 		call __subsf3
 22616 984a DC01      		movw r26,r24
 22617 984c CB01      		movw r24,r22
 22618 984e BF77      		andi r27,0x7f
 22619 9850 2A89      		ldd r18,Y+18
 22620 9852 3B89      		ldd r19,Y+19
 22621 9854 2A5E      		subi r18,-22
 22622 9856 3C4F      		sbci r19,-4
 22623 9858 F901      		movw r30,r18
 22624 985a 2081      		ld r18,Z
 22625 985c 3181      		ldd r19,Z+1
 22626 985e 4281      		ldd r20,Z+2
 22627 9860 5381      		ldd r21,Z+3
2001:lp_solve_5.5/lp_presolve.c ****   if(((loX < 0) && (upX > 0)) ||
 22628               		.loc 2 2001 0 discriminator 3
 22629 9862 BC01      		movw r22,r24
 22630 9864 CD01      		movw r24,r26
 22631 9866 0E94 0000 		call __ltsf2
 22632 986a 8823      		tst r24
 22633 986c 04F0      		brlt .L935
2003:lp_solve_5.5/lp_presolve.c ****      SOS_is_member_of_type(lp->SOS, colnr, SOSn))
 22634               		.loc 2 2003 0
 22635 986e 8A89      		ldd r24,Y+18
 22636 9870 9B89      		ldd r25,Y+19
 22637 9872 8256      		subi r24,98
 22638 9874 9D4F      		sbci r25,-3
 22639 9876 FC01      		movw r30,r24
 22640 9878 8081      		ld r24,Z
 22641 987a 9181      		ldd r25,Z+1
 22642 987c 2EA5      		ldd r18,Y+46
 22643 987e 3FA5      		ldd r19,Y+47
 22644 9880 4FEF      		ldi r20,lo8(-1)
 22645 9882 5FEF      		ldi r21,lo8(-1)
 22646 9884 B901      		movw r22,r18
 22647 9886 0E94 0000 		call SOS_is_member_of_type
2002:lp_solve_5.5/lp_presolve.c ****      (fabs(upX-loX) < lp->epsvalue) ||
 22648               		.loc 2 2002 0
 22649 988a 8823      		tst r24
 22650 988c 01F0      		breq .L936
 22651               	.L935:
2004:lp_solve_5.5/lp_presolve.c ****     return( FALSE );
 22652               		.loc 2 2004 0
 22653 988e 80E0      		ldi r24,0
 22654 9890 00C0      		rjmp .L937
 22655               	.L936:
2005:lp_solve_5.5/lp_presolve.c ****   isMI = (MYBOOL) (upX <= 0);
 22656               		.loc 2 2005 0
 22657 9892 11E0      		ldi r17,lo8(1)
 22658 9894 20E0      		ldi r18,0
 22659 9896 30E0      		ldi r19,0
 22660 9898 A901      		movw r20,r18
 22661 989a 6E85      		ldd r22,Y+14
 22662 989c 7F85      		ldd r23,Y+15
 22663 989e 8889      		ldd r24,Y+16
 22664 98a0 9989      		ldd r25,Y+17
 22665 98a2 0E94 0000 		call __lesf2
 22666 98a6 1816      		cp __zero_reg__,r24
 22667 98a8 04F4      		brge .L938
 22668 98aa 10E0      		ldi r17,0
 22669               	.L938:
 22670 98ac 1A8F      		std Y+26,r17
2006:lp_solve_5.5/lp_presolve.c **** 
2007:lp_solve_5.5/lp_presolve.c ****   /* Retrieve OF (standard form assuming maximization) */
2008:lp_solve_5.5/lp_presolve.c ****   ix = mat->col_end[colnr - 1];
 22671               		.loc 2 2008 0
 22672 98ae 888D      		ldd r24,Y+24
 22673 98b0 998D      		ldd r25,Y+25
 22674 98b2 FC01      		movw r30,r24
 22675 98b4 2289      		ldd r18,Z+18
 22676 98b6 3389      		ldd r19,Z+19
 22677 98b8 8EA5      		ldd r24,Y+46
 22678 98ba 9FA5      		ldd r25,Y+47
 22679 98bc 8150      		subi r24,1
 22680 98be 9048      		sbci r25,-128
 22681 98c0 880F      		lsl r24
 22682 98c2 991F      		rol r25
 22683 98c4 820F      		add r24,r18
 22684 98c6 931F      		adc r25,r19
 22685 98c8 FC01      		movw r30,r24
 22686 98ca 8081      		ld r24,Z
 22687 98cc 9181      		ldd r25,Z+1
 22688 98ce 9B83      		std Y+3,r25
 22689 98d0 8A83      		std Y+2,r24
2009:lp_solve_5.5/lp_presolve.c ****   ie = mat->col_end[colnr];
 22690               		.loc 2 2009 0
 22691 98d2 888D      		ldd r24,Y+24
 22692 98d4 998D      		ldd r25,Y+25
 22693 98d6 FC01      		movw r30,r24
 22694 98d8 2289      		ldd r18,Z+18
 22695 98da 3389      		ldd r19,Z+19
 22696 98dc 8EA5      		ldd r24,Y+46
 22697 98de 9FA5      		ldd r25,Y+47
 22698 98e0 880F      		lsl r24
 22699 98e2 991F      		rol r25
 22700 98e4 820F      		add r24,r18
 22701 98e6 931F      		adc r25,r19
 22702 98e8 FC01      		movw r30,r24
 22703 98ea 8081      		ld r24,Z
 22704 98ec 9181      		ldd r25,Z+1
 22705 98ee 9C8F      		std Y+28,r25
 22706 98f0 8B8F      		std Y+27,r24
2010:lp_solve_5.5/lp_presolve.c ****   rownr = &COL_MAT_ROWNR(ix);
 22707               		.loc 2 2010 0
 22708 98f2 888D      		ldd r24,Y+24
 22709 98f4 998D      		ldd r25,Y+25
 22710 98f6 FC01      		movw r30,r24
 22711 98f8 2685      		ldd r18,Z+14
 22712 98fa 3785      		ldd r19,Z+15
 22713 98fc 8A81      		ldd r24,Y+2
 22714 98fe 9B81      		ldd r25,Y+3
 22715 9900 880F      		lsl r24
 22716 9902 991F      		rol r25
 22717 9904 820F      		add r24,r18
 22718 9906 931F      		adc r25,r19
 22719 9908 9D83      		std Y+5,r25
 22720 990a 8C83      		std Y+4,r24
2011:lp_solve_5.5/lp_presolve.c ****   value = &COL_MAT_VALUE(ix);
 22721               		.loc 2 2011 0
 22722 990c 888D      		ldd r24,Y+24
 22723 990e 998D      		ldd r25,Y+25
 22724 9910 FC01      		movw r30,r24
 22725 9912 2089      		ldd r18,Z+16
 22726 9914 3189      		ldd r19,Z+17
 22727 9916 8A81      		ldd r24,Y+2
 22728 9918 9B81      		ldd r25,Y+3
 22729 991a 880F      		lsl r24
 22730 991c 991F      		rol r25
 22731 991e 880F      		lsl r24
 22732 9920 991F      		rol r25
 22733 9922 820F      		add r24,r18
 22734 9924 931F      		adc r25,r19
 22735 9926 9987      		std Y+9,r25
 22736 9928 8887      		std Y+8,r24
2012:lp_solve_5.5/lp_presolve.c ****   hasOF = isnz_origobj(lp, colnr);
 22737               		.loc 2 2012 0
 22738 992a 2EA5      		ldd r18,Y+46
 22739 992c 3FA5      		ldd r19,Y+47
 22740 992e 8A89      		ldd r24,Y+18
 22741 9930 9B89      		ldd r25,Y+19
 22742 9932 B901      		movw r22,r18
 22743 9934 0E94 0000 		call isnz_origobj
 22744 9938 8D8F      		std Y+29,r24
2013:lp_solve_5.5/lp_presolve.c ****   if(hasOF)
 22745               		.loc 2 2013 0
 22746 993a 8D8D      		ldd r24,Y+29
 22747 993c 8823      		tst r24
 22748 993e 01F0      		breq .L939
2014:lp_solve_5.5/lp_presolve.c ****     signOF = my_sign(lp->orig_obj[colnr]);
 22749               		.loc 2 2014 0
 22750 9940 8A89      		ldd r24,Y+18
 22751 9942 9B89      		ldd r25,Y+19
 22752 9944 845D      		subi r24,-44
 22753 9946 9D4F      		sbci r25,-3
 22754 9948 FC01      		movw r30,r24
 22755 994a 2081      		ld r18,Z
 22756 994c 3181      		ldd r19,Z+1
 22757 994e 8EA5      		ldd r24,Y+46
 22758 9950 9FA5      		ldd r25,Y+47
 22759 9952 880F      		lsl r24
 22760 9954 991F      		rol r25
 22761 9956 880F      		lsl r24
 22762 9958 991F      		rol r25
 22763 995a 820F      		add r24,r18
 22764 995c 931F      		adc r25,r19
 22765 995e FC01      		movw r30,r24
 22766 9960 8081      		ld r24,Z
 22767 9962 9181      		ldd r25,Z+1
 22768 9964 A281      		ldd r26,Z+2
 22769 9966 B381      		ldd r27,Z+3
 22770 9968 20E0      		ldi r18,0
 22771 996a 30E0      		ldi r19,0
 22772 996c A901      		movw r20,r18
 22773 996e BC01      		movw r22,r24
 22774 9970 CD01      		movw r24,r26
 22775 9972 0E94 0000 		call __ltsf2
 22776 9976 8823      		tst r24
 22777 9978 04F4      		brge .L1003
 22778               		.loc 2 2014 0 is_stmt 0 discriminator 1
 22779 997a 8FEF      		ldi r24,lo8(-1)
 22780 997c 9FEF      		ldi r25,lo8(-1)
 22781 997e 00C0      		rjmp .L942
 22782               	.L1003:
 22783               		.loc 2 2014 0 discriminator 2
 22784 9980 81E0      		ldi r24,lo8(1)
 22785 9982 90E0      		ldi r25,0
 22786               	.L942:
 22787               		.loc 2 2014 0 discriminator 4
 22788 9984 9F83      		std Y+7,r25
 22789 9986 8E83      		std Y+6,r24
 22790 9988 00C0      		rjmp .L944
 22791               	.L939:
2015:lp_solve_5.5/lp_presolve.c ****   else
2016:lp_solve_5.5/lp_presolve.c ****     signOF = 0;
 22792               		.loc 2 2016 0 is_stmt 1
 22793 998a 1F82      		std Y+7,__zero_reg__
 22794 998c 1E82      		std Y+6,__zero_reg__
2017:lp_solve_5.5/lp_presolve.c **** 
2018:lp_solve_5.5/lp_presolve.c ****   /* Loop over all constraints involving active variable (standard form with LE constraints)*/
2019:lp_solve_5.5/lp_presolve.c ****   for(; (ix < ie) && isDualFREE;
 22795               		.loc 2 2019 0
 22796 998e 00C0      		rjmp .L944
 22797               	.L970:
2020:lp_solve_5.5/lp_presolve.c ****       ix++, rownr += matRowColStep, value += matValueStep) {
2021:lp_solve_5.5/lp_presolve.c ****     i = *rownr;
 22798               		.loc 2 2021 0
 22799 9990 8C81      		ldd r24,Y+4
 22800 9992 9D81      		ldd r25,Y+5
 22801 9994 FC01      		movw r30,r24
 22802 9996 8081      		ld r24,Z
 22803 9998 9181      		ldd r25,Z+1
 22804 999a 9F8F      		std Y+31,r25
 22805 999c 8E8F      		std Y+30,r24
2022:lp_solve_5.5/lp_presolve.c ****     if(!isActiveLink(psdata->rows->varmap, i))
 22806               		.loc 2 2022 0
 22807 999e 8CA5      		ldd r24,Y+44
 22808 99a0 9DA5      		ldd r25,Y+45
 22809 99a2 FC01      		movw r30,r24
 22810 99a4 8081      		ld r24,Z
 22811 99a6 9181      		ldd r25,Z+1
 22812 99a8 FC01      		movw r30,r24
 22813 99aa 8081      		ld r24,Z
 22814 99ac 9181      		ldd r25,Z+1
 22815 99ae 2E8D      		ldd r18,Y+30
 22816 99b0 3F8D      		ldd r19,Y+31
 22817 99b2 B901      		movw r22,r18
 22818 99b4 0E94 0000 		call isActiveLink
 22819 99b8 8823      		tst r24
 22820 99ba 01F4      		brne .+2
 22821 99bc 00C0      		rjmp .L1009
2023:lp_solve_5.5/lp_presolve.c ****       continue;
2024:lp_solve_5.5/lp_presolve.c ****     if(presolve_rowlength(psdata, i) == 1) {
 22822               		.loc 2 2024 0
 22823 99be 2E8D      		ldd r18,Y+30
 22824 99c0 3F8D      		ldd r19,Y+31
 22825 99c2 8CA5      		ldd r24,Y+44
 22826 99c4 9DA5      		ldd r25,Y+45
 22827 99c6 B901      		movw r22,r18
 22828 99c8 0E94 0000 		call presolve_rowlength
 22829 99cc 0197      		sbiw r24,1
 22830 99ce 01F0      		breq .+2
 22831 99d0 00C0      		rjmp .L947
 22832               	.LBB6:
2025:lp_solve_5.5/lp_presolve.c ****       REAL val = my_chsign(is_chsign(lp, i), *value),
 22833               		.loc 2 2025 0
 22834 99d2 2E8D      		ldd r18,Y+30
 22835 99d4 3F8D      		ldd r19,Y+31
 22836 99d6 8A89      		ldd r24,Y+18
 22837 99d8 9B89      		ldd r25,Y+19
 22838 99da B901      		movw r22,r18
 22839 99dc 0E94 0000 		call is_chsign
 22840 99e0 8823      		tst r24
 22841 99e2 01F0      		breq .L948
 22842               		.loc 2 2025 0 is_stmt 0 discriminator 1
 22843 99e4 8885      		ldd r24,Y+8
 22844 99e6 9985      		ldd r25,Y+9
 22845 99e8 FC01      		movw r30,r24
 22846 99ea 8081      		ld r24,Z
 22847 99ec 9181      		ldd r25,Z+1
 22848 99ee A281      		ldd r26,Z+2
 22849 99f0 B381      		ldd r27,Z+3
 22850 99f2 20E0      		ldi r18,0
 22851 99f4 30E0      		ldi r19,0
 22852 99f6 A901      		movw r20,r18
 22853 99f8 BC01      		movw r22,r24
 22854 99fa CD01      		movw r24,r26
 22855 99fc 0E94 0000 		call __nesf2
 22856 9a00 8823      		tst r24
 22857 9a02 01F0      		breq .L948
 22858               		.loc 2 2025 0 discriminator 3
 22859 9a04 8885      		ldd r24,Y+8
 22860 9a06 9985      		ldd r25,Y+9
 22861 9a08 FC01      		movw r30,r24
 22862 9a0a 8081      		ld r24,Z
 22863 9a0c 9181      		ldd r25,Z+1
 22864 9a0e A281      		ldd r26,Z+2
 22865 9a10 B381      		ldd r27,Z+3
 22866 9a12 B058      		subi r27,0x80
 22867 9a14 00C0      		rjmp .L950
 22868               	.L948:
 22869               		.loc 2 2025 0 discriminator 4
 22870 9a16 8885      		ldd r24,Y+8
 22871 9a18 9985      		ldd r25,Y+9
 22872 9a1a FC01      		movw r30,r24
 22873 9a1c 8081      		ld r24,Z
 22874 9a1e 9181      		ldd r25,Z+1
 22875 9a20 A281      		ldd r26,Z+2
 22876 9a22 B381      		ldd r27,Z+3
 22877               	.L950:
 22878               		.loc 2 2025 0 discriminator 6
 22879 9a24 88A3      		std Y+32,r24
 22880 9a26 99A3      		std Y+33,r25
 22881 9a28 AAA3      		std Y+34,r26
 22882 9a2a BBA3      		std Y+35,r27
2026:lp_solve_5.5/lp_presolve.c ****            loR = get_rh_lower(lp, i),
 22883               		.loc 2 2026 0 is_stmt 1 discriminator 6
 22884 9a2c 2E8D      		ldd r18,Y+30
 22885 9a2e 3F8D      		ldd r19,Y+31
 22886 9a30 8A89      		ldd r24,Y+18
 22887 9a32 9B89      		ldd r25,Y+19
 22888 9a34 B901      		movw r22,r18
 22889 9a36 0E94 0000 		call get_rh_lower
 22890 9a3a DC01      		movw r26,r24
 22891 9a3c CB01      		movw r24,r22
 22892 9a3e 8CA3      		std Y+36,r24
 22893 9a40 9DA3      		std Y+37,r25
 22894 9a42 AEA3      		std Y+38,r26
 22895 9a44 BFA3      		std Y+39,r27
2027:lp_solve_5.5/lp_presolve.c ****            upR = get_rh_upper(lp, i);
 22896               		.loc 2 2027 0 discriminator 6
 22897 9a46 2E8D      		ldd r18,Y+30
 22898 9a48 3F8D      		ldd r19,Y+31
 22899 9a4a 8A89      		ldd r24,Y+18
 22900 9a4c 9B89      		ldd r25,Y+19
 22901 9a4e B901      		movw r22,r18
 22902 9a50 0E94 0000 		call get_rh_upper
 22903 9a54 DC01      		movw r26,r24
 22904 9a56 CB01      		movw r24,r22
 22905 9a58 88A7      		std Y+40,r24
 22906 9a5a 99A7      		std Y+41,r25
 22907 9a5c AAA7      		std Y+42,r26
 22908 9a5e BBA7      		std Y+43,r27
2028:lp_solve_5.5/lp_presolve.c ****       if(!presolve_singletonbounds(psdata, i, colnr, &loR, &upR, &val)) {
 22909               		.loc 2 2028 0 discriminator 6
 22910 9a60 DE01      		movw r26,r28
 22911 9a62 9096      		adiw r26,32
 22912 9a64 FE01      		movw r30,r28
 22913 9a66 B896      		adiw r30,40
 22914 9a68 9E01      		movw r18,r28
 22915 9a6a 2C5D      		subi r18,-36
 22916 9a6c 3F4F      		sbci r19,-1
 22917 9a6e 4EA5      		ldd r20,Y+46
 22918 9a70 5FA5      		ldd r21,Y+47
 22919 9a72 6E8D      		ldd r22,Y+30
 22920 9a74 7F8D      		ldd r23,Y+31
 22921 9a76 8CA5      		ldd r24,Y+44
 22922 9a78 9DA5      		ldd r25,Y+45
 22923 9a7a 7D01      		movw r14,r26
 22924 9a7c 8F01      		movw r16,r30
 22925 9a7e 0E94 0000 		call presolve_singletonbounds
 22926 9a82 8823      		tst r24
 22927 9a84 01F4      		brne .L951
2029:lp_solve_5.5/lp_presolve.c ****         *status = presolve_setstatus(psdata, INFEASIBLE);
 22928               		.loc 2 2029 0
 22929 9a86 8CA5      		ldd r24,Y+44
 22930 9a88 9DA5      		ldd r25,Y+45
 22931 9a8a 20E0      		ldi r18,lo8(.LC21)
 22932 9a8c 30E0      		ldi r19,hi8(.LC21)
 22933 9a8e 4DEE      		ldi r20,lo8(-19)
 22934 9a90 57E0      		ldi r21,lo8(7)
 22935 9a92 62E0      		ldi r22,lo8(2)
 22936 9a94 70E0      		ldi r23,0
 22937 9a96 0E94 0000 		call presolve_setstatusex
 22938 9a9a 9C01      		movw r18,r24
 22939 9a9c 8AA9      		ldd r24,Y+50
 22940 9a9e 9BA9      		ldd r25,Y+51
 22941 9aa0 FC01      		movw r30,r24
 22942 9aa2 3183      		std Z+1,r19
 22943 9aa4 2083      		st Z,r18
2030:lp_solve_5.5/lp_presolve.c ****         return( FALSE );
 22944               		.loc 2 2030 0
 22945 9aa6 80E0      		ldi r24,0
 22946 9aa8 00C0      		rjmp .L937
 22947               	.L951:
2031:lp_solve_5.5/lp_presolve.c ****       }
2032:lp_solve_5.5/lp_presolve.c ****       if(loR > loX + psdata->epsvalue)
 22948               		.loc 2 2032 0
 22949 9aaa 8CA5      		ldd r24,Y+44
 22950 9aac 9DA5      		ldd r25,Y+45
 22951 9aae FC01      		movw r30,r24
 22952 9ab0 8489      		ldd r24,Z+20
 22953 9ab2 9589      		ldd r25,Z+21
 22954 9ab4 A689      		ldd r26,Z+22
 22955 9ab6 B789      		ldd r27,Z+23
 22956 9ab8 2A85      		ldd r18,Y+10
 22957 9aba 3B85      		ldd r19,Y+11
 22958 9abc 4C85      		ldd r20,Y+12
 22959 9abe 5D85      		ldd r21,Y+13
 22960 9ac0 BC01      		movw r22,r24
 22961 9ac2 CD01      		movw r24,r26
 22962 9ac4 0E94 0000 		call __addsf3
 22963 9ac8 DC01      		movw r26,r24
 22964 9aca CB01      		movw r24,r22
 22965 9acc 7C01      		movw r14,r24
 22966 9ace 8D01      		movw r16,r26
 22967 9ad0 8CA1      		ldd r24,Y+36
 22968 9ad2 9DA1      		ldd r25,Y+37
 22969 9ad4 AEA1      		ldd r26,Y+38
 22970 9ad6 BFA1      		ldd r27,Y+39
 22971 9ad8 9C01      		movw r18,r24
 22972 9ada AD01      		movw r20,r26
 22973 9adc C801      		movw r24,r16
 22974 9ade B701      		movw r22,r14
 22975 9ae0 0E94 0000 		call __ltsf2
 22976 9ae4 8823      		tst r24
 22977 9ae6 04F4      		brge .L952
2033:lp_solve_5.5/lp_presolve.c ****         loX = presolve_roundrhs(lp, loR, TRUE);
 22978               		.loc 2 2033 0
 22979 9ae8 8CA1      		ldd r24,Y+36
 22980 9aea 9DA1      		ldd r25,Y+37
 22981 9aec AEA1      		ldd r26,Y+38
 22982 9aee BFA1      		ldd r27,Y+39
 22983 9af0 EA89      		ldd r30,Y+18
 22984 9af2 FB89      		ldd r31,Y+19
 22985 9af4 21E0      		ldi r18,lo8(1)
 22986 9af6 AC01      		movw r20,r24
 22987 9af8 BD01      		movw r22,r26
 22988 9afa CF01      		movw r24,r30
 22989 9afc 0E94 0000 		call presolve_roundrhs
 22990 9b00 DC01      		movw r26,r24
 22991 9b02 CB01      		movw r24,r22
 22992 9b04 8A87      		std Y+10,r24
 22993 9b06 9B87      		std Y+11,r25
 22994 9b08 AC87      		std Y+12,r26
 22995 9b0a BD87      		std Y+13,r27
 22996               	.L952:
2034:lp_solve_5.5/lp_presolve.c ****       if(upR < upX - psdata->epsvalue)
 22997               		.loc 2 2034 0
 22998 9b0c 8CA5      		ldd r24,Y+44
 22999 9b0e 9DA5      		ldd r25,Y+45
 23000 9b10 FC01      		movw r30,r24
 23001 9b12 8489      		ldd r24,Z+20
 23002 9b14 9589      		ldd r25,Z+21
 23003 9b16 A689      		ldd r26,Z+22
 23004 9b18 B789      		ldd r27,Z+23
 23005 9b1a 9C01      		movw r18,r24
 23006 9b1c AD01      		movw r20,r26
 23007 9b1e 6E85      		ldd r22,Y+14
 23008 9b20 7F85      		ldd r23,Y+15
 23009 9b22 8889      		ldd r24,Y+16
 23010 9b24 9989      		ldd r25,Y+17
 23011 9b26 0E94 0000 		call __subsf3
 23012 9b2a DC01      		movw r26,r24
 23013 9b2c CB01      		movw r24,r22
 23014 9b2e 7C01      		movw r14,r24
 23015 9b30 8D01      		movw r16,r26
 23016 9b32 88A5      		ldd r24,Y+40
 23017 9b34 99A5      		ldd r25,Y+41
 23018 9b36 AAA5      		ldd r26,Y+42
 23019 9b38 BBA5      		ldd r27,Y+43
 23020 9b3a 9C01      		movw r18,r24
 23021 9b3c AD01      		movw r20,r26
 23022 9b3e C801      		movw r24,r16
 23023 9b40 B701      		movw r22,r14
 23024 9b42 0E94 0000 		call __gtsf2
 23025 9b46 1816      		cp __zero_reg__,r24
 23026 9b48 04F0      		brlt .L993
2035:lp_solve_5.5/lp_presolve.c ****         upX = presolve_roundrhs(lp, upR, FALSE);
2036:lp_solve_5.5/lp_presolve.c ****       continue;
 23027               		.loc 2 2036 0
 23028 9b4a 00C0      		rjmp .L946
 23029               	.L993:
2035:lp_solve_5.5/lp_presolve.c ****         upX = presolve_roundrhs(lp, upR, FALSE);
 23030               		.loc 2 2035 0
 23031 9b4c 88A5      		ldd r24,Y+40
 23032 9b4e 99A5      		ldd r25,Y+41
 23033 9b50 AAA5      		ldd r26,Y+42
 23034 9b52 BBA5      		ldd r27,Y+43
 23035 9b54 EA89      		ldd r30,Y+18
 23036 9b56 FB89      		ldd r31,Y+19
 23037 9b58 20E0      		ldi r18,0
 23038 9b5a AC01      		movw r20,r24
 23039 9b5c BD01      		movw r22,r26
 23040 9b5e CF01      		movw r24,r30
 23041 9b60 0E94 0000 		call presolve_roundrhs
 23042 9b64 DC01      		movw r26,r24
 23043 9b66 CB01      		movw r24,r22
 23044 9b68 8E87      		std Y+14,r24
 23045 9b6a 9F87      		std Y+15,r25
 23046 9b6c A88B      		std Y+16,r26
 23047 9b6e B98B      		std Y+17,r27
 23048 9b70 00C0      		rjmp .L946
 23049               	.L947:
 23050               	.LBE6:
2037:lp_solve_5.5/lp_presolve.c ****     }
2038:lp_solve_5.5/lp_presolve.c ****     else
2039:lp_solve_5.5/lp_presolve.c ****       isDualFREE = my_infinite(lp, get_rh_range(lp, i)) ||                                         
 23051               		.loc 2 2039 0
 23052 9b72 2E8D      		ldd r18,Y+30
 23053 9b74 3F8D      		ldd r19,Y+31
 23054 9b76 8A89      		ldd r24,Y+18
 23055 9b78 9B89      		ldd r25,Y+19
 23056 9b7a B901      		movw r22,r18
 23057 9b7c 0E94 0000 		call get_rh_range
 23058 9b80 DC01      		movw r26,r24
 23059 9b82 CB01      		movw r24,r22
 23060 9b84 BF77      		andi r27,0x7f
 23061 9b86 2A89      		ldd r18,Y+18
 23062 9b88 3B89      		ldd r19,Y+19
 23063 9b8a 265F      		subi r18,-10
 23064 9b8c 3C4F      		sbci r19,-4
 23065 9b8e F901      		movw r30,r18
 23066 9b90 2081      		ld r18,Z
 23067 9b92 3181      		ldd r19,Z+1
 23068 9b94 4281      		ldd r20,Z+2
 23069 9b96 5381      		ldd r21,Z+3
 23070 9b98 BC01      		movw r22,r24
 23071 9b9a CD01      		movw r24,r26
 23072 9b9c 0E94 0000 		call __gesf2
 23073 9ba0 8823      		tst r24
 23074 9ba2 04F0      		brlt .+2
 23075 9ba4 00C0      		rjmp .L956
2040:lp_solve_5.5/lp_presolve.c ****                    ((presolve_sumplumin(lp, i, psdata->rows, TRUE)-eps <= get_rh_upper(lp, i)) &&  
 23076               		.loc 2 2040 0 discriminator 2
 23077 9ba6 8CA5      		ldd r24,Y+44
 23078 9ba8 9DA5      		ldd r25,Y+45
 23079 9baa FC01      		movw r30,r24
 23080 9bac 4081      		ld r20,Z
 23081 9bae 5181      		ldd r21,Z+1
 23082 9bb0 6E8D      		ldd r22,Y+30
 23083 9bb2 7F8D      		ldd r23,Y+31
 23084 9bb4 8A89      		ldd r24,Y+18
 23085 9bb6 9B89      		ldd r25,Y+19
 23086 9bb8 21E0      		ldi r18,lo8(1)
 23087 9bba 0E94 0000 		call presolve_sumplumin
 23088 9bbe DC01      		movw r26,r24
 23089 9bc0 CB01      		movw r24,r22
 23090 9bc2 2C89      		ldd r18,Y+20
 23091 9bc4 3D89      		ldd r19,Y+21
 23092 9bc6 4E89      		ldd r20,Y+22
 23093 9bc8 5F89      		ldd r21,Y+23
 23094 9bca BC01      		movw r22,r24
 23095 9bcc CD01      		movw r24,r26
 23096 9bce 0E94 0000 		call __subsf3
 23097 9bd2 DC01      		movw r26,r24
 23098 9bd4 CB01      		movw r24,r22
 23099 9bd6 6C01      		movw r12,r24
 23100 9bd8 7D01      		movw r14,r26
 23101 9bda 2E8D      		ldd r18,Y+30
 23102 9bdc 3F8D      		ldd r19,Y+31
 23103 9bde 8A89      		ldd r24,Y+18
 23104 9be0 9B89      		ldd r25,Y+19
 23105 9be2 B901      		movw r22,r18
 23106 9be4 0E94 0000 		call get_rh_upper
 23107 9be8 DC01      		movw r26,r24
 23108 9bea CB01      		movw r24,r22
2039:lp_solve_5.5/lp_presolve.c ****                    ((presolve_sumplumin(lp, i, psdata->rows, TRUE)-eps <= get_rh_upper(lp, i)) &&  
 23109               		.loc 2 2039 0 discriminator 2
 23110 9bec 9C01      		movw r18,r24
 23111 9bee AD01      		movw r20,r26
 23112 9bf0 C701      		movw r24,r14
 23113 9bf2 B601      		movw r22,r12
 23114 9bf4 0E94 0000 		call __lesf2
 23115 9bf8 1816      		cp __zero_reg__,r24
 23116 9bfa 04F0      		brlt .L957
2041:lp_solve_5.5/lp_presolve.c ****                     (presolve_sumplumin(lp, i, psdata->rows, FALSE)+eps >= get_rh_lower(lp, i)));
 23117               		.loc 2 2041 0
 23118 9bfc 8CA5      		ldd r24,Y+44
 23119 9bfe 9DA5      		ldd r25,Y+45
 23120 9c00 FC01      		movw r30,r24
 23121 9c02 4081      		ld r20,Z
 23122 9c04 5181      		ldd r21,Z+1
 23123 9c06 6E8D      		ldd r22,Y+30
 23124 9c08 7F8D      		ldd r23,Y+31
 23125 9c0a 8A89      		ldd r24,Y+18
 23126 9c0c 9B89      		ldd r25,Y+19
 23127 9c0e 20E0      		ldi r18,0
 23128 9c10 0E94 0000 		call presolve_sumplumin
 23129 9c14 DC01      		movw r26,r24
 23130 9c16 CB01      		movw r24,r22
 23131 9c18 2C89      		ldd r18,Y+20
 23132 9c1a 3D89      		ldd r19,Y+21
 23133 9c1c 4E89      		ldd r20,Y+22
 23134 9c1e 5F89      		ldd r21,Y+23
 23135 9c20 BC01      		movw r22,r24
 23136 9c22 CD01      		movw r24,r26
 23137 9c24 0E94 0000 		call __addsf3
 23138 9c28 DC01      		movw r26,r24
 23139 9c2a CB01      		movw r24,r22
 23140 9c2c 6C01      		movw r12,r24
 23141 9c2e 7D01      		movw r14,r26
 23142 9c30 2E8D      		ldd r18,Y+30
 23143 9c32 3F8D      		ldd r19,Y+31
 23144 9c34 8A89      		ldd r24,Y+18
 23145 9c36 9B89      		ldd r25,Y+19
 23146 9c38 B901      		movw r22,r18
 23147 9c3a 0E94 0000 		call get_rh_lower
 23148 9c3e DC01      		movw r26,r24
 23149 9c40 CB01      		movw r24,r22
2040:lp_solve_5.5/lp_presolve.c ****                    ((presolve_sumplumin(lp, i, psdata->rows, TRUE)-eps <= get_rh_upper(lp, i)) &&  
 23150               		.loc 2 2040 0
 23151 9c42 9C01      		movw r18,r24
 23152 9c44 AD01      		movw r20,r26
 23153 9c46 C701      		movw r24,r14
 23154 9c48 B601      		movw r22,r12
 23155 9c4a 0E94 0000 		call __gesf2
 23156 9c4e 8823      		tst r24
 23157 9c50 04F0      		brlt .L957
 23158               	.L956:
2039:lp_solve_5.5/lp_presolve.c ****                    ((presolve_sumplumin(lp, i, psdata->rows, TRUE)-eps <= get_rh_upper(lp, i)) &&  
 23159               		.loc 2 2039 0 discriminator 1
 23160 9c52 81E0      		ldi r24,lo8(1)
 23161 9c54 90E0      		ldi r25,0
 23162 9c56 00C0      		rjmp .L960
 23163               	.L957:
2039:lp_solve_5.5/lp_presolve.c ****                    ((presolve_sumplumin(lp, i, psdata->rows, TRUE)-eps <= get_rh_upper(lp, i)) &&  
 23164               		.loc 2 2039 0 is_stmt 0 discriminator 3
 23165 9c58 80E0      		ldi r24,0
 23166 9c5a 90E0      		ldi r25,0
 23167               	.L960:
2039:lp_solve_5.5/lp_presolve.c ****                    ((presolve_sumplumin(lp, i, psdata->rows, TRUE)-eps <= get_rh_upper(lp, i)) &&  
 23168               		.loc 2 2039 0 discriminator 5
 23169 9c5c 8983      		std Y+1,r24
2042:lp_solve_5.5/lp_presolve.c ****     if(isDualFREE) {
 23170               		.loc 2 2042 0 is_stmt 1 discriminator 5
 23171 9c5e 8981      		ldd r24,Y+1
 23172 9c60 8823      		tst r24
 23173 9c62 01F0      		breq .L946
2043:lp_solve_5.5/lp_presolve.c ****       if(signOF == 0)  /* Test on the basis of identical signs in the constraints */
 23174               		.loc 2 2043 0
 23175 9c64 8E81      		ldd r24,Y+6
 23176 9c66 9F81      		ldd r25,Y+7
 23177 9c68 892B      		or r24,r25
 23178 9c6a 01F4      		brne .L961
2044:lp_solve_5.5/lp_presolve.c ****         signOF = my_sign(*value);
 23179               		.loc 2 2044 0
 23180 9c6c 8885      		ldd r24,Y+8
 23181 9c6e 9985      		ldd r25,Y+9
 23182 9c70 FC01      		movw r30,r24
 23183 9c72 8081      		ld r24,Z
 23184 9c74 9181      		ldd r25,Z+1
 23185 9c76 A281      		ldd r26,Z+2
 23186 9c78 B381      		ldd r27,Z+3
 23187 9c7a 20E0      		ldi r18,0
 23188 9c7c 30E0      		ldi r19,0
 23189 9c7e A901      		movw r20,r18
 23190 9c80 BC01      		movw r22,r24
 23191 9c82 CD01      		movw r24,r26
 23192 9c84 0E94 0000 		call __ltsf2
 23193 9c88 8823      		tst r24
 23194 9c8a 04F4      		brge .L1004
 23195               		.loc 2 2044 0 is_stmt 0 discriminator 1
 23196 9c8c 8FEF      		ldi r24,lo8(-1)
 23197 9c8e 9FEF      		ldi r25,lo8(-1)
 23198 9c90 00C0      		rjmp .L964
 23199               	.L1004:
 23200               		.loc 2 2044 0 discriminator 2
 23201 9c92 81E0      		ldi r24,lo8(1)
 23202 9c94 90E0      		ldi r25,0
 23203               	.L964:
 23204               		.loc 2 2044 0 discriminator 4
 23205 9c96 9F83      		std Y+7,r25
 23206 9c98 8E83      		std Y+6,r24
 23207 9c9a 00C0      		rjmp .L946
 23208               	.L961:
2045:lp_solve_5.5/lp_presolve.c ****       else             /* Test on the basis of constraint sign equal to OF sign */
2046:lp_solve_5.5/lp_presolve.c ****         isDualFREE = (MYBOOL) (signOF == my_sign(*value));
 23209               		.loc 2 2046 0 is_stmt 1
 23210 9c9c 8885      		ldd r24,Y+8
 23211 9c9e 9985      		ldd r25,Y+9
 23212 9ca0 FC01      		movw r30,r24
 23213 9ca2 8081      		ld r24,Z
 23214 9ca4 9181      		ldd r25,Z+1
 23215 9ca6 A281      		ldd r26,Z+2
 23216 9ca8 B381      		ldd r27,Z+3
 23217 9caa 20E0      		ldi r18,0
 23218 9cac 30E0      		ldi r19,0
 23219 9cae A901      		movw r20,r18
 23220 9cb0 BC01      		movw r22,r24
 23221 9cb2 CD01      		movw r24,r26
 23222 9cb4 0E94 0000 		call __ltsf2
 23223 9cb8 8823      		tst r24
 23224 9cba 04F4      		brge .L1005
 23225               		.loc 2 2046 0 is_stmt 0 discriminator 1
 23226 9cbc 8FEF      		ldi r24,lo8(-1)
 23227 9cbe 9FEF      		ldi r25,lo8(-1)
 23228 9cc0 00C0      		rjmp .L967
 23229               	.L1005:
 23230               		.loc 2 2046 0 discriminator 2
 23231 9cc2 81E0      		ldi r24,lo8(1)
 23232 9cc4 90E0      		ldi r25,0
 23233               	.L967:
 23234               		.loc 2 2046 0 discriminator 4
 23235 9cc6 41E0      		ldi r20,lo8(1)
 23236 9cc8 2E81      		ldd r18,Y+6
 23237 9cca 3F81      		ldd r19,Y+7
 23238 9ccc 8217      		cp r24,r18
 23239 9cce 9307      		cpc r25,r19
 23240 9cd0 01F0      		breq .L968
 23241 9cd2 40E0      		ldi r20,0
 23242               	.L968:
 23243 9cd4 4983      		std Y+1,r20
 23244 9cd6 00C0      		rjmp .L946
 23245               	.L1009:
2023:lp_solve_5.5/lp_presolve.c ****     if(presolve_rowlength(psdata, i) == 1) {
 23246               		.loc 2 2023 0 is_stmt 1
 23247 9cd8 0000      		nop
 23248               	.L946:
2020:lp_solve_5.5/lp_presolve.c ****     i = *rownr;
 23249               		.loc 2 2020 0
 23250 9cda 8A81      		ldd r24,Y+2
 23251 9cdc 9B81      		ldd r25,Y+3
 23252 9cde 0196      		adiw r24,1
 23253 9ce0 9B83      		std Y+3,r25
 23254 9ce2 8A83      		std Y+2,r24
 23255 9ce4 8C81      		ldd r24,Y+4
 23256 9ce6 9D81      		ldd r25,Y+5
 23257 9ce8 0296      		adiw r24,2
 23258 9cea 9D83      		std Y+5,r25
 23259 9cec 8C83      		std Y+4,r24
 23260 9cee 8885      		ldd r24,Y+8
 23261 9cf0 9985      		ldd r25,Y+9
 23262 9cf2 0496      		adiw r24,4
 23263 9cf4 9987      		std Y+9,r25
 23264 9cf6 8887      		std Y+8,r24
 23265               	.L944:
2019:lp_solve_5.5/lp_presolve.c ****       ix++, rownr += matRowColStep, value += matValueStep) {
 23266               		.loc 2 2019 0
 23267 9cf8 2A81      		ldd r18,Y+2
 23268 9cfa 3B81      		ldd r19,Y+3
 23269 9cfc 8B8D      		ldd r24,Y+27
 23270 9cfe 9C8D      		ldd r25,Y+28
 23271 9d00 2817      		cp r18,r24
 23272 9d02 3907      		cpc r19,r25
 23273 9d04 04F4      		brge .L969
2019:lp_solve_5.5/lp_presolve.c ****       ix++, rownr += matRowColStep, value += matValueStep) {
 23274               		.loc 2 2019 0 is_stmt 0 discriminator 1
 23275 9d06 8981      		ldd r24,Y+1
 23276 9d08 8823      		tst r24
 23277 9d0a 01F0      		breq .+2
 23278 9d0c 00C0      		rjmp .L970
 23279               	.L969:
2047:lp_solve_5.5/lp_presolve.c ****     }
2048:lp_solve_5.5/lp_presolve.c ****   }
2049:lp_solve_5.5/lp_presolve.c **** 
2050:lp_solve_5.5/lp_presolve.c ****   /* Set fixing value if we were successful */
2051:lp_solve_5.5/lp_presolve.c ****   if(isDualFREE) {
 23280               		.loc 2 2051 0 is_stmt 1
 23281 9d0e 8981      		ldd r24,Y+1
 23282 9d10 8823      		tst r24
 23283 9d12 01F4      		brne .+2
 23284 9d14 00C0      		rjmp .L971
2052:lp_solve_5.5/lp_presolve.c ****     if(signOF == 0) {
 23285               		.loc 2 2052 0
 23286 9d16 8E81      		ldd r24,Y+6
 23287 9d18 9F81      		ldd r25,Y+7
 23288 9d1a 892B      		or r24,r25
 23289 9d1c 01F4      		brne .L972
2053:lp_solve_5.5/lp_presolve.c ****       SETMAX(loX, 0);
 23290               		.loc 2 2053 0
 23291 9d1e 20E0      		ldi r18,0
 23292 9d20 30E0      		ldi r19,0
 23293 9d22 A901      		movw r20,r18
 23294 9d24 6A85      		ldd r22,Y+10
 23295 9d26 7B85      		ldd r23,Y+11
 23296 9d28 8C85      		ldd r24,Y+12
 23297 9d2a 9D85      		ldd r25,Y+13
 23298 9d2c 0E94 0000 		call __ltsf2
 23299 9d30 8823      		tst r24
 23300 9d32 04F4      		brge .L973
 23301               		.loc 2 2053 0 is_stmt 0 discriminator 1
 23302 9d34 1A86      		std Y+10,__zero_reg__
 23303 9d36 1B86      		std Y+11,__zero_reg__
 23304 9d38 1C86      		std Y+12,__zero_reg__
 23305 9d3a 1D86      		std Y+13,__zero_reg__
 23306               	.L973:
2054:lp_solve_5.5/lp_presolve.c ****       *fixValue = MIN(loX, upX);
 23307               		.loc 2 2054 0 is_stmt 1
 23308 9d3c 2E85      		ldd r18,Y+14
 23309 9d3e 3F85      		ldd r19,Y+15
 23310 9d40 4889      		ldd r20,Y+16
 23311 9d42 5989      		ldd r21,Y+17
 23312 9d44 6A85      		ldd r22,Y+10
 23313 9d46 7B85      		ldd r23,Y+11
 23314 9d48 8C85      		ldd r24,Y+12
 23315 9d4a 9D85      		ldd r25,Y+13
 23316 9d4c 0E94 0000 		call __ltsf2
 23317 9d50 8823      		tst r24
 23318 9d52 04F4      		brge .L1006
 23319               		.loc 2 2054 0 is_stmt 0 discriminator 1
 23320 9d54 8A85      		ldd r24,Y+10
 23321 9d56 9B85      		ldd r25,Y+11
 23322 9d58 AC85      		ldd r26,Y+12
 23323 9d5a BD85      		ldd r27,Y+13
 23324 9d5c 00C0      		rjmp .L977
 23325               	.L1006:
 23326               		.loc 2 2054 0 discriminator 2
 23327 9d5e 8E85      		ldd r24,Y+14
 23328 9d60 9F85      		ldd r25,Y+15
 23329 9d62 A889      		ldd r26,Y+16
 23330 9d64 B989      		ldd r27,Y+17
 23331               	.L977:
 23332               		.loc 2 2054 0 discriminator 4
 23333 9d66 28A9      		ldd r18,Y+48
 23334 9d68 39A9      		ldd r19,Y+49
 23335 9d6a F901      		movw r30,r18
 23336 9d6c 8083      		st Z,r24
 23337 9d6e 9183      		std Z+1,r25
 23338 9d70 A283      		std Z+2,r26
 23339 9d72 B383      		std Z+3,r27
 23340 9d74 00C0      		rjmp .L978
 23341               	.L972:
2055:lp_solve_5.5/lp_presolve.c ****     }
2056:lp_solve_5.5/lp_presolve.c ****     else if(signOF > 0) {
 23342               		.loc 2 2056 0 is_stmt 1
 23343 9d76 8E81      		ldd r24,Y+6
 23344 9d78 9F81      		ldd r25,Y+7
 23345 9d7a 1816      		cp __zero_reg__,r24
 23346 9d7c 1906      		cpc __zero_reg__,r25
 23347 9d7e 04F0      		brlt .+2
 23348 9d80 00C0      		rjmp .L979
2057:lp_solve_5.5/lp_presolve.c ****       if(my_infinite(lp, loX))
 23349               		.loc 2 2057 0
 23350 9d82 8A85      		ldd r24,Y+10
 23351 9d84 9B85      		ldd r25,Y+11
 23352 9d86 AC85      		ldd r26,Y+12
 23353 9d88 BD85      		ldd r27,Y+13
 23354 9d8a BF77      		andi r27,0x7f
 23355 9d8c 2A89      		ldd r18,Y+18
 23356 9d8e 3B89      		ldd r19,Y+19
 23357 9d90 265F      		subi r18,-10
 23358 9d92 3C4F      		sbci r19,-4
 23359 9d94 F901      		movw r30,r18
 23360 9d96 2081      		ld r18,Z
 23361 9d98 3181      		ldd r19,Z+1
 23362 9d9a 4281      		ldd r20,Z+2
 23363 9d9c 5381      		ldd r21,Z+3
 23364 9d9e BC01      		movw r22,r24
 23365 9da0 CD01      		movw r24,r26
 23366 9da2 0E94 0000 		call __gesf2
 23367 9da6 8823      		tst r24
 23368 9da8 04F0      		brlt .L1007
2058:lp_solve_5.5/lp_presolve.c ****         isDualFREE = FALSE;
 23369               		.loc 2 2058 0
 23370 9daa 1982      		std Y+1,__zero_reg__
 23371 9dac 00C0      		rjmp .L978
 23372               	.L1007:
2059:lp_solve_5.5/lp_presolve.c ****       else {
2060:lp_solve_5.5/lp_presolve.c ****         if(is_int(lp, colnr))
 23373               		.loc 2 2060 0
 23374 9dae 2EA5      		ldd r18,Y+46
 23375 9db0 3FA5      		ldd r19,Y+47
 23376 9db2 8A89      		ldd r24,Y+18
 23377 9db4 9B89      		ldd r25,Y+19
 23378 9db6 B901      		movw r22,r18
 23379 9db8 0E94 0000 		call is_int
 23380 9dbc 8823      		tst r24
 23381 9dbe 01F0      		breq .L983
2061:lp_solve_5.5/lp_presolve.c ****           *fixValue = ceil(loX-PRESOLVE_EPSVALUE);
 23382               		.loc 2 2061 0
 23383 9dc0 8A89      		ldd r24,Y+18
 23384 9dc2 9B89      		ldd r25,Y+19
 23385 9dc4 865E      		subi r24,-26
 23386 9dc6 9C4F      		sbci r25,-4
 23387 9dc8 FC01      		movw r30,r24
 23388 9dca 8081      		ld r24,Z
 23389 9dcc 9181      		ldd r25,Z+1
 23390 9dce A281      		ldd r26,Z+2
 23391 9dd0 B381      		ldd r27,Z+3
 23392 9dd2 2DEC      		ldi r18,lo8(-51)
 23393 9dd4 3CEC      		ldi r19,lo8(-52)
 23394 9dd6 4CEC      		ldi r20,lo8(-52)
 23395 9dd8 5DE3      		ldi r21,lo8(61)
 23396 9dda BC01      		movw r22,r24
 23397 9ddc CD01      		movw r24,r26
 23398 9dde 0E94 0000 		call __mulsf3
 23399 9de2 DC01      		movw r26,r24
 23400 9de4 CB01      		movw r24,r22
 23401 9de6 9C01      		movw r18,r24
 23402 9de8 AD01      		movw r20,r26
 23403 9dea 6A85      		ldd r22,Y+10
 23404 9dec 7B85      		ldd r23,Y+11
 23405 9dee 8C85      		ldd r24,Y+12
 23406 9df0 9D85      		ldd r25,Y+13
 23407 9df2 0E94 0000 		call __subsf3
 23408 9df6 DC01      		movw r26,r24
 23409 9df8 CB01      		movw r24,r22
 23410 9dfa BC01      		movw r22,r24
 23411 9dfc CD01      		movw r24,r26
 23412 9dfe 0E94 0000 		call ceil
 23413 9e02 DC01      		movw r26,r24
 23414 9e04 CB01      		movw r24,r22
 23415 9e06 28A9      		ldd r18,Y+48
 23416 9e08 39A9      		ldd r19,Y+49
 23417 9e0a F901      		movw r30,r18
 23418 9e0c 8083      		st Z,r24
 23419 9e0e 9183      		std Z+1,r25
 23420 9e10 A283      		std Z+2,r26
 23421 9e12 B383      		std Z+3,r27
 23422 9e14 00C0      		rjmp .L978
 23423               	.L983:
2062:lp_solve_5.5/lp_presolve.c ****         else
2063:lp_solve_5.5/lp_presolve.c ****           *fixValue = loX;
 23424               		.loc 2 2063 0
 23425 9e16 28A9      		ldd r18,Y+48
 23426 9e18 39A9      		ldd r19,Y+49
 23427 9e1a 8A85      		ldd r24,Y+10
 23428 9e1c 9B85      		ldd r25,Y+11
 23429 9e1e AC85      		ldd r26,Y+12
 23430 9e20 BD85      		ldd r27,Y+13
 23431 9e22 F901      		movw r30,r18
 23432 9e24 8083      		st Z,r24
 23433 9e26 9183      		std Z+1,r25
 23434 9e28 A283      		std Z+2,r26
 23435 9e2a B383      		std Z+3,r27
 23436 9e2c 00C0      		rjmp .L978
 23437               	.L979:
2064:lp_solve_5.5/lp_presolve.c ****       }
2065:lp_solve_5.5/lp_presolve.c ****     }
2066:lp_solve_5.5/lp_presolve.c ****     else {
2067:lp_solve_5.5/lp_presolve.c ****       if(my_infinite(lp, upX))
 23438               		.loc 2 2067 0
 23439 9e2e 8E85      		ldd r24,Y+14
 23440 9e30 9F85      		ldd r25,Y+15
 23441 9e32 A889      		ldd r26,Y+16
 23442 9e34 B989      		ldd r27,Y+17
 23443 9e36 BF77      		andi r27,0x7f
 23444 9e38 2A89      		ldd r18,Y+18
 23445 9e3a 3B89      		ldd r19,Y+19
 23446 9e3c 265F      		subi r18,-10
 23447 9e3e 3C4F      		sbci r19,-4
 23448 9e40 F901      		movw r30,r18
 23449 9e42 2081      		ld r18,Z
 23450 9e44 3181      		ldd r19,Z+1
 23451 9e46 4281      		ldd r20,Z+2
 23452 9e48 5381      		ldd r21,Z+3
 23453 9e4a BC01      		movw r22,r24
 23454 9e4c CD01      		movw r24,r26
 23455 9e4e 0E94 0000 		call __gesf2
 23456 9e52 8823      		tst r24
 23457 9e54 04F0      		brlt .L1008
2068:lp_solve_5.5/lp_presolve.c ****         isDualFREE = FALSE;
 23458               		.loc 2 2068 0
 23459 9e56 1982      		std Y+1,__zero_reg__
 23460 9e58 00C0      		rjmp .L978
 23461               	.L1008:
2069:lp_solve_5.5/lp_presolve.c ****       else {
2070:lp_solve_5.5/lp_presolve.c ****         if(is_int(lp, colnr) && (upX != 0))
 23462               		.loc 2 2070 0
 23463 9e5a 2EA5      		ldd r18,Y+46
 23464 9e5c 3FA5      		ldd r19,Y+47
 23465 9e5e 8A89      		ldd r24,Y+18
 23466 9e60 9B89      		ldd r25,Y+19
 23467 9e62 B901      		movw r22,r18
 23468 9e64 0E94 0000 		call is_int
 23469 9e68 8823      		tst r24
 23470 9e6a 01F0      		breq .L986
 23471               		.loc 2 2070 0 is_stmt 0 discriminator 1
 23472 9e6c 20E0      		ldi r18,0
 23473 9e6e 30E0      		ldi r19,0
 23474 9e70 A901      		movw r20,r18
 23475 9e72 6E85      		ldd r22,Y+14
 23476 9e74 7F85      		ldd r23,Y+15
 23477 9e76 8889      		ldd r24,Y+16
 23478 9e78 9989      		ldd r25,Y+17
 23479 9e7a 0E94 0000 		call __nesf2
 23480 9e7e 8823      		tst r24
 23481 9e80 01F0      		breq .L986
2071:lp_solve_5.5/lp_presolve.c ****           *fixValue = floor(upX+PRESOLVE_EPSVALUE);
 23482               		.loc 2 2071 0 is_stmt 1
 23483 9e82 8A89      		ldd r24,Y+18
 23484 9e84 9B89      		ldd r25,Y+19
 23485 9e86 865E      		subi r24,-26
 23486 9e88 9C4F      		sbci r25,-4
 23487 9e8a FC01      		movw r30,r24
 23488 9e8c 8081      		ld r24,Z
 23489 9e8e 9181      		ldd r25,Z+1
 23490 9e90 A281      		ldd r26,Z+2
 23491 9e92 B381      		ldd r27,Z+3
 23492 9e94 2DEC      		ldi r18,lo8(-51)
 23493 9e96 3CEC      		ldi r19,lo8(-52)
 23494 9e98 4CEC      		ldi r20,lo8(-52)
 23495 9e9a 5DE3      		ldi r21,lo8(61)
 23496 9e9c BC01      		movw r22,r24
 23497 9e9e CD01      		movw r24,r26
 23498 9ea0 0E94 0000 		call __mulsf3
 23499 9ea4 DC01      		movw r26,r24
 23500 9ea6 CB01      		movw r24,r22
 23501 9ea8 2E85      		ldd r18,Y+14
 23502 9eaa 3F85      		ldd r19,Y+15
 23503 9eac 4889      		ldd r20,Y+16
 23504 9eae 5989      		ldd r21,Y+17
 23505 9eb0 BC01      		movw r22,r24
 23506 9eb2 CD01      		movw r24,r26
 23507 9eb4 0E94 0000 		call __addsf3
 23508 9eb8 DC01      		movw r26,r24
 23509 9eba CB01      		movw r24,r22
 23510 9ebc BC01      		movw r22,r24
 23511 9ebe CD01      		movw r24,r26
 23512 9ec0 0E94 0000 		call floor
 23513 9ec4 DC01      		movw r26,r24
 23514 9ec6 CB01      		movw r24,r22
 23515 9ec8 28A9      		ldd r18,Y+48
 23516 9eca 39A9      		ldd r19,Y+49
 23517 9ecc F901      		movw r30,r18
 23518 9ece 8083      		st Z,r24
 23519 9ed0 9183      		std Z+1,r25
 23520 9ed2 A283      		std Z+2,r26
 23521 9ed4 B383      		std Z+3,r27
 23522 9ed6 00C0      		rjmp .L978
 23523               	.L986:
2072:lp_solve_5.5/lp_presolve.c ****         else
2073:lp_solve_5.5/lp_presolve.c ****           *fixValue = upX;
 23524               		.loc 2 2073 0
 23525 9ed8 28A9      		ldd r18,Y+48
 23526 9eda 39A9      		ldd r19,Y+49
 23527 9edc 8E85      		ldd r24,Y+14
 23528 9ede 9F85      		ldd r25,Y+15
 23529 9ee0 A889      		ldd r26,Y+16
 23530 9ee2 B989      		ldd r27,Y+17
 23531 9ee4 F901      		movw r30,r18
 23532 9ee6 8083      		st Z,r24
 23533 9ee8 9183      		std Z+1,r25
 23534 9eea A283      		std Z+2,r26
 23535 9eec B383      		std Z+3,r27
 23536               	.L978:
2074:lp_solve_5.5/lp_presolve.c ****       }
2075:lp_solve_5.5/lp_presolve.c ****     }
2076:lp_solve_5.5/lp_presolve.c ****     if((*fixValue != 0) && SOS_is_member(lp->SOS, 0, colnr))
 23537               		.loc 2 2076 0
 23538 9eee 88A9      		ldd r24,Y+48
 23539 9ef0 99A9      		ldd r25,Y+49
 23540 9ef2 FC01      		movw r30,r24
 23541 9ef4 8081      		ld r24,Z
 23542 9ef6 9181      		ldd r25,Z+1
 23543 9ef8 A281      		ldd r26,Z+2
 23544 9efa B381      		ldd r27,Z+3
 23545 9efc 20E0      		ldi r18,0
 23546 9efe 30E0      		ldi r19,0
 23547 9f00 A901      		movw r20,r18
 23548 9f02 BC01      		movw r22,r24
 23549 9f04 CD01      		movw r24,r26
 23550 9f06 0E94 0000 		call __nesf2
 23551 9f0a 8823      		tst r24
 23552 9f0c 01F0      		breq .L971
 23553               		.loc 2 2076 0 is_stmt 0 discriminator 1
 23554 9f0e 8A89      		ldd r24,Y+18
 23555 9f10 9B89      		ldd r25,Y+19
 23556 9f12 8256      		subi r24,98
 23557 9f14 9D4F      		sbci r25,-3
 23558 9f16 FC01      		movw r30,r24
 23559 9f18 8081      		ld r24,Z
 23560 9f1a 9181      		ldd r25,Z+1
 23561 9f1c 2EA5      		ldd r18,Y+46
 23562 9f1e 3FA5      		ldd r19,Y+47
 23563 9f20 A901      		movw r20,r18
 23564 9f22 60E0      		ldi r22,0
 23565 9f24 70E0      		ldi r23,0
 23566 9f26 0E94 0000 		call SOS_is_member
 23567 9f2a 892B      		or r24,r25
 23568 9f2c 01F0      		breq .L971
2077:lp_solve_5.5/lp_presolve.c ****       return( FALSE );
 23569               		.loc 2 2077 0 is_stmt 1
 23570 9f2e 80E0      		ldi r24,0
 23571 9f30 00C0      		rjmp .L937
 23572               	.L971:
2078:lp_solve_5.5/lp_presolve.c **** 
2079:lp_solve_5.5/lp_presolve.c ****   }
2080:lp_solve_5.5/lp_presolve.c **** 
2081:lp_solve_5.5/lp_presolve.c ****   return( isDualFREE );
 23573               		.loc 2 2081 0
 23574 9f32 8981      		ldd r24,Y+1
 23575               	.L937:
 23576               	/* epilogue start */
2082:lp_solve_5.5/lp_presolve.c **** }
 23577               		.loc 2 2082 0
 23578 9f34 E396      		adiw r28,51
 23579 9f36 0FB6      		in __tmp_reg__,__SREG__
 23580 9f38 F894      		cli
 23581 9f3a DEBF      		out __SP_H__,r29
 23582 9f3c 0FBE      		out __SREG__,__tmp_reg__
 23583 9f3e CDBF      		out __SP_L__,r28
 23584 9f40 DF91      		pop r29
 23585 9f42 CF91      		pop r28
 23586 9f44 1F91      		pop r17
 23587 9f46 0F91      		pop r16
 23588 9f48 FF90      		pop r15
 23589 9f4a EF90      		pop r14
 23590 9f4c DF90      		pop r13
 23591 9f4e CF90      		pop r12
 23592 9f50 0895      		ret
 23593               		.cfi_endproc
 23594               	.LFE60:
 23596               	.global	presolve_probefix01
 23598               	presolve_probefix01:
 23599               	.LFB61:
2083:lp_solve_5.5/lp_presolve.c **** 
2084:lp_solve_5.5/lp_presolve.c **** #if 0
2085:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_probefix01(presolverec *psdata, int colnr, REAL *fixvalue)
2086:lp_solve_5.5/lp_presolve.c **** {
2087:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
2088:lp_solve_5.5/lp_presolve.c ****   int      i, ix, item;
2089:lp_solve_5.5/lp_presolve.c ****   REAL     loLim, absvalue, epsvalue = psdata->epsvalue;
2090:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
2091:lp_solve_5.5/lp_presolve.c ****   MYBOOL   chsign, canfix = FALSE;
2092:lp_solve_5.5/lp_presolve.c **** 
2093:lp_solve_5.5/lp_presolve.c ****   if(!is_binary(lp, colnr))
2094:lp_solve_5.5/lp_presolve.c ****     return( canfix );
2095:lp_solve_5.5/lp_presolve.c **** 
2096:lp_solve_5.5/lp_presolve.c ****   /* Loop over all active rows to search for fixing opportunity */
2097:lp_solve_5.5/lp_presolve.c ****   item = 0;
2098:lp_solve_5.5/lp_presolve.c ****   for(ix = presolve_nextrow(psdata, colnr, &item);
2099:lp_solve_5.5/lp_presolve.c ****       (ix >= 0) && !canfix;
2100:lp_solve_5.5/lp_presolve.c ****       ix = presolve_nextrow(psdata, colnr, &item)) {
2101:lp_solve_5.5/lp_presolve.c ****     i = COL_MAT_ROWNR(ix);
2102:lp_solve_5.5/lp_presolve.c ****     *fixvalue = COL_MAT_VALUE(ix);
2103:lp_solve_5.5/lp_presolve.c ****     chsign = is_chsign(lp, i);
2104:lp_solve_5.5/lp_presolve.c **** 
2105:lp_solve_5.5/lp_presolve.c ****     /* First check the lower bound of the normalized constraint */
2106:lp_solve_5.5/lp_presolve.c ****     loLim = presolve_sumplumin(lp, i, psdata->rows, chsign);
2107:lp_solve_5.5/lp_presolve.c ****     loLim = my_chsign(chsign, loLim);
2108:lp_solve_5.5/lp_presolve.c ****     absvalue = fabs(*fixvalue);
2109:lp_solve_5.5/lp_presolve.c ****     canfix = (MYBOOL) ((loLim + absvalue > lp->orig_rhs[i]+epsvalue*MAX(1, absvalue)));
2110:lp_solve_5.5/lp_presolve.c **** 
2111:lp_solve_5.5/lp_presolve.c ****     /* If we were unsuccessful in fixing above, try the upper bound
2112:lp_solve_5.5/lp_presolve.c ****        of the normalized constraint - if it is finite */
2113:lp_solve_5.5/lp_presolve.c ****     if(!canfix && !my_infinite(lp, get_rh_range(lp, i))) {
2114:lp_solve_5.5/lp_presolve.c ****       loLim = presolve_sumplumin(lp, i, psdata->rows, (MYBOOL) !chsign);
2115:lp_solve_5.5/lp_presolve.c ****       loLim = my_chsign(!chsign, loLim);
2116:lp_solve_5.5/lp_presolve.c ****       *fixvalue = -(*fixvalue);
2117:lp_solve_5.5/lp_presolve.c ****       canfix = (MYBOOL) ((loLim + absvalue > get_rh_range(lp, i)-lp->orig_rhs[i]+epsvalue*MAX(1, ab
2118:lp_solve_5.5/lp_presolve.c ****     }
2119:lp_solve_5.5/lp_presolve.c ****   }
2120:lp_solve_5.5/lp_presolve.c **** 
2121:lp_solve_5.5/lp_presolve.c ****   /* Check if we were successful in identifying fixing opportunity */
2122:lp_solve_5.5/lp_presolve.c ****   if(canfix) {
2123:lp_solve_5.5/lp_presolve.c ****     if(*fixvalue < 0)
2124:lp_solve_5.5/lp_presolve.c ****       *fixvalue = 1;
2125:lp_solve_5.5/lp_presolve.c ****     else
2126:lp_solve_5.5/lp_presolve.c ****       *fixvalue = 0;
2127:lp_solve_5.5/lp_presolve.c ****   }
2128:lp_solve_5.5/lp_presolve.c ****   return( canfix );
2129:lp_solve_5.5/lp_presolve.c **** }
2130:lp_solve_5.5/lp_presolve.c **** #else
2131:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_probefix01(presolverec *psdata, int colnr, REAL *fixvalue)
2132:lp_solve_5.5/lp_presolve.c **** {
 23600               		.loc 2 2132 0
 23601               		.cfi_startproc
 23602 9f52 CF92      		push r12
 23603               	.LCFI336:
 23604               		.cfi_def_cfa_offset 3
 23605               		.cfi_offset 12, -2
 23606 9f54 DF92      		push r13
 23607               	.LCFI337:
 23608               		.cfi_def_cfa_offset 4
 23609               		.cfi_offset 13, -3
 23610 9f56 EF92      		push r14
 23611               	.LCFI338:
 23612               		.cfi_def_cfa_offset 5
 23613               		.cfi_offset 14, -4
 23614 9f58 FF92      		push r15
 23615               	.LCFI339:
 23616               		.cfi_def_cfa_offset 6
 23617               		.cfi_offset 15, -5
 23618 9f5a 0F93      		push r16
 23619               	.LCFI340:
 23620               		.cfi_def_cfa_offset 7
 23621               		.cfi_offset 16, -6
 23622 9f5c 1F93      		push r17
 23623               	.LCFI341:
 23624               		.cfi_def_cfa_offset 8
 23625               		.cfi_offset 17, -7
 23626 9f5e CF93      		push r28
 23627               	.LCFI342:
 23628               		.cfi_def_cfa_offset 9
 23629               		.cfi_offset 28, -8
 23630 9f60 DF93      		push r29
 23631               	.LCFI343:
 23632               		.cfi_def_cfa_offset 10
 23633               		.cfi_offset 29, -9
 23634 9f62 CDB7      		in r28,__SP_L__
 23635 9f64 DEB7      		in r29,__SP_H__
 23636               	.LCFI344:
 23637               		.cfi_def_cfa_register 28
 23638 9f66 AA97      		sbiw r28,42
 23639               	.LCFI345:
 23640               		.cfi_def_cfa_offset 52
 23641 9f68 0FB6      		in __tmp_reg__,__SREG__
 23642 9f6a F894      		cli
 23643 9f6c DEBF      		out __SP_H__,r29
 23644 9f6e 0FBE      		out __SREG__,__tmp_reg__
 23645 9f70 CDBF      		out __SP_L__,r28
 23646               	/* prologue: function */
 23647               	/* frame size = 42 */
 23648               	/* stack size = 50 */
 23649               	.L__stack_usage = 50
 23650 9f72 9EA3      		std Y+38,r25
 23651 9f74 8DA3      		std Y+37,r24
 23652 9f76 78A7      		std Y+40,r23
 23653 9f78 6FA3      		std Y+39,r22
 23654 9f7a 5AA7      		std Y+42,r21
 23655 9f7c 49A7      		std Y+41,r20
2133:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 23656               		.loc 2 2133 0
 23657 9f7e 8DA1      		ldd r24,Y+37
 23658 9f80 9EA1      		ldd r25,Y+38
 23659 9f82 FC01      		movw r30,r24
 23660 9f84 8289      		ldd r24,Z+18
 23661 9f86 9389      		ldd r25,Z+19
 23662 9f88 9887      		std Y+8,r25
 23663 9f8a 8F83      		std Y+7,r24
2134:lp_solve_5.5/lp_presolve.c ****   int      i, ix, item;
2135:lp_solve_5.5/lp_presolve.c ****   REAL     loLim, upLim, range, absvalue, epsvalue = psdata->epsvalue, tolgap;
 23664               		.loc 2 2135 0
 23665 9f8c 8DA1      		ldd r24,Y+37
 23666 9f8e 9EA1      		ldd r25,Y+38
 23667 9f90 FC01      		movw r30,r24
 23668 9f92 8489      		ldd r24,Z+20
 23669 9f94 9589      		ldd r25,Z+21
 23670 9f96 A689      		ldd r26,Z+22
 23671 9f98 B789      		ldd r27,Z+23
 23672 9f9a 8987      		std Y+9,r24
 23673 9f9c 9A87      		std Y+10,r25
 23674 9f9e AB87      		std Y+11,r26
 23675 9fa0 BC87      		std Y+12,r27
2136:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 23676               		.loc 2 2136 0
 23677 9fa2 8F81      		ldd r24,Y+7
 23678 9fa4 9885      		ldd r25,Y+8
 23679 9fa6 8A54      		subi r24,74
 23680 9fa8 9D4F      		sbci r25,-3
 23681 9faa FC01      		movw r30,r24
 23682 9fac 8081      		ld r24,Z
 23683 9fae 9181      		ldd r25,Z+1
 23684 9fb0 9E87      		std Y+14,r25
 23685 9fb2 8D87      		std Y+13,r24
2137:lp_solve_5.5/lp_presolve.c ****   MYBOOL   chsign, status = FALSE;
 23686               		.loc 2 2137 0
 23687 9fb4 1F86      		std Y+15,__zero_reg__
2138:lp_solve_5.5/lp_presolve.c **** 
2139:lp_solve_5.5/lp_presolve.c ****   if(!is_binary(lp, colnr))
 23688               		.loc 2 2139 0
 23689 9fb6 2FA1      		ldd r18,Y+39
 23690 9fb8 38A5      		ldd r19,Y+40
 23691 9fba 8F81      		ldd r24,Y+7
 23692 9fbc 9885      		ldd r25,Y+8
 23693 9fbe B901      		movw r22,r18
 23694 9fc0 0E94 0000 		call is_binary
 23695 9fc4 8823      		tst r24
 23696 9fc6 01F4      		brne .L1011
2140:lp_solve_5.5/lp_presolve.c ****     return( status );
 23697               		.loc 2 2140 0
 23698 9fc8 8F85      		ldd r24,Y+15
 23699 9fca 00C0      		rjmp .L1047
 23700               	.L1011:
2141:lp_solve_5.5/lp_presolve.c **** 
2142:lp_solve_5.5/lp_presolve.c ****   /* Loop over all active rows to search for fixing opportunity.  The logic is that if a
2143:lp_solve_5.5/lp_presolve.c ****      constraint gets violated by setting a variable at one of its bounds, then it can be
2144:lp_solve_5.5/lp_presolve.c ****      fixed at its opposite bound. */
2145:lp_solve_5.5/lp_presolve.c ****   item = 0;
 23701               		.loc 2 2145 0
 23702 9fcc 1C8E      		std Y+28,__zero_reg__
 23703 9fce 1B8E      		std Y+27,__zero_reg__
2146:lp_solve_5.5/lp_presolve.c **** 
2147:lp_solve_5.5/lp_presolve.c ****   for(ix = presolve_nextrow(psdata, colnr, &item); (ix >= 0); ix = presolve_nextrow(psdata, colnr, 
 23704               		.loc 2 2147 0
 23705 9fd0 AE01      		movw r20,r28
 23706 9fd2 455E      		subi r20,-27
 23707 9fd4 5F4F      		sbci r21,-1
 23708 9fd6 2FA1      		ldd r18,Y+39
 23709 9fd8 38A5      		ldd r19,Y+40
 23710 9fda 8DA1      		ldd r24,Y+37
 23711 9fdc 9EA1      		ldd r25,Y+38
 23712 9fde B901      		movw r22,r18
 23713 9fe0 0E94 0000 		call presolve_nextrow
 23714 9fe4 9A83      		std Y+2,r25
 23715 9fe6 8983      		std Y+1,r24
 23716 9fe8 00C0      		rjmp .L1013
 23717               	.L1046:
2148:lp_solve_5.5/lp_presolve.c ****     i = COL_MAT_ROWNR(ix);
 23718               		.loc 2 2148 0
 23719 9fea 8D85      		ldd r24,Y+13
 23720 9fec 9E85      		ldd r25,Y+14
 23721 9fee FC01      		movw r30,r24
 23722 9ff0 2685      		ldd r18,Z+14
 23723 9ff2 3785      		ldd r19,Z+15
 23724 9ff4 8981      		ldd r24,Y+1
 23725 9ff6 9A81      		ldd r25,Y+2
 23726 9ff8 880F      		lsl r24
 23727 9ffa 991F      		rol r25
 23728 9ffc 820F      		add r24,r18
 23729 9ffe 931F      		adc r25,r19
 23730 a000 FC01      		movw r30,r24
 23731 a002 8081      		ld r24,Z
 23732 a004 9181      		ldd r25,Z+1
 23733 a006 998B      		std Y+17,r25
 23734 a008 888B      		std Y+16,r24
2149:lp_solve_5.5/lp_presolve.c ****     *fixvalue = COL_MAT_VALUE(ix);
 23735               		.loc 2 2149 0
 23736 a00a 8D85      		ldd r24,Y+13
 23737 a00c 9E85      		ldd r25,Y+14
 23738 a00e FC01      		movw r30,r24
 23739 a010 2089      		ldd r18,Z+16
 23740 a012 3189      		ldd r19,Z+17
 23741 a014 8981      		ldd r24,Y+1
 23742 a016 9A81      		ldd r25,Y+2
 23743 a018 880F      		lsl r24
 23744 a01a 991F      		rol r25
 23745 a01c 880F      		lsl r24
 23746 a01e 991F      		rol r25
 23747 a020 820F      		add r24,r18
 23748 a022 931F      		adc r25,r19
 23749 a024 FC01      		movw r30,r24
 23750 a026 8081      		ld r24,Z
 23751 a028 9181      		ldd r25,Z+1
 23752 a02a A281      		ldd r26,Z+2
 23753 a02c B381      		ldd r27,Z+3
 23754 a02e 29A5      		ldd r18,Y+41
 23755 a030 3AA5      		ldd r19,Y+42
 23756 a032 F901      		movw r30,r18
 23757 a034 8083      		st Z,r24
 23758 a036 9183      		std Z+1,r25
 23759 a038 A283      		std Z+2,r26
 23760 a03a B383      		std Z+3,r27
2150:lp_solve_5.5/lp_presolve.c ****     absvalue = fabs(*fixvalue);
 23761               		.loc 2 2150 0
 23762 a03c 89A5      		ldd r24,Y+41
 23763 a03e 9AA5      		ldd r25,Y+42
 23764 a040 FC01      		movw r30,r24
 23765 a042 8081      		ld r24,Z
 23766 a044 9181      		ldd r25,Z+1
 23767 a046 A281      		ldd r26,Z+2
 23768 a048 B381      		ldd r27,Z+3
 23769 a04a BF77      		andi r27,0x7f
 23770 a04c 8B83      		std Y+3,r24
 23771 a04e 9C83      		std Y+4,r25
 23772 a050 AD83      		std Y+5,r26
 23773 a052 BE83      		std Y+6,r27
2151:lp_solve_5.5/lp_presolve.c ****     SETMIN(absvalue, 100);
 23774               		.loc 2 2151 0
 23775 a054 20E0      		ldi r18,0
 23776 a056 30E0      		ldi r19,0
 23777 a058 48EC      		ldi r20,lo8(-56)
 23778 a05a 52E4      		ldi r21,lo8(66)
 23779 a05c 6B81      		ldd r22,Y+3
 23780 a05e 7C81      		ldd r23,Y+4
 23781 a060 8D81      		ldd r24,Y+5
 23782 a062 9E81      		ldd r25,Y+6
 23783 a064 0E94 0000 		call __gtsf2
 23784 a068 1816      		cp __zero_reg__,r24
 23785 a06a 04F4      		brge .L1014
 23786               		.loc 2 2151 0 is_stmt 0 discriminator 1
 23787 a06c 80E0      		ldi r24,0
 23788 a06e 90E0      		ldi r25,0
 23789 a070 A8EC      		ldi r26,lo8(-56)
 23790 a072 B2E4      		ldi r27,lo8(66)
 23791 a074 8B83      		std Y+3,r24
 23792 a076 9C83      		std Y+4,r25
 23793 a078 AD83      		std Y+5,r26
 23794 a07a BE83      		std Y+6,r27
 23795               	.L1014:
2152:lp_solve_5.5/lp_presolve.c ****     tolgap = epsvalue*MAX(1, absvalue);
 23796               		.loc 2 2152 0 is_stmt 1
 23797 a07c 20E0      		ldi r18,0
 23798 a07e 30E0      		ldi r19,0
 23799 a080 40E8      		ldi r20,lo8(-128)
 23800 a082 5FE3      		ldi r21,lo8(63)
 23801 a084 6B81      		ldd r22,Y+3
 23802 a086 7C81      		ldd r23,Y+4
 23803 a088 8D81      		ldd r24,Y+5
 23804 a08a 9E81      		ldd r25,Y+6
 23805 a08c 0E94 0000 		call __ltsf2
 23806 a090 8823      		tst r24
 23807 a092 04F4      		brge .L1061
 23808               		.loc 2 2152 0 is_stmt 0 discriminator 1
 23809 a094 80E0      		ldi r24,0
 23810 a096 90E0      		ldi r25,0
 23811 a098 A0E8      		ldi r26,lo8(-128)
 23812 a09a BFE3      		ldi r27,lo8(63)
 23813 a09c 00C0      		rjmp .L1018
 23814               	.L1061:
 23815               		.loc 2 2152 0 discriminator 2
 23816 a09e 8B81      		ldd r24,Y+3
 23817 a0a0 9C81      		ldd r25,Y+4
 23818 a0a2 AD81      		ldd r26,Y+5
 23819 a0a4 BE81      		ldd r27,Y+6
 23820               	.L1018:
 23821               		.loc 2 2152 0 discriminator 4
 23822 a0a6 2985      		ldd r18,Y+9
 23823 a0a8 3A85      		ldd r19,Y+10
 23824 a0aa 4B85      		ldd r20,Y+11
 23825 a0ac 5C85      		ldd r21,Y+12
 23826 a0ae BC01      		movw r22,r24
 23827 a0b0 CD01      		movw r24,r26
 23828 a0b2 0E94 0000 		call __mulsf3
 23829 a0b6 DC01      		movw r26,r24
 23830 a0b8 CB01      		movw r24,r22
 23831 a0ba 8A8B      		std Y+18,r24
 23832 a0bc 9B8B      		std Y+19,r25
 23833 a0be AC8B      		std Y+20,r26
 23834 a0c0 BD8B      		std Y+21,r27
2153:lp_solve_5.5/lp_presolve.c ****     chsign = is_chsign(lp, i);
 23835               		.loc 2 2153 0 is_stmt 1 discriminator 4
 23836 a0c2 2889      		ldd r18,Y+16
 23837 a0c4 3989      		ldd r19,Y+17
 23838 a0c6 8F81      		ldd r24,Y+7
 23839 a0c8 9885      		ldd r25,Y+8
 23840 a0ca B901      		movw r22,r18
 23841 a0cc 0E94 0000 		call is_chsign
 23842 a0d0 8E8B      		std Y+22,r24
2154:lp_solve_5.5/lp_presolve.c **** 
2155:lp_solve_5.5/lp_presolve.c ****     /* Get the constraint value limits based on variable bounds, normalized to LE constraint */
2156:lp_solve_5.5/lp_presolve.c ****     loLim = presolve_sumplumin(lp, i, psdata->rows, FALSE);
 23843               		.loc 2 2156 0 discriminator 4
 23844 a0d2 8DA1      		ldd r24,Y+37
 23845 a0d4 9EA1      		ldd r25,Y+38
 23846 a0d6 FC01      		movw r30,r24
 23847 a0d8 4081      		ld r20,Z
 23848 a0da 5181      		ldd r21,Z+1
 23849 a0dc 6889      		ldd r22,Y+16
 23850 a0de 7989      		ldd r23,Y+17
 23851 a0e0 8F81      		ldd r24,Y+7
 23852 a0e2 9885      		ldd r25,Y+8
 23853 a0e4 20E0      		ldi r18,0
 23854 a0e6 0E94 0000 		call presolve_sumplumin
 23855 a0ea DC01      		movw r26,r24
 23856 a0ec CB01      		movw r24,r22
 23857 a0ee 8D8F      		std Y+29,r24
 23858 a0f0 9E8F      		std Y+30,r25
 23859 a0f2 AF8F      		std Y+31,r26
 23860 a0f4 B8A3      		std Y+32,r27
2157:lp_solve_5.5/lp_presolve.c ****     upLim = presolve_sumplumin(lp, i, psdata->rows, TRUE);
 23861               		.loc 2 2157 0 discriminator 4
 23862 a0f6 8DA1      		ldd r24,Y+37
 23863 a0f8 9EA1      		ldd r25,Y+38
 23864 a0fa FC01      		movw r30,r24
 23865 a0fc 4081      		ld r20,Z
 23866 a0fe 5181      		ldd r21,Z+1
 23867 a100 6889      		ldd r22,Y+16
 23868 a102 7989      		ldd r23,Y+17
 23869 a104 8F81      		ldd r24,Y+7
 23870 a106 9885      		ldd r25,Y+8
 23871 a108 21E0      		ldi r18,lo8(1)
 23872 a10a 0E94 0000 		call presolve_sumplumin
 23873 a10e DC01      		movw r26,r24
 23874 a110 CB01      		movw r24,r22
 23875 a112 89A3      		std Y+33,r24
 23876 a114 9AA3      		std Y+34,r25
 23877 a116 ABA3      		std Y+35,r26
 23878 a118 BCA3      		std Y+36,r27
2158:lp_solve_5.5/lp_presolve.c ****     if(chsign) {
 23879               		.loc 2 2158 0 discriminator 4
 23880 a11a 8E89      		ldd r24,Y+22
 23881 a11c 8823      		tst r24
 23882 a11e 01F4      		brne .+2
 23883 a120 00C0      		rjmp .L1019
2159:lp_solve_5.5/lp_presolve.c ****       loLim = my_chsign(chsign, loLim);
 23884               		.loc 2 2159 0
 23885 a122 8E89      		ldd r24,Y+22
 23886 a124 8823      		tst r24
 23887 a126 01F0      		breq .L1020
 23888               		.loc 2 2159 0 is_stmt 0 discriminator 1
 23889 a128 8D8D      		ldd r24,Y+29
 23890 a12a 9E8D      		ldd r25,Y+30
 23891 a12c AF8D      		ldd r26,Y+31
 23892 a12e B8A1      		ldd r27,Y+32
 23893 a130 20E0      		ldi r18,0
 23894 a132 30E0      		ldi r19,0
 23895 a134 A901      		movw r20,r18
 23896 a136 BC01      		movw r22,r24
 23897 a138 CD01      		movw r24,r26
 23898 a13a 0E94 0000 		call __nesf2
 23899 a13e 8823      		tst r24
 23900 a140 01F0      		breq .L1020
 23901               		.loc 2 2159 0 discriminator 3
 23902 a142 8D8D      		ldd r24,Y+29
 23903 a144 9E8D      		ldd r25,Y+30
 23904 a146 AF8D      		ldd r26,Y+31
 23905 a148 B8A1      		ldd r27,Y+32
 23906 a14a B058      		subi r27,0x80
 23907 a14c 00C0      		rjmp .L1022
 23908               	.L1020:
 23909               		.loc 2 2159 0 discriminator 4
 23910 a14e 8D8D      		ldd r24,Y+29
 23911 a150 9E8D      		ldd r25,Y+30
 23912 a152 AF8D      		ldd r26,Y+31
 23913 a154 B8A1      		ldd r27,Y+32
 23914               	.L1022:
 23915               		.loc 2 2159 0 discriminator 6
 23916 a156 8D8F      		std Y+29,r24
 23917 a158 9E8F      		std Y+30,r25
 23918 a15a AF8F      		std Y+31,r26
 23919 a15c B8A3      		std Y+32,r27
2160:lp_solve_5.5/lp_presolve.c ****       upLim = my_chsign(chsign, upLim);
 23920               		.loc 2 2160 0 is_stmt 1 discriminator 6
 23921 a15e 8E89      		ldd r24,Y+22
 23922 a160 8823      		tst r24
 23923 a162 01F0      		breq .L1023
 23924               		.loc 2 2160 0 is_stmt 0 discriminator 1
 23925 a164 89A1      		ldd r24,Y+33
 23926 a166 9AA1      		ldd r25,Y+34
 23927 a168 ABA1      		ldd r26,Y+35
 23928 a16a BCA1      		ldd r27,Y+36
 23929 a16c 20E0      		ldi r18,0
 23930 a16e 30E0      		ldi r19,0
 23931 a170 A901      		movw r20,r18
 23932 a172 BC01      		movw r22,r24
 23933 a174 CD01      		movw r24,r26
 23934 a176 0E94 0000 		call __nesf2
 23935 a17a 8823      		tst r24
 23936 a17c 01F0      		breq .L1023
 23937               		.loc 2 2160 0 discriminator 3
 23938 a17e 89A1      		ldd r24,Y+33
 23939 a180 9AA1      		ldd r25,Y+34
 23940 a182 ABA1      		ldd r26,Y+35
 23941 a184 BCA1      		ldd r27,Y+36
 23942 a186 B058      		subi r27,0x80
 23943 a188 00C0      		rjmp .L1025
 23944               	.L1023:
 23945               		.loc 2 2160 0 discriminator 4
 23946 a18a 89A1      		ldd r24,Y+33
 23947 a18c 9AA1      		ldd r25,Y+34
 23948 a18e ABA1      		ldd r26,Y+35
 23949 a190 BCA1      		ldd r27,Y+36
 23950               	.L1025:
 23951               		.loc 2 2160 0 discriminator 6
 23952 a192 89A3      		std Y+33,r24
 23953 a194 9AA3      		std Y+34,r25
 23954 a196 ABA3      		std Y+35,r26
 23955 a198 BCA3      		std Y+36,r27
2161:lp_solve_5.5/lp_presolve.c ****       swapREAL(&loLim, &upLim);
 23956               		.loc 2 2161 0 is_stmt 1 discriminator 6
 23957 a19a 9E01      		movw r18,r28
 23958 a19c 2F5D      		subi r18,-33
 23959 a19e 3F4F      		sbci r19,-1
 23960 a1a0 CE01      		movw r24,r28
 23961 a1a2 4D96      		adiw r24,29
 23962 a1a4 B901      		movw r22,r18
 23963 a1a6 0E94 0000 		call swapREAL
 23964               	.L1019:
2162:lp_solve_5.5/lp_presolve.c ****     }
2163:lp_solve_5.5/lp_presolve.c **** 
2164:lp_solve_5.5/lp_presolve.c ****     /* Check the upper constraint bound for possible violation if the value were to be fixed at 1 *
2165:lp_solve_5.5/lp_presolve.c ****     if(loLim + *fixvalue > lp->orig_rhs[i]+tolgap) {
 23965               		.loc 2 2165 0
 23966 a1aa 89A5      		ldd r24,Y+41
 23967 a1ac 9AA5      		ldd r25,Y+42
 23968 a1ae FC01      		movw r30,r24
 23969 a1b0 8081      		ld r24,Z
 23970 a1b2 9181      		ldd r25,Z+1
 23971 a1b4 A281      		ldd r26,Z+2
 23972 a1b6 B381      		ldd r27,Z+3
 23973 a1b8 2D8D      		ldd r18,Y+29
 23974 a1ba 3E8D      		ldd r19,Y+30
 23975 a1bc 4F8D      		ldd r20,Y+31
 23976 a1be 58A1      		ldd r21,Y+32
 23977 a1c0 BC01      		movw r22,r24
 23978 a1c2 CD01      		movw r24,r26
 23979 a1c4 0E94 0000 		call __addsf3
 23980 a1c8 DC01      		movw r26,r24
 23981 a1ca CB01      		movw r24,r22
 23982 a1cc 6C01      		movw r12,r24
 23983 a1ce 7D01      		movw r14,r26
 23984 a1d0 8F81      		ldd r24,Y+7
 23985 a1d2 9885      		ldd r25,Y+8
 23986 a1d4 8A55      		subi r24,90
 23987 a1d6 9D4F      		sbci r25,-3
 23988 a1d8 FC01      		movw r30,r24
 23989 a1da 2081      		ld r18,Z
 23990 a1dc 3181      		ldd r19,Z+1
 23991 a1de 8889      		ldd r24,Y+16
 23992 a1e0 9989      		ldd r25,Y+17
 23993 a1e2 880F      		lsl r24
 23994 a1e4 991F      		rol r25
 23995 a1e6 880F      		lsl r24
 23996 a1e8 991F      		rol r25
 23997 a1ea 820F      		add r24,r18
 23998 a1ec 931F      		adc r25,r19
 23999 a1ee FC01      		movw r30,r24
 24000 a1f0 8081      		ld r24,Z
 24001 a1f2 9181      		ldd r25,Z+1
 24002 a1f4 A281      		ldd r26,Z+2
 24003 a1f6 B381      		ldd r27,Z+3
 24004 a1f8 2A89      		ldd r18,Y+18
 24005 a1fa 3B89      		ldd r19,Y+19
 24006 a1fc 4C89      		ldd r20,Y+20
 24007 a1fe 5D89      		ldd r21,Y+21
 24008 a200 BC01      		movw r22,r24
 24009 a202 CD01      		movw r24,r26
 24010 a204 0E94 0000 		call __addsf3
 24011 a208 DC01      		movw r26,r24
 24012 a20a CB01      		movw r24,r22
 24013 a20c 9C01      		movw r18,r24
 24014 a20e AD01      		movw r20,r26
 24015 a210 C701      		movw r24,r14
 24016 a212 B601      		movw r22,r12
 24017 a214 0E94 0000 		call __gtsf2
 24018 a218 1816      		cp __zero_reg__,r24
 24019 a21a 04F4      		brge .L1062
2166:lp_solve_5.5/lp_presolve.c ****       if(*fixvalue < 0)
 24020               		.loc 2 2166 0
 24021 a21c 89A5      		ldd r24,Y+41
 24022 a21e 9AA5      		ldd r25,Y+42
 24023 a220 FC01      		movw r30,r24
 24024 a222 8081      		ld r24,Z
 24025 a224 9181      		ldd r25,Z+1
 24026 a226 A281      		ldd r26,Z+2
 24027 a228 B381      		ldd r27,Z+3
 24028 a22a 20E0      		ldi r18,0
 24029 a22c 30E0      		ldi r19,0
 24030 a22e A901      		movw r20,r18
 24031 a230 BC01      		movw r22,r24
 24032 a232 CD01      		movw r24,r26
 24033 a234 0E94 0000 		call __ltsf2
 24034 a238 8823      		tst r24
 24035 a23a 04F4      		brge .L1028
2167:lp_solve_5.5/lp_presolve.c ****         presolve_setstatus(psdata, INFEASIBLE);
 24036               		.loc 2 2167 0
 24037 a23c 8DA1      		ldd r24,Y+37
 24038 a23e 9EA1      		ldd r25,Y+38
 24039 a240 20E0      		ldi r18,lo8(.LC21)
 24040 a242 30E0      		ldi r19,hi8(.LC21)
 24041 a244 47E7      		ldi r20,lo8(119)
 24042 a246 58E0      		ldi r21,lo8(8)
 24043 a248 62E0      		ldi r22,lo8(2)
 24044 a24a 70E0      		ldi r23,0
 24045 a24c 0E94 0000 		call presolve_setstatusex
 24046               	.L1028:
2168:lp_solve_5.5/lp_presolve.c ****       *fixvalue = 0;
 24047               		.loc 2 2168 0
 24048 a250 89A5      		ldd r24,Y+41
 24049 a252 9AA5      		ldd r25,Y+42
 24050 a254 FC01      		movw r30,r24
 24051 a256 1082      		st Z,__zero_reg__
 24052 a258 1182      		std Z+1,__zero_reg__
 24053 a25a 1282      		std Z+2,__zero_reg__
 24054 a25c 1382      		std Z+3,__zero_reg__
2169:lp_solve_5.5/lp_presolve.c ****       break;
 24055               		.loc 2 2169 0
 24056 a25e 00C0      		rjmp .L1030
 24057               	.L1062:
2170:lp_solve_5.5/lp_presolve.c ****     }
2171:lp_solve_5.5/lp_presolve.c **** 
2172:lp_solve_5.5/lp_presolve.c ****     /* Check the lower constraint bound for possible violation if the value were to be fixed at 1 *
2173:lp_solve_5.5/lp_presolve.c ****     range = get_rh_range(lp, i);
 24058               		.loc 2 2173 0
 24059 a260 2889      		ldd r18,Y+16
 24060 a262 3989      		ldd r19,Y+17
 24061 a264 8F81      		ldd r24,Y+7
 24062 a266 9885      		ldd r25,Y+8
 24063 a268 B901      		movw r22,r18
 24064 a26a 0E94 0000 		call get_rh_range
 24065 a26e DC01      		movw r26,r24
 24066 a270 CB01      		movw r24,r22
 24067 a272 8F8B      		std Y+23,r24
 24068 a274 988F      		std Y+24,r25
 24069 a276 A98F      		std Y+25,r26
 24070 a278 BA8F      		std Y+26,r27
2174:lp_solve_5.5/lp_presolve.c ****     if(!my_infinite(lp, range) &&
 24071               		.loc 2 2174 0
 24072 a27a 8F89      		ldd r24,Y+23
 24073 a27c 988D      		ldd r25,Y+24
 24074 a27e A98D      		ldd r26,Y+25
 24075 a280 BA8D      		ldd r27,Y+26
 24076 a282 BF77      		andi r27,0x7f
 24077 a284 2F81      		ldd r18,Y+7
 24078 a286 3885      		ldd r19,Y+8
 24079 a288 265F      		subi r18,-10
 24080 a28a 3C4F      		sbci r19,-4
 24081 a28c F901      		movw r30,r18
 24082 a28e 2081      		ld r18,Z
 24083 a290 3181      		ldd r19,Z+1
 24084 a292 4281      		ldd r20,Z+2
 24085 a294 5381      		ldd r21,Z+3
 24086 a296 11E0      		ldi r17,lo8(1)
 24087 a298 BC01      		movw r22,r24
 24088 a29a CD01      		movw r24,r26
 24089 a29c 0E94 0000 		call __gesf2
 24090 a2a0 8823      		tst r24
 24091 a2a2 04F4      		brge .L1031
 24092 a2a4 10E0      		ldi r17,0
 24093               	.L1031:
 24094 a2a6 81E0      		ldi r24,lo8(1)
 24095 a2a8 8127      		eor r24,r17
 24096 a2aa 8823      		tst r24
 24097 a2ac 01F4      		brne .+2
 24098 a2ae 00C0      		rjmp .L1032
2175:lp_solve_5.5/lp_presolve.c ****        (upLim + *fixvalue < lp->orig_rhs[i]-range-tolgap)) {
 24099               		.loc 2 2175 0 discriminator 1
 24100 a2b0 89A5      		ldd r24,Y+41
 24101 a2b2 9AA5      		ldd r25,Y+42
 24102 a2b4 FC01      		movw r30,r24
 24103 a2b6 8081      		ld r24,Z
 24104 a2b8 9181      		ldd r25,Z+1
 24105 a2ba A281      		ldd r26,Z+2
 24106 a2bc B381      		ldd r27,Z+3
 24107 a2be 29A1      		ldd r18,Y+33
 24108 a2c0 3AA1      		ldd r19,Y+34
 24109 a2c2 4BA1      		ldd r20,Y+35
 24110 a2c4 5CA1      		ldd r21,Y+36
 24111 a2c6 BC01      		movw r22,r24
 24112 a2c8 CD01      		movw r24,r26
 24113 a2ca 0E94 0000 		call __addsf3
 24114 a2ce DC01      		movw r26,r24
 24115 a2d0 CB01      		movw r24,r22
 24116 a2d2 6C01      		movw r12,r24
 24117 a2d4 7D01      		movw r14,r26
 24118 a2d6 8F81      		ldd r24,Y+7
 24119 a2d8 9885      		ldd r25,Y+8
 24120 a2da 8A55      		subi r24,90
 24121 a2dc 9D4F      		sbci r25,-3
 24122 a2de FC01      		movw r30,r24
 24123 a2e0 2081      		ld r18,Z
 24124 a2e2 3181      		ldd r19,Z+1
 24125 a2e4 8889      		ldd r24,Y+16
 24126 a2e6 9989      		ldd r25,Y+17
 24127 a2e8 880F      		lsl r24
 24128 a2ea 991F      		rol r25
 24129 a2ec 880F      		lsl r24
 24130 a2ee 991F      		rol r25
 24131 a2f0 820F      		add r24,r18
 24132 a2f2 931F      		adc r25,r19
 24133 a2f4 FC01      		movw r30,r24
 24134 a2f6 8081      		ld r24,Z
 24135 a2f8 9181      		ldd r25,Z+1
 24136 a2fa A281      		ldd r26,Z+2
 24137 a2fc B381      		ldd r27,Z+3
 24138 a2fe 2F89      		ldd r18,Y+23
 24139 a300 388D      		ldd r19,Y+24
 24140 a302 498D      		ldd r20,Y+25
 24141 a304 5A8D      		ldd r21,Y+26
 24142 a306 BC01      		movw r22,r24
 24143 a308 CD01      		movw r24,r26
 24144 a30a 0E94 0000 		call __subsf3
 24145 a30e DC01      		movw r26,r24
 24146 a310 CB01      		movw r24,r22
 24147 a312 2A89      		ldd r18,Y+18
 24148 a314 3B89      		ldd r19,Y+19
 24149 a316 4C89      		ldd r20,Y+20
 24150 a318 5D89      		ldd r21,Y+21
 24151 a31a BC01      		movw r22,r24
 24152 a31c CD01      		movw r24,r26
 24153 a31e 0E94 0000 		call __subsf3
 24154 a322 DC01      		movw r26,r24
 24155 a324 CB01      		movw r24,r22
2174:lp_solve_5.5/lp_presolve.c ****     if(!my_infinite(lp, range) &&
 24156               		.loc 2 2174 0 discriminator 1
 24157 a326 9C01      		movw r18,r24
 24158 a328 AD01      		movw r20,r26
 24159 a32a C701      		movw r24,r14
 24160 a32c B601      		movw r22,r12
 24161 a32e 0E94 0000 		call __ltsf2
 24162 a332 8823      		tst r24
 24163 a334 04F4      		brge .L1032
2176:lp_solve_5.5/lp_presolve.c ****       if(*fixvalue > 0)
 24164               		.loc 2 2176 0
 24165 a336 89A5      		ldd r24,Y+41
 24166 a338 9AA5      		ldd r25,Y+42
 24167 a33a FC01      		movw r30,r24
 24168 a33c 8081      		ld r24,Z
 24169 a33e 9181      		ldd r25,Z+1
 24170 a340 A281      		ldd r26,Z+2
 24171 a342 B381      		ldd r27,Z+3
 24172 a344 20E0      		ldi r18,0
 24173 a346 30E0      		ldi r19,0
 24174 a348 A901      		movw r20,r18
 24175 a34a BC01      		movw r22,r24
 24176 a34c CD01      		movw r24,r26
 24177 a34e 0E94 0000 		call __gtsf2
 24178 a352 1816      		cp __zero_reg__,r24
 24179 a354 04F4      		brge .L1034
2177:lp_solve_5.5/lp_presolve.c ****         presolve_setstatus(psdata, INFEASIBLE);
 24180               		.loc 2 2177 0
 24181 a356 8DA1      		ldd r24,Y+37
 24182 a358 9EA1      		ldd r25,Y+38
 24183 a35a 20E0      		ldi r18,lo8(.LC21)
 24184 a35c 30E0      		ldi r19,hi8(.LC21)
 24185 a35e 41E8      		ldi r20,lo8(-127)
 24186 a360 58E0      		ldi r21,lo8(8)
 24187 a362 62E0      		ldi r22,lo8(2)
 24188 a364 70E0      		ldi r23,0
 24189 a366 0E94 0000 		call presolve_setstatusex
 24190               	.L1034:
2178:lp_solve_5.5/lp_presolve.c ****       *fixvalue = 0;
 24191               		.loc 2 2178 0
 24192 a36a 89A5      		ldd r24,Y+41
 24193 a36c 9AA5      		ldd r25,Y+42
 24194 a36e FC01      		movw r30,r24
 24195 a370 1082      		st Z,__zero_reg__
 24196 a372 1182      		std Z+1,__zero_reg__
 24197 a374 1282      		std Z+2,__zero_reg__
 24198 a376 1382      		std Z+3,__zero_reg__
2179:lp_solve_5.5/lp_presolve.c ****       break;
 24199               		.loc 2 2179 0
 24200 a378 00C0      		rjmp .L1030
 24201               	.L1032:
2180:lp_solve_5.5/lp_presolve.c ****     }
2181:lp_solve_5.5/lp_presolve.c **** 
2182:lp_solve_5.5/lp_presolve.c ****     /* Check if we have to fix the value at 1 to avoid constraint infeasibility */
2183:lp_solve_5.5/lp_presolve.c ****     if(psdata->rows->infcount[i] >= 1)
 24202               		.loc 2 2183 0
 24203 a37a 8DA1      		ldd r24,Y+37
 24204 a37c 9EA1      		ldd r25,Y+38
 24205 a37e FC01      		movw r30,r24
 24206 a380 8081      		ld r24,Z
 24207 a382 9181      		ldd r25,Z+1
 24208 a384 FC01      		movw r30,r24
 24209 a386 2485      		ldd r18,Z+12
 24210 a388 3585      		ldd r19,Z+13
 24211 a38a 8889      		ldd r24,Y+16
 24212 a38c 9989      		ldd r25,Y+17
 24213 a38e 880F      		lsl r24
 24214 a390 991F      		rol r25
 24215 a392 820F      		add r24,r18
 24216 a394 931F      		adc r25,r19
 24217 a396 FC01      		movw r30,r24
 24218 a398 8081      		ld r24,Z
 24219 a39a 9181      		ldd r25,Z+1
 24220 a39c 1816      		cp __zero_reg__,r24
 24221 a39e 1906      		cpc __zero_reg__,r25
 24222 a3a0 04F4      		brge .+2
 24223 a3a2 00C0      		rjmp .L1063
2184:lp_solve_5.5/lp_presolve.c ****       continue;
2185:lp_solve_5.5/lp_presolve.c ****     if(((*fixvalue < 0) && (upLim + *fixvalue >= loLim-tolgap) && (upLim > lp->orig_rhs[i]+tolgap))
 24224               		.loc 2 2185 0
 24225 a3a4 89A5      		ldd r24,Y+41
 24226 a3a6 9AA5      		ldd r25,Y+42
 24227 a3a8 FC01      		movw r30,r24
 24228 a3aa 8081      		ld r24,Z
 24229 a3ac 9181      		ldd r25,Z+1
 24230 a3ae A281      		ldd r26,Z+2
 24231 a3b0 B381      		ldd r27,Z+3
 24232 a3b2 20E0      		ldi r18,0
 24233 a3b4 30E0      		ldi r19,0
 24234 a3b6 A901      		movw r20,r18
 24235 a3b8 BC01      		movw r22,r24
 24236 a3ba CD01      		movw r24,r26
 24237 a3bc 0E94 0000 		call __ltsf2
 24238 a3c0 8823      		tst r24
 24239 a3c2 04F0      		brlt .+2
 24240 a3c4 00C0      		rjmp .L1038
 24241               		.loc 2 2185 0 is_stmt 0 discriminator 1
 24242 a3c6 89A5      		ldd r24,Y+41
 24243 a3c8 9AA5      		ldd r25,Y+42
 24244 a3ca FC01      		movw r30,r24
 24245 a3cc 8081      		ld r24,Z
 24246 a3ce 9181      		ldd r25,Z+1
 24247 a3d0 A281      		ldd r26,Z+2
 24248 a3d2 B381      		ldd r27,Z+3
 24249 a3d4 29A1      		ldd r18,Y+33
 24250 a3d6 3AA1      		ldd r19,Y+34
 24251 a3d8 4BA1      		ldd r20,Y+35
 24252 a3da 5CA1      		ldd r21,Y+36
 24253 a3dc BC01      		movw r22,r24
 24254 a3de CD01      		movw r24,r26
 24255 a3e0 0E94 0000 		call __addsf3
 24256 a3e4 DC01      		movw r26,r24
 24257 a3e6 CB01      		movw r24,r22
 24258 a3e8 6C01      		movw r12,r24
 24259 a3ea 7D01      		movw r14,r26
 24260 a3ec 8D8D      		ldd r24,Y+29
 24261 a3ee 9E8D      		ldd r25,Y+30
 24262 a3f0 AF8D      		ldd r26,Y+31
 24263 a3f2 B8A1      		ldd r27,Y+32
 24264 a3f4 2A89      		ldd r18,Y+18
 24265 a3f6 3B89      		ldd r19,Y+19
 24266 a3f8 4C89      		ldd r20,Y+20
 24267 a3fa 5D89      		ldd r21,Y+21
 24268 a3fc BC01      		movw r22,r24
 24269 a3fe CD01      		movw r24,r26
 24270 a400 0E94 0000 		call __subsf3
 24271 a404 DC01      		movw r26,r24
 24272 a406 CB01      		movw r24,r22
 24273 a408 9C01      		movw r18,r24
 24274 a40a AD01      		movw r20,r26
 24275 a40c C701      		movw r24,r14
 24276 a40e B601      		movw r22,r12
 24277 a410 0E94 0000 		call __gesf2
 24278 a414 8823      		tst r24
 24279 a416 04F0      		brlt .L1038
 24280               		.loc 2 2185 0 discriminator 3
 24281 a418 8F81      		ldd r24,Y+7
 24282 a41a 9885      		ldd r25,Y+8
 24283 a41c 8A55      		subi r24,90
 24284 a41e 9D4F      		sbci r25,-3
 24285 a420 FC01      		movw r30,r24
 24286 a422 2081      		ld r18,Z
 24287 a424 3181      		ldd r19,Z+1
 24288 a426 8889      		ldd r24,Y+16
 24289 a428 9989      		ldd r25,Y+17
 24290 a42a 880F      		lsl r24
 24291 a42c 991F      		rol r25
 24292 a42e 880F      		lsl r24
 24293 a430 991F      		rol r25
 24294 a432 820F      		add r24,r18
 24295 a434 931F      		adc r25,r19
 24296 a436 FC01      		movw r30,r24
 24297 a438 8081      		ld r24,Z
 24298 a43a 9181      		ldd r25,Z+1
 24299 a43c A281      		ldd r26,Z+2
 24300 a43e B381      		ldd r27,Z+3
 24301 a440 2A89      		ldd r18,Y+18
 24302 a442 3B89      		ldd r19,Y+19
 24303 a444 4C89      		ldd r20,Y+20
 24304 a446 5D89      		ldd r21,Y+21
 24305 a448 BC01      		movw r22,r24
 24306 a44a CD01      		movw r24,r26
 24307 a44c 0E94 0000 		call __addsf3
 24308 a450 DC01      		movw r26,r24
 24309 a452 CB01      		movw r24,r22
 24310 a454 7C01      		movw r14,r24
 24311 a456 8D01      		movw r16,r26
 24312 a458 89A1      		ldd r24,Y+33
 24313 a45a 9AA1      		ldd r25,Y+34
 24314 a45c ABA1      		ldd r26,Y+35
 24315 a45e BCA1      		ldd r27,Y+36
 24316 a460 9C01      		movw r18,r24
 24317 a462 AD01      		movw r20,r26
 24318 a464 C801      		movw r24,r16
 24319 a466 B701      		movw r22,r14
 24320 a468 0E94 0000 		call __ltsf2
 24321 a46c 8823      		tst r24
 24322 a46e 04F4      		brge .+2
 24323 a470 00C0      		rjmp .L1041
 24324               	.L1038:
2186:lp_solve_5.5/lp_presolve.c ****        ((*fixvalue > 0) && (loLim + *fixvalue <= upLim+tolgap) && (loLim < lp->orig_rhs[i]-range-to
 24325               		.loc 2 2186 0 is_stmt 1 discriminator 5
 24326 a472 89A5      		ldd r24,Y+41
 24327 a474 9AA5      		ldd r25,Y+42
 24328 a476 FC01      		movw r30,r24
 24329 a478 8081      		ld r24,Z
 24330 a47a 9181      		ldd r25,Z+1
 24331 a47c A281      		ldd r26,Z+2
 24332 a47e B381      		ldd r27,Z+3
2185:lp_solve_5.5/lp_presolve.c ****        ((*fixvalue > 0) && (loLim + *fixvalue <= upLim+tolgap) && (loLim < lp->orig_rhs[i]-range-to
 24333               		.loc 2 2185 0 discriminator 5
 24334 a480 20E0      		ldi r18,0
 24335 a482 30E0      		ldi r19,0
 24336 a484 A901      		movw r20,r18
 24337 a486 BC01      		movw r22,r24
 24338 a488 CD01      		movw r24,r26
 24339 a48a 0E94 0000 		call __gtsf2
 24340 a48e 1816      		cp __zero_reg__,r24
 24341 a490 04F0      		brlt .+2
 24342 a492 00C0      		rjmp .L1037
 24343               		.loc 2 2186 0
 24344 a494 89A5      		ldd r24,Y+41
 24345 a496 9AA5      		ldd r25,Y+42
 24346 a498 FC01      		movw r30,r24
 24347 a49a 8081      		ld r24,Z
 24348 a49c 9181      		ldd r25,Z+1
 24349 a49e A281      		ldd r26,Z+2
 24350 a4a0 B381      		ldd r27,Z+3
 24351 a4a2 2D8D      		ldd r18,Y+29
 24352 a4a4 3E8D      		ldd r19,Y+30
 24353 a4a6 4F8D      		ldd r20,Y+31
 24354 a4a8 58A1      		ldd r21,Y+32
 24355 a4aa BC01      		movw r22,r24
 24356 a4ac CD01      		movw r24,r26
 24357 a4ae 0E94 0000 		call __addsf3
 24358 a4b2 DC01      		movw r26,r24
 24359 a4b4 CB01      		movw r24,r22
 24360 a4b6 6C01      		movw r12,r24
 24361 a4b8 7D01      		movw r14,r26
 24362 a4ba 89A1      		ldd r24,Y+33
 24363 a4bc 9AA1      		ldd r25,Y+34
 24364 a4be ABA1      		ldd r26,Y+35
 24365 a4c0 BCA1      		ldd r27,Y+36
 24366 a4c2 2A89      		ldd r18,Y+18
 24367 a4c4 3B89      		ldd r19,Y+19
 24368 a4c6 4C89      		ldd r20,Y+20
 24369 a4c8 5D89      		ldd r21,Y+21
 24370 a4ca BC01      		movw r22,r24
 24371 a4cc CD01      		movw r24,r26
 24372 a4ce 0E94 0000 		call __addsf3
 24373 a4d2 DC01      		movw r26,r24
 24374 a4d4 CB01      		movw r24,r22
 24375 a4d6 9C01      		movw r18,r24
 24376 a4d8 AD01      		movw r20,r26
 24377 a4da C701      		movw r24,r14
 24378 a4dc B601      		movw r22,r12
 24379 a4de 0E94 0000 		call __lesf2
 24380 a4e2 1816      		cp __zero_reg__,r24
 24381 a4e4 04F4      		brge .+2
 24382 a4e6 00C0      		rjmp .L1037
 24383               		.loc 2 2186 0 is_stmt 0 discriminator 1
 24384 a4e8 8F81      		ldd r24,Y+7
 24385 a4ea 9885      		ldd r25,Y+8
 24386 a4ec 8A55      		subi r24,90
 24387 a4ee 9D4F      		sbci r25,-3
 24388 a4f0 FC01      		movw r30,r24
 24389 a4f2 2081      		ld r18,Z
 24390 a4f4 3181      		ldd r19,Z+1
 24391 a4f6 8889      		ldd r24,Y+16
 24392 a4f8 9989      		ldd r25,Y+17
 24393 a4fa 880F      		lsl r24
 24394 a4fc 991F      		rol r25
 24395 a4fe 880F      		lsl r24
 24396 a500 991F      		rol r25
 24397 a502 820F      		add r24,r18
 24398 a504 931F      		adc r25,r19
 24399 a506 FC01      		movw r30,r24
 24400 a508 8081      		ld r24,Z
 24401 a50a 9181      		ldd r25,Z+1
 24402 a50c A281      		ldd r26,Z+2
 24403 a50e B381      		ldd r27,Z+3
 24404 a510 2F89      		ldd r18,Y+23
 24405 a512 388D      		ldd r19,Y+24
 24406 a514 498D      		ldd r20,Y+25
 24407 a516 5A8D      		ldd r21,Y+26
 24408 a518 BC01      		movw r22,r24
 24409 a51a CD01      		movw r24,r26
 24410 a51c 0E94 0000 		call __subsf3
 24411 a520 DC01      		movw r26,r24
 24412 a522 CB01      		movw r24,r22
 24413 a524 2A89      		ldd r18,Y+18
 24414 a526 3B89      		ldd r19,Y+19
 24415 a528 4C89      		ldd r20,Y+20
 24416 a52a 5D89      		ldd r21,Y+21
 24417 a52c BC01      		movw r22,r24
 24418 a52e CD01      		movw r24,r26
 24419 a530 0E94 0000 		call __subsf3
 24420 a534 DC01      		movw r26,r24
 24421 a536 CB01      		movw r24,r22
 24422 a538 7C01      		movw r14,r24
 24423 a53a 8D01      		movw r16,r26
 24424 a53c 8D8D      		ldd r24,Y+29
 24425 a53e 9E8D      		ldd r25,Y+30
 24426 a540 AF8D      		ldd r26,Y+31
 24427 a542 B8A1      		ldd r27,Y+32
 24428 a544 9C01      		movw r18,r24
 24429 a546 AD01      		movw r20,r26
 24430 a548 C801      		movw r24,r16
 24431 a54a B701      		movw r22,r14
 24432 a54c 0E94 0000 		call __gtsf2
 24433 a550 1816      		cp __zero_reg__,r24
 24434 a552 04F4      		brge .L1037
 24435               		.loc 2 2186 0 discriminator 2
 24436 a554 8F89      		ldd r24,Y+23
 24437 a556 988D      		ldd r25,Y+24
 24438 a558 A98D      		ldd r26,Y+25
 24439 a55a BA8D      		ldd r27,Y+26
 24440 a55c BF77      		andi r27,0x7f
 24441 a55e 2F81      		ldd r18,Y+7
 24442 a560 3885      		ldd r19,Y+8
 24443 a562 265F      		subi r18,-10
 24444 a564 3C4F      		sbci r19,-4
 24445 a566 F901      		movw r30,r18
 24446 a568 2081      		ld r18,Z
 24447 a56a 3181      		ldd r19,Z+1
 24448 a56c 4281      		ldd r20,Z+2
 24449 a56e 5381      		ldd r21,Z+3
 24450 a570 11E0      		ldi r17,lo8(1)
 24451 a572 BC01      		movw r22,r24
 24452 a574 CD01      		movw r24,r26
 24453 a576 0E94 0000 		call __gesf2
 24454 a57a 8823      		tst r24
 24455 a57c 04F4      		brge .L1045
 24456 a57e 10E0      		ldi r17,0
 24457               	.L1045:
 24458 a580 81E0      		ldi r24,lo8(1)
 24459 a582 8127      		eor r24,r17
 24460 a584 8823      		tst r24
 24461 a586 01F0      		breq .L1037
 24462               	.L1041:
2187:lp_solve_5.5/lp_presolve.c ****       *fixvalue = 1;
 24463               		.loc 2 2187 0 is_stmt 1
 24464 a588 29A5      		ldd r18,Y+41
 24465 a58a 3AA5      		ldd r19,Y+42
 24466 a58c 80E0      		ldi r24,0
 24467 a58e 90E0      		ldi r25,0
 24468 a590 A0E8      		ldi r26,lo8(-128)
 24469 a592 BFE3      		ldi r27,lo8(63)
 24470 a594 F901      		movw r30,r18
 24471 a596 8083      		st Z,r24
 24472 a598 9183      		std Z+1,r25
 24473 a59a A283      		std Z+2,r26
 24474 a59c B383      		std Z+3,r27
2188:lp_solve_5.5/lp_presolve.c ****       break;
 24475               		.loc 2 2188 0
 24476 a59e 00C0      		rjmp .L1030
 24477               	.L1063:
2184:lp_solve_5.5/lp_presolve.c ****     if(((*fixvalue < 0) && (upLim + *fixvalue >= loLim-tolgap) && (upLim > lp->orig_rhs[i]+tolgap))
 24478               		.loc 2 2184 0
 24479 a5a0 0000      		nop
 24480               	.L1037:
2147:lp_solve_5.5/lp_presolve.c ****     i = COL_MAT_ROWNR(ix);
 24481               		.loc 2 2147 0 discriminator 2
 24482 a5a2 AE01      		movw r20,r28
 24483 a5a4 455E      		subi r20,-27
 24484 a5a6 5F4F      		sbci r21,-1
 24485 a5a8 2FA1      		ldd r18,Y+39
 24486 a5aa 38A5      		ldd r19,Y+40
 24487 a5ac 8DA1      		ldd r24,Y+37
 24488 a5ae 9EA1      		ldd r25,Y+38
 24489 a5b0 B901      		movw r22,r18
 24490 a5b2 0E94 0000 		call presolve_nextrow
 24491 a5b6 9A83      		std Y+2,r25
 24492 a5b8 8983      		std Y+1,r24
 24493               	.L1013:
2147:lp_solve_5.5/lp_presolve.c ****     i = COL_MAT_ROWNR(ix);
 24494               		.loc 2 2147 0 is_stmt 0 discriminator 1
 24495 a5ba 8981      		ldd r24,Y+1
 24496 a5bc 9A81      		ldd r25,Y+2
 24497 a5be 9923      		tst r25
 24498 a5c0 04F0      		brlt .+2
 24499 a5c2 00C0      		rjmp .L1046
 24500               	.L1030:
2189:lp_solve_5.5/lp_presolve.c ****     }
2190:lp_solve_5.5/lp_presolve.c ****   }
2191:lp_solve_5.5/lp_presolve.c ****   status = (MYBOOL) (ix >= 0);
 24501               		.loc 2 2191 0 is_stmt 1
 24502 a5c4 8A81      		ldd r24,Y+2
 24503 a5c6 8095      		com r24
 24504 a5c8 881F      		rol r24
 24505 a5ca 8827      		clr r24
 24506 a5cc 881F      		rol r24
 24507 a5ce 8F87      		std Y+15,r24
2192:lp_solve_5.5/lp_presolve.c **** 
2193:lp_solve_5.5/lp_presolve.c ****   /* Returns TRUE if fixing opportunity was identified */
2194:lp_solve_5.5/lp_presolve.c ****   return( status );
 24508               		.loc 2 2194 0
 24509 a5d0 8F85      		ldd r24,Y+15
 24510               	.L1047:
 24511               	/* epilogue start */
2195:lp_solve_5.5/lp_presolve.c **** }
 24512               		.loc 2 2195 0 discriminator 1
 24513 a5d2 AA96      		adiw r28,42
 24514 a5d4 0FB6      		in __tmp_reg__,__SREG__
 24515 a5d6 F894      		cli
 24516 a5d8 DEBF      		out __SP_H__,r29
 24517 a5da 0FBE      		out __SREG__,__tmp_reg__
 24518 a5dc CDBF      		out __SP_L__,r28
 24519 a5de DF91      		pop r29
 24520 a5e0 CF91      		pop r28
 24521 a5e2 1F91      		pop r17
 24522 a5e4 0F91      		pop r16
 24523 a5e6 FF90      		pop r15
 24524 a5e8 EF90      		pop r14
 24525 a5ea DF90      		pop r13
 24526 a5ec CF90      		pop r12
 24527 a5ee 0895      		ret
 24528               		.cfi_endproc
 24529               	.LFE61:
 24531               	.global	presolve_probetighten01
 24533               	presolve_probetighten01:
 24534               	.LFB62:
2196:lp_solve_5.5/lp_presolve.c **** #endif
2197:lp_solve_5.5/lp_presolve.c **** 
2198:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_probetighten01(presolverec *psdata, int colnr)
2199:lp_solve_5.5/lp_presolve.c **** {
 24535               		.loc 2 2199 0
 24536               		.cfi_startproc
 24537 a5f0 8F92      		push r8
 24538               	.LCFI346:
 24539               		.cfi_def_cfa_offset 3
 24540               		.cfi_offset 8, -2
 24541 a5f2 9F92      		push r9
 24542               	.LCFI347:
 24543               		.cfi_def_cfa_offset 4
 24544               		.cfi_offset 9, -3
 24545 a5f4 AF92      		push r10
 24546               	.LCFI348:
 24547               		.cfi_def_cfa_offset 5
 24548               		.cfi_offset 10, -4
 24549 a5f6 BF92      		push r11
 24550               	.LCFI349:
 24551               		.cfi_def_cfa_offset 6
 24552               		.cfi_offset 11, -5
 24553 a5f8 CF92      		push r12
 24554               	.LCFI350:
 24555               		.cfi_def_cfa_offset 7
 24556               		.cfi_offset 12, -6
 24557 a5fa DF92      		push r13
 24558               	.LCFI351:
 24559               		.cfi_def_cfa_offset 8
 24560               		.cfi_offset 13, -7
 24561 a5fc EF92      		push r14
 24562               	.LCFI352:
 24563               		.cfi_def_cfa_offset 9
 24564               		.cfi_offset 14, -8
 24565 a5fe FF92      		push r15
 24566               	.LCFI353:
 24567               		.cfi_def_cfa_offset 10
 24568               		.cfi_offset 15, -9
 24569 a600 0F93      		push r16
 24570               	.LCFI354:
 24571               		.cfi_def_cfa_offset 11
 24572               		.cfi_offset 16, -10
 24573 a602 1F93      		push r17
 24574               	.LCFI355:
 24575               		.cfi_def_cfa_offset 12
 24576               		.cfi_offset 17, -11
 24577 a604 CF93      		push r28
 24578               	.LCFI356:
 24579               		.cfi_def_cfa_offset 13
 24580               		.cfi_offset 28, -12
 24581 a606 DF93      		push r29
 24582               	.LCFI357:
 24583               		.cfi_def_cfa_offset 14
 24584               		.cfi_offset 29, -13
 24585 a608 CDB7      		in r28,__SP_L__
 24586 a60a DEB7      		in r29,__SP_H__
 24587               	.LCFI358:
 24588               		.cfi_def_cfa_register 28
 24589 a60c A597      		sbiw r28,37
 24590               	.LCFI359:
 24591               		.cfi_def_cfa_offset 51
 24592 a60e 0FB6      		in __tmp_reg__,__SREG__
 24593 a610 F894      		cli
 24594 a612 DEBF      		out __SP_H__,r29
 24595 a614 0FBE      		out __SREG__,__tmp_reg__
 24596 a616 CDBF      		out __SP_L__,r28
 24597               	/* prologue: function */
 24598               	/* frame size = 37 */
 24599               	/* stack size = 49 */
 24600               	.L__stack_usage = 49
 24601 a618 9BA3      		std Y+35,r25
 24602 a61a 8AA3      		std Y+34,r24
 24603 a61c 7DA3      		std Y+37,r23
 24604 a61e 6CA3      		std Y+36,r22
2200:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 24605               		.loc 2 2200 0
 24606 a620 8AA1      		ldd r24,Y+34
 24607 a622 9BA1      		ldd r25,Y+35
 24608 a624 FC01      		movw r30,r24
 24609 a626 8289      		ldd r24,Z+18
 24610 a628 9389      		ldd r25,Z+19
 24611 a62a 9E83      		std Y+6,r25
 24612 a62c 8D83      		std Y+5,r24
2201:lp_solve_5.5/lp_presolve.c ****   MYBOOL   chsign;
2202:lp_solve_5.5/lp_presolve.c ****   int      i, ix, item, n = 0;
 24613               		.loc 2 2202 0
 24614 a62e 1C82      		std Y+4,__zero_reg__
 24615 a630 1B82      		std Y+3,__zero_reg__
2203:lp_solve_5.5/lp_presolve.c ****   REAL     upLim, value, absvalue, epsvalue = psdata->epsvalue;
 24616               		.loc 2 2203 0
 24617 a632 8AA1      		ldd r24,Y+34
 24618 a634 9BA1      		ldd r25,Y+35
 24619 a636 FC01      		movw r30,r24
 24620 a638 8489      		ldd r24,Z+20
 24621 a63a 9589      		ldd r25,Z+21
 24622 a63c A689      		ldd r26,Z+22
 24623 a63e B789      		ldd r27,Z+23
 24624 a640 8F83      		std Y+7,r24
 24625 a642 9887      		std Y+8,r25
 24626 a644 A987      		std Y+9,r26
 24627 a646 BA87      		std Y+10,r27
2204:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 24628               		.loc 2 2204 0
 24629 a648 8D81      		ldd r24,Y+5
 24630 a64a 9E81      		ldd r25,Y+6
 24631 a64c 8A54      		subi r24,74
 24632 a64e 9D4F      		sbci r25,-3
 24633 a650 FC01      		movw r30,r24
 24634 a652 8081      		ld r24,Z
 24635 a654 9181      		ldd r25,Z+1
 24636 a656 9C87      		std Y+12,r25
 24637 a658 8B87      		std Y+11,r24
2205:lp_solve_5.5/lp_presolve.c **** 
2206:lp_solve_5.5/lp_presolve.c **** #if 0 /* Handled in calling routine */
2207:lp_solve_5.5/lp_presolve.c ****   if(!is_binary(lp, colnr))
2208:lp_solve_5.5/lp_presolve.c ****     return( n );
2209:lp_solve_5.5/lp_presolve.c **** #endif
2210:lp_solve_5.5/lp_presolve.c **** 
2211:lp_solve_5.5/lp_presolve.c ****   /* Loop over all active rows and do coefficient tightening for qualifying constraints */
2212:lp_solve_5.5/lp_presolve.c ****   item = 0;
 24638               		.loc 2 2212 0
 24639 a65a 19A2      		std Y+33,__zero_reg__
 24640 a65c 18A2      		std Y+32,__zero_reg__
2213:lp_solve_5.5/lp_presolve.c ****   for(ix = presolve_nextrow(psdata, colnr, &item); ix >= 0;
 24641               		.loc 2 2213 0
 24642 a65e AE01      		movw r20,r28
 24643 a660 405E      		subi r20,-32
 24644 a662 5F4F      		sbci r21,-1
 24645 a664 2CA1      		ldd r18,Y+36
 24646 a666 3DA1      		ldd r19,Y+37
 24647 a668 8AA1      		ldd r24,Y+34
 24648 a66a 9BA1      		ldd r25,Y+35
 24649 a66c B901      		movw r22,r18
 24650 a66e 0E94 0000 		call presolve_nextrow
 24651 a672 9A83      		std Y+2,r25
 24652 a674 8983      		std Y+1,r24
 24653 a676 00C0      		rjmp .L1065
 24654               	.L1087:
2214:lp_solve_5.5/lp_presolve.c ****       ix = presolve_nextrow(psdata, colnr, &item)) {
2215:lp_solve_5.5/lp_presolve.c ****     i = COL_MAT_ROWNR(ix);
 24655               		.loc 2 2215 0
 24656 a678 8B85      		ldd r24,Y+11
 24657 a67a 9C85      		ldd r25,Y+12
 24658 a67c FC01      		movw r30,r24
 24659 a67e 2685      		ldd r18,Z+14
 24660 a680 3785      		ldd r19,Z+15
 24661 a682 8981      		ldd r24,Y+1
 24662 a684 9A81      		ldd r25,Y+2
 24663 a686 880F      		lsl r24
 24664 a688 991F      		rol r25
 24665 a68a 820F      		add r24,r18
 24666 a68c 931F      		adc r25,r19
 24667 a68e FC01      		movw r30,r24
 24668 a690 8081      		ld r24,Z
 24669 a692 9181      		ldd r25,Z+1
 24670 a694 9E87      		std Y+14,r25
 24671 a696 8D87      		std Y+13,r24
2216:lp_solve_5.5/lp_presolve.c ****     value = COL_MAT_VALUE(ix);
 24672               		.loc 2 2216 0
 24673 a698 8B85      		ldd r24,Y+11
 24674 a69a 9C85      		ldd r25,Y+12
 24675 a69c FC01      		movw r30,r24
 24676 a69e 2089      		ldd r18,Z+16
 24677 a6a0 3189      		ldd r19,Z+17
 24678 a6a2 8981      		ldd r24,Y+1
 24679 a6a4 9A81      		ldd r25,Y+2
 24680 a6a6 880F      		lsl r24
 24681 a6a8 991F      		rol r25
 24682 a6aa 880F      		lsl r24
 24683 a6ac 991F      		rol r25
 24684 a6ae 820F      		add r24,r18
 24685 a6b0 931F      		adc r25,r19
 24686 a6b2 FC01      		movw r30,r24
 24687 a6b4 8081      		ld r24,Z
 24688 a6b6 9181      		ldd r25,Z+1
 24689 a6b8 A281      		ldd r26,Z+2
 24690 a6ba B381      		ldd r27,Z+3
 24691 a6bc 8F87      		std Y+15,r24
 24692 a6be 988B      		std Y+16,r25
 24693 a6c0 A98B      		std Y+17,r26
 24694 a6c2 BA8B      		std Y+18,r27
2217:lp_solve_5.5/lp_presolve.c ****     chsign = is_chsign(lp, i);
 24695               		.loc 2 2217 0
 24696 a6c4 2D85      		ldd r18,Y+13
 24697 a6c6 3E85      		ldd r19,Y+14
 24698 a6c8 8D81      		ldd r24,Y+5
 24699 a6ca 9E81      		ldd r25,Y+6
 24700 a6cc B901      		movw r22,r18
 24701 a6ce 0E94 0000 		call is_chsign
 24702 a6d2 8B8B      		std Y+19,r24
2218:lp_solve_5.5/lp_presolve.c ****     upLim = presolve_sumplumin(lp, i, psdata->rows, (MYBOOL) !chsign);
 24703               		.loc 2 2218 0
 24704 a6d4 81E0      		ldi r24,lo8(1)
 24705 a6d6 9B89      		ldd r25,Y+19
 24706 a6d8 9923      		tst r25
 24707 a6da 01F0      		breq .L1066
 24708 a6dc 80E0      		ldi r24,0
 24709               	.L1066:
 24710 a6de 282F      		mov r18,r24
 24711 a6e0 8AA1      		ldd r24,Y+34
 24712 a6e2 9BA1      		ldd r25,Y+35
 24713 a6e4 FC01      		movw r30,r24
 24714 a6e6 4081      		ld r20,Z
 24715 a6e8 5181      		ldd r21,Z+1
 24716 a6ea 6D85      		ldd r22,Y+13
 24717 a6ec 7E85      		ldd r23,Y+14
 24718 a6ee 8D81      		ldd r24,Y+5
 24719 a6f0 9E81      		ldd r25,Y+6
 24720 a6f2 0E94 0000 		call presolve_sumplumin
 24721 a6f6 DC01      		movw r26,r24
 24722 a6f8 CB01      		movw r24,r22
 24723 a6fa 8C8B      		std Y+20,r24
 24724 a6fc 9D8B      		std Y+21,r25
 24725 a6fe AE8B      		std Y+22,r26
 24726 a700 BF8B      		std Y+23,r27
2219:lp_solve_5.5/lp_presolve.c ****     upLim = my_chsign(chsign, upLim);
 24727               		.loc 2 2219 0
 24728 a702 8B89      		ldd r24,Y+19
 24729 a704 8823      		tst r24
 24730 a706 01F0      		breq .L1067
 24731               		.loc 2 2219 0 is_stmt 0 discriminator 1
 24732 a708 20E0      		ldi r18,0
 24733 a70a 30E0      		ldi r19,0
 24734 a70c A901      		movw r20,r18
 24735 a70e 6C89      		ldd r22,Y+20
 24736 a710 7D89      		ldd r23,Y+21
 24737 a712 8E89      		ldd r24,Y+22
 24738 a714 9F89      		ldd r25,Y+23
 24739 a716 0E94 0000 		call __nesf2
 24740 a71a 8823      		tst r24
 24741 a71c 01F0      		breq .L1067
 24742               		.loc 2 2219 0 discriminator 3
 24743 a71e 8C89      		ldd r24,Y+20
 24744 a720 9D89      		ldd r25,Y+21
 24745 a722 AE89      		ldd r26,Y+22
 24746 a724 BF89      		ldd r27,Y+23
 24747 a726 B058      		subi r27,0x80
 24748 a728 00C0      		rjmp .L1069
 24749               	.L1067:
 24750               		.loc 2 2219 0 discriminator 4
 24751 a72a 8C89      		ldd r24,Y+20
 24752 a72c 9D89      		ldd r25,Y+21
 24753 a72e AE89      		ldd r26,Y+22
 24754 a730 BF89      		ldd r27,Y+23
 24755               	.L1069:
 24756               		.loc 2 2219 0 discriminator 6
 24757 a732 8C8B      		std Y+20,r24
 24758 a734 9D8B      		std Y+21,r25
 24759 a736 AE8B      		std Y+22,r26
 24760 a738 BF8B      		std Y+23,r27
2220:lp_solve_5.5/lp_presolve.c **** 
2221:lp_solve_5.5/lp_presolve.c ****     /* Does this constraint qualify for coefficient tightening? */
2222:lp_solve_5.5/lp_presolve.c ****     absvalue = fabs(value);
 24761               		.loc 2 2222 0 is_stmt 1 discriminator 6
 24762 a73a 8F85      		ldd r24,Y+15
 24763 a73c 9889      		ldd r25,Y+16
 24764 a73e A989      		ldd r26,Y+17
 24765 a740 BA89      		ldd r27,Y+18
 24766 a742 BF77      		andi r27,0x7f
 24767 a744 888F      		std Y+24,r24
 24768 a746 998F      		std Y+25,r25
 24769 a748 AA8F      		std Y+26,r26
 24770 a74a BB8F      		std Y+27,r27
2223:lp_solve_5.5/lp_presolve.c ****     if(upLim - absvalue < lp->orig_rhs[i]-epsvalue*MAX(1, absvalue)) {
 24771               		.loc 2 2223 0 discriminator 6
 24772 a74c 288D      		ldd r18,Y+24
 24773 a74e 398D      		ldd r19,Y+25
 24774 a750 4A8D      		ldd r20,Y+26
 24775 a752 5B8D      		ldd r21,Y+27
 24776 a754 6C89      		ldd r22,Y+20
 24777 a756 7D89      		ldd r23,Y+21
 24778 a758 8E89      		ldd r24,Y+22
 24779 a75a 9F89      		ldd r25,Y+23
 24780 a75c 0E94 0000 		call __subsf3
 24781 a760 DC01      		movw r26,r24
 24782 a762 CB01      		movw r24,r22
 24783 a764 4C01      		movw r8,r24
 24784 a766 5D01      		movw r10,r26
 24785 a768 8D81      		ldd r24,Y+5
 24786 a76a 9E81      		ldd r25,Y+6
 24787 a76c 8A55      		subi r24,90
 24788 a76e 9D4F      		sbci r25,-3
 24789 a770 FC01      		movw r30,r24
 24790 a772 2081      		ld r18,Z
 24791 a774 3181      		ldd r19,Z+1
 24792 a776 8D85      		ldd r24,Y+13
 24793 a778 9E85      		ldd r25,Y+14
 24794 a77a 880F      		lsl r24
 24795 a77c 991F      		rol r25
 24796 a77e 880F      		lsl r24
 24797 a780 991F      		rol r25
 24798 a782 820F      		add r24,r18
 24799 a784 931F      		adc r25,r19
 24800 a786 FC01      		movw r30,r24
 24801 a788 C080      		ld r12,Z
 24802 a78a D180      		ldd r13,Z+1
 24803 a78c E280      		ldd r14,Z+2
 24804 a78e F380      		ldd r15,Z+3
 24805 a790 20E0      		ldi r18,0
 24806 a792 30E0      		ldi r19,0
 24807 a794 40E8      		ldi r20,lo8(-128)
 24808 a796 5FE3      		ldi r21,lo8(63)
 24809 a798 688D      		ldd r22,Y+24
 24810 a79a 798D      		ldd r23,Y+25
 24811 a79c 8A8D      		ldd r24,Y+26
 24812 a79e 9B8D      		ldd r25,Y+27
 24813 a7a0 0E94 0000 		call __ltsf2
 24814 a7a4 8823      		tst r24
 24815 a7a6 04F4      		brge .L1096
 24816               		.loc 2 2223 0 is_stmt 0 discriminator 1
 24817 a7a8 80E0      		ldi r24,0
 24818 a7aa 90E0      		ldi r25,0
 24819 a7ac A0E8      		ldi r26,lo8(-128)
 24820 a7ae BFE3      		ldi r27,lo8(63)
 24821 a7b0 00C0      		rjmp .L1072
 24822               	.L1096:
 24823               		.loc 2 2223 0 discriminator 2
 24824 a7b2 888D      		ldd r24,Y+24
 24825 a7b4 998D      		ldd r25,Y+25
 24826 a7b6 AA8D      		ldd r26,Y+26
 24827 a7b8 BB8D      		ldd r27,Y+27
 24828               	.L1072:
 24829               		.loc 2 2223 0 discriminator 4
 24830 a7ba 2F81      		ldd r18,Y+7
 24831 a7bc 3885      		ldd r19,Y+8
 24832 a7be 4985      		ldd r20,Y+9
 24833 a7c0 5A85      		ldd r21,Y+10
 24834 a7c2 BC01      		movw r22,r24
 24835 a7c4 CD01      		movw r24,r26
 24836 a7c6 0E94 0000 		call __mulsf3
 24837 a7ca DC01      		movw r26,r24
 24838 a7cc CB01      		movw r24,r22
 24839 a7ce 9C01      		movw r18,r24
 24840 a7d0 AD01      		movw r20,r26
 24841 a7d2 C701      		movw r24,r14
 24842 a7d4 B601      		movw r22,r12
 24843 a7d6 0E94 0000 		call __subsf3
 24844 a7da DC01      		movw r26,r24
 24845 a7dc CB01      		movw r24,r22
 24846 a7de 9C01      		movw r18,r24
 24847 a7e0 AD01      		movw r20,r26
 24848 a7e2 C501      		movw r24,r10
 24849 a7e4 B401      		movw r22,r8
 24850 a7e6 0E94 0000 		call __ltsf2
 24851 a7ea 8823      		tst r24
 24852 a7ec 04F0      		brlt .+2
 24853 a7ee 00C0      		rjmp .L1073
 24854               	.LBB7:
2224:lp_solve_5.5/lp_presolve.c ****       REAL delta = lp->orig_rhs[i] - upLim;
 24855               		.loc 2 2224 0 is_stmt 1
 24856 a7f0 8D81      		ldd r24,Y+5
 24857 a7f2 9E81      		ldd r25,Y+6
 24858 a7f4 8A55      		subi r24,90
 24859 a7f6 9D4F      		sbci r25,-3
 24860 a7f8 FC01      		movw r30,r24
 24861 a7fa 2081      		ld r18,Z
 24862 a7fc 3181      		ldd r19,Z+1
 24863 a7fe 8D85      		ldd r24,Y+13
 24864 a800 9E85      		ldd r25,Y+14
 24865 a802 880F      		lsl r24
 24866 a804 991F      		rol r25
 24867 a806 880F      		lsl r24
 24868 a808 991F      		rol r25
 24869 a80a 820F      		add r24,r18
 24870 a80c 931F      		adc r25,r19
 24871 a80e FC01      		movw r30,r24
 24872 a810 8081      		ld r24,Z
 24873 a812 9181      		ldd r25,Z+1
 24874 a814 A281      		ldd r26,Z+2
 24875 a816 B381      		ldd r27,Z+3
 24876 a818 2C89      		ldd r18,Y+20
 24877 a81a 3D89      		ldd r19,Y+21
 24878 a81c 4E89      		ldd r20,Y+22
 24879 a81e 5F89      		ldd r21,Y+23
 24880 a820 BC01      		movw r22,r24
 24881 a822 CD01      		movw r24,r26
 24882 a824 0E94 0000 		call __subsf3
 24883 a828 DC01      		movw r26,r24
 24884 a82a CB01      		movw r24,r22
 24885 a82c 8C8F      		std Y+28,r24
 24886 a82e 9D8F      		std Y+29,r25
 24887 a830 AE8F      		std Y+30,r26
 24888 a832 BF8F      		std Y+31,r27
2225:lp_solve_5.5/lp_presolve.c ****       lp->orig_rhs[i] = upLim;
 24889               		.loc 2 2225 0
 24890 a834 8D81      		ldd r24,Y+5
 24891 a836 9E81      		ldd r25,Y+6
 24892 a838 8A55      		subi r24,90
 24893 a83a 9D4F      		sbci r25,-3
 24894 a83c FC01      		movw r30,r24
 24895 a83e 2081      		ld r18,Z
 24896 a840 3181      		ldd r19,Z+1
 24897 a842 8D85      		ldd r24,Y+13
 24898 a844 9E85      		ldd r25,Y+14
 24899 a846 880F      		lsl r24
 24900 a848 991F      		rol r25
 24901 a84a 880F      		lsl r24
 24902 a84c 991F      		rol r25
 24903 a84e 280F      		add r18,r24
 24904 a850 391F      		adc r19,r25
 24905 a852 8C89      		ldd r24,Y+20
 24906 a854 9D89      		ldd r25,Y+21
 24907 a856 AE89      		ldd r26,Y+22
 24908 a858 BF89      		ldd r27,Y+23
 24909 a85a F901      		movw r30,r18
 24910 a85c 8083      		st Z,r24
 24911 a85e 9183      		std Z+1,r25
 24912 a860 A283      		std Z+2,r26
 24913 a862 B383      		std Z+3,r27
2226:lp_solve_5.5/lp_presolve.c ****       upLim = value - my_chsign(value < 0, delta);
 24914               		.loc 2 2226 0
 24915 a864 20E0      		ldi r18,0
 24916 a866 30E0      		ldi r19,0
 24917 a868 A901      		movw r20,r18
 24918 a86a 6F85      		ldd r22,Y+15
 24919 a86c 7889      		ldd r23,Y+16
 24920 a86e 8989      		ldd r24,Y+17
 24921 a870 9A89      		ldd r25,Y+18
 24922 a872 0E94 0000 		call __ltsf2
 24923 a876 8823      		tst r24
 24924 a878 04F4      		brge .L1075
 24925               		.loc 2 2226 0 is_stmt 0 discriminator 1
 24926 a87a 20E0      		ldi r18,0
 24927 a87c 30E0      		ldi r19,0
 24928 a87e A901      		movw r20,r18
 24929 a880 6C8D      		ldd r22,Y+28
 24930 a882 7D8D      		ldd r23,Y+29
 24931 a884 8E8D      		ldd r24,Y+30
 24932 a886 9F8D      		ldd r25,Y+31
 24933 a888 0E94 0000 		call __nesf2
 24934 a88c 8823      		tst r24
 24935 a88e 01F0      		breq .L1075
 24936               		.loc 2 2226 0 discriminator 3
 24937 a890 8C8D      		ldd r24,Y+28
 24938 a892 9D8D      		ldd r25,Y+29
 24939 a894 AE8D      		ldd r26,Y+30
 24940 a896 BF8D      		ldd r27,Y+31
 24941 a898 B058      		subi r27,0x80
 24942 a89a 00C0      		rjmp .L1078
 24943               	.L1075:
 24944               		.loc 2 2226 0 discriminator 4
 24945 a89c 8C8D      		ldd r24,Y+28
 24946 a89e 9D8D      		ldd r25,Y+29
 24947 a8a0 AE8D      		ldd r26,Y+30
 24948 a8a2 BF8D      		ldd r27,Y+31
 24949               	.L1078:
 24950               		.loc 2 2226 0 discriminator 6
 24951 a8a4 9C01      		movw r18,r24
 24952 a8a6 AD01      		movw r20,r26
 24953 a8a8 6F85      		ldd r22,Y+15
 24954 a8aa 7889      		ldd r23,Y+16
 24955 a8ac 8989      		ldd r24,Y+17
 24956 a8ae 9A89      		ldd r25,Y+18
 24957 a8b0 0E94 0000 		call __subsf3
 24958 a8b4 DC01      		movw r26,r24
 24959 a8b6 CB01      		movw r24,r22
 24960 a8b8 8C8B      		std Y+20,r24
 24961 a8ba 9D8B      		std Y+21,r25
 24962 a8bc AE8B      		std Y+22,r26
 24963 a8be BF8B      		std Y+23,r27
2227:lp_solve_5.5/lp_presolve.c ****       COL_MAT_VALUE(ix) = upLim;
 24964               		.loc 2 2227 0 is_stmt 1 discriminator 6
 24965 a8c0 8B85      		ldd r24,Y+11
 24966 a8c2 9C85      		ldd r25,Y+12
 24967 a8c4 FC01      		movw r30,r24
 24968 a8c6 2089      		ldd r18,Z+16
 24969 a8c8 3189      		ldd r19,Z+17
 24970 a8ca 8981      		ldd r24,Y+1
 24971 a8cc 9A81      		ldd r25,Y+2
 24972 a8ce 880F      		lsl r24
 24973 a8d0 991F      		rol r25
 24974 a8d2 880F      		lsl r24
 24975 a8d4 991F      		rol r25
 24976 a8d6 280F      		add r18,r24
 24977 a8d8 391F      		adc r19,r25
 24978 a8da 8C89      		ldd r24,Y+20
 24979 a8dc 9D89      		ldd r25,Y+21
 24980 a8de AE89      		ldd r26,Y+22
 24981 a8e0 BF89      		ldd r27,Y+23
 24982 a8e2 F901      		movw r30,r18
 24983 a8e4 8083      		st Z,r24
 24984 a8e6 9183      		std Z+1,r25
 24985 a8e8 A283      		std Z+2,r26
 24986 a8ea B383      		std Z+3,r27
2228:lp_solve_5.5/lp_presolve.c ****       if(my_sign(value) != my_sign(upLim)) {
 24987               		.loc 2 2228 0 discriminator 6
 24988 a8ec 20E0      		ldi r18,0
 24989 a8ee 30E0      		ldi r19,0
 24990 a8f0 A901      		movw r20,r18
 24991 a8f2 6F85      		ldd r22,Y+15
 24992 a8f4 7889      		ldd r23,Y+16
 24993 a8f6 8989      		ldd r24,Y+17
 24994 a8f8 9A89      		ldd r25,Y+18
 24995 a8fa 0E94 0000 		call __ltsf2
 24996 a8fe 8823      		tst r24
 24997 a900 04F4      		brge .L1097
 24998               		.loc 2 2228 0 is_stmt 0 discriminator 1
 24999 a902 0FEF      		ldi r16,lo8(-1)
 25000 a904 1FEF      		ldi r17,lo8(-1)
 25001 a906 00C0      		rjmp .L1081
 25002               	.L1097:
 25003               		.loc 2 2228 0 discriminator 2
 25004 a908 01E0      		ldi r16,lo8(1)
 25005 a90a 10E0      		ldi r17,0
 25006               	.L1081:
 25007               		.loc 2 2228 0 discriminator 4
 25008 a90c 20E0      		ldi r18,0
 25009 a90e 30E0      		ldi r19,0
 25010 a910 A901      		movw r20,r18
 25011 a912 6C89      		ldd r22,Y+20
 25012 a914 7D89      		ldd r23,Y+21
 25013 a916 8E89      		ldd r24,Y+22
 25014 a918 9F89      		ldd r25,Y+23
 25015 a91a 0E94 0000 		call __ltsf2
 25016 a91e 8823      		tst r24
 25017 a920 04F4      		brge .L1098
 25018               		.loc 2 2228 0 discriminator 5
 25019 a922 8FEF      		ldi r24,lo8(-1)
 25020 a924 9FEF      		ldi r25,lo8(-1)
 25021 a926 00C0      		rjmp .L1084
 25022               	.L1098:
 25023               		.loc 2 2228 0 discriminator 6
 25024 a928 81E0      		ldi r24,lo8(1)
 25025 a92a 90E0      		ldi r25,0
 25026               	.L1084:
 25027               		.loc 2 2228 0 discriminator 8
 25028 a92c 0817      		cp r16,r24
 25029 a92e 1907      		cpc r17,r25
 25030 a930 01F4      		brne .+2
 25031 a932 00C0      		rjmp .L1085
2229:lp_solve_5.5/lp_presolve.c ****         if(chsign) {
 25032               		.loc 2 2229 0 is_stmt 1
 25033 a934 8B89      		ldd r24,Y+19
 25034 a936 8823      		tst r24
 25035 a938 01F0      		breq .L1086
2230:lp_solve_5.5/lp_presolve.c ****           psdata->rows->negcount[i]--;
 25036               		.loc 2 2230 0
 25037 a93a 8AA1      		ldd r24,Y+34
 25038 a93c 9BA1      		ldd r25,Y+35
 25039 a93e FC01      		movw r30,r24
 25040 a940 8081      		ld r24,Z
 25041 a942 9181      		ldd r25,Z+1
 25042 a944 FC01      		movw r30,r24
 25043 a946 2085      		ldd r18,Z+8
 25044 a948 3185      		ldd r19,Z+9
 25045 a94a 8D85      		ldd r24,Y+13
 25046 a94c 9E85      		ldd r25,Y+14
 25047 a94e 880F      		lsl r24
 25048 a950 991F      		rol r25
 25049 a952 820F      		add r24,r18
 25050 a954 931F      		adc r25,r19
 25051 a956 FC01      		movw r30,r24
 25052 a958 2081      		ld r18,Z
 25053 a95a 3181      		ldd r19,Z+1
 25054 a95c 2150      		subi r18,1
 25055 a95e 3109      		sbc r19,__zero_reg__
 25056 a960 FC01      		movw r30,r24
 25057 a962 3183      		std Z+1,r19
 25058 a964 2083      		st Z,r18
2231:lp_solve_5.5/lp_presolve.c ****           psdata->rows->plucount[i]++;
 25059               		.loc 2 2231 0
 25060 a966 8AA1      		ldd r24,Y+34
 25061 a968 9BA1      		ldd r25,Y+35
 25062 a96a FC01      		movw r30,r24
 25063 a96c 8081      		ld r24,Z
 25064 a96e 9181      		ldd r25,Z+1
 25065 a970 FC01      		movw r30,r24
 25066 a972 2681      		ldd r18,Z+6
 25067 a974 3781      		ldd r19,Z+7
 25068 a976 8D85      		ldd r24,Y+13
 25069 a978 9E85      		ldd r25,Y+14
 25070 a97a 880F      		lsl r24
 25071 a97c 991F      		rol r25
 25072 a97e 820F      		add r24,r18
 25073 a980 931F      		adc r25,r19
 25074 a982 FC01      		movw r30,r24
 25075 a984 2081      		ld r18,Z
 25076 a986 3181      		ldd r19,Z+1
 25077 a988 2F5F      		subi r18,-1
 25078 a98a 3F4F      		sbci r19,-1
 25079 a98c FC01      		movw r30,r24
 25080 a98e 3183      		std Z+1,r19
 25081 a990 2083      		st Z,r18
 25082 a992 00C0      		rjmp .L1085
 25083               	.L1086:
2232:lp_solve_5.5/lp_presolve.c ****         }
2233:lp_solve_5.5/lp_presolve.c ****         else {
2234:lp_solve_5.5/lp_presolve.c ****           psdata->rows->negcount[i]++;
 25084               		.loc 2 2234 0
 25085 a994 8AA1      		ldd r24,Y+34
 25086 a996 9BA1      		ldd r25,Y+35
 25087 a998 FC01      		movw r30,r24
 25088 a99a 8081      		ld r24,Z
 25089 a99c 9181      		ldd r25,Z+1
 25090 a99e FC01      		movw r30,r24
 25091 a9a0 2085      		ldd r18,Z+8
 25092 a9a2 3185      		ldd r19,Z+9
 25093 a9a4 8D85      		ldd r24,Y+13
 25094 a9a6 9E85      		ldd r25,Y+14
 25095 a9a8 880F      		lsl r24
 25096 a9aa 991F      		rol r25
 25097 a9ac 820F      		add r24,r18
 25098 a9ae 931F      		adc r25,r19
 25099 a9b0 FC01      		movw r30,r24
 25100 a9b2 2081      		ld r18,Z
 25101 a9b4 3181      		ldd r19,Z+1
 25102 a9b6 2F5F      		subi r18,-1
 25103 a9b8 3F4F      		sbci r19,-1
 25104 a9ba FC01      		movw r30,r24
 25105 a9bc 3183      		std Z+1,r19
 25106 a9be 2083      		st Z,r18
2235:lp_solve_5.5/lp_presolve.c ****           psdata->rows->plucount[i]--;
 25107               		.loc 2 2235 0
 25108 a9c0 8AA1      		ldd r24,Y+34
 25109 a9c2 9BA1      		ldd r25,Y+35
 25110 a9c4 FC01      		movw r30,r24
 25111 a9c6 8081      		ld r24,Z
 25112 a9c8 9181      		ldd r25,Z+1
 25113 a9ca FC01      		movw r30,r24
 25114 a9cc 2681      		ldd r18,Z+6
 25115 a9ce 3781      		ldd r19,Z+7
 25116 a9d0 8D85      		ldd r24,Y+13
 25117 a9d2 9E85      		ldd r25,Y+14
 25118 a9d4 880F      		lsl r24
 25119 a9d6 991F      		rol r25
 25120 a9d8 820F      		add r24,r18
 25121 a9da 931F      		adc r25,r19
 25122 a9dc FC01      		movw r30,r24
 25123 a9de 2081      		ld r18,Z
 25124 a9e0 3181      		ldd r19,Z+1
 25125 a9e2 2150      		subi r18,1
 25126 a9e4 3109      		sbc r19,__zero_reg__
 25127 a9e6 FC01      		movw r30,r24
 25128 a9e8 3183      		std Z+1,r19
 25129 a9ea 2083      		st Z,r18
 25130               	.L1085:
2236:lp_solve_5.5/lp_presolve.c ****         }
2237:lp_solve_5.5/lp_presolve.c ****       }
2238:lp_solve_5.5/lp_presolve.c ****       n++;
 25131               		.loc 2 2238 0
 25132 a9ec 8B81      		ldd r24,Y+3
 25133 a9ee 9C81      		ldd r25,Y+4
 25134 a9f0 0196      		adiw r24,1
 25135 a9f2 9C83      		std Y+4,r25
 25136 a9f4 8B83      		std Y+3,r24
 25137               	.L1073:
 25138               	.LBE7:
2214:lp_solve_5.5/lp_presolve.c ****     i = COL_MAT_ROWNR(ix);
 25139               		.loc 2 2214 0
 25140 a9f6 AE01      		movw r20,r28
 25141 a9f8 405E      		subi r20,-32
 25142 a9fa 5F4F      		sbci r21,-1
 25143 a9fc 2CA1      		ldd r18,Y+36
 25144 a9fe 3DA1      		ldd r19,Y+37
 25145 aa00 8AA1      		ldd r24,Y+34
 25146 aa02 9BA1      		ldd r25,Y+35
 25147 aa04 B901      		movw r22,r18
 25148 aa06 0E94 0000 		call presolve_nextrow
 25149 aa0a 9A83      		std Y+2,r25
 25150 aa0c 8983      		std Y+1,r24
 25151               	.L1065:
2213:lp_solve_5.5/lp_presolve.c ****       ix = presolve_nextrow(psdata, colnr, &item)) {
 25152               		.loc 2 2213 0 discriminator 1
 25153 aa0e 8981      		ldd r24,Y+1
 25154 aa10 9A81      		ldd r25,Y+2
 25155 aa12 9923      		tst r25
 25156 aa14 04F0      		brlt .+2
 25157 aa16 00C0      		rjmp .L1087
2239:lp_solve_5.5/lp_presolve.c ****     }
2240:lp_solve_5.5/lp_presolve.c ****   }
2241:lp_solve_5.5/lp_presolve.c ****   return( n );
 25158               		.loc 2 2241 0
 25159 aa18 8B81      		ldd r24,Y+3
 25160 aa1a 9C81      		ldd r25,Y+4
 25161               	/* epilogue start */
2242:lp_solve_5.5/lp_presolve.c **** }
 25162               		.loc 2 2242 0
 25163 aa1c A596      		adiw r28,37
 25164 aa1e 0FB6      		in __tmp_reg__,__SREG__
 25165 aa20 F894      		cli
 25166 aa22 DEBF      		out __SP_H__,r29
 25167 aa24 0FBE      		out __SREG__,__tmp_reg__
 25168 aa26 CDBF      		out __SP_L__,r28
 25169 aa28 DF91      		pop r29
 25170 aa2a CF91      		pop r28
 25171 aa2c 1F91      		pop r17
 25172 aa2e 0F91      		pop r16
 25173 aa30 FF90      		pop r15
 25174 aa32 EF90      		pop r14
 25175 aa34 DF90      		pop r13
 25176 aa36 CF90      		pop r12
 25177 aa38 BF90      		pop r11
 25178 aa3a AF90      		pop r10
 25179 aa3c 9F90      		pop r9
 25180 aa3e 8F90      		pop r8
 25181 aa40 0895      		ret
 25182               		.cfi_endproc
 25183               	.LFE62:
 25185               		.section	.rodata
 25186               	.LC30:
 25187 06b2 7072 6573 		.string	"presolve_mergerows: Inconsistent equalities %d and %d found\n"
 25187      6F6C 7665 
 25187      5F6D 6572 
 25187      6765 726F 
 25187      7773 3A20 
 25188               	.LC31:
 25189 06ef 7072 6573 		.string	"presolve: Range infeasibility found involving rows %s and %s\n"
 25189      6F6C 7665 
 25189      3A20 5261 
 25189      6E67 6520 
 25189      696E 6665 
 25190               		.text
 25191               	.global	presolve_mergerows
 25193               	presolve_mergerows:
 25194               	.LFB63:
2243:lp_solve_5.5/lp_presolve.c **** 
2244:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_mergerows(presolverec *psdata, int *nRows, int *nSum)
2245:lp_solve_5.5/lp_presolve.c **** {
 25195               		.loc 2 2245 0
 25196               		.cfi_startproc
 25197 aa42 EF92      		push r14
 25198               	.LCFI360:
 25199               		.cfi_def_cfa_offset 3
 25200               		.cfi_offset 14, -2
 25201 aa44 FF92      		push r15
 25202               	.LCFI361:
 25203               		.cfi_def_cfa_offset 4
 25204               		.cfi_offset 15, -3
 25205 aa46 0F93      		push r16
 25206               	.LCFI362:
 25207               		.cfi_def_cfa_offset 5
 25208               		.cfi_offset 16, -4
 25209 aa48 1F93      		push r17
 25210               	.LCFI363:
 25211               		.cfi_def_cfa_offset 6
 25212               		.cfi_offset 17, -5
 25213 aa4a CF93      		push r28
 25214               	.LCFI364:
 25215               		.cfi_def_cfa_offset 7
 25216               		.cfi_offset 28, -6
 25217 aa4c DF93      		push r29
 25218               	.LCFI365:
 25219               		.cfi_def_cfa_offset 8
 25220               		.cfi_offset 29, -7
 25221 aa4e CDB7      		in r28,__SP_L__
 25222 aa50 DEB7      		in r29,__SP_H__
 25223               	.LCFI366:
 25224               		.cfi_def_cfa_register 28
 25225 aa52 AF97      		sbiw r28,47
 25226               	.LCFI367:
 25227               		.cfi_def_cfa_offset 55
 25228 aa54 0FB6      		in __tmp_reg__,__SREG__
 25229 aa56 F894      		cli
 25230 aa58 DEBF      		out __SP_H__,r29
 25231 aa5a 0FBE      		out __SREG__,__tmp_reg__
 25232 aa5c CDBF      		out __SP_L__,r28
 25233               	/* prologue: function */
 25234               	/* frame size = 47 */
 25235               	/* stack size = 53 */
 25236               	.L__stack_usage = 53
 25237 aa5e 9BA7      		std Y+43,r25
 25238 aa60 8AA7      		std Y+42,r24
 25239 aa62 7DA7      		std Y+45,r23
 25240 aa64 6CA7      		std Y+44,r22
 25241 aa66 5FA7      		std Y+47,r21
 25242 aa68 4EA7      		std Y+46,r20
2246:lp_solve_5.5/lp_presolve.c ****   lprec *lp = psdata->lp;
 25243               		.loc 2 2246 0
 25244 aa6a 8AA5      		ldd r24,Y+42
 25245 aa6c 9BA5      		ldd r25,Y+43
 25246 aa6e FC01      		movw r30,r24
 25247 aa70 8289      		ldd r24,Z+18
 25248 aa72 9389      		ldd r25,Z+19
 25249 aa74 9B8B      		std Y+19,r25
 25250 aa76 8A8B      		std Y+18,r24
2247:lp_solve_5.5/lp_presolve.c ****   MYBOOL candelete;
2248:lp_solve_5.5/lp_presolve.c ****   int    status = RUNNING, item1, item2,
 25251               		.loc 2 2248 0
 25252 aa78 88E0      		ldi r24,lo8(8)
 25253 aa7a 90E0      		ldi r25,0
 25254 aa7c 9B83      		std Y+3,r25
 25255 aa7e 8A83      		std Y+2,r24
2249:lp_solve_5.5/lp_presolve.c ****          firstix, RT1, RT2, i, ix, iix, j, jjx, n = 0;
 25256               		.loc 2 2249 0
 25257 aa80 1D86      		std Y+13,__zero_reg__
 25258 aa82 1C86      		std Y+12,__zero_reg__
2250:lp_solve_5.5/lp_presolve.c ****   REAL   Value1, Value2, bound;
2251:lp_solve_5.5/lp_presolve.c ****   MATrec *mat = lp->matA;
 25259               		.loc 2 2251 0
 25260 aa84 8A89      		ldd r24,Y+18
 25261 aa86 9B89      		ldd r25,Y+19
 25262 aa88 8A54      		subi r24,74
 25263 aa8a 9D4F      		sbci r25,-3
 25264 aa8c FC01      		movw r30,r24
 25265 aa8e 8081      		ld r24,Z
 25266 aa90 9181      		ldd r25,Z+1
 25267 aa92 9D8B      		std Y+21,r25
 25268 aa94 8C8B      		std Y+20,r24
2252:lp_solve_5.5/lp_presolve.c **** 
2253:lp_solve_5.5/lp_presolve.c ****   for(i = lastActiveLink(psdata->rows->varmap); (i > 0) && (status == RUNNING); ) {
 25269               		.loc 2 2253 0
 25270 aa96 8AA5      		ldd r24,Y+42
 25271 aa98 9BA5      		ldd r25,Y+43
 25272 aa9a FC01      		movw r30,r24
 25273 aa9c 8081      		ld r24,Z
 25274 aa9e 9181      		ldd r25,Z+1
 25275 aaa0 FC01      		movw r30,r24
 25276 aaa2 8081      		ld r24,Z
 25277 aaa4 9181      		ldd r25,Z+1
 25278 aaa6 0E94 0000 		call lastActiveLink
 25279 aaaa 9F83      		std Y+7,r25
 25280 aaac 8E83      		std Y+6,r24
 25281 aaae 00C0      		rjmp .L1100
 25282               	.L1151:
2254:lp_solve_5.5/lp_presolve.c **** 
2255:lp_solve_5.5/lp_presolve.c ****     /* First scan for rows with identical row lengths */
2256:lp_solve_5.5/lp_presolve.c ****     ix = prevActiveLink(psdata->rows->varmap, i);
 25283               		.loc 2 2256 0
 25284 aab0 8AA5      		ldd r24,Y+42
 25285 aab2 9BA5      		ldd r25,Y+43
 25286 aab4 FC01      		movw r30,r24
 25287 aab6 8081      		ld r24,Z
 25288 aab8 9181      		ldd r25,Z+1
 25289 aaba FC01      		movw r30,r24
 25290 aabc 8081      		ld r24,Z
 25291 aabe 9181      		ldd r25,Z+1
 25292 aac0 2E81      		ldd r18,Y+6
 25293 aac2 3F81      		ldd r19,Y+7
 25294 aac4 B901      		movw r22,r18
 25295 aac6 0E94 0000 		call prevActiveLink
 25296 aaca 9987      		std Y+9,r25
 25297 aacc 8887      		std Y+8,r24
2257:lp_solve_5.5/lp_presolve.c ****     if(ix == 0)
 25298               		.loc 2 2257 0
 25299 aace 8885      		ldd r24,Y+8
 25300 aad0 9985      		ldd r25,Y+9
 25301 aad2 892B      		or r24,r25
 25302 aad4 01F4      		brne .+2
 25303 aad6 00C0      		rjmp .L1174
2258:lp_solve_5.5/lp_presolve.c ****       break;
2259:lp_solve_5.5/lp_presolve.c **** 
2260:lp_solve_5.5/lp_presolve.c ****     /* Don't bother about empty rows or row singletons, since they are
2261:lp_solve_5.5/lp_presolve.c ****        handled by PRESOLVE_ROWS */
2262:lp_solve_5.5/lp_presolve.c ****     j = presolve_rowlength(psdata, i);
 25304               		.loc 2 2262 0
 25305 aad8 2E81      		ldd r18,Y+6
 25306 aada 3F81      		ldd r19,Y+7
 25307 aadc 8AA5      		ldd r24,Y+42
 25308 aade 9BA5      		ldd r25,Y+43
 25309 aae0 B901      		movw r22,r18
 25310 aae2 0E94 0000 		call presolve_rowlength
 25311 aae6 9F8B      		std Y+23,r25
 25312 aae8 8E8B      		std Y+22,r24
2263:lp_solve_5.5/lp_presolve.c ****     if(j <= 1) {
 25313               		.loc 2 2263 0
 25314 aaea 8E89      		ldd r24,Y+22
 25315 aaec 9F89      		ldd r25,Y+23
 25316 aaee 0297      		sbiw r24,2
 25317 aaf0 04F4      		brge .L1103
2264:lp_solve_5.5/lp_presolve.c ****       i = ix;
 25318               		.loc 2 2264 0
 25319 aaf2 8885      		ldd r24,Y+8
 25320 aaf4 9985      		ldd r25,Y+9
 25321 aaf6 9F83      		std Y+7,r25
 25322 aaf8 8E83      		std Y+6,r24
2265:lp_solve_5.5/lp_presolve.c ****       continue;
 25323               		.loc 2 2265 0
 25324 aafa 00C0      		rjmp .L1100
 25325               	.L1103:
2266:lp_solve_5.5/lp_presolve.c ****     }
2267:lp_solve_5.5/lp_presolve.c **** 
2268:lp_solve_5.5/lp_presolve.c **** #if 0
2269:lp_solve_5.5/lp_presolve.c ****     /* Enable this to scan all rows back */
2270:lp_solve_5.5/lp_presolve.c ****     RT2 = lp->rows;
2271:lp_solve_5.5/lp_presolve.c **** 
2272:lp_solve_5.5/lp_presolve.c ****     /* Check abort since this section can be pretty "expensive" */
2273:lp_solve_5.5/lp_presolve.c ****     if(!presolve_statuscheck(psdata, &status))
2274:lp_solve_5.5/lp_presolve.c ****       return( status );
2275:lp_solve_5.5/lp_presolve.c **** #else
2276:lp_solve_5.5/lp_presolve.c ****     RT2 = 2+1;
 25326               		.loc 2 2276 0
 25327 aafc 83E0      		ldi r24,lo8(3)
 25328 aafe 90E0      		ldi r25,0
 25329 ab00 998F      		std Y+25,r25
 25330 ab02 888F      		std Y+24,r24
2277:lp_solve_5.5/lp_presolve.c **** #endif
2278:lp_solve_5.5/lp_presolve.c ****     firstix = ix;
 25331               		.loc 2 2278 0
 25332 ab04 8885      		ldd r24,Y+8
 25333 ab06 9985      		ldd r25,Y+9
 25334 ab08 9B8F      		std Y+27,r25
 25335 ab0a 8A8F      		std Y+26,r24
2279:lp_solve_5.5/lp_presolve.c ****     for(RT1 = 0; (ix > 0) && (RT1 < RT2) && (status == RUNNING);
 25336               		.loc 2 2279 0
 25337 ab0c 1D82      		std Y+5,__zero_reg__
 25338 ab0e 1C82      		std Y+4,__zero_reg__
 25339 ab10 00C0      		rjmp .L1104
 25340               	.L1150:
2280:lp_solve_5.5/lp_presolve.c ****         ix = prevActiveLink(psdata->rows->varmap, ix), RT1++)  {
2281:lp_solve_5.5/lp_presolve.c ****       candelete = FALSE;
 25341               		.loc 2 2281 0
 25342 ab12 1982      		std Y+1,__zero_reg__
2282:lp_solve_5.5/lp_presolve.c ****       if(presolve_rowlength(psdata, ix) != j)
 25343               		.loc 2 2282 0
 25344 ab14 2885      		ldd r18,Y+8
 25345 ab16 3985      		ldd r19,Y+9
 25346 ab18 8AA5      		ldd r24,Y+42
 25347 ab1a 9BA5      		ldd r25,Y+43
 25348 ab1c B901      		movw r22,r18
 25349 ab1e 0E94 0000 		call presolve_rowlength
 25350 ab22 9C01      		movw r18,r24
 25351 ab24 8E89      		ldd r24,Y+22
 25352 ab26 9F89      		ldd r25,Y+23
 25353 ab28 2817      		cp r18,r24
 25354 ab2a 3907      		cpc r19,r25
 25355 ab2c 01F0      		breq .+2
 25356 ab2e 00C0      		rjmp .L1175
2283:lp_solve_5.5/lp_presolve.c ****         continue;
2284:lp_solve_5.5/lp_presolve.c **** 
2285:lp_solve_5.5/lp_presolve.c ****       /* Check if the beginning columns are identical; if not, continue */
2286:lp_solve_5.5/lp_presolve.c ****       item1 = 0;
 25357               		.loc 2 2286 0
 25358 ab30 1F8E      		std Y+31,__zero_reg__
 25359 ab32 1E8E      		std Y+30,__zero_reg__
2287:lp_solve_5.5/lp_presolve.c ****       iix = presolve_nextcol(psdata, ix, &item1);
 25360               		.loc 2 2287 0
 25361 ab34 AE01      		movw r20,r28
 25362 ab36 425E      		subi r20,-30
 25363 ab38 5F4F      		sbci r21,-1
 25364 ab3a 2885      		ldd r18,Y+8
 25365 ab3c 3985      		ldd r19,Y+9
 25366 ab3e 8AA5      		ldd r24,Y+42
 25367 ab40 9BA5      		ldd r25,Y+43
 25368 ab42 B901      		movw r22,r18
 25369 ab44 0E94 0000 		call presolve_nextcol
 25370 ab48 9D8F      		std Y+29,r25
 25371 ab4a 8C8F      		std Y+28,r24
2288:lp_solve_5.5/lp_presolve.c ****       item2 = 0;
 25372               		.loc 2 2288 0
 25373 ab4c 19A2      		std Y+33,__zero_reg__
 25374 ab4e 18A2      		std Y+32,__zero_reg__
2289:lp_solve_5.5/lp_presolve.c ****       jjx = presolve_nextcol(psdata, i,  &item2);
 25375               		.loc 2 2289 0
 25376 ab50 AE01      		movw r20,r28
 25377 ab52 405E      		subi r20,-32
 25378 ab54 5F4F      		sbci r21,-1
 25379 ab56 2E81      		ldd r18,Y+6
 25380 ab58 3F81      		ldd r19,Y+7
 25381 ab5a 8AA5      		ldd r24,Y+42
 25382 ab5c 9BA5      		ldd r25,Y+43
 25383 ab5e B901      		movw r22,r18
 25384 ab60 0E94 0000 		call presolve_nextcol
 25385 ab64 9B87      		std Y+11,r25
 25386 ab66 8A87      		std Y+10,r24
2290:lp_solve_5.5/lp_presolve.c **** 
2291:lp_solve_5.5/lp_presolve.c ****       if(ROW_MAT_COLNR(iix) != ROW_MAT_COLNR(jjx))
 25387               		.loc 2 2291 0
 25388 ab68 8C89      		ldd r24,Y+20
 25389 ab6a 9D89      		ldd r25,Y+21
 25390 ab6c FC01      		movw r30,r24
 25391 ab6e 2485      		ldd r18,Z+12
 25392 ab70 3585      		ldd r19,Z+13
 25393 ab72 8C89      		ldd r24,Y+20
 25394 ab74 9D89      		ldd r25,Y+21
 25395 ab76 FC01      		movw r30,r24
 25396 ab78 4689      		ldd r20,Z+22
 25397 ab7a 5789      		ldd r21,Z+23
 25398 ab7c 8C8D      		ldd r24,Y+28
 25399 ab7e 9D8D      		ldd r25,Y+29
 25400 ab80 880F      		lsl r24
 25401 ab82 991F      		rol r25
 25402 ab84 840F      		add r24,r20
 25403 ab86 951F      		adc r25,r21
 25404 ab88 FC01      		movw r30,r24
 25405 ab8a 8081      		ld r24,Z
 25406 ab8c 9181      		ldd r25,Z+1
 25407 ab8e 880F      		lsl r24
 25408 ab90 991F      		rol r25
 25409 ab92 820F      		add r24,r18
 25410 ab94 931F      		adc r25,r19
 25411 ab96 FC01      		movw r30,r24
 25412 ab98 2081      		ld r18,Z
 25413 ab9a 3181      		ldd r19,Z+1
 25414 ab9c 8C89      		ldd r24,Y+20
 25415 ab9e 9D89      		ldd r25,Y+21
 25416 aba0 FC01      		movw r30,r24
 25417 aba2 4485      		ldd r20,Z+12
 25418 aba4 5585      		ldd r21,Z+13
 25419 aba6 8C89      		ldd r24,Y+20
 25420 aba8 9D89      		ldd r25,Y+21
 25421 abaa FC01      		movw r30,r24
 25422 abac 6689      		ldd r22,Z+22
 25423 abae 7789      		ldd r23,Z+23
 25424 abb0 8A85      		ldd r24,Y+10
 25425 abb2 9B85      		ldd r25,Y+11
 25426 abb4 880F      		lsl r24
 25427 abb6 991F      		rol r25
 25428 abb8 860F      		add r24,r22
 25429 abba 971F      		adc r25,r23
 25430 abbc FC01      		movw r30,r24
 25431 abbe 8081      		ld r24,Z
 25432 abc0 9181      		ldd r25,Z+1
 25433 abc2 880F      		lsl r24
 25434 abc4 991F      		rol r25
 25435 abc6 840F      		add r24,r20
 25436 abc8 951F      		adc r25,r21
 25437 abca FC01      		movw r30,r24
 25438 abcc 8081      		ld r24,Z
 25439 abce 9181      		ldd r25,Z+1
 25440 abd0 2817      		cp r18,r24
 25441 abd2 3907      		cpc r19,r25
 25442 abd4 01F0      		breq .+2
 25443 abd6 00C0      		rjmp .L1176
2292:lp_solve_5.5/lp_presolve.c ****         continue;
2293:lp_solve_5.5/lp_presolve.c **** 
2294:lp_solve_5.5/lp_presolve.c ****       /* We have a candidate row; check if the entries have a fixed non-zero ratio */
2295:lp_solve_5.5/lp_presolve.c ****       Value1 = get_mat_byindex(lp, iix, TRUE, FALSE);
 25444               		.loc 2 2295 0
 25445 abd8 6C8D      		ldd r22,Y+28
 25446 abda 7D8D      		ldd r23,Y+29
 25447 abdc 8A89      		ldd r24,Y+18
 25448 abde 9B89      		ldd r25,Y+19
 25449 abe0 20E0      		ldi r18,0
 25450 abe2 41E0      		ldi r20,lo8(1)
 25451 abe4 0E94 0000 		call get_mat_byindex
 25452 abe8 DC01      		movw r26,r24
 25453 abea CB01      		movw r24,r22
 25454 abec 8AA3      		std Y+34,r24
 25455 abee 9BA3      		std Y+35,r25
 25456 abf0 ACA3      		std Y+36,r26
 25457 abf2 BDA3      		std Y+37,r27
2296:lp_solve_5.5/lp_presolve.c ****       Value2 = get_mat_byindex(lp, jjx, TRUE, FALSE);
 25458               		.loc 2 2296 0
 25459 abf4 6A85      		ldd r22,Y+10
 25460 abf6 7B85      		ldd r23,Y+11
 25461 abf8 8A89      		ldd r24,Y+18
 25462 abfa 9B89      		ldd r25,Y+19
 25463 abfc 20E0      		ldi r18,0
 25464 abfe 41E0      		ldi r20,lo8(1)
 25465 ac00 0E94 0000 		call get_mat_byindex
 25466 ac04 DC01      		movw r26,r24
 25467 ac06 CB01      		movw r24,r22
 25468 ac08 8EA3      		std Y+38,r24
 25469 ac0a 9FA3      		std Y+39,r25
 25470 ac0c A8A7      		std Y+40,r26
 25471 ac0e B9A7      		std Y+41,r27
2297:lp_solve_5.5/lp_presolve.c ****       bound = Value1 / Value2;
 25472               		.loc 2 2297 0
 25473 ac10 8AA1      		ldd r24,Y+34
 25474 ac12 9BA1      		ldd r25,Y+35
 25475 ac14 ACA1      		ldd r26,Y+36
 25476 ac16 BDA1      		ldd r27,Y+37
 25477 ac18 2EA1      		ldd r18,Y+38
 25478 ac1a 3FA1      		ldd r19,Y+39
 25479 ac1c 48A5      		ldd r20,Y+40
 25480 ac1e 59A5      		ldd r21,Y+41
 25481 ac20 BC01      		movw r22,r24
 25482 ac22 CD01      		movw r24,r26
 25483 ac24 0E94 0000 		call __divsf3
 25484 ac28 DC01      		movw r26,r24
 25485 ac2a CB01      		movw r24,r22
 25486 ac2c 8E87      		std Y+14,r24
 25487 ac2e 9F87      		std Y+15,r25
 25488 ac30 A88B      		std Y+16,r26
 25489 ac32 B98B      		std Y+17,r27
2298:lp_solve_5.5/lp_presolve.c ****       Value1 = bound;
 25490               		.loc 2 2298 0
 25491 ac34 8E85      		ldd r24,Y+14
 25492 ac36 9F85      		ldd r25,Y+15
 25493 ac38 A889      		ldd r26,Y+16
 25494 ac3a B989      		ldd r27,Y+17
 25495 ac3c 8AA3      		std Y+34,r24
 25496 ac3e 9BA3      		std Y+35,r25
 25497 ac40 ACA3      		std Y+36,r26
 25498 ac42 BDA3      		std Y+37,r27
2299:lp_solve_5.5/lp_presolve.c **** 
2300:lp_solve_5.5/lp_presolve.c ****       /* Loop over remaining entries */
2301:lp_solve_5.5/lp_presolve.c ****       jjx = presolve_nextcol(psdata, i, &item2);
 25499               		.loc 2 2301 0
 25500 ac44 AE01      		movw r20,r28
 25501 ac46 405E      		subi r20,-32
 25502 ac48 5F4F      		sbci r21,-1
 25503 ac4a 2E81      		ldd r18,Y+6
 25504 ac4c 3F81      		ldd r19,Y+7
 25505 ac4e 8AA5      		ldd r24,Y+42
 25506 ac50 9BA5      		ldd r25,Y+43
 25507 ac52 B901      		movw r22,r18
 25508 ac54 0E94 0000 		call presolve_nextcol
 25509 ac58 9B87      		std Y+11,r25
 25510 ac5a 8A87      		std Y+10,r24
2302:lp_solve_5.5/lp_presolve.c ****       for(; (jjx >= 0) && (Value1 == bound);
 25511               		.loc 2 2302 0
 25512 ac5c 00C0      		rjmp .L1108
 25513               	.L1115:
2303:lp_solve_5.5/lp_presolve.c ****           jjx = presolve_nextcol(psdata, i, &item2)) {
2304:lp_solve_5.5/lp_presolve.c ****         iix = presolve_nextcol(psdata, ix, &item1);
 25514               		.loc 2 2304 0
 25515 ac5e AE01      		movw r20,r28
 25516 ac60 425E      		subi r20,-30
 25517 ac62 5F4F      		sbci r21,-1
 25518 ac64 2885      		ldd r18,Y+8
 25519 ac66 3985      		ldd r19,Y+9
 25520 ac68 8AA5      		ldd r24,Y+42
 25521 ac6a 9BA5      		ldd r25,Y+43
 25522 ac6c B901      		movw r22,r18
 25523 ac6e 0E94 0000 		call presolve_nextcol
 25524 ac72 9D8F      		std Y+29,r25
 25525 ac74 8C8F      		std Y+28,r24
2305:lp_solve_5.5/lp_presolve.c ****         if(ROW_MAT_COLNR(iix) != ROW_MAT_COLNR(jjx))
 25526               		.loc 2 2305 0
 25527 ac76 8C89      		ldd r24,Y+20
 25528 ac78 9D89      		ldd r25,Y+21
 25529 ac7a FC01      		movw r30,r24
 25530 ac7c 2485      		ldd r18,Z+12
 25531 ac7e 3585      		ldd r19,Z+13
 25532 ac80 8C89      		ldd r24,Y+20
 25533 ac82 9D89      		ldd r25,Y+21
 25534 ac84 FC01      		movw r30,r24
 25535 ac86 4689      		ldd r20,Z+22
 25536 ac88 5789      		ldd r21,Z+23
 25537 ac8a 8C8D      		ldd r24,Y+28
 25538 ac8c 9D8D      		ldd r25,Y+29
 25539 ac8e 880F      		lsl r24
 25540 ac90 991F      		rol r25
 25541 ac92 840F      		add r24,r20
 25542 ac94 951F      		adc r25,r21
 25543 ac96 FC01      		movw r30,r24
 25544 ac98 8081      		ld r24,Z
 25545 ac9a 9181      		ldd r25,Z+1
 25546 ac9c 880F      		lsl r24
 25547 ac9e 991F      		rol r25
 25548 aca0 820F      		add r24,r18
 25549 aca2 931F      		adc r25,r19
 25550 aca4 FC01      		movw r30,r24
 25551 aca6 2081      		ld r18,Z
 25552 aca8 3181      		ldd r19,Z+1
 25553 acaa 8C89      		ldd r24,Y+20
 25554 acac 9D89      		ldd r25,Y+21
 25555 acae FC01      		movw r30,r24
 25556 acb0 4485      		ldd r20,Z+12
 25557 acb2 5585      		ldd r21,Z+13
 25558 acb4 8C89      		ldd r24,Y+20
 25559 acb6 9D89      		ldd r25,Y+21
 25560 acb8 FC01      		movw r30,r24
 25561 acba 6689      		ldd r22,Z+22
 25562 acbc 7789      		ldd r23,Z+23
 25563 acbe 8A85      		ldd r24,Y+10
 25564 acc0 9B85      		ldd r25,Y+11
 25565 acc2 880F      		lsl r24
 25566 acc4 991F      		rol r25
 25567 acc6 860F      		add r24,r22
 25568 acc8 971F      		adc r25,r23
 25569 acca FC01      		movw r30,r24
 25570 accc 8081      		ld r24,Z
 25571 acce 9181      		ldd r25,Z+1
 25572 acd0 880F      		lsl r24
 25573 acd2 991F      		rol r25
 25574 acd4 840F      		add r24,r20
 25575 acd6 951F      		adc r25,r21
 25576 acd8 FC01      		movw r30,r24
 25577 acda 8081      		ld r24,Z
 25578 acdc 9181      		ldd r25,Z+1
 25579 acde 2817      		cp r18,r24
 25580 ace0 3907      		cpc r19,r25
 25581 ace2 01F0      		breq .+2
 25582 ace4 00C0      		rjmp .L1177
2306:lp_solve_5.5/lp_presolve.c ****           break;
2307:lp_solve_5.5/lp_presolve.c ****         Value1 = get_mat_byindex(lp, iix, TRUE, FALSE);
 25583               		.loc 2 2307 0
 25584 ace6 6C8D      		ldd r22,Y+28
 25585 ace8 7D8D      		ldd r23,Y+29
 25586 acea 8A89      		ldd r24,Y+18
 25587 acec 9B89      		ldd r25,Y+19
 25588 acee 20E0      		ldi r18,0
 25589 acf0 41E0      		ldi r20,lo8(1)
 25590 acf2 0E94 0000 		call get_mat_byindex
 25591 acf6 DC01      		movw r26,r24
 25592 acf8 CB01      		movw r24,r22
 25593 acfa 8AA3      		std Y+34,r24
 25594 acfc 9BA3      		std Y+35,r25
 25595 acfe ACA3      		std Y+36,r26
 25596 ad00 BDA3      		std Y+37,r27
2308:lp_solve_5.5/lp_presolve.c ****         Value2 = get_mat_byindex(lp, jjx, TRUE, FALSE);
 25597               		.loc 2 2308 0
 25598 ad02 6A85      		ldd r22,Y+10
 25599 ad04 7B85      		ldd r23,Y+11
 25600 ad06 8A89      		ldd r24,Y+18
 25601 ad08 9B89      		ldd r25,Y+19
 25602 ad0a 20E0      		ldi r18,0
 25603 ad0c 41E0      		ldi r20,lo8(1)
 25604 ad0e 0E94 0000 		call get_mat_byindex
 25605 ad12 DC01      		movw r26,r24
 25606 ad14 CB01      		movw r24,r22
 25607 ad16 8EA3      		std Y+38,r24
 25608 ad18 9FA3      		std Y+39,r25
 25609 ad1a A8A7      		std Y+40,r26
 25610 ad1c B9A7      		std Y+41,r27
2309:lp_solve_5.5/lp_presolve.c **** 
2310:lp_solve_5.5/lp_presolve.c ****         /* If the ratio is different from the reference value we have a mismatch */
2311:lp_solve_5.5/lp_presolve.c ****         Value1 = Value1 / Value2;
 25611               		.loc 2 2311 0
 25612 ad1e 8AA1      		ldd r24,Y+34
 25613 ad20 9BA1      		ldd r25,Y+35
 25614 ad22 ACA1      		ldd r26,Y+36
 25615 ad24 BDA1      		ldd r27,Y+37
 25616 ad26 2EA1      		ldd r18,Y+38
 25617 ad28 3FA1      		ldd r19,Y+39
 25618 ad2a 48A5      		ldd r20,Y+40
 25619 ad2c 59A5      		ldd r21,Y+41
 25620 ad2e BC01      		movw r22,r24
 25621 ad30 CD01      		movw r24,r26
 25622 ad32 0E94 0000 		call __divsf3
 25623 ad36 DC01      		movw r26,r24
 25624 ad38 CB01      		movw r24,r22
 25625 ad3a 8AA3      		std Y+34,r24
 25626 ad3c 9BA3      		std Y+35,r25
 25627 ad3e ACA3      		std Y+36,r26
 25628 ad40 BDA3      		std Y+37,r27
2312:lp_solve_5.5/lp_presolve.c ****         if(bound == lp->infinite)
 25629               		.loc 2 2312 0
 25630 ad42 8A89      		ldd r24,Y+18
 25631 ad44 9B89      		ldd r25,Y+19
 25632 ad46 865F      		subi r24,-10
 25633 ad48 9C4F      		sbci r25,-4
 25634 ad4a FC01      		movw r30,r24
 25635 ad4c 8081      		ld r24,Z
 25636 ad4e 9181      		ldd r25,Z+1
 25637 ad50 A281      		ldd r26,Z+2
 25638 ad52 B381      		ldd r27,Z+3
 25639 ad54 2E85      		ldd r18,Y+14
 25640 ad56 3F85      		ldd r19,Y+15
 25641 ad58 4889      		ldd r20,Y+16
 25642 ad5a 5989      		ldd r21,Y+17
 25643 ad5c BC01      		movw r22,r24
 25644 ad5e CD01      		movw r24,r26
 25645 ad60 0E94 0000 		call __eqsf2
 25646 ad64 8823      		tst r24
 25647 ad66 01F4      		brne .L1166
2313:lp_solve_5.5/lp_presolve.c ****           bound = Value1;
 25648               		.loc 2 2313 0
 25649 ad68 8AA1      		ldd r24,Y+34
 25650 ad6a 9BA1      		ldd r25,Y+35
 25651 ad6c ACA1      		ldd r26,Y+36
 25652 ad6e BDA1      		ldd r27,Y+37
 25653 ad70 8E87      		std Y+14,r24
 25654 ad72 9F87      		std Y+15,r25
 25655 ad74 A88B      		std Y+16,r26
 25656 ad76 B98B      		std Y+17,r27
 25657 ad78 00C0      		rjmp .L1113
 25658               	.L1166:
2314:lp_solve_5.5/lp_presolve.c ****         else if(fabs(Value1 - bound) > psdata->epsvalue)
 25659               		.loc 2 2314 0
 25660 ad7a 8AA1      		ldd r24,Y+34
 25661 ad7c 9BA1      		ldd r25,Y+35
 25662 ad7e ACA1      		ldd r26,Y+36
 25663 ad80 BDA1      		ldd r27,Y+37
 25664 ad82 2E85      		ldd r18,Y+14
 25665 ad84 3F85      		ldd r19,Y+15
 25666 ad86 4889      		ldd r20,Y+16
 25667 ad88 5989      		ldd r21,Y+17
 25668 ad8a BC01      		movw r22,r24
 25669 ad8c CD01      		movw r24,r26
 25670 ad8e 0E94 0000 		call __subsf3
 25671 ad92 DC01      		movw r26,r24
 25672 ad94 CB01      		movw r24,r22
 25673 ad96 BF77      		andi r27,0x7f
 25674 ad98 2AA5      		ldd r18,Y+42
 25675 ad9a 3BA5      		ldd r19,Y+43
 25676 ad9c F901      		movw r30,r18
 25677 ad9e 2489      		ldd r18,Z+20
 25678 ada0 3589      		ldd r19,Z+21
 25679 ada2 4689      		ldd r20,Z+22
 25680 ada4 5789      		ldd r21,Z+23
 25681 ada6 BC01      		movw r22,r24
 25682 ada8 CD01      		movw r24,r26
 25683 adaa 0E94 0000 		call __gtsf2
 25684 adae 1816      		cp __zero_reg__,r24
 25685 adb0 04F0      		brlt .L1178
 25686               	.L1113:
2303:lp_solve_5.5/lp_presolve.c ****         iix = presolve_nextcol(psdata, ix, &item1);
 25687               		.loc 2 2303 0
 25688 adb2 AE01      		movw r20,r28
 25689 adb4 405E      		subi r20,-32
 25690 adb6 5F4F      		sbci r21,-1
 25691 adb8 2E81      		ldd r18,Y+6
 25692 adba 3F81      		ldd r19,Y+7
 25693 adbc 8AA5      		ldd r24,Y+42
 25694 adbe 9BA5      		ldd r25,Y+43
 25695 adc0 B901      		movw r22,r18
 25696 adc2 0E94 0000 		call presolve_nextcol
 25697 adc6 9B87      		std Y+11,r25
 25698 adc8 8A87      		std Y+10,r24
 25699               	.L1108:
2302:lp_solve_5.5/lp_presolve.c ****           jjx = presolve_nextcol(psdata, i, &item2)) {
 25700               		.loc 2 2302 0
 25701 adca 8A85      		ldd r24,Y+10
 25702 adcc 9B85      		ldd r25,Y+11
 25703 adce 9923      		tst r25
 25704 add0 04F0      		brlt .L1110
2302:lp_solve_5.5/lp_presolve.c ****           jjx = presolve_nextcol(psdata, i, &item2)) {
 25705               		.loc 2 2302 0 is_stmt 0 discriminator 1
 25706 add2 8AA1      		ldd r24,Y+34
 25707 add4 9BA1      		ldd r25,Y+35
 25708 add6 ACA1      		ldd r26,Y+36
 25709 add8 BDA1      		ldd r27,Y+37
 25710 adda 2E85      		ldd r18,Y+14
 25711 addc 3F85      		ldd r19,Y+15
 25712 adde 4889      		ldd r20,Y+16
 25713 ade0 5989      		ldd r21,Y+17
 25714 ade2 BC01      		movw r22,r24
 25715 ade4 CD01      		movw r24,r26
 25716 ade6 0E94 0000 		call __eqsf2
 25717 adea 8823      		tst r24
 25718 adec 01F4      		brne .+2
 25719 adee 00C0      		rjmp .L1115
 25720 adf0 00C0      		rjmp .L1110
 25721               	.L1177:
2306:lp_solve_5.5/lp_presolve.c ****         Value1 = get_mat_byindex(lp, iix, TRUE, FALSE);
 25722               		.loc 2 2306 0 is_stmt 1
 25723 adf2 0000      		nop
 25724 adf4 00C0      		rjmp .L1110
 25725               	.L1178:
2315:lp_solve_5.5/lp_presolve.c ****           break;
 25726               		.loc 2 2315 0
 25727 adf6 0000      		nop
 25728               	.L1110:
2316:lp_solve_5.5/lp_presolve.c ****       }
2317:lp_solve_5.5/lp_presolve.c **** 
2318:lp_solve_5.5/lp_presolve.c ****       /* Check if we found a match (we traversed all active columns without a break) */
2319:lp_solve_5.5/lp_presolve.c ****       if(jjx < 0) {
 25729               		.loc 2 2319 0
 25730 adf8 8A85      		ldd r24,Y+10
 25731 adfa 9B85      		ldd r25,Y+11
 25732 adfc 9923      		tst r25
 25733 adfe 04F0      		brlt .+2
 25734 ae00 00C0      		rjmp .L1116
2320:lp_solve_5.5/lp_presolve.c **** 
2321:lp_solve_5.5/lp_presolve.c ****         /* Get main reference values */
2322:lp_solve_5.5/lp_presolve.c ****         Value1 = lp->orig_rhs[ix];
 25735               		.loc 2 2322 0
 25736 ae02 8A89      		ldd r24,Y+18
 25737 ae04 9B89      		ldd r25,Y+19
 25738 ae06 8A55      		subi r24,90
 25739 ae08 9D4F      		sbci r25,-3
 25740 ae0a FC01      		movw r30,r24
 25741 ae0c 2081      		ld r18,Z
 25742 ae0e 3181      		ldd r19,Z+1
 25743 ae10 8885      		ldd r24,Y+8
 25744 ae12 9985      		ldd r25,Y+9
 25745 ae14 880F      		lsl r24
 25746 ae16 991F      		rol r25
 25747 ae18 880F      		lsl r24
 25748 ae1a 991F      		rol r25
 25749 ae1c 820F      		add r24,r18
 25750 ae1e 931F      		adc r25,r19
 25751 ae20 FC01      		movw r30,r24
 25752 ae22 8081      		ld r24,Z
 25753 ae24 9181      		ldd r25,Z+1
 25754 ae26 A281      		ldd r26,Z+2
 25755 ae28 B381      		ldd r27,Z+3
 25756 ae2a 8AA3      		std Y+34,r24
 25757 ae2c 9BA3      		std Y+35,r25
 25758 ae2e ACA3      		std Y+36,r26
 25759 ae30 BDA3      		std Y+37,r27
2323:lp_solve_5.5/lp_presolve.c ****         Value2 = lp->orig_rhs[i] * bound;
 25760               		.loc 2 2323 0
 25761 ae32 8A89      		ldd r24,Y+18
 25762 ae34 9B89      		ldd r25,Y+19
 25763 ae36 8A55      		subi r24,90
 25764 ae38 9D4F      		sbci r25,-3
 25765 ae3a FC01      		movw r30,r24
 25766 ae3c 2081      		ld r18,Z
 25767 ae3e 3181      		ldd r19,Z+1
 25768 ae40 8E81      		ldd r24,Y+6
 25769 ae42 9F81      		ldd r25,Y+7
 25770 ae44 880F      		lsl r24
 25771 ae46 991F      		rol r25
 25772 ae48 880F      		lsl r24
 25773 ae4a 991F      		rol r25
 25774 ae4c 820F      		add r24,r18
 25775 ae4e 931F      		adc r25,r19
 25776 ae50 FC01      		movw r30,r24
 25777 ae52 8081      		ld r24,Z
 25778 ae54 9181      		ldd r25,Z+1
 25779 ae56 A281      		ldd r26,Z+2
 25780 ae58 B381      		ldd r27,Z+3
 25781 ae5a 2E85      		ldd r18,Y+14
 25782 ae5c 3F85      		ldd r19,Y+15
 25783 ae5e 4889      		ldd r20,Y+16
 25784 ae60 5989      		ldd r21,Y+17
 25785 ae62 BC01      		movw r22,r24
 25786 ae64 CD01      		movw r24,r26
 25787 ae66 0E94 0000 		call __mulsf3
 25788 ae6a DC01      		movw r26,r24
 25789 ae6c CB01      		movw r24,r22
 25790 ae6e 8EA3      		std Y+38,r24
 25791 ae70 9FA3      		std Y+39,r25
 25792 ae72 A8A7      		std Y+40,r26
 25793 ae74 B9A7      		std Y+41,r27
2324:lp_solve_5.5/lp_presolve.c **** 
2325:lp_solve_5.5/lp_presolve.c ****         /* First check for inconsistent equalities */
2326:lp_solve_5.5/lp_presolve.c ****         if((fabs(Value1 - Value2) > psdata->epsvalue) &&
 25794               		.loc 2 2326 0
 25795 ae76 8AA1      		ldd r24,Y+34
 25796 ae78 9BA1      		ldd r25,Y+35
 25797 ae7a ACA1      		ldd r26,Y+36
 25798 ae7c BDA1      		ldd r27,Y+37
 25799 ae7e 2EA1      		ldd r18,Y+38
 25800 ae80 3FA1      		ldd r19,Y+39
 25801 ae82 48A5      		ldd r20,Y+40
 25802 ae84 59A5      		ldd r21,Y+41
 25803 ae86 BC01      		movw r22,r24
 25804 ae88 CD01      		movw r24,r26
 25805 ae8a 0E94 0000 		call __subsf3
 25806 ae8e DC01      		movw r26,r24
 25807 ae90 CB01      		movw r24,r22
 25808 ae92 BF77      		andi r27,0x7f
 25809 ae94 2AA5      		ldd r18,Y+42
 25810 ae96 3BA5      		ldd r19,Y+43
 25811 ae98 F901      		movw r30,r18
 25812 ae9a 2489      		ldd r18,Z+20
 25813 ae9c 3589      		ldd r19,Z+21
 25814 ae9e 4689      		ldd r20,Z+22
 25815 aea0 5789      		ldd r21,Z+23
 25816 aea2 BC01      		movw r22,r24
 25817 aea4 CD01      		movw r24,r26
 25818 aea6 0E94 0000 		call __gtsf2
 25819 aeaa 1816      		cp __zero_reg__,r24
 25820 aeac 04F0      		brlt .+2
 25821 aeae 00C0      		rjmp .L1117
2327:lp_solve_5.5/lp_presolve.c ****            ((get_constr_type(lp, ix) == EQ) && (get_constr_type(lp, i) == EQ))) {
 25822               		.loc 2 2327 0 discriminator 1
 25823 aeb0 2885      		ldd r18,Y+8
 25824 aeb2 3985      		ldd r19,Y+9
 25825 aeb4 8A89      		ldd r24,Y+18
 25826 aeb6 9B89      		ldd r25,Y+19
 25827 aeb8 B901      		movw r22,r18
 25828 aeba 0E94 0000 		call get_constr_type
2326:lp_solve_5.5/lp_presolve.c ****            ((get_constr_type(lp, ix) == EQ) && (get_constr_type(lp, i) == EQ))) {
 25829               		.loc 2 2326 0 discriminator 1
 25830 aebe 0397      		sbiw r24,3
 25831 aec0 01F4      		brne .L1117
 25832               		.loc 2 2327 0
 25833 aec2 2E81      		ldd r18,Y+6
 25834 aec4 3F81      		ldd r19,Y+7
 25835 aec6 8A89      		ldd r24,Y+18
 25836 aec8 9B89      		ldd r25,Y+19
 25837 aeca B901      		movw r22,r18
 25838 aecc 0E94 0000 		call get_constr_type
 25839 aed0 0397      		sbiw r24,3
 25840 aed2 01F4      		brne .L1117
2328:lp_solve_5.5/lp_presolve.c ****           report(lp, NORMAL, "presolve_mergerows: Inconsistent equalities %d and %d found\n",
 25841               		.loc 2 2328 0
 25842 aed4 8F81      		ldd r24,Y+7
 25843 aed6 8F93      		push r24
 25844 aed8 8E81      		ldd r24,Y+6
 25845 aeda 8F93      		push r24
 25846 aedc 8985      		ldd r24,Y+9
 25847 aede 8F93      		push r24
 25848 aee0 8885      		ldd r24,Y+8
 25849 aee2 8F93      		push r24
 25850 aee4 80E0      		ldi r24,lo8(.LC30)
 25851 aee6 90E0      		ldi r25,hi8(.LC30)
 25852 aee8 892F      		mov r24,r25
 25853 aeea 8F93      		push r24
 25854 aeec 80E0      		ldi r24,lo8(.LC30)
 25855 aeee 90E0      		ldi r25,hi8(.LC30)
 25856 aef0 8F93      		push r24
 25857 aef2 1F92      		push __zero_reg__
 25858 aef4 84E0      		ldi r24,lo8(4)
 25859 aef6 8F93      		push r24
 25860 aef8 8B89      		ldd r24,Y+19
 25861 aefa 8F93      		push r24
 25862 aefc 8A89      		ldd r24,Y+18
 25863 aefe 8F93      		push r24
 25864 af00 0E94 0000 		call report
 25865 af04 8DB7      		in r24,__SP_L__
 25866 af06 9EB7      		in r25,__SP_H__
 25867 af08 0A96      		adiw r24,10
 25868 af0a 0FB6      		in __tmp_reg__,__SREG__
 25869 af0c F894      		cli
 25870 af0e DEBF      		out __SP_H__,r29
 25871 af10 0FBE      		out __SREG__,__tmp_reg__
 25872 af12 CDBF      		out __SP_L__,r28
2329:lp_solve_5.5/lp_presolve.c ****                              ix, i);
2330:lp_solve_5.5/lp_presolve.c ****           status = presolve_setstatus(psdata, INFEASIBLE);
 25873               		.loc 2 2330 0
 25874 af14 8AA5      		ldd r24,Y+42
 25875 af16 9BA5      		ldd r25,Y+43
 25876 af18 20E0      		ldi r18,lo8(.LC21)
 25877 af1a 30E0      		ldi r19,hi8(.LC21)
 25878 af1c 4AE1      		ldi r20,lo8(26)
 25879 af1e 59E0      		ldi r21,lo8(9)
 25880 af20 62E0      		ldi r22,lo8(2)
 25881 af22 70E0      		ldi r23,0
 25882 af24 0E94 0000 		call presolve_setstatusex
 25883 af28 9B83      		std Y+3,r25
 25884 af2a 8A83      		std Y+2,r24
 25885 af2c 00C0      		rjmp .L1116
 25886               	.L1117:
2331:lp_solve_5.5/lp_presolve.c ****         }
2332:lp_solve_5.5/lp_presolve.c **** 
2333:lp_solve_5.5/lp_presolve.c ****         else {
2334:lp_solve_5.5/lp_presolve.c **** 
2335:lp_solve_5.5/lp_presolve.c ****           /* Update lower and upper bounds */
2336:lp_solve_5.5/lp_presolve.c ****           if(is_chsign(lp, i) != is_chsign(lp, ix))
 25887               		.loc 2 2336 0
 25888 af2e 2E81      		ldd r18,Y+6
 25889 af30 3F81      		ldd r19,Y+7
 25890 af32 8A89      		ldd r24,Y+18
 25891 af34 9B89      		ldd r25,Y+19
 25892 af36 B901      		movw r22,r18
 25893 af38 0E94 0000 		call is_chsign
 25894 af3c 182F      		mov r17,r24
 25895 af3e 2885      		ldd r18,Y+8
 25896 af40 3985      		ldd r19,Y+9
 25897 af42 8A89      		ldd r24,Y+18
 25898 af44 9B89      		ldd r25,Y+19
 25899 af46 B901      		movw r22,r18
 25900 af48 0E94 0000 		call is_chsign
 25901 af4c 1817      		cp r17,r24
 25902 af4e 01F0      		breq .L1119
2337:lp_solve_5.5/lp_presolve.c ****             bound = -bound;
 25903               		.loc 2 2337 0
 25904 af50 8E85      		ldd r24,Y+14
 25905 af52 9F85      		ldd r25,Y+15
 25906 af54 A889      		ldd r26,Y+16
 25907 af56 B989      		ldd r27,Y+17
 25908 af58 B058      		subi r27,0x80
 25909 af5a 8E87      		std Y+14,r24
 25910 af5c 9F87      		std Y+15,r25
 25911 af5e A88B      		std Y+16,r26
 25912 af60 B98B      		std Y+17,r27
 25913               	.L1119:
2338:lp_solve_5.5/lp_presolve.c **** 
2339:lp_solve_5.5/lp_presolve.c ****           Value1 = get_rh_lower(lp, i);
 25914               		.loc 2 2339 0
 25915 af62 2E81      		ldd r18,Y+6
 25916 af64 3F81      		ldd r19,Y+7
 25917 af66 8A89      		ldd r24,Y+18
 25918 af68 9B89      		ldd r25,Y+19
 25919 af6a B901      		movw r22,r18
 25920 af6c 0E94 0000 		call get_rh_lower
 25921 af70 DC01      		movw r26,r24
 25922 af72 CB01      		movw r24,r22
 25923 af74 8AA3      		std Y+34,r24
 25924 af76 9BA3      		std Y+35,r25
 25925 af78 ACA3      		std Y+36,r26
 25926 af7a BDA3      		std Y+37,r27
2340:lp_solve_5.5/lp_presolve.c ****           if(Value1 <= -lp->infinite)
 25927               		.loc 2 2340 0
 25928 af7c 8A89      		ldd r24,Y+18
 25929 af7e 9B89      		ldd r25,Y+19
 25930 af80 865F      		subi r24,-10
 25931 af82 9C4F      		sbci r25,-4
 25932 af84 FC01      		movw r30,r24
 25933 af86 8081      		ld r24,Z
 25934 af88 9181      		ldd r25,Z+1
 25935 af8a A281      		ldd r26,Z+2
 25936 af8c B381      		ldd r27,Z+3
 25937 af8e B058      		subi r27,0x80
 25938 af90 2AA1      		ldd r18,Y+34
 25939 af92 3BA1      		ldd r19,Y+35
 25940 af94 4CA1      		ldd r20,Y+36
 25941 af96 5DA1      		ldd r21,Y+37
 25942 af98 BC01      		movw r22,r24
 25943 af9a CD01      		movw r24,r26
 25944 af9c 0E94 0000 		call __gesf2
 25945 afa0 8823      		tst r24
 25946 afa2 04F0      		brlt .L1167
2341:lp_solve_5.5/lp_presolve.c ****             Value1 *= my_sign(bound);
 25947               		.loc 2 2341 0
 25948 afa4 20E0      		ldi r18,0
 25949 afa6 30E0      		ldi r19,0
 25950 afa8 A901      		movw r20,r18
 25951 afaa 6E85      		ldd r22,Y+14
 25952 afac 7F85      		ldd r23,Y+15
 25953 afae 8889      		ldd r24,Y+16
 25954 afb0 9989      		ldd r25,Y+17
 25955 afb2 0E94 0000 		call __ltsf2
 25956 afb6 8823      		tst r24
 25957 afb8 04F4      		brge .L1168
 25958               		.loc 2 2341 0 is_stmt 0 discriminator 1
 25959 afba 80E0      		ldi r24,0
 25960 afbc 90E0      		ldi r25,0
 25961 afbe A0E8      		ldi r26,lo8(-128)
 25962 afc0 BFEB      		ldi r27,lo8(-65)
 25963 afc2 00C0      		rjmp .L1124
 25964               	.L1168:
 25965               		.loc 2 2341 0 discriminator 2
 25966 afc4 80E0      		ldi r24,0
 25967 afc6 90E0      		ldi r25,0
 25968 afc8 A0E8      		ldi r26,lo8(-128)
 25969 afca BFE3      		ldi r27,lo8(63)
 25970               	.L1124:
 25971               		.loc 2 2341 0 discriminator 4
 25972 afcc 2AA1      		ldd r18,Y+34
 25973 afce 3BA1      		ldd r19,Y+35
 25974 afd0 4CA1      		ldd r20,Y+36
 25975 afd2 5DA1      		ldd r21,Y+37
 25976 afd4 BC01      		movw r22,r24
 25977 afd6 CD01      		movw r24,r26
 25978 afd8 0E94 0000 		call __mulsf3
 25979 afdc DC01      		movw r26,r24
 25980 afde CB01      		movw r24,r22
 25981 afe0 8AA3      		std Y+34,r24
 25982 afe2 9BA3      		std Y+35,r25
 25983 afe4 ACA3      		std Y+36,r26
 25984 afe6 BDA3      		std Y+37,r27
 25985 afe8 00C0      		rjmp .L1125
 25986               	.L1167:
2342:lp_solve_5.5/lp_presolve.c ****           else
2343:lp_solve_5.5/lp_presolve.c ****             Value1 *= bound;
 25987               		.loc 2 2343 0 is_stmt 1
 25988 afea 8AA1      		ldd r24,Y+34
 25989 afec 9BA1      		ldd r25,Y+35
 25990 afee ACA1      		ldd r26,Y+36
 25991 aff0 BDA1      		ldd r27,Y+37
 25992 aff2 2E85      		ldd r18,Y+14
 25993 aff4 3F85      		ldd r19,Y+15
 25994 aff6 4889      		ldd r20,Y+16
 25995 aff8 5989      		ldd r21,Y+17
 25996 affa BC01      		movw r22,r24
 25997 affc CD01      		movw r24,r26
 25998 affe 0E94 0000 		call __mulsf3
 25999 b002 DC01      		movw r26,r24
 26000 b004 CB01      		movw r24,r22
 26001 b006 8AA3      		std Y+34,r24
 26002 b008 9BA3      		std Y+35,r25
 26003 b00a ACA3      		std Y+36,r26
 26004 b00c BDA3      		std Y+37,r27
 26005               	.L1125:
2344:lp_solve_5.5/lp_presolve.c ****           my_roundzero(Value1, lp->epsdual);      /* Extra rounding tolerance *** */
 26006               		.loc 2 2344 0
 26007 b00e 8AA1      		ldd r24,Y+34
 26008 b010 9BA1      		ldd r25,Y+35
 26009 b012 ACA1      		ldd r26,Y+36
 26010 b014 BDA1      		ldd r27,Y+37
 26011 b016 BF77      		andi r27,0x7f
 26012 b018 2A89      		ldd r18,Y+18
 26013 b01a 3B89      		ldd r19,Y+19
 26014 b01c 225E      		subi r18,-30
 26015 b01e 3C4F      		sbci r19,-4
 26016 b020 F901      		movw r30,r18
 26017 b022 2081      		ld r18,Z
 26018 b024 3181      		ldd r19,Z+1
 26019 b026 4281      		ldd r20,Z+2
 26020 b028 5381      		ldd r21,Z+3
 26021 b02a BC01      		movw r22,r24
 26022 b02c CD01      		movw r24,r26
 26023 b02e 0E94 0000 		call __ltsf2
 26024 b032 8823      		tst r24
 26025 b034 04F4      		brge .L1126
 26026               		.loc 2 2344 0 is_stmt 0 discriminator 1
 26027 b036 1AA2      		std Y+34,__zero_reg__
 26028 b038 1BA2      		std Y+35,__zero_reg__
 26029 b03a 1CA2      		std Y+36,__zero_reg__
 26030 b03c 1DA2      		std Y+37,__zero_reg__
 26031               	.L1126:
2345:lp_solve_5.5/lp_presolve.c **** 
2346:lp_solve_5.5/lp_presolve.c ****           Value2 = get_rh_upper(lp, i);
 26032               		.loc 2 2346 0 is_stmt 1
 26033 b03e 2E81      		ldd r18,Y+6
 26034 b040 3F81      		ldd r19,Y+7
 26035 b042 8A89      		ldd r24,Y+18
 26036 b044 9B89      		ldd r25,Y+19
 26037 b046 B901      		movw r22,r18
 26038 b048 0E94 0000 		call get_rh_upper
 26039 b04c DC01      		movw r26,r24
 26040 b04e CB01      		movw r24,r22
 26041 b050 8EA3      		std Y+38,r24
 26042 b052 9FA3      		std Y+39,r25
 26043 b054 A8A7      		std Y+40,r26
 26044 b056 B9A7      		std Y+41,r27
2347:lp_solve_5.5/lp_presolve.c ****           if(Value2 >= lp->infinite)
 26045               		.loc 2 2347 0
 26046 b058 8A89      		ldd r24,Y+18
 26047 b05a 9B89      		ldd r25,Y+19
 26048 b05c 865F      		subi r24,-10
 26049 b05e 9C4F      		sbci r25,-4
 26050 b060 FC01      		movw r30,r24
 26051 b062 8081      		ld r24,Z
 26052 b064 9181      		ldd r25,Z+1
 26053 b066 A281      		ldd r26,Z+2
 26054 b068 B381      		ldd r27,Z+3
 26055 b06a 2EA1      		ldd r18,Y+38
 26056 b06c 3FA1      		ldd r19,Y+39
 26057 b06e 48A5      		ldd r20,Y+40
 26058 b070 59A5      		ldd r21,Y+41
 26059 b072 BC01      		movw r22,r24
 26060 b074 CD01      		movw r24,r26
 26061 b076 0E94 0000 		call __lesf2
 26062 b07a 1816      		cp __zero_reg__,r24
 26063 b07c 04F0      		brlt .L1169
2348:lp_solve_5.5/lp_presolve.c ****             Value2 *= my_sign(bound);
 26064               		.loc 2 2348 0
 26065 b07e 20E0      		ldi r18,0
 26066 b080 30E0      		ldi r19,0
 26067 b082 A901      		movw r20,r18
 26068 b084 6E85      		ldd r22,Y+14
 26069 b086 7F85      		ldd r23,Y+15
 26070 b088 8889      		ldd r24,Y+16
 26071 b08a 9989      		ldd r25,Y+17
 26072 b08c 0E94 0000 		call __ltsf2
 26073 b090 8823      		tst r24
 26074 b092 04F4      		brge .L1170
 26075               		.loc 2 2348 0 is_stmt 0 discriminator 1
 26076 b094 80E0      		ldi r24,0
 26077 b096 90E0      		ldi r25,0
 26078 b098 A0E8      		ldi r26,lo8(-128)
 26079 b09a BFEB      		ldi r27,lo8(-65)
 26080 b09c 00C0      		rjmp .L1132
 26081               	.L1170:
 26082               		.loc 2 2348 0 discriminator 2
 26083 b09e 80E0      		ldi r24,0
 26084 b0a0 90E0      		ldi r25,0
 26085 b0a2 A0E8      		ldi r26,lo8(-128)
 26086 b0a4 BFE3      		ldi r27,lo8(63)
 26087               	.L1132:
 26088               		.loc 2 2348 0 discriminator 4
 26089 b0a6 2EA1      		ldd r18,Y+38
 26090 b0a8 3FA1      		ldd r19,Y+39
 26091 b0aa 48A5      		ldd r20,Y+40
 26092 b0ac 59A5      		ldd r21,Y+41
 26093 b0ae BC01      		movw r22,r24
 26094 b0b0 CD01      		movw r24,r26
 26095 b0b2 0E94 0000 		call __mulsf3
 26096 b0b6 DC01      		movw r26,r24
 26097 b0b8 CB01      		movw r24,r22
 26098 b0ba 8EA3      		std Y+38,r24
 26099 b0bc 9FA3      		std Y+39,r25
 26100 b0be A8A7      		std Y+40,r26
 26101 b0c0 B9A7      		std Y+41,r27
 26102 b0c2 00C0      		rjmp .L1133
 26103               	.L1169:
2349:lp_solve_5.5/lp_presolve.c ****           else
2350:lp_solve_5.5/lp_presolve.c ****             Value2 *= bound;
 26104               		.loc 2 2350 0 is_stmt 1
 26105 b0c4 8EA1      		ldd r24,Y+38
 26106 b0c6 9FA1      		ldd r25,Y+39
 26107 b0c8 A8A5      		ldd r26,Y+40
 26108 b0ca B9A5      		ldd r27,Y+41
 26109 b0cc 2E85      		ldd r18,Y+14
 26110 b0ce 3F85      		ldd r19,Y+15
 26111 b0d0 4889      		ldd r20,Y+16
 26112 b0d2 5989      		ldd r21,Y+17
 26113 b0d4 BC01      		movw r22,r24
 26114 b0d6 CD01      		movw r24,r26
 26115 b0d8 0E94 0000 		call __mulsf3
 26116 b0dc DC01      		movw r26,r24
 26117 b0de CB01      		movw r24,r22
 26118 b0e0 8EA3      		std Y+38,r24
 26119 b0e2 9FA3      		std Y+39,r25
 26120 b0e4 A8A7      		std Y+40,r26
 26121 b0e6 B9A7      		std Y+41,r27
 26122               	.L1133:
2351:lp_solve_5.5/lp_presolve.c ****           my_roundzero(Value2, lp->epsdual);      /* Extra rounding tolerance *** */
 26123               		.loc 2 2351 0
 26124 b0e8 8EA1      		ldd r24,Y+38
 26125 b0ea 9FA1      		ldd r25,Y+39
 26126 b0ec A8A5      		ldd r26,Y+40
 26127 b0ee B9A5      		ldd r27,Y+41
 26128 b0f0 BF77      		andi r27,0x7f
 26129 b0f2 2A89      		ldd r18,Y+18
 26130 b0f4 3B89      		ldd r19,Y+19
 26131 b0f6 225E      		subi r18,-30
 26132 b0f8 3C4F      		sbci r19,-4
 26133 b0fa F901      		movw r30,r18
 26134 b0fc 2081      		ld r18,Z
 26135 b0fe 3181      		ldd r19,Z+1
 26136 b100 4281      		ldd r20,Z+2
 26137 b102 5381      		ldd r21,Z+3
 26138 b104 BC01      		movw r22,r24
 26139 b106 CD01      		movw r24,r26
 26140 b108 0E94 0000 		call __ltsf2
 26141 b10c 8823      		tst r24
 26142 b10e 04F4      		brge .L1134
 26143               		.loc 2 2351 0 is_stmt 0 discriminator 1
 26144 b110 1EA2      		std Y+38,__zero_reg__
 26145 b112 1FA2      		std Y+39,__zero_reg__
 26146 b114 18A6      		std Y+40,__zero_reg__
 26147 b116 19A6      		std Y+41,__zero_reg__
 26148               	.L1134:
2352:lp_solve_5.5/lp_presolve.c **** 
2353:lp_solve_5.5/lp_presolve.c ****           if((bound < 0))
 26149               		.loc 2 2353 0 is_stmt 1
 26150 b118 20E0      		ldi r18,0
 26151 b11a 30E0      		ldi r19,0
 26152 b11c A901      		movw r20,r18
 26153 b11e 6E85      		ldd r22,Y+14
 26154 b120 7F85      		ldd r23,Y+15
 26155 b122 8889      		ldd r24,Y+16
 26156 b124 9989      		ldd r25,Y+17
 26157 b126 0E94 0000 		call __ltsf2
 26158 b12a 8823      		tst r24
 26159 b12c 04F4      		brge .L1136
2354:lp_solve_5.5/lp_presolve.c ****             swapREAL(&Value1, &Value2);
 26160               		.loc 2 2354 0
 26161 b12e 9E01      		movw r18,r28
 26162 b130 2A5D      		subi r18,-38
 26163 b132 3F4F      		sbci r19,-1
 26164 b134 CE01      		movw r24,r28
 26165 b136 8296      		adiw r24,34
 26166 b138 B901      		movw r22,r18
 26167 b13a 0E94 0000 		call swapREAL
 26168               	.L1136:
2355:lp_solve_5.5/lp_presolve.c **** 
2356:lp_solve_5.5/lp_presolve.c ****           bound = get_rh_lower(lp, ix);
 26169               		.loc 2 2356 0
 26170 b13e 2885      		ldd r18,Y+8
 26171 b140 3985      		ldd r19,Y+9
 26172 b142 8A89      		ldd r24,Y+18
 26173 b144 9B89      		ldd r25,Y+19
 26174 b146 B901      		movw r22,r18
 26175 b148 0E94 0000 		call get_rh_lower
 26176 b14c DC01      		movw r26,r24
 26177 b14e CB01      		movw r24,r22
 26178 b150 8E87      		std Y+14,r24
 26179 b152 9F87      		std Y+15,r25
 26180 b154 A88B      		std Y+16,r26
 26181 b156 B98B      		std Y+17,r27
2357:lp_solve_5.5/lp_presolve.c ****           if(Value1 > bound + psdata->epsvalue)
 26182               		.loc 2 2357 0
 26183 b158 8AA5      		ldd r24,Y+42
 26184 b15a 9BA5      		ldd r25,Y+43
 26185 b15c FC01      		movw r30,r24
 26186 b15e 8489      		ldd r24,Z+20
 26187 b160 9589      		ldd r25,Z+21
 26188 b162 A689      		ldd r26,Z+22
 26189 b164 B789      		ldd r27,Z+23
 26190 b166 2E85      		ldd r18,Y+14
 26191 b168 3F85      		ldd r19,Y+15
 26192 b16a 4889      		ldd r20,Y+16
 26193 b16c 5989      		ldd r21,Y+17
 26194 b16e BC01      		movw r22,r24
 26195 b170 CD01      		movw r24,r26
 26196 b172 0E94 0000 		call __addsf3
 26197 b176 DC01      		movw r26,r24
 26198 b178 CB01      		movw r24,r22
 26199 b17a 7C01      		movw r14,r24
 26200 b17c 8D01      		movw r16,r26
 26201 b17e 8AA1      		ldd r24,Y+34
 26202 b180 9BA1      		ldd r25,Y+35
 26203 b182 ACA1      		ldd r26,Y+36
 26204 b184 BDA1      		ldd r27,Y+37
 26205 b186 9C01      		movw r18,r24
 26206 b188 AD01      		movw r20,r26
 26207 b18a C801      		movw r24,r16
 26208 b18c B701      		movw r22,r14
 26209 b18e 0E94 0000 		call __ltsf2
 26210 b192 8823      		tst r24
 26211 b194 04F4      		brge .L1171
2358:lp_solve_5.5/lp_presolve.c ****             set_rh_lower(lp, ix, Value1);
 26212               		.loc 2 2358 0
 26213 b196 8AA1      		ldd r24,Y+34
 26214 b198 9BA1      		ldd r25,Y+35
 26215 b19a ACA1      		ldd r26,Y+36
 26216 b19c BDA1      		ldd r27,Y+37
 26217 b19e 6885      		ldd r22,Y+8
 26218 b1a0 7985      		ldd r23,Y+9
 26219 b1a2 EA89      		ldd r30,Y+18
 26220 b1a4 FB89      		ldd r31,Y+19
 26221 b1a6 9C01      		movw r18,r24
 26222 b1a8 AD01      		movw r20,r26
 26223 b1aa CF01      		movw r24,r30
 26224 b1ac 0E94 0000 		call set_rh_lower
 26225 b1b0 00C0      		rjmp .L1140
 26226               	.L1171:
2359:lp_solve_5.5/lp_presolve.c ****           else
2360:lp_solve_5.5/lp_presolve.c ****             Value1 = bound;
 26227               		.loc 2 2360 0
 26228 b1b2 8E85      		ldd r24,Y+14
 26229 b1b4 9F85      		ldd r25,Y+15
 26230 b1b6 A889      		ldd r26,Y+16
 26231 b1b8 B989      		ldd r27,Y+17
 26232 b1ba 8AA3      		std Y+34,r24
 26233 b1bc 9BA3      		std Y+35,r25
 26234 b1be ACA3      		std Y+36,r26
 26235 b1c0 BDA3      		std Y+37,r27
 26236               	.L1140:
2361:lp_solve_5.5/lp_presolve.c ****           bound = get_rh_upper(lp, ix);
 26237               		.loc 2 2361 0
 26238 b1c2 2885      		ldd r18,Y+8
 26239 b1c4 3985      		ldd r19,Y+9
 26240 b1c6 8A89      		ldd r24,Y+18
 26241 b1c8 9B89      		ldd r25,Y+19
 26242 b1ca B901      		movw r22,r18
 26243 b1cc 0E94 0000 		call get_rh_upper
 26244 b1d0 DC01      		movw r26,r24
 26245 b1d2 CB01      		movw r24,r22
 26246 b1d4 8E87      		std Y+14,r24
 26247 b1d6 9F87      		std Y+15,r25
 26248 b1d8 A88B      		std Y+16,r26
 26249 b1da B98B      		std Y+17,r27
2362:lp_solve_5.5/lp_presolve.c ****           if(Value2 < bound - psdata->epsvalue)
 26250               		.loc 2 2362 0
 26251 b1dc 8AA5      		ldd r24,Y+42
 26252 b1de 9BA5      		ldd r25,Y+43
 26253 b1e0 FC01      		movw r30,r24
 26254 b1e2 8489      		ldd r24,Z+20
 26255 b1e4 9589      		ldd r25,Z+21
 26256 b1e6 A689      		ldd r26,Z+22
 26257 b1e8 B789      		ldd r27,Z+23
 26258 b1ea 9C01      		movw r18,r24
 26259 b1ec AD01      		movw r20,r26
 26260 b1ee 6E85      		ldd r22,Y+14
 26261 b1f0 7F85      		ldd r23,Y+15
 26262 b1f2 8889      		ldd r24,Y+16
 26263 b1f4 9989      		ldd r25,Y+17
 26264 b1f6 0E94 0000 		call __subsf3
 26265 b1fa DC01      		movw r26,r24
 26266 b1fc CB01      		movw r24,r22
 26267 b1fe 7C01      		movw r14,r24
 26268 b200 8D01      		movw r16,r26
 26269 b202 8EA1      		ldd r24,Y+38
 26270 b204 9FA1      		ldd r25,Y+39
 26271 b206 A8A5      		ldd r26,Y+40
 26272 b208 B9A5      		ldd r27,Y+41
 26273 b20a 9C01      		movw r18,r24
 26274 b20c AD01      		movw r20,r26
 26275 b20e C801      		movw r24,r16
 26276 b210 B701      		movw r22,r14
 26277 b212 0E94 0000 		call __gtsf2
 26278 b216 1816      		cp __zero_reg__,r24
 26279 b218 04F4      		brge .L1172
2363:lp_solve_5.5/lp_presolve.c ****             set_rh_upper(lp, ix, Value2);
 26280               		.loc 2 2363 0
 26281 b21a 8EA1      		ldd r24,Y+38
 26282 b21c 9FA1      		ldd r25,Y+39
 26283 b21e A8A5      		ldd r26,Y+40
 26284 b220 B9A5      		ldd r27,Y+41
 26285 b222 6885      		ldd r22,Y+8
 26286 b224 7985      		ldd r23,Y+9
 26287 b226 EA89      		ldd r30,Y+18
 26288 b228 FB89      		ldd r31,Y+19
 26289 b22a 9C01      		movw r18,r24
 26290 b22c AD01      		movw r20,r26
 26291 b22e CF01      		movw r24,r30
 26292 b230 0E94 0000 		call set_rh_upper
 26293 b234 00C0      		rjmp .L1143
 26294               	.L1172:
2364:lp_solve_5.5/lp_presolve.c ****           else
2365:lp_solve_5.5/lp_presolve.c ****             Value2 = bound;
 26295               		.loc 2 2365 0
 26296 b236 8E85      		ldd r24,Y+14
 26297 b238 9F85      		ldd r25,Y+15
 26298 b23a A889      		ldd r26,Y+16
 26299 b23c B989      		ldd r27,Y+17
 26300 b23e 8EA3      		std Y+38,r24
 26301 b240 9FA3      		std Y+39,r25
 26302 b242 A8A7      		std Y+40,r26
 26303 b244 B9A7      		std Y+41,r27
 26304               	.L1143:
2366:lp_solve_5.5/lp_presolve.c **** 
2367:lp_solve_5.5/lp_presolve.c ****           /* Check results and make equality if appropriate */
2368:lp_solve_5.5/lp_presolve.c ****           if(fabs(Value2-Value1) < psdata->epsvalue)
 26305               		.loc 2 2368 0
 26306 b246 8EA1      		ldd r24,Y+38
 26307 b248 9FA1      		ldd r25,Y+39
 26308 b24a A8A5      		ldd r26,Y+40
 26309 b24c B9A5      		ldd r27,Y+41
 26310 b24e 2AA1      		ldd r18,Y+34
 26311 b250 3BA1      		ldd r19,Y+35
 26312 b252 4CA1      		ldd r20,Y+36
 26313 b254 5DA1      		ldd r21,Y+37
 26314 b256 BC01      		movw r22,r24
 26315 b258 CD01      		movw r24,r26
 26316 b25a 0E94 0000 		call __subsf3
 26317 b25e DC01      		movw r26,r24
 26318 b260 CB01      		movw r24,r22
 26319 b262 BF77      		andi r27,0x7f
 26320 b264 2AA5      		ldd r18,Y+42
 26321 b266 3BA5      		ldd r19,Y+43
 26322 b268 F901      		movw r30,r18
 26323 b26a 2489      		ldd r18,Z+20
 26324 b26c 3589      		ldd r19,Z+21
 26325 b26e 4689      		ldd r20,Z+22
 26326 b270 5789      		ldd r21,Z+23
 26327 b272 BC01      		movw r22,r24
 26328 b274 CD01      		movw r24,r26
 26329 b276 0E94 0000 		call __ltsf2
 26330 b27a 8823      		tst r24
 26331 b27c 04F4      		brge .L1173
2369:lp_solve_5.5/lp_presolve.c ****             presolve_setEQ(psdata, ix);
 26332               		.loc 2 2369 0
 26333 b27e 2885      		ldd r18,Y+8
 26334 b280 3985      		ldd r19,Y+9
 26335 b282 8AA5      		ldd r24,Y+42
 26336 b284 9BA5      		ldd r25,Y+43
 26337 b286 B901      		movw r22,r18
 26338 b288 0E94 0000 		call presolve_setEQ
 26339 b28c 00C0      		rjmp .L1146
 26340               	.L1173:
2370:lp_solve_5.5/lp_presolve.c ****           else if(Value2 < Value1) {
 26341               		.loc 2 2370 0
 26342 b28e 8EA1      		ldd r24,Y+38
 26343 b290 9FA1      		ldd r25,Y+39
 26344 b292 A8A5      		ldd r26,Y+40
 26345 b294 B9A5      		ldd r27,Y+41
 26346 b296 2AA1      		ldd r18,Y+34
 26347 b298 3BA1      		ldd r19,Y+35
 26348 b29a 4CA1      		ldd r20,Y+36
 26349 b29c 5DA1      		ldd r21,Y+37
 26350 b29e BC01      		movw r22,r24
 26351 b2a0 CD01      		movw r24,r26
 26352 b2a2 0E94 0000 		call __ltsf2
 26353 b2a6 8823      		tst r24
 26354 b2a8 04F4      		brge .L1146
2371:lp_solve_5.5/lp_presolve.c ****             status = presolve_setstatus(psdata, INFEASIBLE);
 26355               		.loc 2 2371 0
 26356 b2aa 8AA5      		ldd r24,Y+42
 26357 b2ac 9BA5      		ldd r25,Y+43
 26358 b2ae 20E0      		ldi r18,lo8(.LC21)
 26359 b2b0 30E0      		ldi r19,hi8(.LC21)
 26360 b2b2 43E4      		ldi r20,lo8(67)
 26361 b2b4 59E0      		ldi r21,lo8(9)
 26362 b2b6 62E0      		ldi r22,lo8(2)
 26363 b2b8 70E0      		ldi r23,0
 26364 b2ba 0E94 0000 		call presolve_setstatusex
 26365 b2be 9B83      		std Y+3,r25
 26366 b2c0 8A83      		std Y+2,r24
 26367               	.L1146:
2372:lp_solve_5.5/lp_presolve.c ****           }
2373:lp_solve_5.5/lp_presolve.c **** 
2374:lp_solve_5.5/lp_presolve.c ****           /* Verify if we can continue */
2375:lp_solve_5.5/lp_presolve.c ****           candelete = (MYBOOL) (status == RUNNING);
 26368               		.loc 2 2375 0
 26369 b2c2 21E0      		ldi r18,lo8(1)
 26370 b2c4 8A81      		ldd r24,Y+2
 26371 b2c6 9B81      		ldd r25,Y+3
 26372 b2c8 0897      		sbiw r24,8
 26373 b2ca 01F0      		breq .L1148
 26374 b2cc 20E0      		ldi r18,0
 26375               	.L1148:
 26376 b2ce 2983      		std Y+1,r18
2376:lp_solve_5.5/lp_presolve.c ****           if(!candelete) {
 26377               		.loc 2 2376 0
 26378 b2d0 8981      		ldd r24,Y+1
 26379 b2d2 8823      		tst r24
 26380 b2d4 01F4      		brne .L1116
2377:lp_solve_5.5/lp_presolve.c ****             report(lp, NORMAL, "presolve: Range infeasibility found involving rows %s and %s\n",
 26381               		.loc 2 2377 0
 26382 b2d6 2E81      		ldd r18,Y+6
 26383 b2d8 3F81      		ldd r19,Y+7
 26384 b2da 8A89      		ldd r24,Y+18
 26385 b2dc 9B89      		ldd r25,Y+19
 26386 b2de B901      		movw r22,r18
 26387 b2e0 0E94 0000 		call get_row_name
 26388 b2e4 8C01      		movw r16,r24
 26389 b2e6 2885      		ldd r18,Y+8
 26390 b2e8 3985      		ldd r19,Y+9
 26391 b2ea 8A89      		ldd r24,Y+18
 26392 b2ec 9B89      		ldd r25,Y+19
 26393 b2ee B901      		movw r22,r18
 26394 b2f0 0E94 0000 		call get_row_name
 26395 b2f4 212F      		mov r18,r17
 26396 b2f6 2F93      		push r18
 26397 b2f8 202F      		mov r18,r16
 26398 b2fa 2F93      		push r18
 26399 b2fc 292F      		mov r18,r25
 26400 b2fe 2F93      		push r18
 26401 b300 8F93      		push r24
 26402 b302 80E0      		ldi r24,lo8(.LC31)
 26403 b304 90E0      		ldi r25,hi8(.LC31)
 26404 b306 892F      		mov r24,r25
 26405 b308 8F93      		push r24
 26406 b30a 80E0      		ldi r24,lo8(.LC31)
 26407 b30c 90E0      		ldi r25,hi8(.LC31)
 26408 b30e 8F93      		push r24
 26409 b310 1F92      		push __zero_reg__
 26410 b312 84E0      		ldi r24,lo8(4)
 26411 b314 8F93      		push r24
 26412 b316 8B89      		ldd r24,Y+19
 26413 b318 8F93      		push r24
 26414 b31a 8A89      		ldd r24,Y+18
 26415 b31c 8F93      		push r24
 26416 b31e 0E94 0000 		call report
 26417 b322 8DB7      		in r24,__SP_L__
 26418 b324 9EB7      		in r25,__SP_H__
 26419 b326 0A96      		adiw r24,10
 26420 b328 0FB6      		in __tmp_reg__,__SREG__
 26421 b32a F894      		cli
 26422 b32c DEBF      		out __SP_H__,r29
 26423 b32e 0FBE      		out __SREG__,__tmp_reg__
 26424 b330 CDBF      		out __SP_L__,r28
 26425               	.L1116:
2378:lp_solve_5.5/lp_presolve.c ****                                 get_row_name(lp, ix), get_row_name(lp, i));
2379:lp_solve_5.5/lp_presolve.c ****           }
2380:lp_solve_5.5/lp_presolve.c ****         }
2381:lp_solve_5.5/lp_presolve.c ****       }
2382:lp_solve_5.5/lp_presolve.c ****       /* Perform i-row deletion if authorized */
2383:lp_solve_5.5/lp_presolve.c ****       if(candelete) {
 26426               		.loc 2 2383 0
 26427 b332 8981      		ldd r24,Y+1
 26428 b334 8823      		tst r24
 26429 b336 01F0      		breq .L1106
2384:lp_solve_5.5/lp_presolve.c ****         presolve_rowremove(psdata, i, TRUE);
 26430               		.loc 2 2384 0
 26431 b338 2E81      		ldd r18,Y+6
 26432 b33a 3F81      		ldd r19,Y+7
 26433 b33c 8AA5      		ldd r24,Y+42
 26434 b33e 9BA5      		ldd r25,Y+43
 26435 b340 41E0      		ldi r20,lo8(1)
 26436 b342 B901      		movw r22,r18
 26437 b344 0E94 0000 		call presolve_rowremove
2385:lp_solve_5.5/lp_presolve.c ****         n++;
 26438               		.loc 2 2385 0
 26439 b348 8C85      		ldd r24,Y+12
 26440 b34a 9D85      		ldd r25,Y+13
 26441 b34c 0196      		adiw r24,1
 26442 b34e 9D87      		std Y+13,r25
 26443 b350 8C87      		std Y+12,r24
2386:lp_solve_5.5/lp_presolve.c ****         break;
 26444               		.loc 2 2386 0
 26445 b352 00C0      		rjmp .L1149
 26446               	.L1175:
2283:lp_solve_5.5/lp_presolve.c **** 
 26447               		.loc 2 2283 0
 26448 b354 0000      		nop
 26449 b356 00C0      		rjmp .L1106
 26450               	.L1176:
2292:lp_solve_5.5/lp_presolve.c **** 
 26451               		.loc 2 2292 0
 26452 b358 0000      		nop
 26453               	.L1106:
2280:lp_solve_5.5/lp_presolve.c ****       candelete = FALSE;
 26454               		.loc 2 2280 0
 26455 b35a 8AA5      		ldd r24,Y+42
 26456 b35c 9BA5      		ldd r25,Y+43
 26457 b35e FC01      		movw r30,r24
 26458 b360 8081      		ld r24,Z
 26459 b362 9181      		ldd r25,Z+1
 26460 b364 FC01      		movw r30,r24
 26461 b366 8081      		ld r24,Z
 26462 b368 9181      		ldd r25,Z+1
 26463 b36a 2885      		ldd r18,Y+8
 26464 b36c 3985      		ldd r19,Y+9
 26465 b36e B901      		movw r22,r18
 26466 b370 0E94 0000 		call prevActiveLink
 26467 b374 9987      		std Y+9,r25
 26468 b376 8887      		std Y+8,r24
 26469 b378 8C81      		ldd r24,Y+4
 26470 b37a 9D81      		ldd r25,Y+5
 26471 b37c 0196      		adiw r24,1
 26472 b37e 9D83      		std Y+5,r25
 26473 b380 8C83      		std Y+4,r24
 26474               	.L1104:
2279:lp_solve_5.5/lp_presolve.c ****         ix = prevActiveLink(psdata->rows->varmap, ix), RT1++)  {
 26475               		.loc 2 2279 0 discriminator 1
 26476 b382 8885      		ldd r24,Y+8
 26477 b384 9985      		ldd r25,Y+9
 26478 b386 1816      		cp __zero_reg__,r24
 26479 b388 1906      		cpc __zero_reg__,r25
 26480 b38a 04F4      		brge .L1149
2279:lp_solve_5.5/lp_presolve.c ****         ix = prevActiveLink(psdata->rows->varmap, ix), RT1++)  {
 26481               		.loc 2 2279 0 is_stmt 0 discriminator 2
 26482 b38c 2C81      		ldd r18,Y+4
 26483 b38e 3D81      		ldd r19,Y+5
 26484 b390 888D      		ldd r24,Y+24
 26485 b392 998D      		ldd r25,Y+25
 26486 b394 2817      		cp r18,r24
 26487 b396 3907      		cpc r19,r25
 26488 b398 04F4      		brge .L1149
2279:lp_solve_5.5/lp_presolve.c ****         ix = prevActiveLink(psdata->rows->varmap, ix), RT1++)  {
 26489               		.loc 2 2279 0 discriminator 3
 26490 b39a 8A81      		ldd r24,Y+2
 26491 b39c 9B81      		ldd r25,Y+3
 26492 b39e 0897      		sbiw r24,8
 26493 b3a0 01F4      		brne .+2
 26494 b3a2 00C0      		rjmp .L1150
 26495               	.L1149:
2387:lp_solve_5.5/lp_presolve.c ****       }
2388:lp_solve_5.5/lp_presolve.c ****     }
2389:lp_solve_5.5/lp_presolve.c ****     i = firstix;
 26496               		.loc 2 2389 0 is_stmt 1
 26497 b3a4 8A8D      		ldd r24,Y+26
 26498 b3a6 9B8D      		ldd r25,Y+27
 26499 b3a8 9F83      		std Y+7,r25
 26500 b3aa 8E83      		std Y+6,r24
 26501               	.L1100:
2253:lp_solve_5.5/lp_presolve.c **** 
 26502               		.loc 2 2253 0 discriminator 1
 26503 b3ac 8E81      		ldd r24,Y+6
 26504 b3ae 9F81      		ldd r25,Y+7
 26505 b3b0 1816      		cp __zero_reg__,r24
 26506 b3b2 1906      		cpc __zero_reg__,r25
 26507 b3b4 04F4      		brge .L1102
2253:lp_solve_5.5/lp_presolve.c **** 
 26508               		.loc 2 2253 0 is_stmt 0 discriminator 2
 26509 b3b6 8A81      		ldd r24,Y+2
 26510 b3b8 9B81      		ldd r25,Y+3
 26511 b3ba 0897      		sbiw r24,8
 26512 b3bc 01F4      		brne .+2
 26513 b3be 00C0      		rjmp .L1151
 26514 b3c0 00C0      		rjmp .L1102
 26515               	.L1174:
2258:lp_solve_5.5/lp_presolve.c **** 
 26516               		.loc 2 2258 0 is_stmt 1
 26517 b3c2 0000      		nop
 26518               	.L1102:
2390:lp_solve_5.5/lp_presolve.c ****   }
2391:lp_solve_5.5/lp_presolve.c ****   (*nRows) += n;
 26519               		.loc 2 2391 0
 26520 b3c4 8CA5      		ldd r24,Y+44
 26521 b3c6 9DA5      		ldd r25,Y+45
 26522 b3c8 FC01      		movw r30,r24
 26523 b3ca 2081      		ld r18,Z
 26524 b3cc 3181      		ldd r19,Z+1
 26525 b3ce 8C85      		ldd r24,Y+12
 26526 b3d0 9D85      		ldd r25,Y+13
 26527 b3d2 280F      		add r18,r24
 26528 b3d4 391F      		adc r19,r25
 26529 b3d6 8CA5      		ldd r24,Y+44
 26530 b3d8 9DA5      		ldd r25,Y+45
 26531 b3da FC01      		movw r30,r24
 26532 b3dc 3183      		std Z+1,r19
 26533 b3de 2083      		st Z,r18
2392:lp_solve_5.5/lp_presolve.c ****   (*nSum)  += n;
 26534               		.loc 2 2392 0
 26535 b3e0 8EA5      		ldd r24,Y+46
 26536 b3e2 9FA5      		ldd r25,Y+47
 26537 b3e4 FC01      		movw r30,r24
 26538 b3e6 2081      		ld r18,Z
 26539 b3e8 3181      		ldd r19,Z+1
 26540 b3ea 8C85      		ldd r24,Y+12
 26541 b3ec 9D85      		ldd r25,Y+13
 26542 b3ee 280F      		add r18,r24
 26543 b3f0 391F      		adc r19,r25
 26544 b3f2 8EA5      		ldd r24,Y+46
 26545 b3f4 9FA5      		ldd r25,Y+47
 26546 b3f6 FC01      		movw r30,r24
 26547 b3f8 3183      		std Z+1,r19
 26548 b3fa 2083      		st Z,r18
2393:lp_solve_5.5/lp_presolve.c **** 
2394:lp_solve_5.5/lp_presolve.c ****   return( status );
 26549               		.loc 2 2394 0
 26550 b3fc 8A81      		ldd r24,Y+2
 26551 b3fe 9B81      		ldd r25,Y+3
 26552               	/* epilogue start */
2395:lp_solve_5.5/lp_presolve.c **** }
 26553               		.loc 2 2395 0
 26554 b400 AF96      		adiw r28,47
 26555 b402 0FB6      		in __tmp_reg__,__SREG__
 26556 b404 F894      		cli
 26557 b406 DEBF      		out __SP_H__,r29
 26558 b408 0FBE      		out __SREG__,__tmp_reg__
 26559 b40a CDBF      		out __SP_L__,r28
 26560 b40c DF91      		pop r29
 26561 b40e CF91      		pop r28
 26562 b410 1F91      		pop r17
 26563 b412 0F91      		pop r16
 26564 b414 FF90      		pop r15
 26565 b416 EF90      		pop r14
 26566 b418 0895      		ret
 26567               		.cfi_endproc
 26568               	.LFE63:
 26570               	.global	__fixsfsi
 26571               	.global	__fixsfdi
 26572               	.global	__floatdisf
 26573               		.section	.rodata
 26574               	.LC32:
 26575 072d 7072 6573 		.string	"presolve_reduceGCD: Infeasible equality constraint %d\n"
 26575      6F6C 7665 
 26575      5F72 6564 
 26575      7563 6547 
 26575      4344 3A20 
 26576               	.LC33:
 26577 0764 7072 6573 		.string	"presolve_reduceGCD: Did %d constraint coefficient reductions.\n"
 26577      6F6C 7665 
 26577      5F72 6564 
 26577      7563 6547 
 26577      4344 3A20 
 26578               		.text
 26579               	.global	presolve_reduceGCD
 26581               	presolve_reduceGCD:
 26582               	.LFB64:
2396:lp_solve_5.5/lp_presolve.c **** 
2397:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_reduceGCD(presolverec *psdata, int *nn, int *nb, int *nsum)
2398:lp_solve_5.5/lp_presolve.c **** {
 26583               		.loc 2 2398 0
 26584               		.cfi_startproc
 26585 b41a 8F92      		push r8
 26586               	.LCFI368:
 26587               		.cfi_def_cfa_offset 3
 26588               		.cfi_offset 8, -2
 26589 b41c 9F92      		push r9
 26590               	.LCFI369:
 26591               		.cfi_def_cfa_offset 4
 26592               		.cfi_offset 9, -3
 26593 b41e AF92      		push r10
 26594               	.LCFI370:
 26595               		.cfi_def_cfa_offset 5
 26596               		.cfi_offset 10, -4
 26597 b420 BF92      		push r11
 26598               	.LCFI371:
 26599               		.cfi_def_cfa_offset 6
 26600               		.cfi_offset 11, -5
 26601 b422 CF92      		push r12
 26602               	.LCFI372:
 26603               		.cfi_def_cfa_offset 7
 26604               		.cfi_offset 12, -6
 26605 b424 DF92      		push r13
 26606               	.LCFI373:
 26607               		.cfi_def_cfa_offset 8
 26608               		.cfi_offset 13, -7
 26609 b426 EF92      		push r14
 26610               	.LCFI374:
 26611               		.cfi_def_cfa_offset 9
 26612               		.cfi_offset 14, -8
 26613 b428 FF92      		push r15
 26614               	.LCFI375:
 26615               		.cfi_def_cfa_offset 10
 26616               		.cfi_offset 15, -9
 26617 b42a 0F93      		push r16
 26618               	.LCFI376:
 26619               		.cfi_def_cfa_offset 11
 26620               		.cfi_offset 16, -10
 26621 b42c 1F93      		push r17
 26622               	.LCFI377:
 26623               		.cfi_def_cfa_offset 12
 26624               		.cfi_offset 17, -11
 26625 b42e CF93      		push r28
 26626               	.LCFI378:
 26627               		.cfi_def_cfa_offset 13
 26628               		.cfi_offset 28, -12
 26629 b430 DF93      		push r29
 26630               	.LCFI379:
 26631               		.cfi_def_cfa_offset 14
 26632               		.cfi_offset 29, -13
 26633 b432 CDB7      		in r28,__SP_L__
 26634 b434 DEB7      		in r29,__SP_H__
 26635               	.LCFI380:
 26636               		.cfi_def_cfa_register 28
 26637 b436 E197      		sbiw r28,49
 26638               	.LCFI381:
 26639               		.cfi_def_cfa_offset 63
 26640 b438 0FB6      		in __tmp_reg__,__SREG__
 26641 b43a F894      		cli
 26642 b43c DEBF      		out __SP_H__,r29
 26643 b43e 0FBE      		out __SREG__,__tmp_reg__
 26644 b440 CDBF      		out __SP_L__,r28
 26645               	/* prologue: function */
 26646               	/* frame size = 49 */
 26647               	/* stack size = 61 */
 26648               	.L__stack_usage = 61
 26649 b442 9BA3      		std Y+35,r25
 26650 b444 8AA3      		std Y+34,r24
 26651 b446 7DA3      		std Y+37,r23
 26652 b448 6CA3      		std Y+36,r22
 26653 b44a 5FA3      		std Y+39,r21
 26654 b44c 4EA3      		std Y+38,r20
 26655 b44e 39A7      		std Y+41,r19
 26656 b450 28A7      		std Y+40,r18
2399:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 26657               		.loc 2 2399 0
 26658 b452 8AA1      		ldd r24,Y+34
 26659 b454 9BA1      		ldd r25,Y+35
 26660 b456 FC01      		movw r30,r24
 26661 b458 8289      		ldd r24,Z+18
 26662 b45a 9389      		ldd r25,Z+19
 26663 b45c 9B8B      		std Y+19,r25
 26664 b45e 8A8B      		std Y+18,r24
2400:lp_solve_5.5/lp_presolve.c ****   MYBOOL   status = TRUE;
 26665               		.loc 2 2400 0
 26666 b460 81E0      		ldi r24,lo8(1)
 26667 b462 8983      		std Y+1,r24
2401:lp_solve_5.5/lp_presolve.c ****   int      i, jx, je, in = 0, ib = 0;
 26668               		.loc 2 2401 0
 26669 b464 1F82      		std Y+7,__zero_reg__
 26670 b466 1E82      		std Y+6,__zero_reg__
 26671 b468 1986      		std Y+9,__zero_reg__
 26672 b46a 1886      		std Y+8,__zero_reg__
2402:lp_solve_5.5/lp_presolve.c ****   LLONG    GCDvalue;
2403:lp_solve_5.5/lp_presolve.c ****   REAL     *Avalue, Rvalue, epsvalue = psdata->epsvalue;
 26673               		.loc 2 2403 0
 26674 b46c 8AA1      		ldd r24,Y+34
 26675 b46e 9BA1      		ldd r25,Y+35
 26676 b470 FC01      		movw r30,r24
 26677 b472 8489      		ldd r24,Z+20
 26678 b474 9589      		ldd r25,Z+21
 26679 b476 A689      		ldd r26,Z+22
 26680 b478 B789      		ldd r27,Z+23
 26681 b47a 8C8B      		std Y+20,r24
 26682 b47c 9D8B      		std Y+21,r25
 26683 b47e AE8B      		std Y+22,r26
 26684 b480 BF8B      		std Y+23,r27
2404:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 26685               		.loc 2 2404 0
 26686 b482 8A89      		ldd r24,Y+18
 26687 b484 9B89      		ldd r25,Y+19
 26688 b486 8A54      		subi r24,74
 26689 b488 9D4F      		sbci r25,-3
 26690 b48a FC01      		movw r30,r24
 26691 b48c 8081      		ld r24,Z
 26692 b48e 9181      		ldd r25,Z+1
 26693 b490 998F      		std Y+25,r25
 26694 b492 888F      		std Y+24,r24
2405:lp_solve_5.5/lp_presolve.c **** 
2406:lp_solve_5.5/lp_presolve.c ****   for(i = firstActiveLink(psdata->INTmap); i != 0; i = nextActiveLink(psdata->INTmap, i)) {
 26695               		.loc 2 2406 0
 26696 b494 8AA1      		ldd r24,Y+34
 26697 b496 9BA1      		ldd r25,Y+35
 26698 b498 FC01      		movw r30,r24
 26699 b49a 8085      		ldd r24,Z+8
 26700 b49c 9185      		ldd r25,Z+9
 26701 b49e 0E94 0000 		call firstActiveLink
 26702 b4a2 9B83      		std Y+3,r25
 26703 b4a4 8A83      		std Y+2,r24
 26704 b4a6 00C0      		rjmp .L1180
 26705               	.L1193:
2407:lp_solve_5.5/lp_presolve.c **** 
2408:lp_solve_5.5/lp_presolve.c ****     /* Obtain the row GCD */
2409:lp_solve_5.5/lp_presolve.c ****     jx = mat->row_end[i - 1];
 26706               		.loc 2 2409 0
 26707 b4a8 888D      		ldd r24,Y+24
 26708 b4aa 998D      		ldd r25,Y+25
 26709 b4ac FC01      		movw r30,r24
 26710 b4ae 208D      		ldd r18,Z+24
 26711 b4b0 318D      		ldd r19,Z+25
 26712 b4b2 8A81      		ldd r24,Y+2
 26713 b4b4 9B81      		ldd r25,Y+3
 26714 b4b6 8150      		subi r24,1
 26715 b4b8 9048      		sbci r25,-128
 26716 b4ba 880F      		lsl r24
 26717 b4bc 991F      		rol r25
 26718 b4be 820F      		add r24,r18
 26719 b4c0 931F      		adc r25,r19
 26720 b4c2 FC01      		movw r30,r24
 26721 b4c4 8081      		ld r24,Z
 26722 b4c6 9181      		ldd r25,Z+1
 26723 b4c8 9D83      		std Y+5,r25
 26724 b4ca 8C83      		std Y+4,r24
2410:lp_solve_5.5/lp_presolve.c ****     je = mat->row_end[i];
 26725               		.loc 2 2410 0
 26726 b4cc 888D      		ldd r24,Y+24
 26727 b4ce 998D      		ldd r25,Y+25
 26728 b4d0 FC01      		movw r30,r24
 26729 b4d2 208D      		ldd r18,Z+24
 26730 b4d4 318D      		ldd r19,Z+25
 26731 b4d6 8A81      		ldd r24,Y+2
 26732 b4d8 9B81      		ldd r25,Y+3
 26733 b4da 880F      		lsl r24
 26734 b4dc 991F      		rol r25
 26735 b4de 820F      		add r24,r18
 26736 b4e0 931F      		adc r25,r19
 26737 b4e2 FC01      		movw r30,r24
 26738 b4e4 8081      		ld r24,Z
 26739 b4e6 9181      		ldd r25,Z+1
 26740 b4e8 9B8F      		std Y+27,r25
 26741 b4ea 8A8F      		std Y+26,r24
2411:lp_solve_5.5/lp_presolve.c ****     Rvalue = ROW_MAT_VALUE(jx);
 26742               		.loc 2 2411 0
 26743 b4ec 888D      		ldd r24,Y+24
 26744 b4ee 998D      		ldd r25,Y+25
 26745 b4f0 FC01      		movw r30,r24
 26746 b4f2 2089      		ldd r18,Z+16
 26747 b4f4 3189      		ldd r19,Z+17
 26748 b4f6 888D      		ldd r24,Y+24
 26749 b4f8 998D      		ldd r25,Y+25
 26750 b4fa FC01      		movw r30,r24
 26751 b4fc 4689      		ldd r20,Z+22
 26752 b4fe 5789      		ldd r21,Z+23
 26753 b500 8C81      		ldd r24,Y+4
 26754 b502 9D81      		ldd r25,Y+5
 26755 b504 880F      		lsl r24
 26756 b506 991F      		rol r25
 26757 b508 840F      		add r24,r20
 26758 b50a 951F      		adc r25,r21
 26759 b50c FC01      		movw r30,r24
 26760 b50e 8081      		ld r24,Z
 26761 b510 9181      		ldd r25,Z+1
 26762 b512 880F      		lsl r24
 26763 b514 991F      		rol r25
 26764 b516 880F      		lsl r24
 26765 b518 991F      		rol r25
 26766 b51a 820F      		add r24,r18
 26767 b51c 931F      		adc r25,r19
 26768 b51e FC01      		movw r30,r24
 26769 b520 8081      		ld r24,Z
 26770 b522 9181      		ldd r25,Z+1
 26771 b524 A281      		ldd r26,Z+2
 26772 b526 B381      		ldd r27,Z+3
 26773 b528 8C8F      		std Y+28,r24
 26774 b52a 9D8F      		std Y+29,r25
 26775 b52c AE8F      		std Y+30,r26
 26776 b52e BF8F      		std Y+31,r27
2412:lp_solve_5.5/lp_presolve.c ****     GCDvalue = abs((int) Rvalue);
 26777               		.loc 2 2412 0
 26778 b530 6C8D      		ldd r22,Y+28
 26779 b532 7D8D      		ldd r23,Y+29
 26780 b534 8E8D      		ldd r24,Y+30
 26781 b536 9F8D      		ldd r25,Y+31
 26782 b538 0E94 0000 		call __fixsfsi
 26783 b53c DC01      		movw r26,r24
 26784 b53e CB01      		movw r24,r22
 26785 b540 9923      		tst r25
 26786 b542 04F4      		brge .L1181
 26787 b544 9195      		neg r25
 26788 b546 8195      		neg r24
 26789 b548 9109      		sbc r25,__zero_reg__
 26790               	.L1181:
 26791 b54a 9B87      		std Y+11,r25
 26792 b54c 8A87      		std Y+10,r24
 26793 b54e 892F      		mov r24,r25
 26794 b550 880F      		lsl r24
 26795 b552 880B      		sbc r24,r24
 26796 b554 8C87      		std Y+12,r24
 26797 b556 8D87      		std Y+13,r24
 26798 b558 8E87      		std Y+14,r24
 26799 b55a 8F87      		std Y+15,r24
 26800 b55c 888B      		std Y+16,r24
 26801 b55e 898B      		std Y+17,r24
2413:lp_solve_5.5/lp_presolve.c ****     jx++;
 26802               		.loc 2 2413 0
 26803 b560 8C81      		ldd r24,Y+4
 26804 b562 9D81      		ldd r25,Y+5
 26805 b564 0196      		adiw r24,1
 26806 b566 9D83      		std Y+5,r25
 26807 b568 8C83      		std Y+4,r24
2414:lp_solve_5.5/lp_presolve.c ****     if(jx < je)
 26808               		.loc 2 2414 0
 26809 b56a 2C81      		ldd r18,Y+4
 26810 b56c 3D81      		ldd r19,Y+5
 26811 b56e 8A8D      		ldd r24,Y+26
 26812 b570 9B8D      		ldd r25,Y+27
 26813 b572 2817      		cp r18,r24
 26814 b574 3907      		cpc r19,r25
 26815 b576 04F0      		brlt .+2
 26816 b578 00C0      		rjmp .L1182
2415:lp_solve_5.5/lp_presolve.c ****     for(; (jx < je) && (GCDvalue > 1); jx++) {
 26817               		.loc 2 2415 0
 26818 b57a 00C0      		rjmp .L1183
 26819               	.L1184:
2416:lp_solve_5.5/lp_presolve.c ****       Rvalue = fabs(ROW_MAT_VALUE(jx));
 26820               		.loc 2 2416 0 discriminator 3
 26821 b57c 888D      		ldd r24,Y+24
 26822 b57e 998D      		ldd r25,Y+25
 26823 b580 FC01      		movw r30,r24
 26824 b582 2089      		ldd r18,Z+16
 26825 b584 3189      		ldd r19,Z+17
 26826 b586 888D      		ldd r24,Y+24
 26827 b588 998D      		ldd r25,Y+25
 26828 b58a FC01      		movw r30,r24
 26829 b58c 4689      		ldd r20,Z+22
 26830 b58e 5789      		ldd r21,Z+23
 26831 b590 8C81      		ldd r24,Y+4
 26832 b592 9D81      		ldd r25,Y+5
 26833 b594 880F      		lsl r24
 26834 b596 991F      		rol r25
 26835 b598 840F      		add r24,r20
 26836 b59a 951F      		adc r25,r21
 26837 b59c FC01      		movw r30,r24
 26838 b59e 8081      		ld r24,Z
 26839 b5a0 9181      		ldd r25,Z+1
 26840 b5a2 880F      		lsl r24
 26841 b5a4 991F      		rol r25
 26842 b5a6 880F      		lsl r24
 26843 b5a8 991F      		rol r25
 26844 b5aa 820F      		add r24,r18
 26845 b5ac 931F      		adc r25,r19
 26846 b5ae FC01      		movw r30,r24
 26847 b5b0 8081      		ld r24,Z
 26848 b5b2 9181      		ldd r25,Z+1
 26849 b5b4 A281      		ldd r26,Z+2
 26850 b5b6 B381      		ldd r27,Z+3
 26851 b5b8 BF77      		andi r27,0x7f
 26852 b5ba 8C8F      		std Y+28,r24
 26853 b5bc 9D8F      		std Y+29,r25
 26854 b5be AE8F      		std Y+30,r26
 26855 b5c0 BF8F      		std Y+31,r27
2417:lp_solve_5.5/lp_presolve.c ****       GCDvalue = gcd((LLONG) Rvalue, GCDvalue, NULL, NULL);
 26856               		.loc 2 2417 0 discriminator 3
 26857 b5c2 6C8D      		ldd r22,Y+28
 26858 b5c4 7D8D      		ldd r23,Y+29
 26859 b5c6 8E8D      		ldd r24,Y+30
 26860 b5c8 9F8D      		ldd r25,Y+31
 26861 b5ca 0E94 0000 		call __fixsfdi
 26862 b5ce 2AA7      		std Y+42,r18
 26863 b5d0 3BA7      		std Y+43,r19
 26864 b5d2 4CA7      		std Y+44,r20
 26865 b5d4 5DA7      		std Y+45,r21
 26866 b5d6 6EA7      		std Y+46,r22
 26867 b5d8 7FA7      		std Y+47,r23
 26868 b5da 88AB      		std Y+48,r24
 26869 b5dc 99AB      		std Y+49,r25
 26870 b5de 2A85      		ldd r18,Y+10
 26871 b5e0 3B85      		ldd r19,Y+11
 26872 b5e2 4C85      		ldd r20,Y+12
 26873 b5e4 5D85      		ldd r21,Y+13
 26874 b5e6 6E85      		ldd r22,Y+14
 26875 b5e8 7F85      		ldd r23,Y+15
 26876 b5ea 8889      		ldd r24,Y+16
 26877 b5ec 9989      		ldd r25,Y+17
 26878 b5ee 1F92      		push __zero_reg__
 26879 b5f0 1F92      		push __zero_reg__
 26880 b5f2 812C      		mov r8,__zero_reg__
 26881 b5f4 912C      		mov r9,__zero_reg__
 26882 b5f6 A22E      		mov r10,r18
 26883 b5f8 B32E      		mov r11,r19
 26884 b5fa C42E      		mov r12,r20
 26885 b5fc D52E      		mov r13,r21
 26886 b5fe E62E      		mov r14,r22
 26887 b600 F72E      		mov r15,r23
 26888 b602 082F      		mov r16,r24
 26889 b604 192F      		mov r17,r25
 26890 b606 2AA5      		ldd r18,Y+42
 26891 b608 3BA5      		ldd r19,Y+43
 26892 b60a 4CA5      		ldd r20,Y+44
 26893 b60c 5DA5      		ldd r21,Y+45
 26894 b60e 6EA5      		ldd r22,Y+46
 26895 b610 7FA5      		ldd r23,Y+47
 26896 b612 88A9      		ldd r24,Y+48
 26897 b614 99A9      		ldd r25,Y+49
 26898 b616 0E94 0000 		call gcd
 26899 b61a 0F90      		pop __tmp_reg__
 26900 b61c 0F90      		pop __tmp_reg__
 26901 b61e 9B87      		std Y+11,r25
 26902 b620 8A87      		std Y+10,r24
 26903 b622 892F      		mov r24,r25
 26904 b624 880F      		lsl r24
 26905 b626 880B      		sbc r24,r24
 26906 b628 8C87      		std Y+12,r24
 26907 b62a 8D87      		std Y+13,r24
 26908 b62c 8E87      		std Y+14,r24
 26909 b62e 8F87      		std Y+15,r24
 26910 b630 888B      		std Y+16,r24
 26911 b632 898B      		std Y+17,r24
2415:lp_solve_5.5/lp_presolve.c ****     for(; (jx < je) && (GCDvalue > 1); jx++) {
 26912               		.loc 2 2415 0 discriminator 3
 26913 b634 8C81      		ldd r24,Y+4
 26914 b636 9D81      		ldd r25,Y+5
 26915 b638 0196      		adiw r24,1
 26916 b63a 9D83      		std Y+5,r25
 26917 b63c 8C83      		std Y+4,r24
 26918               	.L1183:
2415:lp_solve_5.5/lp_presolve.c ****     for(; (jx < je) && (GCDvalue > 1); jx++) {
 26919               		.loc 2 2415 0 is_stmt 0 discriminator 1
 26920 b63e 2C81      		ldd r18,Y+4
 26921 b640 3D81      		ldd r19,Y+5
 26922 b642 8A8D      		ldd r24,Y+26
 26923 b644 9B8D      		ldd r25,Y+27
 26924 b646 2817      		cp r18,r24
 26925 b648 3907      		cpc r19,r25
 26926 b64a 04F4      		brge .L1182
2415:lp_solve_5.5/lp_presolve.c ****     for(; (jx < je) && (GCDvalue > 1); jx++) {
 26927               		.loc 2 2415 0 discriminator 2
 26928 b64c AA84      		ldd r10,Y+10
 26929 b64e BB84      		ldd r11,Y+11
 26930 b650 CC84      		ldd r12,Y+12
 26931 b652 DD84      		ldd r13,Y+13
 26932 b654 EE84      		ldd r14,Y+14
 26933 b656 FF84      		ldd r15,Y+15
 26934 b658 0889      		ldd r16,Y+16
 26935 b65a 1989      		ldd r17,Y+17
 26936 b65c 2A2D      		mov r18,r10
 26937 b65e 3B2D      		mov r19,r11
 26938 b660 4C2D      		mov r20,r12
 26939 b662 5D2D      		mov r21,r13
 26940 b664 6E2D      		mov r22,r14
 26941 b666 7F2D      		mov r23,r15
 26942 b668 802F      		mov r24,r16
 26943 b66a 912F      		mov r25,r17
 26944 b66c A1E0      		ldi r26,lo8(1)
 26945 b66e 0E94 0000 		call __cmpdi2_s8
 26946 b672 01F0      		breq .+4
 26947 b674 04F0      		brlt .+2
 26948 b676 00C0      		rjmp .L1184
 26949               	.L1182:
2418:lp_solve_5.5/lp_presolve.c ****     }
2419:lp_solve_5.5/lp_presolve.c **** 
2420:lp_solve_5.5/lp_presolve.c ****     /* Reduce the coefficients, if possible */
2421:lp_solve_5.5/lp_presolve.c ****     if(GCDvalue > 1) {
 26950               		.loc 2 2421 0 is_stmt 1
 26951 b678 AA84      		ldd r10,Y+10
 26952 b67a BB84      		ldd r11,Y+11
 26953 b67c CC84      		ldd r12,Y+12
 26954 b67e DD84      		ldd r13,Y+13
 26955 b680 EE84      		ldd r14,Y+14
 26956 b682 FF84      		ldd r15,Y+15
 26957 b684 0889      		ldd r16,Y+16
 26958 b686 1989      		ldd r17,Y+17
 26959 b688 2A2D      		mov r18,r10
 26960 b68a 3B2D      		mov r19,r11
 26961 b68c 4C2D      		mov r20,r12
 26962 b68e 5D2D      		mov r21,r13
 26963 b690 6E2D      		mov r22,r14
 26964 b692 7F2D      		mov r23,r15
 26965 b694 802F      		mov r24,r16
 26966 b696 912F      		mov r25,r17
 26967 b698 A1E0      		ldi r26,lo8(1)
 26968 b69a 0E94 0000 		call __cmpdi2_s8
 26969 b69e 01F0      		breq .+2
 26970 b6a0 04F4      		brge .+2
 26971 b6a2 00C0      		rjmp .L1185
2422:lp_solve_5.5/lp_presolve.c ****       jx = mat->row_end[i - 1];
 26972               		.loc 2 2422 0
 26973 b6a4 888D      		ldd r24,Y+24
 26974 b6a6 998D      		ldd r25,Y+25
 26975 b6a8 FC01      		movw r30,r24
 26976 b6aa 208D      		ldd r18,Z+24
 26977 b6ac 318D      		ldd r19,Z+25
 26978 b6ae 8A81      		ldd r24,Y+2
 26979 b6b0 9B81      		ldd r25,Y+3
 26980 b6b2 8150      		subi r24,1
 26981 b6b4 9048      		sbci r25,-128
 26982 b6b6 880F      		lsl r24
 26983 b6b8 991F      		rol r25
 26984 b6ba 820F      		add r24,r18
 26985 b6bc 931F      		adc r25,r19
 26986 b6be FC01      		movw r30,r24
 26987 b6c0 8081      		ld r24,Z
 26988 b6c2 9181      		ldd r25,Z+1
 26989 b6c4 9D83      		std Y+5,r25
 26990 b6c6 8C83      		std Y+4,r24
2423:lp_solve_5.5/lp_presolve.c ****       je = mat->row_end[i];
 26991               		.loc 2 2423 0
 26992 b6c8 888D      		ldd r24,Y+24
 26993 b6ca 998D      		ldd r25,Y+25
 26994 b6cc FC01      		movw r30,r24
 26995 b6ce 208D      		ldd r18,Z+24
 26996 b6d0 318D      		ldd r19,Z+25
 26997 b6d2 8A81      		ldd r24,Y+2
 26998 b6d4 9B81      		ldd r25,Y+3
 26999 b6d6 880F      		lsl r24
 27000 b6d8 991F      		rol r25
 27001 b6da 820F      		add r24,r18
 27002 b6dc 931F      		adc r25,r19
 27003 b6de FC01      		movw r30,r24
 27004 b6e0 8081      		ld r24,Z
 27005 b6e2 9181      		ldd r25,Z+1
 27006 b6e4 9B8F      		std Y+27,r25
 27007 b6e6 8A8F      		std Y+26,r24
2424:lp_solve_5.5/lp_presolve.c ****       for(; jx < je; jx++) {
 27008               		.loc 2 2424 0
 27009 b6e8 00C0      		rjmp .L1186
 27010               	.L1187:
2425:lp_solve_5.5/lp_presolve.c ****         Avalue = &ROW_MAT_VALUE(jx);
 27011               		.loc 2 2425 0 discriminator 2
 27012 b6ea 888D      		ldd r24,Y+24
 27013 b6ec 998D      		ldd r25,Y+25
 27014 b6ee FC01      		movw r30,r24
 27015 b6f0 2089      		ldd r18,Z+16
 27016 b6f2 3189      		ldd r19,Z+17
 27017 b6f4 888D      		ldd r24,Y+24
 27018 b6f6 998D      		ldd r25,Y+25
 27019 b6f8 FC01      		movw r30,r24
 27020 b6fa 4689      		ldd r20,Z+22
 27021 b6fc 5789      		ldd r21,Z+23
 27022 b6fe 8C81      		ldd r24,Y+4
 27023 b700 9D81      		ldd r25,Y+5
 27024 b702 880F      		lsl r24
 27025 b704 991F      		rol r25
 27026 b706 840F      		add r24,r20
 27027 b708 951F      		adc r25,r21
 27028 b70a FC01      		movw r30,r24
 27029 b70c 8081      		ld r24,Z
 27030 b70e 9181      		ldd r25,Z+1
 27031 b710 880F      		lsl r24
 27032 b712 991F      		rol r25
 27033 b714 880F      		lsl r24
 27034 b716 991F      		rol r25
 27035 b718 820F      		add r24,r18
 27036 b71a 931F      		adc r25,r19
 27037 b71c 99A3      		std Y+33,r25
 27038 b71e 88A3      		std Y+32,r24
2426:lp_solve_5.5/lp_presolve.c ****         *Avalue /= GCDvalue;
 27039               		.loc 2 2426 0 discriminator 2
 27040 b720 88A1      		ldd r24,Y+32
 27041 b722 99A1      		ldd r25,Y+33
 27042 b724 FC01      		movw r30,r24
 27043 b726 C080      		ld r12,Z
 27044 b728 D180      		ldd r13,Z+1
 27045 b72a E280      		ldd r14,Z+2
 27046 b72c F380      		ldd r15,Z+3
 27047 b72e 2A85      		ldd r18,Y+10
 27048 b730 3B85      		ldd r19,Y+11
 27049 b732 4C85      		ldd r20,Y+12
 27050 b734 5D85      		ldd r21,Y+13
 27051 b736 6E85      		ldd r22,Y+14
 27052 b738 7F85      		ldd r23,Y+15
 27053 b73a 8889      		ldd r24,Y+16
 27054 b73c 9989      		ldd r25,Y+17
 27055 b73e 0E94 0000 		call __floatdisf
 27056 b742 DC01      		movw r26,r24
 27057 b744 CB01      		movw r24,r22
 27058 b746 9C01      		movw r18,r24
 27059 b748 AD01      		movw r20,r26
 27060 b74a C701      		movw r24,r14
 27061 b74c B601      		movw r22,r12
 27062 b74e 0E94 0000 		call __divsf3
 27063 b752 DC01      		movw r26,r24
 27064 b754 CB01      		movw r24,r22
 27065 b756 28A1      		ldd r18,Y+32
 27066 b758 39A1      		ldd r19,Y+33
 27067 b75a F901      		movw r30,r18
 27068 b75c 8083      		st Z,r24
 27069 b75e 9183      		std Z+1,r25
 27070 b760 A283      		std Z+2,r26
 27071 b762 B383      		std Z+3,r27
2427:lp_solve_5.5/lp_presolve.c ****         in++;
 27072               		.loc 2 2427 0 discriminator 2
 27073 b764 8E81      		ldd r24,Y+6
 27074 b766 9F81      		ldd r25,Y+7
 27075 b768 0196      		adiw r24,1
 27076 b76a 9F83      		std Y+7,r25
 27077 b76c 8E83      		std Y+6,r24
2424:lp_solve_5.5/lp_presolve.c ****         Avalue = &ROW_MAT_VALUE(jx);
 27078               		.loc 2 2424 0 discriminator 2
 27079 b76e 8C81      		ldd r24,Y+4
 27080 b770 9D81      		ldd r25,Y+5
 27081 b772 0196      		adiw r24,1
 27082 b774 9D83      		std Y+5,r25
 27083 b776 8C83      		std Y+4,r24
 27084               	.L1186:
2424:lp_solve_5.5/lp_presolve.c ****         Avalue = &ROW_MAT_VALUE(jx);
 27085               		.loc 2 2424 0 is_stmt 0 discriminator 1
 27086 b778 2C81      		ldd r18,Y+4
 27087 b77a 3D81      		ldd r19,Y+5
 27088 b77c 8A8D      		ldd r24,Y+26
 27089 b77e 9B8D      		ldd r25,Y+27
 27090 b780 2817      		cp r18,r24
 27091 b782 3907      		cpc r19,r25
 27092 b784 04F4      		brge .+2
 27093 b786 00C0      		rjmp .L1187
2428:lp_solve_5.5/lp_presolve.c ****       }
2429:lp_solve_5.5/lp_presolve.c ****       Rvalue = (lp->orig_rhs[i] / GCDvalue) + epsvalue;
 27094               		.loc 2 2429 0 is_stmt 1
 27095 b788 8A89      		ldd r24,Y+18
 27096 b78a 9B89      		ldd r25,Y+19
 27097 b78c 8A55      		subi r24,90
 27098 b78e 9D4F      		sbci r25,-3
 27099 b790 FC01      		movw r30,r24
 27100 b792 2081      		ld r18,Z
 27101 b794 3181      		ldd r19,Z+1
 27102 b796 8A81      		ldd r24,Y+2
 27103 b798 9B81      		ldd r25,Y+3
 27104 b79a 880F      		lsl r24
 27105 b79c 991F      		rol r25
 27106 b79e 880F      		lsl r24
 27107 b7a0 991F      		rol r25
 27108 b7a2 820F      		add r24,r18
 27109 b7a4 931F      		adc r25,r19
 27110 b7a6 FC01      		movw r30,r24
 27111 b7a8 C080      		ld r12,Z
 27112 b7aa D180      		ldd r13,Z+1
 27113 b7ac E280      		ldd r14,Z+2
 27114 b7ae F380      		ldd r15,Z+3
 27115 b7b0 2A85      		ldd r18,Y+10
 27116 b7b2 3B85      		ldd r19,Y+11
 27117 b7b4 4C85      		ldd r20,Y+12
 27118 b7b6 5D85      		ldd r21,Y+13
 27119 b7b8 6E85      		ldd r22,Y+14
 27120 b7ba 7F85      		ldd r23,Y+15
 27121 b7bc 8889      		ldd r24,Y+16
 27122 b7be 9989      		ldd r25,Y+17
 27123 b7c0 0E94 0000 		call __floatdisf
 27124 b7c4 DC01      		movw r26,r24
 27125 b7c6 CB01      		movw r24,r22
 27126 b7c8 9C01      		movw r18,r24
 27127 b7ca AD01      		movw r20,r26
 27128 b7cc C701      		movw r24,r14
 27129 b7ce B601      		movw r22,r12
 27130 b7d0 0E94 0000 		call __divsf3
 27131 b7d4 DC01      		movw r26,r24
 27132 b7d6 CB01      		movw r24,r22
 27133 b7d8 2C89      		ldd r18,Y+20
 27134 b7da 3D89      		ldd r19,Y+21
 27135 b7dc 4E89      		ldd r20,Y+22
 27136 b7de 5F89      		ldd r21,Y+23
 27137 b7e0 BC01      		movw r22,r24
 27138 b7e2 CD01      		movw r24,r26
 27139 b7e4 0E94 0000 		call __addsf3
 27140 b7e8 DC01      		movw r26,r24
 27141 b7ea CB01      		movw r24,r22
 27142 b7ec 8C8F      		std Y+28,r24
 27143 b7ee 9D8F      		std Y+29,r25
 27144 b7f0 AE8F      		std Y+30,r26
 27145 b7f2 BF8F      		std Y+31,r27
2430:lp_solve_5.5/lp_presolve.c ****       lp->orig_rhs[i] = floor(Rvalue);
 27146               		.loc 2 2430 0
 27147 b7f4 8A89      		ldd r24,Y+18
 27148 b7f6 9B89      		ldd r25,Y+19
 27149 b7f8 8A55      		subi r24,90
 27150 b7fa 9D4F      		sbci r25,-3
 27151 b7fc FC01      		movw r30,r24
 27152 b7fe 2081      		ld r18,Z
 27153 b800 3181      		ldd r19,Z+1
 27154 b802 8A81      		ldd r24,Y+2
 27155 b804 9B81      		ldd r25,Y+3
 27156 b806 880F      		lsl r24
 27157 b808 991F      		rol r25
 27158 b80a 880F      		lsl r24
 27159 b80c 991F      		rol r25
 27160 b80e 8901      		movw r16,r18
 27161 b810 080F      		add r16,r24
 27162 b812 191F      		adc r17,r25
 27163 b814 8C8D      		ldd r24,Y+28
 27164 b816 9D8D      		ldd r25,Y+29
 27165 b818 AE8D      		ldd r26,Y+30
 27166 b81a BF8D      		ldd r27,Y+31
 27167 b81c BC01      		movw r22,r24
 27168 b81e CD01      		movw r24,r26
 27169 b820 0E94 0000 		call floor
 27170 b824 DC01      		movw r26,r24
 27171 b826 CB01      		movw r24,r22
 27172 b828 F801      		movw r30,r16
 27173 b82a 8083      		st Z,r24
 27174 b82c 9183      		std Z+1,r25
 27175 b82e A283      		std Z+2,r26
 27176 b830 B383      		std Z+3,r27
2431:lp_solve_5.5/lp_presolve.c ****       Rvalue = fabs(lp->orig_rhs[i]-Rvalue);
 27177               		.loc 2 2431 0
 27178 b832 8A89      		ldd r24,Y+18
 27179 b834 9B89      		ldd r25,Y+19
 27180 b836 8A55      		subi r24,90
 27181 b838 9D4F      		sbci r25,-3
 27182 b83a FC01      		movw r30,r24
 27183 b83c 2081      		ld r18,Z
 27184 b83e 3181      		ldd r19,Z+1
 27185 b840 8A81      		ldd r24,Y+2
 27186 b842 9B81      		ldd r25,Y+3
 27187 b844 880F      		lsl r24
 27188 b846 991F      		rol r25
 27189 b848 880F      		lsl r24
 27190 b84a 991F      		rol r25
 27191 b84c 820F      		add r24,r18
 27192 b84e 931F      		adc r25,r19
 27193 b850 FC01      		movw r30,r24
 27194 b852 8081      		ld r24,Z
 27195 b854 9181      		ldd r25,Z+1
 27196 b856 A281      		ldd r26,Z+2
 27197 b858 B381      		ldd r27,Z+3
 27198 b85a 2C8D      		ldd r18,Y+28
 27199 b85c 3D8D      		ldd r19,Y+29
 27200 b85e 4E8D      		ldd r20,Y+30
 27201 b860 5F8D      		ldd r21,Y+31
 27202 b862 BC01      		movw r22,r24
 27203 b864 CD01      		movw r24,r26
 27204 b866 0E94 0000 		call __subsf3
 27205 b86a DC01      		movw r26,r24
 27206 b86c CB01      		movw r24,r22
 27207 b86e BF77      		andi r27,0x7f
 27208 b870 8C8F      		std Y+28,r24
 27209 b872 9D8F      		std Y+29,r25
 27210 b874 AE8F      		std Y+30,r26
 27211 b876 BF8F      		std Y+31,r27
2432:lp_solve_5.5/lp_presolve.c ****       if(is_constr_type(lp, i, EQ) && (Rvalue > epsvalue)) {
 27212               		.loc 2 2432 0
 27213 b878 2A81      		ldd r18,Y+2
 27214 b87a 3B81      		ldd r19,Y+3
 27215 b87c 8A89      		ldd r24,Y+18
 27216 b87e 9B89      		ldd r25,Y+19
 27217 b880 43E0      		ldi r20,lo8(3)
 27218 b882 50E0      		ldi r21,0
 27219 b884 B901      		movw r22,r18
 27220 b886 0E94 0000 		call is_constr_type
 27221 b88a 8823      		tst r24
 27222 b88c 01F0      		breq .L1188
 27223               		.loc 2 2432 0 is_stmt 0 discriminator 1
 27224 b88e 2C89      		ldd r18,Y+20
 27225 b890 3D89      		ldd r19,Y+21
 27226 b892 4E89      		ldd r20,Y+22
 27227 b894 5F89      		ldd r21,Y+23
 27228 b896 6C8D      		ldd r22,Y+28
 27229 b898 7D8D      		ldd r23,Y+29
 27230 b89a 8E8D      		ldd r24,Y+30
 27231 b89c 9F8D      		ldd r25,Y+31
 27232 b89e 0E94 0000 		call __gtsf2
 27233 b8a2 1816      		cp __zero_reg__,r24
 27234 b8a4 04F4      		brge .L1188
2433:lp_solve_5.5/lp_presolve.c ****         report(lp, NORMAL, "presolve_reduceGCD: Infeasible equality constraint %d\n", i);
 27235               		.loc 2 2433 0 is_stmt 1
 27236 b8a6 8B81      		ldd r24,Y+3
 27237 b8a8 8F93      		push r24
 27238 b8aa 8A81      		ldd r24,Y+2
 27239 b8ac 8F93      		push r24
 27240 b8ae 80E0      		ldi r24,lo8(.LC32)
 27241 b8b0 90E0      		ldi r25,hi8(.LC32)
 27242 b8b2 892F      		mov r24,r25
 27243 b8b4 8F93      		push r24
 27244 b8b6 80E0      		ldi r24,lo8(.LC32)
 27245 b8b8 90E0      		ldi r25,hi8(.LC32)
 27246 b8ba 8F93      		push r24
 27247 b8bc 1F92      		push __zero_reg__
 27248 b8be 84E0      		ldi r24,lo8(4)
 27249 b8c0 8F93      		push r24
 27250 b8c2 8B89      		ldd r24,Y+19
 27251 b8c4 8F93      		push r24
 27252 b8c6 8A89      		ldd r24,Y+18
 27253 b8c8 8F93      		push r24
 27254 b8ca 0E94 0000 		call report
 27255 b8ce 8DB7      		in r24,__SP_L__
 27256 b8d0 9EB7      		in r25,__SP_H__
 27257 b8d2 0896      		adiw r24,8
 27258 b8d4 0FB6      		in __tmp_reg__,__SREG__
 27259 b8d6 F894      		cli
 27260 b8d8 DEBF      		out __SP_H__,r29
 27261 b8da 0FBE      		out __SREG__,__tmp_reg__
 27262 b8dc CDBF      		out __SP_L__,r28
2434:lp_solve_5.5/lp_presolve.c ****         status = FALSE;
 27263               		.loc 2 2434 0
 27264 b8de 1982      		std Y+1,__zero_reg__
2435:lp_solve_5.5/lp_presolve.c ****         break;
 27265               		.loc 2 2435 0
 27266 b8e0 00C0      		rjmp .L1190
 27267               	.L1188:
2436:lp_solve_5.5/lp_presolve.c ****       }
2437:lp_solve_5.5/lp_presolve.c ****       if(!my_infinite(lp, lp->orig_upbo[i]))
 27268               		.loc 2 2437 0
 27269 b8e2 8A89      		ldd r24,Y+18
 27270 b8e4 9B89      		ldd r25,Y+19
 27271 b8e6 8255      		subi r24,82
 27272 b8e8 9D4F      		sbci r25,-3
 27273 b8ea FC01      		movw r30,r24
 27274 b8ec 2081      		ld r18,Z
 27275 b8ee 3181      		ldd r19,Z+1
 27276 b8f0 8A81      		ldd r24,Y+2
 27277 b8f2 9B81      		ldd r25,Y+3
 27278 b8f4 880F      		lsl r24
 27279 b8f6 991F      		rol r25
 27280 b8f8 880F      		lsl r24
 27281 b8fa 991F      		rol r25
 27282 b8fc 820F      		add r24,r18
 27283 b8fe 931F      		adc r25,r19
 27284 b900 FC01      		movw r30,r24
 27285 b902 8081      		ld r24,Z
 27286 b904 9181      		ldd r25,Z+1
 27287 b906 A281      		ldd r26,Z+2
 27288 b908 B381      		ldd r27,Z+3
 27289 b90a BF77      		andi r27,0x7f
 27290 b90c 2A89      		ldd r18,Y+18
 27291 b90e 3B89      		ldd r19,Y+19
 27292 b910 265F      		subi r18,-10
 27293 b912 3C4F      		sbci r19,-4
 27294 b914 F901      		movw r30,r18
 27295 b916 2081      		ld r18,Z
 27296 b918 3181      		ldd r19,Z+1
 27297 b91a 4281      		ldd r20,Z+2
 27298 b91c 5381      		ldd r21,Z+3
 27299 b91e 11E0      		ldi r17,lo8(1)
 27300 b920 BC01      		movw r22,r24
 27301 b922 CD01      		movw r24,r26
 27302 b924 0E94 0000 		call __gesf2
 27303 b928 8823      		tst r24
 27304 b92a 04F4      		brge .L1191
 27305 b92c 10E0      		ldi r17,0
 27306               	.L1191:
 27307 b92e 81E0      		ldi r24,lo8(1)
 27308 b930 8127      		eor r24,r17
 27309 b932 8823      		tst r24
 27310 b934 01F4      		brne .+2
 27311 b936 00C0      		rjmp .L1192
2438:lp_solve_5.5/lp_presolve.c ****         lp->orig_upbo[i] = floor(lp->orig_upbo[i] / GCDvalue);
 27312               		.loc 2 2438 0
 27313 b938 8A89      		ldd r24,Y+18
 27314 b93a 9B89      		ldd r25,Y+19
 27315 b93c 8255      		subi r24,82
 27316 b93e 9D4F      		sbci r25,-3
 27317 b940 FC01      		movw r30,r24
 27318 b942 2081      		ld r18,Z
 27319 b944 3181      		ldd r19,Z+1
 27320 b946 8A81      		ldd r24,Y+2
 27321 b948 9B81      		ldd r25,Y+3
 27322 b94a 880F      		lsl r24
 27323 b94c 991F      		rol r25
 27324 b94e 880F      		lsl r24
 27325 b950 991F      		rol r25
 27326 b952 8901      		movw r16,r18
 27327 b954 080F      		add r16,r24
 27328 b956 191F      		adc r17,r25
 27329 b958 8A89      		ldd r24,Y+18
 27330 b95a 9B89      		ldd r25,Y+19
 27331 b95c 8255      		subi r24,82
 27332 b95e 9D4F      		sbci r25,-3
 27333 b960 FC01      		movw r30,r24
 27334 b962 2081      		ld r18,Z
 27335 b964 3181      		ldd r19,Z+1
 27336 b966 8A81      		ldd r24,Y+2
 27337 b968 9B81      		ldd r25,Y+3
 27338 b96a 880F      		lsl r24
 27339 b96c 991F      		rol r25
 27340 b96e 880F      		lsl r24
 27341 b970 991F      		rol r25
 27342 b972 820F      		add r24,r18
 27343 b974 931F      		adc r25,r19
 27344 b976 FC01      		movw r30,r24
 27345 b978 C080      		ld r12,Z
 27346 b97a D180      		ldd r13,Z+1
 27347 b97c E280      		ldd r14,Z+2
 27348 b97e F380      		ldd r15,Z+3
 27349 b980 2A85      		ldd r18,Y+10
 27350 b982 3B85      		ldd r19,Y+11
 27351 b984 4C85      		ldd r20,Y+12
 27352 b986 5D85      		ldd r21,Y+13
 27353 b988 6E85      		ldd r22,Y+14
 27354 b98a 7F85      		ldd r23,Y+15
 27355 b98c 8889      		ldd r24,Y+16
 27356 b98e 9989      		ldd r25,Y+17
 27357 b990 0E94 0000 		call __floatdisf
 27358 b994 DC01      		movw r26,r24
 27359 b996 CB01      		movw r24,r22
 27360 b998 9C01      		movw r18,r24
 27361 b99a AD01      		movw r20,r26
 27362 b99c C701      		movw r24,r14
 27363 b99e B601      		movw r22,r12
 27364 b9a0 0E94 0000 		call __divsf3
 27365 b9a4 DC01      		movw r26,r24
 27366 b9a6 CB01      		movw r24,r22
 27367 b9a8 BC01      		movw r22,r24
 27368 b9aa CD01      		movw r24,r26
 27369 b9ac 0E94 0000 		call floor
 27370 b9b0 DC01      		movw r26,r24
 27371 b9b2 CB01      		movw r24,r22
 27372 b9b4 F801      		movw r30,r16
 27373 b9b6 8083      		st Z,r24
 27374 b9b8 9183      		std Z+1,r25
 27375 b9ba A283      		std Z+2,r26
 27376 b9bc B383      		std Z+3,r27
 27377               	.L1192:
2439:lp_solve_5.5/lp_presolve.c ****       ib++;
 27378               		.loc 2 2439 0
 27379 b9be 8885      		ldd r24,Y+8
 27380 b9c0 9985      		ldd r25,Y+9
 27381 b9c2 0196      		adiw r24,1
 27382 b9c4 9987      		std Y+9,r25
 27383 b9c6 8887      		std Y+8,r24
 27384               	.L1185:
2406:lp_solve_5.5/lp_presolve.c **** 
 27385               		.loc 2 2406 0 discriminator 2
 27386 b9c8 8AA1      		ldd r24,Y+34
 27387 b9ca 9BA1      		ldd r25,Y+35
 27388 b9cc FC01      		movw r30,r24
 27389 b9ce 8085      		ldd r24,Z+8
 27390 b9d0 9185      		ldd r25,Z+9
 27391 b9d2 2A81      		ldd r18,Y+2
 27392 b9d4 3B81      		ldd r19,Y+3
 27393 b9d6 B901      		movw r22,r18
 27394 b9d8 0E94 0000 		call nextActiveLink
 27395 b9dc 9B83      		std Y+3,r25
 27396 b9de 8A83      		std Y+2,r24
 27397               	.L1180:
2406:lp_solve_5.5/lp_presolve.c **** 
 27398               		.loc 2 2406 0 is_stmt 0 discriminator 1
 27399 b9e0 8A81      		ldd r24,Y+2
 27400 b9e2 9B81      		ldd r25,Y+3
 27401 b9e4 892B      		or r24,r25
 27402 b9e6 01F0      		breq .+2
 27403 b9e8 00C0      		rjmp .L1193
 27404               	.L1190:
2440:lp_solve_5.5/lp_presolve.c ****     }
2441:lp_solve_5.5/lp_presolve.c ****   }
2442:lp_solve_5.5/lp_presolve.c ****   if(status && (in > 0))
 27405               		.loc 2 2442 0 is_stmt 1
 27406 b9ea 8981      		ldd r24,Y+1
 27407 b9ec 8823      		tst r24
 27408 b9ee 01F0      		breq .L1194
 27409               		.loc 2 2442 0 is_stmt 0 discriminator 1
 27410 b9f0 8E81      		ldd r24,Y+6
 27411 b9f2 9F81      		ldd r25,Y+7
 27412 b9f4 1816      		cp __zero_reg__,r24
 27413 b9f6 1906      		cpc __zero_reg__,r25
 27414 b9f8 04F4      		brge .L1194
2443:lp_solve_5.5/lp_presolve.c ****     report(lp, DETAILED, "presolve_reduceGCD: Did %d constraint coefficient reductions.\n", in);
 27415               		.loc 2 2443 0 is_stmt 1
 27416 b9fa 8F81      		ldd r24,Y+7
 27417 b9fc 8F93      		push r24
 27418 b9fe 8E81      		ldd r24,Y+6
 27419 ba00 8F93      		push r24
 27420 ba02 80E0      		ldi r24,lo8(.LC33)
 27421 ba04 90E0      		ldi r25,hi8(.LC33)
 27422 ba06 892F      		mov r24,r25
 27423 ba08 8F93      		push r24
 27424 ba0a 80E0      		ldi r24,lo8(.LC33)
 27425 ba0c 90E0      		ldi r25,hi8(.LC33)
 27426 ba0e 8F93      		push r24
 27427 ba10 1F92      		push __zero_reg__
 27428 ba12 85E0      		ldi r24,lo8(5)
 27429 ba14 8F93      		push r24
 27430 ba16 8B89      		ldd r24,Y+19
 27431 ba18 8F93      		push r24
 27432 ba1a 8A89      		ldd r24,Y+18
 27433 ba1c 8F93      		push r24
 27434 ba1e 0E94 0000 		call report
 27435 ba22 8DB7      		in r24,__SP_L__
 27436 ba24 9EB7      		in r25,__SP_H__
 27437 ba26 0896      		adiw r24,8
 27438 ba28 0FB6      		in __tmp_reg__,__SREG__
 27439 ba2a F894      		cli
 27440 ba2c DEBF      		out __SP_H__,r29
 27441 ba2e 0FBE      		out __SREG__,__tmp_reg__
 27442 ba30 CDBF      		out __SP_L__,r28
 27443               	.L1194:
2444:lp_solve_5.5/lp_presolve.c **** 
2445:lp_solve_5.5/lp_presolve.c ****   (*nn)   += in;
 27444               		.loc 2 2445 0
 27445 ba32 8CA1      		ldd r24,Y+36
 27446 ba34 9DA1      		ldd r25,Y+37
 27447 ba36 FC01      		movw r30,r24
 27448 ba38 2081      		ld r18,Z
 27449 ba3a 3181      		ldd r19,Z+1
 27450 ba3c 8E81      		ldd r24,Y+6
 27451 ba3e 9F81      		ldd r25,Y+7
 27452 ba40 280F      		add r18,r24
 27453 ba42 391F      		adc r19,r25
 27454 ba44 8CA1      		ldd r24,Y+36
 27455 ba46 9DA1      		ldd r25,Y+37
 27456 ba48 FC01      		movw r30,r24
 27457 ba4a 3183      		std Z+1,r19
 27458 ba4c 2083      		st Z,r18
2446:lp_solve_5.5/lp_presolve.c ****   (*nb)   += ib;
 27459               		.loc 2 2446 0
 27460 ba4e 8EA1      		ldd r24,Y+38
 27461 ba50 9FA1      		ldd r25,Y+39
 27462 ba52 FC01      		movw r30,r24
 27463 ba54 2081      		ld r18,Z
 27464 ba56 3181      		ldd r19,Z+1
 27465 ba58 8885      		ldd r24,Y+8
 27466 ba5a 9985      		ldd r25,Y+9
 27467 ba5c 280F      		add r18,r24
 27468 ba5e 391F      		adc r19,r25
 27469 ba60 8EA1      		ldd r24,Y+38
 27470 ba62 9FA1      		ldd r25,Y+39
 27471 ba64 FC01      		movw r30,r24
 27472 ba66 3183      		std Z+1,r19
 27473 ba68 2083      		st Z,r18
2447:lp_solve_5.5/lp_presolve.c ****   (*nsum) += in + ib;
 27474               		.loc 2 2447 0
 27475 ba6a 88A5      		ldd r24,Y+40
 27476 ba6c 99A5      		ldd r25,Y+41
 27477 ba6e FC01      		movw r30,r24
 27478 ba70 2081      		ld r18,Z
 27479 ba72 3181      		ldd r19,Z+1
 27480 ba74 4E81      		ldd r20,Y+6
 27481 ba76 5F81      		ldd r21,Y+7
 27482 ba78 8885      		ldd r24,Y+8
 27483 ba7a 9985      		ldd r25,Y+9
 27484 ba7c 840F      		add r24,r20
 27485 ba7e 951F      		adc r25,r21
 27486 ba80 280F      		add r18,r24
 27487 ba82 391F      		adc r19,r25
 27488 ba84 88A5      		ldd r24,Y+40
 27489 ba86 99A5      		ldd r25,Y+41
 27490 ba88 FC01      		movw r30,r24
 27491 ba8a 3183      		std Z+1,r19
 27492 ba8c 2083      		st Z,r18
2448:lp_solve_5.5/lp_presolve.c **** 
2449:lp_solve_5.5/lp_presolve.c ****   return( status );
 27493               		.loc 2 2449 0
 27494 ba8e 8981      		ldd r24,Y+1
 27495               	/* epilogue start */
2450:lp_solve_5.5/lp_presolve.c **** }
 27496               		.loc 2 2450 0
 27497 ba90 E196      		adiw r28,49
 27498 ba92 0FB6      		in __tmp_reg__,__SREG__
 27499 ba94 F894      		cli
 27500 ba96 DEBF      		out __SP_H__,r29
 27501 ba98 0FBE      		out __SREG__,__tmp_reg__
 27502 ba9a CDBF      		out __SP_L__,r28
 27503 ba9c DF91      		pop r29
 27504 ba9e CF91      		pop r28
 27505 baa0 1F91      		pop r17
 27506 baa2 0F91      		pop r16
 27507 baa4 FF90      		pop r15
 27508 baa6 EF90      		pop r14
 27509 baa8 DF90      		pop r13
 27510 baaa CF90      		pop r12
 27511 baac BF90      		pop r11
 27512 baae AF90      		pop r10
 27513 bab0 9F90      		pop r9
 27514 bab2 8F90      		pop r8
 27515 bab4 0895      		ret
 27516               		.cfi_endproc
 27517               	.LFE64:
 27519               	.global	presolve_knapsack
 27521               	presolve_knapsack:
 27522               	.LFB65:
2451:lp_solve_5.5/lp_presolve.c **** 
2452:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_knapsack(presolverec *psdata, int *nn)
2453:lp_solve_5.5/lp_presolve.c **** {
 27523               		.loc 2 2453 0
 27524               		.cfi_startproc
 27525 bab6 EF92      		push r14
 27526               	.LCFI382:
 27527               		.cfi_def_cfa_offset 3
 27528               		.cfi_offset 14, -2
 27529 bab8 FF92      		push r15
 27530               	.LCFI383:
 27531               		.cfi_def_cfa_offset 4
 27532               		.cfi_offset 15, -3
 27533 baba 0F93      		push r16
 27534               	.LCFI384:
 27535               		.cfi_def_cfa_offset 5
 27536               		.cfi_offset 16, -4
 27537 babc 1F93      		push r17
 27538               	.LCFI385:
 27539               		.cfi_def_cfa_offset 6
 27540               		.cfi_offset 17, -5
 27541 babe CF93      		push r28
 27542               	.LCFI386:
 27543               		.cfi_def_cfa_offset 7
 27544               		.cfi_offset 28, -6
 27545 bac0 DF93      		push r29
 27546               	.LCFI387:
 27547               		.cfi_def_cfa_offset 8
 27548               		.cfi_offset 29, -7
 27549 bac2 CDB7      		in r28,__SP_L__
 27550 bac4 DEB7      		in r29,__SP_H__
 27551               	.LCFI388:
 27552               		.cfi_def_cfa_register 28
 27553 bac6 A497      		sbiw r28,36
 27554               	.LCFI389:
 27555               		.cfi_def_cfa_offset 44
 27556 bac8 0FB6      		in __tmp_reg__,__SREG__
 27557 baca F894      		cli
 27558 bacc DEBF      		out __SP_H__,r29
 27559 bace 0FBE      		out __SREG__,__tmp_reg__
 27560 bad0 CDBF      		out __SP_L__,r28
 27561               	/* prologue: function */
 27562               	/* frame size = 36 */
 27563               	/* stack size = 42 */
 27564               	.L__stack_usage = 42
 27565 bad2 9AA3      		std Y+34,r25
 27566 bad4 89A3      		std Y+33,r24
 27567 bad6 7CA3      		std Y+36,r23
 27568 bad8 6BA3      		std Y+35,r22
2454:lp_solve_5.5/lp_presolve.c ****   lprec *lp = psdata->lp;
 27569               		.loc 2 2454 0
 27570 bada 89A1      		ldd r24,Y+33
 27571 badc 9AA1      		ldd r25,Y+34
 27572 bade FC01      		movw r30,r24
 27573 bae0 8289      		ldd r24,Z+18
 27574 bae2 9389      		ldd r25,Z+19
 27575 bae4 9A87      		std Y+10,r25
 27576 bae6 8987      		std Y+9,r24
2455:lp_solve_5.5/lp_presolve.c ****   int    m, n, i, ix, j, jx, colnr, *rownr = NULL,
 27577               		.loc 2 2455 0
 27578 bae8 1E8E      		std Y+30,__zero_reg__
 27579 baea 1D8E      		std Y+29,__zero_reg__
2456:lp_solve_5.5/lp_presolve.c ****          status = RUNNING;
 27580               		.loc 2 2456 0
 27581 baec 88E0      		ldi r24,lo8(8)
 27582 baee 90E0      		ldi r25,0
 27583 baf0 9C87      		std Y+12,r25
 27584 baf2 8B87      		std Y+11,r24
2457:lp_solve_5.5/lp_presolve.c ****   REAL   *colOF = lp->orig_obj, value, *ratio = NULL;
 27585               		.loc 2 2457 0
 27586 baf4 8985      		ldd r24,Y+9
 27587 baf6 9A85      		ldd r25,Y+10
 27588 baf8 845D      		subi r24,-44
 27589 bafa 9D4F      		sbci r25,-3
 27590 bafc FC01      		movw r30,r24
 27591 bafe 8081      		ld r24,Z
 27592 bb00 9181      		ldd r25,Z+1
 27593 bb02 9E87      		std Y+14,r25
 27594 bb04 8D87      		std Y+13,r24
 27595 bb06 18A2      		std Y+32,__zero_reg__
 27596 bb08 1F8E      		std Y+31,__zero_reg__
2458:lp_solve_5.5/lp_presolve.c ****   LLrec  *map = psdata->EQmap;
 27597               		.loc 2 2458 0
 27598 bb0a 89A1      		ldd r24,Y+33
 27599 bb0c 9AA1      		ldd r25,Y+34
 27600 bb0e FC01      		movw r30,r24
 27601 bb10 8481      		ldd r24,Z+4
 27602 bb12 9581      		ldd r25,Z+5
 27603 bb14 988B      		std Y+16,r25
 27604 bb16 8F87      		std Y+15,r24
2459:lp_solve_5.5/lp_presolve.c ****   MATrec *mat = lp->matA;
 27605               		.loc 2 2459 0
 27606 bb18 8985      		ldd r24,Y+9
 27607 bb1a 9A85      		ldd r25,Y+10
 27608 bb1c 8A54      		subi r24,74
 27609 bb1e 9D4F      		sbci r25,-3
 27610 bb20 FC01      		movw r30,r24
 27611 bb22 8081      		ld r24,Z
 27612 bb24 9181      		ldd r25,Z+1
 27613 bb26 9A8B      		std Y+18,r25
 27614 bb28 898B      		std Y+17,r24
2460:lp_solve_5.5/lp_presolve.c **** 
2461:lp_solve_5.5/lp_presolve.c ****   /* Check if it is worth trying */
2462:lp_solve_5.5/lp_presolve.c ****   m = mat->row_end[0];
 27615               		.loc 2 2462 0
 27616 bb2a 8989      		ldd r24,Y+17
 27617 bb2c 9A89      		ldd r25,Y+18
 27618 bb2e FC01      		movw r30,r24
 27619 bb30 808D      		ldd r24,Z+24
 27620 bb32 918D      		ldd r25,Z+25
 27621 bb34 FC01      		movw r30,r24
 27622 bb36 8081      		ld r24,Z
 27623 bb38 9181      		ldd r25,Z+1
 27624 bb3a 9C8B      		std Y+20,r25
 27625 bb3c 8B8B      		std Y+19,r24
2463:lp_solve_5.5/lp_presolve.c ****   if((map->count == 0) || (m < 2))
 27626               		.loc 2 2463 0
 27627 bb3e 8F85      		ldd r24,Y+15
 27628 bb40 9889      		ldd r25,Y+16
 27629 bb42 FC01      		movw r30,r24
 27630 bb44 8281      		ldd r24,Z+2
 27631 bb46 9381      		ldd r25,Z+3
 27632 bb48 892B      		or r24,r25
 27633 bb4a 01F0      		breq .L1198
 27634               		.loc 2 2463 0 is_stmt 0 discriminator 1
 27635 bb4c 8B89      		ldd r24,Y+19
 27636 bb4e 9C89      		ldd r25,Y+20
 27637 bb50 0297      		sbiw r24,2
 27638 bb52 04F4      		brge .L1199
 27639               	.L1198:
2464:lp_solve_5.5/lp_presolve.c ****     return( status );
 27640               		.loc 2 2464 0 is_stmt 1
 27641 bb54 8B85      		ldd r24,Y+11
 27642 bb56 9C85      		ldd r25,Y+12
 27643 bb58 00C0      		rjmp .L1227
 27644               	.L1199:
2465:lp_solve_5.5/lp_presolve.c **** 
2466:lp_solve_5.5/lp_presolve.c ****   /* Get the OF row */
2467:lp_solve_5.5/lp_presolve.c ****   allocINT(lp, &rownr,  map->count+1, FALSE);
 27645               		.loc 2 2467 0
 27646 bb5a 8F85      		ldd r24,Y+15
 27647 bb5c 9889      		ldd r25,Y+16
 27648 bb5e FC01      		movw r30,r24
 27649 bb60 8281      		ldd r24,Z+2
 27650 bb62 9381      		ldd r25,Z+3
 27651 bb64 AC01      		movw r20,r24
 27652 bb66 4F5F      		subi r20,-1
 27653 bb68 5F4F      		sbci r21,-1
 27654 bb6a BE01      		movw r22,r28
 27655 bb6c 635E      		subi r22,-29
 27656 bb6e 7F4F      		sbci r23,-1
 27657 bb70 8985      		ldd r24,Y+9
 27658 bb72 9A85      		ldd r25,Y+10
 27659 bb74 20E0      		ldi r18,0
 27660 bb76 0E94 0000 		call allocINT
2468:lp_solve_5.5/lp_presolve.c ****   allocREAL(lp, &ratio, map->count+1, FALSE);
 27661               		.loc 2 2468 0
 27662 bb7a 8F85      		ldd r24,Y+15
 27663 bb7c 9889      		ldd r25,Y+16
 27664 bb7e FC01      		movw r30,r24
 27665 bb80 8281      		ldd r24,Z+2
 27666 bb82 9381      		ldd r25,Z+3
 27667 bb84 AC01      		movw r20,r24
 27668 bb86 4F5F      		subi r20,-1
 27669 bb88 5F4F      		sbci r21,-1
 27670 bb8a BE01      		movw r22,r28
 27671 bb8c 615E      		subi r22,-31
 27672 bb8e 7F4F      		sbci r23,-1
 27673 bb90 8985      		ldd r24,Y+9
 27674 bb92 9A85      		ldd r25,Y+10
 27675 bb94 20E0      		ldi r18,0
 27676 bb96 0E94 0000 		call allocREAL
2469:lp_solve_5.5/lp_presolve.c **** 
2470:lp_solve_5.5/lp_presolve.c ****   /* Loop over each row trying to find equal entries in the OF */
2471:lp_solve_5.5/lp_presolve.c ****   rownr[0] = 0;
 27677               		.loc 2 2471 0
 27678 bb9a 8D8D      		ldd r24,Y+29
 27679 bb9c 9E8D      		ldd r25,Y+30
 27680 bb9e FC01      		movw r30,r24
 27681 bba0 1182      		std Z+1,__zero_reg__
 27682 bba2 1082      		st Z,__zero_reg__
2472:lp_solve_5.5/lp_presolve.c ****   for(i = firstActiveLink(map); i != 0; i = nextActiveLink(map, i)) {
 27683               		.loc 2 2472 0
 27684 bba4 8F85      		ldd r24,Y+15
 27685 bba6 9889      		ldd r25,Y+16
 27686 bba8 0E94 0000 		call firstActiveLink
 27687 bbac 9C83      		std Y+4,r25
 27688 bbae 8B83      		std Y+3,r24
 27689 bbb0 00C0      		rjmp .L1201
 27690               	.L1213:
2473:lp_solve_5.5/lp_presolve.c ****     if(get_rh(lp, i) <= 0)
 27691               		.loc 2 2473 0
 27692 bbb2 2B81      		ldd r18,Y+3
 27693 bbb4 3C81      		ldd r19,Y+4
 27694 bbb6 8985      		ldd r24,Y+9
 27695 bbb8 9A85      		ldd r25,Y+10
 27696 bbba B901      		movw r22,r18
 27697 bbbc 0E94 0000 		call get_rh
 27698 bbc0 DC01      		movw r26,r24
 27699 bbc2 CB01      		movw r24,r22
 27700 bbc4 20E0      		ldi r18,0
 27701 bbc6 30E0      		ldi r19,0
 27702 bbc8 A901      		movw r20,r18
 27703 bbca BC01      		movw r22,r24
 27704 bbcc CD01      		movw r24,r26
 27705 bbce 0E94 0000 		call __lesf2
 27706 bbd2 1816      		cp __zero_reg__,r24
 27707 bbd4 04F0      		brlt .+2
 27708 bbd6 00C0      		rjmp .L1230
2474:lp_solve_5.5/lp_presolve.c ****       continue;
2475:lp_solve_5.5/lp_presolve.c ****     jx = mat->row_end[i];
 27709               		.loc 2 2475 0
 27710 bbd8 8989      		ldd r24,Y+17
 27711 bbda 9A89      		ldd r25,Y+18
 27712 bbdc FC01      		movw r30,r24
 27713 bbde 208D      		ldd r18,Z+24
 27714 bbe0 318D      		ldd r19,Z+25
 27715 bbe2 8B81      		ldd r24,Y+3
 27716 bbe4 9C81      		ldd r25,Y+4
 27717 bbe6 880F      		lsl r24
 27718 bbe8 991F      		rol r25
 27719 bbea 820F      		add r24,r18
 27720 bbec 931F      		adc r25,r19
 27721 bbee FC01      		movw r30,r24
 27722 bbf0 8081      		ld r24,Z
 27723 bbf2 9181      		ldd r25,Z+1
 27724 bbf4 9E8B      		std Y+22,r25
 27725 bbf6 8D8B      		std Y+21,r24
2476:lp_solve_5.5/lp_presolve.c ****     n = 0;
 27726               		.loc 2 2476 0
 27727 bbf8 1A82      		std Y+2,__zero_reg__
 27728 bbfa 1982      		std Y+1,__zero_reg__
2477:lp_solve_5.5/lp_presolve.c ****     for(j = mat->row_end[i-1]; j  < jx; j++, n++) {
 27729               		.loc 2 2477 0
 27730 bbfc 8989      		ldd r24,Y+17
 27731 bbfe 9A89      		ldd r25,Y+18
 27732 bc00 FC01      		movw r30,r24
 27733 bc02 208D      		ldd r18,Z+24
 27734 bc04 318D      		ldd r19,Z+25
 27735 bc06 8B81      		ldd r24,Y+3
 27736 bc08 9C81      		ldd r25,Y+4
 27737 bc0a 8150      		subi r24,1
 27738 bc0c 9048      		sbci r25,-128
 27739 bc0e 880F      		lsl r24
 27740 bc10 991F      		rol r25
 27741 bc12 820F      		add r24,r18
 27742 bc14 931F      		adc r25,r19
 27743 bc16 FC01      		movw r30,r24
 27744 bc18 8081      		ld r24,Z
 27745 bc1a 9181      		ldd r25,Z+1
 27746 bc1c 9887      		std Y+8,r25
 27747 bc1e 8F83      		std Y+7,r24
 27748 bc20 00C0      		rjmp .L1205
 27749               	.L1212:
2478:lp_solve_5.5/lp_presolve.c ****       colnr = ROW_MAT_COLNR(j);
 27750               		.loc 2 2478 0
 27751 bc22 8989      		ldd r24,Y+17
 27752 bc24 9A89      		ldd r25,Y+18
 27753 bc26 FC01      		movw r30,r24
 27754 bc28 2485      		ldd r18,Z+12
 27755 bc2a 3585      		ldd r19,Z+13
 27756 bc2c 8989      		ldd r24,Y+17
 27757 bc2e 9A89      		ldd r25,Y+18
 27758 bc30 FC01      		movw r30,r24
 27759 bc32 4689      		ldd r20,Z+22
 27760 bc34 5789      		ldd r21,Z+23
 27761 bc36 8F81      		ldd r24,Y+7
 27762 bc38 9885      		ldd r25,Y+8
 27763 bc3a 880F      		lsl r24
 27764 bc3c 991F      		rol r25
 27765 bc3e 840F      		add r24,r20
 27766 bc40 951F      		adc r25,r21
 27767 bc42 FC01      		movw r30,r24
 27768 bc44 8081      		ld r24,Z
 27769 bc46 9181      		ldd r25,Z+1
 27770 bc48 880F      		lsl r24
 27771 bc4a 991F      		rol r25
 27772 bc4c 820F      		add r24,r18
 27773 bc4e 931F      		adc r25,r19
 27774 bc50 FC01      		movw r30,r24
 27775 bc52 8081      		ld r24,Z
 27776 bc54 9181      		ldd r25,Z+1
 27777 bc56 988F      		std Y+24,r25
 27778 bc58 8F8B      		std Y+23,r24
2479:lp_solve_5.5/lp_presolve.c ****       value = ROW_MAT_VALUE(j);
 27779               		.loc 2 2479 0
 27780 bc5a 8989      		ldd r24,Y+17
 27781 bc5c 9A89      		ldd r25,Y+18
 27782 bc5e FC01      		movw r30,r24
 27783 bc60 2089      		ldd r18,Z+16
 27784 bc62 3189      		ldd r19,Z+17
 27785 bc64 8989      		ldd r24,Y+17
 27786 bc66 9A89      		ldd r25,Y+18
 27787 bc68 FC01      		movw r30,r24
 27788 bc6a 4689      		ldd r20,Z+22
 27789 bc6c 5789      		ldd r21,Z+23
 27790 bc6e 8F81      		ldd r24,Y+7
 27791 bc70 9885      		ldd r25,Y+8
 27792 bc72 880F      		lsl r24
 27793 bc74 991F      		rol r25
 27794 bc76 840F      		add r24,r20
 27795 bc78 951F      		adc r25,r21
 27796 bc7a FC01      		movw r30,r24
 27797 bc7c 8081      		ld r24,Z
 27798 bc7e 9181      		ldd r25,Z+1
 27799 bc80 880F      		lsl r24
 27800 bc82 991F      		rol r25
 27801 bc84 880F      		lsl r24
 27802 bc86 991F      		rol r25
 27803 bc88 820F      		add r24,r18
 27804 bc8a 931F      		adc r25,r19
 27805 bc8c FC01      		movw r30,r24
 27806 bc8e 8081      		ld r24,Z
 27807 bc90 9181      		ldd r25,Z+1
 27808 bc92 A281      		ldd r26,Z+2
 27809 bc94 B381      		ldd r27,Z+3
 27810 bc96 898F      		std Y+25,r24
 27811 bc98 9A8F      		std Y+26,r25
 27812 bc9a AB8F      		std Y+27,r26
 27813 bc9c BC8F      		std Y+28,r27
2480:lp_solve_5.5/lp_presolve.c ****       if(colOF[colnr] == 0)
 27814               		.loc 2 2480 0
 27815 bc9e 8F89      		ldd r24,Y+23
 27816 bca0 988D      		ldd r25,Y+24
 27817 bca2 880F      		lsl r24
 27818 bca4 991F      		rol r25
 27819 bca6 880F      		lsl r24
 27820 bca8 991F      		rol r25
 27821 bcaa 2D85      		ldd r18,Y+13
 27822 bcac 3E85      		ldd r19,Y+14
 27823 bcae 820F      		add r24,r18
 27824 bcb0 931F      		adc r25,r19
 27825 bcb2 FC01      		movw r30,r24
 27826 bcb4 8081      		ld r24,Z
 27827 bcb6 9181      		ldd r25,Z+1
 27828 bcb8 A281      		ldd r26,Z+2
 27829 bcba B381      		ldd r27,Z+3
 27830 bcbc 20E0      		ldi r18,0
 27831 bcbe 30E0      		ldi r19,0
 27832 bcc0 A901      		movw r20,r18
 27833 bcc2 BC01      		movw r22,r24
 27834 bcc4 CD01      		movw r24,r26
 27835 bcc6 0E94 0000 		call __eqsf2
 27836 bcca 8823      		tst r24
 27837 bccc 01F4      		brne .+2
 27838 bcce 00C0      		rjmp .L1231
2481:lp_solve_5.5/lp_presolve.c ****         break;
2482:lp_solve_5.5/lp_presolve.c ****       if(n == 0) {
 27839               		.loc 2 2482 0
 27840 bcd0 8981      		ldd r24,Y+1
 27841 bcd2 9A81      		ldd r25,Y+2
 27842 bcd4 892B      		or r24,r25
 27843 bcd6 01F4      		brne .L1209
2483:lp_solve_5.5/lp_presolve.c ****         ratio[0] = colOF[colnr] / value;
 27844               		.loc 2 2483 0
 27845 bcd8 0F8D      		ldd r16,Y+31
 27846 bcda 18A1      		ldd r17,Y+32
 27847 bcdc 8F89      		ldd r24,Y+23
 27848 bcde 988D      		ldd r25,Y+24
 27849 bce0 880F      		lsl r24
 27850 bce2 991F      		rol r25
 27851 bce4 880F      		lsl r24
 27852 bce6 991F      		rol r25
 27853 bce8 2D85      		ldd r18,Y+13
 27854 bcea 3E85      		ldd r19,Y+14
 27855 bcec 820F      		add r24,r18
 27856 bcee 931F      		adc r25,r19
 27857 bcf0 FC01      		movw r30,r24
 27858 bcf2 8081      		ld r24,Z
 27859 bcf4 9181      		ldd r25,Z+1
 27860 bcf6 A281      		ldd r26,Z+2
 27861 bcf8 B381      		ldd r27,Z+3
 27862 bcfa 298D      		ldd r18,Y+25
 27863 bcfc 3A8D      		ldd r19,Y+26
 27864 bcfe 4B8D      		ldd r20,Y+27
 27865 bd00 5C8D      		ldd r21,Y+28
 27866 bd02 BC01      		movw r22,r24
 27867 bd04 CD01      		movw r24,r26
 27868 bd06 0E94 0000 		call __divsf3
 27869 bd0a DC01      		movw r26,r24
 27870 bd0c CB01      		movw r24,r22
 27871 bd0e F801      		movw r30,r16
 27872 bd10 8083      		st Z,r24
 27873 bd12 9183      		std Z+1,r25
 27874 bd14 A283      		std Z+2,r26
 27875 bd16 B383      		std Z+3,r27
 27876 bd18 00C0      		rjmp .L1210
 27877               	.L1209:
2484:lp_solve_5.5/lp_presolve.c ****       }
2485:lp_solve_5.5/lp_presolve.c ****       else if(fabs(value * ratio[0] - colOF[colnr]) > psdata->epsvalue) {
 27878               		.loc 2 2485 0
 27879 bd1a 8F8D      		ldd r24,Y+31
 27880 bd1c 98A1      		ldd r25,Y+32
 27881 bd1e FC01      		movw r30,r24
 27882 bd20 8081      		ld r24,Z
 27883 bd22 9181      		ldd r25,Z+1
 27884 bd24 A281      		ldd r26,Z+2
 27885 bd26 B381      		ldd r27,Z+3
 27886 bd28 298D      		ldd r18,Y+25
 27887 bd2a 3A8D      		ldd r19,Y+26
 27888 bd2c 4B8D      		ldd r20,Y+27
 27889 bd2e 5C8D      		ldd r21,Y+28
 27890 bd30 BC01      		movw r22,r24
 27891 bd32 CD01      		movw r24,r26
 27892 bd34 0E94 0000 		call __mulsf3
 27893 bd38 DC01      		movw r26,r24
 27894 bd3a CB01      		movw r24,r22
 27895 bd3c 7C01      		movw r14,r24
 27896 bd3e 8D01      		movw r16,r26
 27897 bd40 8F89      		ldd r24,Y+23
 27898 bd42 988D      		ldd r25,Y+24
 27899 bd44 880F      		lsl r24
 27900 bd46 991F      		rol r25
 27901 bd48 880F      		lsl r24
 27902 bd4a 991F      		rol r25
 27903 bd4c 2D85      		ldd r18,Y+13
 27904 bd4e 3E85      		ldd r19,Y+14
 27905 bd50 820F      		add r24,r18
 27906 bd52 931F      		adc r25,r19
 27907 bd54 FC01      		movw r30,r24
 27908 bd56 8081      		ld r24,Z
 27909 bd58 9181      		ldd r25,Z+1
 27910 bd5a A281      		ldd r26,Z+2
 27911 bd5c B381      		ldd r27,Z+3
 27912 bd5e 9C01      		movw r18,r24
 27913 bd60 AD01      		movw r20,r26
 27914 bd62 C801      		movw r24,r16
 27915 bd64 B701      		movw r22,r14
 27916 bd66 0E94 0000 		call __subsf3
 27917 bd6a DC01      		movw r26,r24
 27918 bd6c CB01      		movw r24,r22
 27919 bd6e BF77      		andi r27,0x7f
 27920 bd70 29A1      		ldd r18,Y+33
 27921 bd72 3AA1      		ldd r19,Y+34
 27922 bd74 F901      		movw r30,r18
 27923 bd76 2489      		ldd r18,Z+20
 27924 bd78 3589      		ldd r19,Z+21
 27925 bd7a 4689      		ldd r20,Z+22
 27926 bd7c 5789      		ldd r21,Z+23
 27927 bd7e BC01      		movw r22,r24
 27928 bd80 CD01      		movw r24,r26
 27929 bd82 0E94 0000 		call __gtsf2
 27930 bd86 1816      		cp __zero_reg__,r24
 27931 bd88 04F4      		brge .L1210
2486:lp_solve_5.5/lp_presolve.c ****         n = -1;
 27932               		.loc 2 2486 0
 27933 bd8a 8FEF      		ldi r24,lo8(-1)
 27934 bd8c 9FEF      		ldi r25,lo8(-1)
 27935 bd8e 9A83      		std Y+2,r25
 27936 bd90 8983      		std Y+1,r24
2487:lp_solve_5.5/lp_presolve.c ****         break;
 27937               		.loc 2 2487 0
 27938 bd92 00C0      		rjmp .L1208
 27939               	.L1210:
2477:lp_solve_5.5/lp_presolve.c ****       colnr = ROW_MAT_COLNR(j);
 27940               		.loc 2 2477 0 discriminator 2
 27941 bd94 8F81      		ldd r24,Y+7
 27942 bd96 9885      		ldd r25,Y+8
 27943 bd98 0196      		adiw r24,1
 27944 bd9a 9887      		std Y+8,r25
 27945 bd9c 8F83      		std Y+7,r24
 27946 bd9e 8981      		ldd r24,Y+1
 27947 bda0 9A81      		ldd r25,Y+2
 27948 bda2 0196      		adiw r24,1
 27949 bda4 9A83      		std Y+2,r25
 27950 bda6 8983      		std Y+1,r24
 27951               	.L1205:
2477:lp_solve_5.5/lp_presolve.c ****       colnr = ROW_MAT_COLNR(j);
 27952               		.loc 2 2477 0 is_stmt 0 discriminator 1
 27953 bda8 2F81      		ldd r18,Y+7
 27954 bdaa 3885      		ldd r19,Y+8
 27955 bdac 8D89      		ldd r24,Y+21
 27956 bdae 9E89      		ldd r25,Y+22
 27957 bdb0 2817      		cp r18,r24
 27958 bdb2 3907      		cpc r19,r25
 27959 bdb4 04F4      		brge .+2
 27960 bdb6 00C0      		rjmp .L1212
 27961 bdb8 00C0      		rjmp .L1208
 27962               	.L1231:
2481:lp_solve_5.5/lp_presolve.c ****       if(n == 0) {
 27963               		.loc 2 2481 0 is_stmt 1
 27964 bdba 0000      		nop
 27965               	.L1208:
2488:lp_solve_5.5/lp_presolve.c ****       }
2489:lp_solve_5.5/lp_presolve.c ****     }
2490:lp_solve_5.5/lp_presolve.c ****     /* Register row if we were successful (and row long enough) */
2491:lp_solve_5.5/lp_presolve.c ****     if(n >= 2) {
 27966               		.loc 2 2491 0
 27967 bdbc 8981      		ldd r24,Y+1
 27968 bdbe 9A81      		ldd r25,Y+2
 27969 bdc0 0297      		sbiw r24,2
 27970 bdc2 04F0      		brlt .L1204
2492:lp_solve_5.5/lp_presolve.c ****       ix = ++rownr[0];
 27971               		.loc 2 2492 0
 27972 bdc4 8D8D      		ldd r24,Y+29
 27973 bdc6 9E8D      		ldd r25,Y+30
 27974 bdc8 FC01      		movw r30,r24
 27975 bdca 2081      		ld r18,Z
 27976 bdcc 3181      		ldd r19,Z+1
 27977 bdce 2F5F      		subi r18,-1
 27978 bdd0 3F4F      		sbci r19,-1
 27979 bdd2 FC01      		movw r30,r24
 27980 bdd4 3183      		std Z+1,r19
 27981 bdd6 2083      		st Z,r18
 27982 bdd8 FC01      		movw r30,r24
 27983 bdda 8081      		ld r24,Z
 27984 bddc 9181      		ldd r25,Z+1
 27985 bdde 9E83      		std Y+6,r25
 27986 bde0 8D83      		std Y+5,r24
2493:lp_solve_5.5/lp_presolve.c ****       rownr[ix] = i;
 27987               		.loc 2 2493 0
 27988 bde2 2D8D      		ldd r18,Y+29
 27989 bde4 3E8D      		ldd r19,Y+30
 27990 bde6 8D81      		ldd r24,Y+5
 27991 bde8 9E81      		ldd r25,Y+6
 27992 bdea 880F      		lsl r24
 27993 bdec 991F      		rol r25
 27994 bdee 820F      		add r24,r18
 27995 bdf0 931F      		adc r25,r19
 27996 bdf2 2B81      		ldd r18,Y+3
 27997 bdf4 3C81      		ldd r19,Y+4
 27998 bdf6 FC01      		movw r30,r24
 27999 bdf8 3183      		std Z+1,r19
 28000 bdfa 2083      		st Z,r18
2494:lp_solve_5.5/lp_presolve.c ****       ratio[ix] = ratio[0];
 28001               		.loc 2 2494 0
 28002 bdfc 2F8D      		ldd r18,Y+31
 28003 bdfe 38A1      		ldd r19,Y+32
 28004 be00 8D81      		ldd r24,Y+5
 28005 be02 9E81      		ldd r25,Y+6
 28006 be04 880F      		lsl r24
 28007 be06 991F      		rol r25
 28008 be08 880F      		lsl r24
 28009 be0a 991F      		rol r25
 28010 be0c 280F      		add r18,r24
 28011 be0e 391F      		adc r19,r25
 28012 be10 8F8D      		ldd r24,Y+31
 28013 be12 98A1      		ldd r25,Y+32
 28014 be14 FC01      		movw r30,r24
 28015 be16 8081      		ld r24,Z
 28016 be18 9181      		ldd r25,Z+1
 28017 be1a A281      		ldd r26,Z+2
 28018 be1c B381      		ldd r27,Z+3
 28019 be1e F901      		movw r30,r18
 28020 be20 8083      		st Z,r24
 28021 be22 9183      		std Z+1,r25
 28022 be24 A283      		std Z+2,r26
 28023 be26 B383      		std Z+3,r27
 28024 be28 00C0      		rjmp .L1204
 28025               	.L1230:
2474:lp_solve_5.5/lp_presolve.c ****     jx = mat->row_end[i];
 28026               		.loc 2 2474 0
 28027 be2a 0000      		nop
 28028               	.L1204:
2472:lp_solve_5.5/lp_presolve.c ****     if(get_rh(lp, i) <= 0)
 28029               		.loc 2 2472 0 discriminator 2
 28030 be2c 2B81      		ldd r18,Y+3
 28031 be2e 3C81      		ldd r19,Y+4
 28032 be30 8F85      		ldd r24,Y+15
 28033 be32 9889      		ldd r25,Y+16
 28034 be34 B901      		movw r22,r18
 28035 be36 0E94 0000 		call nextActiveLink
 28036 be3a 9C83      		std Y+4,r25
 28037 be3c 8B83      		std Y+3,r24
 28038               	.L1201:
2472:lp_solve_5.5/lp_presolve.c ****     if(get_rh(lp, i) <= 0)
 28039               		.loc 2 2472 0 is_stmt 0 discriminator 1
 28040 be3e 8B81      		ldd r24,Y+3
 28041 be40 9C81      		ldd r25,Y+4
 28042 be42 892B      		or r24,r25
 28043 be44 01F0      		breq .+2
 28044 be46 00C0      		rjmp .L1213
2495:lp_solve_5.5/lp_presolve.c ****     }
2496:lp_solve_5.5/lp_presolve.c ****   }
2497:lp_solve_5.5/lp_presolve.c ****   n = rownr[0];
 28045               		.loc 2 2497 0 is_stmt 1
 28046 be48 8D8D      		ldd r24,Y+29
 28047 be4a 9E8D      		ldd r25,Y+30
 28048 be4c FC01      		movw r30,r24
 28049 be4e 8081      		ld r24,Z
 28050 be50 9181      		ldd r25,Z+1
 28051 be52 9A83      		std Y+2,r25
 28052 be54 8983      		std Y+1,r24
2498:lp_solve_5.5/lp_presolve.c ****   if(n == 0)
 28053               		.loc 2 2498 0
 28054 be56 8981      		ldd r24,Y+1
 28055 be58 9A81      		ldd r25,Y+2
 28056 be5a 892B      		or r24,r25
 28057 be5c 01F4      		brne .+2
 28058 be5e 00C0      		rjmp .L1232
2499:lp_solve_5.5/lp_presolve.c ****     goto Finish;
2500:lp_solve_5.5/lp_presolve.c **** 
2501:lp_solve_5.5/lp_presolve.c ****   /* Process the identified rows, eliminating the OF value */
2502:lp_solve_5.5/lp_presolve.c ****   for(ix = 1; ix <= n; ix++) {
 28059               		.loc 2 2502 0
 28060 be60 81E0      		ldi r24,lo8(1)
 28061 be62 90E0      		ldi r25,0
 28062 be64 9E83      		std Y+6,r25
 28063 be66 8D83      		std Y+5,r24
 28064 be68 00C0      		rjmp .L1216
 28065               	.L1219:
2503:lp_solve_5.5/lp_presolve.c ****     i = rownr[ix];
 28066               		.loc 2 2503 0
 28067 be6a 2D8D      		ldd r18,Y+29
 28068 be6c 3E8D      		ldd r19,Y+30
 28069 be6e 8D81      		ldd r24,Y+5
 28070 be70 9E81      		ldd r25,Y+6
 28071 be72 880F      		lsl r24
 28072 be74 991F      		rol r25
 28073 be76 820F      		add r24,r18
 28074 be78 931F      		adc r25,r19
 28075 be7a FC01      		movw r30,r24
 28076 be7c 8081      		ld r24,Z
 28077 be7e 9181      		ldd r25,Z+1
 28078 be80 9C83      		std Y+4,r25
 28079 be82 8B83      		std Y+3,r24
2504:lp_solve_5.5/lp_presolve.c ****     jx = mat->row_end[i];
 28080               		.loc 2 2504 0
 28081 be84 8989      		ldd r24,Y+17
 28082 be86 9A89      		ldd r25,Y+18
 28083 be88 FC01      		movw r30,r24
 28084 be8a 208D      		ldd r18,Z+24
 28085 be8c 318D      		ldd r19,Z+25
 28086 be8e 8B81      		ldd r24,Y+3
 28087 be90 9C81      		ldd r25,Y+4
 28088 be92 880F      		lsl r24
 28089 be94 991F      		rol r25
 28090 be96 820F      		add r24,r18
 28091 be98 931F      		adc r25,r19
 28092 be9a FC01      		movw r30,r24
 28093 be9c 8081      		ld r24,Z
 28094 be9e 9181      		ldd r25,Z+1
 28095 bea0 9E8B      		std Y+22,r25
 28096 bea2 8D8B      		std Y+21,r24
2505:lp_solve_5.5/lp_presolve.c ****     for(j = mat->row_end[i-1]; j  < jx; j++) {
 28097               		.loc 2 2505 0
 28098 bea4 8989      		ldd r24,Y+17
 28099 bea6 9A89      		ldd r25,Y+18
 28100 bea8 FC01      		movw r30,r24
 28101 beaa 208D      		ldd r18,Z+24
 28102 beac 318D      		ldd r19,Z+25
 28103 beae 8B81      		ldd r24,Y+3
 28104 beb0 9C81      		ldd r25,Y+4
 28105 beb2 8150      		subi r24,1
 28106 beb4 9048      		sbci r25,-128
 28107 beb6 880F      		lsl r24
 28108 beb8 991F      		rol r25
 28109 beba 820F      		add r24,r18
 28110 bebc 931F      		adc r25,r19
 28111 bebe FC01      		movw r30,r24
 28112 bec0 8081      		ld r24,Z
 28113 bec2 9181      		ldd r25,Z+1
 28114 bec4 9887      		std Y+8,r25
 28115 bec6 8F83      		std Y+7,r24
 28116 bec8 00C0      		rjmp .L1217
 28117               	.L1218:
2506:lp_solve_5.5/lp_presolve.c ****       colnr = ROW_MAT_COLNR(j);
 28118               		.loc 2 2506 0 discriminator 3
 28119 beca 8989      		ldd r24,Y+17
 28120 becc 9A89      		ldd r25,Y+18
 28121 bece FC01      		movw r30,r24
 28122 bed0 2485      		ldd r18,Z+12
 28123 bed2 3585      		ldd r19,Z+13
 28124 bed4 8989      		ldd r24,Y+17
 28125 bed6 9A89      		ldd r25,Y+18
 28126 bed8 FC01      		movw r30,r24
 28127 beda 4689      		ldd r20,Z+22
 28128 bedc 5789      		ldd r21,Z+23
 28129 bede 8F81      		ldd r24,Y+7
 28130 bee0 9885      		ldd r25,Y+8
 28131 bee2 880F      		lsl r24
 28132 bee4 991F      		rol r25
 28133 bee6 840F      		add r24,r20
 28134 bee8 951F      		adc r25,r21
 28135 beea FC01      		movw r30,r24
 28136 beec 8081      		ld r24,Z
 28137 beee 9181      		ldd r25,Z+1
 28138 bef0 880F      		lsl r24
 28139 bef2 991F      		rol r25
 28140 bef4 820F      		add r24,r18
 28141 bef6 931F      		adc r25,r19
 28142 bef8 FC01      		movw r30,r24
 28143 befa 8081      		ld r24,Z
 28144 befc 9181      		ldd r25,Z+1
 28145 befe 988F      		std Y+24,r25
 28146 bf00 8F8B      		std Y+23,r24
2507:lp_solve_5.5/lp_presolve.c ****       colOF[colnr] = 0;
 28147               		.loc 2 2507 0 discriminator 3
 28148 bf02 8F89      		ldd r24,Y+23
 28149 bf04 988D      		ldd r25,Y+24
 28150 bf06 880F      		lsl r24
 28151 bf08 991F      		rol r25
 28152 bf0a 880F      		lsl r24
 28153 bf0c 991F      		rol r25
 28154 bf0e 2D85      		ldd r18,Y+13
 28155 bf10 3E85      		ldd r19,Y+14
 28156 bf12 820F      		add r24,r18
 28157 bf14 931F      		adc r25,r19
 28158 bf16 FC01      		movw r30,r24
 28159 bf18 1082      		st Z,__zero_reg__
 28160 bf1a 1182      		std Z+1,__zero_reg__
 28161 bf1c 1282      		std Z+2,__zero_reg__
 28162 bf1e 1382      		std Z+3,__zero_reg__
2505:lp_solve_5.5/lp_presolve.c ****     for(j = mat->row_end[i-1]; j  < jx; j++) {
 28163               		.loc 2 2505 0 discriminator 3
 28164 bf20 8F81      		ldd r24,Y+7
 28165 bf22 9885      		ldd r25,Y+8
 28166 bf24 0196      		adiw r24,1
 28167 bf26 9887      		std Y+8,r25
 28168 bf28 8F83      		std Y+7,r24
 28169               	.L1217:
2505:lp_solve_5.5/lp_presolve.c ****     for(j = mat->row_end[i-1]; j  < jx; j++) {
 28170               		.loc 2 2505 0 is_stmt 0 discriminator 1
 28171 bf2a 2F81      		ldd r18,Y+7
 28172 bf2c 3885      		ldd r19,Y+8
 28173 bf2e 8D89      		ldd r24,Y+21
 28174 bf30 9E89      		ldd r25,Y+22
 28175 bf32 2817      		cp r18,r24
 28176 bf34 3907      		cpc r19,r25
 28177 bf36 04F0      		brlt .L1218
2502:lp_solve_5.5/lp_presolve.c ****     i = rownr[ix];
 28178               		.loc 2 2502 0 is_stmt 1 discriminator 2
 28179 bf38 8D81      		ldd r24,Y+5
 28180 bf3a 9E81      		ldd r25,Y+6
 28181 bf3c 0196      		adiw r24,1
 28182 bf3e 9E83      		std Y+6,r25
 28183 bf40 8D83      		std Y+5,r24
 28184               	.L1216:
2502:lp_solve_5.5/lp_presolve.c ****     i = rownr[ix];
 28185               		.loc 2 2502 0 is_stmt 0 discriminator 1
 28186 bf42 2D81      		ldd r18,Y+5
 28187 bf44 3E81      		ldd r19,Y+6
 28188 bf46 8981      		ldd r24,Y+1
 28189 bf48 9A81      		ldd r25,Y+2
 28190 bf4a 8217      		cp r24,r18
 28191 bf4c 9307      		cpc r25,r19
 28192 bf4e 04F0      		brlt .+2
 28193 bf50 00C0      		rjmp .L1219
2508:lp_solve_5.5/lp_presolve.c ****     }
2509:lp_solve_5.5/lp_presolve.c ****   }
2510:lp_solve_5.5/lp_presolve.c **** 
2511:lp_solve_5.5/lp_presolve.c ****   /* Update key mapper structures */
2512:lp_solve_5.5/lp_presolve.c ****   j = lp->columns;
 28194               		.loc 2 2512 0 is_stmt 1
 28195 bf52 8985      		ldd r24,Y+9
 28196 bf54 9A85      		ldd r25,Y+10
 28197 bf56 8451      		subi r24,20
 28198 bf58 9E4F      		sbci r25,-2
 28199 bf5a FC01      		movw r30,r24
 28200 bf5c 8081      		ld r24,Z
 28201 bf5e 9181      		ldd r25,Z+1
 28202 bf60 9887      		std Y+8,r25
 28203 bf62 8F83      		std Y+7,r24
2513:lp_solve_5.5/lp_presolve.c ****   psdata->cols->varmap = cloneLink(psdata->cols->varmap, j+n, TRUE);
 28204               		.loc 2 2513 0
 28205 bf64 89A1      		ldd r24,Y+33
 28206 bf66 9AA1      		ldd r25,Y+34
 28207 bf68 FC01      		movw r30,r24
 28208 bf6a 0281      		ldd r16,Z+2
 28209 bf6c 1381      		ldd r17,Z+3
 28210 bf6e 2F81      		ldd r18,Y+7
 28211 bf70 3885      		ldd r19,Y+8
 28212 bf72 8981      		ldd r24,Y+1
 28213 bf74 9A81      		ldd r25,Y+2
 28214 bf76 280F      		add r18,r24
 28215 bf78 391F      		adc r19,r25
 28216 bf7a 89A1      		ldd r24,Y+33
 28217 bf7c 9AA1      		ldd r25,Y+34
 28218 bf7e FC01      		movw r30,r24
 28219 bf80 8281      		ldd r24,Z+2
 28220 bf82 9381      		ldd r25,Z+3
 28221 bf84 FC01      		movw r30,r24
 28222 bf86 8081      		ld r24,Z
 28223 bf88 9181      		ldd r25,Z+1
 28224 bf8a 41E0      		ldi r20,lo8(1)
 28225 bf8c B901      		movw r22,r18
 28226 bf8e 0E94 0000 		call cloneLink
 28227 bf92 F801      		movw r30,r16
 28228 bf94 9183      		std Z+1,r25
 28229 bf96 8083      		st Z,r24
2514:lp_solve_5.5/lp_presolve.c ****   psdata->forceupdate = TRUE;
 28230               		.loc 2 2514 0
 28231 bf98 89A1      		ldd r24,Y+33
 28232 bf9a 9AA1      		ldd r25,Y+34
 28233 bf9c 21E0      		ldi r18,lo8(1)
 28234 bf9e FC01      		movw r30,r24
 28235 bfa0 24A3      		std Z+36,r18
2515:lp_solve_5.5/lp_presolve.c **** 
2516:lp_solve_5.5/lp_presolve.c ****   /* Finally, add helper columns */
2517:lp_solve_5.5/lp_presolve.c ****   for(ix = 1; ix <= n; ix++) {
 28236               		.loc 2 2517 0
 28237 bfa2 81E0      		ldi r24,lo8(1)
 28238 bfa4 90E0      		ldi r25,0
 28239 bfa6 9E83      		std Y+6,r25
 28240 bfa8 8D83      		std Y+5,r24
 28241 bfaa 00C0      		rjmp .L1220
 28242               	.L1224:
2518:lp_solve_5.5/lp_presolve.c ****     i = rownr[ix];
 28243               		.loc 2 2518 0
 28244 bfac 2D8D      		ldd r18,Y+29
 28245 bfae 3E8D      		ldd r19,Y+30
 28246 bfb0 8D81      		ldd r24,Y+5
 28247 bfb2 9E81      		ldd r25,Y+6
 28248 bfb4 880F      		lsl r24
 28249 bfb6 991F      		rol r25
 28250 bfb8 820F      		add r24,r18
 28251 bfba 931F      		adc r25,r19
 28252 bfbc FC01      		movw r30,r24
 28253 bfbe 8081      		ld r24,Z
 28254 bfc0 9181      		ldd r25,Z+1
 28255 bfc2 9C83      		std Y+4,r25
 28256 bfc4 8B83      		std Y+3,r24
2519:lp_solve_5.5/lp_presolve.c ****     rownr[0] = 0;
 28257               		.loc 2 2519 0
 28258 bfc6 8D8D      		ldd r24,Y+29
 28259 bfc8 9E8D      		ldd r25,Y+30
 28260 bfca FC01      		movw r30,r24
 28261 bfcc 1182      		std Z+1,__zero_reg__
 28262 bfce 1082      		st Z,__zero_reg__
2520:lp_solve_5.5/lp_presolve.c ****     colOF[0] = my_chsign(is_maxim(lp), ratio[ix]);
 28263               		.loc 2 2520 0
 28264 bfd0 8985      		ldd r24,Y+9
 28265 bfd2 9A85      		ldd r25,Y+10
 28266 bfd4 0E94 0000 		call is_maxim
 28267 bfd8 8823      		tst r24
 28268 bfda 01F0      		breq .L1221
 28269               		.loc 2 2520 0 is_stmt 0 discriminator 1
 28270 bfdc 2F8D      		ldd r18,Y+31
 28271 bfde 38A1      		ldd r19,Y+32
 28272 bfe0 8D81      		ldd r24,Y+5
 28273 bfe2 9E81      		ldd r25,Y+6
 28274 bfe4 880F      		lsl r24
 28275 bfe6 991F      		rol r25
 28276 bfe8 880F      		lsl r24
 28277 bfea 991F      		rol r25
 28278 bfec 820F      		add r24,r18
 28279 bfee 931F      		adc r25,r19
 28280 bff0 FC01      		movw r30,r24
 28281 bff2 8081      		ld r24,Z
 28282 bff4 9181      		ldd r25,Z+1
 28283 bff6 A281      		ldd r26,Z+2
 28284 bff8 B381      		ldd r27,Z+3
 28285 bffa 20E0      		ldi r18,0
 28286 bffc 30E0      		ldi r19,0
 28287 bffe A901      		movw r20,r18
 28288 c000 BC01      		movw r22,r24
 28289 c002 CD01      		movw r24,r26
 28290 c004 0E94 0000 		call __nesf2
 28291 c008 8823      		tst r24
 28292 c00a 01F0      		breq .L1221
 28293               		.loc 2 2520 0 discriminator 3
 28294 c00c 2F8D      		ldd r18,Y+31
 28295 c00e 38A1      		ldd r19,Y+32
 28296 c010 8D81      		ldd r24,Y+5
 28297 c012 9E81      		ldd r25,Y+6
 28298 c014 880F      		lsl r24
 28299 c016 991F      		rol r25
 28300 c018 880F      		lsl r24
 28301 c01a 991F      		rol r25
 28302 c01c 820F      		add r24,r18
 28303 c01e 931F      		adc r25,r19
 28304 c020 FC01      		movw r30,r24
 28305 c022 8081      		ld r24,Z
 28306 c024 9181      		ldd r25,Z+1
 28307 c026 A281      		ldd r26,Z+2
 28308 c028 B381      		ldd r27,Z+3
 28309 c02a B058      		subi r27,0x80
 28310 c02c 00C0      		rjmp .L1223
 28311               	.L1221:
 28312               		.loc 2 2520 0 discriminator 4
 28313 c02e 2F8D      		ldd r18,Y+31
 28314 c030 38A1      		ldd r19,Y+32
 28315 c032 8D81      		ldd r24,Y+5
 28316 c034 9E81      		ldd r25,Y+6
 28317 c036 880F      		lsl r24
 28318 c038 991F      		rol r25
 28319 c03a 880F      		lsl r24
 28320 c03c 991F      		rol r25
 28321 c03e 820F      		add r24,r18
 28322 c040 931F      		adc r25,r19
 28323 c042 FC01      		movw r30,r24
 28324 c044 8081      		ld r24,Z
 28325 c046 9181      		ldd r25,Z+1
 28326 c048 A281      		ldd r26,Z+2
 28327 c04a B381      		ldd r27,Z+3
 28328               	.L1223:
 28329               		.loc 2 2520 0 discriminator 6
 28330 c04c 2D85      		ldd r18,Y+13
 28331 c04e 3E85      		ldd r19,Y+14
 28332 c050 F901      		movw r30,r18
 28333 c052 8083      		st Z,r24
 28334 c054 9183      		std Z+1,r25
 28335 c056 A283      		std Z+2,r26
 28336 c058 B383      		std Z+3,r27
2521:lp_solve_5.5/lp_presolve.c ****     rownr[1] = i;
 28337               		.loc 2 2521 0 is_stmt 1 discriminator 6
 28338 c05a 8D8D      		ldd r24,Y+29
 28339 c05c 9E8D      		ldd r25,Y+30
 28340 c05e 0296      		adiw r24,2
 28341 c060 2B81      		ldd r18,Y+3
 28342 c062 3C81      		ldd r19,Y+4
 28343 c064 FC01      		movw r30,r24
 28344 c066 3183      		std Z+1,r19
 28345 c068 2083      		st Z,r18
2522:lp_solve_5.5/lp_presolve.c ****     colOF[1] = -1;
 28346               		.loc 2 2522 0 discriminator 6
 28347 c06a 8D85      		ldd r24,Y+13
 28348 c06c 9E85      		ldd r25,Y+14
 28349 c06e 9C01      		movw r18,r24
 28350 c070 2C5F      		subi r18,-4
 28351 c072 3F4F      		sbci r19,-1
 28352 c074 80E0      		ldi r24,0
 28353 c076 90E0      		ldi r25,0
 28354 c078 A0E8      		ldi r26,lo8(-128)
 28355 c07a BFEB      		ldi r27,lo8(-65)
 28356 c07c F901      		movw r30,r18
 28357 c07e 8083      		st Z,r24
 28358 c080 9183      		std Z+1,r25
 28359 c082 A283      		std Z+2,r26
 28360 c084 B383      		std Z+3,r27
2523:lp_solve_5.5/lp_presolve.c ****     value = get_rh(lp, i);
 28361               		.loc 2 2523 0 discriminator 6
 28362 c086 2B81      		ldd r18,Y+3
 28363 c088 3C81      		ldd r19,Y+4
 28364 c08a 8985      		ldd r24,Y+9
 28365 c08c 9A85      		ldd r25,Y+10
 28366 c08e B901      		movw r22,r18
 28367 c090 0E94 0000 		call get_rh
 28368 c094 DC01      		movw r26,r24
 28369 c096 CB01      		movw r24,r22
 28370 c098 898F      		std Y+25,r24
 28371 c09a 9A8F      		std Y+26,r25
 28372 c09c AB8F      		std Y+27,r26
 28373 c09e BC8F      		std Y+28,r27
2524:lp_solve_5.5/lp_presolve.c **** /*    j = get_constr_type(lp, i); */
2525:lp_solve_5.5/lp_presolve.c ****     add_columnex(lp, 2, colOF, rownr);
 28374               		.loc 2 2525 0 discriminator 6
 28375 c0a0 2D8D      		ldd r18,Y+29
 28376 c0a2 3E8D      		ldd r19,Y+30
 28377 c0a4 4D85      		ldd r20,Y+13
 28378 c0a6 5E85      		ldd r21,Y+14
 28379 c0a8 8985      		ldd r24,Y+9
 28380 c0aa 9A85      		ldd r25,Y+10
 28381 c0ac 62E0      		ldi r22,lo8(2)
 28382 c0ae 70E0      		ldi r23,0
 28383 c0b0 0E94 0000 		call add_columnex
2526:lp_solve_5.5/lp_presolve.c ****     set_bounds(lp, lp->columns, value, value);
 28384               		.loc 2 2526 0 discriminator 6
 28385 c0b4 8985      		ldd r24,Y+9
 28386 c0b6 9A85      		ldd r25,Y+10
 28387 c0b8 8451      		subi r24,20
 28388 c0ba 9E4F      		sbci r25,-2
 28389 c0bc FC01      		movw r30,r24
 28390 c0be 6081      		ld r22,Z
 28391 c0c0 7181      		ldd r23,Z+1
 28392 c0c2 298D      		ldd r18,Y+25
 28393 c0c4 3A8D      		ldd r19,Y+26
 28394 c0c6 4B8D      		ldd r20,Y+27
 28395 c0c8 5C8D      		ldd r21,Y+28
 28396 c0ca 898D      		ldd r24,Y+25
 28397 c0cc 9A8D      		ldd r25,Y+26
 28398 c0ce AB8D      		ldd r26,Y+27
 28399 c0d0 BC8D      		ldd r27,Y+28
 28400 c0d2 E985      		ldd r30,Y+9
 28401 c0d4 FA85      		ldd r31,Y+10
 28402 c0d6 7901      		movw r14,r18
 28403 c0d8 8A01      		movw r16,r20
 28404 c0da 9C01      		movw r18,r24
 28405 c0dc AD01      		movw r20,r26
 28406 c0de CF01      		movw r24,r30
 28407 c0e0 0E94 0000 		call set_bounds
2527:lp_solve_5.5/lp_presolve.c **** /*    presolve_setEQ(psdata, i); */
2528:lp_solve_5.5/lp_presolve.c ****     set_rh(lp, i, 0);
 28408               		.loc 2 2528 0 discriminator 6
 28409 c0e4 6B81      		ldd r22,Y+3
 28410 c0e6 7C81      		ldd r23,Y+4
 28411 c0e8 8985      		ldd r24,Y+9
 28412 c0ea 9A85      		ldd r25,Y+10
 28413 c0ec 20E0      		ldi r18,0
 28414 c0ee 30E0      		ldi r19,0
 28415 c0f0 A901      		movw r20,r18
 28416 c0f2 0E94 0000 		call set_rh
2529:lp_solve_5.5/lp_presolve.c ****     appendLink(psdata->cols->varmap, j+ix);
 28417               		.loc 2 2529 0 discriminator 6
 28418 c0f6 2F81      		ldd r18,Y+7
 28419 c0f8 3885      		ldd r19,Y+8
 28420 c0fa 8D81      		ldd r24,Y+5
 28421 c0fc 9E81      		ldd r25,Y+6
 28422 c0fe 280F      		add r18,r24
 28423 c100 391F      		adc r19,r25
 28424 c102 89A1      		ldd r24,Y+33
 28425 c104 9AA1      		ldd r25,Y+34
 28426 c106 FC01      		movw r30,r24
 28427 c108 8281      		ldd r24,Z+2
 28428 c10a 9381      		ldd r25,Z+3
 28429 c10c FC01      		movw r30,r24
 28430 c10e 8081      		ld r24,Z
 28431 c110 9181      		ldd r25,Z+1
 28432 c112 B901      		movw r22,r18
 28433 c114 0E94 0000 		call appendLink
2517:lp_solve_5.5/lp_presolve.c ****     i = rownr[ix];
 28434               		.loc 2 2517 0 discriminator 6
 28435 c118 8D81      		ldd r24,Y+5
 28436 c11a 9E81      		ldd r25,Y+6
 28437 c11c 0196      		adiw r24,1
 28438 c11e 9E83      		std Y+6,r25
 28439 c120 8D83      		std Y+5,r24
 28440               	.L1220:
2517:lp_solve_5.5/lp_presolve.c ****     i = rownr[ix];
 28441               		.loc 2 2517 0 is_stmt 0 discriminator 2
 28442 c122 2D81      		ldd r18,Y+5
 28443 c124 3E81      		ldd r19,Y+6
 28444 c126 8981      		ldd r24,Y+1
 28445 c128 9A81      		ldd r25,Y+2
 28446 c12a 8217      		cp r24,r18
 28447 c12c 9307      		cpc r25,r19
 28448 c12e 04F0      		brlt .+2
 28449 c130 00C0      		rjmp .L1224
2530:lp_solve_5.5/lp_presolve.c ****   }
2531:lp_solve_5.5/lp_presolve.c ****   presolve_validate(psdata, TRUE);
 28450               		.loc 2 2531 0 is_stmt 1
 28451 c132 89A1      		ldd r24,Y+33
 28452 c134 9AA1      		ldd r25,Y+34
 28453 c136 61E0      		ldi r22,lo8(1)
 28454 c138 0E94 0000 		call presolve_validate
 28455 c13c 00C0      		rjmp .L1215
 28456               	.L1232:
2499:lp_solve_5.5/lp_presolve.c **** 
 28457               		.loc 2 2499 0
 28458 c13e 0000      		nop
 28459               	.L1215:
2532:lp_solve_5.5/lp_presolve.c **** 
2533:lp_solve_5.5/lp_presolve.c ****   /* Clean up before returning */
2534:lp_solve_5.5/lp_presolve.c **** Finish:
2535:lp_solve_5.5/lp_presolve.c ****   FREE(rownr);
 28460               		.loc 2 2535 0
 28461 c140 8D8D      		ldd r24,Y+29
 28462 c142 9E8D      		ldd r25,Y+30
 28463 c144 892B      		or r24,r25
 28464 c146 01F0      		breq .L1225
 28465               		.loc 2 2535 0 is_stmt 0 discriminator 1
 28466 c148 8D8D      		ldd r24,Y+29
 28467 c14a 9E8D      		ldd r25,Y+30
 28468 c14c 0E94 0000 		call free
 28469 c150 1E8E      		std Y+30,__zero_reg__
 28470 c152 1D8E      		std Y+29,__zero_reg__
 28471               	.L1225:
2536:lp_solve_5.5/lp_presolve.c ****   FREE(ratio);
 28472               		.loc 2 2536 0 is_stmt 1
 28473 c154 8F8D      		ldd r24,Y+31
 28474 c156 98A1      		ldd r25,Y+32
 28475 c158 892B      		or r24,r25
 28476 c15a 01F0      		breq .L1226
 28477               		.loc 2 2536 0 is_stmt 0 discriminator 1
 28478 c15c 8F8D      		ldd r24,Y+31
 28479 c15e 98A1      		ldd r25,Y+32
 28480 c160 0E94 0000 		call free
 28481 c164 18A2      		std Y+32,__zero_reg__
 28482 c166 1F8E      		std Y+31,__zero_reg__
 28483               	.L1226:
2537:lp_solve_5.5/lp_presolve.c ****   (*nn) += n;
 28484               		.loc 2 2537 0 is_stmt 1
 28485 c168 8BA1      		ldd r24,Y+35
 28486 c16a 9CA1      		ldd r25,Y+36
 28487 c16c FC01      		movw r30,r24
 28488 c16e 2081      		ld r18,Z
 28489 c170 3181      		ldd r19,Z+1
 28490 c172 8981      		ldd r24,Y+1
 28491 c174 9A81      		ldd r25,Y+2
 28492 c176 280F      		add r18,r24
 28493 c178 391F      		adc r19,r25
 28494 c17a 8BA1      		ldd r24,Y+35
 28495 c17c 9CA1      		ldd r25,Y+36
 28496 c17e FC01      		movw r30,r24
 28497 c180 3183      		std Z+1,r19
 28498 c182 2083      		st Z,r18
2538:lp_solve_5.5/lp_presolve.c **** 
2539:lp_solve_5.5/lp_presolve.c ****   return( status );
 28499               		.loc 2 2539 0
 28500 c184 8B85      		ldd r24,Y+11
 28501 c186 9C85      		ldd r25,Y+12
 28502               	.L1227:
 28503               	/* epilogue start */
2540:lp_solve_5.5/lp_presolve.c **** }
 28504               		.loc 2 2540 0 discriminator 1
 28505 c188 A496      		adiw r28,36
 28506 c18a 0FB6      		in __tmp_reg__,__SREG__
 28507 c18c F894      		cli
 28508 c18e DEBF      		out __SP_H__,r29
 28509 c190 0FBE      		out __SREG__,__tmp_reg__
 28510 c192 CDBF      		out __SP_L__,r28
 28511 c194 DF91      		pop r29
 28512 c196 CF91      		pop r28
 28513 c198 1F91      		pop r17
 28514 c19a 0F91      		pop r16
 28515 c19c FF90      		pop r15
 28516 c19e EF90      		pop r14
 28517 c1a0 0895      		ret
 28518               		.cfi_endproc
 28519               	.LFE65:
 28521               	.global	presolve_invalideq2
 28523               	presolve_invalideq2:
 28524               	.LFB66:
2541:lp_solve_5.5/lp_presolve.c **** 
2542:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_invalideq2(lprec *lp, presolverec *psdata)
2543:lp_solve_5.5/lp_presolve.c **** {
 28525               		.loc 2 2543 0
 28526               		.cfi_startproc
 28527 c1a2 CF93      		push r28
 28528               	.LCFI390:
 28529               		.cfi_def_cfa_offset 3
 28530               		.cfi_offset 28, -2
 28531 c1a4 DF93      		push r29
 28532               	.LCFI391:
 28533               		.cfi_def_cfa_offset 4
 28534               		.cfi_offset 29, -3
 28535 c1a6 CDB7      		in r28,__SP_L__
 28536 c1a8 DEB7      		in r29,__SP_H__
 28537               	.LCFI392:
 28538               		.cfi_def_cfa_register 28
 28539 c1aa 2F97      		sbiw r28,15
 28540               	.LCFI393:
 28541               		.cfi_def_cfa_offset 19
 28542 c1ac 0FB6      		in __tmp_reg__,__SREG__
 28543 c1ae F894      		cli
 28544 c1b0 DEBF      		out __SP_H__,r29
 28545 c1b2 0FBE      		out __SREG__,__tmp_reg__
 28546 c1b4 CDBF      		out __SP_L__,r28
 28547               	/* prologue: function */
 28548               	/* frame size = 15 */
 28549               	/* stack size = 17 */
 28550               	.L__stack_usage = 17
 28551 c1b6 9D87      		std Y+13,r25
 28552 c1b8 8C87      		std Y+12,r24
 28553 c1ba 7F87      		std Y+15,r23
 28554 c1bc 6E87      		std Y+14,r22
2544:lp_solve_5.5/lp_presolve.c ****   int    jx, jjx, i = 0, item;
 28555               		.loc 2 2544 0
 28556 c1be 1A82      		std Y+2,__zero_reg__
 28557 c1c0 1982      		std Y+1,__zero_reg__
2545:lp_solve_5.5/lp_presolve.c ****   MATrec *mat = lp->matA;
 28558               		.loc 2 2545 0
 28559 c1c2 8C85      		ldd r24,Y+12
 28560 c1c4 9D85      		ldd r25,Y+13
 28561 c1c6 8A54      		subi r24,74
 28562 c1c8 9D4F      		sbci r25,-3
 28563 c1ca FC01      		movw r30,r24
 28564 c1cc 8081      		ld r24,Z
 28565 c1ce 9181      		ldd r25,Z+1
 28566 c1d0 9D83      		std Y+5,r25
 28567 c1d2 8C83      		std Y+4,r24
2546:lp_solve_5.5/lp_presolve.c ****   MYBOOL error = FALSE;
 28568               		.loc 2 2546 0
 28569 c1d4 1B82      		std Y+3,__zero_reg__
 28570               	.L1245:
2547:lp_solve_5.5/lp_presolve.c **** 
2548:lp_solve_5.5/lp_presolve.c ****   do {
2549:lp_solve_5.5/lp_presolve.c **** 
2550:lp_solve_5.5/lp_presolve.c ****     if(i == 0)
 28571               		.loc 2 2550 0
 28572 c1d6 8981      		ldd r24,Y+1
 28573 c1d8 9A81      		ldd r25,Y+2
 28574 c1da 892B      		or r24,r25
 28575 c1dc 01F4      		brne .L1234
2551:lp_solve_5.5/lp_presolve.c ****       i = firstActiveLink(psdata->EQmap);
 28576               		.loc 2 2551 0
 28577 c1de 8E85      		ldd r24,Y+14
 28578 c1e0 9F85      		ldd r25,Y+15
 28579 c1e2 FC01      		movw r30,r24
 28580 c1e4 8481      		ldd r24,Z+4
 28581 c1e6 9581      		ldd r25,Z+5
 28582 c1e8 0E94 0000 		call firstActiveLink
 28583 c1ec 9A83      		std Y+2,r25
 28584 c1ee 8983      		std Y+1,r24
 28585 c1f0 00C0      		rjmp .L1235
 28586               	.L1234:
2552:lp_solve_5.5/lp_presolve.c ****     else
2553:lp_solve_5.5/lp_presolve.c ****       i = nextActiveLink(psdata->EQmap, i);
 28587               		.loc 2 2553 0
 28588 c1f2 8E85      		ldd r24,Y+14
 28589 c1f4 9F85      		ldd r25,Y+15
 28590 c1f6 FC01      		movw r30,r24
 28591 c1f8 8481      		ldd r24,Z+4
 28592 c1fa 9581      		ldd r25,Z+5
 28593 c1fc 2981      		ldd r18,Y+1
 28594 c1fe 3A81      		ldd r19,Y+2
 28595 c200 B901      		movw r22,r18
 28596 c202 0E94 0000 		call nextActiveLink
 28597 c206 9A83      		std Y+2,r25
 28598 c208 8983      		std Y+1,r24
 28599               	.L1235:
2554:lp_solve_5.5/lp_presolve.c ****     if(i == 0)
 28600               		.loc 2 2554 0
 28601 c20a 8981      		ldd r24,Y+1
 28602 c20c 9A81      		ldd r25,Y+2
 28603 c20e 892B      		or r24,r25
 28604 c210 01F4      		brne .L1238
2555:lp_solve_5.5/lp_presolve.c ****       return( error );
 28605               		.loc 2 2555 0
 28606 c212 8B81      		ldd r24,Y+3
 28607 c214 00C0      		rjmp .L1246
 28608               	.L1241:
2556:lp_solve_5.5/lp_presolve.c **** 
2557:lp_solve_5.5/lp_presolve.c ****     /* Get the row index of the first 2-element equality */
2558:lp_solve_5.5/lp_presolve.c ****     for(; i > 0; i = nextActiveLink(psdata->EQmap, i))
2559:lp_solve_5.5/lp_presolve.c ****       if(presolve_rowlength(psdata, i) == 2)
 28609               		.loc 2 2559 0
 28610 c216 2981      		ldd r18,Y+1
 28611 c218 3A81      		ldd r19,Y+2
 28612 c21a 8E85      		ldd r24,Y+14
 28613 c21c 9F85      		ldd r25,Y+15
 28614 c21e B901      		movw r22,r18
 28615 c220 0E94 0000 		call presolve_rowlength
 28616 c224 0297      		sbiw r24,2
 28617 c226 01F0      		breq .L1247
2558:lp_solve_5.5/lp_presolve.c ****       if(presolve_rowlength(psdata, i) == 2)
 28618               		.loc 2 2558 0
 28619 c228 8E85      		ldd r24,Y+14
 28620 c22a 9F85      		ldd r25,Y+15
 28621 c22c FC01      		movw r30,r24
 28622 c22e 8481      		ldd r24,Z+4
 28623 c230 9581      		ldd r25,Z+5
 28624 c232 2981      		ldd r18,Y+1
 28625 c234 3A81      		ldd r19,Y+2
 28626 c236 B901      		movw r22,r18
 28627 c238 0E94 0000 		call nextActiveLink
 28628 c23c 9A83      		std Y+2,r25
 28629 c23e 8983      		std Y+1,r24
 28630               	.L1238:
2558:lp_solve_5.5/lp_presolve.c ****       if(presolve_rowlength(psdata, i) == 2)
 28631               		.loc 2 2558 0 is_stmt 0 discriminator 1
 28632 c240 8981      		ldd r24,Y+1
 28633 c242 9A81      		ldd r25,Y+2
 28634 c244 1816      		cp __zero_reg__,r24
 28635 c246 1906      		cpc __zero_reg__,r25
 28636 c248 04F0      		brlt .L1241
 28637 c24a 00C0      		rjmp .L1240
 28638               	.L1247:
2560:lp_solve_5.5/lp_presolve.c ****         break;
 28639               		.loc 2 2560 0 is_stmt 1
 28640 c24c 0000      		nop
 28641               	.L1240:
2561:lp_solve_5.5/lp_presolve.c ****     if(i == 0)
 28642               		.loc 2 2561 0
 28643 c24e 8981      		ldd r24,Y+1
 28644 c250 9A81      		ldd r25,Y+2
 28645 c252 892B      		or r24,r25
 28646 c254 01F4      		brne .L1242
2562:lp_solve_5.5/lp_presolve.c ****       return( error );
 28647               		.loc 2 2562 0
 28648 c256 8B81      		ldd r24,Y+3
 28649 c258 00C0      		rjmp .L1246
 28650               	.L1242:
2563:lp_solve_5.5/lp_presolve.c **** 
2564:lp_solve_5.5/lp_presolve.c ****     /* Get the first column */
2565:lp_solve_5.5/lp_presolve.c ****     item = 0;
 28651               		.loc 2 2565 0
 28652 c25a 1B86      		std Y+11,__zero_reg__
 28653 c25c 1A86      		std Y+10,__zero_reg__
2566:lp_solve_5.5/lp_presolve.c ****     jx  = presolve_nextcol(psdata, i, &item);
 28654               		.loc 2 2566 0
 28655 c25e AE01      		movw r20,r28
 28656 c260 465F      		subi r20,-10
 28657 c262 5F4F      		sbci r21,-1
 28658 c264 2981      		ldd r18,Y+1
 28659 c266 3A81      		ldd r19,Y+2
 28660 c268 8E85      		ldd r24,Y+14
 28661 c26a 9F85      		ldd r25,Y+15
 28662 c26c B901      		movw r22,r18
 28663 c26e 0E94 0000 		call presolve_nextcol
 28664 c272 9F83      		std Y+7,r25
 28665 c274 8E83      		std Y+6,r24
2567:lp_solve_5.5/lp_presolve.c ****     if(jx < 0)
 28666               		.loc 2 2567 0
 28667 c276 8E81      		ldd r24,Y+6
 28668 c278 9F81      		ldd r25,Y+7
 28669 c27a 9923      		tst r25
 28670 c27c 04F4      		brge .L1243
2568:lp_solve_5.5/lp_presolve.c ****       error = TRUE;
 28671               		.loc 2 2568 0
 28672 c27e 81E0      		ldi r24,lo8(1)
 28673 c280 8B83      		std Y+3,r24
 28674               	.L1243:
2569:lp_solve_5.5/lp_presolve.c ****     jx  = ROW_MAT_COLNR(jx);
 28675               		.loc 2 2569 0
 28676 c282 8C81      		ldd r24,Y+4
 28677 c284 9D81      		ldd r25,Y+5
 28678 c286 FC01      		movw r30,r24
 28679 c288 2485      		ldd r18,Z+12
 28680 c28a 3585      		ldd r19,Z+13
 28681 c28c 8C81      		ldd r24,Y+4
 28682 c28e 9D81      		ldd r25,Y+5
 28683 c290 FC01      		movw r30,r24
 28684 c292 4689      		ldd r20,Z+22
 28685 c294 5789      		ldd r21,Z+23
 28686 c296 8E81      		ldd r24,Y+6
 28687 c298 9F81      		ldd r25,Y+7
 28688 c29a 880F      		lsl r24
 28689 c29c 991F      		rol r25
 28690 c29e 840F      		add r24,r20
 28691 c2a0 951F      		adc r25,r21
 28692 c2a2 FC01      		movw r30,r24
 28693 c2a4 8081      		ld r24,Z
 28694 c2a6 9181      		ldd r25,Z+1
 28695 c2a8 880F      		lsl r24
 28696 c2aa 991F      		rol r25
 28697 c2ac 820F      		add r24,r18
 28698 c2ae 931F      		adc r25,r19
 28699 c2b0 FC01      		movw r30,r24
 28700 c2b2 8081      		ld r24,Z
 28701 c2b4 9181      		ldd r25,Z+1
 28702 c2b6 9F83      		std Y+7,r25
 28703 c2b8 8E83      		std Y+6,r24
2570:lp_solve_5.5/lp_presolve.c **** 
2571:lp_solve_5.5/lp_presolve.c ****     /* Get the second column */
2572:lp_solve_5.5/lp_presolve.c ****     jjx = presolve_nextcol(psdata, i, &item);
 28704               		.loc 2 2572 0
 28705 c2ba AE01      		movw r20,r28
 28706 c2bc 465F      		subi r20,-10
 28707 c2be 5F4F      		sbci r21,-1
 28708 c2c0 2981      		ldd r18,Y+1
 28709 c2c2 3A81      		ldd r19,Y+2
 28710 c2c4 8E85      		ldd r24,Y+14
 28711 c2c6 9F85      		ldd r25,Y+15
 28712 c2c8 B901      		movw r22,r18
 28713 c2ca 0E94 0000 		call presolve_nextcol
 28714 c2ce 9987      		std Y+9,r25
 28715 c2d0 8887      		std Y+8,r24
2573:lp_solve_5.5/lp_presolve.c ****     if(jjx < 0)
 28716               		.loc 2 2573 0
 28717 c2d2 8885      		ldd r24,Y+8
 28718 c2d4 9985      		ldd r25,Y+9
 28719 c2d6 9923      		tst r25
 28720 c2d8 04F4      		brge .L1244
2574:lp_solve_5.5/lp_presolve.c ****       error = AUTOMATIC;
 28721               		.loc 2 2574 0
 28722 c2da 82E0      		ldi r24,lo8(2)
 28723 c2dc 8B83      		std Y+3,r24
 28724               	.L1244:
2575:lp_solve_5.5/lp_presolve.c ****   } while(!error);
 28725               		.loc 2 2575 0
 28726 c2de 8B81      		ldd r24,Y+3
 28727 c2e0 8823      		tst r24
 28728 c2e2 01F4      		brne .+2
 28729 c2e4 00C0      		rjmp .L1245
2576:lp_solve_5.5/lp_presolve.c **** 
2577:lp_solve_5.5/lp_presolve.c ****   return( error );
 28730               		.loc 2 2577 0
 28731 c2e6 8B81      		ldd r24,Y+3
 28732               	.L1246:
 28733               	/* epilogue start */
2578:lp_solve_5.5/lp_presolve.c **** }
 28734               		.loc 2 2578 0 discriminator 1
 28735 c2e8 2F96      		adiw r28,15
 28736 c2ea 0FB6      		in __tmp_reg__,__SREG__
 28737 c2ec F894      		cli
 28738 c2ee DEBF      		out __SP_H__,r29
 28739 c2f0 0FBE      		out __SREG__,__tmp_reg__
 28740 c2f2 CDBF      		out __SP_L__,r28
 28741 c2f4 DF91      		pop r29
 28742 c2f6 CF91      		pop r28
 28743 c2f8 0895      		ret
 28744               		.cfi_endproc
 28745               	.LFE66:
 28747               	.global	presolve_getcolumnEQ
 28749               	presolve_getcolumnEQ:
 28750               	.LFB67:
2579:lp_solve_5.5/lp_presolve.c **** 
2580:lp_solve_5.5/lp_presolve.c **** /* Callback to obtain the non-zero rows of equality constraints */
2581:lp_solve_5.5/lp_presolve.c **** int BFP_CALLMODEL presolve_getcolumnEQ(lprec *lp, int colnr, REAL nzvalues[], int nzrows[], int map
2582:lp_solve_5.5/lp_presolve.c **** {
 28751               		.loc 2 2582 0
 28752               		.cfi_startproc
 28753 c2fa 0F93      		push r16
 28754               	.LCFI394:
 28755               		.cfi_def_cfa_offset 3
 28756               		.cfi_offset 16, -2
 28757 c2fc 1F93      		push r17
 28758               	.LCFI395:
 28759               		.cfi_def_cfa_offset 4
 28760               		.cfi_offset 17, -3
 28761 c2fe CF93      		push r28
 28762               	.LCFI396:
 28763               		.cfi_def_cfa_offset 5
 28764               		.cfi_offset 28, -4
 28765 c300 DF93      		push r29
 28766               	.LCFI397:
 28767               		.cfi_def_cfa_offset 6
 28768               		.cfi_offset 29, -5
 28769 c302 CDB7      		in r28,__SP_L__
 28770 c304 DEB7      		in r29,__SP_H__
 28771               	.LCFI398:
 28772               		.cfi_def_cfa_register 28
 28773 c306 6497      		sbiw r28,20
 28774               	.LCFI399:
 28775               		.cfi_def_cfa_offset 26
 28776 c308 0FB6      		in __tmp_reg__,__SREG__
 28777 c30a F894      		cli
 28778 c30c DEBF      		out __SP_H__,r29
 28779 c30e 0FBE      		out __SREG__,__tmp_reg__
 28780 c310 CDBF      		out __SP_L__,r28
 28781               	/* prologue: function */
 28782               	/* frame size = 20 */
 28783               	/* stack size = 24 */
 28784               	.L__stack_usage = 24
 28785 c312 9C87      		std Y+12,r25
 28786 c314 8B87      		std Y+11,r24
 28787 c316 7E87      		std Y+14,r23
 28788 c318 6D87      		std Y+13,r22
 28789 c31a 588B      		std Y+16,r21
 28790 c31c 4F87      		std Y+15,r20
 28791 c31e 3A8B      		std Y+18,r19
 28792 c320 298B      		std Y+17,r18
 28793 c322 1C8B      		std Y+20,r17
 28794 c324 0B8B      		std Y+19,r16
2583:lp_solve_5.5/lp_presolve.c ****   int    i, ib, ie, nn = 0;
 28795               		.loc 2 2583 0
 28796 c326 1C82      		std Y+4,__zero_reg__
 28797 c328 1B82      		std Y+3,__zero_reg__
2584:lp_solve_5.5/lp_presolve.c ****   MATrec *mat = lp->matA;
 28798               		.loc 2 2584 0
 28799 c32a 8B85      		ldd r24,Y+11
 28800 c32c 9C85      		ldd r25,Y+12
 28801 c32e 8A54      		subi r24,74
 28802 c330 9D4F      		sbci r25,-3
 28803 c332 FC01      		movw r30,r24
 28804 c334 8081      		ld r24,Z
 28805 c336 9181      		ldd r25,Z+1
 28806 c338 9E83      		std Y+6,r25
 28807 c33a 8D83      		std Y+5,r24
2585:lp_solve_5.5/lp_presolve.c **** 
2586:lp_solve_5.5/lp_presolve.c ****   ib = mat->col_end[colnr-1];
 28808               		.loc 2 2586 0
 28809 c33c 8D81      		ldd r24,Y+5
 28810 c33e 9E81      		ldd r25,Y+6
 28811 c340 FC01      		movw r30,r24
 28812 c342 2289      		ldd r18,Z+18
 28813 c344 3389      		ldd r19,Z+19
 28814 c346 8D85      		ldd r24,Y+13
 28815 c348 9E85      		ldd r25,Y+14
 28816 c34a 8150      		subi r24,1
 28817 c34c 9048      		sbci r25,-128
 28818 c34e 880F      		lsl r24
 28819 c350 991F      		rol r25
 28820 c352 820F      		add r24,r18
 28821 c354 931F      		adc r25,r19
 28822 c356 FC01      		movw r30,r24
 28823 c358 8081      		ld r24,Z
 28824 c35a 9181      		ldd r25,Z+1
 28825 c35c 9A83      		std Y+2,r25
 28826 c35e 8983      		std Y+1,r24
2587:lp_solve_5.5/lp_presolve.c ****   ie = mat->col_end[colnr];
 28827               		.loc 2 2587 0
 28828 c360 8D81      		ldd r24,Y+5
 28829 c362 9E81      		ldd r25,Y+6
 28830 c364 FC01      		movw r30,r24
 28831 c366 2289      		ldd r18,Z+18
 28832 c368 3389      		ldd r19,Z+19
 28833 c36a 8D85      		ldd r24,Y+13
 28834 c36c 9E85      		ldd r25,Y+14
 28835 c36e 880F      		lsl r24
 28836 c370 991F      		rol r25
 28837 c372 820F      		add r24,r18
 28838 c374 931F      		adc r25,r19
 28839 c376 FC01      		movw r30,r24
 28840 c378 8081      		ld r24,Z
 28841 c37a 9181      		ldd r25,Z+1
 28842 c37c 9887      		std Y+8,r25
 28843 c37e 8F83      		std Y+7,r24
2588:lp_solve_5.5/lp_presolve.c ****   for(; ib < ie; ib++) {
 28844               		.loc 2 2588 0
 28845 c380 00C0      		rjmp .L1249
 28846               	.L1254:
2589:lp_solve_5.5/lp_presolve.c ****     i = COL_MAT_ROWNR(ib);
 28847               		.loc 2 2589 0
 28848 c382 8D81      		ldd r24,Y+5
 28849 c384 9E81      		ldd r25,Y+6
 28850 c386 FC01      		movw r30,r24
 28851 c388 2685      		ldd r18,Z+14
 28852 c38a 3785      		ldd r19,Z+15
 28853 c38c 8981      		ldd r24,Y+1
 28854 c38e 9A81      		ldd r25,Y+2
 28855 c390 880F      		lsl r24
 28856 c392 991F      		rol r25
 28857 c394 820F      		add r24,r18
 28858 c396 931F      		adc r25,r19
 28859 c398 FC01      		movw r30,r24
 28860 c39a 8081      		ld r24,Z
 28861 c39c 9181      		ldd r25,Z+1
 28862 c39e 9A87      		std Y+10,r25
 28863 c3a0 8987      		std Y+9,r24
2590:lp_solve_5.5/lp_presolve.c ****     if(!is_constr_type(lp, i, EQ) ||  /* It has to be an equality constraint         */
 28864               		.loc 2 2590 0
 28865 c3a2 2985      		ldd r18,Y+9
 28866 c3a4 3A85      		ldd r19,Y+10
 28867 c3a6 8B85      		ldd r24,Y+11
 28868 c3a8 9C85      		ldd r25,Y+12
 28869 c3aa 43E0      		ldi r20,lo8(3)
 28870 c3ac 50E0      		ldi r21,0
 28871 c3ae B901      		movw r22,r18
 28872 c3b0 0E94 0000 		call is_constr_type
 28873 c3b4 8823      		tst r24
 28874 c3b6 01F4      		brne .+2
 28875 c3b8 00C0      		rjmp .L1256
2591:lp_solve_5.5/lp_presolve.c ****        (mapin[i] == 0))               /* And it should not already have been deleted */
 28876               		.loc 2 2591 0 discriminator 1
 28877 c3ba 8985      		ldd r24,Y+9
 28878 c3bc 9A85      		ldd r25,Y+10
 28879 c3be 880F      		lsl r24
 28880 c3c0 991F      		rol r25
 28881 c3c2 2B89      		ldd r18,Y+19
 28882 c3c4 3C89      		ldd r19,Y+20
 28883 c3c6 820F      		add r24,r18
 28884 c3c8 931F      		adc r25,r19
 28885 c3ca FC01      		movw r30,r24
 28886 c3cc 8081      		ld r24,Z
 28887 c3ce 9181      		ldd r25,Z+1
2590:lp_solve_5.5/lp_presolve.c ****     if(!is_constr_type(lp, i, EQ) ||  /* It has to be an equality constraint         */
 28888               		.loc 2 2590 0 discriminator 1
 28889 c3d0 892B      		or r24,r25
 28890 c3d2 01F4      		brne .+2
 28891 c3d4 00C0      		rjmp .L1256
2592:lp_solve_5.5/lp_presolve.c ****       continue;
2593:lp_solve_5.5/lp_presolve.c ****     if(nzvalues != NULL) {
 28892               		.loc 2 2593 0
 28893 c3d6 8F85      		ldd r24,Y+15
 28894 c3d8 9889      		ldd r25,Y+16
 28895 c3da 892B      		or r24,r25
 28896 c3dc 01F0      		breq .L1253
2594:lp_solve_5.5/lp_presolve.c ****       nzrows[nn] = mapin[i];
 28897               		.loc 2 2594 0
 28898 c3de 8B81      		ldd r24,Y+3
 28899 c3e0 9C81      		ldd r25,Y+4
 28900 c3e2 880F      		lsl r24
 28901 c3e4 991F      		rol r25
 28902 c3e6 2989      		ldd r18,Y+17
 28903 c3e8 3A89      		ldd r19,Y+18
 28904 c3ea 820F      		add r24,r18
 28905 c3ec 931F      		adc r25,r19
 28906 c3ee 2985      		ldd r18,Y+9
 28907 c3f0 3A85      		ldd r19,Y+10
 28908 c3f2 220F      		lsl r18
 28909 c3f4 331F      		rol r19
 28910 c3f6 4B89      		ldd r20,Y+19
 28911 c3f8 5C89      		ldd r21,Y+20
 28912 c3fa 240F      		add r18,r20
 28913 c3fc 351F      		adc r19,r21
 28914 c3fe F901      		movw r30,r18
 28915 c400 2081      		ld r18,Z
 28916 c402 3181      		ldd r19,Z+1
 28917 c404 FC01      		movw r30,r24
 28918 c406 3183      		std Z+1,r19
 28919 c408 2083      		st Z,r18
2595:lp_solve_5.5/lp_presolve.c ****       nzvalues[nn] = COL_MAT_VALUE(ib);
 28920               		.loc 2 2595 0
 28921 c40a 8B81      		ldd r24,Y+3
 28922 c40c 9C81      		ldd r25,Y+4
 28923 c40e 880F      		lsl r24
 28924 c410 991F      		rol r25
 28925 c412 880F      		lsl r24
 28926 c414 991F      		rol r25
 28927 c416 2F85      		ldd r18,Y+15
 28928 c418 3889      		ldd r19,Y+16
 28929 c41a 280F      		add r18,r24
 28930 c41c 391F      		adc r19,r25
 28931 c41e 8D81      		ldd r24,Y+5
 28932 c420 9E81      		ldd r25,Y+6
 28933 c422 FC01      		movw r30,r24
 28934 c424 4089      		ldd r20,Z+16
 28935 c426 5189      		ldd r21,Z+17
 28936 c428 8981      		ldd r24,Y+1
 28937 c42a 9A81      		ldd r25,Y+2
 28938 c42c 880F      		lsl r24
 28939 c42e 991F      		rol r25
 28940 c430 880F      		lsl r24
 28941 c432 991F      		rol r25
 28942 c434 840F      		add r24,r20
 28943 c436 951F      		adc r25,r21
 28944 c438 FC01      		movw r30,r24
 28945 c43a 8081      		ld r24,Z
 28946 c43c 9181      		ldd r25,Z+1
 28947 c43e A281      		ldd r26,Z+2
 28948 c440 B381      		ldd r27,Z+3
 28949 c442 F901      		movw r30,r18
 28950 c444 8083      		st Z,r24
 28951 c446 9183      		std Z+1,r25
 28952 c448 A283      		std Z+2,r26
 28953 c44a B383      		std Z+3,r27
 28954               	.L1253:
2596:lp_solve_5.5/lp_presolve.c ****     }
2597:lp_solve_5.5/lp_presolve.c ****     nn++;
 28955               		.loc 2 2597 0
 28956 c44c 8B81      		ldd r24,Y+3
 28957 c44e 9C81      		ldd r25,Y+4
 28958 c450 0196      		adiw r24,1
 28959 c452 9C83      		std Y+4,r25
 28960 c454 8B83      		std Y+3,r24
 28961 c456 00C0      		rjmp .L1252
 28962               	.L1256:
2592:lp_solve_5.5/lp_presolve.c ****     if(nzvalues != NULL) {
 28963               		.loc 2 2592 0
 28964 c458 0000      		nop
 28965               	.L1252:
2588:lp_solve_5.5/lp_presolve.c ****     i = COL_MAT_ROWNR(ib);
 28966               		.loc 2 2588 0
 28967 c45a 8981      		ldd r24,Y+1
 28968 c45c 9A81      		ldd r25,Y+2
 28969 c45e 0196      		adiw r24,1
 28970 c460 9A83      		std Y+2,r25
 28971 c462 8983      		std Y+1,r24
 28972               	.L1249:
2588:lp_solve_5.5/lp_presolve.c ****     i = COL_MAT_ROWNR(ib);
 28973               		.loc 2 2588 0 is_stmt 0 discriminator 1
 28974 c464 2981      		ldd r18,Y+1
 28975 c466 3A81      		ldd r19,Y+2
 28976 c468 8F81      		ldd r24,Y+7
 28977 c46a 9885      		ldd r25,Y+8
 28978 c46c 2817      		cp r18,r24
 28979 c46e 3907      		cpc r19,r25
 28980 c470 04F4      		brge .+2
 28981 c472 00C0      		rjmp .L1254
2598:lp_solve_5.5/lp_presolve.c ****   }
2599:lp_solve_5.5/lp_presolve.c ****   return( nn );
 28982               		.loc 2 2599 0 is_stmt 1
 28983 c474 8B81      		ldd r24,Y+3
 28984 c476 9C81      		ldd r25,Y+4
 28985               	/* epilogue start */
2600:lp_solve_5.5/lp_presolve.c **** }
 28986               		.loc 2 2600 0
 28987 c478 6496      		adiw r28,20
 28988 c47a 0FB6      		in __tmp_reg__,__SREG__
 28989 c47c F894      		cli
 28990 c47e DEBF      		out __SP_H__,r29
 28991 c480 0FBE      		out __SREG__,__tmp_reg__
 28992 c482 CDBF      		out __SP_L__,r28
 28993 c484 DF91      		pop r29
 28994 c486 CF91      		pop r28
 28995 c488 1F91      		pop r17
 28996 c48a 0F91      		pop r16
 28997 c48c 0895      		ret
 28998               		.cfi_endproc
 28999               	.LFE67:
 29001               	.global	presolve_singularities
 29003               	presolve_singularities:
 29004               	.LFB68:
2601:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_singularities(presolverec *psdata, int *nn, int *nr, int *nv, int *nSum)
2602:lp_solve_5.5/lp_presolve.c **** {
 29005               		.loc 2 2602 0
 29006               		.cfi_startproc
 29007 c48e 0F93      		push r16
 29008               	.LCFI400:
 29009               		.cfi_def_cfa_offset 3
 29010               		.cfi_offset 16, -2
 29011 c490 1F93      		push r17
 29012               	.LCFI401:
 29013               		.cfi_def_cfa_offset 4
 29014               		.cfi_offset 17, -3
 29015 c492 CF93      		push r28
 29016               	.LCFI402:
 29017               		.cfi_def_cfa_offset 5
 29018               		.cfi_offset 28, -4
 29019 c494 DF93      		push r29
 29020               	.LCFI403:
 29021               		.cfi_def_cfa_offset 6
 29022               		.cfi_offset 29, -5
 29023 c496 CDB7      		in r28,__SP_L__
 29024 c498 DEB7      		in r29,__SP_H__
 29025               	.LCFI404:
 29026               		.cfi_def_cfa_register 28
 29027 c49a 6897      		sbiw r28,24
 29028               	.LCFI405:
 29029               		.cfi_def_cfa_offset 30
 29030 c49c 0FB6      		in __tmp_reg__,__SREG__
 29031 c49e F894      		cli
 29032 c4a0 DEBF      		out __SP_H__,r29
 29033 c4a2 0FBE      		out __SREG__,__tmp_reg__
 29034 c4a4 CDBF      		out __SP_L__,r28
 29035               	/* prologue: function */
 29036               	/* frame size = 24 */
 29037               	/* stack size = 28 */
 29038               	.L__stack_usage = 28
 29039 c4a6 988B      		std Y+16,r25
 29040 c4a8 8F87      		std Y+15,r24
 29041 c4aa 7A8B      		std Y+18,r23
 29042 c4ac 698B      		std Y+17,r22
 29043 c4ae 5C8B      		std Y+20,r21
 29044 c4b0 4B8B      		std Y+19,r20
 29045 c4b2 3E8B      		std Y+22,r19
 29046 c4b4 2D8B      		std Y+21,r18
 29047 c4b6 188F      		std Y+24,r17
 29048 c4b8 0F8B      		std Y+23,r16
2603:lp_solve_5.5/lp_presolve.c ****   lprec *lp = psdata->lp;
 29049               		.loc 2 2603 0
 29050 c4ba 8F85      		ldd r24,Y+15
 29051 c4bc 9889      		ldd r25,Y+16
 29052 c4be DC01      		movw r26,r24
 29053 c4c0 5296      		adiw r26,18
 29054 c4c2 8D91      		ld r24,X+
 29055 c4c4 9C91      		ld r25,X
 29056 c4c6 5397      		sbiw r26,18+1
 29057 c4c8 9E83      		std Y+6,r25
 29058 c4ca 8D83      		std Y+5,r24
2604:lp_solve_5.5/lp_presolve.c ****   int i, j, n, *rmapin = NULL, *rmapout = NULL, *cmapout = NULL;
 29059               		.loc 2 2604 0
 29060 c4cc 1A86      		std Y+10,__zero_reg__
 29061 c4ce 1986      		std Y+9,__zero_reg__
 29062 c4d0 1C86      		std Y+12,__zero_reg__
 29063 c4d2 1B86      		std Y+11,__zero_reg__
 29064 c4d4 1E86      		std Y+14,__zero_reg__
 29065 c4d6 1D86      		std Y+13,__zero_reg__
2605:lp_solve_5.5/lp_presolve.c **** 
2606:lp_solve_5.5/lp_presolve.c ****   if(lp->bfp_findredundant(lp, 0, NULL, NULL, NULL) == 0)
 29066               		.loc 2 2606 0
 29067 c4d8 8D81      		ldd r24,Y+5
 29068 c4da 9E81      		ldd r25,Y+6
 29069 c4dc 8C52      		subi r24,44
 29070 c4de 9C4F      		sbci r25,-4
 29071 c4e0 DC01      		movw r26,r24
 29072 c4e2 ED91      		ld r30,X+
 29073 c4e4 FC91      		ld r31,X
 29074 c4e6 8D81      		ldd r24,Y+5
 29075 c4e8 9E81      		ldd r25,Y+6
 29076 c4ea 00E0      		ldi r16,0
 29077 c4ec 10E0      		ldi r17,0
 29078 c4ee 20E0      		ldi r18,0
 29079 c4f0 30E0      		ldi r19,0
 29080 c4f2 40E0      		ldi r20,0
 29081 c4f4 50E0      		ldi r21,0
 29082 c4f6 60E0      		ldi r22,0
 29083 c4f8 70E0      		ldi r23,0
 29084 c4fa 0995      		icall
 29085 c4fc 892B      		or r24,r25
 29086 c4fe 01F4      		brne .L1258
2607:lp_solve_5.5/lp_presolve.c ****     return( 0 );
 29087               		.loc 2 2607 0
 29088 c500 80E0      		ldi r24,0
 29089 c502 90E0      		ldi r25,0
 29090 c504 00C0      		rjmp .L1269
 29091               	.L1258:
2608:lp_solve_5.5/lp_presolve.c **** 
2609:lp_solve_5.5/lp_presolve.c ****   /* Create condensed row map */
2610:lp_solve_5.5/lp_presolve.c ****   allocINT(lp, &rmapin, lp->rows+1, TRUE);
 29092               		.loc 2 2610 0
 29093 c506 8D81      		ldd r24,Y+5
 29094 c508 9E81      		ldd r25,Y+6
 29095 c50a 8651      		subi r24,22
 29096 c50c 9E4F      		sbci r25,-2
 29097 c50e FC01      		movw r30,r24
 29098 c510 8081      		ld r24,Z
 29099 c512 9181      		ldd r25,Z+1
 29100 c514 AC01      		movw r20,r24
 29101 c516 4F5F      		subi r20,-1
 29102 c518 5F4F      		sbci r21,-1
 29103 c51a BE01      		movw r22,r28
 29104 c51c 675F      		subi r22,-9
 29105 c51e 7F4F      		sbci r23,-1
 29106 c520 8D81      		ldd r24,Y+5
 29107 c522 9E81      		ldd r25,Y+6
 29108 c524 21E0      		ldi r18,lo8(1)
 29109 c526 0E94 0000 		call allocINT
2611:lp_solve_5.5/lp_presolve.c ****   allocINT(lp, &rmapout, psdata->EQmap->count+1, FALSE);
 29110               		.loc 2 2611 0
 29111 c52a 8F85      		ldd r24,Y+15
 29112 c52c 9889      		ldd r25,Y+16
 29113 c52e DC01      		movw r26,r24
 29114 c530 1496      		adiw r26,4
 29115 c532 8D91      		ld r24,X+
 29116 c534 9C91      		ld r25,X
 29117 c536 1597      		sbiw r26,4+1
 29118 c538 FC01      		movw r30,r24
 29119 c53a 8281      		ldd r24,Z+2
 29120 c53c 9381      		ldd r25,Z+3
 29121 c53e AC01      		movw r20,r24
 29122 c540 4F5F      		subi r20,-1
 29123 c542 5F4F      		sbci r21,-1
 29124 c544 BE01      		movw r22,r28
 29125 c546 655F      		subi r22,-11
 29126 c548 7F4F      		sbci r23,-1
 29127 c54a 8D81      		ldd r24,Y+5
 29128 c54c 9E81      		ldd r25,Y+6
 29129 c54e 20E0      		ldi r18,0
 29130 c550 0E94 0000 		call allocINT
2612:lp_solve_5.5/lp_presolve.c ****   allocINT(lp, &cmapout, lp->columns+1, FALSE);
 29131               		.loc 2 2612 0
 29132 c554 8D81      		ldd r24,Y+5
 29133 c556 9E81      		ldd r25,Y+6
 29134 c558 8451      		subi r24,20
 29135 c55a 9E4F      		sbci r25,-2
 29136 c55c DC01      		movw r26,r24
 29137 c55e 8D91      		ld r24,X+
 29138 c560 9C91      		ld r25,X
 29139 c562 AC01      		movw r20,r24
 29140 c564 4F5F      		subi r20,-1
 29141 c566 5F4F      		sbci r21,-1
 29142 c568 BE01      		movw r22,r28
 29143 c56a 635F      		subi r22,-13
 29144 c56c 7F4F      		sbci r23,-1
 29145 c56e 8D81      		ldd r24,Y+5
 29146 c570 9E81      		ldd r25,Y+6
 29147 c572 20E0      		ldi r18,0
 29148 c574 0E94 0000 		call allocINT
2613:lp_solve_5.5/lp_presolve.c ****   n = 0;
 29149               		.loc 2 2613 0
 29150 c578 1C82      		std Y+4,__zero_reg__
 29151 c57a 1B82      		std Y+3,__zero_reg__
2614:lp_solve_5.5/lp_presolve.c ****   for(i = firstActiveLink(psdata->EQmap); i != 0; i = nextActiveLink(psdata->EQmap, i)) {
 29152               		.loc 2 2614 0
 29153 c57c 8F85      		ldd r24,Y+15
 29154 c57e 9889      		ldd r25,Y+16
 29155 c580 FC01      		movw r30,r24
 29156 c582 8481      		ldd r24,Z+4
 29157 c584 9581      		ldd r25,Z+5
 29158 c586 0E94 0000 		call firstActiveLink
 29159 c58a 9A83      		std Y+2,r25
 29160 c58c 8983      		std Y+1,r24
 29161 c58e 00C0      		rjmp .L1260
 29162               	.L1261:
2615:lp_solve_5.5/lp_presolve.c ****     n++;
 29163               		.loc 2 2615 0 discriminator 3
 29164 c590 8B81      		ldd r24,Y+3
 29165 c592 9C81      		ldd r25,Y+4
 29166 c594 0196      		adiw r24,1
 29167 c596 9C83      		std Y+4,r25
 29168 c598 8B83      		std Y+3,r24
2616:lp_solve_5.5/lp_presolve.c ****     rmapout[n] = i;
 29169               		.loc 2 2616 0 discriminator 3
 29170 c59a 2B85      		ldd r18,Y+11
 29171 c59c 3C85      		ldd r19,Y+12
 29172 c59e 8B81      		ldd r24,Y+3
 29173 c5a0 9C81      		ldd r25,Y+4
 29174 c5a2 880F      		lsl r24
 29175 c5a4 991F      		rol r25
 29176 c5a6 820F      		add r24,r18
 29177 c5a8 931F      		adc r25,r19
 29178 c5aa 2981      		ldd r18,Y+1
 29179 c5ac 3A81      		ldd r19,Y+2
 29180 c5ae DC01      		movw r26,r24
 29181 c5b0 2D93      		st X+,r18
 29182 c5b2 3C93      		st X,r19
2617:lp_solve_5.5/lp_presolve.c ****     rmapin[i]  = n;
 29183               		.loc 2 2617 0 discriminator 3
 29184 c5b4 2985      		ldd r18,Y+9
 29185 c5b6 3A85      		ldd r19,Y+10
 29186 c5b8 8981      		ldd r24,Y+1
 29187 c5ba 9A81      		ldd r25,Y+2
 29188 c5bc 880F      		lsl r24
 29189 c5be 991F      		rol r25
 29190 c5c0 820F      		add r24,r18
 29191 c5c2 931F      		adc r25,r19
 29192 c5c4 2B81      		ldd r18,Y+3
 29193 c5c6 3C81      		ldd r19,Y+4
 29194 c5c8 FC01      		movw r30,r24
 29195 c5ca 3183      		std Z+1,r19
 29196 c5cc 2083      		st Z,r18
2614:lp_solve_5.5/lp_presolve.c ****     n++;
 29197               		.loc 2 2614 0 discriminator 3
 29198 c5ce 8F85      		ldd r24,Y+15
 29199 c5d0 9889      		ldd r25,Y+16
 29200 c5d2 DC01      		movw r26,r24
 29201 c5d4 1496      		adiw r26,4
 29202 c5d6 8D91      		ld r24,X+
 29203 c5d8 9C91      		ld r25,X
 29204 c5da 1597      		sbiw r26,4+1
 29205 c5dc 2981      		ldd r18,Y+1
 29206 c5de 3A81      		ldd r19,Y+2
 29207 c5e0 B901      		movw r22,r18
 29208 c5e2 0E94 0000 		call nextActiveLink
 29209 c5e6 9A83      		std Y+2,r25
 29210 c5e8 8983      		std Y+1,r24
 29211               	.L1260:
2614:lp_solve_5.5/lp_presolve.c ****     n++;
 29212               		.loc 2 2614 0 is_stmt 0 discriminator 1
 29213 c5ea 8981      		ldd r24,Y+1
 29214 c5ec 9A81      		ldd r25,Y+2
 29215 c5ee 892B      		or r24,r25
 29216 c5f0 01F4      		brne .L1261
2618:lp_solve_5.5/lp_presolve.c ****   }
2619:lp_solve_5.5/lp_presolve.c ****   rmapout[0] = n;
 29217               		.loc 2 2619 0 is_stmt 1
 29218 c5f2 8B85      		ldd r24,Y+11
 29219 c5f4 9C85      		ldd r25,Y+12
 29220 c5f6 2B81      		ldd r18,Y+3
 29221 c5f8 3C81      		ldd r19,Y+4
 29222 c5fa FC01      		movw r30,r24
 29223 c5fc 3183      		std Z+1,r19
 29224 c5fe 2083      		st Z,r18
2620:lp_solve_5.5/lp_presolve.c ****   n = 0;
 29225               		.loc 2 2620 0
 29226 c600 1C82      		std Y+4,__zero_reg__
 29227 c602 1B82      		std Y+3,__zero_reg__
2621:lp_solve_5.5/lp_presolve.c ****   for(i = firstActiveLink(psdata->cols->varmap); i != 0; i = nextActiveLink(psdata->cols->varmap, i
 29228               		.loc 2 2621 0
 29229 c604 8F85      		ldd r24,Y+15
 29230 c606 9889      		ldd r25,Y+16
 29231 c608 DC01      		movw r26,r24
 29232 c60a 1296      		adiw r26,2
 29233 c60c 8D91      		ld r24,X+
 29234 c60e 9C91      		ld r25,X
 29235 c610 1397      		sbiw r26,2+1
 29236 c612 FC01      		movw r30,r24
 29237 c614 8081      		ld r24,Z
 29238 c616 9181      		ldd r25,Z+1
 29239 c618 0E94 0000 		call firstActiveLink
 29240 c61c 9A83      		std Y+2,r25
 29241 c61e 8983      		std Y+1,r24
 29242 c620 00C0      		rjmp .L1262
 29243               	.L1263:
2622:lp_solve_5.5/lp_presolve.c ****     n++;
 29244               		.loc 2 2622 0 discriminator 3
 29245 c622 8B81      		ldd r24,Y+3
 29246 c624 9C81      		ldd r25,Y+4
 29247 c626 0196      		adiw r24,1
 29248 c628 9C83      		std Y+4,r25
 29249 c62a 8B83      		std Y+3,r24
2623:lp_solve_5.5/lp_presolve.c ****     cmapout[n]  = i;
 29250               		.loc 2 2623 0 discriminator 3
 29251 c62c 2D85      		ldd r18,Y+13
 29252 c62e 3E85      		ldd r19,Y+14
 29253 c630 8B81      		ldd r24,Y+3
 29254 c632 9C81      		ldd r25,Y+4
 29255 c634 880F      		lsl r24
 29256 c636 991F      		rol r25
 29257 c638 820F      		add r24,r18
 29258 c63a 931F      		adc r25,r19
 29259 c63c 2981      		ldd r18,Y+1
 29260 c63e 3A81      		ldd r19,Y+2
 29261 c640 DC01      		movw r26,r24
 29262 c642 2D93      		st X+,r18
 29263 c644 3C93      		st X,r19
2621:lp_solve_5.5/lp_presolve.c ****   for(i = firstActiveLink(psdata->cols->varmap); i != 0; i = nextActiveLink(psdata->cols->varmap, i
 29264               		.loc 2 2621 0 discriminator 3
 29265 c646 8F85      		ldd r24,Y+15
 29266 c648 9889      		ldd r25,Y+16
 29267 c64a FC01      		movw r30,r24
 29268 c64c 8281      		ldd r24,Z+2
 29269 c64e 9381      		ldd r25,Z+3
 29270 c650 DC01      		movw r26,r24
 29271 c652 8D91      		ld r24,X+
 29272 c654 9C91      		ld r25,X
 29273 c656 2981      		ldd r18,Y+1
 29274 c658 3A81      		ldd r19,Y+2
 29275 c65a B901      		movw r22,r18
 29276 c65c 0E94 0000 		call nextActiveLink
 29277 c660 9A83      		std Y+2,r25
 29278 c662 8983      		std Y+1,r24
 29279               	.L1262:
2621:lp_solve_5.5/lp_presolve.c ****   for(i = firstActiveLink(psdata->cols->varmap); i != 0; i = nextActiveLink(psdata->cols->varmap, i
 29280               		.loc 2 2621 0 is_stmt 0 discriminator 1
 29281 c664 8981      		ldd r24,Y+1
 29282 c666 9A81      		ldd r25,Y+2
 29283 c668 892B      		or r24,r25
 29284 c66a 01F4      		brne .L1263
2624:lp_solve_5.5/lp_presolve.c ****   }
2625:lp_solve_5.5/lp_presolve.c ****   cmapout[0] = n;
 29285               		.loc 2 2625 0 is_stmt 1
 29286 c66c 8D85      		ldd r24,Y+13
 29287 c66e 9E85      		ldd r25,Y+14
 29288 c670 2B81      		ldd r18,Y+3
 29289 c672 3C81      		ldd r19,Y+4
 29290 c674 FC01      		movw r30,r24
 29291 c676 3183      		std Z+1,r19
 29292 c678 2083      		st Z,r18
2626:lp_solve_5.5/lp_presolve.c **** 
2627:lp_solve_5.5/lp_presolve.c ****   /* Do the rank-revealing factorization */
2628:lp_solve_5.5/lp_presolve.c ****   n = lp->bfp_findredundant(lp, psdata->EQmap->count, presolve_getcolumnEQ, rmapin, cmapout);
 29293               		.loc 2 2628 0
 29294 c67a 8D81      		ldd r24,Y+5
 29295 c67c 9E81      		ldd r25,Y+6
 29296 c67e 8C52      		subi r24,44
 29297 c680 9C4F      		sbci r25,-4
 29298 c682 DC01      		movw r26,r24
 29299 c684 ED91      		ld r30,X+
 29300 c686 FC91      		ld r31,X
 29301 c688 4D85      		ldd r20,Y+13
 29302 c68a 5E85      		ldd r21,Y+14
 29303 c68c 2985      		ldd r18,Y+9
 29304 c68e 3A85      		ldd r19,Y+10
 29305 c690 8F85      		ldd r24,Y+15
 29306 c692 9889      		ldd r25,Y+16
 29307 c694 DC01      		movw r26,r24
 29308 c696 1496      		adiw r26,4
 29309 c698 8D91      		ld r24,X+
 29310 c69a 9C91      		ld r25,X
 29311 c69c 1597      		sbiw r26,4+1
 29312 c69e DC01      		movw r26,r24
 29313 c6a0 1296      		adiw r26,2
 29314 c6a2 6D91      		ld r22,X+
 29315 c6a4 7C91      		ld r23,X
 29316 c6a6 1397      		sbiw r26,2+1
 29317 c6a8 8D81      		ldd r24,Y+5
 29318 c6aa 9E81      		ldd r25,Y+6
 29319 c6ac 8A01      		movw r16,r20
 29320 c6ae 40E0      		ldi r20,lo8(gs(presolve_getcolumnEQ))
 29321 c6b0 50E0      		ldi r21,hi8(gs(presolve_getcolumnEQ))
 29322 c6b2 0995      		icall
 29323 c6b4 9C83      		std Y+4,r25
 29324 c6b6 8B83      		std Y+3,r24
2629:lp_solve_5.5/lp_presolve.c **** 
2630:lp_solve_5.5/lp_presolve.c ****   /* Delete the redundant rows */
2631:lp_solve_5.5/lp_presolve.c ****   for(i = 1; i <= n; i++) {
 29325               		.loc 2 2631 0
 29326 c6b8 81E0      		ldi r24,lo8(1)
 29327 c6ba 90E0      		ldi r25,0
 29328 c6bc 9A83      		std Y+2,r25
 29329 c6be 8983      		std Y+1,r24
 29330 c6c0 00C0      		rjmp .L1264
 29331               	.L1265:
2632:lp_solve_5.5/lp_presolve.c ****     j = rmapin[i];
 29332               		.loc 2 2632 0 discriminator 3
 29333 c6c2 2985      		ldd r18,Y+9
 29334 c6c4 3A85      		ldd r19,Y+10
 29335 c6c6 8981      		ldd r24,Y+1
 29336 c6c8 9A81      		ldd r25,Y+2
 29337 c6ca 880F      		lsl r24
 29338 c6cc 991F      		rol r25
 29339 c6ce 820F      		add r24,r18
 29340 c6d0 931F      		adc r25,r19
 29341 c6d2 FC01      		movw r30,r24
 29342 c6d4 8081      		ld r24,Z
 29343 c6d6 9181      		ldd r25,Z+1
 29344 c6d8 9887      		std Y+8,r25
 29345 c6da 8F83      		std Y+7,r24
2633:lp_solve_5.5/lp_presolve.c ****     j = rmapout[j];
 29346               		.loc 2 2633 0 discriminator 3
 29347 c6dc 2B85      		ldd r18,Y+11
 29348 c6de 3C85      		ldd r19,Y+12
 29349 c6e0 8F81      		ldd r24,Y+7
 29350 c6e2 9885      		ldd r25,Y+8
 29351 c6e4 880F      		lsl r24
 29352 c6e6 991F      		rol r25
 29353 c6e8 820F      		add r24,r18
 29354 c6ea 931F      		adc r25,r19
 29355 c6ec DC01      		movw r26,r24
 29356 c6ee 8D91      		ld r24,X+
 29357 c6f0 9C91      		ld r25,X
 29358 c6f2 9887      		std Y+8,r25
 29359 c6f4 8F83      		std Y+7,r24
2634:lp_solve_5.5/lp_presolve.c ****     presolve_rowremove(psdata, j, TRUE);
 29360               		.loc 2 2634 0 discriminator 3
 29361 c6f6 2F81      		ldd r18,Y+7
 29362 c6f8 3885      		ldd r19,Y+8
 29363 c6fa 8F85      		ldd r24,Y+15
 29364 c6fc 9889      		ldd r25,Y+16
 29365 c6fe 41E0      		ldi r20,lo8(1)
 29366 c700 B901      		movw r22,r18
 29367 c702 0E94 0000 		call presolve_rowremove
2631:lp_solve_5.5/lp_presolve.c ****     j = rmapin[i];
 29368               		.loc 2 2631 0 discriminator 3
 29369 c706 8981      		ldd r24,Y+1
 29370 c708 9A81      		ldd r25,Y+2
 29371 c70a 0196      		adiw r24,1
 29372 c70c 9A83      		std Y+2,r25
 29373 c70e 8983      		std Y+1,r24
 29374               	.L1264:
2631:lp_solve_5.5/lp_presolve.c ****     j = rmapin[i];
 29375               		.loc 2 2631 0 is_stmt 0 discriminator 1
 29376 c710 2981      		ldd r18,Y+1
 29377 c712 3A81      		ldd r19,Y+2
 29378 c714 8B81      		ldd r24,Y+3
 29379 c716 9C81      		ldd r25,Y+4
 29380 c718 8217      		cp r24,r18
 29381 c71a 9307      		cpc r25,r19
 29382 c71c 04F4      		brge .L1265
2635:lp_solve_5.5/lp_presolve.c ****   }
2636:lp_solve_5.5/lp_presolve.c ****   (*nn)   += n;
 29383               		.loc 2 2636 0 is_stmt 1
 29384 c71e 8989      		ldd r24,Y+17
 29385 c720 9A89      		ldd r25,Y+18
 29386 c722 FC01      		movw r30,r24
 29387 c724 2081      		ld r18,Z
 29388 c726 3181      		ldd r19,Z+1
 29389 c728 8B81      		ldd r24,Y+3
 29390 c72a 9C81      		ldd r25,Y+4
 29391 c72c 280F      		add r18,r24
 29392 c72e 391F      		adc r19,r25
 29393 c730 8989      		ldd r24,Y+17
 29394 c732 9A89      		ldd r25,Y+18
 29395 c734 DC01      		movw r26,r24
 29396 c736 2D93      		st X+,r18
 29397 c738 3C93      		st X,r19
2637:lp_solve_5.5/lp_presolve.c ****   (*nr)   += n;
 29398               		.loc 2 2637 0
 29399 c73a 8B89      		ldd r24,Y+19
 29400 c73c 9C89      		ldd r25,Y+20
 29401 c73e FC01      		movw r30,r24
 29402 c740 2081      		ld r18,Z
 29403 c742 3181      		ldd r19,Z+1
 29404 c744 8B81      		ldd r24,Y+3
 29405 c746 9C81      		ldd r25,Y+4
 29406 c748 280F      		add r18,r24
 29407 c74a 391F      		adc r19,r25
 29408 c74c 8B89      		ldd r24,Y+19
 29409 c74e 9C89      		ldd r25,Y+20
 29410 c750 DC01      		movw r26,r24
 29411 c752 2D93      		st X+,r18
 29412 c754 3C93      		st X,r19
2638:lp_solve_5.5/lp_presolve.c ****   (*nSum) += n;
 29413               		.loc 2 2638 0
 29414 c756 8F89      		ldd r24,Y+23
 29415 c758 988D      		ldd r25,Y+24
 29416 c75a FC01      		movw r30,r24
 29417 c75c 2081      		ld r18,Z
 29418 c75e 3181      		ldd r19,Z+1
 29419 c760 8B81      		ldd r24,Y+3
 29420 c762 9C81      		ldd r25,Y+4
 29421 c764 280F      		add r18,r24
 29422 c766 391F      		adc r19,r25
 29423 c768 8F89      		ldd r24,Y+23
 29424 c76a 988D      		ldd r25,Y+24
 29425 c76c DC01      		movw r26,r24
 29426 c76e 2D93      		st X+,r18
 29427 c770 3C93      		st X,r19
2639:lp_solve_5.5/lp_presolve.c **** 
2640:lp_solve_5.5/lp_presolve.c ****   /* Clean up */
2641:lp_solve_5.5/lp_presolve.c ****   FREE(rmapout);
 29428               		.loc 2 2641 0
 29429 c772 8B85      		ldd r24,Y+11
 29430 c774 9C85      		ldd r25,Y+12
 29431 c776 892B      		or r24,r25
 29432 c778 01F0      		breq .L1266
 29433               		.loc 2 2641 0 is_stmt 0 discriminator 1
 29434 c77a 8B85      		ldd r24,Y+11
 29435 c77c 9C85      		ldd r25,Y+12
 29436 c77e 0E94 0000 		call free
 29437 c782 1C86      		std Y+12,__zero_reg__
 29438 c784 1B86      		std Y+11,__zero_reg__
 29439               	.L1266:
2642:lp_solve_5.5/lp_presolve.c ****   FREE(rmapin);
 29440               		.loc 2 2642 0 is_stmt 1
 29441 c786 8985      		ldd r24,Y+9
 29442 c788 9A85      		ldd r25,Y+10
 29443 c78a 892B      		or r24,r25
 29444 c78c 01F0      		breq .L1267
 29445               		.loc 2 2642 0 is_stmt 0 discriminator 1
 29446 c78e 8985      		ldd r24,Y+9
 29447 c790 9A85      		ldd r25,Y+10
 29448 c792 0E94 0000 		call free
 29449 c796 1A86      		std Y+10,__zero_reg__
 29450 c798 1986      		std Y+9,__zero_reg__
 29451               	.L1267:
2643:lp_solve_5.5/lp_presolve.c ****   FREE(cmapout);
 29452               		.loc 2 2643 0 is_stmt 1
 29453 c79a 8D85      		ldd r24,Y+13
 29454 c79c 9E85      		ldd r25,Y+14
 29455 c79e 892B      		or r24,r25
 29456 c7a0 01F0      		breq .L1268
 29457               		.loc 2 2643 0 is_stmt 0 discriminator 1
 29458 c7a2 8D85      		ldd r24,Y+13
 29459 c7a4 9E85      		ldd r25,Y+14
 29460 c7a6 0E94 0000 		call free
 29461 c7aa 1E86      		std Y+14,__zero_reg__
 29462 c7ac 1D86      		std Y+13,__zero_reg__
 29463               	.L1268:
2644:lp_solve_5.5/lp_presolve.c **** 
2645:lp_solve_5.5/lp_presolve.c ****   return( n );
 29464               		.loc 2 2645 0 is_stmt 1
 29465 c7ae 8B81      		ldd r24,Y+3
 29466 c7b0 9C81      		ldd r25,Y+4
 29467               	.L1269:
 29468               	/* epilogue start */
2646:lp_solve_5.5/lp_presolve.c **** }
 29469               		.loc 2 2646 0 discriminator 1
 29470 c7b2 6896      		adiw r28,24
 29471 c7b4 0FB6      		in __tmp_reg__,__SREG__
 29472 c7b6 F894      		cli
 29473 c7b8 DEBF      		out __SP_H__,r29
 29474 c7ba 0FBE      		out __SREG__,__tmp_reg__
 29475 c7bc CDBF      		out __SP_L__,r28
 29476 c7be DF91      		pop r29
 29477 c7c0 CF91      		pop r28
 29478 c7c2 1F91      		pop r17
 29479 c7c4 0F91      		pop r16
 29480 c7c6 0895      		ret
 29481               		.cfi_endproc
 29482               	.LFE68:
 29484               		.section	.rodata
 29485               	.LC34:
 29486 07a3 526F 7720 		.string	"Row %3d : Elim %g %s - %d\n"
 29486      2533 6420 
 29486      3A20 456C 
 29486      696D 2025 
 29486      6720 2573 
 29487               	.LC35:
 29488 07be 2020 2020 		.string	"          Keep %g %s - %d\n"
 29488      2020 2020 
 29488      2020 4B65 
 29488      6570 2025 
 29488      6720 2573 
 29489               		.text
 29490               	.global	presolve_elimeq2
 29492               	presolve_elimeq2:
 29493               	.LFB69:
2647:lp_solve_5.5/lp_presolve.c **** 
2648:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_elimeq2(presolverec *psdata, int *nn, int *nr, int *nc, int *nSum)
2649:lp_solve_5.5/lp_presolve.c **** {
 29494               		.loc 2 2649 0
 29495               		.cfi_startproc
 29496 c7c8 AF92      		push r10
 29497               	.LCFI406:
 29498               		.cfi_def_cfa_offset 3
 29499               		.cfi_offset 10, -2
 29500 c7ca BF92      		push r11
 29501               	.LCFI407:
 29502               		.cfi_def_cfa_offset 4
 29503               		.cfi_offset 11, -3
 29504 c7cc CF92      		push r12
 29505               	.LCFI408:
 29506               		.cfi_def_cfa_offset 5
 29507               		.cfi_offset 12, -4
 29508 c7ce DF92      		push r13
 29509               	.LCFI409:
 29510               		.cfi_def_cfa_offset 6
 29511               		.cfi_offset 13, -5
 29512 c7d0 EF92      		push r14
 29513               	.LCFI410:
 29514               		.cfi_def_cfa_offset 7
 29515               		.cfi_offset 14, -6
 29516 c7d2 FF92      		push r15
 29517               	.LCFI411:
 29518               		.cfi_def_cfa_offset 8
 29519               		.cfi_offset 15, -7
 29520 c7d4 0F93      		push r16
 29521               	.LCFI412:
 29522               		.cfi_def_cfa_offset 9
 29523               		.cfi_offset 16, -8
 29524 c7d6 1F93      		push r17
 29525               	.LCFI413:
 29526               		.cfi_def_cfa_offset 10
 29527               		.cfi_offset 17, -9
 29528 c7d8 CF93      		push r28
 29529               	.LCFI414:
 29530               		.cfi_def_cfa_offset 11
 29531               		.cfi_offset 28, -10
 29532 c7da DF93      		push r29
 29533               	.LCFI415:
 29534               		.cfi_def_cfa_offset 12
 29535               		.cfi_offset 29, -11
 29536 c7dc CDB7      		in r28,__SP_L__
 29537 c7de DEB7      		in r29,__SP_H__
 29538               	.LCFI416:
 29539               		.cfi_def_cfa_register 28
 29540 c7e0 C156      		subi r28,97
 29541 c7e2 D109      		sbc r29,__zero_reg__
 29542               	.LCFI417:
 29543               		.cfi_def_cfa_offset 109
 29544 c7e4 0FB6      		in __tmp_reg__,__SREG__
 29545 c7e6 F894      		cli
 29546 c7e8 DEBF      		out __SP_H__,r29
 29547 c7ea 0FBE      		out __SREG__,__tmp_reg__
 29548 c7ec CDBF      		out __SP_L__,r28
 29549               	/* prologue: function */
 29550               	/* frame size = 97 */
 29551               	/* stack size = 107 */
 29552               	.L__stack_usage = 107
 29553 c7ee FE01      		movw r30,r28
 29554 c7f0 EA5A      		subi r30,-86
 29555 c7f2 FF4F      		sbci r31,-1
 29556 c7f4 9183      		std Z+1,r25
 29557 c7f6 8083      		st Z,r24
 29558 c7f8 CE01      		movw r24,r28
 29559 c7fa 885A      		subi r24,-88
 29560 c7fc 9F4F      		sbci r25,-1
 29561 c7fe FC01      		movw r30,r24
 29562 c800 7183      		std Z+1,r23
 29563 c802 6083      		st Z,r22
 29564 c804 CE01      		movw r24,r28
 29565 c806 865A      		subi r24,-90
 29566 c808 9F4F      		sbci r25,-1
 29567 c80a FC01      		movw r30,r24
 29568 c80c 5183      		std Z+1,r21
 29569 c80e 4083      		st Z,r20
 29570 c810 CE01      		movw r24,r28
 29571 c812 845A      		subi r24,-92
 29572 c814 9F4F      		sbci r25,-1
 29573 c816 FC01      		movw r30,r24
 29574 c818 3183      		std Z+1,r19
 29575 c81a 2083      		st Z,r18
 29576 c81c CE01      		movw r24,r28
 29577 c81e 825A      		subi r24,-94
 29578 c820 9F4F      		sbci r25,-1
 29579 c822 FC01      		movw r30,r24
 29580 c824 1183      		std Z+1,r17
 29581 c826 0083      		st Z,r16
2650:lp_solve_5.5/lp_presolve.c ****   lprec     *lp = psdata->lp;
 29582               		.loc 2 2650 0
 29583 c828 CE01      		movw r24,r28
 29584 c82a 8A5A      		subi r24,-86
 29585 c82c 9F4F      		sbci r25,-1
 29586 c82e FC01      		movw r30,r24
 29587 c830 8081      		ld r24,Z
 29588 c832 9181      		ldd r25,Z+1
 29589 c834 FC01      		movw r30,r24
 29590 c836 8289      		ldd r24,Z+18
 29591 c838 9389      		ldd r25,Z+19
 29592 c83a 9E8F      		std Y+30,r25
 29593 c83c 8D8F      		std Y+29,r24
2651:lp_solve_5.5/lp_presolve.c ****   int       n, i, jx, jjx, k, item, *plucount, *negcount, colplu, colneg,
2652:lp_solve_5.5/lp_presolve.c ****             iCoeffChanged = 0, iRowsRemoved = 0, iVarsFixed = 0, nrows = lp->rows,
 29594               		.loc 2 2652 0
 29595 c83e 1C86      		std Y+12,__zero_reg__
 29596 c840 1B86      		std Y+11,__zero_reg__
 29597 c842 1E86      		std Y+14,__zero_reg__
 29598 c844 1D86      		std Y+13,__zero_reg__
 29599 c846 188A      		std Y+16,__zero_reg__
 29600 c848 1F86      		std Y+15,__zero_reg__
 29601 c84a 8D8D      		ldd r24,Y+29
 29602 c84c 9E8D      		ldd r25,Y+30
 29603 c84e 8651      		subi r24,22
 29604 c850 9E4F      		sbci r25,-2
 29605 c852 FC01      		movw r30,r24
 29606 c854 8081      		ld r24,Z
 29607 c856 9181      		ldd r25,Z+1
 29608 c858 98A3      		std Y+32,r25
 29609 c85a 8F8F      		std Y+31,r24
2653:lp_solve_5.5/lp_presolve.c ****             status = RUNNING, *colindex = NULL;
 29610               		.loc 2 2653 0
 29611 c85c 88E0      		ldi r24,lo8(8)
 29612 c85e 90E0      		ldi r25,0
 29613 c860 9AA3      		std Y+34,r25
 29614 c862 89A3      		std Y+33,r24
 29615 c864 CE01      		movw r24,r28
 29616 c866 805C      		subi r24,-64
 29617 c868 9F4F      		sbci r25,-1
 29618 c86a FC01      		movw r30,r24
 29619 c86c 1182      		std Z+1,__zero_reg__
 29620 c86e 1082      		st Z,__zero_reg__
2654:lp_solve_5.5/lp_presolve.c ****   MYBOOL    freshupdate;
2655:lp_solve_5.5/lp_presolve.c ****   REAL      Coeff1, Coeff2, Value1, Value2, lobound, upbound, bound, test, product,
2656:lp_solve_5.5/lp_presolve.c ****             *colvalue = NULL, *delvalue = NULL, *colitem;
 29621               		.loc 2 2656 0
 29622 c870 CE01      		movw r24,r28
 29623 c872 825B      		subi r24,-78
 29624 c874 9F4F      		sbci r25,-1
 29625 c876 FC01      		movw r30,r24
 29626 c878 1182      		std Z+1,__zero_reg__
 29627 c87a 1082      		st Z,__zero_reg__
 29628 c87c CE01      		movw r24,r28
 29629 c87e 805B      		subi r24,-80
 29630 c880 9F4F      		sbci r25,-1
 29631 c882 FC01      		movw r30,r24
 29632 c884 1182      		std Z+1,__zero_reg__
 29633 c886 1082      		st Z,__zero_reg__
2657:lp_solve_5.5/lp_presolve.c ****   MATrec    *mat = lp->matA, *rev = NULL;
 29634               		.loc 2 2657 0
 29635 c888 8D8D      		ldd r24,Y+29
 29636 c88a 9E8D      		ldd r25,Y+30
 29637 c88c 8A54      		subi r24,74
 29638 c88e 9D4F      		sbci r25,-3
 29639 c890 FC01      		movw r30,r24
 29640 c892 8081      		ld r24,Z
 29641 c894 9181      		ldd r25,Z+1
 29642 c896 9CA3      		std Y+36,r25
 29643 c898 8BA3      		std Y+35,r24
 29644 c89a 1C8E      		std Y+28,__zero_reg__
 29645 c89c 1B8E      		std Y+27,__zero_reg__
2658:lp_solve_5.5/lp_presolve.c ****   DeltaVrec *DV = NULL;
 29646               		.loc 2 2658 0
 29647 c89e CE01      		movw r24,r28
 29648 c8a0 8E5A      		subi r24,-82
 29649 c8a2 9F4F      		sbci r25,-1
 29650 c8a4 FC01      		movw r30,r24
 29651 c8a6 1182      		std Z+1,__zero_reg__
 29652 c8a8 1082      		st Z,__zero_reg__
2659:lp_solve_5.5/lp_presolve.c ****   LLrec     *EQ2 = NULL;
 29653               		.loc 2 2659 0
 29654 c8aa CE01      		movw r24,r28
 29655 c8ac 8C5A      		subi r24,-84
 29656 c8ae 9F4F      		sbci r25,-1
 29657 c8b0 FC01      		movw r30,r24
 29658 c8b2 1182      		std Z+1,__zero_reg__
 29659 c8b4 1082      		st Z,__zero_reg__
2660:lp_solve_5.5/lp_presolve.c **** 
2661:lp_solve_5.5/lp_presolve.c ****   /* See if there is anything to do */
2662:lp_solve_5.5/lp_presolve.c ****   if(psdata->EQmap->count == 0) {
 29660               		.loc 2 2662 0
 29661 c8b6 CE01      		movw r24,r28
 29662 c8b8 8A5A      		subi r24,-86
 29663 c8ba 9F4F      		sbci r25,-1
 29664 c8bc FC01      		movw r30,r24
 29665 c8be 8081      		ld r24,Z
 29666 c8c0 9181      		ldd r25,Z+1
 29667 c8c2 FC01      		movw r30,r24
 29668 c8c4 8481      		ldd r24,Z+4
 29669 c8c6 9581      		ldd r25,Z+5
 29670 c8c8 FC01      		movw r30,r24
 29671 c8ca 8281      		ldd r24,Z+2
 29672 c8cc 9381      		ldd r25,Z+3
 29673 c8ce 892B      		or r24,r25
 29674 c8d0 01F4      		brne .L1271
2663:lp_solve_5.5/lp_presolve.c ****     (*nSum) = 0;
 29675               		.loc 2 2663 0
 29676 c8d2 CE01      		movw r24,r28
 29677 c8d4 825A      		subi r24,-94
 29678 c8d6 9F4F      		sbci r25,-1
 29679 c8d8 FC01      		movw r30,r24
 29680 c8da 8081      		ld r24,Z
 29681 c8dc 9181      		ldd r25,Z+1
 29682 c8de FC01      		movw r30,r24
 29683 c8e0 1182      		std Z+1,__zero_reg__
 29684 c8e2 1082      		st Z,__zero_reg__
2664:lp_solve_5.5/lp_presolve.c ****     return( status );
 29685               		.loc 2 2664 0
 29686 c8e4 89A1      		ldd r24,Y+33
 29687 c8e6 9AA1      		ldd r25,Y+34
 29688 c8e8 0C94 0000 		jmp .L1384
 29689               	.L1271:
2665:lp_solve_5.5/lp_presolve.c ****   }
2666:lp_solve_5.5/lp_presolve.c **** 
2667:lp_solve_5.5/lp_presolve.c ****   /* Tally counts */
2668:lp_solve_5.5/lp_presolve.c ****   createLink(lp->rows, &EQ2, NULL);
 29690               		.loc 2 2668 0
 29691 c8ec 8D8D      		ldd r24,Y+29
 29692 c8ee 9E8D      		ldd r25,Y+30
 29693 c8f0 8651      		subi r24,22
 29694 c8f2 9E4F      		sbci r25,-2
 29695 c8f4 FC01      		movw r30,r24
 29696 c8f6 8081      		ld r24,Z
 29697 c8f8 9181      		ldd r25,Z+1
 29698 c8fa 9E01      		movw r18,r28
 29699 c8fc 2C5A      		subi r18,-84
 29700 c8fe 3F4F      		sbci r19,-1
 29701 c900 40E0      		ldi r20,0
 29702 c902 50E0      		ldi r21,0
 29703 c904 B901      		movw r22,r18
 29704 c906 0E94 0000 		call createLink
2669:lp_solve_5.5/lp_presolve.c ****   if((EQ2 == NULL) || !allocREAL(lp, &colvalue, nrows+1, FALSE) ||
 29705               		.loc 2 2669 0
 29706 c90a CE01      		movw r24,r28
 29707 c90c 8C5A      		subi r24,-84
 29708 c90e 9F4F      		sbci r25,-1
 29709 c910 FC01      		movw r30,r24
 29710 c912 8081      		ld r24,Z
 29711 c914 9181      		ldd r25,Z+1
 29712 c916 892B      		or r24,r25
 29713 c918 01F4      		brne .+4
 29714 c91a 0C94 0000 		jmp .L1273
 29715               		.loc 2 2669 0 is_stmt 0 discriminator 1
 29716 c91e 8F8D      		ldd r24,Y+31
 29717 c920 98A1      		ldd r25,Y+32
 29718 c922 AC01      		movw r20,r24
 29719 c924 4F5F      		subi r20,-1
 29720 c926 5F4F      		sbci r21,-1
 29721 c928 BE01      		movw r22,r28
 29722 c92a 625B      		subi r22,-78
 29723 c92c 7F4F      		sbci r23,-1
 29724 c92e 8D8D      		ldd r24,Y+29
 29725 c930 9E8D      		ldd r25,Y+30
 29726 c932 20E0      		ldi r18,0
 29727 c934 0E94 0000 		call allocREAL
 29728 c938 8823      		tst r24
 29729 c93a 01F4      		brne .+4
 29730 c93c 0C94 0000 		jmp .L1273
2670:lp_solve_5.5/lp_presolve.c ****                       !allocREAL(lp, &delvalue, nrows+1, FALSE))
 29731               		.loc 2 2670 0 is_stmt 1 discriminator 2
 29732 c940 8F8D      		ldd r24,Y+31
 29733 c942 98A1      		ldd r25,Y+32
 29734 c944 AC01      		movw r20,r24
 29735 c946 4F5F      		subi r20,-1
 29736 c948 5F4F      		sbci r21,-1
 29737 c94a BE01      		movw r22,r28
 29738 c94c 605B      		subi r22,-80
 29739 c94e 7F4F      		sbci r23,-1
 29740 c950 8D8D      		ldd r24,Y+29
 29741 c952 9E8D      		ldd r25,Y+30
 29742 c954 20E0      		ldi r18,0
 29743 c956 0E94 0000 		call allocREAL
2669:lp_solve_5.5/lp_presolve.c ****   if((EQ2 == NULL) || !allocREAL(lp, &colvalue, nrows+1, FALSE) ||
 29744               		.loc 2 2669 0 discriminator 2
 29745 c95a 8823      		tst r24
 29746 c95c 01F4      		brne .+4
 29747 c95e 0C94 0000 		jmp .L1273
2671:lp_solve_5.5/lp_presolve.c ****     goto Finish;
2672:lp_solve_5.5/lp_presolve.c ****   for(i = firstActiveLink(psdata->EQmap); i > 0; i = nextActiveLink(psdata->EQmap, i)) {
 29748               		.loc 2 2672 0
 29749 c962 CE01      		movw r24,r28
 29750 c964 8A5A      		subi r24,-86
 29751 c966 9F4F      		sbci r25,-1
 29752 c968 FC01      		movw r30,r24
 29753 c96a 8081      		ld r24,Z
 29754 c96c 9181      		ldd r25,Z+1
 29755 c96e FC01      		movw r30,r24
 29756 c970 8481      		ldd r24,Z+4
 29757 c972 9581      		ldd r25,Z+5
 29758 c974 0E94 0000 		call firstActiveLink
 29759 c978 9C83      		std Y+4,r25
 29760 c97a 8B83      		std Y+3,r24
 29761 c97c 00C0      		rjmp .L1274
 29762               	.L1276:
2673:lp_solve_5.5/lp_presolve.c ****     if(presolve_rowlength(psdata, i) == 2)
 29763               		.loc 2 2673 0
 29764 c97e 2B81      		ldd r18,Y+3
 29765 c980 3C81      		ldd r19,Y+4
 29766 c982 CE01      		movw r24,r28
 29767 c984 8A5A      		subi r24,-86
 29768 c986 9F4F      		sbci r25,-1
 29769 c988 FC01      		movw r30,r24
 29770 c98a 8081      		ld r24,Z
 29771 c98c 9181      		ldd r25,Z+1
 29772 c98e B901      		movw r22,r18
 29773 c990 0E94 0000 		call presolve_rowlength
 29774 c994 0297      		sbiw r24,2
 29775 c996 01F4      		brne .L1275
2674:lp_solve_5.5/lp_presolve.c ****       appendLink(EQ2, i);
 29776               		.loc 2 2674 0
 29777 c998 CE01      		movw r24,r28
 29778 c99a 8C5A      		subi r24,-84
 29779 c99c 9F4F      		sbci r25,-1
 29780 c99e FC01      		movw r30,r24
 29781 c9a0 8081      		ld r24,Z
 29782 c9a2 9181      		ldd r25,Z+1
 29783 c9a4 2B81      		ldd r18,Y+3
 29784 c9a6 3C81      		ldd r19,Y+4
 29785 c9a8 B901      		movw r22,r18
 29786 c9aa 0E94 0000 		call appendLink
 29787               	.L1275:
2672:lp_solve_5.5/lp_presolve.c ****     if(presolve_rowlength(psdata, i) == 2)
 29788               		.loc 2 2672 0 discriminator 2
 29789 c9ae CE01      		movw r24,r28
 29790 c9b0 8A5A      		subi r24,-86
 29791 c9b2 9F4F      		sbci r25,-1
 29792 c9b4 FC01      		movw r30,r24
 29793 c9b6 8081      		ld r24,Z
 29794 c9b8 9181      		ldd r25,Z+1
 29795 c9ba FC01      		movw r30,r24
 29796 c9bc 8481      		ldd r24,Z+4
 29797 c9be 9581      		ldd r25,Z+5
 29798 c9c0 2B81      		ldd r18,Y+3
 29799 c9c2 3C81      		ldd r19,Y+4
 29800 c9c4 B901      		movw r22,r18
 29801 c9c6 0E94 0000 		call nextActiveLink
 29802 c9ca 9C83      		std Y+4,r25
 29803 c9cc 8B83      		std Y+3,r24
 29804               	.L1274:
2672:lp_solve_5.5/lp_presolve.c ****     if(presolve_rowlength(psdata, i) == 2)
 29805               		.loc 2 2672 0 is_stmt 0 discriminator 1
 29806 c9ce 8B81      		ldd r24,Y+3
 29807 c9d0 9C81      		ldd r25,Y+4
 29808 c9d2 1816      		cp __zero_reg__,r24
 29809 c9d4 1906      		cpc __zero_reg__,r25
 29810 c9d6 04F0      		brlt .L1276
2675:lp_solve_5.5/lp_presolve.c ****   }
2676:lp_solve_5.5/lp_presolve.c ****   if(EQ2->count == 0)
 29811               		.loc 2 2676 0 is_stmt 1
 29812 c9d8 CE01      		movw r24,r28
 29813 c9da 8C5A      		subi r24,-84
 29814 c9dc 9F4F      		sbci r25,-1
 29815 c9de FC01      		movw r30,r24
 29816 c9e0 8081      		ld r24,Z
 29817 c9e2 9181      		ldd r25,Z+1
 29818 c9e4 FC01      		movw r30,r24
 29819 c9e6 8281      		ldd r24,Z+2
 29820 c9e8 9381      		ldd r25,Z+3
 29821 c9ea 892B      		or r24,r25
 29822 c9ec 01F4      		brne .+4
 29823 c9ee 0C94 0000 		jmp .L1425
2677:lp_solve_5.5/lp_presolve.c ****     goto Finish;
2678:lp_solve_5.5/lp_presolve.c ****   n = 0;
 29824               		.loc 2 2678 0
 29825 c9f2 1A82      		std Y+2,__zero_reg__
 29826 c9f4 1982      		std Y+1,__zero_reg__
2679:lp_solve_5.5/lp_presolve.c **** 
2680:lp_solve_5.5/lp_presolve.c ****   /* Do the elimination loop for all identified 2-element equalities */
2681:lp_solve_5.5/lp_presolve.c ****   for(i = firstActiveLink(EQ2); i > 0; i = nextActiveLink(EQ2, i)) {
 29827               		.loc 2 2681 0
 29828 c9f6 CE01      		movw r24,r28
 29829 c9f8 8C5A      		subi r24,-84
 29830 c9fa 9F4F      		sbci r25,-1
 29831 c9fc FC01      		movw r30,r24
 29832 c9fe 8081      		ld r24,Z
 29833 ca00 9181      		ldd r25,Z+1
 29834 ca02 0E94 0000 		call firstActiveLink
 29835 ca06 9C83      		std Y+4,r25
 29836 ca08 8B83      		std Y+3,r24
 29837 ca0a 0C94 0000 		jmp .L1278
 29838               	.L1379:
2682:lp_solve_5.5/lp_presolve.c **** 
2683:lp_solve_5.5/lp_presolve.c ****     /* Check if the constraint has been modified by a previous elimination */
2684:lp_solve_5.5/lp_presolve.c ****     if(presolve_rowlength(psdata, i) != 2)
 29839               		.loc 2 2684 0
 29840 ca0e 2B81      		ldd r18,Y+3
 29841 ca10 3C81      		ldd r19,Y+4
 29842 ca12 CE01      		movw r24,r28
 29843 ca14 8A5A      		subi r24,-86
 29844 ca16 9F4F      		sbci r25,-1
 29845 ca18 FC01      		movw r30,r24
 29846 ca1a 8081      		ld r24,Z
 29847 ca1c 9181      		ldd r25,Z+1
 29848 ca1e B901      		movw r22,r18
 29849 ca20 0E94 0000 		call presolve_rowlength
 29850 ca24 0297      		sbiw r24,2
 29851 ca26 01F0      		breq .+4
 29852 ca28 0C94 0000 		jmp .L1426
2685:lp_solve_5.5/lp_presolve.c ****       continue;
2686:lp_solve_5.5/lp_presolve.c **** 
2687:lp_solve_5.5/lp_presolve.c ****     /* Get the column indeces of NZ-values of the "pivot" row */
2688:lp_solve_5.5/lp_presolve.c ****     item = 0;
 29853               		.loc 2 2688 0
 29854 ca2c 1FAE      		std Y+63,__zero_reg__
 29855 ca2e 1EAE      		std Y+62,__zero_reg__
2689:lp_solve_5.5/lp_presolve.c ****     jx  = presolve_nextcol(psdata, i, &item);   /* Eliminated variable coefficient    b */
 29856               		.loc 2 2689 0
 29857 ca30 AE01      		movw r20,r28
 29858 ca32 425C      		subi r20,-62
 29859 ca34 5F4F      		sbci r21,-1
 29860 ca36 2B81      		ldd r18,Y+3
 29861 ca38 3C81      		ldd r19,Y+4
 29862 ca3a CE01      		movw r24,r28
 29863 ca3c 8A5A      		subi r24,-86
 29864 ca3e 9F4F      		sbci r25,-1
 29865 ca40 FC01      		movw r30,r24
 29866 ca42 8081      		ld r24,Z
 29867 ca44 9181      		ldd r25,Z+1
 29868 ca46 B901      		movw r22,r18
 29869 ca48 0E94 0000 		call presolve_nextcol
 29870 ca4c 9BAF      		std Y+59,r25
 29871 ca4e 8AAF      		std Y+58,r24
2690:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
2691:lp_solve_5.5/lp_presolve.c ****     if(jx < 0)
2692:lp_solve_5.5/lp_presolve.c ****       report(lp, SEVERE, "presolve_elimeq2: No qualifying %dst column was found in row %s (ostensib
2693:lp_solve_5.5/lp_presolve.c ****                          1, get_row_name(lp, i), presolve_rowlength(psdata, i));
2694:lp_solve_5.5/lp_presolve.c **** #endif
2695:lp_solve_5.5/lp_presolve.c ****     Coeff2 = ROW_MAT_VALUE(jx);
 29872               		.loc 2 2695 0
 29873 ca50 8BA1      		ldd r24,Y+35
 29874 ca52 9CA1      		ldd r25,Y+36
 29875 ca54 FC01      		movw r30,r24
 29876 ca56 2089      		ldd r18,Z+16
 29877 ca58 3189      		ldd r19,Z+17
 29878 ca5a 8BA1      		ldd r24,Y+35
 29879 ca5c 9CA1      		ldd r25,Y+36
 29880 ca5e FC01      		movw r30,r24
 29881 ca60 4689      		ldd r20,Z+22
 29882 ca62 5789      		ldd r21,Z+23
 29883 ca64 8AAD      		ldd r24,Y+58
 29884 ca66 9BAD      		ldd r25,Y+59
 29885 ca68 880F      		lsl r24
 29886 ca6a 991F      		rol r25
 29887 ca6c 840F      		add r24,r20
 29888 ca6e 951F      		adc r25,r21
 29889 ca70 FC01      		movw r30,r24
 29890 ca72 8081      		ld r24,Z
 29891 ca74 9181      		ldd r25,Z+1
 29892 ca76 880F      		lsl r24
 29893 ca78 991F      		rol r25
 29894 ca7a 880F      		lsl r24
 29895 ca7c 991F      		rol r25
 29896 ca7e 820F      		add r24,r18
 29897 ca80 931F      		adc r25,r19
 29898 ca82 FC01      		movw r30,r24
 29899 ca84 8081      		ld r24,Z
 29900 ca86 9181      		ldd r25,Z+1
 29901 ca88 A281      		ldd r26,Z+2
 29902 ca8a B381      		ldd r27,Z+3
 29903 ca8c 9E01      		movw r18,r28
 29904 ca8e 2A5B      		subi r18,-70
 29905 ca90 3F4F      		sbci r19,-1
 29906 ca92 F901      		movw r30,r18
 29907 ca94 8083      		st Z,r24
 29908 ca96 9183      		std Z+1,r25
 29909 ca98 A283      		std Z+2,r26
 29910 ca9a B383      		std Z+3,r27
2696:lp_solve_5.5/lp_presolve.c ****     jx  = ROW_MAT_COLNR(jx);
 29911               		.loc 2 2696 0
 29912 ca9c 8BA1      		ldd r24,Y+35
 29913 ca9e 9CA1      		ldd r25,Y+36
 29914 caa0 FC01      		movw r30,r24
 29915 caa2 2485      		ldd r18,Z+12
 29916 caa4 3585      		ldd r19,Z+13
 29917 caa6 8BA1      		ldd r24,Y+35
 29918 caa8 9CA1      		ldd r25,Y+36
 29919 caaa FC01      		movw r30,r24
 29920 caac 4689      		ldd r20,Z+22
 29921 caae 5789      		ldd r21,Z+23
 29922 cab0 8AAD      		ldd r24,Y+58
 29923 cab2 9BAD      		ldd r25,Y+59
 29924 cab4 880F      		lsl r24
 29925 cab6 991F      		rol r25
 29926 cab8 840F      		add r24,r20
 29927 caba 951F      		adc r25,r21
 29928 cabc FC01      		movw r30,r24
 29929 cabe 8081      		ld r24,Z
 29930 cac0 9181      		ldd r25,Z+1
 29931 cac2 880F      		lsl r24
 29932 cac4 991F      		rol r25
 29933 cac6 820F      		add r24,r18
 29934 cac8 931F      		adc r25,r19
 29935 caca FC01      		movw r30,r24
 29936 cacc 8081      		ld r24,Z
 29937 cace 9181      		ldd r25,Z+1
 29938 cad0 9BAF      		std Y+59,r25
 29939 cad2 8AAF      		std Y+58,r24
2697:lp_solve_5.5/lp_presolve.c ****     jjx = presolve_nextcol(psdata, i, &item);  /* Non-eliminated variable coefficient a */
 29940               		.loc 2 2697 0
 29941 cad4 AE01      		movw r20,r28
 29942 cad6 425C      		subi r20,-62
 29943 cad8 5F4F      		sbci r21,-1
 29944 cada 2B81      		ldd r18,Y+3
 29945 cadc 3C81      		ldd r19,Y+4
 29946 cade CE01      		movw r24,r28
 29947 cae0 8A5A      		subi r24,-86
 29948 cae2 9F4F      		sbci r25,-1
 29949 cae4 FC01      		movw r30,r24
 29950 cae6 8081      		ld r24,Z
 29951 cae8 9181      		ldd r25,Z+1
 29952 caea B901      		movw r22,r18
 29953 caec 0E94 0000 		call presolve_nextcol
 29954 caf0 9DAF      		std Y+61,r25
 29955 caf2 8CAF      		std Y+60,r24
2698:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
2699:lp_solve_5.5/lp_presolve.c ****     if(jjx < 0)
2700:lp_solve_5.5/lp_presolve.c ****       report(lp, SEVERE, "presolve_elimeq2: No qualifying %dnd column was found in row %s (ostensib
2701:lp_solve_5.5/lp_presolve.c ****                           2, get_row_name(lp, i), presolve_rowlength(psdata, i));
2702:lp_solve_5.5/lp_presolve.c **** #endif
2703:lp_solve_5.5/lp_presolve.c ****     Coeff1 = ROW_MAT_VALUE(jjx);
 29956               		.loc 2 2703 0
 29957 caf4 8BA1      		ldd r24,Y+35
 29958 caf6 9CA1      		ldd r25,Y+36
 29959 caf8 FC01      		movw r30,r24
 29960 cafa 2089      		ldd r18,Z+16
 29961 cafc 3189      		ldd r19,Z+17
 29962 cafe 8BA1      		ldd r24,Y+35
 29963 cb00 9CA1      		ldd r25,Y+36
 29964 cb02 FC01      		movw r30,r24
 29965 cb04 4689      		ldd r20,Z+22
 29966 cb06 5789      		ldd r21,Z+23
 29967 cb08 8CAD      		ldd r24,Y+60
 29968 cb0a 9DAD      		ldd r25,Y+61
 29969 cb0c 880F      		lsl r24
 29970 cb0e 991F      		rol r25
 29971 cb10 840F      		add r24,r20
 29972 cb12 951F      		adc r25,r21
 29973 cb14 FC01      		movw r30,r24
 29974 cb16 8081      		ld r24,Z
 29975 cb18 9181      		ldd r25,Z+1
 29976 cb1a 880F      		lsl r24
 29977 cb1c 991F      		rol r25
 29978 cb1e 880F      		lsl r24
 29979 cb20 991F      		rol r25
 29980 cb22 820F      		add r24,r18
 29981 cb24 931F      		adc r25,r19
 29982 cb26 FC01      		movw r30,r24
 29983 cb28 8081      		ld r24,Z
 29984 cb2a 9181      		ldd r25,Z+1
 29985 cb2c A281      		ldd r26,Z+2
 29986 cb2e B381      		ldd r27,Z+3
 29987 cb30 9E01      		movw r18,r28
 29988 cb32 2E5B      		subi r18,-66
 29989 cb34 3F4F      		sbci r19,-1
 29990 cb36 F901      		movw r30,r18
 29991 cb38 8083      		st Z,r24
 29992 cb3a 9183      		std Z+1,r25
 29993 cb3c A283      		std Z+2,r26
 29994 cb3e B383      		std Z+3,r27
2704:lp_solve_5.5/lp_presolve.c ****     jjx = ROW_MAT_COLNR(jjx);
 29995               		.loc 2 2704 0
 29996 cb40 8BA1      		ldd r24,Y+35
 29997 cb42 9CA1      		ldd r25,Y+36
 29998 cb44 FC01      		movw r30,r24
 29999 cb46 2485      		ldd r18,Z+12
 30000 cb48 3585      		ldd r19,Z+13
 30001 cb4a 8BA1      		ldd r24,Y+35
 30002 cb4c 9CA1      		ldd r25,Y+36
 30003 cb4e FC01      		movw r30,r24
 30004 cb50 4689      		ldd r20,Z+22
 30005 cb52 5789      		ldd r21,Z+23
 30006 cb54 8CAD      		ldd r24,Y+60
 30007 cb56 9DAD      		ldd r25,Y+61
 30008 cb58 880F      		lsl r24
 30009 cb5a 991F      		rol r25
 30010 cb5c 840F      		add r24,r20
 30011 cb5e 951F      		adc r25,r21
 30012 cb60 FC01      		movw r30,r24
 30013 cb62 8081      		ld r24,Z
 30014 cb64 9181      		ldd r25,Z+1
 30015 cb66 880F      		lsl r24
 30016 cb68 991F      		rol r25
 30017 cb6a 820F      		add r24,r18
 30018 cb6c 931F      		adc r25,r19
 30019 cb6e FC01      		movw r30,r24
 30020 cb70 8081      		ld r24,Z
 30021 cb72 9181      		ldd r25,Z+1
 30022 cb74 9DAF      		std Y+61,r25
 30023 cb76 8CAF      		std Y+60,r24
2705:lp_solve_5.5/lp_presolve.c **** 
2706:lp_solve_5.5/lp_presolve.c ****     /* Check if at least one of the coefficients is large enough to preserve stability;
2707:lp_solve_5.5/lp_presolve.c ****        use opposing maximum column values for stability testing. */
2708:lp_solve_5.5/lp_presolve.c ****     if((fabs(Coeff1) < psdata->epspivot*mat->colmax[jx]) &&
 30024               		.loc 2 2708 0
 30025 cb78 CE01      		movw r24,r28
 30026 cb7a 8E5B      		subi r24,-66
 30027 cb7c 9F4F      		sbci r25,-1
 30028 cb7e FC01      		movw r30,r24
 30029 cb80 8081      		ld r24,Z
 30030 cb82 9181      		ldd r25,Z+1
 30031 cb84 A281      		ldd r26,Z+2
 30032 cb86 B381      		ldd r27,Z+3
 30033 cb88 6C01      		movw r12,r24
 30034 cb8a 7D01      		movw r14,r26
 30035 cb8c E894      		clt
 30036 cb8e F7F8      		bld r15,7
 30037 cb90 CE01      		movw r24,r28
 30038 cb92 8A5A      		subi r24,-86
 30039 cb94 9F4F      		sbci r25,-1
 30040 cb96 FC01      		movw r30,r24
 30041 cb98 8081      		ld r24,Z
 30042 cb9a 9181      		ldd r25,Z+1
 30043 cb9c FC01      		movw r30,r24
 30044 cb9e 808D      		ldd r24,Z+24
 30045 cba0 918D      		ldd r25,Z+25
 30046 cba2 A28D      		ldd r26,Z+26
 30047 cba4 B38D      		ldd r27,Z+27
 30048 cba6 2BA1      		ldd r18,Y+35
 30049 cba8 3CA1      		ldd r19,Y+36
 30050 cbaa F901      		movw r30,r18
 30051 cbac 448D      		ldd r20,Z+28
 30052 cbae 558D      		ldd r21,Z+29
 30053 cbb0 2AAD      		ldd r18,Y+58
 30054 cbb2 3BAD      		ldd r19,Y+59
 30055 cbb4 220F      		lsl r18
 30056 cbb6 331F      		rol r19
 30057 cbb8 220F      		lsl r18
 30058 cbba 331F      		rol r19
 30059 cbbc 240F      		add r18,r20
 30060 cbbe 351F      		adc r19,r21
 30061 cbc0 F901      		movw r30,r18
 30062 cbc2 2081      		ld r18,Z
 30063 cbc4 3181      		ldd r19,Z+1
 30064 cbc6 4281      		ldd r20,Z+2
 30065 cbc8 5381      		ldd r21,Z+3
 30066 cbca BC01      		movw r22,r24
 30067 cbcc CD01      		movw r24,r26
 30068 cbce 0E94 0000 		call __mulsf3
 30069 cbd2 DC01      		movw r26,r24
 30070 cbd4 CB01      		movw r24,r22
 30071 cbd6 9C01      		movw r18,r24
 30072 cbd8 AD01      		movw r20,r26
 30073 cbda C701      		movw r24,r14
 30074 cbdc B601      		movw r22,r12
 30075 cbde 0E94 0000 		call __ltsf2
 30076 cbe2 8823      		tst r24
 30077 cbe4 04F0      		brlt .+2
 30078 cbe6 00C0      		rjmp .L1281
2709:lp_solve_5.5/lp_presolve.c ****        ((fabs(Coeff1) != 1) && (fabs(Coeff2) != 1)) &&
 30079               		.loc 2 2709 0 discriminator 1
 30080 cbe8 CE01      		movw r24,r28
 30081 cbea 8E5B      		subi r24,-66
 30082 cbec 9F4F      		sbci r25,-1
 30083 cbee FC01      		movw r30,r24
 30084 cbf0 8081      		ld r24,Z
 30085 cbf2 9181      		ldd r25,Z+1
 30086 cbf4 A281      		ldd r26,Z+2
 30087 cbf6 B381      		ldd r27,Z+3
 30088 cbf8 BF77      		andi r27,0x7f
2708:lp_solve_5.5/lp_presolve.c ****        ((fabs(Coeff1) != 1) && (fabs(Coeff2) != 1)) &&
 30089               		.loc 2 2708 0 discriminator 1
 30090 cbfa 20E0      		ldi r18,0
 30091 cbfc 30E0      		ldi r19,0
 30092 cbfe 40E8      		ldi r20,lo8(-128)
 30093 cc00 5FE3      		ldi r21,lo8(63)
 30094 cc02 BC01      		movw r22,r24
 30095 cc04 CD01      		movw r24,r26
 30096 cc06 0E94 0000 		call __nesf2
 30097 cc0a 8823      		tst r24
 30098 cc0c 01F4      		brne .+2
 30099 cc0e 00C0      		rjmp .L1281
 30100               		.loc 2 2709 0
 30101 cc10 CE01      		movw r24,r28
 30102 cc12 8A5B      		subi r24,-70
 30103 cc14 9F4F      		sbci r25,-1
 30104 cc16 FC01      		movw r30,r24
 30105 cc18 8081      		ld r24,Z
 30106 cc1a 9181      		ldd r25,Z+1
 30107 cc1c A281      		ldd r26,Z+2
 30108 cc1e B381      		ldd r27,Z+3
 30109 cc20 BF77      		andi r27,0x7f
 30110 cc22 20E0      		ldi r18,0
 30111 cc24 30E0      		ldi r19,0
 30112 cc26 40E8      		ldi r20,lo8(-128)
 30113 cc28 5FE3      		ldi r21,lo8(63)
 30114 cc2a BC01      		movw r22,r24
 30115 cc2c CD01      		movw r24,r26
 30116 cc2e 0E94 0000 		call __nesf2
 30117 cc32 8823      		tst r24
 30118 cc34 01F0      		breq .L1281
2710:lp_solve_5.5/lp_presolve.c ****        (fabs(Coeff2) < psdata->epspivot*mat->colmax[jjx]))
 30119               		.loc 2 2710 0 discriminator 1
 30120 cc36 CE01      		movw r24,r28
 30121 cc38 8A5B      		subi r24,-70
 30122 cc3a 9F4F      		sbci r25,-1
 30123 cc3c FC01      		movw r30,r24
 30124 cc3e 8081      		ld r24,Z
 30125 cc40 9181      		ldd r25,Z+1
 30126 cc42 A281      		ldd r26,Z+2
 30127 cc44 B381      		ldd r27,Z+3
 30128 cc46 6C01      		movw r12,r24
 30129 cc48 7D01      		movw r14,r26
 30130 cc4a E894      		clt
 30131 cc4c F7F8      		bld r15,7
 30132 cc4e CE01      		movw r24,r28
 30133 cc50 8A5A      		subi r24,-86
 30134 cc52 9F4F      		sbci r25,-1
 30135 cc54 FC01      		movw r30,r24
 30136 cc56 8081      		ld r24,Z
 30137 cc58 9181      		ldd r25,Z+1
 30138 cc5a FC01      		movw r30,r24
 30139 cc5c 808D      		ldd r24,Z+24
 30140 cc5e 918D      		ldd r25,Z+25
 30141 cc60 A28D      		ldd r26,Z+26
 30142 cc62 B38D      		ldd r27,Z+27
 30143 cc64 2BA1      		ldd r18,Y+35
 30144 cc66 3CA1      		ldd r19,Y+36
 30145 cc68 F901      		movw r30,r18
 30146 cc6a 448D      		ldd r20,Z+28
 30147 cc6c 558D      		ldd r21,Z+29
 30148 cc6e 2CAD      		ldd r18,Y+60
 30149 cc70 3DAD      		ldd r19,Y+61
 30150 cc72 220F      		lsl r18
 30151 cc74 331F      		rol r19
 30152 cc76 220F      		lsl r18
 30153 cc78 331F      		rol r19
 30154 cc7a 240F      		add r18,r20
 30155 cc7c 351F      		adc r19,r21
 30156 cc7e F901      		movw r30,r18
 30157 cc80 2081      		ld r18,Z
 30158 cc82 3181      		ldd r19,Z+1
 30159 cc84 4281      		ldd r20,Z+2
 30160 cc86 5381      		ldd r21,Z+3
 30161 cc88 BC01      		movw r22,r24
 30162 cc8a CD01      		movw r24,r26
 30163 cc8c 0E94 0000 		call __mulsf3
 30164 cc90 DC01      		movw r26,r24
 30165 cc92 CB01      		movw r24,r22
2709:lp_solve_5.5/lp_presolve.c ****        ((fabs(Coeff1) != 1) && (fabs(Coeff2) != 1)) &&
 30166               		.loc 2 2709 0 discriminator 1
 30167 cc94 9C01      		movw r18,r24
 30168 cc96 AD01      		movw r20,r26
 30169 cc98 C701      		movw r24,r14
 30170 cc9a B601      		movw r22,r12
 30171 cc9c 0E94 0000 		call __ltsf2
 30172 cca0 8823      		tst r24
 30173 cca2 04F4      		brge .+4
 30174 cca4 0C94 0000 		jmp .L1427
 30175               	.L1281:
2711:lp_solve_5.5/lp_presolve.c ****       continue;
2712:lp_solve_5.5/lp_presolve.c **** 
2713:lp_solve_5.5/lp_presolve.c ****     /* Cannot eliminate a variable if both are SOS members or SC variables */
2714:lp_solve_5.5/lp_presolve.c ****     if((is_semicont(lp, jx) && is_semicont(lp, jjx)) ||
 30176               		.loc 2 2714 0
 30177 cca8 2AAD      		ldd r18,Y+58
 30178 ccaa 3BAD      		ldd r19,Y+59
 30179 ccac 8D8D      		ldd r24,Y+29
 30180 ccae 9E8D      		ldd r25,Y+30
 30181 ccb0 B901      		movw r22,r18
 30182 ccb2 0E94 0000 		call is_semicont
 30183 ccb6 8823      		tst r24
 30184 ccb8 01F0      		breq .L1286
 30185               		.loc 2 2714 0 is_stmt 0 discriminator 1
 30186 ccba 2CAD      		ldd r18,Y+60
 30187 ccbc 3DAD      		ldd r19,Y+61
 30188 ccbe 8D8D      		ldd r24,Y+29
 30189 ccc0 9E8D      		ldd r25,Y+30
 30190 ccc2 B901      		movw r22,r18
 30191 ccc4 0E94 0000 		call is_semicont
 30192 ccc8 8823      		tst r24
 30193 ccca 01F0      		breq .+4
 30194 cccc 0C94 0000 		jmp .L1428
 30195               	.L1286:
2715:lp_solve_5.5/lp_presolve.c ****         (SOS_is_member(lp->SOS, 0, jx) && SOS_is_member(lp->SOS, 0, jjx)))
 30196               		.loc 2 2715 0 is_stmt 1 discriminator 3
 30197 ccd0 2AAD      		ldd r18,Y+58
 30198 ccd2 3BAD      		ldd r19,Y+59
 30199 ccd4 8D8D      		ldd r24,Y+29
 30200 ccd6 9E8D      		ldd r25,Y+30
 30201 ccd8 8256      		subi r24,98
 30202 ccda 9D4F      		sbci r25,-3
 30203 ccdc FC01      		movw r30,r24
 30204 ccde 8081      		ld r24,Z
 30205 cce0 9181      		ldd r25,Z+1
 30206 cce2 A901      		movw r20,r18
 30207 cce4 60E0      		ldi r22,0
 30208 cce6 70E0      		ldi r23,0
 30209 cce8 0E94 0000 		call SOS_is_member
2714:lp_solve_5.5/lp_presolve.c ****         (SOS_is_member(lp->SOS, 0, jx) && SOS_is_member(lp->SOS, 0, jjx)))
 30210               		.loc 2 2714 0 discriminator 3
 30211 ccec 892B      		or r24,r25
 30212 ccee 01F0      		breq .L1288
 30213               		.loc 2 2715 0
 30214 ccf0 2CAD      		ldd r18,Y+60
 30215 ccf2 3DAD      		ldd r19,Y+61
 30216 ccf4 8D8D      		ldd r24,Y+29
 30217 ccf6 9E8D      		ldd r25,Y+30
 30218 ccf8 8256      		subi r24,98
 30219 ccfa 9D4F      		sbci r25,-3
 30220 ccfc FC01      		movw r30,r24
 30221 ccfe 8081      		ld r24,Z
 30222 cd00 9181      		ldd r25,Z+1
 30223 cd02 A901      		movw r20,r18
 30224 cd04 60E0      		ldi r22,0
 30225 cd06 70E0      		ldi r23,0
 30226 cd08 0E94 0000 		call SOS_is_member
 30227 cd0c 892B      		or r24,r25
 30228 cd0e 01F0      		breq .+4
 30229 cd10 0C94 0000 		jmp .L1428
 30230               	.L1288:
2716:lp_solve_5.5/lp_presolve.c ****       continue;
2717:lp_solve_5.5/lp_presolve.c **** 
2718:lp_solve_5.5/lp_presolve.c ****     /* First check if we are allowed to swap; set swap "blockers" */
2719:lp_solve_5.5/lp_presolve.c ****     k = 0;
 30231               		.loc 2 2719 0
 30232 cd14 1E82      		std Y+6,__zero_reg__
 30233 cd16 1D82      		std Y+5,__zero_reg__
2720:lp_solve_5.5/lp_presolve.c ****     if(!is_int(lp, jx) && is_int(lp, jjx))
 30234               		.loc 2 2720 0
 30235 cd18 2AAD      		ldd r18,Y+58
 30236 cd1a 3BAD      		ldd r19,Y+59
 30237 cd1c 8D8D      		ldd r24,Y+29
 30238 cd1e 9E8D      		ldd r25,Y+30
 30239 cd20 B901      		movw r22,r18
 30240 cd22 0E94 0000 		call is_int
 30241 cd26 8823      		tst r24
 30242 cd28 01F4      		brne .L1289
 30243               		.loc 2 2720 0 is_stmt 0 discriminator 1
 30244 cd2a 2CAD      		ldd r18,Y+60
 30245 cd2c 3DAD      		ldd r19,Y+61
 30246 cd2e 8D8D      		ldd r24,Y+29
 30247 cd30 9E8D      		ldd r25,Y+30
 30248 cd32 B901      		movw r22,r18
 30249 cd34 0E94 0000 		call is_int
 30250 cd38 8823      		tst r24
 30251 cd3a 01F0      		breq .L1289
2721:lp_solve_5.5/lp_presolve.c ****       k += 1;
 30252               		.loc 2 2721 0 is_stmt 1
 30253 cd3c 8D81      		ldd r24,Y+5
 30254 cd3e 9E81      		ldd r25,Y+6
 30255 cd40 0196      		adiw r24,1
 30256 cd42 9E83      		std Y+6,r25
 30257 cd44 8D83      		std Y+5,r24
 30258 cd46 00C0      		rjmp .L1290
 30259               	.L1289:
2722:lp_solve_5.5/lp_presolve.c ****     else if(!is_semicont(lp, jx) && is_semicont(lp, jjx))
 30260               		.loc 2 2722 0
 30261 cd48 2AAD      		ldd r18,Y+58
 30262 cd4a 3BAD      		ldd r19,Y+59
 30263 cd4c 8D8D      		ldd r24,Y+29
 30264 cd4e 9E8D      		ldd r25,Y+30
 30265 cd50 B901      		movw r22,r18
 30266 cd52 0E94 0000 		call is_semicont
 30267 cd56 8823      		tst r24
 30268 cd58 01F4      		brne .L1291
 30269               		.loc 2 2722 0 is_stmt 0 discriminator 1
 30270 cd5a 2CAD      		ldd r18,Y+60
 30271 cd5c 3DAD      		ldd r19,Y+61
 30272 cd5e 8D8D      		ldd r24,Y+29
 30273 cd60 9E8D      		ldd r25,Y+30
 30274 cd62 B901      		movw r22,r18
 30275 cd64 0E94 0000 		call is_semicont
 30276 cd68 8823      		tst r24
 30277 cd6a 01F0      		breq .L1291
2723:lp_solve_5.5/lp_presolve.c ****       k += 2;
 30278               		.loc 2 2723 0 is_stmt 1
 30279 cd6c 8D81      		ldd r24,Y+5
 30280 cd6e 9E81      		ldd r25,Y+6
 30281 cd70 0296      		adiw r24,2
 30282 cd72 9E83      		std Y+6,r25
 30283 cd74 8D83      		std Y+5,r24
 30284 cd76 00C0      		rjmp .L1290
 30285               	.L1291:
2724:lp_solve_5.5/lp_presolve.c ****     else if(!SOS_is_member(lp->SOS, 0, jx) && SOS_is_member(lp->SOS, 0, jjx))
 30286               		.loc 2 2724 0
 30287 cd78 2AAD      		ldd r18,Y+58
 30288 cd7a 3BAD      		ldd r19,Y+59
 30289 cd7c 8D8D      		ldd r24,Y+29
 30290 cd7e 9E8D      		ldd r25,Y+30
 30291 cd80 8256      		subi r24,98
 30292 cd82 9D4F      		sbci r25,-3
 30293 cd84 FC01      		movw r30,r24
 30294 cd86 8081      		ld r24,Z
 30295 cd88 9181      		ldd r25,Z+1
 30296 cd8a A901      		movw r20,r18
 30297 cd8c 60E0      		ldi r22,0
 30298 cd8e 70E0      		ldi r23,0
 30299 cd90 0E94 0000 		call SOS_is_member
 30300 cd94 892B      		or r24,r25
 30301 cd96 01F4      		brne .L1290
 30302               		.loc 2 2724 0 is_stmt 0 discriminator 1
 30303 cd98 2CAD      		ldd r18,Y+60
 30304 cd9a 3DAD      		ldd r19,Y+61
 30305 cd9c 8D8D      		ldd r24,Y+29
 30306 cd9e 9E8D      		ldd r25,Y+30
 30307 cda0 8256      		subi r24,98
 30308 cda2 9D4F      		sbci r25,-3
 30309 cda4 FC01      		movw r30,r24
 30310 cda6 8081      		ld r24,Z
 30311 cda8 9181      		ldd r25,Z+1
 30312 cdaa A901      		movw r20,r18
 30313 cdac 60E0      		ldi r22,0
 30314 cdae 70E0      		ldi r23,0
 30315 cdb0 0E94 0000 		call SOS_is_member
 30316 cdb4 892B      		or r24,r25
 30317 cdb6 01F0      		breq .L1290
2725:lp_solve_5.5/lp_presolve.c ****       k += 4;
 30318               		.loc 2 2725 0 is_stmt 1
 30319 cdb8 8D81      		ldd r24,Y+5
 30320 cdba 9E81      		ldd r25,Y+6
 30321 cdbc 0496      		adiw r24,4
 30322 cdbe 9E83      		std Y+6,r25
 30323 cdc0 8D83      		std Y+5,r24
 30324               	.L1290:
2726:lp_solve_5.5/lp_presolve.c **** 
2727:lp_solve_5.5/lp_presolve.c ****     /* If there were no blockers, determine if we MUST swap the variable to be eliminated */
2728:lp_solve_5.5/lp_presolve.c ****     if(k == 0) {
 30325               		.loc 2 2728 0
 30326 cdc2 8D81      		ldd r24,Y+5
 30327 cdc4 9E81      		ldd r25,Y+6
 30328 cdc6 892B      		or r24,r25
 30329 cdc8 01F0      		breq .+2
 30330 cdca 00C0      		rjmp .L1292
2729:lp_solve_5.5/lp_presolve.c ****       if(is_int(lp, jx) && !is_int(lp, jjx))
 30331               		.loc 2 2729 0
 30332 cdcc 2AAD      		ldd r18,Y+58
 30333 cdce 3BAD      		ldd r19,Y+59
 30334 cdd0 8D8D      		ldd r24,Y+29
 30335 cdd2 9E8D      		ldd r25,Y+30
 30336 cdd4 B901      		movw r22,r18
 30337 cdd6 0E94 0000 		call is_int
 30338 cdda 8823      		tst r24
 30339 cddc 01F0      		breq .L1293
 30340               		.loc 2 2729 0 is_stmt 0 discriminator 1
 30341 cdde 2CAD      		ldd r18,Y+60
 30342 cde0 3DAD      		ldd r19,Y+61
 30343 cde2 8D8D      		ldd r24,Y+29
 30344 cde4 9E8D      		ldd r25,Y+30
 30345 cde6 B901      		movw r22,r18
 30346 cde8 0E94 0000 		call is_int
 30347 cdec 8823      		tst r24
 30348 cdee 01F4      		brne .L1293
2730:lp_solve_5.5/lp_presolve.c ****         k += 8;
 30349               		.loc 2 2730 0 is_stmt 1
 30350 cdf0 8D81      		ldd r24,Y+5
 30351 cdf2 9E81      		ldd r25,Y+6
 30352 cdf4 0896      		adiw r24,8
 30353 cdf6 9E83      		std Y+6,r25
 30354 cdf8 8D83      		std Y+5,r24
 30355 cdfa 00C0      		rjmp .L1294
 30356               	.L1293:
2731:lp_solve_5.5/lp_presolve.c ****       else if(is_semicont(lp, jx) && !is_semicont(lp, jjx))
 30357               		.loc 2 2731 0
 30358 cdfc 2AAD      		ldd r18,Y+58
 30359 cdfe 3BAD      		ldd r19,Y+59
 30360 ce00 8D8D      		ldd r24,Y+29
 30361 ce02 9E8D      		ldd r25,Y+30
 30362 ce04 B901      		movw r22,r18
 30363 ce06 0E94 0000 		call is_semicont
 30364 ce0a 8823      		tst r24
 30365 ce0c 01F0      		breq .L1295
 30366               		.loc 2 2731 0 is_stmt 0 discriminator 1
 30367 ce0e 2CAD      		ldd r18,Y+60
 30368 ce10 3DAD      		ldd r19,Y+61
 30369 ce12 8D8D      		ldd r24,Y+29
 30370 ce14 9E8D      		ldd r25,Y+30
 30371 ce16 B901      		movw r22,r18
 30372 ce18 0E94 0000 		call is_semicont
 30373 ce1c 8823      		tst r24
 30374 ce1e 01F4      		brne .L1295
2732:lp_solve_5.5/lp_presolve.c ****         k += 16;
 30375               		.loc 2 2732 0 is_stmt 1
 30376 ce20 8D81      		ldd r24,Y+5
 30377 ce22 9E81      		ldd r25,Y+6
 30378 ce24 4096      		adiw r24,16
 30379 ce26 9E83      		std Y+6,r25
 30380 ce28 8D83      		std Y+5,r24
 30381 ce2a 00C0      		rjmp .L1294
 30382               	.L1295:
2733:lp_solve_5.5/lp_presolve.c ****       else if(SOS_is_member(lp->SOS, 0, jx) && !SOS_is_member(lp->SOS, 0, jjx))
 30383               		.loc 2 2733 0
 30384 ce2c 2AAD      		ldd r18,Y+58
 30385 ce2e 3BAD      		ldd r19,Y+59
 30386 ce30 8D8D      		ldd r24,Y+29
 30387 ce32 9E8D      		ldd r25,Y+30
 30388 ce34 8256      		subi r24,98
 30389 ce36 9D4F      		sbci r25,-3
 30390 ce38 FC01      		movw r30,r24
 30391 ce3a 8081      		ld r24,Z
 30392 ce3c 9181      		ldd r25,Z+1
 30393 ce3e A901      		movw r20,r18
 30394 ce40 60E0      		ldi r22,0
 30395 ce42 70E0      		ldi r23,0
 30396 ce44 0E94 0000 		call SOS_is_member
 30397 ce48 892B      		or r24,r25
 30398 ce4a 01F0      		breq .L1294
 30399               		.loc 2 2733 0 is_stmt 0 discriminator 1
 30400 ce4c 2CAD      		ldd r18,Y+60
 30401 ce4e 3DAD      		ldd r19,Y+61
 30402 ce50 8D8D      		ldd r24,Y+29
 30403 ce52 9E8D      		ldd r25,Y+30
 30404 ce54 8256      		subi r24,98
 30405 ce56 9D4F      		sbci r25,-3
 30406 ce58 FC01      		movw r30,r24
 30407 ce5a 8081      		ld r24,Z
 30408 ce5c 9181      		ldd r25,Z+1
 30409 ce5e A901      		movw r20,r18
 30410 ce60 60E0      		ldi r22,0
 30411 ce62 70E0      		ldi r23,0
 30412 ce64 0E94 0000 		call SOS_is_member
 30413 ce68 892B      		or r24,r25
 30414 ce6a 01F4      		brne .L1294
2734:lp_solve_5.5/lp_presolve.c ****         k += 32;
 30415               		.loc 2 2734 0 is_stmt 1
 30416 ce6c 8D81      		ldd r24,Y+5
 30417 ce6e 9E81      		ldd r25,Y+6
 30418 ce70 8096      		adiw r24,32
 30419 ce72 9E83      		std Y+6,r25
 30420 ce74 8D83      		std Y+5,r24
 30421               	.L1294:
2735:lp_solve_5.5/lp_presolve.c **** 
2736:lp_solve_5.5/lp_presolve.c ****       /* If we are not forced to swap, decide if it otherwise makes sense - high order */
2737:lp_solve_5.5/lp_presolve.c ****       if(k == 0) {
 30422               		.loc 2 2737 0
 30423 ce76 8D81      		ldd r24,Y+5
 30424 ce78 9E81      		ldd r25,Y+6
 30425 ce7a 892B      		or r24,r25
 30426 ce7c 01F0      		breq .+2
 30427 ce7e 00C0      		rjmp .L1296
2738:lp_solve_5.5/lp_presolve.c ****         if((fabs(Coeff2) < psdata->epspivot*mat->colmax[jjx]) &&
 30428               		.loc 2 2738 0
 30429 ce80 CE01      		movw r24,r28
 30430 ce82 8A5B      		subi r24,-70
 30431 ce84 9F4F      		sbci r25,-1
 30432 ce86 FC01      		movw r30,r24
 30433 ce88 8081      		ld r24,Z
 30434 ce8a 9181      		ldd r25,Z+1
 30435 ce8c A281      		ldd r26,Z+2
 30436 ce8e B381      		ldd r27,Z+3
 30437 ce90 6C01      		movw r12,r24
 30438 ce92 7D01      		movw r14,r26
 30439 ce94 E894      		clt
 30440 ce96 F7F8      		bld r15,7
 30441 ce98 CE01      		movw r24,r28
 30442 ce9a 8A5A      		subi r24,-86
 30443 ce9c 9F4F      		sbci r25,-1
 30444 ce9e FC01      		movw r30,r24
 30445 cea0 8081      		ld r24,Z
 30446 cea2 9181      		ldd r25,Z+1
 30447 cea4 FC01      		movw r30,r24
 30448 cea6 808D      		ldd r24,Z+24
 30449 cea8 918D      		ldd r25,Z+25
 30450 ceaa A28D      		ldd r26,Z+26
 30451 ceac B38D      		ldd r27,Z+27
 30452 ceae 2BA1      		ldd r18,Y+35
 30453 ceb0 3CA1      		ldd r19,Y+36
 30454 ceb2 F901      		movw r30,r18
 30455 ceb4 448D      		ldd r20,Z+28
 30456 ceb6 558D      		ldd r21,Z+29
 30457 ceb8 2CAD      		ldd r18,Y+60
 30458 ceba 3DAD      		ldd r19,Y+61
 30459 cebc 220F      		lsl r18
 30460 cebe 331F      		rol r19
 30461 cec0 220F      		lsl r18
 30462 cec2 331F      		rol r19
 30463 cec4 240F      		add r18,r20
 30464 cec6 351F      		adc r19,r21
 30465 cec8 F901      		movw r30,r18
 30466 ceca 2081      		ld r18,Z
 30467 cecc 3181      		ldd r19,Z+1
 30468 cece 4281      		ldd r20,Z+2
 30469 ced0 5381      		ldd r21,Z+3
 30470 ced2 BC01      		movw r22,r24
 30471 ced4 CD01      		movw r24,r26
 30472 ced6 0E94 0000 		call __mulsf3
 30473 ceda DC01      		movw r26,r24
 30474 cedc CB01      		movw r24,r22
 30475 cede 9C01      		movw r18,r24
 30476 cee0 AD01      		movw r20,r26
 30477 cee2 C701      		movw r24,r14
 30478 cee4 B601      		movw r22,r12
 30479 cee6 0E94 0000 		call __ltsf2
 30480 ceea 8823      		tst r24
 30481 ceec 04F0      		brlt .+2
 30482 ceee 00C0      		rjmp .L1297
2739:lp_solve_5.5/lp_presolve.c ****            (fabs(Coeff1) > psdata->epspivot*mat->colmax[jx]))
 30483               		.loc 2 2739 0 discriminator 1
 30484 cef0 CE01      		movw r24,r28
 30485 cef2 8E5B      		subi r24,-66
 30486 cef4 9F4F      		sbci r25,-1
 30487 cef6 FC01      		movw r30,r24
 30488 cef8 8081      		ld r24,Z
 30489 cefa 9181      		ldd r25,Z+1
 30490 cefc A281      		ldd r26,Z+2
 30491 cefe B381      		ldd r27,Z+3
 30492 cf00 6C01      		movw r12,r24
 30493 cf02 7D01      		movw r14,r26
 30494 cf04 E894      		clt
 30495 cf06 F7F8      		bld r15,7
 30496 cf08 CE01      		movw r24,r28
 30497 cf0a 8A5A      		subi r24,-86
 30498 cf0c 9F4F      		sbci r25,-1
 30499 cf0e FC01      		movw r30,r24
 30500 cf10 8081      		ld r24,Z
 30501 cf12 9181      		ldd r25,Z+1
 30502 cf14 FC01      		movw r30,r24
 30503 cf16 808D      		ldd r24,Z+24
 30504 cf18 918D      		ldd r25,Z+25
 30505 cf1a A28D      		ldd r26,Z+26
 30506 cf1c B38D      		ldd r27,Z+27
 30507 cf1e 2BA1      		ldd r18,Y+35
 30508 cf20 3CA1      		ldd r19,Y+36
 30509 cf22 F901      		movw r30,r18
 30510 cf24 448D      		ldd r20,Z+28
 30511 cf26 558D      		ldd r21,Z+29
 30512 cf28 2AAD      		ldd r18,Y+58
 30513 cf2a 3BAD      		ldd r19,Y+59
 30514 cf2c 220F      		lsl r18
 30515 cf2e 331F      		rol r19
 30516 cf30 220F      		lsl r18
 30517 cf32 331F      		rol r19
 30518 cf34 240F      		add r18,r20
 30519 cf36 351F      		adc r19,r21
 30520 cf38 F901      		movw r30,r18
 30521 cf3a 2081      		ld r18,Z
 30522 cf3c 3181      		ldd r19,Z+1
 30523 cf3e 4281      		ldd r20,Z+2
 30524 cf40 5381      		ldd r21,Z+3
 30525 cf42 BC01      		movw r22,r24
 30526 cf44 CD01      		movw r24,r26
 30527 cf46 0E94 0000 		call __mulsf3
 30528 cf4a DC01      		movw r26,r24
 30529 cf4c CB01      		movw r24,r22
2738:lp_solve_5.5/lp_presolve.c ****         if((fabs(Coeff2) < psdata->epspivot*mat->colmax[jjx]) &&
 30530               		.loc 2 2738 0 discriminator 1
 30531 cf4e 9C01      		movw r18,r24
 30532 cf50 AD01      		movw r20,r26
 30533 cf52 C701      		movw r24,r14
 30534 cf54 B601      		movw r22,r12
 30535 cf56 0E94 0000 		call __gtsf2
 30536 cf5a 1816      		cp __zero_reg__,r24
 30537 cf5c 04F4      		brge .L1297
2740:lp_solve_5.5/lp_presolve.c ****           k += 64;
 30538               		.loc 2 2740 0
 30539 cf5e 8D81      		ldd r24,Y+5
 30540 cf60 9E81      		ldd r25,Y+6
 30541 cf62 805C      		subi r24,-64
 30542 cf64 9F4F      		sbci r25,-1
 30543 cf66 9E83      		std Y+6,r25
 30544 cf68 8D83      		std Y+5,r24
 30545 cf6a 00C0      		rjmp .L1296
 30546               	.L1297:
2741:lp_solve_5.5/lp_presolve.c ****         else if(presolve_collength(psdata, jx) > presolve_collength(psdata, jjx))
 30547               		.loc 2 2741 0
 30548 cf6c 2AAD      		ldd r18,Y+58
 30549 cf6e 3BAD      		ldd r19,Y+59
 30550 cf70 CE01      		movw r24,r28
 30551 cf72 8A5A      		subi r24,-86
 30552 cf74 9F4F      		sbci r25,-1
 30553 cf76 FC01      		movw r30,r24
 30554 cf78 8081      		ld r24,Z
 30555 cf7a 9181      		ldd r25,Z+1
 30556 cf7c B901      		movw r22,r18
 30557 cf7e 0E94 0000 		call presolve_collength
 30558 cf82 8C01      		movw r16,r24
 30559 cf84 2CAD      		ldd r18,Y+60
 30560 cf86 3DAD      		ldd r19,Y+61
 30561 cf88 CE01      		movw r24,r28
 30562 cf8a 8A5A      		subi r24,-86
 30563 cf8c 9F4F      		sbci r25,-1
 30564 cf8e FC01      		movw r30,r24
 30565 cf90 8081      		ld r24,Z
 30566 cf92 9181      		ldd r25,Z+1
 30567 cf94 B901      		movw r22,r18
 30568 cf96 0E94 0000 		call presolve_collength
 30569 cf9a 8017      		cp r24,r16
 30570 cf9c 9107      		cpc r25,r17
 30571 cf9e 04F4      		brge .L1296
2742:lp_solve_5.5/lp_presolve.c ****           k += 128;
 30572               		.loc 2 2742 0
 30573 cfa0 8D81      		ldd r24,Y+5
 30574 cfa2 9E81      		ldd r25,Y+6
 30575 cfa4 8058      		subi r24,-128
 30576 cfa6 9F4F      		sbci r25,-1
 30577 cfa8 9E83      		std Y+6,r25
 30578 cfaa 8D83      		std Y+5,r24
 30579               	.L1296:
2743:lp_solve_5.5/lp_presolve.c ****       }
2744:lp_solve_5.5/lp_presolve.c **** 
2745:lp_solve_5.5/lp_presolve.c ****       /* If we are not forced to swap, decide if it otherwise makes sense - low order */
2746:lp_solve_5.5/lp_presolve.c ****       if(k == 0) {
 30580               		.loc 2 2746 0
 30581 cfac 8D81      		ldd r24,Y+5
 30582 cfae 9E81      		ldd r25,Y+6
 30583 cfb0 892B      		or r24,r25
 30584 cfb2 01F0      		breq .+2
 30585 cfb4 00C0      		rjmp .L1306
2747:lp_solve_5.5/lp_presolve.c ****         Value2 = Coeff1/Coeff2;
 30586               		.loc 2 2747 0
 30587 cfb6 CE01      		movw r24,r28
 30588 cfb8 8E5B      		subi r24,-66
 30589 cfba 9F4F      		sbci r25,-1
 30590 cfbc FC01      		movw r30,r24
 30591 cfbe 8081      		ld r24,Z
 30592 cfc0 9181      		ldd r25,Z+1
 30593 cfc2 A281      		ldd r26,Z+2
 30594 cfc4 B381      		ldd r27,Z+3
 30595 cfc6 9E01      		movw r18,r28
 30596 cfc8 2A5B      		subi r18,-70
 30597 cfca 3F4F      		sbci r19,-1
 30598 cfcc F901      		movw r30,r18
 30599 cfce 2081      		ld r18,Z
 30600 cfd0 3181      		ldd r19,Z+1
 30601 cfd2 4281      		ldd r20,Z+2
 30602 cfd4 5381      		ldd r21,Z+3
 30603 cfd6 BC01      		movw r22,r24
 30604 cfd8 CD01      		movw r24,r26
 30605 cfda 0E94 0000 		call __divsf3
 30606 cfde DC01      		movw r26,r24
 30607 cfe0 CB01      		movw r24,r22
 30608 cfe2 9E01      		movw r18,r28
 30609 cfe4 265B      		subi r18,-74
 30610 cfe6 3F4F      		sbci r19,-1
 30611 cfe8 F901      		movw r30,r18
 30612 cfea 8083      		st Z,r24
 30613 cfec 9183      		std Z+1,r25
 30614 cfee A283      		std Z+2,r26
 30615 cff0 B383      		std Z+3,r27
2748:lp_solve_5.5/lp_presolve.c **** #ifdef DualFeasibilityLogicEQ2
2749:lp_solve_5.5/lp_presolve.c ****         if((Value2*lp->orig_obj[jx] < 0) &&
2750:lp_solve_5.5/lp_presolve.c ****           (Value2*lp->orig_obj[jjx] > 0))                     /* Seek increased dual feasibility */
2751:lp_solve_5.5/lp_presolve.c ****           k += 256;
2752:lp_solve_5.5/lp_presolve.c **** #endif
2753:lp_solve_5.5/lp_presolve.c **** #ifdef DivisorIntegralityLogicEQ2
2754:lp_solve_5.5/lp_presolve.c ****         if((fabs(modf(Coeff2, &Value2)) >= lp->epsvalue) &&    /* Seek integrality of result */
 30616               		.loc 2 2754 0
 30617 cff2 CE01      		movw r24,r28
 30618 cff4 8A5B      		subi r24,-70
 30619 cff6 9F4F      		sbci r25,-1
 30620 cff8 FC01      		movw r30,r24
 30621 cffa 8081      		ld r24,Z
 30622 cffc 9181      		ldd r25,Z+1
 30623 cffe A281      		ldd r26,Z+2
 30624 d000 B381      		ldd r27,Z+3
 30625 d002 9E01      		movw r18,r28
 30626 d004 265B      		subi r18,-74
 30627 d006 3F4F      		sbci r19,-1
 30628 d008 A901      		movw r20,r18
 30629 d00a BC01      		movw r22,r24
 30630 d00c CD01      		movw r24,r26
 30631 d00e 0E94 0000 		call modf
 30632 d012 DC01      		movw r26,r24
 30633 d014 CB01      		movw r24,r22
 30634 d016 BF77      		andi r27,0x7f
 30635 d018 2D8D      		ldd r18,Y+29
 30636 d01a 3E8D      		ldd r19,Y+30
 30637 d01c 2A5E      		subi r18,-22
 30638 d01e 3C4F      		sbci r19,-4
 30639 d020 F901      		movw r30,r18
 30640 d022 2081      		ld r18,Z
 30641 d024 3181      		ldd r19,Z+1
 30642 d026 4281      		ldd r20,Z+2
 30643 d028 5381      		ldd r21,Z+3
 30644 d02a BC01      		movw r22,r24
 30645 d02c CD01      		movw r24,r26
 30646 d02e 0E94 0000 		call __gesf2
 30647 d032 8823      		tst r24
 30648 d034 04F0      		brlt .L1301
2755:lp_solve_5.5/lp_presolve.c ****            (fabs(modf(Coeff1, &Value2)) < lp->epsvalue))
 30649               		.loc 2 2755 0 discriminator 1
 30650 d036 CE01      		movw r24,r28
 30651 d038 8E5B      		subi r24,-66
 30652 d03a 9F4F      		sbci r25,-1
 30653 d03c FC01      		movw r30,r24
 30654 d03e 8081      		ld r24,Z
 30655 d040 9181      		ldd r25,Z+1
 30656 d042 A281      		ldd r26,Z+2
 30657 d044 B381      		ldd r27,Z+3
 30658 d046 9E01      		movw r18,r28
 30659 d048 265B      		subi r18,-74
 30660 d04a 3F4F      		sbci r19,-1
 30661 d04c A901      		movw r20,r18
 30662 d04e BC01      		movw r22,r24
 30663 d050 CD01      		movw r24,r26
 30664 d052 0E94 0000 		call modf
 30665 d056 DC01      		movw r26,r24
 30666 d058 CB01      		movw r24,r22
 30667 d05a BF77      		andi r27,0x7f
 30668 d05c 2D8D      		ldd r18,Y+29
 30669 d05e 3E8D      		ldd r19,Y+30
 30670 d060 2A5E      		subi r18,-22
 30671 d062 3C4F      		sbci r19,-4
 30672 d064 F901      		movw r30,r18
 30673 d066 2081      		ld r18,Z
 30674 d068 3181      		ldd r19,Z+1
 30675 d06a 4281      		ldd r20,Z+2
 30676 d06c 5381      		ldd r21,Z+3
2754:lp_solve_5.5/lp_presolve.c ****            (fabs(modf(Coeff1, &Value2)) < lp->epsvalue))
 30677               		.loc 2 2754 0 discriminator 1
 30678 d06e BC01      		movw r22,r24
 30679 d070 CD01      		movw r24,r26
 30680 d072 0E94 0000 		call __ltsf2
 30681 d076 8823      		tst r24
 30682 d078 04F4      		brge .L1301
2756:lp_solve_5.5/lp_presolve.c ****           k += 512;
 30683               		.loc 2 2756 0
 30684 d07a 8D81      		ldd r24,Y+5
 30685 d07c 9E81      		ldd r25,Y+6
 30686 d07e 9E5F      		subi r25,-2
 30687 d080 9E83      		std Y+6,r25
 30688 d082 8D83      		std Y+5,r24
 30689 d084 00C0      		rjmp .L1306
 30690               	.L1301:
2757:lp_solve_5.5/lp_presolve.c ****         else if((fabs(fabs(Coeff2)-1) >= lp->epsvalue) &&    /* Seek integrality of divisor */
 30691               		.loc 2 2757 0
 30692 d086 CE01      		movw r24,r28
 30693 d088 8A5B      		subi r24,-70
 30694 d08a 9F4F      		sbci r25,-1
 30695 d08c FC01      		movw r30,r24
 30696 d08e 8081      		ld r24,Z
 30697 d090 9181      		ldd r25,Z+1
 30698 d092 A281      		ldd r26,Z+2
 30699 d094 B381      		ldd r27,Z+3
 30700 d096 BF77      		andi r27,0x7f
 30701 d098 20E0      		ldi r18,0
 30702 d09a 30E0      		ldi r19,0
 30703 d09c 40E8      		ldi r20,lo8(-128)
 30704 d09e 5FE3      		ldi r21,lo8(63)
 30705 d0a0 BC01      		movw r22,r24
 30706 d0a2 CD01      		movw r24,r26
 30707 d0a4 0E94 0000 		call __subsf3
 30708 d0a8 DC01      		movw r26,r24
 30709 d0aa CB01      		movw r24,r22
 30710 d0ac BF77      		andi r27,0x7f
 30711 d0ae 2D8D      		ldd r18,Y+29
 30712 d0b0 3E8D      		ldd r19,Y+30
 30713 d0b2 2A5E      		subi r18,-22
 30714 d0b4 3C4F      		sbci r19,-4
 30715 d0b6 F901      		movw r30,r18
 30716 d0b8 2081      		ld r18,Z
 30717 d0ba 3181      		ldd r19,Z+1
 30718 d0bc 4281      		ldd r20,Z+2
 30719 d0be 5381      		ldd r21,Z+3
 30720 d0c0 BC01      		movw r22,r24
 30721 d0c2 CD01      		movw r24,r26
 30722 d0c4 0E94 0000 		call __gesf2
 30723 d0c8 8823      		tst r24
 30724 d0ca 04F0      		brlt .L1306
2758:lp_solve_5.5/lp_presolve.c ****                  (fabs(fabs(Coeff1)-1) < lp->epsvalue))
 30725               		.loc 2 2758 0 discriminator 1
 30726 d0cc CE01      		movw r24,r28
 30727 d0ce 8E5B      		subi r24,-66
 30728 d0d0 9F4F      		sbci r25,-1
 30729 d0d2 FC01      		movw r30,r24
 30730 d0d4 8081      		ld r24,Z
 30731 d0d6 9181      		ldd r25,Z+1
 30732 d0d8 A281      		ldd r26,Z+2
 30733 d0da B381      		ldd r27,Z+3
 30734 d0dc BF77      		andi r27,0x7f
 30735 d0de 20E0      		ldi r18,0
 30736 d0e0 30E0      		ldi r19,0
 30737 d0e2 40E8      		ldi r20,lo8(-128)
 30738 d0e4 5FE3      		ldi r21,lo8(63)
 30739 d0e6 BC01      		movw r22,r24
 30740 d0e8 CD01      		movw r24,r26
 30741 d0ea 0E94 0000 		call __subsf3
 30742 d0ee DC01      		movw r26,r24
 30743 d0f0 CB01      		movw r24,r22
 30744 d0f2 BF77      		andi r27,0x7f
 30745 d0f4 2D8D      		ldd r18,Y+29
 30746 d0f6 3E8D      		ldd r19,Y+30
 30747 d0f8 2A5E      		subi r18,-22
 30748 d0fa 3C4F      		sbci r19,-4
 30749 d0fc F901      		movw r30,r18
 30750 d0fe 2081      		ld r18,Z
 30751 d100 3181      		ldd r19,Z+1
 30752 d102 4281      		ldd r20,Z+2
 30753 d104 5381      		ldd r21,Z+3
2757:lp_solve_5.5/lp_presolve.c ****         else if((fabs(fabs(Coeff2)-1) >= lp->epsvalue) &&    /* Seek integrality of divisor */
 30754               		.loc 2 2757 0 discriminator 1
 30755 d106 BC01      		movw r22,r24
 30756 d108 CD01      		movw r24,r26
 30757 d10a 0E94 0000 		call __ltsf2
 30758 d10e 8823      		tst r24
 30759 d110 04F4      		brge .L1306
2759:lp_solve_5.5/lp_presolve.c ****           k += 1024;
 30760               		.loc 2 2759 0
 30761 d112 8D81      		ldd r24,Y+5
 30762 d114 9E81      		ldd r25,Y+6
 30763 d116 9C5F      		subi r25,-4
 30764 d118 9E83      		std Y+6,r25
 30765 d11a 8D83      		std Y+5,r24
 30766 d11c 00C0      		rjmp .L1306
 30767               	.L1292:
2760:lp_solve_5.5/lp_presolve.c **** #endif
2761:lp_solve_5.5/lp_presolve.c ****       }
2762:lp_solve_5.5/lp_presolve.c **** 
2763:lp_solve_5.5/lp_presolve.c ****     }
2764:lp_solve_5.5/lp_presolve.c ****     else
2765:lp_solve_5.5/lp_presolve.c ****       k = 0;
 30768               		.loc 2 2765 0
 30769 d11e 1E82      		std Y+6,__zero_reg__
 30770 d120 1D82      		std Y+5,__zero_reg__
 30771               	.L1306:
2766:lp_solve_5.5/lp_presolve.c **** 
2767:lp_solve_5.5/lp_presolve.c ****     /* Perform variable index swap if indicated */
2768:lp_solve_5.5/lp_presolve.c ****     if(k != 0) {
 30772               		.loc 2 2768 0
 30773 d122 8D81      		ldd r24,Y+5
 30774 d124 9E81      		ldd r25,Y+6
 30775 d126 892B      		or r24,r25
 30776 d128 01F0      		breq .L1307
2769:lp_solve_5.5/lp_presolve.c ****       swapINT(&jx, &jjx);
 30777               		.loc 2 2769 0
 30778 d12a 9E01      		movw r18,r28
 30779 d12c 245C      		subi r18,-60
 30780 d12e 3F4F      		sbci r19,-1
 30781 d130 CE01      		movw r24,r28
 30782 d132 CA96      		adiw r24,58
 30783 d134 B901      		movw r22,r18
 30784 d136 0E94 0000 		call swapINT
2770:lp_solve_5.5/lp_presolve.c ****       swapREAL(&Coeff1, &Coeff2);
 30785               		.loc 2 2770 0
 30786 d13a 9E01      		movw r18,r28
 30787 d13c 2A5B      		subi r18,-70
 30788 d13e 3F4F      		sbci r19,-1
 30789 d140 CE01      		movw r24,r28
 30790 d142 8E5B      		subi r24,-66
 30791 d144 9F4F      		sbci r25,-1
 30792 d146 B901      		movw r22,r18
 30793 d148 0E94 0000 		call swapREAL
 30794               	.L1307:
2771:lp_solve_5.5/lp_presolve.c ****     }
2772:lp_solve_5.5/lp_presolve.c **** 
2773:lp_solve_5.5/lp_presolve.c ****     Value1 = lp->orig_rhs[i]/Coeff2; /* Delta constant term */
 30795               		.loc 2 2773 0
 30796 d14c 8D8D      		ldd r24,Y+29
 30797 d14e 9E8D      		ldd r25,Y+30
 30798 d150 8A55      		subi r24,90
 30799 d152 9D4F      		sbci r25,-3
 30800 d154 FC01      		movw r30,r24
 30801 d156 2081      		ld r18,Z
 30802 d158 3181      		ldd r19,Z+1
 30803 d15a 8B81      		ldd r24,Y+3
 30804 d15c 9C81      		ldd r25,Y+4
 30805 d15e 880F      		lsl r24
 30806 d160 991F      		rol r25
 30807 d162 880F      		lsl r24
 30808 d164 991F      		rol r25
 30809 d166 820F      		add r24,r18
 30810 d168 931F      		adc r25,r19
 30811 d16a FC01      		movw r30,r24
 30812 d16c 8081      		ld r24,Z
 30813 d16e 9181      		ldd r25,Z+1
 30814 d170 A281      		ldd r26,Z+2
 30815 d172 B381      		ldd r27,Z+3
 30816 d174 9E01      		movw r18,r28
 30817 d176 2A5B      		subi r18,-70
 30818 d178 3F4F      		sbci r19,-1
 30819 d17a F901      		movw r30,r18
 30820 d17c 2081      		ld r18,Z
 30821 d17e 3181      		ldd r19,Z+1
 30822 d180 4281      		ldd r20,Z+2
 30823 d182 5381      		ldd r21,Z+3
 30824 d184 BC01      		movw r22,r24
 30825 d186 CD01      		movw r24,r26
 30826 d188 0E94 0000 		call __divsf3
 30827 d18c DC01      		movw r26,r24
 30828 d18e CB01      		movw r24,r22
 30829 d190 8DA3      		std Y+37,r24
 30830 d192 9EA3      		std Y+38,r25
 30831 d194 AFA3      		std Y+39,r26
 30832 d196 B8A7      		std Y+40,r27
2774:lp_solve_5.5/lp_presolve.c ****     Value2 = Coeff1/Coeff2;          /* Delta variable term */
 30833               		.loc 2 2774 0
 30834 d198 CE01      		movw r24,r28
 30835 d19a 8E5B      		subi r24,-66
 30836 d19c 9F4F      		sbci r25,-1
 30837 d19e FC01      		movw r30,r24
 30838 d1a0 8081      		ld r24,Z
 30839 d1a2 9181      		ldd r25,Z+1
 30840 d1a4 A281      		ldd r26,Z+2
 30841 d1a6 B381      		ldd r27,Z+3
 30842 d1a8 9E01      		movw r18,r28
 30843 d1aa 2A5B      		subi r18,-70
 30844 d1ac 3F4F      		sbci r19,-1
 30845 d1ae F901      		movw r30,r18
 30846 d1b0 2081      		ld r18,Z
 30847 d1b2 3181      		ldd r19,Z+1
 30848 d1b4 4281      		ldd r20,Z+2
 30849 d1b6 5381      		ldd r21,Z+3
 30850 d1b8 BC01      		movw r22,r24
 30851 d1ba CD01      		movw r24,r26
 30852 d1bc 0E94 0000 		call __divsf3
 30853 d1c0 DC01      		movw r26,r24
 30854 d1c2 CB01      		movw r24,r22
 30855 d1c4 9E01      		movw r18,r28
 30856 d1c6 265B      		subi r18,-74
 30857 d1c8 3F4F      		sbci r19,-1
 30858 d1ca F901      		movw r30,r18
 30859 d1cc 8083      		st Z,r24
 30860 d1ce 9183      		std Z+1,r25
 30861 d1d0 A283      		std Z+2,r26
 30862 d1d2 B383      		std Z+3,r27
2775:lp_solve_5.5/lp_presolve.c ****     upbound = lp->orig_upbo[lp->rows+jx];
 30863               		.loc 2 2775 0
 30864 d1d4 8D8D      		ldd r24,Y+29
 30865 d1d6 9E8D      		ldd r25,Y+30
 30866 d1d8 8255      		subi r24,82
 30867 d1da 9D4F      		sbci r25,-3
 30868 d1dc FC01      		movw r30,r24
 30869 d1de 2081      		ld r18,Z
 30870 d1e0 3181      		ldd r19,Z+1
 30871 d1e2 8D8D      		ldd r24,Y+29
 30872 d1e4 9E8D      		ldd r25,Y+30
 30873 d1e6 8651      		subi r24,22
 30874 d1e8 9E4F      		sbci r25,-2
 30875 d1ea FC01      		movw r30,r24
 30876 d1ec 4081      		ld r20,Z
 30877 d1ee 5181      		ldd r21,Z+1
 30878 d1f0 8AAD      		ldd r24,Y+58
 30879 d1f2 9BAD      		ldd r25,Y+59
 30880 d1f4 840F      		add r24,r20
 30881 d1f6 951F      		adc r25,r21
 30882 d1f8 880F      		lsl r24
 30883 d1fa 991F      		rol r25
 30884 d1fc 880F      		lsl r24
 30885 d1fe 991F      		rol r25
 30886 d200 820F      		add r24,r18
 30887 d202 931F      		adc r25,r19
 30888 d204 FC01      		movw r30,r24
 30889 d206 8081      		ld r24,Z
 30890 d208 9181      		ldd r25,Z+1
 30891 d20a A281      		ldd r26,Z+2
 30892 d20c B381      		ldd r27,Z+3
 30893 d20e 8D8B      		std Y+21,r24
 30894 d210 9E8B      		std Y+22,r25
 30895 d212 AF8B      		std Y+23,r26
 30896 d214 B88F      		std Y+24,r27
2776:lp_solve_5.5/lp_presolve.c ****     lobound = lp->orig_lowbo[lp->rows+jx];
 30897               		.loc 2 2776 0
 30898 d216 8D8D      		ldd r24,Y+29
 30899 d218 9E8D      		ldd r25,Y+30
 30900 d21a 8E54      		subi r24,78
 30901 d21c 9D4F      		sbci r25,-3
 30902 d21e FC01      		movw r30,r24
 30903 d220 2081      		ld r18,Z
 30904 d222 3181      		ldd r19,Z+1
 30905 d224 8D8D      		ldd r24,Y+29
 30906 d226 9E8D      		ldd r25,Y+30
 30907 d228 8651      		subi r24,22
 30908 d22a 9E4F      		sbci r25,-2
 30909 d22c FC01      		movw r30,r24
 30910 d22e 4081      		ld r20,Z
 30911 d230 5181      		ldd r21,Z+1
 30912 d232 8AAD      		ldd r24,Y+58
 30913 d234 9BAD      		ldd r25,Y+59
 30914 d236 840F      		add r24,r20
 30915 d238 951F      		adc r25,r21
 30916 d23a 880F      		lsl r24
 30917 d23c 991F      		rol r25
 30918 d23e 880F      		lsl r24
 30919 d240 991F      		rol r25
 30920 d242 820F      		add r24,r18
 30921 d244 931F      		adc r25,r19
 30922 d246 FC01      		movw r30,r24
 30923 d248 8081      		ld r24,Z
 30924 d24a 9181      		ldd r25,Z+1
 30925 d24c A281      		ldd r26,Z+2
 30926 d24e B381      		ldd r27,Z+3
 30927 d250 898B      		std Y+17,r24
 30928 d252 9A8B      		std Y+18,r25
 30929 d254 AB8B      		std Y+19,r26
 30930 d256 BC8B      		std Y+20,r27
2777:lp_solve_5.5/lp_presolve.c ****     if(lp->spx_trace) {
 30931               		.loc 2 2777 0
 30932 d258 8D8D      		ldd r24,Y+29
 30933 d25a 9E8D      		ldd r25,Y+30
 30934 d25c 8E5F      		subi r24,-2
 30935 d25e 9D4F      		sbci r25,-3
 30936 d260 FC01      		movw r30,r24
 30937 d262 8081      		ld r24,Z
 30938 d264 8823      		tst r24
 30939 d266 01F4      		brne .+2
 30940 d268 00C0      		rjmp .L1308
2778:lp_solve_5.5/lp_presolve.c ****       report(lp, DETAILED, "Row %3d : Elim %g %s - %d\n", i, Coeff2, get_col_name(lp, jx), jx);
 30941               		.loc 2 2778 0
 30942 d26a 0AAD      		ldd r16,Y+58
 30943 d26c 1BAD      		ldd r17,Y+59
 30944 d26e 2AAD      		ldd r18,Y+58
 30945 d270 3BAD      		ldd r19,Y+59
 30946 d272 8D8D      		ldd r24,Y+29
 30947 d274 9E8D      		ldd r25,Y+30
 30948 d276 B901      		movw r22,r18
 30949 d278 0E94 0000 		call get_col_name
 30950 d27c 9C01      		movw r18,r24
 30951 d27e CE01      		movw r24,r28
 30952 d280 8A5B      		subi r24,-70
 30953 d282 9F4F      		sbci r25,-1
 30954 d284 FC01      		movw r30,r24
 30955 d286 8081      		ld r24,Z
 30956 d288 9181      		ldd r25,Z+1
 30957 d28a A281      		ldd r26,Z+2
 30958 d28c B381      		ldd r27,Z+3
 30959 d28e 412F      		mov r20,r17
 30960 d290 4F93      		push r20
 30961 d292 402F      		mov r20,r16
 30962 d294 4F93      		push r20
 30963 d296 432F      		mov r20,r19
 30964 d298 4F93      		push r20
 30965 d29a 2F93      		push r18
 30966 d29c 2B2F      		mov r18,r27
 30967 d29e 2F93      		push r18
 30968 d2a0 2A2F      		mov r18,r26
 30969 d2a2 2F93      		push r18
 30970 d2a4 292F      		mov r18,r25
 30971 d2a6 2F93      		push r18
 30972 d2a8 8F93      		push r24
 30973 d2aa 8C81      		ldd r24,Y+4
 30974 d2ac 8F93      		push r24
 30975 d2ae 8B81      		ldd r24,Y+3
 30976 d2b0 8F93      		push r24
 30977 d2b2 80E0      		ldi r24,lo8(.LC34)
 30978 d2b4 90E0      		ldi r25,hi8(.LC34)
 30979 d2b6 892F      		mov r24,r25
 30980 d2b8 8F93      		push r24
 30981 d2ba 80E0      		ldi r24,lo8(.LC34)
 30982 d2bc 90E0      		ldi r25,hi8(.LC34)
 30983 d2be 8F93      		push r24
 30984 d2c0 1F92      		push __zero_reg__
 30985 d2c2 85E0      		ldi r24,lo8(5)
 30986 d2c4 8F93      		push r24
 30987 d2c6 8E8D      		ldd r24,Y+30
 30988 d2c8 8F93      		push r24
 30989 d2ca 8D8D      		ldd r24,Y+29
 30990 d2cc 8F93      		push r24
 30991 d2ce 0E94 0000 		call report
 30992 d2d2 8DB7      		in r24,__SP_L__
 30993 d2d4 9EB7      		in r25,__SP_H__
 30994 d2d6 4096      		adiw r24,16
 30995 d2d8 0FB6      		in __tmp_reg__,__SREG__
 30996 d2da F894      		cli
 30997 d2dc DEBF      		out __SP_H__,r29
 30998 d2de 0FBE      		out __SREG__,__tmp_reg__
 30999 d2e0 CDBF      		out __SP_L__,r28
2779:lp_solve_5.5/lp_presolve.c ****       report(lp, DETAILED, "          Keep %g %s - %d\n",    Coeff1, get_col_name(lp, jjx), jjx);
 31000               		.loc 2 2779 0
 31001 d2e2 0CAD      		ldd r16,Y+60
 31002 d2e4 1DAD      		ldd r17,Y+61
 31003 d2e6 2CAD      		ldd r18,Y+60
 31004 d2e8 3DAD      		ldd r19,Y+61
 31005 d2ea 8D8D      		ldd r24,Y+29
 31006 d2ec 9E8D      		ldd r25,Y+30
 31007 d2ee B901      		movw r22,r18
 31008 d2f0 0E94 0000 		call get_col_name
 31009 d2f4 9C01      		movw r18,r24
 31010 d2f6 CE01      		movw r24,r28
 31011 d2f8 8E5B      		subi r24,-66
 31012 d2fa 9F4F      		sbci r25,-1
 31013 d2fc FC01      		movw r30,r24
 31014 d2fe 8081      		ld r24,Z
 31015 d300 9181      		ldd r25,Z+1
 31016 d302 A281      		ldd r26,Z+2
 31017 d304 B381      		ldd r27,Z+3
 31018 d306 412F      		mov r20,r17
 31019 d308 4F93      		push r20
 31020 d30a 402F      		mov r20,r16
 31021 d30c 4F93      		push r20
 31022 d30e 432F      		mov r20,r19
 31023 d310 4F93      		push r20
 31024 d312 2F93      		push r18
 31025 d314 2B2F      		mov r18,r27
 31026 d316 2F93      		push r18
 31027 d318 2A2F      		mov r18,r26
 31028 d31a 2F93      		push r18
 31029 d31c 292F      		mov r18,r25
 31030 d31e 2F93      		push r18
 31031 d320 8F93      		push r24
 31032 d322 80E0      		ldi r24,lo8(.LC35)
 31033 d324 90E0      		ldi r25,hi8(.LC35)
 31034 d326 892F      		mov r24,r25
 31035 d328 8F93      		push r24
 31036 d32a 80E0      		ldi r24,lo8(.LC35)
 31037 d32c 90E0      		ldi r25,hi8(.LC35)
 31038 d32e 8F93      		push r24
 31039 d330 1F92      		push __zero_reg__
 31040 d332 85E0      		ldi r24,lo8(5)
 31041 d334 8F93      		push r24
 31042 d336 8E8D      		ldd r24,Y+30
 31043 d338 8F93      		push r24
 31044 d33a 8D8D      		ldd r24,Y+29
 31045 d33c 8F93      		push r24
 31046 d33e 0E94 0000 		call report
 31047 d342 8DB7      		in r24,__SP_L__
 31048 d344 9EB7      		in r25,__SP_H__
 31049 d346 0E96      		adiw r24,14
 31050 d348 0FB6      		in __tmp_reg__,__SREG__
 31051 d34a F894      		cli
 31052 d34c DEBF      		out __SP_H__,r29
 31053 d34e 0FBE      		out __SREG__,__tmp_reg__
 31054 d350 CDBF      		out __SP_L__,r28
 31055               	.L1308:
2780:lp_solve_5.5/lp_presolve.c ****     }
2781:lp_solve_5.5/lp_presolve.c **** 
2782:lp_solve_5.5/lp_presolve.c ****     /* Get the coefficient vectors of the independent (jjx) and dependent (jx) columns;
2783:lp_solve_5.5/lp_presolve.c ****       the dependent column will be deleted and reconstructed during postsolve. */
2784:lp_solve_5.5/lp_presolve.c ****     freshupdate = (MYBOOL) ((colindex == NULL) || (colindex[jjx] == 0));
 31056               		.loc 2 2784 0
 31057 d352 CE01      		movw r24,r28
 31058 d354 805C      		subi r24,-64
 31059 d356 9F4F      		sbci r25,-1
 31060 d358 FC01      		movw r30,r24
 31061 d35a 8081      		ld r24,Z
 31062 d35c 9181      		ldd r25,Z+1
 31063 d35e 892B      		or r24,r25
 31064 d360 01F0      		breq .L1309
 31065               		.loc 2 2784 0 is_stmt 0 discriminator 2
 31066 d362 CE01      		movw r24,r28
 31067 d364 805C      		subi r24,-64
 31068 d366 9F4F      		sbci r25,-1
 31069 d368 FC01      		movw r30,r24
 31070 d36a 2081      		ld r18,Z
 31071 d36c 3181      		ldd r19,Z+1
 31072 d36e 8CAD      		ldd r24,Y+60
 31073 d370 9DAD      		ldd r25,Y+61
 31074 d372 880F      		lsl r24
 31075 d374 991F      		rol r25
 31076 d376 820F      		add r24,r18
 31077 d378 931F      		adc r25,r19
 31078 d37a FC01      		movw r30,r24
 31079 d37c 8081      		ld r24,Z
 31080 d37e 9181      		ldd r25,Z+1
 31081 d380 892B      		or r24,r25
 31082 d382 01F4      		brne .L1310
 31083               	.L1309:
 31084               		.loc 2 2784 0 discriminator 3
 31085 d384 81E0      		ldi r24,lo8(1)
 31086 d386 90E0      		ldi r25,0
 31087 d388 00C0      		rjmp .L1311
 31088               	.L1310:
 31089               		.loc 2 2784 0 discriminator 4
 31090 d38a 80E0      		ldi r24,0
 31091 d38c 90E0      		ldi r25,0
 31092               	.L1311:
 31093               		.loc 2 2784 0 discriminator 6
 31094 d38e 89A7      		std Y+41,r24
2785:lp_solve_5.5/lp_presolve.c ****     if(freshupdate)
 31095               		.loc 2 2785 0 is_stmt 1 discriminator 6
 31096 d390 89A5      		ldd r24,Y+41
 31097 d392 8823      		tst r24
 31098 d394 01F0      		breq .L1312
2786:lp_solve_5.5/lp_presolve.c ****       mat_expandcolumn(mat, jjx, colvalue, NULL, TRUE);
 31099               		.loc 2 2786 0
 31100 d396 CE01      		movw r24,r28
 31101 d398 825B      		subi r24,-78
 31102 d39a 9F4F      		sbci r25,-1
 31103 d39c FC01      		movw r30,r24
 31104 d39e 4081      		ld r20,Z
 31105 d3a0 5181      		ldd r21,Z+1
 31106 d3a2 6CAD      		ldd r22,Y+60
 31107 d3a4 7DAD      		ldd r23,Y+61
 31108 d3a6 8BA1      		ldd r24,Y+35
 31109 d3a8 9CA1      		ldd r25,Y+36
 31110 d3aa 01E0      		ldi r16,lo8(1)
 31111 d3ac 20E0      		ldi r18,0
 31112 d3ae 30E0      		ldi r19,0
 31113 d3b0 0E94 0000 		call mat_expandcolumn
 31114 d3b4 00C0      		rjmp .L1313
 31115               	.L1312:
2787:lp_solve_5.5/lp_presolve.c ****     else
2788:lp_solve_5.5/lp_presolve.c ****       mat_expandcolumn(rev, colindex[jjx], colvalue, NULL, FALSE);
 31116               		.loc 2 2788 0
 31117 d3b6 CE01      		movw r24,r28
 31118 d3b8 825B      		subi r24,-78
 31119 d3ba 9F4F      		sbci r25,-1
 31120 d3bc FC01      		movw r30,r24
 31121 d3be 4081      		ld r20,Z
 31122 d3c0 5181      		ldd r21,Z+1
 31123 d3c2 CE01      		movw r24,r28
 31124 d3c4 805C      		subi r24,-64
 31125 d3c6 9F4F      		sbci r25,-1
 31126 d3c8 FC01      		movw r30,r24
 31127 d3ca 2081      		ld r18,Z
 31128 d3cc 3181      		ldd r19,Z+1
 31129 d3ce 8CAD      		ldd r24,Y+60
 31130 d3d0 9DAD      		ldd r25,Y+61
 31131 d3d2 880F      		lsl r24
 31132 d3d4 991F      		rol r25
 31133 d3d6 820F      		add r24,r18
 31134 d3d8 931F      		adc r25,r19
 31135 d3da FC01      		movw r30,r24
 31136 d3dc 6081      		ld r22,Z
 31137 d3de 7181      		ldd r23,Z+1
 31138 d3e0 8B8D      		ldd r24,Y+27
 31139 d3e2 9C8D      		ldd r25,Y+28
 31140 d3e4 00E0      		ldi r16,0
 31141 d3e6 20E0      		ldi r18,0
 31142 d3e8 30E0      		ldi r19,0
 31143 d3ea 0E94 0000 		call mat_expandcolumn
 31144               	.L1313:
2789:lp_solve_5.5/lp_presolve.c ****     if((colindex == NULL) || (colindex[jx] == 0))
 31145               		.loc 2 2789 0
 31146 d3ee CE01      		movw r24,r28
 31147 d3f0 805C      		subi r24,-64
 31148 d3f2 9F4F      		sbci r25,-1
 31149 d3f4 FC01      		movw r30,r24
 31150 d3f6 8081      		ld r24,Z
 31151 d3f8 9181      		ldd r25,Z+1
 31152 d3fa 892B      		or r24,r25
 31153 d3fc 01F0      		breq .L1314
 31154               		.loc 2 2789 0 is_stmt 0 discriminator 1
 31155 d3fe CE01      		movw r24,r28
 31156 d400 805C      		subi r24,-64
 31157 d402 9F4F      		sbci r25,-1
 31158 d404 FC01      		movw r30,r24
 31159 d406 2081      		ld r18,Z
 31160 d408 3181      		ldd r19,Z+1
 31161 d40a 8AAD      		ldd r24,Y+58
 31162 d40c 9BAD      		ldd r25,Y+59
 31163 d40e 880F      		lsl r24
 31164 d410 991F      		rol r25
 31165 d412 820F      		add r24,r18
 31166 d414 931F      		adc r25,r19
 31167 d416 FC01      		movw r30,r24
 31168 d418 8081      		ld r24,Z
 31169 d41a 9181      		ldd r25,Z+1
 31170 d41c 892B      		or r24,r25
 31171 d41e 01F4      		brne .L1315
 31172               	.L1314:
2790:lp_solve_5.5/lp_presolve.c ****       mat_expandcolumn(mat, jx, delvalue, NULL, TRUE);
 31173               		.loc 2 2790 0 is_stmt 1
 31174 d420 CE01      		movw r24,r28
 31175 d422 805B      		subi r24,-80
 31176 d424 9F4F      		sbci r25,-1
 31177 d426 FC01      		movw r30,r24
 31178 d428 4081      		ld r20,Z
 31179 d42a 5181      		ldd r21,Z+1
 31180 d42c 6AAD      		ldd r22,Y+58
 31181 d42e 7BAD      		ldd r23,Y+59
 31182 d430 8BA1      		ldd r24,Y+35
 31183 d432 9CA1      		ldd r25,Y+36
 31184 d434 01E0      		ldi r16,lo8(1)
 31185 d436 20E0      		ldi r18,0
 31186 d438 30E0      		ldi r19,0
 31187 d43a 0E94 0000 		call mat_expandcolumn
 31188 d43e 00C0      		rjmp .L1316
 31189               	.L1315:
2791:lp_solve_5.5/lp_presolve.c ****     else
2792:lp_solve_5.5/lp_presolve.c ****       mat_expandcolumn(rev, colindex[jx], delvalue, NULL, FALSE);
 31190               		.loc 2 2792 0
 31191 d440 CE01      		movw r24,r28
 31192 d442 805B      		subi r24,-80
 31193 d444 9F4F      		sbci r25,-1
 31194 d446 FC01      		movw r30,r24
 31195 d448 4081      		ld r20,Z
 31196 d44a 5181      		ldd r21,Z+1
 31197 d44c CE01      		movw r24,r28
 31198 d44e 805C      		subi r24,-64
 31199 d450 9F4F      		sbci r25,-1
 31200 d452 FC01      		movw r30,r24
 31201 d454 2081      		ld r18,Z
 31202 d456 3181      		ldd r19,Z+1
 31203 d458 8AAD      		ldd r24,Y+58
 31204 d45a 9BAD      		ldd r25,Y+59
 31205 d45c 880F      		lsl r24
 31206 d45e 991F      		rol r25
 31207 d460 820F      		add r24,r18
 31208 d462 931F      		adc r25,r19
 31209 d464 FC01      		movw r30,r24
 31210 d466 6081      		ld r22,Z
 31211 d468 7181      		ldd r23,Z+1
 31212 d46a 8B8D      		ldd r24,Y+27
 31213 d46c 9C8D      		ldd r25,Y+28
 31214 d46e 00E0      		ldi r16,0
 31215 d470 20E0      		ldi r18,0
 31216 d472 30E0      		ldi r19,0
 31217 d474 0E94 0000 		call mat_expandcolumn
 31218               	.L1316:
2793:lp_solve_5.5/lp_presolve.c **** 
2794:lp_solve_5.5/lp_presolve.c ****     /* Add variable reconstruction information */
2795:lp_solve_5.5/lp_presolve.c ****     addUndoPresolve(lp, TRUE, jx, Value1, Value2, jjx);
 31219               		.loc 2 2795 0
 31220 d478 0CAD      		ldd r16,Y+60
 31221 d47a 1DAD      		ldd r17,Y+61
 31222 d47c CE01      		movw r24,r28
 31223 d47e 865B      		subi r24,-74
 31224 d480 9F4F      		sbci r25,-1
 31225 d482 FC01      		movw r30,r24
 31226 d484 2081      		ld r18,Z
 31227 d486 3181      		ldd r19,Z+1
 31228 d488 4281      		ldd r20,Z+2
 31229 d48a 5381      		ldd r21,Z+3
 31230 d48c 6AAD      		ldd r22,Y+58
 31231 d48e 7BAD      		ldd r23,Y+59
 31232 d490 8DA1      		ldd r24,Y+37
 31233 d492 9EA1      		ldd r25,Y+38
 31234 d494 AFA1      		ldd r26,Y+39
 31235 d496 B8A5      		ldd r27,Y+40
 31236 d498 ED8D      		ldd r30,Y+29
 31237 d49a FE8D      		ldd r31,Y+30
 31238 d49c 5801      		movw r10,r16
 31239 d49e 6901      		movw r12,r18
 31240 d4a0 7A01      		movw r14,r20
 31241 d4a2 8C01      		movw r16,r24
 31242 d4a4 9D01      		movw r18,r26
 31243 d4a6 AB01      		movw r20,r22
 31244 d4a8 61E0      		ldi r22,lo8(1)
 31245 d4aa CF01      		movw r24,r30
 31246 d4ac 0E94 0000 		call addUndoPresolve
2796:lp_solve_5.5/lp_presolve.c **** 
2797:lp_solve_5.5/lp_presolve.c ****     /* If possible, tighten the bounds of the uneliminated variable based
2798:lp_solve_5.5/lp_presolve.c ****        on the bounds of the eliminated variable. Also handle roundings
2799:lp_solve_5.5/lp_presolve.c ****        and attempt precision management. */
2800:lp_solve_5.5/lp_presolve.c ****     bound = lobound;
 31247               		.loc 2 2800 0
 31248 d4b0 8989      		ldd r24,Y+17
 31249 d4b2 9A89      		ldd r25,Y+18
 31250 d4b4 AB89      		ldd r26,Y+19
 31251 d4b6 BC89      		ldd r27,Y+20
 31252 d4b8 8AA7      		std Y+42,r24
 31253 d4ba 9BA7      		std Y+43,r25
 31254 d4bc ACA7      		std Y+44,r26
 31255 d4be BDA7      		std Y+45,r27
2801:lp_solve_5.5/lp_presolve.c ****     k = nrows+jjx;
 31256               		.loc 2 2801 0
 31257 d4c0 8CAD      		ldd r24,Y+60
 31258 d4c2 9DAD      		ldd r25,Y+61
 31259 d4c4 2F8D      		ldd r18,Y+31
 31260 d4c6 38A1      		ldd r19,Y+32
 31261 d4c8 820F      		add r24,r18
 31262 d4ca 931F      		adc r25,r19
 31263 d4cc 9E83      		std Y+6,r25
 31264 d4ce 8D83      		std Y+5,r24
2802:lp_solve_5.5/lp_presolve.c ****     if(bound > -lp->infinite) {
 31265               		.loc 2 2802 0
 31266 d4d0 8D8D      		ldd r24,Y+29
 31267 d4d2 9E8D      		ldd r25,Y+30
 31268 d4d4 865F      		subi r24,-10
 31269 d4d6 9C4F      		sbci r25,-4
 31270 d4d8 FC01      		movw r30,r24
 31271 d4da 8081      		ld r24,Z
 31272 d4dc 9181      		ldd r25,Z+1
 31273 d4de A281      		ldd r26,Z+2
 31274 d4e0 B381      		ldd r27,Z+3
 31275 d4e2 B058      		subi r27,0x80
 31276 d4e4 2AA5      		ldd r18,Y+42
 31277 d4e6 3BA5      		ldd r19,Y+43
 31278 d4e8 4CA5      		ldd r20,Y+44
 31279 d4ea 5DA5      		ldd r21,Y+45
 31280 d4ec BC01      		movw r22,r24
 31281 d4ee CD01      		movw r24,r26
 31282 d4f0 0E94 0000 		call __ltsf2
 31283 d4f4 8823      		tst r24
 31284 d4f6 04F0      		brlt .+2
 31285 d4f8 00C0      		rjmp .L1317
2803:lp_solve_5.5/lp_presolve.c ****       bound = (lp->orig_rhs[i] - Coeff2*bound) / Coeff1;
 31286               		.loc 2 2803 0
 31287 d4fa 8D8D      		ldd r24,Y+29
 31288 d4fc 9E8D      		ldd r25,Y+30
 31289 d4fe 8A55      		subi r24,90
 31290 d500 9D4F      		sbci r25,-3
 31291 d502 FC01      		movw r30,r24
 31292 d504 2081      		ld r18,Z
 31293 d506 3181      		ldd r19,Z+1
 31294 d508 8B81      		ldd r24,Y+3
 31295 d50a 9C81      		ldd r25,Y+4
 31296 d50c 880F      		lsl r24
 31297 d50e 991F      		rol r25
 31298 d510 880F      		lsl r24
 31299 d512 991F      		rol r25
 31300 d514 820F      		add r24,r18
 31301 d516 931F      		adc r25,r19
 31302 d518 FC01      		movw r30,r24
 31303 d51a C080      		ld r12,Z
 31304 d51c D180      		ldd r13,Z+1
 31305 d51e E280      		ldd r14,Z+2
 31306 d520 F380      		ldd r15,Z+3
 31307 d522 CE01      		movw r24,r28
 31308 d524 8A5B      		subi r24,-70
 31309 d526 9F4F      		sbci r25,-1
 31310 d528 FC01      		movw r30,r24
 31311 d52a 8081      		ld r24,Z
 31312 d52c 9181      		ldd r25,Z+1
 31313 d52e A281      		ldd r26,Z+2
 31314 d530 B381      		ldd r27,Z+3
 31315 d532 2AA5      		ldd r18,Y+42
 31316 d534 3BA5      		ldd r19,Y+43
 31317 d536 4CA5      		ldd r20,Y+44
 31318 d538 5DA5      		ldd r21,Y+45
 31319 d53a BC01      		movw r22,r24
 31320 d53c CD01      		movw r24,r26
 31321 d53e 0E94 0000 		call __mulsf3
 31322 d542 DC01      		movw r26,r24
 31323 d544 CB01      		movw r24,r22
 31324 d546 9C01      		movw r18,r24
 31325 d548 AD01      		movw r20,r26
 31326 d54a C701      		movw r24,r14
 31327 d54c B601      		movw r22,r12
 31328 d54e 0E94 0000 		call __subsf3
 31329 d552 DC01      		movw r26,r24
 31330 d554 CB01      		movw r24,r22
 31331 d556 7C01      		movw r14,r24
 31332 d558 8D01      		movw r16,r26
 31333 d55a CE01      		movw r24,r28
 31334 d55c 8E5B      		subi r24,-66
 31335 d55e 9F4F      		sbci r25,-1
 31336 d560 FC01      		movw r30,r24
 31337 d562 8081      		ld r24,Z
 31338 d564 9181      		ldd r25,Z+1
 31339 d566 A281      		ldd r26,Z+2
 31340 d568 B381      		ldd r27,Z+3
 31341 d56a 9C01      		movw r18,r24
 31342 d56c AD01      		movw r20,r26
 31343 d56e C801      		movw r24,r16
 31344 d570 B701      		movw r22,r14
 31345 d572 0E94 0000 		call __divsf3
 31346 d576 DC01      		movw r26,r24
 31347 d578 CB01      		movw r24,r22
 31348 d57a 8AA7      		std Y+42,r24
 31349 d57c 9BA7      		std Y+43,r25
 31350 d57e ACA7      		std Y+44,r26
 31351 d580 BDA7      		std Y+45,r27
2804:lp_solve_5.5/lp_presolve.c ****       if(Value2 > 0) {
 31352               		.loc 2 2804 0
 31353 d582 CE01      		movw r24,r28
 31354 d584 865B      		subi r24,-74
 31355 d586 9F4F      		sbci r25,-1
 31356 d588 FC01      		movw r30,r24
 31357 d58a 8081      		ld r24,Z
 31358 d58c 9181      		ldd r25,Z+1
 31359 d58e A281      		ldd r26,Z+2
 31360 d590 B381      		ldd r27,Z+3
 31361 d592 20E0      		ldi r18,0
 31362 d594 30E0      		ldi r19,0
 31363 d596 A901      		movw r20,r18
 31364 d598 BC01      		movw r22,r24
 31365 d59a CD01      		movw r24,r26
 31366 d59c 0E94 0000 		call __gtsf2
 31367 d5a0 1816      		cp __zero_reg__,r24
 31368 d5a2 04F0      		brlt .+2
 31369 d5a4 00C0      		rjmp .L1418
2805:lp_solve_5.5/lp_presolve.c ****         test = lp->orig_upbo[k];
 31370               		.loc 2 2805 0
 31371 d5a6 8D8D      		ldd r24,Y+29
 31372 d5a8 9E8D      		ldd r25,Y+30
 31373 d5aa 8255      		subi r24,82
 31374 d5ac 9D4F      		sbci r25,-3
 31375 d5ae FC01      		movw r30,r24
 31376 d5b0 2081      		ld r18,Z
 31377 d5b2 3181      		ldd r19,Z+1
 31378 d5b4 8D81      		ldd r24,Y+5
 31379 d5b6 9E81      		ldd r25,Y+6
 31380 d5b8 880F      		lsl r24
 31381 d5ba 991F      		rol r25
 31382 d5bc 880F      		lsl r24
 31383 d5be 991F      		rol r25
 31384 d5c0 820F      		add r24,r18
 31385 d5c2 931F      		adc r25,r19
 31386 d5c4 FC01      		movw r30,r24
 31387 d5c6 8081      		ld r24,Z
 31388 d5c8 9181      		ldd r25,Z+1
 31389 d5ca A281      		ldd r26,Z+2
 31390 d5cc B381      		ldd r27,Z+3
 31391 d5ce 8EA7      		std Y+46,r24
 31392 d5d0 9FA7      		std Y+47,r25
 31393 d5d2 A8AB      		std Y+48,r26
 31394 d5d4 B9AB      		std Y+49,r27
2806:lp_solve_5.5/lp_presolve.c ****         if(bound < test - psdata->epsvalue) {
 31395               		.loc 2 2806 0
 31396 d5d6 CE01      		movw r24,r28
 31397 d5d8 8A5A      		subi r24,-86
 31398 d5da 9F4F      		sbci r25,-1
 31399 d5dc FC01      		movw r30,r24
 31400 d5de 8081      		ld r24,Z
 31401 d5e0 9181      		ldd r25,Z+1
 31402 d5e2 FC01      		movw r30,r24
 31403 d5e4 8489      		ldd r24,Z+20
 31404 d5e6 9589      		ldd r25,Z+21
 31405 d5e8 A689      		ldd r26,Z+22
 31406 d5ea B789      		ldd r27,Z+23
 31407 d5ec 9C01      		movw r18,r24
 31408 d5ee AD01      		movw r20,r26
 31409 d5f0 6EA5      		ldd r22,Y+46
 31410 d5f2 7FA5      		ldd r23,Y+47
 31411 d5f4 88A9      		ldd r24,Y+48
 31412 d5f6 99A9      		ldd r25,Y+49
 31413 d5f8 0E94 0000 		call __subsf3
 31414 d5fc DC01      		movw r26,r24
 31415 d5fe CB01      		movw r24,r22
 31416 d600 2AA5      		ldd r18,Y+42
 31417 d602 3BA5      		ldd r19,Y+43
 31418 d604 4CA5      		ldd r20,Y+44
 31419 d606 5DA5      		ldd r21,Y+45
 31420 d608 BC01      		movw r22,r24
 31421 d60a CD01      		movw r24,r26
 31422 d60c 0E94 0000 		call __gtsf2
 31423 d610 1816      		cp __zero_reg__,r24
 31424 d612 04F0      		brlt .+2
 31425 d614 00C0      		rjmp .L1317
2807:lp_solve_5.5/lp_presolve.c ****           if(is_int(lp, jjx))
 31426               		.loc 2 2807 0
 31427 d616 2CAD      		ldd r18,Y+60
 31428 d618 3DAD      		ldd r19,Y+61
 31429 d61a 8D8D      		ldd r24,Y+29
 31430 d61c 9E8D      		ldd r25,Y+30
 31431 d61e B901      		movw r22,r18
 31432 d620 0E94 0000 		call is_int
 31433 d624 8823      		tst r24
 31434 d626 01F0      		breq .L1323
2808:lp_solve_5.5/lp_presolve.c ****             lp->orig_upbo[k] = floor(bound + lp->epsint);
 31435               		.loc 2 2808 0
 31436 d628 8D8D      		ldd r24,Y+29
 31437 d62a 9E8D      		ldd r25,Y+30
 31438 d62c 8255      		subi r24,82
 31439 d62e 9D4F      		sbci r25,-3
 31440 d630 FC01      		movw r30,r24
 31441 d632 2081      		ld r18,Z
 31442 d634 3181      		ldd r19,Z+1
 31443 d636 8D81      		ldd r24,Y+5
 31444 d638 9E81      		ldd r25,Y+6
 31445 d63a 880F      		lsl r24
 31446 d63c 991F      		rol r25
 31447 d63e 880F      		lsl r24
 31448 d640 991F      		rol r25
 31449 d642 8901      		movw r16,r18
 31450 d644 080F      		add r16,r24
 31451 d646 191F      		adc r17,r25
 31452 d648 8D8D      		ldd r24,Y+29
 31453 d64a 9E8D      		ldd r25,Y+30
 31454 d64c 8659      		subi r24,-106
 31455 d64e 9C4F      		sbci r25,-4
 31456 d650 FC01      		movw r30,r24
 31457 d652 8081      		ld r24,Z
 31458 d654 9181      		ldd r25,Z+1
 31459 d656 A281      		ldd r26,Z+2
 31460 d658 B381      		ldd r27,Z+3
 31461 d65a 2AA5      		ldd r18,Y+42
 31462 d65c 3BA5      		ldd r19,Y+43
 31463 d65e 4CA5      		ldd r20,Y+44
 31464 d660 5DA5      		ldd r21,Y+45
 31465 d662 BC01      		movw r22,r24
 31466 d664 CD01      		movw r24,r26
 31467 d666 0E94 0000 		call __addsf3
 31468 d66a DC01      		movw r26,r24
 31469 d66c CB01      		movw r24,r22
 31470 d66e BC01      		movw r22,r24
 31471 d670 CD01      		movw r24,r26
 31472 d672 0E94 0000 		call floor
 31473 d676 DC01      		movw r26,r24
 31474 d678 CB01      		movw r24,r22
 31475 d67a F801      		movw r30,r16
 31476 d67c 8083      		st Z,r24
 31477 d67e 9183      		std Z+1,r25
 31478 d680 A283      		std Z+2,r26
 31479 d682 B383      		std Z+3,r27
 31480 d684 00C0      		rjmp .L1317
 31481               	.L1323:
2809:lp_solve_5.5/lp_presolve.c ****           else
2810:lp_solve_5.5/lp_presolve.c ****             lp->orig_upbo[k] = presolve_roundrhs(lp, bound, FALSE);
 31482               		.loc 2 2810 0
 31483 d686 8D8D      		ldd r24,Y+29
 31484 d688 9E8D      		ldd r25,Y+30
 31485 d68a 8255      		subi r24,82
 31486 d68c 9D4F      		sbci r25,-3
 31487 d68e FC01      		movw r30,r24
 31488 d690 2081      		ld r18,Z
 31489 d692 3181      		ldd r19,Z+1
 31490 d694 8D81      		ldd r24,Y+5
 31491 d696 9E81      		ldd r25,Y+6
 31492 d698 880F      		lsl r24
 31493 d69a 991F      		rol r25
 31494 d69c 880F      		lsl r24
 31495 d69e 991F      		rol r25
 31496 d6a0 8901      		movw r16,r18
 31497 d6a2 080F      		add r16,r24
 31498 d6a4 191F      		adc r17,r25
 31499 d6a6 8AA5      		ldd r24,Y+42
 31500 d6a8 9BA5      		ldd r25,Y+43
 31501 d6aa ACA5      		ldd r26,Y+44
 31502 d6ac BDA5      		ldd r27,Y+45
 31503 d6ae ED8D      		ldd r30,Y+29
 31504 d6b0 FE8D      		ldd r31,Y+30
 31505 d6b2 20E0      		ldi r18,0
 31506 d6b4 AC01      		movw r20,r24
 31507 d6b6 BD01      		movw r22,r26
 31508 d6b8 CF01      		movw r24,r30
 31509 d6ba 0E94 0000 		call presolve_roundrhs
 31510 d6be DC01      		movw r26,r24
 31511 d6c0 CB01      		movw r24,r22
 31512 d6c2 F801      		movw r30,r16
 31513 d6c4 8083      		st Z,r24
 31514 d6c6 9183      		std Z+1,r25
 31515 d6c8 A283      		std Z+2,r26
 31516 d6ca B383      		std Z+3,r27
 31517 d6cc 00C0      		rjmp .L1317
 31518               	.L1418:
2811:lp_solve_5.5/lp_presolve.c ****         }
2812:lp_solve_5.5/lp_presolve.c ****       }
2813:lp_solve_5.5/lp_presolve.c ****       else {
2814:lp_solve_5.5/lp_presolve.c ****         test = lp->orig_lowbo[k];
 31519               		.loc 2 2814 0
 31520 d6ce 8D8D      		ldd r24,Y+29
 31521 d6d0 9E8D      		ldd r25,Y+30
 31522 d6d2 8E54      		subi r24,78
 31523 d6d4 9D4F      		sbci r25,-3
 31524 d6d6 FC01      		movw r30,r24
 31525 d6d8 2081      		ld r18,Z
 31526 d6da 3181      		ldd r19,Z+1
 31527 d6dc 8D81      		ldd r24,Y+5
 31528 d6de 9E81      		ldd r25,Y+6
 31529 d6e0 880F      		lsl r24
 31530 d6e2 991F      		rol r25
 31531 d6e4 880F      		lsl r24
 31532 d6e6 991F      		rol r25
 31533 d6e8 820F      		add r24,r18
 31534 d6ea 931F      		adc r25,r19
 31535 d6ec FC01      		movw r30,r24
 31536 d6ee 8081      		ld r24,Z
 31537 d6f0 9181      		ldd r25,Z+1
 31538 d6f2 A281      		ldd r26,Z+2
 31539 d6f4 B381      		ldd r27,Z+3
 31540 d6f6 8EA7      		std Y+46,r24
 31541 d6f8 9FA7      		std Y+47,r25
 31542 d6fa A8AB      		std Y+48,r26
 31543 d6fc B9AB      		std Y+49,r27
2815:lp_solve_5.5/lp_presolve.c ****         if(bound > test + psdata->epsvalue) {
 31544               		.loc 2 2815 0
 31545 d6fe CE01      		movw r24,r28
 31546 d700 8A5A      		subi r24,-86
 31547 d702 9F4F      		sbci r25,-1
 31548 d704 FC01      		movw r30,r24
 31549 d706 8081      		ld r24,Z
 31550 d708 9181      		ldd r25,Z+1
 31551 d70a FC01      		movw r30,r24
 31552 d70c 8489      		ldd r24,Z+20
 31553 d70e 9589      		ldd r25,Z+21
 31554 d710 A689      		ldd r26,Z+22
 31555 d712 B789      		ldd r27,Z+23
 31556 d714 2EA5      		ldd r18,Y+46
 31557 d716 3FA5      		ldd r19,Y+47
 31558 d718 48A9      		ldd r20,Y+48
 31559 d71a 59A9      		ldd r21,Y+49
 31560 d71c BC01      		movw r22,r24
 31561 d71e CD01      		movw r24,r26
 31562 d720 0E94 0000 		call __addsf3
 31563 d724 DC01      		movw r26,r24
 31564 d726 CB01      		movw r24,r22
 31565 d728 2AA5      		ldd r18,Y+42
 31566 d72a 3BA5      		ldd r19,Y+43
 31567 d72c 4CA5      		ldd r20,Y+44
 31568 d72e 5DA5      		ldd r21,Y+45
 31569 d730 BC01      		movw r22,r24
 31570 d732 CD01      		movw r24,r26
 31571 d734 0E94 0000 		call __ltsf2
 31572 d738 8823      		tst r24
 31573 d73a 04F0      		brlt .+2
 31574 d73c 00C0      		rjmp .L1317
2816:lp_solve_5.5/lp_presolve.c ****           if(is_int(lp, jjx))
 31575               		.loc 2 2816 0
 31576 d73e 2CAD      		ldd r18,Y+60
 31577 d740 3DAD      		ldd r19,Y+61
 31578 d742 8D8D      		ldd r24,Y+29
 31579 d744 9E8D      		ldd r25,Y+30
 31580 d746 B901      		movw r22,r18
 31581 d748 0E94 0000 		call is_int
 31582 d74c 8823      		tst r24
 31583 d74e 01F0      		breq .L1325
2817:lp_solve_5.5/lp_presolve.c ****             lp->orig_lowbo[k] = ceil(bound - lp->epsint);
 31584               		.loc 2 2817 0
 31585 d750 8D8D      		ldd r24,Y+29
 31586 d752 9E8D      		ldd r25,Y+30
 31587 d754 8E54      		subi r24,78
 31588 d756 9D4F      		sbci r25,-3
 31589 d758 FC01      		movw r30,r24
 31590 d75a 2081      		ld r18,Z
 31591 d75c 3181      		ldd r19,Z+1
 31592 d75e 8D81      		ldd r24,Y+5
 31593 d760 9E81      		ldd r25,Y+6
 31594 d762 880F      		lsl r24
 31595 d764 991F      		rol r25
 31596 d766 880F      		lsl r24
 31597 d768 991F      		rol r25
 31598 d76a 8901      		movw r16,r18
 31599 d76c 080F      		add r16,r24
 31600 d76e 191F      		adc r17,r25
 31601 d770 8D8D      		ldd r24,Y+29
 31602 d772 9E8D      		ldd r25,Y+30
 31603 d774 8659      		subi r24,-106
 31604 d776 9C4F      		sbci r25,-4
 31605 d778 FC01      		movw r30,r24
 31606 d77a 8081      		ld r24,Z
 31607 d77c 9181      		ldd r25,Z+1
 31608 d77e A281      		ldd r26,Z+2
 31609 d780 B381      		ldd r27,Z+3
 31610 d782 9C01      		movw r18,r24
 31611 d784 AD01      		movw r20,r26
 31612 d786 6AA5      		ldd r22,Y+42
 31613 d788 7BA5      		ldd r23,Y+43
 31614 d78a 8CA5      		ldd r24,Y+44
 31615 d78c 9DA5      		ldd r25,Y+45
 31616 d78e 0E94 0000 		call __subsf3
 31617 d792 DC01      		movw r26,r24
 31618 d794 CB01      		movw r24,r22
 31619 d796 BC01      		movw r22,r24
 31620 d798 CD01      		movw r24,r26
 31621 d79a 0E94 0000 		call ceil
 31622 d79e DC01      		movw r26,r24
 31623 d7a0 CB01      		movw r24,r22
 31624 d7a2 F801      		movw r30,r16
 31625 d7a4 8083      		st Z,r24
 31626 d7a6 9183      		std Z+1,r25
 31627 d7a8 A283      		std Z+2,r26
 31628 d7aa B383      		std Z+3,r27
 31629 d7ac 00C0      		rjmp .L1317
 31630               	.L1325:
2818:lp_solve_5.5/lp_presolve.c ****           else
2819:lp_solve_5.5/lp_presolve.c ****             lp->orig_lowbo[k] = presolve_roundrhs(lp, bound, TRUE);
 31631               		.loc 2 2819 0
 31632 d7ae 8D8D      		ldd r24,Y+29
 31633 d7b0 9E8D      		ldd r25,Y+30
 31634 d7b2 8E54      		subi r24,78
 31635 d7b4 9D4F      		sbci r25,-3
 31636 d7b6 FC01      		movw r30,r24
 31637 d7b8 2081      		ld r18,Z
 31638 d7ba 3181      		ldd r19,Z+1
 31639 d7bc 8D81      		ldd r24,Y+5
 31640 d7be 9E81      		ldd r25,Y+6
 31641 d7c0 880F      		lsl r24
 31642 d7c2 991F      		rol r25
 31643 d7c4 880F      		lsl r24
 31644 d7c6 991F      		rol r25
 31645 d7c8 8901      		movw r16,r18
 31646 d7ca 080F      		add r16,r24
 31647 d7cc 191F      		adc r17,r25
 31648 d7ce 8AA5      		ldd r24,Y+42
 31649 d7d0 9BA5      		ldd r25,Y+43
 31650 d7d2 ACA5      		ldd r26,Y+44
 31651 d7d4 BDA5      		ldd r27,Y+45
 31652 d7d6 ED8D      		ldd r30,Y+29
 31653 d7d8 FE8D      		ldd r31,Y+30
 31654 d7da 21E0      		ldi r18,lo8(1)
 31655 d7dc AC01      		movw r20,r24
 31656 d7de BD01      		movw r22,r26
 31657 d7e0 CF01      		movw r24,r30
 31658 d7e2 0E94 0000 		call presolve_roundrhs
 31659 d7e6 DC01      		movw r26,r24
 31660 d7e8 CB01      		movw r24,r22
 31661 d7ea F801      		movw r30,r16
 31662 d7ec 8083      		st Z,r24
 31663 d7ee 9183      		std Z+1,r25
 31664 d7f0 A283      		std Z+2,r26
 31665 d7f2 B383      		std Z+3,r27
 31666               	.L1317:
2820:lp_solve_5.5/lp_presolve.c ****         }
2821:lp_solve_5.5/lp_presolve.c ****       }
2822:lp_solve_5.5/lp_presolve.c ****     }
2823:lp_solve_5.5/lp_presolve.c ****     bound = upbound;
 31667               		.loc 2 2823 0
 31668 d7f4 8D89      		ldd r24,Y+21
 31669 d7f6 9E89      		ldd r25,Y+22
 31670 d7f8 AF89      		ldd r26,Y+23
 31671 d7fa B88D      		ldd r27,Y+24
 31672 d7fc 8AA7      		std Y+42,r24
 31673 d7fe 9BA7      		std Y+43,r25
 31674 d800 ACA7      		std Y+44,r26
 31675 d802 BDA7      		std Y+45,r27
2824:lp_solve_5.5/lp_presolve.c ****     if(bound < lp->infinite) {
 31676               		.loc 2 2824 0
 31677 d804 8D8D      		ldd r24,Y+29
 31678 d806 9E8D      		ldd r25,Y+30
 31679 d808 865F      		subi r24,-10
 31680 d80a 9C4F      		sbci r25,-4
 31681 d80c FC01      		movw r30,r24
 31682 d80e 8081      		ld r24,Z
 31683 d810 9181      		ldd r25,Z+1
 31684 d812 A281      		ldd r26,Z+2
 31685 d814 B381      		ldd r27,Z+3
 31686 d816 2AA5      		ldd r18,Y+42
 31687 d818 3BA5      		ldd r19,Y+43
 31688 d81a 4CA5      		ldd r20,Y+44
 31689 d81c 5DA5      		ldd r21,Y+45
 31690 d81e BC01      		movw r22,r24
 31691 d820 CD01      		movw r24,r26
 31692 d822 0E94 0000 		call __gtsf2
 31693 d826 1816      		cp __zero_reg__,r24
 31694 d828 04F0      		brlt .+2
 31695 d82a 00C0      		rjmp .L1326
2825:lp_solve_5.5/lp_presolve.c ****       bound = (lp->orig_rhs[i] - Coeff2*bound) / Coeff1;
 31696               		.loc 2 2825 0
 31697 d82c 8D8D      		ldd r24,Y+29
 31698 d82e 9E8D      		ldd r25,Y+30
 31699 d830 8A55      		subi r24,90
 31700 d832 9D4F      		sbci r25,-3
 31701 d834 FC01      		movw r30,r24
 31702 d836 2081      		ld r18,Z
 31703 d838 3181      		ldd r19,Z+1
 31704 d83a 8B81      		ldd r24,Y+3
 31705 d83c 9C81      		ldd r25,Y+4
 31706 d83e 880F      		lsl r24
 31707 d840 991F      		rol r25
 31708 d842 880F      		lsl r24
 31709 d844 991F      		rol r25
 31710 d846 820F      		add r24,r18
 31711 d848 931F      		adc r25,r19
 31712 d84a FC01      		movw r30,r24
 31713 d84c C080      		ld r12,Z
 31714 d84e D180      		ldd r13,Z+1
 31715 d850 E280      		ldd r14,Z+2
 31716 d852 F380      		ldd r15,Z+3
 31717 d854 CE01      		movw r24,r28
 31718 d856 8A5B      		subi r24,-70
 31719 d858 9F4F      		sbci r25,-1
 31720 d85a FC01      		movw r30,r24
 31721 d85c 8081      		ld r24,Z
 31722 d85e 9181      		ldd r25,Z+1
 31723 d860 A281      		ldd r26,Z+2
 31724 d862 B381      		ldd r27,Z+3
 31725 d864 2AA5      		ldd r18,Y+42
 31726 d866 3BA5      		ldd r19,Y+43
 31727 d868 4CA5      		ldd r20,Y+44
 31728 d86a 5DA5      		ldd r21,Y+45
 31729 d86c BC01      		movw r22,r24
 31730 d86e CD01      		movw r24,r26
 31731 d870 0E94 0000 		call __mulsf3
 31732 d874 DC01      		movw r26,r24
 31733 d876 CB01      		movw r24,r22
 31734 d878 9C01      		movw r18,r24
 31735 d87a AD01      		movw r20,r26
 31736 d87c C701      		movw r24,r14
 31737 d87e B601      		movw r22,r12
 31738 d880 0E94 0000 		call __subsf3
 31739 d884 DC01      		movw r26,r24
 31740 d886 CB01      		movw r24,r22
 31741 d888 7C01      		movw r14,r24
 31742 d88a 8D01      		movw r16,r26
 31743 d88c CE01      		movw r24,r28
 31744 d88e 8E5B      		subi r24,-66
 31745 d890 9F4F      		sbci r25,-1
 31746 d892 FC01      		movw r30,r24
 31747 d894 8081      		ld r24,Z
 31748 d896 9181      		ldd r25,Z+1
 31749 d898 A281      		ldd r26,Z+2
 31750 d89a B381      		ldd r27,Z+3
 31751 d89c 9C01      		movw r18,r24
 31752 d89e AD01      		movw r20,r26
 31753 d8a0 C801      		movw r24,r16
 31754 d8a2 B701      		movw r22,r14
 31755 d8a4 0E94 0000 		call __divsf3
 31756 d8a8 DC01      		movw r26,r24
 31757 d8aa CB01      		movw r24,r22
 31758 d8ac 8AA7      		std Y+42,r24
 31759 d8ae 9BA7      		std Y+43,r25
 31760 d8b0 ACA7      		std Y+44,r26
 31761 d8b2 BDA7      		std Y+45,r27
2826:lp_solve_5.5/lp_presolve.c ****       if(Value2 < 0) {
 31762               		.loc 2 2826 0
 31763 d8b4 CE01      		movw r24,r28
 31764 d8b6 865B      		subi r24,-74
 31765 d8b8 9F4F      		sbci r25,-1
 31766 d8ba FC01      		movw r30,r24
 31767 d8bc 8081      		ld r24,Z
 31768 d8be 9181      		ldd r25,Z+1
 31769 d8c0 A281      		ldd r26,Z+2
 31770 d8c2 B381      		ldd r27,Z+3
 31771 d8c4 20E0      		ldi r18,0
 31772 d8c6 30E0      		ldi r19,0
 31773 d8c8 A901      		movw r20,r18
 31774 d8ca BC01      		movw r22,r24
 31775 d8cc CD01      		movw r24,r26
 31776 d8ce 0E94 0000 		call __ltsf2
 31777 d8d2 8823      		tst r24
 31778 d8d4 04F0      		brlt .+2
 31779 d8d6 00C0      		rjmp .L1419
2827:lp_solve_5.5/lp_presolve.c ****         test = lp->orig_upbo[k];
 31780               		.loc 2 2827 0
 31781 d8d8 8D8D      		ldd r24,Y+29
 31782 d8da 9E8D      		ldd r25,Y+30
 31783 d8dc 8255      		subi r24,82
 31784 d8de 9D4F      		sbci r25,-3
 31785 d8e0 FC01      		movw r30,r24
 31786 d8e2 2081      		ld r18,Z
 31787 d8e4 3181      		ldd r19,Z+1
 31788 d8e6 8D81      		ldd r24,Y+5
 31789 d8e8 9E81      		ldd r25,Y+6
 31790 d8ea 880F      		lsl r24
 31791 d8ec 991F      		rol r25
 31792 d8ee 880F      		lsl r24
 31793 d8f0 991F      		rol r25
 31794 d8f2 820F      		add r24,r18
 31795 d8f4 931F      		adc r25,r19
 31796 d8f6 FC01      		movw r30,r24
 31797 d8f8 8081      		ld r24,Z
 31798 d8fa 9181      		ldd r25,Z+1
 31799 d8fc A281      		ldd r26,Z+2
 31800 d8fe B381      		ldd r27,Z+3
 31801 d900 8EA7      		std Y+46,r24
 31802 d902 9FA7      		std Y+47,r25
 31803 d904 A8AB      		std Y+48,r26
 31804 d906 B9AB      		std Y+49,r27
2828:lp_solve_5.5/lp_presolve.c ****         if(bound < test - psdata->epsvalue) {
 31805               		.loc 2 2828 0
 31806 d908 CE01      		movw r24,r28
 31807 d90a 8A5A      		subi r24,-86
 31808 d90c 9F4F      		sbci r25,-1
 31809 d90e FC01      		movw r30,r24
 31810 d910 8081      		ld r24,Z
 31811 d912 9181      		ldd r25,Z+1
 31812 d914 FC01      		movw r30,r24
 31813 d916 8489      		ldd r24,Z+20
 31814 d918 9589      		ldd r25,Z+21
 31815 d91a A689      		ldd r26,Z+22
 31816 d91c B789      		ldd r27,Z+23
 31817 d91e 9C01      		movw r18,r24
 31818 d920 AD01      		movw r20,r26
 31819 d922 6EA5      		ldd r22,Y+46
 31820 d924 7FA5      		ldd r23,Y+47
 31821 d926 88A9      		ldd r24,Y+48
 31822 d928 99A9      		ldd r25,Y+49
 31823 d92a 0E94 0000 		call __subsf3
 31824 d92e DC01      		movw r26,r24
 31825 d930 CB01      		movw r24,r22
 31826 d932 2AA5      		ldd r18,Y+42
 31827 d934 3BA5      		ldd r19,Y+43
 31828 d936 4CA5      		ldd r20,Y+44
 31829 d938 5DA5      		ldd r21,Y+45
 31830 d93a BC01      		movw r22,r24
 31831 d93c CD01      		movw r24,r26
 31832 d93e 0E94 0000 		call __gtsf2
 31833 d942 1816      		cp __zero_reg__,r24
 31834 d944 04F0      		brlt .+2
 31835 d946 00C0      		rjmp .L1326
2829:lp_solve_5.5/lp_presolve.c ****           if(is_int(lp, jjx))
 31836               		.loc 2 2829 0
 31837 d948 2CAD      		ldd r18,Y+60
 31838 d94a 3DAD      		ldd r19,Y+61
 31839 d94c 8D8D      		ldd r24,Y+29
 31840 d94e 9E8D      		ldd r25,Y+30
 31841 d950 B901      		movw r22,r18
 31842 d952 0E94 0000 		call is_int
 31843 d956 8823      		tst r24
 31844 d958 01F0      		breq .L1332
2830:lp_solve_5.5/lp_presolve.c ****             lp->orig_upbo[k] = floor(bound + lp->epsint);
 31845               		.loc 2 2830 0
 31846 d95a 8D8D      		ldd r24,Y+29
 31847 d95c 9E8D      		ldd r25,Y+30
 31848 d95e 8255      		subi r24,82
 31849 d960 9D4F      		sbci r25,-3
 31850 d962 FC01      		movw r30,r24
 31851 d964 2081      		ld r18,Z
 31852 d966 3181      		ldd r19,Z+1
 31853 d968 8D81      		ldd r24,Y+5
 31854 d96a 9E81      		ldd r25,Y+6
 31855 d96c 880F      		lsl r24
 31856 d96e 991F      		rol r25
 31857 d970 880F      		lsl r24
 31858 d972 991F      		rol r25
 31859 d974 8901      		movw r16,r18
 31860 d976 080F      		add r16,r24
 31861 d978 191F      		adc r17,r25
 31862 d97a 8D8D      		ldd r24,Y+29
 31863 d97c 9E8D      		ldd r25,Y+30
 31864 d97e 8659      		subi r24,-106
 31865 d980 9C4F      		sbci r25,-4
 31866 d982 FC01      		movw r30,r24
 31867 d984 8081      		ld r24,Z
 31868 d986 9181      		ldd r25,Z+1
 31869 d988 A281      		ldd r26,Z+2
 31870 d98a B381      		ldd r27,Z+3
 31871 d98c 2AA5      		ldd r18,Y+42
 31872 d98e 3BA5      		ldd r19,Y+43
 31873 d990 4CA5      		ldd r20,Y+44
 31874 d992 5DA5      		ldd r21,Y+45
 31875 d994 BC01      		movw r22,r24
 31876 d996 CD01      		movw r24,r26
 31877 d998 0E94 0000 		call __addsf3
 31878 d99c DC01      		movw r26,r24
 31879 d99e CB01      		movw r24,r22
 31880 d9a0 BC01      		movw r22,r24
 31881 d9a2 CD01      		movw r24,r26
 31882 d9a4 0E94 0000 		call floor
 31883 d9a8 DC01      		movw r26,r24
 31884 d9aa CB01      		movw r24,r22
 31885 d9ac F801      		movw r30,r16
 31886 d9ae 8083      		st Z,r24
 31887 d9b0 9183      		std Z+1,r25
 31888 d9b2 A283      		std Z+2,r26
 31889 d9b4 B383      		std Z+3,r27
 31890 d9b6 00C0      		rjmp .L1326
 31891               	.L1332:
2831:lp_solve_5.5/lp_presolve.c ****           else
2832:lp_solve_5.5/lp_presolve.c ****             lp->orig_upbo[k] = presolve_roundrhs(lp, bound, FALSE);
 31892               		.loc 2 2832 0
 31893 d9b8 8D8D      		ldd r24,Y+29
 31894 d9ba 9E8D      		ldd r25,Y+30
 31895 d9bc 8255      		subi r24,82
 31896 d9be 9D4F      		sbci r25,-3
 31897 d9c0 FC01      		movw r30,r24
 31898 d9c2 2081      		ld r18,Z
 31899 d9c4 3181      		ldd r19,Z+1
 31900 d9c6 8D81      		ldd r24,Y+5
 31901 d9c8 9E81      		ldd r25,Y+6
 31902 d9ca 880F      		lsl r24
 31903 d9cc 991F      		rol r25
 31904 d9ce 880F      		lsl r24
 31905 d9d0 991F      		rol r25
 31906 d9d2 8901      		movw r16,r18
 31907 d9d4 080F      		add r16,r24
 31908 d9d6 191F      		adc r17,r25
 31909 d9d8 8AA5      		ldd r24,Y+42
 31910 d9da 9BA5      		ldd r25,Y+43
 31911 d9dc ACA5      		ldd r26,Y+44
 31912 d9de BDA5      		ldd r27,Y+45
 31913 d9e0 ED8D      		ldd r30,Y+29
 31914 d9e2 FE8D      		ldd r31,Y+30
 31915 d9e4 20E0      		ldi r18,0
 31916 d9e6 AC01      		movw r20,r24
 31917 d9e8 BD01      		movw r22,r26
 31918 d9ea CF01      		movw r24,r30
 31919 d9ec 0E94 0000 		call presolve_roundrhs
 31920 d9f0 DC01      		movw r26,r24
 31921 d9f2 CB01      		movw r24,r22
 31922 d9f4 F801      		movw r30,r16
 31923 d9f6 8083      		st Z,r24
 31924 d9f8 9183      		std Z+1,r25
 31925 d9fa A283      		std Z+2,r26
 31926 d9fc B383      		std Z+3,r27
 31927 d9fe 00C0      		rjmp .L1326
 31928               	.L1419:
2833:lp_solve_5.5/lp_presolve.c ****         }
2834:lp_solve_5.5/lp_presolve.c ****       }
2835:lp_solve_5.5/lp_presolve.c ****       else {
2836:lp_solve_5.5/lp_presolve.c ****         test = lp->orig_lowbo[k];
 31929               		.loc 2 2836 0
 31930 da00 8D8D      		ldd r24,Y+29
 31931 da02 9E8D      		ldd r25,Y+30
 31932 da04 8E54      		subi r24,78
 31933 da06 9D4F      		sbci r25,-3
 31934 da08 FC01      		movw r30,r24
 31935 da0a 2081      		ld r18,Z
 31936 da0c 3181      		ldd r19,Z+1
 31937 da0e 8D81      		ldd r24,Y+5
 31938 da10 9E81      		ldd r25,Y+6
 31939 da12 880F      		lsl r24
 31940 da14 991F      		rol r25
 31941 da16 880F      		lsl r24
 31942 da18 991F      		rol r25
 31943 da1a 820F      		add r24,r18
 31944 da1c 931F      		adc r25,r19
 31945 da1e FC01      		movw r30,r24
 31946 da20 8081      		ld r24,Z
 31947 da22 9181      		ldd r25,Z+1
 31948 da24 A281      		ldd r26,Z+2
 31949 da26 B381      		ldd r27,Z+3
 31950 da28 8EA7      		std Y+46,r24
 31951 da2a 9FA7      		std Y+47,r25
 31952 da2c A8AB      		std Y+48,r26
 31953 da2e B9AB      		std Y+49,r27
2837:lp_solve_5.5/lp_presolve.c ****         if(bound > test + psdata->epsvalue) {
 31954               		.loc 2 2837 0
 31955 da30 CE01      		movw r24,r28
 31956 da32 8A5A      		subi r24,-86
 31957 da34 9F4F      		sbci r25,-1
 31958 da36 FC01      		movw r30,r24
 31959 da38 8081      		ld r24,Z
 31960 da3a 9181      		ldd r25,Z+1
 31961 da3c FC01      		movw r30,r24
 31962 da3e 8489      		ldd r24,Z+20
 31963 da40 9589      		ldd r25,Z+21
 31964 da42 A689      		ldd r26,Z+22
 31965 da44 B789      		ldd r27,Z+23
 31966 da46 2EA5      		ldd r18,Y+46
 31967 da48 3FA5      		ldd r19,Y+47
 31968 da4a 48A9      		ldd r20,Y+48
 31969 da4c 59A9      		ldd r21,Y+49
 31970 da4e BC01      		movw r22,r24
 31971 da50 CD01      		movw r24,r26
 31972 da52 0E94 0000 		call __addsf3
 31973 da56 DC01      		movw r26,r24
 31974 da58 CB01      		movw r24,r22
 31975 da5a 2AA5      		ldd r18,Y+42
 31976 da5c 3BA5      		ldd r19,Y+43
 31977 da5e 4CA5      		ldd r20,Y+44
 31978 da60 5DA5      		ldd r21,Y+45
 31979 da62 BC01      		movw r22,r24
 31980 da64 CD01      		movw r24,r26
 31981 da66 0E94 0000 		call __ltsf2
 31982 da6a 8823      		tst r24
 31983 da6c 04F0      		brlt .+2
 31984 da6e 00C0      		rjmp .L1326
2838:lp_solve_5.5/lp_presolve.c ****           if(is_int(lp, jjx))
 31985               		.loc 2 2838 0
 31986 da70 2CAD      		ldd r18,Y+60
 31987 da72 3DAD      		ldd r19,Y+61
 31988 da74 8D8D      		ldd r24,Y+29
 31989 da76 9E8D      		ldd r25,Y+30
 31990 da78 B901      		movw r22,r18
 31991 da7a 0E94 0000 		call is_int
 31992 da7e 8823      		tst r24
 31993 da80 01F0      		breq .L1334
2839:lp_solve_5.5/lp_presolve.c ****             lp->orig_lowbo[k] = ceil(bound - lp->epsint);
 31994               		.loc 2 2839 0
 31995 da82 8D8D      		ldd r24,Y+29
 31996 da84 9E8D      		ldd r25,Y+30
 31997 da86 8E54      		subi r24,78
 31998 da88 9D4F      		sbci r25,-3
 31999 da8a FC01      		movw r30,r24
 32000 da8c 2081      		ld r18,Z
 32001 da8e 3181      		ldd r19,Z+1
 32002 da90 8D81      		ldd r24,Y+5
 32003 da92 9E81      		ldd r25,Y+6
 32004 da94 880F      		lsl r24
 32005 da96 991F      		rol r25
 32006 da98 880F      		lsl r24
 32007 da9a 991F      		rol r25
 32008 da9c 8901      		movw r16,r18
 32009 da9e 080F      		add r16,r24
 32010 daa0 191F      		adc r17,r25
 32011 daa2 8D8D      		ldd r24,Y+29
 32012 daa4 9E8D      		ldd r25,Y+30
 32013 daa6 8659      		subi r24,-106
 32014 daa8 9C4F      		sbci r25,-4
 32015 daaa FC01      		movw r30,r24
 32016 daac 8081      		ld r24,Z
 32017 daae 9181      		ldd r25,Z+1
 32018 dab0 A281      		ldd r26,Z+2
 32019 dab2 B381      		ldd r27,Z+3
 32020 dab4 9C01      		movw r18,r24
 32021 dab6 AD01      		movw r20,r26
 32022 dab8 6AA5      		ldd r22,Y+42
 32023 daba 7BA5      		ldd r23,Y+43
 32024 dabc 8CA5      		ldd r24,Y+44
 32025 dabe 9DA5      		ldd r25,Y+45
 32026 dac0 0E94 0000 		call __subsf3
 32027 dac4 DC01      		movw r26,r24
 32028 dac6 CB01      		movw r24,r22
 32029 dac8 BC01      		movw r22,r24
 32030 daca CD01      		movw r24,r26
 32031 dacc 0E94 0000 		call ceil
 32032 dad0 DC01      		movw r26,r24
 32033 dad2 CB01      		movw r24,r22
 32034 dad4 F801      		movw r30,r16
 32035 dad6 8083      		st Z,r24
 32036 dad8 9183      		std Z+1,r25
 32037 dada A283      		std Z+2,r26
 32038 dadc B383      		std Z+3,r27
 32039 dade 00C0      		rjmp .L1326
 32040               	.L1334:
2840:lp_solve_5.5/lp_presolve.c ****           else
2841:lp_solve_5.5/lp_presolve.c ****             lp->orig_lowbo[k] = presolve_roundrhs(lp, bound, TRUE);
 32041               		.loc 2 2841 0
 32042 dae0 8D8D      		ldd r24,Y+29
 32043 dae2 9E8D      		ldd r25,Y+30
 32044 dae4 8E54      		subi r24,78
 32045 dae6 9D4F      		sbci r25,-3
 32046 dae8 FC01      		movw r30,r24
 32047 daea 2081      		ld r18,Z
 32048 daec 3181      		ldd r19,Z+1
 32049 daee 8D81      		ldd r24,Y+5
 32050 daf0 9E81      		ldd r25,Y+6
 32051 daf2 880F      		lsl r24
 32052 daf4 991F      		rol r25
 32053 daf6 880F      		lsl r24
 32054 daf8 991F      		rol r25
 32055 dafa 8901      		movw r16,r18
 32056 dafc 080F      		add r16,r24
 32057 dafe 191F      		adc r17,r25
 32058 db00 8AA5      		ldd r24,Y+42
 32059 db02 9BA5      		ldd r25,Y+43
 32060 db04 ACA5      		ldd r26,Y+44
 32061 db06 BDA5      		ldd r27,Y+45
 32062 db08 ED8D      		ldd r30,Y+29
 32063 db0a FE8D      		ldd r31,Y+30
 32064 db0c 21E0      		ldi r18,lo8(1)
 32065 db0e AC01      		movw r20,r24
 32066 db10 BD01      		movw r22,r26
 32067 db12 CF01      		movw r24,r30
 32068 db14 0E94 0000 		call presolve_roundrhs
 32069 db18 DC01      		movw r26,r24
 32070 db1a CB01      		movw r24,r22
 32071 db1c F801      		movw r30,r16
 32072 db1e 8083      		st Z,r24
 32073 db20 9183      		std Z+1,r25
 32074 db22 A283      		std Z+2,r26
 32075 db24 B383      		std Z+3,r27
 32076               	.L1326:
2842:lp_solve_5.5/lp_presolve.c ****         }
2843:lp_solve_5.5/lp_presolve.c ****       }
2844:lp_solve_5.5/lp_presolve.c ****     }
2845:lp_solve_5.5/lp_presolve.c **** 
2846:lp_solve_5.5/lp_presolve.c **** #ifdef Eq2Reldiff
2847:lp_solve_5.5/lp_presolve.c ****     test = 2*lp->epsvalue;
 32077               		.loc 2 2847 0
 32078 db26 8D8D      		ldd r24,Y+29
 32079 db28 9E8D      		ldd r25,Y+30
 32080 db2a 8A5E      		subi r24,-22
 32081 db2c 9C4F      		sbci r25,-4
 32082 db2e FC01      		movw r30,r24
 32083 db30 8081      		ld r24,Z
 32084 db32 9181      		ldd r25,Z+1
 32085 db34 A281      		ldd r26,Z+2
 32086 db36 B381      		ldd r27,Z+3
 32087 db38 9C01      		movw r18,r24
 32088 db3a AD01      		movw r20,r26
 32089 db3c BC01      		movw r22,r24
 32090 db3e CD01      		movw r24,r26
 32091 db40 0E94 0000 		call __addsf3
 32092 db44 DC01      		movw r26,r24
 32093 db46 CB01      		movw r24,r22
 32094 db48 8EA7      		std Y+46,r24
 32095 db4a 9FA7      		std Y+47,r25
 32096 db4c A8AB      		std Y+48,r26
 32097 db4e B9AB      		std Y+49,r27
2848:lp_solve_5.5/lp_presolve.c **** #else
2849:lp_solve_5.5/lp_presolve.c ****     test = psdata->epsvalue;
2850:lp_solve_5.5/lp_presolve.c **** #endif
2851:lp_solve_5.5/lp_presolve.c ****     if(/*(lp->orig_upbo[k] < lp->orig_lowbo[k]) ||*/
2852:lp_solve_5.5/lp_presolve.c **** #ifdef Eq2Reldiff
2853:lp_solve_5.5/lp_presolve.c ****        (fabs(my_reldiff(lp->orig_upbo[k],lp->orig_lowbo[k])) < test)) {
 32098               		.loc 2 2853 0
 32099 db50 8D8D      		ldd r24,Y+29
 32100 db52 9E8D      		ldd r25,Y+30
 32101 db54 8255      		subi r24,82
 32102 db56 9D4F      		sbci r25,-3
 32103 db58 FC01      		movw r30,r24
 32104 db5a 2081      		ld r18,Z
 32105 db5c 3181      		ldd r19,Z+1
 32106 db5e 8D81      		ldd r24,Y+5
 32107 db60 9E81      		ldd r25,Y+6
 32108 db62 880F      		lsl r24
 32109 db64 991F      		rol r25
 32110 db66 880F      		lsl r24
 32111 db68 991F      		rol r25
 32112 db6a 820F      		add r24,r18
 32113 db6c 931F      		adc r25,r19
 32114 db6e FC01      		movw r30,r24
 32115 db70 8081      		ld r24,Z
 32116 db72 9181      		ldd r25,Z+1
 32117 db74 A281      		ldd r26,Z+2
 32118 db76 B381      		ldd r27,Z+3
 32119 db78 2D8D      		ldd r18,Y+29
 32120 db7a 3E8D      		ldd r19,Y+30
 32121 db7c 2E54      		subi r18,78
 32122 db7e 3D4F      		sbci r19,-3
 32123 db80 F901      		movw r30,r18
 32124 db82 4081      		ld r20,Z
 32125 db84 5181      		ldd r21,Z+1
 32126 db86 2D81      		ldd r18,Y+5
 32127 db88 3E81      		ldd r19,Y+6
 32128 db8a 220F      		lsl r18
 32129 db8c 331F      		rol r19
 32130 db8e 220F      		lsl r18
 32131 db90 331F      		rol r19
 32132 db92 240F      		add r18,r20
 32133 db94 351F      		adc r19,r21
 32134 db96 F901      		movw r30,r18
 32135 db98 2081      		ld r18,Z
 32136 db9a 3181      		ldd r19,Z+1
 32137 db9c 4281      		ldd r20,Z+2
 32138 db9e 5381      		ldd r21,Z+3
 32139 dba0 BC01      		movw r22,r24
 32140 dba2 CD01      		movw r24,r26
 32141 dba4 0E94 0000 		call __subsf3
 32142 dba8 DC01      		movw r26,r24
 32143 dbaa CB01      		movw r24,r22
 32144 dbac 6C01      		movw r12,r24
 32145 dbae 7D01      		movw r14,r26
 32146 dbb0 8D8D      		ldd r24,Y+29
 32147 dbb2 9E8D      		ldd r25,Y+30
 32148 dbb4 8E54      		subi r24,78
 32149 dbb6 9D4F      		sbci r25,-3
 32150 dbb8 FC01      		movw r30,r24
 32151 dbba 2081      		ld r18,Z
 32152 dbbc 3181      		ldd r19,Z+1
 32153 dbbe 8D81      		ldd r24,Y+5
 32154 dbc0 9E81      		ldd r25,Y+6
 32155 dbc2 880F      		lsl r24
 32156 dbc4 991F      		rol r25
 32157 dbc6 880F      		lsl r24
 32158 dbc8 991F      		rol r25
 32159 dbca 820F      		add r24,r18
 32160 dbcc 931F      		adc r25,r19
 32161 dbce FC01      		movw r30,r24
 32162 dbd0 8081      		ld r24,Z
 32163 dbd2 9181      		ldd r25,Z+1
 32164 dbd4 A281      		ldd r26,Z+2
 32165 dbd6 B381      		ldd r27,Z+3
 32166 dbd8 BF77      		andi r27,0x7f
 32167 dbda 20E0      		ldi r18,0
 32168 dbdc 30E0      		ldi r19,0
 32169 dbde 40E8      		ldi r20,lo8(-128)
 32170 dbe0 5FE3      		ldi r21,lo8(63)
 32171 dbe2 BC01      		movw r22,r24
 32172 dbe4 CD01      		movw r24,r26
 32173 dbe6 0E94 0000 		call __addsf3
 32174 dbea DC01      		movw r26,r24
 32175 dbec CB01      		movw r24,r22
 32176 dbee 9C01      		movw r18,r24
 32177 dbf0 AD01      		movw r20,r26
 32178 dbf2 C701      		movw r24,r14
 32179 dbf4 B601      		movw r22,r12
 32180 dbf6 0E94 0000 		call __divsf3
 32181 dbfa DC01      		movw r26,r24
 32182 dbfc CB01      		movw r24,r22
 32183 dbfe BF77      		andi r27,0x7f
2851:lp_solve_5.5/lp_presolve.c **** #ifdef Eq2Reldiff
 32184               		.loc 2 2851 0
 32185 dc00 2EA5      		ldd r18,Y+46
 32186 dc02 3FA5      		ldd r19,Y+47
 32187 dc04 48A9      		ldd r20,Y+48
 32188 dc06 59A9      		ldd r21,Y+49
 32189 dc08 BC01      		movw r22,r24
 32190 dc0a CD01      		movw r24,r26
 32191 dc0c 0E94 0000 		call __ltsf2
 32192 dc10 8823      		tst r24
 32193 dc12 04F0      		brlt .+2
 32194 dc14 00C0      		rjmp .L1420
2854:lp_solve_5.5/lp_presolve.c **** #else
2855:lp_solve_5.5/lp_presolve.c ****        (fabs(lp->orig_upbo[k] - lp->orig_lowbo[k]) < test)) {
2856:lp_solve_5.5/lp_presolve.c **** #endif
2857:lp_solve_5.5/lp_presolve.c ****       my_roundzero(lp->orig_lowbo[k], test);
 32195               		.loc 2 2857 0
 32196 dc16 8D8D      		ldd r24,Y+29
 32197 dc18 9E8D      		ldd r25,Y+30
 32198 dc1a 8E54      		subi r24,78
 32199 dc1c 9D4F      		sbci r25,-3
 32200 dc1e FC01      		movw r30,r24
 32201 dc20 2081      		ld r18,Z
 32202 dc22 3181      		ldd r19,Z+1
 32203 dc24 8D81      		ldd r24,Y+5
 32204 dc26 9E81      		ldd r25,Y+6
 32205 dc28 880F      		lsl r24
 32206 dc2a 991F      		rol r25
 32207 dc2c 880F      		lsl r24
 32208 dc2e 991F      		rol r25
 32209 dc30 820F      		add r24,r18
 32210 dc32 931F      		adc r25,r19
 32211 dc34 FC01      		movw r30,r24
 32212 dc36 8081      		ld r24,Z
 32213 dc38 9181      		ldd r25,Z+1
 32214 dc3a A281      		ldd r26,Z+2
 32215 dc3c B381      		ldd r27,Z+3
 32216 dc3e BF77      		andi r27,0x7f
 32217 dc40 2EA5      		ldd r18,Y+46
 32218 dc42 3FA5      		ldd r19,Y+47
 32219 dc44 48A9      		ldd r20,Y+48
 32220 dc46 59A9      		ldd r21,Y+49
 32221 dc48 BC01      		movw r22,r24
 32222 dc4a CD01      		movw r24,r26
 32223 dc4c 0E94 0000 		call __ltsf2
 32224 dc50 8823      		tst r24
 32225 dc52 04F4      		brge .L1337
 32226               		.loc 2 2857 0 is_stmt 0 discriminator 1
 32227 dc54 8D8D      		ldd r24,Y+29
 32228 dc56 9E8D      		ldd r25,Y+30
 32229 dc58 8E54      		subi r24,78
 32230 dc5a 9D4F      		sbci r25,-3
 32231 dc5c FC01      		movw r30,r24
 32232 dc5e 2081      		ld r18,Z
 32233 dc60 3181      		ldd r19,Z+1
 32234 dc62 8D81      		ldd r24,Y+5
 32235 dc64 9E81      		ldd r25,Y+6
 32236 dc66 880F      		lsl r24
 32237 dc68 991F      		rol r25
 32238 dc6a 880F      		lsl r24
 32239 dc6c 991F      		rol r25
 32240 dc6e 820F      		add r24,r18
 32241 dc70 931F      		adc r25,r19
 32242 dc72 FC01      		movw r30,r24
 32243 dc74 1082      		st Z,__zero_reg__
 32244 dc76 1182      		std Z+1,__zero_reg__
 32245 dc78 1282      		std Z+2,__zero_reg__
 32246 dc7a 1382      		std Z+3,__zero_reg__
 32247               	.L1337:
2858:lp_solve_5.5/lp_presolve.c ****       lp->orig_upbo[k] = lp->orig_lowbo[k];
 32248               		.loc 2 2858 0 is_stmt 1
 32249 dc7c 8D8D      		ldd r24,Y+29
 32250 dc7e 9E8D      		ldd r25,Y+30
 32251 dc80 8255      		subi r24,82
 32252 dc82 9D4F      		sbci r25,-3
 32253 dc84 FC01      		movw r30,r24
 32254 dc86 2081      		ld r18,Z
 32255 dc88 3181      		ldd r19,Z+1
 32256 dc8a 8D81      		ldd r24,Y+5
 32257 dc8c 9E81      		ldd r25,Y+6
 32258 dc8e 880F      		lsl r24
 32259 dc90 991F      		rol r25
 32260 dc92 880F      		lsl r24
 32261 dc94 991F      		rol r25
 32262 dc96 280F      		add r18,r24
 32263 dc98 391F      		adc r19,r25
 32264 dc9a 8D8D      		ldd r24,Y+29
 32265 dc9c 9E8D      		ldd r25,Y+30
 32266 dc9e 8E54      		subi r24,78
 32267 dca0 9D4F      		sbci r25,-3
 32268 dca2 FC01      		movw r30,r24
 32269 dca4 4081      		ld r20,Z
 32270 dca6 5181      		ldd r21,Z+1
 32271 dca8 8D81      		ldd r24,Y+5
 32272 dcaa 9E81      		ldd r25,Y+6
 32273 dcac 880F      		lsl r24
 32274 dcae 991F      		rol r25
 32275 dcb0 880F      		lsl r24
 32276 dcb2 991F      		rol r25
 32277 dcb4 840F      		add r24,r20
 32278 dcb6 951F      		adc r25,r21
 32279 dcb8 FC01      		movw r30,r24
 32280 dcba 8081      		ld r24,Z
 32281 dcbc 9181      		ldd r25,Z+1
 32282 dcbe A281      		ldd r26,Z+2
 32283 dcc0 B381      		ldd r27,Z+3
 32284 dcc2 F901      		movw r30,r18
 32285 dcc4 8083      		st Z,r24
 32286 dcc6 9183      		std Z+1,r25
 32287 dcc8 A283      		std Z+2,r26
 32288 dcca B383      		std Z+3,r27
 32289 dccc 00C0      		rjmp .L1339
 32290               	.L1420:
2859:lp_solve_5.5/lp_presolve.c ****     }
2860:lp_solve_5.5/lp_presolve.c ****     else {
2861:lp_solve_5.5/lp_presolve.c ****       my_roundzero(lp->orig_upbo[k], test);
 32291               		.loc 2 2861 0
 32292 dcce 8D8D      		ldd r24,Y+29
 32293 dcd0 9E8D      		ldd r25,Y+30
 32294 dcd2 8255      		subi r24,82
 32295 dcd4 9D4F      		sbci r25,-3
 32296 dcd6 FC01      		movw r30,r24
 32297 dcd8 2081      		ld r18,Z
 32298 dcda 3181      		ldd r19,Z+1
 32299 dcdc 8D81      		ldd r24,Y+5
 32300 dcde 9E81      		ldd r25,Y+6
 32301 dce0 880F      		lsl r24
 32302 dce2 991F      		rol r25
 32303 dce4 880F      		lsl r24
 32304 dce6 991F      		rol r25
 32305 dce8 820F      		add r24,r18
 32306 dcea 931F      		adc r25,r19
 32307 dcec FC01      		movw r30,r24
 32308 dcee 8081      		ld r24,Z
 32309 dcf0 9181      		ldd r25,Z+1
 32310 dcf2 A281      		ldd r26,Z+2
 32311 dcf4 B381      		ldd r27,Z+3
 32312 dcf6 BF77      		andi r27,0x7f
 32313 dcf8 2EA5      		ldd r18,Y+46
 32314 dcfa 3FA5      		ldd r19,Y+47
 32315 dcfc 48A9      		ldd r20,Y+48
 32316 dcfe 59A9      		ldd r21,Y+49
 32317 dd00 BC01      		movw r22,r24
 32318 dd02 CD01      		movw r24,r26
 32319 dd04 0E94 0000 		call __ltsf2
 32320 dd08 8823      		tst r24
 32321 dd0a 04F4      		brge .L1340
 32322               		.loc 2 2861 0 is_stmt 0 discriminator 1
 32323 dd0c 8D8D      		ldd r24,Y+29
 32324 dd0e 9E8D      		ldd r25,Y+30
 32325 dd10 8255      		subi r24,82
 32326 dd12 9D4F      		sbci r25,-3
 32327 dd14 FC01      		movw r30,r24
 32328 dd16 2081      		ld r18,Z
 32329 dd18 3181      		ldd r19,Z+1
 32330 dd1a 8D81      		ldd r24,Y+5
 32331 dd1c 9E81      		ldd r25,Y+6
 32332 dd1e 880F      		lsl r24
 32333 dd20 991F      		rol r25
 32334 dd22 880F      		lsl r24
 32335 dd24 991F      		rol r25
 32336 dd26 820F      		add r24,r18
 32337 dd28 931F      		adc r25,r19
 32338 dd2a FC01      		movw r30,r24
 32339 dd2c 1082      		st Z,__zero_reg__
 32340 dd2e 1182      		std Z+1,__zero_reg__
 32341 dd30 1282      		std Z+2,__zero_reg__
 32342 dd32 1382      		std Z+3,__zero_reg__
 32343               	.L1340:
2862:lp_solve_5.5/lp_presolve.c ****       my_roundzero(lp->orig_lowbo[k], test);
 32344               		.loc 2 2862 0 is_stmt 1
 32345 dd34 8D8D      		ldd r24,Y+29
 32346 dd36 9E8D      		ldd r25,Y+30
 32347 dd38 8E54      		subi r24,78
 32348 dd3a 9D4F      		sbci r25,-3
 32349 dd3c FC01      		movw r30,r24
 32350 dd3e 2081      		ld r18,Z
 32351 dd40 3181      		ldd r19,Z+1
 32352 dd42 8D81      		ldd r24,Y+5
 32353 dd44 9E81      		ldd r25,Y+6
 32354 dd46 880F      		lsl r24
 32355 dd48 991F      		rol r25
 32356 dd4a 880F      		lsl r24
 32357 dd4c 991F      		rol r25
 32358 dd4e 820F      		add r24,r18
 32359 dd50 931F      		adc r25,r19
 32360 dd52 FC01      		movw r30,r24
 32361 dd54 8081      		ld r24,Z
 32362 dd56 9181      		ldd r25,Z+1
 32363 dd58 A281      		ldd r26,Z+2
 32364 dd5a B381      		ldd r27,Z+3
 32365 dd5c BF77      		andi r27,0x7f
 32366 dd5e 2EA5      		ldd r18,Y+46
 32367 dd60 3FA5      		ldd r19,Y+47
 32368 dd62 48A9      		ldd r20,Y+48
 32369 dd64 59A9      		ldd r21,Y+49
 32370 dd66 BC01      		movw r22,r24
 32371 dd68 CD01      		movw r24,r26
 32372 dd6a 0E94 0000 		call __ltsf2
 32373 dd6e 8823      		tst r24
 32374 dd70 04F4      		brge .L1339
 32375               		.loc 2 2862 0 is_stmt 0 discriminator 1
 32376 dd72 8D8D      		ldd r24,Y+29
 32377 dd74 9E8D      		ldd r25,Y+30
 32378 dd76 8E54      		subi r24,78
 32379 dd78 9D4F      		sbci r25,-3
 32380 dd7a FC01      		movw r30,r24
 32381 dd7c 2081      		ld r18,Z
 32382 dd7e 3181      		ldd r19,Z+1
 32383 dd80 8D81      		ldd r24,Y+5
 32384 dd82 9E81      		ldd r25,Y+6
 32385 dd84 880F      		lsl r24
 32386 dd86 991F      		rol r25
 32387 dd88 880F      		lsl r24
 32388 dd8a 991F      		rol r25
 32389 dd8c 820F      		add r24,r18
 32390 dd8e 931F      		adc r25,r19
 32391 dd90 FC01      		movw r30,r24
 32392 dd92 1082      		st Z,__zero_reg__
 32393 dd94 1182      		std Z+1,__zero_reg__
 32394 dd96 1282      		std Z+2,__zero_reg__
 32395 dd98 1382      		std Z+3,__zero_reg__
 32396               	.L1339:
2863:lp_solve_5.5/lp_presolve.c ****     }
2864:lp_solve_5.5/lp_presolve.c **** 
2865:lp_solve_5.5/lp_presolve.c ****     if(/*(upbound < lobound) ||*/
2866:lp_solve_5.5/lp_presolve.c **** #ifdef Eq2Reldiff
2867:lp_solve_5.5/lp_presolve.c ****        (fabs(my_reldiff(upbound, lobound)) < test)) {
 32397               		.loc 2 2867 0 is_stmt 1
 32398 dd9a 2989      		ldd r18,Y+17
 32399 dd9c 3A89      		ldd r19,Y+18
 32400 dd9e 4B89      		ldd r20,Y+19
 32401 dda0 5C89      		ldd r21,Y+20
 32402 dda2 6D89      		ldd r22,Y+21
 32403 dda4 7E89      		ldd r23,Y+22
 32404 dda6 8F89      		ldd r24,Y+23
 32405 dda8 988D      		ldd r25,Y+24
 32406 ddaa 0E94 0000 		call __subsf3
 32407 ddae DC01      		movw r26,r24
 32408 ddb0 CB01      		movw r24,r22
 32409 ddb2 6C01      		movw r12,r24
 32410 ddb4 7D01      		movw r14,r26
 32411 ddb6 8989      		ldd r24,Y+17
 32412 ddb8 9A89      		ldd r25,Y+18
 32413 ddba AB89      		ldd r26,Y+19
 32414 ddbc BC89      		ldd r27,Y+20
 32415 ddbe BF77      		andi r27,0x7f
 32416 ddc0 20E0      		ldi r18,0
 32417 ddc2 30E0      		ldi r19,0
 32418 ddc4 40E8      		ldi r20,lo8(-128)
 32419 ddc6 5FE3      		ldi r21,lo8(63)
 32420 ddc8 BC01      		movw r22,r24
 32421 ddca CD01      		movw r24,r26
 32422 ddcc 0E94 0000 		call __addsf3
 32423 ddd0 DC01      		movw r26,r24
 32424 ddd2 CB01      		movw r24,r22
 32425 ddd4 9C01      		movw r18,r24
 32426 ddd6 AD01      		movw r20,r26
 32427 ddd8 C701      		movw r24,r14
 32428 ddda B601      		movw r22,r12
 32429 dddc 0E94 0000 		call __divsf3
 32430 dde0 DC01      		movw r26,r24
 32431 dde2 CB01      		movw r24,r22
 32432 dde4 BF77      		andi r27,0x7f
2865:lp_solve_5.5/lp_presolve.c **** #ifdef Eq2Reldiff
 32433               		.loc 2 2865 0
 32434 dde6 2EA5      		ldd r18,Y+46
 32435 dde8 3FA5      		ldd r19,Y+47
 32436 ddea 48A9      		ldd r20,Y+48
 32437 ddec 59A9      		ldd r21,Y+49
 32438 ddee BC01      		movw r22,r24
 32439 ddf0 CD01      		movw r24,r26
 32440 ddf2 0E94 0000 		call __ltsf2
 32441 ddf6 8823      		tst r24
 32442 ddf8 04F4      		brge .L1343
2868:lp_solve_5.5/lp_presolve.c **** #else
2869:lp_solve_5.5/lp_presolve.c ****        (fabs(upbound - lobound) < test)) {
2870:lp_solve_5.5/lp_presolve.c **** #endif
2871:lp_solve_5.5/lp_presolve.c ****       my_roundzero(lobound, test);
 32443               		.loc 2 2871 0
 32444 ddfa 8989      		ldd r24,Y+17
 32445 ddfc 9A89      		ldd r25,Y+18
 32446 ddfe AB89      		ldd r26,Y+19
 32447 de00 BC89      		ldd r27,Y+20
 32448 de02 BF77      		andi r27,0x7f
 32449 de04 2EA5      		ldd r18,Y+46
 32450 de06 3FA5      		ldd r19,Y+47
 32451 de08 48A9      		ldd r20,Y+48
 32452 de0a 59A9      		ldd r21,Y+49
 32453 de0c BC01      		movw r22,r24
 32454 de0e CD01      		movw r24,r26
 32455 de10 0E94 0000 		call __ltsf2
 32456 de14 8823      		tst r24
 32457 de16 04F4      		brge .L1345
 32458               		.loc 2 2871 0 is_stmt 0 discriminator 1
 32459 de18 198A      		std Y+17,__zero_reg__
 32460 de1a 1A8A      		std Y+18,__zero_reg__
 32461 de1c 1B8A      		std Y+19,__zero_reg__
 32462 de1e 1C8A      		std Y+20,__zero_reg__
 32463               	.L1345:
2872:lp_solve_5.5/lp_presolve.c ****       lp->orig_upbo[nrows+jx] = lobound;
 32464               		.loc 2 2872 0 is_stmt 1
 32465 de20 8D8D      		ldd r24,Y+29
 32466 de22 9E8D      		ldd r25,Y+30
 32467 de24 8255      		subi r24,82
 32468 de26 9D4F      		sbci r25,-3
 32469 de28 FC01      		movw r30,r24
 32470 de2a 2081      		ld r18,Z
 32471 de2c 3181      		ldd r19,Z+1
 32472 de2e 4AAD      		ldd r20,Y+58
 32473 de30 5BAD      		ldd r21,Y+59
 32474 de32 8F8D      		ldd r24,Y+31
 32475 de34 98A1      		ldd r25,Y+32
 32476 de36 840F      		add r24,r20
 32477 de38 951F      		adc r25,r21
 32478 de3a 880F      		lsl r24
 32479 de3c 991F      		rol r25
 32480 de3e 880F      		lsl r24
 32481 de40 991F      		rol r25
 32482 de42 280F      		add r18,r24
 32483 de44 391F      		adc r19,r25
 32484 de46 8989      		ldd r24,Y+17
 32485 de48 9A89      		ldd r25,Y+18
 32486 de4a AB89      		ldd r26,Y+19
 32487 de4c BC89      		ldd r27,Y+20
 32488 de4e F901      		movw r30,r18
 32489 de50 8083      		st Z,r24
 32490 de52 9183      		std Z+1,r25
 32491 de54 A283      		std Z+2,r26
 32492 de56 B383      		std Z+3,r27
2873:lp_solve_5.5/lp_presolve.c ****       upbound = lobound;
 32493               		.loc 2 2873 0
 32494 de58 8989      		ldd r24,Y+17
 32495 de5a 9A89      		ldd r25,Y+18
 32496 de5c AB89      		ldd r26,Y+19
 32497 de5e BC89      		ldd r27,Y+20
 32498 de60 8D8B      		std Y+21,r24
 32499 de62 9E8B      		std Y+22,r25
 32500 de64 AF8B      		std Y+23,r26
 32501 de66 B88F      		std Y+24,r27
 32502               	.L1343:
2874:lp_solve_5.5/lp_presolve.c ****     }
2875:lp_solve_5.5/lp_presolve.c **** 
2876:lp_solve_5.5/lp_presolve.c ****     /* Loop over the non-zero rows of the column (jx) to be eliminated;
2877:lp_solve_5.5/lp_presolve.c ****       substitute jx-variable by updating rhs and jjx coefficients */
2878:lp_solve_5.5/lp_presolve.c ****     colitem = colvalue;
 32503               		.loc 2 2878 0
 32504 de68 CE01      		movw r24,r28
 32505 de6a 825B      		subi r24,-78
 32506 de6c 9F4F      		sbci r25,-1
 32507 de6e FC01      		movw r30,r24
 32508 de70 8081      		ld r24,Z
 32509 de72 9181      		ldd r25,Z+1
 32510 de74 9A8F      		std Y+26,r25
 32511 de76 898F      		std Y+25,r24
2879:lp_solve_5.5/lp_presolve.c ****     plucount = psdata->rows->plucount;
 32512               		.loc 2 2879 0
 32513 de78 CE01      		movw r24,r28
 32514 de7a 8A5A      		subi r24,-86
 32515 de7c 9F4F      		sbci r25,-1
 32516 de7e FC01      		movw r30,r24
 32517 de80 8081      		ld r24,Z
 32518 de82 9181      		ldd r25,Z+1
 32519 de84 FC01      		movw r30,r24
 32520 de86 8081      		ld r24,Z
 32521 de88 9181      		ldd r25,Z+1
 32522 de8a FC01      		movw r30,r24
 32523 de8c 8681      		ldd r24,Z+6
 32524 de8e 9781      		ldd r25,Z+7
 32525 de90 9BAB      		std Y+51,r25
 32526 de92 8AAB      		std Y+50,r24
2880:lp_solve_5.5/lp_presolve.c ****     negcount = psdata->rows->negcount;
 32527               		.loc 2 2880 0
 32528 de94 CE01      		movw r24,r28
 32529 de96 8A5A      		subi r24,-86
 32530 de98 9F4F      		sbci r25,-1
 32531 de9a FC01      		movw r30,r24
 32532 de9c 8081      		ld r24,Z
 32533 de9e 9181      		ldd r25,Z+1
 32534 dea0 FC01      		movw r30,r24
 32535 dea2 8081      		ld r24,Z
 32536 dea4 9181      		ldd r25,Z+1
 32537 dea6 FC01      		movw r30,r24
 32538 dea8 8085      		ldd r24,Z+8
 32539 deaa 9185      		ldd r25,Z+9
 32540 deac 9DAB      		std Y+53,r25
 32541 deae 8CAB      		std Y+52,r24
2881:lp_solve_5.5/lp_presolve.c ****     colplu = 0;
 32542               		.loc 2 2881 0
 32543 deb0 1886      		std Y+8,__zero_reg__
 32544 deb2 1F82      		std Y+7,__zero_reg__
2882:lp_solve_5.5/lp_presolve.c ****     colneg = 0;
 32545               		.loc 2 2882 0
 32546 deb4 1A86      		std Y+10,__zero_reg__
 32547 deb6 1986      		std Y+9,__zero_reg__
2883:lp_solve_5.5/lp_presolve.c ****     /* Count of non-zeros in the independent column jjx */
2884:lp_solve_5.5/lp_presolve.c ****     item = presolve_collength(psdata, jjx) - 1;
 32548               		.loc 2 2884 0
 32549 deb8 2CAD      		ldd r18,Y+60
 32550 deba 3DAD      		ldd r19,Y+61
 32551 debc CE01      		movw r24,r28
 32552 debe 8A5A      		subi r24,-86
 32553 dec0 9F4F      		sbci r25,-1
 32554 dec2 FC01      		movw r30,r24
 32555 dec4 8081      		ld r24,Z
 32556 dec6 9181      		ldd r25,Z+1
 32557 dec8 B901      		movw r22,r18
 32558 deca 0E94 0000 		call presolve_collength
 32559 dece 0197      		sbiw r24,1
 32560 ded0 9FAF      		std Y+63,r25
 32561 ded2 8EAF      		std Y+62,r24
2885:lp_solve_5.5/lp_presolve.c ****     if(isnz_origobj(lp, jjx))
 32562               		.loc 2 2885 0
 32563 ded4 2CAD      		ldd r18,Y+60
 32564 ded6 3DAD      		ldd r19,Y+61
 32565 ded8 8D8D      		ldd r24,Y+29
 32566 deda 9E8D      		ldd r25,Y+30
 32567 dedc B901      		movw r22,r18
 32568 dede 0E94 0000 		call isnz_origobj
 32569 dee2 8823      		tst r24
 32570 dee4 01F0      		breq .L1347
2886:lp_solve_5.5/lp_presolve.c ****       item++;
 32571               		.loc 2 2886 0
 32572 dee6 8EAD      		ldd r24,Y+62
 32573 dee8 9FAD      		ldd r25,Y+63
 32574 deea 0196      		adiw r24,1
 32575 deec 9FAF      		std Y+63,r25
 32576 deee 8EAF      		std Y+62,r24
 32577               	.L1347:
2887:lp_solve_5.5/lp_presolve.c ****     for(k = 0; k <= nrows; k++, colitem++) {
 32578               		.loc 2 2887 0
 32579 def0 1E82      		std Y+6,__zero_reg__
 32580 def2 1D82      		std Y+5,__zero_reg__
 32581 def4 00C0      		rjmp .L1348
 32582               	.L1374:
2888:lp_solve_5.5/lp_presolve.c **** 
2889:lp_solve_5.5/lp_presolve.c ****       bound = delvalue[k];
 32583               		.loc 2 2889 0
 32584 def6 CE01      		movw r24,r28
 32585 def8 805B      		subi r24,-80
 32586 defa 9F4F      		sbci r25,-1
 32587 defc FC01      		movw r30,r24
 32588 defe 2081      		ld r18,Z
 32589 df00 3181      		ldd r19,Z+1
 32590 df02 8D81      		ldd r24,Y+5
 32591 df04 9E81      		ldd r25,Y+6
 32592 df06 880F      		lsl r24
 32593 df08 991F      		rol r25
 32594 df0a 880F      		lsl r24
 32595 df0c 991F      		rol r25
 32596 df0e 820F      		add r24,r18
 32597 df10 931F      		adc r25,r19
 32598 df12 FC01      		movw r30,r24
 32599 df14 8081      		ld r24,Z
 32600 df16 9181      		ldd r25,Z+1
 32601 df18 A281      		ldd r26,Z+2
 32602 df1a B381      		ldd r27,Z+3
 32603 df1c 8AA7      		std Y+42,r24
 32604 df1e 9BA7      		std Y+43,r25
 32605 df20 ACA7      		std Y+44,r26
 32606 df22 BDA7      		std Y+45,r27
2890:lp_solve_5.5/lp_presolve.c ****       if((k == i) || (bound == 0) ||
 32607               		.loc 2 2890 0
 32608 df24 2D81      		ldd r18,Y+5
 32609 df26 3E81      		ldd r19,Y+6
 32610 df28 8B81      		ldd r24,Y+3
 32611 df2a 9C81      		ldd r25,Y+4
 32612 df2c 2817      		cp r18,r24
 32613 df2e 3907      		cpc r19,r25
 32614 df30 01F4      		brne .+2
 32615 df32 00C0      		rjmp .L1429
 32616               		.loc 2 2890 0 is_stmt 0 discriminator 1
 32617 df34 20E0      		ldi r18,0
 32618 df36 30E0      		ldi r19,0
 32619 df38 A901      		movw r20,r18
 32620 df3a 6AA5      		ldd r22,Y+42
 32621 df3c 7BA5      		ldd r23,Y+43
 32622 df3e 8CA5      		ldd r24,Y+44
 32623 df40 9DA5      		ldd r25,Y+45
 32624 df42 0E94 0000 		call __eqsf2
 32625 df46 8823      		tst r24
 32626 df48 01F4      		brne .+2
 32627 df4a 00C0      		rjmp .L1429
 32628               		.loc 2 2890 0 discriminator 2
 32629 df4c 8D81      		ldd r24,Y+5
 32630 df4e 9E81      		ldd r25,Y+6
 32631 df50 1816      		cp __zero_reg__,r24
 32632 df52 1906      		cpc __zero_reg__,r25
 32633 df54 04F4      		brge .L1350
2891:lp_solve_5.5/lp_presolve.c ****          ((k > 0) && !isActiveLink(psdata->rows->varmap, k)))
 32634               		.loc 2 2891 0 is_stmt 1
 32635 df56 CE01      		movw r24,r28
 32636 df58 8A5A      		subi r24,-86
 32637 df5a 9F4F      		sbci r25,-1
 32638 df5c FC01      		movw r30,r24
 32639 df5e 8081      		ld r24,Z
 32640 df60 9181      		ldd r25,Z+1
 32641 df62 FC01      		movw r30,r24
 32642 df64 8081      		ld r24,Z
 32643 df66 9181      		ldd r25,Z+1
 32644 df68 FC01      		movw r30,r24
 32645 df6a 8081      		ld r24,Z
 32646 df6c 9181      		ldd r25,Z+1
 32647 df6e 2D81      		ldd r18,Y+5
 32648 df70 3E81      		ldd r19,Y+6
 32649 df72 B901      		movw r22,r18
 32650 df74 0E94 0000 		call isActiveLink
 32651 df78 8823      		tst r24
 32652 df7a 01F4      		brne .+2
 32653 df7c 00C0      		rjmp .L1429
 32654               	.L1350:
2892:lp_solve_5.5/lp_presolve.c ****         continue;
2893:lp_solve_5.5/lp_presolve.c **** 
2894:lp_solve_5.5/lp_presolve.c ****       /* Do constraint and nz-count updates for the substituted variable */
2895:lp_solve_5.5/lp_presolve.c ****       product = bound*Value1;
 32655               		.loc 2 2895 0
 32656 df7e 2DA1      		ldd r18,Y+37
 32657 df80 3EA1      		ldd r19,Y+38
 32658 df82 4FA1      		ldd r20,Y+39
 32659 df84 58A5      		ldd r21,Y+40
 32660 df86 6AA5      		ldd r22,Y+42
 32661 df88 7BA5      		ldd r23,Y+43
 32662 df8a 8CA5      		ldd r24,Y+44
 32663 df8c 9DA5      		ldd r25,Y+45
 32664 df8e 0E94 0000 		call __mulsf3
 32665 df92 DC01      		movw r26,r24
 32666 df94 CB01      		movw r24,r22
 32667 df96 8EAB      		std Y+54,r24
 32668 df98 9FAB      		std Y+55,r25
 32669 df9a A8AF      		std Y+56,r26
 32670 df9c B9AF      		std Y+57,r27
2896:lp_solve_5.5/lp_presolve.c **** 
2897:lp_solve_5.5/lp_presolve.c ****       /* "Raw"/unsigned data */
2898:lp_solve_5.5/lp_presolve.c ****       presolve_adjustrhs(psdata, k, my_chsign(is_chsign(lp, k), product), test);
 32671               		.loc 2 2898 0
 32672 df9e 2D81      		ldd r18,Y+5
 32673 dfa0 3E81      		ldd r19,Y+6
 32674 dfa2 8D8D      		ldd r24,Y+29
 32675 dfa4 9E8D      		ldd r25,Y+30
 32676 dfa6 B901      		movw r22,r18
 32677 dfa8 0E94 0000 		call is_chsign
 32678 dfac 8823      		tst r24
 32679 dfae 01F0      		breq .L1352
 32680               		.loc 2 2898 0 is_stmt 0 discriminator 1
 32681 dfb0 20E0      		ldi r18,0
 32682 dfb2 30E0      		ldi r19,0
 32683 dfb4 A901      		movw r20,r18
 32684 dfb6 6EA9      		ldd r22,Y+54
 32685 dfb8 7FA9      		ldd r23,Y+55
 32686 dfba 88AD      		ldd r24,Y+56
 32687 dfbc 99AD      		ldd r25,Y+57
 32688 dfbe 0E94 0000 		call __nesf2
 32689 dfc2 8823      		tst r24
 32690 dfc4 01F0      		breq .L1352
 32691               		.loc 2 2898 0 discriminator 3
 32692 dfc6 8EA9      		ldd r24,Y+54
 32693 dfc8 9FA9      		ldd r25,Y+55
 32694 dfca A8AD      		ldd r26,Y+56
 32695 dfcc B9AD      		ldd r27,Y+57
 32696 dfce B058      		subi r27,0x80
 32697 dfd0 00C0      		rjmp .L1354
 32698               	.L1352:
 32699               		.loc 2 2898 0 discriminator 4
 32700 dfd2 8EA9      		ldd r24,Y+54
 32701 dfd4 9FA9      		ldd r25,Y+55
 32702 dfd6 A8AD      		ldd r26,Y+56
 32703 dfd8 B9AD      		ldd r27,Y+57
 32704               	.L1354:
 32705               		.loc 2 2898 0 discriminator 6
 32706 dfda 2EA5      		ldd r18,Y+46
 32707 dfdc 3FA5      		ldd r19,Y+47
 32708 dfde 48A9      		ldd r20,Y+48
 32709 dfe0 59A9      		ldd r21,Y+49
 32710 dfe2 CD80      		ldd r12,Y+5
 32711 dfe4 DE80      		ldd r13,Y+6
 32712 dfe6 BE01      		movw r22,r28
 32713 dfe8 6A5A      		subi r22,-86
 32714 dfea 7F4F      		sbci r23,-1
 32715 dfec FB01      		movw r30,r22
 32716 dfee 0190      		ld __tmp_reg__,Z+
 32717 dff0 F081      		ld r31,Z
 32718 dff2 E02D      		mov r30,__tmp_reg__
 32719 dff4 A296      		adiw r28,96-62
 32720 dff6 FFAF      		std Y+63,r31
 32721 dff8 EEAF      		std Y+62,r30
 32722 dffa A297      		sbiw r28,96-62
 32723 dffc 7901      		movw r14,r18
 32724 dffe 8A01      		movw r16,r20
 32725 e000 9C01      		movw r18,r24
 32726 e002 AD01      		movw r20,r26
 32727 e004 B601      		movw r22,r12
 32728 e006 A296      		adiw r28,96-62
 32729 e008 8EAD      		ldd r24,Y+62
 32730 e00a 9FAD      		ldd r25,Y+63
 32731 e00c A297      		sbiw r28,96-62
 32732 e00e 0E94 0000 		call presolve_adjustrhs
2899:lp_solve_5.5/lp_presolve.c **** 
2900:lp_solve_5.5/lp_presolve.c ****       /* Change back to signed part */
2901:lp_solve_5.5/lp_presolve.c ****       if(*colitem != 0) {
 32733               		.loc 2 2901 0 is_stmt 1 discriminator 6
 32734 e012 898D      		ldd r24,Y+25
 32735 e014 9A8D      		ldd r25,Y+26
 32736 e016 FC01      		movw r30,r24
 32737 e018 8081      		ld r24,Z
 32738 e01a 9181      		ldd r25,Z+1
 32739 e01c A281      		ldd r26,Z+2
 32740 e01e B381      		ldd r27,Z+3
 32741 e020 20E0      		ldi r18,0
 32742 e022 30E0      		ldi r19,0
 32743 e024 A901      		movw r20,r18
 32744 e026 BC01      		movw r22,r24
 32745 e028 CD01      		movw r24,r26
 32746 e02a 0E94 0000 		call __nesf2
 32747 e02e 8823      		tst r24
 32748 e030 01F4      		brne .+2
 32749 e032 00C0      		rjmp .L1355
2902:lp_solve_5.5/lp_presolve.c ****         if(*colitem > 0) {
 32750               		.loc 2 2902 0
 32751 e034 898D      		ldd r24,Y+25
 32752 e036 9A8D      		ldd r25,Y+26
 32753 e038 FC01      		movw r30,r24
 32754 e03a 8081      		ld r24,Z
 32755 e03c 9181      		ldd r25,Z+1
 32756 e03e A281      		ldd r26,Z+2
 32757 e040 B381      		ldd r27,Z+3
 32758 e042 20E0      		ldi r18,0
 32759 e044 30E0      		ldi r19,0
 32760 e046 A901      		movw r20,r18
 32761 e048 BC01      		movw r22,r24
 32762 e04a CD01      		movw r24,r26
 32763 e04c 0E94 0000 		call __gtsf2
 32764 e050 1816      		cp __zero_reg__,r24
 32765 e052 04F4      		brge .L1421
2903:lp_solve_5.5/lp_presolve.c ****           colplu--;
 32766               		.loc 2 2903 0
 32767 e054 8F81      		ldd r24,Y+7
 32768 e056 9885      		ldd r25,Y+8
 32769 e058 0197      		sbiw r24,1
 32770 e05a 9887      		std Y+8,r25
 32771 e05c 8F83      		std Y+7,r24
2904:lp_solve_5.5/lp_presolve.c ****           plucount[k]--;
 32772               		.loc 2 2904 0
 32773 e05e 8D81      		ldd r24,Y+5
 32774 e060 9E81      		ldd r25,Y+6
 32775 e062 880F      		lsl r24
 32776 e064 991F      		rol r25
 32777 e066 2AA9      		ldd r18,Y+50
 32778 e068 3BA9      		ldd r19,Y+51
 32779 e06a 820F      		add r24,r18
 32780 e06c 931F      		adc r25,r19
 32781 e06e FC01      		movw r30,r24
 32782 e070 2081      		ld r18,Z
 32783 e072 3181      		ldd r19,Z+1
 32784 e074 2150      		subi r18,1
 32785 e076 3109      		sbc r19,__zero_reg__
 32786 e078 FC01      		movw r30,r24
 32787 e07a 3183      		std Z+1,r19
 32788 e07c 2083      		st Z,r18
 32789 e07e 00C0      		rjmp .L1359
 32790               	.L1421:
2905:lp_solve_5.5/lp_presolve.c ****         }
2906:lp_solve_5.5/lp_presolve.c ****         else {
2907:lp_solve_5.5/lp_presolve.c ****           colneg--;
 32791               		.loc 2 2907 0
 32792 e080 8985      		ldd r24,Y+9
 32793 e082 9A85      		ldd r25,Y+10
 32794 e084 0197      		sbiw r24,1
 32795 e086 9A87      		std Y+10,r25
 32796 e088 8987      		std Y+9,r24
2908:lp_solve_5.5/lp_presolve.c ****           negcount[k]--;
 32797               		.loc 2 2908 0
 32798 e08a 8D81      		ldd r24,Y+5
 32799 e08c 9E81      		ldd r25,Y+6
 32800 e08e 880F      		lsl r24
 32801 e090 991F      		rol r25
 32802 e092 2CA9      		ldd r18,Y+52
 32803 e094 3DA9      		ldd r19,Y+53
 32804 e096 820F      		add r24,r18
 32805 e098 931F      		adc r25,r19
 32806 e09a FC01      		movw r30,r24
 32807 e09c 2081      		ld r18,Z
 32808 e09e 3181      		ldd r19,Z+1
 32809 e0a0 2150      		subi r18,1
 32810 e0a2 3109      		sbc r19,__zero_reg__
 32811 e0a4 FC01      		movw r30,r24
 32812 e0a6 3183      		std Z+1,r19
 32813 e0a8 2083      		st Z,r18
 32814               	.L1359:
2909:lp_solve_5.5/lp_presolve.c ****         }
2910:lp_solve_5.5/lp_presolve.c ****         if((lobound < 0) && (upbound >= 0)) {
 32815               		.loc 2 2910 0
 32816 e0aa 20E0      		ldi r18,0
 32817 e0ac 30E0      		ldi r19,0
 32818 e0ae A901      		movw r20,r18
 32819 e0b0 6989      		ldd r22,Y+17
 32820 e0b2 7A89      		ldd r23,Y+18
 32821 e0b4 8B89      		ldd r24,Y+19
 32822 e0b6 9C89      		ldd r25,Y+20
 32823 e0b8 0E94 0000 		call __ltsf2
 32824 e0bc 8823      		tst r24
 32825 e0be 04F0      		brlt .+2
 32826 e0c0 00C0      		rjmp .L1360
 32827               		.loc 2 2910 0 is_stmt 0 discriminator 1
 32828 e0c2 20E0      		ldi r18,0
 32829 e0c4 30E0      		ldi r19,0
 32830 e0c6 A901      		movw r20,r18
 32831 e0c8 6D89      		ldd r22,Y+21
 32832 e0ca 7E89      		ldd r23,Y+22
 32833 e0cc 8F89      		ldd r24,Y+23
 32834 e0ce 988D      		ldd r25,Y+24
 32835 e0d0 0E94 0000 		call __gesf2
 32836 e0d4 8823      		tst r24
 32837 e0d6 04F0      		brlt .L1360
2911:lp_solve_5.5/lp_presolve.c ****           psdata->cols->pluneg[jjx]--;
 32838               		.loc 2 2911 0 is_stmt 1
 32839 e0d8 CE01      		movw r24,r28
 32840 e0da 8A5A      		subi r24,-86
 32841 e0dc 9F4F      		sbci r25,-1
 32842 e0de FC01      		movw r30,r24
 32843 e0e0 8081      		ld r24,Z
 32844 e0e2 9181      		ldd r25,Z+1
 32845 e0e4 FC01      		movw r30,r24
 32846 e0e6 8281      		ldd r24,Z+2
 32847 e0e8 9381      		ldd r25,Z+3
 32848 e0ea FC01      		movw r30,r24
 32849 e0ec 2285      		ldd r18,Z+10
 32850 e0ee 3385      		ldd r19,Z+11
 32851 e0f0 8CAD      		ldd r24,Y+60
 32852 e0f2 9DAD      		ldd r25,Y+61
 32853 e0f4 880F      		lsl r24
 32854 e0f6 991F      		rol r25
 32855 e0f8 820F      		add r24,r18
 32856 e0fa 931F      		adc r25,r19
 32857 e0fc FC01      		movw r30,r24
 32858 e0fe 2081      		ld r18,Z
 32859 e100 3181      		ldd r19,Z+1
 32860 e102 2150      		subi r18,1
 32861 e104 3109      		sbc r19,__zero_reg__
 32862 e106 FC01      		movw r30,r24
 32863 e108 3183      		std Z+1,r19
 32864 e10a 2083      		st Z,r18
2912:lp_solve_5.5/lp_presolve.c ****           psdata->rows->pluneg[k]--;
 32865               		.loc 2 2912 0
 32866 e10c CE01      		movw r24,r28
 32867 e10e 8A5A      		subi r24,-86
 32868 e110 9F4F      		sbci r25,-1
 32869 e112 FC01      		movw r30,r24
 32870 e114 8081      		ld r24,Z
 32871 e116 9181      		ldd r25,Z+1
 32872 e118 FC01      		movw r30,r24
 32873 e11a 8081      		ld r24,Z
 32874 e11c 9181      		ldd r25,Z+1
 32875 e11e FC01      		movw r30,r24
 32876 e120 2285      		ldd r18,Z+10
 32877 e122 3385      		ldd r19,Z+11
 32878 e124 8D81      		ldd r24,Y+5
 32879 e126 9E81      		ldd r25,Y+6
 32880 e128 880F      		lsl r24
 32881 e12a 991F      		rol r25
 32882 e12c 820F      		add r24,r18
 32883 e12e 931F      		adc r25,r19
 32884 e130 FC01      		movw r30,r24
 32885 e132 2081      		ld r18,Z
 32886 e134 3181      		ldd r19,Z+1
 32887 e136 2150      		subi r18,1
 32888 e138 3109      		sbc r19,__zero_reg__
 32889 e13a FC01      		movw r30,r24
 32890 e13c 3183      		std Z+1,r19
 32891 e13e 2083      		st Z,r18
 32892               	.L1360:
2913:lp_solve_5.5/lp_presolve.c ****         }
2914:lp_solve_5.5/lp_presolve.c ****         item--;
 32893               		.loc 2 2914 0
 32894 e140 8EAD      		ldd r24,Y+62
 32895 e142 9FAD      		ldd r25,Y+63
 32896 e144 0197      		sbiw r24,1
 32897 e146 9FAF      		std Y+63,r25
 32898 e148 8EAF      		std Y+62,r24
 32899               	.L1355:
2915:lp_solve_5.5/lp_presolve.c ****       }
2916:lp_solve_5.5/lp_presolve.c ****       (*colitem) -= bound*Value2;
 32900               		.loc 2 2916 0
 32901 e14a 898D      		ldd r24,Y+25
 32902 e14c 9A8D      		ldd r25,Y+26
 32903 e14e FC01      		movw r30,r24
 32904 e150 C080      		ld r12,Z
 32905 e152 D180      		ldd r13,Z+1
 32906 e154 E280      		ldd r14,Z+2
 32907 e156 F380      		ldd r15,Z+3
 32908 e158 CE01      		movw r24,r28
 32909 e15a 865B      		subi r24,-74
 32910 e15c 9F4F      		sbci r25,-1
 32911 e15e FC01      		movw r30,r24
 32912 e160 8081      		ld r24,Z
 32913 e162 9181      		ldd r25,Z+1
 32914 e164 A281      		ldd r26,Z+2
 32915 e166 B381      		ldd r27,Z+3
 32916 e168 2AA5      		ldd r18,Y+42
 32917 e16a 3BA5      		ldd r19,Y+43
 32918 e16c 4CA5      		ldd r20,Y+44
 32919 e16e 5DA5      		ldd r21,Y+45
 32920 e170 BC01      		movw r22,r24
 32921 e172 CD01      		movw r24,r26
 32922 e174 0E94 0000 		call __mulsf3
 32923 e178 DC01      		movw r26,r24
 32924 e17a CB01      		movw r24,r22
 32925 e17c 9C01      		movw r18,r24
 32926 e17e AD01      		movw r20,r26
 32927 e180 C701      		movw r24,r14
 32928 e182 B601      		movw r22,r12
 32929 e184 0E94 0000 		call __subsf3
 32930 e188 DC01      		movw r26,r24
 32931 e18a CB01      		movw r24,r22
 32932 e18c 298D      		ldd r18,Y+25
 32933 e18e 3A8D      		ldd r19,Y+26
 32934 e190 F901      		movw r30,r18
 32935 e192 8083      		st Z,r24
 32936 e194 9183      		std Z+1,r25
 32937 e196 A283      		std Z+2,r26
 32938 e198 B383      		std Z+3,r27
2917:lp_solve_5.5/lp_presolve.c ****       iCoeffChanged++;
 32939               		.loc 2 2917 0
 32940 e19a 8B85      		ldd r24,Y+11
 32941 e19c 9C85      		ldd r25,Y+12
 32942 e19e 0196      		adiw r24,1
 32943 e1a0 9C87      		std Y+12,r25
 32944 e1a2 8B87      		std Y+11,r24
2918:lp_solve_5.5/lp_presolve.c **** 
2919:lp_solve_5.5/lp_presolve.c ****       /* Update counts */
2920:lp_solve_5.5/lp_presolve.c ****       if(fabs(*colitem) >= mat->epsvalue) {
 32945               		.loc 2 2920 0
 32946 e1a4 898D      		ldd r24,Y+25
 32947 e1a6 9A8D      		ldd r25,Y+26
 32948 e1a8 FC01      		movw r30,r24
 32949 e1aa 8081      		ld r24,Z
 32950 e1ac 9181      		ldd r25,Z+1
 32951 e1ae A281      		ldd r26,Z+2
 32952 e1b0 B381      		ldd r27,Z+3
 32953 e1b2 BF77      		andi r27,0x7f
 32954 e1b4 2BA1      		ldd r18,Y+35
 32955 e1b6 3CA1      		ldd r19,Y+36
 32956 e1b8 F901      		movw r30,r18
 32957 e1ba 20A1      		ldd r18,Z+32
 32958 e1bc 31A1      		ldd r19,Z+33
 32959 e1be 42A1      		ldd r20,Z+34
 32960 e1c0 53A1      		ldd r21,Z+35
 32961 e1c2 BC01      		movw r22,r24
 32962 e1c4 CD01      		movw r24,r26
 32963 e1c6 0E94 0000 		call __gesf2
 32964 e1ca 8823      		tst r24
 32965 e1cc 04F4      		brge .+2
 32966 e1ce 00C0      		rjmp .L1422
2921:lp_solve_5.5/lp_presolve.c ****         if(*colitem > 0) {
 32967               		.loc 2 2921 0
 32968 e1d0 898D      		ldd r24,Y+25
 32969 e1d2 9A8D      		ldd r25,Y+26
 32970 e1d4 FC01      		movw r30,r24
 32971 e1d6 8081      		ld r24,Z
 32972 e1d8 9181      		ldd r25,Z+1
 32973 e1da A281      		ldd r26,Z+2
 32974 e1dc B381      		ldd r27,Z+3
 32975 e1de 20E0      		ldi r18,0
 32976 e1e0 30E0      		ldi r19,0
 32977 e1e2 A901      		movw r20,r18
 32978 e1e4 BC01      		movw r22,r24
 32979 e1e6 CD01      		movw r24,r26
 32980 e1e8 0E94 0000 		call __gtsf2
 32981 e1ec 1816      		cp __zero_reg__,r24
 32982 e1ee 04F4      		brge .L1423
2922:lp_solve_5.5/lp_presolve.c ****           colplu++;
 32983               		.loc 2 2922 0
 32984 e1f0 8F81      		ldd r24,Y+7
 32985 e1f2 9885      		ldd r25,Y+8
 32986 e1f4 0196      		adiw r24,1
 32987 e1f6 9887      		std Y+8,r25
 32988 e1f8 8F83      		std Y+7,r24
2923:lp_solve_5.5/lp_presolve.c ****           plucount[k]++;
 32989               		.loc 2 2923 0
 32990 e1fa 8D81      		ldd r24,Y+5
 32991 e1fc 9E81      		ldd r25,Y+6
 32992 e1fe 880F      		lsl r24
 32993 e200 991F      		rol r25
 32994 e202 2AA9      		ldd r18,Y+50
 32995 e204 3BA9      		ldd r19,Y+51
 32996 e206 820F      		add r24,r18
 32997 e208 931F      		adc r25,r19
 32998 e20a FC01      		movw r30,r24
 32999 e20c 2081      		ld r18,Z
 33000 e20e 3181      		ldd r19,Z+1
 33001 e210 2F5F      		subi r18,-1
 33002 e212 3F4F      		sbci r19,-1
 33003 e214 FC01      		movw r30,r24
 33004 e216 3183      		std Z+1,r19
 33005 e218 2083      		st Z,r18
 33006 e21a 00C0      		rjmp .L1367
 33007               	.L1423:
2924:lp_solve_5.5/lp_presolve.c ****         }
2925:lp_solve_5.5/lp_presolve.c ****         else {
2926:lp_solve_5.5/lp_presolve.c ****           colneg++;
 33008               		.loc 2 2926 0
 33009 e21c 8985      		ldd r24,Y+9
 33010 e21e 9A85      		ldd r25,Y+10
 33011 e220 0196      		adiw r24,1
 33012 e222 9A87      		std Y+10,r25
 33013 e224 8987      		std Y+9,r24
2927:lp_solve_5.5/lp_presolve.c ****           negcount[k]++;
 33014               		.loc 2 2927 0
 33015 e226 8D81      		ldd r24,Y+5
 33016 e228 9E81      		ldd r25,Y+6
 33017 e22a 880F      		lsl r24
 33018 e22c 991F      		rol r25
 33019 e22e 2CA9      		ldd r18,Y+52
 33020 e230 3DA9      		ldd r19,Y+53
 33021 e232 820F      		add r24,r18
 33022 e234 931F      		adc r25,r19
 33023 e236 FC01      		movw r30,r24
 33024 e238 2081      		ld r18,Z
 33025 e23a 3181      		ldd r19,Z+1
 33026 e23c 2F5F      		subi r18,-1
 33027 e23e 3F4F      		sbci r19,-1
 33028 e240 FC01      		movw r30,r24
 33029 e242 3183      		std Z+1,r19
 33030 e244 2083      		st Z,r18
 33031               	.L1367:
2928:lp_solve_5.5/lp_presolve.c ****         }
2929:lp_solve_5.5/lp_presolve.c ****         if((lobound < 0) && (upbound >= 0)) {
 33032               		.loc 2 2929 0
 33033 e246 20E0      		ldi r18,0
 33034 e248 30E0      		ldi r19,0
 33035 e24a A901      		movw r20,r18
 33036 e24c 6989      		ldd r22,Y+17
 33037 e24e 7A89      		ldd r23,Y+18
 33038 e250 8B89      		ldd r24,Y+19
 33039 e252 9C89      		ldd r25,Y+20
 33040 e254 0E94 0000 		call __ltsf2
 33041 e258 8823      		tst r24
 33042 e25a 04F0      		brlt .+2
 33043 e25c 00C0      		rjmp .L1368
 33044               		.loc 2 2929 0 is_stmt 0 discriminator 1
 33045 e25e 20E0      		ldi r18,0
 33046 e260 30E0      		ldi r19,0
 33047 e262 A901      		movw r20,r18
 33048 e264 6D89      		ldd r22,Y+21
 33049 e266 7E89      		ldd r23,Y+22
 33050 e268 8F89      		ldd r24,Y+23
 33051 e26a 988D      		ldd r25,Y+24
 33052 e26c 0E94 0000 		call __gesf2
 33053 e270 8823      		tst r24
 33054 e272 04F0      		brlt .L1368
2930:lp_solve_5.5/lp_presolve.c ****           psdata->cols->pluneg[jjx]++;
 33055               		.loc 2 2930 0 is_stmt 1
 33056 e274 CE01      		movw r24,r28
 33057 e276 8A5A      		subi r24,-86
 33058 e278 9F4F      		sbci r25,-1
 33059 e27a FC01      		movw r30,r24
 33060 e27c 8081      		ld r24,Z
 33061 e27e 9181      		ldd r25,Z+1
 33062 e280 FC01      		movw r30,r24
 33063 e282 8281      		ldd r24,Z+2
 33064 e284 9381      		ldd r25,Z+3
 33065 e286 FC01      		movw r30,r24
 33066 e288 2285      		ldd r18,Z+10
 33067 e28a 3385      		ldd r19,Z+11
 33068 e28c 8CAD      		ldd r24,Y+60
 33069 e28e 9DAD      		ldd r25,Y+61
 33070 e290 880F      		lsl r24
 33071 e292 991F      		rol r25
 33072 e294 820F      		add r24,r18
 33073 e296 931F      		adc r25,r19
 33074 e298 FC01      		movw r30,r24
 33075 e29a 2081      		ld r18,Z
 33076 e29c 3181      		ldd r19,Z+1
 33077 e29e 2F5F      		subi r18,-1
 33078 e2a0 3F4F      		sbci r19,-1
 33079 e2a2 FC01      		movw r30,r24
 33080 e2a4 3183      		std Z+1,r19
 33081 e2a6 2083      		st Z,r18
2931:lp_solve_5.5/lp_presolve.c ****           psdata->rows->pluneg[k]++;
 33082               		.loc 2 2931 0
 33083 e2a8 CE01      		movw r24,r28
 33084 e2aa 8A5A      		subi r24,-86
 33085 e2ac 9F4F      		sbci r25,-1
 33086 e2ae FC01      		movw r30,r24
 33087 e2b0 8081      		ld r24,Z
 33088 e2b2 9181      		ldd r25,Z+1
 33089 e2b4 FC01      		movw r30,r24
 33090 e2b6 8081      		ld r24,Z
 33091 e2b8 9181      		ldd r25,Z+1
 33092 e2ba FC01      		movw r30,r24
 33093 e2bc 2285      		ldd r18,Z+10
 33094 e2be 3385      		ldd r19,Z+11
 33095 e2c0 8D81      		ldd r24,Y+5
 33096 e2c2 9E81      		ldd r25,Y+6
 33097 e2c4 880F      		lsl r24
 33098 e2c6 991F      		rol r25
 33099 e2c8 820F      		add r24,r18
 33100 e2ca 931F      		adc r25,r19
 33101 e2cc FC01      		movw r30,r24
 33102 e2ce 2081      		ld r18,Z
 33103 e2d0 3181      		ldd r19,Z+1
 33104 e2d2 2F5F      		subi r18,-1
 33105 e2d4 3F4F      		sbci r19,-1
 33106 e2d6 FC01      		movw r30,r24
 33107 e2d8 3183      		std Z+1,r19
 33108 e2da 2083      		st Z,r18
 33109               	.L1368:
2932:lp_solve_5.5/lp_presolve.c ****         }
2933:lp_solve_5.5/lp_presolve.c ****         item++;
 33110               		.loc 2 2933 0
 33111 e2dc 8EAD      		ldd r24,Y+62
 33112 e2de 9FAD      		ldd r25,Y+63
 33113 e2e0 0196      		adiw r24,1
 33114 e2e2 9FAF      		std Y+63,r25
 33115 e2e4 8EAF      		std Y+62,r24
 33116 e2e6 00C0      		rjmp .L1371
 33117               	.L1422:
2934:lp_solve_5.5/lp_presolve.c ****       }
2935:lp_solve_5.5/lp_presolve.c ****       else {
2936:lp_solve_5.5/lp_presolve.c ****         *colitem = 0;
 33118               		.loc 2 2936 0
 33119 e2e8 898D      		ldd r24,Y+25
 33120 e2ea 9A8D      		ldd r25,Y+26
 33121 e2ec FC01      		movw r30,r24
 33122 e2ee 1082      		st Z,__zero_reg__
 33123 e2f0 1182      		std Z+1,__zero_reg__
 33124 e2f2 1282      		std Z+2,__zero_reg__
 33125 e2f4 1382      		std Z+3,__zero_reg__
 33126               	.L1371:
2937:lp_solve_5.5/lp_presolve.c ****       }
2938:lp_solve_5.5/lp_presolve.c **** 
2939:lp_solve_5.5/lp_presolve.c ****       /* Also reduce count if the row contains the deleted variable */
2940:lp_solve_5.5/lp_presolve.c ****       if(bound > 0)
 33127               		.loc 2 2940 0
 33128 e2f6 20E0      		ldi r18,0
 33129 e2f8 30E0      		ldi r19,0
 33130 e2fa A901      		movw r20,r18
 33131 e2fc 6AA5      		ldd r22,Y+42
 33132 e2fe 7BA5      		ldd r23,Y+43
 33133 e300 8CA5      		ldd r24,Y+44
 33134 e302 9DA5      		ldd r25,Y+45
 33135 e304 0E94 0000 		call __gtsf2
 33136 e308 1816      		cp __zero_reg__,r24
 33137 e30a 04F4      		brge .L1424
2941:lp_solve_5.5/lp_presolve.c ****         plucount[k]--;
 33138               		.loc 2 2941 0
 33139 e30c 8D81      		ldd r24,Y+5
 33140 e30e 9E81      		ldd r25,Y+6
 33141 e310 880F      		lsl r24
 33142 e312 991F      		rol r25
 33143 e314 2AA9      		ldd r18,Y+50
 33144 e316 3BA9      		ldd r19,Y+51
 33145 e318 820F      		add r24,r18
 33146 e31a 931F      		adc r25,r19
 33147 e31c FC01      		movw r30,r24
 33148 e31e 2081      		ld r18,Z
 33149 e320 3181      		ldd r19,Z+1
 33150 e322 2150      		subi r18,1
 33151 e324 3109      		sbc r19,__zero_reg__
 33152 e326 FC01      		movw r30,r24
 33153 e328 3183      		std Z+1,r19
 33154 e32a 2083      		st Z,r18
 33155 e32c 00C0      		rjmp .L1351
 33156               	.L1424:
2942:lp_solve_5.5/lp_presolve.c ****       else
2943:lp_solve_5.5/lp_presolve.c ****         negcount[k]--;
 33157               		.loc 2 2943 0
 33158 e32e 8D81      		ldd r24,Y+5
 33159 e330 9E81      		ldd r25,Y+6
 33160 e332 880F      		lsl r24
 33161 e334 991F      		rol r25
 33162 e336 2CA9      		ldd r18,Y+52
 33163 e338 3DA9      		ldd r19,Y+53
 33164 e33a 820F      		add r24,r18
 33165 e33c 931F      		adc r25,r19
 33166 e33e FC01      		movw r30,r24
 33167 e340 2081      		ld r18,Z
 33168 e342 3181      		ldd r19,Z+1
 33169 e344 2150      		subi r18,1
 33170 e346 3109      		sbc r19,__zero_reg__
 33171 e348 FC01      		movw r30,r24
 33172 e34a 3183      		std Z+1,r19
 33173 e34c 2083      		st Z,r18
 33174 e34e 00C0      		rjmp .L1351
 33175               	.L1429:
2892:lp_solve_5.5/lp_presolve.c **** 
 33176               		.loc 2 2892 0
 33177 e350 0000      		nop
 33178               	.L1351:
2887:lp_solve_5.5/lp_presolve.c **** 
 33179               		.loc 2 2887 0 discriminator 2
 33180 e352 8D81      		ldd r24,Y+5
 33181 e354 9E81      		ldd r25,Y+6
 33182 e356 0196      		adiw r24,1
 33183 e358 9E83      		std Y+6,r25
 33184 e35a 8D83      		std Y+5,r24
 33185 e35c 898D      		ldd r24,Y+25
 33186 e35e 9A8D      		ldd r25,Y+26
 33187 e360 0496      		adiw r24,4
 33188 e362 9A8F      		std Y+26,r25
 33189 e364 898F      		std Y+25,r24
 33190               	.L1348:
2887:lp_solve_5.5/lp_presolve.c **** 
 33191               		.loc 2 2887 0 is_stmt 0 discriminator 1
 33192 e366 2D81      		ldd r18,Y+5
 33193 e368 3E81      		ldd r19,Y+6
 33194 e36a 8F8D      		ldd r24,Y+31
 33195 e36c 98A1      		ldd r25,Y+32
 33196 e36e 8217      		cp r24,r18
 33197 e370 9307      		cpc r25,r19
 33198 e372 04F0      		brlt .+2
 33199 e374 00C0      		rjmp .L1374
2944:lp_solve_5.5/lp_presolve.c ****     }
2945:lp_solve_5.5/lp_presolve.c ****     psdata->cols->plucount[jjx] += colplu;
 33200               		.loc 2 2945 0 is_stmt 1
 33201 e376 CE01      		movw r24,r28
 33202 e378 8A5A      		subi r24,-86
 33203 e37a 9F4F      		sbci r25,-1
 33204 e37c FC01      		movw r30,r24
 33205 e37e 8081      		ld r24,Z
 33206 e380 9181      		ldd r25,Z+1
 33207 e382 FC01      		movw r30,r24
 33208 e384 8281      		ldd r24,Z+2
 33209 e386 9381      		ldd r25,Z+3
 33210 e388 FC01      		movw r30,r24
 33211 e38a 2681      		ldd r18,Z+6
 33212 e38c 3781      		ldd r19,Z+7
 33213 e38e 8CAD      		ldd r24,Y+60
 33214 e390 9DAD      		ldd r25,Y+61
 33215 e392 880F      		lsl r24
 33216 e394 991F      		rol r25
 33217 e396 820F      		add r24,r18
 33218 e398 931F      		adc r25,r19
 33219 e39a 9E01      		movw r18,r28
 33220 e39c 2A5A      		subi r18,-86
 33221 e39e 3F4F      		sbci r19,-1
 33222 e3a0 F901      		movw r30,r18
 33223 e3a2 2081      		ld r18,Z
 33224 e3a4 3181      		ldd r19,Z+1
 33225 e3a6 F901      		movw r30,r18
 33226 e3a8 2281      		ldd r18,Z+2
 33227 e3aa 3381      		ldd r19,Z+3
 33228 e3ac F901      		movw r30,r18
 33229 e3ae 4681      		ldd r20,Z+6
 33230 e3b0 5781      		ldd r21,Z+7
 33231 e3b2 2CAD      		ldd r18,Y+60
 33232 e3b4 3DAD      		ldd r19,Y+61
 33233 e3b6 220F      		lsl r18
 33234 e3b8 331F      		rol r19
 33235 e3ba 240F      		add r18,r20
 33236 e3bc 351F      		adc r19,r21
 33237 e3be F901      		movw r30,r18
 33238 e3c0 4081      		ld r20,Z
 33239 e3c2 5181      		ldd r21,Z+1
 33240 e3c4 2F81      		ldd r18,Y+7
 33241 e3c6 3885      		ldd r19,Y+8
 33242 e3c8 240F      		add r18,r20
 33243 e3ca 351F      		adc r19,r21
 33244 e3cc FC01      		movw r30,r24
 33245 e3ce 3183      		std Z+1,r19
 33246 e3d0 2083      		st Z,r18
2946:lp_solve_5.5/lp_presolve.c ****     psdata->cols->negcount[jjx] += colneg;
 33247               		.loc 2 2946 0
 33248 e3d2 CE01      		movw r24,r28
 33249 e3d4 8A5A      		subi r24,-86
 33250 e3d6 9F4F      		sbci r25,-1
 33251 e3d8 FC01      		movw r30,r24
 33252 e3da 8081      		ld r24,Z
 33253 e3dc 9181      		ldd r25,Z+1
 33254 e3de FC01      		movw r30,r24
 33255 e3e0 8281      		ldd r24,Z+2
 33256 e3e2 9381      		ldd r25,Z+3
 33257 e3e4 FC01      		movw r30,r24
 33258 e3e6 2085      		ldd r18,Z+8
 33259 e3e8 3185      		ldd r19,Z+9
 33260 e3ea 8CAD      		ldd r24,Y+60
 33261 e3ec 9DAD      		ldd r25,Y+61
 33262 e3ee 880F      		lsl r24
 33263 e3f0 991F      		rol r25
 33264 e3f2 820F      		add r24,r18
 33265 e3f4 931F      		adc r25,r19
 33266 e3f6 9E01      		movw r18,r28
 33267 e3f8 2A5A      		subi r18,-86
 33268 e3fa 3F4F      		sbci r19,-1
 33269 e3fc F901      		movw r30,r18
 33270 e3fe 2081      		ld r18,Z
 33271 e400 3181      		ldd r19,Z+1
 33272 e402 F901      		movw r30,r18
 33273 e404 2281      		ldd r18,Z+2
 33274 e406 3381      		ldd r19,Z+3
 33275 e408 F901      		movw r30,r18
 33276 e40a 4085      		ldd r20,Z+8
 33277 e40c 5185      		ldd r21,Z+9
 33278 e40e 2CAD      		ldd r18,Y+60
 33279 e410 3DAD      		ldd r19,Y+61
 33280 e412 220F      		lsl r18
 33281 e414 331F      		rol r19
 33282 e416 240F      		add r18,r20
 33283 e418 351F      		adc r19,r21
 33284 e41a F901      		movw r30,r18
 33285 e41c 4081      		ld r20,Z
 33286 e41e 5181      		ldd r21,Z+1
 33287 e420 2985      		ldd r18,Y+9
 33288 e422 3A85      		ldd r19,Y+10
 33289 e424 240F      		add r18,r20
 33290 e426 351F      		adc r19,r21
 33291 e428 FC01      		movw r30,r24
 33292 e42a 3183      		std Z+1,r19
 33293 e42c 2083      		st Z,r18
2947:lp_solve_5.5/lp_presolve.c **** 
2948:lp_solve_5.5/lp_presolve.c ****     /* Save the new column */
2949:lp_solve_5.5/lp_presolve.c ****     if(rev == NULL) {
 33294               		.loc 2 2949 0
 33295 e42e 8B8D      		ldd r24,Y+27
 33296 e430 9C8D      		ldd r25,Y+28
 33297 e432 892B      		or r24,r25
 33298 e434 01F0      		breq .+2
 33299 e436 00C0      		rjmp .L1375
2950:lp_solve_5.5/lp_presolve.c ****       DV = createUndoLadder(lp, nrows, lp->columns / RESIZEFACTOR);
 33300               		.loc 2 2950 0
 33301 e438 8D8D      		ldd r24,Y+29
 33302 e43a 9E8D      		ldd r25,Y+30
 33303 e43c 8451      		subi r24,20
 33304 e43e 9E4F      		sbci r25,-2
 33305 e440 FC01      		movw r30,r24
 33306 e442 8081      		ld r24,Z
 33307 e444 9181      		ldd r25,Z+1
 33308 e446 9923      		tst r25
 33309 e448 04F4      		brge .L1376
 33310 e44a 0396      		adiw r24,3
 33311               	.L1376:
 33312 e44c 9595      		asr r25
 33313 e44e 8795      		ror r24
 33314 e450 9595      		asr r25
 33315 e452 8795      		ror r24
 33316 e454 AC01      		movw r20,r24
 33317 e456 2F8D      		ldd r18,Y+31
 33318 e458 38A1      		ldd r19,Y+32
 33319 e45a 8D8D      		ldd r24,Y+29
 33320 e45c 9E8D      		ldd r25,Y+30
 33321 e45e B901      		movw r22,r18
 33322 e460 0E94 0000 		call createUndoLadder
 33323 e464 9C01      		movw r18,r24
 33324 e466 CE01      		movw r24,r28
 33325 e468 8E5A      		subi r24,-82
 33326 e46a 9F4F      		sbci r25,-1
 33327 e46c FC01      		movw r30,r24
 33328 e46e 3183      		std Z+1,r19
 33329 e470 2083      		st Z,r18
2951:lp_solve_5.5/lp_presolve.c ****       rev = DV->tracker;
 33330               		.loc 2 2951 0
 33331 e472 CE01      		movw r24,r28
 33332 e474 8E5A      		subi r24,-82
 33333 e476 9F4F      		sbci r25,-1
 33334 e478 FC01      		movw r30,r24
 33335 e47a 8081      		ld r24,Z
 33336 e47c 9181      		ldd r25,Z+1
 33337 e47e FC01      		movw r30,r24
 33338 e480 8481      		ldd r24,Z+4
 33339 e482 9581      		ldd r25,Z+5
 33340 e484 9C8F      		std Y+28,r25
 33341 e486 8B8F      		std Y+27,r24
2952:lp_solve_5.5/lp_presolve.c ****       rev->epsvalue = mat->epsvalue;
 33342               		.loc 2 2952 0
 33343 e488 8BA1      		ldd r24,Y+35
 33344 e48a 9CA1      		ldd r25,Y+36
 33345 e48c FC01      		movw r30,r24
 33346 e48e 80A1      		ldd r24,Z+32
 33347 e490 91A1      		ldd r25,Z+33
 33348 e492 A2A1      		ldd r26,Z+34
 33349 e494 B3A1      		ldd r27,Z+35
 33350 e496 2B8D      		ldd r18,Y+27
 33351 e498 3C8D      		ldd r19,Y+28
 33352 e49a F901      		movw r30,r18
 33353 e49c 80A3      		std Z+32,r24
 33354 e49e 91A3      		std Z+33,r25
 33355 e4a0 A2A3      		std Z+34,r26
 33356 e4a2 B3A3      		std Z+35,r27
2953:lp_solve_5.5/lp_presolve.c ****       allocINT(lp, &(rev->col_tag), mat->columns_alloc+1, FALSE);
 33357               		.loc 2 2953 0
 33358 e4a4 8BA1      		ldd r24,Y+35
 33359 e4a6 9CA1      		ldd r25,Y+36
 33360 e4a8 FC01      		movw r30,r24
 33361 e4aa 8085      		ldd r24,Z+8
 33362 e4ac 9185      		ldd r25,Z+9
 33363 e4ae AC01      		movw r20,r24
 33364 e4b0 4F5F      		subi r20,-1
 33365 e4b2 5F4F      		sbci r21,-1
 33366 e4b4 8B8D      		ldd r24,Y+27
 33367 e4b6 9C8D      		ldd r25,Y+28
 33368 e4b8 BC01      		movw r22,r24
 33369 e4ba 6C5E      		subi r22,-20
 33370 e4bc 7F4F      		sbci r23,-1
 33371 e4be 8D8D      		ldd r24,Y+29
 33372 e4c0 9E8D      		ldd r25,Y+30
 33373 e4c2 20E0      		ldi r18,0
 33374 e4c4 0E94 0000 		call allocINT
2954:lp_solve_5.5/lp_presolve.c ****       allocINT(lp, &colindex, lp->columns+1, TRUE);
 33375               		.loc 2 2954 0
 33376 e4c8 8D8D      		ldd r24,Y+29
 33377 e4ca 9E8D      		ldd r25,Y+30
 33378 e4cc 8451      		subi r24,20
 33379 e4ce 9E4F      		sbci r25,-2
 33380 e4d0 FC01      		movw r30,r24
 33381 e4d2 8081      		ld r24,Z
 33382 e4d4 9181      		ldd r25,Z+1
 33383 e4d6 AC01      		movw r20,r24
 33384 e4d8 4F5F      		subi r20,-1
 33385 e4da 5F4F      		sbci r21,-1
 33386 e4dc BE01      		movw r22,r28
 33387 e4de 605C      		subi r22,-64
 33388 e4e0 7F4F      		sbci r23,-1
 33389 e4e2 8D8D      		ldd r24,Y+29
 33390 e4e4 9E8D      		ldd r25,Y+30
 33391 e4e6 21E0      		ldi r18,lo8(1)
 33392 e4e8 0E94 0000 		call allocINT
2955:lp_solve_5.5/lp_presolve.c ****       rev->col_tag[0] = 0;
 33393               		.loc 2 2955 0
 33394 e4ec 8B8D      		ldd r24,Y+27
 33395 e4ee 9C8D      		ldd r25,Y+28
 33396 e4f0 FC01      		movw r30,r24
 33397 e4f2 8489      		ldd r24,Z+20
 33398 e4f4 9589      		ldd r25,Z+21
 33399 e4f6 FC01      		movw r30,r24
 33400 e4f8 1182      		std Z+1,__zero_reg__
 33401 e4fa 1082      		st Z,__zero_reg__
 33402               	.L1375:
2956:lp_solve_5.5/lp_presolve.c ****     }
2957:lp_solve_5.5/lp_presolve.c ****     n = rev->col_tag[0] = incrementUndoLadder(DV);
 33403               		.loc 2 2957 0
 33404 e4fc 8B8D      		ldd r24,Y+27
 33405 e4fe 9C8D      		ldd r25,Y+28
 33406 e500 FC01      		movw r30,r24
 33407 e502 0489      		ldd r16,Z+20
 33408 e504 1589      		ldd r17,Z+21
 33409 e506 CE01      		movw r24,r28
 33410 e508 8E5A      		subi r24,-82
 33411 e50a 9F4F      		sbci r25,-1
 33412 e50c FC01      		movw r30,r24
 33413 e50e 8081      		ld r24,Z
 33414 e510 9181      		ldd r25,Z+1
 33415 e512 0E94 0000 		call incrementUndoLadder
 33416 e516 F801      		movw r30,r16
 33417 e518 9183      		std Z+1,r25
 33418 e51a 8083      		st Z,r24
 33419 e51c F801      		movw r30,r16
 33420 e51e 8081      		ld r24,Z
 33421 e520 9181      		ldd r25,Z+1
 33422 e522 9A83      		std Y+2,r25
 33423 e524 8983      		std Y+1,r24
2958:lp_solve_5.5/lp_presolve.c ****     mat_setcol(rev, n, 0, colvalue, NULL, FALSE, FALSE);
 33424               		.loc 2 2958 0
 33425 e526 CE01      		movw r24,r28
 33426 e528 825B      		subi r24,-78
 33427 e52a 9F4F      		sbci r25,-1
 33428 e52c FC01      		movw r30,r24
 33429 e52e 2081      		ld r18,Z
 33430 e530 3181      		ldd r19,Z+1
 33431 e532 6981      		ldd r22,Y+1
 33432 e534 7A81      		ldd r23,Y+2
 33433 e536 8B8D      		ldd r24,Y+27
 33434 e538 9C8D      		ldd r25,Y+28
 33435 e53a C12C      		mov r12,__zero_reg__
 33436 e53c E12C      		mov r14,__zero_reg__
 33437 e53e 00E0      		ldi r16,0
 33438 e540 10E0      		ldi r17,0
 33439 e542 40E0      		ldi r20,0
 33440 e544 50E0      		ldi r21,0
 33441 e546 0E94 0000 		call mat_setcol
2959:lp_solve_5.5/lp_presolve.c ****     rev->col_tag[n] = jjx;
 33442               		.loc 2 2959 0
 33443 e54a 8B8D      		ldd r24,Y+27
 33444 e54c 9C8D      		ldd r25,Y+28
 33445 e54e FC01      		movw r30,r24
 33446 e550 2489      		ldd r18,Z+20
 33447 e552 3589      		ldd r19,Z+21
 33448 e554 8981      		ldd r24,Y+1
 33449 e556 9A81      		ldd r25,Y+2
 33450 e558 880F      		lsl r24
 33451 e55a 991F      		rol r25
 33452 e55c 820F      		add r24,r18
 33453 e55e 931F      		adc r25,r19
 33454 e560 2CAD      		ldd r18,Y+60
 33455 e562 3DAD      		ldd r19,Y+61
 33456 e564 FC01      		movw r30,r24
 33457 e566 3183      		std Z+1,r19
 33458 e568 2083      		st Z,r18
2960:lp_solve_5.5/lp_presolve.c **** 
2961:lp_solve_5.5/lp_presolve.c ****     /* Save index to updated vector, but specially handle case where we have
2962:lp_solve_5.5/lp_presolve.c ****       the same independent variable for multiple equations! */
2963:lp_solve_5.5/lp_presolve.c ****     if(!freshupdate)
 33459               		.loc 2 2963 0
 33460 e56a 89A5      		ldd r24,Y+41
 33461 e56c 8823      		tst r24
 33462 e56e 01F4      		brne .L1377
2964:lp_solve_5.5/lp_presolve.c ****       rev->col_tag[colindex[jjx]] *= -1;
 33463               		.loc 2 2964 0
 33464 e570 8B8D      		ldd r24,Y+27
 33465 e572 9C8D      		ldd r25,Y+28
 33466 e574 FC01      		movw r30,r24
 33467 e576 2489      		ldd r18,Z+20
 33468 e578 3589      		ldd r19,Z+21
 33469 e57a CE01      		movw r24,r28
 33470 e57c 805C      		subi r24,-64
 33471 e57e 9F4F      		sbci r25,-1
 33472 e580 FC01      		movw r30,r24
 33473 e582 4081      		ld r20,Z
 33474 e584 5181      		ldd r21,Z+1
 33475 e586 8CAD      		ldd r24,Y+60
 33476 e588 9DAD      		ldd r25,Y+61
 33477 e58a 880F      		lsl r24
 33478 e58c 991F      		rol r25
 33479 e58e 840F      		add r24,r20
 33480 e590 951F      		adc r25,r21
 33481 e592 FC01      		movw r30,r24
 33482 e594 8081      		ld r24,Z
 33483 e596 9181      		ldd r25,Z+1
 33484 e598 880F      		lsl r24
 33485 e59a 991F      		rol r25
 33486 e59c 820F      		add r24,r18
 33487 e59e 931F      		adc r25,r19
 33488 e5a0 2B8D      		ldd r18,Y+27
 33489 e5a2 3C8D      		ldd r19,Y+28
 33490 e5a4 F901      		movw r30,r18
 33491 e5a6 4489      		ldd r20,Z+20
 33492 e5a8 5589      		ldd r21,Z+21
 33493 e5aa 9E01      		movw r18,r28
 33494 e5ac 205C      		subi r18,-64
 33495 e5ae 3F4F      		sbci r19,-1
 33496 e5b0 F901      		movw r30,r18
 33497 e5b2 6081      		ld r22,Z
 33498 e5b4 7181      		ldd r23,Z+1
 33499 e5b6 2CAD      		ldd r18,Y+60
 33500 e5b8 3DAD      		ldd r19,Y+61
 33501 e5ba 220F      		lsl r18
 33502 e5bc 331F      		rol r19
 33503 e5be 260F      		add r18,r22
 33504 e5c0 371F      		adc r19,r23
 33505 e5c2 F901      		movw r30,r18
 33506 e5c4 2081      		ld r18,Z
 33507 e5c6 3181      		ldd r19,Z+1
 33508 e5c8 220F      		lsl r18
 33509 e5ca 331F      		rol r19
 33510 e5cc 240F      		add r18,r20
 33511 e5ce 351F      		adc r19,r21
 33512 e5d0 F901      		movw r30,r18
 33513 e5d2 2081      		ld r18,Z
 33514 e5d4 3181      		ldd r19,Z+1
 33515 e5d6 3195      		neg r19
 33516 e5d8 2195      		neg r18
 33517 e5da 3109      		sbc r19,__zero_reg__
 33518 e5dc FC01      		movw r30,r24
 33519 e5de 3183      		std Z+1,r19
 33520 e5e0 2083      		st Z,r18
 33521               	.L1377:
2965:lp_solve_5.5/lp_presolve.c ****     colindex[jjx] = n;
 33522               		.loc 2 2965 0
 33523 e5e2 CE01      		movw r24,r28
 33524 e5e4 805C      		subi r24,-64
 33525 e5e6 9F4F      		sbci r25,-1
 33526 e5e8 FC01      		movw r30,r24
 33527 e5ea 2081      		ld r18,Z
 33528 e5ec 3181      		ldd r19,Z+1
 33529 e5ee 8CAD      		ldd r24,Y+60
 33530 e5f0 9DAD      		ldd r25,Y+61
 33531 e5f2 880F      		lsl r24
 33532 e5f4 991F      		rol r25
 33533 e5f6 820F      		add r24,r18
 33534 e5f8 931F      		adc r25,r19
 33535 e5fa 2981      		ldd r18,Y+1
 33536 e5fc 3A81      		ldd r19,Y+2
 33537 e5fe FC01      		movw r30,r24
 33538 e600 3183      		std Z+1,r19
 33539 e602 2083      		st Z,r18
2966:lp_solve_5.5/lp_presolve.c **** 
2967:lp_solve_5.5/lp_presolve.c ****     /* Delete the column dependent variable */
2968:lp_solve_5.5/lp_presolve.c ****     jx = presolve_colremove(psdata, jx, FALSE);
 33540               		.loc 2 2968 0
 33541 e604 2AAD      		ldd r18,Y+58
 33542 e606 3BAD      		ldd r19,Y+59
 33543 e608 CE01      		movw r24,r28
 33544 e60a 8A5A      		subi r24,-86
 33545 e60c 9F4F      		sbci r25,-1
 33546 e60e FC01      		movw r30,r24
 33547 e610 8081      		ld r24,Z
 33548 e612 9181      		ldd r25,Z+1
 33549 e614 40E0      		ldi r20,0
 33550 e616 B901      		movw r22,r18
 33551 e618 0E94 0000 		call presolve_colremove
 33552 e61c 9BAF      		std Y+59,r25
 33553 e61e 8AAF      		std Y+58,r24
2969:lp_solve_5.5/lp_presolve.c ****     iVarsFixed++;
 33554               		.loc 2 2969 0
 33555 e620 8F85      		ldd r24,Y+15
 33556 e622 9889      		ldd r25,Y+16
 33557 e624 0196      		adiw r24,1
 33558 e626 988B      		std Y+16,r25
 33559 e628 8F87      		std Y+15,r24
2970:lp_solve_5.5/lp_presolve.c **** 
2971:lp_solve_5.5/lp_presolve.c ****     /* Check if we have been lucky enough to have eliminated the independent
2972:lp_solve_5.5/lp_presolve.c ****        variable via substitution of the dependent variable */
2973:lp_solve_5.5/lp_presolve.c ****     if(item == 0) {
 33560               		.loc 2 2973 0
 33561 e62a 8EAD      		ldd r24,Y+62
 33562 e62c 9FAD      		ldd r25,Y+63
 33563 e62e 892B      		or r24,r25
 33564 e630 01F4      		brne .L1378
2974:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
2975:lp_solve_5.5/lp_presolve.c ****       report(lp, DETAILED, "presolve_elimeq2: Was able to remove variables %d and %d in row %s\n",
2976:lp_solve_5.5/lp_presolve.c ****                          jx, jjx, get_row_name(lp, i));
2977:lp_solve_5.5/lp_presolve.c **** #endif
2978:lp_solve_5.5/lp_presolve.c ****       if(presolve_colfix(psdata, jjx, 0.0, TRUE, nc))
 33565               		.loc 2 2978 0
 33566 e632 6CAD      		ldd r22,Y+60
 33567 e634 7DAD      		ldd r23,Y+61
 33568 e636 CE01      		movw r24,r28
 33569 e638 845A      		subi r24,-92
 33570 e63a 9F4F      		sbci r25,-1
 33571 e63c FC01      		movw r30,r24
 33572 e63e 2081      		ld r18,Z
 33573 e640 3181      		ldd r19,Z+1
 33574 e642 CE01      		movw r24,r28
 33575 e644 8A5A      		subi r24,-86
 33576 e646 9F4F      		sbci r25,-1
 33577 e648 FC01      		movw r30,r24
 33578 e64a 8081      		ld r24,Z
 33579 e64c 9181      		ldd r25,Z+1
 33580 e64e 7901      		movw r14,r18
 33581 e650 01E0      		ldi r16,lo8(1)
 33582 e652 20E0      		ldi r18,0
 33583 e654 30E0      		ldi r19,0
 33584 e656 A901      		movw r20,r18
 33585 e658 0E94 0000 		call presolve_colfix
 33586 e65c 8823      		tst r24
 33587 e65e 01F0      		breq .L1378
2979:lp_solve_5.5/lp_presolve.c ****         jjx = presolve_colremove(psdata, jjx, FALSE);
 33588               		.loc 2 2979 0
 33589 e660 2CAD      		ldd r18,Y+60
 33590 e662 3DAD      		ldd r19,Y+61
 33591 e664 CE01      		movw r24,r28
 33592 e666 8A5A      		subi r24,-86
 33593 e668 9F4F      		sbci r25,-1
 33594 e66a FC01      		movw r30,r24
 33595 e66c 8081      		ld r24,Z
 33596 e66e 9181      		ldd r25,Z+1
 33597 e670 40E0      		ldi r20,0
 33598 e672 B901      		movw r22,r18
 33599 e674 0E94 0000 		call presolve_colremove
 33600 e678 9DAF      		std Y+61,r25
 33601 e67a 8CAF      		std Y+60,r24
 33602               	.L1378:
2980:lp_solve_5.5/lp_presolve.c ****     }
2981:lp_solve_5.5/lp_presolve.c **** 
2982:lp_solve_5.5/lp_presolve.c ****     /* Delete the row */
2983:lp_solve_5.5/lp_presolve.c ****     presolve_rowremove(psdata, i, FALSE);
 33603               		.loc 2 2983 0
 33604 e67c 2B81      		ldd r18,Y+3
 33605 e67e 3C81      		ldd r19,Y+4
 33606 e680 CE01      		movw r24,r28
 33607 e682 8A5A      		subi r24,-86
 33608 e684 9F4F      		sbci r25,-1
 33609 e686 FC01      		movw r30,r24
 33610 e688 8081      		ld r24,Z
 33611 e68a 9181      		ldd r25,Z+1
 33612 e68c 40E0      		ldi r20,0
 33613 e68e B901      		movw r22,r18
 33614 e690 0E94 0000 		call presolve_rowremove
2984:lp_solve_5.5/lp_presolve.c ****     iRowsRemoved++;
 33615               		.loc 2 2984 0
 33616 e694 8D85      		ldd r24,Y+13
 33617 e696 9E85      		ldd r25,Y+14
 33618 e698 0196      		adiw r24,1
 33619 e69a 9E87      		std Y+14,r25
 33620 e69c 8D87      		std Y+13,r24
 33621 e69e 00C0      		rjmp .L1280
 33622               	.L1426:
2685:lp_solve_5.5/lp_presolve.c **** 
 33623               		.loc 2 2685 0
 33624 e6a0 0000      		nop
 33625 e6a2 00C0      		rjmp .L1280
 33626               	.L1427:
2711:lp_solve_5.5/lp_presolve.c **** 
 33627               		.loc 2 2711 0
 33628 e6a4 0000      		nop
 33629 e6a6 00C0      		rjmp .L1280
 33630               	.L1428:
2716:lp_solve_5.5/lp_presolve.c **** 
 33631               		.loc 2 2716 0
 33632 e6a8 0000      		nop
 33633               	.L1280:
2681:lp_solve_5.5/lp_presolve.c **** 
 33634               		.loc 2 2681 0 discriminator 2
 33635 e6aa CE01      		movw r24,r28
 33636 e6ac 8C5A      		subi r24,-84
 33637 e6ae 9F4F      		sbci r25,-1
 33638 e6b0 FC01      		movw r30,r24
 33639 e6b2 8081      		ld r24,Z
 33640 e6b4 9181      		ldd r25,Z+1
 33641 e6b6 2B81      		ldd r18,Y+3
 33642 e6b8 3C81      		ldd r19,Y+4
 33643 e6ba B901      		movw r22,r18
 33644 e6bc 0E94 0000 		call nextActiveLink
 33645 e6c0 9C83      		std Y+4,r25
 33646 e6c2 8B83      		std Y+3,r24
 33647               	.L1278:
2681:lp_solve_5.5/lp_presolve.c **** 
 33648               		.loc 2 2681 0 is_stmt 0 discriminator 1
 33649 e6c4 8B81      		ldd r24,Y+3
 33650 e6c6 9C81      		ldd r25,Y+4
 33651 e6c8 1816      		cp __zero_reg__,r24
 33652 e6ca 1906      		cpc __zero_reg__,r25
 33653 e6cc 04F4      		brge .+4
 33654 e6ce 0C94 0000 		jmp .L1379
2985:lp_solve_5.5/lp_presolve.c ****   }
2986:lp_solve_5.5/lp_presolve.c **** 
2987:lp_solve_5.5/lp_presolve.c ****   /* Perform the column updates collected above */
2988:lp_solve_5.5/lp_presolve.c ****   if(n > 0) {
 33655               		.loc 2 2988 0 is_stmt 1
 33656 e6d2 8981      		ldd r24,Y+1
 33657 e6d4 9A81      		ldd r25,Y+2
 33658 e6d6 1816      		cp __zero_reg__,r24
 33659 e6d8 1906      		cpc __zero_reg__,r25
 33660 e6da 04F4      		brge .L1273
2989:lp_solve_5.5/lp_presolve.c ****     mat_mapreplace(mat, psdata->rows->varmap, psdata->cols->varmap, rev);
 33661               		.loc 2 2989 0
 33662 e6dc CE01      		movw r24,r28
 33663 e6de 8A5A      		subi r24,-86
 33664 e6e0 9F4F      		sbci r25,-1
 33665 e6e2 FC01      		movw r30,r24
 33666 e6e4 8081      		ld r24,Z
 33667 e6e6 9181      		ldd r25,Z+1
 33668 e6e8 FC01      		movw r30,r24
 33669 e6ea 8281      		ldd r24,Z+2
 33670 e6ec 9381      		ldd r25,Z+3
 33671 e6ee FC01      		movw r30,r24
 33672 e6f0 4081      		ld r20,Z
 33673 e6f2 5181      		ldd r21,Z+1
 33674 e6f4 CE01      		movw r24,r28
 33675 e6f6 8A5A      		subi r24,-86
 33676 e6f8 9F4F      		sbci r25,-1
 33677 e6fa FC01      		movw r30,r24
 33678 e6fc 8081      		ld r24,Z
 33679 e6fe 9181      		ldd r25,Z+1
 33680 e700 FC01      		movw r30,r24
 33681 e702 8081      		ld r24,Z
 33682 e704 9181      		ldd r25,Z+1
 33683 e706 FC01      		movw r30,r24
 33684 e708 6081      		ld r22,Z
 33685 e70a 7181      		ldd r23,Z+1
 33686 e70c 2B8D      		ldd r18,Y+27
 33687 e70e 3C8D      		ldd r19,Y+28
 33688 e710 8BA1      		ldd r24,Y+35
 33689 e712 9CA1      		ldd r25,Y+36
 33690 e714 0E94 0000 		call mat_mapreplace
2990:lp_solve_5.5/lp_presolve.c ****     presolve_validate(psdata, TRUE);
 33691               		.loc 2 2990 0
 33692 e718 CE01      		movw r24,r28
 33693 e71a 8A5A      		subi r24,-86
 33694 e71c 9F4F      		sbci r25,-1
 33695 e71e FC01      		movw r30,r24
 33696 e720 8081      		ld r24,Z
 33697 e722 9181      		ldd r25,Z+1
 33698 e724 61E0      		ldi r22,lo8(1)
 33699 e726 0E94 0000 		call presolve_validate
2991:lp_solve_5.5/lp_presolve.c **** #ifdef PresolveForceUpdateMax
2992:lp_solve_5.5/lp_presolve.c ****     mat_computemax(mat /* , FALSE */);
2993:lp_solve_5.5/lp_presolve.c **** #endif
2994:lp_solve_5.5/lp_presolve.c ****     psdata->forceupdate = TRUE;
 33700               		.loc 2 2994 0
 33701 e72a CE01      		movw r24,r28
 33702 e72c 8A5A      		subi r24,-86
 33703 e72e 9F4F      		sbci r25,-1
 33704 e730 FC01      		movw r30,r24
 33705 e732 8081      		ld r24,Z
 33706 e734 9181      		ldd r25,Z+1
 33707 e736 21E0      		ldi r18,lo8(1)
 33708 e738 FC01      		movw r30,r24
 33709 e73a 24A3      		std Z+36,r18
 33710 e73c 00C0      		rjmp .L1273
 33711               	.L1425:
2677:lp_solve_5.5/lp_presolve.c ****   n = 0;
 33712               		.loc 2 2677 0
 33713 e73e 0000      		nop
 33714               	.L1273:
2995:lp_solve_5.5/lp_presolve.c ****   }
2996:lp_solve_5.5/lp_presolve.c **** 
2997:lp_solve_5.5/lp_presolve.c ****   /* Free work arrays */
2998:lp_solve_5.5/lp_presolve.c **** Finish:
2999:lp_solve_5.5/lp_presolve.c ****   if(DV != NULL)
 33715               		.loc 2 2999 0
 33716 e740 CE01      		movw r24,r28
 33717 e742 8E5A      		subi r24,-82
 33718 e744 9F4F      		sbci r25,-1
 33719 e746 FC01      		movw r30,r24
 33720 e748 8081      		ld r24,Z
 33721 e74a 9181      		ldd r25,Z+1
 33722 e74c 892B      		or r24,r25
 33723 e74e 01F0      		breq .L1380
3000:lp_solve_5.5/lp_presolve.c ****     freeUndoLadder(&DV);
 33724               		.loc 2 3000 0
 33725 e750 CE01      		movw r24,r28
 33726 e752 8E5A      		subi r24,-82
 33727 e754 9F4F      		sbci r25,-1
 33728 e756 0E94 0000 		call freeUndoLadder
 33729               	.L1380:
3001:lp_solve_5.5/lp_presolve.c ****   freeLink(&EQ2);
 33730               		.loc 2 3001 0
 33731 e75a CE01      		movw r24,r28
 33732 e75c 8C5A      		subi r24,-84
 33733 e75e 9F4F      		sbci r25,-1
 33734 e760 0E94 0000 		call freeLink
3002:lp_solve_5.5/lp_presolve.c ****   FREE(colvalue);
 33735               		.loc 2 3002 0
 33736 e764 CE01      		movw r24,r28
 33737 e766 825B      		subi r24,-78
 33738 e768 9F4F      		sbci r25,-1
 33739 e76a FC01      		movw r30,r24
 33740 e76c 8081      		ld r24,Z
 33741 e76e 9181      		ldd r25,Z+1
 33742 e770 892B      		or r24,r25
 33743 e772 01F0      		breq .L1381
 33744               		.loc 2 3002 0 is_stmt 0 discriminator 1
 33745 e774 CE01      		movw r24,r28
 33746 e776 825B      		subi r24,-78
 33747 e778 9F4F      		sbci r25,-1
 33748 e77a FC01      		movw r30,r24
 33749 e77c 8081      		ld r24,Z
 33750 e77e 9181      		ldd r25,Z+1
 33751 e780 0E94 0000 		call free
 33752 e784 CE01      		movw r24,r28
 33753 e786 825B      		subi r24,-78
 33754 e788 9F4F      		sbci r25,-1
 33755 e78a FC01      		movw r30,r24
 33756 e78c 1182      		std Z+1,__zero_reg__
 33757 e78e 1082      		st Z,__zero_reg__
 33758               	.L1381:
3003:lp_solve_5.5/lp_presolve.c ****   FREE(delvalue);
 33759               		.loc 2 3003 0 is_stmt 1
 33760 e790 CE01      		movw r24,r28
 33761 e792 805B      		subi r24,-80
 33762 e794 9F4F      		sbci r25,-1
 33763 e796 FC01      		movw r30,r24
 33764 e798 8081      		ld r24,Z
 33765 e79a 9181      		ldd r25,Z+1
 33766 e79c 892B      		or r24,r25
 33767 e79e 01F0      		breq .L1382
 33768               		.loc 2 3003 0 is_stmt 0 discriminator 1
 33769 e7a0 CE01      		movw r24,r28
 33770 e7a2 805B      		subi r24,-80
 33771 e7a4 9F4F      		sbci r25,-1
 33772 e7a6 FC01      		movw r30,r24
 33773 e7a8 8081      		ld r24,Z
 33774 e7aa 9181      		ldd r25,Z+1
 33775 e7ac 0E94 0000 		call free
 33776 e7b0 CE01      		movw r24,r28
 33777 e7b2 805B      		subi r24,-80
 33778 e7b4 9F4F      		sbci r25,-1
 33779 e7b6 FC01      		movw r30,r24
 33780 e7b8 1182      		std Z+1,__zero_reg__
 33781 e7ba 1082      		st Z,__zero_reg__
 33782               	.L1382:
3004:lp_solve_5.5/lp_presolve.c ****   FREE(colindex);
 33783               		.loc 2 3004 0 is_stmt 1
 33784 e7bc CE01      		movw r24,r28
 33785 e7be 805C      		subi r24,-64
 33786 e7c0 9F4F      		sbci r25,-1
 33787 e7c2 FC01      		movw r30,r24
 33788 e7c4 8081      		ld r24,Z
 33789 e7c6 9181      		ldd r25,Z+1
 33790 e7c8 892B      		or r24,r25
 33791 e7ca 01F0      		breq .L1383
 33792               		.loc 2 3004 0 is_stmt 0 discriminator 1
 33793 e7cc CE01      		movw r24,r28
 33794 e7ce 805C      		subi r24,-64
 33795 e7d0 9F4F      		sbci r25,-1
 33796 e7d2 FC01      		movw r30,r24
 33797 e7d4 8081      		ld r24,Z
 33798 e7d6 9181      		ldd r25,Z+1
 33799 e7d8 0E94 0000 		call free
 33800 e7dc CE01      		movw r24,r28
 33801 e7de 805C      		subi r24,-64
 33802 e7e0 9F4F      		sbci r25,-1
 33803 e7e2 FC01      		movw r30,r24
 33804 e7e4 1182      		std Z+1,__zero_reg__
 33805 e7e6 1082      		st Z,__zero_reg__
 33806               	.L1383:
3005:lp_solve_5.5/lp_presolve.c **** 
3006:lp_solve_5.5/lp_presolve.c ****   /* Update counters */
3007:lp_solve_5.5/lp_presolve.c ****   (*nn)   += iCoeffChanged;
 33807               		.loc 2 3007 0 is_stmt 1
 33808 e7e8 CE01      		movw r24,r28
 33809 e7ea 885A      		subi r24,-88
 33810 e7ec 9F4F      		sbci r25,-1
 33811 e7ee FC01      		movw r30,r24
 33812 e7f0 8081      		ld r24,Z
 33813 e7f2 9181      		ldd r25,Z+1
 33814 e7f4 FC01      		movw r30,r24
 33815 e7f6 2081      		ld r18,Z
 33816 e7f8 3181      		ldd r19,Z+1
 33817 e7fa 8B85      		ldd r24,Y+11
 33818 e7fc 9C85      		ldd r25,Y+12
 33819 e7fe 280F      		add r18,r24
 33820 e800 391F      		adc r19,r25
 33821 e802 CE01      		movw r24,r28
 33822 e804 885A      		subi r24,-88
 33823 e806 9F4F      		sbci r25,-1
 33824 e808 FC01      		movw r30,r24
 33825 e80a 8081      		ld r24,Z
 33826 e80c 9181      		ldd r25,Z+1
 33827 e80e FC01      		movw r30,r24
 33828 e810 3183      		std Z+1,r19
 33829 e812 2083      		st Z,r18
3008:lp_solve_5.5/lp_presolve.c ****   (*nr)   += iRowsRemoved;
 33830               		.loc 2 3008 0
 33831 e814 CE01      		movw r24,r28
 33832 e816 865A      		subi r24,-90
 33833 e818 9F4F      		sbci r25,-1
 33834 e81a FC01      		movw r30,r24
 33835 e81c 8081      		ld r24,Z
 33836 e81e 9181      		ldd r25,Z+1
 33837 e820 FC01      		movw r30,r24
 33838 e822 2081      		ld r18,Z
 33839 e824 3181      		ldd r19,Z+1
 33840 e826 8D85      		ldd r24,Y+13
 33841 e828 9E85      		ldd r25,Y+14
 33842 e82a 280F      		add r18,r24
 33843 e82c 391F      		adc r19,r25
 33844 e82e CE01      		movw r24,r28
 33845 e830 865A      		subi r24,-90
 33846 e832 9F4F      		sbci r25,-1
 33847 e834 FC01      		movw r30,r24
 33848 e836 8081      		ld r24,Z
 33849 e838 9181      		ldd r25,Z+1
 33850 e83a FC01      		movw r30,r24
 33851 e83c 3183      		std Z+1,r19
 33852 e83e 2083      		st Z,r18
3009:lp_solve_5.5/lp_presolve.c ****   (*nc)   += iVarsFixed;
 33853               		.loc 2 3009 0
 33854 e840 CE01      		movw r24,r28
 33855 e842 845A      		subi r24,-92
 33856 e844 9F4F      		sbci r25,-1
 33857 e846 FC01      		movw r30,r24
 33858 e848 8081      		ld r24,Z
 33859 e84a 9181      		ldd r25,Z+1
 33860 e84c FC01      		movw r30,r24
 33861 e84e 2081      		ld r18,Z
 33862 e850 3181      		ldd r19,Z+1
 33863 e852 8F85      		ldd r24,Y+15
 33864 e854 9889      		ldd r25,Y+16
 33865 e856 280F      		add r18,r24
 33866 e858 391F      		adc r19,r25
 33867 e85a CE01      		movw r24,r28
 33868 e85c 845A      		subi r24,-92
 33869 e85e 9F4F      		sbci r25,-1
 33870 e860 FC01      		movw r30,r24
 33871 e862 8081      		ld r24,Z
 33872 e864 9181      		ldd r25,Z+1
 33873 e866 FC01      		movw r30,r24
 33874 e868 3183      		std Z+1,r19
 33875 e86a 2083      		st Z,r18
3010:lp_solve_5.5/lp_presolve.c ****   (*nSum) += iCoeffChanged + iRowsRemoved + iVarsFixed;
 33876               		.loc 2 3010 0
 33877 e86c CE01      		movw r24,r28
 33878 e86e 825A      		subi r24,-94
 33879 e870 9F4F      		sbci r25,-1
 33880 e872 FC01      		movw r30,r24
 33881 e874 8081      		ld r24,Z
 33882 e876 9181      		ldd r25,Z+1
 33883 e878 FC01      		movw r30,r24
 33884 e87a 2081      		ld r18,Z
 33885 e87c 3181      		ldd r19,Z+1
 33886 e87e 4B85      		ldd r20,Y+11
 33887 e880 5C85      		ldd r21,Y+12
 33888 e882 8D85      		ldd r24,Y+13
 33889 e884 9E85      		ldd r25,Y+14
 33890 e886 480F      		add r20,r24
 33891 e888 591F      		adc r21,r25
 33892 e88a 8F85      		ldd r24,Y+15
 33893 e88c 9889      		ldd r25,Y+16
 33894 e88e 840F      		add r24,r20
 33895 e890 951F      		adc r25,r21
 33896 e892 280F      		add r18,r24
 33897 e894 391F      		adc r19,r25
 33898 e896 CE01      		movw r24,r28
 33899 e898 825A      		subi r24,-94
 33900 e89a 9F4F      		sbci r25,-1
 33901 e89c FC01      		movw r30,r24
 33902 e89e 8081      		ld r24,Z
 33903 e8a0 9181      		ldd r25,Z+1
 33904 e8a2 FC01      		movw r30,r24
 33905 e8a4 3183      		std Z+1,r19
 33906 e8a6 2083      		st Z,r18
3011:lp_solve_5.5/lp_presolve.c **** 
3012:lp_solve_5.5/lp_presolve.c ****   return( status );
 33907               		.loc 2 3012 0
 33908 e8a8 89A1      		ldd r24,Y+33
 33909 e8aa 9AA1      		ldd r25,Y+34
 33910               	.L1384:
 33911               	/* epilogue start */
3013:lp_solve_5.5/lp_presolve.c **** }
 33912               		.loc 2 3013 0 discriminator 1
 33913 e8ac CF59      		subi r28,-97
 33914 e8ae DF4F      		sbci r29,-1
 33915 e8b0 0FB6      		in __tmp_reg__,__SREG__
 33916 e8b2 F894      		cli
 33917 e8b4 DEBF      		out __SP_H__,r29
 33918 e8b6 0FBE      		out __SREG__,__tmp_reg__
 33919 e8b8 CDBF      		out __SP_L__,r28
 33920 e8ba DF91      		pop r29
 33921 e8bc CF91      		pop r28
 33922 e8be 1F91      		pop r17
 33923 e8c0 0F91      		pop r16
 33924 e8c2 FF90      		pop r15
 33925 e8c4 EF90      		pop r14
 33926 e8c6 DF90      		pop r13
 33927 e8c8 CF90      		pop r12
 33928 e8ca BF90      		pop r11
 33929 e8cc AF90      		pop r10
 33930 e8ce 0895      		ret
 33931               		.cfi_endproc
 33932               	.LFE69:
 33934               	.global	presolve_impliedfree
 33936               	presolve_impliedfree:
 33937               	.LFB70:
3014:lp_solve_5.5/lp_presolve.c **** 
3015:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_impliedfree(lprec *lp, presolverec *psdata, int colnr)
3016:lp_solve_5.5/lp_presolve.c **** {
 33938               		.loc 2 3016 0
 33939               		.cfi_startproc
 33940 e8d0 CF92      		push r12
 33941               	.LCFI418:
 33942               		.cfi_def_cfa_offset 3
 33943               		.cfi_offset 12, -2
 33944 e8d2 DF92      		push r13
 33945               	.LCFI419:
 33946               		.cfi_def_cfa_offset 4
 33947               		.cfi_offset 13, -3
 33948 e8d4 EF92      		push r14
 33949               	.LCFI420:
 33950               		.cfi_def_cfa_offset 5
 33951               		.cfi_offset 14, -4
 33952 e8d6 FF92      		push r15
 33953               	.LCFI421:
 33954               		.cfi_def_cfa_offset 6
 33955               		.cfi_offset 15, -5
 33956 e8d8 0F93      		push r16
 33957               	.LCFI422:
 33958               		.cfi_def_cfa_offset 7
 33959               		.cfi_offset 16, -6
 33960 e8da 1F93      		push r17
 33961               	.LCFI423:
 33962               		.cfi_def_cfa_offset 8
 33963               		.cfi_offset 17, -7
 33964 e8dc CF93      		push r28
 33965               	.LCFI424:
 33966               		.cfi_def_cfa_offset 9
 33967               		.cfi_offset 28, -8
 33968 e8de DF93      		push r29
 33969               	.LCFI425:
 33970               		.cfi_def_cfa_offset 10
 33971               		.cfi_offset 29, -9
 33972 e8e0 CDB7      		in r28,__SP_L__
 33973 e8e2 DEB7      		in r29,__SP_H__
 33974               	.LCFI426:
 33975               		.cfi_def_cfa_register 28
 33976 e8e4 6997      		sbiw r28,25
 33977               	.LCFI427:
 33978               		.cfi_def_cfa_offset 35
 33979 e8e6 0FB6      		in __tmp_reg__,__SREG__
 33980 e8e8 F894      		cli
 33981 e8ea DEBF      		out __SP_H__,r29
 33982 e8ec 0FBE      		out __SREG__,__tmp_reg__
 33983 e8ee CDBF      		out __SP_L__,r28
 33984               	/* prologue: function */
 33985               	/* frame size = 25 */
 33986               	/* stack size = 33 */
 33987               	.L__stack_usage = 33
 33988 e8f0 9D8B      		std Y+21,r25
 33989 e8f2 8C8B      		std Y+20,r24
 33990 e8f4 7F8B      		std Y+23,r23
 33991 e8f6 6E8B      		std Y+22,r22
 33992 e8f8 598F      		std Y+25,r21
 33993 e8fa 488F      		std Y+24,r20
3017:lp_solve_5.5/lp_presolve.c ****   int    i, ix, ie;
3018:lp_solve_5.5/lp_presolve.c ****   REAL   Tlower, Tupper;
3019:lp_solve_5.5/lp_presolve.c ****   MYBOOL status, rowbinds, isfree = FALSE;
 33994               		.loc 2 3019 0
 33995 e8fc 1B82      		std Y+3,__zero_reg__
3020:lp_solve_5.5/lp_presolve.c ****   MATrec *mat = lp->matA;
 33996               		.loc 2 3020 0
 33997 e8fe 8C89      		ldd r24,Y+20
 33998 e900 9D89      		ldd r25,Y+21
 33999 e902 8A54      		subi r24,74
 34000 e904 9D4F      		sbci r25,-3
 34001 e906 FC01      		movw r30,r24
 34002 e908 8081      		ld r24,Z
 34003 e90a 9181      		ldd r25,Z+1
 34004 e90c 9D83      		std Y+5,r25
 34005 e90e 8C83      		std Y+4,r24
3021:lp_solve_5.5/lp_presolve.c **** 
3022:lp_solve_5.5/lp_presolve.c ****   if(my_infinite(lp, get_lowbo(lp, colnr)) && my_infinite(lp, get_upbo(lp, colnr)))
 34006               		.loc 2 3022 0
 34007 e910 288D      		ldd r18,Y+24
 34008 e912 398D      		ldd r19,Y+25
 34009 e914 8C89      		ldd r24,Y+20
 34010 e916 9D89      		ldd r25,Y+21
 34011 e918 B901      		movw r22,r18
 34012 e91a 0E94 0000 		call get_lowbo
 34013 e91e DC01      		movw r26,r24
 34014 e920 CB01      		movw r24,r22
 34015 e922 BF77      		andi r27,0x7f
 34016 e924 2C89      		ldd r18,Y+20
 34017 e926 3D89      		ldd r19,Y+21
 34018 e928 265F      		subi r18,-10
 34019 e92a 3C4F      		sbci r19,-4
 34020 e92c F901      		movw r30,r18
 34021 e92e 2081      		ld r18,Z
 34022 e930 3181      		ldd r19,Z+1
 34023 e932 4281      		ldd r20,Z+2
 34024 e934 5381      		ldd r21,Z+3
 34025 e936 BC01      		movw r22,r24
 34026 e938 CD01      		movw r24,r26
 34027 e93a 0E94 0000 		call __gesf2
 34028 e93e 8823      		tst r24
 34029 e940 04F0      		brlt .L1431
 34030               		.loc 2 3022 0 is_stmt 0 discriminator 1
 34031 e942 288D      		ldd r18,Y+24
 34032 e944 398D      		ldd r19,Y+25
 34033 e946 8C89      		ldd r24,Y+20
 34034 e948 9D89      		ldd r25,Y+21
 34035 e94a B901      		movw r22,r18
 34036 e94c 0E94 0000 		call get_upbo
 34037 e950 DC01      		movw r26,r24
 34038 e952 CB01      		movw r24,r22
 34039 e954 BF77      		andi r27,0x7f
 34040 e956 2C89      		ldd r18,Y+20
 34041 e958 3D89      		ldd r19,Y+21
 34042 e95a 265F      		subi r18,-10
 34043 e95c 3C4F      		sbci r19,-4
 34044 e95e F901      		movw r30,r18
 34045 e960 2081      		ld r18,Z
 34046 e962 3181      		ldd r19,Z+1
 34047 e964 4281      		ldd r20,Z+2
 34048 e966 5381      		ldd r21,Z+3
 34049 e968 BC01      		movw r22,r24
 34050 e96a CD01      		movw r24,r26
 34051 e96c 0E94 0000 		call __gesf2
 34052 e970 8823      		tst r24
 34053 e972 04F0      		brlt .L1431
3023:lp_solve_5.5/lp_presolve.c ****     return( TRUE );
 34054               		.loc 2 3023 0 is_stmt 1
 34055 e974 81E0      		ldi r24,lo8(1)
 34056 e976 00C0      		rjmp .L1441
 34057               	.L1431:
3024:lp_solve_5.5/lp_presolve.c **** 
3025:lp_solve_5.5/lp_presolve.c ****   ie = mat->col_end[colnr];
 34058               		.loc 2 3025 0
 34059 e978 8C81      		ldd r24,Y+4
 34060 e97a 9D81      		ldd r25,Y+5
 34061 e97c FC01      		movw r30,r24
 34062 e97e 2289      		ldd r18,Z+18
 34063 e980 3389      		ldd r19,Z+19
 34064 e982 888D      		ldd r24,Y+24
 34065 e984 998D      		ldd r25,Y+25
 34066 e986 880F      		lsl r24
 34067 e988 991F      		rol r25
 34068 e98a 820F      		add r24,r18
 34069 e98c 931F      		adc r25,r19
 34070 e98e FC01      		movw r30,r24
 34071 e990 8081      		ld r24,Z
 34072 e992 9181      		ldd r25,Z+1
 34073 e994 9F83      		std Y+7,r25
 34074 e996 8E83      		std Y+6,r24
3026:lp_solve_5.5/lp_presolve.c ****   for(ix = mat->col_end[colnr-1]; (isfree != (TRUE | AUTOMATIC)) && (ix < ie); ix++) {
 34075               		.loc 2 3026 0
 34076 e998 8C81      		ldd r24,Y+4
 34077 e99a 9D81      		ldd r25,Y+5
 34078 e99c FC01      		movw r30,r24
 34079 e99e 2289      		ldd r18,Z+18
 34080 e9a0 3389      		ldd r19,Z+19
 34081 e9a2 888D      		ldd r24,Y+24
 34082 e9a4 998D      		ldd r25,Y+25
 34083 e9a6 8150      		subi r24,1
 34084 e9a8 9048      		sbci r25,-128
 34085 e9aa 880F      		lsl r24
 34086 e9ac 991F      		rol r25
 34087 e9ae 820F      		add r24,r18
 34088 e9b0 931F      		adc r25,r19
 34089 e9b2 FC01      		movw r30,r24
 34090 e9b4 8081      		ld r24,Z
 34091 e9b6 9181      		ldd r25,Z+1
 34092 e9b8 9A83      		std Y+2,r25
 34093 e9ba 8983      		std Y+1,r24
 34094 e9bc 00C0      		rjmp .L1435
 34095               	.L1439:
3027:lp_solve_5.5/lp_presolve.c ****     i = COL_MAT_ROWNR(ix);
 34096               		.loc 2 3027 0
 34097 e9be 8C81      		ldd r24,Y+4
 34098 e9c0 9D81      		ldd r25,Y+5
 34099 e9c2 FC01      		movw r30,r24
 34100 e9c4 2685      		ldd r18,Z+14
 34101 e9c6 3785      		ldd r19,Z+15
 34102 e9c8 8981      		ldd r24,Y+1
 34103 e9ca 9A81      		ldd r25,Y+2
 34104 e9cc 880F      		lsl r24
 34105 e9ce 991F      		rol r25
 34106 e9d0 820F      		add r24,r18
 34107 e9d2 931F      		adc r25,r19
 34108 e9d4 FC01      		movw r30,r24
 34109 e9d6 8081      		ld r24,Z
 34110 e9d8 9181      		ldd r25,Z+1
 34111 e9da 9987      		std Y+9,r25
 34112 e9dc 8887      		std Y+8,r24
3028:lp_solve_5.5/lp_presolve.c ****     if(!isActiveLink(psdata->rows->varmap, i))
 34113               		.loc 2 3028 0
 34114 e9de 8E89      		ldd r24,Y+22
 34115 e9e0 9F89      		ldd r25,Y+23
 34116 e9e2 FC01      		movw r30,r24
 34117 e9e4 8081      		ld r24,Z
 34118 e9e6 9181      		ldd r25,Z+1
 34119 e9e8 FC01      		movw r30,r24
 34120 e9ea 8081      		ld r24,Z
 34121 e9ec 9181      		ldd r25,Z+1
 34122 e9ee 2885      		ldd r18,Y+8
 34123 e9f0 3985      		ldd r19,Y+9
 34124 e9f2 B901      		movw r22,r18
 34125 e9f4 0E94 0000 		call isActiveLink
 34126 e9f8 8823      		tst r24
 34127 e9fa 01F0      		breq .L1444
3029:lp_solve_5.5/lp_presolve.c ****       continue;
3030:lp_solve_5.5/lp_presolve.c ****     Tlower = get_rh_lower(lp, i);
 34128               		.loc 2 3030 0
 34129 e9fc 2885      		ldd r18,Y+8
 34130 e9fe 3985      		ldd r19,Y+9
 34131 ea00 8C89      		ldd r24,Y+20
 34132 ea02 9D89      		ldd r25,Y+21
 34133 ea04 B901      		movw r22,r18
 34134 ea06 0E94 0000 		call get_rh_lower
 34135 ea0a DC01      		movw r26,r24
 34136 ea0c CB01      		movw r24,r22
 34137 ea0e 8B87      		std Y+11,r24
 34138 ea10 9C87      		std Y+12,r25
 34139 ea12 AD87      		std Y+13,r26
 34140 ea14 BE87      		std Y+14,r27
3031:lp_solve_5.5/lp_presolve.c ****     Tupper = get_rh_upper(lp, i);
 34141               		.loc 2 3031 0
 34142 ea16 2885      		ldd r18,Y+8
 34143 ea18 3985      		ldd r19,Y+9
 34144 ea1a 8C89      		ldd r24,Y+20
 34145 ea1c 9D89      		ldd r25,Y+21
 34146 ea1e B901      		movw r22,r18
 34147 ea20 0E94 0000 		call get_rh_upper
 34148 ea24 DC01      		movw r26,r24
 34149 ea26 CB01      		movw r24,r22
 34150 ea28 8F87      		std Y+15,r24
 34151 ea2a 988B      		std Y+16,r25
 34152 ea2c A98B      		std Y+17,r26
 34153 ea2e BA8B      		std Y+18,r27
3032:lp_solve_5.5/lp_presolve.c ****     status = presolve_multibounds(psdata, i, colnr, &Tlower, &Tupper, NULL, &rowbinds);
 34154               		.loc 2 3032 0
 34155 ea30 DE01      		movw r26,r28
 34156 ea32 5396      		adiw r26,19
 34157 ea34 FE01      		movw r30,r28
 34158 ea36 3F96      		adiw r30,15
 34159 ea38 9E01      		movw r18,r28
 34160 ea3a 255F      		subi r18,-11
 34161 ea3c 3F4F      		sbci r19,-1
 34162 ea3e 488D      		ldd r20,Y+24
 34163 ea40 598D      		ldd r21,Y+25
 34164 ea42 6885      		ldd r22,Y+8
 34165 ea44 7985      		ldd r23,Y+9
 34166 ea46 8E89      		ldd r24,Y+22
 34167 ea48 9F89      		ldd r25,Y+23
 34168 ea4a 6D01      		movw r12,r26
 34169 ea4c E12C      		mov r14,__zero_reg__
 34170 ea4e F12C      		mov r15,__zero_reg__
 34171 ea50 8F01      		movw r16,r30
 34172 ea52 0E94 0000 		call presolve_multibounds
 34173 ea56 8A87      		std Y+10,r24
3033:lp_solve_5.5/lp_presolve.c ****     isfree = isfree | status | rowbinds;
 34174               		.loc 2 3033 0
 34175 ea58 9B81      		ldd r25,Y+3
 34176 ea5a 8A85      		ldd r24,Y+10
 34177 ea5c 982B      		or r25,r24
 34178 ea5e 8B89      		ldd r24,Y+19
 34179 ea60 892B      		or r24,r25
 34180 ea62 8B83      		std Y+3,r24
 34181 ea64 00C0      		rjmp .L1437
 34182               	.L1444:
3029:lp_solve_5.5/lp_presolve.c ****     Tlower = get_rh_lower(lp, i);
 34183               		.loc 2 3029 0
 34184 ea66 0000      		nop
 34185               	.L1437:
3026:lp_solve_5.5/lp_presolve.c ****     i = COL_MAT_ROWNR(ix);
 34186               		.loc 2 3026 0 discriminator 2
 34187 ea68 8981      		ldd r24,Y+1
 34188 ea6a 9A81      		ldd r25,Y+2
 34189 ea6c 0196      		adiw r24,1
 34190 ea6e 9A83      		std Y+2,r25
 34191 ea70 8983      		std Y+1,r24
 34192               	.L1435:
3026:lp_solve_5.5/lp_presolve.c ****     i = COL_MAT_ROWNR(ix);
 34193               		.loc 2 3026 0 is_stmt 0 discriminator 1
 34194 ea72 8B81      		ldd r24,Y+3
 34195 ea74 8330      		cpi r24,lo8(3)
 34196 ea76 01F0      		breq .L1438
3026:lp_solve_5.5/lp_presolve.c ****     i = COL_MAT_ROWNR(ix);
 34197               		.loc 2 3026 0 discriminator 3
 34198 ea78 2981      		ldd r18,Y+1
 34199 ea7a 3A81      		ldd r19,Y+2
 34200 ea7c 8E81      		ldd r24,Y+6
 34201 ea7e 9F81      		ldd r25,Y+7
 34202 ea80 2817      		cp r18,r24
 34203 ea82 3907      		cpc r19,r25
 34204 ea84 04F4      		brge .+2
 34205 ea86 00C0      		rjmp .L1439
 34206               	.L1438:
3034:lp_solve_5.5/lp_presolve.c ****   }
3035:lp_solve_5.5/lp_presolve.c **** 
3036:lp_solve_5.5/lp_presolve.c ****   return( (MYBOOL) (isfree == (TRUE | AUTOMATIC)) );
 34207               		.loc 2 3036 0 is_stmt 1
 34208 ea88 81E0      		ldi r24,lo8(1)
 34209 ea8a 9B81      		ldd r25,Y+3
 34210 ea8c 9330      		cpi r25,lo8(3)
 34211 ea8e 01F0      		breq .L1441
 34212 ea90 80E0      		ldi r24,0
 34213               	.L1441:
 34214               	/* epilogue start */
3037:lp_solve_5.5/lp_presolve.c **** }
 34215               		.loc 2 3037 0 discriminator 1
 34216 ea92 6996      		adiw r28,25
 34217 ea94 0FB6      		in __tmp_reg__,__SREG__
 34218 ea96 F894      		cli
 34219 ea98 DEBF      		out __SP_H__,r29
 34220 ea9a 0FBE      		out __SREG__,__tmp_reg__
 34221 ea9c CDBF      		out __SP_L__,r28
 34222 ea9e DF91      		pop r29
 34223 eaa0 CF91      		pop r28
 34224 eaa2 1F91      		pop r17
 34225 eaa4 0F91      		pop r16
 34226 eaa6 FF90      		pop r15
 34227 eaa8 EF90      		pop r14
 34228 eaaa DF90      		pop r13
 34229 eaac CF90      		pop r12
 34230 eaae 0895      		ret
 34231               		.cfi_endproc
 34232               	.LFE70:
 34234               	.global	presolve_impliedcolfix
 34236               	presolve_impliedcolfix:
 34237               	.LFB71:
3038:lp_solve_5.5/lp_presolve.c **** 
3039:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_impliedcolfix(presolverec *psdata, int rownr, int colnr, MYBOOL isfree)
3040:lp_solve_5.5/lp_presolve.c **** {
 34238               		.loc 2 3040 0
 34239               		.cfi_startproc
 34240 eab0 AF92      		push r10
 34241               	.LCFI428:
 34242               		.cfi_def_cfa_offset 3
 34243               		.cfi_offset 10, -2
 34244 eab2 BF92      		push r11
 34245               	.LCFI429:
 34246               		.cfi_def_cfa_offset 4
 34247               		.cfi_offset 11, -3
 34248 eab4 CF92      		push r12
 34249               	.LCFI430:
 34250               		.cfi_def_cfa_offset 5
 34251               		.cfi_offset 12, -4
 34252 eab6 DF92      		push r13
 34253               	.LCFI431:
 34254               		.cfi_def_cfa_offset 6
 34255               		.cfi_offset 13, -5
 34256 eab8 EF92      		push r14
 34257               	.LCFI432:
 34258               		.cfi_def_cfa_offset 7
 34259               		.cfi_offset 14, -6
 34260 eaba FF92      		push r15
 34261               	.LCFI433:
 34262               		.cfi_def_cfa_offset 8
 34263               		.cfi_offset 15, -7
 34264 eabc 0F93      		push r16
 34265               	.LCFI434:
 34266               		.cfi_def_cfa_offset 9
 34267               		.cfi_offset 16, -8
 34268 eabe 1F93      		push r17
 34269               	.LCFI435:
 34270               		.cfi_def_cfa_offset 10
 34271               		.cfi_offset 17, -9
 34272 eac0 CF93      		push r28
 34273               	.LCFI436:
 34274               		.cfi_def_cfa_offset 11
 34275               		.cfi_offset 28, -10
 34276 eac2 DF93      		push r29
 34277               	.LCFI437:
 34278               		.cfi_def_cfa_offset 12
 34279               		.cfi_offset 29, -11
 34280 eac4 CDB7      		in r28,__SP_L__
 34281 eac6 DEB7      		in r29,__SP_H__
 34282               	.LCFI438:
 34283               		.cfi_def_cfa_register 28
 34284 eac8 EB97      		sbiw r28,59
 34285               	.LCFI439:
 34286               		.cfi_def_cfa_offset 71
 34287 eaca 0FB6      		in __tmp_reg__,__SREG__
 34288 eacc F894      		cli
 34289 eace DEBF      		out __SP_H__,r29
 34290 ead0 0FBE      		out __SREG__,__tmp_reg__
 34291 ead2 CDBF      		out __SP_L__,r28
 34292               	/* prologue: function */
 34293               	/* frame size = 59 */
 34294               	/* stack size = 69 */
 34295               	.L__stack_usage = 69
 34296 ead4 9EAB      		std Y+54,r25
 34297 ead6 8DAB      		std Y+53,r24
 34298 ead8 78AF      		std Y+56,r23
 34299 eada 6FAB      		std Y+55,r22
 34300 eadc 5AAF      		std Y+58,r21
 34301 eade 49AF      		std Y+57,r20
 34302 eae0 2BAF      		std Y+59,r18
3041:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 34303               		.loc 2 3041 0
 34304 eae2 8DA9      		ldd r24,Y+53
 34305 eae4 9EA9      		ldd r25,Y+54
 34306 eae6 FC01      		movw r30,r24
 34307 eae8 8289      		ldd r24,Z+18
 34308 eaea 9389      		ldd r25,Z+19
 34309 eaec 9A8F      		std Y+26,r25
 34310 eaee 898F      		std Y+25,r24
3042:lp_solve_5.5/lp_presolve.c ****   MYBOOL   signflip, undoadded = FALSE;
 34311               		.loc 2 3042 0
 34312 eaf0 1A82      		std Y+2,__zero_reg__
3043:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 34313               		.loc 2 3043 0
 34314 eaf2 898D      		ldd r24,Y+25
 34315 eaf4 9A8D      		ldd r25,Y+26
 34316 eaf6 8A54      		subi r24,74
 34317 eaf8 9D4F      		sbci r25,-3
 34318 eafa FC01      		movw r30,r24
 34319 eafc 8081      		ld r24,Z
 34320 eafe 9181      		ldd r25,Z+1
 34321 eb00 9C8F      		std Y+28,r25
 34322 eb02 8B8F      		std Y+27,r24
3044:lp_solve_5.5/lp_presolve.c ****   int      jx, i, ib, ie = mat->row_end[rownr];
 34323               		.loc 2 3044 0
 34324 eb04 8B8D      		ldd r24,Y+27
 34325 eb06 9C8D      		ldd r25,Y+28
 34326 eb08 FC01      		movw r30,r24
 34327 eb0a 208D      		ldd r18,Z+24
 34328 eb0c 318D      		ldd r19,Z+25
 34329 eb0e 8FA9      		ldd r24,Y+55
 34330 eb10 98AD      		ldd r25,Y+56
 34331 eb12 880F      		lsl r24
 34332 eb14 991F      		rol r25
 34333 eb16 820F      		add r24,r18
 34334 eb18 931F      		adc r25,r19
 34335 eb1a FC01      		movw r30,r24
 34336 eb1c 8081      		ld r24,Z
 34337 eb1e 9181      		ldd r25,Z+1
 34338 eb20 9E8F      		std Y+30,r25
 34339 eb22 8D8F      		std Y+29,r24
3045:lp_solve_5.5/lp_presolve.c ****   REAL     varLo = 0, varHi = 0, varRange, conRange = 0, matValue = 0, dual, RHS = lp->orig_rhs[row
 34340               		.loc 2 3045 0
 34341 eb24 1DA6      		std Y+45,__zero_reg__
 34342 eb26 1EA6      		std Y+46,__zero_reg__
 34343 eb28 1FA6      		std Y+47,__zero_reg__
 34344 eb2a 18AA      		std Y+48,__zero_reg__
 34345 eb2c 19AA      		std Y+49,__zero_reg__
 34346 eb2e 1AAA      		std Y+50,__zero_reg__
 34347 eb30 1BAA      		std Y+51,__zero_reg__
 34348 eb32 1CAA      		std Y+52,__zero_reg__
 34349 eb34 1986      		std Y+9,__zero_reg__
 34350 eb36 1A86      		std Y+10,__zero_reg__
 34351 eb38 1B86      		std Y+11,__zero_reg__
 34352 eb3a 1C86      		std Y+12,__zero_reg__
 34353 eb3c 1F8E      		std Y+31,__zero_reg__
 34354 eb3e 18A2      		std Y+32,__zero_reg__
 34355 eb40 19A2      		std Y+33,__zero_reg__
 34356 eb42 1AA2      		std Y+34,__zero_reg__
 34357 eb44 898D      		ldd r24,Y+25
 34358 eb46 9A8D      		ldd r25,Y+26
 34359 eb48 8A55      		subi r24,90
 34360 eb4a 9D4F      		sbci r25,-3
 34361 eb4c FC01      		movw r30,r24
 34362 eb4e 2081      		ld r18,Z
 34363 eb50 3181      		ldd r19,Z+1
 34364 eb52 8FA9      		ldd r24,Y+55
 34365 eb54 98AD      		ldd r25,Y+56
 34366 eb56 880F      		lsl r24
 34367 eb58 991F      		rol r25
 34368 eb5a 880F      		lsl r24
 34369 eb5c 991F      		rol r25
 34370 eb5e 820F      		add r24,r18
 34371 eb60 931F      		adc r25,r19
 34372 eb62 FC01      		movw r30,r24
 34373 eb64 8081      		ld r24,Z
 34374 eb66 9181      		ldd r25,Z+1
 34375 eb68 A281      		ldd r26,Z+2
 34376 eb6a B381      		ldd r27,Z+3
 34377 eb6c 898B      		std Y+17,r24
 34378 eb6e 9A8B      		std Y+18,r25
 34379 eb70 AB8B      		std Y+19,r26
 34380 eb72 BC8B      		std Y+20,r27
3046:lp_solve_5.5/lp_presolve.c ****            pivot, matAij = mat_getitem(mat, rownr, colnr), *vecOF = lp->orig_obj;
 34381               		.loc 2 3046 0
 34382 eb74 49AD      		ldd r20,Y+57
 34383 eb76 5AAD      		ldd r21,Y+58
 34384 eb78 2FA9      		ldd r18,Y+55
 34385 eb7a 38AD      		ldd r19,Y+56
 34386 eb7c 8B8D      		ldd r24,Y+27
 34387 eb7e 9C8D      		ldd r25,Y+28
 34388 eb80 B901      		movw r22,r18
 34389 eb82 0E94 0000 		call mat_getitem
 34390 eb86 DC01      		movw r26,r24
 34391 eb88 CB01      		movw r24,r22
 34392 eb8a 8BA3      		std Y+35,r24
 34393 eb8c 9CA3      		std Y+36,r25
 34394 eb8e ADA3      		std Y+37,r26
 34395 eb90 BEA3      		std Y+38,r27
 34396 eb92 898D      		ldd r24,Y+25
 34397 eb94 9A8D      		ldd r25,Y+26
 34398 eb96 845D      		subi r24,-44
 34399 eb98 9D4F      		sbci r25,-3
 34400 eb9a FC01      		movw r30,r24
 34401 eb9c 8081      		ld r24,Z
 34402 eb9e 9181      		ldd r25,Z+1
 34403 eba0 98A7      		std Y+40,r25
 34404 eba2 8FA3      		std Y+39,r24
3047:lp_solve_5.5/lp_presolve.c **** 
3048:lp_solve_5.5/lp_presolve.c ****   /* We cannot have semi-continuous or non-qualifying integers */
3049:lp_solve_5.5/lp_presolve.c ****   if(is_semicont(lp, colnr) || is_SOS_var(lp, colnr))
 34405               		.loc 2 3049 0
 34406 eba4 29AD      		ldd r18,Y+57
 34407 eba6 3AAD      		ldd r19,Y+58
 34408 eba8 898D      		ldd r24,Y+25
 34409 ebaa 9A8D      		ldd r25,Y+26
 34410 ebac B901      		movw r22,r18
 34411 ebae 0E94 0000 		call is_semicont
 34412 ebb2 8823      		tst r24
 34413 ebb4 01F4      		brne .L1446
 34414               		.loc 2 3049 0 is_stmt 0 discriminator 1
 34415 ebb6 29AD      		ldd r18,Y+57
 34416 ebb8 3AAD      		ldd r19,Y+58
 34417 ebba 898D      		ldd r24,Y+25
 34418 ebbc 9A8D      		ldd r25,Y+26
 34419 ebbe B901      		movw r22,r18
 34420 ebc0 0E94 0000 		call is_SOS_var
 34421 ebc4 8823      		tst r24
 34422 ebc6 01F0      		breq .L1447
 34423               	.L1446:
3050:lp_solve_5.5/lp_presolve.c ****     return( FALSE );
 34424               		.loc 2 3050 0 is_stmt 1
 34425 ebc8 80E0      		ldi r24,0
 34426 ebca 00C0      		rjmp .L1535
 34427               	.L1447:
3051:lp_solve_5.5/lp_presolve.c ****   if(is_int(lp, colnr)) {
 34428               		.loc 2 3051 0
 34429 ebcc 29AD      		ldd r18,Y+57
 34430 ebce 3AAD      		ldd r19,Y+58
 34431 ebd0 898D      		ldd r24,Y+25
 34432 ebd2 9A8D      		ldd r25,Y+26
 34433 ebd4 B901      		movw r22,r18
 34434 ebd6 0E94 0000 		call is_int
 34435 ebda 8823      		tst r24
 34436 ebdc 01F4      		brne .+2
 34437 ebde 00C0      		rjmp .L1449
3052:lp_solve_5.5/lp_presolve.c ****     if(!isActiveLink(psdata->INTmap, rownr) || !is_presolve(lp, PRESOLVE_KNAPSACK))
 34438               		.loc 2 3052 0
 34439 ebe0 8DA9      		ldd r24,Y+53
 34440 ebe2 9EA9      		ldd r25,Y+54
 34441 ebe4 FC01      		movw r30,r24
 34442 ebe6 8085      		ldd r24,Z+8
 34443 ebe8 9185      		ldd r25,Z+9
 34444 ebea 2FA9      		ldd r18,Y+55
 34445 ebec 38AD      		ldd r19,Y+56
 34446 ebee B901      		movw r22,r18
 34447 ebf0 0E94 0000 		call isActiveLink
 34448 ebf4 8823      		tst r24
 34449 ebf6 01F0      		breq .L1450
 34450               		.loc 2 3052 0 is_stmt 0 discriminator 1
 34451 ebf8 898D      		ldd r24,Y+25
 34452 ebfa 9A8D      		ldd r25,Y+26
 34453 ebfc 60E8      		ldi r22,lo8(-128)
 34454 ebfe 70E0      		ldi r23,0
 34455 ec00 0E94 0000 		call is_presolve
 34456 ec04 8823      		tst r24
 34457 ec06 01F4      		brne .L1451
 34458               	.L1450:
3053:lp_solve_5.5/lp_presolve.c ****       return( FALSE );
 34459               		.loc 2 3053 0 is_stmt 1
 34460 ec08 80E0      		ldi r24,0
 34461 ec0a 00C0      		rjmp .L1535
 34462               	.L1451:
3054:lp_solve_5.5/lp_presolve.c ****     /* colnr must have a coefficient equal to the smallest in the row */
3055:lp_solve_5.5/lp_presolve.c ****     varRange = lp->infinite;
 34463               		.loc 2 3055 0
 34464 ec0c 898D      		ldd r24,Y+25
 34465 ec0e 9A8D      		ldd r25,Y+26
 34466 ec10 865F      		subi r24,-10
 34467 ec12 9C4F      		sbci r25,-4
 34468 ec14 FC01      		movw r30,r24
 34469 ec16 8081      		ld r24,Z
 34470 ec18 9181      		ldd r25,Z+1
 34471 ec1a A281      		ldd r26,Z+2
 34472 ec1c B381      		ldd r27,Z+3
 34473 ec1e 8D83      		std Y+5,r24
 34474 ec20 9E83      		std Y+6,r25
 34475 ec22 AF83      		std Y+7,r26
 34476 ec24 B887      		std Y+8,r27
3056:lp_solve_5.5/lp_presolve.c ****     i = 0;
 34477               		.loc 2 3056 0
 34478 ec26 1CA6      		std Y+44,__zero_reg__
 34479 ec28 1BA6      		std Y+43,__zero_reg__
3057:lp_solve_5.5/lp_presolve.c ****     pivot = 0;
 34480               		.loc 2 3057 0
 34481 ec2a 1D8A      		std Y+21,__zero_reg__
 34482 ec2c 1E8A      		std Y+22,__zero_reg__
 34483 ec2e 1F8A      		std Y+23,__zero_reg__
 34484 ec30 188E      		std Y+24,__zero_reg__
3058:lp_solve_5.5/lp_presolve.c ****     for(ib = presolve_nextcol(psdata, rownr, &i); i != 0; ib = presolve_nextcol(psdata, rownr, &i))
 34485               		.loc 2 3058 0
 34486 ec32 AE01      		movw r20,r28
 34487 ec34 455D      		subi r20,-43
 34488 ec36 5F4F      		sbci r21,-1
 34489 ec38 2FA9      		ldd r18,Y+55
 34490 ec3a 38AD      		ldd r19,Y+56
 34491 ec3c 8DA9      		ldd r24,Y+53
 34492 ec3e 9EA9      		ldd r25,Y+54
 34493 ec40 B901      		movw r22,r18
 34494 ec42 0E94 0000 		call presolve_nextcol
 34495 ec46 9C83      		std Y+4,r25
 34496 ec48 8B83      		std Y+3,r24
 34497 ec4a 00C0      		rjmp .L1452
 34498               	.L1460:
3059:lp_solve_5.5/lp_presolve.c ****       jx = ROW_MAT_COLNR(ib);
 34499               		.loc 2 3059 0
 34500 ec4c 8B8D      		ldd r24,Y+27
 34501 ec4e 9C8D      		ldd r25,Y+28
 34502 ec50 FC01      		movw r30,r24
 34503 ec52 2485      		ldd r18,Z+12
 34504 ec54 3585      		ldd r19,Z+13
 34505 ec56 8B8D      		ldd r24,Y+27
 34506 ec58 9C8D      		ldd r25,Y+28
 34507 ec5a FC01      		movw r30,r24
 34508 ec5c 4689      		ldd r20,Z+22
 34509 ec5e 5789      		ldd r21,Z+23
 34510 ec60 8B81      		ldd r24,Y+3
 34511 ec62 9C81      		ldd r25,Y+4
 34512 ec64 880F      		lsl r24
 34513 ec66 991F      		rol r25
 34514 ec68 840F      		add r24,r20
 34515 ec6a 951F      		adc r25,r21
 34516 ec6c FC01      		movw r30,r24
 34517 ec6e 8081      		ld r24,Z
 34518 ec70 9181      		ldd r25,Z+1
 34519 ec72 880F      		lsl r24
 34520 ec74 991F      		rol r25
 34521 ec76 820F      		add r24,r18
 34522 ec78 931F      		adc r25,r19
 34523 ec7a FC01      		movw r30,r24
 34524 ec7c 8081      		ld r24,Z
 34525 ec7e 9181      		ldd r25,Z+1
 34526 ec80 9AA7      		std Y+42,r25
 34527 ec82 89A7      		std Y+41,r24
3060:lp_solve_5.5/lp_presolve.c ****       dual = fabs(ROW_MAT_VALUE(ib));
 34528               		.loc 2 3060 0
 34529 ec84 8B8D      		ldd r24,Y+27
 34530 ec86 9C8D      		ldd r25,Y+28
 34531 ec88 FC01      		movw r30,r24
 34532 ec8a 2089      		ldd r18,Z+16
 34533 ec8c 3189      		ldd r19,Z+17
 34534 ec8e 8B8D      		ldd r24,Y+27
 34535 ec90 9C8D      		ldd r25,Y+28
 34536 ec92 FC01      		movw r30,r24
 34537 ec94 4689      		ldd r20,Z+22
 34538 ec96 5789      		ldd r21,Z+23
 34539 ec98 8B81      		ldd r24,Y+3
 34540 ec9a 9C81      		ldd r25,Y+4
 34541 ec9c 880F      		lsl r24
 34542 ec9e 991F      		rol r25
 34543 eca0 840F      		add r24,r20
 34544 eca2 951F      		adc r25,r21
 34545 eca4 FC01      		movw r30,r24
 34546 eca6 8081      		ld r24,Z
 34547 eca8 9181      		ldd r25,Z+1
 34548 ecaa 880F      		lsl r24
 34549 ecac 991F      		rol r25
 34550 ecae 880F      		lsl r24
 34551 ecb0 991F      		rol r25
 34552 ecb2 820F      		add r24,r18
 34553 ecb4 931F      		adc r25,r19
 34554 ecb6 FC01      		movw r30,r24
 34555 ecb8 8081      		ld r24,Z
 34556 ecba 9181      		ldd r25,Z+1
 34557 ecbc A281      		ldd r26,Z+2
 34558 ecbe B381      		ldd r27,Z+3
 34559 ecc0 BF77      		andi r27,0x7f
 34560 ecc2 8D87      		std Y+13,r24
 34561 ecc4 9E87      		std Y+14,r25
 34562 ecc6 AF87      		std Y+15,r26
 34563 ecc8 B88B      		std Y+16,r27
3061:lp_solve_5.5/lp_presolve.c ****       /* Check if we have the target column and save the pivot value */
3062:lp_solve_5.5/lp_presolve.c ****       if(jx == colnr) {
 34564               		.loc 2 3062 0
 34565 ecca 29A5      		ldd r18,Y+41
 34566 eccc 3AA5      		ldd r19,Y+42
 34567 ecce 89AD      		ldd r24,Y+57
 34568 ecd0 9AAD      		ldd r25,Y+58
 34569 ecd2 2817      		cp r18,r24
 34570 ecd4 3907      		cpc r19,r25
 34571 ecd6 01F4      		brne .L1453
3063:lp_solve_5.5/lp_presolve.c ****         /* Always accept unit coefficient */
3064:lp_solve_5.5/lp_presolve.c ****         if(fabs(dual - 1) < psdata->epsvalue)
 34572               		.loc 2 3064 0
 34573 ecd8 20E0      		ldi r18,0
 34574 ecda 30E0      		ldi r19,0
 34575 ecdc 40E8      		ldi r20,lo8(-128)
 34576 ecde 5FE3      		ldi r21,lo8(63)
 34577 ece0 6D85      		ldd r22,Y+13
 34578 ece2 7E85      		ldd r23,Y+14
 34579 ece4 8F85      		ldd r24,Y+15
 34580 ece6 9889      		ldd r25,Y+16
 34581 ece8 0E94 0000 		call __subsf3
 34582 ecec DC01      		movw r26,r24
 34583 ecee CB01      		movw r24,r22
 34584 ecf0 BF77      		andi r27,0x7f
 34585 ecf2 2DA9      		ldd r18,Y+53
 34586 ecf4 3EA9      		ldd r19,Y+54
 34587 ecf6 F901      		movw r30,r18
 34588 ecf8 2489      		ldd r18,Z+20
 34589 ecfa 3589      		ldd r19,Z+21
 34590 ecfc 4689      		ldd r20,Z+22
 34591 ecfe 5789      		ldd r21,Z+23
 34592 ed00 BC01      		movw r22,r24
 34593 ed02 CD01      		movw r24,r26
 34594 ed04 0E94 0000 		call __ltsf2
 34595 ed08 8823      		tst r24
 34596 ed0a 04F4      		brge .+2
 34597 ed0c 00C0      		rjmp .L1569
3065:lp_solve_5.5/lp_presolve.c ****           break;
3066:lp_solve_5.5/lp_presolve.c ****         pivot = dual;
 34598               		.loc 2 3066 0
 34599 ed0e 8D85      		ldd r24,Y+13
 34600 ed10 9E85      		ldd r25,Y+14
 34601 ed12 AF85      		ldd r26,Y+15
 34602 ed14 B889      		ldd r27,Y+16
 34603 ed16 8D8B      		std Y+21,r24
 34604 ed18 9E8B      		std Y+22,r25
 34605 ed1a AF8B      		std Y+23,r26
 34606 ed1c B88F      		std Y+24,r27
 34607 ed1e 00C0      		rjmp .L1456
 34608               	.L1453:
3067:lp_solve_5.5/lp_presolve.c ****         /* Otherwise continue scan */
3068:lp_solve_5.5/lp_presolve.c ****       }
3069:lp_solve_5.5/lp_presolve.c ****       /* Cannot accept case where result can be fractional */
3070:lp_solve_5.5/lp_presolve.c ****       else if((pivot > dual + psdata->epsvalue) ||
 34609               		.loc 2 3070 0
 34610 ed20 8DA9      		ldd r24,Y+53
 34611 ed22 9EA9      		ldd r25,Y+54
 34612 ed24 FC01      		movw r30,r24
 34613 ed26 8489      		ldd r24,Z+20
 34614 ed28 9589      		ldd r25,Z+21
 34615 ed2a A689      		ldd r26,Z+22
 34616 ed2c B789      		ldd r27,Z+23
 34617 ed2e 2D85      		ldd r18,Y+13
 34618 ed30 3E85      		ldd r19,Y+14
 34619 ed32 4F85      		ldd r20,Y+15
 34620 ed34 5889      		ldd r21,Y+16
 34621 ed36 BC01      		movw r22,r24
 34622 ed38 CD01      		movw r24,r26
 34623 ed3a 0E94 0000 		call __addsf3
 34624 ed3e DC01      		movw r26,r24
 34625 ed40 CB01      		movw r24,r22
 34626 ed42 2D89      		ldd r18,Y+21
 34627 ed44 3E89      		ldd r19,Y+22
 34628 ed46 4F89      		ldd r20,Y+23
 34629 ed48 588D      		ldd r21,Y+24
 34630 ed4a BC01      		movw r22,r24
 34631 ed4c CD01      		movw r24,r26
 34632 ed4e 0E94 0000 		call __ltsf2
 34633 ed52 8823      		tst r24
 34634 ed54 04F0      		brlt .L1457
 34635               		.loc 2 3070 0 is_stmt 0 discriminator 1
 34636 ed56 20E0      		ldi r18,0
 34637 ed58 30E0      		ldi r19,0
 34638 ed5a A901      		movw r20,r18
 34639 ed5c 6D89      		ldd r22,Y+21
 34640 ed5e 7E89      		ldd r23,Y+22
 34641 ed60 8F89      		ldd r24,Y+23
 34642 ed62 988D      		ldd r25,Y+24
 34643 ed64 0E94 0000 		call __gtsf2
 34644 ed68 1816      		cp __zero_reg__,r24
 34645 ed6a 04F4      		brge .L1456
3071:lp_solve_5.5/lp_presolve.c ****                ((pivot > 0) && (fabs(fmod(dual, pivot)) > psdata->epsvalue)))
 34646               		.loc 2 3071 0 is_stmt 1
 34647 ed6c 2D89      		ldd r18,Y+21
 34648 ed6e 3E89      		ldd r19,Y+22
 34649 ed70 4F89      		ldd r20,Y+23
 34650 ed72 588D      		ldd r21,Y+24
 34651 ed74 8D85      		ldd r24,Y+13
 34652 ed76 9E85      		ldd r25,Y+14
 34653 ed78 AF85      		ldd r26,Y+15
 34654 ed7a B889      		ldd r27,Y+16
 34655 ed7c BC01      		movw r22,r24
 34656 ed7e CD01      		movw r24,r26
 34657 ed80 0E94 0000 		call fmod
 34658 ed84 DC01      		movw r26,r24
 34659 ed86 CB01      		movw r24,r22
 34660 ed88 BF77      		andi r27,0x7f
 34661 ed8a 2DA9      		ldd r18,Y+53
 34662 ed8c 3EA9      		ldd r19,Y+54
 34663 ed8e F901      		movw r30,r18
 34664 ed90 2489      		ldd r18,Z+20
 34665 ed92 3589      		ldd r19,Z+21
 34666 ed94 4689      		ldd r20,Z+22
 34667 ed96 5789      		ldd r21,Z+23
 34668 ed98 BC01      		movw r22,r24
 34669 ed9a CD01      		movw r24,r26
 34670 ed9c 0E94 0000 		call __gtsf2
 34671 eda0 1816      		cp __zero_reg__,r24
 34672 eda2 04F4      		brge .L1456
 34673               	.L1457:
3072:lp_solve_5.5/lp_presolve.c ****         return( FALSE );
 34674               		.loc 2 3072 0
 34675 eda4 80E0      		ldi r24,0
 34676 eda6 00C0      		rjmp .L1535
 34677               	.L1456:
3058:lp_solve_5.5/lp_presolve.c ****       jx = ROW_MAT_COLNR(ib);
 34678               		.loc 2 3058 0 discriminator 2
 34679 eda8 AE01      		movw r20,r28
 34680 edaa 455D      		subi r20,-43
 34681 edac 5F4F      		sbci r21,-1
 34682 edae 2FA9      		ldd r18,Y+55
 34683 edb0 38AD      		ldd r19,Y+56
 34684 edb2 8DA9      		ldd r24,Y+53
 34685 edb4 9EA9      		ldd r25,Y+54
 34686 edb6 B901      		movw r22,r18
 34687 edb8 0E94 0000 		call presolve_nextcol
 34688 edbc 9C83      		std Y+4,r25
 34689 edbe 8B83      		std Y+3,r24
 34690               	.L1452:
3058:lp_solve_5.5/lp_presolve.c ****       jx = ROW_MAT_COLNR(ib);
 34691               		.loc 2 3058 0 is_stmt 0 discriminator 1
 34692 edc0 8BA5      		ldd r24,Y+43
 34693 edc2 9CA5      		ldd r25,Y+44
 34694 edc4 892B      		or r24,r25
 34695 edc6 01F0      		breq .+2
 34696 edc8 00C0      		rjmp .L1460
 34697 edca 00C0      		rjmp .L1449
 34698               	.L1569:
3065:lp_solve_5.5/lp_presolve.c ****         pivot = dual;
 34699               		.loc 2 3065 0 is_stmt 1
 34700 edcc 0000      		nop
 34701               	.L1449:
3073:lp_solve_5.5/lp_presolve.c ****     }
3074:lp_solve_5.5/lp_presolve.c ****   }
3075:lp_solve_5.5/lp_presolve.c **** 
3076:lp_solve_5.5/lp_presolve.c ****   /* Ascertain that the pivot value is large enough to preserve stability */
3077:lp_solve_5.5/lp_presolve.c ****   pivot = matAij;
 34702               		.loc 2 3077 0
 34703 edce 8BA1      		ldd r24,Y+35
 34704 edd0 9CA1      		ldd r25,Y+36
 34705 edd2 ADA1      		ldd r26,Y+37
 34706 edd4 BEA1      		ldd r27,Y+38
 34707 edd6 8D8B      		std Y+21,r24
 34708 edd8 9E8B      		std Y+22,r25
 34709 edda AF8B      		std Y+23,r26
 34710 eddc B88F      		std Y+24,r27
3078:lp_solve_5.5/lp_presolve.c ****   if(fabs(pivot) < psdata->epspivot*mat->colmax[colnr])
 34711               		.loc 2 3078 0
 34712 edde 8D89      		ldd r24,Y+21
 34713 ede0 9E89      		ldd r25,Y+22
 34714 ede2 AF89      		ldd r26,Y+23
 34715 ede4 B88D      		ldd r27,Y+24
 34716 ede6 6C01      		movw r12,r24
 34717 ede8 7D01      		movw r14,r26
 34718 edea E894      		clt
 34719 edec F7F8      		bld r15,7
 34720 edee 8DA9      		ldd r24,Y+53
 34721 edf0 9EA9      		ldd r25,Y+54
 34722 edf2 FC01      		movw r30,r24
 34723 edf4 808D      		ldd r24,Z+24
 34724 edf6 918D      		ldd r25,Z+25
 34725 edf8 A28D      		ldd r26,Z+26
 34726 edfa B38D      		ldd r27,Z+27
 34727 edfc 2B8D      		ldd r18,Y+27
 34728 edfe 3C8D      		ldd r19,Y+28
 34729 ee00 F901      		movw r30,r18
 34730 ee02 448D      		ldd r20,Z+28
 34731 ee04 558D      		ldd r21,Z+29
 34732 ee06 29AD      		ldd r18,Y+57
 34733 ee08 3AAD      		ldd r19,Y+58
 34734 ee0a 220F      		lsl r18
 34735 ee0c 331F      		rol r19
 34736 ee0e 220F      		lsl r18
 34737 ee10 331F      		rol r19
 34738 ee12 240F      		add r18,r20
 34739 ee14 351F      		adc r19,r21
 34740 ee16 F901      		movw r30,r18
 34741 ee18 2081      		ld r18,Z
 34742 ee1a 3181      		ldd r19,Z+1
 34743 ee1c 4281      		ldd r20,Z+2
 34744 ee1e 5381      		ldd r21,Z+3
 34745 ee20 BC01      		movw r22,r24
 34746 ee22 CD01      		movw r24,r26
 34747 ee24 0E94 0000 		call __mulsf3
 34748 ee28 DC01      		movw r26,r24
 34749 ee2a CB01      		movw r24,r22
 34750 ee2c 9C01      		movw r18,r24
 34751 ee2e AD01      		movw r20,r26
 34752 ee30 C701      		movw r24,r14
 34753 ee32 B601      		movw r22,r12
 34754 ee34 0E94 0000 		call __ltsf2
 34755 ee38 8823      		tst r24
 34756 ee3a 04F4      		brge .L1558
3079:lp_solve_5.5/lp_presolve.c ****     return( FALSE );
 34757               		.loc 2 3079 0
 34758 ee3c 80E0      		ldi r24,0
 34759 ee3e 00C0      		rjmp .L1535
 34760               	.L1558:
3080:lp_solve_5.5/lp_presolve.c **** 
3081:lp_solve_5.5/lp_presolve.c ****   /* Must ascertain that the row variables are not SOS'es; this is because
3082:lp_solve_5.5/lp_presolve.c ****      the eliminated variable will be a function of another variable. */
3083:lp_solve_5.5/lp_presolve.c ****   if(SOS_count(lp) > 0) {
 34761               		.loc 2 3083 0
 34762 ee40 898D      		ldd r24,Y+25
 34763 ee42 9A8D      		ldd r25,Y+26
 34764 ee44 0E94 0000 		call SOS_count
 34765 ee48 1816      		cp __zero_reg__,r24
 34766 ee4a 1906      		cpc __zero_reg__,r25
 34767 ee4c 04F0      		brlt .+2
 34768 ee4e 00C0      		rjmp .L1463
3084:lp_solve_5.5/lp_presolve.c ****     for(ib = mat->row_end[rownr-1]; ib < ie; ib++)
 34769               		.loc 2 3084 0
 34770 ee50 8B8D      		ldd r24,Y+27
 34771 ee52 9C8D      		ldd r25,Y+28
 34772 ee54 FC01      		movw r30,r24
 34773 ee56 208D      		ldd r18,Z+24
 34774 ee58 318D      		ldd r19,Z+25
 34775 ee5a 8FA9      		ldd r24,Y+55
 34776 ee5c 98AD      		ldd r25,Y+56
 34777 ee5e 8150      		subi r24,1
 34778 ee60 9048      		sbci r25,-128
 34779 ee62 880F      		lsl r24
 34780 ee64 991F      		rol r25
 34781 ee66 820F      		add r24,r18
 34782 ee68 931F      		adc r25,r19
 34783 ee6a FC01      		movw r30,r24
 34784 ee6c 8081      		ld r24,Z
 34785 ee6e 9181      		ldd r25,Z+1
 34786 ee70 9C83      		std Y+4,r25
 34787 ee72 8B83      		std Y+3,r24
 34788 ee74 00C0      		rjmp .L1464
 34789               	.L1466:
3085:lp_solve_5.5/lp_presolve.c ****       if(SOS_is_member(lp->SOS, 0, ROW_MAT_COLNR(ib)))
 34790               		.loc 2 3085 0
 34791 ee76 8B8D      		ldd r24,Y+27
 34792 ee78 9C8D      		ldd r25,Y+28
 34793 ee7a FC01      		movw r30,r24
 34794 ee7c 2485      		ldd r18,Z+12
 34795 ee7e 3585      		ldd r19,Z+13
 34796 ee80 8B8D      		ldd r24,Y+27
 34797 ee82 9C8D      		ldd r25,Y+28
 34798 ee84 FC01      		movw r30,r24
 34799 ee86 4689      		ldd r20,Z+22
 34800 ee88 5789      		ldd r21,Z+23
 34801 ee8a 8B81      		ldd r24,Y+3
 34802 ee8c 9C81      		ldd r25,Y+4
 34803 ee8e 880F      		lsl r24
 34804 ee90 991F      		rol r25
 34805 ee92 840F      		add r24,r20
 34806 ee94 951F      		adc r25,r21
 34807 ee96 FC01      		movw r30,r24
 34808 ee98 8081      		ld r24,Z
 34809 ee9a 9181      		ldd r25,Z+1
 34810 ee9c 880F      		lsl r24
 34811 ee9e 991F      		rol r25
 34812 eea0 820F      		add r24,r18
 34813 eea2 931F      		adc r25,r19
 34814 eea4 FC01      		movw r30,r24
 34815 eea6 2081      		ld r18,Z
 34816 eea8 3181      		ldd r19,Z+1
 34817 eeaa 898D      		ldd r24,Y+25
 34818 eeac 9A8D      		ldd r25,Y+26
 34819 eeae 8256      		subi r24,98
 34820 eeb0 9D4F      		sbci r25,-3
 34821 eeb2 FC01      		movw r30,r24
 34822 eeb4 8081      		ld r24,Z
 34823 eeb6 9181      		ldd r25,Z+1
 34824 eeb8 A901      		movw r20,r18
 34825 eeba 60E0      		ldi r22,0
 34826 eebc 70E0      		ldi r23,0
 34827 eebe 0E94 0000 		call SOS_is_member
 34828 eec2 892B      		or r24,r25
 34829 eec4 01F0      		breq .L1465
3086:lp_solve_5.5/lp_presolve.c ****         return( FALSE );
 34830               		.loc 2 3086 0
 34831 eec6 80E0      		ldi r24,0
 34832 eec8 00C0      		rjmp .L1535
 34833               	.L1465:
3084:lp_solve_5.5/lp_presolve.c ****     for(ib = mat->row_end[rownr-1]; ib < ie; ib++)
 34834               		.loc 2 3084 0 discriminator 2
 34835 eeca 8B81      		ldd r24,Y+3
 34836 eecc 9C81      		ldd r25,Y+4
 34837 eece 0196      		adiw r24,1
 34838 eed0 9C83      		std Y+4,r25
 34839 eed2 8B83      		std Y+3,r24
 34840               	.L1464:
3084:lp_solve_5.5/lp_presolve.c ****     for(ib = mat->row_end[rownr-1]; ib < ie; ib++)
 34841               		.loc 2 3084 0 is_stmt 0 discriminator 1
 34842 eed4 2B81      		ldd r18,Y+3
 34843 eed6 3C81      		ldd r19,Y+4
 34844 eed8 8D8D      		ldd r24,Y+29
 34845 eeda 9E8D      		ldd r25,Y+30
 34846 eedc 2817      		cp r18,r24
 34847 eede 3907      		cpc r19,r25
 34848 eee0 04F0      		brlt .L1466
 34849               	.L1463:
3087:lp_solve_5.5/lp_presolve.c ****   }
3088:lp_solve_5.5/lp_presolve.c **** 
3089:lp_solve_5.5/lp_presolve.c ****   /* Calculate the dual value */
3090:lp_solve_5.5/lp_presolve.c ****   dual = vecOF[colnr]/pivot;
 34850               		.loc 2 3090 0 is_stmt 1
 34851 eee2 89AD      		ldd r24,Y+57
 34852 eee4 9AAD      		ldd r25,Y+58
 34853 eee6 880F      		lsl r24
 34854 eee8 991F      		rol r25
 34855 eeea 880F      		lsl r24
 34856 eeec 991F      		rol r25
 34857 eeee 2FA1      		ldd r18,Y+39
 34858 eef0 38A5      		ldd r19,Y+40
 34859 eef2 820F      		add r24,r18
 34860 eef4 931F      		adc r25,r19
 34861 eef6 FC01      		movw r30,r24
 34862 eef8 8081      		ld r24,Z
 34863 eefa 9181      		ldd r25,Z+1
 34864 eefc A281      		ldd r26,Z+2
 34865 eefe B381      		ldd r27,Z+3
 34866 ef00 2D89      		ldd r18,Y+21
 34867 ef02 3E89      		ldd r19,Y+22
 34868 ef04 4F89      		ldd r20,Y+23
 34869 ef06 588D      		ldd r21,Y+24
 34870 ef08 BC01      		movw r22,r24
 34871 ef0a CD01      		movw r24,r26
 34872 ef0c 0E94 0000 		call __divsf3
 34873 ef10 DC01      		movw r26,r24
 34874 ef12 CB01      		movw r24,r22
 34875 ef14 8D87      		std Y+13,r24
 34876 ef16 9E87      		std Y+14,r25
 34877 ef18 AF87      		std Y+15,r26
 34878 ef1a B88B      		std Y+16,r27
3091:lp_solve_5.5/lp_presolve.c **** 
3092:lp_solve_5.5/lp_presolve.c ****   /* Here we have free variable in an equality constraint; this means we can
3093:lp_solve_5.5/lp_presolve.c ****      can adjust the OF for the deleted variable and also delete the constraint. */
3094:lp_solve_5.5/lp_presolve.c ****   if(isfree && is_constr_type(lp, rownr, EQ)) {
 34879               		.loc 2 3094 0
 34880 ef1c 8BAD      		ldd r24,Y+59
 34881 ef1e 8823      		tst r24
 34882 ef20 01F0      		breq .L1467
 34883               		.loc 2 3094 0 is_stmt 0 discriminator 1
 34884 ef22 2FA9      		ldd r18,Y+55
 34885 ef24 38AD      		ldd r19,Y+56
 34886 ef26 898D      		ldd r24,Y+25
 34887 ef28 9A8D      		ldd r25,Y+26
 34888 ef2a 43E0      		ldi r20,lo8(3)
 34889 ef2c 50E0      		ldi r21,0
 34890 ef2e B901      		movw r22,r18
 34891 ef30 0E94 0000 		call is_constr_type
 34892 ef34 8823      		tst r24
 34893 ef36 01F0      		breq .L1467
3095:lp_solve_5.5/lp_presolve.c ****     matValue = RHS/pivot;
 34894               		.loc 2 3095 0 is_stmt 1
 34895 ef38 2D89      		ldd r18,Y+21
 34896 ef3a 3E89      		ldd r19,Y+22
 34897 ef3c 4F89      		ldd r20,Y+23
 34898 ef3e 588D      		ldd r21,Y+24
 34899 ef40 6989      		ldd r22,Y+17
 34900 ef42 7A89      		ldd r23,Y+18
 34901 ef44 8B89      		ldd r24,Y+19
 34902 ef46 9C89      		ldd r25,Y+20
 34903 ef48 0E94 0000 		call __divsf3
 34904 ef4c DC01      		movw r26,r24
 34905 ef4e CB01      		movw r24,r22
 34906 ef50 8F8F      		std Y+31,r24
 34907 ef52 98A3      		std Y+32,r25
 34908 ef54 A9A3      		std Y+33,r26
 34909 ef56 BAA3      		std Y+34,r27
3096:lp_solve_5.5/lp_presolve.c ****     if(matValue != 0)
 34910               		.loc 2 3096 0
 34911 ef58 20E0      		ldi r18,0
 34912 ef5a 30E0      		ldi r19,0
 34913 ef5c A901      		movw r20,r18
 34914 ef5e 6F8D      		ldd r22,Y+31
 34915 ef60 78A1      		ldd r23,Y+32
 34916 ef62 89A1      		ldd r24,Y+33
 34917 ef64 9AA1      		ldd r25,Y+34
 34918 ef66 0E94 0000 		call __nesf2
 34919 ef6a 8823      		tst r24
 34920 ef6c 01F4      		brne .+2
 34921 ef6e 00C0      		rjmp .L1470
3097:lp_solve_5.5/lp_presolve.c ****       undoadded = addUndoPresolve(lp, TRUE, colnr, matValue, 0.0, 0);
 34922               		.loc 2 3097 0
 34923 ef70 8F8D      		ldd r24,Y+31
 34924 ef72 98A1      		ldd r25,Y+32
 34925 ef74 A9A1      		ldd r26,Y+33
 34926 ef76 BAA1      		ldd r27,Y+34
 34927 ef78 49AD      		ldd r20,Y+57
 34928 ef7a 5AAD      		ldd r21,Y+58
 34929 ef7c E98D      		ldd r30,Y+25
 34930 ef7e FA8D      		ldd r31,Y+26
 34931 ef80 A12C      		mov r10,__zero_reg__
 34932 ef82 B12C      		mov r11,__zero_reg__
 34933 ef84 C12C      		mov r12,__zero_reg__
 34934 ef86 D12C      		mov r13,__zero_reg__
 34935 ef88 7601      		movw r14,r12
 34936 ef8a 8C01      		movw r16,r24
 34937 ef8c 9D01      		movw r18,r26
 34938 ef8e 61E0      		ldi r22,lo8(1)
 34939 ef90 CF01      		movw r24,r30
 34940 ef92 0E94 0000 		call addUndoPresolve
 34941 ef96 8A83      		std Y+2,r24
3096:lp_solve_5.5/lp_presolve.c ****     if(matValue != 0)
 34942               		.loc 2 3096 0
 34943 ef98 00C0      		rjmp .L1470
 34944               	.L1467:
3098:lp_solve_5.5/lp_presolve.c ****   }
3099:lp_solve_5.5/lp_presolve.c **** 
3100:lp_solve_5.5/lp_presolve.c ****   else {
3101:lp_solve_5.5/lp_presolve.c **** 
3102:lp_solve_5.5/lp_presolve.c ****     /* IMPLIEDFREE: For simplicity, ensure that we can keep the slack based at 0,
3103:lp_solve_5.5/lp_presolve.c ****                    and not its upper bound. Effectively, we consider the constraint
3104:lp_solve_5.5/lp_presolve.c ****                    an equality, using the information of the sign of the dual.
3105:lp_solve_5.5/lp_presolve.c ****        IMPLIEDSLK: Since we already have an equality constraint, we wish to make sure
3106:lp_solve_5.5/lp_presolve.c ****                    that the ensuing inequality constraint will have an RHS that is
3107:lp_solve_5.5/lp_presolve.c ****                    non-infinite. */
3108:lp_solve_5.5/lp_presolve.c ****     if(isfree) {
 34945               		.loc 2 3108 0
 34946 ef9a 8BAD      		ldd r24,Y+59
 34947 ef9c 8823      		tst r24
 34948 ef9e 01F4      		brne .+2
 34949 efa0 00C0      		rjmp .L1471
3109:lp_solve_5.5/lp_presolve.c ****       SETMIN(RHS, presolve_sumplumin(lp, rownr, psdata->rows, TRUE));
 34950               		.loc 2 3109 0
 34951 efa2 8DA9      		ldd r24,Y+53
 34952 efa4 9EA9      		ldd r25,Y+54
 34953 efa6 FC01      		movw r30,r24
 34954 efa8 4081      		ld r20,Z
 34955 efaa 5181      		ldd r21,Z+1
 34956 efac 6FA9      		ldd r22,Y+55
 34957 efae 78AD      		ldd r23,Y+56
 34958 efb0 898D      		ldd r24,Y+25
 34959 efb2 9A8D      		ldd r25,Y+26
 34960 efb4 21E0      		ldi r18,lo8(1)
 34961 efb6 0E94 0000 		call presolve_sumplumin
 34962 efba DC01      		movw r26,r24
 34963 efbc CB01      		movw r24,r22
 34964 efbe 2989      		ldd r18,Y+17
 34965 efc0 3A89      		ldd r19,Y+18
 34966 efc2 4B89      		ldd r20,Y+19
 34967 efc4 5C89      		ldd r21,Y+20
 34968 efc6 BC01      		movw r22,r24
 34969 efc8 CD01      		movw r24,r26
 34970 efca 0E94 0000 		call __ltsf2
 34971 efce 8823      		tst r24
 34972 efd0 04F4      		brge .L1472
 34973               		.loc 2 3109 0 is_stmt 0 discriminator 1
 34974 efd2 8DA9      		ldd r24,Y+53
 34975 efd4 9EA9      		ldd r25,Y+54
 34976 efd6 FC01      		movw r30,r24
 34977 efd8 4081      		ld r20,Z
 34978 efda 5181      		ldd r21,Z+1
 34979 efdc 6FA9      		ldd r22,Y+55
 34980 efde 78AD      		ldd r23,Y+56
 34981 efe0 898D      		ldd r24,Y+25
 34982 efe2 9A8D      		ldd r25,Y+26
 34983 efe4 21E0      		ldi r18,lo8(1)
 34984 efe6 0E94 0000 		call presolve_sumplumin
 34985 efea DC01      		movw r26,r24
 34986 efec CB01      		movw r24,r22
 34987 efee 898B      		std Y+17,r24
 34988 eff0 9A8B      		std Y+18,r25
 34989 eff2 AB8B      		std Y+19,r26
 34990 eff4 BC8B      		std Y+20,r27
 34991               	.L1472:
3110:lp_solve_5.5/lp_presolve.c ****       matValue = presolve_sumplumin(lp, rownr, psdata->rows, FALSE);
 34992               		.loc 2 3110 0 is_stmt 1
 34993 eff6 8DA9      		ldd r24,Y+53
 34994 eff8 9EA9      		ldd r25,Y+54
 34995 effa FC01      		movw r30,r24
 34996 effc 4081      		ld r20,Z
 34997 effe 5181      		ldd r21,Z+1
 34998 f000 6FA9      		ldd r22,Y+55
 34999 f002 78AD      		ldd r23,Y+56
 35000 f004 898D      		ldd r24,Y+25
 35001 f006 9A8D      		ldd r25,Y+26
 35002 f008 20E0      		ldi r18,0
 35003 f00a 0E94 0000 		call presolve_sumplumin
 35004 f00e DC01      		movw r26,r24
 35005 f010 CB01      		movw r24,r22
 35006 f012 8F8F      		std Y+31,r24
 35007 f014 98A3      		std Y+32,r25
 35008 f016 A9A3      		std Y+33,r26
 35009 f018 BAA3      		std Y+34,r27
3111:lp_solve_5.5/lp_presolve.c ****       conRange = get_rh_lower(lp, rownr);
 35010               		.loc 2 3111 0
 35011 f01a 2FA9      		ldd r18,Y+55
 35012 f01c 38AD      		ldd r19,Y+56
 35013 f01e 898D      		ldd r24,Y+25
 35014 f020 9A8D      		ldd r25,Y+26
 35015 f022 B901      		movw r22,r18
 35016 f024 0E94 0000 		call get_rh_lower
 35017 f028 DC01      		movw r26,r24
 35018 f02a CB01      		movw r24,r22
 35019 f02c 8987      		std Y+9,r24
 35020 f02e 9A87      		std Y+10,r25
 35021 f030 AB87      		std Y+11,r26
 35022 f032 BC87      		std Y+12,r27
3112:lp_solve_5.5/lp_presolve.c ****       conRange = RHS - MAX(matValue, conRange);
 35023               		.loc 2 3112 0
 35024 f034 2985      		ldd r18,Y+9
 35025 f036 3A85      		ldd r19,Y+10
 35026 f038 4B85      		ldd r20,Y+11
 35027 f03a 5C85      		ldd r21,Y+12
 35028 f03c 6F8D      		ldd r22,Y+31
 35029 f03e 78A1      		ldd r23,Y+32
 35030 f040 89A1      		ldd r24,Y+33
 35031 f042 9AA1      		ldd r25,Y+34
 35032 f044 0E94 0000 		call __gtsf2
 35033 f048 1816      		cp __zero_reg__,r24
 35034 f04a 04F4      		brge .L1559
 35035               		.loc 2 3112 0 is_stmt 0 discriminator 1
 35036 f04c 8F8D      		ldd r24,Y+31
 35037 f04e 98A1      		ldd r25,Y+32
 35038 f050 A9A1      		ldd r26,Y+33
 35039 f052 BAA1      		ldd r27,Y+34
 35040 f054 00C0      		rjmp .L1476
 35041               	.L1559:
 35042               		.loc 2 3112 0 discriminator 2
 35043 f056 8985      		ldd r24,Y+9
 35044 f058 9A85      		ldd r25,Y+10
 35045 f05a AB85      		ldd r26,Y+11
 35046 f05c BC85      		ldd r27,Y+12
 35047               	.L1476:
 35048               		.loc 2 3112 0 discriminator 4
 35049 f05e 9C01      		movw r18,r24
 35050 f060 AD01      		movw r20,r26
 35051 f062 6989      		ldd r22,Y+17
 35052 f064 7A89      		ldd r23,Y+18
 35053 f066 8B89      		ldd r24,Y+19
 35054 f068 9C89      		ldd r25,Y+20
 35055 f06a 0E94 0000 		call __subsf3
 35056 f06e DC01      		movw r26,r24
 35057 f070 CB01      		movw r24,r22
 35058 f072 8987      		std Y+9,r24
 35059 f074 9A87      		std Y+10,r25
 35060 f076 AB87      		std Y+11,r26
 35061 f078 BC87      		std Y+12,r27
3113:lp_solve_5.5/lp_presolve.c ****       signflip = (MYBOOL) ((dual > 0) &&
 35062               		.loc 2 3113 0 is_stmt 1 discriminator 4
 35063 f07a 20E0      		ldi r18,0
 35064 f07c 30E0      		ldi r19,0
 35065 f07e A901      		movw r20,r18
 35066 f080 6D85      		ldd r22,Y+13
 35067 f082 7E85      		ldd r23,Y+14
 35068 f084 8F85      		ldd r24,Y+15
 35069 f086 9889      		ldd r25,Y+16
 35070 f088 0E94 0000 		call __gtsf2
 35071 f08c 1816      		cp __zero_reg__,r24
 35072 f08e 04F4      		brge .L1477
3114:lp_solve_5.5/lp_presolve.c ****                            !my_infinite(lp, conRange));
 35073               		.loc 2 3114 0 discriminator 1
 35074 f090 8985      		ldd r24,Y+9
 35075 f092 9A85      		ldd r25,Y+10
 35076 f094 AB85      		ldd r26,Y+11
 35077 f096 BC85      		ldd r27,Y+12
 35078 f098 BF77      		andi r27,0x7f
 35079 f09a 298D      		ldd r18,Y+25
 35080 f09c 3A8D      		ldd r19,Y+26
 35081 f09e 265F      		subi r18,-10
 35082 f0a0 3C4F      		sbci r19,-4
 35083 f0a2 F901      		movw r30,r18
 35084 f0a4 2081      		ld r18,Z
 35085 f0a6 3181      		ldd r19,Z+1
 35086 f0a8 4281      		ldd r20,Z+2
 35087 f0aa 5381      		ldd r21,Z+3
 35088 f0ac 11E0      		ldi r17,lo8(1)
 35089 f0ae BC01      		movw r22,r24
 35090 f0b0 CD01      		movw r24,r26
 35091 f0b2 0E94 0000 		call __gesf2
 35092 f0b6 8823      		tst r24
 35093 f0b8 04F4      		brge .L1479
 35094 f0ba 10E0      		ldi r17,0
 35095               	.L1479:
 35096 f0bc 81E0      		ldi r24,lo8(1)
 35097 f0be 8127      		eor r24,r17
3113:lp_solve_5.5/lp_presolve.c ****       signflip = (MYBOOL) ((dual > 0) &&
 35098               		.loc 2 3113 0 discriminator 1
 35099 f0c0 8823      		tst r24
 35100 f0c2 01F0      		breq .L1477
3113:lp_solve_5.5/lp_presolve.c ****       signflip = (MYBOOL) ((dual > 0) &&
 35101               		.loc 2 3113 0 is_stmt 0 discriminator 3
 35102 f0c4 81E0      		ldi r24,lo8(1)
 35103 f0c6 90E0      		ldi r25,0
 35104 f0c8 00C0      		rjmp .L1480
 35105               	.L1477:
3113:lp_solve_5.5/lp_presolve.c ****       signflip = (MYBOOL) ((dual > 0) &&
 35106               		.loc 2 3113 0 discriminator 4
 35107 f0ca 80E0      		ldi r24,0
 35108 f0cc 90E0      		ldi r25,0
 35109               	.L1480:
3113:lp_solve_5.5/lp_presolve.c ****       signflip = (MYBOOL) ((dual > 0) &&
 35110               		.loc 2 3113 0 discriminator 6
 35111 f0ce 8983      		std Y+1,r24
 35112 f0d0 00C0      		rjmp .L1481
 35113               	.L1471:
3115:lp_solve_5.5/lp_presolve.c ****     }
3116:lp_solve_5.5/lp_presolve.c ****     else {
3117:lp_solve_5.5/lp_presolve.c ****       varLo = get_lowbo(lp, colnr);
 35114               		.loc 2 3117 0 is_stmt 1
 35115 f0d2 29AD      		ldd r18,Y+57
 35116 f0d4 3AAD      		ldd r19,Y+58
 35117 f0d6 898D      		ldd r24,Y+25
 35118 f0d8 9A8D      		ldd r25,Y+26
 35119 f0da B901      		movw r22,r18
 35120 f0dc 0E94 0000 		call get_lowbo
 35121 f0e0 DC01      		movw r26,r24
 35122 f0e2 CB01      		movw r24,r22
 35123 f0e4 8DA7      		std Y+45,r24
 35124 f0e6 9EA7      		std Y+46,r25
 35125 f0e8 AFA7      		std Y+47,r26
 35126 f0ea B8AB      		std Y+48,r27
3118:lp_solve_5.5/lp_presolve.c ****       varLo *= (my_infinite(lp, varLo) ? my_sign(pivot) : pivot);
 35127               		.loc 2 3118 0
 35128 f0ec 8DA5      		ldd r24,Y+45
 35129 f0ee 9EA5      		ldd r25,Y+46
 35130 f0f0 AFA5      		ldd r26,Y+47
 35131 f0f2 B8A9      		ldd r27,Y+48
 35132 f0f4 BF77      		andi r27,0x7f
 35133 f0f6 298D      		ldd r18,Y+25
 35134 f0f8 3A8D      		ldd r19,Y+26
 35135 f0fa 265F      		subi r18,-10
 35136 f0fc 3C4F      		sbci r19,-4
 35137 f0fe F901      		movw r30,r18
 35138 f100 2081      		ld r18,Z
 35139 f102 3181      		ldd r19,Z+1
 35140 f104 4281      		ldd r20,Z+2
 35141 f106 5381      		ldd r21,Z+3
 35142 f108 BC01      		movw r22,r24
 35143 f10a CD01      		movw r24,r26
 35144 f10c 0E94 0000 		call __gesf2
 35145 f110 8823      		tst r24
 35146 f112 04F0      		brlt .L1560
 35147               		.loc 2 3118 0 is_stmt 0 discriminator 1
 35148 f114 20E0      		ldi r18,0
 35149 f116 30E0      		ldi r19,0
 35150 f118 A901      		movw r20,r18
 35151 f11a 6D89      		ldd r22,Y+21
 35152 f11c 7E89      		ldd r23,Y+22
 35153 f11e 8F89      		ldd r24,Y+23
 35154 f120 988D      		ldd r25,Y+24
 35155 f122 0E94 0000 		call __ltsf2
 35156 f126 8823      		tst r24
 35157 f128 04F4      		brge .L1561
 35158               		.loc 2 3118 0 discriminator 3
 35159 f12a 80E0      		ldi r24,0
 35160 f12c 90E0      		ldi r25,0
 35161 f12e A0E8      		ldi r26,lo8(-128)
 35162 f130 BFEB      		ldi r27,lo8(-65)
 35163 f132 00C0      		rjmp .L1487
 35164               	.L1561:
 35165               		.loc 2 3118 0 discriminator 4
 35166 f134 80E0      		ldi r24,0
 35167 f136 90E0      		ldi r25,0
 35168 f138 A0E8      		ldi r26,lo8(-128)
 35169 f13a BFE3      		ldi r27,lo8(63)
 35170 f13c 00C0      		rjmp .L1487
 35171               	.L1560:
 35172               		.loc 2 3118 0 discriminator 2
 35173 f13e 8D89      		ldd r24,Y+21
 35174 f140 9E89      		ldd r25,Y+22
 35175 f142 AF89      		ldd r26,Y+23
 35176 f144 B88D      		ldd r27,Y+24
 35177               	.L1487:
 35178               		.loc 2 3118 0 discriminator 8
 35179 f146 2DA5      		ldd r18,Y+45
 35180 f148 3EA5      		ldd r19,Y+46
 35181 f14a 4FA5      		ldd r20,Y+47
 35182 f14c 58A9      		ldd r21,Y+48
 35183 f14e BC01      		movw r22,r24
 35184 f150 CD01      		movw r24,r26
 35185 f152 0E94 0000 		call __mulsf3
 35186 f156 DC01      		movw r26,r24
 35187 f158 CB01      		movw r24,r22
 35188 f15a 8DA7      		std Y+45,r24
 35189 f15c 9EA7      		std Y+46,r25
 35190 f15e AFA7      		std Y+47,r26
 35191 f160 B8AB      		std Y+48,r27
3119:lp_solve_5.5/lp_presolve.c ****       varHi = get_upbo(lp, colnr);
 35192               		.loc 2 3119 0 is_stmt 1 discriminator 8
 35193 f162 29AD      		ldd r18,Y+57
 35194 f164 3AAD      		ldd r19,Y+58
 35195 f166 898D      		ldd r24,Y+25
 35196 f168 9A8D      		ldd r25,Y+26
 35197 f16a B901      		movw r22,r18
 35198 f16c 0E94 0000 		call get_upbo
 35199 f170 DC01      		movw r26,r24
 35200 f172 CB01      		movw r24,r22
 35201 f174 89AB      		std Y+49,r24
 35202 f176 9AAB      		std Y+50,r25
 35203 f178 ABAB      		std Y+51,r26
 35204 f17a BCAB      		std Y+52,r27
3120:lp_solve_5.5/lp_presolve.c ****       varHi *= (my_infinite(lp, varHi) ? my_sign(pivot) : pivot);
 35205               		.loc 2 3120 0 discriminator 8
 35206 f17c 89A9      		ldd r24,Y+49
 35207 f17e 9AA9      		ldd r25,Y+50
 35208 f180 ABA9      		ldd r26,Y+51
 35209 f182 BCA9      		ldd r27,Y+52
 35210 f184 BF77      		andi r27,0x7f
 35211 f186 298D      		ldd r18,Y+25
 35212 f188 3A8D      		ldd r19,Y+26
 35213 f18a 265F      		subi r18,-10
 35214 f18c 3C4F      		sbci r19,-4
 35215 f18e F901      		movw r30,r18
 35216 f190 2081      		ld r18,Z
 35217 f192 3181      		ldd r19,Z+1
 35218 f194 4281      		ldd r20,Z+2
 35219 f196 5381      		ldd r21,Z+3
 35220 f198 BC01      		movw r22,r24
 35221 f19a CD01      		movw r24,r26
 35222 f19c 0E94 0000 		call __gesf2
 35223 f1a0 8823      		tst r24
 35224 f1a2 04F0      		brlt .L1562
 35225               		.loc 2 3120 0 is_stmt 0 discriminator 1
 35226 f1a4 20E0      		ldi r18,0
 35227 f1a6 30E0      		ldi r19,0
 35228 f1a8 A901      		movw r20,r18
 35229 f1aa 6D89      		ldd r22,Y+21
 35230 f1ac 7E89      		ldd r23,Y+22
 35231 f1ae 8F89      		ldd r24,Y+23
 35232 f1b0 988D      		ldd r25,Y+24
 35233 f1b2 0E94 0000 		call __ltsf2
 35234 f1b6 8823      		tst r24
 35235 f1b8 04F4      		brge .L1563
 35236               		.loc 2 3120 0 discriminator 3
 35237 f1ba 80E0      		ldi r24,0
 35238 f1bc 90E0      		ldi r25,0
 35239 f1be A0E8      		ldi r26,lo8(-128)
 35240 f1c0 BFEB      		ldi r27,lo8(-65)
 35241 f1c2 00C0      		rjmp .L1493
 35242               	.L1563:
 35243               		.loc 2 3120 0 discriminator 4
 35244 f1c4 80E0      		ldi r24,0
 35245 f1c6 90E0      		ldi r25,0
 35246 f1c8 A0E8      		ldi r26,lo8(-128)
 35247 f1ca BFE3      		ldi r27,lo8(63)
 35248 f1cc 00C0      		rjmp .L1493
 35249               	.L1562:
 35250               		.loc 2 3120 0 discriminator 2
 35251 f1ce 8D89      		ldd r24,Y+21
 35252 f1d0 9E89      		ldd r25,Y+22
 35253 f1d2 AF89      		ldd r26,Y+23
 35254 f1d4 B88D      		ldd r27,Y+24
 35255               	.L1493:
 35256               		.loc 2 3120 0 discriminator 8
 35257 f1d6 29A9      		ldd r18,Y+49
 35258 f1d8 3AA9      		ldd r19,Y+50
 35259 f1da 4BA9      		ldd r20,Y+51
 35260 f1dc 5CA9      		ldd r21,Y+52
 35261 f1de BC01      		movw r22,r24
 35262 f1e0 CD01      		movw r24,r26
 35263 f1e2 0E94 0000 		call __mulsf3
 35264 f1e6 DC01      		movw r26,r24
 35265 f1e8 CB01      		movw r24,r22
 35266 f1ea 89AB      		std Y+49,r24
 35267 f1ec 9AAB      		std Y+50,r25
 35268 f1ee ABAB      		std Y+51,r26
 35269 f1f0 BCAB      		std Y+52,r27
3121:lp_solve_5.5/lp_presolve.c ****       if(pivot < 0)
 35270               		.loc 2 3121 0 is_stmt 1 discriminator 8
 35271 f1f2 20E0      		ldi r18,0
 35272 f1f4 30E0      		ldi r19,0
 35273 f1f6 A901      		movw r20,r18
 35274 f1f8 6D89      		ldd r22,Y+21
 35275 f1fa 7E89      		ldd r23,Y+22
 35276 f1fc 8F89      		ldd r24,Y+23
 35277 f1fe 988D      		ldd r25,Y+24
 35278 f200 0E94 0000 		call __ltsf2
 35279 f204 8823      		tst r24
 35280 f206 04F4      		brge .L1494
3122:lp_solve_5.5/lp_presolve.c ****         swapREAL(&varHi, &varLo);
 35281               		.loc 2 3122 0
 35282 f208 9E01      		movw r18,r28
 35283 f20a 235D      		subi r18,-45
 35284 f20c 3F4F      		sbci r19,-1
 35285 f20e CE01      		movw r24,r28
 35286 f210 C196      		adiw r24,49
 35287 f212 B901      		movw r22,r18
 35288 f214 0E94 0000 		call swapREAL
 35289               	.L1494:
3123:lp_solve_5.5/lp_presolve.c ****       signflip = my_infinite(lp, varLo);
 35290               		.loc 2 3123 0
 35291 f218 8DA5      		ldd r24,Y+45
 35292 f21a 9EA5      		ldd r25,Y+46
 35293 f21c AFA5      		ldd r26,Y+47
 35294 f21e B8A9      		ldd r27,Y+48
 35295 f220 BF77      		andi r27,0x7f
 35296 f222 298D      		ldd r18,Y+25
 35297 f224 3A8D      		ldd r19,Y+26
 35298 f226 265F      		subi r18,-10
 35299 f228 3C4F      		sbci r19,-4
 35300 f22a F901      		movw r30,r18
 35301 f22c 2081      		ld r18,Z
 35302 f22e 3181      		ldd r19,Z+1
 35303 f230 4281      		ldd r20,Z+2
 35304 f232 5381      		ldd r21,Z+3
 35305 f234 11E0      		ldi r17,lo8(1)
 35306 f236 BC01      		movw r22,r24
 35307 f238 CD01      		movw r24,r26
 35308 f23a 0E94 0000 		call __gesf2
 35309 f23e 8823      		tst r24
 35310 f240 04F4      		brge .L1496
 35311 f242 10E0      		ldi r17,0
 35312               	.L1496:
 35313 f244 1983      		std Y+1,r17
 35314               	.L1481:
3124:lp_solve_5.5/lp_presolve.c ****     }
3125:lp_solve_5.5/lp_presolve.c ****     if(signflip) {
 35315               		.loc 2 3125 0
 35316 f246 8981      		ldd r24,Y+1
 35317 f248 8823      		tst r24
 35318 f24a 01F4      		brne .+2
 35319 f24c 00C0      		rjmp .L1497
3126:lp_solve_5.5/lp_presolve.c ****       mat_multrow(mat, rownr, -1);
 35320               		.loc 2 3126 0
 35321 f24e 6FA9      		ldd r22,Y+55
 35322 f250 78AD      		ldd r23,Y+56
 35323 f252 8B8D      		ldd r24,Y+27
 35324 f254 9C8D      		ldd r25,Y+28
 35325 f256 20E0      		ldi r18,0
 35326 f258 30E0      		ldi r19,0
 35327 f25a 40E8      		ldi r20,lo8(-128)
 35328 f25c 5FEB      		ldi r21,lo8(-65)
 35329 f25e 0E94 0000 		call mat_multrow
3127:lp_solve_5.5/lp_presolve.c ****       RHS -= conRange;
 35330               		.loc 2 3127 0
 35331 f262 2985      		ldd r18,Y+9
 35332 f264 3A85      		ldd r19,Y+10
 35333 f266 4B85      		ldd r20,Y+11
 35334 f268 5C85      		ldd r21,Y+12
 35335 f26a 6989      		ldd r22,Y+17
 35336 f26c 7A89      		ldd r23,Y+18
 35337 f26e 8B89      		ldd r24,Y+19
 35338 f270 9C89      		ldd r25,Y+20
 35339 f272 0E94 0000 		call __subsf3
 35340 f276 DC01      		movw r26,r24
 35341 f278 CB01      		movw r24,r22
 35342 f27a 898B      		std Y+17,r24
 35343 f27c 9A8B      		std Y+18,r25
 35344 f27e AB8B      		std Y+19,r26
 35345 f280 BC8B      		std Y+20,r27
3128:lp_solve_5.5/lp_presolve.c ****       RHS = -RHS;
 35346               		.loc 2 3128 0
 35347 f282 8989      		ldd r24,Y+17
 35348 f284 9A89      		ldd r25,Y+18
 35349 f286 AB89      		ldd r26,Y+19
 35350 f288 BC89      		ldd r27,Y+20
 35351 f28a B058      		subi r27,0x80
 35352 f28c 898B      		std Y+17,r24
 35353 f28e 9A8B      		std Y+18,r25
 35354 f290 AB8B      		std Y+19,r26
 35355 f292 BC8B      		std Y+20,r27
3129:lp_solve_5.5/lp_presolve.c ****       lp->orig_rhs[rownr] = RHS;
 35356               		.loc 2 3129 0
 35357 f294 898D      		ldd r24,Y+25
 35358 f296 9A8D      		ldd r25,Y+26
 35359 f298 8A55      		subi r24,90
 35360 f29a 9D4F      		sbci r25,-3
 35361 f29c FC01      		movw r30,r24
 35362 f29e 2081      		ld r18,Z
 35363 f2a0 3181      		ldd r19,Z+1
 35364 f2a2 8FA9      		ldd r24,Y+55
 35365 f2a4 98AD      		ldd r25,Y+56
 35366 f2a6 880F      		lsl r24
 35367 f2a8 991F      		rol r25
 35368 f2aa 880F      		lsl r24
 35369 f2ac 991F      		rol r25
 35370 f2ae 280F      		add r18,r24
 35371 f2b0 391F      		adc r19,r25
 35372 f2b2 8989      		ldd r24,Y+17
 35373 f2b4 9A89      		ldd r25,Y+18
 35374 f2b6 AB89      		ldd r26,Y+19
 35375 f2b8 BC89      		ldd r27,Y+20
 35376 f2ba F901      		movw r30,r18
 35377 f2bc 8083      		st Z,r24
 35378 f2be 9183      		std Z+1,r25
 35379 f2c0 A283      		std Z+2,r26
 35380 f2c2 B383      		std Z+3,r27
3130:lp_solve_5.5/lp_presolve.c ****       pivot = -pivot;
 35381               		.loc 2 3130 0
 35382 f2c4 8D89      		ldd r24,Y+21
 35383 f2c6 9E89      		ldd r25,Y+22
 35384 f2c8 AF89      		ldd r26,Y+23
 35385 f2ca B88D      		ldd r27,Y+24
 35386 f2cc B058      		subi r27,0x80
 35387 f2ce 8D8B      		std Y+21,r24
 35388 f2d0 9E8B      		std Y+22,r25
 35389 f2d2 AF8B      		std Y+23,r26
 35390 f2d4 B88F      		std Y+24,r27
3131:lp_solve_5.5/lp_presolve.c ****       dual  = -dual;
 35391               		.loc 2 3131 0
 35392 f2d6 8D85      		ldd r24,Y+13
 35393 f2d8 9E85      		ldd r25,Y+14
 35394 f2da AF85      		ldd r26,Y+15
 35395 f2dc B889      		ldd r27,Y+16
 35396 f2de B058      		subi r27,0x80
 35397 f2e0 8D87      		std Y+13,r24
 35398 f2e2 9E87      		std Y+14,r25
 35399 f2e4 AF87      		std Y+15,r26
 35400 f2e6 B88B      		std Y+16,r27
3132:lp_solve_5.5/lp_presolve.c ****       if(!isfree) {
 35401               		.loc 2 3132 0
 35402 f2e8 8BAD      		ldd r24,Y+59
 35403 f2ea 8823      		tst r24
 35404 f2ec 01F4      		brne .L1497
3133:lp_solve_5.5/lp_presolve.c ****         varLo = -varLo;
 35405               		.loc 2 3133 0
 35406 f2ee 8DA5      		ldd r24,Y+45
 35407 f2f0 9EA5      		ldd r25,Y+46
 35408 f2f2 AFA5      		ldd r26,Y+47
 35409 f2f4 B8A9      		ldd r27,Y+48
 35410 f2f6 B058      		subi r27,0x80
 35411 f2f8 8DA7      		std Y+45,r24
 35412 f2fa 9EA7      		std Y+46,r25
 35413 f2fc AFA7      		std Y+47,r26
 35414 f2fe B8AB      		std Y+48,r27
3134:lp_solve_5.5/lp_presolve.c ****         varHi = -varHi;
 35415               		.loc 2 3134 0
 35416 f300 89A9      		ldd r24,Y+49
 35417 f302 9AA9      		ldd r25,Y+50
 35418 f304 ABA9      		ldd r26,Y+51
 35419 f306 BCA9      		ldd r27,Y+52
 35420 f308 B058      		subi r27,0x80
 35421 f30a 89AB      		std Y+49,r24
 35422 f30c 9AAB      		std Y+50,r25
 35423 f30e ABAB      		std Y+51,r26
 35424 f310 BCAB      		std Y+52,r27
3135:lp_solve_5.5/lp_presolve.c ****         swapREAL(&varHi, &varLo);
 35425               		.loc 2 3135 0
 35426 f312 9E01      		movw r18,r28
 35427 f314 235D      		subi r18,-45
 35428 f316 3F4F      		sbci r19,-1
 35429 f318 CE01      		movw r24,r28
 35430 f31a C196      		adiw r24,49
 35431 f31c B901      		movw r22,r18
 35432 f31e 0E94 0000 		call swapREAL
 35433               	.L1497:
3136:lp_solve_5.5/lp_presolve.c ****       }
3137:lp_solve_5.5/lp_presolve.c ****     }
3138:lp_solve_5.5/lp_presolve.c ****     matValue = RHS/pivot;
 35434               		.loc 2 3138 0
 35435 f322 2D89      		ldd r18,Y+21
 35436 f324 3E89      		ldd r19,Y+22
 35437 f326 4F89      		ldd r20,Y+23
 35438 f328 588D      		ldd r21,Y+24
 35439 f32a 6989      		ldd r22,Y+17
 35440 f32c 7A89      		ldd r23,Y+18
 35441 f32e 8B89      		ldd r24,Y+19
 35442 f330 9C89      		ldd r25,Y+20
 35443 f332 0E94 0000 		call __divsf3
 35444 f336 DC01      		movw r26,r24
 35445 f338 CB01      		movw r24,r22
 35446 f33a 8F8F      		std Y+31,r24
 35447 f33c 98A3      		std Y+32,r25
 35448 f33e A9A3      		std Y+33,r26
 35449 f340 BAA3      		std Y+34,r27
3139:lp_solve_5.5/lp_presolve.c **** 
3140:lp_solve_5.5/lp_presolve.c ****     /* Prepare for deleting free or implied free variable in inequality constraint.
3141:lp_solve_5.5/lp_presolve.c ****        Different strategies need to be used:
3142:lp_solve_5.5/lp_presolve.c **** 
3143:lp_solve_5.5/lp_presolve.c ****        ACTUAL:  Find the proper constraint bound and store undo information for
3144:lp_solve_5.5/lp_presolve.c ****                 recovering the value of the implied free variable.  The constraint
3145:lp_solve_5.5/lp_presolve.c ****                 is then deleted.  We have to adjust the objective function if the
3146:lp_solve_5.5/lp_presolve.c ****                 OF coefficient for the implied free variable is non-zero.
3147:lp_solve_5.5/lp_presolve.c ****        IMPLIED: Convert the constraint to an inequality at the proper bound.
3148:lp_solve_5.5/lp_presolve.c ****                 For given models, the new equality constraint can later provide
3149:lp_solve_5.5/lp_presolve.c ****                 an implied slack, which means that a further variable is eliminated,
3150:lp_solve_5.5/lp_presolve.c ****                 and the constraint again becomes an inequality constraint.
3151:lp_solve_5.5/lp_presolve.c **** 
3152:lp_solve_5.5/lp_presolve.c ****       Note that this version only implements the ACTUAL mode */
3153:lp_solve_5.5/lp_presolve.c ****     if(isfree) {
 35450               		.loc 2 3153 0
 35451 f342 8BAD      		ldd r24,Y+59
 35452 f344 8823      		tst r24
 35453 f346 01F4      		brne .+2
 35454 f348 00C0      		rjmp .L1498
3154:lp_solve_5.5/lp_presolve.c ****       /* Add undo information connecting the deleted variable to the RHS */
3155:lp_solve_5.5/lp_presolve.c ****       if(matValue != 0)
 35455               		.loc 2 3155 0
 35456 f34a 20E0      		ldi r18,0
 35457 f34c 30E0      		ldi r19,0
 35458 f34e A901      		movw r20,r18
 35459 f350 6F8D      		ldd r22,Y+31
 35460 f352 78A1      		ldd r23,Y+32
 35461 f354 89A1      		ldd r24,Y+33
 35462 f356 9AA1      		ldd r25,Y+34
 35463 f358 0E94 0000 		call __nesf2
 35464 f35c 8823      		tst r24
 35465 f35e 01F0      		breq .L1499
3156:lp_solve_5.5/lp_presolve.c ****         undoadded = addUndoPresolve(lp, TRUE, colnr, matValue, 0.0, 0);
 35466               		.loc 2 3156 0
 35467 f360 8F8D      		ldd r24,Y+31
 35468 f362 98A1      		ldd r25,Y+32
 35469 f364 A9A1      		ldd r26,Y+33
 35470 f366 BAA1      		ldd r27,Y+34
 35471 f368 49AD      		ldd r20,Y+57
 35472 f36a 5AAD      		ldd r21,Y+58
 35473 f36c E98D      		ldd r30,Y+25
 35474 f36e FA8D      		ldd r31,Y+26
 35475 f370 A12C      		mov r10,__zero_reg__
 35476 f372 B12C      		mov r11,__zero_reg__
 35477 f374 C12C      		mov r12,__zero_reg__
 35478 f376 D12C      		mov r13,__zero_reg__
 35479 f378 7601      		movw r14,r12
 35480 f37a 8C01      		movw r16,r24
 35481 f37c 9D01      		movw r18,r26
 35482 f37e 61E0      		ldi r22,lo8(1)
 35483 f380 CF01      		movw r24,r30
 35484 f382 0E94 0000 		call addUndoPresolve
 35485 f386 8A83      		std Y+2,r24
 35486               	.L1499:
3157:lp_solve_5.5/lp_presolve.c ****       /* Add undo information for the dual of the deleted constraint */
3158:lp_solve_5.5/lp_presolve.c ****       if(dual != 0)
 35487               		.loc 2 3158 0
 35488 f388 20E0      		ldi r18,0
 35489 f38a 30E0      		ldi r19,0
 35490 f38c A901      		movw r20,r18
 35491 f38e 6D85      		ldd r22,Y+13
 35492 f390 7E85      		ldd r23,Y+14
 35493 f392 8F85      		ldd r24,Y+15
 35494 f394 9889      		ldd r25,Y+16
 35495 f396 0E94 0000 		call __nesf2
 35496 f39a 8823      		tst r24
 35497 f39c 01F4      		brne .+2
 35498 f39e 00C0      		rjmp .L1470
3159:lp_solve_5.5/lp_presolve.c ****         addUndoPresolve(lp, FALSE, rownr, dual, 0.0, 0);
 35499               		.loc 2 3159 0
 35500 f3a0 8D85      		ldd r24,Y+13
 35501 f3a2 9E85      		ldd r25,Y+14
 35502 f3a4 AF85      		ldd r26,Y+15
 35503 f3a6 B889      		ldd r27,Y+16
 35504 f3a8 4FA9      		ldd r20,Y+55
 35505 f3aa 58AD      		ldd r21,Y+56
 35506 f3ac E98D      		ldd r30,Y+25
 35507 f3ae FA8D      		ldd r31,Y+26
 35508 f3b0 A12C      		mov r10,__zero_reg__
 35509 f3b2 B12C      		mov r11,__zero_reg__
 35510 f3b4 C12C      		mov r12,__zero_reg__
 35511 f3b6 D12C      		mov r13,__zero_reg__
 35512 f3b8 7601      		movw r14,r12
 35513 f3ba 8C01      		movw r16,r24
 35514 f3bc 9D01      		movw r18,r26
 35515 f3be 60E0      		ldi r22,0
 35516 f3c0 CF01      		movw r24,r30
 35517 f3c2 0E94 0000 		call addUndoPresolve
 35518 f3c6 00C0      		rjmp .L1470
 35519               	.L1498:
3160:lp_solve_5.5/lp_presolve.c ****     }
3161:lp_solve_5.5/lp_presolve.c **** 
3162:lp_solve_5.5/lp_presolve.c ****     /* Prepare for deleting implied slack variable.  The following two cases are
3163:lp_solve_5.5/lp_presolve.c ****       handled:
3164:lp_solve_5.5/lp_presolve.c **** 
3165:lp_solve_5.5/lp_presolve.c ****       1. Equality constraint: Convert the constraint to an inequality constraint
3166:lp_solve_5.5/lp_presolve.c ****                               that is possibly ranged
3167:lp_solve_5.5/lp_presolve.c ****       2. Other constraints:   Expand existing slack variable / constraint
3168:lp_solve_5.5/lp_presolve.c ****                               range, if required. */
3169:lp_solve_5.5/lp_presolve.c ****     else {
3170:lp_solve_5.5/lp_presolve.c ****       if(my_infinite(lp, varHi))
 35520               		.loc 2 3170 0
 35521 f3c8 89A9      		ldd r24,Y+49
 35522 f3ca 9AA9      		ldd r25,Y+50
 35523 f3cc ABA9      		ldd r26,Y+51
 35524 f3ce BCA9      		ldd r27,Y+52
 35525 f3d0 BF77      		andi r27,0x7f
 35526 f3d2 298D      		ldd r18,Y+25
 35527 f3d4 3A8D      		ldd r19,Y+26
 35528 f3d6 265F      		subi r18,-10
 35529 f3d8 3C4F      		sbci r19,-4
 35530 f3da F901      		movw r30,r18
 35531 f3dc 2081      		ld r18,Z
 35532 f3de 3181      		ldd r19,Z+1
 35533 f3e0 4281      		ldd r20,Z+2
 35534 f3e2 5381      		ldd r21,Z+3
 35535 f3e4 BC01      		movw r22,r24
 35536 f3e6 CD01      		movw r24,r26
 35537 f3e8 0E94 0000 		call __gesf2
 35538 f3ec 8823      		tst r24
 35539 f3ee 04F0      		brlt .L1564
3171:lp_solve_5.5/lp_presolve.c ****         varRange = lp->infinite;
 35540               		.loc 2 3171 0
 35541 f3f0 898D      		ldd r24,Y+25
 35542 f3f2 9A8D      		ldd r25,Y+26
 35543 f3f4 865F      		subi r24,-10
 35544 f3f6 9C4F      		sbci r25,-4
 35545 f3f8 FC01      		movw r30,r24
 35546 f3fa 8081      		ld r24,Z
 35547 f3fc 9181      		ldd r25,Z+1
 35548 f3fe A281      		ldd r26,Z+2
 35549 f400 B381      		ldd r27,Z+3
 35550 f402 8D83      		std Y+5,r24
 35551 f404 9E83      		std Y+6,r25
 35552 f406 AF83      		std Y+7,r26
 35553 f408 B887      		std Y+8,r27
 35554 f40a 00C0      		rjmp .L1505
 35555               	.L1564:
3172:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
3173:lp_solve_5.5/lp_presolve.c ****       else if(my_infinite(lp, varLo)) {
3174:lp_solve_5.5/lp_presolve.c ****         report(lp, SEVERE, "presolve_impliedcolfix: Negative infinite limit for variable %d\n", col
3175:lp_solve_5.5/lp_presolve.c ****         varRange = lp->infinite;
3176:lp_solve_5.5/lp_presolve.c ****       }
3177:lp_solve_5.5/lp_presolve.c **** #endif
3178:lp_solve_5.5/lp_presolve.c ****       else
3179:lp_solve_5.5/lp_presolve.c ****         varRange = my_precision(fabs(varHi - varLo) + lp->epsvalue, psdata->epsvalue);
 35556               		.loc 2 3179 0
 35557 f40c 8DA9      		ldd r24,Y+53
 35558 f40e 9EA9      		ldd r25,Y+54
 35559 f410 FC01      		movw r30,r24
 35560 f412 C488      		ldd r12,Z+20
 35561 f414 D588      		ldd r13,Z+21
 35562 f416 E688      		ldd r14,Z+22
 35563 f418 F788      		ldd r15,Z+23
 35564 f41a 89A9      		ldd r24,Y+49
 35565 f41c 9AA9      		ldd r25,Y+50
 35566 f41e ABA9      		ldd r26,Y+51
 35567 f420 BCA9      		ldd r27,Y+52
 35568 f422 2DA5      		ldd r18,Y+45
 35569 f424 3EA5      		ldd r19,Y+46
 35570 f426 4FA5      		ldd r20,Y+47
 35571 f428 58A9      		ldd r21,Y+48
 35572 f42a BC01      		movw r22,r24
 35573 f42c CD01      		movw r24,r26
 35574 f42e 0E94 0000 		call __subsf3
 35575 f432 DC01      		movw r26,r24
 35576 f434 CB01      		movw r24,r22
 35577 f436 BF77      		andi r27,0x7f
 35578 f438 298D      		ldd r18,Y+25
 35579 f43a 3A8D      		ldd r19,Y+26
 35580 f43c 2A5E      		subi r18,-22
 35581 f43e 3C4F      		sbci r19,-4
 35582 f440 F901      		movw r30,r18
 35583 f442 2081      		ld r18,Z
 35584 f444 3181      		ldd r19,Z+1
 35585 f446 4281      		ldd r20,Z+2
 35586 f448 5381      		ldd r21,Z+3
 35587 f44a BC01      		movw r22,r24
 35588 f44c CD01      		movw r24,r26
 35589 f44e 0E94 0000 		call __addsf3
 35590 f452 DC01      		movw r26,r24
 35591 f454 CB01      		movw r24,r22
 35592 f456 A701      		movw r20,r14
 35593 f458 9601      		movw r18,r12
 35594 f45a BC01      		movw r22,r24
 35595 f45c CD01      		movw r24,r26
 35596 f45e 0E94 0000 		call restoreINT
 35597 f462 DC01      		movw r26,r24
 35598 f464 CB01      		movw r24,r22
 35599 f466 8D83      		std Y+5,r24
 35600 f468 9E83      		std Y+6,r25
 35601 f46a AF83      		std Y+7,r26
 35602 f46c B887      		std Y+8,r27
 35603               	.L1505:
3180:lp_solve_5.5/lp_presolve.c ****       presolve_adjustrhs(psdata, rownr, varLo, psdata->epsvalue);
 35604               		.loc 2 3180 0
 35605 f46e 8DA9      		ldd r24,Y+53
 35606 f470 9EA9      		ldd r25,Y+54
 35607 f472 FC01      		movw r30,r24
 35608 f474 2489      		ldd r18,Z+20
 35609 f476 3589      		ldd r19,Z+21
 35610 f478 4689      		ldd r20,Z+22
 35611 f47a 5789      		ldd r21,Z+23
 35612 f47c 8DA5      		ldd r24,Y+45
 35613 f47e 9EA5      		ldd r25,Y+46
 35614 f480 AFA5      		ldd r26,Y+47
 35615 f482 B8A9      		ldd r27,Y+48
 35616 f484 6FA9      		ldd r22,Y+55
 35617 f486 78AD      		ldd r23,Y+56
 35618 f488 EDA9      		ldd r30,Y+53
 35619 f48a FEA9      		ldd r31,Y+54
 35620 f48c 7901      		movw r14,r18
 35621 f48e 8A01      		movw r16,r20
 35622 f490 9C01      		movw r18,r24
 35623 f492 AD01      		movw r20,r26
 35624 f494 CF01      		movw r24,r30
 35625 f496 0E94 0000 		call presolve_adjustrhs
3181:lp_solve_5.5/lp_presolve.c **** 
3182:lp_solve_5.5/lp_presolve.c ****       /* Handle case 1 of an equality constraint */
3183:lp_solve_5.5/lp_presolve.c ****       if(is_constr_type(lp, rownr, EQ)) {
 35626               		.loc 2 3183 0
 35627 f49a 2FA9      		ldd r18,Y+55
 35628 f49c 38AD      		ldd r19,Y+56
 35629 f49e 898D      		ldd r24,Y+25
 35630 f4a0 9A8D      		ldd r25,Y+26
 35631 f4a2 43E0      		ldi r20,lo8(3)
 35632 f4a4 50E0      		ldi r21,0
 35633 f4a6 B901      		movw r22,r18
 35634 f4a8 0E94 0000 		call is_constr_type
 35635 f4ac 8823      		tst r24
 35636 f4ae 01F4      		brne .+2
 35637 f4b0 00C0      		rjmp .L1506
3184:lp_solve_5.5/lp_presolve.c ****         /* Make sure we actually have a ranged constraint */
3185:lp_solve_5.5/lp_presolve.c ****         if(varRange > 0) {
 35638               		.loc 2 3185 0
 35639 f4b2 20E0      		ldi r18,0
 35640 f4b4 30E0      		ldi r19,0
 35641 f4b6 A901      		movw r20,r18
 35642 f4b8 6D81      		ldd r22,Y+5
 35643 f4ba 7E81      		ldd r23,Y+6
 35644 f4bc 8F81      		ldd r24,Y+7
 35645 f4be 9885      		ldd r25,Y+8
 35646 f4c0 0E94 0000 		call __gtsf2
 35647 f4c4 1816      		cp __zero_reg__,r24
 35648 f4c6 04F0      		brlt .+2
 35649 f4c8 00C0      		rjmp .L1511
3186:lp_solve_5.5/lp_presolve.c ****           set_constr_type(lp, rownr, LE);
 35650               		.loc 2 3186 0
 35651 f4ca 2FA9      		ldd r18,Y+55
 35652 f4cc 38AD      		ldd r19,Y+56
 35653 f4ce 898D      		ldd r24,Y+25
 35654 f4d0 9A8D      		ldd r25,Y+26
 35655 f4d2 41E0      		ldi r20,lo8(1)
 35656 f4d4 50E0      		ldi r21,0
 35657 f4d6 B901      		movw r22,r18
 35658 f4d8 0E94 0000 		call set_constr_type
3187:lp_solve_5.5/lp_presolve.c ****           if(!my_infinite(lp, varRange))
 35659               		.loc 2 3187 0
 35660 f4dc 8D81      		ldd r24,Y+5
 35661 f4de 9E81      		ldd r25,Y+6
 35662 f4e0 AF81      		ldd r26,Y+7
 35663 f4e2 B885      		ldd r27,Y+8
 35664 f4e4 BF77      		andi r27,0x7f
 35665 f4e6 298D      		ldd r18,Y+25
 35666 f4e8 3A8D      		ldd r19,Y+26
 35667 f4ea 265F      		subi r18,-10
 35668 f4ec 3C4F      		sbci r19,-4
 35669 f4ee F901      		movw r30,r18
 35670 f4f0 2081      		ld r18,Z
 35671 f4f2 3181      		ldd r19,Z+1
 35672 f4f4 4281      		ldd r20,Z+2
 35673 f4f6 5381      		ldd r21,Z+3
 35674 f4f8 11E0      		ldi r17,lo8(1)
 35675 f4fa BC01      		movw r22,r24
 35676 f4fc CD01      		movw r24,r26
 35677 f4fe 0E94 0000 		call __gesf2
 35678 f502 8823      		tst r24
 35679 f504 04F4      		brge .L1509
 35680 f506 10E0      		ldi r17,0
 35681               	.L1509:
 35682 f508 81E0      		ldi r24,lo8(1)
 35683 f50a 8127      		eor r24,r17
 35684 f50c 8823      		tst r24
 35685 f50e 01F0      		breq .L1510
3188:lp_solve_5.5/lp_presolve.c ****             lp->orig_upbo[rownr] = varRange;
 35686               		.loc 2 3188 0
 35687 f510 898D      		ldd r24,Y+25
 35688 f512 9A8D      		ldd r25,Y+26
 35689 f514 8255      		subi r24,82
 35690 f516 9D4F      		sbci r25,-3
 35691 f518 FC01      		movw r30,r24
 35692 f51a 2081      		ld r18,Z
 35693 f51c 3181      		ldd r19,Z+1
 35694 f51e 8FA9      		ldd r24,Y+55
 35695 f520 98AD      		ldd r25,Y+56
 35696 f522 880F      		lsl r24
 35697 f524 991F      		rol r25
 35698 f526 880F      		lsl r24
 35699 f528 991F      		rol r25
 35700 f52a 280F      		add r18,r24
 35701 f52c 391F      		adc r19,r25
 35702 f52e 8D81      		ldd r24,Y+5
 35703 f530 9E81      		ldd r25,Y+6
 35704 f532 AF81      		ldd r26,Y+7
 35705 f534 B885      		ldd r27,Y+8
 35706 f536 F901      		movw r30,r18
 35707 f538 8083      		st Z,r24
 35708 f53a 9183      		std Z+1,r25
 35709 f53c A283      		std Z+2,r26
 35710 f53e B383      		std Z+3,r27
 35711               	.L1510:
3189:lp_solve_5.5/lp_presolve.c ****           setLink(psdata->LTmap, rownr);
 35712               		.loc 2 3189 0
 35713 f540 8DA9      		ldd r24,Y+53
 35714 f542 9EA9      		ldd r25,Y+54
 35715 f544 FC01      		movw r30,r24
 35716 f546 8681      		ldd r24,Z+6
 35717 f548 9781      		ldd r25,Z+7
 35718 f54a 2FA9      		ldd r18,Y+55
 35719 f54c 38AD      		ldd r19,Y+56
 35720 f54e B901      		movw r22,r18
 35721 f550 0E94 0000 		call setLink
3190:lp_solve_5.5/lp_presolve.c ****           removeLink(psdata->EQmap, rownr);
 35722               		.loc 2 3190 0
 35723 f554 8DA9      		ldd r24,Y+53
 35724 f556 9EA9      		ldd r25,Y+54
 35725 f558 FC01      		movw r30,r24
 35726 f55a 8481      		ldd r24,Z+4
 35727 f55c 9581      		ldd r25,Z+5
 35728 f55e 2FA9      		ldd r18,Y+55
 35729 f560 38AD      		ldd r19,Y+56
 35730 f562 B901      		movw r22,r18
 35731 f564 0E94 0000 		call removeLink
 35732 f568 00C0      		rjmp .L1511
 35733               	.L1506:
3191:lp_solve_5.5/lp_presolve.c ****         }
3192:lp_solve_5.5/lp_presolve.c ****       }
3193:lp_solve_5.5/lp_presolve.c ****       /* Handle case 2 of an inequality constraint (UNDER CONSTRUCTION!)*/
3194:lp_solve_5.5/lp_presolve.c ****       else {
3195:lp_solve_5.5/lp_presolve.c ****         if(!my_infinite(lp, lp->orig_upbo[rownr])) {
 35734               		.loc 2 3195 0
 35735 f56a 898D      		ldd r24,Y+25
 35736 f56c 9A8D      		ldd r25,Y+26
 35737 f56e 8255      		subi r24,82
 35738 f570 9D4F      		sbci r25,-3
 35739 f572 FC01      		movw r30,r24
 35740 f574 2081      		ld r18,Z
 35741 f576 3181      		ldd r19,Z+1
 35742 f578 8FA9      		ldd r24,Y+55
 35743 f57a 98AD      		ldd r25,Y+56
 35744 f57c 880F      		lsl r24
 35745 f57e 991F      		rol r25
 35746 f580 880F      		lsl r24
 35747 f582 991F      		rol r25
 35748 f584 820F      		add r24,r18
 35749 f586 931F      		adc r25,r19
 35750 f588 FC01      		movw r30,r24
 35751 f58a 8081      		ld r24,Z
 35752 f58c 9181      		ldd r25,Z+1
 35753 f58e A281      		ldd r26,Z+2
 35754 f590 B381      		ldd r27,Z+3
 35755 f592 BF77      		andi r27,0x7f
 35756 f594 298D      		ldd r18,Y+25
 35757 f596 3A8D      		ldd r19,Y+26
 35758 f598 265F      		subi r18,-10
 35759 f59a 3C4F      		sbci r19,-4
 35760 f59c F901      		movw r30,r18
 35761 f59e 2081      		ld r18,Z
 35762 f5a0 3181      		ldd r19,Z+1
 35763 f5a2 4281      		ldd r20,Z+2
 35764 f5a4 5381      		ldd r21,Z+3
 35765 f5a6 11E0      		ldi r17,lo8(1)
 35766 f5a8 BC01      		movw r22,r24
 35767 f5aa CD01      		movw r24,r26
 35768 f5ac 0E94 0000 		call __gesf2
 35769 f5b0 8823      		tst r24
 35770 f5b2 04F4      		brge .L1512
 35771 f5b4 10E0      		ldi r17,0
 35772               	.L1512:
 35773 f5b6 81E0      		ldi r24,lo8(1)
 35774 f5b8 8127      		eor r24,r17
 35775 f5ba 8823      		tst r24
 35776 f5bc 01F4      		brne .+2
 35777 f5be 00C0      		rjmp .L1511
3196:lp_solve_5.5/lp_presolve.c ****           if(my_infinite(lp, varRange))
 35778               		.loc 2 3196 0
 35779 f5c0 8D81      		ldd r24,Y+5
 35780 f5c2 9E81      		ldd r25,Y+6
 35781 f5c4 AF81      		ldd r26,Y+7
 35782 f5c6 B885      		ldd r27,Y+8
 35783 f5c8 BF77      		andi r27,0x7f
 35784 f5ca 298D      		ldd r18,Y+25
 35785 f5cc 3A8D      		ldd r19,Y+26
 35786 f5ce 265F      		subi r18,-10
 35787 f5d0 3C4F      		sbci r19,-4
 35788 f5d2 F901      		movw r30,r18
 35789 f5d4 2081      		ld r18,Z
 35790 f5d6 3181      		ldd r19,Z+1
 35791 f5d8 4281      		ldd r20,Z+2
 35792 f5da 5381      		ldd r21,Z+3
 35793 f5dc BC01      		movw r22,r24
 35794 f5de CD01      		movw r24,r26
 35795 f5e0 0E94 0000 		call __gesf2
 35796 f5e4 8823      		tst r24
 35797 f5e6 04F0      		brlt .L1565
3197:lp_solve_5.5/lp_presolve.c ****             lp->orig_upbo[rownr] = lp->infinite;
 35798               		.loc 2 3197 0
 35799 f5e8 898D      		ldd r24,Y+25
 35800 f5ea 9A8D      		ldd r25,Y+26
 35801 f5ec 8255      		subi r24,82
 35802 f5ee 9D4F      		sbci r25,-3
 35803 f5f0 FC01      		movw r30,r24
 35804 f5f2 2081      		ld r18,Z
 35805 f5f4 3181      		ldd r19,Z+1
 35806 f5f6 8FA9      		ldd r24,Y+55
 35807 f5f8 98AD      		ldd r25,Y+56
 35808 f5fa 880F      		lsl r24
 35809 f5fc 991F      		rol r25
 35810 f5fe 880F      		lsl r24
 35811 f600 991F      		rol r25
 35812 f602 280F      		add r18,r24
 35813 f604 391F      		adc r19,r25
 35814 f606 898D      		ldd r24,Y+25
 35815 f608 9A8D      		ldd r25,Y+26
 35816 f60a 865F      		subi r24,-10
 35817 f60c 9C4F      		sbci r25,-4
 35818 f60e FC01      		movw r30,r24
 35819 f610 8081      		ld r24,Z
 35820 f612 9181      		ldd r25,Z+1
 35821 f614 A281      		ldd r26,Z+2
 35822 f616 B381      		ldd r27,Z+3
 35823 f618 F901      		movw r30,r18
 35824 f61a 8083      		st Z,r24
 35825 f61c 9183      		std Z+1,r25
 35826 f61e A283      		std Z+2,r26
 35827 f620 B383      		std Z+3,r27
 35828 f622 00C0      		rjmp .L1511
 35829               	.L1565:
3198:lp_solve_5.5/lp_presolve.c ****           else
3199:lp_solve_5.5/lp_presolve.c ****             lp->orig_upbo[rownr] += varHi - varLo;
 35830               		.loc 2 3199 0
 35831 f624 898D      		ldd r24,Y+25
 35832 f626 9A8D      		ldd r25,Y+26
 35833 f628 8255      		subi r24,82
 35834 f62a 9D4F      		sbci r25,-3
 35835 f62c FC01      		movw r30,r24
 35836 f62e 2081      		ld r18,Z
 35837 f630 3181      		ldd r19,Z+1
 35838 f632 8FA9      		ldd r24,Y+55
 35839 f634 98AD      		ldd r25,Y+56
 35840 f636 880F      		lsl r24
 35841 f638 991F      		rol r25
 35842 f63a 880F      		lsl r24
 35843 f63c 991F      		rol r25
 35844 f63e 8901      		movw r16,r18
 35845 f640 080F      		add r16,r24
 35846 f642 191F      		adc r17,r25
 35847 f644 898D      		ldd r24,Y+25
 35848 f646 9A8D      		ldd r25,Y+26
 35849 f648 8255      		subi r24,82
 35850 f64a 9D4F      		sbci r25,-3
 35851 f64c FC01      		movw r30,r24
 35852 f64e 2081      		ld r18,Z
 35853 f650 3181      		ldd r19,Z+1
 35854 f652 8FA9      		ldd r24,Y+55
 35855 f654 98AD      		ldd r25,Y+56
 35856 f656 880F      		lsl r24
 35857 f658 991F      		rol r25
 35858 f65a 880F      		lsl r24
 35859 f65c 991F      		rol r25
 35860 f65e 820F      		add r24,r18
 35861 f660 931F      		adc r25,r19
 35862 f662 FC01      		movw r30,r24
 35863 f664 C080      		ld r12,Z
 35864 f666 D180      		ldd r13,Z+1
 35865 f668 E280      		ldd r14,Z+2
 35866 f66a F380      		ldd r15,Z+3
 35867 f66c 89A9      		ldd r24,Y+49
 35868 f66e 9AA9      		ldd r25,Y+50
 35869 f670 ABA9      		ldd r26,Y+51
 35870 f672 BCA9      		ldd r27,Y+52
 35871 f674 2DA5      		ldd r18,Y+45
 35872 f676 3EA5      		ldd r19,Y+46
 35873 f678 4FA5      		ldd r20,Y+47
 35874 f67a 58A9      		ldd r21,Y+48
 35875 f67c BC01      		movw r22,r24
 35876 f67e CD01      		movw r24,r26
 35877 f680 0E94 0000 		call __subsf3
 35878 f684 DC01      		movw r26,r24
 35879 f686 CB01      		movw r24,r22
 35880 f688 9C01      		movw r18,r24
 35881 f68a AD01      		movw r20,r26
 35882 f68c C701      		movw r24,r14
 35883 f68e B601      		movw r22,r12
 35884 f690 0E94 0000 		call __addsf3
 35885 f694 DC01      		movw r26,r24
 35886 f696 CB01      		movw r24,r22
 35887 f698 F801      		movw r30,r16
 35888 f69a 8083      		st Z,r24
 35889 f69c 9183      		std Z+1,r25
 35890 f69e A283      		std Z+2,r26
 35891 f6a0 B383      		std Z+3,r27
 35892               	.L1511:
3200:lp_solve_5.5/lp_presolve.c ****         }
3201:lp_solve_5.5/lp_presolve.c ****       }
3202:lp_solve_5.5/lp_presolve.c ****       /* Update counts */
3203:lp_solve_5.5/lp_presolve.c ****       if(matAij > 0)
 35893               		.loc 2 3203 0
 35894 f6a2 20E0      		ldi r18,0
 35895 f6a4 30E0      		ldi r19,0
 35896 f6a6 A901      		movw r20,r18
 35897 f6a8 6BA1      		ldd r22,Y+35
 35898 f6aa 7CA1      		ldd r23,Y+36
 35899 f6ac 8DA1      		ldd r24,Y+37
 35900 f6ae 9EA1      		ldd r25,Y+38
 35901 f6b0 0E94 0000 		call __gtsf2
 35902 f6b4 1816      		cp __zero_reg__,r24
 35903 f6b6 04F4      		brge .L1566
3204:lp_solve_5.5/lp_presolve.c ****         psdata->rows->plucount[rownr]--;
 35904               		.loc 2 3204 0
 35905 f6b8 8DA9      		ldd r24,Y+53
 35906 f6ba 9EA9      		ldd r25,Y+54
 35907 f6bc FC01      		movw r30,r24
 35908 f6be 8081      		ld r24,Z
 35909 f6c0 9181      		ldd r25,Z+1
 35910 f6c2 FC01      		movw r30,r24
 35911 f6c4 2681      		ldd r18,Z+6
 35912 f6c6 3781      		ldd r19,Z+7
 35913 f6c8 8FA9      		ldd r24,Y+55
 35914 f6ca 98AD      		ldd r25,Y+56
 35915 f6cc 880F      		lsl r24
 35916 f6ce 991F      		rol r25
 35917 f6d0 820F      		add r24,r18
 35918 f6d2 931F      		adc r25,r19
 35919 f6d4 FC01      		movw r30,r24
 35920 f6d6 2081      		ld r18,Z
 35921 f6d8 3181      		ldd r19,Z+1
 35922 f6da 2150      		subi r18,1
 35923 f6dc 3109      		sbc r19,__zero_reg__
 35924 f6de FC01      		movw r30,r24
 35925 f6e0 3183      		std Z+1,r19
 35926 f6e2 2083      		st Z,r18
 35927 f6e4 00C0      		rjmp .L1517
 35928               	.L1566:
3205:lp_solve_5.5/lp_presolve.c ****       else
3206:lp_solve_5.5/lp_presolve.c ****         psdata->rows->negcount[rownr]--;
 35929               		.loc 2 3206 0
 35930 f6e6 8DA9      		ldd r24,Y+53
 35931 f6e8 9EA9      		ldd r25,Y+54
 35932 f6ea FC01      		movw r30,r24
 35933 f6ec 8081      		ld r24,Z
 35934 f6ee 9181      		ldd r25,Z+1
 35935 f6f0 FC01      		movw r30,r24
 35936 f6f2 2085      		ldd r18,Z+8
 35937 f6f4 3185      		ldd r19,Z+9
 35938 f6f6 8FA9      		ldd r24,Y+55
 35939 f6f8 98AD      		ldd r25,Y+56
 35940 f6fa 880F      		lsl r24
 35941 f6fc 991F      		rol r25
 35942 f6fe 820F      		add r24,r18
 35943 f700 931F      		adc r25,r19
 35944 f702 FC01      		movw r30,r24
 35945 f704 2081      		ld r18,Z
 35946 f706 3181      		ldd r19,Z+1
 35947 f708 2150      		subi r18,1
 35948 f70a 3109      		sbc r19,__zero_reg__
 35949 f70c FC01      		movw r30,r24
 35950 f70e 3183      		std Z+1,r19
 35951 f710 2083      		st Z,r18
 35952               	.L1517:
3207:lp_solve_5.5/lp_presolve.c ****       if(my_sign(varLo) != my_sign(varHi))
 35953               		.loc 2 3207 0
 35954 f712 8DA5      		ldd r24,Y+45
 35955 f714 9EA5      		ldd r25,Y+46
 35956 f716 AFA5      		ldd r26,Y+47
 35957 f718 B8A9      		ldd r27,Y+48
 35958 f71a 20E0      		ldi r18,0
 35959 f71c 30E0      		ldi r19,0
 35960 f71e A901      		movw r20,r18
 35961 f720 BC01      		movw r22,r24
 35962 f722 CD01      		movw r24,r26
 35963 f724 0E94 0000 		call __ltsf2
 35964 f728 8823      		tst r24
 35965 f72a 04F4      		brge .L1567
 35966               		.loc 2 3207 0 is_stmt 0 discriminator 1
 35967 f72c 0FEF      		ldi r16,lo8(-1)
 35968 f72e 1FEF      		ldi r17,lo8(-1)
 35969 f730 00C0      		rjmp .L1520
 35970               	.L1567:
 35971               		.loc 2 3207 0 discriminator 2
 35972 f732 01E0      		ldi r16,lo8(1)
 35973 f734 10E0      		ldi r17,0
 35974               	.L1520:
 35975               		.loc 2 3207 0 discriminator 4
 35976 f736 89A9      		ldd r24,Y+49
 35977 f738 9AA9      		ldd r25,Y+50
 35978 f73a ABA9      		ldd r26,Y+51
 35979 f73c BCA9      		ldd r27,Y+52
 35980 f73e 20E0      		ldi r18,0
 35981 f740 30E0      		ldi r19,0
 35982 f742 A901      		movw r20,r18
 35983 f744 BC01      		movw r22,r24
 35984 f746 CD01      		movw r24,r26
 35985 f748 0E94 0000 		call __ltsf2
 35986 f74c 8823      		tst r24
 35987 f74e 04F4      		brge .L1568
 35988               		.loc 2 3207 0 discriminator 5
 35989 f750 8FEF      		ldi r24,lo8(-1)
 35990 f752 9FEF      		ldi r25,lo8(-1)
 35991 f754 00C0      		rjmp .L1523
 35992               	.L1568:
 35993               		.loc 2 3207 0 discriminator 6
 35994 f756 81E0      		ldi r24,lo8(1)
 35995 f758 90E0      		ldi r25,0
 35996               	.L1523:
 35997               		.loc 2 3207 0 discriminator 8
 35998 f75a 0817      		cp r16,r24
 35999 f75c 1907      		cpc r17,r25
 36000 f75e 01F0      		breq .L1524
3208:lp_solve_5.5/lp_presolve.c ****         psdata->rows->pluneg[rownr]--;
 36001               		.loc 2 3208 0 is_stmt 1
 36002 f760 8DA9      		ldd r24,Y+53
 36003 f762 9EA9      		ldd r25,Y+54
 36004 f764 FC01      		movw r30,r24
 36005 f766 8081      		ld r24,Z
 36006 f768 9181      		ldd r25,Z+1
 36007 f76a FC01      		movw r30,r24
 36008 f76c 2285      		ldd r18,Z+10
 36009 f76e 3385      		ldd r19,Z+11
 36010 f770 8FA9      		ldd r24,Y+55
 36011 f772 98AD      		ldd r25,Y+56
 36012 f774 880F      		lsl r24
 36013 f776 991F      		rol r25
 36014 f778 820F      		add r24,r18
 36015 f77a 931F      		adc r25,r19
 36016 f77c FC01      		movw r30,r24
 36017 f77e 2081      		ld r18,Z
 36018 f780 3181      		ldd r19,Z+1
 36019 f782 2150      		subi r18,1
 36020 f784 3109      		sbc r19,__zero_reg__
 36021 f786 FC01      		movw r30,r24
 36022 f788 3183      		std Z+1,r19
 36023 f78a 2083      		st Z,r18
 36024               	.L1524:
3209:lp_solve_5.5/lp_presolve.c **** 
3210:lp_solve_5.5/lp_presolve.c ****       /* Add undo information for the deleted variable; note that we cannot link the
3211:lp_solve_5.5/lp_presolve.c ****         deleted variable to the slack, since it may not be available during undo.
3212:lp_solve_5.5/lp_presolve.c ****         We really should have a mini LP to compute this allocation ex-post. */
3213:lp_solve_5.5/lp_presolve.c ****       if(RHS != 0)
 36025               		.loc 2 3213 0
 36026 f78c 20E0      		ldi r18,0
 36027 f78e 30E0      		ldi r19,0
 36028 f790 A901      		movw r20,r18
 36029 f792 6989      		ldd r22,Y+17
 36030 f794 7A89      		ldd r23,Y+18
 36031 f796 8B89      		ldd r24,Y+19
 36032 f798 9C89      		ldd r25,Y+20
 36033 f79a 0E94 0000 		call __nesf2
 36034 f79e 8823      		tst r24
 36035 f7a0 01F0      		breq .L1470
3214:lp_solve_5.5/lp_presolve.c ****         undoadded = addUndoPresolve(lp, TRUE, colnr, RHS/pivot, 0.0, 0);
 36036               		.loc 2 3214 0
 36037 f7a2 2D89      		ldd r18,Y+21
 36038 f7a4 3E89      		ldd r19,Y+22
 36039 f7a6 4F89      		ldd r20,Y+23
 36040 f7a8 588D      		ldd r21,Y+24
 36041 f7aa 6989      		ldd r22,Y+17
 36042 f7ac 7A89      		ldd r23,Y+18
 36043 f7ae 8B89      		ldd r24,Y+19
 36044 f7b0 9C89      		ldd r25,Y+20
 36045 f7b2 0E94 0000 		call __divsf3
 36046 f7b6 DC01      		movw r26,r24
 36047 f7b8 CB01      		movw r24,r22
 36048 f7ba 8C01      		movw r16,r24
 36049 f7bc 9D01      		movw r18,r26
 36050 f7be 49AD      		ldd r20,Y+57
 36051 f7c0 5AAD      		ldd r21,Y+58
 36052 f7c2 898D      		ldd r24,Y+25
 36053 f7c4 9A8D      		ldd r25,Y+26
 36054 f7c6 A12C      		mov r10,__zero_reg__
 36055 f7c8 B12C      		mov r11,__zero_reg__
 36056 f7ca C12C      		mov r12,__zero_reg__
 36057 f7cc D12C      		mov r13,__zero_reg__
 36058 f7ce 7601      		movw r14,r12
 36059 f7d0 61E0      		ldi r22,lo8(1)
 36060 f7d2 0E94 0000 		call addUndoPresolve
 36061 f7d6 8A83      		std Y+2,r24
 36062               	.L1470:
3215:lp_solve_5.5/lp_presolve.c ****     }
3216:lp_solve_5.5/lp_presolve.c ****   }
3217:lp_solve_5.5/lp_presolve.c **** 
3218:lp_solve_5.5/lp_presolve.c ****   /* Update the OF constant */
3219:lp_solve_5.5/lp_presolve.c ****   if(dual != 0) {
 36063               		.loc 2 3219 0
 36064 f7d8 20E0      		ldi r18,0
 36065 f7da 30E0      		ldi r19,0
 36066 f7dc A901      		movw r20,r18
 36067 f7de 6D85      		ldd r22,Y+13
 36068 f7e0 7E85      		ldd r23,Y+14
 36069 f7e2 8F85      		ldd r24,Y+15
 36070 f7e4 9889      		ldd r25,Y+16
 36071 f7e6 0E94 0000 		call __nesf2
 36072 f7ea 8823      		tst r24
 36073 f7ec 01F0      		breq .L1526
3220:lp_solve_5.5/lp_presolve.c ****     presolve_adjustrhs(psdata, 0, dual * RHS, 0);
 36074               		.loc 2 3220 0
 36075 f7ee 2989      		ldd r18,Y+17
 36076 f7f0 3A89      		ldd r19,Y+18
 36077 f7f2 4B89      		ldd r20,Y+19
 36078 f7f4 5C89      		ldd r21,Y+20
 36079 f7f6 6D85      		ldd r22,Y+13
 36080 f7f8 7E85      		ldd r23,Y+14
 36081 f7fa 8F85      		ldd r24,Y+15
 36082 f7fc 9889      		ldd r25,Y+16
 36083 f7fe 0E94 0000 		call __mulsf3
 36084 f802 DC01      		movw r26,r24
 36085 f804 CB01      		movw r24,r22
 36086 f806 9C01      		movw r18,r24
 36087 f808 AD01      		movw r20,r26
 36088 f80a 8DA9      		ldd r24,Y+53
 36089 f80c 9EA9      		ldd r25,Y+54
 36090 f80e E12C      		mov r14,__zero_reg__
 36091 f810 F12C      		mov r15,__zero_reg__
 36092 f812 8701      		movw r16,r14
 36093 f814 60E0      		ldi r22,0
 36094 f816 70E0      		ldi r23,0
 36095 f818 0E94 0000 		call presolve_adjustrhs
3221:lp_solve_5.5/lp_presolve.c **** /*    lp->orig_rhs[0] -= dual * RHS; */
3222:lp_solve_5.5/lp_presolve.c ****     vecOF[colnr] = 0;
 36096               		.loc 2 3222 0
 36097 f81c 89AD      		ldd r24,Y+57
 36098 f81e 9AAD      		ldd r25,Y+58
 36099 f820 880F      		lsl r24
 36100 f822 991F      		rol r25
 36101 f824 880F      		lsl r24
 36102 f826 991F      		rol r25
 36103 f828 2FA1      		ldd r18,Y+39
 36104 f82a 38A5      		ldd r19,Y+40
 36105 f82c 820F      		add r24,r18
 36106 f82e 931F      		adc r25,r19
 36107 f830 FC01      		movw r30,r24
 36108 f832 1082      		st Z,__zero_reg__
 36109 f834 1182      		std Z+1,__zero_reg__
 36110 f836 1282      		std Z+2,__zero_reg__
 36111 f838 1382      		std Z+3,__zero_reg__
 36112               	.L1526:
3223:lp_solve_5.5/lp_presolve.c ****   }
3224:lp_solve_5.5/lp_presolve.c **** 
3225:lp_solve_5.5/lp_presolve.c ****   /* Do affine transformation with the constraint row */
3226:lp_solve_5.5/lp_presolve.c ****   i = 0;
 36113               		.loc 2 3226 0
 36114 f83a 1CA6      		std Y+44,__zero_reg__
 36115 f83c 1BA6      		std Y+43,__zero_reg__
3227:lp_solve_5.5/lp_presolve.c ****   for(ib = presolve_nextcol(psdata, rownr, &i); ib >= 0;
 36116               		.loc 2 3227 0
 36117 f83e AE01      		movw r20,r28
 36118 f840 455D      		subi r20,-43
 36119 f842 5F4F      		sbci r21,-1
 36120 f844 2FA9      		ldd r18,Y+55
 36121 f846 38AD      		ldd r19,Y+56
 36122 f848 8DA9      		ldd r24,Y+53
 36123 f84a 9EA9      		ldd r25,Y+54
 36124 f84c B901      		movw r22,r18
 36125 f84e 0E94 0000 		call presolve_nextcol
 36126 f852 9C83      		std Y+4,r25
 36127 f854 8B83      		std Y+3,r24
 36128 f856 00C0      		rjmp .L1528
 36129               	.L1534:
3228:lp_solve_5.5/lp_presolve.c ****       ib = presolve_nextcol(psdata, rownr, &i)) {
3229:lp_solve_5.5/lp_presolve.c **** 
3230:lp_solve_5.5/lp_presolve.c ****     /* Get the constraint element */
3231:lp_solve_5.5/lp_presolve.c ****     jx = ROW_MAT_COLNR(ib);
 36130               		.loc 2 3231 0
 36131 f858 8B8D      		ldd r24,Y+27
 36132 f85a 9C8D      		ldd r25,Y+28
 36133 f85c FC01      		movw r30,r24
 36134 f85e 2485      		ldd r18,Z+12
 36135 f860 3585      		ldd r19,Z+13
 36136 f862 8B8D      		ldd r24,Y+27
 36137 f864 9C8D      		ldd r25,Y+28
 36138 f866 FC01      		movw r30,r24
 36139 f868 4689      		ldd r20,Z+22
 36140 f86a 5789      		ldd r21,Z+23
 36141 f86c 8B81      		ldd r24,Y+3
 36142 f86e 9C81      		ldd r25,Y+4
 36143 f870 880F      		lsl r24
 36144 f872 991F      		rol r25
 36145 f874 840F      		add r24,r20
 36146 f876 951F      		adc r25,r21
 36147 f878 FC01      		movw r30,r24
 36148 f87a 8081      		ld r24,Z
 36149 f87c 9181      		ldd r25,Z+1
 36150 f87e 880F      		lsl r24
 36151 f880 991F      		rol r25
 36152 f882 820F      		add r24,r18
 36153 f884 931F      		adc r25,r19
 36154 f886 FC01      		movw r30,r24
 36155 f888 8081      		ld r24,Z
 36156 f88a 9181      		ldd r25,Z+1
 36157 f88c 9AA7      		std Y+42,r25
 36158 f88e 89A7      		std Y+41,r24
3232:lp_solve_5.5/lp_presolve.c ****     if(jx == colnr)
 36159               		.loc 2 3232 0
 36160 f890 29A5      		ldd r18,Y+41
 36161 f892 3AA5      		ldd r19,Y+42
 36162 f894 89AD      		ldd r24,Y+57
 36163 f896 9AAD      		ldd r25,Y+58
 36164 f898 2817      		cp r18,r24
 36165 f89a 3907      		cpc r19,r25
 36166 f89c 01F4      		brne .+2
 36167 f89e 00C0      		rjmp .L1570
3233:lp_solve_5.5/lp_presolve.c ****       continue;
3234:lp_solve_5.5/lp_presolve.c ****     matValue = ROW_MAT_VALUE(ib);
 36168               		.loc 2 3234 0
 36169 f8a0 8B8D      		ldd r24,Y+27
 36170 f8a2 9C8D      		ldd r25,Y+28
 36171 f8a4 FC01      		movw r30,r24
 36172 f8a6 2089      		ldd r18,Z+16
 36173 f8a8 3189      		ldd r19,Z+17
 36174 f8aa 8B8D      		ldd r24,Y+27
 36175 f8ac 9C8D      		ldd r25,Y+28
 36176 f8ae FC01      		movw r30,r24
 36177 f8b0 4689      		ldd r20,Z+22
 36178 f8b2 5789      		ldd r21,Z+23
 36179 f8b4 8B81      		ldd r24,Y+3
 36180 f8b6 9C81      		ldd r25,Y+4
 36181 f8b8 880F      		lsl r24
 36182 f8ba 991F      		rol r25
 36183 f8bc 840F      		add r24,r20
 36184 f8be 951F      		adc r25,r21
 36185 f8c0 FC01      		movw r30,r24
 36186 f8c2 8081      		ld r24,Z
 36187 f8c4 9181      		ldd r25,Z+1
 36188 f8c6 880F      		lsl r24
 36189 f8c8 991F      		rol r25
 36190 f8ca 880F      		lsl r24
 36191 f8cc 991F      		rol r25
 36192 f8ce 820F      		add r24,r18
 36193 f8d0 931F      		adc r25,r19
 36194 f8d2 FC01      		movw r30,r24
 36195 f8d4 8081      		ld r24,Z
 36196 f8d6 9181      		ldd r25,Z+1
 36197 f8d8 A281      		ldd r26,Z+2
 36198 f8da B381      		ldd r27,Z+3
 36199 f8dc 8F8F      		std Y+31,r24
 36200 f8de 98A3      		std Y+32,r25
 36201 f8e0 A9A3      		std Y+33,r26
 36202 f8e2 BAA3      		std Y+34,r27
3235:lp_solve_5.5/lp_presolve.c **** 
3236:lp_solve_5.5/lp_presolve.c ****     /* Adjust OF for the variable to be deleted */
3237:lp_solve_5.5/lp_presolve.c ****     if(dual != 0)
 36203               		.loc 2 3237 0
 36204 f8e4 20E0      		ldi r18,0
 36205 f8e6 30E0      		ldi r19,0
 36206 f8e8 A901      		movw r20,r18
 36207 f8ea 6D85      		ldd r22,Y+13
 36208 f8ec 7E85      		ldd r23,Y+14
 36209 f8ee 8F85      		ldd r24,Y+15
 36210 f8f0 9889      		ldd r25,Y+16
 36211 f8f2 0E94 0000 		call __nesf2
 36212 f8f6 8823      		tst r24
 36213 f8f8 01F0      		breq .L1531
3238:lp_solve_5.5/lp_presolve.c ****       vecOF[jx] -= dual * matValue;
 36214               		.loc 2 3238 0
 36215 f8fa 89A5      		ldd r24,Y+41
 36216 f8fc 9AA5      		ldd r25,Y+42
 36217 f8fe 880F      		lsl r24
 36218 f900 991F      		rol r25
 36219 f902 880F      		lsl r24
 36220 f904 991F      		rol r25
 36221 f906 2FA1      		ldd r18,Y+39
 36222 f908 38A5      		ldd r19,Y+40
 36223 f90a 8901      		movw r16,r18
 36224 f90c 080F      		add r16,r24
 36225 f90e 191F      		adc r17,r25
 36226 f910 89A5      		ldd r24,Y+41
 36227 f912 9AA5      		ldd r25,Y+42
 36228 f914 880F      		lsl r24
 36229 f916 991F      		rol r25
 36230 f918 880F      		lsl r24
 36231 f91a 991F      		rol r25
 36232 f91c 2FA1      		ldd r18,Y+39
 36233 f91e 38A5      		ldd r19,Y+40
 36234 f920 820F      		add r24,r18
 36235 f922 931F      		adc r25,r19
 36236 f924 FC01      		movw r30,r24
 36237 f926 C080      		ld r12,Z
 36238 f928 D180      		ldd r13,Z+1
 36239 f92a E280      		ldd r14,Z+2
 36240 f92c F380      		ldd r15,Z+3
 36241 f92e 2F8D      		ldd r18,Y+31
 36242 f930 38A1      		ldd r19,Y+32
 36243 f932 49A1      		ldd r20,Y+33
 36244 f934 5AA1      		ldd r21,Y+34
 36245 f936 6D85      		ldd r22,Y+13
 36246 f938 7E85      		ldd r23,Y+14
 36247 f93a 8F85      		ldd r24,Y+15
 36248 f93c 9889      		ldd r25,Y+16
 36249 f93e 0E94 0000 		call __mulsf3
 36250 f942 DC01      		movw r26,r24
 36251 f944 CB01      		movw r24,r22
 36252 f946 9C01      		movw r18,r24
 36253 f948 AD01      		movw r20,r26
 36254 f94a C701      		movw r24,r14
 36255 f94c B601      		movw r22,r12
 36256 f94e 0E94 0000 		call __subsf3
 36257 f952 DC01      		movw r26,r24
 36258 f954 CB01      		movw r24,r22
 36259 f956 F801      		movw r30,r16
 36260 f958 8083      		st Z,r24
 36261 f95a 9183      		std Z+1,r25
 36262 f95c A283      		std Z+2,r26
 36263 f95e B383      		std Z+3,r27
 36264               	.L1531:
3239:lp_solve_5.5/lp_presolve.c **** 
3240:lp_solve_5.5/lp_presolve.c ****     /* Add reconstruction/undo parameters for the deleted variable */
3241:lp_solve_5.5/lp_presolve.c ****     if(!undoadded)
 36265               		.loc 2 3241 0
 36266 f960 8A81      		ldd r24,Y+2
 36267 f962 8823      		tst r24
 36268 f964 01F4      		brne .L1533
3242:lp_solve_5.5/lp_presolve.c ****       undoadded = addUndoPresolve(lp, TRUE, colnr, 0.0, matValue/pivot, jx);
 36269               		.loc 2 3242 0
 36270 f966 2D89      		ldd r18,Y+21
 36271 f968 3E89      		ldd r19,Y+22
 36272 f96a 4F89      		ldd r20,Y+23
 36273 f96c 588D      		ldd r21,Y+24
 36274 f96e 6F8D      		ldd r22,Y+31
 36275 f970 78A1      		ldd r23,Y+32
 36276 f972 89A1      		ldd r24,Y+33
 36277 f974 9AA1      		ldd r25,Y+34
 36278 f976 0E94 0000 		call __divsf3
 36279 f97a DC01      		movw r26,r24
 36280 f97c CB01      		movw r24,r22
 36281 f97e 7C01      		movw r14,r24
 36282 f980 8D01      		movw r16,r26
 36283 f982 29A5      		ldd r18,Y+41
 36284 f984 3AA5      		ldd r19,Y+42
 36285 f986 49AD      		ldd r20,Y+57
 36286 f988 5AAD      		ldd r21,Y+58
 36287 f98a 898D      		ldd r24,Y+25
 36288 f98c 9A8D      		ldd r25,Y+26
 36289 f98e 5901      		movw r10,r18
 36290 f990 6701      		movw r12,r14
 36291 f992 7801      		movw r14,r16
 36292 f994 00E0      		ldi r16,0
 36293 f996 10E0      		ldi r17,0
 36294 f998 9801      		movw r18,r16
 36295 f99a 61E0      		ldi r22,lo8(1)
 36296 f99c 0E94 0000 		call addUndoPresolve
 36297 f9a0 8A83      		std Y+2,r24
 36298 f9a2 00C0      		rjmp .L1530
 36299               	.L1533:
3243:lp_solve_5.5/lp_presolve.c ****     else
3244:lp_solve_5.5/lp_presolve.c ****       appendUndoPresolve(lp, TRUE, matValue/pivot, jx);
 36300               		.loc 2 3244 0
 36301 f9a4 2D89      		ldd r18,Y+21
 36302 f9a6 3E89      		ldd r19,Y+22
 36303 f9a8 4F89      		ldd r20,Y+23
 36304 f9aa 588D      		ldd r21,Y+24
 36305 f9ac 6F8D      		ldd r22,Y+31
 36306 f9ae 78A1      		ldd r23,Y+32
 36307 f9b0 89A1      		ldd r24,Y+33
 36308 f9b2 9AA1      		ldd r25,Y+34
 36309 f9b4 0E94 0000 		call __divsf3
 36310 f9b8 DC01      		movw r26,r24
 36311 f9ba CB01      		movw r24,r22
 36312 f9bc AC01      		movw r20,r24
 36313 f9be BD01      		movw r22,r26
 36314 f9c0 29A5      		ldd r18,Y+41
 36315 f9c2 3AA5      		ldd r19,Y+42
 36316 f9c4 898D      		ldd r24,Y+25
 36317 f9c6 9A8D      		ldd r25,Y+26
 36318 f9c8 8901      		movw r16,r18
 36319 f9ca 9A01      		movw r18,r20
 36320 f9cc AB01      		movw r20,r22
 36321 f9ce 61E0      		ldi r22,lo8(1)
 36322 f9d0 0E94 0000 		call appendUndoPresolve
 36323 f9d4 00C0      		rjmp .L1530
 36324               	.L1570:
3233:lp_solve_5.5/lp_presolve.c ****     matValue = ROW_MAT_VALUE(ib);
 36325               		.loc 2 3233 0
 36326 f9d6 0000      		nop
 36327               	.L1530:
3228:lp_solve_5.5/lp_presolve.c **** 
 36328               		.loc 2 3228 0
 36329 f9d8 AE01      		movw r20,r28
 36330 f9da 455D      		subi r20,-43
 36331 f9dc 5F4F      		sbci r21,-1
 36332 f9de 2FA9      		ldd r18,Y+55
 36333 f9e0 38AD      		ldd r19,Y+56
 36334 f9e2 8DA9      		ldd r24,Y+53
 36335 f9e4 9EA9      		ldd r25,Y+54
 36336 f9e6 B901      		movw r22,r18
 36337 f9e8 0E94 0000 		call presolve_nextcol
 36338 f9ec 9C83      		std Y+4,r25
 36339 f9ee 8B83      		std Y+3,r24
 36340               	.L1528:
3227:lp_solve_5.5/lp_presolve.c ****       ib = presolve_nextcol(psdata, rownr, &i)) {
 36341               		.loc 2 3227 0 discriminator 1
 36342 f9f0 8B81      		ldd r24,Y+3
 36343 f9f2 9C81      		ldd r25,Y+4
 36344 f9f4 9923      		tst r25
 36345 f9f6 04F0      		brlt .+2
 36346 f9f8 00C0      		rjmp .L1534
3245:lp_solve_5.5/lp_presolve.c ****   }
3246:lp_solve_5.5/lp_presolve.c **** 
3247:lp_solve_5.5/lp_presolve.c ****   return( TRUE );
 36347               		.loc 2 3247 0
 36348 f9fa 81E0      		ldi r24,lo8(1)
 36349               	.L1535:
 36350               	/* epilogue start */
3248:lp_solve_5.5/lp_presolve.c **** }
 36351               		.loc 2 3248 0 discriminator 1
 36352 f9fc EB96      		adiw r28,59
 36353 f9fe 0FB6      		in __tmp_reg__,__SREG__
 36354 fa00 F894      		cli
 36355 fa02 DEBF      		out __SP_H__,r29
 36356 fa04 0FBE      		out __SREG__,__tmp_reg__
 36357 fa06 CDBF      		out __SP_L__,r28
 36358 fa08 DF91      		pop r29
 36359 fa0a CF91      		pop r28
 36360 fa0c 1F91      		pop r17
 36361 fa0e 0F91      		pop r16
 36362 fa10 FF90      		pop r15
 36363 fa12 EF90      		pop r14
 36364 fa14 DF90      		pop r13
 36365 fa16 CF90      		pop r12
 36366 fa18 BF90      		pop r11
 36367 fa1a AF90      		pop r10
 36368 fa1c 0895      		ret
 36369               		.cfi_endproc
 36370               	.LFE71:
 36372               	.global	presolve_initpsrec
 36374               	presolve_initpsrec:
 36375               	.LFB72:
3249:lp_solve_5.5/lp_presolve.c **** 
3250:lp_solve_5.5/lp_presolve.c **** STATIC psrec *presolve_initpsrec(lprec *lp, int size)
3251:lp_solve_5.5/lp_presolve.c **** {
 36376               		.loc 2 3251 0
 36377               		.cfi_startproc
 36378 fa1e CF93      		push r28
 36379               	.LCFI440:
 36380               		.cfi_def_cfa_offset 3
 36381               		.cfi_offset 28, -2
 36382 fa20 DF93      		push r29
 36383               	.LCFI441:
 36384               		.cfi_def_cfa_offset 4
 36385               		.cfi_offset 29, -3
 36386 fa22 00D0      		rcall .
 36387 fa24 00D0      		rcall .
 36388 fa26 00D0      		rcall .
 36389               	.LCFI442:
 36390               		.cfi_def_cfa_offset 10
 36391 fa28 CDB7      		in r28,__SP_L__
 36392 fa2a DEB7      		in r29,__SP_H__
 36393               	.LCFI443:
 36394               		.cfi_def_cfa_register 28
 36395               	/* prologue: function */
 36396               	/* frame size = 6 */
 36397               	/* stack size = 8 */
 36398               	.L__stack_usage = 8
 36399 fa2c 9C83      		std Y+4,r25
 36400 fa2e 8B83      		std Y+3,r24
 36401 fa30 7E83      		std Y+6,r23
 36402 fa32 6D83      		std Y+5,r22
3252:lp_solve_5.5/lp_presolve.c ****   psrec *ps = (psrec *) calloc(1, sizeof(*ps));
 36403               		.loc 2 3252 0
 36404 fa34 68E1      		ldi r22,lo8(24)
 36405 fa36 70E0      		ldi r23,0
 36406 fa38 81E0      		ldi r24,lo8(1)
 36407 fa3a 90E0      		ldi r25,0
 36408 fa3c 0E94 0000 		call calloc
 36409 fa40 9A83      		std Y+2,r25
 36410 fa42 8983      		std Y+1,r24
3253:lp_solve_5.5/lp_presolve.c **** 
3254:lp_solve_5.5/lp_presolve.c ****   createLink(size, &ps->varmap, NULL);
 36411               		.loc 2 3254 0
 36412 fa44 2981      		ldd r18,Y+1
 36413 fa46 3A81      		ldd r19,Y+2
 36414 fa48 8D81      		ldd r24,Y+5
 36415 fa4a 9E81      		ldd r25,Y+6
 36416 fa4c 40E0      		ldi r20,0
 36417 fa4e 50E0      		ldi r21,0
 36418 fa50 B901      		movw r22,r18
 36419 fa52 0E94 0000 		call createLink
3255:lp_solve_5.5/lp_presolve.c ****     fillLink(ps->varmap);
 36420               		.loc 2 3255 0
 36421 fa56 8981      		ldd r24,Y+1
 36422 fa58 9A81      		ldd r25,Y+2
 36423 fa5a FC01      		movw r30,r24
 36424 fa5c 8081      		ld r24,Z
 36425 fa5e 9181      		ldd r25,Z+1
 36426 fa60 0E94 0000 		call fillLink
3256:lp_solve_5.5/lp_presolve.c **** 
3257:lp_solve_5.5/lp_presolve.c ****   size++;
 36427               		.loc 2 3257 0
 36428 fa64 8D81      		ldd r24,Y+5
 36429 fa66 9E81      		ldd r25,Y+6
 36430 fa68 0196      		adiw r24,1
 36431 fa6a 9E83      		std Y+6,r25
 36432 fa6c 8D83      		std Y+5,r24
3258:lp_solve_5.5/lp_presolve.c **** 
3259:lp_solve_5.5/lp_presolve.c ****   allocINT(lp, &ps->empty, size, FALSE);
 36433               		.loc 2 3259 0
 36434 fa6e 8981      		ldd r24,Y+1
 36435 fa70 9A81      		ldd r25,Y+2
 36436 fa72 BC01      		movw r22,r24
 36437 fa74 6C5F      		subi r22,-4
 36438 fa76 7F4F      		sbci r23,-1
 36439 fa78 4D81      		ldd r20,Y+5
 36440 fa7a 5E81      		ldd r21,Y+6
 36441 fa7c 8B81      		ldd r24,Y+3
 36442 fa7e 9C81      		ldd r25,Y+4
 36443 fa80 20E0      		ldi r18,0
 36444 fa82 0E94 0000 		call allocINT
3260:lp_solve_5.5/lp_presolve.c ****   ps->empty[0] = 0;
 36445               		.loc 2 3260 0
 36446 fa86 8981      		ldd r24,Y+1
 36447 fa88 9A81      		ldd r25,Y+2
 36448 fa8a FC01      		movw r30,r24
 36449 fa8c 8481      		ldd r24,Z+4
 36450 fa8e 9581      		ldd r25,Z+5
 36451 fa90 FC01      		movw r30,r24
 36452 fa92 1182      		std Z+1,__zero_reg__
 36453 fa94 1082      		st Z,__zero_reg__
3261:lp_solve_5.5/lp_presolve.c **** 
3262:lp_solve_5.5/lp_presolve.c ****   allocREAL(lp, &ps->pluupper,  size, FALSE);
 36454               		.loc 2 3262 0
 36455 fa96 8981      		ldd r24,Y+1
 36456 fa98 9A81      		ldd r25,Y+2
 36457 fa9a BC01      		movw r22,r24
 36458 fa9c 6E5E      		subi r22,-18
 36459 fa9e 7F4F      		sbci r23,-1
 36460 faa0 4D81      		ldd r20,Y+5
 36461 faa2 5E81      		ldd r21,Y+6
 36462 faa4 8B81      		ldd r24,Y+3
 36463 faa6 9C81      		ldd r25,Y+4
 36464 faa8 20E0      		ldi r18,0
 36465 faaa 0E94 0000 		call allocREAL
3263:lp_solve_5.5/lp_presolve.c ****   allocREAL(lp, &ps->negupper,  size, FALSE);
 36466               		.loc 2 3263 0
 36467 faae 8981      		ldd r24,Y+1
 36468 fab0 9A81      		ldd r25,Y+2
 36469 fab2 BC01      		movw r22,r24
 36470 fab4 6C5E      		subi r22,-20
 36471 fab6 7F4F      		sbci r23,-1
 36472 fab8 4D81      		ldd r20,Y+5
 36473 faba 5E81      		ldd r21,Y+6
 36474 fabc 8B81      		ldd r24,Y+3
 36475 fabe 9C81      		ldd r25,Y+4
 36476 fac0 20E0      		ldi r18,0
 36477 fac2 0E94 0000 		call allocREAL
3264:lp_solve_5.5/lp_presolve.c ****   allocREAL(lp, &ps->plulower,  size, FALSE);
 36478               		.loc 2 3264 0
 36479 fac6 8981      		ldd r24,Y+1
 36480 fac8 9A81      		ldd r25,Y+2
 36481 faca BC01      		movw r22,r24
 36482 facc 625F      		subi r22,-14
 36483 face 7F4F      		sbci r23,-1
 36484 fad0 4D81      		ldd r20,Y+5
 36485 fad2 5E81      		ldd r21,Y+6
 36486 fad4 8B81      		ldd r24,Y+3
 36487 fad6 9C81      		ldd r25,Y+4
 36488 fad8 20E0      		ldi r18,0
 36489 fada 0E94 0000 		call allocREAL
3265:lp_solve_5.5/lp_presolve.c ****   allocREAL(lp, &ps->neglower,  size, FALSE);
 36490               		.loc 2 3265 0
 36491 fade 8981      		ldd r24,Y+1
 36492 fae0 9A81      		ldd r25,Y+2
 36493 fae2 BC01      		movw r22,r24
 36494 fae4 605F      		subi r22,-16
 36495 fae6 7F4F      		sbci r23,-1
 36496 fae8 4D81      		ldd r20,Y+5
 36497 faea 5E81      		ldd r21,Y+6
 36498 faec 8B81      		ldd r24,Y+3
 36499 faee 9C81      		ldd r25,Y+4
 36500 faf0 20E0      		ldi r18,0
 36501 faf2 0E94 0000 		call allocREAL
3266:lp_solve_5.5/lp_presolve.c ****   allocINT(lp,  &ps->infcount,  size, FALSE);
 36502               		.loc 2 3266 0
 36503 faf6 8981      		ldd r24,Y+1
 36504 faf8 9A81      		ldd r25,Y+2
 36505 fafa BC01      		movw r22,r24
 36506 fafc 645F      		subi r22,-12
 36507 fafe 7F4F      		sbci r23,-1
 36508 fb00 4D81      		ldd r20,Y+5
 36509 fb02 5E81      		ldd r21,Y+6
 36510 fb04 8B81      		ldd r24,Y+3
 36511 fb06 9C81      		ldd r25,Y+4
 36512 fb08 20E0      		ldi r18,0
 36513 fb0a 0E94 0000 		call allocINT
3267:lp_solve_5.5/lp_presolve.c **** 
3268:lp_solve_5.5/lp_presolve.c ****   ps->next = (int **) calloc(size, sizeof(*(ps->next)));
 36514               		.loc 2 3268 0
 36515 fb0e 8D81      		ldd r24,Y+5
 36516 fb10 9E81      		ldd r25,Y+6
 36517 fb12 62E0      		ldi r22,lo8(2)
 36518 fb14 70E0      		ldi r23,0
 36519 fb16 0E94 0000 		call calloc
 36520 fb1a 9C01      		movw r18,r24
 36521 fb1c 8981      		ldd r24,Y+1
 36522 fb1e 9A81      		ldd r25,Y+2
 36523 fb20 FC01      		movw r30,r24
 36524 fb22 3383      		std Z+3,r19
 36525 fb24 2283      		std Z+2,r18
3269:lp_solve_5.5/lp_presolve.c **** 
3270:lp_solve_5.5/lp_presolve.c ****   allocINT(lp,  &ps->plucount,  size, TRUE);
 36526               		.loc 2 3270 0
 36527 fb26 8981      		ldd r24,Y+1
 36528 fb28 9A81      		ldd r25,Y+2
 36529 fb2a BC01      		movw r22,r24
 36530 fb2c 6A5F      		subi r22,-6
 36531 fb2e 7F4F      		sbci r23,-1
 36532 fb30 4D81      		ldd r20,Y+5
 36533 fb32 5E81      		ldd r21,Y+6
 36534 fb34 8B81      		ldd r24,Y+3
 36535 fb36 9C81      		ldd r25,Y+4
 36536 fb38 21E0      		ldi r18,lo8(1)
 36537 fb3a 0E94 0000 		call allocINT
3271:lp_solve_5.5/lp_presolve.c ****   allocINT(lp,  &ps->negcount,  size, TRUE);
 36538               		.loc 2 3271 0
 36539 fb3e 8981      		ldd r24,Y+1
 36540 fb40 9A81      		ldd r25,Y+2
 36541 fb42 BC01      		movw r22,r24
 36542 fb44 685F      		subi r22,-8
 36543 fb46 7F4F      		sbci r23,-1
 36544 fb48 4D81      		ldd r20,Y+5
 36545 fb4a 5E81      		ldd r21,Y+6
 36546 fb4c 8B81      		ldd r24,Y+3
 36547 fb4e 9C81      		ldd r25,Y+4
 36548 fb50 21E0      		ldi r18,lo8(1)
 36549 fb52 0E94 0000 		call allocINT
3272:lp_solve_5.5/lp_presolve.c ****   allocINT(lp,  &ps->pluneg,    size, TRUE);
 36550               		.loc 2 3272 0
 36551 fb56 8981      		ldd r24,Y+1
 36552 fb58 9A81      		ldd r25,Y+2
 36553 fb5a BC01      		movw r22,r24
 36554 fb5c 665F      		subi r22,-10
 36555 fb5e 7F4F      		sbci r23,-1
 36556 fb60 4D81      		ldd r20,Y+5
 36557 fb62 5E81      		ldd r21,Y+6
 36558 fb64 8B81      		ldd r24,Y+3
 36559 fb66 9C81      		ldd r25,Y+4
 36560 fb68 21E0      		ldi r18,lo8(1)
 36561 fb6a 0E94 0000 		call allocINT
3273:lp_solve_5.5/lp_presolve.c **** 
3274:lp_solve_5.5/lp_presolve.c ****   ps->allocsize = size;
 36562               		.loc 2 3274 0
 36563 fb6e 8981      		ldd r24,Y+1
 36564 fb70 9A81      		ldd r25,Y+2
 36565 fb72 2D81      		ldd r18,Y+5
 36566 fb74 3E81      		ldd r19,Y+6
 36567 fb76 FC01      		movw r30,r24
 36568 fb78 378B      		std Z+23,r19
 36569 fb7a 268B      		std Z+22,r18
3275:lp_solve_5.5/lp_presolve.c **** 
3276:lp_solve_5.5/lp_presolve.c ****   return( ps );
 36570               		.loc 2 3276 0
 36571 fb7c 8981      		ldd r24,Y+1
 36572 fb7e 9A81      		ldd r25,Y+2
 36573               	/* epilogue start */
3277:lp_solve_5.5/lp_presolve.c **** }
 36574               		.loc 2 3277 0
 36575 fb80 2696      		adiw r28,6
 36576 fb82 0FB6      		in __tmp_reg__,__SREG__
 36577 fb84 F894      		cli
 36578 fb86 DEBF      		out __SP_H__,r29
 36579 fb88 0FBE      		out __SREG__,__tmp_reg__
 36580 fb8a CDBF      		out __SP_L__,r28
 36581 fb8c DF91      		pop r29
 36582 fb8e CF91      		pop r28
 36583 fb90 0895      		ret
 36584               		.cfi_endproc
 36585               	.LFE72:
 36587               	.global	presolve_freepsrec
 36589               	presolve_freepsrec:
 36590               	.LFB73:
3278:lp_solve_5.5/lp_presolve.c **** STATIC void presolve_freepsrec(psrec **ps)
3279:lp_solve_5.5/lp_presolve.c **** {
 36591               		.loc 2 3279 0
 36592               		.cfi_startproc
 36593 fb92 CF93      		push r28
 36594               	.LCFI444:
 36595               		.cfi_def_cfa_offset 3
 36596               		.cfi_offset 28, -2
 36597 fb94 DF93      		push r29
 36598               	.LCFI445:
 36599               		.cfi_def_cfa_offset 4
 36600               		.cfi_offset 29, -3
 36601 fb96 00D0      		rcall .
 36602 fb98 00D0      		rcall .
 36603 fb9a 00D0      		rcall .
 36604               	.LCFI446:
 36605               		.cfi_def_cfa_offset 10
 36606 fb9c CDB7      		in r28,__SP_L__
 36607 fb9e DEB7      		in r29,__SP_H__
 36608               	.LCFI447:
 36609               		.cfi_def_cfa_register 28
 36610               	/* prologue: function */
 36611               	/* frame size = 6 */
 36612               	/* stack size = 8 */
 36613               	.L__stack_usage = 8
 36614 fba0 9E83      		std Y+6,r25
 36615 fba2 8D83      		std Y+5,r24
3280:lp_solve_5.5/lp_presolve.c ****   FREE((*ps)->plucount);
 36616               		.loc 2 3280 0
 36617 fba4 8D81      		ldd r24,Y+5
 36618 fba6 9E81      		ldd r25,Y+6
 36619 fba8 FC01      		movw r30,r24
 36620 fbaa 8081      		ld r24,Z
 36621 fbac 9181      		ldd r25,Z+1
 36622 fbae FC01      		movw r30,r24
 36623 fbb0 8681      		ldd r24,Z+6
 36624 fbb2 9781      		ldd r25,Z+7
 36625 fbb4 892B      		or r24,r25
 36626 fbb6 01F0      		breq .L1574
 36627               		.loc 2 3280 0 is_stmt 0 discriminator 1
 36628 fbb8 8D81      		ldd r24,Y+5
 36629 fbba 9E81      		ldd r25,Y+6
 36630 fbbc FC01      		movw r30,r24
 36631 fbbe 8081      		ld r24,Z
 36632 fbc0 9181      		ldd r25,Z+1
 36633 fbc2 FC01      		movw r30,r24
 36634 fbc4 8681      		ldd r24,Z+6
 36635 fbc6 9781      		ldd r25,Z+7
 36636 fbc8 0E94 0000 		call free
 36637 fbcc 8D81      		ldd r24,Y+5
 36638 fbce 9E81      		ldd r25,Y+6
 36639 fbd0 FC01      		movw r30,r24
 36640 fbd2 8081      		ld r24,Z
 36641 fbd4 9181      		ldd r25,Z+1
 36642 fbd6 FC01      		movw r30,r24
 36643 fbd8 1782      		std Z+7,__zero_reg__
 36644 fbda 1682      		std Z+6,__zero_reg__
 36645               	.L1574:
3281:lp_solve_5.5/lp_presolve.c ****   FREE((*ps)->negcount);
 36646               		.loc 2 3281 0 is_stmt 1
 36647 fbdc 8D81      		ldd r24,Y+5
 36648 fbde 9E81      		ldd r25,Y+6
 36649 fbe0 FC01      		movw r30,r24
 36650 fbe2 8081      		ld r24,Z
 36651 fbe4 9181      		ldd r25,Z+1
 36652 fbe6 FC01      		movw r30,r24
 36653 fbe8 8085      		ldd r24,Z+8
 36654 fbea 9185      		ldd r25,Z+9
 36655 fbec 892B      		or r24,r25
 36656 fbee 01F0      		breq .L1575
 36657               		.loc 2 3281 0 is_stmt 0 discriminator 1
 36658 fbf0 8D81      		ldd r24,Y+5
 36659 fbf2 9E81      		ldd r25,Y+6
 36660 fbf4 FC01      		movw r30,r24
 36661 fbf6 8081      		ld r24,Z
 36662 fbf8 9181      		ldd r25,Z+1
 36663 fbfa FC01      		movw r30,r24
 36664 fbfc 8085      		ldd r24,Z+8
 36665 fbfe 9185      		ldd r25,Z+9
 36666 fc00 0E94 0000 		call free
 36667 fc04 8D81      		ldd r24,Y+5
 36668 fc06 9E81      		ldd r25,Y+6
 36669 fc08 FC01      		movw r30,r24
 36670 fc0a 8081      		ld r24,Z
 36671 fc0c 9181      		ldd r25,Z+1
 36672 fc0e FC01      		movw r30,r24
 36673 fc10 1186      		std Z+9,__zero_reg__
 36674 fc12 1086      		std Z+8,__zero_reg__
 36675               	.L1575:
3282:lp_solve_5.5/lp_presolve.c ****   FREE((*ps)->pluneg);
 36676               		.loc 2 3282 0 is_stmt 1
 36677 fc14 8D81      		ldd r24,Y+5
 36678 fc16 9E81      		ldd r25,Y+6
 36679 fc18 FC01      		movw r30,r24
 36680 fc1a 8081      		ld r24,Z
 36681 fc1c 9181      		ldd r25,Z+1
 36682 fc1e FC01      		movw r30,r24
 36683 fc20 8285      		ldd r24,Z+10
 36684 fc22 9385      		ldd r25,Z+11
 36685 fc24 892B      		or r24,r25
 36686 fc26 01F0      		breq .L1576
 36687               		.loc 2 3282 0 is_stmt 0 discriminator 1
 36688 fc28 8D81      		ldd r24,Y+5
 36689 fc2a 9E81      		ldd r25,Y+6
 36690 fc2c FC01      		movw r30,r24
 36691 fc2e 8081      		ld r24,Z
 36692 fc30 9181      		ldd r25,Z+1
 36693 fc32 FC01      		movw r30,r24
 36694 fc34 8285      		ldd r24,Z+10
 36695 fc36 9385      		ldd r25,Z+11
 36696 fc38 0E94 0000 		call free
 36697 fc3c 8D81      		ldd r24,Y+5
 36698 fc3e 9E81      		ldd r25,Y+6
 36699 fc40 FC01      		movw r30,r24
 36700 fc42 8081      		ld r24,Z
 36701 fc44 9181      		ldd r25,Z+1
 36702 fc46 FC01      		movw r30,r24
 36703 fc48 1386      		std Z+11,__zero_reg__
 36704 fc4a 1286      		std Z+10,__zero_reg__
 36705               	.L1576:
3283:lp_solve_5.5/lp_presolve.c ****   FREE((*ps)->infcount);
 36706               		.loc 2 3283 0 is_stmt 1
 36707 fc4c 8D81      		ldd r24,Y+5
 36708 fc4e 9E81      		ldd r25,Y+6
 36709 fc50 FC01      		movw r30,r24
 36710 fc52 8081      		ld r24,Z
 36711 fc54 9181      		ldd r25,Z+1
 36712 fc56 FC01      		movw r30,r24
 36713 fc58 8485      		ldd r24,Z+12
 36714 fc5a 9585      		ldd r25,Z+13
 36715 fc5c 892B      		or r24,r25
 36716 fc5e 01F0      		breq .L1577
 36717               		.loc 2 3283 0 is_stmt 0 discriminator 1
 36718 fc60 8D81      		ldd r24,Y+5
 36719 fc62 9E81      		ldd r25,Y+6
 36720 fc64 FC01      		movw r30,r24
 36721 fc66 8081      		ld r24,Z
 36722 fc68 9181      		ldd r25,Z+1
 36723 fc6a FC01      		movw r30,r24
 36724 fc6c 8485      		ldd r24,Z+12
 36725 fc6e 9585      		ldd r25,Z+13
 36726 fc70 0E94 0000 		call free
 36727 fc74 8D81      		ldd r24,Y+5
 36728 fc76 9E81      		ldd r25,Y+6
 36729 fc78 FC01      		movw r30,r24
 36730 fc7a 8081      		ld r24,Z
 36731 fc7c 9181      		ldd r25,Z+1
 36732 fc7e FC01      		movw r30,r24
 36733 fc80 1586      		std Z+13,__zero_reg__
 36734 fc82 1486      		std Z+12,__zero_reg__
 36735               	.L1577:
3284:lp_solve_5.5/lp_presolve.c **** 
3285:lp_solve_5.5/lp_presolve.c ****   if((*ps)->next != NULL) {
 36736               		.loc 2 3285 0 is_stmt 1
 36737 fc84 8D81      		ldd r24,Y+5
 36738 fc86 9E81      		ldd r25,Y+6
 36739 fc88 FC01      		movw r30,r24
 36740 fc8a 8081      		ld r24,Z
 36741 fc8c 9181      		ldd r25,Z+1
 36742 fc8e FC01      		movw r30,r24
 36743 fc90 8281      		ldd r24,Z+2
 36744 fc92 9381      		ldd r25,Z+3
 36745 fc94 892B      		or r24,r25
 36746 fc96 01F4      		brne .+2
 36747 fc98 00C0      		rjmp .L1578
 36748               	.LBB8:
3286:lp_solve_5.5/lp_presolve.c ****     int i, n = (*ps)->allocsize;
 36749               		.loc 2 3286 0
 36750 fc9a 8D81      		ldd r24,Y+5
 36751 fc9c 9E81      		ldd r25,Y+6
 36752 fc9e FC01      		movw r30,r24
 36753 fca0 8081      		ld r24,Z
 36754 fca2 9181      		ldd r25,Z+1
 36755 fca4 FC01      		movw r30,r24
 36756 fca6 8689      		ldd r24,Z+22
 36757 fca8 9789      		ldd r25,Z+23
 36758 fcaa 9C83      		std Y+4,r25
 36759 fcac 8B83      		std Y+3,r24
3287:lp_solve_5.5/lp_presolve.c ****     for(i = 0; i < n; i++)
 36760               		.loc 2 3287 0
 36761 fcae 1A82      		std Y+2,__zero_reg__
 36762 fcb0 1982      		std Y+1,__zero_reg__
 36763 fcb2 00C0      		rjmp .L1579
 36764               	.L1581:
3288:lp_solve_5.5/lp_presolve.c ****       FREE((*ps)->next[i]);
 36765               		.loc 2 3288 0
 36766 fcb4 8D81      		ldd r24,Y+5
 36767 fcb6 9E81      		ldd r25,Y+6
 36768 fcb8 FC01      		movw r30,r24
 36769 fcba 8081      		ld r24,Z
 36770 fcbc 9181      		ldd r25,Z+1
 36771 fcbe FC01      		movw r30,r24
 36772 fcc0 2281      		ldd r18,Z+2
 36773 fcc2 3381      		ldd r19,Z+3
 36774 fcc4 8981      		ldd r24,Y+1
 36775 fcc6 9A81      		ldd r25,Y+2
 36776 fcc8 880F      		lsl r24
 36777 fcca 991F      		rol r25
 36778 fccc 820F      		add r24,r18
 36779 fcce 931F      		adc r25,r19
 36780 fcd0 FC01      		movw r30,r24
 36781 fcd2 8081      		ld r24,Z
 36782 fcd4 9181      		ldd r25,Z+1
 36783 fcd6 892B      		or r24,r25
 36784 fcd8 01F0      		breq .L1580
 36785               		.loc 2 3288 0 is_stmt 0 discriminator 1
 36786 fcda 8D81      		ldd r24,Y+5
 36787 fcdc 9E81      		ldd r25,Y+6
 36788 fcde FC01      		movw r30,r24
 36789 fce0 8081      		ld r24,Z
 36790 fce2 9181      		ldd r25,Z+1
 36791 fce4 FC01      		movw r30,r24
 36792 fce6 2281      		ldd r18,Z+2
 36793 fce8 3381      		ldd r19,Z+3
 36794 fcea 8981      		ldd r24,Y+1
 36795 fcec 9A81      		ldd r25,Y+2
 36796 fcee 880F      		lsl r24
 36797 fcf0 991F      		rol r25
 36798 fcf2 820F      		add r24,r18
 36799 fcf4 931F      		adc r25,r19
 36800 fcf6 FC01      		movw r30,r24
 36801 fcf8 8081      		ld r24,Z
 36802 fcfa 9181      		ldd r25,Z+1
 36803 fcfc 0E94 0000 		call free
 36804 fd00 8D81      		ldd r24,Y+5
 36805 fd02 9E81      		ldd r25,Y+6
 36806 fd04 FC01      		movw r30,r24
 36807 fd06 8081      		ld r24,Z
 36808 fd08 9181      		ldd r25,Z+1
 36809 fd0a FC01      		movw r30,r24
 36810 fd0c 2281      		ldd r18,Z+2
 36811 fd0e 3381      		ldd r19,Z+3
 36812 fd10 8981      		ldd r24,Y+1
 36813 fd12 9A81      		ldd r25,Y+2
 36814 fd14 880F      		lsl r24
 36815 fd16 991F      		rol r25
 36816 fd18 820F      		add r24,r18
 36817 fd1a 931F      		adc r25,r19
 36818 fd1c FC01      		movw r30,r24
 36819 fd1e 1182      		std Z+1,__zero_reg__
 36820 fd20 1082      		st Z,__zero_reg__
 36821               	.L1580:
3287:lp_solve_5.5/lp_presolve.c ****     for(i = 0; i < n; i++)
 36822               		.loc 2 3287 0 is_stmt 1 discriminator 2
 36823 fd22 8981      		ldd r24,Y+1
 36824 fd24 9A81      		ldd r25,Y+2
 36825 fd26 0196      		adiw r24,1
 36826 fd28 9A83      		std Y+2,r25
 36827 fd2a 8983      		std Y+1,r24
 36828               	.L1579:
3287:lp_solve_5.5/lp_presolve.c ****     for(i = 0; i < n; i++)
 36829               		.loc 2 3287 0 is_stmt 0 discriminator 1
 36830 fd2c 2981      		ldd r18,Y+1
 36831 fd2e 3A81      		ldd r19,Y+2
 36832 fd30 8B81      		ldd r24,Y+3
 36833 fd32 9C81      		ldd r25,Y+4
 36834 fd34 2817      		cp r18,r24
 36835 fd36 3907      		cpc r19,r25
 36836 fd38 04F4      		brge .+2
 36837 fd3a 00C0      		rjmp .L1581
3289:lp_solve_5.5/lp_presolve.c ****     FREE((*ps)->next);
 36838               		.loc 2 3289 0 is_stmt 1
 36839 fd3c 8D81      		ldd r24,Y+5
 36840 fd3e 9E81      		ldd r25,Y+6
 36841 fd40 FC01      		movw r30,r24
 36842 fd42 8081      		ld r24,Z
 36843 fd44 9181      		ldd r25,Z+1
 36844 fd46 FC01      		movw r30,r24
 36845 fd48 8281      		ldd r24,Z+2
 36846 fd4a 9381      		ldd r25,Z+3
 36847 fd4c 892B      		or r24,r25
 36848 fd4e 01F0      		breq .L1578
 36849               		.loc 2 3289 0 is_stmt 0 discriminator 1
 36850 fd50 8D81      		ldd r24,Y+5
 36851 fd52 9E81      		ldd r25,Y+6
 36852 fd54 FC01      		movw r30,r24
 36853 fd56 8081      		ld r24,Z
 36854 fd58 9181      		ldd r25,Z+1
 36855 fd5a FC01      		movw r30,r24
 36856 fd5c 8281      		ldd r24,Z+2
 36857 fd5e 9381      		ldd r25,Z+3
 36858 fd60 0E94 0000 		call free
 36859 fd64 8D81      		ldd r24,Y+5
 36860 fd66 9E81      		ldd r25,Y+6
 36861 fd68 FC01      		movw r30,r24
 36862 fd6a 8081      		ld r24,Z
 36863 fd6c 9181      		ldd r25,Z+1
 36864 fd6e FC01      		movw r30,r24
 36865 fd70 1382      		std Z+3,__zero_reg__
 36866 fd72 1282      		std Z+2,__zero_reg__
 36867               	.L1578:
 36868               	.LBE8:
3290:lp_solve_5.5/lp_presolve.c ****   }
3291:lp_solve_5.5/lp_presolve.c **** 
3292:lp_solve_5.5/lp_presolve.c ****   FREE((*ps)->plulower);
 36869               		.loc 2 3292 0 is_stmt 1
 36870 fd74 8D81      		ldd r24,Y+5
 36871 fd76 9E81      		ldd r25,Y+6
 36872 fd78 FC01      		movw r30,r24
 36873 fd7a 8081      		ld r24,Z
 36874 fd7c 9181      		ldd r25,Z+1
 36875 fd7e FC01      		movw r30,r24
 36876 fd80 8685      		ldd r24,Z+14
 36877 fd82 9785      		ldd r25,Z+15
 36878 fd84 892B      		or r24,r25
 36879 fd86 01F0      		breq .L1582
 36880               		.loc 2 3292 0 is_stmt 0 discriminator 1
 36881 fd88 8D81      		ldd r24,Y+5
 36882 fd8a 9E81      		ldd r25,Y+6
 36883 fd8c FC01      		movw r30,r24
 36884 fd8e 8081      		ld r24,Z
 36885 fd90 9181      		ldd r25,Z+1
 36886 fd92 FC01      		movw r30,r24
 36887 fd94 8685      		ldd r24,Z+14
 36888 fd96 9785      		ldd r25,Z+15
 36889 fd98 0E94 0000 		call free
 36890 fd9c 8D81      		ldd r24,Y+5
 36891 fd9e 9E81      		ldd r25,Y+6
 36892 fda0 FC01      		movw r30,r24
 36893 fda2 8081      		ld r24,Z
 36894 fda4 9181      		ldd r25,Z+1
 36895 fda6 FC01      		movw r30,r24
 36896 fda8 1786      		std Z+15,__zero_reg__
 36897 fdaa 1686      		std Z+14,__zero_reg__
 36898               	.L1582:
3293:lp_solve_5.5/lp_presolve.c ****   FREE((*ps)->neglower);
 36899               		.loc 2 3293 0 is_stmt 1
 36900 fdac 8D81      		ldd r24,Y+5
 36901 fdae 9E81      		ldd r25,Y+6
 36902 fdb0 FC01      		movw r30,r24
 36903 fdb2 8081      		ld r24,Z
 36904 fdb4 9181      		ldd r25,Z+1
 36905 fdb6 FC01      		movw r30,r24
 36906 fdb8 8089      		ldd r24,Z+16
 36907 fdba 9189      		ldd r25,Z+17
 36908 fdbc 892B      		or r24,r25
 36909 fdbe 01F0      		breq .L1583
 36910               		.loc 2 3293 0 is_stmt 0 discriminator 1
 36911 fdc0 8D81      		ldd r24,Y+5
 36912 fdc2 9E81      		ldd r25,Y+6
 36913 fdc4 FC01      		movw r30,r24
 36914 fdc6 8081      		ld r24,Z
 36915 fdc8 9181      		ldd r25,Z+1
 36916 fdca FC01      		movw r30,r24
 36917 fdcc 8089      		ldd r24,Z+16
 36918 fdce 9189      		ldd r25,Z+17
 36919 fdd0 0E94 0000 		call free
 36920 fdd4 8D81      		ldd r24,Y+5
 36921 fdd6 9E81      		ldd r25,Y+6
 36922 fdd8 FC01      		movw r30,r24
 36923 fdda 8081      		ld r24,Z
 36924 fddc 9181      		ldd r25,Z+1
 36925 fdde FC01      		movw r30,r24
 36926 fde0 118A      		std Z+17,__zero_reg__
 36927 fde2 108A      		std Z+16,__zero_reg__
 36928               	.L1583:
3294:lp_solve_5.5/lp_presolve.c ****   FREE((*ps)->pluupper);
 36929               		.loc 2 3294 0 is_stmt 1
 36930 fde4 8D81      		ldd r24,Y+5
 36931 fde6 9E81      		ldd r25,Y+6
 36932 fde8 FC01      		movw r30,r24
 36933 fdea 8081      		ld r24,Z
 36934 fdec 9181      		ldd r25,Z+1
 36935 fdee FC01      		movw r30,r24
 36936 fdf0 8289      		ldd r24,Z+18
 36937 fdf2 9389      		ldd r25,Z+19
 36938 fdf4 892B      		or r24,r25
 36939 fdf6 01F0      		breq .L1584
 36940               		.loc 2 3294 0 is_stmt 0 discriminator 1
 36941 fdf8 8D81      		ldd r24,Y+5
 36942 fdfa 9E81      		ldd r25,Y+6
 36943 fdfc FC01      		movw r30,r24
 36944 fdfe 8081      		ld r24,Z
 36945 fe00 9181      		ldd r25,Z+1
 36946 fe02 FC01      		movw r30,r24
 36947 fe04 8289      		ldd r24,Z+18
 36948 fe06 9389      		ldd r25,Z+19
 36949 fe08 0E94 0000 		call free
 36950 fe0c 8D81      		ldd r24,Y+5
 36951 fe0e 9E81      		ldd r25,Y+6
 36952 fe10 FC01      		movw r30,r24
 36953 fe12 8081      		ld r24,Z
 36954 fe14 9181      		ldd r25,Z+1
 36955 fe16 FC01      		movw r30,r24
 36956 fe18 138A      		std Z+19,__zero_reg__
 36957 fe1a 128A      		std Z+18,__zero_reg__
 36958               	.L1584:
3295:lp_solve_5.5/lp_presolve.c ****   FREE((*ps)->negupper);
 36959               		.loc 2 3295 0 is_stmt 1
 36960 fe1c 8D81      		ldd r24,Y+5
 36961 fe1e 9E81      		ldd r25,Y+6
 36962 fe20 FC01      		movw r30,r24
 36963 fe22 8081      		ld r24,Z
 36964 fe24 9181      		ldd r25,Z+1
 36965 fe26 FC01      		movw r30,r24
 36966 fe28 8489      		ldd r24,Z+20
 36967 fe2a 9589      		ldd r25,Z+21
 36968 fe2c 892B      		or r24,r25
 36969 fe2e 01F0      		breq .L1585
 36970               		.loc 2 3295 0 is_stmt 0 discriminator 1
 36971 fe30 8D81      		ldd r24,Y+5
 36972 fe32 9E81      		ldd r25,Y+6
 36973 fe34 FC01      		movw r30,r24
 36974 fe36 8081      		ld r24,Z
 36975 fe38 9181      		ldd r25,Z+1
 36976 fe3a FC01      		movw r30,r24
 36977 fe3c 8489      		ldd r24,Z+20
 36978 fe3e 9589      		ldd r25,Z+21
 36979 fe40 0E94 0000 		call free
 36980 fe44 8D81      		ldd r24,Y+5
 36981 fe46 9E81      		ldd r25,Y+6
 36982 fe48 FC01      		movw r30,r24
 36983 fe4a 8081      		ld r24,Z
 36984 fe4c 9181      		ldd r25,Z+1
 36985 fe4e FC01      		movw r30,r24
 36986 fe50 158A      		std Z+21,__zero_reg__
 36987 fe52 148A      		std Z+20,__zero_reg__
 36988               	.L1585:
3296:lp_solve_5.5/lp_presolve.c **** 
3297:lp_solve_5.5/lp_presolve.c ****   FREE((*ps)->empty);
 36989               		.loc 2 3297 0 is_stmt 1
 36990 fe54 8D81      		ldd r24,Y+5
 36991 fe56 9E81      		ldd r25,Y+6
 36992 fe58 FC01      		movw r30,r24
 36993 fe5a 8081      		ld r24,Z
 36994 fe5c 9181      		ldd r25,Z+1
 36995 fe5e FC01      		movw r30,r24
 36996 fe60 8481      		ldd r24,Z+4
 36997 fe62 9581      		ldd r25,Z+5
 36998 fe64 892B      		or r24,r25
 36999 fe66 01F0      		breq .L1586
 37000               		.loc 2 3297 0 is_stmt 0 discriminator 1
 37001 fe68 8D81      		ldd r24,Y+5
 37002 fe6a 9E81      		ldd r25,Y+6
 37003 fe6c FC01      		movw r30,r24
 37004 fe6e 8081      		ld r24,Z
 37005 fe70 9181      		ldd r25,Z+1
 37006 fe72 FC01      		movw r30,r24
 37007 fe74 8481      		ldd r24,Z+4
 37008 fe76 9581      		ldd r25,Z+5
 37009 fe78 0E94 0000 		call free
 37010 fe7c 8D81      		ldd r24,Y+5
 37011 fe7e 9E81      		ldd r25,Y+6
 37012 fe80 FC01      		movw r30,r24
 37013 fe82 8081      		ld r24,Z
 37014 fe84 9181      		ldd r25,Z+1
 37015 fe86 FC01      		movw r30,r24
 37016 fe88 1582      		std Z+5,__zero_reg__
 37017 fe8a 1482      		std Z+4,__zero_reg__
 37018               	.L1586:
3298:lp_solve_5.5/lp_presolve.c **** 
3299:lp_solve_5.5/lp_presolve.c ****   freeLink(&(*ps)->varmap);
 37019               		.loc 2 3299 0 is_stmt 1
 37020 fe8c 8D81      		ldd r24,Y+5
 37021 fe8e 9E81      		ldd r25,Y+6
 37022 fe90 FC01      		movw r30,r24
 37023 fe92 8081      		ld r24,Z
 37024 fe94 9181      		ldd r25,Z+1
 37025 fe96 0E94 0000 		call freeLink
3300:lp_solve_5.5/lp_presolve.c **** 
3301:lp_solve_5.5/lp_presolve.c ****   FREE(*ps);
 37026               		.loc 2 3301 0
 37027 fe9a 8D81      		ldd r24,Y+5
 37028 fe9c 9E81      		ldd r25,Y+6
 37029 fe9e FC01      		movw r30,r24
 37030 fea0 8081      		ld r24,Z
 37031 fea2 9181      		ldd r25,Z+1
 37032 fea4 892B      		or r24,r25
 37033 fea6 01F0      		breq .L1588
 37034               		.loc 2 3301 0 is_stmt 0 discriminator 1
 37035 fea8 8D81      		ldd r24,Y+5
 37036 feaa 9E81      		ldd r25,Y+6
 37037 feac FC01      		movw r30,r24
 37038 feae 8081      		ld r24,Z
 37039 feb0 9181      		ldd r25,Z+1
 37040 feb2 0E94 0000 		call free
 37041 feb6 8D81      		ldd r24,Y+5
 37042 feb8 9E81      		ldd r25,Y+6
 37043 feba FC01      		movw r30,r24
 37044 febc 1182      		std Z+1,__zero_reg__
 37045 febe 1082      		st Z,__zero_reg__
 37046               	.L1588:
3302:lp_solve_5.5/lp_presolve.c **** }
 37047               		.loc 2 3302 0 is_stmt 1
 37048 fec0 0000      		nop
 37049               	/* epilogue start */
 37050 fec2 2696      		adiw r28,6
 37051 fec4 0FB6      		in __tmp_reg__,__SREG__
 37052 fec6 F894      		cli
 37053 fec8 DEBF      		out __SP_H__,r29
 37054 feca 0FBE      		out __SREG__,__tmp_reg__
 37055 fecc CDBF      		out __SP_L__,r28
 37056 fece DF91      		pop r29
 37057 fed0 CF91      		pop r28
 37058 fed2 0895      		ret
 37059               		.cfi_endproc
 37060               	.LFE73:
 37062               	.global	__floatsisf
 37063               	.global	presolve_init
 37065               	presolve_init:
 37066               	.LFB74:
3303:lp_solve_5.5/lp_presolve.c **** 
3304:lp_solve_5.5/lp_presolve.c **** STATIC presolverec *presolve_init(lprec *lp)
3305:lp_solve_5.5/lp_presolve.c **** {
 37067               		.loc 2 3305 0
 37068               		.cfi_startproc
 37069 fed4 0F93      		push r16
 37070               	.LCFI448:
 37071               		.cfi_def_cfa_offset 3
 37072               		.cfi_offset 16, -2
 37073 fed6 1F93      		push r17
 37074               	.LCFI449:
 37075               		.cfi_def_cfa_offset 4
 37076               		.cfi_offset 17, -3
 37077 fed8 CF93      		push r28
 37078               	.LCFI450:
 37079               		.cfi_def_cfa_offset 5
 37080               		.cfi_offset 28, -4
 37081 feda DF93      		push r29
 37082               	.LCFI451:
 37083               		.cfi_def_cfa_offset 6
 37084               		.cfi_offset 29, -5
 37085 fedc CDB7      		in r28,__SP_L__
 37086 fede DEB7      		in r29,__SP_H__
 37087               	.LCFI452:
 37088               		.cfi_def_cfa_register 28
 37089 fee0 6897      		sbiw r28,24
 37090               	.LCFI453:
 37091               		.cfi_def_cfa_offset 30
 37092 fee2 0FB6      		in __tmp_reg__,__SREG__
 37093 fee4 F894      		cli
 37094 fee6 DEBF      		out __SP_H__,r29
 37095 fee8 0FBE      		out __SREG__,__tmp_reg__
 37096 feea CDBF      		out __SP_L__,r28
 37097               	/* prologue: function */
 37098               	/* frame size = 24 */
 37099               	/* stack size = 28 */
 37100               	.L__stack_usage = 28
 37101 feec 988F      		std Y+24,r25
 37102 feee 8F8B      		std Y+23,r24
3306:lp_solve_5.5/lp_presolve.c ****   int         k, i, ix, ixx, colnr,
3307:lp_solve_5.5/lp_presolve.c ****               ncols = lp->columns,
 37103               		.loc 2 3307 0
 37104 fef0 8F89      		ldd r24,Y+23
 37105 fef2 988D      		ldd r25,Y+24
 37106 fef4 8451      		subi r24,20
 37107 fef6 9E4F      		sbci r25,-2
 37108 fef8 DC01      		movw r26,r24
 37109 fefa 8D91      		ld r24,X+
 37110 fefc 9C91      		ld r25,X
 37111 fefe 9E87      		std Y+14,r25
 37112 ff00 8D87      		std Y+13,r24
3308:lp_solve_5.5/lp_presolve.c ****               nrows = lp->rows;
 37113               		.loc 2 3308 0
 37114 ff02 8F89      		ldd r24,Y+23
 37115 ff04 988D      		ldd r25,Y+24
 37116 ff06 8651      		subi r24,22
 37117 ff08 9E4F      		sbci r25,-2
 37118 ff0a FC01      		movw r30,r24
 37119 ff0c 8081      		ld r24,Z
 37120 ff0e 9181      		ldd r25,Z+1
 37121 ff10 988B      		std Y+16,r25
 37122 ff12 8F87      		std Y+15,r24
3309:lp_solve_5.5/lp_presolve.c ****   REAL        hold;
3310:lp_solve_5.5/lp_presolve.c ****   MATrec      *mat = lp->matA;
 37123               		.loc 2 3310 0
 37124 ff14 8F89      		ldd r24,Y+23
 37125 ff16 988D      		ldd r25,Y+24
 37126 ff18 8A54      		subi r24,74
 37127 ff1a 9D4F      		sbci r25,-3
 37128 ff1c DC01      		movw r26,r24
 37129 ff1e 8D91      		ld r24,X+
 37130 ff20 9C91      		ld r25,X
 37131 ff22 9A8B      		std Y+18,r25
 37132 ff24 898B      		std Y+17,r24
3311:lp_solve_5.5/lp_presolve.c ****   presolverec *psdata = NULL;
 37133               		.loc 2 3311 0
 37134 ff26 1C8A      		std Y+20,__zero_reg__
 37135 ff28 1B8A      		std Y+19,__zero_reg__
3312:lp_solve_5.5/lp_presolve.c **** 
3313:lp_solve_5.5/lp_presolve.c ****   /* Optimize memory usage if we have a very large model;
3314:lp_solve_5.5/lp_presolve.c ****      this is to reduce the risk of out-of-memory situations. */
3315:lp_solve_5.5/lp_presolve.c ****   ix  = get_nonzeros(lp);
 37136               		.loc 2 3315 0
 37137 ff2a 8F89      		ldd r24,Y+23
 37138 ff2c 988D      		ldd r25,Y+24
 37139 ff2e 0E94 0000 		call get_nonzeros
 37140 ff32 9E83      		std Y+6,r25
 37141 ff34 8D83      		std Y+5,r24
3316:lp_solve_5.5/lp_presolve.c ****   ixx = lp->matA->mat_alloc;
 37142               		.loc 2 3316 0
 37143 ff36 8F89      		ldd r24,Y+23
 37144 ff38 988D      		ldd r25,Y+24
 37145 ff3a 8A54      		subi r24,74
 37146 ff3c 9D4F      		sbci r25,-3
 37147 ff3e FC01      		movw r30,r24
 37148 ff40 8081      		ld r24,Z
 37149 ff42 9181      		ldd r25,Z+1
 37150 ff44 DC01      		movw r26,r24
 37151 ff46 1A96      		adiw r26,10
 37152 ff48 8D91      		ld r24,X+
 37153 ff4a 9C91      		ld r25,X
 37154 ff4c 1B97      		sbiw r26,10+1
 37155 ff4e 9E8B      		std Y+22,r25
 37156 ff50 8D8B      		std Y+21,r24
3317:lp_solve_5.5/lp_presolve.c ****   if((ixx - ix > MAT_START_SIZE) && ((ixx - ix) * 20 > ixx))
 37157               		.loc 2 3317 0
 37158 ff52 2D89      		ldd r18,Y+21
 37159 ff54 3E89      		ldd r19,Y+22
 37160 ff56 8D81      		ldd r24,Y+5
 37161 ff58 9E81      		ldd r25,Y+6
 37162 ff5a F901      		movw r30,r18
 37163 ff5c E81B      		sub r30,r24
 37164 ff5e F90B      		sbc r31,r25
 37165 ff60 CF01      		movw r24,r30
 37166 ff62 8131      		cpi r24,17
 37167 ff64 9742      		sbci r25,39
 37168 ff66 04F0      		brlt .L1590
 37169               		.loc 2 3317 0 is_stmt 0 discriminator 1
 37170 ff68 2D89      		ldd r18,Y+21
 37171 ff6a 3E89      		ldd r19,Y+22
 37172 ff6c 8D81      		ldd r24,Y+5
 37173 ff6e 9E81      		ldd r25,Y+6
 37174 ff70 A901      		movw r20,r18
 37175 ff72 481B      		sub r20,r24
 37176 ff74 590B      		sbc r21,r25
 37177 ff76 CA01      		movw r24,r20
 37178 ff78 44E1      		ldi r20,lo8(20)
 37179 ff7a 489F      		mul r20,r24
 37180 ff7c 9001      		movw r18,r0
 37181 ff7e 499F      		mul r20,r25
 37182 ff80 300D      		add r19,r0
 37183 ff82 1124      		clr __zero_reg__
 37184 ff84 8D89      		ldd r24,Y+21
 37185 ff86 9E89      		ldd r25,Y+22
 37186 ff88 8217      		cp r24,r18
 37187 ff8a 9307      		cpc r25,r19
 37188 ff8c 04F4      		brge .L1590
3318:lp_solve_5.5/lp_presolve.c ****     mat_memopt(lp->matA, nrows / 20, ncols / 20, ix / 20);
 37189               		.loc 2 3318 0 is_stmt 1
 37190 ff8e 8D81      		ldd r24,Y+5
 37191 ff90 9E81      		ldd r25,Y+6
 37192 ff92 24E1      		ldi r18,lo8(20)
 37193 ff94 30E0      		ldi r19,0
 37194 ff96 B901      		movw r22,r18
 37195 ff98 0E94 0000 		call __divmodhi4
 37196 ff9c CB01      		movw r24,r22
 37197 ff9e 8C01      		movw r16,r24
 37198 ffa0 8D85      		ldd r24,Y+13
 37199 ffa2 9E85      		ldd r25,Y+14
 37200 ffa4 24E1      		ldi r18,lo8(20)
 37201 ffa6 30E0      		ldi r19,0
 37202 ffa8 B901      		movw r22,r18
 37203 ffaa 0E94 0000 		call __divmodhi4
 37204 ffae CB01      		movw r24,r22
 37205 ffb0 FC01      		movw r30,r24
 37206 ffb2 8F85      		ldd r24,Y+15
 37207 ffb4 9889      		ldd r25,Y+16
 37208 ffb6 24E1      		ldi r18,lo8(20)
 37209 ffb8 30E0      		ldi r19,0
 37210 ffba B901      		movw r22,r18
 37211 ffbc 0E94 0000 		call __divmodhi4
 37212 ffc0 CB01      		movw r24,r22
 37213 ffc2 BC01      		movw r22,r24
 37214 ffc4 8F89      		ldd r24,Y+23
 37215 ffc6 988D      		ldd r25,Y+24
 37216 ffc8 8A54      		subi r24,74
 37217 ffca 9D4F      		sbci r25,-3
 37218 ffcc DC01      		movw r26,r24
 37219 ffce 8D91      		ld r24,X+
 37220 ffd0 9C91      		ld r25,X
 37221 ffd2 9801      		movw r18,r16
 37222 ffd4 AF01      		movw r20,r30
 37223 ffd6 0E94 0000 		call mat_memopt
 37224               	.L1590:
3319:lp_solve_5.5/lp_presolve.c **** 
3320:lp_solve_5.5/lp_presolve.c ****   psdata = (presolverec *) calloc(1, sizeof(*psdata));
 37225               		.loc 2 3320 0
 37226 ffda 65E2      		ldi r22,lo8(37)
 37227 ffdc 70E0      		ldi r23,0
 37228 ffde 81E0      		ldi r24,lo8(1)
 37229 ffe0 90E0      		ldi r25,0
 37230 ffe2 0E94 0000 		call calloc
 37231 ffe6 9C8B      		std Y+20,r25
 37232 ffe8 8B8B      		std Y+19,r24
3321:lp_solve_5.5/lp_presolve.c **** 
3322:lp_solve_5.5/lp_presolve.c ****   psdata->lp   = lp;
 37233               		.loc 2 3322 0
 37234 ffea 8B89      		ldd r24,Y+19
 37235 ffec 9C89      		ldd r25,Y+20
 37236 ffee 2F89      		ldd r18,Y+23
 37237 fff0 388D      		ldd r19,Y+24
 37238 fff2 FC01      		movw r30,r24
 37239 fff4 338B      		std Z+19,r19
 37240 fff6 228B      		std Z+18,r18
3323:lp_solve_5.5/lp_presolve.c ****   psdata->rows = presolve_initpsrec(lp, nrows);
 37241               		.loc 2 3323 0
 37242 fff8 2F85      		ldd r18,Y+15
 37243 fffa 3889      		ldd r19,Y+16
 37244 fffc 8F89      		ldd r24,Y+23
 37245 fffe 988D      		ldd r25,Y+24
 37246 10000 B901      		movw r22,r18
 37247 10002 0E94 0000 		call presolve_initpsrec
 37248 10006 9C01      		movw r18,r24
 37249 10008 8B89      		ldd r24,Y+19
 37250 1000a 9C89      		ldd r25,Y+20
 37251 1000c DC01      		movw r26,r24
 37252 1000e 2D93      		st X+,r18
 37253 10010 3C93      		st X,r19
3324:lp_solve_5.5/lp_presolve.c ****   psdata->cols = presolve_initpsrec(lp, ncols);
 37254               		.loc 2 3324 0
 37255 10012 2D85      		ldd r18,Y+13
 37256 10014 3E85      		ldd r19,Y+14
 37257 10016 8F89      		ldd r24,Y+23
 37258 10018 988D      		ldd r25,Y+24
 37259 1001a B901      		movw r22,r18
 37260 1001c 0E94 0000 		call presolve_initpsrec
 37261 10020 9C01      		movw r18,r24
 37262 10022 8B89      		ldd r24,Y+19
 37263 10024 9C89      		ldd r25,Y+20
 37264 10026 FC01      		movw r30,r24
 37265 10028 3383      		std Z+3,r19
 37266 1002a 2283      		std Z+2,r18
3325:lp_solve_5.5/lp_presolve.c **** 
3326:lp_solve_5.5/lp_presolve.c ****   psdata->epsvalue = PRESOLVE_EPSVALUE;
 37267               		.loc 2 3326 0
 37268 1002c 8F89      		ldd r24,Y+23
 37269 1002e 988D      		ldd r25,Y+24
 37270 10030 865E      		subi r24,-26
 37271 10032 9C4F      		sbci r25,-4
 37272 10034 FC01      		movw r30,r24
 37273 10036 8081      		ld r24,Z
 37274 10038 9181      		ldd r25,Z+1
 37275 1003a A281      		ldd r26,Z+2
 37276 1003c B381      		ldd r27,Z+3
 37277 1003e 2DEC      		ldi r18,lo8(-51)
 37278 10040 3CEC      		ldi r19,lo8(-52)
 37279 10042 4CEC      		ldi r20,lo8(-52)
 37280 10044 5DE3      		ldi r21,lo8(61)
 37281 10046 BC01      		movw r22,r24
 37282 10048 CD01      		movw r24,r26
 37283 1004a 0E94 0000 		call __mulsf3
 37284 1004e DC01      		movw r26,r24
 37285 10050 CB01      		movw r24,r22
 37286 10052 2B89      		ldd r18,Y+19
 37287 10054 3C89      		ldd r19,Y+20
 37288 10056 F901      		movw r30,r18
 37289 10058 848B      		std Z+20,r24
 37290 1005a 958B      		std Z+21,r25
 37291 1005c A68B      		std Z+22,r26
 37292 1005e B78B      		std Z+23,r27
3327:lp_solve_5.5/lp_presolve.c ****   psdata->epspivot = PRESOLVE_EPSPIVOT;
 37293               		.loc 2 3327 0
 37294 10060 2B89      		ldd r18,Y+19
 37295 10062 3C89      		ldd r19,Y+20
 37296 10064 8FE6      		ldi r24,lo8(111)
 37297 10066 92E1      		ldi r25,lo8(18)
 37298 10068 A3E8      		ldi r26,lo8(-125)
 37299 1006a BAE3      		ldi r27,lo8(58)
 37300 1006c F901      		movw r30,r18
 37301 1006e 808F      		std Z+24,r24
 37302 10070 918F      		std Z+25,r25
 37303 10072 A28F      		std Z+26,r26
 37304 10074 B38F      		std Z+27,r27
3328:lp_solve_5.5/lp_presolve.c ****   psdata->forceupdate = TRUE;
 37305               		.loc 2 3328 0
 37306 10076 8B89      		ldd r24,Y+19
 37307 10078 9C89      		ldd r25,Y+20
 37308 1007a 21E0      		ldi r18,lo8(1)
 37309 1007c DC01      		movw r26,r24
 37310 1007e 9496      		adiw r26,36
 37311 10080 2C93      		st X,r18
3329:lp_solve_5.5/lp_presolve.c **** 
3330:lp_solve_5.5/lp_presolve.c ****   /* Save incoming primal bounds */
3331:lp_solve_5.5/lp_presolve.c ****   k = lp->sum + 1;
 37312               		.loc 2 3331 0
 37313 10082 8F89      		ldd r24,Y+23
 37314 10084 988D      		ldd r25,Y+24
 37315 10086 8851      		subi r24,24
 37316 10088 9E4F      		sbci r25,-2
 37317 1008a FC01      		movw r30,r24
 37318 1008c 8081      		ld r24,Z
 37319 1008e 9181      		ldd r25,Z+1
 37320 10090 0196      		adiw r24,1
 37321 10092 9A83      		std Y+2,r25
 37322 10094 8983      		std Y+1,r24
3332:lp_solve_5.5/lp_presolve.c ****   allocREAL(lp, &psdata->pv_lobo, k, FALSE);
 37323               		.loc 2 3332 0
 37324 10096 8B89      		ldd r24,Y+19
 37325 10098 9C89      		ldd r25,Y+20
 37326 1009a BC01      		movw r22,r24
 37327 1009c 645F      		subi r22,-12
 37328 1009e 7F4F      		sbci r23,-1
 37329 100a0 4981      		ldd r20,Y+1
 37330 100a2 5A81      		ldd r21,Y+2
 37331 100a4 8F89      		ldd r24,Y+23
 37332 100a6 988D      		ldd r25,Y+24
 37333 100a8 20E0      		ldi r18,0
 37334 100aa 0E94 0000 		call allocREAL
3333:lp_solve_5.5/lp_presolve.c ****   MEMCOPY(psdata->pv_lobo, lp->orig_lowbo, k);
 37335               		.loc 2 3333 0
 37336 100ae 8981      		ldd r24,Y+1
 37337 100b0 9A81      		ldd r25,Y+2
 37338 100b2 AC01      		movw r20,r24
 37339 100b4 440F      		lsl r20
 37340 100b6 551F      		rol r21
 37341 100b8 440F      		lsl r20
 37342 100ba 551F      		rol r21
 37343 100bc 8F89      		ldd r24,Y+23
 37344 100be 988D      		ldd r25,Y+24
 37345 100c0 8E54      		subi r24,78
 37346 100c2 9D4F      		sbci r25,-3
 37347 100c4 DC01      		movw r26,r24
 37348 100c6 2D91      		ld r18,X+
 37349 100c8 3C91      		ld r19,X
 37350 100ca 8B89      		ldd r24,Y+19
 37351 100cc 9C89      		ldd r25,Y+20
 37352 100ce FC01      		movw r30,r24
 37353 100d0 8485      		ldd r24,Z+12
 37354 100d2 9585      		ldd r25,Z+13
 37355 100d4 B901      		movw r22,r18
 37356 100d6 0E94 0000 		call memcpy
3334:lp_solve_5.5/lp_presolve.c ****   allocREAL(lp, &psdata->pv_upbo, k, FALSE);
 37357               		.loc 2 3334 0
 37358 100da 8B89      		ldd r24,Y+19
 37359 100dc 9C89      		ldd r25,Y+20
 37360 100de BC01      		movw r22,r24
 37361 100e0 665F      		subi r22,-10
 37362 100e2 7F4F      		sbci r23,-1
 37363 100e4 4981      		ldd r20,Y+1
 37364 100e6 5A81      		ldd r21,Y+2
 37365 100e8 8F89      		ldd r24,Y+23
 37366 100ea 988D      		ldd r25,Y+24
 37367 100ec 20E0      		ldi r18,0
 37368 100ee 0E94 0000 		call allocREAL
3335:lp_solve_5.5/lp_presolve.c ****   MEMCOPY(psdata->pv_upbo, lp->orig_upbo, k);
 37369               		.loc 2 3335 0
 37370 100f2 8981      		ldd r24,Y+1
 37371 100f4 9A81      		ldd r25,Y+2
 37372 100f6 AC01      		movw r20,r24
 37373 100f8 440F      		lsl r20
 37374 100fa 551F      		rol r21
 37375 100fc 440F      		lsl r20
 37376 100fe 551F      		rol r21
 37377 10100 8F89      		ldd r24,Y+23
 37378 10102 988D      		ldd r25,Y+24
 37379 10104 8255      		subi r24,82
 37380 10106 9D4F      		sbci r25,-3
 37381 10108 DC01      		movw r26,r24
 37382 1010a 2D91      		ld r18,X+
 37383 1010c 3C91      		ld r19,X
 37384 1010e 8B89      		ldd r24,Y+19
 37385 10110 9C89      		ldd r25,Y+20
 37386 10112 FC01      		movw r30,r24
 37387 10114 8285      		ldd r24,Z+10
 37388 10116 9385      		ldd r25,Z+11
 37389 10118 B901      		movw r22,r18
 37390 1011a 0E94 0000 		call memcpy
3336:lp_solve_5.5/lp_presolve.c **** 
3337:lp_solve_5.5/lp_presolve.c ****   /* Create and initialize dual value (Langrangean and slack) limits */
3338:lp_solve_5.5/lp_presolve.c ****   allocREAL(lp, &psdata->dv_lobo, k, FALSE);
 37391               		.loc 2 3338 0
 37392 1011e 8B89      		ldd r24,Y+19
 37393 10120 9C89      		ldd r25,Y+20
 37394 10122 BC01      		movw r22,r24
 37395 10124 605F      		subi r22,-16
 37396 10126 7F4F      		sbci r23,-1
 37397 10128 4981      		ldd r20,Y+1
 37398 1012a 5A81      		ldd r21,Y+2
 37399 1012c 8F89      		ldd r24,Y+23
 37400 1012e 988D      		ldd r25,Y+24
 37401 10130 20E0      		ldi r18,0
 37402 10132 0E94 0000 		call allocREAL
3339:lp_solve_5.5/lp_presolve.c ****   allocREAL(lp, &psdata->dv_upbo, k, FALSE);
 37403               		.loc 2 3339 0
 37404 10136 8B89      		ldd r24,Y+19
 37405 10138 9C89      		ldd r25,Y+20
 37406 1013a BC01      		movw r22,r24
 37407 1013c 625F      		subi r22,-14
 37408 1013e 7F4F      		sbci r23,-1
 37409 10140 4981      		ldd r20,Y+1
 37410 10142 5A81      		ldd r21,Y+2
 37411 10144 8F89      		ldd r24,Y+23
 37412 10146 988D      		ldd r25,Y+24
 37413 10148 20E0      		ldi r18,0
 37414 1014a 0E94 0000 		call allocREAL
3340:lp_solve_5.5/lp_presolve.c ****   for(i = 0; i <= nrows; i++) {
 37415               		.loc 2 3340 0
 37416 1014e 1C82      		std Y+4,__zero_reg__
 37417 10150 1B82      		std Y+3,__zero_reg__
 37418 10152 00C0      		rjmp .L1591
 37419               	.L1594:
3341:lp_solve_5.5/lp_presolve.c ****     psdata->dv_lobo[i] = (is_constr_type(lp, i, EQ) ? -lp->infinite : 0);
 37420               		.loc 2 3341 0
 37421 10154 8B89      		ldd r24,Y+19
 37422 10156 9C89      		ldd r25,Y+20
 37423 10158 DC01      		movw r26,r24
 37424 1015a 5096      		adiw r26,16
 37425 1015c 2D91      		ld r18,X+
 37426 1015e 3C91      		ld r19,X
 37427 10160 5197      		sbiw r26,16+1
 37428 10162 8B81      		ldd r24,Y+3
 37429 10164 9C81      		ldd r25,Y+4
 37430 10166 880F      		lsl r24
 37431 10168 991F      		rol r25
 37432 1016a 880F      		lsl r24
 37433 1016c 991F      		rol r25
 37434 1016e 8901      		movw r16,r18
 37435 10170 080F      		add r16,r24
 37436 10172 191F      		adc r17,r25
 37437 10174 2B81      		ldd r18,Y+3
 37438 10176 3C81      		ldd r19,Y+4
 37439 10178 8F89      		ldd r24,Y+23
 37440 1017a 988D      		ldd r25,Y+24
 37441 1017c 43E0      		ldi r20,lo8(3)
 37442 1017e 50E0      		ldi r21,0
 37443 10180 B901      		movw r22,r18
 37444 10182 0E94 0000 		call is_constr_type
 37445 10186 8823      		tst r24
 37446 10188 01F0      		breq .L1592
 37447               		.loc 2 3341 0 is_stmt 0 discriminator 1
 37448 1018a 8F89      		ldd r24,Y+23
 37449 1018c 988D      		ldd r25,Y+24
 37450 1018e 865F      		subi r24,-10
 37451 10190 9C4F      		sbci r25,-4
 37452 10192 FC01      		movw r30,r24
 37453 10194 8081      		ld r24,Z
 37454 10196 9181      		ldd r25,Z+1
 37455 10198 A281      		ldd r26,Z+2
 37456 1019a B381      		ldd r27,Z+3
 37457 1019c B058      		subi r27,0x80
 37458 1019e 00C0      		rjmp .L1593
 37459               	.L1592:
 37460               		.loc 2 3341 0 discriminator 2
 37461 101a0 80E0      		ldi r24,0
 37462 101a2 90E0      		ldi r25,0
 37463 101a4 DC01      		movw r26,r24
 37464               	.L1593:
 37465               		.loc 2 3341 0 discriminator 4
 37466 101a6 F801      		movw r30,r16
 37467 101a8 8083      		st Z,r24
 37468 101aa 9183      		std Z+1,r25
 37469 101ac A283      		std Z+2,r26
 37470 101ae B383      		std Z+3,r27
3342:lp_solve_5.5/lp_presolve.c ****     psdata->dv_upbo[i] = lp->infinite;
 37471               		.loc 2 3342 0 is_stmt 1 discriminator 4
 37472 101b0 8B89      		ldd r24,Y+19
 37473 101b2 9C89      		ldd r25,Y+20
 37474 101b4 DC01      		movw r26,r24
 37475 101b6 1E96      		adiw r26,14
 37476 101b8 2D91      		ld r18,X+
 37477 101ba 3C91      		ld r19,X
 37478 101bc 1F97      		sbiw r26,14+1
 37479 101be 8B81      		ldd r24,Y+3
 37480 101c0 9C81      		ldd r25,Y+4
 37481 101c2 880F      		lsl r24
 37482 101c4 991F      		rol r25
 37483 101c6 880F      		lsl r24
 37484 101c8 991F      		rol r25
 37485 101ca 280F      		add r18,r24
 37486 101cc 391F      		adc r19,r25
 37487 101ce 8F89      		ldd r24,Y+23
 37488 101d0 988D      		ldd r25,Y+24
 37489 101d2 865F      		subi r24,-10
 37490 101d4 9C4F      		sbci r25,-4
 37491 101d6 FC01      		movw r30,r24
 37492 101d8 8081      		ld r24,Z
 37493 101da 9181      		ldd r25,Z+1
 37494 101dc A281      		ldd r26,Z+2
 37495 101de B381      		ldd r27,Z+3
 37496 101e0 F901      		movw r30,r18
 37497 101e2 8083      		st Z,r24
 37498 101e4 9183      		std Z+1,r25
 37499 101e6 A283      		std Z+2,r26
 37500 101e8 B383      		std Z+3,r27
3340:lp_solve_5.5/lp_presolve.c ****   for(i = 0; i <= nrows; i++) {
 37501               		.loc 2 3340 0 discriminator 4
 37502 101ea 8B81      		ldd r24,Y+3
 37503 101ec 9C81      		ldd r25,Y+4
 37504 101ee 0196      		adiw r24,1
 37505 101f0 9C83      		std Y+4,r25
 37506 101f2 8B83      		std Y+3,r24
 37507               	.L1591:
3340:lp_solve_5.5/lp_presolve.c ****   for(i = 0; i <= nrows; i++) {
 37508               		.loc 2 3340 0 is_stmt 0 discriminator 2
 37509 101f4 2B81      		ldd r18,Y+3
 37510 101f6 3C81      		ldd r19,Y+4
 37511 101f8 8F85      		ldd r24,Y+15
 37512 101fa 9889      		ldd r25,Y+16
 37513 101fc 8217      		cp r24,r18
 37514 101fe 9307      		cpc r25,r19
 37515 10200 04F0      		brlt .+2
 37516 10202 00C0      		rjmp .L1594
3343:lp_solve_5.5/lp_presolve.c ****   }
3344:lp_solve_5.5/lp_presolve.c ****   k--;
 37517               		.loc 2 3344 0 is_stmt 1
 37518 10204 8981      		ldd r24,Y+1
 37519 10206 9A81      		ldd r25,Y+2
 37520 10208 0197      		sbiw r24,1
 37521 1020a 9A83      		std Y+2,r25
 37522 1020c 8983      		std Y+1,r24
3345:lp_solve_5.5/lp_presolve.c ****   for(; i <= k; i++) {
 37523               		.loc 2 3345 0
 37524 1020e 00C0      		rjmp .L1595
 37525               	.L1596:
3346:lp_solve_5.5/lp_presolve.c ****     psdata->dv_lobo[i] = 0;
 37526               		.loc 2 3346 0 discriminator 2
 37527 10210 8B89      		ldd r24,Y+19
 37528 10212 9C89      		ldd r25,Y+20
 37529 10214 DC01      		movw r26,r24
 37530 10216 5096      		adiw r26,16
 37531 10218 2D91      		ld r18,X+
 37532 1021a 3C91      		ld r19,X
 37533 1021c 5197      		sbiw r26,16+1
 37534 1021e 8B81      		ldd r24,Y+3
 37535 10220 9C81      		ldd r25,Y+4
 37536 10222 880F      		lsl r24
 37537 10224 991F      		rol r25
 37538 10226 880F      		lsl r24
 37539 10228 991F      		rol r25
 37540 1022a 820F      		add r24,r18
 37541 1022c 931F      		adc r25,r19
 37542 1022e FC01      		movw r30,r24
 37543 10230 1082      		st Z,__zero_reg__
 37544 10232 1182      		std Z+1,__zero_reg__
 37545 10234 1282      		std Z+2,__zero_reg__
 37546 10236 1382      		std Z+3,__zero_reg__
3347:lp_solve_5.5/lp_presolve.c ****     psdata->dv_upbo[i] = lp->infinite;
 37547               		.loc 2 3347 0 discriminator 2
 37548 10238 8B89      		ldd r24,Y+19
 37549 1023a 9C89      		ldd r25,Y+20
 37550 1023c DC01      		movw r26,r24
 37551 1023e 1E96      		adiw r26,14
 37552 10240 2D91      		ld r18,X+
 37553 10242 3C91      		ld r19,X
 37554 10244 1F97      		sbiw r26,14+1
 37555 10246 8B81      		ldd r24,Y+3
 37556 10248 9C81      		ldd r25,Y+4
 37557 1024a 880F      		lsl r24
 37558 1024c 991F      		rol r25
 37559 1024e 880F      		lsl r24
 37560 10250 991F      		rol r25
 37561 10252 280F      		add r18,r24
 37562 10254 391F      		adc r19,r25
 37563 10256 8F89      		ldd r24,Y+23
 37564 10258 988D      		ldd r25,Y+24
 37565 1025a 865F      		subi r24,-10
 37566 1025c 9C4F      		sbci r25,-4
 37567 1025e FC01      		movw r30,r24
 37568 10260 8081      		ld r24,Z
 37569 10262 9181      		ldd r25,Z+1
 37570 10264 A281      		ldd r26,Z+2
 37571 10266 B381      		ldd r27,Z+3
 37572 10268 F901      		movw r30,r18
 37573 1026a 8083      		st Z,r24
 37574 1026c 9183      		std Z+1,r25
 37575 1026e A283      		std Z+2,r26
 37576 10270 B383      		std Z+3,r27
3345:lp_solve_5.5/lp_presolve.c ****   for(; i <= k; i++) {
 37577               		.loc 2 3345 0 discriminator 2
 37578 10272 8B81      		ldd r24,Y+3
 37579 10274 9C81      		ldd r25,Y+4
 37580 10276 0196      		adiw r24,1
 37581 10278 9C83      		std Y+4,r25
 37582 1027a 8B83      		std Y+3,r24
 37583               	.L1595:
3345:lp_solve_5.5/lp_presolve.c ****   for(; i <= k; i++) {
 37584               		.loc 2 3345 0 is_stmt 0 discriminator 1
 37585 1027c 2B81      		ldd r18,Y+3
 37586 1027e 3C81      		ldd r19,Y+4
 37587 10280 8981      		ldd r24,Y+1
 37588 10282 9A81      		ldd r25,Y+2
 37589 10284 8217      		cp r24,r18
 37590 10286 9307      		cpc r25,r19
 37591 10288 04F4      		brge .L1596
3348:lp_solve_5.5/lp_presolve.c ****   }
3349:lp_solve_5.5/lp_presolve.c **** 
3350:lp_solve_5.5/lp_presolve.c ****  /* Create NZ count and sign arrays, and do general initialization of row bounds */
3351:lp_solve_5.5/lp_presolve.c ****   createLink(nrows, &psdata->EQmap, NULL);
 37592               		.loc 2 3351 0 is_stmt 1
 37593 1028a 8B89      		ldd r24,Y+19
 37594 1028c 9C89      		ldd r25,Y+20
 37595 1028e 9C01      		movw r18,r24
 37596 10290 2C5F      		subi r18,-4
 37597 10292 3F4F      		sbci r19,-1
 37598 10294 8F85      		ldd r24,Y+15
 37599 10296 9889      		ldd r25,Y+16
 37600 10298 40E0      		ldi r20,0
 37601 1029a 50E0      		ldi r21,0
 37602 1029c B901      		movw r22,r18
 37603 1029e 0E94 0000 		call createLink
3352:lp_solve_5.5/lp_presolve.c ****   createLink(nrows, &psdata->LTmap, NULL);
 37604               		.loc 2 3352 0
 37605 102a2 8B89      		ldd r24,Y+19
 37606 102a4 9C89      		ldd r25,Y+20
 37607 102a6 9C01      		movw r18,r24
 37608 102a8 2A5F      		subi r18,-6
 37609 102aa 3F4F      		sbci r19,-1
 37610 102ac 8F85      		ldd r24,Y+15
 37611 102ae 9889      		ldd r25,Y+16
 37612 102b0 40E0      		ldi r20,0
 37613 102b2 50E0      		ldi r21,0
 37614 102b4 B901      		movw r22,r18
 37615 102b6 0E94 0000 		call createLink
3353:lp_solve_5.5/lp_presolve.c ****   createLink(nrows, &psdata->INTmap, NULL);
 37616               		.loc 2 3353 0
 37617 102ba 8B89      		ldd r24,Y+19
 37618 102bc 9C89      		ldd r25,Y+20
 37619 102be 9C01      		movw r18,r24
 37620 102c0 285F      		subi r18,-8
 37621 102c2 3F4F      		sbci r19,-1
 37622 102c4 8F85      		ldd r24,Y+15
 37623 102c6 9889      		ldd r25,Y+16
 37624 102c8 40E0      		ldi r20,0
 37625 102ca 50E0      		ldi r21,0
 37626 102cc B901      		movw r22,r18
 37627 102ce 0E94 0000 		call createLink
3354:lp_solve_5.5/lp_presolve.c ****   for(i = 1; i <= nrows; i++) {
 37628               		.loc 2 3354 0
 37629 102d2 81E0      		ldi r24,lo8(1)
 37630 102d4 90E0      		ldi r25,0
 37631 102d6 9C83      		std Y+4,r25
 37632 102d8 8B83      		std Y+3,r24
 37633 102da 00C0      		rjmp .L1597
 37634               	.L1602:
3355:lp_solve_5.5/lp_presolve.c ****     switch (get_constr_type(lp, i)) {
 37635               		.loc 2 3355 0
 37636 102dc 2B81      		ldd r18,Y+3
 37637 102de 3C81      		ldd r19,Y+4
 37638 102e0 8F89      		ldd r24,Y+23
 37639 102e2 988D      		ldd r25,Y+24
 37640 102e4 B901      		movw r22,r18
 37641 102e6 0E94 0000 		call get_constr_type
 37642 102ea 8130      		cpi r24,1
 37643 102ec 9105      		cpc r25,__zero_reg__
 37644 102ee 01F0      		breq .L1599
 37645 102f0 0397      		sbiw r24,3
 37646 102f2 01F0      		breq .L1600
 37647 102f4 00C0      		rjmp .L1598
 37648               	.L1599:
3356:lp_solve_5.5/lp_presolve.c ****       case LE: appendLink(psdata->LTmap, i);
 37649               		.loc 2 3356 0
 37650 102f6 8B89      		ldd r24,Y+19
 37651 102f8 9C89      		ldd r25,Y+20
 37652 102fa DC01      		movw r26,r24
 37653 102fc 1696      		adiw r26,6
 37654 102fe 8D91      		ld r24,X+
 37655 10300 9C91      		ld r25,X
 37656 10302 1797      		sbiw r26,6+1
 37657 10304 2B81      		ldd r18,Y+3
 37658 10306 3C81      		ldd r19,Y+4
 37659 10308 B901      		movw r22,r18
 37660 1030a 0E94 0000 		call appendLink
3357:lp_solve_5.5/lp_presolve.c ****                 break;
 37661               		.loc 2 3357 0
 37662 1030e 00C0      		rjmp .L1598
 37663               	.L1600:
3358:lp_solve_5.5/lp_presolve.c ****       case EQ: appendLink(psdata->EQmap, i);
 37664               		.loc 2 3358 0
 37665 10310 8B89      		ldd r24,Y+19
 37666 10312 9C89      		ldd r25,Y+20
 37667 10314 FC01      		movw r30,r24
 37668 10316 8481      		ldd r24,Z+4
 37669 10318 9581      		ldd r25,Z+5
 37670 1031a 2B81      		ldd r18,Y+3
 37671 1031c 3C81      		ldd r19,Y+4
 37672 1031e B901      		movw r22,r18
 37673 10320 0E94 0000 		call appendLink
3359:lp_solve_5.5/lp_presolve.c ****                 break;
 37674               		.loc 2 3359 0
 37675 10324 0000      		nop
 37676               	.L1598:
3360:lp_solve_5.5/lp_presolve.c ****     }
3361:lp_solve_5.5/lp_presolve.c ****     k = mat_rowlength(mat, i);
 37677               		.loc 2 3361 0
 37678 10326 2B81      		ldd r18,Y+3
 37679 10328 3C81      		ldd r19,Y+4
 37680 1032a 8989      		ldd r24,Y+17
 37681 1032c 9A89      		ldd r25,Y+18
 37682 1032e B901      		movw r22,r18
 37683 10330 0E94 0000 		call mat_rowlength
 37684 10334 9A83      		std Y+2,r25
 37685 10336 8983      		std Y+1,r24
3362:lp_solve_5.5/lp_presolve.c ****     if((lp->int_vars > 0) && (k > 0))
 37686               		.loc 2 3362 0
 37687 10338 8F89      		ldd r24,Y+23
 37688 1033a 988D      		ldd r25,Y+24
 37689 1033c 8257      		subi r24,114
 37690 1033e 9D4F      		sbci r25,-3
 37691 10340 DC01      		movw r26,r24
 37692 10342 8D91      		ld r24,X+
 37693 10344 9C91      		ld r25,X
 37694 10346 1816      		cp __zero_reg__,r24
 37695 10348 1906      		cpc __zero_reg__,r25
 37696 1034a 04F4      		brge .L1601
 37697               		.loc 2 3362 0 is_stmt 0 discriminator 1
 37698 1034c 8981      		ldd r24,Y+1
 37699 1034e 9A81      		ldd r25,Y+2
 37700 10350 1816      		cp __zero_reg__,r24
 37701 10352 1906      		cpc __zero_reg__,r25
 37702 10354 04F4      		brge .L1601
3363:lp_solve_5.5/lp_presolve.c ****       appendLink(psdata->INTmap, i);
 37703               		.loc 2 3363 0 is_stmt 1
 37704 10356 8B89      		ldd r24,Y+19
 37705 10358 9C89      		ldd r25,Y+20
 37706 1035a FC01      		movw r30,r24
 37707 1035c 8085      		ldd r24,Z+8
 37708 1035e 9185      		ldd r25,Z+9
 37709 10360 2B81      		ldd r18,Y+3
 37710 10362 3C81      		ldd r19,Y+4
 37711 10364 B901      		movw r22,r18
 37712 10366 0E94 0000 		call appendLink
 37713               	.L1601:
3354:lp_solve_5.5/lp_presolve.c ****     switch (get_constr_type(lp, i)) {
 37714               		.loc 2 3354 0 discriminator 2
 37715 1036a 8B81      		ldd r24,Y+3
 37716 1036c 9C81      		ldd r25,Y+4
 37717 1036e 0196      		adiw r24,1
 37718 10370 9C83      		std Y+4,r25
 37719 10372 8B83      		std Y+3,r24
 37720               	.L1597:
3354:lp_solve_5.5/lp_presolve.c ****     switch (get_constr_type(lp, i)) {
 37721               		.loc 2 3354 0 is_stmt 0 discriminator 1
 37722 10374 2B81      		ldd r18,Y+3
 37723 10376 3C81      		ldd r19,Y+4
 37724 10378 8F85      		ldd r24,Y+15
 37725 1037a 9889      		ldd r25,Y+16
 37726 1037c 8217      		cp r24,r18
 37727 1037e 9307      		cpc r25,r19
 37728 10380 04F0      		brlt .+2
 37729 10382 00C0      		rjmp .L1602
3364:lp_solve_5.5/lp_presolve.c ****   }
3365:lp_solve_5.5/lp_presolve.c **** 
3366:lp_solve_5.5/lp_presolve.c ****   /* Seek to reduce set of sum(INT*INT) rows (mainly for GCD coefficient reductions) */
3367:lp_solve_5.5/lp_presolve.c ****   if(psdata->INTmap->count > 0)
 37730               		.loc 2 3367 0 is_stmt 1
 37731 10384 8B89      		ldd r24,Y+19
 37732 10386 9C89      		ldd r25,Y+20
 37733 10388 DC01      		movw r26,r24
 37734 1038a 1896      		adiw r26,8
 37735 1038c 8D91      		ld r24,X+
 37736 1038e 9C91      		ld r25,X
 37737 10390 1997      		sbiw r26,8+1
 37738 10392 FC01      		movw r30,r24
 37739 10394 8281      		ldd r24,Z+2
 37740 10396 9381      		ldd r25,Z+3
 37741 10398 1816      		cp __zero_reg__,r24
 37742 1039a 1906      		cpc __zero_reg__,r25
 37743 1039c 04F0      		brlt .+2
 37744 1039e 00C0      		rjmp .L1603
3368:lp_solve_5.5/lp_presolve.c ****   for(i = 1; i <= nrows; i++) {
 37745               		.loc 2 3368 0
 37746 103a0 81E0      		ldi r24,lo8(1)
 37747 103a2 90E0      		ldi r25,0
 37748 103a4 9C83      		std Y+4,r25
 37749 103a6 8B83      		std Y+3,r24
 37750 103a8 00C0      		rjmp .L1604
 37751               	.L1622:
3369:lp_solve_5.5/lp_presolve.c ****     if(!isActiveLink(psdata->INTmap, i))
 37752               		.loc 2 3369 0
 37753 103aa 8B89      		ldd r24,Y+19
 37754 103ac 9C89      		ldd r25,Y+20
 37755 103ae DC01      		movw r26,r24
 37756 103b0 1896      		adiw r26,8
 37757 103b2 8D91      		ld r24,X+
 37758 103b4 9C91      		ld r25,X
 37759 103b6 1997      		sbiw r26,8+1
 37760 103b8 2B81      		ldd r18,Y+3
 37761 103ba 3C81      		ldd r19,Y+4
 37762 103bc B901      		movw r22,r18
 37763 103be 0E94 0000 		call isActiveLink
 37764 103c2 8823      		tst r24
 37765 103c4 01F4      		brne .+2
 37766 103c6 00C0      		rjmp .L1626
3370:lp_solve_5.5/lp_presolve.c ****       continue;
3371:lp_solve_5.5/lp_presolve.c ****     /* Disqualify if there is a non-int variable, otherwise find smallest absolute fractional row v
3372:lp_solve_5.5/lp_presolve.c ****     ix = mat->row_end[i - 1];
 37767               		.loc 2 3372 0
 37768 103c8 8989      		ldd r24,Y+17
 37769 103ca 9A89      		ldd r25,Y+18
 37770 103cc FC01      		movw r30,r24
 37771 103ce 208D      		ldd r18,Z+24
 37772 103d0 318D      		ldd r19,Z+25
 37773 103d2 8B81      		ldd r24,Y+3
 37774 103d4 9C81      		ldd r25,Y+4
 37775 103d6 8150      		subi r24,1
 37776 103d8 9048      		sbci r25,-128
 37777 103da 880F      		lsl r24
 37778 103dc 991F      		rol r25
 37779 103de 820F      		add r24,r18
 37780 103e0 931F      		adc r25,r19
 37781 103e2 DC01      		movw r26,r24
 37782 103e4 8D91      		ld r24,X+
 37783 103e6 9C91      		ld r25,X
 37784 103e8 9E83      		std Y+6,r25
 37785 103ea 8D83      		std Y+5,r24
3373:lp_solve_5.5/lp_presolve.c ****     ixx = mat->row_end[i];
 37786               		.loc 2 3373 0
 37787 103ec 8989      		ldd r24,Y+17
 37788 103ee 9A89      		ldd r25,Y+18
 37789 103f0 FC01      		movw r30,r24
 37790 103f2 208D      		ldd r18,Z+24
 37791 103f4 318D      		ldd r19,Z+25
 37792 103f6 8B81      		ldd r24,Y+3
 37793 103f8 9C81      		ldd r25,Y+4
 37794 103fa 880F      		lsl r24
 37795 103fc 991F      		rol r25
 37796 103fe 820F      		add r24,r18
 37797 10400 931F      		adc r25,r19
 37798 10402 DC01      		movw r26,r24
 37799 10404 8D91      		ld r24,X+
 37800 10406 9C91      		ld r25,X
 37801 10408 9E8B      		std Y+22,r25
 37802 1040a 8D8B      		std Y+21,r24
3374:lp_solve_5.5/lp_presolve.c ****     colnr = 0;
 37803               		.loc 2 3374 0
 37804 1040c 1886      		std Y+8,__zero_reg__
 37805 1040e 1F82      		std Y+7,__zero_reg__
3375:lp_solve_5.5/lp_presolve.c ****     for(; ix < ixx; ix++) {
 37806               		.loc 2 3375 0
 37807 10410 00C0      		rjmp .L1607
 37808               	.L1615:
3376:lp_solve_5.5/lp_presolve.c ****       if(!is_int(lp, ROW_MAT_COLNR(ix))) {
 37809               		.loc 2 3376 0
 37810 10412 8989      		ldd r24,Y+17
 37811 10414 9A89      		ldd r25,Y+18
 37812 10416 FC01      		movw r30,r24
 37813 10418 2485      		ldd r18,Z+12
 37814 1041a 3585      		ldd r19,Z+13
 37815 1041c 8989      		ldd r24,Y+17
 37816 1041e 9A89      		ldd r25,Y+18
 37817 10420 DC01      		movw r26,r24
 37818 10422 5696      		adiw r26,22
 37819 10424 4D91      		ld r20,X+
 37820 10426 5C91      		ld r21,X
 37821 10428 5797      		sbiw r26,22+1
 37822 1042a 8D81      		ldd r24,Y+5
 37823 1042c 9E81      		ldd r25,Y+6
 37824 1042e 880F      		lsl r24
 37825 10430 991F      		rol r25
 37826 10432 840F      		add r24,r20
 37827 10434 951F      		adc r25,r21
 37828 10436 FC01      		movw r30,r24
 37829 10438 8081      		ld r24,Z
 37830 1043a 9181      		ldd r25,Z+1
 37831 1043c 880F      		lsl r24
 37832 1043e 991F      		rol r25
 37833 10440 820F      		add r24,r18
 37834 10442 931F      		adc r25,r19
 37835 10444 DC01      		movw r26,r24
 37836 10446 2D91      		ld r18,X+
 37837 10448 3C91      		ld r19,X
 37838 1044a 8F89      		ldd r24,Y+23
 37839 1044c 988D      		ldd r25,Y+24
 37840 1044e B901      		movw r22,r18
 37841 10450 0E94 0000 		call is_int
 37842 10454 8823      		tst r24
 37843 10456 01F4      		brne .L1608
3377:lp_solve_5.5/lp_presolve.c ****         removeLink(psdata->INTmap, i);
 37844               		.loc 2 3377 0
 37845 10458 8B89      		ldd r24,Y+19
 37846 1045a 9C89      		ldd r25,Y+20
 37847 1045c FC01      		movw r30,r24
 37848 1045e 8085      		ldd r24,Z+8
 37849 10460 9185      		ldd r25,Z+9
 37850 10462 2B81      		ldd r18,Y+3
 37851 10464 3C81      		ldd r19,Y+4
 37852 10466 B901      		movw r22,r18
 37853 10468 0E94 0000 		call removeLink
3378:lp_solve_5.5/lp_presolve.c ****         break;
 37854               		.loc 2 3378 0
 37855 1046c 00C0      		rjmp .L1609
 37856               	.L1608:
3379:lp_solve_5.5/lp_presolve.c ****       }
3380:lp_solve_5.5/lp_presolve.c ****       hold = fabs(ROW_MAT_VALUE(ix));
 37857               		.loc 2 3380 0
 37858 1046e 8989      		ldd r24,Y+17
 37859 10470 9A89      		ldd r25,Y+18
 37860 10472 DC01      		movw r26,r24
 37861 10474 5096      		adiw r26,16
 37862 10476 2D91      		ld r18,X+
 37863 10478 3C91      		ld r19,X
 37864 1047a 5197      		sbiw r26,16+1
 37865 1047c 8989      		ldd r24,Y+17
 37866 1047e 9A89      		ldd r25,Y+18
 37867 10480 FC01      		movw r30,r24
 37868 10482 4689      		ldd r20,Z+22
 37869 10484 5789      		ldd r21,Z+23
 37870 10486 8D81      		ldd r24,Y+5
 37871 10488 9E81      		ldd r25,Y+6
 37872 1048a 880F      		lsl r24
 37873 1048c 991F      		rol r25
 37874 1048e 840F      		add r24,r20
 37875 10490 951F      		adc r25,r21
 37876 10492 DC01      		movw r26,r24
 37877 10494 8D91      		ld r24,X+
 37878 10496 9C91      		ld r25,X
 37879 10498 880F      		lsl r24
 37880 1049a 991F      		rol r25
 37881 1049c 880F      		lsl r24
 37882 1049e 991F      		rol r25
 37883 104a0 820F      		add r24,r18
 37884 104a2 931F      		adc r25,r19
 37885 104a4 FC01      		movw r30,r24
 37886 104a6 8081      		ld r24,Z
 37887 104a8 9181      		ldd r25,Z+1
 37888 104aa A281      		ldd r26,Z+2
 37889 104ac B381      		ldd r27,Z+3
 37890 104ae BF77      		andi r27,0x7f
 37891 104b0 8987      		std Y+9,r24
 37892 104b2 9A87      		std Y+10,r25
 37893 104b4 AB87      		std Y+11,r26
 37894 104b6 BC87      		std Y+12,r27
3381:lp_solve_5.5/lp_presolve.c ****       hold = fmod(hold, 1);
 37895               		.loc 2 3381 0
 37896 104b8 8985      		ldd r24,Y+9
 37897 104ba 9A85      		ldd r25,Y+10
 37898 104bc AB85      		ldd r26,Y+11
 37899 104be BC85      		ldd r27,Y+12
 37900 104c0 20E0      		ldi r18,0
 37901 104c2 30E0      		ldi r19,0
 37902 104c4 40E8      		ldi r20,lo8(-128)
 37903 104c6 5FE3      		ldi r21,lo8(63)
 37904 104c8 BC01      		movw r22,r24
 37905 104ca CD01      		movw r24,r26
 37906 104cc 0E94 0000 		call fmod
 37907 104d0 DC01      		movw r26,r24
 37908 104d2 CB01      		movw r24,r22
 37909 104d4 8987      		std Y+9,r24
 37910 104d6 9A87      		std Y+10,r25
 37911 104d8 AB87      		std Y+11,r26
 37912 104da BC87      		std Y+12,r27
3382:lp_solve_5.5/lp_presolve.c ****       /* Adjust colnr to be a decimal scalar */
3383:lp_solve_5.5/lp_presolve.c ****       for(k = 0; (k <= MAX_FRACSCALE) && (hold+psdata->epsvalue < 1); k++)
 37913               		.loc 2 3383 0
 37914 104dc 1A82      		std Y+2,__zero_reg__
 37915 104de 1982      		std Y+1,__zero_reg__
 37916 104e0 00C0      		rjmp .L1610
 37917               	.L1612:
3384:lp_solve_5.5/lp_presolve.c ****         hold *= 10;
 37918               		.loc 2 3384 0 discriminator 4
 37919 104e2 20E0      		ldi r18,0
 37920 104e4 30E0      		ldi r19,0
 37921 104e6 40E2      		ldi r20,lo8(32)
 37922 104e8 51E4      		ldi r21,lo8(65)
 37923 104ea 6985      		ldd r22,Y+9
 37924 104ec 7A85      		ldd r23,Y+10
 37925 104ee 8B85      		ldd r24,Y+11
 37926 104f0 9C85      		ldd r25,Y+12
 37927 104f2 0E94 0000 		call __mulsf3
 37928 104f6 DC01      		movw r26,r24
 37929 104f8 CB01      		movw r24,r22
 37930 104fa 8987      		std Y+9,r24
 37931 104fc 9A87      		std Y+10,r25
 37932 104fe AB87      		std Y+11,r26
 37933 10500 BC87      		std Y+12,r27
3383:lp_solve_5.5/lp_presolve.c ****         hold *= 10;
 37934               		.loc 2 3383 0 discriminator 4
 37935 10502 8981      		ldd r24,Y+1
 37936 10504 9A81      		ldd r25,Y+2
 37937 10506 0196      		adiw r24,1
 37938 10508 9A83      		std Y+2,r25
 37939 1050a 8983      		std Y+1,r24
 37940               	.L1610:
3383:lp_solve_5.5/lp_presolve.c ****         hold *= 10;
 37941               		.loc 2 3383 0 is_stmt 0 discriminator 1
 37942 1050c 8981      		ldd r24,Y+1
 37943 1050e 9A81      		ldd r25,Y+2
 37944 10510 0797      		sbiw r24,7
 37945 10512 04F4      		brge .L1611
3383:lp_solve_5.5/lp_presolve.c ****         hold *= 10;
 37946               		.loc 2 3383 0 discriminator 3
 37947 10514 8B89      		ldd r24,Y+19
 37948 10516 9C89      		ldd r25,Y+20
 37949 10518 FC01      		movw r30,r24
 37950 1051a 8489      		ldd r24,Z+20
 37951 1051c 9589      		ldd r25,Z+21
 37952 1051e A689      		ldd r26,Z+22
 37953 10520 B789      		ldd r27,Z+23
 37954 10522 2985      		ldd r18,Y+9
 37955 10524 3A85      		ldd r19,Y+10
 37956 10526 4B85      		ldd r20,Y+11
 37957 10528 5C85      		ldd r21,Y+12
 37958 1052a BC01      		movw r22,r24
 37959 1052c CD01      		movw r24,r26
 37960 1052e 0E94 0000 		call __addsf3
 37961 10532 DC01      		movw r26,r24
 37962 10534 CB01      		movw r24,r22
 37963 10536 20E0      		ldi r18,0
 37964 10538 30E0      		ldi r19,0
 37965 1053a 40E8      		ldi r20,lo8(-128)
 37966 1053c 5FE3      		ldi r21,lo8(63)
 37967 1053e BC01      		movw r22,r24
 37968 10540 CD01      		movw r24,r26
 37969 10542 0E94 0000 		call __ltsf2
 37970 10546 8823      		tst r24
 37971 10548 04F0      		brlt .L1612
 37972               	.L1611:
3385:lp_solve_5.5/lp_presolve.c ****       if(k > MAX_FRACSCALE) {
 37973               		.loc 2 3385 0 is_stmt 1
 37974 1054a 8981      		ldd r24,Y+1
 37975 1054c 9A81      		ldd r25,Y+2
 37976 1054e 0797      		sbiw r24,7
 37977 10550 04F0      		brlt .L1613
3386:lp_solve_5.5/lp_presolve.c ****         removeLink(psdata->INTmap, i);
 37978               		.loc 2 3386 0
 37979 10552 8B89      		ldd r24,Y+19
 37980 10554 9C89      		ldd r25,Y+20
 37981 10556 DC01      		movw r26,r24
 37982 10558 1896      		adiw r26,8
 37983 1055a 8D91      		ld r24,X+
 37984 1055c 9C91      		ld r25,X
 37985 1055e 1997      		sbiw r26,8+1
 37986 10560 2B81      		ldd r18,Y+3
 37987 10562 3C81      		ldd r19,Y+4
 37988 10564 B901      		movw r22,r18
 37989 10566 0E94 0000 		call removeLink
3387:lp_solve_5.5/lp_presolve.c ****         break;
 37990               		.loc 2 3387 0
 37991 1056a 00C0      		rjmp .L1609
 37992               	.L1613:
3388:lp_solve_5.5/lp_presolve.c ****       }
3389:lp_solve_5.5/lp_presolve.c ****       SETMAX(colnr, k);
 37993               		.loc 2 3389 0
 37994 1056c 2F81      		ldd r18,Y+7
 37995 1056e 3885      		ldd r19,Y+8
 37996 10570 8981      		ldd r24,Y+1
 37997 10572 9A81      		ldd r25,Y+2
 37998 10574 2817      		cp r18,r24
 37999 10576 3907      		cpc r19,r25
 38000 10578 04F4      		brge .L1614
 38001               		.loc 2 3389 0 is_stmt 0 discriminator 1
 38002 1057a 8981      		ldd r24,Y+1
 38003 1057c 9A81      		ldd r25,Y+2
 38004 1057e 9887      		std Y+8,r25
 38005 10580 8F83      		std Y+7,r24
 38006               	.L1614:
3375:lp_solve_5.5/lp_presolve.c ****       if(!is_int(lp, ROW_MAT_COLNR(ix))) {
 38007               		.loc 2 3375 0 is_stmt 1
 38008 10582 8D81      		ldd r24,Y+5
 38009 10584 9E81      		ldd r25,Y+6
 38010 10586 0196      		adiw r24,1
 38011 10588 9E83      		std Y+6,r25
 38012 1058a 8D83      		std Y+5,r24
 38013               	.L1607:
3375:lp_solve_5.5/lp_presolve.c ****       if(!is_int(lp, ROW_MAT_COLNR(ix))) {
 38014               		.loc 2 3375 0 is_stmt 0 discriminator 1
 38015 1058c 2D81      		ldd r18,Y+5
 38016 1058e 3E81      		ldd r19,Y+6
 38017 10590 8D89      		ldd r24,Y+21
 38018 10592 9E89      		ldd r25,Y+22
 38019 10594 2817      		cp r18,r24
 38020 10596 3907      		cpc r19,r25
 38021 10598 04F4      		brge .+2
 38022 1059a 00C0      		rjmp .L1615
 38023               	.L1609:
3390:lp_solve_5.5/lp_presolve.c ****     }
3391:lp_solve_5.5/lp_presolve.c ****     if(!isActiveLink(psdata->INTmap, i))
 38024               		.loc 2 3391 0 is_stmt 1
 38025 1059c 8B89      		ldd r24,Y+19
 38026 1059e 9C89      		ldd r25,Y+20
 38027 105a0 FC01      		movw r30,r24
 38028 105a2 8085      		ldd r24,Z+8
 38029 105a4 9185      		ldd r25,Z+9
 38030 105a6 2B81      		ldd r18,Y+3
 38031 105a8 3C81      		ldd r19,Y+4
 38032 105aa B901      		movw r22,r18
 38033 105ac 0E94 0000 		call isActiveLink
 38034 105b0 8823      		tst r24
 38035 105b2 01F4      		brne .+2
 38036 105b4 00C0      		rjmp .L1627
3392:lp_solve_5.5/lp_presolve.c ****       continue;
3393:lp_solve_5.5/lp_presolve.c ****     hold = pow(10.0, colnr);
 38037               		.loc 2 3393 0
 38038 105b6 8F81      		ldd r24,Y+7
 38039 105b8 9885      		ldd r25,Y+8
 38040 105ba 092E      		mov __tmp_reg__,r25
 38041 105bc 000C      		lsl r0
 38042 105be AA0B      		sbc r26,r26
 38043 105c0 BB0B      		sbc r27,r27
 38044 105c2 BC01      		movw r22,r24
 38045 105c4 CD01      		movw r24,r26
 38046 105c6 0E94 0000 		call __floatsisf
 38047 105ca DC01      		movw r26,r24
 38048 105cc CB01      		movw r24,r22
 38049 105ce 9C01      		movw r18,r24
 38050 105d0 AD01      		movw r20,r26
 38051 105d2 60E0      		ldi r22,0
 38052 105d4 70E0      		ldi r23,0
 38053 105d6 80E2      		ldi r24,lo8(32)
 38054 105d8 91E4      		ldi r25,lo8(65)
 38055 105da 0E94 0000 		call pow
 38056 105de DC01      		movw r26,r24
 38057 105e0 CB01      		movw r24,r22
 38058 105e2 8987      		std Y+9,r24
 38059 105e4 9A87      		std Y+10,r25
 38060 105e6 AB87      		std Y+11,r26
 38061 105e8 BC87      		std Y+12,r27
3394:lp_solve_5.5/lp_presolve.c ****     /* Also disqualify if the RHS is fractional after scaling */
3395:lp_solve_5.5/lp_presolve.c ****     if(fabs(fmod(lp->orig_rhs[i] * hold, 1)) > psdata->epsvalue) {
 38062               		.loc 2 3395 0
 38063 105ea 8F89      		ldd r24,Y+23
 38064 105ec 988D      		ldd r25,Y+24
 38065 105ee 8A55      		subi r24,90
 38066 105f0 9D4F      		sbci r25,-3
 38067 105f2 DC01      		movw r26,r24
 38068 105f4 2D91      		ld r18,X+
 38069 105f6 3C91      		ld r19,X
 38070 105f8 8B81      		ldd r24,Y+3
 38071 105fa 9C81      		ldd r25,Y+4
 38072 105fc 880F      		lsl r24
 38073 105fe 991F      		rol r25
 38074 10600 880F      		lsl r24
 38075 10602 991F      		rol r25
 38076 10604 820F      		add r24,r18
 38077 10606 931F      		adc r25,r19
 38078 10608 FC01      		movw r30,r24
 38079 1060a 8081      		ld r24,Z
 38080 1060c 9181      		ldd r25,Z+1
 38081 1060e A281      		ldd r26,Z+2
 38082 10610 B381      		ldd r27,Z+3
 38083 10612 2985      		ldd r18,Y+9
 38084 10614 3A85      		ldd r19,Y+10
 38085 10616 4B85      		ldd r20,Y+11
 38086 10618 5C85      		ldd r21,Y+12
 38087 1061a BC01      		movw r22,r24
 38088 1061c CD01      		movw r24,r26
 38089 1061e 0E94 0000 		call __mulsf3
 38090 10622 DC01      		movw r26,r24
 38091 10624 CB01      		movw r24,r22
 38092 10626 20E0      		ldi r18,0
 38093 10628 30E0      		ldi r19,0
 38094 1062a 40E8      		ldi r20,lo8(-128)
 38095 1062c 5FE3      		ldi r21,lo8(63)
 38096 1062e BC01      		movw r22,r24
 38097 10630 CD01      		movw r24,r26
 38098 10632 0E94 0000 		call fmod
 38099 10636 DC01      		movw r26,r24
 38100 10638 CB01      		movw r24,r22
 38101 1063a BF77      		andi r27,0x7f
 38102 1063c 2B89      		ldd r18,Y+19
 38103 1063e 3C89      		ldd r19,Y+20
 38104 10640 F901      		movw r30,r18
 38105 10642 2489      		ldd r18,Z+20
 38106 10644 3589      		ldd r19,Z+21
 38107 10646 4689      		ldd r20,Z+22
 38108 10648 5789      		ldd r21,Z+23
 38109 1064a BC01      		movw r22,r24
 38110 1064c CD01      		movw r24,r26
 38111 1064e 0E94 0000 		call __gtsf2
 38112 10652 1816      		cp __zero_reg__,r24
 38113 10654 04F4      		brge .L1625
3396:lp_solve_5.5/lp_presolve.c ****       removeLink(psdata->INTmap, i);
 38114               		.loc 2 3396 0
 38115 10656 8B89      		ldd r24,Y+19
 38116 10658 9C89      		ldd r25,Y+20
 38117 1065a DC01      		movw r26,r24
 38118 1065c 1896      		adiw r26,8
 38119 1065e 8D91      		ld r24,X+
 38120 10660 9C91      		ld r25,X
 38121 10662 1997      		sbiw r26,8+1
 38122 10664 2B81      		ldd r18,Y+3
 38123 10666 3C81      		ldd r19,Y+4
 38124 10668 B901      		movw r22,r18
 38125 1066a 0E94 0000 		call removeLink
3397:lp_solve_5.5/lp_presolve.c ****       continue;
 38126               		.loc 2 3397 0
 38127 1066e 00C0      		rjmp .L1606
 38128               	.L1625:
3398:lp_solve_5.5/lp_presolve.c ****     }
3399:lp_solve_5.5/lp_presolve.c ****     /* We have an all-int constraint, see if we should scale it up */
3400:lp_solve_5.5/lp_presolve.c ****     if(k > 0) {
 38129               		.loc 2 3400 0
 38130 10670 8981      		ldd r24,Y+1
 38131 10672 9A81      		ldd r25,Y+2
 38132 10674 1816      		cp __zero_reg__,r24
 38133 10676 1906      		cpc __zero_reg__,r25
 38134 10678 04F0      		brlt .+2
 38135 1067a 00C0      		rjmp .L1606
3401:lp_solve_5.5/lp_presolve.c ****       ix = mat->row_end[i - 1];
 38136               		.loc 2 3401 0
 38137 1067c 8989      		ldd r24,Y+17
 38138 1067e 9A89      		ldd r25,Y+18
 38139 10680 FC01      		movw r30,r24
 38140 10682 208D      		ldd r18,Z+24
 38141 10684 318D      		ldd r19,Z+25
 38142 10686 8B81      		ldd r24,Y+3
 38143 10688 9C81      		ldd r25,Y+4
 38144 1068a 8150      		subi r24,1
 38145 1068c 9048      		sbci r25,-128
 38146 1068e 880F      		lsl r24
 38147 10690 991F      		rol r25
 38148 10692 820F      		add r24,r18
 38149 10694 931F      		adc r25,r19
 38150 10696 DC01      		movw r26,r24
 38151 10698 8D91      		ld r24,X+
 38152 1069a 9C91      		ld r25,X
 38153 1069c 9E83      		std Y+6,r25
 38154 1069e 8D83      		std Y+5,r24
3402:lp_solve_5.5/lp_presolve.c ****       for(; ix < ixx; ix++) {
 38155               		.loc 2 3402 0
 38156 106a0 00C0      		rjmp .L1619
 38157               	.L1620:
3403:lp_solve_5.5/lp_presolve.c ****         ROW_MAT_VALUE(ix) *= hold;
 38158               		.loc 2 3403 0 discriminator 2
 38159 106a2 8989      		ldd r24,Y+17
 38160 106a4 9A89      		ldd r25,Y+18
 38161 106a6 FC01      		movw r30,r24
 38162 106a8 2089      		ldd r18,Z+16
 38163 106aa 3189      		ldd r19,Z+17
 38164 106ac 8989      		ldd r24,Y+17
 38165 106ae 9A89      		ldd r25,Y+18
 38166 106b0 DC01      		movw r26,r24
 38167 106b2 5696      		adiw r26,22
 38168 106b4 4D91      		ld r20,X+
 38169 106b6 5C91      		ld r21,X
 38170 106b8 5797      		sbiw r26,22+1
 38171 106ba 8D81      		ldd r24,Y+5
 38172 106bc 9E81      		ldd r25,Y+6
 38173 106be 880F      		lsl r24
 38174 106c0 991F      		rol r25
 38175 106c2 840F      		add r24,r20
 38176 106c4 951F      		adc r25,r21
 38177 106c6 FC01      		movw r30,r24
 38178 106c8 8081      		ld r24,Z
 38179 106ca 9181      		ldd r25,Z+1
 38180 106cc 880F      		lsl r24
 38181 106ce 991F      		rol r25
 38182 106d0 880F      		lsl r24
 38183 106d2 991F      		rol r25
 38184 106d4 8901      		movw r16,r18
 38185 106d6 080F      		add r16,r24
 38186 106d8 191F      		adc r17,r25
 38187 106da 8989      		ldd r24,Y+17
 38188 106dc 9A89      		ldd r25,Y+18
 38189 106de DC01      		movw r26,r24
 38190 106e0 5096      		adiw r26,16
 38191 106e2 2D91      		ld r18,X+
 38192 106e4 3C91      		ld r19,X
 38193 106e6 5197      		sbiw r26,16+1
 38194 106e8 8989      		ldd r24,Y+17
 38195 106ea 9A89      		ldd r25,Y+18
 38196 106ec FC01      		movw r30,r24
 38197 106ee 4689      		ldd r20,Z+22
 38198 106f0 5789      		ldd r21,Z+23
 38199 106f2 8D81      		ldd r24,Y+5
 38200 106f4 9E81      		ldd r25,Y+6
 38201 106f6 880F      		lsl r24
 38202 106f8 991F      		rol r25
 38203 106fa 840F      		add r24,r20
 38204 106fc 951F      		adc r25,r21
 38205 106fe DC01      		movw r26,r24
 38206 10700 8D91      		ld r24,X+
 38207 10702 9C91      		ld r25,X
 38208 10704 880F      		lsl r24
 38209 10706 991F      		rol r25
 38210 10708 880F      		lsl r24
 38211 1070a 991F      		rol r25
 38212 1070c 820F      		add r24,r18
 38213 1070e 931F      		adc r25,r19
 38214 10710 FC01      		movw r30,r24
 38215 10712 8081      		ld r24,Z
 38216 10714 9181      		ldd r25,Z+1
 38217 10716 A281      		ldd r26,Z+2
 38218 10718 B381      		ldd r27,Z+3
 38219 1071a 2985      		ldd r18,Y+9
 38220 1071c 3A85      		ldd r19,Y+10
 38221 1071e 4B85      		ldd r20,Y+11
 38222 10720 5C85      		ldd r21,Y+12
 38223 10722 BC01      		movw r22,r24
 38224 10724 CD01      		movw r24,r26
 38225 10726 0E94 0000 		call __mulsf3
 38226 1072a DC01      		movw r26,r24
 38227 1072c CB01      		movw r24,r22
 38228 1072e F801      		movw r30,r16
 38229 10730 8083      		st Z,r24
 38230 10732 9183      		std Z+1,r25
 38231 10734 A283      		std Z+2,r26
 38232 10736 B383      		std Z+3,r27
3402:lp_solve_5.5/lp_presolve.c ****       for(; ix < ixx; ix++) {
 38233               		.loc 2 3402 0 discriminator 2
 38234 10738 8D81      		ldd r24,Y+5
 38235 1073a 9E81      		ldd r25,Y+6
 38236 1073c 0196      		adiw r24,1
 38237 1073e 9E83      		std Y+6,r25
 38238 10740 8D83      		std Y+5,r24
 38239               	.L1619:
3402:lp_solve_5.5/lp_presolve.c ****       for(; ix < ixx; ix++) {
 38240               		.loc 2 3402 0 is_stmt 0 discriminator 1
 38241 10742 2D81      		ldd r18,Y+5
 38242 10744 3E81      		ldd r19,Y+6
 38243 10746 8D89      		ldd r24,Y+21
 38244 10748 9E89      		ldd r25,Y+22
 38245 1074a 2817      		cp r18,r24
 38246 1074c 3907      		cpc r19,r25
 38247 1074e 04F4      		brge .+2
 38248 10750 00C0      		rjmp .L1620
3404:lp_solve_5.5/lp_presolve.c ****       }
3405:lp_solve_5.5/lp_presolve.c ****       lp->orig_rhs[i] *= hold;
 38249               		.loc 2 3405 0 is_stmt 1
 38250 10752 8F89      		ldd r24,Y+23
 38251 10754 988D      		ldd r25,Y+24
 38252 10756 8A55      		subi r24,90
 38253 10758 9D4F      		sbci r25,-3
 38254 1075a DC01      		movw r26,r24
 38255 1075c 2D91      		ld r18,X+
 38256 1075e 3C91      		ld r19,X
 38257 10760 8B81      		ldd r24,Y+3
 38258 10762 9C81      		ldd r25,Y+4
 38259 10764 880F      		lsl r24
 38260 10766 991F      		rol r25
 38261 10768 880F      		lsl r24
 38262 1076a 991F      		rol r25
 38263 1076c 8901      		movw r16,r18
 38264 1076e 080F      		add r16,r24
 38265 10770 191F      		adc r17,r25
 38266 10772 8F89      		ldd r24,Y+23
 38267 10774 988D      		ldd r25,Y+24
 38268 10776 8A55      		subi r24,90
 38269 10778 9D4F      		sbci r25,-3
 38270 1077a FC01      		movw r30,r24
 38271 1077c 2081      		ld r18,Z
 38272 1077e 3181      		ldd r19,Z+1
 38273 10780 8B81      		ldd r24,Y+3
 38274 10782 9C81      		ldd r25,Y+4
 38275 10784 880F      		lsl r24
 38276 10786 991F      		rol r25
 38277 10788 880F      		lsl r24
 38278 1078a 991F      		rol r25
 38279 1078c 820F      		add r24,r18
 38280 1078e 931F      		adc r25,r19
 38281 10790 FC01      		movw r30,r24
 38282 10792 8081      		ld r24,Z
 38283 10794 9181      		ldd r25,Z+1
 38284 10796 A281      		ldd r26,Z+2
 38285 10798 B381      		ldd r27,Z+3
 38286 1079a 2985      		ldd r18,Y+9
 38287 1079c 3A85      		ldd r19,Y+10
 38288 1079e 4B85      		ldd r20,Y+11
 38289 107a0 5C85      		ldd r21,Y+12
 38290 107a2 BC01      		movw r22,r24
 38291 107a4 CD01      		movw r24,r26
 38292 107a6 0E94 0000 		call __mulsf3
 38293 107aa DC01      		movw r26,r24
 38294 107ac CB01      		movw r24,r22
 38295 107ae F801      		movw r30,r16
 38296 107b0 8083      		st Z,r24
 38297 107b2 9183      		std Z+1,r25
 38298 107b4 A283      		std Z+2,r26
 38299 107b6 B383      		std Z+3,r27
3406:lp_solve_5.5/lp_presolve.c ****       if(!my_infinite(lp, lp->orig_upbo[i]))
 38300               		.loc 2 3406 0
 38301 107b8 8F89      		ldd r24,Y+23
 38302 107ba 988D      		ldd r25,Y+24
 38303 107bc 8255      		subi r24,82
 38304 107be 9D4F      		sbci r25,-3
 38305 107c0 DC01      		movw r26,r24
 38306 107c2 2D91      		ld r18,X+
 38307 107c4 3C91      		ld r19,X
 38308 107c6 8B81      		ldd r24,Y+3
 38309 107c8 9C81      		ldd r25,Y+4
 38310 107ca 880F      		lsl r24
 38311 107cc 991F      		rol r25
 38312 107ce 880F      		lsl r24
 38313 107d0 991F      		rol r25
 38314 107d2 820F      		add r24,r18
 38315 107d4 931F      		adc r25,r19
 38316 107d6 FC01      		movw r30,r24
 38317 107d8 8081      		ld r24,Z
 38318 107da 9181      		ldd r25,Z+1
 38319 107dc A281      		ldd r26,Z+2
 38320 107de B381      		ldd r27,Z+3
 38321 107e0 BF77      		andi r27,0x7f
 38322 107e2 2F89      		ldd r18,Y+23
 38323 107e4 388D      		ldd r19,Y+24
 38324 107e6 265F      		subi r18,-10
 38325 107e8 3C4F      		sbci r19,-4
 38326 107ea F901      		movw r30,r18
 38327 107ec 2081      		ld r18,Z
 38328 107ee 3181      		ldd r19,Z+1
 38329 107f0 4281      		ldd r20,Z+2
 38330 107f2 5381      		ldd r21,Z+3
 38331 107f4 11E0      		ldi r17,lo8(1)
 38332 107f6 BC01      		movw r22,r24
 38333 107f8 CD01      		movw r24,r26
 38334 107fa 0E94 0000 		call __gesf2
 38335 107fe 8823      		tst r24
 38336 10800 04F4      		brge .L1621
 38337 10802 10E0      		ldi r17,0
 38338               	.L1621:
 38339 10804 81E0      		ldi r24,lo8(1)
 38340 10806 8127      		eor r24,r17
 38341 10808 8823      		tst r24
 38342 1080a 01F0      		breq .L1606
3407:lp_solve_5.5/lp_presolve.c ****         lp->orig_upbo[i] *= hold; /* KE: Fix due to Andy Loto - 20070619 */
 38343               		.loc 2 3407 0
 38344 1080c 8F89      		ldd r24,Y+23
 38345 1080e 988D      		ldd r25,Y+24
 38346 10810 8255      		subi r24,82
 38347 10812 9D4F      		sbci r25,-3
 38348 10814 DC01      		movw r26,r24
 38349 10816 2D91      		ld r18,X+
 38350 10818 3C91      		ld r19,X
 38351 1081a 8B81      		ldd r24,Y+3
 38352 1081c 9C81      		ldd r25,Y+4
 38353 1081e 880F      		lsl r24
 38354 10820 991F      		rol r25
 38355 10822 880F      		lsl r24
 38356 10824 991F      		rol r25
 38357 10826 8901      		movw r16,r18
 38358 10828 080F      		add r16,r24
 38359 1082a 191F      		adc r17,r25
 38360 1082c 8F89      		ldd r24,Y+23
 38361 1082e 988D      		ldd r25,Y+24
 38362 10830 8255      		subi r24,82
 38363 10832 9D4F      		sbci r25,-3
 38364 10834 FC01      		movw r30,r24
 38365 10836 2081      		ld r18,Z
 38366 10838 3181      		ldd r19,Z+1
 38367 1083a 8B81      		ldd r24,Y+3
 38368 1083c 9C81      		ldd r25,Y+4
 38369 1083e 880F      		lsl r24
 38370 10840 991F      		rol r25
 38371 10842 880F      		lsl r24
 38372 10844 991F      		rol r25
 38373 10846 820F      		add r24,r18
 38374 10848 931F      		adc r25,r19
 38375 1084a FC01      		movw r30,r24
 38376 1084c 8081      		ld r24,Z
 38377 1084e 9181      		ldd r25,Z+1
 38378 10850 A281      		ldd r26,Z+2
 38379 10852 B381      		ldd r27,Z+3
 38380 10854 2985      		ldd r18,Y+9
 38381 10856 3A85      		ldd r19,Y+10
 38382 10858 4B85      		ldd r20,Y+11
 38383 1085a 5C85      		ldd r21,Y+12
 38384 1085c BC01      		movw r22,r24
 38385 1085e CD01      		movw r24,r26
 38386 10860 0E94 0000 		call __mulsf3
 38387 10864 DC01      		movw r26,r24
 38388 10866 CB01      		movw r24,r22
 38389 10868 F801      		movw r30,r16
 38390 1086a 8083      		st Z,r24
 38391 1086c 9183      		std Z+1,r25
 38392 1086e A283      		std Z+2,r26
 38393 10870 B383      		std Z+3,r27
 38394 10872 00C0      		rjmp .L1606
 38395               	.L1626:
3370:lp_solve_5.5/lp_presolve.c ****     /* Disqualify if there is a non-int variable, otherwise find smallest absolute fractional row v
 38396               		.loc 2 3370 0
 38397 10874 0000      		nop
 38398 10876 00C0      		rjmp .L1606
 38399               	.L1627:
3392:lp_solve_5.5/lp_presolve.c ****     hold = pow(10.0, colnr);
 38400               		.loc 2 3392 0
 38401 10878 0000      		nop
 38402               	.L1606:
3368:lp_solve_5.5/lp_presolve.c ****     if(!isActiveLink(psdata->INTmap, i))
 38403               		.loc 2 3368 0 discriminator 2
 38404 1087a 8B81      		ldd r24,Y+3
 38405 1087c 9C81      		ldd r25,Y+4
 38406 1087e 0196      		adiw r24,1
 38407 10880 9C83      		std Y+4,r25
 38408 10882 8B83      		std Y+3,r24
 38409               	.L1604:
3368:lp_solve_5.5/lp_presolve.c ****     if(!isActiveLink(psdata->INTmap, i))
 38410               		.loc 2 3368 0 is_stmt 0 discriminator 1
 38411 10884 2B81      		ldd r18,Y+3
 38412 10886 3C81      		ldd r19,Y+4
 38413 10888 8F85      		ldd r24,Y+15
 38414 1088a 9889      		ldd r25,Y+16
 38415 1088c 8217      		cp r24,r18
 38416 1088e 9307      		cpc r25,r19
 38417 10890 04F0      		brlt .+2
 38418 10892 00C0      		rjmp .L1622
 38419               	.L1603:
3408:lp_solve_5.5/lp_presolve.c ****     }
3409:lp_solve_5.5/lp_presolve.c ****   }
3410:lp_solve_5.5/lp_presolve.c **** 
3411:lp_solve_5.5/lp_presolve.c ****   /* Do the real tallying and ordering work */
3412:lp_solve_5.5/lp_presolve.c ****   presolve_validate(psdata, TRUE);
 38420               		.loc 2 3412 0 is_stmt 1
 38421 10894 8B89      		ldd r24,Y+19
 38422 10896 9C89      		ldd r25,Y+20
 38423 10898 61E0      		ldi r22,lo8(1)
 38424 1089a 0E94 0000 		call presolve_validate
3413:lp_solve_5.5/lp_presolve.c **** 
3414:lp_solve_5.5/lp_presolve.c ****   return( psdata );
 38425               		.loc 2 3414 0
 38426 1089e 8B89      		ldd r24,Y+19
 38427 108a0 9C89      		ldd r25,Y+20
 38428               	/* epilogue start */
3415:lp_solve_5.5/lp_presolve.c **** }
 38429               		.loc 2 3415 0
 38430 108a2 6896      		adiw r28,24
 38431 108a4 0FB6      		in __tmp_reg__,__SREG__
 38432 108a6 F894      		cli
 38433 108a8 DEBF      		out __SP_H__,r29
 38434 108aa 0FBE      		out __SREG__,__tmp_reg__
 38435 108ac CDBF      		out __SP_L__,r28
 38436 108ae DF91      		pop r29
 38437 108b0 CF91      		pop r28
 38438 108b2 1F91      		pop r17
 38439 108b4 0F91      		pop r16
 38440 108b6 0895      		ret
 38441               		.cfi_endproc
 38442               	.LFE74:
 38444               	.global	presolve_free
 38446               	presolve_free:
 38447               	.LFB75:
3416:lp_solve_5.5/lp_presolve.c **** 
3417:lp_solve_5.5/lp_presolve.c **** STATIC void presolve_free(presolverec **psdata)
3418:lp_solve_5.5/lp_presolve.c **** {
 38448               		.loc 2 3418 0
 38449               		.cfi_startproc
 38450 108b8 CF93      		push r28
 38451               	.LCFI454:
 38452               		.cfi_def_cfa_offset 3
 38453               		.cfi_offset 28, -2
 38454 108ba DF93      		push r29
 38455               	.LCFI455:
 38456               		.cfi_def_cfa_offset 4
 38457               		.cfi_offset 29, -3
 38458 108bc 00D0      		rcall .
 38459               	.LCFI456:
 38460               		.cfi_def_cfa_offset 6
 38461 108be CDB7      		in r28,__SP_L__
 38462 108c0 DEB7      		in r29,__SP_H__
 38463               	.LCFI457:
 38464               		.cfi_def_cfa_register 28
 38465               	/* prologue: function */
 38466               	/* frame size = 2 */
 38467               	/* stack size = 4 */
 38468               	.L__stack_usage = 4
 38469 108c2 9A83      		std Y+2,r25
 38470 108c4 8983      		std Y+1,r24
3419:lp_solve_5.5/lp_presolve.c ****   presolve_freepsrec(&(*psdata)->rows);
 38471               		.loc 2 3419 0
 38472 108c6 8981      		ldd r24,Y+1
 38473 108c8 9A81      		ldd r25,Y+2
 38474 108ca FC01      		movw r30,r24
 38475 108cc 8081      		ld r24,Z
 38476 108ce 9181      		ldd r25,Z+1
 38477 108d0 0E94 0000 		call presolve_freepsrec
3420:lp_solve_5.5/lp_presolve.c ****   presolve_freepsrec(&(*psdata)->cols);
 38478               		.loc 2 3420 0
 38479 108d4 8981      		ldd r24,Y+1
 38480 108d6 9A81      		ldd r25,Y+2
 38481 108d8 FC01      		movw r30,r24
 38482 108da 8081      		ld r24,Z
 38483 108dc 9181      		ldd r25,Z+1
 38484 108de 0296      		adiw r24,2
 38485 108e0 0E94 0000 		call presolve_freepsrec
3421:lp_solve_5.5/lp_presolve.c ****   FREE((*psdata)->dv_lobo);
 38486               		.loc 2 3421 0
 38487 108e4 8981      		ldd r24,Y+1
 38488 108e6 9A81      		ldd r25,Y+2
 38489 108e8 FC01      		movw r30,r24
 38490 108ea 8081      		ld r24,Z
 38491 108ec 9181      		ldd r25,Z+1
 38492 108ee FC01      		movw r30,r24
 38493 108f0 8089      		ldd r24,Z+16
 38494 108f2 9189      		ldd r25,Z+17
 38495 108f4 892B      		or r24,r25
 38496 108f6 01F0      		breq .L1629
 38497               		.loc 2 3421 0 is_stmt 0 discriminator 1
 38498 108f8 8981      		ldd r24,Y+1
 38499 108fa 9A81      		ldd r25,Y+2
 38500 108fc FC01      		movw r30,r24
 38501 108fe 8081      		ld r24,Z
 38502 10900 9181      		ldd r25,Z+1
 38503 10902 FC01      		movw r30,r24
 38504 10904 8089      		ldd r24,Z+16
 38505 10906 9189      		ldd r25,Z+17
 38506 10908 0E94 0000 		call free
 38507 1090c 8981      		ldd r24,Y+1
 38508 1090e 9A81      		ldd r25,Y+2
 38509 10910 FC01      		movw r30,r24
 38510 10912 8081      		ld r24,Z
 38511 10914 9181      		ldd r25,Z+1
 38512 10916 FC01      		movw r30,r24
 38513 10918 118A      		std Z+17,__zero_reg__
 38514 1091a 108A      		std Z+16,__zero_reg__
 38515               	.L1629:
3422:lp_solve_5.5/lp_presolve.c ****   FREE((*psdata)->dv_upbo);
 38516               		.loc 2 3422 0 is_stmt 1
 38517 1091c 8981      		ldd r24,Y+1
 38518 1091e 9A81      		ldd r25,Y+2
 38519 10920 FC01      		movw r30,r24
 38520 10922 8081      		ld r24,Z
 38521 10924 9181      		ldd r25,Z+1
 38522 10926 FC01      		movw r30,r24
 38523 10928 8685      		ldd r24,Z+14
 38524 1092a 9785      		ldd r25,Z+15
 38525 1092c 892B      		or r24,r25
 38526 1092e 01F0      		breq .L1630
 38527               		.loc 2 3422 0 is_stmt 0 discriminator 1
 38528 10930 8981      		ldd r24,Y+1
 38529 10932 9A81      		ldd r25,Y+2
 38530 10934 FC01      		movw r30,r24
 38531 10936 8081      		ld r24,Z
 38532 10938 9181      		ldd r25,Z+1
 38533 1093a FC01      		movw r30,r24
 38534 1093c 8685      		ldd r24,Z+14
 38535 1093e 9785      		ldd r25,Z+15
 38536 10940 0E94 0000 		call free
 38537 10944 8981      		ldd r24,Y+1
 38538 10946 9A81      		ldd r25,Y+2
 38539 10948 FC01      		movw r30,r24
 38540 1094a 8081      		ld r24,Z
 38541 1094c 9181      		ldd r25,Z+1
 38542 1094e FC01      		movw r30,r24
 38543 10950 1786      		std Z+15,__zero_reg__
 38544 10952 1686      		std Z+14,__zero_reg__
 38545               	.L1630:
3423:lp_solve_5.5/lp_presolve.c ****   FREE((*psdata)->pv_lobo);
 38546               		.loc 2 3423 0 is_stmt 1
 38547 10954 8981      		ldd r24,Y+1
 38548 10956 9A81      		ldd r25,Y+2
 38549 10958 FC01      		movw r30,r24
 38550 1095a 8081      		ld r24,Z
 38551 1095c 9181      		ldd r25,Z+1
 38552 1095e FC01      		movw r30,r24
 38553 10960 8485      		ldd r24,Z+12
 38554 10962 9585      		ldd r25,Z+13
 38555 10964 892B      		or r24,r25
 38556 10966 01F0      		breq .L1631
 38557               		.loc 2 3423 0 is_stmt 0 discriminator 1
 38558 10968 8981      		ldd r24,Y+1
 38559 1096a 9A81      		ldd r25,Y+2
 38560 1096c FC01      		movw r30,r24
 38561 1096e 8081      		ld r24,Z
 38562 10970 9181      		ldd r25,Z+1
 38563 10972 FC01      		movw r30,r24
 38564 10974 8485      		ldd r24,Z+12
 38565 10976 9585      		ldd r25,Z+13
 38566 10978 0E94 0000 		call free
 38567 1097c 8981      		ldd r24,Y+1
 38568 1097e 9A81      		ldd r25,Y+2
 38569 10980 FC01      		movw r30,r24
 38570 10982 8081      		ld r24,Z
 38571 10984 9181      		ldd r25,Z+1
 38572 10986 FC01      		movw r30,r24
 38573 10988 1586      		std Z+13,__zero_reg__
 38574 1098a 1486      		std Z+12,__zero_reg__
 38575               	.L1631:
3424:lp_solve_5.5/lp_presolve.c ****   FREE((*psdata)->pv_upbo);
 38576               		.loc 2 3424 0 is_stmt 1
 38577 1098c 8981      		ldd r24,Y+1
 38578 1098e 9A81      		ldd r25,Y+2
 38579 10990 FC01      		movw r30,r24
 38580 10992 8081      		ld r24,Z
 38581 10994 9181      		ldd r25,Z+1
 38582 10996 FC01      		movw r30,r24
 38583 10998 8285      		ldd r24,Z+10
 38584 1099a 9385      		ldd r25,Z+11
 38585 1099c 892B      		or r24,r25
 38586 1099e 01F0      		breq .L1632
 38587               		.loc 2 3424 0 is_stmt 0 discriminator 1
 38588 109a0 8981      		ldd r24,Y+1
 38589 109a2 9A81      		ldd r25,Y+2
 38590 109a4 FC01      		movw r30,r24
 38591 109a6 8081      		ld r24,Z
 38592 109a8 9181      		ldd r25,Z+1
 38593 109aa FC01      		movw r30,r24
 38594 109ac 8285      		ldd r24,Z+10
 38595 109ae 9385      		ldd r25,Z+11
 38596 109b0 0E94 0000 		call free
 38597 109b4 8981      		ldd r24,Y+1
 38598 109b6 9A81      		ldd r25,Y+2
 38599 109b8 FC01      		movw r30,r24
 38600 109ba 8081      		ld r24,Z
 38601 109bc 9181      		ldd r25,Z+1
 38602 109be FC01      		movw r30,r24
 38603 109c0 1386      		std Z+11,__zero_reg__
 38604 109c2 1286      		std Z+10,__zero_reg__
 38605               	.L1632:
3425:lp_solve_5.5/lp_presolve.c ****   freeLink(&(*psdata)->EQmap);
 38606               		.loc 2 3425 0 is_stmt 1
 38607 109c4 8981      		ldd r24,Y+1
 38608 109c6 9A81      		ldd r25,Y+2
 38609 109c8 FC01      		movw r30,r24
 38610 109ca 8081      		ld r24,Z
 38611 109cc 9181      		ldd r25,Z+1
 38612 109ce 0496      		adiw r24,4
 38613 109d0 0E94 0000 		call freeLink
3426:lp_solve_5.5/lp_presolve.c ****   freeLink(&(*psdata)->LTmap);
 38614               		.loc 2 3426 0
 38615 109d4 8981      		ldd r24,Y+1
 38616 109d6 9A81      		ldd r25,Y+2
 38617 109d8 FC01      		movw r30,r24
 38618 109da 8081      		ld r24,Z
 38619 109dc 9181      		ldd r25,Z+1
 38620 109de 0696      		adiw r24,6
 38621 109e0 0E94 0000 		call freeLink
3427:lp_solve_5.5/lp_presolve.c ****   freeLink(&(*psdata)->INTmap);
 38622               		.loc 2 3427 0
 38623 109e4 8981      		ldd r24,Y+1
 38624 109e6 9A81      		ldd r25,Y+2
 38625 109e8 FC01      		movw r30,r24
 38626 109ea 8081      		ld r24,Z
 38627 109ec 9181      		ldd r25,Z+1
 38628 109ee 0896      		adiw r24,8
 38629 109f0 0E94 0000 		call freeLink
3428:lp_solve_5.5/lp_presolve.c ****   FREE(*psdata);
 38630               		.loc 2 3428 0
 38631 109f4 8981      		ldd r24,Y+1
 38632 109f6 9A81      		ldd r25,Y+2
 38633 109f8 FC01      		movw r30,r24
 38634 109fa 8081      		ld r24,Z
 38635 109fc 9181      		ldd r25,Z+1
 38636 109fe 892B      		or r24,r25
 38637 10a00 01F0      		breq .L1634
 38638               		.loc 2 3428 0 is_stmt 0 discriminator 1
 38639 10a02 8981      		ldd r24,Y+1
 38640 10a04 9A81      		ldd r25,Y+2
 38641 10a06 FC01      		movw r30,r24
 38642 10a08 8081      		ld r24,Z
 38643 10a0a 9181      		ldd r25,Z+1
 38644 10a0c 0E94 0000 		call free
 38645 10a10 8981      		ldd r24,Y+1
 38646 10a12 9A81      		ldd r25,Y+2
 38647 10a14 FC01      		movw r30,r24
 38648 10a16 1182      		std Z+1,__zero_reg__
 38649 10a18 1082      		st Z,__zero_reg__
 38650               	.L1634:
3429:lp_solve_5.5/lp_presolve.c **** }
 38651               		.loc 2 3429 0 is_stmt 1
 38652 10a1a 0000      		nop
 38653               	/* epilogue start */
 38654 10a1c 0F90      		pop __tmp_reg__
 38655 10a1e 0F90      		pop __tmp_reg__
 38656 10a20 DF91      		pop r29
 38657 10a22 CF91      		pop r28
 38658 10a24 0895      		ret
 38659               		.cfi_endproc
 38660               	.LFE75:
 38662               	.global	presolve_makefree
 38664               	presolve_makefree:
 38665               	.LFB76:
3430:lp_solve_5.5/lp_presolve.c **** 
3431:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_makefree(presolverec *psdata)
3432:lp_solve_5.5/lp_presolve.c **** {
 38666               		.loc 2 3432 0
 38667               		.cfi_startproc
 38668 10a26 EF92      		push r14
 38669               	.LCFI458:
 38670               		.cfi_def_cfa_offset 3
 38671               		.cfi_offset 14, -2
 38672 10a28 FF92      		push r15
 38673               	.LCFI459:
 38674               		.cfi_def_cfa_offset 4
 38675               		.cfi_offset 15, -3
 38676 10a2a 0F93      		push r16
 38677               	.LCFI460:
 38678               		.cfi_def_cfa_offset 5
 38679               		.cfi_offset 16, -4
 38680 10a2c 1F93      		push r17
 38681               	.LCFI461:
 38682               		.cfi_def_cfa_offset 6
 38683               		.cfi_offset 17, -5
 38684 10a2e CF93      		push r28
 38685               	.LCFI462:
 38686               		.cfi_def_cfa_offset 7
 38687               		.cfi_offset 28, -6
 38688 10a30 DF93      		push r29
 38689               	.LCFI463:
 38690               		.cfi_def_cfa_offset 8
 38691               		.cfi_offset 29, -7
 38692 10a32 CDB7      		in r28,__SP_L__
 38693 10a34 DEB7      		in r29,__SP_H__
 38694               	.LCFI464:
 38695               		.cfi_def_cfa_register 28
 38696 10a36 AF97      		sbiw r28,47
 38697               	.LCFI465:
 38698               		.cfi_def_cfa_offset 55
 38699 10a38 0FB6      		in __tmp_reg__,__SREG__
 38700 10a3a F894      		cli
 38701 10a3c DEBF      		out __SP_H__,r29
 38702 10a3e 0FBE      		out __SREG__,__tmp_reg__
 38703 10a40 CDBF      		out __SP_L__,r28
 38704               	/* prologue: function */
 38705               	/* frame size = 47 */
 38706               	/* stack size = 53 */
 38707               	.L__stack_usage = 53
 38708 10a42 9FA7      		std Y+47,r25
 38709 10a44 8EA7      		std Y+46,r24
3433:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 38710               		.loc 2 3433 0
 38711 10a46 8EA5      		ldd r24,Y+46
 38712 10a48 9FA5      		ldd r25,Y+47
 38713 10a4a FC01      		movw r30,r24
 38714 10a4c 8289      		ldd r24,Z+18
 38715 10a4e 9389      		ldd r25,Z+19
 38716 10a50 9B87      		std Y+11,r25
 38717 10a52 8A87      		std Y+10,r24
3434:lp_solve_5.5/lp_presolve.c ****   int      i, ix, j, nn = 0;
 38718               		.loc 2 3434 0
 38719 10a54 1886      		std Y+8,__zero_reg__
 38720 10a56 1F82      		std Y+7,__zero_reg__
3435:lp_solve_5.5/lp_presolve.c ****   REAL     Xlower, Xupper, losum, upsum, lorhs, uprhs, freeinf = lp->infinite / 10;
 38721               		.loc 2 3435 0
 38722 10a58 8A85      		ldd r24,Y+10
 38723 10a5a 9B85      		ldd r25,Y+11
 38724 10a5c 865F      		subi r24,-10
 38725 10a5e 9C4F      		sbci r25,-4
 38726 10a60 FC01      		movw r30,r24
 38727 10a62 8081      		ld r24,Z
 38728 10a64 9181      		ldd r25,Z+1
 38729 10a66 A281      		ldd r26,Z+2
 38730 10a68 B381      		ldd r27,Z+3
 38731 10a6a 20E0      		ldi r18,0
 38732 10a6c 30E0      		ldi r19,0
 38733 10a6e 40E2      		ldi r20,lo8(32)
 38734 10a70 51E4      		ldi r21,lo8(65)
 38735 10a72 BC01      		movw r22,r24
 38736 10a74 CD01      		movw r24,r26
 38737 10a76 0E94 0000 		call __divsf3
 38738 10a7a DC01      		movw r26,r24
 38739 10a7c CB01      		movw r24,r22
 38740 10a7e 8C87      		std Y+12,r24
 38741 10a80 9D87      		std Y+13,r25
 38742 10a82 AE87      		std Y+14,r26
 38743 10a84 BF87      		std Y+15,r27
3436:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 38744               		.loc 2 3436 0
 38745 10a86 8A85      		ldd r24,Y+10
 38746 10a88 9B85      		ldd r25,Y+11
 38747 10a8a 8A54      		subi r24,74
 38748 10a8c 9D4F      		sbci r25,-3
 38749 10a8e FC01      		movw r30,r24
 38750 10a90 8081      		ld r24,Z
 38751 10a92 9181      		ldd r25,Z+1
 38752 10a94 998B      		std Y+17,r25
 38753 10a96 888B      		std Y+16,r24
3437:lp_solve_5.5/lp_presolve.c ****   LLrec    *colLL = NULL;
 38754               		.loc 2 3437 0
 38755 10a98 1BA6      		std Y+43,__zero_reg__
 38756 10a9a 1AA6      		std Y+42,__zero_reg__
3438:lp_solve_5.5/lp_presolve.c **** 
3439:lp_solve_5.5/lp_presolve.c ****   /* First see if we can relax ranged constraints */
3440:lp_solve_5.5/lp_presolve.c ****   for(i = firstActiveLink(psdata->rows->varmap); i != 0; i = nextActiveLink(psdata->rows->varmap, i
 38757               		.loc 2 3440 0
 38758 10a9c 8EA5      		ldd r24,Y+46
 38759 10a9e 9FA5      		ldd r25,Y+47
 38760 10aa0 FC01      		movw r30,r24
 38761 10aa2 8081      		ld r24,Z
 38762 10aa4 9181      		ldd r25,Z+1
 38763 10aa6 FC01      		movw r30,r24
 38764 10aa8 8081      		ld r24,Z
 38765 10aaa 9181      		ldd r25,Z+1
 38766 10aac 0E94 0000 		call firstActiveLink
 38767 10ab0 9A83      		std Y+2,r25
 38768 10ab2 8983      		std Y+1,r24
 38769 10ab4 00C0      		rjmp .L1636
 38770               	.L1642:
3441:lp_solve_5.5/lp_presolve.c ****     if(is_constr_type(lp, i, EQ))
 38771               		.loc 2 3441 0
 38772 10ab6 2981      		ldd r18,Y+1
 38773 10ab8 3A81      		ldd r19,Y+2
 38774 10aba 8A85      		ldd r24,Y+10
 38775 10abc 9B85      		ldd r25,Y+11
 38776 10abe 43E0      		ldi r20,lo8(3)
 38777 10ac0 50E0      		ldi r21,0
 38778 10ac2 B901      		movw r22,r18
 38779 10ac4 0E94 0000 		call is_constr_type
 38780 10ac8 8823      		tst r24
 38781 10aca 01F0      		breq .+2
 38782 10acc 00C0      		rjmp .L1666
3442:lp_solve_5.5/lp_presolve.c ****       continue;
3443:lp_solve_5.5/lp_presolve.c ****     presolve_range(lp, i, psdata->rows, &losum, &upsum);
 38783               		.loc 2 3443 0
 38784 10ace 8EA5      		ldd r24,Y+46
 38785 10ad0 9FA5      		ldd r25,Y+47
 38786 10ad2 FC01      		movw r30,r24
 38787 10ad4 4081      		ld r20,Z
 38788 10ad6 5181      		ldd r21,Z+1
 38789 10ad8 FE01      		movw r30,r28
 38790 10ada B696      		adiw r30,38
 38791 10adc 9E01      		movw r18,r28
 38792 10ade 2E5D      		subi r18,-34
 38793 10ae0 3F4F      		sbci r19,-1
 38794 10ae2 6981      		ldd r22,Y+1
 38795 10ae4 7A81      		ldd r23,Y+2
 38796 10ae6 8A85      		ldd r24,Y+10
 38797 10ae8 9B85      		ldd r25,Y+11
 38798 10aea 8F01      		movw r16,r30
 38799 10aec 0E94 0000 		call presolve_range
3444:lp_solve_5.5/lp_presolve.c ****     lorhs = get_rh_lower(lp, i);
 38800               		.loc 2 3444 0
 38801 10af0 2981      		ldd r18,Y+1
 38802 10af2 3A81      		ldd r19,Y+2
 38803 10af4 8A85      		ldd r24,Y+10
 38804 10af6 9B85      		ldd r25,Y+11
 38805 10af8 B901      		movw r22,r18
 38806 10afa 0E94 0000 		call get_rh_lower
 38807 10afe DC01      		movw r26,r24
 38808 10b00 CB01      		movw r24,r22
 38809 10b02 8A8B      		std Y+18,r24
 38810 10b04 9B8B      		std Y+19,r25
 38811 10b06 AC8B      		std Y+20,r26
 38812 10b08 BD8B      		std Y+21,r27
3445:lp_solve_5.5/lp_presolve.c ****     uprhs = get_rh_upper(lp, i);
 38813               		.loc 2 3445 0
 38814 10b0a 2981      		ldd r18,Y+1
 38815 10b0c 3A81      		ldd r19,Y+2
 38816 10b0e 8A85      		ldd r24,Y+10
 38817 10b10 9B85      		ldd r25,Y+11
 38818 10b12 B901      		movw r22,r18
 38819 10b14 0E94 0000 		call get_rh_upper
 38820 10b18 DC01      		movw r26,r24
 38821 10b1a CB01      		movw r24,r22
 38822 10b1c 8E8B      		std Y+22,r24
 38823 10b1e 9F8B      		std Y+23,r25
 38824 10b20 A88F      		std Y+24,r26
 38825 10b22 B98F      		std Y+25,r27
3446:lp_solve_5.5/lp_presolve.c **** 
3447:lp_solve_5.5/lp_presolve.c ****     /* Look for opportunity to relax constraint bounds */
3448:lp_solve_5.5/lp_presolve.c ****     if(presolve_rowlength(psdata, i) > 1) {
 38826               		.loc 2 3448 0
 38827 10b24 2981      		ldd r18,Y+1
 38828 10b26 3A81      		ldd r19,Y+2
 38829 10b28 8EA5      		ldd r24,Y+46
 38830 10b2a 9FA5      		ldd r25,Y+47
 38831 10b2c B901      		movw r22,r18
 38832 10b2e 0E94 0000 		call presolve_rowlength
 38833 10b32 0297      		sbiw r24,2
 38834 10b34 04F4      		brge .+2
 38835 10b36 00C0      		rjmp .L1638
3449:lp_solve_5.5/lp_presolve.c ****       if((is_constr_type(lp, i, GE) && (upsum <= uprhs)) ||
 38836               		.loc 2 3449 0
 38837 10b38 2981      		ldd r18,Y+1
 38838 10b3a 3A81      		ldd r19,Y+2
 38839 10b3c 8A85      		ldd r24,Y+10
 38840 10b3e 9B85      		ldd r25,Y+11
 38841 10b40 42E0      		ldi r20,lo8(2)
 38842 10b42 50E0      		ldi r21,0
 38843 10b44 B901      		movw r22,r18
 38844 10b46 0E94 0000 		call is_constr_type
 38845 10b4a 8823      		tst r24
 38846 10b4c 01F0      		breq .L1639
 38847               		.loc 2 3449 0 is_stmt 0 discriminator 1
 38848 10b4e 8EA1      		ldd r24,Y+38
 38849 10b50 9FA1      		ldd r25,Y+39
 38850 10b52 A8A5      		ldd r26,Y+40
 38851 10b54 B9A5      		ldd r27,Y+41
 38852 10b56 2E89      		ldd r18,Y+22
 38853 10b58 3F89      		ldd r19,Y+23
 38854 10b5a 488D      		ldd r20,Y+24
 38855 10b5c 598D      		ldd r21,Y+25
 38856 10b5e BC01      		movw r22,r24
 38857 10b60 CD01      		movw r24,r26
 38858 10b62 0E94 0000 		call __lesf2
 38859 10b66 1816      		cp __zero_reg__,r24
 38860 10b68 04F4      		brge .L1640
 38861               	.L1639:
3450:lp_solve_5.5/lp_presolve.c ****          (is_constr_type(lp, i, LE) && (losum >= lorhs)))
 38862               		.loc 2 3450 0 is_stmt 1 discriminator 3
 38863 10b6a 2981      		ldd r18,Y+1
 38864 10b6c 3A81      		ldd r19,Y+2
 38865 10b6e 8A85      		ldd r24,Y+10
 38866 10b70 9B85      		ldd r25,Y+11
 38867 10b72 41E0      		ldi r20,lo8(1)
 38868 10b74 50E0      		ldi r21,0
 38869 10b76 B901      		movw r22,r18
 38870 10b78 0E94 0000 		call is_constr_type
3449:lp_solve_5.5/lp_presolve.c ****       if((is_constr_type(lp, i, GE) && (upsum <= uprhs)) ||
 38871               		.loc 2 3449 0 discriminator 3
 38872 10b7c 8823      		tst r24
 38873 10b7e 01F0      		breq .L1638
 38874               		.loc 2 3450 0
 38875 10b80 8AA1      		ldd r24,Y+34
 38876 10b82 9BA1      		ldd r25,Y+35
 38877 10b84 ACA1      		ldd r26,Y+36
 38878 10b86 BDA1      		ldd r27,Y+37
 38879 10b88 2A89      		ldd r18,Y+18
 38880 10b8a 3B89      		ldd r19,Y+19
 38881 10b8c 4C89      		ldd r20,Y+20
 38882 10b8e 5D89      		ldd r21,Y+21
 38883 10b90 BC01      		movw r22,r24
 38884 10b92 CD01      		movw r24,r26
 38885 10b94 0E94 0000 		call __gesf2
 38886 10b98 8823      		tst r24
 38887 10b9a 04F0      		brlt .L1638
 38888               	.L1640:
3451:lp_solve_5.5/lp_presolve.c ****         set_rh_range(lp, i, lp->infinite);
 38889               		.loc 2 3451 0
 38890 10b9c 8A85      		ldd r24,Y+10
 38891 10b9e 9B85      		ldd r25,Y+11
 38892 10ba0 865F      		subi r24,-10
 38893 10ba2 9C4F      		sbci r25,-4
 38894 10ba4 FC01      		movw r30,r24
 38895 10ba6 8081      		ld r24,Z
 38896 10ba8 9181      		ldd r25,Z+1
 38897 10baa A281      		ldd r26,Z+2
 38898 10bac B381      		ldd r27,Z+3
 38899 10bae 6981      		ldd r22,Y+1
 38900 10bb0 7A81      		ldd r23,Y+2
 38901 10bb2 EA85      		ldd r30,Y+10
 38902 10bb4 FB85      		ldd r31,Y+11
 38903 10bb6 9C01      		movw r18,r24
 38904 10bb8 AD01      		movw r20,r26
 38905 10bba CF01      		movw r24,r30
 38906 10bbc 0E94 0000 		call set_rh_range
 38907 10bc0 00C0      		rjmp .L1638
 38908               	.L1666:
3442:lp_solve_5.5/lp_presolve.c ****     presolve_range(lp, i, psdata->rows, &losum, &upsum);
 38909               		.loc 2 3442 0
 38910 10bc2 0000      		nop
 38911               	.L1638:
3440:lp_solve_5.5/lp_presolve.c ****     if(is_constr_type(lp, i, EQ))
 38912               		.loc 2 3440 0 discriminator 2
 38913 10bc4 8EA5      		ldd r24,Y+46
 38914 10bc6 9FA5      		ldd r25,Y+47
 38915 10bc8 FC01      		movw r30,r24
 38916 10bca 8081      		ld r24,Z
 38917 10bcc 9181      		ldd r25,Z+1
 38918 10bce FC01      		movw r30,r24
 38919 10bd0 8081      		ld r24,Z
 38920 10bd2 9181      		ldd r25,Z+1
 38921 10bd4 2981      		ldd r18,Y+1
 38922 10bd6 3A81      		ldd r19,Y+2
 38923 10bd8 B901      		movw r22,r18
 38924 10bda 0E94 0000 		call nextActiveLink
 38925 10bde 9A83      		std Y+2,r25
 38926 10be0 8983      		std Y+1,r24
 38927               	.L1636:
3440:lp_solve_5.5/lp_presolve.c ****     if(is_constr_type(lp, i, EQ))
 38928               		.loc 2 3440 0 is_stmt 0 discriminator 1
 38929 10be2 8981      		ldd r24,Y+1
 38930 10be4 9A81      		ldd r25,Y+2
 38931 10be6 892B      		or r24,r25
 38932 10be8 01F0      		breq .+2
 38933 10bea 00C0      		rjmp .L1642
3452:lp_solve_5.5/lp_presolve.c ****     }
3453:lp_solve_5.5/lp_presolve.c ****   }
3454:lp_solve_5.5/lp_presolve.c **** 
3455:lp_solve_5.5/lp_presolve.c ****   /* Collect columns available for bound relaxation (find implied free variables)
3456:lp_solve_5.5/lp_presolve.c ****      (consider sorting the list in decending order of column lengths or do call to
3457:lp_solve_5.5/lp_presolve.c ****       COLAMD to maximize impact) */
3458:lp_solve_5.5/lp_presolve.c ****   createLink(lp->columns, &colLL, NULL);
 38934               		.loc 2 3458 0 is_stmt 1
 38935 10bec 8A85      		ldd r24,Y+10
 38936 10bee 9B85      		ldd r25,Y+11
 38937 10bf0 8451      		subi r24,20
 38938 10bf2 9E4F      		sbci r25,-2
 38939 10bf4 FC01      		movw r30,r24
 38940 10bf6 8081      		ld r24,Z
 38941 10bf8 9181      		ldd r25,Z+1
 38942 10bfa 9E01      		movw r18,r28
 38943 10bfc 265D      		subi r18,-42
 38944 10bfe 3F4F      		sbci r19,-1
 38945 10c00 40E0      		ldi r20,0
 38946 10c02 50E0      		ldi r21,0
 38947 10c04 B901      		movw r22,r18
 38948 10c06 0E94 0000 		call createLink
3459:lp_solve_5.5/lp_presolve.c ****   for(j = firstActiveLink(psdata->cols->varmap); j != 0; j = nextActiveLink(psdata->cols->varmap, j
 38949               		.loc 2 3459 0
 38950 10c0a 8EA5      		ldd r24,Y+46
 38951 10c0c 9FA5      		ldd r25,Y+47
 38952 10c0e FC01      		movw r30,r24
 38953 10c10 8281      		ldd r24,Z+2
 38954 10c12 9381      		ldd r25,Z+3
 38955 10c14 FC01      		movw r30,r24
 38956 10c16 8081      		ld r24,Z
 38957 10c18 9181      		ldd r25,Z+1
 38958 10c1a 0E94 0000 		call firstActiveLink
 38959 10c1e 9E83      		std Y+6,r25
 38960 10c20 8D83      		std Y+5,r24
 38961 10c22 00C0      		rjmp .L1643
 38962               	.L1645:
3460:lp_solve_5.5/lp_presolve.c ****     if(presolve_impliedfree(lp, psdata, j))
 38963               		.loc 2 3460 0
 38964 10c24 4D81      		ldd r20,Y+5
 38965 10c26 5E81      		ldd r21,Y+6
 38966 10c28 2EA5      		ldd r18,Y+46
 38967 10c2a 3FA5      		ldd r19,Y+47
 38968 10c2c 8A85      		ldd r24,Y+10
 38969 10c2e 9B85      		ldd r25,Y+11
 38970 10c30 B901      		movw r22,r18
 38971 10c32 0E94 0000 		call presolve_impliedfree
 38972 10c36 8823      		tst r24
 38973 10c38 01F0      		breq .L1644
3461:lp_solve_5.5/lp_presolve.c ****       appendLink(colLL, j);
 38974               		.loc 2 3461 0
 38975 10c3a 8AA5      		ldd r24,Y+42
 38976 10c3c 9BA5      		ldd r25,Y+43
 38977 10c3e 2D81      		ldd r18,Y+5
 38978 10c40 3E81      		ldd r19,Y+6
 38979 10c42 B901      		movw r22,r18
 38980 10c44 0E94 0000 		call appendLink
 38981               	.L1644:
3459:lp_solve_5.5/lp_presolve.c ****   for(j = firstActiveLink(psdata->cols->varmap); j != 0; j = nextActiveLink(psdata->cols->varmap, j
 38982               		.loc 2 3459 0 discriminator 2
 38983 10c48 8EA5      		ldd r24,Y+46
 38984 10c4a 9FA5      		ldd r25,Y+47
 38985 10c4c FC01      		movw r30,r24
 38986 10c4e 8281      		ldd r24,Z+2
 38987 10c50 9381      		ldd r25,Z+3
 38988 10c52 FC01      		movw r30,r24
 38989 10c54 8081      		ld r24,Z
 38990 10c56 9181      		ldd r25,Z+1
 38991 10c58 2D81      		ldd r18,Y+5
 38992 10c5a 3E81      		ldd r19,Y+6
 38993 10c5c B901      		movw r22,r18
 38994 10c5e 0E94 0000 		call nextActiveLink
 38995 10c62 9E83      		std Y+6,r25
 38996 10c64 8D83      		std Y+5,r24
 38997               	.L1643:
3459:lp_solve_5.5/lp_presolve.c ****   for(j = firstActiveLink(psdata->cols->varmap); j != 0; j = nextActiveLink(psdata->cols->varmap, j
 38998               		.loc 2 3459 0 is_stmt 0 discriminator 1
 38999 10c66 8D81      		ldd r24,Y+5
 39000 10c68 9E81      		ldd r25,Y+6
 39001 10c6a 892B      		or r24,r25
 39002 10c6c 01F4      		brne .L1645
3462:lp_solve_5.5/lp_presolve.c **** 
3463:lp_solve_5.5/lp_presolve.c ****   /* Find what columns to relax (ideally one per row) */
3464:lp_solve_5.5/lp_presolve.c ****   if(colLL->count > 0) {
 39003               		.loc 2 3464 0 is_stmt 1
 39004 10c6e 8AA5      		ldd r24,Y+42
 39005 10c70 9BA5      		ldd r25,Y+43
 39006 10c72 FC01      		movw r30,r24
 39007 10c74 8281      		ldd r24,Z+2
 39008 10c76 9381      		ldd r25,Z+3
 39009 10c78 1816      		cp __zero_reg__,r24
 39010 10c7a 1906      		cpc __zero_reg__,r25
 39011 10c7c 04F0      		brlt .+2
 39012 10c7e 00C0      		rjmp .L1646
 39013               	.LBB9:
3465:lp_solve_5.5/lp_presolve.c ****     LLrec  *rowLL = NULL;
 39014               		.loc 2 3465 0
 39015 10c80 1DA6      		std Y+45,__zero_reg__
 39016 10c82 1CA6      		std Y+44,__zero_reg__
3466:lp_solve_5.5/lp_presolve.c ****     MYBOOL canfree;
3467:lp_solve_5.5/lp_presolve.c **** 
3468:lp_solve_5.5/lp_presolve.c ****     /* Create row tracker */
3469:lp_solve_5.5/lp_presolve.c ****     createLink(lp->rows, &rowLL, NULL);
 39017               		.loc 2 3469 0
 39018 10c84 8A85      		ldd r24,Y+10
 39019 10c86 9B85      		ldd r25,Y+11
 39020 10c88 8651      		subi r24,22
 39021 10c8a 9E4F      		sbci r25,-2
 39022 10c8c FC01      		movw r30,r24
 39023 10c8e 8081      		ld r24,Z
 39024 10c90 9181      		ldd r25,Z+1
 39025 10c92 9E01      		movw r18,r28
 39026 10c94 245D      		subi r18,-44
 39027 10c96 3F4F      		sbci r19,-1
 39028 10c98 40E0      		ldi r20,0
 39029 10c9a 50E0      		ldi r21,0
 39030 10c9c B901      		movw r22,r18
 39031 10c9e 0E94 0000 		call createLink
3470:lp_solve_5.5/lp_presolve.c ****     fillLink(rowLL);
 39032               		.loc 2 3470 0
 39033 10ca2 8CA5      		ldd r24,Y+44
 39034 10ca4 9DA5      		ldd r25,Y+45
 39035 10ca6 0E94 0000 		call fillLink
3471:lp_solve_5.5/lp_presolve.c **** 
3472:lp_solve_5.5/lp_presolve.c ****     /* Loop over all column candidates */
3473:lp_solve_5.5/lp_presolve.c ****     for(j = firstActiveLink(colLL); (j > 0) && (rowLL->count > 0); j = nextActiveLink(colLL, j)) {
 39036               		.loc 2 3473 0
 39037 10caa 8AA5      		ldd r24,Y+42
 39038 10cac 9BA5      		ldd r25,Y+43
 39039 10cae 0E94 0000 		call firstActiveLink
 39040 10cb2 9E83      		std Y+6,r25
 39041 10cb4 8D83      		std Y+5,r24
 39042 10cb6 00C0      		rjmp .L1647
 39043               	.L1660:
3474:lp_solve_5.5/lp_presolve.c **** 
3475:lp_solve_5.5/lp_presolve.c ****       /* Verify that the variable is applicable */
3476:lp_solve_5.5/lp_presolve.c ****       canfree = TRUE;
 39044               		.loc 2 3476 0
 39045 10cb8 81E0      		ldi r24,lo8(1)
 39046 10cba 8987      		std Y+9,r24
3477:lp_solve_5.5/lp_presolve.c ****       for(ix = mat->col_end[j-1]; canfree && (ix < mat->col_end[j]); ix++)
 39047               		.loc 2 3477 0
 39048 10cbc 8889      		ldd r24,Y+16
 39049 10cbe 9989      		ldd r25,Y+17
 39050 10cc0 FC01      		movw r30,r24
 39051 10cc2 2289      		ldd r18,Z+18
 39052 10cc4 3389      		ldd r19,Z+19
 39053 10cc6 8D81      		ldd r24,Y+5
 39054 10cc8 9E81      		ldd r25,Y+6
 39055 10cca 8150      		subi r24,1
 39056 10ccc 9048      		sbci r25,-128
 39057 10cce 880F      		lsl r24
 39058 10cd0 991F      		rol r25
 39059 10cd2 820F      		add r24,r18
 39060 10cd4 931F      		adc r25,r19
 39061 10cd6 FC01      		movw r30,r24
 39062 10cd8 8081      		ld r24,Z
 39063 10cda 9181      		ldd r25,Z+1
 39064 10cdc 9C83      		std Y+4,r25
 39065 10cde 8B83      		std Y+3,r24
 39066 10ce0 00C0      		rjmp .L1648
 39067               	.L1650:
3478:lp_solve_5.5/lp_presolve.c ****         canfree = isActiveLink(rowLL, COL_MAT_ROWNR(ix));
 39068               		.loc 2 3478 0 discriminator 4
 39069 10ce2 8889      		ldd r24,Y+16
 39070 10ce4 9989      		ldd r25,Y+17
 39071 10ce6 FC01      		movw r30,r24
 39072 10ce8 2685      		ldd r18,Z+14
 39073 10cea 3785      		ldd r19,Z+15
 39074 10cec 8B81      		ldd r24,Y+3
 39075 10cee 9C81      		ldd r25,Y+4
 39076 10cf0 880F      		lsl r24
 39077 10cf2 991F      		rol r25
 39078 10cf4 820F      		add r24,r18
 39079 10cf6 931F      		adc r25,r19
 39080 10cf8 FC01      		movw r30,r24
 39081 10cfa 2081      		ld r18,Z
 39082 10cfc 3181      		ldd r19,Z+1
 39083 10cfe 8CA5      		ldd r24,Y+44
 39084 10d00 9DA5      		ldd r25,Y+45
 39085 10d02 B901      		movw r22,r18
 39086 10d04 0E94 0000 		call isActiveLink
 39087 10d08 8987      		std Y+9,r24
3477:lp_solve_5.5/lp_presolve.c ****       for(ix = mat->col_end[j-1]; canfree && (ix < mat->col_end[j]); ix++)
 39088               		.loc 2 3477 0 discriminator 4
 39089 10d0a 8B81      		ldd r24,Y+3
 39090 10d0c 9C81      		ldd r25,Y+4
 39091 10d0e 0196      		adiw r24,1
 39092 10d10 9C83      		std Y+4,r25
 39093 10d12 8B83      		std Y+3,r24
 39094               	.L1648:
3477:lp_solve_5.5/lp_presolve.c ****       for(ix = mat->col_end[j-1]; canfree && (ix < mat->col_end[j]); ix++)
 39095               		.loc 2 3477 0 is_stmt 0 discriminator 1
 39096 10d14 8985      		ldd r24,Y+9
 39097 10d16 8823      		tst r24
 39098 10d18 01F0      		breq .L1649
3477:lp_solve_5.5/lp_presolve.c ****       for(ix = mat->col_end[j-1]; canfree && (ix < mat->col_end[j]); ix++)
 39099               		.loc 2 3477 0 discriminator 3
 39100 10d1a 8889      		ldd r24,Y+16
 39101 10d1c 9989      		ldd r25,Y+17
 39102 10d1e FC01      		movw r30,r24
 39103 10d20 2289      		ldd r18,Z+18
 39104 10d22 3389      		ldd r19,Z+19
 39105 10d24 8D81      		ldd r24,Y+5
 39106 10d26 9E81      		ldd r25,Y+6
 39107 10d28 880F      		lsl r24
 39108 10d2a 991F      		rol r25
 39109 10d2c 820F      		add r24,r18
 39110 10d2e 931F      		adc r25,r19
 39111 10d30 FC01      		movw r30,r24
 39112 10d32 2081      		ld r18,Z
 39113 10d34 3181      		ldd r19,Z+1
 39114 10d36 8B81      		ldd r24,Y+3
 39115 10d38 9C81      		ldd r25,Y+4
 39116 10d3a 8217      		cp r24,r18
 39117 10d3c 9307      		cpc r25,r19
 39118 10d3e 04F0      		brlt .L1650
 39119               	.L1649:
3479:lp_solve_5.5/lp_presolve.c **** 
3480:lp_solve_5.5/lp_presolve.c ****       /* If so, then open the bounds and update the row availability mapper */
3481:lp_solve_5.5/lp_presolve.c ****       if(canfree) {
 39120               		.loc 2 3481 0 is_stmt 1
 39121 10d40 8985      		ldd r24,Y+9
 39122 10d42 8823      		tst r24
 39123 10d44 01F4      		brne .+2
 39124 10d46 00C0      		rjmp .L1651
3482:lp_solve_5.5/lp_presolve.c ****         nn++;
 39125               		.loc 2 3482 0
 39126 10d48 8F81      		ldd r24,Y+7
 39127 10d4a 9885      		ldd r25,Y+8
 39128 10d4c 0196      		adiw r24,1
 39129 10d4e 9887      		std Y+8,r25
 39130 10d50 8F83      		std Y+7,r24
3483:lp_solve_5.5/lp_presolve.c ****         Xlower = get_lowbo(lp, j);
 39131               		.loc 2 3483 0
 39132 10d52 2D81      		ldd r18,Y+5
 39133 10d54 3E81      		ldd r19,Y+6
 39134 10d56 8A85      		ldd r24,Y+10
 39135 10d58 9B85      		ldd r25,Y+11
 39136 10d5a B901      		movw r22,r18
 39137 10d5c 0E94 0000 		call get_lowbo
 39138 10d60 DC01      		movw r26,r24
 39139 10d62 CB01      		movw r24,r22
 39140 10d64 8A8F      		std Y+26,r24
 39141 10d66 9B8F      		std Y+27,r25
 39142 10d68 AC8F      		std Y+28,r26
 39143 10d6a BD8F      		std Y+29,r27
3484:lp_solve_5.5/lp_presolve.c ****         Xupper = get_upbo(lp, j);
 39144               		.loc 2 3484 0
 39145 10d6c 2D81      		ldd r18,Y+5
 39146 10d6e 3E81      		ldd r19,Y+6
 39147 10d70 8A85      		ldd r24,Y+10
 39148 10d72 9B85      		ldd r25,Y+11
 39149 10d74 B901      		movw r22,r18
 39150 10d76 0E94 0000 		call get_upbo
 39151 10d7a DC01      		movw r26,r24
 39152 10d7c CB01      		movw r24,r22
 39153 10d7e 8E8F      		std Y+30,r24
 39154 10d80 9F8F      		std Y+31,r25
 39155 10d82 A8A3      		std Y+32,r26
 39156 10d84 B9A3      		std Y+33,r27
3485:lp_solve_5.5/lp_presolve.c ****         if(Xlower >= 0)
 39157               		.loc 2 3485 0
 39158 10d86 20E0      		ldi r18,0
 39159 10d88 30E0      		ldi r19,0
 39160 10d8a A901      		movw r20,r18
 39161 10d8c 6A8D      		ldd r22,Y+26
 39162 10d8e 7B8D      		ldd r23,Y+27
 39163 10d90 8C8D      		ldd r24,Y+28
 39164 10d92 9D8D      		ldd r25,Y+29
 39165 10d94 0E94 0000 		call __gesf2
 39166 10d98 8823      		tst r24
 39167 10d9a 04F0      		brlt .L1664
3486:lp_solve_5.5/lp_presolve.c ****           set_bounds(lp, j, 0, freeinf);
 39168               		.loc 2 3486 0
 39169 10d9c 8C85      		ldd r24,Y+12
 39170 10d9e 9D85      		ldd r25,Y+13
 39171 10da0 AE85      		ldd r26,Y+14
 39172 10da2 BF85      		ldd r27,Y+15
 39173 10da4 6D81      		ldd r22,Y+5
 39174 10da6 7E81      		ldd r23,Y+6
 39175 10da8 EA85      		ldd r30,Y+10
 39176 10daa FB85      		ldd r31,Y+11
 39177 10dac 7C01      		movw r14,r24
 39178 10dae 8D01      		movw r16,r26
 39179 10db0 20E0      		ldi r18,0
 39180 10db2 30E0      		ldi r19,0
 39181 10db4 A901      		movw r20,r18
 39182 10db6 CF01      		movw r24,r30
 39183 10db8 0E94 0000 		call set_bounds
 39184 10dbc 00C0      		rjmp .L1654
 39185               	.L1664:
3487:lp_solve_5.5/lp_presolve.c ****         else if(Xupper <= 0)
 39186               		.loc 2 3487 0
 39187 10dbe 20E0      		ldi r18,0
 39188 10dc0 30E0      		ldi r19,0
 39189 10dc2 A901      		movw r20,r18
 39190 10dc4 6E8D      		ldd r22,Y+30
 39191 10dc6 7F8D      		ldd r23,Y+31
 39192 10dc8 88A1      		ldd r24,Y+32
 39193 10dca 99A1      		ldd r25,Y+33
 39194 10dcc 0E94 0000 		call __lesf2
 39195 10dd0 1816      		cp __zero_reg__,r24
 39196 10dd2 04F0      		brlt .L1665
3488:lp_solve_5.5/lp_presolve.c ****           set_bounds(lp, j, -freeinf, 0);
 39197               		.loc 2 3488 0
 39198 10dd4 8C85      		ldd r24,Y+12
 39199 10dd6 9D85      		ldd r25,Y+13
 39200 10dd8 AE85      		ldd r26,Y+14
 39201 10dda BF85      		ldd r27,Y+15
 39202 10ddc B058      		subi r27,0x80
 39203 10dde 6D81      		ldd r22,Y+5
 39204 10de0 7E81      		ldd r23,Y+6
 39205 10de2 EA85      		ldd r30,Y+10
 39206 10de4 FB85      		ldd r31,Y+11
 39207 10de6 E12C      		mov r14,__zero_reg__
 39208 10de8 F12C      		mov r15,__zero_reg__
 39209 10dea 8701      		movw r16,r14
 39210 10dec 9C01      		movw r18,r24
 39211 10dee AD01      		movw r20,r26
 39212 10df0 CF01      		movw r24,r30
 39213 10df2 0E94 0000 		call set_bounds
 39214 10df6 00C0      		rjmp .L1654
 39215               	.L1665:
3489:lp_solve_5.5/lp_presolve.c ****         else
3490:lp_solve_5.5/lp_presolve.c **** /*          set_bounds(lo, j, -freeinf, freeinf); */
3491:lp_solve_5.5/lp_presolve.c ****           set_unbounded(lp, j);
 39216               		.loc 2 3491 0
 39217 10df8 2D81      		ldd r18,Y+5
 39218 10dfa 3E81      		ldd r19,Y+6
 39219 10dfc 8A85      		ldd r24,Y+10
 39220 10dfe 9B85      		ldd r25,Y+11
 39221 10e00 B901      		movw r22,r18
 39222 10e02 0E94 0000 		call set_unbounded
 39223               	.L1654:
3492:lp_solve_5.5/lp_presolve.c ****         for(ix = mat->col_end[j-1]; ix < mat->col_end[j]; ix++)
 39224               		.loc 2 3492 0
 39225 10e06 8889      		ldd r24,Y+16
 39226 10e08 9989      		ldd r25,Y+17
 39227 10e0a FC01      		movw r30,r24
 39228 10e0c 2289      		ldd r18,Z+18
 39229 10e0e 3389      		ldd r19,Z+19
 39230 10e10 8D81      		ldd r24,Y+5
 39231 10e12 9E81      		ldd r25,Y+6
 39232 10e14 8150      		subi r24,1
 39233 10e16 9048      		sbci r25,-128
 39234 10e18 880F      		lsl r24
 39235 10e1a 991F      		rol r25
 39236 10e1c 820F      		add r24,r18
 39237 10e1e 931F      		adc r25,r19
 39238 10e20 FC01      		movw r30,r24
 39239 10e22 8081      		ld r24,Z
 39240 10e24 9181      		ldd r25,Z+1
 39241 10e26 9C83      		std Y+4,r25
 39242 10e28 8B83      		std Y+3,r24
 39243 10e2a 00C0      		rjmp .L1657
 39244               	.L1658:
3493:lp_solve_5.5/lp_presolve.c ****           removeLink(rowLL, COL_MAT_ROWNR(ix));
 39245               		.loc 2 3493 0 discriminator 3
 39246 10e2c 8889      		ldd r24,Y+16
 39247 10e2e 9989      		ldd r25,Y+17
 39248 10e30 FC01      		movw r30,r24
 39249 10e32 2685      		ldd r18,Z+14
 39250 10e34 3785      		ldd r19,Z+15
 39251 10e36 8B81      		ldd r24,Y+3
 39252 10e38 9C81      		ldd r25,Y+4
 39253 10e3a 880F      		lsl r24
 39254 10e3c 991F      		rol r25
 39255 10e3e 820F      		add r24,r18
 39256 10e40 931F      		adc r25,r19
 39257 10e42 FC01      		movw r30,r24
 39258 10e44 2081      		ld r18,Z
 39259 10e46 3181      		ldd r19,Z+1
 39260 10e48 8CA5      		ldd r24,Y+44
 39261 10e4a 9DA5      		ldd r25,Y+45
 39262 10e4c B901      		movw r22,r18
 39263 10e4e 0E94 0000 		call removeLink
3492:lp_solve_5.5/lp_presolve.c ****         for(ix = mat->col_end[j-1]; ix < mat->col_end[j]; ix++)
 39264               		.loc 2 3492 0 discriminator 3
 39265 10e52 8B81      		ldd r24,Y+3
 39266 10e54 9C81      		ldd r25,Y+4
 39267 10e56 0196      		adiw r24,1
 39268 10e58 9C83      		std Y+4,r25
 39269 10e5a 8B83      		std Y+3,r24
 39270               	.L1657:
3492:lp_solve_5.5/lp_presolve.c ****         for(ix = mat->col_end[j-1]; ix < mat->col_end[j]; ix++)
 39271               		.loc 2 3492 0 is_stmt 0 discriminator 1
 39272 10e5c 8889      		ldd r24,Y+16
 39273 10e5e 9989      		ldd r25,Y+17
 39274 10e60 FC01      		movw r30,r24
 39275 10e62 2289      		ldd r18,Z+18
 39276 10e64 3389      		ldd r19,Z+19
 39277 10e66 8D81      		ldd r24,Y+5
 39278 10e68 9E81      		ldd r25,Y+6
 39279 10e6a 880F      		lsl r24
 39280 10e6c 991F      		rol r25
 39281 10e6e 820F      		add r24,r18
 39282 10e70 931F      		adc r25,r19
 39283 10e72 FC01      		movw r30,r24
 39284 10e74 2081      		ld r18,Z
 39285 10e76 3181      		ldd r19,Z+1
 39286 10e78 8B81      		ldd r24,Y+3
 39287 10e7a 9C81      		ldd r25,Y+4
 39288 10e7c 8217      		cp r24,r18
 39289 10e7e 9307      		cpc r25,r19
 39290 10e80 04F0      		brlt .L1658
 39291               	.L1651:
3473:lp_solve_5.5/lp_presolve.c **** 
 39292               		.loc 2 3473 0 is_stmt 1 discriminator 2
 39293 10e82 8AA5      		ldd r24,Y+42
 39294 10e84 9BA5      		ldd r25,Y+43
 39295 10e86 2D81      		ldd r18,Y+5
 39296 10e88 3E81      		ldd r19,Y+6
 39297 10e8a B901      		movw r22,r18
 39298 10e8c 0E94 0000 		call nextActiveLink
 39299 10e90 9E83      		std Y+6,r25
 39300 10e92 8D83      		std Y+5,r24
 39301               	.L1647:
3473:lp_solve_5.5/lp_presolve.c **** 
 39302               		.loc 2 3473 0 is_stmt 0 discriminator 1
 39303 10e94 8D81      		ldd r24,Y+5
 39304 10e96 9E81      		ldd r25,Y+6
 39305 10e98 1816      		cp __zero_reg__,r24
 39306 10e9a 1906      		cpc __zero_reg__,r25
 39307 10e9c 04F4      		brge .L1659
3473:lp_solve_5.5/lp_presolve.c **** 
 39308               		.loc 2 3473 0 discriminator 3
 39309 10e9e 8CA5      		ldd r24,Y+44
 39310 10ea0 9DA5      		ldd r25,Y+45
 39311 10ea2 FC01      		movw r30,r24
 39312 10ea4 8281      		ldd r24,Z+2
 39313 10ea6 9381      		ldd r25,Z+3
 39314 10ea8 1816      		cp __zero_reg__,r24
 39315 10eaa 1906      		cpc __zero_reg__,r25
 39316 10eac 04F4      		brge .+2
 39317 10eae 00C0      		rjmp .L1660
 39318               	.L1659:
3494:lp_solve_5.5/lp_presolve.c ****       }
3495:lp_solve_5.5/lp_presolve.c ****     }
3496:lp_solve_5.5/lp_presolve.c ****     freeLink(&rowLL);
 39319               		.loc 2 3496 0 is_stmt 1
 39320 10eb0 CE01      		movw r24,r28
 39321 10eb2 8C96      		adiw r24,44
 39322 10eb4 0E94 0000 		call freeLink
 39323               	.L1646:
 39324               	.LBE9:
3497:lp_solve_5.5/lp_presolve.c ****   }
3498:lp_solve_5.5/lp_presolve.c **** 
3499:lp_solve_5.5/lp_presolve.c ****   /* Free list and return */
3500:lp_solve_5.5/lp_presolve.c ****   freeLink(&colLL);
 39325               		.loc 2 3500 0
 39326 10eb8 CE01      		movw r24,r28
 39327 10eba 8A96      		adiw r24,42
 39328 10ebc 0E94 0000 		call freeLink
3501:lp_solve_5.5/lp_presolve.c ****   return( nn );
 39329               		.loc 2 3501 0
 39330 10ec0 8F81      		ldd r24,Y+7
 39331 10ec2 9885      		ldd r25,Y+8
 39332               	/* epilogue start */
3502:lp_solve_5.5/lp_presolve.c **** }
 39333               		.loc 2 3502 0
 39334 10ec4 AF96      		adiw r28,47
 39335 10ec6 0FB6      		in __tmp_reg__,__SREG__
 39336 10ec8 F894      		cli
 39337 10eca DEBF      		out __SP_H__,r29
 39338 10ecc 0FBE      		out __SREG__,__tmp_reg__
 39339 10ece CDBF      		out __SP_L__,r28
 39340 10ed0 DF91      		pop r29
 39341 10ed2 CF91      		pop r28
 39342 10ed4 1F91      		pop r17
 39343 10ed6 0F91      		pop r16
 39344 10ed8 FF90      		pop r15
 39345 10eda EF90      		pop r14
 39346 10edc 0895      		ret
 39347               		.cfi_endproc
 39348               	.LFE76:
 39350               	.global	presolve_updatesums
 39352               	presolve_updatesums:
 39353               	.LFB77:
3503:lp_solve_5.5/lp_presolve.c **** 
3504:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_updatesums(presolverec *psdata)
3505:lp_solve_5.5/lp_presolve.c **** {
 39354               		.loc 2 3505 0
 39355               		.cfi_startproc
 39356 10ede EF92      		push r14
 39357               	.LCFI466:
 39358               		.cfi_def_cfa_offset 3
 39359               		.cfi_offset 14, -2
 39360 10ee0 FF92      		push r15
 39361               	.LCFI467:
 39362               		.cfi_def_cfa_offset 4
 39363               		.cfi_offset 15, -3
 39364 10ee2 0F93      		push r16
 39365               	.LCFI468:
 39366               		.cfi_def_cfa_offset 5
 39367               		.cfi_offset 16, -4
 39368 10ee4 CF93      		push r28
 39369               	.LCFI469:
 39370               		.cfi_def_cfa_offset 6
 39371               		.cfi_offset 28, -5
 39372 10ee6 DF93      		push r29
 39373               	.LCFI470:
 39374               		.cfi_def_cfa_offset 7
 39375               		.cfi_offset 29, -6
 39376 10ee8 00D0      		rcall .
 39377 10eea 00D0      		rcall .
 39378 10eec 00D0      		rcall .
 39379               	.LCFI471:
 39380               		.cfi_def_cfa_offset 13
 39381 10eee CDB7      		in r28,__SP_L__
 39382 10ef0 DEB7      		in r29,__SP_H__
 39383               	.LCFI472:
 39384               		.cfi_def_cfa_register 28
 39385               	/* prologue: function */
 39386               	/* frame size = 6 */
 39387               	/* stack size = 11 */
 39388               	.L__stack_usage = 11
 39389 10ef2 9E83      		std Y+6,r25
 39390 10ef4 8D83      		std Y+5,r24
3506:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 39391               		.loc 2 3506 0
 39392 10ef6 8D81      		ldd r24,Y+5
 39393 10ef8 9E81      		ldd r25,Y+6
 39394 10efa FC01      		movw r30,r24
 39395 10efc 8289      		ldd r24,Z+18
 39396 10efe 9389      		ldd r25,Z+19
 39397 10f00 9C83      		std Y+4,r25
 39398 10f02 8B83      		std Y+3,r24
3507:lp_solve_5.5/lp_presolve.c ****   int      j;
3508:lp_solve_5.5/lp_presolve.c **** 
3509:lp_solve_5.5/lp_presolve.c ****   /* Initialize row accumulation arrays */
3510:lp_solve_5.5/lp_presolve.c ****   MEMCLEAR(psdata->rows->pluupper, lp->rows + 1);
 39399               		.loc 2 3510 0
 39400 10f04 8B81      		ldd r24,Y+3
 39401 10f06 9C81      		ldd r25,Y+4
 39402 10f08 8651      		subi r24,22
 39403 10f0a 9E4F      		sbci r25,-2
 39404 10f0c FC01      		movw r30,r24
 39405 10f0e 8081      		ld r24,Z
 39406 10f10 9181      		ldd r25,Z+1
 39407 10f12 0196      		adiw r24,1
 39408 10f14 9C01      		movw r18,r24
 39409 10f16 220F      		lsl r18
 39410 10f18 331F      		rol r19
 39411 10f1a 220F      		lsl r18
 39412 10f1c 331F      		rol r19
 39413 10f1e 8D81      		ldd r24,Y+5
 39414 10f20 9E81      		ldd r25,Y+6
 39415 10f22 FC01      		movw r30,r24
 39416 10f24 8081      		ld r24,Z
 39417 10f26 9181      		ldd r25,Z+1
 39418 10f28 FC01      		movw r30,r24
 39419 10f2a 8289      		ldd r24,Z+18
 39420 10f2c 9389      		ldd r25,Z+19
 39421 10f2e A901      		movw r20,r18
 39422 10f30 60E0      		ldi r22,0
 39423 10f32 70E0      		ldi r23,0
 39424 10f34 0E94 0000 		call memset
3511:lp_solve_5.5/lp_presolve.c ****   MEMCLEAR(psdata->rows->negupper, lp->rows + 1);
 39425               		.loc 2 3511 0
 39426 10f38 8B81      		ldd r24,Y+3
 39427 10f3a 9C81      		ldd r25,Y+4
 39428 10f3c 8651      		subi r24,22
 39429 10f3e 9E4F      		sbci r25,-2
 39430 10f40 FC01      		movw r30,r24
 39431 10f42 8081      		ld r24,Z
 39432 10f44 9181      		ldd r25,Z+1
 39433 10f46 0196      		adiw r24,1
 39434 10f48 9C01      		movw r18,r24
 39435 10f4a 220F      		lsl r18
 39436 10f4c 331F      		rol r19
 39437 10f4e 220F      		lsl r18
 39438 10f50 331F      		rol r19
 39439 10f52 8D81      		ldd r24,Y+5
 39440 10f54 9E81      		ldd r25,Y+6
 39441 10f56 FC01      		movw r30,r24
 39442 10f58 8081      		ld r24,Z
 39443 10f5a 9181      		ldd r25,Z+1
 39444 10f5c FC01      		movw r30,r24
 39445 10f5e 8489      		ldd r24,Z+20
 39446 10f60 9589      		ldd r25,Z+21
 39447 10f62 A901      		movw r20,r18
 39448 10f64 60E0      		ldi r22,0
 39449 10f66 70E0      		ldi r23,0
 39450 10f68 0E94 0000 		call memset
3512:lp_solve_5.5/lp_presolve.c ****   MEMCLEAR(psdata->rows->plulower, lp->rows + 1);
 39451               		.loc 2 3512 0
 39452 10f6c 8B81      		ldd r24,Y+3
 39453 10f6e 9C81      		ldd r25,Y+4
 39454 10f70 8651      		subi r24,22
 39455 10f72 9E4F      		sbci r25,-2
 39456 10f74 FC01      		movw r30,r24
 39457 10f76 8081      		ld r24,Z
 39458 10f78 9181      		ldd r25,Z+1
 39459 10f7a 0196      		adiw r24,1
 39460 10f7c 9C01      		movw r18,r24
 39461 10f7e 220F      		lsl r18
 39462 10f80 331F      		rol r19
 39463 10f82 220F      		lsl r18
 39464 10f84 331F      		rol r19
 39465 10f86 8D81      		ldd r24,Y+5
 39466 10f88 9E81      		ldd r25,Y+6
 39467 10f8a FC01      		movw r30,r24
 39468 10f8c 8081      		ld r24,Z
 39469 10f8e 9181      		ldd r25,Z+1
 39470 10f90 FC01      		movw r30,r24
 39471 10f92 8685      		ldd r24,Z+14
 39472 10f94 9785      		ldd r25,Z+15
 39473 10f96 A901      		movw r20,r18
 39474 10f98 60E0      		ldi r22,0
 39475 10f9a 70E0      		ldi r23,0
 39476 10f9c 0E94 0000 		call memset
3513:lp_solve_5.5/lp_presolve.c ****   MEMCLEAR(psdata->rows->neglower, lp->rows + 1);
 39477               		.loc 2 3513 0
 39478 10fa0 8B81      		ldd r24,Y+3
 39479 10fa2 9C81      		ldd r25,Y+4
 39480 10fa4 8651      		subi r24,22
 39481 10fa6 9E4F      		sbci r25,-2
 39482 10fa8 FC01      		movw r30,r24
 39483 10faa 8081      		ld r24,Z
 39484 10fac 9181      		ldd r25,Z+1
 39485 10fae 0196      		adiw r24,1
 39486 10fb0 9C01      		movw r18,r24
 39487 10fb2 220F      		lsl r18
 39488 10fb4 331F      		rol r19
 39489 10fb6 220F      		lsl r18
 39490 10fb8 331F      		rol r19
 39491 10fba 8D81      		ldd r24,Y+5
 39492 10fbc 9E81      		ldd r25,Y+6
 39493 10fbe FC01      		movw r30,r24
 39494 10fc0 8081      		ld r24,Z
 39495 10fc2 9181      		ldd r25,Z+1
 39496 10fc4 FC01      		movw r30,r24
 39497 10fc6 8089      		ldd r24,Z+16
 39498 10fc8 9189      		ldd r25,Z+17
 39499 10fca A901      		movw r20,r18
 39500 10fcc 60E0      		ldi r22,0
 39501 10fce 70E0      		ldi r23,0
 39502 10fd0 0E94 0000 		call memset
3514:lp_solve_5.5/lp_presolve.c ****   MEMCLEAR(psdata->rows->infcount, lp->rows + 1);
 39503               		.loc 2 3514 0
 39504 10fd4 8B81      		ldd r24,Y+3
 39505 10fd6 9C81      		ldd r25,Y+4
 39506 10fd8 8651      		subi r24,22
 39507 10fda 9E4F      		sbci r25,-2
 39508 10fdc FC01      		movw r30,r24
 39509 10fde 8081      		ld r24,Z
 39510 10fe0 9181      		ldd r25,Z+1
 39511 10fe2 0196      		adiw r24,1
 39512 10fe4 9C01      		movw r18,r24
 39513 10fe6 220F      		lsl r18
 39514 10fe8 331F      		rol r19
 39515 10fea 8D81      		ldd r24,Y+5
 39516 10fec 9E81      		ldd r25,Y+6
 39517 10fee FC01      		movw r30,r24
 39518 10ff0 8081      		ld r24,Z
 39519 10ff2 9181      		ldd r25,Z+1
 39520 10ff4 FC01      		movw r30,r24
 39521 10ff6 8485      		ldd r24,Z+12
 39522 10ff8 9585      		ldd r25,Z+13
 39523 10ffa A901      		movw r20,r18
 39524 10ffc 60E0      		ldi r22,0
 39525 10ffe 70E0      		ldi r23,0
 39526 11000 0E94 0000 		call memset
3515:lp_solve_5.5/lp_presolve.c **** 
3516:lp_solve_5.5/lp_presolve.c ****   /* Loop over active columns */
3517:lp_solve_5.5/lp_presolve.c ****   for(j = firstActiveLink(psdata->cols->varmap); j != 0;
 39527               		.loc 2 3517 0
 39528 11004 8D81      		ldd r24,Y+5
 39529 11006 9E81      		ldd r25,Y+6
 39530 11008 FC01      		movw r30,r24
 39531 1100a 8281      		ldd r24,Z+2
 39532 1100c 9381      		ldd r25,Z+3
 39533 1100e FC01      		movw r30,r24
 39534 11010 8081      		ld r24,Z
 39535 11012 9181      		ldd r25,Z+1
 39536 11014 0E94 0000 		call firstActiveLink
 39537 11018 9A83      		std Y+2,r25
 39538 1101a 8983      		std Y+1,r24
 39539 1101c 00C0      		rjmp .L1668
 39540               	.L1669:
3518:lp_solve_5.5/lp_presolve.c ****       j = nextActiveLink(psdata->cols->varmap, j)) {
3519:lp_solve_5.5/lp_presolve.c ****     presolve_colfix(psdata, j, lp->infinite, FALSE, NULL);
 39541               		.loc 2 3519 0
 39542 1101e 8B81      		ldd r24,Y+3
 39543 11020 9C81      		ldd r25,Y+4
 39544 11022 865F      		subi r24,-10
 39545 11024 9C4F      		sbci r25,-4
 39546 11026 FC01      		movw r30,r24
 39547 11028 8081      		ld r24,Z
 39548 1102a 9181      		ldd r25,Z+1
 39549 1102c A281      		ldd r26,Z+2
 39550 1102e B381      		ldd r27,Z+3
 39551 11030 6981      		ldd r22,Y+1
 39552 11032 7A81      		ldd r23,Y+2
 39553 11034 ED81      		ldd r30,Y+5
 39554 11036 FE81      		ldd r31,Y+6
 39555 11038 E12C      		mov r14,__zero_reg__
 39556 1103a F12C      		mov r15,__zero_reg__
 39557 1103c 00E0      		ldi r16,0
 39558 1103e 9C01      		movw r18,r24
 39559 11040 AD01      		movw r20,r26
 39560 11042 CF01      		movw r24,r30
 39561 11044 0E94 0000 		call presolve_colfix
3518:lp_solve_5.5/lp_presolve.c ****       j = nextActiveLink(psdata->cols->varmap, j)) {
 39562               		.loc 2 3518 0
 39563 11048 8D81      		ldd r24,Y+5
 39564 1104a 9E81      		ldd r25,Y+6
 39565 1104c FC01      		movw r30,r24
 39566 1104e 8281      		ldd r24,Z+2
 39567 11050 9381      		ldd r25,Z+3
 39568 11052 FC01      		movw r30,r24
 39569 11054 8081      		ld r24,Z
 39570 11056 9181      		ldd r25,Z+1
 39571 11058 2981      		ldd r18,Y+1
 39572 1105a 3A81      		ldd r19,Y+2
 39573 1105c B901      		movw r22,r18
 39574 1105e 0E94 0000 		call nextActiveLink
 39575 11062 9A83      		std Y+2,r25
 39576 11064 8983      		std Y+1,r24
 39577               	.L1668:
3517:lp_solve_5.5/lp_presolve.c ****       j = nextActiveLink(psdata->cols->varmap, j)) {
 39578               		.loc 2 3517 0 discriminator 1
 39579 11066 8981      		ldd r24,Y+1
 39580 11068 9A81      		ldd r25,Y+2
 39581 1106a 892B      		or r24,r25
 39582 1106c 01F4      		brne .L1669
3520:lp_solve_5.5/lp_presolve.c ****   }
3521:lp_solve_5.5/lp_presolve.c **** 
3522:lp_solve_5.5/lp_presolve.c **** #ifdef UseDualPresolve
3523:lp_solve_5.5/lp_presolve.c ****   /* Initialize column accumulation arrays */
3524:lp_solve_5.5/lp_presolve.c ****   MEMCLEAR(psdata->cols->pluupper, lp->columns + 1);
3525:lp_solve_5.5/lp_presolve.c ****   MEMCLEAR(psdata->cols->negupper, lp->columns + 1);
3526:lp_solve_5.5/lp_presolve.c ****   MEMCLEAR(psdata->cols->plulower, lp->columns + 1);
3527:lp_solve_5.5/lp_presolve.c ****   MEMCLEAR(psdata->cols->neglower, lp->columns + 1);
3528:lp_solve_5.5/lp_presolve.c ****   MEMCLEAR(psdata->cols->infcount, lp->columns + 1);
3529:lp_solve_5.5/lp_presolve.c **** 
3530:lp_solve_5.5/lp_presolve.c ****   /* Loop over active rows */
3531:lp_solve_5.5/lp_presolve.c ****   for(j = firstActiveLink(psdata->rows->varmap); j != 0;
3532:lp_solve_5.5/lp_presolve.c ****       j = nextActiveLink(psdata->rows->varmap, j)) {
3533:lp_solve_5.5/lp_presolve.c ****     presolve_rowfix(psdata, j, lp->infinite, FALSE, NULL);
3534:lp_solve_5.5/lp_presolve.c ****   }
3535:lp_solve_5.5/lp_presolve.c **** #endif
3536:lp_solve_5.5/lp_presolve.c **** 
3537:lp_solve_5.5/lp_presolve.c ****   return( TRUE );
 39583               		.loc 2 3537 0
 39584 1106e 81E0      		ldi r24,lo8(1)
 39585               	/* epilogue start */
3538:lp_solve_5.5/lp_presolve.c **** }
 39586               		.loc 2 3538 0
 39587 11070 2696      		adiw r28,6
 39588 11072 0FB6      		in __tmp_reg__,__SREG__
 39589 11074 F894      		cli
 39590 11076 DEBF      		out __SP_H__,r29
 39591 11078 0FBE      		out __SREG__,__tmp_reg__
 39592 1107a CDBF      		out __SP_L__,r28
 39593 1107c DF91      		pop r29
 39594 1107e CF91      		pop r28
 39595 11080 0F91      		pop r16
 39596 11082 FF90      		pop r15
 39597 11084 EF90      		pop r14
 39598 11086 0895      		ret
 39599               		.cfi_endproc
 39600               	.LFE77:
 39602               	.global	presolve_finalize
 39604               	presolve_finalize:
 39605               	.LFB78:
3539:lp_solve_5.5/lp_presolve.c **** 
3540:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_finalize(presolverec *psdata)
3541:lp_solve_5.5/lp_presolve.c **** {
 39606               		.loc 2 3541 0
 39607               		.cfi_startproc
 39608 11088 FF92      		push r15
 39609               	.LCFI473:
 39610               		.cfi_def_cfa_offset 3
 39611               		.cfi_offset 15, -2
 39612 1108a 0F93      		push r16
 39613               	.LCFI474:
 39614               		.cfi_def_cfa_offset 4
 39615               		.cfi_offset 16, -3
 39616 1108c 1F93      		push r17
 39617               	.LCFI475:
 39618               		.cfi_def_cfa_offset 5
 39619               		.cfi_offset 17, -4
 39620 1108e CF93      		push r28
 39621               	.LCFI476:
 39622               		.cfi_def_cfa_offset 6
 39623               		.cfi_offset 28, -5
 39624 11090 DF93      		push r29
 39625               	.LCFI477:
 39626               		.cfi_def_cfa_offset 7
 39627               		.cfi_offset 29, -6
 39628 11092 CDB7      		in r28,__SP_L__
 39629 11094 DEB7      		in r29,__SP_H__
 39630               	.LCFI478:
 39631               		.cfi_def_cfa_register 28
 39632 11096 2997      		sbiw r28,9
 39633               	.LCFI479:
 39634               		.cfi_def_cfa_offset 16
 39635 11098 0FB6      		in __tmp_reg__,__SREG__
 39636 1109a F894      		cli
 39637 1109c DEBF      		out __SP_H__,r29
 39638 1109e 0FBE      		out __SREG__,__tmp_reg__
 39639 110a0 CDBF      		out __SP_L__,r28
 39640               	/* prologue: function */
 39641               	/* frame size = 9 */
 39642               	/* stack size = 14 */
 39643               	.L__stack_usage = 14
 39644 110a2 9987      		std Y+9,r25
 39645 110a4 8887      		std Y+8,r24
3542:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 39646               		.loc 2 3542 0
 39647 110a6 8885      		ldd r24,Y+8
 39648 110a8 9985      		ldd r25,Y+9
 39649 110aa FC01      		movw r30,r24
 39650 110ac 8289      		ldd r24,Z+18
 39651 110ae 9389      		ldd r25,Z+19
 39652 110b0 9D83      		std Y+5,r25
 39653 110b2 8C83      		std Y+4,r24
3543:lp_solve_5.5/lp_presolve.c ****   MYBOOL   compactvars = FALSE;
 39654               		.loc 2 3543 0
 39655 110b4 1982      		std Y+1,__zero_reg__
3544:lp_solve_5.5/lp_presolve.c ****   int      ke, n;
3545:lp_solve_5.5/lp_presolve.c **** 
3546:lp_solve_5.5/lp_presolve.c ****   /* Save eliminated rows and columns for restoration purposes */
3547:lp_solve_5.5/lp_presolve.c **** #ifdef SavePresolveEliminated
3548:lp_solve_5.5/lp_presolve.c ****   psdata->deletedA = mat_extractmat(lp->matA, rowmap, colmap, TRUE);
3549:lp_solve_5.5/lp_presolve.c ****   if(!mat_validate(psdata->deletedA))
3550:lp_solve_5.5/lp_presolve.c ****     report(lp, SEVERE, "presolve_finalize: Could not validate matrix with undo data\n");
3551:lp_solve_5.5/lp_presolve.c **** #endif
3552:lp_solve_5.5/lp_presolve.c **** 
3553:lp_solve_5.5/lp_presolve.c ****   /* Check if OF columns are to be deleted */
3554:lp_solve_5.5/lp_presolve.c ****   lp->presolve_undo->OFcolsdeleted = FALSE;
 39656               		.loc 2 3554 0
 39657 110b6 8C81      		ldd r24,Y+4
 39658 110b8 9D81      		ldd r25,Y+5
 39659 110ba 8A59      		subi r24,-102
 39660 110bc 9C4F      		sbci r25,-4
 39661 110be FC01      		movw r30,r24
 39662 110c0 8081      		ld r24,Z
 39663 110c2 9181      		ldd r25,Z+1
 39664 110c4 FC01      		movw r30,r24
 39665 110c6 168A      		std Z+22,__zero_reg__
3555:lp_solve_5.5/lp_presolve.c ****   for(n = firstInactiveLink(psdata->cols->varmap); (n != 0) && !lp->presolve_undo->OFcolsdeleted;
 39666               		.loc 2 3555 0
 39667 110c8 8885      		ldd r24,Y+8
 39668 110ca 9985      		ldd r25,Y+9
 39669 110cc FC01      		movw r30,r24
 39670 110ce 8281      		ldd r24,Z+2
 39671 110d0 9381      		ldd r25,Z+3
 39672 110d2 FC01      		movw r30,r24
 39673 110d4 8081      		ld r24,Z
 39674 110d6 9181      		ldd r25,Z+1
 39675 110d8 0E94 0000 		call firstInactiveLink
 39676 110dc 9B83      		std Y+3,r25
 39677 110de 8A83      		std Y+2,r24
 39678 110e0 00C0      		rjmp .L1672
 39679               	.L1675:
3556:lp_solve_5.5/lp_presolve.c ****       n = nextInactiveLink(psdata->cols->varmap, n))
3557:lp_solve_5.5/lp_presolve.c ****     lp->presolve_undo->OFcolsdeleted = (MYBOOL) (lp->orig_obj[n] != 0);
 39680               		.loc 2 3557 0
 39681 110e2 8C81      		ldd r24,Y+4
 39682 110e4 9D81      		ldd r25,Y+5
 39683 110e6 8A59      		subi r24,-102
 39684 110e8 9C4F      		sbci r25,-4
 39685 110ea FC01      		movw r30,r24
 39686 110ec 0081      		ld r16,Z
 39687 110ee 1181      		ldd r17,Z+1
 39688 110f0 8C81      		ldd r24,Y+4
 39689 110f2 9D81      		ldd r25,Y+5
 39690 110f4 845D      		subi r24,-44
 39691 110f6 9D4F      		sbci r25,-3
 39692 110f8 FC01      		movw r30,r24
 39693 110fa 2081      		ld r18,Z
 39694 110fc 3181      		ldd r19,Z+1
 39695 110fe 8A81      		ldd r24,Y+2
 39696 11100 9B81      		ldd r25,Y+3
 39697 11102 880F      		lsl r24
 39698 11104 991F      		rol r25
 39699 11106 880F      		lsl r24
 39700 11108 991F      		rol r25
 39701 1110a 820F      		add r24,r18
 39702 1110c 931F      		adc r25,r19
 39703 1110e FC01      		movw r30,r24
 39704 11110 8081      		ld r24,Z
 39705 11112 9181      		ldd r25,Z+1
 39706 11114 A281      		ldd r26,Z+2
 39707 11116 B381      		ldd r27,Z+3
 39708 11118 FF24      		clr r15
 39709 1111a F394      		inc r15
 39710 1111c 20E0      		ldi r18,0
 39711 1111e 30E0      		ldi r19,0
 39712 11120 A901      		movw r20,r18
 39713 11122 BC01      		movw r22,r24
 39714 11124 CD01      		movw r24,r26
 39715 11126 0E94 0000 		call __nesf2
 39716 1112a 8823      		tst r24
 39717 1112c 01F4      		brne .L1673
 39718 1112e F12C      		mov r15,__zero_reg__
 39719               	.L1673:
 39720 11130 8F2D      		mov r24,r15
 39721 11132 F801      		movw r30,r16
 39722 11134 868B      		std Z+22,r24
3556:lp_solve_5.5/lp_presolve.c ****       n = nextInactiveLink(psdata->cols->varmap, n))
 39723               		.loc 2 3556 0
 39724 11136 8885      		ldd r24,Y+8
 39725 11138 9985      		ldd r25,Y+9
 39726 1113a FC01      		movw r30,r24
 39727 1113c 8281      		ldd r24,Z+2
 39728 1113e 9381      		ldd r25,Z+3
 39729 11140 FC01      		movw r30,r24
 39730 11142 8081      		ld r24,Z
 39731 11144 9181      		ldd r25,Z+1
 39732 11146 2A81      		ldd r18,Y+2
 39733 11148 3B81      		ldd r19,Y+3
 39734 1114a B901      		movw r22,r18
 39735 1114c 0E94 0000 		call nextInactiveLink
 39736 11150 9B83      		std Y+3,r25
 39737 11152 8A83      		std Y+2,r24
 39738               	.L1672:
3555:lp_solve_5.5/lp_presolve.c ****   for(n = firstInactiveLink(psdata->cols->varmap); (n != 0) && !lp->presolve_undo->OFcolsdeleted;
 39739               		.loc 2 3555 0 discriminator 1
 39740 11154 8A81      		ldd r24,Y+2
 39741 11156 9B81      		ldd r25,Y+3
 39742 11158 892B      		or r24,r25
 39743 1115a 01F0      		breq .L1674
3555:lp_solve_5.5/lp_presolve.c ****   for(n = firstInactiveLink(psdata->cols->varmap); (n != 0) && !lp->presolve_undo->OFcolsdeleted;
 39744               		.loc 2 3555 0 is_stmt 0 discriminator 2
 39745 1115c 8C81      		ldd r24,Y+4
 39746 1115e 9D81      		ldd r25,Y+5
 39747 11160 8A59      		subi r24,-102
 39748 11162 9C4F      		sbci r25,-4
 39749 11164 FC01      		movw r30,r24
 39750 11166 8081      		ld r24,Z
 39751 11168 9181      		ldd r25,Z+1
 39752 1116a FC01      		movw r30,r24
 39753 1116c 8689      		ldd r24,Z+22
 39754 1116e 8823      		tst r24
 39755 11170 01F4      		brne .+2
 39756 11172 00C0      		rjmp .L1675
 39757               	.L1674:
3558:lp_solve_5.5/lp_presolve.c **** 
3559:lp_solve_5.5/lp_presolve.c ****   /* Delete eliminated columns */
3560:lp_solve_5.5/lp_presolve.c ****   ke = lastInactiveLink(psdata->cols->varmap);
 39758               		.loc 2 3560 0 is_stmt 1
 39759 11174 8885      		ldd r24,Y+8
 39760 11176 9985      		ldd r25,Y+9
 39761 11178 FC01      		movw r30,r24
 39762 1117a 8281      		ldd r24,Z+2
 39763 1117c 9381      		ldd r25,Z+3
 39764 1117e FC01      		movw r30,r24
 39765 11180 8081      		ld r24,Z
 39766 11182 9181      		ldd r25,Z+1
 39767 11184 0E94 0000 		call lastInactiveLink
 39768 11188 9F83      		std Y+7,r25
 39769 1118a 8E83      		std Y+6,r24
3561:lp_solve_5.5/lp_presolve.c ****   n = countInactiveLink(psdata->cols->varmap);
 39770               		.loc 2 3561 0
 39771 1118c 8885      		ldd r24,Y+8
 39772 1118e 9985      		ldd r25,Y+9
 39773 11190 FC01      		movw r30,r24
 39774 11192 8281      		ldd r24,Z+2
 39775 11194 9381      		ldd r25,Z+3
 39776 11196 FC01      		movw r30,r24
 39777 11198 8081      		ld r24,Z
 39778 1119a 9181      		ldd r25,Z+1
 39779 1119c 0E94 0000 		call countInactiveLink
 39780 111a0 9B83      		std Y+3,r25
 39781 111a2 8A83      		std Y+2,r24
3562:lp_solve_5.5/lp_presolve.c ****   if((n > 0) && (ke > 0)) {
 39782               		.loc 2 3562 0
 39783 111a4 8A81      		ldd r24,Y+2
 39784 111a6 9B81      		ldd r25,Y+3
 39785 111a8 1816      		cp __zero_reg__,r24
 39786 111aa 1906      		cpc __zero_reg__,r25
 39787 111ac 04F4      		brge .L1676
 39788               		.loc 2 3562 0 is_stmt 0 discriminator 1
 39789 111ae 8E81      		ldd r24,Y+6
 39790 111b0 9F81      		ldd r25,Y+7
 39791 111b2 1816      		cp __zero_reg__,r24
 39792 111b4 1906      		cpc __zero_reg__,r25
 39793 111b6 04F4      		brge .L1676
3563:lp_solve_5.5/lp_presolve.c ****     del_columnex(lp, psdata->cols->varmap);
 39794               		.loc 2 3563 0 is_stmt 1
 39795 111b8 8885      		ldd r24,Y+8
 39796 111ba 9985      		ldd r25,Y+9
 39797 111bc FC01      		movw r30,r24
 39798 111be 8281      		ldd r24,Z+2
 39799 111c0 9381      		ldd r25,Z+3
 39800 111c2 FC01      		movw r30,r24
 39801 111c4 2081      		ld r18,Z
 39802 111c6 3181      		ldd r19,Z+1
 39803 111c8 8C81      		ldd r24,Y+4
 39804 111ca 9D81      		ldd r25,Y+5
 39805 111cc B901      		movw r22,r18
 39806 111ce 0E94 0000 		call del_columnex
3564:lp_solve_5.5/lp_presolve.c ****     mat_colcompact(lp->matA, lp->presolve_undo->orig_rows,
3565:lp_solve_5.5/lp_presolve.c ****                              lp->presolve_undo->orig_columns);
 39807               		.loc 2 3565 0
 39808 111d2 8C81      		ldd r24,Y+4
 39809 111d4 9D81      		ldd r25,Y+5
 39810 111d6 8A59      		subi r24,-102
 39811 111d8 9C4F      		sbci r25,-4
 39812 111da FC01      		movw r30,r24
 39813 111dc 8081      		ld r24,Z
 39814 111de 9181      		ldd r25,Z+1
3564:lp_solve_5.5/lp_presolve.c ****     mat_colcompact(lp->matA, lp->presolve_undo->orig_rows,
 39815               		.loc 2 3564 0
 39816 111e0 FC01      		movw r30,r24
 39817 111e2 4481      		ldd r20,Z+4
 39818 111e4 5581      		ldd r21,Z+5
 39819 111e6 8C81      		ldd r24,Y+4
 39820 111e8 9D81      		ldd r25,Y+5
 39821 111ea 8A59      		subi r24,-102
 39822 111ec 9C4F      		sbci r25,-4
 39823 111ee FC01      		movw r30,r24
 39824 111f0 8081      		ld r24,Z
 39825 111f2 9181      		ldd r25,Z+1
 39826 111f4 FC01      		movw r30,r24
 39827 111f6 2281      		ldd r18,Z+2
 39828 111f8 3381      		ldd r19,Z+3
 39829 111fa 8C81      		ldd r24,Y+4
 39830 111fc 9D81      		ldd r25,Y+5
 39831 111fe 8A54      		subi r24,74
 39832 11200 9D4F      		sbci r25,-3
 39833 11202 FC01      		movw r30,r24
 39834 11204 8081      		ld r24,Z
 39835 11206 9181      		ldd r25,Z+1
 39836 11208 B901      		movw r22,r18
 39837 1120a 0E94 0000 		call mat_colcompact
3566:lp_solve_5.5/lp_presolve.c ****     compactvars = TRUE;
 39838               		.loc 2 3566 0
 39839 1120e 81E0      		ldi r24,lo8(1)
 39840 11210 8983      		std Y+1,r24
 39841               	.L1676:
3567:lp_solve_5.5/lp_presolve.c ****   }
3568:lp_solve_5.5/lp_presolve.c **** 
3569:lp_solve_5.5/lp_presolve.c ****   /* Delete eliminated rows */
3570:lp_solve_5.5/lp_presolve.c ****   ke = lastInactiveLink(psdata->rows->varmap);
 39842               		.loc 2 3570 0
 39843 11212 8885      		ldd r24,Y+8
 39844 11214 9985      		ldd r25,Y+9
 39845 11216 FC01      		movw r30,r24
 39846 11218 8081      		ld r24,Z
 39847 1121a 9181      		ldd r25,Z+1
 39848 1121c FC01      		movw r30,r24
 39849 1121e 8081      		ld r24,Z
 39850 11220 9181      		ldd r25,Z+1
 39851 11222 0E94 0000 		call lastInactiveLink
 39852 11226 9F83      		std Y+7,r25
 39853 11228 8E83      		std Y+6,r24
3571:lp_solve_5.5/lp_presolve.c ****   n = countInactiveLink(psdata->rows->varmap);
 39854               		.loc 2 3571 0
 39855 1122a 8885      		ldd r24,Y+8
 39856 1122c 9985      		ldd r25,Y+9
 39857 1122e FC01      		movw r30,r24
 39858 11230 8081      		ld r24,Z
 39859 11232 9181      		ldd r25,Z+1
 39860 11234 FC01      		movw r30,r24
 39861 11236 8081      		ld r24,Z
 39862 11238 9181      		ldd r25,Z+1
 39863 1123a 0E94 0000 		call countInactiveLink
 39864 1123e 9B83      		std Y+3,r25
 39865 11240 8A83      		std Y+2,r24
3572:lp_solve_5.5/lp_presolve.c ****   if((n > 0) && (ke > 0)) {
 39866               		.loc 2 3572 0
 39867 11242 8A81      		ldd r24,Y+2
 39868 11244 9B81      		ldd r25,Y+3
 39869 11246 1816      		cp __zero_reg__,r24
 39870 11248 1906      		cpc __zero_reg__,r25
 39871 1124a 04F4      		brge .L1677
 39872               		.loc 2 3572 0 is_stmt 0 discriminator 1
 39873 1124c 8E81      		ldd r24,Y+6
 39874 1124e 9F81      		ldd r25,Y+7
 39875 11250 1816      		cp __zero_reg__,r24
 39876 11252 1906      		cpc __zero_reg__,r25
 39877 11254 04F4      		brge .L1677
3573:lp_solve_5.5/lp_presolve.c ****     del_constraintex(lp, psdata->rows->varmap);
 39878               		.loc 2 3573 0 is_stmt 1
 39879 11256 8885      		ldd r24,Y+8
 39880 11258 9985      		ldd r25,Y+9
 39881 1125a FC01      		movw r30,r24
 39882 1125c 8081      		ld r24,Z
 39883 1125e 9181      		ldd r25,Z+1
 39884 11260 FC01      		movw r30,r24
 39885 11262 2081      		ld r18,Z
 39886 11264 3181      		ldd r19,Z+1
 39887 11266 8C81      		ldd r24,Y+4
 39888 11268 9D81      		ldd r25,Y+5
 39889 1126a B901      		movw r22,r18
 39890 1126c 0E94 0000 		call del_constraintex
3574:lp_solve_5.5/lp_presolve.c ****     mat_rowcompact(lp->matA, TRUE);
 39891               		.loc 2 3574 0
 39892 11270 8C81      		ldd r24,Y+4
 39893 11272 9D81      		ldd r25,Y+5
 39894 11274 8A54      		subi r24,74
 39895 11276 9D4F      		sbci r25,-3
 39896 11278 FC01      		movw r30,r24
 39897 1127a 8081      		ld r24,Z
 39898 1127c 9181      		ldd r25,Z+1
 39899 1127e 61E0      		ldi r22,lo8(1)
 39900 11280 0E94 0000 		call mat_rowcompact
3575:lp_solve_5.5/lp_presolve.c ****     compactvars = TRUE;
 39901               		.loc 2 3575 0
 39902 11284 81E0      		ldi r24,lo8(1)
 39903 11286 8983      		std Y+1,r24
 39904 11288 00C0      		rjmp .L1678
 39905               	.L1677:
3576:lp_solve_5.5/lp_presolve.c ****   }
3577:lp_solve_5.5/lp_presolve.c ****   else if(psdata->nzdeleted > 0)
 39906               		.loc 2 3577 0
 39907 1128a 8885      		ldd r24,Y+8
 39908 1128c 9985      		ldd r25,Y+9
 39909 1128e FC01      		movw r30,r24
 39910 11290 82A1      		ldd r24,Z+34
 39911 11292 93A1      		ldd r25,Z+35
 39912 11294 1816      		cp __zero_reg__,r24
 39913 11296 1906      		cpc __zero_reg__,r25
 39914 11298 04F4      		brge .L1678
3578:lp_solve_5.5/lp_presolve.c ****     mat_zerocompact(lp->matA);
 39915               		.loc 2 3578 0
 39916 1129a 8C81      		ldd r24,Y+4
 39917 1129c 9D81      		ldd r25,Y+5
 39918 1129e 8A54      		subi r24,74
 39919 112a0 9D4F      		sbci r25,-3
 39920 112a2 FC01      		movw r30,r24
 39921 112a4 8081      		ld r24,Z
 39922 112a6 9181      		ldd r25,Z+1
 39923 112a8 0E94 0000 		call mat_zerocompact
 39924               	.L1678:
3579:lp_solve_5.5/lp_presolve.c **** 
3580:lp_solve_5.5/lp_presolve.c ****   /* Do compacting and updating of variable maps */
3581:lp_solve_5.5/lp_presolve.c ****   if(compactvars)
 39925               		.loc 2 3581 0
 39926 112ac 8981      		ldd r24,Y+1
 39927 112ae 8823      		tst r24
 39928 112b0 01F0      		breq .L1679
3582:lp_solve_5.5/lp_presolve.c ****     varmap_compact(lp, lp->presolve_undo->orig_rows,
3583:lp_solve_5.5/lp_presolve.c ****                        lp->presolve_undo->orig_columns);
 39929               		.loc 2 3583 0
 39930 112b2 8C81      		ldd r24,Y+4
 39931 112b4 9D81      		ldd r25,Y+5
 39932 112b6 8A59      		subi r24,-102
 39933 112b8 9C4F      		sbci r25,-4
 39934 112ba FC01      		movw r30,r24
 39935 112bc 8081      		ld r24,Z
 39936 112be 9181      		ldd r25,Z+1
3582:lp_solve_5.5/lp_presolve.c ****     varmap_compact(lp, lp->presolve_undo->orig_rows,
 39937               		.loc 2 3582 0
 39938 112c0 FC01      		movw r30,r24
 39939 112c2 4481      		ldd r20,Z+4
 39940 112c4 5581      		ldd r21,Z+5
 39941 112c6 8C81      		ldd r24,Y+4
 39942 112c8 9D81      		ldd r25,Y+5
 39943 112ca 8A59      		subi r24,-102
 39944 112cc 9C4F      		sbci r25,-4
 39945 112ce FC01      		movw r30,r24
 39946 112d0 8081      		ld r24,Z
 39947 112d2 9181      		ldd r25,Z+1
 39948 112d4 FC01      		movw r30,r24
 39949 112d6 2281      		ldd r18,Z+2
 39950 112d8 3381      		ldd r19,Z+3
 39951 112da 8C81      		ldd r24,Y+4
 39952 112dc 9D81      		ldd r25,Y+5
 39953 112de B901      		movw r22,r18
 39954 112e0 0E94 0000 		call varmap_compact
 39955               	.L1679:
3584:lp_solve_5.5/lp_presolve.c **** 
3585:lp_solve_5.5/lp_presolve.c ****   /* Reduce memory usage of postsolve matrices */
3586:lp_solve_5.5/lp_presolve.c ****   if(lp->presolve_undo->primalundo != NULL)
 39956               		.loc 2 3586 0
 39957 112e4 8C81      		ldd r24,Y+4
 39958 112e6 9D81      		ldd r25,Y+5
 39959 112e8 8A59      		subi r24,-102
 39960 112ea 9C4F      		sbci r25,-4
 39961 112ec FC01      		movw r30,r24
 39962 112ee 8081      		ld r24,Z
 39963 112f0 9181      		ldd r25,Z+1
 39964 112f2 FC01      		movw r30,r24
 39965 112f4 8289      		ldd r24,Z+18
 39966 112f6 9389      		ldd r25,Z+19
 39967 112f8 892B      		or r24,r25
 39968 112fa 01F0      		breq .L1680
3587:lp_solve_5.5/lp_presolve.c ****     mat_memopt(lp->presolve_undo->primalundo->tracker, 0, 0, 0);
 39969               		.loc 2 3587 0
 39970 112fc 8C81      		ldd r24,Y+4
 39971 112fe 9D81      		ldd r25,Y+5
 39972 11300 8A59      		subi r24,-102
 39973 11302 9C4F      		sbci r25,-4
 39974 11304 FC01      		movw r30,r24
 39975 11306 8081      		ld r24,Z
 39976 11308 9181      		ldd r25,Z+1
 39977 1130a FC01      		movw r30,r24
 39978 1130c 8289      		ldd r24,Z+18
 39979 1130e 9389      		ldd r25,Z+19
 39980 11310 FC01      		movw r30,r24
 39981 11312 8481      		ldd r24,Z+4
 39982 11314 9581      		ldd r25,Z+5
 39983 11316 20E0      		ldi r18,0
 39984 11318 30E0      		ldi r19,0
 39985 1131a 40E0      		ldi r20,0
 39986 1131c 50E0      		ldi r21,0
 39987 1131e 60E0      		ldi r22,0
 39988 11320 70E0      		ldi r23,0
 39989 11322 0E94 0000 		call mat_memopt
 39990               	.L1680:
3588:lp_solve_5.5/lp_presolve.c ****   if(lp->presolve_undo->dualundo != NULL)
 39991               		.loc 2 3588 0
 39992 11326 8C81      		ldd r24,Y+4
 39993 11328 9D81      		ldd r25,Y+5
 39994 1132a 8A59      		subi r24,-102
 39995 1132c 9C4F      		sbci r25,-4
 39996 1132e FC01      		movw r30,r24
 39997 11330 8081      		ld r24,Z
 39998 11332 9181      		ldd r25,Z+1
 39999 11334 FC01      		movw r30,r24
 40000 11336 8489      		ldd r24,Z+20
 40001 11338 9589      		ldd r25,Z+21
 40002 1133a 892B      		or r24,r25
 40003 1133c 01F0      		breq .L1681
3589:lp_solve_5.5/lp_presolve.c ****     mat_memopt(lp->presolve_undo->dualundo->tracker, 0, 0, 0);
 40004               		.loc 2 3589 0
 40005 1133e 8C81      		ldd r24,Y+4
 40006 11340 9D81      		ldd r25,Y+5
 40007 11342 8A59      		subi r24,-102
 40008 11344 9C4F      		sbci r25,-4
 40009 11346 FC01      		movw r30,r24
 40010 11348 8081      		ld r24,Z
 40011 1134a 9181      		ldd r25,Z+1
 40012 1134c FC01      		movw r30,r24
 40013 1134e 8489      		ldd r24,Z+20
 40014 11350 9589      		ldd r25,Z+21
 40015 11352 FC01      		movw r30,r24
 40016 11354 8481      		ldd r24,Z+4
 40017 11356 9581      		ldd r25,Z+5
 40018 11358 20E0      		ldi r18,0
 40019 1135a 30E0      		ldi r19,0
 40020 1135c 40E0      		ldi r20,0
 40021 1135e 50E0      		ldi r21,0
 40022 11360 60E0      		ldi r22,0
 40023 11362 70E0      		ldi r23,0
 40024 11364 0E94 0000 		call mat_memopt
 40025               	.L1681:
3590:lp_solve_5.5/lp_presolve.c **** 
3591:lp_solve_5.5/lp_presolve.c ****   /* Round near-zero objective function coefficients and RHS values */
3592:lp_solve_5.5/lp_presolve.c ****   ke = lp->columns;
 40026               		.loc 2 3592 0
 40027 11368 8C81      		ldd r24,Y+4
 40028 1136a 9D81      		ldd r25,Y+5
 40029 1136c 8451      		subi r24,20
 40030 1136e 9E4F      		sbci r25,-2
 40031 11370 FC01      		movw r30,r24
 40032 11372 8081      		ld r24,Z
 40033 11374 9181      		ldd r25,Z+1
 40034 11376 9F83      		std Y+7,r25
 40035 11378 8E83      		std Y+6,r24
3593:lp_solve_5.5/lp_presolve.c ****   for(n = 1; n <= ke; n++)
 40036               		.loc 2 3593 0
 40037 1137a 81E0      		ldi r24,lo8(1)
 40038 1137c 90E0      		ldi r25,0
 40039 1137e 9B83      		std Y+3,r25
 40040 11380 8A83      		std Y+2,r24
 40041 11382 00C0      		rjmp .L1682
 40042               	.L1685:
3594:lp_solve_5.5/lp_presolve.c ****     my_roundzero(lp->orig_obj[n], lp->epsvalue);
 40043               		.loc 2 3594 0
 40044 11384 8C81      		ldd r24,Y+4
 40045 11386 9D81      		ldd r25,Y+5
 40046 11388 845D      		subi r24,-44
 40047 1138a 9D4F      		sbci r25,-3
 40048 1138c FC01      		movw r30,r24
 40049 1138e 2081      		ld r18,Z
 40050 11390 3181      		ldd r19,Z+1
 40051 11392 8A81      		ldd r24,Y+2
 40052 11394 9B81      		ldd r25,Y+3
 40053 11396 880F      		lsl r24
 40054 11398 991F      		rol r25
 40055 1139a 880F      		lsl r24
 40056 1139c 991F      		rol r25
 40057 1139e 820F      		add r24,r18
 40058 113a0 931F      		adc r25,r19
 40059 113a2 FC01      		movw r30,r24
 40060 113a4 8081      		ld r24,Z
 40061 113a6 9181      		ldd r25,Z+1
 40062 113a8 A281      		ldd r26,Z+2
 40063 113aa B381      		ldd r27,Z+3
 40064 113ac BF77      		andi r27,0x7f
 40065 113ae 2C81      		ldd r18,Y+4
 40066 113b0 3D81      		ldd r19,Y+5
 40067 113b2 2A5E      		subi r18,-22
 40068 113b4 3C4F      		sbci r19,-4
 40069 113b6 F901      		movw r30,r18
 40070 113b8 2081      		ld r18,Z
 40071 113ba 3181      		ldd r19,Z+1
 40072 113bc 4281      		ldd r20,Z+2
 40073 113be 5381      		ldd r21,Z+3
 40074 113c0 BC01      		movw r22,r24
 40075 113c2 CD01      		movw r24,r26
 40076 113c4 0E94 0000 		call __ltsf2
 40077 113c8 8823      		tst r24
 40078 113ca 04F4      		brge .L1683
 40079               		.loc 2 3594 0 is_stmt 0 discriminator 1
 40080 113cc 8C81      		ldd r24,Y+4
 40081 113ce 9D81      		ldd r25,Y+5
 40082 113d0 845D      		subi r24,-44
 40083 113d2 9D4F      		sbci r25,-3
 40084 113d4 FC01      		movw r30,r24
 40085 113d6 2081      		ld r18,Z
 40086 113d8 3181      		ldd r19,Z+1
 40087 113da 8A81      		ldd r24,Y+2
 40088 113dc 9B81      		ldd r25,Y+3
 40089 113de 880F      		lsl r24
 40090 113e0 991F      		rol r25
 40091 113e2 880F      		lsl r24
 40092 113e4 991F      		rol r25
 40093 113e6 820F      		add r24,r18
 40094 113e8 931F      		adc r25,r19
 40095 113ea FC01      		movw r30,r24
 40096 113ec 1082      		st Z,__zero_reg__
 40097 113ee 1182      		std Z+1,__zero_reg__
 40098 113f0 1282      		std Z+2,__zero_reg__
 40099 113f2 1382      		std Z+3,__zero_reg__
 40100               	.L1683:
3593:lp_solve_5.5/lp_presolve.c ****   for(n = 1; n <= ke; n++)
 40101               		.loc 2 3593 0 is_stmt 1 discriminator 2
 40102 113f4 8A81      		ldd r24,Y+2
 40103 113f6 9B81      		ldd r25,Y+3
 40104 113f8 0196      		adiw r24,1
 40105 113fa 9B83      		std Y+3,r25
 40106 113fc 8A83      		std Y+2,r24
 40107               	.L1682:
3593:lp_solve_5.5/lp_presolve.c ****   for(n = 1; n <= ke; n++)
 40108               		.loc 2 3593 0 is_stmt 0 discriminator 1
 40109 113fe 2A81      		ldd r18,Y+2
 40110 11400 3B81      		ldd r19,Y+3
 40111 11402 8E81      		ldd r24,Y+6
 40112 11404 9F81      		ldd r25,Y+7
 40113 11406 8217      		cp r24,r18
 40114 11408 9307      		cpc r25,r19
 40115 1140a 04F0      		brlt .+2
 40116 1140c 00C0      		rjmp .L1685
3595:lp_solve_5.5/lp_presolve.c ****   ke = lp->rows;
 40117               		.loc 2 3595 0 is_stmt 1
 40118 1140e 8C81      		ldd r24,Y+4
 40119 11410 9D81      		ldd r25,Y+5
 40120 11412 8651      		subi r24,22
 40121 11414 9E4F      		sbci r25,-2
 40122 11416 FC01      		movw r30,r24
 40123 11418 8081      		ld r24,Z
 40124 1141a 9181      		ldd r25,Z+1
 40125 1141c 9F83      		std Y+7,r25
 40126 1141e 8E83      		std Y+6,r24
3596:lp_solve_5.5/lp_presolve.c ****   for(n = 1; n <= ke; n++)
 40127               		.loc 2 3596 0
 40128 11420 81E0      		ldi r24,lo8(1)
 40129 11422 90E0      		ldi r25,0
 40130 11424 9B83      		std Y+3,r25
 40131 11426 8A83      		std Y+2,r24
 40132 11428 00C0      		rjmp .L1686
 40133               	.L1689:
3597:lp_solve_5.5/lp_presolve.c ****     my_roundzero(lp->orig_rhs[n], lp->epsvalue);
 40134               		.loc 2 3597 0
 40135 1142a 8C81      		ldd r24,Y+4
 40136 1142c 9D81      		ldd r25,Y+5
 40137 1142e 8A55      		subi r24,90
 40138 11430 9D4F      		sbci r25,-3
 40139 11432 FC01      		movw r30,r24
 40140 11434 2081      		ld r18,Z
 40141 11436 3181      		ldd r19,Z+1
 40142 11438 8A81      		ldd r24,Y+2
 40143 1143a 9B81      		ldd r25,Y+3
 40144 1143c 880F      		lsl r24
 40145 1143e 991F      		rol r25
 40146 11440 880F      		lsl r24
 40147 11442 991F      		rol r25
 40148 11444 820F      		add r24,r18
 40149 11446 931F      		adc r25,r19
 40150 11448 FC01      		movw r30,r24
 40151 1144a 8081      		ld r24,Z
 40152 1144c 9181      		ldd r25,Z+1
 40153 1144e A281      		ldd r26,Z+2
 40154 11450 B381      		ldd r27,Z+3
 40155 11452 BF77      		andi r27,0x7f
 40156 11454 2C81      		ldd r18,Y+4
 40157 11456 3D81      		ldd r19,Y+5
 40158 11458 2A5E      		subi r18,-22
 40159 1145a 3C4F      		sbci r19,-4
 40160 1145c F901      		movw r30,r18
 40161 1145e 2081      		ld r18,Z
 40162 11460 3181      		ldd r19,Z+1
 40163 11462 4281      		ldd r20,Z+2
 40164 11464 5381      		ldd r21,Z+3
 40165 11466 BC01      		movw r22,r24
 40166 11468 CD01      		movw r24,r26
 40167 1146a 0E94 0000 		call __ltsf2
 40168 1146e 8823      		tst r24
 40169 11470 04F4      		brge .L1687
 40170               		.loc 2 3597 0 is_stmt 0 discriminator 1
 40171 11472 8C81      		ldd r24,Y+4
 40172 11474 9D81      		ldd r25,Y+5
 40173 11476 8A55      		subi r24,90
 40174 11478 9D4F      		sbci r25,-3
 40175 1147a FC01      		movw r30,r24
 40176 1147c 2081      		ld r18,Z
 40177 1147e 3181      		ldd r19,Z+1
 40178 11480 8A81      		ldd r24,Y+2
 40179 11482 9B81      		ldd r25,Y+3
 40180 11484 880F      		lsl r24
 40181 11486 991F      		rol r25
 40182 11488 880F      		lsl r24
 40183 1148a 991F      		rol r25
 40184 1148c 820F      		add r24,r18
 40185 1148e 931F      		adc r25,r19
 40186 11490 FC01      		movw r30,r24
 40187 11492 1082      		st Z,__zero_reg__
 40188 11494 1182      		std Z+1,__zero_reg__
 40189 11496 1282      		std Z+2,__zero_reg__
 40190 11498 1382      		std Z+3,__zero_reg__
 40191               	.L1687:
3596:lp_solve_5.5/lp_presolve.c ****   for(n = 1; n <= ke; n++)
 40192               		.loc 2 3596 0 is_stmt 1 discriminator 2
 40193 1149a 8A81      		ldd r24,Y+2
 40194 1149c 9B81      		ldd r25,Y+3
 40195 1149e 0196      		adiw r24,1
 40196 114a0 9B83      		std Y+3,r25
 40197 114a2 8A83      		std Y+2,r24
 40198               	.L1686:
3596:lp_solve_5.5/lp_presolve.c ****   for(n = 1; n <= ke; n++)
 40199               		.loc 2 3596 0 is_stmt 0 discriminator 1
 40200 114a4 2A81      		ldd r18,Y+2
 40201 114a6 3B81      		ldd r19,Y+3
 40202 114a8 8E81      		ldd r24,Y+6
 40203 114aa 9F81      		ldd r25,Y+7
 40204 114ac 8217      		cp r24,r18
 40205 114ae 9307      		cpc r25,r19
 40206 114b0 04F0      		brlt .+2
 40207 114b2 00C0      		rjmp .L1689
3598:lp_solve_5.5/lp_presolve.c **** 
3599:lp_solve_5.5/lp_presolve.c ****   /* Update the SOS sparse mapping */
3600:lp_solve_5.5/lp_presolve.c ****   if(SOS_count(lp) > 0)
 40208               		.loc 2 3600 0 is_stmt 1
 40209 114b4 8C81      		ldd r24,Y+4
 40210 114b6 9D81      		ldd r25,Y+5
 40211 114b8 0E94 0000 		call SOS_count
 40212 114bc 1816      		cp __zero_reg__,r24
 40213 114be 1906      		cpc __zero_reg__,r25
 40214 114c0 04F4      		brge .L1690
3601:lp_solve_5.5/lp_presolve.c ****     SOS_member_updatemap(lp->SOS);
 40215               		.loc 2 3601 0
 40216 114c2 8C81      		ldd r24,Y+4
 40217 114c4 9D81      		ldd r25,Y+5
 40218 114c6 8256      		subi r24,98
 40219 114c8 9D4F      		sbci r25,-3
 40220 114ca FC01      		movw r30,r24
 40221 114cc 8081      		ld r24,Z
 40222 114ce 9181      		ldd r25,Z+1
 40223 114d0 0E94 0000 		call SOS_member_updatemap
 40224               	.L1690:
3602:lp_solve_5.5/lp_presolve.c **** 
3603:lp_solve_5.5/lp_presolve.c ****   /* Validate matrix and reconstruct row indexation */
3604:lp_solve_5.5/lp_presolve.c ****   return(mat_validate(lp->matA));
 40225               		.loc 2 3604 0
 40226 114d4 8C81      		ldd r24,Y+4
 40227 114d6 9D81      		ldd r25,Y+5
 40228 114d8 8A54      		subi r24,74
 40229 114da 9D4F      		sbci r25,-3
 40230 114dc FC01      		movw r30,r24
 40231 114de 8081      		ld r24,Z
 40232 114e0 9181      		ldd r25,Z+1
 40233 114e2 0E94 0000 		call mat_validate
 40234               	/* epilogue start */
3605:lp_solve_5.5/lp_presolve.c **** }
 40235               		.loc 2 3605 0
 40236 114e6 2996      		adiw r28,9
 40237 114e8 0FB6      		in __tmp_reg__,__SREG__
 40238 114ea F894      		cli
 40239 114ec DEBF      		out __SP_H__,r29
 40240 114ee 0FBE      		out __SREG__,__tmp_reg__
 40241 114f0 CDBF      		out __SP_L__,r28
 40242 114f2 DF91      		pop r29
 40243 114f4 CF91      		pop r28
 40244 114f6 1F91      		pop r17
 40245 114f8 0F91      		pop r16
 40246 114fa FF90      		pop r15
 40247 114fc 0895      		ret
 40248               		.cfi_endproc
 40249               	.LFE78:
 40251               		.section	.rodata
 40252               	.LC36:
 40253 07d9 6100      		.string	"a"
 40254               	.LC37:
 40255 07db 7700      		.string	"w"
 40256               	.LC38:
 40257 07dd 0A50 5245 		.string	"\nPRESOLVE - Status at loop %d:%d:%d\n"
 40257      534F 4C56 
 40257      4520 2D20 
 40257      5374 6174 
 40257      7573 2061 
 40258               	.LC39:
 40259 0802 4D6F 6465 		.string	"Model size:     %d rows (%d equalities, %d less than), %d columns\n"
 40259      6C20 7369 
 40259      7A65 3A20 
 40259      2020 2020 
 40259      2564 2072 
 40260               	.LC40:
 40261 0845 0A4D 4150 		.string	"\nMAPPERS\n-------\n\n"
 40261      5045 5253 
 40261      0A2D 2D2D 
 40261      2D2D 2D2D 
 40261      0A0A 00
 40262               	.LC41:
 40263 0858 636F 6C6D 		.string	"colmap"
 40263      6170 00
 40264               	.LC42:
 40265 085f 726F 776D 		.string	"rowmap"
 40265      6170 00
 40266               	.LC43:
 40267 0866 4551 6D61 		.string	"EQmap"
 40267      7000 
 40268               	.LC44:
 40269 086c 4C54 6D61 		.string	"LTmap"
 40269      7000 
 40270               	.LC45:
 40271 0872 0A43 4F55 		.string	"\nCOUNTS\n------\n\n"
 40271      4E54 530A 
 40271      2D2D 2D2D 
 40271      2D2D 0A0A 
 40271      00
 40272               	.LC46:
 40273 0883 706C 7563 		.string	"plucount"
 40273      6F75 6E74 
 40273      00
 40274               	.LC47:
 40275 088c 6E65 6763 		.string	"negcount"
 40275      6F75 6E74 
 40275      00
 40276               	.LC48:
 40277 0895 706C 756E 		.string	"pluneg"
 40277      6567 00
 40278               	.LC49:
 40279 089c 0A53 554D 		.string	"\nSUMS\n----\n\n"
 40279      530A 2D2D 
 40279      2D2D 0A0A 
 40279      00
 40280               	.LC50:
 40281 08a9 706C 7575 		.string	"pluupper"
 40281      7070 6572 
 40281      00
 40282               	.LC51:
 40283 08b2 6E65 6775 		.string	"negupper"
 40283      7070 6572 
 40283      00
 40284               	.LC52:
 40285 08bb 706C 756C 		.string	"plulower"
 40285      6F77 6572 
 40285      00
 40286               	.LC53:
 40287 08c4 6E65 676C 		.string	"neglower"
 40287      6F77 6572 
 40287      00
 40288               		.text
 40289               	.global	presolve_debugdump
 40291               	presolve_debugdump:
 40292               	.LFB79:
3606:lp_solve_5.5/lp_presolve.c **** 
3607:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL presolve_debugdump(lprec *lp, presolverec *psdata, char *filename, MYBOOL doappend)
3608:lp_solve_5.5/lp_presolve.c **** {
 40293               		.loc 2 3608 0
 40294               		.cfi_startproc
 40295 114fe 0F93      		push r16
 40296               	.LCFI480:
 40297               		.cfi_def_cfa_offset 3
 40298               		.cfi_offset 16, -2
 40299 11500 1F93      		push r17
 40300               	.LCFI481:
 40301               		.cfi_def_cfa_offset 4
 40302               		.cfi_offset 17, -3
 40303 11502 CF93      		push r28
 40304               	.LCFI482:
 40305               		.cfi_def_cfa_offset 5
 40306               		.cfi_offset 28, -4
 40307 11504 DF93      		push r29
 40308               	.LCFI483:
 40309               		.cfi_def_cfa_offset 6
 40310               		.cfi_offset 29, -5
 40311 11506 CDB7      		in r28,__SP_L__
 40312 11508 DEB7      		in r29,__SP_H__
 40313               	.LCFI484:
 40314               		.cfi_def_cfa_register 28
 40315 1150a 2C97      		sbiw r28,12
 40316               	.LCFI485:
 40317               		.cfi_def_cfa_offset 18
 40318 1150c 0FB6      		in __tmp_reg__,__SREG__
 40319 1150e F894      		cli
 40320 11510 DEBF      		out __SP_H__,r29
 40321 11512 0FBE      		out __SREG__,__tmp_reg__
 40322 11514 CDBF      		out __SP_L__,r28
 40323               	/* prologue: function */
 40324               	/* frame size = 12 */
 40325               	/* stack size = 16 */
 40326               	.L__stack_usage = 16
 40327 11516 9F83      		std Y+7,r25
 40328 11518 8E83      		std Y+6,r24
 40329 1151a 7987      		std Y+9,r23
 40330 1151c 6887      		std Y+8,r22
 40331 1151e 5B87      		std Y+11,r21
 40332 11520 4A87      		std Y+10,r20
 40333 11522 2C87      		std Y+12,r18
3609:lp_solve_5.5/lp_presolve.c ****   FILE   *output = stdout;
 40334               		.loc 2 3609 0
 40335 11524 8091 0000 		lds r24,__iob+2
 40336 11528 9091 0000 		lds r25,__iob+2+1
 40337 1152c 9A83      		std Y+2,r25
 40338 1152e 8983      		std Y+1,r24
3610:lp_solve_5.5/lp_presolve.c ****   int   size;
3611:lp_solve_5.5/lp_presolve.c ****   MYBOOL ok;
3612:lp_solve_5.5/lp_presolve.c **** 
3613:lp_solve_5.5/lp_presolve.c ****   ok = (MYBOOL) ((filename == NULL) || ((output = fopen(filename, my_if(doappend, "a", "w"))) != NU
 40339               		.loc 2 3613 0
 40340 11530 8A85      		ldd r24,Y+10
 40341 11532 9B85      		ldd r25,Y+11
 40342 11534 892B      		or r24,r25
 40343 11536 01F0      		breq .L1695
 40344               		.loc 2 3613 0 is_stmt 0 discriminator 2
 40345 11538 8C85      		ldd r24,Y+12
 40346 1153a 8823      		tst r24
 40347 1153c 01F0      		breq .L1696
 40348               		.loc 2 3613 0 discriminator 3
 40349 1153e 80E0      		ldi r24,lo8(.LC36)
 40350 11540 90E0      		ldi r25,hi8(.LC36)
 40351 11542 00C0      		rjmp .L1697
 40352               	.L1696:
 40353               		.loc 2 3613 0 discriminator 4
 40354 11544 80E0      		ldi r24,lo8(.LC37)
 40355 11546 90E0      		ldi r25,hi8(.LC37)
 40356               	.L1697:
 40357               		.loc 2 3613 0 discriminator 6
 40358 11548 2A85      		ldd r18,Y+10
 40359 1154a 3B85      		ldd r19,Y+11
 40360 1154c BC01      		movw r22,r24
 40361 1154e C901      		movw r24,r18
 40362 11550 0E94 0000 		call fopen
 40363 11554 9A83      		std Y+2,r25
 40364 11556 8983      		std Y+1,r24
 40365 11558 8981      		ldd r24,Y+1
 40366 1155a 9A81      		ldd r25,Y+2
 40367 1155c 892B      		or r24,r25
 40368 1155e 01F0      		breq .L1698
 40369               	.L1695:
 40370               		.loc 2 3613 0 discriminator 7
 40371 11560 81E0      		ldi r24,lo8(1)
 40372 11562 90E0      		ldi r25,0
 40373 11564 00C0      		rjmp .L1699
 40374               	.L1698:
 40375               		.loc 2 3613 0 discriminator 8
 40376 11566 80E0      		ldi r24,0
 40377 11568 90E0      		ldi r25,0
 40378               	.L1699:
 40379               		.loc 2 3613 0 discriminator 10
 40380 1156a 8B83      		std Y+3,r24
3614:lp_solve_5.5/lp_presolve.c ****   if(!ok)
 40381               		.loc 2 3614 0 is_stmt 1 discriminator 10
 40382 1156c 8B81      		ldd r24,Y+3
 40383 1156e 8823      		tst r24
 40384 11570 01F4      		brne .L1700
3615:lp_solve_5.5/lp_presolve.c ****     return(ok);
 40385               		.loc 2 3615 0
 40386 11572 8B81      		ldd r24,Y+3
 40387 11574 00C0      		rjmp .L1701
 40388               	.L1700:
3616:lp_solve_5.5/lp_presolve.c ****   if((filename == NULL) && (lp->outstream != NULL))
 40389               		.loc 2 3616 0
 40390 11576 8A85      		ldd r24,Y+10
 40391 11578 9B85      		ldd r25,Y+11
 40392 1157a 892B      		or r24,r25
 40393 1157c 01F4      		brne .L1702
 40394               		.loc 2 3616 0 is_stmt 0 discriminator 1
 40395 1157e 8E81      		ldd r24,Y+6
 40396 11580 9F81      		ldd r25,Y+7
 40397 11582 845A      		subi r24,-92
 40398 11584 9D4F      		sbci r25,-3
 40399 11586 FC01      		movw r30,r24
 40400 11588 8081      		ld r24,Z
 40401 1158a 9181      		ldd r25,Z+1
 40402 1158c 892B      		or r24,r25
 40403 1158e 01F0      		breq .L1702
3617:lp_solve_5.5/lp_presolve.c ****     output = lp->outstream;
 40404               		.loc 2 3617 0 is_stmt 1
 40405 11590 8E81      		ldd r24,Y+6
 40406 11592 9F81      		ldd r25,Y+7
 40407 11594 845A      		subi r24,-92
 40408 11596 9D4F      		sbci r25,-3
 40409 11598 FC01      		movw r30,r24
 40410 1159a 8081      		ld r24,Z
 40411 1159c 9181      		ldd r25,Z+1
 40412 1159e 9A83      		std Y+2,r25
 40413 115a0 8983      		std Y+1,r24
 40414               	.L1702:
3618:lp_solve_5.5/lp_presolve.c **** 
3619:lp_solve_5.5/lp_presolve.c ****   fprintf(output, "\nPRESOLVE - Status at loop %d:%d:%d\n",
 40415               		.loc 2 3619 0
 40416 115a2 8885      		ldd r24,Y+8
 40417 115a4 9985      		ldd r25,Y+9
 40418 115a6 FC01      		movw r30,r24
 40419 115a8 448D      		ldd r20,Z+28
 40420 115aa 558D      		ldd r21,Z+29
 40421 115ac 8885      		ldd r24,Y+8
 40422 115ae 9985      		ldd r25,Y+9
 40423 115b0 FC01      		movw r30,r24
 40424 115b2 268D      		ldd r18,Z+30
 40425 115b4 378D      		ldd r19,Z+31
 40426 115b6 8885      		ldd r24,Y+8
 40427 115b8 9985      		ldd r25,Y+9
 40428 115ba FC01      		movw r30,r24
 40429 115bc 80A1      		ldd r24,Z+32
 40430 115be 91A1      		ldd r25,Z+33
 40431 115c0 652F      		mov r22,r21
 40432 115c2 6F93      		push r22
 40433 115c4 4F93      		push r20
 40434 115c6 432F      		mov r20,r19
 40435 115c8 4F93      		push r20
 40436 115ca 2F93      		push r18
 40437 115cc 292F      		mov r18,r25
 40438 115ce 2F93      		push r18
 40439 115d0 8F93      		push r24
 40440 115d2 80E0      		ldi r24,lo8(.LC38)
 40441 115d4 90E0      		ldi r25,hi8(.LC38)
 40442 115d6 892F      		mov r24,r25
 40443 115d8 8F93      		push r24
 40444 115da 80E0      		ldi r24,lo8(.LC38)
 40445 115dc 90E0      		ldi r25,hi8(.LC38)
 40446 115de 8F93      		push r24
 40447 115e0 8A81      		ldd r24,Y+2
 40448 115e2 8F93      		push r24
 40449 115e4 8981      		ldd r24,Y+1
 40450 115e6 8F93      		push r24
 40451 115e8 0E94 0000 		call fprintf
 40452 115ec 8DB7      		in r24,__SP_L__
 40453 115ee 9EB7      		in r25,__SP_H__
 40454 115f0 0A96      		adiw r24,10
 40455 115f2 0FB6      		in __tmp_reg__,__SREG__
 40456 115f4 F894      		cli
 40457 115f6 DEBF      		out __SP_H__,r29
 40458 115f8 0FBE      		out __SREG__,__tmp_reg__
 40459 115fa CDBF      		out __SP_L__,r28
3620:lp_solve_5.5/lp_presolve.c ****                   psdata->outerloops, psdata->middleloops, psdata->innerloops);
3621:lp_solve_5.5/lp_presolve.c ****   fprintf(output, "Model size:     %d rows (%d equalities, %d less than), %d columns\n",
3622:lp_solve_5.5/lp_presolve.c ****                   psdata->rows->varmap->count, psdata->EQmap->count, psdata->LTmap->count, psdata->
 40460               		.loc 2 3622 0
 40461 115fc 8885      		ldd r24,Y+8
 40462 115fe 9985      		ldd r25,Y+9
 40463 11600 FC01      		movw r30,r24
 40464 11602 8281      		ldd r24,Z+2
 40465 11604 9381      		ldd r25,Z+3
 40466 11606 FC01      		movw r30,r24
 40467 11608 8081      		ld r24,Z
 40468 1160a 9181      		ldd r25,Z+1
3621:lp_solve_5.5/lp_presolve.c ****                   psdata->rows->varmap->count, psdata->EQmap->count, psdata->LTmap->count, psdata->
 40469               		.loc 2 3621 0
 40470 1160c FC01      		movw r30,r24
 40471 1160e 6281      		ldd r22,Z+2
 40472 11610 7381      		ldd r23,Z+3
 40473               		.loc 2 3622 0
 40474 11612 8885      		ldd r24,Y+8
 40475 11614 9985      		ldd r25,Y+9
 40476 11616 FC01      		movw r30,r24
 40477 11618 8681      		ldd r24,Z+6
 40478 1161a 9781      		ldd r25,Z+7
3621:lp_solve_5.5/lp_presolve.c ****                   psdata->rows->varmap->count, psdata->EQmap->count, psdata->LTmap->count, psdata->
 40479               		.loc 2 3621 0
 40480 1161c FC01      		movw r30,r24
 40481 1161e 4281      		ldd r20,Z+2
 40482 11620 5381      		ldd r21,Z+3
 40483               		.loc 2 3622 0
 40484 11622 8885      		ldd r24,Y+8
 40485 11624 9985      		ldd r25,Y+9
 40486 11626 FC01      		movw r30,r24
 40487 11628 8481      		ldd r24,Z+4
 40488 1162a 9581      		ldd r25,Z+5
3621:lp_solve_5.5/lp_presolve.c ****                   psdata->rows->varmap->count, psdata->EQmap->count, psdata->LTmap->count, psdata->
 40489               		.loc 2 3621 0
 40490 1162c FC01      		movw r30,r24
 40491 1162e 2281      		ldd r18,Z+2
 40492 11630 3381      		ldd r19,Z+3
 40493               		.loc 2 3622 0
 40494 11632 8885      		ldd r24,Y+8
 40495 11634 9985      		ldd r25,Y+9
 40496 11636 FC01      		movw r30,r24
 40497 11638 8081      		ld r24,Z
 40498 1163a 9181      		ldd r25,Z+1
 40499 1163c FC01      		movw r30,r24
 40500 1163e 8081      		ld r24,Z
 40501 11640 9181      		ldd r25,Z+1
3621:lp_solve_5.5/lp_presolve.c ****                   psdata->rows->varmap->count, psdata->EQmap->count, psdata->LTmap->count, psdata->
 40502               		.loc 2 3621 0
 40503 11642 FC01      		movw r30,r24
 40504 11644 8281      		ldd r24,Z+2
 40505 11646 9381      		ldd r25,Z+3
 40506 11648 E72F      		mov r30,r23
 40507 1164a EF93      		push r30
 40508 1164c 6F93      		push r22
 40509 1164e 652F      		mov r22,r21
 40510 11650 6F93      		push r22
 40511 11652 4F93      		push r20
 40512 11654 432F      		mov r20,r19
 40513 11656 4F93      		push r20
 40514 11658 2F93      		push r18
 40515 1165a 292F      		mov r18,r25
 40516 1165c 2F93      		push r18
 40517 1165e 8F93      		push r24
 40518 11660 80E0      		ldi r24,lo8(.LC39)
 40519 11662 90E0      		ldi r25,hi8(.LC39)
 40520 11664 892F      		mov r24,r25
 40521 11666 8F93      		push r24
 40522 11668 80E0      		ldi r24,lo8(.LC39)
 40523 1166a 90E0      		ldi r25,hi8(.LC39)
 40524 1166c 8F93      		push r24
 40525 1166e 8A81      		ldd r24,Y+2
 40526 11670 8F93      		push r24
 40527 11672 8981      		ldd r24,Y+1
 40528 11674 8F93      		push r24
 40529 11676 0E94 0000 		call fprintf
 40530 1167a 8DB7      		in r24,__SP_L__
 40531 1167c 9EB7      		in r25,__SP_H__
 40532 1167e 0C96      		adiw r24,12
 40533 11680 0FB6      		in __tmp_reg__,__SREG__
 40534 11682 F894      		cli
 40535 11684 DEBF      		out __SP_H__,r29
 40536 11686 0FBE      		out __SREG__,__tmp_reg__
 40537 11688 CDBF      		out __SP_L__,r28
3623:lp_solve_5.5/lp_presolve.c **** 
3624:lp_solve_5.5/lp_presolve.c ****   fprintf(output, "\nMAPPERS\n-------\n\n");
 40538               		.loc 2 3624 0
 40539 1168a 8981      		ldd r24,Y+1
 40540 1168c 9A81      		ldd r25,Y+2
 40541 1168e 9C01      		movw r18,r24
 40542 11690 42E1      		ldi r20,lo8(18)
 40543 11692 50E0      		ldi r21,0
 40544 11694 61E0      		ldi r22,lo8(1)
 40545 11696 70E0      		ldi r23,0
 40546 11698 80E0      		ldi r24,lo8(.LC40)
 40547 1169a 90E0      		ldi r25,hi8(.LC40)
 40548 1169c 0E94 0000 		call fwrite
3625:lp_solve_5.5/lp_presolve.c ****   size = 1;
 40549               		.loc 2 3625 0
 40550 116a0 81E0      		ldi r24,lo8(1)
 40551 116a2 90E0      		ldi r25,0
 40552 116a4 9D83      		std Y+5,r25
 40553 116a6 8C83      		std Y+4,r24
3626:lp_solve_5.5/lp_presolve.c ****   blockWriteINT(output,  "colmap", psdata->cols->varmap->map, 0, size*psdata->cols->varmap->size);
 40554               		.loc 2 3626 0
 40555 116a8 8885      		ldd r24,Y+8
 40556 116aa 9985      		ldd r25,Y+9
 40557 116ac FC01      		movw r30,r24
 40558 116ae 8281      		ldd r24,Z+2
 40559 116b0 9381      		ldd r25,Z+3
 40560 116b2 FC01      		movw r30,r24
 40561 116b4 8081      		ld r24,Z
 40562 116b6 9181      		ldd r25,Z+1
 40563 116b8 FC01      		movw r30,r24
 40564 116ba 2081      		ld r18,Z
 40565 116bc 3181      		ldd r19,Z+1
 40566 116be 8C81      		ldd r24,Y+4
 40567 116c0 9D81      		ldd r25,Y+5
 40568 116c2 289F      		mul r18,r24
 40569 116c4 B001      		movw r22,r0
 40570 116c6 299F      		mul r18,r25
 40571 116c8 700D      		add r23,r0
 40572 116ca 389F      		mul r19,r24
 40573 116cc 700D      		add r23,r0
 40574 116ce 1124      		clr r1
 40575 116d0 8885      		ldd r24,Y+8
 40576 116d2 9985      		ldd r25,Y+9
 40577 116d4 FC01      		movw r30,r24
 40578 116d6 8281      		ldd r24,Z+2
 40579 116d8 9381      		ldd r25,Z+3
 40580 116da FC01      		movw r30,r24
 40581 116dc 8081      		ld r24,Z
 40582 116de 9181      		ldd r25,Z+1
 40583 116e0 FC01      		movw r30,r24
 40584 116e2 4085      		ldd r20,Z+8
 40585 116e4 5185      		ldd r21,Z+9
 40586 116e6 8981      		ldd r24,Y+1
 40587 116e8 9A81      		ldd r25,Y+2
 40588 116ea 8B01      		movw r16,r22
 40589 116ec 20E0      		ldi r18,0
 40590 116ee 30E0      		ldi r19,0
 40591 116f0 60E0      		ldi r22,lo8(.LC41)
 40592 116f2 70E0      		ldi r23,hi8(.LC41)
 40593 116f4 0E94 0000 		call blockWriteINT
3627:lp_solve_5.5/lp_presolve.c ****   blockWriteINT(output,  "rowmap", psdata->rows->varmap->map, 0, size*psdata->rows->varmap->size);
 40594               		.loc 2 3627 0
 40595 116f8 8885      		ldd r24,Y+8
 40596 116fa 9985      		ldd r25,Y+9
 40597 116fc FC01      		movw r30,r24
 40598 116fe 8081      		ld r24,Z
 40599 11700 9181      		ldd r25,Z+1
 40600 11702 FC01      		movw r30,r24
 40601 11704 8081      		ld r24,Z
 40602 11706 9181      		ldd r25,Z+1
 40603 11708 FC01      		movw r30,r24
 40604 1170a 2081      		ld r18,Z
 40605 1170c 3181      		ldd r19,Z+1
 40606 1170e 8C81      		ldd r24,Y+4
 40607 11710 9D81      		ldd r25,Y+5
 40608 11712 289F      		mul r18,r24
 40609 11714 B001      		movw r22,r0
 40610 11716 299F      		mul r18,r25
 40611 11718 700D      		add r23,r0
 40612 1171a 389F      		mul r19,r24
 40613 1171c 700D      		add r23,r0
 40614 1171e 1124      		clr r1
 40615 11720 8885      		ldd r24,Y+8
 40616 11722 9985      		ldd r25,Y+9
 40617 11724 FC01      		movw r30,r24
 40618 11726 8081      		ld r24,Z
 40619 11728 9181      		ldd r25,Z+1
 40620 1172a FC01      		movw r30,r24
 40621 1172c 8081      		ld r24,Z
 40622 1172e 9181      		ldd r25,Z+1
 40623 11730 FC01      		movw r30,r24
 40624 11732 4085      		ldd r20,Z+8
 40625 11734 5185      		ldd r21,Z+9
 40626 11736 8981      		ldd r24,Y+1
 40627 11738 9A81      		ldd r25,Y+2
 40628 1173a 8B01      		movw r16,r22
 40629 1173c 20E0      		ldi r18,0
 40630 1173e 30E0      		ldi r19,0
 40631 11740 60E0      		ldi r22,lo8(.LC42)
 40632 11742 70E0      		ldi r23,hi8(.LC42)
 40633 11744 0E94 0000 		call blockWriteINT
3628:lp_solve_5.5/lp_presolve.c ****   blockWriteINT(output,  "EQmap",  psdata->EQmap->map,  0, size*psdata->EQmap->size);
 40634               		.loc 2 3628 0
 40635 11748 8885      		ldd r24,Y+8
 40636 1174a 9985      		ldd r25,Y+9
 40637 1174c FC01      		movw r30,r24
 40638 1174e 8481      		ldd r24,Z+4
 40639 11750 9581      		ldd r25,Z+5
 40640 11752 FC01      		movw r30,r24
 40641 11754 2081      		ld r18,Z
 40642 11756 3181      		ldd r19,Z+1
 40643 11758 8C81      		ldd r24,Y+4
 40644 1175a 9D81      		ldd r25,Y+5
 40645 1175c 289F      		mul r18,r24
 40646 1175e B001      		movw r22,r0
 40647 11760 299F      		mul r18,r25
 40648 11762 700D      		add r23,r0
 40649 11764 389F      		mul r19,r24
 40650 11766 700D      		add r23,r0
 40651 11768 1124      		clr r1
 40652 1176a 8885      		ldd r24,Y+8
 40653 1176c 9985      		ldd r25,Y+9
 40654 1176e FC01      		movw r30,r24
 40655 11770 8481      		ldd r24,Z+4
 40656 11772 9581      		ldd r25,Z+5
 40657 11774 FC01      		movw r30,r24
 40658 11776 4085      		ldd r20,Z+8
 40659 11778 5185      		ldd r21,Z+9
 40660 1177a 8981      		ldd r24,Y+1
 40661 1177c 9A81      		ldd r25,Y+2
 40662 1177e 8B01      		movw r16,r22
 40663 11780 20E0      		ldi r18,0
 40664 11782 30E0      		ldi r19,0
 40665 11784 60E0      		ldi r22,lo8(.LC43)
 40666 11786 70E0      		ldi r23,hi8(.LC43)
 40667 11788 0E94 0000 		call blockWriteINT
3629:lp_solve_5.5/lp_presolve.c ****   blockWriteINT(output,  "LTmap",  psdata->LTmap->map,  0, size*psdata->LTmap->size);
 40668               		.loc 2 3629 0
 40669 1178c 8885      		ldd r24,Y+8
 40670 1178e 9985      		ldd r25,Y+9
 40671 11790 FC01      		movw r30,r24
 40672 11792 8681      		ldd r24,Z+6
 40673 11794 9781      		ldd r25,Z+7
 40674 11796 FC01      		movw r30,r24
 40675 11798 2081      		ld r18,Z
 40676 1179a 3181      		ldd r19,Z+1
 40677 1179c 8C81      		ldd r24,Y+4
 40678 1179e 9D81      		ldd r25,Y+5
 40679 117a0 289F      		mul r18,r24
 40680 117a2 B001      		movw r22,r0
 40681 117a4 299F      		mul r18,r25
 40682 117a6 700D      		add r23,r0
 40683 117a8 389F      		mul r19,r24
 40684 117aa 700D      		add r23,r0
 40685 117ac 1124      		clr r1
 40686 117ae 8885      		ldd r24,Y+8
 40687 117b0 9985      		ldd r25,Y+9
 40688 117b2 FC01      		movw r30,r24
 40689 117b4 8681      		ldd r24,Z+6
 40690 117b6 9781      		ldd r25,Z+7
 40691 117b8 FC01      		movw r30,r24
 40692 117ba 4085      		ldd r20,Z+8
 40693 117bc 5185      		ldd r21,Z+9
 40694 117be 8981      		ldd r24,Y+1
 40695 117c0 9A81      		ldd r25,Y+2
 40696 117c2 8B01      		movw r16,r22
 40697 117c4 20E0      		ldi r18,0
 40698 117c6 30E0      		ldi r19,0
 40699 117c8 60E0      		ldi r22,lo8(.LC44)
 40700 117ca 70E0      		ldi r23,hi8(.LC44)
 40701 117cc 0E94 0000 		call blockWriteINT
3630:lp_solve_5.5/lp_presolve.c **** 
3631:lp_solve_5.5/lp_presolve.c ****   fprintf(output, "\nCOUNTS\n------\n\n");
 40702               		.loc 2 3631 0
 40703 117d0 8981      		ldd r24,Y+1
 40704 117d2 9A81      		ldd r25,Y+2
 40705 117d4 9C01      		movw r18,r24
 40706 117d6 40E1      		ldi r20,lo8(16)
 40707 117d8 50E0      		ldi r21,0
 40708 117da 61E0      		ldi r22,lo8(1)
 40709 117dc 70E0      		ldi r23,0
 40710 117de 80E0      		ldi r24,lo8(.LC45)
 40711 117e0 90E0      		ldi r25,hi8(.LC45)
 40712 117e2 0E94 0000 		call fwrite
3632:lp_solve_5.5/lp_presolve.c ****   blockWriteINT(output, "plucount",  psdata->rows->plucount,  0, lp->rows);
 40713               		.loc 2 3632 0
 40714 117e6 8E81      		ldd r24,Y+6
 40715 117e8 9F81      		ldd r25,Y+7
 40716 117ea 8651      		subi r24,22
 40717 117ec 9E4F      		sbci r25,-2
 40718 117ee FC01      		movw r30,r24
 40719 117f0 2081      		ld r18,Z
 40720 117f2 3181      		ldd r19,Z+1
 40721 117f4 8885      		ldd r24,Y+8
 40722 117f6 9985      		ldd r25,Y+9
 40723 117f8 FC01      		movw r30,r24
 40724 117fa 8081      		ld r24,Z
 40725 117fc 9181      		ldd r25,Z+1
 40726 117fe FC01      		movw r30,r24
 40727 11800 4681      		ldd r20,Z+6
 40728 11802 5781      		ldd r21,Z+7
 40729 11804 8981      		ldd r24,Y+1
 40730 11806 9A81      		ldd r25,Y+2
 40731 11808 8901      		movw r16,r18
 40732 1180a 20E0      		ldi r18,0
 40733 1180c 30E0      		ldi r19,0
 40734 1180e 60E0      		ldi r22,lo8(.LC46)
 40735 11810 70E0      		ldi r23,hi8(.LC46)
 40736 11812 0E94 0000 		call blockWriteINT
3633:lp_solve_5.5/lp_presolve.c ****   blockWriteINT(output, "negcount",  psdata->rows->negcount,  0, lp->rows);
 40737               		.loc 2 3633 0
 40738 11816 8E81      		ldd r24,Y+6
 40739 11818 9F81      		ldd r25,Y+7
 40740 1181a 8651      		subi r24,22
 40741 1181c 9E4F      		sbci r25,-2
 40742 1181e FC01      		movw r30,r24
 40743 11820 2081      		ld r18,Z
 40744 11822 3181      		ldd r19,Z+1
 40745 11824 8885      		ldd r24,Y+8
 40746 11826 9985      		ldd r25,Y+9
 40747 11828 FC01      		movw r30,r24
 40748 1182a 8081      		ld r24,Z
 40749 1182c 9181      		ldd r25,Z+1
 40750 1182e FC01      		movw r30,r24
 40751 11830 4085      		ldd r20,Z+8
 40752 11832 5185      		ldd r21,Z+9
 40753 11834 8981      		ldd r24,Y+1
 40754 11836 9A81      		ldd r25,Y+2
 40755 11838 8901      		movw r16,r18
 40756 1183a 20E0      		ldi r18,0
 40757 1183c 30E0      		ldi r19,0
 40758 1183e 60E0      		ldi r22,lo8(.LC47)
 40759 11840 70E0      		ldi r23,hi8(.LC47)
 40760 11842 0E94 0000 		call blockWriteINT
3634:lp_solve_5.5/lp_presolve.c ****   blockWriteINT(output, "pluneg",    psdata->rows->pluneg,    0, lp->rows);
 40761               		.loc 2 3634 0
 40762 11846 8E81      		ldd r24,Y+6
 40763 11848 9F81      		ldd r25,Y+7
 40764 1184a 8651      		subi r24,22
 40765 1184c 9E4F      		sbci r25,-2
 40766 1184e FC01      		movw r30,r24
 40767 11850 2081      		ld r18,Z
 40768 11852 3181      		ldd r19,Z+1
 40769 11854 8885      		ldd r24,Y+8
 40770 11856 9985      		ldd r25,Y+9
 40771 11858 FC01      		movw r30,r24
 40772 1185a 8081      		ld r24,Z
 40773 1185c 9181      		ldd r25,Z+1
 40774 1185e FC01      		movw r30,r24
 40775 11860 4285      		ldd r20,Z+10
 40776 11862 5385      		ldd r21,Z+11
 40777 11864 8981      		ldd r24,Y+1
 40778 11866 9A81      		ldd r25,Y+2
 40779 11868 8901      		movw r16,r18
 40780 1186a 20E0      		ldi r18,0
 40781 1186c 30E0      		ldi r19,0
 40782 1186e 60E0      		ldi r22,lo8(.LC48)
 40783 11870 70E0      		ldi r23,hi8(.LC48)
 40784 11872 0E94 0000 		call blockWriteINT
3635:lp_solve_5.5/lp_presolve.c **** 
3636:lp_solve_5.5/lp_presolve.c ****   fprintf(output, "\nSUMS\n----\n\n");
 40785               		.loc 2 3636 0
 40786 11876 8981      		ldd r24,Y+1
 40787 11878 9A81      		ldd r25,Y+2
 40788 1187a 9C01      		movw r18,r24
 40789 1187c 4CE0      		ldi r20,lo8(12)
 40790 1187e 50E0      		ldi r21,0
 40791 11880 61E0      		ldi r22,lo8(1)
 40792 11882 70E0      		ldi r23,0
 40793 11884 80E0      		ldi r24,lo8(.LC49)
 40794 11886 90E0      		ldi r25,hi8(.LC49)
 40795 11888 0E94 0000 		call fwrite
3637:lp_solve_5.5/lp_presolve.c ****   blockWriteREAL(output, "pluupper", psdata->rows->pluupper, 0, lp->rows);
 40796               		.loc 2 3637 0
 40797 1188c 8E81      		ldd r24,Y+6
 40798 1188e 9F81      		ldd r25,Y+7
 40799 11890 8651      		subi r24,22
 40800 11892 9E4F      		sbci r25,-2
 40801 11894 FC01      		movw r30,r24
 40802 11896 2081      		ld r18,Z
 40803 11898 3181      		ldd r19,Z+1
 40804 1189a 8885      		ldd r24,Y+8
 40805 1189c 9985      		ldd r25,Y+9
 40806 1189e FC01      		movw r30,r24
 40807 118a0 8081      		ld r24,Z
 40808 118a2 9181      		ldd r25,Z+1
 40809 118a4 FC01      		movw r30,r24
 40810 118a6 4289      		ldd r20,Z+18
 40811 118a8 5389      		ldd r21,Z+19
 40812 118aa 8981      		ldd r24,Y+1
 40813 118ac 9A81      		ldd r25,Y+2
 40814 118ae 8901      		movw r16,r18
 40815 118b0 20E0      		ldi r18,0
 40816 118b2 30E0      		ldi r19,0
 40817 118b4 60E0      		ldi r22,lo8(.LC50)
 40818 118b6 70E0      		ldi r23,hi8(.LC50)
 40819 118b8 0E94 0000 		call blockWriteREAL
3638:lp_solve_5.5/lp_presolve.c ****   blockWriteREAL(output, "negupper", psdata->rows->negupper, 0, lp->rows);
 40820               		.loc 2 3638 0
 40821 118bc 8E81      		ldd r24,Y+6
 40822 118be 9F81      		ldd r25,Y+7
 40823 118c0 8651      		subi r24,22
 40824 118c2 9E4F      		sbci r25,-2
 40825 118c4 FC01      		movw r30,r24
 40826 118c6 2081      		ld r18,Z
 40827 118c8 3181      		ldd r19,Z+1
 40828 118ca 8885      		ldd r24,Y+8
 40829 118cc 9985      		ldd r25,Y+9
 40830 118ce FC01      		movw r30,r24
 40831 118d0 8081      		ld r24,Z
 40832 118d2 9181      		ldd r25,Z+1
 40833 118d4 FC01      		movw r30,r24
 40834 118d6 4489      		ldd r20,Z+20
 40835 118d8 5589      		ldd r21,Z+21
 40836 118da 8981      		ldd r24,Y+1
 40837 118dc 9A81      		ldd r25,Y+2
 40838 118de 8901      		movw r16,r18
 40839 118e0 20E0      		ldi r18,0
 40840 118e2 30E0      		ldi r19,0
 40841 118e4 60E0      		ldi r22,lo8(.LC51)
 40842 118e6 70E0      		ldi r23,hi8(.LC51)
 40843 118e8 0E94 0000 		call blockWriteREAL
3639:lp_solve_5.5/lp_presolve.c ****   blockWriteREAL(output, "plulower", psdata->rows->pluupper, 0, lp->rows);
 40844               		.loc 2 3639 0
 40845 118ec 8E81      		ldd r24,Y+6
 40846 118ee 9F81      		ldd r25,Y+7
 40847 118f0 8651      		subi r24,22
 40848 118f2 9E4F      		sbci r25,-2
 40849 118f4 FC01      		movw r30,r24
 40850 118f6 2081      		ld r18,Z
 40851 118f8 3181      		ldd r19,Z+1
 40852 118fa 8885      		ldd r24,Y+8
 40853 118fc 9985      		ldd r25,Y+9
 40854 118fe FC01      		movw r30,r24
 40855 11900 8081      		ld r24,Z
 40856 11902 9181      		ldd r25,Z+1
 40857 11904 FC01      		movw r30,r24
 40858 11906 4289      		ldd r20,Z+18
 40859 11908 5389      		ldd r21,Z+19
 40860 1190a 8981      		ldd r24,Y+1
 40861 1190c 9A81      		ldd r25,Y+2
 40862 1190e 8901      		movw r16,r18
 40863 11910 20E0      		ldi r18,0
 40864 11912 30E0      		ldi r19,0
 40865 11914 60E0      		ldi r22,lo8(.LC52)
 40866 11916 70E0      		ldi r23,hi8(.LC52)
 40867 11918 0E94 0000 		call blockWriteREAL
3640:lp_solve_5.5/lp_presolve.c ****   blockWriteREAL(output, "neglower", psdata->rows->negupper, 0, lp->rows);
 40868               		.loc 2 3640 0
 40869 1191c 8E81      		ldd r24,Y+6
 40870 1191e 9F81      		ldd r25,Y+7
 40871 11920 8651      		subi r24,22
 40872 11922 9E4F      		sbci r25,-2
 40873 11924 FC01      		movw r30,r24
 40874 11926 2081      		ld r18,Z
 40875 11928 3181      		ldd r19,Z+1
 40876 1192a 8885      		ldd r24,Y+8
 40877 1192c 9985      		ldd r25,Y+9
 40878 1192e FC01      		movw r30,r24
 40879 11930 8081      		ld r24,Z
 40880 11932 9181      		ldd r25,Z+1
 40881 11934 FC01      		movw r30,r24
 40882 11936 4489      		ldd r20,Z+20
 40883 11938 5589      		ldd r21,Z+21
 40884 1193a 8981      		ldd r24,Y+1
 40885 1193c 9A81      		ldd r25,Y+2
 40886 1193e 8901      		movw r16,r18
 40887 11940 20E0      		ldi r18,0
 40888 11942 30E0      		ldi r19,0
 40889 11944 60E0      		ldi r22,lo8(.LC53)
 40890 11946 70E0      		ldi r23,hi8(.LC53)
 40891 11948 0E94 0000 		call blockWriteREAL
3641:lp_solve_5.5/lp_presolve.c **** 
3642:lp_solve_5.5/lp_presolve.c ****   if(filename != NULL)
 40892               		.loc 2 3642 0
 40893 1194c 8A85      		ldd r24,Y+10
 40894 1194e 9B85      		ldd r25,Y+11
 40895 11950 892B      		or r24,r25
 40896 11952 01F0      		breq .L1703
3643:lp_solve_5.5/lp_presolve.c ****     fclose(output);
 40897               		.loc 2 3643 0
 40898 11954 8981      		ldd r24,Y+1
 40899 11956 9A81      		ldd r25,Y+2
 40900 11958 0E94 0000 		call fclose
 40901               	.L1703:
3644:lp_solve_5.5/lp_presolve.c ****   return(ok);
 40902               		.loc 2 3644 0
 40903 1195c 8B81      		ldd r24,Y+3
 40904               	.L1701:
 40905               	/* epilogue start */
3645:lp_solve_5.5/lp_presolve.c **** }
 40906               		.loc 2 3645 0
 40907 1195e 2C96      		adiw r28,12
 40908 11960 0FB6      		in __tmp_reg__,__SREG__
 40909 11962 F894      		cli
 40910 11964 DEBF      		out __SP_H__,r29
 40911 11966 0FBE      		out __SREG__,__tmp_reg__
 40912 11968 CDBF      		out __SP_L__,r28
 40913 1196a DF91      		pop r29
 40914 1196c CF91      		pop r28
 40915 1196e 1F91      		pop r17
 40916 11970 0F91      		pop r16
 40917 11972 0895      		ret
 40918               		.cfi_endproc
 40919               	.LFE79:
 40921               	.global	compRedundant
 40923               	compRedundant:
 40924               	.LFB80:
3646:lp_solve_5.5/lp_presolve.c **** 
3647:lp_solve_5.5/lp_presolve.c **** int CMP_CALLMODEL compRedundant(const UNIONTYPE QSORTrec *current, const UNIONTYPE QSORTrec *candid
3648:lp_solve_5.5/lp_presolve.c **** {
 40925               		.loc 2 3648 0
 40926               		.cfi_startproc
 40927 11974 CF93      		push r28
 40928               	.LCFI486:
 40929               		.cfi_def_cfa_offset 3
 40930               		.cfi_offset 28, -2
 40931 11976 DF93      		push r29
 40932               	.LCFI487:
 40933               		.cfi_def_cfa_offset 4
 40934               		.cfi_offset 29, -3
 40935 11978 CDB7      		in r28,__SP_L__
 40936 1197a DEB7      		in r29,__SP_H__
 40937               	.LCFI488:
 40938               		.cfi_def_cfa_register 28
 40939 1197c 2A97      		sbiw r28,10
 40940               	.LCFI489:
 40941               		.cfi_def_cfa_offset 14
 40942 1197e 0FB6      		in __tmp_reg__,__SREG__
 40943 11980 F894      		cli
 40944 11982 DEBF      		out __SP_H__,r29
 40945 11984 0FBE      		out __SREG__,__tmp_reg__
 40946 11986 CDBF      		out __SP_L__,r28
 40947               	/* prologue: function */
 40948               	/* frame size = 10 */
 40949               	/* stack size = 12 */
 40950               	.L__stack_usage = 12
 40951 11988 9887      		std Y+8,r25
 40952 1198a 8F83      		std Y+7,r24
 40953 1198c 7A87      		std Y+10,r23
 40954 1198e 6987      		std Y+9,r22
3649:lp_solve_5.5/lp_presolve.c ****   int start1 = (int) (current->int4.intpar1),
 40955               		.loc 2 3649 0
 40956 11990 8F81      		ldd r24,Y+7
 40957 11992 9885      		ldd r25,Y+8
 40958 11994 FC01      		movw r30,r24
 40959 11996 8281      		ldd r24,Z+2
 40960 11998 9381      		ldd r25,Z+3
 40961 1199a 9C83      		std Y+4,r25
 40962 1199c 8B83      		std Y+3,r24
3650:lp_solve_5.5/lp_presolve.c ****       start2 = (int) (candidate->int4.intpar1),
 40963               		.loc 2 3650 0
 40964 1199e 8985      		ldd r24,Y+9
 40965 119a0 9A85      		ldd r25,Y+10
 40966 119a2 FC01      		movw r30,r24
 40967 119a4 8281      		ldd r24,Z+2
 40968 119a6 9381      		ldd r25,Z+3
 40969 119a8 9E83      		std Y+6,r25
 40970 119aa 8D83      		std Y+5,r24
3651:lp_solve_5.5/lp_presolve.c ****       result = CMP_COMPARE(start1, start2);
 40971               		.loc 2 3651 0
 40972 119ac 2B81      		ldd r18,Y+3
 40973 119ae 3C81      		ldd r19,Y+4
 40974 119b0 8D81      		ldd r24,Y+5
 40975 119b2 9E81      		ldd r25,Y+6
 40976 119b4 2817      		cp r18,r24
 40977 119b6 3907      		cpc r19,r25
 40978 119b8 04F0      		brlt .L1705
 40979               		.loc 2 3651 0 is_stmt 0 discriminator 1
 40980 119ba 41E0      		ldi r20,lo8(1)
 40981 119bc 2B81      		ldd r18,Y+3
 40982 119be 3C81      		ldd r19,Y+4
 40983 119c0 8D81      		ldd r24,Y+5
 40984 119c2 9E81      		ldd r25,Y+6
 40985 119c4 8217      		cp r24,r18
 40986 119c6 9307      		cpc r25,r19
 40987 119c8 04F0      		brlt .L1706
 40988 119ca 40E0      		ldi r20,0
 40989               	.L1706:
 40990 119cc 842F      		mov r24,r20
 40991 119ce 90E0      		ldi r25,0
 40992 119d0 00C0      		rjmp .L1707
 40993               	.L1705:
 40994               		.loc 2 3651 0 discriminator 2
 40995 119d2 8FEF      		ldi r24,lo8(-1)
 40996 119d4 9FEF      		ldi r25,lo8(-1)
 40997               	.L1707:
 40998               		.loc 2 3651 0 discriminator 4
 40999 119d6 9A83      		std Y+2,r25
 41000 119d8 8983      		std Y+1,r24
3652:lp_solve_5.5/lp_presolve.c **** 
3653:lp_solve_5.5/lp_presolve.c ****   if(result == 0) {
 41001               		.loc 2 3653 0 is_stmt 1 discriminator 4
 41002 119da 8981      		ldd r24,Y+1
 41003 119dc 9A81      		ldd r25,Y+2
 41004 119de 892B      		or r24,r25
 41005 119e0 01F4      		brne .L1708
3654:lp_solve_5.5/lp_presolve.c ****     start1 = (int) (current->int4.intpar2);
 41006               		.loc 2 3654 0
 41007 119e2 8F81      		ldd r24,Y+7
 41008 119e4 9885      		ldd r25,Y+8
 41009 119e6 FC01      		movw r30,r24
 41010 119e8 8481      		ldd r24,Z+4
 41011 119ea 9581      		ldd r25,Z+5
 41012 119ec 9C83      		std Y+4,r25
 41013 119ee 8B83      		std Y+3,r24
3655:lp_solve_5.5/lp_presolve.c ****     start2 = (int) (candidate->int4.intpar2);
 41014               		.loc 2 3655 0
 41015 119f0 8985      		ldd r24,Y+9
 41016 119f2 9A85      		ldd r25,Y+10
 41017 119f4 FC01      		movw r30,r24
 41018 119f6 8481      		ldd r24,Z+4
 41019 119f8 9581      		ldd r25,Z+5
 41020 119fa 9E83      		std Y+6,r25
 41021 119fc 8D83      		std Y+5,r24
3656:lp_solve_5.5/lp_presolve.c ****     result = -CMP_COMPARE(start1, start2);
 41022               		.loc 2 3656 0
 41023 119fe 2B81      		ldd r18,Y+3
 41024 11a00 3C81      		ldd r19,Y+4
 41025 11a02 8D81      		ldd r24,Y+5
 41026 11a04 9E81      		ldd r25,Y+6
 41027 11a06 2817      		cp r18,r24
 41028 11a08 3907      		cpc r19,r25
 41029 11a0a 04F0      		brlt .L1709
 41030               		.loc 2 3656 0 is_stmt 0 discriminator 1
 41031 11a0c 41E0      		ldi r20,lo8(1)
 41032 11a0e 2B81      		ldd r18,Y+3
 41033 11a10 3C81      		ldd r19,Y+4
 41034 11a12 8D81      		ldd r24,Y+5
 41035 11a14 9E81      		ldd r25,Y+6
 41036 11a16 8217      		cp r24,r18
 41037 11a18 9307      		cpc r25,r19
 41038 11a1a 04F0      		brlt .L1710
 41039 11a1c 40E0      		ldi r20,0
 41040               	.L1710:
 41041 11a1e 842F      		mov r24,r20
 41042 11a20 90E0      		ldi r25,0
 41043 11a22 9195      		neg r25
 41044 11a24 8195      		neg r24
 41045 11a26 9109      		sbc r25,__zero_reg__
 41046 11a28 00C0      		rjmp .L1711
 41047               	.L1709:
 41048               		.loc 2 3656 0 discriminator 2
 41049 11a2a 81E0      		ldi r24,lo8(1)
 41050 11a2c 90E0      		ldi r25,0
 41051               	.L1711:
 41052               		.loc 2 3656 0 discriminator 4
 41053 11a2e 9A83      		std Y+2,r25
 41054 11a30 8983      		std Y+1,r24
 41055               	.L1708:
3657:lp_solve_5.5/lp_presolve.c ****   }
3658:lp_solve_5.5/lp_presolve.c ****   return( result );
 41056               		.loc 2 3658 0 is_stmt 1
 41057 11a32 8981      		ldd r24,Y+1
 41058 11a34 9A81      		ldd r25,Y+2
 41059               	/* epilogue start */
3659:lp_solve_5.5/lp_presolve.c **** }
 41060               		.loc 2 3659 0
 41061 11a36 2A96      		adiw r28,10
 41062 11a38 0FB6      		in __tmp_reg__,__SREG__
 41063 11a3a F894      		cli
 41064 11a3c DEBF      		out __SP_H__,r29
 41065 11a3e 0FBE      		out __SREG__,__tmp_reg__
 41066 11a40 CDBF      		out __SP_L__,r28
 41067 11a42 DF91      		pop r29
 41068 11a44 CF91      		pop r28
 41069 11a46 0895      		ret
 41070               		.cfi_endproc
 41071               	.LFE80:
 41073               	.global	compSparsity
 41075               	compSparsity:
 41076               	.LFB81:
3660:lp_solve_5.5/lp_presolve.c **** int CMP_CALLMODEL compSparsity(const UNIONTYPE QSORTrec *current, const UNIONTYPE QSORTrec *candida
3661:lp_solve_5.5/lp_presolve.c **** {
 41077               		.loc 2 3661 0
 41078               		.cfi_startproc
 41079 11a48 CF93      		push r28
 41080               	.LCFI490:
 41081               		.cfi_def_cfa_offset 3
 41082               		.cfi_offset 28, -2
 41083 11a4a DF93      		push r29
 41084               	.LCFI491:
 41085               		.cfi_def_cfa_offset 4
 41086               		.cfi_offset 29, -3
 41087 11a4c CDB7      		in r28,__SP_L__
 41088 11a4e DEB7      		in r29,__SP_H__
 41089               	.LCFI492:
 41090               		.cfi_def_cfa_register 28
 41091 11a50 2A97      		sbiw r28,10
 41092               	.LCFI493:
 41093               		.cfi_def_cfa_offset 14
 41094 11a52 0FB6      		in __tmp_reg__,__SREG__
 41095 11a54 F894      		cli
 41096 11a56 DEBF      		out __SP_H__,r29
 41097 11a58 0FBE      		out __SREG__,__tmp_reg__
 41098 11a5a CDBF      		out __SP_L__,r28
 41099               	/* prologue: function */
 41100               	/* frame size = 10 */
 41101               	/* stack size = 12 */
 41102               	.L__stack_usage = 12
 41103 11a5c 9887      		std Y+8,r25
 41104 11a5e 8F83      		std Y+7,r24
 41105 11a60 7A87      		std Y+10,r23
 41106 11a62 6987      		std Y+9,r22
3662:lp_solve_5.5/lp_presolve.c ****   int start1 = (int) (current->int4.intpar1),
 41107               		.loc 2 3662 0
 41108 11a64 8F81      		ldd r24,Y+7
 41109 11a66 9885      		ldd r25,Y+8
 41110 11a68 FC01      		movw r30,r24
 41111 11a6a 8281      		ldd r24,Z+2
 41112 11a6c 9381      		ldd r25,Z+3
 41113 11a6e 9C83      		std Y+4,r25
 41114 11a70 8B83      		std Y+3,r24
3663:lp_solve_5.5/lp_presolve.c ****       start2 = (int) (candidate->int4.intpar1),
 41115               		.loc 2 3663 0
 41116 11a72 8985      		ldd r24,Y+9
 41117 11a74 9A85      		ldd r25,Y+10
 41118 11a76 FC01      		movw r30,r24
 41119 11a78 8281      		ldd r24,Z+2
 41120 11a7a 9381      		ldd r25,Z+3
 41121 11a7c 9E83      		std Y+6,r25
 41122 11a7e 8D83      		std Y+5,r24
3664:lp_solve_5.5/lp_presolve.c ****       result = CMP_COMPARE(start1, start2);
 41123               		.loc 2 3664 0
 41124 11a80 2B81      		ldd r18,Y+3
 41125 11a82 3C81      		ldd r19,Y+4
 41126 11a84 8D81      		ldd r24,Y+5
 41127 11a86 9E81      		ldd r25,Y+6
 41128 11a88 2817      		cp r18,r24
 41129 11a8a 3907      		cpc r19,r25
 41130 11a8c 04F0      		brlt .L1714
 41131               		.loc 2 3664 0 is_stmt 0 discriminator 1
 41132 11a8e 41E0      		ldi r20,lo8(1)
 41133 11a90 2B81      		ldd r18,Y+3
 41134 11a92 3C81      		ldd r19,Y+4
 41135 11a94 8D81      		ldd r24,Y+5
 41136 11a96 9E81      		ldd r25,Y+6
 41137 11a98 8217      		cp r24,r18
 41138 11a9a 9307      		cpc r25,r19
 41139 11a9c 04F0      		brlt .L1715
 41140 11a9e 40E0      		ldi r20,0
 41141               	.L1715:
 41142 11aa0 842F      		mov r24,r20
 41143 11aa2 90E0      		ldi r25,0
 41144 11aa4 00C0      		rjmp .L1716
 41145               	.L1714:
 41146               		.loc 2 3664 0 discriminator 2
 41147 11aa6 8FEF      		ldi r24,lo8(-1)
 41148 11aa8 9FEF      		ldi r25,lo8(-1)
 41149               	.L1716:
 41150               		.loc 2 3664 0 discriminator 4
 41151 11aaa 9A83      		std Y+2,r25
 41152 11aac 8983      		std Y+1,r24
3665:lp_solve_5.5/lp_presolve.c **** 
3666:lp_solve_5.5/lp_presolve.c ****   if(result == 0) {
 41153               		.loc 2 3666 0 is_stmt 1 discriminator 4
 41154 11aae 8981      		ldd r24,Y+1
 41155 11ab0 9A81      		ldd r25,Y+2
 41156 11ab2 892B      		or r24,r25
 41157 11ab4 01F4      		brne .L1717
3667:lp_solve_5.5/lp_presolve.c ****     start1 = (int) (current->int4.intpar2);
 41158               		.loc 2 3667 0
 41159 11ab6 8F81      		ldd r24,Y+7
 41160 11ab8 9885      		ldd r25,Y+8
 41161 11aba FC01      		movw r30,r24
 41162 11abc 8481      		ldd r24,Z+4
 41163 11abe 9581      		ldd r25,Z+5
 41164 11ac0 9C83      		std Y+4,r25
 41165 11ac2 8B83      		std Y+3,r24
3668:lp_solve_5.5/lp_presolve.c ****     start2 = (int) (candidate->int4.intpar2);
 41166               		.loc 2 3668 0
 41167 11ac4 8985      		ldd r24,Y+9
 41168 11ac6 9A85      		ldd r25,Y+10
 41169 11ac8 FC01      		movw r30,r24
 41170 11aca 8481      		ldd r24,Z+4
 41171 11acc 9581      		ldd r25,Z+5
 41172 11ace 9E83      		std Y+6,r25
 41173 11ad0 8D83      		std Y+5,r24
3669:lp_solve_5.5/lp_presolve.c ****     result = -CMP_COMPARE(start1, start2);
 41174               		.loc 2 3669 0
 41175 11ad2 2B81      		ldd r18,Y+3
 41176 11ad4 3C81      		ldd r19,Y+4
 41177 11ad6 8D81      		ldd r24,Y+5
 41178 11ad8 9E81      		ldd r25,Y+6
 41179 11ada 2817      		cp r18,r24
 41180 11adc 3907      		cpc r19,r25
 41181 11ade 04F0      		brlt .L1718
 41182               		.loc 2 3669 0 is_stmt 0 discriminator 1
 41183 11ae0 41E0      		ldi r20,lo8(1)
 41184 11ae2 2B81      		ldd r18,Y+3
 41185 11ae4 3C81      		ldd r19,Y+4
 41186 11ae6 8D81      		ldd r24,Y+5
 41187 11ae8 9E81      		ldd r25,Y+6
 41188 11aea 8217      		cp r24,r18
 41189 11aec 9307      		cpc r25,r19
 41190 11aee 04F0      		brlt .L1719
 41191 11af0 40E0      		ldi r20,0
 41192               	.L1719:
 41193 11af2 842F      		mov r24,r20
 41194 11af4 90E0      		ldi r25,0
 41195 11af6 9195      		neg r25
 41196 11af8 8195      		neg r24
 41197 11afa 9109      		sbc r25,__zero_reg__
 41198 11afc 00C0      		rjmp .L1720
 41199               	.L1718:
 41200               		.loc 2 3669 0 discriminator 2
 41201 11afe 81E0      		ldi r24,lo8(1)
 41202 11b00 90E0      		ldi r25,0
 41203               	.L1720:
 41204               		.loc 2 3669 0 discriminator 4
 41205 11b02 9A83      		std Y+2,r25
 41206 11b04 8983      		std Y+1,r24
 41207               	.L1717:
3670:lp_solve_5.5/lp_presolve.c ****   }
3671:lp_solve_5.5/lp_presolve.c **** 
3672:lp_solve_5.5/lp_presolve.c ****   if(result == 0) {
 41208               		.loc 2 3672 0 is_stmt 1
 41209 11b06 8981      		ldd r24,Y+1
 41210 11b08 9A81      		ldd r25,Y+2
 41211 11b0a 892B      		or r24,r25
 41212 11b0c 01F4      		brne .L1721
3673:lp_solve_5.5/lp_presolve.c ****     start1 = (int) (current->int4.intval);
 41213               		.loc 2 3673 0
 41214 11b0e 8F81      		ldd r24,Y+7
 41215 11b10 9885      		ldd r25,Y+8
 41216 11b12 FC01      		movw r30,r24
 41217 11b14 8081      		ld r24,Z
 41218 11b16 9181      		ldd r25,Z+1
 41219 11b18 9C83      		std Y+4,r25
 41220 11b1a 8B83      		std Y+3,r24
3674:lp_solve_5.5/lp_presolve.c ****     start2 = (int) (candidate->int4.intval);
 41221               		.loc 2 3674 0
 41222 11b1c 8985      		ldd r24,Y+9
 41223 11b1e 9A85      		ldd r25,Y+10
 41224 11b20 FC01      		movw r30,r24
 41225 11b22 8081      		ld r24,Z
 41226 11b24 9181      		ldd r25,Z+1
 41227 11b26 9E83      		std Y+6,r25
 41228 11b28 8D83      		std Y+5,r24
3675:lp_solve_5.5/lp_presolve.c ****     result = CMP_COMPARE(start1, start2);
 41229               		.loc 2 3675 0
 41230 11b2a 2B81      		ldd r18,Y+3
 41231 11b2c 3C81      		ldd r19,Y+4
 41232 11b2e 8D81      		ldd r24,Y+5
 41233 11b30 9E81      		ldd r25,Y+6
 41234 11b32 2817      		cp r18,r24
 41235 11b34 3907      		cpc r19,r25
 41236 11b36 04F0      		brlt .L1722
 41237               		.loc 2 3675 0 is_stmt 0 discriminator 1
 41238 11b38 41E0      		ldi r20,lo8(1)
 41239 11b3a 2B81      		ldd r18,Y+3
 41240 11b3c 3C81      		ldd r19,Y+4
 41241 11b3e 8D81      		ldd r24,Y+5
 41242 11b40 9E81      		ldd r25,Y+6
 41243 11b42 8217      		cp r24,r18
 41244 11b44 9307      		cpc r25,r19
 41245 11b46 04F0      		brlt .L1723
 41246 11b48 40E0      		ldi r20,0
 41247               	.L1723:
 41248 11b4a 842F      		mov r24,r20
 41249 11b4c 90E0      		ldi r25,0
 41250 11b4e 00C0      		rjmp .L1724
 41251               	.L1722:
 41252               		.loc 2 3675 0 discriminator 2
 41253 11b50 8FEF      		ldi r24,lo8(-1)
 41254 11b52 9FEF      		ldi r25,lo8(-1)
 41255               	.L1724:
 41256               		.loc 2 3675 0 discriminator 4
 41257 11b54 9A83      		std Y+2,r25
 41258 11b56 8983      		std Y+1,r24
 41259               	.L1721:
3676:lp_solve_5.5/lp_presolve.c ****   }
3677:lp_solve_5.5/lp_presolve.c ****   return( result );
 41260               		.loc 2 3677 0 is_stmt 1
 41261 11b58 8981      		ldd r24,Y+1
 41262 11b5a 9A81      		ldd r25,Y+2
 41263               	/* epilogue start */
3678:lp_solve_5.5/lp_presolve.c **** }
 41264               		.loc 2 3678 0
 41265 11b5c 2A96      		adiw r28,10
 41266 11b5e 0FB6      		in __tmp_reg__,__SREG__
 41267 11b60 F894      		cli
 41268 11b62 DEBF      		out __SP_H__,r29
 41269 11b64 0FBE      		out __SREG__,__tmp_reg__
 41270 11b66 CDBF      		out __SP_L__,r28
 41271 11b68 DF91      		pop r29
 41272 11b6a CF91      		pop r28
 41273 11b6c 0895      		ret
 41274               		.cfi_endproc
 41275               	.LFE81:
 41277               	.global	compAggregate
 41279               	compAggregate:
 41280               	.LFB82:
3679:lp_solve_5.5/lp_presolve.c **** int CMP_CALLMODEL compAggregate(const UNIONTYPE QSORTrec *current, const UNIONTYPE QSORTrec *candid
3680:lp_solve_5.5/lp_presolve.c **** {
 41281               		.loc 2 3680 0
 41282               		.cfi_startproc
 41283 11b6e 1F93      		push r17
 41284               	.LCFI494:
 41285               		.cfi_def_cfa_offset 3
 41286               		.cfi_offset 17, -2
 41287 11b70 CF93      		push r28
 41288               	.LCFI495:
 41289               		.cfi_def_cfa_offset 4
 41290               		.cfi_offset 28, -3
 41291 11b72 DF93      		push r29
 41292               	.LCFI496:
 41293               		.cfi_def_cfa_offset 5
 41294               		.cfi_offset 29, -4
 41295 11b74 CDB7      		in r28,__SP_L__
 41296 11b76 DEB7      		in r29,__SP_H__
 41297               	.LCFI497:
 41298               		.cfi_def_cfa_register 28
 41299 11b78 6497      		sbiw r28,20
 41300               	.LCFI498:
 41301               		.cfi_def_cfa_offset 25
 41302 11b7a 0FB6      		in __tmp_reg__,__SREG__
 41303 11b7c F894      		cli
 41304 11b7e DEBF      		out __SP_H__,r29
 41305 11b80 0FBE      		out __SREG__,__tmp_reg__
 41306 11b82 CDBF      		out __SP_L__,r28
 41307               	/* prologue: function */
 41308               	/* frame size = 20 */
 41309               	/* stack size = 23 */
 41310               	.L__stack_usage = 23
 41311 11b84 9A8B      		std Y+18,r25
 41312 11b86 898B      		std Y+17,r24
 41313 11b88 7C8B      		std Y+20,r23
 41314 11b8a 6B8B      		std Y+19,r22
3681:lp_solve_5.5/lp_presolve.c ****   int  index1 = (int) (current->pvoidint2.intval),
 41315               		.loc 2 3681 0
 41316 11b8c 8989      		ldd r24,Y+17
 41317 11b8e 9A89      		ldd r25,Y+18
 41318 11b90 FC01      		movw r30,r24
 41319 11b92 8281      		ldd r24,Z+2
 41320 11b94 9381      		ldd r25,Z+3
 41321 11b96 9A83      		std Y+2,r25
 41322 11b98 8983      		std Y+1,r24
3682:lp_solve_5.5/lp_presolve.c ****        index2 = (int) (candidate->pvoidint2.intval);
 41323               		.loc 2 3682 0
 41324 11b9a 8B89      		ldd r24,Y+19
 41325 11b9c 9C89      		ldd r25,Y+20
 41326 11b9e FC01      		movw r30,r24
 41327 11ba0 8281      		ldd r24,Z+2
 41328 11ba2 9381      		ldd r25,Z+3
 41329 11ba4 9C83      		std Y+4,r25
 41330 11ba6 8B83      		std Y+3,r24
3683:lp_solve_5.5/lp_presolve.c ****   lprec *lp   = (lprec *) current->pvoidint2.ptr;
 41331               		.loc 2 3683 0
 41332 11ba8 8989      		ldd r24,Y+17
 41333 11baa 9A89      		ldd r25,Y+18
 41334 11bac FC01      		movw r30,r24
 41335 11bae 8081      		ld r24,Z
 41336 11bb0 9181      		ldd r25,Z+1
 41337 11bb2 9887      		std Y+8,r25
 41338 11bb4 8F83      		std Y+7,r24
3684:lp_solve_5.5/lp_presolve.c ****   REAL value1 = lp->orig_obj[index1],
 41339               		.loc 2 3684 0
 41340 11bb6 8F81      		ldd r24,Y+7
 41341 11bb8 9885      		ldd r25,Y+8
 41342 11bba 845D      		subi r24,-44
 41343 11bbc 9D4F      		sbci r25,-3
 41344 11bbe FC01      		movw r30,r24
 41345 11bc0 2081      		ld r18,Z
 41346 11bc2 3181      		ldd r19,Z+1
 41347 11bc4 8981      		ldd r24,Y+1
 41348 11bc6 9A81      		ldd r25,Y+2
 41349 11bc8 880F      		lsl r24
 41350 11bca 991F      		rol r25
 41351 11bcc 880F      		lsl r24
 41352 11bce 991F      		rol r25
 41353 11bd0 820F      		add r24,r18
 41354 11bd2 931F      		adc r25,r19
 41355 11bd4 FC01      		movw r30,r24
 41356 11bd6 8081      		ld r24,Z
 41357 11bd8 9181      		ldd r25,Z+1
 41358 11bda A281      		ldd r26,Z+2
 41359 11bdc B381      		ldd r27,Z+3
 41360 11bde 8987      		std Y+9,r24
 41361 11be0 9A87      		std Y+10,r25
 41362 11be2 AB87      		std Y+11,r26
 41363 11be4 BC87      		std Y+12,r27
3685:lp_solve_5.5/lp_presolve.c ****        value2 = lp->orig_obj[index2];
 41364               		.loc 2 3685 0
 41365 11be6 8F81      		ldd r24,Y+7
 41366 11be8 9885      		ldd r25,Y+8
 41367 11bea 845D      		subi r24,-44
 41368 11bec 9D4F      		sbci r25,-3
 41369 11bee FC01      		movw r30,r24
 41370 11bf0 2081      		ld r18,Z
 41371 11bf2 3181      		ldd r19,Z+1
 41372 11bf4 8B81      		ldd r24,Y+3
 41373 11bf6 9C81      		ldd r25,Y+4
 41374 11bf8 880F      		lsl r24
 41375 11bfa 991F      		rol r25
 41376 11bfc 880F      		lsl r24
 41377 11bfe 991F      		rol r25
 41378 11c00 820F      		add r24,r18
 41379 11c02 931F      		adc r25,r19
 41380 11c04 FC01      		movw r30,r24
 41381 11c06 8081      		ld r24,Z
 41382 11c08 9181      		ldd r25,Z+1
 41383 11c0a A281      		ldd r26,Z+2
 41384 11c0c B381      		ldd r27,Z+3
 41385 11c0e 8D87      		std Y+13,r24
 41386 11c10 9E87      		std Y+14,r25
 41387 11c12 AF87      		std Y+15,r26
 41388 11c14 B88B      		std Y+16,r27
3686:lp_solve_5.5/lp_presolve.c **** 
3687:lp_solve_5.5/lp_presolve.c ****   /* Smallest objective coefficient (largest contribution to OF) */
3688:lp_solve_5.5/lp_presolve.c ****   int  result = CMP_COMPARE(value1, value2);
 41389               		.loc 2 3688 0
 41390 11c16 2D85      		ldd r18,Y+13
 41391 11c18 3E85      		ldd r19,Y+14
 41392 11c1a 4F85      		ldd r20,Y+15
 41393 11c1c 5889      		ldd r21,Y+16
 41394 11c1e 6985      		ldd r22,Y+9
 41395 11c20 7A85      		ldd r23,Y+10
 41396 11c22 8B85      		ldd r24,Y+11
 41397 11c24 9C85      		ldd r25,Y+12
 41398 11c26 0E94 0000 		call __ltsf2
 41399 11c2a 8823      		tst r24
 41400 11c2c 04F4      		brge .L1745
 41401               		.loc 2 3688 0 is_stmt 0 discriminator 1
 41402 11c2e 8FEF      		ldi r24,lo8(-1)
 41403 11c30 9FEF      		ldi r25,lo8(-1)
 41404 11c32 00C0      		rjmp .L1729
 41405               	.L1745:
 41406               		.loc 2 3688 0 discriminator 2
 41407 11c34 11E0      		ldi r17,lo8(1)
 41408 11c36 2D85      		ldd r18,Y+13
 41409 11c38 3E85      		ldd r19,Y+14
 41410 11c3a 4F85      		ldd r20,Y+15
 41411 11c3c 5889      		ldd r21,Y+16
 41412 11c3e 6985      		ldd r22,Y+9
 41413 11c40 7A85      		ldd r23,Y+10
 41414 11c42 8B85      		ldd r24,Y+11
 41415 11c44 9C85      		ldd r25,Y+12
 41416 11c46 0E94 0000 		call __gtsf2
 41417 11c4a 1816      		cp __zero_reg__,r24
 41418 11c4c 04F0      		brlt .L1730
 41419 11c4e 10E0      		ldi r17,0
 41420               	.L1730:
 41421 11c50 812F      		mov r24,r17
 41422 11c52 90E0      		ldi r25,0
 41423               	.L1729:
 41424               		.loc 2 3688 0 discriminator 4
 41425 11c54 9E83      		std Y+6,r25
 41426 11c56 8D83      		std Y+5,r24
3689:lp_solve_5.5/lp_presolve.c **** 
3690:lp_solve_5.5/lp_presolve.c ****   /* Smallest lower variable bound */
3691:lp_solve_5.5/lp_presolve.c ****   if(result == 0) {
 41427               		.loc 2 3691 0 is_stmt 1 discriminator 4
 41428 11c58 8D81      		ldd r24,Y+5
 41429 11c5a 9E81      		ldd r25,Y+6
 41430 11c5c 892B      		or r24,r25
 41431 11c5e 01F0      		breq .+2
 41432 11c60 00C0      		rjmp .L1731
3692:lp_solve_5.5/lp_presolve.c ****     index1 += lp->rows;
 41433               		.loc 2 3692 0
 41434 11c62 8F81      		ldd r24,Y+7
 41435 11c64 9885      		ldd r25,Y+8
 41436 11c66 8651      		subi r24,22
 41437 11c68 9E4F      		sbci r25,-2
 41438 11c6a FC01      		movw r30,r24
 41439 11c6c 8081      		ld r24,Z
 41440 11c6e 9181      		ldd r25,Z+1
 41441 11c70 2981      		ldd r18,Y+1
 41442 11c72 3A81      		ldd r19,Y+2
 41443 11c74 820F      		add r24,r18
 41444 11c76 931F      		adc r25,r19
 41445 11c78 9A83      		std Y+2,r25
 41446 11c7a 8983      		std Y+1,r24
3693:lp_solve_5.5/lp_presolve.c ****     index2 += lp->rows;
 41447               		.loc 2 3693 0
 41448 11c7c 8F81      		ldd r24,Y+7
 41449 11c7e 9885      		ldd r25,Y+8
 41450 11c80 8651      		subi r24,22
 41451 11c82 9E4F      		sbci r25,-2
 41452 11c84 FC01      		movw r30,r24
 41453 11c86 8081      		ld r24,Z
 41454 11c88 9181      		ldd r25,Z+1
 41455 11c8a 2B81      		ldd r18,Y+3
 41456 11c8c 3C81      		ldd r19,Y+4
 41457 11c8e 820F      		add r24,r18
 41458 11c90 931F      		adc r25,r19
 41459 11c92 9C83      		std Y+4,r25
 41460 11c94 8B83      		std Y+3,r24
3694:lp_solve_5.5/lp_presolve.c ****     value1 = lp->orig_lowbo[index1];
 41461               		.loc 2 3694 0
 41462 11c96 8F81      		ldd r24,Y+7
 41463 11c98 9885      		ldd r25,Y+8
 41464 11c9a 8E54      		subi r24,78
 41465 11c9c 9D4F      		sbci r25,-3
 41466 11c9e FC01      		movw r30,r24
 41467 11ca0 2081      		ld r18,Z
 41468 11ca2 3181      		ldd r19,Z+1
 41469 11ca4 8981      		ldd r24,Y+1
 41470 11ca6 9A81      		ldd r25,Y+2
 41471 11ca8 880F      		lsl r24
 41472 11caa 991F      		rol r25
 41473 11cac 880F      		lsl r24
 41474 11cae 991F      		rol r25
 41475 11cb0 820F      		add r24,r18
 41476 11cb2 931F      		adc r25,r19
 41477 11cb4 FC01      		movw r30,r24
 41478 11cb6 8081      		ld r24,Z
 41479 11cb8 9181      		ldd r25,Z+1
 41480 11cba A281      		ldd r26,Z+2
 41481 11cbc B381      		ldd r27,Z+3
 41482 11cbe 8987      		std Y+9,r24
 41483 11cc0 9A87      		std Y+10,r25
 41484 11cc2 AB87      		std Y+11,r26
 41485 11cc4 BC87      		std Y+12,r27
3695:lp_solve_5.5/lp_presolve.c ****     value2 = lp->orig_lowbo[index2];
 41486               		.loc 2 3695 0
 41487 11cc6 8F81      		ldd r24,Y+7
 41488 11cc8 9885      		ldd r25,Y+8
 41489 11cca 8E54      		subi r24,78
 41490 11ccc 9D4F      		sbci r25,-3
 41491 11cce FC01      		movw r30,r24
 41492 11cd0 2081      		ld r18,Z
 41493 11cd2 3181      		ldd r19,Z+1
 41494 11cd4 8B81      		ldd r24,Y+3
 41495 11cd6 9C81      		ldd r25,Y+4
 41496 11cd8 880F      		lsl r24
 41497 11cda 991F      		rol r25
 41498 11cdc 880F      		lsl r24
 41499 11cde 991F      		rol r25
 41500 11ce0 820F      		add r24,r18
 41501 11ce2 931F      		adc r25,r19
 41502 11ce4 FC01      		movw r30,r24
 41503 11ce6 8081      		ld r24,Z
 41504 11ce8 9181      		ldd r25,Z+1
 41505 11cea A281      		ldd r26,Z+2
 41506 11cec B381      		ldd r27,Z+3
 41507 11cee 8D87      		std Y+13,r24
 41508 11cf0 9E87      		std Y+14,r25
 41509 11cf2 AF87      		std Y+15,r26
 41510 11cf4 B88B      		std Y+16,r27
3696:lp_solve_5.5/lp_presolve.c ****     result = CMP_COMPARE(value1, value2);
 41511               		.loc 2 3696 0
 41512 11cf6 2D85      		ldd r18,Y+13
 41513 11cf8 3E85      		ldd r19,Y+14
 41514 11cfa 4F85      		ldd r20,Y+15
 41515 11cfc 5889      		ldd r21,Y+16
 41516 11cfe 6985      		ldd r22,Y+9
 41517 11d00 7A85      		ldd r23,Y+10
 41518 11d02 8B85      		ldd r24,Y+11
 41519 11d04 9C85      		ldd r25,Y+12
 41520 11d06 0E94 0000 		call __ltsf2
 41521 11d0a 8823      		tst r24
 41522 11d0c 04F4      		brge .L1746
 41523               		.loc 2 3696 0 is_stmt 0 discriminator 1
 41524 11d0e 8FEF      		ldi r24,lo8(-1)
 41525 11d10 9FEF      		ldi r25,lo8(-1)
 41526 11d12 00C0      		rjmp .L1734
 41527               	.L1746:
 41528               		.loc 2 3696 0 discriminator 2
 41529 11d14 11E0      		ldi r17,lo8(1)
 41530 11d16 2D85      		ldd r18,Y+13
 41531 11d18 3E85      		ldd r19,Y+14
 41532 11d1a 4F85      		ldd r20,Y+15
 41533 11d1c 5889      		ldd r21,Y+16
 41534 11d1e 6985      		ldd r22,Y+9
 41535 11d20 7A85      		ldd r23,Y+10
 41536 11d22 8B85      		ldd r24,Y+11
 41537 11d24 9C85      		ldd r25,Y+12
 41538 11d26 0E94 0000 		call __gtsf2
 41539 11d2a 1816      		cp __zero_reg__,r24
 41540 11d2c 04F0      		brlt .L1735
 41541 11d2e 10E0      		ldi r17,0
 41542               	.L1735:
 41543 11d30 812F      		mov r24,r17
 41544 11d32 90E0      		ldi r25,0
 41545               	.L1734:
 41546               		.loc 2 3696 0 discriminator 4
 41547 11d34 9E83      		std Y+6,r25
 41548 11d36 8D83      		std Y+5,r24
 41549               	.L1731:
3697:lp_solve_5.5/lp_presolve.c ****   }
3698:lp_solve_5.5/lp_presolve.c **** 
3699:lp_solve_5.5/lp_presolve.c ****   /* Largest upper variable bound */
3700:lp_solve_5.5/lp_presolve.c ****   if(result == 0) {
 41550               		.loc 2 3700 0 is_stmt 1
 41551 11d38 8D81      		ldd r24,Y+5
 41552 11d3a 9E81      		ldd r25,Y+6
 41553 11d3c 892B      		or r24,r25
 41554 11d3e 01F0      		breq .+2
 41555 11d40 00C0      		rjmp .L1736
3701:lp_solve_5.5/lp_presolve.c ****     value1 = lp->orig_upbo[index1];
 41556               		.loc 2 3701 0
 41557 11d42 8F81      		ldd r24,Y+7
 41558 11d44 9885      		ldd r25,Y+8
 41559 11d46 8255      		subi r24,82
 41560 11d48 9D4F      		sbci r25,-3
 41561 11d4a FC01      		movw r30,r24
 41562 11d4c 2081      		ld r18,Z
 41563 11d4e 3181      		ldd r19,Z+1
 41564 11d50 8981      		ldd r24,Y+1
 41565 11d52 9A81      		ldd r25,Y+2
 41566 11d54 880F      		lsl r24
 41567 11d56 991F      		rol r25
 41568 11d58 880F      		lsl r24
 41569 11d5a 991F      		rol r25
 41570 11d5c 820F      		add r24,r18
 41571 11d5e 931F      		adc r25,r19
 41572 11d60 FC01      		movw r30,r24
 41573 11d62 8081      		ld r24,Z
 41574 11d64 9181      		ldd r25,Z+1
 41575 11d66 A281      		ldd r26,Z+2
 41576 11d68 B381      		ldd r27,Z+3
 41577 11d6a 8987      		std Y+9,r24
 41578 11d6c 9A87      		std Y+10,r25
 41579 11d6e AB87      		std Y+11,r26
 41580 11d70 BC87      		std Y+12,r27
3702:lp_solve_5.5/lp_presolve.c ****     value2 = lp->orig_upbo[index2];
 41581               		.loc 2 3702 0
 41582 11d72 8F81      		ldd r24,Y+7
 41583 11d74 9885      		ldd r25,Y+8
 41584 11d76 8255      		subi r24,82
 41585 11d78 9D4F      		sbci r25,-3
 41586 11d7a FC01      		movw r30,r24
 41587 11d7c 2081      		ld r18,Z
 41588 11d7e 3181      		ldd r19,Z+1
 41589 11d80 8B81      		ldd r24,Y+3
 41590 11d82 9C81      		ldd r25,Y+4
 41591 11d84 880F      		lsl r24
 41592 11d86 991F      		rol r25
 41593 11d88 880F      		lsl r24
 41594 11d8a 991F      		rol r25
 41595 11d8c 820F      		add r24,r18
 41596 11d8e 931F      		adc r25,r19
 41597 11d90 FC01      		movw r30,r24
 41598 11d92 8081      		ld r24,Z
 41599 11d94 9181      		ldd r25,Z+1
 41600 11d96 A281      		ldd r26,Z+2
 41601 11d98 B381      		ldd r27,Z+3
 41602 11d9a 8D87      		std Y+13,r24
 41603 11d9c 9E87      		std Y+14,r25
 41604 11d9e AF87      		std Y+15,r26
 41605 11da0 B88B      		std Y+16,r27
3703:lp_solve_5.5/lp_presolve.c ****     result = -CMP_COMPARE(value1, value2);
 41606               		.loc 2 3703 0
 41607 11da2 2D85      		ldd r18,Y+13
 41608 11da4 3E85      		ldd r19,Y+14
 41609 11da6 4F85      		ldd r20,Y+15
 41610 11da8 5889      		ldd r21,Y+16
 41611 11daa 6985      		ldd r22,Y+9
 41612 11dac 7A85      		ldd r23,Y+10
 41613 11dae 8B85      		ldd r24,Y+11
 41614 11db0 9C85      		ldd r25,Y+12
 41615 11db2 0E94 0000 		call __ltsf2
 41616 11db6 8823      		tst r24
 41617 11db8 04F4      		brge .L1747
 41618               		.loc 2 3703 0 is_stmt 0 discriminator 1
 41619 11dba 81E0      		ldi r24,lo8(1)
 41620 11dbc 90E0      		ldi r25,0
 41621 11dbe 00C0      		rjmp .L1739
 41622               	.L1747:
 41623               		.loc 2 3703 0 discriminator 2
 41624 11dc0 11E0      		ldi r17,lo8(1)
 41625 11dc2 2D85      		ldd r18,Y+13
 41626 11dc4 3E85      		ldd r19,Y+14
 41627 11dc6 4F85      		ldd r20,Y+15
 41628 11dc8 5889      		ldd r21,Y+16
 41629 11dca 6985      		ldd r22,Y+9
 41630 11dcc 7A85      		ldd r23,Y+10
 41631 11dce 8B85      		ldd r24,Y+11
 41632 11dd0 9C85      		ldd r25,Y+12
 41633 11dd2 0E94 0000 		call __gtsf2
 41634 11dd6 1816      		cp __zero_reg__,r24
 41635 11dd8 04F0      		brlt .L1740
 41636 11dda 10E0      		ldi r17,0
 41637               	.L1740:
 41638 11ddc 812F      		mov r24,r17
 41639 11dde 90E0      		ldi r25,0
 41640 11de0 9195      		neg r25
 41641 11de2 8195      		neg r24
 41642 11de4 9109      		sbc r25,__zero_reg__
 41643               	.L1739:
 41644               		.loc 2 3703 0 discriminator 4
 41645 11de6 9E83      		std Y+6,r25
 41646 11de8 8D83      		std Y+5,r24
 41647               	.L1736:
3704:lp_solve_5.5/lp_presolve.c ****   }
3705:lp_solve_5.5/lp_presolve.c ****   return( result );
 41648               		.loc 2 3705 0 is_stmt 1
 41649 11dea 8D81      		ldd r24,Y+5
 41650 11dec 9E81      		ldd r25,Y+6
 41651               	/* epilogue start */
3706:lp_solve_5.5/lp_presolve.c **** }
 41652               		.loc 2 3706 0
 41653 11dee 6496      		adiw r28,20
 41654 11df0 0FB6      		in __tmp_reg__,__SREG__
 41655 11df2 F894      		cli
 41656 11df4 DEBF      		out __SP_H__,r29
 41657 11df6 0FBE      		out __SREG__,__tmp_reg__
 41658 11df8 CDBF      		out __SP_L__,r28
 41659 11dfa DF91      		pop r29
 41660 11dfc CF91      		pop r28
 41661 11dfe 1F91      		pop r17
 41662 11e00 0895      		ret
 41663               		.cfi_endproc
 41664               	.LFE82:
 41666               		.section	.rodata
 41667               	.LC54:
 41668 08cd 7072 6573 		.string	"presolve_rowdominate: Column %s is infeasible due to conflict in rows %s and %s\n"
 41668      6F6C 7665 
 41668      5F72 6F77 
 41668      646F 6D69 
 41668      6E61 7465 
 41669               		.text
 41670               	.global	presolve_rowdominance
 41672               	presolve_rowdominance:
 41673               	.LFB83:
3707:lp_solve_5.5/lp_presolve.c **** 
3708:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_rowdominance(presolverec *psdata, int *nCoeffChanged, int *nRowsRemoved, int *n
3709:lp_solve_5.5/lp_presolve.c **** {
 41674               		.loc 2 3709 0
 41675               		.cfi_startproc
 41676 11e02 CF92      		push r12
 41677               	.LCFI499:
 41678               		.cfi_def_cfa_offset 3
 41679               		.cfi_offset 12, -2
 41680 11e04 DF92      		push r13
 41681               	.LCFI500:
 41682               		.cfi_def_cfa_offset 4
 41683               		.cfi_offset 13, -3
 41684 11e06 EF92      		push r14
 41685               	.LCFI501:
 41686               		.cfi_def_cfa_offset 5
 41687               		.cfi_offset 14, -4
 41688 11e08 FF92      		push r15
 41689               	.LCFI502:
 41690               		.cfi_def_cfa_offset 6
 41691               		.cfi_offset 15, -5
 41692 11e0a 0F93      		push r16
 41693               	.LCFI503:
 41694               		.cfi_def_cfa_offset 7
 41695               		.cfi_offset 16, -6
 41696 11e0c 1F93      		push r17
 41697               	.LCFI504:
 41698               		.cfi_def_cfa_offset 8
 41699               		.cfi_offset 17, -7
 41700 11e0e CF93      		push r28
 41701               	.LCFI505:
 41702               		.cfi_def_cfa_offset 9
 41703               		.cfi_offset 28, -8
 41704 11e10 DF93      		push r29
 41705               	.LCFI506:
 41706               		.cfi_def_cfa_offset 10
 41707               		.cfi_offset 29, -9
 41708 11e12 CDB7      		in r28,__SP_L__
 41709 11e14 DEB7      		in r29,__SP_H__
 41710               	.LCFI507:
 41711               		.cfi_def_cfa_register 28
 41712 11e16 E697      		sbiw r28,54
 41713               	.LCFI508:
 41714               		.cfi_def_cfa_offset 64
 41715 11e18 0FB6      		in __tmp_reg__,__SREG__
 41716 11e1a F894      		cli
 41717 11e1c DEBF      		out __SP_H__,r29
 41718 11e1e 0FBE      		out __SREG__,__tmp_reg__
 41719 11e20 CDBF      		out __SP_L__,r28
 41720               	/* prologue: function */
 41721               	/* frame size = 54 */
 41722               	/* stack size = 62 */
 41723               	.L__stack_usage = 62
 41724 11e22 9EA7      		std Y+46,r25
 41725 11e24 8DA7      		std Y+45,r24
 41726 11e26 78AB      		std Y+48,r23
 41727 11e28 6FA7      		std Y+47,r22
 41728 11e2a 5AAB      		std Y+50,r21
 41729 11e2c 49AB      		std Y+49,r20
 41730 11e2e 3CAB      		std Y+52,r19
 41731 11e30 2BAB      		std Y+51,r18
 41732 11e32 1EAB      		std Y+54,r17
 41733 11e34 0DAB      		std Y+53,r16
3710:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 41734               		.loc 2 3710 0
 41735 11e36 8DA5      		ldd r24,Y+45
 41736 11e38 9EA5      		ldd r25,Y+46
 41737 11e3a FC01      		movw r30,r24
 41738 11e3c 8289      		ldd r24,Z+18
 41739 11e3e 9389      		ldd r25,Z+19
 41740 11e40 9E8B      		std Y+22,r25
 41741 11e42 8D8B      		std Y+21,r24
3711:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 41742               		.loc 2 3711 0
 41743 11e44 8D89      		ldd r24,Y+21
 41744 11e46 9E89      		ldd r25,Y+22
 41745 11e48 8A54      		subi r24,74
 41746 11e4a 9D4F      		sbci r25,-3
 41747 11e4c FC01      		movw r30,r24
 41748 11e4e 8081      		ld r24,Z
 41749 11e50 9181      		ldd r25,Z+1
 41750 11e52 988F      		std Y+24,r25
 41751 11e54 8F8B      		std Y+23,r24
3712:lp_solve_5.5/lp_presolve.c ****   int      i, ii, ib, ie, n, jb, je, jx, *coldel = NULL, status = RUNNING, item,
 41752               		.loc 2 3712 0
 41753 11e56 1EA2      		std Y+38,__zero_reg__
 41754 11e58 1DA2      		std Y+37,__zero_reg__
 41755 11e5a 88E0      		ldi r24,lo8(8)
 41756 11e5c 90E0      		ldi r25,0
 41757 11e5e 9C87      		std Y+12,r25
 41758 11e60 8B87      		std Y+11,r24
3713:lp_solve_5.5/lp_presolve.c ****            iCoeffChanged = 0, iRowRemoved = 0, iVarFixed = 0;
 41759               		.loc 2 3713 0
 41760 11e62 1A8E      		std Y+26,__zero_reg__
 41761 11e64 198E      		std Y+25,__zero_reg__
 41762 11e66 1E86      		std Y+14,__zero_reg__
 41763 11e68 1D86      		std Y+13,__zero_reg__
 41764 11e6a 1AA6      		std Y+42,__zero_reg__
 41765 11e6c 19A6      		std Y+41,__zero_reg__
3714:lp_solve_5.5/lp_presolve.c ****   REAL     ratio, *rowvalues = NULL;
 41766               		.loc 2 3714 0
 41767 11e6e 1CA6      		std Y+44,__zero_reg__
 41768 11e70 1BA6      		std Y+43,__zero_reg__
3715:lp_solve_5.5/lp_presolve.c ****   UNIONTYPE QSORTrec *QS = (UNIONTYPE QSORTrec *) calloc(lp->rows+1, sizeof(*QS));
 41769               		.loc 2 3715 0
 41770 11e72 8D89      		ldd r24,Y+21
 41771 11e74 9E89      		ldd r25,Y+22
 41772 11e76 8651      		subi r24,22
 41773 11e78 9E4F      		sbci r25,-2
 41774 11e7a FC01      		movw r30,r24
 41775 11e7c 8081      		ld r24,Z
 41776 11e7e 9181      		ldd r25,Z+1
 41777 11e80 0196      		adiw r24,1
 41778 11e82 68E0      		ldi r22,lo8(8)
 41779 11e84 70E0      		ldi r23,0
 41780 11e86 0E94 0000 		call calloc
 41781 11e8a 9C8F      		std Y+28,r25
 41782 11e8c 8B8F      		std Y+27,r24
3716:lp_solve_5.5/lp_presolve.c **** 
3717:lp_solve_5.5/lp_presolve.c ****   /* Check if we were able to obtain working memory */
3718:lp_solve_5.5/lp_presolve.c ****   if(QS == NULL)
 41783               		.loc 2 3718 0
 41784 11e8e 8B8D      		ldd r24,Y+27
 41785 11e90 9C8D      		ldd r25,Y+28
 41786 11e92 892B      		or r24,r25
 41787 11e94 01F4      		brne .L1749
3719:lp_solve_5.5/lp_presolve.c ****     return( status);
 41788               		.loc 2 3719 0
 41789 11e96 8B85      		ldd r24,Y+11
 41790 11e98 9C85      		ldd r25,Y+12
 41791 11e9a 00C0      		rjmp .L1812
 41792               	.L1749:
3720:lp_solve_5.5/lp_presolve.c **** 
3721:lp_solve_5.5/lp_presolve.c ****   /* A dominating row of variables always satisfy the following criteria:
3722:lp_solve_5.5/lp_presolve.c ****       1) The starting column position is never lower, but could be the same
3723:lp_solve_5.5/lp_presolve.c ****       2) The non-zero row count is always lower */
3724:lp_solve_5.5/lp_presolve.c ****   n = 0;
 41793               		.loc 2 3724 0
 41794 11e9c 1886      		std Y+8,__zero_reg__
 41795 11e9e 1F82      		std Y+7,__zero_reg__
3725:lp_solve_5.5/lp_presolve.c ****   for(i = firstActiveLink(psdata->EQmap); i != 0; i = nextActiveLink(psdata->EQmap, i)) {
 41796               		.loc 2 3725 0
 41797 11ea0 8DA5      		ldd r24,Y+45
 41798 11ea2 9EA5      		ldd r25,Y+46
 41799 11ea4 FC01      		movw r30,r24
 41800 11ea6 8481      		ldd r24,Z+4
 41801 11ea8 9581      		ldd r25,Z+5
 41802 11eaa 0E94 0000 		call firstActiveLink
 41803 11eae 9A83      		std Y+2,r25
 41804 11eb0 8983      		std Y+1,r24
 41805 11eb2 00C0      		rjmp .L1751
 41806               	.L1757:
3726:lp_solve_5.5/lp_presolve.c ****     /* Make sure we have no SOS or semi-continuous variables */
3727:lp_solve_5.5/lp_presolve.c ****     jb = je = 0;
 41807               		.loc 2 3727 0
 41808 11eb4 1E8E      		std Y+30,__zero_reg__
 41809 11eb6 1D8E      		std Y+29,__zero_reg__
 41810 11eb8 8D8D      		ldd r24,Y+29
 41811 11eba 9E8D      		ldd r25,Y+30
 41812 11ebc 9A87      		std Y+10,r25
 41813 11ebe 8987      		std Y+9,r24
3728:lp_solve_5.5/lp_presolve.c ****     if((SOS_count(lp) > 0) || (lp->sc_vars > 0)) {
 41814               		.loc 2 3728 0
 41815 11ec0 8D89      		ldd r24,Y+21
 41816 11ec2 9E89      		ldd r25,Y+22
 41817 11ec4 0E94 0000 		call SOS_count
 41818 11ec8 1816      		cp __zero_reg__,r24
 41819 11eca 1906      		cpc __zero_reg__,r25
 41820 11ecc 04F0      		brlt .L1752
 41821               		.loc 2 3728 0 is_stmt 0 discriminator 1
 41822 11ece 8D89      		ldd r24,Y+21
 41823 11ed0 9E89      		ldd r25,Y+22
 41824 11ed2 8057      		subi r24,112
 41825 11ed4 9D4F      		sbci r25,-3
 41826 11ed6 FC01      		movw r30,r24
 41827 11ed8 8081      		ld r24,Z
 41828 11eda 9181      		ldd r25,Z+1
 41829 11edc 1816      		cp __zero_reg__,r24
 41830 11ede 1906      		cpc __zero_reg__,r25
 41831 11ee0 04F0      		brlt .+2
 41832 11ee2 00C0      		rjmp .L1753
 41833               	.L1752:
3729:lp_solve_5.5/lp_presolve.c ****       item = 0;
 41834               		.loc 2 3729 0 is_stmt 1
 41835 11ee4 18A6      		std Y+40,__zero_reg__
 41836 11ee6 1FA2      		std Y+39,__zero_reg__
3730:lp_solve_5.5/lp_presolve.c ****       for(jb = presolve_nextcol(psdata, i, &item); jb >= 0;
 41837               		.loc 2 3730 0
 41838 11ee8 AE01      		movw r20,r28
 41839 11eea 495D      		subi r20,-39
 41840 11eec 5F4F      		sbci r21,-1
 41841 11eee 2981      		ldd r18,Y+1
 41842 11ef0 3A81      		ldd r19,Y+2
 41843 11ef2 8DA5      		ldd r24,Y+45
 41844 11ef4 9EA5      		ldd r25,Y+46
 41845 11ef6 B901      		movw r22,r18
 41846 11ef8 0E94 0000 		call presolve_nextcol
 41847 11efc 9A87      		std Y+10,r25
 41848 11efe 8987      		std Y+9,r24
 41849 11f00 00C0      		rjmp .L1754
 41850               	.L1755:
3731:lp_solve_5.5/lp_presolve.c ****           jb = presolve_nextcol(psdata, i, &item)) {
3732:lp_solve_5.5/lp_presolve.c ****         jx = ROW_MAT_COLNR(jb);
 41851               		.loc 2 3732 0
 41852 11f02 8F89      		ldd r24,Y+23
 41853 11f04 988D      		ldd r25,Y+24
 41854 11f06 FC01      		movw r30,r24
 41855 11f08 2485      		ldd r18,Z+12
 41856 11f0a 3585      		ldd r19,Z+13
 41857 11f0c 8F89      		ldd r24,Y+23
 41858 11f0e 988D      		ldd r25,Y+24
 41859 11f10 FC01      		movw r30,r24
 41860 11f12 4689      		ldd r20,Z+22
 41861 11f14 5789      		ldd r21,Z+23
 41862 11f16 8985      		ldd r24,Y+9
 41863 11f18 9A85      		ldd r25,Y+10
 41864 11f1a 880F      		lsl r24
 41865 11f1c 991F      		rol r25
 41866 11f1e 840F      		add r24,r20
 41867 11f20 951F      		adc r25,r21
 41868 11f22 FC01      		movw r30,r24
 41869 11f24 8081      		ld r24,Z
 41870 11f26 9181      		ldd r25,Z+1
 41871 11f28 880F      		lsl r24
 41872 11f2a 991F      		rol r25
 41873 11f2c 820F      		add r24,r18
 41874 11f2e 931F      		adc r25,r19
 41875 11f30 FC01      		movw r30,r24
 41876 11f32 8081      		ld r24,Z
 41877 11f34 9181      		ldd r25,Z+1
 41878 11f36 98A3      		std Y+32,r25
 41879 11f38 8F8F      		std Y+31,r24
3733:lp_solve_5.5/lp_presolve.c ****         if(SOS_is_member(lp->SOS, 0, jx) || is_semicont(lp, jx))
 41880               		.loc 2 3733 0
 41881 11f3a 8D89      		ldd r24,Y+21
 41882 11f3c 9E89      		ldd r25,Y+22
 41883 11f3e 8256      		subi r24,98
 41884 11f40 9D4F      		sbci r25,-3
 41885 11f42 FC01      		movw r30,r24
 41886 11f44 8081      		ld r24,Z
 41887 11f46 9181      		ldd r25,Z+1
 41888 11f48 2F8D      		ldd r18,Y+31
 41889 11f4a 38A1      		ldd r19,Y+32
 41890 11f4c A901      		movw r20,r18
 41891 11f4e 60E0      		ldi r22,0
 41892 11f50 70E0      		ldi r23,0
 41893 11f52 0E94 0000 		call SOS_is_member
 41894 11f56 892B      		or r24,r25
 41895 11f58 01F4      		brne .L1753
 41896               		.loc 2 3733 0 is_stmt 0 discriminator 1
 41897 11f5a 2F8D      		ldd r18,Y+31
 41898 11f5c 38A1      		ldd r19,Y+32
 41899 11f5e 8D89      		ldd r24,Y+21
 41900 11f60 9E89      		ldd r25,Y+22
 41901 11f62 B901      		movw r22,r18
 41902 11f64 0E94 0000 		call is_semicont
 41903 11f68 8823      		tst r24
 41904 11f6a 01F4      		brne .L1753
3731:lp_solve_5.5/lp_presolve.c ****           jb = presolve_nextcol(psdata, i, &item)) {
 41905               		.loc 2 3731 0 is_stmt 1
 41906 11f6c AE01      		movw r20,r28
 41907 11f6e 495D      		subi r20,-39
 41908 11f70 5F4F      		sbci r21,-1
 41909 11f72 2981      		ldd r18,Y+1
 41910 11f74 3A81      		ldd r19,Y+2
 41911 11f76 8DA5      		ldd r24,Y+45
 41912 11f78 9EA5      		ldd r25,Y+46
 41913 11f7a B901      		movw r22,r18
 41914 11f7c 0E94 0000 		call presolve_nextcol
 41915 11f80 9A87      		std Y+10,r25
 41916 11f82 8987      		std Y+9,r24
 41917               	.L1754:
3730:lp_solve_5.5/lp_presolve.c ****       for(jb = presolve_nextcol(psdata, i, &item); jb >= 0;
 41918               		.loc 2 3730 0 discriminator 1
 41919 11f84 8985      		ldd r24,Y+9
 41920 11f86 9A85      		ldd r25,Y+10
 41921 11f88 9923      		tst r25
 41922 11f8a 04F0      		brlt .+2
 41923 11f8c 00C0      		rjmp .L1755
 41924               	.L1753:
3734:lp_solve_5.5/lp_presolve.c ****           break;
3735:lp_solve_5.5/lp_presolve.c ****       }
3736:lp_solve_5.5/lp_presolve.c ****     }
3737:lp_solve_5.5/lp_presolve.c **** 
3738:lp_solve_5.5/lp_presolve.c ****     /* Add to list if we are Ok */
3739:lp_solve_5.5/lp_presolve.c ****     if(jb < 0) {
 41925               		.loc 2 3739 0
 41926 11f8e 8985      		ldd r24,Y+9
 41927 11f90 9A85      		ldd r25,Y+10
 41928 11f92 9923      		tst r25
 41929 11f94 04F0      		brlt .+2
 41930 11f96 00C0      		rjmp .L1756
3740:lp_solve_5.5/lp_presolve.c ****       QS[n].int4.intval = i;
 41931               		.loc 2 3740 0
 41932 11f98 8F81      		ldd r24,Y+7
 41933 11f9a 9885      		ldd r25,Y+8
 41934 11f9c 880F      		lsl r24
 41935 11f9e 991F      		rol r25
 41936 11fa0 880F      		lsl r24
 41937 11fa2 991F      		rol r25
 41938 11fa4 880F      		lsl r24
 41939 11fa6 991F      		rol r25
 41940 11fa8 2B8D      		ldd r18,Y+27
 41941 11faa 3C8D      		ldd r19,Y+28
 41942 11fac 820F      		add r24,r18
 41943 11fae 931F      		adc r25,r19
 41944 11fb0 2981      		ldd r18,Y+1
 41945 11fb2 3A81      		ldd r19,Y+2
 41946 11fb4 FC01      		movw r30,r24
 41947 11fb6 3183      		std Z+1,r19
 41948 11fb8 2083      		st Z,r18
3741:lp_solve_5.5/lp_presolve.c ****       item = 0;
 41949               		.loc 2 3741 0
 41950 11fba 18A6      		std Y+40,__zero_reg__
 41951 11fbc 1FA2      		std Y+39,__zero_reg__
3742:lp_solve_5.5/lp_presolve.c ****       ii = presolve_nextcol(psdata, i, &item);
 41952               		.loc 2 3742 0
 41953 11fbe AE01      		movw r20,r28
 41954 11fc0 495D      		subi r20,-39
 41955 11fc2 5F4F      		sbci r21,-1
 41956 11fc4 2981      		ldd r18,Y+1
 41957 11fc6 3A81      		ldd r19,Y+2
 41958 11fc8 8DA5      		ldd r24,Y+45
 41959 11fca 9EA5      		ldd r25,Y+46
 41960 11fcc B901      		movw r22,r18
 41961 11fce 0E94 0000 		call presolve_nextcol
 41962 11fd2 9AA3      		std Y+34,r25
 41963 11fd4 89A3      		std Y+33,r24
3743:lp_solve_5.5/lp_presolve.c ****       QS[n].int4.intpar1 = ROW_MAT_COLNR(ii);
 41964               		.loc 2 3743 0
 41965 11fd6 8F81      		ldd r24,Y+7
 41966 11fd8 9885      		ldd r25,Y+8
 41967 11fda 880F      		lsl r24
 41968 11fdc 991F      		rol r25
 41969 11fde 880F      		lsl r24
 41970 11fe0 991F      		rol r25
 41971 11fe2 880F      		lsl r24
 41972 11fe4 991F      		rol r25
 41973 11fe6 2B8D      		ldd r18,Y+27
 41974 11fe8 3C8D      		ldd r19,Y+28
 41975 11fea 820F      		add r24,r18
 41976 11fec 931F      		adc r25,r19
 41977 11fee 2F89      		ldd r18,Y+23
 41978 11ff0 388D      		ldd r19,Y+24
 41979 11ff2 F901      		movw r30,r18
 41980 11ff4 4485      		ldd r20,Z+12
 41981 11ff6 5585      		ldd r21,Z+13
 41982 11ff8 2F89      		ldd r18,Y+23
 41983 11ffa 388D      		ldd r19,Y+24
 41984 11ffc F901      		movw r30,r18
 41985 11ffe 6689      		ldd r22,Z+22
 41986 12000 7789      		ldd r23,Z+23
 41987 12002 29A1      		ldd r18,Y+33
 41988 12004 3AA1      		ldd r19,Y+34
 41989 12006 220F      		lsl r18
 41990 12008 331F      		rol r19
 41991 1200a 260F      		add r18,r22
 41992 1200c 371F      		adc r19,r23
 41993 1200e F901      		movw r30,r18
 41994 12010 2081      		ld r18,Z
 41995 12012 3181      		ldd r19,Z+1
 41996 12014 220F      		lsl r18
 41997 12016 331F      		rol r19
 41998 12018 240F      		add r18,r20
 41999 1201a 351F      		adc r19,r21
 42000 1201c F901      		movw r30,r18
 42001 1201e 2081      		ld r18,Z
 42002 12020 3181      		ldd r19,Z+1
 42003 12022 FC01      		movw r30,r24
 42004 12024 3383      		std Z+3,r19
 42005 12026 2283      		std Z+2,r18
3744:lp_solve_5.5/lp_presolve.c ****       QS[n].int4.intpar2 = presolve_rowlength(psdata, i);
 42006               		.loc 2 3744 0
 42007 12028 8F81      		ldd r24,Y+7
 42008 1202a 9885      		ldd r25,Y+8
 42009 1202c 880F      		lsl r24
 42010 1202e 991F      		rol r25
 42011 12030 880F      		lsl r24
 42012 12032 991F      		rol r25
 42013 12034 880F      		lsl r24
 42014 12036 991F      		rol r25
 42015 12038 2B8D      		ldd r18,Y+27
 42016 1203a 3C8D      		ldd r19,Y+28
 42017 1203c 8901      		movw r16,r18
 42018 1203e 080F      		add r16,r24
 42019 12040 191F      		adc r17,r25
 42020 12042 2981      		ldd r18,Y+1
 42021 12044 3A81      		ldd r19,Y+2
 42022 12046 8DA5      		ldd r24,Y+45
 42023 12048 9EA5      		ldd r25,Y+46
 42024 1204a B901      		movw r22,r18
 42025 1204c 0E94 0000 		call presolve_rowlength
 42026 12050 F801      		movw r30,r16
 42027 12052 9583      		std Z+5,r25
 42028 12054 8483      		std Z+4,r24
3745:lp_solve_5.5/lp_presolve.c ****       n++;
 42029               		.loc 2 3745 0
 42030 12056 8F81      		ldd r24,Y+7
 42031 12058 9885      		ldd r25,Y+8
 42032 1205a 0196      		adiw r24,1
 42033 1205c 9887      		std Y+8,r25
 42034 1205e 8F83      		std Y+7,r24
 42035               	.L1756:
3725:lp_solve_5.5/lp_presolve.c ****     /* Make sure we have no SOS or semi-continuous variables */
 42036               		.loc 2 3725 0 discriminator 2
 42037 12060 8DA5      		ldd r24,Y+45
 42038 12062 9EA5      		ldd r25,Y+46
 42039 12064 FC01      		movw r30,r24
 42040 12066 8481      		ldd r24,Z+4
 42041 12068 9581      		ldd r25,Z+5
 42042 1206a 2981      		ldd r18,Y+1
 42043 1206c 3A81      		ldd r19,Y+2
 42044 1206e B901      		movw r22,r18
 42045 12070 0E94 0000 		call nextActiveLink
 42046 12074 9A83      		std Y+2,r25
 42047 12076 8983      		std Y+1,r24
 42048               	.L1751:
3725:lp_solve_5.5/lp_presolve.c ****     /* Make sure we have no SOS or semi-continuous variables */
 42049               		.loc 2 3725 0 is_stmt 0 discriminator 1
 42050 12078 8981      		ldd r24,Y+1
 42051 1207a 9A81      		ldd r25,Y+2
 42052 1207c 892B      		or r24,r25
 42053 1207e 01F0      		breq .+2
 42054 12080 00C0      		rjmp .L1757
3746:lp_solve_5.5/lp_presolve.c ****     }
3747:lp_solve_5.5/lp_presolve.c ****   }
3748:lp_solve_5.5/lp_presolve.c ****   if(n <= 1)
 42055               		.loc 2 3748 0 is_stmt 1
 42056 12082 8F81      		ldd r24,Y+7
 42057 12084 9885      		ldd r25,Y+8
 42058 12086 0297      		sbiw r24,2
 42059 12088 04F4      		brge .+2
 42060 1208a 00C0      		rjmp .L1824
3749:lp_solve_5.5/lp_presolve.c ****     goto Finish;
3750:lp_solve_5.5/lp_presolve.c ****   QS_execute(QS, n, (findCompare_func *) compRedundant, NULL);
 42061               		.loc 2 3750 0
 42062 1208c 6F81      		ldd r22,Y+7
 42063 1208e 7885      		ldd r23,Y+8
 42064 12090 8B8D      		ldd r24,Y+27
 42065 12092 9C8D      		ldd r25,Y+28
 42066 12094 20E0      		ldi r18,0
 42067 12096 30E0      		ldi r19,0
 42068 12098 40E0      		ldi r20,lo8(gs(compRedundant))
 42069 1209a 50E0      		ldi r21,hi8(gs(compRedundant))
 42070 1209c 0E94 0000 		call QS_execute
3751:lp_solve_5.5/lp_presolve.c **** 
3752:lp_solve_5.5/lp_presolve.c ****   /* Let us start from the top of the list, going forward and looking
3753:lp_solve_5.5/lp_presolve.c ****     for the longest possible dominating row */
3754:lp_solve_5.5/lp_presolve.c ****   if(!allocREAL(lp, &rowvalues, lp->columns + 1, TRUE) ||
 42071               		.loc 2 3754 0
 42072 120a0 8D89      		ldd r24,Y+21
 42073 120a2 9E89      		ldd r25,Y+22
 42074 120a4 8451      		subi r24,20
 42075 120a6 9E4F      		sbci r25,-2
 42076 120a8 FC01      		movw r30,r24
 42077 120aa 8081      		ld r24,Z
 42078 120ac 9181      		ldd r25,Z+1
 42079 120ae AC01      		movw r20,r24
 42080 120b0 4F5F      		subi r20,-1
 42081 120b2 5F4F      		sbci r21,-1
 42082 120b4 BE01      		movw r22,r28
 42083 120b6 655D      		subi r22,-43
 42084 120b8 7F4F      		sbci r23,-1
 42085 120ba 8D89      		ldd r24,Y+21
 42086 120bc 9E89      		ldd r25,Y+22
 42087 120be 21E0      		ldi r18,lo8(1)
 42088 120c0 0E94 0000 		call allocREAL
 42089 120c4 8823      		tst r24
 42090 120c6 01F4      		brne .+2
 42091 120c8 00C0      		rjmp .L1759
3755:lp_solve_5.5/lp_presolve.c ****      !allocINT(lp, &coldel, lp->columns + 1, FALSE))
 42092               		.loc 2 3755 0 discriminator 1
 42093 120ca 8D89      		ldd r24,Y+21
 42094 120cc 9E89      		ldd r25,Y+22
 42095 120ce 8451      		subi r24,20
 42096 120d0 9E4F      		sbci r25,-2
 42097 120d2 FC01      		movw r30,r24
 42098 120d4 8081      		ld r24,Z
 42099 120d6 9181      		ldd r25,Z+1
 42100 120d8 AC01      		movw r20,r24
 42101 120da 4F5F      		subi r20,-1
 42102 120dc 5F4F      		sbci r21,-1
 42103 120de BE01      		movw r22,r28
 42104 120e0 6B5D      		subi r22,-37
 42105 120e2 7F4F      		sbci r23,-1
 42106 120e4 8D89      		ldd r24,Y+21
 42107 120e6 9E89      		ldd r25,Y+22
 42108 120e8 20E0      		ldi r18,0
 42109 120ea 0E94 0000 		call allocINT
3754:lp_solve_5.5/lp_presolve.c ****      !allocINT(lp, &coldel, lp->columns + 1, FALSE))
 42110               		.loc 2 3754 0 discriminator 1
 42111 120ee 8823      		tst r24
 42112 120f0 01F4      		brne .+2
 42113 120f2 00C0      		rjmp .L1759
3756:lp_solve_5.5/lp_presolve.c ****     goto Finish;
3757:lp_solve_5.5/lp_presolve.c **** 
3758:lp_solve_5.5/lp_presolve.c ****   for(ib = 0; ib < n; ib++) {
 42114               		.loc 2 3758 0
 42115 120f4 1C82      		std Y+4,__zero_reg__
 42116 120f6 1B82      		std Y+3,__zero_reg__
 42117 120f8 00C0      		rjmp .L1760
 42118               	.L1808:
3759:lp_solve_5.5/lp_presolve.c **** 
3760:lp_solve_5.5/lp_presolve.c ****     /* Get row and check if it was previously eliminated */
3761:lp_solve_5.5/lp_presolve.c ****     i = QS[ib].int4.intval;
 42119               		.loc 2 3761 0
 42120 120fa 8B81      		ldd r24,Y+3
 42121 120fc 9C81      		ldd r25,Y+4
 42122 120fe 880F      		lsl r24
 42123 12100 991F      		rol r25
 42124 12102 880F      		lsl r24
 42125 12104 991F      		rol r25
 42126 12106 880F      		lsl r24
 42127 12108 991F      		rol r25
 42128 1210a 2B8D      		ldd r18,Y+27
 42129 1210c 3C8D      		ldd r19,Y+28
 42130 1210e 820F      		add r24,r18
 42131 12110 931F      		adc r25,r19
 42132 12112 FC01      		movw r30,r24
 42133 12114 8081      		ld r24,Z
 42134 12116 9181      		ldd r25,Z+1
 42135 12118 9A83      		std Y+2,r25
 42136 1211a 8983      		std Y+1,r24
3762:lp_solve_5.5/lp_presolve.c ****     if(i < 0)
 42137               		.loc 2 3762 0
 42138 1211c 8981      		ldd r24,Y+1
 42139 1211e 9A81      		ldd r25,Y+2
 42140 12120 9923      		tst r25
 42141 12122 04F4      		brge .+2
 42142 12124 00C0      		rjmp .L1825
3763:lp_solve_5.5/lp_presolve.c ****       continue;
3764:lp_solve_5.5/lp_presolve.c **** 
3765:lp_solve_5.5/lp_presolve.c ****     /* Load the non-zero row values */
3766:lp_solve_5.5/lp_presolve.c ****     item = 0;
 42143               		.loc 2 3766 0
 42144 12126 18A6      		std Y+40,__zero_reg__
 42145 12128 1FA2      		std Y+39,__zero_reg__
3767:lp_solve_5.5/lp_presolve.c ****     for(jb = presolve_nextcol(psdata, i, &item); jb >= 0;
 42146               		.loc 2 3767 0
 42147 1212a AE01      		movw r20,r28
 42148 1212c 495D      		subi r20,-39
 42149 1212e 5F4F      		sbci r21,-1
 42150 12130 2981      		ldd r18,Y+1
 42151 12132 3A81      		ldd r19,Y+2
 42152 12134 8DA5      		ldd r24,Y+45
 42153 12136 9EA5      		ldd r25,Y+46
 42154 12138 B901      		movw r22,r18
 42155 1213a 0E94 0000 		call presolve_nextcol
 42156 1213e 9A87      		std Y+10,r25
 42157 12140 8987      		std Y+9,r24
 42158 12142 00C0      		rjmp .L1763
 42159               	.L1764:
3768:lp_solve_5.5/lp_presolve.c ****         jb = presolve_nextcol(psdata, i, &item)) {
3769:lp_solve_5.5/lp_presolve.c ****       jx = ROW_MAT_COLNR(jb);
 42160               		.loc 2 3769 0
 42161 12144 8F89      		ldd r24,Y+23
 42162 12146 988D      		ldd r25,Y+24
 42163 12148 FC01      		movw r30,r24
 42164 1214a 2485      		ldd r18,Z+12
 42165 1214c 3585      		ldd r19,Z+13
 42166 1214e 8F89      		ldd r24,Y+23
 42167 12150 988D      		ldd r25,Y+24
 42168 12152 FC01      		movw r30,r24
 42169 12154 4689      		ldd r20,Z+22
 42170 12156 5789      		ldd r21,Z+23
 42171 12158 8985      		ldd r24,Y+9
 42172 1215a 9A85      		ldd r25,Y+10
 42173 1215c 880F      		lsl r24
 42174 1215e 991F      		rol r25
 42175 12160 840F      		add r24,r20
 42176 12162 951F      		adc r25,r21
 42177 12164 FC01      		movw r30,r24
 42178 12166 8081      		ld r24,Z
 42179 12168 9181      		ldd r25,Z+1
 42180 1216a 880F      		lsl r24
 42181 1216c 991F      		rol r25
 42182 1216e 820F      		add r24,r18
 42183 12170 931F      		adc r25,r19
 42184 12172 FC01      		movw r30,r24
 42185 12174 8081      		ld r24,Z
 42186 12176 9181      		ldd r25,Z+1
 42187 12178 98A3      		std Y+32,r25
 42188 1217a 8F8F      		std Y+31,r24
3770:lp_solve_5.5/lp_presolve.c ****       rowvalues[jx] = ROW_MAT_VALUE(jb);
 42189               		.loc 2 3770 0
 42190 1217c 2BA5      		ldd r18,Y+43
 42191 1217e 3CA5      		ldd r19,Y+44
 42192 12180 8F8D      		ldd r24,Y+31
 42193 12182 98A1      		ldd r25,Y+32
 42194 12184 880F      		lsl r24
 42195 12186 991F      		rol r25
 42196 12188 880F      		lsl r24
 42197 1218a 991F      		rol r25
 42198 1218c 280F      		add r18,r24
 42199 1218e 391F      		adc r19,r25
 42200 12190 8F89      		ldd r24,Y+23
 42201 12192 988D      		ldd r25,Y+24
 42202 12194 FC01      		movw r30,r24
 42203 12196 4089      		ldd r20,Z+16
 42204 12198 5189      		ldd r21,Z+17
 42205 1219a 8F89      		ldd r24,Y+23
 42206 1219c 988D      		ldd r25,Y+24
 42207 1219e FC01      		movw r30,r24
 42208 121a0 6689      		ldd r22,Z+22
 42209 121a2 7789      		ldd r23,Z+23
 42210 121a4 8985      		ldd r24,Y+9
 42211 121a6 9A85      		ldd r25,Y+10
 42212 121a8 880F      		lsl r24
 42213 121aa 991F      		rol r25
 42214 121ac 860F      		add r24,r22
 42215 121ae 971F      		adc r25,r23
 42216 121b0 FC01      		movw r30,r24
 42217 121b2 8081      		ld r24,Z
 42218 121b4 9181      		ldd r25,Z+1
 42219 121b6 880F      		lsl r24
 42220 121b8 991F      		rol r25
 42221 121ba 880F      		lsl r24
 42222 121bc 991F      		rol r25
 42223 121be 840F      		add r24,r20
 42224 121c0 951F      		adc r25,r21
 42225 121c2 FC01      		movw r30,r24
 42226 121c4 8081      		ld r24,Z
 42227 121c6 9181      		ldd r25,Z+1
 42228 121c8 A281      		ldd r26,Z+2
 42229 121ca B381      		ldd r27,Z+3
 42230 121cc F901      		movw r30,r18
 42231 121ce 8083      		st Z,r24
 42232 121d0 9183      		std Z+1,r25
 42233 121d2 A283      		std Z+2,r26
 42234 121d4 B383      		std Z+3,r27
3768:lp_solve_5.5/lp_presolve.c ****         jb = presolve_nextcol(psdata, i, &item)) {
 42235               		.loc 2 3768 0
 42236 121d6 AE01      		movw r20,r28
 42237 121d8 495D      		subi r20,-39
 42238 121da 5F4F      		sbci r21,-1
 42239 121dc 2981      		ldd r18,Y+1
 42240 121de 3A81      		ldd r19,Y+2
 42241 121e0 8DA5      		ldd r24,Y+45
 42242 121e2 9EA5      		ldd r25,Y+46
 42243 121e4 B901      		movw r22,r18
 42244 121e6 0E94 0000 		call presolve_nextcol
 42245 121ea 9A87      		std Y+10,r25
 42246 121ec 8987      		std Y+9,r24
 42247               	.L1763:
3767:lp_solve_5.5/lp_presolve.c ****     for(jb = presolve_nextcol(psdata, i, &item); jb >= 0;
 42248               		.loc 2 3767 0 discriminator 1
 42249 121ee 8985      		ldd r24,Y+9
 42250 121f0 9A85      		ldd r25,Y+10
 42251 121f2 9923      		tst r25
 42252 121f4 04F0      		brlt .+2
 42253 121f6 00C0      		rjmp .L1764
3771:lp_solve_5.5/lp_presolve.c ****     }
3772:lp_solve_5.5/lp_presolve.c **** 
3773:lp_solve_5.5/lp_presolve.c ****     for(ie = ib+1; ie < n; ie++) {
 42254               		.loc 2 3773 0
 42255 121f8 8B81      		ldd r24,Y+3
 42256 121fa 9C81      		ldd r25,Y+4
 42257 121fc 0196      		adiw r24,1
 42258 121fe 9E83      		std Y+6,r25
 42259 12200 8D83      		std Y+5,r24
 42260 12202 00C0      		rjmp .L1765
 42261               	.L1805:
3774:lp_solve_5.5/lp_presolve.c **** 
3775:lp_solve_5.5/lp_presolve.c ****       /* Get row and check if it was previously eliminated */
3776:lp_solve_5.5/lp_presolve.c ****       ii = QS[ie].int4.intval;
 42262               		.loc 2 3776 0
 42263 12204 8D81      		ldd r24,Y+5
 42264 12206 9E81      		ldd r25,Y+6
 42265 12208 880F      		lsl r24
 42266 1220a 991F      		rol r25
 42267 1220c 880F      		lsl r24
 42268 1220e 991F      		rol r25
 42269 12210 880F      		lsl r24
 42270 12212 991F      		rol r25
 42271 12214 2B8D      		ldd r18,Y+27
 42272 12216 3C8D      		ldd r19,Y+28
 42273 12218 820F      		add r24,r18
 42274 1221a 931F      		adc r25,r19
 42275 1221c FC01      		movw r30,r24
 42276 1221e 8081      		ld r24,Z
 42277 12220 9181      		ldd r25,Z+1
 42278 12222 9AA3      		std Y+34,r25
 42279 12224 89A3      		std Y+33,r24
3777:lp_solve_5.5/lp_presolve.c ****       if(ii < 0)
 42280               		.loc 2 3777 0
 42281 12226 89A1      		ldd r24,Y+33
 42282 12228 9AA1      		ldd r25,Y+34
 42283 1222a 9923      		tst r25
 42284 1222c 04F4      		brge .+2
 42285 1222e 00C0      		rjmp .L1826
3778:lp_solve_5.5/lp_presolve.c ****         continue;
3779:lp_solve_5.5/lp_presolve.c **** 
3780:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
3781:lp_solve_5.5/lp_presolve.c ****       if((QS[ib].int4.intpar1 > QS[ie].int4.intpar1) ||
3782:lp_solve_5.5/lp_presolve.c ****          ((QS[ib].int4.intpar1 == QS[ie].int4.intpar1) && (QS[ib].int4.intpar2 < QS[ie].int4.intpar
3783:lp_solve_5.5/lp_presolve.c ****         report(lp, SEVERE, "presolve_rowdominance: Invalid sorted row order\n");
3784:lp_solve_5.5/lp_presolve.c **** #endif
3785:lp_solve_5.5/lp_presolve.c **** 
3786:lp_solve_5.5/lp_presolve.c ****       /* Loop over every row member to confirm that the candidate
3787:lp_solve_5.5/lp_presolve.c ****         actually dominates in every position */
3788:lp_solve_5.5/lp_presolve.c ****       if((lp->orig_rhs[i] == 0) && (lp->orig_rhs[ii] == 0))
 42286               		.loc 2 3788 0
 42287 12230 8D89      		ldd r24,Y+21
 42288 12232 9E89      		ldd r25,Y+22
 42289 12234 8A55      		subi r24,90
 42290 12236 9D4F      		sbci r25,-3
 42291 12238 FC01      		movw r30,r24
 42292 1223a 2081      		ld r18,Z
 42293 1223c 3181      		ldd r19,Z+1
 42294 1223e 8981      		ldd r24,Y+1
 42295 12240 9A81      		ldd r25,Y+2
 42296 12242 880F      		lsl r24
 42297 12244 991F      		rol r25
 42298 12246 880F      		lsl r24
 42299 12248 991F      		rol r25
 42300 1224a 820F      		add r24,r18
 42301 1224c 931F      		adc r25,r19
 42302 1224e FC01      		movw r30,r24
 42303 12250 8081      		ld r24,Z
 42304 12252 9181      		ldd r25,Z+1
 42305 12254 A281      		ldd r26,Z+2
 42306 12256 B381      		ldd r27,Z+3
 42307 12258 20E0      		ldi r18,0
 42308 1225a 30E0      		ldi r19,0
 42309 1225c A901      		movw r20,r18
 42310 1225e BC01      		movw r22,r24
 42311 12260 CD01      		movw r24,r26
 42312 12262 0E94 0000 		call __eqsf2
 42313 12266 8823      		tst r24
 42314 12268 01F4      		brne .L1768
 42315               		.loc 2 3788 0 is_stmt 0 discriminator 1
 42316 1226a 8D89      		ldd r24,Y+21
 42317 1226c 9E89      		ldd r25,Y+22
 42318 1226e 8A55      		subi r24,90
 42319 12270 9D4F      		sbci r25,-3
 42320 12272 FC01      		movw r30,r24
 42321 12274 2081      		ld r18,Z
 42322 12276 3181      		ldd r19,Z+1
 42323 12278 89A1      		ldd r24,Y+33
 42324 1227a 9AA1      		ldd r25,Y+34
 42325 1227c 880F      		lsl r24
 42326 1227e 991F      		rol r25
 42327 12280 880F      		lsl r24
 42328 12282 991F      		rol r25
 42329 12284 820F      		add r24,r18
 42330 12286 931F      		adc r25,r19
 42331 12288 FC01      		movw r30,r24
 42332 1228a 8081      		ld r24,Z
 42333 1228c 9181      		ldd r25,Z+1
 42334 1228e A281      		ldd r26,Z+2
 42335 12290 B381      		ldd r27,Z+3
 42336 12292 20E0      		ldi r18,0
 42337 12294 30E0      		ldi r19,0
 42338 12296 A901      		movw r20,r18
 42339 12298 BC01      		movw r22,r24
 42340 1229a CD01      		movw r24,r26
 42341 1229c 0E94 0000 		call __eqsf2
 42342 122a0 8823      		tst r24
 42343 122a2 01F4      		brne .L1768
3789:lp_solve_5.5/lp_presolve.c ****         ratio = 0;
 42344               		.loc 2 3789 0 is_stmt 1
 42345 122a4 1F86      		std Y+15,__zero_reg__
 42346 122a6 188A      		std Y+16,__zero_reg__
 42347 122a8 198A      		std Y+17,__zero_reg__
 42348 122aa 1A8A      		std Y+18,__zero_reg__
 42349 122ac 00C0      		rjmp .L1771
 42350               	.L1768:
3790:lp_solve_5.5/lp_presolve.c ****       else if((lp->orig_rhs[i] != 0) && (lp->orig_rhs[ii] != 0))
 42351               		.loc 2 3790 0
 42352 122ae 8D89      		ldd r24,Y+21
 42353 122b0 9E89      		ldd r25,Y+22
 42354 122b2 8A55      		subi r24,90
 42355 122b4 9D4F      		sbci r25,-3
 42356 122b6 FC01      		movw r30,r24
 42357 122b8 2081      		ld r18,Z
 42358 122ba 3181      		ldd r19,Z+1
 42359 122bc 8981      		ldd r24,Y+1
 42360 122be 9A81      		ldd r25,Y+2
 42361 122c0 880F      		lsl r24
 42362 122c2 991F      		rol r25
 42363 122c4 880F      		lsl r24
 42364 122c6 991F      		rol r25
 42365 122c8 820F      		add r24,r18
 42366 122ca 931F      		adc r25,r19
 42367 122cc FC01      		movw r30,r24
 42368 122ce 8081      		ld r24,Z
 42369 122d0 9181      		ldd r25,Z+1
 42370 122d2 A281      		ldd r26,Z+2
 42371 122d4 B381      		ldd r27,Z+3
 42372 122d6 20E0      		ldi r18,0
 42373 122d8 30E0      		ldi r19,0
 42374 122da A901      		movw r20,r18
 42375 122dc BC01      		movw r22,r24
 42376 122de CD01      		movw r24,r26
 42377 122e0 0E94 0000 		call __nesf2
 42378 122e4 8823      		tst r24
 42379 122e6 01F4      		brne .L1815
3791:lp_solve_5.5/lp_presolve.c ****         ratio = lp->orig_rhs[i] / lp->orig_rhs[ii];
3792:lp_solve_5.5/lp_presolve.c ****       else
3793:lp_solve_5.5/lp_presolve.c ****         continue;
 42380               		.loc 2 3793 0
 42381 122e8 00C0      		rjmp .L1767
 42382               	.L1815:
3790:lp_solve_5.5/lp_presolve.c ****       else if((lp->orig_rhs[i] != 0) && (lp->orig_rhs[ii] != 0))
 42383               		.loc 2 3790 0 discriminator 1
 42384 122ea 8D89      		ldd r24,Y+21
 42385 122ec 9E89      		ldd r25,Y+22
 42386 122ee 8A55      		subi r24,90
 42387 122f0 9D4F      		sbci r25,-3
 42388 122f2 FC01      		movw r30,r24
 42389 122f4 2081      		ld r18,Z
 42390 122f6 3181      		ldd r19,Z+1
 42391 122f8 89A1      		ldd r24,Y+33
 42392 122fa 9AA1      		ldd r25,Y+34
 42393 122fc 880F      		lsl r24
 42394 122fe 991F      		rol r25
 42395 12300 880F      		lsl r24
 42396 12302 991F      		rol r25
 42397 12304 820F      		add r24,r18
 42398 12306 931F      		adc r25,r19
 42399 12308 FC01      		movw r30,r24
 42400 1230a 8081      		ld r24,Z
 42401 1230c 9181      		ldd r25,Z+1
 42402 1230e A281      		ldd r26,Z+2
 42403 12310 B381      		ldd r27,Z+3
 42404 12312 20E0      		ldi r18,0
 42405 12314 30E0      		ldi r19,0
 42406 12316 A901      		movw r20,r18
 42407 12318 BC01      		movw r22,r24
 42408 1231a CD01      		movw r24,r26
 42409 1231c 0E94 0000 		call __nesf2
 42410 12320 8823      		tst r24
 42411 12322 01F4      		brne .L1816
 42412               		.loc 2 3793 0 discriminator 1
 42413 12324 00C0      		rjmp .L1767
 42414               	.L1816:
3791:lp_solve_5.5/lp_presolve.c ****         ratio = lp->orig_rhs[i] / lp->orig_rhs[ii];
 42415               		.loc 2 3791 0
 42416 12326 8D89      		ldd r24,Y+21
 42417 12328 9E89      		ldd r25,Y+22
 42418 1232a 8A55      		subi r24,90
 42419 1232c 9D4F      		sbci r25,-3
 42420 1232e FC01      		movw r30,r24
 42421 12330 2081      		ld r18,Z
 42422 12332 3181      		ldd r19,Z+1
 42423 12334 8981      		ldd r24,Y+1
 42424 12336 9A81      		ldd r25,Y+2
 42425 12338 880F      		lsl r24
 42426 1233a 991F      		rol r25
 42427 1233c 880F      		lsl r24
 42428 1233e 991F      		rol r25
 42429 12340 820F      		add r24,r18
 42430 12342 931F      		adc r25,r19
 42431 12344 FC01      		movw r30,r24
 42432 12346 8081      		ld r24,Z
 42433 12348 9181      		ldd r25,Z+1
 42434 1234a A281      		ldd r26,Z+2
 42435 1234c B381      		ldd r27,Z+3
 42436 1234e 2D89      		ldd r18,Y+21
 42437 12350 3E89      		ldd r19,Y+22
 42438 12352 2A55      		subi r18,90
 42439 12354 3D4F      		sbci r19,-3
 42440 12356 F901      		movw r30,r18
 42441 12358 4081      		ld r20,Z
 42442 1235a 5181      		ldd r21,Z+1
 42443 1235c 29A1      		ldd r18,Y+33
 42444 1235e 3AA1      		ldd r19,Y+34
 42445 12360 220F      		lsl r18
 42446 12362 331F      		rol r19
 42447 12364 220F      		lsl r18
 42448 12366 331F      		rol r19
 42449 12368 240F      		add r18,r20
 42450 1236a 351F      		adc r19,r21
 42451 1236c F901      		movw r30,r18
 42452 1236e 2081      		ld r18,Z
 42453 12370 3181      		ldd r19,Z+1
 42454 12372 4281      		ldd r20,Z+2
 42455 12374 5381      		ldd r21,Z+3
 42456 12376 BC01      		movw r22,r24
 42457 12378 CD01      		movw r24,r26
 42458 1237a 0E94 0000 		call __divsf3
 42459 1237e DC01      		movw r26,r24
 42460 12380 CB01      		movw r24,r22
 42461 12382 8F87      		std Y+15,r24
 42462 12384 988B      		std Y+16,r25
 42463 12386 A98B      		std Y+17,r26
 42464 12388 BA8B      		std Y+18,r27
 42465               	.L1771:
3794:lp_solve_5.5/lp_presolve.c ****       item = 0;
 42466               		.loc 2 3794 0
 42467 1238a 18A6      		std Y+40,__zero_reg__
 42468 1238c 1FA2      		std Y+39,__zero_reg__
3795:lp_solve_5.5/lp_presolve.c ****       for(jb = presolve_nextcol(psdata, ii, &item); jb >= 0;
 42469               		.loc 2 3795 0
 42470 1238e AE01      		movw r20,r28
 42471 12390 495D      		subi r20,-39
 42472 12392 5F4F      		sbci r21,-1
 42473 12394 29A1      		ldd r18,Y+33
 42474 12396 3AA1      		ldd r19,Y+34
 42475 12398 8DA5      		ldd r24,Y+45
 42476 1239a 9EA5      		ldd r25,Y+46
 42477 1239c B901      		movw r22,r18
 42478 1239e 0E94 0000 		call presolve_nextcol
 42479 123a2 9A87      		std Y+10,r25
 42480 123a4 8987      		std Y+9,r24
 42481 123a6 00C0      		rjmp .L1775
 42482               	.L1783:
3796:lp_solve_5.5/lp_presolve.c ****           jb = presolve_nextcol(psdata, ii, &item)) {
3797:lp_solve_5.5/lp_presolve.c ****         jx = ROW_MAT_COLNR(jb);
 42483               		.loc 2 3797 0
 42484 123a8 8F89      		ldd r24,Y+23
 42485 123aa 988D      		ldd r25,Y+24
 42486 123ac FC01      		movw r30,r24
 42487 123ae 2485      		ldd r18,Z+12
 42488 123b0 3585      		ldd r19,Z+13
 42489 123b2 8F89      		ldd r24,Y+23
 42490 123b4 988D      		ldd r25,Y+24
 42491 123b6 FC01      		movw r30,r24
 42492 123b8 4689      		ldd r20,Z+22
 42493 123ba 5789      		ldd r21,Z+23
 42494 123bc 8985      		ldd r24,Y+9
 42495 123be 9A85      		ldd r25,Y+10
 42496 123c0 880F      		lsl r24
 42497 123c2 991F      		rol r25
 42498 123c4 840F      		add r24,r20
 42499 123c6 951F      		adc r25,r21
 42500 123c8 FC01      		movw r30,r24
 42501 123ca 8081      		ld r24,Z
 42502 123cc 9181      		ldd r25,Z+1
 42503 123ce 880F      		lsl r24
 42504 123d0 991F      		rol r25
 42505 123d2 820F      		add r24,r18
 42506 123d4 931F      		adc r25,r19
 42507 123d6 FC01      		movw r30,r24
 42508 123d8 8081      		ld r24,Z
 42509 123da 9181      		ldd r25,Z+1
 42510 123dc 98A3      		std Y+32,r25
 42511 123de 8F8F      		std Y+31,r24
3798:lp_solve_5.5/lp_presolve.c ****         if(rowvalues[jx] == 0)
 42512               		.loc 2 3798 0
 42513 123e0 2BA5      		ldd r18,Y+43
 42514 123e2 3CA5      		ldd r19,Y+44
 42515 123e4 8F8D      		ldd r24,Y+31
 42516 123e6 98A1      		ldd r25,Y+32
 42517 123e8 880F      		lsl r24
 42518 123ea 991F      		rol r25
 42519 123ec 880F      		lsl r24
 42520 123ee 991F      		rol r25
 42521 123f0 820F      		add r24,r18
 42522 123f2 931F      		adc r25,r19
 42523 123f4 FC01      		movw r30,r24
 42524 123f6 8081      		ld r24,Z
 42525 123f8 9181      		ldd r25,Z+1
 42526 123fa A281      		ldd r26,Z+2
 42527 123fc B381      		ldd r27,Z+3
 42528 123fe 20E0      		ldi r18,0
 42529 12400 30E0      		ldi r19,0
 42530 12402 A901      		movw r20,r18
 42531 12404 BC01      		movw r22,r24
 42532 12406 CD01      		movw r24,r26
 42533 12408 0E94 0000 		call __eqsf2
 42534 1240c 8823      		tst r24
 42535 1240e 01F4      		brne .+2
 42536 12410 00C0      		rjmp .L1827
3799:lp_solve_5.5/lp_presolve.c ****           break;
3800:lp_solve_5.5/lp_presolve.c ****         if(ratio == 0)
 42537               		.loc 2 3800 0
 42538 12412 20E0      		ldi r18,0
 42539 12414 30E0      		ldi r19,0
 42540 12416 A901      		movw r20,r18
 42541 12418 6F85      		ldd r22,Y+15
 42542 1241a 7889      		ldd r23,Y+16
 42543 1241c 8989      		ldd r24,Y+17
 42544 1241e 9A89      		ldd r25,Y+18
 42545 12420 0E94 0000 		call __eqsf2
 42546 12424 8823      		tst r24
 42547 12426 01F4      		brne .L1821
3801:lp_solve_5.5/lp_presolve.c ****           ratio = rowvalues[jx] / ROW_MAT_VALUE(jb);
 42548               		.loc 2 3801 0
 42549 12428 2BA5      		ldd r18,Y+43
 42550 1242a 3CA5      		ldd r19,Y+44
 42551 1242c 8F8D      		ldd r24,Y+31
 42552 1242e 98A1      		ldd r25,Y+32
 42553 12430 880F      		lsl r24
 42554 12432 991F      		rol r25
 42555 12434 880F      		lsl r24
 42556 12436 991F      		rol r25
 42557 12438 820F      		add r24,r18
 42558 1243a 931F      		adc r25,r19
 42559 1243c FC01      		movw r30,r24
 42560 1243e 8081      		ld r24,Z
 42561 12440 9181      		ldd r25,Z+1
 42562 12442 A281      		ldd r26,Z+2
 42563 12444 B381      		ldd r27,Z+3
 42564 12446 2F89      		ldd r18,Y+23
 42565 12448 388D      		ldd r19,Y+24
 42566 1244a F901      		movw r30,r18
 42567 1244c 4089      		ldd r20,Z+16
 42568 1244e 5189      		ldd r21,Z+17
 42569 12450 2F89      		ldd r18,Y+23
 42570 12452 388D      		ldd r19,Y+24
 42571 12454 F901      		movw r30,r18
 42572 12456 6689      		ldd r22,Z+22
 42573 12458 7789      		ldd r23,Z+23
 42574 1245a 2985      		ldd r18,Y+9
 42575 1245c 3A85      		ldd r19,Y+10
 42576 1245e 220F      		lsl r18
 42577 12460 331F      		rol r19
 42578 12462 260F      		add r18,r22
 42579 12464 371F      		adc r19,r23
 42580 12466 F901      		movw r30,r18
 42581 12468 2081      		ld r18,Z
 42582 1246a 3181      		ldd r19,Z+1
 42583 1246c 220F      		lsl r18
 42584 1246e 331F      		rol r19
 42585 12470 220F      		lsl r18
 42586 12472 331F      		rol r19
 42587 12474 240F      		add r18,r20
 42588 12476 351F      		adc r19,r21
 42589 12478 F901      		movw r30,r18
 42590 1247a 2081      		ld r18,Z
 42591 1247c 3181      		ldd r19,Z+1
 42592 1247e 4281      		ldd r20,Z+2
 42593 12480 5381      		ldd r21,Z+3
 42594 12482 BC01      		movw r22,r24
 42595 12484 CD01      		movw r24,r26
 42596 12486 0E94 0000 		call __divsf3
 42597 1248a DC01      		movw r26,r24
 42598 1248c CB01      		movw r24,r22
 42599 1248e 8F87      		std Y+15,r24
 42600 12490 988B      		std Y+16,r25
 42601 12492 A98B      		std Y+17,r26
 42602 12494 BA8B      		std Y+18,r27
 42603 12496 00C0      		rjmp .L1781
 42604               	.L1821:
3802:lp_solve_5.5/lp_presolve.c ****         else if(fabs(rowvalues[jx] - ratio*ROW_MAT_VALUE(jb)) > psdata->epsvalue)
 42605               		.loc 2 3802 0
 42606 12498 2BA5      		ldd r18,Y+43
 42607 1249a 3CA5      		ldd r19,Y+44
 42608 1249c 8F8D      		ldd r24,Y+31
 42609 1249e 98A1      		ldd r25,Y+32
 42610 124a0 880F      		lsl r24
 42611 124a2 991F      		rol r25
 42612 124a4 880F      		lsl r24
 42613 124a6 991F      		rol r25
 42614 124a8 820F      		add r24,r18
 42615 124aa 931F      		adc r25,r19
 42616 124ac FC01      		movw r30,r24
 42617 124ae C080      		ld r12,Z
 42618 124b0 D180      		ldd r13,Z+1
 42619 124b2 E280      		ldd r14,Z+2
 42620 124b4 F380      		ldd r15,Z+3
 42621 124b6 8F89      		ldd r24,Y+23
 42622 124b8 988D      		ldd r25,Y+24
 42623 124ba FC01      		movw r30,r24
 42624 124bc 2089      		ldd r18,Z+16
 42625 124be 3189      		ldd r19,Z+17
 42626 124c0 8F89      		ldd r24,Y+23
 42627 124c2 988D      		ldd r25,Y+24
 42628 124c4 FC01      		movw r30,r24
 42629 124c6 4689      		ldd r20,Z+22
 42630 124c8 5789      		ldd r21,Z+23
 42631 124ca 8985      		ldd r24,Y+9
 42632 124cc 9A85      		ldd r25,Y+10
 42633 124ce 880F      		lsl r24
 42634 124d0 991F      		rol r25
 42635 124d2 840F      		add r24,r20
 42636 124d4 951F      		adc r25,r21
 42637 124d6 FC01      		movw r30,r24
 42638 124d8 8081      		ld r24,Z
 42639 124da 9181      		ldd r25,Z+1
 42640 124dc 880F      		lsl r24
 42641 124de 991F      		rol r25
 42642 124e0 880F      		lsl r24
 42643 124e2 991F      		rol r25
 42644 124e4 820F      		add r24,r18
 42645 124e6 931F      		adc r25,r19
 42646 124e8 FC01      		movw r30,r24
 42647 124ea 8081      		ld r24,Z
 42648 124ec 9181      		ldd r25,Z+1
 42649 124ee A281      		ldd r26,Z+2
 42650 124f0 B381      		ldd r27,Z+3
 42651 124f2 2F85      		ldd r18,Y+15
 42652 124f4 3889      		ldd r19,Y+16
 42653 124f6 4989      		ldd r20,Y+17
 42654 124f8 5A89      		ldd r21,Y+18
 42655 124fa BC01      		movw r22,r24
 42656 124fc CD01      		movw r24,r26
 42657 124fe 0E94 0000 		call __mulsf3
 42658 12502 DC01      		movw r26,r24
 42659 12504 CB01      		movw r24,r22
 42660 12506 9C01      		movw r18,r24
 42661 12508 AD01      		movw r20,r26
 42662 1250a C701      		movw r24,r14
 42663 1250c B601      		movw r22,r12
 42664 1250e 0E94 0000 		call __subsf3
 42665 12512 DC01      		movw r26,r24
 42666 12514 CB01      		movw r24,r22
 42667 12516 BF77      		andi r27,0x7f
 42668 12518 2DA5      		ldd r18,Y+45
 42669 1251a 3EA5      		ldd r19,Y+46
 42670 1251c F901      		movw r30,r18
 42671 1251e 2489      		ldd r18,Z+20
 42672 12520 3589      		ldd r19,Z+21
 42673 12522 4689      		ldd r20,Z+22
 42674 12524 5789      		ldd r21,Z+23
 42675 12526 BC01      		movw r22,r24
 42676 12528 CD01      		movw r24,r26
 42677 1252a 0E94 0000 		call __gtsf2
 42678 1252e 1816      		cp __zero_reg__,r24
 42679 12530 04F0      		brlt .L1828
 42680               	.L1781:
3796:lp_solve_5.5/lp_presolve.c ****         jx = ROW_MAT_COLNR(jb);
 42681               		.loc 2 3796 0
 42682 12532 AE01      		movw r20,r28
 42683 12534 495D      		subi r20,-39
 42684 12536 5F4F      		sbci r21,-1
 42685 12538 29A1      		ldd r18,Y+33
 42686 1253a 3AA1      		ldd r19,Y+34
 42687 1253c 8DA5      		ldd r24,Y+45
 42688 1253e 9EA5      		ldd r25,Y+46
 42689 12540 B901      		movw r22,r18
 42690 12542 0E94 0000 		call presolve_nextcol
 42691 12546 9A87      		std Y+10,r25
 42692 12548 8987      		std Y+9,r24
 42693               	.L1775:
3795:lp_solve_5.5/lp_presolve.c ****           jb = presolve_nextcol(psdata, ii, &item)) {
 42694               		.loc 2 3795 0 discriminator 1
 42695 1254a 8985      		ldd r24,Y+9
 42696 1254c 9A85      		ldd r25,Y+10
 42697 1254e 9923      		tst r25
 42698 12550 04F0      		brlt .+2
 42699 12552 00C0      		rjmp .L1783
 42700 12554 00C0      		rjmp .L1778
 42701               	.L1827:
3799:lp_solve_5.5/lp_presolve.c ****         if(ratio == 0)
 42702               		.loc 2 3799 0
 42703 12556 0000      		nop
 42704 12558 00C0      		rjmp .L1778
 42705               	.L1828:
3803:lp_solve_5.5/lp_presolve.c ****           break;
 42706               		.loc 2 3803 0
 42707 1255a 0000      		nop
 42708               	.L1778:
3804:lp_solve_5.5/lp_presolve.c ****       }
3805:lp_solve_5.5/lp_presolve.c **** 
3806:lp_solve_5.5/lp_presolve.c ****       /* "We have contact" */
3807:lp_solve_5.5/lp_presolve.c ****       if(jb < 0) {
 42709               		.loc 2 3807 0
 42710 1255c 8985      		ldd r24,Y+9
 42711 1255e 9A85      		ldd r25,Y+10
 42712 12560 9923      		tst r25
 42713 12562 04F0      		brlt .+2
 42714 12564 00C0      		rjmp .L1767
 42715               	.LBB10:
3808:lp_solve_5.5/lp_presolve.c ****         int sign_1 = 0, sign_j = 0;
 42716               		.loc 2 3808 0
 42717 12566 1C8A      		std Y+20,__zero_reg__
 42718 12568 1B8A      		std Y+19,__zero_reg__
 42719 1256a 1CA2      		std Y+36,__zero_reg__
 42720 1256c 1BA2      		std Y+35,__zero_reg__
3809:lp_solve_5.5/lp_presolve.c **** 
3810:lp_solve_5.5/lp_presolve.c ****         /* Need to fix any superset columns, but require that they have equal signs */
3811:lp_solve_5.5/lp_presolve.c ****         coldel[0] = 0;
 42721               		.loc 2 3811 0
 42722 1256e 8DA1      		ldd r24,Y+37
 42723 12570 9EA1      		ldd r25,Y+38
 42724 12572 FC01      		movw r30,r24
 42725 12574 1182      		std Z+1,__zero_reg__
 42726 12576 1082      		st Z,__zero_reg__
3812:lp_solve_5.5/lp_presolve.c ****         item = 0;
 42727               		.loc 2 3812 0
 42728 12578 18A6      		std Y+40,__zero_reg__
 42729 1257a 1FA2      		std Y+39,__zero_reg__
3813:lp_solve_5.5/lp_presolve.c ****         for(jb = presolve_nextcol(psdata, i, &item); jb >= 0;
 42730               		.loc 2 3813 0
 42731 1257c AE01      		movw r20,r28
 42732 1257e 495D      		subi r20,-39
 42733 12580 5F4F      		sbci r21,-1
 42734 12582 2981      		ldd r18,Y+1
 42735 12584 3A81      		ldd r19,Y+2
 42736 12586 8DA5      		ldd r24,Y+45
 42737 12588 9EA5      		ldd r25,Y+46
 42738 1258a B901      		movw r22,r18
 42739 1258c 0E94 0000 		call presolve_nextcol
 42740 12590 9A87      		std Y+10,r25
 42741 12592 8987      		std Y+9,r24
 42742 12594 00C0      		rjmp .L1784
 42743               	.L1800:
3814:lp_solve_5.5/lp_presolve.c ****             jb = presolve_nextcol(psdata, i, &item)) {
3815:lp_solve_5.5/lp_presolve.c ****           jx = ROW_MAT_COLNR(jb);
 42744               		.loc 2 3815 0
 42745 12596 8F89      		ldd r24,Y+23
 42746 12598 988D      		ldd r25,Y+24
 42747 1259a FC01      		movw r30,r24
 42748 1259c 2485      		ldd r18,Z+12
 42749 1259e 3585      		ldd r19,Z+13
 42750 125a0 8F89      		ldd r24,Y+23
 42751 125a2 988D      		ldd r25,Y+24
 42752 125a4 FC01      		movw r30,r24
 42753 125a6 4689      		ldd r20,Z+22
 42754 125a8 5789      		ldd r21,Z+23
 42755 125aa 8985      		ldd r24,Y+9
 42756 125ac 9A85      		ldd r25,Y+10
 42757 125ae 880F      		lsl r24
 42758 125b0 991F      		rol r25
 42759 125b2 840F      		add r24,r20
 42760 125b4 951F      		adc r25,r21
 42761 125b6 FC01      		movw r30,r24
 42762 125b8 8081      		ld r24,Z
 42763 125ba 9181      		ldd r25,Z+1
 42764 125bc 880F      		lsl r24
 42765 125be 991F      		rol r25
 42766 125c0 820F      		add r24,r18
 42767 125c2 931F      		adc r25,r19
 42768 125c4 FC01      		movw r30,r24
 42769 125c6 8081      		ld r24,Z
 42770 125c8 9181      		ldd r25,Z+1
 42771 125ca 98A3      		std Y+32,r25
 42772 125cc 8F8F      		std Y+31,r24
3816:lp_solve_5.5/lp_presolve.c ****           if(mat_findelm(mat, ii, jx) <= 0) {
 42773               		.loc 2 3816 0
 42774 125ce 4F8D      		ldd r20,Y+31
 42775 125d0 58A1      		ldd r21,Y+32
 42776 125d2 29A1      		ldd r18,Y+33
 42777 125d4 3AA1      		ldd r19,Y+34
 42778 125d6 8F89      		ldd r24,Y+23
 42779 125d8 988D      		ldd r25,Y+24
 42780 125da B901      		movw r22,r18
 42781 125dc 0E94 0000 		call mat_findelm
 42782 125e0 1816      		cp __zero_reg__,r24
 42783 125e2 1906      		cpc __zero_reg__,r25
 42784 125e4 04F4      		brge .+2
 42785 125e6 00C0      		rjmp .L1785
3817:lp_solve_5.5/lp_presolve.c **** 
3818:lp_solve_5.5/lp_presolve.c ****             /* Cancel if we detect a free or "quasi-free" variable */
3819:lp_solve_5.5/lp_presolve.c ****             if((lp->orig_lowbo[lp->rows + jx] < 0) &&
 42786               		.loc 2 3819 0
 42787 125e8 8D89      		ldd r24,Y+21
 42788 125ea 9E89      		ldd r25,Y+22
 42789 125ec 8E54      		subi r24,78
 42790 125ee 9D4F      		sbci r25,-3
 42791 125f0 FC01      		movw r30,r24
 42792 125f2 2081      		ld r18,Z
 42793 125f4 3181      		ldd r19,Z+1
 42794 125f6 8D89      		ldd r24,Y+21
 42795 125f8 9E89      		ldd r25,Y+22
 42796 125fa 8651      		subi r24,22
 42797 125fc 9E4F      		sbci r25,-2
 42798 125fe FC01      		movw r30,r24
 42799 12600 4081      		ld r20,Z
 42800 12602 5181      		ldd r21,Z+1
 42801 12604 8F8D      		ldd r24,Y+31
 42802 12606 98A1      		ldd r25,Y+32
 42803 12608 840F      		add r24,r20
 42804 1260a 951F      		adc r25,r21
 42805 1260c 880F      		lsl r24
 42806 1260e 991F      		rol r25
 42807 12610 880F      		lsl r24
 42808 12612 991F      		rol r25
 42809 12614 820F      		add r24,r18
 42810 12616 931F      		adc r25,r19
 42811 12618 FC01      		movw r30,r24
 42812 1261a 8081      		ld r24,Z
 42813 1261c 9181      		ldd r25,Z+1
 42814 1261e A281      		ldd r26,Z+2
 42815 12620 B381      		ldd r27,Z+3
 42816 12622 20E0      		ldi r18,0
 42817 12624 30E0      		ldi r19,0
 42818 12626 A901      		movw r20,r18
 42819 12628 BC01      		movw r22,r24
 42820 1262a CD01      		movw r24,r26
 42821 1262c 0E94 0000 		call __ltsf2
 42822 12630 8823      		tst r24
 42823 12632 04F4      		brge .L1786
3820:lp_solve_5.5/lp_presolve.c ****                (lp->orig_upbo[lp->rows + jx] > 0)) {
 42824               		.loc 2 3820 0 discriminator 1
 42825 12634 8D89      		ldd r24,Y+21
 42826 12636 9E89      		ldd r25,Y+22
 42827 12638 8255      		subi r24,82
 42828 1263a 9D4F      		sbci r25,-3
 42829 1263c FC01      		movw r30,r24
 42830 1263e 2081      		ld r18,Z
 42831 12640 3181      		ldd r19,Z+1
 42832 12642 8D89      		ldd r24,Y+21
 42833 12644 9E89      		ldd r25,Y+22
 42834 12646 8651      		subi r24,22
 42835 12648 9E4F      		sbci r25,-2
 42836 1264a FC01      		movw r30,r24
 42837 1264c 4081      		ld r20,Z
 42838 1264e 5181      		ldd r21,Z+1
 42839 12650 8F8D      		ldd r24,Y+31
 42840 12652 98A1      		ldd r25,Y+32
 42841 12654 840F      		add r24,r20
 42842 12656 951F      		adc r25,r21
 42843 12658 880F      		lsl r24
 42844 1265a 991F      		rol r25
 42845 1265c 880F      		lsl r24
 42846 1265e 991F      		rol r25
 42847 12660 820F      		add r24,r18
 42848 12662 931F      		adc r25,r19
 42849 12664 FC01      		movw r30,r24
 42850 12666 8081      		ld r24,Z
 42851 12668 9181      		ldd r25,Z+1
 42852 1266a A281      		ldd r26,Z+2
 42853 1266c B381      		ldd r27,Z+3
3819:lp_solve_5.5/lp_presolve.c ****                (lp->orig_upbo[lp->rows + jx] > 0)) {
 42854               		.loc 2 3819 0 discriminator 1
 42855 1266e 20E0      		ldi r18,0
 42856 12670 30E0      		ldi r19,0
 42857 12672 A901      		movw r20,r18
 42858 12674 BC01      		movw r22,r24
 42859 12676 CD01      		movw r24,r26
 42860 12678 0E94 0000 		call __gtsf2
 42861 1267c 1816      		cp __zero_reg__,r24
 42862 1267e 04F4      		brge .L1786
3821:lp_solve_5.5/lp_presolve.c ****               coldel[0] = -1;
 42863               		.loc 2 3821 0
 42864 12680 8DA1      		ldd r24,Y+37
 42865 12682 9EA1      		ldd r25,Y+38
 42866 12684 2FEF      		ldi r18,lo8(-1)
 42867 12686 3FEF      		ldi r19,lo8(-1)
 42868 12688 FC01      		movw r30,r24
 42869 1268a 3183      		std Z+1,r19
 42870 1268c 2083      		st Z,r18
3822:lp_solve_5.5/lp_presolve.c ****               break;
 42871               		.loc 2 3822 0
 42872 1268e 00C0      		rjmp .L1789
 42873               	.L1786:
3823:lp_solve_5.5/lp_presolve.c ****             }
3824:lp_solve_5.5/lp_presolve.c **** 
3825:lp_solve_5.5/lp_presolve.c ****             /* Ensure that we are feasible */
3826:lp_solve_5.5/lp_presolve.c ****             else if((lp->orig_lowbo[lp->rows + jx] > 0) ||
 42874               		.loc 2 3826 0
 42875 12690 8D89      		ldd r24,Y+21
 42876 12692 9E89      		ldd r25,Y+22
 42877 12694 8E54      		subi r24,78
 42878 12696 9D4F      		sbci r25,-3
 42879 12698 FC01      		movw r30,r24
 42880 1269a 2081      		ld r18,Z
 42881 1269c 3181      		ldd r19,Z+1
 42882 1269e 8D89      		ldd r24,Y+21
 42883 126a0 9E89      		ldd r25,Y+22
 42884 126a2 8651      		subi r24,22
 42885 126a4 9E4F      		sbci r25,-2
 42886 126a6 FC01      		movw r30,r24
 42887 126a8 4081      		ld r20,Z
 42888 126aa 5181      		ldd r21,Z+1
 42889 126ac 8F8D      		ldd r24,Y+31
 42890 126ae 98A1      		ldd r25,Y+32
 42891 126b0 840F      		add r24,r20
 42892 126b2 951F      		adc r25,r21
 42893 126b4 880F      		lsl r24
 42894 126b6 991F      		rol r25
 42895 126b8 880F      		lsl r24
 42896 126ba 991F      		rol r25
 42897 126bc 820F      		add r24,r18
 42898 126be 931F      		adc r25,r19
 42899 126c0 FC01      		movw r30,r24
 42900 126c2 8081      		ld r24,Z
 42901 126c4 9181      		ldd r25,Z+1
 42902 126c6 A281      		ldd r26,Z+2
 42903 126c8 B381      		ldd r27,Z+3
 42904 126ca 20E0      		ldi r18,0
 42905 126cc 30E0      		ldi r19,0
 42906 126ce A901      		movw r20,r18
 42907 126d0 BC01      		movw r22,r24
 42908 126d2 CD01      		movw r24,r26
 42909 126d4 0E94 0000 		call __gtsf2
 42910 126d8 1816      		cp __zero_reg__,r24
 42911 126da 04F0      		brlt .L1790
3827:lp_solve_5.5/lp_presolve.c ****                (lp->orig_upbo[lp->rows + jx] < 0)) {
 42912               		.loc 2 3827 0 discriminator 1
 42913 126dc 8D89      		ldd r24,Y+21
 42914 126de 9E89      		ldd r25,Y+22
 42915 126e0 8255      		subi r24,82
 42916 126e2 9D4F      		sbci r25,-3
 42917 126e4 FC01      		movw r30,r24
 42918 126e6 2081      		ld r18,Z
 42919 126e8 3181      		ldd r19,Z+1
 42920 126ea 8D89      		ldd r24,Y+21
 42921 126ec 9E89      		ldd r25,Y+22
 42922 126ee 8651      		subi r24,22
 42923 126f0 9E4F      		sbci r25,-2
 42924 126f2 FC01      		movw r30,r24
 42925 126f4 4081      		ld r20,Z
 42926 126f6 5181      		ldd r21,Z+1
 42927 126f8 8F8D      		ldd r24,Y+31
 42928 126fa 98A1      		ldd r25,Y+32
 42929 126fc 840F      		add r24,r20
 42930 126fe 951F      		adc r25,r21
 42931 12700 880F      		lsl r24
 42932 12702 991F      		rol r25
 42933 12704 880F      		lsl r24
 42934 12706 991F      		rol r25
 42935 12708 820F      		add r24,r18
 42936 1270a 931F      		adc r25,r19
 42937 1270c FC01      		movw r30,r24
 42938 1270e 8081      		ld r24,Z
 42939 12710 9181      		ldd r25,Z+1
 42940 12712 A281      		ldd r26,Z+2
 42941 12714 B381      		ldd r27,Z+3
3826:lp_solve_5.5/lp_presolve.c ****                (lp->orig_upbo[lp->rows + jx] < 0)) {
 42942               		.loc 2 3826 0 discriminator 1
 42943 12716 20E0      		ldi r18,0
 42944 12718 30E0      		ldi r19,0
 42945 1271a A901      		movw r20,r18
 42946 1271c BC01      		movw r22,r24
 42947 1271e CD01      		movw r24,r26
 42948 12720 0E94 0000 		call __ltsf2
 42949 12724 8823      		tst r24
 42950 12726 04F0      		brlt .+2
 42951 12728 00C0      		rjmp .L1822
 42952               	.L1790:
3828:lp_solve_5.5/lp_presolve.c ****               report(lp, DETAILED, "presolve_rowdominate: Column %s is infeasible due to conflict i
 42953               		.loc 2 3828 0
 42954 1272a 29A1      		ldd r18,Y+33
 42955 1272c 3AA1      		ldd r19,Y+34
 42956 1272e 8D89      		ldd r24,Y+21
 42957 12730 9E89      		ldd r25,Y+22
 42958 12732 B901      		movw r22,r18
 42959 12734 0E94 0000 		call get_row_name
 42960 12738 7C01      		movw r14,r24
 42961 1273a 2981      		ldd r18,Y+1
 42962 1273c 3A81      		ldd r19,Y+2
 42963 1273e 8D89      		ldd r24,Y+21
 42964 12740 9E89      		ldd r25,Y+22
 42965 12742 B901      		movw r22,r18
 42966 12744 0E94 0000 		call get_row_name
 42967 12748 8C01      		movw r16,r24
 42968 1274a 2F8D      		ldd r18,Y+31
 42969 1274c 38A1      		ldd r19,Y+32
 42970 1274e 8D89      		ldd r24,Y+21
 42971 12750 9E89      		ldd r25,Y+22
 42972 12752 B901      		movw r22,r18
 42973 12754 0E94 0000 		call get_col_name
 42974 12758 2F2D      		mov r18,r15
 42975 1275a 2F93      		push r18
 42976 1275c 2E2D      		mov r18,r14
 42977 1275e 2F93      		push r18
 42978 12760 212F      		mov r18,r17
 42979 12762 2F93      		push r18
 42980 12764 202F      		mov r18,r16
 42981 12766 2F93      		push r18
 42982 12768 292F      		mov r18,r25
 42983 1276a 2F93      		push r18
 42984 1276c 8F93      		push r24
 42985 1276e 80E0      		ldi r24,lo8(.LC54)
 42986 12770 90E0      		ldi r25,hi8(.LC54)
 42987 12772 892F      		mov r24,r25
 42988 12774 8F93      		push r24
 42989 12776 80E0      		ldi r24,lo8(.LC54)
 42990 12778 90E0      		ldi r25,hi8(.LC54)
 42991 1277a 8F93      		push r24
 42992 1277c 1F92      		push __zero_reg__
 42993 1277e 85E0      		ldi r24,lo8(5)
 42994 12780 8F93      		push r24
 42995 12782 8E89      		ldd r24,Y+22
 42996 12784 8F93      		push r24
 42997 12786 8D89      		ldd r24,Y+21
 42998 12788 8F93      		push r24
 42999 1278a 0E94 0000 		call report
 43000 1278e 8DB7      		in r24,__SP_L__
 43001 12790 9EB7      		in r25,__SP_H__
 43002 12792 0C96      		adiw r24,12
 43003 12794 0FB6      		in __tmp_reg__,__SREG__
 43004 12796 F894      		cli
 43005 12798 DEBF      		out __SP_H__,r29
 43006 1279a 0FBE      		out __SREG__,__tmp_reg__
 43007 1279c CDBF      		out __SP_L__,r28
3829:lp_solve_5.5/lp_presolve.c ****                                     get_col_name(lp, jx), get_row_name(lp, i), get_row_name(lp, ii)
3830:lp_solve_5.5/lp_presolve.c ****               coldel[0] = -1;
 43008               		.loc 2 3830 0
 43009 1279e 8DA1      		ldd r24,Y+37
 43010 127a0 9EA1      		ldd r25,Y+38
 43011 127a2 2FEF      		ldi r18,lo8(-1)
 43012 127a4 3FEF      		ldi r19,lo8(-1)
 43013 127a6 FC01      		movw r30,r24
 43014 127a8 3183      		std Z+1,r19
 43015 127aa 2083      		st Z,r18
3831:lp_solve_5.5/lp_presolve.c ****               break;
 43016               		.loc 2 3831 0
 43017 127ac 00C0      		rjmp .L1789
 43018               	.L1822:
3832:lp_solve_5.5/lp_presolve.c ****             }
3833:lp_solve_5.5/lp_presolve.c **** 
3834:lp_solve_5.5/lp_presolve.c ****             /* Check consistency / uniformity of signs */
3835:lp_solve_5.5/lp_presolve.c ****             sign_j = my_sign(ROW_MAT_VALUE(jb));
 43019               		.loc 2 3835 0
 43020 127ae 8F89      		ldd r24,Y+23
 43021 127b0 988D      		ldd r25,Y+24
 43022 127b2 FC01      		movw r30,r24
 43023 127b4 2089      		ldd r18,Z+16
 43024 127b6 3189      		ldd r19,Z+17
 43025 127b8 8F89      		ldd r24,Y+23
 43026 127ba 988D      		ldd r25,Y+24
 43027 127bc FC01      		movw r30,r24
 43028 127be 4689      		ldd r20,Z+22
 43029 127c0 5789      		ldd r21,Z+23
 43030 127c2 8985      		ldd r24,Y+9
 43031 127c4 9A85      		ldd r25,Y+10
 43032 127c6 880F      		lsl r24
 43033 127c8 991F      		rol r25
 43034 127ca 840F      		add r24,r20
 43035 127cc 951F      		adc r25,r21
 43036 127ce FC01      		movw r30,r24
 43037 127d0 8081      		ld r24,Z
 43038 127d2 9181      		ldd r25,Z+1
 43039 127d4 880F      		lsl r24
 43040 127d6 991F      		rol r25
 43041 127d8 880F      		lsl r24
 43042 127da 991F      		rol r25
 43043 127dc 820F      		add r24,r18
 43044 127de 931F      		adc r25,r19
 43045 127e0 FC01      		movw r30,r24
 43046 127e2 8081      		ld r24,Z
 43047 127e4 9181      		ldd r25,Z+1
 43048 127e6 A281      		ldd r26,Z+2
 43049 127e8 B381      		ldd r27,Z+3
 43050 127ea 20E0      		ldi r18,0
 43051 127ec 30E0      		ldi r19,0
 43052 127ee A901      		movw r20,r18
 43053 127f0 BC01      		movw r22,r24
 43054 127f2 CD01      		movw r24,r26
 43055 127f4 0E94 0000 		call __ltsf2
 43056 127f8 8823      		tst r24
 43057 127fa 04F4      		brge .L1823
 43058               		.loc 2 3835 0 is_stmt 0 discriminator 1
 43059 127fc 8FEF      		ldi r24,lo8(-1)
 43060 127fe 9FEF      		ldi r25,lo8(-1)
 43061 12800 00C0      		rjmp .L1795
 43062               	.L1823:
 43063               		.loc 2 3835 0 discriminator 2
 43064 12802 81E0      		ldi r24,lo8(1)
 43065 12804 90E0      		ldi r25,0
 43066               	.L1795:
 43067               		.loc 2 3835 0 discriminator 4
 43068 12806 9CA3      		std Y+36,r25
 43069 12808 8BA3      		std Y+35,r24
3836:lp_solve_5.5/lp_presolve.c ****             sign_j = my_chsign(is_negative(lp, jx), sign_j);
 43070               		.loc 2 3836 0 is_stmt 1 discriminator 4
 43071 1280a 2F8D      		ldd r18,Y+31
 43072 1280c 38A1      		ldd r19,Y+32
 43073 1280e 8D89      		ldd r24,Y+21
 43074 12810 9E89      		ldd r25,Y+22
 43075 12812 B901      		movw r22,r18
 43076 12814 0E94 0000 		call is_negative
 43077 12818 8823      		tst r24
 43078 1281a 01F0      		breq .L1796
 43079               		.loc 2 3836 0 is_stmt 0 discriminator 1
 43080 1281c 8BA1      		ldd r24,Y+35
 43081 1281e 9CA1      		ldd r25,Y+36
 43082 12820 892B      		or r24,r25
 43083 12822 01F0      		breq .L1796
 43084               		.loc 2 3836 0 discriminator 3
 43085 12824 8BA1      		ldd r24,Y+35
 43086 12826 9CA1      		ldd r25,Y+36
 43087 12828 9195      		neg r25
 43088 1282a 8195      		neg r24
 43089 1282c 9109      		sbc r25,__zero_reg__
 43090 1282e 00C0      		rjmp .L1797
 43091               	.L1796:
 43092               		.loc 2 3836 0 discriminator 4
 43093 12830 8BA1      		ldd r24,Y+35
 43094 12832 9CA1      		ldd r25,Y+36
 43095               	.L1797:
 43096               		.loc 2 3836 0 discriminator 6
 43097 12834 9CA3      		std Y+36,r25
 43098 12836 8BA3      		std Y+35,r24
3837:lp_solve_5.5/lp_presolve.c ****             if(coldel[0] == 0) {
 43099               		.loc 2 3837 0 is_stmt 1 discriminator 6
 43100 12838 8DA1      		ldd r24,Y+37
 43101 1283a 9EA1      		ldd r25,Y+38
 43102 1283c FC01      		movw r30,r24
 43103 1283e 8081      		ld r24,Z
 43104 12840 9181      		ldd r25,Z+1
 43105 12842 892B      		or r24,r25
 43106 12844 01F4      		brne .L1798
3838:lp_solve_5.5/lp_presolve.c ****               sign_1 = sign_j;
 43107               		.loc 2 3838 0
 43108 12846 8BA1      		ldd r24,Y+35
 43109 12848 9CA1      		ldd r25,Y+36
 43110 1284a 9C8B      		std Y+20,r25
 43111 1284c 8B8B      		std Y+19,r24
3839:lp_solve_5.5/lp_presolve.c ****               coldel[++coldel[0]] = jx;
 43112               		.loc 2 3839 0
 43113 1284e 2DA1      		ldd r18,Y+37
 43114 12850 3EA1      		ldd r19,Y+38
 43115 12852 8DA1      		ldd r24,Y+37
 43116 12854 9EA1      		ldd r25,Y+38
 43117 12856 FC01      		movw r30,r24
 43118 12858 4081      		ld r20,Z
 43119 1285a 5181      		ldd r21,Z+1
 43120 1285c 4F5F      		subi r20,-1
 43121 1285e 5F4F      		sbci r21,-1
 43122 12860 FC01      		movw r30,r24
 43123 12862 5183      		std Z+1,r21
 43124 12864 4083      		st Z,r20
 43125 12866 FC01      		movw r30,r24
 43126 12868 8081      		ld r24,Z
 43127 1286a 9181      		ldd r25,Z+1
 43128 1286c 880F      		lsl r24
 43129 1286e 991F      		rol r25
 43130 12870 820F      		add r24,r18
 43131 12872 931F      		adc r25,r19
 43132 12874 2F8D      		ldd r18,Y+31
 43133 12876 38A1      		ldd r19,Y+32
 43134 12878 FC01      		movw r30,r24
 43135 1287a 3183      		std Z+1,r19
 43136 1287c 2083      		st Z,r18
 43137 1287e 00C0      		rjmp .L1785
 43138               	.L1798:
3840:lp_solve_5.5/lp_presolve.c ****             }
3841:lp_solve_5.5/lp_presolve.c ****             else if(sign_j == sign_1) {
 43139               		.loc 2 3841 0
 43140 12880 2BA1      		ldd r18,Y+35
 43141 12882 3CA1      		ldd r19,Y+36
 43142 12884 8B89      		ldd r24,Y+19
 43143 12886 9C89      		ldd r25,Y+20
 43144 12888 2817      		cp r18,r24
 43145 1288a 3907      		cpc r19,r25
 43146 1288c 01F4      		brne .L1799
3842:lp_solve_5.5/lp_presolve.c ****               coldel[++coldel[0]] = jx;
 43147               		.loc 2 3842 0
 43148 1288e 2DA1      		ldd r18,Y+37
 43149 12890 3EA1      		ldd r19,Y+38
 43150 12892 8DA1      		ldd r24,Y+37
 43151 12894 9EA1      		ldd r25,Y+38
 43152 12896 FC01      		movw r30,r24
 43153 12898 4081      		ld r20,Z
 43154 1289a 5181      		ldd r21,Z+1
 43155 1289c 4F5F      		subi r20,-1
 43156 1289e 5F4F      		sbci r21,-1
 43157 128a0 FC01      		movw r30,r24
 43158 128a2 5183      		std Z+1,r21
 43159 128a4 4083      		st Z,r20
 43160 128a6 FC01      		movw r30,r24
 43161 128a8 8081      		ld r24,Z
 43162 128aa 9181      		ldd r25,Z+1
 43163 128ac 880F      		lsl r24
 43164 128ae 991F      		rol r25
 43165 128b0 820F      		add r24,r18
 43166 128b2 931F      		adc r25,r19
 43167 128b4 2F8D      		ldd r18,Y+31
 43168 128b6 38A1      		ldd r19,Y+32
 43169 128b8 FC01      		movw r30,r24
 43170 128ba 3183      		std Z+1,r19
 43171 128bc 2083      		st Z,r18
 43172 128be 00C0      		rjmp .L1785
 43173               	.L1799:
3843:lp_solve_5.5/lp_presolve.c ****             }
3844:lp_solve_5.5/lp_presolve.c ****             else {
3845:lp_solve_5.5/lp_presolve.c ****               coldel[0] = -1;
 43174               		.loc 2 3845 0
 43175 128c0 8DA1      		ldd r24,Y+37
 43176 128c2 9EA1      		ldd r25,Y+38
 43177 128c4 2FEF      		ldi r18,lo8(-1)
 43178 128c6 3FEF      		ldi r19,lo8(-1)
 43179 128c8 FC01      		movw r30,r24
 43180 128ca 3183      		std Z+1,r19
 43181 128cc 2083      		st Z,r18
3846:lp_solve_5.5/lp_presolve.c ****               break;
 43182               		.loc 2 3846 0
 43183 128ce 00C0      		rjmp .L1789
 43184               	.L1785:
3814:lp_solve_5.5/lp_presolve.c ****           jx = ROW_MAT_COLNR(jb);
 43185               		.loc 2 3814 0
 43186 128d0 AE01      		movw r20,r28
 43187 128d2 495D      		subi r20,-39
 43188 128d4 5F4F      		sbci r21,-1
 43189 128d6 2981      		ldd r18,Y+1
 43190 128d8 3A81      		ldd r19,Y+2
 43191 128da 8DA5      		ldd r24,Y+45
 43192 128dc 9EA5      		ldd r25,Y+46
 43193 128de B901      		movw r22,r18
 43194 128e0 0E94 0000 		call presolve_nextcol
 43195 128e4 9A87      		std Y+10,r25
 43196 128e6 8987      		std Y+9,r24
 43197               	.L1784:
3813:lp_solve_5.5/lp_presolve.c ****             jb = presolve_nextcol(psdata, i, &item)) {
 43198               		.loc 2 3813 0 discriminator 1
 43199 128e8 8985      		ldd r24,Y+9
 43200 128ea 9A85      		ldd r25,Y+10
 43201 128ec 9923      		tst r25
 43202 128ee 04F0      		brlt .+2
 43203 128f0 00C0      		rjmp .L1800
 43204               	.L1789:
3847:lp_solve_5.5/lp_presolve.c ****             }
3848:lp_solve_5.5/lp_presolve.c ****           }
3849:lp_solve_5.5/lp_presolve.c ****         }
3850:lp_solve_5.5/lp_presolve.c **** 
3851:lp_solve_5.5/lp_presolve.c ****         /* Force break / continuation if the superset columns were incompatible */
3852:lp_solve_5.5/lp_presolve.c ****         if(coldel[0] < 0)
 43205               		.loc 2 3852 0
 43206 128f2 8DA1      		ldd r24,Y+37
 43207 128f4 9EA1      		ldd r25,Y+38
 43208 128f6 FC01      		movw r30,r24
 43209 128f8 8081      		ld r24,Z
 43210 128fa 9181      		ldd r25,Z+1
 43211 128fc 9923      		tst r25
 43212 128fe 04F4      		brge .+2
 43213 12900 00C0      		rjmp .L1829
3853:lp_solve_5.5/lp_presolve.c ****           continue;
3854:lp_solve_5.5/lp_presolve.c **** 
3855:lp_solve_5.5/lp_presolve.c ****         /* Do the column fixing and deletion (check for infeasibility in the process) */
3856:lp_solve_5.5/lp_presolve.c ****         for(jb = 1; jb <= coldel[0]; jb++) {
 43214               		.loc 2 3856 0
 43215 12902 81E0      		ldi r24,lo8(1)
 43216 12904 90E0      		ldi r25,0
 43217 12906 9A87      		std Y+10,r25
 43218 12908 8987      		std Y+9,r24
 43219 1290a 00C0      		rjmp .L1802
 43220               	.L1804:
3857:lp_solve_5.5/lp_presolve.c ****           jx = coldel[jb];
 43221               		.loc 2 3857 0
 43222 1290c 2DA1      		ldd r18,Y+37
 43223 1290e 3EA1      		ldd r19,Y+38
 43224 12910 8985      		ldd r24,Y+9
 43225 12912 9A85      		ldd r25,Y+10
 43226 12914 880F      		lsl r24
 43227 12916 991F      		rol r25
 43228 12918 820F      		add r24,r18
 43229 1291a 931F      		adc r25,r19
 43230 1291c FC01      		movw r30,r24
 43231 1291e 8081      		ld r24,Z
 43232 12920 9181      		ldd r25,Z+1
 43233 12922 98A3      		std Y+32,r25
 43234 12924 8F8F      		std Y+31,r24
3858:lp_solve_5.5/lp_presolve.c ****           if(!presolve_colfix(psdata, jx, 0, TRUE, &iVarFixed)) {
 43235               		.loc 2 3858 0
 43236 12926 9E01      		movw r18,r28
 43237 12928 275D      		subi r18,-41
 43238 1292a 3F4F      		sbci r19,-1
 43239 1292c 6F8D      		ldd r22,Y+31
 43240 1292e 78A1      		ldd r23,Y+32
 43241 12930 8DA5      		ldd r24,Y+45
 43242 12932 9EA5      		ldd r25,Y+46
 43243 12934 7901      		movw r14,r18
 43244 12936 01E0      		ldi r16,lo8(1)
 43245 12938 20E0      		ldi r18,0
 43246 1293a 30E0      		ldi r19,0
 43247 1293c A901      		movw r20,r18
 43248 1293e 0E94 0000 		call presolve_colfix
 43249 12942 8823      		tst r24
 43250 12944 01F4      		brne .L1803
3859:lp_solve_5.5/lp_presolve.c ****              status = presolve_setstatus(psdata, INFEASIBLE);
 43251               		.loc 2 3859 0
 43252 12946 8DA5      		ldd r24,Y+45
 43253 12948 9EA5      		ldd r25,Y+46
 43254 1294a 20E0      		ldi r18,lo8(.LC21)
 43255 1294c 30E0      		ldi r19,hi8(.LC21)
 43256 1294e 43E1      		ldi r20,lo8(19)
 43257 12950 5FE0      		ldi r21,lo8(15)
 43258 12952 62E0      		ldi r22,lo8(2)
 43259 12954 70E0      		ldi r23,0
 43260 12956 0E94 0000 		call presolve_setstatusex
 43261 1295a 9C87      		std Y+12,r25
 43262 1295c 8B87      		std Y+11,r24
3860:lp_solve_5.5/lp_presolve.c ****              goto Finish;
 43263               		.loc 2 3860 0
 43264 1295e 00C0      		rjmp .L1759
 43265               	.L1803:
3861:lp_solve_5.5/lp_presolve.c ****           }
3862:lp_solve_5.5/lp_presolve.c ****           presolve_colremove(psdata, jx, TRUE);
 43266               		.loc 2 3862 0 discriminator 2
 43267 12960 2F8D      		ldd r18,Y+31
 43268 12962 38A1      		ldd r19,Y+32
 43269 12964 8DA5      		ldd r24,Y+45
 43270 12966 9EA5      		ldd r25,Y+46
 43271 12968 41E0      		ldi r20,lo8(1)
 43272 1296a B901      		movw r22,r18
 43273 1296c 0E94 0000 		call presolve_colremove
3863:lp_solve_5.5/lp_presolve.c ****           rowvalues[jx] = 0;
 43274               		.loc 2 3863 0 discriminator 2
 43275 12970 2BA5      		ldd r18,Y+43
 43276 12972 3CA5      		ldd r19,Y+44
 43277 12974 8F8D      		ldd r24,Y+31
 43278 12976 98A1      		ldd r25,Y+32
 43279 12978 880F      		lsl r24
 43280 1297a 991F      		rol r25
 43281 1297c 880F      		lsl r24
 43282 1297e 991F      		rol r25
 43283 12980 820F      		add r24,r18
 43284 12982 931F      		adc r25,r19
 43285 12984 FC01      		movw r30,r24
 43286 12986 1082      		st Z,__zero_reg__
 43287 12988 1182      		std Z+1,__zero_reg__
 43288 1298a 1282      		std Z+2,__zero_reg__
 43289 1298c 1382      		std Z+3,__zero_reg__
3856:lp_solve_5.5/lp_presolve.c ****           jx = coldel[jb];
 43290               		.loc 2 3856 0 discriminator 2
 43291 1298e 8985      		ldd r24,Y+9
 43292 12990 9A85      		ldd r25,Y+10
 43293 12992 0196      		adiw r24,1
 43294 12994 9A87      		std Y+10,r25
 43295 12996 8987      		std Y+9,r24
 43296               	.L1802:
3856:lp_solve_5.5/lp_presolve.c ****           jx = coldel[jb];
 43297               		.loc 2 3856 0 is_stmt 0 discriminator 1
 43298 12998 8DA1      		ldd r24,Y+37
 43299 1299a 9EA1      		ldd r25,Y+38
 43300 1299c FC01      		movw r30,r24
 43301 1299e 2081      		ld r18,Z
 43302 129a0 3181      		ldd r19,Z+1
 43303 129a2 8985      		ldd r24,Y+9
 43304 129a4 9A85      		ldd r25,Y+10
 43305 129a6 2817      		cp r18,r24
 43306 129a8 3907      		cpc r19,r25
 43307 129aa 04F0      		brlt .+2
 43308 129ac 00C0      		rjmp .L1804
3864:lp_solve_5.5/lp_presolve.c ****         }
3865:lp_solve_5.5/lp_presolve.c **** 
3866:lp_solve_5.5/lp_presolve.c ****         /* Then delete the row */
3867:lp_solve_5.5/lp_presolve.c ****         presolve_rowremove(psdata, ii, TRUE);
 43309               		.loc 2 3867 0 is_stmt 1
 43310 129ae 29A1      		ldd r18,Y+33
 43311 129b0 3AA1      		ldd r19,Y+34
 43312 129b2 8DA5      		ldd r24,Y+45
 43313 129b4 9EA5      		ldd r25,Y+46
 43314 129b6 41E0      		ldi r20,lo8(1)
 43315 129b8 B901      		movw r22,r18
 43316 129ba 0E94 0000 		call presolve_rowremove
3868:lp_solve_5.5/lp_presolve.c ****         iRowRemoved++;
 43317               		.loc 2 3868 0
 43318 129be 8D85      		ldd r24,Y+13
 43319 129c0 9E85      		ldd r25,Y+14
 43320 129c2 0196      		adiw r24,1
 43321 129c4 9E87      		std Y+14,r25
 43322 129c6 8D87      		std Y+13,r24
3869:lp_solve_5.5/lp_presolve.c ****         QS[ie].int4.intval = -ii;
 43323               		.loc 2 3869 0
 43324 129c8 8D81      		ldd r24,Y+5
 43325 129ca 9E81      		ldd r25,Y+6
 43326 129cc 880F      		lsl r24
 43327 129ce 991F      		rol r25
 43328 129d0 880F      		lsl r24
 43329 129d2 991F      		rol r25
 43330 129d4 880F      		lsl r24
 43331 129d6 991F      		rol r25
 43332 129d8 2B8D      		ldd r18,Y+27
 43333 129da 3C8D      		ldd r19,Y+28
 43334 129dc 820F      		add r24,r18
 43335 129de 931F      		adc r25,r19
 43336 129e0 29A1      		ldd r18,Y+33
 43337 129e2 3AA1      		ldd r19,Y+34
 43338 129e4 3195      		neg r19
 43339 129e6 2195      		neg r18
 43340 129e8 3109      		sbc r19,__zero_reg__
 43341 129ea FC01      		movw r30,r24
 43342 129ec 3183      		std Z+1,r19
 43343 129ee 2083      		st Z,r18
 43344 129f0 00C0      		rjmp .L1767
 43345               	.L1826:
 43346               	.LBE10:
3778:lp_solve_5.5/lp_presolve.c **** 
 43347               		.loc 2 3778 0
 43348 129f2 0000      		nop
 43349 129f4 00C0      		rjmp .L1767
 43350               	.L1829:
 43351               	.LBB11:
3853:lp_solve_5.5/lp_presolve.c **** 
 43352               		.loc 2 3853 0
 43353 129f6 0000      		nop
 43354               	.L1767:
 43355               	.LBE11:
3773:lp_solve_5.5/lp_presolve.c **** 
 43356               		.loc 2 3773 0 discriminator 2
 43357 129f8 8D81      		ldd r24,Y+5
 43358 129fa 9E81      		ldd r25,Y+6
 43359 129fc 0196      		adiw r24,1
 43360 129fe 9E83      		std Y+6,r25
 43361 12a00 8D83      		std Y+5,r24
 43362               	.L1765:
3773:lp_solve_5.5/lp_presolve.c **** 
 43363               		.loc 2 3773 0 is_stmt 0 discriminator 1
 43364 12a02 2D81      		ldd r18,Y+5
 43365 12a04 3E81      		ldd r19,Y+6
 43366 12a06 8F81      		ldd r24,Y+7
 43367 12a08 9885      		ldd r25,Y+8
 43368 12a0a 2817      		cp r18,r24
 43369 12a0c 3907      		cpc r19,r25
 43370 12a0e 04F4      		brge .+2
 43371 12a10 00C0      		rjmp .L1805
3870:lp_solve_5.5/lp_presolve.c ****       }
3871:lp_solve_5.5/lp_presolve.c ****     }
3872:lp_solve_5.5/lp_presolve.c **** 
3873:lp_solve_5.5/lp_presolve.c ****     /* Clear the non-zero row values ahead of the next row candidate */
3874:lp_solve_5.5/lp_presolve.c ****     ie = mat->row_end[i-1];
 43372               		.loc 2 3874 0 is_stmt 1
 43373 12a12 8F89      		ldd r24,Y+23
 43374 12a14 988D      		ldd r25,Y+24
 43375 12a16 FC01      		movw r30,r24
 43376 12a18 208D      		ldd r18,Z+24
 43377 12a1a 318D      		ldd r19,Z+25
 43378 12a1c 8981      		ldd r24,Y+1
 43379 12a1e 9A81      		ldd r25,Y+2
 43380 12a20 8150      		subi r24,1
 43381 12a22 9048      		sbci r25,-128
 43382 12a24 880F      		lsl r24
 43383 12a26 991F      		rol r25
 43384 12a28 820F      		add r24,r18
 43385 12a2a 931F      		adc r25,r19
 43386 12a2c FC01      		movw r30,r24
 43387 12a2e 8081      		ld r24,Z
 43388 12a30 9181      		ldd r25,Z+1
 43389 12a32 9E83      		std Y+6,r25
 43390 12a34 8D83      		std Y+5,r24
3875:lp_solve_5.5/lp_presolve.c ****     ii = mat->row_end[i];
 43391               		.loc 2 3875 0
 43392 12a36 8F89      		ldd r24,Y+23
 43393 12a38 988D      		ldd r25,Y+24
 43394 12a3a FC01      		movw r30,r24
 43395 12a3c 208D      		ldd r18,Z+24
 43396 12a3e 318D      		ldd r19,Z+25
 43397 12a40 8981      		ldd r24,Y+1
 43398 12a42 9A81      		ldd r25,Y+2
 43399 12a44 880F      		lsl r24
 43400 12a46 991F      		rol r25
 43401 12a48 820F      		add r24,r18
 43402 12a4a 931F      		adc r25,r19
 43403 12a4c FC01      		movw r30,r24
 43404 12a4e 8081      		ld r24,Z
 43405 12a50 9181      		ldd r25,Z+1
 43406 12a52 9AA3      		std Y+34,r25
 43407 12a54 89A3      		std Y+33,r24
3876:lp_solve_5.5/lp_presolve.c ****     for(; ie < ii; ie++)
 43408               		.loc 2 3876 0
 43409 12a56 00C0      		rjmp .L1806
 43410               	.L1807:
3877:lp_solve_5.5/lp_presolve.c ****       rowvalues[ROW_MAT_COLNR(ie)] = 0;
 43411               		.loc 2 3877 0 discriminator 2
 43412 12a58 2BA5      		ldd r18,Y+43
 43413 12a5a 3CA5      		ldd r19,Y+44
 43414 12a5c 8F89      		ldd r24,Y+23
 43415 12a5e 988D      		ldd r25,Y+24
 43416 12a60 FC01      		movw r30,r24
 43417 12a62 4485      		ldd r20,Z+12
 43418 12a64 5585      		ldd r21,Z+13
 43419 12a66 8F89      		ldd r24,Y+23
 43420 12a68 988D      		ldd r25,Y+24
 43421 12a6a FC01      		movw r30,r24
 43422 12a6c 6689      		ldd r22,Z+22
 43423 12a6e 7789      		ldd r23,Z+23
 43424 12a70 8D81      		ldd r24,Y+5
 43425 12a72 9E81      		ldd r25,Y+6
 43426 12a74 880F      		lsl r24
 43427 12a76 991F      		rol r25
 43428 12a78 860F      		add r24,r22
 43429 12a7a 971F      		adc r25,r23
 43430 12a7c FC01      		movw r30,r24
 43431 12a7e 8081      		ld r24,Z
 43432 12a80 9181      		ldd r25,Z+1
 43433 12a82 880F      		lsl r24
 43434 12a84 991F      		rol r25
 43435 12a86 840F      		add r24,r20
 43436 12a88 951F      		adc r25,r21
 43437 12a8a FC01      		movw r30,r24
 43438 12a8c 8081      		ld r24,Z
 43439 12a8e 9181      		ldd r25,Z+1
 43440 12a90 880F      		lsl r24
 43441 12a92 991F      		rol r25
 43442 12a94 880F      		lsl r24
 43443 12a96 991F      		rol r25
 43444 12a98 820F      		add r24,r18
 43445 12a9a 931F      		adc r25,r19
 43446 12a9c FC01      		movw r30,r24
 43447 12a9e 1082      		st Z,__zero_reg__
 43448 12aa0 1182      		std Z+1,__zero_reg__
 43449 12aa2 1282      		std Z+2,__zero_reg__
 43450 12aa4 1382      		std Z+3,__zero_reg__
3876:lp_solve_5.5/lp_presolve.c ****     for(; ie < ii; ie++)
 43451               		.loc 2 3876 0 discriminator 2
 43452 12aa6 8D81      		ldd r24,Y+5
 43453 12aa8 9E81      		ldd r25,Y+6
 43454 12aaa 0196      		adiw r24,1
 43455 12aac 9E83      		std Y+6,r25
 43456 12aae 8D83      		std Y+5,r24
 43457               	.L1806:
3876:lp_solve_5.5/lp_presolve.c ****     for(; ie < ii; ie++)
 43458               		.loc 2 3876 0 is_stmt 0 discriminator 1
 43459 12ab0 2D81      		ldd r18,Y+5
 43460 12ab2 3E81      		ldd r19,Y+6
 43461 12ab4 89A1      		ldd r24,Y+33
 43462 12ab6 9AA1      		ldd r25,Y+34
 43463 12ab8 2817      		cp r18,r24
 43464 12aba 3907      		cpc r19,r25
 43465 12abc 04F0      		brlt .L1807
 43466 12abe 00C0      		rjmp .L1762
 43467               	.L1825:
3763:lp_solve_5.5/lp_presolve.c **** 
 43468               		.loc 2 3763 0 is_stmt 1
 43469 12ac0 0000      		nop
 43470               	.L1762:
3758:lp_solve_5.5/lp_presolve.c **** 
 43471               		.loc 2 3758 0 discriminator 2
 43472 12ac2 8B81      		ldd r24,Y+3
 43473 12ac4 9C81      		ldd r25,Y+4
 43474 12ac6 0196      		adiw r24,1
 43475 12ac8 9C83      		std Y+4,r25
 43476 12aca 8B83      		std Y+3,r24
 43477               	.L1760:
3758:lp_solve_5.5/lp_presolve.c **** 
 43478               		.loc 2 3758 0 is_stmt 0 discriminator 1
 43479 12acc 2B81      		ldd r18,Y+3
 43480 12ace 3C81      		ldd r19,Y+4
 43481 12ad0 8F81      		ldd r24,Y+7
 43482 12ad2 9885      		ldd r25,Y+8
 43483 12ad4 2817      		cp r18,r24
 43484 12ad6 3907      		cpc r19,r25
 43485 12ad8 04F4      		brge .+2
 43486 12ada 00C0      		rjmp .L1808
 43487 12adc 00C0      		rjmp .L1759
 43488               	.L1824:
3749:lp_solve_5.5/lp_presolve.c ****   QS_execute(QS, n, (findCompare_func *) compRedundant, NULL);
 43489               		.loc 2 3749 0 is_stmt 1
 43490 12ade 0000      		nop
 43491               	.L1759:
3878:lp_solve_5.5/lp_presolve.c **** 
3879:lp_solve_5.5/lp_presolve.c ****   }
3880:lp_solve_5.5/lp_presolve.c **** Finish:
3881:lp_solve_5.5/lp_presolve.c ****   FREE(QS);
 43492               		.loc 2 3881 0
 43493 12ae0 8B8D      		ldd r24,Y+27
 43494 12ae2 9C8D      		ldd r25,Y+28
 43495 12ae4 892B      		or r24,r25
 43496 12ae6 01F0      		breq .L1809
 43497               		.loc 2 3881 0 is_stmt 0 discriminator 1
 43498 12ae8 8B8D      		ldd r24,Y+27
 43499 12aea 9C8D      		ldd r25,Y+28
 43500 12aec 0E94 0000 		call free
 43501 12af0 1C8E      		std Y+28,__zero_reg__
 43502 12af2 1B8E      		std Y+27,__zero_reg__
 43503               	.L1809:
3882:lp_solve_5.5/lp_presolve.c ****   FREE(rowvalues);
 43504               		.loc 2 3882 0 is_stmt 1
 43505 12af4 8BA5      		ldd r24,Y+43
 43506 12af6 9CA5      		ldd r25,Y+44
 43507 12af8 892B      		or r24,r25
 43508 12afa 01F0      		breq .L1810
 43509               		.loc 2 3882 0 is_stmt 0 discriminator 1
 43510 12afc 8BA5      		ldd r24,Y+43
 43511 12afe 9CA5      		ldd r25,Y+44
 43512 12b00 0E94 0000 		call free
 43513 12b04 1CA6      		std Y+44,__zero_reg__
 43514 12b06 1BA6      		std Y+43,__zero_reg__
 43515               	.L1810:
3883:lp_solve_5.5/lp_presolve.c ****   FREE(coldel);
 43516               		.loc 2 3883 0 is_stmt 1
 43517 12b08 8DA1      		ldd r24,Y+37
 43518 12b0a 9EA1      		ldd r25,Y+38
 43519 12b0c 892B      		or r24,r25
 43520 12b0e 01F0      		breq .L1811
 43521               		.loc 2 3883 0 is_stmt 0 discriminator 1
 43522 12b10 8DA1      		ldd r24,Y+37
 43523 12b12 9EA1      		ldd r25,Y+38
 43524 12b14 0E94 0000 		call free
 43525 12b18 1EA2      		std Y+38,__zero_reg__
 43526 12b1a 1DA2      		std Y+37,__zero_reg__
 43527               	.L1811:
3884:lp_solve_5.5/lp_presolve.c **** 
3885:lp_solve_5.5/lp_presolve.c ****   (*nCoeffChanged) += iCoeffChanged;
 43528               		.loc 2 3885 0 is_stmt 1
 43529 12b1c 8FA5      		ldd r24,Y+47
 43530 12b1e 98A9      		ldd r25,Y+48
 43531 12b20 FC01      		movw r30,r24
 43532 12b22 2081      		ld r18,Z
 43533 12b24 3181      		ldd r19,Z+1
 43534 12b26 898D      		ldd r24,Y+25
 43535 12b28 9A8D      		ldd r25,Y+26
 43536 12b2a 280F      		add r18,r24
 43537 12b2c 391F      		adc r19,r25
 43538 12b2e 8FA5      		ldd r24,Y+47
 43539 12b30 98A9      		ldd r25,Y+48
 43540 12b32 FC01      		movw r30,r24
 43541 12b34 3183      		std Z+1,r19
 43542 12b36 2083      		st Z,r18
3886:lp_solve_5.5/lp_presolve.c ****   (*nRowsRemoved)  += iRowRemoved;
 43543               		.loc 2 3886 0
 43544 12b38 89A9      		ldd r24,Y+49
 43545 12b3a 9AA9      		ldd r25,Y+50
 43546 12b3c FC01      		movw r30,r24
 43547 12b3e 2081      		ld r18,Z
 43548 12b40 3181      		ldd r19,Z+1
 43549 12b42 8D85      		ldd r24,Y+13
 43550 12b44 9E85      		ldd r25,Y+14
 43551 12b46 280F      		add r18,r24
 43552 12b48 391F      		adc r19,r25
 43553 12b4a 89A9      		ldd r24,Y+49
 43554 12b4c 9AA9      		ldd r25,Y+50
 43555 12b4e FC01      		movw r30,r24
 43556 12b50 3183      		std Z+1,r19
 43557 12b52 2083      		st Z,r18
3887:lp_solve_5.5/lp_presolve.c ****   (*nVarsFixed)    += iVarFixed;
 43558               		.loc 2 3887 0
 43559 12b54 8BA9      		ldd r24,Y+51
 43560 12b56 9CA9      		ldd r25,Y+52
 43561 12b58 FC01      		movw r30,r24
 43562 12b5a 2081      		ld r18,Z
 43563 12b5c 3181      		ldd r19,Z+1
 43564 12b5e 89A5      		ldd r24,Y+41
 43565 12b60 9AA5      		ldd r25,Y+42
 43566 12b62 280F      		add r18,r24
 43567 12b64 391F      		adc r19,r25
 43568 12b66 8BA9      		ldd r24,Y+51
 43569 12b68 9CA9      		ldd r25,Y+52
 43570 12b6a FC01      		movw r30,r24
 43571 12b6c 3183      		std Z+1,r19
 43572 12b6e 2083      		st Z,r18
3888:lp_solve_5.5/lp_presolve.c ****   (*nSum)          += iCoeffChanged + iRowRemoved + iVarFixed;
 43573               		.loc 2 3888 0
 43574 12b70 8DA9      		ldd r24,Y+53
 43575 12b72 9EA9      		ldd r25,Y+54
 43576 12b74 FC01      		movw r30,r24
 43577 12b76 2081      		ld r18,Z
 43578 12b78 3181      		ldd r19,Z+1
 43579 12b7a 498D      		ldd r20,Y+25
 43580 12b7c 5A8D      		ldd r21,Y+26
 43581 12b7e 8D85      		ldd r24,Y+13
 43582 12b80 9E85      		ldd r25,Y+14
 43583 12b82 480F      		add r20,r24
 43584 12b84 591F      		adc r21,r25
 43585 12b86 89A5      		ldd r24,Y+41
 43586 12b88 9AA5      		ldd r25,Y+42
 43587 12b8a 840F      		add r24,r20
 43588 12b8c 951F      		adc r25,r21
 43589 12b8e 280F      		add r18,r24
 43590 12b90 391F      		adc r19,r25
 43591 12b92 8DA9      		ldd r24,Y+53
 43592 12b94 9EA9      		ldd r25,Y+54
 43593 12b96 FC01      		movw r30,r24
 43594 12b98 3183      		std Z+1,r19
 43595 12b9a 2083      		st Z,r18
3889:lp_solve_5.5/lp_presolve.c **** 
3890:lp_solve_5.5/lp_presolve.c ****   return( status );
 43596               		.loc 2 3890 0
 43597 12b9c 8B85      		ldd r24,Y+11
 43598 12b9e 9C85      		ldd r25,Y+12
 43599               	.L1812:
 43600               	/* epilogue start */
3891:lp_solve_5.5/lp_presolve.c **** }
 43601               		.loc 2 3891 0 discriminator 1
 43602 12ba0 E696      		adiw r28,54
 43603 12ba2 0FB6      		in __tmp_reg__,__SREG__
 43604 12ba4 F894      		cli
 43605 12ba6 DEBF      		out __SP_H__,r29
 43606 12ba8 0FBE      		out __SREG__,__tmp_reg__
 43607 12baa CDBF      		out __SP_L__,r28
 43608 12bac DF91      		pop r29
 43609 12bae CF91      		pop r28
 43610 12bb0 1F91      		pop r17
 43611 12bb2 0F91      		pop r16
 43612 12bb4 FF90      		pop r15
 43613 12bb6 EF90      		pop r14
 43614 12bb8 DF90      		pop r13
 43615 12bba CF90      		pop r12
 43616 12bbc 0895      		ret
 43617               		.cfi_endproc
 43618               	.LFE83:
 43620               	.global	presolve_coldominance01
 43622               	presolve_coldominance01:
 43623               	.LFB84:
3892:lp_solve_5.5/lp_presolve.c **** 
3893:lp_solve_5.5/lp_presolve.c **** #if 0
3894:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_coldominance01(presolverec *psdata, int *nConRemoved, int *nVarsFixed, int *nSu
3895:lp_solve_5.5/lp_presolve.c **** /* The current version of this routine eliminates binary variables
3896:lp_solve_5.5/lp_presolve.c ****    that are dominated via set coverage or unit knapsack constraints */
3897:lp_solve_5.5/lp_presolve.c **** {
3898:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
3899:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
3900:lp_solve_5.5/lp_presolve.c ****   MYBOOL   first;
3901:lp_solve_5.5/lp_presolve.c ****   int      i, ii, ib, ie, n, jb, je, jx, jj, item, item2,
3902:lp_solve_5.5/lp_presolve.c ****            *coldel = NULL, status = RUNNING, iVarFixed = 0;
3903:lp_solve_5.5/lp_presolve.c ****   REAL     scale, rhsval, *colvalues = NULL;
3904:lp_solve_5.5/lp_presolve.c ****   UNIONTYPE QSORTrec *QS = (UNIONTYPE QSORTrec *) calloc(lp->columns+1, sizeof(*QS));
3905:lp_solve_5.5/lp_presolve.c **** 
3906:lp_solve_5.5/lp_presolve.c ****   /* Check if we were able to obtain working memory */
3907:lp_solve_5.5/lp_presolve.c ****   if(QS == NULL)
3908:lp_solve_5.5/lp_presolve.c ****     return( status);
3909:lp_solve_5.5/lp_presolve.c ****   if(lp->int_vars == 0)
3910:lp_solve_5.5/lp_presolve.c ****     goto Finish;
3911:lp_solve_5.5/lp_presolve.c **** 
3912:lp_solve_5.5/lp_presolve.c ****   /* A column dominates another binary variable column with the following criteria:
3913:lp_solve_5.5/lp_presolve.c ****       1) The relative matrix non-zero entries are identical
3914:lp_solve_5.5/lp_presolve.c ****       2) The relative objective coefficient is worse than the other;
3915:lp_solve_5.5/lp_presolve.c ****          if the OF coefficients are identical, we can delete an arbitrary variable */
3916:lp_solve_5.5/lp_presolve.c ****   n = 0;
3917:lp_solve_5.5/lp_presolve.c ****   for(i = firstActiveLink(psdata->cols->varmap); i != 0; i = nextActiveLink(psdata->cols->varmap, i
3918:lp_solve_5.5/lp_presolve.c ****     if(is_binary(lp, i) && !SOS_is_member(lp->SOS, 0, i)) {
3919:lp_solve_5.5/lp_presolve.c ****       /* Make sure we have an all-binary, unit-coefficient row */
3920:lp_solve_5.5/lp_presolve.c ****       je = mat->col_end[i];
3921:lp_solve_5.5/lp_presolve.c ****       item = 0;
3922:lp_solve_5.5/lp_presolve.c ****       for(jb = presolve_nextrow(psdata, i, &item); jb >= 0;
3923:lp_solve_5.5/lp_presolve.c ****           jb = presolve_nextrow(psdata, i, &item)) {
3924:lp_solve_5.5/lp_presolve.c ****         jx = COL_MAT_ROWNR(jb);
3925:lp_solve_5.5/lp_presolve.c ****         if(COL_MAT_VALUE(jb) != 1)
3926:lp_solve_5.5/lp_presolve.c ****           break;
3927:lp_solve_5.5/lp_presolve.c ****       }
3928:lp_solve_5.5/lp_presolve.c **** 
3929:lp_solve_5.5/lp_presolve.c ****       /* Add to list if we are Ok */
3930:lp_solve_5.5/lp_presolve.c ****       if(jb < 0) {
3931:lp_solve_5.5/lp_presolve.c ****         QS[n].int4.intval = i;
3932:lp_solve_5.5/lp_presolve.c ****         item = 0;
3933:lp_solve_5.5/lp_presolve.c ****         ii = presolve_nextrow(psdata, i, &item);
3934:lp_solve_5.5/lp_presolve.c ****         QS[n].int4.intpar1 = COL_MAT_ROWNR(ii);
3935:lp_solve_5.5/lp_presolve.c ****         ii = presolve_collength(psdata, i);
3936:lp_solve_5.5/lp_presolve.c ****         QS[n].int4.intpar2 = ii;
3937:lp_solve_5.5/lp_presolve.c ****         n++;
3938:lp_solve_5.5/lp_presolve.c ****       }
3939:lp_solve_5.5/lp_presolve.c ****     }
3940:lp_solve_5.5/lp_presolve.c ****   if(n <= 1) {
3941:lp_solve_5.5/lp_presolve.c ****     FREE(QS);
3942:lp_solve_5.5/lp_presolve.c ****     return( status );
3943:lp_solve_5.5/lp_presolve.c ****   }
3944:lp_solve_5.5/lp_presolve.c ****   QS_execute(QS, n, (findCompare_func *) compRedundant, NULL);
3945:lp_solve_5.5/lp_presolve.c **** 
3946:lp_solve_5.5/lp_presolve.c ****   /* Let us start from the top of the list, going forward and looking
3947:lp_solve_5.5/lp_presolve.c ****     for the longest possible dominated column */
3948:lp_solve_5.5/lp_presolve.c ****   if(!allocREAL(lp, &colvalues, lp->rows + 1, TRUE) ||
3949:lp_solve_5.5/lp_presolve.c ****      !allocINT(lp, &coldel, lp->columns + 1, FALSE))
3950:lp_solve_5.5/lp_presolve.c ****     goto Finish;
3951:lp_solve_5.5/lp_presolve.c **** 
3952:lp_solve_5.5/lp_presolve.c ****   for(ib = 0; ib < n; ib++) {
3953:lp_solve_5.5/lp_presolve.c **** 
3954:lp_solve_5.5/lp_presolve.c ****     /* Get column and check if it was previously eliminated */
3955:lp_solve_5.5/lp_presolve.c ****     i = QS[ib].int4.intval;
3956:lp_solve_5.5/lp_presolve.c ****     if(i < 0)
3957:lp_solve_5.5/lp_presolve.c ****       continue;
3958:lp_solve_5.5/lp_presolve.c **** 
3959:lp_solve_5.5/lp_presolve.c ****     /* Load the non-zero column values */
3960:lp_solve_5.5/lp_presolve.c ****     item = 0;
3961:lp_solve_5.5/lp_presolve.c ****     for(jb = presolve_nextrow(psdata, i, &item); jb >= 0;
3962:lp_solve_5.5/lp_presolve.c ****         jb = presolve_nextrow(psdata, i, &item)) {
3963:lp_solve_5.5/lp_presolve.c ****       jx = COL_MAT_ROWNR(jb);
3964:lp_solve_5.5/lp_presolve.c ****       colvalues[jx] = COL_MAT_VALUE(jb);
3965:lp_solve_5.5/lp_presolve.c ****     }
3966:lp_solve_5.5/lp_presolve.c **** 
3967:lp_solve_5.5/lp_presolve.c ****     coldel[0] = 0;
3968:lp_solve_5.5/lp_presolve.c ****     for(ie = ib+1; ie < n; ie++) {
3969:lp_solve_5.5/lp_presolve.c **** 
3970:lp_solve_5.5/lp_presolve.c ****       /* Insist on identical column lengths (sort is decending in column lengths) */
3971:lp_solve_5.5/lp_presolve.c ****       ii = QS[ib].int4.intpar2 - QS[ie].int4.intpar2;
3972:lp_solve_5.5/lp_presolve.c ****       if(ii != 0)
3973:lp_solve_5.5/lp_presolve.c ****         break;
3974:lp_solve_5.5/lp_presolve.c **** 
3975:lp_solve_5.5/lp_presolve.c ****       /* Also insist on identical starting positions */
3976:lp_solve_5.5/lp_presolve.c ****       ii = QS[ib].int4.intpar1 - QS[ie].int4.intpar1;
3977:lp_solve_5.5/lp_presolve.c ****       if(ii != 0)
3978:lp_solve_5.5/lp_presolve.c ****         break;
3979:lp_solve_5.5/lp_presolve.c **** 
3980:lp_solve_5.5/lp_presolve.c ****       /* Get column and check if it was previously eliminated */
3981:lp_solve_5.5/lp_presolve.c ****       ii = QS[ie].int4.intval;
3982:lp_solve_5.5/lp_presolve.c ****       if(ii < 0)
3983:lp_solve_5.5/lp_presolve.c ****         continue;
3984:lp_solve_5.5/lp_presolve.c **** 
3985:lp_solve_5.5/lp_presolve.c ****       /* Also make sure that the variables have "compatible" bounds */
3986:lp_solve_5.5/lp_presolve.c **** #if 1
3987:lp_solve_5.5/lp_presolve.c ****       if((fabs(my_reldiff(lp->orig_lowbo[lp->rows + i], lp->orig_lowbo[lp->rows + ii])) > psdata->e
3988:lp_solve_5.5/lp_presolve.c ****          (fabs(my_reldiff(lp->orig_upbo[lp->rows + i],  lp->orig_upbo[lp->rows + ii] )) > psdata->e
3989:lp_solve_5.5/lp_presolve.c ****         continue;
3990:lp_solve_5.5/lp_presolve.c **** #endif
3991:lp_solve_5.5/lp_presolve.c **** 
3992:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
3993:lp_solve_5.5/lp_presolve.c ****       if((QS[ib].int4.intpar1 > QS[ie].int4.intpar1) ||
3994:lp_solve_5.5/lp_presolve.c ****          ((QS[ib].int4.intpar1 == QS[ie].int4.intpar1) && (QS[ib].int4.intpar2 < QS[ie].int4.intpar
3995:lp_solve_5.5/lp_presolve.c ****         report(lp, SEVERE, "presolve_coldominance01: Invalid sorted column order\n");
3996:lp_solve_5.5/lp_presolve.c **** #endif
3997:lp_solve_5.5/lp_presolve.c **** 
3998:lp_solve_5.5/lp_presolve.c ****       /* Loop over every column member to confirm that the candidate is
3999:lp_solve_5.5/lp_presolve.c ****         relatively identical in every position */
4000:lp_solve_5.5/lp_presolve.c ****       first = TRUE;
4001:lp_solve_5.5/lp_presolve.c ****       item = 0;
4002:lp_solve_5.5/lp_presolve.c ****       item2 = 0;
4003:lp_solve_5.5/lp_presolve.c ****       scale = 1;
4004:lp_solve_5.5/lp_presolve.c ****       for(jb = presolve_nextrow(psdata, ii, &item),
4005:lp_solve_5.5/lp_presolve.c ****           jj = presolve_nextrow(psdata, i, &item2); jb >= 0;
4006:lp_solve_5.5/lp_presolve.c ****           jb = presolve_nextrow(psdata, ii, &item),
4007:lp_solve_5.5/lp_presolve.c ****           jj = presolve_nextrow(psdata, i, &item2)) {
4008:lp_solve_5.5/lp_presolve.c ****         jx = COL_MAT_ROWNR(jb);
4009:lp_solve_5.5/lp_presolve.c ****         if(jx != COL_MAT_ROWNR(jj))
4010:lp_solve_5.5/lp_presolve.c ****           break;
4011:lp_solve_5.5/lp_presolve.c ****         if(first) {
4012:lp_solve_5.5/lp_presolve.c ****           first = !first;
4013:lp_solve_5.5/lp_presolve.c ****           scale = colvalues[jx] / COL_MAT_VALUE(jb);
4014:lp_solve_5.5/lp_presolve.c ****         }
4015:lp_solve_5.5/lp_presolve.c ****         else {
4016:lp_solve_5.5/lp_presolve.c ****           if(fabs(colvalues[jx] - scale * COL_MAT_VALUE(jb)) > psdata->epsvalue)
4017:lp_solve_5.5/lp_presolve.c ****             break;
4018:lp_solve_5.5/lp_presolve.c ****         }
4019:lp_solve_5.5/lp_presolve.c ****         /* Also make sure we have a compatible RHS (since this version of the
4020:lp_solve_5.5/lp_presolve.c ****           dominance logic only applies to "sets") */
4021:lp_solve_5.5/lp_presolve.c ****         rhsval = scale*lp->orig_rhs[jx] - 1.0;
4022:lp_solve_5.5/lp_presolve.c ****         /* if((rhsval < 0) || (rhsval > 1 + psdata->epsvalue)) */
4023:lp_solve_5.5/lp_presolve.c ****         if(fabs(rhsval) > psdata->epsvalue)
4024:lp_solve_5.5/lp_presolve.c ****           break;
4025:lp_solve_5.5/lp_presolve.c ****       }
4026:lp_solve_5.5/lp_presolve.c **** 
4027:lp_solve_5.5/lp_presolve.c ****       /* "We have contact" */
4028:lp_solve_5.5/lp_presolve.c ****       if(jb < 0) {
4029:lp_solve_5.5/lp_presolve.c ****         coldel[++coldel[0]] = ii;
4030:lp_solve_5.5/lp_presolve.c ****         QS[ie].int4.intval = -ii;
4031:lp_solve_5.5/lp_presolve.c ****       }
4032:lp_solve_5.5/lp_presolve.c ****     }
4033:lp_solve_5.5/lp_presolve.c **** 
4034:lp_solve_5.5/lp_presolve.c ****     /* Find the dominant column and delete / fix the others;
4035:lp_solve_5.5/lp_presolve.c ****        if there is a tie, simply delete the second candidate */
4036:lp_solve_5.5/lp_presolve.c ****     ii = i;
4037:lp_solve_5.5/lp_presolve.c ****     for(jb = 1; jb <= coldel[0]; jb++) {
4038:lp_solve_5.5/lp_presolve.c ****       jx = coldel[jb];
4039:lp_solve_5.5/lp_presolve.c ****       if(lp->orig_obj[jx] < lp->orig_obj[ii])
4040:lp_solve_5.5/lp_presolve.c ****         swapINT(&ii, &coldel[jb]);
4041:lp_solve_5.5/lp_presolve.c ****     }
4042:lp_solve_5.5/lp_presolve.c ****     for(jb = 1; jb <= coldel[0]; jb++) {
4043:lp_solve_5.5/lp_presolve.c ****       jx = coldel[jb];
4044:lp_solve_5.5/lp_presolve.c ****       if(!presolve_colfix(psdata, jx, lp->orig_lowbo[lp->rows+jx], TRUE, &iVarFixed)) {
4045:lp_solve_5.5/lp_presolve.c ****          status = presolve_setstatus(psdata, INFEASIBLE);
4046:lp_solve_5.5/lp_presolve.c ****          goto Finish;
4047:lp_solve_5.5/lp_presolve.c ****       }
4048:lp_solve_5.5/lp_presolve.c ****       presolve_colremove(psdata, jx, TRUE);
4049:lp_solve_5.5/lp_presolve.c ****     }
4050:lp_solve_5.5/lp_presolve.c **** 
4051:lp_solve_5.5/lp_presolve.c ****     /* Clear the non-zero row values ahead of the next row candidate */
4052:lp_solve_5.5/lp_presolve.c ****     if(ib + 1 < n) {
4053:lp_solve_5.5/lp_presolve.c ****       ie = mat->col_end[i-1];
4054:lp_solve_5.5/lp_presolve.c ****       ii = mat->col_end[i];
4055:lp_solve_5.5/lp_presolve.c ****       for(; ie < ii; ie++)
4056:lp_solve_5.5/lp_presolve.c ****         colvalues[COL_MAT_ROWNR(ie)] = 0;
4057:lp_solve_5.5/lp_presolve.c ****     }
4058:lp_solve_5.5/lp_presolve.c ****   }
4059:lp_solve_5.5/lp_presolve.c **** Finish:
4060:lp_solve_5.5/lp_presolve.c ****   FREE(QS);
4061:lp_solve_5.5/lp_presolve.c ****   FREE(colvalues);
4062:lp_solve_5.5/lp_presolve.c ****   FREE(coldel);
4063:lp_solve_5.5/lp_presolve.c **** 
4064:lp_solve_5.5/lp_presolve.c ****   (*nVarsFixed) += iVarFixed;
4065:lp_solve_5.5/lp_presolve.c ****   (*nSum)       += iVarFixed;
4066:lp_solve_5.5/lp_presolve.c **** 
4067:lp_solve_5.5/lp_presolve.c ****   return( status );
4068:lp_solve_5.5/lp_presolve.c **** }
4069:lp_solve_5.5/lp_presolve.c **** #else
4070:lp_solve_5.5/lp_presolve.c **** 
4071:lp_solve_5.5/lp_presolve.c **** /* DEVELOPMENT/TEST CODE FOR POSSIBLE REPLACEMENT OF SIMILAR FUNCTION IN lp_presolve.c */
4072:lp_solve_5.5/lp_presolve.c **** 
4073:lp_solve_5.5/lp_presolve.c **** #define NATURAL int
4074:lp_solve_5.5/lp_presolve.c **** 
4075:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_coldominance01(presolverec *psdata, NATURAL *nConRemoved, NATURAL *nVarsFixed, 
4076:lp_solve_5.5/lp_presolve.c **** /* The current version of this routine eliminates binary variables
4077:lp_solve_5.5/lp_presolve.c ****    that are dominated via set coverage or unit knapsack constraints */
4078:lp_solve_5.5/lp_presolve.c **** {
 43624               		.loc 2 4078 0
 43625               		.cfi_startproc
 43626 12bbe AF92      		push r10
 43627               	.LCFI509:
 43628               		.cfi_def_cfa_offset 3
 43629               		.cfi_offset 10, -2
 43630 12bc0 BF92      		push r11
 43631               	.LCFI510:
 43632               		.cfi_def_cfa_offset 4
 43633               		.cfi_offset 11, -3
 43634 12bc2 CF92      		push r12
 43635               	.LCFI511:
 43636               		.cfi_def_cfa_offset 5
 43637               		.cfi_offset 12, -4
 43638 12bc4 DF92      		push r13
 43639               	.LCFI512:
 43640               		.cfi_def_cfa_offset 6
 43641               		.cfi_offset 13, -5
 43642 12bc6 EF92      		push r14
 43643               	.LCFI513:
 43644               		.cfi_def_cfa_offset 7
 43645               		.cfi_offset 14, -6
 43646 12bc8 FF92      		push r15
 43647               	.LCFI514:
 43648               		.cfi_def_cfa_offset 8
 43649               		.cfi_offset 15, -7
 43650 12bca 0F93      		push r16
 43651               	.LCFI515:
 43652               		.cfi_def_cfa_offset 9
 43653               		.cfi_offset 16, -8
 43654 12bcc CF93      		push r28
 43655               	.LCFI516:
 43656               		.cfi_def_cfa_offset 10
 43657               		.cfi_offset 28, -9
 43658 12bce DF93      		push r29
 43659               	.LCFI517:
 43660               		.cfi_def_cfa_offset 11
 43661               		.cfi_offset 29, -10
 43662 12bd0 CDB7      		in r28,__SP_L__
 43663 12bd2 DEB7      		in r29,__SP_H__
 43664               	.LCFI518:
 43665               		.cfi_def_cfa_register 28
 43666 12bd4 E497      		sbiw r28,52
 43667               	.LCFI519:
 43668               		.cfi_def_cfa_offset 63
 43669 12bd6 0FB6      		in __tmp_reg__,__SREG__
 43670 12bd8 F894      		cli
 43671 12bda DEBF      		out __SP_H__,r29
 43672 12bdc 0FBE      		out __SREG__,__tmp_reg__
 43673 12bde CDBF      		out __SP_L__,r28
 43674               	/* prologue: function */
 43675               	/* frame size = 52 */
 43676               	/* stack size = 61 */
 43677               	.L__stack_usage = 61
 43678 12be0 9EA7      		std Y+46,r25
 43679 12be2 8DA7      		std Y+45,r24
 43680 12be4 78AB      		std Y+48,r23
 43681 12be6 6FA7      		std Y+47,r22
 43682 12be8 5AAB      		std Y+50,r21
 43683 12bea 49AB      		std Y+49,r20
 43684 12bec 3CAB      		std Y+52,r19
 43685 12bee 2BAB      		std Y+51,r18
4079:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 43686               		.loc 2 4079 0
 43687 12bf0 8DA5      		ldd r24,Y+45
 43688 12bf2 9EA5      		ldd r25,Y+46
 43689 12bf4 FC01      		movw r30,r24
 43690 12bf6 8289      		ldd r24,Z+18
 43691 12bf8 9389      		ldd r25,Z+19
 43692 12bfa 9C8B      		std Y+20,r25
 43693 12bfc 8B8B      		std Y+19,r24
4080:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 43694               		.loc 2 4080 0
 43695 12bfe 8B89      		ldd r24,Y+19
 43696 12c00 9C89      		ldd r25,Y+20
 43697 12c02 8A54      		subi r24,74
 43698 12c04 9D4F      		sbci r25,-3
 43699 12c06 FC01      		movw r30,r24
 43700 12c08 8081      		ld r24,Z
 43701 12c0a 9181      		ldd r25,Z+1
 43702 12c0c 9E8B      		std Y+22,r25
 43703 12c0e 8D8B      		std Y+21,r24
4081:lp_solve_5.5/lp_presolve.c ****   NATURAL  i, ib, ie, jx, item, item2,
4082:lp_solve_5.5/lp_presolve.c ****            n = lp->int_vars, iVarFixed = 0, nrows = lp->rows,
 43704               		.loc 2 4082 0
 43705 12c10 8B89      		ldd r24,Y+19
 43706 12c12 9C89      		ldd r25,Y+20
 43707 12c14 8257      		subi r24,114
 43708 12c16 9D4F      		sbci r25,-3
 43709 12c18 FC01      		movw r30,r24
 43710 12c1a 8081      		ld r24,Z
 43711 12c1c 9181      		ldd r25,Z+1
 43712 12c1e 9887      		std Y+8,r25
 43713 12c20 8F83      		std Y+7,r24
 43714 12c22 1CA2      		std Y+36,__zero_reg__
 43715 12c24 1BA2      		std Y+35,__zero_reg__
 43716 12c26 8B89      		ldd r24,Y+19
 43717 12c28 9C89      		ldd r25,Y+20
 43718 12c2a 8651      		subi r24,22
 43719 12c2c 9E4F      		sbci r25,-2
 43720 12c2e FC01      		movw r30,r24
 43721 12c30 8081      		ld r24,Z
 43722 12c32 9181      		ldd r25,Z+1
 43723 12c34 988F      		std Y+24,r25
 43724 12c36 8F8B      		std Y+23,r24
4083:lp_solve_5.5/lp_presolve.c ****            *coldel = NULL;
 43725               		.loc 2 4083 0
 43726 12c38 1EA2      		std Y+38,__zero_reg__
 43727 12c3a 1DA2      		std Y+37,__zero_reg__
4084:lp_solve_5.5/lp_presolve.c ****   int      jb, jj, ii,
4085:lp_solve_5.5/lp_presolve.c ****            status = RUNNING;
 43728               		.loc 2 4085 0
 43729 12c3c 88E0      		ldi r24,lo8(8)
 43730 12c3e 90E0      		ldi r25,0
 43731 12c40 9E87      		std Y+14,r25
 43732 12c42 8D87      		std Y+13,r24
4086:lp_solve_5.5/lp_presolve.c ****   REAL     rhsval = 0.0,
 43733               		.loc 2 4086 0
 43734 12c44 1F86      		std Y+15,__zero_reg__
 43735 12c46 188A      		std Y+16,__zero_reg__
 43736 12c48 198A      		std Y+17,__zero_reg__
 43737 12c4a 1A8A      		std Y+18,__zero_reg__
4087:lp_solve_5.5/lp_presolve.c ****            *colvalues = NULL, *colobj = NULL;
 43738               		.loc 2 4087 0
 43739 12c4c 18A6      		std Y+40,__zero_reg__
 43740 12c4e 1FA2      		std Y+39,__zero_reg__
 43741 12c50 1AA6      		std Y+42,__zero_reg__
 43742 12c52 19A6      		std Y+41,__zero_reg__
4088:lp_solve_5.5/lp_presolve.c ****   LLrec    *sets = NULL;
 43743               		.loc 2 4088 0
 43744 12c54 1CA6      		std Y+44,__zero_reg__
 43745 12c56 1BA6      		std Y+43,__zero_reg__
4089:lp_solve_5.5/lp_presolve.c ****   UNIONTYPE QSORTrec *QS = (UNIONTYPE QSORTrec *) calloc(n+1, sizeof(*QS));
 43746               		.loc 2 4089 0
 43747 12c58 8F81      		ldd r24,Y+7
 43748 12c5a 9885      		ldd r25,Y+8
 43749 12c5c 0196      		adiw r24,1
 43750 12c5e 68E0      		ldi r22,lo8(8)
 43751 12c60 70E0      		ldi r23,0
 43752 12c62 0E94 0000 		call calloc
 43753 12c66 9A8F      		std Y+26,r25
 43754 12c68 898F      		std Y+25,r24
4090:lp_solve_5.5/lp_presolve.c **** 
4091:lp_solve_5.5/lp_presolve.c ****   /* Check if we were able to obtain working memory */
4092:lp_solve_5.5/lp_presolve.c ****   if(QS == NULL)
 43755               		.loc 2 4092 0
 43756 12c6a 898D      		ldd r24,Y+25
 43757 12c6c 9A8D      		ldd r25,Y+26
 43758 12c6e 892B      		or r24,r25
 43759 12c70 01F4      		brne .L1831
4093:lp_solve_5.5/lp_presolve.c ****     return( status);
 43760               		.loc 2 4093 0
 43761 12c72 8D85      		ldd r24,Y+13
 43762 12c74 9E85      		ldd r25,Y+14
 43763 12c76 00C0      		rjmp .L1885
 43764               	.L1831:
4094:lp_solve_5.5/lp_presolve.c ****   if(n == 0)
 43765               		.loc 2 4094 0
 43766 12c78 8F81      		ldd r24,Y+7
 43767 12c7a 9885      		ldd r25,Y+8
 43768 12c7c 892B      		or r24,r25
 43769 12c7e 01F4      		brne .+2
 43770 12c80 00C0      		rjmp .L1887
4095:lp_solve_5.5/lp_presolve.c ****     goto Finish;
4096:lp_solve_5.5/lp_presolve.c **** 
4097:lp_solve_5.5/lp_presolve.c ****   /* Create list of set coverage and knapsack constraints */
4098:lp_solve_5.5/lp_presolve.c ****   createLink(nrows, &sets, NULL);
 43771               		.loc 2 4098 0
 43772 12c82 9E01      		movw r18,r28
 43773 12c84 255D      		subi r18,-43
 43774 12c86 3F4F      		sbci r19,-1
 43775 12c88 8F89      		ldd r24,Y+23
 43776 12c8a 988D      		ldd r25,Y+24
 43777 12c8c 40E0      		ldi r20,0
 43778 12c8e 50E0      		ldi r21,0
 43779 12c90 B901      		movw r22,r18
 43780 12c92 0E94 0000 		call createLink
4099:lp_solve_5.5/lp_presolve.c ****   for(i = firstActiveLink(psdata->rows->varmap); i != 0; i = nextActiveLink(psdata->rows->varmap, i
 43781               		.loc 2 4099 0
 43782 12c96 8DA5      		ldd r24,Y+45
 43783 12c98 9EA5      		ldd r25,Y+46
 43784 12c9a FC01      		movw r30,r24
 43785 12c9c 8081      		ld r24,Z
 43786 12c9e 9181      		ldd r25,Z+1
 43787 12ca0 FC01      		movw r30,r24
 43788 12ca2 8081      		ld r24,Z
 43789 12ca4 9181      		ldd r25,Z+1
 43790 12ca6 0E94 0000 		call firstActiveLink
 43791 12caa 9A83      		std Y+2,r25
 43792 12cac 8983      		std Y+1,r24
 43793 12cae 00C0      		rjmp .L1835
 43794               	.L1845:
4100:lp_solve_5.5/lp_presolve.c ****     if((lp->orig_rhs[i] < 0) || (psdata->rows->negcount[i] > 0))
 43795               		.loc 2 4100 0
 43796 12cb0 8B89      		ldd r24,Y+19
 43797 12cb2 9C89      		ldd r25,Y+20
 43798 12cb4 8A55      		subi r24,90
 43799 12cb6 9D4F      		sbci r25,-3
 43800 12cb8 FC01      		movw r30,r24
 43801 12cba 2081      		ld r18,Z
 43802 12cbc 3181      		ldd r19,Z+1
 43803 12cbe 8981      		ldd r24,Y+1
 43804 12cc0 9A81      		ldd r25,Y+2
 43805 12cc2 880F      		lsl r24
 43806 12cc4 991F      		rol r25
 43807 12cc6 880F      		lsl r24
 43808 12cc8 991F      		rol r25
 43809 12cca 820F      		add r24,r18
 43810 12ccc 931F      		adc r25,r19
 43811 12cce FC01      		movw r30,r24
 43812 12cd0 8081      		ld r24,Z
 43813 12cd2 9181      		ldd r25,Z+1
 43814 12cd4 A281      		ldd r26,Z+2
 43815 12cd6 B381      		ldd r27,Z+3
 43816 12cd8 20E0      		ldi r18,0
 43817 12cda 30E0      		ldi r19,0
 43818 12cdc A901      		movw r20,r18
 43819 12cde BC01      		movw r22,r24
 43820 12ce0 CD01      		movw r24,r26
 43821 12ce2 0E94 0000 		call __ltsf2
 43822 12ce6 8823      		tst r24
 43823 12ce8 04F4      		brge .+2
 43824 12cea 00C0      		rjmp .L1888
 43825               		.loc 2 4100 0 is_stmt 0 discriminator 1
 43826 12cec 8DA5      		ldd r24,Y+45
 43827 12cee 9EA5      		ldd r25,Y+46
 43828 12cf0 FC01      		movw r30,r24
 43829 12cf2 8081      		ld r24,Z
 43830 12cf4 9181      		ldd r25,Z+1
 43831 12cf6 FC01      		movw r30,r24
 43832 12cf8 2085      		ldd r18,Z+8
 43833 12cfa 3185      		ldd r19,Z+9
 43834 12cfc 8981      		ldd r24,Y+1
 43835 12cfe 9A81      		ldd r25,Y+2
 43836 12d00 880F      		lsl r24
 43837 12d02 991F      		rol r25
 43838 12d04 820F      		add r24,r18
 43839 12d06 931F      		adc r25,r19
 43840 12d08 FC01      		movw r30,r24
 43841 12d0a 8081      		ld r24,Z
 43842 12d0c 9181      		ldd r25,Z+1
 43843 12d0e 1816      		cp __zero_reg__,r24
 43844 12d10 1906      		cpc __zero_reg__,r25
 43845 12d12 04F4      		brge .+2
 43846 12d14 00C0      		rjmp .L1888
4101:lp_solve_5.5/lp_presolve.c ****       continue;
4102:lp_solve_5.5/lp_presolve.c ****     item = 0;
 43847               		.loc 2 4102 0 is_stmt 1
 43848 12d16 18A2      		std Y+32,__zero_reg__
 43849 12d18 1F8E      		std Y+31,__zero_reg__
4103:lp_solve_5.5/lp_presolve.c ****     for(jb = presolve_nextcol(psdata, i, &item); jb >= 0;
 43850               		.loc 2 4103 0
 43851 12d1a AE01      		movw r20,r28
 43852 12d1c 415E      		subi r20,-31
 43853 12d1e 5F4F      		sbci r21,-1
 43854 12d20 2981      		ldd r18,Y+1
 43855 12d22 3A81      		ldd r19,Y+2
 43856 12d24 8DA5      		ldd r24,Y+45
 43857 12d26 9EA5      		ldd r25,Y+46
 43858 12d28 B901      		movw r22,r18
 43859 12d2a 0E94 0000 		call presolve_nextcol
 43860 12d2e 9A87      		std Y+10,r25
 43861 12d30 8987      		std Y+9,r24
 43862 12d32 00C0      		rjmp .L1839
 43863               	.L1844:
4104:lp_solve_5.5/lp_presolve.c ****         jb = presolve_nextcol(psdata, i, &item)) {
4105:lp_solve_5.5/lp_presolve.c ****       jx = ROW_MAT_COLNR(jb);
 43864               		.loc 2 4105 0
 43865 12d34 8D89      		ldd r24,Y+21
 43866 12d36 9E89      		ldd r25,Y+22
 43867 12d38 FC01      		movw r30,r24
 43868 12d3a 2485      		ldd r18,Z+12
 43869 12d3c 3585      		ldd r19,Z+13
 43870 12d3e 8D89      		ldd r24,Y+21
 43871 12d40 9E89      		ldd r25,Y+22
 43872 12d42 FC01      		movw r30,r24
 43873 12d44 4689      		ldd r20,Z+22
 43874 12d46 5789      		ldd r21,Z+23
 43875 12d48 8985      		ldd r24,Y+9
 43876 12d4a 9A85      		ldd r25,Y+10
 43877 12d4c 880F      		lsl r24
 43878 12d4e 991F      		rol r25
 43879 12d50 840F      		add r24,r20
 43880 12d52 951F      		adc r25,r21
 43881 12d54 FC01      		movw r30,r24
 43882 12d56 8081      		ld r24,Z
 43883 12d58 9181      		ldd r25,Z+1
 43884 12d5a 880F      		lsl r24
 43885 12d5c 991F      		rol r25
 43886 12d5e 820F      		add r24,r18
 43887 12d60 931F      		adc r25,r19
 43888 12d62 FC01      		movw r30,r24
 43889 12d64 8081      		ld r24,Z
 43890 12d66 9181      		ldd r25,Z+1
 43891 12d68 9C8F      		std Y+28,r25
 43892 12d6a 8B8F      		std Y+27,r24
4106:lp_solve_5.5/lp_presolve.c ****       if(!is_binary(lp, jx))
 43893               		.loc 2 4106 0
 43894 12d6c 2B8D      		ldd r18,Y+27
 43895 12d6e 3C8D      		ldd r19,Y+28
 43896 12d70 8B89      		ldd r24,Y+19
 43897 12d72 9C89      		ldd r25,Y+20
 43898 12d74 B901      		movw r22,r18
 43899 12d76 0E94 0000 		call is_binary
 43900 12d7a 8823      		tst r24
 43901 12d7c 01F4      		brne .+2
 43902 12d7e 00C0      		rjmp .L1889
4107:lp_solve_5.5/lp_presolve.c ****         break;
4108:lp_solve_5.5/lp_presolve.c ****       rhsval = ROW_MAT_VALUE(jb) - 1;
 43903               		.loc 2 4108 0
 43904 12d80 8D89      		ldd r24,Y+21
 43905 12d82 9E89      		ldd r25,Y+22
 43906 12d84 FC01      		movw r30,r24
 43907 12d86 2089      		ldd r18,Z+16
 43908 12d88 3189      		ldd r19,Z+17
 43909 12d8a 8D89      		ldd r24,Y+21
 43910 12d8c 9E89      		ldd r25,Y+22
 43911 12d8e FC01      		movw r30,r24
 43912 12d90 4689      		ldd r20,Z+22
 43913 12d92 5789      		ldd r21,Z+23
 43914 12d94 8985      		ldd r24,Y+9
 43915 12d96 9A85      		ldd r25,Y+10
 43916 12d98 880F      		lsl r24
 43917 12d9a 991F      		rol r25
 43918 12d9c 840F      		add r24,r20
 43919 12d9e 951F      		adc r25,r21
 43920 12da0 FC01      		movw r30,r24
 43921 12da2 8081      		ld r24,Z
 43922 12da4 9181      		ldd r25,Z+1
 43923 12da6 880F      		lsl r24
 43924 12da8 991F      		rol r25
 43925 12daa 880F      		lsl r24
 43926 12dac 991F      		rol r25
 43927 12dae 820F      		add r24,r18
 43928 12db0 931F      		adc r25,r19
 43929 12db2 FC01      		movw r30,r24
 43930 12db4 8081      		ld r24,Z
 43931 12db6 9181      		ldd r25,Z+1
 43932 12db8 A281      		ldd r26,Z+2
 43933 12dba B381      		ldd r27,Z+3
 43934 12dbc 20E0      		ldi r18,0
 43935 12dbe 30E0      		ldi r19,0
 43936 12dc0 40E8      		ldi r20,lo8(-128)
 43937 12dc2 5FE3      		ldi r21,lo8(63)
 43938 12dc4 BC01      		movw r22,r24
 43939 12dc6 CD01      		movw r24,r26
 43940 12dc8 0E94 0000 		call __subsf3
 43941 12dcc DC01      		movw r26,r24
 43942 12dce CB01      		movw r24,r22
 43943 12dd0 8F87      		std Y+15,r24
 43944 12dd2 988B      		std Y+16,r25
 43945 12dd4 A98B      		std Y+17,r26
 43946 12dd6 BA8B      		std Y+18,r27
4109:lp_solve_5.5/lp_presolve.c ****       if(fabs(rhsval) > lp->epsvalue)
 43947               		.loc 2 4109 0
 43948 12dd8 8F85      		ldd r24,Y+15
 43949 12dda 9889      		ldd r25,Y+16
 43950 12ddc A989      		ldd r26,Y+17
 43951 12dde BA89      		ldd r27,Y+18
 43952 12de0 BF77      		andi r27,0x7f
 43953 12de2 2B89      		ldd r18,Y+19
 43954 12de4 3C89      		ldd r19,Y+20
 43955 12de6 2A5E      		subi r18,-22
 43956 12de8 3C4F      		sbci r19,-4
 43957 12dea F901      		movw r30,r18
 43958 12dec 2081      		ld r18,Z
 43959 12dee 3181      		ldd r19,Z+1
 43960 12df0 4281      		ldd r20,Z+2
 43961 12df2 5381      		ldd r21,Z+3
 43962 12df4 BC01      		movw r22,r24
 43963 12df6 CD01      		movw r24,r26
 43964 12df8 0E94 0000 		call __gtsf2
 43965 12dfc 1816      		cp __zero_reg__,r24
 43966 12dfe 04F0      		brlt .L1890
4104:lp_solve_5.5/lp_presolve.c ****       jx = ROW_MAT_COLNR(jb);
 43967               		.loc 2 4104 0
 43968 12e00 AE01      		movw r20,r28
 43969 12e02 415E      		subi r20,-31
 43970 12e04 5F4F      		sbci r21,-1
 43971 12e06 2981      		ldd r18,Y+1
 43972 12e08 3A81      		ldd r19,Y+2
 43973 12e0a 8DA5      		ldd r24,Y+45
 43974 12e0c 9EA5      		ldd r25,Y+46
 43975 12e0e B901      		movw r22,r18
 43976 12e10 0E94 0000 		call presolve_nextcol
 43977 12e14 9A87      		std Y+10,r25
 43978 12e16 8987      		std Y+9,r24
 43979               	.L1839:
4103:lp_solve_5.5/lp_presolve.c ****         jb = presolve_nextcol(psdata, i, &item)) {
 43980               		.loc 2 4103 0 discriminator 1
 43981 12e18 8985      		ldd r24,Y+9
 43982 12e1a 9A85      		ldd r25,Y+10
 43983 12e1c 9923      		tst r25
 43984 12e1e 04F0      		brlt .+2
 43985 12e20 00C0      		rjmp .L1844
 43986 12e22 00C0      		rjmp .L1841
 43987               	.L1889:
4107:lp_solve_5.5/lp_presolve.c ****       rhsval = ROW_MAT_VALUE(jb) - 1;
 43988               		.loc 2 4107 0
 43989 12e24 0000      		nop
 43990 12e26 00C0      		rjmp .L1841
 43991               	.L1890:
4110:lp_solve_5.5/lp_presolve.c ****         break;
 43992               		.loc 2 4110 0
 43993 12e28 0000      		nop
 43994               	.L1841:
4111:lp_solve_5.5/lp_presolve.c ****     }
4112:lp_solve_5.5/lp_presolve.c ****     if(jb < 0)
 43995               		.loc 2 4112 0
 43996 12e2a 8985      		ldd r24,Y+9
 43997 12e2c 9A85      		ldd r25,Y+10
 43998 12e2e 9923      		tst r25
 43999 12e30 04F4      		brge .L1838
4113:lp_solve_5.5/lp_presolve.c ****       setLink(sets, i);
 44000               		.loc 2 4113 0
 44001 12e32 8BA5      		ldd r24,Y+43
 44002 12e34 9CA5      		ldd r25,Y+44
 44003 12e36 2981      		ldd r18,Y+1
 44004 12e38 3A81      		ldd r19,Y+2
 44005 12e3a B901      		movw r22,r18
 44006 12e3c 0E94 0000 		call setLink
 44007 12e40 00C0      		rjmp .L1838
 44008               	.L1888:
4101:lp_solve_5.5/lp_presolve.c ****     item = 0;
 44009               		.loc 2 4101 0
 44010 12e42 0000      		nop
 44011               	.L1838:
4099:lp_solve_5.5/lp_presolve.c ****     if((lp->orig_rhs[i] < 0) || (psdata->rows->negcount[i] > 0))
 44012               		.loc 2 4099 0 discriminator 2
 44013 12e44 8DA5      		ldd r24,Y+45
 44014 12e46 9EA5      		ldd r25,Y+46
 44015 12e48 FC01      		movw r30,r24
 44016 12e4a 8081      		ld r24,Z
 44017 12e4c 9181      		ldd r25,Z+1
 44018 12e4e FC01      		movw r30,r24
 44019 12e50 8081      		ld r24,Z
 44020 12e52 9181      		ldd r25,Z+1
 44021 12e54 2981      		ldd r18,Y+1
 44022 12e56 3A81      		ldd r19,Y+2
 44023 12e58 B901      		movw r22,r18
 44024 12e5a 0E94 0000 		call nextActiveLink
 44025 12e5e 9A83      		std Y+2,r25
 44026 12e60 8983      		std Y+1,r24
 44027               	.L1835:
4099:lp_solve_5.5/lp_presolve.c ****     if((lp->orig_rhs[i] < 0) || (psdata->rows->negcount[i] > 0))
 44028               		.loc 2 4099 0 is_stmt 0 discriminator 1
 44029 12e62 8981      		ldd r24,Y+1
 44030 12e64 9A81      		ldd r25,Y+2
 44031 12e66 892B      		or r24,r25
 44032 12e68 01F0      		breq .+2
 44033 12e6a 00C0      		rjmp .L1845
4114:lp_solve_5.5/lp_presolve.c ****   }
4115:lp_solve_5.5/lp_presolve.c ****   if(countActiveLink(sets) == 0)
 44034               		.loc 2 4115 0 is_stmt 1
 44035 12e6c 8BA5      		ldd r24,Y+43
 44036 12e6e 9CA5      		ldd r25,Y+44
 44037 12e70 0E94 0000 		call countActiveLink
 44038 12e74 892B      		or r24,r25
 44039 12e76 01F4      		brne .+2
 44040 12e78 00C0      		rjmp .L1891
4116:lp_solve_5.5/lp_presolve.c ****     goto Finish;
4117:lp_solve_5.5/lp_presolve.c **** 
4118:lp_solve_5.5/lp_presolve.c ****   /* A column dominates another binary variable column with the following criteria:
4119:lp_solve_5.5/lp_presolve.c ****       1) The relative matrix non-zero entries are identical
4120:lp_solve_5.5/lp_presolve.c ****       2) The relative objective coefficient is worse than the other;
4121:lp_solve_5.5/lp_presolve.c ****          if the OF coefficients are identical, we can delete an arbitrary variable */
4122:lp_solve_5.5/lp_presolve.c ****   n = 0;
 44041               		.loc 2 4122 0
 44042 12e7a 1886      		std Y+8,__zero_reg__
 44043 12e7c 1F82      		std Y+7,__zero_reg__
4123:lp_solve_5.5/lp_presolve.c ****   for(i = firstActiveLink(psdata->cols->varmap); i != 0; i = nextActiveLink(psdata->cols->varmap, i
 44044               		.loc 2 4123 0
 44045 12e7e 8DA5      		ldd r24,Y+45
 44046 12e80 9EA5      		ldd r25,Y+46
 44047 12e82 FC01      		movw r30,r24
 44048 12e84 8281      		ldd r24,Z+2
 44049 12e86 9381      		ldd r25,Z+3
 44050 12e88 FC01      		movw r30,r24
 44051 12e8a 8081      		ld r24,Z
 44052 12e8c 9181      		ldd r25,Z+1
 44053 12e8e 0E94 0000 		call firstActiveLink
 44054 12e92 9A83      		std Y+2,r25
 44055 12e94 8983      		std Y+1,r24
 44056 12e96 00C0      		rjmp .L1847
 44057               	.L1853:
4124:lp_solve_5.5/lp_presolve.c ****     if(is_binary(lp, i) && !SOS_is_member(lp->SOS, 0, i)) {
 44058               		.loc 2 4124 0
 44059 12e98 2981      		ldd r18,Y+1
 44060 12e9a 3A81      		ldd r19,Y+2
 44061 12e9c 8B89      		ldd r24,Y+19
 44062 12e9e 9C89      		ldd r25,Y+20
 44063 12ea0 B901      		movw r22,r18
 44064 12ea2 0E94 0000 		call is_binary
 44065 12ea6 8823      		tst r24
 44066 12ea8 01F4      		brne .+2
 44067 12eaa 00C0      		rjmp .L1848
 44068               		.loc 2 4124 0 is_stmt 0 discriminator 1
 44069 12eac 8B89      		ldd r24,Y+19
 44070 12eae 9C89      		ldd r25,Y+20
 44071 12eb0 8256      		subi r24,98
 44072 12eb2 9D4F      		sbci r25,-3
 44073 12eb4 FC01      		movw r30,r24
 44074 12eb6 8081      		ld r24,Z
 44075 12eb8 9181      		ldd r25,Z+1
 44076 12eba 2981      		ldd r18,Y+1
 44077 12ebc 3A81      		ldd r19,Y+2
 44078 12ebe A901      		movw r20,r18
 44079 12ec0 60E0      		ldi r22,0
 44080 12ec2 70E0      		ldi r23,0
 44081 12ec4 0E94 0000 		call SOS_is_member
 44082 12ec8 892B      		or r24,r25
 44083 12eca 01F0      		breq .+2
 44084 12ecc 00C0      		rjmp .L1848
4125:lp_solve_5.5/lp_presolve.c ****       /* Make sure the column is member of at least one set */
4126:lp_solve_5.5/lp_presolve.c ****       item = 0;
 44085               		.loc 2 4126 0 is_stmt 1
 44086 12ece 18A2      		std Y+32,__zero_reg__
 44087 12ed0 1F8E      		std Y+31,__zero_reg__
4127:lp_solve_5.5/lp_presolve.c ****       for(jb = presolve_nextrow(psdata, i, &item); jb >= 0;
 44088               		.loc 2 4127 0
 44089 12ed2 AE01      		movw r20,r28
 44090 12ed4 415E      		subi r20,-31
 44091 12ed6 5F4F      		sbci r21,-1
 44092 12ed8 2981      		ldd r18,Y+1
 44093 12eda 3A81      		ldd r19,Y+2
 44094 12edc 8DA5      		ldd r24,Y+45
 44095 12ede 9EA5      		ldd r25,Y+46
 44096 12ee0 B901      		movw r22,r18
 44097 12ee2 0E94 0000 		call presolve_nextrow
 44098 12ee6 9A87      		std Y+10,r25
 44099 12ee8 8987      		std Y+9,r24
 44100 12eea 00C0      		rjmp .L1849
 44101               	.L1852:
4128:lp_solve_5.5/lp_presolve.c ****           jb = presolve_nextrow(psdata, i, &item)) {
4129:lp_solve_5.5/lp_presolve.c ****         jx = COL_MAT_ROWNR(jb);
 44102               		.loc 2 4129 0
 44103 12eec 8D89      		ldd r24,Y+21
 44104 12eee 9E89      		ldd r25,Y+22
 44105 12ef0 FC01      		movw r30,r24
 44106 12ef2 2685      		ldd r18,Z+14
 44107 12ef4 3785      		ldd r19,Z+15
 44108 12ef6 8985      		ldd r24,Y+9
 44109 12ef8 9A85      		ldd r25,Y+10
 44110 12efa 880F      		lsl r24
 44111 12efc 991F      		rol r25
 44112 12efe 820F      		add r24,r18
 44113 12f00 931F      		adc r25,r19
 44114 12f02 FC01      		movw r30,r24
 44115 12f04 8081      		ld r24,Z
 44116 12f06 9181      		ldd r25,Z+1
 44117 12f08 9C8F      		std Y+28,r25
 44118 12f0a 8B8F      		std Y+27,r24
4130:lp_solve_5.5/lp_presolve.c ****         if(isActiveLink(sets, jx))
 44119               		.loc 2 4130 0
 44120 12f0c 8BA5      		ldd r24,Y+43
 44121 12f0e 9CA5      		ldd r25,Y+44
 44122 12f10 2B8D      		ldd r18,Y+27
 44123 12f12 3C8D      		ldd r19,Y+28
 44124 12f14 B901      		movw r22,r18
 44125 12f16 0E94 0000 		call isActiveLink
 44126 12f1a 8823      		tst r24
 44127 12f1c 01F4      		brne .L1892
4128:lp_solve_5.5/lp_presolve.c ****           jb = presolve_nextrow(psdata, i, &item)) {
 44128               		.loc 2 4128 0
 44129 12f1e AE01      		movw r20,r28
 44130 12f20 415E      		subi r20,-31
 44131 12f22 5F4F      		sbci r21,-1
 44132 12f24 2981      		ldd r18,Y+1
 44133 12f26 3A81      		ldd r19,Y+2
 44134 12f28 8DA5      		ldd r24,Y+45
 44135 12f2a 9EA5      		ldd r25,Y+46
 44136 12f2c B901      		movw r22,r18
 44137 12f2e 0E94 0000 		call presolve_nextrow
 44138 12f32 9A87      		std Y+10,r25
 44139 12f34 8987      		std Y+9,r24
 44140               	.L1849:
4127:lp_solve_5.5/lp_presolve.c ****       for(jb = presolve_nextrow(psdata, i, &item); jb >= 0;
 44141               		.loc 2 4127 0 discriminator 1
 44142 12f36 8985      		ldd r24,Y+9
 44143 12f38 9A85      		ldd r25,Y+10
 44144 12f3a 9923      		tst r25
 44145 12f3c 04F4      		brge .L1852
 44146 12f3e 00C0      		rjmp .L1851
 44147               	.L1892:
4131:lp_solve_5.5/lp_presolve.c ****           break;
 44148               		.loc 2 4131 0
 44149 12f40 0000      		nop
 44150               	.L1851:
4132:lp_solve_5.5/lp_presolve.c ****       }
4133:lp_solve_5.5/lp_presolve.c **** 
4134:lp_solve_5.5/lp_presolve.c ****       /* Add to list if set membership test is Ok */
4135:lp_solve_5.5/lp_presolve.c ****       if(jb >= 0) {
 44151               		.loc 2 4135 0
 44152 12f42 8985      		ldd r24,Y+9
 44153 12f44 9A85      		ldd r25,Y+10
 44154 12f46 9923      		tst r25
 44155 12f48 04F4      		brge .+2
 44156 12f4a 00C0      		rjmp .L1848
4136:lp_solve_5.5/lp_presolve.c ****         QS[n].int4.intval = i;
 44157               		.loc 2 4136 0
 44158 12f4c 8F81      		ldd r24,Y+7
 44159 12f4e 9885      		ldd r25,Y+8
 44160 12f50 880F      		lsl r24
 44161 12f52 991F      		rol r25
 44162 12f54 880F      		lsl r24
 44163 12f56 991F      		rol r25
 44164 12f58 880F      		lsl r24
 44165 12f5a 991F      		rol r25
 44166 12f5c 298D      		ldd r18,Y+25
 44167 12f5e 3A8D      		ldd r19,Y+26
 44168 12f60 820F      		add r24,r18
 44169 12f62 931F      		adc r25,r19
 44170 12f64 2981      		ldd r18,Y+1
 44171 12f66 3A81      		ldd r19,Y+2
 44172 12f68 FC01      		movw r30,r24
 44173 12f6a 3183      		std Z+1,r19
 44174 12f6c 2083      		st Z,r18
4137:lp_solve_5.5/lp_presolve.c ****         item = 0;
 44175               		.loc 2 4137 0
 44176 12f6e 18A2      		std Y+32,__zero_reg__
 44177 12f70 1F8E      		std Y+31,__zero_reg__
4138:lp_solve_5.5/lp_presolve.c ****         ii = presolve_nextrow(psdata, i, &item);
 44178               		.loc 2 4138 0
 44179 12f72 AE01      		movw r20,r28
 44180 12f74 415E      		subi r20,-31
 44181 12f76 5F4F      		sbci r21,-1
 44182 12f78 2981      		ldd r18,Y+1
 44183 12f7a 3A81      		ldd r19,Y+2
 44184 12f7c 8DA5      		ldd r24,Y+45
 44185 12f7e 9EA5      		ldd r25,Y+46
 44186 12f80 B901      		movw r22,r18
 44187 12f82 0E94 0000 		call presolve_nextrow
 44188 12f86 9E8F      		std Y+30,r25
 44189 12f88 8D8F      		std Y+29,r24
4139:lp_solve_5.5/lp_presolve.c ****         QS[n].int4.intpar1 = COL_MAT_ROWNR(ii);
 44190               		.loc 2 4139 0
 44191 12f8a 8F81      		ldd r24,Y+7
 44192 12f8c 9885      		ldd r25,Y+8
 44193 12f8e 880F      		lsl r24
 44194 12f90 991F      		rol r25
 44195 12f92 880F      		lsl r24
 44196 12f94 991F      		rol r25
 44197 12f96 880F      		lsl r24
 44198 12f98 991F      		rol r25
 44199 12f9a 298D      		ldd r18,Y+25
 44200 12f9c 3A8D      		ldd r19,Y+26
 44201 12f9e 820F      		add r24,r18
 44202 12fa0 931F      		adc r25,r19
 44203 12fa2 2D89      		ldd r18,Y+21
 44204 12fa4 3E89      		ldd r19,Y+22
 44205 12fa6 F901      		movw r30,r18
 44206 12fa8 4685      		ldd r20,Z+14
 44207 12faa 5785      		ldd r21,Z+15
 44208 12fac 2D8D      		ldd r18,Y+29
 44209 12fae 3E8D      		ldd r19,Y+30
 44210 12fb0 220F      		lsl r18
 44211 12fb2 331F      		rol r19
 44212 12fb4 240F      		add r18,r20
 44213 12fb6 351F      		adc r19,r21
 44214 12fb8 F901      		movw r30,r18
 44215 12fba 2081      		ld r18,Z
 44216 12fbc 3181      		ldd r19,Z+1
 44217 12fbe FC01      		movw r30,r24
 44218 12fc0 3383      		std Z+3,r19
 44219 12fc2 2283      		std Z+2,r18
4140:lp_solve_5.5/lp_presolve.c ****         ii = presolve_collength(psdata, i);
 44220               		.loc 2 4140 0
 44221 12fc4 2981      		ldd r18,Y+1
 44222 12fc6 3A81      		ldd r19,Y+2
 44223 12fc8 8DA5      		ldd r24,Y+45
 44224 12fca 9EA5      		ldd r25,Y+46
 44225 12fcc B901      		movw r22,r18
 44226 12fce 0E94 0000 		call presolve_collength
 44227 12fd2 9E8F      		std Y+30,r25
 44228 12fd4 8D8F      		std Y+29,r24
4141:lp_solve_5.5/lp_presolve.c ****         QS[n].int4.intpar2 = ii;
 44229               		.loc 2 4141 0
 44230 12fd6 8F81      		ldd r24,Y+7
 44231 12fd8 9885      		ldd r25,Y+8
 44232 12fda 880F      		lsl r24
 44233 12fdc 991F      		rol r25
 44234 12fde 880F      		lsl r24
 44235 12fe0 991F      		rol r25
 44236 12fe2 880F      		lsl r24
 44237 12fe4 991F      		rol r25
 44238 12fe6 298D      		ldd r18,Y+25
 44239 12fe8 3A8D      		ldd r19,Y+26
 44240 12fea 820F      		add r24,r18
 44241 12fec 931F      		adc r25,r19
 44242 12fee 2D8D      		ldd r18,Y+29
 44243 12ff0 3E8D      		ldd r19,Y+30
 44244 12ff2 FC01      		movw r30,r24
 44245 12ff4 3583      		std Z+5,r19
 44246 12ff6 2483      		std Z+4,r18
4142:lp_solve_5.5/lp_presolve.c ****         n++;
 44247               		.loc 2 4142 0
 44248 12ff8 8F81      		ldd r24,Y+7
 44249 12ffa 9885      		ldd r25,Y+8
 44250 12ffc 0196      		adiw r24,1
 44251 12ffe 9887      		std Y+8,r25
 44252 13000 8F83      		std Y+7,r24
 44253               	.L1848:
4123:lp_solve_5.5/lp_presolve.c ****     if(is_binary(lp, i) && !SOS_is_member(lp->SOS, 0, i)) {
 44254               		.loc 2 4123 0 discriminator 2
 44255 13002 8DA5      		ldd r24,Y+45
 44256 13004 9EA5      		ldd r25,Y+46
 44257 13006 FC01      		movw r30,r24
 44258 13008 8281      		ldd r24,Z+2
 44259 1300a 9381      		ldd r25,Z+3
 44260 1300c FC01      		movw r30,r24
 44261 1300e 8081      		ld r24,Z
 44262 13010 9181      		ldd r25,Z+1
 44263 13012 2981      		ldd r18,Y+1
 44264 13014 3A81      		ldd r19,Y+2
 44265 13016 B901      		movw r22,r18
 44266 13018 0E94 0000 		call nextActiveLink
 44267 1301c 9A83      		std Y+2,r25
 44268 1301e 8983      		std Y+1,r24
 44269               	.L1847:
4123:lp_solve_5.5/lp_presolve.c ****     if(is_binary(lp, i) && !SOS_is_member(lp->SOS, 0, i)) {
 44270               		.loc 2 4123 0 is_stmt 0 discriminator 1
 44271 13020 8981      		ldd r24,Y+1
 44272 13022 9A81      		ldd r25,Y+2
 44273 13024 892B      		or r24,r25
 44274 13026 01F0      		breq .+2
 44275 13028 00C0      		rjmp .L1853
4143:lp_solve_5.5/lp_presolve.c ****       }
4144:lp_solve_5.5/lp_presolve.c ****     }
4145:lp_solve_5.5/lp_presolve.c ****   if(n <= 1) {
 44276               		.loc 2 4145 0 is_stmt 1
 44277 1302a 8F81      		ldd r24,Y+7
 44278 1302c 9885      		ldd r25,Y+8
 44279 1302e 0297      		sbiw r24,2
 44280 13030 04F4      		brge .L1854
4146:lp_solve_5.5/lp_presolve.c ****     FREE(QS);
 44281               		.loc 2 4146 0
 44282 13032 898D      		ldd r24,Y+25
 44283 13034 9A8D      		ldd r25,Y+26
 44284 13036 892B      		or r24,r25
 44285 13038 01F0      		breq .L1855
 44286               		.loc 2 4146 0 is_stmt 0 discriminator 1
 44287 1303a 898D      		ldd r24,Y+25
 44288 1303c 9A8D      		ldd r25,Y+26
 44289 1303e 0E94 0000 		call free
 44290 13042 1A8E      		std Y+26,__zero_reg__
 44291 13044 198E      		std Y+25,__zero_reg__
 44292               	.L1855:
4147:lp_solve_5.5/lp_presolve.c ****     return( status );
 44293               		.loc 2 4147 0 is_stmt 1
 44294 13046 8D85      		ldd r24,Y+13
 44295 13048 9E85      		ldd r25,Y+14
 44296 1304a 00C0      		rjmp .L1885
 44297               	.L1854:
4148:lp_solve_5.5/lp_presolve.c ****   }
4149:lp_solve_5.5/lp_presolve.c ****   QS_execute(QS, n, (findCompare_func *) compRedundant, NULL);
 44298               		.loc 2 4149 0
 44299 1304c 6F81      		ldd r22,Y+7
 44300 1304e 7885      		ldd r23,Y+8
 44301 13050 898D      		ldd r24,Y+25
 44302 13052 9A8D      		ldd r25,Y+26
 44303 13054 20E0      		ldi r18,0
 44304 13056 30E0      		ldi r19,0
 44305 13058 40E0      		ldi r20,lo8(gs(compRedundant))
 44306 1305a 50E0      		ldi r21,hi8(gs(compRedundant))
 44307 1305c 0E94 0000 		call QS_execute
4150:lp_solve_5.5/lp_presolve.c **** 
4151:lp_solve_5.5/lp_presolve.c ****   /* Let us start from the top of the list, going forward and looking
4152:lp_solve_5.5/lp_presolve.c ****     for the longest possible dominated column */
4153:lp_solve_5.5/lp_presolve.c ****   if(!allocREAL(lp, &colvalues, nrows + 1, TRUE) ||
 44308               		.loc 2 4153 0
 44309 13060 8F89      		ldd r24,Y+23
 44310 13062 988D      		ldd r25,Y+24
 44311 13064 AC01      		movw r20,r24
 44312 13066 4F5F      		subi r20,-1
 44313 13068 5F4F      		sbci r21,-1
 44314 1306a BE01      		movw r22,r28
 44315 1306c 695D      		subi r22,-39
 44316 1306e 7F4F      		sbci r23,-1
 44317 13070 8B89      		ldd r24,Y+19
 44318 13072 9C89      		ldd r25,Y+20
 44319 13074 21E0      		ldi r18,lo8(1)
 44320 13076 0E94 0000 		call allocREAL
 44321 1307a 8823      		tst r24
 44322 1307c 01F4      		brne .+2
 44323 1307e 00C0      		rjmp .L1834
4154:lp_solve_5.5/lp_presolve.c ****      !allocREAL(lp, &colobj, n + 1, FALSE) ||
 44324               		.loc 2 4154 0 discriminator 1
 44325 13080 8F81      		ldd r24,Y+7
 44326 13082 9885      		ldd r25,Y+8
 44327 13084 AC01      		movw r20,r24
 44328 13086 4F5F      		subi r20,-1
 44329 13088 5F4F      		sbci r21,-1
 44330 1308a BE01      		movw r22,r28
 44331 1308c 675D      		subi r22,-41
 44332 1308e 7F4F      		sbci r23,-1
 44333 13090 8B89      		ldd r24,Y+19
 44334 13092 9C89      		ldd r25,Y+20
 44335 13094 20E0      		ldi r18,0
 44336 13096 0E94 0000 		call allocREAL
4153:lp_solve_5.5/lp_presolve.c ****      !allocREAL(lp, &colobj, n + 1, FALSE) ||
 44337               		.loc 2 4153 0 discriminator 1
 44338 1309a 8823      		tst r24
 44339 1309c 01F4      		brne .+2
 44340 1309e 00C0      		rjmp .L1834
4155:lp_solve_5.5/lp_presolve.c ****      !allocINT(lp, &coldel, n + 1, FALSE))
 44341               		.loc 2 4155 0
 44342 130a0 8F81      		ldd r24,Y+7
 44343 130a2 9885      		ldd r25,Y+8
 44344 130a4 AC01      		movw r20,r24
 44345 130a6 4F5F      		subi r20,-1
 44346 130a8 5F4F      		sbci r21,-1
 44347 130aa BE01      		movw r22,r28
 44348 130ac 6B5D      		subi r22,-37
 44349 130ae 7F4F      		sbci r23,-1
 44350 130b0 8B89      		ldd r24,Y+19
 44351 130b2 9C89      		ldd r25,Y+20
 44352 130b4 20E0      		ldi r18,0
 44353 130b6 0E94 0000 		call allocINT
4154:lp_solve_5.5/lp_presolve.c ****      !allocREAL(lp, &colobj, n + 1, FALSE) ||
 44354               		.loc 2 4154 0
 44355 130ba 8823      		tst r24
 44356 130bc 01F4      		brne .+2
 44357 130be 00C0      		rjmp .L1834
4156:lp_solve_5.5/lp_presolve.c ****     goto Finish;
4157:lp_solve_5.5/lp_presolve.c **** 
4158:lp_solve_5.5/lp_presolve.c ****   for(ib = 0; ib < n; ib++) {
 44358               		.loc 2 4158 0
 44359 130c0 1C82      		std Y+4,__zero_reg__
 44360 130c2 1B82      		std Y+3,__zero_reg__
 44361 130c4 00C0      		rjmp .L1856
 44362               	.L1880:
4159:lp_solve_5.5/lp_presolve.c **** 
4160:lp_solve_5.5/lp_presolve.c ****     /* Get column and check if it was previously eliminated */
4161:lp_solve_5.5/lp_presolve.c ****     i = QS[ib].int4.intval;
 44363               		.loc 2 4161 0
 44364 130c6 8B81      		ldd r24,Y+3
 44365 130c8 9C81      		ldd r25,Y+4
 44366 130ca 880F      		lsl r24
 44367 130cc 991F      		rol r25
 44368 130ce 880F      		lsl r24
 44369 130d0 991F      		rol r25
 44370 130d2 880F      		lsl r24
 44371 130d4 991F      		rol r25
 44372 130d6 298D      		ldd r18,Y+25
 44373 130d8 3A8D      		ldd r19,Y+26
 44374 130da 820F      		add r24,r18
 44375 130dc 931F      		adc r25,r19
 44376 130de FC01      		movw r30,r24
 44377 130e0 8081      		ld r24,Z
 44378 130e2 9181      		ldd r25,Z+1
 44379 130e4 9A83      		std Y+2,r25
 44380 130e6 8983      		std Y+1,r24
4162:lp_solve_5.5/lp_presolve.c ****     if(!isActiveLink(psdata->cols->varmap, i))
 44381               		.loc 2 4162 0
 44382 130e8 8DA5      		ldd r24,Y+45
 44383 130ea 9EA5      		ldd r25,Y+46
 44384 130ec FC01      		movw r30,r24
 44385 130ee 8281      		ldd r24,Z+2
 44386 130f0 9381      		ldd r25,Z+3
 44387 130f2 FC01      		movw r30,r24
 44388 130f4 8081      		ld r24,Z
 44389 130f6 9181      		ldd r25,Z+1
 44390 130f8 2981      		ldd r18,Y+1
 44391 130fa 3A81      		ldd r19,Y+2
 44392 130fc B901      		movw r22,r18
 44393 130fe 0E94 0000 		call isActiveLink
 44394 13102 8823      		tst r24
 44395 13104 01F4      		brne .+2
 44396 13106 00C0      		rjmp .L1893
4163:lp_solve_5.5/lp_presolve.c ****       continue;
4164:lp_solve_5.5/lp_presolve.c **** 
4165:lp_solve_5.5/lp_presolve.c ****     /* Load the non-zero column values */
4166:lp_solve_5.5/lp_presolve.c ****     item = 0;
 44397               		.loc 2 4166 0
 44398 13108 18A2      		std Y+32,__zero_reg__
 44399 1310a 1F8E      		std Y+31,__zero_reg__
4167:lp_solve_5.5/lp_presolve.c ****     for(jb = presolve_nextrow(psdata, i, &item); jb >= 0;
 44400               		.loc 2 4167 0
 44401 1310c AE01      		movw r20,r28
 44402 1310e 415E      		subi r20,-31
 44403 13110 5F4F      		sbci r21,-1
 44404 13112 2981      		ldd r18,Y+1
 44405 13114 3A81      		ldd r19,Y+2
 44406 13116 8DA5      		ldd r24,Y+45
 44407 13118 9EA5      		ldd r25,Y+46
 44408 1311a B901      		movw r22,r18
 44409 1311c 0E94 0000 		call presolve_nextrow
 44410 13120 9A87      		std Y+10,r25
 44411 13122 8987      		std Y+9,r24
 44412 13124 00C0      		rjmp .L1859
 44413               	.L1860:
4168:lp_solve_5.5/lp_presolve.c ****         jb = presolve_nextrow(psdata, i, &item)) {
4169:lp_solve_5.5/lp_presolve.c ****       jx = COL_MAT_ROWNR(jb);
 44414               		.loc 2 4169 0
 44415 13126 8D89      		ldd r24,Y+21
 44416 13128 9E89      		ldd r25,Y+22
 44417 1312a FC01      		movw r30,r24
 44418 1312c 2685      		ldd r18,Z+14
 44419 1312e 3785      		ldd r19,Z+15
 44420 13130 8985      		ldd r24,Y+9
 44421 13132 9A85      		ldd r25,Y+10
 44422 13134 880F      		lsl r24
 44423 13136 991F      		rol r25
 44424 13138 820F      		add r24,r18
 44425 1313a 931F      		adc r25,r19
 44426 1313c FC01      		movw r30,r24
 44427 1313e 8081      		ld r24,Z
 44428 13140 9181      		ldd r25,Z+1
 44429 13142 9C8F      		std Y+28,r25
 44430 13144 8B8F      		std Y+27,r24
4170:lp_solve_5.5/lp_presolve.c ****       colvalues[jx] = COL_MAT_VALUE(jb);
 44431               		.loc 2 4170 0
 44432 13146 2FA1      		ldd r18,Y+39
 44433 13148 38A5      		ldd r19,Y+40
 44434 1314a 8B8D      		ldd r24,Y+27
 44435 1314c 9C8D      		ldd r25,Y+28
 44436 1314e 880F      		lsl r24
 44437 13150 991F      		rol r25
 44438 13152 880F      		lsl r24
 44439 13154 991F      		rol r25
 44440 13156 280F      		add r18,r24
 44441 13158 391F      		adc r19,r25
 44442 1315a 8D89      		ldd r24,Y+21
 44443 1315c 9E89      		ldd r25,Y+22
 44444 1315e FC01      		movw r30,r24
 44445 13160 4089      		ldd r20,Z+16
 44446 13162 5189      		ldd r21,Z+17
 44447 13164 8985      		ldd r24,Y+9
 44448 13166 9A85      		ldd r25,Y+10
 44449 13168 880F      		lsl r24
 44450 1316a 991F      		rol r25
 44451 1316c 880F      		lsl r24
 44452 1316e 991F      		rol r25
 44453 13170 840F      		add r24,r20
 44454 13172 951F      		adc r25,r21
 44455 13174 FC01      		movw r30,r24
 44456 13176 8081      		ld r24,Z
 44457 13178 9181      		ldd r25,Z+1
 44458 1317a A281      		ldd r26,Z+2
 44459 1317c B381      		ldd r27,Z+3
 44460 1317e F901      		movw r30,r18
 44461 13180 8083      		st Z,r24
 44462 13182 9183      		std Z+1,r25
 44463 13184 A283      		std Z+2,r26
 44464 13186 B383      		std Z+3,r27
4168:lp_solve_5.5/lp_presolve.c ****         jb = presolve_nextrow(psdata, i, &item)) {
 44465               		.loc 2 4168 0
 44466 13188 AE01      		movw r20,r28
 44467 1318a 415E      		subi r20,-31
 44468 1318c 5F4F      		sbci r21,-1
 44469 1318e 2981      		ldd r18,Y+1
 44470 13190 3A81      		ldd r19,Y+2
 44471 13192 8DA5      		ldd r24,Y+45
 44472 13194 9EA5      		ldd r25,Y+46
 44473 13196 B901      		movw r22,r18
 44474 13198 0E94 0000 		call presolve_nextrow
 44475 1319c 9A87      		std Y+10,r25
 44476 1319e 8987      		std Y+9,r24
 44477               	.L1859:
4167:lp_solve_5.5/lp_presolve.c ****     for(jb = presolve_nextrow(psdata, i, &item); jb >= 0;
 44478               		.loc 2 4167 0 discriminator 1
 44479 131a0 8985      		ldd r24,Y+9
 44480 131a2 9A85      		ldd r25,Y+10
 44481 131a4 9923      		tst r25
 44482 131a6 04F0      		brlt .+2
 44483 131a8 00C0      		rjmp .L1860
4171:lp_solve_5.5/lp_presolve.c ****     }
4172:lp_solve_5.5/lp_presolve.c **** 
4173:lp_solve_5.5/lp_presolve.c ****     /* Store data for current column */
4174:lp_solve_5.5/lp_presolve.c ****     coldel[0] = 1;
 44484               		.loc 2 4174 0
 44485 131aa 8DA1      		ldd r24,Y+37
 44486 131ac 9EA1      		ldd r25,Y+38
 44487 131ae 21E0      		ldi r18,lo8(1)
 44488 131b0 30E0      		ldi r19,0
 44489 131b2 FC01      		movw r30,r24
 44490 131b4 3183      		std Z+1,r19
 44491 131b6 2083      		st Z,r18
4175:lp_solve_5.5/lp_presolve.c ****     coldel[1] = i;
 44492               		.loc 2 4175 0
 44493 131b8 8DA1      		ldd r24,Y+37
 44494 131ba 9EA1      		ldd r25,Y+38
 44495 131bc 0296      		adiw r24,2
 44496 131be 2981      		ldd r18,Y+1
 44497 131c0 3A81      		ldd r19,Y+2
 44498 131c2 FC01      		movw r30,r24
 44499 131c4 3183      		std Z+1,r19
 44500 131c6 2083      		st Z,r18
4176:lp_solve_5.5/lp_presolve.c ****     colobj[1] = lp->orig_obj[i];
 44501               		.loc 2 4176 0
 44502 131c8 89A5      		ldd r24,Y+41
 44503 131ca 9AA5      		ldd r25,Y+42
 44504 131cc 9C01      		movw r18,r24
 44505 131ce 2C5F      		subi r18,-4
 44506 131d0 3F4F      		sbci r19,-1
 44507 131d2 8B89      		ldd r24,Y+19
 44508 131d4 9C89      		ldd r25,Y+20
 44509 131d6 845D      		subi r24,-44
 44510 131d8 9D4F      		sbci r25,-3
 44511 131da FC01      		movw r30,r24
 44512 131dc 4081      		ld r20,Z
 44513 131de 5181      		ldd r21,Z+1
 44514 131e0 8981      		ldd r24,Y+1
 44515 131e2 9A81      		ldd r25,Y+2
 44516 131e4 880F      		lsl r24
 44517 131e6 991F      		rol r25
 44518 131e8 880F      		lsl r24
 44519 131ea 991F      		rol r25
 44520 131ec 840F      		add r24,r20
 44521 131ee 951F      		adc r25,r21
 44522 131f0 FC01      		movw r30,r24
 44523 131f2 8081      		ld r24,Z
 44524 131f4 9181      		ldd r25,Z+1
 44525 131f6 A281      		ldd r26,Z+2
 44526 131f8 B381      		ldd r27,Z+3
 44527 131fa F901      		movw r30,r18
 44528 131fc 8083      		st Z,r24
 44529 131fe 9183      		std Z+1,r25
 44530 13200 A283      		std Z+2,r26
 44531 13202 B383      		std Z+3,r27
4177:lp_solve_5.5/lp_presolve.c **** 
4178:lp_solve_5.5/lp_presolve.c ****     /* Loop over all other columns to see if they have equal constraint coefficients */
4179:lp_solve_5.5/lp_presolve.c ****     for(ie = ib+1; ie < n; ie++) {
 44532               		.loc 2 4179 0
 44533 13204 8B81      		ldd r24,Y+3
 44534 13206 9C81      		ldd r25,Y+4
 44535 13208 0196      		adiw r24,1
 44536 1320a 9E83      		std Y+6,r25
 44537 1320c 8D83      		std Y+5,r24
 44538 1320e 00C0      		rjmp .L1861
 44539               	.L1873:
4180:lp_solve_5.5/lp_presolve.c **** 
4181:lp_solve_5.5/lp_presolve.c ****       /* Check if this column was previously eliminated */
4182:lp_solve_5.5/lp_presolve.c ****       ii = QS[ie].int4.intval;
 44540               		.loc 2 4182 0
 44541 13210 8D81      		ldd r24,Y+5
 44542 13212 9E81      		ldd r25,Y+6
 44543 13214 880F      		lsl r24
 44544 13216 991F      		rol r25
 44545 13218 880F      		lsl r24
 44546 1321a 991F      		rol r25
 44547 1321c 880F      		lsl r24
 44548 1321e 991F      		rol r25
 44549 13220 298D      		ldd r18,Y+25
 44550 13222 3A8D      		ldd r19,Y+26
 44551 13224 820F      		add r24,r18
 44552 13226 931F      		adc r25,r19
 44553 13228 FC01      		movw r30,r24
 44554 1322a 8081      		ld r24,Z
 44555 1322c 9181      		ldd r25,Z+1
 44556 1322e 9E8F      		std Y+30,r25
 44557 13230 8D8F      		std Y+29,r24
4183:lp_solve_5.5/lp_presolve.c ****       if(!isActiveLink(psdata->cols->varmap, ii))
 44558               		.loc 2 4183 0
 44559 13232 8DA5      		ldd r24,Y+45
 44560 13234 9EA5      		ldd r25,Y+46
 44561 13236 FC01      		movw r30,r24
 44562 13238 8281      		ldd r24,Z+2
 44563 1323a 9381      		ldd r25,Z+3
 44564 1323c FC01      		movw r30,r24
 44565 1323e 8081      		ld r24,Z
 44566 13240 9181      		ldd r25,Z+1
 44567 13242 2D8D      		ldd r18,Y+29
 44568 13244 3E8D      		ldd r19,Y+30
 44569 13246 B901      		movw r22,r18
 44570 13248 0E94 0000 		call isActiveLink
 44571 1324c 8823      		tst r24
 44572 1324e 01F4      		brne .+2
 44573 13250 00C0      		rjmp .L1894
4184:lp_solve_5.5/lp_presolve.c ****         continue;
4185:lp_solve_5.5/lp_presolve.c **** 
4186:lp_solve_5.5/lp_presolve.c ****       /* Insist on identical column lengths (sort is decending in column lengths) */
4187:lp_solve_5.5/lp_presolve.c ****       ii = QS[ib].int4.intpar2 - QS[ie].int4.intpar2;
 44574               		.loc 2 4187 0
 44575 13252 8B81      		ldd r24,Y+3
 44576 13254 9C81      		ldd r25,Y+4
 44577 13256 880F      		lsl r24
 44578 13258 991F      		rol r25
 44579 1325a 880F      		lsl r24
 44580 1325c 991F      		rol r25
 44581 1325e 880F      		lsl r24
 44582 13260 991F      		rol r25
 44583 13262 298D      		ldd r18,Y+25
 44584 13264 3A8D      		ldd r19,Y+26
 44585 13266 820F      		add r24,r18
 44586 13268 931F      		adc r25,r19
 44587 1326a FC01      		movw r30,r24
 44588 1326c 2481      		ldd r18,Z+4
 44589 1326e 3581      		ldd r19,Z+5
 44590 13270 8D81      		ldd r24,Y+5
 44591 13272 9E81      		ldd r25,Y+6
 44592 13274 880F      		lsl r24
 44593 13276 991F      		rol r25
 44594 13278 880F      		lsl r24
 44595 1327a 991F      		rol r25
 44596 1327c 880F      		lsl r24
 44597 1327e 991F      		rol r25
 44598 13280 498D      		ldd r20,Y+25
 44599 13282 5A8D      		ldd r21,Y+26
 44600 13284 840F      		add r24,r20
 44601 13286 951F      		adc r25,r21
 44602 13288 FC01      		movw r30,r24
 44603 1328a 8481      		ldd r24,Z+4
 44604 1328c 9581      		ldd r25,Z+5
 44605 1328e A901      		movw r20,r18
 44606 13290 481B      		sub r20,r24
 44607 13292 590B      		sbc r21,r25
 44608 13294 CA01      		movw r24,r20
 44609 13296 9E8F      		std Y+30,r25
 44610 13298 8D8F      		std Y+29,r24
4188:lp_solve_5.5/lp_presolve.c ****       if(ii != 0)
 44611               		.loc 2 4188 0
 44612 1329a 8D8D      		ldd r24,Y+29
 44613 1329c 9E8D      		ldd r25,Y+30
 44614 1329e 892B      		or r24,r25
 44615 132a0 01F0      		breq .+2
 44616 132a2 00C0      		rjmp .L1895
4189:lp_solve_5.5/lp_presolve.c ****         break;
4190:lp_solve_5.5/lp_presolve.c **** 
4191:lp_solve_5.5/lp_presolve.c ****       /* Also insist on identical starting positions */
4192:lp_solve_5.5/lp_presolve.c ****       ii = QS[ib].int4.intpar1 - QS[ie].int4.intpar1;
 44617               		.loc 2 4192 0
 44618 132a4 8B81      		ldd r24,Y+3
 44619 132a6 9C81      		ldd r25,Y+4
 44620 132a8 880F      		lsl r24
 44621 132aa 991F      		rol r25
 44622 132ac 880F      		lsl r24
 44623 132ae 991F      		rol r25
 44624 132b0 880F      		lsl r24
 44625 132b2 991F      		rol r25
 44626 132b4 298D      		ldd r18,Y+25
 44627 132b6 3A8D      		ldd r19,Y+26
 44628 132b8 820F      		add r24,r18
 44629 132ba 931F      		adc r25,r19
 44630 132bc FC01      		movw r30,r24
 44631 132be 2281      		ldd r18,Z+2
 44632 132c0 3381      		ldd r19,Z+3
 44633 132c2 8D81      		ldd r24,Y+5
 44634 132c4 9E81      		ldd r25,Y+6
 44635 132c6 880F      		lsl r24
 44636 132c8 991F      		rol r25
 44637 132ca 880F      		lsl r24
 44638 132cc 991F      		rol r25
 44639 132ce 880F      		lsl r24
 44640 132d0 991F      		rol r25
 44641 132d2 498D      		ldd r20,Y+25
 44642 132d4 5A8D      		ldd r21,Y+26
 44643 132d6 840F      		add r24,r20
 44644 132d8 951F      		adc r25,r21
 44645 132da FC01      		movw r30,r24
 44646 132dc 8281      		ldd r24,Z+2
 44647 132de 9381      		ldd r25,Z+3
 44648 132e0 A901      		movw r20,r18
 44649 132e2 481B      		sub r20,r24
 44650 132e4 590B      		sbc r21,r25
 44651 132e6 CA01      		movw r24,r20
 44652 132e8 9E8F      		std Y+30,r25
 44653 132ea 8D8F      		std Y+29,r24
4193:lp_solve_5.5/lp_presolve.c ****       if(ii != 0)
 44654               		.loc 2 4193 0
 44655 132ec 8D8D      		ldd r24,Y+29
 44656 132ee 9E8D      		ldd r25,Y+30
 44657 132f0 892B      		or r24,r25
 44658 132f2 01F0      		breq .+2
 44659 132f4 00C0      		rjmp .L1896
4194:lp_solve_5.5/lp_presolve.c ****         break;
4195:lp_solve_5.5/lp_presolve.c **** 
4196:lp_solve_5.5/lp_presolve.c ****       /* Get column and check if it was previously eliminated */
4197:lp_solve_5.5/lp_presolve.c ****       ii = QS[ie].int4.intval;
 44660               		.loc 2 4197 0
 44661 132f6 8D81      		ldd r24,Y+5
 44662 132f8 9E81      		ldd r25,Y+6
 44663 132fa 880F      		lsl r24
 44664 132fc 991F      		rol r25
 44665 132fe 880F      		lsl r24
 44666 13300 991F      		rol r25
 44667 13302 880F      		lsl r24
 44668 13304 991F      		rol r25
 44669 13306 298D      		ldd r18,Y+25
 44670 13308 3A8D      		ldd r19,Y+26
 44671 1330a 820F      		add r24,r18
 44672 1330c 931F      		adc r25,r19
 44673 1330e FC01      		movw r30,r24
 44674 13310 8081      		ld r24,Z
 44675 13312 9181      		ldd r25,Z+1
 44676 13314 9E8F      		std Y+30,r25
 44677 13316 8D8F      		std Y+29,r24
4198:lp_solve_5.5/lp_presolve.c **** 
4199:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
4200:lp_solve_5.5/lp_presolve.c ****       if((QS[ib].int4.intpar1 > QS[ie].int4.intpar1) ||
4201:lp_solve_5.5/lp_presolve.c ****          ((QS[ib].int4.intpar1 == QS[ie].int4.intpar1) && (QS[ib].int4.intpar2 < QS[ie].int4.intpar
4202:lp_solve_5.5/lp_presolve.c ****         report(lp, SEVERE, "presolve_coldominance01: Invalid sorted column order\n");
4203:lp_solve_5.5/lp_presolve.c **** #endif
4204:lp_solve_5.5/lp_presolve.c **** 
4205:lp_solve_5.5/lp_presolve.c ****       /* Loop over every column member to confirm that the candidate is identical in every row;
4206:lp_solve_5.5/lp_presolve.c ****          we also compute the minimal set order */
4207:lp_solve_5.5/lp_presolve.c ****       rhsval = lp->infinite;
 44678               		.loc 2 4207 0
 44679 13318 8B89      		ldd r24,Y+19
 44680 1331a 9C89      		ldd r25,Y+20
 44681 1331c 865F      		subi r24,-10
 44682 1331e 9C4F      		sbci r25,-4
 44683 13320 FC01      		movw r30,r24
 44684 13322 8081      		ld r24,Z
 44685 13324 9181      		ldd r25,Z+1
 44686 13326 A281      		ldd r26,Z+2
 44687 13328 B381      		ldd r27,Z+3
 44688 1332a 8F87      		std Y+15,r24
 44689 1332c 988B      		std Y+16,r25
 44690 1332e A98B      		std Y+17,r26
 44691 13330 BA8B      		std Y+18,r27
4208:lp_solve_5.5/lp_presolve.c ****       item = 0;
 44692               		.loc 2 4208 0
 44693 13332 18A2      		std Y+32,__zero_reg__
 44694 13334 1F8E      		std Y+31,__zero_reg__
4209:lp_solve_5.5/lp_presolve.c ****       item2 = 0;
 44695               		.loc 2 4209 0
 44696 13336 1AA2      		std Y+34,__zero_reg__
 44697 13338 19A2      		std Y+33,__zero_reg__
4210:lp_solve_5.5/lp_presolve.c ****       for(jb = presolve_nextrow(psdata, ii, &item),
 44698               		.loc 2 4210 0
 44699 1333a AE01      		movw r20,r28
 44700 1333c 415E      		subi r20,-31
 44701 1333e 5F4F      		sbci r21,-1
 44702 13340 2D8D      		ldd r18,Y+29
 44703 13342 3E8D      		ldd r19,Y+30
 44704 13344 8DA5      		ldd r24,Y+45
 44705 13346 9EA5      		ldd r25,Y+46
 44706 13348 B901      		movw r22,r18
 44707 1334a 0E94 0000 		call presolve_nextrow
 44708 1334e 9A87      		std Y+10,r25
 44709 13350 8987      		std Y+9,r24
4211:lp_solve_5.5/lp_presolve.c ****           jj = presolve_nextrow(psdata, i, &item2); jb >= 0;
 44710               		.loc 2 4211 0
 44711 13352 AE01      		movw r20,r28
 44712 13354 4F5D      		subi r20,-33
 44713 13356 5F4F      		sbci r21,-1
 44714 13358 2981      		ldd r18,Y+1
 44715 1335a 3A81      		ldd r19,Y+2
 44716 1335c 8DA5      		ldd r24,Y+45
 44717 1335e 9EA5      		ldd r25,Y+46
 44718 13360 B901      		movw r22,r18
 44719 13362 0E94 0000 		call presolve_nextrow
 44720 13366 9C87      		std Y+12,r25
 44721 13368 8B87      		std Y+11,r24
4210:lp_solve_5.5/lp_presolve.c ****       for(jb = presolve_nextrow(psdata, ii, &item),
 44722               		.loc 2 4210 0
 44723 1336a 00C0      		rjmp .L1867
 44724               	.L1872:
4212:lp_solve_5.5/lp_presolve.c ****           jb = presolve_nextrow(psdata, ii, &item),
4213:lp_solve_5.5/lp_presolve.c ****           jj = presolve_nextrow(psdata, i, &item2)) {
4214:lp_solve_5.5/lp_presolve.c ****         jx = COL_MAT_ROWNR(jb);
 44725               		.loc 2 4214 0
 44726 1336c 8D89      		ldd r24,Y+21
 44727 1336e 9E89      		ldd r25,Y+22
 44728 13370 FC01      		movw r30,r24
 44729 13372 2685      		ldd r18,Z+14
 44730 13374 3785      		ldd r19,Z+15
 44731 13376 8985      		ldd r24,Y+9
 44732 13378 9A85      		ldd r25,Y+10
 44733 1337a 880F      		lsl r24
 44734 1337c 991F      		rol r25
 44735 1337e 820F      		add r24,r18
 44736 13380 931F      		adc r25,r19
 44737 13382 FC01      		movw r30,r24
 44738 13384 8081      		ld r24,Z
 44739 13386 9181      		ldd r25,Z+1
 44740 13388 9C8F      		std Y+28,r25
 44741 1338a 8B8F      		std Y+27,r24
4215:lp_solve_5.5/lp_presolve.c ****         if(jx != COL_MAT_ROWNR(jj))
 44742               		.loc 2 4215 0
 44743 1338c 8D89      		ldd r24,Y+21
 44744 1338e 9E89      		ldd r25,Y+22
 44745 13390 FC01      		movw r30,r24
 44746 13392 2685      		ldd r18,Z+14
 44747 13394 3785      		ldd r19,Z+15
 44748 13396 8B85      		ldd r24,Y+11
 44749 13398 9C85      		ldd r25,Y+12
 44750 1339a 880F      		lsl r24
 44751 1339c 991F      		rol r25
 44752 1339e 820F      		add r24,r18
 44753 133a0 931F      		adc r25,r19
 44754 133a2 FC01      		movw r30,r24
 44755 133a4 2081      		ld r18,Z
 44756 133a6 3181      		ldd r19,Z+1
 44757 133a8 8B8D      		ldd r24,Y+27
 44758 133aa 9C8D      		ldd r25,Y+28
 44759 133ac 2817      		cp r18,r24
 44760 133ae 3907      		cpc r19,r25
 44761 133b0 01F0      		breq .+2
 44762 133b2 00C0      		rjmp .L1897
4216:lp_solve_5.5/lp_presolve.c ****           break;
4217:lp_solve_5.5/lp_presolve.c ****         if(isActiveLink(sets, jx))
 44763               		.loc 2 4217 0
 44764 133b4 8BA5      		ldd r24,Y+43
 44765 133b6 9CA5      		ldd r25,Y+44
 44766 133b8 2B8D      		ldd r18,Y+27
 44767 133ba 3C8D      		ldd r19,Y+28
 44768 133bc B901      		movw r22,r18
 44769 133be 0E94 0000 		call isActiveLink
 44770 133c2 8823      		tst r24
 44771 133c4 01F0      		breq .L1870
4218:lp_solve_5.5/lp_presolve.c ****           SETMIN(rhsval, lp->orig_rhs[jx]);
 44772               		.loc 2 4218 0
 44773 133c6 8B89      		ldd r24,Y+19
 44774 133c8 9C89      		ldd r25,Y+20
 44775 133ca 8A55      		subi r24,90
 44776 133cc 9D4F      		sbci r25,-3
 44777 133ce FC01      		movw r30,r24
 44778 133d0 2081      		ld r18,Z
 44779 133d2 3181      		ldd r19,Z+1
 44780 133d4 8B8D      		ldd r24,Y+27
 44781 133d6 9C8D      		ldd r25,Y+28
 44782 133d8 880F      		lsl r24
 44783 133da 991F      		rol r25
 44784 133dc 880F      		lsl r24
 44785 133de 991F      		rol r25
 44786 133e0 820F      		add r24,r18
 44787 133e2 931F      		adc r25,r19
 44788 133e4 FC01      		movw r30,r24
 44789 133e6 8081      		ld r24,Z
 44790 133e8 9181      		ldd r25,Z+1
 44791 133ea A281      		ldd r26,Z+2
 44792 133ec B381      		ldd r27,Z+3
 44793 133ee 2F85      		ldd r18,Y+15
 44794 133f0 3889      		ldd r19,Y+16
 44795 133f2 4989      		ldd r20,Y+17
 44796 133f4 5A89      		ldd r21,Y+18
 44797 133f6 BC01      		movw r22,r24
 44798 133f8 CD01      		movw r24,r26
 44799 133fa 0E94 0000 		call __ltsf2
 44800 133fe 8823      		tst r24
 44801 13400 04F4      		brge .L1870
 44802               		.loc 2 4218 0 is_stmt 0 discriminator 1
 44803 13402 8B89      		ldd r24,Y+19
 44804 13404 9C89      		ldd r25,Y+20
 44805 13406 8A55      		subi r24,90
 44806 13408 9D4F      		sbci r25,-3
 44807 1340a FC01      		movw r30,r24
 44808 1340c 2081      		ld r18,Z
 44809 1340e 3181      		ldd r19,Z+1
 44810 13410 8B8D      		ldd r24,Y+27
 44811 13412 9C8D      		ldd r25,Y+28
 44812 13414 880F      		lsl r24
 44813 13416 991F      		rol r25
 44814 13418 880F      		lsl r24
 44815 1341a 991F      		rol r25
 44816 1341c 820F      		add r24,r18
 44817 1341e 931F      		adc r25,r19
 44818 13420 FC01      		movw r30,r24
 44819 13422 8081      		ld r24,Z
 44820 13424 9181      		ldd r25,Z+1
 44821 13426 A281      		ldd r26,Z+2
 44822 13428 B381      		ldd r27,Z+3
 44823 1342a 8F87      		std Y+15,r24
 44824 1342c 988B      		std Y+16,r25
 44825 1342e A98B      		std Y+17,r26
 44826 13430 BA8B      		std Y+18,r27
 44827               	.L1870:
4212:lp_solve_5.5/lp_presolve.c ****           jj = presolve_nextrow(psdata, i, &item2)) {
 44828               		.loc 2 4212 0 is_stmt 1
 44829 13432 AE01      		movw r20,r28
 44830 13434 415E      		subi r20,-31
 44831 13436 5F4F      		sbci r21,-1
 44832 13438 2D8D      		ldd r18,Y+29
 44833 1343a 3E8D      		ldd r19,Y+30
 44834 1343c 8DA5      		ldd r24,Y+45
 44835 1343e 9EA5      		ldd r25,Y+46
 44836 13440 B901      		movw r22,r18
 44837 13442 0E94 0000 		call presolve_nextrow
 44838 13446 9A87      		std Y+10,r25
 44839 13448 8987      		std Y+9,r24
4213:lp_solve_5.5/lp_presolve.c ****         jx = COL_MAT_ROWNR(jb);
 44840               		.loc 2 4213 0
 44841 1344a AE01      		movw r20,r28
 44842 1344c 4F5D      		subi r20,-33
 44843 1344e 5F4F      		sbci r21,-1
 44844 13450 2981      		ldd r18,Y+1
 44845 13452 3A81      		ldd r19,Y+2
 44846 13454 8DA5      		ldd r24,Y+45
 44847 13456 9EA5      		ldd r25,Y+46
 44848 13458 B901      		movw r22,r18
 44849 1345a 0E94 0000 		call presolve_nextrow
 44850 1345e 9C87      		std Y+12,r25
 44851 13460 8B87      		std Y+11,r24
 44852               	.L1867:
4210:lp_solve_5.5/lp_presolve.c ****           jj = presolve_nextrow(psdata, i, &item2); jb >= 0;
 44853               		.loc 2 4210 0
 44854 13462 8985      		ldd r24,Y+9
 44855 13464 9A85      		ldd r25,Y+10
 44856 13466 9923      		tst r25
 44857 13468 04F0      		brlt .+2
 44858 1346a 00C0      		rjmp .L1872
 44859 1346c 00C0      		rjmp .L1869
 44860               	.L1897:
4216:lp_solve_5.5/lp_presolve.c ****         if(isActiveLink(sets, jx))
 44861               		.loc 2 4216 0
 44862 1346e 0000      		nop
 44863               	.L1869:
4219:lp_solve_5.5/lp_presolve.c ****       }
4220:lp_solve_5.5/lp_presolve.c **** 
4221:lp_solve_5.5/lp_presolve.c ****       /* "We have contact" */
4222:lp_solve_5.5/lp_presolve.c ****       if(jb < 0) {
 44864               		.loc 2 4222 0
 44865 13470 8985      		ldd r24,Y+9
 44866 13472 9A85      		ldd r25,Y+10
 44867 13474 9923      		tst r25
 44868 13476 04F0      		brlt .+2
 44869 13478 00C0      		rjmp .L1863
4223:lp_solve_5.5/lp_presolve.c ****         coldel[++coldel[0]] = ii;
 44870               		.loc 2 4223 0
 44871 1347a 2DA1      		ldd r18,Y+37
 44872 1347c 3EA1      		ldd r19,Y+38
 44873 1347e 8DA1      		ldd r24,Y+37
 44874 13480 9EA1      		ldd r25,Y+38
 44875 13482 FC01      		movw r30,r24
 44876 13484 4081      		ld r20,Z
 44877 13486 5181      		ldd r21,Z+1
 44878 13488 4F5F      		subi r20,-1
 44879 1348a 5F4F      		sbci r21,-1
 44880 1348c FC01      		movw r30,r24
 44881 1348e 5183      		std Z+1,r21
 44882 13490 4083      		st Z,r20
 44883 13492 FC01      		movw r30,r24
 44884 13494 8081      		ld r24,Z
 44885 13496 9181      		ldd r25,Z+1
 44886 13498 880F      		lsl r24
 44887 1349a 991F      		rol r25
 44888 1349c 820F      		add r24,r18
 44889 1349e 931F      		adc r25,r19
 44890 134a0 2D8D      		ldd r18,Y+29
 44891 134a2 3E8D      		ldd r19,Y+30
 44892 134a4 FC01      		movw r30,r24
 44893 134a6 3183      		std Z+1,r19
 44894 134a8 2083      		st Z,r18
4224:lp_solve_5.5/lp_presolve.c ****         colobj[coldel[0]] = lp->orig_obj[ii];
 44895               		.loc 2 4224 0
 44896 134aa 29A5      		ldd r18,Y+41
 44897 134ac 3AA5      		ldd r19,Y+42
 44898 134ae 8DA1      		ldd r24,Y+37
 44899 134b0 9EA1      		ldd r25,Y+38
 44900 134b2 FC01      		movw r30,r24
 44901 134b4 8081      		ld r24,Z
 44902 134b6 9181      		ldd r25,Z+1
 44903 134b8 880F      		lsl r24
 44904 134ba 991F      		rol r25
 44905 134bc 880F      		lsl r24
 44906 134be 991F      		rol r25
 44907 134c0 280F      		add r18,r24
 44908 134c2 391F      		adc r19,r25
 44909 134c4 8B89      		ldd r24,Y+19
 44910 134c6 9C89      		ldd r25,Y+20
 44911 134c8 845D      		subi r24,-44
 44912 134ca 9D4F      		sbci r25,-3
 44913 134cc FC01      		movw r30,r24
 44914 134ce 4081      		ld r20,Z
 44915 134d0 5181      		ldd r21,Z+1
 44916 134d2 8D8D      		ldd r24,Y+29
 44917 134d4 9E8D      		ldd r25,Y+30
 44918 134d6 880F      		lsl r24
 44919 134d8 991F      		rol r25
 44920 134da 880F      		lsl r24
 44921 134dc 991F      		rol r25
 44922 134de 840F      		add r24,r20
 44923 134e0 951F      		adc r25,r21
 44924 134e2 FC01      		movw r30,r24
 44925 134e4 8081      		ld r24,Z
 44926 134e6 9181      		ldd r25,Z+1
 44927 134e8 A281      		ldd r26,Z+2
 44928 134ea B381      		ldd r27,Z+3
 44929 134ec F901      		movw r30,r18
 44930 134ee 8083      		st Z,r24
 44931 134f0 9183      		std Z+1,r25
 44932 134f2 A283      		std Z+2,r26
 44933 134f4 B383      		std Z+3,r27
 44934 134f6 00C0      		rjmp .L1863
 44935               	.L1894:
4184:lp_solve_5.5/lp_presolve.c **** 
 44936               		.loc 2 4184 0
 44937 134f8 0000      		nop
 44938               	.L1863:
4179:lp_solve_5.5/lp_presolve.c **** 
 44939               		.loc 2 4179 0 discriminator 2
 44940 134fa 8D81      		ldd r24,Y+5
 44941 134fc 9E81      		ldd r25,Y+6
 44942 134fe 0196      		adiw r24,1
 44943 13500 9E83      		std Y+6,r25
 44944 13502 8D83      		std Y+5,r24
 44945               	.L1861:
4179:lp_solve_5.5/lp_presolve.c **** 
 44946               		.loc 2 4179 0 is_stmt 0 discriminator 1
 44947 13504 2D81      		ldd r18,Y+5
 44948 13506 3E81      		ldd r19,Y+6
 44949 13508 8F81      		ldd r24,Y+7
 44950 1350a 9885      		ldd r25,Y+8
 44951 1350c 2817      		cp r18,r24
 44952 1350e 3907      		cpc r19,r25
 44953 13510 04F4      		brge .+2
 44954 13512 00C0      		rjmp .L1873
 44955 13514 00C0      		rjmp .L1865
 44956               	.L1895:
4189:lp_solve_5.5/lp_presolve.c **** 
 44957               		.loc 2 4189 0 is_stmt 1
 44958 13516 0000      		nop
 44959 13518 00C0      		rjmp .L1865
 44960               	.L1896:
4194:lp_solve_5.5/lp_presolve.c **** 
 44961               		.loc 2 4194 0
 44962 1351a 0000      		nop
 44963               	.L1865:
4225:lp_solve_5.5/lp_presolve.c ****       }
4226:lp_solve_5.5/lp_presolve.c ****     }
4227:lp_solve_5.5/lp_presolve.c **** 
4228:lp_solve_5.5/lp_presolve.c ****     /* Find the dominant columns, fix and delete the others */
4229:lp_solve_5.5/lp_presolve.c ****     if(coldel[0] > 1) {
 44964               		.loc 2 4229 0
 44965 1351c 8DA1      		ldd r24,Y+37
 44966 1351e 9EA1      		ldd r25,Y+38
 44967 13520 FC01      		movw r30,r24
 44968 13522 8081      		ld r24,Z
 44969 13524 9181      		ldd r25,Z+1
 44970 13526 0297      		sbiw r24,2
 44971 13528 04F4      		brge .+2
 44972 1352a 00C0      		rjmp .L1874
4230:lp_solve_5.5/lp_presolve.c ****       qsortex(colobj+1, coldel[0], 0, sizeof(*colobj), FALSE, compareREAL, coldel+1, sizeof(*coldel
 44973               		.loc 2 4230 0
 44974 1352c 8DA1      		ldd r24,Y+37
 44975 1352e 9EA1      		ldd r25,Y+38
 44976 13530 9C01      		movw r18,r24
 44977 13532 2E5F      		subi r18,-2
 44978 13534 3F4F      		sbci r19,-1
 44979 13536 8DA1      		ldd r24,Y+37
 44980 13538 9EA1      		ldd r25,Y+38
 44981 1353a FC01      		movw r30,r24
 44982 1353c 6081      		ld r22,Z
 44983 1353e 7181      		ldd r23,Z+1
 44984 13540 89A5      		ldd r24,Y+41
 44985 13542 9AA5      		ldd r25,Y+42
 44986 13544 0496      		adiw r24,4
 44987 13546 6894      		set
 44988 13548 AA24      		clr r10
 44989 1354a A1F8      		bld r10,1
 44990 1354c B12C      		mov r11,__zero_reg__
 44991 1354e 6901      		movw r12,r18
 44992 13550 0F2E      		mov __tmp_reg__,r31
 44993 13552 F0E0      		ldi r31,lo8(gs(compareREAL))
 44994 13554 EF2E      		mov r14,r31
 44995 13556 F0E0      		ldi r31,hi8(gs(compareREAL))
 44996 13558 FF2E      		mov r15,r31
 44997 1355a F02D      		mov r31,__tmp_reg__
 44998 1355c 00E0      		ldi r16,0
 44999 1355e 24E0      		ldi r18,lo8(4)
 45000 13560 30E0      		ldi r19,0
 45001 13562 40E0      		ldi r20,0
 45002 13564 50E0      		ldi r21,0
 45003 13566 0E94 0000 		call qsortex
4231:lp_solve_5.5/lp_presolve.c ****       /* if(rhsval+lp->epsvalue < lp->infinite) { */
4232:lp_solve_5.5/lp_presolve.c ****         jb = (NATURAL) (rhsval+lp->epsvalue);
 45004               		.loc 2 4232 0
 45005 1356a 8B89      		ldd r24,Y+19
 45006 1356c 9C89      		ldd r25,Y+20
 45007 1356e 8A5E      		subi r24,-22
 45008 13570 9C4F      		sbci r25,-4
 45009 13572 FC01      		movw r30,r24
 45010 13574 8081      		ld r24,Z
 45011 13576 9181      		ldd r25,Z+1
 45012 13578 A281      		ldd r26,Z+2
 45013 1357a B381      		ldd r27,Z+3
 45014 1357c 2F85      		ldd r18,Y+15
 45015 1357e 3889      		ldd r19,Y+16
 45016 13580 4989      		ldd r20,Y+17
 45017 13582 5A89      		ldd r21,Y+18
 45018 13584 BC01      		movw r22,r24
 45019 13586 CD01      		movw r24,r26
 45020 13588 0E94 0000 		call __addsf3
 45021 1358c DC01      		movw r26,r24
 45022 1358e CB01      		movw r24,r22
 45023 13590 BC01      		movw r22,r24
 45024 13592 CD01      		movw r24,r26
 45025 13594 0E94 0000 		call __fixsfsi
 45026 13598 DC01      		movw r26,r24
 45027 1359a CB01      		movw r24,r22
 45028 1359c 9A87      		std Y+10,r25
 45029 1359e 8987      		std Y+9,r24
4233:lp_solve_5.5/lp_presolve.c ****         /* printf("%f / %d\n", rhsval, jb); */
4234:lp_solve_5.5/lp_presolve.c ****         for(jb++; jb <= coldel[0]; jb++) {
 45030               		.loc 2 4234 0
 45031 135a0 8985      		ldd r24,Y+9
 45032 135a2 9A85      		ldd r25,Y+10
 45033 135a4 0196      		adiw r24,1
 45034 135a6 9A87      		std Y+10,r25
 45035 135a8 8987      		std Y+9,r24
 45036 135aa 00C0      		rjmp .L1875
 45037               	.L1877:
4235:lp_solve_5.5/lp_presolve.c ****           jx = coldel[jb];
 45038               		.loc 2 4235 0
 45039 135ac 2DA1      		ldd r18,Y+37
 45040 135ae 3EA1      		ldd r19,Y+38
 45041 135b0 8985      		ldd r24,Y+9
 45042 135b2 9A85      		ldd r25,Y+10
 45043 135b4 880F      		lsl r24
 45044 135b6 991F      		rol r25
 45045 135b8 820F      		add r24,r18
 45046 135ba 931F      		adc r25,r19
 45047 135bc FC01      		movw r30,r24
 45048 135be 8081      		ld r24,Z
 45049 135c0 9181      		ldd r25,Z+1
 45050 135c2 9C8F      		std Y+28,r25
 45051 135c4 8B8F      		std Y+27,r24
4236:lp_solve_5.5/lp_presolve.c ****           if(!presolve_colfix(psdata, jx, lp->orig_lowbo[nrows+jx], TRUE, &iVarFixed)) {
 45052               		.loc 2 4236 0
 45053 135c6 8B89      		ldd r24,Y+19
 45054 135c8 9C89      		ldd r25,Y+20
 45055 135ca 8E54      		subi r24,78
 45056 135cc 9D4F      		sbci r25,-3
 45057 135ce FC01      		movw r30,r24
 45058 135d0 2081      		ld r18,Z
 45059 135d2 3181      		ldd r19,Z+1
 45060 135d4 4F89      		ldd r20,Y+23
 45061 135d6 588D      		ldd r21,Y+24
 45062 135d8 8B8D      		ldd r24,Y+27
 45063 135da 9C8D      		ldd r25,Y+28
 45064 135dc 840F      		add r24,r20
 45065 135de 951F      		adc r25,r21
 45066 135e0 880F      		lsl r24
 45067 135e2 991F      		rol r25
 45068 135e4 880F      		lsl r24
 45069 135e6 991F      		rol r25
 45070 135e8 820F      		add r24,r18
 45071 135ea 931F      		adc r25,r19
 45072 135ec FC01      		movw r30,r24
 45073 135ee 8081      		ld r24,Z
 45074 135f0 9181      		ldd r25,Z+1
 45075 135f2 A281      		ldd r26,Z+2
 45076 135f4 B381      		ldd r27,Z+3
 45077 135f6 9E01      		movw r18,r28
 45078 135f8 2D5D      		subi r18,-35
 45079 135fa 3F4F      		sbci r19,-1
 45080 135fc 6B8D      		ldd r22,Y+27
 45081 135fe 7C8D      		ldd r23,Y+28
 45082 13600 EDA5      		ldd r30,Y+45
 45083 13602 FEA5      		ldd r31,Y+46
 45084 13604 7901      		movw r14,r18
 45085 13606 01E0      		ldi r16,lo8(1)
 45086 13608 9C01      		movw r18,r24
 45087 1360a AD01      		movw r20,r26
 45088 1360c CF01      		movw r24,r30
 45089 1360e 0E94 0000 		call presolve_colfix
 45090 13612 8823      		tst r24
 45091 13614 01F4      		brne .L1876
4237:lp_solve_5.5/lp_presolve.c ****             status = presolve_setstatus(psdata, INFEASIBLE);
 45092               		.loc 2 4237 0
 45093 13616 8DA5      		ldd r24,Y+45
 45094 13618 9EA5      		ldd r25,Y+46
 45095 1361a 20E0      		ldi r18,lo8(.LC21)
 45096 1361c 30E0      		ldi r19,hi8(.LC21)
 45097 1361e 4DE8      		ldi r20,lo8(-115)
 45098 13620 50E1      		ldi r21,lo8(16)
 45099 13622 62E0      		ldi r22,lo8(2)
 45100 13624 70E0      		ldi r23,0
 45101 13626 0E94 0000 		call presolve_setstatusex
 45102 1362a 9E87      		std Y+14,r25
 45103 1362c 8D87      		std Y+13,r24
4238:lp_solve_5.5/lp_presolve.c ****             goto Finish;
 45104               		.loc 2 4238 0
 45105 1362e 00C0      		rjmp .L1834
 45106               	.L1876:
4239:lp_solve_5.5/lp_presolve.c ****           }
4240:lp_solve_5.5/lp_presolve.c ****           presolve_colremove(psdata, jx, TRUE);
 45107               		.loc 2 4240 0 discriminator 2
 45108 13630 2B8D      		ldd r18,Y+27
 45109 13632 3C8D      		ldd r19,Y+28
 45110 13634 8DA5      		ldd r24,Y+45
 45111 13636 9EA5      		ldd r25,Y+46
 45112 13638 41E0      		ldi r20,lo8(1)
 45113 1363a B901      		movw r22,r18
 45114 1363c 0E94 0000 		call presolve_colremove
4234:lp_solve_5.5/lp_presolve.c ****           jx = coldel[jb];
 45115               		.loc 2 4234 0 discriminator 2
 45116 13640 8985      		ldd r24,Y+9
 45117 13642 9A85      		ldd r25,Y+10
 45118 13644 0196      		adiw r24,1
 45119 13646 9A87      		std Y+10,r25
 45120 13648 8987      		std Y+9,r24
 45121               	.L1875:
4234:lp_solve_5.5/lp_presolve.c ****           jx = coldel[jb];
 45122               		.loc 2 4234 0 is_stmt 0 discriminator 1
 45123 1364a 8DA1      		ldd r24,Y+37
 45124 1364c 9EA1      		ldd r25,Y+38
 45125 1364e FC01      		movw r30,r24
 45126 13650 2081      		ld r18,Z
 45127 13652 3181      		ldd r19,Z+1
 45128 13654 8985      		ldd r24,Y+9
 45129 13656 9A85      		ldd r25,Y+10
 45130 13658 2817      		cp r18,r24
 45131 1365a 3907      		cpc r19,r25
 45132 1365c 04F0      		brlt .+2
 45133 1365e 00C0      		rjmp .L1877
 45134               	.L1874:
4241:lp_solve_5.5/lp_presolve.c ****         }
4242:lp_solve_5.5/lp_presolve.c ****       /*} */
4243:lp_solve_5.5/lp_presolve.c ****     }
4244:lp_solve_5.5/lp_presolve.c **** 
4245:lp_solve_5.5/lp_presolve.c ****     /* Clear the non-zero row values ahead of the next row candidate */
4246:lp_solve_5.5/lp_presolve.c ****     if(ib + 1 < n) {
 45135               		.loc 2 4246 0 is_stmt 1
 45136 13660 8B81      		ldd r24,Y+3
 45137 13662 9C81      		ldd r25,Y+4
 45138 13664 9C01      		movw r18,r24
 45139 13666 2F5F      		subi r18,-1
 45140 13668 3F4F      		sbci r19,-1
 45141 1366a 8F81      		ldd r24,Y+7
 45142 1366c 9885      		ldd r25,Y+8
 45143 1366e 2817      		cp r18,r24
 45144 13670 3907      		cpc r19,r25
 45145 13672 04F0      		brlt .+2
 45146 13674 00C0      		rjmp .L1858
4247:lp_solve_5.5/lp_presolve.c ****       ie = mat->col_end[i-1];
 45147               		.loc 2 4247 0
 45148 13676 8D89      		ldd r24,Y+21
 45149 13678 9E89      		ldd r25,Y+22
 45150 1367a FC01      		movw r30,r24
 45151 1367c 2289      		ldd r18,Z+18
 45152 1367e 3389      		ldd r19,Z+19
 45153 13680 8981      		ldd r24,Y+1
 45154 13682 9A81      		ldd r25,Y+2
 45155 13684 8150      		subi r24,1
 45156 13686 9048      		sbci r25,-128
 45157 13688 880F      		lsl r24
 45158 1368a 991F      		rol r25
 45159 1368c 820F      		add r24,r18
 45160 1368e 931F      		adc r25,r19
 45161 13690 FC01      		movw r30,r24
 45162 13692 8081      		ld r24,Z
 45163 13694 9181      		ldd r25,Z+1
 45164 13696 9E83      		std Y+6,r25
 45165 13698 8D83      		std Y+5,r24
4248:lp_solve_5.5/lp_presolve.c ****       ii = mat->col_end[i];
 45166               		.loc 2 4248 0
 45167 1369a 8D89      		ldd r24,Y+21
 45168 1369c 9E89      		ldd r25,Y+22
 45169 1369e FC01      		movw r30,r24
 45170 136a0 2289      		ldd r18,Z+18
 45171 136a2 3389      		ldd r19,Z+19
 45172 136a4 8981      		ldd r24,Y+1
 45173 136a6 9A81      		ldd r25,Y+2
 45174 136a8 880F      		lsl r24
 45175 136aa 991F      		rol r25
 45176 136ac 820F      		add r24,r18
 45177 136ae 931F      		adc r25,r19
 45178 136b0 FC01      		movw r30,r24
 45179 136b2 8081      		ld r24,Z
 45180 136b4 9181      		ldd r25,Z+1
 45181 136b6 9E8F      		std Y+30,r25
 45182 136b8 8D8F      		std Y+29,r24
4249:lp_solve_5.5/lp_presolve.c ****       for(; ie < ii; ie++)
 45183               		.loc 2 4249 0
 45184 136ba 00C0      		rjmp .L1878
 45185               	.L1879:
4250:lp_solve_5.5/lp_presolve.c ****         colvalues[COL_MAT_ROWNR(ie)] = 0;
 45186               		.loc 2 4250 0 discriminator 2
 45187 136bc 2FA1      		ldd r18,Y+39
 45188 136be 38A5      		ldd r19,Y+40
 45189 136c0 8D89      		ldd r24,Y+21
 45190 136c2 9E89      		ldd r25,Y+22
 45191 136c4 FC01      		movw r30,r24
 45192 136c6 4685      		ldd r20,Z+14
 45193 136c8 5785      		ldd r21,Z+15
 45194 136ca 8D81      		ldd r24,Y+5
 45195 136cc 9E81      		ldd r25,Y+6
 45196 136ce 880F      		lsl r24
 45197 136d0 991F      		rol r25
 45198 136d2 840F      		add r24,r20
 45199 136d4 951F      		adc r25,r21
 45200 136d6 FC01      		movw r30,r24
 45201 136d8 8081      		ld r24,Z
 45202 136da 9181      		ldd r25,Z+1
 45203 136dc 880F      		lsl r24
 45204 136de 991F      		rol r25
 45205 136e0 880F      		lsl r24
 45206 136e2 991F      		rol r25
 45207 136e4 820F      		add r24,r18
 45208 136e6 931F      		adc r25,r19
 45209 136e8 FC01      		movw r30,r24
 45210 136ea 1082      		st Z,__zero_reg__
 45211 136ec 1182      		std Z+1,__zero_reg__
 45212 136ee 1282      		std Z+2,__zero_reg__
 45213 136f0 1382      		std Z+3,__zero_reg__
4249:lp_solve_5.5/lp_presolve.c ****       for(; ie < ii; ie++)
 45214               		.loc 2 4249 0 discriminator 2
 45215 136f2 8D81      		ldd r24,Y+5
 45216 136f4 9E81      		ldd r25,Y+6
 45217 136f6 0196      		adiw r24,1
 45218 136f8 9E83      		std Y+6,r25
 45219 136fa 8D83      		std Y+5,r24
 45220               	.L1878:
4249:lp_solve_5.5/lp_presolve.c ****       for(; ie < ii; ie++)
 45221               		.loc 2 4249 0 is_stmt 0 discriminator 1
 45222 136fc 2D81      		ldd r18,Y+5
 45223 136fe 3E81      		ldd r19,Y+6
 45224 13700 8D8D      		ldd r24,Y+29
 45225 13702 9E8D      		ldd r25,Y+30
 45226 13704 2817      		cp r18,r24
 45227 13706 3907      		cpc r19,r25
 45228 13708 04F0      		brlt .L1879
 45229 1370a 00C0      		rjmp .L1858
 45230               	.L1893:
4163:lp_solve_5.5/lp_presolve.c **** 
 45231               		.loc 2 4163 0 is_stmt 1
 45232 1370c 0000      		nop
 45233               	.L1858:
4158:lp_solve_5.5/lp_presolve.c **** 
 45234               		.loc 2 4158 0 discriminator 2
 45235 1370e 8B81      		ldd r24,Y+3
 45236 13710 9C81      		ldd r25,Y+4
 45237 13712 0196      		adiw r24,1
 45238 13714 9C83      		std Y+4,r25
 45239 13716 8B83      		std Y+3,r24
 45240               	.L1856:
4158:lp_solve_5.5/lp_presolve.c **** 
 45241               		.loc 2 4158 0 is_stmt 0 discriminator 1
 45242 13718 2B81      		ldd r18,Y+3
 45243 1371a 3C81      		ldd r19,Y+4
 45244 1371c 8F81      		ldd r24,Y+7
 45245 1371e 9885      		ldd r25,Y+8
 45246 13720 2817      		cp r18,r24
 45247 13722 3907      		cpc r19,r25
 45248 13724 04F4      		brge .+2
 45249 13726 00C0      		rjmp .L1880
 45250 13728 00C0      		rjmp .L1834
 45251               	.L1887:
4095:lp_solve_5.5/lp_presolve.c **** 
 45252               		.loc 2 4095 0 is_stmt 1
 45253 1372a 0000      		nop
 45254 1372c 00C0      		rjmp .L1834
 45255               	.L1891:
4116:lp_solve_5.5/lp_presolve.c **** 
 45256               		.loc 2 4116 0
 45257 1372e 0000      		nop
 45258               	.L1834:
4251:lp_solve_5.5/lp_presolve.c ****     }
4252:lp_solve_5.5/lp_presolve.c ****   }
4253:lp_solve_5.5/lp_presolve.c **** Finish:
4254:lp_solve_5.5/lp_presolve.c ****   freeLink(&sets);
 45259               		.loc 2 4254 0
 45260 13730 CE01      		movw r24,r28
 45261 13732 8B96      		adiw r24,43
 45262 13734 0E94 0000 		call freeLink
4255:lp_solve_5.5/lp_presolve.c ****   FREE(QS);
 45263               		.loc 2 4255 0
 45264 13738 898D      		ldd r24,Y+25
 45265 1373a 9A8D      		ldd r25,Y+26
 45266 1373c 892B      		or r24,r25
 45267 1373e 01F0      		breq .L1881
 45268               		.loc 2 4255 0 is_stmt 0 discriminator 1
 45269 13740 898D      		ldd r24,Y+25
 45270 13742 9A8D      		ldd r25,Y+26
 45271 13744 0E94 0000 		call free
 45272 13748 1A8E      		std Y+26,__zero_reg__
 45273 1374a 198E      		std Y+25,__zero_reg__
 45274               	.L1881:
4256:lp_solve_5.5/lp_presolve.c ****   FREE(colvalues);
 45275               		.loc 2 4256 0 is_stmt 1
 45276 1374c 8FA1      		ldd r24,Y+39
 45277 1374e 98A5      		ldd r25,Y+40
 45278 13750 892B      		or r24,r25
 45279 13752 01F0      		breq .L1882
 45280               		.loc 2 4256 0 is_stmt 0 discriminator 1
 45281 13754 8FA1      		ldd r24,Y+39
 45282 13756 98A5      		ldd r25,Y+40
 45283 13758 0E94 0000 		call free
 45284 1375c 18A6      		std Y+40,__zero_reg__
 45285 1375e 1FA2      		std Y+39,__zero_reg__
 45286               	.L1882:
4257:lp_solve_5.5/lp_presolve.c ****   FREE(coldel);
 45287               		.loc 2 4257 0 is_stmt 1
 45288 13760 8DA1      		ldd r24,Y+37
 45289 13762 9EA1      		ldd r25,Y+38
 45290 13764 892B      		or r24,r25
 45291 13766 01F0      		breq .L1883
 45292               		.loc 2 4257 0 is_stmt 0 discriminator 1
 45293 13768 8DA1      		ldd r24,Y+37
 45294 1376a 9EA1      		ldd r25,Y+38
 45295 1376c 0E94 0000 		call free
 45296 13770 1EA2      		std Y+38,__zero_reg__
 45297 13772 1DA2      		std Y+37,__zero_reg__
 45298               	.L1883:
4258:lp_solve_5.5/lp_presolve.c ****   FREE(colobj);
 45299               		.loc 2 4258 0 is_stmt 1
 45300 13774 89A5      		ldd r24,Y+41
 45301 13776 9AA5      		ldd r25,Y+42
 45302 13778 892B      		or r24,r25
 45303 1377a 01F0      		breq .L1884
 45304               		.loc 2 4258 0 is_stmt 0 discriminator 1
 45305 1377c 89A5      		ldd r24,Y+41
 45306 1377e 9AA5      		ldd r25,Y+42
 45307 13780 0E94 0000 		call free
 45308 13784 1AA6      		std Y+42,__zero_reg__
 45309 13786 19A6      		std Y+41,__zero_reg__
 45310               	.L1884:
4259:lp_solve_5.5/lp_presolve.c **** 
4260:lp_solve_5.5/lp_presolve.c ****   (*nVarsFixed) += iVarFixed;
 45311               		.loc 2 4260 0 is_stmt 1
 45312 13788 89A9      		ldd r24,Y+49
 45313 1378a 9AA9      		ldd r25,Y+50
 45314 1378c FC01      		movw r30,r24
 45315 1378e 2081      		ld r18,Z
 45316 13790 3181      		ldd r19,Z+1
 45317 13792 8BA1      		ldd r24,Y+35
 45318 13794 9CA1      		ldd r25,Y+36
 45319 13796 280F      		add r18,r24
 45320 13798 391F      		adc r19,r25
 45321 1379a 89A9      		ldd r24,Y+49
 45322 1379c 9AA9      		ldd r25,Y+50
 45323 1379e FC01      		movw r30,r24
 45324 137a0 3183      		std Z+1,r19
 45325 137a2 2083      		st Z,r18
4261:lp_solve_5.5/lp_presolve.c ****   (*nSum)       += iVarFixed;
 45326               		.loc 2 4261 0
 45327 137a4 8BA9      		ldd r24,Y+51
 45328 137a6 9CA9      		ldd r25,Y+52
 45329 137a8 FC01      		movw r30,r24
 45330 137aa 2081      		ld r18,Z
 45331 137ac 3181      		ldd r19,Z+1
 45332 137ae 8BA1      		ldd r24,Y+35
 45333 137b0 9CA1      		ldd r25,Y+36
 45334 137b2 280F      		add r18,r24
 45335 137b4 391F      		adc r19,r25
 45336 137b6 8BA9      		ldd r24,Y+51
 45337 137b8 9CA9      		ldd r25,Y+52
 45338 137ba FC01      		movw r30,r24
 45339 137bc 3183      		std Z+1,r19
 45340 137be 2083      		st Z,r18
4262:lp_solve_5.5/lp_presolve.c **** 
4263:lp_solve_5.5/lp_presolve.c ****   return( status );
 45341               		.loc 2 4263 0
 45342 137c0 8D85      		ldd r24,Y+13
 45343 137c2 9E85      		ldd r25,Y+14
 45344               	.L1885:
 45345               	/* epilogue start */
4264:lp_solve_5.5/lp_presolve.c **** }
 45346               		.loc 2 4264 0 discriminator 1
 45347 137c4 E496      		adiw r28,52
 45348 137c6 0FB6      		in __tmp_reg__,__SREG__
 45349 137c8 F894      		cli
 45350 137ca DEBF      		out __SP_H__,r29
 45351 137cc 0FBE      		out __SREG__,__tmp_reg__
 45352 137ce CDBF      		out __SP_L__,r28
 45353 137d0 DF91      		pop r29
 45354 137d2 CF91      		pop r28
 45355 137d4 0F91      		pop r16
 45356 137d6 FF90      		pop r15
 45357 137d8 EF90      		pop r14
 45358 137da DF90      		pop r13
 45359 137dc CF90      		pop r12
 45360 137de BF90      		pop r11
 45361 137e0 AF90      		pop r10
 45362 137e2 0895      		ret
 45363               		.cfi_endproc
 45364               	.LFE84:
 45366               	.global	presolve_aggregate
 45368               	presolve_aggregate:
 45369               	.LFB85:
4265:lp_solve_5.5/lp_presolve.c **** 
4266:lp_solve_5.5/lp_presolve.c **** #endif
4267:lp_solve_5.5/lp_presolve.c **** 
4268:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_aggregate(presolverec *psdata, int *nConRemoved, int *nVarsFixed, int *nSum)
4269:lp_solve_5.5/lp_presolve.c **** /* This routine combines compatible or identical columns */
4270:lp_solve_5.5/lp_presolve.c **** {
 45370               		.loc 2 4270 0
 45371               		.cfi_startproc
 45372 137e4 CF92      		push r12
 45373               	.LCFI520:
 45374               		.cfi_def_cfa_offset 3
 45375               		.cfi_offset 12, -2
 45376 137e6 DF92      		push r13
 45377               	.LCFI521:
 45378               		.cfi_def_cfa_offset 4
 45379               		.cfi_offset 13, -3
 45380 137e8 EF92      		push r14
 45381               	.LCFI522:
 45382               		.cfi_def_cfa_offset 5
 45383               		.cfi_offset 14, -4
 45384 137ea FF92      		push r15
 45385               	.LCFI523:
 45386               		.cfi_def_cfa_offset 6
 45387               		.cfi_offset 15, -5
 45388 137ec 0F93      		push r16
 45389               	.LCFI524:
 45390               		.cfi_def_cfa_offset 7
 45391               		.cfi_offset 16, -6
 45392 137ee 1F93      		push r17
 45393               	.LCFI525:
 45394               		.cfi_def_cfa_offset 8
 45395               		.cfi_offset 17, -7
 45396 137f0 CF93      		push r28
 45397               	.LCFI526:
 45398               		.cfi_def_cfa_offset 9
 45399               		.cfi_offset 28, -8
 45400 137f2 DF93      		push r29
 45401               	.LCFI527:
 45402               		.cfi_def_cfa_offset 10
 45403               		.cfi_offset 29, -9
 45404 137f4 CDB7      		in r28,__SP_L__
 45405 137f6 DEB7      		in r29,__SP_H__
 45406               	.LCFI528:
 45407               		.cfi_def_cfa_register 28
 45408 137f8 C254      		subi r28,66
 45409 137fa D109      		sbc r29,__zero_reg__
 45410               	.LCFI529:
 45411               		.cfi_def_cfa_offset 76
 45412 137fc 0FB6      		in __tmp_reg__,__SREG__
 45413 137fe F894      		cli
 45414 13800 DEBF      		out __SP_H__,r29
 45415 13802 0FBE      		out __SREG__,__tmp_reg__
 45416 13804 CDBF      		out __SP_L__,r28
 45417               	/* prologue: function */
 45418               	/* frame size = 66 */
 45419               	/* stack size = 74 */
 45420               	.L__stack_usage = 74
 45421 13806 9CAF      		std Y+60,r25
 45422 13808 8BAF      		std Y+59,r24
 45423 1380a 7EAF      		std Y+62,r23
 45424 1380c 6DAF      		std Y+61,r22
 45425 1380e CE01      		movw r24,r28
 45426 13810 CF96      		adiw r24,63
 45427 13812 FC01      		movw r30,r24
 45428 13814 5183      		std Z+1,r21
 45429 13816 4083      		st Z,r20
 45430 13818 CE01      		movw r24,r28
 45431 1381a 8F5B      		subi r24,-65
 45432 1381c 9F4F      		sbci r25,-1
 45433 1381e FC01      		movw r30,r24
 45434 13820 3183      		std Z+1,r19
 45435 13822 2083      		st Z,r18
4271:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 45436               		.loc 2 4271 0
 45437 13824 8BAD      		ldd r24,Y+59
 45438 13826 9CAD      		ldd r25,Y+60
 45439 13828 FC01      		movw r30,r24
 45440 1382a 8289      		ldd r24,Z+18
 45441 1382c 9389      		ldd r25,Z+19
 45442 1382e 9B8F      		std Y+27,r25
 45443 13830 8A8F      		std Y+26,r24
4272:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 45444               		.loc 2 4272 0
 45445 13832 8A8D      		ldd r24,Y+26
 45446 13834 9B8D      		ldd r25,Y+27
 45447 13836 8A54      		subi r24,74
 45448 13838 9D4F      		sbci r25,-3
 45449 1383a FC01      		movw r30,r24
 45450 1383c 8081      		ld r24,Z
 45451 1383e 9181      		ldd r25,Z+1
 45452 13840 9D8F      		std Y+29,r25
 45453 13842 8C8F      		std Y+28,r24
4273:lp_solve_5.5/lp_presolve.c ****   MYBOOL   first;
4274:lp_solve_5.5/lp_presolve.c ****   int      i, ii, ib, ie, ix, n, jb, je, jx, jj, item, item2,
4275:lp_solve_5.5/lp_presolve.c ****            *coldel = NULL, status = RUNNING, iVarFixed = 0;
 45454               		.loc 2 4275 0
 45455 13844 1EAA      		std Y+54,__zero_reg__
 45456 13846 1DAA      		std Y+53,__zero_reg__
 45457 13848 88E0      		ldi r24,lo8(8)
 45458 1384a 90E0      		ldi r25,0
 45459 1384c 998B      		std Y+17,r25
 45460 1384e 888B      		std Y+16,r24
 45461 13850 18AE      		std Y+56,__zero_reg__
 45462 13852 1FAA      		std Y+55,__zero_reg__
4276:lp_solve_5.5/lp_presolve.c ****   REAL     scale, *colvalues = NULL;
 45463               		.loc 2 4276 0
 45464 13854 1AAE      		std Y+58,__zero_reg__
 45465 13856 19AE      		std Y+57,__zero_reg__
4277:lp_solve_5.5/lp_presolve.c ****   UNIONTYPE QSORTrec *QScand = (UNIONTYPE QSORTrec *) calloc(lp->columns+1, sizeof(*QScand));
 45466               		.loc 2 4277 0
 45467 13858 8A8D      		ldd r24,Y+26
 45468 1385a 9B8D      		ldd r25,Y+27
 45469 1385c 8451      		subi r24,20
 45470 1385e 9E4F      		sbci r25,-2
 45471 13860 FC01      		movw r30,r24
 45472 13862 8081      		ld r24,Z
 45473 13864 9181      		ldd r25,Z+1
 45474 13866 0196      		adiw r24,1
 45475 13868 68E0      		ldi r22,lo8(8)
 45476 1386a 70E0      		ldi r23,0
 45477 1386c 0E94 0000 		call calloc
 45478 13870 9F8F      		std Y+31,r25
 45479 13872 8E8F      		std Y+30,r24
4278:lp_solve_5.5/lp_presolve.c **** 
4279:lp_solve_5.5/lp_presolve.c ****   /* Check if we were able to obtain working memory */
4280:lp_solve_5.5/lp_presolve.c ****   if(QScand == NULL)
 45480               		.loc 2 4280 0
 45481 13874 8E8D      		ldd r24,Y+30
 45482 13876 9F8D      		ldd r25,Y+31
 45483 13878 892B      		or r24,r25
 45484 1387a 01F4      		brne .L1899
4281:lp_solve_5.5/lp_presolve.c ****     return( status);
 45485               		.loc 2 4281 0
 45486 1387c 8889      		ldd r24,Y+16
 45487 1387e 9989      		ldd r25,Y+17
 45488 13880 00C0      		rjmp .L1963
 45489               	.L1899:
4282:lp_solve_5.5/lp_presolve.c **** 
4283:lp_solve_5.5/lp_presolve.c ****   /* Obtain the list of qualifying columns to be sorted */
4284:lp_solve_5.5/lp_presolve.c ****   n = 0;
 45490               		.loc 2 4284 0
 45491 13882 1986      		std Y+9,__zero_reg__
 45492 13884 1886      		std Y+8,__zero_reg__
4285:lp_solve_5.5/lp_presolve.c ****   for(i = firstActiveLink(psdata->cols->varmap); i != 0; i = nextActiveLink(psdata->cols->varmap, i
 45493               		.loc 2 4285 0
 45494 13886 8BAD      		ldd r24,Y+59
 45495 13888 9CAD      		ldd r25,Y+60
 45496 1388a FC01      		movw r30,r24
 45497 1388c 8281      		ldd r24,Z+2
 45498 1388e 9381      		ldd r25,Z+3
 45499 13890 FC01      		movw r30,r24
 45500 13892 8081      		ld r24,Z
 45501 13894 9181      		ldd r25,Z+1
 45502 13896 0E94 0000 		call firstActiveLink
 45503 1389a 9B83      		std Y+3,r25
 45504 1389c 8A83      		std Y+2,r24
 45505 1389e 00C0      		rjmp .L1901
 45506               	.L1903:
4286:lp_solve_5.5/lp_presolve.c ****     if(!is_semicont(lp, i) && !SOS_is_member(lp->SOS, 0, i)) {
 45507               		.loc 2 4286 0
 45508 138a0 2A81      		ldd r18,Y+2
 45509 138a2 3B81      		ldd r19,Y+3
 45510 138a4 8A8D      		ldd r24,Y+26
 45511 138a6 9B8D      		ldd r25,Y+27
 45512 138a8 B901      		movw r22,r18
 45513 138aa 0E94 0000 		call is_semicont
 45514 138ae 8823      		tst r24
 45515 138b0 01F0      		breq .+2
 45516 138b2 00C0      		rjmp .L1902
 45517               		.loc 2 4286 0 is_stmt 0 discriminator 1
 45518 138b4 8A8D      		ldd r24,Y+26
 45519 138b6 9B8D      		ldd r25,Y+27
 45520 138b8 8256      		subi r24,98
 45521 138ba 9D4F      		sbci r25,-3
 45522 138bc FC01      		movw r30,r24
 45523 138be 8081      		ld r24,Z
 45524 138c0 9181      		ldd r25,Z+1
 45525 138c2 2A81      		ldd r18,Y+2
 45526 138c4 3B81      		ldd r19,Y+3
 45527 138c6 A901      		movw r20,r18
 45528 138c8 60E0      		ldi r22,0
 45529 138ca 70E0      		ldi r23,0
 45530 138cc 0E94 0000 		call SOS_is_member
 45531 138d0 892B      		or r24,r25
 45532 138d2 01F0      		breq .+2
 45533 138d4 00C0      		rjmp .L1902
4287:lp_solve_5.5/lp_presolve.c ****       QScand[n].int4.intval = i;
 45534               		.loc 2 4287 0 is_stmt 1
 45535 138d6 8885      		ldd r24,Y+8
 45536 138d8 9985      		ldd r25,Y+9
 45537 138da 880F      		lsl r24
 45538 138dc 991F      		rol r25
 45539 138de 880F      		lsl r24
 45540 138e0 991F      		rol r25
 45541 138e2 880F      		lsl r24
 45542 138e4 991F      		rol r25
 45543 138e6 2E8D      		ldd r18,Y+30
 45544 138e8 3F8D      		ldd r19,Y+31
 45545 138ea 820F      		add r24,r18
 45546 138ec 931F      		adc r25,r19
 45547 138ee 2A81      		ldd r18,Y+2
 45548 138f0 3B81      		ldd r19,Y+3
 45549 138f2 FC01      		movw r30,r24
 45550 138f4 3183      		std Z+1,r19
 45551 138f6 2083      		st Z,r18
4288:lp_solve_5.5/lp_presolve.c ****       item = 0;
 45552               		.loc 2 4288 0
 45553 138f8 1AAA      		std Y+50,__zero_reg__
 45554 138fa 19AA      		std Y+49,__zero_reg__
4289:lp_solve_5.5/lp_presolve.c ****       ii = presolve_nextrow(psdata, i, &item);
 45555               		.loc 2 4289 0
 45556 138fc AE01      		movw r20,r28
 45557 138fe 4F5C      		subi r20,-49
 45558 13900 5F4F      		sbci r21,-1
 45559 13902 2A81      		ldd r18,Y+2
 45560 13904 3B81      		ldd r19,Y+3
 45561 13906 8BAD      		ldd r24,Y+59
 45562 13908 9CAD      		ldd r25,Y+60
 45563 1390a B901      		movw r22,r18
 45564 1390c 0E94 0000 		call presolve_nextrow
 45565 13910 99A3      		std Y+33,r25
 45566 13912 88A3      		std Y+32,r24
4290:lp_solve_5.5/lp_presolve.c ****       QScand[n].int4.intpar1 = COL_MAT_ROWNR(ii);
 45567               		.loc 2 4290 0
 45568 13914 8885      		ldd r24,Y+8
 45569 13916 9985      		ldd r25,Y+9
 45570 13918 880F      		lsl r24
 45571 1391a 991F      		rol r25
 45572 1391c 880F      		lsl r24
 45573 1391e 991F      		rol r25
 45574 13920 880F      		lsl r24
 45575 13922 991F      		rol r25
 45576 13924 2E8D      		ldd r18,Y+30
 45577 13926 3F8D      		ldd r19,Y+31
 45578 13928 820F      		add r24,r18
 45579 1392a 931F      		adc r25,r19
 45580 1392c 2C8D      		ldd r18,Y+28
 45581 1392e 3D8D      		ldd r19,Y+29
 45582 13930 F901      		movw r30,r18
 45583 13932 4685      		ldd r20,Z+14
 45584 13934 5785      		ldd r21,Z+15
 45585 13936 28A1      		ldd r18,Y+32
 45586 13938 39A1      		ldd r19,Y+33
 45587 1393a 220F      		lsl r18
 45588 1393c 331F      		rol r19
 45589 1393e 240F      		add r18,r20
 45590 13940 351F      		adc r19,r21
 45591 13942 F901      		movw r30,r18
 45592 13944 2081      		ld r18,Z
 45593 13946 3181      		ldd r19,Z+1
 45594 13948 FC01      		movw r30,r24
 45595 1394a 3383      		std Z+3,r19
 45596 1394c 2283      		std Z+2,r18
4291:lp_solve_5.5/lp_presolve.c ****       ii = presolve_collength(psdata, i);
 45597               		.loc 2 4291 0
 45598 1394e 2A81      		ldd r18,Y+2
 45599 13950 3B81      		ldd r19,Y+3
 45600 13952 8BAD      		ldd r24,Y+59
 45601 13954 9CAD      		ldd r25,Y+60
 45602 13956 B901      		movw r22,r18
 45603 13958 0E94 0000 		call presolve_collength
 45604 1395c 99A3      		std Y+33,r25
 45605 1395e 88A3      		std Y+32,r24
4292:lp_solve_5.5/lp_presolve.c ****       QScand[n].int4.intpar2 = ii;
 45606               		.loc 2 4292 0
 45607 13960 8885      		ldd r24,Y+8
 45608 13962 9985      		ldd r25,Y+9
 45609 13964 880F      		lsl r24
 45610 13966 991F      		rol r25
 45611 13968 880F      		lsl r24
 45612 1396a 991F      		rol r25
 45613 1396c 880F      		lsl r24
 45614 1396e 991F      		rol r25
 45615 13970 2E8D      		ldd r18,Y+30
 45616 13972 3F8D      		ldd r19,Y+31
 45617 13974 820F      		add r24,r18
 45618 13976 931F      		adc r25,r19
 45619 13978 28A1      		ldd r18,Y+32
 45620 1397a 39A1      		ldd r19,Y+33
 45621 1397c FC01      		movw r30,r24
 45622 1397e 3583      		std Z+5,r19
 45623 13980 2483      		std Z+4,r18
4293:lp_solve_5.5/lp_presolve.c ****       n++;
 45624               		.loc 2 4293 0
 45625 13982 8885      		ldd r24,Y+8
 45626 13984 9985      		ldd r25,Y+9
 45627 13986 0196      		adiw r24,1
 45628 13988 9987      		std Y+9,r25
 45629 1398a 8887      		std Y+8,r24
 45630               	.L1902:
4285:lp_solve_5.5/lp_presolve.c ****     if(!is_semicont(lp, i) && !SOS_is_member(lp->SOS, 0, i)) {
 45631               		.loc 2 4285 0 discriminator 2
 45632 1398c 8BAD      		ldd r24,Y+59
 45633 1398e 9CAD      		ldd r25,Y+60
 45634 13990 FC01      		movw r30,r24
 45635 13992 8281      		ldd r24,Z+2
 45636 13994 9381      		ldd r25,Z+3
 45637 13996 FC01      		movw r30,r24
 45638 13998 8081      		ld r24,Z
 45639 1399a 9181      		ldd r25,Z+1
 45640 1399c 2A81      		ldd r18,Y+2
 45641 1399e 3B81      		ldd r19,Y+3
 45642 139a0 B901      		movw r22,r18
 45643 139a2 0E94 0000 		call nextActiveLink
 45644 139a6 9B83      		std Y+3,r25
 45645 139a8 8A83      		std Y+2,r24
 45646               	.L1901:
4285:lp_solve_5.5/lp_presolve.c ****     if(!is_semicont(lp, i) && !SOS_is_member(lp->SOS, 0, i)) {
 45647               		.loc 2 4285 0 is_stmt 0 discriminator 1
 45648 139aa 8A81      		ldd r24,Y+2
 45649 139ac 9B81      		ldd r25,Y+3
 45650 139ae 892B      		or r24,r25
 45651 139b0 01F0      		breq .+2
 45652 139b2 00C0      		rjmp .L1903
4294:lp_solve_5.5/lp_presolve.c ****     }
4295:lp_solve_5.5/lp_presolve.c ****   if(n <= 1) {
 45653               		.loc 2 4295 0 is_stmt 1
 45654 139b4 8885      		ldd r24,Y+8
 45655 139b6 9985      		ldd r25,Y+9
 45656 139b8 0297      		sbiw r24,2
 45657 139ba 04F4      		brge .L1904
4296:lp_solve_5.5/lp_presolve.c ****     FREE(QScand);
 45658               		.loc 2 4296 0
 45659 139bc 8E8D      		ldd r24,Y+30
 45660 139be 9F8D      		ldd r25,Y+31
 45661 139c0 892B      		or r24,r25
 45662 139c2 01F0      		breq .L1905
 45663               		.loc 2 4296 0 is_stmt 0 discriminator 1
 45664 139c4 8E8D      		ldd r24,Y+30
 45665 139c6 9F8D      		ldd r25,Y+31
 45666 139c8 0E94 0000 		call free
 45667 139cc 1F8E      		std Y+31,__zero_reg__
 45668 139ce 1E8E      		std Y+30,__zero_reg__
 45669               	.L1905:
4297:lp_solve_5.5/lp_presolve.c ****     return( status );
 45670               		.loc 2 4297 0 is_stmt 1
 45671 139d0 8889      		ldd r24,Y+16
 45672 139d2 9989      		ldd r25,Y+17
 45673 139d4 00C0      		rjmp .L1963
 45674               	.L1904:
4298:lp_solve_5.5/lp_presolve.c ****   }
4299:lp_solve_5.5/lp_presolve.c ****   QS_execute(QScand, n, (findCompare_func *) compRedundant, NULL);
 45675               		.loc 2 4299 0
 45676 139d6 6885      		ldd r22,Y+8
 45677 139d8 7985      		ldd r23,Y+9
 45678 139da 8E8D      		ldd r24,Y+30
 45679 139dc 9F8D      		ldd r25,Y+31
 45680 139de 20E0      		ldi r18,0
 45681 139e0 30E0      		ldi r19,0
 45682 139e2 40E0      		ldi r20,lo8(gs(compRedundant))
 45683 139e4 50E0      		ldi r21,hi8(gs(compRedundant))
 45684 139e6 0E94 0000 		call QS_execute
4300:lp_solve_5.5/lp_presolve.c **** 
4301:lp_solve_5.5/lp_presolve.c ****   /* Let us start from the top of the list, going forward and looking
4302:lp_solve_5.5/lp_presolve.c ****     for the longest possible identical column */
4303:lp_solve_5.5/lp_presolve.c ****   if(!allocREAL(lp, &colvalues, lp->rows + 1, TRUE) ||
 45685               		.loc 2 4303 0
 45686 139ea 8A8D      		ldd r24,Y+26
 45687 139ec 9B8D      		ldd r25,Y+27
 45688 139ee 8651      		subi r24,22
 45689 139f0 9E4F      		sbci r25,-2
 45690 139f2 FC01      		movw r30,r24
 45691 139f4 8081      		ld r24,Z
 45692 139f6 9181      		ldd r25,Z+1
 45693 139f8 AC01      		movw r20,r24
 45694 139fa 4F5F      		subi r20,-1
 45695 139fc 5F4F      		sbci r21,-1
 45696 139fe BE01      		movw r22,r28
 45697 13a00 675C      		subi r22,-57
 45698 13a02 7F4F      		sbci r23,-1
 45699 13a04 8A8D      		ldd r24,Y+26
 45700 13a06 9B8D      		ldd r25,Y+27
 45701 13a08 21E0      		ldi r18,lo8(1)
 45702 13a0a 0E94 0000 		call allocREAL
 45703 13a0e 8823      		tst r24
 45704 13a10 01F4      		brne .+2
 45705 13a12 00C0      		rjmp .L1906
4304:lp_solve_5.5/lp_presolve.c ****      !allocINT(lp, &coldel, lp->columns + 1, FALSE))
 45706               		.loc 2 4304 0 discriminator 1
 45707 13a14 8A8D      		ldd r24,Y+26
 45708 13a16 9B8D      		ldd r25,Y+27
 45709 13a18 8451      		subi r24,20
 45710 13a1a 9E4F      		sbci r25,-2
 45711 13a1c FC01      		movw r30,r24
 45712 13a1e 8081      		ld r24,Z
 45713 13a20 9181      		ldd r25,Z+1
 45714 13a22 AC01      		movw r20,r24
 45715 13a24 4F5F      		subi r20,-1
 45716 13a26 5F4F      		sbci r21,-1
 45717 13a28 BE01      		movw r22,r28
 45718 13a2a 6B5C      		subi r22,-53
 45719 13a2c 7F4F      		sbci r23,-1
 45720 13a2e 8A8D      		ldd r24,Y+26
 45721 13a30 9B8D      		ldd r25,Y+27
 45722 13a32 20E0      		ldi r18,0
 45723 13a34 0E94 0000 		call allocINT
4303:lp_solve_5.5/lp_presolve.c ****      !allocINT(lp, &coldel, lp->columns + 1, FALSE))
 45724               		.loc 2 4303 0 discriminator 1
 45725 13a38 8823      		tst r24
 45726 13a3a 01F4      		brne .+2
 45727 13a3c 00C0      		rjmp .L1906
4305:lp_solve_5.5/lp_presolve.c ****     goto Finish;
4306:lp_solve_5.5/lp_presolve.c **** 
4307:lp_solve_5.5/lp_presolve.c ****   for(ib = 0; ib < n; ib++) {
 45728               		.loc 2 4307 0
 45729 13a3e 1D82      		std Y+5,__zero_reg__
 45730 13a40 1C82      		std Y+4,__zero_reg__
 45731 13a42 00C0      		rjmp .L1907
 45732               	.L1959:
4308:lp_solve_5.5/lp_presolve.c **** 
4309:lp_solve_5.5/lp_presolve.c ****     /* Get column and check if it was previously eliminated */
4310:lp_solve_5.5/lp_presolve.c ****     i = QScand[ib].int4.intval;
 45733               		.loc 2 4310 0
 45734 13a44 8C81      		ldd r24,Y+4
 45735 13a46 9D81      		ldd r25,Y+5
 45736 13a48 880F      		lsl r24
 45737 13a4a 991F      		rol r25
 45738 13a4c 880F      		lsl r24
 45739 13a4e 991F      		rol r25
 45740 13a50 880F      		lsl r24
 45741 13a52 991F      		rol r25
 45742 13a54 2E8D      		ldd r18,Y+30
 45743 13a56 3F8D      		ldd r19,Y+31
 45744 13a58 820F      		add r24,r18
 45745 13a5a 931F      		adc r25,r19
 45746 13a5c FC01      		movw r30,r24
 45747 13a5e 8081      		ld r24,Z
 45748 13a60 9181      		ldd r25,Z+1
 45749 13a62 9B83      		std Y+3,r25
 45750 13a64 8A83      		std Y+2,r24
4311:lp_solve_5.5/lp_presolve.c ****     if(i < 0)
 45751               		.loc 2 4311 0
 45752 13a66 8A81      		ldd r24,Y+2
 45753 13a68 9B81      		ldd r25,Y+3
 45754 13a6a 9923      		tst r25
 45755 13a6c 04F4      		brge .+2
 45756 13a6e 00C0      		rjmp .L1976
4312:lp_solve_5.5/lp_presolve.c ****       continue;
4313:lp_solve_5.5/lp_presolve.c **** 
4314:lp_solve_5.5/lp_presolve.c ****     /* Load the non-zero column values of this active/reference column */
4315:lp_solve_5.5/lp_presolve.c ****     item = 0;
 45757               		.loc 2 4315 0
 45758 13a70 1AAA      		std Y+50,__zero_reg__
 45759 13a72 19AA      		std Y+49,__zero_reg__
4316:lp_solve_5.5/lp_presolve.c ****     for(jb = presolve_nextrow(psdata, i, &item); jb >= 0;
 45760               		.loc 2 4316 0
 45761 13a74 AE01      		movw r20,r28
 45762 13a76 4F5C      		subi r20,-49
 45763 13a78 5F4F      		sbci r21,-1
 45764 13a7a 2A81      		ldd r18,Y+2
 45765 13a7c 3B81      		ldd r19,Y+3
 45766 13a7e 8BAD      		ldd r24,Y+59
 45767 13a80 9CAD      		ldd r25,Y+60
 45768 13a82 B901      		movw r22,r18
 45769 13a84 0E94 0000 		call presolve_nextrow
 45770 13a88 9B87      		std Y+11,r25
 45771 13a8a 8A87      		std Y+10,r24
 45772 13a8c 00C0      		rjmp .L1910
 45773               	.L1911:
4317:lp_solve_5.5/lp_presolve.c ****         jb = presolve_nextrow(psdata, i, &item)) {
4318:lp_solve_5.5/lp_presolve.c ****       jx = COL_MAT_ROWNR(jb);
 45774               		.loc 2 4318 0
 45775 13a8e 8C8D      		ldd r24,Y+28
 45776 13a90 9D8D      		ldd r25,Y+29
 45777 13a92 FC01      		movw r30,r24
 45778 13a94 2685      		ldd r18,Z+14
 45779 13a96 3785      		ldd r19,Z+15
 45780 13a98 8A85      		ldd r24,Y+10
 45781 13a9a 9B85      		ldd r25,Y+11
 45782 13a9c 880F      		lsl r24
 45783 13a9e 991F      		rol r25
 45784 13aa0 820F      		add r24,r18
 45785 13aa2 931F      		adc r25,r19
 45786 13aa4 FC01      		movw r30,r24
 45787 13aa6 8081      		ld r24,Z
 45788 13aa8 9181      		ldd r25,Z+1
 45789 13aaa 9BA3      		std Y+35,r25
 45790 13aac 8AA3      		std Y+34,r24
4319:lp_solve_5.5/lp_presolve.c ****       colvalues[jx] = COL_MAT_VALUE(jb);
 45791               		.loc 2 4319 0
 45792 13aae 29AD      		ldd r18,Y+57
 45793 13ab0 3AAD      		ldd r19,Y+58
 45794 13ab2 8AA1      		ldd r24,Y+34
 45795 13ab4 9BA1      		ldd r25,Y+35
 45796 13ab6 880F      		lsl r24
 45797 13ab8 991F      		rol r25
 45798 13aba 880F      		lsl r24
 45799 13abc 991F      		rol r25
 45800 13abe 280F      		add r18,r24
 45801 13ac0 391F      		adc r19,r25
 45802 13ac2 8C8D      		ldd r24,Y+28
 45803 13ac4 9D8D      		ldd r25,Y+29
 45804 13ac6 FC01      		movw r30,r24
 45805 13ac8 4089      		ldd r20,Z+16
 45806 13aca 5189      		ldd r21,Z+17
 45807 13acc 8A85      		ldd r24,Y+10
 45808 13ace 9B85      		ldd r25,Y+11
 45809 13ad0 880F      		lsl r24
 45810 13ad2 991F      		rol r25
 45811 13ad4 880F      		lsl r24
 45812 13ad6 991F      		rol r25
 45813 13ad8 840F      		add r24,r20
 45814 13ada 951F      		adc r25,r21
 45815 13adc FC01      		movw r30,r24
 45816 13ade 8081      		ld r24,Z
 45817 13ae0 9181      		ldd r25,Z+1
 45818 13ae2 A281      		ldd r26,Z+2
 45819 13ae4 B381      		ldd r27,Z+3
 45820 13ae6 F901      		movw r30,r18
 45821 13ae8 8083      		st Z,r24
 45822 13aea 9183      		std Z+1,r25
 45823 13aec A283      		std Z+2,r26
 45824 13aee B383      		std Z+3,r27
4317:lp_solve_5.5/lp_presolve.c ****         jb = presolve_nextrow(psdata, i, &item)) {
 45825               		.loc 2 4317 0
 45826 13af0 AE01      		movw r20,r28
 45827 13af2 4F5C      		subi r20,-49
 45828 13af4 5F4F      		sbci r21,-1
 45829 13af6 2A81      		ldd r18,Y+2
 45830 13af8 3B81      		ldd r19,Y+3
 45831 13afa 8BAD      		ldd r24,Y+59
 45832 13afc 9CAD      		ldd r25,Y+60
 45833 13afe B901      		movw r22,r18
 45834 13b00 0E94 0000 		call presolve_nextrow
 45835 13b04 9B87      		std Y+11,r25
 45836 13b06 8A87      		std Y+10,r24
 45837               	.L1910:
4316:lp_solve_5.5/lp_presolve.c ****     for(jb = presolve_nextrow(psdata, i, &item); jb >= 0;
 45838               		.loc 2 4316 0 discriminator 1
 45839 13b08 8A85      		ldd r24,Y+10
 45840 13b0a 9B85      		ldd r25,Y+11
 45841 13b0c 9923      		tst r25
 45842 13b0e 04F0      		brlt .+2
 45843 13b10 00C0      		rjmp .L1911
4320:lp_solve_5.5/lp_presolve.c ****     }
4321:lp_solve_5.5/lp_presolve.c **** 
4322:lp_solve_5.5/lp_presolve.c ****     coldel[0] = 0;
 45844               		.loc 2 4322 0
 45845 13b12 8DA9      		ldd r24,Y+53
 45846 13b14 9EA9      		ldd r25,Y+54
 45847 13b16 FC01      		movw r30,r24
 45848 13b18 1182      		std Z+1,__zero_reg__
 45849 13b1a 1082      		st Z,__zero_reg__
4323:lp_solve_5.5/lp_presolve.c ****     for(ie = ib+1; ie < n; ie++) {
 45850               		.loc 2 4323 0
 45851 13b1c 8C81      		ldd r24,Y+4
 45852 13b1e 9D81      		ldd r25,Y+5
 45853 13b20 0196      		adiw r24,1
 45854 13b22 9F83      		std Y+7,r25
 45855 13b24 8E83      		std Y+6,r24
 45856 13b26 00C0      		rjmp .L1912
 45857               	.L1926:
4324:lp_solve_5.5/lp_presolve.c **** 
4325:lp_solve_5.5/lp_presolve.c ****       /* Insist on identical column lengths (sort is decending in column lengths) */
4326:lp_solve_5.5/lp_presolve.c ****       ii = QScand[ib].int4.intpar2 - QScand[ie].int4.intpar2;
 45858               		.loc 2 4326 0
 45859 13b28 8C81      		ldd r24,Y+4
 45860 13b2a 9D81      		ldd r25,Y+5
 45861 13b2c 880F      		lsl r24
 45862 13b2e 991F      		rol r25
 45863 13b30 880F      		lsl r24
 45864 13b32 991F      		rol r25
 45865 13b34 880F      		lsl r24
 45866 13b36 991F      		rol r25
 45867 13b38 2E8D      		ldd r18,Y+30
 45868 13b3a 3F8D      		ldd r19,Y+31
 45869 13b3c 820F      		add r24,r18
 45870 13b3e 931F      		adc r25,r19
 45871 13b40 FC01      		movw r30,r24
 45872 13b42 2481      		ldd r18,Z+4
 45873 13b44 3581      		ldd r19,Z+5
 45874 13b46 8E81      		ldd r24,Y+6
 45875 13b48 9F81      		ldd r25,Y+7
 45876 13b4a 880F      		lsl r24
 45877 13b4c 991F      		rol r25
 45878 13b4e 880F      		lsl r24
 45879 13b50 991F      		rol r25
 45880 13b52 880F      		lsl r24
 45881 13b54 991F      		rol r25
 45882 13b56 4E8D      		ldd r20,Y+30
 45883 13b58 5F8D      		ldd r21,Y+31
 45884 13b5a 840F      		add r24,r20
 45885 13b5c 951F      		adc r25,r21
 45886 13b5e FC01      		movw r30,r24
 45887 13b60 8481      		ldd r24,Z+4
 45888 13b62 9581      		ldd r25,Z+5
 45889 13b64 A901      		movw r20,r18
 45890 13b66 481B      		sub r20,r24
 45891 13b68 590B      		sbc r21,r25
 45892 13b6a CA01      		movw r24,r20
 45893 13b6c 99A3      		std Y+33,r25
 45894 13b6e 88A3      		std Y+32,r24
4327:lp_solve_5.5/lp_presolve.c ****       if(ii != 0)
 45895               		.loc 2 4327 0
 45896 13b70 88A1      		ldd r24,Y+32
 45897 13b72 99A1      		ldd r25,Y+33
 45898 13b74 892B      		or r24,r25
 45899 13b76 01F0      		breq .+2
 45900 13b78 00C0      		rjmp .L1977
4328:lp_solve_5.5/lp_presolve.c ****         break;
4329:lp_solve_5.5/lp_presolve.c **** 
4330:lp_solve_5.5/lp_presolve.c ****       /* Also insist on identical starting positions */
4331:lp_solve_5.5/lp_presolve.c ****       ii = QScand[ib].int4.intpar1 - QScand[ie].int4.intpar1;
 45901               		.loc 2 4331 0
 45902 13b7a 8C81      		ldd r24,Y+4
 45903 13b7c 9D81      		ldd r25,Y+5
 45904 13b7e 880F      		lsl r24
 45905 13b80 991F      		rol r25
 45906 13b82 880F      		lsl r24
 45907 13b84 991F      		rol r25
 45908 13b86 880F      		lsl r24
 45909 13b88 991F      		rol r25
 45910 13b8a 2E8D      		ldd r18,Y+30
 45911 13b8c 3F8D      		ldd r19,Y+31
 45912 13b8e 820F      		add r24,r18
 45913 13b90 931F      		adc r25,r19
 45914 13b92 FC01      		movw r30,r24
 45915 13b94 2281      		ldd r18,Z+2
 45916 13b96 3381      		ldd r19,Z+3
 45917 13b98 8E81      		ldd r24,Y+6
 45918 13b9a 9F81      		ldd r25,Y+7
 45919 13b9c 880F      		lsl r24
 45920 13b9e 991F      		rol r25
 45921 13ba0 880F      		lsl r24
 45922 13ba2 991F      		rol r25
 45923 13ba4 880F      		lsl r24
 45924 13ba6 991F      		rol r25
 45925 13ba8 4E8D      		ldd r20,Y+30
 45926 13baa 5F8D      		ldd r21,Y+31
 45927 13bac 840F      		add r24,r20
 45928 13bae 951F      		adc r25,r21
 45929 13bb0 FC01      		movw r30,r24
 45930 13bb2 8281      		ldd r24,Z+2
 45931 13bb4 9381      		ldd r25,Z+3
 45932 13bb6 A901      		movw r20,r18
 45933 13bb8 481B      		sub r20,r24
 45934 13bba 590B      		sbc r21,r25
 45935 13bbc CA01      		movw r24,r20
 45936 13bbe 99A3      		std Y+33,r25
 45937 13bc0 88A3      		std Y+32,r24
4332:lp_solve_5.5/lp_presolve.c ****       if(ii != 0)
 45938               		.loc 2 4332 0
 45939 13bc2 88A1      		ldd r24,Y+32
 45940 13bc4 99A1      		ldd r25,Y+33
 45941 13bc6 892B      		or r24,r25
 45942 13bc8 01F0      		breq .+2
 45943 13bca 00C0      		rjmp .L1978
4333:lp_solve_5.5/lp_presolve.c ****         break;
4334:lp_solve_5.5/lp_presolve.c **** 
4335:lp_solve_5.5/lp_presolve.c ****       /* Get column and check if it was previously eliminated */
4336:lp_solve_5.5/lp_presolve.c ****       ii = QScand[ie].int4.intval;
 45944               		.loc 2 4336 0
 45945 13bcc 8E81      		ldd r24,Y+6
 45946 13bce 9F81      		ldd r25,Y+7
 45947 13bd0 880F      		lsl r24
 45948 13bd2 991F      		rol r25
 45949 13bd4 880F      		lsl r24
 45950 13bd6 991F      		rol r25
 45951 13bd8 880F      		lsl r24
 45952 13bda 991F      		rol r25
 45953 13bdc 2E8D      		ldd r18,Y+30
 45954 13bde 3F8D      		ldd r19,Y+31
 45955 13be0 820F      		add r24,r18
 45956 13be2 931F      		adc r25,r19
 45957 13be4 FC01      		movw r30,r24
 45958 13be6 8081      		ld r24,Z
 45959 13be8 9181      		ldd r25,Z+1
 45960 13bea 99A3      		std Y+33,r25
 45961 13bec 88A3      		std Y+32,r24
4337:lp_solve_5.5/lp_presolve.c ****       if(ii < 0)
 45962               		.loc 2 4337 0
 45963 13bee 88A1      		ldd r24,Y+32
 45964 13bf0 99A1      		ldd r25,Y+33
 45965 13bf2 9923      		tst r25
 45966 13bf4 04F4      		brge .+2
 45967 13bf6 00C0      		rjmp .L1979
4338:lp_solve_5.5/lp_presolve.c ****         continue;
4339:lp_solve_5.5/lp_presolve.c **** 
4340:lp_solve_5.5/lp_presolve.c ****       /* Loop over every column member to confirm that the candidate is
4341:lp_solve_5.5/lp_presolve.c ****         relatively identical in every position */
4342:lp_solve_5.5/lp_presolve.c ****       first = TRUE;
 45968               		.loc 2 4342 0
 45969 13bf8 81E0      		ldi r24,lo8(1)
 45970 13bfa 8983      		std Y+1,r24
4343:lp_solve_5.5/lp_presolve.c ****       item = 0;
 45971               		.loc 2 4343 0
 45972 13bfc 1AAA      		std Y+50,__zero_reg__
 45973 13bfe 19AA      		std Y+49,__zero_reg__
4344:lp_solve_5.5/lp_presolve.c ****       item2 = 0;
 45974               		.loc 2 4344 0
 45975 13c00 1CAA      		std Y+52,__zero_reg__
 45976 13c02 1BAA      		std Y+51,__zero_reg__
4345:lp_solve_5.5/lp_presolve.c ****       scale = 1;
 45977               		.loc 2 4345 0
 45978 13c04 80E0      		ldi r24,0
 45979 13c06 90E0      		ldi r25,0
 45980 13c08 A0E8      		ldi r26,lo8(-128)
 45981 13c0a BFE3      		ldi r27,lo8(63)
 45982 13c0c 8A8B      		std Y+18,r24
 45983 13c0e 9B8B      		std Y+19,r25
 45984 13c10 AC8B      		std Y+20,r26
 45985 13c12 BD8B      		std Y+21,r27
4346:lp_solve_5.5/lp_presolve.c ****       for(jb = presolve_nextrow(psdata, ii, &item),
 45986               		.loc 2 4346 0
 45987 13c14 AE01      		movw r20,r28
 45988 13c16 4F5C      		subi r20,-49
 45989 13c18 5F4F      		sbci r21,-1
 45990 13c1a 28A1      		ldd r18,Y+32
 45991 13c1c 39A1      		ldd r19,Y+33
 45992 13c1e 8BAD      		ldd r24,Y+59
 45993 13c20 9CAD      		ldd r25,Y+60
 45994 13c22 B901      		movw r22,r18
 45995 13c24 0E94 0000 		call presolve_nextrow
 45996 13c28 9B87      		std Y+11,r25
 45997 13c2a 8A87      		std Y+10,r24
4347:lp_solve_5.5/lp_presolve.c ****           jj = presolve_nextrow(psdata, i, &item2); jb >= 0;
 45998               		.loc 2 4347 0
 45999 13c2c AE01      		movw r20,r28
 46000 13c2e 4D5C      		subi r20,-51
 46001 13c30 5F4F      		sbci r21,-1
 46002 13c32 2A81      		ldd r18,Y+2
 46003 13c34 3B81      		ldd r19,Y+3
 46004 13c36 8BAD      		ldd r24,Y+59
 46005 13c38 9CAD      		ldd r25,Y+60
 46006 13c3a B901      		movw r22,r18
 46007 13c3c 0E94 0000 		call presolve_nextrow
 46008 13c40 9F87      		std Y+15,r25
 46009 13c42 8E87      		std Y+14,r24
4346:lp_solve_5.5/lp_presolve.c ****       for(jb = presolve_nextrow(psdata, ii, &item),
 46010               		.loc 2 4346 0
 46011 13c44 00C0      		rjmp .L1918
 46012               	.L1925:
4348:lp_solve_5.5/lp_presolve.c ****           jb = presolve_nextrow(psdata, ii, &item),
4349:lp_solve_5.5/lp_presolve.c ****           jj = presolve_nextrow(psdata, i, &item2)) {
4350:lp_solve_5.5/lp_presolve.c ****         jx = COL_MAT_ROWNR(jb);
 46013               		.loc 2 4350 0
 46014 13c46 8C8D      		ldd r24,Y+28
 46015 13c48 9D8D      		ldd r25,Y+29
 46016 13c4a FC01      		movw r30,r24
 46017 13c4c 2685      		ldd r18,Z+14
 46018 13c4e 3785      		ldd r19,Z+15
 46019 13c50 8A85      		ldd r24,Y+10
 46020 13c52 9B85      		ldd r25,Y+11
 46021 13c54 880F      		lsl r24
 46022 13c56 991F      		rol r25
 46023 13c58 820F      		add r24,r18
 46024 13c5a 931F      		adc r25,r19
 46025 13c5c FC01      		movw r30,r24
 46026 13c5e 8081      		ld r24,Z
 46027 13c60 9181      		ldd r25,Z+1
 46028 13c62 9BA3      		std Y+35,r25
 46029 13c64 8AA3      		std Y+34,r24
4351:lp_solve_5.5/lp_presolve.c ****         if(jx != COL_MAT_ROWNR(jj))
 46030               		.loc 2 4351 0
 46031 13c66 8C8D      		ldd r24,Y+28
 46032 13c68 9D8D      		ldd r25,Y+29
 46033 13c6a FC01      		movw r30,r24
 46034 13c6c 2685      		ldd r18,Z+14
 46035 13c6e 3785      		ldd r19,Z+15
 46036 13c70 8E85      		ldd r24,Y+14
 46037 13c72 9F85      		ldd r25,Y+15
 46038 13c74 880F      		lsl r24
 46039 13c76 991F      		rol r25
 46040 13c78 820F      		add r24,r18
 46041 13c7a 931F      		adc r25,r19
 46042 13c7c FC01      		movw r30,r24
 46043 13c7e 2081      		ld r18,Z
 46044 13c80 3181      		ldd r19,Z+1
 46045 13c82 8AA1      		ldd r24,Y+34
 46046 13c84 9BA1      		ldd r25,Y+35
 46047 13c86 2817      		cp r18,r24
 46048 13c88 3907      		cpc r19,r25
 46049 13c8a 01F0      		breq .+2
 46050 13c8c 00C0      		rjmp .L1980
4352:lp_solve_5.5/lp_presolve.c ****           break;
4353:lp_solve_5.5/lp_presolve.c ****         if(first) {
 46051               		.loc 2 4353 0
 46052 13c8e 8981      		ldd r24,Y+1
 46053 13c90 8823      		tst r24
 46054 13c92 01F0      		breq .L1921
4354:lp_solve_5.5/lp_presolve.c ****           first = !first;
 46055               		.loc 2 4354 0
 46056 13c94 81E0      		ldi r24,lo8(1)
 46057 13c96 9981      		ldd r25,Y+1
 46058 13c98 9923      		tst r25
 46059 13c9a 01F0      		breq .L1922
 46060 13c9c 80E0      		ldi r24,0
 46061               	.L1922:
 46062 13c9e 8983      		std Y+1,r24
4355:lp_solve_5.5/lp_presolve.c ****           scale = colvalues[jx] / COL_MAT_VALUE(jb);
 46063               		.loc 2 4355 0
 46064 13ca0 29AD      		ldd r18,Y+57
 46065 13ca2 3AAD      		ldd r19,Y+58
 46066 13ca4 8AA1      		ldd r24,Y+34
 46067 13ca6 9BA1      		ldd r25,Y+35
 46068 13ca8 880F      		lsl r24
 46069 13caa 991F      		rol r25
 46070 13cac 880F      		lsl r24
 46071 13cae 991F      		rol r25
 46072 13cb0 820F      		add r24,r18
 46073 13cb2 931F      		adc r25,r19
 46074 13cb4 FC01      		movw r30,r24
 46075 13cb6 8081      		ld r24,Z
 46076 13cb8 9181      		ldd r25,Z+1
 46077 13cba A281      		ldd r26,Z+2
 46078 13cbc B381      		ldd r27,Z+3
 46079 13cbe 2C8D      		ldd r18,Y+28
 46080 13cc0 3D8D      		ldd r19,Y+29
 46081 13cc2 F901      		movw r30,r18
 46082 13cc4 4089      		ldd r20,Z+16
 46083 13cc6 5189      		ldd r21,Z+17
 46084 13cc8 2A85      		ldd r18,Y+10
 46085 13cca 3B85      		ldd r19,Y+11
 46086 13ccc 220F      		lsl r18
 46087 13cce 331F      		rol r19
 46088 13cd0 220F      		lsl r18
 46089 13cd2 331F      		rol r19
 46090 13cd4 240F      		add r18,r20
 46091 13cd6 351F      		adc r19,r21
 46092 13cd8 F901      		movw r30,r18
 46093 13cda 2081      		ld r18,Z
 46094 13cdc 3181      		ldd r19,Z+1
 46095 13cde 4281      		ldd r20,Z+2
 46096 13ce0 5381      		ldd r21,Z+3
 46097 13ce2 BC01      		movw r22,r24
 46098 13ce4 CD01      		movw r24,r26
 46099 13ce6 0E94 0000 		call __divsf3
 46100 13cea DC01      		movw r26,r24
 46101 13cec CB01      		movw r24,r22
 46102 13cee 8A8B      		std Y+18,r24
 46103 13cf0 9B8B      		std Y+19,r25
 46104 13cf2 AC8B      		std Y+20,r26
 46105 13cf4 BD8B      		std Y+21,r27
 46106 13cf6 00C0      		rjmp .L1923
 46107               	.L1921:
4356:lp_solve_5.5/lp_presolve.c ****         }
4357:lp_solve_5.5/lp_presolve.c ****         else {
4358:lp_solve_5.5/lp_presolve.c ****           if(fabs(colvalues[jx] - scale * COL_MAT_VALUE(jb)) > psdata->epsvalue)
 46108               		.loc 2 4358 0
 46109 13cf8 29AD      		ldd r18,Y+57
 46110 13cfa 3AAD      		ldd r19,Y+58
 46111 13cfc 8AA1      		ldd r24,Y+34
 46112 13cfe 9BA1      		ldd r25,Y+35
 46113 13d00 880F      		lsl r24
 46114 13d02 991F      		rol r25
 46115 13d04 880F      		lsl r24
 46116 13d06 991F      		rol r25
 46117 13d08 820F      		add r24,r18
 46118 13d0a 931F      		adc r25,r19
 46119 13d0c FC01      		movw r30,r24
 46120 13d0e C080      		ld r12,Z
 46121 13d10 D180      		ldd r13,Z+1
 46122 13d12 E280      		ldd r14,Z+2
 46123 13d14 F380      		ldd r15,Z+3
 46124 13d16 8C8D      		ldd r24,Y+28
 46125 13d18 9D8D      		ldd r25,Y+29
 46126 13d1a FC01      		movw r30,r24
 46127 13d1c 2089      		ldd r18,Z+16
 46128 13d1e 3189      		ldd r19,Z+17
 46129 13d20 8A85      		ldd r24,Y+10
 46130 13d22 9B85      		ldd r25,Y+11
 46131 13d24 880F      		lsl r24
 46132 13d26 991F      		rol r25
 46133 13d28 880F      		lsl r24
 46134 13d2a 991F      		rol r25
 46135 13d2c 820F      		add r24,r18
 46136 13d2e 931F      		adc r25,r19
 46137 13d30 FC01      		movw r30,r24
 46138 13d32 8081      		ld r24,Z
 46139 13d34 9181      		ldd r25,Z+1
 46140 13d36 A281      		ldd r26,Z+2
 46141 13d38 B381      		ldd r27,Z+3
 46142 13d3a 2A89      		ldd r18,Y+18
 46143 13d3c 3B89      		ldd r19,Y+19
 46144 13d3e 4C89      		ldd r20,Y+20
 46145 13d40 5D89      		ldd r21,Y+21
 46146 13d42 BC01      		movw r22,r24
 46147 13d44 CD01      		movw r24,r26
 46148 13d46 0E94 0000 		call __mulsf3
 46149 13d4a DC01      		movw r26,r24
 46150 13d4c CB01      		movw r24,r22
 46151 13d4e 9C01      		movw r18,r24
 46152 13d50 AD01      		movw r20,r26
 46153 13d52 C701      		movw r24,r14
 46154 13d54 B601      		movw r22,r12
 46155 13d56 0E94 0000 		call __subsf3
 46156 13d5a DC01      		movw r26,r24
 46157 13d5c CB01      		movw r24,r22
 46158 13d5e BF77      		andi r27,0x7f
 46159 13d60 2BAD      		ldd r18,Y+59
 46160 13d62 3CAD      		ldd r19,Y+60
 46161 13d64 F901      		movw r30,r18
 46162 13d66 2489      		ldd r18,Z+20
 46163 13d68 3589      		ldd r19,Z+21
 46164 13d6a 4689      		ldd r20,Z+22
 46165 13d6c 5789      		ldd r21,Z+23
 46166 13d6e BC01      		movw r22,r24
 46167 13d70 CD01      		movw r24,r26
 46168 13d72 0E94 0000 		call __gtsf2
 46169 13d76 1816      		cp __zero_reg__,r24
 46170 13d78 04F0      		brlt .L1981
 46171               	.L1923:
4348:lp_solve_5.5/lp_presolve.c ****           jj = presolve_nextrow(psdata, i, &item2)) {
 46172               		.loc 2 4348 0
 46173 13d7a AE01      		movw r20,r28
 46174 13d7c 4F5C      		subi r20,-49
 46175 13d7e 5F4F      		sbci r21,-1
 46176 13d80 28A1      		ldd r18,Y+32
 46177 13d82 39A1      		ldd r19,Y+33
 46178 13d84 8BAD      		ldd r24,Y+59
 46179 13d86 9CAD      		ldd r25,Y+60
 46180 13d88 B901      		movw r22,r18
 46181 13d8a 0E94 0000 		call presolve_nextrow
 46182 13d8e 9B87      		std Y+11,r25
 46183 13d90 8A87      		std Y+10,r24
4349:lp_solve_5.5/lp_presolve.c ****         jx = COL_MAT_ROWNR(jb);
 46184               		.loc 2 4349 0
 46185 13d92 AE01      		movw r20,r28
 46186 13d94 4D5C      		subi r20,-51
 46187 13d96 5F4F      		sbci r21,-1
 46188 13d98 2A81      		ldd r18,Y+2
 46189 13d9a 3B81      		ldd r19,Y+3
 46190 13d9c 8BAD      		ldd r24,Y+59
 46191 13d9e 9CAD      		ldd r25,Y+60
 46192 13da0 B901      		movw r22,r18
 46193 13da2 0E94 0000 		call presolve_nextrow
 46194 13da6 9F87      		std Y+15,r25
 46195 13da8 8E87      		std Y+14,r24
 46196               	.L1918:
4346:lp_solve_5.5/lp_presolve.c ****           jj = presolve_nextrow(psdata, i, &item2); jb >= 0;
 46197               		.loc 2 4346 0
 46198 13daa 8A85      		ldd r24,Y+10
 46199 13dac 9B85      		ldd r25,Y+11
 46200 13dae 9923      		tst r25
 46201 13db0 04F0      		brlt .+2
 46202 13db2 00C0      		rjmp .L1925
 46203 13db4 00C0      		rjmp .L1920
 46204               	.L1980:
4352:lp_solve_5.5/lp_presolve.c ****         if(first) {
 46205               		.loc 2 4352 0
 46206 13db6 0000      		nop
 46207 13db8 00C0      		rjmp .L1920
 46208               	.L1981:
4359:lp_solve_5.5/lp_presolve.c ****             break;
 46209               		.loc 2 4359 0
 46210 13dba 0000      		nop
 46211               	.L1920:
4360:lp_solve_5.5/lp_presolve.c ****         }
4361:lp_solve_5.5/lp_presolve.c ****       }
4362:lp_solve_5.5/lp_presolve.c **** 
4363:lp_solve_5.5/lp_presolve.c ****       /* "We have contact", store the column in the aggregation list */
4364:lp_solve_5.5/lp_presolve.c ****       if(jb < 0) {
 46212               		.loc 2 4364 0
 46213 13dbc 8A85      		ldd r24,Y+10
 46214 13dbe 9B85      		ldd r25,Y+11
 46215 13dc0 9923      		tst r25
 46216 13dc2 04F4      		brge .L1917
4365:lp_solve_5.5/lp_presolve.c ****         coldel[++coldel[0]] = ii;
 46217               		.loc 2 4365 0
 46218 13dc4 2DA9      		ldd r18,Y+53
 46219 13dc6 3EA9      		ldd r19,Y+54
 46220 13dc8 8DA9      		ldd r24,Y+53
 46221 13dca 9EA9      		ldd r25,Y+54
 46222 13dcc FC01      		movw r30,r24
 46223 13dce 4081      		ld r20,Z
 46224 13dd0 5181      		ldd r21,Z+1
 46225 13dd2 4F5F      		subi r20,-1
 46226 13dd4 5F4F      		sbci r21,-1
 46227 13dd6 FC01      		movw r30,r24
 46228 13dd8 5183      		std Z+1,r21
 46229 13dda 4083      		st Z,r20
 46230 13ddc FC01      		movw r30,r24
 46231 13dde 8081      		ld r24,Z
 46232 13de0 9181      		ldd r25,Z+1
 46233 13de2 880F      		lsl r24
 46234 13de4 991F      		rol r25
 46235 13de6 820F      		add r24,r18
 46236 13de8 931F      		adc r25,r19
 46237 13dea 28A1      		ldd r18,Y+32
 46238 13dec 39A1      		ldd r19,Y+33
 46239 13dee FC01      		movw r30,r24
 46240 13df0 3183      		std Z+1,r19
 46241 13df2 2083      		st Z,r18
4366:lp_solve_5.5/lp_presolve.c ****         QScand[ie].int4.intval = -ii;
 46242               		.loc 2 4366 0
 46243 13df4 8E81      		ldd r24,Y+6
 46244 13df6 9F81      		ldd r25,Y+7
 46245 13df8 880F      		lsl r24
 46246 13dfa 991F      		rol r25
 46247 13dfc 880F      		lsl r24
 46248 13dfe 991F      		rol r25
 46249 13e00 880F      		lsl r24
 46250 13e02 991F      		rol r25
 46251 13e04 2E8D      		ldd r18,Y+30
 46252 13e06 3F8D      		ldd r19,Y+31
 46253 13e08 820F      		add r24,r18
 46254 13e0a 931F      		adc r25,r19
 46255 13e0c 28A1      		ldd r18,Y+32
 46256 13e0e 39A1      		ldd r19,Y+33
 46257 13e10 3195      		neg r19
 46258 13e12 2195      		neg r18
 46259 13e14 3109      		sbc r19,__zero_reg__
 46260 13e16 FC01      		movw r30,r24
 46261 13e18 3183      		std Z+1,r19
 46262 13e1a 2083      		st Z,r18
 46263 13e1c 00C0      		rjmp .L1917
 46264               	.L1979:
4338:lp_solve_5.5/lp_presolve.c **** 
 46265               		.loc 2 4338 0
 46266 13e1e 0000      		nop
 46267               	.L1917:
4323:lp_solve_5.5/lp_presolve.c **** 
 46268               		.loc 2 4323 0 discriminator 2
 46269 13e20 8E81      		ldd r24,Y+6
 46270 13e22 9F81      		ldd r25,Y+7
 46271 13e24 0196      		adiw r24,1
 46272 13e26 9F83      		std Y+7,r25
 46273 13e28 8E83      		std Y+6,r24
 46274               	.L1912:
4323:lp_solve_5.5/lp_presolve.c **** 
 46275               		.loc 2 4323 0 is_stmt 0 discriminator 1
 46276 13e2a 2E81      		ldd r18,Y+6
 46277 13e2c 3F81      		ldd r19,Y+7
 46278 13e2e 8885      		ldd r24,Y+8
 46279 13e30 9985      		ldd r25,Y+9
 46280 13e32 2817      		cp r18,r24
 46281 13e34 3907      		cpc r19,r25
 46282 13e36 04F4      		brge .+2
 46283 13e38 00C0      		rjmp .L1926
 46284 13e3a 00C0      		rjmp .L1914
 46285               	.L1977:
4328:lp_solve_5.5/lp_presolve.c **** 
 46286               		.loc 2 4328 0 is_stmt 1
 46287 13e3c 0000      		nop
 46288 13e3e 00C0      		rjmp .L1914
 46289               	.L1978:
4333:lp_solve_5.5/lp_presolve.c **** 
 46290               		.loc 2 4333 0
 46291 13e40 0000      		nop
 46292               	.L1914:
4367:lp_solve_5.5/lp_presolve.c ****       }
4368:lp_solve_5.5/lp_presolve.c ****     }
4369:lp_solve_5.5/lp_presolve.c **** 
4370:lp_solve_5.5/lp_presolve.c ****     /* Sort the aggregation list if we have aggregation candidates */
4371:lp_solve_5.5/lp_presolve.c ****     if(coldel[0] > 1) {
 46293               		.loc 2 4371 0
 46294 13e42 8DA9      		ldd r24,Y+53
 46295 13e44 9EA9      		ldd r25,Y+54
 46296 13e46 FC01      		movw r30,r24
 46297 13e48 8081      		ld r24,Z
 46298 13e4a 9181      		ldd r25,Z+1
 46299 13e4c 0297      		sbiw r24,2
 46300 13e4e 04F4      		brge .+2
 46301 13e50 00C0      		rjmp .L1927
 46302               	.LBB12:
4372:lp_solve_5.5/lp_presolve.c ****       REAL     of, ofelim, fixvalue;
4373:lp_solve_5.5/lp_presolve.c ****       MYBOOL   isint;
4374:lp_solve_5.5/lp_presolve.c ****       UNIONTYPE QSORTrec *QSagg = (UNIONTYPE QSORTrec *) calloc(coldel[0], sizeof(*QSagg));
 46303               		.loc 2 4374 0
 46304 13e52 8DA9      		ldd r24,Y+53
 46305 13e54 9EA9      		ldd r25,Y+54
 46306 13e56 FC01      		movw r30,r24
 46307 13e58 8081      		ld r24,Z
 46308 13e5a 9181      		ldd r25,Z+1
 46309 13e5c 68E0      		ldi r22,lo8(8)
 46310 13e5e 70E0      		ldi r23,0
 46311 13e60 0E94 0000 		call calloc
 46312 13e64 9DA3      		std Y+37,r25
 46313 13e66 8CA3      		std Y+36,r24
4375:lp_solve_5.5/lp_presolve.c **** 
4376:lp_solve_5.5/lp_presolve.c ****       for(jb = 1; jb <= coldel[0]; jb++) {
 46314               		.loc 2 4376 0
 46315 13e68 81E0      		ldi r24,lo8(1)
 46316 13e6a 90E0      		ldi r25,0
 46317 13e6c 9B87      		std Y+11,r25
 46318 13e6e 8A87      		std Y+10,r24
 46319 13e70 00C0      		rjmp .L1928
 46320               	.L1929:
4377:lp_solve_5.5/lp_presolve.c ****         ii = jb - 1;
 46321               		.loc 2 4377 0 discriminator 3
 46322 13e72 8A85      		ldd r24,Y+10
 46323 13e74 9B85      		ldd r25,Y+11
 46324 13e76 0197      		sbiw r24,1
 46325 13e78 99A3      		std Y+33,r25
 46326 13e7a 88A3      		std Y+32,r24
4378:lp_solve_5.5/lp_presolve.c ****         QSagg[ii].pvoidint2.intval = coldel[jb];
 46327               		.loc 2 4378 0 discriminator 3
 46328 13e7c 88A1      		ldd r24,Y+32
 46329 13e7e 99A1      		ldd r25,Y+33
 46330 13e80 880F      		lsl r24
 46331 13e82 991F      		rol r25
 46332 13e84 880F      		lsl r24
 46333 13e86 991F      		rol r25
 46334 13e88 880F      		lsl r24
 46335 13e8a 991F      		rol r25
 46336 13e8c 2CA1      		ldd r18,Y+36
 46337 13e8e 3DA1      		ldd r19,Y+37
 46338 13e90 820F      		add r24,r18
 46339 13e92 931F      		adc r25,r19
 46340 13e94 4DA9      		ldd r20,Y+53
 46341 13e96 5EA9      		ldd r21,Y+54
 46342 13e98 2A85      		ldd r18,Y+10
 46343 13e9a 3B85      		ldd r19,Y+11
 46344 13e9c 220F      		lsl r18
 46345 13e9e 331F      		rol r19
 46346 13ea0 240F      		add r18,r20
 46347 13ea2 351F      		adc r19,r21
 46348 13ea4 F901      		movw r30,r18
 46349 13ea6 2081      		ld r18,Z
 46350 13ea8 3181      		ldd r19,Z+1
 46351 13eaa FC01      		movw r30,r24
 46352 13eac 3383      		std Z+3,r19
 46353 13eae 2283      		std Z+2,r18
4379:lp_solve_5.5/lp_presolve.c ****         QSagg[ii].pvoidint2.ptr    = (void *) lp;
 46354               		.loc 2 4379 0 discriminator 3
 46355 13eb0 88A1      		ldd r24,Y+32
 46356 13eb2 99A1      		ldd r25,Y+33
 46357 13eb4 880F      		lsl r24
 46358 13eb6 991F      		rol r25
 46359 13eb8 880F      		lsl r24
 46360 13eba 991F      		rol r25
 46361 13ebc 880F      		lsl r24
 46362 13ebe 991F      		rol r25
 46363 13ec0 2CA1      		ldd r18,Y+36
 46364 13ec2 3DA1      		ldd r19,Y+37
 46365 13ec4 820F      		add r24,r18
 46366 13ec6 931F      		adc r25,r19
 46367 13ec8 2A8D      		ldd r18,Y+26
 46368 13eca 3B8D      		ldd r19,Y+27
 46369 13ecc FC01      		movw r30,r24
 46370 13ece 3183      		std Z+1,r19
 46371 13ed0 2083      		st Z,r18
4376:lp_solve_5.5/lp_presolve.c ****         ii = jb - 1;
 46372               		.loc 2 4376 0 discriminator 3
 46373 13ed2 8A85      		ldd r24,Y+10
 46374 13ed4 9B85      		ldd r25,Y+11
 46375 13ed6 0196      		adiw r24,1
 46376 13ed8 9B87      		std Y+11,r25
 46377 13eda 8A87      		std Y+10,r24
 46378               	.L1928:
4376:lp_solve_5.5/lp_presolve.c ****         ii = jb - 1;
 46379               		.loc 2 4376 0 is_stmt 0 discriminator 1
 46380 13edc 8DA9      		ldd r24,Y+53
 46381 13ede 9EA9      		ldd r25,Y+54
 46382 13ee0 FC01      		movw r30,r24
 46383 13ee2 2081      		ld r18,Z
 46384 13ee4 3181      		ldd r19,Z+1
 46385 13ee6 8A85      		ldd r24,Y+10
 46386 13ee8 9B85      		ldd r25,Y+11
 46387 13eea 2817      		cp r18,r24
 46388 13eec 3907      		cpc r19,r25
 46389 13eee 04F4      		brge .L1929
4380:lp_solve_5.5/lp_presolve.c ****       }
4381:lp_solve_5.5/lp_presolve.c ****       QS_execute(QSagg, coldel[0], (findCompare_func *) compAggregate, NULL);
 46390               		.loc 2 4381 0 is_stmt 1
 46391 13ef0 8DA9      		ldd r24,Y+53
 46392 13ef2 9EA9      		ldd r25,Y+54
 46393 13ef4 FC01      		movw r30,r24
 46394 13ef6 6081      		ld r22,Z
 46395 13ef8 7181      		ldd r23,Z+1
 46396 13efa 8CA1      		ldd r24,Y+36
 46397 13efc 9DA1      		ldd r25,Y+37
 46398 13efe 20E0      		ldi r18,0
 46399 13f00 30E0      		ldi r19,0
 46400 13f02 40E0      		ldi r20,lo8(gs(compAggregate))
 46401 13f04 50E0      		ldi r21,hi8(gs(compAggregate))
 46402 13f06 0E94 0000 		call QS_execute
4382:lp_solve_5.5/lp_presolve.c **** 
4383:lp_solve_5.5/lp_presolve.c ****       /* Process columns with identical OF coefficients */
4384:lp_solve_5.5/lp_presolve.c ****       jb = 0;
 46403               		.loc 2 4384 0
 46404 13f0a 1B86      		std Y+11,__zero_reg__
 46405 13f0c 1A86      		std Y+10,__zero_reg__
4385:lp_solve_5.5/lp_presolve.c ****       while((status == RUNNING) && (jb < coldel[0])) {
 46406               		.loc 2 4385 0
 46407 13f0e 00C0      		rjmp .L1930
 46408               	.L1956:
4386:lp_solve_5.5/lp_presolve.c ****         ii = QSagg[jb].pvoidint2.intval;
 46409               		.loc 2 4386 0
 46410 13f10 8A85      		ldd r24,Y+10
 46411 13f12 9B85      		ldd r25,Y+11
 46412 13f14 880F      		lsl r24
 46413 13f16 991F      		rol r25
 46414 13f18 880F      		lsl r24
 46415 13f1a 991F      		rol r25
 46416 13f1c 880F      		lsl r24
 46417 13f1e 991F      		rol r25
 46418 13f20 2CA1      		ldd r18,Y+36
 46419 13f22 3DA1      		ldd r19,Y+37
 46420 13f24 820F      		add r24,r18
 46421 13f26 931F      		adc r25,r19
 46422 13f28 FC01      		movw r30,r24
 46423 13f2a 8281      		ldd r24,Z+2
 46424 13f2c 9381      		ldd r25,Z+3
 46425 13f2e 99A3      		std Y+33,r25
 46426 13f30 88A3      		std Y+32,r24
4387:lp_solve_5.5/lp_presolve.c ****         of = lp->orig_obj[ii];
 46427               		.loc 2 4387 0
 46428 13f32 8A8D      		ldd r24,Y+26
 46429 13f34 9B8D      		ldd r25,Y+27
 46430 13f36 845D      		subi r24,-44
 46431 13f38 9D4F      		sbci r25,-3
 46432 13f3a FC01      		movw r30,r24
 46433 13f3c 2081      		ld r18,Z
 46434 13f3e 3181      		ldd r19,Z+1
 46435 13f40 88A1      		ldd r24,Y+32
 46436 13f42 99A1      		ldd r25,Y+33
 46437 13f44 880F      		lsl r24
 46438 13f46 991F      		rol r25
 46439 13f48 880F      		lsl r24
 46440 13f4a 991F      		rol r25
 46441 13f4c 820F      		add r24,r18
 46442 13f4e 931F      		adc r25,r19
 46443 13f50 FC01      		movw r30,r24
 46444 13f52 8081      		ld r24,Z
 46445 13f54 9181      		ldd r25,Z+1
 46446 13f56 A281      		ldd r26,Z+2
 46447 13f58 B381      		ldd r27,Z+3
 46448 13f5a 8EA3      		std Y+38,r24
 46449 13f5c 9FA3      		std Y+39,r25
 46450 13f5e A8A7      		std Y+40,r26
 46451 13f60 B9A7      		std Y+41,r27
4388:lp_solve_5.5/lp_presolve.c ****         isint = is_int(lp, ii);
 46452               		.loc 2 4388 0
 46453 13f62 28A1      		ldd r18,Y+32
 46454 13f64 39A1      		ldd r19,Y+33
 46455 13f66 8A8D      		ldd r24,Y+26
 46456 13f68 9B8D      		ldd r25,Y+27
 46457 13f6a B901      		movw r22,r18
 46458 13f6c 0E94 0000 		call is_int
 46459 13f70 8AA7      		std Y+42,r24
4389:lp_solve_5.5/lp_presolve.c ****         je = jb + 1;
 46460               		.loc 2 4389 0
 46461 13f72 8A85      		ldd r24,Y+10
 46462 13f74 9B85      		ldd r25,Y+11
 46463 13f76 0196      		adiw r24,1
 46464 13f78 9D87      		std Y+13,r25
 46465 13f7a 8C87      		std Y+12,r24
4390:lp_solve_5.5/lp_presolve.c ****         while((status == RUNNING) && (je < coldel[0]) &&
 46466               		.loc 2 4390 0
 46467 13f7c 00C0      		rjmp .L1931
 46468               	.L1954:
4391:lp_solve_5.5/lp_presolve.c ****               (fabs(lp->orig_obj[ix = QSagg[je].pvoidint2.intval] - of) < psdata->epsvalue)) {
4392:lp_solve_5.5/lp_presolve.c ****            /* We now have two columns with equal OFs; the following cases are possible:
4393:lp_solve_5.5/lp_presolve.c **** 
4394:lp_solve_5.5/lp_presolve.c ****              1) The first column has Inf upper bound, which means that it can
4395:lp_solve_5.5/lp_presolve.c ****                 "absorb" compatible columns, which are then fixed at the appropriate
4396:lp_solve_5.5/lp_presolve.c ****                 bounds (or zero in case of free variables).
4397:lp_solve_5.5/lp_presolve.c ****              2) The first column has a -Inf lower bound, and further columns are
4398:lp_solve_5.5/lp_presolve.c ****                 Inf upper bounds, which means steps towards forming a free variable
4399:lp_solve_5.5/lp_presolve.c ****                 can be made.
4400:lp_solve_5.5/lp_presolve.c ****              3) The first column is a non-Inf upper bound, in which case the bounds
4401:lp_solve_5.5/lp_presolve.c ****                 are summed into a helper variable and the variable simply deleted.
4402:lp_solve_5.5/lp_presolve.c ****                 The deleted variables' value are allocated/distributed via a simple
4403:lp_solve_5.5/lp_presolve.c ****                 linear programming routine at postsolve.
4404:lp_solve_5.5/lp_presolve.c **** 
4405:lp_solve_5.5/lp_presolve.c ****              In the current version of this code, we only handle case 1. */
4406:lp_solve_5.5/lp_presolve.c ****           if(is_int(lp, ix) == isint) {
 46469               		.loc 2 4406 0
 46470 13f7e 2BA5      		ldd r18,Y+43
 46471 13f80 3CA5      		ldd r19,Y+44
 46472 13f82 8A8D      		ldd r24,Y+26
 46473 13f84 9B8D      		ldd r25,Y+27
 46474 13f86 B901      		movw r22,r18
 46475 13f88 0E94 0000 		call is_int
 46476 13f8c 982F      		mov r25,r24
 46477 13f8e 8AA5      		ldd r24,Y+42
 46478 13f90 9817      		cp r25,r24
 46479 13f92 01F0      		breq .+2
 46480 13f94 00C0      		rjmp .L1932
4407:lp_solve_5.5/lp_presolve.c ****             ofelim = lp->orig_obj[ix];
 46481               		.loc 2 4407 0
 46482 13f96 8A8D      		ldd r24,Y+26
 46483 13f98 9B8D      		ldd r25,Y+27
 46484 13f9a 845D      		subi r24,-44
 46485 13f9c 9D4F      		sbci r25,-3
 46486 13f9e FC01      		movw r30,r24
 46487 13fa0 2081      		ld r18,Z
 46488 13fa2 3181      		ldd r19,Z+1
 46489 13fa4 8BA5      		ldd r24,Y+43
 46490 13fa6 9CA5      		ldd r25,Y+44
 46491 13fa8 880F      		lsl r24
 46492 13faa 991F      		rol r25
 46493 13fac 880F      		lsl r24
 46494 13fae 991F      		rol r25
 46495 13fb0 820F      		add r24,r18
 46496 13fb2 931F      		adc r25,r19
 46497 13fb4 FC01      		movw r30,r24
 46498 13fb6 8081      		ld r24,Z
 46499 13fb8 9181      		ldd r25,Z+1
 46500 13fba A281      		ldd r26,Z+2
 46501 13fbc B381      		ldd r27,Z+3
 46502 13fbe 8DA7      		std Y+45,r24
 46503 13fc0 9EA7      		std Y+46,r25
 46504 13fc2 AFA7      		std Y+47,r26
 46505 13fc4 B8AB      		std Y+48,r27
4408:lp_solve_5.5/lp_presolve.c ****             if(of == 0)
 46506               		.loc 2 4408 0
 46507 13fc6 20E0      		ldi r18,0
 46508 13fc8 30E0      		ldi r19,0
 46509 13fca A901      		movw r20,r18
 46510 13fcc 6EA1      		ldd r22,Y+38
 46511 13fce 7FA1      		ldd r23,Y+39
 46512 13fd0 88A5      		ldd r24,Y+40
 46513 13fd2 99A5      		ldd r25,Y+41
 46514 13fd4 0E94 0000 		call __eqsf2
 46515 13fd8 8823      		tst r24
 46516 13fda 01F4      		brne .L1970
4409:lp_solve_5.5/lp_presolve.c ****               scale = 1;
 46517               		.loc 2 4409 0
 46518 13fdc 80E0      		ldi r24,0
 46519 13fde 90E0      		ldi r25,0
 46520 13fe0 A0E8      		ldi r26,lo8(-128)
 46521 13fe2 BFE3      		ldi r27,lo8(63)
 46522 13fe4 8A8B      		std Y+18,r24
 46523 13fe6 9B8B      		std Y+19,r25
 46524 13fe8 AC8B      		std Y+20,r26
 46525 13fea BD8B      		std Y+21,r27
 46526 13fec 00C0      		rjmp .L1935
 46527               	.L1970:
4410:lp_solve_5.5/lp_presolve.c ****             else
4411:lp_solve_5.5/lp_presolve.c ****               scale = ofelim / of;
 46528               		.loc 2 4411 0
 46529 13fee 2EA1      		ldd r18,Y+38
 46530 13ff0 3FA1      		ldd r19,Y+39
 46531 13ff2 48A5      		ldd r20,Y+40
 46532 13ff4 59A5      		ldd r21,Y+41
 46533 13ff6 6DA5      		ldd r22,Y+45
 46534 13ff8 7EA5      		ldd r23,Y+46
 46535 13ffa 8FA5      		ldd r24,Y+47
 46536 13ffc 98A9      		ldd r25,Y+48
 46537 13ffe 0E94 0000 		call __divsf3
 46538 14002 DC01      		movw r26,r24
 46539 14004 CB01      		movw r24,r22
 46540 14006 8A8B      		std Y+18,r24
 46541 14008 9B8B      		std Y+19,r25
 46542 1400a AC8B      		std Y+20,r26
 46543 1400c BD8B      		std Y+21,r27
 46544               	.L1935:
4412:lp_solve_5.5/lp_presolve.c **** 
4413:lp_solve_5.5/lp_presolve.c ****             if(my_infinite(lp, lp->orig_upbo[lp->rows+ii])) { /* Case 1 (recipe.mps) */
 46545               		.loc 2 4413 0
 46546 1400e 8A8D      		ldd r24,Y+26
 46547 14010 9B8D      		ldd r25,Y+27
 46548 14012 8255      		subi r24,82
 46549 14014 9D4F      		sbci r25,-3
 46550 14016 FC01      		movw r30,r24
 46551 14018 2081      		ld r18,Z
 46552 1401a 3181      		ldd r19,Z+1
 46553 1401c 8A8D      		ldd r24,Y+26
 46554 1401e 9B8D      		ldd r25,Y+27
 46555 14020 8651      		subi r24,22
 46556 14022 9E4F      		sbci r25,-2
 46557 14024 FC01      		movw r30,r24
 46558 14026 4081      		ld r20,Z
 46559 14028 5181      		ldd r21,Z+1
 46560 1402a 88A1      		ldd r24,Y+32
 46561 1402c 99A1      		ldd r25,Y+33
 46562 1402e 840F      		add r24,r20
 46563 14030 951F      		adc r25,r21
 46564 14032 880F      		lsl r24
 46565 14034 991F      		rol r25
 46566 14036 880F      		lsl r24
 46567 14038 991F      		rol r25
 46568 1403a 820F      		add r24,r18
 46569 1403c 931F      		adc r25,r19
 46570 1403e FC01      		movw r30,r24
 46571 14040 8081      		ld r24,Z
 46572 14042 9181      		ldd r25,Z+1
 46573 14044 A281      		ldd r26,Z+2
 46574 14046 B381      		ldd r27,Z+3
 46575 14048 BF77      		andi r27,0x7f
 46576 1404a 2A8D      		ldd r18,Y+26
 46577 1404c 3B8D      		ldd r19,Y+27
 46578 1404e 265F      		subi r18,-10
 46579 14050 3C4F      		sbci r19,-4
 46580 14052 F901      		movw r30,r18
 46581 14054 2081      		ld r18,Z
 46582 14056 3181      		ldd r19,Z+1
 46583 14058 4281      		ldd r20,Z+2
 46584 1405a 5381      		ldd r21,Z+3
 46585 1405c BC01      		movw r22,r24
 46586 1405e CD01      		movw r24,r26
 46587 14060 0E94 0000 		call __gesf2
 46588 14064 8823      		tst r24
 46589 14066 04F4      		brge .+2
 46590 14068 00C0      		rjmp .L1971
4414:lp_solve_5.5/lp_presolve.c ****               if(is_unbounded(lp, ix))
 46591               		.loc 2 4414 0
 46592 1406a 2BA5      		ldd r18,Y+43
 46593 1406c 3CA5      		ldd r19,Y+44
 46594 1406e 8A8D      		ldd r24,Y+26
 46595 14070 9B8D      		ldd r25,Y+27
 46596 14072 B901      		movw r22,r18
 46597 14074 0E94 0000 		call is_unbounded
 46598 14078 8823      		tst r24
 46599 1407a 01F0      		breq .L1938
4415:lp_solve_5.5/lp_presolve.c ****                 fixvalue = 0;
 46600               		.loc 2 4415 0
 46601 1407c 1E8A      		std Y+22,__zero_reg__
 46602 1407e 1F8A      		std Y+23,__zero_reg__
 46603 14080 188E      		std Y+24,__zero_reg__
 46604 14082 198E      		std Y+25,__zero_reg__
 46605 14084 00C0      		rjmp .L1939
 46606               	.L1938:
4416:lp_solve_5.5/lp_presolve.c ****               else if(ofelim < 0)
 46607               		.loc 2 4416 0
 46608 14086 20E0      		ldi r18,0
 46609 14088 30E0      		ldi r19,0
 46610 1408a A901      		movw r20,r18
 46611 1408c 6DA5      		ldd r22,Y+45
 46612 1408e 7EA5      		ldd r23,Y+46
 46613 14090 8FA5      		ldd r24,Y+47
 46614 14092 98A9      		ldd r25,Y+48
 46615 14094 0E94 0000 		call __ltsf2
 46616 14098 8823      		tst r24
 46617 1409a 04F4      		brge .L1972
4417:lp_solve_5.5/lp_presolve.c ****                 fixvalue = lp->orig_upbo[lp->rows+ix];
 46618               		.loc 2 4417 0
 46619 1409c 8A8D      		ldd r24,Y+26
 46620 1409e 9B8D      		ldd r25,Y+27
 46621 140a0 8255      		subi r24,82
 46622 140a2 9D4F      		sbci r25,-3
 46623 140a4 FC01      		movw r30,r24
 46624 140a6 2081      		ld r18,Z
 46625 140a8 3181      		ldd r19,Z+1
 46626 140aa 8A8D      		ldd r24,Y+26
 46627 140ac 9B8D      		ldd r25,Y+27
 46628 140ae 8651      		subi r24,22
 46629 140b0 9E4F      		sbci r25,-2
 46630 140b2 FC01      		movw r30,r24
 46631 140b4 4081      		ld r20,Z
 46632 140b6 5181      		ldd r21,Z+1
 46633 140b8 8BA5      		ldd r24,Y+43
 46634 140ba 9CA5      		ldd r25,Y+44
 46635 140bc 840F      		add r24,r20
 46636 140be 951F      		adc r25,r21
 46637 140c0 880F      		lsl r24
 46638 140c2 991F      		rol r25
 46639 140c4 880F      		lsl r24
 46640 140c6 991F      		rol r25
 46641 140c8 820F      		add r24,r18
 46642 140ca 931F      		adc r25,r19
 46643 140cc FC01      		movw r30,r24
 46644 140ce 8081      		ld r24,Z
 46645 140d0 9181      		ldd r25,Z+1
 46646 140d2 A281      		ldd r26,Z+2
 46647 140d4 B381      		ldd r27,Z+3
 46648 140d6 8E8B      		std Y+22,r24
 46649 140d8 9F8B      		std Y+23,r25
 46650 140da A88F      		std Y+24,r26
 46651 140dc B98F      		std Y+25,r27
 46652 140de 00C0      		rjmp .L1939
 46653               	.L1972:
4418:lp_solve_5.5/lp_presolve.c ****               else
4419:lp_solve_5.5/lp_presolve.c ****                 fixvalue = lp->orig_lowbo[lp->rows+ix];
 46654               		.loc 2 4419 0
 46655 140e0 8A8D      		ldd r24,Y+26
 46656 140e2 9B8D      		ldd r25,Y+27
 46657 140e4 8E54      		subi r24,78
 46658 140e6 9D4F      		sbci r25,-3
 46659 140e8 FC01      		movw r30,r24
 46660 140ea 2081      		ld r18,Z
 46661 140ec 3181      		ldd r19,Z+1
 46662 140ee 8A8D      		ldd r24,Y+26
 46663 140f0 9B8D      		ldd r25,Y+27
 46664 140f2 8651      		subi r24,22
 46665 140f4 9E4F      		sbci r25,-2
 46666 140f6 FC01      		movw r30,r24
 46667 140f8 4081      		ld r20,Z
 46668 140fa 5181      		ldd r21,Z+1
 46669 140fc 8BA5      		ldd r24,Y+43
 46670 140fe 9CA5      		ldd r25,Y+44
 46671 14100 840F      		add r24,r20
 46672 14102 951F      		adc r25,r21
 46673 14104 880F      		lsl r24
 46674 14106 991F      		rol r25
 46675 14108 880F      		lsl r24
 46676 1410a 991F      		rol r25
 46677 1410c 820F      		add r24,r18
 46678 1410e 931F      		adc r25,r19
 46679 14110 FC01      		movw r30,r24
 46680 14112 8081      		ld r24,Z
 46681 14114 9181      		ldd r25,Z+1
 46682 14116 A281      		ldd r26,Z+2
 46683 14118 B381      		ldd r27,Z+3
 46684 1411a 8E8B      		std Y+22,r24
 46685 1411c 9F8B      		std Y+23,r25
 46686 1411e A88F      		std Y+24,r26
 46687 14120 B98F      		std Y+25,r27
 46688               	.L1939:
4420:lp_solve_5.5/lp_presolve.c ****               if(my_infinite(lp, fixvalue))
 46689               		.loc 2 4420 0
 46690 14122 8E89      		ldd r24,Y+22
 46691 14124 9F89      		ldd r25,Y+23
 46692 14126 A88D      		ldd r26,Y+24
 46693 14128 B98D      		ldd r27,Y+25
 46694 1412a BF77      		andi r27,0x7f
 46695 1412c 2A8D      		ldd r18,Y+26
 46696 1412e 3B8D      		ldd r19,Y+27
 46697 14130 265F      		subi r18,-10
 46698 14132 3C4F      		sbci r19,-4
 46699 14134 F901      		movw r30,r18
 46700 14136 2081      		ld r18,Z
 46701 14138 3181      		ldd r19,Z+1
 46702 1413a 4281      		ldd r20,Z+2
 46703 1413c 5381      		ldd r21,Z+3
 46704 1413e BC01      		movw r22,r24
 46705 14140 CD01      		movw r24,r26
 46706 14142 0E94 0000 		call __gesf2
 46707 14146 8823      		tst r24
 46708 14148 04F0      		brlt .L1973
4421:lp_solve_5.5/lp_presolve.c ****                 status = presolve_setstatus(psdata, UNBOUNDED);
 46709               		.loc 2 4421 0
 46710 1414a 8BAD      		ldd r24,Y+59
 46711 1414c 9CAD      		ldd r25,Y+60
 46712 1414e 20E0      		ldi r18,lo8(.LC21)
 46713 14150 30E0      		ldi r19,hi8(.LC21)
 46714 14152 45E4      		ldi r20,lo8(69)
 46715 14154 51E1      		ldi r21,lo8(17)
 46716 14156 63E0      		ldi r22,lo8(3)
 46717 14158 70E0      		ldi r23,0
 46718 1415a 0E94 0000 		call presolve_setstatusex
 46719 1415e 998B      		std Y+17,r25
 46720 14160 888B      		std Y+16,r24
 46721 14162 00C0      		rjmp .L1932
 46722               	.L1973:
4422:lp_solve_5.5/lp_presolve.c ****               else if(!presolve_colfix(psdata, ix, fixvalue, TRUE, &iVarFixed))
 46723               		.loc 2 4422 0
 46724 14164 9E01      		movw r18,r28
 46725 14166 295C      		subi r18,-55
 46726 14168 3F4F      		sbci r19,-1
 46727 1416a 8E89      		ldd r24,Y+22
 46728 1416c 9F89      		ldd r25,Y+23
 46729 1416e A88D      		ldd r26,Y+24
 46730 14170 B98D      		ldd r27,Y+25
 46731 14172 6BA5      		ldd r22,Y+43
 46732 14174 7CA5      		ldd r23,Y+44
 46733 14176 EBAD      		ldd r30,Y+59
 46734 14178 FCAD      		ldd r31,Y+60
 46735 1417a 7901      		movw r14,r18
 46736 1417c 01E0      		ldi r16,lo8(1)
 46737 1417e 9C01      		movw r18,r24
 46738 14180 AD01      		movw r20,r26
 46739 14182 CF01      		movw r24,r30
 46740 14184 0E94 0000 		call presolve_colfix
 46741 14188 8823      		tst r24
 46742 1418a 01F4      		brne .L1945
4423:lp_solve_5.5/lp_presolve.c ****                 status = presolve_setstatus(psdata, INFEASIBLE);
 46743               		.loc 2 4423 0
 46744 1418c 8BAD      		ldd r24,Y+59
 46745 1418e 9CAD      		ldd r25,Y+60
 46746 14190 20E0      		ldi r18,lo8(.LC21)
 46747 14192 30E0      		ldi r19,hi8(.LC21)
 46748 14194 47E4      		ldi r20,lo8(71)
 46749 14196 51E1      		ldi r21,lo8(17)
 46750 14198 62E0      		ldi r22,lo8(2)
 46751 1419a 70E0      		ldi r23,0
 46752 1419c 0E94 0000 		call presolve_setstatusex
 46753 141a0 998B      		std Y+17,r25
 46754 141a2 888B      		std Y+16,r24
 46755 141a4 00C0      		rjmp .L1932
 46756               	.L1945:
4424:lp_solve_5.5/lp_presolve.c ****               else
4425:lp_solve_5.5/lp_presolve.c ****                 presolve_colremove(psdata, ix, TRUE);
 46757               		.loc 2 4425 0
 46758 141a6 2BA5      		ldd r18,Y+43
 46759 141a8 3CA5      		ldd r19,Y+44
 46760 141aa 8BAD      		ldd r24,Y+59
 46761 141ac 9CAD      		ldd r25,Y+60
 46762 141ae 41E0      		ldi r20,lo8(1)
 46763 141b0 B901      		movw r22,r18
 46764 141b2 0E94 0000 		call presolve_colremove
 46765 141b6 00C0      		rjmp .L1932
 46766               	.L1971:
4426:lp_solve_5.5/lp_presolve.c ****             }
4427:lp_solve_5.5/lp_presolve.c **** 
4428:lp_solve_5.5/lp_presolve.c ****             else if(my_infinite(lp, lp->orig_lowbo[lp->rows+ii])) { /* Case 2 */
 46767               		.loc 2 4428 0
 46768 141b8 8A8D      		ldd r24,Y+26
 46769 141ba 9B8D      		ldd r25,Y+27
 46770 141bc 8E54      		subi r24,78
 46771 141be 9D4F      		sbci r25,-3
 46772 141c0 FC01      		movw r30,r24
 46773 141c2 2081      		ld r18,Z
 46774 141c4 3181      		ldd r19,Z+1
 46775 141c6 8A8D      		ldd r24,Y+26
 46776 141c8 9B8D      		ldd r25,Y+27
 46777 141ca 8651      		subi r24,22
 46778 141cc 9E4F      		sbci r25,-2
 46779 141ce FC01      		movw r30,r24
 46780 141d0 4081      		ld r20,Z
 46781 141d2 5181      		ldd r21,Z+1
 46782 141d4 88A1      		ldd r24,Y+32
 46783 141d6 99A1      		ldd r25,Y+33
 46784 141d8 840F      		add r24,r20
 46785 141da 951F      		adc r25,r21
 46786 141dc 880F      		lsl r24
 46787 141de 991F      		rol r25
 46788 141e0 880F      		lsl r24
 46789 141e2 991F      		rol r25
 46790 141e4 820F      		add r24,r18
 46791 141e6 931F      		adc r25,r19
 46792 141e8 FC01      		movw r30,r24
 46793 141ea 8081      		ld r24,Z
 46794 141ec 9181      		ldd r25,Z+1
 46795 141ee A281      		ldd r26,Z+2
 46796 141f0 B381      		ldd r27,Z+3
 46797 141f2 BF77      		andi r27,0x7f
 46798 141f4 2A8D      		ldd r18,Y+26
 46799 141f6 3B8D      		ldd r19,Y+27
 46800 141f8 265F      		subi r18,-10
 46801 141fa 3C4F      		sbci r19,-4
 46802 141fc F901      		movw r30,r18
 46803 141fe 2081      		ld r18,Z
 46804 14200 3181      		ldd r19,Z+1
 46805 14202 4281      		ldd r20,Z+2
 46806 14204 5381      		ldd r21,Z+3
 46807 14206 BC01      		movw r22,r24
 46808 14208 CD01      		movw r24,r26
 46809 1420a 0E94 0000 		call __gesf2
 46810 1420e 8823      		tst r24
 46811 14210 04F0      		brlt .+2
 46812 14212 00C0      		rjmp .L1932
4429:lp_solve_5.5/lp_presolve.c ****               /* Do nothing */
4430:lp_solve_5.5/lp_presolve.c ****             }
4431:lp_solve_5.5/lp_presolve.c **** 
4432:lp_solve_5.5/lp_presolve.c ****             else {                                            /* Case 3 */
4433:lp_solve_5.5/lp_presolve.c **** #if 0
4434:lp_solve_5.5/lp_presolve.c ****               /* Do nothing */
4435:lp_solve_5.5/lp_presolve.c **** #else
4436:lp_solve_5.5/lp_presolve.c ****               if(ofelim >= 0) {
 46813               		.loc 2 4436 0
 46814 14214 20E0      		ldi r18,0
 46815 14216 30E0      		ldi r19,0
 46816 14218 A901      		movw r20,r18
 46817 1421a 6DA5      		ldd r22,Y+45
 46818 1421c 7EA5      		ldd r23,Y+46
 46819 1421e 8FA5      		ldd r24,Y+47
 46820 14220 98A9      		ldd r25,Y+48
 46821 14222 0E94 0000 		call __gesf2
 46822 14226 8823      		tst r24
 46823 14228 04F4      		brge .+2
 46824 1422a 00C0      		rjmp .L1974
4437:lp_solve_5.5/lp_presolve.c ****                 fixvalue = lp->orig_lowbo[lp->rows+ix];
 46825               		.loc 2 4437 0
 46826 1422c 8A8D      		ldd r24,Y+26
 46827 1422e 9B8D      		ldd r25,Y+27
 46828 14230 8E54      		subi r24,78
 46829 14232 9D4F      		sbci r25,-3
 46830 14234 FC01      		movw r30,r24
 46831 14236 2081      		ld r18,Z
 46832 14238 3181      		ldd r19,Z+1
 46833 1423a 8A8D      		ldd r24,Y+26
 46834 1423c 9B8D      		ldd r25,Y+27
 46835 1423e 8651      		subi r24,22
 46836 14240 9E4F      		sbci r25,-2
 46837 14242 FC01      		movw r30,r24
 46838 14244 4081      		ld r20,Z
 46839 14246 5181      		ldd r21,Z+1
 46840 14248 8BA5      		ldd r24,Y+43
 46841 1424a 9CA5      		ldd r25,Y+44
 46842 1424c 840F      		add r24,r20
 46843 1424e 951F      		adc r25,r21
 46844 14250 880F      		lsl r24
 46845 14252 991F      		rol r25
 46846 14254 880F      		lsl r24
 46847 14256 991F      		rol r25
 46848 14258 820F      		add r24,r18
 46849 1425a 931F      		adc r25,r19
 46850 1425c FC01      		movw r30,r24
 46851 1425e 8081      		ld r24,Z
 46852 14260 9181      		ldd r25,Z+1
 46853 14262 A281      		ldd r26,Z+2
 46854 14264 B381      		ldd r27,Z+3
 46855 14266 8E8B      		std Y+22,r24
 46856 14268 9F8B      		std Y+23,r25
 46857 1426a A88F      		std Y+24,r26
 46858 1426c B98F      		std Y+25,r27
4438:lp_solve_5.5/lp_presolve.c ****                 lp->orig_upbo[lp->rows+ii] += scale * (lp->orig_upbo[lp->rows+ix] - fixvalue);
 46859               		.loc 2 4438 0
 46860 1426e 8A8D      		ldd r24,Y+26
 46861 14270 9B8D      		ldd r25,Y+27
 46862 14272 8255      		subi r24,82
 46863 14274 9D4F      		sbci r25,-3
 46864 14276 FC01      		movw r30,r24
 46865 14278 2081      		ld r18,Z
 46866 1427a 3181      		ldd r19,Z+1
 46867 1427c 8A8D      		ldd r24,Y+26
 46868 1427e 9B8D      		ldd r25,Y+27
 46869 14280 8651      		subi r24,22
 46870 14282 9E4F      		sbci r25,-2
 46871 14284 FC01      		movw r30,r24
 46872 14286 4081      		ld r20,Z
 46873 14288 5181      		ldd r21,Z+1
 46874 1428a 88A1      		ldd r24,Y+32
 46875 1428c 99A1      		ldd r25,Y+33
 46876 1428e 840F      		add r24,r20
 46877 14290 951F      		adc r25,r21
 46878 14292 880F      		lsl r24
 46879 14294 991F      		rol r25
 46880 14296 880F      		lsl r24
 46881 14298 991F      		rol r25
 46882 1429a 8901      		movw r16,r18
 46883 1429c 080F      		add r16,r24
 46884 1429e 191F      		adc r17,r25
 46885 142a0 8A8D      		ldd r24,Y+26
 46886 142a2 9B8D      		ldd r25,Y+27
 46887 142a4 8255      		subi r24,82
 46888 142a6 9D4F      		sbci r25,-3
 46889 142a8 FC01      		movw r30,r24
 46890 142aa 2081      		ld r18,Z
 46891 142ac 3181      		ldd r19,Z+1
 46892 142ae 8A8D      		ldd r24,Y+26
 46893 142b0 9B8D      		ldd r25,Y+27
 46894 142b2 8651      		subi r24,22
 46895 142b4 9E4F      		sbci r25,-2
 46896 142b6 FC01      		movw r30,r24
 46897 142b8 4081      		ld r20,Z
 46898 142ba 5181      		ldd r21,Z+1
 46899 142bc 88A1      		ldd r24,Y+32
 46900 142be 99A1      		ldd r25,Y+33
 46901 142c0 840F      		add r24,r20
 46902 142c2 951F      		adc r25,r21
 46903 142c4 880F      		lsl r24
 46904 142c6 991F      		rol r25
 46905 142c8 880F      		lsl r24
 46906 142ca 991F      		rol r25
 46907 142cc 820F      		add r24,r18
 46908 142ce 931F      		adc r25,r19
 46909 142d0 FC01      		movw r30,r24
 46910 142d2 C080      		ld r12,Z
 46911 142d4 D180      		ldd r13,Z+1
 46912 142d6 E280      		ldd r14,Z+2
 46913 142d8 F380      		ldd r15,Z+3
 46914 142da 8A8D      		ldd r24,Y+26
 46915 142dc 9B8D      		ldd r25,Y+27
 46916 142de 8255      		subi r24,82
 46917 142e0 9D4F      		sbci r25,-3
 46918 142e2 FC01      		movw r30,r24
 46919 142e4 2081      		ld r18,Z
 46920 142e6 3181      		ldd r19,Z+1
 46921 142e8 8A8D      		ldd r24,Y+26
 46922 142ea 9B8D      		ldd r25,Y+27
 46923 142ec 8651      		subi r24,22
 46924 142ee 9E4F      		sbci r25,-2
 46925 142f0 FC01      		movw r30,r24
 46926 142f2 4081      		ld r20,Z
 46927 142f4 5181      		ldd r21,Z+1
 46928 142f6 8BA5      		ldd r24,Y+43
 46929 142f8 9CA5      		ldd r25,Y+44
 46930 142fa 840F      		add r24,r20
 46931 142fc 951F      		adc r25,r21
 46932 142fe 880F      		lsl r24
 46933 14300 991F      		rol r25
 46934 14302 880F      		lsl r24
 46935 14304 991F      		rol r25
 46936 14306 820F      		add r24,r18
 46937 14308 931F      		adc r25,r19
 46938 1430a FC01      		movw r30,r24
 46939 1430c 8081      		ld r24,Z
 46940 1430e 9181      		ldd r25,Z+1
 46941 14310 A281      		ldd r26,Z+2
 46942 14312 B381      		ldd r27,Z+3
 46943 14314 2E89      		ldd r18,Y+22
 46944 14316 3F89      		ldd r19,Y+23
 46945 14318 488D      		ldd r20,Y+24
 46946 1431a 598D      		ldd r21,Y+25
 46947 1431c BC01      		movw r22,r24
 46948 1431e CD01      		movw r24,r26
 46949 14320 0E94 0000 		call __subsf3
 46950 14324 DC01      		movw r26,r24
 46951 14326 CB01      		movw r24,r22
 46952 14328 2A89      		ldd r18,Y+18
 46953 1432a 3B89      		ldd r19,Y+19
 46954 1432c 4C89      		ldd r20,Y+20
 46955 1432e 5D89      		ldd r21,Y+21
 46956 14330 BC01      		movw r22,r24
 46957 14332 CD01      		movw r24,r26
 46958 14334 0E94 0000 		call __mulsf3
 46959 14338 DC01      		movw r26,r24
 46960 1433a CB01      		movw r24,r22
 46961 1433c 9C01      		movw r18,r24
 46962 1433e AD01      		movw r20,r26
 46963 14340 C701      		movw r24,r14
 46964 14342 B601      		movw r22,r12
 46965 14344 0E94 0000 		call __addsf3
 46966 14348 DC01      		movw r26,r24
 46967 1434a CB01      		movw r24,r22
 46968 1434c F801      		movw r30,r16
 46969 1434e 8083      		st Z,r24
 46970 14350 9183      		std Z+1,r25
 46971 14352 A283      		std Z+2,r26
 46972 14354 B383      		std Z+3,r27
 46973 14356 00C0      		rjmp .L1948
 46974               	.L1974:
4439:lp_solve_5.5/lp_presolve.c ****               }
4440:lp_solve_5.5/lp_presolve.c ****               else {
4441:lp_solve_5.5/lp_presolve.c ****                 fixvalue = lp->orig_upbo[lp->rows+ix];
 46975               		.loc 2 4441 0
 46976 14358 8A8D      		ldd r24,Y+26
 46977 1435a 9B8D      		ldd r25,Y+27
 46978 1435c 8255      		subi r24,82
 46979 1435e 9D4F      		sbci r25,-3
 46980 14360 FC01      		movw r30,r24
 46981 14362 2081      		ld r18,Z
 46982 14364 3181      		ldd r19,Z+1
 46983 14366 8A8D      		ldd r24,Y+26
 46984 14368 9B8D      		ldd r25,Y+27
 46985 1436a 8651      		subi r24,22
 46986 1436c 9E4F      		sbci r25,-2
 46987 1436e FC01      		movw r30,r24
 46988 14370 4081      		ld r20,Z
 46989 14372 5181      		ldd r21,Z+1
 46990 14374 8BA5      		ldd r24,Y+43
 46991 14376 9CA5      		ldd r25,Y+44
 46992 14378 840F      		add r24,r20
 46993 1437a 951F      		adc r25,r21
 46994 1437c 880F      		lsl r24
 46995 1437e 991F      		rol r25
 46996 14380 880F      		lsl r24
 46997 14382 991F      		rol r25
 46998 14384 820F      		add r24,r18
 46999 14386 931F      		adc r25,r19
 47000 14388 FC01      		movw r30,r24
 47001 1438a 8081      		ld r24,Z
 47002 1438c 9181      		ldd r25,Z+1
 47003 1438e A281      		ldd r26,Z+2
 47004 14390 B381      		ldd r27,Z+3
 47005 14392 8E8B      		std Y+22,r24
 47006 14394 9F8B      		std Y+23,r25
 47007 14396 A88F      		std Y+24,r26
 47008 14398 B98F      		std Y+25,r27
4442:lp_solve_5.5/lp_presolve.c ****                 lp->orig_upbo[lp->rows+ii] -= scale * (fixvalue - lp->orig_lowbo[lp->rows+ix]);
 47009               		.loc 2 4442 0
 47010 1439a 8A8D      		ldd r24,Y+26
 47011 1439c 9B8D      		ldd r25,Y+27
 47012 1439e 8255      		subi r24,82
 47013 143a0 9D4F      		sbci r25,-3
 47014 143a2 FC01      		movw r30,r24
 47015 143a4 2081      		ld r18,Z
 47016 143a6 3181      		ldd r19,Z+1
 47017 143a8 8A8D      		ldd r24,Y+26
 47018 143aa 9B8D      		ldd r25,Y+27
 47019 143ac 8651      		subi r24,22
 47020 143ae 9E4F      		sbci r25,-2
 47021 143b0 FC01      		movw r30,r24
 47022 143b2 4081      		ld r20,Z
 47023 143b4 5181      		ldd r21,Z+1
 47024 143b6 88A1      		ldd r24,Y+32
 47025 143b8 99A1      		ldd r25,Y+33
 47026 143ba 840F      		add r24,r20
 47027 143bc 951F      		adc r25,r21
 47028 143be 880F      		lsl r24
 47029 143c0 991F      		rol r25
 47030 143c2 880F      		lsl r24
 47031 143c4 991F      		rol r25
 47032 143c6 8901      		movw r16,r18
 47033 143c8 080F      		add r16,r24
 47034 143ca 191F      		adc r17,r25
 47035 143cc 8A8D      		ldd r24,Y+26
 47036 143ce 9B8D      		ldd r25,Y+27
 47037 143d0 8255      		subi r24,82
 47038 143d2 9D4F      		sbci r25,-3
 47039 143d4 FC01      		movw r30,r24
 47040 143d6 2081      		ld r18,Z
 47041 143d8 3181      		ldd r19,Z+1
 47042 143da 8A8D      		ldd r24,Y+26
 47043 143dc 9B8D      		ldd r25,Y+27
 47044 143de 8651      		subi r24,22
 47045 143e0 9E4F      		sbci r25,-2
 47046 143e2 FC01      		movw r30,r24
 47047 143e4 4081      		ld r20,Z
 47048 143e6 5181      		ldd r21,Z+1
 47049 143e8 88A1      		ldd r24,Y+32
 47050 143ea 99A1      		ldd r25,Y+33
 47051 143ec 840F      		add r24,r20
 47052 143ee 951F      		adc r25,r21
 47053 143f0 880F      		lsl r24
 47054 143f2 991F      		rol r25
 47055 143f4 880F      		lsl r24
 47056 143f6 991F      		rol r25
 47057 143f8 820F      		add r24,r18
 47058 143fa 931F      		adc r25,r19
 47059 143fc FC01      		movw r30,r24
 47060 143fe C080      		ld r12,Z
 47061 14400 D180      		ldd r13,Z+1
 47062 14402 E280      		ldd r14,Z+2
 47063 14404 F380      		ldd r15,Z+3
 47064 14406 8A8D      		ldd r24,Y+26
 47065 14408 9B8D      		ldd r25,Y+27
 47066 1440a 8E54      		subi r24,78
 47067 1440c 9D4F      		sbci r25,-3
 47068 1440e FC01      		movw r30,r24
 47069 14410 2081      		ld r18,Z
 47070 14412 3181      		ldd r19,Z+1
 47071 14414 8A8D      		ldd r24,Y+26
 47072 14416 9B8D      		ldd r25,Y+27
 47073 14418 8651      		subi r24,22
 47074 1441a 9E4F      		sbci r25,-2
 47075 1441c FC01      		movw r30,r24
 47076 1441e 4081      		ld r20,Z
 47077 14420 5181      		ldd r21,Z+1
 47078 14422 8BA5      		ldd r24,Y+43
 47079 14424 9CA5      		ldd r25,Y+44
 47080 14426 840F      		add r24,r20
 47081 14428 951F      		adc r25,r21
 47082 1442a 880F      		lsl r24
 47083 1442c 991F      		rol r25
 47084 1442e 880F      		lsl r24
 47085 14430 991F      		rol r25
 47086 14432 820F      		add r24,r18
 47087 14434 931F      		adc r25,r19
 47088 14436 FC01      		movw r30,r24
 47089 14438 8081      		ld r24,Z
 47090 1443a 9181      		ldd r25,Z+1
 47091 1443c A281      		ldd r26,Z+2
 47092 1443e B381      		ldd r27,Z+3
 47093 14440 9C01      		movw r18,r24
 47094 14442 AD01      		movw r20,r26
 47095 14444 6E89      		ldd r22,Y+22
 47096 14446 7F89      		ldd r23,Y+23
 47097 14448 888D      		ldd r24,Y+24
 47098 1444a 998D      		ldd r25,Y+25
 47099 1444c 0E94 0000 		call __subsf3
 47100 14450 DC01      		movw r26,r24
 47101 14452 CB01      		movw r24,r22
 47102 14454 2A89      		ldd r18,Y+18
 47103 14456 3B89      		ldd r19,Y+19
 47104 14458 4C89      		ldd r20,Y+20
 47105 1445a 5D89      		ldd r21,Y+21
 47106 1445c BC01      		movw r22,r24
 47107 1445e CD01      		movw r24,r26
 47108 14460 0E94 0000 		call __mulsf3
 47109 14464 DC01      		movw r26,r24
 47110 14466 CB01      		movw r24,r22
 47111 14468 9C01      		movw r18,r24
 47112 1446a AD01      		movw r20,r26
 47113 1446c C701      		movw r24,r14
 47114 1446e B601      		movw r22,r12
 47115 14470 0E94 0000 		call __subsf3
 47116 14474 DC01      		movw r26,r24
 47117 14476 CB01      		movw r24,r22
 47118 14478 F801      		movw r30,r16
 47119 1447a 8083      		st Z,r24
 47120 1447c 9183      		std Z+1,r25
 47121 1447e A283      		std Z+2,r26
 47122 14480 B383      		std Z+3,r27
 47123               	.L1948:
4443:lp_solve_5.5/lp_presolve.c ****               }
4444:lp_solve_5.5/lp_presolve.c ****               if(my_infinite(lp, fixvalue))
 47124               		.loc 2 4444 0
 47125 14482 8E89      		ldd r24,Y+22
 47126 14484 9F89      		ldd r25,Y+23
 47127 14486 A88D      		ldd r26,Y+24
 47128 14488 B98D      		ldd r27,Y+25
 47129 1448a BF77      		andi r27,0x7f
 47130 1448c 2A8D      		ldd r18,Y+26
 47131 1448e 3B8D      		ldd r19,Y+27
 47132 14490 265F      		subi r18,-10
 47133 14492 3C4F      		sbci r19,-4
 47134 14494 F901      		movw r30,r18
 47135 14496 2081      		ld r18,Z
 47136 14498 3181      		ldd r19,Z+1
 47137 1449a 4281      		ldd r20,Z+2
 47138 1449c 5381      		ldd r21,Z+3
 47139 1449e BC01      		movw r22,r24
 47140 144a0 CD01      		movw r24,r26
 47141 144a2 0E94 0000 		call __gesf2
 47142 144a6 8823      		tst r24
 47143 144a8 04F0      		brlt .L1975
4445:lp_solve_5.5/lp_presolve.c ****                 status = presolve_setstatus(psdata, UNBOUNDED);
 47144               		.loc 2 4445 0
 47145 144aa 8BAD      		ldd r24,Y+59
 47146 144ac 9CAD      		ldd r25,Y+60
 47147 144ae 20E0      		ldi r18,lo8(.LC21)
 47148 144b0 30E0      		ldi r19,hi8(.LC21)
 47149 144b2 4DE5      		ldi r20,lo8(93)
 47150 144b4 51E1      		ldi r21,lo8(17)
 47151 144b6 63E0      		ldi r22,lo8(3)
 47152 144b8 70E0      		ldi r23,0
 47153 144ba 0E94 0000 		call presolve_setstatusex
 47154 144be 998B      		std Y+17,r25
 47155 144c0 888B      		std Y+16,r24
 47156 144c2 00C0      		rjmp .L1951
 47157               	.L1975:
4446:lp_solve_5.5/lp_presolve.c ****               else if(!presolve_colfix(psdata, ix, fixvalue, TRUE, &iVarFixed))
 47158               		.loc 2 4446 0
 47159 144c4 9E01      		movw r18,r28
 47160 144c6 295C      		subi r18,-55
 47161 144c8 3F4F      		sbci r19,-1
 47162 144ca 8E89      		ldd r24,Y+22
 47163 144cc 9F89      		ldd r25,Y+23
 47164 144ce A88D      		ldd r26,Y+24
 47165 144d0 B98D      		ldd r27,Y+25
 47166 144d2 6BA5      		ldd r22,Y+43
 47167 144d4 7CA5      		ldd r23,Y+44
 47168 144d6 EBAD      		ldd r30,Y+59
 47169 144d8 FCAD      		ldd r31,Y+60
 47170 144da 7901      		movw r14,r18
 47171 144dc 01E0      		ldi r16,lo8(1)
 47172 144de 9C01      		movw r18,r24
 47173 144e0 AD01      		movw r20,r26
 47174 144e2 CF01      		movw r24,r30
 47175 144e4 0E94 0000 		call presolve_colfix
 47176 144e8 8823      		tst r24
 47177 144ea 01F4      		brne .L1952
4447:lp_solve_5.5/lp_presolve.c ****                 status = presolve_setstatus(psdata, INFEASIBLE);
 47178               		.loc 2 4447 0
 47179 144ec 8BAD      		ldd r24,Y+59
 47180 144ee 9CAD      		ldd r25,Y+60
 47181 144f0 20E0      		ldi r18,lo8(.LC21)
 47182 144f2 30E0      		ldi r19,hi8(.LC21)
 47183 144f4 4FE5      		ldi r20,lo8(95)
 47184 144f6 51E1      		ldi r21,lo8(17)
 47185 144f8 62E0      		ldi r22,lo8(2)
 47186 144fa 70E0      		ldi r23,0
 47187 144fc 0E94 0000 		call presolve_setstatusex
 47188 14500 998B      		std Y+17,r25
 47189 14502 888B      		std Y+16,r24
 47190 14504 00C0      		rjmp .L1951
 47191               	.L1952:
4448:lp_solve_5.5/lp_presolve.c ****               else
4449:lp_solve_5.5/lp_presolve.c ****                 presolve_colremove(psdata, ix, TRUE);
 47192               		.loc 2 4449 0
 47193 14506 2BA5      		ldd r18,Y+43
 47194 14508 3CA5      		ldd r19,Y+44
 47195 1450a 8BAD      		ldd r24,Y+59
 47196 1450c 9CAD      		ldd r25,Y+60
 47197 1450e 41E0      		ldi r20,lo8(1)
 47198 14510 B901      		movw r22,r18
 47199 14512 0E94 0000 		call presolve_colremove
 47200               	.L1951:
4450:lp_solve_5.5/lp_presolve.c **** #ifdef xxParanoia
4451:lp_solve_5.5/lp_presolve.c ****               if(presolve_rowlengthdebug(psdata) > 0)
4452:lp_solve_5.5/lp_presolve.c ****                 report(lp, SEVERE, "presolve_aggregate: Invalid row count\n");
4453:lp_solve_5.5/lp_presolve.c **** #endif
4454:lp_solve_5.5/lp_presolve.c ****               psdata->forceupdate = TRUE;
 47201               		.loc 2 4454 0
 47202 14516 8BAD      		ldd r24,Y+59
 47203 14518 9CAD      		ldd r25,Y+60
 47204 1451a 21E0      		ldi r18,lo8(1)
 47205 1451c FC01      		movw r30,r24
 47206 1451e 24A3      		std Z+36,r18
 47207               	.L1932:
4455:lp_solve_5.5/lp_presolve.c **** #endif
4456:lp_solve_5.5/lp_presolve.c ****             }
4457:lp_solve_5.5/lp_presolve.c ****           }
4458:lp_solve_5.5/lp_presolve.c ****           je++;
 47208               		.loc 2 4458 0
 47209 14520 8C85      		ldd r24,Y+12
 47210 14522 9D85      		ldd r25,Y+13
 47211 14524 0196      		adiw r24,1
 47212 14526 9D87      		std Y+13,r25
 47213 14528 8C87      		std Y+12,r24
 47214               	.L1931:
4390:lp_solve_5.5/lp_presolve.c ****               (fabs(lp->orig_obj[ix = QSagg[je].pvoidint2.intval] - of) < psdata->epsvalue)) {
 47215               		.loc 2 4390 0
 47216 1452a 8889      		ldd r24,Y+16
 47217 1452c 9989      		ldd r25,Y+17
 47218 1452e 0897      		sbiw r24,8
 47219 14530 01F0      		breq .+2
 47220 14532 00C0      		rjmp .L1953
4390:lp_solve_5.5/lp_presolve.c ****               (fabs(lp->orig_obj[ix = QSagg[je].pvoidint2.intval] - of) < psdata->epsvalue)) {
 47221               		.loc 2 4390 0 is_stmt 0 discriminator 1
 47222 14534 8DA9      		ldd r24,Y+53
 47223 14536 9EA9      		ldd r25,Y+54
 47224 14538 FC01      		movw r30,r24
 47225 1453a 2081      		ld r18,Z
 47226 1453c 3181      		ldd r19,Z+1
 47227 1453e 8C85      		ldd r24,Y+12
 47228 14540 9D85      		ldd r25,Y+13
 47229 14542 8217      		cp r24,r18
 47230 14544 9307      		cpc r25,r19
 47231 14546 04F4      		brge .L1953
4391:lp_solve_5.5/lp_presolve.c ****            /* We now have two columns with equal OFs; the following cases are possible:
 47232               		.loc 2 4391 0 is_stmt 1 discriminator 2
 47233 14548 8A8D      		ldd r24,Y+26
 47234 1454a 9B8D      		ldd r25,Y+27
 47235 1454c 845D      		subi r24,-44
 47236 1454e 9D4F      		sbci r25,-3
 47237 14550 FC01      		movw r30,r24
 47238 14552 2081      		ld r18,Z
 47239 14554 3181      		ldd r19,Z+1
 47240 14556 8C85      		ldd r24,Y+12
 47241 14558 9D85      		ldd r25,Y+13
 47242 1455a 880F      		lsl r24
 47243 1455c 991F      		rol r25
 47244 1455e 880F      		lsl r24
 47245 14560 991F      		rol r25
 47246 14562 880F      		lsl r24
 47247 14564 991F      		rol r25
 47248 14566 4CA1      		ldd r20,Y+36
 47249 14568 5DA1      		ldd r21,Y+37
 47250 1456a 840F      		add r24,r20
 47251 1456c 951F      		adc r25,r21
 47252 1456e FC01      		movw r30,r24
 47253 14570 8281      		ldd r24,Z+2
 47254 14572 9381      		ldd r25,Z+3
 47255 14574 9CA7      		std Y+44,r25
 47256 14576 8BA7      		std Y+43,r24
 47257 14578 8BA5      		ldd r24,Y+43
 47258 1457a 9CA5      		ldd r25,Y+44
 47259 1457c 880F      		lsl r24
 47260 1457e 991F      		rol r25
 47261 14580 880F      		lsl r24
 47262 14582 991F      		rol r25
 47263 14584 820F      		add r24,r18
 47264 14586 931F      		adc r25,r19
 47265 14588 FC01      		movw r30,r24
 47266 1458a 8081      		ld r24,Z
 47267 1458c 9181      		ldd r25,Z+1
 47268 1458e A281      		ldd r26,Z+2
 47269 14590 B381      		ldd r27,Z+3
 47270 14592 2EA1      		ldd r18,Y+38
 47271 14594 3FA1      		ldd r19,Y+39
 47272 14596 48A5      		ldd r20,Y+40
 47273 14598 59A5      		ldd r21,Y+41
 47274 1459a BC01      		movw r22,r24
 47275 1459c CD01      		movw r24,r26
 47276 1459e 0E94 0000 		call __subsf3
 47277 145a2 DC01      		movw r26,r24
 47278 145a4 CB01      		movw r24,r22
 47279 145a6 BF77      		andi r27,0x7f
 47280 145a8 2BAD      		ldd r18,Y+59
 47281 145aa 3CAD      		ldd r19,Y+60
 47282 145ac F901      		movw r30,r18
 47283 145ae 2489      		ldd r18,Z+20
 47284 145b0 3589      		ldd r19,Z+21
 47285 145b2 4689      		ldd r20,Z+22
 47286 145b4 5789      		ldd r21,Z+23
4390:lp_solve_5.5/lp_presolve.c ****               (fabs(lp->orig_obj[ix = QSagg[je].pvoidint2.intval] - of) < psdata->epsvalue)) {
 47287               		.loc 2 4390 0 discriminator 2
 47288 145b6 BC01      		movw r22,r24
 47289 145b8 CD01      		movw r24,r26
 47290 145ba 0E94 0000 		call __ltsf2
 47291 145be 8823      		tst r24
 47292 145c0 04F4      		brge .+2
 47293 145c2 00C0      		rjmp .L1954
 47294               	.L1953:
4459:lp_solve_5.5/lp_presolve.c ****         }
4460:lp_solve_5.5/lp_presolve.c ****         jb = je;
 47295               		.loc 2 4460 0
 47296 145c4 8C85      		ldd r24,Y+12
 47297 145c6 9D85      		ldd r25,Y+13
 47298 145c8 9B87      		std Y+11,r25
 47299 145ca 8A87      		std Y+10,r24
 47300               	.L1930:
4385:lp_solve_5.5/lp_presolve.c ****         ii = QSagg[jb].pvoidint2.intval;
 47301               		.loc 2 4385 0
 47302 145cc 8889      		ldd r24,Y+16
 47303 145ce 9989      		ldd r25,Y+17
 47304 145d0 0897      		sbiw r24,8
 47305 145d2 01F4      		brne .L1955
4385:lp_solve_5.5/lp_presolve.c ****         ii = QSagg[jb].pvoidint2.intval;
 47306               		.loc 2 4385 0 is_stmt 0 discriminator 1
 47307 145d4 8DA9      		ldd r24,Y+53
 47308 145d6 9EA9      		ldd r25,Y+54
 47309 145d8 FC01      		movw r30,r24
 47310 145da 2081      		ld r18,Z
 47311 145dc 3181      		ldd r19,Z+1
 47312 145de 8A85      		ldd r24,Y+10
 47313 145e0 9B85      		ldd r25,Y+11
 47314 145e2 8217      		cp r24,r18
 47315 145e4 9307      		cpc r25,r19
 47316 145e6 04F4      		brge .+2
 47317 145e8 00C0      		rjmp .L1956
 47318               	.L1955:
4461:lp_solve_5.5/lp_presolve.c ****       }
4462:lp_solve_5.5/lp_presolve.c ****       FREE(QSagg);
 47319               		.loc 2 4462 0 is_stmt 1
 47320 145ea 8CA1      		ldd r24,Y+36
 47321 145ec 9DA1      		ldd r25,Y+37
 47322 145ee 892B      		or r24,r25
 47323 145f0 01F0      		breq .L1927
 47324               		.loc 2 4462 0 is_stmt 0 discriminator 1
 47325 145f2 8CA1      		ldd r24,Y+36
 47326 145f4 9DA1      		ldd r25,Y+37
 47327 145f6 0E94 0000 		call free
 47328 145fa 1DA2      		std Y+37,__zero_reg__
 47329 145fc 1CA2      		std Y+36,__zero_reg__
 47330               	.L1927:
 47331               	.LBE12:
4463:lp_solve_5.5/lp_presolve.c ****     }
4464:lp_solve_5.5/lp_presolve.c **** 
4465:lp_solve_5.5/lp_presolve.c ****     /* Clear the non-zero row values ahead of the next row candidate */
4466:lp_solve_5.5/lp_presolve.c ****     if(ib + 1 < n) {
 47332               		.loc 2 4466 0 is_stmt 1
 47333 145fe 8C81      		ldd r24,Y+4
 47334 14600 9D81      		ldd r25,Y+5
 47335 14602 9C01      		movw r18,r24
 47336 14604 2F5F      		subi r18,-1
 47337 14606 3F4F      		sbci r19,-1
 47338 14608 8885      		ldd r24,Y+8
 47339 1460a 9985      		ldd r25,Y+9
 47340 1460c 2817      		cp r18,r24
 47341 1460e 3907      		cpc r19,r25
 47342 14610 04F0      		brlt .+2
 47343 14612 00C0      		rjmp .L1909
4467:lp_solve_5.5/lp_presolve.c ****       ie = mat->col_end[i-1];
 47344               		.loc 2 4467 0
 47345 14614 8C8D      		ldd r24,Y+28
 47346 14616 9D8D      		ldd r25,Y+29
 47347 14618 FC01      		movw r30,r24
 47348 1461a 2289      		ldd r18,Z+18
 47349 1461c 3389      		ldd r19,Z+19
 47350 1461e 8A81      		ldd r24,Y+2
 47351 14620 9B81      		ldd r25,Y+3
 47352 14622 8150      		subi r24,1
 47353 14624 9048      		sbci r25,-128
 47354 14626 880F      		lsl r24
 47355 14628 991F      		rol r25
 47356 1462a 820F      		add r24,r18
 47357 1462c 931F      		adc r25,r19
 47358 1462e FC01      		movw r30,r24
 47359 14630 8081      		ld r24,Z
 47360 14632 9181      		ldd r25,Z+1
 47361 14634 9F83      		std Y+7,r25
 47362 14636 8E83      		std Y+6,r24
4468:lp_solve_5.5/lp_presolve.c ****       ii = mat->col_end[i];
 47363               		.loc 2 4468 0
 47364 14638 8C8D      		ldd r24,Y+28
 47365 1463a 9D8D      		ldd r25,Y+29
 47366 1463c FC01      		movw r30,r24
 47367 1463e 2289      		ldd r18,Z+18
 47368 14640 3389      		ldd r19,Z+19
 47369 14642 8A81      		ldd r24,Y+2
 47370 14644 9B81      		ldd r25,Y+3
 47371 14646 880F      		lsl r24
 47372 14648 991F      		rol r25
 47373 1464a 820F      		add r24,r18
 47374 1464c 931F      		adc r25,r19
 47375 1464e FC01      		movw r30,r24
 47376 14650 8081      		ld r24,Z
 47377 14652 9181      		ldd r25,Z+1
 47378 14654 99A3      		std Y+33,r25
 47379 14656 88A3      		std Y+32,r24
4469:lp_solve_5.5/lp_presolve.c ****       for(; ie < ii; ie++)
 47380               		.loc 2 4469 0
 47381 14658 00C0      		rjmp .L1957
 47382               	.L1958:
4470:lp_solve_5.5/lp_presolve.c ****         colvalues[COL_MAT_ROWNR(ie)] = 0;
 47383               		.loc 2 4470 0 discriminator 2
 47384 1465a 29AD      		ldd r18,Y+57
 47385 1465c 3AAD      		ldd r19,Y+58
 47386 1465e 8C8D      		ldd r24,Y+28
 47387 14660 9D8D      		ldd r25,Y+29
 47388 14662 FC01      		movw r30,r24
 47389 14664 4685      		ldd r20,Z+14
 47390 14666 5785      		ldd r21,Z+15
 47391 14668 8E81      		ldd r24,Y+6
 47392 1466a 9F81      		ldd r25,Y+7
 47393 1466c 880F      		lsl r24
 47394 1466e 991F      		rol r25
 47395 14670 840F      		add r24,r20
 47396 14672 951F      		adc r25,r21
 47397 14674 FC01      		movw r30,r24
 47398 14676 8081      		ld r24,Z
 47399 14678 9181      		ldd r25,Z+1
 47400 1467a 880F      		lsl r24
 47401 1467c 991F      		rol r25
 47402 1467e 880F      		lsl r24
 47403 14680 991F      		rol r25
 47404 14682 820F      		add r24,r18
 47405 14684 931F      		adc r25,r19
 47406 14686 FC01      		movw r30,r24
 47407 14688 1082      		st Z,__zero_reg__
 47408 1468a 1182      		std Z+1,__zero_reg__
 47409 1468c 1282      		std Z+2,__zero_reg__
 47410 1468e 1382      		std Z+3,__zero_reg__
4469:lp_solve_5.5/lp_presolve.c ****       for(; ie < ii; ie++)
 47411               		.loc 2 4469 0 discriminator 2
 47412 14690 8E81      		ldd r24,Y+6
 47413 14692 9F81      		ldd r25,Y+7
 47414 14694 0196      		adiw r24,1
 47415 14696 9F83      		std Y+7,r25
 47416 14698 8E83      		std Y+6,r24
 47417               	.L1957:
4469:lp_solve_5.5/lp_presolve.c ****       for(; ie < ii; ie++)
 47418               		.loc 2 4469 0 is_stmt 0 discriminator 1
 47419 1469a 2E81      		ldd r18,Y+6
 47420 1469c 3F81      		ldd r19,Y+7
 47421 1469e 88A1      		ldd r24,Y+32
 47422 146a0 99A1      		ldd r25,Y+33
 47423 146a2 2817      		cp r18,r24
 47424 146a4 3907      		cpc r19,r25
 47425 146a6 04F0      		brlt .L1958
 47426 146a8 00C0      		rjmp .L1909
 47427               	.L1976:
4312:lp_solve_5.5/lp_presolve.c **** 
 47428               		.loc 2 4312 0 is_stmt 1
 47429 146aa 0000      		nop
 47430               	.L1909:
4307:lp_solve_5.5/lp_presolve.c **** 
 47431               		.loc 2 4307 0 discriminator 2
 47432 146ac 8C81      		ldd r24,Y+4
 47433 146ae 9D81      		ldd r25,Y+5
 47434 146b0 0196      		adiw r24,1
 47435 146b2 9D83      		std Y+5,r25
 47436 146b4 8C83      		std Y+4,r24
 47437               	.L1907:
4307:lp_solve_5.5/lp_presolve.c **** 
 47438               		.loc 2 4307 0 is_stmt 0 discriminator 1
 47439 146b6 2C81      		ldd r18,Y+4
 47440 146b8 3D81      		ldd r19,Y+5
 47441 146ba 8885      		ldd r24,Y+8
 47442 146bc 9985      		ldd r25,Y+9
 47443 146be 2817      		cp r18,r24
 47444 146c0 3907      		cpc r19,r25
 47445 146c2 04F4      		brge .+2
 47446 146c4 00C0      		rjmp .L1959
 47447               	.L1906:
4471:lp_solve_5.5/lp_presolve.c ****     }
4472:lp_solve_5.5/lp_presolve.c ****   }
4473:lp_solve_5.5/lp_presolve.c **** Finish:
4474:lp_solve_5.5/lp_presolve.c ****   FREE(QScand);
 47448               		.loc 2 4474 0 is_stmt 1
 47449 146c6 8E8D      		ldd r24,Y+30
 47450 146c8 9F8D      		ldd r25,Y+31
 47451 146ca 892B      		or r24,r25
 47452 146cc 01F0      		breq .L1960
 47453               		.loc 2 4474 0 is_stmt 0 discriminator 1
 47454 146ce 8E8D      		ldd r24,Y+30
 47455 146d0 9F8D      		ldd r25,Y+31
 47456 146d2 0E94 0000 		call free
 47457 146d6 1F8E      		std Y+31,__zero_reg__
 47458 146d8 1E8E      		std Y+30,__zero_reg__
 47459               	.L1960:
4475:lp_solve_5.5/lp_presolve.c ****   FREE(colvalues);
 47460               		.loc 2 4475 0 is_stmt 1
 47461 146da 89AD      		ldd r24,Y+57
 47462 146dc 9AAD      		ldd r25,Y+58
 47463 146de 892B      		or r24,r25
 47464 146e0 01F0      		breq .L1961
 47465               		.loc 2 4475 0 is_stmt 0 discriminator 1
 47466 146e2 89AD      		ldd r24,Y+57
 47467 146e4 9AAD      		ldd r25,Y+58
 47468 146e6 0E94 0000 		call free
 47469 146ea 1AAE      		std Y+58,__zero_reg__
 47470 146ec 19AE      		std Y+57,__zero_reg__
 47471               	.L1961:
4476:lp_solve_5.5/lp_presolve.c ****   FREE(coldel);
 47472               		.loc 2 4476 0 is_stmt 1
 47473 146ee 8DA9      		ldd r24,Y+53
 47474 146f0 9EA9      		ldd r25,Y+54
 47475 146f2 892B      		or r24,r25
 47476 146f4 01F0      		breq .L1962
 47477               		.loc 2 4476 0 is_stmt 0 discriminator 1
 47478 146f6 8DA9      		ldd r24,Y+53
 47479 146f8 9EA9      		ldd r25,Y+54
 47480 146fa 0E94 0000 		call free
 47481 146fe 1EAA      		std Y+54,__zero_reg__
 47482 14700 1DAA      		std Y+53,__zero_reg__
 47483               	.L1962:
4477:lp_solve_5.5/lp_presolve.c **** 
4478:lp_solve_5.5/lp_presolve.c ****   (*nVarsFixed) += iVarFixed;
 47484               		.loc 2 4478 0 is_stmt 1
 47485 14702 CE01      		movw r24,r28
 47486 14704 CF96      		adiw r24,63
 47487 14706 FC01      		movw r30,r24
 47488 14708 8081      		ld r24,Z
 47489 1470a 9181      		ldd r25,Z+1
 47490 1470c FC01      		movw r30,r24
 47491 1470e 2081      		ld r18,Z
 47492 14710 3181      		ldd r19,Z+1
 47493 14712 8FA9      		ldd r24,Y+55
 47494 14714 98AD      		ldd r25,Y+56
 47495 14716 280F      		add r18,r24
 47496 14718 391F      		adc r19,r25
 47497 1471a CE01      		movw r24,r28
 47498 1471c CF96      		adiw r24,63
 47499 1471e FC01      		movw r30,r24
 47500 14720 8081      		ld r24,Z
 47501 14722 9181      		ldd r25,Z+1
 47502 14724 FC01      		movw r30,r24
 47503 14726 3183      		std Z+1,r19
 47504 14728 2083      		st Z,r18
4479:lp_solve_5.5/lp_presolve.c ****   (*nSum)       += iVarFixed;
 47505               		.loc 2 4479 0
 47506 1472a CE01      		movw r24,r28
 47507 1472c 8F5B      		subi r24,-65
 47508 1472e 9F4F      		sbci r25,-1
 47509 14730 FC01      		movw r30,r24
 47510 14732 8081      		ld r24,Z
 47511 14734 9181      		ldd r25,Z+1
 47512 14736 FC01      		movw r30,r24
 47513 14738 2081      		ld r18,Z
 47514 1473a 3181      		ldd r19,Z+1
 47515 1473c 8FA9      		ldd r24,Y+55
 47516 1473e 98AD      		ldd r25,Y+56
 47517 14740 280F      		add r18,r24
 47518 14742 391F      		adc r19,r25
 47519 14744 CE01      		movw r24,r28
 47520 14746 8F5B      		subi r24,-65
 47521 14748 9F4F      		sbci r25,-1
 47522 1474a FC01      		movw r30,r24
 47523 1474c 8081      		ld r24,Z
 47524 1474e 9181      		ldd r25,Z+1
 47525 14750 FC01      		movw r30,r24
 47526 14752 3183      		std Z+1,r19
 47527 14754 2083      		st Z,r18
4480:lp_solve_5.5/lp_presolve.c **** 
4481:lp_solve_5.5/lp_presolve.c ****   return( status );
 47528               		.loc 2 4481 0
 47529 14756 8889      		ldd r24,Y+16
 47530 14758 9989      		ldd r25,Y+17
 47531               	.L1963:
 47532               	/* epilogue start */
4482:lp_solve_5.5/lp_presolve.c **** }
 47533               		.loc 2 4482 0 discriminator 1
 47534 1475a CE5B      		subi r28,-66
 47535 1475c DF4F      		sbci r29,-1
 47536 1475e 0FB6      		in __tmp_reg__,__SREG__
 47537 14760 F894      		cli
 47538 14762 DEBF      		out __SP_H__,r29
 47539 14764 0FBE      		out __SREG__,__tmp_reg__
 47540 14766 CDBF      		out __SP_L__,r28
 47541 14768 DF91      		pop r29
 47542 1476a CF91      		pop r28
 47543 1476c 1F91      		pop r17
 47544 1476e 0F91      		pop r16
 47545 14770 FF90      		pop r15
 47546 14772 EF90      		pop r14
 47547 14774 DF90      		pop r13
 47548 14776 CF90      		pop r12
 47549 14778 0895      		ret
 47550               		.cfi_endproc
 47551               	.LFE85:
 47553               		.section	.rodata
 47554               	.LC55:
 47555 091e 7072 6573 		.string	"presolve_sparser: Infeasibility of relatively equal constraints %d and %d\n"
 47555      6F6C 7665 
 47555      5F73 7061 
 47555      7273 6572 
 47555      3A20 496E 
 47556               	.LC56:
 47557 0969 7072 6573 		.string	"presolve_sparser: Infeasibility of relatively equal RHS values for %d and %d\n"
 47557      6F6C 7665 
 47557      5F73 7061 
 47557      7273 6572 
 47557      3A20 496E 
 47558               		.text
 47559               	.global	presolve_makesparser
 47561               	presolve_makesparser:
 47562               	.LFB86:
4483:lp_solve_5.5/lp_presolve.c **** 
4484:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_makesparser(presolverec *psdata, int *nCoeffChanged, int *nConRemove, int *nVar
4485:lp_solve_5.5/lp_presolve.c **** {
 47563               		.loc 2 4485 0
 47564               		.cfi_startproc
 47565 1477a CF92      		push r12
 47566               	.LCFI530:
 47567               		.cfi_def_cfa_offset 3
 47568               		.cfi_offset 12, -2
 47569 1477c DF92      		push r13
 47570               	.LCFI531:
 47571               		.cfi_def_cfa_offset 4
 47572               		.cfi_offset 13, -3
 47573 1477e EF92      		push r14
 47574               	.LCFI532:
 47575               		.cfi_def_cfa_offset 5
 47576               		.cfi_offset 14, -4
 47577 14780 FF92      		push r15
 47578               	.LCFI533:
 47579               		.cfi_def_cfa_offset 6
 47580               		.cfi_offset 15, -5
 47581 14782 0F93      		push r16
 47582               	.LCFI534:
 47583               		.cfi_def_cfa_offset 7
 47584               		.cfi_offset 16, -6
 47585 14784 1F93      		push r17
 47586               	.LCFI535:
 47587               		.cfi_def_cfa_offset 8
 47588               		.cfi_offset 17, -7
 47589 14786 CF93      		push r28
 47590               	.LCFI536:
 47591               		.cfi_def_cfa_offset 9
 47592               		.cfi_offset 28, -8
 47593 14788 DF93      		push r29
 47594               	.LCFI537:
 47595               		.cfi_def_cfa_offset 10
 47596               		.cfi_offset 29, -9
 47597 1478a CDB7      		in r28,__SP_L__
 47598 1478c DEB7      		in r29,__SP_H__
 47599               	.LCFI538:
 47600               		.cfi_def_cfa_register 28
 47601 1478e C155      		subi r28,81
 47602 14790 D109      		sbc r29,__zero_reg__
 47603               	.LCFI539:
 47604               		.cfi_def_cfa_offset 91
 47605 14792 0FB6      		in __tmp_reg__,__SREG__
 47606 14794 F894      		cli
 47607 14796 DEBF      		out __SP_H__,r29
 47608 14798 0FBE      		out __SREG__,__tmp_reg__
 47609 1479a CDBF      		out __SP_L__,r28
 47610               	/* prologue: function */
 47611               	/* frame size = 81 */
 47612               	/* stack size = 89 */
 47613               	.L__stack_usage = 89
 47614 1479c FE01      		movw r30,r28
 47615 1479e EA5B      		subi r30,-70
 47616 147a0 FF4F      		sbci r31,-1
 47617 147a2 9183      		std Z+1,r25
 47618 147a4 8083      		st Z,r24
 47619 147a6 CE01      		movw r24,r28
 47620 147a8 885B      		subi r24,-72
 47621 147aa 9F4F      		sbci r25,-1
 47622 147ac FC01      		movw r30,r24
 47623 147ae 7183      		std Z+1,r23
 47624 147b0 6083      		st Z,r22
 47625 147b2 CE01      		movw r24,r28
 47626 147b4 865B      		subi r24,-74
 47627 147b6 9F4F      		sbci r25,-1
 47628 147b8 FC01      		movw r30,r24
 47629 147ba 5183      		std Z+1,r21
 47630 147bc 4083      		st Z,r20
 47631 147be CE01      		movw r24,r28
 47632 147c0 845B      		subi r24,-76
 47633 147c2 9F4F      		sbci r25,-1
 47634 147c4 FC01      		movw r30,r24
 47635 147c6 3183      		std Z+1,r19
 47636 147c8 2083      		st Z,r18
 47637 147ca CE01      		movw r24,r28
 47638 147cc 825B      		subi r24,-78
 47639 147ce 9F4F      		sbci r25,-1
 47640 147d0 FC01      		movw r30,r24
 47641 147d2 1183      		std Z+1,r17
 47642 147d4 0083      		st Z,r16
4486:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 47643               		.loc 2 4486 0
 47644 147d6 CE01      		movw r24,r28
 47645 147d8 8A5B      		subi r24,-70
 47646 147da 9F4F      		sbci r25,-1
 47647 147dc FC01      		movw r30,r24
 47648 147de 8081      		ld r24,Z
 47649 147e0 9181      		ldd r25,Z+1
 47650 147e2 FC01      		movw r30,r24
 47651 147e4 8289      		ldd r24,Z+18
 47652 147e6 9389      		ldd r25,Z+19
 47653 147e8 9E8F      		std Y+30,r25
 47654 147ea 8D8F      		std Y+29,r24
4487:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 47655               		.loc 2 4487 0
 47656 147ec 8D8D      		ldd r24,Y+29
 47657 147ee 9E8D      		ldd r25,Y+30
 47658 147f0 8A54      		subi r24,74
 47659 147f2 9D4F      		sbci r25,-3
 47660 147f4 FC01      		movw r30,r24
 47661 147f6 8081      		ld r24,Z
 47662 147f8 9181      		ldd r25,Z+1
 47663 147fa 98A3      		std Y+32,r25
 47664 147fc 8F8F      		std Y+31,r24
4488:lp_solve_5.5/lp_presolve.c ****   MYBOOL   chsign;
4489:lp_solve_5.5/lp_presolve.c ****   int      i, ii, ib, ix, k, n, jb, je, jl, jjb, jje, jjl, jx, jjx, item, itemEQ,
4490:lp_solve_5.5/lp_presolve.c ****            *nzidx = NULL, status = RUNNING, iObjChanged = 0, iCoeffChanged = 0, iConRemove = 0;
 47665               		.loc 2 4490 0
 47666 147fe CE01      		movw r24,r28
 47667 14800 8E5B      		subi r24,-66
 47668 14802 9F4F      		sbci r25,-1
 47669 14804 FC01      		movw r30,r24
 47670 14806 1182      		std Z+1,__zero_reg__
 47671 14808 1082      		st Z,__zero_reg__
 47672 1480a 88E0      		ldi r24,lo8(8)
 47673 1480c 90E0      		ldi r25,0
 47674 1480e 9E87      		std Y+14,r25
 47675 14810 8D87      		std Y+13,r24
 47676 14812 188A      		std Y+16,__zero_reg__
 47677 14814 1F86      		std Y+15,__zero_reg__
 47678 14816 1A8A      		std Y+18,__zero_reg__
 47679 14818 198A      		std Y+17,__zero_reg__
 47680 1481a 1C8A      		std Y+20,__zero_reg__
 47681 1481c 1B8A      		std Y+19,__zero_reg__
4491:lp_solve_5.5/lp_presolve.c ****   REAL     test, ratio, value, valueEQ, *valptr;
4492:lp_solve_5.5/lp_presolve.c ****   LLrec    *EQlist = NULL;
 47682               		.loc 2 4492 0
 47683 1481e CE01      		movw r24,r28
 47684 14820 8C5B      		subi r24,-68
 47685 14822 9F4F      		sbci r25,-1
 47686 14824 FC01      		movw r30,r24
 47687 14826 1182      		std Z+1,__zero_reg__
 47688 14828 1082      		st Z,__zero_reg__
4493:lp_solve_5.5/lp_presolve.c ****   UNIONTYPE QSORTrec *QS = (UNIONTYPE QSORTrec *) calloc(lp->rows, sizeof(*QS));
 47689               		.loc 2 4493 0
 47690 1482a 8D8D      		ldd r24,Y+29
 47691 1482c 9E8D      		ldd r25,Y+30
 47692 1482e 8651      		subi r24,22
 47693 14830 9E4F      		sbci r25,-2
 47694 14832 FC01      		movw r30,r24
 47695 14834 8081      		ld r24,Z
 47696 14836 9181      		ldd r25,Z+1
 47697 14838 68E0      		ldi r22,lo8(8)
 47698 1483a 70E0      		ldi r23,0
 47699 1483c 0E94 0000 		call calloc
 47700 14840 9AA3      		std Y+34,r25
 47701 14842 89A3      		std Y+33,r24
4494:lp_solve_5.5/lp_presolve.c **** 
4495:lp_solve_5.5/lp_presolve.c ****   /* Check if we were able to obtain working memory */
4496:lp_solve_5.5/lp_presolve.c ****   if((QS == NULL) || (psdata->rows->varmap->count == 0) || (psdata->EQmap->count == 0))
 47702               		.loc 2 4496 0
 47703 14844 89A1      		ldd r24,Y+33
 47704 14846 9AA1      		ldd r25,Y+34
 47705 14848 892B      		or r24,r25
 47706 1484a 01F0      		breq .L1983
 47707               		.loc 2 4496 0 is_stmt 0 discriminator 1
 47708 1484c CE01      		movw r24,r28
 47709 1484e 8A5B      		subi r24,-70
 47710 14850 9F4F      		sbci r25,-1
 47711 14852 FC01      		movw r30,r24
 47712 14854 8081      		ld r24,Z
 47713 14856 9181      		ldd r25,Z+1
 47714 14858 FC01      		movw r30,r24
 47715 1485a 8081      		ld r24,Z
 47716 1485c 9181      		ldd r25,Z+1
 47717 1485e FC01      		movw r30,r24
 47718 14860 8081      		ld r24,Z
 47719 14862 9181      		ldd r25,Z+1
 47720 14864 FC01      		movw r30,r24
 47721 14866 8281      		ldd r24,Z+2
 47722 14868 9381      		ldd r25,Z+3
 47723 1486a 892B      		or r24,r25
 47724 1486c 01F0      		breq .L1983
 47725               		.loc 2 4496 0 discriminator 2
 47726 1486e CE01      		movw r24,r28
 47727 14870 8A5B      		subi r24,-70
 47728 14872 9F4F      		sbci r25,-1
 47729 14874 FC01      		movw r30,r24
 47730 14876 8081      		ld r24,Z
 47731 14878 9181      		ldd r25,Z+1
 47732 1487a FC01      		movw r30,r24
 47733 1487c 8481      		ldd r24,Z+4
 47734 1487e 9581      		ldd r25,Z+5
 47735 14880 FC01      		movw r30,r24
 47736 14882 8281      		ldd r24,Z+2
 47737 14884 9381      		ldd r25,Z+3
 47738 14886 892B      		or r24,r25
 47739 14888 01F4      		brne .L1984
 47740               	.L1983:
4497:lp_solve_5.5/lp_presolve.c ****     return( status);
 47741               		.loc 2 4497 0 is_stmt 1
 47742 1488a 8D85      		ldd r24,Y+13
 47743 1488c 9E85      		ldd r25,Y+14
 47744 1488e 0C94 0000 		jmp .L2065
 47745               	.L1984:
4498:lp_solve_5.5/lp_presolve.c **** 
4499:lp_solve_5.5/lp_presolve.c ****   /* Sort rows in 1) increasing order of start index, 2) decreasing length, and
4500:lp_solve_5.5/lp_presolve.c ****      3) non-equalities (i.e. equalities last) */
4501:lp_solve_5.5/lp_presolve.c ****   n = 0;
 47746               		.loc 2 4501 0
 47747 14892 1A86      		std Y+10,__zero_reg__
 47748 14894 1986      		std Y+9,__zero_reg__
4502:lp_solve_5.5/lp_presolve.c ****   for(i = firstActiveLink(psdata->rows->varmap); i != 0; i = nextActiveLink(psdata->rows->varmap, i
 47749               		.loc 2 4502 0
 47750 14896 CE01      		movw r24,r28
 47751 14898 8A5B      		subi r24,-70
 47752 1489a 9F4F      		sbci r25,-1
 47753 1489c FC01      		movw r30,r24
 47754 1489e 8081      		ld r24,Z
 47755 148a0 9181      		ldd r25,Z+1
 47756 148a2 FC01      		movw r30,r24
 47757 148a4 8081      		ld r24,Z
 47758 148a6 9181      		ldd r25,Z+1
 47759 148a8 FC01      		movw r30,r24
 47760 148aa 8081      		ld r24,Z
 47761 148ac 9181      		ldd r25,Z+1
 47762 148ae 0E94 0000 		call firstActiveLink
 47763 148b2 9A83      		std Y+2,r25
 47764 148b4 8983      		std Y+1,r24
 47765 148b6 00C0      		rjmp .L1986
 47766               	.L1990:
4503:lp_solve_5.5/lp_presolve.c ****     k = presolve_rowlength(psdata, i);
 47767               		.loc 2 4503 0
 47768 148b8 2981      		ldd r18,Y+1
 47769 148ba 3A81      		ldd r19,Y+2
 47770 148bc CE01      		movw r24,r28
 47771 148be 8A5B      		subi r24,-70
 47772 148c0 9F4F      		sbci r25,-1
 47773 148c2 FC01      		movw r30,r24
 47774 148c4 8081      		ld r24,Z
 47775 148c6 9181      		ldd r25,Z+1
 47776 148c8 B901      		movw r22,r18
 47777 148ca 0E94 0000 		call presolve_rowlength
 47778 148ce 9887      		std Y+8,r25
 47779 148d0 8F83      		std Y+7,r24
4504:lp_solve_5.5/lp_presolve.c ****     if(k >= 2) {
 47780               		.loc 2 4504 0
 47781 148d2 8F81      		ldd r24,Y+7
 47782 148d4 9885      		ldd r25,Y+8
 47783 148d6 0297      		sbiw r24,2
 47784 148d8 04F4      		brge .+2
 47785 148da 00C0      		rjmp .L1987
4505:lp_solve_5.5/lp_presolve.c ****       item = 0;
 47786               		.loc 2 4505 0
 47787 148dc 1FAE      		std Y+63,__zero_reg__
 47788 148de 1EAE      		std Y+62,__zero_reg__
4506:lp_solve_5.5/lp_presolve.c ****       ii = presolve_nextcol(psdata, i, &item);
 47789               		.loc 2 4506 0
 47790 148e0 AE01      		movw r20,r28
 47791 148e2 425C      		subi r20,-62
 47792 148e4 5F4F      		sbci r21,-1
 47793 148e6 2981      		ldd r18,Y+1
 47794 148e8 3A81      		ldd r19,Y+2
 47795 148ea CE01      		movw r24,r28
 47796 148ec 8A5B      		subi r24,-70
 47797 148ee 9F4F      		sbci r25,-1
 47798 148f0 FC01      		movw r30,r24
 47799 148f2 8081      		ld r24,Z
 47800 148f4 9181      		ldd r25,Z+1
 47801 148f6 B901      		movw r22,r18
 47802 148f8 0E94 0000 		call presolve_nextcol
 47803 148fc 9CA3      		std Y+36,r25
 47804 148fe 8BA3      		std Y+35,r24
4507:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
4508:lp_solve_5.5/lp_presolve.c ****       if((ii < 0) || (item == 0)) {
4509:lp_solve_5.5/lp_presolve.c ****         report(lp, SEVERE, "presolve_makesparser: Unexpected zero-length row %d\n", i);
4510:lp_solve_5.5/lp_presolve.c ****         continue;
4511:lp_solve_5.5/lp_presolve.c ****       }
4512:lp_solve_5.5/lp_presolve.c **** #endif
4513:lp_solve_5.5/lp_presolve.c ****       QS[n].int4.intval  = my_chsign(is_constr_type(lp, i, EQ), i);
 47805               		.loc 2 4513 0
 47806 14900 8985      		ldd r24,Y+9
 47807 14902 9A85      		ldd r25,Y+10
 47808 14904 880F      		lsl r24
 47809 14906 991F      		rol r25
 47810 14908 880F      		lsl r24
 47811 1490a 991F      		rol r25
 47812 1490c 880F      		lsl r24
 47813 1490e 991F      		rol r25
 47814 14910 29A1      		ldd r18,Y+33
 47815 14912 3AA1      		ldd r19,Y+34
 47816 14914 8901      		movw r16,r18
 47817 14916 080F      		add r16,r24
 47818 14918 191F      		adc r17,r25
 47819 1491a 2981      		ldd r18,Y+1
 47820 1491c 3A81      		ldd r19,Y+2
 47821 1491e 8D8D      		ldd r24,Y+29
 47822 14920 9E8D      		ldd r25,Y+30
 47823 14922 43E0      		ldi r20,lo8(3)
 47824 14924 50E0      		ldi r21,0
 47825 14926 B901      		movw r22,r18
 47826 14928 0E94 0000 		call is_constr_type
 47827 1492c 8823      		tst r24
 47828 1492e 01F0      		breq .L1988
 47829               		.loc 2 4513 0 is_stmt 0 discriminator 1
 47830 14930 8981      		ldd r24,Y+1
 47831 14932 9A81      		ldd r25,Y+2
 47832 14934 892B      		or r24,r25
 47833 14936 01F0      		breq .L1988
 47834               		.loc 2 4513 0 discriminator 3
 47835 14938 8981      		ldd r24,Y+1
 47836 1493a 9A81      		ldd r25,Y+2
 47837 1493c 9195      		neg r25
 47838 1493e 8195      		neg r24
 47839 14940 9109      		sbc r25,__zero_reg__
 47840 14942 00C0      		rjmp .L1989
 47841               	.L1988:
 47842               		.loc 2 4513 0 discriminator 4
 47843 14944 8981      		ldd r24,Y+1
 47844 14946 9A81      		ldd r25,Y+2
 47845               	.L1989:
 47846               		.loc 2 4513 0 discriminator 6
 47847 14948 F801      		movw r30,r16
 47848 1494a 9183      		std Z+1,r25
 47849 1494c 8083      		st Z,r24
4514:lp_solve_5.5/lp_presolve.c ****       QS[n].int4.intpar1 = ROW_MAT_COLNR(ii);
 47850               		.loc 2 4514 0 is_stmt 1 discriminator 6
 47851 1494e 8985      		ldd r24,Y+9
 47852 14950 9A85      		ldd r25,Y+10
 47853 14952 880F      		lsl r24
 47854 14954 991F      		rol r25
 47855 14956 880F      		lsl r24
 47856 14958 991F      		rol r25
 47857 1495a 880F      		lsl r24
 47858 1495c 991F      		rol r25
 47859 1495e 29A1      		ldd r18,Y+33
 47860 14960 3AA1      		ldd r19,Y+34
 47861 14962 820F      		add r24,r18
 47862 14964 931F      		adc r25,r19
 47863 14966 2F8D      		ldd r18,Y+31
 47864 14968 38A1      		ldd r19,Y+32
 47865 1496a F901      		movw r30,r18
 47866 1496c 4485      		ldd r20,Z+12
 47867 1496e 5585      		ldd r21,Z+13
 47868 14970 2F8D      		ldd r18,Y+31
 47869 14972 38A1      		ldd r19,Y+32
 47870 14974 F901      		movw r30,r18
 47871 14976 6689      		ldd r22,Z+22
 47872 14978 7789      		ldd r23,Z+23
 47873 1497a 2BA1      		ldd r18,Y+35
 47874 1497c 3CA1      		ldd r19,Y+36
 47875 1497e 220F      		lsl r18
 47876 14980 331F      		rol r19
 47877 14982 260F      		add r18,r22
 47878 14984 371F      		adc r19,r23
 47879 14986 F901      		movw r30,r18
 47880 14988 2081      		ld r18,Z
 47881 1498a 3181      		ldd r19,Z+1
 47882 1498c 220F      		lsl r18
 47883 1498e 331F      		rol r19
 47884 14990 240F      		add r18,r20
 47885 14992 351F      		adc r19,r21
 47886 14994 F901      		movw r30,r18
 47887 14996 2081      		ld r18,Z
 47888 14998 3181      		ldd r19,Z+1
 47889 1499a FC01      		movw r30,r24
 47890 1499c 3383      		std Z+3,r19
 47891 1499e 2283      		std Z+2,r18
4515:lp_solve_5.5/lp_presolve.c ****       QS[n].int4.intpar2 = k;
 47892               		.loc 2 4515 0 discriminator 6
 47893 149a0 8985      		ldd r24,Y+9
 47894 149a2 9A85      		ldd r25,Y+10
 47895 149a4 880F      		lsl r24
 47896 149a6 991F      		rol r25
 47897 149a8 880F      		lsl r24
 47898 149aa 991F      		rol r25
 47899 149ac 880F      		lsl r24
 47900 149ae 991F      		rol r25
 47901 149b0 29A1      		ldd r18,Y+33
 47902 149b2 3AA1      		ldd r19,Y+34
 47903 149b4 820F      		add r24,r18
 47904 149b6 931F      		adc r25,r19
 47905 149b8 2F81      		ldd r18,Y+7
 47906 149ba 3885      		ldd r19,Y+8
 47907 149bc FC01      		movw r30,r24
 47908 149be 3583      		std Z+5,r19
 47909 149c0 2483      		std Z+4,r18
4516:lp_solve_5.5/lp_presolve.c ****       n++;
 47910               		.loc 2 4516 0 discriminator 6
 47911 149c2 8985      		ldd r24,Y+9
 47912 149c4 9A85      		ldd r25,Y+10
 47913 149c6 0196      		adiw r24,1
 47914 149c8 9A87      		std Y+10,r25
 47915 149ca 8987      		std Y+9,r24
 47916               	.L1987:
4502:lp_solve_5.5/lp_presolve.c ****     k = presolve_rowlength(psdata, i);
 47917               		.loc 2 4502 0 discriminator 2
 47918 149cc CE01      		movw r24,r28
 47919 149ce 8A5B      		subi r24,-70
 47920 149d0 9F4F      		sbci r25,-1
 47921 149d2 FC01      		movw r30,r24
 47922 149d4 8081      		ld r24,Z
 47923 149d6 9181      		ldd r25,Z+1
 47924 149d8 FC01      		movw r30,r24
 47925 149da 8081      		ld r24,Z
 47926 149dc 9181      		ldd r25,Z+1
 47927 149de FC01      		movw r30,r24
 47928 149e0 8081      		ld r24,Z
 47929 149e2 9181      		ldd r25,Z+1
 47930 149e4 2981      		ldd r18,Y+1
 47931 149e6 3A81      		ldd r19,Y+2
 47932 149e8 B901      		movw r22,r18
 47933 149ea 0E94 0000 		call nextActiveLink
 47934 149ee 9A83      		std Y+2,r25
 47935 149f0 8983      		std Y+1,r24
 47936               	.L1986:
4502:lp_solve_5.5/lp_presolve.c ****     k = presolve_rowlength(psdata, i);
 47937               		.loc 2 4502 0 is_stmt 0 discriminator 1
 47938 149f2 8981      		ldd r24,Y+1
 47939 149f4 9A81      		ldd r25,Y+2
 47940 149f6 892B      		or r24,r25
 47941 149f8 01F0      		breq .+2
 47942 149fa 00C0      		rjmp .L1990
4517:lp_solve_5.5/lp_presolve.c ****     }
4518:lp_solve_5.5/lp_presolve.c ****   }
4519:lp_solve_5.5/lp_presolve.c ****   if(n <= 1) {
 47943               		.loc 2 4519 0 is_stmt 1
 47944 149fc 8985      		ldd r24,Y+9
 47945 149fe 9A85      		ldd r25,Y+10
 47946 14a00 0297      		sbiw r24,2
 47947 14a02 04F4      		brge .L1991
4520:lp_solve_5.5/lp_presolve.c ****     FREE(QS);
 47948               		.loc 2 4520 0
 47949 14a04 89A1      		ldd r24,Y+33
 47950 14a06 9AA1      		ldd r25,Y+34
 47951 14a08 892B      		or r24,r25
 47952 14a0a 01F0      		breq .L1992
 47953               		.loc 2 4520 0 is_stmt 0 discriminator 1
 47954 14a0c 89A1      		ldd r24,Y+33
 47955 14a0e 9AA1      		ldd r25,Y+34
 47956 14a10 0E94 0000 		call free
 47957 14a14 1AA2      		std Y+34,__zero_reg__
 47958 14a16 19A2      		std Y+33,__zero_reg__
 47959               	.L1992:
4521:lp_solve_5.5/lp_presolve.c ****     return( status );
 47960               		.loc 2 4521 0 is_stmt 1
 47961 14a18 8D85      		ldd r24,Y+13
 47962 14a1a 9E85      		ldd r25,Y+14
 47963 14a1c 0C94 0000 		jmp .L2065
 47964               	.L1991:
4522:lp_solve_5.5/lp_presolve.c ****   }
4523:lp_solve_5.5/lp_presolve.c ****   QS_execute(QS, n, (findCompare_func *) compSparsity, NULL);
 47965               		.loc 2 4523 0
 47966 14a20 6985      		ldd r22,Y+9
 47967 14a22 7A85      		ldd r23,Y+10
 47968 14a24 89A1      		ldd r24,Y+33
 47969 14a26 9AA1      		ldd r25,Y+34
 47970 14a28 20E0      		ldi r18,0
 47971 14a2a 30E0      		ldi r19,0
 47972 14a2c 40E0      		ldi r20,lo8(gs(compSparsity))
 47973 14a2e 50E0      		ldi r21,hi8(gs(compSparsity))
 47974 14a30 0E94 0000 		call QS_execute
4524:lp_solve_5.5/lp_presolve.c **** 
4525:lp_solve_5.5/lp_presolve.c ****   /* Create associated sorted map of indeces to equality constraints;
4526:lp_solve_5.5/lp_presolve.c ****      note that we need to have a unit offset for compatibility. */
4527:lp_solve_5.5/lp_presolve.c ****   allocINT(lp, &nzidx, lp->columns + 1, FALSE);
 47975               		.loc 2 4527 0
 47976 14a34 8D8D      		ldd r24,Y+29
 47977 14a36 9E8D      		ldd r25,Y+30
 47978 14a38 8451      		subi r24,20
 47979 14a3a 9E4F      		sbci r25,-2
 47980 14a3c FC01      		movw r30,r24
 47981 14a3e 8081      		ld r24,Z
 47982 14a40 9181      		ldd r25,Z+1
 47983 14a42 AC01      		movw r20,r24
 47984 14a44 4F5F      		subi r20,-1
 47985 14a46 5F4F      		sbci r21,-1
 47986 14a48 BE01      		movw r22,r28
 47987 14a4a 6E5B      		subi r22,-66
 47988 14a4c 7F4F      		sbci r23,-1
 47989 14a4e 8D8D      		ldd r24,Y+29
 47990 14a50 9E8D      		ldd r25,Y+30
 47991 14a52 20E0      		ldi r18,0
 47992 14a54 0E94 0000 		call allocINT
4528:lp_solve_5.5/lp_presolve.c ****   createLink(lp->rows, &EQlist, NULL);
 47993               		.loc 2 4528 0
 47994 14a58 8D8D      		ldd r24,Y+29
 47995 14a5a 9E8D      		ldd r25,Y+30
 47996 14a5c 8651      		subi r24,22
 47997 14a5e 9E4F      		sbci r25,-2
 47998 14a60 FC01      		movw r30,r24
 47999 14a62 8081      		ld r24,Z
 48000 14a64 9181      		ldd r25,Z+1
 48001 14a66 9E01      		movw r18,r28
 48002 14a68 2C5B      		subi r18,-68
 48003 14a6a 3F4F      		sbci r19,-1
 48004 14a6c 40E0      		ldi r20,0
 48005 14a6e 50E0      		ldi r21,0
 48006 14a70 B901      		movw r22,r18
 48007 14a72 0E94 0000 		call createLink
4529:lp_solve_5.5/lp_presolve.c ****   for(ib = 0; ib < n; ib++) {
 48008               		.loc 2 4529 0
 48009 14a76 1C82      		std Y+4,__zero_reg__
 48010 14a78 1B82      		std Y+3,__zero_reg__
 48011 14a7a 00C0      		rjmp .L1993
 48012               	.L1995:
4530:lp_solve_5.5/lp_presolve.c ****     i = QS[ib].int4.intval;
 48013               		.loc 2 4530 0
 48014 14a7c 8B81      		ldd r24,Y+3
 48015 14a7e 9C81      		ldd r25,Y+4
 48016 14a80 880F      		lsl r24
 48017 14a82 991F      		rol r25
 48018 14a84 880F      		lsl r24
 48019 14a86 991F      		rol r25
 48020 14a88 880F      		lsl r24
 48021 14a8a 991F      		rol r25
 48022 14a8c 29A1      		ldd r18,Y+33
 48023 14a8e 3AA1      		ldd r19,Y+34
 48024 14a90 820F      		add r24,r18
 48025 14a92 931F      		adc r25,r19
 48026 14a94 FC01      		movw r30,r24
 48027 14a96 8081      		ld r24,Z
 48028 14a98 9181      		ldd r25,Z+1
 48029 14a9a 9A83      		std Y+2,r25
 48030 14a9c 8983      		std Y+1,r24
4531:lp_solve_5.5/lp_presolve.c ****     if(i < 0)
 48031               		.loc 2 4531 0
 48032 14a9e 8981      		ldd r24,Y+1
 48033 14aa0 9A81      		ldd r25,Y+2
 48034 14aa2 9923      		tst r25
 48035 14aa4 04F4      		brge .L1994
4532:lp_solve_5.5/lp_presolve.c ****       appendLink(EQlist, ib + 1);
 48036               		.loc 2 4532 0
 48037 14aa6 8B81      		ldd r24,Y+3
 48038 14aa8 9C81      		ldd r25,Y+4
 48039 14aaa 9C01      		movw r18,r24
 48040 14aac 2F5F      		subi r18,-1
 48041 14aae 3F4F      		sbci r19,-1
 48042 14ab0 CE01      		movw r24,r28
 48043 14ab2 8C5B      		subi r24,-68
 48044 14ab4 9F4F      		sbci r25,-1
 48045 14ab6 FC01      		movw r30,r24
 48046 14ab8 8081      		ld r24,Z
 48047 14aba 9181      		ldd r25,Z+1
 48048 14abc B901      		movw r22,r18
 48049 14abe 0E94 0000 		call appendLink
 48050               	.L1994:
4529:lp_solve_5.5/lp_presolve.c ****     i = QS[ib].int4.intval;
 48051               		.loc 2 4529 0 discriminator 2
 48052 14ac2 8B81      		ldd r24,Y+3
 48053 14ac4 9C81      		ldd r25,Y+4
 48054 14ac6 0196      		adiw r24,1
 48055 14ac8 9C83      		std Y+4,r25
 48056 14aca 8B83      		std Y+3,r24
 48057               	.L1993:
4529:lp_solve_5.5/lp_presolve.c ****     i = QS[ib].int4.intval;
 48058               		.loc 2 4529 0 is_stmt 0 discriminator 1
 48059 14acc 2B81      		ldd r18,Y+3
 48060 14ace 3C81      		ldd r19,Y+4
 48061 14ad0 8985      		ldd r24,Y+9
 48062 14ad2 9A85      		ldd r25,Y+10
 48063 14ad4 2817      		cp r18,r24
 48064 14ad6 3907      		cpc r19,r25
 48065 14ad8 04F0      		brlt .L1995
4533:lp_solve_5.5/lp_presolve.c ****   }
4534:lp_solve_5.5/lp_presolve.c **** 
4535:lp_solve_5.5/lp_presolve.c ****   /* Loop over all equality masks */
4536:lp_solve_5.5/lp_presolve.c ****   for(ix = firstActiveLink(EQlist); ix != 0; ) {
 48066               		.loc 2 4536 0 is_stmt 1
 48067 14ada CE01      		movw r24,r28
 48068 14adc 8C5B      		subi r24,-68
 48069 14ade 9F4F      		sbci r25,-1
 48070 14ae0 FC01      		movw r30,r24
 48071 14ae2 8081      		ld r24,Z
 48072 14ae4 9181      		ldd r25,Z+1
 48073 14ae6 0E94 0000 		call firstActiveLink
 48074 14aea 9E83      		std Y+6,r25
 48075 14aec 8D83      		std Y+5,r24
 48076 14aee 0C94 0000 		jmp .L1996
 48077               	.L2061:
4537:lp_solve_5.5/lp_presolve.c **** 
4538:lp_solve_5.5/lp_presolve.c ****     /* Get row starting and ending positions of the mask */
4539:lp_solve_5.5/lp_presolve.c ****     ii = abs(QS[ix-1].int4.intval);
 48078               		.loc 2 4539 0
 48079 14af2 8D81      		ldd r24,Y+5
 48080 14af4 9E81      		ldd r25,Y+6
 48081 14af6 8150      		subi r24,1
 48082 14af8 904E      		sbci r25,-32
 48083 14afa 880F      		lsl r24
 48084 14afc 991F      		rol r25
 48085 14afe 880F      		lsl r24
 48086 14b00 991F      		rol r25
 48087 14b02 880F      		lsl r24
 48088 14b04 991F      		rol r25
 48089 14b06 29A1      		ldd r18,Y+33
 48090 14b08 3AA1      		ldd r19,Y+34
 48091 14b0a 820F      		add r24,r18
 48092 14b0c 931F      		adc r25,r19
 48093 14b0e FC01      		movw r30,r24
 48094 14b10 8081      		ld r24,Z
 48095 14b12 9181      		ldd r25,Z+1
 48096 14b14 9923      		tst r25
 48097 14b16 04F4      		brge .L1997
 48098 14b18 9195      		neg r25
 48099 14b1a 8195      		neg r24
 48100 14b1c 9109      		sbc r25,__zero_reg__
 48101               	.L1997:
 48102 14b1e 9CA3      		std Y+36,r25
 48103 14b20 8BA3      		std Y+35,r24
4540:lp_solve_5.5/lp_presolve.c ****     jjb = QS[ix-1].int4.intpar1;
 48104               		.loc 2 4540 0
 48105 14b22 8D81      		ldd r24,Y+5
 48106 14b24 9E81      		ldd r25,Y+6
 48107 14b26 8150      		subi r24,1
 48108 14b28 904E      		sbci r25,-32
 48109 14b2a 880F      		lsl r24
 48110 14b2c 991F      		rol r25
 48111 14b2e 880F      		lsl r24
 48112 14b30 991F      		rol r25
 48113 14b32 880F      		lsl r24
 48114 14b34 991F      		rol r25
 48115 14b36 29A1      		ldd r18,Y+33
 48116 14b38 3AA1      		ldd r19,Y+34
 48117 14b3a 820F      		add r24,r18
 48118 14b3c 931F      		adc r25,r19
 48119 14b3e FC01      		movw r30,r24
 48120 14b40 8281      		ldd r24,Z+2
 48121 14b42 9381      		ldd r25,Z+3
 48122 14b44 9EA3      		std Y+38,r25
 48123 14b46 8DA3      		std Y+37,r24
4541:lp_solve_5.5/lp_presolve.c ****     jje = presolve_lastcol(psdata, ii);
 48124               		.loc 2 4541 0
 48125 14b48 2BA1      		ldd r18,Y+35
 48126 14b4a 3CA1      		ldd r19,Y+36
 48127 14b4c CE01      		movw r24,r28
 48128 14b4e 8A5B      		subi r24,-70
 48129 14b50 9F4F      		sbci r25,-1
 48130 14b52 FC01      		movw r30,r24
 48131 14b54 8081      		ld r24,Z
 48132 14b56 9181      		ldd r25,Z+1
 48133 14b58 B901      		movw r22,r18
 48134 14b5a 0E94 0000 		call presolve_lastcol
 48135 14b5e 98A7      		std Y+40,r25
 48136 14b60 8FA3      		std Y+39,r24
4542:lp_solve_5.5/lp_presolve.c ****     jje = ROW_MAT_COLNR(jje);
 48137               		.loc 2 4542 0
 48138 14b62 8F8D      		ldd r24,Y+31
 48139 14b64 98A1      		ldd r25,Y+32
 48140 14b66 FC01      		movw r30,r24
 48141 14b68 2485      		ldd r18,Z+12
 48142 14b6a 3585      		ldd r19,Z+13
 48143 14b6c 8F8D      		ldd r24,Y+31
 48144 14b6e 98A1      		ldd r25,Y+32
 48145 14b70 FC01      		movw r30,r24
 48146 14b72 4689      		ldd r20,Z+22
 48147 14b74 5789      		ldd r21,Z+23
 48148 14b76 8FA1      		ldd r24,Y+39
 48149 14b78 98A5      		ldd r25,Y+40
 48150 14b7a 880F      		lsl r24
 48151 14b7c 991F      		rol r25
 48152 14b7e 840F      		add r24,r20
 48153 14b80 951F      		adc r25,r21
 48154 14b82 FC01      		movw r30,r24
 48155 14b84 8081      		ld r24,Z
 48156 14b86 9181      		ldd r25,Z+1
 48157 14b88 880F      		lsl r24
 48158 14b8a 991F      		rol r25
 48159 14b8c 820F      		add r24,r18
 48160 14b8e 931F      		adc r25,r19
 48161 14b90 FC01      		movw r30,r24
 48162 14b92 8081      		ld r24,Z
 48163 14b94 9181      		ldd r25,Z+1
 48164 14b96 98A7      		std Y+40,r25
 48165 14b98 8FA3      		std Y+39,r24
4543:lp_solve_5.5/lp_presolve.c ****     jjl = QS[ix-1].int4.intpar2;
 48166               		.loc 2 4543 0
 48167 14b9a 8D81      		ldd r24,Y+5
 48168 14b9c 9E81      		ldd r25,Y+6
 48169 14b9e 8150      		subi r24,1
 48170 14ba0 904E      		sbci r25,-32
 48171 14ba2 880F      		lsl r24
 48172 14ba4 991F      		rol r25
 48173 14ba6 880F      		lsl r24
 48174 14ba8 991F      		rol r25
 48175 14baa 880F      		lsl r24
 48176 14bac 991F      		rol r25
 48177 14bae 29A1      		ldd r18,Y+33
 48178 14bb0 3AA1      		ldd r19,Y+34
 48179 14bb2 820F      		add r24,r18
 48180 14bb4 931F      		adc r25,r19
 48181 14bb6 FC01      		movw r30,r24
 48182 14bb8 8481      		ldd r24,Z+4
 48183 14bba 9581      		ldd r25,Z+5
 48184 14bbc 9AA7      		std Y+42,r25
 48185 14bbe 89A7      		std Y+41,r24
4544:lp_solve_5.5/lp_presolve.c **** 
4545:lp_solve_5.5/lp_presolve.c ****     /* Scan the OF */
4546:lp_solve_5.5/lp_presolve.c ****     i = 0;
 48186               		.loc 2 4546 0
 48187 14bc0 1A82      		std Y+2,__zero_reg__
 48188 14bc2 1982      		std Y+1,__zero_reg__
4547:lp_solve_5.5/lp_presolve.c ****     chsign = is_chsign(lp, i);
 48189               		.loc 2 4547 0
 48190 14bc4 2981      		ldd r18,Y+1
 48191 14bc6 3A81      		ldd r19,Y+2
 48192 14bc8 8D8D      		ldd r24,Y+29
 48193 14bca 9E8D      		ldd r25,Y+30
 48194 14bcc B901      		movw r22,r18
 48195 14bce 0E94 0000 		call is_chsign
 48196 14bd2 8BA7      		std Y+43,r24
4548:lp_solve_5.5/lp_presolve.c ****     test = ratio = 0.0;
 48197               		.loc 2 4548 0
 48198 14bd4 198E      		std Y+25,__zero_reg__
 48199 14bd6 1A8E      		std Y+26,__zero_reg__
 48200 14bd8 1B8E      		std Y+27,__zero_reg__
 48201 14bda 1C8E      		std Y+28,__zero_reg__
 48202 14bdc 898D      		ldd r24,Y+25
 48203 14bde 9A8D      		ldd r25,Y+26
 48204 14be0 AB8D      		ldd r26,Y+27
 48205 14be2 BC8D      		ldd r27,Y+28
 48206 14be4 8D8B      		std Y+21,r24
 48207 14be6 9E8B      		std Y+22,r25
 48208 14be8 AF8B      		std Y+23,r26
 48209 14bea B88F      		std Y+24,r27
4549:lp_solve_5.5/lp_presolve.c ****     itemEQ = 0;
 48210               		.loc 2 4549 0
 48211 14bec CE01      		movw r24,r28
 48212 14bee 805C      		subi r24,-64
 48213 14bf0 9F4F      		sbci r25,-1
 48214 14bf2 FC01      		movw r30,r24
 48215 14bf4 1182      		std Z+1,__zero_reg__
 48216 14bf6 1082      		st Z,__zero_reg__
4550:lp_solve_5.5/lp_presolve.c ****     nzidx[0] = 0;
 48217               		.loc 2 4550 0
 48218 14bf8 CE01      		movw r24,r28
 48219 14bfa 8E5B      		subi r24,-66
 48220 14bfc 9F4F      		sbci r25,-1
 48221 14bfe FC01      		movw r30,r24
 48222 14c00 8081      		ld r24,Z
 48223 14c02 9181      		ldd r25,Z+1
 48224 14c04 FC01      		movw r30,r24
 48225 14c06 1182      		std Z+1,__zero_reg__
 48226 14c08 1082      		st Z,__zero_reg__
4551:lp_solve_5.5/lp_presolve.c ****     while(((jjx = presolve_nextcol(psdata, ii, &itemEQ)) >= 0) && /*(itemEQ > 0) && */
 48227               		.loc 2 4551 0
 48228 14c0a 00C0      		rjmp .L1998
 48229               	.L2007:
4552:lp_solve_5.5/lp_presolve.c ****            (fabs(test-ratio) < psdata->epsvalue)) {
4553:lp_solve_5.5/lp_presolve.c ****       valueEQ = ROW_MAT_VALUE(jjx);
 48230               		.loc 2 4553 0
 48231 14c0c 8F8D      		ldd r24,Y+31
 48232 14c0e 98A1      		ldd r25,Y+32
 48233 14c10 FC01      		movw r30,r24
 48234 14c12 2089      		ldd r18,Z+16
 48235 14c14 3189      		ldd r19,Z+17
 48236 14c16 8F8D      		ldd r24,Y+31
 48237 14c18 98A1      		ldd r25,Y+32
 48238 14c1a FC01      		movw r30,r24
 48239 14c1c 4689      		ldd r20,Z+22
 48240 14c1e 5789      		ldd r21,Z+23
 48241 14c20 8CA5      		ldd r24,Y+44
 48242 14c22 9DA5      		ldd r25,Y+45
 48243 14c24 880F      		lsl r24
 48244 14c26 991F      		rol r25
 48245 14c28 840F      		add r24,r20
 48246 14c2a 951F      		adc r25,r21
 48247 14c2c FC01      		movw r30,r24
 48248 14c2e 8081      		ld r24,Z
 48249 14c30 9181      		ldd r25,Z+1
 48250 14c32 880F      		lsl r24
 48251 14c34 991F      		rol r25
 48252 14c36 880F      		lsl r24
 48253 14c38 991F      		rol r25
 48254 14c3a 820F      		add r24,r18
 48255 14c3c 931F      		adc r25,r19
 48256 14c3e FC01      		movw r30,r24
 48257 14c40 8081      		ld r24,Z
 48258 14c42 9181      		ldd r25,Z+1
 48259 14c44 A281      		ldd r26,Z+2
 48260 14c46 B381      		ldd r27,Z+3
 48261 14c48 8EA7      		std Y+46,r24
 48262 14c4a 9FA7      		std Y+47,r25
 48263 14c4c A8AB      		std Y+48,r26
 48264 14c4e B9AB      		std Y+49,r27
4554:lp_solve_5.5/lp_presolve.c ****       if(valueEQ == 0)
 48265               		.loc 2 4554 0
 48266 14c50 20E0      		ldi r18,0
 48267 14c52 30E0      		ldi r19,0
 48268 14c54 A901      		movw r20,r18
 48269 14c56 6EA5      		ldd r22,Y+46
 48270 14c58 7FA5      		ldd r23,Y+47
 48271 14c5a 88A9      		ldd r24,Y+48
 48272 14c5c 99A9      		ldd r25,Y+49
 48273 14c5e 0E94 0000 		call __eqsf2
 48274 14c62 8823      		tst r24
 48275 14c64 01F4      		brne .L2079
4555:lp_solve_5.5/lp_presolve.c ****         continue;
 48276               		.loc 2 4555 0
 48277 14c66 00C0      		rjmp .L1998
 48278               	.L2079:
4556:lp_solve_5.5/lp_presolve.c ****       k = ROW_MAT_COLNR(jjx);
 48279               		.loc 2 4556 0
 48280 14c68 8F8D      		ldd r24,Y+31
 48281 14c6a 98A1      		ldd r25,Y+32
 48282 14c6c FC01      		movw r30,r24
 48283 14c6e 2485      		ldd r18,Z+12
 48284 14c70 3585      		ldd r19,Z+13
 48285 14c72 8F8D      		ldd r24,Y+31
 48286 14c74 98A1      		ldd r25,Y+32
 48287 14c76 FC01      		movw r30,r24
 48288 14c78 4689      		ldd r20,Z+22
 48289 14c7a 5789      		ldd r21,Z+23
 48290 14c7c 8CA5      		ldd r24,Y+44
 48291 14c7e 9DA5      		ldd r25,Y+45
 48292 14c80 880F      		lsl r24
 48293 14c82 991F      		rol r25
 48294 14c84 840F      		add r24,r20
 48295 14c86 951F      		adc r25,r21
 48296 14c88 FC01      		movw r30,r24
 48297 14c8a 8081      		ld r24,Z
 48298 14c8c 9181      		ldd r25,Z+1
 48299 14c8e 880F      		lsl r24
 48300 14c90 991F      		rol r25
 48301 14c92 820F      		add r24,r18
 48302 14c94 931F      		adc r25,r19
 48303 14c96 FC01      		movw r30,r24
 48304 14c98 8081      		ld r24,Z
 48305 14c9a 9181      		ldd r25,Z+1
 48306 14c9c 9887      		std Y+8,r25
 48307 14c9e 8F83      		std Y+7,r24
4557:lp_solve_5.5/lp_presolve.c ****       value = lp->orig_obj[k];
 48308               		.loc 2 4557 0
 48309 14ca0 8D8D      		ldd r24,Y+29
 48310 14ca2 9E8D      		ldd r25,Y+30
 48311 14ca4 845D      		subi r24,-44
 48312 14ca6 9D4F      		sbci r25,-3
 48313 14ca8 FC01      		movw r30,r24
 48314 14caa 2081      		ld r18,Z
 48315 14cac 3181      		ldd r19,Z+1
 48316 14cae 8F81      		ldd r24,Y+7
 48317 14cb0 9885      		ldd r25,Y+8
 48318 14cb2 880F      		lsl r24
 48319 14cb4 991F      		rol r25
 48320 14cb6 880F      		lsl r24
 48321 14cb8 991F      		rol r25
 48322 14cba 820F      		add r24,r18
 48323 14cbc 931F      		adc r25,r19
 48324 14cbe FC01      		movw r30,r24
 48325 14cc0 8081      		ld r24,Z
 48326 14cc2 9181      		ldd r25,Z+1
 48327 14cc4 A281      		ldd r26,Z+2
 48328 14cc6 B381      		ldd r27,Z+3
 48329 14cc8 8AAB      		std Y+50,r24
 48330 14cca 9BAB      		std Y+51,r25
 48331 14ccc ACAB      		std Y+52,r26
 48332 14cce BDAB      		std Y+53,r27
4558:lp_solve_5.5/lp_presolve.c ****       if(fabs(value) < psdata->epsvalue)
 48333               		.loc 2 4558 0
 48334 14cd0 8AA9      		ldd r24,Y+50
 48335 14cd2 9BA9      		ldd r25,Y+51
 48336 14cd4 ACA9      		ldd r26,Y+52
 48337 14cd6 BDA9      		ldd r27,Y+53
 48338 14cd8 BF77      		andi r27,0x7f
 48339 14cda 9E01      		movw r18,r28
 48340 14cdc 2A5B      		subi r18,-70
 48341 14cde 3F4F      		sbci r19,-1
 48342 14ce0 F901      		movw r30,r18
 48343 14ce2 2081      		ld r18,Z
 48344 14ce4 3181      		ldd r19,Z+1
 48345 14ce6 F901      		movw r30,r18
 48346 14ce8 2489      		ldd r18,Z+20
 48347 14cea 3589      		ldd r19,Z+21
 48348 14cec 4689      		ldd r20,Z+22
 48349 14cee 5789      		ldd r21,Z+23
 48350 14cf0 BC01      		movw r22,r24
 48351 14cf2 CD01      		movw r24,r26
 48352 14cf4 0E94 0000 		call __ltsf2
 48353 14cf8 8823      		tst r24
 48354 14cfa 04F4      		brge .+2
 48355 14cfc 00C0      		rjmp .L2089
4559:lp_solve_5.5/lp_presolve.c ****         break;
4560:lp_solve_5.5/lp_presolve.c ****       if(ratio == 0.0) {
 48356               		.loc 2 4560 0
 48357 14cfe 20E0      		ldi r18,0
 48358 14d00 30E0      		ldi r19,0
 48359 14d02 A901      		movw r20,r18
 48360 14d04 698D      		ldd r22,Y+25
 48361 14d06 7A8D      		ldd r23,Y+26
 48362 14d08 8B8D      		ldd r24,Y+27
 48363 14d0a 9C8D      		ldd r25,Y+28
 48364 14d0c 0E94 0000 		call __eqsf2
 48365 14d10 8823      		tst r24
 48366 14d12 01F4      		brne .L2080
4561:lp_solve_5.5/lp_presolve.c ****         test = ratio = value / valueEQ;
 48367               		.loc 2 4561 0
 48368 14d14 2EA5      		ldd r18,Y+46
 48369 14d16 3FA5      		ldd r19,Y+47
 48370 14d18 48A9      		ldd r20,Y+48
 48371 14d1a 59A9      		ldd r21,Y+49
 48372 14d1c 6AA9      		ldd r22,Y+50
 48373 14d1e 7BA9      		ldd r23,Y+51
 48374 14d20 8CA9      		ldd r24,Y+52
 48375 14d22 9DA9      		ldd r25,Y+53
 48376 14d24 0E94 0000 		call __divsf3
 48377 14d28 DC01      		movw r26,r24
 48378 14d2a CB01      		movw r24,r22
 48379 14d2c 898F      		std Y+25,r24
 48380 14d2e 9A8F      		std Y+26,r25
 48381 14d30 AB8F      		std Y+27,r26
 48382 14d32 BC8F      		std Y+28,r27
 48383 14d34 898D      		ldd r24,Y+25
 48384 14d36 9A8D      		ldd r25,Y+26
 48385 14d38 AB8D      		ldd r26,Y+27
 48386 14d3a BC8D      		ldd r27,Y+28
 48387 14d3c 8D8B      		std Y+21,r24
 48388 14d3e 9E8B      		std Y+22,r25
 48389 14d40 AF8B      		std Y+23,r26
 48390 14d42 B88F      		std Y+24,r27
 48391 14d44 00C0      		rjmp .L2006
 48392               	.L2080:
4562:lp_solve_5.5/lp_presolve.c ****       }
4563:lp_solve_5.5/lp_presolve.c ****       else
4564:lp_solve_5.5/lp_presolve.c ****         test = value / valueEQ;
 48393               		.loc 2 4564 0
 48394 14d46 2EA5      		ldd r18,Y+46
 48395 14d48 3FA5      		ldd r19,Y+47
 48396 14d4a 48A9      		ldd r20,Y+48
 48397 14d4c 59A9      		ldd r21,Y+49
 48398 14d4e 6AA9      		ldd r22,Y+50
 48399 14d50 7BA9      		ldd r23,Y+51
 48400 14d52 8CA9      		ldd r24,Y+52
 48401 14d54 9DA9      		ldd r25,Y+53
 48402 14d56 0E94 0000 		call __divsf3
 48403 14d5a DC01      		movw r26,r24
 48404 14d5c CB01      		movw r24,r22
 48405 14d5e 8D8B      		std Y+21,r24
 48406 14d60 9E8B      		std Y+22,r25
 48407 14d62 AF8B      		std Y+23,r26
 48408 14d64 B88F      		std Y+24,r27
 48409               	.L2006:
4565:lp_solve_5.5/lp_presolve.c ****       /* Store nz index */
4566:lp_solve_5.5/lp_presolve.c ****       nzidx[++nzidx[0]] = k;
 48410               		.loc 2 4566 0
 48411 14d66 CE01      		movw r24,r28
 48412 14d68 8E5B      		subi r24,-66
 48413 14d6a 9F4F      		sbci r25,-1
 48414 14d6c FC01      		movw r30,r24
 48415 14d6e 2081      		ld r18,Z
 48416 14d70 3181      		ldd r19,Z+1
 48417 14d72 CE01      		movw r24,r28
 48418 14d74 8E5B      		subi r24,-66
 48419 14d76 9F4F      		sbci r25,-1
 48420 14d78 FC01      		movw r30,r24
 48421 14d7a 8081      		ld r24,Z
 48422 14d7c 9181      		ldd r25,Z+1
 48423 14d7e FC01      		movw r30,r24
 48424 14d80 4081      		ld r20,Z
 48425 14d82 5181      		ldd r21,Z+1
 48426 14d84 4F5F      		subi r20,-1
 48427 14d86 5F4F      		sbci r21,-1
 48428 14d88 FC01      		movw r30,r24
 48429 14d8a 5183      		std Z+1,r21
 48430 14d8c 4083      		st Z,r20
 48431 14d8e FC01      		movw r30,r24
 48432 14d90 8081      		ld r24,Z
 48433 14d92 9181      		ldd r25,Z+1
 48434 14d94 880F      		lsl r24
 48435 14d96 991F      		rol r25
 48436 14d98 820F      		add r24,r18
 48437 14d9a 931F      		adc r25,r19
 48438 14d9c 2F81      		ldd r18,Y+7
 48439 14d9e 3885      		ldd r19,Y+8
 48440 14da0 FC01      		movw r30,r24
 48441 14da2 3183      		std Z+1,r19
 48442 14da4 2083      		st Z,r18
 48443               	.L1998:
4551:lp_solve_5.5/lp_presolve.c ****            (fabs(test-ratio) < psdata->epsvalue)) {
 48444               		.loc 2 4551 0
 48445 14da6 AE01      		movw r20,r28
 48446 14da8 405C      		subi r20,-64
 48447 14daa 5F4F      		sbci r21,-1
 48448 14dac 2BA1      		ldd r18,Y+35
 48449 14dae 3CA1      		ldd r19,Y+36
 48450 14db0 CE01      		movw r24,r28
 48451 14db2 8A5B      		subi r24,-70
 48452 14db4 9F4F      		sbci r25,-1
 48453 14db6 FC01      		movw r30,r24
 48454 14db8 8081      		ld r24,Z
 48455 14dba 9181      		ldd r25,Z+1
 48456 14dbc B901      		movw r22,r18
 48457 14dbe 0E94 0000 		call presolve_nextcol
 48458 14dc2 9DA7      		std Y+45,r25
 48459 14dc4 8CA7      		std Y+44,r24
 48460 14dc6 8CA5      		ldd r24,Y+44
 48461 14dc8 9DA5      		ldd r25,Y+45
 48462 14dca 9923      		tst r25
 48463 14dcc 04F0      		brlt .L2003
4552:lp_solve_5.5/lp_presolve.c ****       valueEQ = ROW_MAT_VALUE(jjx);
 48464               		.loc 2 4552 0 discriminator 1
 48465 14dce 298D      		ldd r18,Y+25
 48466 14dd0 3A8D      		ldd r19,Y+26
 48467 14dd2 4B8D      		ldd r20,Y+27
 48468 14dd4 5C8D      		ldd r21,Y+28
 48469 14dd6 6D89      		ldd r22,Y+21
 48470 14dd8 7E89      		ldd r23,Y+22
 48471 14dda 8F89      		ldd r24,Y+23
 48472 14ddc 988D      		ldd r25,Y+24
 48473 14dde 0E94 0000 		call __subsf3
 48474 14de2 DC01      		movw r26,r24
 48475 14de4 CB01      		movw r24,r22
 48476 14de6 BF77      		andi r27,0x7f
 48477 14de8 9E01      		movw r18,r28
 48478 14dea 2A5B      		subi r18,-70
 48479 14dec 3F4F      		sbci r19,-1
 48480 14dee F901      		movw r30,r18
 48481 14df0 2081      		ld r18,Z
 48482 14df2 3181      		ldd r19,Z+1
 48483 14df4 F901      		movw r30,r18
 48484 14df6 2489      		ldd r18,Z+20
 48485 14df8 3589      		ldd r19,Z+21
 48486 14dfa 4689      		ldd r20,Z+22
 48487 14dfc 5789      		ldd r21,Z+23
4551:lp_solve_5.5/lp_presolve.c ****            (fabs(test-ratio) < psdata->epsvalue)) {
 48488               		.loc 2 4551 0 discriminator 1
 48489 14dfe BC01      		movw r22,r24
 48490 14e00 CD01      		movw r24,r26
 48491 14e02 0E94 0000 		call __ltsf2
 48492 14e06 8823      		tst r24
 48493 14e08 04F4      		brge .+2
 48494 14e0a 00C0      		rjmp .L2007
 48495 14e0c 00C0      		rjmp .L2003
 48496               	.L2089:
4559:lp_solve_5.5/lp_presolve.c ****       if(ratio == 0.0) {
 48497               		.loc 2 4559 0
 48498 14e0e 0000      		nop
 48499               	.L2003:
4567:lp_solve_5.5/lp_presolve.c ****     }
4568:lp_solve_5.5/lp_presolve.c **** 
4569:lp_solve_5.5/lp_presolve.c ****     /* We were successful if the equality was completely traversed; we will
4570:lp_solve_5.5/lp_presolve.c ****       then zero-out the OF coefficients and update the constant term. */
4571:lp_solve_5.5/lp_presolve.c ****     if((itemEQ == 0) && (nzidx[0] > 0) && (fabs(test-ratio) < psdata->epsvalue)) {
 48500               		.loc 2 4571 0
 48501 14e10 CE01      		movw r24,r28
 48502 14e12 805C      		subi r24,-64
 48503 14e14 9F4F      		sbci r25,-1
 48504 14e16 FC01      		movw r30,r24
 48505 14e18 8081      		ld r24,Z
 48506 14e1a 9181      		ldd r25,Z+1
 48507 14e1c 892B      		or r24,r25
 48508 14e1e 01F0      		breq .+2
 48509 14e20 00C0      		rjmp .L2008
 48510               		.loc 2 4571 0 is_stmt 0 discriminator 1
 48511 14e22 CE01      		movw r24,r28
 48512 14e24 8E5B      		subi r24,-66
 48513 14e26 9F4F      		sbci r25,-1
 48514 14e28 FC01      		movw r30,r24
 48515 14e2a 8081      		ld r24,Z
 48516 14e2c 9181      		ldd r25,Z+1
 48517 14e2e FC01      		movw r30,r24
 48518 14e30 8081      		ld r24,Z
 48519 14e32 9181      		ldd r25,Z+1
 48520 14e34 1816      		cp __zero_reg__,r24
 48521 14e36 1906      		cpc __zero_reg__,r25
 48522 14e38 04F0      		brlt .+2
 48523 14e3a 00C0      		rjmp .L2008
 48524               		.loc 2 4571 0 discriminator 2
 48525 14e3c 298D      		ldd r18,Y+25
 48526 14e3e 3A8D      		ldd r19,Y+26
 48527 14e40 4B8D      		ldd r20,Y+27
 48528 14e42 5C8D      		ldd r21,Y+28
 48529 14e44 6D89      		ldd r22,Y+21
 48530 14e46 7E89      		ldd r23,Y+22
 48531 14e48 8F89      		ldd r24,Y+23
 48532 14e4a 988D      		ldd r25,Y+24
 48533 14e4c 0E94 0000 		call __subsf3
 48534 14e50 DC01      		movw r26,r24
 48535 14e52 CB01      		movw r24,r22
 48536 14e54 BF77      		andi r27,0x7f
 48537 14e56 9E01      		movw r18,r28
 48538 14e58 2A5B      		subi r18,-70
 48539 14e5a 3F4F      		sbci r19,-1
 48540 14e5c F901      		movw r30,r18
 48541 14e5e 2081      		ld r18,Z
 48542 14e60 3181      		ldd r19,Z+1
 48543 14e62 F901      		movw r30,r18
 48544 14e64 2489      		ldd r18,Z+20
 48545 14e66 3589      		ldd r19,Z+21
 48546 14e68 4689      		ldd r20,Z+22
 48547 14e6a 5789      		ldd r21,Z+23
 48548 14e6c BC01      		movw r22,r24
 48549 14e6e CD01      		movw r24,r26
 48550 14e70 0E94 0000 		call __ltsf2
 48551 14e74 8823      		tst r24
 48552 14e76 04F0      		brlt .+2
 48553 14e78 00C0      		rjmp .L2008
4572:lp_solve_5.5/lp_presolve.c ****       for(k = 1; k <= nzidx[0]; k++) {
 48554               		.loc 2 4572 0 is_stmt 1
 48555 14e7a 81E0      		ldi r24,lo8(1)
 48556 14e7c 90E0      		ldi r25,0
 48557 14e7e 9887      		std Y+8,r25
 48558 14e80 8F83      		std Y+7,r24
 48559 14e82 00C0      		rjmp .L2010
 48560               	.L2017:
4573:lp_solve_5.5/lp_presolve.c ****         /* We should add recovery data for the zero'ed coefficient here */
4574:lp_solve_5.5/lp_presolve.c ****         jx = nzidx[k];
 48561               		.loc 2 4574 0
 48562 14e84 CE01      		movw r24,r28
 48563 14e86 8E5B      		subi r24,-66
 48564 14e88 9F4F      		sbci r25,-1
 48565 14e8a FC01      		movw r30,r24
 48566 14e8c 2081      		ld r18,Z
 48567 14e8e 3181      		ldd r19,Z+1
 48568 14e90 8F81      		ldd r24,Y+7
 48569 14e92 9885      		ldd r25,Y+8
 48570 14e94 880F      		lsl r24
 48571 14e96 991F      		rol r25
 48572 14e98 820F      		add r24,r18
 48573 14e9a 931F      		adc r25,r19
 48574 14e9c FC01      		movw r30,r24
 48575 14e9e 8081      		ld r24,Z
 48576 14ea0 9181      		ldd r25,Z+1
 48577 14ea2 9C87      		std Y+12,r25
 48578 14ea4 8B87      		std Y+11,r24
4575:lp_solve_5.5/lp_presolve.c ****         value = lp->orig_obj[jx];
 48579               		.loc 2 4575 0
 48580 14ea6 8D8D      		ldd r24,Y+29
 48581 14ea8 9E8D      		ldd r25,Y+30
 48582 14eaa 845D      		subi r24,-44
 48583 14eac 9D4F      		sbci r25,-3
 48584 14eae FC01      		movw r30,r24
 48585 14eb0 2081      		ld r18,Z
 48586 14eb2 3181      		ldd r19,Z+1
 48587 14eb4 8B85      		ldd r24,Y+11
 48588 14eb6 9C85      		ldd r25,Y+12
 48589 14eb8 880F      		lsl r24
 48590 14eba 991F      		rol r25
 48591 14ebc 880F      		lsl r24
 48592 14ebe 991F      		rol r25
 48593 14ec0 820F      		add r24,r18
 48594 14ec2 931F      		adc r25,r19
 48595 14ec4 FC01      		movw r30,r24
 48596 14ec6 8081      		ld r24,Z
 48597 14ec8 9181      		ldd r25,Z+1
 48598 14eca A281      		ldd r26,Z+2
 48599 14ecc B381      		ldd r27,Z+3
 48600 14ece 8AAB      		std Y+50,r24
 48601 14ed0 9BAB      		std Y+51,r25
 48602 14ed2 ACAB      		std Y+52,r26
 48603 14ed4 BDAB      		std Y+53,r27
4576:lp_solve_5.5/lp_presolve.c ****         lp->orig_obj[jx] = 0.0;
 48604               		.loc 2 4576 0
 48605 14ed6 8D8D      		ldd r24,Y+29
 48606 14ed8 9E8D      		ldd r25,Y+30
 48607 14eda 845D      		subi r24,-44
 48608 14edc 9D4F      		sbci r25,-3
 48609 14ede FC01      		movw r30,r24
 48610 14ee0 2081      		ld r18,Z
 48611 14ee2 3181      		ldd r19,Z+1
 48612 14ee4 8B85      		ldd r24,Y+11
 48613 14ee6 9C85      		ldd r25,Y+12
 48614 14ee8 880F      		lsl r24
 48615 14eea 991F      		rol r25
 48616 14eec 880F      		lsl r24
 48617 14eee 991F      		rol r25
 48618 14ef0 820F      		add r24,r18
 48619 14ef2 931F      		adc r25,r19
 48620 14ef4 FC01      		movw r30,r24
 48621 14ef6 1082      		st Z,__zero_reg__
 48622 14ef8 1182      		std Z+1,__zero_reg__
 48623 14efa 1282      		std Z+2,__zero_reg__
 48624 14efc 1382      		std Z+3,__zero_reg__
4577:lp_solve_5.5/lp_presolve.c ****         /* Update counts */
4578:lp_solve_5.5/lp_presolve.c ****         value = my_chsign(chsign, value);
 48625               		.loc 2 4578 0
 48626 14efe 8BA5      		ldd r24,Y+43
 48627 14f00 8823      		tst r24
 48628 14f02 01F0      		breq .L2011
 48629               		.loc 2 4578 0 is_stmt 0 discriminator 1
 48630 14f04 20E0      		ldi r18,0
 48631 14f06 30E0      		ldi r19,0
 48632 14f08 A901      		movw r20,r18
 48633 14f0a 6AA9      		ldd r22,Y+50
 48634 14f0c 7BA9      		ldd r23,Y+51
 48635 14f0e 8CA9      		ldd r24,Y+52
 48636 14f10 9DA9      		ldd r25,Y+53
 48637 14f12 0E94 0000 		call __nesf2
 48638 14f16 8823      		tst r24
 48639 14f18 01F0      		breq .L2011
 48640               		.loc 2 4578 0 discriminator 3
 48641 14f1a 8AA9      		ldd r24,Y+50
 48642 14f1c 9BA9      		ldd r25,Y+51
 48643 14f1e ACA9      		ldd r26,Y+52
 48644 14f20 BDA9      		ldd r27,Y+53
 48645 14f22 B058      		subi r27,0x80
 48646 14f24 00C0      		rjmp .L2013
 48647               	.L2011:
 48648               		.loc 2 4578 0 discriminator 4
 48649 14f26 8AA9      		ldd r24,Y+50
 48650 14f28 9BA9      		ldd r25,Y+51
 48651 14f2a ACA9      		ldd r26,Y+52
 48652 14f2c BDA9      		ldd r27,Y+53
 48653               	.L2013:
 48654               		.loc 2 4578 0 discriminator 6
 48655 14f2e 8AAB      		std Y+50,r24
 48656 14f30 9BAB      		std Y+51,r25
 48657 14f32 ACAB      		std Y+52,r26
 48658 14f34 BDAB      		std Y+53,r27
4579:lp_solve_5.5/lp_presolve.c ****         if(value < 0) {
 48659               		.loc 2 4579 0 is_stmt 1 discriminator 6
 48660 14f36 20E0      		ldi r18,0
 48661 14f38 30E0      		ldi r19,0
 48662 14f3a A901      		movw r20,r18
 48663 14f3c 6AA9      		ldd r22,Y+50
 48664 14f3e 7BA9      		ldd r23,Y+51
 48665 14f40 8CA9      		ldd r24,Y+52
 48666 14f42 9DA9      		ldd r25,Y+53
 48667 14f44 0E94 0000 		call __ltsf2
 48668 14f48 8823      		tst r24
 48669 14f4a 04F4      		brge .L2081
4580:lp_solve_5.5/lp_presolve.c ****           psdata->rows->negcount[i]--;
 48670               		.loc 2 4580 0
 48671 14f4c CE01      		movw r24,r28
 48672 14f4e 8A5B      		subi r24,-70
 48673 14f50 9F4F      		sbci r25,-1
 48674 14f52 FC01      		movw r30,r24
 48675 14f54 8081      		ld r24,Z
 48676 14f56 9181      		ldd r25,Z+1
 48677 14f58 FC01      		movw r30,r24
 48678 14f5a 8081      		ld r24,Z
 48679 14f5c 9181      		ldd r25,Z+1
 48680 14f5e FC01      		movw r30,r24
 48681 14f60 2085      		ldd r18,Z+8
 48682 14f62 3185      		ldd r19,Z+9
 48683 14f64 8981      		ldd r24,Y+1
 48684 14f66 9A81      		ldd r25,Y+2
 48685 14f68 880F      		lsl r24
 48686 14f6a 991F      		rol r25
 48687 14f6c 820F      		add r24,r18
 48688 14f6e 931F      		adc r25,r19
 48689 14f70 FC01      		movw r30,r24
 48690 14f72 2081      		ld r18,Z
 48691 14f74 3181      		ldd r19,Z+1
 48692 14f76 2150      		subi r18,1
 48693 14f78 3109      		sbc r19,__zero_reg__
 48694 14f7a FC01      		movw r30,r24
 48695 14f7c 3183      		std Z+1,r19
 48696 14f7e 2083      		st Z,r18
4581:lp_solve_5.5/lp_presolve.c ****           psdata->cols->negcount[jx]--;
 48697               		.loc 2 4581 0
 48698 14f80 CE01      		movw r24,r28
 48699 14f82 8A5B      		subi r24,-70
 48700 14f84 9F4F      		sbci r25,-1
 48701 14f86 FC01      		movw r30,r24
 48702 14f88 8081      		ld r24,Z
 48703 14f8a 9181      		ldd r25,Z+1
 48704 14f8c FC01      		movw r30,r24
 48705 14f8e 8281      		ldd r24,Z+2
 48706 14f90 9381      		ldd r25,Z+3
 48707 14f92 FC01      		movw r30,r24
 48708 14f94 2085      		ldd r18,Z+8
 48709 14f96 3185      		ldd r19,Z+9
 48710 14f98 8B85      		ldd r24,Y+11
 48711 14f9a 9C85      		ldd r25,Y+12
 48712 14f9c 880F      		lsl r24
 48713 14f9e 991F      		rol r25
 48714 14fa0 820F      		add r24,r18
 48715 14fa2 931F      		adc r25,r19
 48716 14fa4 FC01      		movw r30,r24
 48717 14fa6 2081      		ld r18,Z
 48718 14fa8 3181      		ldd r19,Z+1
 48719 14faa 2150      		subi r18,1
 48720 14fac 3109      		sbc r19,__zero_reg__
 48721 14fae FC01      		movw r30,r24
 48722 14fb0 3183      		std Z+1,r19
 48723 14fb2 2083      		st Z,r18
 48724 14fb4 00C0      		rjmp .L2016
 48725               	.L2081:
4582:lp_solve_5.5/lp_presolve.c ****         }
4583:lp_solve_5.5/lp_presolve.c ****         else {
4584:lp_solve_5.5/lp_presolve.c ****           psdata->rows->plucount[i]--;
 48726               		.loc 2 4584 0
 48727 14fb6 CE01      		movw r24,r28
 48728 14fb8 8A5B      		subi r24,-70
 48729 14fba 9F4F      		sbci r25,-1
 48730 14fbc FC01      		movw r30,r24
 48731 14fbe 8081      		ld r24,Z
 48732 14fc0 9181      		ldd r25,Z+1
 48733 14fc2 FC01      		movw r30,r24
 48734 14fc4 8081      		ld r24,Z
 48735 14fc6 9181      		ldd r25,Z+1
 48736 14fc8 FC01      		movw r30,r24
 48737 14fca 2681      		ldd r18,Z+6
 48738 14fcc 3781      		ldd r19,Z+7
 48739 14fce 8981      		ldd r24,Y+1
 48740 14fd0 9A81      		ldd r25,Y+2
 48741 14fd2 880F      		lsl r24
 48742 14fd4 991F      		rol r25
 48743 14fd6 820F      		add r24,r18
 48744 14fd8 931F      		adc r25,r19
 48745 14fda FC01      		movw r30,r24
 48746 14fdc 2081      		ld r18,Z
 48747 14fde 3181      		ldd r19,Z+1
 48748 14fe0 2150      		subi r18,1
 48749 14fe2 3109      		sbc r19,__zero_reg__
 48750 14fe4 FC01      		movw r30,r24
 48751 14fe6 3183      		std Z+1,r19
 48752 14fe8 2083      		st Z,r18
4585:lp_solve_5.5/lp_presolve.c ****           psdata->cols->plucount[jx]--;
 48753               		.loc 2 4585 0
 48754 14fea CE01      		movw r24,r28
 48755 14fec 8A5B      		subi r24,-70
 48756 14fee 9F4F      		sbci r25,-1
 48757 14ff0 FC01      		movw r30,r24
 48758 14ff2 8081      		ld r24,Z
 48759 14ff4 9181      		ldd r25,Z+1
 48760 14ff6 FC01      		movw r30,r24
 48761 14ff8 8281      		ldd r24,Z+2
 48762 14ffa 9381      		ldd r25,Z+3
 48763 14ffc FC01      		movw r30,r24
 48764 14ffe 2681      		ldd r18,Z+6
 48765 15000 3781      		ldd r19,Z+7
 48766 15002 8B85      		ldd r24,Y+11
 48767 15004 9C85      		ldd r25,Y+12
 48768 15006 880F      		lsl r24
 48769 15008 991F      		rol r25
 48770 1500a 820F      		add r24,r18
 48771 1500c 931F      		adc r25,r19
 48772 1500e FC01      		movw r30,r24
 48773 15010 2081      		ld r18,Z
 48774 15012 3181      		ldd r19,Z+1
 48775 15014 2150      		subi r18,1
 48776 15016 3109      		sbc r19,__zero_reg__
 48777 15018 FC01      		movw r30,r24
 48778 1501a 3183      		std Z+1,r19
 48779 1501c 2083      		st Z,r18
 48780               	.L2016:
4586:lp_solve_5.5/lp_presolve.c ****         }
4587:lp_solve_5.5/lp_presolve.c ****         iObjChanged++;
 48781               		.loc 2 4587 0 discriminator 2
 48782 1501e 8F85      		ldd r24,Y+15
 48783 15020 9889      		ldd r25,Y+16
 48784 15022 0196      		adiw r24,1
 48785 15024 988B      		std Y+16,r25
 48786 15026 8F87      		std Y+15,r24
4572:lp_solve_5.5/lp_presolve.c ****         /* We should add recovery data for the zero'ed coefficient here */
 48787               		.loc 2 4572 0 discriminator 2
 48788 15028 8F81      		ldd r24,Y+7
 48789 1502a 9885      		ldd r25,Y+8
 48790 1502c 0196      		adiw r24,1
 48791 1502e 9887      		std Y+8,r25
 48792 15030 8F83      		std Y+7,r24
 48793               	.L2010:
4572:lp_solve_5.5/lp_presolve.c ****         /* We should add recovery data for the zero'ed coefficient here */
 48794               		.loc 2 4572 0 is_stmt 0 discriminator 1
 48795 15032 CE01      		movw r24,r28
 48796 15034 8E5B      		subi r24,-66
 48797 15036 9F4F      		sbci r25,-1
 48798 15038 FC01      		movw r30,r24
 48799 1503a 8081      		ld r24,Z
 48800 1503c 9181      		ldd r25,Z+1
 48801 1503e FC01      		movw r30,r24
 48802 15040 2081      		ld r18,Z
 48803 15042 3181      		ldd r19,Z+1
 48804 15044 8F81      		ldd r24,Y+7
 48805 15046 9885      		ldd r25,Y+8
 48806 15048 2817      		cp r18,r24
 48807 1504a 3907      		cpc r19,r25
 48808 1504c 04F0      		brlt .+2
 48809 1504e 00C0      		rjmp .L2017
4588:lp_solve_5.5/lp_presolve.c ****       }
4589:lp_solve_5.5/lp_presolve.c ****       value = ratio * lp->orig_rhs[ii];
 48810               		.loc 2 4589 0 is_stmt 1
 48811 15050 8D8D      		ldd r24,Y+29
 48812 15052 9E8D      		ldd r25,Y+30
 48813 15054 8A55      		subi r24,90
 48814 15056 9D4F      		sbci r25,-3
 48815 15058 FC01      		movw r30,r24
 48816 1505a 2081      		ld r18,Z
 48817 1505c 3181      		ldd r19,Z+1
 48818 1505e 8BA1      		ldd r24,Y+35
 48819 15060 9CA1      		ldd r25,Y+36
 48820 15062 880F      		lsl r24
 48821 15064 991F      		rol r25
 48822 15066 880F      		lsl r24
 48823 15068 991F      		rol r25
 48824 1506a 820F      		add r24,r18
 48825 1506c 931F      		adc r25,r19
 48826 1506e FC01      		movw r30,r24
 48827 15070 8081      		ld r24,Z
 48828 15072 9181      		ldd r25,Z+1
 48829 15074 A281      		ldd r26,Z+2
 48830 15076 B381      		ldd r27,Z+3
 48831 15078 298D      		ldd r18,Y+25
 48832 1507a 3A8D      		ldd r19,Y+26
 48833 1507c 4B8D      		ldd r20,Y+27
 48834 1507e 5C8D      		ldd r21,Y+28
 48835 15080 BC01      		movw r22,r24
 48836 15082 CD01      		movw r24,r26
 48837 15084 0E94 0000 		call __mulsf3
 48838 15088 DC01      		movw r26,r24
 48839 1508a CB01      		movw r24,r22
 48840 1508c 8AAB      		std Y+50,r24
 48841 1508e 9BAB      		std Y+51,r25
 48842 15090 ACAB      		std Y+52,r26
 48843 15092 BDAB      		std Y+53,r27
4590:lp_solve_5.5/lp_presolve.c ****       presolve_adjustrhs(psdata, i, value, psdata->epsvalue);
 48844               		.loc 2 4590 0
 48845 15094 CE01      		movw r24,r28
 48846 15096 8A5B      		subi r24,-70
 48847 15098 9F4F      		sbci r25,-1
 48848 1509a FC01      		movw r30,r24
 48849 1509c 8081      		ld r24,Z
 48850 1509e 9181      		ldd r25,Z+1
 48851 150a0 FC01      		movw r30,r24
 48852 150a2 2489      		ldd r18,Z+20
 48853 150a4 3589      		ldd r19,Z+21
 48854 150a6 4689      		ldd r20,Z+22
 48855 150a8 5789      		ldd r21,Z+23
 48856 150aa 8AA9      		ldd r24,Y+50
 48857 150ac 9BA9      		ldd r25,Y+51
 48858 150ae ACA9      		ldd r26,Y+52
 48859 150b0 BDA9      		ldd r27,Y+53
 48860 150b2 C980      		ldd r12,Y+1
 48861 150b4 DA80      		ldd r13,Y+2
 48862 150b6 BE01      		movw r22,r28
 48863 150b8 6A5B      		subi r22,-70
 48864 150ba 7F4F      		sbci r23,-1
 48865 150bc FB01      		movw r30,r22
 48866 150be 0190      		ld __tmp_reg__,Z+
 48867 150c0 F081      		ld r31,Z
 48868 150c2 E02D      		mov r30,__tmp_reg__
 48869 150c4 6296      		adiw r28,80-62
 48870 150c6 FFAF      		std Y+63,r31
 48871 150c8 EEAF      		std Y+62,r30
 48872 150ca 6297      		sbiw r28,80-62
 48873 150cc 7901      		movw r14,r18
 48874 150ce 8A01      		movw r16,r20
 48875 150d0 9C01      		movw r18,r24
 48876 150d2 AD01      		movw r20,r26
 48877 150d4 B601      		movw r22,r12
 48878 150d6 6296      		adiw r28,80-62
 48879 150d8 8EAD      		ldd r24,Y+62
 48880 150da 9FAD      		ldd r25,Y+63
 48881 150dc 6297      		sbiw r28,80-62
 48882 150de 0E94 0000 		call presolve_adjustrhs
 48883               	.L2008:
4591:lp_solve_5.5/lp_presolve.c ****     }
4592:lp_solve_5.5/lp_presolve.c **** 
4593:lp_solve_5.5/lp_presolve.c ****     /* Scan for compatible constraints that can be masked for sparsity elimination */
4594:lp_solve_5.5/lp_presolve.c ****     for(ib = 1; ib < ix; ib++) {
 48884               		.loc 2 4594 0
 48885 150e2 81E0      		ldi r24,lo8(1)
 48886 150e4 90E0      		ldi r25,0
 48887 150e6 9C83      		std Y+4,r25
 48888 150e8 8B83      		std Y+3,r24
 48889 150ea 00C0      		rjmp .L2018
 48890               	.L2060:
4595:lp_solve_5.5/lp_presolve.c **** 
4596:lp_solve_5.5/lp_presolve.c ****       /* Get row starting and ending positions of the target constraint */
4597:lp_solve_5.5/lp_presolve.c ****       i  = abs(QS[ib-1].int4.intval);
 48891               		.loc 2 4597 0
 48892 150ec 8B81      		ldd r24,Y+3
 48893 150ee 9C81      		ldd r25,Y+4
 48894 150f0 8150      		subi r24,1
 48895 150f2 904E      		sbci r25,-32
 48896 150f4 880F      		lsl r24
 48897 150f6 991F      		rol r25
 48898 150f8 880F      		lsl r24
 48899 150fa 991F      		rol r25
 48900 150fc 880F      		lsl r24
 48901 150fe 991F      		rol r25
 48902 15100 29A1      		ldd r18,Y+33
 48903 15102 3AA1      		ldd r19,Y+34
 48904 15104 820F      		add r24,r18
 48905 15106 931F      		adc r25,r19
 48906 15108 FC01      		movw r30,r24
 48907 1510a 8081      		ld r24,Z
 48908 1510c 9181      		ldd r25,Z+1
 48909 1510e 9923      		tst r25
 48910 15110 04F4      		brge .L2019
 48911 15112 9195      		neg r25
 48912 15114 8195      		neg r24
 48913 15116 9109      		sbc r25,__zero_reg__
 48914               	.L2019:
 48915 15118 9A83      		std Y+2,r25
 48916 1511a 8983      		std Y+1,r24
4598:lp_solve_5.5/lp_presolve.c ****       jb = QS[ib-1].int4.intpar1;
 48917               		.loc 2 4598 0
 48918 1511c 8B81      		ldd r24,Y+3
 48919 1511e 9C81      		ldd r25,Y+4
 48920 15120 8150      		subi r24,1
 48921 15122 904E      		sbci r25,-32
 48922 15124 880F      		lsl r24
 48923 15126 991F      		rol r25
 48924 15128 880F      		lsl r24
 48925 1512a 991F      		rol r25
 48926 1512c 880F      		lsl r24
 48927 1512e 991F      		rol r25
 48928 15130 29A1      		ldd r18,Y+33
 48929 15132 3AA1      		ldd r19,Y+34
 48930 15134 820F      		add r24,r18
 48931 15136 931F      		adc r25,r19
 48932 15138 FC01      		movw r30,r24
 48933 1513a 8281      		ldd r24,Z+2
 48934 1513c 9381      		ldd r25,Z+3
 48935 1513e 9FAB      		std Y+55,r25
 48936 15140 8EAB      		std Y+54,r24
4599:lp_solve_5.5/lp_presolve.c ****       je = presolve_lastcol(psdata, i);
 48937               		.loc 2 4599 0
 48938 15142 2981      		ldd r18,Y+1
 48939 15144 3A81      		ldd r19,Y+2
 48940 15146 CE01      		movw r24,r28
 48941 15148 8A5B      		subi r24,-70
 48942 1514a 9F4F      		sbci r25,-1
 48943 1514c FC01      		movw r30,r24
 48944 1514e 8081      		ld r24,Z
 48945 15150 9181      		ldd r25,Z+1
 48946 15152 B901      		movw r22,r18
 48947 15154 0E94 0000 		call presolve_lastcol
 48948 15158 99AF      		std Y+57,r25
 48949 1515a 88AF      		std Y+56,r24
4600:lp_solve_5.5/lp_presolve.c ****       je = ROW_MAT_COLNR(je);
 48950               		.loc 2 4600 0
 48951 1515c 8F8D      		ldd r24,Y+31
 48952 1515e 98A1      		ldd r25,Y+32
 48953 15160 FC01      		movw r30,r24
 48954 15162 2485      		ldd r18,Z+12
 48955 15164 3585      		ldd r19,Z+13
 48956 15166 8F8D      		ldd r24,Y+31
 48957 15168 98A1      		ldd r25,Y+32
 48958 1516a FC01      		movw r30,r24
 48959 1516c 4689      		ldd r20,Z+22
 48960 1516e 5789      		ldd r21,Z+23
 48961 15170 88AD      		ldd r24,Y+56
 48962 15172 99AD      		ldd r25,Y+57
 48963 15174 880F      		lsl r24
 48964 15176 991F      		rol r25
 48965 15178 840F      		add r24,r20
 48966 1517a 951F      		adc r25,r21
 48967 1517c FC01      		movw r30,r24
 48968 1517e 8081      		ld r24,Z
 48969 15180 9181      		ldd r25,Z+1
 48970 15182 880F      		lsl r24
 48971 15184 991F      		rol r25
 48972 15186 820F      		add r24,r18
 48973 15188 931F      		adc r25,r19
 48974 1518a FC01      		movw r30,r24
 48975 1518c 8081      		ld r24,Z
 48976 1518e 9181      		ldd r25,Z+1
 48977 15190 99AF      		std Y+57,r25
 48978 15192 88AF      		std Y+56,r24
4601:lp_solve_5.5/lp_presolve.c ****       jl = QS[ib-1].int4.intpar2;
 48979               		.loc 2 4601 0
 48980 15194 8B81      		ldd r24,Y+3
 48981 15196 9C81      		ldd r25,Y+4
 48982 15198 8150      		subi r24,1
 48983 1519a 904E      		sbci r25,-32
 48984 1519c 880F      		lsl r24
 48985 1519e 991F      		rol r25
 48986 151a0 880F      		lsl r24
 48987 151a2 991F      		rol r25
 48988 151a4 880F      		lsl r24
 48989 151a6 991F      		rol r25
 48990 151a8 29A1      		ldd r18,Y+33
 48991 151aa 3AA1      		ldd r19,Y+34
 48992 151ac 820F      		add r24,r18
 48993 151ae 931F      		adc r25,r19
 48994 151b0 FC01      		movw r30,r24
 48995 151b2 8481      		ldd r24,Z+4
 48996 151b4 9581      		ldd r25,Z+5
 48997 151b6 9BAF      		std Y+59,r25
 48998 151b8 8AAF      		std Y+58,r24
4602:lp_solve_5.5/lp_presolve.c **** 
4603:lp_solve_5.5/lp_presolve.c ****       /* Check if there is a window mismatch */
4604:lp_solve_5.5/lp_presolve.c ****       if((jjb < jb) || (jje > je) || (jjl > jl))
 48999               		.loc 2 4604 0
 49000 151ba 2DA1      		ldd r18,Y+37
 49001 151bc 3EA1      		ldd r19,Y+38
 49002 151be 8EA9      		ldd r24,Y+54
 49003 151c0 9FA9      		ldd r25,Y+55
 49004 151c2 2817      		cp r18,r24
 49005 151c4 3907      		cpc r19,r25
 49006 151c6 04F4      		brge .+2
 49007 151c8 00C0      		rjmp .L2020
 49008               		.loc 2 4604 0 is_stmt 0 discriminator 1
 49009 151ca 2FA1      		ldd r18,Y+39
 49010 151cc 38A5      		ldd r19,Y+40
 49011 151ce 88AD      		ldd r24,Y+56
 49012 151d0 99AD      		ldd r25,Y+57
 49013 151d2 8217      		cp r24,r18
 49014 151d4 9307      		cpc r25,r19
 49015 151d6 04F4      		brge .+2
 49016 151d8 00C0      		rjmp .L2020
 49017               		.loc 2 4604 0 discriminator 2
 49018 151da 29A5      		ldd r18,Y+41
 49019 151dc 3AA5      		ldd r19,Y+42
 49020 151de 8AAD      		ldd r24,Y+58
 49021 151e0 9BAD      		ldd r25,Y+59
 49022 151e2 8217      		cp r24,r18
 49023 151e4 9307      		cpc r25,r19
 49024 151e6 04F4      		brge .+2
 49025 151e8 00C0      		rjmp .L2020
4605:lp_solve_5.5/lp_presolve.c ****         goto NextEQ;
4606:lp_solve_5.5/lp_presolve.c **** 
4607:lp_solve_5.5/lp_presolve.c ****       /* We have a window match; now check if there is a (scalar) member-by-member
4608:lp_solve_5.5/lp_presolve.c ****         match as well.  We approach this in the following manner:
4609:lp_solve_5.5/lp_presolve.c ****           1) Get first (or next) member of active equality
4610:lp_solve_5.5/lp_presolve.c ****           2) Loop to matching member in the target constraint, but abandon if no match
4611:lp_solve_5.5/lp_presolve.c ****           3) Set ratio if this is the first match, otherwise compare ratio and abandon
4612:lp_solve_5.5/lp_presolve.c ****              on mismatch
4613:lp_solve_5.5/lp_presolve.c ****           4) Go to 1) of there are more elements in the active equality
4614:lp_solve_5.5/lp_presolve.c ****           5) Proceed to do sparsity elimination if we were successful. */
4615:lp_solve_5.5/lp_presolve.c ****       chsign = is_chsign(lp, i);
 49026               		.loc 2 4615 0 is_stmt 1
 49027 151ea 2981      		ldd r18,Y+1
 49028 151ec 3A81      		ldd r19,Y+2
 49029 151ee 8D8D      		ldd r24,Y+29
 49030 151f0 9E8D      		ldd r25,Y+30
 49031 151f2 B901      		movw r22,r18
 49032 151f4 0E94 0000 		call is_chsign
 49033 151f8 8BA7      		std Y+43,r24
4616:lp_solve_5.5/lp_presolve.c ****       test = ratio = 0.0;
 49034               		.loc 2 4616 0
 49035 151fa 198E      		std Y+25,__zero_reg__
 49036 151fc 1A8E      		std Y+26,__zero_reg__
 49037 151fe 1B8E      		std Y+27,__zero_reg__
 49038 15200 1C8E      		std Y+28,__zero_reg__
 49039 15202 898D      		ldd r24,Y+25
 49040 15204 9A8D      		ldd r25,Y+26
 49041 15206 AB8D      		ldd r26,Y+27
 49042 15208 BC8D      		ldd r27,Y+28
 49043 1520a 8D8B      		std Y+21,r24
 49044 1520c 9E8B      		std Y+22,r25
 49045 1520e AF8B      		std Y+23,r26
 49046 15210 B88F      		std Y+24,r27
4617:lp_solve_5.5/lp_presolve.c ****       itemEQ = 0;
 49047               		.loc 2 4617 0
 49048 15212 CE01      		movw r24,r28
 49049 15214 805C      		subi r24,-64
 49050 15216 9F4F      		sbci r25,-1
 49051 15218 FC01      		movw r30,r24
 49052 1521a 1182      		std Z+1,__zero_reg__
 49053 1521c 1082      		st Z,__zero_reg__
4618:lp_solve_5.5/lp_presolve.c ****       item = 0;
 49054               		.loc 2 4618 0
 49055 1521e 1FAE      		std Y+63,__zero_reg__
 49056 15220 1EAE      		std Y+62,__zero_reg__
4619:lp_solve_5.5/lp_presolve.c ****       nzidx[0] = 0;
 49057               		.loc 2 4619 0
 49058 15222 CE01      		movw r24,r28
 49059 15224 8E5B      		subi r24,-66
 49060 15226 9F4F      		sbci r25,-1
 49061 15228 FC01      		movw r30,r24
 49062 1522a 8081      		ld r24,Z
 49063 1522c 9181      		ldd r25,Z+1
 49064 1522e FC01      		movw r30,r24
 49065 15230 1182      		std Z+1,__zero_reg__
 49066 15232 1082      		st Z,__zero_reg__
4620:lp_solve_5.5/lp_presolve.c ****       while(((jjx = presolve_nextcol(psdata, ii, &itemEQ)) >= 0) && /*(itemEQ > 0) &&*/
 49067               		.loc 2 4620 0
 49068 15234 00C0      		rjmp .L2021
 49069               	.L2034:
4621:lp_solve_5.5/lp_presolve.c ****              (fabs(test-ratio) < psdata->epsvalue)) {
4622:lp_solve_5.5/lp_presolve.c ****         valueEQ = ROW_MAT_VALUE(jjx);
 49070               		.loc 2 4622 0
 49071 15236 8F8D      		ldd r24,Y+31
 49072 15238 98A1      		ldd r25,Y+32
 49073 1523a FC01      		movw r30,r24
 49074 1523c 2089      		ldd r18,Z+16
 49075 1523e 3189      		ldd r19,Z+17
 49076 15240 8F8D      		ldd r24,Y+31
 49077 15242 98A1      		ldd r25,Y+32
 49078 15244 FC01      		movw r30,r24
 49079 15246 4689      		ldd r20,Z+22
 49080 15248 5789      		ldd r21,Z+23
 49081 1524a 8CA5      		ldd r24,Y+44
 49082 1524c 9DA5      		ldd r25,Y+45
 49083 1524e 880F      		lsl r24
 49084 15250 991F      		rol r25
 49085 15252 840F      		add r24,r20
 49086 15254 951F      		adc r25,r21
 49087 15256 FC01      		movw r30,r24
 49088 15258 8081      		ld r24,Z
 49089 1525a 9181      		ldd r25,Z+1
 49090 1525c 880F      		lsl r24
 49091 1525e 991F      		rol r25
 49092 15260 880F      		lsl r24
 49093 15262 991F      		rol r25
 49094 15264 820F      		add r24,r18
 49095 15266 931F      		adc r25,r19
 49096 15268 FC01      		movw r30,r24
 49097 1526a 8081      		ld r24,Z
 49098 1526c 9181      		ldd r25,Z+1
 49099 1526e A281      		ldd r26,Z+2
 49100 15270 B381      		ldd r27,Z+3
 49101 15272 8EA7      		std Y+46,r24
 49102 15274 9FA7      		std Y+47,r25
 49103 15276 A8AB      		std Y+48,r26
 49104 15278 B9AB      		std Y+49,r27
4623:lp_solve_5.5/lp_presolve.c ****         if(valueEQ == 0)
 49105               		.loc 2 4623 0
 49106 1527a 20E0      		ldi r18,0
 49107 1527c 30E0      		ldi r19,0
 49108 1527e A901      		movw r20,r18
 49109 15280 6EA5      		ldd r22,Y+46
 49110 15282 7FA5      		ldd r23,Y+47
 49111 15284 88A9      		ldd r24,Y+48
 49112 15286 99A9      		ldd r25,Y+49
 49113 15288 0E94 0000 		call __eqsf2
 49114 1528c 8823      		tst r24
 49115 1528e 01F4      		brne .L2082
4624:lp_solve_5.5/lp_presolve.c ****           continue;
 49116               		.loc 2 4624 0
 49117 15290 00C0      		rjmp .L2021
 49118               	.L2082:
4625:lp_solve_5.5/lp_presolve.c ****         jx = 0;
 49119               		.loc 2 4625 0
 49120 15292 1C86      		std Y+12,__zero_reg__
 49121 15294 1B86      		std Y+11,__zero_reg__
4626:lp_solve_5.5/lp_presolve.c ****         jjx = ROW_MAT_COLNR(jjx);
 49122               		.loc 2 4626 0
 49123 15296 8F8D      		ldd r24,Y+31
 49124 15298 98A1      		ldd r25,Y+32
 49125 1529a FC01      		movw r30,r24
 49126 1529c 2485      		ldd r18,Z+12
 49127 1529e 3585      		ldd r19,Z+13
 49128 152a0 8F8D      		ldd r24,Y+31
 49129 152a2 98A1      		ldd r25,Y+32
 49130 152a4 FC01      		movw r30,r24
 49131 152a6 4689      		ldd r20,Z+22
 49132 152a8 5789      		ldd r21,Z+23
 49133 152aa 8CA5      		ldd r24,Y+44
 49134 152ac 9DA5      		ldd r25,Y+45
 49135 152ae 880F      		lsl r24
 49136 152b0 991F      		rol r25
 49137 152b2 840F      		add r24,r20
 49138 152b4 951F      		adc r25,r21
 49139 152b6 FC01      		movw r30,r24
 49140 152b8 8081      		ld r24,Z
 49141 152ba 9181      		ldd r25,Z+1
 49142 152bc 880F      		lsl r24
 49143 152be 991F      		rol r25
 49144 152c0 820F      		add r24,r18
 49145 152c2 931F      		adc r25,r19
 49146 152c4 FC01      		movw r30,r24
 49147 152c6 8081      		ld r24,Z
 49148 152c8 9181      		ldd r25,Z+1
 49149 152ca 9DA7      		std Y+45,r25
 49150 152cc 8CA7      		std Y+44,r24
4627:lp_solve_5.5/lp_presolve.c ****         for(k = presolve_nextcol(psdata, i, &item);
 49151               		.loc 2 4627 0
 49152 152ce AE01      		movw r20,r28
 49153 152d0 425C      		subi r20,-62
 49154 152d2 5F4F      		sbci r21,-1
 49155 152d4 2981      		ldd r18,Y+1
 49156 152d6 3A81      		ldd r19,Y+2
 49157 152d8 CE01      		movw r24,r28
 49158 152da 8A5B      		subi r24,-70
 49159 152dc 9F4F      		sbci r25,-1
 49160 152de FC01      		movw r30,r24
 49161 152e0 8081      		ld r24,Z
 49162 152e2 9181      		ldd r25,Z+1
 49163 152e4 B901      		movw r22,r18
 49164 152e6 0E94 0000 		call presolve_nextcol
 49165 152ea 9887      		std Y+8,r25
 49166 152ec 8F83      		std Y+7,r24
 49167 152ee 00C0      		rjmp .L2024
 49168               	.L2032:
4628:lp_solve_5.5/lp_presolve.c ****             (jx < jjx) && (item > 0);
4629:lp_solve_5.5/lp_presolve.c ****             k = presolve_nextcol(psdata, i, &item)) {
4630:lp_solve_5.5/lp_presolve.c ****           jx = ROW_MAT_COLNR(k);
 49169               		.loc 2 4630 0
 49170 152f0 8F8D      		ldd r24,Y+31
 49171 152f2 98A1      		ldd r25,Y+32
 49172 152f4 FC01      		movw r30,r24
 49173 152f6 2485      		ldd r18,Z+12
 49174 152f8 3585      		ldd r19,Z+13
 49175 152fa 8F8D      		ldd r24,Y+31
 49176 152fc 98A1      		ldd r25,Y+32
 49177 152fe FC01      		movw r30,r24
 49178 15300 4689      		ldd r20,Z+22
 49179 15302 5789      		ldd r21,Z+23
 49180 15304 8F81      		ldd r24,Y+7
 49181 15306 9885      		ldd r25,Y+8
 49182 15308 880F      		lsl r24
 49183 1530a 991F      		rol r25
 49184 1530c 840F      		add r24,r20
 49185 1530e 951F      		adc r25,r21
 49186 15310 FC01      		movw r30,r24
 49187 15312 8081      		ld r24,Z
 49188 15314 9181      		ldd r25,Z+1
 49189 15316 880F      		lsl r24
 49190 15318 991F      		rol r25
 49191 1531a 820F      		add r24,r18
 49192 1531c 931F      		adc r25,r19
 49193 1531e FC01      		movw r30,r24
 49194 15320 8081      		ld r24,Z
 49195 15322 9181      		ldd r25,Z+1
 49196 15324 9C87      		std Y+12,r25
 49197 15326 8B87      		std Y+11,r24
4631:lp_solve_5.5/lp_presolve.c ****           /* Do we have a column index match? */
4632:lp_solve_5.5/lp_presolve.c ****           if(jx == jjx) {
 49198               		.loc 2 4632 0
 49199 15328 2B85      		ldd r18,Y+11
 49200 1532a 3C85      		ldd r19,Y+12
 49201 1532c 8CA5      		ldd r24,Y+44
 49202 1532e 9DA5      		ldd r25,Y+45
 49203 15330 2817      		cp r18,r24
 49204 15332 3907      		cpc r19,r25
 49205 15334 01F0      		breq .+2
 49206 15336 00C0      		rjmp .L2025
4633:lp_solve_5.5/lp_presolve.c ****             value = ROW_MAT_VALUE(k);
 49207               		.loc 2 4633 0
 49208 15338 8F8D      		ldd r24,Y+31
 49209 1533a 98A1      		ldd r25,Y+32
 49210 1533c FC01      		movw r30,r24
 49211 1533e 2089      		ldd r18,Z+16
 49212 15340 3189      		ldd r19,Z+17
 49213 15342 8F8D      		ldd r24,Y+31
 49214 15344 98A1      		ldd r25,Y+32
 49215 15346 FC01      		movw r30,r24
 49216 15348 4689      		ldd r20,Z+22
 49217 1534a 5789      		ldd r21,Z+23
 49218 1534c 8F81      		ldd r24,Y+7
 49219 1534e 9885      		ldd r25,Y+8
 49220 15350 880F      		lsl r24
 49221 15352 991F      		rol r25
 49222 15354 840F      		add r24,r20
 49223 15356 951F      		adc r25,r21
 49224 15358 FC01      		movw r30,r24
 49225 1535a 8081      		ld r24,Z
 49226 1535c 9181      		ldd r25,Z+1
 49227 1535e 880F      		lsl r24
 49228 15360 991F      		rol r25
 49229 15362 880F      		lsl r24
 49230 15364 991F      		rol r25
 49231 15366 820F      		add r24,r18
 49232 15368 931F      		adc r25,r19
 49233 1536a FC01      		movw r30,r24
 49234 1536c 8081      		ld r24,Z
 49235 1536e 9181      		ldd r25,Z+1
 49236 15370 A281      		ldd r26,Z+2
 49237 15372 B381      		ldd r27,Z+3
 49238 15374 8AAB      		std Y+50,r24
 49239 15376 9BAB      		std Y+51,r25
 49240 15378 ACAB      		std Y+52,r26
 49241 1537a BDAB      		std Y+53,r27
4634:lp_solve_5.5/lp_presolve.c ****             /* Abandon if we have a zero value */
4635:lp_solve_5.5/lp_presolve.c ****             if(value == 0)
 49242               		.loc 2 4635 0
 49243 1537c 20E0      		ldi r18,0
 49244 1537e 30E0      		ldi r19,0
 49245 15380 A901      		movw r20,r18
 49246 15382 6AA9      		ldd r22,Y+50
 49247 15384 7BA9      		ldd r23,Y+51
 49248 15386 8CA9      		ldd r24,Y+52
 49249 15388 9DA9      		ldd r25,Y+53
 49250 1538a 0E94 0000 		call __eqsf2
 49251 1538e 8823      		tst r24
 49252 15390 01F4      		brne .+2
 49253 15392 00C0      		rjmp .L2090
4636:lp_solve_5.5/lp_presolve.c ****               goto NextEQ;
4637:lp_solve_5.5/lp_presolve.c ****             if(ratio == 0.0) {
 49254               		.loc 2 4637 0
 49255 15394 20E0      		ldi r18,0
 49256 15396 30E0      		ldi r19,0
 49257 15398 A901      		movw r20,r18
 49258 1539a 698D      		ldd r22,Y+25
 49259 1539c 7A8D      		ldd r23,Y+26
 49260 1539e 8B8D      		ldd r24,Y+27
 49261 153a0 9C8D      		ldd r25,Y+28
 49262 153a2 0E94 0000 		call __eqsf2
 49263 153a6 8823      		tst r24
 49264 153a8 01F4      		brne .L2083
4638:lp_solve_5.5/lp_presolve.c ****               test = ratio = value / valueEQ;
 49265               		.loc 2 4638 0
 49266 153aa 2EA5      		ldd r18,Y+46
 49267 153ac 3FA5      		ldd r19,Y+47
 49268 153ae 48A9      		ldd r20,Y+48
 49269 153b0 59A9      		ldd r21,Y+49
 49270 153b2 6AA9      		ldd r22,Y+50
 49271 153b4 7BA9      		ldd r23,Y+51
 49272 153b6 8CA9      		ldd r24,Y+52
 49273 153b8 9DA9      		ldd r25,Y+53
 49274 153ba 0E94 0000 		call __divsf3
 49275 153be DC01      		movw r26,r24
 49276 153c0 CB01      		movw r24,r22
 49277 153c2 898F      		std Y+25,r24
 49278 153c4 9A8F      		std Y+26,r25
 49279 153c6 AB8F      		std Y+27,r26
 49280 153c8 BC8F      		std Y+28,r27
 49281 153ca 898D      		ldd r24,Y+25
 49282 153cc 9A8D      		ldd r25,Y+26
 49283 153ce AB8D      		ldd r26,Y+27
 49284 153d0 BC8D      		ldd r27,Y+28
 49285 153d2 8D8B      		std Y+21,r24
 49286 153d4 9E8B      		std Y+22,r25
 49287 153d6 AF8B      		std Y+23,r26
 49288 153d8 B88F      		std Y+24,r27
 49289 153da 00C0      		rjmp .L2030
 49290               	.L2083:
4639:lp_solve_5.5/lp_presolve.c ****             }
4640:lp_solve_5.5/lp_presolve.c ****             else
4641:lp_solve_5.5/lp_presolve.c ****               test = value / valueEQ;
 49291               		.loc 2 4641 0
 49292 153dc 2EA5      		ldd r18,Y+46
 49293 153de 3FA5      		ldd r19,Y+47
 49294 153e0 48A9      		ldd r20,Y+48
 49295 153e2 59A9      		ldd r21,Y+49
 49296 153e4 6AA9      		ldd r22,Y+50
 49297 153e6 7BA9      		ldd r23,Y+51
 49298 153e8 8CA9      		ldd r24,Y+52
 49299 153ea 9DA9      		ldd r25,Y+53
 49300 153ec 0E94 0000 		call __divsf3
 49301 153f0 DC01      		movw r26,r24
 49302 153f2 CB01      		movw r24,r22
 49303 153f4 8D8B      		std Y+21,r24
 49304 153f6 9E8B      		std Y+22,r25
 49305 153f8 AF8B      		std Y+23,r26
 49306 153fa B88F      		std Y+24,r27
 49307               	.L2030:
4642:lp_solve_5.5/lp_presolve.c ****            /* Store nz index */
4643:lp_solve_5.5/lp_presolve.c ****             nzidx[++nzidx[0]] = k;
 49308               		.loc 2 4643 0
 49309 153fc CE01      		movw r24,r28
 49310 153fe 8E5B      		subi r24,-66
 49311 15400 9F4F      		sbci r25,-1
 49312 15402 FC01      		movw r30,r24
 49313 15404 2081      		ld r18,Z
 49314 15406 3181      		ldd r19,Z+1
 49315 15408 CE01      		movw r24,r28
 49316 1540a 8E5B      		subi r24,-66
 49317 1540c 9F4F      		sbci r25,-1
 49318 1540e FC01      		movw r30,r24
 49319 15410 8081      		ld r24,Z
 49320 15412 9181      		ldd r25,Z+1
 49321 15414 FC01      		movw r30,r24
 49322 15416 4081      		ld r20,Z
 49323 15418 5181      		ldd r21,Z+1
 49324 1541a 4F5F      		subi r20,-1
 49325 1541c 5F4F      		sbci r21,-1
 49326 1541e FC01      		movw r30,r24
 49327 15420 5183      		std Z+1,r21
 49328 15422 4083      		st Z,r20
 49329 15424 FC01      		movw r30,r24
 49330 15426 8081      		ld r24,Z
 49331 15428 9181      		ldd r25,Z+1
 49332 1542a 880F      		lsl r24
 49333 1542c 991F      		rol r25
 49334 1542e 820F      		add r24,r18
 49335 15430 931F      		adc r25,r19
 49336 15432 2F81      		ldd r18,Y+7
 49337 15434 3885      		ldd r19,Y+8
 49338 15436 FC01      		movw r30,r24
 49339 15438 3183      		std Z+1,r19
 49340 1543a 2083      		st Z,r18
4644:lp_solve_5.5/lp_presolve.c ****             break;
 49341               		.loc 2 4644 0
 49342 1543c 00C0      		rjmp .L2021
 49343               	.L2025:
4645:lp_solve_5.5/lp_presolve.c ****           }
4646:lp_solve_5.5/lp_presolve.c ****           /* Give up matching if there is overshooting */
4647:lp_solve_5.5/lp_presolve.c ****           else if(jx > jjx)
 49344               		.loc 2 4647 0
 49345 1543e 2B85      		ldd r18,Y+11
 49346 15440 3C85      		ldd r19,Y+12
 49347 15442 8CA5      		ldd r24,Y+44
 49348 15444 9DA5      		ldd r25,Y+45
 49349 15446 8217      		cp r24,r18
 49350 15448 9307      		cpc r25,r19
 49351 1544a 04F4      		brge .+2
 49352 1544c 00C0      		rjmp .L2091
4629:lp_solve_5.5/lp_presolve.c ****           jx = ROW_MAT_COLNR(k);
 49353               		.loc 2 4629 0
 49354 1544e AE01      		movw r20,r28
 49355 15450 425C      		subi r20,-62
 49356 15452 5F4F      		sbci r21,-1
 49357 15454 2981      		ldd r18,Y+1
 49358 15456 3A81      		ldd r19,Y+2
 49359 15458 CE01      		movw r24,r28
 49360 1545a 8A5B      		subi r24,-70
 49361 1545c 9F4F      		sbci r25,-1
 49362 1545e FC01      		movw r30,r24
 49363 15460 8081      		ld r24,Z
 49364 15462 9181      		ldd r25,Z+1
 49365 15464 B901      		movw r22,r18
 49366 15466 0E94 0000 		call presolve_nextcol
 49367 1546a 9887      		std Y+8,r25
 49368 1546c 8F83      		std Y+7,r24
 49369               	.L2024:
4627:lp_solve_5.5/lp_presolve.c ****             (jx < jjx) && (item > 0);
 49370               		.loc 2 4627 0 discriminator 1
 49371 1546e 2B85      		ldd r18,Y+11
 49372 15470 3C85      		ldd r19,Y+12
 49373 15472 8CA5      		ldd r24,Y+44
 49374 15474 9DA5      		ldd r25,Y+45
 49375 15476 2817      		cp r18,r24
 49376 15478 3907      		cpc r19,r25
 49377 1547a 04F4      		brge .L2021
4628:lp_solve_5.5/lp_presolve.c ****             k = presolve_nextcol(psdata, i, &item)) {
 49378               		.loc 2 4628 0
 49379 1547c 8EAD      		ldd r24,Y+62
 49380 1547e 9FAD      		ldd r25,Y+63
 49381 15480 1816      		cp __zero_reg__,r24
 49382 15482 1906      		cpc __zero_reg__,r25
 49383 15484 04F4      		brge .+2
 49384 15486 00C0      		rjmp .L2032
 49385               	.L2021:
4620:lp_solve_5.5/lp_presolve.c ****              (fabs(test-ratio) < psdata->epsvalue)) {
 49386               		.loc 2 4620 0
 49387 15488 AE01      		movw r20,r28
 49388 1548a 405C      		subi r20,-64
 49389 1548c 5F4F      		sbci r21,-1
 49390 1548e 2BA1      		ldd r18,Y+35
 49391 15490 3CA1      		ldd r19,Y+36
 49392 15492 CE01      		movw r24,r28
 49393 15494 8A5B      		subi r24,-70
 49394 15496 9F4F      		sbci r25,-1
 49395 15498 FC01      		movw r30,r24
 49396 1549a 8081      		ld r24,Z
 49397 1549c 9181      		ldd r25,Z+1
 49398 1549e B901      		movw r22,r18
 49399 154a0 0E94 0000 		call presolve_nextcol
 49400 154a4 9DA7      		std Y+45,r25
 49401 154a6 8CA7      		std Y+44,r24
 49402 154a8 8CA5      		ldd r24,Y+44
 49403 154aa 9DA5      		ldd r25,Y+45
 49404 154ac 9923      		tst r25
 49405 154ae 04F0      		brlt .L2033
4621:lp_solve_5.5/lp_presolve.c ****         valueEQ = ROW_MAT_VALUE(jjx);
 49406               		.loc 2 4621 0 discriminator 1
 49407 154b0 298D      		ldd r18,Y+25
 49408 154b2 3A8D      		ldd r19,Y+26
 49409 154b4 4B8D      		ldd r20,Y+27
 49410 154b6 5C8D      		ldd r21,Y+28
 49411 154b8 6D89      		ldd r22,Y+21
 49412 154ba 7E89      		ldd r23,Y+22
 49413 154bc 8F89      		ldd r24,Y+23
 49414 154be 988D      		ldd r25,Y+24
 49415 154c0 0E94 0000 		call __subsf3
 49416 154c4 DC01      		movw r26,r24
 49417 154c6 CB01      		movw r24,r22
 49418 154c8 BF77      		andi r27,0x7f
 49419 154ca 9E01      		movw r18,r28
 49420 154cc 2A5B      		subi r18,-70
 49421 154ce 3F4F      		sbci r19,-1
 49422 154d0 F901      		movw r30,r18
 49423 154d2 2081      		ld r18,Z
 49424 154d4 3181      		ldd r19,Z+1
 49425 154d6 F901      		movw r30,r18
 49426 154d8 2489      		ldd r18,Z+20
 49427 154da 3589      		ldd r19,Z+21
 49428 154dc 4689      		ldd r20,Z+22
 49429 154de 5789      		ldd r21,Z+23
4620:lp_solve_5.5/lp_presolve.c ****              (fabs(test-ratio) < psdata->epsvalue)) {
 49430               		.loc 2 4620 0 discriminator 1
 49431 154e0 BC01      		movw r22,r24
 49432 154e2 CD01      		movw r24,r26
 49433 154e4 0E94 0000 		call __ltsf2
 49434 154e8 8823      		tst r24
 49435 154ea 04F4      		brge .+2
 49436 154ec 00C0      		rjmp .L2034
 49437               	.L2033:
4648:lp_solve_5.5/lp_presolve.c ****             goto NextEQ;
4649:lp_solve_5.5/lp_presolve.c ****         }
4650:lp_solve_5.5/lp_presolve.c ****       }
4651:lp_solve_5.5/lp_presolve.c **** 
4652:lp_solve_5.5/lp_presolve.c ****       /* We were successful if the equality was completely traversed */
4653:lp_solve_5.5/lp_presolve.c ****       if((itemEQ == 0) && (nzidx[0] > 0) && (fabs(test-ratio) < psdata->epsvalue)) {
 49438               		.loc 2 4653 0
 49439 154ee CE01      		movw r24,r28
 49440 154f0 805C      		subi r24,-64
 49441 154f2 9F4F      		sbci r25,-1
 49442 154f4 FC01      		movw r30,r24
 49443 154f6 8081      		ld r24,Z
 49444 154f8 9181      		ldd r25,Z+1
 49445 154fa 892B      		or r24,r25
 49446 154fc 01F0      		breq .+2
 49447 154fe 00C0      		rjmp .L2035
 49448               		.loc 2 4653 0 is_stmt 0 discriminator 1
 49449 15500 CE01      		movw r24,r28
 49450 15502 8E5B      		subi r24,-66
 49451 15504 9F4F      		sbci r25,-1
 49452 15506 FC01      		movw r30,r24
 49453 15508 8081      		ld r24,Z
 49454 1550a 9181      		ldd r25,Z+1
 49455 1550c FC01      		movw r30,r24
 49456 1550e 8081      		ld r24,Z
 49457 15510 9181      		ldd r25,Z+1
 49458 15512 1816      		cp __zero_reg__,r24
 49459 15514 1906      		cpc __zero_reg__,r25
 49460 15516 04F0      		brlt .+2
 49461 15518 00C0      		rjmp .L2035
 49462               		.loc 2 4653 0 discriminator 2
 49463 1551a 298D      		ldd r18,Y+25
 49464 1551c 3A8D      		ldd r19,Y+26
 49465 1551e 4B8D      		ldd r20,Y+27
 49466 15520 5C8D      		ldd r21,Y+28
 49467 15522 6D89      		ldd r22,Y+21
 49468 15524 7E89      		ldd r23,Y+22
 49469 15526 8F89      		ldd r24,Y+23
 49470 15528 988D      		ldd r25,Y+24
 49471 1552a 0E94 0000 		call __subsf3
 49472 1552e DC01      		movw r26,r24
 49473 15530 CB01      		movw r24,r22
 49474 15532 BF77      		andi r27,0x7f
 49475 15534 9E01      		movw r18,r28
 49476 15536 2A5B      		subi r18,-70
 49477 15538 3F4F      		sbci r19,-1
 49478 1553a F901      		movw r30,r18
 49479 1553c 2081      		ld r18,Z
 49480 1553e 3181      		ldd r19,Z+1
 49481 15540 F901      		movw r30,r18
 49482 15542 2489      		ldd r18,Z+20
 49483 15544 3589      		ldd r19,Z+21
 49484 15546 4689      		ldd r20,Z+22
 49485 15548 5789      		ldd r21,Z+23
 49486 1554a BC01      		movw r22,r24
 49487 1554c CD01      		movw r24,r26
 49488 1554e 0E94 0000 		call __ltsf2
 49489 15552 8823      		tst r24
 49490 15554 04F0      		brlt .+2
 49491 15556 00C0      		rjmp .L2035
4654:lp_solve_5.5/lp_presolve.c **** 
4655:lp_solve_5.5/lp_presolve.c ****         /* Check if we have found parametrically indentical constraints */
4656:lp_solve_5.5/lp_presolve.c ****         if(presolve_rowlength(psdata, i) == presolve_rowlength(psdata,ii)) {
 49492               		.loc 2 4656 0 is_stmt 1
 49493 15558 2981      		ldd r18,Y+1
 49494 1555a 3A81      		ldd r19,Y+2
 49495 1555c CE01      		movw r24,r28
 49496 1555e 8A5B      		subi r24,-70
 49497 15560 9F4F      		sbci r25,-1
 49498 15562 FC01      		movw r30,r24
 49499 15564 8081      		ld r24,Z
 49500 15566 9181      		ldd r25,Z+1
 49501 15568 B901      		movw r22,r18
 49502 1556a 0E94 0000 		call presolve_rowlength
 49503 1556e 8C01      		movw r16,r24
 49504 15570 2BA1      		ldd r18,Y+35
 49505 15572 3CA1      		ldd r19,Y+36
 49506 15574 CE01      		movw r24,r28
 49507 15576 8A5B      		subi r24,-70
 49508 15578 9F4F      		sbci r25,-1
 49509 1557a FC01      		movw r30,r24
 49510 1557c 8081      		ld r24,Z
 49511 1557e 9181      		ldd r25,Z+1
 49512 15580 B901      		movw r22,r18
 49513 15582 0E94 0000 		call presolve_rowlength
 49514 15586 0817      		cp r16,r24
 49515 15588 1907      		cpc r17,r25
 49516 1558a 01F0      		breq .+2
 49517 1558c 00C0      		rjmp .L2037
4657:lp_solve_5.5/lp_presolve.c **** 
4658:lp_solve_5.5/lp_presolve.c ****           value = lp->orig_rhs[i];
 49518               		.loc 2 4658 0
 49519 1558e 8D8D      		ldd r24,Y+29
 49520 15590 9E8D      		ldd r25,Y+30
 49521 15592 8A55      		subi r24,90
 49522 15594 9D4F      		sbci r25,-3
 49523 15596 FC01      		movw r30,r24
 49524 15598 2081      		ld r18,Z
 49525 1559a 3181      		ldd r19,Z+1
 49526 1559c 8981      		ldd r24,Y+1
 49527 1559e 9A81      		ldd r25,Y+2
 49528 155a0 880F      		lsl r24
 49529 155a2 991F      		rol r25
 49530 155a4 880F      		lsl r24
 49531 155a6 991F      		rol r25
 49532 155a8 820F      		add r24,r18
 49533 155aa 931F      		adc r25,r19
 49534 155ac FC01      		movw r30,r24
 49535 155ae 8081      		ld r24,Z
 49536 155b0 9181      		ldd r25,Z+1
 49537 155b2 A281      		ldd r26,Z+2
 49538 155b4 B381      		ldd r27,Z+3
 49539 155b6 8AAB      		std Y+50,r24
 49540 155b8 9BAB      		std Y+51,r25
 49541 155ba ACAB      		std Y+52,r26
 49542 155bc BDAB      		std Y+53,r27
4659:lp_solve_5.5/lp_presolve.c ****           valueEQ = lp->orig_rhs[ii];
 49543               		.loc 2 4659 0
 49544 155be 8D8D      		ldd r24,Y+29
 49545 155c0 9E8D      		ldd r25,Y+30
 49546 155c2 8A55      		subi r24,90
 49547 155c4 9D4F      		sbci r25,-3
 49548 155c6 FC01      		movw r30,r24
 49549 155c8 2081      		ld r18,Z
 49550 155ca 3181      		ldd r19,Z+1
 49551 155cc 8BA1      		ldd r24,Y+35
 49552 155ce 9CA1      		ldd r25,Y+36
 49553 155d0 880F      		lsl r24
 49554 155d2 991F      		rol r25
 49555 155d4 880F      		lsl r24
 49556 155d6 991F      		rol r25
 49557 155d8 820F      		add r24,r18
 49558 155da 931F      		adc r25,r19
 49559 155dc FC01      		movw r30,r24
 49560 155de 8081      		ld r24,Z
 49561 155e0 9181      		ldd r25,Z+1
 49562 155e2 A281      		ldd r26,Z+2
 49563 155e4 B381      		ldd r27,Z+3
 49564 155e6 8EA7      		std Y+46,r24
 49565 155e8 9FA7      		std Y+47,r25
 49566 155ea A8AB      		std Y+48,r26
 49567 155ec B9AB      		std Y+49,r27
4660:lp_solve_5.5/lp_presolve.c **** 
4661:lp_solve_5.5/lp_presolve.c ****           /* Are they both equalities? */
4662:lp_solve_5.5/lp_presolve.c ****           if(is_constr_type(lp, i, EQ)) {
 49568               		.loc 2 4662 0
 49569 155ee 2981      		ldd r18,Y+1
 49570 155f0 3A81      		ldd r19,Y+2
 49571 155f2 8D8D      		ldd r24,Y+29
 49572 155f4 9E8D      		ldd r25,Y+30
 49573 155f6 43E0      		ldi r20,lo8(3)
 49574 155f8 50E0      		ldi r21,0
 49575 155fa B901      		movw r22,r18
 49576 155fc 0E94 0000 		call is_constr_type
 49577 15600 8823      		tst r24
 49578 15602 01F4      		brne .+2
 49579 15604 00C0      		rjmp .L2038
4663:lp_solve_5.5/lp_presolve.c ****             /* Determine applicable ratio for the RHS */
4664:lp_solve_5.5/lp_presolve.c ****             if(fabs(valueEQ) < psdata->epsvalue) {
 49580               		.loc 2 4664 0
 49581 15606 8EA5      		ldd r24,Y+46
 49582 15608 9FA5      		ldd r25,Y+47
 49583 1560a A8A9      		ldd r26,Y+48
 49584 1560c B9A9      		ldd r27,Y+49
 49585 1560e BF77      		andi r27,0x7f
 49586 15610 9E01      		movw r18,r28
 49587 15612 2A5B      		subi r18,-70
 49588 15614 3F4F      		sbci r19,-1
 49589 15616 F901      		movw r30,r18
 49590 15618 2081      		ld r18,Z
 49591 1561a 3181      		ldd r19,Z+1
 49592 1561c F901      		movw r30,r18
 49593 1561e 2489      		ldd r18,Z+20
 49594 15620 3589      		ldd r19,Z+21
 49595 15622 4689      		ldd r20,Z+22
 49596 15624 5789      		ldd r21,Z+23
 49597 15626 BC01      		movw r22,r24
 49598 15628 CD01      		movw r24,r26
 49599 1562a 0E94 0000 		call __ltsf2
 49600 1562e 8823      		tst r24
 49601 15630 04F4      		brge .L2084
4665:lp_solve_5.5/lp_presolve.c ****               if(fabs(value) < psdata->epsvalue)
 49602               		.loc 2 4665 0
 49603 15632 8AA9      		ldd r24,Y+50
 49604 15634 9BA9      		ldd r25,Y+51
 49605 15636 ACA9      		ldd r26,Y+52
 49606 15638 BDA9      		ldd r27,Y+53
 49607 1563a BF77      		andi r27,0x7f
 49608 1563c 9E01      		movw r18,r28
 49609 1563e 2A5B      		subi r18,-70
 49610 15640 3F4F      		sbci r19,-1
 49611 15642 F901      		movw r30,r18
 49612 15644 2081      		ld r18,Z
 49613 15646 3181      		ldd r19,Z+1
 49614 15648 F901      		movw r30,r18
 49615 1564a 2489      		ldd r18,Z+20
 49616 1564c 3589      		ldd r19,Z+21
 49617 1564e 4689      		ldd r20,Z+22
 49618 15650 5789      		ldd r21,Z+23
 49619 15652 BC01      		movw r22,r24
 49620 15654 CD01      		movw r24,r26
 49621 15656 0E94 0000 		call __ltsf2
 49622 1565a 8823      		tst r24
 49623 1565c 04F4      		brge .L2085
4666:lp_solve_5.5/lp_presolve.c ****                 test = ratio;
 49624               		.loc 2 4666 0
 49625 1565e 898D      		ldd r24,Y+25
 49626 15660 9A8D      		ldd r25,Y+26
 49627 15662 AB8D      		ldd r26,Y+27
 49628 15664 BC8D      		ldd r27,Y+28
 49629 15666 8D8B      		std Y+21,r24
 49630 15668 9E8B      		std Y+22,r25
 49631 1566a AF8B      		std Y+23,r26
 49632 1566c B88F      		std Y+24,r27
 49633 1566e 00C0      		rjmp .L2044
 49634               	.L2085:
4667:lp_solve_5.5/lp_presolve.c ****               else
4668:lp_solve_5.5/lp_presolve.c ****                 test = lp->infinite;
 49635               		.loc 2 4668 0
 49636 15670 8D8D      		ldd r24,Y+29
 49637 15672 9E8D      		ldd r25,Y+30
 49638 15674 865F      		subi r24,-10
 49639 15676 9C4F      		sbci r25,-4
 49640 15678 FC01      		movw r30,r24
 49641 1567a 8081      		ld r24,Z
 49642 1567c 9181      		ldd r25,Z+1
 49643 1567e A281      		ldd r26,Z+2
 49644 15680 B381      		ldd r27,Z+3
 49645 15682 8D8B      		std Y+21,r24
 49646 15684 9E8B      		std Y+22,r25
 49647 15686 AF8B      		std Y+23,r26
 49648 15688 B88F      		std Y+24,r27
 49649 1568a 00C0      		rjmp .L2044
 49650               	.L2084:
4669:lp_solve_5.5/lp_presolve.c ****             }
4670:lp_solve_5.5/lp_presolve.c ****             else
4671:lp_solve_5.5/lp_presolve.c ****               test = value / valueEQ;
 49651               		.loc 2 4671 0
 49652 1568c 2EA5      		ldd r18,Y+46
 49653 1568e 3FA5      		ldd r19,Y+47
 49654 15690 48A9      		ldd r20,Y+48
 49655 15692 59A9      		ldd r21,Y+49
 49656 15694 6AA9      		ldd r22,Y+50
 49657 15696 7BA9      		ldd r23,Y+51
 49658 15698 8CA9      		ldd r24,Y+52
 49659 1569a 9DA9      		ldd r25,Y+53
 49660 1569c 0E94 0000 		call __divsf3
 49661 156a0 DC01      		movw r26,r24
 49662 156a2 CB01      		movw r24,r22
 49663 156a4 8D8B      		std Y+21,r24
 49664 156a6 9E8B      		std Y+22,r25
 49665 156a8 AF8B      		std Y+23,r26
 49666 156aa B88F      		std Y+24,r27
 49667               	.L2044:
4672:lp_solve_5.5/lp_presolve.c ****             /* Check for infeasibility */
4673:lp_solve_5.5/lp_presolve.c ****             if(fabs(test-ratio) > psdata->epsvalue) {
 49668               		.loc 2 4673 0
 49669 156ac 298D      		ldd r18,Y+25
 49670 156ae 3A8D      		ldd r19,Y+26
 49671 156b0 4B8D      		ldd r20,Y+27
 49672 156b2 5C8D      		ldd r21,Y+28
 49673 156b4 6D89      		ldd r22,Y+21
 49674 156b6 7E89      		ldd r23,Y+22
 49675 156b8 8F89      		ldd r24,Y+23
 49676 156ba 988D      		ldd r25,Y+24
 49677 156bc 0E94 0000 		call __subsf3
 49678 156c0 DC01      		movw r26,r24
 49679 156c2 CB01      		movw r24,r22
 49680 156c4 BF77      		andi r27,0x7f
 49681 156c6 9E01      		movw r18,r28
 49682 156c8 2A5B      		subi r18,-70
 49683 156ca 3F4F      		sbci r19,-1
 49684 156cc F901      		movw r30,r18
 49685 156ce 2081      		ld r18,Z
 49686 156d0 3181      		ldd r19,Z+1
 49687 156d2 F901      		movw r30,r18
 49688 156d4 2489      		ldd r18,Z+20
 49689 156d6 3589      		ldd r19,Z+21
 49690 156d8 4689      		ldd r20,Z+22
 49691 156da 5789      		ldd r21,Z+23
 49692 156dc BC01      		movw r22,r24
 49693 156de CD01      		movw r24,r26
 49694 156e0 0E94 0000 		call __gtsf2
 49695 156e4 1816      		cp __zero_reg__,r24
 49696 156e6 04F4      		brge .L2086
4674:lp_solve_5.5/lp_presolve.c ****               report(lp, NORMAL, "presolve_sparser: Infeasibility of relatively equal constraints %
 49697               		.loc 2 4674 0
 49698 156e8 8CA1      		ldd r24,Y+36
 49699 156ea 8F93      		push r24
 49700 156ec 8BA1      		ldd r24,Y+35
 49701 156ee 8F93      		push r24
 49702 156f0 8A81      		ldd r24,Y+2
 49703 156f2 8F93      		push r24
 49704 156f4 8981      		ldd r24,Y+1
 49705 156f6 8F93      		push r24
 49706 156f8 80E0      		ldi r24,lo8(.LC55)
 49707 156fa 90E0      		ldi r25,hi8(.LC55)
 49708 156fc 892F      		mov r24,r25
 49709 156fe 8F93      		push r24
 49710 15700 80E0      		ldi r24,lo8(.LC55)
 49711 15702 90E0      		ldi r25,hi8(.LC55)
 49712 15704 8F93      		push r24
 49713 15706 1F92      		push __zero_reg__
 49714 15708 84E0      		ldi r24,lo8(4)
 49715 1570a 8F93      		push r24
 49716 1570c 8E8D      		ldd r24,Y+30
 49717 1570e 8F93      		push r24
 49718 15710 8D8D      		ldd r24,Y+29
 49719 15712 8F93      		push r24
 49720 15714 0E94 0000 		call report
 49721 15718 4DB7      		in r20,__SP_L__
 49722 1571a 5EB7      		in r21,__SP_H__
 49723 1571c 465F      		subi r20,-10
 49724 1571e 5F4F      		sbci r21,-1
 49725 15720 0FB6      		in __tmp_reg__,__SREG__
 49726 15722 F894      		cli
 49727 15724 DEBF      		out __SP_H__,r29
 49728 15726 0FBE      		out __SREG__,__tmp_reg__
 49729 15728 CDBF      		out __SP_L__,r28
4675:lp_solve_5.5/lp_presolve.c ****                                  i, ii);
4676:lp_solve_5.5/lp_presolve.c ****               status = presolve_setstatus(psdata, INFEASIBLE);
 49730               		.loc 2 4676 0
 49731 1572a CE01      		movw r24,r28
 49732 1572c 8A5B      		subi r24,-70
 49733 1572e 9F4F      		sbci r25,-1
 49734 15730 FC01      		movw r30,r24
 49735 15732 8081      		ld r24,Z
 49736 15734 9181      		ldd r25,Z+1
 49737 15736 20E0      		ldi r18,lo8(.LC21)
 49738 15738 30E0      		ldi r19,hi8(.LC21)
 49739 1573a 44E4      		ldi r20,lo8(68)
 49740 1573c 52E1      		ldi r21,lo8(18)
 49741 1573e 62E0      		ldi r22,lo8(2)
 49742 15740 70E0      		ldi r23,0
 49743 15742 0E94 0000 		call presolve_setstatusex
 49744 15746 9E87      		std Y+14,r25
 49745 15748 8D87      		std Y+13,r24
4677:lp_solve_5.5/lp_presolve.c ****               goto Finish;
 49746               		.loc 2 4677 0
 49747 1574a 00C0      		rjmp .L2047
 49748               	.L2086:
4678:lp_solve_5.5/lp_presolve.c ****             }
4679:lp_solve_5.5/lp_presolve.c ****             /* Otherwise we can delete a redundant constraint */
4680:lp_solve_5.5/lp_presolve.c ****             else {
4681:lp_solve_5.5/lp_presolve.c ****               removeLink(EQlist, i);
 49749               		.loc 2 4681 0
 49750 1574c CE01      		movw r24,r28
 49751 1574e 8C5B      		subi r24,-68
 49752 15750 9F4F      		sbci r25,-1
 49753 15752 FC01      		movw r30,r24
 49754 15754 8081      		ld r24,Z
 49755 15756 9181      		ldd r25,Z+1
 49756 15758 2981      		ldd r18,Y+1
 49757 1575a 3A81      		ldd r19,Y+2
 49758 1575c B901      		movw r22,r18
 49759 1575e 0E94 0000 		call removeLink
4682:lp_solve_5.5/lp_presolve.c ****               presolve_rowremove(psdata, i, TRUE);
 49760               		.loc 2 4682 0
 49761 15762 2981      		ldd r18,Y+1
 49762 15764 3A81      		ldd r19,Y+2
 49763 15766 CE01      		movw r24,r28
 49764 15768 8A5B      		subi r24,-70
 49765 1576a 9F4F      		sbci r25,-1
 49766 1576c FC01      		movw r30,r24
 49767 1576e 8081      		ld r24,Z
 49768 15770 9181      		ldd r25,Z+1
 49769 15772 41E0      		ldi r20,lo8(1)
 49770 15774 B901      		movw r22,r18
 49771 15776 0E94 0000 		call presolve_rowremove
4683:lp_solve_5.5/lp_presolve.c ****               MEMCOPY(&QS[ib-1], &QS[ib], n-ib);
 49772               		.loc 2 4683 0
 49773 1577a 2985      		ldd r18,Y+9
 49774 1577c 3A85      		ldd r19,Y+10
 49775 1577e 8B81      		ldd r24,Y+3
 49776 15780 9C81      		ldd r25,Y+4
 49777 15782 A901      		movw r20,r18
 49778 15784 481B      		sub r20,r24
 49779 15786 590B      		sbc r21,r25
 49780 15788 CA01      		movw r24,r20
 49781 1578a AC01      		movw r20,r24
 49782 1578c 440F      		lsl r20
 49783 1578e 551F      		rol r21
 49784 15790 440F      		lsl r20
 49785 15792 551F      		rol r21
 49786 15794 440F      		lsl r20
 49787 15796 551F      		rol r21
 49788 15798 8B81      		ldd r24,Y+3
 49789 1579a 9C81      		ldd r25,Y+4
 49790 1579c 880F      		lsl r24
 49791 1579e 991F      		rol r25
 49792 157a0 880F      		lsl r24
 49793 157a2 991F      		rol r25
 49794 157a4 880F      		lsl r24
 49795 157a6 991F      		rol r25
 49796 157a8 29A1      		ldd r18,Y+33
 49797 157aa 3AA1      		ldd r19,Y+34
 49798 157ac B901      		movw r22,r18
 49799 157ae 680F      		add r22,r24
 49800 157b0 791F      		adc r23,r25
 49801 157b2 8B81      		ldd r24,Y+3
 49802 157b4 9C81      		ldd r25,Y+4
 49803 157b6 8150      		subi r24,1
 49804 157b8 904E      		sbci r25,-32
 49805 157ba 880F      		lsl r24
 49806 157bc 991F      		rol r25
 49807 157be 880F      		lsl r24
 49808 157c0 991F      		rol r25
 49809 157c2 880F      		lsl r24
 49810 157c4 991F      		rol r25
 49811 157c6 29A1      		ldd r18,Y+33
 49812 157c8 3AA1      		ldd r19,Y+34
 49813 157ca 820F      		add r24,r18
 49814 157cc 931F      		adc r25,r19
 49815 157ce 0E94 0000 		call memcpy
4684:lp_solve_5.5/lp_presolve.c ****               n--;
 49816               		.loc 2 4684 0
 49817 157d2 8985      		ldd r24,Y+9
 49818 157d4 9A85      		ldd r25,Y+10
 49819 157d6 0197      		sbiw r24,1
 49820 157d8 9A87      		std Y+10,r25
 49821 157da 8987      		std Y+9,r24
4685:lp_solve_5.5/lp_presolve.c ****               iConRemove++;
 49822               		.loc 2 4685 0
 49823 157dc 8B89      		ldd r24,Y+19
 49824 157de 9C89      		ldd r25,Y+20
 49825 157e0 0196      		adiw r24,1
 49826 157e2 9C8B      		std Y+20,r25
 49827 157e4 8B8B      		std Y+19,r24
 49828 157e6 00C0      		rjmp .L2035
 49829               	.L2038:
4686:lp_solve_5.5/lp_presolve.c ****             }
4687:lp_solve_5.5/lp_presolve.c ****           }
4688:lp_solve_5.5/lp_presolve.c ****           /* ... if not, then delete the inequality, since the equality dominates */
4689:lp_solve_5.5/lp_presolve.c ****           else {
4690:lp_solve_5.5/lp_presolve.c ****             /* First verify feasibility of the RHS */
4691:lp_solve_5.5/lp_presolve.c ****             if((value+psdata->epsvalue < valueEQ) ||
 49830               		.loc 2 4691 0
 49831 157e8 CE01      		movw r24,r28
 49832 157ea 8A5B      		subi r24,-70
 49833 157ec 9F4F      		sbci r25,-1
 49834 157ee FC01      		movw r30,r24
 49835 157f0 8081      		ld r24,Z
 49836 157f2 9181      		ldd r25,Z+1
 49837 157f4 FC01      		movw r30,r24
 49838 157f6 8489      		ldd r24,Z+20
 49839 157f8 9589      		ldd r25,Z+21
 49840 157fa A689      		ldd r26,Z+22
 49841 157fc B789      		ldd r27,Z+23
 49842 157fe 2AA9      		ldd r18,Y+50
 49843 15800 3BA9      		ldd r19,Y+51
 49844 15802 4CA9      		ldd r20,Y+52
 49845 15804 5DA9      		ldd r21,Y+53
 49846 15806 BC01      		movw r22,r24
 49847 15808 CD01      		movw r24,r26
 49848 1580a 0E94 0000 		call __addsf3
 49849 1580e DC01      		movw r26,r24
 49850 15810 CB01      		movw r24,r22
 49851 15812 2EA5      		ldd r18,Y+46
 49852 15814 3FA5      		ldd r19,Y+47
 49853 15816 48A9      		ldd r20,Y+48
 49854 15818 59A9      		ldd r21,Y+49
 49855 1581a BC01      		movw r22,r24
 49856 1581c CD01      		movw r24,r26
 49857 1581e 0E94 0000 		call __ltsf2
 49858 15822 8823      		tst r24
 49859 15824 04F0      		brlt .L2049
4692:lp_solve_5.5/lp_presolve.c ****                (value-get_rh_range(lp, i)-psdata->epsvalue > valueEQ)) {
 49860               		.loc 2 4692 0 discriminator 1
 49861 15826 2981      		ldd r18,Y+1
 49862 15828 3A81      		ldd r19,Y+2
 49863 1582a 8D8D      		ldd r24,Y+29
 49864 1582c 9E8D      		ldd r25,Y+30
 49865 1582e B901      		movw r22,r18
 49866 15830 0E94 0000 		call get_rh_range
 49867 15834 DC01      		movw r26,r24
 49868 15836 CB01      		movw r24,r22
 49869 15838 9C01      		movw r18,r24
 49870 1583a AD01      		movw r20,r26
 49871 1583c 6AA9      		ldd r22,Y+50
 49872 1583e 7BA9      		ldd r23,Y+51
 49873 15840 8CA9      		ldd r24,Y+52
 49874 15842 9DA9      		ldd r25,Y+53
 49875 15844 0E94 0000 		call __subsf3
 49876 15848 DC01      		movw r26,r24
 49877 1584a CB01      		movw r24,r22
 49878 1584c 7C01      		movw r14,r24
 49879 1584e 8D01      		movw r16,r26
 49880 15850 CE01      		movw r24,r28
 49881 15852 8A5B      		subi r24,-70
 49882 15854 9F4F      		sbci r25,-1
 49883 15856 FC01      		movw r30,r24
 49884 15858 8081      		ld r24,Z
 49885 1585a 9181      		ldd r25,Z+1
 49886 1585c FC01      		movw r30,r24
 49887 1585e 8489      		ldd r24,Z+20
 49888 15860 9589      		ldd r25,Z+21
 49889 15862 A689      		ldd r26,Z+22
 49890 15864 B789      		ldd r27,Z+23
 49891 15866 9C01      		movw r18,r24
 49892 15868 AD01      		movw r20,r26
 49893 1586a C801      		movw r24,r16
 49894 1586c B701      		movw r22,r14
 49895 1586e 0E94 0000 		call __subsf3
 49896 15872 DC01      		movw r26,r24
 49897 15874 CB01      		movw r24,r22
4691:lp_solve_5.5/lp_presolve.c ****                (value-get_rh_range(lp, i)-psdata->epsvalue > valueEQ)) {
 49898               		.loc 2 4691 0 discriminator 1
 49899 15876 2EA5      		ldd r18,Y+46
 49900 15878 3FA5      		ldd r19,Y+47
 49901 1587a 48A9      		ldd r20,Y+48
 49902 1587c 59A9      		ldd r21,Y+49
 49903 1587e BC01      		movw r22,r24
 49904 15880 CD01      		movw r24,r26
 49905 15882 0E94 0000 		call __gtsf2
 49906 15886 1816      		cp __zero_reg__,r24
 49907 15888 04F4      		brge .L2087
 49908               	.L2049:
4693:lp_solve_5.5/lp_presolve.c ****               report(lp, NORMAL, "presolve_sparser: Infeasibility of relatively equal RHS values fo
 49909               		.loc 2 4693 0
 49910 1588a 8CA1      		ldd r24,Y+36
 49911 1588c 8F93      		push r24
 49912 1588e 8BA1      		ldd r24,Y+35
 49913 15890 8F93      		push r24
 49914 15892 8A81      		ldd r24,Y+2
 49915 15894 8F93      		push r24
 49916 15896 8981      		ldd r24,Y+1
 49917 15898 8F93      		push r24
 49918 1589a 80E0      		ldi r24,lo8(.LC56)
 49919 1589c 90E0      		ldi r25,hi8(.LC56)
 49920 1589e 892F      		mov r24,r25
 49921 158a0 8F93      		push r24
 49922 158a2 80E0      		ldi r24,lo8(.LC56)
 49923 158a4 90E0      		ldi r25,hi8(.LC56)
 49924 158a6 8F93      		push r24
 49925 158a8 1F92      		push __zero_reg__
 49926 158aa 84E0      		ldi r24,lo8(4)
 49927 158ac 8F93      		push r24
 49928 158ae 8E8D      		ldd r24,Y+30
 49929 158b0 8F93      		push r24
 49930 158b2 8D8D      		ldd r24,Y+29
 49931 158b4 8F93      		push r24
 49932 158b6 0E94 0000 		call report
 49933 158ba 4DB7      		in r20,__SP_L__
 49934 158bc 5EB7      		in r21,__SP_H__
 49935 158be 465F      		subi r20,-10
 49936 158c0 5F4F      		sbci r21,-1
 49937 158c2 0FB6      		in __tmp_reg__,__SREG__
 49938 158c4 F894      		cli
 49939 158c6 DEBF      		out __SP_H__,r29
 49940 158c8 0FBE      		out __SREG__,__tmp_reg__
 49941 158ca CDBF      		out __SP_L__,r28
4694:lp_solve_5.5/lp_presolve.c ****                                  i, ii);
4695:lp_solve_5.5/lp_presolve.c ****               status = presolve_setstatus(psdata, INFEASIBLE);
 49942               		.loc 2 4695 0
 49943 158cc CE01      		movw r24,r28
 49944 158ce 8A5B      		subi r24,-70
 49945 158d0 9F4F      		sbci r25,-1
 49946 158d2 FC01      		movw r30,r24
 49947 158d4 8081      		ld r24,Z
 49948 158d6 9181      		ldd r25,Z+1
 49949 158d8 20E0      		ldi r18,lo8(.LC21)
 49950 158da 30E0      		ldi r19,hi8(.LC21)
 49951 158dc 47E5      		ldi r20,lo8(87)
 49952 158de 52E1      		ldi r21,lo8(18)
 49953 158e0 62E0      		ldi r22,lo8(2)
 49954 158e2 70E0      		ldi r23,0
 49955 158e4 0E94 0000 		call presolve_setstatusex
 49956 158e8 9E87      		std Y+14,r25
 49957 158ea 8D87      		std Y+13,r24
4696:lp_solve_5.5/lp_presolve.c ****               goto Finish;
 49958               		.loc 2 4696 0
 49959 158ec 00C0      		rjmp .L2047
 49960               	.L2087:
4697:lp_solve_5.5/lp_presolve.c ****             }
4698:lp_solve_5.5/lp_presolve.c ****             presolve_rowremove(psdata, i, TRUE);
 49961               		.loc 2 4698 0
 49962 158ee 2981      		ldd r18,Y+1
 49963 158f0 3A81      		ldd r19,Y+2
 49964 158f2 CE01      		movw r24,r28
 49965 158f4 8A5B      		subi r24,-70
 49966 158f6 9F4F      		sbci r25,-1
 49967 158f8 FC01      		movw r30,r24
 49968 158fa 8081      		ld r24,Z
 49969 158fc 9181      		ldd r25,Z+1
 49970 158fe 41E0      		ldi r20,lo8(1)
 49971 15900 B901      		movw r22,r18
 49972 15902 0E94 0000 		call presolve_rowremove
4699:lp_solve_5.5/lp_presolve.c ****             MEMCOPY(&QS[ib-1], &QS[ib], n-ib);
 49973               		.loc 2 4699 0
 49974 15906 2985      		ldd r18,Y+9
 49975 15908 3A85      		ldd r19,Y+10
 49976 1590a 8B81      		ldd r24,Y+3
 49977 1590c 9C81      		ldd r25,Y+4
 49978 1590e A901      		movw r20,r18
 49979 15910 481B      		sub r20,r24
 49980 15912 590B      		sbc r21,r25
 49981 15914 CA01      		movw r24,r20
 49982 15916 AC01      		movw r20,r24
 49983 15918 440F      		lsl r20
 49984 1591a 551F      		rol r21
 49985 1591c 440F      		lsl r20
 49986 1591e 551F      		rol r21
 49987 15920 440F      		lsl r20
 49988 15922 551F      		rol r21
 49989 15924 8B81      		ldd r24,Y+3
 49990 15926 9C81      		ldd r25,Y+4
 49991 15928 880F      		lsl r24
 49992 1592a 991F      		rol r25
 49993 1592c 880F      		lsl r24
 49994 1592e 991F      		rol r25
 49995 15930 880F      		lsl r24
 49996 15932 991F      		rol r25
 49997 15934 29A1      		ldd r18,Y+33
 49998 15936 3AA1      		ldd r19,Y+34
 49999 15938 B901      		movw r22,r18
 50000 1593a 680F      		add r22,r24
 50001 1593c 791F      		adc r23,r25
 50002 1593e 8B81      		ldd r24,Y+3
 50003 15940 9C81      		ldd r25,Y+4
 50004 15942 8150      		subi r24,1
 50005 15944 904E      		sbci r25,-32
 50006 15946 880F      		lsl r24
 50007 15948 991F      		rol r25
 50008 1594a 880F      		lsl r24
 50009 1594c 991F      		rol r25
 50010 1594e 880F      		lsl r24
 50011 15950 991F      		rol r25
 50012 15952 29A1      		ldd r18,Y+33
 50013 15954 3AA1      		ldd r19,Y+34
 50014 15956 820F      		add r24,r18
 50015 15958 931F      		adc r25,r19
 50016 1595a 0E94 0000 		call memcpy
4700:lp_solve_5.5/lp_presolve.c ****             n--;
 50017               		.loc 2 4700 0
 50018 1595e 8985      		ldd r24,Y+9
 50019 15960 9A85      		ldd r25,Y+10
 50020 15962 0197      		sbiw r24,1
 50021 15964 9A87      		std Y+10,r25
 50022 15966 8987      		std Y+9,r24
4701:lp_solve_5.5/lp_presolve.c ****             iConRemove++;
 50023               		.loc 2 4701 0
 50024 15968 8B89      		ldd r24,Y+19
 50025 1596a 9C89      		ldd r25,Y+20
 50026 1596c 0196      		adiw r24,1
 50027 1596e 9C8B      		std Y+20,r25
 50028 15970 8B8B      		std Y+19,r24
 50029 15972 00C0      		rjmp .L2035
 50030               	.L2037:
4702:lp_solve_5.5/lp_presolve.c ****           }
4703:lp_solve_5.5/lp_presolve.c ****         }
4704:lp_solve_5.5/lp_presolve.c **** 
4705:lp_solve_5.5/lp_presolve.c ****         /* Otherwise zero-out the target constraint coefficients and update the RHS */
4706:lp_solve_5.5/lp_presolve.c ****         else {
4707:lp_solve_5.5/lp_presolve.c ****           for(k = 1; k <= nzidx[0]; k++) {
 50031               		.loc 2 4707 0
 50032 15974 81E0      		ldi r24,lo8(1)
 50033 15976 90E0      		ldi r25,0
 50034 15978 9887      		std Y+8,r25
 50035 1597a 8F83      		std Y+7,r24
 50036 1597c 00C0      		rjmp .L2052
 50037               	.L2059:
4708:lp_solve_5.5/lp_presolve.c ****             /* We should add recovery data for the zero'ed coefficient here */
4709:lp_solve_5.5/lp_presolve.c ****             jjx = nzidx[k];
 50038               		.loc 2 4709 0
 50039 1597e CE01      		movw r24,r28
 50040 15980 8E5B      		subi r24,-66
 50041 15982 9F4F      		sbci r25,-1
 50042 15984 FC01      		movw r30,r24
 50043 15986 2081      		ld r18,Z
 50044 15988 3181      		ldd r19,Z+1
 50045 1598a 8F81      		ldd r24,Y+7
 50046 1598c 9885      		ldd r25,Y+8
 50047 1598e 880F      		lsl r24
 50048 15990 991F      		rol r25
 50049 15992 820F      		add r24,r18
 50050 15994 931F      		adc r25,r19
 50051 15996 FC01      		movw r30,r24
 50052 15998 8081      		ld r24,Z
 50053 1599a 9181      		ldd r25,Z+1
 50054 1599c 9DA7      		std Y+45,r25
 50055 1599e 8CA7      		std Y+44,r24
4710:lp_solve_5.5/lp_presolve.c ****             jx = ROW_MAT_COLNR(jjx);
 50056               		.loc 2 4710 0
 50057 159a0 8F8D      		ldd r24,Y+31
 50058 159a2 98A1      		ldd r25,Y+32
 50059 159a4 FC01      		movw r30,r24
 50060 159a6 2485      		ldd r18,Z+12
 50061 159a8 3585      		ldd r19,Z+13
 50062 159aa 8F8D      		ldd r24,Y+31
 50063 159ac 98A1      		ldd r25,Y+32
 50064 159ae FC01      		movw r30,r24
 50065 159b0 4689      		ldd r20,Z+22
 50066 159b2 5789      		ldd r21,Z+23
 50067 159b4 8CA5      		ldd r24,Y+44
 50068 159b6 9DA5      		ldd r25,Y+45
 50069 159b8 880F      		lsl r24
 50070 159ba 991F      		rol r25
 50071 159bc 840F      		add r24,r20
 50072 159be 951F      		adc r25,r21
 50073 159c0 FC01      		movw r30,r24
 50074 159c2 8081      		ld r24,Z
 50075 159c4 9181      		ldd r25,Z+1
 50076 159c6 880F      		lsl r24
 50077 159c8 991F      		rol r25
 50078 159ca 820F      		add r24,r18
 50079 159cc 931F      		adc r25,r19
 50080 159ce FC01      		movw r30,r24
 50081 159d0 8081      		ld r24,Z
 50082 159d2 9181      		ldd r25,Z+1
 50083 159d4 9C87      		std Y+12,r25
 50084 159d6 8B87      		std Y+11,r24
4711:lp_solve_5.5/lp_presolve.c ****             valptr = &ROW_MAT_VALUE(jjx);
 50085               		.loc 2 4711 0
 50086 159d8 8F8D      		ldd r24,Y+31
 50087 159da 98A1      		ldd r25,Y+32
 50088 159dc FC01      		movw r30,r24
 50089 159de 2089      		ldd r18,Z+16
 50090 159e0 3189      		ldd r19,Z+17
 50091 159e2 8F8D      		ldd r24,Y+31
 50092 159e4 98A1      		ldd r25,Y+32
 50093 159e6 FC01      		movw r30,r24
 50094 159e8 4689      		ldd r20,Z+22
 50095 159ea 5789      		ldd r21,Z+23
 50096 159ec 8CA5      		ldd r24,Y+44
 50097 159ee 9DA5      		ldd r25,Y+45
 50098 159f0 880F      		lsl r24
 50099 159f2 991F      		rol r25
 50100 159f4 840F      		add r24,r20
 50101 159f6 951F      		adc r25,r21
 50102 159f8 FC01      		movw r30,r24
 50103 159fa 8081      		ld r24,Z
 50104 159fc 9181      		ldd r25,Z+1
 50105 159fe 880F      		lsl r24
 50106 15a00 991F      		rol r25
 50107 15a02 880F      		lsl r24
 50108 15a04 991F      		rol r25
 50109 15a06 820F      		add r24,r18
 50110 15a08 931F      		adc r25,r19
 50111 15a0a 9DAF      		std Y+61,r25
 50112 15a0c 8CAF      		std Y+60,r24
4712:lp_solve_5.5/lp_presolve.c ****             value  = *valptr;
 50113               		.loc 2 4712 0
 50114 15a0e 8CAD      		ldd r24,Y+60
 50115 15a10 9DAD      		ldd r25,Y+61
 50116 15a12 FC01      		movw r30,r24
 50117 15a14 8081      		ld r24,Z
 50118 15a16 9181      		ldd r25,Z+1
 50119 15a18 A281      		ldd r26,Z+2
 50120 15a1a B381      		ldd r27,Z+3
 50121 15a1c 8AAB      		std Y+50,r24
 50122 15a1e 9BAB      		std Y+51,r25
 50123 15a20 ACAB      		std Y+52,r26
 50124 15a22 BDAB      		std Y+53,r27
4713:lp_solve_5.5/lp_presolve.c ****             *valptr = 0.0;
 50125               		.loc 2 4713 0
 50126 15a24 8CAD      		ldd r24,Y+60
 50127 15a26 9DAD      		ldd r25,Y+61
 50128 15a28 FC01      		movw r30,r24
 50129 15a2a 1082      		st Z,__zero_reg__
 50130 15a2c 1182      		std Z+1,__zero_reg__
 50131 15a2e 1282      		std Z+2,__zero_reg__
 50132 15a30 1382      		std Z+3,__zero_reg__
4714:lp_solve_5.5/lp_presolve.c ****             /* Update counts */
4715:lp_solve_5.5/lp_presolve.c ****             value = my_chsign(chsign, value);
 50133               		.loc 2 4715 0
 50134 15a32 8BA5      		ldd r24,Y+43
 50135 15a34 8823      		tst r24
 50136 15a36 01F0      		breq .L2053
 50137               		.loc 2 4715 0 is_stmt 0 discriminator 1
 50138 15a38 20E0      		ldi r18,0
 50139 15a3a 30E0      		ldi r19,0
 50140 15a3c A901      		movw r20,r18
 50141 15a3e 6AA9      		ldd r22,Y+50
 50142 15a40 7BA9      		ldd r23,Y+51
 50143 15a42 8CA9      		ldd r24,Y+52
 50144 15a44 9DA9      		ldd r25,Y+53
 50145 15a46 0E94 0000 		call __nesf2
 50146 15a4a 8823      		tst r24
 50147 15a4c 01F0      		breq .L2053
 50148               		.loc 2 4715 0 discriminator 3
 50149 15a4e 8AA9      		ldd r24,Y+50
 50150 15a50 9BA9      		ldd r25,Y+51
 50151 15a52 ACA9      		ldd r26,Y+52
 50152 15a54 BDA9      		ldd r27,Y+53
 50153 15a56 B058      		subi r27,0x80
 50154 15a58 00C0      		rjmp .L2055
 50155               	.L2053:
 50156               		.loc 2 4715 0 discriminator 4
 50157 15a5a 8AA9      		ldd r24,Y+50
 50158 15a5c 9BA9      		ldd r25,Y+51
 50159 15a5e ACA9      		ldd r26,Y+52
 50160 15a60 BDA9      		ldd r27,Y+53
 50161               	.L2055:
 50162               		.loc 2 4715 0 discriminator 6
 50163 15a62 8AAB      		std Y+50,r24
 50164 15a64 9BAB      		std Y+51,r25
 50165 15a66 ACAB      		std Y+52,r26
 50166 15a68 BDAB      		std Y+53,r27
4716:lp_solve_5.5/lp_presolve.c ****             if(value < 0) {
 50167               		.loc 2 4716 0 is_stmt 1 discriminator 6
 50168 15a6a 20E0      		ldi r18,0
 50169 15a6c 30E0      		ldi r19,0
 50170 15a6e A901      		movw r20,r18
 50171 15a70 6AA9      		ldd r22,Y+50
 50172 15a72 7BA9      		ldd r23,Y+51
 50173 15a74 8CA9      		ldd r24,Y+52
 50174 15a76 9DA9      		ldd r25,Y+53
 50175 15a78 0E94 0000 		call __ltsf2
 50176 15a7c 8823      		tst r24
 50177 15a7e 04F4      		brge .L2088
4717:lp_solve_5.5/lp_presolve.c ****               psdata->rows->negcount[i]--;
 50178               		.loc 2 4717 0
 50179 15a80 CE01      		movw r24,r28
 50180 15a82 8A5B      		subi r24,-70
 50181 15a84 9F4F      		sbci r25,-1
 50182 15a86 FC01      		movw r30,r24
 50183 15a88 8081      		ld r24,Z
 50184 15a8a 9181      		ldd r25,Z+1
 50185 15a8c FC01      		movw r30,r24
 50186 15a8e 8081      		ld r24,Z
 50187 15a90 9181      		ldd r25,Z+1
 50188 15a92 FC01      		movw r30,r24
 50189 15a94 2085      		ldd r18,Z+8
 50190 15a96 3185      		ldd r19,Z+9
 50191 15a98 8981      		ldd r24,Y+1
 50192 15a9a 9A81      		ldd r25,Y+2
 50193 15a9c 880F      		lsl r24
 50194 15a9e 991F      		rol r25
 50195 15aa0 820F      		add r24,r18
 50196 15aa2 931F      		adc r25,r19
 50197 15aa4 FC01      		movw r30,r24
 50198 15aa6 2081      		ld r18,Z
 50199 15aa8 3181      		ldd r19,Z+1
 50200 15aaa 2150      		subi r18,1
 50201 15aac 3109      		sbc r19,__zero_reg__
 50202 15aae FC01      		movw r30,r24
 50203 15ab0 3183      		std Z+1,r19
 50204 15ab2 2083      		st Z,r18
4718:lp_solve_5.5/lp_presolve.c ****               psdata->cols->negcount[jx]--;
 50205               		.loc 2 4718 0
 50206 15ab4 CE01      		movw r24,r28
 50207 15ab6 8A5B      		subi r24,-70
 50208 15ab8 9F4F      		sbci r25,-1
 50209 15aba FC01      		movw r30,r24
 50210 15abc 8081      		ld r24,Z
 50211 15abe 9181      		ldd r25,Z+1
 50212 15ac0 FC01      		movw r30,r24
 50213 15ac2 8281      		ldd r24,Z+2
 50214 15ac4 9381      		ldd r25,Z+3
 50215 15ac6 FC01      		movw r30,r24
 50216 15ac8 2085      		ldd r18,Z+8
 50217 15aca 3185      		ldd r19,Z+9
 50218 15acc 8B85      		ldd r24,Y+11
 50219 15ace 9C85      		ldd r25,Y+12
 50220 15ad0 880F      		lsl r24
 50221 15ad2 991F      		rol r25
 50222 15ad4 820F      		add r24,r18
 50223 15ad6 931F      		adc r25,r19
 50224 15ad8 FC01      		movw r30,r24
 50225 15ada 2081      		ld r18,Z
 50226 15adc 3181      		ldd r19,Z+1
 50227 15ade 2150      		subi r18,1
 50228 15ae0 3109      		sbc r19,__zero_reg__
 50229 15ae2 FC01      		movw r30,r24
 50230 15ae4 3183      		std Z+1,r19
 50231 15ae6 2083      		st Z,r18
 50232 15ae8 00C0      		rjmp .L2058
 50233               	.L2088:
4719:lp_solve_5.5/lp_presolve.c ****             }
4720:lp_solve_5.5/lp_presolve.c ****             else {
4721:lp_solve_5.5/lp_presolve.c ****               psdata->rows->plucount[i]--;
 50234               		.loc 2 4721 0
 50235 15aea CE01      		movw r24,r28
 50236 15aec 8A5B      		subi r24,-70
 50237 15aee 9F4F      		sbci r25,-1
 50238 15af0 FC01      		movw r30,r24
 50239 15af2 8081      		ld r24,Z
 50240 15af4 9181      		ldd r25,Z+1
 50241 15af6 FC01      		movw r30,r24
 50242 15af8 8081      		ld r24,Z
 50243 15afa 9181      		ldd r25,Z+1
 50244 15afc FC01      		movw r30,r24
 50245 15afe 2681      		ldd r18,Z+6
 50246 15b00 3781      		ldd r19,Z+7
 50247 15b02 8981      		ldd r24,Y+1
 50248 15b04 9A81      		ldd r25,Y+2
 50249 15b06 880F      		lsl r24
 50250 15b08 991F      		rol r25
 50251 15b0a 820F      		add r24,r18
 50252 15b0c 931F      		adc r25,r19
 50253 15b0e FC01      		movw r30,r24
 50254 15b10 2081      		ld r18,Z
 50255 15b12 3181      		ldd r19,Z+1
 50256 15b14 2150      		subi r18,1
 50257 15b16 3109      		sbc r19,__zero_reg__
 50258 15b18 FC01      		movw r30,r24
 50259 15b1a 3183      		std Z+1,r19
 50260 15b1c 2083      		st Z,r18
4722:lp_solve_5.5/lp_presolve.c ****               psdata->cols->plucount[jx]--;
 50261               		.loc 2 4722 0
 50262 15b1e CE01      		movw r24,r28
 50263 15b20 8A5B      		subi r24,-70
 50264 15b22 9F4F      		sbci r25,-1
 50265 15b24 FC01      		movw r30,r24
 50266 15b26 8081      		ld r24,Z
 50267 15b28 9181      		ldd r25,Z+1
 50268 15b2a FC01      		movw r30,r24
 50269 15b2c 8281      		ldd r24,Z+2
 50270 15b2e 9381      		ldd r25,Z+3
 50271 15b30 FC01      		movw r30,r24
 50272 15b32 2681      		ldd r18,Z+6
 50273 15b34 3781      		ldd r19,Z+7
 50274 15b36 8B85      		ldd r24,Y+11
 50275 15b38 9C85      		ldd r25,Y+12
 50276 15b3a 880F      		lsl r24
 50277 15b3c 991F      		rol r25
 50278 15b3e 820F      		add r24,r18
 50279 15b40 931F      		adc r25,r19
 50280 15b42 FC01      		movw r30,r24
 50281 15b44 2081      		ld r18,Z
 50282 15b46 3181      		ldd r19,Z+1
 50283 15b48 2150      		subi r18,1
 50284 15b4a 3109      		sbc r19,__zero_reg__
 50285 15b4c FC01      		movw r30,r24
 50286 15b4e 3183      		std Z+1,r19
 50287 15b50 2083      		st Z,r18
 50288               	.L2058:
4723:lp_solve_5.5/lp_presolve.c ****             }
4724:lp_solve_5.5/lp_presolve.c ****             iCoeffChanged++;
 50289               		.loc 2 4724 0 discriminator 2
 50290 15b52 8989      		ldd r24,Y+17
 50291 15b54 9A89      		ldd r25,Y+18
 50292 15b56 0196      		adiw r24,1
 50293 15b58 9A8B      		std Y+18,r25
 50294 15b5a 898B      		std Y+17,r24
4707:lp_solve_5.5/lp_presolve.c ****             /* We should add recovery data for the zero'ed coefficient here */
 50295               		.loc 2 4707 0 discriminator 2
 50296 15b5c 8F81      		ldd r24,Y+7
 50297 15b5e 9885      		ldd r25,Y+8
 50298 15b60 0196      		adiw r24,1
 50299 15b62 9887      		std Y+8,r25
 50300 15b64 8F83      		std Y+7,r24
 50301               	.L2052:
4707:lp_solve_5.5/lp_presolve.c ****             /* We should add recovery data for the zero'ed coefficient here */
 50302               		.loc 2 4707 0 is_stmt 0 discriminator 1
 50303 15b66 CE01      		movw r24,r28
 50304 15b68 8E5B      		subi r24,-66
 50305 15b6a 9F4F      		sbci r25,-1
 50306 15b6c FC01      		movw r30,r24
 50307 15b6e 8081      		ld r24,Z
 50308 15b70 9181      		ldd r25,Z+1
 50309 15b72 FC01      		movw r30,r24
 50310 15b74 2081      		ld r18,Z
 50311 15b76 3181      		ldd r19,Z+1
 50312 15b78 8F81      		ldd r24,Y+7
 50313 15b7a 9885      		ldd r25,Y+8
 50314 15b7c 2817      		cp r18,r24
 50315 15b7e 3907      		cpc r19,r25
 50316 15b80 04F0      		brlt .+2
 50317 15b82 00C0      		rjmp .L2059
4725:lp_solve_5.5/lp_presolve.c ****           }
4726:lp_solve_5.5/lp_presolve.c ****           value = ratio * lp->orig_rhs[ii];
 50318               		.loc 2 4726 0 is_stmt 1
 50319 15b84 8D8D      		ldd r24,Y+29
 50320 15b86 9E8D      		ldd r25,Y+30
 50321 15b88 8A55      		subi r24,90
 50322 15b8a 9D4F      		sbci r25,-3
 50323 15b8c FC01      		movw r30,r24
 50324 15b8e 2081      		ld r18,Z
 50325 15b90 3181      		ldd r19,Z+1
 50326 15b92 8BA1      		ldd r24,Y+35
 50327 15b94 9CA1      		ldd r25,Y+36
 50328 15b96 880F      		lsl r24
 50329 15b98 991F      		rol r25
 50330 15b9a 880F      		lsl r24
 50331 15b9c 991F      		rol r25
 50332 15b9e 820F      		add r24,r18
 50333 15ba0 931F      		adc r25,r19
 50334 15ba2 FC01      		movw r30,r24
 50335 15ba4 8081      		ld r24,Z
 50336 15ba6 9181      		ldd r25,Z+1
 50337 15ba8 A281      		ldd r26,Z+2
 50338 15baa B381      		ldd r27,Z+3
 50339 15bac 298D      		ldd r18,Y+25
 50340 15bae 3A8D      		ldd r19,Y+26
 50341 15bb0 4B8D      		ldd r20,Y+27
 50342 15bb2 5C8D      		ldd r21,Y+28
 50343 15bb4 BC01      		movw r22,r24
 50344 15bb6 CD01      		movw r24,r26
 50345 15bb8 0E94 0000 		call __mulsf3
 50346 15bbc DC01      		movw r26,r24
 50347 15bbe CB01      		movw r24,r22
 50348 15bc0 8AAB      		std Y+50,r24
 50349 15bc2 9BAB      		std Y+51,r25
 50350 15bc4 ACAB      		std Y+52,r26
 50351 15bc6 BDAB      		std Y+53,r27
4727:lp_solve_5.5/lp_presolve.c ****           presolve_adjustrhs(psdata, i, value, psdata->epsvalue);
 50352               		.loc 2 4727 0
 50353 15bc8 CE01      		movw r24,r28
 50354 15bca 8A5B      		subi r24,-70
 50355 15bcc 9F4F      		sbci r25,-1
 50356 15bce FC01      		movw r30,r24
 50357 15bd0 8081      		ld r24,Z
 50358 15bd2 9181      		ldd r25,Z+1
 50359 15bd4 FC01      		movw r30,r24
 50360 15bd6 2489      		ldd r18,Z+20
 50361 15bd8 3589      		ldd r19,Z+21
 50362 15bda 4689      		ldd r20,Z+22
 50363 15bdc 5789      		ldd r21,Z+23
 50364 15bde 8AA9      		ldd r24,Y+50
 50365 15be0 9BA9      		ldd r25,Y+51
 50366 15be2 ACA9      		ldd r26,Y+52
 50367 15be4 BDA9      		ldd r27,Y+53
 50368 15be6 C980      		ldd r12,Y+1
 50369 15be8 DA80      		ldd r13,Y+2
 50370 15bea BE01      		movw r22,r28
 50371 15bec 6A5B      		subi r22,-70
 50372 15bee 7F4F      		sbci r23,-1
 50373 15bf0 FB01      		movw r30,r22
 50374 15bf2 0190      		ld __tmp_reg__,Z+
 50375 15bf4 F081      		ld r31,Z
 50376 15bf6 E02D      		mov r30,__tmp_reg__
 50377 15bf8 6296      		adiw r28,80-62
 50378 15bfa FFAF      		std Y+63,r31
 50379 15bfc EEAF      		std Y+62,r30
 50380 15bfe 6297      		sbiw r28,80-62
 50381 15c00 7901      		movw r14,r18
 50382 15c02 8A01      		movw r16,r20
 50383 15c04 9C01      		movw r18,r24
 50384 15c06 AD01      		movw r20,r26
 50385 15c08 B601      		movw r22,r12
 50386 15c0a 6296      		adiw r28,80-62
 50387 15c0c 8EAD      		ldd r24,Y+62
 50388 15c0e 9FAD      		ldd r25,Y+63
 50389 15c10 6297      		sbiw r28,80-62
 50390 15c12 0E94 0000 		call presolve_adjustrhs
 50391               	.L2035:
4594:lp_solve_5.5/lp_presolve.c **** 
 50392               		.loc 2 4594 0 discriminator 2
 50393 15c16 8B81      		ldd r24,Y+3
 50394 15c18 9C81      		ldd r25,Y+4
 50395 15c1a 0196      		adiw r24,1
 50396 15c1c 9C83      		std Y+4,r25
 50397 15c1e 8B83      		std Y+3,r24
 50398               	.L2018:
4594:lp_solve_5.5/lp_presolve.c **** 
 50399               		.loc 2 4594 0 is_stmt 0 discriminator 1
 50400 15c20 2B81      		ldd r18,Y+3
 50401 15c22 3C81      		ldd r19,Y+4
 50402 15c24 8D81      		ldd r24,Y+5
 50403 15c26 9E81      		ldd r25,Y+6
 50404 15c28 2817      		cp r18,r24
 50405 15c2a 3907      		cpc r19,r25
 50406 15c2c 04F4      		brge .+2
 50407 15c2e 00C0      		rjmp .L2060
 50408 15c30 00C0      		rjmp .L2020
 50409               	.L2090:
4636:lp_solve_5.5/lp_presolve.c ****             if(ratio == 0.0) {
 50410               		.loc 2 4636 0 is_stmt 1
 50411 15c32 0000      		nop
 50412 15c34 00C0      		rjmp .L2020
 50413               	.L2091:
4648:lp_solve_5.5/lp_presolve.c ****         }
 50414               		.loc 2 4648 0
 50415 15c36 0000      		nop
 50416               	.L2020:
4728:lp_solve_5.5/lp_presolve.c ****         }
4729:lp_solve_5.5/lp_presolve.c ****       }
4730:lp_solve_5.5/lp_presolve.c **** 
4731:lp_solve_5.5/lp_presolve.c ****     }
4732:lp_solve_5.5/lp_presolve.c ****     /* Get next equality index */
4733:lp_solve_5.5/lp_presolve.c **** NextEQ:
4734:lp_solve_5.5/lp_presolve.c ****     ix = nextActiveLink(EQlist, ix);
 50417               		.loc 2 4734 0
 50418 15c38 CE01      		movw r24,r28
 50419 15c3a 8C5B      		subi r24,-68
 50420 15c3c 9F4F      		sbci r25,-1
 50421 15c3e FC01      		movw r30,r24
 50422 15c40 8081      		ld r24,Z
 50423 15c42 9181      		ldd r25,Z+1
 50424 15c44 2D81      		ldd r18,Y+5
 50425 15c46 3E81      		ldd r19,Y+6
 50426 15c48 B901      		movw r22,r18
 50427 15c4a 0E94 0000 		call nextActiveLink
 50428 15c4e 9E83      		std Y+6,r25
 50429 15c50 8D83      		std Y+5,r24
 50430               	.L1996:
4536:lp_solve_5.5/lp_presolve.c **** 
 50431               		.loc 2 4536 0 discriminator 1
 50432 15c52 8D81      		ldd r24,Y+5
 50433 15c54 9E81      		ldd r25,Y+6
 50434 15c56 892B      		or r24,r25
 50435 15c58 01F0      		breq .+4
 50436 15c5a 0C94 0000 		jmp .L2061
 50437               	.L2047:
4735:lp_solve_5.5/lp_presolve.c ****   }
4736:lp_solve_5.5/lp_presolve.c **** 
4737:lp_solve_5.5/lp_presolve.c **** Finish:
4738:lp_solve_5.5/lp_presolve.c ****   FREE(QS);
 50438               		.loc 2 4738 0
 50439 15c5e 89A1      		ldd r24,Y+33
 50440 15c60 9AA1      		ldd r25,Y+34
 50441 15c62 892B      		or r24,r25
 50442 15c64 01F0      		breq .L2062
 50443               		.loc 2 4738 0 is_stmt 0 discriminator 1
 50444 15c66 89A1      		ldd r24,Y+33
 50445 15c68 9AA1      		ldd r25,Y+34
 50446 15c6a 0E94 0000 		call free
 50447 15c6e 1AA2      		std Y+34,__zero_reg__
 50448 15c70 19A2      		std Y+33,__zero_reg__
 50449               	.L2062:
4739:lp_solve_5.5/lp_presolve.c ****   freeLink(&EQlist);
 50450               		.loc 2 4739 0 is_stmt 1
 50451 15c72 CE01      		movw r24,r28
 50452 15c74 8C5B      		subi r24,-68
 50453 15c76 9F4F      		sbci r25,-1
 50454 15c78 0E94 0000 		call freeLink
4740:lp_solve_5.5/lp_presolve.c ****   FREE(nzidx);
 50455               		.loc 2 4740 0
 50456 15c7c CE01      		movw r24,r28
 50457 15c7e 8E5B      		subi r24,-66
 50458 15c80 9F4F      		sbci r25,-1
 50459 15c82 FC01      		movw r30,r24
 50460 15c84 8081      		ld r24,Z
 50461 15c86 9181      		ldd r25,Z+1
 50462 15c88 892B      		or r24,r25
 50463 15c8a 01F0      		breq .L2063
 50464               		.loc 2 4740 0 is_stmt 0 discriminator 1
 50465 15c8c CE01      		movw r24,r28
 50466 15c8e 8E5B      		subi r24,-66
 50467 15c90 9F4F      		sbci r25,-1
 50468 15c92 FC01      		movw r30,r24
 50469 15c94 8081      		ld r24,Z
 50470 15c96 9181      		ldd r25,Z+1
 50471 15c98 0E94 0000 		call free
 50472 15c9c CE01      		movw r24,r28
 50473 15c9e 8E5B      		subi r24,-66
 50474 15ca0 9F4F      		sbci r25,-1
 50475 15ca2 FC01      		movw r30,r24
 50476 15ca4 1182      		std Z+1,__zero_reg__
 50477 15ca6 1082      		st Z,__zero_reg__
 50478               	.L2063:
4741:lp_solve_5.5/lp_presolve.c **** 
4742:lp_solve_5.5/lp_presolve.c ****   /* Let us condense the matrix if we modified the constraint matrix */
4743:lp_solve_5.5/lp_presolve.c ****   if(iCoeffChanged > 0) {
 50479               		.loc 2 4743 0 is_stmt 1
 50480 15ca8 8989      		ldd r24,Y+17
 50481 15caa 9A89      		ldd r25,Y+18
 50482 15cac 1816      		cp __zero_reg__,r24
 50483 15cae 1906      		cpc __zero_reg__,r25
 50484 15cb0 04F4      		brge .L2064
4744:lp_solve_5.5/lp_presolve.c ****     mat->row_end_valid = FALSE;
 50485               		.loc 2 4744 0
 50486 15cb2 8F8D      		ldd r24,Y+31
 50487 15cb4 98A1      		ldd r25,Y+32
 50488 15cb6 FC01      		movw r30,r24
 50489 15cb8 14A6      		std Z+44,__zero_reg__
4745:lp_solve_5.5/lp_presolve.c ****     mat_zerocompact(mat);
 50490               		.loc 2 4745 0
 50491 15cba 8F8D      		ldd r24,Y+31
 50492 15cbc 98A1      		ldd r25,Y+32
 50493 15cbe 0E94 0000 		call mat_zerocompact
4746:lp_solve_5.5/lp_presolve.c ****     presolve_validate(psdata, TRUE);
 50494               		.loc 2 4746 0
 50495 15cc2 CE01      		movw r24,r28
 50496 15cc4 8A5B      		subi r24,-70
 50497 15cc6 9F4F      		sbci r25,-1
 50498 15cc8 FC01      		movw r30,r24
 50499 15cca 8081      		ld r24,Z
 50500 15ccc 9181      		ldd r25,Z+1
 50501 15cce 61E0      		ldi r22,lo8(1)
 50502 15cd0 0E94 0000 		call presolve_validate
4747:lp_solve_5.5/lp_presolve.c **** #ifdef PresolveForceUpdateMax
4748:lp_solve_5.5/lp_presolve.c ****     mat_computemax(mat /* , FALSE */);
4749:lp_solve_5.5/lp_presolve.c **** #endif
4750:lp_solve_5.5/lp_presolve.c ****     psdata->forceupdate = TRUE;
 50503               		.loc 2 4750 0
 50504 15cd4 CE01      		movw r24,r28
 50505 15cd6 8A5B      		subi r24,-70
 50506 15cd8 9F4F      		sbci r25,-1
 50507 15cda FC01      		movw r30,r24
 50508 15cdc 8081      		ld r24,Z
 50509 15cde 9181      		ldd r25,Z+1
 50510 15ce0 21E0      		ldi r18,lo8(1)
 50511 15ce2 FC01      		movw r30,r24
 50512 15ce4 24A3      		std Z+36,r18
 50513               	.L2064:
4751:lp_solve_5.5/lp_presolve.c ****   }
4752:lp_solve_5.5/lp_presolve.c **** 
4753:lp_solve_5.5/lp_presolve.c ****   (*nConRemove)    += iConRemove;
 50514               		.loc 2 4753 0
 50515 15ce6 CE01      		movw r24,r28
 50516 15ce8 865B      		subi r24,-74
 50517 15cea 9F4F      		sbci r25,-1
 50518 15cec FC01      		movw r30,r24
 50519 15cee 8081      		ld r24,Z
 50520 15cf0 9181      		ldd r25,Z+1
 50521 15cf2 FC01      		movw r30,r24
 50522 15cf4 2081      		ld r18,Z
 50523 15cf6 3181      		ldd r19,Z+1
 50524 15cf8 8B89      		ldd r24,Y+19
 50525 15cfa 9C89      		ldd r25,Y+20
 50526 15cfc 280F      		add r18,r24
 50527 15cfe 391F      		adc r19,r25
 50528 15d00 CE01      		movw r24,r28
 50529 15d02 865B      		subi r24,-74
 50530 15d04 9F4F      		sbci r25,-1
 50531 15d06 FC01      		movw r30,r24
 50532 15d08 8081      		ld r24,Z
 50533 15d0a 9181      		ldd r25,Z+1
 50534 15d0c FC01      		movw r30,r24
 50535 15d0e 3183      		std Z+1,r19
 50536 15d10 2083      		st Z,r18
4754:lp_solve_5.5/lp_presolve.c ****   (*nCoeffChanged) += iCoeffChanged + iObjChanged;
 50537               		.loc 2 4754 0
 50538 15d12 CE01      		movw r24,r28
 50539 15d14 885B      		subi r24,-72
 50540 15d16 9F4F      		sbci r25,-1
 50541 15d18 FC01      		movw r30,r24
 50542 15d1a 8081      		ld r24,Z
 50543 15d1c 9181      		ldd r25,Z+1
 50544 15d1e FC01      		movw r30,r24
 50545 15d20 2081      		ld r18,Z
 50546 15d22 3181      		ldd r19,Z+1
 50547 15d24 4989      		ldd r20,Y+17
 50548 15d26 5A89      		ldd r21,Y+18
 50549 15d28 8F85      		ldd r24,Y+15
 50550 15d2a 9889      		ldd r25,Y+16
 50551 15d2c 840F      		add r24,r20
 50552 15d2e 951F      		adc r25,r21
 50553 15d30 280F      		add r18,r24
 50554 15d32 391F      		adc r19,r25
 50555 15d34 CE01      		movw r24,r28
 50556 15d36 885B      		subi r24,-72
 50557 15d38 9F4F      		sbci r25,-1
 50558 15d3a FC01      		movw r30,r24
 50559 15d3c 8081      		ld r24,Z
 50560 15d3e 9181      		ldd r25,Z+1
 50561 15d40 FC01      		movw r30,r24
 50562 15d42 3183      		std Z+1,r19
 50563 15d44 2083      		st Z,r18
4755:lp_solve_5.5/lp_presolve.c ****   (*nSum)          += iCoeffChanged + iObjChanged + iConRemove;
 50564               		.loc 2 4755 0
 50565 15d46 CE01      		movw r24,r28
 50566 15d48 825B      		subi r24,-78
 50567 15d4a 9F4F      		sbci r25,-1
 50568 15d4c FC01      		movw r30,r24
 50569 15d4e 8081      		ld r24,Z
 50570 15d50 9181      		ldd r25,Z+1
 50571 15d52 FC01      		movw r30,r24
 50572 15d54 2081      		ld r18,Z
 50573 15d56 3181      		ldd r19,Z+1
 50574 15d58 4989      		ldd r20,Y+17
 50575 15d5a 5A89      		ldd r21,Y+18
 50576 15d5c 8F85      		ldd r24,Y+15
 50577 15d5e 9889      		ldd r25,Y+16
 50578 15d60 480F      		add r20,r24
 50579 15d62 591F      		adc r21,r25
 50580 15d64 8B89      		ldd r24,Y+19
 50581 15d66 9C89      		ldd r25,Y+20
 50582 15d68 840F      		add r24,r20
 50583 15d6a 951F      		adc r25,r21
 50584 15d6c 280F      		add r18,r24
 50585 15d6e 391F      		adc r19,r25
 50586 15d70 CE01      		movw r24,r28
 50587 15d72 825B      		subi r24,-78
 50588 15d74 9F4F      		sbci r25,-1
 50589 15d76 FC01      		movw r30,r24
 50590 15d78 8081      		ld r24,Z
 50591 15d7a 9181      		ldd r25,Z+1
 50592 15d7c FC01      		movw r30,r24
 50593 15d7e 3183      		std Z+1,r19
 50594 15d80 2083      		st Z,r18
4756:lp_solve_5.5/lp_presolve.c **** 
4757:lp_solve_5.5/lp_presolve.c ****   return( status );
 50595               		.loc 2 4757 0
 50596 15d82 8D85      		ldd r24,Y+13
 50597 15d84 9E85      		ldd r25,Y+14
 50598               	.L2065:
 50599               	/* epilogue start */
4758:lp_solve_5.5/lp_presolve.c **** }
 50600               		.loc 2 4758 0 discriminator 1
 50601 15d86 CF5A      		subi r28,-81
 50602 15d88 DF4F      		sbci r29,-1
 50603 15d8a 0FB6      		in __tmp_reg__,__SREG__
 50604 15d8c F894      		cli
 50605 15d8e DEBF      		out __SP_H__,r29
 50606 15d90 0FBE      		out __SREG__,__tmp_reg__
 50607 15d92 CDBF      		out __SP_L__,r28
 50608 15d94 DF91      		pop r29
 50609 15d96 CF91      		pop r28
 50610 15d98 1F91      		pop r17
 50611 15d9a 0F91      		pop r16
 50612 15d9c FF90      		pop r15
 50613 15d9e EF90      		pop r14
 50614 15da0 DF90      		pop r13
 50615 15da2 CF90      		pop r12
 50616 15da4 0895      		ret
 50617               		.cfi_endproc
 50618               	.LFE86:
 50620               		.section	.rodata
 50621               	.LC57:
 50622 09b7 534F 535F 		.string	"SOS_%d"
 50622      2564 00
 50623               	.LC58:
 50624 09be 7072 6573 		.string	"presolve_SOS1: Converted %5d constraints to SOS1.\n"
 50624      6F6C 7665 
 50624      5F53 4F53 
 50624      313A 2043 
 50624      6F6E 7665 
 50625               		.text
 50626               	.global	presolve_SOS1
 50628               	presolve_SOS1:
 50629               	.LFB87:
4759:lp_solve_5.5/lp_presolve.c **** 
4760:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_SOS1(presolverec *psdata, int *nCoeffChanged, int *nConRemove, int *nVarFixed, 
4761:lp_solve_5.5/lp_presolve.c **** {
 50630               		.loc 2 4761 0
 50631               		.cfi_startproc
 50632 15da6 CF92      		push r12
 50633               	.LCFI540:
 50634               		.cfi_def_cfa_offset 3
 50635               		.cfi_offset 12, -2
 50636 15da8 DF92      		push r13
 50637               	.LCFI541:
 50638               		.cfi_def_cfa_offset 4
 50639               		.cfi_offset 13, -3
 50640 15daa EF92      		push r14
 50641               	.LCFI542:
 50642               		.cfi_def_cfa_offset 5
 50643               		.cfi_offset 14, -4
 50644 15dac FF92      		push r15
 50645               	.LCFI543:
 50646               		.cfi_def_cfa_offset 6
 50647               		.cfi_offset 15, -5
 50648 15dae 0F93      		push r16
 50649               	.LCFI544:
 50650               		.cfi_def_cfa_offset 7
 50651               		.cfi_offset 16, -6
 50652 15db0 1F93      		push r17
 50653               	.LCFI545:
 50654               		.cfi_def_cfa_offset 8
 50655               		.cfi_offset 17, -7
 50656 15db2 CF93      		push r28
 50657               	.LCFI546:
 50658               		.cfi_def_cfa_offset 9
 50659               		.cfi_offset 28, -8
 50660 15db4 DF93      		push r29
 50661               	.LCFI547:
 50662               		.cfi_def_cfa_offset 10
 50663               		.cfi_offset 29, -9
 50664 15db6 CDB7      		in r28,__SP_L__
 50665 15db8 DEB7      		in r29,__SP_H__
 50666               	.LCFI548:
 50667               		.cfi_def_cfa_register 28
 50668 15dba EA97      		sbiw r28,58
 50669               	.LCFI549:
 50670               		.cfi_def_cfa_offset 68
 50671 15dbc 0FB6      		in __tmp_reg__,__SREG__
 50672 15dbe F894      		cli
 50673 15dc0 DEBF      		out __SP_H__,r29
 50674 15dc2 0FBE      		out __SREG__,__tmp_reg__
 50675 15dc4 CDBF      		out __SP_L__,r28
 50676               	/* prologue: function */
 50677               	/* frame size = 58 */
 50678               	/* stack size = 66 */
 50679               	.L__stack_usage = 66
 50680 15dc6 98AB      		std Y+48,r25
 50681 15dc8 8FA7      		std Y+47,r24
 50682 15dca 7AAB      		std Y+50,r23
 50683 15dcc 69AB      		std Y+49,r22
 50684 15dce 5CAB      		std Y+52,r21
 50685 15dd0 4BAB      		std Y+51,r20
 50686 15dd2 3EAB      		std Y+54,r19
 50687 15dd4 2DAB      		std Y+53,r18
 50688 15dd6 18AF      		std Y+56,r17
 50689 15dd8 0FAB      		std Y+55,r16
 50690 15dda FAAE      		std Y+58,r15
 50691 15ddc E9AE      		std Y+57,r14
4762:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 50692               		.loc 2 4762 0
 50693 15dde 8FA5      		ldd r24,Y+47
 50694 15de0 98A9      		ldd r25,Y+48
 50695 15de2 FC01      		movw r30,r24
 50696 15de4 8289      		ldd r24,Z+18
 50697 15de6 9389      		ldd r25,Z+19
 50698 15de8 9B87      		std Y+11,r25
 50699 15dea 8A87      		std Y+10,r24
4763:lp_solve_5.5/lp_presolve.c ****   MYBOOL   candelete, SOS_GUBactive = FALSE;
 50700               		.loc 2 4763 0
 50701 15dec 1C86      		std Y+12,__zero_reg__
4764:lp_solve_5.5/lp_presolve.c ****   int      iCoeffChanged = 0, iConRemove = 0, iSOS = 0,
 50702               		.loc 2 4764 0
 50703 15dee 1E86      		std Y+14,__zero_reg__
 50704 15df0 1D86      		std Y+13,__zero_reg__
 50705 15df2 1B82      		std Y+3,__zero_reg__
 50706 15df4 1A82      		std Y+2,__zero_reg__
 50707 15df6 1D82      		std Y+5,__zero_reg__
 50708 15df8 1C82      		std Y+4,__zero_reg__
4765:lp_solve_5.5/lp_presolve.c ****            i,ix,iix, j,jx,jjx, status = RUNNING;
 50709               		.loc 2 4765 0
 50710 15dfa 88E0      		ldi r24,lo8(8)
 50711 15dfc 90E0      		ldi r25,0
 50712 15dfe 988B      		std Y+16,r25
 50713 15e00 8F87      		std Y+15,r24
4766:lp_solve_5.5/lp_presolve.c ****   REAL     Value1;
4767:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 50714               		.loc 2 4767 0
 50715 15e02 8A85      		ldd r24,Y+10
 50716 15e04 9B85      		ldd r25,Y+11
 50717 15e06 8A54      		subi r24,74
 50718 15e08 9D4F      		sbci r25,-3
 50719 15e0a FC01      		movw r30,r24
 50720 15e0c 8081      		ld r24,Z
 50721 15e0e 9181      		ldd r25,Z+1
 50722 15e10 9A8B      		std Y+18,r25
 50723 15e12 898B      		std Y+17,r24
4768:lp_solve_5.5/lp_presolve.c **** 
4769:lp_solve_5.5/lp_presolve.c ****   for(i = lastActiveLink(psdata->rows->varmap); i > 0; ) {
 50724               		.loc 2 4769 0
 50725 15e14 8FA5      		ldd r24,Y+47
 50726 15e16 98A9      		ldd r25,Y+48
 50727 15e18 FC01      		movw r30,r24
 50728 15e1a 8081      		ld r24,Z
 50729 15e1c 9181      		ldd r25,Z+1
 50730 15e1e FC01      		movw r30,r24
 50731 15e20 8081      		ld r24,Z
 50732 15e22 9181      		ldd r25,Z+1
 50733 15e24 0E94 0000 		call lastActiveLink
 50734 15e28 9F83      		std Y+7,r25
 50735 15e2a 8E83      		std Y+6,r24
 50736 15e2c 00C0      		rjmp .L2093
 50737               	.L2108:
4770:lp_solve_5.5/lp_presolve.c ****     candelete = FALSE;
 50738               		.loc 2 4770 0
 50739 15e2e 1982      		std Y+1,__zero_reg__
4771:lp_solve_5.5/lp_presolve.c ****     Value1 = get_rh(lp, i);
 50740               		.loc 2 4771 0
 50741 15e30 2E81      		ldd r18,Y+6
 50742 15e32 3F81      		ldd r19,Y+7
 50743 15e34 8A85      		ldd r24,Y+10
 50744 15e36 9B85      		ldd r25,Y+11
 50745 15e38 B901      		movw r22,r18
 50746 15e3a 0E94 0000 		call get_rh
 50747 15e3e DC01      		movw r26,r24
 50748 15e40 CB01      		movw r24,r22
 50749 15e42 8B8F      		std Y+27,r24
 50750 15e44 9C8F      		std Y+28,r25
 50751 15e46 AD8F      		std Y+29,r26
 50752 15e48 BE8F      		std Y+30,r27
4772:lp_solve_5.5/lp_presolve.c ****     jx = get_constr_type(lp, i);
 50753               		.loc 2 4772 0
 50754 15e4a 2E81      		ldd r18,Y+6
 50755 15e4c 3F81      		ldd r19,Y+7
 50756 15e4e 8A85      		ldd r24,Y+10
 50757 15e50 9B85      		ldd r25,Y+11
 50758 15e52 B901      		movw r22,r18
 50759 15e54 0E94 0000 		call get_constr_type
 50760 15e58 9C8B      		std Y+20,r25
 50761 15e5a 8B8B      		std Y+19,r24
4773:lp_solve_5.5/lp_presolve.c ****     if((Value1 == 1) && (presolve_rowlength(psdata, i) >= MIN_SOS1LENGTH) &&
 50762               		.loc 2 4773 0
 50763 15e5c 8B8D      		ldd r24,Y+27
 50764 15e5e 9C8D      		ldd r25,Y+28
 50765 15e60 AD8D      		ldd r26,Y+29
 50766 15e62 BE8D      		ldd r27,Y+30
 50767 15e64 20E0      		ldi r18,0
 50768 15e66 30E0      		ldi r19,0
 50769 15e68 40E8      		ldi r20,lo8(-128)
 50770 15e6a 5FE3      		ldi r21,lo8(63)
 50771 15e6c BC01      		movw r22,r24
 50772 15e6e CD01      		movw r24,r26
 50773 15e70 0E94 0000 		call __eqsf2
 50774 15e74 8823      		tst r24
 50775 15e76 01F0      		breq .+2
 50776 15e78 00C0      		rjmp .L2094
 50777               		.loc 2 4773 0 is_stmt 0 discriminator 1
 50778 15e7a 2E81      		ldd r18,Y+6
 50779 15e7c 3F81      		ldd r19,Y+7
 50780 15e7e 8FA5      		ldd r24,Y+47
 50781 15e80 98A9      		ldd r25,Y+48
 50782 15e82 B901      		movw r22,r18
 50783 15e84 0E94 0000 		call presolve_rowlength
 50784 15e88 0497      		sbiw r24,4
 50785 15e8a 04F4      		brge .+2
 50786 15e8c 00C0      		rjmp .L2094
 50787               		.loc 2 4773 0 discriminator 2
 50788 15e8e 8C85      		ldd r24,Y+12
 50789 15e90 8823      		tst r24
 50790 15e92 01F0      		breq .L2096
4774:lp_solve_5.5/lp_presolve.c ****        ((SOS_GUBactive && (jx != GE)) || (!SOS_GUBactive && (jx == LE)))) {
 50791               		.loc 2 4774 0 is_stmt 1
 50792 15e94 8B89      		ldd r24,Y+19
 50793 15e96 9C89      		ldd r25,Y+20
 50794 15e98 0297      		sbiw r24,2
 50795 15e9a 01F4      		brne .L2097
 50796               	.L2096:
 50797               		.loc 2 4774 0 is_stmt 0 discriminator 1
 50798 15e9c 8C85      		ldd r24,Y+12
 50799 15e9e 8823      		tst r24
 50800 15ea0 01F0      		breq .+2
 50801 15ea2 00C0      		rjmp .L2094
 50802               		.loc 2 4774 0 discriminator 2
 50803 15ea4 8B89      		ldd r24,Y+19
 50804 15ea6 9C89      		ldd r25,Y+20
 50805 15ea8 0197      		sbiw r24,1
 50806 15eaa 01F0      		breq .+2
 50807 15eac 00C0      		rjmp .L2094
 50808               	.L2097:
4775:lp_solve_5.5/lp_presolve.c ****       jjx = mat->row_end[i-1];
 50809               		.loc 2 4775 0 is_stmt 1
 50810 15eae 8989      		ldd r24,Y+17
 50811 15eb0 9A89      		ldd r25,Y+18
 50812 15eb2 FC01      		movw r30,r24
 50813 15eb4 208D      		ldd r18,Z+24
 50814 15eb6 318D      		ldd r19,Z+25
 50815 15eb8 8E81      		ldd r24,Y+6
 50816 15eba 9F81      		ldd r25,Y+7
 50817 15ebc 8150      		subi r24,1
 50818 15ebe 9048      		sbci r25,-128
 50819 15ec0 880F      		lsl r24
 50820 15ec2 991F      		rol r25
 50821 15ec4 820F      		add r24,r18
 50822 15ec6 931F      		adc r25,r19
 50823 15ec8 FC01      		movw r30,r24
 50824 15eca 8081      		ld r24,Z
 50825 15ecc 9181      		ldd r25,Z+1
 50826 15ece 9987      		std Y+9,r25
 50827 15ed0 8887      		std Y+8,r24
4776:lp_solve_5.5/lp_presolve.c ****       iix = mat->row_end[i];
 50828               		.loc 2 4776 0
 50829 15ed2 8989      		ldd r24,Y+17
 50830 15ed4 9A89      		ldd r25,Y+18
 50831 15ed6 FC01      		movw r30,r24
 50832 15ed8 208D      		ldd r18,Z+24
 50833 15eda 318D      		ldd r19,Z+25
 50834 15edc 8E81      		ldd r24,Y+6
 50835 15ede 9F81      		ldd r25,Y+7
 50836 15ee0 880F      		lsl r24
 50837 15ee2 991F      		rol r25
 50838 15ee4 820F      		add r24,r18
 50839 15ee6 931F      		adc r25,r19
 50840 15ee8 FC01      		movw r30,r24
 50841 15eea 8081      		ld r24,Z
 50842 15eec 9181      		ldd r25,Z+1
 50843 15eee 9E8B      		std Y+22,r25
 50844 15ef0 8D8B      		std Y+21,r24
4777:lp_solve_5.5/lp_presolve.c ****       for(; jjx < iix; jjx++) {
 50845               		.loc 2 4777 0
 50846 15ef2 00C0      		rjmp .L2098
 50847               	.L2102:
4778:lp_solve_5.5/lp_presolve.c ****         j = ROW_MAT_COLNR(jjx);
 50848               		.loc 2 4778 0
 50849 15ef4 8989      		ldd r24,Y+17
 50850 15ef6 9A89      		ldd r25,Y+18
 50851 15ef8 FC01      		movw r30,r24
 50852 15efa 2485      		ldd r18,Z+12
 50853 15efc 3585      		ldd r19,Z+13
 50854 15efe 8989      		ldd r24,Y+17
 50855 15f00 9A89      		ldd r25,Y+18
 50856 15f02 FC01      		movw r30,r24
 50857 15f04 4689      		ldd r20,Z+22
 50858 15f06 5789      		ldd r21,Z+23
 50859 15f08 8885      		ldd r24,Y+8
 50860 15f0a 9985      		ldd r25,Y+9
 50861 15f0c 880F      		lsl r24
 50862 15f0e 991F      		rol r25
 50863 15f10 840F      		add r24,r20
 50864 15f12 951F      		adc r25,r21
 50865 15f14 FC01      		movw r30,r24
 50866 15f16 8081      		ld r24,Z
 50867 15f18 9181      		ldd r25,Z+1
 50868 15f1a 880F      		lsl r24
 50869 15f1c 991F      		rol r25
 50870 15f1e 820F      		add r24,r18
 50871 15f20 931F      		adc r25,r19
 50872 15f22 FC01      		movw r30,r24
 50873 15f24 8081      		ld r24,Z
 50874 15f26 9181      		ldd r25,Z+1
 50875 15f28 9A8F      		std Y+26,r25
 50876 15f2a 898F      		std Y+25,r24
4779:lp_solve_5.5/lp_presolve.c ****         if(!isActiveLink(psdata->cols->varmap, j))
 50877               		.loc 2 4779 0
 50878 15f2c 298D      		ldd r18,Y+25
 50879 15f2e 3A8D      		ldd r19,Y+26
 50880 15f30 8FA5      		ldd r24,Y+47
 50881 15f32 98A9      		ldd r25,Y+48
 50882 15f34 FC01      		movw r30,r24
 50883 15f36 8281      		ldd r24,Z+2
 50884 15f38 9381      		ldd r25,Z+3
 50885 15f3a FC01      		movw r30,r24
 50886 15f3c 8081      		ld r24,Z
 50887 15f3e 9181      		ldd r25,Z+1
 50888 15f40 B901      		movw r22,r18
 50889 15f42 0E94 0000 		call isActiveLink
 50890 15f46 8823      		tst r24
 50891 15f48 01F0      		breq .L2113
4780:lp_solve_5.5/lp_presolve.c ****           continue;
4781:lp_solve_5.5/lp_presolve.c ****         if(!is_binary(lp, j) || (ROW_MAT_VALUE(jjx) != 1))
 50892               		.loc 2 4781 0
 50893 15f4a 298D      		ldd r18,Y+25
 50894 15f4c 3A8D      		ldd r19,Y+26
 50895 15f4e 8A85      		ldd r24,Y+10
 50896 15f50 9B85      		ldd r25,Y+11
 50897 15f52 B901      		movw r22,r18
 50898 15f54 0E94 0000 		call is_binary
 50899 15f58 8823      		tst r24
 50900 15f5a 01F0      		breq .L2101
 50901               		.loc 2 4781 0 is_stmt 0 discriminator 1
 50902 15f5c 8989      		ldd r24,Y+17
 50903 15f5e 9A89      		ldd r25,Y+18
 50904 15f60 FC01      		movw r30,r24
 50905 15f62 2089      		ldd r18,Z+16
 50906 15f64 3189      		ldd r19,Z+17
 50907 15f66 8989      		ldd r24,Y+17
 50908 15f68 9A89      		ldd r25,Y+18
 50909 15f6a FC01      		movw r30,r24
 50910 15f6c 4689      		ldd r20,Z+22
 50911 15f6e 5789      		ldd r21,Z+23
 50912 15f70 8885      		ldd r24,Y+8
 50913 15f72 9985      		ldd r25,Y+9
 50914 15f74 880F      		lsl r24
 50915 15f76 991F      		rol r25
 50916 15f78 840F      		add r24,r20
 50917 15f7a 951F      		adc r25,r21
 50918 15f7c FC01      		movw r30,r24
 50919 15f7e 8081      		ld r24,Z
 50920 15f80 9181      		ldd r25,Z+1
 50921 15f82 880F      		lsl r24
 50922 15f84 991F      		rol r25
 50923 15f86 880F      		lsl r24
 50924 15f88 991F      		rol r25
 50925 15f8a 820F      		add r24,r18
 50926 15f8c 931F      		adc r25,r19
 50927 15f8e FC01      		movw r30,r24
 50928 15f90 8081      		ld r24,Z
 50929 15f92 9181      		ldd r25,Z+1
 50930 15f94 A281      		ldd r26,Z+2
 50931 15f96 B381      		ldd r27,Z+3
 50932 15f98 20E0      		ldi r18,0
 50933 15f9a 30E0      		ldi r19,0
 50934 15f9c 40E8      		ldi r20,lo8(-128)
 50935 15f9e 5FE3      		ldi r21,lo8(63)
 50936 15fa0 BC01      		movw r22,r24
 50937 15fa2 CD01      		movw r24,r26
 50938 15fa4 0E94 0000 		call __nesf2
 50939 15fa8 8823      		tst r24
 50940 15faa 01F4      		brne .L2101
 50941 15fac 00C0      		rjmp .L2100
 50942               	.L2113:
4780:lp_solve_5.5/lp_presolve.c ****           continue;
 50943               		.loc 2 4780 0 is_stmt 1
 50944 15fae 0000      		nop
 50945               	.L2100:
4777:lp_solve_5.5/lp_presolve.c ****         j = ROW_MAT_COLNR(jjx);
 50946               		.loc 2 4777 0
 50947 15fb0 8885      		ldd r24,Y+8
 50948 15fb2 9985      		ldd r25,Y+9
 50949 15fb4 0196      		adiw r24,1
 50950 15fb6 9987      		std Y+9,r25
 50951 15fb8 8887      		std Y+8,r24
 50952               	.L2098:
4777:lp_solve_5.5/lp_presolve.c ****         j = ROW_MAT_COLNR(jjx);
 50953               		.loc 2 4777 0 is_stmt 0 discriminator 1
 50954 15fba 2885      		ldd r18,Y+8
 50955 15fbc 3985      		ldd r19,Y+9
 50956 15fbe 8D89      		ldd r24,Y+21
 50957 15fc0 9E89      		ldd r25,Y+22
 50958 15fc2 2817      		cp r18,r24
 50959 15fc4 3907      		cpc r19,r25
 50960 15fc6 04F4      		brge .+2
 50961 15fc8 00C0      		rjmp .L2102
 50962               	.L2101:
4782:lp_solve_5.5/lp_presolve.c ****           break;
4783:lp_solve_5.5/lp_presolve.c ****       }
4784:lp_solve_5.5/lp_presolve.c ****       if(jjx >= iix) {
 50963               		.loc 2 4784 0 is_stmt 1
 50964 15fca 2885      		ldd r18,Y+8
 50965 15fcc 3985      		ldd r19,Y+9
 50966 15fce 8D89      		ldd r24,Y+21
 50967 15fd0 9E89      		ldd r25,Y+22
 50968 15fd2 2817      		cp r18,r24
 50969 15fd4 3907      		cpc r19,r25
 50970 15fd6 04F4      		brge .+2
 50971 15fd8 00C0      		rjmp .L2094
 50972               	.LBB13:
4785:lp_solve_5.5/lp_presolve.c ****         char SOSname[16];
4786:lp_solve_5.5/lp_presolve.c **** 
4787:lp_solve_5.5/lp_presolve.c ****         /* Define a new SOS instance */
4788:lp_solve_5.5/lp_presolve.c ****         ix = SOS_count(lp) + 1;
 50973               		.loc 2 4788 0
 50974 15fda 8A85      		ldd r24,Y+10
 50975 15fdc 9B85      		ldd r25,Y+11
 50976 15fde 0E94 0000 		call SOS_count
 50977 15fe2 0196      		adiw r24,1
 50978 15fe4 988F      		std Y+24,r25
 50979 15fe6 8F8B      		std Y+23,r24
4789:lp_solve_5.5/lp_presolve.c ****         sprintf(SOSname, "SOS_%d", ix);
 50980               		.loc 2 4789 0
 50981 15fe8 888D      		ldd r24,Y+24
 50982 15fea 8F93      		push r24
 50983 15fec 8F89      		ldd r24,Y+23
 50984 15fee 8F93      		push r24
 50985 15ff0 80E0      		ldi r24,lo8(.LC57)
 50986 15ff2 90E0      		ldi r25,hi8(.LC57)
 50987 15ff4 892F      		mov r24,r25
 50988 15ff6 8F93      		push r24
 50989 15ff8 80E0      		ldi r24,lo8(.LC57)
 50990 15ffa 90E0      		ldi r25,hi8(.LC57)
 50991 15ffc 8F93      		push r24
 50992 15ffe CE01      		movw r24,r28
 50993 16000 4F96      		adiw r24,31
 50994 16002 292F      		mov r18,r25
 50995 16004 2F93      		push r18
 50996 16006 8F93      		push r24
 50997 16008 0E94 0000 		call sprintf
 50998 1600c 0F90      		pop __tmp_reg__
 50999 1600e 0F90      		pop __tmp_reg__
 51000 16010 0F90      		pop __tmp_reg__
 51001 16012 0F90      		pop __tmp_reg__
 51002 16014 0F90      		pop __tmp_reg__
 51003 16016 0F90      		pop __tmp_reg__
4790:lp_solve_5.5/lp_presolve.c ****         ix = add_SOS(lp, SOSname, 1, ix, 0, NULL, NULL);
 51004               		.loc 2 4790 0
 51005 16018 2F89      		ldd r18,Y+23
 51006 1601a 388D      		ldd r19,Y+24
 51007 1601c BE01      		movw r22,r28
 51008 1601e 615E      		subi r22,-31
 51009 16020 7F4F      		sbci r23,-1
 51010 16022 8A85      		ldd r24,Y+10
 51011 16024 9B85      		ldd r25,Y+11
 51012 16026 C12C      		mov r12,__zero_reg__
 51013 16028 D12C      		mov r13,__zero_reg__
 51014 1602a E12C      		mov r14,__zero_reg__
 51015 1602c F12C      		mov r15,__zero_reg__
 51016 1602e 00E0      		ldi r16,0
 51017 16030 10E0      		ldi r17,0
 51018 16032 41E0      		ldi r20,lo8(1)
 51019 16034 50E0      		ldi r21,0
 51020 16036 0E94 0000 		call add_SOS
 51021 1603a 988F      		std Y+24,r25
 51022 1603c 8F8B      		std Y+23,r24
4791:lp_solve_5.5/lp_presolve.c ****         if(jx == EQ)
 51023               		.loc 2 4791 0
 51024 1603e 8B89      		ldd r24,Y+19
 51025 16040 9C89      		ldd r25,Y+20
 51026 16042 0397      		sbiw r24,3
 51027 16044 01F4      		brne .L2103
4792:lp_solve_5.5/lp_presolve.c ****           SOS_set_GUB(lp->SOS, ix, TRUE);
 51028               		.loc 2 4792 0
 51029 16046 8A85      		ldd r24,Y+10
 51030 16048 9B85      		ldd r25,Y+11
 51031 1604a 8256      		subi r24,98
 51032 1604c 9D4F      		sbci r25,-3
 51033 1604e FC01      		movw r30,r24
 51034 16050 8081      		ld r24,Z
 51035 16052 9181      		ldd r25,Z+1
 51036 16054 2F89      		ldd r18,Y+23
 51037 16056 388D      		ldd r19,Y+24
 51038 16058 41E0      		ldi r20,lo8(1)
 51039 1605a B901      		movw r22,r18
 51040 1605c 0E94 0000 		call SOS_set_GUB
 51041               	.L2103:
4793:lp_solve_5.5/lp_presolve.c ****         Value1 = 0;
 51042               		.loc 2 4793 0
 51043 16060 1B8E      		std Y+27,__zero_reg__
 51044 16062 1C8E      		std Y+28,__zero_reg__
 51045 16064 1D8E      		std Y+29,__zero_reg__
 51046 16066 1E8E      		std Y+30,__zero_reg__
4794:lp_solve_5.5/lp_presolve.c ****         jjx = mat->row_end[i-1];
 51047               		.loc 2 4794 0
 51048 16068 8989      		ldd r24,Y+17
 51049 1606a 9A89      		ldd r25,Y+18
 51050 1606c FC01      		movw r30,r24
 51051 1606e 208D      		ldd r18,Z+24
 51052 16070 318D      		ldd r19,Z+25
 51053 16072 8E81      		ldd r24,Y+6
 51054 16074 9F81      		ldd r25,Y+7
 51055 16076 8150      		subi r24,1
 51056 16078 9048      		sbci r25,-128
 51057 1607a 880F      		lsl r24
 51058 1607c 991F      		rol r25
 51059 1607e 820F      		add r24,r18
 51060 16080 931F      		adc r25,r19
 51061 16082 FC01      		movw r30,r24
 51062 16084 8081      		ld r24,Z
 51063 16086 9181      		ldd r25,Z+1
 51064 16088 9987      		std Y+9,r25
 51065 1608a 8887      		std Y+8,r24
4795:lp_solve_5.5/lp_presolve.c ****         for(; jjx < iix; jjx++) {
 51066               		.loc 2 4795 0
 51067 1608c 00C0      		rjmp .L2104
 51068               	.L2107:
4796:lp_solve_5.5/lp_presolve.c ****           j = ROW_MAT_COLNR(jjx);
 51069               		.loc 2 4796 0
 51070 1608e 8989      		ldd r24,Y+17
 51071 16090 9A89      		ldd r25,Y+18
 51072 16092 FC01      		movw r30,r24
 51073 16094 2485      		ldd r18,Z+12
 51074 16096 3585      		ldd r19,Z+13
 51075 16098 8989      		ldd r24,Y+17
 51076 1609a 9A89      		ldd r25,Y+18
 51077 1609c FC01      		movw r30,r24
 51078 1609e 4689      		ldd r20,Z+22
 51079 160a0 5789      		ldd r21,Z+23
 51080 160a2 8885      		ldd r24,Y+8
 51081 160a4 9985      		ldd r25,Y+9
 51082 160a6 880F      		lsl r24
 51083 160a8 991F      		rol r25
 51084 160aa 840F      		add r24,r20
 51085 160ac 951F      		adc r25,r21
 51086 160ae FC01      		movw r30,r24
 51087 160b0 8081      		ld r24,Z
 51088 160b2 9181      		ldd r25,Z+1
 51089 160b4 880F      		lsl r24
 51090 160b6 991F      		rol r25
 51091 160b8 820F      		add r24,r18
 51092 160ba 931F      		adc r25,r19
 51093 160bc FC01      		movw r30,r24
 51094 160be 8081      		ld r24,Z
 51095 160c0 9181      		ldd r25,Z+1
 51096 160c2 9A8F      		std Y+26,r25
 51097 160c4 898F      		std Y+25,r24
4797:lp_solve_5.5/lp_presolve.c ****           if(!isActiveLink(psdata->cols->varmap, j))
 51098               		.loc 2 4797 0
 51099 160c6 298D      		ldd r18,Y+25
 51100 160c8 3A8D      		ldd r19,Y+26
 51101 160ca 8FA5      		ldd r24,Y+47
 51102 160cc 98A9      		ldd r25,Y+48
 51103 160ce FC01      		movw r30,r24
 51104 160d0 8281      		ldd r24,Z+2
 51105 160d2 9381      		ldd r25,Z+3
 51106 160d4 FC01      		movw r30,r24
 51107 160d6 8081      		ld r24,Z
 51108 160d8 9181      		ldd r25,Z+1
 51109 160da B901      		movw r22,r18
 51110 160dc 0E94 0000 		call isActiveLink
 51111 160e0 8823      		tst r24
 51112 160e2 01F0      		breq .L2114
4798:lp_solve_5.5/lp_presolve.c ****             continue;
4799:lp_solve_5.5/lp_presolve.c ****           Value1 += 1;
 51113               		.loc 2 4799 0
 51114 160e4 8B8D      		ldd r24,Y+27
 51115 160e6 9C8D      		ldd r25,Y+28
 51116 160e8 AD8D      		ldd r26,Y+29
 51117 160ea BE8D      		ldd r27,Y+30
 51118 160ec 20E0      		ldi r18,0
 51119 160ee 30E0      		ldi r19,0
 51120 160f0 40E8      		ldi r20,lo8(-128)
 51121 160f2 5FE3      		ldi r21,lo8(63)
 51122 160f4 BC01      		movw r22,r24
 51123 160f6 CD01      		movw r24,r26
 51124 160f8 0E94 0000 		call __addsf3
 51125 160fc DC01      		movw r26,r24
 51126 160fe CB01      		movw r24,r22
 51127 16100 8B8F      		std Y+27,r24
 51128 16102 9C8F      		std Y+28,r25
 51129 16104 AD8F      		std Y+29,r26
 51130 16106 BE8F      		std Y+30,r27
4800:lp_solve_5.5/lp_presolve.c ****           append_SOSrec(lp->SOS->sos_list[ix-1], 1, &j, &Value1);
 51131               		.loc 2 4800 0
 51132 16108 8A85      		ldd r24,Y+10
 51133 1610a 9B85      		ldd r25,Y+11
 51134 1610c 8256      		subi r24,98
 51135 1610e 9D4F      		sbci r25,-3
 51136 16110 FC01      		movw r30,r24
 51137 16112 8081      		ld r24,Z
 51138 16114 9181      		ldd r25,Z+1
 51139 16116 FC01      		movw r30,r24
 51140 16118 2281      		ldd r18,Z+2
 51141 1611a 3381      		ldd r19,Z+3
 51142 1611c 8F89      		ldd r24,Y+23
 51143 1611e 988D      		ldd r25,Y+24
 51144 16120 8150      		subi r24,1
 51145 16122 9048      		sbci r25,-128
 51146 16124 880F      		lsl r24
 51147 16126 991F      		rol r25
 51148 16128 820F      		add r24,r18
 51149 1612a 931F      		adc r25,r19
 51150 1612c FC01      		movw r30,r24
 51151 1612e 8081      		ld r24,Z
 51152 16130 9181      		ldd r25,Z+1
 51153 16132 9E01      		movw r18,r28
 51154 16134 255E      		subi r18,-27
 51155 16136 3F4F      		sbci r19,-1
 51156 16138 AE01      		movw r20,r28
 51157 1613a 475E      		subi r20,-25
 51158 1613c 5F4F      		sbci r21,-1
 51159 1613e 61E0      		ldi r22,lo8(1)
 51160 16140 70E0      		ldi r23,0
 51161 16142 0E94 0000 		call append_SOSrec
 51162 16146 00C0      		rjmp .L2106
 51163               	.L2114:
4798:lp_solve_5.5/lp_presolve.c ****             continue;
 51164               		.loc 2 4798 0
 51165 16148 0000      		nop
 51166               	.L2106:
4795:lp_solve_5.5/lp_presolve.c ****           j = ROW_MAT_COLNR(jjx);
 51167               		.loc 2 4795 0
 51168 1614a 8885      		ldd r24,Y+8
 51169 1614c 9985      		ldd r25,Y+9
 51170 1614e 0196      		adiw r24,1
 51171 16150 9987      		std Y+9,r25
 51172 16152 8887      		std Y+8,r24
 51173               	.L2104:
4795:lp_solve_5.5/lp_presolve.c ****           j = ROW_MAT_COLNR(jjx);
 51174               		.loc 2 4795 0 is_stmt 0 discriminator 1
 51175 16154 2885      		ldd r18,Y+8
 51176 16156 3985      		ldd r19,Y+9
 51177 16158 8D89      		ldd r24,Y+21
 51178 1615a 9E89      		ldd r25,Y+22
 51179 1615c 2817      		cp r18,r24
 51180 1615e 3907      		cpc r19,r25
 51181 16160 04F4      		brge .+2
 51182 16162 00C0      		rjmp .L2107
4801:lp_solve_5.5/lp_presolve.c ****         }
4802:lp_solve_5.5/lp_presolve.c ****         candelete = TRUE;
 51183               		.loc 2 4802 0 is_stmt 1
 51184 16164 81E0      		ldi r24,lo8(1)
 51185 16166 8983      		std Y+1,r24
4803:lp_solve_5.5/lp_presolve.c ****         iSOS++;
 51186               		.loc 2 4803 0
 51187 16168 8C81      		ldd r24,Y+4
 51188 1616a 9D81      		ldd r25,Y+5
 51189 1616c 0196      		adiw r24,1
 51190 1616e 9D83      		std Y+5,r25
 51191 16170 8C83      		std Y+4,r24
 51192               	.L2094:
 51193               	.LBE13:
4804:lp_solve_5.5/lp_presolve.c ****       }
4805:lp_solve_5.5/lp_presolve.c ****     }
4806:lp_solve_5.5/lp_presolve.c **** 
4807:lp_solve_5.5/lp_presolve.c ****     /* Get next row and do the deletion of the previous, if indicated */
4808:lp_solve_5.5/lp_presolve.c ****     ix = i;
 51194               		.loc 2 4808 0
 51195 16172 8E81      		ldd r24,Y+6
 51196 16174 9F81      		ldd r25,Y+7
 51197 16176 988F      		std Y+24,r25
 51198 16178 8F8B      		std Y+23,r24
4809:lp_solve_5.5/lp_presolve.c ****     i = prevActiveLink(psdata->rows->varmap, i);
 51199               		.loc 2 4809 0
 51200 1617a 8FA5      		ldd r24,Y+47
 51201 1617c 98A9      		ldd r25,Y+48
 51202 1617e FC01      		movw r30,r24
 51203 16180 8081      		ld r24,Z
 51204 16182 9181      		ldd r25,Z+1
 51205 16184 FC01      		movw r30,r24
 51206 16186 8081      		ld r24,Z
 51207 16188 9181      		ldd r25,Z+1
 51208 1618a 2E81      		ldd r18,Y+6
 51209 1618c 3F81      		ldd r19,Y+7
 51210 1618e B901      		movw r22,r18
 51211 16190 0E94 0000 		call prevActiveLink
 51212 16194 9F83      		std Y+7,r25
 51213 16196 8E83      		std Y+6,r24
4810:lp_solve_5.5/lp_presolve.c ****     if(candelete) {
 51214               		.loc 2 4810 0
 51215 16198 8981      		ldd r24,Y+1
 51216 1619a 8823      		tst r24
 51217 1619c 01F0      		breq .L2093
4811:lp_solve_5.5/lp_presolve.c ****       presolve_rowremove(psdata, ix, TRUE);
 51218               		.loc 2 4811 0
 51219 1619e 2F89      		ldd r18,Y+23
 51220 161a0 388D      		ldd r19,Y+24
 51221 161a2 8FA5      		ldd r24,Y+47
 51222 161a4 98A9      		ldd r25,Y+48
 51223 161a6 41E0      		ldi r20,lo8(1)
 51224 161a8 B901      		movw r22,r18
 51225 161aa 0E94 0000 		call presolve_rowremove
4812:lp_solve_5.5/lp_presolve.c ****       iConRemove++;
 51226               		.loc 2 4812 0
 51227 161ae 8A81      		ldd r24,Y+2
 51228 161b0 9B81      		ldd r25,Y+3
 51229 161b2 0196      		adiw r24,1
 51230 161b4 9B83      		std Y+3,r25
 51231 161b6 8A83      		std Y+2,r24
 51232               	.L2093:
4769:lp_solve_5.5/lp_presolve.c ****     candelete = FALSE;
 51233               		.loc 2 4769 0 discriminator 1
 51234 161b8 8E81      		ldd r24,Y+6
 51235 161ba 9F81      		ldd r25,Y+7
 51236 161bc 1816      		cp __zero_reg__,r24
 51237 161be 1906      		cpc __zero_reg__,r25
 51238 161c0 04F4      		brge .+2
 51239 161c2 00C0      		rjmp .L2108
4813:lp_solve_5.5/lp_presolve.c ****     }
4814:lp_solve_5.5/lp_presolve.c ****   }
4815:lp_solve_5.5/lp_presolve.c ****   if(iSOS)
 51240               		.loc 2 4815 0
 51241 161c4 8C81      		ldd r24,Y+4
 51242 161c6 9D81      		ldd r25,Y+5
 51243 161c8 892B      		or r24,r25
 51244 161ca 01F0      		breq .L2109
4816:lp_solve_5.5/lp_presolve.c ****     report(lp, DETAILED, "presolve_SOS1: Converted %5d constraints to SOS1.\n", iSOS);
 51245               		.loc 2 4816 0
 51246 161cc 8D81      		ldd r24,Y+5
 51247 161ce 8F93      		push r24
 51248 161d0 8C81      		ldd r24,Y+4
 51249 161d2 8F93      		push r24
 51250 161d4 80E0      		ldi r24,lo8(.LC58)
 51251 161d6 90E0      		ldi r25,hi8(.LC58)
 51252 161d8 892F      		mov r24,r25
 51253 161da 8F93      		push r24
 51254 161dc 80E0      		ldi r24,lo8(.LC58)
 51255 161de 90E0      		ldi r25,hi8(.LC58)
 51256 161e0 8F93      		push r24
 51257 161e2 1F92      		push __zero_reg__
 51258 161e4 85E0      		ldi r24,lo8(5)
 51259 161e6 8F93      		push r24
 51260 161e8 8B85      		ldd r24,Y+11
 51261 161ea 8F93      		push r24
 51262 161ec 8A85      		ldd r24,Y+10
 51263 161ee 8F93      		push r24
 51264 161f0 0E94 0000 		call report
 51265 161f4 8DB7      		in r24,__SP_L__
 51266 161f6 9EB7      		in r25,__SP_H__
 51267 161f8 0896      		adiw r24,8
 51268 161fa 0FB6      		in __tmp_reg__,__SREG__
 51269 161fc F894      		cli
 51270 161fe DEBF      		out __SP_H__,r29
 51271 16200 0FBE      		out __SREG__,__tmp_reg__
 51272 16202 CDBF      		out __SP_L__,r28
 51273               	.L2109:
4817:lp_solve_5.5/lp_presolve.c ****   clean_SOSgroup(lp->SOS, (MYBOOL) (iSOS > 0));
 51274               		.loc 2 4817 0
 51275 16204 21E0      		ldi r18,lo8(1)
 51276 16206 8C81      		ldd r24,Y+4
 51277 16208 9D81      		ldd r25,Y+5
 51278 1620a 1816      		cp __zero_reg__,r24
 51279 1620c 1906      		cpc __zero_reg__,r25
 51280 1620e 04F0      		brlt .L2110
 51281 16210 20E0      		ldi r18,0
 51282               	.L2110:
 51283 16212 8A85      		ldd r24,Y+10
 51284 16214 9B85      		ldd r25,Y+11
 51285 16216 8256      		subi r24,98
 51286 16218 9D4F      		sbci r25,-3
 51287 1621a FC01      		movw r30,r24
 51288 1621c 8081      		ld r24,Z
 51289 1621e 9181      		ldd r25,Z+1
 51290 16220 622F      		mov r22,r18
 51291 16222 0E94 0000 		call clean_SOSgroup
4818:lp_solve_5.5/lp_presolve.c **** 
4819:lp_solve_5.5/lp_presolve.c ****   (*nCoeffChanged) += iCoeffChanged;
 51292               		.loc 2 4819 0
 51293 16226 89A9      		ldd r24,Y+49
 51294 16228 9AA9      		ldd r25,Y+50
 51295 1622a FC01      		movw r30,r24
 51296 1622c 2081      		ld r18,Z
 51297 1622e 3181      		ldd r19,Z+1
 51298 16230 8D85      		ldd r24,Y+13
 51299 16232 9E85      		ldd r25,Y+14
 51300 16234 280F      		add r18,r24
 51301 16236 391F      		adc r19,r25
 51302 16238 89A9      		ldd r24,Y+49
 51303 1623a 9AA9      		ldd r25,Y+50
 51304 1623c FC01      		movw r30,r24
 51305 1623e 3183      		std Z+1,r19
 51306 16240 2083      		st Z,r18
4820:lp_solve_5.5/lp_presolve.c ****   (*nConRemove)    += iConRemove;
 51307               		.loc 2 4820 0
 51308 16242 8BA9      		ldd r24,Y+51
 51309 16244 9CA9      		ldd r25,Y+52
 51310 16246 FC01      		movw r30,r24
 51311 16248 2081      		ld r18,Z
 51312 1624a 3181      		ldd r19,Z+1
 51313 1624c 8A81      		ldd r24,Y+2
 51314 1624e 9B81      		ldd r25,Y+3
 51315 16250 280F      		add r18,r24
 51316 16252 391F      		adc r19,r25
 51317 16254 8BA9      		ldd r24,Y+51
 51318 16256 9CA9      		ldd r25,Y+52
 51319 16258 FC01      		movw r30,r24
 51320 1625a 3183      		std Z+1,r19
 51321 1625c 2083      		st Z,r18
4821:lp_solve_5.5/lp_presolve.c ****   (*nSOS)          += iSOS;
 51322               		.loc 2 4821 0
 51323 1625e 8FA9      		ldd r24,Y+55
 51324 16260 98AD      		ldd r25,Y+56
 51325 16262 FC01      		movw r30,r24
 51326 16264 2081      		ld r18,Z
 51327 16266 3181      		ldd r19,Z+1
 51328 16268 8C81      		ldd r24,Y+4
 51329 1626a 9D81      		ldd r25,Y+5
 51330 1626c 280F      		add r18,r24
 51331 1626e 391F      		adc r19,r25
 51332 16270 8FA9      		ldd r24,Y+55
 51333 16272 98AD      		ldd r25,Y+56
 51334 16274 FC01      		movw r30,r24
 51335 16276 3183      		std Z+1,r19
 51336 16278 2083      		st Z,r18
4822:lp_solve_5.5/lp_presolve.c ****   (*nSum)          += iCoeffChanged+iConRemove+iSOS;
 51337               		.loc 2 4822 0
 51338 1627a 89AD      		ldd r24,Y+57
 51339 1627c 9AAD      		ldd r25,Y+58
 51340 1627e FC01      		movw r30,r24
 51341 16280 2081      		ld r18,Z
 51342 16282 3181      		ldd r19,Z+1
 51343 16284 4D85      		ldd r20,Y+13
 51344 16286 5E85      		ldd r21,Y+14
 51345 16288 8A81      		ldd r24,Y+2
 51346 1628a 9B81      		ldd r25,Y+3
 51347 1628c 480F      		add r20,r24
 51348 1628e 591F      		adc r21,r25
 51349 16290 8C81      		ldd r24,Y+4
 51350 16292 9D81      		ldd r25,Y+5
 51351 16294 840F      		add r24,r20
 51352 16296 951F      		adc r25,r21
 51353 16298 280F      		add r18,r24
 51354 1629a 391F      		adc r19,r25
 51355 1629c 89AD      		ldd r24,Y+57
 51356 1629e 9AAD      		ldd r25,Y+58
 51357 162a0 FC01      		movw r30,r24
 51358 162a2 3183      		std Z+1,r19
 51359 162a4 2083      		st Z,r18
4823:lp_solve_5.5/lp_presolve.c **** 
4824:lp_solve_5.5/lp_presolve.c ****   return( status );
 51360               		.loc 2 4824 0
 51361 162a6 8F85      		ldd r24,Y+15
 51362 162a8 9889      		ldd r25,Y+16
 51363               	/* epilogue start */
4825:lp_solve_5.5/lp_presolve.c **** }
 51364               		.loc 2 4825 0
 51365 162aa EA96      		adiw r28,58
 51366 162ac 0FB6      		in __tmp_reg__,__SREG__
 51367 162ae F894      		cli
 51368 162b0 DEBF      		out __SP_H__,r29
 51369 162b2 0FBE      		out __SREG__,__tmp_reg__
 51370 162b4 CDBF      		out __SP_L__,r28
 51371 162b6 DF91      		pop r29
 51372 162b8 CF91      		pop r28
 51373 162ba 1F91      		pop r17
 51374 162bc 0F91      		pop r16
 51375 162be FF90      		pop r15
 51376 162c0 EF90      		pop r14
 51377 162c2 DF90      		pop r13
 51378 162c4 CF90      		pop r12
 51379 162c6 0895      		ret
 51380               		.cfi_endproc
 51381               	.LFE87:
 51383               	.global	presolve_boundconflict
 51385               	presolve_boundconflict:
 51386               	.LFB88:
4826:lp_solve_5.5/lp_presolve.c **** 
4827:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_boundconflict(presolverec *psdata, int baserowno, int colno)
4828:lp_solve_5.5/lp_presolve.c **** {
 51387               		.loc 2 4828 0
 51388               		.cfi_startproc
 51389 162c8 AF92      		push r10
 51390               	.LCFI550:
 51391               		.cfi_def_cfa_offset 3
 51392               		.cfi_offset 10, -2
 51393 162ca BF92      		push r11
 51394               	.LCFI551:
 51395               		.cfi_def_cfa_offset 4
 51396               		.cfi_offset 11, -3
 51397 162cc CF92      		push r12
 51398               	.LCFI552:
 51399               		.cfi_def_cfa_offset 5
 51400               		.cfi_offset 12, -4
 51401 162ce DF92      		push r13
 51402               	.LCFI553:
 51403               		.cfi_def_cfa_offset 6
 51404               		.cfi_offset 13, -5
 51405 162d0 EF92      		push r14
 51406               	.LCFI554:
 51407               		.cfi_def_cfa_offset 7
 51408               		.cfi_offset 14, -6
 51409 162d2 FF92      		push r15
 51410               	.LCFI555:
 51411               		.cfi_def_cfa_offset 8
 51412               		.cfi_offset 15, -7
 51413 162d4 0F93      		push r16
 51414               	.LCFI556:
 51415               		.cfi_def_cfa_offset 9
 51416               		.cfi_offset 16, -8
 51417 162d6 1F93      		push r17
 51418               	.LCFI557:
 51419               		.cfi_def_cfa_offset 10
 51420               		.cfi_offset 17, -9
 51421 162d8 CF93      		push r28
 51422               	.LCFI558:
 51423               		.cfi_def_cfa_offset 11
 51424               		.cfi_offset 28, -10
 51425 162da DF93      		push r29
 51426               	.LCFI559:
 51427               		.cfi_def_cfa_offset 12
 51428               		.cfi_offset 29, -11
 51429 162dc CDB7      		in r28,__SP_L__
 51430 162de DEB7      		in r29,__SP_H__
 51431               	.LCFI560:
 51432               		.cfi_def_cfa_register 28
 51433 162e0 6A97      		sbiw r28,26
 51434               	.LCFI561:
 51435               		.cfi_def_cfa_offset 38
 51436 162e2 0FB6      		in __tmp_reg__,__SREG__
 51437 162e4 F894      		cli
 51438 162e6 DEBF      		out __SP_H__,r29
 51439 162e8 0FBE      		out __SREG__,__tmp_reg__
 51440 162ea CDBF      		out __SP_L__,r28
 51441               	/* prologue: function */
 51442               	/* frame size = 26 */
 51443               	/* stack size = 36 */
 51444               	.L__stack_usage = 36
 51445 162ec 9E8B      		std Y+22,r25
 51446 162ee 8D8B      		std Y+21,r24
 51447 162f0 788F      		std Y+24,r23
 51448 162f2 6F8B      		std Y+23,r22
 51449 162f4 5A8F      		std Y+26,r21
 51450 162f6 498F      		std Y+25,r20
4829:lp_solve_5.5/lp_presolve.c ****   REAL   Value1, Value2;
4830:lp_solve_5.5/lp_presolve.c ****   lprec  *lp = psdata->lp;
 51451               		.loc 2 4830 0
 51452 162f8 8D89      		ldd r24,Y+21
 51453 162fa 9E89      		ldd r25,Y+22
 51454 162fc FC01      		movw r30,r24
 51455 162fe 8289      		ldd r24,Z+18
 51456 16300 9389      		ldd r25,Z+19
 51457 16302 9E83      		std Y+6,r25
 51458 16304 8D83      		std Y+5,r24
4831:lp_solve_5.5/lp_presolve.c ****   MATrec *mat = lp->matA;
 51459               		.loc 2 4831 0
 51460 16306 8D81      		ldd r24,Y+5
 51461 16308 9E81      		ldd r25,Y+6
 51462 1630a 8A54      		subi r24,74
 51463 1630c 9D4F      		sbci r25,-3
 51464 1630e FC01      		movw r30,r24
 51465 16310 8081      		ld r24,Z
 51466 16312 9181      		ldd r25,Z+1
 51467 16314 9887      		std Y+8,r25
 51468 16316 8F83      		std Y+7,r24
4832:lp_solve_5.5/lp_presolve.c ****   int    ix, item = 0,
 51469               		.loc 2 4832 0
 51470 16318 1C8A      		std Y+20,__zero_reg__
 51471 1631a 1B8A      		std Y+19,__zero_reg__
4833:lp_solve_5.5/lp_presolve.c ****          status = RUNNING;
 51472               		.loc 2 4833 0
 51473 1631c 88E0      		ldi r24,lo8(8)
 51474 1631e 90E0      		ldi r25,0
 51475 16320 9C83      		std Y+4,r25
 51476 16322 8B83      		std Y+3,r24
4834:lp_solve_5.5/lp_presolve.c **** 
4835:lp_solve_5.5/lp_presolve.c ****   if(baserowno <= 0) do {
 51477               		.loc 2 4835 0
 51478 16324 8F89      		ldd r24,Y+23
 51479 16326 988D      		ldd r25,Y+24
 51480 16328 1816      		cp __zero_reg__,r24
 51481 1632a 1906      		cpc __zero_reg__,r25
 51482 1632c 04F0      		brlt .L2116
 51483               	.L2119:
4836:lp_solve_5.5/lp_presolve.c ****     ix = presolve_nextrow(psdata, colno, &item);
 51484               		.loc 2 4836 0
 51485 1632e AE01      		movw r20,r28
 51486 16330 4D5E      		subi r20,-19
 51487 16332 5F4F      		sbci r21,-1
 51488 16334 298D      		ldd r18,Y+25
 51489 16336 3A8D      		ldd r19,Y+26
 51490 16338 8D89      		ldd r24,Y+21
 51491 1633a 9E89      		ldd r25,Y+22
 51492 1633c B901      		movw r22,r18
 51493 1633e 0E94 0000 		call presolve_nextrow
 51494 16342 9A83      		std Y+2,r25
 51495 16344 8983      		std Y+1,r24
4837:lp_solve_5.5/lp_presolve.c ****     if(ix < 0)
 51496               		.loc 2 4837 0
 51497 16346 8981      		ldd r24,Y+1
 51498 16348 9A81      		ldd r25,Y+2
 51499 1634a 9923      		tst r25
 51500 1634c 04F4      		brge .L2117
4838:lp_solve_5.5/lp_presolve.c ****       return( status );
 51501               		.loc 2 4838 0
 51502 1634e 8B81      		ldd r24,Y+3
 51503 16350 9C81      		ldd r25,Y+4
 51504 16352 00C0      		rjmp .L2126
 51505               	.L2117:
4839:lp_solve_5.5/lp_presolve.c ****     baserowno = COL_MAT_ROWNR(ix);
 51506               		.loc 2 4839 0
 51507 16354 8F81      		ldd r24,Y+7
 51508 16356 9885      		ldd r25,Y+8
 51509 16358 FC01      		movw r30,r24
 51510 1635a 2685      		ldd r18,Z+14
 51511 1635c 3785      		ldd r19,Z+15
 51512 1635e 8981      		ldd r24,Y+1
 51513 16360 9A81      		ldd r25,Y+2
 51514 16362 880F      		lsl r24
 51515 16364 991F      		rol r25
 51516 16366 820F      		add r24,r18
 51517 16368 931F      		adc r25,r19
 51518 1636a FC01      		movw r30,r24
 51519 1636c 8081      		ld r24,Z
 51520 1636e 9181      		ldd r25,Z+1
 51521 16370 988F      		std Y+24,r25
 51522 16372 8F8B      		std Y+23,r24
4840:lp_solve_5.5/lp_presolve.c ****   } while(presolve_rowlength(psdata, baserowno) != 1);
 51523               		.loc 2 4840 0
 51524 16374 2F89      		ldd r18,Y+23
 51525 16376 388D      		ldd r19,Y+24
 51526 16378 8D89      		ldd r24,Y+21
 51527 1637a 9E89      		ldd r25,Y+22
 51528 1637c B901      		movw r22,r18
 51529 1637e 0E94 0000 		call presolve_rowlength
 51530 16382 0197      		sbiw r24,1
 51531 16384 01F4      		brne .L2119
 51532               	.L2116:
4841:lp_solve_5.5/lp_presolve.c ****   Value1 = get_rh_upper(lp, baserowno),
 51533               		.loc 2 4841 0
 51534 16386 2F89      		ldd r18,Y+23
 51535 16388 388D      		ldd r19,Y+24
 51536 1638a 8D81      		ldd r24,Y+5
 51537 1638c 9E81      		ldd r25,Y+6
 51538 1638e B901      		movw r22,r18
 51539 16390 0E94 0000 		call get_rh_upper
 51540 16394 DC01      		movw r26,r24
 51541 16396 CB01      		movw r24,r22
 51542 16398 8B87      		std Y+11,r24
 51543 1639a 9C87      		std Y+12,r25
 51544 1639c AD87      		std Y+13,r26
 51545 1639e BE87      		std Y+14,r27
4842:lp_solve_5.5/lp_presolve.c ****   Value2 = get_rh_lower(lp, baserowno);
 51546               		.loc 2 4842 0
 51547 163a0 2F89      		ldd r18,Y+23
 51548 163a2 388D      		ldd r19,Y+24
 51549 163a4 8D81      		ldd r24,Y+5
 51550 163a6 9E81      		ldd r25,Y+6
 51551 163a8 B901      		movw r22,r18
 51552 163aa 0E94 0000 		call get_rh_lower
 51553 163ae DC01      		movw r26,r24
 51554 163b0 CB01      		movw r24,r22
 51555 163b2 8F87      		std Y+15,r24
 51556 163b4 988B      		std Y+16,r25
 51557 163b6 A98B      		std Y+17,r26
 51558 163b8 BA8B      		std Y+18,r27
4843:lp_solve_5.5/lp_presolve.c **** 
4844:lp_solve_5.5/lp_presolve.c ****   if(presolve_singletonbounds(psdata, baserowno, colno, &Value2, &Value1, NULL)) {
 51559               		.loc 2 4844 0
 51560 163ba FE01      		movw r30,r28
 51561 163bc 3B96      		adiw r30,11
 51562 163be 9E01      		movw r18,r28
 51563 163c0 215F      		subi r18,-15
 51564 163c2 3F4F      		sbci r19,-1
 51565 163c4 498D      		ldd r20,Y+25
 51566 163c6 5A8D      		ldd r21,Y+26
 51567 163c8 6F89      		ldd r22,Y+23
 51568 163ca 788D      		ldd r23,Y+24
 51569 163cc 8D89      		ldd r24,Y+21
 51570 163ce 9E89      		ldd r25,Y+22
 51571 163d0 E12C      		mov r14,__zero_reg__
 51572 163d2 F12C      		mov r15,__zero_reg__
 51573 163d4 8F01      		movw r16,r30
 51574 163d6 0E94 0000 		call presolve_singletonbounds
 51575 163da 8823      		tst r24
 51576 163dc 01F4      		brne .+2
 51577 163de 00C0      		rjmp .L2120
 51578               	.LBB14:
4845:lp_solve_5.5/lp_presolve.c ****     int iix;
4846:lp_solve_5.5/lp_presolve.c ****     item = 0;
 51579               		.loc 2 4846 0
 51580 163e0 1C8A      		std Y+20,__zero_reg__
 51581 163e2 1B8A      		std Y+19,__zero_reg__
4847:lp_solve_5.5/lp_presolve.c ****     for(ix = presolve_nextrow(psdata, colno, &item);
 51582               		.loc 2 4847 0
 51583 163e4 AE01      		movw r20,r28
 51584 163e6 4D5E      		subi r20,-19
 51585 163e8 5F4F      		sbci r21,-1
 51586 163ea 298D      		ldd r18,Y+25
 51587 163ec 3A8D      		ldd r19,Y+26
 51588 163ee 8D89      		ldd r24,Y+21
 51589 163f0 9E89      		ldd r25,Y+22
 51590 163f2 B901      		movw r22,r18
 51591 163f4 0E94 0000 		call presolve_nextrow
 51592 163f8 9A83      		std Y+2,r25
 51593 163fa 8983      		std Y+1,r24
 51594 163fc 00C0      		rjmp .L2121
 51595               	.L2124:
4848:lp_solve_5.5/lp_presolve.c ****         ix >= 0; ix = presolve_nextrow(psdata, colno, &item)) {
4849:lp_solve_5.5/lp_presolve.c ****       iix = COL_MAT_ROWNR(ix);
 51596               		.loc 2 4849 0
 51597 163fe 8F81      		ldd r24,Y+7
 51598 16400 9885      		ldd r25,Y+8
 51599 16402 FC01      		movw r30,r24
 51600 16404 2685      		ldd r18,Z+14
 51601 16406 3785      		ldd r19,Z+15
 51602 16408 8981      		ldd r24,Y+1
 51603 1640a 9A81      		ldd r25,Y+2
 51604 1640c 880F      		lsl r24
 51605 1640e 991F      		rol r25
 51606 16410 820F      		add r24,r18
 51607 16412 931F      		adc r25,r19
 51608 16414 FC01      		movw r30,r24
 51609 16416 8081      		ld r24,Z
 51610 16418 9181      		ldd r25,Z+1
 51611 1641a 9A87      		std Y+10,r25
 51612 1641c 8987      		std Y+9,r24
4850:lp_solve_5.5/lp_presolve.c ****       if((iix != baserowno) &&
 51613               		.loc 2 4850 0
 51614 1641e 2985      		ldd r18,Y+9
 51615 16420 3A85      		ldd r19,Y+10
 51616 16422 8F89      		ldd r24,Y+23
 51617 16424 988D      		ldd r25,Y+24
 51618 16426 2817      		cp r18,r24
 51619 16428 3907      		cpc r19,r25
 51620 1642a 01F0      		breq .L2122
4851:lp_solve_5.5/lp_presolve.c ****          (presolve_rowlength(psdata, iix) == 1) &&
 51621               		.loc 2 4851 0 discriminator 1
 51622 1642c 2985      		ldd r18,Y+9
 51623 1642e 3A85      		ldd r19,Y+10
 51624 16430 8D89      		ldd r24,Y+21
 51625 16432 9E89      		ldd r25,Y+22
 51626 16434 B901      		movw r22,r18
 51627 16436 0E94 0000 		call presolve_rowlength
4850:lp_solve_5.5/lp_presolve.c ****       if((iix != baserowno) &&
 51628               		.loc 2 4850 0 discriminator 1
 51629 1643a 0197      		sbiw r24,1
 51630 1643c 01F4      		brne .L2122
4852:lp_solve_5.5/lp_presolve.c ****          !presolve_altsingletonvalid(psdata, iix, colno, Value2, Value1)) {
 51631               		.loc 2 4852 0
 51632 1643e 2B85      		ldd r18,Y+11
 51633 16440 3C85      		ldd r19,Y+12
 51634 16442 4D85      		ldd r20,Y+13
 51635 16444 5E85      		ldd r21,Y+14
 51636 16446 8F85      		ldd r24,Y+15
 51637 16448 9889      		ldd r25,Y+16
 51638 1644a A989      		ldd r26,Y+17
 51639 1644c BA89      		ldd r27,Y+18
 51640 1644e A98C      		ldd r10,Y+25
 51641 16450 BA8C      		ldd r11,Y+26
 51642 16452 6985      		ldd r22,Y+9
 51643 16454 7A85      		ldd r23,Y+10
 51644 16456 ED89      		ldd r30,Y+21
 51645 16458 FE89      		ldd r31,Y+22
 51646 1645a 6901      		movw r12,r18
 51647 1645c 7A01      		movw r14,r20
 51648 1645e 8C01      		movw r16,r24
 51649 16460 9D01      		movw r18,r26
 51650 16462 A501      		movw r20,r10
 51651 16464 CF01      		movw r24,r30
 51652 16466 0E94 0000 		call presolve_altsingletonvalid
4851:lp_solve_5.5/lp_presolve.c ****          (presolve_rowlength(psdata, iix) == 1) &&
 51653               		.loc 2 4851 0
 51654 1646a 8823      		tst r24
 51655 1646c 01F4      		brne .L2122
4853:lp_solve_5.5/lp_presolve.c ****         status = presolve_setstatus(psdata, INFEASIBLE);
 51656               		.loc 2 4853 0
 51657 1646e 8D89      		ldd r24,Y+21
 51658 16470 9E89      		ldd r25,Y+22
 51659 16472 20E0      		ldi r18,lo8(.LC21)
 51660 16474 30E0      		ldi r19,hi8(.LC21)
 51661 16476 45EF      		ldi r20,lo8(-11)
 51662 16478 52E1      		ldi r21,lo8(18)
 51663 1647a 62E0      		ldi r22,lo8(2)
 51664 1647c 70E0      		ldi r23,0
 51665 1647e 0E94 0000 		call presolve_setstatusex
 51666 16482 9C83      		std Y+4,r25
 51667 16484 8B83      		std Y+3,r24
4854:lp_solve_5.5/lp_presolve.c ****         break;
 51668               		.loc 2 4854 0
 51669 16486 00C0      		rjmp .L2125
 51670               	.L2122:
4848:lp_solve_5.5/lp_presolve.c ****       iix = COL_MAT_ROWNR(ix);
 51671               		.loc 2 4848 0
 51672 16488 AE01      		movw r20,r28
 51673 1648a 4D5E      		subi r20,-19
 51674 1648c 5F4F      		sbci r21,-1
 51675 1648e 298D      		ldd r18,Y+25
 51676 16490 3A8D      		ldd r19,Y+26
 51677 16492 8D89      		ldd r24,Y+21
 51678 16494 9E89      		ldd r25,Y+22
 51679 16496 B901      		movw r22,r18
 51680 16498 0E94 0000 		call presolve_nextrow
 51681 1649c 9A83      		std Y+2,r25
 51682 1649e 8983      		std Y+1,r24
 51683               	.L2121:
4847:lp_solve_5.5/lp_presolve.c ****         ix >= 0; ix = presolve_nextrow(psdata, colno, &item)) {
 51684               		.loc 2 4847 0 discriminator 1
 51685 164a0 8981      		ldd r24,Y+1
 51686 164a2 9A81      		ldd r25,Y+2
 51687 164a4 9923      		tst r25
 51688 164a6 04F0      		brlt .+2
 51689 164a8 00C0      		rjmp .L2124
 51690 164aa 00C0      		rjmp .L2125
 51691               	.L2120:
 51692               	.LBE14:
4855:lp_solve_5.5/lp_presolve.c ****       }
4856:lp_solve_5.5/lp_presolve.c ****     }
4857:lp_solve_5.5/lp_presolve.c ****   }
4858:lp_solve_5.5/lp_presolve.c ****   else
4859:lp_solve_5.5/lp_presolve.c ****     status = presolve_setstatus(psdata, INFEASIBLE);
 51693               		.loc 2 4859 0
 51694 164ac 8D89      		ldd r24,Y+21
 51695 164ae 9E89      		ldd r25,Y+22
 51696 164b0 20E0      		ldi r18,lo8(.LC21)
 51697 164b2 30E0      		ldi r19,hi8(.LC21)
 51698 164b4 4BEF      		ldi r20,lo8(-5)
 51699 164b6 52E1      		ldi r21,lo8(18)
 51700 164b8 62E0      		ldi r22,lo8(2)
 51701 164ba 70E0      		ldi r23,0
 51702 164bc 0E94 0000 		call presolve_setstatusex
 51703 164c0 9C83      		std Y+4,r25
 51704 164c2 8B83      		std Y+3,r24
 51705               	.L2125:
4860:lp_solve_5.5/lp_presolve.c ****   return( status );
 51706               		.loc 2 4860 0
 51707 164c4 8B81      		ldd r24,Y+3
 51708 164c6 9C81      		ldd r25,Y+4
 51709               	.L2126:
 51710               	/* epilogue start */
4861:lp_solve_5.5/lp_presolve.c **** }
 51711               		.loc 2 4861 0 discriminator 1
 51712 164c8 6A96      		adiw r28,26
 51713 164ca 0FB6      		in __tmp_reg__,__SREG__
 51714 164cc F894      		cli
 51715 164ce DEBF      		out __SP_H__,r29
 51716 164d0 0FBE      		out __SREG__,__tmp_reg__
 51717 164d2 CDBF      		out __SP_L__,r28
 51718 164d4 DF91      		pop r29
 51719 164d6 CF91      		pop r28
 51720 164d8 1F91      		pop r17
 51721 164da 0F91      		pop r16
 51722 164dc FF90      		pop r15
 51723 164de EF90      		pop r14
 51724 164e0 DF90      		pop r13
 51725 164e2 CF90      		pop r12
 51726 164e4 BF90      		pop r11
 51727 164e6 AF90      		pop r10
 51728 164e8 0895      		ret
 51729               		.cfi_endproc
 51730               	.LFE88:
 51732               		.section	.rodata
 51733               	.LC59:
 51734 09f1 7072 6573 		.string	"presolve_columns: Eliminated unused variable %s\n"
 51734      6F6C 7665 
 51734      5F63 6F6C 
 51734      756D 6E73 
 51734      3A20 456C 
 51735               	.LC60:
 51736 0a22 7072 6573 		.string	"presolve_columns: Unbounded variable %s\n"
 51736      6F6C 7665 
 51736      5F63 6F6C 
 51736      756D 6E73 
 51736      3A20 556E 
 51737               	.LC61:
 51738 0a4b 7072 6573 		.string	"presolve_columns: Eliminated trivial variable %s fixed at %g\n"
 51738      6F6C 7665 
 51738      5F63 6F6C 
 51738      756D 6E73 
 51738      3A20 456C 
 51739               	.LC62:
 51740 0a89 7072 6573 		.string	"presolve_columns: Eliminated variable %s fixed at %g\n"
 51740      6F6C 7665 
 51740      5F63 6F6C 
 51740      756D 6E73 
 51740      3A20 456C 
 51741               	.LC63:
 51742 0abf 7072 6573 		.string	"presolve_columns: Eliminated dual-zero variable %s fixed at %g\n"
 51742      6F6C 7665 
 51742      5F63 6F6C 
 51742      756D 6E73 
 51742      3A20 456C 
 51743               	.LC64:
 51744 0aff 7072 6573 		.string	"presolve_columns: Fixed binary variable %s at %g\n"
 51744      6F6C 7665 
 51744      5F63 6F6C 
 51744      756D 6E73 
 51744      3A20 4669 
 51745               		.text
 51746               	.global	presolve_columns
 51748               	presolve_columns:
 51749               	.LFB89:
4862:lp_solve_5.5/lp_presolve.c **** 
4863:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_columns(presolverec *psdata, int *nCoeffChanged, int *nConRemove, int *nVarFixe
4864:lp_solve_5.5/lp_presolve.c **** {
 51750               		.loc 2 4864 0
 51751               		.cfi_startproc
 51752 164ea CF92      		push r12
 51753               	.LCFI562:
 51754               		.cfi_def_cfa_offset 3
 51755               		.cfi_offset 12, -2
 51756 164ec DF92      		push r13
 51757               	.LCFI563:
 51758               		.cfi_def_cfa_offset 4
 51759               		.cfi_offset 13, -3
 51760 164ee EF92      		push r14
 51761               	.LCFI564:
 51762               		.cfi_def_cfa_offset 5
 51763               		.cfi_offset 14, -4
 51764 164f0 FF92      		push r15
 51765               	.LCFI565:
 51766               		.cfi_def_cfa_offset 6
 51767               		.cfi_offset 15, -5
 51768 164f2 0F93      		push r16
 51769               	.LCFI566:
 51770               		.cfi_def_cfa_offset 7
 51771               		.cfi_offset 16, -6
 51772 164f4 1F93      		push r17
 51773               	.LCFI567:
 51774               		.cfi_def_cfa_offset 8
 51775               		.cfi_offset 17, -7
 51776 164f6 CF93      		push r28
 51777               	.LCFI568:
 51778               		.cfi_def_cfa_offset 9
 51779               		.cfi_offset 28, -8
 51780 164f8 DF93      		push r29
 51781               	.LCFI569:
 51782               		.cfi_def_cfa_offset 10
 51783               		.cfi_offset 29, -9
 51784 164fa CDB7      		in r28,__SP_L__
 51785 164fc DEB7      		in r29,__SP_H__
 51786               	.LCFI570:
 51787               		.cfi_def_cfa_register 28
 51788 164fe A997      		sbiw r28,41
 51789               	.LCFI571:
 51790               		.cfi_def_cfa_offset 51
 51791 16500 0FB6      		in __tmp_reg__,__SREG__
 51792 16502 F894      		cli
 51793 16504 DEBF      		out __SP_H__,r29
 51794 16506 0FBE      		out __SREG__,__tmp_reg__
 51795 16508 CDBF      		out __SP_L__,r28
 51796               	/* prologue: function */
 51797               	/* frame size = 41 */
 51798               	/* stack size = 49 */
 51799               	.L__stack_usage = 49
 51800 1650a 9F8F      		std Y+31,r25
 51801 1650c 8E8F      		std Y+30,r24
 51802 1650e 79A3      		std Y+33,r23
 51803 16510 68A3      		std Y+32,r22
 51804 16512 5BA3      		std Y+35,r21
 51805 16514 4AA3      		std Y+34,r20
 51806 16516 3DA3      		std Y+37,r19
 51807 16518 2CA3      		std Y+36,r18
 51808 1651a 1FA3      		std Y+39,r17
 51809 1651c 0EA3      		std Y+38,r16
 51810 1651e F9A6      		std Y+41,r15
 51811 16520 E8A6      		std Y+40,r14
4865:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 51812               		.loc 2 4865 0
 51813 16522 8E8D      		ldd r24,Y+30
 51814 16524 9F8D      		ldd r25,Y+31
 51815 16526 FC01      		movw r30,r24
 51816 16528 8289      		ldd r24,Z+18
 51817 1652a 9389      		ldd r25,Z+19
 51818 1652c 9D83      		std Y+5,r25
 51819 1652e 8C83      		std Y+4,r24
4866:lp_solve_5.5/lp_presolve.c ****   MYBOOL   candelete, isOFNZ, unbounded,
4867:lp_solve_5.5/lp_presolve.c ****            probefix = is_presolve(lp, PRESOLVE_PROBEFIX),
 51820               		.loc 2 4867 0
 51821 16530 8C81      		ldd r24,Y+4
 51822 16532 9D81      		ldd r25,Y+5
 51823 16534 60E0      		ldi r22,0
 51824 16536 78E0      		ldi r23,lo8(8)
 51825 16538 0E94 0000 		call is_presolve
 51826 1653c 8E83      		std Y+6,r24
4868:lp_solve_5.5/lp_presolve.c **** #if 0
4869:lp_solve_5.5/lp_presolve.c ****            probereduce = is_presolve(lp, PRESOLVE_PROBEREDUCE),
4870:lp_solve_5.5/lp_presolve.c **** #endif
4871:lp_solve_5.5/lp_presolve.c ****            colfixdual = is_presolve(lp, PRESOLVE_COLFIXDUAL);
 51827               		.loc 2 4871 0
 51828 1653e 8C81      		ldd r24,Y+4
 51829 16540 9D81      		ldd r25,Y+5
 51830 16542 60E0      		ldi r22,0
 51831 16544 70E0      		ldi r23,0
 51832 16546 0E94 0000 		call is_presolve
 51833 1654a 8F83      		std Y+7,r24
4872:lp_solve_5.5/lp_presolve.c ****   int      iCoeffChanged = 0, iConRemove = 0, iVarFixed = 0, iBoundTighten = 0,
 51834               		.loc 2 4872 0
 51835 1654c 1986      		std Y+9,__zero_reg__
 51836 1654e 1886      		std Y+8,__zero_reg__
 51837 16550 1D8A      		std Y+21,__zero_reg__
 51838 16552 1C8A      		std Y+20,__zero_reg__
 51839 16554 1F8A      		std Y+23,__zero_reg__
 51840 16556 1E8A      		std Y+22,__zero_reg__
 51841 16558 1B86      		std Y+11,__zero_reg__
 51842 1655a 1A86      		std Y+10,__zero_reg__
4873:lp_solve_5.5/lp_presolve.c ****            status = RUNNING, ix, j, countNZ, item;
 51843               		.loc 2 4873 0
 51844 1655c 88E0      		ldi r24,lo8(8)
 51845 1655e 90E0      		ldi r25,0
 51846 16560 998F      		std Y+25,r25
 51847 16562 888F      		std Y+24,r24
4874:lp_solve_5.5/lp_presolve.c ****   REAL     Value1;
4875:lp_solve_5.5/lp_presolve.c **** 
4876:lp_solve_5.5/lp_presolve.c ****   for(j = firstActiveLink(psdata->cols->varmap); (j != 0) && (status == RUNNING); ) {
 51848               		.loc 2 4876 0
 51849 16564 8E8D      		ldd r24,Y+30
 51850 16566 9F8D      		ldd r25,Y+31
 51851 16568 FC01      		movw r30,r24
 51852 1656a 8281      		ldd r24,Z+2
 51853 1656c 9381      		ldd r25,Z+3
 51854 1656e FC01      		movw r30,r24
 51855 16570 8081      		ld r24,Z
 51856 16572 9181      		ldd r25,Z+1
 51857 16574 0E94 0000 		call firstActiveLink
 51858 16578 9B83      		std Y+3,r25
 51859 1657a 8A83      		std Y+2,r24
 51860 1657c 00C0      		rjmp .L2128
 51861               	.L2155:
4877:lp_solve_5.5/lp_presolve.c **** 
4878:lp_solve_5.5/lp_presolve.c ****     /* Don't presolve members SOS'es */
4879:lp_solve_5.5/lp_presolve.c ****     if(SOS_is_member(lp->SOS, 0, j)) {
 51862               		.loc 2 4879 0
 51863 1657e 8C81      		ldd r24,Y+4
 51864 16580 9D81      		ldd r25,Y+5
 51865 16582 8256      		subi r24,98
 51866 16584 9D4F      		sbci r25,-3
 51867 16586 FC01      		movw r30,r24
 51868 16588 8081      		ld r24,Z
 51869 1658a 9181      		ldd r25,Z+1
 51870 1658c 2A81      		ldd r18,Y+2
 51871 1658e 3B81      		ldd r19,Y+3
 51872 16590 A901      		movw r20,r18
 51873 16592 60E0      		ldi r22,0
 51874 16594 70E0      		ldi r23,0
 51875 16596 0E94 0000 		call SOS_is_member
 51876 1659a 892B      		or r24,r25
 51877 1659c 01F0      		breq .L2129
4880:lp_solve_5.5/lp_presolve.c ****       j = nextActiveLink(psdata->cols->varmap, j);
 51878               		.loc 2 4880 0
 51879 1659e 8E8D      		ldd r24,Y+30
 51880 165a0 9F8D      		ldd r25,Y+31
 51881 165a2 FC01      		movw r30,r24
 51882 165a4 8281      		ldd r24,Z+2
 51883 165a6 9381      		ldd r25,Z+3
 51884 165a8 FC01      		movw r30,r24
 51885 165aa 8081      		ld r24,Z
 51886 165ac 9181      		ldd r25,Z+1
 51887 165ae 2A81      		ldd r18,Y+2
 51888 165b0 3B81      		ldd r19,Y+3
 51889 165b2 B901      		movw r22,r18
 51890 165b4 0E94 0000 		call nextActiveLink
 51891 165b8 9B83      		std Y+3,r25
 51892 165ba 8A83      		std Y+2,r24
4881:lp_solve_5.5/lp_presolve.c ****       continue;
 51893               		.loc 2 4881 0
 51894 165bc 00C0      		rjmp .L2128
 51895               	.L2129:
4882:lp_solve_5.5/lp_presolve.c ****     }
4883:lp_solve_5.5/lp_presolve.c **** 
4884:lp_solve_5.5/lp_presolve.c ****     /* Initialize */
4885:lp_solve_5.5/lp_presolve.c ****     countNZ = presolve_collength(psdata, j);
 51896               		.loc 2 4885 0
 51897 165be 2A81      		ldd r18,Y+2
 51898 165c0 3B81      		ldd r19,Y+3
 51899 165c2 8E8D      		ldd r24,Y+30
 51900 165c4 9F8D      		ldd r25,Y+31
 51901 165c6 B901      		movw r22,r18
 51902 165c8 0E94 0000 		call presolve_collength
 51903 165cc 9D87      		std Y+13,r25
 51904 165ce 8C87      		std Y+12,r24
4886:lp_solve_5.5/lp_presolve.c ****     isOFNZ  = isnz_origobj(lp, j);
 51905               		.loc 2 4886 0
 51906 165d0 2A81      		ldd r18,Y+2
 51907 165d2 3B81      		ldd r19,Y+3
 51908 165d4 8C81      		ldd r24,Y+4
 51909 165d6 9D81      		ldd r25,Y+5
 51910 165d8 B901      		movw r22,r18
 51911 165da 0E94 0000 		call isnz_origobj
 51912 165de 8E87      		std Y+14,r24
4887:lp_solve_5.5/lp_presolve.c ****     Value1  = get_lowbo(lp, j);
 51913               		.loc 2 4887 0
 51914 165e0 2A81      		ldd r18,Y+2
 51915 165e2 3B81      		ldd r19,Y+3
 51916 165e4 8C81      		ldd r24,Y+4
 51917 165e6 9D81      		ldd r25,Y+5
 51918 165e8 B901      		movw r22,r18
 51919 165ea 0E94 0000 		call get_lowbo
 51920 165ee DC01      		movw r26,r24
 51921 165f0 CB01      		movw r24,r22
 51922 165f2 8A8F      		std Y+26,r24
 51923 165f4 9B8F      		std Y+27,r25
 51924 165f6 AC8F      		std Y+28,r26
 51925 165f8 BD8F      		std Y+29,r27
4888:lp_solve_5.5/lp_presolve.c ****     unbounded = is_unbounded(lp, j);
 51926               		.loc 2 4888 0
 51927 165fa 2A81      		ldd r18,Y+2
 51928 165fc 3B81      		ldd r19,Y+3
 51929 165fe 8C81      		ldd r24,Y+4
 51930 16600 9D81      		ldd r25,Y+5
 51931 16602 B901      		movw r22,r18
 51932 16604 0E94 0000 		call is_unbounded
 51933 16608 8F87      		std Y+15,r24
4889:lp_solve_5.5/lp_presolve.c **** 
4890:lp_solve_5.5/lp_presolve.c ****     /* Clear unnecessary semicont-definitions */
4891:lp_solve_5.5/lp_presolve.c ****     if((lp->sc_vars > 0) && (Value1 == 0) && is_semicont(lp, j))
 51934               		.loc 2 4891 0
 51935 1660a 8C81      		ldd r24,Y+4
 51936 1660c 9D81      		ldd r25,Y+5
 51937 1660e 8057      		subi r24,112
 51938 16610 9D4F      		sbci r25,-3
 51939 16612 FC01      		movw r30,r24
 51940 16614 8081      		ld r24,Z
 51941 16616 9181      		ldd r25,Z+1
 51942 16618 1816      		cp __zero_reg__,r24
 51943 1661a 1906      		cpc __zero_reg__,r25
 51944 1661c 04F4      		brge .L2130
 51945               		.loc 2 4891 0 is_stmt 0 discriminator 1
 51946 1661e 8A8D      		ldd r24,Y+26
 51947 16620 9B8D      		ldd r25,Y+27
 51948 16622 AC8D      		ldd r26,Y+28
 51949 16624 BD8D      		ldd r27,Y+29
 51950 16626 20E0      		ldi r18,0
 51951 16628 30E0      		ldi r19,0
 51952 1662a A901      		movw r20,r18
 51953 1662c BC01      		movw r22,r24
 51954 1662e CD01      		movw r24,r26
 51955 16630 0E94 0000 		call __eqsf2
 51956 16634 8823      		tst r24
 51957 16636 01F4      		brne .L2130
 51958               		.loc 2 4891 0 discriminator 2
 51959 16638 2A81      		ldd r18,Y+2
 51960 1663a 3B81      		ldd r19,Y+3
 51961 1663c 8C81      		ldd r24,Y+4
 51962 1663e 9D81      		ldd r25,Y+5
 51963 16640 B901      		movw r22,r18
 51964 16642 0E94 0000 		call is_semicont
 51965 16646 8823      		tst r24
 51966 16648 01F0      		breq .L2130
4892:lp_solve_5.5/lp_presolve.c ****       set_semicont(lp, j, FALSE);
 51967               		.loc 2 4892 0 is_stmt 1
 51968 1664a 2A81      		ldd r18,Y+2
 51969 1664c 3B81      		ldd r19,Y+3
 51970 1664e 8C81      		ldd r24,Y+4
 51971 16650 9D81      		ldd r25,Y+5
 51972 16652 40E0      		ldi r20,0
 51973 16654 B901      		movw r22,r18
 51974 16656 0E94 0000 		call set_semicont
 51975               	.L2130:
4893:lp_solve_5.5/lp_presolve.c **** 
4894:lp_solve_5.5/lp_presolve.c ****     candelete = FALSE;
 51976               		.loc 2 4894 0
 51977 1665a 1982      		std Y+1,__zero_reg__
4895:lp_solve_5.5/lp_presolve.c ****     item = 0;
 51978               		.loc 2 4895 0
 51979 1665c 198A      		std Y+17,__zero_reg__
 51980 1665e 188A      		std Y+16,__zero_reg__
4896:lp_solve_5.5/lp_presolve.c ****     ix = lp->rows + j;
 51981               		.loc 2 4896 0
 51982 16660 8C81      		ldd r24,Y+4
 51983 16662 9D81      		ldd r25,Y+5
 51984 16664 8651      		subi r24,22
 51985 16666 9E4F      		sbci r25,-2
 51986 16668 FC01      		movw r30,r24
 51987 1666a 2081      		ld r18,Z
 51988 1666c 3181      		ldd r19,Z+1
 51989 1666e 8A81      		ldd r24,Y+2
 51990 16670 9B81      		ldd r25,Y+3
 51991 16672 820F      		add r24,r18
 51992 16674 931F      		adc r25,r19
 51993 16676 9B8B      		std Y+19,r25
 51994 16678 8A8B      		std Y+18,r24
4897:lp_solve_5.5/lp_presolve.c **** 
4898:lp_solve_5.5/lp_presolve.c ****     /* Check if the variable is unused */
4899:lp_solve_5.5/lp_presolve.c ****     if((countNZ == 0) && !isOFNZ) {
 51995               		.loc 2 4899 0
 51996 1667a 8C85      		ldd r24,Y+12
 51997 1667c 9D85      		ldd r25,Y+13
 51998 1667e 892B      		or r24,r25
 51999 16680 01F4      		brne .L2132
 52000               		.loc 2 4899 0 is_stmt 0 discriminator 1
 52001 16682 8E85      		ldd r24,Y+14
 52002 16684 8823      		tst r24
 52003 16686 01F4      		brne .L2132
4900:lp_solve_5.5/lp_presolve.c ****       if(Value1 != 0)
 52004               		.loc 2 4900 0 is_stmt 1
 52005 16688 8A8D      		ldd r24,Y+26
 52006 1668a 9B8D      		ldd r25,Y+27
 52007 1668c AC8D      		ldd r26,Y+28
 52008 1668e BD8D      		ldd r27,Y+29
 52009 16690 20E0      		ldi r18,0
 52010 16692 30E0      		ldi r19,0
 52011 16694 A901      		movw r20,r18
 52012 16696 BC01      		movw r22,r24
 52013 16698 CD01      		movw r24,r26
 52014 1669a 0E94 0000 		call __nesf2
 52015 1669e 8823      		tst r24
 52016 166a0 01F0      		breq .L2133
4901:lp_solve_5.5/lp_presolve.c ****         report(lp, DETAILED, "presolve_columns: Eliminated unused variable %s\n",
 52017               		.loc 2 4901 0
 52018 166a2 2A81      		ldd r18,Y+2
 52019 166a4 3B81      		ldd r19,Y+3
 52020 166a6 8C81      		ldd r24,Y+4
 52021 166a8 9D81      		ldd r25,Y+5
 52022 166aa B901      		movw r22,r18
 52023 166ac 0E94 0000 		call get_col_name
 52024 166b0 292F      		mov r18,r25
 52025 166b2 2F93      		push r18
 52026 166b4 8F93      		push r24
 52027 166b6 80E0      		ldi r24,lo8(.LC59)
 52028 166b8 90E0      		ldi r25,hi8(.LC59)
 52029 166ba 892F      		mov r24,r25
 52030 166bc 8F93      		push r24
 52031 166be 80E0      		ldi r24,lo8(.LC59)
 52032 166c0 90E0      		ldi r25,hi8(.LC59)
 52033 166c2 8F93      		push r24
 52034 166c4 1F92      		push __zero_reg__
 52035 166c6 85E0      		ldi r24,lo8(5)
 52036 166c8 8F93      		push r24
 52037 166ca 8D81      		ldd r24,Y+5
 52038 166cc 8F93      		push r24
 52039 166ce 8C81      		ldd r24,Y+4
 52040 166d0 8F93      		push r24
 52041 166d2 0E94 0000 		call report
 52042 166d6 8DB7      		in r24,__SP_L__
 52043 166d8 9EB7      		in r25,__SP_H__
 52044 166da 0896      		adiw r24,8
 52045 166dc 0FB6      		in __tmp_reg__,__SREG__
 52046 166de F894      		cli
 52047 166e0 DEBF      		out __SP_H__,r29
 52048 166e2 0FBE      		out __SREG__,__tmp_reg__
 52049 166e4 CDBF      		out __SP_L__,r28
 52050               	.L2133:
4902:lp_solve_5.5/lp_presolve.c ****                               get_col_name(lp,j));
4903:lp_solve_5.5/lp_presolve.c ****       candelete = TRUE;
 52051               		.loc 2 4903 0
 52052 166e6 81E0      		ldi r24,lo8(1)
 52053 166e8 8983      		std Y+1,r24
 52054 166ea 00C0      		rjmp .L2135
 52055               	.L2132:
4904:lp_solve_5.5/lp_presolve.c ****     }
4905:lp_solve_5.5/lp_presolve.c **** 
4906:lp_solve_5.5/lp_presolve.c ****     /* Check if the variable has a cost, but is not limited by constraints */
4907:lp_solve_5.5/lp_presolve.c ****     else if((countNZ == 0) && isOFNZ) {
 52056               		.loc 2 4907 0
 52057 166ec 8C85      		ldd r24,Y+12
 52058 166ee 9D85      		ldd r25,Y+13
 52059 166f0 892B      		or r24,r25
 52060 166f2 01F0      		breq .+2
 52061 166f4 00C0      		rjmp .L2136
 52062               		.loc 2 4907 0 is_stmt 0 discriminator 1
 52063 166f6 8E85      		ldd r24,Y+14
 52064 166f8 8823      		tst r24
 52065 166fa 01F4      		brne .+2
 52066 166fc 00C0      		rjmp .L2136
4908:lp_solve_5.5/lp_presolve.c ****       if(lp->orig_obj[j] < 0)
 52067               		.loc 2 4908 0 is_stmt 1
 52068 166fe 8C81      		ldd r24,Y+4
 52069 16700 9D81      		ldd r25,Y+5
 52070 16702 845D      		subi r24,-44
 52071 16704 9D4F      		sbci r25,-3
 52072 16706 FC01      		movw r30,r24
 52073 16708 2081      		ld r18,Z
 52074 1670a 3181      		ldd r19,Z+1
 52075 1670c 8A81      		ldd r24,Y+2
 52076 1670e 9B81      		ldd r25,Y+3
 52077 16710 880F      		lsl r24
 52078 16712 991F      		rol r25
 52079 16714 880F      		lsl r24
 52080 16716 991F      		rol r25
 52081 16718 820F      		add r24,r18
 52082 1671a 931F      		adc r25,r19
 52083 1671c FC01      		movw r30,r24
 52084 1671e 8081      		ld r24,Z
 52085 16720 9181      		ldd r25,Z+1
 52086 16722 A281      		ldd r26,Z+2
 52087 16724 B381      		ldd r27,Z+3
 52088 16726 20E0      		ldi r18,0
 52089 16728 30E0      		ldi r19,0
 52090 1672a A901      		movw r20,r18
 52091 1672c BC01      		movw r22,r24
 52092 1672e CD01      		movw r24,r26
 52093 16730 0E94 0000 		call __ltsf2
 52094 16734 8823      		tst r24
 52095 16736 04F4      		brge .L2137
4909:lp_solve_5.5/lp_presolve.c ****         Value1 = get_upbo(lp, j);
 52096               		.loc 2 4909 0
 52097 16738 2A81      		ldd r18,Y+2
 52098 1673a 3B81      		ldd r19,Y+3
 52099 1673c 8C81      		ldd r24,Y+4
 52100 1673e 9D81      		ldd r25,Y+5
 52101 16740 B901      		movw r22,r18
 52102 16742 0E94 0000 		call get_upbo
 52103 16746 DC01      		movw r26,r24
 52104 16748 CB01      		movw r24,r22
 52105 1674a 8A8F      		std Y+26,r24
 52106 1674c 9B8F      		std Y+27,r25
 52107 1674e AC8F      		std Y+28,r26
 52108 16750 BD8F      		std Y+29,r27
 52109               	.L2137:
4910:lp_solve_5.5/lp_presolve.c ****       if(fabs(Value1) >= lp->infinite) {
 52110               		.loc 2 4910 0
 52111 16752 8A8D      		ldd r24,Y+26
 52112 16754 9B8D      		ldd r25,Y+27
 52113 16756 AC8D      		ldd r26,Y+28
 52114 16758 BD8D      		ldd r27,Y+29
 52115 1675a BF77      		andi r27,0x7f
 52116 1675c 2C81      		ldd r18,Y+4
 52117 1675e 3D81      		ldd r19,Y+5
 52118 16760 265F      		subi r18,-10
 52119 16762 3C4F      		sbci r19,-4
 52120 16764 F901      		movw r30,r18
 52121 16766 2081      		ld r18,Z
 52122 16768 3181      		ldd r19,Z+1
 52123 1676a 4281      		ldd r20,Z+2
 52124 1676c 5381      		ldd r21,Z+3
 52125 1676e BC01      		movw r22,r24
 52126 16770 CD01      		movw r24,r26
 52127 16772 0E94 0000 		call __gesf2
 52128 16776 8823      		tst r24
 52129 16778 04F0      		brlt .L2164
4911:lp_solve_5.5/lp_presolve.c ****         report(lp, DETAILED, "presolve_columns: Unbounded variable %s\n",
 52130               		.loc 2 4911 0
 52131 1677a 2A81      		ldd r18,Y+2
 52132 1677c 3B81      		ldd r19,Y+3
 52133 1677e 8C81      		ldd r24,Y+4
 52134 16780 9D81      		ldd r25,Y+5
 52135 16782 B901      		movw r22,r18
 52136 16784 0E94 0000 		call get_col_name
 52137 16788 292F      		mov r18,r25
 52138 1678a 2F93      		push r18
 52139 1678c 8F93      		push r24
 52140 1678e 80E0      		ldi r24,lo8(.LC60)
 52141 16790 90E0      		ldi r25,hi8(.LC60)
 52142 16792 892F      		mov r24,r25
 52143 16794 8F93      		push r24
 52144 16796 80E0      		ldi r24,lo8(.LC60)
 52145 16798 90E0      		ldi r25,hi8(.LC60)
 52146 1679a 8F93      		push r24
 52147 1679c 1F92      		push __zero_reg__
 52148 1679e 85E0      		ldi r24,lo8(5)
 52149 167a0 8F93      		push r24
 52150 167a2 8D81      		ldd r24,Y+5
 52151 167a4 8F93      		push r24
 52152 167a6 8C81      		ldd r24,Y+4
 52153 167a8 8F93      		push r24
 52154 167aa 0E94 0000 		call report
 52155 167ae 8DB7      		in r24,__SP_L__
 52156 167b0 9EB7      		in r25,__SP_H__
 52157 167b2 0896      		adiw r24,8
 52158 167b4 0FB6      		in __tmp_reg__,__SREG__
 52159 167b6 F894      		cli
 52160 167b8 DEBF      		out __SP_H__,r29
 52161 167ba 0FBE      		out __SREG__,__tmp_reg__
 52162 167bc CDBF      		out __SP_L__,r28
4912:lp_solve_5.5/lp_presolve.c ****                               get_col_name(lp,j));
4913:lp_solve_5.5/lp_presolve.c ****         status = presolve_setstatus(psdata, UNBOUNDED);
 52163               		.loc 2 4913 0
 52164 167be 8E8D      		ldd r24,Y+30
 52165 167c0 9F8D      		ldd r25,Y+31
 52166 167c2 20E0      		ldi r18,lo8(.LC21)
 52167 167c4 30E0      		ldi r19,hi8(.LC21)
 52168 167c6 41E3      		ldi r20,lo8(49)
 52169 167c8 53E1      		ldi r21,lo8(19)
 52170 167ca 63E0      		ldi r22,lo8(3)
 52171 167cc 70E0      		ldi r23,0
 52172 167ce 0E94 0000 		call presolve_setstatusex
 52173 167d2 998F      		std Y+25,r25
 52174 167d4 888F      		std Y+24,r24
4910:lp_solve_5.5/lp_presolve.c ****         report(lp, DETAILED, "presolve_columns: Unbounded variable %s\n",
 52175               		.loc 2 4910 0
 52176 167d6 00C0      		rjmp .L2135
 52177               	.L2164:
4914:lp_solve_5.5/lp_presolve.c ****       }
4915:lp_solve_5.5/lp_presolve.c ****       else {
4916:lp_solve_5.5/lp_presolve.c ****         /* Fix the value at its best bound */
4917:lp_solve_5.5/lp_presolve.c ****         report(lp, DETAILED, "presolve_columns: Eliminated trivial variable %s fixed at %g\n",
 52178               		.loc 2 4917 0
 52179 167d8 CA8C      		ldd r12,Y+26
 52180 167da DB8C      		ldd r13,Y+27
 52181 167dc EC8C      		ldd r14,Y+28
 52182 167de FD8C      		ldd r15,Y+29
 52183 167e0 2A81      		ldd r18,Y+2
 52184 167e2 3B81      		ldd r19,Y+3
 52185 167e4 8C81      		ldd r24,Y+4
 52186 167e6 9D81      		ldd r25,Y+5
 52187 167e8 B901      		movw r22,r18
 52188 167ea 0E94 0000 		call get_col_name
 52189 167ee 2F2D      		mov r18,r15
 52190 167f0 2F93      		push r18
 52191 167f2 2E2D      		mov r18,r14
 52192 167f4 2F93      		push r18
 52193 167f6 2D2D      		mov r18,r13
 52194 167f8 2F93      		push r18
 52195 167fa 2C2D      		mov r18,r12
 52196 167fc 2F93      		push r18
 52197 167fe 292F      		mov r18,r25
 52198 16800 2F93      		push r18
 52199 16802 8F93      		push r24
 52200 16804 80E0      		ldi r24,lo8(.LC61)
 52201 16806 90E0      		ldi r25,hi8(.LC61)
 52202 16808 892F      		mov r24,r25
 52203 1680a 8F93      		push r24
 52204 1680c 80E0      		ldi r24,lo8(.LC61)
 52205 1680e 90E0      		ldi r25,hi8(.LC61)
 52206 16810 8F93      		push r24
 52207 16812 1F92      		push __zero_reg__
 52208 16814 85E0      		ldi r24,lo8(5)
 52209 16816 8F93      		push r24
 52210 16818 8D81      		ldd r24,Y+5
 52211 1681a 8F93      		push r24
 52212 1681c 8C81      		ldd r24,Y+4
 52213 1681e 8F93      		push r24
 52214 16820 0E94 0000 		call report
 52215 16824 EDB7      		in r30,__SP_L__
 52216 16826 FEB7      		in r31,__SP_H__
 52217 16828 3C96      		adiw r30,12
 52218 1682a 0FB6      		in __tmp_reg__,__SREG__
 52219 1682c F894      		cli
 52220 1682e DEBF      		out __SP_H__,r29
 52221 16830 0FBE      		out __SREG__,__tmp_reg__
 52222 16832 CDBF      		out __SP_L__,r28
4918:lp_solve_5.5/lp_presolve.c ****                               get_col_name(lp,j), Value1);
4919:lp_solve_5.5/lp_presolve.c ****         candelete = TRUE;
 52223               		.loc 2 4919 0
 52224 16834 81E0      		ldi r24,lo8(1)
 52225 16836 8983      		std Y+1,r24
4910:lp_solve_5.5/lp_presolve.c ****         report(lp, DETAILED, "presolve_columns: Unbounded variable %s\n",
 52226               		.loc 2 4910 0
 52227 16838 00C0      		rjmp .L2135
 52228               	.L2136:
4920:lp_solve_5.5/lp_presolve.c ****       }
4921:lp_solve_5.5/lp_presolve.c ****     }
4922:lp_solve_5.5/lp_presolve.c **** 
4923:lp_solve_5.5/lp_presolve.c ****     /* Check if the variable can be eliminated because it is fixed */
4924:lp_solve_5.5/lp_presolve.c ****     else if(isOrigFixed(lp, ix)) {
 52229               		.loc 2 4924 0
 52230 1683a 2A89      		ldd r18,Y+18
 52231 1683c 3B89      		ldd r19,Y+19
 52232 1683e 8C81      		ldd r24,Y+4
 52233 16840 9D81      		ldd r25,Y+5
 52234 16842 B901      		movw r22,r18
 52235 16844 0E94 0000 		call isOrigFixed
 52236 16848 8823      		tst r24
 52237 1684a 01F4      		brne .+2
 52238 1684c 00C0      		rjmp .L2142
4925:lp_solve_5.5/lp_presolve.c ****       if(countNZ > 0) {
 52239               		.loc 2 4925 0
 52240 1684e 8C85      		ldd r24,Y+12
 52241 16850 9D85      		ldd r25,Y+13
 52242 16852 1816      		cp __zero_reg__,r24
 52243 16854 1906      		cpc __zero_reg__,r25
 52244 16856 04F4      		brge .L2143
4926:lp_solve_5.5/lp_presolve.c ****         status = presolve_boundconflict(psdata, -1, j);
 52245               		.loc 2 4926 0
 52246 16858 2A81      		ldd r18,Y+2
 52247 1685a 3B81      		ldd r19,Y+3
 52248 1685c 8E8D      		ldd r24,Y+30
 52249 1685e 9F8D      		ldd r25,Y+31
 52250 16860 A901      		movw r20,r18
 52251 16862 6FEF      		ldi r22,lo8(-1)
 52252 16864 7FEF      		ldi r23,lo8(-1)
 52253 16866 0E94 0000 		call presolve_boundconflict
 52254 1686a 998F      		std Y+25,r25
 52255 1686c 888F      		std Y+24,r24
4927:lp_solve_5.5/lp_presolve.c ****         if(status != RUNNING)
 52256               		.loc 2 4927 0
 52257 1686e 888D      		ldd r24,Y+24
 52258 16870 998D      		ldd r25,Y+25
 52259 16872 0897      		sbiw r24,8
 52260 16874 01F0      		breq .+2
 52261 16876 00C0      		rjmp .L2166
 52262               	.L2143:
4928:lp_solve_5.5/lp_presolve.c ****           break;
4929:lp_solve_5.5/lp_presolve.c ****       }
4930:lp_solve_5.5/lp_presolve.c ****       report(lp, DETAILED, "presolve_columns: Eliminated variable %s fixed at %g\n",
 52263               		.loc 2 4930 0
 52264 16878 CA8C      		ldd r12,Y+26
 52265 1687a DB8C      		ldd r13,Y+27
 52266 1687c EC8C      		ldd r14,Y+28
 52267 1687e FD8C      		ldd r15,Y+29
 52268 16880 2A81      		ldd r18,Y+2
 52269 16882 3B81      		ldd r19,Y+3
 52270 16884 8C81      		ldd r24,Y+4
 52271 16886 9D81      		ldd r25,Y+5
 52272 16888 B901      		movw r22,r18
 52273 1688a 0E94 0000 		call get_col_name
 52274 1688e 2F2D      		mov r18,r15
 52275 16890 2F93      		push r18
 52276 16892 2E2D      		mov r18,r14
 52277 16894 2F93      		push r18
 52278 16896 2D2D      		mov r18,r13
 52279 16898 2F93      		push r18
 52280 1689a 2C2D      		mov r18,r12
 52281 1689c 2F93      		push r18
 52282 1689e 292F      		mov r18,r25
 52283 168a0 2F93      		push r18
 52284 168a2 8F93      		push r24
 52285 168a4 80E0      		ldi r24,lo8(.LC62)
 52286 168a6 90E0      		ldi r25,hi8(.LC62)
 52287 168a8 892F      		mov r24,r25
 52288 168aa 8F93      		push r24
 52289 168ac 80E0      		ldi r24,lo8(.LC62)
 52290 168ae 90E0      		ldi r25,hi8(.LC62)
 52291 168b0 8F93      		push r24
 52292 168b2 1F92      		push __zero_reg__
 52293 168b4 85E0      		ldi r24,lo8(5)
 52294 168b6 8F93      		push r24
 52295 168b8 8D81      		ldd r24,Y+5
 52296 168ba 8F93      		push r24
 52297 168bc 8C81      		ldd r24,Y+4
 52298 168be 8F93      		push r24
 52299 168c0 0E94 0000 		call report
 52300 168c4 8DB7      		in r24,__SP_L__
 52301 168c6 9EB7      		in r25,__SP_H__
 52302 168c8 0C96      		adiw r24,12
 52303 168ca 0FB6      		in __tmp_reg__,__SREG__
 52304 168cc F894      		cli
 52305 168ce DEBF      		out __SP_H__,r29
 52306 168d0 0FBE      		out __SREG__,__tmp_reg__
 52307 168d2 CDBF      		out __SP_L__,r28
4931:lp_solve_5.5/lp_presolve.c ****                             get_col_name(lp,j), Value1);
4932:lp_solve_5.5/lp_presolve.c ****       candelete = TRUE;
 52308               		.loc 2 4932 0
 52309 168d4 81E0      		ldi r24,lo8(1)
 52310 168d6 8983      		std Y+1,r24
 52311 168d8 00C0      		rjmp .L2135
 52312               	.L2142:
4933:lp_solve_5.5/lp_presolve.c ****     }
4934:lp_solve_5.5/lp_presolve.c **** 
4935:lp_solve_5.5/lp_presolve.c **** #if 0
4936:lp_solve_5.5/lp_presolve.c ****     /* Merge OF-constraint column doubleton in equality constraint (if it has
4937:lp_solve_5.5/lp_presolve.c ****       not been captured by the singleton free variable rule above) */
4938:lp_solve_5.5/lp_presolve.c ****     else if((countNZ == 1) && isOFNZ &&
4939:lp_solve_5.5/lp_presolve.c ****              ((i = presolve_nextrow(psdata, j, &item)) >= 0) &&
4940:lp_solve_5.5/lp_presolve.c ****              is_constr_type(lp, i = COL_MAT_ROWNR(i), EQ)) {
4941:lp_solve_5.5/lp_presolve.c ****       MATrec *mat = lp->matA;
4942:lp_solve_5.5/lp_presolve.c **** 
4943:lp_solve_5.5/lp_presolve.c ****       /* Merge the constraint into the OF */
4944:lp_solve_5.5/lp_presolve.c ****       Value1 = lp->orig_obj[j] / get_mat(lp, i, j);
4945:lp_solve_5.5/lp_presolve.c ****       for(jx = mat->row_end[i-1]; jx < mat->row_end[i]; jx++) {
4946:lp_solve_5.5/lp_presolve.c ****         jjx = ROW_MAT_COLNR(jx);
4947:lp_solve_5.5/lp_presolve.c ****         lp->orig_obj[jjx] -= Value1 * ROW_MAT_VALUE(jx);
4948:lp_solve_5.5/lp_presolve.c ****       }
4949:lp_solve_5.5/lp_presolve.c ****       Value2 = lp->orig_rhs[i];
4950:lp_solve_5.5/lp_presolve.c ****       presolve_adjustrhs(psdata, 0, Value1 * Value2, 0.0);
4951:lp_solve_5.5/lp_presolve.c **** 
4952:lp_solve_5.5/lp_presolve.c ****       /* Verify feasibility */
4953:lp_solve_5.5/lp_presolve.c ****       Value2 /= get_mat(lp, i, j);
4954:lp_solve_5.5/lp_presolve.c ****       if((Value2 < get_lowbo(lp, j)) || (Value2 > get_upbo(lp, j))) {
4955:lp_solve_5.5/lp_presolve.c ****         status = presolve_setstatus(psdata, INFEASIBLE);
4956:lp_solve_5.5/lp_presolve.c ****         break;
4957:lp_solve_5.5/lp_presolve.c ****       }
4958:lp_solve_5.5/lp_presolve.c **** 
4959:lp_solve_5.5/lp_presolve.c ****       /* Do column (and flag row) deletion */
4960:lp_solve_5.5/lp_presolve.c ****       presolve_rowremove(psdata, i, TRUE);
4961:lp_solve_5.5/lp_presolve.c ****       psdata->forceupdate = TRUE;
4962:lp_solve_5.5/lp_presolve.c ****       iConRemove++;
4963:lp_solve_5.5/lp_presolve.c ****       candelete = TRUE;
4964:lp_solve_5.5/lp_presolve.c ****     }
4965:lp_solve_5.5/lp_presolve.c **** #endif
4966:lp_solve_5.5/lp_presolve.c ****     /* Look for opportunity to fix column based on the dual */
4967:lp_solve_5.5/lp_presolve.c ****     else if(colfixdual && presolve_colfixdual(psdata, j, &Value1, &status)) {
 52313               		.loc 2 4967 0
 52314 168da 8F81      		ldd r24,Y+7
 52315 168dc 8823      		tst r24
 52316 168de 01F4      		brne .+2
 52317 168e0 00C0      		rjmp .L2145
 52318               		.loc 2 4967 0 is_stmt 0 discriminator 1
 52319 168e2 9E01      		movw r18,r28
 52320 168e4 285E      		subi r18,-24
 52321 168e6 3F4F      		sbci r19,-1
 52322 168e8 AE01      		movw r20,r28
 52323 168ea 465E      		subi r20,-26
 52324 168ec 5F4F      		sbci r21,-1
 52325 168ee 6A81      		ldd r22,Y+2
 52326 168f0 7B81      		ldd r23,Y+3
 52327 168f2 8E8D      		ldd r24,Y+30
 52328 168f4 9F8D      		ldd r25,Y+31
 52329 168f6 0E94 0000 		call presolve_colfixdual
 52330 168fa 8823      		tst r24
 52331 168fc 01F4      		brne .+2
 52332 168fe 00C0      		rjmp .L2145
4968:lp_solve_5.5/lp_presolve.c ****       if(my_infinite(lp, Value1)) {
 52333               		.loc 2 4968 0 is_stmt 1
 52334 16900 8A8D      		ldd r24,Y+26
 52335 16902 9B8D      		ldd r25,Y+27
 52336 16904 AC8D      		ldd r26,Y+28
 52337 16906 BD8D      		ldd r27,Y+29
 52338 16908 BF77      		andi r27,0x7f
 52339 1690a 2C81      		ldd r18,Y+4
 52340 1690c 3D81      		ldd r19,Y+5
 52341 1690e 265F      		subi r18,-10
 52342 16910 3C4F      		sbci r19,-4
 52343 16912 F901      		movw r30,r18
 52344 16914 2081      		ld r18,Z
 52345 16916 3181      		ldd r19,Z+1
 52346 16918 4281      		ldd r20,Z+2
 52347 1691a 5381      		ldd r21,Z+3
 52348 1691c BC01      		movw r22,r24
 52349 1691e CD01      		movw r24,r26
 52350 16920 0E94 0000 		call __gesf2
 52351 16924 8823      		tst r24
 52352 16926 04F0      		brlt .L2165
4969:lp_solve_5.5/lp_presolve.c ****         report(lp, DETAILED, "presolve_columns: Unbounded variable %s\n",
 52353               		.loc 2 4969 0
 52354 16928 2A81      		ldd r18,Y+2
 52355 1692a 3B81      		ldd r19,Y+3
 52356 1692c 8C81      		ldd r24,Y+4
 52357 1692e 9D81      		ldd r25,Y+5
 52358 16930 B901      		movw r22,r18
 52359 16932 0E94 0000 		call get_col_name
 52360 16936 292F      		mov r18,r25
 52361 16938 2F93      		push r18
 52362 1693a 8F93      		push r24
 52363 1693c 80E0      		ldi r24,lo8(.LC60)
 52364 1693e 90E0      		ldi r25,hi8(.LC60)
 52365 16940 892F      		mov r24,r25
 52366 16942 8F93      		push r24
 52367 16944 80E0      		ldi r24,lo8(.LC60)
 52368 16946 90E0      		ldi r25,hi8(.LC60)
 52369 16948 8F93      		push r24
 52370 1694a 1F92      		push __zero_reg__
 52371 1694c 85E0      		ldi r24,lo8(5)
 52372 1694e 8F93      		push r24
 52373 16950 8D81      		ldd r24,Y+5
 52374 16952 8F93      		push r24
 52375 16954 8C81      		ldd r24,Y+4
 52376 16956 8F93      		push r24
 52377 16958 0E94 0000 		call report
 52378 1695c 8DB7      		in r24,__SP_L__
 52379 1695e 9EB7      		in r25,__SP_H__
 52380 16960 0896      		adiw r24,8
 52381 16962 0FB6      		in __tmp_reg__,__SREG__
 52382 16964 F894      		cli
 52383 16966 DEBF      		out __SP_H__,r29
 52384 16968 0FBE      		out __SREG__,__tmp_reg__
 52385 1696a CDBF      		out __SP_L__,r28
4970:lp_solve_5.5/lp_presolve.c ****                               get_col_name(lp,j));
4971:lp_solve_5.5/lp_presolve.c ****         status = presolve_setstatus(psdata, UNBOUNDED);
 52386               		.loc 2 4971 0
 52387 1696c 8E8D      		ldd r24,Y+30
 52388 1696e 9F8D      		ldd r25,Y+31
 52389 16970 20E0      		ldi r18,lo8(.LC21)
 52390 16972 30E0      		ldi r19,hi8(.LC21)
 52391 16974 4BE6      		ldi r20,lo8(107)
 52392 16976 53E1      		ldi r21,lo8(19)
 52393 16978 63E0      		ldi r22,lo8(3)
 52394 1697a 70E0      		ldi r23,0
 52395 1697c 0E94 0000 		call presolve_setstatusex
 52396 16980 998F      		std Y+25,r25
 52397 16982 888F      		std Y+24,r24
4968:lp_solve_5.5/lp_presolve.c ****         report(lp, DETAILED, "presolve_columns: Unbounded variable %s\n",
 52398               		.loc 2 4968 0
 52399 16984 00C0      		rjmp .L2135
 52400               	.L2165:
4972:lp_solve_5.5/lp_presolve.c ****       }
4973:lp_solve_5.5/lp_presolve.c ****       else {
4974:lp_solve_5.5/lp_presolve.c ****         /* Fix the value at its best bound */
4975:lp_solve_5.5/lp_presolve.c ****         report(lp, DETAILED, "presolve_columns: Eliminated dual-zero variable %s fixed at %g\n",
 52401               		.loc 2 4975 0
 52402 16986 CA8C      		ldd r12,Y+26
 52403 16988 DB8C      		ldd r13,Y+27
 52404 1698a EC8C      		ldd r14,Y+28
 52405 1698c FD8C      		ldd r15,Y+29
 52406 1698e 2A81      		ldd r18,Y+2
 52407 16990 3B81      		ldd r19,Y+3
 52408 16992 8C81      		ldd r24,Y+4
 52409 16994 9D81      		ldd r25,Y+5
 52410 16996 B901      		movw r22,r18
 52411 16998 0E94 0000 		call get_col_name
 52412 1699c 2F2D      		mov r18,r15
 52413 1699e 2F93      		push r18
 52414 169a0 2E2D      		mov r18,r14
 52415 169a2 2F93      		push r18
 52416 169a4 2D2D      		mov r18,r13
 52417 169a6 2F93      		push r18
 52418 169a8 2C2D      		mov r18,r12
 52419 169aa 2F93      		push r18
 52420 169ac 292F      		mov r18,r25
 52421 169ae 2F93      		push r18
 52422 169b0 8F93      		push r24
 52423 169b2 80E0      		ldi r24,lo8(.LC63)
 52424 169b4 90E0      		ldi r25,hi8(.LC63)
 52425 169b6 892F      		mov r24,r25
 52426 169b8 8F93      		push r24
 52427 169ba 80E0      		ldi r24,lo8(.LC63)
 52428 169bc 90E0      		ldi r25,hi8(.LC63)
 52429 169be 8F93      		push r24
 52430 169c0 1F92      		push __zero_reg__
 52431 169c2 85E0      		ldi r24,lo8(5)
 52432 169c4 8F93      		push r24
 52433 169c6 8D81      		ldd r24,Y+5
 52434 169c8 8F93      		push r24
 52435 169ca 8C81      		ldd r24,Y+4
 52436 169cc 8F93      		push r24
 52437 169ce 0E94 0000 		call report
 52438 169d2 EDB7      		in r30,__SP_L__
 52439 169d4 FEB7      		in r31,__SP_H__
 52440 169d6 3C96      		adiw r30,12
 52441 169d8 0FB6      		in __tmp_reg__,__SREG__
 52442 169da F894      		cli
 52443 169dc DEBF      		out __SP_H__,r29
 52444 169de 0FBE      		out __SREG__,__tmp_reg__
 52445 169e0 CDBF      		out __SP_L__,r28
4976:lp_solve_5.5/lp_presolve.c ****                               get_col_name(lp,j), Value1);
4977:lp_solve_5.5/lp_presolve.c ****         candelete = TRUE;
 52446               		.loc 2 4977 0
 52447 169e2 81E0      		ldi r24,lo8(1)
 52448 169e4 8983      		std Y+1,r24
4968:lp_solve_5.5/lp_presolve.c ****         report(lp, DETAILED, "presolve_columns: Unbounded variable %s\n",
 52449               		.loc 2 4968 0
 52450 169e6 00C0      		rjmp .L2135
 52451               	.L2145:
4978:lp_solve_5.5/lp_presolve.c ****       }
4979:lp_solve_5.5/lp_presolve.c ****     }
4980:lp_solve_5.5/lp_presolve.c **** 
4981:lp_solve_5.5/lp_presolve.c ****     /* Do probing of binary variables to see if we can fix them */
4982:lp_solve_5.5/lp_presolve.c ****     else if(probefix && is_binary(lp, j) &&
 52452               		.loc 2 4982 0
 52453 169e8 8E81      		ldd r24,Y+6
 52454 169ea 8823      		tst r24
 52455 169ec 01F4      		brne .+2
 52456 169ee 00C0      		rjmp .L2135
 52457               		.loc 2 4982 0 is_stmt 0 discriminator 1
 52458 169f0 2A81      		ldd r18,Y+2
 52459 169f2 3B81      		ldd r19,Y+3
 52460 169f4 8C81      		ldd r24,Y+4
 52461 169f6 9D81      		ldd r25,Y+5
 52462 169f8 B901      		movw r22,r18
 52463 169fa 0E94 0000 		call is_binary
 52464 169fe 8823      		tst r24
 52465 16a00 01F0      		breq .L2135
4983:lp_solve_5.5/lp_presolve.c ****             presolve_probefix01(psdata, j, &Value1)) {
 52466               		.loc 2 4983 0 is_stmt 1 discriminator 2
 52467 16a02 AE01      		movw r20,r28
 52468 16a04 465E      		subi r20,-26
 52469 16a06 5F4F      		sbci r21,-1
 52470 16a08 2A81      		ldd r18,Y+2
 52471 16a0a 3B81      		ldd r19,Y+3
 52472 16a0c 8E8D      		ldd r24,Y+30
 52473 16a0e 9F8D      		ldd r25,Y+31
 52474 16a10 B901      		movw r22,r18
 52475 16a12 0E94 0000 		call presolve_probefix01
4982:lp_solve_5.5/lp_presolve.c ****             presolve_probefix01(psdata, j, &Value1)) {
 52476               		.loc 2 4982 0 discriminator 2
 52477 16a16 8823      		tst r24
 52478 16a18 01F0      		breq .L2135
4984:lp_solve_5.5/lp_presolve.c ****       report(lp, DETAILED, "presolve_columns: Fixed binary variable %s at %g\n",
 52479               		.loc 2 4984 0
 52480 16a1a CA8C      		ldd r12,Y+26
 52481 16a1c DB8C      		ldd r13,Y+27
 52482 16a1e EC8C      		ldd r14,Y+28
 52483 16a20 FD8C      		ldd r15,Y+29
 52484 16a22 2A81      		ldd r18,Y+2
 52485 16a24 3B81      		ldd r19,Y+3
 52486 16a26 8C81      		ldd r24,Y+4
 52487 16a28 9D81      		ldd r25,Y+5
 52488 16a2a B901      		movw r22,r18
 52489 16a2c 0E94 0000 		call get_col_name
 52490 16a30 2F2D      		mov r18,r15
 52491 16a32 2F93      		push r18
 52492 16a34 2E2D      		mov r18,r14
 52493 16a36 2F93      		push r18
 52494 16a38 2D2D      		mov r18,r13
 52495 16a3a 2F93      		push r18
 52496 16a3c 2C2D      		mov r18,r12
 52497 16a3e 2F93      		push r18
 52498 16a40 292F      		mov r18,r25
 52499 16a42 2F93      		push r18
 52500 16a44 8F93      		push r24
 52501 16a46 80E0      		ldi r24,lo8(.LC64)
 52502 16a48 90E0      		ldi r25,hi8(.LC64)
 52503 16a4a 892F      		mov r24,r25
 52504 16a4c 8F93      		push r24
 52505 16a4e 80E0      		ldi r24,lo8(.LC64)
 52506 16a50 90E0      		ldi r25,hi8(.LC64)
 52507 16a52 8F93      		push r24
 52508 16a54 1F92      		push __zero_reg__
 52509 16a56 85E0      		ldi r24,lo8(5)
 52510 16a58 8F93      		push r24
 52511 16a5a 8D81      		ldd r24,Y+5
 52512 16a5c 8F93      		push r24
 52513 16a5e 8C81      		ldd r24,Y+4
 52514 16a60 8F93      		push r24
 52515 16a62 0E94 0000 		call report
 52516 16a66 8DB7      		in r24,__SP_L__
 52517 16a68 9EB7      		in r25,__SP_H__
 52518 16a6a 0C96      		adiw r24,12
 52519 16a6c 0FB6      		in __tmp_reg__,__SREG__
 52520 16a6e F894      		cli
 52521 16a70 DEBF      		out __SP_H__,r29
 52522 16a72 0FBE      		out __SREG__,__tmp_reg__
 52523 16a74 CDBF      		out __SP_L__,r28
4985:lp_solve_5.5/lp_presolve.c ****                             get_col_name(lp,j), Value1);
4986:lp_solve_5.5/lp_presolve.c ****       candelete = TRUE;
 52524               		.loc 2 4986 0
 52525 16a76 81E0      		ldi r24,lo8(1)
 52526 16a78 8983      		std Y+1,r24
 52527               	.L2135:
4987:lp_solve_5.5/lp_presolve.c ****     }
4988:lp_solve_5.5/lp_presolve.c **** #if 0
4989:lp_solve_5.5/lp_presolve.c ****     /* Do probing of binary variables to see if we can tighten their coefficients */
4990:lp_solve_5.5/lp_presolve.c ****     else if(probereduce && is_binary(lp, j) &&
4991:lp_solve_5.5/lp_presolve.c ****             (ix = presolve_probetighten01(psdata, j) > 0)) {
4992:lp_solve_5.5/lp_presolve.c ****       report(lp, DETAILED, "presolve_columns: Tightened coefficients for binary variable %s in %d r
4993:lp_solve_5.5/lp_presolve.c ****                             get_col_name(lp,j), ix);
4994:lp_solve_5.5/lp_presolve.c ****       iCoeffChanged += ix;
4995:lp_solve_5.5/lp_presolve.c ****       psdata->forceupdate = TRUE;
4996:lp_solve_5.5/lp_presolve.c ****     }
4997:lp_solve_5.5/lp_presolve.c **** #endif
4998:lp_solve_5.5/lp_presolve.c **** 
4999:lp_solve_5.5/lp_presolve.c ****     /* Perform fixing and deletion, if indicated */
5000:lp_solve_5.5/lp_presolve.c ****     if(candelete) {
 52528               		.loc 2 5000 0
 52529 16a7a 8981      		ldd r24,Y+1
 52530 16a7c 8823      		tst r24
 52531 16a7e 01F4      		brne .+2
 52532 16a80 00C0      		rjmp .L2149
5001:lp_solve_5.5/lp_presolve.c **** 
5002:lp_solve_5.5/lp_presolve.c ****       /* If we have a SOS1 member variable fixed at a non-zero value, then we
5003:lp_solve_5.5/lp_presolve.c ****         must fix the other member variables at zero and delete the SOS(es) */
5004:lp_solve_5.5/lp_presolve.c ****       if((Value1 != 0) && SOS_is_member(lp->SOS, 0, j)) {
 52533               		.loc 2 5004 0
 52534 16a82 8A8D      		ldd r24,Y+26
 52535 16a84 9B8D      		ldd r25,Y+27
 52536 16a86 AC8D      		ldd r26,Y+28
 52537 16a88 BD8D      		ldd r27,Y+29
 52538 16a8a 20E0      		ldi r18,0
 52539 16a8c 30E0      		ldi r19,0
 52540 16a8e A901      		movw r20,r18
 52541 16a90 BC01      		movw r22,r24
 52542 16a92 CD01      		movw r24,r26
 52543 16a94 0E94 0000 		call __nesf2
 52544 16a98 8823      		tst r24
 52545 16a9a 01F4      		brne .+2
 52546 16a9c 00C0      		rjmp .L2150
 52547               		.loc 2 5004 0 is_stmt 0 discriminator 1
 52548 16a9e 8C81      		ldd r24,Y+4
 52549 16aa0 9D81      		ldd r25,Y+5
 52550 16aa2 8256      		subi r24,98
 52551 16aa4 9D4F      		sbci r25,-3
 52552 16aa6 FC01      		movw r30,r24
 52553 16aa8 8081      		ld r24,Z
 52554 16aaa 9181      		ldd r25,Z+1
 52555 16aac 2A81      		ldd r18,Y+2
 52556 16aae 3B81      		ldd r19,Y+3
 52557 16ab0 A901      		movw r20,r18
 52558 16ab2 60E0      		ldi r22,0
 52559 16ab4 70E0      		ldi r23,0
 52560 16ab6 0E94 0000 		call SOS_is_member
 52561 16aba 892B      		or r24,r25
 52562 16abc 01F0      		breq .L2150
5005:lp_solve_5.5/lp_presolve.c ****         ix = iVarFixed;
 52563               		.loc 2 5005 0 is_stmt 1
 52564 16abe 8E89      		ldd r24,Y+22
 52565 16ac0 9F89      		ldd r25,Y+23
 52566 16ac2 9B8B      		std Y+19,r25
 52567 16ac4 8A8B      		std Y+18,r24
5006:lp_solve_5.5/lp_presolve.c ****         if(!presolve_fixSOS1(psdata, j, Value1, &iConRemove, &iVarFixed))
 52568               		.loc 2 5006 0
 52569 16ac6 8A8D      		ldd r24,Y+26
 52570 16ac8 9B8D      		ldd r25,Y+27
 52571 16aca AC8D      		ldd r26,Y+28
 52572 16acc BD8D      		ldd r27,Y+29
 52573 16ace AE01      		movw r20,r28
 52574 16ad0 4A5E      		subi r20,-22
 52575 16ad2 5F4F      		sbci r21,-1
 52576 16ad4 9E01      		movw r18,r28
 52577 16ad6 2C5E      		subi r18,-20
 52578 16ad8 3F4F      		sbci r19,-1
 52579 16ada 6A81      		ldd r22,Y+2
 52580 16adc 7B81      		ldd r23,Y+3
 52581 16ade EE8D      		ldd r30,Y+30
 52582 16ae0 FF8D      		ldd r31,Y+31
 52583 16ae2 7A01      		movw r14,r20
 52584 16ae4 8901      		movw r16,r18
 52585 16ae6 9C01      		movw r18,r24
 52586 16ae8 AD01      		movw r20,r26
 52587 16aea CF01      		movw r24,r30
 52588 16aec 0E94 0000 		call presolve_fixSOS1
 52589 16af0 8823      		tst r24
 52590 16af2 01F4      		brne .L2152
5007:lp_solve_5.5/lp_presolve.c ****           status = presolve_setstatus(psdata, INFEASIBLE);
 52591               		.loc 2 5007 0
 52592 16af4 8E8D      		ldd r24,Y+30
 52593 16af6 9F8D      		ldd r25,Y+31
 52594 16af8 20E0      		ldi r18,lo8(.LC21)
 52595 16afa 30E0      		ldi r19,hi8(.LC21)
 52596 16afc 4FE8      		ldi r20,lo8(-113)
 52597 16afe 53E1      		ldi r21,lo8(19)
 52598 16b00 62E0      		ldi r22,lo8(2)
 52599 16b02 70E0      		ldi r23,0
 52600 16b04 0E94 0000 		call presolve_setstatusex
 52601 16b08 998F      		std Y+25,r25
 52602 16b0a 888F      		std Y+24,r24
 52603               	.L2152:
5008:lp_solve_5.5/lp_presolve.c ****         if(iVarFixed > ix)
 52604               		.loc 2 5008 0
 52605 16b0c 2E89      		ldd r18,Y+22
 52606 16b0e 3F89      		ldd r19,Y+23
 52607 16b10 8A89      		ldd r24,Y+18
 52608 16b12 9B89      		ldd r25,Y+19
 52609 16b14 8217      		cp r24,r18
 52610 16b16 9307      		cpc r25,r19
 52611 16b18 04F0      		brlt .+2
 52612 16b1a 00C0      		rjmp .L2167
5009:lp_solve_5.5/lp_presolve.c ****           psdata->forceupdate = TRUE;
 52613               		.loc 2 5009 0
 52614 16b1c 8E8D      		ldd r24,Y+30
 52615 16b1e 9F8D      		ldd r25,Y+31
 52616 16b20 21E0      		ldi r18,lo8(1)
 52617 16b22 FC01      		movw r30,r24
 52618 16b24 24A3      		std Z+36,r18
5010:lp_solve_5.5/lp_presolve.c ****         break;
 52619               		.loc 2 5010 0
 52620 16b26 00C0      		rjmp .L2167
 52621               	.L2150:
5011:lp_solve_5.5/lp_presolve.c ****       }
5012:lp_solve_5.5/lp_presolve.c ****       else {
5013:lp_solve_5.5/lp_presolve.c ****         if(!presolve_colfix(psdata, j, Value1, TRUE, &iVarFixed)) {
 52622               		.loc 2 5013 0
 52623 16b28 8A8D      		ldd r24,Y+26
 52624 16b2a 9B8D      		ldd r25,Y+27
 52625 16b2c AC8D      		ldd r26,Y+28
 52626 16b2e BD8D      		ldd r27,Y+29
 52627 16b30 9E01      		movw r18,r28
 52628 16b32 2A5E      		subi r18,-22
 52629 16b34 3F4F      		sbci r19,-1
 52630 16b36 6A81      		ldd r22,Y+2
 52631 16b38 7B81      		ldd r23,Y+3
 52632 16b3a EE8D      		ldd r30,Y+30
 52633 16b3c FF8D      		ldd r31,Y+31
 52634 16b3e 7901      		movw r14,r18
 52635 16b40 01E0      		ldi r16,lo8(1)
 52636 16b42 9C01      		movw r18,r24
 52637 16b44 AD01      		movw r20,r26
 52638 16b46 CF01      		movw r24,r30
 52639 16b48 0E94 0000 		call presolve_colfix
 52640 16b4c 8823      		tst r24
 52641 16b4e 01F4      		brne .L2154
5014:lp_solve_5.5/lp_presolve.c ****           status = presolve_setstatus(psdata, INFEASIBLE);
 52642               		.loc 2 5014 0
 52643 16b50 8E8D      		ldd r24,Y+30
 52644 16b52 9F8D      		ldd r25,Y+31
 52645 16b54 20E0      		ldi r18,lo8(.LC21)
 52646 16b56 30E0      		ldi r19,hi8(.LC21)
 52647 16b58 46E9      		ldi r20,lo8(-106)
 52648 16b5a 53E1      		ldi r21,lo8(19)
 52649 16b5c 62E0      		ldi r22,lo8(2)
 52650 16b5e 70E0      		ldi r23,0
 52651 16b60 0E94 0000 		call presolve_setstatusex
 52652 16b64 998F      		std Y+25,r25
 52653 16b66 888F      		std Y+24,r24
5015:lp_solve_5.5/lp_presolve.c ****           break;
 52654               		.loc 2 5015 0
 52655 16b68 00C0      		rjmp .L2144
 52656               	.L2154:
5016:lp_solve_5.5/lp_presolve.c ****         }
5017:lp_solve_5.5/lp_presolve.c ****         j = presolve_colremove(psdata, j, TRUE);
 52657               		.loc 2 5017 0
 52658 16b6a 2A81      		ldd r18,Y+2
 52659 16b6c 3B81      		ldd r19,Y+3
 52660 16b6e 8E8D      		ldd r24,Y+30
 52661 16b70 9F8D      		ldd r25,Y+31
 52662 16b72 41E0      		ldi r20,lo8(1)
 52663 16b74 B901      		movw r22,r18
 52664 16b76 0E94 0000 		call presolve_colremove
 52665 16b7a 9B83      		std Y+3,r25
 52666 16b7c 8A83      		std Y+2,r24
 52667 16b7e 00C0      		rjmp .L2128
 52668               	.L2149:
5018:lp_solve_5.5/lp_presolve.c ****       }
5019:lp_solve_5.5/lp_presolve.c ****     }
5020:lp_solve_5.5/lp_presolve.c ****     else
5021:lp_solve_5.5/lp_presolve.c ****       j = nextActiveLink(psdata->cols->varmap, j);
 52669               		.loc 2 5021 0
 52670 16b80 8E8D      		ldd r24,Y+30
 52671 16b82 9F8D      		ldd r25,Y+31
 52672 16b84 FC01      		movw r30,r24
 52673 16b86 8281      		ldd r24,Z+2
 52674 16b88 9381      		ldd r25,Z+3
 52675 16b8a FC01      		movw r30,r24
 52676 16b8c 8081      		ld r24,Z
 52677 16b8e 9181      		ldd r25,Z+1
 52678 16b90 2A81      		ldd r18,Y+2
 52679 16b92 3B81      		ldd r19,Y+3
 52680 16b94 B901      		movw r22,r18
 52681 16b96 0E94 0000 		call nextActiveLink
 52682 16b9a 9B83      		std Y+3,r25
 52683 16b9c 8A83      		std Y+2,r24
 52684               	.L2128:
4876:lp_solve_5.5/lp_presolve.c **** 
 52685               		.loc 2 4876 0 discriminator 1
 52686 16b9e 8A81      		ldd r24,Y+2
 52687 16ba0 9B81      		ldd r25,Y+3
 52688 16ba2 892B      		or r24,r25
 52689 16ba4 01F0      		breq .L2144
4876:lp_solve_5.5/lp_presolve.c **** 
 52690               		.loc 2 4876 0 is_stmt 0 discriminator 2
 52691 16ba6 888D      		ldd r24,Y+24
 52692 16ba8 998D      		ldd r25,Y+25
 52693 16baa 0897      		sbiw r24,8
 52694 16bac 01F4      		brne .+2
 52695 16bae 00C0      		rjmp .L2155
 52696 16bb0 00C0      		rjmp .L2144
 52697               	.L2166:
4928:lp_solve_5.5/lp_presolve.c ****       }
 52698               		.loc 2 4928 0 is_stmt 1
 52699 16bb2 0000      		nop
 52700 16bb4 00C0      		rjmp .L2144
 52701               	.L2167:
5010:lp_solve_5.5/lp_presolve.c ****       }
 52702               		.loc 2 5010 0
 52703 16bb6 0000      		nop
 52704               	.L2144:
5022:lp_solve_5.5/lp_presolve.c ****   }
5023:lp_solve_5.5/lp_presolve.c **** 
5024:lp_solve_5.5/lp_presolve.c ****   /* Remove any "hanging" empty row and columns */
5025:lp_solve_5.5/lp_presolve.c ****   if(status == RUNNING)
 52705               		.loc 2 5025 0
 52706 16bb8 888D      		ldd r24,Y+24
 52707 16bba 998D      		ldd r25,Y+25
 52708 16bbc 0897      		sbiw r24,8
 52709 16bbe 01F4      		brne .L2156
5026:lp_solve_5.5/lp_presolve.c ****     status = presolve_shrink(psdata, &iConRemove, &iVarFixed);
 52710               		.loc 2 5026 0
 52711 16bc0 AE01      		movw r20,r28
 52712 16bc2 4A5E      		subi r20,-22
 52713 16bc4 5F4F      		sbci r21,-1
 52714 16bc6 9E01      		movw r18,r28
 52715 16bc8 2C5E      		subi r18,-20
 52716 16bca 3F4F      		sbci r19,-1
 52717 16bcc 8E8D      		ldd r24,Y+30
 52718 16bce 9F8D      		ldd r25,Y+31
 52719 16bd0 B901      		movw r22,r18
 52720 16bd2 0E94 0000 		call presolve_shrink
 52721 16bd6 998F      		std Y+25,r25
 52722 16bd8 888F      		std Y+24,r24
 52723               	.L2156:
5027:lp_solve_5.5/lp_presolve.c **** 
5028:lp_solve_5.5/lp_presolve.c ****   (*nCoeffChanged) += iCoeffChanged;
 52724               		.loc 2 5028 0
 52725 16bda 88A1      		ldd r24,Y+32
 52726 16bdc 99A1      		ldd r25,Y+33
 52727 16bde FC01      		movw r30,r24
 52728 16be0 2081      		ld r18,Z
 52729 16be2 3181      		ldd r19,Z+1
 52730 16be4 8885      		ldd r24,Y+8
 52731 16be6 9985      		ldd r25,Y+9
 52732 16be8 280F      		add r18,r24
 52733 16bea 391F      		adc r19,r25
 52734 16bec 88A1      		ldd r24,Y+32
 52735 16bee 99A1      		ldd r25,Y+33
 52736 16bf0 FC01      		movw r30,r24
 52737 16bf2 3183      		std Z+1,r19
 52738 16bf4 2083      		st Z,r18
5029:lp_solve_5.5/lp_presolve.c ****   (*nConRemove)    += iConRemove;
 52739               		.loc 2 5029 0
 52740 16bf6 8AA1      		ldd r24,Y+34
 52741 16bf8 9BA1      		ldd r25,Y+35
 52742 16bfa FC01      		movw r30,r24
 52743 16bfc 2081      		ld r18,Z
 52744 16bfe 3181      		ldd r19,Z+1
 52745 16c00 8C89      		ldd r24,Y+20
 52746 16c02 9D89      		ldd r25,Y+21
 52747 16c04 280F      		add r18,r24
 52748 16c06 391F      		adc r19,r25
 52749 16c08 8AA1      		ldd r24,Y+34
 52750 16c0a 9BA1      		ldd r25,Y+35
 52751 16c0c FC01      		movw r30,r24
 52752 16c0e 3183      		std Z+1,r19
 52753 16c10 2083      		st Z,r18
5030:lp_solve_5.5/lp_presolve.c ****   (*nVarFixed)     += iVarFixed;
 52754               		.loc 2 5030 0
 52755 16c12 8CA1      		ldd r24,Y+36
 52756 16c14 9DA1      		ldd r25,Y+37
 52757 16c16 FC01      		movw r30,r24
 52758 16c18 2081      		ld r18,Z
 52759 16c1a 3181      		ldd r19,Z+1
 52760 16c1c 8E89      		ldd r24,Y+22
 52761 16c1e 9F89      		ldd r25,Y+23
 52762 16c20 280F      		add r18,r24
 52763 16c22 391F      		adc r19,r25
 52764 16c24 8CA1      		ldd r24,Y+36
 52765 16c26 9DA1      		ldd r25,Y+37
 52766 16c28 FC01      		movw r30,r24
 52767 16c2a 3183      		std Z+1,r19
 52768 16c2c 2083      		st Z,r18
5031:lp_solve_5.5/lp_presolve.c ****   (*nBoundTighten) += iBoundTighten;
 52769               		.loc 2 5031 0
 52770 16c2e 8EA1      		ldd r24,Y+38
 52771 16c30 9FA1      		ldd r25,Y+39
 52772 16c32 FC01      		movw r30,r24
 52773 16c34 2081      		ld r18,Z
 52774 16c36 3181      		ldd r19,Z+1
 52775 16c38 8A85      		ldd r24,Y+10
 52776 16c3a 9B85      		ldd r25,Y+11
 52777 16c3c 280F      		add r18,r24
 52778 16c3e 391F      		adc r19,r25
 52779 16c40 8EA1      		ldd r24,Y+38
 52780 16c42 9FA1      		ldd r25,Y+39
 52781 16c44 FC01      		movw r30,r24
 52782 16c46 3183      		std Z+1,r19
 52783 16c48 2083      		st Z,r18
5032:lp_solve_5.5/lp_presolve.c ****   (*nSum)          += iCoeffChanged+iConRemove+iVarFixed+iBoundTighten;
 52784               		.loc 2 5032 0
 52785 16c4a 88A5      		ldd r24,Y+40
 52786 16c4c 99A5      		ldd r25,Y+41
 52787 16c4e FC01      		movw r30,r24
 52788 16c50 2081      		ld r18,Z
 52789 16c52 3181      		ldd r19,Z+1
 52790 16c54 4C89      		ldd r20,Y+20
 52791 16c56 5D89      		ldd r21,Y+21
 52792 16c58 8885      		ldd r24,Y+8
 52793 16c5a 9985      		ldd r25,Y+9
 52794 16c5c 480F      		add r20,r24
 52795 16c5e 591F      		adc r21,r25
 52796 16c60 8E89      		ldd r24,Y+22
 52797 16c62 9F89      		ldd r25,Y+23
 52798 16c64 480F      		add r20,r24
 52799 16c66 591F      		adc r21,r25
 52800 16c68 8A85      		ldd r24,Y+10
 52801 16c6a 9B85      		ldd r25,Y+11
 52802 16c6c 840F      		add r24,r20
 52803 16c6e 951F      		adc r25,r21
 52804 16c70 280F      		add r18,r24
 52805 16c72 391F      		adc r19,r25
 52806 16c74 88A5      		ldd r24,Y+40
 52807 16c76 99A5      		ldd r25,Y+41
 52808 16c78 FC01      		movw r30,r24
 52809 16c7a 3183      		std Z+1,r19
 52810 16c7c 2083      		st Z,r18
5033:lp_solve_5.5/lp_presolve.c **** 
5034:lp_solve_5.5/lp_presolve.c ****   return( status );
 52811               		.loc 2 5034 0
 52812 16c7e 888D      		ldd r24,Y+24
 52813 16c80 998D      		ldd r25,Y+25
 52814               	/* epilogue start */
5035:lp_solve_5.5/lp_presolve.c **** }
 52815               		.loc 2 5035 0
 52816 16c82 A996      		adiw r28,41
 52817 16c84 0FB6      		in __tmp_reg__,__SREG__
 52818 16c86 F894      		cli
 52819 16c88 DEBF      		out __SP_H__,r29
 52820 16c8a 0FBE      		out __SREG__,__tmp_reg__
 52821 16c8c CDBF      		out __SP_L__,r28
 52822 16c8e DF91      		pop r29
 52823 16c90 CF91      		pop r28
 52824 16c92 1F91      		pop r17
 52825 16c94 0F91      		pop r16
 52826 16c96 FF90      		pop r15
 52827 16c98 EF90      		pop r14
 52828 16c9a DF90      		pop r13
 52829 16c9c CF90      		pop r12
 52830 16c9e 0895      		ret
 52831               		.cfi_endproc
 52832               	.LFE89:
 52834               		.section	.rodata
 52835               	.LC65:
 52836 0b31 7072 6573 		.string	"presolve_freeandslacks: Eliminated free variable %s and row %s\n"
 52836      6F6C 7665 
 52836      5F66 7265 
 52836      6561 6E64 
 52836      736C 6163 
 52837               	.LC66:
 52838 0b71 7072 6573 		.string	"presolve_freeandslacks: Eliminated implied slack variable %s via row %s\n"
 52838      6F6C 7665 
 52838      5F66 7265 
 52838      6561 6E64 
 52838      736C 6163 
 52839               	.LC67:
 52840 0bba 7072 6573 		.string	"presolve_freeandslacks: Eliminated duplicate slack variable %s via row %s\n"
 52840      6F6C 7665 
 52840      5F66 7265 
 52840      6561 6E64 
 52840      736C 6163 
 52841               		.text
 52842               	.global	presolve_freeandslacks
 52844               	presolve_freeandslacks:
 52845               	.LFB90:
5036:lp_solve_5.5/lp_presolve.c **** 
5037:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_freeandslacks(presolverec *psdata, int *nCoeffChanged, int *nConRemove, int *nV
5038:lp_solve_5.5/lp_presolve.c **** {
 52846               		.loc 2 5038 0
 52847               		.cfi_startproc
 52848 16ca0 CF92      		push r12
 52849               	.LCFI572:
 52850               		.cfi_def_cfa_offset 3
 52851               		.cfi_offset 12, -2
 52852 16ca2 DF92      		push r13
 52853               	.LCFI573:
 52854               		.cfi_def_cfa_offset 4
 52855               		.cfi_offset 13, -3
 52856 16ca4 EF92      		push r14
 52857               	.LCFI574:
 52858               		.cfi_def_cfa_offset 5
 52859               		.cfi_offset 14, -4
 52860 16ca6 FF92      		push r15
 52861               	.LCFI575:
 52862               		.cfi_def_cfa_offset 6
 52863               		.cfi_offset 15, -5
 52864 16ca8 0F93      		push r16
 52865               	.LCFI576:
 52866               		.cfi_def_cfa_offset 7
 52867               		.cfi_offset 16, -6
 52868 16caa 1F93      		push r17
 52869               	.LCFI577:
 52870               		.cfi_def_cfa_offset 8
 52871               		.cfi_offset 17, -7
 52872 16cac CF93      		push r28
 52873               	.LCFI578:
 52874               		.cfi_def_cfa_offset 9
 52875               		.cfi_offset 28, -8
 52876 16cae DF93      		push r29
 52877               	.LCFI579:
 52878               		.cfi_def_cfa_offset 10
 52879               		.cfi_offset 29, -9
 52880 16cb0 CDB7      		in r28,__SP_L__
 52881 16cb2 DEB7      		in r29,__SP_H__
 52882               	.LCFI580:
 52883               		.cfi_def_cfa_register 28
 52884 16cb4 E097      		sbiw r28,48
 52885               	.LCFI581:
 52886               		.cfi_def_cfa_offset 58
 52887 16cb6 0FB6      		in __tmp_reg__,__SREG__
 52888 16cb8 F894      		cli
 52889 16cba DEBF      		out __SP_H__,r29
 52890 16cbc 0FBE      		out __SREG__,__tmp_reg__
 52891 16cbe CDBF      		out __SP_L__,r28
 52892               	/* prologue: function */
 52893               	/* frame size = 48 */
 52894               	/* stack size = 56 */
 52895               	.L__stack_usage = 56
 52896 16cc0 98A7      		std Y+40,r25
 52897 16cc2 8FA3      		std Y+39,r24
 52898 16cc4 7AA7      		std Y+42,r23
 52899 16cc6 69A7      		std Y+41,r22
 52900 16cc8 5CA7      		std Y+44,r21
 52901 16cca 4BA7      		std Y+43,r20
 52902 16ccc 3EA7      		std Y+46,r19
 52903 16cce 2DA7      		std Y+45,r18
 52904 16cd0 18AB      		std Y+48,r17
 52905 16cd2 0FA7      		std Y+47,r16
5039:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 52906               		.loc 2 5039 0
 52907 16cd4 8FA1      		ldd r24,Y+39
 52908 16cd6 98A5      		ldd r25,Y+40
 52909 16cd8 FC01      		movw r30,r24
 52910 16cda 8289      		ldd r24,Z+18
 52911 16cdc 9389      		ldd r25,Z+19
 52912 16cde 9A87      		std Y+10,r25
 52913 16ce0 8987      		std Y+9,r24
5040:lp_solve_5.5/lp_presolve.c ****   MYBOOL   isOFNZ, unbounded,
5041:lp_solve_5.5/lp_presolve.c ****            impliedfree = is_presolve(lp, PRESOLVE_IMPLIEDFREE),
 52914               		.loc 2 5041 0
 52915 16ce2 8985      		ldd r24,Y+9
 52916 16ce4 9A85      		ldd r25,Y+10
 52917 16ce6 60E0      		ldi r22,0
 52918 16ce8 72E0      		ldi r23,lo8(2)
 52919 16cea 0E94 0000 		call is_presolve
 52920 16cee 8B87      		std Y+11,r24
5042:lp_solve_5.5/lp_presolve.c ****            impliedslack = is_presolve(lp, PRESOLVE_IMPLIEDSLK);
 52921               		.loc 2 5042 0
 52922 16cf0 8985      		ldd r24,Y+9
 52923 16cf2 9A85      		ldd r25,Y+10
 52924 16cf4 60E0      		ldi r22,0
 52925 16cf6 70E0      		ldi r23,0
 52926 16cf8 0E94 0000 		call is_presolve
 52927 16cfc 8C87      		std Y+12,r24
5043:lp_solve_5.5/lp_presolve.c ****   int      iCoeffChanged = 0, iConRemove = 0, iVarFixed = 0,
 52928               		.loc 2 5043 0
 52929 16cfe 1E86      		std Y+14,__zero_reg__
 52930 16d00 1D86      		std Y+13,__zero_reg__
 52931 16d02 1A82      		std Y+2,__zero_reg__
 52932 16d04 1982      		std Y+1,__zero_reg__
 52933 16d06 1CA2      		std Y+36,__zero_reg__
 52934 16d08 1BA2      		std Y+35,__zero_reg__
5044:lp_solve_5.5/lp_presolve.c ****            status = RUNNING, i, ix, j, countNZ;
 52935               		.loc 2 5044 0
 52936 16d0a 88E0      		ldi r24,lo8(8)
 52937 16d0c 90E0      		ldi r25,0
 52938 16d0e 988B      		std Y+16,r25
 52939 16d10 8F87      		std Y+15,r24
5045:lp_solve_5.5/lp_presolve.c ****   REAL     coeff_bl, coeff_bu;
5046:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 52940               		.loc 2 5046 0
 52941 16d12 8985      		ldd r24,Y+9
 52942 16d14 9A85      		ldd r25,Y+10
 52943 16d16 8A54      		subi r24,74
 52944 16d18 9D4F      		sbci r25,-3
 52945 16d1a FC01      		movw r30,r24
 52946 16d1c 8081      		ld r24,Z
 52947 16d1e 9181      		ldd r25,Z+1
 52948 16d20 9A8B      		std Y+18,r25
 52949 16d22 898B      		std Y+17,r24
5047:lp_solve_5.5/lp_presolve.c **** 
5048:lp_solve_5.5/lp_presolve.c ****   if(impliedfree || impliedslack)
 52950               		.loc 2 5048 0
 52951 16d24 8B85      		ldd r24,Y+11
 52952 16d26 8823      		tst r24
 52953 16d28 01F4      		brne .L2169
 52954               		.loc 2 5048 0 is_stmt 0 discriminator 1
 52955 16d2a 8C85      		ldd r24,Y+12
 52956 16d2c 8823      		tst r24
 52957 16d2e 01F4      		brne .+2
 52958 16d30 00C0      		rjmp .L2170
 52959               	.L2169:
5049:lp_solve_5.5/lp_presolve.c ****   for(j = firstActiveLink(psdata->cols->varmap); j != 0; ) {
 52960               		.loc 2 5049 0 is_stmt 1
 52961 16d32 8FA1      		ldd r24,Y+39
 52962 16d34 98A5      		ldd r25,Y+40
 52963 16d36 FC01      		movw r30,r24
 52964 16d38 8281      		ldd r24,Z+2
 52965 16d3a 9381      		ldd r25,Z+3
 52966 16d3c FC01      		movw r30,r24
 52967 16d3e 8081      		ld r24,Z
 52968 16d40 9181      		ldd r25,Z+1
 52969 16d42 0E94 0000 		call firstActiveLink
 52970 16d46 9C83      		std Y+4,r25
 52971 16d48 8B83      		std Y+3,r24
 52972 16d4a 00C0      		rjmp .L2171
 52973               	.L2200:
5050:lp_solve_5.5/lp_presolve.c **** 
5051:lp_solve_5.5/lp_presolve.c ****     /* Check and initialize */
5052:lp_solve_5.5/lp_presolve.c ****     if((presolve_collength(psdata, j) != 1) ||
 52974               		.loc 2 5052 0
 52975 16d4c 2B81      		ldd r18,Y+3
 52976 16d4e 3C81      		ldd r19,Y+4
 52977 16d50 8FA1      		ldd r24,Y+39
 52978 16d52 98A5      		ldd r25,Y+40
 52979 16d54 B901      		movw r22,r18
 52980 16d56 0E94 0000 		call presolve_collength
 52981 16d5a 0197      		sbiw r24,1
 52982 16d5c 01F4      		brne .L2172
5053:lp_solve_5.5/lp_presolve.c ****        is_int(lp, j) || is_semicont(lp, j) ||
 52983               		.loc 2 5053 0 discriminator 1
 52984 16d5e 2B81      		ldd r18,Y+3
 52985 16d60 3C81      		ldd r19,Y+4
 52986 16d62 8985      		ldd r24,Y+9
 52987 16d64 9A85      		ldd r25,Y+10
 52988 16d66 B901      		movw r22,r18
 52989 16d68 0E94 0000 		call is_int
5052:lp_solve_5.5/lp_presolve.c ****        is_int(lp, j) || is_semicont(lp, j) ||
 52990               		.loc 2 5052 0 discriminator 1
 52991 16d6c 8823      		tst r24
 52992 16d6e 01F4      		brne .L2172
 52993               		.loc 2 5053 0
 52994 16d70 2B81      		ldd r18,Y+3
 52995 16d72 3C81      		ldd r19,Y+4
 52996 16d74 8985      		ldd r24,Y+9
 52997 16d76 9A85      		ldd r25,Y+10
 52998 16d78 B901      		movw r22,r18
 52999 16d7a 0E94 0000 		call is_semicont
 53000 16d7e 8823      		tst r24
 53001 16d80 01F4      		brne .L2172
5054:lp_solve_5.5/lp_presolve.c ****        !presolve_candeletevar(psdata, j)) {
 53002               		.loc 2 5054 0 discriminator 1
 53003 16d82 2B81      		ldd r18,Y+3
 53004 16d84 3C81      		ldd r19,Y+4
 53005 16d86 8FA1      		ldd r24,Y+39
 53006 16d88 98A5      		ldd r25,Y+40
 53007 16d8a B901      		movw r22,r18
 53008 16d8c 0E94 0000 		call presolve_candeletevar
5053:lp_solve_5.5/lp_presolve.c ****        is_int(lp, j) || is_semicont(lp, j) ||
 53009               		.loc 2 5053 0 discriminator 1
 53010 16d90 8823      		tst r24
 53011 16d92 01F4      		brne .L2173
 53012               	.L2172:
5055:lp_solve_5.5/lp_presolve.c ****       j = nextActiveLink(psdata->cols->varmap, j);
 53013               		.loc 2 5055 0
 53014 16d94 8FA1      		ldd r24,Y+39
 53015 16d96 98A5      		ldd r25,Y+40
 53016 16d98 FC01      		movw r30,r24
 53017 16d9a 8281      		ldd r24,Z+2
 53018 16d9c 9381      		ldd r25,Z+3
 53019 16d9e FC01      		movw r30,r24
 53020 16da0 8081      		ld r24,Z
 53021 16da2 9181      		ldd r25,Z+1
 53022 16da4 2B81      		ldd r18,Y+3
 53023 16da6 3C81      		ldd r19,Y+4
 53024 16da8 B901      		movw r22,r18
 53025 16daa 0E94 0000 		call nextActiveLink
 53026 16dae 9C83      		std Y+4,r25
 53027 16db0 8B83      		std Y+3,r24
5056:lp_solve_5.5/lp_presolve.c ****       continue;
 53028               		.loc 2 5056 0
 53029 16db2 00C0      		rjmp .L2171
 53030               	.L2173:
5057:lp_solve_5.5/lp_presolve.c ****     }
5058:lp_solve_5.5/lp_presolve.c ****     ix = 0;
 53031               		.loc 2 5058 0
 53032 16db4 1EA2      		std Y+38,__zero_reg__
 53033 16db6 1DA2      		std Y+37,__zero_reg__
5059:lp_solve_5.5/lp_presolve.c ****     i = COL_MAT_ROWNR(presolve_nextrow(psdata, j, &ix));
 53034               		.loc 2 5059 0
 53035 16db8 8989      		ldd r24,Y+17
 53036 16dba 9A89      		ldd r25,Y+18
 53037 16dbc FC01      		movw r30,r24
 53038 16dbe 0685      		ldd r16,Z+14
 53039 16dc0 1785      		ldd r17,Z+15
 53040 16dc2 AE01      		movw r20,r28
 53041 16dc4 4B5D      		subi r20,-37
 53042 16dc6 5F4F      		sbci r21,-1
 53043 16dc8 2B81      		ldd r18,Y+3
 53044 16dca 3C81      		ldd r19,Y+4
 53045 16dcc 8FA1      		ldd r24,Y+39
 53046 16dce 98A5      		ldd r25,Y+40
 53047 16dd0 B901      		movw r22,r18
 53048 16dd2 0E94 0000 		call presolve_nextrow
 53049 16dd6 880F      		lsl r24
 53050 16dd8 991F      		rol r25
 53051 16dda 800F      		add r24,r16
 53052 16ddc 911F      		adc r25,r17
 53053 16dde FC01      		movw r30,r24
 53054 16de0 8081      		ld r24,Z
 53055 16de2 9181      		ldd r25,Z+1
 53056 16de4 9C8B      		std Y+20,r25
 53057 16de6 8B8B      		std Y+19,r24
5060:lp_solve_5.5/lp_presolve.c ****     isOFNZ  = isnz_origobj(lp, j);
 53058               		.loc 2 5060 0
 53059 16de8 2B81      		ldd r18,Y+3
 53060 16dea 3C81      		ldd r19,Y+4
 53061 16dec 8985      		ldd r24,Y+9
 53062 16dee 9A85      		ldd r25,Y+10
 53063 16df0 B901      		movw r22,r18
 53064 16df2 0E94 0000 		call isnz_origobj
 53065 16df6 8D8B      		std Y+21,r24
5061:lp_solve_5.5/lp_presolve.c ****     countNZ = presolve_rowlength(psdata, i);
 53066               		.loc 2 5061 0
 53067 16df8 2B89      		ldd r18,Y+19
 53068 16dfa 3C89      		ldd r19,Y+20
 53069 16dfc 8FA1      		ldd r24,Y+39
 53070 16dfe 98A5      		ldd r25,Y+40
 53071 16e00 B901      		movw r22,r18
 53072 16e02 0E94 0000 		call presolve_rowlength
 53073 16e06 9F8B      		std Y+23,r25
 53074 16e08 8E8B      		std Y+22,r24
5062:lp_solve_5.5/lp_presolve.c ****     coeff_bu = get_upbo(lp, j);
 53075               		.loc 2 5062 0
 53076 16e0a 2B81      		ldd r18,Y+3
 53077 16e0c 3C81      		ldd r19,Y+4
 53078 16e0e 8985      		ldd r24,Y+9
 53079 16e10 9A85      		ldd r25,Y+10
 53080 16e12 B901      		movw r22,r18
 53081 16e14 0E94 0000 		call get_upbo
 53082 16e18 DC01      		movw r26,r24
 53083 16e1a CB01      		movw r24,r22
 53084 16e1c 8D83      		std Y+5,r24
 53085 16e1e 9E83      		std Y+6,r25
 53086 16e20 AF83      		std Y+7,r26
 53087 16e22 B887      		std Y+8,r27
5063:lp_solve_5.5/lp_presolve.c ****     coeff_bl = get_lowbo(lp, j);
 53088               		.loc 2 5063 0
 53089 16e24 2B81      		ldd r18,Y+3
 53090 16e26 3C81      		ldd r19,Y+4
 53091 16e28 8985      		ldd r24,Y+9
 53092 16e2a 9A85      		ldd r25,Y+10
 53093 16e2c B901      		movw r22,r18
 53094 16e2e 0E94 0000 		call get_lowbo
 53095 16e32 DC01      		movw r26,r24
 53096 16e34 CB01      		movw r24,r22
 53097 16e36 888F      		std Y+24,r24
 53098 16e38 998F      		std Y+25,r25
 53099 16e3a AA8F      		std Y+26,r26
 53100 16e3c BB8F      		std Y+27,r27
5064:lp_solve_5.5/lp_presolve.c ****     unbounded = my_infinite(lp, coeff_bl) && my_infinite(lp, coeff_bu);
 53101               		.loc 2 5064 0
 53102 16e3e 888D      		ldd r24,Y+24
 53103 16e40 998D      		ldd r25,Y+25
 53104 16e42 AA8D      		ldd r26,Y+26
 53105 16e44 BB8D      		ldd r27,Y+27
 53106 16e46 BF77      		andi r27,0x7f
 53107 16e48 2985      		ldd r18,Y+9
 53108 16e4a 3A85      		ldd r19,Y+10
 53109 16e4c 265F      		subi r18,-10
 53110 16e4e 3C4F      		sbci r19,-4
 53111 16e50 F901      		movw r30,r18
 53112 16e52 2081      		ld r18,Z
 53113 16e54 3181      		ldd r19,Z+1
 53114 16e56 4281      		ldd r20,Z+2
 53115 16e58 5381      		ldd r21,Z+3
 53116 16e5a BC01      		movw r22,r24
 53117 16e5c CD01      		movw r24,r26
 53118 16e5e 0E94 0000 		call __gesf2
 53119 16e62 8823      		tst r24
 53120 16e64 04F0      		brlt .L2174
 53121               		.loc 2 5064 0 is_stmt 0 discriminator 1
 53122 16e66 8D81      		ldd r24,Y+5
 53123 16e68 9E81      		ldd r25,Y+6
 53124 16e6a AF81      		ldd r26,Y+7
 53125 16e6c B885      		ldd r27,Y+8
 53126 16e6e BF77      		andi r27,0x7f
 53127 16e70 2985      		ldd r18,Y+9
 53128 16e72 3A85      		ldd r19,Y+10
 53129 16e74 265F      		subi r18,-10
 53130 16e76 3C4F      		sbci r19,-4
 53131 16e78 F901      		movw r30,r18
 53132 16e7a 2081      		ld r18,Z
 53133 16e7c 3181      		ldd r19,Z+1
 53134 16e7e 4281      		ldd r20,Z+2
 53135 16e80 5381      		ldd r21,Z+3
 53136 16e82 BC01      		movw r22,r24
 53137 16e84 CD01      		movw r24,r26
 53138 16e86 0E94 0000 		call __gesf2
 53139 16e8a 8823      		tst r24
 53140 16e8c 04F0      		brlt .L2174
 53141               		.loc 2 5064 0 discriminator 3
 53142 16e8e 81E0      		ldi r24,lo8(1)
 53143 16e90 90E0      		ldi r25,0
 53144 16e92 00C0      		rjmp .L2177
 53145               	.L2174:
 53146               		.loc 2 5064 0 discriminator 4
 53147 16e94 80E0      		ldi r24,0
 53148 16e96 90E0      		ldi r25,0
 53149               	.L2177:
 53150               		.loc 2 5064 0 discriminator 6
 53151 16e98 8C8F      		std Y+28,r24
5065:lp_solve_5.5/lp_presolve.c ****     ix = lp->rows + j;
 53152               		.loc 2 5065 0 is_stmt 1 discriminator 6
 53153 16e9a 8985      		ldd r24,Y+9
 53154 16e9c 9A85      		ldd r25,Y+10
 53155 16e9e 8651      		subi r24,22
 53156 16ea0 9E4F      		sbci r25,-2
 53157 16ea2 FC01      		movw r30,r24
 53158 16ea4 2081      		ld r18,Z
 53159 16ea6 3181      		ldd r19,Z+1
 53160 16ea8 8B81      		ldd r24,Y+3
 53161 16eaa 9C81      		ldd r25,Y+4
 53162 16eac 820F      		add r24,r18
 53163 16eae 931F      		adc r25,r19
 53164 16eb0 9EA3      		std Y+38,r25
 53165 16eb2 8DA3      		std Y+37,r24
5066:lp_solve_5.5/lp_presolve.c **** 
5067:lp_solve_5.5/lp_presolve.c ****     /* Eliminate singleton free variable and its associated constraint */
5068:lp_solve_5.5/lp_presolve.c ****     if(impliedfree && unbounded &&
 53166               		.loc 2 5068 0 discriminator 6
 53167 16eb4 8B85      		ldd r24,Y+11
 53168 16eb6 8823      		tst r24
 53169 16eb8 01F4      		brne .+2
 53170 16eba 00C0      		rjmp .L2178
 53171               		.loc 2 5068 0 is_stmt 0 discriminator 1
 53172 16ebc 8C8D      		ldd r24,Y+28
 53173 16ebe 8823      		tst r24
 53174 16ec0 01F4      		brne .+2
 53175 16ec2 00C0      		rjmp .L2178
5069:lp_solve_5.5/lp_presolve.c ****        presolve_impliedcolfix(psdata, i, j, TRUE)) {
 53176               		.loc 2 5069 0 is_stmt 1 discriminator 2
 53177 16ec4 4B81      		ldd r20,Y+3
 53178 16ec6 5C81      		ldd r21,Y+4
 53179 16ec8 6B89      		ldd r22,Y+19
 53180 16eca 7C89      		ldd r23,Y+20
 53181 16ecc 8FA1      		ldd r24,Y+39
 53182 16ece 98A5      		ldd r25,Y+40
 53183 16ed0 21E0      		ldi r18,lo8(1)
 53184 16ed2 0E94 0000 		call presolve_impliedcolfix
5068:lp_solve_5.5/lp_presolve.c ****        presolve_impliedcolfix(psdata, i, j, TRUE)) {
 53185               		.loc 2 5068 0 discriminator 2
 53186 16ed6 8823      		tst r24
 53187 16ed8 01F4      		brne .+2
 53188 16eda 00C0      		rjmp .L2178
5070:lp_solve_5.5/lp_presolve.c ****       report(lp, DETAILED, "presolve_freeandslacks: Eliminated free variable %s and row %s\n",
 53189               		.loc 2 5070 0
 53190 16edc 2B89      		ldd r18,Y+19
 53191 16ede 3C89      		ldd r19,Y+20
 53192 16ee0 8985      		ldd r24,Y+9
 53193 16ee2 9A85      		ldd r25,Y+10
 53194 16ee4 B901      		movw r22,r18
 53195 16ee6 0E94 0000 		call get_row_name
 53196 16eea 8C01      		movw r16,r24
 53197 16eec 2B81      		ldd r18,Y+3
 53198 16eee 3C81      		ldd r19,Y+4
 53199 16ef0 8985      		ldd r24,Y+9
 53200 16ef2 9A85      		ldd r25,Y+10
 53201 16ef4 B901      		movw r22,r18
 53202 16ef6 0E94 0000 		call get_col_name
 53203 16efa 212F      		mov r18,r17
 53204 16efc 2F93      		push r18
 53205 16efe 202F      		mov r18,r16
 53206 16f00 2F93      		push r18
 53207 16f02 292F      		mov r18,r25
 53208 16f04 2F93      		push r18
 53209 16f06 8F93      		push r24
 53210 16f08 80E0      		ldi r24,lo8(.LC65)
 53211 16f0a 90E0      		ldi r25,hi8(.LC65)
 53212 16f0c 892F      		mov r24,r25
 53213 16f0e 8F93      		push r24
 53214 16f10 80E0      		ldi r24,lo8(.LC65)
 53215 16f12 90E0      		ldi r25,hi8(.LC65)
 53216 16f14 8F93      		push r24
 53217 16f16 1F92      		push __zero_reg__
 53218 16f18 85E0      		ldi r24,lo8(5)
 53219 16f1a 8F93      		push r24
 53220 16f1c 8A85      		ldd r24,Y+10
 53221 16f1e 8F93      		push r24
 53222 16f20 8985      		ldd r24,Y+9
 53223 16f22 8F93      		push r24
 53224 16f24 0E94 0000 		call report
 53225 16f28 8DB7      		in r24,__SP_L__
 53226 16f2a 9EB7      		in r25,__SP_H__
 53227 16f2c 0A96      		adiw r24,10
 53228 16f2e 0FB6      		in __tmp_reg__,__SREG__
 53229 16f30 F894      		cli
 53230 16f32 DEBF      		out __SP_H__,r29
 53231 16f34 0FBE      		out __SREG__,__tmp_reg__
 53232 16f36 CDBF      		out __SP_L__,r28
5071:lp_solve_5.5/lp_presolve.c ****                             get_col_name(lp, j), get_row_name(lp, i));
5072:lp_solve_5.5/lp_presolve.c ****       presolve_rowremove(psdata, i, TRUE);
 53233               		.loc 2 5072 0
 53234 16f38 2B89      		ldd r18,Y+19
 53235 16f3a 3C89      		ldd r19,Y+20
 53236 16f3c 8FA1      		ldd r24,Y+39
 53237 16f3e 98A5      		ldd r25,Y+40
 53238 16f40 41E0      		ldi r20,lo8(1)
 53239 16f42 B901      		movw r22,r18
 53240 16f44 0E94 0000 		call presolve_rowremove
5073:lp_solve_5.5/lp_presolve.c ****       iConRemove++;
 53241               		.loc 2 5073 0
 53242 16f48 8981      		ldd r24,Y+1
 53243 16f4a 9A81      		ldd r25,Y+2
 53244 16f4c 0196      		adiw r24,1
 53245 16f4e 9A83      		std Y+2,r25
 53246 16f50 8983      		std Y+1,r24
5074:lp_solve_5.5/lp_presolve.c ****       j = presolve_colremove(psdata, j, TRUE);
 53247               		.loc 2 5074 0
 53248 16f52 2B81      		ldd r18,Y+3
 53249 16f54 3C81      		ldd r19,Y+4
 53250 16f56 8FA1      		ldd r24,Y+39
 53251 16f58 98A5      		ldd r25,Y+40
 53252 16f5a 41E0      		ldi r20,lo8(1)
 53253 16f5c B901      		movw r22,r18
 53254 16f5e 0E94 0000 		call presolve_colremove
 53255 16f62 9C83      		std Y+4,r25
 53256 16f64 8B83      		std Y+3,r24
5075:lp_solve_5.5/lp_presolve.c ****       iVarFixed++;
 53257               		.loc 2 5075 0
 53258 16f66 8BA1      		ldd r24,Y+35
 53259 16f68 9CA1      		ldd r25,Y+36
 53260 16f6a 0196      		adiw r24,1
 53261 16f6c 9CA3      		std Y+36,r25
 53262 16f6e 8BA3      		std Y+35,r24
 53263 16f70 00C0      		rjmp .L2171
 53264               	.L2178:
5076:lp_solve_5.5/lp_presolve.c ****     }
5077:lp_solve_5.5/lp_presolve.c **** 
5078:lp_solve_5.5/lp_presolve.c ****     /* Check for implied slack variable in equality constraint */
5079:lp_solve_5.5/lp_presolve.c ****     else if(impliedslack &&
 53265               		.loc 2 5079 0
 53266 16f72 8C85      		ldd r24,Y+12
 53267 16f74 8823      		tst r24
 53268 16f76 01F4      		brne .+2
 53269 16f78 00C0      		rjmp .L2179
 53270               		.loc 2 5079 0 is_stmt 0 discriminator 1
 53271 16f7a 8E89      		ldd r24,Y+22
 53272 16f7c 9F89      		ldd r25,Y+23
 53273 16f7e 0297      		sbiw r24,2
 53274 16f80 04F4      		brge .+2
 53275 16f82 00C0      		rjmp .L2179
5080:lp_solve_5.5/lp_presolve.c ****              (countNZ > 1) &&
5081:lp_solve_5.5/lp_presolve.c ****              is_constr_type(lp, i, EQ) &&
 53276               		.loc 2 5081 0 is_stmt 1
 53277 16f84 2B89      		ldd r18,Y+19
 53278 16f86 3C89      		ldd r19,Y+20
 53279 16f88 8985      		ldd r24,Y+9
 53280 16f8a 9A85      		ldd r25,Y+10
 53281 16f8c 43E0      		ldi r20,lo8(3)
 53282 16f8e 50E0      		ldi r21,0
 53283 16f90 B901      		movw r22,r18
 53284 16f92 0E94 0000 		call is_constr_type
5080:lp_solve_5.5/lp_presolve.c ****              (countNZ > 1) &&
 53285               		.loc 2 5080 0
 53286 16f96 8823      		tst r24
 53287 16f98 01F4      		brne .+2
 53288 16f9a 00C0      		rjmp .L2179
5082:lp_solve_5.5/lp_presolve.c ****              presolve_impliedcolfix(psdata, i, j, FALSE)) {
 53289               		.loc 2 5082 0
 53290 16f9c 4B81      		ldd r20,Y+3
 53291 16f9e 5C81      		ldd r21,Y+4
 53292 16fa0 6B89      		ldd r22,Y+19
 53293 16fa2 7C89      		ldd r23,Y+20
 53294 16fa4 8FA1      		ldd r24,Y+39
 53295 16fa6 98A5      		ldd r25,Y+40
 53296 16fa8 20E0      		ldi r18,0
 53297 16faa 0E94 0000 		call presolve_impliedcolfix
5081:lp_solve_5.5/lp_presolve.c ****              presolve_impliedcolfix(psdata, i, j, FALSE)) {
 53298               		.loc 2 5081 0
 53299 16fae 8823      		tst r24
 53300 16fb0 01F4      		brne .+2
 53301 16fb2 00C0      		rjmp .L2179
5083:lp_solve_5.5/lp_presolve.c ****       report(lp, DETAILED, "presolve_freeandslacks: Eliminated implied slack variable %s via row %s
 53302               		.loc 2 5083 0
 53303 16fb4 2B89      		ldd r18,Y+19
 53304 16fb6 3C89      		ldd r19,Y+20
 53305 16fb8 8985      		ldd r24,Y+9
 53306 16fba 9A85      		ldd r25,Y+10
 53307 16fbc B901      		movw r22,r18
 53308 16fbe 0E94 0000 		call get_row_name
 53309 16fc2 8C01      		movw r16,r24
 53310 16fc4 2B81      		ldd r18,Y+3
 53311 16fc6 3C81      		ldd r19,Y+4
 53312 16fc8 8985      		ldd r24,Y+9
 53313 16fca 9A85      		ldd r25,Y+10
 53314 16fcc B901      		movw r22,r18
 53315 16fce 0E94 0000 		call get_col_name
 53316 16fd2 212F      		mov r18,r17
 53317 16fd4 2F93      		push r18
 53318 16fd6 202F      		mov r18,r16
 53319 16fd8 2F93      		push r18
 53320 16fda 292F      		mov r18,r25
 53321 16fdc 2F93      		push r18
 53322 16fde 8F93      		push r24
 53323 16fe0 80E0      		ldi r24,lo8(.LC66)
 53324 16fe2 90E0      		ldi r25,hi8(.LC66)
 53325 16fe4 892F      		mov r24,r25
 53326 16fe6 8F93      		push r24
 53327 16fe8 80E0      		ldi r24,lo8(.LC66)
 53328 16fea 90E0      		ldi r25,hi8(.LC66)
 53329 16fec 8F93      		push r24
 53330 16fee 1F92      		push __zero_reg__
 53331 16ff0 85E0      		ldi r24,lo8(5)
 53332 16ff2 8F93      		push r24
 53333 16ff4 8A85      		ldd r24,Y+10
 53334 16ff6 8F93      		push r24
 53335 16ff8 8985      		ldd r24,Y+9
 53336 16ffa 8F93      		push r24
 53337 16ffc 0E94 0000 		call report
 53338 17000 EDB7      		in r30,__SP_L__
 53339 17002 FEB7      		in r31,__SP_H__
 53340 17004 3A96      		adiw r30,10
 53341 17006 0FB6      		in __tmp_reg__,__SREG__
 53342 17008 F894      		cli
 53343 1700a DEBF      		out __SP_H__,r29
 53344 1700c 0FBE      		out __SREG__,__tmp_reg__
 53345 1700e CDBF      		out __SP_L__,r28
5084:lp_solve_5.5/lp_presolve.c ****                             get_col_name(lp, j), get_row_name(lp, i));
5085:lp_solve_5.5/lp_presolve.c ****       psdata->forceupdate = TRUE;
 53346               		.loc 2 5085 0
 53347 17010 8FA1      		ldd r24,Y+39
 53348 17012 98A5      		ldd r25,Y+40
 53349 17014 21E0      		ldi r18,lo8(1)
 53350 17016 FC01      		movw r30,r24
 53351 17018 24A3      		std Z+36,r18
5086:lp_solve_5.5/lp_presolve.c ****       j = presolve_colremove(psdata, j, TRUE);
 53352               		.loc 2 5086 0
 53353 1701a 2B81      		ldd r18,Y+3
 53354 1701c 3C81      		ldd r19,Y+4
 53355 1701e 8FA1      		ldd r24,Y+39
 53356 17020 98A5      		ldd r25,Y+40
 53357 17022 41E0      		ldi r20,lo8(1)
 53358 17024 B901      		movw r22,r18
 53359 17026 0E94 0000 		call presolve_colremove
 53360 1702a 9C83      		std Y+4,r25
 53361 1702c 8B83      		std Y+3,r24
5087:lp_solve_5.5/lp_presolve.c ****       iVarFixed++;
 53362               		.loc 2 5087 0
 53363 1702e 8BA1      		ldd r24,Y+35
 53364 17030 9CA1      		ldd r25,Y+36
 53365 17032 0196      		adiw r24,1
 53366 17034 9CA3      		std Y+36,r25
 53367 17036 8BA3      		std Y+35,r24
 53368 17038 00C0      		rjmp .L2171
 53369               	.L2179:
5088:lp_solve_5.5/lp_presolve.c ****     }
5089:lp_solve_5.5/lp_presolve.c **** 
5090:lp_solve_5.5/lp_presolve.c ****     /* Check for implied (generalized) slack variable in inequality constraint */
5091:lp_solve_5.5/lp_presolve.c ****     else if(impliedslack && !isOFNZ &&
 53370               		.loc 2 5091 0
 53371 1703a 8C85      		ldd r24,Y+12
 53372 1703c 8823      		tst r24
 53373 1703e 01F4      		brne .+2
 53374 17040 00C0      		rjmp .L2180
 53375               		.loc 2 5091 0 is_stmt 0 discriminator 1
 53376 17042 8D89      		ldd r24,Y+21
 53377 17044 8823      		tst r24
 53378 17046 01F0      		breq .+2
 53379 17048 00C0      		rjmp .L2180
5092:lp_solve_5.5/lp_presolve.c ****              my_infinite(lp, coeff_bu) &&                 /* Consider removing this test */
 53380               		.loc 2 5092 0 is_stmt 1 discriminator 2
 53381 1704a 8D81      		ldd r24,Y+5
 53382 1704c 9E81      		ldd r25,Y+6
 53383 1704e AF81      		ldd r26,Y+7
 53384 17050 B885      		ldd r27,Y+8
 53385 17052 BF77      		andi r27,0x7f
 53386 17054 2985      		ldd r18,Y+9
 53387 17056 3A85      		ldd r19,Y+10
 53388 17058 265F      		subi r18,-10
 53389 1705a 3C4F      		sbci r19,-4
 53390 1705c F901      		movw r30,r18
 53391 1705e 2081      		ld r18,Z
 53392 17060 3181      		ldd r19,Z+1
 53393 17062 4281      		ldd r20,Z+2
 53394 17064 5381      		ldd r21,Z+3
5091:lp_solve_5.5/lp_presolve.c ****              my_infinite(lp, coeff_bu) &&                 /* Consider removing this test */
 53395               		.loc 2 5091 0 discriminator 2
 53396 17066 BC01      		movw r22,r24
 53397 17068 CD01      		movw r24,r26
 53398 1706a 0E94 0000 		call __gesf2
 53399 1706e 8823      		tst r24
 53400 17070 04F4      		brge .+2
 53401 17072 00C0      		rjmp .L2180
5093:lp_solve_5.5/lp_presolve.c **** #if 0 /* Force zero-bounded implicit slack  */
5094:lp_solve_5.5/lp_presolve.c ****              (coeff_bl == 0)) &&
5095:lp_solve_5.5/lp_presolve.c **** #else
5096:lp_solve_5.5/lp_presolve.c ****              !my_infinite(lp, coeff_bl) &&
 53402               		.loc 2 5096 0
 53403 17074 888D      		ldd r24,Y+24
 53404 17076 998D      		ldd r25,Y+25
 53405 17078 AA8D      		ldd r26,Y+26
 53406 1707a BB8D      		ldd r27,Y+27
 53407 1707c BF77      		andi r27,0x7f
 53408 1707e 2985      		ldd r18,Y+9
 53409 17080 3A85      		ldd r19,Y+10
 53410 17082 265F      		subi r18,-10
 53411 17084 3C4F      		sbci r19,-4
 53412 17086 F901      		movw r30,r18
 53413 17088 2081      		ld r18,Z
 53414 1708a 3181      		ldd r19,Z+1
 53415 1708c 4281      		ldd r20,Z+2
 53416 1708e 5381      		ldd r21,Z+3
 53417 17090 11E0      		ldi r17,lo8(1)
 53418 17092 BC01      		movw r22,r24
 53419 17094 CD01      		movw r24,r26
 53420 17096 0E94 0000 		call __gesf2
 53421 1709a 8823      		tst r24
 53422 1709c 04F4      		brge .L2182
 53423 1709e 10E0      		ldi r17,0
 53424               	.L2182:
 53425 170a0 81E0      		ldi r24,lo8(1)
 53426 170a2 8127      		eor r24,r17
5092:lp_solve_5.5/lp_presolve.c **** #if 0 /* Force zero-bounded implicit slack  */
 53427               		.loc 2 5092 0
 53428 170a4 8823      		tst r24
 53429 170a6 01F4      		brne .+2
 53430 170a8 00C0      		rjmp .L2180
 53431               		.loc 2 5096 0
 53432 170aa 8E89      		ldd r24,Y+22
 53433 170ac 9F89      		ldd r25,Y+23
 53434 170ae 0297      		sbiw r24,2
 53435 170b0 04F4      		brge .+2
 53436 170b2 00C0      		rjmp .L2180
5097:lp_solve_5.5/lp_presolve.c **** #endif
5098:lp_solve_5.5/lp_presolve.c ****              (countNZ > 1) &&
5099:lp_solve_5.5/lp_presolve.c ****              !is_constr_type(lp, i, EQ))  {
 53437               		.loc 2 5099 0
 53438 170b4 2B89      		ldd r18,Y+19
 53439 170b6 3C89      		ldd r19,Y+20
 53440 170b8 8985      		ldd r24,Y+9
 53441 170ba 9A85      		ldd r25,Y+10
 53442 170bc 43E0      		ldi r20,lo8(3)
 53443 170be 50E0      		ldi r21,0
 53444 170c0 B901      		movw r22,r18
 53445 170c2 0E94 0000 		call is_constr_type
5098:lp_solve_5.5/lp_presolve.c ****              !is_constr_type(lp, i, EQ))  {
 53446               		.loc 2 5098 0
 53447 170c6 8823      		tst r24
 53448 170c8 01F0      		breq .+2
 53449 170ca 00C0      		rjmp .L2180
 53450               	.LBB15:
5100:lp_solve_5.5/lp_presolve.c ****       REAL *target,
5101:lp_solve_5.5/lp_presolve.c ****             ValueA   = COL_MAT_VALUE(presolve_lastrow(psdata, j));
 53451               		.loc 2 5101 0
 53452 170cc 8989      		ldd r24,Y+17
 53453 170ce 9A89      		ldd r25,Y+18
 53454 170d0 FC01      		movw r30,r24
 53455 170d2 0089      		ldd r16,Z+16
 53456 170d4 1189      		ldd r17,Z+17
 53457 170d6 2B81      		ldd r18,Y+3
 53458 170d8 3C81      		ldd r19,Y+4
 53459 170da 8FA1      		ldd r24,Y+39
 53460 170dc 98A5      		ldd r25,Y+40
 53461 170de B901      		movw r22,r18
 53462 170e0 0E94 0000 		call presolve_lastrow
 53463 170e4 880F      		lsl r24
 53464 170e6 991F      		rol r25
 53465 170e8 880F      		lsl r24
 53466 170ea 991F      		rol r25
 53467 170ec 800F      		add r24,r16
 53468 170ee 911F      		adc r25,r17
 53469 170f0 FC01      		movw r30,r24
 53470 170f2 8081      		ld r24,Z
 53471 170f4 9181      		ldd r25,Z+1
 53472 170f6 A281      		ldd r26,Z+2
 53473 170f8 B381      		ldd r27,Z+3
 53474 170fa 8D8F      		std Y+29,r24
 53475 170fc 9E8F      		std Y+30,r25
 53476 170fe AF8F      		std Y+31,r26
 53477 17100 B8A3      		std Y+32,r27
5102:lp_solve_5.5/lp_presolve.c **** #if 0
5103:lp_solve_5.5/lp_presolve.c ****       coeff_bu = get_rh_upper(lp, i);
5104:lp_solve_5.5/lp_presolve.c ****       coeff_bl = get_rh_lower(lp, i);
5105:lp_solve_5.5/lp_presolve.c ****       if(!presolve_singletonbounds(psdata, i, j, &coeff_bl, &coeff_bu, &ValueA)) {
5106:lp_solve_5.5/lp_presolve.c ****         status = presolve_setstatus(psdata, INFEASIBLE);
5107:lp_solve_5.5/lp_presolve.c ****         break;
5108:lp_solve_5.5/lp_presolve.c ****       }
5109:lp_solve_5.5/lp_presolve.c **** #endif
5110:lp_solve_5.5/lp_presolve.c ****       if((coeff_bl != 0) && !my_infinite(lp, coeff_bl) && !my_infinite(lp, coeff_bu))
 53478               		.loc 2 5110 0
 53479 17102 20E0      		ldi r18,0
 53480 17104 30E0      		ldi r19,0
 53481 17106 A901      		movw r20,r18
 53482 17108 688D      		ldd r22,Y+24
 53483 1710a 798D      		ldd r23,Y+25
 53484 1710c 8A8D      		ldd r24,Y+26
 53485 1710e 9B8D      		ldd r25,Y+27
 53486 17110 0E94 0000 		call __nesf2
 53487 17114 8823      		tst r24
 53488 17116 01F4      		brne .+2
 53489 17118 00C0      		rjmp .L2183
 53490               		.loc 2 5110 0 is_stmt 0 discriminator 1
 53491 1711a 888D      		ldd r24,Y+24
 53492 1711c 998D      		ldd r25,Y+25
 53493 1711e AA8D      		ldd r26,Y+26
 53494 17120 BB8D      		ldd r27,Y+27
 53495 17122 BF77      		andi r27,0x7f
 53496 17124 2985      		ldd r18,Y+9
 53497 17126 3A85      		ldd r19,Y+10
 53498 17128 265F      		subi r18,-10
 53499 1712a 3C4F      		sbci r19,-4
 53500 1712c F901      		movw r30,r18
 53501 1712e 2081      		ld r18,Z
 53502 17130 3181      		ldd r19,Z+1
 53503 17132 4281      		ldd r20,Z+2
 53504 17134 5381      		ldd r21,Z+3
 53505 17136 11E0      		ldi r17,lo8(1)
 53506 17138 BC01      		movw r22,r24
 53507 1713a CD01      		movw r24,r26
 53508 1713c 0E94 0000 		call __gesf2
 53509 17140 8823      		tst r24
 53510 17142 04F4      		brge .L2185
 53511 17144 10E0      		ldi r17,0
 53512               	.L2185:
 53513 17146 81E0      		ldi r24,lo8(1)
 53514 17148 8127      		eor r24,r17
 53515 1714a 8823      		tst r24
 53516 1714c 01F0      		breq .L2183
 53517               		.loc 2 5110 0 discriminator 2
 53518 1714e 8D81      		ldd r24,Y+5
 53519 17150 9E81      		ldd r25,Y+6
 53520 17152 AF81      		ldd r26,Y+7
 53521 17154 B885      		ldd r27,Y+8
 53522 17156 BF77      		andi r27,0x7f
 53523 17158 2985      		ldd r18,Y+9
 53524 1715a 3A85      		ldd r19,Y+10
 53525 1715c 265F      		subi r18,-10
 53526 1715e 3C4F      		sbci r19,-4
 53527 17160 F901      		movw r30,r18
 53528 17162 2081      		ld r18,Z
 53529 17164 3181      		ldd r19,Z+1
 53530 17166 4281      		ldd r20,Z+2
 53531 17168 5381      		ldd r21,Z+3
 53532 1716a 11E0      		ldi r17,lo8(1)
 53533 1716c BC01      		movw r22,r24
 53534 1716e CD01      		movw r24,r26
 53535 17170 0E94 0000 		call __gesf2
 53536 17174 8823      		tst r24
 53537 17176 04F4      		brge .L2186
 53538 17178 10E0      		ldi r17,0
 53539               	.L2186:
 53540 1717a 81E0      		ldi r24,lo8(1)
 53541 1717c 8127      		eor r24,r17
 53542 1717e 8823      		tst r24
 53543 17180 01F0      		breq .L2183
5111:lp_solve_5.5/lp_presolve.c ****         coeff_bu -= coeff_bl;
 53544               		.loc 2 5111 0 is_stmt 1
 53545 17182 288D      		ldd r18,Y+24
 53546 17184 398D      		ldd r19,Y+25
 53547 17186 4A8D      		ldd r20,Y+26
 53548 17188 5B8D      		ldd r21,Y+27
 53549 1718a 6D81      		ldd r22,Y+5
 53550 1718c 7E81      		ldd r23,Y+6
 53551 1718e 8F81      		ldd r24,Y+7
 53552 17190 9885      		ldd r25,Y+8
 53553 17192 0E94 0000 		call __subsf3
 53554 17196 DC01      		movw r26,r24
 53555 17198 CB01      		movw r24,r22
 53556 1719a 8D83      		std Y+5,r24
 53557 1719c 9E83      		std Y+6,r25
 53558 1719e AF83      		std Y+7,r26
 53559 171a0 B887      		std Y+8,r27
 53560               	.L2183:
5112:lp_solve_5.5/lp_presolve.c **** 
5113:lp_solve_5.5/lp_presolve.c ****       /* If the coefficient is negative, reduce the lower bound / increase range */
5114:lp_solve_5.5/lp_presolve.c ****       if(ValueA > 0) {
 53561               		.loc 2 5114 0
 53562 171a2 20E0      		ldi r18,0
 53563 171a4 30E0      		ldi r19,0
 53564 171a6 A901      		movw r20,r18
 53565 171a8 6D8D      		ldd r22,Y+29
 53566 171aa 7E8D      		ldd r23,Y+30
 53567 171ac 8F8D      		ldd r24,Y+31
 53568 171ae 98A1      		ldd r25,Y+32
 53569 171b0 0E94 0000 		call __gtsf2
 53570 171b4 1816      		cp __zero_reg__,r24
 53571 171b6 04F0      		brlt .+2
 53572 171b8 00C0      		rjmp .L2209
5115:lp_solve_5.5/lp_presolve.c ****         target = &lp->orig_upbo[i];
 53573               		.loc 2 5115 0
 53574 171ba 8985      		ldd r24,Y+9
 53575 171bc 9A85      		ldd r25,Y+10
 53576 171be 8255      		subi r24,82
 53577 171c0 9D4F      		sbci r25,-3
 53578 171c2 FC01      		movw r30,r24
 53579 171c4 2081      		ld r18,Z
 53580 171c6 3181      		ldd r19,Z+1
 53581 171c8 8B89      		ldd r24,Y+19
 53582 171ca 9C89      		ldd r25,Y+20
 53583 171cc 880F      		lsl r24
 53584 171ce 991F      		rol r25
 53585 171d0 880F      		lsl r24
 53586 171d2 991F      		rol r25
 53587 171d4 820F      		add r24,r18
 53588 171d6 931F      		adc r25,r19
 53589 171d8 9AA3      		std Y+34,r25
 53590 171da 89A3      		std Y+33,r24
5116:lp_solve_5.5/lp_presolve.c ****         if(!my_infinite(lp, *target)) {
 53591               		.loc 2 5116 0
 53592 171dc 89A1      		ldd r24,Y+33
 53593 171de 9AA1      		ldd r25,Y+34
 53594 171e0 FC01      		movw r30,r24
 53595 171e2 8081      		ld r24,Z
 53596 171e4 9181      		ldd r25,Z+1
 53597 171e6 A281      		ldd r26,Z+2
 53598 171e8 B381      		ldd r27,Z+3
 53599 171ea BF77      		andi r27,0x7f
 53600 171ec 2985      		ldd r18,Y+9
 53601 171ee 3A85      		ldd r19,Y+10
 53602 171f0 265F      		subi r18,-10
 53603 171f2 3C4F      		sbci r19,-4
 53604 171f4 F901      		movw r30,r18
 53605 171f6 2081      		ld r18,Z
 53606 171f8 3181      		ldd r19,Z+1
 53607 171fa 4281      		ldd r20,Z+2
 53608 171fc 5381      		ldd r21,Z+3
 53609 171fe 11E0      		ldi r17,lo8(1)
 53610 17200 BC01      		movw r22,r24
 53611 17202 CD01      		movw r24,r26
 53612 17204 0E94 0000 		call __gesf2
 53613 17208 8823      		tst r24
 53614 1720a 04F4      		brge .L2189
 53615 1720c 10E0      		ldi r17,0
 53616               	.L2189:
 53617 1720e 81E0      		ldi r24,lo8(1)
 53618 17210 8127      		eor r24,r17
 53619 17212 8823      		tst r24
 53620 17214 01F4      		brne .+2
 53621 17216 00C0      		rjmp .L2193
5117:lp_solve_5.5/lp_presolve.c ****           if(my_infinite(lp, coeff_bu)) {
 53622               		.loc 2 5117 0
 53623 17218 8D81      		ldd r24,Y+5
 53624 1721a 9E81      		ldd r25,Y+6
 53625 1721c AF81      		ldd r26,Y+7
 53626 1721e B885      		ldd r27,Y+8
 53627 17220 BF77      		andi r27,0x7f
 53628 17222 2985      		ldd r18,Y+9
 53629 17224 3A85      		ldd r19,Y+10
 53630 17226 265F      		subi r18,-10
 53631 17228 3C4F      		sbci r19,-4
 53632 1722a F901      		movw r30,r18
 53633 1722c 2081      		ld r18,Z
 53634 1722e 3181      		ldd r19,Z+1
 53635 17230 4281      		ldd r20,Z+2
 53636 17232 5381      		ldd r21,Z+3
 53637 17234 BC01      		movw r22,r24
 53638 17236 CD01      		movw r24,r26
 53639 17238 0E94 0000 		call __gesf2
 53640 1723c 8823      		tst r24
 53641 1723e 04F0      		brlt .L2210
5118:lp_solve_5.5/lp_presolve.c ****             *target = lp->infinite;
 53642               		.loc 2 5118 0
 53643 17240 8985      		ldd r24,Y+9
 53644 17242 9A85      		ldd r25,Y+10
 53645 17244 865F      		subi r24,-10
 53646 17246 9C4F      		sbci r25,-4
 53647 17248 FC01      		movw r30,r24
 53648 1724a 8081      		ld r24,Z
 53649 1724c 9181      		ldd r25,Z+1
 53650 1724e A281      		ldd r26,Z+2
 53651 17250 B381      		ldd r27,Z+3
 53652 17252 29A1      		ldd r18,Y+33
 53653 17254 3AA1      		ldd r19,Y+34
 53654 17256 F901      		movw r30,r18
 53655 17258 8083      		st Z,r24
 53656 1725a 9183      		std Z+1,r25
 53657 1725c A283      		std Z+2,r26
 53658 1725e B383      		std Z+3,r27
5119:lp_solve_5.5/lp_presolve.c ****             psdata->forceupdate = TRUE;
 53659               		.loc 2 5119 0
 53660 17260 8FA1      		ldd r24,Y+39
 53661 17262 98A5      		ldd r25,Y+40
 53662 17264 21E0      		ldi r18,lo8(1)
 53663 17266 FC01      		movw r30,r24
 53664 17268 24A3      		std Z+36,r18
 53665 1726a 00C0      		rjmp .L2193
 53666               	.L2210:
5120:lp_solve_5.5/lp_presolve.c ****           }
5121:lp_solve_5.5/lp_presolve.c ****           else {
5122:lp_solve_5.5/lp_presolve.c ****             *target += ValueA * coeff_bu;
 53667               		.loc 2 5122 0
 53668 1726c 89A1      		ldd r24,Y+33
 53669 1726e 9AA1      		ldd r25,Y+34
 53670 17270 FC01      		movw r30,r24
 53671 17272 C080      		ld r12,Z
 53672 17274 D180      		ldd r13,Z+1
 53673 17276 E280      		ldd r14,Z+2
 53674 17278 F380      		ldd r15,Z+3
 53675 1727a 2D81      		ldd r18,Y+5
 53676 1727c 3E81      		ldd r19,Y+6
 53677 1727e 4F81      		ldd r20,Y+7
 53678 17280 5885      		ldd r21,Y+8
 53679 17282 6D8D      		ldd r22,Y+29
 53680 17284 7E8D      		ldd r23,Y+30
 53681 17286 8F8D      		ldd r24,Y+31
 53682 17288 98A1      		ldd r25,Y+32
 53683 1728a 0E94 0000 		call __mulsf3
 53684 1728e DC01      		movw r26,r24
 53685 17290 CB01      		movw r24,r22
 53686 17292 9C01      		movw r18,r24
 53687 17294 AD01      		movw r20,r26
 53688 17296 C701      		movw r24,r14
 53689 17298 B601      		movw r22,r12
 53690 1729a 0E94 0000 		call __addsf3
 53691 1729e DC01      		movw r26,r24
 53692 172a0 CB01      		movw r24,r22
 53693 172a2 29A1      		ldd r18,Y+33
 53694 172a4 3AA1      		ldd r19,Y+34
 53695 172a6 F901      		movw r30,r18
 53696 172a8 8083      		st Z,r24
 53697 172aa 9183      		std Z+1,r25
 53698 172ac A283      		std Z+2,r26
 53699 172ae B383      		std Z+3,r27
5123:lp_solve_5.5/lp_presolve.c ****             *target = presolve_roundrhs(lp, *target, FALSE);
 53700               		.loc 2 5123 0
 53701 172b0 89A1      		ldd r24,Y+33
 53702 172b2 9AA1      		ldd r25,Y+34
 53703 172b4 FC01      		movw r30,r24
 53704 172b6 8081      		ld r24,Z
 53705 172b8 9181      		ldd r25,Z+1
 53706 172ba A281      		ldd r26,Z+2
 53707 172bc B381      		ldd r27,Z+3
 53708 172be E985      		ldd r30,Y+9
 53709 172c0 FA85      		ldd r31,Y+10
 53710 172c2 20E0      		ldi r18,0
 53711 172c4 AC01      		movw r20,r24
 53712 172c6 BD01      		movw r22,r26
 53713 172c8 CF01      		movw r24,r30
 53714 172ca 0E94 0000 		call presolve_roundrhs
 53715 172ce DC01      		movw r26,r24
 53716 172d0 CB01      		movw r24,r22
 53717 172d2 29A1      		ldd r18,Y+33
 53718 172d4 3AA1      		ldd r19,Y+34
 53719 172d6 F901      		movw r30,r18
 53720 172d8 8083      		st Z,r24
 53721 172da 9183      		std Z+1,r25
 53722 172dc A283      		std Z+2,r26
 53723 172de B383      		std Z+3,r27
 53724 172e0 00C0      		rjmp .L2193
 53725               	.L2209:
5124:lp_solve_5.5/lp_presolve.c ****           }
5125:lp_solve_5.5/lp_presolve.c ****         }
5126:lp_solve_5.5/lp_presolve.c ****       }
5127:lp_solve_5.5/lp_presolve.c ****       /* Otherwise see if the upper bound should be changed */
5128:lp_solve_5.5/lp_presolve.c ****       else {
5129:lp_solve_5.5/lp_presolve.c ****         target = &lp->orig_rhs[i];
 53726               		.loc 2 5129 0
 53727 172e2 8985      		ldd r24,Y+9
 53728 172e4 9A85      		ldd r25,Y+10
 53729 172e6 8A55      		subi r24,90
 53730 172e8 9D4F      		sbci r25,-3
 53731 172ea FC01      		movw r30,r24
 53732 172ec 2081      		ld r18,Z
 53733 172ee 3181      		ldd r19,Z+1
 53734 172f0 8B89      		ldd r24,Y+19
 53735 172f2 9C89      		ldd r25,Y+20
 53736 172f4 880F      		lsl r24
 53737 172f6 991F      		rol r25
 53738 172f8 880F      		lsl r24
 53739 172fa 991F      		rol r25
 53740 172fc 820F      		add r24,r18
 53741 172fe 931F      		adc r25,r19
 53742 17300 9AA3      		std Y+34,r25
 53743 17302 89A3      		std Y+33,r24
5130:lp_solve_5.5/lp_presolve.c ****         if(my_infinite(lp, coeff_bu) || my_infinite(lp, *target)) {
 53744               		.loc 2 5130 0
 53745 17304 8D81      		ldd r24,Y+5
 53746 17306 9E81      		ldd r25,Y+6
 53747 17308 AF81      		ldd r26,Y+7
 53748 1730a B885      		ldd r27,Y+8
 53749 1730c BF77      		andi r27,0x7f
 53750 1730e 2985      		ldd r18,Y+9
 53751 17310 3A85      		ldd r19,Y+10
 53752 17312 265F      		subi r18,-10
 53753 17314 3C4F      		sbci r19,-4
 53754 17316 F901      		movw r30,r18
 53755 17318 2081      		ld r18,Z
 53756 1731a 3181      		ldd r19,Z+1
 53757 1731c 4281      		ldd r20,Z+2
 53758 1731e 5381      		ldd r21,Z+3
 53759 17320 BC01      		movw r22,r24
 53760 17322 CD01      		movw r24,r26
 53761 17324 0E94 0000 		call __gesf2
 53762 17328 8823      		tst r24
 53763 1732a 04F4      		brge .L2194
 53764               		.loc 2 5130 0 is_stmt 0 discriminator 1
 53765 1732c 89A1      		ldd r24,Y+33
 53766 1732e 9AA1      		ldd r25,Y+34
 53767 17330 FC01      		movw r30,r24
 53768 17332 8081      		ld r24,Z
 53769 17334 9181      		ldd r25,Z+1
 53770 17336 A281      		ldd r26,Z+2
 53771 17338 B381      		ldd r27,Z+3
 53772 1733a BF77      		andi r27,0x7f
 53773 1733c 2985      		ldd r18,Y+9
 53774 1733e 3A85      		ldd r19,Y+10
 53775 17340 265F      		subi r18,-10
 53776 17342 3C4F      		sbci r19,-4
 53777 17344 F901      		movw r30,r18
 53778 17346 2081      		ld r18,Z
 53779 17348 3181      		ldd r19,Z+1
 53780 1734a 4281      		ldd r20,Z+2
 53781 1734c 5381      		ldd r21,Z+3
 53782 1734e BC01      		movw r22,r24
 53783 17350 CD01      		movw r24,r26
 53784 17352 0E94 0000 		call __gesf2
 53785 17356 8823      		tst r24
 53786 17358 04F4      		brge .+2
 53787 1735a 00C0      		rjmp .L2211
 53788               	.L2194:
5131:lp_solve_5.5/lp_presolve.c ****           /* Do we suddenly find that the constraint becomes redundant? (e226.mps) */
5132:lp_solve_5.5/lp_presolve.c ****           if(my_infinite(lp, lp->orig_upbo[i])) {
 53789               		.loc 2 5132 0 is_stmt 1
 53790 1735c 8985      		ldd r24,Y+9
 53791 1735e 9A85      		ldd r25,Y+10
 53792 17360 8255      		subi r24,82
 53793 17362 9D4F      		sbci r25,-3
 53794 17364 FC01      		movw r30,r24
 53795 17366 2081      		ld r18,Z
 53796 17368 3181      		ldd r19,Z+1
 53797 1736a 8B89      		ldd r24,Y+19
 53798 1736c 9C89      		ldd r25,Y+20
 53799 1736e 880F      		lsl r24
 53800 17370 991F      		rol r25
 53801 17372 880F      		lsl r24
 53802 17374 991F      		rol r25
 53803 17376 820F      		add r24,r18
 53804 17378 931F      		adc r25,r19
 53805 1737a FC01      		movw r30,r24
 53806 1737c 8081      		ld r24,Z
 53807 1737e 9181      		ldd r25,Z+1
 53808 17380 A281      		ldd r26,Z+2
 53809 17382 B381      		ldd r27,Z+3
 53810 17384 BF77      		andi r27,0x7f
 53811 17386 2985      		ldd r18,Y+9
 53812 17388 3A85      		ldd r19,Y+10
 53813 1738a 265F      		subi r18,-10
 53814 1738c 3C4F      		sbci r19,-4
 53815 1738e F901      		movw r30,r18
 53816 17390 2081      		ld r18,Z
 53817 17392 3181      		ldd r19,Z+1
 53818 17394 4281      		ldd r20,Z+2
 53819 17396 5381      		ldd r21,Z+3
 53820 17398 BC01      		movw r22,r24
 53821 1739a CD01      		movw r24,r26
 53822 1739c 0E94 0000 		call __gesf2
 53823 173a0 8823      		tst r24
 53824 173a2 04F0      		brlt .L2212
5133:lp_solve_5.5/lp_presolve.c ****             presolve_rowremove(psdata, i, TRUE);
 53825               		.loc 2 5133 0
 53826 173a4 2B89      		ldd r18,Y+19
 53827 173a6 3C89      		ldd r19,Y+20
 53828 173a8 8FA1      		ldd r24,Y+39
 53829 173aa 98A5      		ldd r25,Y+40
 53830 173ac 41E0      		ldi r20,lo8(1)
 53831 173ae B901      		movw r22,r18
 53832 173b0 0E94 0000 		call presolve_rowremove
5134:lp_solve_5.5/lp_presolve.c ****             iConRemove++;
 53833               		.loc 2 5134 0
 53834 173b4 8981      		ldd r24,Y+1
 53835 173b6 9A81      		ldd r25,Y+2
 53836 173b8 0196      		adiw r24,1
 53837 173ba 9A83      		std Y+2,r25
 53838 173bc 8983      		std Y+1,r24
5132:lp_solve_5.5/lp_presolve.c ****             presolve_rowremove(psdata, i, TRUE);
 53839               		.loc 2 5132 0
 53840 173be 00C0      		rjmp .L2193
 53841               	.L2212:
5135:lp_solve_5.5/lp_presolve.c ****           }
5136:lp_solve_5.5/lp_presolve.c ****           /* Or does the upper bound of a ranged constraint become Inf? */
5137:lp_solve_5.5/lp_presolve.c ****           else {
5138:lp_solve_5.5/lp_presolve.c ****             *target -= lp->orig_upbo[i];
 53842               		.loc 2 5138 0
 53843 173c0 89A1      		ldd r24,Y+33
 53844 173c2 9AA1      		ldd r25,Y+34
 53845 173c4 FC01      		movw r30,r24
 53846 173c6 8081      		ld r24,Z
 53847 173c8 9181      		ldd r25,Z+1
 53848 173ca A281      		ldd r26,Z+2
 53849 173cc B381      		ldd r27,Z+3
 53850 173ce 2985      		ldd r18,Y+9
 53851 173d0 3A85      		ldd r19,Y+10
 53852 173d2 2255      		subi r18,82
 53853 173d4 3D4F      		sbci r19,-3
 53854 173d6 F901      		movw r30,r18
 53855 173d8 4081      		ld r20,Z
 53856 173da 5181      		ldd r21,Z+1
 53857 173dc 2B89      		ldd r18,Y+19
 53858 173de 3C89      		ldd r19,Y+20
 53859 173e0 220F      		lsl r18
 53860 173e2 331F      		rol r19
 53861 173e4 220F      		lsl r18
 53862 173e6 331F      		rol r19
 53863 173e8 240F      		add r18,r20
 53864 173ea 351F      		adc r19,r21
 53865 173ec F901      		movw r30,r18
 53866 173ee 2081      		ld r18,Z
 53867 173f0 3181      		ldd r19,Z+1
 53868 173f2 4281      		ldd r20,Z+2
 53869 173f4 5381      		ldd r21,Z+3
 53870 173f6 BC01      		movw r22,r24
 53871 173f8 CD01      		movw r24,r26
 53872 173fa 0E94 0000 		call __subsf3
 53873 173fe DC01      		movw r26,r24
 53874 17400 CB01      		movw r24,r22
 53875 17402 29A1      		ldd r18,Y+33
 53876 17404 3AA1      		ldd r19,Y+34
 53877 17406 F901      		movw r30,r18
 53878 17408 8083      		st Z,r24
 53879 1740a 9183      		std Z+1,r25
 53880 1740c A283      		std Z+2,r26
 53881 1740e B383      		std Z+3,r27
5139:lp_solve_5.5/lp_presolve.c ****             *target = -(*target);
 53882               		.loc 2 5139 0
 53883 17410 89A1      		ldd r24,Y+33
 53884 17412 9AA1      		ldd r25,Y+34
 53885 17414 FC01      		movw r30,r24
 53886 17416 8081      		ld r24,Z
 53887 17418 9181      		ldd r25,Z+1
 53888 1741a A281      		ldd r26,Z+2
 53889 1741c B381      		ldd r27,Z+3
 53890 1741e B058      		subi r27,0x80
 53891 17420 29A1      		ldd r18,Y+33
 53892 17422 3AA1      		ldd r19,Y+34
 53893 17424 F901      		movw r30,r18
 53894 17426 8083      		st Z,r24
 53895 17428 9183      		std Z+1,r25
 53896 1742a A283      		std Z+2,r26
 53897 1742c B383      		std Z+3,r27
5140:lp_solve_5.5/lp_presolve.c ****             mat_multrow(mat, i, -1);
 53898               		.loc 2 5140 0
 53899 1742e 6B89      		ldd r22,Y+19
 53900 17430 7C89      		ldd r23,Y+20
 53901 17432 8989      		ldd r24,Y+17
 53902 17434 9A89      		ldd r25,Y+18
 53903 17436 20E0      		ldi r18,0
 53904 17438 30E0      		ldi r19,0
 53905 1743a 40E8      		ldi r20,lo8(-128)
 53906 1743c 5FEB      		ldi r21,lo8(-65)
 53907 1743e 0E94 0000 		call mat_multrow
5141:lp_solve_5.5/lp_presolve.c ****             lp->orig_upbo[i] = lp->infinite;
 53908               		.loc 2 5141 0
 53909 17442 8985      		ldd r24,Y+9
 53910 17444 9A85      		ldd r25,Y+10
 53911 17446 8255      		subi r24,82
 53912 17448 9D4F      		sbci r25,-3
 53913 1744a FC01      		movw r30,r24
 53914 1744c 2081      		ld r18,Z
 53915 1744e 3181      		ldd r19,Z+1
 53916 17450 8B89      		ldd r24,Y+19
 53917 17452 9C89      		ldd r25,Y+20
 53918 17454 880F      		lsl r24
 53919 17456 991F      		rol r25
 53920 17458 880F      		lsl r24
 53921 1745a 991F      		rol r25
 53922 1745c 280F      		add r18,r24
 53923 1745e 391F      		adc r19,r25
 53924 17460 8985      		ldd r24,Y+9
 53925 17462 9A85      		ldd r25,Y+10
 53926 17464 865F      		subi r24,-10
 53927 17466 9C4F      		sbci r25,-4
 53928 17468 FC01      		movw r30,r24
 53929 1746a 8081      		ld r24,Z
 53930 1746c 9181      		ldd r25,Z+1
 53931 1746e A281      		ldd r26,Z+2
 53932 17470 B381      		ldd r27,Z+3
 53933 17472 F901      		movw r30,r18
 53934 17474 8083      		st Z,r24
 53935 17476 9183      		std Z+1,r25
 53936 17478 A283      		std Z+2,r26
 53937 1747a B383      		std Z+3,r27
5142:lp_solve_5.5/lp_presolve.c ****             psdata->forceupdate = TRUE;
 53938               		.loc 2 5142 0
 53939 1747c 8FA1      		ldd r24,Y+39
 53940 1747e 98A5      		ldd r25,Y+40
 53941 17480 21E0      		ldi r18,lo8(1)
 53942 17482 FC01      		movw r30,r24
 53943 17484 24A3      		std Z+36,r18
5132:lp_solve_5.5/lp_presolve.c ****             presolve_rowremove(psdata, i, TRUE);
 53944               		.loc 2 5132 0
 53945 17486 00C0      		rjmp .L2193
 53946               	.L2211:
5143:lp_solve_5.5/lp_presolve.c ****           }
5144:lp_solve_5.5/lp_presolve.c ****         }
5145:lp_solve_5.5/lp_presolve.c ****         else {
5146:lp_solve_5.5/lp_presolve.c ****           *target -= ValueA * coeff_bu;
 53947               		.loc 2 5146 0
 53948 17488 89A1      		ldd r24,Y+33
 53949 1748a 9AA1      		ldd r25,Y+34
 53950 1748c FC01      		movw r30,r24
 53951 1748e C080      		ld r12,Z
 53952 17490 D180      		ldd r13,Z+1
 53953 17492 E280      		ldd r14,Z+2
 53954 17494 F380      		ldd r15,Z+3
 53955 17496 2D81      		ldd r18,Y+5
 53956 17498 3E81      		ldd r19,Y+6
 53957 1749a 4F81      		ldd r20,Y+7
 53958 1749c 5885      		ldd r21,Y+8
 53959 1749e 6D8D      		ldd r22,Y+29
 53960 174a0 7E8D      		ldd r23,Y+30
 53961 174a2 8F8D      		ldd r24,Y+31
 53962 174a4 98A1      		ldd r25,Y+32
 53963 174a6 0E94 0000 		call __mulsf3
 53964 174aa DC01      		movw r26,r24
 53965 174ac CB01      		movw r24,r22
 53966 174ae 9C01      		movw r18,r24
 53967 174b0 AD01      		movw r20,r26
 53968 174b2 C701      		movw r24,r14
 53969 174b4 B601      		movw r22,r12
 53970 174b6 0E94 0000 		call __subsf3
 53971 174ba DC01      		movw r26,r24
 53972 174bc CB01      		movw r24,r22
 53973 174be 29A1      		ldd r18,Y+33
 53974 174c0 3AA1      		ldd r19,Y+34
 53975 174c2 F901      		movw r30,r18
 53976 174c4 8083      		st Z,r24
 53977 174c6 9183      		std Z+1,r25
 53978 174c8 A283      		std Z+2,r26
 53979 174ca B383      		std Z+3,r27
5147:lp_solve_5.5/lp_presolve.c ****           *target = presolve_roundrhs(lp, *target, FALSE);
 53980               		.loc 2 5147 0
 53981 174cc 89A1      		ldd r24,Y+33
 53982 174ce 9AA1      		ldd r25,Y+34
 53983 174d0 FC01      		movw r30,r24
 53984 174d2 8081      		ld r24,Z
 53985 174d4 9181      		ldd r25,Z+1
 53986 174d6 A281      		ldd r26,Z+2
 53987 174d8 B381      		ldd r27,Z+3
 53988 174da E985      		ldd r30,Y+9
 53989 174dc FA85      		ldd r31,Y+10
 53990 174de 20E0      		ldi r18,0
 53991 174e0 AC01      		movw r20,r24
 53992 174e2 BD01      		movw r22,r26
 53993 174e4 CF01      		movw r24,r30
 53994 174e6 0E94 0000 		call presolve_roundrhs
 53995 174ea DC01      		movw r26,r24
 53996 174ec CB01      		movw r24,r22
 53997 174ee 29A1      		ldd r18,Y+33
 53998 174f0 3AA1      		ldd r19,Y+34
 53999 174f2 F901      		movw r30,r18
 54000 174f4 8083      		st Z,r24
 54001 174f6 9183      		std Z+1,r25
 54002 174f8 A283      		std Z+2,r26
 54003 174fa B383      		std Z+3,r27
 54004               	.L2193:
5148:lp_solve_5.5/lp_presolve.c ****         }
5149:lp_solve_5.5/lp_presolve.c ****       }
5150:lp_solve_5.5/lp_presolve.c ****       presolve_colfix(psdata, j, coeff_bl, TRUE, &iVarFixed);
 54005               		.loc 2 5150 0
 54006 174fc 9E01      		movw r18,r28
 54007 174fe 2D5D      		subi r18,-35
 54008 17500 3F4F      		sbci r19,-1
 54009 17502 888D      		ldd r24,Y+24
 54010 17504 998D      		ldd r25,Y+25
 54011 17506 AA8D      		ldd r26,Y+26
 54012 17508 BB8D      		ldd r27,Y+27
 54013 1750a 6B81      		ldd r22,Y+3
 54014 1750c 7C81      		ldd r23,Y+4
 54015 1750e EFA1      		ldd r30,Y+39
 54016 17510 F8A5      		ldd r31,Y+40
 54017 17512 7901      		movw r14,r18
 54018 17514 01E0      		ldi r16,lo8(1)
 54019 17516 9C01      		movw r18,r24
 54020 17518 AD01      		movw r20,r26
 54021 1751a CF01      		movw r24,r30
 54022 1751c 0E94 0000 		call presolve_colfix
5151:lp_solve_5.5/lp_presolve.c ****       report(lp, DETAILED, "presolve_freeandslacks: Eliminated duplicate slack variable %s via row 
 54023               		.loc 2 5151 0
 54024 17520 2B89      		ldd r18,Y+19
 54025 17522 3C89      		ldd r19,Y+20
 54026 17524 8985      		ldd r24,Y+9
 54027 17526 9A85      		ldd r25,Y+10
 54028 17528 B901      		movw r22,r18
 54029 1752a 0E94 0000 		call get_row_name
 54030 1752e 8C01      		movw r16,r24
 54031 17530 2B81      		ldd r18,Y+3
 54032 17532 3C81      		ldd r19,Y+4
 54033 17534 8985      		ldd r24,Y+9
 54034 17536 9A85      		ldd r25,Y+10
 54035 17538 B901      		movw r22,r18
 54036 1753a 0E94 0000 		call get_col_name
 54037 1753e 212F      		mov r18,r17
 54038 17540 2F93      		push r18
 54039 17542 202F      		mov r18,r16
 54040 17544 2F93      		push r18
 54041 17546 292F      		mov r18,r25
 54042 17548 2F93      		push r18
 54043 1754a 8F93      		push r24
 54044 1754c 80E0      		ldi r24,lo8(.LC67)
 54045 1754e 90E0      		ldi r25,hi8(.LC67)
 54046 17550 892F      		mov r24,r25
 54047 17552 8F93      		push r24
 54048 17554 80E0      		ldi r24,lo8(.LC67)
 54049 17556 90E0      		ldi r25,hi8(.LC67)
 54050 17558 8F93      		push r24
 54051 1755a 1F92      		push __zero_reg__
 54052 1755c 85E0      		ldi r24,lo8(5)
 54053 1755e 8F93      		push r24
 54054 17560 8A85      		ldd r24,Y+10
 54055 17562 8F93      		push r24
 54056 17564 8985      		ldd r24,Y+9
 54057 17566 8F93      		push r24
 54058 17568 0E94 0000 		call report
 54059 1756c 8DB7      		in r24,__SP_L__
 54060 1756e 9EB7      		in r25,__SP_H__
 54061 17570 0A96      		adiw r24,10
 54062 17572 0FB6      		in __tmp_reg__,__SREG__
 54063 17574 F894      		cli
 54064 17576 DEBF      		out __SP_H__,r29
 54065 17578 0FBE      		out __SREG__,__tmp_reg__
 54066 1757a CDBF      		out __SP_L__,r28
5152:lp_solve_5.5/lp_presolve.c ****                             get_col_name(lp, j), get_row_name(lp, i));
5153:lp_solve_5.5/lp_presolve.c ****       j = presolve_colremove(psdata, j, TRUE);
 54067               		.loc 2 5153 0
 54068 1757c 2B81      		ldd r18,Y+3
 54069 1757e 3C81      		ldd r19,Y+4
 54070 17580 8FA1      		ldd r24,Y+39
 54071 17582 98A5      		ldd r25,Y+40
 54072 17584 41E0      		ldi r20,lo8(1)
 54073 17586 B901      		movw r22,r18
 54074 17588 0E94 0000 		call presolve_colremove
 54075 1758c 9C83      		std Y+4,r25
 54076 1758e 8B83      		std Y+3,r24
 54077               	.LBE15:
5099:lp_solve_5.5/lp_presolve.c ****       REAL *target,
 54078               		.loc 2 5099 0
 54079 17590 00C0      		rjmp .L2171
 54080               	.L2180:
5154:lp_solve_5.5/lp_presolve.c ****     }
5155:lp_solve_5.5/lp_presolve.c **** 
5156:lp_solve_5.5/lp_presolve.c ****     /* Go to next column */
5157:lp_solve_5.5/lp_presolve.c ****     else
5158:lp_solve_5.5/lp_presolve.c ****       j = nextActiveLink(psdata->cols->varmap, j);
 54081               		.loc 2 5158 0
 54082 17592 8FA1      		ldd r24,Y+39
 54083 17594 98A5      		ldd r25,Y+40
 54084 17596 FC01      		movw r30,r24
 54085 17598 8281      		ldd r24,Z+2
 54086 1759a 9381      		ldd r25,Z+3
 54087 1759c FC01      		movw r30,r24
 54088 1759e 8081      		ld r24,Z
 54089 175a0 9181      		ldd r25,Z+1
 54090 175a2 2B81      		ldd r18,Y+3
 54091 175a4 3C81      		ldd r19,Y+4
 54092 175a6 B901      		movw r22,r18
 54093 175a8 0E94 0000 		call nextActiveLink
 54094 175ac 9C83      		std Y+4,r25
 54095 175ae 8B83      		std Y+3,r24
 54096               	.L2171:
5049:lp_solve_5.5/lp_presolve.c **** 
 54097               		.loc 2 5049 0 discriminator 1
 54098 175b0 8B81      		ldd r24,Y+3
 54099 175b2 9C81      		ldd r25,Y+4
 54100 175b4 892B      		or r24,r25
 54101 175b6 01F0      		breq .+2
 54102 175b8 00C0      		rjmp .L2200
 54103               	.L2170:
5159:lp_solve_5.5/lp_presolve.c ****   }
5160:lp_solve_5.5/lp_presolve.c **** 
5161:lp_solve_5.5/lp_presolve.c ****   (*nCoeffChanged) += iCoeffChanged;
 54104               		.loc 2 5161 0
 54105 175ba 89A5      		ldd r24,Y+41
 54106 175bc 9AA5      		ldd r25,Y+42
 54107 175be FC01      		movw r30,r24
 54108 175c0 2081      		ld r18,Z
 54109 175c2 3181      		ldd r19,Z+1
 54110 175c4 8D85      		ldd r24,Y+13
 54111 175c6 9E85      		ldd r25,Y+14
 54112 175c8 280F      		add r18,r24
 54113 175ca 391F      		adc r19,r25
 54114 175cc 89A5      		ldd r24,Y+41
 54115 175ce 9AA5      		ldd r25,Y+42
 54116 175d0 FC01      		movw r30,r24
 54117 175d2 3183      		std Z+1,r19
 54118 175d4 2083      		st Z,r18
5162:lp_solve_5.5/lp_presolve.c ****   (*nConRemove)    += iConRemove;
 54119               		.loc 2 5162 0
 54120 175d6 8BA5      		ldd r24,Y+43
 54121 175d8 9CA5      		ldd r25,Y+44
 54122 175da FC01      		movw r30,r24
 54123 175dc 2081      		ld r18,Z
 54124 175de 3181      		ldd r19,Z+1
 54125 175e0 8981      		ldd r24,Y+1
 54126 175e2 9A81      		ldd r25,Y+2
 54127 175e4 280F      		add r18,r24
 54128 175e6 391F      		adc r19,r25
 54129 175e8 8BA5      		ldd r24,Y+43
 54130 175ea 9CA5      		ldd r25,Y+44
 54131 175ec FC01      		movw r30,r24
 54132 175ee 3183      		std Z+1,r19
 54133 175f0 2083      		st Z,r18
5163:lp_solve_5.5/lp_presolve.c ****   (*nVarFixed)     += iVarFixed;
 54134               		.loc 2 5163 0
 54135 175f2 8DA5      		ldd r24,Y+45
 54136 175f4 9EA5      		ldd r25,Y+46
 54137 175f6 FC01      		movw r30,r24
 54138 175f8 2081      		ld r18,Z
 54139 175fa 3181      		ldd r19,Z+1
 54140 175fc 8BA1      		ldd r24,Y+35
 54141 175fe 9CA1      		ldd r25,Y+36
 54142 17600 280F      		add r18,r24
 54143 17602 391F      		adc r19,r25
 54144 17604 8DA5      		ldd r24,Y+45
 54145 17606 9EA5      		ldd r25,Y+46
 54146 17608 FC01      		movw r30,r24
 54147 1760a 3183      		std Z+1,r19
 54148 1760c 2083      		st Z,r18
5164:lp_solve_5.5/lp_presolve.c ****   (*nSum)          += iCoeffChanged+iConRemove+iVarFixed;
 54149               		.loc 2 5164 0
 54150 1760e 8FA5      		ldd r24,Y+47
 54151 17610 98A9      		ldd r25,Y+48
 54152 17612 FC01      		movw r30,r24
 54153 17614 2081      		ld r18,Z
 54154 17616 3181      		ldd r19,Z+1
 54155 17618 4D85      		ldd r20,Y+13
 54156 1761a 5E85      		ldd r21,Y+14
 54157 1761c 8981      		ldd r24,Y+1
 54158 1761e 9A81      		ldd r25,Y+2
 54159 17620 480F      		add r20,r24
 54160 17622 591F      		adc r21,r25
 54161 17624 8BA1      		ldd r24,Y+35
 54162 17626 9CA1      		ldd r25,Y+36
 54163 17628 840F      		add r24,r20
 54164 1762a 951F      		adc r25,r21
 54165 1762c 280F      		add r18,r24
 54166 1762e 391F      		adc r19,r25
 54167 17630 8FA5      		ldd r24,Y+47
 54168 17632 98A9      		ldd r25,Y+48
 54169 17634 FC01      		movw r30,r24
 54170 17636 3183      		std Z+1,r19
 54171 17638 2083      		st Z,r18
5165:lp_solve_5.5/lp_presolve.c **** 
5166:lp_solve_5.5/lp_presolve.c ****   return( status );
 54172               		.loc 2 5166 0
 54173 1763a 8F85      		ldd r24,Y+15
 54174 1763c 9889      		ldd r25,Y+16
 54175               	/* epilogue start */
5167:lp_solve_5.5/lp_presolve.c **** }
 54176               		.loc 2 5167 0
 54177 1763e E096      		adiw r28,48
 54178 17640 0FB6      		in __tmp_reg__,__SREG__
 54179 17642 F894      		cli
 54180 17644 DEBF      		out __SP_H__,r29
 54181 17646 0FBE      		out __SREG__,__tmp_reg__
 54182 17648 CDBF      		out __SP_L__,r28
 54183 1764a DF91      		pop r29
 54184 1764c CF91      		pop r28
 54185 1764e 1F91      		pop r17
 54186 17650 0F91      		pop r16
 54187 17652 FF90      		pop r15
 54188 17654 EF90      		pop r14
 54189 17656 DF90      		pop r13
 54190 17658 CF90      		pop r12
 54191 1765a 0895      		ret
 54192               		.cfi_endproc
 54193               	.LFE90:
 54195               		.section	.rodata
 54196               	.LC68:
 54197 0c05 7072 6573 		.string	"presolve_preparerows: Variable bound / constraint value infeasibility in row %s.\n"
 54197      6F6C 7665 
 54197      5F70 7265 
 54197      7061 7265 
 54197      726F 7773 
 54198               		.text
 54199               	.global	presolve_preparerows
 54201               	presolve_preparerows:
 54202               	.LFB91:
5168:lp_solve_5.5/lp_presolve.c **** 
5169:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_preparerows(presolverec *psdata, int *nBoundTighten, int *nSum)
5170:lp_solve_5.5/lp_presolve.c **** {
 54203               		.loc 2 5170 0
 54204               		.cfi_startproc
 54205 1765c EF92      		push r14
 54206               	.LCFI582:
 54207               		.cfi_def_cfa_offset 3
 54208               		.cfi_offset 14, -2
 54209 1765e FF92      		push r15
 54210               	.LCFI583:
 54211               		.cfi_def_cfa_offset 4
 54212               		.cfi_offset 15, -3
 54213 17660 0F93      		push r16
 54214               	.LCFI584:
 54215               		.cfi_def_cfa_offset 5
 54216               		.cfi_offset 16, -4
 54217 17662 1F93      		push r17
 54218               	.LCFI585:
 54219               		.cfi_def_cfa_offset 6
 54220               		.cfi_offset 17, -5
 54221 17664 CF93      		push r28
 54222               	.LCFI586:
 54223               		.cfi_def_cfa_offset 7
 54224               		.cfi_offset 28, -6
 54225 17666 DF93      		push r29
 54226               	.LCFI587:
 54227               		.cfi_def_cfa_offset 8
 54228               		.cfi_offset 29, -7
 54229 17668 CDB7      		in r28,__SP_L__
 54230 1766a DEB7      		in r29,__SP_H__
 54231               	.LCFI588:
 54232               		.cfi_def_cfa_register 28
 54233 1766c AA97      		sbiw r28,42
 54234               	.LCFI589:
 54235               		.cfi_def_cfa_offset 50
 54236 1766e 0FB6      		in __tmp_reg__,__SREG__
 54237 17670 F894      		cli
 54238 17672 DEBF      		out __SP_H__,r29
 54239 17674 0FBE      		out __SREG__,__tmp_reg__
 54240 17676 CDBF      		out __SP_L__,r28
 54241               	/* prologue: function */
 54242               	/* frame size = 42 */
 54243               	/* stack size = 48 */
 54244               	.L__stack_usage = 48
 54245 17678 9EA3      		std Y+38,r25
 54246 1767a 8DA3      		std Y+37,r24
 54247 1767c 78A7      		std Y+40,r23
 54248 1767e 6FA3      		std Y+39,r22
 54249 17680 5AA7      		std Y+42,r21
 54250 17682 49A7      		std Y+41,r20
5171:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 54251               		.loc 2 5171 0
 54252 17684 8DA1      		ldd r24,Y+37
 54253 17686 9EA1      		ldd r25,Y+38
 54254 17688 FC01      		movw r30,r24
 54255 1768a 8289      		ldd r24,Z+18
 54256 1768c 9389      		ldd r25,Z+19
 54257 1768e 9887      		std Y+8,r25
 54258 17690 8F83      		std Y+7,r24
5172:lp_solve_5.5/lp_presolve.c ****   MYBOOL   impliedfree = is_presolve(lp, PRESOLVE_IMPLIEDFREE),
 54259               		.loc 2 5172 0
 54260 17692 8F81      		ldd r24,Y+7
 54261 17694 9885      		ldd r25,Y+8
 54262 17696 60E0      		ldi r22,0
 54263 17698 72E0      		ldi r23,lo8(2)
 54264 1769a 0E94 0000 		call is_presolve
 54265 1769e 8987      		std Y+9,r24
5173:lp_solve_5.5/lp_presolve.c ****            tightenbounds  = is_presolve(lp, PRESOLVE_BOUNDS);
 54266               		.loc 2 5173 0
 54267 176a0 8F81      		ldd r24,Y+7
 54268 176a2 9885      		ldd r25,Y+8
 54269 176a4 60E0      		ldi r22,0
 54270 176a6 70E0      		ldi r23,0
 54271 176a8 0E94 0000 		call is_presolve
 54272 176ac 8A87      		std Y+10,r24
5174:lp_solve_5.5/lp_presolve.c ****   int      iRangeTighten = 0, iBoundTighten = 0, status = RUNNING, i, j;
 54273               		.loc 2 5174 0
 54274 176ae 1A82      		std Y+2,__zero_reg__
 54275 176b0 1982      		std Y+1,__zero_reg__
 54276 176b2 1C8E      		std Y+28,__zero_reg__
 54277 176b4 1B8E      		std Y+27,__zero_reg__
 54278 176b6 88E0      		ldi r24,lo8(8)
 54279 176b8 90E0      		ldi r25,0
 54280 176ba 9C83      		std Y+4,r25
 54281 176bc 8B83      		std Y+3,r24
5175:lp_solve_5.5/lp_presolve.c ****   REAL     losum, upsum, lorhs, uprhs, epsvalue = psdata->epsvalue;
 54282               		.loc 2 5175 0
 54283 176be 8DA1      		ldd r24,Y+37
 54284 176c0 9EA1      		ldd r25,Y+38
 54285 176c2 FC01      		movw r30,r24
 54286 176c4 8489      		ldd r24,Z+20
 54287 176c6 9589      		ldd r25,Z+21
 54288 176c8 A689      		ldd r26,Z+22
 54289 176ca B789      		ldd r27,Z+23
 54290 176cc 8B87      		std Y+11,r24
 54291 176ce 9C87      		std Y+12,r25
 54292 176d0 AD87      		std Y+13,r26
 54293 176d2 BE87      		std Y+14,r27
5176:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 54294               		.loc 2 5176 0
 54295 176d4 8F81      		ldd r24,Y+7
 54296 176d6 9885      		ldd r25,Y+8
 54297 176d8 8A54      		subi r24,74
 54298 176da 9D4F      		sbci r25,-3
 54299 176dc FC01      		movw r30,r24
 54300 176de 8081      		ld r24,Z
 54301 176e0 9181      		ldd r25,Z+1
 54302 176e2 988B      		std Y+16,r25
 54303 176e4 8F87      		std Y+15,r24
5177:lp_solve_5.5/lp_presolve.c **** 
5178:lp_solve_5.5/lp_presolve.c ****   for(i = lastActiveLink(psdata->rows->varmap); i > 0; i = prevActiveLink(psdata->rows->varmap, i))
 54304               		.loc 2 5178 0
 54305 176e6 8DA1      		ldd r24,Y+37
 54306 176e8 9EA1      		ldd r25,Y+38
 54307 176ea FC01      		movw r30,r24
 54308 176ec 8081      		ld r24,Z
 54309 176ee 9181      		ldd r25,Z+1
 54310 176f0 FC01      		movw r30,r24
 54311 176f2 8081      		ld r24,Z
 54312 176f4 9181      		ldd r25,Z+1
 54313 176f6 0E94 0000 		call lastActiveLink
 54314 176fa 9E83      		std Y+6,r25
 54315 176fc 8D83      		std Y+5,r24
 54316 176fe 00C0      		rjmp .L2214
 54317               	.L2233:
5179:lp_solve_5.5/lp_presolve.c **** 
5180:lp_solve_5.5/lp_presolve.c ****    /* First identify any full row infeasibilities */
5181:lp_solve_5.5/lp_presolve.c ****     j = presolve_rowlengthex(psdata, i);
 54318               		.loc 2 5181 0
 54319 17700 2D81      		ldd r18,Y+5
 54320 17702 3E81      		ldd r19,Y+6
 54321 17704 8DA1      		ldd r24,Y+37
 54322 17706 9EA1      		ldd r25,Y+38
 54323 17708 B901      		movw r22,r18
 54324 1770a 0E94 0000 		call presolve_rowlengthex
 54325 1770e 9A8B      		std Y+18,r25
 54326 17710 898B      		std Y+17,r24
5182:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
5183:lp_solve_5.5/lp_presolve.c ****     if(!presolve_testrow(psdata, nextActiveLink(psdata->rows->varmap, i))) {
5184:lp_solve_5.5/lp_presolve.c **** #else
5185:lp_solve_5.5/lp_presolve.c ****     if((j > 1) && !psdata->forceupdate && !presolve_rowfeasible(psdata, i, FALSE)) {
 54327               		.loc 2 5185 0
 54328 17712 8989      		ldd r24,Y+17
 54329 17714 9A89      		ldd r25,Y+18
 54330 17716 0297      		sbiw r24,2
 54331 17718 04F0      		brlt .L2215
 54332               		.loc 2 5185 0 is_stmt 0 discriminator 1
 54333 1771a 8DA1      		ldd r24,Y+37
 54334 1771c 9EA1      		ldd r25,Y+38
 54335 1771e FC01      		movw r30,r24
 54336 17720 84A1      		ldd r24,Z+36
 54337 17722 8823      		tst r24
 54338 17724 01F4      		brne .L2215
 54339               		.loc 2 5185 0 discriminator 2
 54340 17726 2D81      		ldd r18,Y+5
 54341 17728 3E81      		ldd r19,Y+6
 54342 1772a 8DA1      		ldd r24,Y+37
 54343 1772c 9EA1      		ldd r25,Y+38
 54344 1772e 40E0      		ldi r20,0
 54345 17730 B901      		movw r22,r18
 54346 17732 0E94 0000 		call presolve_rowfeasible
 54347 17736 8823      		tst r24
 54348 17738 01F4      		brne .L2215
5186:lp_solve_5.5/lp_presolve.c **** #endif
5187:lp_solve_5.5/lp_presolve.c ****       status = presolve_setstatus(psdata, INFEASIBLE);
 54349               		.loc 2 5187 0 is_stmt 1
 54350 1773a 8DA1      		ldd r24,Y+37
 54351 1773c 9EA1      		ldd r25,Y+38
 54352 1773e 20E0      		ldi r18,lo8(.LC21)
 54353 17740 30E0      		ldi r19,hi8(.LC21)
 54354 17742 43E4      		ldi r20,lo8(67)
 54355 17744 54E1      		ldi r21,lo8(20)
 54356 17746 62E0      		ldi r22,lo8(2)
 54357 17748 70E0      		ldi r23,0
 54358 1774a 0E94 0000 		call presolve_setstatusex
 54359 1774e 9C83      		std Y+4,r25
 54360 17750 8B83      		std Y+3,r24
5188:lp_solve_5.5/lp_presolve.c ****       break;
 54361               		.loc 2 5188 0
 54362 17752 00C0      		rjmp .L2216
 54363               	.L2215:
5189:lp_solve_5.5/lp_presolve.c ****     }
5190:lp_solve_5.5/lp_presolve.c **** 
5191:lp_solve_5.5/lp_presolve.c ****     /* Do bound (LHS) or constraint range (RHS) tightening if we will later identify
5192:lp_solve_5.5/lp_presolve.c ****       implied free variables (tends to produce degeneracy otherwise) */
5193:lp_solve_5.5/lp_presolve.c ****     if(impliedfree && (j > 1) && mat_validate(mat)){
 54364               		.loc 2 5193 0
 54365 17754 8985      		ldd r24,Y+9
 54366 17756 8823      		tst r24
 54367 17758 01F4      		brne .+2
 54368 1775a 00C0      		rjmp .L2217
 54369               		.loc 2 5193 0 is_stmt 0 discriminator 1
 54370 1775c 8989      		ldd r24,Y+17
 54371 1775e 9A89      		ldd r25,Y+18
 54372 17760 0297      		sbiw r24,2
 54373 17762 04F4      		brge .+2
 54374 17764 00C0      		rjmp .L2217
 54375               		.loc 2 5193 0 discriminator 2
 54376 17766 8F85      		ldd r24,Y+15
 54377 17768 9889      		ldd r25,Y+16
 54378 1776a 0E94 0000 		call mat_validate
 54379 1776e 8823      		tst r24
 54380 17770 01F4      		brne .+2
 54381 17772 00C0      		rjmp .L2217
5194:lp_solve_5.5/lp_presolve.c **** 
5195:lp_solve_5.5/lp_presolve.c ****       /* Look for opportunity to tighten constraint bounds (and check for feasibility again) */
5196:lp_solve_5.5/lp_presolve.c ****       presolve_range(lp, i, psdata->rows, &losum, &upsum);
 54382               		.loc 2 5196 0 is_stmt 1
 54383 17774 8DA1      		ldd r24,Y+37
 54384 17776 9EA1      		ldd r25,Y+38
 54385 17778 FC01      		movw r30,r24
 54386 1777a 4081      		ld r20,Z
 54387 1777c 5181      		ldd r21,Z+1
 54388 1777e FE01      		movw r30,r28
 54389 17780 B196      		adiw r30,33
 54390 17782 9E01      		movw r18,r28
 54391 17784 235E      		subi r18,-29
 54392 17786 3F4F      		sbci r19,-1
 54393 17788 6D81      		ldd r22,Y+5
 54394 1778a 7E81      		ldd r23,Y+6
 54395 1778c 8F81      		ldd r24,Y+7
 54396 1778e 9885      		ldd r25,Y+8
 54397 17790 8F01      		movw r16,r30
 54398 17792 0E94 0000 		call presolve_range
5197:lp_solve_5.5/lp_presolve.c ****       lorhs = get_rh_lower(lp, i);
 54399               		.loc 2 5197 0
 54400 17796 2D81      		ldd r18,Y+5
 54401 17798 3E81      		ldd r19,Y+6
 54402 1779a 8F81      		ldd r24,Y+7
 54403 1779c 9885      		ldd r25,Y+8
 54404 1779e B901      		movw r22,r18
 54405 177a0 0E94 0000 		call get_rh_lower
 54406 177a4 DC01      		movw r26,r24
 54407 177a6 CB01      		movw r24,r22
 54408 177a8 8B8B      		std Y+19,r24
 54409 177aa 9C8B      		std Y+20,r25
 54410 177ac AD8B      		std Y+21,r26
 54411 177ae BE8B      		std Y+22,r27
5198:lp_solve_5.5/lp_presolve.c ****       uprhs = get_rh_upper(lp, i);
 54412               		.loc 2 5198 0
 54413 177b0 2D81      		ldd r18,Y+5
 54414 177b2 3E81      		ldd r19,Y+6
 54415 177b4 8F81      		ldd r24,Y+7
 54416 177b6 9885      		ldd r25,Y+8
 54417 177b8 B901      		movw r22,r18
 54418 177ba 0E94 0000 		call get_rh_upper
 54419 177be DC01      		movw r26,r24
 54420 177c0 CB01      		movw r24,r22
 54421 177c2 8F8B      		std Y+23,r24
 54422 177c4 988F      		std Y+24,r25
 54423 177c6 A98F      		std Y+25,r26
 54424 177c8 BA8F      		std Y+26,r27
5199:lp_solve_5.5/lp_presolve.c ****       if((losum > MIN(upsum, uprhs)+epsvalue) ||
 54425               		.loc 2 5199 0
 54426 177ca 89A1      		ldd r24,Y+33
 54427 177cc 9AA1      		ldd r25,Y+34
 54428 177ce ABA1      		ldd r26,Y+35
 54429 177d0 BCA1      		ldd r27,Y+36
 54430 177d2 2F89      		ldd r18,Y+23
 54431 177d4 388D      		ldd r19,Y+24
 54432 177d6 498D      		ldd r20,Y+25
 54433 177d8 5A8D      		ldd r21,Y+26
 54434 177da BC01      		movw r22,r24
 54435 177dc CD01      		movw r24,r26
 54436 177de 0E94 0000 		call __ltsf2
 54437 177e2 8823      		tst r24
 54438 177e4 04F4      		brge .L2241
 54439               		.loc 2 5199 0 is_stmt 0 discriminator 1
 54440 177e6 89A1      		ldd r24,Y+33
 54441 177e8 9AA1      		ldd r25,Y+34
 54442 177ea ABA1      		ldd r26,Y+35
 54443 177ec BCA1      		ldd r27,Y+36
 54444 177ee 00C0      		rjmp .L2220
 54445               	.L2241:
 54446               		.loc 2 5199 0 discriminator 2
 54447 177f0 8F89      		ldd r24,Y+23
 54448 177f2 988D      		ldd r25,Y+24
 54449 177f4 A98D      		ldd r26,Y+25
 54450 177f6 BA8D      		ldd r27,Y+26
 54451               	.L2220:
 54452               		.loc 2 5199 0 discriminator 4
 54453 177f8 2B85      		ldd r18,Y+11
 54454 177fa 3C85      		ldd r19,Y+12
 54455 177fc 4D85      		ldd r20,Y+13
 54456 177fe 5E85      		ldd r21,Y+14
 54457 17800 BC01      		movw r22,r24
 54458 17802 CD01      		movw r24,r26
 54459 17804 0E94 0000 		call __addsf3
 54460 17808 DC01      		movw r26,r24
 54461 1780a CB01      		movw r24,r22
 54462 1780c 7C01      		movw r14,r24
 54463 1780e 8D01      		movw r16,r26
 54464 17810 8D8D      		ldd r24,Y+29
 54465 17812 9E8D      		ldd r25,Y+30
 54466 17814 AF8D      		ldd r26,Y+31
 54467 17816 B8A1      		ldd r27,Y+32
 54468 17818 9C01      		movw r18,r24
 54469 1781a AD01      		movw r20,r26
 54470 1781c C801      		movw r24,r16
 54471 1781e B701      		movw r22,r14
 54472 17820 0E94 0000 		call __ltsf2
 54473 17824 8823      		tst r24
 54474 17826 04F0      		brlt .L2221
5200:lp_solve_5.5/lp_presolve.c ****          (upsum < MAX(losum, lorhs)-epsvalue)) {
 54475               		.loc 2 5200 0 is_stmt 1
 54476 17828 8D8D      		ldd r24,Y+29
 54477 1782a 9E8D      		ldd r25,Y+30
 54478 1782c AF8D      		ldd r26,Y+31
 54479 1782e B8A1      		ldd r27,Y+32
 54480 17830 2B89      		ldd r18,Y+19
 54481 17832 3C89      		ldd r19,Y+20
 54482 17834 4D89      		ldd r20,Y+21
 54483 17836 5E89      		ldd r21,Y+22
 54484 17838 BC01      		movw r22,r24
 54485 1783a CD01      		movw r24,r26
 54486 1783c 0E94 0000 		call __gtsf2
 54487 17840 1816      		cp __zero_reg__,r24
 54488 17842 04F4      		brge .L2242
 54489               		.loc 2 5200 0 is_stmt 0 discriminator 1
 54490 17844 8D8D      		ldd r24,Y+29
 54491 17846 9E8D      		ldd r25,Y+30
 54492 17848 AF8D      		ldd r26,Y+31
 54493 1784a B8A1      		ldd r27,Y+32
 54494 1784c 00C0      		rjmp .L2224
 54495               	.L2242:
 54496               		.loc 2 5200 0 discriminator 2
 54497 1784e 8B89      		ldd r24,Y+19
 54498 17850 9C89      		ldd r25,Y+20
 54499 17852 AD89      		ldd r26,Y+21
 54500 17854 BE89      		ldd r27,Y+22
 54501               	.L2224:
 54502               		.loc 2 5200 0 discriminator 4
 54503 17856 2B85      		ldd r18,Y+11
 54504 17858 3C85      		ldd r19,Y+12
 54505 1785a 4D85      		ldd r20,Y+13
 54506 1785c 5E85      		ldd r21,Y+14
 54507 1785e BC01      		movw r22,r24
 54508 17860 CD01      		movw r24,r26
 54509 17862 0E94 0000 		call __subsf3
 54510 17866 DC01      		movw r26,r24
 54511 17868 CB01      		movw r24,r22
 54512 1786a 7C01      		movw r14,r24
 54513 1786c 8D01      		movw r16,r26
 54514 1786e 89A1      		ldd r24,Y+33
 54515 17870 9AA1      		ldd r25,Y+34
 54516 17872 ABA1      		ldd r26,Y+35
 54517 17874 BCA1      		ldd r27,Y+36
5199:lp_solve_5.5/lp_presolve.c ****       if((losum > MIN(upsum, uprhs)+epsvalue) ||
 54518               		.loc 2 5199 0 is_stmt 1 discriminator 4
 54519 17876 9C01      		movw r18,r24
 54520 17878 AD01      		movw r20,r26
 54521 1787a C801      		movw r24,r16
 54522 1787c B701      		movw r22,r14
 54523 1787e 0E94 0000 		call __gtsf2
 54524 17882 1816      		cp __zero_reg__,r24
 54525 17884 04F4      		brge .L2243
 54526               	.L2221:
5201:lp_solve_5.5/lp_presolve.c ****         report(lp, NORMAL, "presolve_preparerows: Variable bound / constraint value infeasibility i
 54527               		.loc 2 5201 0
 54528 17886 2D81      		ldd r18,Y+5
 54529 17888 3E81      		ldd r19,Y+6
 54530 1788a 8F81      		ldd r24,Y+7
 54531 1788c 9885      		ldd r25,Y+8
 54532 1788e B901      		movw r22,r18
 54533 17890 0E94 0000 		call get_row_name
 54534 17894 292F      		mov r18,r25
 54535 17896 2F93      		push r18
 54536 17898 8F93      		push r24
 54537 1789a 80E0      		ldi r24,lo8(.LC68)
 54538 1789c 90E0      		ldi r25,hi8(.LC68)
 54539 1789e 892F      		mov r24,r25
 54540 178a0 8F93      		push r24
 54541 178a2 80E0      		ldi r24,lo8(.LC68)
 54542 178a4 90E0      		ldi r25,hi8(.LC68)
 54543 178a6 8F93      		push r24
 54544 178a8 1F92      		push __zero_reg__
 54545 178aa 84E0      		ldi r24,lo8(4)
 54546 178ac 8F93      		push r24
 54547 178ae 8885      		ldd r24,Y+8
 54548 178b0 8F93      		push r24
 54549 178b2 8F81      		ldd r24,Y+7
 54550 178b4 8F93      		push r24
 54551 178b6 0E94 0000 		call report
 54552 178ba 8DB7      		in r24,__SP_L__
 54553 178bc 9EB7      		in r25,__SP_H__
 54554 178be 0896      		adiw r24,8
 54555 178c0 0FB6      		in __tmp_reg__,__SREG__
 54556 178c2 F894      		cli
 54557 178c4 DEBF      		out __SP_H__,r29
 54558 178c6 0FBE      		out __SREG__,__tmp_reg__
 54559 178c8 CDBF      		out __SP_L__,r28
5202:lp_solve_5.5/lp_presolve.c ****                            get_row_name(lp, i));
5203:lp_solve_5.5/lp_presolve.c ****         status = presolve_setstatus(psdata, INFEASIBLE);
 54560               		.loc 2 5203 0
 54561 178ca 8DA1      		ldd r24,Y+37
 54562 178cc 9EA1      		ldd r25,Y+38
 54563 178ce 20E0      		ldi r18,lo8(.LC21)
 54564 178d0 30E0      		ldi r19,hi8(.LC21)
 54565 178d2 43E5      		ldi r20,lo8(83)
 54566 178d4 54E1      		ldi r21,lo8(20)
 54567 178d6 62E0      		ldi r22,lo8(2)
 54568 178d8 70E0      		ldi r23,0
 54569 178da 0E94 0000 		call presolve_setstatusex
 54570 178de 9C83      		std Y+4,r25
 54571 178e0 8B83      		std Y+3,r24
5204:lp_solve_5.5/lp_presolve.c ****         break;
 54572               		.loc 2 5204 0
 54573 178e2 00C0      		rjmp .L2216
 54574               	.L2243:
5205:lp_solve_5.5/lp_presolve.c ****       }
5206:lp_solve_5.5/lp_presolve.c **** 
5207:lp_solve_5.5/lp_presolve.c ****       if(losum > lorhs+epsvalue) {
 54575               		.loc 2 5207 0
 54576 178e4 2B85      		ldd r18,Y+11
 54577 178e6 3C85      		ldd r19,Y+12
 54578 178e8 4D85      		ldd r20,Y+13
 54579 178ea 5E85      		ldd r21,Y+14
 54580 178ec 6B89      		ldd r22,Y+19
 54581 178ee 7C89      		ldd r23,Y+20
 54582 178f0 8D89      		ldd r24,Y+21
 54583 178f2 9E89      		ldd r25,Y+22
 54584 178f4 0E94 0000 		call __addsf3
 54585 178f8 DC01      		movw r26,r24
 54586 178fa CB01      		movw r24,r22
 54587 178fc 7C01      		movw r14,r24
 54588 178fe 8D01      		movw r16,r26
 54589 17900 8D8D      		ldd r24,Y+29
 54590 17902 9E8D      		ldd r25,Y+30
 54591 17904 AF8D      		ldd r26,Y+31
 54592 17906 B8A1      		ldd r27,Y+32
 54593 17908 9C01      		movw r18,r24
 54594 1790a AD01      		movw r20,r26
 54595 1790c C801      		movw r24,r16
 54596 1790e B701      		movw r22,r14
 54597 17910 0E94 0000 		call __ltsf2
 54598 17914 8823      		tst r24
 54599 17916 04F4      		brge .L2227
5208:lp_solve_5.5/lp_presolve.c ****         set_rh_lower(lp, i, presolve_roundrhs(lp, losum, TRUE));
 54600               		.loc 2 5208 0
 54601 17918 8D8D      		ldd r24,Y+29
 54602 1791a 9E8D      		ldd r25,Y+30
 54603 1791c AF8D      		ldd r26,Y+31
 54604 1791e B8A1      		ldd r27,Y+32
 54605 17920 EF81      		ldd r30,Y+7
 54606 17922 F885      		ldd r31,Y+8
 54607 17924 21E0      		ldi r18,lo8(1)
 54608 17926 AC01      		movw r20,r24
 54609 17928 BD01      		movw r22,r26
 54610 1792a CF01      		movw r24,r30
 54611 1792c 0E94 0000 		call presolve_roundrhs
 54612 17930 9B01      		movw r18,r22
 54613 17932 AC01      		movw r20,r24
 54614 17934 6D81      		ldd r22,Y+5
 54615 17936 7E81      		ldd r23,Y+6
 54616 17938 8F81      		ldd r24,Y+7
 54617 1793a 9885      		ldd r25,Y+8
 54618 1793c 0E94 0000 		call set_rh_lower
5209:lp_solve_5.5/lp_presolve.c ****         iRangeTighten++;
 54619               		.loc 2 5209 0
 54620 17940 8981      		ldd r24,Y+1
 54621 17942 9A81      		ldd r25,Y+2
 54622 17944 0196      		adiw r24,1
 54623 17946 9A83      		std Y+2,r25
 54624 17948 8983      		std Y+1,r24
 54625               	.L2227:
5210:lp_solve_5.5/lp_presolve.c ****       }
5211:lp_solve_5.5/lp_presolve.c ****       if(upsum < uprhs-epsvalue) {
 54626               		.loc 2 5211 0
 54627 1794a 2B85      		ldd r18,Y+11
 54628 1794c 3C85      		ldd r19,Y+12
 54629 1794e 4D85      		ldd r20,Y+13
 54630 17950 5E85      		ldd r21,Y+14
 54631 17952 6F89      		ldd r22,Y+23
 54632 17954 788D      		ldd r23,Y+24
 54633 17956 898D      		ldd r24,Y+25
 54634 17958 9A8D      		ldd r25,Y+26
 54635 1795a 0E94 0000 		call __subsf3
 54636 1795e DC01      		movw r26,r24
 54637 17960 CB01      		movw r24,r22
 54638 17962 7C01      		movw r14,r24
 54639 17964 8D01      		movw r16,r26
 54640 17966 89A1      		ldd r24,Y+33
 54641 17968 9AA1      		ldd r25,Y+34
 54642 1796a ABA1      		ldd r26,Y+35
 54643 1796c BCA1      		ldd r27,Y+36
 54644 1796e 9C01      		movw r18,r24
 54645 17970 AD01      		movw r20,r26
 54646 17972 C801      		movw r24,r16
 54647 17974 B701      		movw r22,r14
 54648 17976 0E94 0000 		call __gtsf2
 54649 1797a 1816      		cp __zero_reg__,r24
 54650 1797c 04F4      		brge .L2217
5212:lp_solve_5.5/lp_presolve.c ****         set_rh_upper(lp, i, presolve_roundrhs(lp, upsum, FALSE));
 54651               		.loc 2 5212 0
 54652 1797e 89A1      		ldd r24,Y+33
 54653 17980 9AA1      		ldd r25,Y+34
 54654 17982 ABA1      		ldd r26,Y+35
 54655 17984 BCA1      		ldd r27,Y+36
 54656 17986 EF81      		ldd r30,Y+7
 54657 17988 F885      		ldd r31,Y+8
 54658 1798a 20E0      		ldi r18,0
 54659 1798c AC01      		movw r20,r24
 54660 1798e BD01      		movw r22,r26
 54661 17990 CF01      		movw r24,r30
 54662 17992 0E94 0000 		call presolve_roundrhs
 54663 17996 9B01      		movw r18,r22
 54664 17998 AC01      		movw r20,r24
 54665 1799a 6D81      		ldd r22,Y+5
 54666 1799c 7E81      		ldd r23,Y+6
 54667 1799e 8F81      		ldd r24,Y+7
 54668 179a0 9885      		ldd r25,Y+8
 54669 179a2 0E94 0000 		call set_rh_upper
5213:lp_solve_5.5/lp_presolve.c ****         iRangeTighten++;
 54670               		.loc 2 5213 0
 54671 179a6 8981      		ldd r24,Y+1
 54672 179a8 9A81      		ldd r25,Y+2
 54673 179aa 0196      		adiw r24,1
 54674 179ac 9A83      		std Y+2,r25
 54675 179ae 8983      		std Y+1,r24
 54676               	.L2217:
5214:lp_solve_5.5/lp_presolve.c ****       }
5215:lp_solve_5.5/lp_presolve.c ****     }
5216:lp_solve_5.5/lp_presolve.c **** 
5217:lp_solve_5.5/lp_presolve.c ****     /* Seek to tighten bounds on individual variables */
5218:lp_solve_5.5/lp_presolve.c ****     if(tightenbounds && mat_validate(mat)) {
 54677               		.loc 2 5218 0
 54678 179b0 8A85      		ldd r24,Y+10
 54679 179b2 8823      		tst r24
 54680 179b4 01F0      		breq .L2230
 54681               		.loc 2 5218 0 is_stmt 0 discriminator 1
 54682 179b6 8F85      		ldd r24,Y+15
 54683 179b8 9889      		ldd r25,Y+16
 54684 179ba 0E94 0000 		call mat_validate
 54685 179be 8823      		tst r24
 54686 179c0 01F0      		breq .L2230
5219:lp_solve_5.5/lp_presolve.c **** #if 1
5220:lp_solve_5.5/lp_presolve.c ****       if(j > 1)
 54687               		.loc 2 5220 0 is_stmt 1
 54688 179c2 8989      		ldd r24,Y+17
 54689 179c4 9A89      		ldd r25,Y+18
 54690 179c6 0297      		sbiw r24,2
 54691 179c8 04F0      		brlt .L2230
5221:lp_solve_5.5/lp_presolve.c ****         status = presolve_rowtighten(psdata, i, &iBoundTighten, FALSE);
 54692               		.loc 2 5221 0
 54693 179ca AE01      		movw r20,r28
 54694 179cc 455E      		subi r20,-27
 54695 179ce 5F4F      		sbci r21,-1
 54696 179d0 6D81      		ldd r22,Y+5
 54697 179d2 7E81      		ldd r23,Y+6
 54698 179d4 8DA1      		ldd r24,Y+37
 54699 179d6 9EA1      		ldd r25,Y+38
 54700 179d8 20E0      		ldi r18,0
 54701 179da 0E94 0000 		call presolve_rowtighten
 54702 179de 9C83      		std Y+4,r25
 54703 179e0 8B83      		std Y+3,r24
 54704               	.L2230:
5222:lp_solve_5.5/lp_presolve.c **** #else
5223:lp_solve_5.5/lp_presolve.c ****       if((MIP_count(lp) > 0) && (j > 1))
5224:lp_solve_5.5/lp_presolve.c ****         status = presolve_rowtighten(psdata, i, &iBoundTighten, TRUE);
5225:lp_solve_5.5/lp_presolve.c **** #endif
5226:lp_solve_5.5/lp_presolve.c ****     }
5227:lp_solve_5.5/lp_presolve.c **** 
5228:lp_solve_5.5/lp_presolve.c ****     /* Look for opportunity to convert ranged constraint to equality-type */
5229:lp_solve_5.5/lp_presolve.c ****     if(!is_constr_type(lp, i, EQ) && (get_rh_range(lp, i) < epsvalue)) {
 54705               		.loc 2 5229 0
 54706 179e2 2D81      		ldd r18,Y+5
 54707 179e4 3E81      		ldd r19,Y+6
 54708 179e6 8F81      		ldd r24,Y+7
 54709 179e8 9885      		ldd r25,Y+8
 54710 179ea 43E0      		ldi r20,lo8(3)
 54711 179ec 50E0      		ldi r21,0
 54712 179ee B901      		movw r22,r18
 54713 179f0 0E94 0000 		call is_constr_type
 54714 179f4 8823      		tst r24
 54715 179f6 01F4      		brne .L2231
 54716               		.loc 2 5229 0 is_stmt 0 discriminator 1
 54717 179f8 2D81      		ldd r18,Y+5
 54718 179fa 3E81      		ldd r19,Y+6
 54719 179fc 8F81      		ldd r24,Y+7
 54720 179fe 9885      		ldd r25,Y+8
 54721 17a00 B901      		movw r22,r18
 54722 17a02 0E94 0000 		call get_rh_range
 54723 17a06 DC01      		movw r26,r24
 54724 17a08 CB01      		movw r24,r22
 54725 17a0a 2B85      		ldd r18,Y+11
 54726 17a0c 3C85      		ldd r19,Y+12
 54727 17a0e 4D85      		ldd r20,Y+13
 54728 17a10 5E85      		ldd r21,Y+14
 54729 17a12 BC01      		movw r22,r24
 54730 17a14 CD01      		movw r24,r26
 54731 17a16 0E94 0000 		call __ltsf2
 54732 17a1a 8823      		tst r24
 54733 17a1c 04F4      		brge .L2231
5230:lp_solve_5.5/lp_presolve.c ****       presolve_setEQ(psdata, i);
 54734               		.loc 2 5230 0 is_stmt 1
 54735 17a1e 2D81      		ldd r18,Y+5
 54736 17a20 3E81      		ldd r19,Y+6
 54737 17a22 8DA1      		ldd r24,Y+37
 54738 17a24 9EA1      		ldd r25,Y+38
 54739 17a26 B901      		movw r22,r18
 54740 17a28 0E94 0000 		call presolve_setEQ
5231:lp_solve_5.5/lp_presolve.c ****       iRangeTighten++;
 54741               		.loc 2 5231 0
 54742 17a2c 8981      		ldd r24,Y+1
 54743 17a2e 9A81      		ldd r25,Y+2
 54744 17a30 0196      		adiw r24,1
 54745 17a32 9A83      		std Y+2,r25
 54746 17a34 8983      		std Y+1,r24
 54747               	.L2231:
5178:lp_solve_5.5/lp_presolve.c **** 
 54748               		.loc 2 5178 0 discriminator 2
 54749 17a36 8DA1      		ldd r24,Y+37
 54750 17a38 9EA1      		ldd r25,Y+38
 54751 17a3a FC01      		movw r30,r24
 54752 17a3c 8081      		ld r24,Z
 54753 17a3e 9181      		ldd r25,Z+1
 54754 17a40 FC01      		movw r30,r24
 54755 17a42 8081      		ld r24,Z
 54756 17a44 9181      		ldd r25,Z+1
 54757 17a46 2D81      		ldd r18,Y+5
 54758 17a48 3E81      		ldd r19,Y+6
 54759 17a4a B901      		movw r22,r18
 54760 17a4c 0E94 0000 		call prevActiveLink
 54761 17a50 9E83      		std Y+6,r25
 54762 17a52 8D83      		std Y+5,r24
 54763               	.L2214:
5178:lp_solve_5.5/lp_presolve.c **** 
 54764               		.loc 2 5178 0 is_stmt 0 discriminator 1
 54765 17a54 8D81      		ldd r24,Y+5
 54766 17a56 9E81      		ldd r25,Y+6
 54767 17a58 1816      		cp __zero_reg__,r24
 54768 17a5a 1906      		cpc __zero_reg__,r25
 54769 17a5c 04F4      		brge .+2
 54770 17a5e 00C0      		rjmp .L2233
 54771               	.L2216:
5232:lp_solve_5.5/lp_presolve.c ****     }
5233:lp_solve_5.5/lp_presolve.c ****   }
5234:lp_solve_5.5/lp_presolve.c **** 
5235:lp_solve_5.5/lp_presolve.c ****   psdata->forceupdate |= (MYBOOL) (iBoundTighten > 0);
 54772               		.loc 2 5235 0 is_stmt 1
 54773 17a60 8DA1      		ldd r24,Y+37
 54774 17a62 9EA1      		ldd r25,Y+38
 54775 17a64 FC01      		movw r30,r24
 54776 17a66 84A1      		ldd r24,Z+36
 54777 17a68 382F      		mov r19,r24
 54778 17a6a 8B8D      		ldd r24,Y+27
 54779 17a6c 9C8D      		ldd r25,Y+28
 54780 17a6e 21E0      		ldi r18,lo8(1)
 54781 17a70 1816      		cp __zero_reg__,r24
 54782 17a72 1906      		cpc __zero_reg__,r25
 54783 17a74 04F0      		brlt .L2234
 54784 17a76 20E0      		ldi r18,0
 54785               	.L2234:
 54786 17a78 822F      		mov r24,r18
 54787 17a7a 832B      		or r24,r19
 54788 17a7c 282F      		mov r18,r24
 54789 17a7e 8DA1      		ldd r24,Y+37
 54790 17a80 9EA1      		ldd r25,Y+38
 54791 17a82 FC01      		movw r30,r24
 54792 17a84 24A3      		std Z+36,r18
5236:lp_solve_5.5/lp_presolve.c ****   (*nBoundTighten) += iBoundTighten+iRangeTighten;
 54793               		.loc 2 5236 0
 54794 17a86 8FA1      		ldd r24,Y+39
 54795 17a88 98A5      		ldd r25,Y+40
 54796 17a8a FC01      		movw r30,r24
 54797 17a8c 2081      		ld r18,Z
 54798 17a8e 3181      		ldd r19,Z+1
 54799 17a90 4B8D      		ldd r20,Y+27
 54800 17a92 5C8D      		ldd r21,Y+28
 54801 17a94 8981      		ldd r24,Y+1
 54802 17a96 9A81      		ldd r25,Y+2
 54803 17a98 840F      		add r24,r20
 54804 17a9a 951F      		adc r25,r21
 54805 17a9c 280F      		add r18,r24
 54806 17a9e 391F      		adc r19,r25
 54807 17aa0 8FA1      		ldd r24,Y+39
 54808 17aa2 98A5      		ldd r25,Y+40
 54809 17aa4 FC01      		movw r30,r24
 54810 17aa6 3183      		std Z+1,r19
 54811 17aa8 2083      		st Z,r18
5237:lp_solve_5.5/lp_presolve.c ****   (*nSum)          += iBoundTighten+iRangeTighten;
 54812               		.loc 2 5237 0
 54813 17aaa 89A5      		ldd r24,Y+41
 54814 17aac 9AA5      		ldd r25,Y+42
 54815 17aae FC01      		movw r30,r24
 54816 17ab0 2081      		ld r18,Z
 54817 17ab2 3181      		ldd r19,Z+1
 54818 17ab4 4B8D      		ldd r20,Y+27
 54819 17ab6 5C8D      		ldd r21,Y+28
 54820 17ab8 8981      		ldd r24,Y+1
 54821 17aba 9A81      		ldd r25,Y+2
 54822 17abc 840F      		add r24,r20
 54823 17abe 951F      		adc r25,r21
 54824 17ac0 280F      		add r18,r24
 54825 17ac2 391F      		adc r19,r25
 54826 17ac4 89A5      		ldd r24,Y+41
 54827 17ac6 9AA5      		ldd r25,Y+42
 54828 17ac8 FC01      		movw r30,r24
 54829 17aca 3183      		std Z+1,r19
 54830 17acc 2083      		st Z,r18
5238:lp_solve_5.5/lp_presolve.c **** 
5239:lp_solve_5.5/lp_presolve.c ****   return( status );
 54831               		.loc 2 5239 0
 54832 17ace 8B81      		ldd r24,Y+3
 54833 17ad0 9C81      		ldd r25,Y+4
 54834               	/* epilogue start */
5240:lp_solve_5.5/lp_presolve.c **** }
 54835               		.loc 2 5240 0
 54836 17ad2 AA96      		adiw r28,42
 54837 17ad4 0FB6      		in __tmp_reg__,__SREG__
 54838 17ad6 F894      		cli
 54839 17ad8 DEBF      		out __SP_H__,r29
 54840 17ada 0FBE      		out __SREG__,__tmp_reg__
 54841 17adc CDBF      		out __SP_L__,r28
 54842 17ade DF91      		pop r29
 54843 17ae0 CF91      		pop r28
 54844 17ae2 1F91      		pop r17
 54845 17ae4 0F91      		pop r16
 54846 17ae6 FF90      		pop r15
 54847 17ae8 EF90      		pop r14
 54848 17aea 0895      		ret
 54849               		.cfi_endproc
 54850               	.LFE91:
 54852               	.global	presolve_rows
 54854               	presolve_rows:
 54855               	.LFB92:
5241:lp_solve_5.5/lp_presolve.c **** 
5242:lp_solve_5.5/lp_presolve.c **** STATIC int presolve_rows(presolverec *psdata, int *nCoeffChanged, int *nConRemove, int *nVarFixed, 
5243:lp_solve_5.5/lp_presolve.c **** {
 54856               		.loc 2 5243 0
 54857               		.cfi_startproc
 54858 17aec CF92      		push r12
 54859               	.LCFI590:
 54860               		.cfi_def_cfa_offset 3
 54861               		.cfi_offset 12, -2
 54862 17aee DF92      		push r13
 54863               	.LCFI591:
 54864               		.cfi_def_cfa_offset 4
 54865               		.cfi_offset 13, -3
 54866 17af0 EF92      		push r14
 54867               	.LCFI592:
 54868               		.cfi_def_cfa_offset 5
 54869               		.cfi_offset 14, -4
 54870 17af2 FF92      		push r15
 54871               	.LCFI593:
 54872               		.cfi_def_cfa_offset 6
 54873               		.cfi_offset 15, -5
 54874 17af4 0F93      		push r16
 54875               	.LCFI594:
 54876               		.cfi_def_cfa_offset 7
 54877               		.cfi_offset 16, -6
 54878 17af6 1F93      		push r17
 54879               	.LCFI595:
 54880               		.cfi_def_cfa_offset 8
 54881               		.cfi_offset 17, -7
 54882 17af8 CF93      		push r28
 54883               	.LCFI596:
 54884               		.cfi_def_cfa_offset 9
 54885               		.cfi_offset 28, -8
 54886 17afa DF93      		push r29
 54887               	.LCFI597:
 54888               		.cfi_def_cfa_offset 10
 54889               		.cfi_offset 29, -9
 54890 17afc CDB7      		in r28,__SP_L__
 54891 17afe DEB7      		in r29,__SP_H__
 54892               	.LCFI598:
 54893               		.cfi_def_cfa_register 28
 54894 17b00 C354      		subi r28,67
 54895 17b02 D109      		sbc r29,__zero_reg__
 54896               	.LCFI599:
 54897               		.cfi_def_cfa_offset 77
 54898 17b04 0FB6      		in __tmp_reg__,__SREG__
 54899 17b06 F894      		cli
 54900 17b08 DEBF      		out __SP_H__,r29
 54901 17b0a 0FBE      		out __SREG__,__tmp_reg__
 54902 17b0c CDBF      		out __SP_L__,r28
 54903               	/* prologue: function */
 54904               	/* frame size = 67 */
 54905               	/* stack size = 75 */
 54906               	.L__stack_usage = 75
 54907 17b0e 99AF      		std Y+57,r25
 54908 17b10 88AF      		std Y+56,r24
 54909 17b12 7BAF      		std Y+59,r23
 54910 17b14 6AAF      		std Y+58,r22
 54911 17b16 5DAF      		std Y+61,r21
 54912 17b18 4CAF      		std Y+60,r20
 54913 17b1a 3FAF      		std Y+63,r19
 54914 17b1c 2EAF      		std Y+62,r18
 54915 17b1e CE01      		movw r24,r28
 54916 17b20 805C      		subi r24,-64
 54917 17b22 9F4F      		sbci r25,-1
 54918 17b24 FC01      		movw r30,r24
 54919 17b26 1183      		std Z+1,r17
 54920 17b28 0083      		st Z,r16
 54921 17b2a CE01      		movw r24,r28
 54922 17b2c 8E5B      		subi r24,-66
 54923 17b2e 9F4F      		sbci r25,-1
 54924 17b30 FC01      		movw r30,r24
 54925 17b32 F182      		std Z+1,r15
 54926 17b34 E082      		st Z,r14
5244:lp_solve_5.5/lp_presolve.c ****   lprec    *lp = psdata->lp;
 54927               		.loc 2 5244 0
 54928 17b36 88AD      		ldd r24,Y+56
 54929 17b38 99AD      		ldd r25,Y+57
 54930 17b3a FC01      		movw r30,r24
 54931 17b3c 8289      		ldd r24,Z+18
 54932 17b3e 9389      		ldd r25,Z+19
 54933 17b40 998B      		std Y+17,r25
 54934 17b42 888B      		std Y+16,r24
5245:lp_solve_5.5/lp_presolve.c ****   MYBOOL   candelete;
5246:lp_solve_5.5/lp_presolve.c ****   int      iCoeffChanged = 0, iConRemove = 0, iVarFixed = 0, iBoundTighten = 0,
 54935               		.loc 2 5246 0
 54936 17b44 1B8A      		std Y+19,__zero_reg__
 54937 17b46 1A8A      		std Y+18,__zero_reg__
 54938 17b48 19A6      		std Y+41,__zero_reg__
 54939 17b4a 18A6      		std Y+40,__zero_reg__
 54940 17b4c 1BA6      		std Y+43,__zero_reg__
 54941 17b4e 1AA6      		std Y+42,__zero_reg__
 54942 17b50 1DA6      		std Y+45,__zero_reg__
 54943 17b52 1CA6      		std Y+44,__zero_reg__
5247:lp_solve_5.5/lp_presolve.c ****            status = RUNNING, i,ix, j,jx, item;
 54944               		.loc 2 5247 0
 54945 17b54 88E0      		ldi r24,lo8(8)
 54946 17b56 90E0      		ldi r25,0
 54947 17b58 9B83      		std Y+3,r25
 54948 17b5a 8A83      		std Y+2,r24
5248:lp_solve_5.5/lp_presolve.c ****   REAL     Value1, Value2, losum, upsum, lorhs, uprhs, epsvalue = psdata->epsvalue;
 54949               		.loc 2 5248 0
 54950 17b5c 88AD      		ldd r24,Y+56
 54951 17b5e 99AD      		ldd r25,Y+57
 54952 17b60 FC01      		movw r30,r24
 54953 17b62 8489      		ldd r24,Z+20
 54954 17b64 9589      		ldd r25,Z+21
 54955 17b66 A689      		ldd r26,Z+22
 54956 17b68 B789      		ldd r27,Z+23
 54957 17b6a 8C8B      		std Y+20,r24
 54958 17b6c 9D8B      		std Y+21,r25
 54959 17b6e AE8B      		std Y+22,r26
 54960 17b70 BF8B      		std Y+23,r27
5249:lp_solve_5.5/lp_presolve.c ****   MATrec   *mat = lp->matA;
 54961               		.loc 2 5249 0
 54962 17b72 8889      		ldd r24,Y+16
 54963 17b74 9989      		ldd r25,Y+17
 54964 17b76 8A54      		subi r24,74
 54965 17b78 9D4F      		sbci r25,-3
 54966 17b7a FC01      		movw r30,r24
 54967 17b7c 8081      		ld r24,Z
 54968 17b7e 9181      		ldd r25,Z+1
 54969 17b80 998F      		std Y+25,r25
 54970 17b82 888F      		std Y+24,r24
5250:lp_solve_5.5/lp_presolve.c **** 
5251:lp_solve_5.5/lp_presolve.c ****   for(i = lastActiveLink(psdata->rows->varmap); (i > 0) && (status == RUNNING); ) {
 54971               		.loc 2 5251 0
 54972 17b84 88AD      		ldd r24,Y+56
 54973 17b86 99AD      		ldd r25,Y+57
 54974 17b88 FC01      		movw r30,r24
 54975 17b8a 8081      		ld r24,Z
 54976 17b8c 9181      		ldd r25,Z+1
 54977 17b8e FC01      		movw r30,r24
 54978 17b90 8081      		ld r24,Z
 54979 17b92 9181      		ldd r25,Z+1
 54980 17b94 0E94 0000 		call lastActiveLink
 54981 17b98 9D83      		std Y+5,r25
 54982 17b9a 8C83      		std Y+4,r24
 54983 17b9c 00C0      		rjmp .L2245
 54984               	.L2300:
5252:lp_solve_5.5/lp_presolve.c **** 
5253:lp_solve_5.5/lp_presolve.c ****     candelete = FALSE;
 54985               		.loc 2 5253 0
 54986 17b9e 1982      		std Y+1,__zero_reg__
5254:lp_solve_5.5/lp_presolve.c **** 
5255:lp_solve_5.5/lp_presolve.c ****    /* First identify any full row infeasibilities
5256:lp_solve_5.5/lp_presolve.c ****       Note: Handle singletons below to ensure that conflicting multiple singleton
5257:lp_solve_5.5/lp_presolve.c ****             rows with this variable do not provoke notice of infeasibility */
5258:lp_solve_5.5/lp_presolve.c ****     j = presolve_rowlengthex(psdata, i);
 54987               		.loc 2 5258 0
 54988 17ba0 2C81      		ldd r18,Y+4
 54989 17ba2 3D81      		ldd r19,Y+5
 54990 17ba4 88AD      		ldd r24,Y+56
 54991 17ba6 99AD      		ldd r25,Y+57
 54992 17ba8 B901      		movw r22,r18
 54993 17baa 0E94 0000 		call presolve_rowlengthex
 54994 17bae 9B8F      		std Y+27,r25
 54995 17bb0 8A8F      		std Y+26,r24
5259:lp_solve_5.5/lp_presolve.c ****     if((j > 1) &&
 54996               		.loc 2 5259 0
 54997 17bb2 8A8D      		ldd r24,Y+26
 54998 17bb4 9B8D      		ldd r25,Y+27
 54999 17bb6 0297      		sbiw r24,2
 55000 17bb8 04F0      		brlt .L2246
5260:lp_solve_5.5/lp_presolve.c ****        !psdata->forceupdate && !presolve_rowfeasible(psdata, i, FALSE)) {
 55001               		.loc 2 5260 0 discriminator 1
 55002 17bba 88AD      		ldd r24,Y+56
 55003 17bbc 99AD      		ldd r25,Y+57
 55004 17bbe FC01      		movw r30,r24
 55005 17bc0 84A1      		ldd r24,Z+36
5259:lp_solve_5.5/lp_presolve.c ****     if((j > 1) &&
 55006               		.loc 2 5259 0 discriminator 1
 55007 17bc2 8823      		tst r24
 55008 17bc4 01F4      		brne .L2246
 55009               		.loc 2 5260 0
 55010 17bc6 2C81      		ldd r18,Y+4
 55011 17bc8 3D81      		ldd r19,Y+5
 55012 17bca 88AD      		ldd r24,Y+56
 55013 17bcc 99AD      		ldd r25,Y+57
 55014 17bce 40E0      		ldi r20,0
 55015 17bd0 B901      		movw r22,r18
 55016 17bd2 0E94 0000 		call presolve_rowfeasible
 55017 17bd6 8823      		tst r24
 55018 17bd8 01F4      		brne .L2246
5261:lp_solve_5.5/lp_presolve.c ****       status = presolve_setstatus(psdata, INFEASIBLE);
 55019               		.loc 2 5261 0
 55020 17bda 88AD      		ldd r24,Y+56
 55021 17bdc 99AD      		ldd r25,Y+57
 55022 17bde 20E0      		ldi r18,lo8(.LC21)
 55023 17be0 30E0      		ldi r19,hi8(.LC21)
 55024 17be2 4DE8      		ldi r20,lo8(-115)
 55025 17be4 54E1      		ldi r21,lo8(20)
 55026 17be6 62E0      		ldi r22,lo8(2)
 55027 17be8 70E0      		ldi r23,0
 55028 17bea 0E94 0000 		call presolve_setstatusex
 55029 17bee 9B83      		std Y+3,r25
 55030 17bf0 8A83      		std Y+2,r24
5262:lp_solve_5.5/lp_presolve.c ****       break;
 55031               		.loc 2 5262 0
 55032 17bf2 00C0      		rjmp .L2247
 55033               	.L2246:
5263:lp_solve_5.5/lp_presolve.c ****     }
5264:lp_solve_5.5/lp_presolve.c ****     presolve_range(lp, i, psdata->rows, &losum, &upsum);
 55034               		.loc 2 5264 0
 55035 17bf4 88AD      		ldd r24,Y+56
 55036 17bf6 99AD      		ldd r25,Y+57
 55037 17bf8 FC01      		movw r30,r24
 55038 17bfa 4081      		ld r20,Z
 55039 17bfc 5181      		ldd r21,Z+1
 55040 17bfe FE01      		movw r30,r28
 55041 17c00 F496      		adiw r30,52
 55042 17c02 9E01      		movw r18,r28
 55043 17c04 205D      		subi r18,-48
 55044 17c06 3F4F      		sbci r19,-1
 55045 17c08 6C81      		ldd r22,Y+4
 55046 17c0a 7D81      		ldd r23,Y+5
 55047 17c0c 8889      		ldd r24,Y+16
 55048 17c0e 9989      		ldd r25,Y+17
 55049 17c10 8F01      		movw r16,r30
 55050 17c12 0E94 0000 		call presolve_range
5265:lp_solve_5.5/lp_presolve.c ****     lorhs = get_rh_lower(lp, i);
 55051               		.loc 2 5265 0
 55052 17c16 2C81      		ldd r18,Y+4
 55053 17c18 3D81      		ldd r19,Y+5
 55054 17c1a 8889      		ldd r24,Y+16
 55055 17c1c 9989      		ldd r25,Y+17
 55056 17c1e B901      		movw r22,r18
 55057 17c20 0E94 0000 		call get_rh_lower
 55058 17c24 DC01      		movw r26,r24
 55059 17c26 CB01      		movw r24,r22
 55060 17c28 8C8F      		std Y+28,r24
 55061 17c2a 9D8F      		std Y+29,r25
 55062 17c2c AE8F      		std Y+30,r26
 55063 17c2e BF8F      		std Y+31,r27
5266:lp_solve_5.5/lp_presolve.c ****     uprhs = get_rh_upper(lp, i);
 55064               		.loc 2 5266 0
 55065 17c30 2C81      		ldd r18,Y+4
 55066 17c32 3D81      		ldd r19,Y+5
 55067 17c34 8889      		ldd r24,Y+16
 55068 17c36 9989      		ldd r25,Y+17
 55069 17c38 B901      		movw r22,r18
 55070 17c3a 0E94 0000 		call get_rh_upper
 55071 17c3e DC01      		movw r26,r24
 55072 17c40 CB01      		movw r24,r22
 55073 17c42 88A3      		std Y+32,r24
 55074 17c44 99A3      		std Y+33,r25
 55075 17c46 AAA3      		std Y+34,r26
 55076 17c48 BBA3      		std Y+35,r27
5267:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
5268:lp_solve_5.5/lp_presolve.c ****     if((losum>uprhs+epsvalue) || (upsum<lorhs-epsvalue)) {
5269:lp_solve_5.5/lp_presolve.c ****       status = presolve_setstatus(psdata, INFEASIBLE);
5270:lp_solve_5.5/lp_presolve.c ****       break;
5271:lp_solve_5.5/lp_presolve.c ****     }
5272:lp_solve_5.5/lp_presolve.c **** #endif
5273:lp_solve_5.5/lp_presolve.c **** 
5274:lp_solve_5.5/lp_presolve.c ****     /* Delete empty rows */
5275:lp_solve_5.5/lp_presolve.c ****     if(j == 0)
 55077               		.loc 2 5275 0
 55078 17c4a 8A8D      		ldd r24,Y+26
 55079 17c4c 9B8D      		ldd r25,Y+27
 55080 17c4e 892B      		or r24,r25
 55081 17c50 01F4      		brne .L2248
5276:lp_solve_5.5/lp_presolve.c ****       candelete = TRUE;
 55082               		.loc 2 5276 0
 55083 17c52 81E0      		ldi r24,lo8(1)
 55084 17c54 8983      		std Y+1,r24
 55085 17c56 00C0      		rjmp .L2249
 55086               	.L2248:
5277:lp_solve_5.5/lp_presolve.c ****     else
5278:lp_solve_5.5/lp_presolve.c **** 
5279:lp_solve_5.5/lp_presolve.c ****     /* Convert non-fixed row singletons to bounds */
5280:lp_solve_5.5/lp_presolve.c **** #if 0  /* Version that deletes bound-fixed columns in presolve_columns() */
5281:lp_solve_5.5/lp_presolve.c ****     if((j == 1) && (upsum-losum >= -epsvalue)) {
5282:lp_solve_5.5/lp_presolve.c **** #else  /* Version that deletes bound-fixed columns here */
5283:lp_solve_5.5/lp_presolve.c ****     if((j == 1) && (uprhs-lorhs >= -epsvalue)) {
 55087               		.loc 2 5283 0
 55088 17c58 8A8D      		ldd r24,Y+26
 55089 17c5a 9B8D      		ldd r25,Y+27
 55090 17c5c 0197      		sbiw r24,1
 55091 17c5e 01F0      		breq .+2
 55092 17c60 00C0      		rjmp .L2250
 55093               		.loc 2 5283 0 is_stmt 0 discriminator 1
 55094 17c62 2C8D      		ldd r18,Y+28
 55095 17c64 3D8D      		ldd r19,Y+29
 55096 17c66 4E8D      		ldd r20,Y+30
 55097 17c68 5F8D      		ldd r21,Y+31
 55098 17c6a 68A1      		ldd r22,Y+32
 55099 17c6c 79A1      		ldd r23,Y+33
 55100 17c6e 8AA1      		ldd r24,Y+34
 55101 17c70 9BA1      		ldd r25,Y+35
 55102 17c72 0E94 0000 		call __subsf3
 55103 17c76 DC01      		movw r26,r24
 55104 17c78 CB01      		movw r24,r22
 55105 17c7a 7C01      		movw r14,r24
 55106 17c7c 8D01      		movw r16,r26
 55107 17c7e 8C89      		ldd r24,Y+20
 55108 17c80 9D89      		ldd r25,Y+21
 55109 17c82 AE89      		ldd r26,Y+22
 55110 17c84 BF89      		ldd r27,Y+23
 55111 17c86 B058      		subi r27,0x80
 55112 17c88 9C01      		movw r18,r24
 55113 17c8a AD01      		movw r20,r26
 55114 17c8c C801      		movw r24,r16
 55115 17c8e B701      		movw r22,r14
 55116 17c90 0E94 0000 		call __gesf2
 55117 17c94 8823      		tst r24
 55118 17c96 04F4      		brge .+2
 55119 17c98 00C0      		rjmp .L2250
5284:lp_solve_5.5/lp_presolve.c **** #endif
5285:lp_solve_5.5/lp_presolve.c ****       item = 0;
 55120               		.loc 2 5285 0 is_stmt 1
 55121 17c9a 1FA6      		std Y+47,__zero_reg__
 55122 17c9c 1EA6      		std Y+46,__zero_reg__
5286:lp_solve_5.5/lp_presolve.c ****       jx = presolve_nextcol(psdata, i, &item);
 55123               		.loc 2 5286 0
 55124 17c9e AE01      		movw r20,r28
 55125 17ca0 425D      		subi r20,-46
 55126 17ca2 5F4F      		sbci r21,-1
 55127 17ca4 2C81      		ldd r18,Y+4
 55128 17ca6 3D81      		ldd r19,Y+5
 55129 17ca8 88AD      		ldd r24,Y+56
 55130 17caa 99AD      		ldd r25,Y+57
 55131 17cac B901      		movw r22,r18
 55132 17cae 0E94 0000 		call presolve_nextcol
 55133 17cb2 9F83      		std Y+7,r25
 55134 17cb4 8E83      		std Y+6,r24
5287:lp_solve_5.5/lp_presolve.c ****       j = ROW_MAT_COLNR(jx);
 55135               		.loc 2 5287 0
 55136 17cb6 888D      		ldd r24,Y+24
 55137 17cb8 998D      		ldd r25,Y+25
 55138 17cba FC01      		movw r30,r24
 55139 17cbc 2485      		ldd r18,Z+12
 55140 17cbe 3585      		ldd r19,Z+13
 55141 17cc0 888D      		ldd r24,Y+24
 55142 17cc2 998D      		ldd r25,Y+25
 55143 17cc4 FC01      		movw r30,r24
 55144 17cc6 4689      		ldd r20,Z+22
 55145 17cc8 5789      		ldd r21,Z+23
 55146 17cca 8E81      		ldd r24,Y+6
 55147 17ccc 9F81      		ldd r25,Y+7
 55148 17cce 880F      		lsl r24
 55149 17cd0 991F      		rol r25
 55150 17cd2 840F      		add r24,r20
 55151 17cd4 951F      		adc r25,r21
 55152 17cd6 FC01      		movw r30,r24
 55153 17cd8 8081      		ld r24,Z
 55154 17cda 9181      		ldd r25,Z+1
 55155 17cdc 880F      		lsl r24
 55156 17cde 991F      		rol r25
 55157 17ce0 820F      		add r24,r18
 55158 17ce2 931F      		adc r25,r19
 55159 17ce4 FC01      		movw r30,r24
 55160 17ce6 8081      		ld r24,Z
 55161 17ce8 9181      		ldd r25,Z+1
 55162 17cea 9B8F      		std Y+27,r25
 55163 17cec 8A8F      		std Y+26,r24
5288:lp_solve_5.5/lp_presolve.c **** 
5289:lp_solve_5.5/lp_presolve.c ****       /* Make sure we don't have conflicting other singleton rows with this variable */
5290:lp_solve_5.5/lp_presolve.c ****       Value1 = lp->infinite;
 55164               		.loc 2 5290 0
 55165 17cee 8889      		ldd r24,Y+16
 55166 17cf0 9989      		ldd r25,Y+17
 55167 17cf2 865F      		subi r24,-10
 55168 17cf4 9C4F      		sbci r25,-4
 55169 17cf6 FC01      		movw r30,r24
 55170 17cf8 8081      		ld r24,Z
 55171 17cfa 9181      		ldd r25,Z+1
 55172 17cfc A281      		ldd r26,Z+2
 55173 17cfe B381      		ldd r27,Z+3
 55174 17d00 8887      		std Y+8,r24
 55175 17d02 9987      		std Y+9,r25
 55176 17d04 AA87      		std Y+10,r26
 55177 17d06 BB87      		std Y+11,r27
5291:lp_solve_5.5/lp_presolve.c ****       Value2 = -Value1;
 55178               		.loc 2 5291 0
 55179 17d08 8885      		ldd r24,Y+8
 55180 17d0a 9985      		ldd r25,Y+9
 55181 17d0c AA85      		ldd r26,Y+10
 55182 17d0e BB85      		ldd r27,Y+11
 55183 17d10 B058      		subi r27,0x80
 55184 17d12 8C87      		std Y+12,r24
 55185 17d14 9D87      		std Y+13,r25
 55186 17d16 AE87      		std Y+14,r26
 55187 17d18 BF87      		std Y+15,r27
5292:lp_solve_5.5/lp_presolve.c ****       if(presolve_collength(psdata, j) > 1)
 55188               		.loc 2 5292 0
 55189 17d1a 2A8D      		ldd r18,Y+26
 55190 17d1c 3B8D      		ldd r19,Y+27
 55191 17d1e 88AD      		ldd r24,Y+56
 55192 17d20 99AD      		ldd r25,Y+57
 55193 17d22 B901      		movw r22,r18
 55194 17d24 0E94 0000 		call presolve_collength
 55195 17d28 0297      		sbiw r24,2
 55196 17d2a 04F0      		brlt .L2252
5293:lp_solve_5.5/lp_presolve.c ****         status = presolve_boundconflict(psdata, i, j);
 55197               		.loc 2 5293 0
 55198 17d2c 4A8D      		ldd r20,Y+26
 55199 17d2e 5B8D      		ldd r21,Y+27
 55200 17d30 2C81      		ldd r18,Y+4
 55201 17d32 3D81      		ldd r19,Y+5
 55202 17d34 88AD      		ldd r24,Y+56
 55203 17d36 99AD      		ldd r25,Y+57
 55204 17d38 B901      		movw r22,r18
 55205 17d3a 0E94 0000 		call presolve_boundconflict
 55206 17d3e 9B83      		std Y+3,r25
 55207 17d40 8A83      		std Y+2,r24
 55208 17d42 00C0      		rjmp .L2253
 55209               	.L2252:
5294:lp_solve_5.5/lp_presolve.c ****       else if(is_constr_type(lp, i, EQ)) {
 55210               		.loc 2 5294 0
 55211 17d44 2C81      		ldd r18,Y+4
 55212 17d46 3D81      		ldd r19,Y+5
 55213 17d48 8889      		ldd r24,Y+16
 55214 17d4a 9989      		ldd r25,Y+17
 55215 17d4c 43E0      		ldi r20,lo8(3)
 55216 17d4e 50E0      		ldi r21,0
 55217 17d50 B901      		movw r22,r18
 55218 17d52 0E94 0000 		call is_constr_type
 55219 17d56 8823      		tst r24
 55220 17d58 01F4      		brne .+2
 55221 17d5a 00C0      		rjmp .L2253
5295:lp_solve_5.5/lp_presolve.c ****         Value2 = ROW_MAT_VALUE(jx);
 55222               		.loc 2 5295 0
 55223 17d5c 888D      		ldd r24,Y+24
 55224 17d5e 998D      		ldd r25,Y+25
 55225 17d60 FC01      		movw r30,r24
 55226 17d62 2089      		ldd r18,Z+16
 55227 17d64 3189      		ldd r19,Z+17
 55228 17d66 888D      		ldd r24,Y+24
 55229 17d68 998D      		ldd r25,Y+25
 55230 17d6a FC01      		movw r30,r24
 55231 17d6c 4689      		ldd r20,Z+22
 55232 17d6e 5789      		ldd r21,Z+23
 55233 17d70 8E81      		ldd r24,Y+6
 55234 17d72 9F81      		ldd r25,Y+7
 55235 17d74 880F      		lsl r24
 55236 17d76 991F      		rol r25
 55237 17d78 840F      		add r24,r20
 55238 17d7a 951F      		adc r25,r21
 55239 17d7c FC01      		movw r30,r24
 55240 17d7e 8081      		ld r24,Z
 55241 17d80 9181      		ldd r25,Z+1
 55242 17d82 880F      		lsl r24
 55243 17d84 991F      		rol r25
 55244 17d86 880F      		lsl r24
 55245 17d88 991F      		rol r25
 55246 17d8a 820F      		add r24,r18
 55247 17d8c 931F      		adc r25,r19
 55248 17d8e FC01      		movw r30,r24
 55249 17d90 8081      		ld r24,Z
 55250 17d92 9181      		ldd r25,Z+1
 55251 17d94 A281      		ldd r26,Z+2
 55252 17d96 B381      		ldd r27,Z+3
 55253 17d98 8C87      		std Y+12,r24
 55254 17d9a 9D87      		std Y+13,r25
 55255 17d9c AE87      		std Y+14,r26
 55256 17d9e BF87      		std Y+15,r27
5296:lp_solve_5.5/lp_presolve.c ****         Value1 = lp->orig_rhs[i] / Value2;
 55257               		.loc 2 5296 0
 55258 17da0 8889      		ldd r24,Y+16
 55259 17da2 9989      		ldd r25,Y+17
 55260 17da4 8A55      		subi r24,90
 55261 17da6 9D4F      		sbci r25,-3
 55262 17da8 FC01      		movw r30,r24
 55263 17daa 2081      		ld r18,Z
 55264 17dac 3181      		ldd r19,Z+1
 55265 17dae 8C81      		ldd r24,Y+4
 55266 17db0 9D81      		ldd r25,Y+5
 55267 17db2 880F      		lsl r24
 55268 17db4 991F      		rol r25
 55269 17db6 880F      		lsl r24
 55270 17db8 991F      		rol r25
 55271 17dba 820F      		add r24,r18
 55272 17dbc 931F      		adc r25,r19
 55273 17dbe FC01      		movw r30,r24
 55274 17dc0 8081      		ld r24,Z
 55275 17dc2 9181      		ldd r25,Z+1
 55276 17dc4 A281      		ldd r26,Z+2
 55277 17dc6 B381      		ldd r27,Z+3
 55278 17dc8 2C85      		ldd r18,Y+12
 55279 17dca 3D85      		ldd r19,Y+13
 55280 17dcc 4E85      		ldd r20,Y+14
 55281 17dce 5F85      		ldd r21,Y+15
 55282 17dd0 BC01      		movw r22,r24
 55283 17dd2 CD01      		movw r24,r26
 55284 17dd4 0E94 0000 		call __divsf3
 55285 17dd8 DC01      		movw r26,r24
 55286 17dda CB01      		movw r24,r22
 55287 17ddc 8887      		std Y+8,r24
 55288 17dde 9987      		std Y+9,r25
 55289 17de0 AA87      		std Y+10,r26
 55290 17de2 BB87      		std Y+11,r27
5297:lp_solve_5.5/lp_presolve.c ****         if(Value2 < 0)
 55291               		.loc 2 5297 0
 55292 17de4 20E0      		ldi r18,0
 55293 17de6 30E0      		ldi r19,0
 55294 17de8 A901      		movw r20,r18
 55295 17dea 6C85      		ldd r22,Y+12
 55296 17dec 7D85      		ldd r23,Y+13
 55297 17dee 8E85      		ldd r24,Y+14
 55298 17df0 9F85      		ldd r25,Y+15
 55299 17df2 0E94 0000 		call __ltsf2
 55300 17df6 8823      		tst r24
 55301 17df8 04F4      		brge .L2254
5298:lp_solve_5.5/lp_presolve.c ****           swapREAL(&losum, &upsum);
 55302               		.loc 2 5298 0
 55303 17dfa 9E01      		movw r18,r28
 55304 17dfc 2C5C      		subi r18,-52
 55305 17dfe 3F4F      		sbci r19,-1
 55306 17e00 CE01      		movw r24,r28
 55307 17e02 C096      		adiw r24,48
 55308 17e04 B901      		movw r22,r18
 55309 17e06 0E94 0000 		call swapREAL
 55310               	.L2254:
5299:lp_solve_5.5/lp_presolve.c ****         if((Value1 < losum / my_if(my_infinite(lp, losum), my_sign(Value2), Value2) - epsvalue) ||
 55311               		.loc 2 5299 0
 55312 17e0a C8A8      		ldd r12,Y+48
 55313 17e0c D9A8      		ldd r13,Y+49
 55314 17e0e EAA8      		ldd r14,Y+50
 55315 17e10 FBA8      		ldd r15,Y+51
 55316 17e12 88A9      		ldd r24,Y+48
 55317 17e14 99A9      		ldd r25,Y+49
 55318 17e16 AAA9      		ldd r26,Y+50
 55319 17e18 BBA9      		ldd r27,Y+51
 55320 17e1a BF77      		andi r27,0x7f
 55321 17e1c 2889      		ldd r18,Y+16
 55322 17e1e 3989      		ldd r19,Y+17
 55323 17e20 265F      		subi r18,-10
 55324 17e22 3C4F      		sbci r19,-4
 55325 17e24 F901      		movw r30,r18
 55326 17e26 2081      		ld r18,Z
 55327 17e28 3181      		ldd r19,Z+1
 55328 17e2a 4281      		ldd r20,Z+2
 55329 17e2c 5381      		ldd r21,Z+3
 55330 17e2e BC01      		movw r22,r24
 55331 17e30 CD01      		movw r24,r26
 55332 17e32 0E94 0000 		call __gesf2
 55333 17e36 8823      		tst r24
 55334 17e38 04F0      		brlt .L2316
 55335               		.loc 2 5299 0 is_stmt 0 discriminator 1
 55336 17e3a 20E0      		ldi r18,0
 55337 17e3c 30E0      		ldi r19,0
 55338 17e3e A901      		movw r20,r18
 55339 17e40 6C85      		ldd r22,Y+12
 55340 17e42 7D85      		ldd r23,Y+13
 55341 17e44 8E85      		ldd r24,Y+14
 55342 17e46 9F85      		ldd r25,Y+15
 55343 17e48 0E94 0000 		call __ltsf2
 55344 17e4c 8823      		tst r24
 55345 17e4e 04F4      		brge .L2317
 55346               		.loc 2 5299 0 discriminator 3
 55347 17e50 80E0      		ldi r24,0
 55348 17e52 90E0      		ldi r25,0
 55349 17e54 A0E8      		ldi r26,lo8(-128)
 55350 17e56 BFEB      		ldi r27,lo8(-65)
 55351 17e58 00C0      		rjmp .L2261
 55352               	.L2317:
 55353               		.loc 2 5299 0 discriminator 4
 55354 17e5a 80E0      		ldi r24,0
 55355 17e5c 90E0      		ldi r25,0
 55356 17e5e A0E8      		ldi r26,lo8(-128)
 55357 17e60 BFE3      		ldi r27,lo8(63)
 55358 17e62 00C0      		rjmp .L2261
 55359               	.L2316:
 55360               		.loc 2 5299 0 discriminator 2
 55361 17e64 8C85      		ldd r24,Y+12
 55362 17e66 9D85      		ldd r25,Y+13
 55363 17e68 AE85      		ldd r26,Y+14
 55364 17e6a BF85      		ldd r27,Y+15
 55365               	.L2261:
 55366               		.loc 2 5299 0 discriminator 8
 55367 17e6c 9C01      		movw r18,r24
 55368 17e6e AD01      		movw r20,r26
 55369 17e70 C701      		movw r24,r14
 55370 17e72 B601      		movw r22,r12
 55371 17e74 0E94 0000 		call __divsf3
 55372 17e78 DC01      		movw r26,r24
 55373 17e7a CB01      		movw r24,r22
 55374 17e7c 2C89      		ldd r18,Y+20
 55375 17e7e 3D89      		ldd r19,Y+21
 55376 17e80 4E89      		ldd r20,Y+22
 55377 17e82 5F89      		ldd r21,Y+23
 55378 17e84 BC01      		movw r22,r24
 55379 17e86 CD01      		movw r24,r26
 55380 17e88 0E94 0000 		call __subsf3
 55381 17e8c DC01      		movw r26,r24
 55382 17e8e CB01      		movw r24,r22
 55383 17e90 2885      		ldd r18,Y+8
 55384 17e92 3985      		ldd r19,Y+9
 55385 17e94 4A85      		ldd r20,Y+10
 55386 17e96 5B85      		ldd r21,Y+11
 55387 17e98 BC01      		movw r22,r24
 55388 17e9a CD01      		movw r24,r26
 55389 17e9c 0E94 0000 		call __gtsf2
 55390 17ea0 1816      		cp __zero_reg__,r24
 55391 17ea2 04F4      		brge .+2
 55392 17ea4 00C0      		rjmp .L2262
5300:lp_solve_5.5/lp_presolve.c ****            (Value1 > upsum / my_if(my_infinite(lp, upsum), my_sign(Value2), Value2) + epsvalue))
 55393               		.loc 2 5300 0 is_stmt 1
 55394 17ea6 CCA8      		ldd r12,Y+52
 55395 17ea8 DDA8      		ldd r13,Y+53
 55396 17eaa EEA8      		ldd r14,Y+54
 55397 17eac FFA8      		ldd r15,Y+55
 55398 17eae 8CA9      		ldd r24,Y+52
 55399 17eb0 9DA9      		ldd r25,Y+53
 55400 17eb2 AEA9      		ldd r26,Y+54
 55401 17eb4 BFA9      		ldd r27,Y+55
 55402 17eb6 BF77      		andi r27,0x7f
 55403 17eb8 2889      		ldd r18,Y+16
 55404 17eba 3989      		ldd r19,Y+17
 55405 17ebc 265F      		subi r18,-10
 55406 17ebe 3C4F      		sbci r19,-4
 55407 17ec0 F901      		movw r30,r18
 55408 17ec2 2081      		ld r18,Z
 55409 17ec4 3181      		ldd r19,Z+1
 55410 17ec6 4281      		ldd r20,Z+2
 55411 17ec8 5381      		ldd r21,Z+3
 55412 17eca BC01      		movw r22,r24
 55413 17ecc CD01      		movw r24,r26
 55414 17ece 0E94 0000 		call __gesf2
 55415 17ed2 8823      		tst r24
 55416 17ed4 04F0      		brlt .L2318
 55417               		.loc 2 5300 0 is_stmt 0 discriminator 1
 55418 17ed6 20E0      		ldi r18,0
 55419 17ed8 30E0      		ldi r19,0
 55420 17eda A901      		movw r20,r18
 55421 17edc 6C85      		ldd r22,Y+12
 55422 17ede 7D85      		ldd r23,Y+13
 55423 17ee0 8E85      		ldd r24,Y+14
 55424 17ee2 9F85      		ldd r25,Y+15
 55425 17ee4 0E94 0000 		call __ltsf2
 55426 17ee8 8823      		tst r24
 55427 17eea 04F4      		brge .L2319
 55428               		.loc 2 5300 0 discriminator 3
 55429 17eec 80E0      		ldi r24,0
 55430 17eee 90E0      		ldi r25,0
 55431 17ef0 A0E8      		ldi r26,lo8(-128)
 55432 17ef2 BFEB      		ldi r27,lo8(-65)
 55433 17ef4 00C0      		rjmp .L2268
 55434               	.L2319:
 55435               		.loc 2 5300 0 discriminator 4
 55436 17ef6 80E0      		ldi r24,0
 55437 17ef8 90E0      		ldi r25,0
 55438 17efa A0E8      		ldi r26,lo8(-128)
 55439 17efc BFE3      		ldi r27,lo8(63)
 55440 17efe 00C0      		rjmp .L2268
 55441               	.L2318:
 55442               		.loc 2 5300 0 discriminator 2
 55443 17f00 8C85      		ldd r24,Y+12
 55444 17f02 9D85      		ldd r25,Y+13
 55445 17f04 AE85      		ldd r26,Y+14
 55446 17f06 BF85      		ldd r27,Y+15
 55447               	.L2268:
 55448               		.loc 2 5300 0 discriminator 8
 55449 17f08 9C01      		movw r18,r24
 55450 17f0a AD01      		movw r20,r26
 55451 17f0c C701      		movw r24,r14
 55452 17f0e B601      		movw r22,r12
 55453 17f10 0E94 0000 		call __divsf3
 55454 17f14 DC01      		movw r26,r24
 55455 17f16 CB01      		movw r24,r22
 55456 17f18 2C89      		ldd r18,Y+20
 55457 17f1a 3D89      		ldd r19,Y+21
 55458 17f1c 4E89      		ldd r20,Y+22
 55459 17f1e 5F89      		ldd r21,Y+23
 55460 17f20 BC01      		movw r22,r24
 55461 17f22 CD01      		movw r24,r26
 55462 17f24 0E94 0000 		call __addsf3
 55463 17f28 DC01      		movw r26,r24
 55464 17f2a CB01      		movw r24,r22
5299:lp_solve_5.5/lp_presolve.c ****         if((Value1 < losum / my_if(my_infinite(lp, losum), my_sign(Value2), Value2) - epsvalue) ||
 55465               		.loc 2 5299 0 is_stmt 1 discriminator 8
 55466 17f2c 2885      		ldd r18,Y+8
 55467 17f2e 3985      		ldd r19,Y+9
 55468 17f30 4A85      		ldd r20,Y+10
 55469 17f32 5B85      		ldd r21,Y+11
 55470 17f34 BC01      		movw r22,r24
 55471 17f36 CD01      		movw r24,r26
 55472 17f38 0E94 0000 		call __ltsf2
 55473 17f3c 8823      		tst r24
 55474 17f3e 04F4      		brge .L2269
 55475               	.L2262:
5301:lp_solve_5.5/lp_presolve.c ****           status = presolve_setstatus(psdata, INFEASIBLE);
 55476               		.loc 2 5301 0
 55477 17f40 88AD      		ldd r24,Y+56
 55478 17f42 99AD      		ldd r25,Y+57
 55479 17f44 20E0      		ldi r18,lo8(.LC21)
 55480 17f46 30E0      		ldi r19,hi8(.LC21)
 55481 17f48 45EB      		ldi r20,lo8(-75)
 55482 17f4a 54E1      		ldi r21,lo8(20)
 55483 17f4c 62E0      		ldi r22,lo8(2)
 55484 17f4e 70E0      		ldi r23,0
 55485 17f50 0E94 0000 		call presolve_setstatusex
 55486 17f54 9B83      		std Y+3,r25
 55487 17f56 8A83      		std Y+2,r24
 55488               	.L2269:
5302:lp_solve_5.5/lp_presolve.c ****         Value2 = Value1;
 55489               		.loc 2 5302 0
 55490 17f58 8885      		ldd r24,Y+8
 55491 17f5a 9985      		ldd r25,Y+9
 55492 17f5c AA85      		ldd r26,Y+10
 55493 17f5e BB85      		ldd r27,Y+11
 55494 17f60 8C87      		std Y+12,r24
 55495 17f62 9D87      		std Y+13,r25
 55496 17f64 AE87      		std Y+14,r26
 55497 17f66 BF87      		std Y+15,r27
 55498               	.L2253:
5303:lp_solve_5.5/lp_presolve.c ****       }
5304:lp_solve_5.5/lp_presolve.c **** 
5305:lp_solve_5.5/lp_presolve.c ****       /* Proceed to fix and remove variable (if it is not a SOS member) */
5306:lp_solve_5.5/lp_presolve.c ****       if(status == RUNNING) {
 55499               		.loc 2 5306 0
 55500 17f68 8A81      		ldd r24,Y+2
 55501 17f6a 9B81      		ldd r25,Y+3
 55502 17f6c 0897      		sbiw r24,8
 55503 17f6e 01F0      		breq .+2
 55504 17f70 00C0      		rjmp .L2271
5307:lp_solve_5.5/lp_presolve.c ****         if((fabs(Value2-Value1) < epsvalue) && (fabs(Value2) > epsvalue)) {
 55505               		.loc 2 5307 0
 55506 17f72 2885      		ldd r18,Y+8
 55507 17f74 3985      		ldd r19,Y+9
 55508 17f76 4A85      		ldd r20,Y+10
 55509 17f78 5B85      		ldd r21,Y+11
 55510 17f7a 6C85      		ldd r22,Y+12
 55511 17f7c 7D85      		ldd r23,Y+13
 55512 17f7e 8E85      		ldd r24,Y+14
 55513 17f80 9F85      		ldd r25,Y+15
 55514 17f82 0E94 0000 		call __subsf3
 55515 17f86 DC01      		movw r26,r24
 55516 17f88 CB01      		movw r24,r22
 55517 17f8a BF77      		andi r27,0x7f
 55518 17f8c 2C89      		ldd r18,Y+20
 55519 17f8e 3D89      		ldd r19,Y+21
 55520 17f90 4E89      		ldd r20,Y+22
 55521 17f92 5F89      		ldd r21,Y+23
 55522 17f94 BC01      		movw r22,r24
 55523 17f96 CD01      		movw r24,r26
 55524 17f98 0E94 0000 		call __ltsf2
 55525 17f9c 8823      		tst r24
 55526 17f9e 04F0      		brlt .+2
 55527 17fa0 00C0      		rjmp .L2272
 55528               		.loc 2 5307 0 is_stmt 0 discriminator 1
 55529 17fa2 8C85      		ldd r24,Y+12
 55530 17fa4 9D85      		ldd r25,Y+13
 55531 17fa6 AE85      		ldd r26,Y+14
 55532 17fa8 BF85      		ldd r27,Y+15
 55533 17faa BF77      		andi r27,0x7f
 55534 17fac 2C89      		ldd r18,Y+20
 55535 17fae 3D89      		ldd r19,Y+21
 55536 17fb0 4E89      		ldd r20,Y+22
 55537 17fb2 5F89      		ldd r21,Y+23
 55538 17fb4 BC01      		movw r22,r24
 55539 17fb6 CD01      		movw r24,r26
 55540 17fb8 0E94 0000 		call __gtsf2
 55541 17fbc 1816      		cp __zero_reg__,r24
 55542 17fbe 04F0      		brlt .+2
 55543 17fc0 00C0      		rjmp .L2272
 55544               	.LBB16:
5308:lp_solve_5.5/lp_presolve.c ****           MYBOOL isSOS     = (MYBOOL) (SOS_is_member(lp->SOS, 0, j) != FALSE),
 55545               		.loc 2 5308 0 is_stmt 1
 55546 17fc2 8889      		ldd r24,Y+16
 55547 17fc4 9989      		ldd r25,Y+17
 55548 17fc6 8256      		subi r24,98
 55549 17fc8 9D4F      		sbci r25,-3
 55550 17fca FC01      		movw r30,r24
 55551 17fcc 8081      		ld r24,Z
 55552 17fce 9181      		ldd r25,Z+1
 55553 17fd0 2A8D      		ldd r18,Y+26
 55554 17fd2 3B8D      		ldd r19,Y+27
 55555 17fd4 A901      		movw r20,r18
 55556 17fd6 60E0      		ldi r22,0
 55557 17fd8 70E0      		ldi r23,0
 55558 17fda 0E94 0000 		call SOS_is_member
 55559 17fde 21E0      		ldi r18,lo8(1)
 55560 17fe0 892B      		or r24,r25
 55561 17fe2 01F4      		brne .L2275
 55562 17fe4 20E0      		ldi r18,0
 55563               	.L2275:
 55564 17fe6 2CA3      		std Y+36,r18
5309:lp_solve_5.5/lp_presolve.c ****                  deleteSOS = isSOS && presolve_candeletevar(psdata, j);
 55565               		.loc 2 5309 0
 55566 17fe8 8CA1      		ldd r24,Y+36
 55567 17fea 8823      		tst r24
 55568 17fec 01F0      		breq .L2276
 55569               		.loc 2 5309 0 is_stmt 0 discriminator 1
 55570 17fee 2A8D      		ldd r18,Y+26
 55571 17ff0 3B8D      		ldd r19,Y+27
 55572 17ff2 88AD      		ldd r24,Y+56
 55573 17ff4 99AD      		ldd r25,Y+57
 55574 17ff6 B901      		movw r22,r18
 55575 17ff8 0E94 0000 		call presolve_candeletevar
 55576 17ffc 8823      		tst r24
 55577 17ffe 01F0      		breq .L2276
 55578               		.loc 2 5309 0 discriminator 3
 55579 18000 81E0      		ldi r24,lo8(1)
 55580 18002 90E0      		ldi r25,0
 55581 18004 00C0      		rjmp .L2277
 55582               	.L2276:
 55583               		.loc 2 5309 0 discriminator 4
 55584 18006 80E0      		ldi r24,0
 55585 18008 90E0      		ldi r25,0
 55586               	.L2277:
 55587               		.loc 2 5309 0 discriminator 6
 55588 1800a 8DA3      		std Y+37,r24
5310:lp_solve_5.5/lp_presolve.c ****           if((Value1 != 0) && deleteSOS) {
 55589               		.loc 2 5310 0 is_stmt 1 discriminator 6
 55590 1800c 20E0      		ldi r18,0
 55591 1800e 30E0      		ldi r19,0
 55592 18010 A901      		movw r20,r18
 55593 18012 6885      		ldd r22,Y+8
 55594 18014 7985      		ldd r23,Y+9
 55595 18016 8A85      		ldd r24,Y+10
 55596 18018 9B85      		ldd r25,Y+11
 55597 1801a 0E94 0000 		call __nesf2
 55598 1801e 8823      		tst r24
 55599 18020 01F0      		breq .L2278
 55600               		.loc 2 5310 0 is_stmt 0 discriminator 1
 55601 18022 8DA1      		ldd r24,Y+37
 55602 18024 8823      		tst r24
 55603 18026 01F0      		breq .L2278
5311:lp_solve_5.5/lp_presolve.c ****             if(!presolve_fixSOS1(psdata, j, Value1, &iConRemove, &iVarFixed))
 55604               		.loc 2 5311 0 is_stmt 1
 55605 18028 AE01      		movw r20,r28
 55606 1802a 465D      		subi r20,-42
 55607 1802c 5F4F      		sbci r21,-1
 55608 1802e 9E01      		movw r18,r28
 55609 18030 285D      		subi r18,-40
 55610 18032 3F4F      		sbci r19,-1
 55611 18034 8885      		ldd r24,Y+8
 55612 18036 9985      		ldd r25,Y+9
 55613 18038 AA85      		ldd r26,Y+10
 55614 1803a BB85      		ldd r27,Y+11
 55615 1803c 6A8D      		ldd r22,Y+26
 55616 1803e 7B8D      		ldd r23,Y+27
 55617 18040 E8AD      		ldd r30,Y+56
 55618 18042 F9AD      		ldd r31,Y+57
 55619 18044 7A01      		movw r14,r20
 55620 18046 8901      		movw r16,r18
 55621 18048 9C01      		movw r18,r24
 55622 1804a AD01      		movw r20,r26
 55623 1804c CF01      		movw r24,r30
 55624 1804e 0E94 0000 		call presolve_fixSOS1
 55625 18052 8823      		tst r24
 55626 18054 01F4      		brne .L2280
5312:lp_solve_5.5/lp_presolve.c ****               status = presolve_setstatus(psdata, INFEASIBLE);
 55627               		.loc 2 5312 0
 55628 18056 88AD      		ldd r24,Y+56
 55629 18058 99AD      		ldd r25,Y+57
 55630 1805a 20E0      		ldi r18,lo8(.LC21)
 55631 1805c 30E0      		ldi r19,hi8(.LC21)
 55632 1805e 40EC      		ldi r20,lo8(-64)
 55633 18060 54E1      		ldi r21,lo8(20)
 55634 18062 62E0      		ldi r22,lo8(2)
 55635 18064 70E0      		ldi r23,0
 55636 18066 0E94 0000 		call presolve_setstatusex
 55637 1806a 9B83      		std Y+3,r25
 55638 1806c 8A83      		std Y+2,r24
 55639               	.L2280:
5313:lp_solve_5.5/lp_presolve.c ****               psdata->forceupdate = TRUE;
 55640               		.loc 2 5313 0
 55641 1806e 88AD      		ldd r24,Y+56
 55642 18070 99AD      		ldd r25,Y+57
 55643 18072 21E0      		ldi r18,lo8(1)
 55644 18074 FC01      		movw r30,r24
 55645 18076 24A3      		std Z+36,r18
 55646 18078 00C0      		rjmp .L2281
 55647               	.L2278:
5314:lp_solve_5.5/lp_presolve.c ****           }
5315:lp_solve_5.5/lp_presolve.c ****           else {
5316:lp_solve_5.5/lp_presolve.c ****             if(!presolve_colfix(psdata, j, Value1, (MYBOOL) !isSOS, NULL))
 55648               		.loc 2 5316 0
 55649 1807a 81E0      		ldi r24,lo8(1)
 55650 1807c 9CA1      		ldd r25,Y+36
 55651 1807e 9923      		tst r25
 55652 18080 01F0      		breq .L2282
 55653 18082 80E0      		ldi r24,0
 55654               	.L2282:
 55655 18084 282F      		mov r18,r24
 55656 18086 8885      		ldd r24,Y+8
 55657 18088 9985      		ldd r25,Y+9
 55658 1808a AA85      		ldd r26,Y+10
 55659 1808c BB85      		ldd r27,Y+11
 55660 1808e 6A8D      		ldd r22,Y+26
 55661 18090 7B8D      		ldd r23,Y+27
 55662 18092 E8AD      		ldd r30,Y+56
 55663 18094 F9AD      		ldd r31,Y+57
 55664 18096 E12C      		mov r14,__zero_reg__
 55665 18098 F12C      		mov r15,__zero_reg__
 55666 1809a 022F      		mov r16,r18
 55667 1809c 9C01      		movw r18,r24
 55668 1809e AD01      		movw r20,r26
 55669 180a0 CF01      		movw r24,r30
 55670 180a2 0E94 0000 		call presolve_colfix
 55671 180a6 8823      		tst r24
 55672 180a8 01F4      		brne .L2283
5317:lp_solve_5.5/lp_presolve.c ****               status = presolve_setstatus(psdata, INFEASIBLE);
 55673               		.loc 2 5317 0
 55674 180aa 88AD      		ldd r24,Y+56
 55675 180ac 99AD      		ldd r25,Y+57
 55676 180ae 20E0      		ldi r18,lo8(.LC21)
 55677 180b0 30E0      		ldi r19,hi8(.LC21)
 55678 180b2 45EC      		ldi r20,lo8(-59)
 55679 180b4 54E1      		ldi r21,lo8(20)
 55680 180b6 62E0      		ldi r22,lo8(2)
 55681 180b8 70E0      		ldi r23,0
 55682 180ba 0E94 0000 		call presolve_setstatusex
 55683 180be 9B83      		std Y+3,r25
 55684 180c0 8A83      		std Y+2,r24
 55685               	.LBE16:
5307:lp_solve_5.5/lp_presolve.c ****           MYBOOL isSOS     = (MYBOOL) (SOS_is_member(lp->SOS, 0, j) != FALSE),
 55686               		.loc 2 5307 0
 55687 180c2 00C0      		rjmp .L2271
 55688               	.L2283:
 55689               	.LBB17:
5318:lp_solve_5.5/lp_presolve.c ****             else if(isSOS && !deleteSOS)
 55690               		.loc 2 5318 0
 55691 180c4 8CA1      		ldd r24,Y+36
 55692 180c6 8823      		tst r24
 55693 180c8 01F0      		breq .L2284
 55694               		.loc 2 5318 0 is_stmt 0 discriminator 1
 55695 180ca 8DA1      		ldd r24,Y+37
 55696 180cc 8823      		tst r24
 55697 180ce 01F4      		brne .L2284
5319:lp_solve_5.5/lp_presolve.c ****               iBoundTighten++;
 55698               		.loc 2 5319 0 is_stmt 1
 55699 180d0 8CA5      		ldd r24,Y+44
 55700 180d2 9DA5      		ldd r25,Y+45
 55701 180d4 0196      		adiw r24,1
 55702 180d6 9DA7      		std Y+45,r25
 55703 180d8 8CA7      		std Y+44,r24
 55704 180da 00C0      		rjmp .L2281
 55705               	.L2284:
5320:lp_solve_5.5/lp_presolve.c ****             else {
5321:lp_solve_5.5/lp_presolve.c ****               presolve_colremove(psdata, j, TRUE);
 55706               		.loc 2 5321 0
 55707 180dc 2A8D      		ldd r18,Y+26
 55708 180de 3B8D      		ldd r19,Y+27
 55709 180e0 88AD      		ldd r24,Y+56
 55710 180e2 99AD      		ldd r25,Y+57
 55711 180e4 41E0      		ldi r20,lo8(1)
 55712 180e6 B901      		movw r22,r18
 55713 180e8 0E94 0000 		call presolve_colremove
5322:lp_solve_5.5/lp_presolve.c ****               iVarFixed++;
 55714               		.loc 2 5322 0
 55715 180ec 8AA5      		ldd r24,Y+42
 55716 180ee 9BA5      		ldd r25,Y+43
 55717 180f0 0196      		adiw r24,1
 55718 180f2 9BA7      		std Y+43,r25
 55719 180f4 8AA7      		std Y+42,r24
 55720               	.LBE17:
5307:lp_solve_5.5/lp_presolve.c ****           MYBOOL isSOS     = (MYBOOL) (SOS_is_member(lp->SOS, 0, j) != FALSE),
 55721               		.loc 2 5307 0
 55722 180f6 00C0      		rjmp .L2271
 55723               	.L2281:
 55724 180f8 00C0      		rjmp .L2271
 55725               	.L2272:
5323:lp_solve_5.5/lp_presolve.c ****             }
5324:lp_solve_5.5/lp_presolve.c ****           }
5325:lp_solve_5.5/lp_presolve.c ****         }
5326:lp_solve_5.5/lp_presolve.c ****         else
5327:lp_solve_5.5/lp_presolve.c ****           status = presolve_colsingleton(psdata, i, j, &iBoundTighten);
 55726               		.loc 2 5327 0
 55727 180fa 9E01      		movw r18,r28
 55728 180fc 245D      		subi r18,-44
 55729 180fe 3F4F      		sbci r19,-1
 55730 18100 4A8D      		ldd r20,Y+26
 55731 18102 5B8D      		ldd r21,Y+27
 55732 18104 6C81      		ldd r22,Y+4
 55733 18106 7D81      		ldd r23,Y+5
 55734 18108 88AD      		ldd r24,Y+56
 55735 1810a 99AD      		ldd r25,Y+57
 55736 1810c 0E94 0000 		call presolve_colsingleton
 55737 18110 9B83      		std Y+3,r25
 55738 18112 8A83      		std Y+2,r24
 55739               	.L2271:
5328:lp_solve_5.5/lp_presolve.c ****       }
5329:lp_solve_5.5/lp_presolve.c ****       if(status == INFEASIBLE) {
 55740               		.loc 2 5329 0
 55741 18114 8A81      		ldd r24,Y+2
 55742 18116 9B81      		ldd r25,Y+3
 55743 18118 0297      		sbiw r24,2
 55744 1811a 01F4      		brne .+2
 55745 1811c 00C0      		rjmp .L2320
5330:lp_solve_5.5/lp_presolve.c ****         break;
5331:lp_solve_5.5/lp_presolve.c ****       }
5332:lp_solve_5.5/lp_presolve.c ****       if(psdata->forceupdate != AUTOMATIC) {
 55746               		.loc 2 5332 0
 55747 1811e 88AD      		ldd r24,Y+56
 55748 18120 99AD      		ldd r25,Y+57
 55749 18122 FC01      		movw r30,r24
 55750 18124 84A1      		ldd r24,Z+36
 55751 18126 8230      		cpi r24,lo8(2)
 55752 18128 01F4      		brne .+2
 55753 1812a 00C0      		rjmp .L2249
5333:lp_solve_5.5/lp_presolve.c ****         /* Store dual recovery information and code for deletion */
5334:lp_solve_5.5/lp_presolve.c ****         presolve_storeDualUndo(psdata, i, j);
 55754               		.loc 2 5334 0
 55755 1812c 4A8D      		ldd r20,Y+26
 55756 1812e 5B8D      		ldd r21,Y+27
 55757 18130 2C81      		ldd r18,Y+4
 55758 18132 3D81      		ldd r19,Y+5
 55759 18134 88AD      		ldd r24,Y+56
 55760 18136 99AD      		ldd r25,Y+57
 55761 18138 B901      		movw r22,r18
 55762 1813a 0E94 0000 		call presolve_storeDualUndo
5335:lp_solve_5.5/lp_presolve.c ****         candelete = TRUE;
 55763               		.loc 2 5335 0
 55764 1813e 81E0      		ldi r24,lo8(1)
 55765 18140 8983      		std Y+1,r24
5332:lp_solve_5.5/lp_presolve.c ****         /* Store dual recovery information and code for deletion */
 55766               		.loc 2 5332 0
 55767 18142 00C0      		rjmp .L2249
 55768               	.L2250:
5336:lp_solve_5.5/lp_presolve.c ****       }
5337:lp_solve_5.5/lp_presolve.c ****     }
5338:lp_solve_5.5/lp_presolve.c **** 
5339:lp_solve_5.5/lp_presolve.c ****     /* Delete non-empty rows and variables that are completely determined at zero */
5340:lp_solve_5.5/lp_presolve.c ****     else if((j > 0)                            /* Only examine non-empty rows, */
 55769               		.loc 2 5340 0
 55770 18144 8A8D      		ldd r24,Y+26
 55771 18146 9B8D      		ldd r25,Y+27
 55772 18148 1816      		cp __zero_reg__,r24
 55773 1814a 1906      		cpc __zero_reg__,r25
 55774 1814c 04F0      		brlt .+2
 55775 1814e 00C0      		rjmp .L2287
5341:lp_solve_5.5/lp_presolve.c ****        && (fabs(lp->orig_rhs[i]) < epsvalue)   /* .. and the current RHS is zero, */
 55776               		.loc 2 5341 0
 55777 18150 8889      		ldd r24,Y+16
 55778 18152 9989      		ldd r25,Y+17
 55779 18154 8A55      		subi r24,90
 55780 18156 9D4F      		sbci r25,-3
 55781 18158 FC01      		movw r30,r24
 55782 1815a 2081      		ld r18,Z
 55783 1815c 3181      		ldd r19,Z+1
 55784 1815e 8C81      		ldd r24,Y+4
 55785 18160 9D81      		ldd r25,Y+5
 55786 18162 880F      		lsl r24
 55787 18164 991F      		rol r25
 55788 18166 880F      		lsl r24
 55789 18168 991F      		rol r25
 55790 1816a 820F      		add r24,r18
 55791 1816c 931F      		adc r25,r19
 55792 1816e FC01      		movw r30,r24
 55793 18170 8081      		ld r24,Z
 55794 18172 9181      		ldd r25,Z+1
 55795 18174 A281      		ldd r26,Z+2
 55796 18176 B381      		ldd r27,Z+3
 55797 18178 BF77      		andi r27,0x7f
 55798 1817a 2C89      		ldd r18,Y+20
 55799 1817c 3D89      		ldd r19,Y+21
 55800 1817e 4E89      		ldd r20,Y+22
 55801 18180 5F89      		ldd r21,Y+23
 55802 18182 BC01      		movw r22,r24
 55803 18184 CD01      		movw r24,r26
 55804 18186 0E94 0000 		call __ltsf2
 55805 1818a 8823      		tst r24
 55806 1818c 04F0      		brlt .+2
 55807 1818e 00C0      		rjmp .L2287
5342:lp_solve_5.5/lp_presolve.c ****        && ((psdata->rows->plucount[i] == 0) ||
 55808               		.loc 2 5342 0
 55809 18190 88AD      		ldd r24,Y+56
 55810 18192 99AD      		ldd r25,Y+57
 55811 18194 FC01      		movw r30,r24
 55812 18196 8081      		ld r24,Z
 55813 18198 9181      		ldd r25,Z+1
 55814 1819a FC01      		movw r30,r24
 55815 1819c 2681      		ldd r18,Z+6
 55816 1819e 3781      		ldd r19,Z+7
 55817 181a0 8C81      		ldd r24,Y+4
 55818 181a2 9D81      		ldd r25,Y+5
 55819 181a4 880F      		lsl r24
 55820 181a6 991F      		rol r25
 55821 181a8 820F      		add r24,r18
 55822 181aa 931F      		adc r25,r19
 55823 181ac FC01      		movw r30,r24
 55824 181ae 8081      		ld r24,Z
 55825 181b0 9181      		ldd r25,Z+1
 55826 181b2 892B      		or r24,r25
 55827 181b4 01F0      		breq .L2289
5343:lp_solve_5.5/lp_presolve.c ****            (psdata->rows->negcount[i] == 0))   /* .. and the parameter signs are all equal, */
 55828               		.loc 2 5343 0 discriminator 1
 55829 181b6 88AD      		ldd r24,Y+56
 55830 181b8 99AD      		ldd r25,Y+57
 55831 181ba FC01      		movw r30,r24
 55832 181bc 8081      		ld r24,Z
 55833 181be 9181      		ldd r25,Z+1
 55834 181c0 FC01      		movw r30,r24
 55835 181c2 2085      		ldd r18,Z+8
 55836 181c4 3185      		ldd r19,Z+9
 55837 181c6 8C81      		ldd r24,Y+4
 55838 181c8 9D81      		ldd r25,Y+5
 55839 181ca 880F      		lsl r24
 55840 181cc 991F      		rol r25
 55841 181ce 820F      		add r24,r18
 55842 181d0 931F      		adc r25,r19
 55843 181d2 FC01      		movw r30,r24
 55844 181d4 8081      		ld r24,Z
 55845 181d6 9181      		ldd r25,Z+1
5342:lp_solve_5.5/lp_presolve.c ****        && ((psdata->rows->plucount[i] == 0) ||
 55846               		.loc 2 5342 0 discriminator 1
 55847 181d8 892B      		or r24,r25
 55848 181da 01F0      		breq .+2
 55849 181dc 00C0      		rjmp .L2287
 55850               	.L2289:
5344:lp_solve_5.5/lp_presolve.c ****        && (psdata->rows->pluneg[i] == 0)       /* .. and no (quasi) free variables, */
 55851               		.loc 2 5344 0
 55852 181de 88AD      		ldd r24,Y+56
 55853 181e0 99AD      		ldd r25,Y+57
 55854 181e2 FC01      		movw r30,r24
 55855 181e4 8081      		ld r24,Z
 55856 181e6 9181      		ldd r25,Z+1
 55857 181e8 FC01      		movw r30,r24
 55858 181ea 2285      		ldd r18,Z+10
 55859 181ec 3385      		ldd r19,Z+11
 55860 181ee 8C81      		ldd r24,Y+4
 55861 181f0 9D81      		ldd r25,Y+5
 55862 181f2 880F      		lsl r24
 55863 181f4 991F      		rol r25
 55864 181f6 820F      		add r24,r18
 55865 181f8 931F      		adc r25,r19
 55866 181fa FC01      		movw r30,r24
 55867 181fc 8081      		ld r24,Z
 55868 181fe 9181      		ldd r25,Z+1
 55869 18200 892B      		or r24,r25
 55870 18202 01F0      		breq .+2
 55871 18204 00C0      		rjmp .L2287
5345:lp_solve_5.5/lp_presolve.c ****        && (is_constr_type(lp, i, EQ)
 55872               		.loc 2 5345 0
 55873 18206 2C81      		ldd r18,Y+4
 55874 18208 3D81      		ldd r19,Y+5
 55875 1820a 8889      		ldd r24,Y+16
 55876 1820c 9989      		ldd r25,Y+17
 55877 1820e 43E0      		ldi r20,lo8(3)
 55878 18210 50E0      		ldi r21,0
 55879 18212 B901      		movw r22,r18
 55880 18214 0E94 0000 		call is_constr_type
 55881 18218 8823      		tst r24
 55882 1821a 01F4      		brne .L2290
5346:lp_solve_5.5/lp_presolve.c **** #ifdef FindImpliedEqualities
5347:lp_solve_5.5/lp_presolve.c ****            || (fabs(lorhs-upsum) < epsvalue)   /* Convert to equalities */
 55883               		.loc 2 5347 0
 55884 1821c 8CA9      		ldd r24,Y+52
 55885 1821e 9DA9      		ldd r25,Y+53
 55886 18220 AEA9      		ldd r26,Y+54
 55887 18222 BFA9      		ldd r27,Y+55
 55888 18224 9C01      		movw r18,r24
 55889 18226 AD01      		movw r20,r26
 55890 18228 6C8D      		ldd r22,Y+28
 55891 1822a 7D8D      		ldd r23,Y+29
 55892 1822c 8E8D      		ldd r24,Y+30
 55893 1822e 9F8D      		ldd r25,Y+31
 55894 18230 0E94 0000 		call __subsf3
 55895 18234 DC01      		movw r26,r24
 55896 18236 CB01      		movw r24,r22
 55897 18238 BF77      		andi r27,0x7f
 55898 1823a 2C89      		ldd r18,Y+20
 55899 1823c 3D89      		ldd r19,Y+21
 55900 1823e 4E89      		ldd r20,Y+22
 55901 18240 5F89      		ldd r21,Y+23
 55902 18242 BC01      		movw r22,r24
 55903 18244 CD01      		movw r24,r26
 55904 18246 0E94 0000 		call __ltsf2
 55905 1824a 8823      		tst r24
 55906 1824c 04F0      		brlt .L2290
5348:lp_solve_5.5/lp_presolve.c ****            || (fabs(uprhs-losum) < epsvalue)   /* Convert to equalities */
 55907               		.loc 2 5348 0
 55908 1824e 88A9      		ldd r24,Y+48
 55909 18250 99A9      		ldd r25,Y+49
 55910 18252 AAA9      		ldd r26,Y+50
 55911 18254 BBA9      		ldd r27,Y+51
 55912 18256 9C01      		movw r18,r24
 55913 18258 AD01      		movw r20,r26
 55914 1825a 68A1      		ldd r22,Y+32
 55915 1825c 79A1      		ldd r23,Y+33
 55916 1825e 8AA1      		ldd r24,Y+34
 55917 18260 9BA1      		ldd r25,Y+35
 55918 18262 0E94 0000 		call __subsf3
 55919 18266 DC01      		movw r26,r24
 55920 18268 CB01      		movw r24,r22
 55921 1826a BF77      		andi r27,0x7f
 55922 1826c 2C89      		ldd r18,Y+20
 55923 1826e 3D89      		ldd r19,Y+21
 55924 18270 4E89      		ldd r20,Y+22
 55925 18272 5F89      		ldd r21,Y+23
 55926 18274 BC01      		movw r22,r24
 55927 18276 CD01      		movw r24,r26
 55928 18278 0E94 0000 		call __ltsf2
 55929 1827c 8823      		tst r24
 55930 1827e 04F4      		brge .L2287
 55931               	.L2290:
5349:lp_solve_5.5/lp_presolve.c **** #endif
5350:lp_solve_5.5/lp_presolve.c ****           )
5351:lp_solve_5.5/lp_presolve.c ****           ) {
5352:lp_solve_5.5/lp_presolve.c **** 
5353:lp_solve_5.5/lp_presolve.c ****       /* Delete the columns we can delete */
5354:lp_solve_5.5/lp_presolve.c ****       status = presolve_rowfixzero(psdata, i, &iVarFixed);
 55932               		.loc 2 5354 0
 55933 18280 AE01      		movw r20,r28
 55934 18282 465D      		subi r20,-42
 55935 18284 5F4F      		sbci r21,-1
 55936 18286 2C81      		ldd r18,Y+4
 55937 18288 3D81      		ldd r19,Y+5
 55938 1828a 88AD      		ldd r24,Y+56
 55939 1828c 99AD      		ldd r25,Y+57
 55940 1828e B901      		movw r22,r18
 55941 18290 0E94 0000 		call presolve_rowfixzero
 55942 18294 9B83      		std Y+3,r25
 55943 18296 8A83      		std Y+2,r24
5355:lp_solve_5.5/lp_presolve.c **** 
5356:lp_solve_5.5/lp_presolve.c ****       /* Then delete the row, which is redundant */
5357:lp_solve_5.5/lp_presolve.c ****       if(status == RUNNING)
 55944               		.loc 2 5357 0
 55945 18298 8A81      		ldd r24,Y+2
 55946 1829a 9B81      		ldd r25,Y+3
 55947 1829c 0897      		sbiw r24,8
 55948 1829e 01F0      		breq .+2
 55949 182a0 00C0      		rjmp .L2249
5358:lp_solve_5.5/lp_presolve.c ****         candelete = TRUE;
 55950               		.loc 2 5358 0
 55951 182a2 81E0      		ldi r24,lo8(1)
 55952 182a4 8983      		std Y+1,r24
5357:lp_solve_5.5/lp_presolve.c ****         candelete = TRUE;
 55953               		.loc 2 5357 0
 55954 182a6 00C0      		rjmp .L2249
 55955               	.L2287:
5359:lp_solve_5.5/lp_presolve.c ****     }
5360:lp_solve_5.5/lp_presolve.c **** 
5361:lp_solve_5.5/lp_presolve.c **** 
5362:lp_solve_5.5/lp_presolve.c ****     /* Check if we have a constraint made redundant through bounds on individual
5363:lp_solve_5.5/lp_presolve.c ****        variables; such constraints are often referred to as "forcing constraints" */
5364:lp_solve_5.5/lp_presolve.c ****     else if((losum >= lorhs-epsvalue) &&
 55956               		.loc 2 5364 0
 55957 182a8 2C89      		ldd r18,Y+20
 55958 182aa 3D89      		ldd r19,Y+21
 55959 182ac 4E89      		ldd r20,Y+22
 55960 182ae 5F89      		ldd r21,Y+23
 55961 182b0 6C8D      		ldd r22,Y+28
 55962 182b2 7D8D      		ldd r23,Y+29
 55963 182b4 8E8D      		ldd r24,Y+30
 55964 182b6 9F8D      		ldd r25,Y+31
 55965 182b8 0E94 0000 		call __subsf3
 55966 182bc DC01      		movw r26,r24
 55967 182be CB01      		movw r24,r22
 55968 182c0 7C01      		movw r14,r24
 55969 182c2 8D01      		movw r16,r26
 55970 182c4 88A9      		ldd r24,Y+48
 55971 182c6 99A9      		ldd r25,Y+49
 55972 182c8 AAA9      		ldd r26,Y+50
 55973 182ca BBA9      		ldd r27,Y+51
 55974 182cc 9C01      		movw r18,r24
 55975 182ce AD01      		movw r20,r26
 55976 182d0 C801      		movw r24,r16
 55977 182d2 B701      		movw r22,r14
 55978 182d4 0E94 0000 		call __lesf2
 55979 182d8 1816      		cp __zero_reg__,r24
 55980 182da 04F4      		brge .+2
 55981 182dc 00C0      		rjmp .L2249
5365:lp_solve_5.5/lp_presolve.c ****              (upsum <= uprhs+epsvalue)) {
 55982               		.loc 2 5365 0 discriminator 1
 55983 182de 2C89      		ldd r18,Y+20
 55984 182e0 3D89      		ldd r19,Y+21
 55985 182e2 4E89      		ldd r20,Y+22
 55986 182e4 5F89      		ldd r21,Y+23
 55987 182e6 68A1      		ldd r22,Y+32
 55988 182e8 79A1      		ldd r23,Y+33
 55989 182ea 8AA1      		ldd r24,Y+34
 55990 182ec 9BA1      		ldd r25,Y+35
 55991 182ee 0E94 0000 		call __addsf3
 55992 182f2 DC01      		movw r26,r24
 55993 182f4 CB01      		movw r24,r22
 55994 182f6 7C01      		movw r14,r24
 55995 182f8 8D01      		movw r16,r26
 55996 182fa 8CA9      		ldd r24,Y+52
 55997 182fc 9DA9      		ldd r25,Y+53
 55998 182fe AEA9      		ldd r26,Y+54
 55999 18300 BFA9      		ldd r27,Y+55
5364:lp_solve_5.5/lp_presolve.c ****              (upsum <= uprhs+epsvalue)) {
 56000               		.loc 2 5364 0 discriminator 1
 56001 18302 9C01      		movw r18,r24
 56002 18304 AD01      		movw r20,r26
 56003 18306 C801      		movw r24,r16
 56004 18308 B701      		movw r22,r14
 56005 1830a 0E94 0000 		call __gesf2
 56006 1830e 8823      		tst r24
 56007 18310 04F4      		brge .+2
 56008 18312 00C0      		rjmp .L2249
5366:lp_solve_5.5/lp_presolve.c **** 
5367:lp_solve_5.5/lp_presolve.c ****       /* Check if we can also fix all the variables */
5368:lp_solve_5.5/lp_presolve.c ****       if(fabs(losum-upsum) < epsvalue) {
 56009               		.loc 2 5368 0
 56010 18314 88A9      		ldd r24,Y+48
 56011 18316 99A9      		ldd r25,Y+49
 56012 18318 AAA9      		ldd r26,Y+50
 56013 1831a BBA9      		ldd r27,Y+51
 56014 1831c 2CA9      		ldd r18,Y+52
 56015 1831e 3DA9      		ldd r19,Y+53
 56016 18320 4EA9      		ldd r20,Y+54
 56017 18322 5FA9      		ldd r21,Y+55
 56018 18324 BC01      		movw r22,r24
 56019 18326 CD01      		movw r24,r26
 56020 18328 0E94 0000 		call __subsf3
 56021 1832c DC01      		movw r26,r24
 56022 1832e CB01      		movw r24,r22
 56023 18330 BF77      		andi r27,0x7f
 56024 18332 2C89      		ldd r18,Y+20
 56025 18334 3D89      		ldd r19,Y+21
 56026 18336 4E89      		ldd r20,Y+22
 56027 18338 5F89      		ldd r21,Y+23
 56028 1833a BC01      		movw r22,r24
 56029 1833c CD01      		movw r24,r26
 56030 1833e 0E94 0000 		call __ltsf2
 56031 18342 8823      		tst r24
 56032 18344 04F0      		brlt .+2
 56033 18346 00C0      		rjmp .L2295
5369:lp_solve_5.5/lp_presolve.c ****         item = 0;
 56034               		.loc 2 5369 0
 56035 18348 1FA6      		std Y+47,__zero_reg__
 56036 1834a 1EA6      		std Y+46,__zero_reg__
5370:lp_solve_5.5/lp_presolve.c ****         jx = presolve_nextcol(psdata, i, &item);
 56037               		.loc 2 5370 0
 56038 1834c AE01      		movw r20,r28
 56039 1834e 425D      		subi r20,-46
 56040 18350 5F4F      		sbci r21,-1
 56041 18352 2C81      		ldd r18,Y+4
 56042 18354 3D81      		ldd r19,Y+5
 56043 18356 88AD      		ldd r24,Y+56
 56044 18358 99AD      		ldd r25,Y+57
 56045 1835a B901      		movw r22,r18
 56046 1835c 0E94 0000 		call presolve_nextcol
 56047 18360 9F83      		std Y+7,r25
 56048 18362 8E83      		std Y+6,r24
5371:lp_solve_5.5/lp_presolve.c ****         while((status == RUNNING) && (jx >= 0)) {
 56049               		.loc 2 5371 0
 56050 18364 00C0      		rjmp .L2297
 56051               	.L2299:
5372:lp_solve_5.5/lp_presolve.c ****           j = ROW_MAT_COLNR(jx);
 56052               		.loc 2 5372 0
 56053 18366 888D      		ldd r24,Y+24
 56054 18368 998D      		ldd r25,Y+25
 56055 1836a FC01      		movw r30,r24
 56056 1836c 2485      		ldd r18,Z+12
 56057 1836e 3585      		ldd r19,Z+13
 56058 18370 888D      		ldd r24,Y+24
 56059 18372 998D      		ldd r25,Y+25
 56060 18374 FC01      		movw r30,r24
 56061 18376 4689      		ldd r20,Z+22
 56062 18378 5789      		ldd r21,Z+23
 56063 1837a 8E81      		ldd r24,Y+6
 56064 1837c 9F81      		ldd r25,Y+7
 56065 1837e 880F      		lsl r24
 56066 18380 991F      		rol r25
 56067 18382 840F      		add r24,r20
 56068 18384 951F      		adc r25,r21
 56069 18386 FC01      		movw r30,r24
 56070 18388 8081      		ld r24,Z
 56071 1838a 9181      		ldd r25,Z+1
 56072 1838c 880F      		lsl r24
 56073 1838e 991F      		rol r25
 56074 18390 820F      		add r24,r18
 56075 18392 931F      		adc r25,r19
 56076 18394 FC01      		movw r30,r24
 56077 18396 8081      		ld r24,Z
 56078 18398 9181      		ldd r25,Z+1
 56079 1839a 9B8F      		std Y+27,r25
 56080 1839c 8A8F      		std Y+26,r24
5373:lp_solve_5.5/lp_presolve.c ****           Value1 = get_lowbo(lp, j);
 56081               		.loc 2 5373 0
 56082 1839e 2A8D      		ldd r18,Y+26
 56083 183a0 3B8D      		ldd r19,Y+27
 56084 183a2 8889      		ldd r24,Y+16
 56085 183a4 9989      		ldd r25,Y+17
 56086 183a6 B901      		movw r22,r18
 56087 183a8 0E94 0000 		call get_lowbo
 56088 183ac DC01      		movw r26,r24
 56089 183ae CB01      		movw r24,r22
 56090 183b0 8887      		std Y+8,r24
 56091 183b2 9987      		std Y+9,r25
 56092 183b4 AA87      		std Y+10,r26
 56093 183b6 BB87      		std Y+11,r27
5374:lp_solve_5.5/lp_presolve.c ****           if(presolve_colfix(psdata, j, Value1, TRUE, &iVarFixed)) {
 56094               		.loc 2 5374 0
 56095 183b8 9E01      		movw r18,r28
 56096 183ba 265D      		subi r18,-42
 56097 183bc 3F4F      		sbci r19,-1
 56098 183be 8885      		ldd r24,Y+8
 56099 183c0 9985      		ldd r25,Y+9
 56100 183c2 AA85      		ldd r26,Y+10
 56101 183c4 BB85      		ldd r27,Y+11
 56102 183c6 6A8D      		ldd r22,Y+26
 56103 183c8 7B8D      		ldd r23,Y+27
 56104 183ca E8AD      		ldd r30,Y+56
 56105 183cc F9AD      		ldd r31,Y+57
 56106 183ce 7901      		movw r14,r18
 56107 183d0 01E0      		ldi r16,lo8(1)
 56108 183d2 9C01      		movw r18,r24
 56109 183d4 AD01      		movw r20,r26
 56110 183d6 CF01      		movw r24,r30
 56111 183d8 0E94 0000 		call presolve_colfix
 56112 183dc 8823      		tst r24
 56113 183de 01F0      		breq .L2298
5375:lp_solve_5.5/lp_presolve.c ****             presolve_colremove(psdata, j, TRUE);
 56114               		.loc 2 5375 0
 56115 183e0 2A8D      		ldd r18,Y+26
 56116 183e2 3B8D      		ldd r19,Y+27
 56117 183e4 88AD      		ldd r24,Y+56
 56118 183e6 99AD      		ldd r25,Y+57
 56119 183e8 41E0      		ldi r20,lo8(1)
 56120 183ea B901      		movw r22,r18
 56121 183ec 0E94 0000 		call presolve_colremove
5376:lp_solve_5.5/lp_presolve.c ****             iVarFixed++;
 56122               		.loc 2 5376 0
 56123 183f0 8AA5      		ldd r24,Y+42
 56124 183f2 9BA5      		ldd r25,Y+43
 56125 183f4 0196      		adiw r24,1
 56126 183f6 9BA7      		std Y+43,r25
 56127 183f8 8AA7      		std Y+42,r24
5377:lp_solve_5.5/lp_presolve.c ****             jx = presolve_nextcol(psdata, i, &item);
 56128               		.loc 2 5377 0
 56129 183fa AE01      		movw r20,r28
 56130 183fc 425D      		subi r20,-46
 56131 183fe 5F4F      		sbci r21,-1
 56132 18400 2C81      		ldd r18,Y+4
 56133 18402 3D81      		ldd r19,Y+5
 56134 18404 88AD      		ldd r24,Y+56
 56135 18406 99AD      		ldd r25,Y+57
 56136 18408 B901      		movw r22,r18
 56137 1840a 0E94 0000 		call presolve_nextcol
 56138 1840e 9F83      		std Y+7,r25
 56139 18410 8E83      		std Y+6,r24
 56140 18412 00C0      		rjmp .L2297
 56141               	.L2298:
5378:lp_solve_5.5/lp_presolve.c ****           }
5379:lp_solve_5.5/lp_presolve.c ****           else
5380:lp_solve_5.5/lp_presolve.c ****             status = presolve_setstatus(psdata, INFEASIBLE);
 56142               		.loc 2 5380 0
 56143 18414 88AD      		ldd r24,Y+56
 56144 18416 99AD      		ldd r25,Y+57
 56145 18418 20E0      		ldi r18,lo8(.LC21)
 56146 1841a 30E0      		ldi r19,hi8(.LC21)
 56147 1841c 44E0      		ldi r20,lo8(4)
 56148 1841e 55E1      		ldi r21,lo8(21)
 56149 18420 62E0      		ldi r22,lo8(2)
 56150 18422 70E0      		ldi r23,0
 56151 18424 0E94 0000 		call presolve_setstatusex
 56152 18428 9B83      		std Y+3,r25
 56153 1842a 8A83      		std Y+2,r24
 56154               	.L2297:
5371:lp_solve_5.5/lp_presolve.c ****           j = ROW_MAT_COLNR(jx);
 56155               		.loc 2 5371 0
 56156 1842c 8A81      		ldd r24,Y+2
 56157 1842e 9B81      		ldd r25,Y+3
 56158 18430 0897      		sbiw r24,8
 56159 18432 01F4      		brne .L2295
5371:lp_solve_5.5/lp_presolve.c ****           j = ROW_MAT_COLNR(jx);
 56160               		.loc 2 5371 0 is_stmt 0 discriminator 1
 56161 18434 8E81      		ldd r24,Y+6
 56162 18436 9F81      		ldd r25,Y+7
 56163 18438 9923      		tst r25
 56164 1843a 04F0      		brlt .+2
 56165 1843c 00C0      		rjmp .L2299
 56166               	.L2295:
5381:lp_solve_5.5/lp_presolve.c ****         }
5382:lp_solve_5.5/lp_presolve.c ****       }
5383:lp_solve_5.5/lp_presolve.c ****       candelete = TRUE;
 56167               		.loc 2 5383 0 is_stmt 1
 56168 1843e 81E0      		ldi r24,lo8(1)
 56169 18440 8983      		std Y+1,r24
 56170               	.L2249:
5384:lp_solve_5.5/lp_presolve.c ****     }
5385:lp_solve_5.5/lp_presolve.c **** 
5386:lp_solve_5.5/lp_presolve.c ****     /* Get next row and do the deletion of the previous, if indicated */
5387:lp_solve_5.5/lp_presolve.c ****     ix = i;
 56171               		.loc 2 5387 0
 56172 18442 8C81      		ldd r24,Y+4
 56173 18444 9D81      		ldd r25,Y+5
 56174 18446 9FA3      		std Y+39,r25
 56175 18448 8EA3      		std Y+38,r24
5388:lp_solve_5.5/lp_presolve.c ****     i = prevActiveLink(psdata->rows->varmap, i);
 56176               		.loc 2 5388 0
 56177 1844a 88AD      		ldd r24,Y+56
 56178 1844c 99AD      		ldd r25,Y+57
 56179 1844e FC01      		movw r30,r24
 56180 18450 8081      		ld r24,Z
 56181 18452 9181      		ldd r25,Z+1
 56182 18454 FC01      		movw r30,r24
 56183 18456 8081      		ld r24,Z
 56184 18458 9181      		ldd r25,Z+1
 56185 1845a 2C81      		ldd r18,Y+4
 56186 1845c 3D81      		ldd r19,Y+5
 56187 1845e B901      		movw r22,r18
 56188 18460 0E94 0000 		call prevActiveLink
 56189 18464 9D83      		std Y+5,r25
 56190 18466 8C83      		std Y+4,r24
5389:lp_solve_5.5/lp_presolve.c ****     if(candelete) {
 56191               		.loc 2 5389 0
 56192 18468 8981      		ldd r24,Y+1
 56193 1846a 8823      		tst r24
 56194 1846c 01F0      		breq .L2245
5390:lp_solve_5.5/lp_presolve.c ****       presolve_rowremove(psdata, ix, TRUE);
 56195               		.loc 2 5390 0
 56196 1846e 2EA1      		ldd r18,Y+38
 56197 18470 3FA1      		ldd r19,Y+39
 56198 18472 88AD      		ldd r24,Y+56
 56199 18474 99AD      		ldd r25,Y+57
 56200 18476 41E0      		ldi r20,lo8(1)
 56201 18478 B901      		movw r22,r18
 56202 1847a 0E94 0000 		call presolve_rowremove
5391:lp_solve_5.5/lp_presolve.c ****       iConRemove++;
 56203               		.loc 2 5391 0
 56204 1847e 88A5      		ldd r24,Y+40
 56205 18480 99A5      		ldd r25,Y+41
 56206 18482 0196      		adiw r24,1
 56207 18484 99A7      		std Y+41,r25
 56208 18486 88A7      		std Y+40,r24
 56209               	.L2245:
5251:lp_solve_5.5/lp_presolve.c **** 
 56210               		.loc 2 5251 0 discriminator 1
 56211 18488 8C81      		ldd r24,Y+4
 56212 1848a 9D81      		ldd r25,Y+5
 56213 1848c 1816      		cp __zero_reg__,r24
 56214 1848e 1906      		cpc __zero_reg__,r25
 56215 18490 04F4      		brge .L2247
5251:lp_solve_5.5/lp_presolve.c **** 
 56216               		.loc 2 5251 0 is_stmt 0 discriminator 2
 56217 18492 8A81      		ldd r24,Y+2
 56218 18494 9B81      		ldd r25,Y+3
 56219 18496 0897      		sbiw r24,8
 56220 18498 01F4      		brne .+2
 56221 1849a 00C0      		rjmp .L2300
 56222 1849c 00C0      		rjmp .L2247
 56223               	.L2320:
5330:lp_solve_5.5/lp_presolve.c ****       }
 56224               		.loc 2 5330 0 is_stmt 1
 56225 1849e 0000      		nop
 56226               	.L2247:
5392:lp_solve_5.5/lp_presolve.c ****     }
5393:lp_solve_5.5/lp_presolve.c ****   }
5394:lp_solve_5.5/lp_presolve.c **** 
5395:lp_solve_5.5/lp_presolve.c ****   /* Remove any "hanging" empty row and columns */
5396:lp_solve_5.5/lp_presolve.c ****   if(status == RUNNING)
 56227               		.loc 2 5396 0
 56228 184a0 8A81      		ldd r24,Y+2
 56229 184a2 9B81      		ldd r25,Y+3
 56230 184a4 0897      		sbiw r24,8
 56231 184a6 01F4      		brne .L2301
5397:lp_solve_5.5/lp_presolve.c ****     status = presolve_shrink(psdata, &iConRemove, &iVarFixed);
 56232               		.loc 2 5397 0
 56233 184a8 AE01      		movw r20,r28
 56234 184aa 465D      		subi r20,-42
 56235 184ac 5F4F      		sbci r21,-1
 56236 184ae 9E01      		movw r18,r28
 56237 184b0 285D      		subi r18,-40
 56238 184b2 3F4F      		sbci r19,-1
 56239 184b4 88AD      		ldd r24,Y+56
 56240 184b6 99AD      		ldd r25,Y+57
 56241 184b8 B901      		movw r22,r18
 56242 184ba 0E94 0000 		call presolve_shrink
 56243 184be 9B83      		std Y+3,r25
 56244 184c0 8A83      		std Y+2,r24
 56245               	.L2301:
5398:lp_solve_5.5/lp_presolve.c **** 
5399:lp_solve_5.5/lp_presolve.c ****   (*nCoeffChanged) += iCoeffChanged;
 56246               		.loc 2 5399 0
 56247 184c2 8AAD      		ldd r24,Y+58
 56248 184c4 9BAD      		ldd r25,Y+59
 56249 184c6 FC01      		movw r30,r24
 56250 184c8 2081      		ld r18,Z
 56251 184ca 3181      		ldd r19,Z+1
 56252 184cc 8A89      		ldd r24,Y+18
 56253 184ce 9B89      		ldd r25,Y+19
 56254 184d0 280F      		add r18,r24
 56255 184d2 391F      		adc r19,r25
 56256 184d4 8AAD      		ldd r24,Y+58
 56257 184d6 9BAD      		ldd r25,Y+59
 56258 184d8 FC01      		movw r30,r24
 56259 184da 3183      		std Z+1,r19
 56260 184dc 2083      		st Z,r18
5400:lp_solve_5.5/lp_presolve.c ****   (*nConRemove)    += iConRemove;
 56261               		.loc 2 5400 0
 56262 184de 8CAD      		ldd r24,Y+60
 56263 184e0 9DAD      		ldd r25,Y+61
 56264 184e2 FC01      		movw r30,r24
 56265 184e4 2081      		ld r18,Z
 56266 184e6 3181      		ldd r19,Z+1
 56267 184e8 88A5      		ldd r24,Y+40
 56268 184ea 99A5      		ldd r25,Y+41
 56269 184ec 280F      		add r18,r24
 56270 184ee 391F      		adc r19,r25
 56271 184f0 8CAD      		ldd r24,Y+60
 56272 184f2 9DAD      		ldd r25,Y+61
 56273 184f4 FC01      		movw r30,r24
 56274 184f6 3183      		std Z+1,r19
 56275 184f8 2083      		st Z,r18
5401:lp_solve_5.5/lp_presolve.c ****   (*nVarFixed)     += iVarFixed;
 56276               		.loc 2 5401 0
 56277 184fa 8EAD      		ldd r24,Y+62
 56278 184fc 9FAD      		ldd r25,Y+63
 56279 184fe FC01      		movw r30,r24
 56280 18500 2081      		ld r18,Z
 56281 18502 3181      		ldd r19,Z+1
 56282 18504 8AA5      		ldd r24,Y+42
 56283 18506 9BA5      		ldd r25,Y+43
 56284 18508 280F      		add r18,r24
 56285 1850a 391F      		adc r19,r25
 56286 1850c 8EAD      		ldd r24,Y+62
 56287 1850e 9FAD      		ldd r25,Y+63
 56288 18510 FC01      		movw r30,r24
 56289 18512 3183      		std Z+1,r19
 56290 18514 2083      		st Z,r18
5402:lp_solve_5.5/lp_presolve.c ****   (*nBoundTighten) += iBoundTighten;
 56291               		.loc 2 5402 0
 56292 18516 CE01      		movw r24,r28
 56293 18518 805C      		subi r24,-64
 56294 1851a 9F4F      		sbci r25,-1
 56295 1851c FC01      		movw r30,r24
 56296 1851e 8081      		ld r24,Z
 56297 18520 9181      		ldd r25,Z+1
 56298 18522 FC01      		movw r30,r24
 56299 18524 2081      		ld r18,Z
 56300 18526 3181      		ldd r19,Z+1
 56301 18528 8CA5      		ldd r24,Y+44
 56302 1852a 9DA5      		ldd r25,Y+45
 56303 1852c 280F      		add r18,r24
 56304 1852e 391F      		adc r19,r25
 56305 18530 CE01      		movw r24,r28
 56306 18532 805C      		subi r24,-64
 56307 18534 9F4F      		sbci r25,-1
 56308 18536 FC01      		movw r30,r24
 56309 18538 8081      		ld r24,Z
 56310 1853a 9181      		ldd r25,Z+1
 56311 1853c FC01      		movw r30,r24
 56312 1853e 3183      		std Z+1,r19
 56313 18540 2083      		st Z,r18
5403:lp_solve_5.5/lp_presolve.c ****   (*nSum)          += iCoeffChanged+iConRemove+iVarFixed+iBoundTighten;
 56314               		.loc 2 5403 0
 56315 18542 CE01      		movw r24,r28
 56316 18544 8E5B      		subi r24,-66
 56317 18546 9F4F      		sbci r25,-1
 56318 18548 FC01      		movw r30,r24
 56319 1854a 8081      		ld r24,Z
 56320 1854c 9181      		ldd r25,Z+1
 56321 1854e FC01      		movw r30,r24
 56322 18550 2081      		ld r18,Z
 56323 18552 3181      		ldd r19,Z+1
 56324 18554 48A5      		ldd r20,Y+40
 56325 18556 59A5      		ldd r21,Y+41
 56326 18558 8A89      		ldd r24,Y+18
 56327 1855a 9B89      		ldd r25,Y+19
 56328 1855c 480F      		add r20,r24
 56329 1855e 591F      		adc r21,r25
 56330 18560 8AA5      		ldd r24,Y+42
 56331 18562 9BA5      		ldd r25,Y+43
 56332 18564 480F      		add r20,r24
 56333 18566 591F      		adc r21,r25
 56334 18568 8CA5      		ldd r24,Y+44
 56335 1856a 9DA5      		ldd r25,Y+45
 56336 1856c 840F      		add r24,r20
 56337 1856e 951F      		adc r25,r21
 56338 18570 280F      		add r18,r24
 56339 18572 391F      		adc r19,r25
 56340 18574 CE01      		movw r24,r28
 56341 18576 8E5B      		subi r24,-66
 56342 18578 9F4F      		sbci r25,-1
 56343 1857a FC01      		movw r30,r24
 56344 1857c 8081      		ld r24,Z
 56345 1857e 9181      		ldd r25,Z+1
 56346 18580 FC01      		movw r30,r24
 56347 18582 3183      		std Z+1,r19
 56348 18584 2083      		st Z,r18
5404:lp_solve_5.5/lp_presolve.c **** 
5405:lp_solve_5.5/lp_presolve.c ****   return( status );
 56349               		.loc 2 5405 0
 56350 18586 8A81      		ldd r24,Y+2
 56351 18588 9B81      		ldd r25,Y+3
 56352               	/* epilogue start */
5406:lp_solve_5.5/lp_presolve.c **** }
 56353               		.loc 2 5406 0
 56354 1858a CD5B      		subi r28,-67
 56355 1858c DF4F      		sbci r29,-1
 56356 1858e 0FB6      		in __tmp_reg__,__SREG__
 56357 18590 F894      		cli
 56358 18592 DEBF      		out __SP_H__,r29
 56359 18594 0FBE      		out __SREG__,__tmp_reg__
 56360 18596 CDBF      		out __SP_L__,r28
 56361 18598 DF91      		pop r29
 56362 1859a CF91      		pop r28
 56363 1859c 1F91      		pop r17
 56364 1859e 0F91      		pop r16
 56365 185a0 FF90      		pop r15
 56366 185a2 EF90      		pop r14
 56367 185a4 DF90      		pop r13
 56368 185a6 CF90      		pop r12
 56369 185a8 0895      		ret
 56370               		.cfi_endproc
 56371               	.LFE92:
 56373               		.section	.rodata
 56374               	.LC69:
 56375 0c57 7072 6573 		.string	"presolve: Had to repair broken basis.\n"
 56375      6F6C 7665 
 56375      3A20 4861 
 56375      6420 746F 
 56375      2072 6570 
 56376               	.LC70:
 56377 0c7e 5355 424D 		.string	"SUBMITTED"
 56377      4954 5445 
 56377      4400 
 56378               	.LC71:
 56379 0c88 200A 00   		.string	" \n"
 56380               	.LC72:
 56381 0c8b 7072 6573 		.string	"presolve: Found SOS %d (type %d) to be range-infeasible on variable %d\n"
 56381      6F6C 7665 
 56381      3A20 466F 
 56381      756E 6420 
 56381      534F 5320 
 56382               	.LC73:
 56383 0cd3 7072 6573 		.string	"presolve: Break after bound tightening iteration %d.\n"
 56383      6F6C 7665 
 56383      3A20 4272 
 56383      6561 6B20 
 56383      6166 7465 
 56384               	.LC74:
 56385 0d09 5072 6573 		.string	"Presolve O:%d -> Reduced rows:%5d, cols:%5d --- changed bnds:%5d, Ab:%5d.\n"
 56385      6F6C 7665 
 56385      204F 3A25 
 56385      6420 2D3E 
 56385      2052 6564 
 56386               	.LC75:
 56387 0d54 7072 6573 		.string	"presolve: Unable to construct internal data representation\n"
 56387      6F6C 7665 
 56387      3A20 556E 
 56387      6162 6C65 
 56387      2074 6F20 
 56388               	.LC76:
 56389 0d90 5052 4553 		.string	"PRESOLVE             Elimination loops performed.......... O%d:M%d:I%d\n"
 56389      4F4C 5645 
 56389      2020 2020 
 56389      2020 2020 
 56389      2020 2020 
 56390               	.LC77:
 56391 0dd8 5245 4D4F 		.string	"REMOVED"
 56391      5645 4400 
 56392               	.LC78:
 56393 0de0 2020 2020 		.string	"            %8d empty or fixed variables............. %s.\n"
 56393      2020 2020 
 56393      2020 2020 
 56393      2538 6420 
 56393      656D 7074 
 56394               	.LC79:
 56395 0e1b 2020 2020 		.string	"            %8d empty or redundant constraints....... %s.\n"
 56395      2020 2020 
 56395      2020 2020 
 56395      2538 6420 
 56395      656D 7074 
 56396               	.LC80:
 56397 0e56 5449 4748 		.string	"TIGHTENED"
 56397      5445 4E45 
 56397      4400 
 56398               	.LC81:
 56399 0e60 2020 2020 		.string	"            %8d bounds............................... %s.\n"
 56399      2020 2020 
 56399      2020 2020 
 56399      2538 6420 
 56399      626F 756E 
 56400               	.LC82:
 56401 0e9b 4348 414E 		.string	"CHANGED"
 56401      4745 4400 
 56402               	.LC83:
 56403 0ea3 2020 2020 		.string	"            %8d matrix coefficients.................. %s.\n"
 56403      2020 2020 
 56403      2020 2020 
 56403      2538 6420 
 56403      6D61 7472 
 56404               	.LC84:
 56405 0ede 5245 4C41 		.string	"RELAXED"
 56405      5845 4400 
 56406               	.LC85:
 56407 0ee6 2020 2020 		.string	"            %8d variables' final bounds.............. %s.\n"
 56407      2020 2020 
 56407      2020 2020 
 56407      2538 6420 
 56407      7661 7269 
 56408               	.LC86:
 56409 0f21 434F 4E56 		.string	"CONVERTED"
 56409      4552 5445 
 56409      4400 
 56410               	.LC87:
 56411 0f2b 2020 2020 		.string	"            %8d constraints detected as SOS1......... %s.\n"
 56411      2020 2020 
 56411      2020 2020 
 56411      2538 6420 
 56411      636F 6E73 
 56412               	.LC88:
 56413 0f66 00        		.string	""
 56414               	.LC89:
 56415 0f67 2532 3073 		.string	"%20s Solution status detected............. %s.\n"
 56415      2053 6F6C 
 56415      7574 696F 
 56415      6E20 7374 
 56415      6174 7573 
 56416               	.LC90:
 56417 0f97 2532 3073 		.string	"%20s OPTIMAL solution found............... %-g"
 56417      204F 5054 
 56417      494D 414C 
 56417      2073 6F6C 
 56417      7574 696F 
 56418               	.LC91:
 56419 0fc6 2D49 6E66 		.string	"-Inf"
 56419      00
 56420               	.LC92:
 56421 0fcb 2531 3373 		.string	"%13s"
 56421      00
 56422               	.LC93:
 56423 0fd0 252B 3132 		.string	"%+12g"
 56423      6700 
 56424               	.LC94:
 56425 0fd6 496E 6600 		.string	"Inf"
 56426               	.LC95:
 56427 0fda 252D 3133 		.string	"%-13s"
 56427      7300 
 56428               	.LC96:
 56429 0fe0 252B 2D31 		.string	"%+-12g"
 56429      3267 00
 56430               	.LC97:
 56431 0fe7 2532 3073 		.string	"%20s [ %s < Z < %s ]\n"
 56431      205B 2025 
 56431      7320 3C20 
 56431      5A20 3C20 
 56431      2573 205D 
 56432               	.LC98:
 56433 0ffd 5245 4455 		.string	"REDUCED"
 56433      4345 4400 
 56434               	.LC99:
 56435 1005 526F 772D 		.string	"Row-types:   %7d LE,          %7d GE,             %7d EQ.\n"
 56435      7479 7065 
 56435      733A 2020 
 56435      2025 3764 
 56435      204C 452C 
 56436               	.LC100:
 56437 1040 434F 4E53 		.string	"CONSTRAINT CLASSES"
 56437      5452 4149 
 56437      4E54 2043 
 56437      4C41 5353 
 56437      4553 00
 56438               		.text
 56439               	.global	presolve
 56441               	presolve:
 56442               	.LFB93:
5407:lp_solve_5.5/lp_presolve.c **** 
5408:lp_solve_5.5/lp_presolve.c **** /* Top level presolve routine */
5409:lp_solve_5.5/lp_presolve.c **** STATIC int presolve(lprec *lp)
5410:lp_solve_5.5/lp_presolve.c **** {
 56443               		.loc 2 5410 0
 56444               		.cfi_startproc
 56445 185aa CF92      		push r12
 56446               	.LCFI600:
 56447               		.cfi_def_cfa_offset 3
 56448               		.cfi_offset 12, -2
 56449 185ac DF92      		push r13
 56450               	.LCFI601:
 56451               		.cfi_def_cfa_offset 4
 56452               		.cfi_offset 13, -3
 56453 185ae EF92      		push r14
 56454               	.LCFI602:
 56455               		.cfi_def_cfa_offset 5
 56456               		.cfi_offset 14, -4
 56457 185b0 FF92      		push r15
 56458               	.LCFI603:
 56459               		.cfi_def_cfa_offset 6
 56460               		.cfi_offset 15, -5
 56461 185b2 0F93      		push r16
 56462               	.LCFI604:
 56463               		.cfi_def_cfa_offset 7
 56464               		.cfi_offset 16, -6
 56465 185b4 1F93      		push r17
 56466               	.LCFI605:
 56467               		.cfi_def_cfa_offset 8
 56468               		.cfi_offset 17, -7
 56469 185b6 CF93      		push r28
 56470               	.LCFI606:
 56471               		.cfi_def_cfa_offset 9
 56472               		.cfi_offset 28, -8
 56473 185b8 DF93      		push r29
 56474               	.LCFI607:
 56475               		.cfi_def_cfa_offset 10
 56476               		.cfi_offset 29, -9
 56477 185ba CDB7      		in r28,__SP_L__
 56478 185bc DEB7      		in r29,__SP_H__
 56479               	.LCFI608:
 56480               		.cfi_def_cfa_register 28
 56481 185be C758      		subi r28,-121
 56482 185c0 D109      		sbc r29,__zero_reg__
 56483               	.LCFI609:
 56484               		.cfi_def_cfa_offset 145
 56485 185c2 0FB6      		in __tmp_reg__,__SREG__
 56486 185c4 F894      		cli
 56487 185c6 DEBF      		out __SP_H__,r29
 56488 185c8 0FBE      		out __SREG__,__tmp_reg__
 56489 185ca CDBF      		out __SP_L__,r28
 56490               	/* prologue: function */
 56491               	/* frame size = 135 */
 56492               	/* stack size = 143 */
 56493               	.L__stack_usage = 143
 56494 185cc 9E01      		movw r18,r28
 56495 185ce 2C57      		subi r18,124
 56496 185d0 3F4F      		sbci r19,-1
 56497 185d2 D901      		movw r26,r18
 56498 185d4 8D93      		st X+,r24
 56499 185d6 9C93      		st X,r25
5411:lp_solve_5.5/lp_presolve.c ****   int    status = RUNNING,
 56500               		.loc 2 5411 0
 56501 185d8 88E0      		ldi r24,lo8(8)
 56502 185da 90E0      		ldi r25,0
 56503 185dc 98A3      		std Y+32,r25
 56504 185de 8F8F      		std Y+31,r24
5412:lp_solve_5.5/lp_presolve.c ****          i, j = 0, jx = 0, jjx = 0, k, oSum,
 56505               		.loc 2 5412 0
 56506 185e0 1C82      		std Y+4,__zero_reg__
 56507 185e2 1B82      		std Y+3,__zero_reg__
 56508 185e4 1E82      		std Y+6,__zero_reg__
 56509 185e6 1D82      		std Y+5,__zero_reg__
 56510 185e8 1886      		std Y+8,__zero_reg__
 56511 185ea 1F82      		std Y+7,__zero_reg__
5413:lp_solve_5.5/lp_presolve.c ****          iCoeffChanged = 0, iConRemove = 0, iVarFixed = 0, iBoundTighten = 0, iSOS = 0, iSum = 0,
 56512               		.loc 2 5413 0
 56513 185ec 1AA2      		std Y+34,__zero_reg__
 56514 185ee 19A2      		std Y+33,__zero_reg__
 56515 185f0 1CA2      		std Y+36,__zero_reg__
 56516 185f2 1BA2      		std Y+35,__zero_reg__
 56517 185f4 1EA2      		std Y+38,__zero_reg__
 56518 185f6 1DA2      		std Y+37,__zero_reg__
 56519 185f8 18A6      		std Y+40,__zero_reg__
 56520 185fa 1FA2      		std Y+39,__zero_reg__
 56521 185fc 1AA6      		std Y+42,__zero_reg__
 56522 185fe 19A6      		std Y+41,__zero_reg__
 56523 18600 1CA6      		std Y+44,__zero_reg__
 56524 18602 1BA6      		std Y+43,__zero_reg__
5414:lp_solve_5.5/lp_presolve.c ****          nCoeffChanged = 0, nConRemove = 0, nVarFixed = 0, nBoundTighten = 0, nSOS = 0, nSum = 0;
 56525               		.loc 2 5414 0
 56526 18604 1A86      		std Y+10,__zero_reg__
 56527 18606 1986      		std Y+9,__zero_reg__
 56528 18608 1C86      		std Y+12,__zero_reg__
 56529 1860a 1B86      		std Y+11,__zero_reg__
 56530 1860c 1E86      		std Y+14,__zero_reg__
 56531 1860e 1D86      		std Y+13,__zero_reg__
 56532 18610 188A      		std Y+16,__zero_reg__
 56533 18612 1F86      		std Y+15,__zero_reg__
 56534 18614 1A8A      		std Y+18,__zero_reg__
 56535 18616 198A      		std Y+17,__zero_reg__
 56536 18618 1C8A      		std Y+20,__zero_reg__
 56537 1861a 1B8A      		std Y+19,__zero_reg__
5415:lp_solve_5.5/lp_presolve.c ****   REAL   Value1, Value2, initrhs0 = lp->orig_rhs[0];
 56538               		.loc 2 5415 0
 56539 1861c CE01      		movw r24,r28
 56540 1861e 8C57      		subi r24,124
 56541 18620 9F4F      		sbci r25,-1
 56542 18622 FC01      		movw r30,r24
 56543 18624 8081      		ld r24,Z
 56544 18626 9181      		ldd r25,Z+1
 56545 18628 8A55      		subi r24,90
 56546 1862a 9D4F      		sbci r25,-3
 56547 1862c DC01      		movw r26,r24
 56548 1862e 8D91      		ld r24,X+
 56549 18630 9C91      		ld r25,X
 56550 18632 FC01      		movw r30,r24
 56551 18634 8081      		ld r24,Z
 56552 18636 9181      		ldd r25,Z+1
 56553 18638 A281      		ldd r26,Z+2
 56554 1863a B381      		ldd r27,Z+3
 56555 1863c 8D8B      		std Y+21,r24
 56556 1863e 9E8B      		std Y+22,r25
 56557 18640 AF8B      		std Y+23,r26
 56558 18642 B88F      		std Y+24,r27
5416:lp_solve_5.5/lp_presolve.c ****   presolverec *psdata = NULL;
 56559               		.loc 2 5416 0
 56560 18644 1EAA      		std Y+54,__zero_reg__
 56561 18646 1DAA      		std Y+53,__zero_reg__
5417:lp_solve_5.5/lp_presolve.c ****   MATrec *mat = lp->matA;
 56562               		.loc 2 5417 0
 56563 18648 CE01      		movw r24,r28
 56564 1864a 8C57      		subi r24,124
 56565 1864c 9F4F      		sbci r25,-1
 56566 1864e DC01      		movw r26,r24
 56567 18650 8D91      		ld r24,X+
 56568 18652 9C91      		ld r25,X
 56569 18654 8A54      		subi r24,74
 56570 18656 9D4F      		sbci r25,-3
 56571 18658 FC01      		movw r30,r24
 56572 1865a 8081      		ld r24,Z
 56573 1865c 9181      		ldd r25,Z+1
 56574 1865e 9A8F      		std Y+26,r25
 56575 18660 898F      		std Y+25,r24
5418:lp_solve_5.5/lp_presolve.c **** 
5419:lp_solve_5.5/lp_presolve.c **** #if 0
5420:lp_solve_5.5/lp_presolve.c ****   lp->do_presolve     = PRESOLVE_ROWS;
5421:lp_solve_5.5/lp_presolve.c ****   report(lp, IMPORTANT, "presolve: Debug override of presolve setting to %d\n", lp->do_presolve);
5422:lp_solve_5.5/lp_presolve.c **** #endif
5423:lp_solve_5.5/lp_presolve.c **** 
5424:lp_solve_5.5/lp_presolve.c ****  /* Lock the variable mapping arrays and counts ahead of any row/column
5425:lp_solve_5.5/lp_presolve.c ****     deletion or creation in the course of presolve, solvelp or postsolve */
5426:lp_solve_5.5/lp_presolve.c ****   if(!lp->varmap_locked)
 56576               		.loc 2 5426 0
 56577 18662 CE01      		movw r24,r28
 56578 18664 8C57      		subi r24,124
 56579 18666 9F4F      		sbci r25,-1
 56580 18668 DC01      		movw r26,r24
 56581 1866a 8D91      		ld r24,X+
 56582 1866c 9C91      		ld r25,X
 56583 1866e 8853      		subi r24,56
 56584 18670 9D4F      		sbci r25,-3
 56585 18672 FC01      		movw r30,r24
 56586 18674 8081      		ld r24,Z
 56587 18676 8823      		tst r24
 56588 18678 01F4      		brne .L2322
5427:lp_solve_5.5/lp_presolve.c ****     varmap_lock(lp);
 56589               		.loc 2 5427 0
 56590 1867a CE01      		movw r24,r28
 56591 1867c 8C57      		subi r24,124
 56592 1867e 9F4F      		sbci r25,-1
 56593 18680 DC01      		movw r26,r24
 56594 18682 8D91      		ld r24,X+
 56595 18684 9C91      		ld r25,X
 56596 18686 0E94 0000 		call varmap_lock
 56597               	.L2322:
5428:lp_solve_5.5/lp_presolve.c **** 
5429:lp_solve_5.5/lp_presolve.c ****  /* Check if we have already done presolve */
5430:lp_solve_5.5/lp_presolve.c ****   mat_validate(mat);
 56598               		.loc 2 5430 0
 56599 1868a 898D      		ldd r24,Y+25
 56600 1868c 9A8D      		ldd r25,Y+26
 56601 1868e 0E94 0000 		call mat_validate
5431:lp_solve_5.5/lp_presolve.c ****   if(lp->wasPresolved) {
 56602               		.loc 2 5431 0
 56603 18692 CE01      		movw r24,r28
 56604 18694 8C57      		subi r24,124
 56605 18696 9F4F      		sbci r25,-1
 56606 18698 FC01      		movw r30,r24
 56607 1869a 8081      		ld r24,Z
 56608 1869c 9181      		ldd r25,Z+1
 56609 1869e 8950      		subi r24,9
 56610 186a0 9D4F      		sbci r25,-3
 56611 186a2 DC01      		movw r26,r24
 56612 186a4 8C91      		ld r24,X
 56613 186a6 8823      		tst r24
 56614 186a8 01F4      		brne .+2
 56615 186aa 00C0      		rjmp .L2323
5432:lp_solve_5.5/lp_presolve.c ****     if(SOS_count(lp) > 0) {
 56616               		.loc 2 5432 0
 56617 186ac CE01      		movw r24,r28
 56618 186ae 8C57      		subi r24,124
 56619 186b0 9F4F      		sbci r25,-1
 56620 186b2 FC01      		movw r30,r24
 56621 186b4 8081      		ld r24,Z
 56622 186b6 9181      		ldd r25,Z+1
 56623 186b8 0E94 0000 		call SOS_count
 56624 186bc 1816      		cp __zero_reg__,r24
 56625 186be 1906      		cpc __zero_reg__,r25
 56626 186c0 04F4      		brge .L2324
5433:lp_solve_5.5/lp_presolve.c ****       SOS_member_updatemap(lp->SOS);
 56627               		.loc 2 5433 0
 56628 186c2 CE01      		movw r24,r28
 56629 186c4 8C57      		subi r24,124
 56630 186c6 9F4F      		sbci r25,-1
 56631 186c8 DC01      		movw r26,r24
 56632 186ca 8D91      		ld r24,X+
 56633 186cc 9C91      		ld r25,X
 56634 186ce 8256      		subi r24,98
 56635 186d0 9D4F      		sbci r25,-3
 56636 186d2 FC01      		movw r30,r24
 56637 186d4 8081      		ld r24,Z
 56638 186d6 9181      		ldd r25,Z+1
 56639 186d8 0E94 0000 		call SOS_member_updatemap
5434:lp_solve_5.5/lp_presolve.c ****       make_SOSchain(lp, (MYBOOL) ((lp->do_presolve & PRESOLVE_LASTMASKMODE) != PRESOLVE_NONE));
 56640               		.loc 2 5434 0
 56641 186dc CE01      		movw r24,r28
 56642 186de 8C57      		subi r24,124
 56643 186e0 9F4F      		sbci r25,-1
 56644 186e2 DC01      		movw r26,r24
 56645 186e4 8D91      		ld r24,X+
 56646 186e6 9C91      		ld r25,X
 56647 186e8 8C58      		subi r24,-116
 56648 186ea 9D4F      		sbci r25,-3
 56649 186ec FC01      		movw r30,r24
 56650 186ee 8081      		ld r24,Z
 56651 186f0 9181      		ldd r25,Z+1
 56652 186f2 092E      		mov __tmp_reg__,r25
 56653 186f4 000C      		lsl r0
 56654 186f6 AA0B      		sbc r26,r26
 56655 186f8 BB0B      		sbc r27,r27
 56656 186fa A770      		andi r26,7
 56657 186fc BB27      		clr r27
 56658 186fe 21E0      		ldi r18,lo8(1)
 56659 18700 892B      		or r24,r25
 56660 18702 8A2B      		or r24,r26
 56661 18704 8B2B      		or r24,r27
 56662 18706 01F4      		brne .L2325
 56663 18708 20E0      		ldi r18,0
 56664               	.L2325:
 56665 1870a CE01      		movw r24,r28
 56666 1870c 8C57      		subi r24,124
 56667 1870e 9F4F      		sbci r25,-1
 56668 18710 DC01      		movw r26,r24
 56669 18712 8D91      		ld r24,X+
 56670 18714 9C91      		ld r25,X
 56671 18716 622F      		mov r22,r18
 56672 18718 0E94 0000 		call make_SOSchain
 56673               	.L2324:
5435:lp_solve_5.5/lp_presolve.c ****     }
5436:lp_solve_5.5/lp_presolve.c ****     if((lp->solvecount > 1) && (lp->bb_level < 1) &&
 56674               		.loc 2 5436 0
 56675 1871c CE01      		movw r24,r28
 56676 1871e 8C57      		subi r24,124
 56677 18720 9F4F      		sbci r25,-1
 56678 18722 FC01      		movw r30,r24
 56679 18724 8081      		ld r24,Z
 56680 18726 9181      		ldd r25,Z+1
 56681 18728 805B      		subi r24,-80
 56682 1872a 9D4F      		sbci r25,-3
 56683 1872c DC01      		movw r26,r24
 56684 1872e 8D91      		ld r24,X+
 56685 18730 9C91      		ld r25,X
 56686 18732 0297      		sbiw r24,2
 56687 18734 04F0      		brlt .L2326
 56688               		.loc 2 5436 0 is_stmt 0 discriminator 1
 56689 18736 CE01      		movw r24,r28
 56690 18738 8C57      		subi r24,124
 56691 1873a 9F4F      		sbci r25,-1
 56692 1873c FC01      		movw r30,r24
 56693 1873e 8081      		ld r24,Z
 56694 18740 9181      		ldd r25,Z+1
 56695 18742 805D      		subi r24,-48
 56696 18744 9C4F      		sbci r25,-4
 56697 18746 DC01      		movw r26,r24
 56698 18748 8D91      		ld r24,X+
 56699 1874a 9C91      		ld r25,X
 56700 1874c 1816      		cp __zero_reg__,r24
 56701 1874e 1906      		cpc __zero_reg__,r25
 56702 18750 04F0      		brlt .L2326
5437:lp_solve_5.5/lp_presolve.c ****        ((lp->scalemode & SCALE_DYNUPDATE) != 0))
 56703               		.loc 2 5437 0 is_stmt 1 discriminator 2
 56704 18752 CE01      		movw r24,r28
 56705 18754 8C57      		subi r24,124
 56706 18756 9F4F      		sbci r25,-1
 56707 18758 FC01      		movw r30,r24
 56708 1875a 8081      		ld r24,Z
 56709 1875c 9181      		ldd r25,Z+1
 56710 1875e 8259      		subi r24,-110
 56711 18760 9D4F      		sbci r25,-3
 56712 18762 DC01      		movw r26,r24
 56713 18764 8D91      		ld r24,X+
 56714 18766 9C91      		ld r25,X
 56715 18768 8827      		clr r24
 56716 1876a 9170      		andi r25,1
5436:lp_solve_5.5/lp_presolve.c ****        ((lp->scalemode & SCALE_DYNUPDATE) != 0))
 56717               		.loc 2 5436 0 discriminator 2
 56718 1876c 892B      		or r24,r25
 56719 1876e 01F0      		breq .L2326
5438:lp_solve_5.5/lp_presolve.c ****       auto_scale(lp);
 56720               		.loc 2 5438 0
 56721 18770 CE01      		movw r24,r28
 56722 18772 8C57      		subi r24,124
 56723 18774 9F4F      		sbci r25,-1
 56724 18776 FC01      		movw r30,r24
 56725 18778 8081      		ld r24,Z
 56726 1877a 9181      		ldd r25,Z+1
 56727 1877c 0E94 0000 		call auto_scale
 56728               	.L2326:
5439:lp_solve_5.5/lp_presolve.c ****     if(!lp->basis_valid) {
 56729               		.loc 2 5439 0
 56730 18780 CE01      		movw r24,r28
 56731 18782 8C57      		subi r24,124
 56732 18784 9F4F      		sbci r25,-1
 56733 18786 DC01      		movw r26,r24
 56734 18788 8D91      		ld r24,X+
 56735 1878a 9C91      		ld r25,X
 56736 1878c 8753      		subi r24,55
 56737 1878e 9D4F      		sbci r25,-3
 56738 18790 FC01      		movw r30,r24
 56739 18792 8081      		ld r24,Z
 56740 18794 8823      		tst r24
 56741 18796 01F4      		brne .L2327
5440:lp_solve_5.5/lp_presolve.c ****       crash_basis(lp);
 56742               		.loc 2 5440 0
 56743 18798 CE01      		movw r24,r28
 56744 1879a 8C57      		subi r24,124
 56745 1879c 9F4F      		sbci r25,-1
 56746 1879e DC01      		movw r26,r24
 56747 187a0 8D91      		ld r24,X+
 56748 187a2 9C91      		ld r25,X
 56749 187a4 0E94 0000 		call crash_basis
5441:lp_solve_5.5/lp_presolve.c ****       report(lp, DETAILED, "presolve: Had to repair broken basis.\n");
 56750               		.loc 2 5441 0
 56751 187a8 80E0      		ldi r24,lo8(.LC69)
 56752 187aa 90E0      		ldi r25,hi8(.LC69)
 56753 187ac 892F      		mov r24,r25
 56754 187ae 8F93      		push r24
 56755 187b0 80E0      		ldi r24,lo8(.LC69)
 56756 187b2 90E0      		ldi r25,hi8(.LC69)
 56757 187b4 8F93      		push r24
 56758 187b6 1F92      		push __zero_reg__
 56759 187b8 85E0      		ldi r24,lo8(5)
 56760 187ba 8F93      		push r24
 56761 187bc CE01      		movw r24,r28
 56762 187be 8C57      		subi r24,124
 56763 187c0 9F4F      		sbci r25,-1
 56764 187c2 FC01      		movw r30,r24
 56765 187c4 2181      		ldd r18,Z+1
 56766 187c6 2F93      		push r18
 56767 187c8 DC01      		movw r26,r24
 56768 187ca 8C91      		ld r24,X
 56769 187cc 8F93      		push r24
 56770 187ce 0E94 0000 		call report
 56771 187d2 0F90      		pop __tmp_reg__
 56772 187d4 0F90      		pop __tmp_reg__
 56773 187d6 0F90      		pop __tmp_reg__
 56774 187d8 0F90      		pop __tmp_reg__
 56775 187da 0F90      		pop __tmp_reg__
 56776 187dc 0F90      		pop __tmp_reg__
 56777               	.L2327:
5442:lp_solve_5.5/lp_presolve.c ****     }
5443:lp_solve_5.5/lp_presolve.c ****     lp->timepresolved = timeNow();
 56778               		.loc 2 5443 0
 56779 187de 0E94 0000 		call timeNow
 56780 187e2 DC01      		movw r26,r24
 56781 187e4 CB01      		movw r24,r22
 56782 187e6 9E01      		movw r18,r28
 56783 187e8 2C57      		subi r18,124
 56784 187ea 3F4F      		sbci r19,-1
 56785 187ec F901      		movw r30,r18
 56786 187ee 2081      		ld r18,Z
 56787 187f0 3181      		ldd r19,Z+1
 56788 187f2 2E57      		subi r18,126
 56789 187f4 3C4F      		sbci r19,-4
 56790 187f6 F901      		movw r30,r18
 56791 187f8 8083      		st Z,r24
 56792 187fa 9183      		std Z+1,r25
 56793 187fc A283      		std Z+2,r26
 56794 187fe B383      		std Z+3,r27
5444:lp_solve_5.5/lp_presolve.c ****     return(status);
 56795               		.loc 2 5444 0
 56796 18800 8F8D      		ldd r24,Y+31
 56797 18802 98A1      		ldd r25,Y+32
 56798 18804 0C94 0000 		jmp .L2414
 56799               	.L2323:
5445:lp_solve_5.5/lp_presolve.c ****   }
5446:lp_solve_5.5/lp_presolve.c **** 
5447:lp_solve_5.5/lp_presolve.c ****   /* Produce original model statistics (do hoops to produce correct stats if we have SOS'es) */
5448:lp_solve_5.5/lp_presolve.c ****   i = SOS_count(lp);
 56800               		.loc 2 5448 0
 56801 18808 CE01      		movw r24,r28
 56802 1880a 8C57      		subi r24,124
 56803 1880c 9F4F      		sbci r25,-1
 56804 1880e DC01      		movw r26,r24
 56805 18810 8D91      		ld r24,X+
 56806 18812 9C91      		ld r25,X
 56807 18814 0E94 0000 		call SOS_count
 56808 18818 9A83      		std Y+2,r25
 56809 1881a 8983      		std Y+1,r24
5449:lp_solve_5.5/lp_presolve.c ****   if(i > 0) {
 56810               		.loc 2 5449 0
 56811 1881c 8981      		ldd r24,Y+1
 56812 1881e 9A81      		ldd r25,Y+2
 56813 18820 1816      		cp __zero_reg__,r24
 56814 18822 1906      		cpc __zero_reg__,r25
 56815 18824 04F4      		brge .L2329
5450:lp_solve_5.5/lp_presolve.c ****     SOS_member_updatemap(lp->SOS);
 56816               		.loc 2 5450 0
 56817 18826 CE01      		movw r24,r28
 56818 18828 8C57      		subi r24,124
 56819 1882a 9F4F      		sbci r25,-1
 56820 1882c FC01      		movw r30,r24
 56821 1882e 8081      		ld r24,Z
 56822 18830 9181      		ldd r25,Z+1
 56823 18832 8256      		subi r24,98
 56824 18834 9D4F      		sbci r25,-3
 56825 18836 DC01      		movw r26,r24
 56826 18838 8D91      		ld r24,X+
 56827 1883a 9C91      		ld r25,X
 56828 1883c 0E94 0000 		call SOS_member_updatemap
5451:lp_solve_5.5/lp_presolve.c ****     lp->sos_vars = SOS_memberships(lp->SOS, 0);
 56829               		.loc 2 5451 0
 56830 18840 CE01      		movw r24,r28
 56831 18842 8C57      		subi r24,124
 56832 18844 9F4F      		sbci r25,-1
 56833 18846 FC01      		movw r30,r24
 56834 18848 8081      		ld r24,Z
 56835 1884a 9181      		ldd r25,Z+1
 56836 1884c 8256      		subi r24,98
 56837 1884e 9D4F      		sbci r25,-3
 56838 18850 DC01      		movw r26,r24
 56839 18852 8D91      		ld r24,X+
 56840 18854 9C91      		ld r25,X
 56841 18856 60E0      		ldi r22,0
 56842 18858 70E0      		ldi r23,0
 56843 1885a 0E94 0000 		call SOS_memberships
 56844 1885e 9C01      		movw r18,r24
 56845 18860 CE01      		movw r24,r28
 56846 18862 8C57      		subi r24,124
 56847 18864 9F4F      		sbci r25,-1
 56848 18866 FC01      		movw r30,r24
 56849 18868 8081      		ld r24,Z
 56850 1886a 9181      		ldd r25,Z+1
 56851 1886c 8656      		subi r24,102
 56852 1886e 9D4F      		sbci r25,-3
 56853 18870 DC01      		movw r26,r24
 56854 18872 2D93      		st X+,r18
 56855 18874 3C93      		st X,r19
 56856               	.L2329:
5452:lp_solve_5.5/lp_presolve.c ****   }
5453:lp_solve_5.5/lp_presolve.c ****   REPORT_modelinfo(lp, TRUE, "SUBMITTED");
 56857               		.loc 2 5453 0
 56858 18876 CE01      		movw r24,r28
 56859 18878 8C57      		subi r24,124
 56860 1887a 9F4F      		sbci r25,-1
 56861 1887c FC01      		movw r30,r24
 56862 1887e 8081      		ld r24,Z
 56863 18880 9181      		ldd r25,Z+1
 56864 18882 40E0      		ldi r20,lo8(.LC70)
 56865 18884 50E0      		ldi r21,hi8(.LC70)
 56866 18886 61E0      		ldi r22,lo8(1)
 56867 18888 0E94 0000 		call REPORT_modelinfo
5454:lp_solve_5.5/lp_presolve.c ****   report(lp, NORMAL, " \n");
 56868               		.loc 2 5454 0
 56869 1888c 80E0      		ldi r24,lo8(.LC71)
 56870 1888e 90E0      		ldi r25,hi8(.LC71)
 56871 18890 892F      		mov r24,r25
 56872 18892 8F93      		push r24
 56873 18894 80E0      		ldi r24,lo8(.LC71)
 56874 18896 90E0      		ldi r25,hi8(.LC71)
 56875 18898 8F93      		push r24
 56876 1889a 1F92      		push __zero_reg__
 56877 1889c 84E0      		ldi r24,lo8(4)
 56878 1889e 8F93      		push r24
 56879 188a0 CE01      		movw r24,r28
 56880 188a2 8C57      		subi r24,124
 56881 188a4 9F4F      		sbci r25,-1
 56882 188a6 DC01      		movw r26,r24
 56883 188a8 1196      		adiw r26,1
 56884 188aa 2C91      		ld r18,X
 56885 188ac 2F93      		push r18
 56886 188ae FC01      		movw r30,r24
 56887 188b0 8081      		ld r24,Z
 56888 188b2 8F93      		push r24
 56889 188b4 0E94 0000 		call report
 56890 188b8 0F90      		pop __tmp_reg__
 56891 188ba 0F90      		pop __tmp_reg__
 56892 188bc 0F90      		pop __tmp_reg__
 56893 188be 0F90      		pop __tmp_reg__
 56894 188c0 0F90      		pop __tmp_reg__
 56895 188c2 0F90      		pop __tmp_reg__
5455:lp_solve_5.5/lp_presolve.c ****   if(i > 0)
 56896               		.loc 2 5455 0
 56897 188c4 8981      		ldd r24,Y+1
 56898 188c6 9A81      		ldd r25,Y+2
 56899 188c8 1816      		cp __zero_reg__,r24
 56900 188ca 1906      		cpc __zero_reg__,r25
 56901 188cc 04F4      		brge .L2330
5456:lp_solve_5.5/lp_presolve.c ****     lp->sos_vars = 0;
 56902               		.loc 2 5456 0
 56903 188ce CE01      		movw r24,r28
 56904 188d0 8C57      		subi r24,124
 56905 188d2 9F4F      		sbci r25,-1
 56906 188d4 DC01      		movw r26,r24
 56907 188d6 8D91      		ld r24,X+
 56908 188d8 9C91      		ld r25,X
 56909 188da 8656      		subi r24,102
 56910 188dc 9D4F      		sbci r25,-3
 56911 188de FC01      		movw r30,r24
 56912 188e0 1182      		std Z+1,__zero_reg__
 56913 188e2 1082      		st Z,__zero_reg__
 56914               	.L2330:
5457:lp_solve_5.5/lp_presolve.c **** 
5458:lp_solve_5.5/lp_presolve.c ****   /* Finalize basis indicators; if no basis was created earlier via
5459:lp_solve_5.5/lp_presolve.c ****      set_basis or crash_basis then simply set the default basis. */
5460:lp_solve_5.5/lp_presolve.c ****   if(!lp->basis_valid)
 56915               		.loc 2 5460 0
 56916 188e4 CE01      		movw r24,r28
 56917 188e6 8C57      		subi r24,124
 56918 188e8 9F4F      		sbci r25,-1
 56919 188ea DC01      		movw r26,r24
 56920 188ec 8D91      		ld r24,X+
 56921 188ee 9C91      		ld r25,X
 56922 188f0 8753      		subi r24,55
 56923 188f2 9D4F      		sbci r25,-3
 56924 188f4 FC01      		movw r30,r24
 56925 188f6 8081      		ld r24,Z
 56926 188f8 8823      		tst r24
 56927 188fa 01F4      		brne .L2331
5461:lp_solve_5.5/lp_presolve.c ****     lp->var_basic[0] = AUTOMATIC; /* Flag that we are presolving */
 56928               		.loc 2 5461 0
 56929 188fc CE01      		movw r24,r28
 56930 188fe 8C57      		subi r24,124
 56931 18900 9F4F      		sbci r25,-1
 56932 18902 DC01      		movw r26,r24
 56933 18904 8D91      		ld r24,X+
 56934 18906 9C91      		ld r25,X
 56935 18908 8453      		subi r24,52
 56936 1890a 9D4F      		sbci r25,-3
 56937 1890c FC01      		movw r30,r24
 56938 1890e 8081      		ld r24,Z
 56939 18910 9181      		ldd r25,Z+1
 56940 18912 22E0      		ldi r18,lo8(2)
 56941 18914 30E0      		ldi r19,0
 56942 18916 DC01      		movw r26,r24
 56943 18918 2D93      		st X+,r18
 56944 1891a 3C93      		st X,r19
 56945               	.L2331:
5462:lp_solve_5.5/lp_presolve.c **** 
5463:lp_solve_5.5/lp_presolve.c **** #if 0
5464:lp_solve_5.5/lp_presolve.c **** write_lp(lp, "test_in.lp");    /* Write to lp-formatted file for debugging */
5465:lp_solve_5.5/lp_presolve.c **** /*write_mps(lp, "test_in.mps");*/  /* Write to lp-formatted file for debugging */
5466:lp_solve_5.5/lp_presolve.c **** #endif
5467:lp_solve_5.5/lp_presolve.c **** 
5468:lp_solve_5.5/lp_presolve.c ****   /* Update inf norms and check for potential factorization trouble */
5469:lp_solve_5.5/lp_presolve.c ****   mat_computemax(mat /*, FALSE */);
 56946               		.loc 2 5469 0
 56947 1891c 898D      		ldd r24,Y+25
 56948 1891e 9A8D      		ldd r25,Y+26
 56949 18920 0E94 0000 		call mat_computemax
5470:lp_solve_5.5/lp_presolve.c **** #if 0
5471:lp_solve_5.5/lp_presolve.c ****   Value1 = fabs(lp->negrange);
5472:lp_solve_5.5/lp_presolve.c ****   if(is_obj_in_basis(lp) && (mat->dynrange < Value1) && vec_computeext(lp->orig_obj, 1, lp->columns
5473:lp_solve_5.5/lp_presolve.c **** 
5474:lp_solve_5.5/lp_presolve.c ****     /* Compute relative scale metric */
5475:lp_solve_5.5/lp_presolve.c ****     Value2 = fabs(lp->orig_obj[j]/lp->orig_obj[i]) / mat->dynrange;
5476:lp_solve_5.5/lp_presolve.c ****     if(Value2 < 1.0)
5477:lp_solve_5.5/lp_presolve.c ****       Value2 = 1.0 / Value2;
5478:lp_solve_5.5/lp_presolve.c **** 
5479:lp_solve_5.5/lp_presolve.c ****     /* Determine if we should alert modeler and possibly move the OF out of the coefficient matrix 
5480:lp_solve_5.5/lp_presolve.c ****     if((Value2 > Value1)           /* Case with extreme scale difference */
5481:lp_solve_5.5/lp_presolve.c **** #if 1
5482:lp_solve_5.5/lp_presolve.c ****         || (mat->dynrange == 1.0)  /* Case where we have an all-unit coefficient matrix, possibly t
5483:lp_solve_5.5/lp_presolve.c **** #endif
5484:lp_solve_5.5/lp_presolve.c ****       )
5485:lp_solve_5.5/lp_presolve.c ****       if((lp->simplex_strategy & SIMPLEX_DYNAMIC) > 0) {
5486:lp_solve_5.5/lp_presolve.c ****         clear_action(&lp->algopt, ALGOPT_OBJINBASIS);
5487:lp_solve_5.5/lp_presolve.c ****         report(lp, NORMAL, "Moved objective function out of the basis matrix to enhance factorizati
5488:lp_solve_5.5/lp_presolve.c ****       }
5489:lp_solve_5.5/lp_presolve.c ****       else if(mat->dynrange > 1.0)
5490:lp_solve_5.5/lp_presolve.c ****         report(lp, IMPORTANT, "Warning: Objective/matrix coefficient magnitude differences will cau
5491:lp_solve_5.5/lp_presolve.c ****   }
5492:lp_solve_5.5/lp_presolve.c **** #endif
5493:lp_solve_5.5/lp_presolve.c **** 
5494:lp_solve_5.5/lp_presolve.c ****   /* Do traditional simple presolve */
5495:lp_solve_5.5/lp_presolve.c ****   yieldformessages(lp);
 56950               		.loc 2 5495 0
 56951 18924 CE01      		movw r24,r28
 56952 18926 8C57      		subi r24,124
 56953 18928 9F4F      		sbci r25,-1
 56954 1892a FC01      		movw r30,r24
 56955 1892c 8081      		ld r24,Z
 56956 1892e 9181      		ldd r25,Z+1
 56957 18930 0E94 0000 		call yieldformessages
5496:lp_solve_5.5/lp_presolve.c ****   if((lp->do_presolve & PRESOLVE_LASTMASKMODE) == PRESOLVE_NONE) {
 56958               		.loc 2 5496 0
 56959 18934 CE01      		movw r24,r28
 56960 18936 8C57      		subi r24,124
 56961 18938 9F4F      		sbci r25,-1
 56962 1893a DC01      		movw r26,r24
 56963 1893c 8D91      		ld r24,X+
 56964 1893e 9C91      		ld r25,X
 56965 18940 8C58      		subi r24,-116
 56966 18942 9D4F      		sbci r25,-3
 56967 18944 FC01      		movw r30,r24
 56968 18946 8081      		ld r24,Z
 56969 18948 9181      		ldd r25,Z+1
 56970 1894a 092E      		mov __tmp_reg__,r25
 56971 1894c 000C      		lsl r0
 56972 1894e AA0B      		sbc r26,r26
 56973 18950 BB0B      		sbc r27,r27
 56974 18952 A770      		andi r26,7
 56975 18954 BB27      		clr r27
 56976 18956 892B      		or r24,r25
 56977 18958 8A2B      		or r24,r26
 56978 1895a 8B2B      		or r24,r27
 56979 1895c 01F4      		brne .L2332
5497:lp_solve_5.5/lp_presolve.c ****     mat_checkcounts(mat, NULL, NULL, TRUE);
 56980               		.loc 2 5497 0
 56981 1895e 898D      		ldd r24,Y+25
 56982 18960 9A8D      		ldd r25,Y+26
 56983 18962 21E0      		ldi r18,lo8(1)
 56984 18964 40E0      		ldi r20,0
 56985 18966 50E0      		ldi r21,0
 56986 18968 60E0      		ldi r22,0
 56987 1896a 70E0      		ldi r23,0
 56988 1896c 0E94 0000 		call mat_checkcounts
5498:lp_solve_5.5/lp_presolve.c ****     i = 0;
 56989               		.loc 2 5498 0
 56990 18970 1A82      		std Y+2,__zero_reg__
 56991 18972 1982      		std Y+1,__zero_reg__
 56992 18974 0C94 0000 		jmp .L2333
 56993               	.L2332:
5499:lp_solve_5.5/lp_presolve.c ****   }
5500:lp_solve_5.5/lp_presolve.c ****   else {
5501:lp_solve_5.5/lp_presolve.c **** 
5502:lp_solve_5.5/lp_presolve.c ****     if(lp->full_solution == NULL)
 56994               		.loc 2 5502 0
 56995 18978 CE01      		movw r24,r28
 56996 1897a 8C57      		subi r24,124
 56997 1897c 9F4F      		sbci r25,-1
 56998 1897e DC01      		movw r26,r24
 56999 18980 8D91      		ld r24,X+
 57000 18982 9C91      		ld r25,X
 57001 18984 8A5E      		subi r24,-22
 57002 18986 9D4F      		sbci r25,-3
 57003 18988 FC01      		movw r30,r24
 57004 1898a 8081      		ld r24,Z
 57005 1898c 9181      		ldd r25,Z+1
 57006 1898e 892B      		or r24,r25
 57007 18990 01F4      		brne .L2334
5503:lp_solve_5.5/lp_presolve.c ****       allocREAL(lp, &lp->full_solution, lp->sum_alloc+1, TRUE);
 57008               		.loc 2 5503 0
 57009 18992 CE01      		movw r24,r28
 57010 18994 8C57      		subi r24,124
 57011 18996 9F4F      		sbci r25,-1
 57012 18998 DC01      		movw r26,r24
 57013 1899a 8D91      		ld r24,X+
 57014 1899c 9C91      		ld r25,X
 57015 1899e 8C50      		subi r24,12
 57016 189a0 9E4F      		sbci r25,-2
 57017 189a2 FC01      		movw r30,r24
 57018 189a4 8081      		ld r24,Z
 57019 189a6 9181      		ldd r25,Z+1
 57020 189a8 AC01      		movw r20,r24
 57021 189aa 4F5F      		subi r20,-1
 57022 189ac 5F4F      		sbci r21,-1
 57023 189ae CE01      		movw r24,r28
 57024 189b0 8C57      		subi r24,124
 57025 189b2 9F4F      		sbci r25,-1
 57026 189b4 DC01      		movw r26,r24
 57027 189b6 8D91      		ld r24,X+
 57028 189b8 9C91      		ld r25,X
 57029 189ba BC01      		movw r22,r24
 57030 189bc 6A5E      		subi r22,-22
 57031 189be 7D4F      		sbci r23,-3
 57032 189c0 CE01      		movw r24,r28
 57033 189c2 8C57      		subi r24,124
 57034 189c4 9F4F      		sbci r25,-1
 57035 189c6 FC01      		movw r30,r24
 57036 189c8 8081      		ld r24,Z
 57037 189ca 9181      		ldd r25,Z+1
 57038 189cc 21E0      		ldi r18,lo8(1)
 57039 189ce 0E94 0000 		call allocREAL
 57040               	.L2334:
5504:lp_solve_5.5/lp_presolve.c **** 
5505:lp_solve_5.5/lp_presolve.c ****     /* Identify infeasible SOS'es prior to any pruning */
5506:lp_solve_5.5/lp_presolve.c ****     j = 0;
 57041               		.loc 2 5506 0
 57042 189d2 1C82      		std Y+4,__zero_reg__
 57043 189d4 1B82      		std Y+3,__zero_reg__
5507:lp_solve_5.5/lp_presolve.c ****     for(i = 1; i <= SOS_count(lp); i++) {
 57044               		.loc 2 5507 0
 57045 189d6 81E0      		ldi r24,lo8(1)
 57046 189d8 90E0      		ldi r25,0
 57047 189da 9A83      		std Y+2,r25
 57048 189dc 8983      		std Y+1,r24
 57049 189de 00C0      		rjmp .L2335
 57050               	.L2337:
5508:lp_solve_5.5/lp_presolve.c ****       k = SOS_infeasible(lp->SOS, i);
 57051               		.loc 2 5508 0
 57052 189e0 CE01      		movw r24,r28
 57053 189e2 8C57      		subi r24,124
 57054 189e4 9F4F      		sbci r25,-1
 57055 189e6 DC01      		movw r26,r24
 57056 189e8 8D91      		ld r24,X+
 57057 189ea 9C91      		ld r25,X
 57058 189ec 8256      		subi r24,98
 57059 189ee 9D4F      		sbci r25,-3
 57060 189f0 FC01      		movw r30,r24
 57061 189f2 8081      		ld r24,Z
 57062 189f4 9181      		ldd r25,Z+1
 57063 189f6 2981      		ldd r18,Y+1
 57064 189f8 3A81      		ldd r19,Y+2
 57065 189fa B901      		movw r22,r18
 57066 189fc 0E94 0000 		call SOS_infeasible
 57067 18a00 9C8F      		std Y+28,r25
 57068 18a02 8B8F      		std Y+27,r24
5509:lp_solve_5.5/lp_presolve.c ****       if(k > 0) {
 57069               		.loc 2 5509 0
 57070 18a04 8B8D      		ldd r24,Y+27
 57071 18a06 9C8D      		ldd r25,Y+28
 57072 18a08 1816      		cp __zero_reg__,r24
 57073 18a0a 1906      		cpc __zero_reg__,r25
 57074 18a0c 04F0      		brlt .+2
 57075 18a0e 00C0      		rjmp .L2336
 57076               	.LBB18:
5510:lp_solve_5.5/lp_presolve.c ****         presolverec psdata;
5511:lp_solve_5.5/lp_presolve.c **** 
5512:lp_solve_5.5/lp_presolve.c ****         psdata.lp = lp;
 57077               		.loc 2 5512 0
 57078 18a10 CE01      		movw r24,r28
 57079 18a12 815A      		subi r24,-95
 57080 18a14 9F4F      		sbci r25,-1
 57081 18a16 9E01      		movw r18,r28
 57082 18a18 2C57      		subi r18,124
 57083 18a1a 3F4F      		sbci r19,-1
 57084 18a1c D901      		movw r26,r18
 57085 18a1e 2D91      		ld r18,X+
 57086 18a20 3C91      		ld r19,X
 57087 18a22 FC01      		movw r30,r24
 57088 18a24 338B      		std Z+19,r19
 57089 18a26 228B      		std Z+18,r18
5513:lp_solve_5.5/lp_presolve.c ****         report(lp, NORMAL, "presolve: Found SOS %d (type %d) to be range-infeasible on variable %d\
 57090               		.loc 2 5513 0
 57091 18a28 CE01      		movw r24,r28
 57092 18a2a 8C57      		subi r24,124
 57093 18a2c 9F4F      		sbci r25,-1
 57094 18a2e DC01      		movw r26,r24
 57095 18a30 8D91      		ld r24,X+
 57096 18a32 9C91      		ld r25,X
 57097 18a34 8256      		subi r24,98
 57098 18a36 9D4F      		sbci r25,-3
 57099 18a38 FC01      		movw r30,r24
 57100 18a3a 8081      		ld r24,Z
 57101 18a3c 9181      		ldd r25,Z+1
 57102 18a3e 2981      		ldd r18,Y+1
 57103 18a40 3A81      		ldd r19,Y+2
 57104 18a42 B901      		movw r22,r18
 57105 18a44 0E94 0000 		call SOS_get_type
 57106 18a48 2C8D      		ldd r18,Y+28
 57107 18a4a 2F93      		push r18
 57108 18a4c 2B8D      		ldd r18,Y+27
 57109 18a4e 2F93      		push r18
 57110 18a50 292F      		mov r18,r25
 57111 18a52 2F93      		push r18
 57112 18a54 8F93      		push r24
 57113 18a56 8A81      		ldd r24,Y+2
 57114 18a58 8F93      		push r24
 57115 18a5a 8981      		ldd r24,Y+1
 57116 18a5c 8F93      		push r24
 57117 18a5e 80E0      		ldi r24,lo8(.LC72)
 57118 18a60 90E0      		ldi r25,hi8(.LC72)
 57119 18a62 892F      		mov r24,r25
 57120 18a64 8F93      		push r24
 57121 18a66 80E0      		ldi r24,lo8(.LC72)
 57122 18a68 90E0      		ldi r25,hi8(.LC72)
 57123 18a6a 8F93      		push r24
 57124 18a6c 1F92      		push __zero_reg__
 57125 18a6e 84E0      		ldi r24,lo8(4)
 57126 18a70 8F93      		push r24
 57127 18a72 CE01      		movw r24,r28
 57128 18a74 8C57      		subi r24,124
 57129 18a76 9F4F      		sbci r25,-1
 57130 18a78 DC01      		movw r26,r24
 57131 18a7a 1196      		adiw r26,1
 57132 18a7c 2C91      		ld r18,X
 57133 18a7e 2F93      		push r18
 57134 18a80 FC01      		movw r30,r24
 57135 18a82 8081      		ld r24,Z
 57136 18a84 8F93      		push r24
 57137 18a86 0E94 0000 		call report
 57138 18a8a 4DB7      		in r20,__SP_L__
 57139 18a8c 5EB7      		in r21,__SP_H__
 57140 18a8e 445F      		subi r20,-12
 57141 18a90 5F4F      		sbci r21,-1
 57142 18a92 0FB6      		in __tmp_reg__,__SREG__
 57143 18a94 F894      		cli
 57144 18a96 DEBF      		out __SP_H__,r29
 57145 18a98 0FBE      		out __SREG__,__tmp_reg__
 57146 18a9a CDBF      		out __SP_L__,r28
5514:lp_solve_5.5/lp_presolve.c ****                             i, SOS_get_type(lp->SOS, i), k);
5515:lp_solve_5.5/lp_presolve.c ****         status = presolve_setstatus(&psdata, INFEASIBLE);
 57147               		.loc 2 5515 0
 57148 18a9c CE01      		movw r24,r28
 57149 18a9e 815A      		subi r24,-95
 57150 18aa0 9F4F      		sbci r25,-1
 57151 18aa2 20E0      		ldi r18,lo8(.LC21)
 57152 18aa4 30E0      		ldi r19,hi8(.LC21)
 57153 18aa6 4BE8      		ldi r20,lo8(-117)
 57154 18aa8 55E1      		ldi r21,lo8(21)
 57155 18aaa 62E0      		ldi r22,lo8(2)
 57156 18aac 70E0      		ldi r23,0
 57157 18aae 0E94 0000 		call presolve_setstatusex
 57158 18ab2 98A3      		std Y+32,r25
 57159 18ab4 8F8F      		std Y+31,r24
5516:lp_solve_5.5/lp_presolve.c ****         j++;
 57160               		.loc 2 5516 0
 57161 18ab6 8B81      		ldd r24,Y+3
 57162 18ab8 9C81      		ldd r25,Y+4
 57163 18aba 0196      		adiw r24,1
 57164 18abc 9C83      		std Y+4,r25
 57165 18abe 8B83      		std Y+3,r24
 57166               	.L2336:
 57167               	.LBE18:
5507:lp_solve_5.5/lp_presolve.c ****       k = SOS_infeasible(lp->SOS, i);
 57168               		.loc 2 5507 0 discriminator 2
 57169 18ac0 8981      		ldd r24,Y+1
 57170 18ac2 9A81      		ldd r25,Y+2
 57171 18ac4 0196      		adiw r24,1
 57172 18ac6 9A83      		std Y+2,r25
 57173 18ac8 8983      		std Y+1,r24
 57174               	.L2335:
5507:lp_solve_5.5/lp_presolve.c ****       k = SOS_infeasible(lp->SOS, i);
 57175               		.loc 2 5507 0 is_stmt 0 discriminator 1
 57176 18aca CE01      		movw r24,r28
 57177 18acc 8C57      		subi r24,124
 57178 18ace 9F4F      		sbci r25,-1
 57179 18ad0 DC01      		movw r26,r24
 57180 18ad2 8D91      		ld r24,X+
 57181 18ad4 9C91      		ld r25,X
 57182 18ad6 0E94 0000 		call SOS_count
 57183 18ada 9C01      		movw r18,r24
 57184 18adc 8981      		ldd r24,Y+1
 57185 18ade 9A81      		ldd r25,Y+2
 57186 18ae0 2817      		cp r18,r24
 57187 18ae2 3907      		cpc r19,r25
 57188 18ae4 04F0      		brlt .+2
 57189 18ae6 00C0      		rjmp .L2337
5517:lp_solve_5.5/lp_presolve.c ****       }
5518:lp_solve_5.5/lp_presolve.c ****     }
5519:lp_solve_5.5/lp_presolve.c ****     if(j > 0)
 57190               		.loc 2 5519 0 is_stmt 1
 57191 18ae8 8B81      		ldd r24,Y+3
 57192 18aea 9C81      		ldd r25,Y+4
 57193 18aec 1816      		cp __zero_reg__,r24
 57194 18aee 1906      		cpc __zero_reg__,r25
 57195 18af0 04F4      		brge .+4
 57196 18af2 0C94 0000 		jmp .L2425
5520:lp_solve_5.5/lp_presolve.c ****       goto Finish;
5521:lp_solve_5.5/lp_presolve.c **** 
5522:lp_solve_5.5/lp_presolve.c ****     /* Create and initialize the presolve data structures */
5523:lp_solve_5.5/lp_presolve.c ****     psdata = presolve_init(lp);
 57197               		.loc 2 5523 0
 57198 18af6 CE01      		movw r24,r28
 57199 18af8 8C57      		subi r24,124
 57200 18afa 9F4F      		sbci r25,-1
 57201 18afc FC01      		movw r30,r24
 57202 18afe 8081      		ld r24,Z
 57203 18b00 9181      		ldd r25,Z+1
 57204 18b02 0E94 0000 		call presolve_init
 57205 18b06 9EAB      		std Y+54,r25
 57206 18b08 8DAB      		std Y+53,r24
5524:lp_solve_5.5/lp_presolve.c **** 
5525:lp_solve_5.5/lp_presolve.c ****     /* Reentry point for the outermost, computationally expensive presolve loop */
5526:lp_solve_5.5/lp_presolve.c ****     psdata->outerloops = 0;
 57207               		.loc 2 5526 0
 57208 18b0a 8DA9      		ldd r24,Y+53
 57209 18b0c 9EA9      		ldd r25,Y+54
 57210 18b0e DC01      		movw r26,r24
 57211 18b10 9196      		adiw r26,32+1
 57212 18b12 1C92      		st X,__zero_reg__
 57213 18b14 1E92      		st -X,__zero_reg__
 57214 18b16 9097      		sbiw r26,32
 57215               	.L2370:
5527:lp_solve_5.5/lp_presolve.c ****     do {
5528:lp_solve_5.5/lp_presolve.c ****       psdata->outerloops++;
 57216               		.loc 2 5528 0
 57217 18b18 8DA9      		ldd r24,Y+53
 57218 18b1a 9EA9      		ldd r25,Y+54
 57219 18b1c FC01      		movw r30,r24
 57220 18b1e 20A1      		ldd r18,Z+32
 57221 18b20 31A1      		ldd r19,Z+33
 57222 18b22 2F5F      		subi r18,-1
 57223 18b24 3F4F      		sbci r19,-1
 57224 18b26 DC01      		movw r26,r24
 57225 18b28 9196      		adiw r26,32+1
 57226 18b2a 3C93      		st X,r19
 57227 18b2c 2E93      		st -X,r18
 57228 18b2e 9097      		sbiw r26,32
5529:lp_solve_5.5/lp_presolve.c ****       iCoeffChanged = 0;
 57229               		.loc 2 5529 0
 57230 18b30 1AA2      		std Y+34,__zero_reg__
 57231 18b32 19A2      		std Y+33,__zero_reg__
5530:lp_solve_5.5/lp_presolve.c ****       iConRemove    = 0;
 57232               		.loc 2 5530 0
 57233 18b34 1CA2      		std Y+36,__zero_reg__
 57234 18b36 1BA2      		std Y+35,__zero_reg__
5531:lp_solve_5.5/lp_presolve.c ****       iVarFixed     = 0;
 57235               		.loc 2 5531 0
 57236 18b38 1EA2      		std Y+38,__zero_reg__
 57237 18b3a 1DA2      		std Y+37,__zero_reg__
5532:lp_solve_5.5/lp_presolve.c ****       iBoundTighten = 0;
 57238               		.loc 2 5532 0
 57239 18b3c 18A6      		std Y+40,__zero_reg__
 57240 18b3e 1FA2      		std Y+39,__zero_reg__
5533:lp_solve_5.5/lp_presolve.c ****       iSOS          = 0;
 57241               		.loc 2 5533 0
 57242 18b40 1AA6      		std Y+42,__zero_reg__
 57243 18b42 19A6      		std Y+41,__zero_reg__
5534:lp_solve_5.5/lp_presolve.c ****       oSum          = nSum;
 57244               		.loc 2 5534 0
 57245 18b44 8B89      		ldd r24,Y+19
 57246 18b46 9C89      		ldd r25,Y+20
 57247 18b48 9E8F      		std Y+30,r25
 57248 18b4a 8D8F      		std Y+29,r24
 57249               	.L2357:
5535:lp_solve_5.5/lp_presolve.c **** 
5536:lp_solve_5.5/lp_presolve.c ****       /* Do the middle elimination loop */
5537:lp_solve_5.5/lp_presolve.c ****       do {
5538:lp_solve_5.5/lp_presolve.c ****         psdata->middleloops++;
 57250               		.loc 2 5538 0
 57251 18b4c 8DA9      		ldd r24,Y+53
 57252 18b4e 9EA9      		ldd r25,Y+54
 57253 18b50 FC01      		movw r30,r24
 57254 18b52 268D      		ldd r18,Z+30
 57255 18b54 378D      		ldd r19,Z+31
 57256 18b56 2F5F      		subi r18,-1
 57257 18b58 3F4F      		sbci r19,-1
 57258 18b5a DC01      		movw r26,r24
 57259 18b5c 5F96      		adiw r26,30+1
 57260 18b5e 3C93      		st X,r19
 57261 18b60 2E93      		st -X,r18
 57262 18b62 5E97      		sbiw r26,30
5539:lp_solve_5.5/lp_presolve.c ****         nSum += iSum;
 57263               		.loc 2 5539 0
 57264 18b64 8BA5      		ldd r24,Y+43
 57265 18b66 9CA5      		ldd r25,Y+44
 57266 18b68 2B89      		ldd r18,Y+19
 57267 18b6a 3C89      		ldd r19,Y+20
 57268 18b6c 820F      		add r24,r18
 57269 18b6e 931F      		adc r25,r19
 57270 18b70 9C8B      		std Y+20,r25
 57271 18b72 8B8B      		std Y+19,r24
5540:lp_solve_5.5/lp_presolve.c ****         iSum = 0;
 57272               		.loc 2 5540 0
 57273 18b74 1CA6      		std Y+44,__zero_reg__
 57274 18b76 1BA6      		std Y+43,__zero_reg__
5541:lp_solve_5.5/lp_presolve.c **** 
5542:lp_solve_5.5/lp_presolve.c ****         /* Accumulate constraint bounds based on bounds on individual variables. */
5543:lp_solve_5.5/lp_presolve.c ****         j = 0;
 57275               		.loc 2 5543 0
 57276 18b78 1C82      		std Y+4,__zero_reg__
 57277 18b7a 1B82      		std Y+3,__zero_reg__
5544:lp_solve_5.5/lp_presolve.c ****         while(presolve_statuscheck(psdata, &status) && psdata->forceupdate) {
 57278               		.loc 2 5544 0
 57279 18b7c 00C0      		rjmp .L2340
 57280               	.L2343:
5545:lp_solve_5.5/lp_presolve.c ****           psdata->forceupdate = FALSE;
 57281               		.loc 2 5545 0
 57282 18b7e 8DA9      		ldd r24,Y+53
 57283 18b80 9EA9      		ldd r25,Y+54
 57284 18b82 FC01      		movw r30,r24
 57285 18b84 14A2      		std Z+36,__zero_reg__
5546:lp_solve_5.5/lp_presolve.c ****           /* Update sums, but limit iteration count to avoid possible
5547:lp_solve_5.5/lp_presolve.c ****             "endless" loops with only marginal bound improvements */
5548:lp_solve_5.5/lp_presolve.c ****           if(presolve_updatesums(psdata) && (j < MAX_PSBOUNDTIGHTENLOOPS)) {
 57286               		.loc 2 5548 0
 57287 18b86 8DA9      		ldd r24,Y+53
 57288 18b88 9EA9      		ldd r25,Y+54
 57289 18b8a 0E94 0000 		call presolve_updatesums
 57290 18b8e 8823      		tst r24
 57291 18b90 01F4      		brne .+2
 57292 18b92 00C0      		rjmp .L2340
 57293               		.loc 2 5548 0 is_stmt 0 discriminator 1
 57294 18b94 8B81      		ldd r24,Y+3
 57295 18b96 9C81      		ldd r25,Y+4
 57296 18b98 0597      		sbiw r24,5
 57297 18b9a 04F0      		brlt .+2
 57298 18b9c 00C0      		rjmp .L2340
5549:lp_solve_5.5/lp_presolve.c ****             /* Do row preparation useful for subsequent column and row presolve operations */
5550:lp_solve_5.5/lp_presolve.c ****             if((psdata->outerloops == 1) && (psdata->middleloops == 1))
 57299               		.loc 2 5550 0 is_stmt 1
 57300 18b9e 8DA9      		ldd r24,Y+53
 57301 18ba0 9EA9      		ldd r25,Y+54
 57302 18ba2 DC01      		movw r26,r24
 57303 18ba4 9096      		adiw r26,32
 57304 18ba6 8D91      		ld r24,X+
 57305 18ba8 9C91      		ld r25,X
 57306 18baa 9197      		sbiw r26,32+1
 57307 18bac 0197      		sbiw r24,1
 57308 18bae 01F4      		brne .L2341
 57309               		.loc 2 5550 0 is_stmt 0 discriminator 1
 57310 18bb0 8DA9      		ldd r24,Y+53
 57311 18bb2 9EA9      		ldd r25,Y+54
 57312 18bb4 FC01      		movw r30,r24
 57313 18bb6 868D      		ldd r24,Z+30
 57314 18bb8 978D      		ldd r25,Z+31
 57315 18bba 0197      		sbiw r24,1
 57316 18bbc 01F4      		brne .L2341
5551:lp_solve_5.5/lp_presolve.c ****               status = presolve_preparerows(psdata, &iBoundTighten, &iSum);
 57317               		.loc 2 5551 0 is_stmt 1
 57318 18bbe 8DA9      		ldd r24,Y+53
 57319 18bc0 9EA9      		ldd r25,Y+54
 57320 18bc2 AE01      		movw r20,r28
 57321 18bc4 455D      		subi r20,-43
 57322 18bc6 5F4F      		sbci r21,-1
 57323 18bc8 9E01      		movw r18,r28
 57324 18bca 295D      		subi r18,-39
 57325 18bcc 3F4F      		sbci r19,-1
 57326 18bce B901      		movw r22,r18
 57327 18bd0 0E94 0000 		call presolve_preparerows
 57328 18bd4 98A3      		std Y+32,r25
 57329 18bd6 8F8F      		std Y+31,r24
 57330               	.L2341:
5552:lp_solve_5.5/lp_presolve.c ****             nBoundTighten += iBoundTighten;
 57331               		.loc 2 5552 0
 57332 18bd8 8FA1      		ldd r24,Y+39
 57333 18bda 98A5      		ldd r25,Y+40
 57334 18bdc 2F85      		ldd r18,Y+15
 57335 18bde 3889      		ldd r19,Y+16
 57336 18be0 820F      		add r24,r18
 57337 18be2 931F      		adc r25,r19
 57338 18be4 988B      		std Y+16,r25
 57339 18be6 8F87      		std Y+15,r24
5553:lp_solve_5.5/lp_presolve.c ****             iBoundTighten  = 0;
 57340               		.loc 2 5553 0
 57341 18be8 18A6      		std Y+40,__zero_reg__
 57342 18bea 1FA2      		std Y+39,__zero_reg__
5554:lp_solve_5.5/lp_presolve.c ****             nSum          += iSum;
 57343               		.loc 2 5554 0
 57344 18bec 8BA5      		ldd r24,Y+43
 57345 18bee 9CA5      		ldd r25,Y+44
 57346 18bf0 2B89      		ldd r18,Y+19
 57347 18bf2 3C89      		ldd r19,Y+20
 57348 18bf4 820F      		add r24,r18
 57349 18bf6 931F      		adc r25,r19
 57350 18bf8 9C8B      		std Y+20,r25
 57351 18bfa 8B8B      		std Y+19,r24
5555:lp_solve_5.5/lp_presolve.c ****             iSum           = 0;
 57352               		.loc 2 5555 0
 57353 18bfc 1CA6      		std Y+44,__zero_reg__
 57354 18bfe 1BA6      		std Y+43,__zero_reg__
5556:lp_solve_5.5/lp_presolve.c ****             j++;
 57355               		.loc 2 5556 0
 57356 18c00 8B81      		ldd r24,Y+3
 57357 18c02 9C81      		ldd r25,Y+4
 57358 18c04 0196      		adiw r24,1
 57359 18c06 9C83      		std Y+4,r25
 57360 18c08 8B83      		std Y+3,r24
5557:lp_solve_5.5/lp_presolve.c ****             if(status != RUNNING)
 57361               		.loc 2 5557 0
 57362 18c0a 8F8D      		ldd r24,Y+31
 57363 18c0c 98A1      		ldd r25,Y+32
 57364 18c0e 0897      		sbiw r24,8
 57365 18c10 01F0      		breq .L2340
5558:lp_solve_5.5/lp_presolve.c ****               report(lp, NORMAL, "presolve: Break after bound tightening iteration %d.\n", j);
 57366               		.loc 2 5558 0
 57367 18c12 8C81      		ldd r24,Y+4
 57368 18c14 8F93      		push r24
 57369 18c16 8B81      		ldd r24,Y+3
 57370 18c18 8F93      		push r24
 57371 18c1a 80E0      		ldi r24,lo8(.LC73)
 57372 18c1c 90E0      		ldi r25,hi8(.LC73)
 57373 18c1e 892F      		mov r24,r25
 57374 18c20 8F93      		push r24
 57375 18c22 80E0      		ldi r24,lo8(.LC73)
 57376 18c24 90E0      		ldi r25,hi8(.LC73)
 57377 18c26 8F93      		push r24
 57378 18c28 1F92      		push __zero_reg__
 57379 18c2a 84E0      		ldi r24,lo8(4)
 57380 18c2c 8F93      		push r24
 57381 18c2e CE01      		movw r24,r28
 57382 18c30 8C57      		subi r24,124
 57383 18c32 9F4F      		sbci r25,-1
 57384 18c34 DC01      		movw r26,r24
 57385 18c36 1196      		adiw r26,1
 57386 18c38 2C91      		ld r18,X
 57387 18c3a 2F93      		push r18
 57388 18c3c FC01      		movw r30,r24
 57389 18c3e 8081      		ld r24,Z
 57390 18c40 8F93      		push r24
 57391 18c42 0E94 0000 		call report
 57392 18c46 4DB7      		in r20,__SP_L__
 57393 18c48 5EB7      		in r21,__SP_H__
 57394 18c4a 485F      		subi r20,-8
 57395 18c4c 5F4F      		sbci r21,-1
 57396 18c4e 0FB6      		in __tmp_reg__,__SREG__
 57397 18c50 F894      		cli
 57398 18c52 DEBF      		out __SP_H__,r29
 57399 18c54 0FBE      		out __SREG__,__tmp_reg__
 57400 18c56 CDBF      		out __SP_L__,r28
 57401               	.L2340:
5544:lp_solve_5.5/lp_presolve.c ****           psdata->forceupdate = FALSE;
 57402               		.loc 2 5544 0
 57403 18c58 8DA9      		ldd r24,Y+53
 57404 18c5a 9EA9      		ldd r25,Y+54
 57405 18c5c 9E01      		movw r18,r28
 57406 18c5e 215E      		subi r18,-31
 57407 18c60 3F4F      		sbci r19,-1
 57408 18c62 B901      		movw r22,r18
 57409 18c64 0E94 0000 		call presolve_statuscheck
 57410 18c68 8823      		tst r24
 57411 18c6a 01F0      		breq .L2342
5544:lp_solve_5.5/lp_presolve.c ****           psdata->forceupdate = FALSE;
 57412               		.loc 2 5544 0 is_stmt 0 discriminator 1
 57413 18c6c 8DA9      		ldd r24,Y+53
 57414 18c6e 9EA9      		ldd r25,Y+54
 57415 18c70 DC01      		movw r26,r24
 57416 18c72 9496      		adiw r26,36
 57417 18c74 8C91      		ld r24,X
 57418 18c76 8823      		tst r24
 57419 18c78 01F0      		breq .+2
 57420 18c7a 00C0      		rjmp .L2343
 57421               	.L2342:
5559:lp_solve_5.5/lp_presolve.c ****           }
5560:lp_solve_5.5/lp_presolve.c ****         }
5561:lp_solve_5.5/lp_presolve.c ****         if(status != RUNNING)
 57422               		.loc 2 5561 0 is_stmt 1
 57423 18c7c 8F8D      		ldd r24,Y+31
 57424 18c7e 98A1      		ldd r25,Y+32
 57425 18c80 0897      		sbiw r24,8
 57426 18c82 01F0      		breq .+2
 57427 18c84 00C0      		rjmp .L2426
 57428               	.L2344:
5562:lp_solve_5.5/lp_presolve.c ****           break;
5563:lp_solve_5.5/lp_presolve.c **** 
5564:lp_solve_5.5/lp_presolve.c ****         /* Do the relatively cheap innermost elimination loop */
5565:lp_solve_5.5/lp_presolve.c ****         do {
5566:lp_solve_5.5/lp_presolve.c **** 
5567:lp_solve_5.5/lp_presolve.c ****           psdata->innerloops++;
 57429               		.loc 2 5567 0
 57430 18c86 8DA9      		ldd r24,Y+53
 57431 18c88 9EA9      		ldd r25,Y+54
 57432 18c8a FC01      		movw r30,r24
 57433 18c8c 248D      		ldd r18,Z+28
 57434 18c8e 358D      		ldd r19,Z+29
 57435 18c90 2F5F      		subi r18,-1
 57436 18c92 3F4F      		sbci r19,-1
 57437 18c94 DC01      		movw r26,r24
 57438 18c96 5D96      		adiw r26,28+1
 57439 18c98 3C93      		st X,r19
 57440 18c9a 2E93      		st -X,r18
 57441 18c9c 5C97      		sbiw r26,28
5568:lp_solve_5.5/lp_presolve.c ****           nSum += iSum;
 57442               		.loc 2 5568 0
 57443 18c9e 8BA5      		ldd r24,Y+43
 57444 18ca0 9CA5      		ldd r25,Y+44
 57445 18ca2 2B89      		ldd r18,Y+19
 57446 18ca4 3C89      		ldd r19,Y+20
 57447 18ca6 820F      		add r24,r18
 57448 18ca8 931F      		adc r25,r19
 57449 18caa 9C8B      		std Y+20,r25
 57450 18cac 8B8B      		std Y+19,r24
5569:lp_solve_5.5/lp_presolve.c ****           iSum = 0;
 57451               		.loc 2 5569 0
 57452 18cae 1CA6      		std Y+44,__zero_reg__
 57453 18cb0 1BA6      		std Y+43,__zero_reg__
5570:lp_solve_5.5/lp_presolve.c **** 
5571:lp_solve_5.5/lp_presolve.c ****           /* Eliminate empty rows, convert row singletons to bounds,
5572:lp_solve_5.5/lp_presolve.c ****             tighten bounds, and remove always satisfied rows */
5573:lp_solve_5.5/lp_presolve.c ****           if(presolve_statuscheck(psdata, &status) &&
 57454               		.loc 2 5573 0
 57455 18cb2 8DA9      		ldd r24,Y+53
 57456 18cb4 9EA9      		ldd r25,Y+54
 57457 18cb6 9E01      		movw r18,r28
 57458 18cb8 215E      		subi r18,-31
 57459 18cba 3F4F      		sbci r19,-1
 57460 18cbc B901      		movw r22,r18
 57461 18cbe 0E94 0000 		call presolve_statuscheck
 57462 18cc2 8823      		tst r24
 57463 18cc4 01F0      		breq .L2346
5574:lp_solve_5.5/lp_presolve.c ****              is_presolve(lp, PRESOLVE_ROWS))
 57464               		.loc 2 5574 0 discriminator 1
 57465 18cc6 CE01      		movw r24,r28
 57466 18cc8 8C57      		subi r24,124
 57467 18cca 9F4F      		sbci r25,-1
 57468 18ccc FC01      		movw r30,r24
 57469 18cce 8081      		ld r24,Z
 57470 18cd0 9181      		ldd r25,Z+1
 57471 18cd2 61E0      		ldi r22,lo8(1)
 57472 18cd4 70E0      		ldi r23,0
 57473 18cd6 0E94 0000 		call is_presolve
5573:lp_solve_5.5/lp_presolve.c ****              is_presolve(lp, PRESOLVE_ROWS))
 57474               		.loc 2 5573 0 discriminator 1
 57475 18cda 8823      		tst r24
 57476 18cdc 01F0      		breq .L2346
5575:lp_solve_5.5/lp_presolve.c ****             status = presolve_rows(psdata, &iCoeffChanged, &iConRemove, &iVarFixed, &iBoundTighten,
 57477               		.loc 2 5575 0
 57478 18cde 8DA9      		ldd r24,Y+53
 57479 18ce0 9EA9      		ldd r25,Y+54
 57480 18ce2 DE01      		movw r26,r28
 57481 18ce4 9B96      		adiw r26,43
 57482 18ce6 FE01      		movw r30,r28
 57483 18ce8 B796      		adiw r30,39
 57484 18cea 9E01      		movw r18,r28
 57485 18cec 2B5D      		subi r18,-37
 57486 18cee 3F4F      		sbci r19,-1
 57487 18cf0 AE01      		movw r20,r28
 57488 18cf2 4D5D      		subi r20,-35
 57489 18cf4 5F4F      		sbci r21,-1
 57490 18cf6 BE01      		movw r22,r28
 57491 18cf8 6F5D      		subi r22,-33
 57492 18cfa 7F4F      		sbci r23,-1
 57493 18cfc 7D01      		movw r14,r26
 57494 18cfe 8F01      		movw r16,r30
 57495 18d00 0E94 0000 		call presolve_rows
 57496 18d04 98A3      		std Y+32,r25
 57497 18d06 8F8F      		std Y+31,r24
 57498               	.L2346:
5576:lp_solve_5.5/lp_presolve.c **** 
5577:lp_solve_5.5/lp_presolve.c ****           /* Eliminate empty or fixed columns (including trivial OF column singletons) */
5578:lp_solve_5.5/lp_presolve.c ****           if(presolve_statuscheck(psdata, &status) &&
 57499               		.loc 2 5578 0
 57500 18d08 8DA9      		ldd r24,Y+53
 57501 18d0a 9EA9      		ldd r25,Y+54
 57502 18d0c 9E01      		movw r18,r28
 57503 18d0e 215E      		subi r18,-31
 57504 18d10 3F4F      		sbci r19,-1
 57505 18d12 B901      		movw r22,r18
 57506 18d14 0E94 0000 		call presolve_statuscheck
 57507 18d18 8823      		tst r24
 57508 18d1a 01F0      		breq .L2347
5579:lp_solve_5.5/lp_presolve.c ****              is_presolve(lp, PRESOLVE_COLS))
 57509               		.loc 2 5579 0 discriminator 1
 57510 18d1c CE01      		movw r24,r28
 57511 18d1e 8C57      		subi r24,124
 57512 18d20 9F4F      		sbci r25,-1
 57513 18d22 DC01      		movw r26,r24
 57514 18d24 8D91      		ld r24,X+
 57515 18d26 9C91      		ld r25,X
 57516 18d28 62E0      		ldi r22,lo8(2)
 57517 18d2a 70E0      		ldi r23,0
 57518 18d2c 0E94 0000 		call is_presolve
5578:lp_solve_5.5/lp_presolve.c ****              is_presolve(lp, PRESOLVE_COLS))
 57519               		.loc 2 5578 0 discriminator 1
 57520 18d30 8823      		tst r24
 57521 18d32 01F0      		breq .L2347
5580:lp_solve_5.5/lp_presolve.c ****             status = presolve_columns(psdata, &iCoeffChanged, &iConRemove, &iVarFixed, &iBoundTight
 57522               		.loc 2 5580 0
 57523 18d34 8DA9      		ldd r24,Y+53
 57524 18d36 9EA9      		ldd r25,Y+54
 57525 18d38 DE01      		movw r26,r28
 57526 18d3a 9B96      		adiw r26,43
 57527 18d3c FE01      		movw r30,r28
 57528 18d3e B796      		adiw r30,39
 57529 18d40 9E01      		movw r18,r28
 57530 18d42 2B5D      		subi r18,-37
 57531 18d44 3F4F      		sbci r19,-1
 57532 18d46 AE01      		movw r20,r28
 57533 18d48 4D5D      		subi r20,-35
 57534 18d4a 5F4F      		sbci r21,-1
 57535 18d4c BE01      		movw r22,r28
 57536 18d4e 6F5D      		subi r22,-33
 57537 18d50 7F4F      		sbci r23,-1
 57538 18d52 7D01      		movw r14,r26
 57539 18d54 8F01      		movw r16,r30
 57540 18d56 0E94 0000 		call presolve_columns
 57541 18d5a 98A3      		std Y+32,r25
 57542 18d5c 8F8F      		std Y+31,r24
 57543               	.L2347:
5581:lp_solve_5.5/lp_presolve.c **** 
5582:lp_solve_5.5/lp_presolve.c ****           /* Presolve SOS'es if possible (always do this) */
5583:lp_solve_5.5/lp_presolve.c ****           if(presolve_statuscheck(psdata, &status))
 57544               		.loc 2 5583 0
 57545 18d5e 8DA9      		ldd r24,Y+53
 57546 18d60 9EA9      		ldd r25,Y+54
 57547 18d62 9E01      		movw r18,r28
 57548 18d64 215E      		subi r18,-31
 57549 18d66 3F4F      		sbci r19,-1
 57550 18d68 B901      		movw r22,r18
 57551 18d6a 0E94 0000 		call presolve_statuscheck
 57552 18d6e 8823      		tst r24
 57553 18d70 01F0      		breq .L2348
5584:lp_solve_5.5/lp_presolve.c ****             status = presolve_redundantSOS(psdata, &iBoundTighten, &iSum);
 57554               		.loc 2 5584 0
 57555 18d72 8DA9      		ldd r24,Y+53
 57556 18d74 9EA9      		ldd r25,Y+54
 57557 18d76 AE01      		movw r20,r28
 57558 18d78 455D      		subi r20,-43
 57559 18d7a 5F4F      		sbci r21,-1
 57560 18d7c 9E01      		movw r18,r28
 57561 18d7e 295D      		subi r18,-39
 57562 18d80 3F4F      		sbci r19,-1
 57563 18d82 B901      		movw r22,r18
 57564 18d84 0E94 0000 		call presolve_redundantSOS
 57565 18d88 98A3      		std Y+32,r25
 57566 18d8a 8F8F      		std Y+31,r24
 57567               	.L2348:
5585:lp_solve_5.5/lp_presolve.c **** 
5586:lp_solve_5.5/lp_presolve.c ****         } while((status == RUNNING) && (iSum > 0));
 57568               		.loc 2 5586 0
 57569 18d8c 8F8D      		ldd r24,Y+31
 57570 18d8e 98A1      		ldd r25,Y+32
 57571 18d90 0897      		sbiw r24,8
 57572 18d92 01F4      		brne .L2349
 57573               		.loc 2 5586 0 is_stmt 0 discriminator 1
 57574 18d94 8BA5      		ldd r24,Y+43
 57575 18d96 9CA5      		ldd r25,Y+44
 57576 18d98 1816      		cp __zero_reg__,r24
 57577 18d9a 1906      		cpc __zero_reg__,r25
 57578 18d9c 04F4      		brge .+2
 57579 18d9e 00C0      		rjmp .L2344
 57580               	.L2349:
5587:lp_solve_5.5/lp_presolve.c ****         if(status != RUNNING)
 57581               		.loc 2 5587 0 is_stmt 1
 57582 18da0 8F8D      		ldd r24,Y+31
 57583 18da2 98A1      		ldd r25,Y+32
 57584 18da4 0897      		sbiw r24,8
 57585 18da6 01F0      		breq .+2
 57586 18da8 00C0      		rjmp .L2427
5588:lp_solve_5.5/lp_presolve.c ****           break;
5589:lp_solve_5.5/lp_presolve.c **** 
5590:lp_solve_5.5/lp_presolve.c ****         /* Merge compatible similar rows; loop backwards over every row */
5591:lp_solve_5.5/lp_presolve.c ****         if(presolve_statuscheck(psdata, &status) &&
 57587               		.loc 2 5591 0
 57588 18daa 8DA9      		ldd r24,Y+53
 57589 18dac 9EA9      		ldd r25,Y+54
 57590 18dae 9E01      		movw r18,r28
 57591 18db0 215E      		subi r18,-31
 57592 18db2 3F4F      		sbci r19,-1
 57593 18db4 B901      		movw r22,r18
 57594 18db6 0E94 0000 		call presolve_statuscheck
 57595 18dba 8823      		tst r24
 57596 18dbc 01F0      		breq .L2351
5592:lp_solve_5.5/lp_presolve.c ****            (psdata->outerloops == 1) && (psdata->middleloops <= MAX_PSMERGELOOPS) &&
 57597               		.loc 2 5592 0 discriminator 1
 57598 18dbe 8DA9      		ldd r24,Y+53
 57599 18dc0 9EA9      		ldd r25,Y+54
 57600 18dc2 FC01      		movw r30,r24
 57601 18dc4 80A1      		ldd r24,Z+32
 57602 18dc6 91A1      		ldd r25,Z+33
5591:lp_solve_5.5/lp_presolve.c ****            (psdata->outerloops == 1) && (psdata->middleloops <= MAX_PSMERGELOOPS) &&
 57603               		.loc 2 5591 0 discriminator 1
 57604 18dc8 0197      		sbiw r24,1
 57605 18dca 01F4      		brne .L2351
 57606               		.loc 2 5592 0
 57607 18dcc 8DA9      		ldd r24,Y+53
 57608 18dce 9EA9      		ldd r25,Y+54
 57609 18dd0 DC01      		movw r26,r24
 57610 18dd2 5E96      		adiw r26,30
 57611 18dd4 8D91      		ld r24,X+
 57612 18dd6 9C91      		ld r25,X
 57613 18dd8 5F97      		sbiw r26,30+1
 57614 18dda 0397      		sbiw r24,3
 57615 18ddc 04F4      		brge .L2351
5593:lp_solve_5.5/lp_presolve.c ****            is_presolve(lp, PRESOLVE_MERGEROWS))
 57616               		.loc 2 5593 0 discriminator 1
 57617 18dde CE01      		movw r24,r28
 57618 18de0 8C57      		subi r24,124
 57619 18de2 9F4F      		sbci r25,-1
 57620 18de4 FC01      		movw r30,r24
 57621 18de6 8081      		ld r24,Z
 57622 18de8 9181      		ldd r25,Z+1
 57623 18dea 60E0      		ldi r22,0
 57624 18dec 70E8      		ldi r23,lo8(-128)
 57625 18dee 0E94 0000 		call is_presolve
5592:lp_solve_5.5/lp_presolve.c ****            (psdata->outerloops == 1) && (psdata->middleloops <= MAX_PSMERGELOOPS) &&
 57626               		.loc 2 5592 0 discriminator 1
 57627 18df2 8823      		tst r24
 57628 18df4 01F0      		breq .L2351
5594:lp_solve_5.5/lp_presolve.c ****           status = presolve_mergerows(psdata, &iConRemove, &iSum);
 57629               		.loc 2 5594 0
 57630 18df6 8DA9      		ldd r24,Y+53
 57631 18df8 9EA9      		ldd r25,Y+54
 57632 18dfa AE01      		movw r20,r28
 57633 18dfc 455D      		subi r20,-43
 57634 18dfe 5F4F      		sbci r21,-1
 57635 18e00 9E01      		movw r18,r28
 57636 18e02 2D5D      		subi r18,-35
 57637 18e04 3F4F      		sbci r19,-1
 57638 18e06 B901      		movw r22,r18
 57639 18e08 0E94 0000 		call presolve_mergerows
 57640 18e0c 98A3      		std Y+32,r25
 57641 18e0e 8F8F      		std Y+31,r24
 57642               	.L2351:
5595:lp_solve_5.5/lp_presolve.c **** 
5596:lp_solve_5.5/lp_presolve.c ****         /* Eliminate dominated rows */
5597:lp_solve_5.5/lp_presolve.c ****         if(presolve_statuscheck(psdata, &status) &&
 57643               		.loc 2 5597 0
 57644 18e10 8DA9      		ldd r24,Y+53
 57645 18e12 9EA9      		ldd r25,Y+54
 57646 18e14 9E01      		movw r18,r28
 57647 18e16 215E      		subi r18,-31
 57648 18e18 3F4F      		sbci r19,-1
 57649 18e1a B901      		movw r22,r18
 57650 18e1c 0E94 0000 		call presolve_statuscheck
 57651 18e20 8823      		tst r24
 57652 18e22 01F0      		breq .L2352
5598:lp_solve_5.5/lp_presolve.c ****            is_presolve(lp, PRESOLVE_ROWDOMINATE))
 57653               		.loc 2 5598 0 discriminator 1
 57654 18e24 CE01      		movw r24,r28
 57655 18e26 8C57      		subi r24,124
 57656 18e28 9F4F      		sbci r25,-1
 57657 18e2a DC01      		movw r26,r24
 57658 18e2c 8D91      		ld r24,X+
 57659 18e2e 9C91      		ld r25,X
 57660 18e30 60E0      		ldi r22,0
 57661 18e32 70E2      		ldi r23,lo8(32)
 57662 18e34 0E94 0000 		call is_presolve
5597:lp_solve_5.5/lp_presolve.c ****            is_presolve(lp, PRESOLVE_ROWDOMINATE))
 57663               		.loc 2 5597 0 discriminator 1
 57664 18e38 8823      		tst r24
 57665 18e3a 01F0      		breq .L2352
5599:lp_solve_5.5/lp_presolve.c ****           presolve_rowdominance(psdata, &iCoeffChanged, &iConRemove, &iVarFixed, &iSum);
 57666               		.loc 2 5599 0
 57667 18e3c 8DA9      		ldd r24,Y+53
 57668 18e3e 9EA9      		ldd r25,Y+54
 57669 18e40 FE01      		movw r30,r28
 57670 18e42 BB96      		adiw r30,43
 57671 18e44 9E01      		movw r18,r28
 57672 18e46 2B5D      		subi r18,-37
 57673 18e48 3F4F      		sbci r19,-1
 57674 18e4a AE01      		movw r20,r28
 57675 18e4c 4D5D      		subi r20,-35
 57676 18e4e 5F4F      		sbci r21,-1
 57677 18e50 BE01      		movw r22,r28
 57678 18e52 6F5D      		subi r22,-33
 57679 18e54 7F4F      		sbci r23,-1
 57680 18e56 8F01      		movw r16,r30
 57681 18e58 0E94 0000 		call presolve_rowdominance
 57682               	.L2352:
5600:lp_solve_5.5/lp_presolve.c **** 
5601:lp_solve_5.5/lp_presolve.c ****         /* See if we can convert some constraints to SOSes (only SOS1 handled) */
5602:lp_solve_5.5/lp_presolve.c ****         if(presolve_statuscheck(psdata, &status) && (MIP_count(lp) > 0) &&
 57683               		.loc 2 5602 0
 57684 18e5c 8DA9      		ldd r24,Y+53
 57685 18e5e 9EA9      		ldd r25,Y+54
 57686 18e60 9E01      		movw r18,r28
 57687 18e62 215E      		subi r18,-31
 57688 18e64 3F4F      		sbci r19,-1
 57689 18e66 B901      		movw r22,r18
 57690 18e68 0E94 0000 		call presolve_statuscheck
 57691 18e6c 8823      		tst r24
 57692 18e6e 01F0      		breq .L2353
 57693               		.loc 2 5602 0 is_stmt 0 discriminator 1
 57694 18e70 CE01      		movw r24,r28
 57695 18e72 8C57      		subi r24,124
 57696 18e74 9F4F      		sbci r25,-1
 57697 18e76 FC01      		movw r30,r24
 57698 18e78 8081      		ld r24,Z
 57699 18e7a 9181      		ldd r25,Z+1
 57700 18e7c 0E94 0000 		call MIP_count
 57701 18e80 1816      		cp __zero_reg__,r24
 57702 18e82 1906      		cpc __zero_reg__,r25
 57703 18e84 04F4      		brge .L2353
5603:lp_solve_5.5/lp_presolve.c ****            is_presolve(lp, PRESOLVE_SOS))
 57704               		.loc 2 5603 0 is_stmt 1 discriminator 2
 57705 18e86 CE01      		movw r24,r28
 57706 18e88 8C57      		subi r24,124
 57707 18e8a 9F4F      		sbci r25,-1
 57708 18e8c DC01      		movw r26,r24
 57709 18e8e 8D91      		ld r24,X+
 57710 18e90 9C91      		ld r25,X
 57711 18e92 60E2      		ldi r22,lo8(32)
 57712 18e94 70E0      		ldi r23,0
 57713 18e96 0E94 0000 		call is_presolve
5602:lp_solve_5.5/lp_presolve.c ****            is_presolve(lp, PRESOLVE_SOS))
 57714               		.loc 2 5602 0 discriminator 2
 57715 18e9a 8823      		tst r24
 57716 18e9c 01F0      		breq .L2353
5604:lp_solve_5.5/lp_presolve.c ****           status = presolve_SOS1(psdata, &iCoeffChanged, &iConRemove, &iVarFixed, &iSOS, &iSum);
 57717               		.loc 2 5604 0
 57718 18e9e 8DA9      		ldd r24,Y+53
 57719 18ea0 9EA9      		ldd r25,Y+54
 57720 18ea2 DE01      		movw r26,r28
 57721 18ea4 9B96      		adiw r26,43
 57722 18ea6 FE01      		movw r30,r28
 57723 18ea8 B996      		adiw r30,41
 57724 18eaa 9E01      		movw r18,r28
 57725 18eac 2B5D      		subi r18,-37
 57726 18eae 3F4F      		sbci r19,-1
 57727 18eb0 AE01      		movw r20,r28
 57728 18eb2 4D5D      		subi r20,-35
 57729 18eb4 5F4F      		sbci r21,-1
 57730 18eb6 BE01      		movw r22,r28
 57731 18eb8 6F5D      		subi r22,-33
 57732 18eba 7F4F      		sbci r23,-1
 57733 18ebc 7D01      		movw r14,r26
 57734 18ebe 8F01      		movw r16,r30
 57735 18ec0 0E94 0000 		call presolve_SOS1
 57736 18ec4 98A3      		std Y+32,r25
 57737 18ec6 8F8F      		std Y+31,r24
 57738               	.L2353:
5605:lp_solve_5.5/lp_presolve.c **** 
5606:lp_solve_5.5/lp_presolve.c ****         /* Eliminate dominated columns in set coverage models */
5607:lp_solve_5.5/lp_presolve.c ****         if(presolve_statuscheck(psdata, &status) && (lp->int_vars > 1) &&
 57739               		.loc 2 5607 0
 57740 18ec8 8DA9      		ldd r24,Y+53
 57741 18eca 9EA9      		ldd r25,Y+54
 57742 18ecc 9E01      		movw r18,r28
 57743 18ece 215E      		subi r18,-31
 57744 18ed0 3F4F      		sbci r19,-1
 57745 18ed2 B901      		movw r22,r18
 57746 18ed4 0E94 0000 		call presolve_statuscheck
 57747 18ed8 8823      		tst r24
 57748 18eda 01F0      		breq .L2354
 57749               		.loc 2 5607 0 is_stmt 0 discriminator 1
 57750 18edc CE01      		movw r24,r28
 57751 18ede 8C57      		subi r24,124
 57752 18ee0 9F4F      		sbci r25,-1
 57753 18ee2 FC01      		movw r30,r24
 57754 18ee4 8081      		ld r24,Z
 57755 18ee6 9181      		ldd r25,Z+1
 57756 18ee8 8257      		subi r24,114
 57757 18eea 9D4F      		sbci r25,-3
 57758 18eec DC01      		movw r26,r24
 57759 18eee 8D91      		ld r24,X+
 57760 18ef0 9C91      		ld r25,X
 57761 18ef2 0297      		sbiw r24,2
 57762 18ef4 04F0      		brlt .L2354
5608:lp_solve_5.5/lp_presolve.c ****            is_presolve(lp, PRESOLVE_COLDOMINATE))
 57763               		.loc 2 5608 0 is_stmt 1 discriminator 2
 57764 18ef6 CE01      		movw r24,r28
 57765 18ef8 8C57      		subi r24,124
 57766 18efa 9F4F      		sbci r25,-1
 57767 18efc FC01      		movw r30,r24
 57768 18efe 8081      		ld r24,Z
 57769 18f00 9181      		ldd r25,Z+1
 57770 18f02 60E0      		ldi r22,0
 57771 18f04 70E4      		ldi r23,lo8(64)
 57772 18f06 0E94 0000 		call is_presolve
5607:lp_solve_5.5/lp_presolve.c ****            is_presolve(lp, PRESOLVE_COLDOMINATE))
 57773               		.loc 2 5607 0 discriminator 2
 57774 18f0a 8823      		tst r24
 57775 18f0c 01F0      		breq .L2354
5609:lp_solve_5.5/lp_presolve.c ****           presolve_coldominance01(psdata, &iConRemove, &iVarFixed, &iSum);
 57776               		.loc 2 5609 0
 57777 18f0e 8DA9      		ldd r24,Y+53
 57778 18f10 9EA9      		ldd r25,Y+54
 57779 18f12 9E01      		movw r18,r28
 57780 18f14 255D      		subi r18,-43
 57781 18f16 3F4F      		sbci r19,-1
 57782 18f18 AE01      		movw r20,r28
 57783 18f1a 4B5D      		subi r20,-37
 57784 18f1c 5F4F      		sbci r21,-1
 57785 18f1e BE01      		movw r22,r28
 57786 18f20 6D5D      		subi r22,-35
 57787 18f22 7F4F      		sbci r23,-1
 57788 18f24 0E94 0000 		call presolve_coldominance01
 57789               	.L2354:
5610:lp_solve_5.5/lp_presolve.c **** 
5611:lp_solve_5.5/lp_presolve.c ****         /* Aggregate compatible columns */
5612:lp_solve_5.5/lp_presolve.c ****         if(presolve_statuscheck(psdata, &status) && /*TRUE ||*/
 57790               		.loc 2 5612 0
 57791 18f28 8DA9      		ldd r24,Y+53
 57792 18f2a 9EA9      		ldd r25,Y+54
 57793 18f2c 9E01      		movw r18,r28
 57794 18f2e 215E      		subi r18,-31
 57795 18f30 3F4F      		sbci r19,-1
 57796 18f32 B901      		movw r22,r18
 57797 18f34 0E94 0000 		call presolve_statuscheck
 57798 18f38 8823      		tst r24
 57799 18f3a 01F0      		breq .L2355
5613:lp_solve_5.5/lp_presolve.c ****            is_presolve(lp, PRESOLVE_AGGREGATE))
 57800               		.loc 2 5613 0 discriminator 1
 57801 18f3c CE01      		movw r24,r28
 57802 18f3e 8C57      		subi r24,124
 57803 18f40 9F4F      		sbci r25,-1
 57804 18f42 DC01      		movw r26,r24
 57805 18f44 8D91      		ld r24,X+
 57806 18f46 9C91      		ld r25,X
 57807 18f48 68E0      		ldi r22,lo8(8)
 57808 18f4a 70E0      		ldi r23,0
 57809 18f4c 0E94 0000 		call is_presolve
5612:lp_solve_5.5/lp_presolve.c ****            is_presolve(lp, PRESOLVE_AGGREGATE))
 57810               		.loc 2 5612 0 discriminator 1
 57811 18f50 8823      		tst r24
 57812 18f52 01F0      		breq .L2355
5614:lp_solve_5.5/lp_presolve.c ****           presolve_aggregate(psdata, &iConRemove, &iVarFixed, &iSum);
 57813               		.loc 2 5614 0
 57814 18f54 8DA9      		ldd r24,Y+53
 57815 18f56 9EA9      		ldd r25,Y+54
 57816 18f58 9E01      		movw r18,r28
 57817 18f5a 255D      		subi r18,-43
 57818 18f5c 3F4F      		sbci r19,-1
 57819 18f5e AE01      		movw r20,r28
 57820 18f60 4B5D      		subi r20,-37
 57821 18f62 5F4F      		sbci r21,-1
 57822 18f64 BE01      		movw r22,r28
 57823 18f66 6D5D      		subi r22,-35
 57824 18f68 7F4F      		sbci r23,-1
 57825 18f6a 0E94 0000 		call presolve_aggregate
 57826               	.L2355:
5615:lp_solve_5.5/lp_presolve.c **** 
5616:lp_solve_5.5/lp_presolve.c ****         /* Eliminate free variables and implied slacks */
5617:lp_solve_5.5/lp_presolve.c ****         if(presolve_statuscheck(psdata, &status) &&
 57827               		.loc 2 5617 0
 57828 18f6e 8DA9      		ldd r24,Y+53
 57829 18f70 9EA9      		ldd r25,Y+54
 57830 18f72 9E01      		movw r18,r28
 57831 18f74 215E      		subi r18,-31
 57832 18f76 3F4F      		sbci r19,-1
 57833 18f78 B901      		movw r22,r18
 57834 18f7a 0E94 0000 		call presolve_statuscheck
 57835 18f7e 8823      		tst r24
 57836 18f80 01F0      		breq .L2356
5618:lp_solve_5.5/lp_presolve.c **** /*           !is_presolve(lp, PRESOLVE_ELIMEQ2) && */
5619:lp_solve_5.5/lp_presolve.c ****            is_presolve(lp, PRESOLVE_IMPLIEDSLK | PRESOLVE_IMPLIEDFREE))
 57837               		.loc 2 5619 0 discriminator 1
 57838 18f82 CE01      		movw r24,r28
 57839 18f84 8C57      		subi r24,124
 57840 18f86 9F4F      		sbci r25,-1
 57841 18f88 FC01      		movw r30,r24
 57842 18f8a 8081      		ld r24,Z
 57843 18f8c 9181      		ldd r25,Z+1
 57844 18f8e 60E0      		ldi r22,0
 57845 18f90 72E0      		ldi r23,lo8(2)
 57846 18f92 0E94 0000 		call is_presolve
5617:lp_solve_5.5/lp_presolve.c **** /*           !is_presolve(lp, PRESOLVE_ELIMEQ2) && */
 57847               		.loc 2 5617 0 discriminator 1
 57848 18f96 8823      		tst r24
 57849 18f98 01F0      		breq .L2356
5620:lp_solve_5.5/lp_presolve.c ****           status = presolve_freeandslacks(psdata, &iCoeffChanged, &iConRemove, &iVarFixed, &iSum);
 57850               		.loc 2 5620 0
 57851 18f9a 8DA9      		ldd r24,Y+53
 57852 18f9c 9EA9      		ldd r25,Y+54
 57853 18f9e FE01      		movw r30,r28
 57854 18fa0 BB96      		adiw r30,43
 57855 18fa2 9E01      		movw r18,r28
 57856 18fa4 2B5D      		subi r18,-37
 57857 18fa6 3F4F      		sbci r19,-1
 57858 18fa8 AE01      		movw r20,r28
 57859 18faa 4D5D      		subi r20,-35
 57860 18fac 5F4F      		sbci r21,-1
 57861 18fae BE01      		movw r22,r28
 57862 18fb0 6F5D      		subi r22,-33
 57863 18fb2 7F4F      		sbci r23,-1
 57864 18fb4 8F01      		movw r16,r30
 57865 18fb6 0E94 0000 		call presolve_freeandslacks
 57866 18fba 98A3      		std Y+32,r25
 57867 18fbc 8F8F      		std Y+31,r24
 57868               	.L2356:
5621:lp_solve_5.5/lp_presolve.c **** 
5622:lp_solve_5.5/lp_presolve.c ****       } while((status == RUNNING) && (iSum > 0));
 57869               		.loc 2 5622 0
 57870 18fbe 8F8D      		ldd r24,Y+31
 57871 18fc0 98A1      		ldd r25,Y+32
 57872 18fc2 0897      		sbiw r24,8
 57873 18fc4 01F4      		brne .L2345
 57874               		.loc 2 5622 0 is_stmt 0 discriminator 1
 57875 18fc6 8BA5      		ldd r24,Y+43
 57876 18fc8 9CA5      		ldd r25,Y+44
 57877 18fca 1816      		cp __zero_reg__,r24
 57878 18fcc 1906      		cpc __zero_reg__,r25
 57879 18fce 04F4      		brge .+2
 57880 18fd0 00C0      		rjmp .L2357
 57881 18fd2 00C0      		rjmp .L2345
 57882               	.L2426:
5562:lp_solve_5.5/lp_presolve.c **** 
 57883               		.loc 2 5562 0 is_stmt 1
 57884 18fd4 0000      		nop
 57885 18fd6 00C0      		rjmp .L2345
 57886               	.L2427:
5588:lp_solve_5.5/lp_presolve.c **** 
 57887               		.loc 2 5588 0
 57888 18fd8 0000      		nop
 57889               	.L2345:
5623:lp_solve_5.5/lp_presolve.c ****       if(status != RUNNING)
 57890               		.loc 2 5623 0
 57891 18fda 8F8D      		ldd r24,Y+31
 57892 18fdc 98A1      		ldd r25,Y+32
 57893 18fde 0897      		sbiw r24,8
 57894 18fe0 01F0      		breq .+2
 57895 18fe2 00C0      		rjmp .L2428
5624:lp_solve_5.5/lp_presolve.c ****         break;
5625:lp_solve_5.5/lp_presolve.c **** 
5626:lp_solve_5.5/lp_presolve.c ****       /* Check if we can do elimination of rank-deficient equality constraints */
5627:lp_solve_5.5/lp_presolve.c ****       if(presolve_statuscheck(psdata, &status) && (psdata->EQmap->count > 1) &&
 57896               		.loc 2 5627 0
 57897 18fe4 8DA9      		ldd r24,Y+53
 57898 18fe6 9EA9      		ldd r25,Y+54
 57899 18fe8 9E01      		movw r18,r28
 57900 18fea 215E      		subi r18,-31
 57901 18fec 3F4F      		sbci r19,-1
 57902 18fee B901      		movw r22,r18
 57903 18ff0 0E94 0000 		call presolve_statuscheck
 57904 18ff4 8823      		tst r24
 57905 18ff6 01F0      		breq .L2360
 57906               		.loc 2 5627 0 is_stmt 0 discriminator 1
 57907 18ff8 8DA9      		ldd r24,Y+53
 57908 18ffa 9EA9      		ldd r25,Y+54
 57909 18ffc DC01      		movw r26,r24
 57910 18ffe 1496      		adiw r26,4
 57911 19000 8D91      		ld r24,X+
 57912 19002 9C91      		ld r25,X
 57913 19004 1597      		sbiw r26,4+1
 57914 19006 FC01      		movw r30,r24
 57915 19008 8281      		ldd r24,Z+2
 57916 1900a 9381      		ldd r25,Z+3
 57917 1900c 0297      		sbiw r24,2
 57918 1900e 04F0      		brlt .L2360
5628:lp_solve_5.5/lp_presolve.c ****          is_presolve(lp, PRESOLVE_LINDEP)) {
 57919               		.loc 2 5628 0 is_stmt 1 discriminator 2
 57920 19010 CE01      		movw r24,r28
 57921 19012 8C57      		subi r24,124
 57922 19014 9F4F      		sbci r25,-1
 57923 19016 DC01      		movw r26,r24
 57924 19018 8D91      		ld r24,X+
 57925 1901a 9C91      		ld r25,X
 57926 1901c 64E0      		ldi r22,lo8(4)
 57927 1901e 70E0      		ldi r23,0
 57928 19020 0E94 0000 		call is_presolve
5627:lp_solve_5.5/lp_presolve.c ****          is_presolve(lp, PRESOLVE_LINDEP)) {
 57929               		.loc 2 5627 0 discriminator 2
 57930 19024 8823      		tst r24
 57931 19026 01F0      		breq .L2360
5629:lp_solve_5.5/lp_presolve.c **** #if 0
5630:lp_solve_5.5/lp_presolve.c ****         REPORT_mat_mmsave(lp, "A.mtx", NULL, FALSE, "Constraint matrix A");
5631:lp_solve_5.5/lp_presolve.c **** #endif
5632:lp_solve_5.5/lp_presolve.c ****         presolve_singularities(psdata, &iCoeffChanged, &iConRemove, &iVarFixed, &iSum);
 57932               		.loc 2 5632 0
 57933 19028 8DA9      		ldd r24,Y+53
 57934 1902a 9EA9      		ldd r25,Y+54
 57935 1902c FE01      		movw r30,r28
 57936 1902e BB96      		adiw r30,43
 57937 19030 9E01      		movw r18,r28
 57938 19032 2B5D      		subi r18,-37
 57939 19034 3F4F      		sbci r19,-1
 57940 19036 AE01      		movw r20,r28
 57941 19038 4D5D      		subi r20,-35
 57942 1903a 5F4F      		sbci r21,-1
 57943 1903c BE01      		movw r22,r28
 57944 1903e 6F5D      		subi r22,-33
 57945 19040 7F4F      		sbci r23,-1
 57946 19042 8F01      		movw r16,r30
 57947 19044 0E94 0000 		call presolve_singularities
 57948               	.L2360:
5633:lp_solve_5.5/lp_presolve.c ****       }
5634:lp_solve_5.5/lp_presolve.c **** 
5635:lp_solve_5.5/lp_presolve.c ****       /* Eliminate variable and tighten bounds using 2-element EQs;
5636:lp_solve_5.5/lp_presolve.c ****         note that this involves modifying the coefficients of A and
5637:lp_solve_5.5/lp_presolve.c ****         can therefore be a slow operation. */
5638:lp_solve_5.5/lp_presolve.c ****       if(presolve_statuscheck(psdata, &status) &&
 57949               		.loc 2 5638 0
 57950 19048 8DA9      		ldd r24,Y+53
 57951 1904a 9EA9      		ldd r25,Y+54
 57952 1904c 9E01      		movw r18,r28
 57953 1904e 215E      		subi r18,-31
 57954 19050 3F4F      		sbci r19,-1
 57955 19052 B901      		movw r22,r18
 57956 19054 0E94 0000 		call presolve_statuscheck
 57957 19058 8823      		tst r24
 57958 1905a 01F0      		breq .L2361
5639:lp_solve_5.5/lp_presolve.c ****          is_presolve(lp, PRESOLVE_ELIMEQ2)) {
 57959               		.loc 2 5639 0 discriminator 1
 57960 1905c CE01      		movw r24,r28
 57961 1905e 8C57      		subi r24,124
 57962 19060 9F4F      		sbci r25,-1
 57963 19062 FC01      		movw r30,r24
 57964 19064 8081      		ld r24,Z
 57965 19066 9181      		ldd r25,Z+1
 57966 19068 60E0      		ldi r22,0
 57967 1906a 71E0      		ldi r23,lo8(1)
 57968 1906c 0E94 0000 		call is_presolve
5638:lp_solve_5.5/lp_presolve.c ****          is_presolve(lp, PRESOLVE_ELIMEQ2)) {
 57969               		.loc 2 5638 0 discriminator 1
 57970 19070 8823      		tst r24
 57971 19072 01F0      		breq .L2361
5640:lp_solve_5.5/lp_presolve.c ****         jjx = 0;
 57972               		.loc 2 5640 0
 57973 19074 1886      		std Y+8,__zero_reg__
 57974 19076 1F82      		std Y+7,__zero_reg__
 57975               	.L2363:
5641:lp_solve_5.5/lp_presolve.c ****         do {
5642:lp_solve_5.5/lp_presolve.c ****           jjx += iSum;
 57976               		.loc 2 5642 0 discriminator 2
 57977 19078 8BA5      		ldd r24,Y+43
 57978 1907a 9CA5      		ldd r25,Y+44
 57979 1907c 2F81      		ldd r18,Y+7
 57980 1907e 3885      		ldd r19,Y+8
 57981 19080 820F      		add r24,r18
 57982 19082 931F      		adc r25,r19
 57983 19084 9887      		std Y+8,r25
 57984 19086 8F83      		std Y+7,r24
5643:lp_solve_5.5/lp_presolve.c ****           status = presolve_elimeq2(psdata, &iCoeffChanged, &iConRemove, &iVarFixed, &iSum);
 57985               		.loc 2 5643 0 discriminator 2
 57986 19088 8DA9      		ldd r24,Y+53
 57987 1908a 9EA9      		ldd r25,Y+54
 57988 1908c FE01      		movw r30,r28
 57989 1908e BB96      		adiw r30,43
 57990 19090 9E01      		movw r18,r28
 57991 19092 2B5D      		subi r18,-37
 57992 19094 3F4F      		sbci r19,-1
 57993 19096 AE01      		movw r20,r28
 57994 19098 4D5D      		subi r20,-35
 57995 1909a 5F4F      		sbci r21,-1
 57996 1909c BE01      		movw r22,r28
 57997 1909e 6F5D      		subi r22,-33
 57998 190a0 7F4F      		sbci r23,-1
 57999 190a2 8F01      		movw r16,r30
 58000 190a4 0E94 0000 		call presolve_elimeq2
 58001 190a8 98A3      		std Y+32,r25
 58002 190aa 8F8F      		std Y+31,r24
5644:lp_solve_5.5/lp_presolve.c ****         } while((status == RUNNING) && (iSum > jjx));
 58003               		.loc 2 5644 0 discriminator 2
 58004 190ac 8F8D      		ldd r24,Y+31
 58005 190ae 98A1      		ldd r25,Y+32
 58006 190b0 0897      		sbiw r24,8
 58007 190b2 01F4      		brne .L2362
 58008               		.loc 2 5644 0 is_stmt 0 discriminator 1
 58009 190b4 2BA5      		ldd r18,Y+43
 58010 190b6 3CA5      		ldd r19,Y+44
 58011 190b8 8F81      		ldd r24,Y+7
 58012 190ba 9885      		ldd r25,Y+8
 58013 190bc 8217      		cp r24,r18
 58014 190be 9307      		cpc r25,r19
 58015 190c0 04F0      		brlt .L2363
 58016               	.L2362:
5645:lp_solve_5.5/lp_presolve.c ****         iSum = jjx;
 58017               		.loc 2 5645 0 is_stmt 1
 58018 190c2 8F81      		ldd r24,Y+7
 58019 190c4 9885      		ldd r25,Y+8
 58020 190c6 9CA7      		std Y+44,r25
 58021 190c8 8BA7      		std Y+43,r24
 58022               	.L2361:
5646:lp_solve_5.5/lp_presolve.c **** 
5647:lp_solve_5.5/lp_presolve.c **** #if 0
5648:lp_solve_5.5/lp_presolve.c ****         /* Eliminate free variables and implied slacks */
5649:lp_solve_5.5/lp_presolve.c ****         if(presolve_statuscheck(psdata, &status) &&
5650:lp_solve_5.5/lp_presolve.c ****            is_presolve(lp, PRESOLVE_IMPLIEDSLK | PRESOLVE_IMPLIEDFREE))
5651:lp_solve_5.5/lp_presolve.c ****           status = presolve_freeandslacks(psdata, &iCoeffChanged, &iConRemove, &iVarFixed, &iSum);
5652:lp_solve_5.5/lp_presolve.c **** #endif
5653:lp_solve_5.5/lp_presolve.c ****       }
5654:lp_solve_5.5/lp_presolve.c **** 
5655:lp_solve_5.5/lp_presolve.c ****       /* Increase A matrix sparsity by discovering common subsets using EQs */
5656:lp_solve_5.5/lp_presolve.c ****       if(presolve_statuscheck(psdata, &status) && (psdata->EQmap->count > 0) &&
 58023               		.loc 2 5656 0
 58024 190ca 8DA9      		ldd r24,Y+53
 58025 190cc 9EA9      		ldd r25,Y+54
 58026 190ce 9E01      		movw r18,r28
 58027 190d0 215E      		subi r18,-31
 58028 190d2 3F4F      		sbci r19,-1
 58029 190d4 B901      		movw r22,r18
 58030 190d6 0E94 0000 		call presolve_statuscheck
 58031 190da 8823      		tst r24
 58032 190dc 01F0      		breq .L2364
 58033               		.loc 2 5656 0 is_stmt 0 discriminator 1
 58034 190de 8DA9      		ldd r24,Y+53
 58035 190e0 9EA9      		ldd r25,Y+54
 58036 190e2 DC01      		movw r26,r24
 58037 190e4 1496      		adiw r26,4
 58038 190e6 8D91      		ld r24,X+
 58039 190e8 9C91      		ld r25,X
 58040 190ea 1597      		sbiw r26,4+1
 58041 190ec FC01      		movw r30,r24
 58042 190ee 8281      		ldd r24,Z+2
 58043 190f0 9381      		ldd r25,Z+3
 58044 190f2 1816      		cp __zero_reg__,r24
 58045 190f4 1906      		cpc __zero_reg__,r25
 58046 190f6 04F4      		brge .L2364
5657:lp_solve_5.5/lp_presolve.c ****          is_presolve(lp, PRESOLVE_SPARSER))
 58047               		.loc 2 5657 0 is_stmt 1 discriminator 2
 58048 190f8 CE01      		movw r24,r28
 58049 190fa 8C57      		subi r24,124
 58050 190fc 9F4F      		sbci r25,-1
 58051 190fe DC01      		movw r26,r24
 58052 19100 8D91      		ld r24,X+
 58053 19102 9C91      		ld r25,X
 58054 19104 60E1      		ldi r22,lo8(16)
 58055 19106 70E0      		ldi r23,0
 58056 19108 0E94 0000 		call is_presolve
5656:lp_solve_5.5/lp_presolve.c ****          is_presolve(lp, PRESOLVE_SPARSER))
 58057               		.loc 2 5656 0 discriminator 2
 58058 1910c 8823      		tst r24
 58059 1910e 01F0      		breq .L2364
5658:lp_solve_5.5/lp_presolve.c ****         status = presolve_makesparser(psdata, &iCoeffChanged, &iConRemove, &iVarFixed, &iSum);
 58060               		.loc 2 5658 0
 58061 19110 8DA9      		ldd r24,Y+53
 58062 19112 9EA9      		ldd r25,Y+54
 58063 19114 FE01      		movw r30,r28
 58064 19116 BB96      		adiw r30,43
 58065 19118 9E01      		movw r18,r28
 58066 1911a 2B5D      		subi r18,-37
 58067 1911c 3F4F      		sbci r19,-1
 58068 1911e AE01      		movw r20,r28
 58069 19120 4D5D      		subi r20,-35
 58070 19122 5F4F      		sbci r21,-1
 58071 19124 BE01      		movw r22,r28
 58072 19126 6F5D      		subi r22,-33
 58073 19128 7F4F      		sbci r23,-1
 58074 1912a 8F01      		movw r16,r30
 58075 1912c 0E94 0000 		call presolve_makesparser
 58076 19130 98A3      		std Y+32,r25
 58077 19132 8F8F      		std Y+31,r24
 58078               	.L2364:
5659:lp_solve_5.5/lp_presolve.c **** 
5660:lp_solve_5.5/lp_presolve.c ****       /* Do GCD-based coefficient reductions (also does row scaling,
5661:lp_solve_5.5/lp_presolve.c ****         even if no rhs INT truncations are possible) */
5662:lp_solve_5.5/lp_presolve.c ****       if(presolve_statuscheck(psdata, &status) && (psdata->INTmap->count > 0) &&
 58079               		.loc 2 5662 0
 58080 19134 8DA9      		ldd r24,Y+53
 58081 19136 9EA9      		ldd r25,Y+54
 58082 19138 9E01      		movw r18,r28
 58083 1913a 215E      		subi r18,-31
 58084 1913c 3F4F      		sbci r19,-1
 58085 1913e B901      		movw r22,r18
 58086 19140 0E94 0000 		call presolve_statuscheck
 58087 19144 8823      		tst r24
 58088 19146 01F0      		breq .L2365
 58089               		.loc 2 5662 0 is_stmt 0 discriminator 1
 58090 19148 8DA9      		ldd r24,Y+53
 58091 1914a 9EA9      		ldd r25,Y+54
 58092 1914c FC01      		movw r30,r24
 58093 1914e 8085      		ldd r24,Z+8
 58094 19150 9185      		ldd r25,Z+9
 58095 19152 DC01      		movw r26,r24
 58096 19154 1296      		adiw r26,2
 58097 19156 8D91      		ld r24,X+
 58098 19158 9C91      		ld r25,X
 58099 1915a 1397      		sbiw r26,2+1
 58100 1915c 1816      		cp __zero_reg__,r24
 58101 1915e 1906      		cpc __zero_reg__,r25
 58102 19160 04F4      		brge .L2365
5663:lp_solve_5.5/lp_presolve.c ****          is_presolve(lp, PRESOLVE_REDUCEGCD))
 58103               		.loc 2 5663 0 is_stmt 1 discriminator 2
 58104 19162 CE01      		movw r24,r28
 58105 19164 8C57      		subi r24,124
 58106 19166 9F4F      		sbci r25,-1
 58107 19168 FC01      		movw r30,r24
 58108 1916a 8081      		ld r24,Z
 58109 1916c 9181      		ldd r25,Z+1
 58110 1916e 60E0      		ldi r22,0
 58111 19170 74E0      		ldi r23,lo8(4)
 58112 19172 0E94 0000 		call is_presolve
5662:lp_solve_5.5/lp_presolve.c ****          is_presolve(lp, PRESOLVE_REDUCEGCD))
 58113               		.loc 2 5662 0 discriminator 2
 58114 19176 8823      		tst r24
 58115 19178 01F0      		breq .L2365
5664:lp_solve_5.5/lp_presolve.c ****         if(!presolve_reduceGCD(psdata, &iCoeffChanged, &iBoundTighten, &iSum))
 58116               		.loc 2 5664 0
 58117 1917a 8DA9      		ldd r24,Y+53
 58118 1917c 9EA9      		ldd r25,Y+54
 58119 1917e 9E01      		movw r18,r28
 58120 19180 255D      		subi r18,-43
 58121 19182 3F4F      		sbci r19,-1
 58122 19184 AE01      		movw r20,r28
 58123 19186 495D      		subi r20,-39
 58124 19188 5F4F      		sbci r21,-1
 58125 1918a BE01      		movw r22,r28
 58126 1918c 6F5D      		subi r22,-33
 58127 1918e 7F4F      		sbci r23,-1
 58128 19190 0E94 0000 		call presolve_reduceGCD
 58129 19194 8823      		tst r24
 58130 19196 01F4      		brne .L2365
5665:lp_solve_5.5/lp_presolve.c ****           status = presolve_setstatus(psdata, INFEASIBLE);
 58131               		.loc 2 5665 0
 58132 19198 8DA9      		ldd r24,Y+53
 58133 1919a 9EA9      		ldd r25,Y+54
 58134 1919c 20E0      		ldi r18,lo8(.LC21)
 58135 1919e 30E0      		ldi r19,hi8(.LC21)
 58136 191a0 41E2      		ldi r20,lo8(33)
 58137 191a2 56E1      		ldi r21,lo8(22)
 58138 191a4 62E0      		ldi r22,lo8(2)
 58139 191a6 70E0      		ldi r23,0
 58140 191a8 0E94 0000 		call presolve_setstatusex
 58141 191ac 98A3      		std Y+32,r25
 58142 191ae 8F8F      		std Y+31,r24
 58143               	.L2365:
5666:lp_solve_5.5/lp_presolve.c **** 
5667:lp_solve_5.5/lp_presolve.c ****       /* Simplify knapsack or set coverage models where OF coefficients are
5668:lp_solve_5.5/lp_presolve.c ****         duplicated in the constraints.  At the cost of adding helper columns, this
5669:lp_solve_5.5/lp_presolve.c ****         increases sparsity and facilitates identification of lower and upper bounds. */
5670:lp_solve_5.5/lp_presolve.c ****       if(presolve_statuscheck(psdata, &status) &&
 58144               		.loc 2 5670 0
 58145 191b0 8DA9      		ldd r24,Y+53
 58146 191b2 9EA9      		ldd r25,Y+54
 58147 191b4 9E01      		movw r18,r28
 58148 191b6 215E      		subi r18,-31
 58149 191b8 3F4F      		sbci r19,-1
 58150 191ba B901      		movw r22,r18
 58151 191bc 0E94 0000 		call presolve_statuscheck
 58152 191c0 8823      		tst r24
 58153 191c2 01F0      		breq .L2366
5671:lp_solve_5.5/lp_presolve.c ****           is_presolve(lp, PRESOLVE_KNAPSACK)) {
 58154               		.loc 2 5671 0 discriminator 1
 58155 191c4 CE01      		movw r24,r28
 58156 191c6 8C57      		subi r24,124
 58157 191c8 9F4F      		sbci r25,-1
 58158 191ca DC01      		movw r26,r24
 58159 191cc 8D91      		ld r24,X+
 58160 191ce 9C91      		ld r25,X
 58161 191d0 60E8      		ldi r22,lo8(-128)
 58162 191d2 70E0      		ldi r23,0
 58163 191d4 0E94 0000 		call is_presolve
5670:lp_solve_5.5/lp_presolve.c ****           is_presolve(lp, PRESOLVE_KNAPSACK)) {
 58164               		.loc 2 5670 0 discriminator 1
 58165 191d8 8823      		tst r24
 58166 191da 01F0      		breq .L2366
5672:lp_solve_5.5/lp_presolve.c ****         i = iCoeffChanged;
 58167               		.loc 2 5672 0
 58168 191dc 89A1      		ldd r24,Y+33
 58169 191de 9AA1      		ldd r25,Y+34
 58170 191e0 9A83      		std Y+2,r25
 58171 191e2 8983      		std Y+1,r24
5673:lp_solve_5.5/lp_presolve.c ****         status = presolve_knapsack(psdata, &iCoeffChanged);
 58172               		.loc 2 5673 0
 58173 191e4 8DA9      		ldd r24,Y+53
 58174 191e6 9EA9      		ldd r25,Y+54
 58175 191e8 9E01      		movw r18,r28
 58176 191ea 2F5D      		subi r18,-33
 58177 191ec 3F4F      		sbci r19,-1
 58178 191ee B901      		movw r22,r18
 58179 191f0 0E94 0000 		call presolve_knapsack
 58180 191f4 98A3      		std Y+32,r25
 58181 191f6 8F8F      		std Y+31,r24
 58182               	.L2366:
5674:lp_solve_5.5/lp_presolve.c ****       }
5675:lp_solve_5.5/lp_presolve.c **** 
5676:lp_solve_5.5/lp_presolve.c ****       /* Remove any "hanging" empty row and columns */
5677:lp_solve_5.5/lp_presolve.c ****       if(status == RUNNING)
 58183               		.loc 2 5677 0
 58184 191f8 8F8D      		ldd r24,Y+31
 58185 191fa 98A1      		ldd r25,Y+32
 58186 191fc 0897      		sbiw r24,8
 58187 191fe 01F4      		brne .L2367
5678:lp_solve_5.5/lp_presolve.c ****         status = presolve_shrink(psdata, &iConRemove, &iVarFixed);
 58188               		.loc 2 5678 0
 58189 19200 8DA9      		ldd r24,Y+53
 58190 19202 9EA9      		ldd r25,Y+54
 58191 19204 AE01      		movw r20,r28
 58192 19206 4B5D      		subi r20,-37
 58193 19208 5F4F      		sbci r21,-1
 58194 1920a 9E01      		movw r18,r28
 58195 1920c 2D5D      		subi r18,-35
 58196 1920e 3F4F      		sbci r19,-1
 58197 19210 B901      		movw r22,r18
 58198 19212 0E94 0000 		call presolve_shrink
 58199 19216 98A3      		std Y+32,r25
 58200 19218 8F8F      		std Y+31,r24
 58201               	.L2367:
5679:lp_solve_5.5/lp_presolve.c **** 
5680:lp_solve_5.5/lp_presolve.c ****       nCoeffChanged += iCoeffChanged;
 58202               		.loc 2 5680 0
 58203 1921a 89A1      		ldd r24,Y+33
 58204 1921c 9AA1      		ldd r25,Y+34
 58205 1921e 2985      		ldd r18,Y+9
 58206 19220 3A85      		ldd r19,Y+10
 58207 19222 820F      		add r24,r18
 58208 19224 931F      		adc r25,r19
 58209 19226 9A87      		std Y+10,r25
 58210 19228 8987      		std Y+9,r24
5681:lp_solve_5.5/lp_presolve.c ****       nConRemove    += iConRemove;
 58211               		.loc 2 5681 0
 58212 1922a 8BA1      		ldd r24,Y+35
 58213 1922c 9CA1      		ldd r25,Y+36
 58214 1922e 2B85      		ldd r18,Y+11
 58215 19230 3C85      		ldd r19,Y+12
 58216 19232 820F      		add r24,r18
 58217 19234 931F      		adc r25,r19
 58218 19236 9C87      		std Y+12,r25
 58219 19238 8B87      		std Y+11,r24
5682:lp_solve_5.5/lp_presolve.c ****       nVarFixed     += iVarFixed;
 58220               		.loc 2 5682 0
 58221 1923a 8DA1      		ldd r24,Y+37
 58222 1923c 9EA1      		ldd r25,Y+38
 58223 1923e 2D85      		ldd r18,Y+13
 58224 19240 3E85      		ldd r19,Y+14
 58225 19242 820F      		add r24,r18
 58226 19244 931F      		adc r25,r19
 58227 19246 9E87      		std Y+14,r25
 58228 19248 8D87      		std Y+13,r24
5683:lp_solve_5.5/lp_presolve.c ****       nBoundTighten += iBoundTighten;
 58229               		.loc 2 5683 0
 58230 1924a 8FA1      		ldd r24,Y+39
 58231 1924c 98A5      		ldd r25,Y+40
 58232 1924e 2F85      		ldd r18,Y+15
 58233 19250 3889      		ldd r19,Y+16
 58234 19252 820F      		add r24,r18
 58235 19254 931F      		adc r25,r19
 58236 19256 988B      		std Y+16,r25
 58237 19258 8F87      		std Y+15,r24
5684:lp_solve_5.5/lp_presolve.c ****       nSOS          += iSOS;
 58238               		.loc 2 5684 0
 58239 1925a 89A5      		ldd r24,Y+41
 58240 1925c 9AA5      		ldd r25,Y+42
 58241 1925e 2989      		ldd r18,Y+17
 58242 19260 3A89      		ldd r19,Y+18
 58243 19262 820F      		add r24,r18
 58244 19264 931F      		adc r25,r19
 58245 19266 9A8B      		std Y+18,r25
 58246 19268 898B      		std Y+17,r24
5685:lp_solve_5.5/lp_presolve.c ****       nSum          += iSum;
 58247               		.loc 2 5685 0
 58248 1926a 8BA5      		ldd r24,Y+43
 58249 1926c 9CA5      		ldd r25,Y+44
 58250 1926e 2B89      		ldd r18,Y+19
 58251 19270 3C89      		ldd r19,Y+20
 58252 19272 820F      		add r24,r18
 58253 19274 931F      		adc r25,r19
 58254 19276 9C8B      		std Y+20,r25
 58255 19278 8B8B      		std Y+19,r24
5686:lp_solve_5.5/lp_presolve.c **** 
5687:lp_solve_5.5/lp_presolve.c ****       iSum           = iConRemove + iVarFixed + iBoundTighten + iCoeffChanged;
 58256               		.loc 2 5687 0
 58257 1927a 2BA1      		ldd r18,Y+35
 58258 1927c 3CA1      		ldd r19,Y+36
 58259 1927e 8DA1      		ldd r24,Y+37
 58260 19280 9EA1      		ldd r25,Y+38
 58261 19282 280F      		add r18,r24
 58262 19284 391F      		adc r19,r25
 58263 19286 8FA1      		ldd r24,Y+39
 58264 19288 98A5      		ldd r25,Y+40
 58265 1928a 280F      		add r18,r24
 58266 1928c 391F      		adc r19,r25
 58267 1928e 89A1      		ldd r24,Y+33
 58268 19290 9AA1      		ldd r25,Y+34
 58269 19292 820F      		add r24,r18
 58270 19294 931F      		adc r25,r19
 58271 19296 9CA7      		std Y+44,r25
 58272 19298 8BA7      		std Y+43,r24
5688:lp_solve_5.5/lp_presolve.c ****       if(iSum > 0)
 58273               		.loc 2 5688 0
 58274 1929a 8BA5      		ldd r24,Y+43
 58275 1929c 9CA5      		ldd r25,Y+44
 58276 1929e 1816      		cp __zero_reg__,r24
 58277 192a0 1906      		cpc __zero_reg__,r25
 58278 192a2 04F4      		brge .L2368
5689:lp_solve_5.5/lp_presolve.c ****         report(lp, NORMAL, "Presolve O:%d -> Reduced rows:%5d, cols:%5d --- changed bnds:%5d, Ab:%5
 58279               		.loc 2 5689 0
 58280 192a4 E9A1      		ldd r30,Y+33
 58281 192a6 FAA1      		ldd r31,Y+34
 58282 192a8 6FA1      		ldd r22,Y+39
 58283 192aa 78A5      		ldd r23,Y+40
 58284 192ac 4DA1      		ldd r20,Y+37
 58285 192ae 5EA1      		ldd r21,Y+38
 58286 192b0 2BA1      		ldd r18,Y+35
 58287 192b2 3CA1      		ldd r19,Y+36
5690:lp_solve_5.5/lp_presolve.c ****                            psdata->outerloops, iConRemove, iVarFixed, iBoundTighten, iCoeffChanged)
 58288               		.loc 2 5690 0
 58289 192b4 8DA9      		ldd r24,Y+53
 58290 192b6 9EA9      		ldd r25,Y+54
5689:lp_solve_5.5/lp_presolve.c ****         report(lp, NORMAL, "Presolve O:%d -> Reduced rows:%5d, cols:%5d --- changed bnds:%5d, Ab:%5
 58291               		.loc 2 5689 0
 58292 192b8 DC01      		movw r26,r24
 58293 192ba 9096      		adiw r26,32
 58294 192bc 8D91      		ld r24,X+
 58295 192be 9C91      		ld r25,X
 58296 192c0 9197      		sbiw r26,32+1
 58297 192c2 AF2F      		mov r26,r31
 58298 192c4 AF93      		push r26
 58299 192c6 EF93      		push r30
 58300 192c8 E72F      		mov r30,r23
 58301 192ca EF93      		push r30
 58302 192cc 6F93      		push r22
 58303 192ce 652F      		mov r22,r21
 58304 192d0 6F93      		push r22
 58305 192d2 4F93      		push r20
 58306 192d4 432F      		mov r20,r19
 58307 192d6 4F93      		push r20
 58308 192d8 2F93      		push r18
 58309 192da 292F      		mov r18,r25
 58310 192dc 2F93      		push r18
 58311 192de 8F93      		push r24
 58312 192e0 80E0      		ldi r24,lo8(.LC74)
 58313 192e2 90E0      		ldi r25,hi8(.LC74)
 58314 192e4 892F      		mov r24,r25
 58315 192e6 8F93      		push r24
 58316 192e8 80E0      		ldi r24,lo8(.LC74)
 58317 192ea 90E0      		ldi r25,hi8(.LC74)
 58318 192ec 8F93      		push r24
 58319 192ee 1F92      		push __zero_reg__
 58320 192f0 84E0      		ldi r24,lo8(4)
 58321 192f2 8F93      		push r24
 58322 192f4 CE01      		movw r24,r28
 58323 192f6 8C57      		subi r24,124
 58324 192f8 9F4F      		sbci r25,-1
 58325 192fa FC01      		movw r30,r24
 58326 192fc 2181      		ldd r18,Z+1
 58327 192fe 2F93      		push r18
 58328 19300 DC01      		movw r26,r24
 58329 19302 8C91      		ld r24,X
 58330 19304 8F93      		push r24
 58331 19306 0E94 0000 		call report
 58332 1930a EDB7      		in r30,__SP_L__
 58333 1930c FEB7      		in r31,__SP_H__
 58334 1930e 7096      		adiw r30,16
 58335 19310 0FB6      		in __tmp_reg__,__SREG__
 58336 19312 F894      		cli
 58337 19314 DEBF      		out __SP_H__,r29
 58338 19316 0FBE      		out __SREG__,__tmp_reg__
 58339 19318 CDBF      		out __SP_L__,r28
 58340               	.L2368:
5691:lp_solve_5.5/lp_presolve.c **** 
5692:lp_solve_5.5/lp_presolve.c ****    /* Do the outermost loop again if we were successful in this presolve sequences */
5693:lp_solve_5.5/lp_presolve.c ****     } while(presolve_statuscheck(psdata, &status) &&
 58341               		.loc 2 5693 0
 58342 1931a 8DA9      		ldd r24,Y+53
 58343 1931c 9EA9      		ldd r25,Y+54
 58344 1931e 9E01      		movw r18,r28
 58345 19320 215E      		subi r18,-31
 58346 19322 3F4F      		sbci r19,-1
 58347 19324 B901      		movw r22,r18
 58348 19326 0E94 0000 		call presolve_statuscheck
5694:lp_solve_5.5/lp_presolve.c ****            (psdata->forceupdate || (oSum < nSum)) &&
5695:lp_solve_5.5/lp_presolve.c ****            (psdata->outerloops < get_presolveloops(lp)) &&
5696:lp_solve_5.5/lp_presolve.c ****            (psdata->rows->varmap->count+psdata->cols->varmap->count > 0));
 58349               		.loc 2 5696 0
 58350 1932a 8823      		tst r24
 58351 1932c 01F4      		brne .+2
 58352 1932e 00C0      		rjmp .L2359
5694:lp_solve_5.5/lp_presolve.c ****            (psdata->forceupdate || (oSum < nSum)) &&
 58353               		.loc 2 5694 0
 58354 19330 8DA9      		ldd r24,Y+53
 58355 19332 9EA9      		ldd r25,Y+54
 58356 19334 DC01      		movw r26,r24
 58357 19336 9496      		adiw r26,36
 58358 19338 8C91      		ld r24,X
5693:lp_solve_5.5/lp_presolve.c ****            (psdata->forceupdate || (oSum < nSum)) &&
 58359               		.loc 2 5693 0
 58360 1933a 8823      		tst r24
 58361 1933c 01F4      		brne .L2369
5694:lp_solve_5.5/lp_presolve.c ****            (psdata->forceupdate || (oSum < nSum)) &&
 58362               		.loc 2 5694 0
 58363 1933e 2D8D      		ldd r18,Y+29
 58364 19340 3E8D      		ldd r19,Y+30
 58365 19342 8B89      		ldd r24,Y+19
 58366 19344 9C89      		ldd r25,Y+20
 58367 19346 2817      		cp r18,r24
 58368 19348 3907      		cpc r19,r25
 58369 1934a 04F4      		brge .L2359
 58370               	.L2369:
5695:lp_solve_5.5/lp_presolve.c ****            (psdata->rows->varmap->count+psdata->cols->varmap->count > 0));
 58371               		.loc 2 5695 0 discriminator 1
 58372 1934c 8DA9      		ldd r24,Y+53
 58373 1934e 9EA9      		ldd r25,Y+54
 58374 19350 FC01      		movw r30,r24
 58375 19352 00A1      		ldd r16,Z+32
 58376 19354 11A1      		ldd r17,Z+33
 58377 19356 CE01      		movw r24,r28
 58378 19358 8C57      		subi r24,124
 58379 1935a 9F4F      		sbci r25,-1
 58380 1935c DC01      		movw r26,r24
 58381 1935e 8D91      		ld r24,X+
 58382 19360 9C91      		ld r25,X
 58383 19362 0E94 0000 		call get_presolveloops
5694:lp_solve_5.5/lp_presolve.c ****            (psdata->forceupdate || (oSum < nSum)) &&
 58384               		.loc 2 5694 0 discriminator 1
 58385 19366 0817      		cp r16,r24
 58386 19368 1907      		cpc r17,r25
 58387 1936a 04F4      		brge .L2359
 58388               		.loc 2 5696 0
 58389 1936c 8DA9      		ldd r24,Y+53
 58390 1936e 9EA9      		ldd r25,Y+54
 58391 19370 FC01      		movw r30,r24
 58392 19372 8081      		ld r24,Z
 58393 19374 9181      		ldd r25,Z+1
 58394 19376 DC01      		movw r26,r24
 58395 19378 8D91      		ld r24,X+
 58396 1937a 9C91      		ld r25,X
 58397 1937c FC01      		movw r30,r24
 58398 1937e 2281      		ldd r18,Z+2
 58399 19380 3381      		ldd r19,Z+3
 58400 19382 8DA9      		ldd r24,Y+53
 58401 19384 9EA9      		ldd r25,Y+54
 58402 19386 DC01      		movw r26,r24
 58403 19388 1296      		adiw r26,2
 58404 1938a 8D91      		ld r24,X+
 58405 1938c 9C91      		ld r25,X
 58406 1938e 1397      		sbiw r26,2+1
 58407 19390 FC01      		movw r30,r24
 58408 19392 8081      		ld r24,Z
 58409 19394 9181      		ldd r25,Z+1
 58410 19396 DC01      		movw r26,r24
 58411 19398 1296      		adiw r26,2
 58412 1939a 8D91      		ld r24,X+
 58413 1939c 9C91      		ld r25,X
 58414 1939e 1397      		sbiw r26,2+1
 58415 193a0 820F      		add r24,r18
 58416 193a2 931F      		adc r25,r19
5695:lp_solve_5.5/lp_presolve.c ****            (psdata->rows->varmap->count+psdata->cols->varmap->count > 0));
 58417               		.loc 2 5695 0
 58418 193a4 1816      		cp __zero_reg__,r24
 58419 193a6 1906      		cpc __zero_reg__,r25
 58420 193a8 04F4      		brge .+2
 58421 193aa 00C0      		rjmp .L2370
 58422 193ac 00C0      		rjmp .L2359
 58423               	.L2428:
5624:lp_solve_5.5/lp_presolve.c **** 
 58424               		.loc 2 5624 0
 58425 193ae 0000      		nop
 58426               	.L2359:
5697:lp_solve_5.5/lp_presolve.c **** 
5698:lp_solve_5.5/lp_presolve.c ****    /* Finalize presolve */
5699:lp_solve_5.5/lp_presolve.c **** #ifdef Paranoia
5700:lp_solve_5.5/lp_presolve.c ****     i = presolve_debugcheck(lp, psdata->rows->varmap, psdata->cols->varmap);
5701:lp_solve_5.5/lp_presolve.c ****     if(i > 0)
5702:lp_solve_5.5/lp_presolve.c ****       report(lp, SEVERE, "presolve: %d internal consistency failure%s\n", i, my_plural_std(i));
5703:lp_solve_5.5/lp_presolve.c ****     if((SOS_count(lp) > 0) && !presolve_SOScheck(psdata))
5704:lp_solve_5.5/lp_presolve.c ****       report(lp, SEVERE, "presolve: SOS sparse member mapping problem - part 1\n");
5705:lp_solve_5.5/lp_presolve.c **** #endif
5706:lp_solve_5.5/lp_presolve.c ****     /* Perform bound relaxation to reduce chance of degeneracy. */
5707:lp_solve_5.5/lp_presolve.c ****     if((status == RUNNING) && !is_presolve(lp, PRESOLVE_IMPLIEDFREE))
 58427               		.loc 2 5707 0
 58428 193b0 8F8D      		ldd r24,Y+31
 58429 193b2 98A1      		ldd r25,Y+32
 58430 193b4 0897      		sbiw r24,8
 58431 193b6 01F4      		brne .L2371
 58432               		.loc 2 5707 0 is_stmt 0 discriminator 1
 58433 193b8 CE01      		movw r24,r28
 58434 193ba 8C57      		subi r24,124
 58435 193bc 9F4F      		sbci r25,-1
 58436 193be FC01      		movw r30,r24
 58437 193c0 8081      		ld r24,Z
 58438 193c2 9181      		ldd r25,Z+1
 58439 193c4 60E0      		ldi r22,0
 58440 193c6 72E0      		ldi r23,lo8(2)
 58441 193c8 0E94 0000 		call is_presolve
 58442 193cc 8823      		tst r24
 58443 193ce 01F4      		brne .L2371
5708:lp_solve_5.5/lp_presolve.c ****       jjx = presolve_makefree(psdata);
 58444               		.loc 2 5708 0 is_stmt 1
 58445 193d0 8DA9      		ldd r24,Y+53
 58446 193d2 9EA9      		ldd r25,Y+54
 58447 193d4 0E94 0000 		call presolve_makefree
 58448 193d8 9887      		std Y+8,r25
 58449 193da 8F83      		std Y+7,r24
 58450 193dc 00C0      		rjmp .L2372
 58451               	.L2371:
5709:lp_solve_5.5/lp_presolve.c ****     else
5710:lp_solve_5.5/lp_presolve.c ****       jjx = 0;
 58452               		.loc 2 5710 0
 58453 193de 1886      		std Y+8,__zero_reg__
 58454 193e0 1F82      		std Y+7,__zero_reg__
 58455               	.L2372:
5711:lp_solve_5.5/lp_presolve.c **** 
5712:lp_solve_5.5/lp_presolve.c **** 
5713:lp_solve_5.5/lp_presolve.c ****     /* Finalize the presolve */
5714:lp_solve_5.5/lp_presolve.c ****     if(!presolve_finalize(psdata))
 58456               		.loc 2 5714 0
 58457 193e2 8DA9      		ldd r24,Y+53
 58458 193e4 9EA9      		ldd r25,Y+54
 58459 193e6 0E94 0000 		call presolve_finalize
 58460 193ea 8823      		tst r24
 58461 193ec 01F4      		brne .L2373
5715:lp_solve_5.5/lp_presolve.c ****       report(lp, SEVERE, "presolve: Unable to construct internal data representation\n");
 58462               		.loc 2 5715 0
 58463 193ee 80E0      		ldi r24,lo8(.LC75)
 58464 193f0 90E0      		ldi r25,hi8(.LC75)
 58465 193f2 892F      		mov r24,r25
 58466 193f4 8F93      		push r24
 58467 193f6 80E0      		ldi r24,lo8(.LC75)
 58468 193f8 90E0      		ldi r25,hi8(.LC75)
 58469 193fa 8F93      		push r24
 58470 193fc 1F92      		push __zero_reg__
 58471 193fe 82E0      		ldi r24,lo8(2)
 58472 19400 8F93      		push r24
 58473 19402 CE01      		movw r24,r28
 58474 19404 8C57      		subi r24,124
 58475 19406 9F4F      		sbci r25,-1
 58476 19408 DC01      		movw r26,r24
 58477 1940a 1196      		adiw r26,1
 58478 1940c 2C91      		ld r18,X
 58479 1940e 2F93      		push r18
 58480 19410 FC01      		movw r30,r24
 58481 19412 8081      		ld r24,Z
 58482 19414 8F93      		push r24
 58483 19416 0E94 0000 		call report
 58484 1941a 0F90      		pop __tmp_reg__
 58485 1941c 0F90      		pop __tmp_reg__
 58486 1941e 0F90      		pop __tmp_reg__
 58487 19420 0F90      		pop __tmp_reg__
 58488 19422 0F90      		pop __tmp_reg__
 58489 19424 0F90      		pop __tmp_reg__
 58490               	.L2373:
5716:lp_solve_5.5/lp_presolve.c **** 
5717:lp_solve_5.5/lp_presolve.c ****    /* Report summary information */
5718:lp_solve_5.5/lp_presolve.c ****     i = NORMAL;
 58491               		.loc 2 5718 0
 58492 19426 84E0      		ldi r24,lo8(4)
 58493 19428 90E0      		ldi r25,0
 58494 1942a 9A83      		std Y+2,r25
 58495 1942c 8983      		std Y+1,r24
5719:lp_solve_5.5/lp_presolve.c ****     iVarFixed  = lp->presolve_undo->orig_columns - psdata->cols->varmap->count;
 58496               		.loc 2 5719 0
 58497 1942e CE01      		movw r24,r28
 58498 19430 8C57      		subi r24,124
 58499 19432 9F4F      		sbci r25,-1
 58500 19434 DC01      		movw r26,r24
 58501 19436 8D91      		ld r24,X+
 58502 19438 9C91      		ld r25,X
 58503 1943a 8A59      		subi r24,-102
 58504 1943c 9C4F      		sbci r25,-4
 58505 1943e FC01      		movw r30,r24
 58506 19440 8081      		ld r24,Z
 58507 19442 9181      		ldd r25,Z+1
 58508 19444 DC01      		movw r26,r24
 58509 19446 1496      		adiw r26,4
 58510 19448 2D91      		ld r18,X+
 58511 1944a 3C91      		ld r19,X
 58512 1944c 1597      		sbiw r26,4+1
 58513 1944e 8DA9      		ldd r24,Y+53
 58514 19450 9EA9      		ldd r25,Y+54
 58515 19452 FC01      		movw r30,r24
 58516 19454 8281      		ldd r24,Z+2
 58517 19456 9381      		ldd r25,Z+3
 58518 19458 DC01      		movw r26,r24
 58519 1945a 8D91      		ld r24,X+
 58520 1945c 9C91      		ld r25,X
 58521 1945e FC01      		movw r30,r24
 58522 19460 8281      		ldd r24,Z+2
 58523 19462 9381      		ldd r25,Z+3
 58524 19464 A901      		movw r20,r18
 58525 19466 481B      		sub r20,r24
 58526 19468 590B      		sbc r21,r25
 58527 1946a CA01      		movw r24,r20
 58528 1946c 9EA3      		std Y+38,r25
 58529 1946e 8DA3      		std Y+37,r24
5720:lp_solve_5.5/lp_presolve.c ****     iConRemove = lp->presolve_undo->orig_rows - psdata->rows->varmap->count;
 58530               		.loc 2 5720 0
 58531 19470 CE01      		movw r24,r28
 58532 19472 8C57      		subi r24,124
 58533 19474 9F4F      		sbci r25,-1
 58534 19476 DC01      		movw r26,r24
 58535 19478 8D91      		ld r24,X+
 58536 1947a 9C91      		ld r25,X
 58537 1947c 8A59      		subi r24,-102
 58538 1947e 9C4F      		sbci r25,-4
 58539 19480 FC01      		movw r30,r24
 58540 19482 8081      		ld r24,Z
 58541 19484 9181      		ldd r25,Z+1
 58542 19486 DC01      		movw r26,r24
 58543 19488 1296      		adiw r26,2
 58544 1948a 2D91      		ld r18,X+
 58545 1948c 3C91      		ld r19,X
 58546 1948e 1397      		sbiw r26,2+1
 58547 19490 8DA9      		ldd r24,Y+53
 58548 19492 9EA9      		ldd r25,Y+54
 58549 19494 FC01      		movw r30,r24
 58550 19496 8081      		ld r24,Z
 58551 19498 9181      		ldd r25,Z+1
 58552 1949a DC01      		movw r26,r24
 58553 1949c 8D91      		ld r24,X+
 58554 1949e 9C91      		ld r25,X
 58555 194a0 FC01      		movw r30,r24
 58556 194a2 8281      		ldd r24,Z+2
 58557 194a4 9381      		ldd r25,Z+3
 58558 194a6 A901      		movw r20,r18
 58559 194a8 481B      		sub r20,r24
 58560 194aa 590B      		sbc r21,r25
 58561 194ac CA01      		movw r24,r20
 58562 194ae 9CA3      		std Y+36,r25
 58563 194b0 8BA3      		std Y+35,r24
5721:lp_solve_5.5/lp_presolve.c ****     if(nSum > 0)
 58564               		.loc 2 5721 0
 58565 194b2 8B89      		ldd r24,Y+19
 58566 194b4 9C89      		ldd r25,Y+20
 58567 194b6 1816      		cp __zero_reg__,r24
 58568 194b8 1906      		cpc __zero_reg__,r25
 58569 194ba 04F4      		brge .L2374
5722:lp_solve_5.5/lp_presolve.c ****       report(lp, i, "PRESOLVE             Elimination loops performed.......... O%d:M%d:I%d\n",
5723:lp_solve_5.5/lp_presolve.c ****                                   psdata->outerloops, psdata->middleloops, psdata->innerloops);
 58570               		.loc 2 5723 0
 58571 194bc 8DA9      		ldd r24,Y+53
 58572 194be 9EA9      		ldd r25,Y+54
5722:lp_solve_5.5/lp_presolve.c ****       report(lp, i, "PRESOLVE             Elimination loops performed.......... O%d:M%d:I%d\n",
 58573               		.loc 2 5722 0
 58574 194c0 DC01      		movw r26,r24
 58575 194c2 5C96      		adiw r26,28
 58576 194c4 4D91      		ld r20,X+
 58577 194c6 5C91      		ld r21,X
 58578 194c8 5D97      		sbiw r26,28+1
 58579               		.loc 2 5723 0
 58580 194ca 8DA9      		ldd r24,Y+53
 58581 194cc 9EA9      		ldd r25,Y+54
5722:lp_solve_5.5/lp_presolve.c ****       report(lp, i, "PRESOLVE             Elimination loops performed.......... O%d:M%d:I%d\n",
 58582               		.loc 2 5722 0
 58583 194ce FC01      		movw r30,r24
 58584 194d0 268D      		ldd r18,Z+30
 58585 194d2 378D      		ldd r19,Z+31
 58586               		.loc 2 5723 0
 58587 194d4 8DA9      		ldd r24,Y+53
 58588 194d6 9EA9      		ldd r25,Y+54
5722:lp_solve_5.5/lp_presolve.c ****       report(lp, i, "PRESOLVE             Elimination loops performed.......... O%d:M%d:I%d\n",
 58589               		.loc 2 5722 0
 58590 194d8 DC01      		movw r26,r24
 58591 194da 9096      		adiw r26,32
 58592 194dc 8D91      		ld r24,X+
 58593 194de 9C91      		ld r25,X
 58594 194e0 9197      		sbiw r26,32+1
 58595 194e2 652F      		mov r22,r21
 58596 194e4 6F93      		push r22
 58597 194e6 4F93      		push r20
 58598 194e8 432F      		mov r20,r19
 58599 194ea 4F93      		push r20
 58600 194ec 2F93      		push r18
 58601 194ee 292F      		mov r18,r25
 58602 194f0 2F93      		push r18
 58603 194f2 8F93      		push r24
 58604 194f4 80E0      		ldi r24,lo8(.LC76)
 58605 194f6 90E0      		ldi r25,hi8(.LC76)
 58606 194f8 892F      		mov r24,r25
 58607 194fa 8F93      		push r24
 58608 194fc 80E0      		ldi r24,lo8(.LC76)
 58609 194fe 90E0      		ldi r25,hi8(.LC76)
 58610 19500 8F93      		push r24
 58611 19502 8A81      		ldd r24,Y+2
 58612 19504 8F93      		push r24
 58613 19506 8981      		ldd r24,Y+1
 58614 19508 8F93      		push r24
 58615 1950a CE01      		movw r24,r28
 58616 1950c 8C57      		subi r24,124
 58617 1950e 9F4F      		sbci r25,-1
 58618 19510 FC01      		movw r30,r24
 58619 19512 2181      		ldd r18,Z+1
 58620 19514 2F93      		push r18
 58621 19516 DC01      		movw r26,r24
 58622 19518 8C91      		ld r24,X
 58623 1951a 8F93      		push r24
 58624 1951c 0E94 0000 		call report
 58625 19520 EDB7      		in r30,__SP_L__
 58626 19522 FEB7      		in r31,__SP_H__
 58627 19524 3C96      		adiw r30,12
 58628 19526 0FB6      		in __tmp_reg__,__SREG__
 58629 19528 F894      		cli
 58630 1952a DEBF      		out __SP_H__,r29
 58631 1952c 0FBE      		out __SREG__,__tmp_reg__
 58632 1952e CDBF      		out __SP_L__,r28
 58633               	.L2374:
5724:lp_solve_5.5/lp_presolve.c ****     if(nVarFixed)
 58634               		.loc 2 5724 0
 58635 19530 8D85      		ldd r24,Y+13
 58636 19532 9E85      		ldd r25,Y+14
 58637 19534 892B      		or r24,r25
 58638 19536 01F0      		breq .L2375
5725:lp_solve_5.5/lp_presolve.c ****       report(lp, i, "            %8d empty or fixed variables............. %s.\n", nVarFixed, "REMO
 58639               		.loc 2 5725 0
 58640 19538 80E0      		ldi r24,lo8(.LC77)
 58641 1953a 90E0      		ldi r25,hi8(.LC77)
 58642 1953c 892F      		mov r24,r25
 58643 1953e 8F93      		push r24
 58644 19540 80E0      		ldi r24,lo8(.LC77)
 58645 19542 90E0      		ldi r25,hi8(.LC77)
 58646 19544 8F93      		push r24
 58647 19546 8E85      		ldd r24,Y+14
 58648 19548 8F93      		push r24
 58649 1954a 8D85      		ldd r24,Y+13
 58650 1954c 8F93      		push r24
 58651 1954e 80E0      		ldi r24,lo8(.LC78)
 58652 19550 90E0      		ldi r25,hi8(.LC78)
 58653 19552 892F      		mov r24,r25
 58654 19554 8F93      		push r24
 58655 19556 80E0      		ldi r24,lo8(.LC78)
 58656 19558 90E0      		ldi r25,hi8(.LC78)
 58657 1955a 8F93      		push r24
 58658 1955c 8A81      		ldd r24,Y+2
 58659 1955e 8F93      		push r24
 58660 19560 8981      		ldd r24,Y+1
 58661 19562 8F93      		push r24
 58662 19564 CE01      		movw r24,r28
 58663 19566 8C57      		subi r24,124
 58664 19568 9F4F      		sbci r25,-1
 58665 1956a DC01      		movw r26,r24
 58666 1956c 1196      		adiw r26,1
 58667 1956e 2C91      		ld r18,X
 58668 19570 2F93      		push r18
 58669 19572 FC01      		movw r30,r24
 58670 19574 8081      		ld r24,Z
 58671 19576 8F93      		push r24
 58672 19578 0E94 0000 		call report
 58673 1957c 4DB7      		in r20,__SP_L__
 58674 1957e 5EB7      		in r21,__SP_H__
 58675 19580 465F      		subi r20,-10
 58676 19582 5F4F      		sbci r21,-1
 58677 19584 0FB6      		in __tmp_reg__,__SREG__
 58678 19586 F894      		cli
 58679 19588 DEBF      		out __SP_H__,r29
 58680 1958a 0FBE      		out __SREG__,__tmp_reg__
 58681 1958c CDBF      		out __SP_L__,r28
 58682               	.L2375:
5726:lp_solve_5.5/lp_presolve.c ****     if(nConRemove)
 58683               		.loc 2 5726 0
 58684 1958e 8B85      		ldd r24,Y+11
 58685 19590 9C85      		ldd r25,Y+12
 58686 19592 892B      		or r24,r25
 58687 19594 01F0      		breq .L2376
5727:lp_solve_5.5/lp_presolve.c ****       report(lp, i, "            %8d empty or redundant constraints....... %s.\n", nConRemove, "REM
 58688               		.loc 2 5727 0
 58689 19596 80E0      		ldi r24,lo8(.LC77)
 58690 19598 90E0      		ldi r25,hi8(.LC77)
 58691 1959a 892F      		mov r24,r25
 58692 1959c 8F93      		push r24
 58693 1959e 80E0      		ldi r24,lo8(.LC77)
 58694 195a0 90E0      		ldi r25,hi8(.LC77)
 58695 195a2 8F93      		push r24
 58696 195a4 8C85      		ldd r24,Y+12
 58697 195a6 8F93      		push r24
 58698 195a8 8B85      		ldd r24,Y+11
 58699 195aa 8F93      		push r24
 58700 195ac 80E0      		ldi r24,lo8(.LC79)
 58701 195ae 90E0      		ldi r25,hi8(.LC79)
 58702 195b0 892F      		mov r24,r25
 58703 195b2 8F93      		push r24
 58704 195b4 80E0      		ldi r24,lo8(.LC79)
 58705 195b6 90E0      		ldi r25,hi8(.LC79)
 58706 195b8 8F93      		push r24
 58707 195ba 8A81      		ldd r24,Y+2
 58708 195bc 8F93      		push r24
 58709 195be 8981      		ldd r24,Y+1
 58710 195c0 8F93      		push r24
 58711 195c2 CE01      		movw r24,r28
 58712 195c4 8C57      		subi r24,124
 58713 195c6 9F4F      		sbci r25,-1
 58714 195c8 DC01      		movw r26,r24
 58715 195ca 1196      		adiw r26,1
 58716 195cc 2C91      		ld r18,X
 58717 195ce 2F93      		push r18
 58718 195d0 FC01      		movw r30,r24
 58719 195d2 8081      		ld r24,Z
 58720 195d4 8F93      		push r24
 58721 195d6 0E94 0000 		call report
 58722 195da 4DB7      		in r20,__SP_L__
 58723 195dc 5EB7      		in r21,__SP_H__
 58724 195de 465F      		subi r20,-10
 58725 195e0 5F4F      		sbci r21,-1
 58726 195e2 0FB6      		in __tmp_reg__,__SREG__
 58727 195e4 F894      		cli
 58728 195e6 DEBF      		out __SP_H__,r29
 58729 195e8 0FBE      		out __SREG__,__tmp_reg__
 58730 195ea CDBF      		out __SP_L__,r28
 58731               	.L2376:
5728:lp_solve_5.5/lp_presolve.c ****     if(nBoundTighten)
 58732               		.loc 2 5728 0
 58733 195ec 8F85      		ldd r24,Y+15
 58734 195ee 9889      		ldd r25,Y+16
 58735 195f0 892B      		or r24,r25
 58736 195f2 01F0      		breq .L2377
5729:lp_solve_5.5/lp_presolve.c ****       report(lp, i, "            %8d bounds............................... %s.\n", nBoundTighten, "
 58737               		.loc 2 5729 0
 58738 195f4 80E0      		ldi r24,lo8(.LC80)
 58739 195f6 90E0      		ldi r25,hi8(.LC80)
 58740 195f8 892F      		mov r24,r25
 58741 195fa 8F93      		push r24
 58742 195fc 80E0      		ldi r24,lo8(.LC80)
 58743 195fe 90E0      		ldi r25,hi8(.LC80)
 58744 19600 8F93      		push r24
 58745 19602 8889      		ldd r24,Y+16
 58746 19604 8F93      		push r24
 58747 19606 8F85      		ldd r24,Y+15
 58748 19608 8F93      		push r24
 58749 1960a 80E0      		ldi r24,lo8(.LC81)
 58750 1960c 90E0      		ldi r25,hi8(.LC81)
 58751 1960e 892F      		mov r24,r25
 58752 19610 8F93      		push r24
 58753 19612 80E0      		ldi r24,lo8(.LC81)
 58754 19614 90E0      		ldi r25,hi8(.LC81)
 58755 19616 8F93      		push r24
 58756 19618 8A81      		ldd r24,Y+2
 58757 1961a 8F93      		push r24
 58758 1961c 8981      		ldd r24,Y+1
 58759 1961e 8F93      		push r24
 58760 19620 CE01      		movw r24,r28
 58761 19622 8C57      		subi r24,124
 58762 19624 9F4F      		sbci r25,-1
 58763 19626 DC01      		movw r26,r24
 58764 19628 1196      		adiw r26,1
 58765 1962a 2C91      		ld r18,X
 58766 1962c 2F93      		push r18
 58767 1962e FC01      		movw r30,r24
 58768 19630 8081      		ld r24,Z
 58769 19632 8F93      		push r24
 58770 19634 0E94 0000 		call report
 58771 19638 4DB7      		in r20,__SP_L__
 58772 1963a 5EB7      		in r21,__SP_H__
 58773 1963c 465F      		subi r20,-10
 58774 1963e 5F4F      		sbci r21,-1
 58775 19640 0FB6      		in __tmp_reg__,__SREG__
 58776 19642 F894      		cli
 58777 19644 DEBF      		out __SP_H__,r29
 58778 19646 0FBE      		out __SREG__,__tmp_reg__
 58779 19648 CDBF      		out __SP_L__,r28
 58780               	.L2377:
5730:lp_solve_5.5/lp_presolve.c ****     if(nCoeffChanged)
 58781               		.loc 2 5730 0
 58782 1964a 8985      		ldd r24,Y+9
 58783 1964c 9A85      		ldd r25,Y+10
 58784 1964e 892B      		or r24,r25
 58785 19650 01F0      		breq .L2378
5731:lp_solve_5.5/lp_presolve.c ****       report(lp, i, "            %8d matrix coefficients.................. %s.\n", nCoeffChanged, "
 58786               		.loc 2 5731 0
 58787 19652 80E0      		ldi r24,lo8(.LC82)
 58788 19654 90E0      		ldi r25,hi8(.LC82)
 58789 19656 892F      		mov r24,r25
 58790 19658 8F93      		push r24
 58791 1965a 80E0      		ldi r24,lo8(.LC82)
 58792 1965c 90E0      		ldi r25,hi8(.LC82)
 58793 1965e 8F93      		push r24
 58794 19660 8A85      		ldd r24,Y+10
 58795 19662 8F93      		push r24
 58796 19664 8985      		ldd r24,Y+9
 58797 19666 8F93      		push r24
 58798 19668 80E0      		ldi r24,lo8(.LC83)
 58799 1966a 90E0      		ldi r25,hi8(.LC83)
 58800 1966c 892F      		mov r24,r25
 58801 1966e 8F93      		push r24
 58802 19670 80E0      		ldi r24,lo8(.LC83)
 58803 19672 90E0      		ldi r25,hi8(.LC83)
 58804 19674 8F93      		push r24
 58805 19676 8A81      		ldd r24,Y+2
 58806 19678 8F93      		push r24
 58807 1967a 8981      		ldd r24,Y+1
 58808 1967c 8F93      		push r24
 58809 1967e CE01      		movw r24,r28
 58810 19680 8C57      		subi r24,124
 58811 19682 9F4F      		sbci r25,-1
 58812 19684 DC01      		movw r26,r24
 58813 19686 1196      		adiw r26,1
 58814 19688 2C91      		ld r18,X
 58815 1968a 2F93      		push r18
 58816 1968c FC01      		movw r30,r24
 58817 1968e 8081      		ld r24,Z
 58818 19690 8F93      		push r24
 58819 19692 0E94 0000 		call report
 58820 19696 4DB7      		in r20,__SP_L__
 58821 19698 5EB7      		in r21,__SP_H__
 58822 1969a 465F      		subi r20,-10
 58823 1969c 5F4F      		sbci r21,-1
 58824 1969e 0FB6      		in __tmp_reg__,__SREG__
 58825 196a0 F894      		cli
 58826 196a2 DEBF      		out __SP_H__,r29
 58827 196a4 0FBE      		out __SREG__,__tmp_reg__
 58828 196a6 CDBF      		out __SP_L__,r28
 58829               	.L2378:
5732:lp_solve_5.5/lp_presolve.c ****     if(jjx > 0)
 58830               		.loc 2 5732 0
 58831 196a8 8F81      		ldd r24,Y+7
 58832 196aa 9885      		ldd r25,Y+8
 58833 196ac 1816      		cp __zero_reg__,r24
 58834 196ae 1906      		cpc __zero_reg__,r25
 58835 196b0 04F4      		brge .L2379
5733:lp_solve_5.5/lp_presolve.c ****       report(lp, i, "            %8d variables' final bounds.............. %s.\n", jjx, "RELAXED");
 58836               		.loc 2 5733 0
 58837 196b2 80E0      		ldi r24,lo8(.LC84)
 58838 196b4 90E0      		ldi r25,hi8(.LC84)
 58839 196b6 892F      		mov r24,r25
 58840 196b8 8F93      		push r24
 58841 196ba 80E0      		ldi r24,lo8(.LC84)
 58842 196bc 90E0      		ldi r25,hi8(.LC84)
 58843 196be 8F93      		push r24
 58844 196c0 8885      		ldd r24,Y+8
 58845 196c2 8F93      		push r24
 58846 196c4 8F81      		ldd r24,Y+7
 58847 196c6 8F93      		push r24
 58848 196c8 80E0      		ldi r24,lo8(.LC85)
 58849 196ca 90E0      		ldi r25,hi8(.LC85)
 58850 196cc 892F      		mov r24,r25
 58851 196ce 8F93      		push r24
 58852 196d0 80E0      		ldi r24,lo8(.LC85)
 58853 196d2 90E0      		ldi r25,hi8(.LC85)
 58854 196d4 8F93      		push r24
 58855 196d6 8A81      		ldd r24,Y+2
 58856 196d8 8F93      		push r24
 58857 196da 8981      		ldd r24,Y+1
 58858 196dc 8F93      		push r24
 58859 196de CE01      		movw r24,r28
 58860 196e0 8C57      		subi r24,124
 58861 196e2 9F4F      		sbci r25,-1
 58862 196e4 DC01      		movw r26,r24
 58863 196e6 1196      		adiw r26,1
 58864 196e8 2C91      		ld r18,X
 58865 196ea 2F93      		push r18
 58866 196ec FC01      		movw r30,r24
 58867 196ee 8081      		ld r24,Z
 58868 196f0 8F93      		push r24
 58869 196f2 0E94 0000 		call report
 58870 196f6 4DB7      		in r20,__SP_L__
 58871 196f8 5EB7      		in r21,__SP_H__
 58872 196fa 465F      		subi r20,-10
 58873 196fc 5F4F      		sbci r21,-1
 58874 196fe 0FB6      		in __tmp_reg__,__SREG__
 58875 19700 F894      		cli
 58876 19702 DEBF      		out __SP_H__,r29
 58877 19704 0FBE      		out __SREG__,__tmp_reg__
 58878 19706 CDBF      		out __SP_L__,r28
 58879               	.L2379:
5734:lp_solve_5.5/lp_presolve.c ****     if(nSOS)
 58880               		.loc 2 5734 0
 58881 19708 8989      		ldd r24,Y+17
 58882 1970a 9A89      		ldd r25,Y+18
 58883 1970c 892B      		or r24,r25
 58884 1970e 01F0      		breq .L2380
5735:lp_solve_5.5/lp_presolve.c ****       report(lp, i, "            %8d constraints detected as SOS1......... %s.\n", nSOS, "CONVERTED
 58885               		.loc 2 5735 0
 58886 19710 80E0      		ldi r24,lo8(.LC86)
 58887 19712 90E0      		ldi r25,hi8(.LC86)
 58888 19714 892F      		mov r24,r25
 58889 19716 8F93      		push r24
 58890 19718 80E0      		ldi r24,lo8(.LC86)
 58891 1971a 90E0      		ldi r25,hi8(.LC86)
 58892 1971c 8F93      		push r24
 58893 1971e 8A89      		ldd r24,Y+18
 58894 19720 8F93      		push r24
 58895 19722 8989      		ldd r24,Y+17
 58896 19724 8F93      		push r24
 58897 19726 80E0      		ldi r24,lo8(.LC87)
 58898 19728 90E0      		ldi r25,hi8(.LC87)
 58899 1972a 892F      		mov r24,r25
 58900 1972c 8F93      		push r24
 58901 1972e 80E0      		ldi r24,lo8(.LC87)
 58902 19730 90E0      		ldi r25,hi8(.LC87)
 58903 19732 8F93      		push r24
 58904 19734 8A81      		ldd r24,Y+2
 58905 19736 8F93      		push r24
 58906 19738 8981      		ldd r24,Y+1
 58907 1973a 8F93      		push r24
 58908 1973c CE01      		movw r24,r28
 58909 1973e 8C57      		subi r24,124
 58910 19740 9F4F      		sbci r25,-1
 58911 19742 DC01      		movw r26,r24
 58912 19744 1196      		adiw r26,1
 58913 19746 2C91      		ld r18,X
 58914 19748 2F93      		push r18
 58915 1974a FC01      		movw r30,r24
 58916 1974c 8081      		ld r24,Z
 58917 1974e 8F93      		push r24
 58918 19750 0E94 0000 		call report
 58919 19754 4DB7      		in r20,__SP_L__
 58920 19756 5EB7      		in r21,__SP_H__
 58921 19758 465F      		subi r20,-10
 58922 1975a 5F4F      		sbci r21,-1
 58923 1975c 0FB6      		in __tmp_reg__,__SREG__
 58924 1975e F894      		cli
 58925 19760 DEBF      		out __SP_H__,r29
 58926 19762 0FBE      		out __SREG__,__tmp_reg__
 58927 19764 CDBF      		out __SP_L__,r28
 58928               	.L2380:
5736:lp_solve_5.5/lp_presolve.c **** 
5737:lp_solve_5.5/lp_presolve.c ****     /* Report optimality or infeasibility */
5738:lp_solve_5.5/lp_presolve.c ****     if(status == UNBOUNDED)
 58929               		.loc 2 5738 0
 58930 19766 8F8D      		ldd r24,Y+31
 58931 19768 98A1      		ldd r25,Y+32
 58932 1976a 0397      		sbiw r24,3
 58933 1976c 01F4      		brne .L2381
5739:lp_solve_5.5/lp_presolve.c ****       report(lp, NORMAL, "%20s Solution status detected............. %s.\n", "", "UNBOUNDED");
 58934               		.loc 2 5739 0
 58935 1976e 80E0      		ldi r24,lo8(.LC2)
 58936 19770 90E0      		ldi r25,hi8(.LC2)
 58937 19772 892F      		mov r24,r25
 58938 19774 8F93      		push r24
 58939 19776 80E0      		ldi r24,lo8(.LC2)
 58940 19778 90E0      		ldi r25,hi8(.LC2)
 58941 1977a 8F93      		push r24
 58942 1977c 80E0      		ldi r24,lo8(.LC88)
 58943 1977e 90E0      		ldi r25,hi8(.LC88)
 58944 19780 892F      		mov r24,r25
 58945 19782 8F93      		push r24
 58946 19784 80E0      		ldi r24,lo8(.LC88)
 58947 19786 90E0      		ldi r25,hi8(.LC88)
 58948 19788 8F93      		push r24
 58949 1978a 80E0      		ldi r24,lo8(.LC89)
 58950 1978c 90E0      		ldi r25,hi8(.LC89)
 58951 1978e 892F      		mov r24,r25
 58952 19790 8F93      		push r24
 58953 19792 80E0      		ldi r24,lo8(.LC89)
 58954 19794 90E0      		ldi r25,hi8(.LC89)
 58955 19796 8F93      		push r24
 58956 19798 1F92      		push __zero_reg__
 58957 1979a 84E0      		ldi r24,lo8(4)
 58958 1979c 8F93      		push r24
 58959 1979e CE01      		movw r24,r28
 58960 197a0 8C57      		subi r24,124
 58961 197a2 9F4F      		sbci r25,-1
 58962 197a4 DC01      		movw r26,r24
 58963 197a6 1196      		adiw r26,1
 58964 197a8 2C91      		ld r18,X
 58965 197aa 2F93      		push r18
 58966 197ac FC01      		movw r30,r24
 58967 197ae 8081      		ld r24,Z
 58968 197b0 8F93      		push r24
 58969 197b2 0E94 0000 		call report
 58970 197b6 4DB7      		in r20,__SP_L__
 58971 197b8 5EB7      		in r21,__SP_H__
 58972 197ba 465F      		subi r20,-10
 58973 197bc 5F4F      		sbci r21,-1
 58974 197be 0FB6      		in __tmp_reg__,__SREG__
 58975 197c0 F894      		cli
 58976 197c2 DEBF      		out __SP_H__,r29
 58977 197c4 0FBE      		out __SREG__,__tmp_reg__
 58978 197c6 CDBF      		out __SP_L__,r28
 58979 197c8 00C0      		rjmp .L2382
 58980               	.L2381:
5740:lp_solve_5.5/lp_presolve.c ****     else if(status == INFEASIBLE)
 58981               		.loc 2 5740 0
 58982 197ca 8F8D      		ldd r24,Y+31
 58983 197cc 98A1      		ldd r25,Y+32
 58984 197ce 0297      		sbiw r24,2
 58985 197d0 01F4      		brne .L2383
5741:lp_solve_5.5/lp_presolve.c ****       report(lp, NORMAL, "%20s Solution status detected............. %s.\n", "", "INFEASIBLE");
 58986               		.loc 2 5741 0
 58987 197d2 80E0      		ldi r24,lo8(.LC1)
 58988 197d4 90E0      		ldi r25,hi8(.LC1)
 58989 197d6 892F      		mov r24,r25
 58990 197d8 8F93      		push r24
 58991 197da 80E0      		ldi r24,lo8(.LC1)
 58992 197dc 90E0      		ldi r25,hi8(.LC1)
 58993 197de 8F93      		push r24
 58994 197e0 80E0      		ldi r24,lo8(.LC88)
 58995 197e2 90E0      		ldi r25,hi8(.LC88)
 58996 197e4 892F      		mov r24,r25
 58997 197e6 8F93      		push r24
 58998 197e8 80E0      		ldi r24,lo8(.LC88)
 58999 197ea 90E0      		ldi r25,hi8(.LC88)
 59000 197ec 8F93      		push r24
 59001 197ee 80E0      		ldi r24,lo8(.LC89)
 59002 197f0 90E0      		ldi r25,hi8(.LC89)
 59003 197f2 892F      		mov r24,r25
 59004 197f4 8F93      		push r24
 59005 197f6 80E0      		ldi r24,lo8(.LC89)
 59006 197f8 90E0      		ldi r25,hi8(.LC89)
 59007 197fa 8F93      		push r24
 59008 197fc 1F92      		push __zero_reg__
 59009 197fe 84E0      		ldi r24,lo8(4)
 59010 19800 8F93      		push r24
 59011 19802 CE01      		movw r24,r28
 59012 19804 8C57      		subi r24,124
 59013 19806 9F4F      		sbci r25,-1
 59014 19808 DC01      		movw r26,r24
 59015 1980a 1196      		adiw r26,1
 59016 1980c 2C91      		ld r18,X
 59017 1980e 2F93      		push r18
 59018 19810 FC01      		movw r30,r24
 59019 19812 8081      		ld r24,Z
 59020 19814 8F93      		push r24
 59021 19816 0E94 0000 		call report
 59022 1981a 4DB7      		in r20,__SP_L__
 59023 1981c 5EB7      		in r21,__SP_H__
 59024 1981e 465F      		subi r20,-10
 59025 19820 5F4F      		sbci r21,-1
 59026 19822 0FB6      		in __tmp_reg__,__SREG__
 59027 19824 F894      		cli
 59028 19826 DEBF      		out __SP_H__,r29
 59029 19828 0FBE      		out __SREG__,__tmp_reg__
 59030 1982a CDBF      		out __SP_L__,r28
 59031 1982c 00C0      		rjmp .L2382
 59032               	.L2383:
5742:lp_solve_5.5/lp_presolve.c ****     else {
5743:lp_solve_5.5/lp_presolve.c ****       if(psdata->cols->varmap->count == 0)
 59033               		.loc 2 5743 0
 59034 1982e 8DA9      		ldd r24,Y+53
 59035 19830 9EA9      		ldd r25,Y+54
 59036 19832 DC01      		movw r26,r24
 59037 19834 1296      		adiw r26,2
 59038 19836 8D91      		ld r24,X+
 59039 19838 9C91      		ld r25,X
 59040 1983a 1397      		sbiw r26,2+1
 59041 1983c FC01      		movw r30,r24
 59042 1983e 8081      		ld r24,Z
 59043 19840 9181      		ldd r25,Z+1
 59044 19842 DC01      		movw r26,r24
 59045 19844 1296      		adiw r26,2
 59046 19846 8D91      		ld r24,X+
 59047 19848 9C91      		ld r25,X
 59048 1984a 1397      		sbiw r26,2+1
 59049 1984c 892B      		or r24,r25
 59050 1984e 01F4      		brne .L2384
5744:lp_solve_5.5/lp_presolve.c ****         Value1 = Value2 = lp->presolve_undo->fixed_rhs[0] -initrhs0;
 59051               		.loc 2 5744 0
 59052 19850 CE01      		movw r24,r28
 59053 19852 8C57      		subi r24,124
 59054 19854 9F4F      		sbci r25,-1
 59055 19856 FC01      		movw r30,r24
 59056 19858 8081      		ld r24,Z
 59057 1985a 9181      		ldd r25,Z+1
 59058 1985c 8A59      		subi r24,-102
 59059 1985e 9C4F      		sbci r25,-4
 59060 19860 DC01      		movw r26,r24
 59061 19862 8D91      		ld r24,X+
 59062 19864 9C91      		ld r25,X
 59063 19866 FC01      		movw r30,r24
 59064 19868 8485      		ldd r24,Z+12
 59065 1986a 9585      		ldd r25,Z+13
 59066 1986c FC01      		movw r30,r24
 59067 1986e 8081      		ld r24,Z
 59068 19870 9181      		ldd r25,Z+1
 59069 19872 A281      		ldd r26,Z+2
 59070 19874 B381      		ldd r27,Z+3
 59071 19876 2D89      		ldd r18,Y+21
 59072 19878 3E89      		ldd r19,Y+22
 59073 1987a 4F89      		ldd r20,Y+23
 59074 1987c 588D      		ldd r21,Y+24
 59075 1987e BC01      		movw r22,r24
 59076 19880 CD01      		movw r24,r26
 59077 19882 0E94 0000 		call __subsf3
 59078 19886 DC01      		movw r26,r24
 59079 19888 CB01      		movw r24,r22
 59080 1988a 89AB      		std Y+49,r24
 59081 1988c 9AAB      		std Y+50,r25
 59082 1988e ABAB      		std Y+51,r26
 59083 19890 BCAB      		std Y+52,r27
 59084 19892 89A9      		ldd r24,Y+49
 59085 19894 9AA9      		ldd r25,Y+50
 59086 19896 ABA9      		ldd r26,Y+51
 59087 19898 BCA9      		ldd r27,Y+52
 59088 1989a 8DA7      		std Y+45,r24
 59089 1989c 9EA7      		std Y+46,r25
 59090 1989e AFA7      		std Y+47,r26
 59091 198a0 B8AB      		std Y+48,r27
 59092 198a2 00C0      		rjmp .L2385
 59093               	.L2384:
5745:lp_solve_5.5/lp_presolve.c ****       else
5746:lp_solve_5.5/lp_presolve.c ****         presolve_rangeorig(lp, 0, psdata->rows, &Value1, &Value2, -initrhs0);
 59094               		.loc 2 5746 0
 59095 198a4 8D89      		ldd r24,Y+21
 59096 198a6 9E89      		ldd r25,Y+22
 59097 198a8 AF89      		ldd r26,Y+23
 59098 198aa B88D      		ldd r27,Y+24
 59099 198ac B058      		subi r27,0x80
 59100 198ae 2DA9      		ldd r18,Y+53
 59101 198b0 3EA9      		ldd r19,Y+54
 59102 198b2 F901      		movw r30,r18
 59103 198b4 4081      		ld r20,Z
 59104 198b6 5181      		ldd r21,Z+1
 59105 198b8 8E01      		movw r16,r28
 59106 198ba 0F5C      		subi r16,-49
 59107 198bc 1F4F      		sbci r17,-1
 59108 198be BE01      		movw r22,r28
 59109 198c0 635D      		subi r22,-45
 59110 198c2 7F4F      		sbci r23,-1
 59111 198c4 9E01      		movw r18,r28
 59112 198c6 2C57      		subi r18,124
 59113 198c8 3F4F      		sbci r19,-1
 59114 198ca F901      		movw r30,r18
 59115 198cc 0190      		ld __tmp_reg__,Z+
 59116 198ce F081      		ld r31,Z
 59117 198d0 E02D      		mov r30,__tmp_reg__
 59118 198d2 CA57      		subi r28,lo8(-134)
 59119 198d4 DF4F      		sbci r29,hi8(-134)
 59120 198d6 F983      		std Y+1,r31
 59121 198d8 E883      		st Y,r30
 59122 198da C658      		subi r28,lo8(134)
 59123 198dc D040      		sbci r29,hi8(134)
 59124 198de 6C01      		movw r12,r24
 59125 198e0 7D01      		movw r14,r26
 59126 198e2 9B01      		movw r18,r22
 59127 198e4 60E0      		ldi r22,0
 59128 198e6 70E0      		ldi r23,0
 59129 198e8 CA57      		subi r28,lo8(-134)
 59130 198ea DF4F      		sbci r29,hi8(-134)
 59131 198ec 8881      		ld r24,Y
 59132 198ee 9981      		ldd r25,Y+1
 59133 198f0 C658      		subi r28,lo8(134)
 59134 198f2 D040      		sbci r29,hi8(134)
 59135 198f4 0E94 0000 		call presolve_rangeorig
 59136               	.L2385:
5747:lp_solve_5.5/lp_presolve.c ****       if((fabs(Value1 - Value2) < psdata->epsvalue) || (fabs(my_reldiff(Value1, Value2)) < psdata->
 59137               		.loc 2 5747 0
 59138 198f8 8DA5      		ldd r24,Y+45
 59139 198fa 9EA5      		ldd r25,Y+46
 59140 198fc AFA5      		ldd r26,Y+47
 59141 198fe B8A9      		ldd r27,Y+48
 59142 19900 29A9      		ldd r18,Y+49
 59143 19902 3AA9      		ldd r19,Y+50
 59144 19904 4BA9      		ldd r20,Y+51
 59145 19906 5CA9      		ldd r21,Y+52
 59146 19908 BC01      		movw r22,r24
 59147 1990a CD01      		movw r24,r26
 59148 1990c 0E94 0000 		call __subsf3
 59149 19910 DC01      		movw r26,r24
 59150 19912 CB01      		movw r24,r22
 59151 19914 BF77      		andi r27,0x7f
 59152 19916 2DA9      		ldd r18,Y+53
 59153 19918 3EA9      		ldd r19,Y+54
 59154 1991a F901      		movw r30,r18
 59155 1991c 2489      		ldd r18,Z+20
 59156 1991e 3589      		ldd r19,Z+21
 59157 19920 4689      		ldd r20,Z+22
 59158 19922 5789      		ldd r21,Z+23
 59159 19924 BC01      		movw r22,r24
 59160 19926 CD01      		movw r24,r26
 59161 19928 0E94 0000 		call __ltsf2
 59162 1992c 8823      		tst r24
 59163 1992e 04F0      		brlt .L2386
 59164               		.loc 2 5747 0 is_stmt 0 discriminator 1
 59165 19930 8DA5      		ldd r24,Y+45
 59166 19932 9EA5      		ldd r25,Y+46
 59167 19934 AFA5      		ldd r26,Y+47
 59168 19936 B8A9      		ldd r27,Y+48
 59169 19938 29A9      		ldd r18,Y+49
 59170 1993a 3AA9      		ldd r19,Y+50
 59171 1993c 4BA9      		ldd r20,Y+51
 59172 1993e 5CA9      		ldd r21,Y+52
 59173 19940 BC01      		movw r22,r24
 59174 19942 CD01      		movw r24,r26
 59175 19944 0E94 0000 		call __subsf3
 59176 19948 DC01      		movw r26,r24
 59177 1994a CB01      		movw r24,r22
 59178 1994c 6C01      		movw r12,r24
 59179 1994e 7D01      		movw r14,r26
 59180 19950 89A9      		ldd r24,Y+49
 59181 19952 9AA9      		ldd r25,Y+50
 59182 19954 ABA9      		ldd r26,Y+51
 59183 19956 BCA9      		ldd r27,Y+52
 59184 19958 BF77      		andi r27,0x7f
 59185 1995a 20E0      		ldi r18,0
 59186 1995c 30E0      		ldi r19,0
 59187 1995e 40E8      		ldi r20,lo8(-128)
 59188 19960 5FE3      		ldi r21,lo8(63)
 59189 19962 BC01      		movw r22,r24
 59190 19964 CD01      		movw r24,r26
 59191 19966 0E94 0000 		call __addsf3
 59192 1996a DC01      		movw r26,r24
 59193 1996c CB01      		movw r24,r22
 59194 1996e 9C01      		movw r18,r24
 59195 19970 AD01      		movw r20,r26
 59196 19972 C701      		movw r24,r14
 59197 19974 B601      		movw r22,r12
 59198 19976 0E94 0000 		call __divsf3
 59199 1997a DC01      		movw r26,r24
 59200 1997c CB01      		movw r24,r22
 59201 1997e BF77      		andi r27,0x7f
 59202 19980 2DA9      		ldd r18,Y+53
 59203 19982 3EA9      		ldd r19,Y+54
 59204 19984 F901      		movw r30,r18
 59205 19986 2489      		ldd r18,Z+20
 59206 19988 3589      		ldd r19,Z+21
 59207 1998a 4689      		ldd r20,Z+22
 59208 1998c 5789      		ldd r21,Z+23
 59209 1998e BC01      		movw r22,r24
 59210 19990 CD01      		movw r24,r26
 59211 19992 0E94 0000 		call __ltsf2
 59212 19996 8823      		tst r24
 59213 19998 04F0      		brlt .+2
 59214 1999a 00C0      		rjmp .L2422
 59215               	.L2386:
5748:lp_solve_5.5/lp_presolve.c ****         if((lp->rows == 0) && (lp->columns == 0)) {
 59216               		.loc 2 5748 0 is_stmt 1
 59217 1999c CE01      		movw r24,r28
 59218 1999e 8C57      		subi r24,124
 59219 199a0 9F4F      		sbci r25,-1
 59220 199a2 DC01      		movw r26,r24
 59221 199a4 8D91      		ld r24,X+
 59222 199a6 9C91      		ld r25,X
 59223 199a8 8651      		subi r24,22
 59224 199aa 9E4F      		sbci r25,-2
 59225 199ac FC01      		movw r30,r24
 59226 199ae 8081      		ld r24,Z
 59227 199b0 9181      		ldd r25,Z+1
 59228 199b2 892B      		or r24,r25
 59229 199b4 01F0      		breq .+2
 59230 199b6 00C0      		rjmp .L2389
 59231               		.loc 2 5748 0 is_stmt 0 discriminator 1
 59232 199b8 CE01      		movw r24,r28
 59233 199ba 8C57      		subi r24,124
 59234 199bc 9F4F      		sbci r25,-1
 59235 199be DC01      		movw r26,r24
 59236 199c0 8D91      		ld r24,X+
 59237 199c2 9C91      		ld r25,X
 59238 199c4 8451      		subi r24,20
 59239 199c6 9E4F      		sbci r25,-2
 59240 199c8 FC01      		movw r30,r24
 59241 199ca 8081      		ld r24,Z
 59242 199cc 9181      		ldd r25,Z+1
 59243 199ce 892B      		or r24,r25
 59244 199d0 01F0      		breq .+2
 59245 199d2 00C0      		rjmp .L2389
5749:lp_solve_5.5/lp_presolve.c ****           status = PRESOLVED;
 59246               		.loc 2 5749 0 is_stmt 1
 59247 199d4 89E0      		ldi r24,lo8(9)
 59248 199d6 90E0      		ldi r25,0
 59249 199d8 98A3      		std Y+32,r25
 59250 199da 8F8F      		std Y+31,r24
5750:lp_solve_5.5/lp_presolve.c ****           Value1 = my_chsign(is_maxim(lp), Value1);
 59251               		.loc 2 5750 0
 59252 199dc CE01      		movw r24,r28
 59253 199de 8C57      		subi r24,124
 59254 199e0 9F4F      		sbci r25,-1
 59255 199e2 DC01      		movw r26,r24
 59256 199e4 8D91      		ld r24,X+
 59257 199e6 9C91      		ld r25,X
 59258 199e8 0E94 0000 		call is_maxim
 59259 199ec 8823      		tst r24
 59260 199ee 01F0      		breq .L2390
 59261               		.loc 2 5750 0 is_stmt 0 discriminator 1
 59262 199f0 8DA5      		ldd r24,Y+45
 59263 199f2 9EA5      		ldd r25,Y+46
 59264 199f4 AFA5      		ldd r26,Y+47
 59265 199f6 B8A9      		ldd r27,Y+48
 59266 199f8 20E0      		ldi r18,0
 59267 199fa 30E0      		ldi r19,0
 59268 199fc A901      		movw r20,r18
 59269 199fe BC01      		movw r22,r24
 59270 19a00 CD01      		movw r24,r26
 59271 19a02 0E94 0000 		call __nesf2
 59272 19a06 8823      		tst r24
 59273 19a08 01F0      		breq .L2390
 59274               		.loc 2 5750 0 discriminator 3
 59275 19a0a 8DA5      		ldd r24,Y+45
 59276 19a0c 9EA5      		ldd r25,Y+46
 59277 19a0e AFA5      		ldd r26,Y+47
 59278 19a10 B8A9      		ldd r27,Y+48
 59279 19a12 B058      		subi r27,0x80
 59280 19a14 00C0      		rjmp .L2392
 59281               	.L2390:
 59282               		.loc 2 5750 0 discriminator 4
 59283 19a16 8DA5      		ldd r24,Y+45
 59284 19a18 9EA5      		ldd r25,Y+46
 59285 19a1a AFA5      		ldd r26,Y+47
 59286 19a1c B8A9      		ldd r27,Y+48
 59287               	.L2392:
 59288               		.loc 2 5750 0 discriminator 6
 59289 19a1e 8DA7      		std Y+45,r24
 59290 19a20 9EA7      		std Y+46,r25
 59291 19a22 AFA7      		std Y+47,r26
 59292 19a24 B8AB      		std Y+48,r27
5751:lp_solve_5.5/lp_presolve.c ****           lp->solution[0] = Value1;
 59293               		.loc 2 5751 0 is_stmt 1 discriminator 6
 59294 19a26 CE01      		movw r24,r28
 59295 19a28 8C57      		subi r24,124
 59296 19a2a 9F4F      		sbci r25,-1
 59297 19a2c FC01      		movw r30,r24
 59298 19a2e 8081      		ld r24,Z
 59299 19a30 9181      		ldd r25,Z+1
 59300 19a32 8E5E      		subi r24,-18
 59301 19a34 9D4F      		sbci r25,-3
 59302 19a36 DC01      		movw r26,r24
 59303 19a38 2D91      		ld r18,X+
 59304 19a3a 3C91      		ld r19,X
 59305 19a3c 8DA5      		ldd r24,Y+45
 59306 19a3e 9EA5      		ldd r25,Y+46
 59307 19a40 AFA5      		ldd r26,Y+47
 59308 19a42 B8A9      		ldd r27,Y+48
 59309 19a44 F901      		movw r30,r18
 59310 19a46 8083      		st Z,r24
 59311 19a48 9183      		std Z+1,r25
 59312 19a4a A283      		std Z+2,r26
 59313 19a4c B383      		std Z+3,r27
5752:lp_solve_5.5/lp_presolve.c ****           lp->best_solution[0] = Value1;
 59314               		.loc 2 5752 0 discriminator 6
 59315 19a4e CE01      		movw r24,r28
 59316 19a50 8C57      		subi r24,124
 59317 19a52 9F4F      		sbci r25,-1
 59318 19a54 DC01      		movw r26,r24
 59319 19a56 8D91      		ld r24,X+
 59320 19a58 9C91      		ld r25,X
 59321 19a5a 8C5E      		subi r24,-20
 59322 19a5c 9D4F      		sbci r25,-3
 59323 19a5e FC01      		movw r30,r24
 59324 19a60 2081      		ld r18,Z
 59325 19a62 3181      		ldd r19,Z+1
 59326 19a64 8DA5      		ldd r24,Y+45
 59327 19a66 9EA5      		ldd r25,Y+46
 59328 19a68 AFA5      		ldd r26,Y+47
 59329 19a6a B8A9      		ldd r27,Y+48
 59330 19a6c F901      		movw r30,r18
 59331 19a6e 8083      		st Z,r24
 59332 19a70 9183      		std Z+1,r25
 59333 19a72 A283      		std Z+2,r26
 59334 19a74 B383      		std Z+3,r27
5753:lp_solve_5.5/lp_presolve.c ****           lp->full_solution[0] = Value1;
 59335               		.loc 2 5753 0 discriminator 6
 59336 19a76 CE01      		movw r24,r28
 59337 19a78 8C57      		subi r24,124
 59338 19a7a 9F4F      		sbci r25,-1
 59339 19a7c DC01      		movw r26,r24
 59340 19a7e 8D91      		ld r24,X+
 59341 19a80 9C91      		ld r25,X
 59342 19a82 8A5E      		subi r24,-22
 59343 19a84 9D4F      		sbci r25,-3
 59344 19a86 FC01      		movw r30,r24
 59345 19a88 2081      		ld r18,Z
 59346 19a8a 3181      		ldd r19,Z+1
 59347 19a8c 8DA5      		ldd r24,Y+45
 59348 19a8e 9EA5      		ldd r25,Y+46
 59349 19a90 AFA5      		ldd r26,Y+47
 59350 19a92 B8A9      		ldd r27,Y+48
 59351 19a94 F901      		movw r30,r18
 59352 19a96 8083      		st Z,r24
 59353 19a98 9183      		std Z+1,r25
 59354 19a9a A283      		std Z+2,r26
 59355 19a9c B383      		std Z+3,r27
 59356               	.L2389:
5754:lp_solve_5.5/lp_presolve.c ****         }
5755:lp_solve_5.5/lp_presolve.c ****         report(lp, NORMAL, "%20s OPTIMAL solution found............... %-g", "", Value1);
 59357               		.loc 2 5755 0
 59358 19a9e 8DA5      		ldd r24,Y+45
 59359 19aa0 9EA5      		ldd r25,Y+46
 59360 19aa2 AFA5      		ldd r26,Y+47
 59361 19aa4 B8A9      		ldd r27,Y+48
 59362 19aa6 2B2F      		mov r18,r27
 59363 19aa8 2F93      		push r18
 59364 19aaa 2A2F      		mov r18,r26
 59365 19aac 2F93      		push r18
 59366 19aae 292F      		mov r18,r25
 59367 19ab0 2F93      		push r18
 59368 19ab2 8F93      		push r24
 59369 19ab4 80E0      		ldi r24,lo8(.LC88)
 59370 19ab6 90E0      		ldi r25,hi8(.LC88)
 59371 19ab8 892F      		mov r24,r25
 59372 19aba 8F93      		push r24
 59373 19abc 80E0      		ldi r24,lo8(.LC88)
 59374 19abe 90E0      		ldi r25,hi8(.LC88)
 59375 19ac0 8F93      		push r24
 59376 19ac2 80E0      		ldi r24,lo8(.LC90)
 59377 19ac4 90E0      		ldi r25,hi8(.LC90)
 59378 19ac6 892F      		mov r24,r25
 59379 19ac8 8F93      		push r24
 59380 19aca 80E0      		ldi r24,lo8(.LC90)
 59381 19acc 90E0      		ldi r25,hi8(.LC90)
 59382 19ace 8F93      		push r24
 59383 19ad0 1F92      		push __zero_reg__
 59384 19ad2 84E0      		ldi r24,lo8(4)
 59385 19ad4 8F93      		push r24
 59386 19ad6 CE01      		movw r24,r28
 59387 19ad8 8C57      		subi r24,124
 59388 19ada 9F4F      		sbci r25,-1
 59389 19adc DC01      		movw r26,r24
 59390 19ade 1196      		adiw r26,1
 59391 19ae0 2C91      		ld r18,X
 59392 19ae2 2F93      		push r18
 59393 19ae4 FC01      		movw r30,r24
 59394 19ae6 8081      		ld r24,Z
 59395 19ae8 8F93      		push r24
 59396 19aea 0E94 0000 		call report
 59397 19aee 4DB7      		in r20,__SP_L__
 59398 19af0 5EB7      		in r21,__SP_H__
 59399 19af2 445F      		subi r20,-12
 59400 19af4 5F4F      		sbci r21,-1
 59401 19af6 0FB6      		in __tmp_reg__,__SREG__
 59402 19af8 F894      		cli
 59403 19afa DEBF      		out __SP_H__,r29
 59404 19afc 0FBE      		out __SREG__,__tmp_reg__
 59405 19afe CDBF      		out __SP_L__,r28
 59406 19b00 00C0      		rjmp .L2393
 59407               	.L2422:
5756:lp_solve_5.5/lp_presolve.c ****       }
5757:lp_solve_5.5/lp_presolve.c ****       else if((status == RUNNING) && (i >= NORMAL)) {
 59408               		.loc 2 5757 0
 59409 19b02 8F8D      		ldd r24,Y+31
 59410 19b04 98A1      		ldd r25,Y+32
 59411 19b06 0897      		sbiw r24,8
 59412 19b08 01F0      		breq .+2
 59413 19b0a 00C0      		rjmp .L2393
 59414               		.loc 2 5757 0 is_stmt 0 discriminator 1
 59415 19b0c 8981      		ldd r24,Y+1
 59416 19b0e 9A81      		ldd r25,Y+2
 59417 19b10 0497      		sbiw r24,4
 59418 19b12 04F4      		brge .+2
 59419 19b14 00C0      		rjmp .L2393
 59420               	.LBB19:
5758:lp_solve_5.5/lp_presolve.c ****         char lonum[20], upnum[20];
5759:lp_solve_5.5/lp_presolve.c ****         if(my_infinite(lp, Value1))
 59421               		.loc 2 5759 0 is_stmt 1
 59422 19b16 8DA5      		ldd r24,Y+45
 59423 19b18 9EA5      		ldd r25,Y+46
 59424 19b1a AFA5      		ldd r26,Y+47
 59425 19b1c B8A9      		ldd r27,Y+48
 59426 19b1e BF77      		andi r27,0x7f
 59427 19b20 9E01      		movw r18,r28
 59428 19b22 2C57      		subi r18,124
 59429 19b24 3F4F      		sbci r19,-1
 59430 19b26 F901      		movw r30,r18
 59431 19b28 2081      		ld r18,Z
 59432 19b2a 3181      		ldd r19,Z+1
 59433 19b2c 265F      		subi r18,-10
 59434 19b2e 3C4F      		sbci r19,-4
 59435 19b30 F901      		movw r30,r18
 59436 19b32 2081      		ld r18,Z
 59437 19b34 3181      		ldd r19,Z+1
 59438 19b36 4281      		ldd r20,Z+2
 59439 19b38 5381      		ldd r21,Z+3
 59440 19b3a BC01      		movw r22,r24
 59441 19b3c CD01      		movw r24,r26
 59442 19b3e 0E94 0000 		call __gesf2
 59443 19b42 8823      		tst r24
 59444 19b44 04F0      		brlt .L2423
5760:lp_solve_5.5/lp_presolve.c ****           sprintf(lonum, "%13s", "-Inf");
 59445               		.loc 2 5760 0
 59446 19b46 80E0      		ldi r24,lo8(.LC91)
 59447 19b48 90E0      		ldi r25,hi8(.LC91)
 59448 19b4a 892F      		mov r24,r25
 59449 19b4c 8F93      		push r24
 59450 19b4e 80E0      		ldi r24,lo8(.LC91)
 59451 19b50 90E0      		ldi r25,hi8(.LC91)
 59452 19b52 8F93      		push r24
 59453 19b54 80E0      		ldi r24,lo8(.LC92)
 59454 19b56 90E0      		ldi r25,hi8(.LC92)
 59455 19b58 892F      		mov r24,r25
 59456 19b5a 8F93      		push r24
 59457 19b5c 80E0      		ldi r24,lo8(.LC92)
 59458 19b5e 90E0      		ldi r25,hi8(.LC92)
 59459 19b60 8F93      		push r24
 59460 19b62 CE01      		movw r24,r28
 59461 19b64 C796      		adiw r24,55
 59462 19b66 292F      		mov r18,r25
 59463 19b68 2F93      		push r18
 59464 19b6a 8F93      		push r24
 59465 19b6c 0E94 0000 		call sprintf
 59466 19b70 0F90      		pop __tmp_reg__
 59467 19b72 0F90      		pop __tmp_reg__
 59468 19b74 0F90      		pop __tmp_reg__
 59469 19b76 0F90      		pop __tmp_reg__
 59470 19b78 0F90      		pop __tmp_reg__
 59471 19b7a 0F90      		pop __tmp_reg__
 59472 19b7c 00C0      		rjmp .L2396
 59473               	.L2423:
5761:lp_solve_5.5/lp_presolve.c ****         else
5762:lp_solve_5.5/lp_presolve.c ****           sprintf(lonum, "%+12g", Value1);
 59474               		.loc 2 5762 0
 59475 19b7e 8DA5      		ldd r24,Y+45
 59476 19b80 9EA5      		ldd r25,Y+46
 59477 19b82 AFA5      		ldd r26,Y+47
 59478 19b84 B8A9      		ldd r27,Y+48
 59479 19b86 2B2F      		mov r18,r27
 59480 19b88 2F93      		push r18
 59481 19b8a 2A2F      		mov r18,r26
 59482 19b8c 2F93      		push r18
 59483 19b8e 292F      		mov r18,r25
 59484 19b90 2F93      		push r18
 59485 19b92 8F93      		push r24
 59486 19b94 80E0      		ldi r24,lo8(.LC93)
 59487 19b96 90E0      		ldi r25,hi8(.LC93)
 59488 19b98 892F      		mov r24,r25
 59489 19b9a 8F93      		push r24
 59490 19b9c 80E0      		ldi r24,lo8(.LC93)
 59491 19b9e 90E0      		ldi r25,hi8(.LC93)
 59492 19ba0 8F93      		push r24
 59493 19ba2 CE01      		movw r24,r28
 59494 19ba4 C796      		adiw r24,55
 59495 19ba6 292F      		mov r18,r25
 59496 19ba8 2F93      		push r18
 59497 19baa 8F93      		push r24
 59498 19bac 0E94 0000 		call sprintf
 59499 19bb0 4DB7      		in r20,__SP_L__
 59500 19bb2 5EB7      		in r21,__SP_H__
 59501 19bb4 485F      		subi r20,-8
 59502 19bb6 5F4F      		sbci r21,-1
 59503 19bb8 0FB6      		in __tmp_reg__,__SREG__
 59504 19bba F894      		cli
 59505 19bbc DEBF      		out __SP_H__,r29
 59506 19bbe 0FBE      		out __SREG__,__tmp_reg__
 59507 19bc0 CDBF      		out __SP_L__,r28
 59508               	.L2396:
5763:lp_solve_5.5/lp_presolve.c ****         if(my_infinite(lp, Value2))
 59509               		.loc 2 5763 0
 59510 19bc2 89A9      		ldd r24,Y+49
 59511 19bc4 9AA9      		ldd r25,Y+50
 59512 19bc6 ABA9      		ldd r26,Y+51
 59513 19bc8 BCA9      		ldd r27,Y+52
 59514 19bca BF77      		andi r27,0x7f
 59515 19bcc 9E01      		movw r18,r28
 59516 19bce 2C57      		subi r18,124
 59517 19bd0 3F4F      		sbci r19,-1
 59518 19bd2 F901      		movw r30,r18
 59519 19bd4 2081      		ld r18,Z
 59520 19bd6 3181      		ldd r19,Z+1
 59521 19bd8 265F      		subi r18,-10
 59522 19bda 3C4F      		sbci r19,-4
 59523 19bdc F901      		movw r30,r18
 59524 19bde 2081      		ld r18,Z
 59525 19be0 3181      		ldd r19,Z+1
 59526 19be2 4281      		ldd r20,Z+2
 59527 19be4 5381      		ldd r21,Z+3
 59528 19be6 BC01      		movw r22,r24
 59529 19be8 CD01      		movw r24,r26
 59530 19bea 0E94 0000 		call __gesf2
 59531 19bee 8823      		tst r24
 59532 19bf0 04F0      		brlt .L2424
5764:lp_solve_5.5/lp_presolve.c ****           sprintf(upnum, "%-13s", "Inf");
 59533               		.loc 2 5764 0
 59534 19bf2 80E0      		ldi r24,lo8(.LC94)
 59535 19bf4 90E0      		ldi r25,hi8(.LC94)
 59536 19bf6 892F      		mov r24,r25
 59537 19bf8 8F93      		push r24
 59538 19bfa 80E0      		ldi r24,lo8(.LC94)
 59539 19bfc 90E0      		ldi r25,hi8(.LC94)
 59540 19bfe 8F93      		push r24
 59541 19c00 80E0      		ldi r24,lo8(.LC95)
 59542 19c02 90E0      		ldi r25,hi8(.LC95)
 59543 19c04 892F      		mov r24,r25
 59544 19c06 8F93      		push r24
 59545 19c08 80E0      		ldi r24,lo8(.LC95)
 59546 19c0a 90E0      		ldi r25,hi8(.LC95)
 59547 19c0c 8F93      		push r24
 59548 19c0e CE01      		movw r24,r28
 59549 19c10 855B      		subi r24,-75
 59550 19c12 9F4F      		sbci r25,-1
 59551 19c14 292F      		mov r18,r25
 59552 19c16 2F93      		push r18
 59553 19c18 8F93      		push r24
 59554 19c1a 0E94 0000 		call sprintf
 59555 19c1e 0F90      		pop __tmp_reg__
 59556 19c20 0F90      		pop __tmp_reg__
 59557 19c22 0F90      		pop __tmp_reg__
 59558 19c24 0F90      		pop __tmp_reg__
 59559 19c26 0F90      		pop __tmp_reg__
 59560 19c28 0F90      		pop __tmp_reg__
 59561 19c2a 00C0      		rjmp .L2399
 59562               	.L2424:
5765:lp_solve_5.5/lp_presolve.c ****         else
5766:lp_solve_5.5/lp_presolve.c ****           sprintf(upnum, "%+-12g", Value2);
 59563               		.loc 2 5766 0
 59564 19c2c 89A9      		ldd r24,Y+49
 59565 19c2e 9AA9      		ldd r25,Y+50
 59566 19c30 ABA9      		ldd r26,Y+51
 59567 19c32 BCA9      		ldd r27,Y+52
 59568 19c34 2B2F      		mov r18,r27
 59569 19c36 2F93      		push r18
 59570 19c38 2A2F      		mov r18,r26
 59571 19c3a 2F93      		push r18
 59572 19c3c 292F      		mov r18,r25
 59573 19c3e 2F93      		push r18
 59574 19c40 8F93      		push r24
 59575 19c42 80E0      		ldi r24,lo8(.LC96)
 59576 19c44 90E0      		ldi r25,hi8(.LC96)
 59577 19c46 892F      		mov r24,r25
 59578 19c48 8F93      		push r24
 59579 19c4a 80E0      		ldi r24,lo8(.LC96)
 59580 19c4c 90E0      		ldi r25,hi8(.LC96)
 59581 19c4e 8F93      		push r24
 59582 19c50 CE01      		movw r24,r28
 59583 19c52 855B      		subi r24,-75
 59584 19c54 9F4F      		sbci r25,-1
 59585 19c56 292F      		mov r18,r25
 59586 19c58 2F93      		push r18
 59587 19c5a 8F93      		push r24
 59588 19c5c 0E94 0000 		call sprintf
 59589 19c60 4DB7      		in r20,__SP_L__
 59590 19c62 5EB7      		in r21,__SP_H__
 59591 19c64 485F      		subi r20,-8
 59592 19c66 5F4F      		sbci r21,-1
 59593 19c68 0FB6      		in __tmp_reg__,__SREG__
 59594 19c6a F894      		cli
 59595 19c6c DEBF      		out __SP_H__,r29
 59596 19c6e 0FBE      		out __SREG__,__tmp_reg__
 59597 19c70 CDBF      		out __SP_L__,r28
 59598               	.L2399:
5767:lp_solve_5.5/lp_presolve.c ****         report(lp, i,    "%20s [ %s < Z < %s ]\n", "", lonum, upnum);
 59599               		.loc 2 5767 0
 59600 19c72 CE01      		movw r24,r28
 59601 19c74 855B      		subi r24,-75
 59602 19c76 9F4F      		sbci r25,-1
 59603 19c78 292F      		mov r18,r25
 59604 19c7a 2F93      		push r18
 59605 19c7c 8F93      		push r24
 59606 19c7e CE01      		movw r24,r28
 59607 19c80 C796      		adiw r24,55
 59608 19c82 292F      		mov r18,r25
 59609 19c84 2F93      		push r18
 59610 19c86 8F93      		push r24
 59611 19c88 80E0      		ldi r24,lo8(.LC88)
 59612 19c8a 90E0      		ldi r25,hi8(.LC88)
 59613 19c8c 892F      		mov r24,r25
 59614 19c8e 8F93      		push r24
 59615 19c90 80E0      		ldi r24,lo8(.LC88)
 59616 19c92 90E0      		ldi r25,hi8(.LC88)
 59617 19c94 8F93      		push r24
 59618 19c96 80E0      		ldi r24,lo8(.LC97)
 59619 19c98 90E0      		ldi r25,hi8(.LC97)
 59620 19c9a 892F      		mov r24,r25
 59621 19c9c 8F93      		push r24
 59622 19c9e 80E0      		ldi r24,lo8(.LC97)
 59623 19ca0 90E0      		ldi r25,hi8(.LC97)
 59624 19ca2 8F93      		push r24
 59625 19ca4 8A81      		ldd r24,Y+2
 59626 19ca6 8F93      		push r24
 59627 19ca8 8981      		ldd r24,Y+1
 59628 19caa 8F93      		push r24
 59629 19cac CE01      		movw r24,r28
 59630 19cae 8C57      		subi r24,124
 59631 19cb0 9F4F      		sbci r25,-1
 59632 19cb2 DC01      		movw r26,r24
 59633 19cb4 1196      		adiw r26,1
 59634 19cb6 2C91      		ld r18,X
 59635 19cb8 2F93      		push r18
 59636 19cba FC01      		movw r30,r24
 59637 19cbc 8081      		ld r24,Z
 59638 19cbe 8F93      		push r24
 59639 19cc0 0E94 0000 		call report
 59640 19cc4 4DB7      		in r20,__SP_L__
 59641 19cc6 5EB7      		in r21,__SP_H__
 59642 19cc8 445F      		subi r20,-12
 59643 19cca 5F4F      		sbci r21,-1
 59644 19ccc 0FB6      		in __tmp_reg__,__SREG__
 59645 19cce F894      		cli
 59646 19cd0 DEBF      		out __SP_H__,r29
 59647 19cd2 0FBE      		out __SREG__,__tmp_reg__
 59648 19cd4 CDBF      		out __SP_L__,r28
 59649               	.L2393:
 59650               	.LBE19:
5768:lp_solve_5.5/lp_presolve.c ****       }
5769:lp_solve_5.5/lp_presolve.c **** 
5770:lp_solve_5.5/lp_presolve.c ****       /* Update values for dual limit and best heuristic values */
5771:lp_solve_5.5/lp_presolve.c ****       if((MIP_count(lp) > 0) || (get_Lrows(lp) > 0)) {
 59651               		.loc 2 5771 0
 59652 19cd6 CE01      		movw r24,r28
 59653 19cd8 8C57      		subi r24,124
 59654 19cda 9F4F      		sbci r25,-1
 59655 19cdc DC01      		movw r26,r24
 59656 19cde 8D91      		ld r24,X+
 59657 19ce0 9C91      		ld r25,X
 59658 19ce2 0E94 0000 		call MIP_count
 59659 19ce6 1816      		cp __zero_reg__,r24
 59660 19ce8 1906      		cpc __zero_reg__,r25
 59661 19cea 04F0      		brlt .L2400
 59662               		.loc 2 5771 0 is_stmt 0 discriminator 1
 59663 19cec CE01      		movw r24,r28
 59664 19cee 8C57      		subi r24,124
 59665 19cf0 9F4F      		sbci r25,-1
 59666 19cf2 FC01      		movw r30,r24
 59667 19cf4 8081      		ld r24,Z
 59668 19cf6 9181      		ldd r25,Z+1
 59669 19cf8 0E94 0000 		call get_Lrows
 59670 19cfc 1816      		cp __zero_reg__,r24
 59671 19cfe 1906      		cpc __zero_reg__,r25
 59672 19d00 04F0      		brlt .+2
 59673 19d02 00C0      		rjmp .L2382
 59674               	.L2400:
5772:lp_solve_5.5/lp_presolve.c ****         if(is_maxim(lp)) {
 59675               		.loc 2 5772 0 is_stmt 1
 59676 19d04 CE01      		movw r24,r28
 59677 19d06 8C57      		subi r24,124
 59678 19d08 9F4F      		sbci r25,-1
 59679 19d0a DC01      		movw r26,r24
 59680 19d0c 8D91      		ld r24,X+
 59681 19d0e 9C91      		ld r25,X
 59682 19d10 0E94 0000 		call is_maxim
 59683 19d14 8823      		tst r24
 59684 19d16 01F4      		brne .+2
 59685 19d18 00C0      		rjmp .L2401
5773:lp_solve_5.5/lp_presolve.c ****           SETMAX(lp->bb_heuristicOF, Value1);
 59686               		.loc 2 5773 0
 59687 19d1a CE01      		movw r24,r28
 59688 19d1c 8C57      		subi r24,124
 59689 19d1e 9F4F      		sbci r25,-1
 59690 19d20 FC01      		movw r30,r24
 59691 19d22 8081      		ld r24,Z
 59692 19d24 9181      		ldd r25,Z+1
 59693 19d26 865A      		subi r24,-90
 59694 19d28 9C4F      		sbci r25,-4
 59695 19d2a FC01      		movw r30,r24
 59696 19d2c 8081      		ld r24,Z
 59697 19d2e 9181      		ldd r25,Z+1
 59698 19d30 A281      		ldd r26,Z+2
 59699 19d32 B381      		ldd r27,Z+3
 59700 19d34 2DA5      		ldd r18,Y+45
 59701 19d36 3EA5      		ldd r19,Y+46
 59702 19d38 4FA5      		ldd r20,Y+47
 59703 19d3a 58A9      		ldd r21,Y+48
 59704 19d3c BC01      		movw r22,r24
 59705 19d3e CD01      		movw r24,r26
 59706 19d40 0E94 0000 		call __ltsf2
 59707 19d44 8823      		tst r24
 59708 19d46 04F4      		brge .L2402
 59709               		.loc 2 5773 0 is_stmt 0 discriminator 1
 59710 19d48 8DA5      		ldd r24,Y+45
 59711 19d4a 9EA5      		ldd r25,Y+46
 59712 19d4c AFA5      		ldd r26,Y+47
 59713 19d4e B8A9      		ldd r27,Y+48
 59714 19d50 9E01      		movw r18,r28
 59715 19d52 2C57      		subi r18,124
 59716 19d54 3F4F      		sbci r19,-1
 59717 19d56 F901      		movw r30,r18
 59718 19d58 2081      		ld r18,Z
 59719 19d5a 3181      		ldd r19,Z+1
 59720 19d5c 265A      		subi r18,-90
 59721 19d5e 3C4F      		sbci r19,-4
 59722 19d60 F901      		movw r30,r18
 59723 19d62 8083      		st Z,r24
 59724 19d64 9183      		std Z+1,r25
 59725 19d66 A283      		std Z+2,r26
 59726 19d68 B383      		std Z+3,r27
 59727               	.L2402:
5774:lp_solve_5.5/lp_presolve.c ****           SETMIN(lp->bb_limitOF, Value2);
 59728               		.loc 2 5774 0 is_stmt 1
 59729 19d6a CE01      		movw r24,r28
 59730 19d6c 8C57      		subi r24,124
 59731 19d6e 9F4F      		sbci r25,-1
 59732 19d70 DC01      		movw r26,r24
 59733 19d72 8D91      		ld r24,X+
 59734 19d74 9C91      		ld r25,X
 59735 19d76 8A5A      		subi r24,-86
 59736 19d78 9C4F      		sbci r25,-4
 59737 19d7a FC01      		movw r30,r24
 59738 19d7c 8081      		ld r24,Z
 59739 19d7e 9181      		ldd r25,Z+1
 59740 19d80 A281      		ldd r26,Z+2
 59741 19d82 B381      		ldd r27,Z+3
 59742 19d84 29A9      		ldd r18,Y+49
 59743 19d86 3AA9      		ldd r19,Y+50
 59744 19d88 4BA9      		ldd r20,Y+51
 59745 19d8a 5CA9      		ldd r21,Y+52
 59746 19d8c BC01      		movw r22,r24
 59747 19d8e CD01      		movw r24,r26
 59748 19d90 0E94 0000 		call __gtsf2
 59749 19d94 1816      		cp __zero_reg__,r24
 59750 19d96 04F0      		brlt .+2
 59751 19d98 00C0      		rjmp .L2382
 59752               		.loc 2 5774 0 is_stmt 0 discriminator 1
 59753 19d9a 89A9      		ldd r24,Y+49
 59754 19d9c 9AA9      		ldd r25,Y+50
 59755 19d9e ABA9      		ldd r26,Y+51
 59756 19da0 BCA9      		ldd r27,Y+52
 59757 19da2 9E01      		movw r18,r28
 59758 19da4 2C57      		subi r18,124
 59759 19da6 3F4F      		sbci r19,-1
 59760 19da8 F901      		movw r30,r18
 59761 19daa 2081      		ld r18,Z
 59762 19dac 3181      		ldd r19,Z+1
 59763 19dae 2A5A      		subi r18,-86
 59764 19db0 3C4F      		sbci r19,-4
 59765 19db2 F901      		movw r30,r18
 59766 19db4 8083      		st Z,r24
 59767 19db6 9183      		std Z+1,r25
 59768 19db8 A283      		std Z+2,r26
 59769 19dba B383      		std Z+3,r27
 59770 19dbc 00C0      		rjmp .L2382
 59771               	.L2401:
5775:lp_solve_5.5/lp_presolve.c ****         }
5776:lp_solve_5.5/lp_presolve.c ****         else {
5777:lp_solve_5.5/lp_presolve.c ****           SETMIN(lp->bb_heuristicOF, Value2);
 59772               		.loc 2 5777 0 is_stmt 1
 59773 19dbe CE01      		movw r24,r28
 59774 19dc0 8C57      		subi r24,124
 59775 19dc2 9F4F      		sbci r25,-1
 59776 19dc4 DC01      		movw r26,r24
 59777 19dc6 8D91      		ld r24,X+
 59778 19dc8 9C91      		ld r25,X
 59779 19dca 865A      		subi r24,-90
 59780 19dcc 9C4F      		sbci r25,-4
 59781 19dce FC01      		movw r30,r24
 59782 19dd0 8081      		ld r24,Z
 59783 19dd2 9181      		ldd r25,Z+1
 59784 19dd4 A281      		ldd r26,Z+2
 59785 19dd6 B381      		ldd r27,Z+3
 59786 19dd8 29A9      		ldd r18,Y+49
 59787 19dda 3AA9      		ldd r19,Y+50
 59788 19ddc 4BA9      		ldd r20,Y+51
 59789 19dde 5CA9      		ldd r21,Y+52
 59790 19de0 BC01      		movw r22,r24
 59791 19de2 CD01      		movw r24,r26
 59792 19de4 0E94 0000 		call __gtsf2
 59793 19de8 1816      		cp __zero_reg__,r24
 59794 19dea 04F4      		brge .L2406
 59795               		.loc 2 5777 0 is_stmt 0 discriminator 1
 59796 19dec 89A9      		ldd r24,Y+49
 59797 19dee 9AA9      		ldd r25,Y+50
 59798 19df0 ABA9      		ldd r26,Y+51
 59799 19df2 BCA9      		ldd r27,Y+52
 59800 19df4 9E01      		movw r18,r28
 59801 19df6 2C57      		subi r18,124
 59802 19df8 3F4F      		sbci r19,-1
 59803 19dfa F901      		movw r30,r18
 59804 19dfc 2081      		ld r18,Z
 59805 19dfe 3181      		ldd r19,Z+1
 59806 19e00 265A      		subi r18,-90
 59807 19e02 3C4F      		sbci r19,-4
 59808 19e04 F901      		movw r30,r18
 59809 19e06 8083      		st Z,r24
 59810 19e08 9183      		std Z+1,r25
 59811 19e0a A283      		std Z+2,r26
 59812 19e0c B383      		std Z+3,r27
 59813               	.L2406:
5778:lp_solve_5.5/lp_presolve.c ****           SETMAX(lp->bb_limitOF, Value1);
 59814               		.loc 2 5778 0 is_stmt 1
 59815 19e0e CE01      		movw r24,r28
 59816 19e10 8C57      		subi r24,124
 59817 19e12 9F4F      		sbci r25,-1
 59818 19e14 DC01      		movw r26,r24
 59819 19e16 8D91      		ld r24,X+
 59820 19e18 9C91      		ld r25,X
 59821 19e1a 8A5A      		subi r24,-86
 59822 19e1c 9C4F      		sbci r25,-4
 59823 19e1e FC01      		movw r30,r24
 59824 19e20 8081      		ld r24,Z
 59825 19e22 9181      		ldd r25,Z+1
 59826 19e24 A281      		ldd r26,Z+2
 59827 19e26 B381      		ldd r27,Z+3
 59828 19e28 2DA5      		ldd r18,Y+45
 59829 19e2a 3EA5      		ldd r19,Y+46
 59830 19e2c 4FA5      		ldd r20,Y+47
 59831 19e2e 58A9      		ldd r21,Y+48
 59832 19e30 BC01      		movw r22,r24
 59833 19e32 CD01      		movw r24,r26
 59834 19e34 0E94 0000 		call __ltsf2
 59835 19e38 8823      		tst r24
 59836 19e3a 04F4      		brge .L2382
 59837               		.loc 2 5778 0 is_stmt 0 discriminator 1
 59838 19e3c 8DA5      		ldd r24,Y+45
 59839 19e3e 9EA5      		ldd r25,Y+46
 59840 19e40 AFA5      		ldd r26,Y+47
 59841 19e42 B8A9      		ldd r27,Y+48
 59842 19e44 9E01      		movw r18,r28
 59843 19e46 2C57      		subi r18,124
 59844 19e48 3F4F      		sbci r19,-1
 59845 19e4a F901      		movw r30,r18
 59846 19e4c 2081      		ld r18,Z
 59847 19e4e 3181      		ldd r19,Z+1
 59848 19e50 2A5A      		subi r18,-86
 59849 19e52 3C4F      		sbci r19,-4
 59850 19e54 F901      		movw r30,r18
 59851 19e56 8083      		st Z,r24
 59852 19e58 9183      		std Z+1,r25
 59853 19e5a A283      		std Z+2,r26
 59854 19e5c B383      		std Z+3,r27
 59855               	.L2382:
5779:lp_solve_5.5/lp_presolve.c ****         }
5780:lp_solve_5.5/lp_presolve.c ****       }
5781:lp_solve_5.5/lp_presolve.c ****     }
5782:lp_solve_5.5/lp_presolve.c ****     report(lp, NORMAL, " \n");
 59856               		.loc 2 5782 0 is_stmt 1
 59857 19e5e 80E0      		ldi r24,lo8(.LC71)
 59858 19e60 90E0      		ldi r25,hi8(.LC71)
 59859 19e62 892F      		mov r24,r25
 59860 19e64 8F93      		push r24
 59861 19e66 80E0      		ldi r24,lo8(.LC71)
 59862 19e68 90E0      		ldi r25,hi8(.LC71)
 59863 19e6a 8F93      		push r24
 59864 19e6c 1F92      		push __zero_reg__
 59865 19e6e 84E0      		ldi r24,lo8(4)
 59866 19e70 8F93      		push r24
 59867 19e72 CE01      		movw r24,r28
 59868 19e74 8C57      		subi r24,124
 59869 19e76 9F4F      		sbci r25,-1
 59870 19e78 DC01      		movw r26,r24
 59871 19e7a 1196      		adiw r26,1
 59872 19e7c 2C91      		ld r18,X
 59873 19e7e 2F93      		push r18
 59874 19e80 FC01      		movw r30,r24
 59875 19e82 8081      		ld r24,Z
 59876 19e84 8F93      		push r24
 59877 19e86 0E94 0000 		call report
 59878 19e8a 0F90      		pop __tmp_reg__
 59879 19e8c 0F90      		pop __tmp_reg__
 59880 19e8e 0F90      		pop __tmp_reg__
 59881 19e90 0F90      		pop __tmp_reg__
 59882 19e92 0F90      		pop __tmp_reg__
 59883 19e94 0F90      		pop __tmp_reg__
5783:lp_solve_5.5/lp_presolve.c **** 
5784:lp_solve_5.5/lp_presolve.c ****     /* Clean up (but save counts of constraint types for display later) */
5785:lp_solve_5.5/lp_presolve.c ****     j = psdata->LTmap->count;
 59884               		.loc 2 5785 0
 59885 19e96 8DA9      		ldd r24,Y+53
 59886 19e98 9EA9      		ldd r25,Y+54
 59887 19e9a DC01      		movw r26,r24
 59888 19e9c 1696      		adiw r26,6
 59889 19e9e 8D91      		ld r24,X+
 59890 19ea0 9C91      		ld r25,X
 59891 19ea2 1797      		sbiw r26,6+1
 59892 19ea4 FC01      		movw r30,r24
 59893 19ea6 8281      		ldd r24,Z+2
 59894 19ea8 9381      		ldd r25,Z+3
 59895 19eaa 9C83      		std Y+4,r25
 59896 19eac 8B83      		std Y+3,r24
5786:lp_solve_5.5/lp_presolve.c ****     jx = psdata->EQmap->count;
 59897               		.loc 2 5786 0
 59898 19eae 8DA9      		ldd r24,Y+53
 59899 19eb0 9EA9      		ldd r25,Y+54
 59900 19eb2 DC01      		movw r26,r24
 59901 19eb4 1496      		adiw r26,4
 59902 19eb6 8D91      		ld r24,X+
 59903 19eb8 9C91      		ld r25,X
 59904 19eba 1597      		sbiw r26,4+1
 59905 19ebc FC01      		movw r30,r24
 59906 19ebe 8281      		ldd r24,Z+2
 59907 19ec0 9381      		ldd r25,Z+3
 59908 19ec2 9E83      		std Y+6,r25
 59909 19ec4 8D83      		std Y+5,r24
5787:lp_solve_5.5/lp_presolve.c ****     jjx = lp->rows - j - jx;
 59910               		.loc 2 5787 0
 59911 19ec6 CE01      		movw r24,r28
 59912 19ec8 8C57      		subi r24,124
 59913 19eca 9F4F      		sbci r25,-1
 59914 19ecc DC01      		movw r26,r24
 59915 19ece 8D91      		ld r24,X+
 59916 19ed0 9C91      		ld r25,X
 59917 19ed2 8651      		subi r24,22
 59918 19ed4 9E4F      		sbci r25,-2
 59919 19ed6 FC01      		movw r30,r24
 59920 19ed8 2081      		ld r18,Z
 59921 19eda 3181      		ldd r19,Z+1
 59922 19edc 8B81      		ldd r24,Y+3
 59923 19ede 9C81      		ldd r25,Y+4
 59924 19ee0 281B      		sub r18,r24
 59925 19ee2 390B      		sbc r19,r25
 59926 19ee4 8D81      		ldd r24,Y+5
 59927 19ee6 9E81      		ldd r25,Y+6
 59928 19ee8 A901      		movw r20,r18
 59929 19eea 481B      		sub r20,r24
 59930 19eec 590B      		sbc r21,r25
 59931 19eee CA01      		movw r24,r20
 59932 19ef0 9887      		std Y+8,r25
 59933 19ef2 8F83      		std Y+7,r24
5788:lp_solve_5.5/lp_presolve.c ****     presolve_free(&psdata);
 59934               		.loc 2 5788 0
 59935 19ef4 CE01      		movw r24,r28
 59936 19ef6 C596      		adiw r24,53
 59937 19ef8 0E94 0000 		call presolve_free
 59938               	.L2333:
5789:lp_solve_5.5/lp_presolve.c **** 
5790:lp_solve_5.5/lp_presolve.c ****   }
5791:lp_solve_5.5/lp_presolve.c **** 
5792:lp_solve_5.5/lp_presolve.c ****   /* Signal that we are done presolving */
5793:lp_solve_5.5/lp_presolve.c ****   if((lp->usermessage != NULL) &&
 59939               		.loc 2 5793 0
 59940 19efc CE01      		movw r24,r28
 59941 19efe 8C57      		subi r24,124
 59942 19f00 9F4F      		sbci r25,-1
 59943 19f02 DC01      		movw r26,r24
 59944 19f04 8D91      		ld r24,X+
 59945 19f06 9C91      		ld r25,X
 59946 19f08 9C5F      		subi r25,-4
 59947 19f0a FC01      		movw r30,r24
 59948 19f0c 8081      		ld r24,Z
 59949 19f0e 9181      		ldd r25,Z+1
 59950 19f10 892B      		or r24,r25
 59951 19f12 01F4      		brne .+2
 59952 19f14 00C0      		rjmp .L2409
5794:lp_solve_5.5/lp_presolve.c ****      ((lp->do_presolve & PRESOLVE_LASTMASKMODE) != 0) && (lp->msgmask & MSG_PRESOLVE))
 59953               		.loc 2 5794 0 discriminator 1
 59954 19f16 CE01      		movw r24,r28
 59955 19f18 8C57      		subi r24,124
 59956 19f1a 9F4F      		sbci r25,-1
 59957 19f1c DC01      		movw r26,r24
 59958 19f1e 8D91      		ld r24,X+
 59959 19f20 9C91      		ld r25,X
 59960 19f22 8C58      		subi r24,-116
 59961 19f24 9D4F      		sbci r25,-3
 59962 19f26 FC01      		movw r30,r24
 59963 19f28 8081      		ld r24,Z
 59964 19f2a 9181      		ldd r25,Z+1
 59965 19f2c 092E      		mov __tmp_reg__,r25
 59966 19f2e 000C      		lsl r0
 59967 19f30 AA0B      		sbc r26,r26
 59968 19f32 BB0B      		sbc r27,r27
 59969 19f34 A770      		andi r26,7
 59970 19f36 BB27      		clr r27
5793:lp_solve_5.5/lp_presolve.c ****      ((lp->do_presolve & PRESOLVE_LASTMASKMODE) != 0) && (lp->msgmask & MSG_PRESOLVE))
 59971               		.loc 2 5793 0 discriminator 1
 59972 19f38 892B      		or r24,r25
 59973 19f3a 8A2B      		or r24,r26
 59974 19f3c 8B2B      		or r24,r27
 59975 19f3e 01F0      		breq .L2409
 59976               		.loc 2 5794 0
 59977 19f40 CE01      		movw r24,r28
 59978 19f42 8C57      		subi r24,124
 59979 19f44 9F4F      		sbci r25,-1
 59980 19f46 DC01      		movw r26,r24
 59981 19f48 8D91      		ld r24,X+
 59982 19f4a 9C91      		ld r25,X
 59983 19f4c 8E5F      		subi r24,-2
 59984 19f4e 9B4F      		sbci r25,-5
 59985 19f50 FC01      		movw r30,r24
 59986 19f52 8081      		ld r24,Z
 59987 19f54 9181      		ldd r25,Z+1
 59988 19f56 8170      		andi r24,1
 59989 19f58 9927      		clr r25
 59990 19f5a 892B      		or r24,r25
 59991 19f5c 01F0      		breq .L2409
5795:lp_solve_5.5/lp_presolve.c ****      lp->usermessage(lp, lp->msghandle, MSG_PRESOLVE);
 59992               		.loc 2 5795 0
 59993 19f5e CE01      		movw r24,r28
 59994 19f60 8C57      		subi r24,124
 59995 19f62 9F4F      		sbci r25,-1
 59996 19f64 DC01      		movw r26,r24
 59997 19f66 8D91      		ld r24,X+
 59998 19f68 9C91      		ld r25,X
 59999 19f6a 9C5F      		subi r25,-4
 60000 19f6c FC01      		movw r30,r24
 60001 19f6e 2081      		ld r18,Z
 60002 19f70 3181      		ldd r19,Z+1
 60003 19f72 CE01      		movw r24,r28
 60004 19f74 8C57      		subi r24,124
 60005 19f76 9F4F      		sbci r25,-1
 60006 19f78 DC01      		movw r26,r24
 60007 19f7a 8D91      		ld r24,X+
 60008 19f7c 9C91      		ld r25,X
 60009 19f7e 8C5F      		subi r24,-4
 60010 19f80 9B4F      		sbci r25,-5
 60011 19f82 FC01      		movw r30,r24
 60012 19f84 6081      		ld r22,Z
 60013 19f86 7181      		ldd r23,Z+1
 60014 19f88 CE01      		movw r24,r28
 60015 19f8a 8C57      		subi r24,124
 60016 19f8c 9F4F      		sbci r25,-1
 60017 19f8e DC01      		movw r26,r24
 60018 19f90 8D91      		ld r24,X+
 60019 19f92 9C91      		ld r25,X
 60020 19f94 41E0      		ldi r20,lo8(1)
 60021 19f96 50E0      		ldi r21,0
 60022 19f98 F901      		movw r30,r18
 60023 19f9a 0995      		icall
 60024               	.L2409:
5796:lp_solve_5.5/lp_presolve.c **** 
5797:lp_solve_5.5/lp_presolve.c ****   /* Create master SOS variable list */
5798:lp_solve_5.5/lp_presolve.c ****   if(SOS_count(lp) > 0) {
 60025               		.loc 2 5798 0
 60026 19f9c CE01      		movw r24,r28
 60027 19f9e 8C57      		subi r24,124
 60028 19fa0 9F4F      		sbci r25,-1
 60029 19fa2 DC01      		movw r26,r24
 60030 19fa4 8D91      		ld r24,X+
 60031 19fa6 9C91      		ld r25,X
 60032 19fa8 0E94 0000 		call SOS_count
 60033 19fac 1816      		cp __zero_reg__,r24
 60034 19fae 1906      		cpc __zero_reg__,r25
 60035 19fb0 04F4      		brge .L2410
5799:lp_solve_5.5/lp_presolve.c ****     /*SOS_member_updatemap(lp->SOS); */
5800:lp_solve_5.5/lp_presolve.c ****     make_SOSchain(lp, (MYBOOL) ((lp->do_presolve & PRESOLVE_LASTMASKMODE) != PRESOLVE_NONE));
 60036               		.loc 2 5800 0
 60037 19fb2 CE01      		movw r24,r28
 60038 19fb4 8C57      		subi r24,124
 60039 19fb6 9F4F      		sbci r25,-1
 60040 19fb8 FC01      		movw r30,r24
 60041 19fba 8081      		ld r24,Z
 60042 19fbc 9181      		ldd r25,Z+1
 60043 19fbe 8C58      		subi r24,-116
 60044 19fc0 9D4F      		sbci r25,-3
 60045 19fc2 DC01      		movw r26,r24
 60046 19fc4 8D91      		ld r24,X+
 60047 19fc6 9C91      		ld r25,X
 60048 19fc8 092E      		mov __tmp_reg__,r25
 60049 19fca 000C      		lsl r0
 60050 19fcc AA0B      		sbc r26,r26
 60051 19fce BB0B      		sbc r27,r27
 60052 19fd0 A770      		andi r26,7
 60053 19fd2 BB27      		clr r27
 60054 19fd4 21E0      		ldi r18,lo8(1)
 60055 19fd6 892B      		or r24,r25
 60056 19fd8 8A2B      		or r24,r26
 60057 19fda 8B2B      		or r24,r27
 60058 19fdc 01F4      		brne .L2411
 60059 19fde 20E0      		ldi r18,0
 60060               	.L2411:
 60061 19fe0 CE01      		movw r24,r28
 60062 19fe2 8C57      		subi r24,124
 60063 19fe4 9F4F      		sbci r25,-1
 60064 19fe6 FC01      		movw r30,r24
 60065 19fe8 8081      		ld r24,Z
 60066 19fea 9181      		ldd r25,Z+1
 60067 19fec 622F      		mov r22,r18
 60068 19fee 0E94 0000 		call make_SOSchain
 60069               	.L2410:
5801:lp_solve_5.5/lp_presolve.c ****   }
5802:lp_solve_5.5/lp_presolve.c **** 
5803:lp_solve_5.5/lp_presolve.c ****   /* Finalize model not identified as infeasible or unbounded */
5804:lp_solve_5.5/lp_presolve.c ****   if(status == RUNNING) {
 60070               		.loc 2 5804 0
 60071 19ff2 8F8D      		ldd r24,Y+31
 60072 19ff4 98A1      		ldd r25,Y+32
 60073 19ff6 0897      		sbiw r24,8
 60074 19ff8 01F0      		breq .+2
 60075 19ffa 00C0      		rjmp .L2412
5805:lp_solve_5.5/lp_presolve.c **** 
5806:lp_solve_5.5/lp_presolve.c ****     /* Resolve GUBs */
5807:lp_solve_5.5/lp_presolve.c ****     if(is_bb_mode(lp, NODE_GUBMODE))
 60076               		.loc 2 5807 0
 60077 19ffc CE01      		movw r24,r28
 60078 19ffe 8C57      		subi r24,124
 60079 1a000 9F4F      		sbci r25,-1
 60080 1a002 DC01      		movw r26,r24
 60081 1a004 8D91      		ld r24,X+
 60082 1a006 9C91      		ld r25,X
 60083 1a008 60E0      		ldi r22,0
 60084 1a00a 72E0      		ldi r23,lo8(2)
 60085 1a00c 0E94 0000 		call is_bb_mode
 60086 1a010 8823      		tst r24
 60087 1a012 01F0      		breq .L2413
5808:lp_solve_5.5/lp_presolve.c ****       identify_GUB(lp, TRUE);
 60088               		.loc 2 5808 0
 60089 1a014 CE01      		movw r24,r28
 60090 1a016 8C57      		subi r24,124
 60091 1a018 9F4F      		sbci r25,-1
 60092 1a01a FC01      		movw r30,r24
 60093 1a01c 8081      		ld r24,Z
 60094 1a01e 9181      		ldd r25,Z+1
 60095 1a020 61E0      		ldi r22,lo8(1)
 60096 1a022 0E94 0000 		call identify_GUB
 60097               	.L2413:
5809:lp_solve_5.5/lp_presolve.c **** 
5810:lp_solve_5.5/lp_presolve.c **** #if 0
5811:lp_solve_5.5/lp_presolve.c ****     /* Mark rows containing hidden identity matrices so that supporting factorization
5812:lp_solve_5.5/lp_presolve.c ****       engines can use this structural information to boost efficiency */
5813:lp_solve_5.5/lp_presolve.c ****     if(is_algopt(lp, ALGOPT_COMPACTBPF))
5814:lp_solve_5.5/lp_presolve.c ****       lp->bfpoptimize = (MYBOOL) (assist_factorization(lp, ROWTYPE_LOGICAL,
5815:lp_solve_5.5/lp_presolve.c ****                                                        &lp->rowset1, &lp->rowno1) > 0);
5816:lp_solve_5.5/lp_presolve.c **** #endif
5817:lp_solve_5.5/lp_presolve.c **** 
5818:lp_solve_5.5/lp_presolve.c ****     /* Scale the model based on current settings */
5819:lp_solve_5.5/lp_presolve.c ****     auto_scale(lp);
 60098               		.loc 2 5819 0
 60099 1a026 CE01      		movw r24,r28
 60100 1a028 8C57      		subi r24,124
 60101 1a02a 9F4F      		sbci r25,-1
 60102 1a02c DC01      		movw r26,r24
 60103 1a02e 8D91      		ld r24,X+
 60104 1a030 9C91      		ld r25,X
 60105 1a032 0E94 0000 		call auto_scale
5820:lp_solve_5.5/lp_presolve.c **** 
5821:lp_solve_5.5/lp_presolve.c ****     /* Crash the basis, if specified */
5822:lp_solve_5.5/lp_presolve.c ****     crash_basis(lp);
 60106               		.loc 2 5822 0
 60107 1a036 CE01      		movw r24,r28
 60108 1a038 8C57      		subi r24,124
 60109 1a03a 9F4F      		sbci r25,-1
 60110 1a03c FC01      		movw r30,r24
 60111 1a03e 8081      		ld r24,Z
 60112 1a040 9181      		ldd r25,Z+1
 60113 1a042 0E94 0000 		call crash_basis
5823:lp_solve_5.5/lp_presolve.c **** 
5824:lp_solve_5.5/lp_presolve.c ****     /* Produce presolved model statistics */
5825:lp_solve_5.5/lp_presolve.c ****     if(nConRemove+nVarFixed+nBoundTighten+nVarFixed+nCoeffChanged > 0) {
 60114               		.loc 2 5825 0
 60115 1a046 2B85      		ldd r18,Y+11
 60116 1a048 3C85      		ldd r19,Y+12
 60117 1a04a 8D85      		ldd r24,Y+13
 60118 1a04c 9E85      		ldd r25,Y+14
 60119 1a04e 280F      		add r18,r24
 60120 1a050 391F      		adc r19,r25
 60121 1a052 8F85      		ldd r24,Y+15
 60122 1a054 9889      		ldd r25,Y+16
 60123 1a056 280F      		add r18,r24
 60124 1a058 391F      		adc r19,r25
 60125 1a05a 8D85      		ldd r24,Y+13
 60126 1a05c 9E85      		ldd r25,Y+14
 60127 1a05e 280F      		add r18,r24
 60128 1a060 391F      		adc r19,r25
 60129 1a062 8985      		ldd r24,Y+9
 60130 1a064 9A85      		ldd r25,Y+10
 60131 1a066 820F      		add r24,r18
 60132 1a068 931F      		adc r25,r19
 60133 1a06a 1816      		cp __zero_reg__,r24
 60134 1a06c 1906      		cpc __zero_reg__,r25
 60135 1a06e 04F0      		brlt .+2
 60136 1a070 00C0      		rjmp .L2412
5826:lp_solve_5.5/lp_presolve.c ****       REPORT_modelinfo(lp, FALSE, "REDUCED");
 60137               		.loc 2 5826 0
 60138 1a072 CE01      		movw r24,r28
 60139 1a074 8C57      		subi r24,124
 60140 1a076 9F4F      		sbci r25,-1
 60141 1a078 DC01      		movw r26,r24
 60142 1a07a 8D91      		ld r24,X+
 60143 1a07c 9C91      		ld r25,X
 60144 1a07e 40E0      		ldi r20,lo8(.LC98)
 60145 1a080 50E0      		ldi r21,hi8(.LC98)
 60146 1a082 60E0      		ldi r22,0
 60147 1a084 0E94 0000 		call REPORT_modelinfo
5827:lp_solve_5.5/lp_presolve.c ****       if(nSum > 0) {
 60148               		.loc 2 5827 0
 60149 1a088 8B89      		ldd r24,Y+19
 60150 1a08a 9C89      		ldd r25,Y+20
 60151 1a08c 1816      		cp __zero_reg__,r24
 60152 1a08e 1906      		cpc __zero_reg__,r25
 60153 1a090 04F0      		brlt .+2
 60154 1a092 00C0      		rjmp .L2412
5828:lp_solve_5.5/lp_presolve.c ****         report(lp, NORMAL, "Row-types:   %7d LE,          %7d GE,             %7d EQ.\n",
 60155               		.loc 2 5828 0
 60156 1a094 8E81      		ldd r24,Y+6
 60157 1a096 8F93      		push r24
 60158 1a098 8D81      		ldd r24,Y+5
 60159 1a09a 8F93      		push r24
 60160 1a09c 8885      		ldd r24,Y+8
 60161 1a09e 8F93      		push r24
 60162 1a0a0 8F81      		ldd r24,Y+7
 60163 1a0a2 8F93      		push r24
 60164 1a0a4 8C81      		ldd r24,Y+4
 60165 1a0a6 8F93      		push r24
 60166 1a0a8 8B81      		ldd r24,Y+3
 60167 1a0aa 8F93      		push r24
 60168 1a0ac 80E0      		ldi r24,lo8(.LC99)
 60169 1a0ae 90E0      		ldi r25,hi8(.LC99)
 60170 1a0b0 892F      		mov r24,r25
 60171 1a0b2 8F93      		push r24
 60172 1a0b4 80E0      		ldi r24,lo8(.LC99)
 60173 1a0b6 90E0      		ldi r25,hi8(.LC99)
 60174 1a0b8 8F93      		push r24
 60175 1a0ba 1F92      		push __zero_reg__
 60176 1a0bc 84E0      		ldi r24,lo8(4)
 60177 1a0be 8F93      		push r24
 60178 1a0c0 CE01      		movw r24,r28
 60179 1a0c2 8C57      		subi r24,124
 60180 1a0c4 9F4F      		sbci r25,-1
 60181 1a0c6 FC01      		movw r30,r24
 60182 1a0c8 2181      		ldd r18,Z+1
 60183 1a0ca 2F93      		push r18
 60184 1a0cc DC01      		movw r26,r24
 60185 1a0ce 8C91      		ld r24,X
 60186 1a0d0 8F93      		push r24
 60187 1a0d2 0E94 0000 		call report
 60188 1a0d6 EDB7      		in r30,__SP_L__
 60189 1a0d8 FEB7      		in r31,__SP_H__
 60190 1a0da 3C96      		adiw r30,12
 60191 1a0dc 0FB6      		in __tmp_reg__,__SREG__
 60192 1a0de F894      		cli
 60193 1a0e0 DEBF      		out __SP_H__,r29
 60194 1a0e2 0FBE      		out __SREG__,__tmp_reg__
 60195 1a0e4 CDBF      		out __SP_L__,r28
5829:lp_solve_5.5/lp_presolve.c ****                            j, jjx, jx);
5830:lp_solve_5.5/lp_presolve.c ****         report(lp, NORMAL, " \n");
 60196               		.loc 2 5830 0
 60197 1a0e6 80E0      		ldi r24,lo8(.LC71)
 60198 1a0e8 90E0      		ldi r25,hi8(.LC71)
 60199 1a0ea 892F      		mov r24,r25
 60200 1a0ec 8F93      		push r24
 60201 1a0ee 80E0      		ldi r24,lo8(.LC71)
 60202 1a0f0 90E0      		ldi r25,hi8(.LC71)
 60203 1a0f2 8F93      		push r24
 60204 1a0f4 1F92      		push __zero_reg__
 60205 1a0f6 84E0      		ldi r24,lo8(4)
 60206 1a0f8 8F93      		push r24
 60207 1a0fa CE01      		movw r24,r28
 60208 1a0fc 8C57      		subi r24,124
 60209 1a0fe 9F4F      		sbci r25,-1
 60210 1a100 DC01      		movw r26,r24
 60211 1a102 1196      		adiw r26,1
 60212 1a104 2C91      		ld r18,X
 60213 1a106 2F93      		push r18
 60214 1a108 FC01      		movw r30,r24
 60215 1a10a 8081      		ld r24,Z
 60216 1a10c 8F93      		push r24
 60217 1a10e 0E94 0000 		call report
 60218 1a112 0F90      		pop __tmp_reg__
 60219 1a114 0F90      		pop __tmp_reg__
 60220 1a116 0F90      		pop __tmp_reg__
 60221 1a118 0F90      		pop __tmp_reg__
 60222 1a11a 0F90      		pop __tmp_reg__
 60223 1a11c 0F90      		pop __tmp_reg__
 60224               	.L2412:
5831:lp_solve_5.5/lp_presolve.c ****       }
5832:lp_solve_5.5/lp_presolve.c ****     }
5833:lp_solve_5.5/lp_presolve.c ****   }
5834:lp_solve_5.5/lp_presolve.c **** 
5835:lp_solve_5.5/lp_presolve.c ****   /* Optionally produce data on constraint classes */
5836:lp_solve_5.5/lp_presolve.c ****   if(lp->verbose > NORMAL) {
 60225               		.loc 2 5836 0
 60226 1a11e CE01      		movw r24,r28
 60227 1a120 8C57      		subi r24,124
 60228 1a122 9F4F      		sbci r25,-1
 60229 1a124 DC01      		movw r26,r24
 60230 1a126 8D91      		ld r24,X+
 60231 1a128 9C91      		ld r25,X
 60232 1a12a 885A      		subi r24,-88
 60233 1a12c 9D4F      		sbci r25,-3
 60234 1a12e FC01      		movw r30,r24
 60235 1a130 8081      		ld r24,Z
 60236 1a132 9181      		ldd r25,Z+1
 60237 1a134 0597      		sbiw r24,5
 60238 1a136 04F4      		brge .+2
 60239 1a138 00C0      		rjmp .L2339
5837:lp_solve_5.5/lp_presolve.c ****     report(lp, NORMAL, " \n");
 60240               		.loc 2 5837 0
 60241 1a13a 80E0      		ldi r24,lo8(.LC71)
 60242 1a13c 90E0      		ldi r25,hi8(.LC71)
 60243 1a13e 892F      		mov r24,r25
 60244 1a140 8F93      		push r24
 60245 1a142 80E0      		ldi r24,lo8(.LC71)
 60246 1a144 90E0      		ldi r25,hi8(.LC71)
 60247 1a146 8F93      		push r24
 60248 1a148 1F92      		push __zero_reg__
 60249 1a14a 84E0      		ldi r24,lo8(4)
 60250 1a14c 8F93      		push r24
 60251 1a14e CE01      		movw r24,r28
 60252 1a150 8C57      		subi r24,124
 60253 1a152 9F4F      		sbci r25,-1
 60254 1a154 DC01      		movw r26,r24
 60255 1a156 1196      		adiw r26,1
 60256 1a158 2C91      		ld r18,X
 60257 1a15a 2F93      		push r18
 60258 1a15c FC01      		movw r30,r24
 60259 1a15e 8081      		ld r24,Z
 60260 1a160 8F93      		push r24
 60261 1a162 0E94 0000 		call report
 60262 1a166 0F90      		pop __tmp_reg__
 60263 1a168 0F90      		pop __tmp_reg__
 60264 1a16a 0F90      		pop __tmp_reg__
 60265 1a16c 0F90      		pop __tmp_reg__
 60266 1a16e 0F90      		pop __tmp_reg__
 60267 1a170 0F90      		pop __tmp_reg__
5838:lp_solve_5.5/lp_presolve.c ****     REPORT_constraintinfo(lp, "CONSTRAINT CLASSES");
 60268               		.loc 2 5838 0
 60269 1a172 CE01      		movw r24,r28
 60270 1a174 8C57      		subi r24,124
 60271 1a176 9F4F      		sbci r25,-1
 60272 1a178 DC01      		movw r26,r24
 60273 1a17a 8D91      		ld r24,X+
 60274 1a17c 9C91      		ld r25,X
 60275 1a17e 60E0      		ldi r22,lo8(.LC100)
 60276 1a180 70E0      		ldi r23,hi8(.LC100)
 60277 1a182 0E94 0000 		call REPORT_constraintinfo
5839:lp_solve_5.5/lp_presolve.c ****     report(lp, NORMAL, " \n");
 60278               		.loc 2 5839 0
 60279 1a186 80E0      		ldi r24,lo8(.LC71)
 60280 1a188 90E0      		ldi r25,hi8(.LC71)
 60281 1a18a 892F      		mov r24,r25
 60282 1a18c 8F93      		push r24
 60283 1a18e 80E0      		ldi r24,lo8(.LC71)
 60284 1a190 90E0      		ldi r25,hi8(.LC71)
 60285 1a192 8F93      		push r24
 60286 1a194 1F92      		push __zero_reg__
 60287 1a196 84E0      		ldi r24,lo8(4)
 60288 1a198 8F93      		push r24
 60289 1a19a CE01      		movw r24,r28
 60290 1a19c 8C57      		subi r24,124
 60291 1a19e 9F4F      		sbci r25,-1
 60292 1a1a0 FC01      		movw r30,r24
 60293 1a1a2 2181      		ldd r18,Z+1
 60294 1a1a4 2F93      		push r18
 60295 1a1a6 DC01      		movw r26,r24
 60296 1a1a8 8C91      		ld r24,X
 60297 1a1aa 8F93      		push r24
 60298 1a1ac 0E94 0000 		call report
 60299 1a1b0 0F90      		pop __tmp_reg__
 60300 1a1b2 0F90      		pop __tmp_reg__
 60301 1a1b4 0F90      		pop __tmp_reg__
 60302 1a1b6 0F90      		pop __tmp_reg__
 60303 1a1b8 0F90      		pop __tmp_reg__
 60304 1a1ba 0F90      		pop __tmp_reg__
 60305 1a1bc 00C0      		rjmp .L2339
 60306               	.L2425:
5520:lp_solve_5.5/lp_presolve.c **** 
 60307               		.loc 2 5520 0
 60308 1a1be 0000      		nop
 60309               	.L2339:
5840:lp_solve_5.5/lp_presolve.c ****   }
5841:lp_solve_5.5/lp_presolve.c **** 
5842:lp_solve_5.5/lp_presolve.c **** Finish:
5843:lp_solve_5.5/lp_presolve.c ****   lp->wasPresolved  = TRUE;
 60310               		.loc 2 5843 0
 60311 1a1c0 CE01      		movw r24,r28
 60312 1a1c2 8C57      		subi r24,124
 60313 1a1c4 9F4F      		sbci r25,-1
 60314 1a1c6 FC01      		movw r30,r24
 60315 1a1c8 8081      		ld r24,Z
 60316 1a1ca 9181      		ldd r25,Z+1
 60317 1a1cc 8950      		subi r24,9
 60318 1a1ce 9D4F      		sbci r25,-3
 60319 1a1d0 21E0      		ldi r18,lo8(1)
 60320 1a1d2 DC01      		movw r26,r24
 60321 1a1d4 2C93      		st X,r18
5844:lp_solve_5.5/lp_presolve.c ****   lp->timepresolved = timeNow();
 60322               		.loc 2 5844 0
 60323 1a1d6 0E94 0000 		call timeNow
 60324 1a1da DC01      		movw r26,r24
 60325 1a1dc CB01      		movw r24,r22
 60326 1a1de 9E01      		movw r18,r28
 60327 1a1e0 2C57      		subi r18,124
 60328 1a1e2 3F4F      		sbci r19,-1
 60329 1a1e4 F901      		movw r30,r18
 60330 1a1e6 2081      		ld r18,Z
 60331 1a1e8 3181      		ldd r19,Z+1
 60332 1a1ea 2E57      		subi r18,126
 60333 1a1ec 3C4F      		sbci r19,-4
 60334 1a1ee F901      		movw r30,r18
 60335 1a1f0 8083      		st Z,r24
 60336 1a1f2 9183      		std Z+1,r25
 60337 1a1f4 A283      		std Z+2,r26
 60338 1a1f6 B383      		std Z+3,r27
5845:lp_solve_5.5/lp_presolve.c **** 
5846:lp_solve_5.5/lp_presolve.c **** #if 0
5847:lp_solve_5.5/lp_presolve.c **** /*  write_mps(lp, "test_out.mps"); */ /* Must put here due to variable name mapping */
5848:lp_solve_5.5/lp_presolve.c ****   write_lp(lp, "test_out.lp");   /* Must put here due to variable name mapping */
5849:lp_solve_5.5/lp_presolve.c **** #endif
5850:lp_solve_5.5/lp_presolve.c **** #if 0
5851:lp_solve_5.5/lp_presolve.c ****   REPORT_debugdump(lp, "testint2.txt", FALSE);
5852:lp_solve_5.5/lp_presolve.c **** #endif
5853:lp_solve_5.5/lp_presolve.c **** 
5854:lp_solve_5.5/lp_presolve.c ****   return( status );
 60339               		.loc 2 5854 0
 60340 1a1f8 8F8D      		ldd r24,Y+31
 60341 1a1fa 98A1      		ldd r25,Y+32
 60342               	.L2414:
 60343               	/* epilogue start */
5855:lp_solve_5.5/lp_presolve.c **** 
5856:lp_solve_5.5/lp_presolve.c **** }
 60344               		.loc 2 5856 0 discriminator 1
 60345 1a1fc C957      		subi r28,121
 60346 1a1fe DF4F      		sbci r29,-1
 60347 1a200 0FB6      		in __tmp_reg__,__SREG__
 60348 1a202 F894      		cli
 60349 1a204 DEBF      		out __SP_H__,r29
 60350 1a206 0FBE      		out __SREG__,__tmp_reg__
 60351 1a208 CDBF      		out __SP_L__,r28
 60352 1a20a DF91      		pop r29
 60353 1a20c CF91      		pop r28
 60354 1a20e 1F91      		pop r17
 60355 1a210 0F91      		pop r16
 60356 1a212 FF90      		pop r15
 60357 1a214 EF90      		pop r14
 60358 1a216 DF90      		pop r13
 60359 1a218 CF90      		pop r12
 60360 1a21a 0895      		ret
 60361               		.cfi_endproc
 60362               	.LFE93:
 60364               		.section	.rodata
 60365               	.LC101:
 60366 1053 6C70 5F73 		.string	"lp_solve unsuccessful after %.0f iter and a last best value of %g\n"
 60366      6F6C 7665 
 60366      2075 6E73 
 60366      7563 6365 
 60366      7373 6675 
 60367               	.LC102:
 60368 1096 6C70 5F73 		.string	"lp_solve explored %.0f nodes before termination\n"
 60368      6F6C 7665 
 60368      2065 7870 
 60368      6C6F 7265 
 60368      6420 252E 
 60369               		.text
 60370               	.global	postsolve
 60372               	postsolve:
 60373               	.LFB94:
5857:lp_solve_5.5/lp_presolve.c **** 
5858:lp_solve_5.5/lp_presolve.c **** STATIC MYBOOL postsolve(lprec *lp, int status)
5859:lp_solve_5.5/lp_presolve.c **** {
 60374               		.loc 2 5859 0
 60375               		.cfi_startproc
 60376 1a21c 6F92      		push r6
 60377               	.LCFI610:
 60378               		.cfi_def_cfa_offset 3
 60379               		.cfi_offset 6, -2
 60380 1a21e 7F92      		push r7
 60381               	.LCFI611:
 60382               		.cfi_def_cfa_offset 4
 60383               		.cfi_offset 7, -3
 60384 1a220 8F92      		push r8
 60385               	.LCFI612:
 60386               		.cfi_def_cfa_offset 5
 60387               		.cfi_offset 8, -4
 60388 1a222 9F92      		push r9
 60389               	.LCFI613:
 60390               		.cfi_def_cfa_offset 6
 60391               		.cfi_offset 9, -5
 60392 1a224 AF92      		push r10
 60393               	.LCFI614:
 60394               		.cfi_def_cfa_offset 7
 60395               		.cfi_offset 10, -6
 60396 1a226 BF92      		push r11
 60397               	.LCFI615:
 60398               		.cfi_def_cfa_offset 8
 60399               		.cfi_offset 11, -7
 60400 1a228 CF92      		push r12
 60401               	.LCFI616:
 60402               		.cfi_def_cfa_offset 9
 60403               		.cfi_offset 12, -8
 60404 1a22a DF92      		push r13
 60405               	.LCFI617:
 60406               		.cfi_def_cfa_offset 10
 60407               		.cfi_offset 13, -9
 60408 1a22c EF92      		push r14
 60409               	.LCFI618:
 60410               		.cfi_def_cfa_offset 11
 60411               		.cfi_offset 14, -10
 60412 1a22e FF92      		push r15
 60413               	.LCFI619:
 60414               		.cfi_def_cfa_offset 12
 60415               		.cfi_offset 15, -11
 60416 1a230 0F93      		push r16
 60417               	.LCFI620:
 60418               		.cfi_def_cfa_offset 13
 60419               		.cfi_offset 16, -12
 60420 1a232 1F93      		push r17
 60421               	.LCFI621:
 60422               		.cfi_def_cfa_offset 14
 60423               		.cfi_offset 17, -13
 60424 1a234 CF93      		push r28
 60425               	.LCFI622:
 60426               		.cfi_def_cfa_offset 15
 60427               		.cfi_offset 28, -14
 60428 1a236 DF93      		push r29
 60429               	.LCFI623:
 60430               		.cfi_def_cfa_offset 16
 60431               		.cfi_offset 29, -15
 60432 1a238 00D0      		rcall .
 60433 1a23a 00D0      		rcall .
 60434 1a23c 00D0      		rcall .
 60435               	.LCFI624:
 60436               		.cfi_def_cfa_offset 22
 60437 1a23e CDB7      		in r28,__SP_L__
 60438 1a240 DEB7      		in r29,__SP_H__
 60439               	.LCFI625:
 60440               		.cfi_def_cfa_register 28
 60441               	/* prologue: function */
 60442               	/* frame size = 6 */
 60443               	/* stack size = 20 */
 60444               	.L__stack_usage = 20
 60445 1a242 9C83      		std Y+4,r25
 60446 1a244 8B83      		std Y+3,r24
 60447 1a246 7E83      		std Y+6,r23
 60448 1a248 6D83      		std Y+5,r22
5860:lp_solve_5.5/lp_presolve.c ****   /* Verify solution */
5861:lp_solve_5.5/lp_presolve.c ****   if(lp->lag_status != RUNNING) {
 60449               		.loc 2 5861 0
 60450 1a24a 8B81      		ldd r24,Y+3
 60451 1a24c 9C81      		ldd r25,Y+4
 60452 1a24e 885F      		subi r24,-8
 60453 1a250 9D4F      		sbci r25,-3
 60454 1a252 FC01      		movw r30,r24
 60455 1a254 8081      		ld r24,Z
 60456 1a256 9181      		ldd r25,Z+1
 60457 1a258 0897      		sbiw r24,8
 60458 1a25a 01F4      		brne .+2
 60459 1a25c 00C0      		rjmp .L2430
 60460               	.LBB20:
5862:lp_solve_5.5/lp_presolve.c ****     int itemp;
5863:lp_solve_5.5/lp_presolve.c **** 
5864:lp_solve_5.5/lp_presolve.c ****     if(status == PRESOLVED)
 60461               		.loc 2 5864 0
 60462 1a25e 8D81      		ldd r24,Y+5
 60463 1a260 9E81      		ldd r25,Y+6
 60464 1a262 0997      		sbiw r24,9
 60465 1a264 01F4      		brne .L2431
5865:lp_solve_5.5/lp_presolve.c ****       status = OPTIMAL;
 60466               		.loc 2 5865 0
 60467 1a266 1E82      		std Y+6,__zero_reg__
 60468 1a268 1D82      		std Y+5,__zero_reg__
 60469               	.L2431:
5866:lp_solve_5.5/lp_presolve.c **** 
5867:lp_solve_5.5/lp_presolve.c ****     if((status == OPTIMAL) || (status == SUBOPTIMAL)) {
 60470               		.loc 2 5867 0
 60471 1a26a 8D81      		ldd r24,Y+5
 60472 1a26c 9E81      		ldd r25,Y+6
 60473 1a26e 892B      		or r24,r25
 60474 1a270 01F0      		breq .L2432
 60475               		.loc 2 5867 0 is_stmt 0 discriminator 1
 60476 1a272 8D81      		ldd r24,Y+5
 60477 1a274 9E81      		ldd r25,Y+6
 60478 1a276 0197      		sbiw r24,1
 60479 1a278 01F0      		breq .+2
 60480 1a27a 00C0      		rjmp .L2433
 60481               	.L2432:
5868:lp_solve_5.5/lp_presolve.c ****       itemp = check_solution(lp, lp->columns, lp->best_solution,
 60482               		.loc 2 5868 0 is_stmt 1
 60483 1a27c 8B81      		ldd r24,Y+3
 60484 1a27e 9C81      		ldd r25,Y+4
 60485 1a280 865D      		subi r24,-42
 60486 1a282 9C4F      		sbci r25,-4
 60487 1a284 FC01      		movw r30,r24
 60488 1a286 8081      		ld r24,Z
 60489 1a288 9181      		ldd r25,Z+1
 60490 1a28a A281      		ldd r26,Z+2
 60491 1a28c B381      		ldd r27,Z+3
 60492 1a28e 2B81      		ldd r18,Y+3
 60493 1a290 3C81      		ldd r19,Y+4
 60494 1a292 2E54      		subi r18,78
 60495 1a294 3D4F      		sbci r19,-3
 60496 1a296 F901      		movw r30,r18
 60497 1a298 0081      		ld r16,Z
 60498 1a29a 1181      		ldd r17,Z+1
 60499 1a29c 2B81      		ldd r18,Y+3
 60500 1a29e 3C81      		ldd r19,Y+4
 60501 1a2a0 2255      		subi r18,82
 60502 1a2a2 3D4F      		sbci r19,-3
 60503 1a2a4 F901      		movw r30,r18
 60504 1a2a6 A080      		ld r10,Z
 60505 1a2a8 B180      		ldd r11,Z+1
 60506 1a2aa 2B81      		ldd r18,Y+3
 60507 1a2ac 3C81      		ldd r19,Y+4
 60508 1a2ae 2C5E      		subi r18,-20
 60509 1a2b0 3D4F      		sbci r19,-3
 60510 1a2b2 F901      		movw r30,r18
 60511 1a2b4 4081      		ld r20,Z
 60512 1a2b6 5181      		ldd r21,Z+1
 60513 1a2b8 2B81      		ldd r18,Y+3
 60514 1a2ba 3C81      		ldd r19,Y+4
 60515 1a2bc 2451      		subi r18,20
 60516 1a2be 3E4F      		sbci r19,-2
 60517 1a2c0 F901      		movw r30,r18
 60518 1a2c2 6081      		ld r22,Z
 60519 1a2c4 7181      		ldd r23,Z+1
 60520 1a2c6 EB81      		ldd r30,Y+3
 60521 1a2c8 FC81      		ldd r31,Y+4
 60522 1a2ca 6C01      		movw r12,r24
 60523 1a2cc 7D01      		movw r14,r26
 60524 1a2ce 9501      		movw r18,r10
 60525 1a2d0 CF01      		movw r24,r30
 60526 1a2d2 0E94 0000 		call check_solution
 60527 1a2d6 9A83      		std Y+2,r25
 60528 1a2d8 8983      		std Y+1,r24
5869:lp_solve_5.5/lp_presolve.c ****                                  lp->orig_upbo, lp->orig_lowbo, lp->epssolution);
5870:lp_solve_5.5/lp_presolve.c ****       if((itemp != OPTIMAL) && (lp->spx_status == OPTIMAL))
 60529               		.loc 2 5870 0
 60530 1a2da 8981      		ldd r24,Y+1
 60531 1a2dc 9A81      		ldd r25,Y+2
 60532 1a2de 892B      		or r24,r25
 60533 1a2e0 01F0      		breq .L2434
 60534               		.loc 2 5870 0 is_stmt 0 discriminator 1
 60535 1a2e2 8B81      		ldd r24,Y+3
 60536 1a2e4 9C81      		ldd r25,Y+4
 60537 1a2e6 8A5F      		subi r24,-6
 60538 1a2e8 9D4F      		sbci r25,-3
 60539 1a2ea FC01      		movw r30,r24
 60540 1a2ec 8081      		ld r24,Z
 60541 1a2ee 9181      		ldd r25,Z+1
 60542 1a2f0 892B      		or r24,r25
 60543 1a2f2 01F4      		brne .L2434
5871:lp_solve_5.5/lp_presolve.c ****         lp->spx_status = itemp;
 60544               		.loc 2 5871 0 is_stmt 1
 60545 1a2f4 8B81      		ldd r24,Y+3
 60546 1a2f6 9C81      		ldd r25,Y+4
 60547 1a2f8 8A5F      		subi r24,-6
 60548 1a2fa 9D4F      		sbci r25,-3
 60549 1a2fc 2981      		ldd r18,Y+1
 60550 1a2fe 3A81      		ldd r19,Y+2
 60551 1a300 FC01      		movw r30,r24
 60552 1a302 3183      		std Z+1,r19
 60553 1a304 2083      		st Z,r18
5870:lp_solve_5.5/lp_presolve.c ****         lp->spx_status = itemp;
 60554               		.loc 2 5870 0
 60555 1a306 00C0      		rjmp .L2442
 60556               	.L2434:
5872:lp_solve_5.5/lp_presolve.c ****       else if((itemp == OPTIMAL) && ((status == SUBOPTIMAL) || (lp->spx_status == PRESOLVED)))
 60557               		.loc 2 5872 0
 60558 1a308 8981      		ldd r24,Y+1
 60559 1a30a 9A81      		ldd r25,Y+2
 60560 1a30c 892B      		or r24,r25
 60561 1a30e 01F0      		breq .+2
 60562 1a310 00C0      		rjmp .L2442
 60563               		.loc 2 5872 0 is_stmt 0 discriminator 1
 60564 1a312 8D81      		ldd r24,Y+5
 60565 1a314 9E81      		ldd r25,Y+6
 60566 1a316 0197      		sbiw r24,1
 60567 1a318 01F0      		breq .L2436
 60568               		.loc 2 5872 0 discriminator 2
 60569 1a31a 8B81      		ldd r24,Y+3
 60570 1a31c 9C81      		ldd r25,Y+4
 60571 1a31e 8A5F      		subi r24,-6
 60572 1a320 9D4F      		sbci r25,-3
 60573 1a322 FC01      		movw r30,r24
 60574 1a324 8081      		ld r24,Z
 60575 1a326 9181      		ldd r25,Z+1
 60576 1a328 0997      		sbiw r24,9
 60577 1a32a 01F0      		breq .+2
 60578 1a32c 00C0      		rjmp .L2442
 60579               	.L2436:
5873:lp_solve_5.5/lp_presolve.c ****         lp->spx_status = status;
 60580               		.loc 2 5873 0 is_stmt 1
 60581 1a32e 8B81      		ldd r24,Y+3
 60582 1a330 9C81      		ldd r25,Y+4
 60583 1a332 8A5F      		subi r24,-6
 60584 1a334 9D4F      		sbci r25,-3
 60585 1a336 2D81      		ldd r18,Y+5
 60586 1a338 3E81      		ldd r19,Y+6
 60587 1a33a FC01      		movw r30,r24
 60588 1a33c 3183      		std Z+1,r19
 60589 1a33e 2083      		st Z,r18
5870:lp_solve_5.5/lp_presolve.c ****         lp->spx_status = itemp;
 60590               		.loc 2 5870 0
 60591 1a340 00C0      		rjmp .L2442
 60592               	.L2433:
5874:lp_solve_5.5/lp_presolve.c ****     }
5875:lp_solve_5.5/lp_presolve.c ****     else if(status != PRESOLVED) {
 60593               		.loc 2 5875 0
 60594 1a342 8D81      		ldd r24,Y+5
 60595 1a344 9E81      		ldd r25,Y+6
 60596 1a346 0997      		sbiw r24,9
 60597 1a348 01F4      		brne .+2
 60598 1a34a 00C0      		rjmp .L2438
5876:lp_solve_5.5/lp_presolve.c ****       report(lp, NORMAL, "lp_solve unsuccessful after %.0f iter and a last best value of %g\n",
5877:lp_solve_5.5/lp_presolve.c ****              (double) get_total_iter(lp), lp->best_solution[0]);
 60599               		.loc 2 5877 0
 60600 1a34c 8B81      		ldd r24,Y+3
 60601 1a34e 9C81      		ldd r25,Y+4
 60602 1a350 8C5E      		subi r24,-20
 60603 1a352 9D4F      		sbci r25,-3
 60604 1a354 FC01      		movw r30,r24
 60605 1a356 8081      		ld r24,Z
 60606 1a358 9181      		ldd r25,Z+1
5876:lp_solve_5.5/lp_presolve.c ****       report(lp, NORMAL, "lp_solve unsuccessful after %.0f iter and a last best value of %g\n",
 60607               		.loc 2 5876 0
 60608 1a35a FC01      		movw r30,r24
 60609 1a35c 6080      		ld r6,Z
 60610 1a35e 7180      		ldd r7,Z+1
 60611 1a360 8280      		ldd r8,Z+2
 60612 1a362 9380      		ldd r9,Z+3
 60613               		.loc 2 5877 0
 60614 1a364 8B81      		ldd r24,Y+3
 60615 1a366 9C81      		ldd r25,Y+4
 60616 1a368 0E94 0000 		call get_total_iter
 60617 1a36c A22E      		mov r10,r18
 60618 1a36e B32E      		mov r11,r19
 60619 1a370 C42E      		mov r12,r20
 60620 1a372 D52E      		mov r13,r21
 60621 1a374 E62E      		mov r14,r22
 60622 1a376 F72E      		mov r15,r23
 60623 1a378 082F      		mov r16,r24
 60624 1a37a 192F      		mov r17,r25
5876:lp_solve_5.5/lp_presolve.c ****       report(lp, NORMAL, "lp_solve unsuccessful after %.0f iter and a last best value of %g\n",
 60625               		.loc 2 5876 0
 60626 1a37c 2A2D      		mov r18,r10
 60627 1a37e 3B2D      		mov r19,r11
 60628 1a380 4C2D      		mov r20,r12
 60629 1a382 5D2D      		mov r21,r13
 60630 1a384 6E2D      		mov r22,r14
 60631 1a386 7F2D      		mov r23,r15
 60632 1a388 802F      		mov r24,r16
 60633 1a38a 912F      		mov r25,r17
 60634 1a38c 0E94 0000 		call __floatdisf
 60635 1a390 DC01      		movw r26,r24
 60636 1a392 CB01      		movw r24,r22
 60637 1a394 292D      		mov r18,r9
 60638 1a396 2F93      		push r18
 60639 1a398 282D      		mov r18,r8
 60640 1a39a 2F93      		push r18
 60641 1a39c 272D      		mov r18,r7
 60642 1a39e 2F93      		push r18
 60643 1a3a0 262D      		mov r18,r6
 60644 1a3a2 2F93      		push r18
 60645 1a3a4 2B2F      		mov r18,r27
 60646 1a3a6 2F93      		push r18
 60647 1a3a8 2A2F      		mov r18,r26
 60648 1a3aa 2F93      		push r18
 60649 1a3ac 292F      		mov r18,r25
 60650 1a3ae 2F93      		push r18
 60651 1a3b0 8F93      		push r24
 60652 1a3b2 80E0      		ldi r24,lo8(.LC101)
 60653 1a3b4 90E0      		ldi r25,hi8(.LC101)
 60654 1a3b6 892F      		mov r24,r25
 60655 1a3b8 8F93      		push r24
 60656 1a3ba 80E0      		ldi r24,lo8(.LC101)
 60657 1a3bc 90E0      		ldi r25,hi8(.LC101)
 60658 1a3be 8F93      		push r24
 60659 1a3c0 1F92      		push __zero_reg__
 60660 1a3c2 84E0      		ldi r24,lo8(4)
 60661 1a3c4 8F93      		push r24
 60662 1a3c6 8C81      		ldd r24,Y+4
 60663 1a3c8 8F93      		push r24
 60664 1a3ca 8B81      		ldd r24,Y+3
 60665 1a3cc 8F93      		push r24
 60666 1a3ce 0E94 0000 		call report
 60667 1a3d2 8DB7      		in r24,__SP_L__
 60668 1a3d4 9EB7      		in r25,__SP_H__
 60669 1a3d6 0E96      		adiw r24,14
 60670 1a3d8 0FB6      		in __tmp_reg__,__SREG__
 60671 1a3da F894      		cli
 60672 1a3dc DEBF      		out __SP_H__,r29
 60673 1a3de 0FBE      		out __SREG__,__tmp_reg__
 60674 1a3e0 CDBF      		out __SP_L__,r28
5878:lp_solve_5.5/lp_presolve.c ****       if(lp->bb_totalnodes > 0)
 60675               		.loc 2 5878 0
 60676 1a3e2 8B81      		ldd r24,Y+3
 60677 1a3e4 9C81      		ldd r25,Y+4
 60678 1a3e6 8A5C      		subi r24,-54
 60679 1a3e8 9C4F      		sbci r25,-4
 60680 1a3ea FC01      		movw r30,r24
 60681 1a3ec A080      		ld r10,Z
 60682 1a3ee FC01      		movw r30,r24
 60683 1a3f0 B180      		ldd r11,Z+1
 60684 1a3f2 FC01      		movw r30,r24
 60685 1a3f4 C280      		ldd r12,Z+2
 60686 1a3f6 FC01      		movw r30,r24
 60687 1a3f8 D380      		ldd r13,Z+3
 60688 1a3fa FC01      		movw r30,r24
 60689 1a3fc E480      		ldd r14,Z+4
 60690 1a3fe FC01      		movw r30,r24
 60691 1a400 F580      		ldd r15,Z+5
 60692 1a402 FC01      		movw r30,r24
 60693 1a404 0681      		ldd r16,Z+6
 60694 1a406 FC01      		movw r30,r24
 60695 1a408 1781      		ldd r17,Z+7
 60696 1a40a 2A2D      		mov r18,r10
 60697 1a40c 3B2D      		mov r19,r11
 60698 1a40e 4C2D      		mov r20,r12
 60699 1a410 5D2D      		mov r21,r13
 60700 1a412 6E2D      		mov r22,r14
 60701 1a414 7F2D      		mov r23,r15
 60702 1a416 802F      		mov r24,r16
 60703 1a418 912F      		mov r25,r17
 60704 1a41a A0E0      		ldi r26,0
 60705 1a41c 0E94 0000 		call __cmpdi2_s8
 60706 1a420 01F0      		breq .+2
 60707 1a422 04F4      		brge .+2
 60708 1a424 00C0      		rjmp .L2437
5879:lp_solve_5.5/lp_presolve.c ****         report(lp, NORMAL, "lp_solve explored %.0f nodes before termination\n",
5880:lp_solve_5.5/lp_presolve.c ****                (double) get_total_nodes(lp));
 60709               		.loc 2 5880 0
 60710 1a426 8B81      		ldd r24,Y+3
 60711 1a428 9C81      		ldd r25,Y+4
 60712 1a42a 0E94 0000 		call get_total_nodes
 60713 1a42e A22E      		mov r10,r18
 60714 1a430 B32E      		mov r11,r19
 60715 1a432 C42E      		mov r12,r20
 60716 1a434 D52E      		mov r13,r21
 60717 1a436 E62E      		mov r14,r22
 60718 1a438 F72E      		mov r15,r23
 60719 1a43a 082F      		mov r16,r24
 60720 1a43c 192F      		mov r17,r25
5879:lp_solve_5.5/lp_presolve.c ****         report(lp, NORMAL, "lp_solve explored %.0f nodes before termination\n",
 60721               		.loc 2 5879 0
 60722 1a43e 2A2D      		mov r18,r10
 60723 1a440 3B2D      		mov r19,r11
 60724 1a442 4C2D      		mov r20,r12
 60725 1a444 5D2D      		mov r21,r13
 60726 1a446 6E2D      		mov r22,r14
 60727 1a448 7F2D      		mov r23,r15
 60728 1a44a 802F      		mov r24,r16
 60729 1a44c 912F      		mov r25,r17
 60730 1a44e 0E94 0000 		call __floatdisf
 60731 1a452 DC01      		movw r26,r24
 60732 1a454 CB01      		movw r24,r22
 60733 1a456 2B2F      		mov r18,r27
 60734 1a458 2F93      		push r18
 60735 1a45a 2A2F      		mov r18,r26
 60736 1a45c 2F93      		push r18
 60737 1a45e 292F      		mov r18,r25
 60738 1a460 2F93      		push r18
 60739 1a462 8F93      		push r24
 60740 1a464 80E0      		ldi r24,lo8(.LC102)
 60741 1a466 90E0      		ldi r25,hi8(.LC102)
 60742 1a468 892F      		mov r24,r25
 60743 1a46a 8F93      		push r24
 60744 1a46c 80E0      		ldi r24,lo8(.LC102)
 60745 1a46e 90E0      		ldi r25,hi8(.LC102)
 60746 1a470 8F93      		push r24
 60747 1a472 1F92      		push __zero_reg__
 60748 1a474 84E0      		ldi r24,lo8(4)
 60749 1a476 8F93      		push r24
 60750 1a478 8C81      		ldd r24,Y+4
 60751 1a47a 8F93      		push r24
 60752 1a47c 8B81      		ldd r24,Y+3
 60753 1a47e 8F93      		push r24
 60754 1a480 0E94 0000 		call report
 60755 1a484 8DB7      		in r24,__SP_L__
 60756 1a486 9EB7      		in r25,__SP_H__
 60757 1a488 0A96      		adiw r24,10
 60758 1a48a 0FB6      		in __tmp_reg__,__SREG__
 60759 1a48c F894      		cli
 60760 1a48e DEBF      		out __SP_H__,r29
 60761 1a490 0FBE      		out __SREG__,__tmp_reg__
 60762 1a492 CDBF      		out __SP_L__,r28
 60763 1a494 00C0      		rjmp .L2437
 60764               	.L2438:
5881:lp_solve_5.5/lp_presolve.c ****     }
5882:lp_solve_5.5/lp_presolve.c ****     else
5883:lp_solve_5.5/lp_presolve.c ****       lp->spx_status = OPTIMAL;
 60765               		.loc 2 5883 0
 60766 1a496 8B81      		ldd r24,Y+3
 60767 1a498 9C81      		ldd r25,Y+4
 60768 1a49a 8A5F      		subi r24,-6
 60769 1a49c 9D4F      		sbci r25,-3
 60770 1a49e FC01      		movw r30,r24
 60771 1a4a0 1182      		std Z+1,__zero_reg__
 60772 1a4a2 1082      		st Z,__zero_reg__
 60773 1a4a4 00C0      		rjmp .L2437
 60774               	.L2442:
5870:lp_solve_5.5/lp_presolve.c ****         lp->spx_status = itemp;
 60775               		.loc 2 5870 0
 60776 1a4a6 0000      		nop
 60777               	.L2437:
5884:lp_solve_5.5/lp_presolve.c **** 
5885:lp_solve_5.5/lp_presolve.c ****     /* Only rebuild primal solution here, since the dual is only computed on request */
5886:lp_solve_5.5/lp_presolve.c ****     presolve_rebuildUndo(lp, TRUE);
 60778               		.loc 2 5886 0
 60779 1a4a8 8B81      		ldd r24,Y+3
 60780 1a4aa 9C81      		ldd r25,Y+4
 60781 1a4ac 61E0      		ldi r22,lo8(1)
 60782 1a4ae 0E94 0000 		call presolve_rebuildUndo
 60783               	.L2430:
 60784               	.LBE20:
5887:lp_solve_5.5/lp_presolve.c ****   }
5888:lp_solve_5.5/lp_presolve.c **** 
5889:lp_solve_5.5/lp_presolve.c ****   /* Check if we can clear the variable map */
5890:lp_solve_5.5/lp_presolve.c ****   if(varmap_canunlock(lp))
 60785               		.loc 2 5890 0
 60786 1a4b2 8B81      		ldd r24,Y+3
 60787 1a4b4 9C81      		ldd r25,Y+4
 60788 1a4b6 0E94 0000 		call varmap_canunlock
 60789 1a4ba 8823      		tst r24
 60790 1a4bc 01F0      		breq .L2440
5891:lp_solve_5.5/lp_presolve.c ****     lp->varmap_locked = FALSE;
 60791               		.loc 2 5891 0
 60792 1a4be 8B81      		ldd r24,Y+3
 60793 1a4c0 9C81      		ldd r25,Y+4
 60794 1a4c2 8853      		subi r24,56
 60795 1a4c4 9D4F      		sbci r25,-3
 60796 1a4c6 FC01      		movw r30,r24
 60797 1a4c8 1082      		st Z,__zero_reg__
 60798               	.L2440:
5892:lp_solve_5.5/lp_presolve.c **** #if 0
5893:lp_solve_5.5/lp_presolve.c ****   REPORT_mat_mmsave(lp, "basis.mtx", NULL, FALSE);  /* Write the current basis matrix (no OF) */
5894:lp_solve_5.5/lp_presolve.c **** #endif
5895:lp_solve_5.5/lp_presolve.c **** 
5896:lp_solve_5.5/lp_presolve.c ****   return( TRUE );
 60799               		.loc 2 5896 0
 60800 1a4ca 81E0      		ldi r24,lo8(1)
 60801               	/* epilogue start */
5897:lp_solve_5.5/lp_presolve.c **** }
 60802               		.loc 2 5897 0
 60803 1a4cc 2696      		adiw r28,6
 60804 1a4ce 0FB6      		in __tmp_reg__,__SREG__
 60805 1a4d0 F894      		cli
 60806 1a4d2 DEBF      		out __SP_H__,r29
 60807 1a4d4 0FBE      		out __SREG__,__tmp_reg__
 60808 1a4d6 CDBF      		out __SP_L__,r28
 60809 1a4d8 DF91      		pop r29
 60810 1a4da CF91      		pop r28
 60811 1a4dc 1F91      		pop r17
 60812 1a4de 0F91      		pop r16
 60813 1a4e0 FF90      		pop r15
 60814 1a4e2 EF90      		pop r14
 60815 1a4e4 DF90      		pop r13
 60816 1a4e6 CF90      		pop r12
 60817 1a4e8 BF90      		pop r11
 60818 1a4ea AF90      		pop r10
 60819 1a4ec 9F90      		pop r9
 60820 1a4ee 8F90      		pop r8
 60821 1a4f0 7F90      		pop r7
 60822 1a4f2 6F90      		pop r6
 60823 1a4f4 0895      		ret
 60824               		.cfi_endproc
 60825               	.LFE94:
 60827               	.Letext0:
 60828               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\lib\\gc
 60829               		.file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 60830               		.file 5 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 60831               		.file 6 "lp_solve_5.5\\shared/commonlib.h"
 60832               		.file 7 "lp_solve_5.5/lp_types.h"
 60833               		.file 8 "lp_solve_5.5/lp_lib.h"
 60834               		.file 9 "lp_solve_5.5/lp_utils.h"
 60835               		.file 10 "lp_solve_5.5/lp_Hash.h"
 60836               		.file 11 "lp_solve_5.5/lp_matrix.h"
 60837               		.file 12 "lp_solve_5.5/lp_mipbb.h"
 60838               		.file 13 "lp_solve_5.5/lp_SOS.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lp_presolve.c
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:12     .text:00000000 presolve_rowlength
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:94     .text:00000066 presolve_collength
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:186    .text:000000cc presolve_setstatusex
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:321    .text:00000188 presolve_statuscheck
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:439    .text:0000022e presolve_createUndo
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:1901   .text:00000bac presolve_freeUndo
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:535    .text:000002ac inc_presolve_space
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:869    .text:000004dc presolve_setOrig
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:988    .text:00000582 presolve_fillUndo
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:1226   .text:000006fc presolve_rebuildUndo
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:2117   .text:00000cfc presolve_storeDualUndo
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:7798   .text:000031d6 presolve_nextrow
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:2449   .text:00000ee6 presolve_SOScheck
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:3146   .text:000013aa presolve_roundrhs
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:3342   .text:000014f6 presolve_roundval
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:3430   .text:00001574 presolve_mustupdate
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:3572   .text:00001654 presolve_sumplumin
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:3803   .text:000017d0 presolve_range
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:3904   .text:0000185c presolve_rangeorig
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:4181   .text:00001a20 presolve_rowfeasible
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:4632   .text:00001d36 presolve_debugmap
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:5151   .text:000020ae presolve_validate
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:6264   .text:00002882 presolve_rowtallies
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:7687   .text:00003158 presolve_nextcol
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:6605   .text:00002abe presolve_debugrowtallies
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:6857   .text:00002c48 presolve_debugcheck
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:7196   .text:00002e88 presolve_candeletevar
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:7338   .text:00002f5c presolve_rowlengthex
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:7425   .text:00002fd4 presolve_rowlengthdebug
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:7522   .text:0000305c presolve_nextrecord
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:7745   .text:0000319c presolve_lastcol
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:7856   .text:0000321a presolve_lastrow
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:7909   .text:00003254 presolve_adjustrhs
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:8172   .text:00003406 presolve_shrink
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:8579   .text:000036aa presolve_rowremove
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:22464  .text:0000976c presolve_colfixdual
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:19946  .text:000085c2 presolve_colfix
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:9103   .text:00003a2e presolve_colremove
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:9693   .text:00003e32 presolve_redundantSOS
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:10491  .text:00004390 presolve_fixSOS1
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:11248  .text:0000488e presolve_setEQ
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:11404  .text:00004984 presolve_singletonbounds
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:12400  .text:000050b8 presolve_altsingletonvalid
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:12806  .text:0000537a presolve_multibounds
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:13752  .text:00005a5e isnz_origobj
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:13832  .text:00005ac4 presolve_testrow
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:39352  .text:00010ede presolve_updatesums
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:13913  .text:00005b1a presolve_coltighten
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:16512  .text:00006e5a presolve_rowtighten
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:17213  .text:0000730e set_dv_bounds
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:17336  .text:000073b6 get_dv_lower
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:17399  .text:00007400 get_dv_upper
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:17468  .text:0000744a presolve_rowfix
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:19638  .text:000083d2 presolve_colsingleton
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:22233  .text:000095fc presolve_rowfixzero
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:23598  .text:00009f52 presolve_probefix01
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:24533  .text:0000a5f0 presolve_probetighten01
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:25193  .text:0000aa42 presolve_mergerows
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:26581  .text:0000b41a presolve_reduceGCD
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:27521  .text:0000bab6 presolve_knapsack
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:28523  .text:0000c1a2 presolve_invalideq2
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:28749  .text:0000c2fa presolve_getcolumnEQ
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:29003  .text:0000c48e presolve_singularities
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:29492  .text:0000c7c8 presolve_elimeq2
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:33936  .text:0000e8d0 presolve_impliedfree
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:34236  .text:0000eab0 presolve_impliedcolfix
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:36374  .text:0000fa1e presolve_initpsrec
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:36589  .text:0000fb92 presolve_freepsrec
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:37065  .text:0000fed4 presolve_init
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:38446  .text:000108b8 presolve_free
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:38664  .text:00010a26 presolve_makefree
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:39604  .text:00011088 presolve_finalize
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:40291  .text:000114fe presolve_debugdump
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:40923  .text:00011974 compRedundant
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:41075  .text:00011a48 compSparsity
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:41279  .text:00011b6e compAggregate
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:41672  .text:00011e02 presolve_rowdominance
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:43622  .text:00012bbe presolve_coldominance01
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:45368  .text:000137e4 presolve_aggregate
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:47561  .text:0001477a presolve_makesparser
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:50628  .text:00015da6 presolve_SOS1
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:51385  .text:000162c8 presolve_boundconflict
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:51748  .text:000164ea presolve_columns
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:52844  .text:00016ca0 presolve_freeandslacks
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:54201  .text:0001765c presolve_preparerows
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:54854  .text:00017aec presolve_rows
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:56441  .text:000185aa presolve
C:\Users\GUILHE~1\AppData\Local\Temp\cc7ZhIRl.s:60372  .text:0001a21c postsolve

UNDEFINED SYMBOLS
report
mat_validate
userabort
calloc
allocREAL
allocINT
__addsf3
__mulsf3
__subsf3
__gtsf2
free
freeUndoLadder
__divsf3
get_mat
get_mat_byindex
addUndoPresolve
appendUndoPresolve
SOS_count
isActiveLink
SOS_member_index
SOS_is_member
__nesf2
__ltsf2
restoreINT
__gesf2
is_chsign
firstActiveLink
get_rh_lower
get_constr_type
get_row_name
get_str_constr_type
get_rh_upper
nextActiveLink
mat_rowlength
get_upbo
get_lowbo
is_semicont
mat_collength
SOS_memberships
SOS_is_member_of_type
removeLink
is_int
SOS_member_delete
clean_SOSgroup
free_SOSgroup
delete_SOSrec
is_fixedvar
SOS_member_updatemap
allocMYBOOL
set_bounds
is_constr_type
setLink
set_constr_type
swapREAL
get_col_name
fmod
floor
ceil
is_unbounded
__eqsf2
__lesf2
get_rh
is_maxim
get_rh_range
is_binary
lastActiveLink
prevActiveLink
set_rh_lower
set_rh_upper
__fixsfsi
__fixsfdi
__floatdisf
gcd
__cmpdi2_s8
cloneLink
add_columnex
set_rh
appendLink
createLink
modf
swapINT
mat_expandcolumn
createUndoLadder
incrementUndoLadder
mat_setcol
mat_mapreplace
freeLink
mat_getitem
is_SOS_var
is_presolve
mat_multrow
fillLink
__floatsisf
get_nonzeros
__divmodhi4
mat_memopt
memcpy
pow
set_rh_range
set_unbounded
memset
firstInactiveLink
nextInactiveLink
lastInactiveLink
countInactiveLink
del_columnex
mat_colcompact
del_constraintex
mat_rowcompact
mat_zerocompact
varmap_compact
__iob
fopen
fprintf
fwrite
blockWriteINT
blockWriteREAL
fclose
QS_execute
mat_findelm
is_negative
countActiveLink
compareREAL
qsortex
sprintf
add_SOS
SOS_set_GUB
append_SOSrec
set_semicont
isOrigFixed
varmap_lock
make_SOSchain
auto_scale
crash_basis
timeNow
REPORT_modelinfo
mat_computemax
yieldformessages
mat_checkcounts
SOS_infeasible
SOS_get_type
MIP_count
get_presolveloops
get_Lrows
is_bb_mode
identify_GUB
REPORT_constraintinfo
check_solution
get_total_iter
get_total_nodes
varmap_canunlock
__do_copy_data
