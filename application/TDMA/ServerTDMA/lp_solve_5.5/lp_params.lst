   1               		.file	"lp_params.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.rodata
  12               	.LC0:
  13 0000 414E 5449 		.string	"ANTIDEGEN_NONE"
  13      4445 4745 
  13      4E5F 4E4F 
  13      4E45 00
  14               	.LC1:
  15 000f 414E 5449 		.string	"ANTIDEGEN_FIXEDVARS"
  15      4445 4745 
  15      4E5F 4649 
  15      5845 4456 
  15      4152 5300 
  16               	.LC2:
  17 0023 414E 5449 		.string	"ANTIDEGEN_COLUMNCHECK"
  17      4445 4745 
  17      4E5F 434F 
  17      4C55 4D4E 
  17      4348 4543 
  18               	.LC3:
  19 0039 414E 5449 		.string	"ANTIDEGEN_STALLING"
  19      4445 4745 
  19      4E5F 5354 
  19      414C 4C49 
  19      4E47 00
  20               	.LC4:
  21 004c 414E 5449 		.string	"ANTIDEGEN_NUMFAILURE"
  21      4445 4745 
  21      4E5F 4E55 
  21      4D46 4149 
  21      4C55 5245 
  22               	.LC5:
  23 0061 414E 5449 		.string	"ANTIDEGEN_LOSTFEAS"
  23      4445 4745 
  23      4E5F 4C4F 
  23      5354 4645 
  23      4153 00
  24               	.LC6:
  25 0074 414E 5449 		.string	"ANTIDEGEN_INFEASIBLE"
  25      4445 4745 
  25      4E5F 494E 
  25      4645 4153 
  25      4942 4C45 
  26               	.LC7:
  27 0089 414E 5449 		.string	"ANTIDEGEN_DYNAMIC"
  27      4445 4745 
  27      4E5F 4459 
  27      4E41 4D49 
  27      4300 
  28               	.LC8:
  29 009b 414E 5449 		.string	"ANTIDEGEN_DURINGBB"
  29      4445 4745 
  29      4E5F 4455 
  29      5249 4E47 
  29      4242 00
  30               	.LC9:
  31 00ae 414E 5449 		.string	"ANTIDEGEN_RHSPERTURB"
  31      4445 4745 
  31      4E5F 5248 
  31      5350 4552 
  31      5455 5242 
  32               	.LC10:
  33 00c3 414E 5449 		.string	"ANTIDEGEN_BOUNDFLIP"
  33      4445 4745 
  33      4E5F 424F 
  33      554E 4446 
  33      4C49 5000 
  34               		.section	.data.anti_degen,"aw",@progbits
  37               	anti_degen:
  38 0000 0000      		.word	0
  39 0002 0000      		.word	.LC0
  40 0004 0100      		.word	1
  41 0006 0000      		.word	.LC1
  42 0008 0200      		.word	2
  43 000a 0000      		.word	.LC2
  44 000c 0400      		.word	4
  45 000e 0000      		.word	.LC3
  46 0010 0800      		.word	8
  47 0012 0000      		.word	.LC4
  48 0014 1000      		.word	16
  49 0016 0000      		.word	.LC5
  50 0018 2000      		.word	32
  51 001a 0000      		.word	.LC6
  52 001c 4000      		.word	64
  53 001e 0000      		.word	.LC7
  54 0020 8000      		.word	128
  55 0022 0000      		.word	.LC8
  56 0024 0001      		.word	256
  57 0026 0000      		.word	.LC9
  58 0028 0002      		.word	512
  59 002a 0000      		.word	.LC10
  60               		.section	.rodata
  61               	.LC11:
  62 00d7 4352 4153 		.string	"CRASH_NONE"
  62      485F 4E4F 
  62      4E45 00
  63               	.LC12:
  64 00e2 4352 4153 		.string	"CRASH_MOSTFEASIBLE"
  64      485F 4D4F 
  64      5354 4645 
  64      4153 4942 
  64      4C45 00
  65               	.LC13:
  66 00f5 4352 4153 		.string	"CRASH_LEASTDEGENERATE"
  66      485F 4C45 
  66      4153 5444 
  66      4547 454E 
  66      4552 4154 
  67               		.section	.data.basiscrash,"aw",@progbits
  70               	basiscrash:
  71 0000 0000      		.word	0
  72 0002 0000      		.word	.LC11
  73 0004 0200      		.word	2
  74 0006 0000      		.word	.LC12
  75 0008 0300      		.word	3
  76 000a 0000      		.word	.LC13
  77               		.section	.rodata
  78               	.LC14:
  79 010b 4252 414E 		.string	"BRANCH_CEILING"
  79      4348 5F43 
  79      4549 4C49 
  79      4E47 00
  80               	.LC15:
  81 011a 4252 414E 		.string	"BRANCH_FLOOR"
  81      4348 5F46 
  81      4C4F 4F52 
  81      00
  82               	.LC16:
  83 0127 4252 414E 		.string	"BRANCH_AUTOMATIC"
  83      4348 5F41 
  83      5554 4F4D 
  83      4154 4943 
  83      00
  84               		.section	.data.bb_floorfirst,"aw",@progbits
  87               	bb_floorfirst:
  88 0000 0000      		.word	0
  89 0002 0000      		.word	.LC14
  90 0004 0100      		.word	1
  91 0006 0000      		.word	.LC15
  92 0008 0200      		.word	2
  93 000a 0000      		.word	.LC16
  94               		.section	.rodata
  95               	.LC17:
  96 0138 4E4F 4445 		.string	"NODE_FIRSTSELECT"
  96      5F46 4952 
  96      5354 5345 
  96      4C45 4354 
  96      00
  97               	.LC18:
  98 0149 4E4F 4445 		.string	"NODE_GAPSELECT"
  98      5F47 4150 
  98      5345 4C45 
  98      4354 00
  99               	.LC19:
 100 0158 4E4F 4445 		.string	"NODE_RANGESELECT"
 100      5F52 414E 
 100      4745 5345 
 100      4C45 4354 
 100      00
 101               	.LC20:
 102 0169 4E4F 4445 		.string	"NODE_FRACTIONSELECT"
 102      5F46 5241 
 102      4354 494F 
 102      4E53 454C 
 102      4543 5400 
 103               	.LC21:
 104 017d 4E4F 4445 		.string	"NODE_PSEUDOCOSTSELECT"
 104      5F50 5345 
 104      5544 4F43 
 104      4F53 5453 
 104      454C 4543 
 105               	.LC22:
 106 0193 4E4F 4445 		.string	"NODE_PSEUDONONINTSELECT"
 106      5F50 5345 
 106      5544 4F4E 
 106      4F4E 494E 
 106      5453 454C 
 107               	.LC23:
 108 01ab 4E4F 4445 		.string	"NODE_PSEUDORATIOSELECT"
 108      5F50 5345 
 108      5544 4F52 
 108      4154 494F 
 108      5345 4C45 
 109               	.LC24:
 110 01c2 4E4F 4445 		.string	"NODE_USERSELECT"
 110      5F55 5345 
 110      5253 454C 
 110      4543 5400 
 111               	.LC25:
 112 01d2 4E4F 4445 		.string	"NODE_WEIGHTREVERSEMODE"
 112      5F57 4549 
 112      4748 5452 
 112      4556 4552 
 112      5345 4D4F 
 113               	.LC26:
 114 01e9 4E4F 4445 		.string	"NODE_BRANCHREVERSEMODE"
 114      5F42 5241 
 114      4E43 4852 
 114      4556 4552 
 114      5345 4D4F 
 115               	.LC27:
 116 0200 4E4F 4445 		.string	"NODE_GREEDYMODE"
 116      5F47 5245 
 116      4544 594D 
 116      4F44 4500 
 117               	.LC28:
 118 0210 4E4F 4445 		.string	"NODE_PSEUDOCOSTMODE"
 118      5F50 5345 
 118      5544 4F43 
 118      4F53 544D 
 118      4F44 4500 
 119               	.LC29:
 120 0224 4E4F 4445 		.string	"NODE_DEPTHFIRSTMODE"
 120      5F44 4550 
 120      5448 4649 
 120      5253 544D 
 120      4F44 4500 
 121               	.LC30:
 122 0238 4E4F 4445 		.string	"NODE_RANDOMIZEMODE"
 122      5F52 414E 
 122      444F 4D49 
 122      5A45 4D4F 
 122      4445 00
 123               	.LC31:
 124 024b 4E4F 4445 		.string	"NODE_GUBMODE"
 124      5F47 5542 
 124      4D4F 4445 
 124      00
 125               	.LC32:
 126 0258 4E4F 4445 		.string	"NODE_DYNAMICMODE"
 126      5F44 594E 
 126      414D 4943 
 126      4D4F 4445 
 126      00
 127               	.LC33:
 128 0269 4E4F 4445 		.string	"NODE_RESTARTMODE"
 128      5F52 4553 
 128      5441 5254 
 128      4D4F 4445 
 128      00
 129               	.LC34:
 130 027a 4E4F 4445 		.string	"NODE_BREADTHFIRSTMODE"
 130      5F42 5245 
 130      4144 5448 
 130      4649 5253 
 130      544D 4F44 
 131               	.LC35:
 132 0290 4E4F 4445 		.string	"NODE_AUTOORDER"
 132      5F41 5554 
 132      4F4F 5244 
 132      4552 00
 133               	.LC36:
 134 029f 4E4F 4445 		.string	"NODE_RCOSTFIXING"
 134      5F52 434F 
 134      5354 4649 
 134      5849 4E47 
 134      00
 135               	.LC37:
 136 02b0 4E4F 4445 		.string	"NODE_STRONGINIT"
 136      5F53 5452 
 136      4F4E 4749 
 136      4E49 5400 
 137               		.section	.data.bb_rule,"aw",@progbits
 140               	bb_rule:
 141 0000 0000      		.word	0
 142 0002 0000      		.word	.LC17
 143 0004 0100      		.word	1
 144 0006 0000      		.word	.LC18
 145 0008 0200      		.word	2
 146 000a 0000      		.word	.LC19
 147 000c 0300      		.word	3
 148 000e 0000      		.word	.LC20
 149 0010 0400      		.word	4
 150 0012 0000      		.word	.LC21
 151 0014 0500      		.word	5
 152 0016 0000      		.word	.LC22
 153 0018 0600      		.word	6
 154 001a 0000      		.word	.LC23
 155 001c 0700      		.word	7
 156 001e 0000      		.word	.LC24
 157 0020 0800      		.word	8
 158 0022 0000      		.word	.LC25
 159 0024 1000      		.word	16
 160 0026 0000      		.word	.LC26
 161 0028 2000      		.word	32
 162 002a 0000      		.word	.LC27
 163 002c 4000      		.word	64
 164 002e 0000      		.word	.LC28
 165 0030 8000      		.word	128
 166 0032 0000      		.word	.LC29
 167 0034 0001      		.word	256
 168 0036 0000      		.word	.LC30
 169 0038 0002      		.word	512
 170 003a 0000      		.word	.LC31
 171 003c 0004      		.word	1024
 172 003e 0000      		.word	.LC32
 173 0040 0008      		.word	2048
 174 0042 0000      		.word	.LC33
 175 0044 0010      		.word	4096
 176 0046 0000      		.word	.LC34
 177 0048 0020      		.word	8192
 178 004a 0000      		.word	.LC35
 179 004c 0040      		.word	16384
 180 004e 0000      		.word	.LC36
 181 0050 0080      		.word	-32768
 182 0052 0000      		.word	.LC37
 183               		.section	.rodata
 184               	.LC38:
 185 02c0 494D 5052 		.string	"IMPROVE_NONE"
 185      4F56 455F 
 185      4E4F 4E45 
 185      00
 186               	.LC39:
 187 02cd 494D 5052 		.string	"IMPROVE_SOLUTION"
 187      4F56 455F 
 187      534F 4C55 
 187      5449 4F4E 
 187      00
 188               	.LC40:
 189 02de 494D 5052 		.string	"IMPROVE_DUALFEAS"
 189      4F56 455F 
 189      4455 414C 
 189      4645 4153 
 189      00
 190               	.LC41:
 191 02ef 494D 5052 		.string	"IMPROVE_THETAGAP"
 191      4F56 455F 
 191      5448 4554 
 191      4147 4150 
 191      00
 192               	.LC42:
 193 0300 494D 5052 		.string	"IMPROVE_BBSIMPLEX"
 193      4F56 455F 
 193      4242 5349 
 193      4D50 4C45 
 193      5800 
 194               		.section	.data.improve,"aw",@progbits
 197               	improve:
 198 0000 0000      		.word	0
 199 0002 0000      		.word	.LC38
 200 0004 0100      		.word	1
 201 0006 0000      		.word	.LC39
 202 0008 0200      		.word	2
 203 000a 0000      		.word	.LC40
 204 000c 0400      		.word	4
 205 000e 0000      		.word	.LC41
 206 0010 0800      		.word	8
 207 0012 0000      		.word	.LC42
 208               		.text
 210               	get_mip_gap_abs:
 211               	.LFB7:
 212               		.file 1 "lp_solve_5.5/lp_params.c"
   1:lp_solve_5.5/lp_params.c **** #include <stdio.h>
   2:lp_solve_5.5/lp_params.c **** #include <stdlib.h>
   3:lp_solve_5.5/lp_params.c **** #include <ctype.h>
   4:lp_solve_5.5/lp_params.c **** #include <errno.h>
   5:lp_solve_5.5/lp_params.c **** 
   6:lp_solve_5.5/lp_params.c **** #include "commonlib.h"
   7:lp_solve_5.5/lp_params.c **** #include "lp_lib.h"
   8:lp_solve_5.5/lp_params.c **** #include "lp_report.h"
   9:lp_solve_5.5/lp_params.c **** #include "ini.h"
  10:lp_solve_5.5/lp_params.c **** 
  11:lp_solve_5.5/lp_params.c **** typedef int (__WINAPI fn_int_get_function)(lprec *lp);
  12:lp_solve_5.5/lp_params.c **** typedef long (__WINAPI fn_long_get_function)(lprec *lp);
  13:lp_solve_5.5/lp_params.c **** typedef MYBOOL (__WINAPI fn_MYBOOL_get_function)(lprec *lp);
  14:lp_solve_5.5/lp_params.c **** typedef REAL (__WINAPI fn_REAL_get_function)(lprec *lp);
  15:lp_solve_5.5/lp_params.c **** typedef void (__WINAPI fn_int_set_function)(lprec *lp, int value);
  16:lp_solve_5.5/lp_params.c **** typedef void (__WINAPI fn_long_set_function)(lprec *lp, long value);
  17:lp_solve_5.5/lp_params.c **** typedef void (__WINAPI fn_MYBOOL_set_function)(lprec *lp, MYBOOL value);
  18:lp_solve_5.5/lp_params.c **** typedef void (__WINAPI fn_REAL_set_function)(lprec *lp, REAL value);
  19:lp_solve_5.5/lp_params.c **** 
  20:lp_solve_5.5/lp_params.c **** #define intfunction    1
  21:lp_solve_5.5/lp_params.c **** #define longfunction   2
  22:lp_solve_5.5/lp_params.c **** #define MYBOOLfunction 3
  23:lp_solve_5.5/lp_params.c **** #define REALfunction   4
  24:lp_solve_5.5/lp_params.c **** 
  25:lp_solve_5.5/lp_params.c **** #define setvalues(values, basemask) values, sizeof(values) / sizeof(*values), basemask
  26:lp_solve_5.5/lp_params.c **** #define setNULLvalues NULL, 0, 0
  27:lp_solve_5.5/lp_params.c **** #define setvalue(value) value, #value
  28:lp_solve_5.5/lp_params.c **** #define setintfunction(get_function, set_function) { get_function }, { set_function }, intfunction
  29:lp_solve_5.5/lp_params.c **** #define setlongfunction(get_function, set_function) { (fn_int_get_function *) get_function }, {(fn_
  30:lp_solve_5.5/lp_params.c **** #define setMYBOOLfunction(get_function, set_function) { (fn_int_get_function *) get_function }, { (
  31:lp_solve_5.5/lp_params.c **** #define setREALfunction(get_function, set_function) {(fn_int_get_function *) get_function }, { (fn_
  32:lp_solve_5.5/lp_params.c **** 
  33:lp_solve_5.5/lp_params.c **** #define WRITE_COMMENTED 0
  34:lp_solve_5.5/lp_params.c **** #define WRITE_ACTIVE    1
  35:lp_solve_5.5/lp_params.c **** 
  36:lp_solve_5.5/lp_params.c **** struct _values {
  37:lp_solve_5.5/lp_params.c ****   int value;
  38:lp_solve_5.5/lp_params.c ****   char *svalue;
  39:lp_solve_5.5/lp_params.c **** };
  40:lp_solve_5.5/lp_params.c **** 
  41:lp_solve_5.5/lp_params.c **** struct _functions {
  42:lp_solve_5.5/lp_params.c ****   char *par;                                    /* name of parameter in ini file */
  43:lp_solve_5.5/lp_params.c ****   union {
  44:lp_solve_5.5/lp_params.c ****     fn_int_get_function *int_get_function;         /* set via setintfunction */
  45:lp_solve_5.5/lp_params.c ****     fn_long_get_function *long_get_function;       /* set via setlongfunction */
  46:lp_solve_5.5/lp_params.c ****     fn_MYBOOL_get_function *MYBOOL_get_function;   /* set via setMYBOOLfunction */
  47:lp_solve_5.5/lp_params.c ****     fn_REAL_get_function *REAL_get_function;       /* set via setREALfunction */
  48:lp_solve_5.5/lp_params.c ****   } get_function;
  49:lp_solve_5.5/lp_params.c ****   union {
  50:lp_solve_5.5/lp_params.c ****     fn_int_set_function *int_set_function;         /* set via setintfunction */
  51:lp_solve_5.5/lp_params.c ****     fn_long_set_function *long_set_function;       /* set via setlongfunction */
  52:lp_solve_5.5/lp_params.c ****     fn_MYBOOL_set_function *MYBOOL_set_function;   /* set via setMYBOOLfunction */
  53:lp_solve_5.5/lp_params.c ****     fn_REAL_set_function *REAL_set_function;       /* set via setREALfunction */
  54:lp_solve_5.5/lp_params.c ****   } set_function;
  55:lp_solve_5.5/lp_params.c ****   int type;                                     /* set via set*function */
  56:lp_solve_5.5/lp_params.c ****   struct _values *values;                       /* set via setvalues to a structure of _values */
  57:lp_solve_5.5/lp_params.c ****   int elements;                                 /*  or via setNULLvalues if the value is shown as i
  58:lp_solve_5.5/lp_params.c ****   unsigned int basemask;
  59:lp_solve_5.5/lp_params.c ****   int mask;                                     /* WRITE_ACTIVE or WRITE_COMMENTED */
  60:lp_solve_5.5/lp_params.c **** };
  61:lp_solve_5.5/lp_params.c **** 
  62:lp_solve_5.5/lp_params.c **** static struct _values anti_degen[] =
  63:lp_solve_5.5/lp_params.c **** {
  64:lp_solve_5.5/lp_params.c ****   { setvalue(ANTIDEGEN_NONE) },
  65:lp_solve_5.5/lp_params.c ****   { setvalue(ANTIDEGEN_FIXEDVARS) },
  66:lp_solve_5.5/lp_params.c ****   { setvalue(ANTIDEGEN_COLUMNCHECK) },
  67:lp_solve_5.5/lp_params.c ****   { setvalue(ANTIDEGEN_STALLING) },
  68:lp_solve_5.5/lp_params.c ****   { setvalue(ANTIDEGEN_NUMFAILURE) },
  69:lp_solve_5.5/lp_params.c ****   { setvalue(ANTIDEGEN_LOSTFEAS) },
  70:lp_solve_5.5/lp_params.c ****   { setvalue(ANTIDEGEN_INFEASIBLE) },
  71:lp_solve_5.5/lp_params.c ****   { setvalue(ANTIDEGEN_DYNAMIC) },
  72:lp_solve_5.5/lp_params.c ****   { setvalue(ANTIDEGEN_DURINGBB) },
  73:lp_solve_5.5/lp_params.c ****   { setvalue(ANTIDEGEN_RHSPERTURB) },
  74:lp_solve_5.5/lp_params.c ****   { setvalue(ANTIDEGEN_BOUNDFLIP) },
  75:lp_solve_5.5/lp_params.c **** };
  76:lp_solve_5.5/lp_params.c **** 
  77:lp_solve_5.5/lp_params.c **** static struct _values basiscrash[] =
  78:lp_solve_5.5/lp_params.c **** {
  79:lp_solve_5.5/lp_params.c ****   { setvalue(CRASH_NONE) },
  80:lp_solve_5.5/lp_params.c ****   /* { setvalue(CRASH_NONBASICBOUNDS) }, */ /* not yet implemented */
  81:lp_solve_5.5/lp_params.c ****   { setvalue(CRASH_MOSTFEASIBLE) },
  82:lp_solve_5.5/lp_params.c ****   { setvalue(CRASH_LEASTDEGENERATE) },
  83:lp_solve_5.5/lp_params.c **** };
  84:lp_solve_5.5/lp_params.c **** 
  85:lp_solve_5.5/lp_params.c **** static struct _values bb_floorfirst[] =
  86:lp_solve_5.5/lp_params.c **** {
  87:lp_solve_5.5/lp_params.c ****   { setvalue(BRANCH_CEILING) },
  88:lp_solve_5.5/lp_params.c ****   { setvalue(BRANCH_FLOOR) },
  89:lp_solve_5.5/lp_params.c ****   { setvalue(BRANCH_AUTOMATIC) },
  90:lp_solve_5.5/lp_params.c **** };
  91:lp_solve_5.5/lp_params.c **** 
  92:lp_solve_5.5/lp_params.c **** static struct _values bb_rule[] =
  93:lp_solve_5.5/lp_params.c **** {
  94:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_FIRSTSELECT) },
  95:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_GAPSELECT) },
  96:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_RANGESELECT) },
  97:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_FRACTIONSELECT) },
  98:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_PSEUDOCOSTSELECT) },
  99:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_PSEUDONONINTSELECT) },
 100:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_PSEUDORATIOSELECT) },
 101:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_USERSELECT) },
 102:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_WEIGHTREVERSEMODE) },
 103:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_BRANCHREVERSEMODE) },
 104:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_GREEDYMODE) },
 105:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_PSEUDOCOSTMODE) },
 106:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_DEPTHFIRSTMODE) },
 107:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_RANDOMIZEMODE) },
 108:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_GUBMODE) },
 109:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_DYNAMICMODE) },
 110:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_RESTARTMODE) },
 111:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_BREADTHFIRSTMODE) },
 112:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_AUTOORDER) },
 113:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_RCOSTFIXING) },
 114:lp_solve_5.5/lp_params.c ****   { setvalue(NODE_STRONGINIT) },
 115:lp_solve_5.5/lp_params.c **** };
 116:lp_solve_5.5/lp_params.c **** 
 117:lp_solve_5.5/lp_params.c **** static struct _values improve[] =
 118:lp_solve_5.5/lp_params.c **** {
 119:lp_solve_5.5/lp_params.c ****   { setvalue(IMPROVE_NONE) },
 120:lp_solve_5.5/lp_params.c ****   { setvalue(IMPROVE_SOLUTION) },
 121:lp_solve_5.5/lp_params.c ****   { setvalue(IMPROVE_DUALFEAS) },
 122:lp_solve_5.5/lp_params.c ****   { setvalue(IMPROVE_THETAGAP) },
 123:lp_solve_5.5/lp_params.c ****   { setvalue(IMPROVE_BBSIMPLEX) },
 124:lp_solve_5.5/lp_params.c **** };
 125:lp_solve_5.5/lp_params.c **** 
 126:lp_solve_5.5/lp_params.c **** static REAL __WINAPI get_mip_gap_abs(lprec *lp)
 127:lp_solve_5.5/lp_params.c **** {
 213               		.loc 1 127 0
 214               		.cfi_startproc
 215 0000 CF93      		push r28
 216               	.LCFI0:
 217               		.cfi_def_cfa_offset 3
 218               		.cfi_offset 28, -2
 219 0002 DF93      		push r29
 220               	.LCFI1:
 221               		.cfi_def_cfa_offset 4
 222               		.cfi_offset 29, -3
 223 0004 00D0      		rcall .
 224               	.LCFI2:
 225               		.cfi_def_cfa_offset 6
 226 0006 CDB7      		in r28,__SP_L__
 227 0008 DEB7      		in r29,__SP_H__
 228               	.LCFI3:
 229               		.cfi_def_cfa_register 28
 230               	/* prologue: function */
 231               	/* frame size = 2 */
 232               	/* stack size = 4 */
 233               	.L__stack_usage = 4
 234 000a 9A83      		std Y+2,r25
 235 000c 8983      		std Y+1,r24
 128:lp_solve_5.5/lp_params.c ****   return(get_mip_gap(lp, TRUE));
 236               		.loc 1 128 0
 237 000e 8981      		ldd r24,Y+1
 238 0010 9A81      		ldd r25,Y+2
 239 0012 61E0      		ldi r22,lo8(1)
 240 0014 0E94 0000 		call get_mip_gap
 241 0018 DC01      		movw r26,r24
 242 001a CB01      		movw r24,r22
 129:lp_solve_5.5/lp_params.c **** }
 243               		.loc 1 129 0
 244 001c BC01      		movw r22,r24
 245 001e CD01      		movw r24,r26
 246               	/* epilogue start */
 247 0020 0F90      		pop __tmp_reg__
 248 0022 0F90      		pop __tmp_reg__
 249 0024 DF91      		pop r29
 250 0026 CF91      		pop r28
 251 0028 0895      		ret
 252               		.cfi_endproc
 253               	.LFE7:
 256               	get_mip_gap_rel:
 257               	.LFB8:
 130:lp_solve_5.5/lp_params.c **** 
 131:lp_solve_5.5/lp_params.c **** static REAL __WINAPI get_mip_gap_rel(lprec *lp)
 132:lp_solve_5.5/lp_params.c **** {
 258               		.loc 1 132 0
 259               		.cfi_startproc
 260 002a CF93      		push r28
 261               	.LCFI4:
 262               		.cfi_def_cfa_offset 3
 263               		.cfi_offset 28, -2
 264 002c DF93      		push r29
 265               	.LCFI5:
 266               		.cfi_def_cfa_offset 4
 267               		.cfi_offset 29, -3
 268 002e 00D0      		rcall .
 269               	.LCFI6:
 270               		.cfi_def_cfa_offset 6
 271 0030 CDB7      		in r28,__SP_L__
 272 0032 DEB7      		in r29,__SP_H__
 273               	.LCFI7:
 274               		.cfi_def_cfa_register 28
 275               	/* prologue: function */
 276               	/* frame size = 2 */
 277               	/* stack size = 4 */
 278               	.L__stack_usage = 4
 279 0034 9A83      		std Y+2,r25
 280 0036 8983      		std Y+1,r24
 133:lp_solve_5.5/lp_params.c ****   return(get_mip_gap(lp, FALSE));
 281               		.loc 1 133 0
 282 0038 8981      		ldd r24,Y+1
 283 003a 9A81      		ldd r25,Y+2
 284 003c 60E0      		ldi r22,0
 285 003e 0E94 0000 		call get_mip_gap
 286 0042 DC01      		movw r26,r24
 287 0044 CB01      		movw r24,r22
 134:lp_solve_5.5/lp_params.c **** }
 288               		.loc 1 134 0
 289 0046 BC01      		movw r22,r24
 290 0048 CD01      		movw r24,r26
 291               	/* epilogue start */
 292 004a 0F90      		pop __tmp_reg__
 293 004c 0F90      		pop __tmp_reg__
 294 004e DF91      		pop r29
 295 0050 CF91      		pop r28
 296 0052 0895      		ret
 297               		.cfi_endproc
 298               	.LFE8:
 301               	set_mip_gap_abs:
 302               	.LFB9:
 135:lp_solve_5.5/lp_params.c **** 
 136:lp_solve_5.5/lp_params.c **** static void __WINAPI set_mip_gap_abs(lprec *lp, REAL mip_gap)
 137:lp_solve_5.5/lp_params.c **** {
 303               		.loc 1 137 0
 304               		.cfi_startproc
 305 0054 CF93      		push r28
 306               	.LCFI8:
 307               		.cfi_def_cfa_offset 3
 308               		.cfi_offset 28, -2
 309 0056 DF93      		push r29
 310               	.LCFI9:
 311               		.cfi_def_cfa_offset 4
 312               		.cfi_offset 29, -3
 313 0058 00D0      		rcall .
 314 005a 00D0      		rcall .
 315 005c 00D0      		rcall .
 316               	.LCFI10:
 317               		.cfi_def_cfa_offset 10
 318 005e CDB7      		in r28,__SP_L__
 319 0060 DEB7      		in r29,__SP_H__
 320               	.LCFI11:
 321               		.cfi_def_cfa_register 28
 322               	/* prologue: function */
 323               	/* frame size = 6 */
 324               	/* stack size = 8 */
 325               	.L__stack_usage = 8
 326 0062 9A83      		std Y+2,r25
 327 0064 8983      		std Y+1,r24
 328 0066 4B83      		std Y+3,r20
 329 0068 5C83      		std Y+4,r21
 330 006a 6D83      		std Y+5,r22
 331 006c 7E83      		std Y+6,r23
 138:lp_solve_5.5/lp_params.c ****   set_mip_gap(lp, TRUE, mip_gap);
 332               		.loc 1 138 0
 333 006e 8B81      		ldd r24,Y+3
 334 0070 9C81      		ldd r25,Y+4
 335 0072 AD81      		ldd r26,Y+5
 336 0074 BE81      		ldd r27,Y+6
 337 0076 E981      		ldd r30,Y+1
 338 0078 FA81      		ldd r31,Y+2
 339 007a 9C01      		movw r18,r24
 340 007c AD01      		movw r20,r26
 341 007e 61E0      		ldi r22,lo8(1)
 342 0080 CF01      		movw r24,r30
 343 0082 0E94 0000 		call set_mip_gap
 139:lp_solve_5.5/lp_params.c **** }
 344               		.loc 1 139 0
 345 0086 0000      		nop
 346               	/* epilogue start */
 347 0088 2696      		adiw r28,6
 348 008a 0FB6      		in __tmp_reg__,__SREG__
 349 008c F894      		cli
 350 008e DEBF      		out __SP_H__,r29
 351 0090 0FBE      		out __SREG__,__tmp_reg__
 352 0092 CDBF      		out __SP_L__,r28
 353 0094 DF91      		pop r29
 354 0096 CF91      		pop r28
 355 0098 0895      		ret
 356               		.cfi_endproc
 357               	.LFE9:
 360               	set_mip_gap_rel:
 361               	.LFB10:
 140:lp_solve_5.5/lp_params.c **** 
 141:lp_solve_5.5/lp_params.c **** static void __WINAPI set_mip_gap_rel(lprec *lp, REAL mip_gap)
 142:lp_solve_5.5/lp_params.c **** {
 362               		.loc 1 142 0
 363               		.cfi_startproc
 364 009a CF93      		push r28
 365               	.LCFI12:
 366               		.cfi_def_cfa_offset 3
 367               		.cfi_offset 28, -2
 368 009c DF93      		push r29
 369               	.LCFI13:
 370               		.cfi_def_cfa_offset 4
 371               		.cfi_offset 29, -3
 372 009e 00D0      		rcall .
 373 00a0 00D0      		rcall .
 374 00a2 00D0      		rcall .
 375               	.LCFI14:
 376               		.cfi_def_cfa_offset 10
 377 00a4 CDB7      		in r28,__SP_L__
 378 00a6 DEB7      		in r29,__SP_H__
 379               	.LCFI15:
 380               		.cfi_def_cfa_register 28
 381               	/* prologue: function */
 382               	/* frame size = 6 */
 383               	/* stack size = 8 */
 384               	.L__stack_usage = 8
 385 00a8 9A83      		std Y+2,r25
 386 00aa 8983      		std Y+1,r24
 387 00ac 4B83      		std Y+3,r20
 388 00ae 5C83      		std Y+4,r21
 389 00b0 6D83      		std Y+5,r22
 390 00b2 7E83      		std Y+6,r23
 143:lp_solve_5.5/lp_params.c ****   set_mip_gap(lp, FALSE, mip_gap);
 391               		.loc 1 143 0
 392 00b4 8B81      		ldd r24,Y+3
 393 00b6 9C81      		ldd r25,Y+4
 394 00b8 AD81      		ldd r26,Y+5
 395 00ba BE81      		ldd r27,Y+6
 396 00bc E981      		ldd r30,Y+1
 397 00be FA81      		ldd r31,Y+2
 398 00c0 9C01      		movw r18,r24
 399 00c2 AD01      		movw r20,r26
 400 00c4 60E0      		ldi r22,0
 401 00c6 CF01      		movw r24,r30
 402 00c8 0E94 0000 		call set_mip_gap
 144:lp_solve_5.5/lp_params.c **** }
 403               		.loc 1 144 0
 404 00cc 0000      		nop
 405               	/* epilogue start */
 406 00ce 2696      		adiw r28,6
 407 00d0 0FB6      		in __tmp_reg__,__SREG__
 408 00d2 F894      		cli
 409 00d4 DEBF      		out __SP_H__,r29
 410 00d6 0FBE      		out __SREG__,__tmp_reg__
 411 00d8 CDBF      		out __SP_L__,r28
 412 00da DF91      		pop r29
 413 00dc CF91      		pop r28
 414 00de 0895      		ret
 415               		.cfi_endproc
 416               	.LFE10:
 418               		.section	.rodata
 419               	.LC43:
 420 0312 5052 4943 		.string	"PRICER_FIRSTINDEX"
 420      4552 5F46 
 420      4952 5354 
 420      494E 4445 
 420      5800 
 421               	.LC44:
 422 0324 5052 4943 		.string	"PRICER_DANTZIG"
 422      4552 5F44 
 422      414E 545A 
 422      4947 00
 423               	.LC45:
 424 0333 5052 4943 		.string	"PRICER_DEVEX"
 424      4552 5F44 
 424      4556 4558 
 424      00
 425               	.LC46:
 426 0340 5052 4943 		.string	"PRICER_STEEPESTEDGE"
 426      4552 5F53 
 426      5445 4550 
 426      4553 5445 
 426      4447 4500 
 427               	.LC47:
 428 0354 5052 4943 		.string	"PRICE_PRIMALFALLBACK"
 428      455F 5052 
 428      494D 414C 
 428      4641 4C4C 
 428      4241 434B 
 429               	.LC48:
 430 0369 5052 4943 		.string	"PRICE_MULTIPLE"
 430      455F 4D55 
 430      4C54 4950 
 430      4C45 00
 431               	.LC49:
 432 0378 5052 4943 		.string	"PRICE_PARTIAL"
 432      455F 5041 
 432      5254 4941 
 432      4C00 
 433               	.LC50:
 434 0386 5052 4943 		.string	"PRICE_ADAPTIVE"
 434      455F 4144 
 434      4150 5449 
 434      5645 00
 435               	.LC51:
 436 0395 5052 4943 		.string	"PRICE_RANDOMIZE"
 436      455F 5241 
 436      4E44 4F4D 
 436      495A 4500 
 437               	.LC52:
 438 03a5 5052 4943 		.string	"PRICE_AUTOPARTIAL"
 438      455F 4155 
 438      544F 5041 
 438      5254 4941 
 438      4C00 
 439               	.LC53:
 440 03b7 5052 4943 		.string	"PRICE_LOOPLEFT"
 440      455F 4C4F 
 440      4F50 4C45 
 440      4654 00
 441               	.LC54:
 442 03c6 5052 4943 		.string	"PRICE_LOOPALTERNATE"
 442      455F 4C4F 
 442      4F50 414C 
 442      5445 524E 
 442      4154 4500 
 443               	.LC55:
 444 03da 5052 4943 		.string	"PRICE_HARRISTWOPASS"
 444      455F 4841 
 444      5252 4953 
 444      5457 4F50 
 444      4153 5300 
 445               	.LC56:
 446 03ee 5052 4943 		.string	"PRICE_TRUENORMINIT"
 446      455F 5452 
 446      5545 4E4F 
 446      524D 494E 
 446      4954 00
 447               		.section	.data.pivoting,"aw",@progbits
 450               	pivoting:
 451 0000 0000      		.word	0
 452 0002 0000      		.word	.LC43
 453 0004 0100      		.word	1
 454 0006 0000      		.word	.LC44
 455 0008 0200      		.word	2
 456 000a 0000      		.word	.LC45
 457 000c 0300      		.word	3
 458 000e 0000      		.word	.LC46
 459 0010 0400      		.word	4
 460 0012 0000      		.word	.LC47
 461 0014 0800      		.word	8
 462 0016 0000      		.word	.LC48
 463 0018 1000      		.word	16
 464 001a 0000      		.word	.LC49
 465 001c 2000      		.word	32
 466 001e 0000      		.word	.LC50
 467 0020 8000      		.word	128
 468 0022 0000      		.word	.LC51
 469 0024 0001      		.word	256
 470 0026 0000      		.word	.LC52
 471 0028 0004      		.word	1024
 472 002a 0000      		.word	.LC53
 473 002c 0008      		.word	2048
 474 002e 0000      		.word	.LC54
 475 0030 0010      		.word	4096
 476 0032 0000      		.word	.LC55
 477 0034 0040      		.word	16384
 478 0036 0000      		.word	.LC56
 479               		.section	.rodata
 480               	.LC57:
 481 0401 5052 4553 		.string	"PRESOLVE_NONE"
 481      4F4C 5645 
 481      5F4E 4F4E 
 481      4500 
 482               	.LC58:
 483 040f 5052 4553 		.string	"PRESOLVE_ROWS"
 483      4F4C 5645 
 483      5F52 4F57 
 483      5300 
 484               	.LC59:
 485 041d 5052 4553 		.string	"PRESOLVE_COLS"
 485      4F4C 5645 
 485      5F43 4F4C 
 485      5300 
 486               	.LC60:
 487 042b 5052 4553 		.string	"PRESOLVE_LINDEP"
 487      4F4C 5645 
 487      5F4C 494E 
 487      4445 5000 
 488               	.LC61:
 489 043b 5052 4553 		.string	"PRESOLVE_AGGREGATE"
 489      4F4C 5645 
 489      5F41 4747 
 489      5245 4741 
 489      5445 00
 490               	.LC62:
 491 044e 5052 4553 		.string	"PRESOLVE_SPARSER"
 491      4F4C 5645 
 491      5F53 5041 
 491      5253 4552 
 491      00
 492               	.LC63:
 493 045f 5052 4553 		.string	"PRESOLVE_SOS"
 493      4F4C 5645 
 493      5F53 4F53 
 493      00
 494               	.LC64:
 495 046c 5052 4553 		.string	"PRESOLVE_REDUCEMIP"
 495      4F4C 5645 
 495      5F52 4544 
 495      5543 454D 
 495      4950 00
 496               	.LC65:
 497 047f 5052 4553 		.string	"PRESOLVE_KNAPSACK"
 497      4F4C 5645 
 497      5F4B 4E41 
 497      5053 4143 
 497      4B00 
 498               	.LC66:
 499 0491 5052 4553 		.string	"PRESOLVE_ELIMEQ2"
 499      4F4C 5645 
 499      5F45 4C49 
 499      4D45 5132 
 499      00
 500               	.LC67:
 501 04a2 5052 4553 		.string	"PRESOLVE_IMPLIEDFREE"
 501      4F4C 5645 
 501      5F49 4D50 
 501      4C49 4544 
 501      4652 4545 
 502               	.LC68:
 503 04b7 5052 4553 		.string	"PRESOLVE_REDUCEGCD"
 503      4F4C 5645 
 503      5F52 4544 
 503      5543 4547 
 503      4344 00
 504               	.LC69:
 505 04ca 5052 4553 		.string	"PRESOLVE_PROBEFIX"
 505      4F4C 5645 
 505      5F50 524F 
 505      4245 4649 
 505      5800 
 506               	.LC70:
 507 04dc 5052 4553 		.string	"PRESOLVE_PROBEREDUCE"
 507      4F4C 5645 
 507      5F50 524F 
 507      4245 5245 
 507      4455 4345 
 508               	.LC71:
 509 04f1 5052 4553 		.string	"PRESOLVE_ROWDOMINATE"
 509      4F4C 5645 
 509      5F52 4F57 
 509      444F 4D49 
 509      4E41 5445 
 510               	.LC72:
 511 0506 5052 4553 		.string	"PRESOLVE_COLDOMINATE"
 511      4F4C 5645 
 511      5F43 4F4C 
 511      444F 4D49 
 511      4E41 5445 
 512               	.LC73:
 513 051b 5052 4553 		.string	"PRESOLVE_MERGEROWS"
 513      4F4C 5645 
 513      5F4D 4552 
 513      4745 524F 
 513      5753 00
 514               	.LC74:
 515 052e 5052 4553 		.string	"PRESOLVE_IMPLIEDSLK"
 515      4F4C 5645 
 515      5F49 4D50 
 515      4C49 4544 
 515      534C 4B00 
 516               	.LC75:
 517 0542 5052 4553 		.string	"PRESOLVE_COLFIXDUAL"
 517      4F4C 5645 
 517      5F43 4F4C 
 517      4649 5844 
 517      5541 4C00 
 518               	.LC76:
 519 0556 5052 4553 		.string	"PRESOLVE_BOUNDS"
 519      4F4C 5645 
 519      5F42 4F55 
 519      4E44 5300 
 520               	.LC77:
 521 0566 5052 4553 		.string	"PRESOLVE_DUALS"
 521      4F4C 5645 
 521      5F44 5541 
 521      4C53 00
 522               	.LC78:
 523 0575 5052 4553 		.string	"PRESOLVE_SENSDUALS"
 523      4F4C 5645 
 523      5F53 454E 
 523      5344 5541 
 523      4C53 00
 524               		.section	.data.presolving,"aw",@progbits
 527               	presolving:
 528 0000 0000      		.word	0
 529 0002 0000      		.word	.LC57
 530 0004 0100      		.word	1
 531 0006 0000      		.word	.LC58
 532 0008 0200      		.word	2
 533 000a 0000      		.word	.LC59
 534 000c 0400      		.word	4
 535 000e 0000      		.word	.LC60
 536 0010 0800      		.word	8
 537 0012 0000      		.word	.LC61
 538 0014 1000      		.word	16
 539 0016 0000      		.word	.LC62
 540 0018 2000      		.word	32
 541 001a 0000      		.word	.LC63
 542 001c 4000      		.word	64
 543 001e 0000      		.word	.LC64
 544 0020 8000      		.word	128
 545 0022 0000      		.word	.LC65
 546 0024 0001      		.word	256
 547 0026 0000      		.word	.LC66
 548 0028 0002      		.word	512
 549 002a 0000      		.word	.LC67
 550 002c 0004      		.word	1024
 551 002e 0000      		.word	.LC68
 552 0030 0008      		.word	2048
 553 0032 0000      		.word	.LC69
 554 0034 0010      		.word	4096
 555 0036 0000      		.word	.LC70
 556 0038 0020      		.word	8192
 557 003a 0000      		.word	.LC71
 558 003c 0040      		.word	16384
 559 003e 0000      		.word	.LC72
 560 0040 0080      		.word	-32768
 561 0042 0000      		.word	.LC73
 562 0044 0000      		.word	0
 563 0046 0000      		.word	.LC74
 564 0048 0000      		.word	0
 565 004a 0000      		.word	.LC75
 566 004c 0000      		.word	0
 567 004e 0000      		.word	.LC76
 568 0050 0000      		.word	0
 569 0052 0000      		.word	.LC77
 570 0054 0000      		.word	0
 571 0056 0000      		.word	.LC78
 572               		.text
 574               	STRLWR:
 575               	.LFB11:
 145:lp_solve_5.5/lp_params.c **** 
 146:lp_solve_5.5/lp_params.c **** static struct _values pivoting[] =
 147:lp_solve_5.5/lp_params.c **** {
 148:lp_solve_5.5/lp_params.c ****   { setvalue(PRICER_FIRSTINDEX) },
 149:lp_solve_5.5/lp_params.c ****   { setvalue(PRICER_DANTZIG) },
 150:lp_solve_5.5/lp_params.c ****   { setvalue(PRICER_DEVEX) },
 151:lp_solve_5.5/lp_params.c ****   { setvalue(PRICER_STEEPESTEDGE) },
 152:lp_solve_5.5/lp_params.c ****   { setvalue(PRICE_PRIMALFALLBACK) },
 153:lp_solve_5.5/lp_params.c ****   { setvalue(PRICE_MULTIPLE) },
 154:lp_solve_5.5/lp_params.c ****   { setvalue(PRICE_PARTIAL) },
 155:lp_solve_5.5/lp_params.c ****   { setvalue(PRICE_ADAPTIVE) },
 156:lp_solve_5.5/lp_params.c ****   { setvalue(PRICE_RANDOMIZE) },
 157:lp_solve_5.5/lp_params.c ****   { setvalue(PRICE_AUTOPARTIAL) },
 158:lp_solve_5.5/lp_params.c ****   { setvalue(PRICE_LOOPLEFT) },
 159:lp_solve_5.5/lp_params.c ****   { setvalue(PRICE_LOOPALTERNATE) },
 160:lp_solve_5.5/lp_params.c ****   { setvalue(PRICE_HARRISTWOPASS) },
 161:lp_solve_5.5/lp_params.c ****   { setvalue(PRICE_TRUENORMINIT) },
 162:lp_solve_5.5/lp_params.c **** };
 163:lp_solve_5.5/lp_params.c **** 
 164:lp_solve_5.5/lp_params.c **** static struct _values presolving[] =
 165:lp_solve_5.5/lp_params.c **** {
 166:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_NONE) },
 167:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_ROWS) },
 168:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_COLS) },
 169:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_LINDEP) },
 170:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_AGGREGATE) },
 171:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_SPARSER) },
 172:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_SOS) },
 173:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_REDUCEMIP) },
 174:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_KNAPSACK) },
 175:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_ELIMEQ2) },
 176:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_IMPLIEDFREE) },
 177:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_REDUCEGCD) },
 178:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_PROBEFIX) },
 179:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_PROBEREDUCE) },
 180:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_ROWDOMINATE) },
 181:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_COLDOMINATE) },
 182:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_MERGEROWS) },
 183:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_IMPLIEDSLK) },
 184:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_COLFIXDUAL) },
 185:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_BOUNDS) },
 186:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_DUALS) },
 187:lp_solve_5.5/lp_params.c ****   { setvalue(PRESOLVE_SENSDUALS) },
 188:lp_solve_5.5/lp_params.c **** };
 189:lp_solve_5.5/lp_params.c **** 
 190:lp_solve_5.5/lp_params.c **** static char *STRLWR(char *str)
 191:lp_solve_5.5/lp_params.c **** {
 576               		.loc 1 191 0
 577               		.cfi_startproc
 578 00e0 CF93      		push r28
 579               	.LCFI16:
 580               		.cfi_def_cfa_offset 3
 581               		.cfi_offset 28, -2
 582 00e2 DF93      		push r29
 583               	.LCFI17:
 584               		.cfi_def_cfa_offset 4
 585               		.cfi_offset 29, -3
 586 00e4 00D0      		rcall .
 587 00e6 00D0      		rcall .
 588               	.LCFI18:
 589               		.cfi_def_cfa_offset 8
 590 00e8 CDB7      		in r28,__SP_L__
 591 00ea DEB7      		in r29,__SP_H__
 592               	.LCFI19:
 593               		.cfi_def_cfa_register 28
 594               	/* prologue: function */
 595               	/* frame size = 4 */
 596               	/* stack size = 6 */
 597               	.L__stack_usage = 6
 598 00ec 9C83      		std Y+4,r25
 599 00ee 8B83      		std Y+3,r24
 192:lp_solve_5.5/lp_params.c ****   char *ptr;
 193:lp_solve_5.5/lp_params.c **** 
 194:lp_solve_5.5/lp_params.c ****   for(ptr = str; *ptr; ptr++)
 600               		.loc 1 194 0
 601 00f0 8B81      		ldd r24,Y+3
 602 00f2 9C81      		ldd r25,Y+4
 603 00f4 9A83      		std Y+2,r25
 604 00f6 8983      		std Y+1,r24
 605 00f8 00C0      		rjmp .L8
 606               	.L9:
 195:lp_solve_5.5/lp_params.c ****     *ptr = (char) tolower((unsigned char) *ptr);
 607               		.loc 1 195 0 discriminator 3
 608 00fa 8981      		ldd r24,Y+1
 609 00fc 9A81      		ldd r25,Y+2
 610 00fe FC01      		movw r30,r24
 611 0100 8081      		ld r24,Z
 612 0102 882F      		mov r24,r24
 613 0104 90E0      		ldi r25,0
 614 0106 0E94 0000 		call tolower
 615 010a 282F      		mov r18,r24
 616 010c 8981      		ldd r24,Y+1
 617 010e 9A81      		ldd r25,Y+2
 618 0110 FC01      		movw r30,r24
 619 0112 2083      		st Z,r18
 194:lp_solve_5.5/lp_params.c ****     *ptr = (char) tolower((unsigned char) *ptr);
 620               		.loc 1 194 0 discriminator 3
 621 0114 8981      		ldd r24,Y+1
 622 0116 9A81      		ldd r25,Y+2
 623 0118 0196      		adiw r24,1
 624 011a 9A83      		std Y+2,r25
 625 011c 8983      		std Y+1,r24
 626               	.L8:
 194:lp_solve_5.5/lp_params.c ****     *ptr = (char) tolower((unsigned char) *ptr);
 627               		.loc 1 194 0 is_stmt 0 discriminator 1
 628 011e 8981      		ldd r24,Y+1
 629 0120 9A81      		ldd r25,Y+2
 630 0122 FC01      		movw r30,r24
 631 0124 8081      		ld r24,Z
 632 0126 8823      		tst r24
 633 0128 01F4      		brne .L9
 196:lp_solve_5.5/lp_params.c **** 
 197:lp_solve_5.5/lp_params.c ****   return(str);
 634               		.loc 1 197 0 is_stmt 1
 635 012a 8B81      		ldd r24,Y+3
 636 012c 9C81      		ldd r25,Y+4
 637               	/* epilogue start */
 198:lp_solve_5.5/lp_params.c **** }
 638               		.loc 1 198 0
 639 012e 0F90      		pop __tmp_reg__
 640 0130 0F90      		pop __tmp_reg__
 641 0132 0F90      		pop __tmp_reg__
 642 0134 0F90      		pop __tmp_reg__
 643 0136 DF91      		pop r29
 644 0138 CF91      		pop r28
 645 013a 0895      		ret
 646               		.cfi_endproc
 647               	.LFE11:
 650               	STRUPR:
 651               	.LFB12:
 199:lp_solve_5.5/lp_params.c **** 
 200:lp_solve_5.5/lp_params.c **** static char *STRUPR(char *str)
 201:lp_solve_5.5/lp_params.c **** {
 652               		.loc 1 201 0
 653               		.cfi_startproc
 654 013c CF93      		push r28
 655               	.LCFI20:
 656               		.cfi_def_cfa_offset 3
 657               		.cfi_offset 28, -2
 658 013e DF93      		push r29
 659               	.LCFI21:
 660               		.cfi_def_cfa_offset 4
 661               		.cfi_offset 29, -3
 662 0140 00D0      		rcall .
 663 0142 00D0      		rcall .
 664               	.LCFI22:
 665               		.cfi_def_cfa_offset 8
 666 0144 CDB7      		in r28,__SP_L__
 667 0146 DEB7      		in r29,__SP_H__
 668               	.LCFI23:
 669               		.cfi_def_cfa_register 28
 670               	/* prologue: function */
 671               	/* frame size = 4 */
 672               	/* stack size = 6 */
 673               	.L__stack_usage = 6
 674 0148 9C83      		std Y+4,r25
 675 014a 8B83      		std Y+3,r24
 202:lp_solve_5.5/lp_params.c ****   char *ptr;
 203:lp_solve_5.5/lp_params.c **** 
 204:lp_solve_5.5/lp_params.c ****   for(ptr = str; *ptr; ptr++)
 676               		.loc 1 204 0
 677 014c 8B81      		ldd r24,Y+3
 678 014e 9C81      		ldd r25,Y+4
 679 0150 9A83      		std Y+2,r25
 680 0152 8983      		std Y+1,r24
 681 0154 00C0      		rjmp .L12
 682               	.L13:
 205:lp_solve_5.5/lp_params.c ****     *ptr = (char) toupper((unsigned char) *ptr);
 683               		.loc 1 205 0 discriminator 3
 684 0156 8981      		ldd r24,Y+1
 685 0158 9A81      		ldd r25,Y+2
 686 015a FC01      		movw r30,r24
 687 015c 8081      		ld r24,Z
 688 015e 882F      		mov r24,r24
 689 0160 90E0      		ldi r25,0
 690 0162 0E94 0000 		call toupper
 691 0166 282F      		mov r18,r24
 692 0168 8981      		ldd r24,Y+1
 693 016a 9A81      		ldd r25,Y+2
 694 016c FC01      		movw r30,r24
 695 016e 2083      		st Z,r18
 204:lp_solve_5.5/lp_params.c ****     *ptr = (char) toupper((unsigned char) *ptr);
 696               		.loc 1 204 0 discriminator 3
 697 0170 8981      		ldd r24,Y+1
 698 0172 9A81      		ldd r25,Y+2
 699 0174 0196      		adiw r24,1
 700 0176 9A83      		std Y+2,r25
 701 0178 8983      		std Y+1,r24
 702               	.L12:
 204:lp_solve_5.5/lp_params.c ****     *ptr = (char) toupper((unsigned char) *ptr);
 703               		.loc 1 204 0 is_stmt 0 discriminator 1
 704 017a 8981      		ldd r24,Y+1
 705 017c 9A81      		ldd r25,Y+2
 706 017e FC01      		movw r30,r24
 707 0180 8081      		ld r24,Z
 708 0182 8823      		tst r24
 709 0184 01F4      		brne .L13
 206:lp_solve_5.5/lp_params.c **** 
 207:lp_solve_5.5/lp_params.c ****   return(str);
 710               		.loc 1 207 0 is_stmt 1
 711 0186 8B81      		ldd r24,Y+3
 712 0188 9C81      		ldd r25,Y+4
 713               	/* epilogue start */
 208:lp_solve_5.5/lp_params.c **** }
 714               		.loc 1 208 0
 715 018a 0F90      		pop __tmp_reg__
 716 018c 0F90      		pop __tmp_reg__
 717 018e 0F90      		pop __tmp_reg__
 718 0190 0F90      		pop __tmp_reg__
 719 0192 DF91      		pop r29
 720 0194 CF91      		pop r28
 721 0196 0895      		ret
 722               		.cfi_endproc
 723               	.LFE12:
 726               	set_presolve1:
 727               	.LFB13:
 209:lp_solve_5.5/lp_params.c **** 
 210:lp_solve_5.5/lp_params.c **** static void __WINAPI set_presolve1(lprec *lp, int do_presolve)
 211:lp_solve_5.5/lp_params.c **** {
 728               		.loc 1 211 0
 729               		.cfi_startproc
 730 0198 CF93      		push r28
 731               	.LCFI24:
 732               		.cfi_def_cfa_offset 3
 733               		.cfi_offset 28, -2
 734 019a DF93      		push r29
 735               	.LCFI25:
 736               		.cfi_def_cfa_offset 4
 737               		.cfi_offset 29, -3
 738 019c 00D0      		rcall .
 739 019e 00D0      		rcall .
 740               	.LCFI26:
 741               		.cfi_def_cfa_offset 8
 742 01a0 CDB7      		in r28,__SP_L__
 743 01a2 DEB7      		in r29,__SP_H__
 744               	.LCFI27:
 745               		.cfi_def_cfa_register 28
 746               	/* prologue: function */
 747               	/* frame size = 4 */
 748               	/* stack size = 6 */
 749               	.L__stack_usage = 6
 750 01a4 9A83      		std Y+2,r25
 751 01a6 8983      		std Y+1,r24
 752 01a8 7C83      		std Y+4,r23
 753 01aa 6B83      		std Y+3,r22
 212:lp_solve_5.5/lp_params.c ****   set_presolve(lp, do_presolve, get_presolveloops(lp));
 754               		.loc 1 212 0
 755 01ac 8981      		ldd r24,Y+1
 756 01ae 9A81      		ldd r25,Y+2
 757 01b0 0E94 0000 		call get_presolveloops
 758 01b4 AC01      		movw r20,r24
 759 01b6 2B81      		ldd r18,Y+3
 760 01b8 3C81      		ldd r19,Y+4
 761 01ba 8981      		ldd r24,Y+1
 762 01bc 9A81      		ldd r25,Y+2
 763 01be B901      		movw r22,r18
 764 01c0 0E94 0000 		call set_presolve
 213:lp_solve_5.5/lp_params.c **** }
 765               		.loc 1 213 0
 766 01c4 0000      		nop
 767               	/* epilogue start */
 768 01c6 0F90      		pop __tmp_reg__
 769 01c8 0F90      		pop __tmp_reg__
 770 01ca 0F90      		pop __tmp_reg__
 771 01cc 0F90      		pop __tmp_reg__
 772 01ce DF91      		pop r29
 773 01d0 CF91      		pop r28
 774 01d2 0895      		ret
 775               		.cfi_endproc
 776               	.LFE13:
 779               	set_presolve2:
 780               	.LFB14:
 214:lp_solve_5.5/lp_params.c **** 
 215:lp_solve_5.5/lp_params.c **** static void __WINAPI set_presolve2(lprec *lp, int maxloops)
 216:lp_solve_5.5/lp_params.c **** {
 781               		.loc 1 216 0
 782               		.cfi_startproc
 783 01d4 CF93      		push r28
 784               	.LCFI28:
 785               		.cfi_def_cfa_offset 3
 786               		.cfi_offset 28, -2
 787 01d6 DF93      		push r29
 788               	.LCFI29:
 789               		.cfi_def_cfa_offset 4
 790               		.cfi_offset 29, -3
 791 01d8 00D0      		rcall .
 792 01da 00D0      		rcall .
 793               	.LCFI30:
 794               		.cfi_def_cfa_offset 8
 795 01dc CDB7      		in r28,__SP_L__
 796 01de DEB7      		in r29,__SP_H__
 797               	.LCFI31:
 798               		.cfi_def_cfa_register 28
 799               	/* prologue: function */
 800               	/* frame size = 4 */
 801               	/* stack size = 6 */
 802               	.L__stack_usage = 6
 803 01e0 9A83      		std Y+2,r25
 804 01e2 8983      		std Y+1,r24
 805 01e4 7C83      		std Y+4,r23
 806 01e6 6B83      		std Y+3,r22
 217:lp_solve_5.5/lp_params.c ****   set_presolve(lp, get_presolve(lp), maxloops);
 807               		.loc 1 217 0
 808 01e8 8981      		ldd r24,Y+1
 809 01ea 9A81      		ldd r25,Y+2
 810 01ec 0E94 0000 		call get_presolve
 811 01f0 BC01      		movw r22,r24
 812 01f2 2B81      		ldd r18,Y+3
 813 01f4 3C81      		ldd r19,Y+4
 814 01f6 8981      		ldd r24,Y+1
 815 01f8 9A81      		ldd r25,Y+2
 816 01fa A901      		movw r20,r18
 817 01fc 0E94 0000 		call set_presolve
 218:lp_solve_5.5/lp_params.c **** }
 818               		.loc 1 218 0
 819 0200 0000      		nop
 820               	/* epilogue start */
 821 0202 0F90      		pop __tmp_reg__
 822 0204 0F90      		pop __tmp_reg__
 823 0206 0F90      		pop __tmp_reg__
 824 0208 0F90      		pop __tmp_reg__
 825 020a DF91      		pop r29
 826 020c CF91      		pop r28
 827 020e 0895      		ret
 828               		.cfi_endproc
 829               	.LFE14:
 831               		.section	.rodata
 832               	.LC79:
 833 0588 3000      		.string	"0"
 834               	.LC80:
 835 058a 3100      		.string	"1"
 836               	.LC81:
 837 058c 4155 544F 		.string	"AUTOMATIC"
 837      4D41 5449 
 837      4300 
 838               		.section	.data.print_sol,"aw",@progbits
 841               	print_sol:
 842 0000 0000      		.word	0
 843 0002 0000      		.word	.LC79
 844 0004 0100      		.word	1
 845 0006 0000      		.word	.LC80
 846 0008 0200      		.word	2
 847 000a 0000      		.word	.LC81
 848               		.section	.rodata
 849               	.LC82:
 850 0596 5343 414C 		.string	"SCALE_NONE"
 850      455F 4E4F 
 850      4E45 00
 851               	.LC83:
 852 05a1 5343 414C 		.string	"SCALE_EXTREME"
 852      455F 4558 
 852      5452 454D 
 852      4500 
 853               	.LC84:
 854 05af 5343 414C 		.string	"SCALE_RANGE"
 854      455F 5241 
 854      4E47 4500 
 855               	.LC85:
 856 05bb 5343 414C 		.string	"SCALE_MEAN"
 856      455F 4D45 
 856      414E 00
 857               	.LC86:
 858 05c6 5343 414C 		.string	"SCALE_GEOMETRIC"
 858      455F 4745 
 858      4F4D 4554 
 858      5249 4300 
 859               	.LC87:
 860 05d6 5343 414C 		.string	"SCALE_CURTISREID"
 860      455F 4355 
 860      5254 4953 
 860      5245 4944 
 860      00
 861               	.LC88:
 862 05e7 5343 414C 		.string	"SCALE_QUADRATIC"
 862      455F 5155 
 862      4144 5241 
 862      5449 4300 
 863               	.LC89:
 864 05f7 5343 414C 		.string	"SCALE_LOGARITHMIC"
 864      455F 4C4F 
 864      4741 5249 
 864      5448 4D49 
 864      4300 
 865               	.LC90:
 866 0609 5343 414C 		.string	"SCALE_USERWEIGHT"
 866      455F 5553 
 866      4552 5745 
 866      4947 4854 
 866      00
 867               	.LC91:
 868 061a 5343 414C 		.string	"SCALE_POWER2"
 868      455F 504F 
 868      5745 5232 
 868      00
 869               	.LC92:
 870 0627 5343 414C 		.string	"SCALE_EQUILIBRATE"
 870      455F 4551 
 870      5549 4C49 
 870      4252 4154 
 870      4500 
 871               	.LC93:
 872 0639 5343 414C 		.string	"SCALE_INTEGERS"
 872      455F 494E 
 872      5445 4745 
 872      5253 00
 873               	.LC94:
 874 0648 5343 414C 		.string	"SCALE_DYNUPDATE"
 874      455F 4459 
 874      4E55 5044 
 874      4154 4500 
 875               	.LC95:
 876 0658 5343 414C 		.string	"SCALE_ROWSONLY"
 876      455F 524F 
 876      5753 4F4E 
 876      4C59 00
 877               	.LC96:
 878 0667 5343 414C 		.string	"SCALE_COLSONLY"
 878      455F 434F 
 878      4C53 4F4E 
 878      4C59 00
 879               		.section	.data.scaling,"aw",@progbits
 882               	scaling:
 883 0000 0000      		.word	0
 884 0002 0000      		.word	.LC82
 885 0004 0100      		.word	1
 886 0006 0000      		.word	.LC83
 887 0008 0200      		.word	2
 888 000a 0000      		.word	.LC84
 889 000c 0300      		.word	3
 890 000e 0000      		.word	.LC85
 891 0010 0400      		.word	4
 892 0012 0000      		.word	.LC86
 893 0014 0700      		.word	7
 894 0016 0000      		.word	.LC87
 895 0018 0800      		.word	8
 896 001a 0000      		.word	.LC88
 897 001c 1000      		.word	16
 898 001e 0000      		.word	.LC89
 899 0020 1F00      		.word	31
 900 0022 0000      		.word	.LC90
 901 0024 2000      		.word	32
 902 0026 0000      		.word	.LC91
 903 0028 4000      		.word	64
 904 002a 0000      		.word	.LC92
 905 002c 8000      		.word	128
 906 002e 0000      		.word	.LC93
 907 0030 0001      		.word	256
 908 0032 0000      		.word	.LC94
 909 0034 0002      		.word	512
 910 0036 0000      		.word	.LC95
 911 0038 0004      		.word	1024
 912 003a 0000      		.word	.LC96
 913               		.section	.rodata
 914               	.LC97:
 915 0676 5349 4D50 		.string	"SIMPLEX_PRIMAL_PRIMAL"
 915      4C45 585F 
 915      5052 494D 
 915      414C 5F50 
 915      5249 4D41 
 916               	.LC98:
 917 068c 5349 4D50 		.string	"SIMPLEX_DUAL_PRIMAL"
 917      4C45 585F 
 917      4455 414C 
 917      5F50 5249 
 917      4D41 4C00 
 918               	.LC99:
 919 06a0 5349 4D50 		.string	"SIMPLEX_PRIMAL_DUAL"
 919      4C45 585F 
 919      5052 494D 
 919      414C 5F44 
 919      5541 4C00 
 920               	.LC100:
 921 06b4 5349 4D50 		.string	"SIMPLEX_DUAL_DUAL"
 921      4C45 585F 
 921      4455 414C 
 921      5F44 5541 
 921      4C00 
 922               		.section	.data.simplextype,"aw",@progbits
 925               	simplextype:
 926 0000 0500      		.word	5
 927 0002 0000      		.word	.LC97
 928 0004 0600      		.word	6
 929 0006 0000      		.word	.LC98
 930 0008 0900      		.word	9
 931 000a 0000      		.word	.LC99
 932 000c 0A00      		.word	10
 933 000e 0000      		.word	.LC100
 934               		.section	.rodata
 935               	.LC101:
 936 06c6 4E45 5554 		.string	"NEUTRAL"
 936      5241 4C00 
 937               	.LC102:
 938 06ce 4352 4954 		.string	"CRITICAL"
 938      4943 414C 
 938      00
 939               	.LC103:
 940 06d7 5345 5645 		.string	"SEVERE"
 940      5245 00
 941               	.LC104:
 942 06de 494D 504F 		.string	"IMPORTANT"
 942      5254 414E 
 942      5400 
 943               	.LC105:
 944 06e8 4E4F 524D 		.string	"NORMAL"
 944      414C 00
 945               	.LC106:
 946 06ef 4445 5441 		.string	"DETAILED"
 946      494C 4544 
 946      00
 947               	.LC107:
 948 06f8 4655 4C4C 		.string	"FULL"
 948      00
 949               		.section	.data.verbose,"aw",@progbits
 952               	verbose:
 953 0000 0000      		.word	0
 954 0002 0000      		.word	.LC101
 955 0004 0100      		.word	1
 956 0006 0000      		.word	.LC102
 957 0008 0200      		.word	2
 958 000a 0000      		.word	.LC103
 959 000c 0300      		.word	3
 960 000e 0000      		.word	.LC104
 961 0010 0400      		.word	4
 962 0012 0000      		.word	.LC105
 963 0014 0500      		.word	5
 964 0016 0000      		.word	.LC106
 965 0018 0600      		.word	6
 966 001a 0000      		.word	.LC107
 967               		.section	.rodata
 968               	.LC108:
 969 06fd 414E 5449 		.string	"ANTI_DEGEN"
 969      5F44 4547 
 969      454E 00
 970               	.LC109:
 971 0708 4241 5349 		.string	"BASISCRASH"
 971      5343 5241 
 971      5348 00
 972               	.LC110:
 973 0713 494D 5052 		.string	"IMPROVE"
 973      4F56 4500 
 974               	.LC111:
 975 071b 4D41 5850 		.string	"MAXPIVOT"
 975      4956 4F54 
 975      00
 976               	.LC112:
 977 0724 4E45 4752 		.string	"NEGRANGE"
 977      414E 4745 
 977      00
 978               	.LC113:
 979 072d 5049 564F 		.string	"PIVOTING"
 979      5449 4E47 
 979      00
 980               	.LC114:
 981 0736 5052 4553 		.string	"PRESOLVE"
 981      4F4C 5645 
 981      00
 982               	.LC115:
 983 073f 5052 4553 		.string	"PRESOLVELOOPS"
 983      4F4C 5645 
 983      4C4F 4F50 
 983      5300 
 984               	.LC116:
 985 074d 5343 414C 		.string	"SCALELIMIT"
 985      454C 494D 
 985      4954 00
 986               	.LC117:
 987 0758 5343 414C 		.string	"SCALING"
 987      494E 4700 
 988               	.LC118:
 989 0760 5349 4D50 		.string	"SIMPLEXTYPE"
 989      4C45 5854 
 989      5950 4500 
 990               	.LC119:
 991 076c 4F42 4A5F 		.string	"OBJ_IN_BASIS"
 991      494E 5F42 
 991      4153 4953 
 991      00
 992               	.LC120:
 993 0779 4242 5F44 		.string	"BB_DEPTHLIMIT"
 993      4550 5448 
 993      4C49 4D49 
 993      5400 
 994               	.LC121:
 995 0787 4242 5F46 		.string	"BB_FLOORFIRST"
 995      4C4F 4F52 
 995      4649 5253 
 995      5400 
 996               	.LC122:
 997 0795 4242 5F52 		.string	"BB_RULE"
 997      554C 4500 
 998               	.LC123:
 999 079d 4252 4541 		.string	"BREAK_AT_FIRST"
 999      4B5F 4154 
 999      5F46 4952 
 999      5354 00
 1000               	.LC124:
 1001 07ac 4252 4541 		.string	"BREAK_AT_VALUE"
 1001      4B5F 4154 
 1001      5F56 414C 
 1001      5545 00
 1002               	.LC125:
 1003 07bb 4D49 505F 		.string	"MIP_GAP_ABS"
 1003      4741 505F 
 1003      4142 5300 
 1004               	.LC126:
 1005 07c7 4D49 505F 		.string	"MIP_GAP_REL"
 1005      4741 505F 
 1005      5245 4C00 
 1006               	.LC127:
 1007 07d3 4550 5349 		.string	"EPSINT"
 1007      4E54 00
 1008               	.LC128:
 1009 07da 4550 5342 		.string	"EPSB"
 1009      00
 1010               	.LC129:
 1011 07df 4550 5344 		.string	"EPSD"
 1011      00
 1012               	.LC130:
 1013 07e4 4550 5345 		.string	"EPSEL"
 1013      4C00 
 1014               	.LC131:
 1015 07ea 4550 5350 		.string	"EPSPERTURB"
 1015      4552 5455 
 1015      5242 00
 1016               	.LC132:
 1017 07f5 4550 5350 		.string	"EPSPIVOT"
 1017      4956 4F54 
 1017      00
 1018               	.LC133:
 1019 07fe 494E 4649 		.string	"INFINITE"
 1019      4E49 5445 
 1019      00
 1020               	.LC134:
 1021 0807 4252 4541 		.string	"BREAK_NUMERIC_ACCURACY"
 1021      4B5F 4E55 
 1021      4D45 5249 
 1021      435F 4143 
 1021      4355 5241 
 1022               	.LC135:
 1023 081e 4445 4255 		.string	"DEBUG"
 1023      4700 
 1024               	.LC136:
 1025 0824 4F42 4A5F 		.string	"OBJ_BOUND"
 1025      424F 554E 
 1025      4400 
 1026               	.LC137:
 1027 082e 5052 494E 		.string	"PRINT_SOL"
 1027      545F 534F 
 1027      4C00 
 1028               	.LC138:
 1029 0838 5449 4D45 		.string	"TIMEOUT"
 1029      4F55 5400 
 1030               	.LC139:
 1031 0840 5452 4143 		.string	"TRACE"
 1031      4500 
 1032               	.LC140:
 1033 0846 5645 5242 		.string	"VERBOSE"
 1033      4F53 4500 
 1034               		.section	.data.functions,"aw",@progbits
 1037               	functions:
 1038 0000 0000      		.word	.LC108
 1039 0002 0000      		.word	gs(get_anti_degen)
 1040 0004 0000      		.word	gs(set_anti_degen)
 1041 0006 0100      		.word	1
 1042 0008 0000      		.word	anti_degen
 1043 000a 0B00      		.word	11
 1044 000c FFFF      		.word	-1
 1045 000e 0100      		.word	1
 1046 0010 0000      		.word	.LC109
 1047 0012 0000      		.word	gs(get_basiscrash)
 1048 0014 0000      		.word	gs(set_basiscrash)
 1049 0016 0100      		.word	1
 1050 0018 0000      		.word	basiscrash
 1051 001a 0300      		.word	3
 1052 001c FFFF      		.word	-1
 1053 001e 0100      		.word	1
 1054 0020 0000      		.word	.LC110
 1055 0022 0000      		.word	gs(get_improve)
 1056 0024 0000      		.word	gs(set_improve)
 1057 0026 0100      		.word	1
 1058 0028 0000      		.word	improve
 1059 002a 0500      		.word	5
 1060 002c FFFF      		.word	-1
 1061 002e 0100      		.word	1
 1062 0030 0000      		.word	.LC111
 1063 0032 0000      		.word	gs(get_maxpivot)
 1064 0034 0000      		.word	gs(set_maxpivot)
 1065 0036 0100      		.word	1
 1066 0038 0000      		.word	0
 1067 003a 0000      		.word	0
 1068 003c 0000      		.word	0
 1069 003e 0100      		.word	1
 1070 0040 0000      		.word	.LC112
 1071 0042 0000      		.word	gs(get_negrange)
 1072 0044 0000      		.word	gs(set_negrange)
 1073 0046 0400      		.word	4
 1074 0048 0000      		.word	0
 1075 004a 0000      		.word	0
 1076 004c 0000      		.word	0
 1077 004e 0100      		.word	1
 1078 0050 0000      		.word	.LC113
 1079 0052 0000      		.word	gs(get_pivoting)
 1080 0054 0000      		.word	gs(set_pivoting)
 1081 0056 0100      		.word	1
 1082 0058 0000      		.word	pivoting
 1083 005a 0E00      		.word	14
 1084 005c 0300      		.word	3
 1085 005e 0100      		.word	1
 1086 0060 0000      		.word	.LC114
 1087 0062 0000      		.word	gs(get_presolve)
 1088 0064 0000      		.word	gs(set_presolve1)
 1089 0066 0100      		.word	1
 1090 0068 0000      		.word	presolving
 1091 006a 1600      		.word	22
 1092 006c FFFF      		.word	-1
 1093 006e 0100      		.word	1
 1094 0070 0000      		.word	.LC115
 1095 0072 0000      		.word	gs(get_presolveloops)
 1096 0074 0000      		.word	gs(set_presolve2)
 1097 0076 0100      		.word	1
 1098 0078 0000      		.word	0
 1099 007a 0000      		.word	0
 1100 007c 0000      		.word	0
 1101 007e 0100      		.word	1
 1102 0080 0000      		.word	.LC116
 1103 0082 0000      		.word	gs(get_scalelimit)
 1104 0084 0000      		.word	gs(set_scalelimit)
 1105 0086 0400      		.word	4
 1106 0088 0000      		.word	0
 1107 008a 0000      		.word	0
 1108 008c 0000      		.word	0
 1109 008e 0100      		.word	1
 1110 0090 0000      		.word	.LC117
 1111 0092 0000      		.word	gs(get_scaling)
 1112 0094 0000      		.word	gs(set_scaling)
 1113 0096 0100      		.word	1
 1114 0098 0000      		.word	scaling
 1115 009a 0F00      		.word	15
 1116 009c 0700      		.word	7
 1117 009e 0100      		.word	1
 1118 00a0 0000      		.word	.LC118
 1119 00a2 0000      		.word	gs(get_simplextype)
 1120 00a4 0000      		.word	gs(set_simplextype)
 1121 00a6 0100      		.word	1
 1122 00a8 0000      		.word	simplextype
 1123 00aa 0400      		.word	4
 1124 00ac FFFF      		.word	-1
 1125 00ae 0100      		.word	1
 1126 00b0 0000      		.word	.LC119
 1127 00b2 0000      		.word	gs(is_obj_in_basis)
 1128 00b4 0000      		.word	gs(set_obj_in_basis)
 1129 00b6 0300      		.word	3
 1130 00b8 0000      		.word	0
 1131 00ba 0000      		.word	0
 1132 00bc 0000      		.word	0
 1133 00be 0000      		.word	0
 1134 00c0 0000      		.word	.LC120
 1135 00c2 0000      		.word	gs(get_bb_depthlimit)
 1136 00c4 0000      		.word	gs(set_bb_depthlimit)
 1137 00c6 0100      		.word	1
 1138 00c8 0000      		.word	0
 1139 00ca 0000      		.word	0
 1140 00cc 0000      		.word	0
 1141 00ce 0100      		.word	1
 1142 00d0 0000      		.word	.LC121
 1143 00d2 0000      		.word	gs(get_bb_floorfirst)
 1144 00d4 0000      		.word	gs(set_bb_floorfirst)
 1145 00d6 0100      		.word	1
 1146 00d8 0000      		.word	bb_floorfirst
 1147 00da 0300      		.word	3
 1148 00dc FFFF      		.word	-1
 1149 00de 0100      		.word	1
 1150 00e0 0000      		.word	.LC122
 1151 00e2 0000      		.word	gs(get_bb_rule)
 1152 00e4 0000      		.word	gs(set_bb_rule)
 1153 00e6 0100      		.word	1
 1154 00e8 0000      		.word	bb_rule
 1155 00ea 1500      		.word	21
 1156 00ec 0700      		.word	7
 1157 00ee 0100      		.word	1
 1158 00f0 0000      		.word	.LC123
 1159 00f2 0000      		.word	gs(is_break_at_first)
 1160 00f4 0000      		.word	gs(set_break_at_first)
 1161 00f6 0300      		.word	3
 1162 00f8 0000      		.word	0
 1163 00fa 0000      		.word	0
 1164 00fc 0000      		.word	0
 1165 00fe 0000      		.word	0
 1166 0100 0000      		.word	.LC124
 1167 0102 0000      		.word	gs(get_break_at_value)
 1168 0104 0000      		.word	gs(set_break_at_value)
 1169 0106 0400      		.word	4
 1170 0108 0000      		.word	0
 1171 010a 0000      		.word	0
 1172 010c 0000      		.word	0
 1173 010e 0000      		.word	0
 1174 0110 0000      		.word	.LC125
 1175 0112 0000      		.word	gs(get_mip_gap_abs)
 1176 0114 0000      		.word	gs(set_mip_gap_abs)
 1177 0116 0400      		.word	4
 1178 0118 0000      		.word	0
 1179 011a 0000      		.word	0
 1180 011c 0000      		.word	0
 1181 011e 0100      		.word	1
 1182 0120 0000      		.word	.LC126
 1183 0122 0000      		.word	gs(get_mip_gap_rel)
 1184 0124 0000      		.word	gs(set_mip_gap_rel)
 1185 0126 0400      		.word	4
 1186 0128 0000      		.word	0
 1187 012a 0000      		.word	0
 1188 012c 0000      		.word	0
 1189 012e 0100      		.word	1
 1190 0130 0000      		.word	.LC127
 1191 0132 0000      		.word	gs(get_epsint)
 1192 0134 0000      		.word	gs(set_epsint)
 1193 0136 0400      		.word	4
 1194 0138 0000      		.word	0
 1195 013a 0000      		.word	0
 1196 013c 0000      		.word	0
 1197 013e 0100      		.word	1
 1198 0140 0000      		.word	.LC128
 1199 0142 0000      		.word	gs(get_epsb)
 1200 0144 0000      		.word	gs(set_epsb)
 1201 0146 0400      		.word	4
 1202 0148 0000      		.word	0
 1203 014a 0000      		.word	0
 1204 014c 0000      		.word	0
 1205 014e 0100      		.word	1
 1206 0150 0000      		.word	.LC129
 1207 0152 0000      		.word	gs(get_epsd)
 1208 0154 0000      		.word	gs(set_epsd)
 1209 0156 0400      		.word	4
 1210 0158 0000      		.word	0
 1211 015a 0000      		.word	0
 1212 015c 0000      		.word	0
 1213 015e 0100      		.word	1
 1214 0160 0000      		.word	.LC130
 1215 0162 0000      		.word	gs(get_epsel)
 1216 0164 0000      		.word	gs(set_epsel)
 1217 0166 0400      		.word	4
 1218 0168 0000      		.word	0
 1219 016a 0000      		.word	0
 1220 016c 0000      		.word	0
 1221 016e 0100      		.word	1
 1222 0170 0000      		.word	.LC131
 1223 0172 0000      		.word	gs(get_epsperturb)
 1224 0174 0000      		.word	gs(set_epsperturb)
 1225 0176 0400      		.word	4
 1226 0178 0000      		.word	0
 1227 017a 0000      		.word	0
 1228 017c 0000      		.word	0
 1229 017e 0100      		.word	1
 1230 0180 0000      		.word	.LC132
 1231 0182 0000      		.word	gs(get_epspivot)
 1232 0184 0000      		.word	gs(set_epspivot)
 1233 0186 0400      		.word	4
 1234 0188 0000      		.word	0
 1235 018a 0000      		.word	0
 1236 018c 0000      		.word	0
 1237 018e 0100      		.word	1
 1238 0190 0000      		.word	.LC133
 1239 0192 0000      		.word	gs(get_infinite)
 1240 0194 0000      		.word	gs(set_infinite)
 1241 0196 0400      		.word	4
 1242 0198 0000      		.word	0
 1243 019a 0000      		.word	0
 1244 019c 0000      		.word	0
 1245 019e 0100      		.word	1
 1246 01a0 0000      		.word	.LC134
 1247 01a2 0000      		.word	gs(get_break_numeric_accuracy)
 1248 01a4 0000      		.word	gs(set_break_numeric_accuracy)
 1249 01a6 0400      		.word	4
 1250 01a8 0000      		.word	0
 1251 01aa 0000      		.word	0
 1252 01ac 0000      		.word	0
 1253 01ae 0100      		.word	1
 1254 01b0 0000      		.word	.LC135
 1255 01b2 0000      		.word	gs(is_debug)
 1256 01b4 0000      		.word	gs(set_debug)
 1257 01b6 0300      		.word	3
 1258 01b8 0000      		.word	0
 1259 01ba 0000      		.word	0
 1260 01bc 0000      		.word	0
 1261 01be 0000      		.word	0
 1262 01c0 0000      		.word	.LC136
 1263 01c2 0000      		.word	gs(get_obj_bound)
 1264 01c4 0000      		.word	gs(set_obj_bound)
 1265 01c6 0400      		.word	4
 1266 01c8 0000      		.word	0
 1267 01ca 0000      		.word	0
 1268 01cc 0000      		.word	0
 1269 01ce 0000      		.word	0
 1270 01d0 0000      		.word	.LC137
 1271 01d2 0000      		.word	gs(get_print_sol)
 1272 01d4 0000      		.word	gs(set_print_sol)
 1273 01d6 0100      		.word	1
 1274 01d8 0000      		.word	print_sol
 1275 01da 0300      		.word	3
 1276 01dc FFFF      		.word	-1
 1277 01de 0000      		.word	0
 1278 01e0 0000      		.word	.LC138
 1279 01e2 0000      		.word	gs(get_timeout)
 1280 01e4 0000      		.word	gs(set_timeout)
 1281 01e6 0200      		.word	2
 1282 01e8 0000      		.word	0
 1283 01ea 0000      		.word	0
 1284 01ec 0000      		.word	0
 1285 01ee 0000      		.word	0
 1286 01f0 0000      		.word	.LC139
 1287 01f2 0000      		.word	gs(is_trace)
 1288 01f4 0000      		.word	gs(set_trace)
 1289 01f6 0300      		.word	3
 1290 01f8 0000      		.word	0
 1291 01fa 0000      		.word	0
 1292 01fc 0000      		.word	0
 1293 01fe 0000      		.word	0
 1294 0200 0000      		.word	.LC140
 1295 0202 0000      		.word	gs(get_verbose)
 1296 0204 0000      		.word	gs(set_verbose)
 1297 0206 0100      		.word	1
 1298 0208 0000      		.word	verbose
 1299 020a 0700      		.word	7
 1300 020c FFFF      		.word	-1
 1301 020e 0000      		.word	0
 1302               		.section	.rodata
 1303               	.LC141:
 1304 084e 6C70 5F73 		.string	"lp_solve version %d.%d settings\n"
 1304      6F6C 7665 
 1304      2076 6572 
 1304      7369 6F6E 
 1304      2025 642E 
 1305               	.LC142:
 1306 086f 2564 00   		.string	"%d"
 1307               	.LC143:
 1308 0872 2567 00   		.string	"%g"
 1309               		.text
 1311               	write_params1:
 1312               	.LFB15:
 219:lp_solve_5.5/lp_params.c **** 
 220:lp_solve_5.5/lp_params.c **** static struct _values print_sol[] =
 221:lp_solve_5.5/lp_params.c **** {
 222:lp_solve_5.5/lp_params.c ****   { FALSE, "0" },
 223:lp_solve_5.5/lp_params.c ****   { TRUE,  "1" },
 224:lp_solve_5.5/lp_params.c ****   { setvalue(AUTOMATIC) },
 225:lp_solve_5.5/lp_params.c **** };
 226:lp_solve_5.5/lp_params.c **** 
 227:lp_solve_5.5/lp_params.c **** static struct _values scaling[] =
 228:lp_solve_5.5/lp_params.c **** {
 229:lp_solve_5.5/lp_params.c ****   { setvalue(SCALE_NONE) },
 230:lp_solve_5.5/lp_params.c ****   { setvalue(SCALE_EXTREME) },
 231:lp_solve_5.5/lp_params.c ****   { setvalue(SCALE_RANGE) },
 232:lp_solve_5.5/lp_params.c ****   { setvalue(SCALE_MEAN) },
 233:lp_solve_5.5/lp_params.c ****   { setvalue(SCALE_GEOMETRIC) },
 234:lp_solve_5.5/lp_params.c ****   { setvalue(SCALE_CURTISREID) },
 235:lp_solve_5.5/lp_params.c ****   { setvalue(SCALE_QUADRATIC) },
 236:lp_solve_5.5/lp_params.c ****   { setvalue(SCALE_LOGARITHMIC) },
 237:lp_solve_5.5/lp_params.c ****   { setvalue(SCALE_USERWEIGHT) },
 238:lp_solve_5.5/lp_params.c ****   { setvalue(SCALE_POWER2) },
 239:lp_solve_5.5/lp_params.c ****   { setvalue(SCALE_EQUILIBRATE) },
 240:lp_solve_5.5/lp_params.c ****   { setvalue(SCALE_INTEGERS) },
 241:lp_solve_5.5/lp_params.c ****   { setvalue(SCALE_DYNUPDATE) },
 242:lp_solve_5.5/lp_params.c ****   { setvalue(SCALE_ROWSONLY) },
 243:lp_solve_5.5/lp_params.c ****   { setvalue(SCALE_COLSONLY) },
 244:lp_solve_5.5/lp_params.c **** };
 245:lp_solve_5.5/lp_params.c **** 
 246:lp_solve_5.5/lp_params.c **** static struct _values simplextype[] =
 247:lp_solve_5.5/lp_params.c **** {
 248:lp_solve_5.5/lp_params.c ****   { setvalue(SIMPLEX_PRIMAL_PRIMAL) },
 249:lp_solve_5.5/lp_params.c ****   { setvalue(SIMPLEX_DUAL_PRIMAL) },
 250:lp_solve_5.5/lp_params.c ****   { setvalue(SIMPLEX_PRIMAL_DUAL) },
 251:lp_solve_5.5/lp_params.c ****   { setvalue(SIMPLEX_DUAL_DUAL) },
 252:lp_solve_5.5/lp_params.c **** };
 253:lp_solve_5.5/lp_params.c **** 
 254:lp_solve_5.5/lp_params.c **** static struct _values verbose[] =
 255:lp_solve_5.5/lp_params.c **** {
 256:lp_solve_5.5/lp_params.c ****   { setvalue(NEUTRAL) },
 257:lp_solve_5.5/lp_params.c ****   { setvalue(CRITICAL) },
 258:lp_solve_5.5/lp_params.c ****   { setvalue(SEVERE) },
 259:lp_solve_5.5/lp_params.c ****   { setvalue(IMPORTANT) },
 260:lp_solve_5.5/lp_params.c ****   { setvalue(NORMAL) },
 261:lp_solve_5.5/lp_params.c ****   { setvalue(DETAILED) },
 262:lp_solve_5.5/lp_params.c ****   { setvalue(FULL) },
 263:lp_solve_5.5/lp_params.c **** };
 264:lp_solve_5.5/lp_params.c **** 
 265:lp_solve_5.5/lp_params.c **** static struct _functions functions[] =
 266:lp_solve_5.5/lp_params.c **** {
 267:lp_solve_5.5/lp_params.c ****   /* solve options */
 268:lp_solve_5.5/lp_params.c ****   { "ANTI_DEGEN", setintfunction(get_anti_degen, set_anti_degen), setvalues(anti_degen, ~0), WRITE_
 269:lp_solve_5.5/lp_params.c ****   { "BASISCRASH", setintfunction(get_basiscrash, set_basiscrash), setvalues(basiscrash, ~0), WRITE_
 270:lp_solve_5.5/lp_params.c ****   { "IMPROVE", setintfunction(get_improve, set_improve), setvalues(improve, ~0), WRITE_ACTIVE },
 271:lp_solve_5.5/lp_params.c ****   { "MAXPIVOT", setintfunction(get_maxpivot, set_maxpivot), setNULLvalues, WRITE_ACTIVE },
 272:lp_solve_5.5/lp_params.c ****   { "NEGRANGE", setREALfunction(get_negrange, set_negrange), setNULLvalues, WRITE_ACTIVE },
 273:lp_solve_5.5/lp_params.c ****   { "PIVOTING", setintfunction(get_pivoting, set_pivoting), setvalues(pivoting, PRICER_LASTOPTION),
 274:lp_solve_5.5/lp_params.c ****   { "PRESOLVE", setintfunction(get_presolve, set_presolve1), setvalues(presolving, ~0), WRITE_ACTIV
 275:lp_solve_5.5/lp_params.c ****   { "PRESOLVELOOPS", setintfunction(get_presolveloops, set_presolve2), setNULLvalues, WRITE_ACTIVE 
 276:lp_solve_5.5/lp_params.c ****   { "SCALELIMIT", setREALfunction(get_scalelimit, set_scalelimit), setNULLvalues, WRITE_ACTIVE },
 277:lp_solve_5.5/lp_params.c ****   { "SCALING", setintfunction(get_scaling, set_scaling), setvalues(scaling, SCALE_CURTISREID), WRIT
 278:lp_solve_5.5/lp_params.c ****   { "SIMPLEXTYPE", setintfunction(get_simplextype, set_simplextype), setvalues(simplextype, ~0), WR
 279:lp_solve_5.5/lp_params.c ****   { "OBJ_IN_BASIS", setMYBOOLfunction(is_obj_in_basis, set_obj_in_basis), setNULLvalues, WRITE_COMM
 280:lp_solve_5.5/lp_params.c **** 
 281:lp_solve_5.5/lp_params.c ****   /* B&B options */
 282:lp_solve_5.5/lp_params.c ****   { "BB_DEPTHLIMIT", setintfunction(get_bb_depthlimit, set_bb_depthlimit), setNULLvalues, WRITE_ACT
 283:lp_solve_5.5/lp_params.c ****   { "BB_FLOORFIRST", setintfunction(get_bb_floorfirst, set_bb_floorfirst), setvalues(bb_floorfirst,
 284:lp_solve_5.5/lp_params.c ****   { "BB_RULE", setintfunction(get_bb_rule, set_bb_rule), setvalues(bb_rule, NODE_STRATEGYMASK), WRI
 285:lp_solve_5.5/lp_params.c ****   { "BREAK_AT_FIRST", setMYBOOLfunction(is_break_at_first, set_break_at_first), setNULLvalues, WRIT
 286:lp_solve_5.5/lp_params.c ****   { "BREAK_AT_VALUE", setREALfunction(get_break_at_value, set_break_at_value), setNULLvalues, WRITE
 287:lp_solve_5.5/lp_params.c ****   { "MIP_GAP_ABS", setREALfunction(get_mip_gap_abs, set_mip_gap_abs), setNULLvalues, WRITE_ACTIVE }
 288:lp_solve_5.5/lp_params.c ****   { "MIP_GAP_REL", setREALfunction(get_mip_gap_rel, set_mip_gap_rel), setNULLvalues, WRITE_ACTIVE }
 289:lp_solve_5.5/lp_params.c ****   { "EPSINT", setREALfunction(get_epsint, set_epsint), setNULLvalues, WRITE_ACTIVE },
 290:lp_solve_5.5/lp_params.c **** 
 291:lp_solve_5.5/lp_params.c ****   /* tolerances, values */
 292:lp_solve_5.5/lp_params.c ****   { "EPSB", setREALfunction(get_epsb, set_epsb), setNULLvalues, WRITE_ACTIVE },
 293:lp_solve_5.5/lp_params.c ****   { "EPSD", setREALfunction(get_epsd, set_epsd), setNULLvalues, WRITE_ACTIVE },
 294:lp_solve_5.5/lp_params.c ****   { "EPSEL", setREALfunction(get_epsel, set_epsel), setNULLvalues, WRITE_ACTIVE },
 295:lp_solve_5.5/lp_params.c ****   { "EPSPERTURB", setREALfunction(get_epsperturb, set_epsperturb), setNULLvalues, WRITE_ACTIVE },
 296:lp_solve_5.5/lp_params.c ****   { "EPSPIVOT", setREALfunction(get_epspivot, set_epspivot), setNULLvalues, WRITE_ACTIVE },
 297:lp_solve_5.5/lp_params.c ****   { "INFINITE", setREALfunction(get_infinite, set_infinite), setNULLvalues, WRITE_ACTIVE },
 298:lp_solve_5.5/lp_params.c ****   { "BREAK_NUMERIC_ACCURACY", setREALfunction(get_break_numeric_accuracy, set_break_numeric_accurac
 299:lp_solve_5.5/lp_params.c **** 
 300:lp_solve_5.5/lp_params.c ****   /* read-only options */
 301:lp_solve_5.5/lp_params.c ****   { "DEBUG", setMYBOOLfunction(is_debug, set_debug), setNULLvalues, WRITE_COMMENTED },
 302:lp_solve_5.5/lp_params.c ****   { "OBJ_BOUND", setREALfunction(get_obj_bound, set_obj_bound), setNULLvalues, WRITE_COMMENTED },
 303:lp_solve_5.5/lp_params.c ****   { "PRINT_SOL", setintfunction(get_print_sol, set_print_sol), setvalues(print_sol, ~0), WRITE_COMM
 304:lp_solve_5.5/lp_params.c ****   { "TIMEOUT", setlongfunction(get_timeout, set_timeout), setNULLvalues, WRITE_COMMENTED },
 305:lp_solve_5.5/lp_params.c ****   { "TRACE", setMYBOOLfunction(is_trace, set_trace), setNULLvalues, WRITE_COMMENTED },
 306:lp_solve_5.5/lp_params.c ****   { "VERBOSE", setintfunction(get_verbose, set_verbose), setvalues(verbose, ~0), WRITE_COMMENTED },
 307:lp_solve_5.5/lp_params.c **** };
 308:lp_solve_5.5/lp_params.c **** 
 309:lp_solve_5.5/lp_params.c **** static void write_params1(lprec *lp, FILE *fp, char *header, int newline)
 310:lp_solve_5.5/lp_params.c **** {
 1313               		.loc 1 310 0
 1314               		.cfi_startproc
 1315 0210 CF93      		push r28
 1316               	.LCFI32:
 1317               		.cfi_def_cfa_offset 3
 1318               		.cfi_offset 28, -2
 1319 0212 DF93      		push r29
 1320               	.LCFI33:
 1321               		.cfi_def_cfa_offset 4
 1322               		.cfi_offset 29, -3
 1323 0214 CDB7      		in r28,__SP_L__
 1324 0216 DEB7      		in r29,__SP_H__
 1325               	.LCFI34:
 1326               		.cfi_def_cfa_register 28
 1327 0218 C454      		subi r28,68
 1328 021a D041      		sbci r29,16
 1329               	.LCFI35:
 1330               		.cfi_def_cfa_offset 4168
 1331 021c 0FB6      		in __tmp_reg__,__SREG__
 1332 021e F894      		cli
 1333 0220 DEBF      		out __SP_H__,r29
 1334 0222 0FBE      		out __SREG__,__tmp_reg__
 1335 0224 CDBF      		out __SP_L__,r28
 1336               	/* prologue: function */
 1337               	/* frame size = 4164 */
 1338               	/* stack size = 4166 */
 1339               	.L__stack_usage = 4166
 1340 0226 FE01      		movw r30,r28
 1341 0228 E35C      		subi r30,-61
 1342 022a FF4E      		sbci r31,-17
 1343 022c 9183      		std Z+1,r25
 1344 022e 8083      		st Z,r24
 1345 0230 CE01      		movw r24,r28
 1346 0232 815C      		subi r24,-63
 1347 0234 9F4E      		sbci r25,-17
 1348 0236 FC01      		movw r30,r24
 1349 0238 7183      		std Z+1,r23
 1350 023a 6083      		st Z,r22
 1351 023c CE01      		movw r24,r28
 1352 023e 8F5B      		subi r24,-65
 1353 0240 9F4E      		sbci r25,-17
 1354 0242 FC01      		movw r30,r24
 1355 0244 5183      		std Z+1,r21
 1356 0246 4083      		st Z,r20
 1357 0248 CE01      		movw r24,r28
 1358 024a 8D5B      		subi r24,-67
 1359 024c 9F4E      		sbci r25,-17
 1360 024e FC01      		movw r30,r24
 1361 0250 3183      		std Z+1,r19
 1362 0252 2083      		st Z,r18
 311:lp_solve_5.5/lp_params.c ****   int ret = 0, ret2, i, j, k, value, value2, elements, majorversion, minorversion, release, build;
 1363               		.loc 1 311 0
 1364 0254 1A82      		std Y+2,__zero_reg__
 1365 0256 1982      		std Y+1,__zero_reg__
 312:lp_solve_5.5/lp_params.c ****   unsigned int basemask;
 313:lp_solve_5.5/lp_params.c ****   REAL a = 0;
 1366               		.loc 1 313 0
 1367 0258 1B86      		std Y+11,__zero_reg__
 1368 025a 1C86      		std Y+12,__zero_reg__
 1369 025c 1D86      		std Y+13,__zero_reg__
 1370 025e 1E86      		std Y+14,__zero_reg__
 314:lp_solve_5.5/lp_params.c ****   char buf[4096], par[30];
 315:lp_solve_5.5/lp_params.c **** 
 316:lp_solve_5.5/lp_params.c ****   ini_writeheader(fp, header, newline);
 1371               		.loc 1 316 0
 1372 0260 CE01      		movw r24,r28
 1373 0262 8D5B      		subi r24,-67
 1374 0264 9F4E      		sbci r25,-17
 1375 0266 FC01      		movw r30,r24
 1376 0268 4081      		ld r20,Z
 1377 026a 5181      		ldd r21,Z+1
 1378 026c CE01      		movw r24,r28
 1379 026e 8F5B      		subi r24,-65
 1380 0270 9F4E      		sbci r25,-17
 1381 0272 FC01      		movw r30,r24
 1382 0274 2081      		ld r18,Z
 1383 0276 3181      		ldd r19,Z+1
 1384 0278 CE01      		movw r24,r28
 1385 027a 815C      		subi r24,-63
 1386 027c 9F4E      		sbci r25,-17
 1387 027e FC01      		movw r30,r24
 1388 0280 8081      		ld r24,Z
 1389 0282 9181      		ldd r25,Z+1
 1390 0284 B901      		movw r22,r18
 1391 0286 0E94 0000 		call ini_writeheader
 317:lp_solve_5.5/lp_params.c ****   lp_solve_version(&majorversion, &minorversion, &release, &build);
 1392               		.loc 1 317 0
 1393 028a 9E01      		movw r18,r28
 1394 028c 235E      		subi r18,-29
 1395 028e 3F4F      		sbci r19,-1
 1396 0290 AE01      		movw r20,r28
 1397 0292 455E      		subi r20,-27
 1398 0294 5F4F      		sbci r21,-1
 1399 0296 BE01      		movw r22,r28
 1400 0298 675E      		subi r22,-25
 1401 029a 7F4F      		sbci r23,-1
 1402 029c CE01      		movw r24,r28
 1403 029e 4796      		adiw r24,23
 1404 02a0 0E94 0000 		call lp_solve_version
 318:lp_solve_5.5/lp_params.c ****   sprintf(buf, "lp_solve version %d.%d settings\n", majorversion, minorversion);
 1405               		.loc 1 318 0
 1406 02a4 298D      		ldd r18,Y+25
 1407 02a6 3A8D      		ldd r19,Y+26
 1408 02a8 8F89      		ldd r24,Y+23
 1409 02aa 988D      		ldd r25,Y+24
 1410 02ac 432F      		mov r20,r19
 1411 02ae 4F93      		push r20
 1412 02b0 2F93      		push r18
 1413 02b2 292F      		mov r18,r25
 1414 02b4 2F93      		push r18
 1415 02b6 8F93      		push r24
 1416 02b8 80E0      		ldi r24,lo8(.LC141)
 1417 02ba 90E0      		ldi r25,hi8(.LC141)
 1418 02bc 892F      		mov r24,r25
 1419 02be 8F93      		push r24
 1420 02c0 80E0      		ldi r24,lo8(.LC141)
 1421 02c2 90E0      		ldi r25,hi8(.LC141)
 1422 02c4 8F93      		push r24
 1423 02c6 CE01      		movw r24,r28
 1424 02c8 4F96      		adiw r24,31
 1425 02ca 292F      		mov r18,r25
 1426 02cc 2F93      		push r18
 1427 02ce 8F93      		push r24
 1428 02d0 0E94 0000 		call sprintf
 1429 02d4 8DB7      		in r24,__SP_L__
 1430 02d6 9EB7      		in r25,__SP_H__
 1431 02d8 0896      		adiw r24,8
 1432 02da 0FB6      		in __tmp_reg__,__SREG__
 1433 02dc F894      		cli
 1434 02de DEBF      		out __SP_H__,r29
 1435 02e0 0FBE      		out __SREG__,__tmp_reg__
 1436 02e2 CDBF      		out __SP_L__,r28
 319:lp_solve_5.5/lp_params.c ****   ini_writecomment(fp, buf);
 1437               		.loc 1 319 0
 1438 02e4 9E01      		movw r18,r28
 1439 02e6 215E      		subi r18,-31
 1440 02e8 3F4F      		sbci r19,-1
 1441 02ea CE01      		movw r24,r28
 1442 02ec 815C      		subi r24,-63
 1443 02ee 9F4E      		sbci r25,-17
 1444 02f0 FC01      		movw r30,r24
 1445 02f2 8081      		ld r24,Z
 1446 02f4 9181      		ldd r25,Z+1
 1447 02f6 B901      		movw r22,r18
 1448 02f8 0E94 0000 		call ini_writecomment
 320:lp_solve_5.5/lp_params.c ****   for(i = 0; i < sizeof(functions) / sizeof(*functions); i++) {
 1449               		.loc 1 320 0
 1450 02fc 1E82      		std Y+6,__zero_reg__
 1451 02fe 1D82      		std Y+5,__zero_reg__
 1452 0300 00C0      		rjmp .L18
 1453               	.L49:
 321:lp_solve_5.5/lp_params.c ****     switch(functions[i].type) {
 1454               		.loc 1 321 0
 1455 0302 8D81      		ldd r24,Y+5
 1456 0304 9E81      		ldd r25,Y+6
 1457 0306 8295      		swap r24
 1458 0308 9295      		swap r25
 1459 030a 907F      		andi r25,0xf0
 1460 030c 9827      		eor r25,r24
 1461 030e 807F      		andi r24,0xf0
 1462 0310 9827      		eor r25,r24
 1463 0312 8050      		subi r24,lo8(-(functions+6))
 1464 0314 9040      		sbci r25,hi8(-(functions+6))
 1465 0316 FC01      		movw r30,r24
 1466 0318 8081      		ld r24,Z
 1467 031a 9181      		ldd r25,Z+1
 1468 031c 8230      		cpi r24,2
 1469 031e 9105      		cpc r25,__zero_reg__
 1470 0320 01F0      		breq .L20
 1471 0322 8330      		cpi r24,3
 1472 0324 9105      		cpc r25,__zero_reg__
 1473 0326 04F4      		brge .L21
 1474 0328 0197      		sbiw r24,1
 1475 032a 01F0      		breq .L22
 1476 032c 00C0      		rjmp .L19
 1477               	.L21:
 1478 032e 8330      		cpi r24,3
 1479 0330 9105      		cpc r25,__zero_reg__
 1480 0332 01F4      		brne .+2
 1481 0334 00C0      		rjmp .L23
 1482 0336 0497      		sbiw r24,4
 1483 0338 01F4      		brne .+2
 1484 033a 00C0      		rjmp .L24
 1485 033c 00C0      		rjmp .L19
 1486               	.L22:
 322:lp_solve_5.5/lp_params.c ****     case intfunction:
 323:lp_solve_5.5/lp_params.c ****       if(functions[i].get_function.int_get_function == NULL)
 1487               		.loc 1 323 0
 1488 033e 8D81      		ldd r24,Y+5
 1489 0340 9E81      		ldd r25,Y+6
 1490 0342 8295      		swap r24
 1491 0344 9295      		swap r25
 1492 0346 907F      		andi r25,0xf0
 1493 0348 9827      		eor r25,r24
 1494 034a 807F      		andi r24,0xf0
 1495 034c 9827      		eor r25,r24
 1496 034e 8050      		subi r24,lo8(-(functions+2))
 1497 0350 9040      		sbci r25,hi8(-(functions+2))
 1498 0352 FC01      		movw r30,r24
 1499 0354 8081      		ld r24,Z
 1500 0356 9181      		ldd r25,Z+1
 1501 0358 892B      		or r24,r25
 1502 035a 01F4      		brne .+2
 1503 035c 00C0      		rjmp .L50
 324:lp_solve_5.5/lp_params.c ****         continue;
 325:lp_solve_5.5/lp_params.c ****       ret = functions[i].get_function.int_get_function(lp);
 1504               		.loc 1 325 0
 1505 035e 8D81      		ldd r24,Y+5
 1506 0360 9E81      		ldd r25,Y+6
 1507 0362 8295      		swap r24
 1508 0364 9295      		swap r25
 1509 0366 907F      		andi r25,0xf0
 1510 0368 9827      		eor r25,r24
 1511 036a 807F      		andi r24,0xf0
 1512 036c 9827      		eor r25,r24
 1513 036e 8050      		subi r24,lo8(-(functions+2))
 1514 0370 9040      		sbci r25,hi8(-(functions+2))
 1515 0372 FC01      		movw r30,r24
 1516 0374 2081      		ld r18,Z
 1517 0376 3181      		ldd r19,Z+1
 1518 0378 CE01      		movw r24,r28
 1519 037a 835C      		subi r24,-61
 1520 037c 9F4E      		sbci r25,-17
 1521 037e FC01      		movw r30,r24
 1522 0380 8081      		ld r24,Z
 1523 0382 9181      		ldd r25,Z+1
 1524 0384 F901      		movw r30,r18
 1525 0386 0995      		icall
 1526 0388 9A83      		std Y+2,r25
 1527 038a 8983      		std Y+1,r24
 326:lp_solve_5.5/lp_params.c ****       break;
 1528               		.loc 1 326 0
 1529 038c 00C0      		rjmp .L19
 1530               	.L20:
 327:lp_solve_5.5/lp_params.c ****     case longfunction:
 328:lp_solve_5.5/lp_params.c ****       if(functions[i].get_function.long_get_function == NULL)
 1531               		.loc 1 328 0
 1532 038e 8D81      		ldd r24,Y+5
 1533 0390 9E81      		ldd r25,Y+6
 1534 0392 8295      		swap r24
 1535 0394 9295      		swap r25
 1536 0396 907F      		andi r25,0xf0
 1537 0398 9827      		eor r25,r24
 1538 039a 807F      		andi r24,0xf0
 1539 039c 9827      		eor r25,r24
 1540 039e 8050      		subi r24,lo8(-(functions+2))
 1541 03a0 9040      		sbci r25,hi8(-(functions+2))
 1542 03a2 FC01      		movw r30,r24
 1543 03a4 8081      		ld r24,Z
 1544 03a6 9181      		ldd r25,Z+1
 1545 03a8 892B      		or r24,r25
 1546 03aa 01F4      		brne .+2
 1547 03ac 00C0      		rjmp .L51
 329:lp_solve_5.5/lp_params.c ****         continue;
 330:lp_solve_5.5/lp_params.c ****       ret = functions[i].get_function.long_get_function(lp);
 1548               		.loc 1 330 0
 1549 03ae 8D81      		ldd r24,Y+5
 1550 03b0 9E81      		ldd r25,Y+6
 1551 03b2 8295      		swap r24
 1552 03b4 9295      		swap r25
 1553 03b6 907F      		andi r25,0xf0
 1554 03b8 9827      		eor r25,r24
 1555 03ba 807F      		andi r24,0xf0
 1556 03bc 9827      		eor r25,r24
 1557 03be 8050      		subi r24,lo8(-(functions+2))
 1558 03c0 9040      		sbci r25,hi8(-(functions+2))
 1559 03c2 FC01      		movw r30,r24
 1560 03c4 2081      		ld r18,Z
 1561 03c6 3181      		ldd r19,Z+1
 1562 03c8 CE01      		movw r24,r28
 1563 03ca 835C      		subi r24,-61
 1564 03cc 9F4E      		sbci r25,-17
 1565 03ce FC01      		movw r30,r24
 1566 03d0 8081      		ld r24,Z
 1567 03d2 9181      		ldd r25,Z+1
 1568 03d4 F901      		movw r30,r18
 1569 03d6 0995      		icall
 1570 03d8 DC01      		movw r26,r24
 1571 03da CB01      		movw r24,r22
 1572 03dc 9A83      		std Y+2,r25
 1573 03de 8983      		std Y+1,r24
 331:lp_solve_5.5/lp_params.c ****       break;
 1574               		.loc 1 331 0
 1575 03e0 00C0      		rjmp .L19
 1576               	.L23:
 332:lp_solve_5.5/lp_params.c ****     case MYBOOLfunction:
 333:lp_solve_5.5/lp_params.c ****       if(functions[i].get_function.MYBOOL_get_function == NULL)
 1577               		.loc 1 333 0
 1578 03e2 8D81      		ldd r24,Y+5
 1579 03e4 9E81      		ldd r25,Y+6
 1580 03e6 8295      		swap r24
 1581 03e8 9295      		swap r25
 1582 03ea 907F      		andi r25,0xf0
 1583 03ec 9827      		eor r25,r24
 1584 03ee 807F      		andi r24,0xf0
 1585 03f0 9827      		eor r25,r24
 1586 03f2 8050      		subi r24,lo8(-(functions+2))
 1587 03f4 9040      		sbci r25,hi8(-(functions+2))
 1588 03f6 FC01      		movw r30,r24
 1589 03f8 8081      		ld r24,Z
 1590 03fa 9181      		ldd r25,Z+1
 1591 03fc 892B      		or r24,r25
 1592 03fe 01F4      		brne .+2
 1593 0400 00C0      		rjmp .L52
 334:lp_solve_5.5/lp_params.c ****         continue;
 335:lp_solve_5.5/lp_params.c ****       ret = (int) functions[i].get_function.MYBOOL_get_function(lp);
 1594               		.loc 1 335 0
 1595 0402 8D81      		ldd r24,Y+5
 1596 0404 9E81      		ldd r25,Y+6
 1597 0406 8295      		swap r24
 1598 0408 9295      		swap r25
 1599 040a 907F      		andi r25,0xf0
 1600 040c 9827      		eor r25,r24
 1601 040e 807F      		andi r24,0xf0
 1602 0410 9827      		eor r25,r24
 1603 0412 8050      		subi r24,lo8(-(functions+2))
 1604 0414 9040      		sbci r25,hi8(-(functions+2))
 1605 0416 FC01      		movw r30,r24
 1606 0418 2081      		ld r18,Z
 1607 041a 3181      		ldd r19,Z+1
 1608 041c CE01      		movw r24,r28
 1609 041e 835C      		subi r24,-61
 1610 0420 9F4E      		sbci r25,-17
 1611 0422 FC01      		movw r30,r24
 1612 0424 8081      		ld r24,Z
 1613 0426 9181      		ldd r25,Z+1
 1614 0428 F901      		movw r30,r18
 1615 042a 0995      		icall
 1616 042c 882F      		mov r24,r24
 1617 042e 90E0      		ldi r25,0
 1618 0430 9A83      		std Y+2,r25
 1619 0432 8983      		std Y+1,r24
 336:lp_solve_5.5/lp_params.c ****       break;
 1620               		.loc 1 336 0
 1621 0434 00C0      		rjmp .L19
 1622               	.L24:
 337:lp_solve_5.5/lp_params.c ****     case REALfunction:
 338:lp_solve_5.5/lp_params.c ****       if(functions[i].get_function.REAL_get_function == NULL)
 1623               		.loc 1 338 0
 1624 0436 8D81      		ldd r24,Y+5
 1625 0438 9E81      		ldd r25,Y+6
 1626 043a 8295      		swap r24
 1627 043c 9295      		swap r25
 1628 043e 907F      		andi r25,0xf0
 1629 0440 9827      		eor r25,r24
 1630 0442 807F      		andi r24,0xf0
 1631 0444 9827      		eor r25,r24
 1632 0446 8050      		subi r24,lo8(-(functions+2))
 1633 0448 9040      		sbci r25,hi8(-(functions+2))
 1634 044a FC01      		movw r30,r24
 1635 044c 8081      		ld r24,Z
 1636 044e 9181      		ldd r25,Z+1
 1637 0450 892B      		or r24,r25
 1638 0452 01F4      		brne .+2
 1639 0454 00C0      		rjmp .L53
 339:lp_solve_5.5/lp_params.c ****         continue;
 340:lp_solve_5.5/lp_params.c ****       a = functions[i].get_function.REAL_get_function(lp);
 1640               		.loc 1 340 0
 1641 0456 8D81      		ldd r24,Y+5
 1642 0458 9E81      		ldd r25,Y+6
 1643 045a 8295      		swap r24
 1644 045c 9295      		swap r25
 1645 045e 907F      		andi r25,0xf0
 1646 0460 9827      		eor r25,r24
 1647 0462 807F      		andi r24,0xf0
 1648 0464 9827      		eor r25,r24
 1649 0466 8050      		subi r24,lo8(-(functions+2))
 1650 0468 9040      		sbci r25,hi8(-(functions+2))
 1651 046a FC01      		movw r30,r24
 1652 046c 2081      		ld r18,Z
 1653 046e 3181      		ldd r19,Z+1
 1654 0470 CE01      		movw r24,r28
 1655 0472 835C      		subi r24,-61
 1656 0474 9F4E      		sbci r25,-17
 1657 0476 FC01      		movw r30,r24
 1658 0478 8081      		ld r24,Z
 1659 047a 9181      		ldd r25,Z+1
 1660 047c F901      		movw r30,r18
 1661 047e 0995      		icall
 1662 0480 DC01      		movw r26,r24
 1663 0482 CB01      		movw r24,r22
 1664 0484 8B87      		std Y+11,r24
 1665 0486 9C87      		std Y+12,r25
 1666 0488 AD87      		std Y+13,r26
 1667 048a BE87      		std Y+14,r27
 341:lp_solve_5.5/lp_params.c ****       break;
 1668               		.loc 1 341 0
 1669 048c 0000      		nop
 1670               	.L19:
 342:lp_solve_5.5/lp_params.c ****     }
 343:lp_solve_5.5/lp_params.c ****     buf[0] = 0;
 1671               		.loc 1 343 0
 1672 048e 1F8E      		std Y+31,__zero_reg__
 344:lp_solve_5.5/lp_params.c ****     if(functions[i].values == NULL) {
 1673               		.loc 1 344 0
 1674 0490 8D81      		ldd r24,Y+5
 1675 0492 9E81      		ldd r25,Y+6
 1676 0494 8295      		swap r24
 1677 0496 9295      		swap r25
 1678 0498 907F      		andi r25,0xf0
 1679 049a 9827      		eor r25,r24
 1680 049c 807F      		andi r24,0xf0
 1681 049e 9827      		eor r25,r24
 1682 04a0 8050      		subi r24,lo8(-(functions+8))
 1683 04a2 9040      		sbci r25,hi8(-(functions+8))
 1684 04a4 FC01      		movw r30,r24
 1685 04a6 8081      		ld r24,Z
 1686 04a8 9181      		ldd r25,Z+1
 1687 04aa 892B      		or r24,r25
 1688 04ac 01F0      		breq .+2
 1689 04ae 00C0      		rjmp .L30
 345:lp_solve_5.5/lp_params.c ****       switch(functions[i].type) {
 1690               		.loc 1 345 0
 1691 04b0 8D81      		ldd r24,Y+5
 1692 04b2 9E81      		ldd r25,Y+6
 1693 04b4 8295      		swap r24
 1694 04b6 9295      		swap r25
 1695 04b8 907F      		andi r25,0xf0
 1696 04ba 9827      		eor r25,r24
 1697 04bc 807F      		andi r24,0xf0
 1698 04be 9827      		eor r25,r24
 1699 04c0 8050      		subi r24,lo8(-(functions+6))
 1700 04c2 9040      		sbci r25,hi8(-(functions+6))
 1701 04c4 FC01      		movw r30,r24
 1702 04c6 8081      		ld r24,Z
 1703 04c8 9181      		ldd r25,Z+1
 1704 04ca 8130      		cpi r24,1
 1705 04cc 9105      		cpc r25,__zero_reg__
 1706 04ce 04F4      		brge .+2
 1707 04d0 00C0      		rjmp .L34
 1708 04d2 8430      		cpi r24,4
 1709 04d4 9105      		cpc r25,__zero_reg__
 1710 04d6 04F0      		brlt .L32
 1711 04d8 0497      		sbiw r24,4
 1712 04da 01F0      		breq .L33
 1713 04dc 00C0      		rjmp .L34
 1714               	.L32:
 346:lp_solve_5.5/lp_params.c ****       case intfunction:
 347:lp_solve_5.5/lp_params.c ****       case longfunction:
 348:lp_solve_5.5/lp_params.c ****       case MYBOOLfunction:
 349:lp_solve_5.5/lp_params.c ****         sprintf(buf, "%d", ret);
 1715               		.loc 1 349 0
 1716 04de 8A81      		ldd r24,Y+2
 1717 04e0 8F93      		push r24
 1718 04e2 8981      		ldd r24,Y+1
 1719 04e4 8F93      		push r24
 1720 04e6 80E0      		ldi r24,lo8(.LC142)
 1721 04e8 90E0      		ldi r25,hi8(.LC142)
 1722 04ea 892F      		mov r24,r25
 1723 04ec 8F93      		push r24
 1724 04ee 80E0      		ldi r24,lo8(.LC142)
 1725 04f0 90E0      		ldi r25,hi8(.LC142)
 1726 04f2 8F93      		push r24
 1727 04f4 CE01      		movw r24,r28
 1728 04f6 4F96      		adiw r24,31
 1729 04f8 292F      		mov r18,r25
 1730 04fa 2F93      		push r18
 1731 04fc 8F93      		push r24
 1732 04fe 0E94 0000 		call sprintf
 1733 0502 0F90      		pop __tmp_reg__
 1734 0504 0F90      		pop __tmp_reg__
 1735 0506 0F90      		pop __tmp_reg__
 1736 0508 0F90      		pop __tmp_reg__
 1737 050a 0F90      		pop __tmp_reg__
 1738 050c 0F90      		pop __tmp_reg__
 350:lp_solve_5.5/lp_params.c ****         break;
 1739               		.loc 1 350 0
 1740 050e 00C0      		rjmp .L34
 1741               	.L33:
 351:lp_solve_5.5/lp_params.c ****       case REALfunction:
 352:lp_solve_5.5/lp_params.c ****         sprintf(buf, "%g", a);
 1742               		.loc 1 352 0
 1743 0510 8E85      		ldd r24,Y+14
 1744 0512 8F93      		push r24
 1745 0514 8D85      		ldd r24,Y+13
 1746 0516 8F93      		push r24
 1747 0518 8C85      		ldd r24,Y+12
 1748 051a 8F93      		push r24
 1749 051c 8B85      		ldd r24,Y+11
 1750 051e 8F93      		push r24
 1751 0520 80E0      		ldi r24,lo8(.LC143)
 1752 0522 90E0      		ldi r25,hi8(.LC143)
 1753 0524 892F      		mov r24,r25
 1754 0526 8F93      		push r24
 1755 0528 80E0      		ldi r24,lo8(.LC143)
 1756 052a 90E0      		ldi r25,hi8(.LC143)
 1757 052c 8F93      		push r24
 1758 052e CE01      		movw r24,r28
 1759 0530 4F96      		adiw r24,31
 1760 0532 292F      		mov r18,r25
 1761 0534 2F93      		push r18
 1762 0536 8F93      		push r24
 1763 0538 0E94 0000 		call sprintf
 1764 053c 8DB7      		in r24,__SP_L__
 1765 053e 9EB7      		in r25,__SP_H__
 1766 0540 0896      		adiw r24,8
 1767 0542 0FB6      		in __tmp_reg__,__SREG__
 1768 0544 F894      		cli
 1769 0546 DEBF      		out __SP_H__,r29
 1770 0548 0FBE      		out __SREG__,__tmp_reg__
 1771 054a CDBF      		out __SP_L__,r28
 353:lp_solve_5.5/lp_params.c ****         break;
 1772               		.loc 1 353 0
 1773 054c 0000      		nop
 1774 054e 00C0      		rjmp .L34
 1775               	.L30:
 354:lp_solve_5.5/lp_params.c ****       }
 355:lp_solve_5.5/lp_params.c ****     }
 356:lp_solve_5.5/lp_params.c ****     else {
 357:lp_solve_5.5/lp_params.c ****       elements = functions[i].elements;
 1776               		.loc 1 357 0
 1777 0550 8D81      		ldd r24,Y+5
 1778 0552 9E81      		ldd r25,Y+6
 1779 0554 8295      		swap r24
 1780 0556 9295      		swap r25
 1781 0558 907F      		andi r25,0xf0
 1782 055a 9827      		eor r25,r24
 1783 055c 807F      		andi r24,0xf0
 1784 055e 9827      		eor r25,r24
 1785 0560 8050      		subi r24,lo8(-(functions+10))
 1786 0562 9040      		sbci r25,hi8(-(functions+10))
 1787 0564 FC01      		movw r30,r24
 1788 0566 8081      		ld r24,Z
 1789 0568 9181      		ldd r25,Z+1
 1790 056a 988B      		std Y+16,r25
 1791 056c 8F87      		std Y+15,r24
 358:lp_solve_5.5/lp_params.c ****       basemask = functions[i].basemask;
 1792               		.loc 1 358 0
 1793 056e 8D81      		ldd r24,Y+5
 1794 0570 9E81      		ldd r25,Y+6
 1795 0572 8295      		swap r24
 1796 0574 9295      		swap r25
 1797 0576 907F      		andi r25,0xf0
 1798 0578 9827      		eor r25,r24
 1799 057a 807F      		andi r24,0xf0
 1800 057c 9827      		eor r25,r24
 1801 057e 8050      		subi r24,lo8(-(functions+12))
 1802 0580 9040      		sbci r25,hi8(-(functions+12))
 1803 0582 FC01      		movw r30,r24
 1804 0584 8081      		ld r24,Z
 1805 0586 9181      		ldd r25,Z+1
 1806 0588 9A8B      		std Y+18,r25
 1807 058a 898B      		std Y+17,r24
 359:lp_solve_5.5/lp_params.c ****       for(j = 0; j < elements; j++) {
 1808               		.loc 1 359 0
 1809 058c 1886      		std Y+8,__zero_reg__
 1810 058e 1F82      		std Y+7,__zero_reg__
 1811 0590 00C0      		rjmp .L35
 1812               	.L46:
 360:lp_solve_5.5/lp_params.c ****         value = functions[i].values[j].value;
 1813               		.loc 1 360 0
 1814 0592 8D81      		ldd r24,Y+5
 1815 0594 9E81      		ldd r25,Y+6
 1816 0596 8295      		swap r24
 1817 0598 9295      		swap r25
 1818 059a 907F      		andi r25,0xf0
 1819 059c 9827      		eor r25,r24
 1820 059e 807F      		andi r24,0xf0
 1821 05a0 9827      		eor r25,r24
 1822 05a2 8050      		subi r24,lo8(-(functions+8))
 1823 05a4 9040      		sbci r25,hi8(-(functions+8))
 1824 05a6 FC01      		movw r30,r24
 1825 05a8 2081      		ld r18,Z
 1826 05aa 3181      		ldd r19,Z+1
 1827 05ac 8F81      		ldd r24,Y+7
 1828 05ae 9885      		ldd r25,Y+8
 1829 05b0 880F      		lsl r24
 1830 05b2 991F      		rol r25
 1831 05b4 880F      		lsl r24
 1832 05b6 991F      		rol r25
 1833 05b8 820F      		add r24,r18
 1834 05ba 931F      		adc r25,r19
 1835 05bc FC01      		movw r30,r24
 1836 05be 8081      		ld r24,Z
 1837 05c0 9181      		ldd r25,Z+1
 1838 05c2 9C8B      		std Y+20,r25
 1839 05c4 8B8B      		std Y+19,r24
 361:lp_solve_5.5/lp_params.c ****         ret2 = ret;
 1840               		.loc 1 361 0
 1841 05c6 8981      		ldd r24,Y+1
 1842 05c8 9A81      		ldd r25,Y+2
 1843 05ca 9C83      		std Y+4,r25
 1844 05cc 8B83      		std Y+3,r24
 362:lp_solve_5.5/lp_params.c ****         if(((unsigned int) value) < basemask)
 1845               		.loc 1 362 0
 1846 05ce 2B89      		ldd r18,Y+19
 1847 05d0 3C89      		ldd r19,Y+20
 1848 05d2 8989      		ldd r24,Y+17
 1849 05d4 9A89      		ldd r25,Y+18
 1850 05d6 2817      		cp r18,r24
 1851 05d8 3907      		cpc r19,r25
 1852 05da 00F4      		brsh .L36
 363:lp_solve_5.5/lp_params.c ****           ret2 &= basemask;
 1853               		.loc 1 363 0
 1854 05dc 2B81      		ldd r18,Y+3
 1855 05de 3C81      		ldd r19,Y+4
 1856 05e0 8989      		ldd r24,Y+17
 1857 05e2 9A89      		ldd r25,Y+18
 1858 05e4 8223      		and r24,r18
 1859 05e6 9323      		and r25,r19
 1860 05e8 9C83      		std Y+4,r25
 1861 05ea 8B83      		std Y+3,r24
 1862               	.L36:
 364:lp_solve_5.5/lp_params.c ****         if(value == 0) {
 1863               		.loc 1 364 0
 1864 05ec 8B89      		ldd r24,Y+19
 1865 05ee 9C89      		ldd r25,Y+20
 1866 05f0 892B      		or r24,r25
 1867 05f2 01F0      		breq .+2
 1868 05f4 00C0      		rjmp .L37
 365:lp_solve_5.5/lp_params.c ****           if(ret2 == 0) {
 1869               		.loc 1 365 0
 1870 05f6 8B81      		ldd r24,Y+3
 1871 05f8 9C81      		ldd r25,Y+4
 1872 05fa 892B      		or r24,r25
 1873 05fc 01F0      		breq .+2
 1874 05fe 00C0      		rjmp .L40
 366:lp_solve_5.5/lp_params.c ****             if(*buf)
 1875               		.loc 1 366 0
 1876 0600 8F8D      		ldd r24,Y+31
 1877 0602 8823      		tst r24
 1878 0604 01F0      		breq .L39
 367:lp_solve_5.5/lp_params.c ****               strcat(buf, " + ");
 1879               		.loc 1 367 0
 1880 0606 CE01      		movw r24,r28
 1881 0608 4F96      		adiw r24,31
 1882 060a 9C01      		movw r18,r24
 1883 060c F901      		movw r30,r18
 1884               		0:
 1885 060e 0190      		ld __tmp_reg__,Z+
 1886 0610 0020      		tst __tmp_reg__
 1887 0612 01F4      		brne 0b
 1888 0614 CF01      		movw r24,r30
 1889 0616 0197      		sbiw r24,1
 1890 0618 821B      		sub r24,r18
 1891 061a 930B      		sbc r25,r19
 1892 061c 9E01      		movw r18,r28
 1893 061e 215E      		subi r18,-31
 1894 0620 3F4F      		sbci r19,-1
 1895 0622 820F      		add r24,r18
 1896 0624 931F      		adc r25,r19
 1897 0626 20E2      		ldi r18,lo8(32)
 1898 0628 3BE2      		ldi r19,lo8(43)
 1899 062a FC01      		movw r30,r24
 1900 062c 3183      		std Z+1,r19
 1901 062e 2083      		st Z,r18
 1902 0630 20E2      		ldi r18,lo8(32)
 1903 0632 30E0      		ldi r19,0
 1904 0634 FC01      		movw r30,r24
 1905 0636 3383      		std Z+3,r19
 1906 0638 2283      		std Z+2,r18
 1907               	.L39:
 368:lp_solve_5.5/lp_params.c ****             strcat(buf, functions[i].values[j].svalue);
 1908               		.loc 1 368 0
 1909 063a 8D81      		ldd r24,Y+5
 1910 063c 9E81      		ldd r25,Y+6
 1911 063e 8295      		swap r24
 1912 0640 9295      		swap r25
 1913 0642 907F      		andi r25,0xf0
 1914 0644 9827      		eor r25,r24
 1915 0646 807F      		andi r24,0xf0
 1916 0648 9827      		eor r25,r24
 1917 064a 8050      		subi r24,lo8(-(functions+8))
 1918 064c 9040      		sbci r25,hi8(-(functions+8))
 1919 064e FC01      		movw r30,r24
 1920 0650 2081      		ld r18,Z
 1921 0652 3181      		ldd r19,Z+1
 1922 0654 8F81      		ldd r24,Y+7
 1923 0656 9885      		ldd r25,Y+8
 1924 0658 880F      		lsl r24
 1925 065a 991F      		rol r25
 1926 065c 880F      		lsl r24
 1927 065e 991F      		rol r25
 1928 0660 820F      		add r24,r18
 1929 0662 931F      		adc r25,r19
 1930 0664 FC01      		movw r30,r24
 1931 0666 2281      		ldd r18,Z+2
 1932 0668 3381      		ldd r19,Z+3
 1933 066a CE01      		movw r24,r28
 1934 066c 4F96      		adiw r24,31
 1935 066e B901      		movw r22,r18
 1936 0670 0E94 0000 		call strcat
 1937 0674 00C0      		rjmp .L40
 1938               	.L37:
 369:lp_solve_5.5/lp_params.c ****           }
 370:lp_solve_5.5/lp_params.c ****         }
 371:lp_solve_5.5/lp_params.c ****         else if((ret2 & value) == value) {
 1939               		.loc 1 371 0
 1940 0676 2B81      		ldd r18,Y+3
 1941 0678 3C81      		ldd r19,Y+4
 1942 067a 8B89      		ldd r24,Y+19
 1943 067c 9C89      		ldd r25,Y+20
 1944 067e 2823      		and r18,r24
 1945 0680 3923      		and r19,r25
 1946 0682 8B89      		ldd r24,Y+19
 1947 0684 9C89      		ldd r25,Y+20
 1948 0686 2817      		cp r18,r24
 1949 0688 3907      		cpc r19,r25
 1950 068a 01F0      		breq .+2
 1951 068c 00C0      		rjmp .L40
 372:lp_solve_5.5/lp_params.c ****           for(k = 0; k < elements; k++) {
 1952               		.loc 1 372 0
 1953 068e 1A86      		std Y+10,__zero_reg__
 1954 0690 1986      		std Y+9,__zero_reg__
 1955 0692 00C0      		rjmp .L41
 1956               	.L44:
 373:lp_solve_5.5/lp_params.c ****             value2 = functions[i].values[k].value;
 1957               		.loc 1 373 0
 1958 0694 8D81      		ldd r24,Y+5
 1959 0696 9E81      		ldd r25,Y+6
 1960 0698 8295      		swap r24
 1961 069a 9295      		swap r25
 1962 069c 907F      		andi r25,0xf0
 1963 069e 9827      		eor r25,r24
 1964 06a0 807F      		andi r24,0xf0
 1965 06a2 9827      		eor r25,r24
 1966 06a4 8050      		subi r24,lo8(-(functions+8))
 1967 06a6 9040      		sbci r25,hi8(-(functions+8))
 1968 06a8 FC01      		movw r30,r24
 1969 06aa 2081      		ld r18,Z
 1970 06ac 3181      		ldd r19,Z+1
 1971 06ae 8985      		ldd r24,Y+9
 1972 06b0 9A85      		ldd r25,Y+10
 1973 06b2 880F      		lsl r24
 1974 06b4 991F      		rol r25
 1975 06b6 880F      		lsl r24
 1976 06b8 991F      		rol r25
 1977 06ba 820F      		add r24,r18
 1978 06bc 931F      		adc r25,r19
 1979 06be FC01      		movw r30,r24
 1980 06c0 8081      		ld r24,Z
 1981 06c2 9181      		ldd r25,Z+1
 1982 06c4 9E8B      		std Y+22,r25
 1983 06c6 8D8B      		std Y+21,r24
 374:lp_solve_5.5/lp_params.c ****             if((k != j) && (value2 > value) && ((value2 & value) == value) && ((ret2 & value2) == v
 1984               		.loc 1 374 0
 1985 06c8 2985      		ldd r18,Y+9
 1986 06ca 3A85      		ldd r19,Y+10
 1987 06cc 8F81      		ldd r24,Y+7
 1988 06ce 9885      		ldd r25,Y+8
 1989 06d0 2817      		cp r18,r24
 1990 06d2 3907      		cpc r19,r25
 1991 06d4 01F0      		breq .L42
 1992               		.loc 1 374 0 is_stmt 0 discriminator 1
 1993 06d6 2D89      		ldd r18,Y+21
 1994 06d8 3E89      		ldd r19,Y+22
 1995 06da 8B89      		ldd r24,Y+19
 1996 06dc 9C89      		ldd r25,Y+20
 1997 06de 8217      		cp r24,r18
 1998 06e0 9307      		cpc r25,r19
 1999 06e2 04F4      		brge .L42
 2000               		.loc 1 374 0 discriminator 2
 2001 06e4 2D89      		ldd r18,Y+21
 2002 06e6 3E89      		ldd r19,Y+22
 2003 06e8 8B89      		ldd r24,Y+19
 2004 06ea 9C89      		ldd r25,Y+20
 2005 06ec 2823      		and r18,r24
 2006 06ee 3923      		and r19,r25
 2007 06f0 8B89      		ldd r24,Y+19
 2008 06f2 9C89      		ldd r25,Y+20
 2009 06f4 2817      		cp r18,r24
 2010 06f6 3907      		cpc r19,r25
 2011 06f8 01F4      		brne .L42
 2012               		.loc 1 374 0 discriminator 3
 2013 06fa 2B81      		ldd r18,Y+3
 2014 06fc 3C81      		ldd r19,Y+4
 2015 06fe 8D89      		ldd r24,Y+21
 2016 0700 9E89      		ldd r25,Y+22
 2017 0702 2823      		and r18,r24
 2018 0704 3923      		and r19,r25
 2019 0706 8D89      		ldd r24,Y+21
 2020 0708 9E89      		ldd r25,Y+22
 2021 070a 2817      		cp r18,r24
 2022 070c 3907      		cpc r19,r25
 2023 070e 01F0      		breq .L54
 2024               	.L42:
 372:lp_solve_5.5/lp_params.c ****           for(k = 0; k < elements; k++) {
 2025               		.loc 1 372 0 is_stmt 1 discriminator 2
 2026 0710 8985      		ldd r24,Y+9
 2027 0712 9A85      		ldd r25,Y+10
 2028 0714 0196      		adiw r24,1
 2029 0716 9A87      		std Y+10,r25
 2030 0718 8987      		std Y+9,r24
 2031               	.L41:
 372:lp_solve_5.5/lp_params.c ****           for(k = 0; k < elements; k++) {
 2032               		.loc 1 372 0 is_stmt 0 discriminator 1
 2033 071a 2985      		ldd r18,Y+9
 2034 071c 3A85      		ldd r19,Y+10
 2035 071e 8F85      		ldd r24,Y+15
 2036 0720 9889      		ldd r25,Y+16
 2037 0722 2817      		cp r18,r24
 2038 0724 3907      		cpc r19,r25
 2039 0726 04F4      		brge .+2
 2040 0728 00C0      		rjmp .L44
 2041 072a 00C0      		rjmp .L43
 2042               	.L54:
 375:lp_solve_5.5/lp_params.c ****               break;
 2043               		.loc 1 375 0 is_stmt 1
 2044 072c 0000      		nop
 2045               	.L43:
 376:lp_solve_5.5/lp_params.c ****           }
 377:lp_solve_5.5/lp_params.c ****           if(k == elements) {
 2046               		.loc 1 377 0
 2047 072e 2985      		ldd r18,Y+9
 2048 0730 3A85      		ldd r19,Y+10
 2049 0732 8F85      		ldd r24,Y+15
 2050 0734 9889      		ldd r25,Y+16
 2051 0736 2817      		cp r18,r24
 2052 0738 3907      		cpc r19,r25
 2053 073a 01F4      		brne .L40
 378:lp_solve_5.5/lp_params.c ****             if(*buf)
 2054               		.loc 1 378 0
 2055 073c 8F8D      		ldd r24,Y+31
 2056 073e 8823      		tst r24
 2057 0740 01F0      		breq .L45
 379:lp_solve_5.5/lp_params.c ****               strcat(buf, " + ");
 2058               		.loc 1 379 0
 2059 0742 CE01      		movw r24,r28
 2060 0744 4F96      		adiw r24,31
 2061 0746 9C01      		movw r18,r24
 2062 0748 F901      		movw r30,r18
 2063               		0:
 2064 074a 0190      		ld __tmp_reg__,Z+
 2065 074c 0020      		tst __tmp_reg__
 2066 074e 01F4      		brne 0b
 2067 0750 CF01      		movw r24,r30
 2068 0752 0197      		sbiw r24,1
 2069 0754 821B      		sub r24,r18
 2070 0756 930B      		sbc r25,r19
 2071 0758 9E01      		movw r18,r28
 2072 075a 215E      		subi r18,-31
 2073 075c 3F4F      		sbci r19,-1
 2074 075e 820F      		add r24,r18
 2075 0760 931F      		adc r25,r19
 2076 0762 20E2      		ldi r18,lo8(32)
 2077 0764 3BE2      		ldi r19,lo8(43)
 2078 0766 FC01      		movw r30,r24
 2079 0768 3183      		std Z+1,r19
 2080 076a 2083      		st Z,r18
 2081 076c 20E2      		ldi r18,lo8(32)
 2082 076e 30E0      		ldi r19,0
 2083 0770 FC01      		movw r30,r24
 2084 0772 3383      		std Z+3,r19
 2085 0774 2283      		std Z+2,r18
 2086               	.L45:
 380:lp_solve_5.5/lp_params.c ****             strcat(buf, functions[i].values[j].svalue);
 2087               		.loc 1 380 0
 2088 0776 8D81      		ldd r24,Y+5
 2089 0778 9E81      		ldd r25,Y+6
 2090 077a 8295      		swap r24
 2091 077c 9295      		swap r25
 2092 077e 907F      		andi r25,0xf0
 2093 0780 9827      		eor r25,r24
 2094 0782 807F      		andi r24,0xf0
 2095 0784 9827      		eor r25,r24
 2096 0786 8050      		subi r24,lo8(-(functions+8))
 2097 0788 9040      		sbci r25,hi8(-(functions+8))
 2098 078a FC01      		movw r30,r24
 2099 078c 2081      		ld r18,Z
 2100 078e 3181      		ldd r19,Z+1
 2101 0790 8F81      		ldd r24,Y+7
 2102 0792 9885      		ldd r25,Y+8
 2103 0794 880F      		lsl r24
 2104 0796 991F      		rol r25
 2105 0798 880F      		lsl r24
 2106 079a 991F      		rol r25
 2107 079c 820F      		add r24,r18
 2108 079e 931F      		adc r25,r19
 2109 07a0 FC01      		movw r30,r24
 2110 07a2 2281      		ldd r18,Z+2
 2111 07a4 3381      		ldd r19,Z+3
 2112 07a6 CE01      		movw r24,r28
 2113 07a8 4F96      		adiw r24,31
 2114 07aa B901      		movw r22,r18
 2115 07ac 0E94 0000 		call strcat
 2116               	.L40:
 359:lp_solve_5.5/lp_params.c ****         value = functions[i].values[j].value;
 2117               		.loc 1 359 0 discriminator 2
 2118 07b0 8F81      		ldd r24,Y+7
 2119 07b2 9885      		ldd r25,Y+8
 2120 07b4 0196      		adiw r24,1
 2121 07b6 9887      		std Y+8,r25
 2122 07b8 8F83      		std Y+7,r24
 2123               	.L35:
 359:lp_solve_5.5/lp_params.c ****         value = functions[i].values[j].value;
 2124               		.loc 1 359 0 is_stmt 0 discriminator 1
 2125 07ba 2F81      		ldd r18,Y+7
 2126 07bc 3885      		ldd r19,Y+8
 2127 07be 8F85      		ldd r24,Y+15
 2128 07c0 9889      		ldd r25,Y+16
 2129 07c2 2817      		cp r18,r24
 2130 07c4 3907      		cpc r19,r25
 2131 07c6 04F4      		brge .+2
 2132 07c8 00C0      		rjmp .L46
 2133               	.L34:
 381:lp_solve_5.5/lp_params.c ****           }
 382:lp_solve_5.5/lp_params.c ****         }
 383:lp_solve_5.5/lp_params.c ****       }
 384:lp_solve_5.5/lp_params.c ****     }
 385:lp_solve_5.5/lp_params.c ****     if(functions[i].mask & WRITE_ACTIVE)
 2134               		.loc 1 385 0 is_stmt 1
 2135 07ca 8D81      		ldd r24,Y+5
 2136 07cc 9E81      		ldd r25,Y+6
 2137 07ce 8295      		swap r24
 2138 07d0 9295      		swap r25
 2139 07d2 907F      		andi r25,0xf0
 2140 07d4 9827      		eor r25,r24
 2141 07d6 807F      		andi r24,0xf0
 2142 07d8 9827      		eor r25,r24
 2143 07da 8050      		subi r24,lo8(-(functions+14))
 2144 07dc 9040      		sbci r25,hi8(-(functions+14))
 2145 07de FC01      		movw r30,r24
 2146 07e0 8081      		ld r24,Z
 2147 07e2 9181      		ldd r25,Z+1
 2148 07e4 8170      		andi r24,1
 2149 07e6 9927      		clr r25
 2150 07e8 892B      		or r24,r25
 2151 07ea 01F0      		breq .L47
 386:lp_solve_5.5/lp_params.c ****       par[0] = 0;
 2152               		.loc 1 386 0
 2153 07ec CE01      		movw r24,r28
 2154 07ee 815E      		subi r24,-31
 2155 07f0 9F4E      		sbci r25,-17
 2156 07f2 FC01      		movw r30,r24
 2157 07f4 1082      		st Z,__zero_reg__
 2158 07f6 00C0      		rjmp .L48
 2159               	.L47:
 387:lp_solve_5.5/lp_params.c ****     else
 388:lp_solve_5.5/lp_params.c ****       strcpy(par, ";");
 2160               		.loc 1 388 0
 2161 07f8 CE01      		movw r24,r28
 2162 07fa 815E      		subi r24,-31
 2163 07fc 9F4E      		sbci r25,-17
 2164 07fe 2BE3      		ldi r18,lo8(59)
 2165 0800 30E0      		ldi r19,0
 2166 0802 FC01      		movw r30,r24
 2167 0804 3183      		std Z+1,r19
 2168 0806 2083      		st Z,r18
 2169               	.L48:
 389:lp_solve_5.5/lp_params.c ****     strcat(par, functions[i].par);
 2170               		.loc 1 389 0
 2171 0808 8D81      		ldd r24,Y+5
 2172 080a 9E81      		ldd r25,Y+6
 2173 080c 8295      		swap r24
 2174 080e 9295      		swap r25
 2175 0810 907F      		andi r25,0xf0
 2176 0812 9827      		eor r25,r24
 2177 0814 807F      		andi r24,0xf0
 2178 0816 9827      		eor r25,r24
 2179 0818 8050      		subi r24,lo8(-(functions))
 2180 081a 9040      		sbci r25,hi8(-(functions))
 2181 081c FC01      		movw r30,r24
 2182 081e 2081      		ld r18,Z
 2183 0820 3181      		ldd r19,Z+1
 2184 0822 CE01      		movw r24,r28
 2185 0824 815E      		subi r24,-31
 2186 0826 9F4E      		sbci r25,-17
 2187 0828 B901      		movw r22,r18
 2188 082a 0E94 0000 		call strcat
 390:lp_solve_5.5/lp_params.c ****     ini_writedata(fp, STRLWR(par), buf);
 2189               		.loc 1 390 0
 2190 082e CE01      		movw r24,r28
 2191 0830 815E      		subi r24,-31
 2192 0832 9F4E      		sbci r25,-17
 2193 0834 0E94 0000 		call STRLWR
 2194 0838 BC01      		movw r22,r24
 2195 083a 9E01      		movw r18,r28
 2196 083c 215E      		subi r18,-31
 2197 083e 3F4F      		sbci r19,-1
 2198 0840 CE01      		movw r24,r28
 2199 0842 815C      		subi r24,-63
 2200 0844 9F4E      		sbci r25,-17
 2201 0846 FC01      		movw r30,r24
 2202 0848 8081      		ld r24,Z
 2203 084a 9181      		ldd r25,Z+1
 2204 084c A901      		movw r20,r18
 2205 084e 0E94 0000 		call ini_writedata
 2206 0852 00C0      		rjmp .L26
 2207               	.L50:
 324:lp_solve_5.5/lp_params.c ****       ret = functions[i].get_function.int_get_function(lp);
 2208               		.loc 1 324 0
 2209 0854 0000      		nop
 2210 0856 00C0      		rjmp .L26
 2211               	.L51:
 329:lp_solve_5.5/lp_params.c ****       ret = functions[i].get_function.long_get_function(lp);
 2212               		.loc 1 329 0
 2213 0858 0000      		nop
 2214 085a 00C0      		rjmp .L26
 2215               	.L52:
 334:lp_solve_5.5/lp_params.c ****       ret = (int) functions[i].get_function.MYBOOL_get_function(lp);
 2216               		.loc 1 334 0
 2217 085c 0000      		nop
 2218 085e 00C0      		rjmp .L26
 2219               	.L53:
 339:lp_solve_5.5/lp_params.c ****       a = functions[i].get_function.REAL_get_function(lp);
 2220               		.loc 1 339 0
 2221 0860 0000      		nop
 2222               	.L26:
 320:lp_solve_5.5/lp_params.c ****     switch(functions[i].type) {
 2223               		.loc 1 320 0 discriminator 2
 2224 0862 8D81      		ldd r24,Y+5
 2225 0864 9E81      		ldd r25,Y+6
 2226 0866 0196      		adiw r24,1
 2227 0868 9E83      		std Y+6,r25
 2228 086a 8D83      		std Y+5,r24
 2229               	.L18:
 320:lp_solve_5.5/lp_params.c ****     switch(functions[i].type) {
 2230               		.loc 1 320 0 is_stmt 0 discriminator 1
 2231 086c 8D81      		ldd r24,Y+5
 2232 086e 9E81      		ldd r25,Y+6
 2233 0870 8197      		sbiw r24,33
 2234 0872 00F4      		brsh .+2
 2235 0874 00C0      		rjmp .L49
 391:lp_solve_5.5/lp_params.c ****   }
 392:lp_solve_5.5/lp_params.c **** }
 2236               		.loc 1 392 0 is_stmt 1
 2237 0876 0000      		nop
 2238               	/* epilogue start */
 2239 0878 CC5B      		subi r28,-68
 2240 087a DF4E      		sbci r29,-17
 2241 087c 0FB6      		in __tmp_reg__,__SREG__
 2242 087e F894      		cli
 2243 0880 DEBF      		out __SP_H__,r29
 2244 0882 0FBE      		out __SREG__,__tmp_reg__
 2245 0884 CDBF      		out __SP_L__,r28
 2246 0886 DF91      		pop r29
 2247 0888 CF91      		pop r28
 2248 088a 0895      		ret
 2249               		.cfi_endproc
 2250               	.LFE15:
 2252               		.section	.rodata
 2253               	.LC144:
 2254 0875 4465 6661 		.string	"Default"
 2254      756C 7400 
 2255               		.text
 2257               	readoptions:
 2258               	.LFB16:
 393:lp_solve_5.5/lp_params.c **** 
 394:lp_solve_5.5/lp_params.c **** static void readoptions(char *options, char **header)
 395:lp_solve_5.5/lp_params.c **** {
 2259               		.loc 1 395 0
 2260               		.cfi_startproc
 2261 088c CF93      		push r28
 2262               	.LCFI36:
 2263               		.cfi_def_cfa_offset 3
 2264               		.cfi_offset 28, -2
 2265 088e DF93      		push r29
 2266               	.LCFI37:
 2267               		.cfi_def_cfa_offset 4
 2268               		.cfi_offset 29, -3
 2269 0890 CDB7      		in r28,__SP_L__
 2270 0892 DEB7      		in r29,__SP_H__
 2271               	.LCFI38:
 2272               		.cfi_def_cfa_register 28
 2273 0894 2897      		sbiw r28,8
 2274               	.LCFI39:
 2275               		.cfi_def_cfa_offset 12
 2276 0896 0FB6      		in __tmp_reg__,__SREG__
 2277 0898 F894      		cli
 2278 089a DEBF      		out __SP_H__,r29
 2279 089c 0FBE      		out __SREG__,__tmp_reg__
 2280 089e CDBF      		out __SP_L__,r28
 2281               	/* prologue: function */
 2282               	/* frame size = 8 */
 2283               	/* stack size = 10 */
 2284               	.L__stack_usage = 10
 2285 08a0 9E83      		std Y+6,r25
 2286 08a2 8D83      		std Y+5,r24
 2287 08a4 7887      		std Y+8,r23
 2288 08a6 6F83      		std Y+7,r22
 396:lp_solve_5.5/lp_params.c ****   char *ptr1, *ptr2;
 397:lp_solve_5.5/lp_params.c **** 
 398:lp_solve_5.5/lp_params.c ****   if(options != NULL) {
 2289               		.loc 1 398 0
 2290 08a8 8D81      		ldd r24,Y+5
 2291 08aa 9E81      		ldd r25,Y+6
 2292 08ac 892B      		or r24,r25
 2293 08ae 01F4      		brne .+2
 2294 08b0 00C0      		rjmp .L56
 399:lp_solve_5.5/lp_params.c ****     ptr1 = options;
 2295               		.loc 1 399 0
 2296 08b2 8D81      		ldd r24,Y+5
 2297 08b4 9E81      		ldd r25,Y+6
 2298 08b6 9A83      		std Y+2,r25
 2299 08b8 8983      		std Y+1,r24
 400:lp_solve_5.5/lp_params.c ****     while(*ptr1) {
 2300               		.loc 1 400 0
 2301 08ba 00C0      		rjmp .L57
 2302               	.L65:
 401:lp_solve_5.5/lp_params.c ****       ptr2 = strchr(ptr1, '-');
 2303               		.loc 1 401 0
 2304 08bc 8981      		ldd r24,Y+1
 2305 08be 9A81      		ldd r25,Y+2
 2306 08c0 6DE2      		ldi r22,lo8(45)
 2307 08c2 70E0      		ldi r23,0
 2308 08c4 0E94 0000 		call strchr
 2309 08c8 9C83      		std Y+4,r25
 2310 08ca 8B83      		std Y+3,r24
 402:lp_solve_5.5/lp_params.c ****       if(ptr2 == NULL)
 2311               		.loc 1 402 0
 2312 08cc 8B81      		ldd r24,Y+3
 2313 08ce 9C81      		ldd r25,Y+4
 2314 08d0 892B      		or r24,r25
 2315 08d2 01F4      		brne .+2
 2316 08d4 00C0      		rjmp .L67
 403:lp_solve_5.5/lp_params.c ****         break;
 404:lp_solve_5.5/lp_params.c ****       ptr2++;
 2317               		.loc 1 404 0
 2318 08d6 8B81      		ldd r24,Y+3
 2319 08d8 9C81      		ldd r25,Y+4
 2320 08da 0196      		adiw r24,1
 2321 08dc 9C83      		std Y+4,r25
 2322 08de 8B83      		std Y+3,r24
 405:lp_solve_5.5/lp_params.c ****       if(tolower((unsigned char) *ptr2) == 'h') {
 2323               		.loc 1 405 0
 2324 08e0 8B81      		ldd r24,Y+3
 2325 08e2 9C81      		ldd r25,Y+4
 2326 08e4 FC01      		movw r30,r24
 2327 08e6 8081      		ld r24,Z
 2328 08e8 882F      		mov r24,r24
 2329 08ea 90E0      		ldi r25,0
 2330 08ec 0E94 0000 		call tolower
 2331 08f0 8836      		cpi r24,104
 2332 08f2 9105      		cpc r25,__zero_reg__
 2333 08f4 01F0      		breq .+2
 2334 08f6 00C0      		rjmp .L57
 406:lp_solve_5.5/lp_params.c ****         for(++ptr2; (*ptr2) && (isspace(*ptr2)); ptr2++);
 2335               		.loc 1 406 0
 2336 08f8 8B81      		ldd r24,Y+3
 2337 08fa 9C81      		ldd r25,Y+4
 2338 08fc 0196      		adiw r24,1
 2339 08fe 9C83      		std Y+4,r25
 2340 0900 8B83      		std Y+3,r24
 2341 0902 00C0      		rjmp .L59
 2342               	.L61:
 2343               		.loc 1 406 0 is_stmt 0 discriminator 4
 2344 0904 8B81      		ldd r24,Y+3
 2345 0906 9C81      		ldd r25,Y+4
 2346 0908 0196      		adiw r24,1
 2347 090a 9C83      		std Y+4,r25
 2348 090c 8B83      		std Y+3,r24
 2349               	.L59:
 2350               		.loc 1 406 0 discriminator 1
 2351 090e 8B81      		ldd r24,Y+3
 2352 0910 9C81      		ldd r25,Y+4
 2353 0912 FC01      		movw r30,r24
 2354 0914 8081      		ld r24,Z
 2355 0916 8823      		tst r24
 2356 0918 01F0      		breq .L60
 2357               		.loc 1 406 0 discriminator 3
 2358 091a 8B81      		ldd r24,Y+3
 2359 091c 9C81      		ldd r25,Y+4
 2360 091e FC01      		movw r30,r24
 2361 0920 8081      		ld r24,Z
 2362 0922 882F      		mov r24,r24
 2363 0924 90E0      		ldi r25,0
 2364 0926 0E94 0000 		call isspace
 2365 092a 892B      		or r24,r25
 2366 092c 01F4      		brne .L61
 2367               	.L60:
 407:lp_solve_5.5/lp_params.c ****         for(ptr1 = ptr2; (*ptr1) && (!isspace(*ptr1)); ptr1++);
 2368               		.loc 1 407 0 is_stmt 1
 2369 092e 8B81      		ldd r24,Y+3
 2370 0930 9C81      		ldd r25,Y+4
 2371 0932 9A83      		std Y+2,r25
 2372 0934 8983      		std Y+1,r24
 2373 0936 00C0      		rjmp .L62
 2374               	.L64:
 2375               		.loc 1 407 0 is_stmt 0 discriminator 4
 2376 0938 8981      		ldd r24,Y+1
 2377 093a 9A81      		ldd r25,Y+2
 2378 093c 0196      		adiw r24,1
 2379 093e 9A83      		std Y+2,r25
 2380 0940 8983      		std Y+1,r24
 2381               	.L62:
 2382               		.loc 1 407 0 discriminator 1
 2383 0942 8981      		ldd r24,Y+1
 2384 0944 9A81      		ldd r25,Y+2
 2385 0946 FC01      		movw r30,r24
 2386 0948 8081      		ld r24,Z
 2387 094a 8823      		tst r24
 2388 094c 01F0      		breq .L63
 2389               		.loc 1 407 0 discriminator 3
 2390 094e 8981      		ldd r24,Y+1
 2391 0950 9A81      		ldd r25,Y+2
 2392 0952 FC01      		movw r30,r24
 2393 0954 8081      		ld r24,Z
 2394 0956 882F      		mov r24,r24
 2395 0958 90E0      		ldi r25,0
 2396 095a 0E94 0000 		call isspace
 2397 095e 892B      		or r24,r25
 2398 0960 01F0      		breq .L64
 2399               	.L63:
 408:lp_solve_5.5/lp_params.c ****         *header = (char *) calloc(1 + (int) (ptr1 - ptr2), 1);
 2400               		.loc 1 408 0 is_stmt 1
 2401 0962 2981      		ldd r18,Y+1
 2402 0964 3A81      		ldd r19,Y+2
 2403 0966 8B81      		ldd r24,Y+3
 2404 0968 9C81      		ldd r25,Y+4
 2405 096a A901      		movw r20,r18
 2406 096c 481B      		sub r20,r24
 2407 096e 590B      		sbc r21,r25
 2408 0970 CA01      		movw r24,r20
 2409 0972 0196      		adiw r24,1
 2410 0974 61E0      		ldi r22,lo8(1)
 2411 0976 70E0      		ldi r23,0
 2412 0978 0E94 0000 		call calloc
 2413 097c 9C01      		movw r18,r24
 2414 097e 8F81      		ldd r24,Y+7
 2415 0980 9885      		ldd r25,Y+8
 2416 0982 FC01      		movw r30,r24
 2417 0984 3183      		std Z+1,r19
 2418 0986 2083      		st Z,r18
 409:lp_solve_5.5/lp_params.c ****         memcpy(*header, ptr2, (int) (ptr1 - ptr2));
 2419               		.loc 1 409 0
 2420 0988 2981      		ldd r18,Y+1
 2421 098a 3A81      		ldd r19,Y+2
 2422 098c 8B81      		ldd r24,Y+3
 2423 098e 9C81      		ldd r25,Y+4
 2424 0990 A901      		movw r20,r18
 2425 0992 481B      		sub r20,r24
 2426 0994 590B      		sbc r21,r25
 2427 0996 CA01      		movw r24,r20
 2428 0998 AC01      		movw r20,r24
 2429 099a 8F81      		ldd r24,Y+7
 2430 099c 9885      		ldd r25,Y+8
 2431 099e FC01      		movw r30,r24
 2432 09a0 8081      		ld r24,Z
 2433 09a2 9181      		ldd r25,Z+1
 2434 09a4 2B81      		ldd r18,Y+3
 2435 09a6 3C81      		ldd r19,Y+4
 2436 09a8 B901      		movw r22,r18
 2437 09aa 0E94 0000 		call memcpy
 2438               	.L57:
 400:lp_solve_5.5/lp_params.c ****       ptr2 = strchr(ptr1, '-');
 2439               		.loc 1 400 0
 2440 09ae 8981      		ldd r24,Y+1
 2441 09b0 9A81      		ldd r25,Y+2
 2442 09b2 FC01      		movw r30,r24
 2443 09b4 8081      		ld r24,Z
 2444 09b6 8823      		tst r24
 2445 09b8 01F0      		breq .+2
 2446 09ba 00C0      		rjmp .L65
 2447 09bc 00C0      		rjmp .L56
 2448               	.L67:
 403:lp_solve_5.5/lp_params.c ****       ptr2++;
 2449               		.loc 1 403 0
 2450 09be 0000      		nop
 2451               	.L56:
 410:lp_solve_5.5/lp_params.c ****       }
 411:lp_solve_5.5/lp_params.c ****     }
 412:lp_solve_5.5/lp_params.c ****   }
 413:lp_solve_5.5/lp_params.c **** 
 414:lp_solve_5.5/lp_params.c ****   if(*header == NULL)
 2452               		.loc 1 414 0
 2453 09c0 8F81      		ldd r24,Y+7
 2454 09c2 9885      		ldd r25,Y+8
 2455 09c4 FC01      		movw r30,r24
 2456 09c6 8081      		ld r24,Z
 2457 09c8 9181      		ldd r25,Z+1
 2458 09ca 892B      		or r24,r25
 2459 09cc 01F4      		brne .L68
 415:lp_solve_5.5/lp_params.c ****     *header = strdup("Default");
 2460               		.loc 1 415 0
 2461 09ce 80E0      		ldi r24,lo8(.LC144)
 2462 09d0 90E0      		ldi r25,hi8(.LC144)
 2463 09d2 0E94 0000 		call strdup
 2464 09d6 9C01      		movw r18,r24
 2465 09d8 8F81      		ldd r24,Y+7
 2466 09da 9885      		ldd r25,Y+8
 2467 09dc FC01      		movw r30,r24
 2468 09de 3183      		std Z+1,r19
 2469 09e0 2083      		st Z,r18
 2470               	.L68:
 416:lp_solve_5.5/lp_params.c **** }
 2471               		.loc 1 416 0
 2472 09e2 0000      		nop
 2473               	/* epilogue start */
 2474 09e4 2896      		adiw r28,8
 2475 09e6 0FB6      		in __tmp_reg__,__SREG__
 2476 09e8 F894      		cli
 2477 09ea DEBF      		out __SP_H__,r29
 2478 09ec 0FBE      		out __SREG__,__tmp_reg__
 2479 09ee CDBF      		out __SP_L__,r28
 2480 09f0 DF91      		pop r29
 2481 09f2 CF91      		pop r28
 2482 09f4 0895      		ret
 2483               		.cfi_endproc
 2484               	.LFE16:
 2486               		.section	.rodata
 2487               	.LC145:
 2488 087d 7265 6164 		.string	"read_params: No equal sign on line %d\n"
 2488      5F70 6172 
 2488      616D 733A 
 2488      204E 6F20 
 2488      6571 7561 
 2489               	.LC146:
 2490 08a4 7265 6164 		.string	"read_params: No parameter name before equal sign on line %d\n"
 2490      5F70 6172 
 2490      616D 733A 
 2490      204E 6F20 
 2490      7061 7261 
 2491               	.LC147:
 2492 08e1 7265 6164 		.string	"read_params: Unknown parameter name (%s) before equal sign on line %d\n"
 2492      5F70 6172 
 2492      616D 733A 
 2492      2055 6E6B 
 2492      6E6F 776E 
 2493               	.LC148:
 2494 0928 7265 6164 		.string	"read_params: Invalid integer value on line %d\n"
 2494      5F70 6172 
 2494      616D 733A 
 2494      2049 6E76 
 2494      616C 6964 
 2495               	.LC149:
 2496 0957 7265 6164 		.string	"read_params: Invalid real value on line %d\n"
 2496      5F70 6172 
 2496      616D 733A 
 2496      2049 6E76 
 2496      616C 6964 
 2497               	.LC150:
 2498 0983 7265 6164 		.string	"read_params: Invalid parameter name (%s) on line %d\n"
 2498      5F70 6172 
 2498      616D 733A 
 2498      2049 6E76 
 2498      616C 6964 
 2499               	.LC151:
 2500 09b8 7265 6164 		.string	"read_params: Inappropriate parameter name (%s) on line %d\n"
 2500      5F70 6172 
 2500      616D 733A 
 2500      2049 6E61 
 2500      7070 726F 
 2501               		.text
 2502               	.global	read_params
 2504               	read_params:
 2505               	.LFB17:
 417:lp_solve_5.5/lp_params.c **** 
 418:lp_solve_5.5/lp_params.c **** // MYBOOL __WINAPI write_params(lprec *lp, char *filename, char *options)
 419:lp_solve_5.5/lp_params.c **** // {
 420:lp_solve_5.5/lp_params.c **** //   int k, ret, params_written;
 421:lp_solve_5.5/lp_params.c **** //   FILE *fp, *fp0;
 422:lp_solve_5.5/lp_params.c **** //   int state = 0, looping, newline;
 423:lp_solve_5.5/lp_params.c **** //   char buf[4096], *filename0, *ptr1, *ptr2, *header = NULL;
 424:lp_solve_5.5/lp_params.c **** // 
 425:lp_solve_5.5/lp_params.c **** //   readoptions(options, &header);
 426:lp_solve_5.5/lp_params.c **** // 
 427:lp_solve_5.5/lp_params.c **** //   k = (int) strlen(filename);
 428:lp_solve_5.5/lp_params.c **** //   filename0 = (char *) malloc(k + 1 + 1);
 429:lp_solve_5.5/lp_params.c **** //   strcpy(filename0, filename);
 430:lp_solve_5.5/lp_params.c **** //   ptr1 = strrchr(filename0, '.');
 431:lp_solve_5.5/lp_params.c **** //   ptr2 = strrchr(filename0, '\\');
 432:lp_solve_5.5/lp_params.c **** //   if((ptr1 == NULL) || ((ptr2 != NULL) && (ptr1 < ptr2)))
 433:lp_solve_5.5/lp_params.c **** //     ptr1 = filename0 + k;
 434:lp_solve_5.5/lp_params.c **** //   memmove(ptr1 + 1, ptr1, k + 1 - (int) (ptr1 - filename0));
 435:lp_solve_5.5/lp_params.c **** //   ptr1[0] = '_';
 436:lp_solve_5.5/lp_params.c **** //   if(rename(filename, filename0)) {
 437:lp_solve_5.5/lp_params.c **** //     switch(errno) {
 438:lp_solve_5.5/lp_params.c **** //     case ENOENT: /* File or path specified by oldname not found */
 439:lp_solve_5.5/lp_params.c **** //       FREE(filename0);
 440:lp_solve_5.5/lp_params.c **** //       filename0 = NULL;
 441:lp_solve_5.5/lp_params.c **** //       break;
 442:lp_solve_5.5/lp_params.c **** //     case EACCES: /* File or directory specified by newname already exists or could not be create
 443:lp_solve_5.5/lp_params.c **** //       FREE(filename0);
 444:lp_solve_5.5/lp_params.c **** //       FREE(header);
 445:lp_solve_5.5/lp_params.c **** //       return(FALSE);
 446:lp_solve_5.5/lp_params.c **** //       break;
 447:lp_solve_5.5/lp_params.c **** //     }
 448:lp_solve_5.5/lp_params.c **** //   }
 449:lp_solve_5.5/lp_params.c **** // 
 450:lp_solve_5.5/lp_params.c **** //   if((fp = ini_create(filename)) == NULL)
 451:lp_solve_5.5/lp_params.c **** //     ret = FALSE;
 452:lp_solve_5.5/lp_params.c **** //   else {
 453:lp_solve_5.5/lp_params.c **** //     params_written = FALSE;
 454:lp_solve_5.5/lp_params.c **** //     newline = TRUE;
 455:lp_solve_5.5/lp_params.c **** //     if(filename0 != NULL) {
 456:lp_solve_5.5/lp_params.c **** //       fp0 = ini_open(filename0);
 457:lp_solve_5.5/lp_params.c **** //       if(fp0 == NULL) {
 458:lp_solve_5.5/lp_params.c **** //         rename(filename0, filename);
 459:lp_solve_5.5/lp_params.c **** //         FREE(filename0);
 460:lp_solve_5.5/lp_params.c **** //         FREE(header);
 461:lp_solve_5.5/lp_params.c **** //         return(FALSE);
 462:lp_solve_5.5/lp_params.c **** //       }
 463:lp_solve_5.5/lp_params.c **** //       looping = TRUE;
 464:lp_solve_5.5/lp_params.c **** //       while(looping) {
 465:lp_solve_5.5/lp_params.c **** //         switch(ini_readdata(fp0, buf, sizeof(buf), TRUE)) {
 466:lp_solve_5.5/lp_params.c **** //         case 0: /* End of file */
 467:lp_solve_5.5/lp_params.c **** //           looping = FALSE;
 468:lp_solve_5.5/lp_params.c **** //           break;
 469:lp_solve_5.5/lp_params.c **** //         case 1: /* header */
 470:lp_solve_5.5/lp_params.c **** //           ptr1 = strdup(buf);
 471:lp_solve_5.5/lp_params.c **** //           STRUPR(buf);
 472:lp_solve_5.5/lp_params.c **** //           ptr2 = strdup(header);
 473:lp_solve_5.5/lp_params.c **** //           STRUPR(ptr2);
 474:lp_solve_5.5/lp_params.c **** //           if(strcmp(buf, ptr2) == 0) {
 475:lp_solve_5.5/lp_params.c **** //             write_params1(lp, fp, ptr1, newline);
 476:lp_solve_5.5/lp_params.c **** //             params_written = TRUE;
 477:lp_solve_5.5/lp_params.c **** //             newline = TRUE;
 478:lp_solve_5.5/lp_params.c **** //             state = 1;
 479:lp_solve_5.5/lp_params.c **** //           }
 480:lp_solve_5.5/lp_params.c **** //           else {
 481:lp_solve_5.5/lp_params.c **** //             state = 0;
 482:lp_solve_5.5/lp_params.c **** //             ini_writeheader(fp, ptr1, newline);
 483:lp_solve_5.5/lp_params.c **** //             newline = TRUE;
 484:lp_solve_5.5/lp_params.c **** //           }
 485:lp_solve_5.5/lp_params.c **** //           FREE(ptr2);
 486:lp_solve_5.5/lp_params.c **** //           FREE(ptr1);
 487:lp_solve_5.5/lp_params.c **** //           break;
 488:lp_solve_5.5/lp_params.c **** //         case 2: /* data */
 489:lp_solve_5.5/lp_params.c **** //           if(state == 0) {
 490:lp_solve_5.5/lp_params.c **** //             ini_writedata(fp, NULL, buf);
 491:lp_solve_5.5/lp_params.c **** //             newline = (*buf != 0);
 492:lp_solve_5.5/lp_params.c **** //           }
 493:lp_solve_5.5/lp_params.c **** //           break;
 494:lp_solve_5.5/lp_params.c **** //         }
 495:lp_solve_5.5/lp_params.c **** //       }
 496:lp_solve_5.5/lp_params.c **** //       ini_close(fp0);
 497:lp_solve_5.5/lp_params.c **** //     }
 498:lp_solve_5.5/lp_params.c **** // 
 499:lp_solve_5.5/lp_params.c **** //     if(!params_written)
 500:lp_solve_5.5/lp_params.c **** //       write_params1(lp, fp, header, newline);
 501:lp_solve_5.5/lp_params.c **** // 
 502:lp_solve_5.5/lp_params.c **** //     ini_close(fp);
 503:lp_solve_5.5/lp_params.c **** //     ret = TRUE;
 504:lp_solve_5.5/lp_params.c **** //   }
 505:lp_solve_5.5/lp_params.c **** // 
 506:lp_solve_5.5/lp_params.c **** //   if(filename0 != NULL) {
 507:lp_solve_5.5/lp_params.c **** //     remove(filename0);
 508:lp_solve_5.5/lp_params.c **** //     FREE(filename0);
 509:lp_solve_5.5/lp_params.c **** //   }
 510:lp_solve_5.5/lp_params.c **** // 
 511:lp_solve_5.5/lp_params.c **** //   FREE(header);
 512:lp_solve_5.5/lp_params.c **** // 
 513:lp_solve_5.5/lp_params.c **** //   return( (MYBOOL) ret );
 514:lp_solve_5.5/lp_params.c **** // }
 515:lp_solve_5.5/lp_params.c **** 
 516:lp_solve_5.5/lp_params.c **** 
 517:lp_solve_5.5/lp_params.c **** MYBOOL __WINAPI read_params(lprec *lp, char *filename, char *options)
 518:lp_solve_5.5/lp_params.c **** {
 2506               		.loc 1 518 0
 2507               		.cfi_startproc
 2508 09f6 CF93      		push r28
 2509               	.LCFI40:
 2510               		.cfi_def_cfa_offset 3
 2511               		.cfi_offset 28, -2
 2512 09f8 DF93      		push r29
 2513               	.LCFI41:
 2514               		.cfi_def_cfa_offset 4
 2515               		.cfi_offset 29, -3
 2516 09fa CDB7      		in r28,__SP_L__
 2517 09fc DEB7      		in r29,__SP_H__
 2518               	.LCFI42:
 2519               		.cfi_def_cfa_register 28
 2520 09fe CE52      		subi r28,46
 2521 0a00 D041      		sbci r29,16
 2522               	.LCFI43:
 2523               		.cfi_def_cfa_offset 4146
 2524 0a02 0FB6      		in __tmp_reg__,__SREG__
 2525 0a04 F894      		cli
 2526 0a06 DEBF      		out __SP_H__,r29
 2527 0a08 0FBE      		out __SREG__,__tmp_reg__
 2528 0a0a CDBF      		out __SP_L__,r28
 2529               	/* prologue: function */
 2530               	/* frame size = 4142 */
 2531               	/* stack size = 4144 */
 2532               	.L__stack_usage = 4144
 2533 0a0c 9E01      		movw r18,r28
 2534 0a0e 295D      		subi r18,-39
 2535 0a10 3F4E      		sbci r19,-17
 2536 0a12 F901      		movw r30,r18
 2537 0a14 9183      		std Z+1,r25
 2538 0a16 8083      		st Z,r24
 2539 0a18 CE01      		movw r24,r28
 2540 0a1a 875D      		subi r24,-41
 2541 0a1c 9F4E      		sbci r25,-17
 2542 0a1e FC01      		movw r30,r24
 2543 0a20 7183      		std Z+1,r23
 2544 0a22 6083      		st Z,r22
 2545 0a24 CE01      		movw r24,r28
 2546 0a26 855D      		subi r24,-43
 2547 0a28 9F4E      		sbci r25,-17
 2548 0a2a FC01      		movw r30,r24
 2549 0a2c 5183      		std Z+1,r21
 2550 0a2e 4083      		st Z,r20
 519:lp_solve_5.5/lp_params.c ****   int ret, looping, line;
 520:lp_solve_5.5/lp_params.c ****   FILE *fp;
 521:lp_solve_5.5/lp_params.c ****   hashtable *hashfunctions, *hashparameters;
 522:lp_solve_5.5/lp_params.c ****   hashelem *hp;
 523:lp_solve_5.5/lp_params.c ****   int i, j, elements, n, intvalue, state = 0;
 2551               		.loc 1 523 0
 2552 0a30 188A      		std Y+16,__zero_reg__
 2553 0a32 1F86      		std Y+15,__zero_reg__
 524:lp_solve_5.5/lp_params.c ****   REAL REALvalue;
 525:lp_solve_5.5/lp_params.c ****   char buf[4096], *header = NULL, *ptr, *ptr1, *ptr2;
 2554               		.loc 1 525 0
 2555 0a34 CE01      		movw r24,r28
 2556 0a36 8D5D      		subi r24,-35
 2557 0a38 9F4E      		sbci r25,-17
 2558 0a3a FC01      		movw r30,r24
 2559 0a3c 1182      		std Z+1,__zero_reg__
 2560 0a3e 1082      		st Z,__zero_reg__
 526:lp_solve_5.5/lp_params.c **** 
 527:lp_solve_5.5/lp_params.c ****   if((fp = ini_open(filename)) == NULL)
 2561               		.loc 1 527 0
 2562 0a40 CE01      		movw r24,r28
 2563 0a42 875D      		subi r24,-41
 2564 0a44 9F4E      		sbci r25,-17
 2565 0a46 FC01      		movw r30,r24
 2566 0a48 8081      		ld r24,Z
 2567 0a4a 9181      		ldd r25,Z+1
 2568 0a4c 0E94 0000 		call ini_open
 2569 0a50 9A8F      		std Y+26,r25
 2570 0a52 898F      		std Y+25,r24
 2571 0a54 898D      		ldd r24,Y+25
 2572 0a56 9A8D      		ldd r25,Y+26
 2573 0a58 892B      		or r24,r25
 2574 0a5a 01F4      		brne .L70
 528:lp_solve_5.5/lp_params.c ****     ret = FALSE;
 2575               		.loc 1 528 0
 2576 0a5c 1A82      		std Y+2,__zero_reg__
 2577 0a5e 1982      		std Y+1,__zero_reg__
 2578 0a60 00C0      		rjmp .L71
 2579               	.L70:
 529:lp_solve_5.5/lp_params.c ****   else {
 530:lp_solve_5.5/lp_params.c ****     /* create hashtable of all callable commands to find them quickly */
 531:lp_solve_5.5/lp_params.c ****     hashfunctions = create_hash_table(sizeof(functions) / sizeof(*functions), 0);
 2580               		.loc 1 531 0
 2581 0a62 60E0      		ldi r22,0
 2582 0a64 70E0      		ldi r23,0
 2583 0a66 81E2      		ldi r24,lo8(33)
 2584 0a68 90E0      		ldi r25,0
 2585 0a6a 0E94 0000 		call create_hash_table
 2586 0a6e 9C8F      		std Y+28,r25
 2587 0a70 8B8F      		std Y+27,r24
 532:lp_solve_5.5/lp_params.c ****     for (n = 0, i = 0; i < (int) (sizeof(functions)/sizeof(*functions)); i++) {
 2588               		.loc 1 532 0
 2589 0a72 1C86      		std Y+12,__zero_reg__
 2590 0a74 1B86      		std Y+11,__zero_reg__
 2591 0a76 1886      		std Y+8,__zero_reg__
 2592 0a78 1F82      		std Y+7,__zero_reg__
 2593 0a7a 00C0      		rjmp .L72
 2594               	.L74:
 533:lp_solve_5.5/lp_params.c ****       puthash(functions[i].par, i, NULL, hashfunctions);
 2595               		.loc 1 533 0
 2596 0a7c 8F81      		ldd r24,Y+7
 2597 0a7e 9885      		ldd r25,Y+8
 2598 0a80 8295      		swap r24
 2599 0a82 9295      		swap r25
 2600 0a84 907F      		andi r25,0xf0
 2601 0a86 9827      		eor r25,r24
 2602 0a88 807F      		andi r24,0xf0
 2603 0a8a 9827      		eor r25,r24
 2604 0a8c 8050      		subi r24,lo8(-(functions))
 2605 0a8e 9040      		sbci r25,hi8(-(functions))
 2606 0a90 FC01      		movw r30,r24
 2607 0a92 8081      		ld r24,Z
 2608 0a94 9181      		ldd r25,Z+1
 2609 0a96 2B8D      		ldd r18,Y+27
 2610 0a98 3C8D      		ldd r19,Y+28
 2611 0a9a 6F81      		ldd r22,Y+7
 2612 0a9c 7885      		ldd r23,Y+8
 2613 0a9e 40E0      		ldi r20,0
 2614 0aa0 50E0      		ldi r21,0
 2615 0aa2 0E94 0000 		call puthash
 534:lp_solve_5.5/lp_params.c ****       if(functions[i].values != NULL)
 2616               		.loc 1 534 0
 2617 0aa6 8F81      		ldd r24,Y+7
 2618 0aa8 9885      		ldd r25,Y+8
 2619 0aaa 8295      		swap r24
 2620 0aac 9295      		swap r25
 2621 0aae 907F      		andi r25,0xf0
 2622 0ab0 9827      		eor r25,r24
 2623 0ab2 807F      		andi r24,0xf0
 2624 0ab4 9827      		eor r25,r24
 2625 0ab6 8050      		subi r24,lo8(-(functions+8))
 2626 0ab8 9040      		sbci r25,hi8(-(functions+8))
 2627 0aba FC01      		movw r30,r24
 2628 0abc 8081      		ld r24,Z
 2629 0abe 9181      		ldd r25,Z+1
 2630 0ac0 892B      		or r24,r25
 2631 0ac2 01F0      		breq .L73
 535:lp_solve_5.5/lp_params.c ****         n += functions[i].elements;
 2632               		.loc 1 535 0
 2633 0ac4 8F81      		ldd r24,Y+7
 2634 0ac6 9885      		ldd r25,Y+8
 2635 0ac8 8295      		swap r24
 2636 0aca 9295      		swap r25
 2637 0acc 907F      		andi r25,0xf0
 2638 0ace 9827      		eor r25,r24
 2639 0ad0 807F      		andi r24,0xf0
 2640 0ad2 9827      		eor r25,r24
 2641 0ad4 8050      		subi r24,lo8(-(functions+10))
 2642 0ad6 9040      		sbci r25,hi8(-(functions+10))
 2643 0ad8 FC01      		movw r30,r24
 2644 0ada 8081      		ld r24,Z
 2645 0adc 9181      		ldd r25,Z+1
 2646 0ade 2B85      		ldd r18,Y+11
 2647 0ae0 3C85      		ldd r19,Y+12
 2648 0ae2 820F      		add r24,r18
 2649 0ae4 931F      		adc r25,r19
 2650 0ae6 9C87      		std Y+12,r25
 2651 0ae8 8B87      		std Y+11,r24
 2652               	.L73:
 532:lp_solve_5.5/lp_params.c ****       puthash(functions[i].par, i, NULL, hashfunctions);
 2653               		.loc 1 532 0 discriminator 2
 2654 0aea 8F81      		ldd r24,Y+7
 2655 0aec 9885      		ldd r25,Y+8
 2656 0aee 0196      		adiw r24,1
 2657 0af0 9887      		std Y+8,r25
 2658 0af2 8F83      		std Y+7,r24
 2659               	.L72:
 532:lp_solve_5.5/lp_params.c ****       puthash(functions[i].par, i, NULL, hashfunctions);
 2660               		.loc 1 532 0 is_stmt 0 discriminator 1
 2661 0af4 8F81      		ldd r24,Y+7
 2662 0af6 9885      		ldd r25,Y+8
 2663 0af8 8197      		sbiw r24,33
 2664 0afa 04F4      		brge .+2
 2665 0afc 00C0      		rjmp .L74
 536:lp_solve_5.5/lp_params.c ****     }
 537:lp_solve_5.5/lp_params.c ****     /* create hashtable of all arguments to find them quickly */
 538:lp_solve_5.5/lp_params.c ****     hashparameters = create_hash_table(n, 0);
 2666               		.loc 1 538 0 is_stmt 1
 2667 0afe 8B85      		ldd r24,Y+11
 2668 0b00 9C85      		ldd r25,Y+12
 2669 0b02 60E0      		ldi r22,0
 2670 0b04 70E0      		ldi r23,0
 2671 0b06 0E94 0000 		call create_hash_table
 2672 0b0a 9E8F      		std Y+30,r25
 2673 0b0c 8D8F      		std Y+29,r24
 539:lp_solve_5.5/lp_params.c ****     for (n = 0, i = 0; i < (int) (sizeof(functions)/sizeof(*functions)); i++) {
 2674               		.loc 1 539 0
 2675 0b0e 1C86      		std Y+12,__zero_reg__
 2676 0b10 1B86      		std Y+11,__zero_reg__
 2677 0b12 1886      		std Y+8,__zero_reg__
 2678 0b14 1F82      		std Y+7,__zero_reg__
 2679 0b16 00C0      		rjmp .L75
 2680               	.L80:
 540:lp_solve_5.5/lp_params.c ****       if(functions[i].values != NULL) {
 2681               		.loc 1 540 0
 2682 0b18 8F81      		ldd r24,Y+7
 2683 0b1a 9885      		ldd r25,Y+8
 2684 0b1c 8295      		swap r24
 2685 0b1e 9295      		swap r25
 2686 0b20 907F      		andi r25,0xf0
 2687 0b22 9827      		eor r25,r24
 2688 0b24 807F      		andi r24,0xf0
 2689 0b26 9827      		eor r25,r24
 2690 0b28 8050      		subi r24,lo8(-(functions+8))
 2691 0b2a 9040      		sbci r25,hi8(-(functions+8))
 2692 0b2c FC01      		movw r30,r24
 2693 0b2e 8081      		ld r24,Z
 2694 0b30 9181      		ldd r25,Z+1
 2695 0b32 892B      		or r24,r25
 2696 0b34 01F4      		brne .+2
 2697 0b36 00C0      		rjmp .L76
 541:lp_solve_5.5/lp_params.c ****         elements = functions[i].elements;
 2698               		.loc 1 541 0
 2699 0b38 8F81      		ldd r24,Y+7
 2700 0b3a 9885      		ldd r25,Y+8
 2701 0b3c 8295      		swap r24
 2702 0b3e 9295      		swap r25
 2703 0b40 907F      		andi r25,0xf0
 2704 0b42 9827      		eor r25,r24
 2705 0b44 807F      		andi r24,0xf0
 2706 0b46 9827      		eor r25,r24
 2707 0b48 8050      		subi r24,lo8(-(functions+10))
 2708 0b4a 9040      		sbci r25,hi8(-(functions+10))
 2709 0b4c FC01      		movw r30,r24
 2710 0b4e 8081      		ld r24,Z
 2711 0b50 9181      		ldd r25,Z+1
 2712 0b52 98A3      		std Y+32,r25
 2713 0b54 8F8F      		std Y+31,r24
 542:lp_solve_5.5/lp_params.c ****         for(j = 0; j < elements; j++)
 2714               		.loc 1 542 0
 2715 0b56 1A86      		std Y+10,__zero_reg__
 2716 0b58 1986      		std Y+9,__zero_reg__
 2717 0b5a 00C0      		rjmp .L77
 2718               	.L79:
 543:lp_solve_5.5/lp_params.c ****           if((strcmp(functions[i].values[j].svalue, "0") != 0) &&
 2719               		.loc 1 543 0
 2720 0b5c 8F81      		ldd r24,Y+7
 2721 0b5e 9885      		ldd r25,Y+8
 2722 0b60 8295      		swap r24
 2723 0b62 9295      		swap r25
 2724 0b64 907F      		andi r25,0xf0
 2725 0b66 9827      		eor r25,r24
 2726 0b68 807F      		andi r24,0xf0
 2727 0b6a 9827      		eor r25,r24
 2728 0b6c 8050      		subi r24,lo8(-(functions+8))
 2729 0b6e 9040      		sbci r25,hi8(-(functions+8))
 2730 0b70 FC01      		movw r30,r24
 2731 0b72 2081      		ld r18,Z
 2732 0b74 3181      		ldd r19,Z+1
 2733 0b76 8985      		ldd r24,Y+9
 2734 0b78 9A85      		ldd r25,Y+10
 2735 0b7a 880F      		lsl r24
 2736 0b7c 991F      		rol r25
 2737 0b7e 880F      		lsl r24
 2738 0b80 991F      		rol r25
 2739 0b82 820F      		add r24,r18
 2740 0b84 931F      		adc r25,r19
 2741 0b86 FC01      		movw r30,r24
 2742 0b88 8281      		ldd r24,Z+2
 2743 0b8a 9381      		ldd r25,Z+3
 2744 0b8c 60E0      		ldi r22,lo8(.LC79)
 2745 0b8e 70E0      		ldi r23,hi8(.LC79)
 2746 0b90 0E94 0000 		call strcmp
 2747 0b94 892B      		or r24,r25
 2748 0b96 01F4      		brne .+2
 2749 0b98 00C0      		rjmp .L78
 544:lp_solve_5.5/lp_params.c ****              (strcmp(functions[i].values[j].svalue, "1") != 0))
 2750               		.loc 1 544 0 discriminator 1
 2751 0b9a 8F81      		ldd r24,Y+7
 2752 0b9c 9885      		ldd r25,Y+8
 2753 0b9e 8295      		swap r24
 2754 0ba0 9295      		swap r25
 2755 0ba2 907F      		andi r25,0xf0
 2756 0ba4 9827      		eor r25,r24
 2757 0ba6 807F      		andi r24,0xf0
 2758 0ba8 9827      		eor r25,r24
 2759 0baa 8050      		subi r24,lo8(-(functions+8))
 2760 0bac 9040      		sbci r25,hi8(-(functions+8))
 2761 0bae FC01      		movw r30,r24
 2762 0bb0 2081      		ld r18,Z
 2763 0bb2 3181      		ldd r19,Z+1
 2764 0bb4 8985      		ldd r24,Y+9
 2765 0bb6 9A85      		ldd r25,Y+10
 2766 0bb8 880F      		lsl r24
 2767 0bba 991F      		rol r25
 2768 0bbc 880F      		lsl r24
 2769 0bbe 991F      		rol r25
 2770 0bc0 820F      		add r24,r18
 2771 0bc2 931F      		adc r25,r19
 2772 0bc4 FC01      		movw r30,r24
 2773 0bc6 8281      		ldd r24,Z+2
 2774 0bc8 9381      		ldd r25,Z+3
 2775 0bca 60E0      		ldi r22,lo8(.LC80)
 2776 0bcc 70E0      		ldi r23,hi8(.LC80)
 2777 0bce 0E94 0000 		call strcmp
 543:lp_solve_5.5/lp_params.c ****           if((strcmp(functions[i].values[j].svalue, "0") != 0) &&
 2778               		.loc 1 543 0 discriminator 1
 2779 0bd2 892B      		or r24,r25
 2780 0bd4 01F0      		breq .L78
 545:lp_solve_5.5/lp_params.c ****             puthash(functions[i].values[j].svalue, j, NULL, hashparameters);
 2781               		.loc 1 545 0
 2782 0bd6 8F81      		ldd r24,Y+7
 2783 0bd8 9885      		ldd r25,Y+8
 2784 0bda 8295      		swap r24
 2785 0bdc 9295      		swap r25
 2786 0bde 907F      		andi r25,0xf0
 2787 0be0 9827      		eor r25,r24
 2788 0be2 807F      		andi r24,0xf0
 2789 0be4 9827      		eor r25,r24
 2790 0be6 8050      		subi r24,lo8(-(functions+8))
 2791 0be8 9040      		sbci r25,hi8(-(functions+8))
 2792 0bea FC01      		movw r30,r24
 2793 0bec 2081      		ld r18,Z
 2794 0bee 3181      		ldd r19,Z+1
 2795 0bf0 8985      		ldd r24,Y+9
 2796 0bf2 9A85      		ldd r25,Y+10
 2797 0bf4 880F      		lsl r24
 2798 0bf6 991F      		rol r25
 2799 0bf8 880F      		lsl r24
 2800 0bfa 991F      		rol r25
 2801 0bfc 820F      		add r24,r18
 2802 0bfe 931F      		adc r25,r19
 2803 0c00 FC01      		movw r30,r24
 2804 0c02 8281      		ldd r24,Z+2
 2805 0c04 9381      		ldd r25,Z+3
 2806 0c06 2D8D      		ldd r18,Y+29
 2807 0c08 3E8D      		ldd r19,Y+30
 2808 0c0a 6985      		ldd r22,Y+9
 2809 0c0c 7A85      		ldd r23,Y+10
 2810 0c0e 40E0      		ldi r20,0
 2811 0c10 50E0      		ldi r21,0
 2812 0c12 0E94 0000 		call puthash
 2813               	.L78:
 542:lp_solve_5.5/lp_params.c ****           if((strcmp(functions[i].values[j].svalue, "0") != 0) &&
 2814               		.loc 1 542 0 discriminator 2
 2815 0c16 8985      		ldd r24,Y+9
 2816 0c18 9A85      		ldd r25,Y+10
 2817 0c1a 0196      		adiw r24,1
 2818 0c1c 9A87      		std Y+10,r25
 2819 0c1e 8987      		std Y+9,r24
 2820               	.L77:
 542:lp_solve_5.5/lp_params.c ****           if((strcmp(functions[i].values[j].svalue, "0") != 0) &&
 2821               		.loc 1 542 0 is_stmt 0 discriminator 1
 2822 0c20 2985      		ldd r18,Y+9
 2823 0c22 3A85      		ldd r19,Y+10
 2824 0c24 8F8D      		ldd r24,Y+31
 2825 0c26 98A1      		ldd r25,Y+32
 2826 0c28 2817      		cp r18,r24
 2827 0c2a 3907      		cpc r19,r25
 2828 0c2c 04F4      		brge .+2
 2829 0c2e 00C0      		rjmp .L79
 2830               	.L76:
 539:lp_solve_5.5/lp_params.c ****       if(functions[i].values != NULL) {
 2831               		.loc 1 539 0 is_stmt 1 discriminator 2
 2832 0c30 8F81      		ldd r24,Y+7
 2833 0c32 9885      		ldd r25,Y+8
 2834 0c34 0196      		adiw r24,1
 2835 0c36 9887      		std Y+8,r25
 2836 0c38 8F83      		std Y+7,r24
 2837               	.L75:
 539:lp_solve_5.5/lp_params.c ****       if(functions[i].values != NULL) {
 2838               		.loc 1 539 0 is_stmt 0 discriminator 1
 2839 0c3a 8F81      		ldd r24,Y+7
 2840 0c3c 9885      		ldd r25,Y+8
 2841 0c3e 8197      		sbiw r24,33
 2842 0c40 04F4      		brge .+2
 2843 0c42 00C0      		rjmp .L80
 546:lp_solve_5.5/lp_params.c ****       }
 547:lp_solve_5.5/lp_params.c ****     }
 548:lp_solve_5.5/lp_params.c **** 
 549:lp_solve_5.5/lp_params.c ****     readoptions(options, &header);
 2844               		.loc 1 549 0 is_stmt 1
 2845 0c44 9E01      		movw r18,r28
 2846 0c46 2D5D      		subi r18,-35
 2847 0c48 3F4E      		sbci r19,-17
 2848 0c4a CE01      		movw r24,r28
 2849 0c4c 855D      		subi r24,-43
 2850 0c4e 9F4E      		sbci r25,-17
 2851 0c50 FC01      		movw r30,r24
 2852 0c52 8081      		ld r24,Z
 2853 0c54 9181      		ldd r25,Z+1
 2854 0c56 B901      		movw r22,r18
 2855 0c58 0E94 0000 		call readoptions
 550:lp_solve_5.5/lp_params.c **** 
 551:lp_solve_5.5/lp_params.c ****     STRUPR(header);
 2856               		.loc 1 551 0
 2857 0c5c CE01      		movw r24,r28
 2858 0c5e 8D5D      		subi r24,-35
 2859 0c60 9F4E      		sbci r25,-17
 2860 0c62 FC01      		movw r30,r24
 2861 0c64 8081      		ld r24,Z
 2862 0c66 9181      		ldd r25,Z+1
 2863 0c68 0E94 0000 		call STRUPR
 552:lp_solve_5.5/lp_params.c ****     ret = looping = TRUE;
 2864               		.loc 1 552 0
 2865 0c6c 81E0      		ldi r24,lo8(1)
 2866 0c6e 90E0      		ldi r25,0
 2867 0c70 9C83      		std Y+4,r25
 2868 0c72 8B83      		std Y+3,r24
 2869 0c74 8B81      		ldd r24,Y+3
 2870 0c76 9C81      		ldd r25,Y+4
 2871 0c78 9A83      		std Y+2,r25
 2872 0c7a 8983      		std Y+1,r24
 553:lp_solve_5.5/lp_params.c ****     line = 0;
 2873               		.loc 1 553 0
 2874 0c7c 1E82      		std Y+6,__zero_reg__
 2875 0c7e 1D82      		std Y+5,__zero_reg__
 554:lp_solve_5.5/lp_params.c ****     while((ret) && (looping)) {
 2876               		.loc 1 554 0
 2877 0c80 00C0      		rjmp .L81
 2878               	.L134:
 555:lp_solve_5.5/lp_params.c ****       line++;
 2879               		.loc 1 555 0
 2880 0c82 8D81      		ldd r24,Y+5
 2881 0c84 9E81      		ldd r25,Y+6
 2882 0c86 0196      		adiw r24,1
 2883 0c88 9E83      		std Y+6,r25
 2884 0c8a 8D83      		std Y+5,r24
 556:lp_solve_5.5/lp_params.c ****       switch(ini_readdata(fp, buf, sizeof(buf), FALSE)) {
 2885               		.loc 1 556 0
 2886 0c8c BE01      		movw r22,r28
 2887 0c8e 6D5D      		subi r22,-35
 2888 0c90 7F4F      		sbci r23,-1
 2889 0c92 898D      		ldd r24,Y+25
 2890 0c94 9A8D      		ldd r25,Y+26
 2891 0c96 20E0      		ldi r18,0
 2892 0c98 30E0      		ldi r19,0
 2893 0c9a 40E0      		ldi r20,0
 2894 0c9c 50E1      		ldi r21,lo8(16)
 2895 0c9e 0E94 0000 		call ini_readdata
 2896 0ca2 8130      		cpi r24,1
 2897 0ca4 9105      		cpc r25,__zero_reg__
 2898 0ca6 01F0      		breq .L82
 2899 0ca8 8230      		cpi r24,2
 2900 0caa 9105      		cpc r25,__zero_reg__
 2901 0cac 01F0      		breq .L83
 2902 0cae 892B      		or r24,r25
 2903 0cb0 01F0      		breq .L84
 2904 0cb2 00C0      		rjmp .L81
 2905               	.L84:
 557:lp_solve_5.5/lp_params.c ****         case 0: /* End of file */
 558:lp_solve_5.5/lp_params.c ****           looping = FALSE;
 2906               		.loc 1 558 0
 2907 0cb4 1C82      		std Y+4,__zero_reg__
 2908 0cb6 1B82      		std Y+3,__zero_reg__
 559:lp_solve_5.5/lp_params.c ****           break;
 2909               		.loc 1 559 0
 2910 0cb8 00C0      		rjmp .L81
 2911               	.L82:
 560:lp_solve_5.5/lp_params.c ****         case 1: /* header */
 561:lp_solve_5.5/lp_params.c ****           switch(state) {
 2912               		.loc 1 561 0
 2913 0cba 8F85      		ldd r24,Y+15
 2914 0cbc 9889      		ldd r25,Y+16
 2915 0cbe 0097      		sbiw r24,0
 2916 0cc0 01F0      		breq .L86
 2917 0cc2 0197      		sbiw r24,1
 2918 0cc4 01F0      		breq .L87
 2919 0cc6 00C0      		rjmp .L85
 2920               	.L86:
 562:lp_solve_5.5/lp_params.c ****             case 0:
 563:lp_solve_5.5/lp_params.c ****               STRUPR(buf);
 2921               		.loc 1 563 0
 2922 0cc8 CE01      		movw r24,r28
 2923 0cca 8396      		adiw r24,35
 2924 0ccc 0E94 0000 		call STRUPR
 564:lp_solve_5.5/lp_params.c ****               if(strcmp(buf, header) == 0)
 2925               		.loc 1 564 0
 2926 0cd0 CE01      		movw r24,r28
 2927 0cd2 8D5D      		subi r24,-35
 2928 0cd4 9F4E      		sbci r25,-17
 2929 0cd6 FC01      		movw r30,r24
 2930 0cd8 2081      		ld r18,Z
 2931 0cda 3181      		ldd r19,Z+1
 2932 0cdc CE01      		movw r24,r28
 2933 0cde 8396      		adiw r24,35
 2934 0ce0 B901      		movw r22,r18
 2935 0ce2 0E94 0000 		call strcmp
 2936 0ce6 892B      		or r24,r25
 2937 0ce8 01F4      		brne .L137
 565:lp_solve_5.5/lp_params.c ****                 state = 1;
 2938               		.loc 1 565 0
 2939 0cea 81E0      		ldi r24,lo8(1)
 2940 0cec 90E0      		ldi r25,0
 2941 0cee 988B      		std Y+16,r25
 2942 0cf0 8F87      		std Y+15,r24
 566:lp_solve_5.5/lp_params.c ****               break;
 2943               		.loc 1 566 0
 2944 0cf2 00C0      		rjmp .L137
 2945               	.L87:
 567:lp_solve_5.5/lp_params.c ****             case 1:
 568:lp_solve_5.5/lp_params.c ****               looping = FALSE;
 2946               		.loc 1 568 0
 2947 0cf4 1C82      		std Y+4,__zero_reg__
 2948 0cf6 1B82      		std Y+3,__zero_reg__
 569:lp_solve_5.5/lp_params.c ****               break;
 2949               		.loc 1 569 0
 2950 0cf8 00C0      		rjmp .L85
 2951               	.L137:
 566:lp_solve_5.5/lp_params.c ****               break;
 2952               		.loc 1 566 0
 2953 0cfa 0000      		nop
 2954               	.L85:
 570:lp_solve_5.5/lp_params.c ****           }
 571:lp_solve_5.5/lp_params.c ****           break;
 2955               		.loc 1 571 0 discriminator 1
 2956 0cfc 00C0      		rjmp .L81
 2957               	.L83:
 572:lp_solve_5.5/lp_params.c ****         case 2: /* data */
 573:lp_solve_5.5/lp_params.c ****           if(state == 1) {
 2958               		.loc 1 573 0
 2959 0cfe 8F85      		ldd r24,Y+15
 2960 0d00 9889      		ldd r25,Y+16
 2961 0d02 0197      		sbiw r24,1
 2962 0d04 01F4      		brne .L89
 574:lp_solve_5.5/lp_params.c ****             for(ptr = buf; (*ptr) && (isspace(*ptr)); ptr++);
 2963               		.loc 1 574 0
 2964 0d06 CE01      		movw r24,r28
 2965 0d08 8396      		adiw r24,35
 2966 0d0a 9E8B      		std Y+22,r25
 2967 0d0c 8D8B      		std Y+21,r24
 2968 0d0e 00C0      		rjmp .L90
 2969               	.L92:
 2970               		.loc 1 574 0 is_stmt 0 discriminator 4
 2971 0d10 8D89      		ldd r24,Y+21
 2972 0d12 9E89      		ldd r25,Y+22
 2973 0d14 0196      		adiw r24,1
 2974 0d16 9E8B      		std Y+22,r25
 2975 0d18 8D8B      		std Y+21,r24
 2976               	.L90:
 2977               		.loc 1 574 0 discriminator 1
 2978 0d1a 8D89      		ldd r24,Y+21
 2979 0d1c 9E89      		ldd r25,Y+22
 2980 0d1e FC01      		movw r30,r24
 2981 0d20 8081      		ld r24,Z
 2982 0d22 8823      		tst r24
 2983 0d24 01F0      		breq .L91
 2984               		.loc 1 574 0 discriminator 3
 2985 0d26 8D89      		ldd r24,Y+21
 2986 0d28 9E89      		ldd r25,Y+22
 2987 0d2a FC01      		movw r30,r24
 2988 0d2c 8081      		ld r24,Z
 2989 0d2e 882F      		mov r24,r24
 2990 0d30 90E0      		ldi r25,0
 2991 0d32 0E94 0000 		call isspace
 2992 0d36 892B      		or r24,r25
 2993 0d38 01F4      		brne .L92
 2994 0d3a 00C0      		rjmp .L91
 2995               	.L89:
 575:lp_solve_5.5/lp_params.c ****           }
 576:lp_solve_5.5/lp_params.c ****           else
 577:lp_solve_5.5/lp_params.c ****             ptr = NULL;
 2996               		.loc 1 577 0 is_stmt 1
 2997 0d3c 1E8A      		std Y+22,__zero_reg__
 2998 0d3e 1D8A      		std Y+21,__zero_reg__
 2999               	.L91:
 578:lp_solve_5.5/lp_params.c ****           if((ptr != NULL) && (*ptr)) {
 3000               		.loc 1 578 0
 3001 0d40 8D89      		ldd r24,Y+21
 3002 0d42 9E89      		ldd r25,Y+22
 3003 0d44 892B      		or r24,r25
 3004 0d46 01F4      		brne .+2
 3005 0d48 00C0      		rjmp .L141
 3006               		.loc 1 578 0 is_stmt 0 discriminator 1
 3007 0d4a 8D89      		ldd r24,Y+21
 3008 0d4c 9E89      		ldd r25,Y+22
 3009 0d4e FC01      		movw r30,r24
 3010 0d50 8081      		ld r24,Z
 3011 0d52 8823      		tst r24
 3012 0d54 01F4      		brne .+2
 3013 0d56 00C0      		rjmp .L141
 579:lp_solve_5.5/lp_params.c ****             STRUPR(buf);
 3014               		.loc 1 579 0 is_stmt 1
 3015 0d58 CE01      		movw r24,r28
 3016 0d5a 8396      		adiw r24,35
 3017 0d5c 0E94 0000 		call STRUPR
 580:lp_solve_5.5/lp_params.c ****             ptr = strchr(buf, '=');
 3018               		.loc 1 580 0
 3019 0d60 CE01      		movw r24,r28
 3020 0d62 8396      		adiw r24,35
 3021 0d64 6DE3      		ldi r22,lo8(61)
 3022 0d66 70E0      		ldi r23,0
 3023 0d68 0E94 0000 		call strchr
 3024 0d6c 9E8B      		std Y+22,r25
 3025 0d6e 8D8B      		std Y+21,r24
 581:lp_solve_5.5/lp_params.c ****             if(ptr == NULL) {
 3026               		.loc 1 581 0
 3027 0d70 8D89      		ldd r24,Y+21
 3028 0d72 9E89      		ldd r25,Y+22
 3029 0d74 892B      		or r24,r25
 3030 0d76 01F4      		brne .L94
 582:lp_solve_5.5/lp_params.c ****               report(lp, IMPORTANT, "read_params: No equal sign on line %d\n", line);
 3031               		.loc 1 582 0
 3032 0d78 8E81      		ldd r24,Y+6
 3033 0d7a 8F93      		push r24
 3034 0d7c 8D81      		ldd r24,Y+5
 3035 0d7e 8F93      		push r24
 3036 0d80 80E0      		ldi r24,lo8(.LC145)
 3037 0d82 90E0      		ldi r25,hi8(.LC145)
 3038 0d84 892F      		mov r24,r25
 3039 0d86 8F93      		push r24
 3040 0d88 80E0      		ldi r24,lo8(.LC145)
 3041 0d8a 90E0      		ldi r25,hi8(.LC145)
 3042 0d8c 8F93      		push r24
 3043 0d8e 1F92      		push __zero_reg__
 3044 0d90 83E0      		ldi r24,lo8(3)
 3045 0d92 8F93      		push r24
 3046 0d94 CE01      		movw r24,r28
 3047 0d96 895D      		subi r24,-39
 3048 0d98 9F4E      		sbci r25,-17
 3049 0d9a FC01      		movw r30,r24
 3050 0d9c 2181      		ldd r18,Z+1
 3051 0d9e 2F93      		push r18
 3052 0da0 FC01      		movw r30,r24
 3053 0da2 8081      		ld r24,Z
 3054 0da4 8F93      		push r24
 3055 0da6 0E94 0000 		call report
 3056 0daa 6DB7      		in r22,__SP_L__
 3057 0dac 7EB7      		in r23,__SP_H__
 3058 0dae 685F      		subi r22,-8
 3059 0db0 7F4F      		sbci r23,-1
 3060 0db2 0FB6      		in __tmp_reg__,__SREG__
 3061 0db4 F894      		cli
 3062 0db6 DEBF      		out __SP_H__,r29
 3063 0db8 0FBE      		out __SREG__,__tmp_reg__
 3064 0dba CDBF      		out __SP_L__,r28
 583:lp_solve_5.5/lp_params.c ****               ret = FALSE;
 3065               		.loc 1 583 0
 3066 0dbc 1A82      		std Y+2,__zero_reg__
 3067 0dbe 1982      		std Y+1,__zero_reg__
 3068 0dc0 00C0      		rjmp .L141
 3069               	.L94:
 584:lp_solve_5.5/lp_params.c ****             }
 585:lp_solve_5.5/lp_params.c ****             else {
 586:lp_solve_5.5/lp_params.c ****               *ptr = 0;
 3070               		.loc 1 586 0
 3071 0dc2 8D89      		ldd r24,Y+21
 3072 0dc4 9E89      		ldd r25,Y+22
 3073 0dc6 FC01      		movw r30,r24
 3074 0dc8 1082      		st Z,__zero_reg__
 587:lp_solve_5.5/lp_params.c ****               for(ptr1 = buf; isspace(*ptr1); ptr1++);
 3075               		.loc 1 587 0
 3076 0dca CE01      		movw r24,r28
 3077 0dcc 8396      		adiw r24,35
 3078 0dce 988F      		std Y+24,r25
 3079 0dd0 8F8B      		std Y+23,r24
 3080 0dd2 00C0      		rjmp .L95
 3081               	.L96:
 3082               		.loc 1 587 0 is_stmt 0 discriminator 3
 3083 0dd4 8F89      		ldd r24,Y+23
 3084 0dd6 988D      		ldd r25,Y+24
 3085 0dd8 0196      		adiw r24,1
 3086 0dda 988F      		std Y+24,r25
 3087 0ddc 8F8B      		std Y+23,r24
 3088               	.L95:
 3089               		.loc 1 587 0 discriminator 1
 3090 0dde 8F89      		ldd r24,Y+23
 3091 0de0 988D      		ldd r25,Y+24
 3092 0de2 FC01      		movw r30,r24
 3093 0de4 8081      		ld r24,Z
 3094 0de6 882F      		mov r24,r24
 3095 0de8 90E0      		ldi r25,0
 3096 0dea 0E94 0000 		call isspace
 3097 0dee 892B      		or r24,r25
 3098 0df0 01F4      		brne .L96
 588:lp_solve_5.5/lp_params.c ****               for(ptr2 = ptr - 1; (ptr2 >= ptr1) && (isspace(*ptr2)); ptr2--);
 3099               		.loc 1 588 0 is_stmt 1
 3100 0df2 8D89      		ldd r24,Y+21
 3101 0df4 9E89      		ldd r25,Y+22
 3102 0df6 9C01      		movw r18,r24
 3103 0df8 2150      		subi r18,1
 3104 0dfa 3109      		sbc r19,__zero_reg__
 3105 0dfc CE01      		movw r24,r28
 3106 0dfe 8B5D      		subi r24,-37
 3107 0e00 9F4E      		sbci r25,-17
 3108 0e02 FC01      		movw r30,r24
 3109 0e04 3183      		std Z+1,r19
 3110 0e06 2083      		st Z,r18
 3111 0e08 00C0      		rjmp .L97
 3112               	.L99:
 3113               		.loc 1 588 0 is_stmt 0 discriminator 4
 3114 0e0a CE01      		movw r24,r28
 3115 0e0c 8B5D      		subi r24,-37
 3116 0e0e 9F4E      		sbci r25,-17
 3117 0e10 FC01      		movw r30,r24
 3118 0e12 8081      		ld r24,Z
 3119 0e14 9181      		ldd r25,Z+1
 3120 0e16 9C01      		movw r18,r24
 3121 0e18 2150      		subi r18,1
 3122 0e1a 3109      		sbc r19,__zero_reg__
 3123 0e1c CE01      		movw r24,r28
 3124 0e1e 8B5D      		subi r24,-37
 3125 0e20 9F4E      		sbci r25,-17
 3126 0e22 FC01      		movw r30,r24
 3127 0e24 3183      		std Z+1,r19
 3128 0e26 2083      		st Z,r18
 3129               	.L97:
 3130               		.loc 1 588 0 discriminator 1
 3131 0e28 CE01      		movw r24,r28
 3132 0e2a 8B5D      		subi r24,-37
 3133 0e2c 9F4E      		sbci r25,-17
 3134 0e2e FC01      		movw r30,r24
 3135 0e30 2081      		ld r18,Z
 3136 0e32 3181      		ldd r19,Z+1
 3137 0e34 8F89      		ldd r24,Y+23
 3138 0e36 988D      		ldd r25,Y+24
 3139 0e38 2817      		cp r18,r24
 3140 0e3a 3907      		cpc r19,r25
 3141 0e3c 00F0      		brlo .L98
 3142               		.loc 1 588 0 discriminator 3
 3143 0e3e CE01      		movw r24,r28
 3144 0e40 8B5D      		subi r24,-37
 3145 0e42 9F4E      		sbci r25,-17
 3146 0e44 FC01      		movw r30,r24
 3147 0e46 8081      		ld r24,Z
 3148 0e48 9181      		ldd r25,Z+1
 3149 0e4a FC01      		movw r30,r24
 3150 0e4c 8081      		ld r24,Z
 3151 0e4e 882F      		mov r24,r24
 3152 0e50 90E0      		ldi r25,0
 3153 0e52 0E94 0000 		call isspace
 3154 0e56 892B      		or r24,r25
 3155 0e58 01F4      		brne .L99
 3156               	.L98:
 589:lp_solve_5.5/lp_params.c ****               if(ptr2 <= ptr1) {
 3157               		.loc 1 589 0 is_stmt 1
 3158 0e5a CE01      		movw r24,r28
 3159 0e5c 8B5D      		subi r24,-37
 3160 0e5e 9F4E      		sbci r25,-17
 3161 0e60 FC01      		movw r30,r24
 3162 0e62 2081      		ld r18,Z
 3163 0e64 3181      		ldd r19,Z+1
 3164 0e66 8F89      		ldd r24,Y+23
 3165 0e68 988D      		ldd r25,Y+24
 3166 0e6a 8217      		cp r24,r18
 3167 0e6c 9307      		cpc r25,r19
 3168 0e6e 00F0      		brlo .L100
 590:lp_solve_5.5/lp_params.c ****                 report(lp, IMPORTANT, "read_params: No parameter name before equal sign on line %d\
 3169               		.loc 1 590 0
 3170 0e70 8E81      		ldd r24,Y+6
 3171 0e72 8F93      		push r24
 3172 0e74 8D81      		ldd r24,Y+5
 3173 0e76 8F93      		push r24
 3174 0e78 80E0      		ldi r24,lo8(.LC146)
 3175 0e7a 90E0      		ldi r25,hi8(.LC146)
 3176 0e7c 892F      		mov r24,r25
 3177 0e7e 8F93      		push r24
 3178 0e80 80E0      		ldi r24,lo8(.LC146)
 3179 0e82 90E0      		ldi r25,hi8(.LC146)
 3180 0e84 8F93      		push r24
 3181 0e86 1F92      		push __zero_reg__
 3182 0e88 83E0      		ldi r24,lo8(3)
 3183 0e8a 8F93      		push r24
 3184 0e8c CE01      		movw r24,r28
 3185 0e8e 895D      		subi r24,-39
 3186 0e90 9F4E      		sbci r25,-17
 3187 0e92 FC01      		movw r30,r24
 3188 0e94 2181      		ldd r18,Z+1
 3189 0e96 2F93      		push r18
 3190 0e98 FC01      		movw r30,r24
 3191 0e9a 8081      		ld r24,Z
 3192 0e9c 8F93      		push r24
 3193 0e9e 0E94 0000 		call report
 3194 0ea2 6DB7      		in r22,__SP_L__
 3195 0ea4 7EB7      		in r23,__SP_H__
 3196 0ea6 685F      		subi r22,-8
 3197 0ea8 7F4F      		sbci r23,-1
 3198 0eaa 0FB6      		in __tmp_reg__,__SREG__
 3199 0eac F894      		cli
 3200 0eae DEBF      		out __SP_H__,r29
 3201 0eb0 0FBE      		out __SREG__,__tmp_reg__
 3202 0eb2 CDBF      		out __SP_L__,r28
 591:lp_solve_5.5/lp_params.c ****                 ret = FALSE;
 3203               		.loc 1 591 0
 3204 0eb4 1A82      		std Y+2,__zero_reg__
 3205 0eb6 1982      		std Y+1,__zero_reg__
 3206 0eb8 00C0      		rjmp .L141
 3207               	.L100:
 592:lp_solve_5.5/lp_params.c ****               }
 593:lp_solve_5.5/lp_params.c ****               else {
 594:lp_solve_5.5/lp_params.c ****                 ptr2[1] = 0;
 3208               		.loc 1 594 0
 3209 0eba CE01      		movw r24,r28
 3210 0ebc 8B5D      		subi r24,-37
 3211 0ebe 9F4E      		sbci r25,-17
 3212 0ec0 FC01      		movw r30,r24
 3213 0ec2 8081      		ld r24,Z
 3214 0ec4 9181      		ldd r25,Z+1
 3215 0ec6 0196      		adiw r24,1
 3216 0ec8 FC01      		movw r30,r24
 3217 0eca 1082      		st Z,__zero_reg__
 595:lp_solve_5.5/lp_params.c ****                 hp = findhash(ptr1, hashfunctions);
 3218               		.loc 1 595 0
 3219 0ecc 2B8D      		ldd r18,Y+27
 3220 0ece 3C8D      		ldd r19,Y+28
 3221 0ed0 8F89      		ldd r24,Y+23
 3222 0ed2 988D      		ldd r25,Y+24
 3223 0ed4 B901      		movw r22,r18
 3224 0ed6 0E94 0000 		call findhash
 3225 0eda 9AA3      		std Y+34,r25
 3226 0edc 89A3      		std Y+33,r24
 596:lp_solve_5.5/lp_params.c ****                 if(hp == NULL) {
 3227               		.loc 1 596 0
 3228 0ede 89A1      		ldd r24,Y+33
 3229 0ee0 9AA1      		ldd r25,Y+34
 3230 0ee2 892B      		or r24,r25
 3231 0ee4 01F4      		brne .L101
 597:lp_solve_5.5/lp_params.c ****                   report(lp, IMPORTANT, "read_params: Unknown parameter name (%s) before equal sign
 3232               		.loc 1 597 0
 3233 0ee6 8E81      		ldd r24,Y+6
 3234 0ee8 8F93      		push r24
 3235 0eea 8D81      		ldd r24,Y+5
 3236 0eec 8F93      		push r24
 3237 0eee 888D      		ldd r24,Y+24
 3238 0ef0 8F93      		push r24
 3239 0ef2 8F89      		ldd r24,Y+23
 3240 0ef4 8F93      		push r24
 3241 0ef6 80E0      		ldi r24,lo8(.LC147)
 3242 0ef8 90E0      		ldi r25,hi8(.LC147)
 3243 0efa 892F      		mov r24,r25
 3244 0efc 8F93      		push r24
 3245 0efe 80E0      		ldi r24,lo8(.LC147)
 3246 0f00 90E0      		ldi r25,hi8(.LC147)
 3247 0f02 8F93      		push r24
 3248 0f04 1F92      		push __zero_reg__
 3249 0f06 83E0      		ldi r24,lo8(3)
 3250 0f08 8F93      		push r24
 3251 0f0a CE01      		movw r24,r28
 3252 0f0c 895D      		subi r24,-39
 3253 0f0e 9F4E      		sbci r25,-17
 3254 0f10 FC01      		movw r30,r24
 3255 0f12 2181      		ldd r18,Z+1
 3256 0f14 2F93      		push r18
 3257 0f16 FC01      		movw r30,r24
 3258 0f18 8081      		ld r24,Z
 3259 0f1a 8F93      		push r24
 3260 0f1c 0E94 0000 		call report
 3261 0f20 6DB7      		in r22,__SP_L__
 3262 0f22 7EB7      		in r23,__SP_H__
 3263 0f24 665F      		subi r22,-10
 3264 0f26 7F4F      		sbci r23,-1
 3265 0f28 0FB6      		in __tmp_reg__,__SREG__
 3266 0f2a F894      		cli
 3267 0f2c DEBF      		out __SP_H__,r29
 3268 0f2e 0FBE      		out __SREG__,__tmp_reg__
 3269 0f30 CDBF      		out __SP_L__,r28
 598:lp_solve_5.5/lp_params.c ****                   ret = FALSE;
 3270               		.loc 1 598 0
 3271 0f32 1A82      		std Y+2,__zero_reg__
 3272 0f34 1982      		std Y+1,__zero_reg__
 3273 0f36 00C0      		rjmp .L141
 3274               	.L101:
 599:lp_solve_5.5/lp_params.c ****                 }
 600:lp_solve_5.5/lp_params.c ****                 else {
 601:lp_solve_5.5/lp_params.c ****                   i = hp->index;
 3275               		.loc 1 601 0
 3276 0f38 89A1      		ldd r24,Y+33
 3277 0f3a 9AA1      		ldd r25,Y+34
 3278 0f3c FC01      		movw r30,r24
 3279 0f3e 8281      		ldd r24,Z+2
 3280 0f40 9381      		ldd r25,Z+3
 3281 0f42 9887      		std Y+8,r25
 3282 0f44 8F83      		std Y+7,r24
 602:lp_solve_5.5/lp_params.c ****                   ptr1 = ++ptr;
 3283               		.loc 1 602 0
 3284 0f46 8D89      		ldd r24,Y+21
 3285 0f48 9E89      		ldd r25,Y+22
 3286 0f4a 0196      		adiw r24,1
 3287 0f4c 9E8B      		std Y+22,r25
 3288 0f4e 8D8B      		std Y+21,r24
 3289 0f50 8D89      		ldd r24,Y+21
 3290 0f52 9E89      		ldd r25,Y+22
 3291 0f54 988F      		std Y+24,r25
 3292 0f56 8F8B      		std Y+23,r24
 603:lp_solve_5.5/lp_params.c ****                   intvalue = 0;
 3293               		.loc 1 603 0
 3294 0f58 1E86      		std Y+14,__zero_reg__
 3295 0f5a 1D86      		std Y+13,__zero_reg__
 604:lp_solve_5.5/lp_params.c ****                   REALvalue = 0;
 3296               		.loc 1 604 0
 3297 0f5c 198A      		std Y+17,__zero_reg__
 3298 0f5e 1A8A      		std Y+18,__zero_reg__
 3299 0f60 1B8A      		std Y+19,__zero_reg__
 3300 0f62 1C8A      		std Y+20,__zero_reg__
 605:lp_solve_5.5/lp_params.c ****                   if(functions[i].values == NULL) {
 3301               		.loc 1 605 0
 3302 0f64 8F81      		ldd r24,Y+7
 3303 0f66 9885      		ldd r25,Y+8
 3304 0f68 8295      		swap r24
 3305 0f6a 9295      		swap r25
 3306 0f6c 907F      		andi r25,0xf0
 3307 0f6e 9827      		eor r25,r24
 3308 0f70 807F      		andi r24,0xf0
 3309 0f72 9827      		eor r25,r24
 3310 0f74 8050      		subi r24,lo8(-(functions+8))
 3311 0f76 9040      		sbci r25,hi8(-(functions+8))
 3312 0f78 FC01      		movw r30,r24
 3313 0f7a 8081      		ld r24,Z
 3314 0f7c 9181      		ldd r25,Z+1
 3315 0f7e 892B      		or r24,r25
 3316 0f80 01F0      		breq .+2
 3317 0f82 00C0      		rjmp .L115
 606:lp_solve_5.5/lp_params.c ****                     switch(functions[i].type) {
 3318               		.loc 1 606 0
 3319 0f84 8F81      		ldd r24,Y+7
 3320 0f86 9885      		ldd r25,Y+8
 3321 0f88 8295      		swap r24
 3322 0f8a 9295      		swap r25
 3323 0f8c 907F      		andi r25,0xf0
 3324 0f8e 9827      		eor r25,r24
 3325 0f90 807F      		andi r24,0xf0
 3326 0f92 9827      		eor r25,r24
 3327 0f94 8050      		subi r24,lo8(-(functions+6))
 3328 0f96 9040      		sbci r25,hi8(-(functions+6))
 3329 0f98 FC01      		movw r30,r24
 3330 0f9a 8081      		ld r24,Z
 3331 0f9c 9181      		ldd r25,Z+1
 3332 0f9e 8130      		cpi r24,1
 3333 0fa0 9105      		cpc r25,__zero_reg__
 3334 0fa2 04F4      		brge .+2
 3335 0fa4 00C0      		rjmp .L114
 3336 0fa6 8430      		cpi r24,4
 3337 0fa8 9105      		cpc r25,__zero_reg__
 3338 0faa 04F0      		brlt .L104
 3339 0fac 0497      		sbiw r24,4
 3340 0fae 01F4      		brne .+2
 3341 0fb0 00C0      		rjmp .L105
 3342 0fb2 00C0      		rjmp .L114
 3343               	.L104:
 607:lp_solve_5.5/lp_params.c ****                       case intfunction:
 608:lp_solve_5.5/lp_params.c ****                       case longfunction:
 609:lp_solve_5.5/lp_params.c ****                       case MYBOOLfunction:
 610:lp_solve_5.5/lp_params.c ****                         intvalue = strtol(ptr1, &ptr2, 10);
 3344               		.loc 1 610 0
 3345 0fb4 9E01      		movw r18,r28
 3346 0fb6 2B5D      		subi r18,-37
 3347 0fb8 3F4E      		sbci r19,-17
 3348 0fba 8F89      		ldd r24,Y+23
 3349 0fbc 988D      		ldd r25,Y+24
 3350 0fbe 4AE0      		ldi r20,lo8(10)
 3351 0fc0 50E0      		ldi r21,0
 3352 0fc2 B901      		movw r22,r18
 3353 0fc4 0E94 0000 		call strtol
 3354 0fc8 DC01      		movw r26,r24
 3355 0fca CB01      		movw r24,r22
 3356 0fcc 9E87      		std Y+14,r25
 3357 0fce 8D87      		std Y+13,r24
 611:lp_solve_5.5/lp_params.c ****                         while((*ptr2) && (isspace(*ptr2)))
 3358               		.loc 1 611 0
 3359 0fd0 00C0      		rjmp .L106
 3360               	.L108:
 612:lp_solve_5.5/lp_params.c ****                           ptr2++;
 3361               		.loc 1 612 0
 3362 0fd2 CE01      		movw r24,r28
 3363 0fd4 8B5D      		subi r24,-37
 3364 0fd6 9F4E      		sbci r25,-17
 3365 0fd8 FC01      		movw r30,r24
 3366 0fda 8081      		ld r24,Z
 3367 0fdc 9181      		ldd r25,Z+1
 3368 0fde 9C01      		movw r18,r24
 3369 0fe0 2F5F      		subi r18,-1
 3370 0fe2 3F4F      		sbci r19,-1
 3371 0fe4 CE01      		movw r24,r28
 3372 0fe6 8B5D      		subi r24,-37
 3373 0fe8 9F4E      		sbci r25,-17
 3374 0fea FC01      		movw r30,r24
 3375 0fec 3183      		std Z+1,r19
 3376 0fee 2083      		st Z,r18
 3377               	.L106:
 611:lp_solve_5.5/lp_params.c ****                         while((*ptr2) && (isspace(*ptr2)))
 3378               		.loc 1 611 0
 3379 0ff0 CE01      		movw r24,r28
 3380 0ff2 8B5D      		subi r24,-37
 3381 0ff4 9F4E      		sbci r25,-17
 3382 0ff6 FC01      		movw r30,r24
 3383 0ff8 8081      		ld r24,Z
 3384 0ffa 9181      		ldd r25,Z+1
 3385 0ffc FC01      		movw r30,r24
 3386 0ffe 8081      		ld r24,Z
 3387 1000 8823      		tst r24
 3388 1002 01F0      		breq .L107
 611:lp_solve_5.5/lp_params.c ****                         while((*ptr2) && (isspace(*ptr2)))
 3389               		.loc 1 611 0 is_stmt 0 discriminator 1
 3390 1004 CE01      		movw r24,r28
 3391 1006 8B5D      		subi r24,-37
 3392 1008 9F4E      		sbci r25,-17
 3393 100a FC01      		movw r30,r24
 3394 100c 8081      		ld r24,Z
 3395 100e 9181      		ldd r25,Z+1
 3396 1010 FC01      		movw r30,r24
 3397 1012 8081      		ld r24,Z
 3398 1014 882F      		mov r24,r24
 3399 1016 90E0      		ldi r25,0
 3400 1018 0E94 0000 		call isspace
 3401 101c 892B      		or r24,r25
 3402 101e 01F4      		brne .L108
 3403               	.L107:
 613:lp_solve_5.5/lp_params.c ****                         if(*ptr2) {
 3404               		.loc 1 613 0 is_stmt 1
 3405 1020 CE01      		movw r24,r28
 3406 1022 8B5D      		subi r24,-37
 3407 1024 9F4E      		sbci r25,-17
 3408 1026 FC01      		movw r30,r24
 3409 1028 8081      		ld r24,Z
 3410 102a 9181      		ldd r25,Z+1
 3411 102c FC01      		movw r30,r24
 3412 102e 8081      		ld r24,Z
 3413 1030 8823      		tst r24
 3414 1032 01F4      		brne .+2
 3415 1034 00C0      		rjmp .L138
 614:lp_solve_5.5/lp_params.c ****                           report(lp, IMPORTANT, "read_params: Invalid integer value on line %d\n", 
 3416               		.loc 1 614 0
 3417 1036 8E81      		ldd r24,Y+6
 3418 1038 8F93      		push r24
 3419 103a 8D81      		ldd r24,Y+5
 3420 103c 8F93      		push r24
 3421 103e 80E0      		ldi r24,lo8(.LC148)
 3422 1040 90E0      		ldi r25,hi8(.LC148)
 3423 1042 892F      		mov r24,r25
 3424 1044 8F93      		push r24
 3425 1046 80E0      		ldi r24,lo8(.LC148)
 3426 1048 90E0      		ldi r25,hi8(.LC148)
 3427 104a 8F93      		push r24
 3428 104c 1F92      		push __zero_reg__
 3429 104e 83E0      		ldi r24,lo8(3)
 3430 1050 8F93      		push r24
 3431 1052 CE01      		movw r24,r28
 3432 1054 895D      		subi r24,-39
 3433 1056 9F4E      		sbci r25,-17
 3434 1058 FC01      		movw r30,r24
 3435 105a 2181      		ldd r18,Z+1
 3436 105c 2F93      		push r18
 3437 105e FC01      		movw r30,r24
 3438 1060 8081      		ld r24,Z
 3439 1062 8F93      		push r24
 3440 1064 0E94 0000 		call report
 3441 1068 6DB7      		in r22,__SP_L__
 3442 106a 7EB7      		in r23,__SP_H__
 3443 106c 685F      		subi r22,-8
 3444 106e 7F4F      		sbci r23,-1
 3445 1070 0FB6      		in __tmp_reg__,__SREG__
 3446 1072 F894      		cli
 3447 1074 DEBF      		out __SP_H__,r29
 3448 1076 0FBE      		out __SREG__,__tmp_reg__
 3449 1078 CDBF      		out __SP_L__,r28
 615:lp_solve_5.5/lp_params.c ****                           ret = FALSE;
 3450               		.loc 1 615 0
 3451 107a 1A82      		std Y+2,__zero_reg__
 3452 107c 1982      		std Y+1,__zero_reg__
 616:lp_solve_5.5/lp_params.c ****                         }
 617:lp_solve_5.5/lp_params.c ****                         break;
 3453               		.loc 1 617 0
 3454 107e 00C0      		rjmp .L138
 3455               	.L105:
 618:lp_solve_5.5/lp_params.c ****                       case REALfunction:
 619:lp_solve_5.5/lp_params.c ****                         REALvalue = strtod(ptr1, &ptr2);
 3456               		.loc 1 619 0
 3457 1080 9E01      		movw r18,r28
 3458 1082 2B5D      		subi r18,-37
 3459 1084 3F4E      		sbci r19,-17
 3460 1086 8F89      		ldd r24,Y+23
 3461 1088 988D      		ldd r25,Y+24
 3462 108a B901      		movw r22,r18
 3463 108c 0E94 0000 		call strtod
 3464 1090 DC01      		movw r26,r24
 3465 1092 CB01      		movw r24,r22
 3466 1094 898B      		std Y+17,r24
 3467 1096 9A8B      		std Y+18,r25
 3468 1098 AB8B      		std Y+19,r26
 3469 109a BC8B      		std Y+20,r27
 620:lp_solve_5.5/lp_params.c ****                         while((*ptr2) && (isspace(*ptr2)))
 3470               		.loc 1 620 0
 3471 109c 00C0      		rjmp .L110
 3472               	.L112:
 621:lp_solve_5.5/lp_params.c ****                           ptr2++;
 3473               		.loc 1 621 0
 3474 109e CE01      		movw r24,r28
 3475 10a0 8B5D      		subi r24,-37
 3476 10a2 9F4E      		sbci r25,-17
 3477 10a4 FC01      		movw r30,r24
 3478 10a6 8081      		ld r24,Z
 3479 10a8 9181      		ldd r25,Z+1
 3480 10aa 9C01      		movw r18,r24
 3481 10ac 2F5F      		subi r18,-1
 3482 10ae 3F4F      		sbci r19,-1
 3483 10b0 CE01      		movw r24,r28
 3484 10b2 8B5D      		subi r24,-37
 3485 10b4 9F4E      		sbci r25,-17
 3486 10b6 FC01      		movw r30,r24
 3487 10b8 3183      		std Z+1,r19
 3488 10ba 2083      		st Z,r18
 3489               	.L110:
 620:lp_solve_5.5/lp_params.c ****                         while((*ptr2) && (isspace(*ptr2)))
 3490               		.loc 1 620 0
 3491 10bc CE01      		movw r24,r28
 3492 10be 8B5D      		subi r24,-37
 3493 10c0 9F4E      		sbci r25,-17
 3494 10c2 FC01      		movw r30,r24
 3495 10c4 8081      		ld r24,Z
 3496 10c6 9181      		ldd r25,Z+1
 3497 10c8 FC01      		movw r30,r24
 3498 10ca 8081      		ld r24,Z
 3499 10cc 8823      		tst r24
 3500 10ce 01F0      		breq .L111
 620:lp_solve_5.5/lp_params.c ****                         while((*ptr2) && (isspace(*ptr2)))
 3501               		.loc 1 620 0 is_stmt 0 discriminator 1
 3502 10d0 CE01      		movw r24,r28
 3503 10d2 8B5D      		subi r24,-37
 3504 10d4 9F4E      		sbci r25,-17
 3505 10d6 FC01      		movw r30,r24
 3506 10d8 8081      		ld r24,Z
 3507 10da 9181      		ldd r25,Z+1
 3508 10dc FC01      		movw r30,r24
 3509 10de 8081      		ld r24,Z
 3510 10e0 882F      		mov r24,r24
 3511 10e2 90E0      		ldi r25,0
 3512 10e4 0E94 0000 		call isspace
 3513 10e8 892B      		or r24,r25
 3514 10ea 01F4      		brne .L112
 3515               	.L111:
 622:lp_solve_5.5/lp_params.c ****                         if(*ptr2) {
 3516               		.loc 1 622 0 is_stmt 1
 3517 10ec CE01      		movw r24,r28
 3518 10ee 8B5D      		subi r24,-37
 3519 10f0 9F4E      		sbci r25,-17
 3520 10f2 FC01      		movw r30,r24
 3521 10f4 8081      		ld r24,Z
 3522 10f6 9181      		ldd r25,Z+1
 3523 10f8 FC01      		movw r30,r24
 3524 10fa 8081      		ld r24,Z
 3525 10fc 8823      		tst r24
 3526 10fe 01F4      		brne .+2
 3527 1100 00C0      		rjmp .L139
 623:lp_solve_5.5/lp_params.c ****                           report(lp, IMPORTANT, "read_params: Invalid real value on line %d\n", lin
 3528               		.loc 1 623 0
 3529 1102 8E81      		ldd r24,Y+6
 3530 1104 8F93      		push r24
 3531 1106 8D81      		ldd r24,Y+5
 3532 1108 8F93      		push r24
 3533 110a 80E0      		ldi r24,lo8(.LC149)
 3534 110c 90E0      		ldi r25,hi8(.LC149)
 3535 110e 892F      		mov r24,r25
 3536 1110 8F93      		push r24
 3537 1112 80E0      		ldi r24,lo8(.LC149)
 3538 1114 90E0      		ldi r25,hi8(.LC149)
 3539 1116 8F93      		push r24
 3540 1118 1F92      		push __zero_reg__
 3541 111a 83E0      		ldi r24,lo8(3)
 3542 111c 8F93      		push r24
 3543 111e CE01      		movw r24,r28
 3544 1120 895D      		subi r24,-39
 3545 1122 9F4E      		sbci r25,-17
 3546 1124 FC01      		movw r30,r24
 3547 1126 2181      		ldd r18,Z+1
 3548 1128 2F93      		push r18
 3549 112a FC01      		movw r30,r24
 3550 112c 8081      		ld r24,Z
 3551 112e 8F93      		push r24
 3552 1130 0E94 0000 		call report
 3553 1134 6DB7      		in r22,__SP_L__
 3554 1136 7EB7      		in r23,__SP_H__
 3555 1138 685F      		subi r22,-8
 3556 113a 7F4F      		sbci r23,-1
 3557 113c 0FB6      		in __tmp_reg__,__SREG__
 3558 113e F894      		cli
 3559 1140 DEBF      		out __SP_H__,r29
 3560 1142 0FBE      		out __SREG__,__tmp_reg__
 3561 1144 CDBF      		out __SP_L__,r28
 624:lp_solve_5.5/lp_params.c ****                           ret = FALSE;
 3562               		.loc 1 624 0
 3563 1146 1A82      		std Y+2,__zero_reg__
 3564 1148 1982      		std Y+1,__zero_reg__
 625:lp_solve_5.5/lp_params.c ****                         }
 626:lp_solve_5.5/lp_params.c ****                         break;
 3565               		.loc 1 626 0
 3566 114a 0000      		nop
 3567 114c 00C0      		rjmp .L139
 3568               	.L127:
 627:lp_solve_5.5/lp_params.c ****                     }
 628:lp_solve_5.5/lp_params.c ****                   }
 629:lp_solve_5.5/lp_params.c ****                   else {
 630:lp_solve_5.5/lp_params.c ****                     while(ret) {
 631:lp_solve_5.5/lp_params.c ****                       ptr = strchr(ptr1, '+');
 3569               		.loc 1 631 0
 3570 114e 8F89      		ldd r24,Y+23
 3571 1150 988D      		ldd r25,Y+24
 3572 1152 6BE2      		ldi r22,lo8(43)
 3573 1154 70E0      		ldi r23,0
 3574 1156 0E94 0000 		call strchr
 3575 115a 9E8B      		std Y+22,r25
 3576 115c 8D8B      		std Y+21,r24
 632:lp_solve_5.5/lp_params.c ****                       if(ptr == NULL)
 3577               		.loc 1 632 0
 3578 115e 8D89      		ldd r24,Y+21
 3579 1160 9E89      		ldd r25,Y+22
 3580 1162 892B      		or r24,r25
 3581 1164 01F4      		brne .L117
 633:lp_solve_5.5/lp_params.c ****                         ptr = ptr1 + strlen(ptr1);
 3582               		.loc 1 633 0
 3583 1166 8F89      		ldd r24,Y+23
 3584 1168 988D      		ldd r25,Y+24
 3585 116a 0E94 0000 		call strlen
 3586 116e 9C01      		movw r18,r24
 3587 1170 8F89      		ldd r24,Y+23
 3588 1172 988D      		ldd r25,Y+24
 3589 1174 820F      		add r24,r18
 3590 1176 931F      		adc r25,r19
 3591 1178 9E8B      		std Y+22,r25
 3592 117a 8D8B      		std Y+21,r24
 634:lp_solve_5.5/lp_params.c ****                       for(; isspace(*ptr1); ptr1++);
 3593               		.loc 1 634 0
 3594 117c 00C0      		rjmp .L117
 3595               	.L118:
 3596               		.loc 1 634 0 is_stmt 0 discriminator 2
 3597 117e 8F89      		ldd r24,Y+23
 3598 1180 988D      		ldd r25,Y+24
 3599 1182 0196      		adiw r24,1
 3600 1184 988F      		std Y+24,r25
 3601 1186 8F8B      		std Y+23,r24
 3602               	.L117:
 3603               		.loc 1 634 0 discriminator 1
 3604 1188 8F89      		ldd r24,Y+23
 3605 118a 988D      		ldd r25,Y+24
 3606 118c FC01      		movw r30,r24
 3607 118e 8081      		ld r24,Z
 3608 1190 882F      		mov r24,r24
 3609 1192 90E0      		ldi r25,0
 3610 1194 0E94 0000 		call isspace
 3611 1198 892B      		or r24,r25
 3612 119a 01F4      		brne .L118
 635:lp_solve_5.5/lp_params.c ****                       for(ptr2 = ptr - 1; (ptr2 >= ptr1) && (isspace(*ptr2)); ptr2--);
 3613               		.loc 1 635 0 is_stmt 1
 3614 119c 8D89      		ldd r24,Y+21
 3615 119e 9E89      		ldd r25,Y+22
 3616 11a0 9C01      		movw r18,r24
 3617 11a2 2150      		subi r18,1
 3618 11a4 3109      		sbc r19,__zero_reg__
 3619 11a6 CE01      		movw r24,r28
 3620 11a8 8B5D      		subi r24,-37
 3621 11aa 9F4E      		sbci r25,-17
 3622 11ac FC01      		movw r30,r24
 3623 11ae 3183      		std Z+1,r19
 3624 11b0 2083      		st Z,r18
 3625 11b2 00C0      		rjmp .L119
 3626               	.L121:
 3627               		.loc 1 635 0 is_stmt 0 discriminator 4
 3628 11b4 CE01      		movw r24,r28
 3629 11b6 8B5D      		subi r24,-37
 3630 11b8 9F4E      		sbci r25,-17
 3631 11ba FC01      		movw r30,r24
 3632 11bc 8081      		ld r24,Z
 3633 11be 9181      		ldd r25,Z+1
 3634 11c0 9C01      		movw r18,r24
 3635 11c2 2150      		subi r18,1
 3636 11c4 3109      		sbc r19,__zero_reg__
 3637 11c6 CE01      		movw r24,r28
 3638 11c8 8B5D      		subi r24,-37
 3639 11ca 9F4E      		sbci r25,-17
 3640 11cc FC01      		movw r30,r24
 3641 11ce 3183      		std Z+1,r19
 3642 11d0 2083      		st Z,r18
 3643               	.L119:
 3644               		.loc 1 635 0 discriminator 1
 3645 11d2 CE01      		movw r24,r28
 3646 11d4 8B5D      		subi r24,-37
 3647 11d6 9F4E      		sbci r25,-17
 3648 11d8 FC01      		movw r30,r24
 3649 11da 2081      		ld r18,Z
 3650 11dc 3181      		ldd r19,Z+1
 3651 11de 8F89      		ldd r24,Y+23
 3652 11e0 988D      		ldd r25,Y+24
 3653 11e2 2817      		cp r18,r24
 3654 11e4 3907      		cpc r19,r25
 3655 11e6 00F0      		brlo .L120
 3656               		.loc 1 635 0 discriminator 3
 3657 11e8 CE01      		movw r24,r28
 3658 11ea 8B5D      		subi r24,-37
 3659 11ec 9F4E      		sbci r25,-17
 3660 11ee FC01      		movw r30,r24
 3661 11f0 8081      		ld r24,Z
 3662 11f2 9181      		ldd r25,Z+1
 3663 11f4 FC01      		movw r30,r24
 3664 11f6 8081      		ld r24,Z
 3665 11f8 882F      		mov r24,r24
 3666 11fa 90E0      		ldi r25,0
 3667 11fc 0E94 0000 		call isspace
 3668 1200 892B      		or r24,r25
 3669 1202 01F4      		brne .L121
 3670               	.L120:
 636:lp_solve_5.5/lp_params.c ****                       if(ptr2 <= ptr1)
 3671               		.loc 1 636 0 is_stmt 1
 3672 1204 CE01      		movw r24,r28
 3673 1206 8B5D      		subi r24,-37
 3674 1208 9F4E      		sbci r25,-17
 3675 120a FC01      		movw r30,r24
 3676 120c 2081      		ld r18,Z
 3677 120e 3181      		ldd r19,Z+1
 3678 1210 8F89      		ldd r24,Y+23
 3679 1212 988D      		ldd r25,Y+24
 3680 1214 8217      		cp r24,r18
 3681 1216 9307      		cpc r25,r19
 3682 1218 00F0      		brlo .+2
 3683 121a 00C0      		rjmp .L140
 637:lp_solve_5.5/lp_params.c ****                         break;
 638:lp_solve_5.5/lp_params.c ****                       else {
 639:lp_solve_5.5/lp_params.c ****                         ptr2[1] = 0;
 3684               		.loc 1 639 0
 3685 121c CE01      		movw r24,r28
 3686 121e 8B5D      		subi r24,-37
 3687 1220 9F4E      		sbci r25,-17
 3688 1222 FC01      		movw r30,r24
 3689 1224 8081      		ld r24,Z
 3690 1226 9181      		ldd r25,Z+1
 3691 1228 0196      		adiw r24,1
 3692 122a FC01      		movw r30,r24
 3693 122c 1082      		st Z,__zero_reg__
 640:lp_solve_5.5/lp_params.c ****                         hp = findhash(ptr1, hashparameters);
 3694               		.loc 1 640 0
 3695 122e 2D8D      		ldd r18,Y+29
 3696 1230 3E8D      		ldd r19,Y+30
 3697 1232 8F89      		ldd r24,Y+23
 3698 1234 988D      		ldd r25,Y+24
 3699 1236 B901      		movw r22,r18
 3700 1238 0E94 0000 		call findhash
 3701 123c 9AA3      		std Y+34,r25
 3702 123e 89A3      		std Y+33,r24
 641:lp_solve_5.5/lp_params.c ****                         if (hp == NULL) {
 3703               		.loc 1 641 0
 3704 1240 89A1      		ldd r24,Y+33
 3705 1242 9AA1      		ldd r25,Y+34
 3706 1244 892B      		or r24,r25
 3707 1246 01F4      		brne .L123
 642:lp_solve_5.5/lp_params.c ****                           report(lp, IMPORTANT, "read_params: Invalid parameter name (%s) on line %
 3708               		.loc 1 642 0
 3709 1248 8E81      		ldd r24,Y+6
 3710 124a 8F93      		push r24
 3711 124c 8D81      		ldd r24,Y+5
 3712 124e 8F93      		push r24
 3713 1250 888D      		ldd r24,Y+24
 3714 1252 8F93      		push r24
 3715 1254 8F89      		ldd r24,Y+23
 3716 1256 8F93      		push r24
 3717 1258 80E0      		ldi r24,lo8(.LC150)
 3718 125a 90E0      		ldi r25,hi8(.LC150)
 3719 125c 892F      		mov r24,r25
 3720 125e 8F93      		push r24
 3721 1260 80E0      		ldi r24,lo8(.LC150)
 3722 1262 90E0      		ldi r25,hi8(.LC150)
 3723 1264 8F93      		push r24
 3724 1266 1F92      		push __zero_reg__
 3725 1268 83E0      		ldi r24,lo8(3)
 3726 126a 8F93      		push r24
 3727 126c CE01      		movw r24,r28
 3728 126e 895D      		subi r24,-39
 3729 1270 9F4E      		sbci r25,-17
 3730 1272 FC01      		movw r30,r24
 3731 1274 2181      		ldd r18,Z+1
 3732 1276 2F93      		push r18
 3733 1278 FC01      		movw r30,r24
 3734 127a 8081      		ld r24,Z
 3735 127c 8F93      		push r24
 3736 127e 0E94 0000 		call report
 3737 1282 6DB7      		in r22,__SP_L__
 3738 1284 7EB7      		in r23,__SP_H__
 3739 1286 665F      		subi r22,-10
 3740 1288 7F4F      		sbci r23,-1
 3741 128a 0FB6      		in __tmp_reg__,__SREG__
 3742 128c F894      		cli
 3743 128e DEBF      		out __SP_H__,r29
 3744 1290 0FBE      		out __SREG__,__tmp_reg__
 3745 1292 CDBF      		out __SP_L__,r28
 643:lp_solve_5.5/lp_params.c ****                           ret = FALSE;
 3746               		.loc 1 643 0
 3747 1294 1A82      		std Y+2,__zero_reg__
 3748 1296 1982      		std Y+1,__zero_reg__
 3749 1298 00C0      		rjmp .L124
 3750               	.L123:
 644:lp_solve_5.5/lp_params.c ****                         }
 645:lp_solve_5.5/lp_params.c ****                         else {
 646:lp_solve_5.5/lp_params.c ****                           j = hp->index;
 3751               		.loc 1 646 0
 3752 129a 89A1      		ldd r24,Y+33
 3753 129c 9AA1      		ldd r25,Y+34
 3754 129e FC01      		movw r30,r24
 3755 12a0 8281      		ldd r24,Z+2
 3756 12a2 9381      		ldd r25,Z+3
 3757 12a4 9A87      		std Y+10,r25
 3758 12a6 8987      		std Y+9,r24
 647:lp_solve_5.5/lp_params.c ****                           if((j >= functions[i].elements) ||
 3759               		.loc 1 647 0
 3760 12a8 8F81      		ldd r24,Y+7
 3761 12aa 9885      		ldd r25,Y+8
 3762 12ac 8295      		swap r24
 3763 12ae 9295      		swap r25
 3764 12b0 907F      		andi r25,0xf0
 3765 12b2 9827      		eor r25,r24
 3766 12b4 807F      		andi r24,0xf0
 3767 12b6 9827      		eor r25,r24
 3768 12b8 8050      		subi r24,lo8(-(functions+10))
 3769 12ba 9040      		sbci r25,hi8(-(functions+10))
 3770 12bc FC01      		movw r30,r24
 3771 12be 2081      		ld r18,Z
 3772 12c0 3181      		ldd r19,Z+1
 3773 12c2 8985      		ldd r24,Y+9
 3774 12c4 9A85      		ldd r25,Y+10
 3775 12c6 8217      		cp r24,r18
 3776 12c8 9307      		cpc r25,r19
 3777 12ca 04F4      		brge .L125
 648:lp_solve_5.5/lp_params.c ****                              (strcmp(functions[i].values[j].svalue, ptr1))) {
 3778               		.loc 1 648 0 discriminator 1
 3779 12cc 8F81      		ldd r24,Y+7
 3780 12ce 9885      		ldd r25,Y+8
 3781 12d0 8295      		swap r24
 3782 12d2 9295      		swap r25
 3783 12d4 907F      		andi r25,0xf0
 3784 12d6 9827      		eor r25,r24
 3785 12d8 807F      		andi r24,0xf0
 3786 12da 9827      		eor r25,r24
 3787 12dc 8050      		subi r24,lo8(-(functions+8))
 3788 12de 9040      		sbci r25,hi8(-(functions+8))
 3789 12e0 FC01      		movw r30,r24
 3790 12e2 2081      		ld r18,Z
 3791 12e4 3181      		ldd r19,Z+1
 3792 12e6 8985      		ldd r24,Y+9
 3793 12e8 9A85      		ldd r25,Y+10
 3794 12ea 880F      		lsl r24
 3795 12ec 991F      		rol r25
 3796 12ee 880F      		lsl r24
 3797 12f0 991F      		rol r25
 3798 12f2 820F      		add r24,r18
 3799 12f4 931F      		adc r25,r19
 3800 12f6 FC01      		movw r30,r24
 3801 12f8 8281      		ldd r24,Z+2
 3802 12fa 9381      		ldd r25,Z+3
 3803 12fc 2F89      		ldd r18,Y+23
 3804 12fe 388D      		ldd r19,Y+24
 3805 1300 B901      		movw r22,r18
 3806 1302 0E94 0000 		call strcmp
 647:lp_solve_5.5/lp_params.c ****                           if((j >= functions[i].elements) ||
 3807               		.loc 1 647 0 discriminator 1
 3808 1306 892B      		or r24,r25
 3809 1308 01F0      		breq .L126
 3810               	.L125:
 649:lp_solve_5.5/lp_params.c ****                             report(lp, IMPORTANT, "read_params: Inappropriate parameter name (%s) o
 3811               		.loc 1 649 0
 3812 130a 8E81      		ldd r24,Y+6
 3813 130c 8F93      		push r24
 3814 130e 8D81      		ldd r24,Y+5
 3815 1310 8F93      		push r24
 3816 1312 888D      		ldd r24,Y+24
 3817 1314 8F93      		push r24
 3818 1316 8F89      		ldd r24,Y+23
 3819 1318 8F93      		push r24
 3820 131a 80E0      		ldi r24,lo8(.LC151)
 3821 131c 90E0      		ldi r25,hi8(.LC151)
 3822 131e 892F      		mov r24,r25
 3823 1320 8F93      		push r24
 3824 1322 80E0      		ldi r24,lo8(.LC151)
 3825 1324 90E0      		ldi r25,hi8(.LC151)
 3826 1326 8F93      		push r24
 3827 1328 1F92      		push __zero_reg__
 3828 132a 83E0      		ldi r24,lo8(3)
 3829 132c 8F93      		push r24
 3830 132e CE01      		movw r24,r28
 3831 1330 895D      		subi r24,-39
 3832 1332 9F4E      		sbci r25,-17
 3833 1334 FC01      		movw r30,r24
 3834 1336 2181      		ldd r18,Z+1
 3835 1338 2F93      		push r18
 3836 133a FC01      		movw r30,r24
 3837 133c 8081      		ld r24,Z
 3838 133e 8F93      		push r24
 3839 1340 0E94 0000 		call report
 3840 1344 6DB7      		in r22,__SP_L__
 3841 1346 7EB7      		in r23,__SP_H__
 3842 1348 665F      		subi r22,-10
 3843 134a 7F4F      		sbci r23,-1
 3844 134c 0FB6      		in __tmp_reg__,__SREG__
 3845 134e F894      		cli
 3846 1350 DEBF      		out __SP_H__,r29
 3847 1352 0FBE      		out __SREG__,__tmp_reg__
 3848 1354 CDBF      		out __SP_L__,r28
 650:lp_solve_5.5/lp_params.c ****                             ret = FALSE;
 3849               		.loc 1 650 0
 3850 1356 1A82      		std Y+2,__zero_reg__
 3851 1358 1982      		std Y+1,__zero_reg__
 3852 135a 00C0      		rjmp .L124
 3853               	.L126:
 651:lp_solve_5.5/lp_params.c ****                           }
 652:lp_solve_5.5/lp_params.c ****                           else {
 653:lp_solve_5.5/lp_params.c ****                             intvalue += functions[i].values[j].value;
 3854               		.loc 1 653 0
 3855 135c 8F81      		ldd r24,Y+7
 3856 135e 9885      		ldd r25,Y+8
 3857 1360 8295      		swap r24
 3858 1362 9295      		swap r25
 3859 1364 907F      		andi r25,0xf0
 3860 1366 9827      		eor r25,r24
 3861 1368 807F      		andi r24,0xf0
 3862 136a 9827      		eor r25,r24
 3863 136c 8050      		subi r24,lo8(-(functions+8))
 3864 136e 9040      		sbci r25,hi8(-(functions+8))
 3865 1370 FC01      		movw r30,r24
 3866 1372 2081      		ld r18,Z
 3867 1374 3181      		ldd r19,Z+1
 3868 1376 8985      		ldd r24,Y+9
 3869 1378 9A85      		ldd r25,Y+10
 3870 137a 880F      		lsl r24
 3871 137c 991F      		rol r25
 3872 137e 880F      		lsl r24
 3873 1380 991F      		rol r25
 3874 1382 820F      		add r24,r18
 3875 1384 931F      		adc r25,r19
 3876 1386 FC01      		movw r30,r24
 3877 1388 8081      		ld r24,Z
 3878 138a 9181      		ldd r25,Z+1
 3879 138c 2D85      		ldd r18,Y+13
 3880 138e 3E85      		ldd r19,Y+14
 3881 1390 820F      		add r24,r18
 3882 1392 931F      		adc r25,r19
 3883 1394 9E87      		std Y+14,r25
 3884 1396 8D87      		std Y+13,r24
 3885               	.L124:
 654:lp_solve_5.5/lp_params.c ****                           }
 655:lp_solve_5.5/lp_params.c ****                         }
 656:lp_solve_5.5/lp_params.c ****                         ptr1 = ptr + 1;
 3886               		.loc 1 656 0
 3887 1398 8D89      		ldd r24,Y+21
 3888 139a 9E89      		ldd r25,Y+22
 3889 139c 0196      		adiw r24,1
 3890 139e 988F      		std Y+24,r25
 3891 13a0 8F8B      		std Y+23,r24
 3892               	.L115:
 630:lp_solve_5.5/lp_params.c ****                       ptr = strchr(ptr1, '+');
 3893               		.loc 1 630 0
 3894 13a2 8981      		ldd r24,Y+1
 3895 13a4 9A81      		ldd r25,Y+2
 3896 13a6 892B      		or r24,r25
 3897 13a8 01F0      		breq .+2
 3898 13aa 00C0      		rjmp .L127
 3899 13ac 00C0      		rjmp .L114
 3900               	.L138:
 617:lp_solve_5.5/lp_params.c ****                       case REALfunction:
 3901               		.loc 1 617 0
 3902 13ae 0000      		nop
 3903 13b0 00C0      		rjmp .L114
 3904               	.L139:
 626:lp_solve_5.5/lp_params.c ****                     }
 3905               		.loc 1 626 0
 3906 13b2 0000      		nop
 3907 13b4 00C0      		rjmp .L114
 3908               	.L140:
 637:lp_solve_5.5/lp_params.c ****                       else {
 3909               		.loc 1 637 0
 3910 13b6 0000      		nop
 3911               	.L114:
 657:lp_solve_5.5/lp_params.c ****                       }
 658:lp_solve_5.5/lp_params.c ****                     }
 659:lp_solve_5.5/lp_params.c ****                   }
 660:lp_solve_5.5/lp_params.c ****                   if(ret) {
 3912               		.loc 1 660 0
 3913 13b8 8981      		ldd r24,Y+1
 3914 13ba 9A81      		ldd r25,Y+2
 3915 13bc 892B      		or r24,r25
 3916 13be 01F4      		brne .+2
 3917 13c0 00C0      		rjmp .L141
 661:lp_solve_5.5/lp_params.c ****                     switch(functions[i].type) {
 3918               		.loc 1 661 0
 3919 13c2 8F81      		ldd r24,Y+7
 3920 13c4 9885      		ldd r25,Y+8
 3921 13c6 8295      		swap r24
 3922 13c8 9295      		swap r25
 3923 13ca 907F      		andi r25,0xf0
 3924 13cc 9827      		eor r25,r24
 3925 13ce 807F      		andi r24,0xf0
 3926 13d0 9827      		eor r25,r24
 3927 13d2 8050      		subi r24,lo8(-(functions+6))
 3928 13d4 9040      		sbci r25,hi8(-(functions+6))
 3929 13d6 FC01      		movw r30,r24
 3930 13d8 8081      		ld r24,Z
 3931 13da 9181      		ldd r25,Z+1
 3932 13dc 8230      		cpi r24,2
 3933 13de 9105      		cpc r25,__zero_reg__
 3934 13e0 01F0      		breq .L128
 3935 13e2 8330      		cpi r24,3
 3936 13e4 9105      		cpc r25,__zero_reg__
 3937 13e6 04F4      		brge .L129
 3938 13e8 0197      		sbiw r24,1
 3939 13ea 01F0      		breq .L130
 3940 13ec 00C0      		rjmp .L93
 3941               	.L129:
 3942 13ee 8330      		cpi r24,3
 3943 13f0 9105      		cpc r25,__zero_reg__
 3944 13f2 01F4      		brne .+2
 3945 13f4 00C0      		rjmp .L131
 3946 13f6 0497      		sbiw r24,4
 3947 13f8 01F4      		brne .+2
 3948 13fa 00C0      		rjmp .L132
 3949 13fc 00C0      		rjmp .L93
 3950               	.L130:
 662:lp_solve_5.5/lp_params.c ****                       case intfunction:
 663:lp_solve_5.5/lp_params.c ****                         functions[i].set_function.int_set_function(lp, intvalue);
 3951               		.loc 1 663 0
 3952 13fe 8F81      		ldd r24,Y+7
 3953 1400 9885      		ldd r25,Y+8
 3954 1402 8295      		swap r24
 3955 1404 9295      		swap r25
 3956 1406 907F      		andi r25,0xf0
 3957 1408 9827      		eor r25,r24
 3958 140a 807F      		andi r24,0xf0
 3959 140c 9827      		eor r25,r24
 3960 140e 8050      		subi r24,lo8(-(functions+4))
 3961 1410 9040      		sbci r25,hi8(-(functions+4))
 3962 1412 FC01      		movw r30,r24
 3963 1414 2081      		ld r18,Z
 3964 1416 3181      		ldd r19,Z+1
 3965 1418 4D85      		ldd r20,Y+13
 3966 141a 5E85      		ldd r21,Y+14
 3967 141c CE01      		movw r24,r28
 3968 141e 895D      		subi r24,-39
 3969 1420 9F4E      		sbci r25,-17
 3970 1422 FC01      		movw r30,r24
 3971 1424 8081      		ld r24,Z
 3972 1426 9181      		ldd r25,Z+1
 3973 1428 BA01      		movw r22,r20
 3974 142a F901      		movw r30,r18
 3975 142c 0995      		icall
 664:lp_solve_5.5/lp_params.c ****                         break;
 3976               		.loc 1 664 0
 3977 142e 00C0      		rjmp .L93
 3978               	.L128:
 665:lp_solve_5.5/lp_params.c ****                       case longfunction:
 666:lp_solve_5.5/lp_params.c ****                         functions[i].set_function.long_set_function(lp, intvalue);
 3979               		.loc 1 666 0
 3980 1430 8F81      		ldd r24,Y+7
 3981 1432 9885      		ldd r25,Y+8
 3982 1434 8295      		swap r24
 3983 1436 9295      		swap r25
 3984 1438 907F      		andi r25,0xf0
 3985 143a 9827      		eor r25,r24
 3986 143c 807F      		andi r24,0xf0
 3987 143e 9827      		eor r25,r24
 3988 1440 8050      		subi r24,lo8(-(functions+4))
 3989 1442 9040      		sbci r25,hi8(-(functions+4))
 3990 1444 FC01      		movw r30,r24
 3991 1446 2081      		ld r18,Z
 3992 1448 3181      		ldd r19,Z+1
 3993 144a 8D85      		ldd r24,Y+13
 3994 144c 9E85      		ldd r25,Y+14
 3995 144e 092E      		mov __tmp_reg__,r25
 3996 1450 000C      		lsl r0
 3997 1452 AA0B      		sbc r26,r26
 3998 1454 BB0B      		sbc r27,r27
 3999 1456 AE01      		movw r20,r28
 4000 1458 495D      		subi r20,-39
 4001 145a 5F4E      		sbci r21,-17
 4002 145c FA01      		movw r30,r20
 4003 145e 0190      		ld __tmp_reg__,Z+
 4004 1460 F081      		ld r31,Z
 4005 1462 E02D      		mov r30,__tmp_reg__
 4006 1464 C35D      		subi r28,lo8(-4141)
 4007 1466 DF4E      		sbci r29,hi8(-4141)
 4008 1468 F983      		std Y+1,r31
 4009 146a E883      		st Y,r30
 4010 146c CD52      		subi r28,lo8(4141)
 4011 146e D041      		sbci r29,hi8(4141)
 4012 1470 AC01      		movw r20,r24
 4013 1472 BD01      		movw r22,r26
 4014 1474 C35D      		subi r28,lo8(-4141)
 4015 1476 DF4E      		sbci r29,hi8(-4141)
 4016 1478 8881      		ld r24,Y
 4017 147a 9981      		ldd r25,Y+1
 4018 147c CD52      		subi r28,lo8(4141)
 4019 147e D041      		sbci r29,hi8(4141)
 4020 1480 F901      		movw r30,r18
 4021 1482 0995      		icall
 667:lp_solve_5.5/lp_params.c ****                         break;
 4022               		.loc 1 667 0
 4023 1484 00C0      		rjmp .L93
 4024               	.L131:
 668:lp_solve_5.5/lp_params.c ****                       case MYBOOLfunction:
 669:lp_solve_5.5/lp_params.c ****                         functions[i].set_function.MYBOOL_set_function(lp, (MYBOOL) intvalue);
 4025               		.loc 1 669 0
 4026 1486 8F81      		ldd r24,Y+7
 4027 1488 9885      		ldd r25,Y+8
 4028 148a 8295      		swap r24
 4029 148c 9295      		swap r25
 4030 148e 907F      		andi r25,0xf0
 4031 1490 9827      		eor r25,r24
 4032 1492 807F      		andi r24,0xf0
 4033 1494 9827      		eor r25,r24
 4034 1496 8050      		subi r24,lo8(-(functions+4))
 4035 1498 9040      		sbci r25,hi8(-(functions+4))
 4036 149a FC01      		movw r30,r24
 4037 149c 2081      		ld r18,Z
 4038 149e 3181      		ldd r19,Z+1
 4039 14a0 4D85      		ldd r20,Y+13
 4040 14a2 CE01      		movw r24,r28
 4041 14a4 895D      		subi r24,-39
 4042 14a6 9F4E      		sbci r25,-17
 4043 14a8 FC01      		movw r30,r24
 4044 14aa 8081      		ld r24,Z
 4045 14ac 9181      		ldd r25,Z+1
 4046 14ae 642F      		mov r22,r20
 4047 14b0 F901      		movw r30,r18
 4048 14b2 0995      		icall
 670:lp_solve_5.5/lp_params.c ****                         break;
 4049               		.loc 1 670 0
 4050 14b4 00C0      		rjmp .L93
 4051               	.L132:
 671:lp_solve_5.5/lp_params.c ****                       case REALfunction:
 672:lp_solve_5.5/lp_params.c ****                         functions[i].set_function.REAL_set_function(lp, REALvalue);
 4052               		.loc 1 672 0
 4053 14b6 8F81      		ldd r24,Y+7
 4054 14b8 9885      		ldd r25,Y+8
 4055 14ba 8295      		swap r24
 4056 14bc 9295      		swap r25
 4057 14be 907F      		andi r25,0xf0
 4058 14c0 9827      		eor r25,r24
 4059 14c2 807F      		andi r24,0xf0
 4060 14c4 9827      		eor r25,r24
 4061 14c6 8050      		subi r24,lo8(-(functions+4))
 4062 14c8 9040      		sbci r25,hi8(-(functions+4))
 4063 14ca FC01      		movw r30,r24
 4064 14cc 2081      		ld r18,Z
 4065 14ce 3181      		ldd r19,Z+1
 4066 14d0 8989      		ldd r24,Y+17
 4067 14d2 9A89      		ldd r25,Y+18
 4068 14d4 AB89      		ldd r26,Y+19
 4069 14d6 BC89      		ldd r27,Y+20
 4070 14d8 AE01      		movw r20,r28
 4071 14da 495D      		subi r20,-39
 4072 14dc 5F4E      		sbci r21,-17
 4073 14de FA01      		movw r30,r20
 4074 14e0 0190      		ld __tmp_reg__,Z+
 4075 14e2 F081      		ld r31,Z
 4076 14e4 E02D      		mov r30,__tmp_reg__
 4077 14e6 C35D      		subi r28,lo8(-4141)
 4078 14e8 DF4E      		sbci r29,hi8(-4141)
 4079 14ea F983      		std Y+1,r31
 4080 14ec E883      		st Y,r30
 4081 14ee CD52      		subi r28,lo8(4141)
 4082 14f0 D041      		sbci r29,hi8(4141)
 4083 14f2 AC01      		movw r20,r24
 4084 14f4 BD01      		movw r22,r26
 4085 14f6 C35D      		subi r28,lo8(-4141)
 4086 14f8 DF4E      		sbci r29,hi8(-4141)
 4087 14fa 8881      		ld r24,Y
 4088 14fc 9981      		ldd r25,Y+1
 4089 14fe CD52      		subi r28,lo8(4141)
 4090 1500 D041      		sbci r29,hi8(4141)
 4091 1502 F901      		movw r30,r18
 4092 1504 0995      		icall
 673:lp_solve_5.5/lp_params.c ****                         break;
 4093               		.loc 1 673 0
 4094 1506 0000      		nop
 4095               	.L93:
 4096               	.L141:
 674:lp_solve_5.5/lp_params.c ****                     }
 675:lp_solve_5.5/lp_params.c ****                   }
 676:lp_solve_5.5/lp_params.c ****                 }
 677:lp_solve_5.5/lp_params.c ****               }
 678:lp_solve_5.5/lp_params.c ****             }
 679:lp_solve_5.5/lp_params.c ****           }
 680:lp_solve_5.5/lp_params.c ****           break;
 4097               		.loc 1 680 0
 4098 1508 0000      		nop
 4099               	.L81:
 554:lp_solve_5.5/lp_params.c ****       line++;
 4100               		.loc 1 554 0
 4101 150a 8981      		ldd r24,Y+1
 4102 150c 9A81      		ldd r25,Y+2
 4103 150e 892B      		or r24,r25
 4104 1510 01F0      		breq .L133
 554:lp_solve_5.5/lp_params.c ****       line++;
 4105               		.loc 1 554 0 is_stmt 0 discriminator 1
 4106 1512 8B81      		ldd r24,Y+3
 4107 1514 9C81      		ldd r25,Y+4
 4108 1516 892B      		or r24,r25
 4109 1518 01F0      		breq .+2
 4110 151a 00C0      		rjmp .L134
 4111               	.L133:
 681:lp_solve_5.5/lp_params.c ****       }
 682:lp_solve_5.5/lp_params.c ****     }
 683:lp_solve_5.5/lp_params.c **** 
 684:lp_solve_5.5/lp_params.c ****     FREE(header);
 4112               		.loc 1 684 0 is_stmt 1
 4113 151c CE01      		movw r24,r28
 4114 151e 8D5D      		subi r24,-35
 4115 1520 9F4E      		sbci r25,-17
 4116 1522 FC01      		movw r30,r24
 4117 1524 8081      		ld r24,Z
 4118 1526 9181      		ldd r25,Z+1
 4119 1528 892B      		or r24,r25
 4120 152a 01F0      		breq .L135
 4121               		.loc 1 684 0 is_stmt 0 discriminator 1
 4122 152c CE01      		movw r24,r28
 4123 152e 8D5D      		subi r24,-35
 4124 1530 9F4E      		sbci r25,-17
 4125 1532 FC01      		movw r30,r24
 4126 1534 8081      		ld r24,Z
 4127 1536 9181      		ldd r25,Z+1
 4128 1538 0E94 0000 		call free
 4129 153c CE01      		movw r24,r28
 4130 153e 8D5D      		subi r24,-35
 4131 1540 9F4E      		sbci r25,-17
 4132 1542 FC01      		movw r30,r24
 4133 1544 1182      		std Z+1,__zero_reg__
 4134 1546 1082      		st Z,__zero_reg__
 4135               	.L135:
 685:lp_solve_5.5/lp_params.c ****     free_hash_table(hashfunctions);
 4136               		.loc 1 685 0 is_stmt 1
 4137 1548 8B8D      		ldd r24,Y+27
 4138 154a 9C8D      		ldd r25,Y+28
 4139 154c 0E94 0000 		call free_hash_table
 686:lp_solve_5.5/lp_params.c ****     free_hash_table(hashparameters);
 4140               		.loc 1 686 0
 4141 1550 8D8D      		ldd r24,Y+29
 4142 1552 9E8D      		ldd r25,Y+30
 4143 1554 0E94 0000 		call free_hash_table
 687:lp_solve_5.5/lp_params.c **** 
 688:lp_solve_5.5/lp_params.c ****     ini_close(fp);
 4144               		.loc 1 688 0
 4145 1558 898D      		ldd r24,Y+25
 4146 155a 9A8D      		ldd r25,Y+26
 4147 155c 0E94 0000 		call ini_close
 4148               	.L71:
 689:lp_solve_5.5/lp_params.c ****   }
 690:lp_solve_5.5/lp_params.c **** 
 691:lp_solve_5.5/lp_params.c ****   return( (MYBOOL) ret );
 4149               		.loc 1 691 0
 4150 1560 8981      		ldd r24,Y+1
 4151               	/* epilogue start */
 692:lp_solve_5.5/lp_params.c **** }
 4152               		.loc 1 692 0
 4153 1562 C25D      		subi r28,-46
 4154 1564 DF4E      		sbci r29,-17
 4155 1566 0FB6      		in __tmp_reg__,__SREG__
 4156 1568 F894      		cli
 4157 156a DEBF      		out __SP_H__,r29
 4158 156c 0FBE      		out __SREG__,__tmp_reg__
 4159 156e CDBF      		out __SP_L__,r28
 4160 1570 DF91      		pop r29
 4161 1572 CF91      		pop r28
 4162 1574 0895      		ret
 4163               		.cfi_endproc
 4164               	.LFE17:
 4166               	.Letext0:
 4167               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 4168               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 4169               		.file 4 "lp_solve_5.5\\shared/commonlib.h"
 4170               		.file 5 "lp_solve_5.5/lp_types.h"
 4171               		.file 6 "lp_solve_5.5/lp_lib.h"
 4172               		.file 7 "lp_solve_5.5/lp_utils.h"
 4173               		.file 8 "lp_solve_5.5/lp_Hash.h"
 4174               		.file 9 "lp_solve_5.5/lp_matrix.h"
 4175               		.file 10 "lp_solve_5.5/lp_mipbb.h"
 4176               		.file 11 "lp_solve_5.5/lp_SOS.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lp_params.c
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:37     .data.anti_degen:00000000 anti_degen
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:70     .data.basiscrash:00000000 basiscrash
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:87     .data.bb_floorfirst:00000000 bb_floorfirst
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:140    .data.bb_rule:00000000 bb_rule
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:197    .data.improve:00000000 improve
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:210    .text:00000000 get_mip_gap_abs
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:256    .text:0000002a get_mip_gap_rel
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:301    .text:00000054 set_mip_gap_abs
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:360    .text:0000009a set_mip_gap_rel
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:450    .data.pivoting:00000000 pivoting
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:527    .data.presolving:00000000 presolving
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:574    .text:000000e0 STRLWR
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:650    .text:0000013c STRUPR
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:726    .text:00000198 set_presolve1
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:779    .text:000001d4 set_presolve2
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:841    .data.print_sol:00000000 print_sol
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:882    .data.scaling:00000000 scaling
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:925    .data.simplextype:00000000 simplextype
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:952    .data.verbose:00000000 verbose
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:1037   .data.functions:00000000 functions
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:1311   .text:00000210 write_params1
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:2257   .text:0000088c readoptions
C:\Users\GUILHE~1\AppData\Local\Temp\ccS8coTZ.s:2504   .text:000009f6 read_params

UNDEFINED SYMBOLS
get_mip_gap
set_mip_gap
tolower
toupper
get_presolveloops
set_presolve
get_presolve
get_anti_degen
set_anti_degen
get_basiscrash
set_basiscrash
get_improve
set_improve
get_maxpivot
set_maxpivot
get_negrange
set_negrange
get_pivoting
set_pivoting
get_scalelimit
set_scalelimit
get_scaling
set_scaling
get_simplextype
set_simplextype
is_obj_in_basis
set_obj_in_basis
get_bb_depthlimit
set_bb_depthlimit
get_bb_floorfirst
set_bb_floorfirst
get_bb_rule
set_bb_rule
is_break_at_first
set_break_at_first
get_break_at_value
set_break_at_value
get_epsint
set_epsint
get_epsb
set_epsb
get_epsd
set_epsd
get_epsel
set_epsel
get_epsperturb
set_epsperturb
get_epspivot
set_epspivot
get_infinite
set_infinite
get_break_numeric_accuracy
set_break_numeric_accuracy
is_debug
set_debug
get_obj_bound
set_obj_bound
get_print_sol
set_print_sol
get_timeout
set_timeout
is_trace
set_trace
get_verbose
set_verbose
ini_writeheader
lp_solve_version
sprintf
ini_writecomment
strcat
ini_writedata
strchr
isspace
calloc
memcpy
strdup
ini_open
create_hash_table
puthash
strcmp
ini_readdata
report
findhash
strtol
strtod
strlen
free
free_hash_table
ini_close
__do_copy_data
