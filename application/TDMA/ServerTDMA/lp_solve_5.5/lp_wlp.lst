   1               		.file	"lp_wlp.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	write_data:
  13               	.LFB7:
  14               		.file 1 "lp_solve_5.5/lp_wlp.c"
   1:lp_solve_5.5/lp_wlp.c **** 
   2:lp_solve_5.5/lp_wlp.c **** #include <stdio.h>
   3:lp_solve_5.5/lp_wlp.c **** #include <stdarg.h>
   4:lp_solve_5.5/lp_wlp.c **** #include <string.h>
   5:lp_solve_5.5/lp_wlp.c **** 
   6:lp_solve_5.5/lp_wlp.c **** #include "commonlib.h"
   7:lp_solve_5.5/lp_wlp.c **** #include "lp_lib.h"
   8:lp_solve_5.5/lp_wlp.c **** #include "lp_scale.h"
   9:lp_solve_5.5/lp_wlp.c **** #include "lp_utils.h"
  10:lp_solve_5.5/lp_wlp.c **** #include "lp_report.h"
  11:lp_solve_5.5/lp_wlp.c **** #include "lp_wlp.h"
  12:lp_solve_5.5/lp_wlp.c **** 
  13:lp_solve_5.5/lp_wlp.c **** #ifdef FORTIFY
  14:lp_solve_5.5/lp_wlp.c **** # include "lp_fortify.h"
  15:lp_solve_5.5/lp_wlp.c **** #endif
  16:lp_solve_5.5/lp_wlp.c **** 
  17:lp_solve_5.5/lp_wlp.c **** /* Define buffer-size controled function mapping */
  18:lp_solve_5.5/lp_wlp.c **** # if defined _MSC_VER
  19:lp_solve_5.5/lp_wlp.c **** #  define vsnprintf _vsnprintf
  20:lp_solve_5.5/lp_wlp.c **** # endif
  21:lp_solve_5.5/lp_wlp.c **** 
  22:lp_solve_5.5/lp_wlp.c **** /* ------------------------------------------------------------------------- */
  23:lp_solve_5.5/lp_wlp.c **** /* Input and output of lp format model files for lp_solve                    */
  24:lp_solve_5.5/lp_wlp.c **** /* ------------------------------------------------------------------------- */
  25:lp_solve_5.5/lp_wlp.c **** 
  26:lp_solve_5.5/lp_wlp.c **** static int write_data(void *userhandle, write_modeldata_func write_modeldata, char *format, ...)
  27:lp_solve_5.5/lp_wlp.c **** {
  15               		.loc 1 27 0
  16               		.cfi_startproc
  17 0000 CF93      		push r28
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 28, -2
  21 0002 DF93      		push r29
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 29, -3
  25 0004 CDB7      		in r28,__SP_L__
  26 0006 DEB7      		in r29,__SP_H__
  27               	.LCFI2:
  28               		.cfi_def_cfa_register 28
  29 0008 C550      		subi r28,5
  30 000a D240      		sbci r29,2
  31               	.LCFI3:
  32               		.cfi_def_cfa_offset 521
  33 000c 0FB6      		in __tmp_reg__,__SREG__
  34 000e F894      		cli
  35 0010 DEBF      		out __SP_H__,r29
  36 0012 0FBE      		out __SREG__,__tmp_reg__
  37 0014 CDBF      		out __SP_L__,r28
  38               	/* prologue: function */
  39               	/* frame size = 517 */
  40               	/* stack size = 519 */
  41               	.L__stack_usage = 519
  28:lp_solve_5.5/lp_wlp.c ****   char buff[DEF_STRBUFSIZE+1];
  29:lp_solve_5.5/lp_wlp.c ****   va_list ap;
  30:lp_solve_5.5/lp_wlp.c ****   int n;
  31:lp_solve_5.5/lp_wlp.c **** 
  32:lp_solve_5.5/lp_wlp.c ****   va_start(ap, format);
  42               		.loc 1 32 0
  43 0016 9E01      		movw r18,r28
  44 0018 205F      		subi r18,-16
  45 001a 3D4F      		sbci r19,-3
  46 001c CE01      		movw r24,r28
  47 001e 8C5F      		subi r24,-4
  48 0020 9D4F      		sbci r25,-3
  49 0022 FC01      		movw r30,r24
  50 0024 3183      		std Z+1,r19
  51 0026 2083      		st Z,r18
  33:lp_solve_5.5/lp_wlp.c ****   vsnprintf(buff, DEF_STRBUFSIZE, format, ap);
  52               		.loc 1 33 0
  53 0028 CE01      		movw r24,r28
  54 002a 8C5F      		subi r24,-4
  55 002c 9D4F      		sbci r25,-3
  56 002e FC01      		movw r30,r24
  57 0030 2081      		ld r18,Z
  58 0032 3181      		ldd r19,Z+1
  59 0034 C25F      		subi r28,lo8(-526)
  60 0036 DD4F      		sbci r29,hi8(-526)
  61 0038 4881      		ld r20,Y
  62 003a 5981      		ldd r21,Y+1
  63 003c CE50      		subi r28,lo8(526)
  64 003e D240      		sbci r29,hi8(526)
  65 0040 CE01      		movw r24,r28
  66 0042 0396      		adiw r24,3
  67 0044 60E0      		ldi r22,0
  68 0046 72E0      		ldi r23,lo8(2)
  69 0048 0E94 0000 		call vsnprintf
  34:lp_solve_5.5/lp_wlp.c ****   va_end(ap);
  35:lp_solve_5.5/lp_wlp.c ****   n = write_modeldata(userhandle, buff);
  70               		.loc 1 35 0
  71 004c AE01      		movw r20,r28
  72 004e 4D5F      		subi r20,-3
  73 0050 5F4F      		sbci r21,-1
  74 0052 C65F      		subi r28,lo8(-522)
  75 0054 DD4F      		sbci r29,hi8(-522)
  76 0056 8881      		ld r24,Y
  77 0058 9981      		ldd r25,Y+1
  78 005a CA50      		subi r28,lo8(522)
  79 005c D240      		sbci r29,hi8(522)
  80 005e C45F      		subi r28,lo8(-524)
  81 0060 DD4F      		sbci r29,hi8(-524)
  82 0062 2881      		ld r18,Y
  83 0064 3981      		ldd r19,Y+1
  84 0066 CC50      		subi r28,lo8(524)
  85 0068 D240      		sbci r29,hi8(524)
  86 006a BA01      		movw r22,r20
  87 006c F901      		movw r30,r18
  88 006e 0995      		icall
  89 0070 9A83      		std Y+2,r25
  90 0072 8983      		std Y+1,r24
  36:lp_solve_5.5/lp_wlp.c ****   return(n);
  91               		.loc 1 36 0
  92 0074 8981      		ldd r24,Y+1
  93 0076 9A81      		ldd r25,Y+2
  94               	/* epilogue start */
  37:lp_solve_5.5/lp_wlp.c **** }
  95               		.loc 1 37 0
  96 0078 CB5F      		subi r28,-5
  97 007a DD4F      		sbci r29,-3
  98 007c 0FB6      		in __tmp_reg__,__SREG__
  99 007e F894      		cli
 100 0080 DEBF      		out __SP_H__,r29
 101 0082 0FBE      		out __SREG__,__tmp_reg__
 102 0084 CDBF      		out __SP_L__,r28
 103 0086 DF91      		pop r29
 104 0088 CF91      		pop r28
 105 008a 0895      		ret
 106               		.cfi_endproc
 107               	.LFE7:
 109               		.section	.rodata
 110               	.LC0:
 111 0000 0A00      		.string	"\n"
 112               	.LC1:
 113 0002 00        		.string	""
 114               	.LC2:
 115 0003 2573 2F2A 		.string	"%s/* %s */\n"
 115      2025 7320 
 115      2A2F 0A00 
 116               		.text
 117               	.global	write_lpcomment
 119               	write_lpcomment:
 120               	.LFB8:
  38:lp_solve_5.5/lp_wlp.c **** 
  39:lp_solve_5.5/lp_wlp.c **** STATIC void write_lpcomment(void *userhandle, write_modeldata_func write_modeldata, char *string, M
  40:lp_solve_5.5/lp_wlp.c **** {
 121               		.loc 1 40 0
 122               		.cfi_startproc
 123 008c CF93      		push r28
 124               	.LCFI4:
 125               		.cfi_def_cfa_offset 3
 126               		.cfi_offset 28, -2
 127 008e DF93      		push r29
 128               	.LCFI5:
 129               		.cfi_def_cfa_offset 4
 130               		.cfi_offset 29, -3
 131 0090 CDB7      		in r28,__SP_L__
 132 0092 DEB7      		in r29,__SP_H__
 133               	.LCFI6:
 134               		.cfi_def_cfa_register 28
 135 0094 2797      		sbiw r28,7
 136               	.LCFI7:
 137               		.cfi_def_cfa_offset 11
 138 0096 0FB6      		in __tmp_reg__,__SREG__
 139 0098 F894      		cli
 140 009a DEBF      		out __SP_H__,r29
 141 009c 0FBE      		out __SREG__,__tmp_reg__
 142 009e CDBF      		out __SP_L__,r28
 143               	/* prologue: function */
 144               	/* frame size = 7 */
 145               	/* stack size = 9 */
 146               	.L__stack_usage = 9
 147 00a0 9A83      		std Y+2,r25
 148 00a2 8983      		std Y+1,r24
 149 00a4 7C83      		std Y+4,r23
 150 00a6 6B83      		std Y+3,r22
 151 00a8 5E83      		std Y+6,r21
 152 00aa 4D83      		std Y+5,r20
 153 00ac 2F83      		std Y+7,r18
  41:lp_solve_5.5/lp_wlp.c ****   write_data(userhandle, write_modeldata, "%s/* %s */\n", (newlinebefore) ? "\n" : "", string);
 154               		.loc 1 41 0
 155 00ae 8F81      		ldd r24,Y+7
 156 00b0 8823      		tst r24
 157 00b2 01F0      		breq .L4
 158               		.loc 1 41 0 is_stmt 0 discriminator 1
 159 00b4 80E0      		ldi r24,lo8(.LC0)
 160 00b6 90E0      		ldi r25,hi8(.LC0)
 161 00b8 00C0      		rjmp .L5
 162               	.L4:
 163               		.loc 1 41 0 discriminator 2
 164 00ba 80E0      		ldi r24,lo8(.LC1)
 165 00bc 90E0      		ldi r25,hi8(.LC1)
 166               	.L5:
 167               		.loc 1 41 0 discriminator 4
 168 00be 2E81      		ldd r18,Y+6
 169 00c0 2F93      		push r18
 170 00c2 2D81      		ldd r18,Y+5
 171 00c4 2F93      		push r18
 172 00c6 292F      		mov r18,r25
 173 00c8 2F93      		push r18
 174 00ca 8F93      		push r24
 175 00cc 80E0      		ldi r24,lo8(.LC2)
 176 00ce 90E0      		ldi r25,hi8(.LC2)
 177 00d0 892F      		mov r24,r25
 178 00d2 8F93      		push r24
 179 00d4 80E0      		ldi r24,lo8(.LC2)
 180 00d6 90E0      		ldi r25,hi8(.LC2)
 181 00d8 8F93      		push r24
 182 00da 8C81      		ldd r24,Y+4
 183 00dc 8F93      		push r24
 184 00de 8B81      		ldd r24,Y+3
 185 00e0 8F93      		push r24
 186 00e2 8A81      		ldd r24,Y+2
 187 00e4 8F93      		push r24
 188 00e6 8981      		ldd r24,Y+1
 189 00e8 8F93      		push r24
 190 00ea 0E94 0000 		call write_data
 191 00ee 8DB7      		in r24,__SP_L__
 192 00f0 9EB7      		in r25,__SP_H__
 193 00f2 0A96      		adiw r24,10
 194 00f4 0FB6      		in __tmp_reg__,__SREG__
 195 00f6 F894      		cli
 196 00f8 DEBF      		out __SP_H__,r29
 197 00fa 0FBE      		out __SREG__,__tmp_reg__
 198 00fc CDBF      		out __SP_L__,r28
  42:lp_solve_5.5/lp_wlp.c **** }
 199               		.loc 1 42 0 is_stmt 1 discriminator 4
 200 00fe 0000      		nop
 201               	/* epilogue start */
 202 0100 2796      		adiw r28,7
 203 0102 0FB6      		in __tmp_reg__,__SREG__
 204 0104 F894      		cli
 205 0106 DEBF      		out __SP_H__,r29
 206 0108 0FBE      		out __SREG__,__tmp_reg__
 207 010a CDBF      		out __SP_L__,r28
 208 010c DF91      		pop r29
 209 010e CF91      		pop r28
 210 0110 0895      		ret
 211               		.cfi_endproc
 212               	.LFE8:
 214               		.section	.rodata
 215               	.LC3:
 216 000f 2000      		.string	" "
 217               	.LC4:
 218 0011 252B 2E31 		.string	"%+.12g"
 218      3267 00
 219               	.LC5:
 220 0018 2D31 00   		.string	"-1"
 221               	.LC6:
 222 001b 2D00      		.string	"-"
 223               	.LC7:
 224 001d 2B31 00   		.string	"+1"
 225               	.LC8:
 226 0020 2B00      		.string	"+"
 227               	.LC9:
 228 0022 2573 2000 		.string	"%s "
 229               	.LC10:
 230 0026 2573 00   		.string	"%s"
 231               		.text
 232               	.global	write_lprow
 234               	write_lprow:
 235               	.LFB9:
  43:lp_solve_5.5/lp_wlp.c **** 
  44:lp_solve_5.5/lp_wlp.c **** STATIC int write_lprow(lprec *lp, int rowno, void *userhandle, write_modeldata_func write_modeldata
  45:lp_solve_5.5/lp_wlp.c **** {
 236               		.loc 1 45 0
 237               		.cfi_startproc
 238 0112 CF92      		push r12
 239               	.LCFI8:
 240               		.cfi_def_cfa_offset 3
 241               		.cfi_offset 12, -2
 242 0114 DF92      		push r13
 243               	.LCFI9:
 244               		.cfi_def_cfa_offset 4
 245               		.cfi_offset 13, -3
 246 0116 EF92      		push r14
 247               	.LCFI10:
 248               		.cfi_def_cfa_offset 5
 249               		.cfi_offset 14, -4
 250 0118 FF92      		push r15
 251               	.LCFI11:
 252               		.cfi_def_cfa_offset 6
 253               		.cfi_offset 15, -5
 254 011a 0F93      		push r16
 255               	.LCFI12:
 256               		.cfi_def_cfa_offset 7
 257               		.cfi_offset 16, -6
 258 011c 1F93      		push r17
 259               	.LCFI13:
 260               		.cfi_def_cfa_offset 8
 261               		.cfi_offset 17, -7
 262 011e CF93      		push r28
 263               	.LCFI14:
 264               		.cfi_def_cfa_offset 9
 265               		.cfi_offset 28, -8
 266 0120 DF93      		push r29
 267               	.LCFI15:
 268               		.cfi_def_cfa_offset 10
 269               		.cfi_offset 29, -9
 270 0122 CDB7      		in r28,__SP_L__
 271 0124 DEB7      		in r29,__SP_H__
 272               	.LCFI16:
 273               		.cfi_def_cfa_register 28
 274 0126 CD54      		subi r28,77
 275 0128 D109      		sbc r29,__zero_reg__
 276               	.LCFI17:
 277               		.cfi_def_cfa_offset 87
 278 012a 0FB6      		in __tmp_reg__,__SREG__
 279 012c F894      		cli
 280 012e DEBF      		out __SP_H__,r29
 281 0130 0FBE      		out __SREG__,__tmp_reg__
 282 0132 CDBF      		out __SP_L__,r28
 283               	/* prologue: function */
 284               	/* frame size = 77 */
 285               	/* stack size = 85 */
 286               	.L__stack_usage = 85
 287 0134 FE01      		movw r30,r28
 288 0136 E05C      		subi r30,-64
 289 0138 FF4F      		sbci r31,-1
 290 013a 9183      		std Z+1,r25
 291 013c 8083      		st Z,r24
 292 013e CE01      		movw r24,r28
 293 0140 8E5B      		subi r24,-66
 294 0142 9F4F      		sbci r25,-1
 295 0144 FC01      		movw r30,r24
 296 0146 7183      		std Z+1,r23
 297 0148 6083      		st Z,r22
 298 014a CE01      		movw r24,r28
 299 014c 8C5B      		subi r24,-68
 300 014e 9F4F      		sbci r25,-1
 301 0150 FC01      		movw r30,r24
 302 0152 5183      		std Z+1,r21
 303 0154 4083      		st Z,r20
 304 0156 CE01      		movw r24,r28
 305 0158 8A5B      		subi r24,-70
 306 015a 9F4F      		sbci r25,-1
 307 015c FC01      		movw r30,r24
 308 015e 3183      		std Z+1,r19
 309 0160 2083      		st Z,r18
 310 0162 CE01      		movw r24,r28
 311 0164 885B      		subi r24,-72
 312 0166 9F4F      		sbci r25,-1
 313 0168 FC01      		movw r30,r24
 314 016a 1183      		std Z+1,r17
 315 016c 0083      		st Z,r16
 316 016e CE01      		movw r24,r28
 317 0170 865B      		subi r24,-74
 318 0172 9F4F      		sbci r25,-1
 319 0174 FC01      		movw r30,r24
 320 0176 F182      		std Z+1,r15
 321 0178 E082      		st Z,r14
 322 017a CE01      		movw r24,r28
 323 017c 845B      		subi r24,-76
 324 017e 9F4F      		sbci r25,-1
 325 0180 FC01      		movw r30,r24
 326 0182 D182      		std Z+1,r13
 327 0184 C082      		st Z,r12
  46:lp_solve_5.5/lp_wlp.c ****   int     i, j, nchars, elements;
  47:lp_solve_5.5/lp_wlp.c ****   REAL    a;
  48:lp_solve_5.5/lp_wlp.c ****   MYBOOL  first = TRUE;
 328               		.loc 1 48 0
 329 0186 81E0      		ldi r24,lo8(1)
 330 0188 8D83      		std Y+5,r24
  49:lp_solve_5.5/lp_wlp.c ****   char    buf[50];
  50:lp_solve_5.5/lp_wlp.c **** 
  51:lp_solve_5.5/lp_wlp.c ****   elements = get_rowex(lp, rowno, val, idx);
 331               		.loc 1 51 0
 332 018a CE01      		movw r24,r28
 333 018c 865B      		subi r24,-74
 334 018e 9F4F      		sbci r25,-1
 335 0190 FC01      		movw r30,r24
 336 0192 2081      		ld r18,Z
 337 0194 3181      		ldd r19,Z+1
 338 0196 CE01      		movw r24,r28
 339 0198 845B      		subi r24,-76
 340 019a 9F4F      		sbci r25,-1
 341 019c FC01      		movw r30,r24
 342 019e 4081      		ld r20,Z
 343 01a0 5181      		ldd r21,Z+1
 344 01a2 CE01      		movw r24,r28
 345 01a4 8E5B      		subi r24,-66
 346 01a6 9F4F      		sbci r25,-1
 347 01a8 FC01      		movw r30,r24
 348 01aa 6081      		ld r22,Z
 349 01ac 7181      		ldd r23,Z+1
 350 01ae CE01      		movw r24,r28
 351 01b0 805C      		subi r24,-64
 352 01b2 9F4F      		sbci r25,-1
 353 01b4 FC01      		movw r30,r24
 354 01b6 8081      		ld r24,Z
 355 01b8 9181      		ldd r25,Z+1
 356 01ba 0E94 0000 		call get_rowex
 357 01be 9F83      		std Y+7,r25
 358 01c0 8E83      		std Y+6,r24
  52:lp_solve_5.5/lp_wlp.c ****   if(write_modeldata != NULL) {
 359               		.loc 1 52 0
 360 01c2 CE01      		movw r24,r28
 361 01c4 8A5B      		subi r24,-70
 362 01c6 9F4F      		sbci r25,-1
 363 01c8 FC01      		movw r30,r24
 364 01ca 8081      		ld r24,Z
 365 01cc 9181      		ldd r25,Z+1
 366 01ce 892B      		or r24,r25
 367 01d0 01F4      		brne .+2
 368 01d2 00C0      		rjmp .L7
  53:lp_solve_5.5/lp_wlp.c ****     nchars = 0;
 369               		.loc 1 53 0
 370 01d4 1C82      		std Y+4,__zero_reg__
 371 01d6 1B82      		std Y+3,__zero_reg__
  54:lp_solve_5.5/lp_wlp.c ****     for(i = 0; i < elements; i++) {
 372               		.loc 1 54 0
 373 01d8 1A82      		std Y+2,__zero_reg__
 374 01da 1982      		std Y+1,__zero_reg__
 375 01dc 00C0      		rjmp .L8
 376               	.L16:
  55:lp_solve_5.5/lp_wlp.c ****       j = idx[i];
 377               		.loc 1 55 0
 378 01de 8981      		ldd r24,Y+1
 379 01e0 9A81      		ldd r25,Y+2
 380 01e2 880F      		lsl r24
 381 01e4 991F      		rol r25
 382 01e6 9E01      		movw r18,r28
 383 01e8 265B      		subi r18,-74
 384 01ea 3F4F      		sbci r19,-1
 385 01ec F901      		movw r30,r18
 386 01ee 2081      		ld r18,Z
 387 01f0 3181      		ldd r19,Z+1
 388 01f2 820F      		add r24,r18
 389 01f4 931F      		adc r25,r19
 390 01f6 FC01      		movw r30,r24
 391 01f8 8081      		ld r24,Z
 392 01fa 9181      		ldd r25,Z+1
 393 01fc 9987      		std Y+9,r25
 394 01fe 8887      		std Y+8,r24
  56:lp_solve_5.5/lp_wlp.c ****       if(is_splitvar(lp, j))
 395               		.loc 1 56 0
 396 0200 2885      		ldd r18,Y+8
 397 0202 3985      		ldd r19,Y+9
 398 0204 CE01      		movw r24,r28
 399 0206 805C      		subi r24,-64
 400 0208 9F4F      		sbci r25,-1
 401 020a FC01      		movw r30,r24
 402 020c 8081      		ld r24,Z
 403 020e 9181      		ldd r25,Z+1
 404 0210 B901      		movw r22,r18
 405 0212 0E94 0000 		call is_splitvar
 406 0216 8823      		tst r24
 407 0218 01F0      		breq .+2
 408 021a 00C0      		rjmp .L18
  57:lp_solve_5.5/lp_wlp.c ****         continue;
  58:lp_solve_5.5/lp_wlp.c ****       a = val[i];
 409               		.loc 1 58 0
 410 021c 8981      		ldd r24,Y+1
 411 021e 9A81      		ldd r25,Y+2
 412 0220 880F      		lsl r24
 413 0222 991F      		rol r25
 414 0224 880F      		lsl r24
 415 0226 991F      		rol r25
 416 0228 9E01      		movw r18,r28
 417 022a 245B      		subi r18,-76
 418 022c 3F4F      		sbci r19,-1
 419 022e F901      		movw r30,r18
 420 0230 2081      		ld r18,Z
 421 0232 3181      		ldd r19,Z+1
 422 0234 820F      		add r24,r18
 423 0236 931F      		adc r25,r19
 424 0238 FC01      		movw r30,r24
 425 023a 8081      		ld r24,Z
 426 023c 9181      		ldd r25,Z+1
 427 023e A281      		ldd r26,Z+2
 428 0240 B381      		ldd r27,Z+3
 429 0242 8A87      		std Y+10,r24
 430 0244 9B87      		std Y+11,r25
 431 0246 AC87      		std Y+12,r26
 432 0248 BD87      		std Y+13,r27
  59:lp_solve_5.5/lp_wlp.c ****       if(!first)
 433               		.loc 1 59 0
 434 024a 8D81      		ldd r24,Y+5
 435 024c 8823      		tst r24
 436 024e 01F4      		brne .L11
  60:lp_solve_5.5/lp_wlp.c ****         nchars += write_data(userhandle, write_modeldata, " ");
 437               		.loc 1 60 0
 438 0250 80E0      		ldi r24,lo8(.LC3)
 439 0252 90E0      		ldi r25,hi8(.LC3)
 440 0254 892F      		mov r24,r25
 441 0256 8F93      		push r24
 442 0258 80E0      		ldi r24,lo8(.LC3)
 443 025a 90E0      		ldi r25,hi8(.LC3)
 444 025c 8F93      		push r24
 445 025e CE01      		movw r24,r28
 446 0260 8A5B      		subi r24,-70
 447 0262 9F4F      		sbci r25,-1
 448 0264 FC01      		movw r30,r24
 449 0266 2181      		ldd r18,Z+1
 450 0268 2F93      		push r18
 451 026a FC01      		movw r30,r24
 452 026c 8081      		ld r24,Z
 453 026e 8F93      		push r24
 454 0270 CE01      		movw r24,r28
 455 0272 8C5B      		subi r24,-68
 456 0274 9F4F      		sbci r25,-1
 457 0276 FC01      		movw r30,r24
 458 0278 2181      		ldd r18,Z+1
 459 027a 2F93      		push r18
 460 027c FC01      		movw r30,r24
 461 027e 8081      		ld r24,Z
 462 0280 8F93      		push r24
 463 0282 0E94 0000 		call write_data
 464 0286 0F90      		pop __tmp_reg__
 465 0288 0F90      		pop __tmp_reg__
 466 028a 0F90      		pop __tmp_reg__
 467 028c 0F90      		pop __tmp_reg__
 468 028e 0F90      		pop __tmp_reg__
 469 0290 0F90      		pop __tmp_reg__
 470 0292 9C01      		movw r18,r24
 471 0294 8B81      		ldd r24,Y+3
 472 0296 9C81      		ldd r25,Y+4
 473 0298 820F      		add r24,r18
 474 029a 931F      		adc r25,r19
 475 029c 9C83      		std Y+4,r25
 476 029e 8B83      		std Y+3,r24
 477 02a0 00C0      		rjmp .L12
 478               	.L11:
  61:lp_solve_5.5/lp_wlp.c ****       else
  62:lp_solve_5.5/lp_wlp.c ****         first = FALSE;
 479               		.loc 1 62 0
 480 02a2 1D82      		std Y+5,__zero_reg__
 481               	.L12:
  63:lp_solve_5.5/lp_wlp.c ****       sprintf(buf, "%+.12g", (double)a);
 482               		.loc 1 63 0
 483 02a4 8D85      		ldd r24,Y+13
 484 02a6 8F93      		push r24
 485 02a8 8C85      		ldd r24,Y+12
 486 02aa 8F93      		push r24
 487 02ac 8B85      		ldd r24,Y+11
 488 02ae 8F93      		push r24
 489 02b0 8A85      		ldd r24,Y+10
 490 02b2 8F93      		push r24
 491 02b4 80E0      		ldi r24,lo8(.LC4)
 492 02b6 90E0      		ldi r25,hi8(.LC4)
 493 02b8 892F      		mov r24,r25
 494 02ba 8F93      		push r24
 495 02bc 80E0      		ldi r24,lo8(.LC4)
 496 02be 90E0      		ldi r25,hi8(.LC4)
 497 02c0 8F93      		push r24
 498 02c2 CE01      		movw r24,r28
 499 02c4 0E96      		adiw r24,14
 500 02c6 292F      		mov r18,r25
 501 02c8 2F93      		push r18
 502 02ca 8F93      		push r24
 503 02cc 0E94 0000 		call sprintf
 504 02d0 2DB7      		in r18,__SP_L__
 505 02d2 3EB7      		in r19,__SP_H__
 506 02d4 285F      		subi r18,-8
 507 02d6 3F4F      		sbci r19,-1
 508 02d8 0FB6      		in __tmp_reg__,__SREG__
 509 02da F894      		cli
 510 02dc DEBF      		out __SP_H__,r29
 511 02de 0FBE      		out __SREG__,__tmp_reg__
 512 02e0 CDBF      		out __SP_L__,r28
  64:lp_solve_5.5/lp_wlp.c ****       if(strcmp(buf, "-1") == 0)
 513               		.loc 1 64 0
 514 02e2 CE01      		movw r24,r28
 515 02e4 0E96      		adiw r24,14
 516 02e6 60E0      		ldi r22,lo8(.LC5)
 517 02e8 70E0      		ldi r23,hi8(.LC5)
 518 02ea 0E94 0000 		call strcmp
 519 02ee 892B      		or r24,r25
 520 02f0 01F4      		brne .L13
  65:lp_solve_5.5/lp_wlp.c ****         nchars += write_data(userhandle, write_modeldata, "-");
 521               		.loc 1 65 0
 522 02f2 80E0      		ldi r24,lo8(.LC6)
 523 02f4 90E0      		ldi r25,hi8(.LC6)
 524 02f6 892F      		mov r24,r25
 525 02f8 8F93      		push r24
 526 02fa 80E0      		ldi r24,lo8(.LC6)
 527 02fc 90E0      		ldi r25,hi8(.LC6)
 528 02fe 8F93      		push r24
 529 0300 CE01      		movw r24,r28
 530 0302 8A5B      		subi r24,-70
 531 0304 9F4F      		sbci r25,-1
 532 0306 FC01      		movw r30,r24
 533 0308 2181      		ldd r18,Z+1
 534 030a 2F93      		push r18
 535 030c FC01      		movw r30,r24
 536 030e 8081      		ld r24,Z
 537 0310 8F93      		push r24
 538 0312 CE01      		movw r24,r28
 539 0314 8C5B      		subi r24,-68
 540 0316 9F4F      		sbci r25,-1
 541 0318 FC01      		movw r30,r24
 542 031a 2181      		ldd r18,Z+1
 543 031c 2F93      		push r18
 544 031e FC01      		movw r30,r24
 545 0320 8081      		ld r24,Z
 546 0322 8F93      		push r24
 547 0324 0E94 0000 		call write_data
 548 0328 0F90      		pop __tmp_reg__
 549 032a 0F90      		pop __tmp_reg__
 550 032c 0F90      		pop __tmp_reg__
 551 032e 0F90      		pop __tmp_reg__
 552 0330 0F90      		pop __tmp_reg__
 553 0332 0F90      		pop __tmp_reg__
 554 0334 9C01      		movw r18,r24
 555 0336 8B81      		ldd r24,Y+3
 556 0338 9C81      		ldd r25,Y+4
 557 033a 820F      		add r24,r18
 558 033c 931F      		adc r25,r19
 559 033e 9C83      		std Y+4,r25
 560 0340 8B83      		std Y+3,r24
 561 0342 00C0      		rjmp .L14
 562               	.L13:
  66:lp_solve_5.5/lp_wlp.c ****       else if(strcmp(buf, "+1") == 0)
 563               		.loc 1 66 0
 564 0344 CE01      		movw r24,r28
 565 0346 0E96      		adiw r24,14
 566 0348 60E0      		ldi r22,lo8(.LC7)
 567 034a 70E0      		ldi r23,hi8(.LC7)
 568 034c 0E94 0000 		call strcmp
 569 0350 892B      		or r24,r25
 570 0352 01F4      		brne .L15
  67:lp_solve_5.5/lp_wlp.c ****         nchars += write_data(userhandle, write_modeldata, "+");
 571               		.loc 1 67 0
 572 0354 80E0      		ldi r24,lo8(.LC8)
 573 0356 90E0      		ldi r25,hi8(.LC8)
 574 0358 892F      		mov r24,r25
 575 035a 8F93      		push r24
 576 035c 80E0      		ldi r24,lo8(.LC8)
 577 035e 90E0      		ldi r25,hi8(.LC8)
 578 0360 8F93      		push r24
 579 0362 CE01      		movw r24,r28
 580 0364 8A5B      		subi r24,-70
 581 0366 9F4F      		sbci r25,-1
 582 0368 FC01      		movw r30,r24
 583 036a 2181      		ldd r18,Z+1
 584 036c 2F93      		push r18
 585 036e FC01      		movw r30,r24
 586 0370 8081      		ld r24,Z
 587 0372 8F93      		push r24
 588 0374 CE01      		movw r24,r28
 589 0376 8C5B      		subi r24,-68
 590 0378 9F4F      		sbci r25,-1
 591 037a FC01      		movw r30,r24
 592 037c 2181      		ldd r18,Z+1
 593 037e 2F93      		push r18
 594 0380 FC01      		movw r30,r24
 595 0382 8081      		ld r24,Z
 596 0384 8F93      		push r24
 597 0386 0E94 0000 		call write_data
 598 038a 0F90      		pop __tmp_reg__
 599 038c 0F90      		pop __tmp_reg__
 600 038e 0F90      		pop __tmp_reg__
 601 0390 0F90      		pop __tmp_reg__
 602 0392 0F90      		pop __tmp_reg__
 603 0394 0F90      		pop __tmp_reg__
 604 0396 9C01      		movw r18,r24
 605 0398 8B81      		ldd r24,Y+3
 606 039a 9C81      		ldd r25,Y+4
 607 039c 820F      		add r24,r18
 608 039e 931F      		adc r25,r19
 609 03a0 9C83      		std Y+4,r25
 610 03a2 8B83      		std Y+3,r24
 611 03a4 00C0      		rjmp .L14
 612               	.L15:
  68:lp_solve_5.5/lp_wlp.c ****       else
  69:lp_solve_5.5/lp_wlp.c ****         nchars += write_data(userhandle, write_modeldata, "%s ", buf);
 613               		.loc 1 69 0
 614 03a6 CE01      		movw r24,r28
 615 03a8 0E96      		adiw r24,14
 616 03aa 292F      		mov r18,r25
 617 03ac 2F93      		push r18
 618 03ae 8F93      		push r24
 619 03b0 80E0      		ldi r24,lo8(.LC9)
 620 03b2 90E0      		ldi r25,hi8(.LC9)
 621 03b4 892F      		mov r24,r25
 622 03b6 8F93      		push r24
 623 03b8 80E0      		ldi r24,lo8(.LC9)
 624 03ba 90E0      		ldi r25,hi8(.LC9)
 625 03bc 8F93      		push r24
 626 03be CE01      		movw r24,r28
 627 03c0 8A5B      		subi r24,-70
 628 03c2 9F4F      		sbci r25,-1
 629 03c4 FC01      		movw r30,r24
 630 03c6 2181      		ldd r18,Z+1
 631 03c8 2F93      		push r18
 632 03ca FC01      		movw r30,r24
 633 03cc 8081      		ld r24,Z
 634 03ce 8F93      		push r24
 635 03d0 CE01      		movw r24,r28
 636 03d2 8C5B      		subi r24,-68
 637 03d4 9F4F      		sbci r25,-1
 638 03d6 FC01      		movw r30,r24
 639 03d8 2181      		ldd r18,Z+1
 640 03da 2F93      		push r18
 641 03dc FC01      		movw r30,r24
 642 03de 8081      		ld r24,Z
 643 03e0 8F93      		push r24
 644 03e2 0E94 0000 		call write_data
 645 03e6 2DB7      		in r18,__SP_L__
 646 03e8 3EB7      		in r19,__SP_H__
 647 03ea 285F      		subi r18,-8
 648 03ec 3F4F      		sbci r19,-1
 649 03ee 0FB6      		in __tmp_reg__,__SREG__
 650 03f0 F894      		cli
 651 03f2 DEBF      		out __SP_H__,r29
 652 03f4 0FBE      		out __SREG__,__tmp_reg__
 653 03f6 CDBF      		out __SP_L__,r28
 654 03f8 9C01      		movw r18,r24
 655 03fa 8B81      		ldd r24,Y+3
 656 03fc 9C81      		ldd r25,Y+4
 657 03fe 820F      		add r24,r18
 658 0400 931F      		adc r25,r19
 659 0402 9C83      		std Y+4,r25
 660 0404 8B83      		std Y+3,r24
 661               	.L14:
  70:lp_solve_5.5/lp_wlp.c ****       nchars += write_data(userhandle, write_modeldata, "%s", get_col_name(lp, j));
 662               		.loc 1 70 0
 663 0406 2885      		ldd r18,Y+8
 664 0408 3985      		ldd r19,Y+9
 665 040a CE01      		movw r24,r28
 666 040c 805C      		subi r24,-64
 667 040e 9F4F      		sbci r25,-1
 668 0410 FC01      		movw r30,r24
 669 0412 8081      		ld r24,Z
 670 0414 9181      		ldd r25,Z+1
 671 0416 B901      		movw r22,r18
 672 0418 0E94 0000 		call get_col_name
 673 041c 292F      		mov r18,r25
 674 041e 2F93      		push r18
 675 0420 8F93      		push r24
 676 0422 80E0      		ldi r24,lo8(.LC10)
 677 0424 90E0      		ldi r25,hi8(.LC10)
 678 0426 892F      		mov r24,r25
 679 0428 8F93      		push r24
 680 042a 80E0      		ldi r24,lo8(.LC10)
 681 042c 90E0      		ldi r25,hi8(.LC10)
 682 042e 8F93      		push r24
 683 0430 CE01      		movw r24,r28
 684 0432 8A5B      		subi r24,-70
 685 0434 9F4F      		sbci r25,-1
 686 0436 FC01      		movw r30,r24
 687 0438 2181      		ldd r18,Z+1
 688 043a 2F93      		push r18
 689 043c FC01      		movw r30,r24
 690 043e 8081      		ld r24,Z
 691 0440 8F93      		push r24
 692 0442 CE01      		movw r24,r28
 693 0444 8C5B      		subi r24,-68
 694 0446 9F4F      		sbci r25,-1
 695 0448 FC01      		movw r30,r24
 696 044a 2181      		ldd r18,Z+1
 697 044c 2F93      		push r18
 698 044e FC01      		movw r30,r24
 699 0450 8081      		ld r24,Z
 700 0452 8F93      		push r24
 701 0454 0E94 0000 		call write_data
 702 0458 2DB7      		in r18,__SP_L__
 703 045a 3EB7      		in r19,__SP_H__
 704 045c 285F      		subi r18,-8
 705 045e 3F4F      		sbci r19,-1
 706 0460 0FB6      		in __tmp_reg__,__SREG__
 707 0462 F894      		cli
 708 0464 DEBF      		out __SP_H__,r29
 709 0466 0FBE      		out __SREG__,__tmp_reg__
 710 0468 CDBF      		out __SP_L__,r28
 711 046a 9C01      		movw r18,r24
 712 046c 8B81      		ldd r24,Y+3
 713 046e 9C81      		ldd r25,Y+4
 714 0470 820F      		add r24,r18
 715 0472 931F      		adc r25,r19
 716 0474 9C83      		std Y+4,r25
 717 0476 8B83      		std Y+3,r24
  71:lp_solve_5.5/lp_wlp.c ****       /* Check if we should add a linefeed */
  72:lp_solve_5.5/lp_wlp.c ****       if((maxlen > 0) && (nchars >= maxlen) && (i < elements-1)) {
 718               		.loc 1 72 0
 719 0478 CE01      		movw r24,r28
 720 047a 885B      		subi r24,-72
 721 047c 9F4F      		sbci r25,-1
 722 047e FC01      		movw r30,r24
 723 0480 8081      		ld r24,Z
 724 0482 9181      		ldd r25,Z+1
 725 0484 1816      		cp __zero_reg__,r24
 726 0486 1906      		cpc __zero_reg__,r25
 727 0488 04F0      		brlt .+2
 728 048a 00C0      		rjmp .L10
 729               		.loc 1 72 0 is_stmt 0 discriminator 1
 730 048c CE01      		movw r24,r28
 731 048e 885B      		subi r24,-72
 732 0490 9F4F      		sbci r25,-1
 733 0492 2B81      		ldd r18,Y+3
 734 0494 3C81      		ldd r19,Y+4
 735 0496 FC01      		movw r30,r24
 736 0498 8081      		ld r24,Z
 737 049a 9181      		ldd r25,Z+1
 738 049c 2817      		cp r18,r24
 739 049e 3907      		cpc r19,r25
 740 04a0 04F0      		brlt .L10
 741               		.loc 1 72 0 discriminator 2
 742 04a2 8E81      		ldd r24,Y+6
 743 04a4 9F81      		ldd r25,Y+7
 744 04a6 9C01      		movw r18,r24
 745 04a8 2150      		subi r18,1
 746 04aa 3109      		sbc r19,__zero_reg__
 747 04ac 8981      		ldd r24,Y+1
 748 04ae 9A81      		ldd r25,Y+2
 749 04b0 8217      		cp r24,r18
 750 04b2 9307      		cpc r25,r19
 751 04b4 04F4      		brge .L10
  73:lp_solve_5.5/lp_wlp.c ****         write_data(userhandle, write_modeldata, "%s", "\n");
 752               		.loc 1 73 0 is_stmt 1
 753 04b6 80E0      		ldi r24,lo8(.LC0)
 754 04b8 90E0      		ldi r25,hi8(.LC0)
 755 04ba 892F      		mov r24,r25
 756 04bc 8F93      		push r24
 757 04be 80E0      		ldi r24,lo8(.LC0)
 758 04c0 90E0      		ldi r25,hi8(.LC0)
 759 04c2 8F93      		push r24
 760 04c4 80E0      		ldi r24,lo8(.LC10)
 761 04c6 90E0      		ldi r25,hi8(.LC10)
 762 04c8 892F      		mov r24,r25
 763 04ca 8F93      		push r24
 764 04cc 80E0      		ldi r24,lo8(.LC10)
 765 04ce 90E0      		ldi r25,hi8(.LC10)
 766 04d0 8F93      		push r24
 767 04d2 CE01      		movw r24,r28
 768 04d4 8A5B      		subi r24,-70
 769 04d6 9F4F      		sbci r25,-1
 770 04d8 FC01      		movw r30,r24
 771 04da 2181      		ldd r18,Z+1
 772 04dc 2F93      		push r18
 773 04de FC01      		movw r30,r24
 774 04e0 8081      		ld r24,Z
 775 04e2 8F93      		push r24
 776 04e4 CE01      		movw r24,r28
 777 04e6 8C5B      		subi r24,-68
 778 04e8 9F4F      		sbci r25,-1
 779 04ea FC01      		movw r30,r24
 780 04ec 2181      		ldd r18,Z+1
 781 04ee 2F93      		push r18
 782 04f0 FC01      		movw r30,r24
 783 04f2 8081      		ld r24,Z
 784 04f4 8F93      		push r24
 785 04f6 0E94 0000 		call write_data
 786 04fa 2DB7      		in r18,__SP_L__
 787 04fc 3EB7      		in r19,__SP_H__
 788 04fe 285F      		subi r18,-8
 789 0500 3F4F      		sbci r19,-1
 790 0502 0FB6      		in __tmp_reg__,__SREG__
 791 0504 F894      		cli
 792 0506 DEBF      		out __SP_H__,r29
 793 0508 0FBE      		out __SREG__,__tmp_reg__
 794 050a CDBF      		out __SP_L__,r28
  74:lp_solve_5.5/lp_wlp.c ****         nchars = 0;
 795               		.loc 1 74 0
 796 050c 1C82      		std Y+4,__zero_reg__
 797 050e 1B82      		std Y+3,__zero_reg__
 798 0510 00C0      		rjmp .L10
 799               	.L18:
  57:lp_solve_5.5/lp_wlp.c ****       a = val[i];
 800               		.loc 1 57 0
 801 0512 0000      		nop
 802               	.L10:
  54:lp_solve_5.5/lp_wlp.c ****       j = idx[i];
 803               		.loc 1 54 0 discriminator 2
 804 0514 8981      		ldd r24,Y+1
 805 0516 9A81      		ldd r25,Y+2
 806 0518 0196      		adiw r24,1
 807 051a 9A83      		std Y+2,r25
 808 051c 8983      		std Y+1,r24
 809               	.L8:
  54:lp_solve_5.5/lp_wlp.c ****       j = idx[i];
 810               		.loc 1 54 0 is_stmt 0 discriminator 1
 811 051e 2981      		ldd r18,Y+1
 812 0520 3A81      		ldd r19,Y+2
 813 0522 8E81      		ldd r24,Y+6
 814 0524 9F81      		ldd r25,Y+7
 815 0526 2817      		cp r18,r24
 816 0528 3907      		cpc r19,r25
 817 052a 04F4      		brge .+2
 818 052c 00C0      		rjmp .L16
 819               	.L7:
  75:lp_solve_5.5/lp_wlp.c ****       }
  76:lp_solve_5.5/lp_wlp.c ****     }
  77:lp_solve_5.5/lp_wlp.c ****   }
  78:lp_solve_5.5/lp_wlp.c ****   return(elements);
 820               		.loc 1 78 0 is_stmt 1
 821 052e 8E81      		ldd r24,Y+6
 822 0530 9F81      		ldd r25,Y+7
 823               	/* epilogue start */
  79:lp_solve_5.5/lp_wlp.c **** }
 824               		.loc 1 79 0
 825 0532 C35B      		subi r28,-77
 826 0534 DF4F      		sbci r29,-1
 827 0536 0FB6      		in __tmp_reg__,__SREG__
 828 0538 F894      		cli
 829 053a DEBF      		out __SP_H__,r29
 830 053c 0FBE      		out __SREG__,__tmp_reg__
 831 053e CDBF      		out __SP_L__,r28
 832 0540 DF91      		pop r29
 833 0542 CF91      		pop r28
 834 0544 1F91      		pop r17
 835 0546 0F91      		pop r16
 836 0548 FF90      		pop r15
 837 054a EF90      		pop r14
 838 054c DF90      		pop r13
 839 054e CF90      		pop r12
 840 0550 0895      		ret
 841               		.cfi_endproc
 842               	.LFE9:
 844               		.section	.rodata
 845               	.LC11:
 846 0029 4C50 5F77 		.string	"LP_writefile: Could not validate the data matrix.\n"
 846      7269 7465 
 846      6669 6C65 
 846      3A20 436F 
 846      756C 6420 
 847               	.LC12:
 848 005c 4F62 6A65 		.string	"Objective function"
 848      6374 6976 
 848      6520 6675 
 848      6E63 7469 
 848      6F6E 00
 849               	.LC13:
 850 006f 6D61 783A 		.string	"max: "
 850      2000 
 851               	.LC14:
 852 0075 6D69 6E3A 		.string	"min: "
 852      2000 
 853               	.global	__nesf2
 854               	.LC15:
 855 007b 2025 2B2E 		.string	" %+.12g"
 855      3132 6700 
 856               	.LC16:
 857 0083 3B0A 00   		.string	";\n"
 858               	.LC17:
 859 0086 436F 6E73 		.string	"Constraints"
 859      7472 6169 
 859      6E74 7300 
 860               	.LC18:
 861 0092 2573 3A20 		.string	"%s: "
 861      00
 862               	.global	__ltsf2
 863               	.global	__eqsf2
 864               	.LC19:
 865 0097 3E3D 00   		.string	">="
 866               	.LC20:
 867 009a 3C3D 00   		.string	"<="
 868               	.LC21:
 869 009d 2D49 6E66 		.string	"-Inf %s "
 869      2025 7320 
 869      00
 870               	.LC22:
 871 00a6 2B49 6E66 		.string	"+Inf %s "
 871      2025 7320 
 871      00
 872               	.global	__subsf3
 873               	.global	__mulsf3
 874               	.global	__divsf3
 875               	.LC23:
 876 00af 252B 2E31 		.string	"%+.12g %s "
 876      3267 2025 
 876      7320 00
 877               	.LC24:
 878 00ba 3020 2573 		.string	"0 %s"
 878      00
 879               	.LC25:
 880 00bf 203D 00   		.string	" ="
 881               	.LC26:
 882 00c2 203E 3D00 		.string	" >="
 883               	.LC27:
 884 00c6 203C 3D00 		.string	" <="
 885               	.global	__addsf3
 886               	.LC28:
 887 00ca 202D 496E 		.string	" -Inf;\n"
 887      663B 0A00 
 888               	.LC29:
 889 00d2 202B 496E 		.string	" +Inf;\n"
 889      663B 0A00 
 890               	.LC30:
 891 00da 2025 2E31 		.string	" %.12g;\n"
 891      3267 3B0A 
 891      00
 892               	.LC31:
 893 00e3 5661 7269 		.string	"Variable bounds"
 893      6162 6C65 
 893      2062 6F75 
 893      6E64 7300 
 894               	.LC32:
 895 00f3 2573 203D 		.string	"%s = %.12g;\n"
 895      2025 2E31 
 895      3267 3B0A 
 895      00
 896               	.LC33:
 897 0100 2D49 6E66 		.string	"-Inf"
 897      00
 898               	.LC34:
 899 0105 252E 3132 		.string	"%.12g"
 899      6700 
 900               	.LC35:
 901 010b 203C 3D20 		.string	" <= %s <= "
 901      2573 203C 
 901      3D20 00
 902               	.LC36:
 903 0116 2B49 6E66 		.string	"+Inf"
 903      00
 904               	.LC37:
 905 011b 2573 203E 		.string	"%s >= -Inf;\n"
 905      3D20 2D49 
 905      6E66 3B0A 
 905      00
 906               	.LC38:
 907 0128 2573 203E 		.string	"%s >= +Inf;\n"
 907      3D20 2B49 
 907      6E66 3B0A 
 907      00
 908               	.LC39:
 909 0135 2573 203E 		.string	"%s >= %.12g;\n"
 909      3D20 252E 
 909      3132 673B 
 909      0A00 
 910               	.LC40:
 911 0143 2573 203C 		.string	"%s <= %.12g;\n"
 911      3D20 252E 
 911      3132 673B 
 911      0A00 
 912               	.LC41:
 913 0151 496E 7465 		.string	"Integer definitions"
 913      6765 7220 
 913      6465 6669 
 913      6E69 7469 
 913      6F6E 7300 
 914               	.LC42:
 915 0165 696E 7420 		.string	"int %s"
 915      2573 00
 916               	.LC43:
 917 016c 2C25 7300 		.string	",%s"
 918               	.LC44:
 919 0170 5365 6D69 		.string	"Semi-continuous variables"
 919      2D63 6F6E 
 919      7469 6E75 
 919      6F75 7320 
 919      7661 7269 
 920               	.LC45:
 921 018a 7365 6320 		.string	"sec %s"
 921      2573 00
 922               	.LC46:
 923 0191 534F 5320 		.string	"SOS definitions"
 923      6465 6669 
 923      6E69 7469 
 923      6F6E 7300 
 924               	.LC47:
 925 01a1 534F 530A 		.string	"SOS\n"
 925      00
 926               	.LC48:
 927 01a6 534F 5300 		.string	"SOS"
 928               	.LC49:
 929 01aa 2C00      		.string	","
 930               	.LC50:
 931 01ac 2573 2573 		.string	"%s%s"
 931      00
 932               	.LC51:
 933 01b1 2573 2573 		.string	"%s%s:%.12g"
 933      3A25 2E31 
 933      3267 00
 934               	.LC52:
 935 01bc 203C 3D20 		.string	" <= %d;\n"
 935      2564 3B0A 
 935      00
 936               	.LC53:
 937 01c5 203C 3D20 		.string	" <= %d:%d;\n"
 937      2564 3A25 
 937      643B 0A00 
 938               		.text
 939               	.global	write_lpex
 941               	write_lpex:
 942               	.LFB10:
  80:lp_solve_5.5/lp_wlp.c **** 
  81:lp_solve_5.5/lp_wlp.c **** #if !defined LP_MAXLINELEN
  82:lp_solve_5.5/lp_wlp.c **** # define LP_MAXLINELEN 100
  83:lp_solve_5.5/lp_wlp.c **** #endif
  84:lp_solve_5.5/lp_wlp.c **** 
  85:lp_solve_5.5/lp_wlp.c **** MYBOOL __WINAPI write_lpex(lprec *lp, void *userhandle, write_modeldata_func write_modeldata)
  86:lp_solve_5.5/lp_wlp.c **** {
 943               		.loc 1 86 0
 944               		.cfi_startproc
 945 0552 CF92      		push r12
 946               	.LCFI18:
 947               		.cfi_def_cfa_offset 3
 948               		.cfi_offset 12, -2
 949 0554 DF92      		push r13
 950               	.LCFI19:
 951               		.cfi_def_cfa_offset 4
 952               		.cfi_offset 13, -3
 953 0556 EF92      		push r14
 954               	.LCFI20:
 955               		.cfi_def_cfa_offset 5
 956               		.cfi_offset 14, -4
 957 0558 FF92      		push r15
 958               	.LCFI21:
 959               		.cfi_def_cfa_offset 6
 960               		.cfi_offset 15, -5
 961 055a 0F93      		push r16
 962               	.LCFI22:
 963               		.cfi_def_cfa_offset 7
 964               		.cfi_offset 16, -6
 965 055c 1F93      		push r17
 966               	.LCFI23:
 967               		.cfi_def_cfa_offset 8
 968               		.cfi_offset 17, -7
 969 055e CF93      		push r28
 970               	.LCFI24:
 971               		.cfi_def_cfa_offset 9
 972               		.cfi_offset 28, -8
 973 0560 DF93      		push r29
 974               	.LCFI25:
 975               		.cfi_def_cfa_offset 10
 976               		.cfi_offset 29, -9
 977 0562 CDB7      		in r28,__SP_L__
 978 0564 DEB7      		in r29,__SP_H__
 979               	.LCFI26:
 980               		.cfi_def_cfa_register 28
 981 0566 A197      		sbiw r28,33
 982               	.LCFI27:
 983               		.cfi_def_cfa_offset 43
 984 0568 0FB6      		in __tmp_reg__,__SREG__
 985 056a F894      		cli
 986 056c DEBF      		out __SP_H__,r29
 987 056e 0FBE      		out __SREG__,__tmp_reg__
 988 0570 CDBF      		out __SP_L__,r28
 989               	/* prologue: function */
 990               	/* frame size = 33 */
 991               	/* stack size = 41 */
 992               	.L__stack_usage = 41
 993 0572 9D8F      		std Y+29,r25
 994 0574 8C8F      		std Y+28,r24
 995 0576 7F8F      		std Y+31,r23
 996 0578 6E8F      		std Y+30,r22
 997 057a 59A3      		std Y+33,r21
 998 057c 48A3      		std Y+32,r20
  87:lp_solve_5.5/lp_wlp.c ****   int    i, j, b,
  88:lp_solve_5.5/lp_wlp.c ****          nrows = lp->rows,
 999               		.loc 1 88 0
 1000 057e 8C8D      		ldd r24,Y+28
 1001 0580 9D8D      		ldd r25,Y+29
 1002 0582 8651      		subi r24,22
 1003 0584 9E4F      		sbci r25,-2
 1004 0586 FC01      		movw r30,r24
 1005 0588 8081      		ld r24,Z
 1006 058a 9181      		ldd r25,Z+1
 1007 058c 998B      		std Y+17,r25
 1008 058e 888B      		std Y+16,r24
  89:lp_solve_5.5/lp_wlp.c ****          ncols = lp->columns,
 1009               		.loc 1 89 0
 1010 0590 8C8D      		ldd r24,Y+28
 1011 0592 9D8D      		ldd r25,Y+29
 1012 0594 8451      		subi r24,20
 1013 0596 9E4F      		sbci r25,-2
 1014 0598 FC01      		movw r30,r24
 1015 059a 8081      		ld r24,Z
 1016 059c 9181      		ldd r25,Z+1
 1017 059e 9B8B      		std Y+19,r25
 1018 05a0 8A8B      		std Y+18,r24
  90:lp_solve_5.5/lp_wlp.c ****          nchars, maxlen = LP_MAXLINELEN,
 1019               		.loc 1 90 0
 1020 05a2 84E6      		ldi r24,lo8(100)
 1021 05a4 90E0      		ldi r25,0
 1022 05a6 9D8B      		std Y+21,r25
 1023 05a8 8C8B      		std Y+20,r24
  91:lp_solve_5.5/lp_wlp.c ****          *idx;
  92:lp_solve_5.5/lp_wlp.c ****   MYBOOL ok;
  93:lp_solve_5.5/lp_wlp.c ****   REAL   a, *val;
  94:lp_solve_5.5/lp_wlp.c ****   char   *ptr;
  95:lp_solve_5.5/lp_wlp.c **** 
  96:lp_solve_5.5/lp_wlp.c ****   if(!mat_validate(lp->matA)) {
 1024               		.loc 1 96 0
 1025 05aa 8C8D      		ldd r24,Y+28
 1026 05ac 9D8D      		ldd r25,Y+29
 1027 05ae 8A54      		subi r24,74
 1028 05b0 9D4F      		sbci r25,-3
 1029 05b2 FC01      		movw r30,r24
 1030 05b4 8081      		ld r24,Z
 1031 05b6 9181      		ldd r25,Z+1
 1032 05b8 0E94 0000 		call mat_validate
 1033 05bc 8823      		tst r24
 1034 05be 01F4      		brne .L20
  97:lp_solve_5.5/lp_wlp.c ****     report(lp, IMPORTANT, "LP_writefile: Could not validate the data matrix.\n");
 1035               		.loc 1 97 0
 1036 05c0 80E0      		ldi r24,lo8(.LC11)
 1037 05c2 90E0      		ldi r25,hi8(.LC11)
 1038 05c4 892F      		mov r24,r25
 1039 05c6 8F93      		push r24
 1040 05c8 80E0      		ldi r24,lo8(.LC11)
 1041 05ca 90E0      		ldi r25,hi8(.LC11)
 1042 05cc 8F93      		push r24
 1043 05ce 1F92      		push __zero_reg__
 1044 05d0 83E0      		ldi r24,lo8(3)
 1045 05d2 8F93      		push r24
 1046 05d4 8D8D      		ldd r24,Y+29
 1047 05d6 8F93      		push r24
 1048 05d8 8C8D      		ldd r24,Y+28
 1049 05da 8F93      		push r24
 1050 05dc 0E94 0000 		call report
 1051 05e0 0F90      		pop __tmp_reg__
 1052 05e2 0F90      		pop __tmp_reg__
 1053 05e4 0F90      		pop __tmp_reg__
 1054 05e6 0F90      		pop __tmp_reg__
 1055 05e8 0F90      		pop __tmp_reg__
 1056 05ea 0F90      		pop __tmp_reg__
  98:lp_solve_5.5/lp_wlp.c ****     return(FALSE);
 1057               		.loc 1 98 0
 1058 05ec 80E0      		ldi r24,0
 1059 05ee 0C94 0000 		jmp .L130
 1060               	.L20:
  99:lp_solve_5.5/lp_wlp.c ****   }
 100:lp_solve_5.5/lp_wlp.c **** 
 101:lp_solve_5.5/lp_wlp.c ****   /* Write name of model */
 102:lp_solve_5.5/lp_wlp.c ****   ptr = get_lp_name(lp);
 1061               		.loc 1 102 0
 1062 05f2 8C8D      		ldd r24,Y+28
 1063 05f4 9D8D      		ldd r25,Y+29
 1064 05f6 0E94 0000 		call get_lp_name
 1065 05fa 9F87      		std Y+15,r25
 1066 05fc 8E87      		std Y+14,r24
 103:lp_solve_5.5/lp_wlp.c ****   if(ptr != NULL) {
 1067               		.loc 1 103 0
 1068 05fe 8E85      		ldd r24,Y+14
 1069 0600 9F85      		ldd r25,Y+15
 1070 0602 892B      		or r24,r25
 1071 0604 01F0      		breq .L22
 104:lp_solve_5.5/lp_wlp.c ****     if(*ptr)
 1072               		.loc 1 104 0
 1073 0606 8E85      		ldd r24,Y+14
 1074 0608 9F85      		ldd r25,Y+15
 1075 060a FC01      		movw r30,r24
 1076 060c 8081      		ld r24,Z
 1077 060e 8823      		tst r24
 1078 0610 01F0      		breq .L23
 105:lp_solve_5.5/lp_wlp.c ****       write_lpcomment(userhandle, write_modeldata, ptr, FALSE);
 1079               		.loc 1 105 0
 1080 0612 4E85      		ldd r20,Y+14
 1081 0614 5F85      		ldd r21,Y+15
 1082 0616 68A1      		ldd r22,Y+32
 1083 0618 79A1      		ldd r23,Y+33
 1084 061a 8E8D      		ldd r24,Y+30
 1085 061c 9F8D      		ldd r25,Y+31
 1086 061e 20E0      		ldi r18,0
 1087 0620 0E94 0000 		call write_lpcomment
 1088 0624 00C0      		rjmp .L22
 1089               	.L23:
 106:lp_solve_5.5/lp_wlp.c ****     else
 107:lp_solve_5.5/lp_wlp.c ****       ptr = NULL;
 1090               		.loc 1 107 0
 1091 0626 1F86      		std Y+15,__zero_reg__
 1092 0628 1E86      		std Y+14,__zero_reg__
 1093               	.L22:
 108:lp_solve_5.5/lp_wlp.c ****   }
 109:lp_solve_5.5/lp_wlp.c **** 
 110:lp_solve_5.5/lp_wlp.c ****   /* Write the objective function */
 111:lp_solve_5.5/lp_wlp.c ****   write_lpcomment(userhandle, write_modeldata, "Objective function", (MYBOOL) (ptr != NULL));
 1094               		.loc 1 111 0
 1095 062a 21E0      		ldi r18,lo8(1)
 1096 062c 8E85      		ldd r24,Y+14
 1097 062e 9F85      		ldd r25,Y+15
 1098 0630 892B      		or r24,r25
 1099 0632 01F4      		brne .L24
 1100 0634 20E0      		ldi r18,0
 1101               	.L24:
 1102 0636 68A1      		ldd r22,Y+32
 1103 0638 79A1      		ldd r23,Y+33
 1104 063a 8E8D      		ldd r24,Y+30
 1105 063c 9F8D      		ldd r25,Y+31
 1106 063e 40E0      		ldi r20,lo8(.LC12)
 1107 0640 50E0      		ldi r21,hi8(.LC12)
 1108 0642 0E94 0000 		call write_lpcomment
 112:lp_solve_5.5/lp_wlp.c ****   if(is_maxim(lp))
 1109               		.loc 1 112 0
 1110 0646 8C8D      		ldd r24,Y+28
 1111 0648 9D8D      		ldd r25,Y+29
 1112 064a 0E94 0000 		call is_maxim
 1113 064e 8823      		tst r24
 1114 0650 01F0      		breq .L25
 113:lp_solve_5.5/lp_wlp.c ****     write_data(userhandle, write_modeldata, "max: ");
 1115               		.loc 1 113 0
 1116 0652 80E0      		ldi r24,lo8(.LC13)
 1117 0654 90E0      		ldi r25,hi8(.LC13)
 1118 0656 892F      		mov r24,r25
 1119 0658 8F93      		push r24
 1120 065a 80E0      		ldi r24,lo8(.LC13)
 1121 065c 90E0      		ldi r25,hi8(.LC13)
 1122 065e 8F93      		push r24
 1123 0660 89A1      		ldd r24,Y+33
 1124 0662 8F93      		push r24
 1125 0664 88A1      		ldd r24,Y+32
 1126 0666 8F93      		push r24
 1127 0668 8F8D      		ldd r24,Y+31
 1128 066a 8F93      		push r24
 1129 066c 8E8D      		ldd r24,Y+30
 1130 066e 8F93      		push r24
 1131 0670 0E94 0000 		call write_data
 1132 0674 0F90      		pop __tmp_reg__
 1133 0676 0F90      		pop __tmp_reg__
 1134 0678 0F90      		pop __tmp_reg__
 1135 067a 0F90      		pop __tmp_reg__
 1136 067c 0F90      		pop __tmp_reg__
 1137 067e 0F90      		pop __tmp_reg__
 1138 0680 00C0      		rjmp .L26
 1139               	.L25:
 114:lp_solve_5.5/lp_wlp.c ****   else
 115:lp_solve_5.5/lp_wlp.c ****     write_data(userhandle, write_modeldata, "min: ");
 1140               		.loc 1 115 0
 1141 0682 80E0      		ldi r24,lo8(.LC14)
 1142 0684 90E0      		ldi r25,hi8(.LC14)
 1143 0686 892F      		mov r24,r25
 1144 0688 8F93      		push r24
 1145 068a 80E0      		ldi r24,lo8(.LC14)
 1146 068c 90E0      		ldi r25,hi8(.LC14)
 1147 068e 8F93      		push r24
 1148 0690 89A1      		ldd r24,Y+33
 1149 0692 8F93      		push r24
 1150 0694 88A1      		ldd r24,Y+32
 1151 0696 8F93      		push r24
 1152 0698 8F8D      		ldd r24,Y+31
 1153 069a 8F93      		push r24
 1154 069c 8E8D      		ldd r24,Y+30
 1155 069e 8F93      		push r24
 1156 06a0 0E94 0000 		call write_data
 1157 06a4 0F90      		pop __tmp_reg__
 1158 06a6 0F90      		pop __tmp_reg__
 1159 06a8 0F90      		pop __tmp_reg__
 1160 06aa 0F90      		pop __tmp_reg__
 1161 06ac 0F90      		pop __tmp_reg__
 1162 06ae 0F90      		pop __tmp_reg__
 1163               	.L26:
 116:lp_solve_5.5/lp_wlp.c **** 
 117:lp_solve_5.5/lp_wlp.c ****   allocREAL(lp, &val, 1 + lp->columns, TRUE);
 1164               		.loc 1 117 0
 1165 06b0 8C8D      		ldd r24,Y+28
 1166 06b2 9D8D      		ldd r25,Y+29
 1167 06b4 8451      		subi r24,20
 1168 06b6 9E4F      		sbci r25,-2
 1169 06b8 FC01      		movw r30,r24
 1170 06ba 8081      		ld r24,Z
 1171 06bc 9181      		ldd r25,Z+1
 1172 06be AC01      		movw r20,r24
 1173 06c0 4F5F      		subi r20,-1
 1174 06c2 5F4F      		sbci r21,-1
 1175 06c4 BE01      		movw r22,r28
 1176 06c6 665E      		subi r22,-26
 1177 06c8 7F4F      		sbci r23,-1
 1178 06ca 8C8D      		ldd r24,Y+28
 1179 06cc 9D8D      		ldd r25,Y+29
 1180 06ce 21E0      		ldi r18,lo8(1)
 1181 06d0 0E94 0000 		call allocREAL
 118:lp_solve_5.5/lp_wlp.c ****   allocINT(lp, &idx, 1 + lp->columns, TRUE);
 1182               		.loc 1 118 0
 1183 06d4 8C8D      		ldd r24,Y+28
 1184 06d6 9D8D      		ldd r25,Y+29
 1185 06d8 8451      		subi r24,20
 1186 06da 9E4F      		sbci r25,-2
 1187 06dc FC01      		movw r30,r24
 1188 06de 8081      		ld r24,Z
 1189 06e0 9181      		ldd r25,Z+1
 1190 06e2 AC01      		movw r20,r24
 1191 06e4 4F5F      		subi r20,-1
 1192 06e6 5F4F      		sbci r21,-1
 1193 06e8 BE01      		movw r22,r28
 1194 06ea 685E      		subi r22,-24
 1195 06ec 7F4F      		sbci r23,-1
 1196 06ee 8C8D      		ldd r24,Y+28
 1197 06f0 9D8D      		ldd r25,Y+29
 1198 06f2 21E0      		ldi r18,lo8(1)
 1199 06f4 0E94 0000 		call allocINT
 119:lp_solve_5.5/lp_wlp.c **** 
 120:lp_solve_5.5/lp_wlp.c ****   write_lprow(lp, 0, userhandle, write_modeldata, maxlen, idx, val);
 1200               		.loc 1 120 0
 1201 06f8 AA8D      		ldd r26,Y+26
 1202 06fa BB8D      		ldd r27,Y+27
 1203 06fc E88D      		ldd r30,Y+24
 1204 06fe F98D      		ldd r31,Y+25
 1205 0700 6C89      		ldd r22,Y+20
 1206 0702 7D89      		ldd r23,Y+21
 1207 0704 28A1      		ldd r18,Y+32
 1208 0706 39A1      		ldd r19,Y+33
 1209 0708 4E8D      		ldd r20,Y+30
 1210 070a 5F8D      		ldd r21,Y+31
 1211 070c 8C8D      		ldd r24,Y+28
 1212 070e 9D8D      		ldd r25,Y+29
 1213 0710 6D01      		movw r12,r26
 1214 0712 7F01      		movw r14,r30
 1215 0714 8B01      		movw r16,r22
 1216 0716 60E0      		ldi r22,0
 1217 0718 70E0      		ldi r23,0
 1218 071a 0E94 0000 		call write_lprow
 121:lp_solve_5.5/lp_wlp.c ****   a = get_rh(lp, 0);
 1219               		.loc 1 121 0
 1220 071e 8C8D      		ldd r24,Y+28
 1221 0720 9D8D      		ldd r25,Y+29
 1222 0722 60E0      		ldi r22,0
 1223 0724 70E0      		ldi r23,0
 1224 0726 0E94 0000 		call get_rh
 1225 072a DC01      		movw r26,r24
 1226 072c CB01      		movw r24,r22
 1227 072e 8A87      		std Y+10,r24
 1228 0730 9B87      		std Y+11,r25
 1229 0732 AC87      		std Y+12,r26
 1230 0734 BD87      		std Y+13,r27
 122:lp_solve_5.5/lp_wlp.c ****   if(a != 0)
 1231               		.loc 1 122 0
 1232 0736 20E0      		ldi r18,0
 1233 0738 30E0      		ldi r19,0
 1234 073a A901      		movw r20,r18
 1235 073c 6A85      		ldd r22,Y+10
 1236 073e 7B85      		ldd r23,Y+11
 1237 0740 8C85      		ldd r24,Y+12
 1238 0742 9D85      		ldd r25,Y+13
 1239 0744 0E94 0000 		call __nesf2
 1240 0748 8823      		tst r24
 1241 074a 01F0      		breq .L27
 123:lp_solve_5.5/lp_wlp.c ****     write_data(userhandle, write_modeldata, " %+.12g", a);
 1242               		.loc 1 123 0
 1243 074c 8D85      		ldd r24,Y+13
 1244 074e 8F93      		push r24
 1245 0750 8C85      		ldd r24,Y+12
 1246 0752 8F93      		push r24
 1247 0754 8B85      		ldd r24,Y+11
 1248 0756 8F93      		push r24
 1249 0758 8A85      		ldd r24,Y+10
 1250 075a 8F93      		push r24
 1251 075c 80E0      		ldi r24,lo8(.LC15)
 1252 075e 90E0      		ldi r25,hi8(.LC15)
 1253 0760 892F      		mov r24,r25
 1254 0762 8F93      		push r24
 1255 0764 80E0      		ldi r24,lo8(.LC15)
 1256 0766 90E0      		ldi r25,hi8(.LC15)
 1257 0768 8F93      		push r24
 1258 076a 89A1      		ldd r24,Y+33
 1259 076c 8F93      		push r24
 1260 076e 88A1      		ldd r24,Y+32
 1261 0770 8F93      		push r24
 1262 0772 8F8D      		ldd r24,Y+31
 1263 0774 8F93      		push r24
 1264 0776 8E8D      		ldd r24,Y+30
 1265 0778 8F93      		push r24
 1266 077a 0E94 0000 		call write_data
 1267 077e 2DB7      		in r18,__SP_L__
 1268 0780 3EB7      		in r19,__SP_H__
 1269 0782 265F      		subi r18,-10
 1270 0784 3F4F      		sbci r19,-1
 1271 0786 0FB6      		in __tmp_reg__,__SREG__
 1272 0788 F894      		cli
 1273 078a DEBF      		out __SP_H__,r29
 1274 078c 0FBE      		out __SREG__,__tmp_reg__
 1275 078e CDBF      		out __SP_L__,r28
 1276               	.L27:
 124:lp_solve_5.5/lp_wlp.c ****   write_data(userhandle, write_modeldata, ";\n");
 1277               		.loc 1 124 0
 1278 0790 80E0      		ldi r24,lo8(.LC16)
 1279 0792 90E0      		ldi r25,hi8(.LC16)
 1280 0794 892F      		mov r24,r25
 1281 0796 8F93      		push r24
 1282 0798 80E0      		ldi r24,lo8(.LC16)
 1283 079a 90E0      		ldi r25,hi8(.LC16)
 1284 079c 8F93      		push r24
 1285 079e 89A1      		ldd r24,Y+33
 1286 07a0 8F93      		push r24
 1287 07a2 88A1      		ldd r24,Y+32
 1288 07a4 8F93      		push r24
 1289 07a6 8F8D      		ldd r24,Y+31
 1290 07a8 8F93      		push r24
 1291 07aa 8E8D      		ldd r24,Y+30
 1292 07ac 8F93      		push r24
 1293 07ae 0E94 0000 		call write_data
 1294 07b2 0F90      		pop __tmp_reg__
 1295 07b4 0F90      		pop __tmp_reg__
 1296 07b6 0F90      		pop __tmp_reg__
 1297 07b8 0F90      		pop __tmp_reg__
 1298 07ba 0F90      		pop __tmp_reg__
 1299 07bc 0F90      		pop __tmp_reg__
 125:lp_solve_5.5/lp_wlp.c **** 
 126:lp_solve_5.5/lp_wlp.c ****   /* Write constraints */
 127:lp_solve_5.5/lp_wlp.c ****   if(nrows > 0)
 1300               		.loc 1 127 0
 1301 07be 8889      		ldd r24,Y+16
 1302 07c0 9989      		ldd r25,Y+17
 1303 07c2 1816      		cp __zero_reg__,r24
 1304 07c4 1906      		cpc __zero_reg__,r25
 1305 07c6 04F4      		brge .L29
 128:lp_solve_5.5/lp_wlp.c ****     write_lpcomment(userhandle, write_modeldata, "Constraints", TRUE);
 1306               		.loc 1 128 0
 1307 07c8 68A1      		ldd r22,Y+32
 1308 07ca 79A1      		ldd r23,Y+33
 1309 07cc 8E8D      		ldd r24,Y+30
 1310 07ce 9F8D      		ldd r25,Y+31
 1311 07d0 21E0      		ldi r18,lo8(1)
 1312 07d2 40E0      		ldi r20,lo8(.LC17)
 1313 07d4 50E0      		ldi r21,hi8(.LC17)
 1314 07d6 0E94 0000 		call write_lpcomment
 1315               	.L29:
 129:lp_solve_5.5/lp_wlp.c ****   for(j = 1; j <= nrows; j++) {
 1316               		.loc 1 129 0
 1317 07da 81E0      		ldi r24,lo8(1)
 1318 07dc 90E0      		ldi r25,0
 1319 07de 9C83      		std Y+4,r25
 1320 07e0 8B83      		std Y+3,r24
 1321 07e2 00C0      		rjmp .L30
 1322               	.L69:
 130:lp_solve_5.5/lp_wlp.c ****     if(((lp->names_used) && (lp->row_name[j] != NULL)) || (write_lprow(lp, j, userhandle, NULL, max
 1323               		.loc 1 130 0
 1324 07e4 8C8D      		ldd r24,Y+28
 1325 07e6 9D8D      		ldd r25,Y+29
 1326 07e8 8250      		subi r24,2
 1327 07ea 9E4F      		sbci r25,-2
 1328 07ec FC01      		movw r30,r24
 1329 07ee 8081      		ld r24,Z
 1330 07f0 8823      		tst r24
 1331 07f2 01F0      		breq .L31
 1332               		.loc 1 130 0 is_stmt 0 discriminator 1
 1333 07f4 8C8D      		ldd r24,Y+28
 1334 07f6 9D8D      		ldd r25,Y+29
 1335 07f8 8658      		subi r24,-122
 1336 07fa 9D4F      		sbci r25,-3
 1337 07fc FC01      		movw r30,r24
 1338 07fe 2081      		ld r18,Z
 1339 0800 3181      		ldd r19,Z+1
 1340 0802 8B81      		ldd r24,Y+3
 1341 0804 9C81      		ldd r25,Y+4
 1342 0806 880F      		lsl r24
 1343 0808 991F      		rol r25
 1344 080a 820F      		add r24,r18
 1345 080c 931F      		adc r25,r19
 1346 080e FC01      		movw r30,r24
 1347 0810 8081      		ld r24,Z
 1348 0812 9181      		ldd r25,Z+1
 1349 0814 892B      		or r24,r25
 1350 0816 01F4      		brne .L32
 1351               	.L31:
 1352               		.loc 1 130 0 discriminator 3
 1353 0818 AA8D      		ldd r26,Y+26
 1354 081a BB8D      		ldd r27,Y+27
 1355 081c E88D      		ldd r30,Y+24
 1356 081e F98D      		ldd r31,Y+25
 1357 0820 2C89      		ldd r18,Y+20
 1358 0822 3D89      		ldd r19,Y+21
 1359 0824 4E8D      		ldd r20,Y+30
 1360 0826 5F8D      		ldd r21,Y+31
 1361 0828 6B81      		ldd r22,Y+3
 1362 082a 7C81      		ldd r23,Y+4
 1363 082c 8C8D      		ldd r24,Y+28
 1364 082e 9D8D      		ldd r25,Y+29
 1365 0830 6D01      		movw r12,r26
 1366 0832 7F01      		movw r14,r30
 1367 0834 8901      		movw r16,r18
 1368 0836 20E0      		ldi r18,0
 1369 0838 30E0      		ldi r19,0
 1370 083a 0E94 0000 		call write_lprow
 1371 083e 0197      		sbiw r24,1
 1372 0840 01F4      		brne .L33
 1373               	.L32:
 131:lp_solve_5.5/lp_wlp.c ****       ptr = get_row_name(lp, j);
 1374               		.loc 1 131 0 is_stmt 1
 1375 0842 2B81      		ldd r18,Y+3
 1376 0844 3C81      		ldd r19,Y+4
 1377 0846 8C8D      		ldd r24,Y+28
 1378 0848 9D8D      		ldd r25,Y+29
 1379 084a B901      		movw r22,r18
 1380 084c 0E94 0000 		call get_row_name
 1381 0850 9F87      		std Y+15,r25
 1382 0852 8E87      		std Y+14,r24
 1383 0854 00C0      		rjmp .L34
 1384               	.L33:
 132:lp_solve_5.5/lp_wlp.c ****     else
 133:lp_solve_5.5/lp_wlp.c ****       ptr = NULL;
 1385               		.loc 1 133 0
 1386 0856 1F86      		std Y+15,__zero_reg__
 1387 0858 1E86      		std Y+14,__zero_reg__
 1388               	.L34:
 134:lp_solve_5.5/lp_wlp.c ****     if((ptr != NULL) && (*ptr))
 1389               		.loc 1 134 0
 1390 085a 8E85      		ldd r24,Y+14
 1391 085c 9F85      		ldd r25,Y+15
 1392 085e 892B      		or r24,r25
 1393 0860 01F0      		breq .L35
 1394               		.loc 1 134 0 is_stmt 0 discriminator 1
 1395 0862 8E85      		ldd r24,Y+14
 1396 0864 9F85      		ldd r25,Y+15
 1397 0866 FC01      		movw r30,r24
 1398 0868 8081      		ld r24,Z
 1399 086a 8823      		tst r24
 1400 086c 01F0      		breq .L35
 135:lp_solve_5.5/lp_wlp.c ****       write_data(userhandle, write_modeldata, "%s: ", ptr);
 1401               		.loc 1 135 0 is_stmt 1
 1402 086e 8F85      		ldd r24,Y+15
 1403 0870 8F93      		push r24
 1404 0872 8E85      		ldd r24,Y+14
 1405 0874 8F93      		push r24
 1406 0876 80E0      		ldi r24,lo8(.LC18)
 1407 0878 90E0      		ldi r25,hi8(.LC18)
 1408 087a 892F      		mov r24,r25
 1409 087c 8F93      		push r24
 1410 087e 80E0      		ldi r24,lo8(.LC18)
 1411 0880 90E0      		ldi r25,hi8(.LC18)
 1412 0882 8F93      		push r24
 1413 0884 89A1      		ldd r24,Y+33
 1414 0886 8F93      		push r24
 1415 0888 88A1      		ldd r24,Y+32
 1416 088a 8F93      		push r24
 1417 088c 8F8D      		ldd r24,Y+31
 1418 088e 8F93      		push r24
 1419 0890 8E8D      		ldd r24,Y+30
 1420 0892 8F93      		push r24
 1421 0894 0E94 0000 		call write_data
 1422 0898 2DB7      		in r18,__SP_L__
 1423 089a 3EB7      		in r19,__SP_H__
 1424 089c 285F      		subi r18,-8
 1425 089e 3F4F      		sbci r19,-1
 1426 08a0 0FB6      		in __tmp_reg__,__SREG__
 1427 08a2 F894      		cli
 1428 08a4 DEBF      		out __SP_H__,r29
 1429 08a6 0FBE      		out __SREG__,__tmp_reg__
 1430 08a8 CDBF      		out __SP_L__,r28
 1431               	.L35:
 136:lp_solve_5.5/lp_wlp.c **** 
 137:lp_solve_5.5/lp_wlp.c **** #ifndef SingleBoundedRowInLP
 138:lp_solve_5.5/lp_wlp.c ****     /* Write the ranged part of the constraint, if specified */
 139:lp_solve_5.5/lp_wlp.c ****     if ((lp->orig_upbo[j]) && (lp->orig_upbo[j] < lp->infinite)) {
 1432               		.loc 1 139 0
 1433 08aa 8C8D      		ldd r24,Y+28
 1434 08ac 9D8D      		ldd r25,Y+29
 1435 08ae 8255      		subi r24,82
 1436 08b0 9D4F      		sbci r25,-3
 1437 08b2 FC01      		movw r30,r24
 1438 08b4 2081      		ld r18,Z
 1439 08b6 3181      		ldd r19,Z+1
 1440 08b8 8B81      		ldd r24,Y+3
 1441 08ba 9C81      		ldd r25,Y+4
 1442 08bc 880F      		lsl r24
 1443 08be 991F      		rol r25
 1444 08c0 880F      		lsl r24
 1445 08c2 991F      		rol r25
 1446 08c4 820F      		add r24,r18
 1447 08c6 931F      		adc r25,r19
 1448 08c8 FC01      		movw r30,r24
 1449 08ca 8081      		ld r24,Z
 1450 08cc 9181      		ldd r25,Z+1
 1451 08ce A281      		ldd r26,Z+2
 1452 08d0 B381      		ldd r27,Z+3
 1453 08d2 20E0      		ldi r18,0
 1454 08d4 30E0      		ldi r19,0
 1455 08d6 A901      		movw r20,r18
 1456 08d8 BC01      		movw r22,r24
 1457 08da CD01      		movw r24,r26
 1458 08dc 0E94 0000 		call __nesf2
 1459 08e0 8823      		tst r24
 1460 08e2 01F4      		brne .+2
 1461 08e4 00C0      		rjmp .L36
 1462               		.loc 1 139 0 is_stmt 0 discriminator 1
 1463 08e6 8C8D      		ldd r24,Y+28
 1464 08e8 9D8D      		ldd r25,Y+29
 1465 08ea 8255      		subi r24,82
 1466 08ec 9D4F      		sbci r25,-3
 1467 08ee FC01      		movw r30,r24
 1468 08f0 2081      		ld r18,Z
 1469 08f2 3181      		ldd r19,Z+1
 1470 08f4 8B81      		ldd r24,Y+3
 1471 08f6 9C81      		ldd r25,Y+4
 1472 08f8 880F      		lsl r24
 1473 08fa 991F      		rol r25
 1474 08fc 880F      		lsl r24
 1475 08fe 991F      		rol r25
 1476 0900 820F      		add r24,r18
 1477 0902 931F      		adc r25,r19
 1478 0904 FC01      		movw r30,r24
 1479 0906 8081      		ld r24,Z
 1480 0908 9181      		ldd r25,Z+1
 1481 090a A281      		ldd r26,Z+2
 1482 090c B381      		ldd r27,Z+3
 1483 090e 2C8D      		ldd r18,Y+28
 1484 0910 3D8D      		ldd r19,Y+29
 1485 0912 265F      		subi r18,-10
 1486 0914 3C4F      		sbci r19,-4
 1487 0916 F901      		movw r30,r18
 1488 0918 2081      		ld r18,Z
 1489 091a 3181      		ldd r19,Z+1
 1490 091c 4281      		ldd r20,Z+2
 1491 091e 5381      		ldd r21,Z+3
 1492 0920 BC01      		movw r22,r24
 1493 0922 CD01      		movw r24,r26
 1494 0924 0E94 0000 		call __ltsf2
 1495 0928 8823      		tst r24
 1496 092a 04F0      		brlt .+2
 1497 092c 00C0      		rjmp .L36
 140:lp_solve_5.5/lp_wlp.c ****       if(my_chsign(is_chsign(lp, j), lp->orig_rhs[j]) == -lp->infinite)
 1498               		.loc 1 140 0 is_stmt 1
 1499 092e 2B81      		ldd r18,Y+3
 1500 0930 3C81      		ldd r19,Y+4
 1501 0932 8C8D      		ldd r24,Y+28
 1502 0934 9D8D      		ldd r25,Y+29
 1503 0936 B901      		movw r22,r18
 1504 0938 0E94 0000 		call is_chsign
 1505 093c 8823      		tst r24
 1506 093e 01F0      		breq .L39
 1507               		.loc 1 140 0 is_stmt 0 discriminator 1
 1508 0940 8C8D      		ldd r24,Y+28
 1509 0942 9D8D      		ldd r25,Y+29
 1510 0944 8A55      		subi r24,90
 1511 0946 9D4F      		sbci r25,-3
 1512 0948 FC01      		movw r30,r24
 1513 094a 2081      		ld r18,Z
 1514 094c 3181      		ldd r19,Z+1
 1515 094e 8B81      		ldd r24,Y+3
 1516 0950 9C81      		ldd r25,Y+4
 1517 0952 880F      		lsl r24
 1518 0954 991F      		rol r25
 1519 0956 880F      		lsl r24
 1520 0958 991F      		rol r25
 1521 095a 820F      		add r24,r18
 1522 095c 931F      		adc r25,r19
 1523 095e FC01      		movw r30,r24
 1524 0960 8081      		ld r24,Z
 1525 0962 9181      		ldd r25,Z+1
 1526 0964 A281      		ldd r26,Z+2
 1527 0966 B381      		ldd r27,Z+3
 1528 0968 20E0      		ldi r18,0
 1529 096a 30E0      		ldi r19,0
 1530 096c A901      		movw r20,r18
 1531 096e BC01      		movw r22,r24
 1532 0970 CD01      		movw r24,r26
 1533 0972 0E94 0000 		call __nesf2
 1534 0976 8823      		tst r24
 1535 0978 01F0      		breq .L39
 1536               		.loc 1 140 0 discriminator 3
 1537 097a 8C8D      		ldd r24,Y+28
 1538 097c 9D8D      		ldd r25,Y+29
 1539 097e 8A55      		subi r24,90
 1540 0980 9D4F      		sbci r25,-3
 1541 0982 FC01      		movw r30,r24
 1542 0984 2081      		ld r18,Z
 1543 0986 3181      		ldd r19,Z+1
 1544 0988 8B81      		ldd r24,Y+3
 1545 098a 9C81      		ldd r25,Y+4
 1546 098c 880F      		lsl r24
 1547 098e 991F      		rol r25
 1548 0990 880F      		lsl r24
 1549 0992 991F      		rol r25
 1550 0994 820F      		add r24,r18
 1551 0996 931F      		adc r25,r19
 1552 0998 FC01      		movw r30,r24
 1553 099a 8081      		ld r24,Z
 1554 099c 9181      		ldd r25,Z+1
 1555 099e A281      		ldd r26,Z+2
 1556 09a0 B381      		ldd r27,Z+3
 1557 09a2 B058      		subi r27,0x80
 1558 09a4 00C0      		rjmp .L41
 1559               	.L39:
 1560               		.loc 1 140 0 discriminator 4
 1561 09a6 8C8D      		ldd r24,Y+28
 1562 09a8 9D8D      		ldd r25,Y+29
 1563 09aa 8A55      		subi r24,90
 1564 09ac 9D4F      		sbci r25,-3
 1565 09ae FC01      		movw r30,r24
 1566 09b0 2081      		ld r18,Z
 1567 09b2 3181      		ldd r19,Z+1
 1568 09b4 8B81      		ldd r24,Y+3
 1569 09b6 9C81      		ldd r25,Y+4
 1570 09b8 880F      		lsl r24
 1571 09ba 991F      		rol r25
 1572 09bc 880F      		lsl r24
 1573 09be 991F      		rol r25
 1574 09c0 820F      		add r24,r18
 1575 09c2 931F      		adc r25,r19
 1576 09c4 FC01      		movw r30,r24
 1577 09c6 8081      		ld r24,Z
 1578 09c8 9181      		ldd r25,Z+1
 1579 09ca A281      		ldd r26,Z+2
 1580 09cc B381      		ldd r27,Z+3
 1581               	.L41:
 1582               		.loc 1 140 0 discriminator 6
 1583 09ce 2C8D      		ldd r18,Y+28
 1584 09d0 3D8D      		ldd r19,Y+29
 1585 09d2 265F      		subi r18,-10
 1586 09d4 3C4F      		sbci r19,-4
 1587 09d6 F901      		movw r30,r18
 1588 09d8 2081      		ld r18,Z
 1589 09da 3181      		ldd r19,Z+1
 1590 09dc 4281      		ldd r20,Z+2
 1591 09de 5381      		ldd r21,Z+3
 1592 09e0 5058      		subi r21,0x80
 1593 09e2 BC01      		movw r22,r24
 1594 09e4 CD01      		movw r24,r26
 1595 09e6 0E94 0000 		call __eqsf2
 1596 09ea 8823      		tst r24
 1597 09ec 01F4      		brne .L151
 141:lp_solve_5.5/lp_wlp.c ****         write_data(userhandle, write_modeldata, "-Inf %s ", (is_chsign(lp, j)) ? ">=" : "<=");
 1598               		.loc 1 141 0 is_stmt 1
 1599 09ee 2B81      		ldd r18,Y+3
 1600 09f0 3C81      		ldd r19,Y+4
 1601 09f2 8C8D      		ldd r24,Y+28
 1602 09f4 9D8D      		ldd r25,Y+29
 1603 09f6 B901      		movw r22,r18
 1604 09f8 0E94 0000 		call is_chsign
 1605 09fc 8823      		tst r24
 1606 09fe 01F0      		breq .L44
 1607               		.loc 1 141 0 is_stmt 0 discriminator 1
 1608 0a00 80E0      		ldi r24,lo8(.LC19)
 1609 0a02 90E0      		ldi r25,hi8(.LC19)
 1610 0a04 00C0      		rjmp .L45
 1611               	.L44:
 1612               		.loc 1 141 0 discriminator 2
 1613 0a06 80E0      		ldi r24,lo8(.LC20)
 1614 0a08 90E0      		ldi r25,hi8(.LC20)
 1615               	.L45:
 1616               		.loc 1 141 0 discriminator 4
 1617 0a0a 292F      		mov r18,r25
 1618 0a0c 2F93      		push r18
 1619 0a0e 8F93      		push r24
 1620 0a10 80E0      		ldi r24,lo8(.LC21)
 1621 0a12 90E0      		ldi r25,hi8(.LC21)
 1622 0a14 892F      		mov r24,r25
 1623 0a16 8F93      		push r24
 1624 0a18 80E0      		ldi r24,lo8(.LC21)
 1625 0a1a 90E0      		ldi r25,hi8(.LC21)
 1626 0a1c 8F93      		push r24
 1627 0a1e 89A1      		ldd r24,Y+33
 1628 0a20 8F93      		push r24
 1629 0a22 88A1      		ldd r24,Y+32
 1630 0a24 8F93      		push r24
 1631 0a26 8F8D      		ldd r24,Y+31
 1632 0a28 8F93      		push r24
 1633 0a2a 8E8D      		ldd r24,Y+30
 1634 0a2c 8F93      		push r24
 1635 0a2e 0E94 0000 		call write_data
 1636 0a32 2DB7      		in r18,__SP_L__
 1637 0a34 3EB7      		in r19,__SP_H__
 1638 0a36 285F      		subi r18,-8
 1639 0a38 3F4F      		sbci r19,-1
 1640 0a3a 0FB6      		in __tmp_reg__,__SREG__
 1641 0a3c F894      		cli
 1642 0a3e DEBF      		out __SP_H__,r29
 1643 0a40 0FBE      		out __SREG__,__tmp_reg__
 1644 0a42 CDBF      		out __SP_L__,r28
 1645 0a44 00C0      		rjmp .L36
 1646               	.L151:
 142:lp_solve_5.5/lp_wlp.c ****       else if(my_chsign(is_chsign(lp, j), lp->orig_rhs[j]) == lp->infinite)
 1647               		.loc 1 142 0 is_stmt 1
 1648 0a46 2B81      		ldd r18,Y+3
 1649 0a48 3C81      		ldd r19,Y+4
 1650 0a4a 8C8D      		ldd r24,Y+28
 1651 0a4c 9D8D      		ldd r25,Y+29
 1652 0a4e B901      		movw r22,r18
 1653 0a50 0E94 0000 		call is_chsign
 1654 0a54 8823      		tst r24
 1655 0a56 01F0      		breq .L46
 1656               		.loc 1 142 0 is_stmt 0 discriminator 1
 1657 0a58 8C8D      		ldd r24,Y+28
 1658 0a5a 9D8D      		ldd r25,Y+29
 1659 0a5c 8A55      		subi r24,90
 1660 0a5e 9D4F      		sbci r25,-3
 1661 0a60 FC01      		movw r30,r24
 1662 0a62 2081      		ld r18,Z
 1663 0a64 3181      		ldd r19,Z+1
 1664 0a66 8B81      		ldd r24,Y+3
 1665 0a68 9C81      		ldd r25,Y+4
 1666 0a6a 880F      		lsl r24
 1667 0a6c 991F      		rol r25
 1668 0a6e 880F      		lsl r24
 1669 0a70 991F      		rol r25
 1670 0a72 820F      		add r24,r18
 1671 0a74 931F      		adc r25,r19
 1672 0a76 FC01      		movw r30,r24
 1673 0a78 8081      		ld r24,Z
 1674 0a7a 9181      		ldd r25,Z+1
 1675 0a7c A281      		ldd r26,Z+2
 1676 0a7e B381      		ldd r27,Z+3
 1677 0a80 20E0      		ldi r18,0
 1678 0a82 30E0      		ldi r19,0
 1679 0a84 A901      		movw r20,r18
 1680 0a86 BC01      		movw r22,r24
 1681 0a88 CD01      		movw r24,r26
 1682 0a8a 0E94 0000 		call __nesf2
 1683 0a8e 8823      		tst r24
 1684 0a90 01F0      		breq .L46
 1685               		.loc 1 142 0 discriminator 3
 1686 0a92 8C8D      		ldd r24,Y+28
 1687 0a94 9D8D      		ldd r25,Y+29
 1688 0a96 8A55      		subi r24,90
 1689 0a98 9D4F      		sbci r25,-3
 1690 0a9a FC01      		movw r30,r24
 1691 0a9c 2081      		ld r18,Z
 1692 0a9e 3181      		ldd r19,Z+1
 1693 0aa0 8B81      		ldd r24,Y+3
 1694 0aa2 9C81      		ldd r25,Y+4
 1695 0aa4 880F      		lsl r24
 1696 0aa6 991F      		rol r25
 1697 0aa8 880F      		lsl r24
 1698 0aaa 991F      		rol r25
 1699 0aac 820F      		add r24,r18
 1700 0aae 931F      		adc r25,r19
 1701 0ab0 FC01      		movw r30,r24
 1702 0ab2 8081      		ld r24,Z
 1703 0ab4 9181      		ldd r25,Z+1
 1704 0ab6 A281      		ldd r26,Z+2
 1705 0ab8 B381      		ldd r27,Z+3
 1706 0aba B058      		subi r27,0x80
 1707 0abc 00C0      		rjmp .L48
 1708               	.L46:
 1709               		.loc 1 142 0 discriminator 4
 1710 0abe 8C8D      		ldd r24,Y+28
 1711 0ac0 9D8D      		ldd r25,Y+29
 1712 0ac2 8A55      		subi r24,90
 1713 0ac4 9D4F      		sbci r25,-3
 1714 0ac6 FC01      		movw r30,r24
 1715 0ac8 2081      		ld r18,Z
 1716 0aca 3181      		ldd r19,Z+1
 1717 0acc 8B81      		ldd r24,Y+3
 1718 0ace 9C81      		ldd r25,Y+4
 1719 0ad0 880F      		lsl r24
 1720 0ad2 991F      		rol r25
 1721 0ad4 880F      		lsl r24
 1722 0ad6 991F      		rol r25
 1723 0ad8 820F      		add r24,r18
 1724 0ada 931F      		adc r25,r19
 1725 0adc FC01      		movw r30,r24
 1726 0ade 8081      		ld r24,Z
 1727 0ae0 9181      		ldd r25,Z+1
 1728 0ae2 A281      		ldd r26,Z+2
 1729 0ae4 B381      		ldd r27,Z+3
 1730               	.L48:
 1731               		.loc 1 142 0 discriminator 6
 1732 0ae6 2C8D      		ldd r18,Y+28
 1733 0ae8 3D8D      		ldd r19,Y+29
 1734 0aea 265F      		subi r18,-10
 1735 0aec 3C4F      		sbci r19,-4
 1736 0aee F901      		movw r30,r18
 1737 0af0 2081      		ld r18,Z
 1738 0af2 3181      		ldd r19,Z+1
 1739 0af4 4281      		ldd r20,Z+2
 1740 0af6 5381      		ldd r21,Z+3
 1741 0af8 BC01      		movw r22,r24
 1742 0afa CD01      		movw r24,r26
 1743 0afc 0E94 0000 		call __eqsf2
 1744 0b00 8823      		tst r24
 1745 0b02 01F4      		brne .L152
 143:lp_solve_5.5/lp_wlp.c ****         write_data(userhandle, write_modeldata, "+Inf %s ", (is_chsign(lp, j)) ? ">=" : "<=");
 1746               		.loc 1 143 0 is_stmt 1
 1747 0b04 2B81      		ldd r18,Y+3
 1748 0b06 3C81      		ldd r19,Y+4
 1749 0b08 8C8D      		ldd r24,Y+28
 1750 0b0a 9D8D      		ldd r25,Y+29
 1751 0b0c B901      		movw r22,r18
 1752 0b0e 0E94 0000 		call is_chsign
 1753 0b12 8823      		tst r24
 1754 0b14 01F0      		breq .L51
 1755               		.loc 1 143 0 is_stmt 0 discriminator 1
 1756 0b16 80E0      		ldi r24,lo8(.LC19)
 1757 0b18 90E0      		ldi r25,hi8(.LC19)
 1758 0b1a 00C0      		rjmp .L52
 1759               	.L51:
 1760               		.loc 1 143 0 discriminator 2
 1761 0b1c 80E0      		ldi r24,lo8(.LC20)
 1762 0b1e 90E0      		ldi r25,hi8(.LC20)
 1763               	.L52:
 1764               		.loc 1 143 0 discriminator 4
 1765 0b20 292F      		mov r18,r25
 1766 0b22 2F93      		push r18
 1767 0b24 8F93      		push r24
 1768 0b26 80E0      		ldi r24,lo8(.LC22)
 1769 0b28 90E0      		ldi r25,hi8(.LC22)
 1770 0b2a 892F      		mov r24,r25
 1771 0b2c 8F93      		push r24
 1772 0b2e 80E0      		ldi r24,lo8(.LC22)
 1773 0b30 90E0      		ldi r25,hi8(.LC22)
 1774 0b32 8F93      		push r24
 1775 0b34 89A1      		ldd r24,Y+33
 1776 0b36 8F93      		push r24
 1777 0b38 88A1      		ldd r24,Y+32
 1778 0b3a 8F93      		push r24
 1779 0b3c 8F8D      		ldd r24,Y+31
 1780 0b3e 8F93      		push r24
 1781 0b40 8E8D      		ldd r24,Y+30
 1782 0b42 8F93      		push r24
 1783 0b44 0E94 0000 		call write_data
 1784 0b48 2DB7      		in r18,__SP_L__
 1785 0b4a 3EB7      		in r19,__SP_H__
 1786 0b4c 285F      		subi r18,-8
 1787 0b4e 3F4F      		sbci r19,-1
 1788 0b50 0FB6      		in __tmp_reg__,__SREG__
 1789 0b52 F894      		cli
 1790 0b54 DEBF      		out __SP_H__,r29
 1791 0b56 0FBE      		out __SREG__,__tmp_reg__
 1792 0b58 CDBF      		out __SP_L__,r28
 1793 0b5a 00C0      		rjmp .L36
 1794               	.L152:
 144:lp_solve_5.5/lp_wlp.c ****       else
 145:lp_solve_5.5/lp_wlp.c ****         write_data(userhandle, write_modeldata, "%+.12g %s ",
 146:lp_solve_5.5/lp_wlp.c ****                 (lp->orig_upbo[j]-lp->orig_rhs[j]) * (is_chsign(lp, j) ? 1.0 : -1.0) / (lp->scaling
 147:lp_solve_5.5/lp_wlp.c ****                 (is_chsign(lp, j)) ? ">=" : "<=");
 1795               		.loc 1 147 0 is_stmt 1
 1796 0b5c 2B81      		ldd r18,Y+3
 1797 0b5e 3C81      		ldd r19,Y+4
 1798 0b60 8C8D      		ldd r24,Y+28
 1799 0b62 9D8D      		ldd r25,Y+29
 1800 0b64 B901      		movw r22,r18
 1801 0b66 0E94 0000 		call is_chsign
 145:lp_solve_5.5/lp_wlp.c ****                 (lp->orig_upbo[j]-lp->orig_rhs[j]) * (is_chsign(lp, j) ? 1.0 : -1.0) / (lp->scaling
 1802               		.loc 1 145 0
 1803 0b6a 8823      		tst r24
 1804 0b6c 01F0      		breq .L53
 145:lp_solve_5.5/lp_wlp.c ****                 (lp->orig_upbo[j]-lp->orig_rhs[j]) * (is_chsign(lp, j) ? 1.0 : -1.0) / (lp->scaling
 1805               		.loc 1 145 0 is_stmt 0 discriminator 1
 1806 0b6e 00E0      		ldi r16,lo8(.LC19)
 1807 0b70 10E0      		ldi r17,hi8(.LC19)
 1808 0b72 00C0      		rjmp .L54
 1809               	.L53:
 145:lp_solve_5.5/lp_wlp.c ****                 (lp->orig_upbo[j]-lp->orig_rhs[j]) * (is_chsign(lp, j) ? 1.0 : -1.0) / (lp->scaling
 1810               		.loc 1 145 0 discriminator 2
 1811 0b74 00E0      		ldi r16,lo8(.LC20)
 1812 0b76 10E0      		ldi r17,hi8(.LC20)
 1813               	.L54:
 146:lp_solve_5.5/lp_wlp.c ****                 (is_chsign(lp, j)) ? ">=" : "<=");
 1814               		.loc 1 146 0 is_stmt 1
 1815 0b78 8C8D      		ldd r24,Y+28
 1816 0b7a 9D8D      		ldd r25,Y+29
 1817 0b7c 8255      		subi r24,82
 1818 0b7e 9D4F      		sbci r25,-3
 1819 0b80 FC01      		movw r30,r24
 1820 0b82 2081      		ld r18,Z
 1821 0b84 3181      		ldd r19,Z+1
 1822 0b86 8B81      		ldd r24,Y+3
 1823 0b88 9C81      		ldd r25,Y+4
 1824 0b8a 880F      		lsl r24
 1825 0b8c 991F      		rol r25
 1826 0b8e 880F      		lsl r24
 1827 0b90 991F      		rol r25
 1828 0b92 820F      		add r24,r18
 1829 0b94 931F      		adc r25,r19
 1830 0b96 FC01      		movw r30,r24
 1831 0b98 8081      		ld r24,Z
 1832 0b9a 9181      		ldd r25,Z+1
 1833 0b9c A281      		ldd r26,Z+2
 1834 0b9e B381      		ldd r27,Z+3
 1835 0ba0 2C8D      		ldd r18,Y+28
 1836 0ba2 3D8D      		ldd r19,Y+29
 1837 0ba4 2A55      		subi r18,90
 1838 0ba6 3D4F      		sbci r19,-3
 1839 0ba8 F901      		movw r30,r18
 1840 0baa 4081      		ld r20,Z
 1841 0bac 5181      		ldd r21,Z+1
 1842 0bae 2B81      		ldd r18,Y+3
 1843 0bb0 3C81      		ldd r19,Y+4
 1844 0bb2 220F      		lsl r18
 1845 0bb4 331F      		rol r19
 1846 0bb6 220F      		lsl r18
 1847 0bb8 331F      		rol r19
 1848 0bba 240F      		add r18,r20
 1849 0bbc 351F      		adc r19,r21
 1850 0bbe F901      		movw r30,r18
 1851 0bc0 2081      		ld r18,Z
 1852 0bc2 3181      		ldd r19,Z+1
 1853 0bc4 4281      		ldd r20,Z+2
 1854 0bc6 5381      		ldd r21,Z+3
 1855 0bc8 BC01      		movw r22,r24
 1856 0bca CD01      		movw r24,r26
 1857 0bcc 0E94 0000 		call __subsf3
 1858 0bd0 DC01      		movw r26,r24
 1859 0bd2 CB01      		movw r24,r22
 1860 0bd4 6C01      		movw r12,r24
 1861 0bd6 7D01      		movw r14,r26
 1862 0bd8 2B81      		ldd r18,Y+3
 1863 0bda 3C81      		ldd r19,Y+4
 1864 0bdc 8C8D      		ldd r24,Y+28
 1865 0bde 9D8D      		ldd r25,Y+29
 1866 0be0 B901      		movw r22,r18
 1867 0be2 0E94 0000 		call is_chsign
 1868 0be6 8823      		tst r24
 1869 0be8 01F0      		breq .L55
 146:lp_solve_5.5/lp_wlp.c ****                 (is_chsign(lp, j)) ? ">=" : "<=");
 1870               		.loc 1 146 0 is_stmt 0 discriminator 1
 1871 0bea 80E0      		ldi r24,0
 1872 0bec 90E0      		ldi r25,0
 1873 0bee A0E8      		ldi r26,lo8(-128)
 1874 0bf0 BFE3      		ldi r27,lo8(63)
 1875 0bf2 00C0      		rjmp .L56
 1876               	.L55:
 146:lp_solve_5.5/lp_wlp.c ****                 (is_chsign(lp, j)) ? ">=" : "<=");
 1877               		.loc 1 146 0 discriminator 2
 1878 0bf4 80E0      		ldi r24,0
 1879 0bf6 90E0      		ldi r25,0
 1880 0bf8 A0E8      		ldi r26,lo8(-128)
 1881 0bfa BFEB      		ldi r27,lo8(-65)
 1882               	.L56:
 146:lp_solve_5.5/lp_wlp.c ****                 (is_chsign(lp, j)) ? ">=" : "<=");
 1883               		.loc 1 146 0 discriminator 4
 1884 0bfc 9C01      		movw r18,r24
 1885 0bfe AD01      		movw r20,r26
 1886 0c00 C701      		movw r24,r14
 1887 0c02 B601      		movw r22,r12
 1888 0c04 0E94 0000 		call __mulsf3
 1889 0c08 DC01      		movw r26,r24
 1890 0c0a CB01      		movw r24,r22
 1891 0c0c 6C01      		movw r12,r24
 1892 0c0e 7D01      		movw r14,r26
 1893 0c10 8C8D      		ldd r24,Y+28
 1894 0c12 9D8D      		ldd r25,Y+29
 1895 0c14 8A53      		subi r24,58
 1896 0c16 9D4F      		sbci r25,-3
 1897 0c18 FC01      		movw r30,r24
 1898 0c1a 8081      		ld r24,Z
 1899 0c1c 8823      		tst r24
 1900 0c1e 01F0      		breq .L57
 146:lp_solve_5.5/lp_wlp.c ****                 (is_chsign(lp, j)) ? ">=" : "<=");
 1901               		.loc 1 146 0 discriminator 5
 1902 0c20 8C8D      		ldd r24,Y+28
 1903 0c22 9D8D      		ldd r25,Y+29
 1904 0c24 8C53      		subi r24,60
 1905 0c26 9D4F      		sbci r25,-3
 1906 0c28 FC01      		movw r30,r24
 1907 0c2a 2081      		ld r18,Z
 1908 0c2c 3181      		ldd r19,Z+1
 1909 0c2e 8B81      		ldd r24,Y+3
 1910 0c30 9C81      		ldd r25,Y+4
 1911 0c32 880F      		lsl r24
 1912 0c34 991F      		rol r25
 1913 0c36 880F      		lsl r24
 1914 0c38 991F      		rol r25
 1915 0c3a 820F      		add r24,r18
 1916 0c3c 931F      		adc r25,r19
 1917 0c3e FC01      		movw r30,r24
 1918 0c40 8081      		ld r24,Z
 1919 0c42 9181      		ldd r25,Z+1
 1920 0c44 A281      		ldd r26,Z+2
 1921 0c46 B381      		ldd r27,Z+3
 1922 0c48 00C0      		rjmp .L58
 1923               	.L57:
 146:lp_solve_5.5/lp_wlp.c ****                 (is_chsign(lp, j)) ? ">=" : "<=");
 1924               		.loc 1 146 0 discriminator 6
 1925 0c4a 80E0      		ldi r24,0
 1926 0c4c 90E0      		ldi r25,0
 1927 0c4e A0E8      		ldi r26,lo8(-128)
 1928 0c50 BFE3      		ldi r27,lo8(63)
 1929               	.L58:
 145:lp_solve_5.5/lp_wlp.c ****                 (lp->orig_upbo[j]-lp->orig_rhs[j]) * (is_chsign(lp, j) ? 1.0 : -1.0) / (lp->scaling
 1930               		.loc 1 145 0 is_stmt 1
 1931 0c52 9C01      		movw r18,r24
 1932 0c54 AD01      		movw r20,r26
 1933 0c56 C701      		movw r24,r14
 1934 0c58 B601      		movw r22,r12
 1935 0c5a 0E94 0000 		call __divsf3
 1936 0c5e DC01      		movw r26,r24
 1937 0c60 CB01      		movw r24,r22
 1938 0c62 212F      		mov r18,r17
 1939 0c64 2F93      		push r18
 1940 0c66 202F      		mov r18,r16
 1941 0c68 2F93      		push r18
 1942 0c6a 2B2F      		mov r18,r27
 1943 0c6c 2F93      		push r18
 1944 0c6e 2A2F      		mov r18,r26
 1945 0c70 2F93      		push r18
 1946 0c72 292F      		mov r18,r25
 1947 0c74 2F93      		push r18
 1948 0c76 8F93      		push r24
 1949 0c78 80E0      		ldi r24,lo8(.LC23)
 1950 0c7a 90E0      		ldi r25,hi8(.LC23)
 1951 0c7c 892F      		mov r24,r25
 1952 0c7e 8F93      		push r24
 1953 0c80 80E0      		ldi r24,lo8(.LC23)
 1954 0c82 90E0      		ldi r25,hi8(.LC23)
 1955 0c84 8F93      		push r24
 1956 0c86 89A1      		ldd r24,Y+33
 1957 0c88 8F93      		push r24
 1958 0c8a 88A1      		ldd r24,Y+32
 1959 0c8c 8F93      		push r24
 1960 0c8e 8F8D      		ldd r24,Y+31
 1961 0c90 8F93      		push r24
 1962 0c92 8E8D      		ldd r24,Y+30
 1963 0c94 8F93      		push r24
 1964 0c96 0E94 0000 		call write_data
 1965 0c9a 2DB7      		in r18,__SP_L__
 1966 0c9c 3EB7      		in r19,__SP_H__
 1967 0c9e 245F      		subi r18,-12
 1968 0ca0 3F4F      		sbci r19,-1
 1969 0ca2 0FB6      		in __tmp_reg__,__SREG__
 1970 0ca4 F894      		cli
 1971 0ca6 DEBF      		out __SP_H__,r29
 1972 0ca8 0FBE      		out __SREG__,__tmp_reg__
 1973 0caa CDBF      		out __SP_L__,r28
 1974               	.L36:
 148:lp_solve_5.5/lp_wlp.c ****     }
 149:lp_solve_5.5/lp_wlp.c **** #endif
 150:lp_solve_5.5/lp_wlp.c **** 
 151:lp_solve_5.5/lp_wlp.c ****     if((!write_lprow(lp, j, userhandle, write_modeldata, maxlen, idx, val)) && (ncols >= 1))
 1975               		.loc 1 151 0
 1976 0cac 0A8D      		ldd r16,Y+26
 1977 0cae 1B8D      		ldd r17,Y+27
 1978 0cb0 A88D      		ldd r26,Y+24
 1979 0cb2 B98D      		ldd r27,Y+25
 1980 0cb4 EC89      		ldd r30,Y+20
 1981 0cb6 FD89      		ldd r31,Y+21
 1982 0cb8 28A1      		ldd r18,Y+32
 1983 0cba 39A1      		ldd r19,Y+33
 1984 0cbc 4E8D      		ldd r20,Y+30
 1985 0cbe 5F8D      		ldd r21,Y+31
 1986 0cc0 6B81      		ldd r22,Y+3
 1987 0cc2 7C81      		ldd r23,Y+4
 1988 0cc4 8C8D      		ldd r24,Y+28
 1989 0cc6 9D8D      		ldd r25,Y+29
 1990 0cc8 6801      		movw r12,r16
 1991 0cca 7D01      		movw r14,r26
 1992 0ccc 8F01      		movw r16,r30
 1993 0cce 0E94 0000 		call write_lprow
 1994 0cd2 892B      		or r24,r25
 1995 0cd4 01F4      		brne .L59
 1996               		.loc 1 151 0 is_stmt 0 discriminator 1
 1997 0cd6 8A89      		ldd r24,Y+18
 1998 0cd8 9B89      		ldd r25,Y+19
 1999 0cda 1816      		cp __zero_reg__,r24
 2000 0cdc 1906      		cpc __zero_reg__,r25
 2001 0cde 04F4      		brge .L59
 152:lp_solve_5.5/lp_wlp.c ****       write_data(userhandle, write_modeldata, "0 %s", get_col_name(lp, 1));
 2002               		.loc 1 152 0 is_stmt 1
 2003 0ce0 8C8D      		ldd r24,Y+28
 2004 0ce2 9D8D      		ldd r25,Y+29
 2005 0ce4 61E0      		ldi r22,lo8(1)
 2006 0ce6 70E0      		ldi r23,0
 2007 0ce8 0E94 0000 		call get_col_name
 2008 0cec 292F      		mov r18,r25
 2009 0cee 2F93      		push r18
 2010 0cf0 8F93      		push r24
 2011 0cf2 80E0      		ldi r24,lo8(.LC24)
 2012 0cf4 90E0      		ldi r25,hi8(.LC24)
 2013 0cf6 892F      		mov r24,r25
 2014 0cf8 8F93      		push r24
 2015 0cfa 80E0      		ldi r24,lo8(.LC24)
 2016 0cfc 90E0      		ldi r25,hi8(.LC24)
 2017 0cfe 8F93      		push r24
 2018 0d00 89A1      		ldd r24,Y+33
 2019 0d02 8F93      		push r24
 2020 0d04 88A1      		ldd r24,Y+32
 2021 0d06 8F93      		push r24
 2022 0d08 8F8D      		ldd r24,Y+31
 2023 0d0a 8F93      		push r24
 2024 0d0c 8E8D      		ldd r24,Y+30
 2025 0d0e 8F93      		push r24
 2026 0d10 0E94 0000 		call write_data
 2027 0d14 8DB7      		in r24,__SP_L__
 2028 0d16 9EB7      		in r25,__SP_H__
 2029 0d18 0896      		adiw r24,8
 2030 0d1a 0FB6      		in __tmp_reg__,__SREG__
 2031 0d1c F894      		cli
 2032 0d1e DEBF      		out __SP_H__,r29
 2033 0d20 0FBE      		out __SREG__,__tmp_reg__
 2034 0d22 CDBF      		out __SP_L__,r28
 2035               	.L59:
 153:lp_solve_5.5/lp_wlp.c **** 
 154:lp_solve_5.5/lp_wlp.c ****     if(lp->orig_upbo[j] == 0)
 2036               		.loc 1 154 0
 2037 0d24 8C8D      		ldd r24,Y+28
 2038 0d26 9D8D      		ldd r25,Y+29
 2039 0d28 8255      		subi r24,82
 2040 0d2a 9D4F      		sbci r25,-3
 2041 0d2c FC01      		movw r30,r24
 2042 0d2e 2081      		ld r18,Z
 2043 0d30 3181      		ldd r19,Z+1
 2044 0d32 8B81      		ldd r24,Y+3
 2045 0d34 9C81      		ldd r25,Y+4
 2046 0d36 880F      		lsl r24
 2047 0d38 991F      		rol r25
 2048 0d3a 880F      		lsl r24
 2049 0d3c 991F      		rol r25
 2050 0d3e 820F      		add r24,r18
 2051 0d40 931F      		adc r25,r19
 2052 0d42 FC01      		movw r30,r24
 2053 0d44 8081      		ld r24,Z
 2054 0d46 9181      		ldd r25,Z+1
 2055 0d48 A281      		ldd r26,Z+2
 2056 0d4a B381      		ldd r27,Z+3
 2057 0d4c 20E0      		ldi r18,0
 2058 0d4e 30E0      		ldi r19,0
 2059 0d50 A901      		movw r20,r18
 2060 0d52 BC01      		movw r22,r24
 2061 0d54 CD01      		movw r24,r26
 2062 0d56 0E94 0000 		call __eqsf2
 2063 0d5a 8823      		tst r24
 2064 0d5c 01F4      		brne .L153
 155:lp_solve_5.5/lp_wlp.c ****       write_data(userhandle, write_modeldata, " =");
 2065               		.loc 1 155 0
 2066 0d5e 80E0      		ldi r24,lo8(.LC25)
 2067 0d60 90E0      		ldi r25,hi8(.LC25)
 2068 0d62 892F      		mov r24,r25
 2069 0d64 8F93      		push r24
 2070 0d66 80E0      		ldi r24,lo8(.LC25)
 2071 0d68 90E0      		ldi r25,hi8(.LC25)
 2072 0d6a 8F93      		push r24
 2073 0d6c 89A1      		ldd r24,Y+33
 2074 0d6e 8F93      		push r24
 2075 0d70 88A1      		ldd r24,Y+32
 2076 0d72 8F93      		push r24
 2077 0d74 8F8D      		ldd r24,Y+31
 2078 0d76 8F93      		push r24
 2079 0d78 8E8D      		ldd r24,Y+30
 2080 0d7a 8F93      		push r24
 2081 0d7c 0E94 0000 		call write_data
 2082 0d80 0F90      		pop __tmp_reg__
 2083 0d82 0F90      		pop __tmp_reg__
 2084 0d84 0F90      		pop __tmp_reg__
 2085 0d86 0F90      		pop __tmp_reg__
 2086 0d88 0F90      		pop __tmp_reg__
 2087 0d8a 0F90      		pop __tmp_reg__
 2088 0d8c 00C0      		rjmp .L62
 2089               	.L153:
 156:lp_solve_5.5/lp_wlp.c ****     else if(is_chsign(lp, j))
 2090               		.loc 1 156 0
 2091 0d8e 2B81      		ldd r18,Y+3
 2092 0d90 3C81      		ldd r19,Y+4
 2093 0d92 8C8D      		ldd r24,Y+28
 2094 0d94 9D8D      		ldd r25,Y+29
 2095 0d96 B901      		movw r22,r18
 2096 0d98 0E94 0000 		call is_chsign
 2097 0d9c 8823      		tst r24
 2098 0d9e 01F0      		breq .L63
 157:lp_solve_5.5/lp_wlp.c ****       write_data(userhandle, write_modeldata, " >=");
 2099               		.loc 1 157 0
 2100 0da0 80E0      		ldi r24,lo8(.LC26)
 2101 0da2 90E0      		ldi r25,hi8(.LC26)
 2102 0da4 892F      		mov r24,r25
 2103 0da6 8F93      		push r24
 2104 0da8 80E0      		ldi r24,lo8(.LC26)
 2105 0daa 90E0      		ldi r25,hi8(.LC26)
 2106 0dac 8F93      		push r24
 2107 0dae 89A1      		ldd r24,Y+33
 2108 0db0 8F93      		push r24
 2109 0db2 88A1      		ldd r24,Y+32
 2110 0db4 8F93      		push r24
 2111 0db6 8F8D      		ldd r24,Y+31
 2112 0db8 8F93      		push r24
 2113 0dba 8E8D      		ldd r24,Y+30
 2114 0dbc 8F93      		push r24
 2115 0dbe 0E94 0000 		call write_data
 2116 0dc2 0F90      		pop __tmp_reg__
 2117 0dc4 0F90      		pop __tmp_reg__
 2118 0dc6 0F90      		pop __tmp_reg__
 2119 0dc8 0F90      		pop __tmp_reg__
 2120 0dca 0F90      		pop __tmp_reg__
 2121 0dcc 0F90      		pop __tmp_reg__
 2122 0dce 00C0      		rjmp .L62
 2123               	.L63:
 158:lp_solve_5.5/lp_wlp.c ****     else
 159:lp_solve_5.5/lp_wlp.c ****       write_data(userhandle, write_modeldata, " <=");
 2124               		.loc 1 159 0
 2125 0dd0 80E0      		ldi r24,lo8(.LC27)
 2126 0dd2 90E0      		ldi r25,hi8(.LC27)
 2127 0dd4 892F      		mov r24,r25
 2128 0dd6 8F93      		push r24
 2129 0dd8 80E0      		ldi r24,lo8(.LC27)
 2130 0dda 90E0      		ldi r25,hi8(.LC27)
 2131 0ddc 8F93      		push r24
 2132 0dde 89A1      		ldd r24,Y+33
 2133 0de0 8F93      		push r24
 2134 0de2 88A1      		ldd r24,Y+32
 2135 0de4 8F93      		push r24
 2136 0de6 8F8D      		ldd r24,Y+31
 2137 0de8 8F93      		push r24
 2138 0dea 8E8D      		ldd r24,Y+30
 2139 0dec 8F93      		push r24
 2140 0dee 0E94 0000 		call write_data
 2141 0df2 0F90      		pop __tmp_reg__
 2142 0df4 0F90      		pop __tmp_reg__
 2143 0df6 0F90      		pop __tmp_reg__
 2144 0df8 0F90      		pop __tmp_reg__
 2145 0dfa 0F90      		pop __tmp_reg__
 2146 0dfc 0F90      		pop __tmp_reg__
 2147               	.L62:
 160:lp_solve_5.5/lp_wlp.c ****     if(fabs(get_rh(lp, j) + lp->infinite) < 1)
 2148               		.loc 1 160 0
 2149 0dfe 2B81      		ldd r18,Y+3
 2150 0e00 3C81      		ldd r19,Y+4
 2151 0e02 8C8D      		ldd r24,Y+28
 2152 0e04 9D8D      		ldd r25,Y+29
 2153 0e06 B901      		movw r22,r18
 2154 0e08 0E94 0000 		call get_rh
 2155 0e0c 7B01      		movw r14,r22
 2156 0e0e 8C01      		movw r16,r24
 2157 0e10 8C8D      		ldd r24,Y+28
 2158 0e12 9D8D      		ldd r25,Y+29
 2159 0e14 865F      		subi r24,-10
 2160 0e16 9C4F      		sbci r25,-4
 2161 0e18 FC01      		movw r30,r24
 2162 0e1a 8081      		ld r24,Z
 2163 0e1c 9181      		ldd r25,Z+1
 2164 0e1e A281      		ldd r26,Z+2
 2165 0e20 B381      		ldd r27,Z+3
 2166 0e22 9C01      		movw r18,r24
 2167 0e24 AD01      		movw r20,r26
 2168 0e26 C801      		movw r24,r16
 2169 0e28 B701      		movw r22,r14
 2170 0e2a 0E94 0000 		call __addsf3
 2171 0e2e DC01      		movw r26,r24
 2172 0e30 CB01      		movw r24,r22
 2173 0e32 BF77      		andi r27,0x7f
 2174 0e34 20E0      		ldi r18,0
 2175 0e36 30E0      		ldi r19,0
 2176 0e38 40E8      		ldi r20,lo8(-128)
 2177 0e3a 5FE3      		ldi r21,lo8(63)
 2178 0e3c BC01      		movw r22,r24
 2179 0e3e CD01      		movw r24,r26
 2180 0e40 0E94 0000 		call __ltsf2
 2181 0e44 8823      		tst r24
 2182 0e46 04F4      		brge .L154
 161:lp_solve_5.5/lp_wlp.c ****       write_data(userhandle, write_modeldata, " -Inf;\n");
 2183               		.loc 1 161 0
 2184 0e48 80E0      		ldi r24,lo8(.LC28)
 2185 0e4a 90E0      		ldi r25,hi8(.LC28)
 2186 0e4c 892F      		mov r24,r25
 2187 0e4e 8F93      		push r24
 2188 0e50 80E0      		ldi r24,lo8(.LC28)
 2189 0e52 90E0      		ldi r25,hi8(.LC28)
 2190 0e54 8F93      		push r24
 2191 0e56 89A1      		ldd r24,Y+33
 2192 0e58 8F93      		push r24
 2193 0e5a 88A1      		ldd r24,Y+32
 2194 0e5c 8F93      		push r24
 2195 0e5e 8F8D      		ldd r24,Y+31
 2196 0e60 8F93      		push r24
 2197 0e62 8E8D      		ldd r24,Y+30
 2198 0e64 8F93      		push r24
 2199 0e66 0E94 0000 		call write_data
 2200 0e6a 0F90      		pop __tmp_reg__
 2201 0e6c 0F90      		pop __tmp_reg__
 2202 0e6e 0F90      		pop __tmp_reg__
 2203 0e70 0F90      		pop __tmp_reg__
 2204 0e72 0F90      		pop __tmp_reg__
 2205 0e74 0F90      		pop __tmp_reg__
 2206 0e76 00C0      		rjmp .L66
 2207               	.L154:
 162:lp_solve_5.5/lp_wlp.c ****     else if(fabs(get_rh(lp, j) - lp->infinite) < 1)
 2208               		.loc 1 162 0
 2209 0e78 2B81      		ldd r18,Y+3
 2210 0e7a 3C81      		ldd r19,Y+4
 2211 0e7c 8C8D      		ldd r24,Y+28
 2212 0e7e 9D8D      		ldd r25,Y+29
 2213 0e80 B901      		movw r22,r18
 2214 0e82 0E94 0000 		call get_rh
 2215 0e86 7B01      		movw r14,r22
 2216 0e88 8C01      		movw r16,r24
 2217 0e8a 8C8D      		ldd r24,Y+28
 2218 0e8c 9D8D      		ldd r25,Y+29
 2219 0e8e 865F      		subi r24,-10
 2220 0e90 9C4F      		sbci r25,-4
 2221 0e92 FC01      		movw r30,r24
 2222 0e94 8081      		ld r24,Z
 2223 0e96 9181      		ldd r25,Z+1
 2224 0e98 A281      		ldd r26,Z+2
 2225 0e9a B381      		ldd r27,Z+3
 2226 0e9c 9C01      		movw r18,r24
 2227 0e9e AD01      		movw r20,r26
 2228 0ea0 C801      		movw r24,r16
 2229 0ea2 B701      		movw r22,r14
 2230 0ea4 0E94 0000 		call __subsf3
 2231 0ea8 DC01      		movw r26,r24
 2232 0eaa CB01      		movw r24,r22
 2233 0eac BF77      		andi r27,0x7f
 2234 0eae 20E0      		ldi r18,0
 2235 0eb0 30E0      		ldi r19,0
 2236 0eb2 40E8      		ldi r20,lo8(-128)
 2237 0eb4 5FE3      		ldi r21,lo8(63)
 2238 0eb6 BC01      		movw r22,r24
 2239 0eb8 CD01      		movw r24,r26
 2240 0eba 0E94 0000 		call __ltsf2
 2241 0ebe 8823      		tst r24
 2242 0ec0 04F4      		brge .L155
 163:lp_solve_5.5/lp_wlp.c ****       write_data(userhandle, write_modeldata, " +Inf;\n");
 2243               		.loc 1 163 0
 2244 0ec2 80E0      		ldi r24,lo8(.LC29)
 2245 0ec4 90E0      		ldi r25,hi8(.LC29)
 2246 0ec6 892F      		mov r24,r25
 2247 0ec8 8F93      		push r24
 2248 0eca 80E0      		ldi r24,lo8(.LC29)
 2249 0ecc 90E0      		ldi r25,hi8(.LC29)
 2250 0ece 8F93      		push r24
 2251 0ed0 89A1      		ldd r24,Y+33
 2252 0ed2 8F93      		push r24
 2253 0ed4 88A1      		ldd r24,Y+32
 2254 0ed6 8F93      		push r24
 2255 0ed8 8F8D      		ldd r24,Y+31
 2256 0eda 8F93      		push r24
 2257 0edc 8E8D      		ldd r24,Y+30
 2258 0ede 8F93      		push r24
 2259 0ee0 0E94 0000 		call write_data
 2260 0ee4 0F90      		pop __tmp_reg__
 2261 0ee6 0F90      		pop __tmp_reg__
 2262 0ee8 0F90      		pop __tmp_reg__
 2263 0eea 0F90      		pop __tmp_reg__
 2264 0eec 0F90      		pop __tmp_reg__
 2265 0eee 0F90      		pop __tmp_reg__
 2266 0ef0 00C0      		rjmp .L66
 2267               	.L155:
 164:lp_solve_5.5/lp_wlp.c ****     else
 165:lp_solve_5.5/lp_wlp.c ****       write_data(userhandle, write_modeldata, " %.12g;\n", get_rh(lp, j));
 2268               		.loc 1 165 0
 2269 0ef2 2B81      		ldd r18,Y+3
 2270 0ef4 3C81      		ldd r19,Y+4
 2271 0ef6 8C8D      		ldd r24,Y+28
 2272 0ef8 9D8D      		ldd r25,Y+29
 2273 0efa B901      		movw r22,r18
 2274 0efc 0E94 0000 		call get_rh
 2275 0f00 DC01      		movw r26,r24
 2276 0f02 CB01      		movw r24,r22
 2277 0f04 2B2F      		mov r18,r27
 2278 0f06 2F93      		push r18
 2279 0f08 2A2F      		mov r18,r26
 2280 0f0a 2F93      		push r18
 2281 0f0c 292F      		mov r18,r25
 2282 0f0e 2F93      		push r18
 2283 0f10 8F93      		push r24
 2284 0f12 80E0      		ldi r24,lo8(.LC30)
 2285 0f14 90E0      		ldi r25,hi8(.LC30)
 2286 0f16 892F      		mov r24,r25
 2287 0f18 8F93      		push r24
 2288 0f1a 80E0      		ldi r24,lo8(.LC30)
 2289 0f1c 90E0      		ldi r25,hi8(.LC30)
 2290 0f1e 8F93      		push r24
 2291 0f20 89A1      		ldd r24,Y+33
 2292 0f22 8F93      		push r24
 2293 0f24 88A1      		ldd r24,Y+32
 2294 0f26 8F93      		push r24
 2295 0f28 8F8D      		ldd r24,Y+31
 2296 0f2a 8F93      		push r24
 2297 0f2c 8E8D      		ldd r24,Y+30
 2298 0f2e 8F93      		push r24
 2299 0f30 0E94 0000 		call write_data
 2300 0f34 2DB7      		in r18,__SP_L__
 2301 0f36 3EB7      		in r19,__SP_H__
 2302 0f38 265F      		subi r18,-10
 2303 0f3a 3F4F      		sbci r19,-1
 2304 0f3c 0FB6      		in __tmp_reg__,__SREG__
 2305 0f3e F894      		cli
 2306 0f40 DEBF      		out __SP_H__,r29
 2307 0f42 0FBE      		out __SREG__,__tmp_reg__
 2308 0f44 CDBF      		out __SP_L__,r28
 2309               	.L66:
 129:lp_solve_5.5/lp_wlp.c ****     if(((lp->names_used) && (lp->row_name[j] != NULL)) || (write_lprow(lp, j, userhandle, NULL, max
 2310               		.loc 1 129 0 discriminator 2
 2311 0f46 8B81      		ldd r24,Y+3
 2312 0f48 9C81      		ldd r25,Y+4
 2313 0f4a 0196      		adiw r24,1
 2314 0f4c 9C83      		std Y+4,r25
 2315 0f4e 8B83      		std Y+3,r24
 2316               	.L30:
 129:lp_solve_5.5/lp_wlp.c ****     if(((lp->names_used) && (lp->row_name[j] != NULL)) || (write_lprow(lp, j, userhandle, NULL, max
 2317               		.loc 1 129 0 is_stmt 0 discriminator 1
 2318 0f50 2B81      		ldd r18,Y+3
 2319 0f52 3C81      		ldd r19,Y+4
 2320 0f54 8889      		ldd r24,Y+16
 2321 0f56 9989      		ldd r25,Y+17
 2322 0f58 8217      		cp r24,r18
 2323 0f5a 9307      		cpc r25,r19
 2324 0f5c 04F0      		brlt .+2
 2325 0f5e 00C0      		rjmp .L69
 166:lp_solve_5.5/lp_wlp.c **** 
 167:lp_solve_5.5/lp_wlp.c **** #ifdef SingleBoundedRowInLP
 168:lp_solve_5.5/lp_wlp.c ****     /* Write the ranged part of the constraint, if specified */
 169:lp_solve_5.5/lp_wlp.c ****     if ((lp->orig_upbo[j]) && (lp->orig_upbo[j] < lp->infinite)) {
 170:lp_solve_5.5/lp_wlp.c ****       if(((lp->names_used) && (lp->row_name[j] != NULL)) || (write_lprow(lp, j, userhandle, NULL, m
 171:lp_solve_5.5/lp_wlp.c ****         ptr = get_row_name(lp, j);
 172:lp_solve_5.5/lp_wlp.c ****       else
 173:lp_solve_5.5/lp_wlp.c ****         ptr = NULL;
 174:lp_solve_5.5/lp_wlp.c ****       if((ptr != NULL) && (*ptr))
 175:lp_solve_5.5/lp_wlp.c ****         write_data(userhandle, write_modeldata, "%s: ", ptr);
 176:lp_solve_5.5/lp_wlp.c ****       if((!write_lprow(lp, j, userhandle, write_modeldata, maxlen, idx, val)) && (get_Ncolumns(lp) 
 177:lp_solve_5.5/lp_wlp.c ****         write_data(userhandle, write_modeldata, "0 %s", get_col_name(lp, 1));
 178:lp_solve_5.5/lp_wlp.c ****       write_data(userhandle, write_modeldata, " %s %g;\n",
 179:lp_solve_5.5/lp_wlp.c ****                      (is_chsign(lp, j)) ? "<=" : ">=",
 180:lp_solve_5.5/lp_wlp.c ****                      (lp->orig_upbo[j]-lp->orig_rhs[j]) * (is_chsign(lp, j) ? 1.0 : -1.0) / (lp->sc
 181:lp_solve_5.5/lp_wlp.c ****     }
 182:lp_solve_5.5/lp_wlp.c **** #endif
 183:lp_solve_5.5/lp_wlp.c ****   }
 184:lp_solve_5.5/lp_wlp.c **** 
 185:lp_solve_5.5/lp_wlp.c ****   /* Write bounds on variables */
 186:lp_solve_5.5/lp_wlp.c ****   ok = FALSE;
 2326               		.loc 1 186 0 is_stmt 1
 2327 0f60 1986      		std Y+9,__zero_reg__
 187:lp_solve_5.5/lp_wlp.c ****   for(i = nrows + 1; i <= lp->sum; i++)
 2328               		.loc 1 187 0
 2329 0f62 8889      		ldd r24,Y+16
 2330 0f64 9989      		ldd r25,Y+17
 2331 0f66 0196      		adiw r24,1
 2332 0f68 9A83      		std Y+2,r25
 2333 0f6a 8983      		std Y+1,r24
 2334 0f6c 00C0      		rjmp .L70
 2335               	.L94:
 188:lp_solve_5.5/lp_wlp.c ****     if(!is_splitvar(lp, i - nrows)) {
 2336               		.loc 1 188 0
 2337 0f6e 2981      		ldd r18,Y+1
 2338 0f70 3A81      		ldd r19,Y+2
 2339 0f72 8889      		ldd r24,Y+16
 2340 0f74 9989      		ldd r25,Y+17
 2341 0f76 281B      		sub r18,r24
 2342 0f78 390B      		sbc r19,r25
 2343 0f7a 8C8D      		ldd r24,Y+28
 2344 0f7c 9D8D      		ldd r25,Y+29
 2345 0f7e B901      		movw r22,r18
 2346 0f80 0E94 0000 		call is_splitvar
 2347 0f84 8823      		tst r24
 2348 0f86 01F0      		breq .+2
 2349 0f88 00C0      		rjmp .L71
 189:lp_solve_5.5/lp_wlp.c ****       if(lp->orig_lowbo[i] == lp->orig_upbo[i]) {
 2350               		.loc 1 189 0
 2351 0f8a 8C8D      		ldd r24,Y+28
 2352 0f8c 9D8D      		ldd r25,Y+29
 2353 0f8e 8E54      		subi r24,78
 2354 0f90 9D4F      		sbci r25,-3
 2355 0f92 FC01      		movw r30,r24
 2356 0f94 2081      		ld r18,Z
 2357 0f96 3181      		ldd r19,Z+1
 2358 0f98 8981      		ldd r24,Y+1
 2359 0f9a 9A81      		ldd r25,Y+2
 2360 0f9c 880F      		lsl r24
 2361 0f9e 991F      		rol r25
 2362 0fa0 880F      		lsl r24
 2363 0fa2 991F      		rol r25
 2364 0fa4 820F      		add r24,r18
 2365 0fa6 931F      		adc r25,r19
 2366 0fa8 FC01      		movw r30,r24
 2367 0faa 8081      		ld r24,Z
 2368 0fac 9181      		ldd r25,Z+1
 2369 0fae A281      		ldd r26,Z+2
 2370 0fb0 B381      		ldd r27,Z+3
 2371 0fb2 2C8D      		ldd r18,Y+28
 2372 0fb4 3D8D      		ldd r19,Y+29
 2373 0fb6 2255      		subi r18,82
 2374 0fb8 3D4F      		sbci r19,-3
 2375 0fba F901      		movw r30,r18
 2376 0fbc 4081      		ld r20,Z
 2377 0fbe 5181      		ldd r21,Z+1
 2378 0fc0 2981      		ldd r18,Y+1
 2379 0fc2 3A81      		ldd r19,Y+2
 2380 0fc4 220F      		lsl r18
 2381 0fc6 331F      		rol r19
 2382 0fc8 220F      		lsl r18
 2383 0fca 331F      		rol r19
 2384 0fcc 240F      		add r18,r20
 2385 0fce 351F      		adc r19,r21
 2386 0fd0 F901      		movw r30,r18
 2387 0fd2 2081      		ld r18,Z
 2388 0fd4 3181      		ldd r19,Z+1
 2389 0fd6 4281      		ldd r20,Z+2
 2390 0fd8 5381      		ldd r21,Z+3
 2391 0fda BC01      		movw r22,r24
 2392 0fdc CD01      		movw r24,r26
 2393 0fde 0E94 0000 		call __eqsf2
 2394 0fe2 8823      		tst r24
 2395 0fe4 01F0      		breq .+2
 2396 0fe6 00C0      		rjmp .L156
 190:lp_solve_5.5/lp_wlp.c ****         if(!ok) {
 2397               		.loc 1 190 0
 2398 0fe8 8985      		ldd r24,Y+9
 2399 0fea 8823      		tst r24
 2400 0fec 01F4      		brne .L74
 191:lp_solve_5.5/lp_wlp.c ****           write_lpcomment(userhandle, write_modeldata, "Variable bounds", TRUE);
 2401               		.loc 1 191 0
 2402 0fee 68A1      		ldd r22,Y+32
 2403 0ff0 79A1      		ldd r23,Y+33
 2404 0ff2 8E8D      		ldd r24,Y+30
 2405 0ff4 9F8D      		ldd r25,Y+31
 2406 0ff6 21E0      		ldi r18,lo8(1)
 2407 0ff8 40E0      		ldi r20,lo8(.LC31)
 2408 0ffa 50E0      		ldi r21,hi8(.LC31)
 2409 0ffc 0E94 0000 		call write_lpcomment
 192:lp_solve_5.5/lp_wlp.c ****           ok = TRUE;
 2410               		.loc 1 192 0
 2411 1000 81E0      		ldi r24,lo8(1)
 2412 1002 8987      		std Y+9,r24
 2413               	.L74:
 193:lp_solve_5.5/lp_wlp.c ****         }
 194:lp_solve_5.5/lp_wlp.c ****         write_data(userhandle, write_modeldata, "%s = %.12g;\n", get_col_name(lp, i - nrows), get_u
 2414               		.loc 1 194 0
 2415 1004 2981      		ldd r18,Y+1
 2416 1006 3A81      		ldd r19,Y+2
 2417 1008 8889      		ldd r24,Y+16
 2418 100a 9989      		ldd r25,Y+17
 2419 100c 281B      		sub r18,r24
 2420 100e 390B      		sbc r19,r25
 2421 1010 8C8D      		ldd r24,Y+28
 2422 1012 9D8D      		ldd r25,Y+29
 2423 1014 B901      		movw r22,r18
 2424 1016 0E94 0000 		call get_upbo
 2425 101a 6B01      		movw r12,r22
 2426 101c 7C01      		movw r14,r24
 2427 101e 2981      		ldd r18,Y+1
 2428 1020 3A81      		ldd r19,Y+2
 2429 1022 8889      		ldd r24,Y+16
 2430 1024 9989      		ldd r25,Y+17
 2431 1026 281B      		sub r18,r24
 2432 1028 390B      		sbc r19,r25
 2433 102a 8C8D      		ldd r24,Y+28
 2434 102c 9D8D      		ldd r25,Y+29
 2435 102e B901      		movw r22,r18
 2436 1030 0E94 0000 		call get_col_name
 2437 1034 2F2D      		mov r18,r15
 2438 1036 2F93      		push r18
 2439 1038 2E2D      		mov r18,r14
 2440 103a 2F93      		push r18
 2441 103c 2D2D      		mov r18,r13
 2442 103e 2F93      		push r18
 2443 1040 2C2D      		mov r18,r12
 2444 1042 2F93      		push r18
 2445 1044 292F      		mov r18,r25
 2446 1046 2F93      		push r18
 2447 1048 8F93      		push r24
 2448 104a 80E0      		ldi r24,lo8(.LC32)
 2449 104c 90E0      		ldi r25,hi8(.LC32)
 2450 104e 892F      		mov r24,r25
 2451 1050 8F93      		push r24
 2452 1052 80E0      		ldi r24,lo8(.LC32)
 2453 1054 90E0      		ldi r25,hi8(.LC32)
 2454 1056 8F93      		push r24
 2455 1058 89A1      		ldd r24,Y+33
 2456 105a 8F93      		push r24
 2457 105c 88A1      		ldd r24,Y+32
 2458 105e 8F93      		push r24
 2459 1060 8F8D      		ldd r24,Y+31
 2460 1062 8F93      		push r24
 2461 1064 8E8D      		ldd r24,Y+30
 2462 1066 8F93      		push r24
 2463 1068 0E94 0000 		call write_data
 2464 106c 2DB7      		in r18,__SP_L__
 2465 106e 3EB7      		in r19,__SP_H__
 2466 1070 245F      		subi r18,-12
 2467 1072 3F4F      		sbci r19,-1
 2468 1074 0FB6      		in __tmp_reg__,__SREG__
 2469 1076 F894      		cli
 2470 1078 DEBF      		out __SP_H__,r29
 2471 107a 0FBE      		out __SREG__,__tmp_reg__
 2472 107c CDBF      		out __SP_L__,r28
 2473 107e 00C0      		rjmp .L71
 2474               	.L156:
 195:lp_solve_5.5/lp_wlp.c ****       }
 196:lp_solve_5.5/lp_wlp.c ****       else {
 197:lp_solve_5.5/lp_wlp.c **** #ifndef SingleBoundedRowInLP
 198:lp_solve_5.5/lp_wlp.c ****         if((lp->orig_lowbo[i] != 0) && (lp->orig_upbo[i] < lp->infinite)) {
 2475               		.loc 1 198 0
 2476 1080 8C8D      		ldd r24,Y+28
 2477 1082 9D8D      		ldd r25,Y+29
 2478 1084 8E54      		subi r24,78
 2479 1086 9D4F      		sbci r25,-3
 2480 1088 FC01      		movw r30,r24
 2481 108a 2081      		ld r18,Z
 2482 108c 3181      		ldd r19,Z+1
 2483 108e 8981      		ldd r24,Y+1
 2484 1090 9A81      		ldd r25,Y+2
 2485 1092 880F      		lsl r24
 2486 1094 991F      		rol r25
 2487 1096 880F      		lsl r24
 2488 1098 991F      		rol r25
 2489 109a 820F      		add r24,r18
 2490 109c 931F      		adc r25,r19
 2491 109e FC01      		movw r30,r24
 2492 10a0 8081      		ld r24,Z
 2493 10a2 9181      		ldd r25,Z+1
 2494 10a4 A281      		ldd r26,Z+2
 2495 10a6 B381      		ldd r27,Z+3
 2496 10a8 20E0      		ldi r18,0
 2497 10aa 30E0      		ldi r19,0
 2498 10ac A901      		movw r20,r18
 2499 10ae BC01      		movw r22,r24
 2500 10b0 CD01      		movw r24,r26
 2501 10b2 0E94 0000 		call __nesf2
 2502 10b6 8823      		tst r24
 2503 10b8 01F4      		brne .+2
 2504 10ba 00C0      		rjmp .L75
 2505               		.loc 1 198 0 is_stmt 0 discriminator 1
 2506 10bc 8C8D      		ldd r24,Y+28
 2507 10be 9D8D      		ldd r25,Y+29
 2508 10c0 8255      		subi r24,82
 2509 10c2 9D4F      		sbci r25,-3
 2510 10c4 FC01      		movw r30,r24
 2511 10c6 2081      		ld r18,Z
 2512 10c8 3181      		ldd r19,Z+1
 2513 10ca 8981      		ldd r24,Y+1
 2514 10cc 9A81      		ldd r25,Y+2
 2515 10ce 880F      		lsl r24
 2516 10d0 991F      		rol r25
 2517 10d2 880F      		lsl r24
 2518 10d4 991F      		rol r25
 2519 10d6 820F      		add r24,r18
 2520 10d8 931F      		adc r25,r19
 2521 10da FC01      		movw r30,r24
 2522 10dc 8081      		ld r24,Z
 2523 10de 9181      		ldd r25,Z+1
 2524 10e0 A281      		ldd r26,Z+2
 2525 10e2 B381      		ldd r27,Z+3
 2526 10e4 2C8D      		ldd r18,Y+28
 2527 10e6 3D8D      		ldd r19,Y+29
 2528 10e8 265F      		subi r18,-10
 2529 10ea 3C4F      		sbci r19,-4
 2530 10ec F901      		movw r30,r18
 2531 10ee 2081      		ld r18,Z
 2532 10f0 3181      		ldd r19,Z+1
 2533 10f2 4281      		ldd r20,Z+2
 2534 10f4 5381      		ldd r21,Z+3
 2535 10f6 BC01      		movw r22,r24
 2536 10f8 CD01      		movw r24,r26
 2537 10fa 0E94 0000 		call __ltsf2
 2538 10fe 8823      		tst r24
 2539 1100 04F0      		brlt .+2
 2540 1102 00C0      		rjmp .L75
 199:lp_solve_5.5/lp_wlp.c ****           if(!ok) {
 2541               		.loc 1 199 0 is_stmt 1
 2542 1104 8985      		ldd r24,Y+9
 2543 1106 8823      		tst r24
 2544 1108 01F4      		brne .L78
 200:lp_solve_5.5/lp_wlp.c ****             write_lpcomment(userhandle, write_modeldata, "Variable bounds", TRUE);
 2545               		.loc 1 200 0
 2546 110a 68A1      		ldd r22,Y+32
 2547 110c 79A1      		ldd r23,Y+33
 2548 110e 8E8D      		ldd r24,Y+30
 2549 1110 9F8D      		ldd r25,Y+31
 2550 1112 21E0      		ldi r18,lo8(1)
 2551 1114 40E0      		ldi r20,lo8(.LC31)
 2552 1116 50E0      		ldi r21,hi8(.LC31)
 2553 1118 0E94 0000 		call write_lpcomment
 201:lp_solve_5.5/lp_wlp.c ****             ok = TRUE;
 2554               		.loc 1 201 0
 2555 111c 81E0      		ldi r24,lo8(1)
 2556 111e 8987      		std Y+9,r24
 2557               	.L78:
 202:lp_solve_5.5/lp_wlp.c ****           }
 203:lp_solve_5.5/lp_wlp.c ****           if(lp->orig_lowbo[i] == -lp->infinite)
 2558               		.loc 1 203 0
 2559 1120 8C8D      		ldd r24,Y+28
 2560 1122 9D8D      		ldd r25,Y+29
 2561 1124 8E54      		subi r24,78
 2562 1126 9D4F      		sbci r25,-3
 2563 1128 FC01      		movw r30,r24
 2564 112a 2081      		ld r18,Z
 2565 112c 3181      		ldd r19,Z+1
 2566 112e 8981      		ldd r24,Y+1
 2567 1130 9A81      		ldd r25,Y+2
 2568 1132 880F      		lsl r24
 2569 1134 991F      		rol r25
 2570 1136 880F      		lsl r24
 2571 1138 991F      		rol r25
 2572 113a 820F      		add r24,r18
 2573 113c 931F      		adc r25,r19
 2574 113e FC01      		movw r30,r24
 2575 1140 E080      		ld r14,Z
 2576 1142 F180      		ldd r15,Z+1
 2577 1144 0281      		ldd r16,Z+2
 2578 1146 1381      		ldd r17,Z+3
 2579 1148 8C8D      		ldd r24,Y+28
 2580 114a 9D8D      		ldd r25,Y+29
 2581 114c 865F      		subi r24,-10
 2582 114e 9C4F      		sbci r25,-4
 2583 1150 FC01      		movw r30,r24
 2584 1152 8081      		ld r24,Z
 2585 1154 9181      		ldd r25,Z+1
 2586 1156 A281      		ldd r26,Z+2
 2587 1158 B381      		ldd r27,Z+3
 2588 115a B058      		subi r27,0x80
 2589 115c 9C01      		movw r18,r24
 2590 115e AD01      		movw r20,r26
 2591 1160 C801      		movw r24,r16
 2592 1162 B701      		movw r22,r14
 2593 1164 0E94 0000 		call __eqsf2
 2594 1168 8823      		tst r24
 2595 116a 01F4      		brne .L157
 204:lp_solve_5.5/lp_wlp.c ****             write_data(userhandle, write_modeldata, "-Inf");
 2596               		.loc 1 204 0
 2597 116c 80E0      		ldi r24,lo8(.LC33)
 2598 116e 90E0      		ldi r25,hi8(.LC33)
 2599 1170 892F      		mov r24,r25
 2600 1172 8F93      		push r24
 2601 1174 80E0      		ldi r24,lo8(.LC33)
 2602 1176 90E0      		ldi r25,hi8(.LC33)
 2603 1178 8F93      		push r24
 2604 117a 89A1      		ldd r24,Y+33
 2605 117c 8F93      		push r24
 2606 117e 88A1      		ldd r24,Y+32
 2607 1180 8F93      		push r24
 2608 1182 8F8D      		ldd r24,Y+31
 2609 1184 8F93      		push r24
 2610 1186 8E8D      		ldd r24,Y+30
 2611 1188 8F93      		push r24
 2612 118a 0E94 0000 		call write_data
 2613 118e 0F90      		pop __tmp_reg__
 2614 1190 0F90      		pop __tmp_reg__
 2615 1192 0F90      		pop __tmp_reg__
 2616 1194 0F90      		pop __tmp_reg__
 2617 1196 0F90      		pop __tmp_reg__
 2618 1198 0F90      		pop __tmp_reg__
 2619 119a 00C0      		rjmp .L81
 2620               	.L157:
 205:lp_solve_5.5/lp_wlp.c ****           else
 206:lp_solve_5.5/lp_wlp.c ****             write_data(userhandle, write_modeldata, "%.12g", get_lowbo(lp, i - nrows));
 2621               		.loc 1 206 0
 2622 119c 2981      		ldd r18,Y+1
 2623 119e 3A81      		ldd r19,Y+2
 2624 11a0 8889      		ldd r24,Y+16
 2625 11a2 9989      		ldd r25,Y+17
 2626 11a4 281B      		sub r18,r24
 2627 11a6 390B      		sbc r19,r25
 2628 11a8 8C8D      		ldd r24,Y+28
 2629 11aa 9D8D      		ldd r25,Y+29
 2630 11ac B901      		movw r22,r18
 2631 11ae 0E94 0000 		call get_lowbo
 2632 11b2 DC01      		movw r26,r24
 2633 11b4 CB01      		movw r24,r22
 2634 11b6 2B2F      		mov r18,r27
 2635 11b8 2F93      		push r18
 2636 11ba 2A2F      		mov r18,r26
 2637 11bc 2F93      		push r18
 2638 11be 292F      		mov r18,r25
 2639 11c0 2F93      		push r18
 2640 11c2 8F93      		push r24
 2641 11c4 80E0      		ldi r24,lo8(.LC34)
 2642 11c6 90E0      		ldi r25,hi8(.LC34)
 2643 11c8 892F      		mov r24,r25
 2644 11ca 8F93      		push r24
 2645 11cc 80E0      		ldi r24,lo8(.LC34)
 2646 11ce 90E0      		ldi r25,hi8(.LC34)
 2647 11d0 8F93      		push r24
 2648 11d2 89A1      		ldd r24,Y+33
 2649 11d4 8F93      		push r24
 2650 11d6 88A1      		ldd r24,Y+32
 2651 11d8 8F93      		push r24
 2652 11da 8F8D      		ldd r24,Y+31
 2653 11dc 8F93      		push r24
 2654 11de 8E8D      		ldd r24,Y+30
 2655 11e0 8F93      		push r24
 2656 11e2 0E94 0000 		call write_data
 2657 11e6 2DB7      		in r18,__SP_L__
 2658 11e8 3EB7      		in r19,__SP_H__
 2659 11ea 265F      		subi r18,-10
 2660 11ec 3F4F      		sbci r19,-1
 2661 11ee 0FB6      		in __tmp_reg__,__SREG__
 2662 11f0 F894      		cli
 2663 11f2 DEBF      		out __SP_H__,r29
 2664 11f4 0FBE      		out __SREG__,__tmp_reg__
 2665 11f6 CDBF      		out __SP_L__,r28
 2666               	.L81:
 207:lp_solve_5.5/lp_wlp.c ****           write_data(userhandle, write_modeldata, " <= %s <= ", get_col_name(lp, i - nrows));
 2667               		.loc 1 207 0
 2668 11f8 2981      		ldd r18,Y+1
 2669 11fa 3A81      		ldd r19,Y+2
 2670 11fc 8889      		ldd r24,Y+16
 2671 11fe 9989      		ldd r25,Y+17
 2672 1200 281B      		sub r18,r24
 2673 1202 390B      		sbc r19,r25
 2674 1204 8C8D      		ldd r24,Y+28
 2675 1206 9D8D      		ldd r25,Y+29
 2676 1208 B901      		movw r22,r18
 2677 120a 0E94 0000 		call get_col_name
 2678 120e 292F      		mov r18,r25
 2679 1210 2F93      		push r18
 2680 1212 8F93      		push r24
 2681 1214 80E0      		ldi r24,lo8(.LC35)
 2682 1216 90E0      		ldi r25,hi8(.LC35)
 2683 1218 892F      		mov r24,r25
 2684 121a 8F93      		push r24
 2685 121c 80E0      		ldi r24,lo8(.LC35)
 2686 121e 90E0      		ldi r25,hi8(.LC35)
 2687 1220 8F93      		push r24
 2688 1222 89A1      		ldd r24,Y+33
 2689 1224 8F93      		push r24
 2690 1226 88A1      		ldd r24,Y+32
 2691 1228 8F93      		push r24
 2692 122a 8F8D      		ldd r24,Y+31
 2693 122c 8F93      		push r24
 2694 122e 8E8D      		ldd r24,Y+30
 2695 1230 8F93      		push r24
 2696 1232 0E94 0000 		call write_data
 2697 1236 8DB7      		in r24,__SP_L__
 2698 1238 9EB7      		in r25,__SP_H__
 2699 123a 0896      		adiw r24,8
 2700 123c 0FB6      		in __tmp_reg__,__SREG__
 2701 123e F894      		cli
 2702 1240 DEBF      		out __SP_H__,r29
 2703 1242 0FBE      		out __SREG__,__tmp_reg__
 2704 1244 CDBF      		out __SP_L__,r28
 208:lp_solve_5.5/lp_wlp.c ****           if(lp->orig_lowbo[i] == lp->infinite)
 2705               		.loc 1 208 0
 2706 1246 8C8D      		ldd r24,Y+28
 2707 1248 9D8D      		ldd r25,Y+29
 2708 124a 8E54      		subi r24,78
 2709 124c 9D4F      		sbci r25,-3
 2710 124e FC01      		movw r30,r24
 2711 1250 2081      		ld r18,Z
 2712 1252 3181      		ldd r19,Z+1
 2713 1254 8981      		ldd r24,Y+1
 2714 1256 9A81      		ldd r25,Y+2
 2715 1258 880F      		lsl r24
 2716 125a 991F      		rol r25
 2717 125c 880F      		lsl r24
 2718 125e 991F      		rol r25
 2719 1260 820F      		add r24,r18
 2720 1262 931F      		adc r25,r19
 2721 1264 FC01      		movw r30,r24
 2722 1266 8081      		ld r24,Z
 2723 1268 9181      		ldd r25,Z+1
 2724 126a A281      		ldd r26,Z+2
 2725 126c B381      		ldd r27,Z+3
 2726 126e 2C8D      		ldd r18,Y+28
 2727 1270 3D8D      		ldd r19,Y+29
 2728 1272 265F      		subi r18,-10
 2729 1274 3C4F      		sbci r19,-4
 2730 1276 F901      		movw r30,r18
 2731 1278 2081      		ld r18,Z
 2732 127a 3181      		ldd r19,Z+1
 2733 127c 4281      		ldd r20,Z+2
 2734 127e 5381      		ldd r21,Z+3
 2735 1280 BC01      		movw r22,r24
 2736 1282 CD01      		movw r24,r26
 2737 1284 0E94 0000 		call __eqsf2
 2738 1288 8823      		tst r24
 2739 128a 01F4      		brne .L158
 209:lp_solve_5.5/lp_wlp.c ****             write_data(userhandle, write_modeldata, "+Inf");
 2740               		.loc 1 209 0
 2741 128c 80E0      		ldi r24,lo8(.LC36)
 2742 128e 90E0      		ldi r25,hi8(.LC36)
 2743 1290 892F      		mov r24,r25
 2744 1292 8F93      		push r24
 2745 1294 80E0      		ldi r24,lo8(.LC36)
 2746 1296 90E0      		ldi r25,hi8(.LC36)
 2747 1298 8F93      		push r24
 2748 129a 89A1      		ldd r24,Y+33
 2749 129c 8F93      		push r24
 2750 129e 88A1      		ldd r24,Y+32
 2751 12a0 8F93      		push r24
 2752 12a2 8F8D      		ldd r24,Y+31
 2753 12a4 8F93      		push r24
 2754 12a6 8E8D      		ldd r24,Y+30
 2755 12a8 8F93      		push r24
 2756 12aa 0E94 0000 		call write_data
 2757 12ae 0F90      		pop __tmp_reg__
 2758 12b0 0F90      		pop __tmp_reg__
 2759 12b2 0F90      		pop __tmp_reg__
 2760 12b4 0F90      		pop __tmp_reg__
 2761 12b6 0F90      		pop __tmp_reg__
 2762 12b8 0F90      		pop __tmp_reg__
 2763 12ba 00C0      		rjmp .L84
 2764               	.L158:
 210:lp_solve_5.5/lp_wlp.c ****           else
 211:lp_solve_5.5/lp_wlp.c ****             write_data(userhandle, write_modeldata, "%.12g", get_upbo(lp, i - nrows));
 2765               		.loc 1 211 0
 2766 12bc 2981      		ldd r18,Y+1
 2767 12be 3A81      		ldd r19,Y+2
 2768 12c0 8889      		ldd r24,Y+16
 2769 12c2 9989      		ldd r25,Y+17
 2770 12c4 281B      		sub r18,r24
 2771 12c6 390B      		sbc r19,r25
 2772 12c8 8C8D      		ldd r24,Y+28
 2773 12ca 9D8D      		ldd r25,Y+29
 2774 12cc B901      		movw r22,r18
 2775 12ce 0E94 0000 		call get_upbo
 2776 12d2 DC01      		movw r26,r24
 2777 12d4 CB01      		movw r24,r22
 2778 12d6 2B2F      		mov r18,r27
 2779 12d8 2F93      		push r18
 2780 12da 2A2F      		mov r18,r26
 2781 12dc 2F93      		push r18
 2782 12de 292F      		mov r18,r25
 2783 12e0 2F93      		push r18
 2784 12e2 8F93      		push r24
 2785 12e4 80E0      		ldi r24,lo8(.LC34)
 2786 12e6 90E0      		ldi r25,hi8(.LC34)
 2787 12e8 892F      		mov r24,r25
 2788 12ea 8F93      		push r24
 2789 12ec 80E0      		ldi r24,lo8(.LC34)
 2790 12ee 90E0      		ldi r25,hi8(.LC34)
 2791 12f0 8F93      		push r24
 2792 12f2 89A1      		ldd r24,Y+33
 2793 12f4 8F93      		push r24
 2794 12f6 88A1      		ldd r24,Y+32
 2795 12f8 8F93      		push r24
 2796 12fa 8F8D      		ldd r24,Y+31
 2797 12fc 8F93      		push r24
 2798 12fe 8E8D      		ldd r24,Y+30
 2799 1300 8F93      		push r24
 2800 1302 0E94 0000 		call write_data
 2801 1306 2DB7      		in r18,__SP_L__
 2802 1308 3EB7      		in r19,__SP_H__
 2803 130a 265F      		subi r18,-10
 2804 130c 3F4F      		sbci r19,-1
 2805 130e 0FB6      		in __tmp_reg__,__SREG__
 2806 1310 F894      		cli
 2807 1312 DEBF      		out __SP_H__,r29
 2808 1314 0FBE      		out __SREG__,__tmp_reg__
 2809 1316 CDBF      		out __SP_L__,r28
 2810               	.L84:
 212:lp_solve_5.5/lp_wlp.c ****           write_data(userhandle, write_modeldata, ";\n");
 2811               		.loc 1 212 0
 2812 1318 80E0      		ldi r24,lo8(.LC16)
 2813 131a 90E0      		ldi r25,hi8(.LC16)
 2814 131c 892F      		mov r24,r25
 2815 131e 8F93      		push r24
 2816 1320 80E0      		ldi r24,lo8(.LC16)
 2817 1322 90E0      		ldi r25,hi8(.LC16)
 2818 1324 8F93      		push r24
 2819 1326 89A1      		ldd r24,Y+33
 2820 1328 8F93      		push r24
 2821 132a 88A1      		ldd r24,Y+32
 2822 132c 8F93      		push r24
 2823 132e 8F8D      		ldd r24,Y+31
 2824 1330 8F93      		push r24
 2825 1332 8E8D      		ldd r24,Y+30
 2826 1334 8F93      		push r24
 2827 1336 0E94 0000 		call write_data
 2828 133a 0F90      		pop __tmp_reg__
 2829 133c 0F90      		pop __tmp_reg__
 2830 133e 0F90      		pop __tmp_reg__
 2831 1340 0F90      		pop __tmp_reg__
 2832 1342 0F90      		pop __tmp_reg__
 2833 1344 0F90      		pop __tmp_reg__
 2834 1346 00C0      		rjmp .L71
 2835               	.L75:
 213:lp_solve_5.5/lp_wlp.c ****         }
 214:lp_solve_5.5/lp_wlp.c ****         else
 215:lp_solve_5.5/lp_wlp.c **** #endif
 216:lp_solve_5.5/lp_wlp.c ****         {
 217:lp_solve_5.5/lp_wlp.c ****           if(lp->orig_lowbo[i] != 0) {
 2836               		.loc 1 217 0
 2837 1348 8C8D      		ldd r24,Y+28
 2838 134a 9D8D      		ldd r25,Y+29
 2839 134c 8E54      		subi r24,78
 2840 134e 9D4F      		sbci r25,-3
 2841 1350 FC01      		movw r30,r24
 2842 1352 2081      		ld r18,Z
 2843 1354 3181      		ldd r19,Z+1
 2844 1356 8981      		ldd r24,Y+1
 2845 1358 9A81      		ldd r25,Y+2
 2846 135a 880F      		lsl r24
 2847 135c 991F      		rol r25
 2848 135e 880F      		lsl r24
 2849 1360 991F      		rol r25
 2850 1362 820F      		add r24,r18
 2851 1364 931F      		adc r25,r19
 2852 1366 FC01      		movw r30,r24
 2853 1368 8081      		ld r24,Z
 2854 136a 9181      		ldd r25,Z+1
 2855 136c A281      		ldd r26,Z+2
 2856 136e B381      		ldd r27,Z+3
 2857 1370 20E0      		ldi r18,0
 2858 1372 30E0      		ldi r19,0
 2859 1374 A901      		movw r20,r18
 2860 1376 BC01      		movw r22,r24
 2861 1378 CD01      		movw r24,r26
 2862 137a 0E94 0000 		call __nesf2
 2863 137e 8823      		tst r24
 2864 1380 01F4      		brne .+2
 2865 1382 00C0      		rjmp .L85
 218:lp_solve_5.5/lp_wlp.c ****             if(!ok) {
 2866               		.loc 1 218 0
 2867 1384 8985      		ldd r24,Y+9
 2868 1386 8823      		tst r24
 2869 1388 01F4      		brne .L87
 219:lp_solve_5.5/lp_wlp.c ****               write_lpcomment(userhandle, write_modeldata, "Variable bounds", TRUE);
 2870               		.loc 1 219 0
 2871 138a 68A1      		ldd r22,Y+32
 2872 138c 79A1      		ldd r23,Y+33
 2873 138e 8E8D      		ldd r24,Y+30
 2874 1390 9F8D      		ldd r25,Y+31
 2875 1392 21E0      		ldi r18,lo8(1)
 2876 1394 40E0      		ldi r20,lo8(.LC31)
 2877 1396 50E0      		ldi r21,hi8(.LC31)
 2878 1398 0E94 0000 		call write_lpcomment
 220:lp_solve_5.5/lp_wlp.c ****               ok = TRUE;
 2879               		.loc 1 220 0
 2880 139c 81E0      		ldi r24,lo8(1)
 2881 139e 8987      		std Y+9,r24
 2882               	.L87:
 221:lp_solve_5.5/lp_wlp.c ****             }
 222:lp_solve_5.5/lp_wlp.c ****             if(lp->orig_lowbo[i] == -lp->infinite)
 2883               		.loc 1 222 0
 2884 13a0 8C8D      		ldd r24,Y+28
 2885 13a2 9D8D      		ldd r25,Y+29
 2886 13a4 8E54      		subi r24,78
 2887 13a6 9D4F      		sbci r25,-3
 2888 13a8 FC01      		movw r30,r24
 2889 13aa 2081      		ld r18,Z
 2890 13ac 3181      		ldd r19,Z+1
 2891 13ae 8981      		ldd r24,Y+1
 2892 13b0 9A81      		ldd r25,Y+2
 2893 13b2 880F      		lsl r24
 2894 13b4 991F      		rol r25
 2895 13b6 880F      		lsl r24
 2896 13b8 991F      		rol r25
 2897 13ba 820F      		add r24,r18
 2898 13bc 931F      		adc r25,r19
 2899 13be FC01      		movw r30,r24
 2900 13c0 E080      		ld r14,Z
 2901 13c2 F180      		ldd r15,Z+1
 2902 13c4 0281      		ldd r16,Z+2
 2903 13c6 1381      		ldd r17,Z+3
 2904 13c8 8C8D      		ldd r24,Y+28
 2905 13ca 9D8D      		ldd r25,Y+29
 2906 13cc 865F      		subi r24,-10
 2907 13ce 9C4F      		sbci r25,-4
 2908 13d0 FC01      		movw r30,r24
 2909 13d2 8081      		ld r24,Z
 2910 13d4 9181      		ldd r25,Z+1
 2911 13d6 A281      		ldd r26,Z+2
 2912 13d8 B381      		ldd r27,Z+3
 2913 13da B058      		subi r27,0x80
 2914 13dc 9C01      		movw r18,r24
 2915 13de AD01      		movw r20,r26
 2916 13e0 C801      		movw r24,r16
 2917 13e2 B701      		movw r22,r14
 2918 13e4 0E94 0000 		call __eqsf2
 2919 13e8 8823      		tst r24
 2920 13ea 01F4      		brne .L159
 223:lp_solve_5.5/lp_wlp.c ****               write_data(userhandle, write_modeldata, "%s >= -Inf;\n", get_col_name(lp, i - nrows))
 2921               		.loc 1 223 0
 2922 13ec 2981      		ldd r18,Y+1
 2923 13ee 3A81      		ldd r19,Y+2
 2924 13f0 8889      		ldd r24,Y+16
 2925 13f2 9989      		ldd r25,Y+17
 2926 13f4 281B      		sub r18,r24
 2927 13f6 390B      		sbc r19,r25
 2928 13f8 8C8D      		ldd r24,Y+28
 2929 13fa 9D8D      		ldd r25,Y+29
 2930 13fc B901      		movw r22,r18
 2931 13fe 0E94 0000 		call get_col_name
 2932 1402 292F      		mov r18,r25
 2933 1404 2F93      		push r18
 2934 1406 8F93      		push r24
 2935 1408 80E0      		ldi r24,lo8(.LC37)
 2936 140a 90E0      		ldi r25,hi8(.LC37)
 2937 140c 892F      		mov r24,r25
 2938 140e 8F93      		push r24
 2939 1410 80E0      		ldi r24,lo8(.LC37)
 2940 1412 90E0      		ldi r25,hi8(.LC37)
 2941 1414 8F93      		push r24
 2942 1416 89A1      		ldd r24,Y+33
 2943 1418 8F93      		push r24
 2944 141a 88A1      		ldd r24,Y+32
 2945 141c 8F93      		push r24
 2946 141e 8F8D      		ldd r24,Y+31
 2947 1420 8F93      		push r24
 2948 1422 8E8D      		ldd r24,Y+30
 2949 1424 8F93      		push r24
 2950 1426 0E94 0000 		call write_data
 2951 142a 2DB7      		in r18,__SP_L__
 2952 142c 3EB7      		in r19,__SP_H__
 2953 142e 285F      		subi r18,-8
 2954 1430 3F4F      		sbci r19,-1
 2955 1432 0FB6      		in __tmp_reg__,__SREG__
 2956 1434 F894      		cli
 2957 1436 DEBF      		out __SP_H__,r29
 2958 1438 0FBE      		out __SREG__,__tmp_reg__
 2959 143a CDBF      		out __SP_L__,r28
 2960 143c 00C0      		rjmp .L85
 2961               	.L159:
 224:lp_solve_5.5/lp_wlp.c ****             else if(lp->orig_lowbo[i] == lp->infinite)
 2962               		.loc 1 224 0
 2963 143e 8C8D      		ldd r24,Y+28
 2964 1440 9D8D      		ldd r25,Y+29
 2965 1442 8E54      		subi r24,78
 2966 1444 9D4F      		sbci r25,-3
 2967 1446 FC01      		movw r30,r24
 2968 1448 2081      		ld r18,Z
 2969 144a 3181      		ldd r19,Z+1
 2970 144c 8981      		ldd r24,Y+1
 2971 144e 9A81      		ldd r25,Y+2
 2972 1450 880F      		lsl r24
 2973 1452 991F      		rol r25
 2974 1454 880F      		lsl r24
 2975 1456 991F      		rol r25
 2976 1458 820F      		add r24,r18
 2977 145a 931F      		adc r25,r19
 2978 145c FC01      		movw r30,r24
 2979 145e 8081      		ld r24,Z
 2980 1460 9181      		ldd r25,Z+1
 2981 1462 A281      		ldd r26,Z+2
 2982 1464 B381      		ldd r27,Z+3
 2983 1466 2C8D      		ldd r18,Y+28
 2984 1468 3D8D      		ldd r19,Y+29
 2985 146a 265F      		subi r18,-10
 2986 146c 3C4F      		sbci r19,-4
 2987 146e F901      		movw r30,r18
 2988 1470 2081      		ld r18,Z
 2989 1472 3181      		ldd r19,Z+1
 2990 1474 4281      		ldd r20,Z+2
 2991 1476 5381      		ldd r21,Z+3
 2992 1478 BC01      		movw r22,r24
 2993 147a CD01      		movw r24,r26
 2994 147c 0E94 0000 		call __eqsf2
 2995 1480 8823      		tst r24
 2996 1482 01F4      		brne .L160
 225:lp_solve_5.5/lp_wlp.c ****               write_data(userhandle, write_modeldata, "%s >= +Inf;\n", get_col_name(lp, i - nrows))
 2997               		.loc 1 225 0
 2998 1484 2981      		ldd r18,Y+1
 2999 1486 3A81      		ldd r19,Y+2
 3000 1488 8889      		ldd r24,Y+16
 3001 148a 9989      		ldd r25,Y+17
 3002 148c 281B      		sub r18,r24
 3003 148e 390B      		sbc r19,r25
 3004 1490 8C8D      		ldd r24,Y+28
 3005 1492 9D8D      		ldd r25,Y+29
 3006 1494 B901      		movw r22,r18
 3007 1496 0E94 0000 		call get_col_name
 3008 149a 292F      		mov r18,r25
 3009 149c 2F93      		push r18
 3010 149e 8F93      		push r24
 3011 14a0 80E0      		ldi r24,lo8(.LC38)
 3012 14a2 90E0      		ldi r25,hi8(.LC38)
 3013 14a4 892F      		mov r24,r25
 3014 14a6 8F93      		push r24
 3015 14a8 80E0      		ldi r24,lo8(.LC38)
 3016 14aa 90E0      		ldi r25,hi8(.LC38)
 3017 14ac 8F93      		push r24
 3018 14ae 89A1      		ldd r24,Y+33
 3019 14b0 8F93      		push r24
 3020 14b2 88A1      		ldd r24,Y+32
 3021 14b4 8F93      		push r24
 3022 14b6 8F8D      		ldd r24,Y+31
 3023 14b8 8F93      		push r24
 3024 14ba 8E8D      		ldd r24,Y+30
 3025 14bc 8F93      		push r24
 3026 14be 0E94 0000 		call write_data
 3027 14c2 2DB7      		in r18,__SP_L__
 3028 14c4 3EB7      		in r19,__SP_H__
 3029 14c6 285F      		subi r18,-8
 3030 14c8 3F4F      		sbci r19,-1
 3031 14ca 0FB6      		in __tmp_reg__,__SREG__
 3032 14cc F894      		cli
 3033 14ce DEBF      		out __SP_H__,r29
 3034 14d0 0FBE      		out __SREG__,__tmp_reg__
 3035 14d2 CDBF      		out __SP_L__,r28
 3036 14d4 00C0      		rjmp .L85
 3037               	.L160:
 226:lp_solve_5.5/lp_wlp.c ****             else
 227:lp_solve_5.5/lp_wlp.c ****               write_data(userhandle, write_modeldata, "%s >= %.12g;\n",
 3038               		.loc 1 227 0
 3039 14d6 2981      		ldd r18,Y+1
 3040 14d8 3A81      		ldd r19,Y+2
 3041 14da 8889      		ldd r24,Y+16
 3042 14dc 9989      		ldd r25,Y+17
 3043 14de 281B      		sub r18,r24
 3044 14e0 390B      		sbc r19,r25
 3045 14e2 8C8D      		ldd r24,Y+28
 3046 14e4 9D8D      		ldd r25,Y+29
 3047 14e6 B901      		movw r22,r18
 3048 14e8 0E94 0000 		call get_lowbo
 3049 14ec 6B01      		movw r12,r22
 3050 14ee 7C01      		movw r14,r24
 3051 14f0 2981      		ldd r18,Y+1
 3052 14f2 3A81      		ldd r19,Y+2
 3053 14f4 8889      		ldd r24,Y+16
 3054 14f6 9989      		ldd r25,Y+17
 3055 14f8 281B      		sub r18,r24
 3056 14fa 390B      		sbc r19,r25
 3057 14fc 8C8D      		ldd r24,Y+28
 3058 14fe 9D8D      		ldd r25,Y+29
 3059 1500 B901      		movw r22,r18
 3060 1502 0E94 0000 		call get_col_name
 3061 1506 2F2D      		mov r18,r15
 3062 1508 2F93      		push r18
 3063 150a 2E2D      		mov r18,r14
 3064 150c 2F93      		push r18
 3065 150e 2D2D      		mov r18,r13
 3066 1510 2F93      		push r18
 3067 1512 2C2D      		mov r18,r12
 3068 1514 2F93      		push r18
 3069 1516 292F      		mov r18,r25
 3070 1518 2F93      		push r18
 3071 151a 8F93      		push r24
 3072 151c 80E0      		ldi r24,lo8(.LC39)
 3073 151e 90E0      		ldi r25,hi8(.LC39)
 3074 1520 892F      		mov r24,r25
 3075 1522 8F93      		push r24
 3076 1524 80E0      		ldi r24,lo8(.LC39)
 3077 1526 90E0      		ldi r25,hi8(.LC39)
 3078 1528 8F93      		push r24
 3079 152a 89A1      		ldd r24,Y+33
 3080 152c 8F93      		push r24
 3081 152e 88A1      		ldd r24,Y+32
 3082 1530 8F93      		push r24
 3083 1532 8F8D      		ldd r24,Y+31
 3084 1534 8F93      		push r24
 3085 1536 8E8D      		ldd r24,Y+30
 3086 1538 8F93      		push r24
 3087 153a 0E94 0000 		call write_data
 3088 153e 8DB7      		in r24,__SP_L__
 3089 1540 9EB7      		in r25,__SP_H__
 3090 1542 0C96      		adiw r24,12
 3091 1544 0FB6      		in __tmp_reg__,__SREG__
 3092 1546 F894      		cli
 3093 1548 DEBF      		out __SP_H__,r29
 3094 154a 0FBE      		out __SREG__,__tmp_reg__
 3095 154c CDBF      		out __SP_L__,r28
 3096               	.L85:
 228:lp_solve_5.5/lp_wlp.c ****                          get_col_name(lp, i - nrows), get_lowbo(lp, i - nrows));
 229:lp_solve_5.5/lp_wlp.c ****           }
 230:lp_solve_5.5/lp_wlp.c ****           if(lp->orig_upbo[i] != lp->infinite) {
 3097               		.loc 1 230 0
 3098 154e 8C8D      		ldd r24,Y+28
 3099 1550 9D8D      		ldd r25,Y+29
 3100 1552 8255      		subi r24,82
 3101 1554 9D4F      		sbci r25,-3
 3102 1556 FC01      		movw r30,r24
 3103 1558 2081      		ld r18,Z
 3104 155a 3181      		ldd r19,Z+1
 3105 155c 8981      		ldd r24,Y+1
 3106 155e 9A81      		ldd r25,Y+2
 3107 1560 880F      		lsl r24
 3108 1562 991F      		rol r25
 3109 1564 880F      		lsl r24
 3110 1566 991F      		rol r25
 3111 1568 820F      		add r24,r18
 3112 156a 931F      		adc r25,r19
 3113 156c FC01      		movw r30,r24
 3114 156e 8081      		ld r24,Z
 3115 1570 9181      		ldd r25,Z+1
 3116 1572 A281      		ldd r26,Z+2
 3117 1574 B381      		ldd r27,Z+3
 3118 1576 2C8D      		ldd r18,Y+28
 3119 1578 3D8D      		ldd r19,Y+29
 3120 157a 265F      		subi r18,-10
 3121 157c 3C4F      		sbci r19,-4
 3122 157e F901      		movw r30,r18
 3123 1580 2081      		ld r18,Z
 3124 1582 3181      		ldd r19,Z+1
 3125 1584 4281      		ldd r20,Z+2
 3126 1586 5381      		ldd r21,Z+3
 3127 1588 BC01      		movw r22,r24
 3128 158a CD01      		movw r24,r26
 3129 158c 0E94 0000 		call __nesf2
 3130 1590 8823      		tst r24
 3131 1592 01F4      		brne .+2
 3132 1594 00C0      		rjmp .L71
 231:lp_solve_5.5/lp_wlp.c ****             if(!ok) {
 3133               		.loc 1 231 0
 3134 1596 8985      		ldd r24,Y+9
 3135 1598 8823      		tst r24
 3136 159a 01F4      		brne .L93
 232:lp_solve_5.5/lp_wlp.c ****               write_lpcomment(userhandle, write_modeldata, "Variable bounds", TRUE);
 3137               		.loc 1 232 0
 3138 159c 68A1      		ldd r22,Y+32
 3139 159e 79A1      		ldd r23,Y+33
 3140 15a0 8E8D      		ldd r24,Y+30
 3141 15a2 9F8D      		ldd r25,Y+31
 3142 15a4 21E0      		ldi r18,lo8(1)
 3143 15a6 40E0      		ldi r20,lo8(.LC31)
 3144 15a8 50E0      		ldi r21,hi8(.LC31)
 3145 15aa 0E94 0000 		call write_lpcomment
 233:lp_solve_5.5/lp_wlp.c ****               ok = TRUE;
 3146               		.loc 1 233 0
 3147 15ae 81E0      		ldi r24,lo8(1)
 3148 15b0 8987      		std Y+9,r24
 3149               	.L93:
 234:lp_solve_5.5/lp_wlp.c ****             }
 235:lp_solve_5.5/lp_wlp.c ****             write_data(userhandle, write_modeldata, "%s <= %.12g;\n",
 3150               		.loc 1 235 0
 3151 15b2 2981      		ldd r18,Y+1
 3152 15b4 3A81      		ldd r19,Y+2
 3153 15b6 8889      		ldd r24,Y+16
 3154 15b8 9989      		ldd r25,Y+17
 3155 15ba 281B      		sub r18,r24
 3156 15bc 390B      		sbc r19,r25
 3157 15be 8C8D      		ldd r24,Y+28
 3158 15c0 9D8D      		ldd r25,Y+29
 3159 15c2 B901      		movw r22,r18
 3160 15c4 0E94 0000 		call get_upbo
 3161 15c8 6B01      		movw r12,r22
 3162 15ca 7C01      		movw r14,r24
 3163 15cc 2981      		ldd r18,Y+1
 3164 15ce 3A81      		ldd r19,Y+2
 3165 15d0 8889      		ldd r24,Y+16
 3166 15d2 9989      		ldd r25,Y+17
 3167 15d4 281B      		sub r18,r24
 3168 15d6 390B      		sbc r19,r25
 3169 15d8 8C8D      		ldd r24,Y+28
 3170 15da 9D8D      		ldd r25,Y+29
 3171 15dc B901      		movw r22,r18
 3172 15de 0E94 0000 		call get_col_name
 3173 15e2 2F2D      		mov r18,r15
 3174 15e4 2F93      		push r18
 3175 15e6 2E2D      		mov r18,r14
 3176 15e8 2F93      		push r18
 3177 15ea 2D2D      		mov r18,r13
 3178 15ec 2F93      		push r18
 3179 15ee 2C2D      		mov r18,r12
 3180 15f0 2F93      		push r18
 3181 15f2 292F      		mov r18,r25
 3182 15f4 2F93      		push r18
 3183 15f6 8F93      		push r24
 3184 15f8 80E0      		ldi r24,lo8(.LC40)
 3185 15fa 90E0      		ldi r25,hi8(.LC40)
 3186 15fc 892F      		mov r24,r25
 3187 15fe 8F93      		push r24
 3188 1600 80E0      		ldi r24,lo8(.LC40)
 3189 1602 90E0      		ldi r25,hi8(.LC40)
 3190 1604 8F93      		push r24
 3191 1606 89A1      		ldd r24,Y+33
 3192 1608 8F93      		push r24
 3193 160a 88A1      		ldd r24,Y+32
 3194 160c 8F93      		push r24
 3195 160e 8F8D      		ldd r24,Y+31
 3196 1610 8F93      		push r24
 3197 1612 8E8D      		ldd r24,Y+30
 3198 1614 8F93      		push r24
 3199 1616 0E94 0000 		call write_data
 3200 161a 2DB7      		in r18,__SP_L__
 3201 161c 3EB7      		in r19,__SP_H__
 3202 161e 245F      		subi r18,-12
 3203 1620 3F4F      		sbci r19,-1
 3204 1622 0FB6      		in __tmp_reg__,__SREG__
 3205 1624 F894      		cli
 3206 1626 DEBF      		out __SP_H__,r29
 3207 1628 0FBE      		out __SREG__,__tmp_reg__
 3208 162a CDBF      		out __SP_L__,r28
 3209               	.L71:
 187:lp_solve_5.5/lp_wlp.c ****     if(!is_splitvar(lp, i - nrows)) {
 3210               		.loc 1 187 0 discriminator 2
 3211 162c 8981      		ldd r24,Y+1
 3212 162e 9A81      		ldd r25,Y+2
 3213 1630 0196      		adiw r24,1
 3214 1632 9A83      		std Y+2,r25
 3215 1634 8983      		std Y+1,r24
 3216               	.L70:
 187:lp_solve_5.5/lp_wlp.c ****     if(!is_splitvar(lp, i - nrows)) {
 3217               		.loc 1 187 0 is_stmt 0 discriminator 1
 3218 1636 8C8D      		ldd r24,Y+28
 3219 1638 9D8D      		ldd r25,Y+29
 3220 163a 8851      		subi r24,24
 3221 163c 9E4F      		sbci r25,-2
 3222 163e FC01      		movw r30,r24
 3223 1640 2081      		ld r18,Z
 3224 1642 3181      		ldd r19,Z+1
 3225 1644 8981      		ldd r24,Y+1
 3226 1646 9A81      		ldd r25,Y+2
 3227 1648 2817      		cp r18,r24
 3228 164a 3907      		cpc r19,r25
 3229 164c 04F0      		brlt .+2
 3230 164e 00C0      		rjmp .L94
 236:lp_solve_5.5/lp_wlp.c ****                        get_col_name(lp, i - nrows), get_upbo(lp, i - nrows));
 237:lp_solve_5.5/lp_wlp.c ****           }
 238:lp_solve_5.5/lp_wlp.c ****         }
 239:lp_solve_5.5/lp_wlp.c ****       }
 240:lp_solve_5.5/lp_wlp.c ****     }
 241:lp_solve_5.5/lp_wlp.c **** 
 242:lp_solve_5.5/lp_wlp.c ****   /* Write optional integer section */
 243:lp_solve_5.5/lp_wlp.c ****   if(lp->int_vars > 0) {
 3231               		.loc 1 243 0 is_stmt 1
 3232 1650 8C8D      		ldd r24,Y+28
 3233 1652 9D8D      		ldd r25,Y+29
 3234 1654 8257      		subi r24,114
 3235 1656 9D4F      		sbci r25,-3
 3236 1658 FC01      		movw r30,r24
 3237 165a 8081      		ld r24,Z
 3238 165c 9181      		ldd r25,Z+1
 3239 165e 1816      		cp __zero_reg__,r24
 3240 1660 1906      		cpc __zero_reg__,r25
 3241 1662 04F0      		brlt .+2
 3242 1664 00C0      		rjmp .L95
 244:lp_solve_5.5/lp_wlp.c ****     write_lpcomment(userhandle, write_modeldata, "Integer definitions", TRUE);
 3243               		.loc 1 244 0
 3244 1666 68A1      		ldd r22,Y+32
 3245 1668 79A1      		ldd r23,Y+33
 3246 166a 8E8D      		ldd r24,Y+30
 3247 166c 9F8D      		ldd r25,Y+31
 3248 166e 21E0      		ldi r18,lo8(1)
 3249 1670 40E0      		ldi r20,lo8(.LC41)
 3250 1672 50E0      		ldi r21,hi8(.LC41)
 3251 1674 0E94 0000 		call write_lpcomment
 245:lp_solve_5.5/lp_wlp.c ****     i = 1;
 3252               		.loc 1 245 0
 3253 1678 81E0      		ldi r24,lo8(1)
 3254 167a 90E0      		ldi r25,0
 3255 167c 9A83      		std Y+2,r25
 3256 167e 8983      		std Y+1,r24
 246:lp_solve_5.5/lp_wlp.c ****     while((i <= ncols) && !is_int(lp, i))
 3257               		.loc 1 246 0
 3258 1680 00C0      		rjmp .L96
 3259               	.L98:
 247:lp_solve_5.5/lp_wlp.c ****       i++;
 3260               		.loc 1 247 0
 3261 1682 8981      		ldd r24,Y+1
 3262 1684 9A81      		ldd r25,Y+2
 3263 1686 0196      		adiw r24,1
 3264 1688 9A83      		std Y+2,r25
 3265 168a 8983      		std Y+1,r24
 3266               	.L96:
 246:lp_solve_5.5/lp_wlp.c ****     while((i <= ncols) && !is_int(lp, i))
 3267               		.loc 1 246 0
 3268 168c 2981      		ldd r18,Y+1
 3269 168e 3A81      		ldd r19,Y+2
 3270 1690 8A89      		ldd r24,Y+18
 3271 1692 9B89      		ldd r25,Y+19
 3272 1694 8217      		cp r24,r18
 3273 1696 9307      		cpc r25,r19
 3274 1698 04F0      		brlt .L97
 246:lp_solve_5.5/lp_wlp.c ****     while((i <= ncols) && !is_int(lp, i))
 3275               		.loc 1 246 0 is_stmt 0 discriminator 1
 3276 169a 2981      		ldd r18,Y+1
 3277 169c 3A81      		ldd r19,Y+2
 3278 169e 8C8D      		ldd r24,Y+28
 3279 16a0 9D8D      		ldd r25,Y+29
 3280 16a2 B901      		movw r22,r18
 3281 16a4 0E94 0000 		call is_int
 3282 16a8 8823      		tst r24
 3283 16aa 01F0      		breq .L98
 3284               	.L97:
 248:lp_solve_5.5/lp_wlp.c ****     if(i <= ncols) {
 3285               		.loc 1 248 0 is_stmt 1
 3286 16ac 2981      		ldd r18,Y+1
 3287 16ae 3A81      		ldd r19,Y+2
 3288 16b0 8A89      		ldd r24,Y+18
 3289 16b2 9B89      		ldd r25,Y+19
 3290 16b4 8217      		cp r24,r18
 3291 16b6 9307      		cpc r25,r19
 3292 16b8 04F4      		brge .+2
 3293 16ba 00C0      		rjmp .L95
 249:lp_solve_5.5/lp_wlp.c ****       nchars = write_data(userhandle, write_modeldata, "int %s", get_col_name(lp, i));
 3294               		.loc 1 249 0
 3295 16bc 2981      		ldd r18,Y+1
 3296 16be 3A81      		ldd r19,Y+2
 3297 16c0 8C8D      		ldd r24,Y+28
 3298 16c2 9D8D      		ldd r25,Y+29
 3299 16c4 B901      		movw r22,r18
 3300 16c6 0E94 0000 		call get_col_name
 3301 16ca 292F      		mov r18,r25
 3302 16cc 2F93      		push r18
 3303 16ce 8F93      		push r24
 3304 16d0 80E0      		ldi r24,lo8(.LC42)
 3305 16d2 90E0      		ldi r25,hi8(.LC42)
 3306 16d4 892F      		mov r24,r25
 3307 16d6 8F93      		push r24
 3308 16d8 80E0      		ldi r24,lo8(.LC42)
 3309 16da 90E0      		ldi r25,hi8(.LC42)
 3310 16dc 8F93      		push r24
 3311 16de 89A1      		ldd r24,Y+33
 3312 16e0 8F93      		push r24
 3313 16e2 88A1      		ldd r24,Y+32
 3314 16e4 8F93      		push r24
 3315 16e6 8F8D      		ldd r24,Y+31
 3316 16e8 8F93      		push r24
 3317 16ea 8E8D      		ldd r24,Y+30
 3318 16ec 8F93      		push r24
 3319 16ee 0E94 0000 		call write_data
 3320 16f2 2DB7      		in r18,__SP_L__
 3321 16f4 3EB7      		in r19,__SP_H__
 3322 16f6 285F      		subi r18,-8
 3323 16f8 3F4F      		sbci r19,-1
 3324 16fa 0FB6      		in __tmp_reg__,__SREG__
 3325 16fc F894      		cli
 3326 16fe DEBF      		out __SP_H__,r29
 3327 1700 0FBE      		out __SREG__,__tmp_reg__
 3328 1702 CDBF      		out __SP_L__,r28
 3329 1704 9887      		std Y+8,r25
 3330 1706 8F83      		std Y+7,r24
 250:lp_solve_5.5/lp_wlp.c ****       i++;
 3331               		.loc 1 250 0
 3332 1708 8981      		ldd r24,Y+1
 3333 170a 9A81      		ldd r25,Y+2
 3334 170c 0196      		adiw r24,1
 3335 170e 9A83      		std Y+2,r25
 3336 1710 8983      		std Y+1,r24
 251:lp_solve_5.5/lp_wlp.c ****       for(; i <= ncols; i++)
 3337               		.loc 1 251 0
 3338 1712 00C0      		rjmp .L99
 3339               	.L102:
 252:lp_solve_5.5/lp_wlp.c ****         if((!is_splitvar(lp, i)) && (is_int(lp, i))) {
 3340               		.loc 1 252 0
 3341 1714 2981      		ldd r18,Y+1
 3342 1716 3A81      		ldd r19,Y+2
 3343 1718 8C8D      		ldd r24,Y+28
 3344 171a 9D8D      		ldd r25,Y+29
 3345 171c B901      		movw r22,r18
 3346 171e 0E94 0000 		call is_splitvar
 3347 1722 8823      		tst r24
 3348 1724 01F0      		breq .+2
 3349 1726 00C0      		rjmp .L100
 3350               		.loc 1 252 0 is_stmt 0 discriminator 1
 3351 1728 2981      		ldd r18,Y+1
 3352 172a 3A81      		ldd r19,Y+2
 3353 172c 8C8D      		ldd r24,Y+28
 3354 172e 9D8D      		ldd r25,Y+29
 3355 1730 B901      		movw r22,r18
 3356 1732 0E94 0000 		call is_int
 3357 1736 8823      		tst r24
 3358 1738 01F4      		brne .+2
 3359 173a 00C0      		rjmp .L100
 253:lp_solve_5.5/lp_wlp.c ****           if((maxlen!= 0) && (nchars > maxlen)) {
 3360               		.loc 1 253 0 is_stmt 1
 3361 173c 8C89      		ldd r24,Y+20
 3362 173e 9D89      		ldd r25,Y+21
 3363 1740 892B      		or r24,r25
 3364 1742 01F0      		breq .L101
 3365               		.loc 1 253 0 is_stmt 0 discriminator 1
 3366 1744 2F81      		ldd r18,Y+7
 3367 1746 3885      		ldd r19,Y+8
 3368 1748 8C89      		ldd r24,Y+20
 3369 174a 9D89      		ldd r25,Y+21
 3370 174c 8217      		cp r24,r18
 3371 174e 9307      		cpc r25,r19
 3372 1750 04F4      		brge .L101
 254:lp_solve_5.5/lp_wlp.c ****             write_data(userhandle, write_modeldata, "%s", "\n");
 3373               		.loc 1 254 0 is_stmt 1
 3374 1752 80E0      		ldi r24,lo8(.LC0)
 3375 1754 90E0      		ldi r25,hi8(.LC0)
 3376 1756 892F      		mov r24,r25
 3377 1758 8F93      		push r24
 3378 175a 80E0      		ldi r24,lo8(.LC0)
 3379 175c 90E0      		ldi r25,hi8(.LC0)
 3380 175e 8F93      		push r24
 3381 1760 80E0      		ldi r24,lo8(.LC10)
 3382 1762 90E0      		ldi r25,hi8(.LC10)
 3383 1764 892F      		mov r24,r25
 3384 1766 8F93      		push r24
 3385 1768 80E0      		ldi r24,lo8(.LC10)
 3386 176a 90E0      		ldi r25,hi8(.LC10)
 3387 176c 8F93      		push r24
 3388 176e 89A1      		ldd r24,Y+33
 3389 1770 8F93      		push r24
 3390 1772 88A1      		ldd r24,Y+32
 3391 1774 8F93      		push r24
 3392 1776 8F8D      		ldd r24,Y+31
 3393 1778 8F93      		push r24
 3394 177a 8E8D      		ldd r24,Y+30
 3395 177c 8F93      		push r24
 3396 177e 0E94 0000 		call write_data
 3397 1782 8DB7      		in r24,__SP_L__
 3398 1784 9EB7      		in r25,__SP_H__
 3399 1786 0896      		adiw r24,8
 3400 1788 0FB6      		in __tmp_reg__,__SREG__
 3401 178a F894      		cli
 3402 178c DEBF      		out __SP_H__,r29
 3403 178e 0FBE      		out __SREG__,__tmp_reg__
 3404 1790 CDBF      		out __SP_L__,r28
 255:lp_solve_5.5/lp_wlp.c ****             nchars = 0;
 3405               		.loc 1 255 0
 3406 1792 1886      		std Y+8,__zero_reg__
 3407 1794 1F82      		std Y+7,__zero_reg__
 3408               	.L101:
 256:lp_solve_5.5/lp_wlp.c ****           }
 257:lp_solve_5.5/lp_wlp.c ****           write_data(userhandle, write_modeldata, ",%s", get_col_name(lp, i));
 3409               		.loc 1 257 0
 3410 1796 2981      		ldd r18,Y+1
 3411 1798 3A81      		ldd r19,Y+2
 3412 179a 8C8D      		ldd r24,Y+28
 3413 179c 9D8D      		ldd r25,Y+29
 3414 179e B901      		movw r22,r18
 3415 17a0 0E94 0000 		call get_col_name
 3416 17a4 292F      		mov r18,r25
 3417 17a6 2F93      		push r18
 3418 17a8 8F93      		push r24
 3419 17aa 80E0      		ldi r24,lo8(.LC43)
 3420 17ac 90E0      		ldi r25,hi8(.LC43)
 3421 17ae 892F      		mov r24,r25
 3422 17b0 8F93      		push r24
 3423 17b2 80E0      		ldi r24,lo8(.LC43)
 3424 17b4 90E0      		ldi r25,hi8(.LC43)
 3425 17b6 8F93      		push r24
 3426 17b8 89A1      		ldd r24,Y+33
 3427 17ba 8F93      		push r24
 3428 17bc 88A1      		ldd r24,Y+32
 3429 17be 8F93      		push r24
 3430 17c0 8F8D      		ldd r24,Y+31
 3431 17c2 8F93      		push r24
 3432 17c4 8E8D      		ldd r24,Y+30
 3433 17c6 8F93      		push r24
 3434 17c8 0E94 0000 		call write_data
 3435 17cc EDB7      		in r30,__SP_L__
 3436 17ce FEB7      		in r31,__SP_H__
 3437 17d0 3896      		adiw r30,8
 3438 17d2 0FB6      		in __tmp_reg__,__SREG__
 3439 17d4 F894      		cli
 3440 17d6 DEBF      		out __SP_H__,r29
 3441 17d8 0FBE      		out __SREG__,__tmp_reg__
 3442 17da CDBF      		out __SP_L__,r28
 3443               	.L100:
 251:lp_solve_5.5/lp_wlp.c ****         if((!is_splitvar(lp, i)) && (is_int(lp, i))) {
 3444               		.loc 1 251 0
 3445 17dc 8981      		ldd r24,Y+1
 3446 17de 9A81      		ldd r25,Y+2
 3447 17e0 0196      		adiw r24,1
 3448 17e2 9A83      		std Y+2,r25
 3449 17e4 8983      		std Y+1,r24
 3450               	.L99:
 251:lp_solve_5.5/lp_wlp.c ****         if((!is_splitvar(lp, i)) && (is_int(lp, i))) {
 3451               		.loc 1 251 0 is_stmt 0 discriminator 1
 3452 17e6 2981      		ldd r18,Y+1
 3453 17e8 3A81      		ldd r19,Y+2
 3454 17ea 8A89      		ldd r24,Y+18
 3455 17ec 9B89      		ldd r25,Y+19
 3456 17ee 8217      		cp r24,r18
 3457 17f0 9307      		cpc r25,r19
 3458 17f2 04F0      		brlt .+2
 3459 17f4 00C0      		rjmp .L102
 258:lp_solve_5.5/lp_wlp.c ****         }
 259:lp_solve_5.5/lp_wlp.c ****       write_data(userhandle, write_modeldata, ";\n");
 3460               		.loc 1 259 0 is_stmt 1
 3461 17f6 80E0      		ldi r24,lo8(.LC16)
 3462 17f8 90E0      		ldi r25,hi8(.LC16)
 3463 17fa 892F      		mov r24,r25
 3464 17fc 8F93      		push r24
 3465 17fe 80E0      		ldi r24,lo8(.LC16)
 3466 1800 90E0      		ldi r25,hi8(.LC16)
 3467 1802 8F93      		push r24
 3468 1804 89A1      		ldd r24,Y+33
 3469 1806 8F93      		push r24
 3470 1808 88A1      		ldd r24,Y+32
 3471 180a 8F93      		push r24
 3472 180c 8F8D      		ldd r24,Y+31
 3473 180e 8F93      		push r24
 3474 1810 8E8D      		ldd r24,Y+30
 3475 1812 8F93      		push r24
 3476 1814 0E94 0000 		call write_data
 3477 1818 0F90      		pop __tmp_reg__
 3478 181a 0F90      		pop __tmp_reg__
 3479 181c 0F90      		pop __tmp_reg__
 3480 181e 0F90      		pop __tmp_reg__
 3481 1820 0F90      		pop __tmp_reg__
 3482 1822 0F90      		pop __tmp_reg__
 3483               	.L95:
 260:lp_solve_5.5/lp_wlp.c ****     }
 261:lp_solve_5.5/lp_wlp.c ****   }
 262:lp_solve_5.5/lp_wlp.c **** 
 263:lp_solve_5.5/lp_wlp.c ****   /* Write optional SEC section */
 264:lp_solve_5.5/lp_wlp.c ****   if(lp->sc_vars > 0) {
 3484               		.loc 1 264 0
 3485 1824 8C8D      		ldd r24,Y+28
 3486 1826 9D8D      		ldd r25,Y+29
 3487 1828 8057      		subi r24,112
 3488 182a 9D4F      		sbci r25,-3
 3489 182c FC01      		movw r30,r24
 3490 182e 8081      		ld r24,Z
 3491 1830 9181      		ldd r25,Z+1
 3492 1832 1816      		cp __zero_reg__,r24
 3493 1834 1906      		cpc __zero_reg__,r25
 3494 1836 04F0      		brlt .+2
 3495 1838 00C0      		rjmp .L103
 265:lp_solve_5.5/lp_wlp.c ****     write_lpcomment(userhandle, write_modeldata, "Semi-continuous variables", TRUE);
 3496               		.loc 1 265 0
 3497 183a 68A1      		ldd r22,Y+32
 3498 183c 79A1      		ldd r23,Y+33
 3499 183e 8E8D      		ldd r24,Y+30
 3500 1840 9F8D      		ldd r25,Y+31
 3501 1842 21E0      		ldi r18,lo8(1)
 3502 1844 40E0      		ldi r20,lo8(.LC44)
 3503 1846 50E0      		ldi r21,hi8(.LC44)
 3504 1848 0E94 0000 		call write_lpcomment
 266:lp_solve_5.5/lp_wlp.c ****     i = 1;
 3505               		.loc 1 266 0
 3506 184c 81E0      		ldi r24,lo8(1)
 3507 184e 90E0      		ldi r25,0
 3508 1850 9A83      		std Y+2,r25
 3509 1852 8983      		std Y+1,r24
 267:lp_solve_5.5/lp_wlp.c ****     while((i <= ncols) && !is_semicont(lp, i))
 3510               		.loc 1 267 0
 3511 1854 00C0      		rjmp .L104
 3512               	.L106:
 268:lp_solve_5.5/lp_wlp.c ****       i++;
 3513               		.loc 1 268 0
 3514 1856 8981      		ldd r24,Y+1
 3515 1858 9A81      		ldd r25,Y+2
 3516 185a 0196      		adiw r24,1
 3517 185c 9A83      		std Y+2,r25
 3518 185e 8983      		std Y+1,r24
 3519               	.L104:
 267:lp_solve_5.5/lp_wlp.c ****     while((i <= ncols) && !is_semicont(lp, i))
 3520               		.loc 1 267 0
 3521 1860 2981      		ldd r18,Y+1
 3522 1862 3A81      		ldd r19,Y+2
 3523 1864 8A89      		ldd r24,Y+18
 3524 1866 9B89      		ldd r25,Y+19
 3525 1868 8217      		cp r24,r18
 3526 186a 9307      		cpc r25,r19
 3527 186c 04F0      		brlt .L105
 267:lp_solve_5.5/lp_wlp.c ****     while((i <= ncols) && !is_semicont(lp, i))
 3528               		.loc 1 267 0 is_stmt 0 discriminator 1
 3529 186e 2981      		ldd r18,Y+1
 3530 1870 3A81      		ldd r19,Y+2
 3531 1872 8C8D      		ldd r24,Y+28
 3532 1874 9D8D      		ldd r25,Y+29
 3533 1876 B901      		movw r22,r18
 3534 1878 0E94 0000 		call is_semicont
 3535 187c 8823      		tst r24
 3536 187e 01F0      		breq .L106
 3537               	.L105:
 269:lp_solve_5.5/lp_wlp.c ****     if(i <= ncols) {
 3538               		.loc 1 269 0 is_stmt 1
 3539 1880 2981      		ldd r18,Y+1
 3540 1882 3A81      		ldd r19,Y+2
 3541 1884 8A89      		ldd r24,Y+18
 3542 1886 9B89      		ldd r25,Y+19
 3543 1888 8217      		cp r24,r18
 3544 188a 9307      		cpc r25,r19
 3545 188c 04F4      		brge .+2
 3546 188e 00C0      		rjmp .L103
 270:lp_solve_5.5/lp_wlp.c ****       nchars = write_data(userhandle, write_modeldata, "sec %s", get_col_name(lp, i));
 3547               		.loc 1 270 0
 3548 1890 2981      		ldd r18,Y+1
 3549 1892 3A81      		ldd r19,Y+2
 3550 1894 8C8D      		ldd r24,Y+28
 3551 1896 9D8D      		ldd r25,Y+29
 3552 1898 B901      		movw r22,r18
 3553 189a 0E94 0000 		call get_col_name
 3554 189e 292F      		mov r18,r25
 3555 18a0 2F93      		push r18
 3556 18a2 8F93      		push r24
 3557 18a4 80E0      		ldi r24,lo8(.LC45)
 3558 18a6 90E0      		ldi r25,hi8(.LC45)
 3559 18a8 892F      		mov r24,r25
 3560 18aa 8F93      		push r24
 3561 18ac 80E0      		ldi r24,lo8(.LC45)
 3562 18ae 90E0      		ldi r25,hi8(.LC45)
 3563 18b0 8F93      		push r24
 3564 18b2 89A1      		ldd r24,Y+33
 3565 18b4 8F93      		push r24
 3566 18b6 88A1      		ldd r24,Y+32
 3567 18b8 8F93      		push r24
 3568 18ba 8F8D      		ldd r24,Y+31
 3569 18bc 8F93      		push r24
 3570 18be 8E8D      		ldd r24,Y+30
 3571 18c0 8F93      		push r24
 3572 18c2 0E94 0000 		call write_data
 3573 18c6 2DB7      		in r18,__SP_L__
 3574 18c8 3EB7      		in r19,__SP_H__
 3575 18ca 285F      		subi r18,-8
 3576 18cc 3F4F      		sbci r19,-1
 3577 18ce 0FB6      		in __tmp_reg__,__SREG__
 3578 18d0 F894      		cli
 3579 18d2 DEBF      		out __SP_H__,r29
 3580 18d4 0FBE      		out __SREG__,__tmp_reg__
 3581 18d6 CDBF      		out __SP_L__,r28
 3582 18d8 9887      		std Y+8,r25
 3583 18da 8F83      		std Y+7,r24
 271:lp_solve_5.5/lp_wlp.c ****       i++;
 3584               		.loc 1 271 0
 3585 18dc 8981      		ldd r24,Y+1
 3586 18de 9A81      		ldd r25,Y+2
 3587 18e0 0196      		adiw r24,1
 3588 18e2 9A83      		std Y+2,r25
 3589 18e4 8983      		std Y+1,r24
 272:lp_solve_5.5/lp_wlp.c ****       for(; i <= ncols; i++)
 3590               		.loc 1 272 0
 3591 18e6 00C0      		rjmp .L107
 3592               	.L110:
 273:lp_solve_5.5/lp_wlp.c ****         if((!is_splitvar(lp, i)) && (is_semicont(lp, i))) {
 3593               		.loc 1 273 0
 3594 18e8 2981      		ldd r18,Y+1
 3595 18ea 3A81      		ldd r19,Y+2
 3596 18ec 8C8D      		ldd r24,Y+28
 3597 18ee 9D8D      		ldd r25,Y+29
 3598 18f0 B901      		movw r22,r18
 3599 18f2 0E94 0000 		call is_splitvar
 3600 18f6 8823      		tst r24
 3601 18f8 01F0      		breq .+2
 3602 18fa 00C0      		rjmp .L108
 3603               		.loc 1 273 0 is_stmt 0 discriminator 1
 3604 18fc 2981      		ldd r18,Y+1
 3605 18fe 3A81      		ldd r19,Y+2
 3606 1900 8C8D      		ldd r24,Y+28
 3607 1902 9D8D      		ldd r25,Y+29
 3608 1904 B901      		movw r22,r18
 3609 1906 0E94 0000 		call is_semicont
 3610 190a 8823      		tst r24
 3611 190c 01F4      		brne .+2
 3612 190e 00C0      		rjmp .L108
 274:lp_solve_5.5/lp_wlp.c ****           if((maxlen != 0) && (nchars > maxlen)) {
 3613               		.loc 1 274 0 is_stmt 1
 3614 1910 8C89      		ldd r24,Y+20
 3615 1912 9D89      		ldd r25,Y+21
 3616 1914 892B      		or r24,r25
 3617 1916 01F0      		breq .L109
 3618               		.loc 1 274 0 is_stmt 0 discriminator 1
 3619 1918 2F81      		ldd r18,Y+7
 3620 191a 3885      		ldd r19,Y+8
 3621 191c 8C89      		ldd r24,Y+20
 3622 191e 9D89      		ldd r25,Y+21
 3623 1920 8217      		cp r24,r18
 3624 1922 9307      		cpc r25,r19
 3625 1924 04F4      		brge .L109
 275:lp_solve_5.5/lp_wlp.c ****             write_data(userhandle, write_modeldata, "%s", "\n");
 3626               		.loc 1 275 0 is_stmt 1
 3627 1926 80E0      		ldi r24,lo8(.LC0)
 3628 1928 90E0      		ldi r25,hi8(.LC0)
 3629 192a 892F      		mov r24,r25
 3630 192c 8F93      		push r24
 3631 192e 80E0      		ldi r24,lo8(.LC0)
 3632 1930 90E0      		ldi r25,hi8(.LC0)
 3633 1932 8F93      		push r24
 3634 1934 80E0      		ldi r24,lo8(.LC10)
 3635 1936 90E0      		ldi r25,hi8(.LC10)
 3636 1938 892F      		mov r24,r25
 3637 193a 8F93      		push r24
 3638 193c 80E0      		ldi r24,lo8(.LC10)
 3639 193e 90E0      		ldi r25,hi8(.LC10)
 3640 1940 8F93      		push r24
 3641 1942 89A1      		ldd r24,Y+33
 3642 1944 8F93      		push r24
 3643 1946 88A1      		ldd r24,Y+32
 3644 1948 8F93      		push r24
 3645 194a 8F8D      		ldd r24,Y+31
 3646 194c 8F93      		push r24
 3647 194e 8E8D      		ldd r24,Y+30
 3648 1950 8F93      		push r24
 3649 1952 0E94 0000 		call write_data
 3650 1956 8DB7      		in r24,__SP_L__
 3651 1958 9EB7      		in r25,__SP_H__
 3652 195a 0896      		adiw r24,8
 3653 195c 0FB6      		in __tmp_reg__,__SREG__
 3654 195e F894      		cli
 3655 1960 DEBF      		out __SP_H__,r29
 3656 1962 0FBE      		out __SREG__,__tmp_reg__
 3657 1964 CDBF      		out __SP_L__,r28
 276:lp_solve_5.5/lp_wlp.c ****             nchars = 0;
 3658               		.loc 1 276 0
 3659 1966 1886      		std Y+8,__zero_reg__
 3660 1968 1F82      		std Y+7,__zero_reg__
 3661               	.L109:
 277:lp_solve_5.5/lp_wlp.c ****           }
 278:lp_solve_5.5/lp_wlp.c ****           nchars += write_data(userhandle, write_modeldata, ",%s", get_col_name(lp, i));
 3662               		.loc 1 278 0
 3663 196a 2981      		ldd r18,Y+1
 3664 196c 3A81      		ldd r19,Y+2
 3665 196e 8C8D      		ldd r24,Y+28
 3666 1970 9D8D      		ldd r25,Y+29
 3667 1972 B901      		movw r22,r18
 3668 1974 0E94 0000 		call get_col_name
 3669 1978 292F      		mov r18,r25
 3670 197a 2F93      		push r18
 3671 197c 8F93      		push r24
 3672 197e 80E0      		ldi r24,lo8(.LC43)
 3673 1980 90E0      		ldi r25,hi8(.LC43)
 3674 1982 892F      		mov r24,r25
 3675 1984 8F93      		push r24
 3676 1986 80E0      		ldi r24,lo8(.LC43)
 3677 1988 90E0      		ldi r25,hi8(.LC43)
 3678 198a 8F93      		push r24
 3679 198c 89A1      		ldd r24,Y+33
 3680 198e 8F93      		push r24
 3681 1990 88A1      		ldd r24,Y+32
 3682 1992 8F93      		push r24
 3683 1994 8F8D      		ldd r24,Y+31
 3684 1996 8F93      		push r24
 3685 1998 8E8D      		ldd r24,Y+30
 3686 199a 8F93      		push r24
 3687 199c 0E94 0000 		call write_data
 3688 19a0 EDB7      		in r30,__SP_L__
 3689 19a2 FEB7      		in r31,__SP_H__
 3690 19a4 3896      		adiw r30,8
 3691 19a6 0FB6      		in __tmp_reg__,__SREG__
 3692 19a8 F894      		cli
 3693 19aa DEBF      		out __SP_H__,r29
 3694 19ac 0FBE      		out __SREG__,__tmp_reg__
 3695 19ae CDBF      		out __SP_L__,r28
 3696 19b0 9C01      		movw r18,r24
 3697 19b2 8F81      		ldd r24,Y+7
 3698 19b4 9885      		ldd r25,Y+8
 3699 19b6 820F      		add r24,r18
 3700 19b8 931F      		adc r25,r19
 3701 19ba 9887      		std Y+8,r25
 3702 19bc 8F83      		std Y+7,r24
 3703               	.L108:
 272:lp_solve_5.5/lp_wlp.c ****         if((!is_splitvar(lp, i)) && (is_semicont(lp, i))) {
 3704               		.loc 1 272 0
 3705 19be 8981      		ldd r24,Y+1
 3706 19c0 9A81      		ldd r25,Y+2
 3707 19c2 0196      		adiw r24,1
 3708 19c4 9A83      		std Y+2,r25
 3709 19c6 8983      		std Y+1,r24
 3710               	.L107:
 272:lp_solve_5.5/lp_wlp.c ****         if((!is_splitvar(lp, i)) && (is_semicont(lp, i))) {
 3711               		.loc 1 272 0 is_stmt 0 discriminator 1
 3712 19c8 2981      		ldd r18,Y+1
 3713 19ca 3A81      		ldd r19,Y+2
 3714 19cc 8A89      		ldd r24,Y+18
 3715 19ce 9B89      		ldd r25,Y+19
 3716 19d0 8217      		cp r24,r18
 3717 19d2 9307      		cpc r25,r19
 3718 19d4 04F0      		brlt .+2
 3719 19d6 00C0      		rjmp .L110
 279:lp_solve_5.5/lp_wlp.c ****         }
 280:lp_solve_5.5/lp_wlp.c ****       write_data(userhandle, write_modeldata, ";\n");
 3720               		.loc 1 280 0 is_stmt 1
 3721 19d8 80E0      		ldi r24,lo8(.LC16)
 3722 19da 90E0      		ldi r25,hi8(.LC16)
 3723 19dc 892F      		mov r24,r25
 3724 19de 8F93      		push r24
 3725 19e0 80E0      		ldi r24,lo8(.LC16)
 3726 19e2 90E0      		ldi r25,hi8(.LC16)
 3727 19e4 8F93      		push r24
 3728 19e6 89A1      		ldd r24,Y+33
 3729 19e8 8F93      		push r24
 3730 19ea 88A1      		ldd r24,Y+32
 3731 19ec 8F93      		push r24
 3732 19ee 8F8D      		ldd r24,Y+31
 3733 19f0 8F93      		push r24
 3734 19f2 8E8D      		ldd r24,Y+30
 3735 19f4 8F93      		push r24
 3736 19f6 0E94 0000 		call write_data
 3737 19fa 0F90      		pop __tmp_reg__
 3738 19fc 0F90      		pop __tmp_reg__
 3739 19fe 0F90      		pop __tmp_reg__
 3740 1a00 0F90      		pop __tmp_reg__
 3741 1a02 0F90      		pop __tmp_reg__
 3742 1a04 0F90      		pop __tmp_reg__
 3743               	.L103:
 281:lp_solve_5.5/lp_wlp.c ****     }
 282:lp_solve_5.5/lp_wlp.c ****   }
 283:lp_solve_5.5/lp_wlp.c **** 
 284:lp_solve_5.5/lp_wlp.c ****   /* Write optional SOS section */
 285:lp_solve_5.5/lp_wlp.c ****   if(SOS_count(lp) > 0) {
 3744               		.loc 1 285 0
 3745 1a06 8C8D      		ldd r24,Y+28
 3746 1a08 9D8D      		ldd r25,Y+29
 3747 1a0a 0E94 0000 		call SOS_count
 3748 1a0e 1816      		cp __zero_reg__,r24
 3749 1a10 1906      		cpc __zero_reg__,r25
 3750 1a12 04F0      		brlt .+2
 3751 1a14 00C0      		rjmp .L111
 3752               	.LBB2:
 286:lp_solve_5.5/lp_wlp.c ****     SOSgroup *SOS = lp->SOS;
 3753               		.loc 1 286 0
 3754 1a16 8C8D      		ldd r24,Y+28
 3755 1a18 9D8D      		ldd r25,Y+29
 3756 1a1a 8256      		subi r24,98
 3757 1a1c 9D4F      		sbci r25,-3
 3758 1a1e FC01      		movw r30,r24
 3759 1a20 8081      		ld r24,Z
 3760 1a22 9181      		ldd r25,Z+1
 3761 1a24 9F8B      		std Y+23,r25
 3762 1a26 8E8B      		std Y+22,r24
 287:lp_solve_5.5/lp_wlp.c ****     write_lpcomment(userhandle, write_modeldata, "SOS definitions", TRUE);
 3763               		.loc 1 287 0
 3764 1a28 68A1      		ldd r22,Y+32
 3765 1a2a 79A1      		ldd r23,Y+33
 3766 1a2c 8E8D      		ldd r24,Y+30
 3767 1a2e 9F8D      		ldd r25,Y+31
 3768 1a30 21E0      		ldi r18,lo8(1)
 3769 1a32 40E0      		ldi r20,lo8(.LC46)
 3770 1a34 50E0      		ldi r21,hi8(.LC46)
 3771 1a36 0E94 0000 		call write_lpcomment
 288:lp_solve_5.5/lp_wlp.c ****     write_data(userhandle, write_modeldata, "SOS\n");
 3772               		.loc 1 288 0
 3773 1a3a 80E0      		ldi r24,lo8(.LC47)
 3774 1a3c 90E0      		ldi r25,hi8(.LC47)
 3775 1a3e 892F      		mov r24,r25
 3776 1a40 8F93      		push r24
 3777 1a42 80E0      		ldi r24,lo8(.LC47)
 3778 1a44 90E0      		ldi r25,hi8(.LC47)
 3779 1a46 8F93      		push r24
 3780 1a48 89A1      		ldd r24,Y+33
 3781 1a4a 8F93      		push r24
 3782 1a4c 88A1      		ldd r24,Y+32
 3783 1a4e 8F93      		push r24
 3784 1a50 8F8D      		ldd r24,Y+31
 3785 1a52 8F93      		push r24
 3786 1a54 8E8D      		ldd r24,Y+30
 3787 1a56 8F93      		push r24
 3788 1a58 0E94 0000 		call write_data
 3789 1a5c 0F90      		pop __tmp_reg__
 3790 1a5e 0F90      		pop __tmp_reg__
 3791 1a60 0F90      		pop __tmp_reg__
 3792 1a62 0F90      		pop __tmp_reg__
 3793 1a64 0F90      		pop __tmp_reg__
 3794 1a66 0F90      		pop __tmp_reg__
 289:lp_solve_5.5/lp_wlp.c ****     for(b = 0, i = 0; i < SOS->sos_count; b = SOS->sos_list[i]->priority, i++) {
 3795               		.loc 1 289 0
 3796 1a68 1E82      		std Y+6,__zero_reg__
 3797 1a6a 1D82      		std Y+5,__zero_reg__
 3798 1a6c 1A82      		std Y+2,__zero_reg__
 3799 1a6e 1982      		std Y+1,__zero_reg__
 3800 1a70 00C0      		rjmp .L112
 3801               	.L127:
 290:lp_solve_5.5/lp_wlp.c ****       nchars = write_data(userhandle, write_modeldata, "%s: ",
 291:lp_solve_5.5/lp_wlp.c ****               (SOS->sos_list[i]->name == NULL) ||
 3802               		.loc 1 291 0
 3803 1a72 8E89      		ldd r24,Y+22
 3804 1a74 9F89      		ldd r25,Y+23
 3805 1a76 FC01      		movw r30,r24
 3806 1a78 2281      		ldd r18,Z+2
 3807 1a7a 3381      		ldd r19,Z+3
 3808 1a7c 8981      		ldd r24,Y+1
 3809 1a7e 9A81      		ldd r25,Y+2
 3810 1a80 880F      		lsl r24
 3811 1a82 991F      		rol r25
 3812 1a84 820F      		add r24,r18
 3813 1a86 931F      		adc r25,r19
 3814 1a88 FC01      		movw r30,r24
 3815 1a8a 8081      		ld r24,Z
 3816 1a8c 9181      		ldd r25,Z+1
 3817 1a8e FC01      		movw r30,r24
 3818 1a90 8481      		ldd r24,Z+4
 3819 1a92 9581      		ldd r25,Z+5
 290:lp_solve_5.5/lp_wlp.c ****       nchars = write_data(userhandle, write_modeldata, "%s: ",
 3820               		.loc 1 290 0
 3821 1a94 892B      		or r24,r25
 3822 1a96 01F0      		breq .L113
 292:lp_solve_5.5/lp_wlp.c ****               (*SOS->sos_list[i]->name==0) ? "SOS" : SOS->sos_list[i]->name); /* formatnumber12((do
 3823               		.loc 1 292 0
 3824 1a98 8E89      		ldd r24,Y+22
 3825 1a9a 9F89      		ldd r25,Y+23
 3826 1a9c FC01      		movw r30,r24
 3827 1a9e 2281      		ldd r18,Z+2
 3828 1aa0 3381      		ldd r19,Z+3
 3829 1aa2 8981      		ldd r24,Y+1
 3830 1aa4 9A81      		ldd r25,Y+2
 3831 1aa6 880F      		lsl r24
 3832 1aa8 991F      		rol r25
 3833 1aaa 820F      		add r24,r18
 3834 1aac 931F      		adc r25,r19
 3835 1aae FC01      		movw r30,r24
 3836 1ab0 8081      		ld r24,Z
 3837 1ab2 9181      		ldd r25,Z+1
 3838 1ab4 FC01      		movw r30,r24
 3839 1ab6 8481      		ldd r24,Z+4
 3840 1ab8 9581      		ldd r25,Z+5
 3841 1aba FC01      		movw r30,r24
 3842 1abc 8081      		ld r24,Z
 291:lp_solve_5.5/lp_wlp.c ****               (*SOS->sos_list[i]->name==0) ? "SOS" : SOS->sos_list[i]->name); /* formatnumber12((do
 3843               		.loc 1 291 0
 3844 1abe 8823      		tst r24
 3845 1ac0 01F0      		breq .L113
 3846               		.loc 1 292 0
 3847 1ac2 8E89      		ldd r24,Y+22
 3848 1ac4 9F89      		ldd r25,Y+23
 3849 1ac6 FC01      		movw r30,r24
 3850 1ac8 2281      		ldd r18,Z+2
 3851 1aca 3381      		ldd r19,Z+3
 3852 1acc 8981      		ldd r24,Y+1
 3853 1ace 9A81      		ldd r25,Y+2
 3854 1ad0 880F      		lsl r24
 3855 1ad2 991F      		rol r25
 3856 1ad4 820F      		add r24,r18
 3857 1ad6 931F      		adc r25,r19
 3858 1ad8 FC01      		movw r30,r24
 3859 1ada 8081      		ld r24,Z
 3860 1adc 9181      		ldd r25,Z+1
 290:lp_solve_5.5/lp_wlp.c ****       nchars = write_data(userhandle, write_modeldata, "%s: ",
 3861               		.loc 1 290 0
 3862 1ade FC01      		movw r30,r24
 3863 1ae0 8481      		ldd r24,Z+4
 3864 1ae2 9581      		ldd r25,Z+5
 3865 1ae4 00C0      		rjmp .L114
 3866               	.L113:
 290:lp_solve_5.5/lp_wlp.c ****       nchars = write_data(userhandle, write_modeldata, "%s: ",
 3867               		.loc 1 290 0 is_stmt 0 discriminator 1
 3868 1ae6 80E0      		ldi r24,lo8(.LC48)
 3869 1ae8 90E0      		ldi r25,hi8(.LC48)
 3870               	.L114:
 290:lp_solve_5.5/lp_wlp.c ****       nchars = write_data(userhandle, write_modeldata, "%s: ",
 3871               		.loc 1 290 0 discriminator 3
 3872 1aea 292F      		mov r18,r25
 3873 1aec 2F93      		push r18
 3874 1aee 8F93      		push r24
 3875 1af0 80E0      		ldi r24,lo8(.LC18)
 3876 1af2 90E0      		ldi r25,hi8(.LC18)
 3877 1af4 892F      		mov r24,r25
 3878 1af6 8F93      		push r24
 3879 1af8 80E0      		ldi r24,lo8(.LC18)
 3880 1afa 90E0      		ldi r25,hi8(.LC18)
 3881 1afc 8F93      		push r24
 3882 1afe 89A1      		ldd r24,Y+33
 3883 1b00 8F93      		push r24
 3884 1b02 88A1      		ldd r24,Y+32
 3885 1b04 8F93      		push r24
 3886 1b06 8F8D      		ldd r24,Y+31
 3887 1b08 8F93      		push r24
 3888 1b0a 8E8D      		ldd r24,Y+30
 3889 1b0c 8F93      		push r24
 3890 1b0e 0E94 0000 		call write_data
 3891 1b12 2DB7      		in r18,__SP_L__
 3892 1b14 3EB7      		in r19,__SP_H__
 3893 1b16 285F      		subi r18,-8
 3894 1b18 3F4F      		sbci r19,-1
 3895 1b1a 0FB6      		in __tmp_reg__,__SREG__
 3896 1b1c F894      		cli
 3897 1b1e DEBF      		out __SP_H__,r29
 3898 1b20 0FBE      		out __SREG__,__tmp_reg__
 3899 1b22 CDBF      		out __SP_L__,r28
 3900 1b24 9887      		std Y+8,r25
 3901 1b26 8F83      		std Y+7,r24
 293:lp_solve_5.5/lp_wlp.c **** 
 294:lp_solve_5.5/lp_wlp.c ****       for(a = 0.0, j = 1; j <= SOS->sos_list[i]->size; a = SOS->sos_list[i]->weights[j], j++) {
 3902               		.loc 1 294 0 is_stmt 1 discriminator 3
 3903 1b28 1A86      		std Y+10,__zero_reg__
 3904 1b2a 1B86      		std Y+11,__zero_reg__
 3905 1b2c 1C86      		std Y+12,__zero_reg__
 3906 1b2e 1D86      		std Y+13,__zero_reg__
 3907 1b30 81E0      		ldi r24,lo8(1)
 3908 1b32 90E0      		ldi r25,0
 3909 1b34 9C83      		std Y+4,r25
 3910 1b36 8B83      		std Y+3,r24
 3911 1b38 00C0      		rjmp .L115
 3912               	.L124:
 295:lp_solve_5.5/lp_wlp.c ****         if((maxlen != 0) && (nchars > maxlen)) {
 3913               		.loc 1 295 0
 3914 1b3a 8C89      		ldd r24,Y+20
 3915 1b3c 9D89      		ldd r25,Y+21
 3916 1b3e 892B      		or r24,r25
 3917 1b40 01F0      		breq .L116
 3918               		.loc 1 295 0 is_stmt 0 discriminator 1
 3919 1b42 2F81      		ldd r18,Y+7
 3920 1b44 3885      		ldd r19,Y+8
 3921 1b46 8C89      		ldd r24,Y+20
 3922 1b48 9D89      		ldd r25,Y+21
 3923 1b4a 8217      		cp r24,r18
 3924 1b4c 9307      		cpc r25,r19
 3925 1b4e 04F4      		brge .L116
 296:lp_solve_5.5/lp_wlp.c ****           write_data(userhandle, write_modeldata, "%s", "\n");
 3926               		.loc 1 296 0 is_stmt 1
 3927 1b50 80E0      		ldi r24,lo8(.LC0)
 3928 1b52 90E0      		ldi r25,hi8(.LC0)
 3929 1b54 892F      		mov r24,r25
 3930 1b56 8F93      		push r24
 3931 1b58 80E0      		ldi r24,lo8(.LC0)
 3932 1b5a 90E0      		ldi r25,hi8(.LC0)
 3933 1b5c 8F93      		push r24
 3934 1b5e 80E0      		ldi r24,lo8(.LC10)
 3935 1b60 90E0      		ldi r25,hi8(.LC10)
 3936 1b62 892F      		mov r24,r25
 3937 1b64 8F93      		push r24
 3938 1b66 80E0      		ldi r24,lo8(.LC10)
 3939 1b68 90E0      		ldi r25,hi8(.LC10)
 3940 1b6a 8F93      		push r24
 3941 1b6c 89A1      		ldd r24,Y+33
 3942 1b6e 8F93      		push r24
 3943 1b70 88A1      		ldd r24,Y+32
 3944 1b72 8F93      		push r24
 3945 1b74 8F8D      		ldd r24,Y+31
 3946 1b76 8F93      		push r24
 3947 1b78 8E8D      		ldd r24,Y+30
 3948 1b7a 8F93      		push r24
 3949 1b7c 0E94 0000 		call write_data
 3950 1b80 8DB7      		in r24,__SP_L__
 3951 1b82 9EB7      		in r25,__SP_H__
 3952 1b84 0896      		adiw r24,8
 3953 1b86 0FB6      		in __tmp_reg__,__SREG__
 3954 1b88 F894      		cli
 3955 1b8a DEBF      		out __SP_H__,r29
 3956 1b8c 0FBE      		out __SREG__,__tmp_reg__
 3957 1b8e CDBF      		out __SP_L__,r28
 297:lp_solve_5.5/lp_wlp.c ****           nchars = 0;
 3958               		.loc 1 297 0
 3959 1b90 1886      		std Y+8,__zero_reg__
 3960 1b92 1F82      		std Y+7,__zero_reg__
 3961               	.L116:
 298:lp_solve_5.5/lp_wlp.c ****         }
 299:lp_solve_5.5/lp_wlp.c ****         if(SOS->sos_list[i]->weights[j] == ++a)
 3962               		.loc 1 299 0
 3963 1b94 8E89      		ldd r24,Y+22
 3964 1b96 9F89      		ldd r25,Y+23
 3965 1b98 FC01      		movw r30,r24
 3966 1b9a 2281      		ldd r18,Z+2
 3967 1b9c 3381      		ldd r19,Z+3
 3968 1b9e 8981      		ldd r24,Y+1
 3969 1ba0 9A81      		ldd r25,Y+2
 3970 1ba2 880F      		lsl r24
 3971 1ba4 991F      		rol r25
 3972 1ba6 820F      		add r24,r18
 3973 1ba8 931F      		adc r25,r19
 3974 1baa FC01      		movw r30,r24
 3975 1bac 8081      		ld r24,Z
 3976 1bae 9181      		ldd r25,Z+1
 3977 1bb0 FC01      		movw r30,r24
 3978 1bb2 2785      		ldd r18,Z+15
 3979 1bb4 3089      		ldd r19,Z+16
 3980 1bb6 8B81      		ldd r24,Y+3
 3981 1bb8 9C81      		ldd r25,Y+4
 3982 1bba 880F      		lsl r24
 3983 1bbc 991F      		rol r25
 3984 1bbe 880F      		lsl r24
 3985 1bc0 991F      		rol r25
 3986 1bc2 820F      		add r24,r18
 3987 1bc4 931F      		adc r25,r19
 3988 1bc6 FC01      		movw r30,r24
 3989 1bc8 C080      		ld r12,Z
 3990 1bca D180      		ldd r13,Z+1
 3991 1bcc E280      		ldd r14,Z+2
 3992 1bce F380      		ldd r15,Z+3
 3993 1bd0 20E0      		ldi r18,0
 3994 1bd2 30E0      		ldi r19,0
 3995 1bd4 40E8      		ldi r20,lo8(-128)
 3996 1bd6 5FE3      		ldi r21,lo8(63)
 3997 1bd8 6A85      		ldd r22,Y+10
 3998 1bda 7B85      		ldd r23,Y+11
 3999 1bdc 8C85      		ldd r24,Y+12
 4000 1bde 9D85      		ldd r25,Y+13
 4001 1be0 0E94 0000 		call __addsf3
 4002 1be4 DC01      		movw r26,r24
 4003 1be6 CB01      		movw r24,r22
 4004 1be8 8A87      		std Y+10,r24
 4005 1bea 9B87      		std Y+11,r25
 4006 1bec AC87      		std Y+12,r26
 4007 1bee BD87      		std Y+13,r27
 4008 1bf0 2A85      		ldd r18,Y+10
 4009 1bf2 3B85      		ldd r19,Y+11
 4010 1bf4 4C85      		ldd r20,Y+12
 4011 1bf6 5D85      		ldd r21,Y+13
 4012 1bf8 C701      		movw r24,r14
 4013 1bfa B601      		movw r22,r12
 4014 1bfc 0E94 0000 		call __eqsf2
 4015 1c00 8823      		tst r24
 4016 1c02 01F0      		breq .+2
 4017 1c04 00C0      		rjmp .L161
 300:lp_solve_5.5/lp_wlp.c ****           nchars += write_data(userhandle, write_modeldata, "%s%s",
 301:lp_solve_5.5/lp_wlp.c ****                   (j > 1) ? "," : "",
 302:lp_solve_5.5/lp_wlp.c ****                   get_col_name(lp, SOS->sos_list[i]->members[j]));
 4018               		.loc 1 302 0
 4019 1c06 8E89      		ldd r24,Y+22
 4020 1c08 9F89      		ldd r25,Y+23
 4021 1c0a FC01      		movw r30,r24
 4022 1c0c 2281      		ldd r18,Z+2
 4023 1c0e 3381      		ldd r19,Z+3
 4024 1c10 8981      		ldd r24,Y+1
 4025 1c12 9A81      		ldd r25,Y+2
 4026 1c14 880F      		lsl r24
 4027 1c16 991F      		rol r25
 4028 1c18 820F      		add r24,r18
 4029 1c1a 931F      		adc r25,r19
 4030 1c1c FC01      		movw r30,r24
 4031 1c1e 8081      		ld r24,Z
 4032 1c20 9181      		ldd r25,Z+1
 4033 1c22 FC01      		movw r30,r24
 4034 1c24 2585      		ldd r18,Z+13
 4035 1c26 3685      		ldd r19,Z+14
 4036 1c28 8B81      		ldd r24,Y+3
 4037 1c2a 9C81      		ldd r25,Y+4
 4038 1c2c 880F      		lsl r24
 4039 1c2e 991F      		rol r25
 4040 1c30 820F      		add r24,r18
 4041 1c32 931F      		adc r25,r19
 300:lp_solve_5.5/lp_wlp.c ****           nchars += write_data(userhandle, write_modeldata, "%s%s",
 4042               		.loc 1 300 0
 4043 1c34 FC01      		movw r30,r24
 4044 1c36 2081      		ld r18,Z
 4045 1c38 3181      		ldd r19,Z+1
 4046 1c3a 8C8D      		ldd r24,Y+28
 4047 1c3c 9D8D      		ldd r25,Y+29
 4048 1c3e B901      		movw r22,r18
 4049 1c40 0E94 0000 		call get_col_name
 4050 1c44 9C01      		movw r18,r24
 4051 1c46 8B81      		ldd r24,Y+3
 4052 1c48 9C81      		ldd r25,Y+4
 4053 1c4a 0297      		sbiw r24,2
 4054 1c4c 04F0      		brlt .L119
 300:lp_solve_5.5/lp_wlp.c ****           nchars += write_data(userhandle, write_modeldata, "%s%s",
 4055               		.loc 1 300 0 is_stmt 0 discriminator 1
 4056 1c4e 80E0      		ldi r24,lo8(.LC49)
 4057 1c50 90E0      		ldi r25,hi8(.LC49)
 4058 1c52 00C0      		rjmp .L120
 4059               	.L119:
 300:lp_solve_5.5/lp_wlp.c ****           nchars += write_data(userhandle, write_modeldata, "%s%s",
 4060               		.loc 1 300 0 discriminator 2
 4061 1c54 80E0      		ldi r24,lo8(.LC1)
 4062 1c56 90E0      		ldi r25,hi8(.LC1)
 4063               	.L120:
 300:lp_solve_5.5/lp_wlp.c ****           nchars += write_data(userhandle, write_modeldata, "%s%s",
 4064               		.loc 1 300 0 discriminator 4
 4065 1c58 432F      		mov r20,r19
 4066 1c5a 4F93      		push r20
 4067 1c5c 2F93      		push r18
 4068 1c5e 292F      		mov r18,r25
 4069 1c60 2F93      		push r18
 4070 1c62 8F93      		push r24
 4071 1c64 80E0      		ldi r24,lo8(.LC50)
 4072 1c66 90E0      		ldi r25,hi8(.LC50)
 4073 1c68 892F      		mov r24,r25
 4074 1c6a 8F93      		push r24
 4075 1c6c 80E0      		ldi r24,lo8(.LC50)
 4076 1c6e 90E0      		ldi r25,hi8(.LC50)
 4077 1c70 8F93      		push r24
 4078 1c72 89A1      		ldd r24,Y+33
 4079 1c74 8F93      		push r24
 4080 1c76 88A1      		ldd r24,Y+32
 4081 1c78 8F93      		push r24
 4082 1c7a 8F8D      		ldd r24,Y+31
 4083 1c7c 8F93      		push r24
 4084 1c7e 8E8D      		ldd r24,Y+30
 4085 1c80 8F93      		push r24
 4086 1c82 0E94 0000 		call write_data
 4087 1c86 2DB7      		in r18,__SP_L__
 4088 1c88 3EB7      		in r19,__SP_H__
 4089 1c8a 265F      		subi r18,-10
 4090 1c8c 3F4F      		sbci r19,-1
 4091 1c8e 0FB6      		in __tmp_reg__,__SREG__
 4092 1c90 F894      		cli
 4093 1c92 DEBF      		out __SP_H__,r29
 4094 1c94 0FBE      		out __SREG__,__tmp_reg__
 4095 1c96 CDBF      		out __SP_L__,r28
 4096 1c98 9C01      		movw r18,r24
 4097 1c9a 8F81      		ldd r24,Y+7
 4098 1c9c 9885      		ldd r25,Y+8
 4099 1c9e 820F      		add r24,r18
 4100 1ca0 931F      		adc r25,r19
 4101 1ca2 9887      		std Y+8,r25
 4102 1ca4 8F83      		std Y+7,r24
 4103 1ca6 00C0      		rjmp .L121
 4104               	.L161:
 303:lp_solve_5.5/lp_wlp.c ****         else
 304:lp_solve_5.5/lp_wlp.c ****           nchars += write_data(userhandle, write_modeldata, "%s%s:%.12g",
 305:lp_solve_5.5/lp_wlp.c ****                   (j > 1) ? "," : "",
 306:lp_solve_5.5/lp_wlp.c ****                   get_col_name(lp, SOS->sos_list[i]->members[j]),
 307:lp_solve_5.5/lp_wlp.c ****         SOS->sos_list[i]->weights[j]);
 4105               		.loc 1 307 0 is_stmt 1
 4106 1ca8 8E89      		ldd r24,Y+22
 4107 1caa 9F89      		ldd r25,Y+23
 4108 1cac FC01      		movw r30,r24
 4109 1cae 2281      		ldd r18,Z+2
 4110 1cb0 3381      		ldd r19,Z+3
 4111 1cb2 8981      		ldd r24,Y+1
 4112 1cb4 9A81      		ldd r25,Y+2
 4113 1cb6 880F      		lsl r24
 4114 1cb8 991F      		rol r25
 4115 1cba 820F      		add r24,r18
 4116 1cbc 931F      		adc r25,r19
 4117 1cbe FC01      		movw r30,r24
 4118 1cc0 8081      		ld r24,Z
 4119 1cc2 9181      		ldd r25,Z+1
 4120 1cc4 FC01      		movw r30,r24
 4121 1cc6 2785      		ldd r18,Z+15
 4122 1cc8 3089      		ldd r19,Z+16
 4123 1cca 8B81      		ldd r24,Y+3
 4124 1ccc 9C81      		ldd r25,Y+4
 4125 1cce 880F      		lsl r24
 4126 1cd0 991F      		rol r25
 4127 1cd2 880F      		lsl r24
 4128 1cd4 991F      		rol r25
 4129 1cd6 820F      		add r24,r18
 4130 1cd8 931F      		adc r25,r19
 304:lp_solve_5.5/lp_wlp.c ****                   (j > 1) ? "," : "",
 4131               		.loc 1 304 0
 4132 1cda FC01      		movw r30,r24
 4133 1cdc C080      		ld r12,Z
 4134 1cde D180      		ldd r13,Z+1
 4135 1ce0 E280      		ldd r14,Z+2
 4136 1ce2 F380      		ldd r15,Z+3
 306:lp_solve_5.5/lp_wlp.c ****         SOS->sos_list[i]->weights[j]);
 4137               		.loc 1 306 0
 4138 1ce4 8E89      		ldd r24,Y+22
 4139 1ce6 9F89      		ldd r25,Y+23
 4140 1ce8 FC01      		movw r30,r24
 4141 1cea 2281      		ldd r18,Z+2
 4142 1cec 3381      		ldd r19,Z+3
 4143 1cee 8981      		ldd r24,Y+1
 4144 1cf0 9A81      		ldd r25,Y+2
 4145 1cf2 880F      		lsl r24
 4146 1cf4 991F      		rol r25
 4147 1cf6 820F      		add r24,r18
 4148 1cf8 931F      		adc r25,r19
 4149 1cfa FC01      		movw r30,r24
 4150 1cfc 8081      		ld r24,Z
 4151 1cfe 9181      		ldd r25,Z+1
 4152 1d00 FC01      		movw r30,r24
 4153 1d02 2585      		ldd r18,Z+13
 4154 1d04 3685      		ldd r19,Z+14
 4155 1d06 8B81      		ldd r24,Y+3
 4156 1d08 9C81      		ldd r25,Y+4
 4157 1d0a 880F      		lsl r24
 4158 1d0c 991F      		rol r25
 4159 1d0e 820F      		add r24,r18
 4160 1d10 931F      		adc r25,r19
 304:lp_solve_5.5/lp_wlp.c ****                   (j > 1) ? "," : "",
 4161               		.loc 1 304 0
 4162 1d12 FC01      		movw r30,r24
 4163 1d14 2081      		ld r18,Z
 4164 1d16 3181      		ldd r19,Z+1
 4165 1d18 8C8D      		ldd r24,Y+28
 4166 1d1a 9D8D      		ldd r25,Y+29
 4167 1d1c B901      		movw r22,r18
 4168 1d1e 0E94 0000 		call get_col_name
 4169 1d22 9C01      		movw r18,r24
 4170 1d24 8B81      		ldd r24,Y+3
 4171 1d26 9C81      		ldd r25,Y+4
 4172 1d28 0297      		sbiw r24,2
 4173 1d2a 04F0      		brlt .L122
 304:lp_solve_5.5/lp_wlp.c ****                   (j > 1) ? "," : "",
 4174               		.loc 1 304 0 is_stmt 0 discriminator 1
 4175 1d2c 80E0      		ldi r24,lo8(.LC49)
 4176 1d2e 90E0      		ldi r25,hi8(.LC49)
 4177 1d30 00C0      		rjmp .L123
 4178               	.L122:
 304:lp_solve_5.5/lp_wlp.c ****                   (j > 1) ? "," : "",
 4179               		.loc 1 304 0 discriminator 2
 4180 1d32 80E0      		ldi r24,lo8(.LC1)
 4181 1d34 90E0      		ldi r25,hi8(.LC1)
 4182               	.L123:
 304:lp_solve_5.5/lp_wlp.c ****                   (j > 1) ? "," : "",
 4183               		.loc 1 304 0 discriminator 4
 4184 1d36 4F2D      		mov r20,r15
 4185 1d38 4F93      		push r20
 4186 1d3a 4E2D      		mov r20,r14
 4187 1d3c 4F93      		push r20
 4188 1d3e 4D2D      		mov r20,r13
 4189 1d40 4F93      		push r20
 4190 1d42 4C2D      		mov r20,r12
 4191 1d44 4F93      		push r20
 4192 1d46 432F      		mov r20,r19
 4193 1d48 4F93      		push r20
 4194 1d4a 2F93      		push r18
 4195 1d4c 292F      		mov r18,r25
 4196 1d4e 2F93      		push r18
 4197 1d50 8F93      		push r24
 4198 1d52 80E0      		ldi r24,lo8(.LC51)
 4199 1d54 90E0      		ldi r25,hi8(.LC51)
 4200 1d56 892F      		mov r24,r25
 4201 1d58 8F93      		push r24
 4202 1d5a 80E0      		ldi r24,lo8(.LC51)
 4203 1d5c 90E0      		ldi r25,hi8(.LC51)
 4204 1d5e 8F93      		push r24
 4205 1d60 89A1      		ldd r24,Y+33
 4206 1d62 8F93      		push r24
 4207 1d64 88A1      		ldd r24,Y+32
 4208 1d66 8F93      		push r24
 4209 1d68 8F8D      		ldd r24,Y+31
 4210 1d6a 8F93      		push r24
 4211 1d6c 8E8D      		ldd r24,Y+30
 4212 1d6e 8F93      		push r24
 4213 1d70 0E94 0000 		call write_data
 4214 1d74 2DB7      		in r18,__SP_L__
 4215 1d76 3EB7      		in r19,__SP_H__
 4216 1d78 225F      		subi r18,-14
 4217 1d7a 3F4F      		sbci r19,-1
 4218 1d7c 0FB6      		in __tmp_reg__,__SREG__
 4219 1d7e F894      		cli
 4220 1d80 DEBF      		out __SP_H__,r29
 4221 1d82 0FBE      		out __SREG__,__tmp_reg__
 4222 1d84 CDBF      		out __SP_L__,r28
 4223 1d86 9C01      		movw r18,r24
 4224 1d88 8F81      		ldd r24,Y+7
 4225 1d8a 9885      		ldd r25,Y+8
 4226 1d8c 820F      		add r24,r18
 4227 1d8e 931F      		adc r25,r19
 4228 1d90 9887      		std Y+8,r25
 4229 1d92 8F83      		std Y+7,r24
 4230               	.L121:
 294:lp_solve_5.5/lp_wlp.c ****         if((maxlen != 0) && (nchars > maxlen)) {
 4231               		.loc 1 294 0 is_stmt 1 discriminator 2
 4232 1d94 8E89      		ldd r24,Y+22
 4233 1d96 9F89      		ldd r25,Y+23
 4234 1d98 FC01      		movw r30,r24
 4235 1d9a 2281      		ldd r18,Z+2
 4236 1d9c 3381      		ldd r19,Z+3
 4237 1d9e 8981      		ldd r24,Y+1
 4238 1da0 9A81      		ldd r25,Y+2
 4239 1da2 880F      		lsl r24
 4240 1da4 991F      		rol r25
 4241 1da6 820F      		add r24,r18
 4242 1da8 931F      		adc r25,r19
 4243 1daa FC01      		movw r30,r24
 4244 1dac 8081      		ld r24,Z
 4245 1dae 9181      		ldd r25,Z+1
 4246 1db0 FC01      		movw r30,r24
 4247 1db2 2785      		ldd r18,Z+15
 4248 1db4 3089      		ldd r19,Z+16
 4249 1db6 8B81      		ldd r24,Y+3
 4250 1db8 9C81      		ldd r25,Y+4
 4251 1dba 880F      		lsl r24
 4252 1dbc 991F      		rol r25
 4253 1dbe 880F      		lsl r24
 4254 1dc0 991F      		rol r25
 4255 1dc2 820F      		add r24,r18
 4256 1dc4 931F      		adc r25,r19
 4257 1dc6 FC01      		movw r30,r24
 4258 1dc8 8081      		ld r24,Z
 4259 1dca 9181      		ldd r25,Z+1
 4260 1dcc A281      		ldd r26,Z+2
 4261 1dce B381      		ldd r27,Z+3
 4262 1dd0 8A87      		std Y+10,r24
 4263 1dd2 9B87      		std Y+11,r25
 4264 1dd4 AC87      		std Y+12,r26
 4265 1dd6 BD87      		std Y+13,r27
 4266 1dd8 8B81      		ldd r24,Y+3
 4267 1dda 9C81      		ldd r25,Y+4
 4268 1ddc 0196      		adiw r24,1
 4269 1dde 9C83      		std Y+4,r25
 4270 1de0 8B83      		std Y+3,r24
 4271               	.L115:
 294:lp_solve_5.5/lp_wlp.c ****         if((maxlen != 0) && (nchars > maxlen)) {
 4272               		.loc 1 294 0 is_stmt 0 discriminator 1
 4273 1de2 8E89      		ldd r24,Y+22
 4274 1de4 9F89      		ldd r25,Y+23
 4275 1de6 FC01      		movw r30,r24
 4276 1de8 2281      		ldd r18,Z+2
 4277 1dea 3381      		ldd r19,Z+3
 4278 1dec 8981      		ldd r24,Y+1
 4279 1dee 9A81      		ldd r25,Y+2
 4280 1df0 880F      		lsl r24
 4281 1df2 991F      		rol r25
 4282 1df4 820F      		add r24,r18
 4283 1df6 931F      		adc r25,r19
 4284 1df8 FC01      		movw r30,r24
 4285 1dfa 8081      		ld r24,Z
 4286 1dfc 9181      		ldd r25,Z+1
 4287 1dfe FC01      		movw r30,r24
 4288 1e00 2185      		ldd r18,Z+9
 4289 1e02 3285      		ldd r19,Z+10
 4290 1e04 8B81      		ldd r24,Y+3
 4291 1e06 9C81      		ldd r25,Y+4
 4292 1e08 2817      		cp r18,r24
 4293 1e0a 3907      		cpc r19,r25
 4294 1e0c 04F0      		brlt .+2
 4295 1e0e 00C0      		rjmp .L124
 308:lp_solve_5.5/lp_wlp.c ****       }
 309:lp_solve_5.5/lp_wlp.c ****       if(SOS->sos_list[i]->priority == ++b)
 4296               		.loc 1 309 0 is_stmt 1
 4297 1e10 8E89      		ldd r24,Y+22
 4298 1e12 9F89      		ldd r25,Y+23
 4299 1e14 FC01      		movw r30,r24
 4300 1e16 2281      		ldd r18,Z+2
 4301 1e18 3381      		ldd r19,Z+3
 4302 1e1a 8981      		ldd r24,Y+1
 4303 1e1c 9A81      		ldd r25,Y+2
 4304 1e1e 880F      		lsl r24
 4305 1e20 991F      		rol r25
 4306 1e22 820F      		add r24,r18
 4307 1e24 931F      		adc r25,r19
 4308 1e26 FC01      		movw r30,r24
 4309 1e28 8081      		ld r24,Z
 4310 1e2a 9181      		ldd r25,Z+1
 4311 1e2c FC01      		movw r30,r24
 4312 1e2e 2385      		ldd r18,Z+11
 4313 1e30 3485      		ldd r19,Z+12
 4314 1e32 8D81      		ldd r24,Y+5
 4315 1e34 9E81      		ldd r25,Y+6
 4316 1e36 0196      		adiw r24,1
 4317 1e38 9E83      		std Y+6,r25
 4318 1e3a 8D83      		std Y+5,r24
 4319 1e3c 8D81      		ldd r24,Y+5
 4320 1e3e 9E81      		ldd r25,Y+6
 4321 1e40 2817      		cp r18,r24
 4322 1e42 3907      		cpc r19,r25
 4323 1e44 01F4      		brne .L125
 310:lp_solve_5.5/lp_wlp.c ****         nchars += write_data(userhandle, write_modeldata, " <= %d;\n", SOS->sos_list[i]->type);
 4324               		.loc 1 310 0
 4325 1e46 8E89      		ldd r24,Y+22
 4326 1e48 9F89      		ldd r25,Y+23
 4327 1e4a FC01      		movw r30,r24
 4328 1e4c 2281      		ldd r18,Z+2
 4329 1e4e 3381      		ldd r19,Z+3
 4330 1e50 8981      		ldd r24,Y+1
 4331 1e52 9A81      		ldd r25,Y+2
 4332 1e54 880F      		lsl r24
 4333 1e56 991F      		rol r25
 4334 1e58 820F      		add r24,r18
 4335 1e5a 931F      		adc r25,r19
 4336 1e5c FC01      		movw r30,r24
 4337 1e5e 8081      		ld r24,Z
 4338 1e60 9181      		ldd r25,Z+1
 4339 1e62 FC01      		movw r30,r24
 4340 1e64 8681      		ldd r24,Z+6
 4341 1e66 9781      		ldd r25,Z+7
 4342 1e68 292F      		mov r18,r25
 4343 1e6a 2F93      		push r18
 4344 1e6c 8F93      		push r24
 4345 1e6e 80E0      		ldi r24,lo8(.LC52)
 4346 1e70 90E0      		ldi r25,hi8(.LC52)
 4347 1e72 892F      		mov r24,r25
 4348 1e74 8F93      		push r24
 4349 1e76 80E0      		ldi r24,lo8(.LC52)
 4350 1e78 90E0      		ldi r25,hi8(.LC52)
 4351 1e7a 8F93      		push r24
 4352 1e7c 89A1      		ldd r24,Y+33
 4353 1e7e 8F93      		push r24
 4354 1e80 88A1      		ldd r24,Y+32
 4355 1e82 8F93      		push r24
 4356 1e84 8F8D      		ldd r24,Y+31
 4357 1e86 8F93      		push r24
 4358 1e88 8E8D      		ldd r24,Y+30
 4359 1e8a 8F93      		push r24
 4360 1e8c 0E94 0000 		call write_data
 4361 1e90 2DB7      		in r18,__SP_L__
 4362 1e92 3EB7      		in r19,__SP_H__
 4363 1e94 285F      		subi r18,-8
 4364 1e96 3F4F      		sbci r19,-1
 4365 1e98 0FB6      		in __tmp_reg__,__SREG__
 4366 1e9a F894      		cli
 4367 1e9c DEBF      		out __SP_H__,r29
 4368 1e9e 0FBE      		out __SREG__,__tmp_reg__
 4369 1ea0 CDBF      		out __SP_L__,r28
 4370 1ea2 9C01      		movw r18,r24
 4371 1ea4 8F81      		ldd r24,Y+7
 4372 1ea6 9885      		ldd r25,Y+8
 4373 1ea8 820F      		add r24,r18
 4374 1eaa 931F      		adc r25,r19
 4375 1eac 9887      		std Y+8,r25
 4376 1eae 8F83      		std Y+7,r24
 4377 1eb0 00C0      		rjmp .L126
 4378               	.L125:
 311:lp_solve_5.5/lp_wlp.c ****       else
 312:lp_solve_5.5/lp_wlp.c ****         nchars += write_data(userhandle, write_modeldata, " <= %d:%d;\n", SOS->sos_list[i]->type, S
 4379               		.loc 1 312 0
 4380 1eb2 8E89      		ldd r24,Y+22
 4381 1eb4 9F89      		ldd r25,Y+23
 4382 1eb6 FC01      		movw r30,r24
 4383 1eb8 2281      		ldd r18,Z+2
 4384 1eba 3381      		ldd r19,Z+3
 4385 1ebc 8981      		ldd r24,Y+1
 4386 1ebe 9A81      		ldd r25,Y+2
 4387 1ec0 880F      		lsl r24
 4388 1ec2 991F      		rol r25
 4389 1ec4 820F      		add r24,r18
 4390 1ec6 931F      		adc r25,r19
 4391 1ec8 FC01      		movw r30,r24
 4392 1eca 8081      		ld r24,Z
 4393 1ecc 9181      		ldd r25,Z+1
 4394 1ece FC01      		movw r30,r24
 4395 1ed0 4385      		ldd r20,Z+11
 4396 1ed2 5485      		ldd r21,Z+12
 4397 1ed4 8E89      		ldd r24,Y+22
 4398 1ed6 9F89      		ldd r25,Y+23
 4399 1ed8 FC01      		movw r30,r24
 4400 1eda 2281      		ldd r18,Z+2
 4401 1edc 3381      		ldd r19,Z+3
 4402 1ede 8981      		ldd r24,Y+1
 4403 1ee0 9A81      		ldd r25,Y+2
 4404 1ee2 880F      		lsl r24
 4405 1ee4 991F      		rol r25
 4406 1ee6 820F      		add r24,r18
 4407 1ee8 931F      		adc r25,r19
 4408 1eea FC01      		movw r30,r24
 4409 1eec 8081      		ld r24,Z
 4410 1eee 9181      		ldd r25,Z+1
 4411 1ef0 FC01      		movw r30,r24
 4412 1ef2 8681      		ldd r24,Z+6
 4413 1ef4 9781      		ldd r25,Z+7
 4414 1ef6 252F      		mov r18,r21
 4415 1ef8 2F93      		push r18
 4416 1efa 242F      		mov r18,r20
 4417 1efc 2F93      		push r18
 4418 1efe 292F      		mov r18,r25
 4419 1f00 2F93      		push r18
 4420 1f02 8F93      		push r24
 4421 1f04 80E0      		ldi r24,lo8(.LC53)
 4422 1f06 90E0      		ldi r25,hi8(.LC53)
 4423 1f08 892F      		mov r24,r25
 4424 1f0a 8F93      		push r24
 4425 1f0c 80E0      		ldi r24,lo8(.LC53)
 4426 1f0e 90E0      		ldi r25,hi8(.LC53)
 4427 1f10 8F93      		push r24
 4428 1f12 89A1      		ldd r24,Y+33
 4429 1f14 8F93      		push r24
 4430 1f16 88A1      		ldd r24,Y+32
 4431 1f18 8F93      		push r24
 4432 1f1a 8F8D      		ldd r24,Y+31
 4433 1f1c 8F93      		push r24
 4434 1f1e 8E8D      		ldd r24,Y+30
 4435 1f20 8F93      		push r24
 4436 1f22 0E94 0000 		call write_data
 4437 1f26 2DB7      		in r18,__SP_L__
 4438 1f28 3EB7      		in r19,__SP_H__
 4439 1f2a 265F      		subi r18,-10
 4440 1f2c 3F4F      		sbci r19,-1
 4441 1f2e 0FB6      		in __tmp_reg__,__SREG__
 4442 1f30 F894      		cli
 4443 1f32 DEBF      		out __SP_H__,r29
 4444 1f34 0FBE      		out __SREG__,__tmp_reg__
 4445 1f36 CDBF      		out __SP_L__,r28
 4446 1f38 9C01      		movw r18,r24
 4447 1f3a 8F81      		ldd r24,Y+7
 4448 1f3c 9885      		ldd r25,Y+8
 4449 1f3e 820F      		add r24,r18
 4450 1f40 931F      		adc r25,r19
 4451 1f42 9887      		std Y+8,r25
 4452 1f44 8F83      		std Y+7,r24
 4453               	.L126:
 289:lp_solve_5.5/lp_wlp.c ****       nchars = write_data(userhandle, write_modeldata, "%s: ",
 4454               		.loc 1 289 0 discriminator 2
 4455 1f46 8E89      		ldd r24,Y+22
 4456 1f48 9F89      		ldd r25,Y+23
 4457 1f4a FC01      		movw r30,r24
 4458 1f4c 2281      		ldd r18,Z+2
 4459 1f4e 3381      		ldd r19,Z+3
 4460 1f50 8981      		ldd r24,Y+1
 4461 1f52 9A81      		ldd r25,Y+2
 4462 1f54 880F      		lsl r24
 4463 1f56 991F      		rol r25
 4464 1f58 820F      		add r24,r18
 4465 1f5a 931F      		adc r25,r19
 4466 1f5c FC01      		movw r30,r24
 4467 1f5e 8081      		ld r24,Z
 4468 1f60 9181      		ldd r25,Z+1
 4469 1f62 FC01      		movw r30,r24
 4470 1f64 8385      		ldd r24,Z+11
 4471 1f66 9485      		ldd r25,Z+12
 4472 1f68 9E83      		std Y+6,r25
 4473 1f6a 8D83      		std Y+5,r24
 4474 1f6c 8981      		ldd r24,Y+1
 4475 1f6e 9A81      		ldd r25,Y+2
 4476 1f70 0196      		adiw r24,1
 4477 1f72 9A83      		std Y+2,r25
 4478 1f74 8983      		std Y+1,r24
 4479               	.L112:
 289:lp_solve_5.5/lp_wlp.c ****       nchars = write_data(userhandle, write_modeldata, "%s: ",
 4480               		.loc 1 289 0 is_stmt 0 discriminator 1
 4481 1f76 8E89      		ldd r24,Y+22
 4482 1f78 9F89      		ldd r25,Y+23
 4483 1f7a FC01      		movw r30,r24
 4484 1f7c 2681      		ldd r18,Z+6
 4485 1f7e 3781      		ldd r19,Z+7
 4486 1f80 8981      		ldd r24,Y+1
 4487 1f82 9A81      		ldd r25,Y+2
 4488 1f84 8217      		cp r24,r18
 4489 1f86 9307      		cpc r25,r19
 4490 1f88 04F4      		brge .+2
 4491 1f8a 00C0      		rjmp .L127
 4492               	.L111:
 4493               	.LBE2:
 313:lp_solve_5.5/lp_wlp.c ****     }
 314:lp_solve_5.5/lp_wlp.c ****   }
 315:lp_solve_5.5/lp_wlp.c **** 
 316:lp_solve_5.5/lp_wlp.c ****   FREE(val);
 4494               		.loc 1 316 0 is_stmt 1
 4495 1f8c 8A8D      		ldd r24,Y+26
 4496 1f8e 9B8D      		ldd r25,Y+27
 4497 1f90 892B      		or r24,r25
 4498 1f92 01F0      		breq .L128
 4499               		.loc 1 316 0 is_stmt 0 discriminator 1
 4500 1f94 8A8D      		ldd r24,Y+26
 4501 1f96 9B8D      		ldd r25,Y+27
 4502 1f98 0E94 0000 		call free
 4503 1f9c 1B8E      		std Y+27,__zero_reg__
 4504 1f9e 1A8E      		std Y+26,__zero_reg__
 4505               	.L128:
 317:lp_solve_5.5/lp_wlp.c ****   FREE(idx);
 4506               		.loc 1 317 0 is_stmt 1
 4507 1fa0 888D      		ldd r24,Y+24
 4508 1fa2 998D      		ldd r25,Y+25
 4509 1fa4 892B      		or r24,r25
 4510 1fa6 01F0      		breq .L129
 4511               		.loc 1 317 0 is_stmt 0 discriminator 1
 4512 1fa8 888D      		ldd r24,Y+24
 4513 1faa 998D      		ldd r25,Y+25
 4514 1fac 0E94 0000 		call free
 4515 1fb0 198E      		std Y+25,__zero_reg__
 4516 1fb2 188E      		std Y+24,__zero_reg__
 4517               	.L129:
 318:lp_solve_5.5/lp_wlp.c **** 
 319:lp_solve_5.5/lp_wlp.c ****   ok = TRUE;
 4518               		.loc 1 319 0 is_stmt 1
 4519 1fb4 81E0      		ldi r24,lo8(1)
 4520 1fb6 8987      		std Y+9,r24
 320:lp_solve_5.5/lp_wlp.c **** 
 321:lp_solve_5.5/lp_wlp.c ****   return(ok);
 4521               		.loc 1 321 0
 4522 1fb8 8985      		ldd r24,Y+9
 4523               	.L130:
 4524               	/* epilogue start */
 322:lp_solve_5.5/lp_wlp.c **** }
 4525               		.loc 1 322 0 discriminator 1
 4526 1fba A196      		adiw r28,33
 4527 1fbc 0FB6      		in __tmp_reg__,__SREG__
 4528 1fbe F894      		cli
 4529 1fc0 DEBF      		out __SP_H__,r29
 4530 1fc2 0FBE      		out __SREG__,__tmp_reg__
 4531 1fc4 CDBF      		out __SP_L__,r28
 4532 1fc6 DF91      		pop r29
 4533 1fc8 CF91      		pop r28
 4534 1fca 1F91      		pop r17
 4535 1fcc 0F91      		pop r16
 4536 1fce FF90      		pop r15
 4537 1fd0 EF90      		pop r14
 4538 1fd2 DF90      		pop r13
 4539 1fd4 CF90      		pop r12
 4540 1fd6 0895      		ret
 4541               		.cfi_endproc
 4542               	.LFE10:
 4545               	write_lpdata:
 4546               	.LFB11:
 323:lp_solve_5.5/lp_wlp.c **** 
 324:lp_solve_5.5/lp_wlp.c **** static int __WINAPI write_lpdata(void *userhandle, char *buf)
 325:lp_solve_5.5/lp_wlp.c **** {
 4547               		.loc 1 325 0
 4548               		.cfi_startproc
 4549 1fd8 CF93      		push r28
 4550               	.LCFI28:
 4551               		.cfi_def_cfa_offset 3
 4552               		.cfi_offset 28, -2
 4553 1fda DF93      		push r29
 4554               	.LCFI29:
 4555               		.cfi_def_cfa_offset 4
 4556               		.cfi_offset 29, -3
 4557 1fdc 00D0      		rcall .
 4558 1fde 00D0      		rcall .
 4559               	.LCFI30:
 4560               		.cfi_def_cfa_offset 8
 4561 1fe0 CDB7      		in r28,__SP_L__
 4562 1fe2 DEB7      		in r29,__SP_H__
 4563               	.LCFI31:
 4564               		.cfi_def_cfa_register 28
 4565               	/* prologue: function */
 4566               	/* frame size = 4 */
 4567               	/* stack size = 6 */
 4568               	.L__stack_usage = 6
 4569 1fe4 9A83      		std Y+2,r25
 4570 1fe6 8983      		std Y+1,r24
 4571 1fe8 7C83      		std Y+4,r23
 4572 1fea 6B83      		std Y+3,r22
 326:lp_solve_5.5/lp_wlp.c ****   return(fprintf((FILE *) userhandle, "%s", buf));
 4573               		.loc 1 326 0
 4574 1fec 8C81      		ldd r24,Y+4
 4575 1fee 8F93      		push r24
 4576 1ff0 8B81      		ldd r24,Y+3
 4577 1ff2 8F93      		push r24
 4578 1ff4 80E0      		ldi r24,lo8(.LC10)
 4579 1ff6 90E0      		ldi r25,hi8(.LC10)
 4580 1ff8 892F      		mov r24,r25
 4581 1ffa 8F93      		push r24
 4582 1ffc 80E0      		ldi r24,lo8(.LC10)
 4583 1ffe 90E0      		ldi r25,hi8(.LC10)
 4584 2000 8F93      		push r24
 4585 2002 8A81      		ldd r24,Y+2
 4586 2004 8F93      		push r24
 4587 2006 8981      		ldd r24,Y+1
 4588 2008 8F93      		push r24
 4589 200a 0E94 0000 		call fprintf
 4590 200e 0F90      		pop __tmp_reg__
 4591 2010 0F90      		pop __tmp_reg__
 4592 2012 0F90      		pop __tmp_reg__
 4593 2014 0F90      		pop __tmp_reg__
 4594 2016 0F90      		pop __tmp_reg__
 4595 2018 0F90      		pop __tmp_reg__
 4596               	/* epilogue start */
 327:lp_solve_5.5/lp_wlp.c **** }
 4597               		.loc 1 327 0
 4598 201a 0F90      		pop __tmp_reg__
 4599 201c 0F90      		pop __tmp_reg__
 4600 201e 0F90      		pop __tmp_reg__
 4601 2020 0F90      		pop __tmp_reg__
 4602 2022 DF91      		pop r29
 4603 2024 CF91      		pop r28
 4604 2026 0895      		ret
 4605               		.cfi_endproc
 4606               	.LFE11:
 4608               		.section	.rodata
 4609               	.LC54:
 4610 01d1 7700      		.string	"w"
 4611               		.text
 4612               	.global	LP_writefile
 4614               	LP_writefile:
 4615               	.LFB12:
 328:lp_solve_5.5/lp_wlp.c **** 
 329:lp_solve_5.5/lp_wlp.c **** MYBOOL LP_writefile(lprec *lp, char *filename)
 330:lp_solve_5.5/lp_wlp.c **** {
 4616               		.loc 1 330 0
 4617               		.cfi_startproc
 4618 2028 CF93      		push r28
 4619               	.LCFI32:
 4620               		.cfi_def_cfa_offset 3
 4621               		.cfi_offset 28, -2
 4622 202a DF93      		push r29
 4623               	.LCFI33:
 4624               		.cfi_def_cfa_offset 4
 4625               		.cfi_offset 29, -3
 4626 202c CDB7      		in r28,__SP_L__
 4627 202e DEB7      		in r29,__SP_H__
 4628               	.LCFI34:
 4629               		.cfi_def_cfa_register 28
 4630 2030 2797      		sbiw r28,7
 4631               	.LCFI35:
 4632               		.cfi_def_cfa_offset 11
 4633 2032 0FB6      		in __tmp_reg__,__SREG__
 4634 2034 F894      		cli
 4635 2036 DEBF      		out __SP_H__,r29
 4636 2038 0FBE      		out __SREG__,__tmp_reg__
 4637 203a CDBF      		out __SP_L__,r28
 4638               	/* prologue: function */
 4639               	/* frame size = 7 */
 4640               	/* stack size = 9 */
 4641               	.L__stack_usage = 9
 4642 203c 9D83      		std Y+5,r25
 4643 203e 8C83      		std Y+4,r24
 4644 2040 7F83      		std Y+7,r23
 4645 2042 6E83      		std Y+6,r22
 331:lp_solve_5.5/lp_wlp.c ****   FILE *output = stdout;
 4646               		.loc 1 331 0
 4647 2044 8091 0000 		lds r24,__iob+2
 4648 2048 9091 0000 		lds r25,__iob+2+1
 4649 204c 9A83      		std Y+2,r25
 4650 204e 8983      		std Y+1,r24
 332:lp_solve_5.5/lp_wlp.c ****   MYBOOL ok;
 333:lp_solve_5.5/lp_wlp.c **** 
 334:lp_solve_5.5/lp_wlp.c ****   if (filename != NULL) {
 4651               		.loc 1 334 0
 4652 2050 8E81      		ldd r24,Y+6
 4653 2052 9F81      		ldd r25,Y+7
 4654 2054 892B      		or r24,r25
 4655 2056 01F0      		breq .L165
 335:lp_solve_5.5/lp_wlp.c ****     ok = (MYBOOL) ((output = fopen(filename, "w")) != NULL);
 4656               		.loc 1 335 0
 4657 2058 8E81      		ldd r24,Y+6
 4658 205a 9F81      		ldd r25,Y+7
 4659 205c 60E0      		ldi r22,lo8(.LC54)
 4660 205e 70E0      		ldi r23,hi8(.LC54)
 4661 2060 0E94 0000 		call fopen
 4662 2064 9A83      		std Y+2,r25
 4663 2066 8983      		std Y+1,r24
 4664 2068 21E0      		ldi r18,lo8(1)
 4665 206a 8981      		ldd r24,Y+1
 4666 206c 9A81      		ldd r25,Y+2
 4667 206e 892B      		or r24,r25
 4668 2070 01F4      		brne .L166
 4669 2072 20E0      		ldi r18,0
 4670               	.L166:
 4671 2074 2B83      		std Y+3,r18
 336:lp_solve_5.5/lp_wlp.c ****     if(!ok)
 4672               		.loc 1 336 0
 4673 2076 8B81      		ldd r24,Y+3
 4674 2078 8823      		tst r24
 4675 207a 01F4      		brne .L167
 337:lp_solve_5.5/lp_wlp.c ****       return(ok);
 4676               		.loc 1 337 0
 4677 207c 8B81      		ldd r24,Y+3
 4678 207e 00C0      		rjmp .L168
 4679               	.L165:
 338:lp_solve_5.5/lp_wlp.c ****   }
 339:lp_solve_5.5/lp_wlp.c ****   else
 340:lp_solve_5.5/lp_wlp.c ****     output = lp->outstream;
 4680               		.loc 1 340 0
 4681 2080 8C81      		ldd r24,Y+4
 4682 2082 9D81      		ldd r25,Y+5
 4683 2084 845A      		subi r24,-92
 4684 2086 9D4F      		sbci r25,-3
 4685 2088 FC01      		movw r30,r24
 4686 208a 8081      		ld r24,Z
 4687 208c 9181      		ldd r25,Z+1
 4688 208e 9A83      		std Y+2,r25
 4689 2090 8983      		std Y+1,r24
 4690               	.L167:
 341:lp_solve_5.5/lp_wlp.c **** 
 342:lp_solve_5.5/lp_wlp.c ****   ok = write_lpex(lp, (void *) output, write_lpdata);
 4691               		.loc 1 342 0
 4692 2092 2981      		ldd r18,Y+1
 4693 2094 3A81      		ldd r19,Y+2
 4694 2096 8C81      		ldd r24,Y+4
 4695 2098 9D81      		ldd r25,Y+5
 4696 209a 40E0      		ldi r20,lo8(gs(write_lpdata))
 4697 209c 50E0      		ldi r21,hi8(gs(write_lpdata))
 4698 209e B901      		movw r22,r18
 4699 20a0 0E94 0000 		call write_lpex
 4700 20a4 8B83      		std Y+3,r24
 343:lp_solve_5.5/lp_wlp.c **** 
 344:lp_solve_5.5/lp_wlp.c ****   if (filename != NULL)
 4701               		.loc 1 344 0
 4702 20a6 8E81      		ldd r24,Y+6
 4703 20a8 9F81      		ldd r25,Y+7
 4704 20aa 892B      		or r24,r25
 4705 20ac 01F0      		breq .L169
 345:lp_solve_5.5/lp_wlp.c ****     fclose(output);
 4706               		.loc 1 345 0
 4707 20ae 8981      		ldd r24,Y+1
 4708 20b0 9A81      		ldd r25,Y+2
 4709 20b2 0E94 0000 		call fclose
 4710               	.L169:
 346:lp_solve_5.5/lp_wlp.c **** 
 347:lp_solve_5.5/lp_wlp.c ****   return(ok);
 4711               		.loc 1 347 0
 4712 20b6 8B81      		ldd r24,Y+3
 4713               	.L168:
 4714               	/* epilogue start */
 348:lp_solve_5.5/lp_wlp.c **** }
 4715               		.loc 1 348 0
 4716 20b8 2796      		adiw r28,7
 4717 20ba 0FB6      		in __tmp_reg__,__SREG__
 4718 20bc F894      		cli
 4719 20be DEBF      		out __SP_H__,r29
 4720 20c0 0FBE      		out __SREG__,__tmp_reg__
 4721 20c2 CDBF      		out __SP_L__,r28
 4722 20c4 DF91      		pop r29
 4723 20c6 CF91      		pop r28
 4724 20c8 0895      		ret
 4725               		.cfi_endproc
 4726               	.LFE12:
 4728               	.global	LP_writehandle
 4730               	LP_writehandle:
 4731               	.LFB13:
 349:lp_solve_5.5/lp_wlp.c **** 
 350:lp_solve_5.5/lp_wlp.c **** MYBOOL LP_writehandle(lprec *lp, FILE *output)
 351:lp_solve_5.5/lp_wlp.c **** {
 4732               		.loc 1 351 0
 4733               		.cfi_startproc
 4734 20ca CF93      		push r28
 4735               	.LCFI36:
 4736               		.cfi_def_cfa_offset 3
 4737               		.cfi_offset 28, -2
 4738 20cc DF93      		push r29
 4739               	.LCFI37:
 4740               		.cfi_def_cfa_offset 4
 4741               		.cfi_offset 29, -3
 4742 20ce 00D0      		rcall .
 4743 20d0 00D0      		rcall .
 4744 20d2 1F92      		push __zero_reg__
 4745               	.LCFI38:
 4746               		.cfi_def_cfa_offset 9
 4747 20d4 CDB7      		in r28,__SP_L__
 4748 20d6 DEB7      		in r29,__SP_H__
 4749               	.LCFI39:
 4750               		.cfi_def_cfa_register 28
 4751               	/* prologue: function */
 4752               	/* frame size = 5 */
 4753               	/* stack size = 7 */
 4754               	.L__stack_usage = 7
 4755 20d8 9B83      		std Y+3,r25
 4756 20da 8A83      		std Y+2,r24
 4757 20dc 7D83      		std Y+5,r23
 4758 20de 6C83      		std Y+4,r22
 352:lp_solve_5.5/lp_wlp.c ****   MYBOOL ok;
 353:lp_solve_5.5/lp_wlp.c **** 
 354:lp_solve_5.5/lp_wlp.c ****   if (output != NULL)
 4759               		.loc 1 354 0
 4760 20e0 8C81      		ldd r24,Y+4
 4761 20e2 9D81      		ldd r25,Y+5
 4762 20e4 892B      		or r24,r25
 4763 20e6 01F0      		breq .L171
 355:lp_solve_5.5/lp_wlp.c ****     set_outputstream(lp, output);
 4764               		.loc 1 355 0
 4765 20e8 2C81      		ldd r18,Y+4
 4766 20ea 3D81      		ldd r19,Y+5
 4767 20ec 8A81      		ldd r24,Y+2
 4768 20ee 9B81      		ldd r25,Y+3
 4769 20f0 B901      		movw r22,r18
 4770 20f2 0E94 0000 		call set_outputstream
 4771               	.L171:
 356:lp_solve_5.5/lp_wlp.c **** 
 357:lp_solve_5.5/lp_wlp.c ****   output = lp->outstream;
 4772               		.loc 1 357 0
 4773 20f6 8A81      		ldd r24,Y+2
 4774 20f8 9B81      		ldd r25,Y+3
 4775 20fa 845A      		subi r24,-92
 4776 20fc 9D4F      		sbci r25,-3
 4777 20fe FC01      		movw r30,r24
 4778 2100 8081      		ld r24,Z
 4779 2102 9181      		ldd r25,Z+1
 4780 2104 9D83      		std Y+5,r25
 4781 2106 8C83      		std Y+4,r24
 358:lp_solve_5.5/lp_wlp.c **** 
 359:lp_solve_5.5/lp_wlp.c ****   ok = write_lpex(lp, (void *) output, write_lpdata);
 4782               		.loc 1 359 0
 4783 2108 2C81      		ldd r18,Y+4
 4784 210a 3D81      		ldd r19,Y+5
 4785 210c 8A81      		ldd r24,Y+2
 4786 210e 9B81      		ldd r25,Y+3
 4787 2110 40E0      		ldi r20,lo8(gs(write_lpdata))
 4788 2112 50E0      		ldi r21,hi8(gs(write_lpdata))
 4789 2114 B901      		movw r22,r18
 4790 2116 0E94 0000 		call write_lpex
 4791 211a 8983      		std Y+1,r24
 360:lp_solve_5.5/lp_wlp.c **** 
 361:lp_solve_5.5/lp_wlp.c ****   return(ok);
 4792               		.loc 1 361 0
 4793 211c 8981      		ldd r24,Y+1
 4794               	/* epilogue start */
 362:lp_solve_5.5/lp_wlp.c **** }
 4795               		.loc 1 362 0
 4796 211e 0F90      		pop __tmp_reg__
 4797 2120 0F90      		pop __tmp_reg__
 4798 2122 0F90      		pop __tmp_reg__
 4799 2124 0F90      		pop __tmp_reg__
 4800 2126 0F90      		pop __tmp_reg__
 4801 2128 DF91      		pop r29
 4802 212a CF91      		pop r28
 4803 212c 0895      		ret
 4804               		.cfi_endproc
 4805               	.LFE13:
 4807               	.Letext0:
 4808               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 4809               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\lib\\gc
 4810               		.file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 4811               		.file 5 "lp_solve_5.5\\shared/commonlib.h"
 4812               		.file 6 "lp_solve_5.5/lp_types.h"
 4813               		.file 7 "lp_solve_5.5/lp_lib.h"
 4814               		.file 8 "lp_solve_5.5/lp_utils.h"
 4815               		.file 9 "lp_solve_5.5/lp_Hash.h"
 4816               		.file 10 "lp_solve_5.5/lp_matrix.h"
 4817               		.file 11 "lp_solve_5.5/lp_mipbb.h"
 4818               		.file 12 "lp_solve_5.5/lp_SOS.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lp_wlp.c
C:\Users\GUILHE~1\AppData\Local\Temp\cc5pJgD9.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\cc5pJgD9.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\cc5pJgD9.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\cc5pJgD9.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\cc5pJgD9.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cc5pJgD9.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cc5pJgD9.s:12     .text:00000000 write_data
C:\Users\GUILHE~1\AppData\Local\Temp\cc5pJgD9.s:119    .text:0000008c write_lpcomment
C:\Users\GUILHE~1\AppData\Local\Temp\cc5pJgD9.s:234    .text:00000112 write_lprow
C:\Users\GUILHE~1\AppData\Local\Temp\cc5pJgD9.s:941    .text:00000552 write_lpex
C:\Users\GUILHE~1\AppData\Local\Temp\cc5pJgD9.s:4545   .text:00001fd8 write_lpdata
C:\Users\GUILHE~1\AppData\Local\Temp\cc5pJgD9.s:4614   .text:00002028 LP_writefile
C:\Users\GUILHE~1\AppData\Local\Temp\cc5pJgD9.s:4730   .text:000020ca LP_writehandle

UNDEFINED SYMBOLS
vsnprintf
get_rowex
is_splitvar
sprintf
strcmp
get_col_name
__nesf2
__ltsf2
__eqsf2
__subsf3
__mulsf3
__divsf3
__addsf3
mat_validate
report
get_lp_name
is_maxim
allocREAL
allocINT
get_rh
get_row_name
is_chsign
get_upbo
get_lowbo
is_int
is_semicont
SOS_count
free
fprintf
__iob
fopen
fclose
set_outputstream
__do_copy_data
