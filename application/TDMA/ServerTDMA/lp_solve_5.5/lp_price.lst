   1               		.file	"lp_price.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               	.global	__ltsf2
  12               	.global	__subsf3
  13               	.global	__addsf3
  14               	.global	__divsf3
  15               	.global	__gtsf2
  16               	.global	compareImprovementVar
  18               	compareImprovementVar:
  19               	.LFB7:
  20               		.file 1 "lp_solve_5.5/lp_price.c"
   1:lp_solve_5.5/lp_price.c **** 
   2:lp_solve_5.5/lp_price.c **** #include <string.h>
   3:lp_solve_5.5/lp_price.c **** #include "commonlib.h"
   4:lp_solve_5.5/lp_price.c **** #include "lp_lib.h"
   5:lp_solve_5.5/lp_price.c **** #include "lp_report.h"
   6:lp_solve_5.5/lp_price.c **** #include "lp_pricePSE.h"
   7:lp_solve_5.5/lp_price.c **** #include "lp_price.h"
   8:lp_solve_5.5/lp_price.c **** 
   9:lp_solve_5.5/lp_price.c **** #if libBLAS > 0
  10:lp_solve_5.5/lp_price.c ****   #include "myblas.h"
  11:lp_solve_5.5/lp_price.c **** #endif
  12:lp_solve_5.5/lp_price.c **** 
  13:lp_solve_5.5/lp_price.c **** #ifdef FORTIFY
  14:lp_solve_5.5/lp_price.c **** # include "lp_fortify.h"
  15:lp_solve_5.5/lp_price.c **** #endif
  16:lp_solve_5.5/lp_price.c **** 
  17:lp_solve_5.5/lp_price.c **** /* Simplex pricing utility module - w/interface for lp_solve v5.0+
  18:lp_solve_5.5/lp_price.c ****    -------------------------------------------------------------------------
  19:lp_solve_5.5/lp_price.c ****     Author:        Kjell Eikland
  20:lp_solve_5.5/lp_price.c ****     Contact:       kjell.eikland@broadpark.no
  21:lp_solve_5.5/lp_price.c ****     License terms: LGPL.
  22:lp_solve_5.5/lp_price.c **** 
  23:lp_solve_5.5/lp_price.c ****     Requires:      lp_lib.h, commonlib.h
  24:lp_solve_5.5/lp_price.c **** 
  25:lp_solve_5.5/lp_price.c ****     Release notes:
  26:lp_solve_5.5/lp_price.c ****     v1.0.0  1 July 2004         Routines extracted from lp_lib.
  27:lp_solve_5.5/lp_price.c ****     v1.0.1 10 July 2004         Added comparison operators for determination
  28:lp_solve_5.5/lp_price.c ****                                 of entering and leaving variables.
  29:lp_solve_5.5/lp_price.c ****                                 Added routines for multiple and partial
  30:lp_solve_5.5/lp_price.c ****                                 pricing and made corresponding changes to
  31:lp_solve_5.5/lp_price.c ****                                 colprim and rowdual.
  32:lp_solve_5.5/lp_price.c ****     v1.0.2 20 August 2004       Implemented relative pivot size control in
  33:lp_solve_5.5/lp_price.c ****                                 rowprim and rowdual.
  34:lp_solve_5.5/lp_price.c ****     v1.1.0 15 October 2004      Added dual long step logic.
  35:lp_solve_5.5/lp_price.c ****     v1.1.1 22 October 2004      Added bound sort order to variable selections.
  36:lp_solve_5.5/lp_price.c ****     v1.2.0 24 March 2005        Completed multiple pricing logic.
  37:lp_solve_5.5/lp_price.c ****    ------------------------------------------------------------------------- */
  38:lp_solve_5.5/lp_price.c **** 
  39:lp_solve_5.5/lp_price.c **** 
  40:lp_solve_5.5/lp_price.c **** /* Comparison operators for entering and leaving variables for both the primal and
  41:lp_solve_5.5/lp_price.c ****    dual simplexes.  The functions compare a candidate variable with an incumbent. */
  42:lp_solve_5.5/lp_price.c **** int CMP_CALLMODEL compareImprovementVar(const pricerec *current, const pricerec *candidate)
  43:lp_solve_5.5/lp_price.c **** {
  21               		.loc 1 43 0
  22               		.cfi_startproc
  23 0000 5F92      		push r5
  24               	.LCFI0:
  25               		.cfi_def_cfa_offset 3
  26               		.cfi_offset 5, -2
  27 0002 6F92      		push r6
  28               	.LCFI1:
  29               		.cfi_def_cfa_offset 4
  30               		.cfi_offset 6, -3
  31 0004 7F92      		push r7
  32               	.LCFI2:
  33               		.cfi_def_cfa_offset 5
  34               		.cfi_offset 7, -4
  35 0006 8F92      		push r8
  36               	.LCFI3:
  37               		.cfi_def_cfa_offset 6
  38               		.cfi_offset 8, -5
  39 0008 9F92      		push r9
  40               	.LCFI4:
  41               		.cfi_def_cfa_offset 7
  42               		.cfi_offset 9, -6
  43 000a AF92      		push r10
  44               	.LCFI5:
  45               		.cfi_def_cfa_offset 8
  46               		.cfi_offset 10, -7
  47 000c BF92      		push r11
  48               	.LCFI6:
  49               		.cfi_def_cfa_offset 9
  50               		.cfi_offset 11, -8
  51 000e CF92      		push r12
  52               	.LCFI7:
  53               		.cfi_def_cfa_offset 10
  54               		.cfi_offset 12, -9
  55 0010 DF92      		push r13
  56               	.LCFI8:
  57               		.cfi_def_cfa_offset 11
  58               		.cfi_offset 13, -10
  59 0012 EF92      		push r14
  60               	.LCFI9:
  61               		.cfi_def_cfa_offset 12
  62               		.cfi_offset 14, -11
  63 0014 FF92      		push r15
  64               	.LCFI10:
  65               		.cfi_def_cfa_offset 13
  66               		.cfi_offset 15, -12
  67 0016 0F93      		push r16
  68               	.LCFI11:
  69               		.cfi_def_cfa_offset 14
  70               		.cfi_offset 16, -13
  71 0018 1F93      		push r17
  72               	.LCFI12:
  73               		.cfi_def_cfa_offset 15
  74               		.cfi_offset 17, -14
  75 001a CF93      		push r28
  76               	.LCFI13:
  77               		.cfi_def_cfa_offset 16
  78               		.cfi_offset 28, -15
  79 001c DF93      		push r29
  80               	.LCFI14:
  81               		.cfi_def_cfa_offset 17
  82               		.cfi_offset 29, -16
  83 001e CDB7      		in r28,__SP_L__
  84 0020 DEB7      		in r29,__SP_H__
  85               	.LCFI15:
  86               		.cfi_def_cfa_register 28
  87 0022 2E97      		sbiw r28,14
  88               	.LCFI16:
  89               		.cfi_def_cfa_offset 31
  90 0024 0FB6      		in __tmp_reg__,__SREG__
  91 0026 F894      		cli
  92 0028 DEBF      		out __SP_H__,r29
  93 002a 0FBE      		out __SREG__,__tmp_reg__
  94 002c CDBF      		out __SP_L__,r28
  95               	/* prologue: function */
  96               	/* frame size = 14 */
  97               	/* stack size = 29 */
  98               	.L__stack_usage = 29
  99 002e 9C87      		std Y+12,r25
 100 0030 8B87      		std Y+11,r24
 101 0032 7E87      		std Y+14,r23
 102 0034 6D87      		std Y+13,r22
  44:lp_solve_5.5/lp_price.c ****   register int   result = COMP_PREFERNONE;
 103               		.loc 1 44 0
 104 0036 00E0      		ldi r16,0
 105 0038 10E0      		ldi r17,0
  45:lp_solve_5.5/lp_price.c ****   register lprec *lp = current->lp;
 106               		.loc 1 45 0
 107 003a 8B85      		ldd r24,Y+11
 108 003c 9C85      		ldd r25,Y+12
 109 003e FC01      		movw r30,r24
 110 0040 A684      		ldd r10,Z+14
 111 0042 B784      		ldd r11,Z+15
  46:lp_solve_5.5/lp_price.c ****   register REAL  testvalue, margin = PREC_IMPROVEGAP;
 112               		.loc 1 46 0
 113 0044 C501      		movw r24,r10
 114 0046 825E      		subi r24,-30
 115 0048 9C4F      		sbci r25,-4
 116 004a FC01      		movw r30,r24
 117 004c 6080      		ld r6,Z
 118 004e 7180      		ldd r7,Z+1
 119 0050 8280      		ldd r8,Z+2
 120 0052 9380      		ldd r9,Z+3
  47:lp_solve_5.5/lp_price.c ****   int currentcolno, currentvarno = current->varno,
 121               		.loc 1 47 0
 122 0054 8B85      		ldd r24,Y+11
 123 0056 9C85      		ldd r25,Y+12
 124 0058 FC01      		movw r30,r24
 125 005a 8485      		ldd r24,Z+12
 126 005c 9585      		ldd r25,Z+13
 127 005e 9A83      		std Y+2,r25
 128 0060 8983      		std Y+1,r24
  48:lp_solve_5.5/lp_price.c ****       candidatecolno, candidatevarno = candidate->varno;
 129               		.loc 1 48 0
 130 0062 8D85      		ldd r24,Y+13
 131 0064 9E85      		ldd r25,Y+14
 132 0066 FC01      		movw r30,r24
 133 0068 8485      		ldd r24,Z+12
 134 006a 9585      		ldd r25,Z+13
 135 006c 9C83      		std Y+4,r25
 136 006e 8B83      		std Y+3,r24
  49:lp_solve_5.5/lp_price.c ****   MYBOOL isdual = candidate->isdual;
 137               		.loc 1 49 0
 138 0070 8D85      		ldd r24,Y+13
 139 0072 9E85      		ldd r25,Y+14
 140 0074 FC01      		movw r30,r24
 141 0076 8089      		ldd r24,Z+16
 142 0078 8D83      		std Y+5,r24
  50:lp_solve_5.5/lp_price.c **** 
  51:lp_solve_5.5/lp_price.c ****   if(isdual) {
 143               		.loc 1 51 0
 144 007a 8D81      		ldd r24,Y+5
 145 007c 8823      		tst r24
 146 007e 01F0      		breq .L2
  52:lp_solve_5.5/lp_price.c ****     candidatevarno = lp->var_basic[candidatevarno];
 147               		.loc 1 52 0
 148 0080 C501      		movw r24,r10
 149 0082 8453      		subi r24,52
 150 0084 9D4F      		sbci r25,-3
 151 0086 FC01      		movw r30,r24
 152 0088 2081      		ld r18,Z
 153 008a 3181      		ldd r19,Z+1
 154 008c 8B81      		ldd r24,Y+3
 155 008e 9C81      		ldd r25,Y+4
 156 0090 880F      		lsl r24
 157 0092 991F      		rol r25
 158 0094 820F      		add r24,r18
 159 0096 931F      		adc r25,r19
 160 0098 FC01      		movw r30,r24
 161 009a 8081      		ld r24,Z
 162 009c 9181      		ldd r25,Z+1
 163 009e 9C83      		std Y+4,r25
 164 00a0 8B83      		std Y+3,r24
  53:lp_solve_5.5/lp_price.c ****     currentvarno   = lp->var_basic[currentvarno];
 165               		.loc 1 53 0
 166 00a2 C501      		movw r24,r10
 167 00a4 8453      		subi r24,52
 168 00a6 9D4F      		sbci r25,-3
 169 00a8 FC01      		movw r30,r24
 170 00aa 2081      		ld r18,Z
 171 00ac 3181      		ldd r19,Z+1
 172 00ae 8981      		ldd r24,Y+1
 173 00b0 9A81      		ldd r25,Y+2
 174 00b2 880F      		lsl r24
 175 00b4 991F      		rol r25
 176 00b6 820F      		add r24,r18
 177 00b8 931F      		adc r25,r19
 178 00ba FC01      		movw r30,r24
 179 00bc 8081      		ld r24,Z
 180 00be 9181      		ldd r25,Z+1
 181 00c0 9A83      		std Y+2,r25
 182 00c2 8983      		std Y+1,r24
 183               	.L2:
  54:lp_solve_5.5/lp_price.c ****   }
  55:lp_solve_5.5/lp_price.c ****   candidatecolno = candidatevarno - lp->rows;
 184               		.loc 1 55 0
 185 00c4 C501      		movw r24,r10
 186 00c6 8651      		subi r24,22
 187 00c8 9E4F      		sbci r25,-2
 188 00ca FC01      		movw r30,r24
 189 00cc 8081      		ld r24,Z
 190 00ce 9181      		ldd r25,Z+1
 191 00d0 2B81      		ldd r18,Y+3
 192 00d2 3C81      		ldd r19,Y+4
 193 00d4 A901      		movw r20,r18
 194 00d6 481B      		sub r20,r24
 195 00d8 590B      		sbc r21,r25
 196 00da CA01      		movw r24,r20
 197 00dc 9F83      		std Y+7,r25
 198 00de 8E83      		std Y+6,r24
  56:lp_solve_5.5/lp_price.c ****   currentcolno   = currentvarno - lp->rows;
 199               		.loc 1 56 0
 200 00e0 C501      		movw r24,r10
 201 00e2 8651      		subi r24,22
 202 00e4 9E4F      		sbci r25,-2
 203 00e6 FC01      		movw r30,r24
 204 00e8 8081      		ld r24,Z
 205 00ea 9181      		ldd r25,Z+1
 206 00ec 2981      		ldd r18,Y+1
 207 00ee 3A81      		ldd r19,Y+2
 208 00f0 A901      		movw r20,r18
 209 00f2 481B      		sub r20,r24
 210 00f4 590B      		sbc r21,r25
 211 00f6 CA01      		movw r24,r20
 212 00f8 9987      		std Y+9,r25
 213 00fa 8887      		std Y+8,r24
  57:lp_solve_5.5/lp_price.c **** 
  58:lp_solve_5.5/lp_price.c ****   /* Do pivot-based selection unless Bland's (first index) rule is active */
  59:lp_solve_5.5/lp_price.c ****   if(lp->_piv_rule_ != PRICER_FIRSTINDEX) {
 214               		.loc 1 59 0
 215 00fc C501      		movw r24,r10
 216 00fe 8E59      		subi r24,-98
 217 0100 9D4F      		sbci r25,-3
 218 0102 FC01      		movw r30,r24
 219 0104 8081      		ld r24,Z
 220 0106 9181      		ldd r25,Z+1
 221 0108 892B      		or r24,r25
 222 010a 01F4      		brne .+2
 223 010c 00C0      		rjmp .L3
 224               	.LBB2:
  60:lp_solve_5.5/lp_price.c **** 
  61:lp_solve_5.5/lp_price.c ****     MYBOOL candbetter;
  62:lp_solve_5.5/lp_price.c **** 
  63:lp_solve_5.5/lp_price.c ****     /* Find the largest value - normalize in case of the dual, since
  64:lp_solve_5.5/lp_price.c ****        constraint violation is expressed as a negative number. */
  65:lp_solve_5.5/lp_price.c ****     /* Use absolute test for "small numbers", relative otherwise */
  66:lp_solve_5.5/lp_price.c ****     testvalue = candidate->pivot;
 225               		.loc 1 66 0
 226 010e 8D85      		ldd r24,Y+13
 227 0110 9E85      		ldd r25,Y+14
 228 0112 FC01      		movw r30,r24
 229 0114 C480      		ldd r12,Z+4
 230 0116 D580      		ldd r13,Z+5
 231 0118 E680      		ldd r14,Z+6
 232 011a F780      		ldd r15,Z+7
  67:lp_solve_5.5/lp_price.c ****     if(fabs(testvalue) < LIMIT_ABS_REL)
 233               		.loc 1 67 0
 234 011c D701      		movw r26,r14
 235 011e C601      		movw r24,r12
 236 0120 BF77      		andi r27,0x7f
 237 0122 20E0      		ldi r18,0
 238 0124 30E0      		ldi r19,0
 239 0126 40E2      		ldi r20,lo8(32)
 240 0128 51E4      		ldi r21,lo8(65)
 241 012a BC01      		movw r22,r24
 242 012c CD01      		movw r24,r26
 243 012e 0E94 0000 		call __ltsf2
 244 0132 8823      		tst r24
 245 0134 04F4      		brge .L26
  68:lp_solve_5.5/lp_price.c ****       testvalue -= current->pivot;
 246               		.loc 1 68 0
 247 0136 8B85      		ldd r24,Y+11
 248 0138 9C85      		ldd r25,Y+12
 249 013a FC01      		movw r30,r24
 250 013c 8481      		ldd r24,Z+4
 251 013e 9581      		ldd r25,Z+5
 252 0140 A681      		ldd r26,Z+6
 253 0142 B781      		ldd r27,Z+7
 254 0144 9C01      		movw r18,r24
 255 0146 AD01      		movw r20,r26
 256 0148 C701      		movw r24,r14
 257 014a B601      		movw r22,r12
 258 014c 0E94 0000 		call __subsf3
 259 0150 DC01      		movw r26,r24
 260 0152 CB01      		movw r24,r22
 261 0154 6C01      		movw r12,r24
 262 0156 7D01      		movw r14,r26
 263 0158 00C0      		rjmp .L6
 264               	.L26:
  69:lp_solve_5.5/lp_price.c ****     else
  70:lp_solve_5.5/lp_price.c ****       testvalue = my_reldiff(testvalue, current->pivot);
 265               		.loc 1 70 0
 266 015a 8B85      		ldd r24,Y+11
 267 015c 9C85      		ldd r25,Y+12
 268 015e FC01      		movw r30,r24
 269 0160 8481      		ldd r24,Z+4
 270 0162 9581      		ldd r25,Z+5
 271 0164 A681      		ldd r26,Z+6
 272 0166 B781      		ldd r27,Z+7
 273 0168 9C01      		movw r18,r24
 274 016a AD01      		movw r20,r26
 275 016c C701      		movw r24,r14
 276 016e B601      		movw r22,r12
 277 0170 0E94 0000 		call __subsf3
 278 0174 DC01      		movw r26,r24
 279 0176 CB01      		movw r24,r22
 280 0178 6C01      		movw r12,r24
 281 017a 7D01      		movw r14,r26
 282 017c 8B85      		ldd r24,Y+11
 283 017e 9C85      		ldd r25,Y+12
 284 0180 FC01      		movw r30,r24
 285 0182 8481      		ldd r24,Z+4
 286 0184 9581      		ldd r25,Z+5
 287 0186 A681      		ldd r26,Z+6
 288 0188 B781      		ldd r27,Z+7
 289 018a BF77      		andi r27,0x7f
 290 018c 20E0      		ldi r18,0
 291 018e 30E0      		ldi r19,0
 292 0190 40E8      		ldi r20,lo8(-128)
 293 0192 5FE3      		ldi r21,lo8(63)
 294 0194 BC01      		movw r22,r24
 295 0196 CD01      		movw r24,r26
 296 0198 0E94 0000 		call __addsf3
 297 019c DC01      		movw r26,r24
 298 019e CB01      		movw r24,r22
 299 01a0 9C01      		movw r18,r24
 300 01a2 AD01      		movw r20,r26
 301 01a4 C701      		movw r24,r14
 302 01a6 B601      		movw r22,r12
 303 01a8 0E94 0000 		call __divsf3
 304 01ac DC01      		movw r26,r24
 305 01ae CB01      		movw r24,r22
 306 01b0 6C01      		movw r12,r24
 307 01b2 7D01      		movw r14,r26
 308               	.L6:
  71:lp_solve_5.5/lp_price.c ****     if(isdual)
 309               		.loc 1 71 0
 310 01b4 8D81      		ldd r24,Y+5
 311 01b6 8823      		tst r24
 312 01b8 01F0      		breq .L7
  72:lp_solve_5.5/lp_price.c ****       testvalue = -testvalue;
 313               		.loc 1 72 0
 314 01ba F7FA      		bst r15,7
 315 01bc F094      		com r15
 316 01be F7F8      		bld r15,7
 317 01c0 F094      		com r15
 318               	.L7:
  73:lp_solve_5.5/lp_price.c **** 
  74:lp_solve_5.5/lp_price.c ****     candbetter = (MYBOOL) (testvalue > 0);
 319               		.loc 1 74 0
 320 01c2 5524      		clr r5
 321 01c4 5394      		inc r5
 322 01c6 20E0      		ldi r18,0
 323 01c8 30E0      		ldi r19,0
 324 01ca A901      		movw r20,r18
 325 01cc C701      		movw r24,r14
 326 01ce B601      		movw r22,r12
 327 01d0 0E94 0000 		call __gtsf2
 328 01d4 1816      		cp __zero_reg__,r24
 329 01d6 04F0      		brlt .L8
 330 01d8 512C      		mov r5,__zero_reg__
 331               	.L8:
 332 01da 5A86      		std Y+10,r5
  75:lp_solve_5.5/lp_price.c ****     if(candbetter) {
 333               		.loc 1 75 0
 334 01dc 8A85      		ldd r24,Y+10
 335 01de 8823      		tst r24
 336 01e0 01F0      		breq .L9
  76:lp_solve_5.5/lp_price.c ****       if(testvalue > margin)
 337               		.loc 1 76 0
 338 01e2 A401      		movw r20,r8
 339 01e4 9301      		movw r18,r6
 340 01e6 C701      		movw r24,r14
 341 01e8 B601      		movw r22,r12
 342 01ea 0E94 0000 		call __gtsf2
 343 01ee 1816      		cp __zero_reg__,r24
 344 01f0 04F4      		brge .L12
  77:lp_solve_5.5/lp_price.c ****         result = COMP_PREFERCANDIDATE;
 345               		.loc 1 77 0
 346 01f2 01E0      		ldi r16,lo8(1)
 347 01f4 10E0      		ldi r17,0
 348 01f6 00C0      		rjmp .L12
 349               	.L9:
  78:lp_solve_5.5/lp_price.c ****     }
  79:lp_solve_5.5/lp_price.c **** #if 0 /* Give more opportunity to optimize on non-primary criteria */
  80:lp_solve_5.5/lp_price.c ****     else if (testvalue < -margin)
  81:lp_solve_5.5/lp_price.c **** #else /* Give reduced opportunity to optimize on non-primary criteria */
  82:lp_solve_5.5/lp_price.c ****     else if (testvalue < -lp->epsvalue)
 350               		.loc 1 82 0
 351 01f8 C501      		movw r24,r10
 352 01fa 8A5E      		subi r24,-22
 353 01fc 9C4F      		sbci r25,-4
 354 01fe FC01      		movw r30,r24
 355 0200 8081      		ld r24,Z
 356 0202 9181      		ldd r25,Z+1
 357 0204 A281      		ldd r26,Z+2
 358 0206 B381      		ldd r27,Z+3
 359 0208 B058      		subi r27,0x80
 360 020a A701      		movw r20,r14
 361 020c 9601      		movw r18,r12
 362 020e BC01      		movw r22,r24
 363 0210 CD01      		movw r24,r26
 364 0212 0E94 0000 		call __gtsf2
 365 0216 1816      		cp __zero_reg__,r24
 366 0218 04F4      		brge .L12
  83:lp_solve_5.5/lp_price.c **** #endif
  84:lp_solve_5.5/lp_price.c ****       result = COMP_PREFERINCUMBENT;
 367               		.loc 1 84 0
 368 021a 0FEF      		ldi r16,lo8(-1)
 369 021c 1FEF      		ldi r17,lo8(-1)
 370               	.L12:
  85:lp_solve_5.5/lp_price.c **** 
  86:lp_solve_5.5/lp_price.c **** #ifdef UseSortOnBound
  87:lp_solve_5.5/lp_price.c ****       /* Extra selection criterion based on the variable's range;
  88:lp_solve_5.5/lp_price.c ****         variable with - DUAL: small bound out; PRIMAL: large bound in */
  89:lp_solve_5.5/lp_price.c ****     if(result == COMP_PREFERNONE) {
  90:lp_solve_5.5/lp_price.c ****       testvalue = lp->upbo[candidatevarno] - lp->upbo[currentvarno];
  91:lp_solve_5.5/lp_price.c ****       if(testvalue < -margin)
  92:lp_solve_5.5/lp_price.c ****         result = COMP_PREFERINCUMBENT;
  93:lp_solve_5.5/lp_price.c ****       else if(testvalue > margin)
  94:lp_solve_5.5/lp_price.c ****         result = COMP_PREFERCANDIDATE;
  95:lp_solve_5.5/lp_price.c ****       result = my_chsign(isdual, result);
  96:lp_solve_5.5/lp_price.c ****     }
  97:lp_solve_5.5/lp_price.c **** #endif
  98:lp_solve_5.5/lp_price.c **** 
  99:lp_solve_5.5/lp_price.c **** #ifdef UseSortOnColumnLength
 100:lp_solve_5.5/lp_price.c ****     /* Prevent long columns from entering the basis */
 101:lp_solve_5.5/lp_price.c ****     if(result == COMP_PREFERNONE) {
 102:lp_solve_5.5/lp_price.c ****       if(candidatecolno > 0)
 103:lp_solve_5.5/lp_price.c ****         testvalue = mat_collength(lp->matA, candidatecolno) +
 104:lp_solve_5.5/lp_price.c ****                     (is_obj_in_basis(lp) && (lp->obj[candidatecolno] != 0) ? 1 : 0);
 105:lp_solve_5.5/lp_price.c ****       else
 106:lp_solve_5.5/lp_price.c ****         testvalue = 1;
 107:lp_solve_5.5/lp_price.c ****       if(currentcolno > 0)
 108:lp_solve_5.5/lp_price.c ****         testvalue -= mat_collength(lp->matA, currentcolno) +
 109:lp_solve_5.5/lp_price.c ****                      (is_obj_in_basis(lp) && (lp->obj[currentcolno] != 0) ? 1 : 0);
 110:lp_solve_5.5/lp_price.c ****       else
 111:lp_solve_5.5/lp_price.c ****         testvalue -= 1;
 112:lp_solve_5.5/lp_price.c ****       if(testvalue > 0)
 113:lp_solve_5.5/lp_price.c ****         result = COMP_PREFERINCUMBENT;
 114:lp_solve_5.5/lp_price.c ****       else if(testvalue < 0)
 115:lp_solve_5.5/lp_price.c ****         result = COMP_PREFERCANDIDATE;
 116:lp_solve_5.5/lp_price.c ****       result = my_chsign(isdual, result);
 117:lp_solve_5.5/lp_price.c ****     }
 118:lp_solve_5.5/lp_price.c **** #endif
 119:lp_solve_5.5/lp_price.c **** 
 120:lp_solve_5.5/lp_price.c ****     /* Select absolute best if the non-primary criteria failed to separate */
 121:lp_solve_5.5/lp_price.c ****     if((result == COMP_PREFERNONE) && candbetter) {
 371               		.loc 1 121 0
 372 021e 0115      		cp r16,__zero_reg__
 373 0220 1105      		cpc r17,__zero_reg__
 374 0222 01F4      		brne .L3
 375               		.loc 1 121 0 is_stmt 0 discriminator 1
 376 0224 8A85      		ldd r24,Y+10
 377 0226 8823      		tst r24
 378 0228 01F0      		breq .L3
 122:lp_solve_5.5/lp_price.c ****       result = COMP_PREFERCANDIDATE;
 379               		.loc 1 122 0 is_stmt 1
 380 022a 01E0      		ldi r16,lo8(1)
 381 022c 10E0      		ldi r17,0
 123:lp_solve_5.5/lp_price.c ****       goto Finish;
 382               		.loc 1 123 0
 383 022e 00C0      		rjmp .L14
 384               	.L3:
 385               	.LBE2:
 124:lp_solve_5.5/lp_price.c ****     }
 125:lp_solve_5.5/lp_price.c ****   }
 126:lp_solve_5.5/lp_price.c **** 
 127:lp_solve_5.5/lp_price.c ****   /* Final tie-breakers */
 128:lp_solve_5.5/lp_price.c ****   if(result == COMP_PREFERNONE) {
 386               		.loc 1 128 0
 387 0230 0115      		cp r16,__zero_reg__
 388 0232 1105      		cpc r17,__zero_reg__
 389 0234 01F0      		breq .+2
 390 0236 00C0      		rjmp .L14
 129:lp_solve_5.5/lp_price.c **** 
 130:lp_solve_5.5/lp_price.c ****     /* Add randomization tie-braker */
 131:lp_solve_5.5/lp_price.c ****     if(lp->piv_strategy & PRICE_RANDOMIZE) {
 391               		.loc 1 131 0
 392 0238 C501      		movw r24,r10
 393 023a 805A      		subi r24,-96
 394 023c 9D4F      		sbci r25,-3
 395 023e FC01      		movw r30,r24
 396 0240 8081      		ld r24,Z
 397 0242 9181      		ldd r25,Z+1
 398 0244 8078      		andi r24,128
 399 0246 9927      		clr r25
 400 0248 892B      		or r24,r25
 401 024a 01F0      		breq .L15
 132:lp_solve_5.5/lp_price.c ****       result = my_sign(PRICER_RANDFACT - rand_uniform(lp, 1.0));
 402               		.loc 1 132 0
 403 024c 40E0      		ldi r20,0
 404 024e 50E0      		ldi r21,0
 405 0250 60E8      		ldi r22,lo8(-128)
 406 0252 7FE3      		ldi r23,lo8(63)
 407 0254 C501      		movw r24,r10
 408 0256 0E94 0000 		call rand_uniform
 409 025a DC01      		movw r26,r24
 410 025c CB01      		movw r24,r22
 411 025e 9C01      		movw r18,r24
 412 0260 AD01      		movw r20,r26
 413 0262 6DEC      		ldi r22,lo8(-51)
 414 0264 7CEC      		ldi r23,lo8(-52)
 415 0266 8CEC      		ldi r24,lo8(-52)
 416 0268 9DE3      		ldi r25,lo8(61)
 417 026a 0E94 0000 		call __subsf3
 418 026e DC01      		movw r26,r24
 419 0270 CB01      		movw r24,r22
 420 0272 20E0      		ldi r18,0
 421 0274 30E0      		ldi r19,0
 422 0276 A901      		movw r20,r18
 423 0278 BC01      		movw r22,r24
 424 027a CD01      		movw r24,r26
 425 027c 0E94 0000 		call __ltsf2
 426 0280 8823      		tst r24
 427 0282 04F4      		brge .L27
 428               		.loc 1 132 0 is_stmt 0 discriminator 1
 429 0284 8FEF      		ldi r24,lo8(-1)
 430 0286 9FEF      		ldi r25,lo8(-1)
 431 0288 00C0      		rjmp .L18
 432               	.L27:
 433               		.loc 1 132 0 discriminator 2
 434 028a 81E0      		ldi r24,lo8(1)
 435 028c 90E0      		ldi r25,0
 436               	.L18:
 437               		.loc 1 132 0 discriminator 4
 438 028e 8C01      		movw r16,r24
 133:lp_solve_5.5/lp_price.c ****       if(candidatevarno < currentvarno)
 439               		.loc 1 133 0 is_stmt 1 discriminator 4
 440 0290 2B81      		ldd r18,Y+3
 441 0292 3C81      		ldd r19,Y+4
 442 0294 8981      		ldd r24,Y+1
 443 0296 9A81      		ldd r25,Y+2
 444 0298 2817      		cp r18,r24
 445 029a 3907      		cpc r19,r25
 446 029c 04F4      		brge .L15
 134:lp_solve_5.5/lp_price.c ****         result = -result;
 447               		.loc 1 134 0
 448 029e 1195      		neg r17
 449 02a0 0195      		neg r16
 450 02a2 1109      		sbc r17,__zero_reg__
 451               	.L15:
 135:lp_solve_5.5/lp_price.c ****     }
 136:lp_solve_5.5/lp_price.c **** 
 137:lp_solve_5.5/lp_price.c ****     /* Resolve ties via index ordinal */
 138:lp_solve_5.5/lp_price.c ****     if(result == COMP_PREFERNONE) {
 452               		.loc 1 138 0
 453 02a4 0115      		cp r16,__zero_reg__
 454 02a6 1105      		cpc r17,__zero_reg__
 455 02a8 01F4      		brne .L14
 139:lp_solve_5.5/lp_price.c ****       if(candidatevarno < currentvarno)
 456               		.loc 1 139 0
 457 02aa 2B81      		ldd r18,Y+3
 458 02ac 3C81      		ldd r19,Y+4
 459 02ae 8981      		ldd r24,Y+1
 460 02b0 9A81      		ldd r25,Y+2
 461 02b2 2817      		cp r18,r24
 462 02b4 3907      		cpc r19,r25
 463 02b6 04F4      		brge .L19
 140:lp_solve_5.5/lp_price.c ****         result = COMP_PREFERCANDIDATE;
 464               		.loc 1 140 0
 465 02b8 01E0      		ldi r16,lo8(1)
 466 02ba 10E0      		ldi r17,0
 467 02bc 00C0      		rjmp .L20
 468               	.L19:
 141:lp_solve_5.5/lp_price.c ****       else /* if(candidatevarno > currentvarno) */
 142:lp_solve_5.5/lp_price.c ****         result = COMP_PREFERINCUMBENT;
 469               		.loc 1 142 0
 470 02be 0FEF      		ldi r16,lo8(-1)
 471 02c0 1FEF      		ldi r17,lo8(-1)
 472               	.L20:
 143:lp_solve_5.5/lp_price.c ****       if(lp->_piv_left_)
 473               		.loc 1 143 0
 474 02c2 C501      		movw r24,r10
 475 02c4 8859      		subi r24,-104
 476 02c6 9D4F      		sbci r25,-3
 477 02c8 FC01      		movw r30,r24
 478 02ca 8081      		ld r24,Z
 479 02cc 8823      		tst r24
 480 02ce 01F0      		breq .L14
 144:lp_solve_5.5/lp_price.c ****         result = -result;
 481               		.loc 1 144 0
 482 02d0 1195      		neg r17
 483 02d2 0195      		neg r16
 484 02d4 1109      		sbc r17,__zero_reg__
 485               	.L14:
 145:lp_solve_5.5/lp_price.c ****     }
 146:lp_solve_5.5/lp_price.c ****   }
 147:lp_solve_5.5/lp_price.c **** 
 148:lp_solve_5.5/lp_price.c **** Finish:
 149:lp_solve_5.5/lp_price.c ****   return( result );
 486               		.loc 1 149 0
 487 02d6 C801      		movw r24,r16
 488               	/* epilogue start */
 150:lp_solve_5.5/lp_price.c **** 
 151:lp_solve_5.5/lp_price.c **** }
 489               		.loc 1 151 0
 490 02d8 2E96      		adiw r28,14
 491 02da 0FB6      		in __tmp_reg__,__SREG__
 492 02dc F894      		cli
 493 02de DEBF      		out __SP_H__,r29
 494 02e0 0FBE      		out __SREG__,__tmp_reg__
 495 02e2 CDBF      		out __SP_L__,r28
 496 02e4 DF91      		pop r29
 497 02e6 CF91      		pop r28
 498 02e8 1F91      		pop r17
 499 02ea 0F91      		pop r16
 500 02ec FF90      		pop r15
 501 02ee EF90      		pop r14
 502 02f0 DF90      		pop r13
 503 02f2 CF90      		pop r12
 504 02f4 BF90      		pop r11
 505 02f6 AF90      		pop r10
 506 02f8 9F90      		pop r9
 507 02fa 8F90      		pop r8
 508 02fc 7F90      		pop r7
 509 02fe 6F90      		pop r6
 510 0300 5F90      		pop r5
 511 0302 0895      		ret
 512               		.cfi_endproc
 513               	.LFE7:
 515               	.global	__gesf2
 516               	.global	compareSubstitutionVar
 518               	compareSubstitutionVar:
 519               	.LFB8:
 152:lp_solve_5.5/lp_price.c **** 
 153:lp_solve_5.5/lp_price.c **** int CMP_CALLMODEL compareSubstitutionVar(const pricerec *current, const pricerec *candidate)
 154:lp_solve_5.5/lp_price.c **** {
 520               		.loc 1 154 0
 521               		.cfi_startproc
 522 0304 5F92      		push r5
 523               	.LCFI17:
 524               		.cfi_def_cfa_offset 3
 525               		.cfi_offset 5, -2
 526 0306 6F92      		push r6
 527               	.LCFI18:
 528               		.cfi_def_cfa_offset 4
 529               		.cfi_offset 6, -3
 530 0308 7F92      		push r7
 531               	.LCFI19:
 532               		.cfi_def_cfa_offset 5
 533               		.cfi_offset 7, -4
 534 030a 8F92      		push r8
 535               	.LCFI20:
 536               		.cfi_def_cfa_offset 6
 537               		.cfi_offset 8, -5
 538 030c 9F92      		push r9
 539               	.LCFI21:
 540               		.cfi_def_cfa_offset 7
 541               		.cfi_offset 9, -6
 542 030e AF92      		push r10
 543               	.LCFI22:
 544               		.cfi_def_cfa_offset 8
 545               		.cfi_offset 10, -7
 546 0310 BF92      		push r11
 547               	.LCFI23:
 548               		.cfi_def_cfa_offset 9
 549               		.cfi_offset 11, -8
 550 0312 CF92      		push r12
 551               	.LCFI24:
 552               		.cfi_def_cfa_offset 10
 553               		.cfi_offset 12, -9
 554 0314 DF92      		push r13
 555               	.LCFI25:
 556               		.cfi_def_cfa_offset 11
 557               		.cfi_offset 13, -10
 558 0316 EF92      		push r14
 559               	.LCFI26:
 560               		.cfi_def_cfa_offset 12
 561               		.cfi_offset 14, -11
 562 0318 FF92      		push r15
 563               	.LCFI27:
 564               		.cfi_def_cfa_offset 13
 565               		.cfi_offset 15, -12
 566 031a 0F93      		push r16
 567               	.LCFI28:
 568               		.cfi_def_cfa_offset 14
 569               		.cfi_offset 16, -13
 570 031c 1F93      		push r17
 571               	.LCFI29:
 572               		.cfi_def_cfa_offset 15
 573               		.cfi_offset 17, -14
 574 031e CF93      		push r28
 575               	.LCFI30:
 576               		.cfi_def_cfa_offset 16
 577               		.cfi_offset 28, -15
 578 0320 DF93      		push r29
 579               	.LCFI31:
 580               		.cfi_def_cfa_offset 17
 581               		.cfi_offset 29, -16
 582 0322 CDB7      		in r28,__SP_L__
 583 0324 DEB7      		in r29,__SP_H__
 584               	.LCFI32:
 585               		.cfi_def_cfa_register 28
 586 0326 6697      		sbiw r28,22
 587               	.LCFI33:
 588               		.cfi_def_cfa_offset 39
 589 0328 0FB6      		in __tmp_reg__,__SREG__
 590 032a F894      		cli
 591 032c DEBF      		out __SP_H__,r29
 592 032e 0FBE      		out __SREG__,__tmp_reg__
 593 0330 CDBF      		out __SP_L__,r28
 594               	/* prologue: function */
 595               	/* frame size = 22 */
 596               	/* stack size = 37 */
 597               	.L__stack_usage = 37
 598 0332 9C8B      		std Y+20,r25
 599 0334 8B8B      		std Y+19,r24
 600 0336 7E8B      		std Y+22,r23
 601 0338 6D8B      		std Y+21,r22
 155:lp_solve_5.5/lp_price.c ****   register int    result = COMP_PREFERNONE;
 602               		.loc 1 155 0
 603 033a 00E0      		ldi r16,0
 604 033c 10E0      		ldi r17,0
 156:lp_solve_5.5/lp_price.c ****   register lprec  *lp = current->lp;
 605               		.loc 1 156 0
 606 033e 8B89      		ldd r24,Y+19
 607 0340 9C89      		ldd r25,Y+20
 608 0342 FC01      		movw r30,r24
 609 0344 6684      		ldd r6,Z+14
 610 0346 7784      		ldd r7,Z+15
 157:lp_solve_5.5/lp_price.c ****   register REAL   testvalue = candidate->theta,
 611               		.loc 1 157 0
 612 0348 8D89      		ldd r24,Y+21
 613 034a 9E89      		ldd r25,Y+22
 614 034c FC01      		movw r30,r24
 615 034e 8080      		ld r8,Z
 616 0350 9180      		ldd r9,Z+1
 617 0352 A280      		ldd r10,Z+2
 618 0354 B380      		ldd r11,Z+3
 158:lp_solve_5.5/lp_price.c ****                   margin = current->theta;
 619               		.loc 1 158 0
 620 0356 8B89      		ldd r24,Y+19
 621 0358 9C89      		ldd r25,Y+20
 622 035a FC01      		movw r30,r24
 623 035c C080      		ld r12,Z
 624 035e D180      		ldd r13,Z+1
 625 0360 E280      		ldd r14,Z+2
 626 0362 F380      		ldd r15,Z+3
 159:lp_solve_5.5/lp_price.c ****   MYBOOL isdual = candidate->isdual, candbetter;
 627               		.loc 1 159 0
 628 0364 8D89      		ldd r24,Y+21
 629 0366 9E89      		ldd r25,Y+22
 630 0368 FC01      		movw r30,r24
 631 036a 8089      		ldd r24,Z+16
 632 036c 8D83      		std Y+5,r24
 160:lp_solve_5.5/lp_price.c ****   int    currentcolno, currentvarno = current->varno,
 633               		.loc 1 160 0
 634 036e 8B89      		ldd r24,Y+19
 635 0370 9C89      		ldd r25,Y+20
 636 0372 FC01      		movw r30,r24
 637 0374 8485      		ldd r24,Z+12
 638 0376 9585      		ldd r25,Z+13
 639 0378 9A83      		std Y+2,r25
 640 037a 8983      		std Y+1,r24
 161:lp_solve_5.5/lp_price.c ****          candidatecolno, candidatevarno = candidate->varno;
 641               		.loc 1 161 0
 642 037c 8D89      		ldd r24,Y+21
 643 037e 9E89      		ldd r25,Y+22
 644 0380 FC01      		movw r30,r24
 645 0382 8485      		ldd r24,Z+12
 646 0384 9585      		ldd r25,Z+13
 647 0386 9C83      		std Y+4,r25
 648 0388 8B83      		std Y+3,r24
 162:lp_solve_5.5/lp_price.c **** 
 163:lp_solve_5.5/lp_price.c ****   if(!isdual) {
 649               		.loc 1 163 0
 650 038a 8D81      		ldd r24,Y+5
 651 038c 8823      		tst r24
 652 038e 01F4      		brne .L29
 164:lp_solve_5.5/lp_price.c ****     candidatevarno = lp->var_basic[candidatevarno];
 653               		.loc 1 164 0
 654 0390 C301      		movw r24,r6
 655 0392 8453      		subi r24,52
 656 0394 9D4F      		sbci r25,-3
 657 0396 FC01      		movw r30,r24
 658 0398 2081      		ld r18,Z
 659 039a 3181      		ldd r19,Z+1
 660 039c 8B81      		ldd r24,Y+3
 661 039e 9C81      		ldd r25,Y+4
 662 03a0 880F      		lsl r24
 663 03a2 991F      		rol r25
 664 03a4 820F      		add r24,r18
 665 03a6 931F      		adc r25,r19
 666 03a8 FC01      		movw r30,r24
 667 03aa 8081      		ld r24,Z
 668 03ac 9181      		ldd r25,Z+1
 669 03ae 9C83      		std Y+4,r25
 670 03b0 8B83      		std Y+3,r24
 165:lp_solve_5.5/lp_price.c ****     currentvarno   = lp->var_basic[currentvarno];
 671               		.loc 1 165 0
 672 03b2 C301      		movw r24,r6
 673 03b4 8453      		subi r24,52
 674 03b6 9D4F      		sbci r25,-3
 675 03b8 FC01      		movw r30,r24
 676 03ba 2081      		ld r18,Z
 677 03bc 3181      		ldd r19,Z+1
 678 03be 8981      		ldd r24,Y+1
 679 03c0 9A81      		ldd r25,Y+2
 680 03c2 880F      		lsl r24
 681 03c4 991F      		rol r25
 682 03c6 820F      		add r24,r18
 683 03c8 931F      		adc r25,r19
 684 03ca FC01      		movw r30,r24
 685 03cc 8081      		ld r24,Z
 686 03ce 9181      		ldd r25,Z+1
 687 03d0 9A83      		std Y+2,r25
 688 03d2 8983      		std Y+1,r24
 689               	.L29:
 166:lp_solve_5.5/lp_price.c ****   }
 167:lp_solve_5.5/lp_price.c ****   candidatecolno = candidatevarno - lp->rows;
 690               		.loc 1 167 0
 691 03d4 C301      		movw r24,r6
 692 03d6 8651      		subi r24,22
 693 03d8 9E4F      		sbci r25,-2
 694 03da FC01      		movw r30,r24
 695 03dc 8081      		ld r24,Z
 696 03de 9181      		ldd r25,Z+1
 697 03e0 2B81      		ldd r18,Y+3
 698 03e2 3C81      		ldd r19,Y+4
 699 03e4 A901      		movw r20,r18
 700 03e6 481B      		sub r20,r24
 701 03e8 590B      		sbc r21,r25
 702 03ea CA01      		movw r24,r20
 703 03ec 9F83      		std Y+7,r25
 704 03ee 8E83      		std Y+6,r24
 168:lp_solve_5.5/lp_price.c ****   currentcolno   = currentvarno - lp->rows;
 705               		.loc 1 168 0
 706 03f0 C301      		movw r24,r6
 707 03f2 8651      		subi r24,22
 708 03f4 9E4F      		sbci r25,-2
 709 03f6 FC01      		movw r30,r24
 710 03f8 8081      		ld r24,Z
 711 03fa 9181      		ldd r25,Z+1
 712 03fc 2981      		ldd r18,Y+1
 713 03fe 3A81      		ldd r19,Y+2
 714 0400 A901      		movw r20,r18
 715 0402 481B      		sub r20,r24
 716 0404 590B      		sbc r21,r25
 717 0406 CA01      		movw r24,r20
 718 0408 9987      		std Y+9,r25
 719 040a 8887      		std Y+8,r24
 169:lp_solve_5.5/lp_price.c **** 
 170:lp_solve_5.5/lp_price.c ****   /* Compute the ranking test metric. */
 171:lp_solve_5.5/lp_price.c ****   if(isdual) {
 720               		.loc 1 171 0
 721 040c 8D81      		ldd r24,Y+5
 722 040e 8823      		tst r24
 723 0410 01F0      		breq .L30
 172:lp_solve_5.5/lp_price.c ****     testvalue = fabs(testvalue);
 724               		.loc 1 172 0
 725 0412 E894      		clt
 726 0414 B7F8      		bld r11,7
 173:lp_solve_5.5/lp_price.c ****     margin    = fabs(margin);
 727               		.loc 1 173 0
 728 0416 E894      		clt
 729 0418 F7F8      		bld r15,7
 730               	.L30:
 174:lp_solve_5.5/lp_price.c ****   }
 175:lp_solve_5.5/lp_price.c **** 
 176:lp_solve_5.5/lp_price.c ****   /* Use absolute test for "small numbers", relative otherwise */
 177:lp_solve_5.5/lp_price.c ****   if(fabs(testvalue) < LIMIT_ABS_REL)
 731               		.loc 1 177 0
 732 041a D501      		movw r26,r10
 733 041c C401      		movw r24,r8
 734 041e BF77      		andi r27,0x7f
 735 0420 20E0      		ldi r18,0
 736 0422 30E0      		ldi r19,0
 737 0424 40E2      		ldi r20,lo8(32)
 738 0426 51E4      		ldi r21,lo8(65)
 739 0428 BC01      		movw r22,r24
 740 042a CD01      		movw r24,r26
 741 042c 0E94 0000 		call __ltsf2
 742 0430 8823      		tst r24
 743 0432 04F4      		brge .L65
 178:lp_solve_5.5/lp_price.c ****     testvalue -= margin;
 744               		.loc 1 178 0
 745 0434 A701      		movw r20,r14
 746 0436 9601      		movw r18,r12
 747 0438 C501      		movw r24,r10
 748 043a B401      		movw r22,r8
 749 043c 0E94 0000 		call __subsf3
 750 0440 DC01      		movw r26,r24
 751 0442 CB01      		movw r24,r22
 752 0444 4C01      		movw r8,r24
 753 0446 5D01      		movw r10,r26
 754 0448 00C0      		rjmp .L33
 755               	.L65:
 179:lp_solve_5.5/lp_price.c ****   else
 180:lp_solve_5.5/lp_price.c ****     testvalue = my_reldiff(testvalue, margin);
 756               		.loc 1 180 0
 757 044a A701      		movw r20,r14
 758 044c 9601      		movw r18,r12
 759 044e C501      		movw r24,r10
 760 0450 B401      		movw r22,r8
 761 0452 0E94 0000 		call __subsf3
 762 0456 DC01      		movw r26,r24
 763 0458 CB01      		movw r24,r22
 764 045a 4C01      		movw r8,r24
 765 045c 5D01      		movw r10,r26
 766 045e D701      		movw r26,r14
 767 0460 C601      		movw r24,r12
 768 0462 BF77      		andi r27,0x7f
 769 0464 20E0      		ldi r18,0
 770 0466 30E0      		ldi r19,0
 771 0468 40E8      		ldi r20,lo8(-128)
 772 046a 5FE3      		ldi r21,lo8(63)
 773 046c BC01      		movw r22,r24
 774 046e CD01      		movw r24,r26
 775 0470 0E94 0000 		call __addsf3
 776 0474 DC01      		movw r26,r24
 777 0476 CB01      		movw r24,r22
 778 0478 9C01      		movw r18,r24
 779 047a AD01      		movw r20,r26
 780 047c C501      		movw r24,r10
 781 047e B401      		movw r22,r8
 782 0480 0E94 0000 		call __divsf3
 783 0484 DC01      		movw r26,r24
 784 0486 CB01      		movw r24,r22
 785 0488 4C01      		movw r8,r24
 786 048a 5D01      		movw r10,r26
 787               	.L33:
 181:lp_solve_5.5/lp_price.c **** 
 182:lp_solve_5.5/lp_price.c ****   /* Find if the new Theta is smaller or near equal (i.e. testvalue <= eps)
 183:lp_solve_5.5/lp_price.c ****      compared to the previous best; ties will be broken by pivot size or index
 184:lp_solve_5.5/lp_price.c ****      NB! The margin below is essential in maintaining primal/dual feasibility
 185:lp_solve_5.5/lp_price.c ****          during the primal/dual simplex, respectively.  Sometimes a small
 186:lp_solve_5.5/lp_price.c ****          value prevents the selection of a suitable pivot, thereby weakening
 187:lp_solve_5.5/lp_price.c ****          the numerical stability of some models */
 188:lp_solve_5.5/lp_price.c ****   margin = PREC_SUBSTFEASGAP;
 788               		.loc 1 188 0
 789 048c C301      		movw r24,r6
 790 048e 865E      		subi r24,-26
 791 0490 9C4F      		sbci r25,-4
 792 0492 FC01      		movw r30,r24
 793 0494 C080      		ld r12,Z
 794 0496 D180      		ldd r13,Z+1
 795 0498 E280      		ldd r14,Z+2
 796 049a F380      		ldd r15,Z+3
 189:lp_solve_5.5/lp_price.c ****   candbetter = (MYBOOL) (testvalue < 0);
 797               		.loc 1 189 0
 798 049c 5524      		clr r5
 799 049e 5394      		inc r5
 800 04a0 20E0      		ldi r18,0
 801 04a2 30E0      		ldi r19,0
 802 04a4 A901      		movw r20,r18
 803 04a6 C501      		movw r24,r10
 804 04a8 B401      		movw r22,r8
 805 04aa 0E94 0000 		call __ltsf2
 806 04ae 8823      		tst r24
 807 04b0 04F0      		brlt .L34
 808 04b2 512C      		mov r5,__zero_reg__
 809               	.L34:
 810 04b4 5A86      		std Y+10,r5
 190:lp_solve_5.5/lp_price.c ****   if(candbetter) {
 811               		.loc 1 190 0
 812 04b6 8A85      		ldd r24,Y+10
 813 04b8 8823      		tst r24
 814 04ba 01F0      		breq .L35
 191:lp_solve_5.5/lp_price.c ****     if(testvalue < -margin)
 815               		.loc 1 191 0
 816 04bc D701      		movw r26,r14
 817 04be C601      		movw r24,r12
 818 04c0 B058      		subi r27,0x80
 819 04c2 A501      		movw r20,r10
 820 04c4 9401      		movw r18,r8
 821 04c6 BC01      		movw r22,r24
 822 04c8 CD01      		movw r24,r26
 823 04ca 0E94 0000 		call __gtsf2
 824 04ce 1816      		cp __zero_reg__,r24
 825 04d0 04F4      		brge .L38
 192:lp_solve_5.5/lp_price.c ****       result = COMP_PREFERCANDIDATE;
 826               		.loc 1 192 0
 827 04d2 01E0      		ldi r16,lo8(1)
 828 04d4 10E0      		ldi r17,0
 829 04d6 00C0      		rjmp .L38
 830               	.L35:
 193:lp_solve_5.5/lp_price.c ****   }
 194:lp_solve_5.5/lp_price.c ****   else if(testvalue > margin)
 831               		.loc 1 194 0
 832 04d8 A701      		movw r20,r14
 833 04da 9601      		movw r18,r12
 834 04dc C501      		movw r24,r10
 835 04de B401      		movw r22,r8
 836 04e0 0E94 0000 		call __gtsf2
 837 04e4 1816      		cp __zero_reg__,r24
 838 04e6 04F4      		brge .L38
 195:lp_solve_5.5/lp_price.c ****     result = COMP_PREFERINCUMBENT;
 839               		.loc 1 195 0
 840 04e8 0FEF      		ldi r16,lo8(-1)
 841 04ea 1FEF      		ldi r17,lo8(-1)
 842               	.L38:
 196:lp_solve_5.5/lp_price.c **** 
 197:lp_solve_5.5/lp_price.c ****   /* Resolve a tie */
 198:lp_solve_5.5/lp_price.c ****   if(result == COMP_PREFERNONE) {
 843               		.loc 1 198 0
 844 04ec 0115      		cp r16,__zero_reg__
 845 04ee 1105      		cpc r17,__zero_reg__
 846 04f0 01F0      		breq .+2
 847 04f2 00C0      		rjmp .L40
 848               	.LBB3:
 199:lp_solve_5.5/lp_price.c ****     REAL currentpivot = fabs(current->pivot),
 849               		.loc 1 199 0
 850 04f4 8B89      		ldd r24,Y+19
 851 04f6 9C89      		ldd r25,Y+20
 852 04f8 FC01      		movw r30,r24
 853 04fa 8481      		ldd r24,Z+4
 854 04fc 9581      		ldd r25,Z+5
 855 04fe A681      		ldd r26,Z+6
 856 0500 B781      		ldd r27,Z+7
 857 0502 BF77      		andi r27,0x7f
 858 0504 8B87      		std Y+11,r24
 859 0506 9C87      		std Y+12,r25
 860 0508 AD87      		std Y+13,r26
 861 050a BE87      		std Y+14,r27
 200:lp_solve_5.5/lp_price.c ****          candidatepivot = fabs(candidate->pivot);
 862               		.loc 1 200 0
 863 050c 8D89      		ldd r24,Y+21
 864 050e 9E89      		ldd r25,Y+22
 865 0510 FC01      		movw r30,r24
 866 0512 8481      		ldd r24,Z+4
 867 0514 9581      		ldd r25,Z+5
 868 0516 A681      		ldd r26,Z+6
 869 0518 B781      		ldd r27,Z+7
 870 051a BF77      		andi r27,0x7f
 871 051c 8F87      		std Y+15,r24
 872 051e 988B      		std Y+16,r25
 873 0520 A98B      		std Y+17,r26
 874 0522 BA8B      		std Y+18,r27
 201:lp_solve_5.5/lp_price.c **** 
 202:lp_solve_5.5/lp_price.c ****     /* Handle first index / Bland's rule specially */
 203:lp_solve_5.5/lp_price.c ****     if(lp->_piv_rule_ == PRICER_FIRSTINDEX) {
 875               		.loc 1 203 0
 876 0524 C301      		movw r24,r6
 877 0526 8E59      		subi r24,-98
 878 0528 9D4F      		sbci r25,-3
 879 052a FC01      		movw r30,r24
 880 052c 8081      		ld r24,Z
 881 052e 9181      		ldd r25,Z+1
 882 0530 892B      		or r24,r25
 883 0532 01F4      		brne .L41
 204:lp_solve_5.5/lp_price.c **** #if 1
 205:lp_solve_5.5/lp_price.c ****       /* Special secondary selection by pivot size (limited stability protection) */
 206:lp_solve_5.5/lp_price.c ****       margin = candidate->epspivot;
 884               		.loc 1 206 0
 885 0534 8D89      		ldd r24,Y+21
 886 0536 9E89      		ldd r25,Y+22
 887 0538 FC01      		movw r30,r24
 888 053a C084      		ldd r12,Z+8
 889 053c D184      		ldd r13,Z+9
 890 053e E284      		ldd r14,Z+10
 891 0540 F384      		ldd r15,Z+11
 207:lp_solve_5.5/lp_price.c ****       if((candidatepivot >= margin) && (currentpivot < margin))
 892               		.loc 1 207 0
 893 0542 A701      		movw r20,r14
 894 0544 9601      		movw r18,r12
 895 0546 6F85      		ldd r22,Y+15
 896 0548 7889      		ldd r23,Y+16
 897 054a 8989      		ldd r24,Y+17
 898 054c 9A89      		ldd r25,Y+18
 899 054e 0E94 0000 		call __gesf2
 900 0552 8823      		tst r24
 901 0554 04F0      		brlt .L40
 902               		.loc 1 207 0 is_stmt 0 discriminator 1
 903 0556 A701      		movw r20,r14
 904 0558 9601      		movw r18,r12
 905 055a 6B85      		ldd r22,Y+11
 906 055c 7C85      		ldd r23,Y+12
 907 055e 8D85      		ldd r24,Y+13
 908 0560 9E85      		ldd r25,Y+14
 909 0562 0E94 0000 		call __ltsf2
 910 0566 8823      		tst r24
 911 0568 04F4      		brge .L40
 208:lp_solve_5.5/lp_price.c ****         result = COMP_PREFERCANDIDATE;
 912               		.loc 1 208 0 is_stmt 1
 913 056a 01E0      		ldi r16,lo8(1)
 914 056c 10E0      		ldi r17,0
 915 056e 00C0      		rjmp .L40
 916               	.L41:
 209:lp_solve_5.5/lp_price.c **** #endif
 210:lp_solve_5.5/lp_price.c ****     }
 211:lp_solve_5.5/lp_price.c **** 
 212:lp_solve_5.5/lp_price.c ****     else {
 213:lp_solve_5.5/lp_price.c **** 
 214:lp_solve_5.5/lp_price.c ****       /* General secondary selection based on pivot size */
 215:lp_solve_5.5/lp_price.c **** #if 0
 216:lp_solve_5.5/lp_price.c ****       if(candidatepivot > MIN_STABLEPIVOT)
 217:lp_solve_5.5/lp_price.c ****         testvalue = my_reldiff(testvalue, currentpivot);
 218:lp_solve_5.5/lp_price.c ****       else
 219:lp_solve_5.5/lp_price.c **** #endif
 220:lp_solve_5.5/lp_price.c ****         testvalue = candidatepivot - currentpivot;
 917               		.loc 1 220 0
 918 0570 2B85      		ldd r18,Y+11
 919 0572 3C85      		ldd r19,Y+12
 920 0574 4D85      		ldd r20,Y+13
 921 0576 5E85      		ldd r21,Y+14
 922 0578 6F85      		ldd r22,Y+15
 923 057a 7889      		ldd r23,Y+16
 924 057c 8989      		ldd r24,Y+17
 925 057e 9A89      		ldd r25,Y+18
 926 0580 0E94 0000 		call __subsf3
 927 0584 DC01      		movw r26,r24
 928 0586 CB01      		movw r24,r22
 929 0588 4C01      		movw r8,r24
 930 058a 5D01      		movw r10,r26
 221:lp_solve_5.5/lp_price.c ****       if(testvalue > margin)
 931               		.loc 1 221 0
 932 058c A701      		movw r20,r14
 933 058e 9601      		movw r18,r12
 934 0590 C501      		movw r24,r10
 935 0592 B401      		movw r22,r8
 936 0594 0E94 0000 		call __gtsf2
 937 0598 1816      		cp __zero_reg__,r24
 938 059a 04F4      		brge .L66
 222:lp_solve_5.5/lp_price.c ****         result = COMP_PREFERCANDIDATE;
 939               		.loc 1 222 0
 940 059c 01E0      		ldi r16,lo8(1)
 941 059e 10E0      		ldi r17,0
 942 05a0 00C0      		rjmp .L40
 943               	.L66:
 223:lp_solve_5.5/lp_price.c ****       else if(testvalue < -margin)
 944               		.loc 1 223 0
 945 05a2 D701      		movw r26,r14
 946 05a4 C601      		movw r24,r12
 947 05a6 B058      		subi r27,0x80
 948 05a8 A501      		movw r20,r10
 949 05aa 9401      		movw r18,r8
 950 05ac BC01      		movw r22,r24
 951 05ae CD01      		movw r24,r26
 952 05b0 0E94 0000 		call __gtsf2
 953 05b4 1816      		cp __zero_reg__,r24
 954 05b6 04F4      		brge .L40
 224:lp_solve_5.5/lp_price.c ****         result = COMP_PREFERINCUMBENT;
 955               		.loc 1 224 0
 956 05b8 0FEF      		ldi r16,lo8(-1)
 957 05ba 1FEF      		ldi r17,lo8(-1)
 958               	.L40:
 959               	.LBE3:
 225:lp_solve_5.5/lp_price.c **** 
 226:lp_solve_5.5/lp_price.c **** #ifdef UseSortOnBound
 227:lp_solve_5.5/lp_price.c ****       /* Extra selection criterion based on the variable's range;
 228:lp_solve_5.5/lp_price.c ****         variable with - PRIMAL: small bound out; DUAL: large bound in */
 229:lp_solve_5.5/lp_price.c ****       if(result == COMP_PREFERNONE) {
 230:lp_solve_5.5/lp_price.c ****         testvalue = lp->upbo[candidatevarno] - lp->upbo[currentvarno];
 231:lp_solve_5.5/lp_price.c ****         if(testvalue < -margin)
 232:lp_solve_5.5/lp_price.c ****           result = COMP_PREFERCANDIDATE;
 233:lp_solve_5.5/lp_price.c ****         else if(testvalue > margin)
 234:lp_solve_5.5/lp_price.c ****           result = COMP_PREFERINCUMBENT;
 235:lp_solve_5.5/lp_price.c ****         result = my_chsign(isdual, result);
 236:lp_solve_5.5/lp_price.c ****       }
 237:lp_solve_5.5/lp_price.c **** #endif
 238:lp_solve_5.5/lp_price.c **** 
 239:lp_solve_5.5/lp_price.c **** #ifdef UseSortOnColumnLength
 240:lp_solve_5.5/lp_price.c ****       /* Prevent long columns from entering the basis */
 241:lp_solve_5.5/lp_price.c ****       if(result == COMP_PREFERNONE) {
 242:lp_solve_5.5/lp_price.c ****         if(candidatecolno > 0)
 243:lp_solve_5.5/lp_price.c ****           testvalue = mat_collength(lp->matA, candidatecolno) +
 244:lp_solve_5.5/lp_price.c ****                       (is_obj_in_basis(lp) && (lp->obj[candidatecolno] != 0) ? 1 : 0);
 245:lp_solve_5.5/lp_price.c ****         else
 246:lp_solve_5.5/lp_price.c ****           testvalue = 1;
 247:lp_solve_5.5/lp_price.c ****         if(currentcolno > 0)
 248:lp_solve_5.5/lp_price.c ****           testvalue -= mat_collength(lp->matA, currentcolno) +
 249:lp_solve_5.5/lp_price.c ****                        (is_obj_in_basis(lp) && (lp->obj[currentcolno] != 0) ? 1 : 0);
 250:lp_solve_5.5/lp_price.c ****         else
 251:lp_solve_5.5/lp_price.c ****           testvalue -= 1;
 252:lp_solve_5.5/lp_price.c ****         if(testvalue > 0)
 253:lp_solve_5.5/lp_price.c ****           result = COMP_PREFERCANDIDATE;
 254:lp_solve_5.5/lp_price.c ****         else if(testvalue < 0)
 255:lp_solve_5.5/lp_price.c ****           result = COMP_PREFERINCUMBENT;
 256:lp_solve_5.5/lp_price.c ****         result = my_chsign(isdual, result);
 257:lp_solve_5.5/lp_price.c ****       }
 258:lp_solve_5.5/lp_price.c **** #endif
 259:lp_solve_5.5/lp_price.c **** 
 260:lp_solve_5.5/lp_price.c ****     }
 261:lp_solve_5.5/lp_price.c ****   }
 262:lp_solve_5.5/lp_price.c **** 
 263:lp_solve_5.5/lp_price.c ****   /* Select absolute best if the non-primary criteria failed to separate */
 264:lp_solve_5.5/lp_price.c ****   if((result == COMP_PREFERNONE) && candbetter) {
 960               		.loc 1 264 0
 961 05bc 0115      		cp r16,__zero_reg__
 962 05be 1105      		cpc r17,__zero_reg__
 963 05c0 01F4      		brne .L48
 964               		.loc 1 264 0 is_stmt 0 discriminator 1
 965 05c2 8A85      		ldd r24,Y+10
 966 05c4 8823      		tst r24
 967 05c6 01F0      		breq .L48
 265:lp_solve_5.5/lp_price.c ****     result = COMP_PREFERCANDIDATE;
 968               		.loc 1 265 0 is_stmt 1
 969 05c8 01E0      		ldi r16,lo8(1)
 970 05ca 10E0      		ldi r17,0
 266:lp_solve_5.5/lp_price.c ****     goto Finish;
 971               		.loc 1 266 0
 972 05cc 00C0      		rjmp .L49
 973               	.L48:
 267:lp_solve_5.5/lp_price.c ****   }
 268:lp_solve_5.5/lp_price.c **** 
 269:lp_solve_5.5/lp_price.c ****   /* Final tie-breakers */
 270:lp_solve_5.5/lp_price.c ****   if(result == COMP_PREFERNONE) {
 974               		.loc 1 270 0
 975 05ce 0115      		cp r16,__zero_reg__
 976 05d0 1105      		cpc r17,__zero_reg__
 977 05d2 01F0      		breq .+2
 978 05d4 00C0      		rjmp .L49
 271:lp_solve_5.5/lp_price.c **** 
 272:lp_solve_5.5/lp_price.c ****     /* Add randomization tie-braker */
 273:lp_solve_5.5/lp_price.c ****     if(lp->piv_strategy & PRICE_RANDOMIZE) {
 979               		.loc 1 273 0
 980 05d6 C301      		movw r24,r6
 981 05d8 805A      		subi r24,-96
 982 05da 9D4F      		sbci r25,-3
 983 05dc FC01      		movw r30,r24
 984 05de 8081      		ld r24,Z
 985 05e0 9181      		ldd r25,Z+1
 986 05e2 8078      		andi r24,128
 987 05e4 9927      		clr r25
 988 05e6 892B      		or r24,r25
 989 05e8 01F0      		breq .L50
 274:lp_solve_5.5/lp_price.c ****       result = my_sign(PRICER_RANDFACT - rand_uniform(lp, 1.0));
 990               		.loc 1 274 0
 991 05ea 40E0      		ldi r20,0
 992 05ec 50E0      		ldi r21,0
 993 05ee 60E8      		ldi r22,lo8(-128)
 994 05f0 7FE3      		ldi r23,lo8(63)
 995 05f2 C301      		movw r24,r6
 996 05f4 0E94 0000 		call rand_uniform
 997 05f8 DC01      		movw r26,r24
 998 05fa CB01      		movw r24,r22
 999 05fc 9C01      		movw r18,r24
 1000 05fe AD01      		movw r20,r26
 1001 0600 6DEC      		ldi r22,lo8(-51)
 1002 0602 7CEC      		ldi r23,lo8(-52)
 1003 0604 8CEC      		ldi r24,lo8(-52)
 1004 0606 9DE3      		ldi r25,lo8(61)
 1005 0608 0E94 0000 		call __subsf3
 1006 060c DC01      		movw r26,r24
 1007 060e CB01      		movw r24,r22
 1008 0610 20E0      		ldi r18,0
 1009 0612 30E0      		ldi r19,0
 1010 0614 A901      		movw r20,r18
 1011 0616 BC01      		movw r22,r24
 1012 0618 CD01      		movw r24,r26
 1013 061a 0E94 0000 		call __ltsf2
 1014 061e 8823      		tst r24
 1015 0620 04F4      		brge .L67
 1016               		.loc 1 274 0 is_stmt 0 discriminator 1
 1017 0622 8FEF      		ldi r24,lo8(-1)
 1018 0624 9FEF      		ldi r25,lo8(-1)
 1019 0626 00C0      		rjmp .L53
 1020               	.L67:
 1021               		.loc 1 274 0 discriminator 2
 1022 0628 81E0      		ldi r24,lo8(1)
 1023 062a 90E0      		ldi r25,0
 1024               	.L53:
 1025               		.loc 1 274 0 discriminator 4
 1026 062c 8C01      		movw r16,r24
 275:lp_solve_5.5/lp_price.c ****       if(candidatevarno < currentvarno)
 1027               		.loc 1 275 0 is_stmt 1 discriminator 4
 1028 062e 2B81      		ldd r18,Y+3
 1029 0630 3C81      		ldd r19,Y+4
 1030 0632 8981      		ldd r24,Y+1
 1031 0634 9A81      		ldd r25,Y+2
 1032 0636 2817      		cp r18,r24
 1033 0638 3907      		cpc r19,r25
 1034 063a 04F4      		brge .L50
 276:lp_solve_5.5/lp_price.c ****         result = -result;
 1035               		.loc 1 276 0
 1036 063c 1195      		neg r17
 1037 063e 0195      		neg r16
 1038 0640 1109      		sbc r17,__zero_reg__
 1039               	.L50:
 277:lp_solve_5.5/lp_price.c ****     }
 278:lp_solve_5.5/lp_price.c **** 
 279:lp_solve_5.5/lp_price.c ****     /* Resolve ties via index ordinal (also prefers slacks over user variables) */
 280:lp_solve_5.5/lp_price.c ****     if(result == COMP_PREFERNONE) {
 1040               		.loc 1 280 0
 1041 0642 0115      		cp r16,__zero_reg__
 1042 0644 1105      		cpc r17,__zero_reg__
 1043 0646 01F4      		brne .L49
 281:lp_solve_5.5/lp_price.c ****       if(candidatevarno < currentvarno)
 1044               		.loc 1 281 0
 1045 0648 2B81      		ldd r18,Y+3
 1046 064a 3C81      		ldd r19,Y+4
 1047 064c 8981      		ldd r24,Y+1
 1048 064e 9A81      		ldd r25,Y+2
 1049 0650 2817      		cp r18,r24
 1050 0652 3907      		cpc r19,r25
 1051 0654 04F4      		brge .L54
 282:lp_solve_5.5/lp_price.c ****         result = COMP_PREFERCANDIDATE;
 1052               		.loc 1 282 0
 1053 0656 01E0      		ldi r16,lo8(1)
 1054 0658 10E0      		ldi r17,0
 1055 065a 00C0      		rjmp .L55
 1056               	.L54:
 283:lp_solve_5.5/lp_price.c ****       else /* if(candidatevarno > currentvarno) */
 284:lp_solve_5.5/lp_price.c ****         result = COMP_PREFERINCUMBENT;
 1057               		.loc 1 284 0
 1058 065c 0FEF      		ldi r16,lo8(-1)
 1059 065e 1FEF      		ldi r17,lo8(-1)
 1060               	.L55:
 285:lp_solve_5.5/lp_price.c ****       if(lp->_piv_left_)
 1061               		.loc 1 285 0
 1062 0660 C301      		movw r24,r6
 1063 0662 8859      		subi r24,-104
 1064 0664 9D4F      		sbci r25,-3
 1065 0666 FC01      		movw r30,r24
 1066 0668 8081      		ld r24,Z
 1067 066a 8823      		tst r24
 1068 066c 01F0      		breq .L49
 286:lp_solve_5.5/lp_price.c ****         result = -result;
 1069               		.loc 1 286 0
 1070 066e 1195      		neg r17
 1071 0670 0195      		neg r16
 1072 0672 1109      		sbc r17,__zero_reg__
 1073               	.L49:
 287:lp_solve_5.5/lp_price.c ****     }
 288:lp_solve_5.5/lp_price.c ****   }
 289:lp_solve_5.5/lp_price.c **** 
 290:lp_solve_5.5/lp_price.c **** Finish:
 291:lp_solve_5.5/lp_price.c ****   return( result );
 1074               		.loc 1 291 0
 1075 0674 C801      		movw r24,r16
 1076               	/* epilogue start */
 292:lp_solve_5.5/lp_price.c **** }
 1077               		.loc 1 292 0
 1078 0676 6696      		adiw r28,22
 1079 0678 0FB6      		in __tmp_reg__,__SREG__
 1080 067a F894      		cli
 1081 067c DEBF      		out __SP_H__,r29
 1082 067e 0FBE      		out __SREG__,__tmp_reg__
 1083 0680 CDBF      		out __SP_L__,r28
 1084 0682 DF91      		pop r29
 1085 0684 CF91      		pop r28
 1086 0686 1F91      		pop r17
 1087 0688 0F91      		pop r16
 1088 068a FF90      		pop r15
 1089 068c EF90      		pop r14
 1090 068e DF90      		pop r13
 1091 0690 CF90      		pop r12
 1092 0692 BF90      		pop r11
 1093 0694 AF90      		pop r10
 1094 0696 9F90      		pop r9
 1095 0698 8F90      		pop r8
 1096 069a 7F90      		pop r7
 1097 069c 6F90      		pop r6
 1098 069e 5F90      		pop r5
 1099 06a0 0895      		ret
 1100               		.cfi_endproc
 1101               	.LFE8:
 1103               	.global	compareBoundFlipVar
 1105               	compareBoundFlipVar:
 1106               	.LFB9:
 293:lp_solve_5.5/lp_price.c **** int CMP_CALLMODEL compareBoundFlipVar(const pricerec *current, const pricerec *candidate)
 294:lp_solve_5.5/lp_price.c **** {
 1107               		.loc 1 294 0
 1108               		.cfi_startproc
 1109 06a2 5F92      		push r5
 1110               	.LCFI34:
 1111               		.cfi_def_cfa_offset 3
 1112               		.cfi_offset 5, -2
 1113 06a4 6F92      		push r6
 1114               	.LCFI35:
 1115               		.cfi_def_cfa_offset 4
 1116               		.cfi_offset 6, -3
 1117 06a6 7F92      		push r7
 1118               	.LCFI36:
 1119               		.cfi_def_cfa_offset 5
 1120               		.cfi_offset 7, -4
 1121 06a8 8F92      		push r8
 1122               	.LCFI37:
 1123               		.cfi_def_cfa_offset 6
 1124               		.cfi_offset 8, -5
 1125 06aa 9F92      		push r9
 1126               	.LCFI38:
 1127               		.cfi_def_cfa_offset 7
 1128               		.cfi_offset 9, -6
 1129 06ac AF92      		push r10
 1130               	.LCFI39:
 1131               		.cfi_def_cfa_offset 8
 1132               		.cfi_offset 10, -7
 1133 06ae BF92      		push r11
 1134               	.LCFI40:
 1135               		.cfi_def_cfa_offset 9
 1136               		.cfi_offset 11, -8
 1137 06b0 CF92      		push r12
 1138               	.LCFI41:
 1139               		.cfi_def_cfa_offset 10
 1140               		.cfi_offset 12, -9
 1141 06b2 DF92      		push r13
 1142               	.LCFI42:
 1143               		.cfi_def_cfa_offset 11
 1144               		.cfi_offset 13, -10
 1145 06b4 EF92      		push r14
 1146               	.LCFI43:
 1147               		.cfi_def_cfa_offset 12
 1148               		.cfi_offset 14, -11
 1149 06b6 FF92      		push r15
 1150               	.LCFI44:
 1151               		.cfi_def_cfa_offset 13
 1152               		.cfi_offset 15, -12
 1153 06b8 0F93      		push r16
 1154               	.LCFI45:
 1155               		.cfi_def_cfa_offset 14
 1156               		.cfi_offset 16, -13
 1157 06ba 1F93      		push r17
 1158               	.LCFI46:
 1159               		.cfi_def_cfa_offset 15
 1160               		.cfi_offset 17, -14
 1161 06bc CF93      		push r28
 1162               	.LCFI47:
 1163               		.cfi_def_cfa_offset 16
 1164               		.cfi_offset 28, -15
 1165 06be DF93      		push r29
 1166               	.LCFI48:
 1167               		.cfi_def_cfa_offset 17
 1168               		.cfi_offset 29, -16
 1169 06c0 CDB7      		in r28,__SP_L__
 1170 06c2 DEB7      		in r29,__SP_H__
 1171               	.LCFI49:
 1172               		.cfi_def_cfa_register 28
 1173 06c4 6197      		sbiw r28,17
 1174               	.LCFI50:
 1175               		.cfi_def_cfa_offset 34
 1176 06c6 0FB6      		in __tmp_reg__,__SREG__
 1177 06c8 F894      		cli
 1178 06ca DEBF      		out __SP_H__,r29
 1179 06cc 0FBE      		out __SREG__,__tmp_reg__
 1180 06ce CDBF      		out __SP_L__,r28
 1181               	/* prologue: function */
 1182               	/* frame size = 17 */
 1183               	/* stack size = 32 */
 1184               	.L__stack_usage = 32
 1185 06d0 9F87      		std Y+15,r25
 1186 06d2 8E87      		std Y+14,r24
 1187 06d4 798B      		std Y+17,r23
 1188 06d6 688B      		std Y+16,r22
 295:lp_solve_5.5/lp_price.c ****   register REAL  testvalue, margin;
 296:lp_solve_5.5/lp_price.c ****   register int   result = COMP_PREFERNONE;
 1189               		.loc 1 296 0
 1190 06d8 00E0      		ldi r16,0
 1191 06da 10E0      		ldi r17,0
 297:lp_solve_5.5/lp_price.c ****   register lprec *lp = current->lp;
 1192               		.loc 1 297 0
 1193 06dc 8E85      		ldd r24,Y+14
 1194 06de 9F85      		ldd r25,Y+15
 1195 06e0 FC01      		movw r30,r24
 1196 06e2 6684      		ldd r6,Z+14
 1197 06e4 7784      		ldd r7,Z+15
 298:lp_solve_5.5/lp_price.c ****   MYBOOL    candbetter;
 299:lp_solve_5.5/lp_price.c ****   int currentvarno = current->varno,
 1198               		.loc 1 299 0
 1199 06e6 8E85      		ldd r24,Y+14
 1200 06e8 9F85      		ldd r25,Y+15
 1201 06ea FC01      		movw r30,r24
 1202 06ec 8485      		ldd r24,Z+12
 1203 06ee 9585      		ldd r25,Z+13
 1204 06f0 9A83      		std Y+2,r25
 1205 06f2 8983      		std Y+1,r24
 300:lp_solve_5.5/lp_price.c ****       candidatevarno = candidate->varno;
 1206               		.loc 1 300 0
 1207 06f4 8889      		ldd r24,Y+16
 1208 06f6 9989      		ldd r25,Y+17
 1209 06f8 FC01      		movw r30,r24
 1210 06fa 8485      		ldd r24,Z+12
 1211 06fc 9585      		ldd r25,Z+13
 1212 06fe 9C83      		std Y+4,r25
 1213 0700 8B83      		std Y+3,r24
 301:lp_solve_5.5/lp_price.c **** 
 302:lp_solve_5.5/lp_price.c ****   if(!current->isdual) {
 1214               		.loc 1 302 0
 1215 0702 8E85      		ldd r24,Y+14
 1216 0704 9F85      		ldd r25,Y+15
 1217 0706 FC01      		movw r30,r24
 1218 0708 8089      		ldd r24,Z+16
 1219 070a 8823      		tst r24
 1220 070c 01F4      		brne .L69
 303:lp_solve_5.5/lp_price.c ****     candidatevarno = lp->var_basic[candidatevarno];
 1221               		.loc 1 303 0
 1222 070e C301      		movw r24,r6
 1223 0710 8453      		subi r24,52
 1224 0712 9D4F      		sbci r25,-3
 1225 0714 FC01      		movw r30,r24
 1226 0716 2081      		ld r18,Z
 1227 0718 3181      		ldd r19,Z+1
 1228 071a 8B81      		ldd r24,Y+3
 1229 071c 9C81      		ldd r25,Y+4
 1230 071e 880F      		lsl r24
 1231 0720 991F      		rol r25
 1232 0722 820F      		add r24,r18
 1233 0724 931F      		adc r25,r19
 1234 0726 FC01      		movw r30,r24
 1235 0728 8081      		ld r24,Z
 1236 072a 9181      		ldd r25,Z+1
 1237 072c 9C83      		std Y+4,r25
 1238 072e 8B83      		std Y+3,r24
 304:lp_solve_5.5/lp_price.c ****     currentvarno   = lp->var_basic[currentvarno];
 1239               		.loc 1 304 0
 1240 0730 C301      		movw r24,r6
 1241 0732 8453      		subi r24,52
 1242 0734 9D4F      		sbci r25,-3
 1243 0736 FC01      		movw r30,r24
 1244 0738 2081      		ld r18,Z
 1245 073a 3181      		ldd r19,Z+1
 1246 073c 8981      		ldd r24,Y+1
 1247 073e 9A81      		ldd r25,Y+2
 1248 0740 880F      		lsl r24
 1249 0742 991F      		rol r25
 1250 0744 820F      		add r24,r18
 1251 0746 931F      		adc r25,r19
 1252 0748 FC01      		movw r30,r24
 1253 074a 8081      		ld r24,Z
 1254 074c 9181      		ldd r25,Z+1
 1255 074e 9A83      		std Y+2,r25
 1256 0750 8983      		std Y+1,r24
 1257               	.L69:
 305:lp_solve_5.5/lp_price.c ****   }
 306:lp_solve_5.5/lp_price.c **** 
 307:lp_solve_5.5/lp_price.c ****   /* Compute the ranking test metric. */
 308:lp_solve_5.5/lp_price.c ****   testvalue = candidate->theta;
 1258               		.loc 1 308 0
 1259 0752 8889      		ldd r24,Y+16
 1260 0754 9989      		ldd r25,Y+17
 1261 0756 FC01      		movw r30,r24
 1262 0758 8080      		ld r8,Z
 1263 075a 9180      		ldd r9,Z+1
 1264 075c A280      		ldd r10,Z+2
 1265 075e B380      		ldd r11,Z+3
 309:lp_solve_5.5/lp_price.c ****   margin    = current->theta;
 1266               		.loc 1 309 0
 1267 0760 8E85      		ldd r24,Y+14
 1268 0762 9F85      		ldd r25,Y+15
 1269 0764 FC01      		movw r30,r24
 1270 0766 C080      		ld r12,Z
 1271 0768 D180      		ldd r13,Z+1
 1272 076a E280      		ldd r14,Z+2
 1273 076c F380      		ldd r15,Z+3
 310:lp_solve_5.5/lp_price.c ****   if(candidate->isdual) {
 1274               		.loc 1 310 0
 1275 076e 8889      		ldd r24,Y+16
 1276 0770 9989      		ldd r25,Y+17
 1277 0772 FC01      		movw r30,r24
 1278 0774 8089      		ldd r24,Z+16
 1279 0776 8823      		tst r24
 1280 0778 01F0      		breq .L70
 311:lp_solve_5.5/lp_price.c ****     testvalue = fabs(testvalue);
 1281               		.loc 1 311 0
 1282 077a E894      		clt
 1283 077c B7F8      		bld r11,7
 312:lp_solve_5.5/lp_price.c ****     margin    = fabs(margin);
 1284               		.loc 1 312 0
 1285 077e E894      		clt
 1286 0780 F7F8      		bld r15,7
 1287               	.L70:
 313:lp_solve_5.5/lp_price.c ****   }
 314:lp_solve_5.5/lp_price.c ****   if(fabs(margin) < LIMIT_ABS_REL)
 1288               		.loc 1 314 0
 1289 0782 D701      		movw r26,r14
 1290 0784 C601      		movw r24,r12
 1291 0786 BF77      		andi r27,0x7f
 1292 0788 20E0      		ldi r18,0
 1293 078a 30E0      		ldi r19,0
 1294 078c 40E2      		ldi r20,lo8(32)
 1295 078e 51E4      		ldi r21,lo8(65)
 1296 0790 BC01      		movw r22,r24
 1297 0792 CD01      		movw r24,r26
 1298 0794 0E94 0000 		call __ltsf2
 1299 0798 8823      		tst r24
 1300 079a 04F4      		brge .L95
 315:lp_solve_5.5/lp_price.c ****     testvalue -= margin;
 1301               		.loc 1 315 0
 1302 079c A701      		movw r20,r14
 1303 079e 9601      		movw r18,r12
 1304 07a0 C501      		movw r24,r10
 1305 07a2 B401      		movw r22,r8
 1306 07a4 0E94 0000 		call __subsf3
 1307 07a8 DC01      		movw r26,r24
 1308 07aa CB01      		movw r24,r22
 1309 07ac 4C01      		movw r8,r24
 1310 07ae 5D01      		movw r10,r26
 1311 07b0 00C0      		rjmp .L73
 1312               	.L95:
 316:lp_solve_5.5/lp_price.c ****   else
 317:lp_solve_5.5/lp_price.c ****     testvalue = my_reldiff(testvalue, margin);
 1313               		.loc 1 317 0
 1314 07b2 A701      		movw r20,r14
 1315 07b4 9601      		movw r18,r12
 1316 07b6 C501      		movw r24,r10
 1317 07b8 B401      		movw r22,r8
 1318 07ba 0E94 0000 		call __subsf3
 1319 07be DC01      		movw r26,r24
 1320 07c0 CB01      		movw r24,r22
 1321 07c2 4C01      		movw r8,r24
 1322 07c4 5D01      		movw r10,r26
 1323 07c6 D701      		movw r26,r14
 1324 07c8 C601      		movw r24,r12
 1325 07ca BF77      		andi r27,0x7f
 1326 07cc 20E0      		ldi r18,0
 1327 07ce 30E0      		ldi r19,0
 1328 07d0 40E8      		ldi r20,lo8(-128)
 1329 07d2 5FE3      		ldi r21,lo8(63)
 1330 07d4 BC01      		movw r22,r24
 1331 07d6 CD01      		movw r24,r26
 1332 07d8 0E94 0000 		call __addsf3
 1333 07dc DC01      		movw r26,r24
 1334 07de CB01      		movw r24,r22
 1335 07e0 9C01      		movw r18,r24
 1336 07e2 AD01      		movw r20,r26
 1337 07e4 C501      		movw r24,r10
 1338 07e6 B401      		movw r22,r8
 1339 07e8 0E94 0000 		call __divsf3
 1340 07ec DC01      		movw r26,r24
 1341 07ee CB01      		movw r24,r22
 1342 07f0 4C01      		movw r8,r24
 1343 07f2 5D01      		movw r10,r26
 1344               	.L73:
 318:lp_solve_5.5/lp_price.c **** 
 319:lp_solve_5.5/lp_price.c ****   /* Find if the new Theta is smaller or near equal (i.e. testvalue <= eps)
 320:lp_solve_5.5/lp_price.c ****      compared to the previous best; ties will be broken by pivot size or index */
 321:lp_solve_5.5/lp_price.c ****   margin = PREC_SUBSTFEASGAP;
 1345               		.loc 1 321 0
 1346 07f4 C301      		movw r24,r6
 1347 07f6 865E      		subi r24,-26
 1348 07f8 9C4F      		sbci r25,-4
 1349 07fa FC01      		movw r30,r24
 1350 07fc C080      		ld r12,Z
 1351 07fe D180      		ldd r13,Z+1
 1352 0800 E280      		ldd r14,Z+2
 1353 0802 F380      		ldd r15,Z+3
 322:lp_solve_5.5/lp_price.c ****   candbetter = (MYBOOL) (testvalue < 0);
 1354               		.loc 1 322 0
 1355 0804 5524      		clr r5
 1356 0806 5394      		inc r5
 1357 0808 20E0      		ldi r18,0
 1358 080a 30E0      		ldi r19,0
 1359 080c A901      		movw r20,r18
 1360 080e C501      		movw r24,r10
 1361 0810 B401      		movw r22,r8
 1362 0812 0E94 0000 		call __ltsf2
 1363 0816 8823      		tst r24
 1364 0818 04F0      		brlt .L74
 1365 081a 512C      		mov r5,__zero_reg__
 1366               	.L74:
 1367 081c 5D82      		std Y+5,r5
 323:lp_solve_5.5/lp_price.c ****   if(candbetter) {
 1368               		.loc 1 323 0
 1369 081e 8D81      		ldd r24,Y+5
 1370 0820 8823      		tst r24
 1371 0822 01F0      		breq .L75
 324:lp_solve_5.5/lp_price.c ****     if(testvalue < -margin)
 1372               		.loc 1 324 0
 1373 0824 D701      		movw r26,r14
 1374 0826 C601      		movw r24,r12
 1375 0828 B058      		subi r27,0x80
 1376 082a A501      		movw r20,r10
 1377 082c 9401      		movw r18,r8
 1378 082e BC01      		movw r22,r24
 1379 0830 CD01      		movw r24,r26
 1380 0832 0E94 0000 		call __gtsf2
 1381 0836 1816      		cp __zero_reg__,r24
 1382 0838 04F4      		brge .L78
 325:lp_solve_5.5/lp_price.c ****       result = COMP_PREFERCANDIDATE;
 1383               		.loc 1 325 0
 1384 083a 01E0      		ldi r16,lo8(1)
 1385 083c 10E0      		ldi r17,0
 1386 083e 00C0      		rjmp .L78
 1387               	.L75:
 326:lp_solve_5.5/lp_price.c ****   }
 327:lp_solve_5.5/lp_price.c ****   else if(testvalue > margin)
 1388               		.loc 1 327 0
 1389 0840 A701      		movw r20,r14
 1390 0842 9601      		movw r18,r12
 1391 0844 C501      		movw r24,r10
 1392 0846 B401      		movw r22,r8
 1393 0848 0E94 0000 		call __gtsf2
 1394 084c 1816      		cp __zero_reg__,r24
 1395 084e 04F4      		brge .L78
 328:lp_solve_5.5/lp_price.c ****     result = COMP_PREFERINCUMBENT;
 1396               		.loc 1 328 0
 1397 0850 0FEF      		ldi r16,lo8(-1)
 1398 0852 1FEF      		ldi r17,lo8(-1)
 1399               	.L78:
 329:lp_solve_5.5/lp_price.c **** 
 330:lp_solve_5.5/lp_price.c ****   /* Resolve a tie */
 331:lp_solve_5.5/lp_price.c ****   if(result == COMP_PREFERNONE) {
 1400               		.loc 1 331 0
 1401 0854 0115      		cp r16,__zero_reg__
 1402 0856 1105      		cpc r17,__zero_reg__
 1403 0858 01F0      		breq .+2
 1404 085a 00C0      		rjmp .L80
 332:lp_solve_5.5/lp_price.c **** 
 333:lp_solve_5.5/lp_price.c ****     /* Tertiary selection based on priority for large pivot sizes */
 334:lp_solve_5.5/lp_price.c ****     if(result == COMP_PREFERNONE) {
 1405               		.loc 1 334 0
 1406 085c 0115      		cp r16,__zero_reg__
 1407 085e 1105      		cpc r17,__zero_reg__
 1408 0860 01F0      		breq .+2
 1409 0862 00C0      		rjmp .L81
 1410               	.LBB4:
 335:lp_solve_5.5/lp_price.c ****       REAL currentpivot   = fabs(current->pivot),
 1411               		.loc 1 335 0
 1412 0864 8E85      		ldd r24,Y+14
 1413 0866 9F85      		ldd r25,Y+15
 1414 0868 FC01      		movw r30,r24
 1415 086a 8481      		ldd r24,Z+4
 1416 086c 9581      		ldd r25,Z+5
 1417 086e A681      		ldd r26,Z+6
 1418 0870 B781      		ldd r27,Z+7
 1419 0872 BF77      		andi r27,0x7f
 1420 0874 8E83      		std Y+6,r24
 1421 0876 9F83      		std Y+7,r25
 1422 0878 A887      		std Y+8,r26
 1423 087a B987      		std Y+9,r27
 336:lp_solve_5.5/lp_price.c ****            candidatepivot = fabs(candidate->pivot);
 1424               		.loc 1 336 0
 1425 087c 8889      		ldd r24,Y+16
 1426 087e 9989      		ldd r25,Y+17
 1427 0880 FC01      		movw r30,r24
 1428 0882 8481      		ldd r24,Z+4
 1429 0884 9581      		ldd r25,Z+5
 1430 0886 A681      		ldd r26,Z+6
 1431 0888 B781      		ldd r27,Z+7
 1432 088a BF77      		andi r27,0x7f
 1433 088c 8A87      		std Y+10,r24
 1434 088e 9B87      		std Y+11,r25
 1435 0890 AC87      		std Y+12,r26
 1436 0892 BD87      		std Y+13,r27
 337:lp_solve_5.5/lp_price.c ****       if(candidatepivot > currentpivot+margin)
 1437               		.loc 1 337 0
 1438 0894 2E81      		ldd r18,Y+6
 1439 0896 3F81      		ldd r19,Y+7
 1440 0898 4885      		ldd r20,Y+8
 1441 089a 5985      		ldd r21,Y+9
 1442 089c C701      		movw r24,r14
 1443 089e B601      		movw r22,r12
 1444 08a0 0E94 0000 		call __addsf3
 1445 08a4 DC01      		movw r26,r24
 1446 08a6 CB01      		movw r24,r22
 1447 08a8 2A85      		ldd r18,Y+10
 1448 08aa 3B85      		ldd r19,Y+11
 1449 08ac 4C85      		ldd r20,Y+12
 1450 08ae 5D85      		ldd r21,Y+13
 1451 08b0 BC01      		movw r22,r24
 1452 08b2 CD01      		movw r24,r26
 1453 08b4 0E94 0000 		call __ltsf2
 1454 08b8 8823      		tst r24
 1455 08ba 04F4      		brge .L96
 338:lp_solve_5.5/lp_price.c ****         result = COMP_PREFERCANDIDATE;
 1456               		.loc 1 338 0
 1457 08bc 01E0      		ldi r16,lo8(1)
 1458 08be 10E0      		ldi r17,0
 1459 08c0 00C0      		rjmp .L81
 1460               	.L96:
 339:lp_solve_5.5/lp_price.c ****       else if(candidatepivot < currentpivot-margin)
 1461               		.loc 1 339 0
 1462 08c2 A701      		movw r20,r14
 1463 08c4 9601      		movw r18,r12
 1464 08c6 6E81      		ldd r22,Y+6
 1465 08c8 7F81      		ldd r23,Y+7
 1466 08ca 8885      		ldd r24,Y+8
 1467 08cc 9985      		ldd r25,Y+9
 1468 08ce 0E94 0000 		call __subsf3
 1469 08d2 DC01      		movw r26,r24
 1470 08d4 CB01      		movw r24,r22
 1471 08d6 2A85      		ldd r18,Y+10
 1472 08d8 3B85      		ldd r19,Y+11
 1473 08da 4C85      		ldd r20,Y+12
 1474 08dc 5D85      		ldd r21,Y+13
 1475 08de BC01      		movw r22,r24
 1476 08e0 CD01      		movw r24,r26
 1477 08e2 0E94 0000 		call __gtsf2
 1478 08e6 1816      		cp __zero_reg__,r24
 1479 08e8 04F4      		brge .L81
 340:lp_solve_5.5/lp_price.c ****         result = COMP_PREFERINCUMBENT;
 1480               		.loc 1 340 0
 1481 08ea 0FEF      		ldi r16,lo8(-1)
 1482 08ec 1FEF      		ldi r17,lo8(-1)
 1483               	.L81:
 1484               	.LBE4:
 341:lp_solve_5.5/lp_price.c ****     }
 342:lp_solve_5.5/lp_price.c **** 
 343:lp_solve_5.5/lp_price.c ****     /* Secondary selection based on priority for narrow-bounded variables */
 344:lp_solve_5.5/lp_price.c ****     if(result == COMP_PREFERNONE)
 1485               		.loc 1 344 0
 1486 08ee 0115      		cp r16,__zero_reg__
 1487 08f0 1105      		cpc r17,__zero_reg__
 1488 08f2 01F4      		brne .L80
 345:lp_solve_5.5/lp_price.c ****       result = compareREAL(&(lp->upbo[currentvarno]),
 346:lp_solve_5.5/lp_price.c ****                            &(lp->upbo[candidatevarno]));
 1489               		.loc 1 346 0
 1490 08f4 C301      		movw r24,r6
 1491 08f6 8055      		subi r24,80
 1492 08f8 9D4F      		sbci r25,-3
 1493 08fa FC01      		movw r30,r24
 1494 08fc 2081      		ld r18,Z
 1495 08fe 3181      		ldd r19,Z+1
 345:lp_solve_5.5/lp_price.c ****       result = compareREAL(&(lp->upbo[currentvarno]),
 1496               		.loc 1 345 0
 1497 0900 8B81      		ldd r24,Y+3
 1498 0902 9C81      		ldd r25,Y+4
 1499               		.loc 1 346 0
 1500 0904 880F      		lsl r24
 1501 0906 991F      		rol r25
 1502 0908 880F      		lsl r24
 1503 090a 991F      		rol r25
 345:lp_solve_5.5/lp_price.c ****       result = compareREAL(&(lp->upbo[currentvarno]),
 1504               		.loc 1 345 0
 1505 090c A901      		movw r20,r18
 1506 090e 480F      		add r20,r24
 1507 0910 591F      		adc r21,r25
 1508 0912 C301      		movw r24,r6
 1509 0914 8055      		subi r24,80
 1510 0916 9D4F      		sbci r25,-3
 1511 0918 FC01      		movw r30,r24
 1512 091a 2081      		ld r18,Z
 1513 091c 3181      		ldd r19,Z+1
 1514 091e 8981      		ldd r24,Y+1
 1515 0920 9A81      		ldd r25,Y+2
 1516 0922 880F      		lsl r24
 1517 0924 991F      		rol r25
 1518 0926 880F      		lsl r24
 1519 0928 991F      		rol r25
 1520 092a 820F      		add r24,r18
 1521 092c 931F      		adc r25,r19
 1522 092e BA01      		movw r22,r20
 1523 0930 0E94 0000 		call compareREAL
 1524 0934 8C01      		movw r16,r24
 1525               	.L80:
 347:lp_solve_5.5/lp_price.c **** 
 348:lp_solve_5.5/lp_price.c ****   }
 349:lp_solve_5.5/lp_price.c **** 
 350:lp_solve_5.5/lp_price.c ****   /* Select absolute best if the non-primary criteria failed to separate */
 351:lp_solve_5.5/lp_price.c ****   if((result == COMP_PREFERNONE) && candbetter) {
 1526               		.loc 1 351 0
 1527 0936 0115      		cp r16,__zero_reg__
 1528 0938 1105      		cpc r17,__zero_reg__
 1529 093a 01F4      		brne .L85
 1530               		.loc 1 351 0 is_stmt 0 discriminator 1
 1531 093c 8D81      		ldd r24,Y+5
 1532 093e 8823      		tst r24
 1533 0940 01F0      		breq .L85
 352:lp_solve_5.5/lp_price.c ****     result = COMP_PREFERCANDIDATE;
 1534               		.loc 1 352 0 is_stmt 1
 1535 0942 01E0      		ldi r16,lo8(1)
 1536 0944 10E0      		ldi r17,0
 353:lp_solve_5.5/lp_price.c ****     goto Finish;
 1537               		.loc 1 353 0
 1538 0946 00C0      		rjmp .L86
 1539               	.L85:
 354:lp_solve_5.5/lp_price.c ****   }
 355:lp_solve_5.5/lp_price.c **** 
 356:lp_solve_5.5/lp_price.c ****   /* Quaternary selection by index value */
 357:lp_solve_5.5/lp_price.c ****   if(result == COMP_PREFERNONE) {
 1540               		.loc 1 357 0
 1541 0948 0115      		cp r16,__zero_reg__
 1542 094a 1105      		cpc r17,__zero_reg__
 1543 094c 01F4      		brne .L86
 358:lp_solve_5.5/lp_price.c ****     if(candidatevarno < currentvarno)
 1544               		.loc 1 358 0
 1545 094e 2B81      		ldd r18,Y+3
 1546 0950 3C81      		ldd r19,Y+4
 1547 0952 8981      		ldd r24,Y+1
 1548 0954 9A81      		ldd r25,Y+2
 1549 0956 2817      		cp r18,r24
 1550 0958 3907      		cpc r19,r25
 1551 095a 04F4      		brge .L87
 359:lp_solve_5.5/lp_price.c ****       result = COMP_PREFERCANDIDATE;
 1552               		.loc 1 359 0
 1553 095c 01E0      		ldi r16,lo8(1)
 1554 095e 10E0      		ldi r17,0
 1555 0960 00C0      		rjmp .L88
 1556               	.L87:
 360:lp_solve_5.5/lp_price.c ****     else
 361:lp_solve_5.5/lp_price.c ****       result = COMP_PREFERINCUMBENT;
 1557               		.loc 1 361 0
 1558 0962 0FEF      		ldi r16,lo8(-1)
 1559 0964 1FEF      		ldi r17,lo8(-1)
 1560               	.L88:
 362:lp_solve_5.5/lp_price.c ****     if(lp->_piv_left_)
 1561               		.loc 1 362 0
 1562 0966 C301      		movw r24,r6
 1563 0968 8859      		subi r24,-104
 1564 096a 9D4F      		sbci r25,-3
 1565 096c FC01      		movw r30,r24
 1566 096e 8081      		ld r24,Z
 1567 0970 8823      		tst r24
 1568 0972 01F0      		breq .L86
 363:lp_solve_5.5/lp_price.c ****       result = -result;
 1569               		.loc 1 363 0
 1570 0974 1195      		neg r17
 1571 0976 0195      		neg r16
 1572 0978 1109      		sbc r17,__zero_reg__
 1573               	.L86:
 364:lp_solve_5.5/lp_price.c ****   }
 365:lp_solve_5.5/lp_price.c **** 
 366:lp_solve_5.5/lp_price.c **** Finish:
 367:lp_solve_5.5/lp_price.c ****   return( result );
 1574               		.loc 1 367 0
 1575 097a C801      		movw r24,r16
 1576               	/* epilogue start */
 368:lp_solve_5.5/lp_price.c **** }
 1577               		.loc 1 368 0
 1578 097c 6196      		adiw r28,17
 1579 097e 0FB6      		in __tmp_reg__,__SREG__
 1580 0980 F894      		cli
 1581 0982 DEBF      		out __SP_H__,r29
 1582 0984 0FBE      		out __SREG__,__tmp_reg__
 1583 0986 CDBF      		out __SP_L__,r28
 1584 0988 DF91      		pop r29
 1585 098a CF91      		pop r28
 1586 098c 1F91      		pop r17
 1587 098e 0F91      		pop r16
 1588 0990 FF90      		pop r15
 1589 0992 EF90      		pop r14
 1590 0994 DF90      		pop r13
 1591 0996 CF90      		pop r12
 1592 0998 BF90      		pop r11
 1593 099a AF90      		pop r10
 1594 099c 9F90      		pop r9
 1595 099e 8F90      		pop r8
 1596 09a0 7F90      		pop r7
 1597 09a2 6F90      		pop r6
 1598 09a4 5F90      		pop r5
 1599 09a6 0895      		ret
 1600               		.cfi_endproc
 1601               	.LFE9:
 1603               	.global	validImprovementVar
 1605               	validImprovementVar:
 1606               	.LFB10:
 369:lp_solve_5.5/lp_price.c **** 
 370:lp_solve_5.5/lp_price.c **** /* Validity operators for entering and leaving columns for both the primal and dual
 371:lp_solve_5.5/lp_price.c ****    simplex.  All candidates must satisfy these tests to qualify to be allowed to be
 372:lp_solve_5.5/lp_price.c ****    a subject for the comparison functions/operators. */
 373:lp_solve_5.5/lp_price.c **** STATIC MYBOOL validImprovementVar(pricerec *candidate)
 374:lp_solve_5.5/lp_price.c **** {
 1607               		.loc 1 374 0
 1608               		.cfi_startproc
 1609 09a8 DF92      		push r13
 1610               	.LCFI51:
 1611               		.cfi_def_cfa_offset 3
 1612               		.cfi_offset 13, -2
 1613 09aa EF92      		push r14
 1614               	.LCFI52:
 1615               		.cfi_def_cfa_offset 4
 1616               		.cfi_offset 14, -3
 1617 09ac FF92      		push r15
 1618               	.LCFI53:
 1619               		.cfi_def_cfa_offset 5
 1620               		.cfi_offset 15, -4
 1621 09ae 0F93      		push r16
 1622               	.LCFI54:
 1623               		.cfi_def_cfa_offset 6
 1624               		.cfi_offset 16, -5
 1625 09b0 1F93      		push r17
 1626               	.LCFI55:
 1627               		.cfi_def_cfa_offset 7
 1628               		.cfi_offset 17, -6
 1629 09b2 CF93      		push r28
 1630               	.LCFI56:
 1631               		.cfi_def_cfa_offset 8
 1632               		.cfi_offset 28, -7
 1633 09b4 DF93      		push r29
 1634               	.LCFI57:
 1635               		.cfi_def_cfa_offset 9
 1636               		.cfi_offset 29, -8
 1637 09b6 00D0      		rcall .
 1638               	.LCFI58:
 1639               		.cfi_def_cfa_offset 11
 1640 09b8 CDB7      		in r28,__SP_L__
 1641 09ba DEB7      		in r29,__SP_H__
 1642               	.LCFI59:
 1643               		.cfi_def_cfa_register 28
 1644               	/* prologue: function */
 1645               	/* frame size = 2 */
 1646               	/* stack size = 9 */
 1647               	.L__stack_usage = 9
 1648 09bc 9A83      		std Y+2,r25
 1649 09be 8983      		std Y+1,r24
 375:lp_solve_5.5/lp_price.c ****   register REAL candidatepivot = fabs(candidate->pivot);
 1650               		.loc 1 375 0
 1651 09c0 8981      		ldd r24,Y+1
 1652 09c2 9A81      		ldd r25,Y+2
 1653 09c4 FC01      		movw r30,r24
 1654 09c6 8481      		ldd r24,Z+4
 1655 09c8 9581      		ldd r25,Z+5
 1656 09ca A681      		ldd r26,Z+6
 1657 09cc B781      		ldd r27,Z+7
 1658 09ce 7C01      		movw r14,r24
 1659 09d0 8D01      		movw r16,r26
 1660 09d2 E894      		clt
 1661 09d4 17F9      		bld r17,7
 376:lp_solve_5.5/lp_price.c **** 
 377:lp_solve_5.5/lp_price.c **** #ifdef Paranoia
 378:lp_solve_5.5/lp_price.c ****   return( (MYBOOL) ((candidate->varno > 0) && (candidatepivot > candidate->lp->epsvalue)) );
 379:lp_solve_5.5/lp_price.c **** #else
 380:lp_solve_5.5/lp_price.c ****   return( (MYBOOL) (candidatepivot > candidate->lp->epsvalue) );
 1662               		.loc 1 380 0
 1663 09d6 8981      		ldd r24,Y+1
 1664 09d8 9A81      		ldd r25,Y+2
 1665 09da FC01      		movw r30,r24
 1666 09dc 8685      		ldd r24,Z+14
 1667 09de 9785      		ldd r25,Z+15
 1668 09e0 8A5E      		subi r24,-22
 1669 09e2 9C4F      		sbci r25,-4
 1670 09e4 FC01      		movw r30,r24
 1671 09e6 8081      		ld r24,Z
 1672 09e8 9181      		ldd r25,Z+1
 1673 09ea A281      		ldd r26,Z+2
 1674 09ec B381      		ldd r27,Z+3
 1675 09ee DD24      		clr r13
 1676 09f0 D394      		inc r13
 1677 09f2 A801      		movw r20,r16
 1678 09f4 9701      		movw r18,r14
 1679 09f6 BC01      		movw r22,r24
 1680 09f8 CD01      		movw r24,r26
 1681 09fa 0E94 0000 		call __ltsf2
 1682 09fe 8823      		tst r24
 1683 0a00 04F0      		brlt .L98
 1684 0a02 D12C      		mov r13,__zero_reg__
 1685               	.L98:
 1686 0a04 8D2D      		mov r24,r13
 1687               	/* epilogue start */
 381:lp_solve_5.5/lp_price.c **** #endif
 382:lp_solve_5.5/lp_price.c **** }
 1688               		.loc 1 382 0
 1689 0a06 0F90      		pop __tmp_reg__
 1690 0a08 0F90      		pop __tmp_reg__
 1691 0a0a DF91      		pop r29
 1692 0a0c CF91      		pop r28
 1693 0a0e 1F91      		pop r17
 1694 0a10 0F91      		pop r16
 1695 0a12 FF90      		pop r15
 1696 0a14 EF90      		pop r14
 1697 0a16 DF90      		pop r13
 1698 0a18 0895      		ret
 1699               		.cfi_endproc
 1700               	.LFE10:
 1702               	.global	validSubstitutionVar
 1704               	validSubstitutionVar:
 1705               	.LFB11:
 383:lp_solve_5.5/lp_price.c **** 
 384:lp_solve_5.5/lp_price.c **** STATIC MYBOOL validSubstitutionVar(pricerec *candidate)
 385:lp_solve_5.5/lp_price.c **** {
 1706               		.loc 1 385 0
 1707               		.cfi_startproc
 1708 0a1a CF92      		push r12
 1709               	.LCFI60:
 1710               		.cfi_def_cfa_offset 3
 1711               		.cfi_offset 12, -2
 1712 0a1c DF92      		push r13
 1713               	.LCFI61:
 1714               		.cfi_def_cfa_offset 4
 1715               		.cfi_offset 13, -3
 1716 0a1e EF92      		push r14
 1717               	.LCFI62:
 1718               		.cfi_def_cfa_offset 5
 1719               		.cfi_offset 14, -4
 1720 0a20 FF92      		push r15
 1721               	.LCFI63:
 1722               		.cfi_def_cfa_offset 6
 1723               		.cfi_offset 15, -5
 1724 0a22 0F93      		push r16
 1725               	.LCFI64:
 1726               		.cfi_def_cfa_offset 7
 1727               		.cfi_offset 16, -6
 1728 0a24 1F93      		push r17
 1729               	.LCFI65:
 1730               		.cfi_def_cfa_offset 8
 1731               		.cfi_offset 17, -7
 1732 0a26 CF93      		push r28
 1733               	.LCFI66:
 1734               		.cfi_def_cfa_offset 9
 1735               		.cfi_offset 28, -8
 1736 0a28 DF93      		push r29
 1737               	.LCFI67:
 1738               		.cfi_def_cfa_offset 10
 1739               		.cfi_offset 29, -9
 1740 0a2a 00D0      		rcall .
 1741               	.LCFI68:
 1742               		.cfi_def_cfa_offset 12
 1743 0a2c CDB7      		in r28,__SP_L__
 1744 0a2e DEB7      		in r29,__SP_H__
 1745               	.LCFI69:
 1746               		.cfi_def_cfa_register 28
 1747               	/* prologue: function */
 1748               	/* frame size = 2 */
 1749               	/* stack size = 10 */
 1750               	.L__stack_usage = 10
 1751 0a30 9A83      		std Y+2,r25
 1752 0a32 8983      		std Y+1,r24
 386:lp_solve_5.5/lp_price.c ****   register lprec *lp   = candidate->lp;
 1753               		.loc 1 386 0
 1754 0a34 8981      		ldd r24,Y+1
 1755 0a36 9A81      		ldd r25,Y+2
 1756 0a38 FC01      		movw r30,r24
 1757 0a3a 0685      		ldd r16,Z+14
 1758 0a3c 1785      		ldd r17,Z+15
 387:lp_solve_5.5/lp_price.c ****   register REAL  theta = (candidate->isdual ? fabs(candidate->theta) : candidate->theta);
 1759               		.loc 1 387 0
 1760 0a3e 8981      		ldd r24,Y+1
 1761 0a40 9A81      		ldd r25,Y+2
 1762 0a42 FC01      		movw r30,r24
 1763 0a44 8089      		ldd r24,Z+16
 1764 0a46 8823      		tst r24
 1765 0a48 01F0      		breq .L101
 1766               		.loc 1 387 0 is_stmt 0 discriminator 1
 1767 0a4a 8981      		ldd r24,Y+1
 1768 0a4c 9A81      		ldd r25,Y+2
 1769 0a4e FC01      		movw r30,r24
 1770 0a50 8081      		ld r24,Z
 1771 0a52 9181      		ldd r25,Z+1
 1772 0a54 A281      		ldd r26,Z+2
 1773 0a56 B381      		ldd r27,Z+3
 1774 0a58 BF77      		andi r27,0x7f
 1775 0a5a 00C0      		rjmp .L102
 1776               	.L101:
 1777               		.loc 1 387 0 discriminator 2
 1778 0a5c 8981      		ldd r24,Y+1
 1779 0a5e 9A81      		ldd r25,Y+2
 1780 0a60 FC01      		movw r30,r24
 1781 0a62 8081      		ld r24,Z
 1782 0a64 9181      		ldd r25,Z+1
 1783 0a66 A281      		ldd r26,Z+2
 1784 0a68 B381      		ldd r27,Z+3
 1785               	.L102:
 1786               		.loc 1 387 0 discriminator 4
 1787 0a6a 6C01      		movw r12,r24
 1788 0a6c 7D01      		movw r14,r26
 388:lp_solve_5.5/lp_price.c **** 
 389:lp_solve_5.5/lp_price.c **** #ifdef Paranoia
 390:lp_solve_5.5/lp_price.c ****   if(candidate->varno <= 0)
 391:lp_solve_5.5/lp_price.c ****     return( FALSE );
 392:lp_solve_5.5/lp_price.c ****   else
 393:lp_solve_5.5/lp_price.c **** #endif
 394:lp_solve_5.5/lp_price.c ****   if(fabs(candidate->pivot) >= lp->infinite)
 1789               		.loc 1 394 0 is_stmt 1 discriminator 4
 1790 0a6e 8981      		ldd r24,Y+1
 1791 0a70 9A81      		ldd r25,Y+2
 1792 0a72 FC01      		movw r30,r24
 1793 0a74 8481      		ldd r24,Z+4
 1794 0a76 9581      		ldd r25,Z+5
 1795 0a78 A681      		ldd r26,Z+6
 1796 0a7a B781      		ldd r27,Z+7
 1797 0a7c BF77      		andi r27,0x7f
 1798 0a7e 9801      		movw r18,r16
 1799 0a80 265F      		subi r18,-10
 1800 0a82 3C4F      		sbci r19,-4
 1801 0a84 F901      		movw r30,r18
 1802 0a86 2081      		ld r18,Z
 1803 0a88 3181      		ldd r19,Z+1
 1804 0a8a 4281      		ldd r20,Z+2
 1805 0a8c 5381      		ldd r21,Z+3
 1806 0a8e BC01      		movw r22,r24
 1807 0a90 CD01      		movw r24,r26
 1808 0a92 0E94 0000 		call __gesf2
 1809 0a96 8823      		tst r24
 1810 0a98 04F0      		brlt .L114
 395:lp_solve_5.5/lp_price.c ****     return( (MYBOOL) (theta < lp->infinite) );
 1811               		.loc 1 395 0
 1812 0a9a C801      		movw r24,r16
 1813 0a9c 865F      		subi r24,-10
 1814 0a9e 9C4F      		sbci r25,-4
 1815 0aa0 FC01      		movw r30,r24
 1816 0aa2 8081      		ld r24,Z
 1817 0aa4 9181      		ldd r25,Z+1
 1818 0aa6 A281      		ldd r26,Z+2
 1819 0aa8 B381      		ldd r27,Z+3
 1820 0aaa 11E0      		ldi r17,lo8(1)
 1821 0aac A701      		movw r20,r14
 1822 0aae 9601      		movw r18,r12
 1823 0ab0 BC01      		movw r22,r24
 1824 0ab2 CD01      		movw r24,r26
 1825 0ab4 0E94 0000 		call __gtsf2
 1826 0ab8 1816      		cp __zero_reg__,r24
 1827 0aba 04F0      		brlt .L105
 1828 0abc 10E0      		ldi r17,0
 1829               	.L105:
 1830 0abe 812F      		mov r24,r17
 1831 0ac0 00C0      		rjmp .L106
 1832               	.L114:
 396:lp_solve_5.5/lp_price.c ****   else
 397:lp_solve_5.5/lp_price.c ****     return( (MYBOOL) ((theta < lp->infinite) &&
 1833               		.loc 1 397 0
 1834 0ac2 C801      		movw r24,r16
 1835 0ac4 865F      		subi r24,-10
 1836 0ac6 9C4F      		sbci r25,-4
 1837 0ac8 FC01      		movw r30,r24
 1838 0aca 8081      		ld r24,Z
 1839 0acc 9181      		ldd r25,Z+1
 1840 0ace A281      		ldd r26,Z+2
 1841 0ad0 B381      		ldd r27,Z+3
 1842 0ad2 A701      		movw r20,r14
 1843 0ad4 9601      		movw r18,r12
 1844 0ad6 BC01      		movw r22,r24
 1845 0ad8 CD01      		movw r24,r26
 1846 0ada 0E94 0000 		call __gtsf2
 1847 0ade 1816      		cp __zero_reg__,r24
 1848 0ae0 04F4      		brge .L107
 398:lp_solve_5.5/lp_price.c ****                       (fabs(candidate->pivot) >= candidate->epspivot)) );
 1849               		.loc 1 398 0 discriminator 1
 1850 0ae2 8981      		ldd r24,Y+1
 1851 0ae4 9A81      		ldd r25,Y+2
 1852 0ae6 FC01      		movw r30,r24
 1853 0ae8 8481      		ldd r24,Z+4
 1854 0aea 9581      		ldd r25,Z+5
 1855 0aec A681      		ldd r26,Z+6
 1856 0aee B781      		ldd r27,Z+7
 1857 0af0 BF77      		andi r27,0x7f
 1858 0af2 2981      		ldd r18,Y+1
 1859 0af4 3A81      		ldd r19,Y+2
 1860 0af6 F901      		movw r30,r18
 1861 0af8 2085      		ldd r18,Z+8
 1862 0afa 3185      		ldd r19,Z+9
 1863 0afc 4285      		ldd r20,Z+10
 1864 0afe 5385      		ldd r21,Z+11
 397:lp_solve_5.5/lp_price.c ****                       (fabs(candidate->pivot) >= candidate->epspivot)) );
 1865               		.loc 1 397 0 discriminator 1
 1866 0b00 BC01      		movw r22,r24
 1867 0b02 CD01      		movw r24,r26
 1868 0b04 0E94 0000 		call __gesf2
 1869 0b08 8823      		tst r24
 1870 0b0a 04F0      		brlt .L107
 397:lp_solve_5.5/lp_price.c ****                       (fabs(candidate->pivot) >= candidate->epspivot)) );
 1871               		.loc 1 397 0 is_stmt 0 discriminator 3
 1872 0b0c 81E0      		ldi r24,lo8(1)
 1873 0b0e 90E0      		ldi r25,0
 1874 0b10 00C0      		rjmp .L110
 1875               	.L107:
 397:lp_solve_5.5/lp_price.c ****                       (fabs(candidate->pivot) >= candidate->epspivot)) );
 1876               		.loc 1 397 0 discriminator 4
 1877 0b12 80E0      		ldi r24,0
 1878 0b14 90E0      		ldi r25,0
 1879               	.L110:
 1880               	.L106:
 1881               	/* epilogue start */
 399:lp_solve_5.5/lp_price.c **** }
 1882               		.loc 1 399 0 is_stmt 1
 1883 0b16 0F90      		pop __tmp_reg__
 1884 0b18 0F90      		pop __tmp_reg__
 1885 0b1a DF91      		pop r29
 1886 0b1c CF91      		pop r28
 1887 0b1e 1F91      		pop r17
 1888 0b20 0F91      		pop r16
 1889 0b22 FF90      		pop r15
 1890 0b24 EF90      		pop r14
 1891 0b26 DF90      		pop r13
 1892 0b28 CF90      		pop r12
 1893 0b2a 0895      		ret
 1894               		.cfi_endproc
 1895               	.LFE11:
 1897               	.global	compareImprovementQS
 1899               	compareImprovementQS:
 1900               	.LFB12:
 400:lp_solve_5.5/lp_price.c **** 
 401:lp_solve_5.5/lp_price.c **** int CMP_CALLMODEL compareImprovementQS(const UNIONTYPE QSORTrec *current, const UNIONTYPE QSORTrec 
 402:lp_solve_5.5/lp_price.c **** {
 1901               		.loc 1 402 0
 1902               		.cfi_startproc
 1903 0b2c CF93      		push r28
 1904               	.LCFI70:
 1905               		.cfi_def_cfa_offset 3
 1906               		.cfi_offset 28, -2
 1907 0b2e DF93      		push r29
 1908               	.LCFI71:
 1909               		.cfi_def_cfa_offset 4
 1910               		.cfi_offset 29, -3
 1911 0b30 00D0      		rcall .
 1912 0b32 00D0      		rcall .
 1913               	.LCFI72:
 1914               		.cfi_def_cfa_offset 8
 1915 0b34 CDB7      		in r28,__SP_L__
 1916 0b36 DEB7      		in r29,__SP_H__
 1917               	.LCFI73:
 1918               		.cfi_def_cfa_register 28
 1919               	/* prologue: function */
 1920               	/* frame size = 4 */
 1921               	/* stack size = 6 */
 1922               	.L__stack_usage = 6
 1923 0b38 9A83      		std Y+2,r25
 1924 0b3a 8983      		std Y+1,r24
 1925 0b3c 7C83      		std Y+4,r23
 1926 0b3e 6B83      		std Y+3,r22
 403:lp_solve_5.5/lp_price.c ****   return( compareImprovementVar((pricerec *) current->pvoidint2.ptr, (pricerec *) candidate->pvoidi
 1927               		.loc 1 403 0
 1928 0b40 8B81      		ldd r24,Y+3
 1929 0b42 9C81      		ldd r25,Y+4
 1930 0b44 FC01      		movw r30,r24
 1931 0b46 2081      		ld r18,Z
 1932 0b48 3181      		ldd r19,Z+1
 1933 0b4a 8981      		ldd r24,Y+1
 1934 0b4c 9A81      		ldd r25,Y+2
 1935 0b4e FC01      		movw r30,r24
 1936 0b50 8081      		ld r24,Z
 1937 0b52 9181      		ldd r25,Z+1
 1938 0b54 B901      		movw r22,r18
 1939 0b56 0E94 0000 		call compareImprovementVar
 1940               	/* epilogue start */
 404:lp_solve_5.5/lp_price.c **** }
 1941               		.loc 1 404 0
 1942 0b5a 0F90      		pop __tmp_reg__
 1943 0b5c 0F90      		pop __tmp_reg__
 1944 0b5e 0F90      		pop __tmp_reg__
 1945 0b60 0F90      		pop __tmp_reg__
 1946 0b62 DF91      		pop r29
 1947 0b64 CF91      		pop r28
 1948 0b66 0895      		ret
 1949               		.cfi_endproc
 1950               	.LFE12:
 1952               	.global	compareSubstitutionQS
 1954               	compareSubstitutionQS:
 1955               	.LFB13:
 405:lp_solve_5.5/lp_price.c **** int CMP_CALLMODEL compareSubstitutionQS(const UNIONTYPE QSORTrec *current, const UNIONTYPE QSORTrec
 406:lp_solve_5.5/lp_price.c **** {
 1956               		.loc 1 406 0
 1957               		.cfi_startproc
 1958 0b68 CF93      		push r28
 1959               	.LCFI74:
 1960               		.cfi_def_cfa_offset 3
 1961               		.cfi_offset 28, -2
 1962 0b6a DF93      		push r29
 1963               	.LCFI75:
 1964               		.cfi_def_cfa_offset 4
 1965               		.cfi_offset 29, -3
 1966 0b6c 00D0      		rcall .
 1967 0b6e 00D0      		rcall .
 1968               	.LCFI76:
 1969               		.cfi_def_cfa_offset 8
 1970 0b70 CDB7      		in r28,__SP_L__
 1971 0b72 DEB7      		in r29,__SP_H__
 1972               	.LCFI77:
 1973               		.cfi_def_cfa_register 28
 1974               	/* prologue: function */
 1975               	/* frame size = 4 */
 1976               	/* stack size = 6 */
 1977               	.L__stack_usage = 6
 1978 0b74 9A83      		std Y+2,r25
 1979 0b76 8983      		std Y+1,r24
 1980 0b78 7C83      		std Y+4,r23
 1981 0b7a 6B83      		std Y+3,r22
 407:lp_solve_5.5/lp_price.c ****   return( compareBoundFlipVar((pricerec *) current->pvoidint2.ptr, (pricerec *) candidate->pvoidint
 1982               		.loc 1 407 0
 1983 0b7c 8B81      		ldd r24,Y+3
 1984 0b7e 9C81      		ldd r25,Y+4
 1985 0b80 FC01      		movw r30,r24
 1986 0b82 2081      		ld r18,Z
 1987 0b84 3181      		ldd r19,Z+1
 1988 0b86 8981      		ldd r24,Y+1
 1989 0b88 9A81      		ldd r25,Y+2
 1990 0b8a FC01      		movw r30,r24
 1991 0b8c 8081      		ld r24,Z
 1992 0b8e 9181      		ldd r25,Z+1
 1993 0b90 B901      		movw r22,r18
 1994 0b92 0E94 0000 		call compareBoundFlipVar
 1995               	/* epilogue start */
 408:lp_solve_5.5/lp_price.c **** /*  return( compareSubstitutionVar((pricerec *) current->self, (pricerec *) candidate->self) ); */
 409:lp_solve_5.5/lp_price.c **** }
 1996               		.loc 1 409 0
 1997 0b96 0F90      		pop __tmp_reg__
 1998 0b98 0F90      		pop __tmp_reg__
 1999 0b9a 0F90      		pop __tmp_reg__
 2000 0b9c 0F90      		pop __tmp_reg__
 2001 0b9e DF91      		pop r29
 2002 0ba0 CF91      		pop r28
 2003 0ba2 0895      		ret
 2004               		.cfi_endproc
 2005               	.LFE13:
 2007               	.global	addCandidateVar
 2009               	addCandidateVar:
 2010               	.LFB14:
 410:lp_solve_5.5/lp_price.c **** 
 411:lp_solve_5.5/lp_price.c **** /* Function to add a valid pivot candidate into the specified list */
 412:lp_solve_5.5/lp_price.c **** STATIC int addCandidateVar(pricerec *candidate, multirec *multi, findCompare_func findCompare, MYBO
 413:lp_solve_5.5/lp_price.c **** {
 2011               		.loc 1 413 0
 2012               		.cfi_startproc
 2013 0ba4 CF92      		push r12
 2014               	.LCFI78:
 2015               		.cfi_def_cfa_offset 3
 2016               		.cfi_offset 12, -2
 2017 0ba6 EF92      		push r14
 2018               	.LCFI79:
 2019               		.cfi_def_cfa_offset 4
 2020               		.cfi_offset 14, -3
 2021 0ba8 FF92      		push r15
 2022               	.LCFI80:
 2023               		.cfi_def_cfa_offset 5
 2024               		.cfi_offset 15, -4
 2025 0baa 0F93      		push r16
 2026               	.LCFI81:
 2027               		.cfi_def_cfa_offset 6
 2028               		.cfi_offset 16, -5
 2029 0bac 1F93      		push r17
 2030               	.LCFI82:
 2031               		.cfi_def_cfa_offset 7
 2032               		.cfi_offset 17, -6
 2033 0bae CF93      		push r28
 2034               	.LCFI83:
 2035               		.cfi_def_cfa_offset 8
 2036               		.cfi_offset 28, -7
 2037 0bb0 DF93      		push r29
 2038               	.LCFI84:
 2039               		.cfi_def_cfa_offset 9
 2040               		.cfi_offset 29, -8
 2041 0bb2 CDB7      		in r28,__SP_L__
 2042 0bb4 DEB7      		in r29,__SP_H__
 2043               	.LCFI85:
 2044               		.cfi_def_cfa_register 28
 2045 0bb6 6597      		sbiw r28,21
 2046               	.LCFI86:
 2047               		.cfi_def_cfa_offset 30
 2048 0bb8 0FB6      		in __tmp_reg__,__SREG__
 2049 0bba F894      		cli
 2050 0bbc DEBF      		out __SP_H__,r29
 2051 0bbe 0FBE      		out __SREG__,__tmp_reg__
 2052 0bc0 CDBF      		out __SP_L__,r28
 2053               	/* prologue: function */
 2054               	/* frame size = 21 */
 2055               	/* stack size = 28 */
 2056               	.L__stack_usage = 28
 2057 0bc2 988B      		std Y+16,r25
 2058 0bc4 8F87      		std Y+15,r24
 2059 0bc6 7A8B      		std Y+18,r23
 2060 0bc8 698B      		std Y+17,r22
 2061 0bca 5C8B      		std Y+20,r21
 2062 0bcc 4B8B      		std Y+19,r20
 2063 0bce 2D8B      		std Y+21,r18
 414:lp_solve_5.5/lp_price.c ****   int     insertpos, delta = 1;
 2064               		.loc 1 414 0
 2065 0bd0 81E0      		ldi r24,lo8(1)
 2066 0bd2 90E0      		ldi r25,0
 2067 0bd4 9C83      		std Y+4,r25
 2068 0bd6 8B83      		std Y+3,r24
 415:lp_solve_5.5/lp_price.c ****   pricerec *targetrec;
 416:lp_solve_5.5/lp_price.c **** 
 417:lp_solve_5.5/lp_price.c ****   /* Find the insertion point (if any) */
 418:lp_solve_5.5/lp_price.c ****   if((multi->freeList[0] == 0) ||
 2069               		.loc 1 418 0
 2070 0bd8 8989      		ldd r24,Y+17
 2071 0bda 9A89      		ldd r25,Y+18
 2072 0bdc DC01      		movw r26,r24
 2073 0bde 1A96      		adiw r26,10
 2074 0be0 8D91      		ld r24,X+
 2075 0be2 9C91      		ld r25,X
 2076 0be4 1B97      		sbiw r26,10+1
 2077 0be6 FC01      		movw r30,r24
 2078 0be8 8081      		ld r24,Z
 2079 0bea 9181      		ldd r25,Z+1
 2080 0bec 892B      		or r24,r25
 2081 0bee 01F4      		brne .+2
 2082 0bf0 00C0      		rjmp .L120
 419:lp_solve_5.5/lp_price.c ****      (multi->sorted && allowSortedExpand) ||
 2083               		.loc 1 419 0 discriminator 1
 2084 0bf2 8989      		ldd r24,Y+17
 2085 0bf4 9A89      		ldd r25,Y+18
 2086 0bf6 DC01      		movw r26,r24
 2087 0bf8 D496      		adiw r26,52
 2088 0bfa 8C91      		ld r24,X
 418:lp_solve_5.5/lp_price.c ****      (multi->sorted && allowSortedExpand) ||
 2089               		.loc 1 418 0 discriminator 1
 2090 0bfc 8823      		tst r24
 2091 0bfe 01F0      		breq .L121
 2092               		.loc 1 419 0
 2093 0c00 8D89      		ldd r24,Y+21
 2094 0c02 8823      		tst r24
 2095 0c04 01F4      		brne .L120
 2096               	.L121:
 420:lp_solve_5.5/lp_price.c ****      (candidate->isdual && (multi->used == 1) && ((multi->step_last >= multi->epszero) ||
 2097               		.loc 1 420 0 discriminator 1
 2098 0c06 8F85      		ldd r24,Y+15
 2099 0c08 9889      		ldd r25,Y+16
 2100 0c0a FC01      		movw r30,r24
 2101 0c0c 8089      		ldd r24,Z+16
 419:lp_solve_5.5/lp_price.c ****      (multi->sorted && allowSortedExpand) ||
 2102               		.loc 1 419 0 discriminator 1
 2103 0c0e 8823      		tst r24
 2104 0c10 01F4      		brne .+2
 2105 0c12 00C0      		rjmp .L122
 2106               		.loc 1 420 0
 2107 0c14 8989      		ldd r24,Y+17
 2108 0c16 9A89      		ldd r25,Y+18
 2109 0c18 DC01      		movw r26,r24
 2110 0c1a 1496      		adiw r26,4
 2111 0c1c 8D91      		ld r24,X+
 2112 0c1e 9C91      		ld r25,X
 2113 0c20 1597      		sbiw r26,4+1
 2114 0c22 0197      		sbiw r24,1
 2115 0c24 01F0      		breq .+2
 2116 0c26 00C0      		rjmp .L122
 2117               		.loc 1 420 0 is_stmt 0 discriminator 1
 2118 0c28 8989      		ldd r24,Y+17
 2119 0c2a 9A89      		ldd r25,Y+18
 2120 0c2c FC01      		movw r30,r24
 2121 0c2e 848D      		ldd r24,Z+28
 2122 0c30 958D      		ldd r25,Z+29
 2123 0c32 A68D      		ldd r26,Z+30
 2124 0c34 B78D      		ldd r27,Z+31
 2125 0c36 2989      		ldd r18,Y+17
 2126 0c38 3A89      		ldd r19,Y+18
 2127 0c3a F901      		movw r30,r18
 2128 0c3c 20A5      		ldd r18,Z+40
 2129 0c3e 31A5      		ldd r19,Z+41
 2130 0c40 42A5      		ldd r20,Z+42
 2131 0c42 53A5      		ldd r21,Z+43
 2132 0c44 BC01      		movw r22,r24
 2133 0c46 CD01      		movw r24,r26
 2134 0c48 0E94 0000 		call __gesf2
 2135 0c4c 8823      		tst r24
 2136 0c4e 04F4      		brge .L120
 421:lp_solve_5.5/lp_price.c ****                                                   multi_truncatingvar(multi, ((pricerec *) (multi->
 2137               		.loc 1 421 0 is_stmt 1 discriminator 2
 2138 0c50 8989      		ldd r24,Y+17
 2139 0c52 9A89      		ldd r25,Y+18
 2140 0c54 DC01      		movw r26,r24
 2141 0c56 1C96      		adiw r26,12
 2142 0c58 8D91      		ld r24,X+
 2143 0c5a 9C91      		ld r25,X
 2144 0c5c 1D97      		sbiw r26,12+1
 2145 0c5e FC01      		movw r30,r24
 2146 0c60 8081      		ld r24,Z
 2147 0c62 9181      		ldd r25,Z+1
 2148 0c64 DC01      		movw r26,r24
 2149 0c66 1C96      		adiw r26,12
 2150 0c68 2D91      		ld r18,X+
 2151 0c6a 3C91      		ld r19,X
 2152 0c6c 1D97      		sbiw r26,12+1
 2153 0c6e 8989      		ldd r24,Y+17
 2154 0c70 9A89      		ldd r25,Y+18
 2155 0c72 B901      		movw r22,r18
 2156 0c74 0E94 0000 		call multi_truncatingvar
 420:lp_solve_5.5/lp_price.c ****      (candidate->isdual && (multi->used == 1) && ((multi->step_last >= multi->epszero) ||
 2157               		.loc 1 420 0 discriminator 2
 2158 0c78 8823      		tst r24
 2159 0c7a 01F4      		brne .+2
 2160 0c7c 00C0      		rjmp .L122
 2161               	.L120:
 2162               	.LBB5:
 422:lp_solve_5.5/lp_price.c ****      ) {
 423:lp_solve_5.5/lp_price.c ****     UNIONTYPE QSORTrec searchTarget;
 424:lp_solve_5.5/lp_price.c **** 
 425:lp_solve_5.5/lp_price.c ****     /* Make sure that the list is sorted before the search for an insertion point */
 426:lp_solve_5.5/lp_price.c ****     if((multi->freeList[0] == 0) && !multi->sorted) {
 2163               		.loc 1 426 0
 2164 0c7e 8989      		ldd r24,Y+17
 2165 0c80 9A89      		ldd r25,Y+18
 2166 0c82 FC01      		movw r30,r24
 2167 0c84 8285      		ldd r24,Z+10
 2168 0c86 9385      		ldd r25,Z+11
 2169 0c88 DC01      		movw r26,r24
 2170 0c8a 8D91      		ld r24,X+
 2171 0c8c 9C91      		ld r25,X
 2172 0c8e 892B      		or r24,r25
 2173 0c90 01F4      		brne .L123
 2174               		.loc 1 426 0 is_stmt 0 discriminator 1
 2175 0c92 8989      		ldd r24,Y+17
 2176 0c94 9A89      		ldd r25,Y+18
 2177 0c96 FC01      		movw r30,r24
 2178 0c98 84A9      		ldd r24,Z+52
 2179 0c9a 8823      		tst r24
 2180 0c9c 01F4      		brne .L123
 427:lp_solve_5.5/lp_price.c ****       multi->sorted = QS_execute(multi->sortedList, multi->used, findCompare, &insertpos);
 2181               		.loc 1 427 0 is_stmt 1
 2182 0c9e 8989      		ldd r24,Y+17
 2183 0ca0 9A89      		ldd r25,Y+18
 2184 0ca2 DC01      		movw r26,r24
 2185 0ca4 1496      		adiw r26,4
 2186 0ca6 6D91      		ld r22,X+
 2187 0ca8 7C91      		ld r23,X
 2188 0caa 1597      		sbiw r26,4+1
 2189 0cac 8989      		ldd r24,Y+17
 2190 0cae 9A89      		ldd r25,Y+18
 2191 0cb0 FC01      		movw r30,r24
 2192 0cb2 8485      		ldd r24,Z+12
 2193 0cb4 9585      		ldd r25,Z+13
 2194 0cb6 9E01      		movw r18,r28
 2195 0cb8 2B5F      		subi r18,-5
 2196 0cba 3F4F      		sbci r19,-1
 2197 0cbc 4B89      		ldd r20,Y+19
 2198 0cbe 5C89      		ldd r21,Y+20
 2199 0cc0 0E94 0000 		call QS_execute
 2200 0cc4 282F      		mov r18,r24
 2201 0cc6 8989      		ldd r24,Y+17
 2202 0cc8 9A89      		ldd r25,Y+18
 2203 0cca DC01      		movw r26,r24
 2204 0ccc D496      		adiw r26,52
 2205 0cce 2C93      		st X,r18
 428:lp_solve_5.5/lp_price.c ****       multi->dirty  = (MYBOOL) (insertpos > 0);
 2206               		.loc 1 428 0
 2207 0cd0 8D81      		ldd r24,Y+5
 2208 0cd2 9E81      		ldd r25,Y+6
 2209 0cd4 21E0      		ldi r18,lo8(1)
 2210 0cd6 1816      		cp __zero_reg__,r24
 2211 0cd8 1906      		cpc __zero_reg__,r25
 2212 0cda 04F0      		brlt .L124
 2213 0cdc 20E0      		ldi r18,0
 2214               	.L124:
 2215 0cde 8989      		ldd r24,Y+17
 2216 0ce0 9A89      		ldd r25,Y+18
 2217 0ce2 FC01      		movw r30,r24
 2218 0ce4 27AB      		std Z+55,r18
 2219               	.L123:
 429:lp_solve_5.5/lp_price.c ****     }
 430:lp_solve_5.5/lp_price.c **** 
 431:lp_solve_5.5/lp_price.c ****     /* Perform the search */
 432:lp_solve_5.5/lp_price.c ****     searchTarget.pvoidint2.ptr = (void *) candidate;
 2220               		.loc 1 432 0
 2221 0ce6 8F85      		ldd r24,Y+15
 2222 0ce8 9889      		ldd r25,Y+16
 2223 0cea 9887      		std Y+8,r25
 2224 0cec 8F83      		std Y+7,r24
 433:lp_solve_5.5/lp_price.c ****     insertpos = sizeof(searchTarget);
 2225               		.loc 1 433 0
 2226 0cee 88E0      		ldi r24,lo8(8)
 2227 0cf0 90E0      		ldi r25,0
 2228 0cf2 9E83      		std Y+6,r25
 2229 0cf4 8D83      		std Y+5,r24
 434:lp_solve_5.5/lp_price.c ****     insertpos = findIndexEx(&searchTarget, multi->sortedList-delta, multi->used, delta, insertpos, 
 2230               		.loc 1 434 0
 2231 0cf6 ED81      		ldd r30,Y+5
 2232 0cf8 FE81      		ldd r31,Y+6
 2233 0cfa 8989      		ldd r24,Y+17
 2234 0cfc 9A89      		ldd r25,Y+18
 2235 0cfe DC01      		movw r26,r24
 2236 0d00 1496      		adiw r26,4
 2237 0d02 4D91      		ld r20,X+
 2238 0d04 5C91      		ld r21,X
 2239 0d06 1597      		sbiw r26,4+1
 2240 0d08 8989      		ldd r24,Y+17
 2241 0d0a 9A89      		ldd r25,Y+18
 2242 0d0c DC01      		movw r26,r24
 2243 0d0e 1C96      		adiw r26,12
 2244 0d10 2D91      		ld r18,X+
 2245 0d12 3C91      		ld r19,X
 2246 0d14 1D97      		sbiw r26,12+1
 2247 0d16 8B81      		ldd r24,Y+3
 2248 0d18 9C81      		ldd r25,Y+4
 2249 0d1a 880F      		lsl r24
 2250 0d1c 991F      		rol r25
 2251 0d1e 880F      		lsl r24
 2252 0d20 991F      		rol r25
 2253 0d22 880F      		lsl r24
 2254 0d24 991F      		rol r25
 2255 0d26 9195      		neg r25
 2256 0d28 8195      		neg r24
 2257 0d2a 9109      		sbc r25,__zero_reg__
 2258 0d2c B901      		movw r22,r18
 2259 0d2e 680F      		add r22,r24
 2260 0d30 791F      		adc r23,r25
 2261 0d32 AB89      		ldd r26,Y+19
 2262 0d34 BC89      		ldd r27,Y+20
 2263 0d36 2B81      		ldd r18,Y+3
 2264 0d38 3C81      		ldd r19,Y+4
 2265 0d3a CE01      		movw r24,r28
 2266 0d3c 0796      		adiw r24,7
 2267 0d3e CC24      		clr r12
 2268 0d40 C394      		inc r12
 2269 0d42 7D01      		movw r14,r26
 2270 0d44 8F01      		movw r16,r30
 2271 0d46 0E94 0000 		call findIndexEx
 2272 0d4a 9E83      		std Y+6,r25
 2273 0d4c 8D83      		std Y+5,r24
 435:lp_solve_5.5/lp_price.c ****     if(insertpos > 0)
 2274               		.loc 1 435 0
 2275 0d4e 8D81      		ldd r24,Y+5
 2276 0d50 9E81      		ldd r25,Y+6
 2277 0d52 1816      		cp __zero_reg__,r24
 2278 0d54 1906      		cpc __zero_reg__,r25
 2279 0d56 04F4      		brge .L125
 436:lp_solve_5.5/lp_price.c ****       return( -1 );
 2280               		.loc 1 436 0
 2281 0d58 8FEF      		ldi r24,lo8(-1)
 2282 0d5a 9FEF      		ldi r25,lo8(-1)
 2283 0d5c 00C0      		rjmp .L138
 2284               	.L125:
 437:lp_solve_5.5/lp_price.c ****     insertpos = -insertpos - delta;
 2285               		.loc 1 437 0
 2286 0d5e 8D81      		ldd r24,Y+5
 2287 0d60 9E81      		ldd r25,Y+6
 2288 0d62 2227      		clr r18
 2289 0d64 3327      		clr r19
 2290 0d66 281B      		sub r18,r24
 2291 0d68 390B      		sbc r19,r25
 2292 0d6a 8B81      		ldd r24,Y+3
 2293 0d6c 9C81      		ldd r25,Y+4
 2294 0d6e F901      		movw r30,r18
 2295 0d70 E81B      		sub r30,r24
 2296 0d72 F90B      		sbc r31,r25
 2297 0d74 CF01      		movw r24,r30
 2298 0d76 9E83      		std Y+6,r25
 2299 0d78 8D83      		std Y+5,r24
 438:lp_solve_5.5/lp_price.c **** 
 439:lp_solve_5.5/lp_price.c ****     /* Check if the candidate is worse than the worst of the list */
 440:lp_solve_5.5/lp_price.c ****     if(((insertpos >= multi->size) && (multi->freeList[0] == 0)) ||
 2300               		.loc 1 440 0
 2301 0d7a 8989      		ldd r24,Y+17
 2302 0d7c 9A89      		ldd r25,Y+18
 2303 0d7e DC01      		movw r26,r24
 2304 0d80 1296      		adiw r26,2
 2305 0d82 2D91      		ld r18,X+
 2306 0d84 3C91      		ld r19,X
 2307 0d86 1397      		sbiw r26,2+1
 2308 0d88 8D81      		ldd r24,Y+5
 2309 0d8a 9E81      		ldd r25,Y+6
 2310 0d8c 8217      		cp r24,r18
 2311 0d8e 9307      		cpc r25,r19
 2312 0d90 04F0      		brlt .L127
 2313               		.loc 1 440 0 is_stmt 0 discriminator 1
 2314 0d92 8989      		ldd r24,Y+17
 2315 0d94 9A89      		ldd r25,Y+18
 2316 0d96 FC01      		movw r30,r24
 2317 0d98 8285      		ldd r24,Z+10
 2318 0d9a 9385      		ldd r25,Z+11
 2319 0d9c DC01      		movw r26,r24
 2320 0d9e 8D91      		ld r24,X+
 2321 0da0 9C91      		ld r25,X
 2322 0da2 892B      		or r24,r25
 2323 0da4 01F0      		breq .L128
 2324               	.L127:
 441:lp_solve_5.5/lp_price.c ****        ((insertpos == multi->used) && (!allowSortedExpand ||
 2325               		.loc 1 441 0 is_stmt 1 discriminator 3
 2326 0da6 8989      		ldd r24,Y+17
 2327 0da8 9A89      		ldd r25,Y+18
 2328 0daa FC01      		movw r30,r24
 2329 0dac 2481      		ldd r18,Z+4
 2330 0dae 3581      		ldd r19,Z+5
 2331 0db0 8D81      		ldd r24,Y+5
 2332 0db2 9E81      		ldd r25,Y+6
 440:lp_solve_5.5/lp_price.c ****        ((insertpos == multi->used) && (!allowSortedExpand ||
 2333               		.loc 1 440 0 discriminator 3
 2334 0db4 2817      		cp r18,r24
 2335 0db6 3907      		cpc r19,r25
 2336 0db8 01F4      		brne .L129
 2337               		.loc 1 441 0
 2338 0dba 8D89      		ldd r24,Y+21
 2339 0dbc 8823      		tst r24
 2340 0dbe 01F0      		breq .L128
 442:lp_solve_5.5/lp_price.c ****                                        (multi->step_last >= multi->epszero))))
 2341               		.loc 1 442 0 discriminator 1
 2342 0dc0 8989      		ldd r24,Y+17
 2343 0dc2 9A89      		ldd r25,Y+18
 2344 0dc4 FC01      		movw r30,r24
 2345 0dc6 848D      		ldd r24,Z+28
 2346 0dc8 958D      		ldd r25,Z+29
 2347 0dca A68D      		ldd r26,Z+30
 2348 0dcc B78D      		ldd r27,Z+31
 2349 0dce 2989      		ldd r18,Y+17
 2350 0dd0 3A89      		ldd r19,Y+18
 2351 0dd2 F901      		movw r30,r18
 2352 0dd4 20A5      		ldd r18,Z+40
 2353 0dd6 31A5      		ldd r19,Z+41
 2354 0dd8 42A5      		ldd r20,Z+42
 2355 0dda 53A5      		ldd r21,Z+43
 441:lp_solve_5.5/lp_price.c ****        ((insertpos == multi->used) && (!allowSortedExpand ||
 2356               		.loc 1 441 0 discriminator 1
 2357 0ddc BC01      		movw r22,r24
 2358 0dde CD01      		movw r24,r26
 2359 0de0 0E94 0000 		call __gesf2
 2360 0de4 8823      		tst r24
 2361 0de6 04F0      		brlt .L129
 2362               	.L128:
 443:lp_solve_5.5/lp_price.c ****       return( -1 );
 2363               		.loc 1 443 0
 2364 0de8 8FEF      		ldi r24,lo8(-1)
 2365 0dea 9FEF      		ldi r25,lo8(-1)
 2366 0dec 00C0      		rjmp .L138
 2367               	.L129:
 444:lp_solve_5.5/lp_price.c **** 
 445:lp_solve_5.5/lp_price.c **** #ifdef Paranoia
 446:lp_solve_5.5/lp_price.c ****     /* Do validation */
 447:lp_solve_5.5/lp_price.c ****     if((insertpos < 0) || (insertpos > multi->used))
 448:lp_solve_5.5/lp_price.c ****       return( -1 );
 449:lp_solve_5.5/lp_price.c **** #endif
 450:lp_solve_5.5/lp_price.c **** 
 451:lp_solve_5.5/lp_price.c ****     /* Define the target for storing the candidate;
 452:lp_solve_5.5/lp_price.c ****        Case 1: List is full and we must discard the previously worst candidate
 453:lp_solve_5.5/lp_price.c ****        Case 2: List is not full and we simply use the next free position */
 454:lp_solve_5.5/lp_price.c ****     if(multi->freeList[0] == 0)
 2368               		.loc 1 454 0
 2369 0dee 8989      		ldd r24,Y+17
 2370 0df0 9A89      		ldd r25,Y+18
 2371 0df2 DC01      		movw r26,r24
 2372 0df4 1A96      		adiw r26,10
 2373 0df6 8D91      		ld r24,X+
 2374 0df8 9C91      		ld r25,X
 2375 0dfa 1B97      		sbiw r26,10+1
 2376 0dfc FC01      		movw r30,r24
 2377 0dfe 8081      		ld r24,Z
 2378 0e00 9181      		ldd r25,Z+1
 2379 0e02 892B      		or r24,r25
 2380 0e04 01F4      		brne .L131
 455:lp_solve_5.5/lp_price.c ****       targetrec = (pricerec *) multi->sortedList[multi->used-1].pvoidreal.ptr;
 2381               		.loc 1 455 0
 2382 0e06 8989      		ldd r24,Y+17
 2383 0e08 9A89      		ldd r25,Y+18
 2384 0e0a DC01      		movw r26,r24
 2385 0e0c 1C96      		adiw r26,12
 2386 0e0e 2D91      		ld r18,X+
 2387 0e10 3C91      		ld r19,X
 2388 0e12 1D97      		sbiw r26,12+1
 2389 0e14 8989      		ldd r24,Y+17
 2390 0e16 9A89      		ldd r25,Y+18
 2391 0e18 FC01      		movw r30,r24
 2392 0e1a 8481      		ldd r24,Z+4
 2393 0e1c 9581      		ldd r25,Z+5
 2394 0e1e 8150      		subi r24,1
 2395 0e20 904E      		sbci r25,-32
 2396 0e22 880F      		lsl r24
 2397 0e24 991F      		rol r25
 2398 0e26 880F      		lsl r24
 2399 0e28 991F      		rol r25
 2400 0e2a 880F      		lsl r24
 2401 0e2c 991F      		rol r25
 2402 0e2e 820F      		add r24,r18
 2403 0e30 931F      		adc r25,r19
 2404 0e32 DC01      		movw r26,r24
 2405 0e34 8D91      		ld r24,X+
 2406 0e36 9C91      		ld r25,X
 2407 0e38 9A83      		std Y+2,r25
 2408 0e3a 8983      		std Y+1,r24
 2409               	.LBE5:
 422:lp_solve_5.5/lp_price.c ****     UNIONTYPE QSORTrec searchTarget;
 2410               		.loc 1 422 0
 2411 0e3c 00C0      		rjmp .L133
 2412               	.L131:
 2413               	.LBB6:
 456:lp_solve_5.5/lp_price.c ****     else {
 457:lp_solve_5.5/lp_price.c ****       delta = multi->freeList[0]--;
 2414               		.loc 1 457 0
 2415 0e3e 8989      		ldd r24,Y+17
 2416 0e40 9A89      		ldd r25,Y+18
 2417 0e42 FC01      		movw r30,r24
 2418 0e44 2285      		ldd r18,Z+10
 2419 0e46 3385      		ldd r19,Z+11
 2420 0e48 D901      		movw r26,r18
 2421 0e4a 8D91      		ld r24,X+
 2422 0e4c 9C91      		ld r25,X
 2423 0e4e AC01      		movw r20,r24
 2424 0e50 4150      		subi r20,1
 2425 0e52 5109      		sbc r21,__zero_reg__
 2426 0e54 F901      		movw r30,r18
 2427 0e56 5183      		std Z+1,r21
 2428 0e58 4083      		st Z,r20
 2429 0e5a 9C83      		std Y+4,r25
 2430 0e5c 8B83      		std Y+3,r24
 458:lp_solve_5.5/lp_price.c ****       delta = multi->freeList[delta];
 2431               		.loc 1 458 0
 2432 0e5e 8989      		ldd r24,Y+17
 2433 0e60 9A89      		ldd r25,Y+18
 2434 0e62 DC01      		movw r26,r24
 2435 0e64 1A96      		adiw r26,10
 2436 0e66 2D91      		ld r18,X+
 2437 0e68 3C91      		ld r19,X
 2438 0e6a 1B97      		sbiw r26,10+1
 2439 0e6c 8B81      		ldd r24,Y+3
 2440 0e6e 9C81      		ldd r25,Y+4
 2441 0e70 880F      		lsl r24
 2442 0e72 991F      		rol r25
 2443 0e74 820F      		add r24,r18
 2444 0e76 931F      		adc r25,r19
 2445 0e78 FC01      		movw r30,r24
 2446 0e7a 8081      		ld r24,Z
 2447 0e7c 9181      		ldd r25,Z+1
 2448 0e7e 9C83      		std Y+4,r25
 2449 0e80 8B83      		std Y+3,r24
 459:lp_solve_5.5/lp_price.c ****       targetrec = &(multi->items[delta]);
 2450               		.loc 1 459 0
 2451 0e82 8989      		ldd r24,Y+17
 2452 0e84 9A89      		ldd r25,Y+18
 2453 0e86 DC01      		movw r26,r24
 2454 0e88 1896      		adiw r26,8
 2455 0e8a 2D91      		ld r18,X+
 2456 0e8c 3C91      		ld r19,X
 2457 0e8e 1997      		sbiw r26,8+1
 2458 0e90 4B81      		ldd r20,Y+3
 2459 0e92 5C81      		ldd r21,Y+4
 2460 0e94 61E1      		ldi r22,lo8(17)
 2461 0e96 649F      		mul r22,r20
 2462 0e98 C001      		movw r24,r0
 2463 0e9a 659F      		mul r22,r21
 2464 0e9c 900D      		add r25,r0
 2465 0e9e 1124      		clr __zero_reg__
 2466 0ea0 820F      		add r24,r18
 2467 0ea2 931F      		adc r25,r19
 2468 0ea4 9A83      		std Y+2,r25
 2469 0ea6 8983      		std Y+1,r24
 2470               	.LBE6:
 422:lp_solve_5.5/lp_price.c ****     UNIONTYPE QSORTrec searchTarget;
 2471               		.loc 1 422 0
 2472 0ea8 00C0      		rjmp .L133
 2473               	.L122:
 460:lp_solve_5.5/lp_price.c ****     }
 461:lp_solve_5.5/lp_price.c ****   }
 462:lp_solve_5.5/lp_price.c ****   else {
 463:lp_solve_5.5/lp_price.c ****     delta = multi->freeList[0]--;
 2474               		.loc 1 463 0
 2475 0eaa 8989      		ldd r24,Y+17
 2476 0eac 9A89      		ldd r25,Y+18
 2477 0eae FC01      		movw r30,r24
 2478 0eb0 2285      		ldd r18,Z+10
 2479 0eb2 3385      		ldd r19,Z+11
 2480 0eb4 D901      		movw r26,r18
 2481 0eb6 8D91      		ld r24,X+
 2482 0eb8 9C91      		ld r25,X
 2483 0eba AC01      		movw r20,r24
 2484 0ebc 4150      		subi r20,1
 2485 0ebe 5109      		sbc r21,__zero_reg__
 2486 0ec0 F901      		movw r30,r18
 2487 0ec2 5183      		std Z+1,r21
 2488 0ec4 4083      		st Z,r20
 2489 0ec6 9C83      		std Y+4,r25
 2490 0ec8 8B83      		std Y+3,r24
 464:lp_solve_5.5/lp_price.c ****     delta = multi->freeList[delta];
 2491               		.loc 1 464 0
 2492 0eca 8989      		ldd r24,Y+17
 2493 0ecc 9A89      		ldd r25,Y+18
 2494 0ece DC01      		movw r26,r24
 2495 0ed0 1A96      		adiw r26,10
 2496 0ed2 2D91      		ld r18,X+
 2497 0ed4 3C91      		ld r19,X
 2498 0ed6 1B97      		sbiw r26,10+1
 2499 0ed8 8B81      		ldd r24,Y+3
 2500 0eda 9C81      		ldd r25,Y+4
 2501 0edc 880F      		lsl r24
 2502 0ede 991F      		rol r25
 2503 0ee0 820F      		add r24,r18
 2504 0ee2 931F      		adc r25,r19
 2505 0ee4 FC01      		movw r30,r24
 2506 0ee6 8081      		ld r24,Z
 2507 0ee8 9181      		ldd r25,Z+1
 2508 0eea 9C83      		std Y+4,r25
 2509 0eec 8B83      		std Y+3,r24
 465:lp_solve_5.5/lp_price.c ****     targetrec = &(multi->items[delta]);
 2510               		.loc 1 465 0
 2511 0eee 8989      		ldd r24,Y+17
 2512 0ef0 9A89      		ldd r25,Y+18
 2513 0ef2 DC01      		movw r26,r24
 2514 0ef4 1896      		adiw r26,8
 2515 0ef6 2D91      		ld r18,X+
 2516 0ef8 3C91      		ld r19,X
 2517 0efa 1997      		sbiw r26,8+1
 2518 0efc 4B81      		ldd r20,Y+3
 2519 0efe 5C81      		ldd r21,Y+4
 2520 0f00 61E1      		ldi r22,lo8(17)
 2521 0f02 649F      		mul r22,r20
 2522 0f04 C001      		movw r24,r0
 2523 0f06 659F      		mul r22,r21
 2524 0f08 900D      		add r25,r0
 2525 0f0a 1124      		clr __zero_reg__
 2526 0f0c 820F      		add r24,r18
 2527 0f0e 931F      		adc r25,r19
 2528 0f10 9A83      		std Y+2,r25
 2529 0f12 8983      		std Y+1,r24
 466:lp_solve_5.5/lp_price.c ****     insertpos = multi->used;
 2530               		.loc 1 466 0
 2531 0f14 8989      		ldd r24,Y+17
 2532 0f16 9A89      		ldd r25,Y+18
 2533 0f18 FC01      		movw r30,r24
 2534 0f1a 8481      		ldd r24,Z+4
 2535 0f1c 9581      		ldd r25,Z+5
 2536 0f1e 9E83      		std Y+6,r25
 2537 0f20 8D83      		std Y+5,r24
 2538               	.L133:
 467:lp_solve_5.5/lp_price.c ****   }
 468:lp_solve_5.5/lp_price.c **** 
 469:lp_solve_5.5/lp_price.c ****   /* Insert the new candidate record in the data store */
 470:lp_solve_5.5/lp_price.c ****   MEMCOPY(targetrec, candidate, 1);
 2539               		.loc 1 470 0
 2540 0f22 2F85      		ldd r18,Y+15
 2541 0f24 3889      		ldd r19,Y+16
 2542 0f26 8981      		ldd r24,Y+1
 2543 0f28 9A81      		ldd r25,Y+2
 2544 0f2a 41E1      		ldi r20,lo8(17)
 2545 0f2c 50E0      		ldi r21,0
 2546 0f2e B901      		movw r22,r18
 2547 0f30 0E94 0000 		call memcpy
 471:lp_solve_5.5/lp_price.c **** 
 472:lp_solve_5.5/lp_price.c ****   /* Store the pointer data and handle tree cases:
 473:lp_solve_5.5/lp_price.c ****      Case 1: The list is unsorted and not full; simply append pointer to list,
 474:lp_solve_5.5/lp_price.c ****      Case 2: The list is sorted and full; insert the pointer by discarding previous last,
 475:lp_solve_5.5/lp_price.c ****      Case 3: The list is sorted and not full; shift the inferior items down, and increment count */
 476:lp_solve_5.5/lp_price.c ****   if((multi->used < multi->size) && (insertpos >= multi->used)) {
 2548               		.loc 1 476 0
 2549 0f34 8989      		ldd r24,Y+17
 2550 0f36 9A89      		ldd r25,Y+18
 2551 0f38 DC01      		movw r26,r24
 2552 0f3a 1496      		adiw r26,4
 2553 0f3c 2D91      		ld r18,X+
 2554 0f3e 3C91      		ld r19,X
 2555 0f40 1597      		sbiw r26,4+1
 2556 0f42 8989      		ldd r24,Y+17
 2557 0f44 9A89      		ldd r25,Y+18
 2558 0f46 FC01      		movw r30,r24
 2559 0f48 8281      		ldd r24,Z+2
 2560 0f4a 9381      		ldd r25,Z+3
 2561 0f4c 2817      		cp r18,r24
 2562 0f4e 3907      		cpc r19,r25
 2563 0f50 04F4      		brge .L135
 2564               		.loc 1 476 0 is_stmt 0 discriminator 1
 2565 0f52 8989      		ldd r24,Y+17
 2566 0f54 9A89      		ldd r25,Y+18
 2567 0f56 DC01      		movw r26,r24
 2568 0f58 1496      		adiw r26,4
 2569 0f5a 2D91      		ld r18,X+
 2570 0f5c 3C91      		ld r19,X
 2571 0f5e 1597      		sbiw r26,4+1
 2572 0f60 8D81      		ldd r24,Y+5
 2573 0f62 9E81      		ldd r25,Y+6
 2574 0f64 8217      		cp r24,r18
 2575 0f66 9307      		cpc r25,r19
 2576 0f68 04F0      		brlt .L135
 477:lp_solve_5.5/lp_price.c ****     QS_append(multi->sortedList, insertpos, targetrec);
 2577               		.loc 1 477 0 is_stmt 1
 2578 0f6a 2D81      		ldd r18,Y+5
 2579 0f6c 3E81      		ldd r19,Y+6
 2580 0f6e 8989      		ldd r24,Y+17
 2581 0f70 9A89      		ldd r25,Y+18
 2582 0f72 FC01      		movw r30,r24
 2583 0f74 8485      		ldd r24,Z+12
 2584 0f76 9585      		ldd r25,Z+13
 2585 0f78 4981      		ldd r20,Y+1
 2586 0f7a 5A81      		ldd r21,Y+2
 2587 0f7c B901      		movw r22,r18
 2588 0f7e 0E94 0000 		call QS_append
 478:lp_solve_5.5/lp_price.c ****     multi->used++;
 2589               		.loc 1 478 0
 2590 0f82 8989      		ldd r24,Y+17
 2591 0f84 9A89      		ldd r25,Y+18
 2592 0f86 DC01      		movw r26,r24
 2593 0f88 1496      		adiw r26,4
 2594 0f8a 8D91      		ld r24,X+
 2595 0f8c 9C91      		ld r25,X
 2596 0f8e 1597      		sbiw r26,4+1
 2597 0f90 9C01      		movw r18,r24
 2598 0f92 2F5F      		subi r18,-1
 2599 0f94 3F4F      		sbci r19,-1
 2600 0f96 8989      		ldd r24,Y+17
 2601 0f98 9A89      		ldd r25,Y+18
 2602 0f9a FC01      		movw r30,r24
 2603 0f9c 3583      		std Z+5,r19
 2604 0f9e 2483      		std Z+4,r18
 2605 0fa0 00C0      		rjmp .L136
 2606               	.L135:
 479:lp_solve_5.5/lp_price.c ****   }
 480:lp_solve_5.5/lp_price.c ****   else {
 481:lp_solve_5.5/lp_price.c ****     if(multi->used == multi->size)
 2607               		.loc 1 481 0
 2608 0fa2 8989      		ldd r24,Y+17
 2609 0fa4 9A89      		ldd r25,Y+18
 2610 0fa6 DC01      		movw r26,r24
 2611 0fa8 1496      		adiw r26,4
 2612 0faa 2D91      		ld r18,X+
 2613 0fac 3C91      		ld r19,X
 2614 0fae 1597      		sbiw r26,4+1
 2615 0fb0 8989      		ldd r24,Y+17
 2616 0fb2 9A89      		ldd r25,Y+18
 2617 0fb4 FC01      		movw r30,r24
 2618 0fb6 8281      		ldd r24,Z+2
 2619 0fb8 9381      		ldd r25,Z+3
 2620 0fba 2817      		cp r18,r24
 2621 0fbc 3907      		cpc r19,r25
 2622 0fbe 01F4      		brne .L137
 482:lp_solve_5.5/lp_price.c ****       QS_insert(multi->sortedList, insertpos, targetrec, multi->size-1); /* Discard previous last *
 2623               		.loc 1 482 0
 2624 0fc0 8989      		ldd r24,Y+17
 2625 0fc2 9A89      		ldd r25,Y+18
 2626 0fc4 DC01      		movw r26,r24
 2627 0fc6 1296      		adiw r26,2
 2628 0fc8 8D91      		ld r24,X+
 2629 0fca 9C91      		ld r25,X
 2630 0fcc 1397      		sbiw r26,2+1
 2631 0fce 9C01      		movw r18,r24
 2632 0fd0 2150      		subi r18,1
 2633 0fd2 3109      		sbc r19,__zero_reg__
 2634 0fd4 6D81      		ldd r22,Y+5
 2635 0fd6 7E81      		ldd r23,Y+6
 2636 0fd8 8989      		ldd r24,Y+17
 2637 0fda 9A89      		ldd r25,Y+18
 2638 0fdc FC01      		movw r30,r24
 2639 0fde 8485      		ldd r24,Z+12
 2640 0fe0 9585      		ldd r25,Z+13
 2641 0fe2 4981      		ldd r20,Y+1
 2642 0fe4 5A81      		ldd r21,Y+2
 2643 0fe6 0E94 0000 		call QS_insert
 2644 0fea 00C0      		rjmp .L136
 2645               	.L137:
 483:lp_solve_5.5/lp_price.c ****     else {
 484:lp_solve_5.5/lp_price.c ****       QS_insert(multi->sortedList, insertpos, targetrec, multi->used);   /* Keep previous last    *
 2646               		.loc 1 484 0
 2647 0fec 8989      		ldd r24,Y+17
 2648 0fee 9A89      		ldd r25,Y+18
 2649 0ff0 DC01      		movw r26,r24
 2650 0ff2 1496      		adiw r26,4
 2651 0ff4 2D91      		ld r18,X+
 2652 0ff6 3C91      		ld r19,X
 2653 0ff8 1597      		sbiw r26,4+1
 2654 0ffa 6D81      		ldd r22,Y+5
 2655 0ffc 7E81      		ldd r23,Y+6
 2656 0ffe 8989      		ldd r24,Y+17
 2657 1000 9A89      		ldd r25,Y+18
 2658 1002 FC01      		movw r30,r24
 2659 1004 8485      		ldd r24,Z+12
 2660 1006 9585      		ldd r25,Z+13
 2661 1008 4981      		ldd r20,Y+1
 2662 100a 5A81      		ldd r21,Y+2
 2663 100c 0E94 0000 		call QS_insert
 485:lp_solve_5.5/lp_price.c ****       multi->used++;
 2664               		.loc 1 485 0
 2665 1010 8989      		ldd r24,Y+17
 2666 1012 9A89      		ldd r25,Y+18
 2667 1014 DC01      		movw r26,r24
 2668 1016 1496      		adiw r26,4
 2669 1018 8D91      		ld r24,X+
 2670 101a 9C91      		ld r25,X
 2671 101c 1597      		sbiw r26,4+1
 2672 101e 9C01      		movw r18,r24
 2673 1020 2F5F      		subi r18,-1
 2674 1022 3F4F      		sbci r19,-1
 2675 1024 8989      		ldd r24,Y+17
 2676 1026 9A89      		ldd r25,Y+18
 2677 1028 FC01      		movw r30,r24
 2678 102a 3583      		std Z+5,r19
 2679 102c 2483      		std Z+4,r18
 2680               	.L136:
 486:lp_solve_5.5/lp_price.c ****     }
 487:lp_solve_5.5/lp_price.c ****   }
 488:lp_solve_5.5/lp_price.c ****   multi->active = insertpos;
 2681               		.loc 1 488 0
 2682 102e 2D81      		ldd r18,Y+5
 2683 1030 3E81      		ldd r19,Y+6
 2684 1032 8989      		ldd r24,Y+17
 2685 1034 9A89      		ldd r25,Y+18
 2686 1036 DC01      		movw r26,r24
 2687 1038 5596      		adiw r26,20+1
 2688 103a 3C93      		st X,r19
 2689 103c 2E93      		st -X,r18
 2690 103e 5497      		sbiw r26,20
 489:lp_solve_5.5/lp_price.c **** 
 490:lp_solve_5.5/lp_price.c **** #ifdef Paranoia
 491:lp_solve_5.5/lp_price.c ****   if((insertpos >= multi->size) || (insertpos >= multi->used))
 492:lp_solve_5.5/lp_price.c ****     report(multi->lp, SEVERE, "addCandidateVar: Insertion point beyond limit!\n");
 493:lp_solve_5.5/lp_price.c **** #endif
 494:lp_solve_5.5/lp_price.c **** 
 495:lp_solve_5.5/lp_price.c ****   return( insertpos );
 2691               		.loc 1 495 0
 2692 1040 8D81      		ldd r24,Y+5
 2693 1042 9E81      		ldd r25,Y+6
 2694               	.L138:
 2695               	/* epilogue start */
 496:lp_solve_5.5/lp_price.c **** }
 2696               		.loc 1 496 0 discriminator 2
 2697 1044 6596      		adiw r28,21
 2698 1046 0FB6      		in __tmp_reg__,__SREG__
 2699 1048 F894      		cli
 2700 104a DEBF      		out __SP_H__,r29
 2701 104c 0FBE      		out __SREG__,__tmp_reg__
 2702 104e CDBF      		out __SP_L__,r28
 2703 1050 DF91      		pop r29
 2704 1052 CF91      		pop r28
 2705 1054 1F91      		pop r17
 2706 1056 0F91      		pop r16
 2707 1058 FF90      		pop r15
 2708 105a EF90      		pop r14
 2709 105c CF90      		pop r12
 2710 105e 0895      		ret
 2711               		.cfi_endproc
 2712               	.LFE14:
 2714               	.global	findImprovementVar
 2716               	findImprovementVar:
 2717               	.LFB15:
 497:lp_solve_5.5/lp_price.c **** 
 498:lp_solve_5.5/lp_price.c **** STATIC MYBOOL findImprovementVar(pricerec *current, pricerec *candidate, MYBOOL collectMP, int *can
 499:lp_solve_5.5/lp_price.c **** /* PRIMAL: Find a variable to enter the basis
 500:lp_solve_5.5/lp_price.c ****    DUAL:   Find a variable to leave the basis
 501:lp_solve_5.5/lp_price.c **** 
 502:lp_solve_5.5/lp_price.c ****    Allowed variable set: Any pivot PRIMAL:larger or DUAL:smaller than threshold value of 0 */
 503:lp_solve_5.5/lp_price.c **** {
 2718               		.loc 1 503 0
 2719               		.cfi_startproc
 2720 1060 CF93      		push r28
 2721               	.LCFI87:
 2722               		.cfi_def_cfa_offset 3
 2723               		.cfi_offset 28, -2
 2724 1062 DF93      		push r29
 2725               	.LCFI88:
 2726               		.cfi_def_cfa_offset 4
 2727               		.cfi_offset 29, -3
 2728 1064 CDB7      		in r28,__SP_L__
 2729 1066 DEB7      		in r29,__SP_H__
 2730               	.LCFI89:
 2731               		.cfi_def_cfa_register 28
 2732 1068 2997      		sbiw r28,9
 2733               	.LCFI90:
 2734               		.cfi_def_cfa_offset 13
 2735 106a 0FB6      		in __tmp_reg__,__SREG__
 2736 106c F894      		cli
 2737 106e DEBF      		out __SP_H__,r29
 2738 1070 0FBE      		out __SREG__,__tmp_reg__
 2739 1072 CDBF      		out __SP_L__,r28
 2740               	/* prologue: function */
 2741               	/* frame size = 9 */
 2742               	/* stack size = 11 */
 2743               	.L__stack_usage = 11
 2744 1074 9C83      		std Y+4,r25
 2745 1076 8B83      		std Y+3,r24
 2746 1078 7E83      		std Y+6,r23
 2747 107a 6D83      		std Y+5,r22
 2748 107c 4F83      		std Y+7,r20
 2749 107e 3987      		std Y+9,r19
 2750 1080 2887      		std Y+8,r18
 504:lp_solve_5.5/lp_price.c ****   MYBOOL Action = FALSE,
 2751               		.loc 1 504 0
 2752 1082 1982      		std Y+1,__zero_reg__
 505:lp_solve_5.5/lp_price.c **** #ifdef ExtractedValidityTest
 506:lp_solve_5.5/lp_price.c ****          Accept = TRUE;
 507:lp_solve_5.5/lp_price.c **** #else    /* Check for validity and compare result with previous best */
 508:lp_solve_5.5/lp_price.c ****          Accept = validImprovementVar(candidate);
 2753               		.loc 1 508 0
 2754 1084 8D81      		ldd r24,Y+5
 2755 1086 9E81      		ldd r25,Y+6
 2756 1088 0E94 0000 		call validImprovementVar
 2757 108c 8A83      		std Y+2,r24
 509:lp_solve_5.5/lp_price.c **** #endif
 510:lp_solve_5.5/lp_price.c ****   if(Accept) {
 2758               		.loc 1 510 0
 2759 108e 8A81      		ldd r24,Y+2
 2760 1090 8823      		tst r24
 2761 1092 01F4      		brne .+2
 2762 1094 00C0      		rjmp .L140
 511:lp_solve_5.5/lp_price.c ****     if(candidatecount != NULL)
 2763               		.loc 1 511 0
 2764 1096 8885      		ldd r24,Y+8
 2765 1098 9985      		ldd r25,Y+9
 2766 109a 892B      		or r24,r25
 2767 109c 01F0      		breq .L141
 512:lp_solve_5.5/lp_price.c ****       (*candidatecount)++;
 2768               		.loc 1 512 0
 2769 109e 8885      		ldd r24,Y+8
 2770 10a0 9985      		ldd r25,Y+9
 2771 10a2 FC01      		movw r30,r24
 2772 10a4 8081      		ld r24,Z
 2773 10a6 9181      		ldd r25,Z+1
 2774 10a8 9C01      		movw r18,r24
 2775 10aa 2F5F      		subi r18,-1
 2776 10ac 3F4F      		sbci r19,-1
 2777 10ae 8885      		ldd r24,Y+8
 2778 10b0 9985      		ldd r25,Y+9
 2779 10b2 FC01      		movw r30,r24
 2780 10b4 3183      		std Z+1,r19
 2781 10b6 2083      		st Z,r18
 2782               	.L141:
 513:lp_solve_5.5/lp_price.c ****     if(collectMP) {
 2783               		.loc 1 513 0
 2784 10b8 8F81      		ldd r24,Y+7
 2785 10ba 8823      		tst r24
 2786 10bc 01F0      		breq .L142
 514:lp_solve_5.5/lp_price.c ****       if(addCandidateVar(candidate, current->lp->multivars, (findCompare_func *) compareImprovement
 2787               		.loc 1 514 0
 2788 10be 8B81      		ldd r24,Y+3
 2789 10c0 9C81      		ldd r25,Y+4
 2790 10c2 FC01      		movw r30,r24
 2791 10c4 8685      		ldd r24,Z+14
 2792 10c6 9785      		ldd r25,Z+15
 2793 10c8 8857      		subi r24,120
 2794 10ca 9D4F      		sbci r25,-3
 2795 10cc FC01      		movw r30,r24
 2796 10ce 6081      		ld r22,Z
 2797 10d0 7181      		ldd r23,Z+1
 2798 10d2 8D81      		ldd r24,Y+5
 2799 10d4 9E81      		ldd r25,Y+6
 2800 10d6 20E0      		ldi r18,0
 2801 10d8 40E0      		ldi r20,lo8(gs(compareImprovementQS))
 2802 10da 50E0      		ldi r21,hi8(gs(compareImprovementQS))
 2803 10dc 0E94 0000 		call addCandidateVar
 2804 10e0 9923      		tst r25
 2805 10e2 04F4      		brge .L142
 515:lp_solve_5.5/lp_price.c ****         return(Action);
 2806               		.loc 1 515 0
 2807 10e4 8981      		ldd r24,Y+1
 2808 10e6 00C0      		rjmp .L143
 2809               	.L142:
 516:lp_solve_5.5/lp_price.c ****     }
 517:lp_solve_5.5/lp_price.c ****     if(current->varno > 0)
 2810               		.loc 1 517 0
 2811 10e8 8B81      		ldd r24,Y+3
 2812 10ea 9C81      		ldd r25,Y+4
 2813 10ec FC01      		movw r30,r24
 2814 10ee 8485      		ldd r24,Z+12
 2815 10f0 9585      		ldd r25,Z+13
 2816 10f2 1816      		cp __zero_reg__,r24
 2817 10f4 1906      		cpc __zero_reg__,r25
 2818 10f6 04F4      		brge .L140
 518:lp_solve_5.5/lp_price.c ****       Accept = (MYBOOL) (compareImprovementVar(current, candidate) > 0);
 2819               		.loc 1 518 0
 2820 10f8 2D81      		ldd r18,Y+5
 2821 10fa 3E81      		ldd r19,Y+6
 2822 10fc 8B81      		ldd r24,Y+3
 2823 10fe 9C81      		ldd r25,Y+4
 2824 1100 B901      		movw r22,r18
 2825 1102 0E94 0000 		call compareImprovementVar
 2826 1106 21E0      		ldi r18,lo8(1)
 2827 1108 1816      		cp __zero_reg__,r24
 2828 110a 1906      		cpc __zero_reg__,r25
 2829 110c 04F0      		brlt .L144
 2830 110e 20E0      		ldi r18,0
 2831               	.L144:
 2832 1110 2A83      		std Y+2,r18
 2833               	.L140:
 519:lp_solve_5.5/lp_price.c ****   }
 520:lp_solve_5.5/lp_price.c **** 
 521:lp_solve_5.5/lp_price.c ****  /* Apply candidate if accepted */
 522:lp_solve_5.5/lp_price.c ****   if(Accept) {
 2834               		.loc 1 522 0
 2835 1112 8A81      		ldd r24,Y+2
 2836 1114 8823      		tst r24
 2837 1116 01F0      		breq .L145
 523:lp_solve_5.5/lp_price.c ****     (*current) = *candidate;
 2838               		.loc 1 523 0
 2839 1118 8B81      		ldd r24,Y+3
 2840 111a 9C81      		ldd r25,Y+4
 2841 111c 2D81      		ldd r18,Y+5
 2842 111e 3E81      		ldd r19,Y+6
 2843 1120 41E1      		ldi r20,lo8(17)
 2844 1122 F901      		movw r30,r18
 2845 1124 DC01      		movw r26,r24
 2846               		0:
 2847 1126 0190      		ld r0,Z+
 2848 1128 0D92      		st X+,r0
 2849 112a 4A95      		dec r20
 2850 112c 01F4      		brne 0b
 524:lp_solve_5.5/lp_price.c **** 
 525:lp_solve_5.5/lp_price.c ****     /* Force immediate acceptance for Bland's rule using the primal simplex */
 526:lp_solve_5.5/lp_price.c ****     if(!candidate->isdual)
 2851               		.loc 1 526 0
 2852 112e 8D81      		ldd r24,Y+5
 2853 1130 9E81      		ldd r25,Y+6
 2854 1132 FC01      		movw r30,r24
 2855 1134 8089      		ldd r24,Z+16
 2856 1136 8823      		tst r24
 2857 1138 01F4      		brne .L145
 527:lp_solve_5.5/lp_price.c ****       Action = (MYBOOL) (candidate->lp->_piv_rule_ == PRICER_FIRSTINDEX);
 2858               		.loc 1 527 0
 2859 113a 8D81      		ldd r24,Y+5
 2860 113c 9E81      		ldd r25,Y+6
 2861 113e FC01      		movw r30,r24
 2862 1140 8685      		ldd r24,Z+14
 2863 1142 9785      		ldd r25,Z+15
 2864 1144 8E59      		subi r24,-98
 2865 1146 9D4F      		sbci r25,-3
 2866 1148 FC01      		movw r30,r24
 2867 114a 8081      		ld r24,Z
 2868 114c 9181      		ldd r25,Z+1
 2869 114e 21E0      		ldi r18,lo8(1)
 2870 1150 892B      		or r24,r25
 2871 1152 01F0      		breq .L146
 2872 1154 20E0      		ldi r18,0
 2873               	.L146:
 2874 1156 2983      		std Y+1,r18
 2875               	.L145:
 528:lp_solve_5.5/lp_price.c ****   }
 529:lp_solve_5.5/lp_price.c ****   return(Action);
 2876               		.loc 1 529 0
 2877 1158 8981      		ldd r24,Y+1
 2878               	.L143:
 2879               	/* epilogue start */
 530:lp_solve_5.5/lp_price.c **** }
 2880               		.loc 1 530 0
 2881 115a 2996      		adiw r28,9
 2882 115c 0FB6      		in __tmp_reg__,__SREG__
 2883 115e F894      		cli
 2884 1160 DEBF      		out __SP_H__,r29
 2885 1162 0FBE      		out __SREG__,__tmp_reg__
 2886 1164 CDBF      		out __SP_L__,r28
 2887 1166 DF91      		pop r29
 2888 1168 CF91      		pop r28
 2889 116a 0895      		ret
 2890               		.cfi_endproc
 2891               	.LFE15:
 2893               	.global	collectMinorVar
 2895               	collectMinorVar:
 2896               	.LFB16:
 531:lp_solve_5.5/lp_price.c **** 
 532:lp_solve_5.5/lp_price.c **** /* Bound flip variable accumulation routine */
 533:lp_solve_5.5/lp_price.c **** STATIC MYBOOL collectMinorVar(pricerec *candidate, multirec *longsteps, MYBOOL isphase2, MYBOOL isb
 534:lp_solve_5.5/lp_price.c **** {
 2897               		.loc 1 534 0
 2898               		.cfi_startproc
 2899 116c CF93      		push r28
 2900               	.LCFI91:
 2901               		.cfi_def_cfa_offset 3
 2902               		.cfi_offset 28, -2
 2903 116e DF93      		push r29
 2904               	.LCFI92:
 2905               		.cfi_def_cfa_offset 4
 2906               		.cfi_offset 29, -3
 2907 1170 CDB7      		in r28,__SP_L__
 2908 1172 DEB7      		in r29,__SP_H__
 2909               	.LCFI93:
 2910               		.cfi_def_cfa_register 28
 2911 1174 2897      		sbiw r28,8
 2912               	.LCFI94:
 2913               		.cfi_def_cfa_offset 12
 2914 1176 0FB6      		in __tmp_reg__,__SREG__
 2915 1178 F894      		cli
 2916 117a DEBF      		out __SP_H__,r29
 2917 117c 0FBE      		out __SREG__,__tmp_reg__
 2918 117e CDBF      		out __SP_L__,r28
 2919               	/* prologue: function */
 2920               	/* frame size = 8 */
 2921               	/* stack size = 10 */
 2922               	.L__stack_usage = 10
 2923 1180 9C83      		std Y+4,r25
 2924 1182 8B83      		std Y+3,r24
 2925 1184 7E83      		std Y+6,r23
 2926 1186 6D83      		std Y+5,r22
 2927 1188 4F83      		std Y+7,r20
 2928 118a 2887      		std Y+8,r18
 535:lp_solve_5.5/lp_price.c ****   int   inspos;
 536:lp_solve_5.5/lp_price.c **** 
 537:lp_solve_5.5/lp_price.c ****   /* 1. Check for ratio and pivot validity (to have the extra flexibility that all
 538:lp_solve_5.5/lp_price.c ****         bound-flip candidates are also possible as basis-entering variables */
 539:lp_solve_5.5/lp_price.c ****   if(!validSubstitutionVar(candidate))
 2929               		.loc 1 539 0
 2930 118c 8B81      		ldd r24,Y+3
 2931 118e 9C81      		ldd r25,Y+4
 2932 1190 0E94 0000 		call validSubstitutionVar
 2933 1194 8823      		tst r24
 2934 1196 01F4      		brne .L148
 540:lp_solve_5.5/lp_price.c ****     return( FALSE );
 2935               		.loc 1 540 0
 2936 1198 80E0      		ldi r24,0
 2937 119a 00C0      		rjmp .L157
 2938               	.L148:
 541:lp_solve_5.5/lp_price.c **** 
 542:lp_solve_5.5/lp_price.c ****   /* 2. If the free-list is empty we need to see if we have a better candidate,
 543:lp_solve_5.5/lp_price.c ****         and for this the candidate list has to be sorted by merit */
 544:lp_solve_5.5/lp_price.c ****   if(!isbatch &&
 2939               		.loc 1 544 0
 2940 119c 8885      		ldd r24,Y+8
 2941 119e 8823      		tst r24
 2942 11a0 01F0      		breq .+2
 2943 11a2 00C0      		rjmp .L150
 545:lp_solve_5.5/lp_price.c ****      !longsteps->sorted && (longsteps->used > 1) &&
 2944               		.loc 1 545 0 discriminator 1
 2945 11a4 8D81      		ldd r24,Y+5
 2946 11a6 9E81      		ldd r25,Y+6
 2947 11a8 FC01      		movw r30,r24
 2948 11aa 84A9      		ldd r24,Z+52
 544:lp_solve_5.5/lp_price.c ****      !longsteps->sorted && (longsteps->used > 1) &&
 2949               		.loc 1 544 0 discriminator 1
 2950 11ac 8823      		tst r24
 2951 11ae 01F0      		breq .+2
 2952 11b0 00C0      		rjmp .L150
 2953               		.loc 1 545 0
 2954 11b2 8D81      		ldd r24,Y+5
 2955 11b4 9E81      		ldd r25,Y+6
 2956 11b6 FC01      		movw r30,r24
 2957 11b8 8481      		ldd r24,Z+4
 2958 11ba 9581      		ldd r25,Z+5
 2959 11bc 0297      		sbiw r24,2
 2960 11be 04F4      		brge .+2
 2961 11c0 00C0      		rjmp .L150
 546:lp_solve_5.5/lp_price.c ****      ((longsteps->freeList[0] == 0) ||
 2962               		.loc 1 546 0 discriminator 1
 2963 11c2 8D81      		ldd r24,Y+5
 2964 11c4 9E81      		ldd r25,Y+6
 2965 11c6 FC01      		movw r30,r24
 2966 11c8 8285      		ldd r24,Z+10
 2967 11ca 9385      		ldd r25,Z+11
 2968 11cc FC01      		movw r30,r24
 2969 11ce 8081      		ld r24,Z
 2970 11d0 9181      		ldd r25,Z+1
 545:lp_solve_5.5/lp_price.c ****      !longsteps->sorted && (longsteps->used > 1) &&
 2971               		.loc 1 545 0 discriminator 1
 2972 11d2 892B      		or r24,r25
 2973 11d4 01F0      		breq .L151
 547:lp_solve_5.5/lp_price.c ****       multi_truncatingvar(longsteps, candidate->varno) ||
 2974               		.loc 1 547 0
 2975 11d6 8B81      		ldd r24,Y+3
 2976 11d8 9C81      		ldd r25,Y+4
 2977 11da FC01      		movw r30,r24
 2978 11dc 2485      		ldd r18,Z+12
 2979 11de 3585      		ldd r19,Z+13
 2980 11e0 8D81      		ldd r24,Y+5
 2981 11e2 9E81      		ldd r25,Y+6
 2982 11e4 B901      		movw r22,r18
 2983 11e6 0E94 0000 		call multi_truncatingvar
 546:lp_solve_5.5/lp_price.c ****      ((longsteps->freeList[0] == 0) ||
 2984               		.loc 1 546 0
 2985 11ea 8823      		tst r24
 2986 11ec 01F4      		brne .L151
 548:lp_solve_5.5/lp_price.c ****       (longsteps->step_last >= longsteps->epszero) )) {
 2987               		.loc 1 548 0
 2988 11ee 8D81      		ldd r24,Y+5
 2989 11f0 9E81      		ldd r25,Y+6
 2990 11f2 FC01      		movw r30,r24
 2991 11f4 848D      		ldd r24,Z+28
 2992 11f6 958D      		ldd r25,Z+29
 2993 11f8 A68D      		ldd r26,Z+30
 2994 11fa B78D      		ldd r27,Z+31
 2995 11fc 2D81      		ldd r18,Y+5
 2996 11fe 3E81      		ldd r19,Y+6
 2997 1200 F901      		movw r30,r18
 2998 1202 20A5      		ldd r18,Z+40
 2999 1204 31A5      		ldd r19,Z+41
 3000 1206 42A5      		ldd r20,Z+42
 3001 1208 53A5      		ldd r21,Z+43
 547:lp_solve_5.5/lp_price.c ****       multi_truncatingvar(longsteps, candidate->varno) ||
 3002               		.loc 1 547 0
 3003 120a BC01      		movw r22,r24
 3004 120c CD01      		movw r24,r26
 3005 120e 0E94 0000 		call __gesf2
 3006 1212 8823      		tst r24
 3007 1214 04F0      		brlt .L150
 3008               	.L151:
 549:lp_solve_5.5/lp_price.c ****     longsteps->sorted = QS_execute(longsteps->sortedList, longsteps->used,
 3009               		.loc 1 549 0
 3010 1216 8D81      		ldd r24,Y+5
 3011 1218 9E81      		ldd r25,Y+6
 3012 121a FC01      		movw r30,r24
 3013 121c 6481      		ldd r22,Z+4
 3014 121e 7581      		ldd r23,Z+5
 3015 1220 8D81      		ldd r24,Y+5
 3016 1222 9E81      		ldd r25,Y+6
 3017 1224 FC01      		movw r30,r24
 3018 1226 8485      		ldd r24,Z+12
 3019 1228 9585      		ldd r25,Z+13
 3020 122a 9E01      		movw r18,r28
 3021 122c 2F5F      		subi r18,-1
 3022 122e 3F4F      		sbci r19,-1
 3023 1230 40E0      		ldi r20,lo8(gs(compareSubstitutionQS))
 3024 1232 50E0      		ldi r21,hi8(gs(compareSubstitutionQS))
 3025 1234 0E94 0000 		call QS_execute
 3026 1238 282F      		mov r18,r24
 3027 123a 8D81      		ldd r24,Y+5
 3028 123c 9E81      		ldd r25,Y+6
 3029 123e FC01      		movw r30,r24
 3030 1240 24AB      		std Z+52,r18
 550:lp_solve_5.5/lp_price.c ****                                    (findCompare_func *) compareSubstitutionQS, &inspos);
 551:lp_solve_5.5/lp_price.c ****     longsteps->dirty  = (MYBOOL) (inspos > 0);
 3031               		.loc 1 551 0
 3032 1242 8981      		ldd r24,Y+1
 3033 1244 9A81      		ldd r25,Y+2
 3034 1246 21E0      		ldi r18,lo8(1)
 3035 1248 1816      		cp __zero_reg__,r24
 3036 124a 1906      		cpc __zero_reg__,r25
 3037 124c 04F0      		brlt .L153
 3038 124e 20E0      		ldi r18,0
 3039               	.L153:
 3040 1250 8D81      		ldd r24,Y+5
 3041 1252 9E81      		ldd r25,Y+6
 3042 1254 FC01      		movw r30,r24
 3043 1256 27AB      		std Z+55,r18
 552:lp_solve_5.5/lp_price.c ****     if(longsteps->dirty)
 3044               		.loc 1 552 0
 3045 1258 8D81      		ldd r24,Y+5
 3046 125a 9E81      		ldd r25,Y+6
 3047 125c FC01      		movw r30,r24
 3048 125e 87A9      		ldd r24,Z+55
 3049 1260 8823      		tst r24
 3050 1262 01F0      		breq .L150
 553:lp_solve_5.5/lp_price.c ****       multi_recompute(longsteps, 0, isphase2, TRUE);
 3051               		.loc 1 553 0
 3052 1264 8D81      		ldd r24,Y+5
 3053 1266 9E81      		ldd r25,Y+6
 3054 1268 21E0      		ldi r18,lo8(1)
 3055 126a 4F81      		ldd r20,Y+7
 3056 126c 60E0      		ldi r22,0
 3057 126e 70E0      		ldi r23,0
 3058 1270 0E94 0000 		call multi_recompute
 3059               	.L150:
 554:lp_solve_5.5/lp_price.c ****   }
 555:lp_solve_5.5/lp_price.c **** 
 556:lp_solve_5.5/lp_price.c ****   /* 3. Now handle three cases...
 557:lp_solve_5.5/lp_price.c ****         - Add to the list when the list is not full and there is opportunity for improvement,
 558:lp_solve_5.5/lp_price.c ****         - Check if we should replace an incumbent when the list is full,
 559:lp_solve_5.5/lp_price.c ****         - Check if we should replace an incumbent when the list is not full, there is no room
 560:lp_solve_5.5/lp_price.c ****           for improvement, but the current candidate is better than an incumbent. */
 561:lp_solve_5.5/lp_price.c ****   inspos = addCandidateVar(candidate, longsteps, (findCompare_func *) compareSubstitutionQS, TRUE);
 3060               		.loc 1 561 0
 3061 1274 6D81      		ldd r22,Y+5
 3062 1276 7E81      		ldd r23,Y+6
 3063 1278 8B81      		ldd r24,Y+3
 3064 127a 9C81      		ldd r25,Y+4
 3065 127c 21E0      		ldi r18,lo8(1)
 3066 127e 40E0      		ldi r20,lo8(gs(compareSubstitutionQS))
 3067 1280 50E0      		ldi r21,hi8(gs(compareSubstitutionQS))
 3068 1282 0E94 0000 		call addCandidateVar
 3069 1286 9A83      		std Y+2,r25
 3070 1288 8983      		std Y+1,r24
 562:lp_solve_5.5/lp_price.c **** 
 563:lp_solve_5.5/lp_price.c ****   /* 4. Recompute steps and objective, and (if relevant) determine if we
 564:lp_solve_5.5/lp_price.c ****         may be suboptimal in relation to an incumbent MILP solution. */
 565:lp_solve_5.5/lp_price.c ****   return( (MYBOOL) (inspos >= 0) &&
 3071               		.loc 1 565 0
 3072 128a 8981      		ldd r24,Y+1
 3073 128c 9A81      		ldd r25,Y+2
 3074 128e 9923      		tst r25
 3075 1290 04F0      		brlt .L154
 3076               		.loc 1 565 0 is_stmt 0 discriminator 1
 3077 1292 8885      		ldd r24,Y+8
 3078 1294 8130      		cpi r24,lo8(1)
 3079 1296 01F0      		breq .L155
 566:lp_solve_5.5/lp_price.c ****            ((isbatch == TRUE) || multi_recompute(longsteps, inspos, isphase2, TRUE)) );
 3080               		.loc 1 566 0 is_stmt 1
 3081 1298 6981      		ldd r22,Y+1
 3082 129a 7A81      		ldd r23,Y+2
 3083 129c 8D81      		ldd r24,Y+5
 3084 129e 9E81      		ldd r25,Y+6
 3085 12a0 21E0      		ldi r18,lo8(1)
 3086 12a2 4F81      		ldd r20,Y+7
 3087 12a4 0E94 0000 		call multi_recompute
 3088 12a8 8823      		tst r24
 3089 12aa 01F0      		breq .L154
 3090               	.L155:
 565:lp_solve_5.5/lp_price.c ****            ((isbatch == TRUE) || multi_recompute(longsteps, inspos, isphase2, TRUE)) );
 3091               		.loc 1 565 0 discriminator 3
 3092 12ac 81E0      		ldi r24,lo8(1)
 3093 12ae 90E0      		ldi r25,0
 3094 12b0 00C0      		rjmp .L156
 3095               	.L154:
 565:lp_solve_5.5/lp_price.c ****            ((isbatch == TRUE) || multi_recompute(longsteps, inspos, isphase2, TRUE)) );
 3096               		.loc 1 565 0 is_stmt 0 discriminator 2
 3097 12b2 80E0      		ldi r24,0
 3098 12b4 90E0      		ldi r25,0
 3099               	.L156:
 3100               	.L157:
 3101               	/* epilogue start */
 567:lp_solve_5.5/lp_price.c **** }
 3102               		.loc 1 567 0 is_stmt 1 discriminator 1
 3103 12b6 2896      		adiw r28,8
 3104 12b8 0FB6      		in __tmp_reg__,__SREG__
 3105 12ba F894      		cli
 3106 12bc DEBF      		out __SP_H__,r29
 3107 12be 0FBE      		out __SREG__,__tmp_reg__
 3108 12c0 CDBF      		out __SP_L__,r28
 3109 12c2 DF91      		pop r29
 3110 12c4 CF91      		pop r28
 3111 12c6 0895      		ret
 3112               		.cfi_endproc
 3113               	.LFE16:
 3115               	.global	findSubstitutionVar
 3117               	findSubstitutionVar:
 3118               	.LFB17:
 568:lp_solve_5.5/lp_price.c **** 
 569:lp_solve_5.5/lp_price.c **** STATIC MYBOOL findSubstitutionVar(pricerec *current, pricerec *candidate, int *candidatecount)
 570:lp_solve_5.5/lp_price.c **** /* PRIMAL: Find a variable to leave the basis
 571:lp_solve_5.5/lp_price.c ****    DUAL:   Find a variable to enter the basis
 572:lp_solve_5.5/lp_price.c **** 
 573:lp_solve_5.5/lp_price.c ****    Allowed variable set: "Equal-valued" smallest thetas! */
 574:lp_solve_5.5/lp_price.c **** {
 3119               		.loc 1 574 0
 3120               		.cfi_startproc
 3121 12c8 CF93      		push r28
 3122               	.LCFI95:
 3123               		.cfi_def_cfa_offset 3
 3124               		.cfi_offset 28, -2
 3125 12ca DF93      		push r29
 3126               	.LCFI96:
 3127               		.cfi_def_cfa_offset 4
 3128               		.cfi_offset 29, -3
 3129 12cc CDB7      		in r28,__SP_L__
 3130 12ce DEB7      		in r29,__SP_H__
 3131               	.LCFI97:
 3132               		.cfi_def_cfa_register 28
 3133 12d0 2897      		sbiw r28,8
 3134               	.LCFI98:
 3135               		.cfi_def_cfa_offset 12
 3136 12d2 0FB6      		in __tmp_reg__,__SREG__
 3137 12d4 F894      		cli
 3138 12d6 DEBF      		out __SP_H__,r29
 3139 12d8 0FBE      		out __SREG__,__tmp_reg__
 3140 12da CDBF      		out __SP_L__,r28
 3141               	/* prologue: function */
 3142               	/* frame size = 8 */
 3143               	/* stack size = 10 */
 3144               	.L__stack_usage = 10
 3145 12dc 9C83      		std Y+4,r25
 3146 12de 8B83      		std Y+3,r24
 3147 12e0 7E83      		std Y+6,r23
 3148 12e2 6D83      		std Y+5,r22
 3149 12e4 5887      		std Y+8,r21
 3150 12e6 4F83      		std Y+7,r20
 575:lp_solve_5.5/lp_price.c ****   MYBOOL Action = FALSE,
 3151               		.loc 1 575 0
 3152 12e8 1A82      		std Y+2,__zero_reg__
 576:lp_solve_5.5/lp_price.c **** #ifdef ExtractedValidityTest
 577:lp_solve_5.5/lp_price.c ****          Accept = TRUE;
 578:lp_solve_5.5/lp_price.c **** #else  /* Check for validity and comparison result with previous best */
 579:lp_solve_5.5/lp_price.c ****          Accept = validSubstitutionVar(candidate);
 3153               		.loc 1 579 0
 3154 12ea 8D81      		ldd r24,Y+5
 3155 12ec 9E81      		ldd r25,Y+6
 3156 12ee 0E94 0000 		call validSubstitutionVar
 3157 12f2 8983      		std Y+1,r24
 580:lp_solve_5.5/lp_price.c **** #endif
 581:lp_solve_5.5/lp_price.c ****   if(Accept) {
 3158               		.loc 1 581 0
 3159 12f4 8981      		ldd r24,Y+1
 3160 12f6 8823      		tst r24
 3161 12f8 01F0      		breq .L159
 582:lp_solve_5.5/lp_price.c ****     if(candidatecount != NULL)
 3162               		.loc 1 582 0
 3163 12fa 8F81      		ldd r24,Y+7
 3164 12fc 9885      		ldd r25,Y+8
 3165 12fe 892B      		or r24,r25
 3166 1300 01F0      		breq .L160
 583:lp_solve_5.5/lp_price.c ****       (*candidatecount)++;
 3167               		.loc 1 583 0
 3168 1302 8F81      		ldd r24,Y+7
 3169 1304 9885      		ldd r25,Y+8
 3170 1306 FC01      		movw r30,r24
 3171 1308 8081      		ld r24,Z
 3172 130a 9181      		ldd r25,Z+1
 3173 130c 9C01      		movw r18,r24
 3174 130e 2F5F      		subi r18,-1
 3175 1310 3F4F      		sbci r19,-1
 3176 1312 8F81      		ldd r24,Y+7
 3177 1314 9885      		ldd r25,Y+8
 3178 1316 FC01      		movw r30,r24
 3179 1318 3183      		std Z+1,r19
 3180 131a 2083      		st Z,r18
 3181               	.L160:
 584:lp_solve_5.5/lp_price.c ****     if(current->varno != 0)
 3182               		.loc 1 584 0
 3183 131c 8B81      		ldd r24,Y+3
 3184 131e 9C81      		ldd r25,Y+4
 3185 1320 FC01      		movw r30,r24
 3186 1322 8485      		ldd r24,Z+12
 3187 1324 9585      		ldd r25,Z+13
 3188 1326 892B      		or r24,r25
 3189 1328 01F0      		breq .L159
 585:lp_solve_5.5/lp_price.c ****       Accept = (MYBOOL) (compareSubstitutionVar(current, candidate) > 0);
 3190               		.loc 1 585 0
 3191 132a 2D81      		ldd r18,Y+5
 3192 132c 3E81      		ldd r19,Y+6
 3193 132e 8B81      		ldd r24,Y+3
 3194 1330 9C81      		ldd r25,Y+4
 3195 1332 B901      		movw r22,r18
 3196 1334 0E94 0000 		call compareSubstitutionVar
 3197 1338 21E0      		ldi r18,lo8(1)
 3198 133a 1816      		cp __zero_reg__,r24
 3199 133c 1906      		cpc __zero_reg__,r25
 3200 133e 04F0      		brlt .L161
 3201 1340 20E0      		ldi r18,0
 3202               	.L161:
 3203 1342 2983      		std Y+1,r18
 3204               	.L159:
 586:lp_solve_5.5/lp_price.c ****   }
 587:lp_solve_5.5/lp_price.c **** 
 588:lp_solve_5.5/lp_price.c ****  /* Apply candidate if accepted */
 589:lp_solve_5.5/lp_price.c ****   if(Accept) {
 3205               		.loc 1 589 0
 3206 1344 8981      		ldd r24,Y+1
 3207 1346 8823      		tst r24
 3208 1348 01F0      		breq .L162
 590:lp_solve_5.5/lp_price.c ****     (*current) = *candidate;
 3209               		.loc 1 590 0
 3210 134a 8B81      		ldd r24,Y+3
 3211 134c 9C81      		ldd r25,Y+4
 3212 134e 2D81      		ldd r18,Y+5
 3213 1350 3E81      		ldd r19,Y+6
 3214 1352 41E1      		ldi r20,lo8(17)
 3215 1354 F901      		movw r30,r18
 3216 1356 DC01      		movw r26,r24
 3217               		0:
 3218 1358 0190      		ld r0,Z+
 3219 135a 0D92      		st X+,r0
 3220 135c 4A95      		dec r20
 3221 135e 01F4      		brne 0b
 3222               	.L162:
 591:lp_solve_5.5/lp_price.c **** 
 592:lp_solve_5.5/lp_price.c ****     /* Force immediate acceptance for Bland's rule using the dual simplex */
 593:lp_solve_5.5/lp_price.c **** #ifdef ForceEarlyBlandRule
 594:lp_solve_5.5/lp_price.c ****     if(candidate->isdual)
 595:lp_solve_5.5/lp_price.c ****       Action = (MYBOOL) (candidate->lp->_piv_rule_ == PRICER_FIRSTINDEX);
 596:lp_solve_5.5/lp_price.c **** #endif
 597:lp_solve_5.5/lp_price.c ****   }
 598:lp_solve_5.5/lp_price.c ****   return(Action);
 3223               		.loc 1 598 0
 3224 1360 8A81      		ldd r24,Y+2
 3225               	/* epilogue start */
 599:lp_solve_5.5/lp_price.c **** }
 3226               		.loc 1 599 0
 3227 1362 2896      		adiw r28,8
 3228 1364 0FB6      		in __tmp_reg__,__SREG__
 3229 1366 F894      		cli
 3230 1368 DEBF      		out __SP_H__,r29
 3231 136a 0FBE      		out __SREG__,__tmp_reg__
 3232 136c CDBF      		out __SP_L__,r28
 3233 136e DF91      		pop r29
 3234 1370 CF91      		pop r28
 3235 1372 0895      		ret
 3236               		.cfi_endproc
 3237               	.LFE17:
 3239               	.global	partial_createBlocks
 3241               	partial_createBlocks:
 3242               	.LFB18:
 600:lp_solve_5.5/lp_price.c **** 
 601:lp_solve_5.5/lp_price.c **** /* Partial pricing management routines */
 602:lp_solve_5.5/lp_price.c **** STATIC partialrec *partial_createBlocks(lprec *lp, MYBOOL isrow)
 603:lp_solve_5.5/lp_price.c **** {
 3243               		.loc 1 603 0
 3244               		.cfi_startproc
 3245 1374 CF93      		push r28
 3246               	.LCFI99:
 3247               		.cfi_def_cfa_offset 3
 3248               		.cfi_offset 28, -2
 3249 1376 DF93      		push r29
 3250               	.LCFI100:
 3251               		.cfi_def_cfa_offset 4
 3252               		.cfi_offset 29, -3
 3253 1378 00D0      		rcall .
 3254 137a 00D0      		rcall .
 3255 137c 1F92      		push __zero_reg__
 3256               	.LCFI101:
 3257               		.cfi_def_cfa_offset 9
 3258 137e CDB7      		in r28,__SP_L__
 3259 1380 DEB7      		in r29,__SP_H__
 3260               	.LCFI102:
 3261               		.cfi_def_cfa_register 28
 3262               	/* prologue: function */
 3263               	/* frame size = 5 */
 3264               	/* stack size = 7 */
 3265               	.L__stack_usage = 7
 3266 1382 9C83      		std Y+4,r25
 3267 1384 8B83      		std Y+3,r24
 3268 1386 6D83      		std Y+5,r22
 604:lp_solve_5.5/lp_price.c ****   partialrec *blockdata;
 605:lp_solve_5.5/lp_price.c **** 
 606:lp_solve_5.5/lp_price.c ****   blockdata = (partialrec *) calloc(1, sizeof(*blockdata));
 3269               		.loc 1 606 0
 3270 1388 6BE0      		ldi r22,lo8(11)
 3271 138a 70E0      		ldi r23,0
 3272 138c 81E0      		ldi r24,lo8(1)
 3273 138e 90E0      		ldi r25,0
 3274 1390 0E94 0000 		call calloc
 3275 1394 9A83      		std Y+2,r25
 3276 1396 8983      		std Y+1,r24
 607:lp_solve_5.5/lp_price.c ****   blockdata->lp = lp;
 3277               		.loc 1 607 0
 3278 1398 8981      		ldd r24,Y+1
 3279 139a 9A81      		ldd r25,Y+2
 3280 139c 2B81      		ldd r18,Y+3
 3281 139e 3C81      		ldd r19,Y+4
 3282 13a0 FC01      		movw r30,r24
 3283 13a2 3183      		std Z+1,r19
 3284 13a4 2083      		st Z,r18
 608:lp_solve_5.5/lp_price.c ****   blockdata->blockcount = 1;
 3285               		.loc 1 608 0
 3286 13a6 8981      		ldd r24,Y+1
 3287 13a8 9A81      		ldd r25,Y+2
 3288 13aa 21E0      		ldi r18,lo8(1)
 3289 13ac 30E0      		ldi r19,0
 3290 13ae FC01      		movw r30,r24
 3291 13b0 3383      		std Z+3,r19
 3292 13b2 2283      		std Z+2,r18
 609:lp_solve_5.5/lp_price.c ****   blockdata->blocknow = 1;
 3293               		.loc 1 609 0
 3294 13b4 8981      		ldd r24,Y+1
 3295 13b6 9A81      		ldd r25,Y+2
 3296 13b8 21E0      		ldi r18,lo8(1)
 3297 13ba 30E0      		ldi r19,0
 3298 13bc FC01      		movw r30,r24
 3299 13be 3583      		std Z+5,r19
 3300 13c0 2483      		std Z+4,r18
 610:lp_solve_5.5/lp_price.c ****   blockdata->isrow = isrow;
 3301               		.loc 1 610 0
 3302 13c2 8981      		ldd r24,Y+1
 3303 13c4 9A81      		ldd r25,Y+2
 3304 13c6 2D81      		ldd r18,Y+5
 3305 13c8 FC01      		movw r30,r24
 3306 13ca 2287      		std Z+10,r18
 611:lp_solve_5.5/lp_price.c **** 
 612:lp_solve_5.5/lp_price.c ****   return(blockdata);
 3307               		.loc 1 612 0
 3308 13cc 8981      		ldd r24,Y+1
 3309 13ce 9A81      		ldd r25,Y+2
 3310               	/* epilogue start */
 613:lp_solve_5.5/lp_price.c **** }
 3311               		.loc 1 613 0
 3312 13d0 0F90      		pop __tmp_reg__
 3313 13d2 0F90      		pop __tmp_reg__
 3314 13d4 0F90      		pop __tmp_reg__
 3315 13d6 0F90      		pop __tmp_reg__
 3316 13d8 0F90      		pop __tmp_reg__
 3317 13da DF91      		pop r29
 3318 13dc CF91      		pop r28
 3319 13de 0895      		ret
 3320               		.cfi_endproc
 3321               	.LFE18:
 3323               	.global	partial_countBlocks
 3325               	partial_countBlocks:
 3326               	.LFB19:
 614:lp_solve_5.5/lp_price.c **** STATIC int partial_countBlocks(lprec *lp, MYBOOL isrow)
 615:lp_solve_5.5/lp_price.c **** {
 3327               		.loc 1 615 0
 3328               		.cfi_startproc
 3329 13e0 CF93      		push r28
 3330               	.LCFI103:
 3331               		.cfi_def_cfa_offset 3
 3332               		.cfi_offset 28, -2
 3333 13e2 DF93      		push r29
 3334               	.LCFI104:
 3335               		.cfi_def_cfa_offset 4
 3336               		.cfi_offset 29, -3
 3337 13e4 00D0      		rcall .
 3338 13e6 00D0      		rcall .
 3339 13e8 1F92      		push __zero_reg__
 3340               	.LCFI105:
 3341               		.cfi_def_cfa_offset 9
 3342 13ea CDB7      		in r28,__SP_L__
 3343 13ec DEB7      		in r29,__SP_H__
 3344               	.LCFI106:
 3345               		.cfi_def_cfa_register 28
 3346               	/* prologue: function */
 3347               	/* frame size = 5 */
 3348               	/* stack size = 7 */
 3349               	.L__stack_usage = 7
 3350 13ee 9C83      		std Y+4,r25
 3351 13f0 8B83      		std Y+3,r24
 3352 13f2 6D83      		std Y+5,r22
 616:lp_solve_5.5/lp_price.c ****   partialrec *blockdata = IF(isrow, lp->rowblocks, lp->colblocks);
 3353               		.loc 1 616 0
 3354 13f4 8D81      		ldd r24,Y+5
 3355 13f6 8823      		tst r24
 3356 13f8 01F0      		breq .L167
 3357               		.loc 1 616 0 is_stmt 0 discriminator 1
 3358 13fa 8B81      		ldd r24,Y+3
 3359 13fc 9C81      		ldd r25,Y+4
 3360 13fe 8E57      		subi r24,126
 3361 1400 9D4F      		sbci r25,-3
 3362 1402 FC01      		movw r30,r24
 3363 1404 8081      		ld r24,Z
 3364 1406 9181      		ldd r25,Z+1
 3365 1408 00C0      		rjmp .L168
 3366               	.L167:
 3367               		.loc 1 616 0 discriminator 2
 3368 140a 8B81      		ldd r24,Y+3
 3369 140c 9C81      		ldd r25,Y+4
 3370 140e 8C57      		subi r24,124
 3371 1410 9D4F      		sbci r25,-3
 3372 1412 FC01      		movw r30,r24
 3373 1414 8081      		ld r24,Z
 3374 1416 9181      		ldd r25,Z+1
 3375               	.L168:
 3376               		.loc 1 616 0 discriminator 4
 3377 1418 9A83      		std Y+2,r25
 3378 141a 8983      		std Y+1,r24
 617:lp_solve_5.5/lp_price.c **** 
 618:lp_solve_5.5/lp_price.c ****   if(blockdata == NULL)
 3379               		.loc 1 618 0 is_stmt 1 discriminator 4
 3380 141c 8981      		ldd r24,Y+1
 3381 141e 9A81      		ldd r25,Y+2
 3382 1420 892B      		or r24,r25
 3383 1422 01F4      		brne .L169
 619:lp_solve_5.5/lp_price.c ****     return( 1 );
 3384               		.loc 1 619 0
 3385 1424 81E0      		ldi r24,lo8(1)
 3386 1426 90E0      		ldi r25,0
 3387 1428 00C0      		rjmp .L170
 3388               	.L169:
 620:lp_solve_5.5/lp_price.c ****   else
 621:lp_solve_5.5/lp_price.c ****     return( blockdata->blockcount );
 3389               		.loc 1 621 0
 3390 142a 8981      		ldd r24,Y+1
 3391 142c 9A81      		ldd r25,Y+2
 3392 142e FC01      		movw r30,r24
 3393 1430 8281      		ldd r24,Z+2
 3394 1432 9381      		ldd r25,Z+3
 3395               	.L170:
 3396               	/* epilogue start */
 622:lp_solve_5.5/lp_price.c **** }
 3397               		.loc 1 622 0
 3398 1434 0F90      		pop __tmp_reg__
 3399 1436 0F90      		pop __tmp_reg__
 3400 1438 0F90      		pop __tmp_reg__
 3401 143a 0F90      		pop __tmp_reg__
 3402 143c 0F90      		pop __tmp_reg__
 3403 143e DF91      		pop r29
 3404 1440 CF91      		pop r28
 3405 1442 0895      		ret
 3406               		.cfi_endproc
 3407               	.LFE19:
 3409               	.global	partial_activeBlocks
 3411               	partial_activeBlocks:
 3412               	.LFB20:
 623:lp_solve_5.5/lp_price.c **** STATIC int partial_activeBlocks(lprec *lp, MYBOOL isrow)
 624:lp_solve_5.5/lp_price.c **** {
 3413               		.loc 1 624 0
 3414               		.cfi_startproc
 3415 1444 CF93      		push r28
 3416               	.LCFI107:
 3417               		.cfi_def_cfa_offset 3
 3418               		.cfi_offset 28, -2
 3419 1446 DF93      		push r29
 3420               	.LCFI108:
 3421               		.cfi_def_cfa_offset 4
 3422               		.cfi_offset 29, -3
 3423 1448 00D0      		rcall .
 3424 144a 00D0      		rcall .
 3425 144c 1F92      		push __zero_reg__
 3426               	.LCFI109:
 3427               		.cfi_def_cfa_offset 9
 3428 144e CDB7      		in r28,__SP_L__
 3429 1450 DEB7      		in r29,__SP_H__
 3430               	.LCFI110:
 3431               		.cfi_def_cfa_register 28
 3432               	/* prologue: function */
 3433               	/* frame size = 5 */
 3434               	/* stack size = 7 */
 3435               	.L__stack_usage = 7
 3436 1452 9C83      		std Y+4,r25
 3437 1454 8B83      		std Y+3,r24
 3438 1456 6D83      		std Y+5,r22
 625:lp_solve_5.5/lp_price.c ****   partialrec *blockdata = IF(isrow, lp->rowblocks, lp->colblocks);
 3439               		.loc 1 625 0
 3440 1458 8D81      		ldd r24,Y+5
 3441 145a 8823      		tst r24
 3442 145c 01F0      		breq .L172
 3443               		.loc 1 625 0 is_stmt 0 discriminator 1
 3444 145e 8B81      		ldd r24,Y+3
 3445 1460 9C81      		ldd r25,Y+4
 3446 1462 8E57      		subi r24,126
 3447 1464 9D4F      		sbci r25,-3
 3448 1466 FC01      		movw r30,r24
 3449 1468 8081      		ld r24,Z
 3450 146a 9181      		ldd r25,Z+1
 3451 146c 00C0      		rjmp .L173
 3452               	.L172:
 3453               		.loc 1 625 0 discriminator 2
 3454 146e 8B81      		ldd r24,Y+3
 3455 1470 9C81      		ldd r25,Y+4
 3456 1472 8C57      		subi r24,124
 3457 1474 9D4F      		sbci r25,-3
 3458 1476 FC01      		movw r30,r24
 3459 1478 8081      		ld r24,Z
 3460 147a 9181      		ldd r25,Z+1
 3461               	.L173:
 3462               		.loc 1 625 0 discriminator 4
 3463 147c 9A83      		std Y+2,r25
 3464 147e 8983      		std Y+1,r24
 626:lp_solve_5.5/lp_price.c **** 
 627:lp_solve_5.5/lp_price.c ****   if(blockdata == NULL)
 3465               		.loc 1 627 0 is_stmt 1 discriminator 4
 3466 1480 8981      		ldd r24,Y+1
 3467 1482 9A81      		ldd r25,Y+2
 3468 1484 892B      		or r24,r25
 3469 1486 01F4      		brne .L174
 628:lp_solve_5.5/lp_price.c ****     return( 1 );
 3470               		.loc 1 628 0
 3471 1488 81E0      		ldi r24,lo8(1)
 3472 148a 90E0      		ldi r25,0
 3473 148c 00C0      		rjmp .L175
 3474               	.L174:
 629:lp_solve_5.5/lp_price.c ****   else
 630:lp_solve_5.5/lp_price.c ****     return( blockdata->blocknow );
 3475               		.loc 1 630 0
 3476 148e 8981      		ldd r24,Y+1
 3477 1490 9A81      		ldd r25,Y+2
 3478 1492 FC01      		movw r30,r24
 3479 1494 8481      		ldd r24,Z+4
 3480 1496 9581      		ldd r25,Z+5
 3481               	.L175:
 3482               	/* epilogue start */
 631:lp_solve_5.5/lp_price.c **** }
 3483               		.loc 1 631 0
 3484 1498 0F90      		pop __tmp_reg__
 3485 149a 0F90      		pop __tmp_reg__
 3486 149c 0F90      		pop __tmp_reg__
 3487 149e 0F90      		pop __tmp_reg__
 3488 14a0 0F90      		pop __tmp_reg__
 3489 14a2 DF91      		pop r29
 3490 14a4 CF91      		pop r28
 3491 14a6 0895      		ret
 3492               		.cfi_endproc
 3493               	.LFE20:
 3495               	.global	partial_freeBlocks
 3497               	partial_freeBlocks:
 3498               	.LFB21:
 632:lp_solve_5.5/lp_price.c **** STATIC void partial_freeBlocks(partialrec **blockdata)
 633:lp_solve_5.5/lp_price.c **** {
 3499               		.loc 1 633 0
 3500               		.cfi_startproc
 3501 14a8 CF93      		push r28
 3502               	.LCFI111:
 3503               		.cfi_def_cfa_offset 3
 3504               		.cfi_offset 28, -2
 3505 14aa DF93      		push r29
 3506               	.LCFI112:
 3507               		.cfi_def_cfa_offset 4
 3508               		.cfi_offset 29, -3
 3509 14ac 00D0      		rcall .
 3510               	.LCFI113:
 3511               		.cfi_def_cfa_offset 6
 3512 14ae CDB7      		in r28,__SP_L__
 3513 14b0 DEB7      		in r29,__SP_H__
 3514               	.LCFI114:
 3515               		.cfi_def_cfa_register 28
 3516               	/* prologue: function */
 3517               	/* frame size = 2 */
 3518               	/* stack size = 4 */
 3519               	.L__stack_usage = 4
 3520 14b2 9A83      		std Y+2,r25
 3521 14b4 8983      		std Y+1,r24
 634:lp_solve_5.5/lp_price.c ****   if((blockdata == NULL) || (*blockdata == NULL))
 3522               		.loc 1 634 0
 3523 14b6 8981      		ldd r24,Y+1
 3524 14b8 9A81      		ldd r25,Y+2
 3525 14ba 892B      		or r24,r25
 3526 14bc 01F4      		brne .+2
 3527 14be 00C0      		rjmp .L182
 3528               		.loc 1 634 0 is_stmt 0 discriminator 1
 3529 14c0 8981      		ldd r24,Y+1
 3530 14c2 9A81      		ldd r25,Y+2
 3531 14c4 FC01      		movw r30,r24
 3532 14c6 8081      		ld r24,Z
 3533 14c8 9181      		ldd r25,Z+1
 3534 14ca 892B      		or r24,r25
 3535 14cc 01F4      		brne .+2
 3536 14ce 00C0      		rjmp .L182
 635:lp_solve_5.5/lp_price.c ****     return;
 636:lp_solve_5.5/lp_price.c ****   FREE((*blockdata)->blockend);
 3537               		.loc 1 636 0 is_stmt 1
 3538 14d0 8981      		ldd r24,Y+1
 3539 14d2 9A81      		ldd r25,Y+2
 3540 14d4 FC01      		movw r30,r24
 3541 14d6 8081      		ld r24,Z
 3542 14d8 9181      		ldd r25,Z+1
 3543 14da FC01      		movw r30,r24
 3544 14dc 8681      		ldd r24,Z+6
 3545 14de 9781      		ldd r25,Z+7
 3546 14e0 892B      		or r24,r25
 3547 14e2 01F0      		breq .L180
 3548               		.loc 1 636 0 is_stmt 0 discriminator 1
 3549 14e4 8981      		ldd r24,Y+1
 3550 14e6 9A81      		ldd r25,Y+2
 3551 14e8 FC01      		movw r30,r24
 3552 14ea 8081      		ld r24,Z
 3553 14ec 9181      		ldd r25,Z+1
 3554 14ee FC01      		movw r30,r24
 3555 14f0 8681      		ldd r24,Z+6
 3556 14f2 9781      		ldd r25,Z+7
 3557 14f4 0E94 0000 		call free
 3558 14f8 8981      		ldd r24,Y+1
 3559 14fa 9A81      		ldd r25,Y+2
 3560 14fc FC01      		movw r30,r24
 3561 14fe 8081      		ld r24,Z
 3562 1500 9181      		ldd r25,Z+1
 3563 1502 FC01      		movw r30,r24
 3564 1504 1782      		std Z+7,__zero_reg__
 3565 1506 1682      		std Z+6,__zero_reg__
 3566               	.L180:
 637:lp_solve_5.5/lp_price.c ****   FREE((*blockdata)->blockpos);
 3567               		.loc 1 637 0 is_stmt 1
 3568 1508 8981      		ldd r24,Y+1
 3569 150a 9A81      		ldd r25,Y+2
 3570 150c FC01      		movw r30,r24
 3571 150e 8081      		ld r24,Z
 3572 1510 9181      		ldd r25,Z+1
 3573 1512 FC01      		movw r30,r24
 3574 1514 8085      		ldd r24,Z+8
 3575 1516 9185      		ldd r25,Z+9
 3576 1518 892B      		or r24,r25
 3577 151a 01F0      		breq .L181
 3578               		.loc 1 637 0 is_stmt 0 discriminator 1
 3579 151c 8981      		ldd r24,Y+1
 3580 151e 9A81      		ldd r25,Y+2
 3581 1520 FC01      		movw r30,r24
 3582 1522 8081      		ld r24,Z
 3583 1524 9181      		ldd r25,Z+1
 3584 1526 FC01      		movw r30,r24
 3585 1528 8085      		ldd r24,Z+8
 3586 152a 9185      		ldd r25,Z+9
 3587 152c 0E94 0000 		call free
 3588 1530 8981      		ldd r24,Y+1
 3589 1532 9A81      		ldd r25,Y+2
 3590 1534 FC01      		movw r30,r24
 3591 1536 8081      		ld r24,Z
 3592 1538 9181      		ldd r25,Z+1
 3593 153a FC01      		movw r30,r24
 3594 153c 1186      		std Z+9,__zero_reg__
 3595 153e 1086      		std Z+8,__zero_reg__
 3596               	.L181:
 638:lp_solve_5.5/lp_price.c ****   FREE(*blockdata);
 3597               		.loc 1 638 0 is_stmt 1
 3598 1540 8981      		ldd r24,Y+1
 3599 1542 9A81      		ldd r25,Y+2
 3600 1544 FC01      		movw r30,r24
 3601 1546 8081      		ld r24,Z
 3602 1548 9181      		ldd r25,Z+1
 3603 154a 892B      		or r24,r25
 3604 154c 01F0      		breq .L176
 3605               		.loc 1 638 0 is_stmt 0 discriminator 1
 3606 154e 8981      		ldd r24,Y+1
 3607 1550 9A81      		ldd r25,Y+2
 3608 1552 FC01      		movw r30,r24
 3609 1554 8081      		ld r24,Z
 3610 1556 9181      		ldd r25,Z+1
 3611 1558 0E94 0000 		call free
 3612 155c 8981      		ldd r24,Y+1
 3613 155e 9A81      		ldd r25,Y+2
 3614 1560 FC01      		movw r30,r24
 3615 1562 1182      		std Z+1,__zero_reg__
 3616 1564 1082      		st Z,__zero_reg__
 3617 1566 00C0      		rjmp .L176
 3618               	.L182:
 635:lp_solve_5.5/lp_price.c ****     return;
 3619               		.loc 1 635 0 is_stmt 1
 3620 1568 0000      		nop
 3621               	.L176:
 3622               	/* epilogue start */
 639:lp_solve_5.5/lp_price.c **** }
 3623               		.loc 1 639 0
 3624 156a 0F90      		pop __tmp_reg__
 3625 156c 0F90      		pop __tmp_reg__
 3626 156e DF91      		pop r29
 3627 1570 CF91      		pop r28
 3628 1572 0895      		ret
 3629               		.cfi_endproc
 3630               	.LFE21:
 3632               	.global	makePriceLoop
 3634               	makePriceLoop:
 3635               	.LFB22:
 640:lp_solve_5.5/lp_price.c **** 
 641:lp_solve_5.5/lp_price.c **** 
 642:lp_solve_5.5/lp_price.c **** /* Function to provide for left-right or right-left scanning of entering/leaving
 643:lp_solve_5.5/lp_price.c ****    variables; note that *end must have been initialized by the calling routine! */
 644:lp_solve_5.5/lp_price.c **** STATIC void makePriceLoop(lprec *lp, int *start, int *end, int *delta)
 645:lp_solve_5.5/lp_price.c **** {
 3636               		.loc 1 645 0
 3637               		.cfi_startproc
 3638 1574 2F92      		push r2
 3639               	.LCFI115:
 3640               		.cfi_def_cfa_offset 3
 3641               		.cfi_offset 2, -2
 3642 1576 3F92      		push r3
 3643               	.LCFI116:
 3644               		.cfi_def_cfa_offset 4
 3645               		.cfi_offset 3, -3
 3646 1578 4F92      		push r4
 3647               	.LCFI117:
 3648               		.cfi_def_cfa_offset 5
 3649               		.cfi_offset 4, -4
 3650 157a 5F92      		push r5
 3651               	.LCFI118:
 3652               		.cfi_def_cfa_offset 6
 3653               		.cfi_offset 5, -5
 3654 157c 6F92      		push r6
 3655               	.LCFI119:
 3656               		.cfi_def_cfa_offset 7
 3657               		.cfi_offset 6, -6
 3658 157e 7F92      		push r7
 3659               	.LCFI120:
 3660               		.cfi_def_cfa_offset 8
 3661               		.cfi_offset 7, -7
 3662 1580 8F92      		push r8
 3663               	.LCFI121:
 3664               		.cfi_def_cfa_offset 9
 3665               		.cfi_offset 8, -8
 3666 1582 9F92      		push r9
 3667               	.LCFI122:
 3668               		.cfi_def_cfa_offset 10
 3669               		.cfi_offset 9, -9
 3670 1584 AF92      		push r10
 3671               	.LCFI123:
 3672               		.cfi_def_cfa_offset 11
 3673               		.cfi_offset 10, -10
 3674 1586 BF92      		push r11
 3675               	.LCFI124:
 3676               		.cfi_def_cfa_offset 12
 3677               		.cfi_offset 11, -11
 3678 1588 CF92      		push r12
 3679               	.LCFI125:
 3680               		.cfi_def_cfa_offset 13
 3681               		.cfi_offset 12, -12
 3682 158a DF92      		push r13
 3683               	.LCFI126:
 3684               		.cfi_def_cfa_offset 14
 3685               		.cfi_offset 13, -13
 3686 158c EF92      		push r14
 3687               	.LCFI127:
 3688               		.cfi_def_cfa_offset 15
 3689               		.cfi_offset 14, -14
 3690 158e FF92      		push r15
 3691               	.LCFI128:
 3692               		.cfi_def_cfa_offset 16
 3693               		.cfi_offset 15, -15
 3694 1590 0F93      		push r16
 3695               	.LCFI129:
 3696               		.cfi_def_cfa_offset 17
 3697               		.cfi_offset 16, -16
 3698 1592 1F93      		push r17
 3699               	.LCFI130:
 3700               		.cfi_def_cfa_offset 18
 3701               		.cfi_offset 17, -17
 3702 1594 CF93      		push r28
 3703               	.LCFI131:
 3704               		.cfi_def_cfa_offset 19
 3705               		.cfi_offset 28, -18
 3706 1596 DF93      		push r29
 3707               	.LCFI132:
 3708               		.cfi_def_cfa_offset 20
 3709               		.cfi_offset 29, -19
 3710 1598 CDB7      		in r28,__SP_L__
 3711 159a DEB7      		in r29,__SP_H__
 3712               	.LCFI133:
 3713               		.cfi_def_cfa_register 28
 3714 159c 6297      		sbiw r28,18
 3715               	.LCFI134:
 3716               		.cfi_def_cfa_offset 38
 3717 159e 0FB6      		in __tmp_reg__,__SREG__
 3718 15a0 F894      		cli
 3719 15a2 DEBF      		out __SP_H__,r29
 3720 15a4 0FBE      		out __SREG__,__tmp_reg__
 3721 15a6 CDBF      		out __SP_L__,r28
 3722               	/* prologue: function */
 3723               	/* frame size = 18 */
 3724               	/* stack size = 36 */
 3725               	.L__stack_usage = 36
 3726 15a8 9C83      		std Y+4,r25
 3727 15aa 8B83      		std Y+3,r24
 3728 15ac 7E83      		std Y+6,r23
 3729 15ae 6D83      		std Y+5,r22
 3730 15b0 5887      		std Y+8,r21
 3731 15b2 4F83      		std Y+7,r20
 3732 15b4 3A87      		std Y+10,r19
 3733 15b6 2987      		std Y+9,r18
 646:lp_solve_5.5/lp_price.c ****   int offset = is_piv_mode(lp, PRICE_LOOPLEFT);
 3734               		.loc 1 646 0
 3735 15b8 8B81      		ldd r24,Y+3
 3736 15ba 9C81      		ldd r25,Y+4
 3737 15bc 60E0      		ldi r22,0
 3738 15be 74E0      		ldi r23,lo8(4)
 3739 15c0 0E94 0000 		call is_piv_mode
 3740 15c4 882F      		mov r24,r24
 3741 15c6 90E0      		ldi r25,0
 3742 15c8 9A83      		std Y+2,r25
 3743 15ca 8983      		std Y+1,r24
 647:lp_solve_5.5/lp_price.c **** 
 648:lp_solve_5.5/lp_price.c ****   if((offset) ||
 3744               		.loc 1 648 0
 3745 15cc 8981      		ldd r24,Y+1
 3746 15ce 9A81      		ldd r25,Y+2
 3747 15d0 892B      		or r24,r25
 3748 15d2 01F0      		breq .+2
 3749 15d4 00C0      		rjmp .L184
 649:lp_solve_5.5/lp_price.c ****      (((lp->total_iter+offset) % 2 == 0) && is_piv_mode(lp, PRICE_LOOPALTERNATE))) {
 3750               		.loc 1 649 0 discriminator 1
 3751 15d6 8B81      		ldd r24,Y+3
 3752 15d8 9C81      		ldd r25,Y+4
 3753 15da 885C      		subi r24,-56
 3754 15dc 9D4F      		sbci r25,-3
 3755 15de FC01      		movw r30,r24
 3756 15e0 A080      		ld r10,Z
 3757 15e2 FC01      		movw r30,r24
 3758 15e4 B180      		ldd r11,Z+1
 3759 15e6 FC01      		movw r30,r24
 3760 15e8 C280      		ldd r12,Z+2
 3761 15ea FC01      		movw r30,r24
 3762 15ec D380      		ldd r13,Z+3
 3763 15ee FC01      		movw r30,r24
 3764 15f0 E480      		ldd r14,Z+4
 3765 15f2 FC01      		movw r30,r24
 3766 15f4 F580      		ldd r15,Z+5
 3767 15f6 FC01      		movw r30,r24
 3768 15f8 0681      		ldd r16,Z+6
 3769 15fa FC01      		movw r30,r24
 3770 15fc 1781      		ldd r17,Z+7
 3771 15fe 8981      		ldd r24,Y+1
 3772 1600 9A81      		ldd r25,Y+2
 3773 1602 9C87      		std Y+12,r25
 3774 1604 8B87      		std Y+11,r24
 3775 1606 892F      		mov r24,r25
 3776 1608 880F      		lsl r24
 3777 160a 880B      		sbc r24,r24
 3778 160c 8D87      		std Y+13,r24
 3779 160e 8E87      		std Y+14,r24
 3780 1610 8F87      		std Y+15,r24
 3781 1612 888B      		std Y+16,r24
 3782 1614 898B      		std Y+17,r24
 3783 1616 8A8B      		std Y+18,r24
 3784 1618 2A2D      		mov r18,r10
 3785 161a 3B2D      		mov r19,r11
 3786 161c 4C2D      		mov r20,r12
 3787 161e 5D2D      		mov r21,r13
 3788 1620 6E2D      		mov r22,r14
 3789 1622 7F2D      		mov r23,r15
 3790 1624 802F      		mov r24,r16
 3791 1626 912F      		mov r25,r17
 3792 1628 AB84      		ldd r10,Y+11
 3793 162a BC84      		ldd r11,Y+12
 3794 162c CD84      		ldd r12,Y+13
 3795 162e DE84      		ldd r13,Y+14
 3796 1630 EF84      		ldd r14,Y+15
 3797 1632 F888      		ldd r15,Y+16
 3798 1634 0989      		ldd r16,Y+17
 3799 1636 1A89      		ldd r17,Y+18
 3800 1638 0E94 0000 		call __adddi3
 3801 163c A22E      		mov r10,r18
 3802 163e B32E      		mov r11,r19
 3803 1640 C42E      		mov r12,r20
 3804 1642 D52E      		mov r13,r21
 3805 1644 E62E      		mov r14,r22
 3806 1646 F72E      		mov r15,r23
 3807 1648 082F      		mov r16,r24
 3808 164a 192F      		mov r17,r25
 3809 164c 2A2D      		mov r18,r10
 3810 164e 3B2D      		mov r19,r11
 3811 1650 4C2D      		mov r20,r12
 3812 1652 5D2D      		mov r21,r13
 3813 1654 6E2D      		mov r22,r14
 3814 1656 7F2D      		mov r23,r15
 3815 1658 802F      		mov r24,r16
 3816 165a 912F      		mov r25,r17
 3817 165c F22F      		mov r31,r18
 3818 165e F170      		andi r31,lo8(1)
 3819 1660 2F2E      		mov r2,r31
 3820 1662 E32F      		mov r30,r19
 3821 1664 E070      		andi r30,lo8(0)
 3822 1666 3E2E      		mov r3,r30
 3823 1668 F42F      		mov r31,r20
 3824 166a F070      		andi r31,lo8(0)
 3825 166c 4F2E      		mov r4,r31
 3826 166e E52F      		mov r30,r21
 3827 1670 E070      		andi r30,lo8(0)
 3828 1672 5E2E      		mov r5,r30
 3829 1674 F62F      		mov r31,r22
 3830 1676 F070      		andi r31,lo8(0)
 3831 1678 6F2E      		mov r6,r31
 3832 167a E72F      		mov r30,r23
 3833 167c E070      		andi r30,lo8(0)
 3834 167e 7E2E      		mov r7,r30
 3835 1680 F82F      		mov r31,r24
 3836 1682 F070      		andi r31,lo8(0)
 3837 1684 8F2E      		mov r8,r31
 3838 1686 E92F      		mov r30,r25
 3839 1688 E070      		andi r30,lo8(0)
 3840 168a 9E2E      		mov r9,r30
 648:lp_solve_5.5/lp_price.c ****      (((lp->total_iter+offset) % 2 == 0) && is_piv_mode(lp, PRICE_LOOPALTERNATE))) {
 3841               		.loc 1 648 0 discriminator 1
 3842 168c 222D      		mov r18,r2
 3843 168e 332D      		mov r19,r3
 3844 1690 442D      		mov r20,r4
 3845 1692 552D      		mov r21,r5
 3846 1694 662D      		mov r22,r6
 3847 1696 772D      		mov r23,r7
 3848 1698 882D      		mov r24,r8
 3849 169a 992D      		mov r25,r9
 3850 169c A0E0      		ldi r26,0
 3851 169e 0E94 0000 		call __cmpdi2_s8
 3852 16a2 01F4      		brne .L185
 3853               		.loc 1 649 0
 3854 16a4 8B81      		ldd r24,Y+3
 3855 16a6 9C81      		ldd r25,Y+4
 3856 16a8 60E0      		ldi r22,0
 3857 16aa 78E0      		ldi r23,lo8(8)
 3858 16ac 0E94 0000 		call is_piv_mode
 3859 16b0 8823      		tst r24
 3860 16b2 01F0      		breq .L185
 3861               	.L184:
 650:lp_solve_5.5/lp_price.c ****     *delta = -1; /* Step backwards - "left" */
 3862               		.loc 1 650 0
 3863 16b4 8985      		ldd r24,Y+9
 3864 16b6 9A85      		ldd r25,Y+10
 3865 16b8 2FEF      		ldi r18,lo8(-1)
 3866 16ba 3FEF      		ldi r19,lo8(-1)
 3867 16bc FC01      		movw r30,r24
 3868 16be 3183      		std Z+1,r19
 3869 16c0 2083      		st Z,r18
 651:lp_solve_5.5/lp_price.c ****     swapINT(start, end);
 3870               		.loc 1 651 0
 3871 16c2 2F81      		ldd r18,Y+7
 3872 16c4 3885      		ldd r19,Y+8
 3873 16c6 8D81      		ldd r24,Y+5
 3874 16c8 9E81      		ldd r25,Y+6
 3875 16ca B901      		movw r22,r18
 3876 16cc 0E94 0000 		call swapINT
 652:lp_solve_5.5/lp_price.c ****     lp->_piv_left_ = TRUE;
 3877               		.loc 1 652 0
 3878 16d0 8B81      		ldd r24,Y+3
 3879 16d2 9C81      		ldd r25,Y+4
 3880 16d4 8859      		subi r24,-104
 3881 16d6 9D4F      		sbci r25,-3
 3882 16d8 21E0      		ldi r18,lo8(1)
 3883 16da FC01      		movw r30,r24
 3884 16dc 2083      		st Z,r18
 3885 16de 00C0      		rjmp .L186
 3886               	.L185:
 653:lp_solve_5.5/lp_price.c ****   }
 654:lp_solve_5.5/lp_price.c ****   else {
 655:lp_solve_5.5/lp_price.c ****     *delta = 1;  /* Step forwards - "right" */
 3887               		.loc 1 655 0
 3888 16e0 8985      		ldd r24,Y+9
 3889 16e2 9A85      		ldd r25,Y+10
 3890 16e4 21E0      		ldi r18,lo8(1)
 3891 16e6 30E0      		ldi r19,0
 3892 16e8 FC01      		movw r30,r24
 3893 16ea 3183      		std Z+1,r19
 3894 16ec 2083      		st Z,r18
 656:lp_solve_5.5/lp_price.c ****     lp->_piv_left_ = FALSE;
 3895               		.loc 1 656 0
 3896 16ee 8B81      		ldd r24,Y+3
 3897 16f0 9C81      		ldd r25,Y+4
 3898 16f2 8859      		subi r24,-104
 3899 16f4 9D4F      		sbci r25,-3
 3900 16f6 FC01      		movw r30,r24
 3901 16f8 1082      		st Z,__zero_reg__
 3902               	.L186:
 657:lp_solve_5.5/lp_price.c ****   }
 658:lp_solve_5.5/lp_price.c **** }
 3903               		.loc 1 658 0
 3904 16fa 0000      		nop
 3905               	/* epilogue start */
 3906 16fc 6296      		adiw r28,18
 3907 16fe 0FB6      		in __tmp_reg__,__SREG__
 3908 1700 F894      		cli
 3909 1702 DEBF      		out __SP_H__,r29
 3910 1704 0FBE      		out __SREG__,__tmp_reg__
 3911 1706 CDBF      		out __SP_L__,r28
 3912 1708 DF91      		pop r29
 3913 170a CF91      		pop r28
 3914 170c 1F91      		pop r17
 3915 170e 0F91      		pop r16
 3916 1710 FF90      		pop r15
 3917 1712 EF90      		pop r14
 3918 1714 DF90      		pop r13
 3919 1716 CF90      		pop r12
 3920 1718 BF90      		pop r11
 3921 171a AF90      		pop r10
 3922 171c 9F90      		pop r9
 3923 171e 8F90      		pop r8
 3924 1720 7F90      		pop r7
 3925 1722 6F90      		pop r6
 3926 1724 5F90      		pop r5
 3927 1726 4F90      		pop r4
 3928 1728 3F90      		pop r3
 3929 172a 2F90      		pop r2
 3930 172c 0895      		ret
 3931               		.cfi_endproc
 3932               	.LFE22:
 3934               	.global	__mulsf3
 3935               	.global	__floatsisf
 3936               	.global	serious_facterror
 3938               	serious_facterror:
 3939               	.LFB23:
 659:lp_solve_5.5/lp_price.c **** 
 660:lp_solve_5.5/lp_price.c **** /* Routine to verify accuracy of the current basis factorization */
 661:lp_solve_5.5/lp_price.c **** STATIC MYBOOL serious_facterror(lprec *lp, REAL *bvector, int maxcols, REAL tolerance)
 662:lp_solve_5.5/lp_price.c **** {
 3940               		.loc 1 662 0
 3941               		.cfi_startproc
 3942 172e CF92      		push r12
 3943               	.LCFI135:
 3944               		.cfi_def_cfa_offset 3
 3945               		.cfi_offset 12, -2
 3946 1730 DF92      		push r13
 3947               	.LCFI136:
 3948               		.cfi_def_cfa_offset 4
 3949               		.cfi_offset 13, -3
 3950 1732 EF92      		push r14
 3951               	.LCFI137:
 3952               		.cfi_def_cfa_offset 5
 3953               		.cfi_offset 14, -4
 3954 1734 FF92      		push r15
 3955               	.LCFI138:
 3956               		.cfi_def_cfa_offset 6
 3957               		.cfi_offset 15, -5
 3958 1736 0F93      		push r16
 3959               	.LCFI139:
 3960               		.cfi_def_cfa_offset 7
 3961               		.cfi_offset 16, -6
 3962 1738 1F93      		push r17
 3963               	.LCFI140:
 3964               		.cfi_def_cfa_offset 8
 3965               		.cfi_offset 17, -7
 3966 173a CF93      		push r28
 3967               	.LCFI141:
 3968               		.cfi_def_cfa_offset 9
 3969               		.cfi_offset 28, -8
 3970 173c DF93      		push r29
 3971               	.LCFI142:
 3972               		.cfi_def_cfa_offset 10
 3973               		.cfi_offset 29, -9
 3974 173e CDB7      		in r28,__SP_L__
 3975 1740 DEB7      		in r29,__SP_H__
 3976               	.LCFI143:
 3977               		.cfi_def_cfa_register 28
 3978 1742 A497      		sbiw r28,36
 3979               	.LCFI144:
 3980               		.cfi_def_cfa_offset 46
 3981 1744 0FB6      		in __tmp_reg__,__SREG__
 3982 1746 F894      		cli
 3983 1748 DEBF      		out __SP_H__,r29
 3984 174a 0FBE      		out __SREG__,__tmp_reg__
 3985 174c CDBF      		out __SP_L__,r28
 3986               	/* prologue: function */
 3987               	/* frame size = 36 */
 3988               	/* stack size = 44 */
 3989               	.L__stack_usage = 44
 3990 174e 9C8F      		std Y+28,r25
 3991 1750 8B8F      		std Y+27,r24
 3992 1752 7E8F      		std Y+30,r23
 3993 1754 6D8F      		std Y+29,r22
 3994 1756 58A3      		std Y+32,r21
 3995 1758 4F8F      		std Y+31,r20
 3996 175a 09A3      		std Y+33,r16
 3997 175c 1AA3      		std Y+34,r17
 3998 175e 2BA3      		std Y+35,r18
 3999 1760 3CA3      		std Y+36,r19
 663:lp_solve_5.5/lp_price.c ****   int    i, j, ib, ie, nz, nc;
 664:lp_solve_5.5/lp_price.c ****   REAL   sum, tsum = 0, err = 0;
 4000               		.loc 1 664 0
 4001 1762 1D86      		std Y+13,__zero_reg__
 4002 1764 1E86      		std Y+14,__zero_reg__
 4003 1766 1F86      		std Y+15,__zero_reg__
 4004 1768 188A      		std Y+16,__zero_reg__
 4005 176a 198A      		std Y+17,__zero_reg__
 4006 176c 1A8A      		std Y+18,__zero_reg__
 4007 176e 1B8A      		std Y+19,__zero_reg__
 4008 1770 1C8A      		std Y+20,__zero_reg__
 665:lp_solve_5.5/lp_price.c ****   MATrec *mat = lp->matA;
 4009               		.loc 1 665 0
 4010 1772 8B8D      		ldd r24,Y+27
 4011 1774 9C8D      		ldd r25,Y+28
 4012 1776 8A54      		subi r24,74
 4013 1778 9D4F      		sbci r25,-3
 4014 177a FC01      		movw r30,r24
 4015 177c 8081      		ld r24,Z
 4016 177e 9181      		ldd r25,Z+1
 4017 1780 9E8B      		std Y+22,r25
 4018 1782 8D8B      		std Y+21,r24
 666:lp_solve_5.5/lp_price.c **** 
 667:lp_solve_5.5/lp_price.c ****   if(bvector == 0)
 4019               		.loc 1 667 0
 4020 1784 8D8D      		ldd r24,Y+29
 4021 1786 9E8D      		ldd r25,Y+30
 4022 1788 892B      		or r24,r25
 4023 178a 01F4      		brne .L188
 668:lp_solve_5.5/lp_price.c ****     bvector = lp->bsolveVal;
 4024               		.loc 1 668 0
 4025 178c 8B8D      		ldd r24,Y+27
 4026 178e 9C8D      		ldd r25,Y+28
 4027 1790 8E55      		subi r24,94
 4028 1792 9D4F      		sbci r25,-3
 4029 1794 FC01      		movw r30,r24
 4030 1796 8081      		ld r24,Z
 4031 1798 9181      		ldd r25,Z+1
 4032 179a 9E8F      		std Y+30,r25
 4033 179c 8D8F      		std Y+29,r24
 4034               	.L188:
 669:lp_solve_5.5/lp_price.c ****   nc =0;
 4035               		.loc 1 669 0
 4036 179e 1886      		std Y+8,__zero_reg__
 4037 17a0 1F82      		std Y+7,__zero_reg__
 670:lp_solve_5.5/lp_price.c ****   nz = 0;
 4038               		.loc 1 670 0
 4039 17a2 1E82      		std Y+6,__zero_reg__
 4040 17a4 1D82      		std Y+5,__zero_reg__
 671:lp_solve_5.5/lp_price.c ****   for(i = 1; (i <= lp->rows) && (nc <= maxcols); i++) {
 4041               		.loc 1 671 0
 4042 17a6 81E0      		ldi r24,lo8(1)
 4043 17a8 90E0      		ldi r25,0
 4044 17aa 9A83      		std Y+2,r25
 4045 17ac 8983      		std Y+1,r24
 4046 17ae 00C0      		rjmp .L189
 4047               	.L199:
 672:lp_solve_5.5/lp_price.c **** 
 673:lp_solve_5.5/lp_price.c ****     /* Do we have a non-slack variable? (we choose to skip slacks,
 674:lp_solve_5.5/lp_price.c ****       since they have "natural" good accuracy properties) */
 675:lp_solve_5.5/lp_price.c ****     j = lp->var_basic[i] - lp->rows;
 4048               		.loc 1 675 0
 4049 17b0 8B8D      		ldd r24,Y+27
 4050 17b2 9C8D      		ldd r25,Y+28
 4051 17b4 8453      		subi r24,52
 4052 17b6 9D4F      		sbci r25,-3
 4053 17b8 FC01      		movw r30,r24
 4054 17ba 2081      		ld r18,Z
 4055 17bc 3181      		ldd r19,Z+1
 4056 17be 8981      		ldd r24,Y+1
 4057 17c0 9A81      		ldd r25,Y+2
 4058 17c2 880F      		lsl r24
 4059 17c4 991F      		rol r25
 4060 17c6 820F      		add r24,r18
 4061 17c8 931F      		adc r25,r19
 4062 17ca FC01      		movw r30,r24
 4063 17cc 2081      		ld r18,Z
 4064 17ce 3181      		ldd r19,Z+1
 4065 17d0 8B8D      		ldd r24,Y+27
 4066 17d2 9C8D      		ldd r25,Y+28
 4067 17d4 8651      		subi r24,22
 4068 17d6 9E4F      		sbci r25,-2
 4069 17d8 FC01      		movw r30,r24
 4070 17da 8081      		ld r24,Z
 4071 17dc 9181      		ldd r25,Z+1
 4072 17de A901      		movw r20,r18
 4073 17e0 481B      		sub r20,r24
 4074 17e2 590B      		sbc r21,r25
 4075 17e4 CA01      		movw r24,r20
 4076 17e6 988F      		std Y+24,r25
 4077 17e8 8F8B      		std Y+23,r24
 676:lp_solve_5.5/lp_price.c ****     if(j <= 0)
 4078               		.loc 1 676 0
 4079 17ea 8F89      		ldd r24,Y+23
 4080 17ec 988D      		ldd r25,Y+24
 4081 17ee 1816      		cp __zero_reg__,r24
 4082 17f0 1906      		cpc __zero_reg__,r25
 4083 17f2 04F0      		brlt .+2
 4084 17f4 00C0      		rjmp .L204
 677:lp_solve_5.5/lp_price.c ****       continue;
 678:lp_solve_5.5/lp_price.c ****     nc++;
 4085               		.loc 1 678 0
 4086 17f6 8F81      		ldd r24,Y+7
 4087 17f8 9885      		ldd r25,Y+8
 4088 17fa 0196      		adiw r24,1
 4089 17fc 9887      		std Y+8,r25
 4090 17fe 8F83      		std Y+7,r24
 679:lp_solve_5.5/lp_price.c **** 
 680:lp_solve_5.5/lp_price.c ****     /* Compute cross product for basic, non-slack column */
 681:lp_solve_5.5/lp_price.c ****     ib = mat->col_end[j-1];
 4091               		.loc 1 681 0
 4092 1800 8D89      		ldd r24,Y+21
 4093 1802 9E89      		ldd r25,Y+22
 4094 1804 FC01      		movw r30,r24
 4095 1806 2289      		ldd r18,Z+18
 4096 1808 3389      		ldd r19,Z+19
 4097 180a 8F89      		ldd r24,Y+23
 4098 180c 988D      		ldd r25,Y+24
 4099 180e 8150      		subi r24,1
 4100 1810 9048      		sbci r25,-128
 4101 1812 880F      		lsl r24
 4102 1814 991F      		rol r25
 4103 1816 820F      		add r24,r18
 4104 1818 931F      		adc r25,r19
 4105 181a FC01      		movw r30,r24
 4106 181c 8081      		ld r24,Z
 4107 181e 9181      		ldd r25,Z+1
 4108 1820 9C83      		std Y+4,r25
 4109 1822 8B83      		std Y+3,r24
 682:lp_solve_5.5/lp_price.c ****     ie = mat->col_end[j];
 4110               		.loc 1 682 0
 4111 1824 8D89      		ldd r24,Y+21
 4112 1826 9E89      		ldd r25,Y+22
 4113 1828 FC01      		movw r30,r24
 4114 182a 2289      		ldd r18,Z+18
 4115 182c 3389      		ldd r19,Z+19
 4116 182e 8F89      		ldd r24,Y+23
 4117 1830 988D      		ldd r25,Y+24
 4118 1832 880F      		lsl r24
 4119 1834 991F      		rol r25
 4120 1836 820F      		add r24,r18
 4121 1838 931F      		adc r25,r19
 4122 183a FC01      		movw r30,r24
 4123 183c 8081      		ld r24,Z
 4124 183e 9181      		ldd r25,Z+1
 4125 1840 9A8F      		std Y+26,r25
 4126 1842 898F      		std Y+25,r24
 683:lp_solve_5.5/lp_price.c ****     nz += ie - ib;
 4127               		.loc 1 683 0
 4128 1844 298D      		ldd r18,Y+25
 4129 1846 3A8D      		ldd r19,Y+26
 4130 1848 8B81      		ldd r24,Y+3
 4131 184a 9C81      		ldd r25,Y+4
 4132 184c A901      		movw r20,r18
 4133 184e 481B      		sub r20,r24
 4134 1850 590B      		sbc r21,r25
 4135 1852 CA01      		movw r24,r20
 4136 1854 2D81      		ldd r18,Y+5
 4137 1856 3E81      		ldd r19,Y+6
 4138 1858 820F      		add r24,r18
 4139 185a 931F      		adc r25,r19
 4140 185c 9E83      		std Y+6,r25
 4141 185e 8D83      		std Y+5,r24
 684:lp_solve_5.5/lp_price.c ****     sum = get_OF_active(lp, j+lp->rows, bvector[0]);
 4142               		.loc 1 684 0
 4143 1860 8D8D      		ldd r24,Y+29
 4144 1862 9E8D      		ldd r25,Y+30
 4145 1864 FC01      		movw r30,r24
 4146 1866 8081      		ld r24,Z
 4147 1868 9181      		ldd r25,Z+1
 4148 186a A281      		ldd r26,Z+2
 4149 186c B381      		ldd r27,Z+3
 4150 186e 2B8D      		ldd r18,Y+27
 4151 1870 3C8D      		ldd r19,Y+28
 4152 1872 2651      		subi r18,22
 4153 1874 3E4F      		sbci r19,-2
 4154 1876 F901      		movw r30,r18
 4155 1878 4081      		ld r20,Z
 4156 187a 5181      		ldd r21,Z+1
 4157 187c 2F89      		ldd r18,Y+23
 4158 187e 388D      		ldd r19,Y+24
 4159 1880 BA01      		movw r22,r20
 4160 1882 620F      		add r22,r18
 4161 1884 731F      		adc r23,r19
 4162 1886 EB8D      		ldd r30,Y+27
 4163 1888 FC8D      		ldd r31,Y+28
 4164 188a 9C01      		movw r18,r24
 4165 188c AD01      		movw r20,r26
 4166 188e CF01      		movw r24,r30
 4167 1890 0E94 0000 		call get_OF_active
 4168 1894 DC01      		movw r26,r24
 4169 1896 CB01      		movw r24,r22
 4170 1898 8987      		std Y+9,r24
 4171 189a 9A87      		std Y+10,r25
 4172 189c AB87      		std Y+11,r26
 4173 189e BC87      		std Y+12,r27
 685:lp_solve_5.5/lp_price.c ****     for(; ib < ie; ib++)
 4174               		.loc 1 685 0
 4175 18a0 00C0      		rjmp .L192
 4176               	.L193:
 686:lp_solve_5.5/lp_price.c ****       sum += COL_MAT_VALUE(ib)*bvector[COL_MAT_ROWNR(ib)];
 4177               		.loc 1 686 0 discriminator 2
 4178 18a2 8D89      		ldd r24,Y+21
 4179 18a4 9E89      		ldd r25,Y+22
 4180 18a6 FC01      		movw r30,r24
 4181 18a8 2089      		ldd r18,Z+16
 4182 18aa 3189      		ldd r19,Z+17
 4183 18ac 8B81      		ldd r24,Y+3
 4184 18ae 9C81      		ldd r25,Y+4
 4185 18b0 880F      		lsl r24
 4186 18b2 991F      		rol r25
 4187 18b4 880F      		lsl r24
 4188 18b6 991F      		rol r25
 4189 18b8 820F      		add r24,r18
 4190 18ba 931F      		adc r25,r19
 4191 18bc FC01      		movw r30,r24
 4192 18be 8081      		ld r24,Z
 4193 18c0 9181      		ldd r25,Z+1
 4194 18c2 A281      		ldd r26,Z+2
 4195 18c4 B381      		ldd r27,Z+3
 4196 18c6 2D89      		ldd r18,Y+21
 4197 18c8 3E89      		ldd r19,Y+22
 4198 18ca F901      		movw r30,r18
 4199 18cc 4685      		ldd r20,Z+14
 4200 18ce 5785      		ldd r21,Z+15
 4201 18d0 2B81      		ldd r18,Y+3
 4202 18d2 3C81      		ldd r19,Y+4
 4203 18d4 220F      		lsl r18
 4204 18d6 331F      		rol r19
 4205 18d8 240F      		add r18,r20
 4206 18da 351F      		adc r19,r21
 4207 18dc F901      		movw r30,r18
 4208 18de 2081      		ld r18,Z
 4209 18e0 3181      		ldd r19,Z+1
 4210 18e2 220F      		lsl r18
 4211 18e4 331F      		rol r19
 4212 18e6 220F      		lsl r18
 4213 18e8 331F      		rol r19
 4214 18ea 4D8D      		ldd r20,Y+29
 4215 18ec 5E8D      		ldd r21,Y+30
 4216 18ee 240F      		add r18,r20
 4217 18f0 351F      		adc r19,r21
 4218 18f2 F901      		movw r30,r18
 4219 18f4 2081      		ld r18,Z
 4220 18f6 3181      		ldd r19,Z+1
 4221 18f8 4281      		ldd r20,Z+2
 4222 18fa 5381      		ldd r21,Z+3
 4223 18fc BC01      		movw r22,r24
 4224 18fe CD01      		movw r24,r26
 4225 1900 0E94 0000 		call __mulsf3
 4226 1904 DC01      		movw r26,r24
 4227 1906 CB01      		movw r24,r22
 4228 1908 9C01      		movw r18,r24
 4229 190a AD01      		movw r20,r26
 4230 190c 6985      		ldd r22,Y+9
 4231 190e 7A85      		ldd r23,Y+10
 4232 1910 8B85      		ldd r24,Y+11
 4233 1912 9C85      		ldd r25,Y+12
 4234 1914 0E94 0000 		call __addsf3
 4235 1918 DC01      		movw r26,r24
 4236 191a CB01      		movw r24,r22
 4237 191c 8987      		std Y+9,r24
 4238 191e 9A87      		std Y+10,r25
 4239 1920 AB87      		std Y+11,r26
 4240 1922 BC87      		std Y+12,r27
 685:lp_solve_5.5/lp_price.c ****     for(; ib < ie; ib++)
 4241               		.loc 1 685 0 discriminator 2
 4242 1924 8B81      		ldd r24,Y+3
 4243 1926 9C81      		ldd r25,Y+4
 4244 1928 0196      		adiw r24,1
 4245 192a 9C83      		std Y+4,r25
 4246 192c 8B83      		std Y+3,r24
 4247               	.L192:
 685:lp_solve_5.5/lp_price.c ****     for(; ib < ie; ib++)
 4248               		.loc 1 685 0 is_stmt 0 discriminator 1
 4249 192e 2B81      		ldd r18,Y+3
 4250 1930 3C81      		ldd r19,Y+4
 4251 1932 898D      		ldd r24,Y+25
 4252 1934 9A8D      		ldd r25,Y+26
 4253 1936 2817      		cp r18,r24
 4254 1938 3907      		cpc r19,r25
 4255 193a 04F4      		brge .+2
 4256 193c 00C0      		rjmp .L193
 687:lp_solve_5.5/lp_price.c **** 
 688:lp_solve_5.5/lp_price.c ****     /* Catch high precision early, so we don't to uneccessary work */
 689:lp_solve_5.5/lp_price.c ****     tsum += sum;
 4257               		.loc 1 689 0 is_stmt 1
 4258 193e 2985      		ldd r18,Y+9
 4259 1940 3A85      		ldd r19,Y+10
 4260 1942 4B85      		ldd r20,Y+11
 4261 1944 5C85      		ldd r21,Y+12
 4262 1946 6D85      		ldd r22,Y+13
 4263 1948 7E85      		ldd r23,Y+14
 4264 194a 8F85      		ldd r24,Y+15
 4265 194c 9889      		ldd r25,Y+16
 4266 194e 0E94 0000 		call __addsf3
 4267 1952 DC01      		movw r26,r24
 4268 1954 CB01      		movw r24,r22
 4269 1956 8D87      		std Y+13,r24
 4270 1958 9E87      		std Y+14,r25
 4271 195a AF87      		std Y+15,r26
 4272 195c B88B      		std Y+16,r27
 690:lp_solve_5.5/lp_price.c ****     SETMAX(err, fabs(sum));
 4273               		.loc 1 690 0
 4274 195e 8985      		ldd r24,Y+9
 4275 1960 9A85      		ldd r25,Y+10
 4276 1962 AB85      		ldd r26,Y+11
 4277 1964 BC85      		ldd r27,Y+12
 4278 1966 BF77      		andi r27,0x7f
 4279 1968 2989      		ldd r18,Y+17
 4280 196a 3A89      		ldd r19,Y+18
 4281 196c 4B89      		ldd r20,Y+19
 4282 196e 5C89      		ldd r21,Y+20
 4283 1970 BC01      		movw r22,r24
 4284 1972 CD01      		movw r24,r26
 4285 1974 0E94 0000 		call __gtsf2
 4286 1978 1816      		cp __zero_reg__,r24
 4287 197a 04F4      		brge .L194
 4288               		.loc 1 690 0 is_stmt 0 discriminator 1
 4289 197c 8985      		ldd r24,Y+9
 4290 197e 9A85      		ldd r25,Y+10
 4291 1980 AB85      		ldd r26,Y+11
 4292 1982 BC85      		ldd r27,Y+12
 4293 1984 BF77      		andi r27,0x7f
 4294 1986 898B      		std Y+17,r24
 4295 1988 9A8B      		std Y+18,r25
 4296 198a AB8B      		std Y+19,r26
 4297 198c BC8B      		std Y+20,r27
 4298               	.L194:
 691:lp_solve_5.5/lp_price.c ****     if((tsum / nc > tolerance / 100) && (err < tolerance / 100))
 4299               		.loc 1 691 0 is_stmt 1
 4300 198e 8F81      		ldd r24,Y+7
 4301 1990 9885      		ldd r25,Y+8
 4302 1992 092E      		mov __tmp_reg__,r25
 4303 1994 000C      		lsl r0
 4304 1996 AA0B      		sbc r26,r26
 4305 1998 BB0B      		sbc r27,r27
 4306 199a BC01      		movw r22,r24
 4307 199c CD01      		movw r24,r26
 4308 199e 0E94 0000 		call __floatsisf
 4309 19a2 DC01      		movw r26,r24
 4310 19a4 CB01      		movw r24,r22
 4311 19a6 9C01      		movw r18,r24
 4312 19a8 AD01      		movw r20,r26
 4313 19aa 6D85      		ldd r22,Y+13
 4314 19ac 7E85      		ldd r23,Y+14
 4315 19ae 8F85      		ldd r24,Y+15
 4316 19b0 9889      		ldd r25,Y+16
 4317 19b2 0E94 0000 		call __divsf3
 4318 19b6 DC01      		movw r26,r24
 4319 19b8 CB01      		movw r24,r22
 4320 19ba 6C01      		movw r12,r24
 4321 19bc 7D01      		movw r14,r26
 4322 19be 20E0      		ldi r18,0
 4323 19c0 30E0      		ldi r19,0
 4324 19c2 48EC      		ldi r20,lo8(-56)
 4325 19c4 52E4      		ldi r21,lo8(66)
 4326 19c6 69A1      		ldd r22,Y+33
 4327 19c8 7AA1      		ldd r23,Y+34
 4328 19ca 8BA1      		ldd r24,Y+35
 4329 19cc 9CA1      		ldd r25,Y+36
 4330 19ce 0E94 0000 		call __divsf3
 4331 19d2 DC01      		movw r26,r24
 4332 19d4 CB01      		movw r24,r22
 4333 19d6 9C01      		movw r18,r24
 4334 19d8 AD01      		movw r20,r26
 4335 19da C701      		movw r24,r14
 4336 19dc B601      		movw r22,r12
 4337 19de 0E94 0000 		call __gtsf2
 4338 19e2 1816      		cp __zero_reg__,r24
 4339 19e4 04F4      		brge .L191
 4340               		.loc 1 691 0 is_stmt 0 discriminator 1
 4341 19e6 20E0      		ldi r18,0
 4342 19e8 30E0      		ldi r19,0
 4343 19ea 48EC      		ldi r20,lo8(-56)
 4344 19ec 52E4      		ldi r21,lo8(66)
 4345 19ee 69A1      		ldd r22,Y+33
 4346 19f0 7AA1      		ldd r23,Y+34
 4347 19f2 8BA1      		ldd r24,Y+35
 4348 19f4 9CA1      		ldd r25,Y+36
 4349 19f6 0E94 0000 		call __divsf3
 4350 19fa DC01      		movw r26,r24
 4351 19fc CB01      		movw r24,r22
 4352 19fe 2989      		ldd r18,Y+17
 4353 1a00 3A89      		ldd r19,Y+18
 4354 1a02 4B89      		ldd r20,Y+19
 4355 1a04 5C89      		ldd r21,Y+20
 4356 1a06 BC01      		movw r22,r24
 4357 1a08 CD01      		movw r24,r26
 4358 1a0a 0E94 0000 		call __gtsf2
 4359 1a0e 1816      		cp __zero_reg__,r24
 4360 1a10 04F0      		brlt .L205
 4361               		.loc 1 691 0
 4362 1a12 00C0      		rjmp .L191
 4363               	.L204:
 677:lp_solve_5.5/lp_price.c ****     nc++;
 4364               		.loc 1 677 0 is_stmt 1
 4365 1a14 0000      		nop
 4366               	.L191:
 671:lp_solve_5.5/lp_price.c **** 
 4367               		.loc 1 671 0 discriminator 2
 4368 1a16 8981      		ldd r24,Y+1
 4369 1a18 9A81      		ldd r25,Y+2
 4370 1a1a 0196      		adiw r24,1
 4371 1a1c 9A83      		std Y+2,r25
 4372 1a1e 8983      		std Y+1,r24
 4373               	.L189:
 671:lp_solve_5.5/lp_price.c **** 
 4374               		.loc 1 671 0 is_stmt 0 discriminator 1
 4375 1a20 8B8D      		ldd r24,Y+27
 4376 1a22 9C8D      		ldd r25,Y+28
 4377 1a24 8651      		subi r24,22
 4378 1a26 9E4F      		sbci r25,-2
 4379 1a28 FC01      		movw r30,r24
 4380 1a2a 2081      		ld r18,Z
 4381 1a2c 3181      		ldd r19,Z+1
 4382 1a2e 8981      		ldd r24,Y+1
 4383 1a30 9A81      		ldd r25,Y+2
 4384 1a32 2817      		cp r18,r24
 4385 1a34 3907      		cpc r19,r25
 4386 1a36 04F0      		brlt .L198
 671:lp_solve_5.5/lp_price.c **** 
 4387               		.loc 1 671 0 discriminator 3
 4388 1a38 2F81      		ldd r18,Y+7
 4389 1a3a 3885      		ldd r19,Y+8
 4390 1a3c 8F8D      		ldd r24,Y+31
 4391 1a3e 98A1      		ldd r25,Y+32
 4392 1a40 8217      		cp r24,r18
 4393 1a42 9307      		cpc r25,r19
 4394 1a44 04F0      		brlt .+2
 4395 1a46 00C0      		rjmp .L199
 4396 1a48 00C0      		rjmp .L198
 4397               	.L205:
 692:lp_solve_5.5/lp_price.c ****       break;
 4398               		.loc 1 692 0 is_stmt 1
 4399 1a4a 0000      		nop
 4400               	.L198:
 693:lp_solve_5.5/lp_price.c ****   }
 694:lp_solve_5.5/lp_price.c ****   err /= mat->infnorm;
 4401               		.loc 1 694 0
 4402 1a4c 8D89      		ldd r24,Y+21
 4403 1a4e 9E89      		ldd r25,Y+22
 4404 1a50 FC01      		movw r30,r24
 4405 1a52 84A1      		ldd r24,Z+36
 4406 1a54 95A1      		ldd r25,Z+37
 4407 1a56 A6A1      		ldd r26,Z+38
 4408 1a58 B7A1      		ldd r27,Z+39
 4409 1a5a 9C01      		movw r18,r24
 4410 1a5c AD01      		movw r20,r26
 4411 1a5e 6989      		ldd r22,Y+17
 4412 1a60 7A89      		ldd r23,Y+18
 4413 1a62 8B89      		ldd r24,Y+19
 4414 1a64 9C89      		ldd r25,Y+20
 4415 1a66 0E94 0000 		call __divsf3
 4416 1a6a DC01      		movw r26,r24
 4417 1a6c CB01      		movw r24,r22
 4418 1a6e 898B      		std Y+17,r24
 4419 1a70 9A8B      		std Y+18,r25
 4420 1a72 AB8B      		std Y+19,r26
 4421 1a74 BC8B      		std Y+20,r27
 695:lp_solve_5.5/lp_price.c ****   return( (MYBOOL) (err >= tolerance) );
 4422               		.loc 1 695 0
 4423 1a76 11E0      		ldi r17,lo8(1)
 4424 1a78 29A1      		ldd r18,Y+33
 4425 1a7a 3AA1      		ldd r19,Y+34
 4426 1a7c 4BA1      		ldd r20,Y+35
 4427 1a7e 5CA1      		ldd r21,Y+36
 4428 1a80 6989      		ldd r22,Y+17
 4429 1a82 7A89      		ldd r23,Y+18
 4430 1a84 8B89      		ldd r24,Y+19
 4431 1a86 9C89      		ldd r25,Y+20
 4432 1a88 0E94 0000 		call __gesf2
 4433 1a8c 8823      		tst r24
 4434 1a8e 04F4      		brge .L200
 4435 1a90 10E0      		ldi r17,0
 4436               	.L200:
 4437 1a92 812F      		mov r24,r17
 4438               	/* epilogue start */
 696:lp_solve_5.5/lp_price.c **** }
 4439               		.loc 1 696 0
 4440 1a94 A496      		adiw r28,36
 4441 1a96 0FB6      		in __tmp_reg__,__SREG__
 4442 1a98 F894      		cli
 4443 1a9a DEBF      		out __SP_H__,r29
 4444 1a9c 0FBE      		out __SREG__,__tmp_reg__
 4445 1a9e CDBF      		out __SP_L__,r28
 4446 1aa0 DF91      		pop r29
 4447 1aa2 CF91      		pop r28
 4448 1aa4 1F91      		pop r17
 4449 1aa6 0F91      		pop r16
 4450 1aa8 FF90      		pop r15
 4451 1aaa EF90      		pop r14
 4452 1aac DF90      		pop r13
 4453 1aae CF90      		pop r12
 4454 1ab0 0895      		ret
 4455               		.cfi_endproc
 4456               	.LFE23:
 4458               		.section	.rodata
 4459               	.LC0:
 4460 0000 7570 6461 		.string	"update_reducedcosts: Cannot update primal reduced costs!\n"
 4460      7465 5F72 
 4460      6564 7563 
 4460      6564 636F 
 4460      7374 733A 
 4461               		.text
 4462               	.global	update_reducedcosts
 4464               	update_reducedcosts:
 4465               	.LFB24:
 697:lp_solve_5.5/lp_price.c **** 
 698:lp_solve_5.5/lp_price.c **** /* Computation of reduced costs */
 699:lp_solve_5.5/lp_price.c **** STATIC void update_reducedcosts(lprec *lp, MYBOOL isdual, int leave_nr, int enter_nr, REAL *prow, R
 700:lp_solve_5.5/lp_price.c **** {
 4466               		.loc 1 700 0
 4467               		.cfi_startproc
 4468 1ab2 CF92      		push r12
 4469               	.LCFI145:
 4470               		.cfi_def_cfa_offset 3
 4471               		.cfi_offset 12, -2
 4472 1ab4 DF92      		push r13
 4473               	.LCFI146:
 4474               		.cfi_def_cfa_offset 4
 4475               		.cfi_offset 13, -3
 4476 1ab6 EF92      		push r14
 4477               	.LCFI147:
 4478               		.cfi_def_cfa_offset 5
 4479               		.cfi_offset 14, -4
 4480 1ab8 FF92      		push r15
 4481               	.LCFI148:
 4482               		.cfi_def_cfa_offset 6
 4483               		.cfi_offset 15, -5
 4484 1aba 0F93      		push r16
 4485               	.LCFI149:
 4486               		.cfi_def_cfa_offset 7
 4487               		.cfi_offset 16, -6
 4488 1abc 1F93      		push r17
 4489               	.LCFI150:
 4490               		.cfi_def_cfa_offset 8
 4491               		.cfi_offset 17, -7
 4492 1abe CF93      		push r28
 4493               	.LCFI151:
 4494               		.cfi_def_cfa_offset 9
 4495               		.cfi_offset 28, -8
 4496 1ac0 DF93      		push r29
 4497               	.LCFI152:
 4498               		.cfi_def_cfa_offset 10
 4499               		.cfi_offset 29, -9
 4500 1ac2 CDB7      		in r28,__SP_L__
 4501 1ac4 DEB7      		in r29,__SP_H__
 4502               	.LCFI153:
 4503               		.cfi_def_cfa_register 28
 4504 1ac6 6197      		sbiw r28,17
 4505               	.LCFI154:
 4506               		.cfi_def_cfa_offset 27
 4507 1ac8 0FB6      		in __tmp_reg__,__SREG__
 4508 1aca F894      		cli
 4509 1acc DEBF      		out __SP_H__,r29
 4510 1ace 0FBE      		out __SREG__,__tmp_reg__
 4511 1ad0 CDBF      		out __SP_L__,r28
 4512               	/* prologue: function */
 4513               	/* frame size = 17 */
 4514               	/* stack size = 25 */
 4515               	.L__stack_usage = 25
 4516 1ad2 9887      		std Y+8,r25
 4517 1ad4 8F83      		std Y+7,r24
 4518 1ad6 6987      		std Y+9,r22
 4519 1ad8 5B87      		std Y+11,r21
 4520 1ada 4A87      		std Y+10,r20
 4521 1adc 3D87      		std Y+13,r19
 4522 1ade 2C87      		std Y+12,r18
 4523 1ae0 1F87      		std Y+15,r17
 4524 1ae2 0E87      		std Y+14,r16
 4525 1ae4 F98A      		std Y+17,r15
 4526 1ae6 E88A      		std Y+16,r14
 701:lp_solve_5.5/lp_price.c ****   /* "Fast" update of the dual reduced cost vector; note that it must be called
 702:lp_solve_5.5/lp_price.c ****      after the pivot operation and only applies to a major "true" iteration */
 703:lp_solve_5.5/lp_price.c ****   int  i;
 704:lp_solve_5.5/lp_price.c ****   REAL hold;
 705:lp_solve_5.5/lp_price.c **** 
 706:lp_solve_5.5/lp_price.c ****   if(isdual) {
 4527               		.loc 1 706 0
 4528 1ae8 8985      		ldd r24,Y+9
 4529 1aea 8823      		tst r24
 4530 1aec 01F4      		brne .+2
 4531 1aee 00C0      		rjmp .L207
 707:lp_solve_5.5/lp_price.c ****     hold = -drow[enter_nr]/prow[enter_nr];
 4532               		.loc 1 707 0
 4533 1af0 8C85      		ldd r24,Y+12
 4534 1af2 9D85      		ldd r25,Y+13
 4535 1af4 880F      		lsl r24
 4536 1af6 991F      		rol r25
 4537 1af8 880F      		lsl r24
 4538 1afa 991F      		rol r25
 4539 1afc 2889      		ldd r18,Y+16
 4540 1afe 3989      		ldd r19,Y+17
 4541 1b00 820F      		add r24,r18
 4542 1b02 931F      		adc r25,r19
 4543 1b04 FC01      		movw r30,r24
 4544 1b06 8081      		ld r24,Z
 4545 1b08 9181      		ldd r25,Z+1
 4546 1b0a A281      		ldd r26,Z+2
 4547 1b0c B381      		ldd r27,Z+3
 4548 1b0e B058      		subi r27,0x80
 4549 1b10 2C85      		ldd r18,Y+12
 4550 1b12 3D85      		ldd r19,Y+13
 4551 1b14 220F      		lsl r18
 4552 1b16 331F      		rol r19
 4553 1b18 220F      		lsl r18
 4554 1b1a 331F      		rol r19
 4555 1b1c 4E85      		ldd r20,Y+14
 4556 1b1e 5F85      		ldd r21,Y+15
 4557 1b20 240F      		add r18,r20
 4558 1b22 351F      		adc r19,r21
 4559 1b24 F901      		movw r30,r18
 4560 1b26 2081      		ld r18,Z
 4561 1b28 3181      		ldd r19,Z+1
 4562 1b2a 4281      		ldd r20,Z+2
 4563 1b2c 5381      		ldd r21,Z+3
 4564 1b2e BC01      		movw r22,r24
 4565 1b30 CD01      		movw r24,r26
 4566 1b32 0E94 0000 		call __divsf3
 4567 1b36 DC01      		movw r26,r24
 4568 1b38 CB01      		movw r24,r22
 4569 1b3a 8B83      		std Y+3,r24
 4570 1b3c 9C83      		std Y+4,r25
 4571 1b3e AD83      		std Y+5,r26
 4572 1b40 BE83      		std Y+6,r27
 708:lp_solve_5.5/lp_price.c ****     for(i=1; i <= lp->sum; i++)
 4573               		.loc 1 708 0
 4574 1b42 81E0      		ldi r24,lo8(1)
 4575 1b44 90E0      		ldi r25,0
 4576 1b46 9A83      		std Y+2,r25
 4577 1b48 8983      		std Y+1,r24
 4578 1b4a 00C0      		rjmp .L208
 4579               	.L212:
 709:lp_solve_5.5/lp_price.c ****       if(!lp->is_basic[i]) {
 4580               		.loc 1 709 0
 4581 1b4c 8F81      		ldd r24,Y+7
 4582 1b4e 9885      		ldd r25,Y+8
 4583 1b50 8053      		subi r24,48
 4584 1b52 9D4F      		sbci r25,-3
 4585 1b54 FC01      		movw r30,r24
 4586 1b56 2081      		ld r18,Z
 4587 1b58 3181      		ldd r19,Z+1
 4588 1b5a 8981      		ldd r24,Y+1
 4589 1b5c 9A81      		ldd r25,Y+2
 4590 1b5e 820F      		add r24,r18
 4591 1b60 931F      		adc r25,r19
 4592 1b62 FC01      		movw r30,r24
 4593 1b64 8081      		ld r24,Z
 4594 1b66 8823      		tst r24
 4595 1b68 01F0      		breq .+2
 4596 1b6a 00C0      		rjmp .L209
 710:lp_solve_5.5/lp_price.c ****         if(i == leave_nr)
 4597               		.loc 1 710 0
 4598 1b6c 2981      		ldd r18,Y+1
 4599 1b6e 3A81      		ldd r19,Y+2
 4600 1b70 8A85      		ldd r24,Y+10
 4601 1b72 9B85      		ldd r25,Y+11
 4602 1b74 2817      		cp r18,r24
 4603 1b76 3907      		cpc r19,r25
 4604 1b78 01F4      		brne .L210
 711:lp_solve_5.5/lp_price.c ****           drow[i] = hold;
 4605               		.loc 1 711 0
 4606 1b7a 8981      		ldd r24,Y+1
 4607 1b7c 9A81      		ldd r25,Y+2
 4608 1b7e 880F      		lsl r24
 4609 1b80 991F      		rol r25
 4610 1b82 880F      		lsl r24
 4611 1b84 991F      		rol r25
 4612 1b86 2889      		ldd r18,Y+16
 4613 1b88 3989      		ldd r19,Y+17
 4614 1b8a 280F      		add r18,r24
 4615 1b8c 391F      		adc r19,r25
 4616 1b8e 8B81      		ldd r24,Y+3
 4617 1b90 9C81      		ldd r25,Y+4
 4618 1b92 AD81      		ldd r26,Y+5
 4619 1b94 BE81      		ldd r27,Y+6
 4620 1b96 F901      		movw r30,r18
 4621 1b98 8083      		st Z,r24
 4622 1b9a 9183      		std Z+1,r25
 4623 1b9c A283      		std Z+2,r26
 4624 1b9e B383      		std Z+3,r27
 4625 1ba0 00C0      		rjmp .L209
 4626               	.L210:
 712:lp_solve_5.5/lp_price.c ****         else {
 713:lp_solve_5.5/lp_price.c ****           drow[i] += hold*prow[i];
 4627               		.loc 1 713 0
 4628 1ba2 8981      		ldd r24,Y+1
 4629 1ba4 9A81      		ldd r25,Y+2
 4630 1ba6 880F      		lsl r24
 4631 1ba8 991F      		rol r25
 4632 1baa 880F      		lsl r24
 4633 1bac 991F      		rol r25
 4634 1bae 2889      		ldd r18,Y+16
 4635 1bb0 3989      		ldd r19,Y+17
 4636 1bb2 8901      		movw r16,r18
 4637 1bb4 080F      		add r16,r24
 4638 1bb6 191F      		adc r17,r25
 4639 1bb8 8981      		ldd r24,Y+1
 4640 1bba 9A81      		ldd r25,Y+2
 4641 1bbc 880F      		lsl r24
 4642 1bbe 991F      		rol r25
 4643 1bc0 880F      		lsl r24
 4644 1bc2 991F      		rol r25
 4645 1bc4 2889      		ldd r18,Y+16
 4646 1bc6 3989      		ldd r19,Y+17
 4647 1bc8 820F      		add r24,r18
 4648 1bca 931F      		adc r25,r19
 4649 1bcc FC01      		movw r30,r24
 4650 1bce C080      		ld r12,Z
 4651 1bd0 D180      		ldd r13,Z+1
 4652 1bd2 E280      		ldd r14,Z+2
 4653 1bd4 F380      		ldd r15,Z+3
 4654 1bd6 8981      		ldd r24,Y+1
 4655 1bd8 9A81      		ldd r25,Y+2
 4656 1bda 880F      		lsl r24
 4657 1bdc 991F      		rol r25
 4658 1bde 880F      		lsl r24
 4659 1be0 991F      		rol r25
 4660 1be2 2E85      		ldd r18,Y+14
 4661 1be4 3F85      		ldd r19,Y+15
 4662 1be6 820F      		add r24,r18
 4663 1be8 931F      		adc r25,r19
 4664 1bea FC01      		movw r30,r24
 4665 1bec 8081      		ld r24,Z
 4666 1bee 9181      		ldd r25,Z+1
 4667 1bf0 A281      		ldd r26,Z+2
 4668 1bf2 B381      		ldd r27,Z+3
 4669 1bf4 2B81      		ldd r18,Y+3
 4670 1bf6 3C81      		ldd r19,Y+4
 4671 1bf8 4D81      		ldd r20,Y+5
 4672 1bfa 5E81      		ldd r21,Y+6
 4673 1bfc BC01      		movw r22,r24
 4674 1bfe CD01      		movw r24,r26
 4675 1c00 0E94 0000 		call __mulsf3
 4676 1c04 DC01      		movw r26,r24
 4677 1c06 CB01      		movw r24,r22
 4678 1c08 9C01      		movw r18,r24
 4679 1c0a AD01      		movw r20,r26
 4680 1c0c C701      		movw r24,r14
 4681 1c0e B601      		movw r22,r12
 4682 1c10 0E94 0000 		call __addsf3
 4683 1c14 DC01      		movw r26,r24
 4684 1c16 CB01      		movw r24,r22
 4685 1c18 F801      		movw r30,r16
 4686 1c1a 8083      		st Z,r24
 4687 1c1c 9183      		std Z+1,r25
 4688 1c1e A283      		std Z+2,r26
 4689 1c20 B383      		std Z+3,r27
 714:lp_solve_5.5/lp_price.c ****           my_roundzero(drow[i], lp->epsmachine);
 4690               		.loc 1 714 0
 4691 1c22 8981      		ldd r24,Y+1
 4692 1c24 9A81      		ldd r25,Y+2
 4693 1c26 880F      		lsl r24
 4694 1c28 991F      		rol r25
 4695 1c2a 880F      		lsl r24
 4696 1c2c 991F      		rol r25
 4697 1c2e 2889      		ldd r18,Y+16
 4698 1c30 3989      		ldd r19,Y+17
 4699 1c32 820F      		add r24,r18
 4700 1c34 931F      		adc r25,r19
 4701 1c36 FC01      		movw r30,r24
 4702 1c38 8081      		ld r24,Z
 4703 1c3a 9181      		ldd r25,Z+1
 4704 1c3c A281      		ldd r26,Z+2
 4705 1c3e B381      		ldd r27,Z+3
 4706 1c40 BF77      		andi r27,0x7f
 4707 1c42 2F81      		ldd r18,Y+7
 4708 1c44 3885      		ldd r19,Y+8
 4709 1c46 2E5E      		subi r18,-18
 4710 1c48 3C4F      		sbci r19,-4
 4711 1c4a F901      		movw r30,r18
 4712 1c4c 2081      		ld r18,Z
 4713 1c4e 3181      		ldd r19,Z+1
 4714 1c50 4281      		ldd r20,Z+2
 4715 1c52 5381      		ldd r21,Z+3
 4716 1c54 BC01      		movw r22,r24
 4717 1c56 CD01      		movw r24,r26
 4718 1c58 0E94 0000 		call __ltsf2
 4719 1c5c 8823      		tst r24
 4720 1c5e 04F4      		brge .L209
 4721               		.loc 1 714 0 is_stmt 0 discriminator 1
 4722 1c60 8981      		ldd r24,Y+1
 4723 1c62 9A81      		ldd r25,Y+2
 4724 1c64 880F      		lsl r24
 4725 1c66 991F      		rol r25
 4726 1c68 880F      		lsl r24
 4727 1c6a 991F      		rol r25
 4728 1c6c 2889      		ldd r18,Y+16
 4729 1c6e 3989      		ldd r19,Y+17
 4730 1c70 820F      		add r24,r18
 4731 1c72 931F      		adc r25,r19
 4732 1c74 FC01      		movw r30,r24
 4733 1c76 1082      		st Z,__zero_reg__
 4734 1c78 1182      		std Z+1,__zero_reg__
 4735 1c7a 1282      		std Z+2,__zero_reg__
 4736 1c7c 1382      		std Z+3,__zero_reg__
 4737               	.L209:
 708:lp_solve_5.5/lp_price.c ****       if(!lp->is_basic[i]) {
 4738               		.loc 1 708 0 is_stmt 1 discriminator 2
 4739 1c7e 8981      		ldd r24,Y+1
 4740 1c80 9A81      		ldd r25,Y+2
 4741 1c82 0196      		adiw r24,1
 4742 1c84 9A83      		std Y+2,r25
 4743 1c86 8983      		std Y+1,r24
 4744               	.L208:
 708:lp_solve_5.5/lp_price.c ****       if(!lp->is_basic[i]) {
 4745               		.loc 1 708 0 is_stmt 0 discriminator 1
 4746 1c88 8F81      		ldd r24,Y+7
 4747 1c8a 9885      		ldd r25,Y+8
 4748 1c8c 8851      		subi r24,24
 4749 1c8e 9E4F      		sbci r25,-2
 4750 1c90 FC01      		movw r30,r24
 4751 1c92 2081      		ld r18,Z
 4752 1c94 3181      		ldd r19,Z+1
 4753 1c96 8981      		ldd r24,Y+1
 4754 1c98 9A81      		ldd r25,Y+2
 4755 1c9a 2817      		cp r18,r24
 4756 1c9c 3907      		cpc r19,r25
 4757 1c9e 04F0      		brlt .+2
 4758 1ca0 00C0      		rjmp .L212
 715:lp_solve_5.5/lp_price.c ****         }
 716:lp_solve_5.5/lp_price.c ****       }
 717:lp_solve_5.5/lp_price.c ****   }
 718:lp_solve_5.5/lp_price.c ****   else
 719:lp_solve_5.5/lp_price.c ****     report(lp, SEVERE, "update_reducedcosts: Cannot update primal reduced costs!\n");
 720:lp_solve_5.5/lp_price.c **** }
 4759               		.loc 1 720 0 is_stmt 1
 4760 1ca2 00C0      		rjmp .L215
 4761               	.L207:
 719:lp_solve_5.5/lp_price.c **** }
 4762               		.loc 1 719 0
 4763 1ca4 80E0      		ldi r24,lo8(.LC0)
 4764 1ca6 90E0      		ldi r25,hi8(.LC0)
 4765 1ca8 892F      		mov r24,r25
 4766 1caa 8F93      		push r24
 4767 1cac 80E0      		ldi r24,lo8(.LC0)
 4768 1cae 90E0      		ldi r25,hi8(.LC0)
 4769 1cb0 8F93      		push r24
 4770 1cb2 1F92      		push __zero_reg__
 4771 1cb4 82E0      		ldi r24,lo8(2)
 4772 1cb6 8F93      		push r24
 4773 1cb8 8885      		ldd r24,Y+8
 4774 1cba 8F93      		push r24
 4775 1cbc 8F81      		ldd r24,Y+7
 4776 1cbe 8F93      		push r24
 4777 1cc0 0E94 0000 		call report
 4778 1cc4 0F90      		pop __tmp_reg__
 4779 1cc6 0F90      		pop __tmp_reg__
 4780 1cc8 0F90      		pop __tmp_reg__
 4781 1cca 0F90      		pop __tmp_reg__
 4782 1ccc 0F90      		pop __tmp_reg__
 4783 1cce 0F90      		pop __tmp_reg__
 4784               	.L215:
 4785               		.loc 1 720 0
 4786 1cd0 0000      		nop
 4787               	/* epilogue start */
 4788 1cd2 6196      		adiw r28,17
 4789 1cd4 0FB6      		in __tmp_reg__,__SREG__
 4790 1cd6 F894      		cli
 4791 1cd8 DEBF      		out __SP_H__,r29
 4792 1cda 0FBE      		out __SREG__,__tmp_reg__
 4793 1cdc CDBF      		out __SP_L__,r28
 4794 1cde DF91      		pop r29
 4795 1ce0 CF91      		pop r28
 4796 1ce2 1F91      		pop r17
 4797 1ce4 0F91      		pop r16
 4798 1ce6 FF90      		pop r15
 4799 1ce8 EF90      		pop r14
 4800 1cea DF90      		pop r13
 4801 1cec CF90      		pop r12
 4802 1cee 0895      		ret
 4803               		.cfi_endproc
 4804               	.LFE24:
 4806               	.global	compute_reducedcosts
 4808               	compute_reducedcosts:
 4809               	.LFB25:
 721:lp_solve_5.5/lp_price.c **** 
 722:lp_solve_5.5/lp_price.c **** 
 723:lp_solve_5.5/lp_price.c **** STATIC void compute_reducedcosts(lprec *lp, MYBOOL isdual, int row_nr, int *coltarget, MYBOOL dosol
 724:lp_solve_5.5/lp_price.c ****                                             REAL *prow, int *nzprow,
 725:lp_solve_5.5/lp_price.c ****                                             REAL *drow, int *nzdrow,
 726:lp_solve_5.5/lp_price.c ****                                             int roundmode)
 727:lp_solve_5.5/lp_price.c **** {
 4810               		.loc 1 727 0
 4811               		.cfi_startproc
 4812 1cf0 8F92      		push r8
 4813               	.LCFI155:
 4814               		.cfi_def_cfa_offset 3
 4815               		.cfi_offset 8, -2
 4816 1cf2 9F92      		push r9
 4817               	.LCFI156:
 4818               		.cfi_def_cfa_offset 4
 4819               		.cfi_offset 9, -3
 4820 1cf4 AF92      		push r10
 4821               	.LCFI157:
 4822               		.cfi_def_cfa_offset 5
 4823               		.cfi_offset 10, -4
 4824 1cf6 BF92      		push r11
 4825               	.LCFI158:
 4826               		.cfi_def_cfa_offset 6
 4827               		.cfi_offset 11, -5
 4828 1cf8 CF92      		push r12
 4829               	.LCFI159:
 4830               		.cfi_def_cfa_offset 7
 4831               		.cfi_offset 12, -6
 4832 1cfa DF92      		push r13
 4833               	.LCFI160:
 4834               		.cfi_def_cfa_offset 8
 4835               		.cfi_offset 13, -7
 4836 1cfc EF92      		push r14
 4837               	.LCFI161:
 4838               		.cfi_def_cfa_offset 9
 4839               		.cfi_offset 14, -8
 4840 1cfe FF92      		push r15
 4841               	.LCFI162:
 4842               		.cfi_def_cfa_offset 10
 4843               		.cfi_offset 15, -9
 4844 1d00 0F93      		push r16
 4845               	.LCFI163:
 4846               		.cfi_def_cfa_offset 11
 4847               		.cfi_offset 16, -10
 4848 1d02 1F93      		push r17
 4849               	.LCFI164:
 4850               		.cfi_def_cfa_offset 12
 4851               		.cfi_offset 17, -11
 4852 1d04 CF93      		push r28
 4853               	.LCFI165:
 4854               		.cfi_def_cfa_offset 13
 4855               		.cfi_offset 28, -12
 4856 1d06 DF93      		push r29
 4857               	.LCFI166:
 4858               		.cfi_def_cfa_offset 14
 4859               		.cfi_offset 29, -13
 4860 1d08 CDB7      		in r28,__SP_L__
 4861 1d0a DEB7      		in r29,__SP_H__
 4862               	.LCFI167:
 4863               		.cfi_def_cfa_register 28
 4864 1d0c 6697      		sbiw r28,22
 4865               	.LCFI168:
 4866               		.cfi_def_cfa_offset 36
 4867 1d0e 0FB6      		in __tmp_reg__,__SREG__
 4868 1d10 F894      		cli
 4869 1d12 DEBF      		out __SP_H__,r29
 4870 1d14 0FBE      		out __SREG__,__tmp_reg__
 4871 1d16 CDBF      		out __SP_L__,r28
 4872               	/* prologue: function */
 4873               	/* frame size = 22 */
 4874               	/* stack size = 34 */
 4875               	.L__stack_usage = 34
 4876 1d18 9887      		std Y+8,r25
 4877 1d1a 8F83      		std Y+7,r24
 4878 1d1c 6987      		std Y+9,r22
 4879 1d1e 5B87      		std Y+11,r21
 4880 1d20 4A87      		std Y+10,r20
 4881 1d22 3D87      		std Y+13,r19
 4882 1d24 2C87      		std Y+12,r18
 4883 1d26 0E87      		std Y+14,r16
 4884 1d28 F88A      		std Y+16,r15
 4885 1d2a EF86      		std Y+15,r14
 4886 1d2c DA8A      		std Y+18,r13
 4887 1d2e C98A      		std Y+17,r12
 4888 1d30 BC8A      		std Y+20,r11
 4889 1d32 AB8A      		std Y+19,r10
 4890 1d34 9E8A      		std Y+22,r9
 4891 1d36 8D8A      		std Y+21,r8
 728:lp_solve_5.5/lp_price.c ****   REAL epsvalue = lp->epsvalue;  /* Any larger value can produce a suboptimal result */
 4892               		.loc 1 728 0
 4893 1d38 8F81      		ldd r24,Y+7
 4894 1d3a 9885      		ldd r25,Y+8
 4895 1d3c 8A5E      		subi r24,-22
 4896 1d3e 9C4F      		sbci r25,-4
 4897 1d40 FC01      		movw r30,r24
 4898 1d42 8081      		ld r24,Z
 4899 1d44 9181      		ldd r25,Z+1
 4900 1d46 A281      		ldd r26,Z+2
 4901 1d48 B381      		ldd r27,Z+3
 4902 1d4a 8B83      		std Y+3,r24
 4903 1d4c 9C83      		std Y+4,r25
 4904 1d4e AD83      		std Y+5,r26
 4905 1d50 BE83      		std Y+6,r27
 729:lp_solve_5.5/lp_price.c ****   roundmode |=  MAT_ROUNDRC;
 4906               		.loc 1 729 0
 4907 1d52 8DA1      		ldd r24,Y+37
 4908 1d54 9EA1      		ldd r25,Y+38
 4909 1d56 8460      		ori r24,4
 4910 1d58 9EA3      		std Y+38,r25
 4911 1d5a 8DA3      		std Y+37,r24
 730:lp_solve_5.5/lp_price.c **** 
 731:lp_solve_5.5/lp_price.c ****   if(isdual) {
 4912               		.loc 1 731 0
 4913 1d5c 8985      		ldd r24,Y+9
 4914 1d5e 8823      		tst r24
 4915 1d60 01F0      		breq .L217
 732:lp_solve_5.5/lp_price.c ****     bsolve_xA2(lp, coltarget,
 4916               		.loc 1 732 0
 4917 1d62 EB88      		ldd r14,Y+19
 4918 1d64 FC88      		ldd r15,Y+20
 4919 1d66 0989      		ldd r16,Y+17
 4920 1d68 1A89      		ldd r17,Y+18
 4921 1d6a 8B81      		ldd r24,Y+3
 4922 1d6c 9C81      		ldd r25,Y+4
 4923 1d6e AD81      		ldd r26,Y+5
 4924 1d70 BE81      		ldd r27,Y+6
 4925 1d72 2F85      		ldd r18,Y+15
 4926 1d74 3889      		ldd r19,Y+16
 4927 1d76 4A85      		ldd r20,Y+10
 4928 1d78 5B85      		ldd r21,Y+11
 4929 1d7a 6C85      		ldd r22,Y+12
 4930 1d7c 7D85      		ldd r23,Y+13
 4931 1d7e EF81      		ldd r30,Y+7
 4932 1d80 F885      		ldd r31,Y+8
 4933 1d82 DEA0      		ldd r13,Y+38
 4934 1d84 DF92      		push r13
 4935 1d86 DDA0      		ldd r13,Y+37
 4936 1d88 DF92      		push r13
 4937 1d8a DE88      		ldd r13,Y+22
 4938 1d8c DF92      		push r13
 4939 1d8e DD88      		ldd r13,Y+21
 4940 1d90 DF92      		push r13
 4941 1d92 DE80      		ldd r13,Y+6
 4942 1d94 DF92      		push r13
 4943 1d96 DD80      		ldd r13,Y+5
 4944 1d98 DF92      		push r13
 4945 1d9a DC80      		ldd r13,Y+4
 4946 1d9c DF92      		push r13
 4947 1d9e DB80      		ldd r13,Y+3
 4948 1da0 DF92      		push r13
 4949 1da2 4701      		movw r8,r14
 4950 1da4 A12C      		mov r10,__zero_reg__
 4951 1da6 B12C      		mov r11,__zero_reg__
 4952 1da8 6801      		movw r12,r16
 4953 1daa 7C01      		movw r14,r24
 4954 1dac 8D01      		movw r16,r26
 4955 1dae CF01      		movw r24,r30
 4956 1db0 0E94 0000 		call bsolve_xA2
 4957 1db4 8DB7      		in r24,__SP_L__
 4958 1db6 9EB7      		in r25,__SP_H__
 4959 1db8 0896      		adiw r24,8
 4960 1dba 0FB6      		in __tmp_reg__,__SREG__
 4961 1dbc F894      		cli
 4962 1dbe DEBF      		out __SP_H__,r29
 4963 1dc0 0FBE      		out __SREG__,__tmp_reg__
 4964 1dc2 CDBF      		out __SP_L__,r28
 733:lp_solve_5.5/lp_price.c ****                    row_nr, prow, epsvalue, nzprow,  /* Calculate net sensitivity given a leaving va
 734:lp_solve_5.5/lp_price.c ****                         0, drow, epsvalue, nzdrow,  /* Calculate the net objective function values 
 735:lp_solve_5.5/lp_price.c ****                    roundmode);
 736:lp_solve_5.5/lp_price.c ****   }
 737:lp_solve_5.5/lp_price.c ****   else {
 738:lp_solve_5.5/lp_price.c ****     REAL *bVector;
 739:lp_solve_5.5/lp_price.c **** 
 740:lp_solve_5.5/lp_price.c **** #if 1 /* Legacy mode, that is possibly a little faster */
 741:lp_solve_5.5/lp_price.c ****     if((lp->multivars == NULL) && (lp->P1extraDim == 0))
 742:lp_solve_5.5/lp_price.c ****       bVector = drow;
 743:lp_solve_5.5/lp_price.c ****     else
 744:lp_solve_5.5/lp_price.c **** #endif
 745:lp_solve_5.5/lp_price.c ****       bVector = lp->bsolveVal;
 746:lp_solve_5.5/lp_price.c ****     if(dosolve) {
 747:lp_solve_5.5/lp_price.c ****       bsolve(lp, 0, bVector, lp->bsolveIdx, epsvalue*DOUBLEROUND, 1.0);
 748:lp_solve_5.5/lp_price.c ****       if(!isdual && (row_nr == 0) && (lp->improve & IMPROVE_SOLUTION) && !refactRecent(lp) &&
 749:lp_solve_5.5/lp_price.c ****          serious_facterror(lp, bVector, lp->rows, lp->epsvalue))
 750:lp_solve_5.5/lp_price.c ****         set_action(&lp->spx_action, ACTION_REINVERT);
 751:lp_solve_5.5/lp_price.c ****     }
 752:lp_solve_5.5/lp_price.c ****     prod_xA(lp,   coltarget,
 753:lp_solve_5.5/lp_price.c ****                   bVector, lp->bsolveIdx, epsvalue, 1.0,
 754:lp_solve_5.5/lp_price.c ****                   drow, nzdrow, roundmode);
 755:lp_solve_5.5/lp_price.c ****   }
 756:lp_solve_5.5/lp_price.c **** }
 4965               		.loc 1 756 0
 4966 1dc4 00C0      		rjmp .L222
 4967               	.L217:
 4968               	.LBB7:
 741:lp_solve_5.5/lp_price.c ****       bVector = drow;
 4969               		.loc 1 741 0
 4970 1dc6 8F81      		ldd r24,Y+7
 4971 1dc8 9885      		ldd r25,Y+8
 4972 1dca 8857      		subi r24,120
 4973 1dcc 9D4F      		sbci r25,-3
 4974 1dce FC01      		movw r30,r24
 4975 1dd0 8081      		ld r24,Z
 4976 1dd2 9181      		ldd r25,Z+1
 4977 1dd4 892B      		or r24,r25
 4978 1dd6 01F4      		brne .L219
 741:lp_solve_5.5/lp_price.c ****       bVector = drow;
 4979               		.loc 1 741 0 is_stmt 0 discriminator 1
 4980 1dd8 8F81      		ldd r24,Y+7
 4981 1dda 9885      		ldd r25,Y+8
 4982 1ddc 8051      		subi r24,16
 4983 1dde 9D4F      		sbci r25,-3
 4984 1de0 FC01      		movw r30,r24
 4985 1de2 8081      		ld r24,Z
 4986 1de4 9181      		ldd r25,Z+1
 4987 1de6 892B      		or r24,r25
 4988 1de8 01F4      		brne .L219
 742:lp_solve_5.5/lp_price.c ****     else
 4989               		.loc 1 742 0 is_stmt 1
 4990 1dea 8B89      		ldd r24,Y+19
 4991 1dec 9C89      		ldd r25,Y+20
 4992 1dee 9A83      		std Y+2,r25
 4993 1df0 8983      		std Y+1,r24
 4994 1df2 00C0      		rjmp .L220
 4995               	.L219:
 745:lp_solve_5.5/lp_price.c ****     if(dosolve) {
 4996               		.loc 1 745 0
 4997 1df4 8F81      		ldd r24,Y+7
 4998 1df6 9885      		ldd r25,Y+8
 4999 1df8 8E55      		subi r24,94
 5000 1dfa 9D4F      		sbci r25,-3
 5001 1dfc FC01      		movw r30,r24
 5002 1dfe 8081      		ld r24,Z
 5003 1e00 9181      		ldd r25,Z+1
 5004 1e02 9A83      		std Y+2,r25
 5005 1e04 8983      		std Y+1,r24
 5006               	.L220:
 746:lp_solve_5.5/lp_price.c ****       bsolve(lp, 0, bVector, lp->bsolveIdx, epsvalue*DOUBLEROUND, 1.0);
 5007               		.loc 1 746 0
 5008 1e06 8E85      		ldd r24,Y+14
 5009 1e08 8823      		tst r24
 5010 1e0a 01F4      		brne .+2
 5011 1e0c 00C0      		rjmp .L221
 747:lp_solve_5.5/lp_price.c ****       if(!isdual && (row_nr == 0) && (lp->improve & IMPROVE_SOLUTION) && !refactRecent(lp) &&
 5012               		.loc 1 747 0
 5013 1e0e 20E0      		ldi r18,0
 5014 1e10 30E0      		ldi r19,0
 5015 1e12 A901      		movw r20,r18
 5016 1e14 6B81      		ldd r22,Y+3
 5017 1e16 7C81      		ldd r23,Y+4
 5018 1e18 8D81      		ldd r24,Y+5
 5019 1e1a 9E81      		ldd r25,Y+6
 5020 1e1c 0E94 0000 		call __mulsf3
 5021 1e20 DC01      		movw r26,r24
 5022 1e22 CB01      		movw r24,r22
 5023 1e24 7C01      		movw r14,r24
 5024 1e26 8D01      		movw r16,r26
 5025 1e28 8F81      		ldd r24,Y+7
 5026 1e2a 9885      		ldd r25,Y+8
 5027 1e2c 8C55      		subi r24,92
 5028 1e2e 9D4F      		sbci r25,-3
 5029 1e30 FC01      		movw r30,r24
 5030 1e32 2081      		ld r18,Z
 5031 1e34 3181      		ldd r19,Z+1
 5032 1e36 4981      		ldd r20,Y+1
 5033 1e38 5A81      		ldd r21,Y+2
 5034 1e3a 8F81      		ldd r24,Y+7
 5035 1e3c 9885      		ldd r25,Y+8
 5036 1e3e 0F2E      		mov __tmp_reg__,r31
 5037 1e40 A12C      		mov r10,__zero_reg__
 5038 1e42 B12C      		mov r11,__zero_reg__
 5039 1e44 F0E8      		ldi r31,lo8(-128)
 5040 1e46 CF2E      		mov r12,r31
 5041 1e48 FFE3      		ldi r31,lo8(63)
 5042 1e4a DF2E      		mov r13,r31
 5043 1e4c F02D      		mov r31,__tmp_reg__
 5044 1e4e 60E0      		ldi r22,0
 5045 1e50 70E0      		ldi r23,0
 5046 1e52 0E94 0000 		call bsolve
 748:lp_solve_5.5/lp_price.c ****          serious_facterror(lp, bVector, lp->rows, lp->epsvalue))
 5047               		.loc 1 748 0
 5048 1e56 8985      		ldd r24,Y+9
 5049 1e58 8823      		tst r24
 5050 1e5a 01F4      		brne .L221
 748:lp_solve_5.5/lp_price.c ****          serious_facterror(lp, bVector, lp->rows, lp->epsvalue))
 5051               		.loc 1 748 0 is_stmt 0 discriminator 1
 5052 1e5c 8A85      		ldd r24,Y+10
 5053 1e5e 9B85      		ldd r25,Y+11
 5054 1e60 892B      		or r24,r25
 5055 1e62 01F4      		brne .L221
 748:lp_solve_5.5/lp_price.c ****          serious_facterror(lp, bVector, lp->rows, lp->epsvalue))
 5056               		.loc 1 748 0 discriminator 2
 5057 1e64 8F81      		ldd r24,Y+7
 5058 1e66 9885      		ldd r25,Y+8
 5059 1e68 8059      		subi r24,-112
 5060 1e6a 9D4F      		sbci r25,-3
 5061 1e6c FC01      		movw r30,r24
 5062 1e6e 8081      		ld r24,Z
 5063 1e70 9181      		ldd r25,Z+1
 5064 1e72 8170      		andi r24,1
 5065 1e74 9927      		clr r25
 5066 1e76 892B      		or r24,r25
 5067 1e78 01F0      		breq .L221
 748:lp_solve_5.5/lp_price.c ****          serious_facterror(lp, bVector, lp->rows, lp->epsvalue))
 5068               		.loc 1 748 0 discriminator 3
 5069 1e7a 8F81      		ldd r24,Y+7
 5070 1e7c 9885      		ldd r25,Y+8
 5071 1e7e 0E94 0000 		call refactRecent
 5072 1e82 8823      		tst r24
 5073 1e84 01F4      		brne .L221
 749:lp_solve_5.5/lp_price.c ****         set_action(&lp->spx_action, ACTION_REINVERT);
 5074               		.loc 1 749 0 is_stmt 1 discriminator 4
 5075 1e86 8F81      		ldd r24,Y+7
 5076 1e88 9885      		ldd r25,Y+8
 5077 1e8a 8A5E      		subi r24,-22
 5078 1e8c 9C4F      		sbci r25,-4
 5079 1e8e FC01      		movw r30,r24
 5080 1e90 8081      		ld r24,Z
 5081 1e92 9181      		ldd r25,Z+1
 5082 1e94 A281      		ldd r26,Z+2
 5083 1e96 B381      		ldd r27,Z+3
 5084 1e98 2F81      		ldd r18,Y+7
 5085 1e9a 3885      		ldd r19,Y+8
 5086 1e9c 2651      		subi r18,22
 5087 1e9e 3E4F      		sbci r19,-2
 5088 1ea0 F901      		movw r30,r18
 5089 1ea2 4081      		ld r20,Z
 5090 1ea4 5181      		ldd r21,Z+1
 5091 1ea6 6981      		ldd r22,Y+1
 5092 1ea8 7A81      		ldd r23,Y+2
 5093 1eaa EF81      		ldd r30,Y+7
 5094 1eac F885      		ldd r31,Y+8
 5095 1eae 8C01      		movw r16,r24
 5096 1eb0 9D01      		movw r18,r26
 5097 1eb2 CF01      		movw r24,r30
 5098 1eb4 0E94 0000 		call serious_facterror
 748:lp_solve_5.5/lp_price.c ****          serious_facterror(lp, bVector, lp->rows, lp->epsvalue))
 5099               		.loc 1 748 0 discriminator 4
 5100 1eb8 8823      		tst r24
 5101 1eba 01F0      		breq .L221
 750:lp_solve_5.5/lp_price.c ****     }
 5102               		.loc 1 750 0
 5103 1ebc 8F81      		ldd r24,Y+7
 5104 1ebe 9885      		ldd r25,Y+8
 5105 1ec0 8E50      		subi r24,14
 5106 1ec2 9D4F      		sbci r25,-3
 5107 1ec4 60E1      		ldi r22,lo8(16)
 5108 1ec6 70E0      		ldi r23,0
 5109 1ec8 0E94 0000 		call set_action
 5110               	.L221:
 752:lp_solve_5.5/lp_price.c ****                   bVector, lp->bsolveIdx, epsvalue, 1.0,
 5111               		.loc 1 752 0
 5112 1ecc 8F81      		ldd r24,Y+7
 5113 1ece 9885      		ldd r25,Y+8
 5114 1ed0 8C55      		subi r24,92
 5115 1ed2 9D4F      		sbci r25,-3
 5116 1ed4 FC01      		movw r30,r24
 5117 1ed6 2081      		ld r18,Z
 5118 1ed8 3181      		ldd r19,Z+1
 5119 1eda 0B89      		ldd r16,Y+19
 5120 1edc 1C89      		ldd r17,Y+20
 5121 1ede 8B81      		ldd r24,Y+3
 5122 1ee0 9C81      		ldd r25,Y+4
 5123 1ee2 AD81      		ldd r26,Y+5
 5124 1ee4 BE81      		ldd r27,Y+6
 5125 1ee6 4981      		ldd r20,Y+1
 5126 1ee8 5A81      		ldd r21,Y+2
 5127 1eea 6C85      		ldd r22,Y+12
 5128 1eec 7D85      		ldd r23,Y+13
 5129 1eee EF81      		ldd r30,Y+7
 5130 1ef0 F885      		ldd r31,Y+8
 5131 1ef2 FEA0      		ldd r15,Y+38
 5132 1ef4 FF92      		push r15
 5133 1ef6 FDA0      		ldd r15,Y+37
 5134 1ef8 FF92      		push r15
 5135 1efa FE88      		ldd r15,Y+22
 5136 1efc FF92      		push r15
 5137 1efe FD88      		ldd r15,Y+21
 5138 1f00 FF92      		push r15
 5139 1f02 4801      		movw r8,r16
 5140 1f04 0F2E      		mov __tmp_reg__,r31
 5141 1f06 A12C      		mov r10,__zero_reg__
 5142 1f08 B12C      		mov r11,__zero_reg__
 5143 1f0a F0E8      		ldi r31,lo8(-128)
 5144 1f0c CF2E      		mov r12,r31
 5145 1f0e FFE3      		ldi r31,lo8(63)
 5146 1f10 DF2E      		mov r13,r31
 5147 1f12 F02D      		mov r31,__tmp_reg__
 5148 1f14 7C01      		movw r14,r24
 5149 1f16 8D01      		movw r16,r26
 5150 1f18 CF01      		movw r24,r30
 5151 1f1a 0E94 0000 		call prod_xA
 5152 1f1e 0F90      		pop __tmp_reg__
 5153 1f20 0F90      		pop __tmp_reg__
 5154 1f22 0F90      		pop __tmp_reg__
 5155 1f24 0F90      		pop __tmp_reg__
 5156               	.L222:
 5157               	.LBE7:
 5158               		.loc 1 756 0
 5159 1f26 0000      		nop
 5160               	/* epilogue start */
 5161 1f28 6696      		adiw r28,22
 5162 1f2a 0FB6      		in __tmp_reg__,__SREG__
 5163 1f2c F894      		cli
 5164 1f2e DEBF      		out __SP_H__,r29
 5165 1f30 0FBE      		out __SREG__,__tmp_reg__
 5166 1f32 CDBF      		out __SP_L__,r28
 5167 1f34 DF91      		pop r29
 5168 1f36 CF91      		pop r28
 5169 1f38 1F91      		pop r17
 5170 1f3a 0F91      		pop r16
 5171 1f3c FF90      		pop r15
 5172 1f3e EF90      		pop r14
 5173 1f40 DF90      		pop r13
 5174 1f42 CF90      		pop r12
 5175 1f44 BF90      		pop r11
 5176 1f46 AF90      		pop r10
 5177 1f48 9F90      		pop r9
 5178 1f4a 8F90      		pop r8
 5179 1f4c 0895      		ret
 5180               		.cfi_endproc
 5181               	.LFE25:
 5183               	.global	verify_stability
 5185               	verify_stability:
 5186               	.LFB26:
 757:lp_solve_5.5/lp_price.c **** 
 758:lp_solve_5.5/lp_price.c **** 
 759:lp_solve_5.5/lp_price.c **** /* Primal: Prevent acceptance of an entering variable when the magnitude of
 760:lp_solve_5.5/lp_price.c ****            other candidates is also very small.
 761:lp_solve_5.5/lp_price.c ****    Dual:   Prevent acceptance of a leaving variable when the magnitude of
 762:lp_solve_5.5/lp_price.c ****            other candidates is also very small.
 763:lp_solve_5.5/lp_price.c **** 
 764:lp_solve_5.5/lp_price.c ****    Both of these cases are associated with numerical stalling, which we could
 765:lp_solve_5.5/lp_price.c ****    argue should be detected and handled by the stalling monitor routine. */
 766:lp_solve_5.5/lp_price.c **** STATIC MYBOOL verify_stability(lprec *lp, MYBOOL isprimal, REAL xfeas, REAL sfeas, int nfeas)
 767:lp_solve_5.5/lp_price.c **** {
 5187               		.loc 1 767 0
 5188               		.cfi_startproc
 5189 1f4e CF92      		push r12
 5190               	.LCFI169:
 5191               		.cfi_def_cfa_offset 3
 5192               		.cfi_offset 12, -2
 5193 1f50 DF92      		push r13
 5194               	.LCFI170:
 5195               		.cfi_def_cfa_offset 4
 5196               		.cfi_offset 13, -3
 5197 1f52 EF92      		push r14
 5198               	.LCFI171:
 5199               		.cfi_def_cfa_offset 5
 5200               		.cfi_offset 14, -4
 5201 1f54 FF92      		push r15
 5202               	.LCFI172:
 5203               		.cfi_def_cfa_offset 6
 5204               		.cfi_offset 15, -5
 5205 1f56 0F93      		push r16
 5206               	.LCFI173:
 5207               		.cfi_def_cfa_offset 7
 5208               		.cfi_offset 16, -6
 5209 1f58 1F93      		push r17
 5210               	.LCFI174:
 5211               		.cfi_def_cfa_offset 8
 5212               		.cfi_offset 17, -7
 5213 1f5a CF93      		push r28
 5214               	.LCFI175:
 5215               		.cfi_def_cfa_offset 9
 5216               		.cfi_offset 28, -8
 5217 1f5c DF93      		push r29
 5218               	.LCFI176:
 5219               		.cfi_def_cfa_offset 10
 5220               		.cfi_offset 29, -9
 5221 1f5e CDB7      		in r28,__SP_L__
 5222 1f60 DEB7      		in r29,__SP_H__
 5223               	.LCFI177:
 5224               		.cfi_def_cfa_register 28
 5225 1f62 2E97      		sbiw r28,14
 5226               	.LCFI178:
 5227               		.cfi_def_cfa_offset 24
 5228 1f64 0FB6      		in __tmp_reg__,__SREG__
 5229 1f66 F894      		cli
 5230 1f68 DEBF      		out __SP_H__,r29
 5231 1f6a 0FBE      		out __SREG__,__tmp_reg__
 5232 1f6c CDBF      		out __SP_L__,r28
 5233               	/* prologue: function */
 5234               	/* frame size = 14 */
 5235               	/* stack size = 22 */
 5236               	.L__stack_usage = 22
 5237 1f6e 9B83      		std Y+3,r25
 5238 1f70 8A83      		std Y+2,r24
 5239 1f72 6C83      		std Y+4,r22
 5240 1f74 2D83      		std Y+5,r18
 5241 1f76 3E83      		std Y+6,r19
 5242 1f78 4F83      		std Y+7,r20
 5243 1f7a 5887      		std Y+8,r21
 5244 1f7c E986      		std Y+9,r14
 5245 1f7e FA86      		std Y+10,r15
 5246 1f80 0B87      		std Y+11,r16
 5247 1f82 1C87      		std Y+12,r17
 5248 1f84 DE86      		std Y+14,r13
 5249 1f86 CD86      		std Y+13,r12
 768:lp_solve_5.5/lp_price.c ****   MYBOOL testOK = TRUE;
 5250               		.loc 1 768 0
 5251 1f88 81E0      		ldi r24,lo8(1)
 5252 1f8a 8983      		std Y+1,r24
 769:lp_solve_5.5/lp_price.c ****   return( testOK );
 5253               		.loc 1 769 0
 5254 1f8c 8981      		ldd r24,Y+1
 5255               	/* epilogue start */
 770:lp_solve_5.5/lp_price.c **** 
 771:lp_solve_5.5/lp_price.c **** #if 1
 772:lp_solve_5.5/lp_price.c ****   /* Try to make dual feasibility as tight as possible */
 773:lp_solve_5.5/lp_price.c ****   if(!isprimal)
 774:lp_solve_5.5/lp_price.c **** /*  if(lp->P1extraVal == 0) */
 775:lp_solve_5.5/lp_price.c ****   {
 776:lp_solve_5.5/lp_price.c ****     xfeas /= (1+lp->rhsmax);
 777:lp_solve_5.5/lp_price.c ****     sfeas /= (1+lp->rhsmax);
 778:lp_solve_5.5/lp_price.c ****   }
 779:lp_solve_5.5/lp_price.c **** #endif
 780:lp_solve_5.5/lp_price.c ****   xfeas = fabs(xfeas);             /* Maximum (positive) infeasibility */
 781:lp_solve_5.5/lp_price.c **** /*  if(xfeas < lp->epspivot) { */
 782:lp_solve_5.5/lp_price.c ****   if(xfeas < lp->epssolution) {
 783:lp_solve_5.5/lp_price.c ****     REAL f;
 784:lp_solve_5.5/lp_price.c ****     sfeas = fabs(sfeas);           /* Make sum of infeasibilities positive */
 785:lp_solve_5.5/lp_price.c ****     xfeas = (sfeas-xfeas)/nfeas;   /* Average "residual" feasibility */
 786:lp_solve_5.5/lp_price.c ****     f = 1 + log10((REAL) nfeas);   /* Some numerical complexity scalar */
 787:lp_solve_5.5/lp_price.c ****     /* Numerical errors can interact to cause non-convergence, and the
 788:lp_solve_5.5/lp_price.c ****       idea is to relax the tolerance to account for this and only
 789:lp_solve_5.5/lp_price.c ****       marginally weakening the (user-specified) tolerance. */
 790:lp_solve_5.5/lp_price.c ****     if((sfeas-xfeas) < f*lp->epsprimal)
 791:lp_solve_5.5/lp_price.c ****       testOK = FALSE;
 792:lp_solve_5.5/lp_price.c ****   }
 793:lp_solve_5.5/lp_price.c ****   return( testOK );
 794:lp_solve_5.5/lp_price.c **** }
 5256               		.loc 1 794 0
 5257 1f8e 2E96      		adiw r28,14
 5258 1f90 0FB6      		in __tmp_reg__,__SREG__
 5259 1f92 F894      		cli
 5260 1f94 DEBF      		out __SP_H__,r29
 5261 1f96 0FBE      		out __SREG__,__tmp_reg__
 5262 1f98 CDBF      		out __SP_L__,r28
 5263 1f9a DF91      		pop r29
 5264 1f9c CF91      		pop r28
 5265 1f9e 1F91      		pop r17
 5266 1fa0 0F91      		pop r16
 5267 1fa2 FF90      		pop r15
 5268 1fa4 EF90      		pop r14
 5269 1fa6 DF90      		pop r13
 5270 1fa8 CF90      		pop r12
 5271 1faa 0895      		ret
 5272               		.cfi_endproc
 5273               	.LFE26:
 5275               	.global	find_rowReplacement
 5277               	find_rowReplacement:
 5278               	.LFB27:
 795:lp_solve_5.5/lp_price.c **** 
 796:lp_solve_5.5/lp_price.c **** 
 797:lp_solve_5.5/lp_price.c **** /* Find an entering column for the case that the specified basic variable
 798:lp_solve_5.5/lp_price.c ****    is fixed or zero - typically used for artificial variable elimination */
 799:lp_solve_5.5/lp_price.c **** STATIC int find_rowReplacement(lprec *lp, int rownr, REAL *prow, int *nzprow)
 800:lp_solve_5.5/lp_price.c **** /* The logic in this section generally follows Chvatal: Linear Programming, p. 130
 801:lp_solve_5.5/lp_price.c ****    Basically, the function is a specialized coldual(). */
 802:lp_solve_5.5/lp_price.c **** {
 5279               		.loc 1 802 0
 5280               		.cfi_startproc
 5281 1fac 8F92      		push r8
 5282               	.LCFI179:
 5283               		.cfi_def_cfa_offset 3
 5284               		.cfi_offset 8, -2
 5285 1fae 9F92      		push r9
 5286               	.LCFI180:
 5287               		.cfi_def_cfa_offset 4
 5288               		.cfi_offset 9, -3
 5289 1fb0 AF92      		push r10
 5290               	.LCFI181:
 5291               		.cfi_def_cfa_offset 5
 5292               		.cfi_offset 10, -4
 5293 1fb2 BF92      		push r11
 5294               	.LCFI182:
 5295               		.cfi_def_cfa_offset 6
 5296               		.cfi_offset 11, -5
 5297 1fb4 CF92      		push r12
 5298               	.LCFI183:
 5299               		.cfi_def_cfa_offset 7
 5300               		.cfi_offset 12, -6
 5301 1fb6 DF92      		push r13
 5302               	.LCFI184:
 5303               		.cfi_def_cfa_offset 8
 5304               		.cfi_offset 13, -7
 5305 1fb8 EF92      		push r14
 5306               	.LCFI185:
 5307               		.cfi_def_cfa_offset 9
 5308               		.cfi_offset 14, -8
 5309 1fba FF92      		push r15
 5310               	.LCFI186:
 5311               		.cfi_def_cfa_offset 10
 5312               		.cfi_offset 15, -9
 5313 1fbc 0F93      		push r16
 5314               	.LCFI187:
 5315               		.cfi_def_cfa_offset 11
 5316               		.cfi_offset 16, -10
 5317 1fbe 1F93      		push r17
 5318               	.LCFI188:
 5319               		.cfi_def_cfa_offset 12
 5320               		.cfi_offset 17, -11
 5321 1fc0 CF93      		push r28
 5322               	.LCFI189:
 5323               		.cfi_def_cfa_offset 13
 5324               		.cfi_offset 28, -12
 5325 1fc2 DF93      		push r29
 5326               	.LCFI190:
 5327               		.cfi_def_cfa_offset 14
 5328               		.cfi_offset 29, -13
 5329 1fc4 CDB7      		in r28,__SP_L__
 5330 1fc6 DEB7      		in r29,__SP_H__
 5331               	.LCFI191:
 5332               		.cfi_def_cfa_register 28
 5333 1fc8 6097      		sbiw r28,16
 5334               	.LCFI192:
 5335               		.cfi_def_cfa_offset 30
 5336 1fca 0FB6      		in __tmp_reg__,__SREG__
 5337 1fcc F894      		cli
 5338 1fce DEBF      		out __SP_H__,r29
 5339 1fd0 0FBE      		out __SREG__,__tmp_reg__
 5340 1fd2 CDBF      		out __SP_L__,r28
 5341               	/* prologue: function */
 5342               	/* frame size = 16 */
 5343               	/* stack size = 28 */
 5344               	.L__stack_usage = 28
 5345 1fd4 9A87      		std Y+10,r25
 5346 1fd6 8987      		std Y+9,r24
 5347 1fd8 7C87      		std Y+12,r23
 5348 1fda 6B87      		std Y+11,r22
 5349 1fdc 5E87      		std Y+14,r21
 5350 1fde 4D87      		std Y+13,r20
 5351 1fe0 388B      		std Y+16,r19
 5352 1fe2 2F87      		std Y+15,r18
 803:lp_solve_5.5/lp_price.c ****   int  i, bestindex;
 804:lp_solve_5.5/lp_price.c ****   REAL bestvalue;
 805:lp_solve_5.5/lp_price.c **** 
 806:lp_solve_5.5/lp_price.c ****  /* Solve for "local reduced cost" */
 807:lp_solve_5.5/lp_price.c ****   set_action(&lp->piv_strategy, PRICE_FORCEFULL);
 5353               		.loc 1 807 0
 5354 1fe4 8985      		ldd r24,Y+9
 5355 1fe6 9A85      		ldd r25,Y+10
 5356 1fe8 805A      		subi r24,-96
 5357 1fea 9D4F      		sbci r25,-3
 5358 1fec 60E0      		ldi r22,0
 5359 1fee 70E2      		ldi r23,lo8(32)
 5360 1ff0 0E94 0000 		call set_action
 808:lp_solve_5.5/lp_price.c ****     compute_reducedcosts(lp, TRUE, rownr, NULL, TRUE,
 5361               		.loc 1 808 0
 5362 1ff4 6F85      		ldd r22,Y+15
 5363 1ff6 7889      		ldd r23,Y+16
 5364 1ff8 2D85      		ldd r18,Y+13
 5365 1ffa 3E85      		ldd r19,Y+14
 5366 1ffc 4B85      		ldd r20,Y+11
 5367 1ffe 5C85      		ldd r21,Y+12
 5368 2000 8985      		ldd r24,Y+9
 5369 2002 9A85      		ldd r25,Y+10
 5370 2004 1F92      		push __zero_reg__
 5371 2006 E2E0      		ldi r30,lo8(2)
 5372 2008 EF93      		push r30
 5373 200a 812C      		mov r8,__zero_reg__
 5374 200c 912C      		mov r9,__zero_reg__
 5375 200e A12C      		mov r10,__zero_reg__
 5376 2010 B12C      		mov r11,__zero_reg__
 5377 2012 6B01      		movw r12,r22
 5378 2014 7901      		movw r14,r18
 5379 2016 01E0      		ldi r16,lo8(1)
 5380 2018 20E0      		ldi r18,0
 5381 201a 30E0      		ldi r19,0
 5382 201c 61E0      		ldi r22,lo8(1)
 5383 201e 0E94 0000 		call compute_reducedcosts
 5384 2022 0F90      		pop __tmp_reg__
 5385 2024 0F90      		pop __tmp_reg__
 809:lp_solve_5.5/lp_price.c ****                              prow, nzprow, NULL, NULL, MAT_ROUNDDEFAULT);
 810:lp_solve_5.5/lp_price.c ****   clear_action(&lp->piv_strategy, PRICE_FORCEFULL);
 5386               		.loc 1 810 0
 5387 2026 8985      		ldd r24,Y+9
 5388 2028 9A85      		ldd r25,Y+10
 5389 202a 805A      		subi r24,-96
 5390 202c 9D4F      		sbci r25,-3
 5391 202e 60E0      		ldi r22,0
 5392 2030 70E2      		ldi r23,lo8(32)
 5393 2032 0E94 0000 		call clear_action
 811:lp_solve_5.5/lp_price.c **** 
 812:lp_solve_5.5/lp_price.c ****  /* Find a suitably non-singular variable to enter ("most orthogonal") */
 813:lp_solve_5.5/lp_price.c ****   bestindex = 0;
 5394               		.loc 1 813 0
 5395 2036 1C82      		std Y+4,__zero_reg__
 5396 2038 1B82      		std Y+3,__zero_reg__
 814:lp_solve_5.5/lp_price.c ****   bestvalue = 0;
 5397               		.loc 1 814 0
 5398 203a 1D82      		std Y+5,__zero_reg__
 5399 203c 1E82      		std Y+6,__zero_reg__
 5400 203e 1F82      		std Y+7,__zero_reg__
 5401 2040 1886      		std Y+8,__zero_reg__
 815:lp_solve_5.5/lp_price.c ****   for(i = 1; i <= lp->sum-abs(lp->P1extraDim); i++) {
 5402               		.loc 1 815 0
 5403 2042 81E0      		ldi r24,lo8(1)
 5404 2044 90E0      		ldi r25,0
 5405 2046 9A83      		std Y+2,r25
 5406 2048 8983      		std Y+1,r24
 5407 204a 00C0      		rjmp .L226
 5408               	.L230:
 816:lp_solve_5.5/lp_price.c ****     if(!lp->is_basic[i] && !is_fixedvar(lp, i) &&
 5409               		.loc 1 816 0
 5410 204c 8985      		ldd r24,Y+9
 5411 204e 9A85      		ldd r25,Y+10
 5412 2050 8053      		subi r24,48
 5413 2052 9D4F      		sbci r25,-3
 5414 2054 FC01      		movw r30,r24
 5415 2056 2081      		ld r18,Z
 5416 2058 3181      		ldd r19,Z+1
 5417 205a 8981      		ldd r24,Y+1
 5418 205c 9A81      		ldd r25,Y+2
 5419 205e 820F      		add r24,r18
 5420 2060 931F      		adc r25,r19
 5421 2062 FC01      		movw r30,r24
 5422 2064 8081      		ld r24,Z
 5423 2066 8823      		tst r24
 5424 2068 01F4      		brne .L227
 5425               		.loc 1 816 0 is_stmt 0 discriminator 1
 5426 206a 2981      		ldd r18,Y+1
 5427 206c 3A81      		ldd r19,Y+2
 5428 206e 8985      		ldd r24,Y+9
 5429 2070 9A85      		ldd r25,Y+10
 5430 2072 B901      		movw r22,r18
 5431 2074 0E94 0000 		call is_fixedvar
 5432 2078 8823      		tst r24
 5433 207a 01F4      		brne .L227
 817:lp_solve_5.5/lp_price.c ****       (fabs(prow[i]) > bestvalue)) {
 5434               		.loc 1 817 0 is_stmt 1 discriminator 2
 5435 207c 8981      		ldd r24,Y+1
 5436 207e 9A81      		ldd r25,Y+2
 5437 2080 880F      		lsl r24
 5438 2082 991F      		rol r25
 5439 2084 880F      		lsl r24
 5440 2086 991F      		rol r25
 5441 2088 2D85      		ldd r18,Y+13
 5442 208a 3E85      		ldd r19,Y+14
 5443 208c 820F      		add r24,r18
 5444 208e 931F      		adc r25,r19
 5445 2090 FC01      		movw r30,r24
 5446 2092 8081      		ld r24,Z
 5447 2094 9181      		ldd r25,Z+1
 5448 2096 A281      		ldd r26,Z+2
 5449 2098 B381      		ldd r27,Z+3
 5450 209a BF77      		andi r27,0x7f
 816:lp_solve_5.5/lp_price.c ****     if(!lp->is_basic[i] && !is_fixedvar(lp, i) &&
 5451               		.loc 1 816 0 discriminator 2
 5452 209c 2D81      		ldd r18,Y+5
 5453 209e 3E81      		ldd r19,Y+6
 5454 20a0 4F81      		ldd r20,Y+7
 5455 20a2 5885      		ldd r21,Y+8
 5456 20a4 BC01      		movw r22,r24
 5457 20a6 CD01      		movw r24,r26
 5458 20a8 0E94 0000 		call __gtsf2
 5459 20ac 1816      		cp __zero_reg__,r24
 5460 20ae 04F4      		brge .L227
 818:lp_solve_5.5/lp_price.c ****       bestindex = i;
 5461               		.loc 1 818 0
 5462 20b0 8981      		ldd r24,Y+1
 5463 20b2 9A81      		ldd r25,Y+2
 5464 20b4 9C83      		std Y+4,r25
 5465 20b6 8B83      		std Y+3,r24
 819:lp_solve_5.5/lp_price.c ****       bestvalue = fabs(prow[i]);
 5466               		.loc 1 819 0
 5467 20b8 8981      		ldd r24,Y+1
 5468 20ba 9A81      		ldd r25,Y+2
 5469 20bc 880F      		lsl r24
 5470 20be 991F      		rol r25
 5471 20c0 880F      		lsl r24
 5472 20c2 991F      		rol r25
 5473 20c4 2D85      		ldd r18,Y+13
 5474 20c6 3E85      		ldd r19,Y+14
 5475 20c8 820F      		add r24,r18
 5476 20ca 931F      		adc r25,r19
 5477 20cc FC01      		movw r30,r24
 5478 20ce 8081      		ld r24,Z
 5479 20d0 9181      		ldd r25,Z+1
 5480 20d2 A281      		ldd r26,Z+2
 5481 20d4 B381      		ldd r27,Z+3
 5482 20d6 BF77      		andi r27,0x7f
 5483 20d8 8D83      		std Y+5,r24
 5484 20da 9E83      		std Y+6,r25
 5485 20dc AF83      		std Y+7,r26
 5486 20de B887      		std Y+8,r27
 5487               	.L227:
 815:lp_solve_5.5/lp_price.c ****     if(!lp->is_basic[i] && !is_fixedvar(lp, i) &&
 5488               		.loc 1 815 0 discriminator 2
 5489 20e0 8981      		ldd r24,Y+1
 5490 20e2 9A81      		ldd r25,Y+2
 5491 20e4 0196      		adiw r24,1
 5492 20e6 9A83      		std Y+2,r25
 5493 20e8 8983      		std Y+1,r24
 5494               	.L226:
 815:lp_solve_5.5/lp_price.c ****     if(!lp->is_basic[i] && !is_fixedvar(lp, i) &&
 5495               		.loc 1 815 0 is_stmt 0 discriminator 1
 5496 20ea 8985      		ldd r24,Y+9
 5497 20ec 9A85      		ldd r25,Y+10
 5498 20ee 8851      		subi r24,24
 5499 20f0 9E4F      		sbci r25,-2
 5500 20f2 FC01      		movw r30,r24
 5501 20f4 2081      		ld r18,Z
 5502 20f6 3181      		ldd r19,Z+1
 5503 20f8 8985      		ldd r24,Y+9
 5504 20fa 9A85      		ldd r25,Y+10
 5505 20fc 8051      		subi r24,16
 5506 20fe 9D4F      		sbci r25,-3
 5507 2100 FC01      		movw r30,r24
 5508 2102 8081      		ld r24,Z
 5509 2104 9181      		ldd r25,Z+1
 5510 2106 9923      		tst r25
 5511 2108 04F4      		brge .L229
 5512 210a 9195      		neg r25
 5513 210c 8195      		neg r24
 5514 210e 9109      		sbc r25,__zero_reg__
 5515               	.L229:
 5516 2110 281B      		sub r18,r24
 5517 2112 390B      		sbc r19,r25
 5518 2114 8981      		ldd r24,Y+1
 5519 2116 9A81      		ldd r25,Y+2
 5520 2118 2817      		cp r18,r24
 5521 211a 3907      		cpc r19,r25
 5522 211c 04F0      		brlt .+2
 5523 211e 00C0      		rjmp .L230
 820:lp_solve_5.5/lp_price.c ****     }
 821:lp_solve_5.5/lp_price.c ****   }
 822:lp_solve_5.5/lp_price.c **** 
 823:lp_solve_5.5/lp_price.c ****   /* Prepare to update inverse and pivot/iterate (compute Bw=a) */
 824:lp_solve_5.5/lp_price.c ****   if(i > lp->sum-abs(lp->P1extraDim))
 5524               		.loc 1 824 0 is_stmt 1
 5525 2120 8985      		ldd r24,Y+9
 5526 2122 9A85      		ldd r25,Y+10
 5527 2124 8851      		subi r24,24
 5528 2126 9E4F      		sbci r25,-2
 5529 2128 FC01      		movw r30,r24
 5530 212a 2081      		ld r18,Z
 5531 212c 3181      		ldd r19,Z+1
 5532 212e 8985      		ldd r24,Y+9
 5533 2130 9A85      		ldd r25,Y+10
 5534 2132 8051      		subi r24,16
 5535 2134 9D4F      		sbci r25,-3
 5536 2136 FC01      		movw r30,r24
 5537 2138 8081      		ld r24,Z
 5538 213a 9181      		ldd r25,Z+1
 5539 213c 9923      		tst r25
 5540 213e 04F4      		brge .L231
 5541 2140 9195      		neg r25
 5542 2142 8195      		neg r24
 5543 2144 9109      		sbc r25,__zero_reg__
 5544               	.L231:
 5545 2146 281B      		sub r18,r24
 5546 2148 390B      		sbc r19,r25
 5547 214a 8981      		ldd r24,Y+1
 5548 214c 9A81      		ldd r25,Y+2
 5549 214e 2817      		cp r18,r24
 5550 2150 3907      		cpc r19,r25
 5551 2152 04F4      		brge .L232
 825:lp_solve_5.5/lp_price.c ****     bestindex = 0;
 5552               		.loc 1 825 0
 5553 2154 1C82      		std Y+4,__zero_reg__
 5554 2156 1B82      		std Y+3,__zero_reg__
 5555 2158 00C0      		rjmp .L233
 5556               	.L232:
 826:lp_solve_5.5/lp_price.c ****   else
 827:lp_solve_5.5/lp_price.c ****     fsolve(lp, bestindex, prow, nzprow, lp->epsmachine, 1.0, TRUE);
 5557               		.loc 1 827 0
 5558 215a 8985      		ldd r24,Y+9
 5559 215c 9A85      		ldd r25,Y+10
 5560 215e 8E5E      		subi r24,-18
 5561 2160 9C4F      		sbci r25,-4
 5562 2162 FC01      		movw r30,r24
 5563 2164 8081      		ld r24,Z
 5564 2166 9181      		ldd r25,Z+1
 5565 2168 A281      		ldd r26,Z+2
 5566 216a B381      		ldd r27,Z+3
 5567 216c 2F85      		ldd r18,Y+15
 5568 216e 3889      		ldd r19,Y+16
 5569 2170 4D85      		ldd r20,Y+13
 5570 2172 5E85      		ldd r21,Y+14
 5571 2174 6B81      		ldd r22,Y+3
 5572 2176 7C81      		ldd r23,Y+4
 5573 2178 E985      		ldd r30,Y+9
 5574 217a FA85      		ldd r31,Y+10
 5575 217c 8824      		clr r8
 5576 217e 8394      		inc r8
 5577 2180 0F2E      		mov __tmp_reg__,r31
 5578 2182 A12C      		mov r10,__zero_reg__
 5579 2184 B12C      		mov r11,__zero_reg__
 5580 2186 F0E8      		ldi r31,lo8(-128)
 5581 2188 CF2E      		mov r12,r31
 5582 218a FFE3      		ldi r31,lo8(63)
 5583 218c DF2E      		mov r13,r31
 5584 218e F02D      		mov r31,__tmp_reg__
 5585 2190 7C01      		movw r14,r24
 5586 2192 8D01      		movw r16,r26
 5587 2194 CF01      		movw r24,r30
 5588 2196 0E94 0000 		call fsolve
 5589               	.L233:
 828:lp_solve_5.5/lp_price.c **** 
 829:lp_solve_5.5/lp_price.c ****   return( bestindex );
 5590               		.loc 1 829 0
 5591 219a 8B81      		ldd r24,Y+3
 5592 219c 9C81      		ldd r25,Y+4
 5593               	/* epilogue start */
 830:lp_solve_5.5/lp_price.c **** }
 5594               		.loc 1 830 0
 5595 219e 6096      		adiw r28,16
 5596 21a0 0FB6      		in __tmp_reg__,__SREG__
 5597 21a2 F894      		cli
 5598 21a4 DEBF      		out __SP_H__,r29
 5599 21a6 0FBE      		out __SREG__,__tmp_reg__
 5600 21a8 CDBF      		out __SP_L__,r28
 5601 21aa DF91      		pop r29
 5602 21ac CF91      		pop r28
 5603 21ae 1F91      		pop r17
 5604 21b0 0F91      		pop r16
 5605 21b2 FF90      		pop r15
 5606 21b4 EF90      		pop r14
 5607 21b6 DF90      		pop r13
 5608 21b8 CF90      		pop r12
 5609 21ba BF90      		pop r11
 5610 21bc AF90      		pop r10
 5611 21be 9F90      		pop r9
 5612 21c0 8F90      		pop r8
 5613 21c2 0895      		ret
 5614               		.cfi_endproc
 5615               	.LFE27:
 5617               	.global	__nesf2
 5618               	.global	__lesf2
 5619               		.section	.rodata
 5620               	.LC1:
 5621 003a 636F 6C70 		.string	"colprim: Column %d reduced cost = %18.12g\n"
 5621      7269 6D3A 
 5621      2043 6F6C 
 5621      756D 6E20 
 5621      2564 2072 
 5622               	.LC2:
 5623 0065 636F 6C70 		.string	"colprim: No positive reduced costs found, optimality!\n"
 5623      7269 6D3A 
 5623      204E 6F20 
 5623      706F 7369 
 5623      7469 7665 
 5624               		.text
 5625               	.global	colprim
 5627               	colprim:
 5628               	.LFB28:
 831:lp_solve_5.5/lp_price.c **** 
 832:lp_solve_5.5/lp_price.c **** /* Find the primal simplex entering non-basic column variable */
 833:lp_solve_5.5/lp_price.c **** STATIC int colprim(lprec *lp, REAL *drow, int *nzdrow, MYBOOL skipupdate, int partialloop, int *can
 834:lp_solve_5.5/lp_price.c **** {
 5629               		.loc 1 834 0
 5630               		.cfi_startproc
 5631 21c4 8F92      		push r8
 5632               	.LCFI193:
 5633               		.cfi_def_cfa_offset 3
 5634               		.cfi_offset 8, -2
 5635 21c6 9F92      		push r9
 5636               	.LCFI194:
 5637               		.cfi_def_cfa_offset 4
 5638               		.cfi_offset 9, -3
 5639 21c8 AF92      		push r10
 5640               	.LCFI195:
 5641               		.cfi_def_cfa_offset 5
 5642               		.cfi_offset 10, -4
 5643 21ca BF92      		push r11
 5644               	.LCFI196:
 5645               		.cfi_def_cfa_offset 6
 5646               		.cfi_offset 11, -5
 5647 21cc CF92      		push r12
 5648               	.LCFI197:
 5649               		.cfi_def_cfa_offset 7
 5650               		.cfi_offset 12, -6
 5651 21ce DF92      		push r13
 5652               	.LCFI198:
 5653               		.cfi_def_cfa_offset 8
 5654               		.cfi_offset 13, -7
 5655 21d0 EF92      		push r14
 5656               	.LCFI199:
 5657               		.cfi_def_cfa_offset 9
 5658               		.cfi_offset 14, -8
 5659 21d2 FF92      		push r15
 5660               	.LCFI200:
 5661               		.cfi_def_cfa_offset 10
 5662               		.cfi_offset 15, -9
 5663 21d4 0F93      		push r16
 5664               	.LCFI201:
 5665               		.cfi_def_cfa_offset 11
 5666               		.cfi_offset 16, -10
 5667 21d6 1F93      		push r17
 5668               	.LCFI202:
 5669               		.cfi_def_cfa_offset 12
 5670               		.cfi_offset 17, -11
 5671 21d8 CF93      		push r28
 5672               	.LCFI203:
 5673               		.cfi_def_cfa_offset 13
 5674               		.cfi_offset 28, -12
 5675 21da DF93      		push r29
 5676               	.LCFI204:
 5677               		.cfi_def_cfa_offset 14
 5678               		.cfi_offset 29, -13
 5679 21dc CDB7      		in r28,__SP_L__
 5680 21de DEB7      		in r29,__SP_H__
 5681               	.LCFI205:
 5682               		.cfi_def_cfa_register 28
 5683 21e0 C355      		subi r28,83
 5684 21e2 D109      		sbc r29,__zero_reg__
 5685               	.LCFI206:
 5686               		.cfi_def_cfa_offset 97
 5687 21e4 0FB6      		in __tmp_reg__,__SREG__
 5688 21e6 F894      		cli
 5689 21e8 DEBF      		out __SP_H__,r29
 5690 21ea 0FBE      		out __SREG__,__tmp_reg__
 5691 21ec CDBF      		out __SP_L__,r28
 5692               	/* prologue: function */
 5693               	/* frame size = 83 */
 5694               	/* stack size = 95 */
 5695               	.L__stack_usage = 95
 5696 21ee FE01      		movw r30,r28
 5697 21f0 EC5B      		subi r30,-68
 5698 21f2 FF4F      		sbci r31,-1
 5699 21f4 9183      		std Z+1,r25
 5700 21f6 8083      		st Z,r24
 5701 21f8 CE01      		movw r24,r28
 5702 21fa 8A5B      		subi r24,-70
 5703 21fc 9F4F      		sbci r25,-1
 5704 21fe DC01      		movw r26,r24
 5705 2200 6D93      		st X+,r22
 5706 2202 7C93      		st X,r23
 5707 2204 CE01      		movw r24,r28
 5708 2206 885B      		subi r24,-72
 5709 2208 9F4F      		sbci r25,-1
 5710 220a FC01      		movw r30,r24
 5711 220c 5183      		std Z+1,r21
 5712 220e 4083      		st Z,r20
 5713 2210 CE01      		movw r24,r28
 5714 2212 865B      		subi r24,-74
 5715 2214 9F4F      		sbci r25,-1
 5716 2216 DC01      		movw r26,r24
 5717 2218 2C93      		st X,r18
 5718 221a CE01      		movw r24,r28
 5719 221c 855B      		subi r24,-75
 5720 221e 9F4F      		sbci r25,-1
 5721 2220 FC01      		movw r30,r24
 5722 2222 1183      		std Z+1,r17
 5723 2224 0083      		st Z,r16
 5724 2226 CE01      		movw r24,r28
 5725 2228 835B      		subi r24,-77
 5726 222a 9F4F      		sbci r25,-1
 5727 222c DC01      		movw r26,r24
 5728 222e ED92      		st X+,r14
 5729 2230 FC92      		st X,r15
 5730 2232 CE01      		movw r24,r28
 5731 2234 815B      		subi r24,-79
 5732 2236 9F4F      		sbci r25,-1
 5733 2238 FC01      		movw r30,r24
 5734 223a C082      		st Z,r12
 5735 223c CE01      		movw r24,r28
 5736 223e 805B      		subi r24,-80
 5737 2240 9F4F      		sbci r25,-1
 5738 2242 DC01      		movw r26,r24
 5739 2244 AD92      		st X+,r10
 5740 2246 BC92      		st X,r11
 835:lp_solve_5.5/lp_price.c ****   int      i, ix, iy, iz, ninfeas, nloop = 0;
 5741               		.loc 1 835 0
 5742 2248 1C82      		std Y+4,__zero_reg__
 5743 224a 1B82      		std Y+3,__zero_reg__
 836:lp_solve_5.5/lp_price.c ****   REAL     f, sinfeas, xinfeas, epsvalue = lp->epsdual;
 5744               		.loc 1 836 0
 5745 224c CE01      		movw r24,r28
 5746 224e 8C5B      		subi r24,-68
 5747 2250 9F4F      		sbci r25,-1
 5748 2252 FC01      		movw r30,r24
 5749 2254 8081      		ld r24,Z
 5750 2256 9181      		ldd r25,Z+1
 5751 2258 825E      		subi r24,-30
 5752 225a 9C4F      		sbci r25,-4
 5753 225c FC01      		movw r30,r24
 5754 225e 8081      		ld r24,Z
 5755 2260 9181      		ldd r25,Z+1
 5756 2262 A281      		ldd r26,Z+2
 5757 2264 B381      		ldd r27,Z+3
 5758 2266 8A8B      		std Y+18,r24
 5759 2268 9B8B      		std Y+19,r25
 5760 226a AC8B      		std Y+20,r26
 5761 226c BD8B      		std Y+21,r27
 837:lp_solve_5.5/lp_price.c ****   pricerec current, candidate;
 838:lp_solve_5.5/lp_price.c ****   MYBOOL   collectMP = FALSE;
 5762               		.loc 1 838 0
 5763 226e 1D86      		std Y+13,__zero_reg__
 839:lp_solve_5.5/lp_price.c ****   int      *coltarget = NULL;
 5764               		.loc 1 839 0
 5765 2270 1F86      		std Y+15,__zero_reg__
 5766 2272 1E86      		std Y+14,__zero_reg__
 840:lp_solve_5.5/lp_price.c **** 
 841:lp_solve_5.5/lp_price.c ****   /* Identify pivot column according to pricing strategy; set
 842:lp_solve_5.5/lp_price.c ****      entering variable initial threshold reduced cost value to "0" */
 843:lp_solve_5.5/lp_price.c ****   current.pivot    = lp->epsprimal;    /* Minimum acceptable improvement */
 5767               		.loc 1 843 0
 5768 2274 CE01      		movw r24,r28
 5769 2276 8C5B      		subi r24,-68
 5770 2278 9F4F      		sbci r25,-1
 5771 227a DC01      		movw r26,r24
 5772 227c 8D91      		ld r24,X+
 5773 227e 9C91      		ld r25,X
 5774 2280 865E      		subi r24,-26
 5775 2282 9C4F      		sbci r25,-4
 5776 2284 FC01      		movw r30,r24
 5777 2286 8081      		ld r24,Z
 5778 2288 9181      		ldd r25,Z+1
 5779 228a A281      		ldd r26,Z+2
 5780 228c B381      		ldd r27,Z+3
 5781 228e 8EA3      		std Y+38,r24
 5782 2290 9FA3      		std Y+39,r25
 5783 2292 A8A7      		std Y+40,r26
 5784 2294 B9A7      		std Y+41,r27
 844:lp_solve_5.5/lp_price.c ****   current.varno    = 0;
 5785               		.loc 1 844 0
 5786 2296 1FA6      		std Y+47,__zero_reg__
 5787 2298 1EA6      		std Y+46,__zero_reg__
 845:lp_solve_5.5/lp_price.c ****   current.lp       = lp;
 5788               		.loc 1 845 0
 5789 229a CE01      		movw r24,r28
 5790 229c 8C5B      		subi r24,-68
 5791 229e 9F4F      		sbci r25,-1
 5792 22a0 DC01      		movw r26,r24
 5793 22a2 8D91      		ld r24,X+
 5794 22a4 9C91      		ld r25,X
 5795 22a6 99AB      		std Y+49,r25
 5796 22a8 88AB      		std Y+48,r24
 846:lp_solve_5.5/lp_price.c ****   current.isdual   = FALSE;
 5797               		.loc 1 846 0
 5798 22aa 1AAA      		std Y+50,__zero_reg__
 847:lp_solve_5.5/lp_price.c ****   candidate.lp     = lp;
 5799               		.loc 1 847 0
 5800 22ac CE01      		movw r24,r28
 5801 22ae 8F5B      		subi r24,-65
 5802 22b0 9F4F      		sbci r25,-1
 5803 22b2 9E01      		movw r18,r28
 5804 22b4 2C5B      		subi r18,-68
 5805 22b6 3F4F      		sbci r19,-1
 5806 22b8 F901      		movw r30,r18
 5807 22ba 2081      		ld r18,Z
 5808 22bc 3181      		ldd r19,Z+1
 5809 22be DC01      		movw r26,r24
 5810 22c0 2D93      		st X+,r18
 5811 22c2 3C93      		st X,r19
 848:lp_solve_5.5/lp_price.c ****   candidate.isdual = FALSE;
 5812               		.loc 1 848 0
 5813 22c4 CE01      		movw r24,r28
 5814 22c6 8D5B      		subi r24,-67
 5815 22c8 9F4F      		sbci r25,-1
 5816 22ca FC01      		movw r30,r24
 5817 22cc 1082      		st Z,__zero_reg__
 849:lp_solve_5.5/lp_price.c ****   *candidatecount  = 0;
 5818               		.loc 1 849 0
 5819 22ce CE01      		movw r24,r28
 5820 22d0 835B      		subi r24,-77
 5821 22d2 9F4F      		sbci r25,-1
 5822 22d4 DC01      		movw r26,r24
 5823 22d6 8D91      		ld r24,X+
 5824 22d8 9C91      		ld r25,X
 5825 22da FC01      		movw r30,r24
 5826 22dc 1182      		std Z+1,__zero_reg__
 5827 22de 1082      		st Z,__zero_reg__
 850:lp_solve_5.5/lp_price.c **** 
 851:lp_solve_5.5/lp_price.c ****   /* Update local value of pivot setting and determine active multiple pricing set */
 852:lp_solve_5.5/lp_price.c ****   lp->_piv_rule_ = get_piv_rule(lp);
 5828               		.loc 1 852 0
 5829 22e0 CE01      		movw r24,r28
 5830 22e2 8C5B      		subi r24,-68
 5831 22e4 9F4F      		sbci r25,-1
 5832 22e6 DC01      		movw r26,r24
 5833 22e8 8D91      		ld r24,X+
 5834 22ea 9C91      		ld r25,X
 5835 22ec 0E94 0000 		call get_piv_rule
 5836 22f0 9C01      		movw r18,r24
 5837 22f2 CE01      		movw r24,r28
 5838 22f4 8C5B      		subi r24,-68
 5839 22f6 9F4F      		sbci r25,-1
 5840 22f8 FC01      		movw r30,r24
 5841 22fa 8081      		ld r24,Z
 5842 22fc 9181      		ldd r25,Z+1
 5843 22fe 8E59      		subi r24,-98
 5844 2300 9D4F      		sbci r25,-3
 5845 2302 DC01      		movw r26,r24
 5846 2304 2D93      		st X+,r18
 5847 2306 3C93      		st X,r19
 5848               	.L237:
 853:lp_solve_5.5/lp_price.c **** doLoop:
 854:lp_solve_5.5/lp_price.c ****   nloop++;
 5849               		.loc 1 854 0
 5850 2308 8B81      		ldd r24,Y+3
 5851 230a 9C81      		ldd r25,Y+4
 5852 230c 0196      		adiw r24,1
 5853 230e 9C83      		std Y+4,r25
 5854 2310 8B83      		std Y+3,r24
 855:lp_solve_5.5/lp_price.c ****   if((lp->multivars != NULL) && ((lp->simplex_mode & SIMPLEX_PRIMAL_PRIMAL) != 0)) {
 5855               		.loc 1 855 0
 5856 2312 CE01      		movw r24,r28
 5857 2314 8C5B      		subi r24,-68
 5858 2316 9F4F      		sbci r25,-1
 5859 2318 FC01      		movw r30,r24
 5860 231a 8081      		ld r24,Z
 5861 231c 9181      		ldd r25,Z+1
 5862 231e 8857      		subi r24,120
 5863 2320 9D4F      		sbci r25,-3
 5864 2322 DC01      		movw r26,r24
 5865 2324 8D91      		ld r24,X+
 5866 2326 9C91      		ld r25,X
 5867 2328 892B      		or r24,r25
 5868 232a 01F4      		brne .+2
 5869 232c 00C0      		rjmp .L238
 5870               		.loc 1 855 0 is_stmt 0 discriminator 1
 5871 232e CE01      		movw r24,r28
 5872 2330 8C5B      		subi r24,-68
 5873 2332 9F4F      		sbci r25,-1
 5874 2334 FC01      		movw r30,r24
 5875 2336 8081      		ld r24,Z
 5876 2338 9181      		ldd r25,Z+1
 5877 233a 8A5A      		subi r24,-86
 5878 233c 9D4F      		sbci r25,-3
 5879 233e DC01      		movw r26,r24
 5880 2340 8D91      		ld r24,X+
 5881 2342 9C91      		ld r25,X
 5882 2344 8570      		andi r24,5
 5883 2346 9927      		clr r25
 5884 2348 892B      		or r24,r25
 5885 234a 01F0      		breq .L238
 856:lp_solve_5.5/lp_price.c ****     collectMP = multi_mustupdate(lp->multivars);
 5886               		.loc 1 856 0 is_stmt 1
 5887 234c CE01      		movw r24,r28
 5888 234e 8C5B      		subi r24,-68
 5889 2350 9F4F      		sbci r25,-1
 5890 2352 FC01      		movw r30,r24
 5891 2354 8081      		ld r24,Z
 5892 2356 9181      		ldd r25,Z+1
 5893 2358 8857      		subi r24,120
 5894 235a 9D4F      		sbci r25,-3
 5895 235c DC01      		movw r26,r24
 5896 235e 8D91      		ld r24,X+
 5897 2360 9C91      		ld r25,X
 5898 2362 0E94 0000 		call multi_mustupdate
 5899 2366 8D87      		std Y+13,r24
 857:lp_solve_5.5/lp_price.c ****     if(collectMP) {
 5900               		.loc 1 857 0
 5901 2368 8D85      		ldd r24,Y+13
 5902 236a 8823      		tst r24
 5903 236c 01F0      		breq .L239
 858:lp_solve_5.5/lp_price.c ****       multi_restart(lp->multivars);
 5904               		.loc 1 858 0
 5905 236e CE01      		movw r24,r28
 5906 2370 8C5B      		subi r24,-68
 5907 2372 9F4F      		sbci r25,-1
 5908 2374 FC01      		movw r30,r24
 5909 2376 8081      		ld r24,Z
 5910 2378 9181      		ldd r25,Z+1
 5911 237a 8857      		subi r24,120
 5912 237c 9D4F      		sbci r25,-3
 5913 237e DC01      		movw r26,r24
 5914 2380 8D91      		ld r24,X+
 5915 2382 9C91      		ld r25,X
 5916 2384 0E94 0000 		call multi_restart
 859:lp_solve_5.5/lp_price.c ****       coltarget = NULL;
 5917               		.loc 1 859 0
 5918 2388 1F86      		std Y+15,__zero_reg__
 5919 238a 1E86      		std Y+14,__zero_reg__
 5920 238c 00C0      		rjmp .L238
 5921               	.L239:
 860:lp_solve_5.5/lp_price.c ****     }
 861:lp_solve_5.5/lp_price.c ****     else
 862:lp_solve_5.5/lp_price.c ****       coltarget = multi_indexSet(lp->multivars, FALSE);
 5922               		.loc 1 862 0
 5923 238e CE01      		movw r24,r28
 5924 2390 8C5B      		subi r24,-68
 5925 2392 9F4F      		sbci r25,-1
 5926 2394 FC01      		movw r30,r24
 5927 2396 8081      		ld r24,Z
 5928 2398 9181      		ldd r25,Z+1
 5929 239a 8857      		subi r24,120
 5930 239c 9D4F      		sbci r25,-3
 5931 239e DC01      		movw r26,r24
 5932 23a0 8D91      		ld r24,X+
 5933 23a2 9C91      		ld r25,X
 5934 23a4 60E0      		ldi r22,0
 5935 23a6 0E94 0000 		call multi_indexSet
 5936 23aa 9F87      		std Y+15,r25
 5937 23ac 8E87      		std Y+14,r24
 5938               	.L238:
 863:lp_solve_5.5/lp_price.c ****   }
 864:lp_solve_5.5/lp_price.c **** 
 865:lp_solve_5.5/lp_price.c ****   /* Compute reduced costs c - c*Inv(B), if necessary
 866:lp_solve_5.5/lp_price.c ****      (i.e. the previous iteration was not a "minor" iteration/bound flip) */
 867:lp_solve_5.5/lp_price.c ****   if(!skipupdate) {
 5939               		.loc 1 867 0
 5940 23ae CE01      		movw r24,r28
 5941 23b0 865B      		subi r24,-74
 5942 23b2 9F4F      		sbci r25,-1
 5943 23b4 FC01      		movw r30,r24
 5944 23b6 8081      		ld r24,Z
 5945 23b8 8823      		tst r24
 5946 23ba 01F4      		brne .L240
 868:lp_solve_5.5/lp_price.c **** #ifdef UsePrimalReducedCostUpdate
 869:lp_solve_5.5/lp_price.c ****     /* Recompute from scratch only at the beginning, otherwise update */
 870:lp_solve_5.5/lp_price.c ****     if((lp->current_iter > 0) && (refactRecent(lp) == AUTOMATIC))
 871:lp_solve_5.5/lp_price.c **** #endif
 872:lp_solve_5.5/lp_price.c ****     compute_reducedcosts(lp, FALSE, 0, coltarget, (MYBOOL) ((nloop <= 1) || (partialloop > 1)),
 5947               		.loc 1 872 0
 5948 23bc 8B81      		ldd r24,Y+3
 5949 23be 9C81      		ldd r25,Y+4
 5950 23c0 0297      		sbiw r24,2
 5951 23c2 04F0      		brlt .L241
 5952               		.loc 1 872 0 is_stmt 0 discriminator 2
 5953 23c4 CE01      		movw r24,r28
 5954 23c6 855B      		subi r24,-75
 5955 23c8 9F4F      		sbci r25,-1
 5956 23ca DC01      		movw r26,r24
 5957 23cc 8D91      		ld r24,X+
 5958 23ce 9C91      		ld r25,X
 5959 23d0 0297      		sbiw r24,2
 5960 23d2 04F0      		brlt .L242
 5961               	.L241:
 5962               		.loc 1 872 0 discriminator 3
 5963 23d4 81E0      		ldi r24,lo8(1)
 5964 23d6 90E0      		ldi r25,0
 5965 23d8 00C0      		rjmp .L243
 5966               	.L242:
 5967               		.loc 1 872 0 discriminator 4
 5968 23da 80E0      		ldi r24,0
 5969 23dc 90E0      		ldi r25,0
 5970               	.L243:
 5971               		.loc 1 872 0 discriminator 6
 5972 23de F82F      		mov r31,r24
 5973 23e0 CE01      		movw r24,r28
 5974 23e2 885B      		subi r24,-72
 5975 23e4 9F4F      		sbci r25,-1
 5976 23e6 DC01      		movw r26,r24
 5977 23e8 6D91      		ld r22,X+
 5978 23ea 7C91      		ld r23,X
 5979 23ec CE01      		movw r24,r28
 5980 23ee 8A5B      		subi r24,-70
 5981 23f0 9F4F      		sbci r25,-1
 5982 23f2 DC01      		movw r26,r24
 5983 23f4 4D91      		ld r20,X+
 5984 23f6 5C91      		ld r21,X
 5985 23f8 2E85      		ldd r18,Y+14
 5986 23fa 3F85      		ldd r19,Y+15
 5987 23fc CE01      		movw r24,r28
 5988 23fe 8C5B      		subi r24,-68
 5989 2400 9F4F      		sbci r25,-1
 5990 2402 DC01      		movw r26,r24
 5991 2404 8D91      		ld r24,X+
 5992 2406 9C91      		ld r25,X
 5993 2408 1F92      		push __zero_reg__
 5994 240a E2E0      		ldi r30,lo8(2)
 5995 240c EF93      		push r30
 5996 240e 4B01      		movw r8,r22
 5997 2410 5A01      		movw r10,r20
 5998 2412 C12C      		mov r12,__zero_reg__
 5999 2414 D12C      		mov r13,__zero_reg__
 6000 2416 E12C      		mov r14,__zero_reg__
 6001 2418 F12C      		mov r15,__zero_reg__
 6002 241a 0F2F      		mov r16,r31
 6003 241c 40E0      		ldi r20,0
 6004 241e 50E0      		ldi r21,0
 6005 2420 60E0      		ldi r22,0
 6006 2422 0E94 0000 		call compute_reducedcosts
 6007 2426 0F90      		pop __tmp_reg__
 6008 2428 0F90      		pop __tmp_reg__
 6009               	.L240:
 873:lp_solve_5.5/lp_price.c ****                              NULL, NULL,
 874:lp_solve_5.5/lp_price.c ****                              drow, nzdrow,
 875:lp_solve_5.5/lp_price.c ****                              MAT_ROUNDDEFAULT);
 876:lp_solve_5.5/lp_price.c ****   }
 877:lp_solve_5.5/lp_price.c **** 
 878:lp_solve_5.5/lp_price.c ****   /* Loop over active partial column set; we presume that reduced costs
 879:lp_solve_5.5/lp_price.c ****      have only been updated for columns in the active partial range. */
 880:lp_solve_5.5/lp_price.c ****   ix = 1;
 6010               		.loc 1 880 0 is_stmt 1
 6011 242a 81E0      		ldi r24,lo8(1)
 6012 242c 90E0      		ldi r25,0
 6013 242e 9D8F      		std Y+29,r25
 6014 2430 8C8F      		std Y+28,r24
 881:lp_solve_5.5/lp_price.c ****   iy = nzdrow[0];
 6015               		.loc 1 881 0
 6016 2432 CE01      		movw r24,r28
 6017 2434 885B      		subi r24,-72
 6018 2436 9F4F      		sbci r25,-1
 6019 2438 FC01      		movw r30,r24
 6020 243a 8081      		ld r24,Z
 6021 243c 9181      		ldd r25,Z+1
 6022 243e DC01      		movw r26,r24
 6023 2440 8D91      		ld r24,X+
 6024 2442 9C91      		ld r25,X
 6025 2444 9F8F      		std Y+31,r25
 6026 2446 8E8F      		std Y+30,r24
 882:lp_solve_5.5/lp_price.c ****   ninfeas = 0;
 6027               		.loc 1 882 0
 6028 2448 1A82      		std Y+2,__zero_reg__
 6029 244a 1982      		std Y+1,__zero_reg__
 883:lp_solve_5.5/lp_price.c ****   xinfeas = 0;
 6030               		.loc 1 883 0
 6031 244c 1986      		std Y+9,__zero_reg__
 6032 244e 1A86      		std Y+10,__zero_reg__
 6033 2450 1B86      		std Y+11,__zero_reg__
 6034 2452 1C86      		std Y+12,__zero_reg__
 884:lp_solve_5.5/lp_price.c ****   sinfeas = 0;
 6035               		.loc 1 884 0
 6036 2454 1D82      		std Y+5,__zero_reg__
 6037 2456 1E82      		std Y+6,__zero_reg__
 6038 2458 1F82      		std Y+7,__zero_reg__
 6039 245a 1886      		std Y+8,__zero_reg__
 885:lp_solve_5.5/lp_price.c ****   makePriceLoop(lp, &ix, &iy, &iz);
 6040               		.loc 1 885 0
 6041 245c 9E01      		movw r18,r28
 6042 245e 205E      		subi r18,-32
 6043 2460 3F4F      		sbci r19,-1
 6044 2462 AE01      		movw r20,r28
 6045 2464 425E      		subi r20,-30
 6046 2466 5F4F      		sbci r21,-1
 6047 2468 BE01      		movw r22,r28
 6048 246a 645E      		subi r22,-28
 6049 246c 7F4F      		sbci r23,-1
 6050 246e CE01      		movw r24,r28
 6051 2470 8C5B      		subi r24,-68
 6052 2472 9F4F      		sbci r25,-1
 6053 2474 FC01      		movw r30,r24
 6054 2476 8081      		ld r24,Z
 6055 2478 9181      		ldd r25,Z+1
 6056 247a 0E94 0000 		call makePriceLoop
 886:lp_solve_5.5/lp_price.c ****   iy *= iz;
 6057               		.loc 1 886 0
 6058 247e 4E8D      		ldd r20,Y+30
 6059 2480 5F8D      		ldd r21,Y+31
 6060 2482 28A1      		ldd r18,Y+32
 6061 2484 39A1      		ldd r19,Y+33
 6062 2486 429F      		mul r20,r18
 6063 2488 C001      		movw r24,r0
 6064 248a 439F      		mul r20,r19
 6065 248c 900D      		add r25,r0
 6066 248e 529F      		mul r21,r18
 6067 2490 900D      		add r25,r0
 6068 2492 1124      		clr r1
 6069 2494 9F8F      		std Y+31,r25
 6070 2496 8E8F      		std Y+30,r24
 887:lp_solve_5.5/lp_price.c ****   for(; ix*iz <= iy; ix += iz) {
 6071               		.loc 1 887 0
 6072 2498 00C0      		rjmp .L244
 6073               	.L258:
 888:lp_solve_5.5/lp_price.c ****     i = nzdrow[ix];
 6074               		.loc 1 888 0
 6075 249a 8C8D      		ldd r24,Y+28
 6076 249c 9D8D      		ldd r25,Y+29
 6077 249e 880F      		lsl r24
 6078 24a0 991F      		rol r25
 6079 24a2 9E01      		movw r18,r28
 6080 24a4 285B      		subi r18,-72
 6081 24a6 3F4F      		sbci r19,-1
 6082 24a8 D901      		movw r26,r18
 6083 24aa 2D91      		ld r18,X+
 6084 24ac 3C91      		ld r19,X
 6085 24ae 820F      		add r24,r18
 6086 24b0 931F      		adc r25,r19
 6087 24b2 FC01      		movw r30,r24
 6088 24b4 8081      		ld r24,Z
 6089 24b6 9181      		ldd r25,Z+1
 6090 24b8 9F8B      		std Y+23,r25
 6091 24ba 8E8B      		std Y+22,r24
 889:lp_solve_5.5/lp_price.c **** #if 0 /* Not necessary since we masked them out in compute_reducedcosts() */
 890:lp_solve_5.5/lp_price.c ****     if(i > lp->sum-abs(lp->P1extraDim))
 891:lp_solve_5.5/lp_price.c ****       continue;
 892:lp_solve_5.5/lp_price.c **** #endif
 893:lp_solve_5.5/lp_price.c **** 
 894:lp_solve_5.5/lp_price.c ****     /* Check if the pivot candidate is on the block-list */
 895:lp_solve_5.5/lp_price.c ****     if(lp->rejectpivot[0] > 0) {
 6092               		.loc 1 895 0
 6093 24bc CE01      		movw r24,r28
 6094 24be 8C5B      		subi r24,-68
 6095 24c0 9F4F      		sbci r25,-1
 6096 24c2 DC01      		movw r26,r24
 6097 24c4 8D91      		ld r24,X+
 6098 24c6 9C91      		ld r25,X
 6099 24c8 8C52      		subi r24,44
 6100 24ca 9D4F      		sbci r25,-3
 6101 24cc FC01      		movw r30,r24
 6102 24ce 8081      		ld r24,Z
 6103 24d0 9181      		ldd r25,Z+1
 6104 24d2 DC01      		movw r26,r24
 6105 24d4 8D91      		ld r24,X+
 6106 24d6 9C91      		ld r25,X
 6107 24d8 1816      		cp __zero_reg__,r24
 6108 24da 1906      		cpc __zero_reg__,r25
 6109 24dc 04F0      		brlt .+2
 6110 24de 00C0      		rjmp .L245
 6111               	.LBB8:
 896:lp_solve_5.5/lp_price.c ****       int kk;
 897:lp_solve_5.5/lp_price.c ****       for(kk = 1; (kk <= lp->rejectpivot[0]) && (i != lp->rejectpivot[kk]); kk++);
 6112               		.loc 1 897 0
 6113 24e0 81E0      		ldi r24,lo8(1)
 6114 24e2 90E0      		ldi r25,0
 6115 24e4 998B      		std Y+17,r25
 6116 24e6 888B      		std Y+16,r24
 6117 24e8 00C0      		rjmp .L246
 6118               	.L248:
 6119               		.loc 1 897 0 is_stmt 0 discriminator 4
 6120 24ea 8889      		ldd r24,Y+16
 6121 24ec 9989      		ldd r25,Y+17
 6122 24ee 0196      		adiw r24,1
 6123 24f0 998B      		std Y+17,r25
 6124 24f2 888B      		std Y+16,r24
 6125               	.L246:
 6126               		.loc 1 897 0 discriminator 1
 6127 24f4 CE01      		movw r24,r28
 6128 24f6 8C5B      		subi r24,-68
 6129 24f8 9F4F      		sbci r25,-1
 6130 24fa FC01      		movw r30,r24
 6131 24fc 8081      		ld r24,Z
 6132 24fe 9181      		ldd r25,Z+1
 6133 2500 8C52      		subi r24,44
 6134 2502 9D4F      		sbci r25,-3
 6135 2504 DC01      		movw r26,r24
 6136 2506 8D91      		ld r24,X+
 6137 2508 9C91      		ld r25,X
 6138 250a FC01      		movw r30,r24
 6139 250c 2081      		ld r18,Z
 6140 250e 3181      		ldd r19,Z+1
 6141 2510 8889      		ldd r24,Y+16
 6142 2512 9989      		ldd r25,Y+17
 6143 2514 2817      		cp r18,r24
 6144 2516 3907      		cpc r19,r25
 6145 2518 04F0      		brlt .L247
 6146               		.loc 1 897 0 discriminator 3
 6147 251a CE01      		movw r24,r28
 6148 251c 8C5B      		subi r24,-68
 6149 251e 9F4F      		sbci r25,-1
 6150 2520 DC01      		movw r26,r24
 6151 2522 8D91      		ld r24,X+
 6152 2524 9C91      		ld r25,X
 6153 2526 8C52      		subi r24,44
 6154 2528 9D4F      		sbci r25,-3
 6155 252a FC01      		movw r30,r24
 6156 252c 2081      		ld r18,Z
 6157 252e 3181      		ldd r19,Z+1
 6158 2530 8889      		ldd r24,Y+16
 6159 2532 9989      		ldd r25,Y+17
 6160 2534 880F      		lsl r24
 6161 2536 991F      		rol r25
 6162 2538 820F      		add r24,r18
 6163 253a 931F      		adc r25,r19
 6164 253c DC01      		movw r26,r24
 6165 253e 2D91      		ld r18,X+
 6166 2540 3C91      		ld r19,X
 6167 2542 8E89      		ldd r24,Y+22
 6168 2544 9F89      		ldd r25,Y+23
 6169 2546 2817      		cp r18,r24
 6170 2548 3907      		cpc r19,r25
 6171 254a 01F4      		brne .L248
 6172               	.L247:
 898:lp_solve_5.5/lp_price.c ****       if(kk <= lp->rejectpivot[0])
 6173               		.loc 1 898 0 is_stmt 1
 6174 254c CE01      		movw r24,r28
 6175 254e 8C5B      		subi r24,-68
 6176 2550 9F4F      		sbci r25,-1
 6177 2552 FC01      		movw r30,r24
 6178 2554 8081      		ld r24,Z
 6179 2556 9181      		ldd r25,Z+1
 6180 2558 8C52      		subi r24,44
 6181 255a 9D4F      		sbci r25,-3
 6182 255c DC01      		movw r26,r24
 6183 255e 8D91      		ld r24,X+
 6184 2560 9C91      		ld r25,X
 6185 2562 FC01      		movw r30,r24
 6186 2564 2081      		ld r18,Z
 6187 2566 3181      		ldd r19,Z+1
 6188 2568 8889      		ldd r24,Y+16
 6189 256a 9989      		ldd r25,Y+17
 6190 256c 2817      		cp r18,r24
 6191 256e 3907      		cpc r19,r25
 6192 2570 04F0      		brlt .+2
 6193 2572 00C0      		rjmp .L271
 6194               	.L245:
 6195               	.LBE8:
 899:lp_solve_5.5/lp_price.c ****         continue;
 900:lp_solve_5.5/lp_price.c ****     }
 901:lp_solve_5.5/lp_price.c **** 
 902:lp_solve_5.5/lp_price.c ****    /* Retrieve the applicable reduced cost - threshold should not be smaller than 0 */
 903:lp_solve_5.5/lp_price.c ****     f = my_chsign(lp->is_lower[i], drow[i]);
 6196               		.loc 1 903 0
 6197 2574 CE01      		movw r24,r28
 6198 2576 8C5B      		subi r24,-68
 6199 2578 9F4F      		sbci r25,-1
 6200 257a DC01      		movw r26,r24
 6201 257c 8D91      		ld r24,X+
 6202 257e 9C91      		ld r25,X
 6203 2580 8E52      		subi r24,46
 6204 2582 9D4F      		sbci r25,-3
 6205 2584 FC01      		movw r30,r24
 6206 2586 2081      		ld r18,Z
 6207 2588 3181      		ldd r19,Z+1
 6208 258a 8E89      		ldd r24,Y+22
 6209 258c 9F89      		ldd r25,Y+23
 6210 258e 820F      		add r24,r18
 6211 2590 931F      		adc r25,r19
 6212 2592 DC01      		movw r26,r24
 6213 2594 8C91      		ld r24,X
 6214 2596 8823      		tst r24
 6215 2598 01F0      		breq .L250
 6216               		.loc 1 903 0 is_stmt 0 discriminator 1
 6217 259a 8E89      		ldd r24,Y+22
 6218 259c 9F89      		ldd r25,Y+23
 6219 259e 880F      		lsl r24
 6220 25a0 991F      		rol r25
 6221 25a2 880F      		lsl r24
 6222 25a4 991F      		rol r25
 6223 25a6 9E01      		movw r18,r28
 6224 25a8 2A5B      		subi r18,-70
 6225 25aa 3F4F      		sbci r19,-1
 6226 25ac F901      		movw r30,r18
 6227 25ae 2081      		ld r18,Z
 6228 25b0 3181      		ldd r19,Z+1
 6229 25b2 820F      		add r24,r18
 6230 25b4 931F      		adc r25,r19
 6231 25b6 FC01      		movw r30,r24
 6232 25b8 8081      		ld r24,Z
 6233 25ba 9181      		ldd r25,Z+1
 6234 25bc A281      		ldd r26,Z+2
 6235 25be B381      		ldd r27,Z+3
 6236 25c0 20E0      		ldi r18,0
 6237 25c2 30E0      		ldi r19,0
 6238 25c4 A901      		movw r20,r18
 6239 25c6 BC01      		movw r22,r24
 6240 25c8 CD01      		movw r24,r26
 6241 25ca 0E94 0000 		call __nesf2
 6242 25ce 8823      		tst r24
 6243 25d0 01F0      		breq .L250
 6244               		.loc 1 903 0 discriminator 3
 6245 25d2 8E89      		ldd r24,Y+22
 6246 25d4 9F89      		ldd r25,Y+23
 6247 25d6 880F      		lsl r24
 6248 25d8 991F      		rol r25
 6249 25da 880F      		lsl r24
 6250 25dc 991F      		rol r25
 6251 25de 9E01      		movw r18,r28
 6252 25e0 2A5B      		subi r18,-70
 6253 25e2 3F4F      		sbci r19,-1
 6254 25e4 D901      		movw r26,r18
 6255 25e6 2D91      		ld r18,X+
 6256 25e8 3C91      		ld r19,X
 6257 25ea 820F      		add r24,r18
 6258 25ec 931F      		adc r25,r19
 6259 25ee FC01      		movw r30,r24
 6260 25f0 8081      		ld r24,Z
 6261 25f2 9181      		ldd r25,Z+1
 6262 25f4 A281      		ldd r26,Z+2
 6263 25f6 B381      		ldd r27,Z+3
 6264 25f8 B058      		subi r27,0x80
 6265 25fa 00C0      		rjmp .L252
 6266               	.L250:
 6267               		.loc 1 903 0 discriminator 4
 6268 25fc 8E89      		ldd r24,Y+22
 6269 25fe 9F89      		ldd r25,Y+23
 6270 2600 880F      		lsl r24
 6271 2602 991F      		rol r25
 6272 2604 880F      		lsl r24
 6273 2606 991F      		rol r25
 6274 2608 9E01      		movw r18,r28
 6275 260a 2A5B      		subi r18,-70
 6276 260c 3F4F      		sbci r19,-1
 6277 260e D901      		movw r26,r18
 6278 2610 2D91      		ld r18,X+
 6279 2612 3C91      		ld r19,X
 6280 2614 820F      		add r24,r18
 6281 2616 931F      		adc r25,r19
 6282 2618 FC01      		movw r30,r24
 6283 261a 8081      		ld r24,Z
 6284 261c 9181      		ldd r25,Z+1
 6285 261e A281      		ldd r26,Z+2
 6286 2620 B381      		ldd r27,Z+3
 6287               	.L252:
 6288               		.loc 1 903 0 discriminator 6
 6289 2622 888F      		std Y+24,r24
 6290 2624 998F      		std Y+25,r25
 6291 2626 AA8F      		std Y+26,r26
 6292 2628 BB8F      		std Y+27,r27
 904:lp_solve_5.5/lp_price.c ****     if(f <= epsvalue)
 6293               		.loc 1 904 0 is_stmt 1 discriminator 6
 6294 262a 2A89      		ldd r18,Y+18
 6295 262c 3B89      		ldd r19,Y+19
 6296 262e 4C89      		ldd r20,Y+20
 6297 2630 5D89      		ldd r21,Y+21
 6298 2632 688D      		ldd r22,Y+24
 6299 2634 798D      		ldd r23,Y+25
 6300 2636 8A8D      		ldd r24,Y+26
 6301 2638 9B8D      		ldd r25,Y+27
 6302 263a 0E94 0000 		call __lesf2
 6303 263e 1816      		cp __zero_reg__,r24
 6304 2640 04F0      		brlt .+2
 6305 2642 00C0      		rjmp .L272
 905:lp_solve_5.5/lp_price.c ****       continue;
 906:lp_solve_5.5/lp_price.c **** 
 907:lp_solve_5.5/lp_price.c ****    /* Find entering variable according to strategy (largest positive f) */
 908:lp_solve_5.5/lp_price.c ****     ninfeas++;
 6306               		.loc 1 908 0 discriminator 6
 6307 2644 8981      		ldd r24,Y+1
 6308 2646 9A81      		ldd r25,Y+2
 6309 2648 0196      		adiw r24,1
 6310 264a 9A83      		std Y+2,r25
 6311 264c 8983      		std Y+1,r24
 909:lp_solve_5.5/lp_price.c ****     SETMAX(xinfeas, f);
 6312               		.loc 1 909 0 discriminator 6
 6313 264e 288D      		ldd r18,Y+24
 6314 2650 398D      		ldd r19,Y+25
 6315 2652 4A8D      		ldd r20,Y+26
 6316 2654 5B8D      		ldd r21,Y+27
 6317 2656 6985      		ldd r22,Y+9
 6318 2658 7A85      		ldd r23,Y+10
 6319 265a 8B85      		ldd r24,Y+11
 6320 265c 9C85      		ldd r25,Y+12
 6321 265e 0E94 0000 		call __ltsf2
 6322 2662 8823      		tst r24
 6323 2664 04F4      		brge .L255
 6324               		.loc 1 909 0 is_stmt 0 discriminator 1
 6325 2666 888D      		ldd r24,Y+24
 6326 2668 998D      		ldd r25,Y+25
 6327 266a AA8D      		ldd r26,Y+26
 6328 266c BB8D      		ldd r27,Y+27
 6329 266e 8987      		std Y+9,r24
 6330 2670 9A87      		std Y+10,r25
 6331 2672 AB87      		std Y+11,r26
 6332 2674 BC87      		std Y+12,r27
 6333               	.L255:
 910:lp_solve_5.5/lp_price.c ****     sinfeas += f;
 6334               		.loc 1 910 0 is_stmt 1
 6335 2676 288D      		ldd r18,Y+24
 6336 2678 398D      		ldd r19,Y+25
 6337 267a 4A8D      		ldd r20,Y+26
 6338 267c 5B8D      		ldd r21,Y+27
 6339 267e 6D81      		ldd r22,Y+5
 6340 2680 7E81      		ldd r23,Y+6
 6341 2682 8F81      		ldd r24,Y+7
 6342 2684 9885      		ldd r25,Y+8
 6343 2686 0E94 0000 		call __addsf3
 6344 268a DC01      		movw r26,r24
 6345 268c CB01      		movw r24,r22
 6346 268e 8D83      		std Y+5,r24
 6347 2690 9E83      		std Y+6,r25
 6348 2692 AF83      		std Y+7,r26
 6349 2694 B887      		std Y+8,r27
 911:lp_solve_5.5/lp_price.c ****     candidate.pivot = normalizeEdge(lp, i, f, FALSE);
 6350               		.loc 1 911 0
 6351 2696 888D      		ldd r24,Y+24
 6352 2698 998D      		ldd r25,Y+25
 6353 269a AA8D      		ldd r26,Y+26
 6354 269c BB8D      		ldd r27,Y+27
 6355 269e 6E89      		ldd r22,Y+22
 6356 26a0 7F89      		ldd r23,Y+23
 6357 26a2 9E01      		movw r18,r28
 6358 26a4 2C5B      		subi r18,-68
 6359 26a6 3F4F      		sbci r19,-1
 6360 26a8 F901      		movw r30,r18
 6361 26aa 0190      		ld __tmp_reg__,Z+
 6362 26ac F081      		ld r31,Z
 6363 26ae E02D      		mov r30,__tmp_reg__
 6364 26b0 6496      		adiw r28,82-62
 6365 26b2 FFAF      		std Y+63,r31
 6366 26b4 EEAF      		std Y+62,r30
 6367 26b6 6497      		sbiw r28,82-62
 6368 26b8 00E0      		ldi r16,0
 6369 26ba 9C01      		movw r18,r24
 6370 26bc AD01      		movw r20,r26
 6371 26be 6496      		adiw r28,82-62
 6372 26c0 8EAD      		ldd r24,Y+62
 6373 26c2 9FAD      		ldd r25,Y+63
 6374 26c4 6497      		sbiw r28,82-62
 6375 26c6 0E94 0000 		call normalizeEdge
 6376 26ca DC01      		movw r26,r24
 6377 26cc CB01      		movw r24,r22
 6378 26ce 8FAB      		std Y+55,r24
 6379 26d0 98AF      		std Y+56,r25
 6380 26d2 A9AF      		std Y+57,r26
 6381 26d4 BAAF      		std Y+58,r27
 912:lp_solve_5.5/lp_price.c ****     candidate.varno = i;
 6382               		.loc 1 912 0
 6383 26d6 2E89      		ldd r18,Y+22
 6384 26d8 3F89      		ldd r19,Y+23
 6385 26da CE01      		movw r24,r28
 6386 26dc CF96      		adiw r24,63
 6387 26de DC01      		movw r26,r24
 6388 26e0 2D93      		st X+,r18
 6389 26e2 3C93      		st X,r19
 913:lp_solve_5.5/lp_price.c ****     if(findImprovementVar(&current, &candidate, collectMP, candidatecount))
 6390               		.loc 1 913 0
 6391 26e4 CE01      		movw r24,r28
 6392 26e6 835B      		subi r24,-77
 6393 26e8 9F4F      		sbci r25,-1
 6394 26ea FC01      		movw r30,r24
 6395 26ec 2081      		ld r18,Z
 6396 26ee 3181      		ldd r19,Z+1
 6397 26f0 BE01      		movw r22,r28
 6398 26f2 6D5C      		subi r22,-51
 6399 26f4 7F4F      		sbci r23,-1
 6400 26f6 CE01      		movw r24,r28
 6401 26f8 8296      		adiw r24,34
 6402 26fa 4D85      		ldd r20,Y+13
 6403 26fc 0E94 0000 		call findImprovementVar
 6404 2700 8823      		tst r24
 6405 2702 01F4      		brne .L273
 6406 2704 00C0      		rjmp .L249
 6407               	.L271:
 6408               	.LBB9:
 899:lp_solve_5.5/lp_price.c ****     }
 6409               		.loc 1 899 0
 6410 2706 0000      		nop
 6411 2708 00C0      		rjmp .L249
 6412               	.L272:
 6413               	.LBE9:
 905:lp_solve_5.5/lp_price.c **** 
 6414               		.loc 1 905 0
 6415 270a 0000      		nop
 6416               	.L249:
 887:lp_solve_5.5/lp_price.c ****     i = nzdrow[ix];
 6417               		.loc 1 887 0
 6418 270c 2C8D      		ldd r18,Y+28
 6419 270e 3D8D      		ldd r19,Y+29
 6420 2710 88A1      		ldd r24,Y+32
 6421 2712 99A1      		ldd r25,Y+33
 6422 2714 820F      		add r24,r18
 6423 2716 931F      		adc r25,r19
 6424 2718 9D8F      		std Y+29,r25
 6425 271a 8C8F      		std Y+28,r24
 6426               	.L244:
 887:lp_solve_5.5/lp_price.c ****     i = nzdrow[ix];
 6427               		.loc 1 887 0 is_stmt 0 discriminator 1
 6428 271c 4C8D      		ldd r20,Y+28
 6429 271e 5D8D      		ldd r21,Y+29
 6430 2720 88A1      		ldd r24,Y+32
 6431 2722 99A1      		ldd r25,Y+33
 6432 2724 489F      		mul r20,r24
 6433 2726 9001      		movw r18,r0
 6434 2728 499F      		mul r20,r25
 6435 272a 300D      		add r19,r0
 6436 272c 589F      		mul r21,r24
 6437 272e 300D      		add r19,r0
 6438 2730 1124      		clr r1
 6439 2732 8E8D      		ldd r24,Y+30
 6440 2734 9F8D      		ldd r25,Y+31
 6441 2736 8217      		cp r24,r18
 6442 2738 9307      		cpc r25,r19
 6443 273a 04F0      		brlt .+2
 6444 273c 00C0      		rjmp .L258
 6445 273e 00C0      		rjmp .L257
 6446               	.L273:
 914:lp_solve_5.5/lp_price.c ****       break;
 6447               		.loc 1 914 0 is_stmt 1
 6448 2740 0000      		nop
 6449               	.L257:
 915:lp_solve_5.5/lp_price.c ****   }
 916:lp_solve_5.5/lp_price.c **** 
 917:lp_solve_5.5/lp_price.c ****   /* Check if we should loop again after a multiple pricing update */
 918:lp_solve_5.5/lp_price.c ****   if(lp->multivars != NULL) {
 6450               		.loc 1 918 0
 6451 2742 CE01      		movw r24,r28
 6452 2744 8C5B      		subi r24,-68
 6453 2746 9F4F      		sbci r25,-1
 6454 2748 DC01      		movw r26,r24
 6455 274a 8D91      		ld r24,X+
 6456 274c 9C91      		ld r25,X
 6457 274e 8857      		subi r24,120
 6458 2750 9D4F      		sbci r25,-3
 6459 2752 FC01      		movw r30,r24
 6460 2754 8081      		ld r24,Z
 6461 2756 9181      		ldd r25,Z+1
 6462 2758 892B      		or r24,r25
 6463 275a 01F4      		brne .+2
 6464 275c 00C0      		rjmp .L259
 919:lp_solve_5.5/lp_price.c ****     if(collectMP) {
 6465               		.loc 1 919 0
 6466 275e 8D85      		ldd r24,Y+13
 6467 2760 8823      		tst r24
 6468 2762 01F4      		brne .+2
 6469 2764 00C0      		rjmp .L260
 920:lp_solve_5.5/lp_price.c ****       if(!lp->multivars->sorted)
 6470               		.loc 1 920 0
 6471 2766 CE01      		movw r24,r28
 6472 2768 8C5B      		subi r24,-68
 6473 276a 9F4F      		sbci r25,-1
 6474 276c DC01      		movw r26,r24
 6475 276e 8D91      		ld r24,X+
 6476 2770 9C91      		ld r25,X
 6477 2772 8857      		subi r24,120
 6478 2774 9D4F      		sbci r25,-3
 6479 2776 FC01      		movw r30,r24
 6480 2778 8081      		ld r24,Z
 6481 277a 9181      		ldd r25,Z+1
 6482 277c DC01      		movw r26,r24
 6483 277e D496      		adiw r26,52
 6484 2780 8C91      		ld r24,X
 6485 2782 8823      		tst r24
 6486 2784 01F4      		brne .L261
 921:lp_solve_5.5/lp_price.c ****         lp->multivars->sorted = QS_execute(lp->multivars->sortedList, lp->multivars->used,
 6487               		.loc 1 921 0
 6488 2786 CE01      		movw r24,r28
 6489 2788 8C5B      		subi r24,-68
 6490 278a 9F4F      		sbci r25,-1
 6491 278c FC01      		movw r30,r24
 6492 278e 8081      		ld r24,Z
 6493 2790 9181      		ldd r25,Z+1
 6494 2792 8857      		subi r24,120
 6495 2794 9D4F      		sbci r25,-3
 6496 2796 DC01      		movw r26,r24
 6497 2798 0D91      		ld r16,X+
 6498 279a 1C91      		ld r17,X
 6499 279c CE01      		movw r24,r28
 6500 279e 8C5B      		subi r24,-68
 6501 27a0 9F4F      		sbci r25,-1
 6502 27a2 FC01      		movw r30,r24
 6503 27a4 8081      		ld r24,Z
 6504 27a6 9181      		ldd r25,Z+1
 6505 27a8 8857      		subi r24,120
 6506 27aa 9D4F      		sbci r25,-3
 6507 27ac DC01      		movw r26,r24
 6508 27ae 8D91      		ld r24,X+
 6509 27b0 9C91      		ld r25,X
 6510 27b2 FC01      		movw r30,r24
 6511 27b4 6481      		ldd r22,Z+4
 6512 27b6 7581      		ldd r23,Z+5
 6513 27b8 CE01      		movw r24,r28
 6514 27ba 8C5B      		subi r24,-68
 6515 27bc 9F4F      		sbci r25,-1
 6516 27be DC01      		movw r26,r24
 6517 27c0 8D91      		ld r24,X+
 6518 27c2 9C91      		ld r25,X
 6519 27c4 8857      		subi r24,120
 6520 27c6 9D4F      		sbci r25,-3
 6521 27c8 FC01      		movw r30,r24
 6522 27ca 8081      		ld r24,Z
 6523 27cc 9181      		ldd r25,Z+1
 6524 27ce DC01      		movw r26,r24
 6525 27d0 1C96      		adiw r26,12
 6526 27d2 8D91      		ld r24,X+
 6527 27d4 9C91      		ld r25,X
 6528 27d6 1D97      		sbiw r26,12+1
 6529 27d8 20E0      		ldi r18,0
 6530 27da 30E0      		ldi r19,0
 6531 27dc 40E0      		ldi r20,lo8(gs(compareImprovementQS))
 6532 27de 50E0      		ldi r21,hi8(gs(compareImprovementQS))
 6533 27e0 0E94 0000 		call QS_execute
 6534 27e4 F801      		movw r30,r16
 6535 27e6 84AB      		std Z+52,r24
 6536               	.L261:
 922:lp_solve_5.5/lp_price.c ****                                            (findCompare_func *) compareImprovementQS, NULL);
 923:lp_solve_5.5/lp_price.c ****       coltarget = multi_indexSet(lp->multivars, TRUE);
 6537               		.loc 1 923 0
 6538 27e8 CE01      		movw r24,r28
 6539 27ea 8C5B      		subi r24,-68
 6540 27ec 9F4F      		sbci r25,-1
 6541 27ee DC01      		movw r26,r24
 6542 27f0 8D91      		ld r24,X+
 6543 27f2 9C91      		ld r25,X
 6544 27f4 8857      		subi r24,120
 6545 27f6 9D4F      		sbci r25,-3
 6546 27f8 FC01      		movw r30,r24
 6547 27fa 8081      		ld r24,Z
 6548 27fc 9181      		ldd r25,Z+1
 6549 27fe 61E0      		ldi r22,lo8(1)
 6550 2800 0E94 0000 		call multi_indexSet
 6551 2804 9F87      		std Y+15,r25
 6552 2806 8E87      		std Y+14,r24
 6553 2808 00C0      		rjmp .L262
 6554               	.L260:
 924:lp_solve_5.5/lp_price.c ****     }
 925:lp_solve_5.5/lp_price.c ****     else if((current.varno == 0) && (lp->multivars->retries == 0)) {
 6555               		.loc 1 925 0
 6556 280a 8EA5      		ldd r24,Y+46
 6557 280c 9FA5      		ldd r25,Y+47
 6558 280e 892B      		or r24,r25
 6559 2810 01F0      		breq .+2
 6560 2812 00C0      		rjmp .L262
 6561               		.loc 1 925 0 is_stmt 0 discriminator 1
 6562 2814 CE01      		movw r24,r28
 6563 2816 8C5B      		subi r24,-68
 6564 2818 9F4F      		sbci r25,-1
 6565 281a DC01      		movw r26,r24
 6566 281c 8D91      		ld r24,X+
 6567 281e 9C91      		ld r25,X
 6568 2820 8857      		subi r24,120
 6569 2822 9D4F      		sbci r25,-3
 6570 2824 FC01      		movw r30,r24
 6571 2826 8081      		ld r24,Z
 6572 2828 9181      		ldd r25,Z+1
 6573 282a DC01      		movw r26,r24
 6574 282c 5696      		adiw r26,22
 6575 282e 8D91      		ld r24,X+
 6576 2830 9C91      		ld r25,X
 6577 2832 5797      		sbiw r26,22+1
 6578 2834 892B      		or r24,r25
 6579 2836 01F4      		brne .L262
 926:lp_solve_5.5/lp_price.c ****       ix = partial_blockStart(lp, FALSE);
 6580               		.loc 1 926 0 is_stmt 1
 6581 2838 CE01      		movw r24,r28
 6582 283a 8C5B      		subi r24,-68
 6583 283c 9F4F      		sbci r25,-1
 6584 283e FC01      		movw r30,r24
 6585 2840 8081      		ld r24,Z
 6586 2842 9181      		ldd r25,Z+1
 6587 2844 60E0      		ldi r22,0
 6588 2846 0E94 0000 		call partial_blockStart
 6589 284a 9D8F      		std Y+29,r25
 6590 284c 8C8F      		std Y+28,r24
 927:lp_solve_5.5/lp_price.c ****       iy = partial_blockEnd(lp, FALSE);
 6591               		.loc 1 927 0
 6592 284e CE01      		movw r24,r28
 6593 2850 8C5B      		subi r24,-68
 6594 2852 9F4F      		sbci r25,-1
 6595 2854 DC01      		movw r26,r24
 6596 2856 8D91      		ld r24,X+
 6597 2858 9C91      		ld r25,X
 6598 285a 60E0      		ldi r22,0
 6599 285c 0E94 0000 		call partial_blockEnd
 6600 2860 9F8F      		std Y+31,r25
 6601 2862 8E8F      		std Y+30,r24
 928:lp_solve_5.5/lp_price.c ****       lp->multivars->used = 0;
 6602               		.loc 1 928 0
 6603 2864 CE01      		movw r24,r28
 6604 2866 8C5B      		subi r24,-68
 6605 2868 9F4F      		sbci r25,-1
 6606 286a FC01      		movw r30,r24
 6607 286c 8081      		ld r24,Z
 6608 286e 9181      		ldd r25,Z+1
 6609 2870 8857      		subi r24,120
 6610 2872 9D4F      		sbci r25,-3
 6611 2874 DC01      		movw r26,r24
 6612 2876 8D91      		ld r24,X+
 6613 2878 9C91      		ld r25,X
 6614 287a FC01      		movw r30,r24
 6615 287c 1582      		std Z+5,__zero_reg__
 6616 287e 1482      		std Z+4,__zero_reg__
 929:lp_solve_5.5/lp_price.c ****       lp->multivars->retries++;
 6617               		.loc 1 929 0
 6618 2880 CE01      		movw r24,r28
 6619 2882 8C5B      		subi r24,-68
 6620 2884 9F4F      		sbci r25,-1
 6621 2886 DC01      		movw r26,r24
 6622 2888 8D91      		ld r24,X+
 6623 288a 9C91      		ld r25,X
 6624 288c 8857      		subi r24,120
 6625 288e 9D4F      		sbci r25,-3
 6626 2890 FC01      		movw r30,r24
 6627 2892 8081      		ld r24,Z
 6628 2894 9181      		ldd r25,Z+1
 6629 2896 DC01      		movw r26,r24
 6630 2898 5696      		adiw r26,22
 6631 289a 2D91      		ld r18,X+
 6632 289c 3C91      		ld r19,X
 6633 289e 5797      		sbiw r26,22+1
 6634 28a0 2F5F      		subi r18,-1
 6635 28a2 3F4F      		sbci r19,-1
 6636 28a4 FC01      		movw r30,r24
 6637 28a6 378B      		std Z+23,r19
 6638 28a8 268B      		std Z+22,r18
 930:lp_solve_5.5/lp_price.c ****       goto doLoop;
 6639               		.loc 1 930 0
 6640 28aa 00C0      		rjmp .L237
 6641               	.L262:
 931:lp_solve_5.5/lp_price.c ****     }
 932:lp_solve_5.5/lp_price.c ****     /* Shrink the candidate list */
 933:lp_solve_5.5/lp_price.c ****     lp->multivars->retries = 0;
 6642               		.loc 1 933 0
 6643 28ac CE01      		movw r24,r28
 6644 28ae 8C5B      		subi r24,-68
 6645 28b0 9F4F      		sbci r25,-1
 6646 28b2 DC01      		movw r26,r24
 6647 28b4 8D91      		ld r24,X+
 6648 28b6 9C91      		ld r25,X
 6649 28b8 8857      		subi r24,120
 6650 28ba 9D4F      		sbci r25,-3
 6651 28bc FC01      		movw r30,r24
 6652 28be 8081      		ld r24,Z
 6653 28c0 9181      		ldd r25,Z+1
 6654 28c2 DC01      		movw r26,r24
 6655 28c4 5796      		adiw r26,22+1
 6656 28c6 1C92      		st X,__zero_reg__
 6657 28c8 1E92      		st -X,__zero_reg__
 6658 28ca 5697      		sbiw r26,22
 934:lp_solve_5.5/lp_price.c ****     if(current.varno != 0)
 6659               		.loc 1 934 0
 6660 28cc 8EA5      		ldd r24,Y+46
 6661 28ce 9FA5      		ldd r25,Y+47
 6662 28d0 892B      		or r24,r25
 6663 28d2 01F0      		breq .L259
 935:lp_solve_5.5/lp_price.c ****       multi_removevar(lp->multivars, current.varno);
 6664               		.loc 1 935 0
 6665 28d4 2EA5      		ldd r18,Y+46
 6666 28d6 3FA5      		ldd r19,Y+47
 6667 28d8 CE01      		movw r24,r28
 6668 28da 8C5B      		subi r24,-68
 6669 28dc 9F4F      		sbci r25,-1
 6670 28de FC01      		movw r30,r24
 6671 28e0 8081      		ld r24,Z
 6672 28e2 9181      		ldd r25,Z+1
 6673 28e4 8857      		subi r24,120
 6674 28e6 9D4F      		sbci r25,-3
 6675 28e8 DC01      		movw r26,r24
 6676 28ea 8D91      		ld r24,X+
 6677 28ec 9C91      		ld r25,X
 6678 28ee B901      		movw r22,r18
 6679 28f0 0E94 0000 		call multi_removevar
 6680               	.L259:
 936:lp_solve_5.5/lp_price.c ****   }
 937:lp_solve_5.5/lp_price.c **** 
 938:lp_solve_5.5/lp_price.c ****   /* Check for optimality */
 939:lp_solve_5.5/lp_price.c ****   if(xviol != NULL)
 6681               		.loc 1 939 0
 6682 28f4 CE01      		movw r24,r28
 6683 28f6 805B      		subi r24,-80
 6684 28f8 9F4F      		sbci r25,-1
 6685 28fa FC01      		movw r30,r24
 6686 28fc 8081      		ld r24,Z
 6687 28fe 9181      		ldd r25,Z+1
 6688 2900 892B      		or r24,r25
 6689 2902 01F0      		breq .L263
 940:lp_solve_5.5/lp_price.c ****     *xviol = xinfeas;
 6690               		.loc 1 940 0
 6691 2904 CE01      		movw r24,r28
 6692 2906 805B      		subi r24,-80
 6693 2908 9F4F      		sbci r25,-1
 6694 290a DC01      		movw r26,r24
 6695 290c 2D91      		ld r18,X+
 6696 290e 3C91      		ld r19,X
 6697 2910 8985      		ldd r24,Y+9
 6698 2912 9A85      		ldd r25,Y+10
 6699 2914 AB85      		ldd r26,Y+11
 6700 2916 BC85      		ldd r27,Y+12
 6701 2918 F901      		movw r30,r18
 6702 291a 8083      		st Z,r24
 6703 291c 9183      		std Z+1,r25
 6704 291e A283      		std Z+2,r26
 6705 2920 B383      		std Z+3,r27
 6706               	.L263:
 941:lp_solve_5.5/lp_price.c ****   if(updateinfeas)
 6707               		.loc 1 941 0
 6708 2922 CE01      		movw r24,r28
 6709 2924 815B      		subi r24,-79
 6710 2926 9F4F      		sbci r25,-1
 6711 2928 DC01      		movw r26,r24
 6712 292a 8C91      		ld r24,X
 6713 292c 8823      		tst r24
 6714 292e 01F0      		breq .L264
 942:lp_solve_5.5/lp_price.c ****     lp->suminfeas = fabs(sinfeas);
 6715               		.loc 1 942 0
 6716 2930 8D81      		ldd r24,Y+5
 6717 2932 9E81      		ldd r25,Y+6
 6718 2934 AF81      		ldd r26,Y+7
 6719 2936 B885      		ldd r27,Y+8
 6720 2938 BF77      		andi r27,0x7f
 6721 293a 9E01      		movw r18,r28
 6722 293c 2C5B      		subi r18,-68
 6723 293e 3F4F      		sbci r19,-1
 6724 2940 F901      		movw r30,r18
 6725 2942 2081      		ld r18,Z
 6726 2944 3181      		ldd r19,Z+1
 6727 2946 2C51      		subi r18,28
 6728 2948 3D4F      		sbci r19,-3
 6729 294a F901      		movw r30,r18
 6730 294c 8083      		st Z,r24
 6731 294e 9183      		std Z+1,r25
 6732 2950 A283      		std Z+2,r26
 6733 2952 B383      		std Z+3,r27
 6734               	.L264:
 943:lp_solve_5.5/lp_price.c ****   if((lp->multivars == NULL) && (current.varno > 0) &&
 6735               		.loc 1 943 0
 6736 2954 CE01      		movw r24,r28
 6737 2956 8C5B      		subi r24,-68
 6738 2958 9F4F      		sbci r25,-1
 6739 295a DC01      		movw r26,r24
 6740 295c 8D91      		ld r24,X+
 6741 295e 9C91      		ld r25,X
 6742 2960 8857      		subi r24,120
 6743 2962 9D4F      		sbci r25,-3
 6744 2964 FC01      		movw r30,r24
 6745 2966 8081      		ld r24,Z
 6746 2968 9181      		ldd r25,Z+1
 6747 296a 892B      		or r24,r25
 6748 296c 01F4      		brne .L265
 6749               		.loc 1 943 0 is_stmt 0 discriminator 1
 6750 296e 8EA5      		ldd r24,Y+46
 6751 2970 9FA5      		ldd r25,Y+47
 6752 2972 1816      		cp __zero_reg__,r24
 6753 2974 1906      		cpc __zero_reg__,r25
 6754 2976 04F4      		brge .L265
 944:lp_solve_5.5/lp_price.c ****      !verify_stability(lp, TRUE, xinfeas, sinfeas, ninfeas))
 6755               		.loc 1 944 0 is_stmt 1 discriminator 2
 6756 2978 0981      		ldd r16,Y+1
 6757 297a 1A81      		ldd r17,Y+2
 6758 297c 2D81      		ldd r18,Y+5
 6759 297e 3E81      		ldd r19,Y+6
 6760 2980 4F81      		ldd r20,Y+7
 6761 2982 5885      		ldd r21,Y+8
 6762 2984 8985      		ldd r24,Y+9
 6763 2986 9A85      		ldd r25,Y+10
 6764 2988 AB85      		ldd r26,Y+11
 6765 298a BC85      		ldd r27,Y+12
 6766 298c BE01      		movw r22,r28
 6767 298e 6C5B      		subi r22,-68
 6768 2990 7F4F      		sbci r23,-1
 6769 2992 FB01      		movw r30,r22
 6770 2994 0190      		ld __tmp_reg__,Z+
 6771 2996 F081      		ld r31,Z
 6772 2998 E02D      		mov r30,__tmp_reg__
 6773 299a 6496      		adiw r28,82-62
 6774 299c FFAF      		std Y+63,r31
 6775 299e EEAF      		std Y+62,r30
 6776 29a0 6497      		sbiw r28,82-62
 6777 29a2 6801      		movw r12,r16
 6778 29a4 7901      		movw r14,r18
 6779 29a6 8A01      		movw r16,r20
 6780 29a8 9C01      		movw r18,r24
 6781 29aa AD01      		movw r20,r26
 6782 29ac 61E0      		ldi r22,lo8(1)
 6783 29ae 6496      		adiw r28,82-62
 6784 29b0 8EAD      		ldd r24,Y+62
 6785 29b2 9FAD      		ldd r25,Y+63
 6786 29b4 6497      		sbiw r28,82-62
 6787 29b6 0E94 0000 		call verify_stability
 943:lp_solve_5.5/lp_price.c ****   if((lp->multivars == NULL) && (current.varno > 0) &&
 6788               		.loc 1 943 0 discriminator 2
 6789 29ba 8823      		tst r24
 6790 29bc 01F4      		brne .L265
 945:lp_solve_5.5/lp_price.c ****     current.varno = 0;
 6791               		.loc 1 945 0
 6792 29be 1FA6      		std Y+47,__zero_reg__
 6793 29c0 1EA6      		std Y+46,__zero_reg__
 6794               	.L265:
 946:lp_solve_5.5/lp_price.c **** 
 947:lp_solve_5.5/lp_price.c ****   /* Produce statistics */
 948:lp_solve_5.5/lp_price.c ****   if(lp->spx_trace) {
 6795               		.loc 1 948 0
 6796 29c2 CE01      		movw r24,r28
 6797 29c4 8C5B      		subi r24,-68
 6798 29c6 9F4F      		sbci r25,-1
 6799 29c8 DC01      		movw r26,r24
 6800 29ca 8D91      		ld r24,X+
 6801 29cc 9C91      		ld r25,X
 6802 29ce 8E5F      		subi r24,-2
 6803 29d0 9D4F      		sbci r25,-3
 6804 29d2 FC01      		movw r30,r24
 6805 29d4 8081      		ld r24,Z
 6806 29d6 8823      		tst r24
 6807 29d8 01F4      		brne .+2
 6808 29da 00C0      		rjmp .L266
 949:lp_solve_5.5/lp_price.c ****     if(current.varno > 0)
 6809               		.loc 1 949 0
 6810 29dc 8EA5      		ldd r24,Y+46
 6811 29de 9FA5      		ldd r25,Y+47
 6812 29e0 1816      		cp __zero_reg__,r24
 6813 29e2 1906      		cpc __zero_reg__,r25
 6814 29e4 04F4      		brge .L267
 950:lp_solve_5.5/lp_price.c ****       report(lp, DETAILED, "colprim: Column %d reduced cost = " RESULTVALUEMASK "\n",
 6815               		.loc 1 950 0
 6816 29e6 8EA1      		ldd r24,Y+38
 6817 29e8 9FA1      		ldd r25,Y+39
 6818 29ea A8A5      		ldd r26,Y+40
 6819 29ec B9A5      		ldd r27,Y+41
 6820 29ee 2EA5      		ldd r18,Y+46
 6821 29f0 3FA5      		ldd r19,Y+47
 6822 29f2 4B2F      		mov r20,r27
 6823 29f4 4F93      		push r20
 6824 29f6 4A2F      		mov r20,r26
 6825 29f8 4F93      		push r20
 6826 29fa 492F      		mov r20,r25
 6827 29fc 4F93      		push r20
 6828 29fe 8F93      		push r24
 6829 2a00 832F      		mov r24,r19
 6830 2a02 8F93      		push r24
 6831 2a04 822F      		mov r24,r18
 6832 2a06 8F93      		push r24
 6833 2a08 80E0      		ldi r24,lo8(.LC1)
 6834 2a0a 90E0      		ldi r25,hi8(.LC1)
 6835 2a0c 892F      		mov r24,r25
 6836 2a0e 8F93      		push r24
 6837 2a10 80E0      		ldi r24,lo8(.LC1)
 6838 2a12 90E0      		ldi r25,hi8(.LC1)
 6839 2a14 8F93      		push r24
 6840 2a16 1F92      		push __zero_reg__
 6841 2a18 85E0      		ldi r24,lo8(5)
 6842 2a1a 8F93      		push r24
 6843 2a1c CE01      		movw r24,r28
 6844 2a1e 8C5B      		subi r24,-68
 6845 2a20 9F4F      		sbci r25,-1
 6846 2a22 DC01      		movw r26,r24
 6847 2a24 1196      		adiw r26,1
 6848 2a26 2C91      		ld r18,X
 6849 2a28 2F93      		push r18
 6850 2a2a FC01      		movw r30,r24
 6851 2a2c 8081      		ld r24,Z
 6852 2a2e 8F93      		push r24
 6853 2a30 0E94 0000 		call report
 6854 2a34 4DB7      		in r20,__SP_L__
 6855 2a36 5EB7      		in r21,__SP_H__
 6856 2a38 445F      		subi r20,-12
 6857 2a3a 5F4F      		sbci r21,-1
 6858 2a3c 0FB6      		in __tmp_reg__,__SREG__
 6859 2a3e F894      		cli
 6860 2a40 DEBF      		out __SP_H__,r29
 6861 2a42 0FBE      		out __SREG__,__tmp_reg__
 6862 2a44 CDBF      		out __SP_L__,r28
 6863 2a46 00C0      		rjmp .L266
 6864               	.L267:
 951:lp_solve_5.5/lp_price.c ****                           current.varno, current.pivot);
 952:lp_solve_5.5/lp_price.c ****     else
 953:lp_solve_5.5/lp_price.c ****       report(lp, DETAILED, "colprim: No positive reduced costs found, optimality!\n");
 6865               		.loc 1 953 0
 6866 2a48 80E0      		ldi r24,lo8(.LC2)
 6867 2a4a 90E0      		ldi r25,hi8(.LC2)
 6868 2a4c 892F      		mov r24,r25
 6869 2a4e 8F93      		push r24
 6870 2a50 80E0      		ldi r24,lo8(.LC2)
 6871 2a52 90E0      		ldi r25,hi8(.LC2)
 6872 2a54 8F93      		push r24
 6873 2a56 1F92      		push __zero_reg__
 6874 2a58 85E0      		ldi r24,lo8(5)
 6875 2a5a 8F93      		push r24
 6876 2a5c CE01      		movw r24,r28
 6877 2a5e 8C5B      		subi r24,-68
 6878 2a60 9F4F      		sbci r25,-1
 6879 2a62 DC01      		movw r26,r24
 6880 2a64 1196      		adiw r26,1
 6881 2a66 2C91      		ld r18,X
 6882 2a68 2F93      		push r18
 6883 2a6a FC01      		movw r30,r24
 6884 2a6c 8081      		ld r24,Z
 6885 2a6e 8F93      		push r24
 6886 2a70 0E94 0000 		call report
 6887 2a74 0F90      		pop __tmp_reg__
 6888 2a76 0F90      		pop __tmp_reg__
 6889 2a78 0F90      		pop __tmp_reg__
 6890 2a7a 0F90      		pop __tmp_reg__
 6891 2a7c 0F90      		pop __tmp_reg__
 6892 2a7e 0F90      		pop __tmp_reg__
 6893               	.L266:
 954:lp_solve_5.5/lp_price.c ****   }
 955:lp_solve_5.5/lp_price.c **** 
 956:lp_solve_5.5/lp_price.c ****   return( current.varno );
 6894               		.loc 1 956 0
 6895 2a80 8EA5      		ldd r24,Y+46
 6896 2a82 9FA5      		ldd r25,Y+47
 6897               	/* epilogue start */
 957:lp_solve_5.5/lp_price.c **** } /* colprim */
 6898               		.loc 1 957 0
 6899 2a84 CD5A      		subi r28,-83
 6900 2a86 DF4F      		sbci r29,-1
 6901 2a88 0FB6      		in __tmp_reg__,__SREG__
 6902 2a8a F894      		cli
 6903 2a8c DEBF      		out __SP_H__,r29
 6904 2a8e 0FBE      		out __SREG__,__tmp_reg__
 6905 2a90 CDBF      		out __SP_L__,r28
 6906 2a92 DF91      		pop r29
 6907 2a94 CF91      		pop r28
 6908 2a96 1F91      		pop r17
 6909 2a98 0F91      		pop r16
 6910 2a9a FF90      		pop r15
 6911 2a9c EF90      		pop r14
 6912 2a9e DF90      		pop r13
 6913 2aa0 CF90      		pop r12
 6914 2aa2 BF90      		pop r11
 6915 2aa4 AF90      		pop r10
 6916 2aa6 9F90      		pop r9
 6917 2aa8 8F90      		pop r8
 6918 2aaa 0895      		ret
 6919               		.cfi_endproc
 6920               	.LFE28:
 6922               		.section	.rodata
 6923               	.LC3:
 6924 009c 726F 7770 		.string	"rowprim: Numeric instability pcol[%d] = %g, rhs[%d] = %g, upbo = %g\n"
 6924      7269 6D3A 
 6924      204E 756D 
 6924      6572 6963 
 6924      2069 6E73 
 6925               	.LC4:
 6926 00e1 726F 775F 		.string	"row_prim: %d, pivot size = %18.12g\n"
 6926      7072 696D 
 6926      3A20 2564 
 6926      2C20 7069 
 6926      766F 7420 
 6927               		.text
 6928               	.global	rowprim
 6930               	rowprim:
 6931               	.LFB29:
 958:lp_solve_5.5/lp_price.c **** 
 959:lp_solve_5.5/lp_price.c **** /* Find the primal simplex leaving basic column variable */
 960:lp_solve_5.5/lp_price.c **** STATIC int rowprim(lprec *lp, int colnr, LREAL *theta, REAL *pcol, int *nzpcol, MYBOOL forceoutEQ, 
 961:lp_solve_5.5/lp_price.c **** {
 6932               		.loc 1 961 0
 6933               		.cfi_startproc
 6934 2aac AF92      		push r10
 6935               	.LCFI207:
 6936               		.cfi_def_cfa_offset 3
 6937               		.cfi_offset 10, -2
 6938 2aae BF92      		push r11
 6939               	.LCFI208:
 6940               		.cfi_def_cfa_offset 4
 6941               		.cfi_offset 11, -3
 6942 2ab0 CF92      		push r12
 6943               	.LCFI209:
 6944               		.cfi_def_cfa_offset 5
 6945               		.cfi_offset 12, -4
 6946 2ab2 DF92      		push r13
 6947               	.LCFI210:
 6948               		.cfi_def_cfa_offset 6
 6949               		.cfi_offset 13, -5
 6950 2ab4 EF92      		push r14
 6951               	.LCFI211:
 6952               		.cfi_def_cfa_offset 7
 6953               		.cfi_offset 14, -6
 6954 2ab6 FF92      		push r15
 6955               	.LCFI212:
 6956               		.cfi_def_cfa_offset 8
 6957               		.cfi_offset 15, -7
 6958 2ab8 0F93      		push r16
 6959               	.LCFI213:
 6960               		.cfi_def_cfa_offset 9
 6961               		.cfi_offset 16, -8
 6962 2aba 1F93      		push r17
 6963               	.LCFI214:
 6964               		.cfi_def_cfa_offset 10
 6965               		.cfi_offset 17, -9
 6966 2abc CF93      		push r28
 6967               	.LCFI215:
 6968               		.cfi_def_cfa_offset 11
 6969               		.cfi_offset 28, -10
 6970 2abe DF93      		push r29
 6971               	.LCFI216:
 6972               		.cfi_def_cfa_offset 12
 6973               		.cfi_offset 29, -11
 6974 2ac0 CDB7      		in r28,__SP_L__
 6975 2ac2 DEB7      		in r29,__SP_H__
 6976               	.LCFI217:
 6977               		.cfi_def_cfa_register 28
 6978 2ac4 C156      		subi r28,97
 6979 2ac6 D109      		sbc r29,__zero_reg__
 6980               	.LCFI218:
 6981               		.cfi_def_cfa_offset 109
 6982 2ac8 0FB6      		in __tmp_reg__,__SREG__
 6983 2aca F894      		cli
 6984 2acc DEBF      		out __SP_H__,r29
 6985 2ace 0FBE      		out __SREG__,__tmp_reg__
 6986 2ad0 CDBF      		out __SP_L__,r28
 6987               	/* prologue: function */
 6988               	/* frame size = 97 */
 6989               	/* stack size = 107 */
 6990               	.L__stack_usage = 107
 6991 2ad2 FE01      		movw r30,r28
 6992 2ad4 ED5A      		subi r30,-83
 6993 2ad6 FF4F      		sbci r31,-1
 6994 2ad8 9183      		std Z+1,r25
 6995 2ada 8083      		st Z,r24
 6996 2adc CE01      		movw r24,r28
 6997 2ade 8B5A      		subi r24,-85
 6998 2ae0 9F4F      		sbci r25,-1
 6999 2ae2 FC01      		movw r30,r24
 7000 2ae4 7183      		std Z+1,r23
 7001 2ae6 6083      		st Z,r22
 7002 2ae8 CE01      		movw r24,r28
 7003 2aea 895A      		subi r24,-87
 7004 2aec 9F4F      		sbci r25,-1
 7005 2aee FC01      		movw r30,r24
 7006 2af0 5183      		std Z+1,r21
 7007 2af2 4083      		st Z,r20
 7008 2af4 CE01      		movw r24,r28
 7009 2af6 875A      		subi r24,-89
 7010 2af8 9F4F      		sbci r25,-1
 7011 2afa FC01      		movw r30,r24
 7012 2afc 3183      		std Z+1,r19
 7013 2afe 2083      		st Z,r18
 7014 2b00 CE01      		movw r24,r28
 7015 2b02 855A      		subi r24,-91
 7016 2b04 9F4F      		sbci r25,-1
 7017 2b06 FC01      		movw r30,r24
 7018 2b08 1183      		std Z+1,r17
 7019 2b0a 0083      		st Z,r16
 7020 2b0c CE01      		movw r24,r28
 7021 2b0e 835A      		subi r24,-93
 7022 2b10 9F4F      		sbci r25,-1
 7023 2b12 FC01      		movw r30,r24
 7024 2b14 E082      		st Z,r14
 7025 2b16 CE01      		movw r24,r28
 7026 2b18 825A      		subi r24,-94
 7027 2b1a 9F4F      		sbci r25,-1
 7028 2b1c FC01      		movw r30,r24
 7029 2b1e D182      		std Z+1,r13
 7030 2b20 C082      		st Z,r12
 962:lp_solve_5.5/lp_price.c ****   int      i, ii, iy, iz, Hpass, k, *nzlist;
 963:lp_solve_5.5/lp_price.c ****   LREAL    f, savef;
 964:lp_solve_5.5/lp_price.c ****   REAL     Heps, Htheta, Hlimit, epsvalue, epspivot, p = 0.0;
 7031               		.loc 1 964 0
 7032 2b22 1D8E      		std Y+29,__zero_reg__
 7033 2b24 1E8E      		std Y+30,__zero_reg__
 7034 2b26 1F8E      		std Y+31,__zero_reg__
 7035 2b28 18A2      		std Y+32,__zero_reg__
 965:lp_solve_5.5/lp_price.c ****   pricerec current, candidate;
 966:lp_solve_5.5/lp_price.c ****   MYBOOL   isupper = !lp->is_lower[colnr], HarrisTwoPass = FALSE;
 7036               		.loc 1 966 0
 7037 2b2a CE01      		movw r24,r28
 7038 2b2c 8D5A      		subi r24,-83
 7039 2b2e 9F4F      		sbci r25,-1
 7040 2b30 FC01      		movw r30,r24
 7041 2b32 8081      		ld r24,Z
 7042 2b34 9181      		ldd r25,Z+1
 7043 2b36 8E52      		subi r24,46
 7044 2b38 9D4F      		sbci r25,-3
 7045 2b3a FC01      		movw r30,r24
 7046 2b3c 2081      		ld r18,Z
 7047 2b3e 3181      		ldd r19,Z+1
 7048 2b40 CE01      		movw r24,r28
 7049 2b42 8B5A      		subi r24,-85
 7050 2b44 9F4F      		sbci r25,-1
 7051 2b46 FC01      		movw r30,r24
 7052 2b48 8081      		ld r24,Z
 7053 2b4a 9181      		ldd r25,Z+1
 7054 2b4c 820F      		add r24,r18
 7055 2b4e 931F      		adc r25,r19
 7056 2b50 FC01      		movw r30,r24
 7057 2b52 9081      		ld r25,Z
 7058 2b54 81E0      		ldi r24,lo8(1)
 7059 2b56 9923      		tst r25
 7060 2b58 01F0      		breq .L275
 7061 2b5a 80E0      		ldi r24,0
 7062               	.L275:
 7063 2b5c 89A3      		std Y+33,r24
 7064 2b5e 1AA2      		std Y+34,__zero_reg__
 967:lp_solve_5.5/lp_price.c **** 
 968:lp_solve_5.5/lp_price.c ****   /* Update local value of pivot setting */
 969:lp_solve_5.5/lp_price.c ****   lp->_piv_rule_ = get_piv_rule(lp);
 7065               		.loc 1 969 0
 7066 2b60 CE01      		movw r24,r28
 7067 2b62 8D5A      		subi r24,-83
 7068 2b64 9F4F      		sbci r25,-1
 7069 2b66 FC01      		movw r30,r24
 7070 2b68 8081      		ld r24,Z
 7071 2b6a 9181      		ldd r25,Z+1
 7072 2b6c 0E94 0000 		call get_piv_rule
 7073 2b70 9C01      		movw r18,r24
 7074 2b72 CE01      		movw r24,r28
 7075 2b74 8D5A      		subi r24,-83
 7076 2b76 9F4F      		sbci r25,-1
 7077 2b78 FC01      		movw r30,r24
 7078 2b7a 8081      		ld r24,Z
 7079 2b7c 9181      		ldd r25,Z+1
 7080 2b7e 8E59      		subi r24,-98
 7081 2b80 9D4F      		sbci r25,-3
 7082 2b82 FC01      		movw r30,r24
 7083 2b84 3183      		std Z+1,r19
 7084 2b86 2083      		st Z,r18
 970:lp_solve_5.5/lp_price.c ****   if(nzpcol == NULL)
 7085               		.loc 1 970 0
 7086 2b88 CE01      		movw r24,r28
 7087 2b8a 855A      		subi r24,-91
 7088 2b8c 9F4F      		sbci r25,-1
 7089 2b8e FC01      		movw r30,r24
 7090 2b90 8081      		ld r24,Z
 7091 2b92 9181      		ldd r25,Z+1
 7092 2b94 892B      		or r24,r25
 7093 2b96 01F4      		brne .L276
 971:lp_solve_5.5/lp_price.c ****     nzlist = (int *) mempool_obtainVector(lp->workarrays, lp->rows+1, sizeof(*nzlist));
 7094               		.loc 1 971 0
 7095 2b98 CE01      		movw r24,r28
 7096 2b9a 8D5A      		subi r24,-83
 7097 2b9c 9F4F      		sbci r25,-1
 7098 2b9e FC01      		movw r30,r24
 7099 2ba0 8081      		ld r24,Z
 7100 2ba2 9181      		ldd r25,Z+1
 7101 2ba4 8651      		subi r24,22
 7102 2ba6 9E4F      		sbci r25,-2
 7103 2ba8 FC01      		movw r30,r24
 7104 2baa 8081      		ld r24,Z
 7105 2bac 9181      		ldd r25,Z+1
 7106 2bae 9C01      		movw r18,r24
 7107 2bb0 2F5F      		subi r18,-1
 7108 2bb2 3F4F      		sbci r19,-1
 7109 2bb4 CE01      		movw r24,r28
 7110 2bb6 8D5A      		subi r24,-83
 7111 2bb8 9F4F      		sbci r25,-1
 7112 2bba FC01      		movw r30,r24
 7113 2bbc 8081      		ld r24,Z
 7114 2bbe 9181      		ldd r25,Z+1
 7115 2bc0 8859      		subi r24,-104
 7116 2bc2 9C4F      		sbci r25,-4
 7117 2bc4 FC01      		movw r30,r24
 7118 2bc6 8081      		ld r24,Z
 7119 2bc8 9181      		ldd r25,Z+1
 7120 2bca 42E0      		ldi r20,lo8(2)
 7121 2bcc 50E0      		ldi r21,0
 7122 2bce B901      		movw r22,r18
 7123 2bd0 0E94 0000 		call mempool_obtainVector
 7124 2bd4 9887      		std Y+8,r25
 7125 2bd6 8F83      		std Y+7,r24
 7126 2bd8 00C0      		rjmp .L277
 7127               	.L276:
 972:lp_solve_5.5/lp_price.c ****   else
 973:lp_solve_5.5/lp_price.c ****     nzlist = nzpcol;
 7128               		.loc 1 973 0
 7129 2bda CE01      		movw r24,r28
 7130 2bdc 855A      		subi r24,-91
 7131 2bde 9F4F      		sbci r25,-1
 7132 2be0 FC01      		movw r30,r24
 7133 2be2 8081      		ld r24,Z
 7134 2be4 9181      		ldd r25,Z+1
 7135 2be6 9887      		std Y+8,r25
 7136 2be8 8F83      		std Y+7,r24
 7137               	.L277:
 974:lp_solve_5.5/lp_price.c **** 
 975:lp_solve_5.5/lp_price.c ****   /* Find unconditional non-zeros and optionally compute relative size of epspivot */
 976:lp_solve_5.5/lp_price.c ****   epspivot = lp->epspivot;
 7138               		.loc 1 976 0
 7139 2bea CE01      		movw r24,r28
 7140 2bec 8D5A      		subi r24,-83
 7141 2bee 9F4F      		sbci r25,-1
 7142 2bf0 FC01      		movw r30,r24
 7143 2bf2 8081      		ld r24,Z
 7144 2bf4 9181      		ldd r25,Z+1
 7145 2bf6 8E5D      		subi r24,-34
 7146 2bf8 9C4F      		sbci r25,-4
 7147 2bfa FC01      		movw r30,r24
 7148 2bfc 8081      		ld r24,Z
 7149 2bfe 9181      		ldd r25,Z+1
 7150 2c00 A281      		ldd r26,Z+2
 7151 2c02 B381      		ldd r27,Z+3
 7152 2c04 898F      		std Y+25,r24
 7153 2c06 9A8F      		std Y+26,r25
 7154 2c08 AB8F      		std Y+27,r26
 7155 2c0a BC8F      		std Y+28,r27
 977:lp_solve_5.5/lp_price.c ****   epsvalue = lp->epsvalue;
 7156               		.loc 1 977 0
 7157 2c0c CE01      		movw r24,r28
 7158 2c0e 8D5A      		subi r24,-83
 7159 2c10 9F4F      		sbci r25,-1
 7160 2c12 FC01      		movw r30,r24
 7161 2c14 8081      		ld r24,Z
 7162 2c16 9181      		ldd r25,Z+1
 7163 2c18 8A5E      		subi r24,-22
 7164 2c1a 9C4F      		sbci r25,-4
 7165 2c1c FC01      		movw r30,r24
 7166 2c1e 8081      		ld r24,Z
 7167 2c20 9181      		ldd r25,Z+1
 7168 2c22 A281      		ldd r26,Z+2
 7169 2c24 B381      		ldd r27,Z+3
 7170 2c26 8BA3      		std Y+35,r24
 7171 2c28 9CA3      		std Y+36,r25
 7172 2c2a ADA3      		std Y+37,r26
 7173 2c2c BEA3      		std Y+38,r27
 978:lp_solve_5.5/lp_price.c ****   Hlimit = 0;
 7174               		.loc 1 978 0
 7175 2c2e 1D8A      		std Y+21,__zero_reg__
 7176 2c30 1E8A      		std Y+22,__zero_reg__
 7177 2c32 1F8A      		std Y+23,__zero_reg__
 7178 2c34 188E      		std Y+24,__zero_reg__
 979:lp_solve_5.5/lp_price.c ****   Htheta = 0;
 7179               		.loc 1 979 0
 7180 2c36 198A      		std Y+17,__zero_reg__
 7181 2c38 1A8A      		std Y+18,__zero_reg__
 7182 2c3a 1B8A      		std Y+19,__zero_reg__
 7183 2c3c 1C8A      		std Y+20,__zero_reg__
 980:lp_solve_5.5/lp_price.c ****   k = 0;
 7184               		.loc 1 980 0
 7185 2c3e 1E82      		std Y+6,__zero_reg__
 7186 2c40 1D82      		std Y+5,__zero_reg__
 981:lp_solve_5.5/lp_price.c ****   for(i = 1; i <= lp->rows; i++) {
 7187               		.loc 1 981 0
 7188 2c42 81E0      		ldi r24,lo8(1)
 7189 2c44 90E0      		ldi r25,0
 7190 2c46 9A83      		std Y+2,r25
 7191 2c48 8983      		std Y+1,r24
 7192 2c4a 00C0      		rjmp .L278
 7193               	.L284:
 982:lp_solve_5.5/lp_price.c ****     p = fabs(pcol[i]);
 7194               		.loc 1 982 0
 7195 2c4c 8981      		ldd r24,Y+1
 7196 2c4e 9A81      		ldd r25,Y+2
 7197 2c50 880F      		lsl r24
 7198 2c52 991F      		rol r25
 7199 2c54 880F      		lsl r24
 7200 2c56 991F      		rol r25
 7201 2c58 9E01      		movw r18,r28
 7202 2c5a 275A      		subi r18,-89
 7203 2c5c 3F4F      		sbci r19,-1
 7204 2c5e F901      		movw r30,r18
 7205 2c60 2081      		ld r18,Z
 7206 2c62 3181      		ldd r19,Z+1
 7207 2c64 820F      		add r24,r18
 7208 2c66 931F      		adc r25,r19
 7209 2c68 FC01      		movw r30,r24
 7210 2c6a 8081      		ld r24,Z
 7211 2c6c 9181      		ldd r25,Z+1
 7212 2c6e A281      		ldd r26,Z+2
 7213 2c70 B381      		ldd r27,Z+3
 7214 2c72 BF77      		andi r27,0x7f
 7215 2c74 8D8F      		std Y+29,r24
 7216 2c76 9E8F      		std Y+30,r25
 7217 2c78 AF8F      		std Y+31,r26
 7218 2c7a B8A3      		std Y+32,r27
 983:lp_solve_5.5/lp_price.c ****     if(p > Hlimit)
 7219               		.loc 1 983 0
 7220 2c7c 2D89      		ldd r18,Y+21
 7221 2c7e 3E89      		ldd r19,Y+22
 7222 2c80 4F89      		ldd r20,Y+23
 7223 2c82 588D      		ldd r21,Y+24
 7224 2c84 6D8D      		ldd r22,Y+29
 7225 2c86 7E8D      		ldd r23,Y+30
 7226 2c88 8F8D      		ldd r24,Y+31
 7227 2c8a 98A1      		ldd r25,Y+32
 7228 2c8c 0E94 0000 		call __gtsf2
 7229 2c90 1816      		cp __zero_reg__,r24
 7230 2c92 04F4      		brge .L279
 984:lp_solve_5.5/lp_price.c ****       Hlimit = p;
 7231               		.loc 1 984 0
 7232 2c94 8D8D      		ldd r24,Y+29
 7233 2c96 9E8D      		ldd r25,Y+30
 7234 2c98 AF8D      		ldd r26,Y+31
 7235 2c9a B8A1      		ldd r27,Y+32
 7236 2c9c 8D8B      		std Y+21,r24
 7237 2c9e 9E8B      		std Y+22,r25
 7238 2ca0 AF8B      		std Y+23,r26
 7239 2ca2 B88F      		std Y+24,r27
 7240               	.L279:
 985:lp_solve_5.5/lp_price.c ****     if(p > epsvalue) {
 7241               		.loc 1 985 0
 7242 2ca4 2BA1      		ldd r18,Y+35
 7243 2ca6 3CA1      		ldd r19,Y+36
 7244 2ca8 4DA1      		ldd r20,Y+37
 7245 2caa 5EA1      		ldd r21,Y+38
 7246 2cac 6D8D      		ldd r22,Y+29
 7247 2cae 7E8D      		ldd r23,Y+30
 7248 2cb0 8F8D      		ldd r24,Y+31
 7249 2cb2 98A1      		ldd r25,Y+32
 7250 2cb4 0E94 0000 		call __gtsf2
 7251 2cb8 1816      		cp __zero_reg__,r24
 7252 2cba 04F4      		brge .L281
 986:lp_solve_5.5/lp_price.c ****       k++;
 7253               		.loc 1 986 0
 7254 2cbc 8D81      		ldd r24,Y+5
 7255 2cbe 9E81      		ldd r25,Y+6
 7256 2cc0 0196      		adiw r24,1
 7257 2cc2 9E83      		std Y+6,r25
 7258 2cc4 8D83      		std Y+5,r24
 987:lp_solve_5.5/lp_price.c ****       nzlist[k] = i;
 7259               		.loc 1 987 0
 7260 2cc6 8D81      		ldd r24,Y+5
 7261 2cc8 9E81      		ldd r25,Y+6
 7262 2cca 880F      		lsl r24
 7263 2ccc 991F      		rol r25
 7264 2cce 2F81      		ldd r18,Y+7
 7265 2cd0 3885      		ldd r19,Y+8
 7266 2cd2 820F      		add r24,r18
 7267 2cd4 931F      		adc r25,r19
 7268 2cd6 2981      		ldd r18,Y+1
 7269 2cd8 3A81      		ldd r19,Y+2
 7270 2cda FC01      		movw r30,r24
 7271 2cdc 3183      		std Z+1,r19
 7272 2cde 2083      		st Z,r18
 988:lp_solve_5.5/lp_price.c ****       SETMAX(Htheta, p);
 7273               		.loc 1 988 0
 7274 2ce0 2D8D      		ldd r18,Y+29
 7275 2ce2 3E8D      		ldd r19,Y+30
 7276 2ce4 4F8D      		ldd r20,Y+31
 7277 2ce6 58A1      		ldd r21,Y+32
 7278 2ce8 6989      		ldd r22,Y+17
 7279 2cea 7A89      		ldd r23,Y+18
 7280 2cec 8B89      		ldd r24,Y+19
 7281 2cee 9C89      		ldd r25,Y+20
 7282 2cf0 0E94 0000 		call __ltsf2
 7283 2cf4 8823      		tst r24
 7284 2cf6 04F4      		brge .L281
 7285               		.loc 1 988 0 is_stmt 0 discriminator 1
 7286 2cf8 8D8D      		ldd r24,Y+29
 7287 2cfa 9E8D      		ldd r25,Y+30
 7288 2cfc AF8D      		ldd r26,Y+31
 7289 2cfe B8A1      		ldd r27,Y+32
 7290 2d00 898B      		std Y+17,r24
 7291 2d02 9A8B      		std Y+18,r25
 7292 2d04 AB8B      		std Y+19,r26
 7293 2d06 BC8B      		std Y+20,r27
 7294               	.L281:
 981:lp_solve_5.5/lp_price.c ****     p = fabs(pcol[i]);
 7295               		.loc 1 981 0 is_stmt 1 discriminator 2
 7296 2d08 8981      		ldd r24,Y+1
 7297 2d0a 9A81      		ldd r25,Y+2
 7298 2d0c 0196      		adiw r24,1
 7299 2d0e 9A83      		std Y+2,r25
 7300 2d10 8983      		std Y+1,r24
 7301               	.L278:
 981:lp_solve_5.5/lp_price.c ****     p = fabs(pcol[i]);
 7302               		.loc 1 981 0 is_stmt 0 discriminator 1
 7303 2d12 CE01      		movw r24,r28
 7304 2d14 8D5A      		subi r24,-83
 7305 2d16 9F4F      		sbci r25,-1
 7306 2d18 FC01      		movw r30,r24
 7307 2d1a 8081      		ld r24,Z
 7308 2d1c 9181      		ldd r25,Z+1
 7309 2d1e 8651      		subi r24,22
 7310 2d20 9E4F      		sbci r25,-2
 7311 2d22 FC01      		movw r30,r24
 7312 2d24 2081      		ld r18,Z
 7313 2d26 3181      		ldd r19,Z+1
 7314 2d28 8981      		ldd r24,Y+1
 7315 2d2a 9A81      		ldd r25,Y+2
 7316 2d2c 2817      		cp r18,r24
 7317 2d2e 3907      		cpc r19,r25
 7318 2d30 04F0      		brlt .+2
 7319 2d32 00C0      		rjmp .L284
 989:lp_solve_5.5/lp_price.c ****     }
 990:lp_solve_5.5/lp_price.c **** #ifdef Paranoia
 991:lp_solve_5.5/lp_price.c ****     else {
 992:lp_solve_5.5/lp_price.c ****       if(lp->spx_trace)
 993:lp_solve_5.5/lp_price.c ****         report(lp, FULL, "rowprim: Row %d with pivot " RESULTVALUEMASK " rejected as too small\n",
 994:lp_solve_5.5/lp_price.c ****                          i, p);
 995:lp_solve_5.5/lp_price.c ****     }
 996:lp_solve_5.5/lp_price.c **** #endif
 997:lp_solve_5.5/lp_price.c ****   }
 998:lp_solve_5.5/lp_price.c ****   if(xviol != NULL)
 7320               		.loc 1 998 0 is_stmt 1
 7321 2d34 CE01      		movw r24,r28
 7322 2d36 825A      		subi r24,-94
 7323 2d38 9F4F      		sbci r25,-1
 7324 2d3a FC01      		movw r30,r24
 7325 2d3c 8081      		ld r24,Z
 7326 2d3e 9181      		ldd r25,Z+1
 7327 2d40 892B      		or r24,r25
 7328 2d42 01F0      		breq .L285
 999:lp_solve_5.5/lp_price.c ****     *xviol = Htheta;
 7329               		.loc 1 999 0
 7330 2d44 CE01      		movw r24,r28
 7331 2d46 825A      		subi r24,-94
 7332 2d48 9F4F      		sbci r25,-1
 7333 2d4a FC01      		movw r30,r24
 7334 2d4c 2081      		ld r18,Z
 7335 2d4e 3181      		ldd r19,Z+1
 7336 2d50 8989      		ldd r24,Y+17
 7337 2d52 9A89      		ldd r25,Y+18
 7338 2d54 AB89      		ldd r26,Y+19
 7339 2d56 BC89      		ldd r27,Y+20
 7340 2d58 F901      		movw r30,r18
 7341 2d5a 8083      		st Z,r24
 7342 2d5c 9183      		std Z+1,r25
 7343 2d5e A283      		std Z+2,r26
 7344 2d60 B383      		std Z+3,r27
 7345               	.L285:
1000:lp_solve_5.5/lp_price.c ****   Htheta = 0;
 7346               		.loc 1 1000 0
 7347 2d62 198A      		std Y+17,__zero_reg__
 7348 2d64 1A8A      		std Y+18,__zero_reg__
 7349 2d66 1B8A      		std Y+19,__zero_reg__
 7350 2d68 1C8A      		std Y+20,__zero_reg__
1001:lp_solve_5.5/lp_price.c **** 
1002:lp_solve_5.5/lp_price.c ****   /* Update non-zero list based on the new pivot threshold */
1003:lp_solve_5.5/lp_price.c **** #ifdef UseRelativePivot_Primal
1004:lp_solve_5.5/lp_price.c **** /*  epspivot *= sqrt(lp->matA->dynrange) / lp->matA->infnorm; */
1005:lp_solve_5.5/lp_price.c ****   epspivot /= MAX(1, sqrt(lp->matA->colmax[colnr]));
1006:lp_solve_5.5/lp_price.c ****   iy = k;
1007:lp_solve_5.5/lp_price.c ****   k = 0;
1008:lp_solve_5.5/lp_price.c ****   p = 0;
1009:lp_solve_5.5/lp_price.c ****   for(ii = 1; ii <= iy; ii++) {
1010:lp_solve_5.5/lp_price.c ****     i = nzlist[ii];
1011:lp_solve_5.5/lp_price.c ****     p = fabs(pcol[i]);
1012:lp_solve_5.5/lp_price.c **** 
1013:lp_solve_5.5/lp_price.c ****     /* Compress the list of valid alternatives, if appropriate */
1014:lp_solve_5.5/lp_price.c ****     if(p > epspivot) {
1015:lp_solve_5.5/lp_price.c ****       k++;
1016:lp_solve_5.5/lp_price.c ****       nzlist[k] = i;
1017:lp_solve_5.5/lp_price.c ****     }
1018:lp_solve_5.5/lp_price.c **** #ifdef Paranoia
1019:lp_solve_5.5/lp_price.c ****     else {
1020:lp_solve_5.5/lp_price.c ****       if(lp->spx_trace)
1021:lp_solve_5.5/lp_price.c ****         report(lp, FULL, "rowprim: Row %d with pivot " RESULTVALUEMASK " rejected as too small\n",
1022:lp_solve_5.5/lp_price.c ****                          i, p);
1023:lp_solve_5.5/lp_price.c ****     }
1024:lp_solve_5.5/lp_price.c **** #endif
1025:lp_solve_5.5/lp_price.c ****   }
1026:lp_solve_5.5/lp_price.c **** #endif
1027:lp_solve_5.5/lp_price.c **** 
1028:lp_solve_5.5/lp_price.c ****   /* Initialize counters */
1029:lp_solve_5.5/lp_price.c ****   nzlist[0] = k;
 7351               		.loc 1 1029 0
 7352 2d6a 8F81      		ldd r24,Y+7
 7353 2d6c 9885      		ldd r25,Y+8
 7354 2d6e 2D81      		ldd r18,Y+5
 7355 2d70 3E81      		ldd r19,Y+6
 7356 2d72 FC01      		movw r30,r24
 7357 2d74 3183      		std Z+1,r19
 7358 2d76 2083      		st Z,r18
1030:lp_solve_5.5/lp_price.c ****   k = 0;
 7359               		.loc 1 1030 0
 7360 2d78 1E82      		std Y+6,__zero_reg__
 7361 2d7a 1D82      		std Y+5,__zero_reg__
 7362               	.L286:
1031:lp_solve_5.5/lp_price.c **** 
1032:lp_solve_5.5/lp_price.c **** Retry:
1033:lp_solve_5.5/lp_price.c ****   k++;
 7363               		.loc 1 1033 0
 7364 2d7c 8D81      		ldd r24,Y+5
 7365 2d7e 9E81      		ldd r25,Y+6
 7366 2d80 0196      		adiw r24,1
 7367 2d82 9E83      		std Y+6,r25
 7368 2d84 8D83      		std Y+5,r24
1034:lp_solve_5.5/lp_price.c ****   HarrisTwoPass = is_piv_mode(lp, PRICE_HARRISTWOPASS);
 7369               		.loc 1 1034 0
 7370 2d86 CE01      		movw r24,r28
 7371 2d88 8D5A      		subi r24,-83
 7372 2d8a 9F4F      		sbci r25,-1
 7373 2d8c FC01      		movw r30,r24
 7374 2d8e 8081      		ld r24,Z
 7375 2d90 9181      		ldd r25,Z+1
 7376 2d92 60E0      		ldi r22,0
 7377 2d94 70E1      		ldi r23,lo8(16)
 7378 2d96 0E94 0000 		call is_piv_mode
 7379 2d9a 8AA3      		std Y+34,r24
1035:lp_solve_5.5/lp_price.c ****   if(HarrisTwoPass)
 7380               		.loc 1 1035 0
 7381 2d9c 8AA1      		ldd r24,Y+34
 7382 2d9e 8823      		tst r24
 7383 2da0 01F0      		breq .L287
1036:lp_solve_5.5/lp_price.c ****     Hpass = 1;
 7384               		.loc 1 1036 0
 7385 2da2 81E0      		ldi r24,lo8(1)
 7386 2da4 90E0      		ldi r25,0
 7387 2da6 9C83      		std Y+4,r25
 7388 2da8 8B83      		std Y+3,r24
 7389 2daa 00C0      		rjmp .L288
 7390               	.L287:
1037:lp_solve_5.5/lp_price.c ****   else
1038:lp_solve_5.5/lp_price.c ****     Hpass = 2;
 7391               		.loc 1 1038 0
 7392 2dac 82E0      		ldi r24,lo8(2)
 7393 2dae 90E0      		ldi r25,0
 7394 2db0 9C83      		std Y+4,r25
 7395 2db2 8B83      		std Y+3,r24
 7396               	.L288:
1039:lp_solve_5.5/lp_price.c ****   current.theta    = lp->infinite;
 7397               		.loc 1 1039 0
 7398 2db4 CE01      		movw r24,r28
 7399 2db6 8D5A      		subi r24,-83
 7400 2db8 9F4F      		sbci r25,-1
 7401 2dba FC01      		movw r30,r24
 7402 2dbc 8081      		ld r24,Z
 7403 2dbe 9181      		ldd r25,Z+1
 7404 2dc0 865F      		subi r24,-10
 7405 2dc2 9C4F      		sbci r25,-4
 7406 2dc4 FC01      		movw r30,r24
 7407 2dc6 8081      		ld r24,Z
 7408 2dc8 9181      		ldd r25,Z+1
 7409 2dca A281      		ldd r26,Z+2
 7410 2dcc B381      		ldd r27,Z+3
 7411 2dce 89AB      		std Y+49,r24
 7412 2dd0 9AAB      		std Y+50,r25
 7413 2dd2 ABAB      		std Y+51,r26
 7414 2dd4 BCAB      		std Y+52,r27
1040:lp_solve_5.5/lp_price.c ****   current.pivot    = 0;
 7415               		.loc 1 1040 0
 7416 2dd6 1DAA      		std Y+53,__zero_reg__
 7417 2dd8 1EAA      		std Y+54,__zero_reg__
 7418 2dda 1FAA      		std Y+55,__zero_reg__
 7419 2ddc 18AE      		std Y+56,__zero_reg__
1041:lp_solve_5.5/lp_price.c ****   current.varno    = 0;
 7420               		.loc 1 1041 0
 7421 2dde 1EAE      		std Y+62,__zero_reg__
 7422 2de0 1DAE      		std Y+61,__zero_reg__
1042:lp_solve_5.5/lp_price.c ****   current.isdual   = FALSE;
 7423               		.loc 1 1042 0
 7424 2de2 CE01      		movw r24,r28
 7425 2de4 8F5B      		subi r24,-65
 7426 2de6 9F4F      		sbci r25,-1
 7427 2de8 FC01      		movw r30,r24
 7428 2dea 1082      		st Z,__zero_reg__
1043:lp_solve_5.5/lp_price.c ****   current.epspivot = epspivot;
 7429               		.loc 1 1043 0
 7430 2dec 898D      		ldd r24,Y+25
 7431 2dee 9A8D      		ldd r25,Y+26
 7432 2df0 AB8D      		ldd r26,Y+27
 7433 2df2 BC8D      		ldd r27,Y+28
 7434 2df4 89AF      		std Y+57,r24
 7435 2df6 9AAF      		std Y+58,r25
 7436 2df8 ABAF      		std Y+59,r26
 7437 2dfa BCAF      		std Y+60,r27
1044:lp_solve_5.5/lp_price.c ****   current.lp       = lp;
 7438               		.loc 1 1044 0
 7439 2dfc CE01      		movw r24,r28
 7440 2dfe 8D5A      		subi r24,-83
 7441 2e00 9F4F      		sbci r25,-1
 7442 2e02 FC01      		movw r30,r24
 7443 2e04 2081      		ld r18,Z
 7444 2e06 3181      		ldd r19,Z+1
 7445 2e08 CE01      		movw r24,r28
 7446 2e0a CF96      		adiw r24,63
 7447 2e0c FC01      		movw r30,r24
 7448 2e0e 3183      		std Z+1,r19
 7449 2e10 2083      		st Z,r18
1045:lp_solve_5.5/lp_price.c ****   candidate.epspivot = epspivot;
 7450               		.loc 1 1045 0
 7451 2e12 9E01      		movw r18,r28
 7452 2e14 2E5B      		subi r18,-66
 7453 2e16 3F4F      		sbci r19,-1
 7454 2e18 898D      		ldd r24,Y+25
 7455 2e1a 9A8D      		ldd r25,Y+26
 7456 2e1c AB8D      		ldd r26,Y+27
 7457 2e1e BC8D      		ldd r27,Y+28
 7458 2e20 F901      		movw r30,r18
 7459 2e22 8087      		std Z+8,r24
 7460 2e24 9187      		std Z+9,r25
 7461 2e26 A287      		std Z+10,r26
 7462 2e28 B387      		std Z+11,r27
1046:lp_solve_5.5/lp_price.c ****   candidate.isdual = FALSE;
 7463               		.loc 1 1046 0
 7464 2e2a CE01      		movw r24,r28
 7465 2e2c 8E5B      		subi r24,-66
 7466 2e2e 9F4F      		sbci r25,-1
 7467 2e30 FC01      		movw r30,r24
 7468 2e32 108A      		std Z+16,__zero_reg__
1047:lp_solve_5.5/lp_price.c ****   candidate.lp     = lp;
 7469               		.loc 1 1047 0
 7470 2e34 CE01      		movw r24,r28
 7471 2e36 8E5B      		subi r24,-66
 7472 2e38 9F4F      		sbci r25,-1
 7473 2e3a 9E01      		movw r18,r28
 7474 2e3c 2D5A      		subi r18,-83
 7475 2e3e 3F4F      		sbci r19,-1
 7476 2e40 F901      		movw r30,r18
 7477 2e42 2081      		ld r18,Z
 7478 2e44 3181      		ldd r19,Z+1
 7479 2e46 FC01      		movw r30,r24
 7480 2e48 3787      		std Z+15,r19
 7481 2e4a 2687      		std Z+14,r18
1048:lp_solve_5.5/lp_price.c ****   savef  = 0;
 7482               		.loc 1 1048 0
 7483 2e4c 1986      		std Y+9,__zero_reg__
 7484 2e4e 1A86      		std Y+10,__zero_reg__
 7485 2e50 1B86      		std Y+11,__zero_reg__
 7486 2e52 1C86      		std Y+12,__zero_reg__
1049:lp_solve_5.5/lp_price.c ****   for(; Hpass <= 2; Hpass++) {
 7487               		.loc 1 1049 0
 7488 2e54 00C0      		rjmp .L289
 7489               	.L311:
1050:lp_solve_5.5/lp_price.c ****     Htheta = lp->infinite;
 7490               		.loc 1 1050 0
 7491 2e56 CE01      		movw r24,r28
 7492 2e58 8D5A      		subi r24,-83
 7493 2e5a 9F4F      		sbci r25,-1
 7494 2e5c FC01      		movw r30,r24
 7495 2e5e 8081      		ld r24,Z
 7496 2e60 9181      		ldd r25,Z+1
 7497 2e62 865F      		subi r24,-10
 7498 2e64 9C4F      		sbci r25,-4
 7499 2e66 FC01      		movw r30,r24
 7500 2e68 8081      		ld r24,Z
 7501 2e6a 9181      		ldd r25,Z+1
 7502 2e6c A281      		ldd r26,Z+2
 7503 2e6e B381      		ldd r27,Z+3
 7504 2e70 898B      		std Y+17,r24
 7505 2e72 9A8B      		std Y+18,r25
 7506 2e74 AB8B      		std Y+19,r26
 7507 2e76 BC8B      		std Y+20,r27
1051:lp_solve_5.5/lp_price.c ****     if(Hpass == 1) {
 7508               		.loc 1 1051 0
 7509 2e78 8B81      		ldd r24,Y+3
 7510 2e7a 9C81      		ldd r25,Y+4
 7511 2e7c 0197      		sbiw r24,1
 7512 2e7e 01F4      		brne .L290
1052:lp_solve_5.5/lp_price.c ****       Hlimit = lp->infinite;           /* Don't apply any limit in the first pass */
 7513               		.loc 1 1052 0
 7514 2e80 CE01      		movw r24,r28
 7515 2e82 8D5A      		subi r24,-83
 7516 2e84 9F4F      		sbci r25,-1
 7517 2e86 FC01      		movw r30,r24
 7518 2e88 8081      		ld r24,Z
 7519 2e8a 9181      		ldd r25,Z+1
 7520 2e8c 865F      		subi r24,-10
 7521 2e8e 9C4F      		sbci r25,-4
 7522 2e90 FC01      		movw r30,r24
 7523 2e92 8081      		ld r24,Z
 7524 2e94 9181      		ldd r25,Z+1
 7525 2e96 A281      		ldd r26,Z+2
 7526 2e98 B381      		ldd r27,Z+3
 7527 2e9a 8D8B      		std Y+21,r24
 7528 2e9c 9E8B      		std Y+22,r25
 7529 2e9e AF8B      		std Y+23,r26
 7530 2ea0 B88F      		std Y+24,r27
1053:lp_solve_5.5/lp_price.c ****       Heps   = epspivot/lp->epsprimal; /* Scaled to lp->epsprimal used in compute_theta() */
 7531               		.loc 1 1053 0
 7532 2ea2 CE01      		movw r24,r28
 7533 2ea4 8D5A      		subi r24,-83
 7534 2ea6 9F4F      		sbci r25,-1
 7535 2ea8 FC01      		movw r30,r24
 7536 2eaa 8081      		ld r24,Z
 7537 2eac 9181      		ldd r25,Z+1
 7538 2eae 865E      		subi r24,-26
 7539 2eb0 9C4F      		sbci r25,-4
 7540 2eb2 FC01      		movw r30,r24
 7541 2eb4 8081      		ld r24,Z
 7542 2eb6 9181      		ldd r25,Z+1
 7543 2eb8 A281      		ldd r26,Z+2
 7544 2eba B381      		ldd r27,Z+3
 7545 2ebc 9C01      		movw r18,r24
 7546 2ebe AD01      		movw r20,r26
 7547 2ec0 698D      		ldd r22,Y+25
 7548 2ec2 7A8D      		ldd r23,Y+26
 7549 2ec4 8B8D      		ldd r24,Y+27
 7550 2ec6 9C8D      		ldd r25,Y+28
 7551 2ec8 0E94 0000 		call __divsf3
 7552 2ecc DC01      		movw r26,r24
 7553 2ece CB01      		movw r24,r22
 7554 2ed0 8D87      		std Y+13,r24
 7555 2ed2 9E87      		std Y+14,r25
 7556 2ed4 AF87      		std Y+15,r26
 7557 2ed6 B88B      		std Y+16,r27
 7558 2ed8 00C0      		rjmp .L291
 7559               	.L290:
1054:lp_solve_5.5/lp_price.c ****     }
1055:lp_solve_5.5/lp_price.c ****     else {
1056:lp_solve_5.5/lp_price.c ****       Hlimit = current.theta;          /* This is the smallest Theta of the first pass */
 7560               		.loc 1 1056 0
 7561 2eda 89A9      		ldd r24,Y+49
 7562 2edc 9AA9      		ldd r25,Y+50
 7563 2ede ABA9      		ldd r26,Y+51
 7564 2ee0 BCA9      		ldd r27,Y+52
 7565 2ee2 8D8B      		std Y+21,r24
 7566 2ee4 9E8B      		std Y+22,r25
 7567 2ee6 AF8B      		std Y+23,r26
 7568 2ee8 B88F      		std Y+24,r27
1057:lp_solve_5.5/lp_price.c ****       Heps   = 0.0;
 7569               		.loc 1 1057 0
 7570 2eea 1D86      		std Y+13,__zero_reg__
 7571 2eec 1E86      		std Y+14,__zero_reg__
 7572 2eee 1F86      		std Y+15,__zero_reg__
 7573 2ef0 188A      		std Y+16,__zero_reg__
 7574               	.L291:
1058:lp_solve_5.5/lp_price.c ****     }
1059:lp_solve_5.5/lp_price.c ****     current.theta = lp->infinite;
 7575               		.loc 1 1059 0
 7576 2ef2 CE01      		movw r24,r28
 7577 2ef4 8D5A      		subi r24,-83
 7578 2ef6 9F4F      		sbci r25,-1
 7579 2ef8 FC01      		movw r30,r24
 7580 2efa 8081      		ld r24,Z
 7581 2efc 9181      		ldd r25,Z+1
 7582 2efe 865F      		subi r24,-10
 7583 2f00 9C4F      		sbci r25,-4
 7584 2f02 FC01      		movw r30,r24
 7585 2f04 8081      		ld r24,Z
 7586 2f06 9181      		ldd r25,Z+1
 7587 2f08 A281      		ldd r26,Z+2
 7588 2f0a B381      		ldd r27,Z+3
 7589 2f0c 89AB      		std Y+49,r24
 7590 2f0e 9AAB      		std Y+50,r25
 7591 2f10 ABAB      		std Y+51,r26
 7592 2f12 BCAB      		std Y+52,r27
1060:lp_solve_5.5/lp_price.c ****     current.pivot = 0;
 7593               		.loc 1 1060 0
 7594 2f14 1DAA      		std Y+53,__zero_reg__
 7595 2f16 1EAA      		std Y+54,__zero_reg__
 7596 2f18 1FAA      		std Y+55,__zero_reg__
 7597 2f1a 18AE      		std Y+56,__zero_reg__
1061:lp_solve_5.5/lp_price.c ****     current.varno = 0;
 7598               		.loc 1 1061 0
 7599 2f1c 1EAE      		std Y+62,__zero_reg__
 7600 2f1e 1DAE      		std Y+61,__zero_reg__
1062:lp_solve_5.5/lp_price.c ****     savef = 0;
 7601               		.loc 1 1062 0
 7602 2f20 1986      		std Y+9,__zero_reg__
 7603 2f22 1A86      		std Y+10,__zero_reg__
 7604 2f24 1B86      		std Y+11,__zero_reg__
 7605 2f26 1C86      		std Y+12,__zero_reg__
1063:lp_solve_5.5/lp_price.c **** 
1064:lp_solve_5.5/lp_price.c ****     ii = 1;
 7606               		.loc 1 1064 0
 7607 2f28 81E0      		ldi r24,lo8(1)
 7608 2f2a 90E0      		ldi r25,0
 7609 2f2c 9CA7      		std Y+44,r25
 7610 2f2e 8BA7      		std Y+43,r24
1065:lp_solve_5.5/lp_price.c ****     iy = nzlist[0];
 7611               		.loc 1 1065 0
 7612 2f30 8F81      		ldd r24,Y+7
 7613 2f32 9885      		ldd r25,Y+8
 7614 2f34 FC01      		movw r30,r24
 7615 2f36 8081      		ld r24,Z
 7616 2f38 9181      		ldd r25,Z+1
 7617 2f3a 9EA7      		std Y+46,r25
 7618 2f3c 8DA7      		std Y+45,r24
1066:lp_solve_5.5/lp_price.c ****     makePriceLoop(lp, &ii, &iy, &iz);
 7619               		.loc 1 1066 0
 7620 2f3e 9E01      		movw r18,r28
 7621 2f40 215D      		subi r18,-47
 7622 2f42 3F4F      		sbci r19,-1
 7623 2f44 AE01      		movw r20,r28
 7624 2f46 435D      		subi r20,-45
 7625 2f48 5F4F      		sbci r21,-1
 7626 2f4a BE01      		movw r22,r28
 7627 2f4c 655D      		subi r22,-43
 7628 2f4e 7F4F      		sbci r23,-1
 7629 2f50 CE01      		movw r24,r28
 7630 2f52 8D5A      		subi r24,-83
 7631 2f54 9F4F      		sbci r25,-1
 7632 2f56 FC01      		movw r30,r24
 7633 2f58 8081      		ld r24,Z
 7634 2f5a 9181      		ldd r25,Z+1
 7635 2f5c 0E94 0000 		call makePriceLoop
1067:lp_solve_5.5/lp_price.c ****     iy *= iz;
 7636               		.loc 1 1067 0
 7637 2f60 4DA5      		ldd r20,Y+45
 7638 2f62 5EA5      		ldd r21,Y+46
 7639 2f64 2FA5      		ldd r18,Y+47
 7640 2f66 38A9      		ldd r19,Y+48
 7641 2f68 429F      		mul r20,r18
 7642 2f6a C001      		movw r24,r0
 7643 2f6c 439F      		mul r20,r19
 7644 2f6e 900D      		add r25,r0
 7645 2f70 529F      		mul r21,r18
 7646 2f72 900D      		add r25,r0
 7647 2f74 1124      		clr r1
 7648 2f76 9EA7      		std Y+46,r25
 7649 2f78 8DA7      		std Y+45,r24
1068:lp_solve_5.5/lp_price.c ****     for(; ii*iz <= iy; ii += iz) {
 7650               		.loc 1 1068 0
 7651 2f7a 00C0      		rjmp .L292
 7652               	.L310:
1069:lp_solve_5.5/lp_price.c ****       i = nzlist[ii];
 7653               		.loc 1 1069 0
 7654 2f7c 8BA5      		ldd r24,Y+43
 7655 2f7e 9CA5      		ldd r25,Y+44
 7656 2f80 880F      		lsl r24
 7657 2f82 991F      		rol r25
 7658 2f84 2F81      		ldd r18,Y+7
 7659 2f86 3885      		ldd r19,Y+8
 7660 2f88 820F      		add r24,r18
 7661 2f8a 931F      		adc r25,r19
 7662 2f8c FC01      		movw r30,r24
 7663 2f8e 8081      		ld r24,Z
 7664 2f90 9181      		ldd r25,Z+1
 7665 2f92 9A83      		std Y+2,r25
 7666 2f94 8983      		std Y+1,r24
1070:lp_solve_5.5/lp_price.c ****       f = pcol[i];
 7667               		.loc 1 1070 0
 7668 2f96 8981      		ldd r24,Y+1
 7669 2f98 9A81      		ldd r25,Y+2
 7670 2f9a 880F      		lsl r24
 7671 2f9c 991F      		rol r25
 7672 2f9e 880F      		lsl r24
 7673 2fa0 991F      		rol r25
 7674 2fa2 9E01      		movw r18,r28
 7675 2fa4 275A      		subi r18,-89
 7676 2fa6 3F4F      		sbci r19,-1
 7677 2fa8 F901      		movw r30,r18
 7678 2faa 2081      		ld r18,Z
 7679 2fac 3181      		ldd r19,Z+1
 7680 2fae 820F      		add r24,r18
 7681 2fb0 931F      		adc r25,r19
 7682 2fb2 FC01      		movw r30,r24
 7683 2fb4 8081      		ld r24,Z
 7684 2fb6 9181      		ldd r25,Z+1
 7685 2fb8 A281      		ldd r26,Z+2
 7686 2fba B381      		ldd r27,Z+3
 7687 2fbc 8FA3      		std Y+39,r24
 7688 2fbe 98A7      		std Y+40,r25
 7689 2fc0 A9A7      		std Y+41,r26
 7690 2fc2 BAA7      		std Y+42,r27
1071:lp_solve_5.5/lp_price.c ****       candidate.theta = f;
 7691               		.loc 1 1071 0
 7692 2fc4 9E01      		movw r18,r28
 7693 2fc6 2E5B      		subi r18,-66
 7694 2fc8 3F4F      		sbci r19,-1
 7695 2fca 8FA1      		ldd r24,Y+39
 7696 2fcc 98A5      		ldd r25,Y+40
 7697 2fce A9A5      		ldd r26,Y+41
 7698 2fd0 BAA5      		ldd r27,Y+42
 7699 2fd2 F901      		movw r30,r18
 7700 2fd4 8083      		st Z,r24
 7701 2fd6 9183      		std Z+1,r25
 7702 2fd8 A283      		std Z+2,r26
 7703 2fda B383      		std Z+3,r27
1072:lp_solve_5.5/lp_price.c ****       candidate.pivot = f;
 7704               		.loc 1 1072 0
 7705 2fdc 9E01      		movw r18,r28
 7706 2fde 2E5B      		subi r18,-66
 7707 2fe0 3F4F      		sbci r19,-1
 7708 2fe2 8FA1      		ldd r24,Y+39
 7709 2fe4 98A5      		ldd r25,Y+40
 7710 2fe6 A9A5      		ldd r26,Y+41
 7711 2fe8 BAA5      		ldd r27,Y+42
 7712 2fea F901      		movw r30,r18
 7713 2fec 8483      		std Z+4,r24
 7714 2fee 9583      		std Z+5,r25
 7715 2ff0 A683      		std Z+6,r26
 7716 2ff2 B783      		std Z+7,r27
1073:lp_solve_5.5/lp_price.c ****       candidate.varno = i;
 7717               		.loc 1 1073 0
 7718 2ff4 CE01      		movw r24,r28
 7719 2ff6 8E5B      		subi r24,-66
 7720 2ff8 9F4F      		sbci r25,-1
 7721 2ffa 2981      		ldd r18,Y+1
 7722 2ffc 3A81      		ldd r19,Y+2
 7723 2ffe FC01      		movw r30,r24
 7724 3000 3587      		std Z+13,r19
 7725 3002 2487      		std Z+12,r18
1074:lp_solve_5.5/lp_price.c **** 
1075:lp_solve_5.5/lp_price.c ****       /*i =*/ compute_theta(lp, i, &candidate.theta, isupper,
1076:lp_solve_5.5/lp_price.c ****                             my_if(lp->upbo[lp->var_basic[i]] < lp->epsprimal, Heps/10, Heps), TRUE)
 7726               		.loc 1 1076 0
 7727 3004 CE01      		movw r24,r28
 7728 3006 8D5A      		subi r24,-83
 7729 3008 9F4F      		sbci r25,-1
 7730 300a FC01      		movw r30,r24
 7731 300c 8081      		ld r24,Z
 7732 300e 9181      		ldd r25,Z+1
 7733 3010 8055      		subi r24,80
 7734 3012 9D4F      		sbci r25,-3
 7735 3014 FC01      		movw r30,r24
 7736 3016 2081      		ld r18,Z
 7737 3018 3181      		ldd r19,Z+1
 7738 301a CE01      		movw r24,r28
 7739 301c 8D5A      		subi r24,-83
 7740 301e 9F4F      		sbci r25,-1
 7741 3020 FC01      		movw r30,r24
 7742 3022 8081      		ld r24,Z
 7743 3024 9181      		ldd r25,Z+1
 7744 3026 8453      		subi r24,52
 7745 3028 9D4F      		sbci r25,-3
 7746 302a FC01      		movw r30,r24
 7747 302c 4081      		ld r20,Z
 7748 302e 5181      		ldd r21,Z+1
 7749 3030 8981      		ldd r24,Y+1
 7750 3032 9A81      		ldd r25,Y+2
 7751 3034 880F      		lsl r24
 7752 3036 991F      		rol r25
 7753 3038 840F      		add r24,r20
 7754 303a 951F      		adc r25,r21
 7755 303c FC01      		movw r30,r24
 7756 303e 8081      		ld r24,Z
 7757 3040 9181      		ldd r25,Z+1
 7758 3042 880F      		lsl r24
 7759 3044 991F      		rol r25
 7760 3046 880F      		lsl r24
 7761 3048 991F      		rol r25
 7762 304a 820F      		add r24,r18
 7763 304c 931F      		adc r25,r19
 7764 304e FC01      		movw r30,r24
 7765 3050 8081      		ld r24,Z
 7766 3052 9181      		ldd r25,Z+1
 7767 3054 A281      		ldd r26,Z+2
 7768 3056 B381      		ldd r27,Z+3
 7769 3058 9E01      		movw r18,r28
 7770 305a 2D5A      		subi r18,-83
 7771 305c 3F4F      		sbci r19,-1
 7772 305e F901      		movw r30,r18
 7773 3060 2081      		ld r18,Z
 7774 3062 3181      		ldd r19,Z+1
 7775 3064 265E      		subi r18,-26
 7776 3066 3C4F      		sbci r19,-4
 7777 3068 F901      		movw r30,r18
 7778 306a 2081      		ld r18,Z
 7779 306c 3181      		ldd r19,Z+1
 7780 306e 4281      		ldd r20,Z+2
 7781 3070 5381      		ldd r21,Z+3
1075:lp_solve_5.5/lp_price.c ****                             my_if(lp->upbo[lp->var_basic[i]] < lp->epsprimal, Heps/10, Heps), TRUE)
 7782               		.loc 1 1075 0
 7783 3072 BC01      		movw r22,r24
 7784 3074 CD01      		movw r24,r26
 7785 3076 0E94 0000 		call __ltsf2
 7786 307a 8823      		tst r24
 7787 307c 04F4      		brge .L337
1075:lp_solve_5.5/lp_price.c ****                             my_if(lp->upbo[lp->var_basic[i]] < lp->epsprimal, Heps/10, Heps), TRUE)
 7788               		.loc 1 1075 0 is_stmt 0 discriminator 1
 7789 307e 20E0      		ldi r18,0
 7790 3080 30E0      		ldi r19,0
 7791 3082 40E2      		ldi r20,lo8(32)
 7792 3084 51E4      		ldi r21,lo8(65)
 7793 3086 6D85      		ldd r22,Y+13
 7794 3088 7E85      		ldd r23,Y+14
 7795 308a 8F85      		ldd r24,Y+15
 7796 308c 9889      		ldd r25,Y+16
 7797 308e 0E94 0000 		call __divsf3
 7798 3092 DC01      		movw r26,r24
 7799 3094 CB01      		movw r24,r22
 7800 3096 00C0      		rjmp .L295
 7801               	.L337:
1075:lp_solve_5.5/lp_price.c ****                             my_if(lp->upbo[lp->var_basic[i]] < lp->epsprimal, Heps/10, Heps), TRUE)
 7802               		.loc 1 1075 0 discriminator 2
 7803 3098 8D85      		ldd r24,Y+13
 7804 309a 9E85      		ldd r25,Y+14
 7805 309c AF85      		ldd r26,Y+15
 7806 309e B889      		ldd r27,Y+16
 7807               	.L295:
1075:lp_solve_5.5/lp_price.c ****                             my_if(lp->upbo[lp->var_basic[i]] < lp->epsprimal, Heps/10, Heps), TRUE)
 7808               		.loc 1 1075 0 discriminator 4
 7809 30a0 29A1      		ldd r18,Y+33
 7810 30a2 A22E      		mov r10,r18
 7811 30a4 B12C      		mov r11,__zero_reg__
 7812 30a6 AE01      		movw r20,r28
 7813 30a8 4E5B      		subi r20,-66
 7814 30aa 5F4F      		sbci r21,-1
 7815 30ac 6981      		ldd r22,Y+1
 7816 30ae 7A81      		ldd r23,Y+2
 7817 30b0 9E01      		movw r18,r28
 7818 30b2 2D5A      		subi r18,-83
 7819 30b4 3F4F      		sbci r19,-1
 7820 30b6 F901      		movw r30,r18
 7821 30b8 0190      		ld __tmp_reg__,Z+
 7822 30ba F081      		ld r31,Z
 7823 30bc E02D      		mov r30,__tmp_reg__
 7824 30be A296      		adiw r28,96-62
 7825 30c0 FFAF      		std Y+63,r31
 7826 30c2 EEAF      		std Y+62,r30
 7827 30c4 A297      		sbiw r28,96-62
 7828 30c6 CC24      		clr r12
 7829 30c8 C394      		inc r12
 7830 30ca 7C01      		movw r14,r24
 7831 30cc 8D01      		movw r16,r26
 7832 30ce 9501      		movw r18,r10
 7833 30d0 A296      		adiw r28,96-62
 7834 30d2 8EAD      		ldd r24,Y+62
 7835 30d4 9FAD      		ldd r25,Y+63
 7836 30d6 A297      		sbiw r28,96-62
 7837 30d8 0E94 0000 		call compute_theta
1077:lp_solve_5.5/lp_price.c **** 
1078:lp_solve_5.5/lp_price.c ****       if(fabs(candidate.theta) >= lp->infinite) {
 7838               		.loc 1 1078 0 is_stmt 1 discriminator 4
 7839 30dc CE01      		movw r24,r28
 7840 30de 8E5B      		subi r24,-66
 7841 30e0 9F4F      		sbci r25,-1
 7842 30e2 FC01      		movw r30,r24
 7843 30e4 8081      		ld r24,Z
 7844 30e6 9181      		ldd r25,Z+1
 7845 30e8 A281      		ldd r26,Z+2
 7846 30ea B381      		ldd r27,Z+3
 7847 30ec BF77      		andi r27,0x7f
 7848 30ee 9E01      		movw r18,r28
 7849 30f0 2D5A      		subi r18,-83
 7850 30f2 3F4F      		sbci r19,-1
 7851 30f4 F901      		movw r30,r18
 7852 30f6 2081      		ld r18,Z
 7853 30f8 3181      		ldd r19,Z+1
 7854 30fa 265F      		subi r18,-10
 7855 30fc 3C4F      		sbci r19,-4
 7856 30fe F901      		movw r30,r18
 7857 3100 2081      		ld r18,Z
 7858 3102 3181      		ldd r19,Z+1
 7859 3104 4281      		ldd r20,Z+2
 7860 3106 5381      		ldd r21,Z+3
 7861 3108 BC01      		movw r22,r24
 7862 310a CD01      		movw r24,r26
 7863 310c 0E94 0000 		call __gesf2
 7864 3110 8823      		tst r24
 7865 3112 04F0      		brlt .L338
1079:lp_solve_5.5/lp_price.c ****         savef = f;
 7866               		.loc 1 1079 0
 7867 3114 8FA1      		ldd r24,Y+39
 7868 3116 98A5      		ldd r25,Y+40
 7869 3118 A9A5      		ldd r26,Y+41
 7870 311a BAA5      		ldd r27,Y+42
 7871 311c 8987      		std Y+9,r24
 7872 311e 9A87      		std Y+10,r25
 7873 3120 AB87      		std Y+11,r26
 7874 3122 BC87      		std Y+12,r27
1080:lp_solve_5.5/lp_price.c ****         candidate.theta = 2*lp->infinite;
 7875               		.loc 1 1080 0
 7876 3124 CE01      		movw r24,r28
 7877 3126 8D5A      		subi r24,-83
 7878 3128 9F4F      		sbci r25,-1
 7879 312a FC01      		movw r30,r24
 7880 312c 8081      		ld r24,Z
 7881 312e 9181      		ldd r25,Z+1
 7882 3130 865F      		subi r24,-10
 7883 3132 9C4F      		sbci r25,-4
 7884 3134 FC01      		movw r30,r24
 7885 3136 8081      		ld r24,Z
 7886 3138 9181      		ldd r25,Z+1
 7887 313a A281      		ldd r26,Z+2
 7888 313c B381      		ldd r27,Z+3
 7889 313e 9C01      		movw r18,r24
 7890 3140 AD01      		movw r20,r26
 7891 3142 BC01      		movw r22,r24
 7892 3144 CD01      		movw r24,r26
 7893 3146 0E94 0000 		call __addsf3
 7894 314a DC01      		movw r26,r24
 7895 314c CB01      		movw r24,r22
 7896 314e 9E01      		movw r18,r28
 7897 3150 2E5B      		subi r18,-66
 7898 3152 3F4F      		sbci r19,-1
 7899 3154 F901      		movw r30,r18
 7900 3156 8083      		st Z,r24
 7901 3158 9183      		std Z+1,r25
 7902 315a A283      		std Z+2,r26
 7903 315c B383      		std Z+3,r27
1081:lp_solve_5.5/lp_price.c ****         continue;
 7904               		.loc 1 1081 0
 7905 315e 00C0      		rjmp .L298
 7906               	.L338:
1082:lp_solve_5.5/lp_price.c ****       }
1083:lp_solve_5.5/lp_price.c **** 
1084:lp_solve_5.5/lp_price.c ****       /* Find the candidate leaving variable according to strategy (smallest theta) */
1085:lp_solve_5.5/lp_price.c ****       if((Hpass == 2) && (candidate.theta > Hlimit))
 7907               		.loc 1 1085 0
 7908 3160 8B81      		ldd r24,Y+3
 7909 3162 9C81      		ldd r25,Y+4
 7910 3164 0297      		sbiw r24,2
 7911 3166 01F4      		brne .L299
 7912               		.loc 1 1085 0 is_stmt 0 discriminator 1
 7913 3168 CE01      		movw r24,r28
 7914 316a 8E5B      		subi r24,-66
 7915 316c 9F4F      		sbci r25,-1
 7916 316e FC01      		movw r30,r24
 7917 3170 8081      		ld r24,Z
 7918 3172 9181      		ldd r25,Z+1
 7919 3174 A281      		ldd r26,Z+2
 7920 3176 B381      		ldd r27,Z+3
 7921 3178 2D89      		ldd r18,Y+21
 7922 317a 3E89      		ldd r19,Y+22
 7923 317c 4F89      		ldd r20,Y+23
 7924 317e 588D      		ldd r21,Y+24
 7925 3180 BC01      		movw r22,r24
 7926 3182 CD01      		movw r24,r26
 7927 3184 0E94 0000 		call __gtsf2
 7928 3188 1816      		cp __zero_reg__,r24
 7929 318a 04F4      		brge .+2
 7930 318c 00C0      		rjmp .L340
 7931               	.L299:
1086:lp_solve_5.5/lp_price.c ****         continue;
1087:lp_solve_5.5/lp_price.c **** 
1088:lp_solve_5.5/lp_price.c ****       /* Give a slight preference to fixed variables (mainly equality slacks) */
1089:lp_solve_5.5/lp_price.c ****       if(forceoutEQ) {
 7932               		.loc 1 1089 0 is_stmt 1
 7933 318e CE01      		movw r24,r28
 7934 3190 835A      		subi r24,-93
 7935 3192 9F4F      		sbci r25,-1
 7936 3194 FC01      		movw r30,r24
 7937 3196 8081      		ld r24,Z
 7938 3198 8823      		tst r24
 7939 319a 01F4      		brne .+2
 7940 319c 00C0      		rjmp .L301
1090:lp_solve_5.5/lp_price.c ****         p = candidate.pivot;
 7941               		.loc 1 1090 0
 7942 319e CE01      		movw r24,r28
 7943 31a0 8E5B      		subi r24,-66
 7944 31a2 9F4F      		sbci r25,-1
 7945 31a4 FC01      		movw r30,r24
 7946 31a6 8481      		ldd r24,Z+4
 7947 31a8 9581      		ldd r25,Z+5
 7948 31aa A681      		ldd r26,Z+6
 7949 31ac B781      		ldd r27,Z+7
 7950 31ae 8D8F      		std Y+29,r24
 7951 31b0 9E8F      		std Y+30,r25
 7952 31b2 AF8F      		std Y+31,r26
 7953 31b4 B8A3      		std Y+32,r27
1091:lp_solve_5.5/lp_price.c ****         if(lp->upbo[lp->var_basic[i]] < lp->epsprimal) {
 7954               		.loc 1 1091 0
 7955 31b6 CE01      		movw r24,r28
 7956 31b8 8D5A      		subi r24,-83
 7957 31ba 9F4F      		sbci r25,-1
 7958 31bc FC01      		movw r30,r24
 7959 31be 8081      		ld r24,Z
 7960 31c0 9181      		ldd r25,Z+1
 7961 31c2 8055      		subi r24,80
 7962 31c4 9D4F      		sbci r25,-3
 7963 31c6 FC01      		movw r30,r24
 7964 31c8 2081      		ld r18,Z
 7965 31ca 3181      		ldd r19,Z+1
 7966 31cc CE01      		movw r24,r28
 7967 31ce 8D5A      		subi r24,-83
 7968 31d0 9F4F      		sbci r25,-1
 7969 31d2 FC01      		movw r30,r24
 7970 31d4 8081      		ld r24,Z
 7971 31d6 9181      		ldd r25,Z+1
 7972 31d8 8453      		subi r24,52
 7973 31da 9D4F      		sbci r25,-3
 7974 31dc FC01      		movw r30,r24
 7975 31de 4081      		ld r20,Z
 7976 31e0 5181      		ldd r21,Z+1
 7977 31e2 8981      		ldd r24,Y+1
 7978 31e4 9A81      		ldd r25,Y+2
 7979 31e6 880F      		lsl r24
 7980 31e8 991F      		rol r25
 7981 31ea 840F      		add r24,r20
 7982 31ec 951F      		adc r25,r21
 7983 31ee FC01      		movw r30,r24
 7984 31f0 8081      		ld r24,Z
 7985 31f2 9181      		ldd r25,Z+1
 7986 31f4 880F      		lsl r24
 7987 31f6 991F      		rol r25
 7988 31f8 880F      		lsl r24
 7989 31fa 991F      		rol r25
 7990 31fc 820F      		add r24,r18
 7991 31fe 931F      		adc r25,r19
 7992 3200 FC01      		movw r30,r24
 7993 3202 8081      		ld r24,Z
 7994 3204 9181      		ldd r25,Z+1
 7995 3206 A281      		ldd r26,Z+2
 7996 3208 B381      		ldd r27,Z+3
 7997 320a 9E01      		movw r18,r28
 7998 320c 2D5A      		subi r18,-83
 7999 320e 3F4F      		sbci r19,-1
 8000 3210 F901      		movw r30,r18
 8001 3212 2081      		ld r18,Z
 8002 3214 3181      		ldd r19,Z+1
 8003 3216 265E      		subi r18,-26
 8004 3218 3C4F      		sbci r19,-4
 8005 321a F901      		movw r30,r18
 8006 321c 2081      		ld r18,Z
 8007 321e 3181      		ldd r19,Z+1
 8008 3220 4281      		ldd r20,Z+2
 8009 3222 5381      		ldd r21,Z+3
 8010 3224 BC01      		movw r22,r24
 8011 3226 CD01      		movw r24,r26
 8012 3228 0E94 0000 		call __ltsf2
 8013 322c 8823      		tst r24
 8014 322e 04F0      		brlt .+2
 8015 3230 00C0      		rjmp .L301
1092:lp_solve_5.5/lp_price.c ****           /* Give an extra early boost to equality slack elimination, if specified */
1093:lp_solve_5.5/lp_price.c ****           if(forceoutEQ == AUTOMATIC)
 8016               		.loc 1 1093 0
 8017 3232 CE01      		movw r24,r28
 8018 3234 835A      		subi r24,-93
 8019 3236 9F4F      		sbci r25,-1
 8020 3238 FC01      		movw r30,r24
 8021 323a 8081      		ld r24,Z
 8022 323c 8230      		cpi r24,lo8(2)
 8023 323e 01F4      		brne .L303
1094:lp_solve_5.5/lp_price.c ****             candidate.pivot *= 1.0+lp->epspivot;
 8024               		.loc 1 1094 0
 8025 3240 CE01      		movw r24,r28
 8026 3242 8E5B      		subi r24,-66
 8027 3244 9F4F      		sbci r25,-1
 8028 3246 FC01      		movw r30,r24
 8029 3248 C480      		ldd r12,Z+4
 8030 324a D580      		ldd r13,Z+5
 8031 324c E680      		ldd r14,Z+6
 8032 324e F780      		ldd r15,Z+7
 8033 3250 CE01      		movw r24,r28
 8034 3252 8D5A      		subi r24,-83
 8035 3254 9F4F      		sbci r25,-1
 8036 3256 FC01      		movw r30,r24
 8037 3258 8081      		ld r24,Z
 8038 325a 9181      		ldd r25,Z+1
 8039 325c 8E5D      		subi r24,-34
 8040 325e 9C4F      		sbci r25,-4
 8041 3260 FC01      		movw r30,r24
 8042 3262 8081      		ld r24,Z
 8043 3264 9181      		ldd r25,Z+1
 8044 3266 A281      		ldd r26,Z+2
 8045 3268 B381      		ldd r27,Z+3
 8046 326a 20E0      		ldi r18,0
 8047 326c 30E0      		ldi r19,0
 8048 326e 40E8      		ldi r20,lo8(-128)
 8049 3270 5FE3      		ldi r21,lo8(63)
 8050 3272 BC01      		movw r22,r24
 8051 3274 CD01      		movw r24,r26
 8052 3276 0E94 0000 		call __addsf3
 8053 327a DC01      		movw r26,r24
 8054 327c CB01      		movw r24,r22
 8055 327e 9C01      		movw r18,r24
 8056 3280 AD01      		movw r20,r26
 8057 3282 C701      		movw r24,r14
 8058 3284 B601      		movw r22,r12
 8059 3286 0E94 0000 		call __mulsf3
 8060 328a DC01      		movw r26,r24
 8061 328c CB01      		movw r24,r22
 8062 328e 9E01      		movw r18,r28
 8063 3290 2E5B      		subi r18,-66
 8064 3292 3F4F      		sbci r19,-1
 8065 3294 F901      		movw r30,r18
 8066 3296 8483      		std Z+4,r24
 8067 3298 9583      		std Z+5,r25
 8068 329a A683      		std Z+6,r26
 8069 329c B783      		std Z+7,r27
 8070 329e 00C0      		rjmp .L301
 8071               	.L303:
1095:lp_solve_5.5/lp_price.c ****           else
1096:lp_solve_5.5/lp_price.c ****             candidate.pivot *= 10.0;
 8072               		.loc 1 1096 0
 8073 32a0 CE01      		movw r24,r28
 8074 32a2 8E5B      		subi r24,-66
 8075 32a4 9F4F      		sbci r25,-1
 8076 32a6 FC01      		movw r30,r24
 8077 32a8 8481      		ldd r24,Z+4
 8078 32aa 9581      		ldd r25,Z+5
 8079 32ac A681      		ldd r26,Z+6
 8080 32ae B781      		ldd r27,Z+7
 8081 32b0 20E0      		ldi r18,0
 8082 32b2 30E0      		ldi r19,0
 8083 32b4 40E2      		ldi r20,lo8(32)
 8084 32b6 51E4      		ldi r21,lo8(65)
 8085 32b8 BC01      		movw r22,r24
 8086 32ba CD01      		movw r24,r26
 8087 32bc 0E94 0000 		call __mulsf3
 8088 32c0 DC01      		movw r26,r24
 8089 32c2 CB01      		movw r24,r22
 8090 32c4 9E01      		movw r18,r28
 8091 32c6 2E5B      		subi r18,-66
 8092 32c8 3F4F      		sbci r19,-1
 8093 32ca F901      		movw r30,r18
 8094 32cc 8483      		std Z+4,r24
 8095 32ce 9583      		std Z+5,r25
 8096 32d0 A683      		std Z+6,r26
 8097 32d2 B783      		std Z+7,r27
 8098               	.L301:
1097:lp_solve_5.5/lp_price.c **** 
1098:lp_solve_5.5/lp_price.c ****         }
1099:lp_solve_5.5/lp_price.c ****       }
1100:lp_solve_5.5/lp_price.c ****       if(HarrisTwoPass) {
 8099               		.loc 1 1100 0
 8100 32d4 8AA1      		ldd r24,Y+34
 8101 32d6 8823      		tst r24
 8102 32d8 01F4      		brne .+2
 8103 32da 00C0      		rjmp .L304
1101:lp_solve_5.5/lp_price.c ****         f = candidate.theta;
 8104               		.loc 1 1101 0
 8105 32dc CE01      		movw r24,r28
 8106 32de 8E5B      		subi r24,-66
 8107 32e0 9F4F      		sbci r25,-1
 8108 32e2 FC01      		movw r30,r24
 8109 32e4 8081      		ld r24,Z
 8110 32e6 9181      		ldd r25,Z+1
 8111 32e8 A281      		ldd r26,Z+2
 8112 32ea B381      		ldd r27,Z+3
 8113 32ec 8FA3      		std Y+39,r24
 8114 32ee 98A7      		std Y+40,r25
 8115 32f0 A9A7      		std Y+41,r26
 8116 32f2 BAA7      		std Y+42,r27
1102:lp_solve_5.5/lp_price.c ****         if(Hpass == 2)
 8117               		.loc 1 1102 0
 8118 32f4 8B81      		ldd r24,Y+3
 8119 32f6 9C81      		ldd r25,Y+4
 8120 32f8 0297      		sbiw r24,2
 8121 32fa 01F4      		brne .L305
1103:lp_solve_5.5/lp_price.c ****           candidate.theta = 1;
 8122               		.loc 1 1103 0
 8123 32fc 9E01      		movw r18,r28
 8124 32fe 2E5B      		subi r18,-66
 8125 3300 3F4F      		sbci r19,-1
 8126 3302 80E0      		ldi r24,0
 8127 3304 90E0      		ldi r25,0
 8128 3306 A0E8      		ldi r26,lo8(-128)
 8129 3308 BFE3      		ldi r27,lo8(63)
 8130 330a F901      		movw r30,r18
 8131 330c 8083      		st Z,r24
 8132 330e 9183      		std Z+1,r25
 8133 3310 A283      		std Z+2,r26
 8134 3312 B383      		std Z+3,r27
 8135               	.L305:
1104:lp_solve_5.5/lp_price.c ****         if(findSubstitutionVar(&current, &candidate, NULL))
 8136               		.loc 1 1104 0
 8137 3314 9E01      		movw r18,r28
 8138 3316 2E5B      		subi r18,-66
 8139 3318 3F4F      		sbci r19,-1
 8140 331a CE01      		movw r24,r28
 8141 331c C196      		adiw r24,49
 8142 331e 40E0      		ldi r20,0
 8143 3320 50E0      		ldi r21,0
 8144 3322 B901      		movw r22,r18
 8145 3324 0E94 0000 		call findSubstitutionVar
 8146 3328 8823      		tst r24
 8147 332a 01F0      		breq .+2
 8148 332c 00C0      		rjmp .L341
1105:lp_solve_5.5/lp_price.c ****           break;
1106:lp_solve_5.5/lp_price.c ****         if((Hpass == 2) && (current.varno == candidate.varno))
 8149               		.loc 1 1106 0
 8150 332e 8B81      		ldd r24,Y+3
 8151 3330 9C81      		ldd r25,Y+4
 8152 3332 0297      		sbiw r24,2
 8153 3334 01F4      		brne .L309
 8154               		.loc 1 1106 0 is_stmt 0 discriminator 1
 8155 3336 2DAD      		ldd r18,Y+61
 8156 3338 3EAD      		ldd r19,Y+62
 8157 333a CE01      		movw r24,r28
 8158 333c 8E5B      		subi r24,-66
 8159 333e 9F4F      		sbci r25,-1
 8160 3340 FC01      		movw r30,r24
 8161 3342 8485      		ldd r24,Z+12
 8162 3344 9585      		ldd r25,Z+13
 8163 3346 2817      		cp r18,r24
 8164 3348 3907      		cpc r19,r25
 8165 334a 01F4      		brne .L309
1107:lp_solve_5.5/lp_price.c ****           Htheta = f;
 8166               		.loc 1 1107 0 is_stmt 1
 8167 334c 8FA1      		ldd r24,Y+39
 8168 334e 98A5      		ldd r25,Y+40
 8169 3350 A9A5      		ldd r26,Y+41
 8170 3352 BAA5      		ldd r27,Y+42
 8171 3354 898B      		std Y+17,r24
 8172 3356 9A8B      		std Y+18,r25
 8173 3358 AB8B      		std Y+19,r26
 8174 335a BC8B      		std Y+20,r27
 8175 335c 00C0      		rjmp .L309
 8176               	.L304:
1108:lp_solve_5.5/lp_price.c ****       }
1109:lp_solve_5.5/lp_price.c ****       else
1110:lp_solve_5.5/lp_price.c ****         if(findSubstitutionVar(&current, &candidate, NULL))
 8177               		.loc 1 1110 0
 8178 335e 9E01      		movw r18,r28
 8179 3360 2E5B      		subi r18,-66
 8180 3362 3F4F      		sbci r19,-1
 8181 3364 CE01      		movw r24,r28
 8182 3366 C196      		adiw r24,49
 8183 3368 40E0      		ldi r20,0
 8184 336a 50E0      		ldi r21,0
 8185 336c B901      		movw r22,r18
 8186 336e 0E94 0000 		call findSubstitutionVar
 8187 3372 8823      		tst r24
 8188 3374 01F4      		brne .L342
 8189               	.L309:
1111:lp_solve_5.5/lp_price.c ****           break;
1112:lp_solve_5.5/lp_price.c ****       /* Restore temporarily modified pivot */
1113:lp_solve_5.5/lp_price.c ****       if(forceoutEQ && (current.varno == candidate.varno))
 8190               		.loc 1 1113 0
 8191 3376 CE01      		movw r24,r28
 8192 3378 835A      		subi r24,-93
 8193 337a 9F4F      		sbci r25,-1
 8194 337c FC01      		movw r30,r24
 8195 337e 8081      		ld r24,Z
 8196 3380 8823      		tst r24
 8197 3382 01F0      		breq .L298
 8198               		.loc 1 1113 0 is_stmt 0 discriminator 1
 8199 3384 2DAD      		ldd r18,Y+61
 8200 3386 3EAD      		ldd r19,Y+62
 8201 3388 CE01      		movw r24,r28
 8202 338a 8E5B      		subi r24,-66
 8203 338c 9F4F      		sbci r25,-1
 8204 338e FC01      		movw r30,r24
 8205 3390 8485      		ldd r24,Z+12
 8206 3392 9585      		ldd r25,Z+13
 8207 3394 2817      		cp r18,r24
 8208 3396 3907      		cpc r19,r25
 8209 3398 01F4      		brne .L298
1114:lp_solve_5.5/lp_price.c ****         current.pivot = p;
 8210               		.loc 1 1114 0 is_stmt 1
 8211 339a 8D8D      		ldd r24,Y+29
 8212 339c 9E8D      		ldd r25,Y+30
 8213 339e AF8D      		ldd r26,Y+31
 8214 33a0 B8A1      		ldd r27,Y+32
 8215 33a2 8DAB      		std Y+53,r24
 8216 33a4 9EAB      		std Y+54,r25
 8217 33a6 AFAB      		std Y+55,r26
 8218 33a8 B8AF      		std Y+56,r27
 8219 33aa 00C0      		rjmp .L298
 8220               	.L340:
1086:lp_solve_5.5/lp_price.c **** 
 8221               		.loc 1 1086 0
 8222 33ac 0000      		nop
 8223               	.L298:
1068:lp_solve_5.5/lp_price.c ****       i = nzlist[ii];
 8224               		.loc 1 1068 0
 8225 33ae 2BA5      		ldd r18,Y+43
 8226 33b0 3CA5      		ldd r19,Y+44
 8227 33b2 8FA5      		ldd r24,Y+47
 8228 33b4 98A9      		ldd r25,Y+48
 8229 33b6 820F      		add r24,r18
 8230 33b8 931F      		adc r25,r19
 8231 33ba 9CA7      		std Y+44,r25
 8232 33bc 8BA7      		std Y+43,r24
 8233               	.L292:
1068:lp_solve_5.5/lp_price.c ****       i = nzlist[ii];
 8234               		.loc 1 1068 0 is_stmt 0 discriminator 1
 8235 33be 4BA5      		ldd r20,Y+43
 8236 33c0 5CA5      		ldd r21,Y+44
 8237 33c2 8FA5      		ldd r24,Y+47
 8238 33c4 98A9      		ldd r25,Y+48
 8239 33c6 489F      		mul r20,r24
 8240 33c8 9001      		movw r18,r0
 8241 33ca 499F      		mul r20,r25
 8242 33cc 300D      		add r19,r0
 8243 33ce 589F      		mul r21,r24
 8244 33d0 300D      		add r19,r0
 8245 33d2 1124      		clr r1
 8246 33d4 8DA5      		ldd r24,Y+45
 8247 33d6 9EA5      		ldd r25,Y+46
 8248 33d8 8217      		cp r24,r18
 8249 33da 9307      		cpc r25,r19
 8250 33dc 04F0      		brlt .+2
 8251 33de 00C0      		rjmp .L310
 8252 33e0 00C0      		rjmp .L307
 8253               	.L341:
1105:lp_solve_5.5/lp_price.c ****         if((Hpass == 2) && (current.varno == candidate.varno))
 8254               		.loc 1 1105 0 is_stmt 1
 8255 33e2 0000      		nop
 8256 33e4 00C0      		rjmp .L307
 8257               	.L342:
1111:lp_solve_5.5/lp_price.c ****       /* Restore temporarily modified pivot */
 8258               		.loc 1 1111 0
 8259 33e6 0000      		nop
 8260               	.L307:
1049:lp_solve_5.5/lp_price.c ****     Htheta = lp->infinite;
 8261               		.loc 1 1049 0
 8262 33e8 8B81      		ldd r24,Y+3
 8263 33ea 9C81      		ldd r25,Y+4
 8264 33ec 0196      		adiw r24,1
 8265 33ee 9C83      		std Y+4,r25
 8266 33f0 8B83      		std Y+3,r24
 8267               	.L289:
1049:lp_solve_5.5/lp_price.c ****     Htheta = lp->infinite;
 8268               		.loc 1 1049 0 is_stmt 0 discriminator 1
 8269 33f2 8B81      		ldd r24,Y+3
 8270 33f4 9C81      		ldd r25,Y+4
 8271 33f6 0397      		sbiw r24,3
 8272 33f8 04F4      		brge .+2
 8273 33fa 00C0      		rjmp .L311
1115:lp_solve_5.5/lp_price.c ****     }
1116:lp_solve_5.5/lp_price.c ****   }
1117:lp_solve_5.5/lp_price.c ****   if(HarrisTwoPass)
 8274               		.loc 1 1117 0 is_stmt 1
 8275 33fc 8AA1      		ldd r24,Y+34
 8276 33fe 8823      		tst r24
 8277 3400 01F0      		breq .L312
1118:lp_solve_5.5/lp_price.c ****     current.theta = Htheta;
 8278               		.loc 1 1118 0
 8279 3402 8989      		ldd r24,Y+17
 8280 3404 9A89      		ldd r25,Y+18
 8281 3406 AB89      		ldd r26,Y+19
 8282 3408 BC89      		ldd r27,Y+20
 8283 340a 89AB      		std Y+49,r24
 8284 340c 9AAB      		std Y+50,r25
 8285 340e ABAB      		std Y+51,r26
 8286 3410 BCAB      		std Y+52,r27
 8287               	.L312:
1119:lp_solve_5.5/lp_price.c **** 
1120:lp_solve_5.5/lp_price.c ****   /* Handle case of no available leaving variable */
1121:lp_solve_5.5/lp_price.c ****   if(current.varno == 0) {
 8288               		.loc 1 1121 0
 8289 3412 8DAD      		ldd r24,Y+61
 8290 3414 9EAD      		ldd r25,Y+62
 8291 3416 892B      		or r24,r25
 8292 3418 01F0      		breq .+2
 8293 341a 00C0      		rjmp .L313
1122:lp_solve_5.5/lp_price.c ****     if(lp->upbo[colnr] >= lp->infinite) {
 8294               		.loc 1 1122 0
 8295 341c CE01      		movw r24,r28
 8296 341e 8D5A      		subi r24,-83
 8297 3420 9F4F      		sbci r25,-1
 8298 3422 FC01      		movw r30,r24
 8299 3424 8081      		ld r24,Z
 8300 3426 9181      		ldd r25,Z+1
 8301 3428 8055      		subi r24,80
 8302 342a 9D4F      		sbci r25,-3
 8303 342c FC01      		movw r30,r24
 8304 342e 2081      		ld r18,Z
 8305 3430 3181      		ldd r19,Z+1
 8306 3432 CE01      		movw r24,r28
 8307 3434 8B5A      		subi r24,-85
 8308 3436 9F4F      		sbci r25,-1
 8309 3438 FC01      		movw r30,r24
 8310 343a 8081      		ld r24,Z
 8311 343c 9181      		ldd r25,Z+1
 8312 343e 880F      		lsl r24
 8313 3440 991F      		rol r25
 8314 3442 880F      		lsl r24
 8315 3444 991F      		rol r25
 8316 3446 820F      		add r24,r18
 8317 3448 931F      		adc r25,r19
 8318 344a FC01      		movw r30,r24
 8319 344c 8081      		ld r24,Z
 8320 344e 9181      		ldd r25,Z+1
 8321 3450 A281      		ldd r26,Z+2
 8322 3452 B381      		ldd r27,Z+3
 8323 3454 9E01      		movw r18,r28
 8324 3456 2D5A      		subi r18,-83
 8325 3458 3F4F      		sbci r19,-1
 8326 345a F901      		movw r30,r18
 8327 345c 2081      		ld r18,Z
 8328 345e 3181      		ldd r19,Z+1
 8329 3460 265F      		subi r18,-10
 8330 3462 3C4F      		sbci r19,-4
 8331 3464 F901      		movw r30,r18
 8332 3466 2081      		ld r18,Z
 8333 3468 3181      		ldd r19,Z+1
 8334 346a 4281      		ldd r20,Z+2
 8335 346c 5381      		ldd r21,Z+3
 8336 346e BC01      		movw r22,r24
 8337 3470 CD01      		movw r24,r26
 8338 3472 0E94 0000 		call __gesf2
 8339 3476 8823      		tst r24
 8340 3478 04F0      		brlt .L339
1123:lp_solve_5.5/lp_price.c ****       /* Optionally try again with reduced pivot threshold level */
1124:lp_solve_5.5/lp_price.c ****       if(k < 2) {
 8341               		.loc 1 1124 0
 8342 347a 8D81      		ldd r24,Y+5
 8343 347c 9E81      		ldd r25,Y+6
 8344 347e 0297      		sbiw r24,2
 8345 3480 04F0      		brlt .+2
 8346 3482 00C0      		rjmp .L323
1125:lp_solve_5.5/lp_price.c ****         epspivot = epspivot / 10;
 8347               		.loc 1 1125 0
 8348 3484 20E0      		ldi r18,0
 8349 3486 30E0      		ldi r19,0
 8350 3488 40E2      		ldi r20,lo8(32)
 8351 348a 51E4      		ldi r21,lo8(65)
 8352 348c 698D      		ldd r22,Y+25
 8353 348e 7A8D      		ldd r23,Y+26
 8354 3490 8B8D      		ldd r24,Y+27
 8355 3492 9C8D      		ldd r25,Y+28
 8356 3494 0E94 0000 		call __divsf3
 8357 3498 DC01      		movw r26,r24
 8358 349a CB01      		movw r24,r22
 8359 349c 898F      		std Y+25,r24
 8360 349e 9A8F      		std Y+26,r25
 8361 34a0 AB8F      		std Y+27,r26
 8362 34a2 BC8F      		std Y+28,r27
1126:lp_solve_5.5/lp_price.c ****         goto Retry;
 8363               		.loc 1 1126 0
 8364 34a4 00C0      		rjmp .L286
 8365               	.L339:
1127:lp_solve_5.5/lp_price.c ****       }
1128:lp_solve_5.5/lp_price.c ****     }
1129:lp_solve_5.5/lp_price.c ****     else {
1130:lp_solve_5.5/lp_price.c **** #if 1
1131:lp_solve_5.5/lp_price.c ****       i = 1;
 8366               		.loc 1 1131 0
 8367 34a6 81E0      		ldi r24,lo8(1)
 8368 34a8 90E0      		ldi r25,0
 8369 34aa 9A83      		std Y+2,r25
 8370 34ac 8983      		std Y+1,r24
1132:lp_solve_5.5/lp_price.c ****       while((pcol[i] >= 0) && (i <= lp->rows))
 8371               		.loc 1 1132 0
 8372 34ae 00C0      		rjmp .L317
 8373               	.L320:
1133:lp_solve_5.5/lp_price.c ****         i++;
 8374               		.loc 1 1133 0
 8375 34b0 8981      		ldd r24,Y+1
 8376 34b2 9A81      		ldd r25,Y+2
 8377 34b4 0196      		adiw r24,1
 8378 34b6 9A83      		std Y+2,r25
 8379 34b8 8983      		std Y+1,r24
 8380               	.L317:
1132:lp_solve_5.5/lp_price.c ****       while((pcol[i] >= 0) && (i <= lp->rows))
 8381               		.loc 1 1132 0
 8382 34ba 8981      		ldd r24,Y+1
 8383 34bc 9A81      		ldd r25,Y+2
 8384 34be 880F      		lsl r24
 8385 34c0 991F      		rol r25
 8386 34c2 880F      		lsl r24
 8387 34c4 991F      		rol r25
 8388 34c6 9E01      		movw r18,r28
 8389 34c8 275A      		subi r18,-89
 8390 34ca 3F4F      		sbci r19,-1
 8391 34cc F901      		movw r30,r18
 8392 34ce 2081      		ld r18,Z
 8393 34d0 3181      		ldd r19,Z+1
 8394 34d2 820F      		add r24,r18
 8395 34d4 931F      		adc r25,r19
 8396 34d6 FC01      		movw r30,r24
 8397 34d8 8081      		ld r24,Z
 8398 34da 9181      		ldd r25,Z+1
 8399 34dc A281      		ldd r26,Z+2
 8400 34de B381      		ldd r27,Z+3
 8401 34e0 20E0      		ldi r18,0
 8402 34e2 30E0      		ldi r19,0
 8403 34e4 A901      		movw r20,r18
 8404 34e6 BC01      		movw r22,r24
 8405 34e8 CD01      		movw r24,r26
 8406 34ea 0E94 0000 		call __gesf2
 8407 34ee 8823      		tst r24
 8408 34f0 04F0      		brlt .L318
1132:lp_solve_5.5/lp_price.c ****       while((pcol[i] >= 0) && (i <= lp->rows))
 8409               		.loc 1 1132 0 is_stmt 0 discriminator 1
 8410 34f2 CE01      		movw r24,r28
 8411 34f4 8D5A      		subi r24,-83
 8412 34f6 9F4F      		sbci r25,-1
 8413 34f8 FC01      		movw r30,r24
 8414 34fa 8081      		ld r24,Z
 8415 34fc 9181      		ldd r25,Z+1
 8416 34fe 8651      		subi r24,22
 8417 3500 9E4F      		sbci r25,-2
 8418 3502 FC01      		movw r30,r24
 8419 3504 2081      		ld r18,Z
 8420 3506 3181      		ldd r19,Z+1
 8421 3508 8981      		ldd r24,Y+1
 8422 350a 9A81      		ldd r25,Y+2
 8423 350c 2817      		cp r18,r24
 8424 350e 3907      		cpc r19,r25
 8425 3510 04F4      		brge .L320
 8426               	.L318:
1134:lp_solve_5.5/lp_price.c ****       if(i > lp->rows) { /* Empty column with upper bound! */
 8427               		.loc 1 1134 0 is_stmt 1
 8428 3512 CE01      		movw r24,r28
 8429 3514 8D5A      		subi r24,-83
 8430 3516 9F4F      		sbci r25,-1
 8431 3518 FC01      		movw r30,r24
 8432 351a 8081      		ld r24,Z
 8433 351c 9181      		ldd r25,Z+1
 8434 351e 8651      		subi r24,22
 8435 3520 9E4F      		sbci r25,-2
 8436 3522 FC01      		movw r30,r24
 8437 3524 2081      		ld r18,Z
 8438 3526 3181      		ldd r19,Z+1
 8439 3528 8981      		ldd r24,Y+1
 8440 352a 9A81      		ldd r25,Y+2
 8441 352c 2817      		cp r18,r24
 8442 352e 3907      		cpc r19,r25
 8443 3530 04F0      		brlt .+2
 8444 3532 00C0      		rjmp .L321
1135:lp_solve_5.5/lp_price.c ****         lp->is_lower[colnr] = !lp->is_lower[colnr];
 8445               		.loc 1 1135 0
 8446 3534 CE01      		movw r24,r28
 8447 3536 8D5A      		subi r24,-83
 8448 3538 9F4F      		sbci r25,-1
 8449 353a FC01      		movw r30,r24
 8450 353c 8081      		ld r24,Z
 8451 353e 9181      		ldd r25,Z+1
 8452 3540 8E52      		subi r24,46
 8453 3542 9D4F      		sbci r25,-3
 8454 3544 FC01      		movw r30,r24
 8455 3546 2081      		ld r18,Z
 8456 3548 3181      		ldd r19,Z+1
 8457 354a CE01      		movw r24,r28
 8458 354c 8B5A      		subi r24,-85
 8459 354e 9F4F      		sbci r25,-1
 8460 3550 FC01      		movw r30,r24
 8461 3552 8081      		ld r24,Z
 8462 3554 9181      		ldd r25,Z+1
 8463 3556 820F      		add r24,r18
 8464 3558 931F      		adc r25,r19
 8465 355a 9E01      		movw r18,r28
 8466 355c 2D5A      		subi r18,-83
 8467 355e 3F4F      		sbci r19,-1
 8468 3560 F901      		movw r30,r18
 8469 3562 2081      		ld r18,Z
 8470 3564 3181      		ldd r19,Z+1
 8471 3566 2E52      		subi r18,46
 8472 3568 3D4F      		sbci r19,-3
 8473 356a F901      		movw r30,r18
 8474 356c 4081      		ld r20,Z
 8475 356e 5181      		ldd r21,Z+1
 8476 3570 9E01      		movw r18,r28
 8477 3572 2B5A      		subi r18,-85
 8478 3574 3F4F      		sbci r19,-1
 8479 3576 F901      		movw r30,r18
 8480 3578 2081      		ld r18,Z
 8481 357a 3181      		ldd r19,Z+1
 8482 357c 240F      		add r18,r20
 8483 357e 351F      		adc r19,r21
 8484 3580 F901      		movw r30,r18
 8485 3582 3081      		ld r19,Z
 8486 3584 21E0      		ldi r18,lo8(1)
 8487 3586 3323      		tst r19
 8488 3588 01F0      		breq .L322
 8489 358a 20E0      		ldi r18,0
 8490               	.L322:
 8491 358c FC01      		movw r30,r24
 8492 358e 2083      		st Z,r18
1136:lp_solve_5.5/lp_price.c **** /*        lp->is_lower[colnr] = FALSE; */
1137:lp_solve_5.5/lp_price.c ****         lp->rhs[0] += lp->upbo[colnr]*pcol[0];
 8493               		.loc 1 1137 0
 8494 3590 CE01      		movw r24,r28
 8495 3592 8D5A      		subi r24,-83
 8496 3594 9F4F      		sbci r25,-1
 8497 3596 FC01      		movw r30,r24
 8498 3598 8081      		ld r24,Z
 8499 359a 9181      		ldd r25,Z+1
 8500 359c 8855      		subi r24,88
 8501 359e 9D4F      		sbci r25,-3
 8502 35a0 FC01      		movw r30,r24
 8503 35a2 0081      		ld r16,Z
 8504 35a4 1181      		ldd r17,Z+1
 8505 35a6 CE01      		movw r24,r28
 8506 35a8 8D5A      		subi r24,-83
 8507 35aa 9F4F      		sbci r25,-1
 8508 35ac FC01      		movw r30,r24
 8509 35ae 8081      		ld r24,Z
 8510 35b0 9181      		ldd r25,Z+1
 8511 35b2 8855      		subi r24,88
 8512 35b4 9D4F      		sbci r25,-3
 8513 35b6 FC01      		movw r30,r24
 8514 35b8 8081      		ld r24,Z
 8515 35ba 9181      		ldd r25,Z+1
 8516 35bc FC01      		movw r30,r24
 8517 35be C080      		ld r12,Z
 8518 35c0 D180      		ldd r13,Z+1
 8519 35c2 E280      		ldd r14,Z+2
 8520 35c4 F380      		ldd r15,Z+3
 8521 35c6 CE01      		movw r24,r28
 8522 35c8 8D5A      		subi r24,-83
 8523 35ca 9F4F      		sbci r25,-1
 8524 35cc FC01      		movw r30,r24
 8525 35ce 8081      		ld r24,Z
 8526 35d0 9181      		ldd r25,Z+1
 8527 35d2 8055      		subi r24,80
 8528 35d4 9D4F      		sbci r25,-3
 8529 35d6 FC01      		movw r30,r24
 8530 35d8 2081      		ld r18,Z
 8531 35da 3181      		ldd r19,Z+1
 8532 35dc CE01      		movw r24,r28
 8533 35de 8B5A      		subi r24,-85
 8534 35e0 9F4F      		sbci r25,-1
 8535 35e2 FC01      		movw r30,r24
 8536 35e4 8081      		ld r24,Z
 8537 35e6 9181      		ldd r25,Z+1
 8538 35e8 880F      		lsl r24
 8539 35ea 991F      		rol r25
 8540 35ec 880F      		lsl r24
 8541 35ee 991F      		rol r25
 8542 35f0 820F      		add r24,r18
 8543 35f2 931F      		adc r25,r19
 8544 35f4 FC01      		movw r30,r24
 8545 35f6 8081      		ld r24,Z
 8546 35f8 9181      		ldd r25,Z+1
 8547 35fa A281      		ldd r26,Z+2
 8548 35fc B381      		ldd r27,Z+3
 8549 35fe 9E01      		movw r18,r28
 8550 3600 275A      		subi r18,-89
 8551 3602 3F4F      		sbci r19,-1
 8552 3604 F901      		movw r30,r18
 8553 3606 2081      		ld r18,Z
 8554 3608 3181      		ldd r19,Z+1
 8555 360a F901      		movw r30,r18
 8556 360c 2081      		ld r18,Z
 8557 360e 3181      		ldd r19,Z+1
 8558 3610 4281      		ldd r20,Z+2
 8559 3612 5381      		ldd r21,Z+3
 8560 3614 BC01      		movw r22,r24
 8561 3616 CD01      		movw r24,r26
 8562 3618 0E94 0000 		call __mulsf3
 8563 361c DC01      		movw r26,r24
 8564 361e CB01      		movw r24,r22
 8565 3620 9C01      		movw r18,r24
 8566 3622 AD01      		movw r20,r26
 8567 3624 C701      		movw r24,r14
 8568 3626 B601      		movw r22,r12
 8569 3628 0E94 0000 		call __addsf3
 8570 362c DC01      		movw r26,r24
 8571 362e CB01      		movw r24,r22
 8572 3630 F801      		movw r30,r16
 8573 3632 8083      		st Z,r24
 8574 3634 9183      		std Z+1,r25
 8575 3636 A283      		std Z+2,r26
 8576 3638 B383      		std Z+3,r27
 8577 363a 00C0      		rjmp .L323
 8578               	.L321:
1138:lp_solve_5.5/lp_price.c ****       }
1139:lp_solve_5.5/lp_price.c ****       else /* if(pcol[i]<0) */
1140:lp_solve_5.5/lp_price.c ****       {
1141:lp_solve_5.5/lp_price.c ****         current.varno = i;
 8579               		.loc 1 1141 0
 8580 363c 8981      		ldd r24,Y+1
 8581 363e 9A81      		ldd r25,Y+2
 8582 3640 9EAF      		std Y+62,r25
 8583 3642 8DAF      		std Y+61,r24
 8584 3644 00C0      		rjmp .L323
 8585               	.L313:
1142:lp_solve_5.5/lp_price.c ****       }
1143:lp_solve_5.5/lp_price.c **** #endif
1144:lp_solve_5.5/lp_price.c ****     }
1145:lp_solve_5.5/lp_price.c ****   }
1146:lp_solve_5.5/lp_price.c ****   else if(current.theta >= lp->infinite) {
 8586               		.loc 1 1146 0
 8587 3646 89A9      		ldd r24,Y+49
 8588 3648 9AA9      		ldd r25,Y+50
 8589 364a ABA9      		ldd r26,Y+51
 8590 364c BCA9      		ldd r27,Y+52
 8591 364e 9E01      		movw r18,r28
 8592 3650 2D5A      		subi r18,-83
 8593 3652 3F4F      		sbci r19,-1
 8594 3654 F901      		movw r30,r18
 8595 3656 2081      		ld r18,Z
 8596 3658 3181      		ldd r19,Z+1
 8597 365a 265F      		subi r18,-10
 8598 365c 3C4F      		sbci r19,-4
 8599 365e F901      		movw r30,r18
 8600 3660 2081      		ld r18,Z
 8601 3662 3181      		ldd r19,Z+1
 8602 3664 4281      		ldd r20,Z+2
 8603 3666 5381      		ldd r21,Z+3
 8604 3668 BC01      		movw r22,r24
 8605 366a CD01      		movw r24,r26
 8606 366c 0E94 0000 		call __gesf2
 8607 3670 8823      		tst r24
 8608 3672 04F4      		brge .+2
 8609 3674 00C0      		rjmp .L323
1147:lp_solve_5.5/lp_price.c ****     report(lp, IMPORTANT, "rowprim: Numeric instability pcol[%d] = %g, rhs[%d] = %g, upbo = %g\n",
1148:lp_solve_5.5/lp_price.c ****                           current.varno, savef, current.varno, lp->rhs[current.varno],
1149:lp_solve_5.5/lp_price.c ****                           lp->upbo[lp->var_basic[current.varno]]);
 8610               		.loc 1 1149 0
 8611 3676 CE01      		movw r24,r28
 8612 3678 8D5A      		subi r24,-83
 8613 367a 9F4F      		sbci r25,-1
 8614 367c FC01      		movw r30,r24
 8615 367e 8081      		ld r24,Z
 8616 3680 9181      		ldd r25,Z+1
 8617 3682 8055      		subi r24,80
 8618 3684 9D4F      		sbci r25,-3
 8619 3686 FC01      		movw r30,r24
 8620 3688 2081      		ld r18,Z
 8621 368a 3181      		ldd r19,Z+1
 8622 368c CE01      		movw r24,r28
 8623 368e 8D5A      		subi r24,-83
 8624 3690 9F4F      		sbci r25,-1
 8625 3692 FC01      		movw r30,r24
 8626 3694 8081      		ld r24,Z
 8627 3696 9181      		ldd r25,Z+1
 8628 3698 8453      		subi r24,52
 8629 369a 9D4F      		sbci r25,-3
 8630 369c FC01      		movw r30,r24
 8631 369e 4081      		ld r20,Z
 8632 36a0 5181      		ldd r21,Z+1
 8633 36a2 8DAD      		ldd r24,Y+61
 8634 36a4 9EAD      		ldd r25,Y+62
 8635 36a6 880F      		lsl r24
 8636 36a8 991F      		rol r25
 8637 36aa 840F      		add r24,r20
 8638 36ac 951F      		adc r25,r21
 8639 36ae FC01      		movw r30,r24
 8640 36b0 8081      		ld r24,Z
 8641 36b2 9181      		ldd r25,Z+1
 8642 36b4 880F      		lsl r24
 8643 36b6 991F      		rol r25
 8644 36b8 880F      		lsl r24
 8645 36ba 991F      		rol r25
 8646 36bc 820F      		add r24,r18
 8647 36be 931F      		adc r25,r19
1147:lp_solve_5.5/lp_price.c ****     report(lp, IMPORTANT, "rowprim: Numeric instability pcol[%d] = %g, rhs[%d] = %g, upbo = %g\n",
 8648               		.loc 1 1147 0
 8649 36c0 FC01      		movw r30,r24
 8650 36c2 2081      		ld r18,Z
 8651 36c4 3181      		ldd r19,Z+1
 8652 36c6 4281      		ldd r20,Z+2
 8653 36c8 5381      		ldd r21,Z+3
1148:lp_solve_5.5/lp_price.c ****                           lp->upbo[lp->var_basic[current.varno]]);
 8654               		.loc 1 1148 0
 8655 36ca CE01      		movw r24,r28
 8656 36cc 8D5A      		subi r24,-83
 8657 36ce 9F4F      		sbci r25,-1
 8658 36d0 FC01      		movw r30,r24
 8659 36d2 8081      		ld r24,Z
 8660 36d4 9181      		ldd r25,Z+1
 8661 36d6 8855      		subi r24,88
 8662 36d8 9D4F      		sbci r25,-3
 8663 36da FC01      		movw r30,r24
 8664 36dc 6081      		ld r22,Z
 8665 36de 7181      		ldd r23,Z+1
 8666 36e0 8DAD      		ldd r24,Y+61
 8667 36e2 9EAD      		ldd r25,Y+62
 8668 36e4 880F      		lsl r24
 8669 36e6 991F      		rol r25
 8670 36e8 880F      		lsl r24
 8671 36ea 991F      		rol r25
 8672 36ec 860F      		add r24,r22
 8673 36ee 971F      		adc r25,r23
1147:lp_solve_5.5/lp_price.c ****     report(lp, IMPORTANT, "rowprim: Numeric instability pcol[%d] = %g, rhs[%d] = %g, upbo = %g\n",
 8674               		.loc 1 1147 0
 8675 36f0 FC01      		movw r30,r24
 8676 36f2 8081      		ld r24,Z
 8677 36f4 9181      		ldd r25,Z+1
 8678 36f6 A281      		ldd r26,Z+2
 8679 36f8 B381      		ldd r27,Z+3
 8680 36fa EDAD      		ldd r30,Y+61
 8681 36fc FEAD      		ldd r31,Y+62
 8682 36fe 6DAD      		ldd r22,Y+61
 8683 3700 7EAD      		ldd r23,Y+62
 8684 3702 152F      		mov r17,r21
 8685 3704 1F93      		push r17
 8686 3706 142F      		mov r17,r20
 8687 3708 1F93      		push r17
 8688 370a 132F      		mov r17,r19
 8689 370c 1F93      		push r17
 8690 370e 2F93      		push r18
 8691 3710 2B2F      		mov r18,r27
 8692 3712 2F93      		push r18
 8693 3714 2A2F      		mov r18,r26
 8694 3716 2F93      		push r18
 8695 3718 292F      		mov r18,r25
 8696 371a 2F93      		push r18
 8697 371c 8F93      		push r24
 8698 371e 8F2F      		mov r24,r31
 8699 3720 8F93      		push r24
 8700 3722 8E2F      		mov r24,r30
 8701 3724 8F93      		push r24
 8702 3726 8C85      		ldd r24,Y+12
 8703 3728 8F93      		push r24
 8704 372a 8B85      		ldd r24,Y+11
 8705 372c 8F93      		push r24
 8706 372e 8A85      		ldd r24,Y+10
 8707 3730 8F93      		push r24
 8708 3732 8985      		ldd r24,Y+9
 8709 3734 8F93      		push r24
 8710 3736 872F      		mov r24,r23
 8711 3738 8F93      		push r24
 8712 373a 862F      		mov r24,r22
 8713 373c 8F93      		push r24
 8714 373e 80E0      		ldi r24,lo8(.LC3)
 8715 3740 90E0      		ldi r25,hi8(.LC3)
 8716 3742 892F      		mov r24,r25
 8717 3744 8F93      		push r24
 8718 3746 80E0      		ldi r24,lo8(.LC3)
 8719 3748 90E0      		ldi r25,hi8(.LC3)
 8720 374a 8F93      		push r24
 8721 374c 1F92      		push __zero_reg__
 8722 374e 83E0      		ldi r24,lo8(3)
 8723 3750 8F93      		push r24
 8724 3752 CE01      		movw r24,r28
 8725 3754 8D5A      		subi r24,-83
 8726 3756 9F4F      		sbci r25,-1
 8727 3758 FC01      		movw r30,r24
 8728 375a 2181      		ldd r18,Z+1
 8729 375c 2F93      		push r18
 8730 375e FC01      		movw r30,r24
 8731 3760 8081      		ld r24,Z
 8732 3762 8F93      		push r24
 8733 3764 0E94 0000 		call report
 8734 3768 8DB7      		in r24,__SP_L__
 8735 376a 9EB7      		in r25,__SP_H__
 8736 376c 4696      		adiw r24,22
 8737 376e 0FB6      		in __tmp_reg__,__SREG__
 8738 3770 F894      		cli
 8739 3772 DEBF      		out __SP_H__,r29
 8740 3774 0FBE      		out __SREG__,__tmp_reg__
 8741 3776 CDBF      		out __SP_L__,r28
 8742               	.L323:
1150:lp_solve_5.5/lp_price.c ****   }
1151:lp_solve_5.5/lp_price.c **** 
1152:lp_solve_5.5/lp_price.c ****  /* Return working array to pool */
1153:lp_solve_5.5/lp_price.c ****   if(nzpcol == NULL)
 8743               		.loc 1 1153 0
 8744 3778 CE01      		movw r24,r28
 8745 377a 855A      		subi r24,-91
 8746 377c 9F4F      		sbci r25,-1
 8747 377e FC01      		movw r30,r24
 8748 3780 8081      		ld r24,Z
 8749 3782 9181      		ldd r25,Z+1
 8750 3784 892B      		or r24,r25
 8751 3786 01F4      		brne .L325
1154:lp_solve_5.5/lp_price.c ****     mempool_releaseVector(lp->workarrays, (char *) nzlist, FALSE);
 8752               		.loc 1 1154 0
 8753 3788 CE01      		movw r24,r28
 8754 378a 8D5A      		subi r24,-83
 8755 378c 9F4F      		sbci r25,-1
 8756 378e FC01      		movw r30,r24
 8757 3790 8081      		ld r24,Z
 8758 3792 9181      		ldd r25,Z+1
 8759 3794 8859      		subi r24,-104
 8760 3796 9C4F      		sbci r25,-4
 8761 3798 FC01      		movw r30,r24
 8762 379a 8081      		ld r24,Z
 8763 379c 9181      		ldd r25,Z+1
 8764 379e 2F81      		ldd r18,Y+7
 8765 37a0 3885      		ldd r19,Y+8
 8766 37a2 40E0      		ldi r20,0
 8767 37a4 B901      		movw r22,r18
 8768 37a6 0E94 0000 		call mempool_releaseVector
 8769               	.L325:
1155:lp_solve_5.5/lp_price.c **** 
1156:lp_solve_5.5/lp_price.c ****   if(lp->spx_trace)
 8770               		.loc 1 1156 0
 8771 37aa CE01      		movw r24,r28
 8772 37ac 8D5A      		subi r24,-83
 8773 37ae 9F4F      		sbci r25,-1
 8774 37b0 FC01      		movw r30,r24
 8775 37b2 8081      		ld r24,Z
 8776 37b4 9181      		ldd r25,Z+1
 8777 37b6 8E5F      		subi r24,-2
 8778 37b8 9D4F      		sbci r25,-3
 8779 37ba FC01      		movw r30,r24
 8780 37bc 8081      		ld r24,Z
 8781 37be 8823      		tst r24
 8782 37c0 01F0      		breq .L326
1157:lp_solve_5.5/lp_price.c ****     report(lp, DETAILED, "row_prim: %d, pivot size = " RESULTVALUEMASK "\n",
 8783               		.loc 1 1157 0
 8784 37c2 8DA9      		ldd r24,Y+53
 8785 37c4 9EA9      		ldd r25,Y+54
 8786 37c6 AFA9      		ldd r26,Y+55
 8787 37c8 B8AD      		ldd r27,Y+56
 8788 37ca 2DAD      		ldd r18,Y+61
 8789 37cc 3EAD      		ldd r19,Y+62
 8790 37ce 4B2F      		mov r20,r27
 8791 37d0 4F93      		push r20
 8792 37d2 4A2F      		mov r20,r26
 8793 37d4 4F93      		push r20
 8794 37d6 492F      		mov r20,r25
 8795 37d8 4F93      		push r20
 8796 37da 8F93      		push r24
 8797 37dc 832F      		mov r24,r19
 8798 37de 8F93      		push r24
 8799 37e0 822F      		mov r24,r18
 8800 37e2 8F93      		push r24
 8801 37e4 80E0      		ldi r24,lo8(.LC4)
 8802 37e6 90E0      		ldi r25,hi8(.LC4)
 8803 37e8 892F      		mov r24,r25
 8804 37ea 8F93      		push r24
 8805 37ec 80E0      		ldi r24,lo8(.LC4)
 8806 37ee 90E0      		ldi r25,hi8(.LC4)
 8807 37f0 8F93      		push r24
 8808 37f2 1F92      		push __zero_reg__
 8809 37f4 85E0      		ldi r24,lo8(5)
 8810 37f6 8F93      		push r24
 8811 37f8 CE01      		movw r24,r28
 8812 37fa 8D5A      		subi r24,-83
 8813 37fc 9F4F      		sbci r25,-1
 8814 37fe FC01      		movw r30,r24
 8815 3800 2181      		ldd r18,Z+1
 8816 3802 2F93      		push r18
 8817 3804 FC01      		movw r30,r24
 8818 3806 8081      		ld r24,Z
 8819 3808 8F93      		push r24
 8820 380a 0E94 0000 		call report
 8821 380e 8DB7      		in r24,__SP_L__
 8822 3810 9EB7      		in r25,__SP_H__
 8823 3812 0C96      		adiw r24,12
 8824 3814 0FB6      		in __tmp_reg__,__SREG__
 8825 3816 F894      		cli
 8826 3818 DEBF      		out __SP_H__,r29
 8827 381a 0FBE      		out __SREG__,__tmp_reg__
 8828 381c CDBF      		out __SP_L__,r28
 8829               	.L326:
1158:lp_solve_5.5/lp_price.c ****                          current.varno, current.pivot);
1159:lp_solve_5.5/lp_price.c **** 
1160:lp_solve_5.5/lp_price.c **** /*  *theta = current.theta; */
1161:lp_solve_5.5/lp_price.c ****   *theta = fabs(current.theta);
 8830               		.loc 1 1161 0
 8831 381e 89A9      		ldd r24,Y+49
 8832 3820 9AA9      		ldd r25,Y+50
 8833 3822 ABA9      		ldd r26,Y+51
 8834 3824 BCA9      		ldd r27,Y+52
 8835 3826 BF77      		andi r27,0x7f
 8836 3828 9E01      		movw r18,r28
 8837 382a 295A      		subi r18,-87
 8838 382c 3F4F      		sbci r19,-1
 8839 382e F901      		movw r30,r18
 8840 3830 2081      		ld r18,Z
 8841 3832 3181      		ldd r19,Z+1
 8842 3834 F901      		movw r30,r18
 8843 3836 8083      		st Z,r24
 8844 3838 9183      		std Z+1,r25
 8845 383a A283      		std Z+2,r26
 8846 383c B383      		std Z+3,r27
1162:lp_solve_5.5/lp_price.c **** 
1163:lp_solve_5.5/lp_price.c ****   return(current.varno);
 8847               		.loc 1 1163 0
 8848 383e 8DAD      		ldd r24,Y+61
 8849 3840 9EAD      		ldd r25,Y+62
 8850               	/* epilogue start */
1164:lp_solve_5.5/lp_price.c **** } /* rowprim */
 8851               		.loc 1 1164 0
 8852 3842 CF59      		subi r28,-97
 8853 3844 DF4F      		sbci r29,-1
 8854 3846 0FB6      		in __tmp_reg__,__SREG__
 8855 3848 F894      		cli
 8856 384a DEBF      		out __SP_H__,r29
 8857 384c 0FBE      		out __SREG__,__tmp_reg__
 8858 384e CDBF      		out __SP_L__,r28
 8859 3850 DF91      		pop r29
 8860 3852 CF91      		pop r28
 8861 3854 1F91      		pop r17
 8862 3856 0F91      		pop r16
 8863 3858 FF90      		pop r15
 8864 385a EF90      		pop r14
 8865 385c DF90      		pop r13
 8866 385e CF90      		pop r12
 8867 3860 BF90      		pop r11
 8868 3862 AF90      		pop r10
 8869 3864 0895      		ret
 8870               		.cfi_endproc
 8871               	.LFE29:
 8873               		.section	.rodata
 8874               	.LC5:
 8875 0105 726F 7764 		.string	"rowdual: Check for reduced accuracy and tolerance settings.\n"
 8875      7561 6C3A 
 8875      2043 6865 
 8875      636B 2066 
 8875      6F72 2072 
 8876               	.LC6:
 8877 0142 726F 7764 		.string	"rowdual: Infeasibility sum %18.12g in %7d constraints.\n"
 8877      7561 6C3A 
 8877      2049 6E66 
 8877      6561 7369 
 8877      6269 6C69 
 8878               	.LC7:
 8879 017a 726F 7764 		.string	"rowdual: rhs[%d] = %18.12g\n"
 8879      7561 6C3A 
 8879      2072 6873 
 8879      5B25 645D 
 8879      203D 2025 
 8880               	.LC8:
 8881 0196 726F 7764 		.string	"rowdual: Optimality - No primal infeasibilities found\n"
 8881      7561 6C3A 
 8881      204F 7074 
 8881      696D 616C 
 8881      6974 7920 
 8882               		.text
 8883               	.global	rowdual
 8885               	rowdual:
 8886               	.LFB30:
1165:lp_solve_5.5/lp_price.c **** 
1166:lp_solve_5.5/lp_price.c **** 
1167:lp_solve_5.5/lp_price.c **** /* Find the dual simplex leaving basic variable */
1168:lp_solve_5.5/lp_price.c **** STATIC int rowdual(lprec *lp, REAL *rhvec, MYBOOL forceoutEQ, MYBOOL updateinfeas, REAL *xviol)
1169:lp_solve_5.5/lp_price.c **** {
 8887               		.loc 1 1169 0
 8888               		.cfi_startproc
 8889 3866 CF92      		push r12
 8890               	.LCFI219:
 8891               		.cfi_def_cfa_offset 3
 8892               		.cfi_offset 12, -2
 8893 3868 DF92      		push r13
 8894               	.LCFI220:
 8895               		.cfi_def_cfa_offset 4
 8896               		.cfi_offset 13, -3
 8897 386a EF92      		push r14
 8898               	.LCFI221:
 8899               		.cfi_def_cfa_offset 5
 8900               		.cfi_offset 14, -4
 8901 386c FF92      		push r15
 8902               	.LCFI222:
 8903               		.cfi_def_cfa_offset 6
 8904               		.cfi_offset 15, -5
 8905 386e 0F93      		push r16
 8906               	.LCFI223:
 8907               		.cfi_def_cfa_offset 7
 8908               		.cfi_offset 16, -6
 8909 3870 1F93      		push r17
 8910               	.LCFI224:
 8911               		.cfi_def_cfa_offset 8
 8912               		.cfi_offset 17, -7
 8913 3872 CF93      		push r28
 8914               	.LCFI225:
 8915               		.cfi_def_cfa_offset 9
 8916               		.cfi_offset 28, -8
 8917 3874 DF93      		push r29
 8918               	.LCFI226:
 8919               		.cfi_def_cfa_offset 10
 8920               		.cfi_offset 29, -9
 8921 3876 CDB7      		in r28,__SP_L__
 8922 3878 DEB7      		in r29,__SP_H__
 8923               	.LCFI227:
 8924               		.cfi_def_cfa_register 28
 8925 387a CF54      		subi r28,79
 8926 387c D109      		sbc r29,__zero_reg__
 8927               	.LCFI228:
 8928               		.cfi_def_cfa_offset 89
 8929 387e 0FB6      		in __tmp_reg__,__SREG__
 8930 3880 F894      		cli
 8931 3882 DEBF      		out __SP_H__,r29
 8932 3884 0FBE      		out __SREG__,__tmp_reg__
 8933 3886 CDBF      		out __SP_L__,r28
 8934               	/* prologue: function */
 8935               	/* frame size = 79 */
 8936               	/* stack size = 87 */
 8937               	.L__stack_usage = 87
 8938 3888 FE01      		movw r30,r28
 8939 388a EA5B      		subi r30,-70
 8940 388c FF4F      		sbci r31,-1
 8941 388e 9183      		std Z+1,r25
 8942 3890 8083      		st Z,r24
 8943 3892 CE01      		movw r24,r28
 8944 3894 885B      		subi r24,-72
 8945 3896 9F4F      		sbci r25,-1
 8946 3898 FC01      		movw r30,r24
 8947 389a 7183      		std Z+1,r23
 8948 389c 6083      		st Z,r22
 8949 389e CE01      		movw r24,r28
 8950 38a0 865B      		subi r24,-74
 8951 38a2 9F4F      		sbci r25,-1
 8952 38a4 FC01      		movw r30,r24
 8953 38a6 4083      		st Z,r20
 8954 38a8 CE01      		movw r24,r28
 8955 38aa 855B      		subi r24,-75
 8956 38ac 9F4F      		sbci r25,-1
 8957 38ae FC01      		movw r30,r24
 8958 38b0 2083      		st Z,r18
 8959 38b2 CE01      		movw r24,r28
 8960 38b4 845B      		subi r24,-76
 8961 38b6 9F4F      		sbci r25,-1
 8962 38b8 FC01      		movw r30,r24
 8963 38ba 1183      		std Z+1,r17
 8964 38bc 0083      		st Z,r16
1170:lp_solve_5.5/lp_price.c ****   int       k, i, iy, iz, ii, ninfeas;
1171:lp_solve_5.5/lp_price.c ****   register REAL     rh;
1172:lp_solve_5.5/lp_price.c ****   REAL      up, lo = 0,
 8965               		.loc 1 1172 0
 8966 38be 1D86      		std Y+13,__zero_reg__
 8967 38c0 1E86      		std Y+14,__zero_reg__
 8968 38c2 1F86      		std Y+15,__zero_reg__
 8969 38c4 188A      		std Y+16,__zero_reg__
1173:lp_solve_5.5/lp_price.c ****             epsvalue, sinfeas, xinfeas;
1174:lp_solve_5.5/lp_price.c ****   pricerec  current, candidate;
1175:lp_solve_5.5/lp_price.c ****   MYBOOL    collectMP = FALSE;
 8970               		.loc 1 1175 0
 8971 38c6 198A      		std Y+17,__zero_reg__
1176:lp_solve_5.5/lp_price.c **** 
1177:lp_solve_5.5/lp_price.c ****   /* Initialize */
1178:lp_solve_5.5/lp_price.c ****   if(rhvec == NULL)
 8972               		.loc 1 1178 0
 8973 38c8 CE01      		movw r24,r28
 8974 38ca 885B      		subi r24,-72
 8975 38cc 9F4F      		sbci r25,-1
 8976 38ce FC01      		movw r30,r24
 8977 38d0 8081      		ld r24,Z
 8978 38d2 9181      		ldd r25,Z+1
 8979 38d4 892B      		or r24,r25
 8980 38d6 01F4      		brne .L344
1179:lp_solve_5.5/lp_price.c ****     rhvec = lp->rhs;
 8981               		.loc 1 1179 0
 8982 38d8 CE01      		movw r24,r28
 8983 38da 885B      		subi r24,-72
 8984 38dc 9F4F      		sbci r25,-1
 8985 38de 9E01      		movw r18,r28
 8986 38e0 2A5B      		subi r18,-70
 8987 38e2 3F4F      		sbci r19,-1
 8988 38e4 F901      		movw r30,r18
 8989 38e6 2081      		ld r18,Z
 8990 38e8 3181      		ldd r19,Z+1
 8991 38ea 2855      		subi r18,88
 8992 38ec 3D4F      		sbci r19,-3
 8993 38ee F901      		movw r30,r18
 8994 38f0 2081      		ld r18,Z
 8995 38f2 3181      		ldd r19,Z+1
 8996 38f4 FC01      		movw r30,r24
 8997 38f6 3183      		std Z+1,r19
 8998 38f8 2083      		st Z,r18
 8999               	.L344:
1180:lp_solve_5.5/lp_price.c ****   epsvalue = lp->epsdual;
 9000               		.loc 1 1180 0
 9001 38fa CE01      		movw r24,r28
 9002 38fc 8A5B      		subi r24,-70
 9003 38fe 9F4F      		sbci r25,-1
 9004 3900 FC01      		movw r30,r24
 9005 3902 8081      		ld r24,Z
 9006 3904 9181      		ldd r25,Z+1
 9007 3906 825E      		subi r24,-30
 9008 3908 9C4F      		sbci r25,-4
 9009 390a FC01      		movw r30,r24
 9010 390c 8081      		ld r24,Z
 9011 390e 9181      		ldd r25,Z+1
 9012 3910 A281      		ldd r26,Z+2
 9013 3912 B381      		ldd r27,Z+3
 9014 3914 8A8B      		std Y+18,r24
 9015 3916 9B8B      		std Y+19,r25
 9016 3918 AC8B      		std Y+20,r26
 9017 391a BD8B      		std Y+21,r27
1181:lp_solve_5.5/lp_price.c ****   current.pivot    = -epsvalue;  /* Initialize leaving variable threshold; "less than 0" */
 9018               		.loc 1 1181 0
 9019 391c 8A89      		ldd r24,Y+18
 9020 391e 9B89      		ldd r25,Y+19
 9021 3920 AC89      		ldd r26,Y+20
 9022 3922 BD89      		ldd r27,Y+21
 9023 3924 B058      		subi r27,0x80
 9024 3926 88A7      		std Y+40,r24
 9025 3928 99A7      		std Y+41,r25
 9026 392a AAA7      		std Y+42,r26
 9027 392c BBA7      		std Y+43,r27
1182:lp_solve_5.5/lp_price.c ****   current.theta    = 0;
 9028               		.loc 1 1182 0
 9029 392e 1CA2      		std Y+36,__zero_reg__
 9030 3930 1DA2      		std Y+37,__zero_reg__
 9031 3932 1EA2      		std Y+38,__zero_reg__
 9032 3934 1FA2      		std Y+39,__zero_reg__
1183:lp_solve_5.5/lp_price.c ****   current.varno    = 0;
 9033               		.loc 1 1183 0
 9034 3936 19AA      		std Y+49,__zero_reg__
 9035 3938 18AA      		std Y+48,__zero_reg__
1184:lp_solve_5.5/lp_price.c ****   current.isdual   = TRUE;
 9036               		.loc 1 1184 0
 9037 393a 81E0      		ldi r24,lo8(1)
 9038 393c 8CAB      		std Y+52,r24
1185:lp_solve_5.5/lp_price.c ****   current.lp       = lp;
 9039               		.loc 1 1185 0
 9040 393e CE01      		movw r24,r28
 9041 3940 8A5B      		subi r24,-70
 9042 3942 9F4F      		sbci r25,-1
 9043 3944 FC01      		movw r30,r24
 9044 3946 8081      		ld r24,Z
 9045 3948 9181      		ldd r25,Z+1
 9046 394a 9BAB      		std Y+51,r25
 9047 394c 8AAB      		std Y+50,r24
1186:lp_solve_5.5/lp_price.c ****   candidate.isdual = TRUE;
 9048               		.loc 1 1186 0
 9049 394e CE01      		movw r24,r28
 9050 3950 8B5B      		subi r24,-69
 9051 3952 9F4F      		sbci r25,-1
 9052 3954 21E0      		ldi r18,lo8(1)
 9053 3956 FC01      		movw r30,r24
 9054 3958 2083      		st Z,r18
1187:lp_solve_5.5/lp_price.c ****   candidate.lp     = lp;
 9055               		.loc 1 1187 0
 9056 395a CE01      		movw r24,r28
 9057 395c 8D5B      		subi r24,-67
 9058 395e 9F4F      		sbci r25,-1
 9059 3960 9E01      		movw r18,r28
 9060 3962 2A5B      		subi r18,-70
 9061 3964 3F4F      		sbci r19,-1
 9062 3966 F901      		movw r30,r18
 9063 3968 2081      		ld r18,Z
 9064 396a 3181      		ldd r19,Z+1
 9065 396c FC01      		movw r30,r24
 9066 396e 3183      		std Z+1,r19
 9067 3970 2083      		st Z,r18
1188:lp_solve_5.5/lp_price.c **** 
1189:lp_solve_5.5/lp_price.c ****   /* Loop over active partial row set */
1190:lp_solve_5.5/lp_price.c ****   if(is_action(lp->piv_strategy, PRICE_FORCEFULL)) {
 9068               		.loc 1 1190 0
 9069 3972 CE01      		movw r24,r28
 9070 3974 8A5B      		subi r24,-70
 9071 3976 9F4F      		sbci r25,-1
 9072 3978 FC01      		movw r30,r24
 9073 397a 8081      		ld r24,Z
 9074 397c 9181      		ldd r25,Z+1
 9075 397e 805A      		subi r24,-96
 9076 3980 9D4F      		sbci r25,-3
 9077 3982 FC01      		movw r30,r24
 9078 3984 8081      		ld r24,Z
 9079 3986 9181      		ldd r25,Z+1
 9080 3988 60E0      		ldi r22,0
 9081 398a 70E2      		ldi r23,lo8(32)
 9082 398c 0E94 0000 		call is_action
 9083 3990 8823      		tst r24
 9084 3992 01F0      		breq .L345
1191:lp_solve_5.5/lp_price.c ****     k  = 1;
 9085               		.loc 1 1191 0
 9086 3994 81E0      		ldi r24,lo8(1)
 9087 3996 90E0      		ldi r25,0
 9088 3998 9F8F      		std Y+31,r25
 9089 399a 8E8F      		std Y+30,r24
1192:lp_solve_5.5/lp_price.c ****     iy = lp->rows;
 9090               		.loc 1 1192 0
 9091 399c CE01      		movw r24,r28
 9092 399e 8A5B      		subi r24,-70
 9093 39a0 9F4F      		sbci r25,-1
 9094 39a2 FC01      		movw r30,r24
 9095 39a4 8081      		ld r24,Z
 9096 39a6 9181      		ldd r25,Z+1
 9097 39a8 8651      		subi r24,22
 9098 39aa 9E4F      		sbci r25,-2
 9099 39ac FC01      		movw r30,r24
 9100 39ae 8081      		ld r24,Z
 9101 39b0 9181      		ldd r25,Z+1
 9102 39b2 99A3      		std Y+33,r25
 9103 39b4 88A3      		std Y+32,r24
 9104 39b6 00C0      		rjmp .L346
 9105               	.L345:
1193:lp_solve_5.5/lp_price.c ****   }
1194:lp_solve_5.5/lp_price.c ****   else {
1195:lp_solve_5.5/lp_price.c ****     k = partial_blockStart(lp, TRUE);
 9106               		.loc 1 1195 0
 9107 39b8 CE01      		movw r24,r28
 9108 39ba 8A5B      		subi r24,-70
 9109 39bc 9F4F      		sbci r25,-1
 9110 39be FC01      		movw r30,r24
 9111 39c0 8081      		ld r24,Z
 9112 39c2 9181      		ldd r25,Z+1
 9113 39c4 61E0      		ldi r22,lo8(1)
 9114 39c6 0E94 0000 		call partial_blockStart
 9115 39ca 9F8F      		std Y+31,r25
 9116 39cc 8E8F      		std Y+30,r24
1196:lp_solve_5.5/lp_price.c ****     iy = partial_blockEnd(lp, TRUE);
 9117               		.loc 1 1196 0
 9118 39ce CE01      		movw r24,r28
 9119 39d0 8A5B      		subi r24,-70
 9120 39d2 9F4F      		sbci r25,-1
 9121 39d4 FC01      		movw r30,r24
 9122 39d6 8081      		ld r24,Z
 9123 39d8 9181      		ldd r25,Z+1
 9124 39da 61E0      		ldi r22,lo8(1)
 9125 39dc 0E94 0000 		call partial_blockEnd
 9126 39e0 99A3      		std Y+33,r25
 9127 39e2 88A3      		std Y+32,r24
 9128               	.L346:
1197:lp_solve_5.5/lp_price.c ****   }
1198:lp_solve_5.5/lp_price.c ****   ninfeas = 0;
 9129               		.loc 1 1198 0
 9130 39e4 1A82      		std Y+2,__zero_reg__
 9131 39e6 1982      		std Y+1,__zero_reg__
1199:lp_solve_5.5/lp_price.c ****   xinfeas = 0;
 9132               		.loc 1 1199 0
 9133 39e8 1F82      		std Y+7,__zero_reg__
 9134 39ea 1886      		std Y+8,__zero_reg__
 9135 39ec 1986      		std Y+9,__zero_reg__
 9136 39ee 1A86      		std Y+10,__zero_reg__
1200:lp_solve_5.5/lp_price.c ****   sinfeas = 0;
 9137               		.loc 1 1200 0
 9138 39f0 1B82      		std Y+3,__zero_reg__
 9139 39f2 1C82      		std Y+4,__zero_reg__
 9140 39f4 1D82      		std Y+5,__zero_reg__
 9141 39f6 1E82      		std Y+6,__zero_reg__
1201:lp_solve_5.5/lp_price.c ****   makePriceLoop(lp, &k, &iy, &iz);
 9142               		.loc 1 1201 0
 9143 39f8 9E01      		movw r18,r28
 9144 39fa 2E5D      		subi r18,-34
 9145 39fc 3F4F      		sbci r19,-1
 9146 39fe AE01      		movw r20,r28
 9147 3a00 405E      		subi r20,-32
 9148 3a02 5F4F      		sbci r21,-1
 9149 3a04 BE01      		movw r22,r28
 9150 3a06 625E      		subi r22,-30
 9151 3a08 7F4F      		sbci r23,-1
 9152 3a0a CE01      		movw r24,r28
 9153 3a0c 8A5B      		subi r24,-70
 9154 3a0e 9F4F      		sbci r25,-1
 9155 3a10 FC01      		movw r30,r24
 9156 3a12 8081      		ld r24,Z
 9157 3a14 9181      		ldd r25,Z+1
 9158 3a16 0E94 0000 		call makePriceLoop
1202:lp_solve_5.5/lp_price.c ****   iy *= iz;
 9159               		.loc 1 1202 0
 9160 3a1a 48A1      		ldd r20,Y+32
 9161 3a1c 59A1      		ldd r21,Y+33
 9162 3a1e 2AA1      		ldd r18,Y+34
 9163 3a20 3BA1      		ldd r19,Y+35
 9164 3a22 429F      		mul r20,r18
 9165 3a24 C001      		movw r24,r0
 9166 3a26 439F      		mul r20,r19
 9167 3a28 900D      		add r25,r0
 9168 3a2a 529F      		mul r21,r18
 9169 3a2c 900D      		add r25,r0
 9170 3a2e 1124      		clr r1
 9171 3a30 99A3      		std Y+33,r25
 9172 3a32 88A3      		std Y+32,r24
1203:lp_solve_5.5/lp_price.c ****   for(; k*iz <= iy; k += iz) {
 9173               		.loc 1 1203 0
 9174 3a34 00C0      		rjmp .L347
 9175               	.L365:
1204:lp_solve_5.5/lp_price.c **** 
1205:lp_solve_5.5/lp_price.c ****     /* Map loop variable to target */
1206:lp_solve_5.5/lp_price.c ****     i = k;
 9176               		.loc 1 1206 0
 9177 3a36 8E8D      		ldd r24,Y+30
 9178 3a38 9F8D      		ldd r25,Y+31
 9179 3a3a 9F8B      		std Y+23,r25
 9180 3a3c 8E8B      		std Y+22,r24
1207:lp_solve_5.5/lp_price.c **** 
1208:lp_solve_5.5/lp_price.c ****     /* Check if the pivot candidate is on the block-list */
1209:lp_solve_5.5/lp_price.c ****     if(lp->rejectpivot[0] > 0) {
 9181               		.loc 1 1209 0
 9182 3a3e CE01      		movw r24,r28
 9183 3a40 8A5B      		subi r24,-70
 9184 3a42 9F4F      		sbci r25,-1
 9185 3a44 FC01      		movw r30,r24
 9186 3a46 8081      		ld r24,Z
 9187 3a48 9181      		ldd r25,Z+1
 9188 3a4a 8C52      		subi r24,44
 9189 3a4c 9D4F      		sbci r25,-3
 9190 3a4e FC01      		movw r30,r24
 9191 3a50 8081      		ld r24,Z
 9192 3a52 9181      		ldd r25,Z+1
 9193 3a54 FC01      		movw r30,r24
 9194 3a56 8081      		ld r24,Z
 9195 3a58 9181      		ldd r25,Z+1
 9196 3a5a 1816      		cp __zero_reg__,r24
 9197 3a5c 1906      		cpc __zero_reg__,r25
 9198 3a5e 04F0      		brlt .+2
 9199 3a60 00C0      		rjmp .L348
 9200               	.LBB10:
1210:lp_solve_5.5/lp_price.c ****       int kk;
1211:lp_solve_5.5/lp_price.c ****       for(kk = 1; (kk <= lp->rejectpivot[0]) && (i != lp->rejectpivot[kk]); kk++);
 9201               		.loc 1 1211 0
 9202 3a62 81E0      		ldi r24,lo8(1)
 9203 3a64 90E0      		ldi r25,0
 9204 3a66 9C87      		std Y+12,r25
 9205 3a68 8B87      		std Y+11,r24
 9206 3a6a 00C0      		rjmp .L349
 9207               	.L351:
 9208               		.loc 1 1211 0 is_stmt 0 discriminator 4
 9209 3a6c 8B85      		ldd r24,Y+11
 9210 3a6e 9C85      		ldd r25,Y+12
 9211 3a70 0196      		adiw r24,1
 9212 3a72 9C87      		std Y+12,r25
 9213 3a74 8B87      		std Y+11,r24
 9214               	.L349:
 9215               		.loc 1 1211 0 discriminator 1
 9216 3a76 CE01      		movw r24,r28
 9217 3a78 8A5B      		subi r24,-70
 9218 3a7a 9F4F      		sbci r25,-1
 9219 3a7c FC01      		movw r30,r24
 9220 3a7e 8081      		ld r24,Z
 9221 3a80 9181      		ldd r25,Z+1
 9222 3a82 8C52      		subi r24,44
 9223 3a84 9D4F      		sbci r25,-3
 9224 3a86 FC01      		movw r30,r24
 9225 3a88 8081      		ld r24,Z
 9226 3a8a 9181      		ldd r25,Z+1
 9227 3a8c FC01      		movw r30,r24
 9228 3a8e 2081      		ld r18,Z
 9229 3a90 3181      		ldd r19,Z+1
 9230 3a92 8B85      		ldd r24,Y+11
 9231 3a94 9C85      		ldd r25,Y+12
 9232 3a96 2817      		cp r18,r24
 9233 3a98 3907      		cpc r19,r25
 9234 3a9a 04F0      		brlt .L350
 9235               		.loc 1 1211 0 discriminator 3
 9236 3a9c CE01      		movw r24,r28
 9237 3a9e 8A5B      		subi r24,-70
 9238 3aa0 9F4F      		sbci r25,-1
 9239 3aa2 FC01      		movw r30,r24
 9240 3aa4 8081      		ld r24,Z
 9241 3aa6 9181      		ldd r25,Z+1
 9242 3aa8 8C52      		subi r24,44
 9243 3aaa 9D4F      		sbci r25,-3
 9244 3aac FC01      		movw r30,r24
 9245 3aae 2081      		ld r18,Z
 9246 3ab0 3181      		ldd r19,Z+1
 9247 3ab2 8B85      		ldd r24,Y+11
 9248 3ab4 9C85      		ldd r25,Y+12
 9249 3ab6 880F      		lsl r24
 9250 3ab8 991F      		rol r25
 9251 3aba 820F      		add r24,r18
 9252 3abc 931F      		adc r25,r19
 9253 3abe FC01      		movw r30,r24
 9254 3ac0 2081      		ld r18,Z
 9255 3ac2 3181      		ldd r19,Z+1
 9256 3ac4 8E89      		ldd r24,Y+22
 9257 3ac6 9F89      		ldd r25,Y+23
 9258 3ac8 2817      		cp r18,r24
 9259 3aca 3907      		cpc r19,r25
 9260 3acc 01F4      		brne .L351
 9261               	.L350:
1212:lp_solve_5.5/lp_price.c ****       if(kk <= lp->rejectpivot[0])
 9262               		.loc 1 1212 0 is_stmt 1
 9263 3ace CE01      		movw r24,r28
 9264 3ad0 8A5B      		subi r24,-70
 9265 3ad2 9F4F      		sbci r25,-1
 9266 3ad4 FC01      		movw r30,r24
 9267 3ad6 8081      		ld r24,Z
 9268 3ad8 9181      		ldd r25,Z+1
 9269 3ada 8C52      		subi r24,44
 9270 3adc 9D4F      		sbci r25,-3
 9271 3ade FC01      		movw r30,r24
 9272 3ae0 8081      		ld r24,Z
 9273 3ae2 9181      		ldd r25,Z+1
 9274 3ae4 FC01      		movw r30,r24
 9275 3ae6 2081      		ld r18,Z
 9276 3ae8 3181      		ldd r19,Z+1
 9277 3aea 8B85      		ldd r24,Y+11
 9278 3aec 9C85      		ldd r25,Y+12
 9279 3aee 2817      		cp r18,r24
 9280 3af0 3907      		cpc r19,r25
 9281 3af2 04F0      		brlt .+2
 9282 3af4 00C0      		rjmp .L376
 9283               	.L348:
 9284               	.LBE10:
1213:lp_solve_5.5/lp_price.c ****         continue;
1214:lp_solve_5.5/lp_price.c ****     }
1215:lp_solve_5.5/lp_price.c **** 
1216:lp_solve_5.5/lp_price.c ****     /* Set local variables - express violation as a negative number */
1217:lp_solve_5.5/lp_price.c ****     ii = lp->var_basic[i];
 9285               		.loc 1 1217 0
 9286 3af6 CE01      		movw r24,r28
 9287 3af8 8A5B      		subi r24,-70
 9288 3afa 9F4F      		sbci r25,-1
 9289 3afc FC01      		movw r30,r24
 9290 3afe 8081      		ld r24,Z
 9291 3b00 9181      		ldd r25,Z+1
 9292 3b02 8453      		subi r24,52
 9293 3b04 9D4F      		sbci r25,-3
 9294 3b06 FC01      		movw r30,r24
 9295 3b08 2081      		ld r18,Z
 9296 3b0a 3181      		ldd r19,Z+1
 9297 3b0c 8E89      		ldd r24,Y+22
 9298 3b0e 9F89      		ldd r25,Y+23
 9299 3b10 880F      		lsl r24
 9300 3b12 991F      		rol r25
 9301 3b14 820F      		add r24,r18
 9302 3b16 931F      		adc r25,r19
 9303 3b18 FC01      		movw r30,r24
 9304 3b1a 8081      		ld r24,Z
 9305 3b1c 9181      		ldd r25,Z+1
 9306 3b1e 998F      		std Y+25,r25
 9307 3b20 888F      		std Y+24,r24
1218:lp_solve_5.5/lp_price.c ****     up = lp->upbo[ii];
 9308               		.loc 1 1218 0
 9309 3b22 CE01      		movw r24,r28
 9310 3b24 8A5B      		subi r24,-70
 9311 3b26 9F4F      		sbci r25,-1
 9312 3b28 FC01      		movw r30,r24
 9313 3b2a 8081      		ld r24,Z
 9314 3b2c 9181      		ldd r25,Z+1
 9315 3b2e 8055      		subi r24,80
 9316 3b30 9D4F      		sbci r25,-3
 9317 3b32 FC01      		movw r30,r24
 9318 3b34 2081      		ld r18,Z
 9319 3b36 3181      		ldd r19,Z+1
 9320 3b38 888D      		ldd r24,Y+24
 9321 3b3a 998D      		ldd r25,Y+25
 9322 3b3c 880F      		lsl r24
 9323 3b3e 991F      		rol r25
 9324 3b40 880F      		lsl r24
 9325 3b42 991F      		rol r25
 9326 3b44 820F      		add r24,r18
 9327 3b46 931F      		adc r25,r19
 9328 3b48 FC01      		movw r30,r24
 9329 3b4a 8081      		ld r24,Z
 9330 3b4c 9181      		ldd r25,Z+1
 9331 3b4e A281      		ldd r26,Z+2
 9332 3b50 B381      		ldd r27,Z+3
 9333 3b52 8A8F      		std Y+26,r24
 9334 3b54 9B8F      		std Y+27,r25
 9335 3b56 AC8F      		std Y+28,r26
 9336 3b58 BD8F      		std Y+29,r27
1219:lp_solve_5.5/lp_price.c ****     lo = 0;
 9337               		.loc 1 1219 0
 9338 3b5a 1D86      		std Y+13,__zero_reg__
 9339 3b5c 1E86      		std Y+14,__zero_reg__
 9340 3b5e 1F86      		std Y+15,__zero_reg__
 9341 3b60 188A      		std Y+16,__zero_reg__
1220:lp_solve_5.5/lp_price.c ****     rh = rhvec[i];
 9342               		.loc 1 1220 0
 9343 3b62 8E89      		ldd r24,Y+22
 9344 3b64 9F89      		ldd r25,Y+23
 9345 3b66 880F      		lsl r24
 9346 3b68 991F      		rol r25
 9347 3b6a 880F      		lsl r24
 9348 3b6c 991F      		rol r25
 9349 3b6e 9E01      		movw r18,r28
 9350 3b70 285B      		subi r18,-72
 9351 3b72 3F4F      		sbci r19,-1
 9352 3b74 F901      		movw r30,r18
 9353 3b76 2081      		ld r18,Z
 9354 3b78 3181      		ldd r19,Z+1
 9355 3b7a 820F      		add r24,r18
 9356 3b7c 931F      		adc r25,r19
 9357 3b7e FC01      		movw r30,r24
 9358 3b80 C080      		ld r12,Z
 9359 3b82 D180      		ldd r13,Z+1
 9360 3b84 E280      		ldd r14,Z+2
 9361 3b86 F380      		ldd r15,Z+3
1221:lp_solve_5.5/lp_price.c ****     if(rh > up)
 9362               		.loc 1 1221 0
 9363 3b88 2A8D      		ldd r18,Y+26
 9364 3b8a 3B8D      		ldd r19,Y+27
 9365 3b8c 4C8D      		ldd r20,Y+28
 9366 3b8e 5D8D      		ldd r21,Y+29
 9367 3b90 C701      		movw r24,r14
 9368 3b92 B601      		movw r22,r12
 9369 3b94 0E94 0000 		call __gtsf2
 9370 3b98 1816      		cp __zero_reg__,r24
 9371 3b9a 04F4      		brge .L375
1222:lp_solve_5.5/lp_price.c ****       rh = up - rh;
 9372               		.loc 1 1222 0
 9373 3b9c A701      		movw r20,r14
 9374 3b9e 9601      		movw r18,r12
 9375 3ba0 6A8D      		ldd r22,Y+26
 9376 3ba2 7B8D      		ldd r23,Y+27
 9377 3ba4 8C8D      		ldd r24,Y+28
 9378 3ba6 9D8D      		ldd r25,Y+29
 9379 3ba8 0E94 0000 		call __subsf3
 9380 3bac DC01      		movw r26,r24
 9381 3bae CB01      		movw r24,r22
 9382 3bb0 6C01      		movw r12,r24
 9383 3bb2 7D01      		movw r14,r26
 9384 3bb4 00C0      		rjmp .L355
 9385               	.L375:
1223:lp_solve_5.5/lp_price.c ****     else
1224:lp_solve_5.5/lp_price.c ****       rh -= lo;
 9386               		.loc 1 1224 0
 9387 3bb6 2D85      		ldd r18,Y+13
 9388 3bb8 3E85      		ldd r19,Y+14
 9389 3bba 4F85      		ldd r20,Y+15
 9390 3bbc 5889      		ldd r21,Y+16
 9391 3bbe C701      		movw r24,r14
 9392 3bc0 B601      		movw r22,r12
 9393 3bc2 0E94 0000 		call __subsf3
 9394 3bc6 DC01      		movw r26,r24
 9395 3bc8 CB01      		movw r24,r22
 9396 3bca 6C01      		movw r12,r24
 9397 3bcc 7D01      		movw r14,r26
 9398               	.L355:
1225:lp_solve_5.5/lp_price.c ****     up -= lo;
 9399               		.loc 1 1225 0
 9400 3bce 2D85      		ldd r18,Y+13
 9401 3bd0 3E85      		ldd r19,Y+14
 9402 3bd2 4F85      		ldd r20,Y+15
 9403 3bd4 5889      		ldd r21,Y+16
 9404 3bd6 6A8D      		ldd r22,Y+26
 9405 3bd8 7B8D      		ldd r23,Y+27
 9406 3bda 8C8D      		ldd r24,Y+28
 9407 3bdc 9D8D      		ldd r25,Y+29
 9408 3bde 0E94 0000 		call __subsf3
 9409 3be2 DC01      		movw r26,r24
 9410 3be4 CB01      		movw r24,r22
 9411 3be6 8A8F      		std Y+26,r24
 9412 3be8 9B8F      		std Y+27,r25
 9413 3bea AC8F      		std Y+28,r26
 9414 3bec BD8F      		std Y+29,r27
1226:lp_solve_5.5/lp_price.c **** 
1227:lp_solve_5.5/lp_price.c ****    /* Analyze relevant constraints ...
1228:lp_solve_5.5/lp_price.c ****       KE version skips uninteresting alternatives and gives a noticeable speedup */
1229:lp_solve_5.5/lp_price.c **** /*    if((rh < -epsvalue*sqrt(lp->matA->rowmax[i])) || */
1230:lp_solve_5.5/lp_price.c ****     if((rh < -epsvalue) ||
 9415               		.loc 1 1230 0
 9416 3bee 8A89      		ldd r24,Y+18
 9417 3bf0 9B89      		ldd r25,Y+19
 9418 3bf2 AC89      		ldd r26,Y+20
 9419 3bf4 BD89      		ldd r27,Y+21
 9420 3bf6 B058      		subi r27,0x80
 9421 3bf8 A701      		movw r20,r14
 9422 3bfa 9601      		movw r18,r12
 9423 3bfc BC01      		movw r22,r24
 9424 3bfe CD01      		movw r24,r26
 9425 3c00 0E94 0000 		call __gtsf2
 9426 3c04 1816      		cp __zero_reg__,r24
 9427 3c06 04F0      		brlt .L356
 9428               		.loc 1 1230 0 is_stmt 0 discriminator 1
 9429 3c08 CE01      		movw r24,r28
 9430 3c0a 865B      		subi r24,-74
 9431 3c0c 9F4F      		sbci r25,-1
 9432 3c0e FC01      		movw r30,r24
 9433 3c10 8081      		ld r24,Z
 9434 3c12 8130      		cpi r24,lo8(1)
 9435 3c14 01F0      		breq .+2
 9436 3c16 00C0      		rjmp .L352
1231:lp_solve_5.5/lp_price.c ****        ((forceoutEQ == TRUE) && (up < epsvalue))) {  /* It causes instability to remove the "TRUE" 
 9437               		.loc 1 1231 0 is_stmt 1
 9438 3c18 2A89      		ldd r18,Y+18
 9439 3c1a 3B89      		ldd r19,Y+19
 9440 3c1c 4C89      		ldd r20,Y+20
 9441 3c1e 5D89      		ldd r21,Y+21
 9442 3c20 6A8D      		ldd r22,Y+26
 9443 3c22 7B8D      		ldd r23,Y+27
 9444 3c24 8C8D      		ldd r24,Y+28
 9445 3c26 9D8D      		ldd r25,Y+29
 9446 3c28 0E94 0000 		call __ltsf2
 9447 3c2c 8823      		tst r24
 9448 3c2e 04F0      		brlt .+2
 9449 3c30 00C0      		rjmp .L352
 9450               	.L356:
1232:lp_solve_5.5/lp_price.c **** 
1233:lp_solve_5.5/lp_price.c ****      /* Accumulate stats */
1234:lp_solve_5.5/lp_price.c ****       ninfeas++;
 9451               		.loc 1 1234 0
 9452 3c32 8981      		ldd r24,Y+1
 9453 3c34 9A81      		ldd r25,Y+2
 9454 3c36 0196      		adiw r24,1
 9455 3c38 9A83      		std Y+2,r25
 9456 3c3a 8983      		std Y+1,r24
1235:lp_solve_5.5/lp_price.c ****       SETMIN(xinfeas, rh);
 9457               		.loc 1 1235 0
 9458 3c3c A701      		movw r20,r14
 9459 3c3e 9601      		movw r18,r12
 9460 3c40 6F81      		ldd r22,Y+7
 9461 3c42 7885      		ldd r23,Y+8
 9462 3c44 8985      		ldd r24,Y+9
 9463 3c46 9A85      		ldd r25,Y+10
 9464 3c48 0E94 0000 		call __gtsf2
 9465 3c4c 1816      		cp __zero_reg__,r24
 9466 3c4e 04F4      		brge .L358
 9467               		.loc 1 1235 0 is_stmt 0 discriminator 1
 9468 3c50 CF82      		std Y+7,r12
 9469 3c52 D886      		std Y+8,r13
 9470 3c54 E986      		std Y+9,r14
 9471 3c56 FA86      		std Y+10,r15
 9472               	.L358:
1236:lp_solve_5.5/lp_price.c ****       sinfeas += rh;
 9473               		.loc 1 1236 0 is_stmt 1
 9474 3c58 A701      		movw r20,r14
 9475 3c5a 9601      		movw r18,r12
 9476 3c5c 6B81      		ldd r22,Y+3
 9477 3c5e 7C81      		ldd r23,Y+4
 9478 3c60 8D81      		ldd r24,Y+5
 9479 3c62 9E81      		ldd r25,Y+6
 9480 3c64 0E94 0000 		call __addsf3
 9481 3c68 DC01      		movw r26,r24
 9482 3c6a CB01      		movw r24,r22
 9483 3c6c 8B83      		std Y+3,r24
 9484 3c6e 9C83      		std Y+4,r25
 9485 3c70 AD83      		std Y+5,r26
 9486 3c72 BE83      		std Y+6,r27
1237:lp_solve_5.5/lp_price.c **** 
1238:lp_solve_5.5/lp_price.c ****      /* Give a slight preference to fixed variables (mainly equality slacks) */
1239:lp_solve_5.5/lp_price.c ****       if(up < epsvalue) {
 9487               		.loc 1 1239 0
 9488 3c74 2A89      		ldd r18,Y+18
 9489 3c76 3B89      		ldd r19,Y+19
 9490 3c78 4C89      		ldd r20,Y+20
 9491 3c7a 5D89      		ldd r21,Y+21
 9492 3c7c 6A8D      		ldd r22,Y+26
 9493 3c7e 7B8D      		ldd r23,Y+27
 9494 3c80 8C8D      		ldd r24,Y+28
 9495 3c82 9D8D      		ldd r25,Y+29
 9496 3c84 0E94 0000 		call __ltsf2
 9497 3c88 8823      		tst r24
 9498 3c8a 04F0      		brlt .+2
 9499 3c8c 00C0      		rjmp .L360
1240:lp_solve_5.5/lp_price.c ****         /* Break out immediately if we are directed to force slacks out of the basis */
1241:lp_solve_5.5/lp_price.c ****         if(forceoutEQ == TRUE) {
 9500               		.loc 1 1241 0
 9501 3c8e CE01      		movw r24,r28
 9502 3c90 865B      		subi r24,-74
 9503 3c92 9F4F      		sbci r25,-1
 9504 3c94 FC01      		movw r30,r24
 9505 3c96 8081      		ld r24,Z
 9506 3c98 8130      		cpi r24,lo8(1)
 9507 3c9a 01F4      		brne .L362
1242:lp_solve_5.5/lp_price.c ****           current.varno = i;
 9508               		.loc 1 1242 0
 9509 3c9c 8E89      		ldd r24,Y+22
 9510 3c9e 9F89      		ldd r25,Y+23
 9511 3ca0 99AB      		std Y+49,r25
 9512 3ca2 88AB      		std Y+48,r24
1243:lp_solve_5.5/lp_price.c ****           current.pivot = -1;
 9513               		.loc 1 1243 0
 9514 3ca4 80E0      		ldi r24,0
 9515 3ca6 90E0      		ldi r25,0
 9516 3ca8 A0E8      		ldi r26,lo8(-128)
 9517 3caa BFEB      		ldi r27,lo8(-65)
 9518 3cac 88A7      		std Y+40,r24
 9519 3cae 99A7      		std Y+41,r25
 9520 3cb0 AAA7      		std Y+42,r26
 9521 3cb2 BBA7      		std Y+43,r27
1244:lp_solve_5.5/lp_price.c ****           break;
 9522               		.loc 1 1244 0
 9523 3cb4 00C0      		rjmp .L363
 9524               	.L362:
1245:lp_solve_5.5/lp_price.c ****         }
1246:lp_solve_5.5/lp_price.c ****         /* Give an extra early boost to equality slack elimination, if specified */
1247:lp_solve_5.5/lp_price.c ****         if(forceoutEQ == AUTOMATIC)
 9525               		.loc 1 1247 0
 9526 3cb6 CE01      		movw r24,r28
 9527 3cb8 865B      		subi r24,-74
 9528 3cba 9F4F      		sbci r25,-1
 9529 3cbc FC01      		movw r30,r24
 9530 3cbe 8081      		ld r24,Z
 9531 3cc0 8230      		cpi r24,lo8(2)
 9532 3cc2 01F4      		brne .L364
1248:lp_solve_5.5/lp_price.c ****           rh *= 10.0;
 9533               		.loc 1 1248 0
 9534 3cc4 20E0      		ldi r18,0
 9535 3cc6 30E0      		ldi r19,0
 9536 3cc8 40E2      		ldi r20,lo8(32)
 9537 3cca 51E4      		ldi r21,lo8(65)
 9538 3ccc C701      		movw r24,r14
 9539 3cce B601      		movw r22,r12
 9540 3cd0 0E94 0000 		call __mulsf3
 9541 3cd4 DC01      		movw r26,r24
 9542 3cd6 CB01      		movw r24,r22
 9543 3cd8 6C01      		movw r12,r24
 9544 3cda 7D01      		movw r14,r26
 9545 3cdc 00C0      		rjmp .L360
 9546               	.L364:
1249:lp_solve_5.5/lp_price.c ****         else /* .. or just the normal. marginal boost */
1250:lp_solve_5.5/lp_price.c ****           rh *= 1.0+lp->epspivot;
 9547               		.loc 1 1250 0
 9548 3cde CE01      		movw r24,r28
 9549 3ce0 8A5B      		subi r24,-70
 9550 3ce2 9F4F      		sbci r25,-1
 9551 3ce4 FC01      		movw r30,r24
 9552 3ce6 8081      		ld r24,Z
 9553 3ce8 9181      		ldd r25,Z+1
 9554 3cea 8E5D      		subi r24,-34
 9555 3cec 9C4F      		sbci r25,-4
 9556 3cee FC01      		movw r30,r24
 9557 3cf0 8081      		ld r24,Z
 9558 3cf2 9181      		ldd r25,Z+1
 9559 3cf4 A281      		ldd r26,Z+2
 9560 3cf6 B381      		ldd r27,Z+3
 9561 3cf8 20E0      		ldi r18,0
 9562 3cfa 30E0      		ldi r19,0
 9563 3cfc 40E8      		ldi r20,lo8(-128)
 9564 3cfe 5FE3      		ldi r21,lo8(63)
 9565 3d00 BC01      		movw r22,r24
 9566 3d02 CD01      		movw r24,r26
 9567 3d04 0E94 0000 		call __addsf3
 9568 3d08 DC01      		movw r26,r24
 9569 3d0a CB01      		movw r24,r22
 9570 3d0c 9C01      		movw r18,r24
 9571 3d0e AD01      		movw r20,r26
 9572 3d10 C701      		movw r24,r14
 9573 3d12 B601      		movw r22,r12
 9574 3d14 0E94 0000 		call __mulsf3
 9575 3d18 DC01      		movw r26,r24
 9576 3d1a CB01      		movw r24,r22
 9577 3d1c 6C01      		movw r12,r24
 9578 3d1e 7D01      		movw r14,r26
 9579               	.L360:
1251:lp_solve_5.5/lp_price.c ****       }
1252:lp_solve_5.5/lp_price.c **** 
1253:lp_solve_5.5/lp_price.c ****      /* Select leaving variable according to strategy (the most negative/largest violation) */
1254:lp_solve_5.5/lp_price.c ****       candidate.pivot = normalizeEdge(lp, i, rh, TRUE);
 9580               		.loc 1 1254 0
 9581 3d20 6E89      		ldd r22,Y+22
 9582 3d22 7F89      		ldd r23,Y+23
 9583 3d24 CE01      		movw r24,r28
 9584 3d26 8A5B      		subi r24,-70
 9585 3d28 9F4F      		sbci r25,-1
 9586 3d2a FC01      		movw r30,r24
 9587 3d2c 8081      		ld r24,Z
 9588 3d2e 9181      		ldd r25,Z+1
 9589 3d30 01E0      		ldi r16,lo8(1)
 9590 3d32 A701      		movw r20,r14
 9591 3d34 9601      		movw r18,r12
 9592 3d36 0E94 0000 		call normalizeEdge
 9593 3d3a DC01      		movw r26,r24
 9594 3d3c CB01      		movw r24,r22
 9595 3d3e 89AF      		std Y+57,r24
 9596 3d40 9AAF      		std Y+58,r25
 9597 3d42 ABAF      		std Y+59,r26
 9598 3d44 BCAF      		std Y+60,r27
1255:lp_solve_5.5/lp_price.c ****       candidate.varno = i;
 9599               		.loc 1 1255 0
 9600 3d46 CE01      		movw r24,r28
 9601 3d48 8F5B      		subi r24,-65
 9602 3d4a 9F4F      		sbci r25,-1
 9603 3d4c 2E89      		ldd r18,Y+22
 9604 3d4e 3F89      		ldd r19,Y+23
 9605 3d50 FC01      		movw r30,r24
 9606 3d52 3183      		std Z+1,r19
 9607 3d54 2083      		st Z,r18
1256:lp_solve_5.5/lp_price.c ****       if(findImprovementVar(&current, &candidate, collectMP, NULL))
 9608               		.loc 1 1256 0
 9609 3d56 BE01      		movw r22,r28
 9610 3d58 6B5C      		subi r22,-53
 9611 3d5a 7F4F      		sbci r23,-1
 9612 3d5c CE01      		movw r24,r28
 9613 3d5e 8496      		adiw r24,36
 9614 3d60 20E0      		ldi r18,0
 9615 3d62 30E0      		ldi r19,0
 9616 3d64 4989      		ldd r20,Y+17
 9617 3d66 0E94 0000 		call findImprovementVar
 9618 3d6a 8823      		tst r24
 9619 3d6c 01F4      		brne .L377
 9620 3d6e 00C0      		rjmp .L352
 9621               	.L376:
 9622               	.LBB11:
1213:lp_solve_5.5/lp_price.c ****     }
 9623               		.loc 1 1213 0
 9624 3d70 0000      		nop
 9625               	.L352:
 9626               	.LBE11:
1203:lp_solve_5.5/lp_price.c **** 
 9627               		.loc 1 1203 0
 9628 3d72 2E8D      		ldd r18,Y+30
 9629 3d74 3F8D      		ldd r19,Y+31
 9630 3d76 8AA1      		ldd r24,Y+34
 9631 3d78 9BA1      		ldd r25,Y+35
 9632 3d7a 820F      		add r24,r18
 9633 3d7c 931F      		adc r25,r19
 9634 3d7e 9F8F      		std Y+31,r25
 9635 3d80 8E8F      		std Y+30,r24
 9636               	.L347:
1203:lp_solve_5.5/lp_price.c **** 
 9637               		.loc 1 1203 0 is_stmt 0 discriminator 1
 9638 3d82 4E8D      		ldd r20,Y+30
 9639 3d84 5F8D      		ldd r21,Y+31
 9640 3d86 8AA1      		ldd r24,Y+34
 9641 3d88 9BA1      		ldd r25,Y+35
 9642 3d8a 489F      		mul r20,r24
 9643 3d8c 9001      		movw r18,r0
 9644 3d8e 499F      		mul r20,r25
 9645 3d90 300D      		add r19,r0
 9646 3d92 589F      		mul r21,r24
 9647 3d94 300D      		add r19,r0
 9648 3d96 1124      		clr r1
 9649 3d98 88A1      		ldd r24,Y+32
 9650 3d9a 99A1      		ldd r25,Y+33
 9651 3d9c 8217      		cp r24,r18
 9652 3d9e 9307      		cpc r25,r19
 9653 3da0 04F0      		brlt .+2
 9654 3da2 00C0      		rjmp .L365
 9655 3da4 00C0      		rjmp .L363
 9656               	.L377:
1257:lp_solve_5.5/lp_price.c ****         break;
 9657               		.loc 1 1257 0 is_stmt 1
 9658 3da6 0000      		nop
 9659               	.L363:
1258:lp_solve_5.5/lp_price.c ****     }
1259:lp_solve_5.5/lp_price.c ****   }
1260:lp_solve_5.5/lp_price.c **** 
1261:lp_solve_5.5/lp_price.c ****   /* Verify infeasibility */
1262:lp_solve_5.5/lp_price.c ****   if(updateinfeas)
 9660               		.loc 1 1262 0
 9661 3da8 CE01      		movw r24,r28
 9662 3daa 855B      		subi r24,-75
 9663 3dac 9F4F      		sbci r25,-1
 9664 3dae FC01      		movw r30,r24
 9665 3db0 8081      		ld r24,Z
 9666 3db2 8823      		tst r24
 9667 3db4 01F0      		breq .L366
1263:lp_solve_5.5/lp_price.c ****     lp->suminfeas = fabs(sinfeas);
 9668               		.loc 1 1263 0
 9669 3db6 8B81      		ldd r24,Y+3
 9670 3db8 9C81      		ldd r25,Y+4
 9671 3dba AD81      		ldd r26,Y+5
 9672 3dbc BE81      		ldd r27,Y+6
 9673 3dbe BF77      		andi r27,0x7f
 9674 3dc0 9E01      		movw r18,r28
 9675 3dc2 2A5B      		subi r18,-70
 9676 3dc4 3F4F      		sbci r19,-1
 9677 3dc6 F901      		movw r30,r18
 9678 3dc8 2081      		ld r18,Z
 9679 3dca 3181      		ldd r19,Z+1
 9680 3dcc 2C51      		subi r18,28
 9681 3dce 3D4F      		sbci r19,-3
 9682 3dd0 F901      		movw r30,r18
 9683 3dd2 8083      		st Z,r24
 9684 3dd4 9183      		std Z+1,r25
 9685 3dd6 A283      		std Z+2,r26
 9686 3dd8 B383      		std Z+3,r27
 9687               	.L366:
1264:lp_solve_5.5/lp_price.c ****   if((ninfeas > 1) &&
 9688               		.loc 1 1264 0
 9689 3dda 8981      		ldd r24,Y+1
 9690 3ddc 9A81      		ldd r25,Y+2
 9691 3dde 0297      		sbiw r24,2
 9692 3de0 04F4      		brge .+2
 9693 3de2 00C0      		rjmp .L367
1265:lp_solve_5.5/lp_price.c ****      !verify_stability(lp, FALSE, xinfeas, sinfeas, ninfeas)) {
 9694               		.loc 1 1265 0 discriminator 1
 9695 3de4 0981      		ldd r16,Y+1
 9696 3de6 1A81      		ldd r17,Y+2
 9697 3de8 2B81      		ldd r18,Y+3
 9698 3dea 3C81      		ldd r19,Y+4
 9699 3dec 4D81      		ldd r20,Y+5
 9700 3dee 5E81      		ldd r21,Y+6
 9701 3df0 8F81      		ldd r24,Y+7
 9702 3df2 9885      		ldd r25,Y+8
 9703 3df4 A985      		ldd r26,Y+9
 9704 3df6 BA85      		ldd r27,Y+10
 9705 3df8 BE01      		movw r22,r28
 9706 3dfa 6A5B      		subi r22,-70
 9707 3dfc 7F4F      		sbci r23,-1
 9708 3dfe FB01      		movw r30,r22
 9709 3e00 0190      		ld __tmp_reg__,Z+
 9710 3e02 F081      		ld r31,Z
 9711 3e04 E02D      		mov r30,__tmp_reg__
 9712 3e06 6096      		adiw r28,78-62
 9713 3e08 FFAF      		std Y+63,r31
 9714 3e0a EEAF      		std Y+62,r30
 9715 3e0c 6097      		sbiw r28,78-62
 9716 3e0e 6801      		movw r12,r16
 9717 3e10 7901      		movw r14,r18
 9718 3e12 8A01      		movw r16,r20
 9719 3e14 9C01      		movw r18,r24
 9720 3e16 AD01      		movw r20,r26
 9721 3e18 60E0      		ldi r22,0
 9722 3e1a 6096      		adiw r28,78-62
 9723 3e1c 8EAD      		ldd r24,Y+62
 9724 3e1e 9FAD      		ldd r25,Y+63
 9725 3e20 6097      		sbiw r28,78-62
 9726 3e22 0E94 0000 		call verify_stability
1264:lp_solve_5.5/lp_price.c ****   if((ninfeas > 1) &&
 9727               		.loc 1 1264 0 discriminator 1
 9728 3e26 8823      		tst r24
 9729 3e28 01F4      		brne .L367
1266:lp_solve_5.5/lp_price.c ****     report(lp, IMPORTANT, "rowdual: Check for reduced accuracy and tolerance settings.\n");
 9730               		.loc 1 1266 0
 9731 3e2a 80E0      		ldi r24,lo8(.LC5)
 9732 3e2c 90E0      		ldi r25,hi8(.LC5)
 9733 3e2e 892F      		mov r24,r25
 9734 3e30 8F93      		push r24
 9735 3e32 80E0      		ldi r24,lo8(.LC5)
 9736 3e34 90E0      		ldi r25,hi8(.LC5)
 9737 3e36 8F93      		push r24
 9738 3e38 1F92      		push __zero_reg__
 9739 3e3a 83E0      		ldi r24,lo8(3)
 9740 3e3c 8F93      		push r24
 9741 3e3e CE01      		movw r24,r28
 9742 3e40 8A5B      		subi r24,-70
 9743 3e42 9F4F      		sbci r25,-1
 9744 3e44 FC01      		movw r30,r24
 9745 3e46 2181      		ldd r18,Z+1
 9746 3e48 2F93      		push r18
 9747 3e4a FC01      		movw r30,r24
 9748 3e4c 8081      		ld r24,Z
 9749 3e4e 8F93      		push r24
 9750 3e50 0E94 0000 		call report
 9751 3e54 0F90      		pop __tmp_reg__
 9752 3e56 0F90      		pop __tmp_reg__
 9753 3e58 0F90      		pop __tmp_reg__
 9754 3e5a 0F90      		pop __tmp_reg__
 9755 3e5c 0F90      		pop __tmp_reg__
 9756 3e5e 0F90      		pop __tmp_reg__
1267:lp_solve_5.5/lp_price.c ****     current.varno = 0;
 9757               		.loc 1 1267 0
 9758 3e60 19AA      		std Y+49,__zero_reg__
 9759 3e62 18AA      		std Y+48,__zero_reg__
 9760               	.L367:
1268:lp_solve_5.5/lp_price.c ****   }
1269:lp_solve_5.5/lp_price.c **** 
1270:lp_solve_5.5/lp_price.c ****   /* Produce statistics */
1271:lp_solve_5.5/lp_price.c ****   if(lp->spx_trace) {
 9761               		.loc 1 1271 0
 9762 3e64 CE01      		movw r24,r28
 9763 3e66 8A5B      		subi r24,-70
 9764 3e68 9F4F      		sbci r25,-1
 9765 3e6a FC01      		movw r30,r24
 9766 3e6c 8081      		ld r24,Z
 9767 3e6e 9181      		ldd r25,Z+1
 9768 3e70 8E5F      		subi r24,-2
 9769 3e72 9D4F      		sbci r25,-3
 9770 3e74 FC01      		movw r30,r24
 9771 3e76 8081      		ld r24,Z
 9772 3e78 8823      		tst r24
 9773 3e7a 01F4      		brne .+2
 9774 3e7c 00C0      		rjmp .L368
1272:lp_solve_5.5/lp_price.c ****     report(lp, NORMAL, "rowdual: Infeasibility sum " RESULTVALUEMASK " in %7d constraints.\n",
 9775               		.loc 1 1272 0
 9776 3e7e 8A81      		ldd r24,Y+2
 9777 3e80 8F93      		push r24
 9778 3e82 8981      		ldd r24,Y+1
 9779 3e84 8F93      		push r24
 9780 3e86 8E81      		ldd r24,Y+6
 9781 3e88 8F93      		push r24
 9782 3e8a 8D81      		ldd r24,Y+5
 9783 3e8c 8F93      		push r24
 9784 3e8e 8C81      		ldd r24,Y+4
 9785 3e90 8F93      		push r24
 9786 3e92 8B81      		ldd r24,Y+3
 9787 3e94 8F93      		push r24
 9788 3e96 80E0      		ldi r24,lo8(.LC6)
 9789 3e98 90E0      		ldi r25,hi8(.LC6)
 9790 3e9a 892F      		mov r24,r25
 9791 3e9c 8F93      		push r24
 9792 3e9e 80E0      		ldi r24,lo8(.LC6)
 9793 3ea0 90E0      		ldi r25,hi8(.LC6)
 9794 3ea2 8F93      		push r24
 9795 3ea4 1F92      		push __zero_reg__
 9796 3ea6 84E0      		ldi r24,lo8(4)
 9797 3ea8 8F93      		push r24
 9798 3eaa CE01      		movw r24,r28
 9799 3eac 8A5B      		subi r24,-70
 9800 3eae 9F4F      		sbci r25,-1
 9801 3eb0 FC01      		movw r30,r24
 9802 3eb2 2181      		ldd r18,Z+1
 9803 3eb4 2F93      		push r18
 9804 3eb6 FC01      		movw r30,r24
 9805 3eb8 8081      		ld r24,Z
 9806 3eba 8F93      		push r24
 9807 3ebc 0E94 0000 		call report
 9808 3ec0 8DB7      		in r24,__SP_L__
 9809 3ec2 9EB7      		in r25,__SP_H__
 9810 3ec4 0C96      		adiw r24,12
 9811 3ec6 0FB6      		in __tmp_reg__,__SREG__
 9812 3ec8 F894      		cli
 9813 3eca DEBF      		out __SP_H__,r29
 9814 3ecc 0FBE      		out __SREG__,__tmp_reg__
 9815 3ece CDBF      		out __SP_L__,r28
1273:lp_solve_5.5/lp_price.c ****                         sinfeas, ninfeas);
1274:lp_solve_5.5/lp_price.c ****     if(current.varno > 0) {
 9816               		.loc 1 1274 0
 9817 3ed0 88A9      		ldd r24,Y+48
 9818 3ed2 99A9      		ldd r25,Y+49
 9819 3ed4 1816      		cp __zero_reg__,r24
 9820 3ed6 1906      		cpc __zero_reg__,r25
 9821 3ed8 04F0      		brlt .+2
 9822 3eda 00C0      		rjmp .L369
1275:lp_solve_5.5/lp_price.c ****       report(lp, DETAILED, "rowdual: rhs[%d] = " RESULTVALUEMASK "\n",
1276:lp_solve_5.5/lp_price.c ****                            current.varno, lp->rhs[current.varno]);
 9823               		.loc 1 1276 0
 9824 3edc CE01      		movw r24,r28
 9825 3ede 8A5B      		subi r24,-70
 9826 3ee0 9F4F      		sbci r25,-1
 9827 3ee2 FC01      		movw r30,r24
 9828 3ee4 8081      		ld r24,Z
 9829 3ee6 9181      		ldd r25,Z+1
 9830 3ee8 8855      		subi r24,88
 9831 3eea 9D4F      		sbci r25,-3
 9832 3eec FC01      		movw r30,r24
 9833 3eee 2081      		ld r18,Z
 9834 3ef0 3181      		ldd r19,Z+1
 9835 3ef2 88A9      		ldd r24,Y+48
 9836 3ef4 99A9      		ldd r25,Y+49
 9837 3ef6 880F      		lsl r24
 9838 3ef8 991F      		rol r25
 9839 3efa 880F      		lsl r24
 9840 3efc 991F      		rol r25
 9841 3efe 820F      		add r24,r18
 9842 3f00 931F      		adc r25,r19
1275:lp_solve_5.5/lp_price.c ****       report(lp, DETAILED, "rowdual: rhs[%d] = " RESULTVALUEMASK "\n",
 9843               		.loc 1 1275 0
 9844 3f02 FC01      		movw r30,r24
 9845 3f04 8081      		ld r24,Z
 9846 3f06 9181      		ldd r25,Z+1
 9847 3f08 A281      		ldd r26,Z+2
 9848 3f0a B381      		ldd r27,Z+3
 9849 3f0c 28A9      		ldd r18,Y+48
 9850 3f0e 39A9      		ldd r19,Y+49
 9851 3f10 4B2F      		mov r20,r27
 9852 3f12 4F93      		push r20
 9853 3f14 4A2F      		mov r20,r26
 9854 3f16 4F93      		push r20
 9855 3f18 492F      		mov r20,r25
 9856 3f1a 4F93      		push r20
 9857 3f1c 8F93      		push r24
 9858 3f1e 832F      		mov r24,r19
 9859 3f20 8F93      		push r24
 9860 3f22 822F      		mov r24,r18
 9861 3f24 8F93      		push r24
 9862 3f26 80E0      		ldi r24,lo8(.LC7)
 9863 3f28 90E0      		ldi r25,hi8(.LC7)
 9864 3f2a 892F      		mov r24,r25
 9865 3f2c 8F93      		push r24
 9866 3f2e 80E0      		ldi r24,lo8(.LC7)
 9867 3f30 90E0      		ldi r25,hi8(.LC7)
 9868 3f32 8F93      		push r24
 9869 3f34 1F92      		push __zero_reg__
 9870 3f36 85E0      		ldi r24,lo8(5)
 9871 3f38 8F93      		push r24
 9872 3f3a CE01      		movw r24,r28
 9873 3f3c 8A5B      		subi r24,-70
 9874 3f3e 9F4F      		sbci r25,-1
 9875 3f40 FC01      		movw r30,r24
 9876 3f42 2181      		ldd r18,Z+1
 9877 3f44 2F93      		push r18
 9878 3f46 FC01      		movw r30,r24
 9879 3f48 8081      		ld r24,Z
 9880 3f4a 8F93      		push r24
 9881 3f4c 0E94 0000 		call report
 9882 3f50 8DB7      		in r24,__SP_L__
 9883 3f52 9EB7      		in r25,__SP_H__
 9884 3f54 0C96      		adiw r24,12
 9885 3f56 0FB6      		in __tmp_reg__,__SREG__
 9886 3f58 F894      		cli
 9887 3f5a DEBF      		out __SP_H__,r29
 9888 3f5c 0FBE      		out __SREG__,__tmp_reg__
 9889 3f5e CDBF      		out __SP_L__,r28
 9890 3f60 00C0      		rjmp .L368
 9891               	.L369:
1277:lp_solve_5.5/lp_price.c ****     }
1278:lp_solve_5.5/lp_price.c ****     else
1279:lp_solve_5.5/lp_price.c ****       report(lp, FULL, "rowdual: Optimality - No primal infeasibilities found\n");
 9892               		.loc 1 1279 0
 9893 3f62 80E0      		ldi r24,lo8(.LC8)
 9894 3f64 90E0      		ldi r25,hi8(.LC8)
 9895 3f66 892F      		mov r24,r25
 9896 3f68 8F93      		push r24
 9897 3f6a 80E0      		ldi r24,lo8(.LC8)
 9898 3f6c 90E0      		ldi r25,hi8(.LC8)
 9899 3f6e 8F93      		push r24
 9900 3f70 1F92      		push __zero_reg__
 9901 3f72 86E0      		ldi r24,lo8(6)
 9902 3f74 8F93      		push r24
 9903 3f76 CE01      		movw r24,r28
 9904 3f78 8A5B      		subi r24,-70
 9905 3f7a 9F4F      		sbci r25,-1
 9906 3f7c FC01      		movw r30,r24
 9907 3f7e 2181      		ldd r18,Z+1
 9908 3f80 2F93      		push r18
 9909 3f82 FC01      		movw r30,r24
 9910 3f84 8081      		ld r24,Z
 9911 3f86 8F93      		push r24
 9912 3f88 0E94 0000 		call report
 9913 3f8c 0F90      		pop __tmp_reg__
 9914 3f8e 0F90      		pop __tmp_reg__
 9915 3f90 0F90      		pop __tmp_reg__
 9916 3f92 0F90      		pop __tmp_reg__
 9917 3f94 0F90      		pop __tmp_reg__
 9918 3f96 0F90      		pop __tmp_reg__
 9919               	.L368:
1280:lp_solve_5.5/lp_price.c ****   }
1281:lp_solve_5.5/lp_price.c ****   if(xviol != NULL)
 9920               		.loc 1 1281 0
 9921 3f98 CE01      		movw r24,r28
 9922 3f9a 845B      		subi r24,-76
 9923 3f9c 9F4F      		sbci r25,-1
 9924 3f9e FC01      		movw r30,r24
 9925 3fa0 8081      		ld r24,Z
 9926 3fa2 9181      		ldd r25,Z+1
 9927 3fa4 892B      		or r24,r25
 9928 3fa6 01F0      		breq .L370
1282:lp_solve_5.5/lp_price.c ****     *xviol = fabs(xinfeas);
 9929               		.loc 1 1282 0
 9930 3fa8 8F81      		ldd r24,Y+7
 9931 3faa 9885      		ldd r25,Y+8
 9932 3fac A985      		ldd r26,Y+9
 9933 3fae BA85      		ldd r27,Y+10
 9934 3fb0 BF77      		andi r27,0x7f
 9935 3fb2 9E01      		movw r18,r28
 9936 3fb4 245B      		subi r18,-76
 9937 3fb6 3F4F      		sbci r19,-1
 9938 3fb8 F901      		movw r30,r18
 9939 3fba 2081      		ld r18,Z
 9940 3fbc 3181      		ldd r19,Z+1
 9941 3fbe F901      		movw r30,r18
 9942 3fc0 8083      		st Z,r24
 9943 3fc2 9183      		std Z+1,r25
 9944 3fc4 A283      		std Z+2,r26
 9945 3fc6 B383      		std Z+3,r27
 9946               	.L370:
1283:lp_solve_5.5/lp_price.c **** 
1284:lp_solve_5.5/lp_price.c ****   return(current.varno);
 9947               		.loc 1 1284 0
 9948 3fc8 88A9      		ldd r24,Y+48
 9949 3fca 99A9      		ldd r25,Y+49
 9950               	/* epilogue start */
1285:lp_solve_5.5/lp_price.c **** } /* rowdual */
 9951               		.loc 1 1285 0
 9952 3fcc C15B      		subi r28,-79
 9953 3fce DF4F      		sbci r29,-1
 9954 3fd0 0FB6      		in __tmp_reg__,__SREG__
 9955 3fd2 F894      		cli
 9956 3fd4 DEBF      		out __SP_H__,r29
 9957 3fd6 0FBE      		out __SREG__,__tmp_reg__
 9958 3fd8 CDBF      		out __SP_L__,r28
 9959 3fda DF91      		pop r29
 9960 3fdc CF91      		pop r28
 9961 3fde 1F91      		pop r17
 9962 3fe0 0F91      		pop r16
 9963 3fe2 FF90      		pop r15
 9964 3fe4 EF90      		pop r14
 9965 3fe6 DF90      		pop r13
 9966 3fe8 CF90      		pop r12
 9967 3fea 0895      		ret
 9968               		.cfi_endproc
 9969               	.LFE30:
 9971               	.global	longdual_testset
 9973               	longdual_testset:
 9974               	.LFB31:
1286:lp_solve_5.5/lp_price.c **** 
1287:lp_solve_5.5/lp_price.c **** 
1288:lp_solve_5.5/lp_price.c **** STATIC void longdual_testset(lprec *lp, int which, int rownr, REAL *prow, int *nzprow,
1289:lp_solve_5.5/lp_price.c ****                                                     REAL *drow, int *nzdrow)
1290:lp_solve_5.5/lp_price.c **** {
 9975               		.loc 1 1290 0
 9976               		.cfi_startproc
 9977 3fec CF92      		push r12
 9978               	.LCFI229:
 9979               		.cfi_def_cfa_offset 3
 9980               		.cfi_offset 12, -2
 9981 3fee DF92      		push r13
 9982               	.LCFI230:
 9983               		.cfi_def_cfa_offset 4
 9984               		.cfi_offset 13, -3
 9985 3ff0 EF92      		push r14
 9986               	.LCFI231:
 9987               		.cfi_def_cfa_offset 5
 9988               		.cfi_offset 14, -4
 9989 3ff2 FF92      		push r15
 9990               	.LCFI232:
 9991               		.cfi_def_cfa_offset 6
 9992               		.cfi_offset 15, -5
 9993 3ff4 0F93      		push r16
 9994               	.LCFI233:
 9995               		.cfi_def_cfa_offset 7
 9996               		.cfi_offset 16, -6
 9997 3ff6 1F93      		push r17
 9998               	.LCFI234:
 9999               		.cfi_def_cfa_offset 8
 10000               		.cfi_offset 17, -7
 10001 3ff8 CF93      		push r28
 10002               	.LCFI235:
 10003               		.cfi_def_cfa_offset 9
 10004               		.cfi_offset 28, -8
 10005 3ffa DF93      		push r29
 10006               	.LCFI236:
 10007               		.cfi_def_cfa_offset 10
 10008               		.cfi_offset 29, -9
 10009 3ffc CDB7      		in r28,__SP_L__
 10010 3ffe DEB7      		in r29,__SP_H__
 10011               	.LCFI237:
 10012               		.cfi_def_cfa_register 28
 10013 4000 6697      		sbiw r28,22
 10014               	.LCFI238:
 10015               		.cfi_def_cfa_offset 32
 10016 4002 0FB6      		in __tmp_reg__,__SREG__
 10017 4004 F894      		cli
 10018 4006 DEBF      		out __SP_H__,r29
 10019 4008 0FBE      		out __SREG__,__tmp_reg__
 10020 400a CDBF      		out __SP_L__,r28
 10021               	/* prologue: function */
 10022               	/* frame size = 22 */
 10023               	/* stack size = 30 */
 10024               	.L__stack_usage = 30
 10025 400c 9A87      		std Y+10,r25
 10026 400e 8987      		std Y+9,r24
 10027 4010 7C87      		std Y+12,r23
 10028 4012 6B87      		std Y+11,r22
 10029 4014 5E87      		std Y+14,r21
 10030 4016 4D87      		std Y+13,r20
 10031 4018 388B      		std Y+16,r19
 10032 401a 2F87      		std Y+15,r18
 10033 401c 1A8B      		std Y+18,r17
 10034 401e 098B      		std Y+17,r16
 10035 4020 FC8A      		std Y+20,r15
 10036 4022 EB8A      		std Y+19,r14
 10037 4024 DE8A      		std Y+22,r13
 10038 4026 CD8A      		std Y+21,r12
1291:lp_solve_5.5/lp_price.c ****   int i,j;
1292:lp_solve_5.5/lp_price.c ****   REAL F = lp->infinite;
 10039               		.loc 1 1292 0
 10040 4028 8985      		ldd r24,Y+9
 10041 402a 9A85      		ldd r25,Y+10
 10042 402c 865F      		subi r24,-10
 10043 402e 9C4F      		sbci r25,-4
 10044 4030 FC01      		movw r30,r24
 10045 4032 8081      		ld r24,Z
 10046 4034 9181      		ldd r25,Z+1
 10047 4036 A281      		ldd r26,Z+2
 10048 4038 B381      		ldd r27,Z+3
 10049 403a 8983      		std Y+1,r24
 10050 403c 9A83      		std Y+2,r25
 10051 403e AB83      		std Y+3,r26
 10052 4040 BC83      		std Y+4,r27
1293:lp_solve_5.5/lp_price.c ****   if(which == 0) {             /* Maros Example-1 - raw data */
 10053               		.loc 1 1293 0
 10054 4042 8B85      		ldd r24,Y+11
 10055 4044 9C85      		ldd r25,Y+12
 10056 4046 892B      		or r24,r25
 10057 4048 01F0      		breq .+2
 10058 404a 00C0      		rjmp .L379
1294:lp_solve_5.5/lp_price.c ****     j =  1; i = lp->rows+j; lp->upbo[i] = 0;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] =  2;
 10059               		.loc 1 1294 0
 10060 404c 81E0      		ldi r24,lo8(1)
 10061 404e 90E0      		ldi r25,0
 10062 4050 9E83      		std Y+6,r25
 10063 4052 8D83      		std Y+5,r24
 10064 4054 8985      		ldd r24,Y+9
 10065 4056 9A85      		ldd r25,Y+10
 10066 4058 8651      		subi r24,22
 10067 405a 9E4F      		sbci r25,-2
 10068 405c FC01      		movw r30,r24
 10069 405e 2081      		ld r18,Z
 10070 4060 3181      		ldd r19,Z+1
 10071 4062 8D81      		ldd r24,Y+5
 10072 4064 9E81      		ldd r25,Y+6
 10073 4066 820F      		add r24,r18
 10074 4068 931F      		adc r25,r19
 10075 406a 9887      		std Y+8,r25
 10076 406c 8F83      		std Y+7,r24
 10077 406e 8985      		ldd r24,Y+9
 10078 4070 9A85      		ldd r25,Y+10
 10079 4072 8055      		subi r24,80
 10080 4074 9D4F      		sbci r25,-3
 10081 4076 FC01      		movw r30,r24
 10082 4078 2081      		ld r18,Z
 10083 407a 3181      		ldd r19,Z+1
 10084 407c 8F81      		ldd r24,Y+7
 10085 407e 9885      		ldd r25,Y+8
 10086 4080 880F      		lsl r24
 10087 4082 991F      		rol r25
 10088 4084 880F      		lsl r24
 10089 4086 991F      		rol r25
 10090 4088 820F      		add r24,r18
 10091 408a 931F      		adc r25,r19
 10092 408c FC01      		movw r30,r24
 10093 408e 1082      		st Z,__zero_reg__
 10094 4090 1182      		std Z+1,__zero_reg__
 10095 4092 1282      		std Z+2,__zero_reg__
 10096 4094 1382      		std Z+3,__zero_reg__
 10097 4096 8985      		ldd r24,Y+9
 10098 4098 9A85      		ldd r25,Y+10
 10099 409a 8E52      		subi r24,46
 10100 409c 9D4F      		sbci r25,-3
 10101 409e FC01      		movw r30,r24
 10102 40a0 2081      		ld r18,Z
 10103 40a2 3181      		ldd r19,Z+1
 10104 40a4 8F81      		ldd r24,Y+7
 10105 40a6 9885      		ldd r25,Y+8
 10106 40a8 820F      		add r24,r18
 10107 40aa 931F      		adc r25,r19
 10108 40ac 21E0      		ldi r18,lo8(1)
 10109 40ae FC01      		movw r30,r24
 10110 40b0 2083      		st Z,r18
 10111 40b2 8D81      		ldd r24,Y+5
 10112 40b4 9E81      		ldd r25,Y+6
 10113 40b6 880F      		lsl r24
 10114 40b8 991F      		rol r25
 10115 40ba 2989      		ldd r18,Y+17
 10116 40bc 3A89      		ldd r19,Y+18
 10117 40be 820F      		add r24,r18
 10118 40c0 931F      		adc r25,r19
 10119 40c2 2F81      		ldd r18,Y+7
 10120 40c4 3885      		ldd r19,Y+8
 10121 40c6 FC01      		movw r30,r24
 10122 40c8 3183      		std Z+1,r19
 10123 40ca 2083      		st Z,r18
 10124 40cc 8F81      		ldd r24,Y+7
 10125 40ce 9885      		ldd r25,Y+8
 10126 40d0 880F      		lsl r24
 10127 40d2 991F      		rol r25
 10128 40d4 880F      		lsl r24
 10129 40d6 991F      		rol r25
 10130 40d8 2F85      		ldd r18,Y+15
 10131 40da 3889      		ldd r19,Y+16
 10132 40dc 280F      		add r18,r24
 10133 40de 391F      		adc r19,r25
 10134 40e0 80E0      		ldi r24,0
 10135 40e2 90E0      		ldi r25,0
 10136 40e4 A0E0      		ldi r26,0
 10137 40e6 B0E4      		ldi r27,lo8(64)
 10138 40e8 F901      		movw r30,r18
 10139 40ea 8083      		st Z,r24
 10140 40ec 9183      		std Z+1,r25
 10141 40ee A283      		std Z+2,r26
 10142 40f0 B383      		std Z+3,r27
 10143 40f2 8F81      		ldd r24,Y+7
 10144 40f4 9885      		ldd r25,Y+8
 10145 40f6 880F      		lsl r24
 10146 40f8 991F      		rol r25
 10147 40fa 880F      		lsl r24
 10148 40fc 991F      		rol r25
 10149 40fe 2B89      		ldd r18,Y+19
 10150 4100 3C89      		ldd r19,Y+20
 10151 4102 280F      		add r18,r24
 10152 4104 391F      		adc r19,r25
 10153 4106 80E0      		ldi r24,0
 10154 4108 90E0      		ldi r25,0
 10155 410a A0E8      		ldi r26,lo8(-128)
 10156 410c BFEB      		ldi r27,lo8(-65)
 10157 410e F901      		movw r30,r18
 10158 4110 8083      		st Z,r24
 10159 4112 9183      		std Z+1,r25
 10160 4114 A283      		std Z+2,r26
 10161 4116 B383      		std Z+3,r27
1295:lp_solve_5.5/lp_price.c ****     j =  2; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] = -2;
 10162               		.loc 1 1295 0
 10163 4118 82E0      		ldi r24,lo8(2)
 10164 411a 90E0      		ldi r25,0
 10165 411c 9E83      		std Y+6,r25
 10166 411e 8D83      		std Y+5,r24
 10167 4120 8985      		ldd r24,Y+9
 10168 4122 9A85      		ldd r25,Y+10
 10169 4124 8651      		subi r24,22
 10170 4126 9E4F      		sbci r25,-2
 10171 4128 FC01      		movw r30,r24
 10172 412a 2081      		ld r18,Z
 10173 412c 3181      		ldd r19,Z+1
 10174 412e 8D81      		ldd r24,Y+5
 10175 4130 9E81      		ldd r25,Y+6
 10176 4132 820F      		add r24,r18
 10177 4134 931F      		adc r25,r19
 10178 4136 9887      		std Y+8,r25
 10179 4138 8F83      		std Y+7,r24
 10180 413a 8985      		ldd r24,Y+9
 10181 413c 9A85      		ldd r25,Y+10
 10182 413e 8055      		subi r24,80
 10183 4140 9D4F      		sbci r25,-3
 10184 4142 FC01      		movw r30,r24
 10185 4144 2081      		ld r18,Z
 10186 4146 3181      		ldd r19,Z+1
 10187 4148 8F81      		ldd r24,Y+7
 10188 414a 9885      		ldd r25,Y+8
 10189 414c 880F      		lsl r24
 10190 414e 991F      		rol r25
 10191 4150 880F      		lsl r24
 10192 4152 991F      		rol r25
 10193 4154 280F      		add r18,r24
 10194 4156 391F      		adc r19,r25
 10195 4158 80E0      		ldi r24,0
 10196 415a 90E0      		ldi r25,0
 10197 415c A0E8      		ldi r26,lo8(-128)
 10198 415e BFE3      		ldi r27,lo8(63)
 10199 4160 F901      		movw r30,r18
 10200 4162 8083      		st Z,r24
 10201 4164 9183      		std Z+1,r25
 10202 4166 A283      		std Z+2,r26
 10203 4168 B383      		std Z+3,r27
 10204 416a 8985      		ldd r24,Y+9
 10205 416c 9A85      		ldd r25,Y+10
 10206 416e 8E52      		subi r24,46
 10207 4170 9D4F      		sbci r25,-3
 10208 4172 FC01      		movw r30,r24
 10209 4174 2081      		ld r18,Z
 10210 4176 3181      		ldd r19,Z+1
 10211 4178 8F81      		ldd r24,Y+7
 10212 417a 9885      		ldd r25,Y+8
 10213 417c 820F      		add r24,r18
 10214 417e 931F      		adc r25,r19
 10215 4180 21E0      		ldi r18,lo8(1)
 10216 4182 FC01      		movw r30,r24
 10217 4184 2083      		st Z,r18
 10218 4186 8D81      		ldd r24,Y+5
 10219 4188 9E81      		ldd r25,Y+6
 10220 418a 880F      		lsl r24
 10221 418c 991F      		rol r25
 10222 418e 2989      		ldd r18,Y+17
 10223 4190 3A89      		ldd r19,Y+18
 10224 4192 820F      		add r24,r18
 10225 4194 931F      		adc r25,r19
 10226 4196 2F81      		ldd r18,Y+7
 10227 4198 3885      		ldd r19,Y+8
 10228 419a FC01      		movw r30,r24
 10229 419c 3183      		std Z+1,r19
 10230 419e 2083      		st Z,r18
 10231 41a0 8F81      		ldd r24,Y+7
 10232 41a2 9885      		ldd r25,Y+8
 10233 41a4 880F      		lsl r24
 10234 41a6 991F      		rol r25
 10235 41a8 880F      		lsl r24
 10236 41aa 991F      		rol r25
 10237 41ac 2F85      		ldd r18,Y+15
 10238 41ae 3889      		ldd r19,Y+16
 10239 41b0 280F      		add r18,r24
 10240 41b2 391F      		adc r19,r25
 10241 41b4 80E0      		ldi r24,0
 10242 41b6 90E0      		ldi r25,0
 10243 41b8 A0E0      		ldi r26,0
 10244 41ba B0EC      		ldi r27,lo8(-64)
 10245 41bc F901      		movw r30,r18
 10246 41be 8083      		st Z,r24
 10247 41c0 9183      		std Z+1,r25
 10248 41c2 A283      		std Z+2,r26
 10249 41c4 B383      		std Z+3,r27
 10250 41c6 8F81      		ldd r24,Y+7
 10251 41c8 9885      		ldd r25,Y+8
 10252 41ca 880F      		lsl r24
 10253 41cc 991F      		rol r25
 10254 41ce 880F      		lsl r24
 10255 41d0 991F      		rol r25
 10256 41d2 2B89      		ldd r18,Y+19
 10257 41d4 3C89      		ldd r19,Y+20
 10258 41d6 280F      		add r18,r24
 10259 41d8 391F      		adc r19,r25
 10260 41da 80E0      		ldi r24,0
 10261 41dc 90E0      		ldi r25,0
 10262 41de A0E0      		ldi r26,0
 10263 41e0 B0E4      		ldi r27,lo8(64)
 10264 41e2 F901      		movw r30,r18
 10265 41e4 8083      		st Z,r24
 10266 41e6 9183      		std Z+1,r25
 10267 41e8 A283      		std Z+2,r26
 10268 41ea B383      		std Z+3,r27
1296:lp_solve_5.5/lp_price.c ****     j =  3; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] =  1;
 10269               		.loc 1 1296 0
 10270 41ec 83E0      		ldi r24,lo8(3)
 10271 41ee 90E0      		ldi r25,0
 10272 41f0 9E83      		std Y+6,r25
 10273 41f2 8D83      		std Y+5,r24
 10274 41f4 8985      		ldd r24,Y+9
 10275 41f6 9A85      		ldd r25,Y+10
 10276 41f8 8651      		subi r24,22
 10277 41fa 9E4F      		sbci r25,-2
 10278 41fc FC01      		movw r30,r24
 10279 41fe 2081      		ld r18,Z
 10280 4200 3181      		ldd r19,Z+1
 10281 4202 8D81      		ldd r24,Y+5
 10282 4204 9E81      		ldd r25,Y+6
 10283 4206 820F      		add r24,r18
 10284 4208 931F      		adc r25,r19
 10285 420a 9887      		std Y+8,r25
 10286 420c 8F83      		std Y+7,r24
 10287 420e 8985      		ldd r24,Y+9
 10288 4210 9A85      		ldd r25,Y+10
 10289 4212 8055      		subi r24,80
 10290 4214 9D4F      		sbci r25,-3
 10291 4216 FC01      		movw r30,r24
 10292 4218 2081      		ld r18,Z
 10293 421a 3181      		ldd r19,Z+1
 10294 421c 8F81      		ldd r24,Y+7
 10295 421e 9885      		ldd r25,Y+8
 10296 4220 880F      		lsl r24
 10297 4222 991F      		rol r25
 10298 4224 880F      		lsl r24
 10299 4226 991F      		rol r25
 10300 4228 280F      		add r18,r24
 10301 422a 391F      		adc r19,r25
 10302 422c 80E0      		ldi r24,0
 10303 422e 90E0      		ldi r25,0
 10304 4230 A0E8      		ldi r26,lo8(-128)
 10305 4232 BFE3      		ldi r27,lo8(63)
 10306 4234 F901      		movw r30,r18
 10307 4236 8083      		st Z,r24
 10308 4238 9183      		std Z+1,r25
 10309 423a A283      		std Z+2,r26
 10310 423c B383      		std Z+3,r27
 10311 423e 8985      		ldd r24,Y+9
 10312 4240 9A85      		ldd r25,Y+10
 10313 4242 8E52      		subi r24,46
 10314 4244 9D4F      		sbci r25,-3
 10315 4246 FC01      		movw r30,r24
 10316 4248 2081      		ld r18,Z
 10317 424a 3181      		ldd r19,Z+1
 10318 424c 8F81      		ldd r24,Y+7
 10319 424e 9885      		ldd r25,Y+8
 10320 4250 820F      		add r24,r18
 10321 4252 931F      		adc r25,r19
 10322 4254 21E0      		ldi r18,lo8(1)
 10323 4256 FC01      		movw r30,r24
 10324 4258 2083      		st Z,r18
 10325 425a 8D81      		ldd r24,Y+5
 10326 425c 9E81      		ldd r25,Y+6
 10327 425e 880F      		lsl r24
 10328 4260 991F      		rol r25
 10329 4262 2989      		ldd r18,Y+17
 10330 4264 3A89      		ldd r19,Y+18
 10331 4266 820F      		add r24,r18
 10332 4268 931F      		adc r25,r19
 10333 426a 2F81      		ldd r18,Y+7
 10334 426c 3885      		ldd r19,Y+8
 10335 426e FC01      		movw r30,r24
 10336 4270 3183      		std Z+1,r19
 10337 4272 2083      		st Z,r18
 10338 4274 8F81      		ldd r24,Y+7
 10339 4276 9885      		ldd r25,Y+8
 10340 4278 880F      		lsl r24
 10341 427a 991F      		rol r25
 10342 427c 880F      		lsl r24
 10343 427e 991F      		rol r25
 10344 4280 2F85      		ldd r18,Y+15
 10345 4282 3889      		ldd r19,Y+16
 10346 4284 280F      		add r18,r24
 10347 4286 391F      		adc r19,r25
 10348 4288 80E0      		ldi r24,0
 10349 428a 90E0      		ldi r25,0
 10350 428c A0E8      		ldi r26,lo8(-128)
 10351 428e BFE3      		ldi r27,lo8(63)
 10352 4290 F901      		movw r30,r18
 10353 4292 8083      		st Z,r24
 10354 4294 9183      		std Z+1,r25
 10355 4296 A283      		std Z+2,r26
 10356 4298 B383      		std Z+3,r27
 10357 429a 8F81      		ldd r24,Y+7
 10358 429c 9885      		ldd r25,Y+8
 10359 429e 880F      		lsl r24
 10360 42a0 991F      		rol r25
 10361 42a2 880F      		lsl r24
 10362 42a4 991F      		rol r25
 10363 42a6 2B89      		ldd r18,Y+19
 10364 42a8 3C89      		ldd r19,Y+20
 10365 42aa 280F      		add r18,r24
 10366 42ac 391F      		adc r19,r25
 10367 42ae 80E0      		ldi r24,0
 10368 42b0 90E0      		ldi r25,0
 10369 42b2 A0EA      		ldi r26,lo8(-96)
 10370 42b4 B0E4      		ldi r27,lo8(64)
 10371 42b6 F901      		movw r30,r18
 10372 42b8 8083      		st Z,r24
 10373 42ba 9183      		std Z+1,r25
 10374 42bc A283      		std Z+2,r26
 10375 42be B383      		std Z+3,r27
1297:lp_solve_5.5/lp_price.c ****     j =  4; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] = FALSE; nzprow[j] = i; prow[i] =  3;
 10376               		.loc 1 1297 0
 10377 42c0 84E0      		ldi r24,lo8(4)
 10378 42c2 90E0      		ldi r25,0
 10379 42c4 9E83      		std Y+6,r25
 10380 42c6 8D83      		std Y+5,r24
 10381 42c8 8985      		ldd r24,Y+9
 10382 42ca 9A85      		ldd r25,Y+10
 10383 42cc 8651      		subi r24,22
 10384 42ce 9E4F      		sbci r25,-2
 10385 42d0 FC01      		movw r30,r24
 10386 42d2 2081      		ld r18,Z
 10387 42d4 3181      		ldd r19,Z+1
 10388 42d6 8D81      		ldd r24,Y+5
 10389 42d8 9E81      		ldd r25,Y+6
 10390 42da 820F      		add r24,r18
 10391 42dc 931F      		adc r25,r19
 10392 42de 9887      		std Y+8,r25
 10393 42e0 8F83      		std Y+7,r24
 10394 42e2 8985      		ldd r24,Y+9
 10395 42e4 9A85      		ldd r25,Y+10
 10396 42e6 8055      		subi r24,80
 10397 42e8 9D4F      		sbci r25,-3
 10398 42ea FC01      		movw r30,r24
 10399 42ec 2081      		ld r18,Z
 10400 42ee 3181      		ldd r19,Z+1
 10401 42f0 8F81      		ldd r24,Y+7
 10402 42f2 9885      		ldd r25,Y+8
 10403 42f4 880F      		lsl r24
 10404 42f6 991F      		rol r25
 10405 42f8 880F      		lsl r24
 10406 42fa 991F      		rol r25
 10407 42fc 280F      		add r18,r24
 10408 42fe 391F      		adc r19,r25
 10409 4300 80E0      		ldi r24,0
 10410 4302 90E0      		ldi r25,0
 10411 4304 A0E8      		ldi r26,lo8(-128)
 10412 4306 BFE3      		ldi r27,lo8(63)
 10413 4308 F901      		movw r30,r18
 10414 430a 8083      		st Z,r24
 10415 430c 9183      		std Z+1,r25
 10416 430e A283      		std Z+2,r26
 10417 4310 B383      		std Z+3,r27
 10418 4312 8985      		ldd r24,Y+9
 10419 4314 9A85      		ldd r25,Y+10
 10420 4316 8E52      		subi r24,46
 10421 4318 9D4F      		sbci r25,-3
 10422 431a FC01      		movw r30,r24
 10423 431c 2081      		ld r18,Z
 10424 431e 3181      		ldd r19,Z+1
 10425 4320 8F81      		ldd r24,Y+7
 10426 4322 9885      		ldd r25,Y+8
 10427 4324 820F      		add r24,r18
 10428 4326 931F      		adc r25,r19
 10429 4328 FC01      		movw r30,r24
 10430 432a 1082      		st Z,__zero_reg__
 10431 432c 8D81      		ldd r24,Y+5
 10432 432e 9E81      		ldd r25,Y+6
 10433 4330 880F      		lsl r24
 10434 4332 991F      		rol r25
 10435 4334 2989      		ldd r18,Y+17
 10436 4336 3A89      		ldd r19,Y+18
 10437 4338 820F      		add r24,r18
 10438 433a 931F      		adc r25,r19
 10439 433c 2F81      		ldd r18,Y+7
 10440 433e 3885      		ldd r19,Y+8
 10441 4340 FC01      		movw r30,r24
 10442 4342 3183      		std Z+1,r19
 10443 4344 2083      		st Z,r18
 10444 4346 8F81      		ldd r24,Y+7
 10445 4348 9885      		ldd r25,Y+8
 10446 434a 880F      		lsl r24
 10447 434c 991F      		rol r25
 10448 434e 880F      		lsl r24
 10449 4350 991F      		rol r25
 10450 4352 2F85      		ldd r18,Y+15
 10451 4354 3889      		ldd r19,Y+16
 10452 4356 280F      		add r18,r24
 10453 4358 391F      		adc r19,r25
 10454 435a 80E0      		ldi r24,0
 10455 435c 90E0      		ldi r25,0
 10456 435e A0E4      		ldi r26,lo8(64)
 10457 4360 B0E4      		ldi r27,lo8(64)
 10458 4362 F901      		movw r30,r18
 10459 4364 8083      		st Z,r24
 10460 4366 9183      		std Z+1,r25
 10461 4368 A283      		std Z+2,r26
 10462 436a B383      		std Z+3,r27
 10463 436c 8F81      		ldd r24,Y+7
 10464 436e 9885      		ldd r25,Y+8
 10465 4370 880F      		lsl r24
 10466 4372 991F      		rol r25
 10467 4374 880F      		lsl r24
 10468 4376 991F      		rol r25
 10469 4378 2B89      		ldd r18,Y+19
 10470 437a 3C89      		ldd r19,Y+20
 10471 437c 280F      		add r18,r24
 10472 437e 391F      		adc r19,r25
 10473 4380 80E0      		ldi r24,0
 10474 4382 90E0      		ldi r25,0
 10475 4384 A0EC      		ldi r26,lo8(-64)
 10476 4386 B0EC      		ldi r27,lo8(-64)
 10477 4388 F901      		movw r30,r18
 10478 438a 8083      		st Z,r24
 10479 438c 9183      		std Z+1,r25
 10480 438e A283      		std Z+2,r26
 10481 4390 B383      		std Z+3,r27
1298:lp_solve_5.5/lp_price.c ****     j =  5; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] = FALSE; nzprow[j] = i; prow[i] = -4;
 10482               		.loc 1 1298 0
 10483 4392 85E0      		ldi r24,lo8(5)
 10484 4394 90E0      		ldi r25,0
 10485 4396 9E83      		std Y+6,r25
 10486 4398 8D83      		std Y+5,r24
 10487 439a 8985      		ldd r24,Y+9
 10488 439c 9A85      		ldd r25,Y+10
 10489 439e 8651      		subi r24,22
 10490 43a0 9E4F      		sbci r25,-2
 10491 43a2 FC01      		movw r30,r24
 10492 43a4 2081      		ld r18,Z
 10493 43a6 3181      		ldd r19,Z+1
 10494 43a8 8D81      		ldd r24,Y+5
 10495 43aa 9E81      		ldd r25,Y+6
 10496 43ac 820F      		add r24,r18
 10497 43ae 931F      		adc r25,r19
 10498 43b0 9887      		std Y+8,r25
 10499 43b2 8F83      		std Y+7,r24
 10500 43b4 8985      		ldd r24,Y+9
 10501 43b6 9A85      		ldd r25,Y+10
 10502 43b8 8055      		subi r24,80
 10503 43ba 9D4F      		sbci r25,-3
 10504 43bc FC01      		movw r30,r24
 10505 43be 2081      		ld r18,Z
 10506 43c0 3181      		ldd r19,Z+1
 10507 43c2 8F81      		ldd r24,Y+7
 10508 43c4 9885      		ldd r25,Y+8
 10509 43c6 880F      		lsl r24
 10510 43c8 991F      		rol r25
 10511 43ca 880F      		lsl r24
 10512 43cc 991F      		rol r25
 10513 43ce 280F      		add r18,r24
 10514 43d0 391F      		adc r19,r25
 10515 43d2 80E0      		ldi r24,0
 10516 43d4 90E0      		ldi r25,0
 10517 43d6 A0E8      		ldi r26,lo8(-128)
 10518 43d8 BFE3      		ldi r27,lo8(63)
 10519 43da F901      		movw r30,r18
 10520 43dc 8083      		st Z,r24
 10521 43de 9183      		std Z+1,r25
 10522 43e0 A283      		std Z+2,r26
 10523 43e2 B383      		std Z+3,r27
 10524 43e4 8985      		ldd r24,Y+9
 10525 43e6 9A85      		ldd r25,Y+10
 10526 43e8 8E52      		subi r24,46
 10527 43ea 9D4F      		sbci r25,-3
 10528 43ec FC01      		movw r30,r24
 10529 43ee 2081      		ld r18,Z
 10530 43f0 3181      		ldd r19,Z+1
 10531 43f2 8F81      		ldd r24,Y+7
 10532 43f4 9885      		ldd r25,Y+8
 10533 43f6 820F      		add r24,r18
 10534 43f8 931F      		adc r25,r19
 10535 43fa FC01      		movw r30,r24
 10536 43fc 1082      		st Z,__zero_reg__
 10537 43fe 8D81      		ldd r24,Y+5
 10538 4400 9E81      		ldd r25,Y+6
 10539 4402 880F      		lsl r24
 10540 4404 991F      		rol r25
 10541 4406 2989      		ldd r18,Y+17
 10542 4408 3A89      		ldd r19,Y+18
 10543 440a 820F      		add r24,r18
 10544 440c 931F      		adc r25,r19
 10545 440e 2F81      		ldd r18,Y+7
 10546 4410 3885      		ldd r19,Y+8
 10547 4412 FC01      		movw r30,r24
 10548 4414 3183      		std Z+1,r19
 10549 4416 2083      		st Z,r18
 10550 4418 8F81      		ldd r24,Y+7
 10551 441a 9885      		ldd r25,Y+8
 10552 441c 880F      		lsl r24
 10553 441e 991F      		rol r25
 10554 4420 880F      		lsl r24
 10555 4422 991F      		rol r25
 10556 4424 2F85      		ldd r18,Y+15
 10557 4426 3889      		ldd r19,Y+16
 10558 4428 280F      		add r18,r24
 10559 442a 391F      		adc r19,r25
 10560 442c 80E0      		ldi r24,0
 10561 442e 90E0      		ldi r25,0
 10562 4430 A0E8      		ldi r26,lo8(-128)
 10563 4432 B0EC      		ldi r27,lo8(-64)
 10564 4434 F901      		movw r30,r18
 10565 4436 8083      		st Z,r24
 10566 4438 9183      		std Z+1,r25
 10567 443a A283      		std Z+2,r26
 10568 443c B383      		std Z+3,r27
 10569 443e 8F81      		ldd r24,Y+7
 10570 4440 9885      		ldd r25,Y+8
 10571 4442 880F      		lsl r24
 10572 4444 991F      		rol r25
 10573 4446 880F      		lsl r24
 10574 4448 991F      		rol r25
 10575 444a 2B89      		ldd r18,Y+19
 10576 444c 3C89      		ldd r19,Y+20
 10577 444e 280F      		add r18,r24
 10578 4450 391F      		adc r19,r25
 10579 4452 80E0      		ldi r24,0
 10580 4454 90E0      		ldi r25,0
 10581 4456 A0E0      		ldi r26,0
 10582 4458 B0EC      		ldi r27,lo8(-64)
 10583 445a F901      		movw r30,r18
 10584 445c 8083      		st Z,r24
 10585 445e 9183      		std Z+1,r25
 10586 4460 A283      		std Z+2,r26
 10587 4462 B383      		std Z+3,r27
1299:lp_solve_5.5/lp_price.c ****     j =  6; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] = -1;
 10588               		.loc 1 1299 0
 10589 4464 86E0      		ldi r24,lo8(6)
 10590 4466 90E0      		ldi r25,0
 10591 4468 9E83      		std Y+6,r25
 10592 446a 8D83      		std Y+5,r24
 10593 446c 8985      		ldd r24,Y+9
 10594 446e 9A85      		ldd r25,Y+10
 10595 4470 8651      		subi r24,22
 10596 4472 9E4F      		sbci r25,-2
 10597 4474 FC01      		movw r30,r24
 10598 4476 2081      		ld r18,Z
 10599 4478 3181      		ldd r19,Z+1
 10600 447a 8D81      		ldd r24,Y+5
 10601 447c 9E81      		ldd r25,Y+6
 10602 447e 820F      		add r24,r18
 10603 4480 931F      		adc r25,r19
 10604 4482 9887      		std Y+8,r25
 10605 4484 8F83      		std Y+7,r24
 10606 4486 8985      		ldd r24,Y+9
 10607 4488 9A85      		ldd r25,Y+10
 10608 448a 8055      		subi r24,80
 10609 448c 9D4F      		sbci r25,-3
 10610 448e FC01      		movw r30,r24
 10611 4490 2081      		ld r18,Z
 10612 4492 3181      		ldd r19,Z+1
 10613 4494 8F81      		ldd r24,Y+7
 10614 4496 9885      		ldd r25,Y+8
 10615 4498 880F      		lsl r24
 10616 449a 991F      		rol r25
 10617 449c 880F      		lsl r24
 10618 449e 991F      		rol r25
 10619 44a0 280F      		add r18,r24
 10620 44a2 391F      		adc r19,r25
 10621 44a4 80E0      		ldi r24,0
 10622 44a6 90E0      		ldi r25,0
 10623 44a8 A0E8      		ldi r26,lo8(-128)
 10624 44aa BFE3      		ldi r27,lo8(63)
 10625 44ac F901      		movw r30,r18
 10626 44ae 8083      		st Z,r24
 10627 44b0 9183      		std Z+1,r25
 10628 44b2 A283      		std Z+2,r26
 10629 44b4 B383      		std Z+3,r27
 10630 44b6 8985      		ldd r24,Y+9
 10631 44b8 9A85      		ldd r25,Y+10
 10632 44ba 8E52      		subi r24,46
 10633 44bc 9D4F      		sbci r25,-3
 10634 44be FC01      		movw r30,r24
 10635 44c0 2081      		ld r18,Z
 10636 44c2 3181      		ldd r19,Z+1
 10637 44c4 8F81      		ldd r24,Y+7
 10638 44c6 9885      		ldd r25,Y+8
 10639 44c8 820F      		add r24,r18
 10640 44ca 931F      		adc r25,r19
 10641 44cc 21E0      		ldi r18,lo8(1)
 10642 44ce FC01      		movw r30,r24
 10643 44d0 2083      		st Z,r18
 10644 44d2 8D81      		ldd r24,Y+5
 10645 44d4 9E81      		ldd r25,Y+6
 10646 44d6 880F      		lsl r24
 10647 44d8 991F      		rol r25
 10648 44da 2989      		ldd r18,Y+17
 10649 44dc 3A89      		ldd r19,Y+18
 10650 44de 820F      		add r24,r18
 10651 44e0 931F      		adc r25,r19
 10652 44e2 2F81      		ldd r18,Y+7
 10653 44e4 3885      		ldd r19,Y+8
 10654 44e6 FC01      		movw r30,r24
 10655 44e8 3183      		std Z+1,r19
 10656 44ea 2083      		st Z,r18
 10657 44ec 8F81      		ldd r24,Y+7
 10658 44ee 9885      		ldd r25,Y+8
 10659 44f0 880F      		lsl r24
 10660 44f2 991F      		rol r25
 10661 44f4 880F      		lsl r24
 10662 44f6 991F      		rol r25
 10663 44f8 2F85      		ldd r18,Y+15
 10664 44fa 3889      		ldd r19,Y+16
 10665 44fc 280F      		add r18,r24
 10666 44fe 391F      		adc r19,r25
 10667 4500 80E0      		ldi r24,0
 10668 4502 90E0      		ldi r25,0
 10669 4504 A0E8      		ldi r26,lo8(-128)
 10670 4506 BFEB      		ldi r27,lo8(-65)
 10671 4508 F901      		movw r30,r18
 10672 450a 8083      		st Z,r24
 10673 450c 9183      		std Z+1,r25
 10674 450e A283      		std Z+2,r26
 10675 4510 B383      		std Z+3,r27
 10676 4512 8F81      		ldd r24,Y+7
 10677 4514 9885      		ldd r25,Y+8
 10678 4516 880F      		lsl r24
 10679 4518 991F      		rol r25
 10680 451a 880F      		lsl r24
 10681 451c 991F      		rol r25
 10682 451e 2B89      		ldd r18,Y+19
 10683 4520 3C89      		ldd r19,Y+20
 10684 4522 820F      		add r24,r18
 10685 4524 931F      		adc r25,r19
 10686 4526 FC01      		movw r30,r24
 10687 4528 1082      		st Z,__zero_reg__
 10688 452a 1182      		std Z+1,__zero_reg__
 10689 452c 1282      		std Z+2,__zero_reg__
 10690 452e 1382      		std Z+3,__zero_reg__
1300:lp_solve_5.5/lp_price.c ****     j =  7; i = lp->rows+j; lp->upbo[i] = 2;  lp->is_lower[i] = FALSE; nzprow[j] = i; prow[i] =  1;
 10691               		.loc 1 1300 0
 10692 4530 87E0      		ldi r24,lo8(7)
 10693 4532 90E0      		ldi r25,0
 10694 4534 9E83      		std Y+6,r25
 10695 4536 8D83      		std Y+5,r24
 10696 4538 8985      		ldd r24,Y+9
 10697 453a 9A85      		ldd r25,Y+10
 10698 453c 8651      		subi r24,22
 10699 453e 9E4F      		sbci r25,-2
 10700 4540 FC01      		movw r30,r24
 10701 4542 2081      		ld r18,Z
 10702 4544 3181      		ldd r19,Z+1
 10703 4546 8D81      		ldd r24,Y+5
 10704 4548 9E81      		ldd r25,Y+6
 10705 454a 820F      		add r24,r18
 10706 454c 931F      		adc r25,r19
 10707 454e 9887      		std Y+8,r25
 10708 4550 8F83      		std Y+7,r24
 10709 4552 8985      		ldd r24,Y+9
 10710 4554 9A85      		ldd r25,Y+10
 10711 4556 8055      		subi r24,80
 10712 4558 9D4F      		sbci r25,-3
 10713 455a FC01      		movw r30,r24
 10714 455c 2081      		ld r18,Z
 10715 455e 3181      		ldd r19,Z+1
 10716 4560 8F81      		ldd r24,Y+7
 10717 4562 9885      		ldd r25,Y+8
 10718 4564 880F      		lsl r24
 10719 4566 991F      		rol r25
 10720 4568 880F      		lsl r24
 10721 456a 991F      		rol r25
 10722 456c 280F      		add r18,r24
 10723 456e 391F      		adc r19,r25
 10724 4570 80E0      		ldi r24,0
 10725 4572 90E0      		ldi r25,0
 10726 4574 A0E0      		ldi r26,0
 10727 4576 B0E4      		ldi r27,lo8(64)
 10728 4578 F901      		movw r30,r18
 10729 457a 8083      		st Z,r24
 10730 457c 9183      		std Z+1,r25
 10731 457e A283      		std Z+2,r26
 10732 4580 B383      		std Z+3,r27
 10733 4582 8985      		ldd r24,Y+9
 10734 4584 9A85      		ldd r25,Y+10
 10735 4586 8E52      		subi r24,46
 10736 4588 9D4F      		sbci r25,-3
 10737 458a FC01      		movw r30,r24
 10738 458c 2081      		ld r18,Z
 10739 458e 3181      		ldd r19,Z+1
 10740 4590 8F81      		ldd r24,Y+7
 10741 4592 9885      		ldd r25,Y+8
 10742 4594 820F      		add r24,r18
 10743 4596 931F      		adc r25,r19
 10744 4598 FC01      		movw r30,r24
 10745 459a 1082      		st Z,__zero_reg__
 10746 459c 8D81      		ldd r24,Y+5
 10747 459e 9E81      		ldd r25,Y+6
 10748 45a0 880F      		lsl r24
 10749 45a2 991F      		rol r25
 10750 45a4 2989      		ldd r18,Y+17
 10751 45a6 3A89      		ldd r19,Y+18
 10752 45a8 820F      		add r24,r18
 10753 45aa 931F      		adc r25,r19
 10754 45ac 2F81      		ldd r18,Y+7
 10755 45ae 3885      		ldd r19,Y+8
 10756 45b0 FC01      		movw r30,r24
 10757 45b2 3183      		std Z+1,r19
 10758 45b4 2083      		st Z,r18
 10759 45b6 8F81      		ldd r24,Y+7
 10760 45b8 9885      		ldd r25,Y+8
 10761 45ba 880F      		lsl r24
 10762 45bc 991F      		rol r25
 10763 45be 880F      		lsl r24
 10764 45c0 991F      		rol r25
 10765 45c2 2F85      		ldd r18,Y+15
 10766 45c4 3889      		ldd r19,Y+16
 10767 45c6 280F      		add r18,r24
 10768 45c8 391F      		adc r19,r25
 10769 45ca 80E0      		ldi r24,0
 10770 45cc 90E0      		ldi r25,0
 10771 45ce A0E8      		ldi r26,lo8(-128)
 10772 45d0 BFE3      		ldi r27,lo8(63)
 10773 45d2 F901      		movw r30,r18
 10774 45d4 8083      		st Z,r24
 10775 45d6 9183      		std Z+1,r25
 10776 45d8 A283      		std Z+2,r26
 10777 45da B383      		std Z+3,r27
 10778 45dc 8F81      		ldd r24,Y+7
 10779 45de 9885      		ldd r25,Y+8
 10780 45e0 880F      		lsl r24
 10781 45e2 991F      		rol r25
 10782 45e4 880F      		lsl r24
 10783 45e6 991F      		rol r25
 10784 45e8 2B89      		ldd r18,Y+19
 10785 45ea 3C89      		ldd r19,Y+20
 10786 45ec 820F      		add r24,r18
 10787 45ee 931F      		adc r25,r19
 10788 45f0 FC01      		movw r30,r24
 10789 45f2 1082      		st Z,__zero_reg__
 10790 45f4 1182      		std Z+1,__zero_reg__
 10791 45f6 1282      		std Z+2,__zero_reg__
 10792 45f8 1382      		std Z+3,__zero_reg__
1301:lp_solve_5.5/lp_price.c ****     j =  8; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] = FALSE; nzprow[j] = i; prow[i] = -2;
 10793               		.loc 1 1301 0
 10794 45fa 88E0      		ldi r24,lo8(8)
 10795 45fc 90E0      		ldi r25,0
 10796 45fe 9E83      		std Y+6,r25
 10797 4600 8D83      		std Y+5,r24
 10798 4602 8985      		ldd r24,Y+9
 10799 4604 9A85      		ldd r25,Y+10
 10800 4606 8651      		subi r24,22
 10801 4608 9E4F      		sbci r25,-2
 10802 460a FC01      		movw r30,r24
 10803 460c 2081      		ld r18,Z
 10804 460e 3181      		ldd r19,Z+1
 10805 4610 8D81      		ldd r24,Y+5
 10806 4612 9E81      		ldd r25,Y+6
 10807 4614 820F      		add r24,r18
 10808 4616 931F      		adc r25,r19
 10809 4618 9887      		std Y+8,r25
 10810 461a 8F83      		std Y+7,r24
 10811 461c 8985      		ldd r24,Y+9
 10812 461e 9A85      		ldd r25,Y+10
 10813 4620 8055      		subi r24,80
 10814 4622 9D4F      		sbci r25,-3
 10815 4624 FC01      		movw r30,r24
 10816 4626 2081      		ld r18,Z
 10817 4628 3181      		ldd r19,Z+1
 10818 462a 8F81      		ldd r24,Y+7
 10819 462c 9885      		ldd r25,Y+8
 10820 462e 880F      		lsl r24
 10821 4630 991F      		rol r25
 10822 4632 880F      		lsl r24
 10823 4634 991F      		rol r25
 10824 4636 280F      		add r18,r24
 10825 4638 391F      		adc r19,r25
 10826 463a 80E0      		ldi r24,0
 10827 463c 90E0      		ldi r25,0
 10828 463e A0E8      		ldi r26,lo8(-128)
 10829 4640 BFE3      		ldi r27,lo8(63)
 10830 4642 F901      		movw r30,r18
 10831 4644 8083      		st Z,r24
 10832 4646 9183      		std Z+1,r25
 10833 4648 A283      		std Z+2,r26
 10834 464a B383      		std Z+3,r27
 10835 464c 8985      		ldd r24,Y+9
 10836 464e 9A85      		ldd r25,Y+10
 10837 4650 8E52      		subi r24,46
 10838 4652 9D4F      		sbci r25,-3
 10839 4654 FC01      		movw r30,r24
 10840 4656 2081      		ld r18,Z
 10841 4658 3181      		ldd r19,Z+1
 10842 465a 8F81      		ldd r24,Y+7
 10843 465c 9885      		ldd r25,Y+8
 10844 465e 820F      		add r24,r18
 10845 4660 931F      		adc r25,r19
 10846 4662 FC01      		movw r30,r24
 10847 4664 1082      		st Z,__zero_reg__
 10848 4666 8D81      		ldd r24,Y+5
 10849 4668 9E81      		ldd r25,Y+6
 10850 466a 880F      		lsl r24
 10851 466c 991F      		rol r25
 10852 466e 2989      		ldd r18,Y+17
 10853 4670 3A89      		ldd r19,Y+18
 10854 4672 820F      		add r24,r18
 10855 4674 931F      		adc r25,r19
 10856 4676 2F81      		ldd r18,Y+7
 10857 4678 3885      		ldd r19,Y+8
 10858 467a FC01      		movw r30,r24
 10859 467c 3183      		std Z+1,r19
 10860 467e 2083      		st Z,r18
 10861 4680 8F81      		ldd r24,Y+7
 10862 4682 9885      		ldd r25,Y+8
 10863 4684 880F      		lsl r24
 10864 4686 991F      		rol r25
 10865 4688 880F      		lsl r24
 10866 468a 991F      		rol r25
 10867 468c 2F85      		ldd r18,Y+15
 10868 468e 3889      		ldd r19,Y+16
 10869 4690 280F      		add r18,r24
 10870 4692 391F      		adc r19,r25
 10871 4694 80E0      		ldi r24,0
 10872 4696 90E0      		ldi r25,0
 10873 4698 A0E0      		ldi r26,0
 10874 469a B0EC      		ldi r27,lo8(-64)
 10875 469c F901      		movw r30,r18
 10876 469e 8083      		st Z,r24
 10877 46a0 9183      		std Z+1,r25
 10878 46a2 A283      		std Z+2,r26
 10879 46a4 B383      		std Z+3,r27
 10880 46a6 8F81      		ldd r24,Y+7
 10881 46a8 9885      		ldd r25,Y+8
 10882 46aa 880F      		lsl r24
 10883 46ac 991F      		rol r25
 10884 46ae 880F      		lsl r24
 10885 46b0 991F      		rol r25
 10886 46b2 2B89      		ldd r18,Y+19
 10887 46b4 3C89      		ldd r19,Y+20
 10888 46b6 820F      		add r24,r18
 10889 46b8 931F      		adc r25,r19
 10890 46ba FC01      		movw r30,r24
 10891 46bc 1082      		st Z,__zero_reg__
 10892 46be 1182      		std Z+1,__zero_reg__
 10893 46c0 1282      		std Z+2,__zero_reg__
 10894 46c2 1382      		std Z+3,__zero_reg__
1302:lp_solve_5.5/lp_price.c ****     j =  9; i = lp->rows+j; lp->upbo[i] = 5;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] = -1;
 10895               		.loc 1 1302 0
 10896 46c4 89E0      		ldi r24,lo8(9)
 10897 46c6 90E0      		ldi r25,0
 10898 46c8 9E83      		std Y+6,r25
 10899 46ca 8D83      		std Y+5,r24
 10900 46cc 8985      		ldd r24,Y+9
 10901 46ce 9A85      		ldd r25,Y+10
 10902 46d0 8651      		subi r24,22
 10903 46d2 9E4F      		sbci r25,-2
 10904 46d4 FC01      		movw r30,r24
 10905 46d6 2081      		ld r18,Z
 10906 46d8 3181      		ldd r19,Z+1
 10907 46da 8D81      		ldd r24,Y+5
 10908 46dc 9E81      		ldd r25,Y+6
 10909 46de 820F      		add r24,r18
 10910 46e0 931F      		adc r25,r19
 10911 46e2 9887      		std Y+8,r25
 10912 46e4 8F83      		std Y+7,r24
 10913 46e6 8985      		ldd r24,Y+9
 10914 46e8 9A85      		ldd r25,Y+10
 10915 46ea 8055      		subi r24,80
 10916 46ec 9D4F      		sbci r25,-3
 10917 46ee FC01      		movw r30,r24
 10918 46f0 2081      		ld r18,Z
 10919 46f2 3181      		ldd r19,Z+1
 10920 46f4 8F81      		ldd r24,Y+7
 10921 46f6 9885      		ldd r25,Y+8
 10922 46f8 880F      		lsl r24
 10923 46fa 991F      		rol r25
 10924 46fc 880F      		lsl r24
 10925 46fe 991F      		rol r25
 10926 4700 280F      		add r18,r24
 10927 4702 391F      		adc r19,r25
 10928 4704 80E0      		ldi r24,0
 10929 4706 90E0      		ldi r25,0
 10930 4708 A0EA      		ldi r26,lo8(-96)
 10931 470a B0E4      		ldi r27,lo8(64)
 10932 470c F901      		movw r30,r18
 10933 470e 8083      		st Z,r24
 10934 4710 9183      		std Z+1,r25
 10935 4712 A283      		std Z+2,r26
 10936 4714 B383      		std Z+3,r27
 10937 4716 8985      		ldd r24,Y+9
 10938 4718 9A85      		ldd r25,Y+10
 10939 471a 8E52      		subi r24,46
 10940 471c 9D4F      		sbci r25,-3
 10941 471e FC01      		movw r30,r24
 10942 4720 2081      		ld r18,Z
 10943 4722 3181      		ldd r19,Z+1
 10944 4724 8F81      		ldd r24,Y+7
 10945 4726 9885      		ldd r25,Y+8
 10946 4728 820F      		add r24,r18
 10947 472a 931F      		adc r25,r19
 10948 472c 21E0      		ldi r18,lo8(1)
 10949 472e FC01      		movw r30,r24
 10950 4730 2083      		st Z,r18
 10951 4732 8D81      		ldd r24,Y+5
 10952 4734 9E81      		ldd r25,Y+6
 10953 4736 880F      		lsl r24
 10954 4738 991F      		rol r25
 10955 473a 2989      		ldd r18,Y+17
 10956 473c 3A89      		ldd r19,Y+18
 10957 473e 820F      		add r24,r18
 10958 4740 931F      		adc r25,r19
 10959 4742 2F81      		ldd r18,Y+7
 10960 4744 3885      		ldd r19,Y+8
 10961 4746 FC01      		movw r30,r24
 10962 4748 3183      		std Z+1,r19
 10963 474a 2083      		st Z,r18
 10964 474c 8F81      		ldd r24,Y+7
 10965 474e 9885      		ldd r25,Y+8
 10966 4750 880F      		lsl r24
 10967 4752 991F      		rol r25
 10968 4754 880F      		lsl r24
 10969 4756 991F      		rol r25
 10970 4758 2F85      		ldd r18,Y+15
 10971 475a 3889      		ldd r19,Y+16
 10972 475c 280F      		add r18,r24
 10973 475e 391F      		adc r19,r25
 10974 4760 80E0      		ldi r24,0
 10975 4762 90E0      		ldi r25,0
 10976 4764 A0E8      		ldi r26,lo8(-128)
 10977 4766 BFEB      		ldi r27,lo8(-65)
 10978 4768 F901      		movw r30,r18
 10979 476a 8083      		st Z,r24
 10980 476c 9183      		std Z+1,r25
 10981 476e A283      		std Z+2,r26
 10982 4770 B383      		std Z+3,r27
 10983 4772 8F81      		ldd r24,Y+7
 10984 4774 9885      		ldd r25,Y+8
 10985 4776 880F      		lsl r24
 10986 4778 991F      		rol r25
 10987 477a 880F      		lsl r24
 10988 477c 991F      		rol r25
 10989 477e 2B89      		ldd r18,Y+19
 10990 4780 3C89      		ldd r19,Y+20
 10991 4782 280F      		add r18,r24
 10992 4784 391F      		adc r19,r25
 10993 4786 80E0      		ldi r24,0
 10994 4788 90E0      		ldi r25,0
 10995 478a A0E8      		ldi r26,lo8(-128)
 10996 478c B0E4      		ldi r27,lo8(64)
 10997 478e F901      		movw r30,r18
 10998 4790 8083      		st Z,r24
 10999 4792 9183      		std Z+1,r25
 11000 4794 A283      		std Z+2,r26
 11001 4796 B383      		std Z+3,r27
1303:lp_solve_5.5/lp_price.c ****     j = 10; i = lp->rows+j; lp->upbo[i] = F;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] = -2;
 11002               		.loc 1 1303 0
 11003 4798 8AE0      		ldi r24,lo8(10)
 11004 479a 90E0      		ldi r25,0
 11005 479c 9E83      		std Y+6,r25
 11006 479e 8D83      		std Y+5,r24
 11007 47a0 8985      		ldd r24,Y+9
 11008 47a2 9A85      		ldd r25,Y+10
 11009 47a4 8651      		subi r24,22
 11010 47a6 9E4F      		sbci r25,-2
 11011 47a8 FC01      		movw r30,r24
 11012 47aa 2081      		ld r18,Z
 11013 47ac 3181      		ldd r19,Z+1
 11014 47ae 8D81      		ldd r24,Y+5
 11015 47b0 9E81      		ldd r25,Y+6
 11016 47b2 820F      		add r24,r18
 11017 47b4 931F      		adc r25,r19
 11018 47b6 9887      		std Y+8,r25
 11019 47b8 8F83      		std Y+7,r24
 11020 47ba 8985      		ldd r24,Y+9
 11021 47bc 9A85      		ldd r25,Y+10
 11022 47be 8055      		subi r24,80
 11023 47c0 9D4F      		sbci r25,-3
 11024 47c2 FC01      		movw r30,r24
 11025 47c4 2081      		ld r18,Z
 11026 47c6 3181      		ldd r19,Z+1
 11027 47c8 8F81      		ldd r24,Y+7
 11028 47ca 9885      		ldd r25,Y+8
 11029 47cc 880F      		lsl r24
 11030 47ce 991F      		rol r25
 11031 47d0 880F      		lsl r24
 11032 47d2 991F      		rol r25
 11033 47d4 280F      		add r18,r24
 11034 47d6 391F      		adc r19,r25
 11035 47d8 8981      		ldd r24,Y+1
 11036 47da 9A81      		ldd r25,Y+2
 11037 47dc AB81      		ldd r26,Y+3
 11038 47de BC81      		ldd r27,Y+4
 11039 47e0 F901      		movw r30,r18
 11040 47e2 8083      		st Z,r24
 11041 47e4 9183      		std Z+1,r25
 11042 47e6 A283      		std Z+2,r26
 11043 47e8 B383      		std Z+3,r27
 11044 47ea 8985      		ldd r24,Y+9
 11045 47ec 9A85      		ldd r25,Y+10
 11046 47ee 8E52      		subi r24,46
 11047 47f0 9D4F      		sbci r25,-3
 11048 47f2 FC01      		movw r30,r24
 11049 47f4 2081      		ld r18,Z
 11050 47f6 3181      		ldd r19,Z+1
 11051 47f8 8F81      		ldd r24,Y+7
 11052 47fa 9885      		ldd r25,Y+8
 11053 47fc 820F      		add r24,r18
 11054 47fe 931F      		adc r25,r19
 11055 4800 21E0      		ldi r18,lo8(1)
 11056 4802 FC01      		movw r30,r24
 11057 4804 2083      		st Z,r18
 11058 4806 8D81      		ldd r24,Y+5
 11059 4808 9E81      		ldd r25,Y+6
 11060 480a 880F      		lsl r24
 11061 480c 991F      		rol r25
 11062 480e 2989      		ldd r18,Y+17
 11063 4810 3A89      		ldd r19,Y+18
 11064 4812 820F      		add r24,r18
 11065 4814 931F      		adc r25,r19
 11066 4816 2F81      		ldd r18,Y+7
 11067 4818 3885      		ldd r19,Y+8
 11068 481a FC01      		movw r30,r24
 11069 481c 3183      		std Z+1,r19
 11070 481e 2083      		st Z,r18
 11071 4820 8F81      		ldd r24,Y+7
 11072 4822 9885      		ldd r25,Y+8
 11073 4824 880F      		lsl r24
 11074 4826 991F      		rol r25
 11075 4828 880F      		lsl r24
 11076 482a 991F      		rol r25
 11077 482c 2F85      		ldd r18,Y+15
 11078 482e 3889      		ldd r19,Y+16
 11079 4830 280F      		add r18,r24
 11080 4832 391F      		adc r19,r25
 11081 4834 80E0      		ldi r24,0
 11082 4836 90E0      		ldi r25,0
 11083 4838 A0E0      		ldi r26,0
 11084 483a B0EC      		ldi r27,lo8(-64)
 11085 483c F901      		movw r30,r18
 11086 483e 8083      		st Z,r24
 11087 4840 9183      		std Z+1,r25
 11088 4842 A283      		std Z+2,r26
 11089 4844 B383      		std Z+3,r27
 11090 4846 8F81      		ldd r24,Y+7
 11091 4848 9885      		ldd r25,Y+8
 11092 484a 880F      		lsl r24
 11093 484c 991F      		rol r25
 11094 484e 880F      		lsl r24
 11095 4850 991F      		rol r25
 11096 4852 2B89      		ldd r18,Y+19
 11097 4854 3C89      		ldd r19,Y+20
 11098 4856 280F      		add r18,r24
 11099 4858 391F      		adc r19,r25
 11100 485a 80E0      		ldi r24,0
 11101 485c 90E0      		ldi r25,0
 11102 485e A0E2      		ldi r26,lo8(32)
 11103 4860 B1E4      		ldi r27,lo8(65)
 11104 4862 F901      		movw r30,r18
 11105 4864 8083      		st Z,r24
 11106 4866 9183      		std Z+1,r25
 11107 4868 A283      		std Z+2,r26
 11108 486a B383      		std Z+3,r27
1304:lp_solve_5.5/lp_price.c ****     nzprow[0] = i-lp->rows;
 11109               		.loc 1 1304 0
 11110 486c 8985      		ldd r24,Y+9
 11111 486e 9A85      		ldd r25,Y+10
 11112 4870 8651      		subi r24,22
 11113 4872 9E4F      		sbci r25,-2
 11114 4874 FC01      		movw r30,r24
 11115 4876 8081      		ld r24,Z
 11116 4878 9181      		ldd r25,Z+1
 11117 487a 2F81      		ldd r18,Y+7
 11118 487c 3885      		ldd r19,Y+8
 11119 487e 281B      		sub r18,r24
 11120 4880 390B      		sbc r19,r25
 11121 4882 8989      		ldd r24,Y+17
 11122 4884 9A89      		ldd r25,Y+18
 11123 4886 FC01      		movw r30,r24
 11124 4888 3183      		std Z+1,r19
 11125 488a 2083      		st Z,r18
1305:lp_solve_5.5/lp_price.c ****     lp->rhs[rownr] = -11;
 11126               		.loc 1 1305 0
 11127 488c 8985      		ldd r24,Y+9
 11128 488e 9A85      		ldd r25,Y+10
 11129 4890 8855      		subi r24,88
 11130 4892 9D4F      		sbci r25,-3
 11131 4894 FC01      		movw r30,r24
 11132 4896 2081      		ld r18,Z
 11133 4898 3181      		ldd r19,Z+1
 11134 489a 8D85      		ldd r24,Y+13
 11135 489c 9E85      		ldd r25,Y+14
 11136 489e 880F      		lsl r24
 11137 48a0 991F      		rol r25
 11138 48a2 880F      		lsl r24
 11139 48a4 991F      		rol r25
 11140 48a6 280F      		add r18,r24
 11141 48a8 391F      		adc r19,r25
 11142 48aa 80E0      		ldi r24,0
 11143 48ac 90E0      		ldi r25,0
 11144 48ae A0E3      		ldi r26,lo8(48)
 11145 48b0 B1EC      		ldi r27,lo8(-63)
 11146 48b2 F901      		movw r30,r18
 11147 48b4 8083      		st Z,r24
 11148 48b6 9183      		std Z+1,r25
 11149 48b8 A283      		std Z+2,r26
 11150 48ba B383      		std Z+3,r27
1306:lp_solve_5.5/lp_price.c ****     lp->upbo[lp->var_basic[rownr]] = F;
 11151               		.loc 1 1306 0
 11152 48bc 8985      		ldd r24,Y+9
 11153 48be 9A85      		ldd r25,Y+10
 11154 48c0 8055      		subi r24,80
 11155 48c2 9D4F      		sbci r25,-3
 11156 48c4 FC01      		movw r30,r24
 11157 48c6 2081      		ld r18,Z
 11158 48c8 3181      		ldd r19,Z+1
 11159 48ca 8985      		ldd r24,Y+9
 11160 48cc 9A85      		ldd r25,Y+10
 11161 48ce 8453      		subi r24,52
 11162 48d0 9D4F      		sbci r25,-3
 11163 48d2 FC01      		movw r30,r24
 11164 48d4 4081      		ld r20,Z
 11165 48d6 5181      		ldd r21,Z+1
 11166 48d8 8D85      		ldd r24,Y+13
 11167 48da 9E85      		ldd r25,Y+14
 11168 48dc 880F      		lsl r24
 11169 48de 991F      		rol r25
 11170 48e0 840F      		add r24,r20
 11171 48e2 951F      		adc r25,r21
 11172 48e4 FC01      		movw r30,r24
 11173 48e6 8081      		ld r24,Z
 11174 48e8 9181      		ldd r25,Z+1
 11175 48ea 880F      		lsl r24
 11176 48ec 991F      		rol r25
 11177 48ee 880F      		lsl r24
 11178 48f0 991F      		rol r25
 11179 48f2 280F      		add r18,r24
 11180 48f4 391F      		adc r19,r25
 11181 48f6 8981      		ldd r24,Y+1
 11182 48f8 9A81      		ldd r25,Y+2
 11183 48fa AB81      		ldd r26,Y+3
 11184 48fc BC81      		ldd r27,Y+4
 11185 48fe F901      		movw r30,r18
 11186 4900 8083      		st Z,r24
 11187 4902 9183      		std Z+1,r25
 11188 4904 A283      		std Z+2,r26
 11189 4906 B383      		std Z+3,r27
1307:lp_solve_5.5/lp_price.c ****     lp->rhs[0] = 1;
 11190               		.loc 1 1307 0
 11191 4908 8985      		ldd r24,Y+9
 11192 490a 9A85      		ldd r25,Y+10
 11193 490c 8855      		subi r24,88
 11194 490e 9D4F      		sbci r25,-3
 11195 4910 FC01      		movw r30,r24
 11196 4912 2081      		ld r18,Z
 11197 4914 3181      		ldd r19,Z+1
 11198 4916 80E0      		ldi r24,0
 11199 4918 90E0      		ldi r25,0
 11200 491a A0E8      		ldi r26,lo8(-128)
 11201 491c BFE3      		ldi r27,lo8(63)
 11202 491e F901      		movw r30,r18
 11203 4920 8083      		st Z,r24
 11204 4922 9183      		std Z+1,r25
 11205 4924 A283      		std Z+2,r26
 11206 4926 B383      		std Z+3,r27
1308:lp_solve_5.5/lp_price.c ****   }
1309:lp_solve_5.5/lp_price.c ****   else if(which == 1) {       /* Maros Example-1 - presorted in correct order */
1310:lp_solve_5.5/lp_price.c ****     j =  1; i = lp->rows+j; lp->upbo[i] = 0;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] =  2;
1311:lp_solve_5.5/lp_price.c ****     j =  2; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] =  1;
1312:lp_solve_5.5/lp_price.c ****     j =  3; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] = FALSE; nzprow[j] = i; prow[i] = -4;
1313:lp_solve_5.5/lp_price.c ****     j =  4; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] = FALSE; nzprow[j] = i; prow[i] = -2;
1314:lp_solve_5.5/lp_price.c **** 
1315:lp_solve_5.5/lp_price.c ****     j =  5; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] = -1;
1316:lp_solve_5.5/lp_price.c ****     j =  6; i = lp->rows+j; lp->upbo[i] = 2;  lp->is_lower[i] = FALSE; nzprow[j] = i; prow[i] =  1;
1317:lp_solve_5.5/lp_price.c ****     j =  7; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] = -2;
1318:lp_solve_5.5/lp_price.c ****     j =  8; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] = FALSE; nzprow[j] = i; prow[i] =  3;
1319:lp_solve_5.5/lp_price.c ****     j =  9; i = lp->rows+j; lp->upbo[i] = 5;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] = -1;
1320:lp_solve_5.5/lp_price.c ****     j = 10; i = lp->rows+j; lp->upbo[i] = F;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] = -2;
1321:lp_solve_5.5/lp_price.c ****     nzprow[0] = i-lp->rows;
1322:lp_solve_5.5/lp_price.c ****     lp->rhs[rownr] = -11;
1323:lp_solve_5.5/lp_price.c ****     lp->upbo[lp->var_basic[rownr]] = F;
1324:lp_solve_5.5/lp_price.c ****     lp->rhs[0] = 1;
1325:lp_solve_5.5/lp_price.c ****   }
1326:lp_solve_5.5/lp_price.c **** 
1327:lp_solve_5.5/lp_price.c ****   else if(which == 10) {       /* Maros Example-2 - raw data */
1328:lp_solve_5.5/lp_price.c ****     j =  1; i = lp->rows+j; lp->upbo[i] = 5;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] = -2;
1329:lp_solve_5.5/lp_price.c ****     j =  2; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] =  3;
1330:lp_solve_5.5/lp_price.c ****     j =  3; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] = FALSE; nzprow[j] = i; prow[i] = -2;
1331:lp_solve_5.5/lp_price.c ****     j =  4; i = lp->rows+j; lp->upbo[i] = 2;  lp->is_lower[i] = FALSE; nzprow[j] = i; prow[i] = -1;
1332:lp_solve_5.5/lp_price.c ****     j =  5; i = lp->rows+j; lp->upbo[i] = 2;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] =  1;
1333:lp_solve_5.5/lp_price.c ****     j =  6; i = lp->rows+j; lp->upbo[i] = F;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] =  3;
1334:lp_solve_5.5/lp_price.c ****     nzprow[0] = i-lp->rows;
1335:lp_solve_5.5/lp_price.c ****     lp->rhs[rownr] = 14;
1336:lp_solve_5.5/lp_price.c ****     lp->upbo[lp->var_basic[rownr]] = 2;
1337:lp_solve_5.5/lp_price.c ****     lp->rhs[0] = 6;
1338:lp_solve_5.5/lp_price.c ****   }
1339:lp_solve_5.5/lp_price.c **** }
 11207               		.loc 1 1339 0
 11208 4928 00C0      		rjmp .L382
 11209               	.L379:
1309:lp_solve_5.5/lp_price.c ****     j =  1; i = lp->rows+j; lp->upbo[i] = 0;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] =  2;
 11210               		.loc 1 1309 0
 11211 492a 8B85      		ldd r24,Y+11
 11212 492c 9C85      		ldd r25,Y+12
 11213 492e 0197      		sbiw r24,1
 11214 4930 01F0      		breq .+2
 11215 4932 00C0      		rjmp .L381
1310:lp_solve_5.5/lp_price.c ****     j =  2; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] =  1;
 11216               		.loc 1 1310 0
 11217 4934 81E0      		ldi r24,lo8(1)
 11218 4936 90E0      		ldi r25,0
 11219 4938 9E83      		std Y+6,r25
 11220 493a 8D83      		std Y+5,r24
 11221 493c 8985      		ldd r24,Y+9
 11222 493e 9A85      		ldd r25,Y+10
 11223 4940 8651      		subi r24,22
 11224 4942 9E4F      		sbci r25,-2
 11225 4944 FC01      		movw r30,r24
 11226 4946 2081      		ld r18,Z
 11227 4948 3181      		ldd r19,Z+1
 11228 494a 8D81      		ldd r24,Y+5
 11229 494c 9E81      		ldd r25,Y+6
 11230 494e 820F      		add r24,r18
 11231 4950 931F      		adc r25,r19
 11232 4952 9887      		std Y+8,r25
 11233 4954 8F83      		std Y+7,r24
 11234 4956 8985      		ldd r24,Y+9
 11235 4958 9A85      		ldd r25,Y+10
 11236 495a 8055      		subi r24,80
 11237 495c 9D4F      		sbci r25,-3
 11238 495e FC01      		movw r30,r24
 11239 4960 2081      		ld r18,Z
 11240 4962 3181      		ldd r19,Z+1
 11241 4964 8F81      		ldd r24,Y+7
 11242 4966 9885      		ldd r25,Y+8
 11243 4968 880F      		lsl r24
 11244 496a 991F      		rol r25
 11245 496c 880F      		lsl r24
 11246 496e 991F      		rol r25
 11247 4970 820F      		add r24,r18
 11248 4972 931F      		adc r25,r19
 11249 4974 FC01      		movw r30,r24
 11250 4976 1082      		st Z,__zero_reg__
 11251 4978 1182      		std Z+1,__zero_reg__
 11252 497a 1282      		std Z+2,__zero_reg__
 11253 497c 1382      		std Z+3,__zero_reg__
 11254 497e 8985      		ldd r24,Y+9
 11255 4980 9A85      		ldd r25,Y+10
 11256 4982 8E52      		subi r24,46
 11257 4984 9D4F      		sbci r25,-3
 11258 4986 FC01      		movw r30,r24
 11259 4988 2081      		ld r18,Z
 11260 498a 3181      		ldd r19,Z+1
 11261 498c 8F81      		ldd r24,Y+7
 11262 498e 9885      		ldd r25,Y+8
 11263 4990 820F      		add r24,r18
 11264 4992 931F      		adc r25,r19
 11265 4994 21E0      		ldi r18,lo8(1)
 11266 4996 FC01      		movw r30,r24
 11267 4998 2083      		st Z,r18
 11268 499a 8D81      		ldd r24,Y+5
 11269 499c 9E81      		ldd r25,Y+6
 11270 499e 880F      		lsl r24
 11271 49a0 991F      		rol r25
 11272 49a2 2989      		ldd r18,Y+17
 11273 49a4 3A89      		ldd r19,Y+18
 11274 49a6 820F      		add r24,r18
 11275 49a8 931F      		adc r25,r19
 11276 49aa 2F81      		ldd r18,Y+7
 11277 49ac 3885      		ldd r19,Y+8
 11278 49ae FC01      		movw r30,r24
 11279 49b0 3183      		std Z+1,r19
 11280 49b2 2083      		st Z,r18
 11281 49b4 8F81      		ldd r24,Y+7
 11282 49b6 9885      		ldd r25,Y+8
 11283 49b8 880F      		lsl r24
 11284 49ba 991F      		rol r25
 11285 49bc 880F      		lsl r24
 11286 49be 991F      		rol r25
 11287 49c0 2F85      		ldd r18,Y+15
 11288 49c2 3889      		ldd r19,Y+16
 11289 49c4 280F      		add r18,r24
 11290 49c6 391F      		adc r19,r25
 11291 49c8 80E0      		ldi r24,0
 11292 49ca 90E0      		ldi r25,0
 11293 49cc A0E0      		ldi r26,0
 11294 49ce B0E4      		ldi r27,lo8(64)
 11295 49d0 F901      		movw r30,r18
 11296 49d2 8083      		st Z,r24
 11297 49d4 9183      		std Z+1,r25
 11298 49d6 A283      		std Z+2,r26
 11299 49d8 B383      		std Z+3,r27
 11300 49da 8F81      		ldd r24,Y+7
 11301 49dc 9885      		ldd r25,Y+8
 11302 49de 880F      		lsl r24
 11303 49e0 991F      		rol r25
 11304 49e2 880F      		lsl r24
 11305 49e4 991F      		rol r25
 11306 49e6 2B89      		ldd r18,Y+19
 11307 49e8 3C89      		ldd r19,Y+20
 11308 49ea 280F      		add r18,r24
 11309 49ec 391F      		adc r19,r25
 11310 49ee 80E0      		ldi r24,0
 11311 49f0 90E0      		ldi r25,0
 11312 49f2 A0E8      		ldi r26,lo8(-128)
 11313 49f4 BFEB      		ldi r27,lo8(-65)
 11314 49f6 F901      		movw r30,r18
 11315 49f8 8083      		st Z,r24
 11316 49fa 9183      		std Z+1,r25
 11317 49fc A283      		std Z+2,r26
 11318 49fe B383      		std Z+3,r27
1311:lp_solve_5.5/lp_price.c ****     j =  3; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] = FALSE; nzprow[j] = i; prow[i] = -4;
 11319               		.loc 1 1311 0
 11320 4a00 82E0      		ldi r24,lo8(2)
 11321 4a02 90E0      		ldi r25,0
 11322 4a04 9E83      		std Y+6,r25
 11323 4a06 8D83      		std Y+5,r24
 11324 4a08 8985      		ldd r24,Y+9
 11325 4a0a 9A85      		ldd r25,Y+10
 11326 4a0c 8651      		subi r24,22
 11327 4a0e 9E4F      		sbci r25,-2
 11328 4a10 FC01      		movw r30,r24
 11329 4a12 2081      		ld r18,Z
 11330 4a14 3181      		ldd r19,Z+1
 11331 4a16 8D81      		ldd r24,Y+5
 11332 4a18 9E81      		ldd r25,Y+6
 11333 4a1a 820F      		add r24,r18
 11334 4a1c 931F      		adc r25,r19
 11335 4a1e 9887      		std Y+8,r25
 11336 4a20 8F83      		std Y+7,r24
 11337 4a22 8985      		ldd r24,Y+9
 11338 4a24 9A85      		ldd r25,Y+10
 11339 4a26 8055      		subi r24,80
 11340 4a28 9D4F      		sbci r25,-3
 11341 4a2a FC01      		movw r30,r24
 11342 4a2c 2081      		ld r18,Z
 11343 4a2e 3181      		ldd r19,Z+1
 11344 4a30 8F81      		ldd r24,Y+7
 11345 4a32 9885      		ldd r25,Y+8
 11346 4a34 880F      		lsl r24
 11347 4a36 991F      		rol r25
 11348 4a38 880F      		lsl r24
 11349 4a3a 991F      		rol r25
 11350 4a3c 280F      		add r18,r24
 11351 4a3e 391F      		adc r19,r25
 11352 4a40 80E0      		ldi r24,0
 11353 4a42 90E0      		ldi r25,0
 11354 4a44 A0E8      		ldi r26,lo8(-128)
 11355 4a46 BFE3      		ldi r27,lo8(63)
 11356 4a48 F901      		movw r30,r18
 11357 4a4a 8083      		st Z,r24
 11358 4a4c 9183      		std Z+1,r25
 11359 4a4e A283      		std Z+2,r26
 11360 4a50 B383      		std Z+3,r27
 11361 4a52 8985      		ldd r24,Y+9
 11362 4a54 9A85      		ldd r25,Y+10
 11363 4a56 8E52      		subi r24,46
 11364 4a58 9D4F      		sbci r25,-3
 11365 4a5a FC01      		movw r30,r24
 11366 4a5c 2081      		ld r18,Z
 11367 4a5e 3181      		ldd r19,Z+1
 11368 4a60 8F81      		ldd r24,Y+7
 11369 4a62 9885      		ldd r25,Y+8
 11370 4a64 820F      		add r24,r18
 11371 4a66 931F      		adc r25,r19
 11372 4a68 21E0      		ldi r18,lo8(1)
 11373 4a6a FC01      		movw r30,r24
 11374 4a6c 2083      		st Z,r18
 11375 4a6e 8D81      		ldd r24,Y+5
 11376 4a70 9E81      		ldd r25,Y+6
 11377 4a72 880F      		lsl r24
 11378 4a74 991F      		rol r25
 11379 4a76 2989      		ldd r18,Y+17
 11380 4a78 3A89      		ldd r19,Y+18
 11381 4a7a 820F      		add r24,r18
 11382 4a7c 931F      		adc r25,r19
 11383 4a7e 2F81      		ldd r18,Y+7
 11384 4a80 3885      		ldd r19,Y+8
 11385 4a82 FC01      		movw r30,r24
 11386 4a84 3183      		std Z+1,r19
 11387 4a86 2083      		st Z,r18
 11388 4a88 8F81      		ldd r24,Y+7
 11389 4a8a 9885      		ldd r25,Y+8
 11390 4a8c 880F      		lsl r24
 11391 4a8e 991F      		rol r25
 11392 4a90 880F      		lsl r24
 11393 4a92 991F      		rol r25
 11394 4a94 2F85      		ldd r18,Y+15
 11395 4a96 3889      		ldd r19,Y+16
 11396 4a98 280F      		add r18,r24
 11397 4a9a 391F      		adc r19,r25
 11398 4a9c 80E0      		ldi r24,0
 11399 4a9e 90E0      		ldi r25,0
 11400 4aa0 A0E8      		ldi r26,lo8(-128)
 11401 4aa2 BFE3      		ldi r27,lo8(63)
 11402 4aa4 F901      		movw r30,r18
 11403 4aa6 8083      		st Z,r24
 11404 4aa8 9183      		std Z+1,r25
 11405 4aaa A283      		std Z+2,r26
 11406 4aac B383      		std Z+3,r27
 11407 4aae 8F81      		ldd r24,Y+7
 11408 4ab0 9885      		ldd r25,Y+8
 11409 4ab2 880F      		lsl r24
 11410 4ab4 991F      		rol r25
 11411 4ab6 880F      		lsl r24
 11412 4ab8 991F      		rol r25
 11413 4aba 2B89      		ldd r18,Y+19
 11414 4abc 3C89      		ldd r19,Y+20
 11415 4abe 280F      		add r18,r24
 11416 4ac0 391F      		adc r19,r25
 11417 4ac2 80E0      		ldi r24,0
 11418 4ac4 90E0      		ldi r25,0
 11419 4ac6 A0EA      		ldi r26,lo8(-96)
 11420 4ac8 B0E4      		ldi r27,lo8(64)
 11421 4aca F901      		movw r30,r18
 11422 4acc 8083      		st Z,r24
 11423 4ace 9183      		std Z+1,r25
 11424 4ad0 A283      		std Z+2,r26
 11425 4ad2 B383      		std Z+3,r27
1312:lp_solve_5.5/lp_price.c ****     j =  4; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] = FALSE; nzprow[j] = i; prow[i] = -2;
 11426               		.loc 1 1312 0
 11427 4ad4 83E0      		ldi r24,lo8(3)
 11428 4ad6 90E0      		ldi r25,0
 11429 4ad8 9E83      		std Y+6,r25
 11430 4ada 8D83      		std Y+5,r24
 11431 4adc 8985      		ldd r24,Y+9
 11432 4ade 9A85      		ldd r25,Y+10
 11433 4ae0 8651      		subi r24,22
 11434 4ae2 9E4F      		sbci r25,-2
 11435 4ae4 FC01      		movw r30,r24
 11436 4ae6 2081      		ld r18,Z
 11437 4ae8 3181      		ldd r19,Z+1
 11438 4aea 8D81      		ldd r24,Y+5
 11439 4aec 9E81      		ldd r25,Y+6
 11440 4aee 820F      		add r24,r18
 11441 4af0 931F      		adc r25,r19
 11442 4af2 9887      		std Y+8,r25
 11443 4af4 8F83      		std Y+7,r24
 11444 4af6 8985      		ldd r24,Y+9
 11445 4af8 9A85      		ldd r25,Y+10
 11446 4afa 8055      		subi r24,80
 11447 4afc 9D4F      		sbci r25,-3
 11448 4afe FC01      		movw r30,r24
 11449 4b00 2081      		ld r18,Z
 11450 4b02 3181      		ldd r19,Z+1
 11451 4b04 8F81      		ldd r24,Y+7
 11452 4b06 9885      		ldd r25,Y+8
 11453 4b08 880F      		lsl r24
 11454 4b0a 991F      		rol r25
 11455 4b0c 880F      		lsl r24
 11456 4b0e 991F      		rol r25
 11457 4b10 280F      		add r18,r24
 11458 4b12 391F      		adc r19,r25
 11459 4b14 80E0      		ldi r24,0
 11460 4b16 90E0      		ldi r25,0
 11461 4b18 A0E8      		ldi r26,lo8(-128)
 11462 4b1a BFE3      		ldi r27,lo8(63)
 11463 4b1c F901      		movw r30,r18
 11464 4b1e 8083      		st Z,r24
 11465 4b20 9183      		std Z+1,r25
 11466 4b22 A283      		std Z+2,r26
 11467 4b24 B383      		std Z+3,r27
 11468 4b26 8985      		ldd r24,Y+9
 11469 4b28 9A85      		ldd r25,Y+10
 11470 4b2a 8E52      		subi r24,46
 11471 4b2c 9D4F      		sbci r25,-3
 11472 4b2e FC01      		movw r30,r24
 11473 4b30 2081      		ld r18,Z
 11474 4b32 3181      		ldd r19,Z+1
 11475 4b34 8F81      		ldd r24,Y+7
 11476 4b36 9885      		ldd r25,Y+8
 11477 4b38 820F      		add r24,r18
 11478 4b3a 931F      		adc r25,r19
 11479 4b3c FC01      		movw r30,r24
 11480 4b3e 1082      		st Z,__zero_reg__
 11481 4b40 8D81      		ldd r24,Y+5
 11482 4b42 9E81      		ldd r25,Y+6
 11483 4b44 880F      		lsl r24
 11484 4b46 991F      		rol r25
 11485 4b48 2989      		ldd r18,Y+17
 11486 4b4a 3A89      		ldd r19,Y+18
 11487 4b4c 820F      		add r24,r18
 11488 4b4e 931F      		adc r25,r19
 11489 4b50 2F81      		ldd r18,Y+7
 11490 4b52 3885      		ldd r19,Y+8
 11491 4b54 FC01      		movw r30,r24
 11492 4b56 3183      		std Z+1,r19
 11493 4b58 2083      		st Z,r18
 11494 4b5a 8F81      		ldd r24,Y+7
 11495 4b5c 9885      		ldd r25,Y+8
 11496 4b5e 880F      		lsl r24
 11497 4b60 991F      		rol r25
 11498 4b62 880F      		lsl r24
 11499 4b64 991F      		rol r25
 11500 4b66 2F85      		ldd r18,Y+15
 11501 4b68 3889      		ldd r19,Y+16
 11502 4b6a 280F      		add r18,r24
 11503 4b6c 391F      		adc r19,r25
 11504 4b6e 80E0      		ldi r24,0
 11505 4b70 90E0      		ldi r25,0
 11506 4b72 A0E8      		ldi r26,lo8(-128)
 11507 4b74 B0EC      		ldi r27,lo8(-64)
 11508 4b76 F901      		movw r30,r18
 11509 4b78 8083      		st Z,r24
 11510 4b7a 9183      		std Z+1,r25
 11511 4b7c A283      		std Z+2,r26
 11512 4b7e B383      		std Z+3,r27
 11513 4b80 8F81      		ldd r24,Y+7
 11514 4b82 9885      		ldd r25,Y+8
 11515 4b84 880F      		lsl r24
 11516 4b86 991F      		rol r25
 11517 4b88 880F      		lsl r24
 11518 4b8a 991F      		rol r25
 11519 4b8c 2B89      		ldd r18,Y+19
 11520 4b8e 3C89      		ldd r19,Y+20
 11521 4b90 280F      		add r18,r24
 11522 4b92 391F      		adc r19,r25
 11523 4b94 80E0      		ldi r24,0
 11524 4b96 90E0      		ldi r25,0
 11525 4b98 A0E0      		ldi r26,0
 11526 4b9a B0EC      		ldi r27,lo8(-64)
 11527 4b9c F901      		movw r30,r18
 11528 4b9e 8083      		st Z,r24
 11529 4ba0 9183      		std Z+1,r25
 11530 4ba2 A283      		std Z+2,r26
 11531 4ba4 B383      		std Z+3,r27
1313:lp_solve_5.5/lp_price.c **** 
 11532               		.loc 1 1313 0
 11533 4ba6 84E0      		ldi r24,lo8(4)
 11534 4ba8 90E0      		ldi r25,0
 11535 4baa 9E83      		std Y+6,r25
 11536 4bac 8D83      		std Y+5,r24
 11537 4bae 8985      		ldd r24,Y+9
 11538 4bb0 9A85      		ldd r25,Y+10
 11539 4bb2 8651      		subi r24,22
 11540 4bb4 9E4F      		sbci r25,-2
 11541 4bb6 FC01      		movw r30,r24
 11542 4bb8 2081      		ld r18,Z
 11543 4bba 3181      		ldd r19,Z+1
 11544 4bbc 8D81      		ldd r24,Y+5
 11545 4bbe 9E81      		ldd r25,Y+6
 11546 4bc0 820F      		add r24,r18
 11547 4bc2 931F      		adc r25,r19
 11548 4bc4 9887      		std Y+8,r25
 11549 4bc6 8F83      		std Y+7,r24
 11550 4bc8 8985      		ldd r24,Y+9
 11551 4bca 9A85      		ldd r25,Y+10
 11552 4bcc 8055      		subi r24,80
 11553 4bce 9D4F      		sbci r25,-3
 11554 4bd0 FC01      		movw r30,r24
 11555 4bd2 2081      		ld r18,Z
 11556 4bd4 3181      		ldd r19,Z+1
 11557 4bd6 8F81      		ldd r24,Y+7
 11558 4bd8 9885      		ldd r25,Y+8
 11559 4bda 880F      		lsl r24
 11560 4bdc 991F      		rol r25
 11561 4bde 880F      		lsl r24
 11562 4be0 991F      		rol r25
 11563 4be2 280F      		add r18,r24
 11564 4be4 391F      		adc r19,r25
 11565 4be6 80E0      		ldi r24,0
 11566 4be8 90E0      		ldi r25,0
 11567 4bea A0E8      		ldi r26,lo8(-128)
 11568 4bec BFE3      		ldi r27,lo8(63)
 11569 4bee F901      		movw r30,r18
 11570 4bf0 8083      		st Z,r24
 11571 4bf2 9183      		std Z+1,r25
 11572 4bf4 A283      		std Z+2,r26
 11573 4bf6 B383      		std Z+3,r27
 11574 4bf8 8985      		ldd r24,Y+9
 11575 4bfa 9A85      		ldd r25,Y+10
 11576 4bfc 8E52      		subi r24,46
 11577 4bfe 9D4F      		sbci r25,-3
 11578 4c00 FC01      		movw r30,r24
 11579 4c02 2081      		ld r18,Z
 11580 4c04 3181      		ldd r19,Z+1
 11581 4c06 8F81      		ldd r24,Y+7
 11582 4c08 9885      		ldd r25,Y+8
 11583 4c0a 820F      		add r24,r18
 11584 4c0c 931F      		adc r25,r19
 11585 4c0e FC01      		movw r30,r24
 11586 4c10 1082      		st Z,__zero_reg__
 11587 4c12 8D81      		ldd r24,Y+5
 11588 4c14 9E81      		ldd r25,Y+6
 11589 4c16 880F      		lsl r24
 11590 4c18 991F      		rol r25
 11591 4c1a 2989      		ldd r18,Y+17
 11592 4c1c 3A89      		ldd r19,Y+18
 11593 4c1e 820F      		add r24,r18
 11594 4c20 931F      		adc r25,r19
 11595 4c22 2F81      		ldd r18,Y+7
 11596 4c24 3885      		ldd r19,Y+8
 11597 4c26 FC01      		movw r30,r24
 11598 4c28 3183      		std Z+1,r19
 11599 4c2a 2083      		st Z,r18
 11600 4c2c 8F81      		ldd r24,Y+7
 11601 4c2e 9885      		ldd r25,Y+8
 11602 4c30 880F      		lsl r24
 11603 4c32 991F      		rol r25
 11604 4c34 880F      		lsl r24
 11605 4c36 991F      		rol r25
 11606 4c38 2F85      		ldd r18,Y+15
 11607 4c3a 3889      		ldd r19,Y+16
 11608 4c3c 280F      		add r18,r24
 11609 4c3e 391F      		adc r19,r25
 11610 4c40 80E0      		ldi r24,0
 11611 4c42 90E0      		ldi r25,0
 11612 4c44 A0E0      		ldi r26,0
 11613 4c46 B0EC      		ldi r27,lo8(-64)
 11614 4c48 F901      		movw r30,r18
 11615 4c4a 8083      		st Z,r24
 11616 4c4c 9183      		std Z+1,r25
 11617 4c4e A283      		std Z+2,r26
 11618 4c50 B383      		std Z+3,r27
 11619 4c52 8F81      		ldd r24,Y+7
 11620 4c54 9885      		ldd r25,Y+8
 11621 4c56 880F      		lsl r24
 11622 4c58 991F      		rol r25
 11623 4c5a 880F      		lsl r24
 11624 4c5c 991F      		rol r25
 11625 4c5e 2B89      		ldd r18,Y+19
 11626 4c60 3C89      		ldd r19,Y+20
 11627 4c62 820F      		add r24,r18
 11628 4c64 931F      		adc r25,r19
 11629 4c66 FC01      		movw r30,r24
 11630 4c68 1082      		st Z,__zero_reg__
 11631 4c6a 1182      		std Z+1,__zero_reg__
 11632 4c6c 1282      		std Z+2,__zero_reg__
 11633 4c6e 1382      		std Z+3,__zero_reg__
1315:lp_solve_5.5/lp_price.c ****     j =  6; i = lp->rows+j; lp->upbo[i] = 2;  lp->is_lower[i] = FALSE; nzprow[j] = i; prow[i] =  1;
 11634               		.loc 1 1315 0
 11635 4c70 85E0      		ldi r24,lo8(5)
 11636 4c72 90E0      		ldi r25,0
 11637 4c74 9E83      		std Y+6,r25
 11638 4c76 8D83      		std Y+5,r24
 11639 4c78 8985      		ldd r24,Y+9
 11640 4c7a 9A85      		ldd r25,Y+10
 11641 4c7c 8651      		subi r24,22
 11642 4c7e 9E4F      		sbci r25,-2
 11643 4c80 FC01      		movw r30,r24
 11644 4c82 2081      		ld r18,Z
 11645 4c84 3181      		ldd r19,Z+1
 11646 4c86 8D81      		ldd r24,Y+5
 11647 4c88 9E81      		ldd r25,Y+6
 11648 4c8a 820F      		add r24,r18
 11649 4c8c 931F      		adc r25,r19
 11650 4c8e 9887      		std Y+8,r25
 11651 4c90 8F83      		std Y+7,r24
 11652 4c92 8985      		ldd r24,Y+9
 11653 4c94 9A85      		ldd r25,Y+10
 11654 4c96 8055      		subi r24,80
 11655 4c98 9D4F      		sbci r25,-3
 11656 4c9a FC01      		movw r30,r24
 11657 4c9c 2081      		ld r18,Z
 11658 4c9e 3181      		ldd r19,Z+1
 11659 4ca0 8F81      		ldd r24,Y+7
 11660 4ca2 9885      		ldd r25,Y+8
 11661 4ca4 880F      		lsl r24
 11662 4ca6 991F      		rol r25
 11663 4ca8 880F      		lsl r24
 11664 4caa 991F      		rol r25
 11665 4cac 280F      		add r18,r24
 11666 4cae 391F      		adc r19,r25
 11667 4cb0 80E0      		ldi r24,0
 11668 4cb2 90E0      		ldi r25,0
 11669 4cb4 A0E8      		ldi r26,lo8(-128)
 11670 4cb6 BFE3      		ldi r27,lo8(63)
 11671 4cb8 F901      		movw r30,r18
 11672 4cba 8083      		st Z,r24
 11673 4cbc 9183      		std Z+1,r25
 11674 4cbe A283      		std Z+2,r26
 11675 4cc0 B383      		std Z+3,r27
 11676 4cc2 8985      		ldd r24,Y+9
 11677 4cc4 9A85      		ldd r25,Y+10
 11678 4cc6 8E52      		subi r24,46
 11679 4cc8 9D4F      		sbci r25,-3
 11680 4cca FC01      		movw r30,r24
 11681 4ccc 2081      		ld r18,Z
 11682 4cce 3181      		ldd r19,Z+1
 11683 4cd0 8F81      		ldd r24,Y+7
 11684 4cd2 9885      		ldd r25,Y+8
 11685 4cd4 820F      		add r24,r18
 11686 4cd6 931F      		adc r25,r19
 11687 4cd8 21E0      		ldi r18,lo8(1)
 11688 4cda FC01      		movw r30,r24
 11689 4cdc 2083      		st Z,r18
 11690 4cde 8D81      		ldd r24,Y+5
 11691 4ce0 9E81      		ldd r25,Y+6
 11692 4ce2 880F      		lsl r24
 11693 4ce4 991F      		rol r25
 11694 4ce6 2989      		ldd r18,Y+17
 11695 4ce8 3A89      		ldd r19,Y+18
 11696 4cea 820F      		add r24,r18
 11697 4cec 931F      		adc r25,r19
 11698 4cee 2F81      		ldd r18,Y+7
 11699 4cf0 3885      		ldd r19,Y+8
 11700 4cf2 FC01      		movw r30,r24
 11701 4cf4 3183      		std Z+1,r19
 11702 4cf6 2083      		st Z,r18
 11703 4cf8 8F81      		ldd r24,Y+7
 11704 4cfa 9885      		ldd r25,Y+8
 11705 4cfc 880F      		lsl r24
 11706 4cfe 991F      		rol r25
 11707 4d00 880F      		lsl r24
 11708 4d02 991F      		rol r25
 11709 4d04 2F85      		ldd r18,Y+15
 11710 4d06 3889      		ldd r19,Y+16
 11711 4d08 280F      		add r18,r24
 11712 4d0a 391F      		adc r19,r25
 11713 4d0c 80E0      		ldi r24,0
 11714 4d0e 90E0      		ldi r25,0
 11715 4d10 A0E8      		ldi r26,lo8(-128)
 11716 4d12 BFEB      		ldi r27,lo8(-65)
 11717 4d14 F901      		movw r30,r18
 11718 4d16 8083      		st Z,r24
 11719 4d18 9183      		std Z+1,r25
 11720 4d1a A283      		std Z+2,r26
 11721 4d1c B383      		std Z+3,r27
 11722 4d1e 8F81      		ldd r24,Y+7
 11723 4d20 9885      		ldd r25,Y+8
 11724 4d22 880F      		lsl r24
 11725 4d24 991F      		rol r25
 11726 4d26 880F      		lsl r24
 11727 4d28 991F      		rol r25
 11728 4d2a 2B89      		ldd r18,Y+19
 11729 4d2c 3C89      		ldd r19,Y+20
 11730 4d2e 820F      		add r24,r18
 11731 4d30 931F      		adc r25,r19
 11732 4d32 FC01      		movw r30,r24
 11733 4d34 1082      		st Z,__zero_reg__
 11734 4d36 1182      		std Z+1,__zero_reg__
 11735 4d38 1282      		std Z+2,__zero_reg__
 11736 4d3a 1382      		std Z+3,__zero_reg__
1316:lp_solve_5.5/lp_price.c ****     j =  7; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] = -2;
 11737               		.loc 1 1316 0
 11738 4d3c 86E0      		ldi r24,lo8(6)
 11739 4d3e 90E0      		ldi r25,0
 11740 4d40 9E83      		std Y+6,r25
 11741 4d42 8D83      		std Y+5,r24
 11742 4d44 8985      		ldd r24,Y+9
 11743 4d46 9A85      		ldd r25,Y+10
 11744 4d48 8651      		subi r24,22
 11745 4d4a 9E4F      		sbci r25,-2
 11746 4d4c FC01      		movw r30,r24
 11747 4d4e 2081      		ld r18,Z
 11748 4d50 3181      		ldd r19,Z+1
 11749 4d52 8D81      		ldd r24,Y+5
 11750 4d54 9E81      		ldd r25,Y+6
 11751 4d56 820F      		add r24,r18
 11752 4d58 931F      		adc r25,r19
 11753 4d5a 9887      		std Y+8,r25
 11754 4d5c 8F83      		std Y+7,r24
 11755 4d5e 8985      		ldd r24,Y+9
 11756 4d60 9A85      		ldd r25,Y+10
 11757 4d62 8055      		subi r24,80
 11758 4d64 9D4F      		sbci r25,-3
 11759 4d66 FC01      		movw r30,r24
 11760 4d68 2081      		ld r18,Z
 11761 4d6a 3181      		ldd r19,Z+1
 11762 4d6c 8F81      		ldd r24,Y+7
 11763 4d6e 9885      		ldd r25,Y+8
 11764 4d70 880F      		lsl r24
 11765 4d72 991F      		rol r25
 11766 4d74 880F      		lsl r24
 11767 4d76 991F      		rol r25
 11768 4d78 280F      		add r18,r24
 11769 4d7a 391F      		adc r19,r25
 11770 4d7c 80E0      		ldi r24,0
 11771 4d7e 90E0      		ldi r25,0
 11772 4d80 A0E0      		ldi r26,0
 11773 4d82 B0E4      		ldi r27,lo8(64)
 11774 4d84 F901      		movw r30,r18
 11775 4d86 8083      		st Z,r24
 11776 4d88 9183      		std Z+1,r25
 11777 4d8a A283      		std Z+2,r26
 11778 4d8c B383      		std Z+3,r27
 11779 4d8e 8985      		ldd r24,Y+9
 11780 4d90 9A85      		ldd r25,Y+10
 11781 4d92 8E52      		subi r24,46
 11782 4d94 9D4F      		sbci r25,-3
 11783 4d96 FC01      		movw r30,r24
 11784 4d98 2081      		ld r18,Z
 11785 4d9a 3181      		ldd r19,Z+1
 11786 4d9c 8F81      		ldd r24,Y+7
 11787 4d9e 9885      		ldd r25,Y+8
 11788 4da0 820F      		add r24,r18
 11789 4da2 931F      		adc r25,r19
 11790 4da4 FC01      		movw r30,r24
 11791 4da6 1082      		st Z,__zero_reg__
 11792 4da8 8D81      		ldd r24,Y+5
 11793 4daa 9E81      		ldd r25,Y+6
 11794 4dac 880F      		lsl r24
 11795 4dae 991F      		rol r25
 11796 4db0 2989      		ldd r18,Y+17
 11797 4db2 3A89      		ldd r19,Y+18
 11798 4db4 820F      		add r24,r18
 11799 4db6 931F      		adc r25,r19
 11800 4db8 2F81      		ldd r18,Y+7
 11801 4dba 3885      		ldd r19,Y+8
 11802 4dbc FC01      		movw r30,r24
 11803 4dbe 3183      		std Z+1,r19
 11804 4dc0 2083      		st Z,r18
 11805 4dc2 8F81      		ldd r24,Y+7
 11806 4dc4 9885      		ldd r25,Y+8
 11807 4dc6 880F      		lsl r24
 11808 4dc8 991F      		rol r25
 11809 4dca 880F      		lsl r24
 11810 4dcc 991F      		rol r25
 11811 4dce 2F85      		ldd r18,Y+15
 11812 4dd0 3889      		ldd r19,Y+16
 11813 4dd2 280F      		add r18,r24
 11814 4dd4 391F      		adc r19,r25
 11815 4dd6 80E0      		ldi r24,0
 11816 4dd8 90E0      		ldi r25,0
 11817 4dda A0E8      		ldi r26,lo8(-128)
 11818 4ddc BFE3      		ldi r27,lo8(63)
 11819 4dde F901      		movw r30,r18
 11820 4de0 8083      		st Z,r24
 11821 4de2 9183      		std Z+1,r25
 11822 4de4 A283      		std Z+2,r26
 11823 4de6 B383      		std Z+3,r27
 11824 4de8 8F81      		ldd r24,Y+7
 11825 4dea 9885      		ldd r25,Y+8
 11826 4dec 880F      		lsl r24
 11827 4dee 991F      		rol r25
 11828 4df0 880F      		lsl r24
 11829 4df2 991F      		rol r25
 11830 4df4 2B89      		ldd r18,Y+19
 11831 4df6 3C89      		ldd r19,Y+20
 11832 4df8 820F      		add r24,r18
 11833 4dfa 931F      		adc r25,r19
 11834 4dfc FC01      		movw r30,r24
 11835 4dfe 1082      		st Z,__zero_reg__
 11836 4e00 1182      		std Z+1,__zero_reg__
 11837 4e02 1282      		std Z+2,__zero_reg__
 11838 4e04 1382      		std Z+3,__zero_reg__
1317:lp_solve_5.5/lp_price.c ****     j =  8; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] = FALSE; nzprow[j] = i; prow[i] =  3;
 11839               		.loc 1 1317 0
 11840 4e06 87E0      		ldi r24,lo8(7)
 11841 4e08 90E0      		ldi r25,0
 11842 4e0a 9E83      		std Y+6,r25
 11843 4e0c 8D83      		std Y+5,r24
 11844 4e0e 8985      		ldd r24,Y+9
 11845 4e10 9A85      		ldd r25,Y+10
 11846 4e12 8651      		subi r24,22
 11847 4e14 9E4F      		sbci r25,-2
 11848 4e16 FC01      		movw r30,r24
 11849 4e18 2081      		ld r18,Z
 11850 4e1a 3181      		ldd r19,Z+1
 11851 4e1c 8D81      		ldd r24,Y+5
 11852 4e1e 9E81      		ldd r25,Y+6
 11853 4e20 820F      		add r24,r18
 11854 4e22 931F      		adc r25,r19
 11855 4e24 9887      		std Y+8,r25
 11856 4e26 8F83      		std Y+7,r24
 11857 4e28 8985      		ldd r24,Y+9
 11858 4e2a 9A85      		ldd r25,Y+10
 11859 4e2c 8055      		subi r24,80
 11860 4e2e 9D4F      		sbci r25,-3
 11861 4e30 FC01      		movw r30,r24
 11862 4e32 2081      		ld r18,Z
 11863 4e34 3181      		ldd r19,Z+1
 11864 4e36 8F81      		ldd r24,Y+7
 11865 4e38 9885      		ldd r25,Y+8
 11866 4e3a 880F      		lsl r24
 11867 4e3c 991F      		rol r25
 11868 4e3e 880F      		lsl r24
 11869 4e40 991F      		rol r25
 11870 4e42 280F      		add r18,r24
 11871 4e44 391F      		adc r19,r25
 11872 4e46 80E0      		ldi r24,0
 11873 4e48 90E0      		ldi r25,0
 11874 4e4a A0E8      		ldi r26,lo8(-128)
 11875 4e4c BFE3      		ldi r27,lo8(63)
 11876 4e4e F901      		movw r30,r18
 11877 4e50 8083      		st Z,r24
 11878 4e52 9183      		std Z+1,r25
 11879 4e54 A283      		std Z+2,r26
 11880 4e56 B383      		std Z+3,r27
 11881 4e58 8985      		ldd r24,Y+9
 11882 4e5a 9A85      		ldd r25,Y+10
 11883 4e5c 8E52      		subi r24,46
 11884 4e5e 9D4F      		sbci r25,-3
 11885 4e60 FC01      		movw r30,r24
 11886 4e62 2081      		ld r18,Z
 11887 4e64 3181      		ldd r19,Z+1
 11888 4e66 8F81      		ldd r24,Y+7
 11889 4e68 9885      		ldd r25,Y+8
 11890 4e6a 820F      		add r24,r18
 11891 4e6c 931F      		adc r25,r19
 11892 4e6e 21E0      		ldi r18,lo8(1)
 11893 4e70 FC01      		movw r30,r24
 11894 4e72 2083      		st Z,r18
 11895 4e74 8D81      		ldd r24,Y+5
 11896 4e76 9E81      		ldd r25,Y+6
 11897 4e78 880F      		lsl r24
 11898 4e7a 991F      		rol r25
 11899 4e7c 2989      		ldd r18,Y+17
 11900 4e7e 3A89      		ldd r19,Y+18
 11901 4e80 820F      		add r24,r18
 11902 4e82 931F      		adc r25,r19
 11903 4e84 2F81      		ldd r18,Y+7
 11904 4e86 3885      		ldd r19,Y+8
 11905 4e88 FC01      		movw r30,r24
 11906 4e8a 3183      		std Z+1,r19
 11907 4e8c 2083      		st Z,r18
 11908 4e8e 8F81      		ldd r24,Y+7
 11909 4e90 9885      		ldd r25,Y+8
 11910 4e92 880F      		lsl r24
 11911 4e94 991F      		rol r25
 11912 4e96 880F      		lsl r24
 11913 4e98 991F      		rol r25
 11914 4e9a 2F85      		ldd r18,Y+15
 11915 4e9c 3889      		ldd r19,Y+16
 11916 4e9e 280F      		add r18,r24
 11917 4ea0 391F      		adc r19,r25
 11918 4ea2 80E0      		ldi r24,0
 11919 4ea4 90E0      		ldi r25,0
 11920 4ea6 A0E0      		ldi r26,0
 11921 4ea8 B0EC      		ldi r27,lo8(-64)
 11922 4eaa F901      		movw r30,r18
 11923 4eac 8083      		st Z,r24
 11924 4eae 9183      		std Z+1,r25
 11925 4eb0 A283      		std Z+2,r26
 11926 4eb2 B383      		std Z+3,r27
 11927 4eb4 8F81      		ldd r24,Y+7
 11928 4eb6 9885      		ldd r25,Y+8
 11929 4eb8 880F      		lsl r24
 11930 4eba 991F      		rol r25
 11931 4ebc 880F      		lsl r24
 11932 4ebe 991F      		rol r25
 11933 4ec0 2B89      		ldd r18,Y+19
 11934 4ec2 3C89      		ldd r19,Y+20
 11935 4ec4 280F      		add r18,r24
 11936 4ec6 391F      		adc r19,r25
 11937 4ec8 80E0      		ldi r24,0
 11938 4eca 90E0      		ldi r25,0
 11939 4ecc A0E0      		ldi r26,0
 11940 4ece B0E4      		ldi r27,lo8(64)
 11941 4ed0 F901      		movw r30,r18
 11942 4ed2 8083      		st Z,r24
 11943 4ed4 9183      		std Z+1,r25
 11944 4ed6 A283      		std Z+2,r26
 11945 4ed8 B383      		std Z+3,r27
1318:lp_solve_5.5/lp_price.c ****     j =  9; i = lp->rows+j; lp->upbo[i] = 5;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] = -1;
 11946               		.loc 1 1318 0
 11947 4eda 88E0      		ldi r24,lo8(8)
 11948 4edc 90E0      		ldi r25,0
 11949 4ede 9E83      		std Y+6,r25
 11950 4ee0 8D83      		std Y+5,r24
 11951 4ee2 8985      		ldd r24,Y+9
 11952 4ee4 9A85      		ldd r25,Y+10
 11953 4ee6 8651      		subi r24,22
 11954 4ee8 9E4F      		sbci r25,-2
 11955 4eea FC01      		movw r30,r24
 11956 4eec 2081      		ld r18,Z
 11957 4eee 3181      		ldd r19,Z+1
 11958 4ef0 8D81      		ldd r24,Y+5
 11959 4ef2 9E81      		ldd r25,Y+6
 11960 4ef4 820F      		add r24,r18
 11961 4ef6 931F      		adc r25,r19
 11962 4ef8 9887      		std Y+8,r25
 11963 4efa 8F83      		std Y+7,r24
 11964 4efc 8985      		ldd r24,Y+9
 11965 4efe 9A85      		ldd r25,Y+10
 11966 4f00 8055      		subi r24,80
 11967 4f02 9D4F      		sbci r25,-3
 11968 4f04 FC01      		movw r30,r24
 11969 4f06 2081      		ld r18,Z
 11970 4f08 3181      		ldd r19,Z+1
 11971 4f0a 8F81      		ldd r24,Y+7
 11972 4f0c 9885      		ldd r25,Y+8
 11973 4f0e 880F      		lsl r24
 11974 4f10 991F      		rol r25
 11975 4f12 880F      		lsl r24
 11976 4f14 991F      		rol r25
 11977 4f16 280F      		add r18,r24
 11978 4f18 391F      		adc r19,r25
 11979 4f1a 80E0      		ldi r24,0
 11980 4f1c 90E0      		ldi r25,0
 11981 4f1e A0E8      		ldi r26,lo8(-128)
 11982 4f20 BFE3      		ldi r27,lo8(63)
 11983 4f22 F901      		movw r30,r18
 11984 4f24 8083      		st Z,r24
 11985 4f26 9183      		std Z+1,r25
 11986 4f28 A283      		std Z+2,r26
 11987 4f2a B383      		std Z+3,r27
 11988 4f2c 8985      		ldd r24,Y+9
 11989 4f2e 9A85      		ldd r25,Y+10
 11990 4f30 8E52      		subi r24,46
 11991 4f32 9D4F      		sbci r25,-3
 11992 4f34 FC01      		movw r30,r24
 11993 4f36 2081      		ld r18,Z
 11994 4f38 3181      		ldd r19,Z+1
 11995 4f3a 8F81      		ldd r24,Y+7
 11996 4f3c 9885      		ldd r25,Y+8
 11997 4f3e 820F      		add r24,r18
 11998 4f40 931F      		adc r25,r19
 11999 4f42 FC01      		movw r30,r24
 12000 4f44 1082      		st Z,__zero_reg__
 12001 4f46 8D81      		ldd r24,Y+5
 12002 4f48 9E81      		ldd r25,Y+6
 12003 4f4a 880F      		lsl r24
 12004 4f4c 991F      		rol r25
 12005 4f4e 2989      		ldd r18,Y+17
 12006 4f50 3A89      		ldd r19,Y+18
 12007 4f52 820F      		add r24,r18
 12008 4f54 931F      		adc r25,r19
 12009 4f56 2F81      		ldd r18,Y+7
 12010 4f58 3885      		ldd r19,Y+8
 12011 4f5a FC01      		movw r30,r24
 12012 4f5c 3183      		std Z+1,r19
 12013 4f5e 2083      		st Z,r18
 12014 4f60 8F81      		ldd r24,Y+7
 12015 4f62 9885      		ldd r25,Y+8
 12016 4f64 880F      		lsl r24
 12017 4f66 991F      		rol r25
 12018 4f68 880F      		lsl r24
 12019 4f6a 991F      		rol r25
 12020 4f6c 2F85      		ldd r18,Y+15
 12021 4f6e 3889      		ldd r19,Y+16
 12022 4f70 280F      		add r18,r24
 12023 4f72 391F      		adc r19,r25
 12024 4f74 80E0      		ldi r24,0
 12025 4f76 90E0      		ldi r25,0
 12026 4f78 A0E4      		ldi r26,lo8(64)
 12027 4f7a B0E4      		ldi r27,lo8(64)
 12028 4f7c F901      		movw r30,r18
 12029 4f7e 8083      		st Z,r24
 12030 4f80 9183      		std Z+1,r25
 12031 4f82 A283      		std Z+2,r26
 12032 4f84 B383      		std Z+3,r27
 12033 4f86 8F81      		ldd r24,Y+7
 12034 4f88 9885      		ldd r25,Y+8
 12035 4f8a 880F      		lsl r24
 12036 4f8c 991F      		rol r25
 12037 4f8e 880F      		lsl r24
 12038 4f90 991F      		rol r25
 12039 4f92 2B89      		ldd r18,Y+19
 12040 4f94 3C89      		ldd r19,Y+20
 12041 4f96 280F      		add r18,r24
 12042 4f98 391F      		adc r19,r25
 12043 4f9a 80E0      		ldi r24,0
 12044 4f9c 90E0      		ldi r25,0
 12045 4f9e A0EC      		ldi r26,lo8(-64)
 12046 4fa0 B0EC      		ldi r27,lo8(-64)
 12047 4fa2 F901      		movw r30,r18
 12048 4fa4 8083      		st Z,r24
 12049 4fa6 9183      		std Z+1,r25
 12050 4fa8 A283      		std Z+2,r26
 12051 4faa B383      		std Z+3,r27
1319:lp_solve_5.5/lp_price.c ****     j = 10; i = lp->rows+j; lp->upbo[i] = F;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] = -2;
 12052               		.loc 1 1319 0
 12053 4fac 89E0      		ldi r24,lo8(9)
 12054 4fae 90E0      		ldi r25,0
 12055 4fb0 9E83      		std Y+6,r25
 12056 4fb2 8D83      		std Y+5,r24
 12057 4fb4 8985      		ldd r24,Y+9
 12058 4fb6 9A85      		ldd r25,Y+10
 12059 4fb8 8651      		subi r24,22
 12060 4fba 9E4F      		sbci r25,-2
 12061 4fbc FC01      		movw r30,r24
 12062 4fbe 2081      		ld r18,Z
 12063 4fc0 3181      		ldd r19,Z+1
 12064 4fc2 8D81      		ldd r24,Y+5
 12065 4fc4 9E81      		ldd r25,Y+6
 12066 4fc6 820F      		add r24,r18
 12067 4fc8 931F      		adc r25,r19
 12068 4fca 9887      		std Y+8,r25
 12069 4fcc 8F83      		std Y+7,r24
 12070 4fce 8985      		ldd r24,Y+9
 12071 4fd0 9A85      		ldd r25,Y+10
 12072 4fd2 8055      		subi r24,80
 12073 4fd4 9D4F      		sbci r25,-3
 12074 4fd6 FC01      		movw r30,r24
 12075 4fd8 2081      		ld r18,Z
 12076 4fda 3181      		ldd r19,Z+1
 12077 4fdc 8F81      		ldd r24,Y+7
 12078 4fde 9885      		ldd r25,Y+8
 12079 4fe0 880F      		lsl r24
 12080 4fe2 991F      		rol r25
 12081 4fe4 880F      		lsl r24
 12082 4fe6 991F      		rol r25
 12083 4fe8 280F      		add r18,r24
 12084 4fea 391F      		adc r19,r25
 12085 4fec 80E0      		ldi r24,0
 12086 4fee 90E0      		ldi r25,0
 12087 4ff0 A0EA      		ldi r26,lo8(-96)
 12088 4ff2 B0E4      		ldi r27,lo8(64)
 12089 4ff4 F901      		movw r30,r18
 12090 4ff6 8083      		st Z,r24
 12091 4ff8 9183      		std Z+1,r25
 12092 4ffa A283      		std Z+2,r26
 12093 4ffc B383      		std Z+3,r27
 12094 4ffe 8985      		ldd r24,Y+9
 12095 5000 9A85      		ldd r25,Y+10
 12096 5002 8E52      		subi r24,46
 12097 5004 9D4F      		sbci r25,-3
 12098 5006 FC01      		movw r30,r24
 12099 5008 2081      		ld r18,Z
 12100 500a 3181      		ldd r19,Z+1
 12101 500c 8F81      		ldd r24,Y+7
 12102 500e 9885      		ldd r25,Y+8
 12103 5010 820F      		add r24,r18
 12104 5012 931F      		adc r25,r19
 12105 5014 21E0      		ldi r18,lo8(1)
 12106 5016 FC01      		movw r30,r24
 12107 5018 2083      		st Z,r18
 12108 501a 8D81      		ldd r24,Y+5
 12109 501c 9E81      		ldd r25,Y+6
 12110 501e 880F      		lsl r24
 12111 5020 991F      		rol r25
 12112 5022 2989      		ldd r18,Y+17
 12113 5024 3A89      		ldd r19,Y+18
 12114 5026 820F      		add r24,r18
 12115 5028 931F      		adc r25,r19
 12116 502a 2F81      		ldd r18,Y+7
 12117 502c 3885      		ldd r19,Y+8
 12118 502e FC01      		movw r30,r24
 12119 5030 3183      		std Z+1,r19
 12120 5032 2083      		st Z,r18
 12121 5034 8F81      		ldd r24,Y+7
 12122 5036 9885      		ldd r25,Y+8
 12123 5038 880F      		lsl r24
 12124 503a 991F      		rol r25
 12125 503c 880F      		lsl r24
 12126 503e 991F      		rol r25
 12127 5040 2F85      		ldd r18,Y+15
 12128 5042 3889      		ldd r19,Y+16
 12129 5044 280F      		add r18,r24
 12130 5046 391F      		adc r19,r25
 12131 5048 80E0      		ldi r24,0
 12132 504a 90E0      		ldi r25,0
 12133 504c A0E8      		ldi r26,lo8(-128)
 12134 504e BFEB      		ldi r27,lo8(-65)
 12135 5050 F901      		movw r30,r18
 12136 5052 8083      		st Z,r24
 12137 5054 9183      		std Z+1,r25
 12138 5056 A283      		std Z+2,r26
 12139 5058 B383      		std Z+3,r27
 12140 505a 8F81      		ldd r24,Y+7
 12141 505c 9885      		ldd r25,Y+8
 12142 505e 880F      		lsl r24
 12143 5060 991F      		rol r25
 12144 5062 880F      		lsl r24
 12145 5064 991F      		rol r25
 12146 5066 2B89      		ldd r18,Y+19
 12147 5068 3C89      		ldd r19,Y+20
 12148 506a 280F      		add r18,r24
 12149 506c 391F      		adc r19,r25
 12150 506e 80E0      		ldi r24,0
 12151 5070 90E0      		ldi r25,0
 12152 5072 A0E8      		ldi r26,lo8(-128)
 12153 5074 B0E4      		ldi r27,lo8(64)
 12154 5076 F901      		movw r30,r18
 12155 5078 8083      		st Z,r24
 12156 507a 9183      		std Z+1,r25
 12157 507c A283      		std Z+2,r26
 12158 507e B383      		std Z+3,r27
1320:lp_solve_5.5/lp_price.c ****     nzprow[0] = i-lp->rows;
 12159               		.loc 1 1320 0
 12160 5080 8AE0      		ldi r24,lo8(10)
 12161 5082 90E0      		ldi r25,0
 12162 5084 9E83      		std Y+6,r25
 12163 5086 8D83      		std Y+5,r24
 12164 5088 8985      		ldd r24,Y+9
 12165 508a 9A85      		ldd r25,Y+10
 12166 508c 8651      		subi r24,22
 12167 508e 9E4F      		sbci r25,-2
 12168 5090 FC01      		movw r30,r24
 12169 5092 2081      		ld r18,Z
 12170 5094 3181      		ldd r19,Z+1
 12171 5096 8D81      		ldd r24,Y+5
 12172 5098 9E81      		ldd r25,Y+6
 12173 509a 820F      		add r24,r18
 12174 509c 931F      		adc r25,r19
 12175 509e 9887      		std Y+8,r25
 12176 50a0 8F83      		std Y+7,r24
 12177 50a2 8985      		ldd r24,Y+9
 12178 50a4 9A85      		ldd r25,Y+10
 12179 50a6 8055      		subi r24,80
 12180 50a8 9D4F      		sbci r25,-3
 12181 50aa FC01      		movw r30,r24
 12182 50ac 2081      		ld r18,Z
 12183 50ae 3181      		ldd r19,Z+1
 12184 50b0 8F81      		ldd r24,Y+7
 12185 50b2 9885      		ldd r25,Y+8
 12186 50b4 880F      		lsl r24
 12187 50b6 991F      		rol r25
 12188 50b8 880F      		lsl r24
 12189 50ba 991F      		rol r25
 12190 50bc 280F      		add r18,r24
 12191 50be 391F      		adc r19,r25
 12192 50c0 8981      		ldd r24,Y+1
 12193 50c2 9A81      		ldd r25,Y+2
 12194 50c4 AB81      		ldd r26,Y+3
 12195 50c6 BC81      		ldd r27,Y+4
 12196 50c8 F901      		movw r30,r18
 12197 50ca 8083      		st Z,r24
 12198 50cc 9183      		std Z+1,r25
 12199 50ce A283      		std Z+2,r26
 12200 50d0 B383      		std Z+3,r27
 12201 50d2 8985      		ldd r24,Y+9
 12202 50d4 9A85      		ldd r25,Y+10
 12203 50d6 8E52      		subi r24,46
 12204 50d8 9D4F      		sbci r25,-3
 12205 50da FC01      		movw r30,r24
 12206 50dc 2081      		ld r18,Z
 12207 50de 3181      		ldd r19,Z+1
 12208 50e0 8F81      		ldd r24,Y+7
 12209 50e2 9885      		ldd r25,Y+8
 12210 50e4 820F      		add r24,r18
 12211 50e6 931F      		adc r25,r19
 12212 50e8 21E0      		ldi r18,lo8(1)
 12213 50ea FC01      		movw r30,r24
 12214 50ec 2083      		st Z,r18
 12215 50ee 8D81      		ldd r24,Y+5
 12216 50f0 9E81      		ldd r25,Y+6
 12217 50f2 880F      		lsl r24
 12218 50f4 991F      		rol r25
 12219 50f6 2989      		ldd r18,Y+17
 12220 50f8 3A89      		ldd r19,Y+18
 12221 50fa 820F      		add r24,r18
 12222 50fc 931F      		adc r25,r19
 12223 50fe 2F81      		ldd r18,Y+7
 12224 5100 3885      		ldd r19,Y+8
 12225 5102 FC01      		movw r30,r24
 12226 5104 3183      		std Z+1,r19
 12227 5106 2083      		st Z,r18
 12228 5108 8F81      		ldd r24,Y+7
 12229 510a 9885      		ldd r25,Y+8
 12230 510c 880F      		lsl r24
 12231 510e 991F      		rol r25
 12232 5110 880F      		lsl r24
 12233 5112 991F      		rol r25
 12234 5114 2F85      		ldd r18,Y+15
 12235 5116 3889      		ldd r19,Y+16
 12236 5118 280F      		add r18,r24
 12237 511a 391F      		adc r19,r25
 12238 511c 80E0      		ldi r24,0
 12239 511e 90E0      		ldi r25,0
 12240 5120 A0E0      		ldi r26,0
 12241 5122 B0EC      		ldi r27,lo8(-64)
 12242 5124 F901      		movw r30,r18
 12243 5126 8083      		st Z,r24
 12244 5128 9183      		std Z+1,r25
 12245 512a A283      		std Z+2,r26
 12246 512c B383      		std Z+3,r27
 12247 512e 8F81      		ldd r24,Y+7
 12248 5130 9885      		ldd r25,Y+8
 12249 5132 880F      		lsl r24
 12250 5134 991F      		rol r25
 12251 5136 880F      		lsl r24
 12252 5138 991F      		rol r25
 12253 513a 2B89      		ldd r18,Y+19
 12254 513c 3C89      		ldd r19,Y+20
 12255 513e 280F      		add r18,r24
 12256 5140 391F      		adc r19,r25
 12257 5142 80E0      		ldi r24,0
 12258 5144 90E0      		ldi r25,0
 12259 5146 A0E2      		ldi r26,lo8(32)
 12260 5148 B1E4      		ldi r27,lo8(65)
 12261 514a F901      		movw r30,r18
 12262 514c 8083      		st Z,r24
 12263 514e 9183      		std Z+1,r25
 12264 5150 A283      		std Z+2,r26
 12265 5152 B383      		std Z+3,r27
1321:lp_solve_5.5/lp_price.c ****     lp->rhs[rownr] = -11;
 12266               		.loc 1 1321 0
 12267 5154 8985      		ldd r24,Y+9
 12268 5156 9A85      		ldd r25,Y+10
 12269 5158 8651      		subi r24,22
 12270 515a 9E4F      		sbci r25,-2
 12271 515c FC01      		movw r30,r24
 12272 515e 8081      		ld r24,Z
 12273 5160 9181      		ldd r25,Z+1
 12274 5162 2F81      		ldd r18,Y+7
 12275 5164 3885      		ldd r19,Y+8
 12276 5166 281B      		sub r18,r24
 12277 5168 390B      		sbc r19,r25
 12278 516a 8989      		ldd r24,Y+17
 12279 516c 9A89      		ldd r25,Y+18
 12280 516e FC01      		movw r30,r24
 12281 5170 3183      		std Z+1,r19
 12282 5172 2083      		st Z,r18
1322:lp_solve_5.5/lp_price.c ****     lp->upbo[lp->var_basic[rownr]] = F;
 12283               		.loc 1 1322 0
 12284 5174 8985      		ldd r24,Y+9
 12285 5176 9A85      		ldd r25,Y+10
 12286 5178 8855      		subi r24,88
 12287 517a 9D4F      		sbci r25,-3
 12288 517c FC01      		movw r30,r24
 12289 517e 2081      		ld r18,Z
 12290 5180 3181      		ldd r19,Z+1
 12291 5182 8D85      		ldd r24,Y+13
 12292 5184 9E85      		ldd r25,Y+14
 12293 5186 880F      		lsl r24
 12294 5188 991F      		rol r25
 12295 518a 880F      		lsl r24
 12296 518c 991F      		rol r25
 12297 518e 280F      		add r18,r24
 12298 5190 391F      		adc r19,r25
 12299 5192 80E0      		ldi r24,0
 12300 5194 90E0      		ldi r25,0
 12301 5196 A0E3      		ldi r26,lo8(48)
 12302 5198 B1EC      		ldi r27,lo8(-63)
 12303 519a F901      		movw r30,r18
 12304 519c 8083      		st Z,r24
 12305 519e 9183      		std Z+1,r25
 12306 51a0 A283      		std Z+2,r26
 12307 51a2 B383      		std Z+3,r27
1323:lp_solve_5.5/lp_price.c ****     lp->rhs[0] = 1;
 12308               		.loc 1 1323 0
 12309 51a4 8985      		ldd r24,Y+9
 12310 51a6 9A85      		ldd r25,Y+10
 12311 51a8 8055      		subi r24,80
 12312 51aa 9D4F      		sbci r25,-3
 12313 51ac FC01      		movw r30,r24
 12314 51ae 2081      		ld r18,Z
 12315 51b0 3181      		ldd r19,Z+1
 12316 51b2 8985      		ldd r24,Y+9
 12317 51b4 9A85      		ldd r25,Y+10
 12318 51b6 8453      		subi r24,52
 12319 51b8 9D4F      		sbci r25,-3
 12320 51ba FC01      		movw r30,r24
 12321 51bc 4081      		ld r20,Z
 12322 51be 5181      		ldd r21,Z+1
 12323 51c0 8D85      		ldd r24,Y+13
 12324 51c2 9E85      		ldd r25,Y+14
 12325 51c4 880F      		lsl r24
 12326 51c6 991F      		rol r25
 12327 51c8 840F      		add r24,r20
 12328 51ca 951F      		adc r25,r21
 12329 51cc FC01      		movw r30,r24
 12330 51ce 8081      		ld r24,Z
 12331 51d0 9181      		ldd r25,Z+1
 12332 51d2 880F      		lsl r24
 12333 51d4 991F      		rol r25
 12334 51d6 880F      		lsl r24
 12335 51d8 991F      		rol r25
 12336 51da 280F      		add r18,r24
 12337 51dc 391F      		adc r19,r25
 12338 51de 8981      		ldd r24,Y+1
 12339 51e0 9A81      		ldd r25,Y+2
 12340 51e2 AB81      		ldd r26,Y+3
 12341 51e4 BC81      		ldd r27,Y+4
 12342 51e6 F901      		movw r30,r18
 12343 51e8 8083      		st Z,r24
 12344 51ea 9183      		std Z+1,r25
 12345 51ec A283      		std Z+2,r26
 12346 51ee B383      		std Z+3,r27
1324:lp_solve_5.5/lp_price.c ****   }
 12347               		.loc 1 1324 0
 12348 51f0 8985      		ldd r24,Y+9
 12349 51f2 9A85      		ldd r25,Y+10
 12350 51f4 8855      		subi r24,88
 12351 51f6 9D4F      		sbci r25,-3
 12352 51f8 FC01      		movw r30,r24
 12353 51fa 2081      		ld r18,Z
 12354 51fc 3181      		ldd r19,Z+1
 12355 51fe 80E0      		ldi r24,0
 12356 5200 90E0      		ldi r25,0
 12357 5202 A0E8      		ldi r26,lo8(-128)
 12358 5204 BFE3      		ldi r27,lo8(63)
 12359 5206 F901      		movw r30,r18
 12360 5208 8083      		st Z,r24
 12361 520a 9183      		std Z+1,r25
 12362 520c A283      		std Z+2,r26
 12363 520e B383      		std Z+3,r27
 12364               		.loc 1 1339 0
 12365 5210 00C0      		rjmp .L382
 12366               	.L381:
1327:lp_solve_5.5/lp_price.c ****     j =  1; i = lp->rows+j; lp->upbo[i] = 5;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] = -2;
 12367               		.loc 1 1327 0
 12368 5212 8B85      		ldd r24,Y+11
 12369 5214 9C85      		ldd r25,Y+12
 12370 5216 0A97      		sbiw r24,10
 12371 5218 01F0      		breq .+2
 12372 521a 00C0      		rjmp .L382
1328:lp_solve_5.5/lp_price.c ****     j =  2; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] =  3;
 12373               		.loc 1 1328 0
 12374 521c 81E0      		ldi r24,lo8(1)
 12375 521e 90E0      		ldi r25,0
 12376 5220 9E83      		std Y+6,r25
 12377 5222 8D83      		std Y+5,r24
 12378 5224 8985      		ldd r24,Y+9
 12379 5226 9A85      		ldd r25,Y+10
 12380 5228 8651      		subi r24,22
 12381 522a 9E4F      		sbci r25,-2
 12382 522c FC01      		movw r30,r24
 12383 522e 2081      		ld r18,Z
 12384 5230 3181      		ldd r19,Z+1
 12385 5232 8D81      		ldd r24,Y+5
 12386 5234 9E81      		ldd r25,Y+6
 12387 5236 820F      		add r24,r18
 12388 5238 931F      		adc r25,r19
 12389 523a 9887      		std Y+8,r25
 12390 523c 8F83      		std Y+7,r24
 12391 523e 8985      		ldd r24,Y+9
 12392 5240 9A85      		ldd r25,Y+10
 12393 5242 8055      		subi r24,80
 12394 5244 9D4F      		sbci r25,-3
 12395 5246 FC01      		movw r30,r24
 12396 5248 2081      		ld r18,Z
 12397 524a 3181      		ldd r19,Z+1
 12398 524c 8F81      		ldd r24,Y+7
 12399 524e 9885      		ldd r25,Y+8
 12400 5250 880F      		lsl r24
 12401 5252 991F      		rol r25
 12402 5254 880F      		lsl r24
 12403 5256 991F      		rol r25
 12404 5258 280F      		add r18,r24
 12405 525a 391F      		adc r19,r25
 12406 525c 80E0      		ldi r24,0
 12407 525e 90E0      		ldi r25,0
 12408 5260 A0EA      		ldi r26,lo8(-96)
 12409 5262 B0E4      		ldi r27,lo8(64)
 12410 5264 F901      		movw r30,r18
 12411 5266 8083      		st Z,r24
 12412 5268 9183      		std Z+1,r25
 12413 526a A283      		std Z+2,r26
 12414 526c B383      		std Z+3,r27
 12415 526e 8985      		ldd r24,Y+9
 12416 5270 9A85      		ldd r25,Y+10
 12417 5272 8E52      		subi r24,46
 12418 5274 9D4F      		sbci r25,-3
 12419 5276 FC01      		movw r30,r24
 12420 5278 2081      		ld r18,Z
 12421 527a 3181      		ldd r19,Z+1
 12422 527c 8F81      		ldd r24,Y+7
 12423 527e 9885      		ldd r25,Y+8
 12424 5280 820F      		add r24,r18
 12425 5282 931F      		adc r25,r19
 12426 5284 21E0      		ldi r18,lo8(1)
 12427 5286 FC01      		movw r30,r24
 12428 5288 2083      		st Z,r18
 12429 528a 8D81      		ldd r24,Y+5
 12430 528c 9E81      		ldd r25,Y+6
 12431 528e 880F      		lsl r24
 12432 5290 991F      		rol r25
 12433 5292 2989      		ldd r18,Y+17
 12434 5294 3A89      		ldd r19,Y+18
 12435 5296 820F      		add r24,r18
 12436 5298 931F      		adc r25,r19
 12437 529a 2F81      		ldd r18,Y+7
 12438 529c 3885      		ldd r19,Y+8
 12439 529e FC01      		movw r30,r24
 12440 52a0 3183      		std Z+1,r19
 12441 52a2 2083      		st Z,r18
 12442 52a4 8F81      		ldd r24,Y+7
 12443 52a6 9885      		ldd r25,Y+8
 12444 52a8 880F      		lsl r24
 12445 52aa 991F      		rol r25
 12446 52ac 880F      		lsl r24
 12447 52ae 991F      		rol r25
 12448 52b0 2F85      		ldd r18,Y+15
 12449 52b2 3889      		ldd r19,Y+16
 12450 52b4 280F      		add r18,r24
 12451 52b6 391F      		adc r19,r25
 12452 52b8 80E0      		ldi r24,0
 12453 52ba 90E0      		ldi r25,0
 12454 52bc A0E0      		ldi r26,0
 12455 52be B0EC      		ldi r27,lo8(-64)
 12456 52c0 F901      		movw r30,r18
 12457 52c2 8083      		st Z,r24
 12458 52c4 9183      		std Z+1,r25
 12459 52c6 A283      		std Z+2,r26
 12460 52c8 B383      		std Z+3,r27
 12461 52ca 8F81      		ldd r24,Y+7
 12462 52cc 9885      		ldd r25,Y+8
 12463 52ce 880F      		lsl r24
 12464 52d0 991F      		rol r25
 12465 52d2 880F      		lsl r24
 12466 52d4 991F      		rol r25
 12467 52d6 2B89      		ldd r18,Y+19
 12468 52d8 3C89      		ldd r19,Y+20
 12469 52da 280F      		add r18,r24
 12470 52dc 391F      		adc r19,r25
 12471 52de 80E0      		ldi r24,0
 12472 52e0 90E0      		ldi r25,0
 12473 52e2 A0E0      		ldi r26,0
 12474 52e4 B0E4      		ldi r27,lo8(64)
 12475 52e6 F901      		movw r30,r18
 12476 52e8 8083      		st Z,r24
 12477 52ea 9183      		std Z+1,r25
 12478 52ec A283      		std Z+2,r26
 12479 52ee B383      		std Z+3,r27
1329:lp_solve_5.5/lp_price.c ****     j =  3; i = lp->rows+j; lp->upbo[i] = 1;  lp->is_lower[i] = FALSE; nzprow[j] = i; prow[i] = -2;
 12480               		.loc 1 1329 0
 12481 52f0 82E0      		ldi r24,lo8(2)
 12482 52f2 90E0      		ldi r25,0
 12483 52f4 9E83      		std Y+6,r25
 12484 52f6 8D83      		std Y+5,r24
 12485 52f8 8985      		ldd r24,Y+9
 12486 52fa 9A85      		ldd r25,Y+10
 12487 52fc 8651      		subi r24,22
 12488 52fe 9E4F      		sbci r25,-2
 12489 5300 FC01      		movw r30,r24
 12490 5302 2081      		ld r18,Z
 12491 5304 3181      		ldd r19,Z+1
 12492 5306 8D81      		ldd r24,Y+5
 12493 5308 9E81      		ldd r25,Y+6
 12494 530a 820F      		add r24,r18
 12495 530c 931F      		adc r25,r19
 12496 530e 9887      		std Y+8,r25
 12497 5310 8F83      		std Y+7,r24
 12498 5312 8985      		ldd r24,Y+9
 12499 5314 9A85      		ldd r25,Y+10
 12500 5316 8055      		subi r24,80
 12501 5318 9D4F      		sbci r25,-3
 12502 531a FC01      		movw r30,r24
 12503 531c 2081      		ld r18,Z
 12504 531e 3181      		ldd r19,Z+1
 12505 5320 8F81      		ldd r24,Y+7
 12506 5322 9885      		ldd r25,Y+8
 12507 5324 880F      		lsl r24
 12508 5326 991F      		rol r25
 12509 5328 880F      		lsl r24
 12510 532a 991F      		rol r25
 12511 532c 280F      		add r18,r24
 12512 532e 391F      		adc r19,r25
 12513 5330 80E0      		ldi r24,0
 12514 5332 90E0      		ldi r25,0
 12515 5334 A0E8      		ldi r26,lo8(-128)
 12516 5336 BFE3      		ldi r27,lo8(63)
 12517 5338 F901      		movw r30,r18
 12518 533a 8083      		st Z,r24
 12519 533c 9183      		std Z+1,r25
 12520 533e A283      		std Z+2,r26
 12521 5340 B383      		std Z+3,r27
 12522 5342 8985      		ldd r24,Y+9
 12523 5344 9A85      		ldd r25,Y+10
 12524 5346 8E52      		subi r24,46
 12525 5348 9D4F      		sbci r25,-3
 12526 534a FC01      		movw r30,r24
 12527 534c 2081      		ld r18,Z
 12528 534e 3181      		ldd r19,Z+1
 12529 5350 8F81      		ldd r24,Y+7
 12530 5352 9885      		ldd r25,Y+8
 12531 5354 820F      		add r24,r18
 12532 5356 931F      		adc r25,r19
 12533 5358 21E0      		ldi r18,lo8(1)
 12534 535a FC01      		movw r30,r24
 12535 535c 2083      		st Z,r18
 12536 535e 8D81      		ldd r24,Y+5
 12537 5360 9E81      		ldd r25,Y+6
 12538 5362 880F      		lsl r24
 12539 5364 991F      		rol r25
 12540 5366 2989      		ldd r18,Y+17
 12541 5368 3A89      		ldd r19,Y+18
 12542 536a 820F      		add r24,r18
 12543 536c 931F      		adc r25,r19
 12544 536e 2F81      		ldd r18,Y+7
 12545 5370 3885      		ldd r19,Y+8
 12546 5372 FC01      		movw r30,r24
 12547 5374 3183      		std Z+1,r19
 12548 5376 2083      		st Z,r18
 12549 5378 8F81      		ldd r24,Y+7
 12550 537a 9885      		ldd r25,Y+8
 12551 537c 880F      		lsl r24
 12552 537e 991F      		rol r25
 12553 5380 880F      		lsl r24
 12554 5382 991F      		rol r25
 12555 5384 2F85      		ldd r18,Y+15
 12556 5386 3889      		ldd r19,Y+16
 12557 5388 280F      		add r18,r24
 12558 538a 391F      		adc r19,r25
 12559 538c 80E0      		ldi r24,0
 12560 538e 90E0      		ldi r25,0
 12561 5390 A0E4      		ldi r26,lo8(64)
 12562 5392 B0E4      		ldi r27,lo8(64)
 12563 5394 F901      		movw r30,r18
 12564 5396 8083      		st Z,r24
 12565 5398 9183      		std Z+1,r25
 12566 539a A283      		std Z+2,r26
 12567 539c B383      		std Z+3,r27
 12568 539e 8F81      		ldd r24,Y+7
 12569 53a0 9885      		ldd r25,Y+8
 12570 53a2 880F      		lsl r24
 12571 53a4 991F      		rol r25
 12572 53a6 880F      		lsl r24
 12573 53a8 991F      		rol r25
 12574 53aa 2B89      		ldd r18,Y+19
 12575 53ac 3C89      		ldd r19,Y+20
 12576 53ae 280F      		add r18,r24
 12577 53b0 391F      		adc r19,r25
 12578 53b2 80E0      		ldi r24,0
 12579 53b4 90E0      		ldi r25,0
 12580 53b6 A0E4      		ldi r26,lo8(64)
 12581 53b8 B0E4      		ldi r27,lo8(64)
 12582 53ba F901      		movw r30,r18
 12583 53bc 8083      		st Z,r24
 12584 53be 9183      		std Z+1,r25
 12585 53c0 A283      		std Z+2,r26
 12586 53c2 B383      		std Z+3,r27
1330:lp_solve_5.5/lp_price.c ****     j =  4; i = lp->rows+j; lp->upbo[i] = 2;  lp->is_lower[i] = FALSE; nzprow[j] = i; prow[i] = -1;
 12587               		.loc 1 1330 0
 12588 53c4 83E0      		ldi r24,lo8(3)
 12589 53c6 90E0      		ldi r25,0
 12590 53c8 9E83      		std Y+6,r25
 12591 53ca 8D83      		std Y+5,r24
 12592 53cc 8985      		ldd r24,Y+9
 12593 53ce 9A85      		ldd r25,Y+10
 12594 53d0 8651      		subi r24,22
 12595 53d2 9E4F      		sbci r25,-2
 12596 53d4 FC01      		movw r30,r24
 12597 53d6 2081      		ld r18,Z
 12598 53d8 3181      		ldd r19,Z+1
 12599 53da 8D81      		ldd r24,Y+5
 12600 53dc 9E81      		ldd r25,Y+6
 12601 53de 820F      		add r24,r18
 12602 53e0 931F      		adc r25,r19
 12603 53e2 9887      		std Y+8,r25
 12604 53e4 8F83      		std Y+7,r24
 12605 53e6 8985      		ldd r24,Y+9
 12606 53e8 9A85      		ldd r25,Y+10
 12607 53ea 8055      		subi r24,80
 12608 53ec 9D4F      		sbci r25,-3
 12609 53ee FC01      		movw r30,r24
 12610 53f0 2081      		ld r18,Z
 12611 53f2 3181      		ldd r19,Z+1
 12612 53f4 8F81      		ldd r24,Y+7
 12613 53f6 9885      		ldd r25,Y+8
 12614 53f8 880F      		lsl r24
 12615 53fa 991F      		rol r25
 12616 53fc 880F      		lsl r24
 12617 53fe 991F      		rol r25
 12618 5400 280F      		add r18,r24
 12619 5402 391F      		adc r19,r25
 12620 5404 80E0      		ldi r24,0
 12621 5406 90E0      		ldi r25,0
 12622 5408 A0E8      		ldi r26,lo8(-128)
 12623 540a BFE3      		ldi r27,lo8(63)
 12624 540c F901      		movw r30,r18
 12625 540e 8083      		st Z,r24
 12626 5410 9183      		std Z+1,r25
 12627 5412 A283      		std Z+2,r26
 12628 5414 B383      		std Z+3,r27
 12629 5416 8985      		ldd r24,Y+9
 12630 5418 9A85      		ldd r25,Y+10
 12631 541a 8E52      		subi r24,46
 12632 541c 9D4F      		sbci r25,-3
 12633 541e FC01      		movw r30,r24
 12634 5420 2081      		ld r18,Z
 12635 5422 3181      		ldd r19,Z+1
 12636 5424 8F81      		ldd r24,Y+7
 12637 5426 9885      		ldd r25,Y+8
 12638 5428 820F      		add r24,r18
 12639 542a 931F      		adc r25,r19
 12640 542c FC01      		movw r30,r24
 12641 542e 1082      		st Z,__zero_reg__
 12642 5430 8D81      		ldd r24,Y+5
 12643 5432 9E81      		ldd r25,Y+6
 12644 5434 880F      		lsl r24
 12645 5436 991F      		rol r25
 12646 5438 2989      		ldd r18,Y+17
 12647 543a 3A89      		ldd r19,Y+18
 12648 543c 820F      		add r24,r18
 12649 543e 931F      		adc r25,r19
 12650 5440 2F81      		ldd r18,Y+7
 12651 5442 3885      		ldd r19,Y+8
 12652 5444 FC01      		movw r30,r24
 12653 5446 3183      		std Z+1,r19
 12654 5448 2083      		st Z,r18
 12655 544a 8F81      		ldd r24,Y+7
 12656 544c 9885      		ldd r25,Y+8
 12657 544e 880F      		lsl r24
 12658 5450 991F      		rol r25
 12659 5452 880F      		lsl r24
 12660 5454 991F      		rol r25
 12661 5456 2F85      		ldd r18,Y+15
 12662 5458 3889      		ldd r19,Y+16
 12663 545a 280F      		add r18,r24
 12664 545c 391F      		adc r19,r25
 12665 545e 80E0      		ldi r24,0
 12666 5460 90E0      		ldi r25,0
 12667 5462 A0E0      		ldi r26,0
 12668 5464 B0EC      		ldi r27,lo8(-64)
 12669 5466 F901      		movw r30,r18
 12670 5468 8083      		st Z,r24
 12671 546a 9183      		std Z+1,r25
 12672 546c A283      		std Z+2,r26
 12673 546e B383      		std Z+3,r27
 12674 5470 8F81      		ldd r24,Y+7
 12675 5472 9885      		ldd r25,Y+8
 12676 5474 880F      		lsl r24
 12677 5476 991F      		rol r25
 12678 5478 880F      		lsl r24
 12679 547a 991F      		rol r25
 12680 547c 2B89      		ldd r18,Y+19
 12681 547e 3C89      		ldd r19,Y+20
 12682 5480 820F      		add r24,r18
 12683 5482 931F      		adc r25,r19
 12684 5484 FC01      		movw r30,r24
 12685 5486 1082      		st Z,__zero_reg__
 12686 5488 1182      		std Z+1,__zero_reg__
 12687 548a 1282      		std Z+2,__zero_reg__
 12688 548c 1382      		std Z+3,__zero_reg__
1331:lp_solve_5.5/lp_price.c ****     j =  5; i = lp->rows+j; lp->upbo[i] = 2;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] =  1;
 12689               		.loc 1 1331 0
 12690 548e 84E0      		ldi r24,lo8(4)
 12691 5490 90E0      		ldi r25,0
 12692 5492 9E83      		std Y+6,r25
 12693 5494 8D83      		std Y+5,r24
 12694 5496 8985      		ldd r24,Y+9
 12695 5498 9A85      		ldd r25,Y+10
 12696 549a 8651      		subi r24,22
 12697 549c 9E4F      		sbci r25,-2
 12698 549e FC01      		movw r30,r24
 12699 54a0 2081      		ld r18,Z
 12700 54a2 3181      		ldd r19,Z+1
 12701 54a4 8D81      		ldd r24,Y+5
 12702 54a6 9E81      		ldd r25,Y+6
 12703 54a8 820F      		add r24,r18
 12704 54aa 931F      		adc r25,r19
 12705 54ac 9887      		std Y+8,r25
 12706 54ae 8F83      		std Y+7,r24
 12707 54b0 8985      		ldd r24,Y+9
 12708 54b2 9A85      		ldd r25,Y+10
 12709 54b4 8055      		subi r24,80
 12710 54b6 9D4F      		sbci r25,-3
 12711 54b8 FC01      		movw r30,r24
 12712 54ba 2081      		ld r18,Z
 12713 54bc 3181      		ldd r19,Z+1
 12714 54be 8F81      		ldd r24,Y+7
 12715 54c0 9885      		ldd r25,Y+8
 12716 54c2 880F      		lsl r24
 12717 54c4 991F      		rol r25
 12718 54c6 880F      		lsl r24
 12719 54c8 991F      		rol r25
 12720 54ca 280F      		add r18,r24
 12721 54cc 391F      		adc r19,r25
 12722 54ce 80E0      		ldi r24,0
 12723 54d0 90E0      		ldi r25,0
 12724 54d2 A0E0      		ldi r26,0
 12725 54d4 B0E4      		ldi r27,lo8(64)
 12726 54d6 F901      		movw r30,r18
 12727 54d8 8083      		st Z,r24
 12728 54da 9183      		std Z+1,r25
 12729 54dc A283      		std Z+2,r26
 12730 54de B383      		std Z+3,r27
 12731 54e0 8985      		ldd r24,Y+9
 12732 54e2 9A85      		ldd r25,Y+10
 12733 54e4 8E52      		subi r24,46
 12734 54e6 9D4F      		sbci r25,-3
 12735 54e8 FC01      		movw r30,r24
 12736 54ea 2081      		ld r18,Z
 12737 54ec 3181      		ldd r19,Z+1
 12738 54ee 8F81      		ldd r24,Y+7
 12739 54f0 9885      		ldd r25,Y+8
 12740 54f2 820F      		add r24,r18
 12741 54f4 931F      		adc r25,r19
 12742 54f6 FC01      		movw r30,r24
 12743 54f8 1082      		st Z,__zero_reg__
 12744 54fa 8D81      		ldd r24,Y+5
 12745 54fc 9E81      		ldd r25,Y+6
 12746 54fe 880F      		lsl r24
 12747 5500 991F      		rol r25
 12748 5502 2989      		ldd r18,Y+17
 12749 5504 3A89      		ldd r19,Y+18
 12750 5506 820F      		add r24,r18
 12751 5508 931F      		adc r25,r19
 12752 550a 2F81      		ldd r18,Y+7
 12753 550c 3885      		ldd r19,Y+8
 12754 550e FC01      		movw r30,r24
 12755 5510 3183      		std Z+1,r19
 12756 5512 2083      		st Z,r18
 12757 5514 8F81      		ldd r24,Y+7
 12758 5516 9885      		ldd r25,Y+8
 12759 5518 880F      		lsl r24
 12760 551a 991F      		rol r25
 12761 551c 880F      		lsl r24
 12762 551e 991F      		rol r25
 12763 5520 2F85      		ldd r18,Y+15
 12764 5522 3889      		ldd r19,Y+16
 12765 5524 280F      		add r18,r24
 12766 5526 391F      		adc r19,r25
 12767 5528 80E0      		ldi r24,0
 12768 552a 90E0      		ldi r25,0
 12769 552c A0E8      		ldi r26,lo8(-128)
 12770 552e BFEB      		ldi r27,lo8(-65)
 12771 5530 F901      		movw r30,r18
 12772 5532 8083      		st Z,r24
 12773 5534 9183      		std Z+1,r25
 12774 5536 A283      		std Z+2,r26
 12775 5538 B383      		std Z+3,r27
 12776 553a 8F81      		ldd r24,Y+7
 12777 553c 9885      		ldd r25,Y+8
 12778 553e 880F      		lsl r24
 12779 5540 991F      		rol r25
 12780 5542 880F      		lsl r24
 12781 5544 991F      		rol r25
 12782 5546 2B89      		ldd r18,Y+19
 12783 5548 3C89      		ldd r19,Y+20
 12784 554a 280F      		add r18,r24
 12785 554c 391F      		adc r19,r25
 12786 554e 80E0      		ldi r24,0
 12787 5550 90E0      		ldi r25,0
 12788 5552 A0E0      		ldi r26,0
 12789 5554 B0EC      		ldi r27,lo8(-64)
 12790 5556 F901      		movw r30,r18
 12791 5558 8083      		st Z,r24
 12792 555a 9183      		std Z+1,r25
 12793 555c A283      		std Z+2,r26
 12794 555e B383      		std Z+3,r27
1332:lp_solve_5.5/lp_price.c ****     j =  6; i = lp->rows+j; lp->upbo[i] = F;  lp->is_lower[i] =  TRUE; nzprow[j] = i; prow[i] =  3;
 12795               		.loc 1 1332 0
 12796 5560 85E0      		ldi r24,lo8(5)
 12797 5562 90E0      		ldi r25,0
 12798 5564 9E83      		std Y+6,r25
 12799 5566 8D83      		std Y+5,r24
 12800 5568 8985      		ldd r24,Y+9
 12801 556a 9A85      		ldd r25,Y+10
 12802 556c 8651      		subi r24,22
 12803 556e 9E4F      		sbci r25,-2
 12804 5570 FC01      		movw r30,r24
 12805 5572 2081      		ld r18,Z
 12806 5574 3181      		ldd r19,Z+1
 12807 5576 8D81      		ldd r24,Y+5
 12808 5578 9E81      		ldd r25,Y+6
 12809 557a 820F      		add r24,r18
 12810 557c 931F      		adc r25,r19
 12811 557e 9887      		std Y+8,r25
 12812 5580 8F83      		std Y+7,r24
 12813 5582 8985      		ldd r24,Y+9
 12814 5584 9A85      		ldd r25,Y+10
 12815 5586 8055      		subi r24,80
 12816 5588 9D4F      		sbci r25,-3
 12817 558a FC01      		movw r30,r24
 12818 558c 2081      		ld r18,Z
 12819 558e 3181      		ldd r19,Z+1
 12820 5590 8F81      		ldd r24,Y+7
 12821 5592 9885      		ldd r25,Y+8
 12822 5594 880F      		lsl r24
 12823 5596 991F      		rol r25
 12824 5598 880F      		lsl r24
 12825 559a 991F      		rol r25
 12826 559c 280F      		add r18,r24
 12827 559e 391F      		adc r19,r25
 12828 55a0 80E0      		ldi r24,0
 12829 55a2 90E0      		ldi r25,0
 12830 55a4 A0E0      		ldi r26,0
 12831 55a6 B0E4      		ldi r27,lo8(64)
 12832 55a8 F901      		movw r30,r18
 12833 55aa 8083      		st Z,r24
 12834 55ac 9183      		std Z+1,r25
 12835 55ae A283      		std Z+2,r26
 12836 55b0 B383      		std Z+3,r27
 12837 55b2 8985      		ldd r24,Y+9
 12838 55b4 9A85      		ldd r25,Y+10
 12839 55b6 8E52      		subi r24,46
 12840 55b8 9D4F      		sbci r25,-3
 12841 55ba FC01      		movw r30,r24
 12842 55bc 2081      		ld r18,Z
 12843 55be 3181      		ldd r19,Z+1
 12844 55c0 8F81      		ldd r24,Y+7
 12845 55c2 9885      		ldd r25,Y+8
 12846 55c4 820F      		add r24,r18
 12847 55c6 931F      		adc r25,r19
 12848 55c8 21E0      		ldi r18,lo8(1)
 12849 55ca FC01      		movw r30,r24
 12850 55cc 2083      		st Z,r18
 12851 55ce 8D81      		ldd r24,Y+5
 12852 55d0 9E81      		ldd r25,Y+6
 12853 55d2 880F      		lsl r24
 12854 55d4 991F      		rol r25
 12855 55d6 2989      		ldd r18,Y+17
 12856 55d8 3A89      		ldd r19,Y+18
 12857 55da 820F      		add r24,r18
 12858 55dc 931F      		adc r25,r19
 12859 55de 2F81      		ldd r18,Y+7
 12860 55e0 3885      		ldd r19,Y+8
 12861 55e2 FC01      		movw r30,r24
 12862 55e4 3183      		std Z+1,r19
 12863 55e6 2083      		st Z,r18
 12864 55e8 8F81      		ldd r24,Y+7
 12865 55ea 9885      		ldd r25,Y+8
 12866 55ec 880F      		lsl r24
 12867 55ee 991F      		rol r25
 12868 55f0 880F      		lsl r24
 12869 55f2 991F      		rol r25
 12870 55f4 2F85      		ldd r18,Y+15
 12871 55f6 3889      		ldd r19,Y+16
 12872 55f8 280F      		add r18,r24
 12873 55fa 391F      		adc r19,r25
 12874 55fc 80E0      		ldi r24,0
 12875 55fe 90E0      		ldi r25,0
 12876 5600 A0E8      		ldi r26,lo8(-128)
 12877 5602 BFE3      		ldi r27,lo8(63)
 12878 5604 F901      		movw r30,r18
 12879 5606 8083      		st Z,r24
 12880 5608 9183      		std Z+1,r25
 12881 560a A283      		std Z+2,r26
 12882 560c B383      		std Z+3,r27
 12883 560e 8F81      		ldd r24,Y+7
 12884 5610 9885      		ldd r25,Y+8
 12885 5612 880F      		lsl r24
 12886 5614 991F      		rol r25
 12887 5616 880F      		lsl r24
 12888 5618 991F      		rol r25
 12889 561a 2B89      		ldd r18,Y+19
 12890 561c 3C89      		ldd r19,Y+20
 12891 561e 820F      		add r24,r18
 12892 5620 931F      		adc r25,r19
 12893 5622 FC01      		movw r30,r24
 12894 5624 1082      		st Z,__zero_reg__
 12895 5626 1182      		std Z+1,__zero_reg__
 12896 5628 1282      		std Z+2,__zero_reg__
 12897 562a 1382      		std Z+3,__zero_reg__
1333:lp_solve_5.5/lp_price.c ****     nzprow[0] = i-lp->rows;
 12898               		.loc 1 1333 0
 12899 562c 86E0      		ldi r24,lo8(6)
 12900 562e 90E0      		ldi r25,0
 12901 5630 9E83      		std Y+6,r25
 12902 5632 8D83      		std Y+5,r24
 12903 5634 8985      		ldd r24,Y+9
 12904 5636 9A85      		ldd r25,Y+10
 12905 5638 8651      		subi r24,22
 12906 563a 9E4F      		sbci r25,-2
 12907 563c FC01      		movw r30,r24
 12908 563e 2081      		ld r18,Z
 12909 5640 3181      		ldd r19,Z+1
 12910 5642 8D81      		ldd r24,Y+5
 12911 5644 9E81      		ldd r25,Y+6
 12912 5646 820F      		add r24,r18
 12913 5648 931F      		adc r25,r19
 12914 564a 9887      		std Y+8,r25
 12915 564c 8F83      		std Y+7,r24
 12916 564e 8985      		ldd r24,Y+9
 12917 5650 9A85      		ldd r25,Y+10
 12918 5652 8055      		subi r24,80
 12919 5654 9D4F      		sbci r25,-3
 12920 5656 FC01      		movw r30,r24
 12921 5658 2081      		ld r18,Z
 12922 565a 3181      		ldd r19,Z+1
 12923 565c 8F81      		ldd r24,Y+7
 12924 565e 9885      		ldd r25,Y+8
 12925 5660 880F      		lsl r24
 12926 5662 991F      		rol r25
 12927 5664 880F      		lsl r24
 12928 5666 991F      		rol r25
 12929 5668 280F      		add r18,r24
 12930 566a 391F      		adc r19,r25
 12931 566c 8981      		ldd r24,Y+1
 12932 566e 9A81      		ldd r25,Y+2
 12933 5670 AB81      		ldd r26,Y+3
 12934 5672 BC81      		ldd r27,Y+4
 12935 5674 F901      		movw r30,r18
 12936 5676 8083      		st Z,r24
 12937 5678 9183      		std Z+1,r25
 12938 567a A283      		std Z+2,r26
 12939 567c B383      		std Z+3,r27
 12940 567e 8985      		ldd r24,Y+9
 12941 5680 9A85      		ldd r25,Y+10
 12942 5682 8E52      		subi r24,46
 12943 5684 9D4F      		sbci r25,-3
 12944 5686 FC01      		movw r30,r24
 12945 5688 2081      		ld r18,Z
 12946 568a 3181      		ldd r19,Z+1
 12947 568c 8F81      		ldd r24,Y+7
 12948 568e 9885      		ldd r25,Y+8
 12949 5690 820F      		add r24,r18
 12950 5692 931F      		adc r25,r19
 12951 5694 21E0      		ldi r18,lo8(1)
 12952 5696 FC01      		movw r30,r24
 12953 5698 2083      		st Z,r18
 12954 569a 8D81      		ldd r24,Y+5
 12955 569c 9E81      		ldd r25,Y+6
 12956 569e 880F      		lsl r24
 12957 56a0 991F      		rol r25
 12958 56a2 2989      		ldd r18,Y+17
 12959 56a4 3A89      		ldd r19,Y+18
 12960 56a6 820F      		add r24,r18
 12961 56a8 931F      		adc r25,r19
 12962 56aa 2F81      		ldd r18,Y+7
 12963 56ac 3885      		ldd r19,Y+8
 12964 56ae FC01      		movw r30,r24
 12965 56b0 3183      		std Z+1,r19
 12966 56b2 2083      		st Z,r18
 12967 56b4 8F81      		ldd r24,Y+7
 12968 56b6 9885      		ldd r25,Y+8
 12969 56b8 880F      		lsl r24
 12970 56ba 991F      		rol r25
 12971 56bc 880F      		lsl r24
 12972 56be 991F      		rol r25
 12973 56c0 2F85      		ldd r18,Y+15
 12974 56c2 3889      		ldd r19,Y+16
 12975 56c4 280F      		add r18,r24
 12976 56c6 391F      		adc r19,r25
 12977 56c8 80E0      		ldi r24,0
 12978 56ca 90E0      		ldi r25,0
 12979 56cc A0E4      		ldi r26,lo8(64)
 12980 56ce B0E4      		ldi r27,lo8(64)
 12981 56d0 F901      		movw r30,r18
 12982 56d2 8083      		st Z,r24
 12983 56d4 9183      		std Z+1,r25
 12984 56d6 A283      		std Z+2,r26
 12985 56d8 B383      		std Z+3,r27
 12986 56da 8F81      		ldd r24,Y+7
 12987 56dc 9885      		ldd r25,Y+8
 12988 56de 880F      		lsl r24
 12989 56e0 991F      		rol r25
 12990 56e2 880F      		lsl r24
 12991 56e4 991F      		rol r25
 12992 56e6 2B89      		ldd r18,Y+19
 12993 56e8 3C89      		ldd r19,Y+20
 12994 56ea 280F      		add r18,r24
 12995 56ec 391F      		adc r19,r25
 12996 56ee 80E0      		ldi r24,0
 12997 56f0 90E0      		ldi r25,0
 12998 56f2 A0E1      		ldi r26,lo8(16)
 12999 56f4 B1E4      		ldi r27,lo8(65)
 13000 56f6 F901      		movw r30,r18
 13001 56f8 8083      		st Z,r24
 13002 56fa 9183      		std Z+1,r25
 13003 56fc A283      		std Z+2,r26
 13004 56fe B383      		std Z+3,r27
1334:lp_solve_5.5/lp_price.c ****     lp->rhs[rownr] = 14;
 13005               		.loc 1 1334 0
 13006 5700 8985      		ldd r24,Y+9
 13007 5702 9A85      		ldd r25,Y+10
 13008 5704 8651      		subi r24,22
 13009 5706 9E4F      		sbci r25,-2
 13010 5708 FC01      		movw r30,r24
 13011 570a 8081      		ld r24,Z
 13012 570c 9181      		ldd r25,Z+1
 13013 570e 2F81      		ldd r18,Y+7
 13014 5710 3885      		ldd r19,Y+8
 13015 5712 281B      		sub r18,r24
 13016 5714 390B      		sbc r19,r25
 13017 5716 8989      		ldd r24,Y+17
 13018 5718 9A89      		ldd r25,Y+18
 13019 571a FC01      		movw r30,r24
 13020 571c 3183      		std Z+1,r19
 13021 571e 2083      		st Z,r18
1335:lp_solve_5.5/lp_price.c ****     lp->upbo[lp->var_basic[rownr]] = 2;
 13022               		.loc 1 1335 0
 13023 5720 8985      		ldd r24,Y+9
 13024 5722 9A85      		ldd r25,Y+10
 13025 5724 8855      		subi r24,88
 13026 5726 9D4F      		sbci r25,-3
 13027 5728 FC01      		movw r30,r24
 13028 572a 2081      		ld r18,Z
 13029 572c 3181      		ldd r19,Z+1
 13030 572e 8D85      		ldd r24,Y+13
 13031 5730 9E85      		ldd r25,Y+14
 13032 5732 880F      		lsl r24
 13033 5734 991F      		rol r25
 13034 5736 880F      		lsl r24
 13035 5738 991F      		rol r25
 13036 573a 280F      		add r18,r24
 13037 573c 391F      		adc r19,r25
 13038 573e 80E0      		ldi r24,0
 13039 5740 90E0      		ldi r25,0
 13040 5742 A0E6      		ldi r26,lo8(96)
 13041 5744 B1E4      		ldi r27,lo8(65)
 13042 5746 F901      		movw r30,r18
 13043 5748 8083      		st Z,r24
 13044 574a 9183      		std Z+1,r25
 13045 574c A283      		std Z+2,r26
 13046 574e B383      		std Z+3,r27
1336:lp_solve_5.5/lp_price.c ****     lp->rhs[0] = 6;
 13047               		.loc 1 1336 0
 13048 5750 8985      		ldd r24,Y+9
 13049 5752 9A85      		ldd r25,Y+10
 13050 5754 8055      		subi r24,80
 13051 5756 9D4F      		sbci r25,-3
 13052 5758 FC01      		movw r30,r24
 13053 575a 2081      		ld r18,Z
 13054 575c 3181      		ldd r19,Z+1
 13055 575e 8985      		ldd r24,Y+9
 13056 5760 9A85      		ldd r25,Y+10
 13057 5762 8453      		subi r24,52
 13058 5764 9D4F      		sbci r25,-3
 13059 5766 FC01      		movw r30,r24
 13060 5768 4081      		ld r20,Z
 13061 576a 5181      		ldd r21,Z+1
 13062 576c 8D85      		ldd r24,Y+13
 13063 576e 9E85      		ldd r25,Y+14
 13064 5770 880F      		lsl r24
 13065 5772 991F      		rol r25
 13066 5774 840F      		add r24,r20
 13067 5776 951F      		adc r25,r21
 13068 5778 FC01      		movw r30,r24
 13069 577a 8081      		ld r24,Z
 13070 577c 9181      		ldd r25,Z+1
 13071 577e 880F      		lsl r24
 13072 5780 991F      		rol r25
 13073 5782 880F      		lsl r24
 13074 5784 991F      		rol r25
 13075 5786 280F      		add r18,r24
 13076 5788 391F      		adc r19,r25
 13077 578a 80E0      		ldi r24,0
 13078 578c 90E0      		ldi r25,0
 13079 578e A0E0      		ldi r26,0
 13080 5790 B0E4      		ldi r27,lo8(64)
 13081 5792 F901      		movw r30,r18
 13082 5794 8083      		st Z,r24
 13083 5796 9183      		std Z+1,r25
 13084 5798 A283      		std Z+2,r26
 13085 579a B383      		std Z+3,r27
1337:lp_solve_5.5/lp_price.c ****   }
 13086               		.loc 1 1337 0
 13087 579c 8985      		ldd r24,Y+9
 13088 579e 9A85      		ldd r25,Y+10
 13089 57a0 8855      		subi r24,88
 13090 57a2 9D4F      		sbci r25,-3
 13091 57a4 FC01      		movw r30,r24
 13092 57a6 2081      		ld r18,Z
 13093 57a8 3181      		ldd r19,Z+1
 13094 57aa 80E0      		ldi r24,0
 13095 57ac 90E0      		ldi r25,0
 13096 57ae A0EC      		ldi r26,lo8(-64)
 13097 57b0 B0E4      		ldi r27,lo8(64)
 13098 57b2 F901      		movw r30,r18
 13099 57b4 8083      		st Z,r24
 13100 57b6 9183      		std Z+1,r25
 13101 57b8 A283      		std Z+2,r26
 13102 57ba B383      		std Z+3,r27
 13103               	.L382:
 13104               		.loc 1 1339 0
 13105 57bc 0000      		nop
 13106               	/* epilogue start */
 13107 57be 6696      		adiw r28,22
 13108 57c0 0FB6      		in __tmp_reg__,__SREG__
 13109 57c2 F894      		cli
 13110 57c4 DEBF      		out __SP_H__,r29
 13111 57c6 0FBE      		out __SREG__,__tmp_reg__
 13112 57c8 CDBF      		out __SP_L__,r28
 13113 57ca DF91      		pop r29
 13114 57cc CF91      		pop r28
 13115 57ce 1F91      		pop r17
 13116 57d0 0F91      		pop r16
 13117 57d2 FF90      		pop r15
 13118 57d4 EF90      		pop r14
 13119 57d6 DF90      		pop r13
 13120 57d8 CF90      		pop r12
 13121 57da 0895      		ret
 13122               		.cfi_endproc
 13123               	.LFE31:
 13125               	.global	__eqsf2
 13126               	.global	__floatdisf
 13127               		.section	.rodata
 13128               	.LC9:
 13129 01cd 636F 6C64 		.string	"coldual: Large basic solution value %g at iter %.0f indicates numerical instability\n"
 13129      7561 6C3A 
 13129      204C 6172 
 13129      6765 2062 
 13129      6173 6963 
 13130               	.LC10:
 13131 0222 636F 6C64 		.string	"coldual: Inaccurate bound-flip accuracy at iter %.0f\n"
 13131      7561 6C3A 
 13131      2049 6E61 
 13131      6363 7572 
 13131      6174 6520 
 13132               	.LC11:
 13133 0258 636F 6C64 		.string	"coldual: Leaving variable %d does not violate bounds at iter %.0f\n"
 13133      7561 6C3A 
 13133      204C 6561 
 13133      7669 6E67 
 13133      2076 6172 
 13134               	.LC12:
 13135 029b 636F 6C64 		.string	"coldual: Long-dual break point with %d bound-flip variables\n"
 13135      7561 6C3A 
 13135      204C 6F6E 
 13135      672D 6475 
 13135      616C 2062 
 13136               	.LC13:
 13137 02d8 636F 6C64 		.string	"coldual: Entering column %d, reduced cost %g, pivot value %g, bound swaps %d\n"
 13137      7561 6C3A 
 13137      2045 6E74 
 13137      6572 696E 
 13137      6720 636F 
 13138               		.text
 13139               	.global	coldual
 13141               	coldual:
 13142               	.LFB32:
1340:lp_solve_5.5/lp_price.c **** 
1341:lp_solve_5.5/lp_price.c **** 
1342:lp_solve_5.5/lp_price.c **** /* Find the dual simplex entering non-basic variable */
1343:lp_solve_5.5/lp_price.c **** STATIC int coldual(lprec *lp, int row_nr, REAL *prow, int *nzprow,
1344:lp_solve_5.5/lp_price.c ****                                           REAL *drow, int *nzdrow,
1345:lp_solve_5.5/lp_price.c ****                                           MYBOOL dualphase1, MYBOOL skipupdate,
1346:lp_solve_5.5/lp_price.c ****                                           int *candidatecount, REAL *xviol)
1347:lp_solve_5.5/lp_price.c **** {
 13143               		.loc 1 1347 0
 13144               		.cfi_startproc
 13145 57dc 8F92      		push r8
 13146               	.LCFI239:
 13147               		.cfi_def_cfa_offset 3
 13148               		.cfi_offset 8, -2
 13149 57de 9F92      		push r9
 13150               	.LCFI240:
 13151               		.cfi_def_cfa_offset 4
 13152               		.cfi_offset 9, -3
 13153 57e0 AF92      		push r10
 13154               	.LCFI241:
 13155               		.cfi_def_cfa_offset 5
 13156               		.cfi_offset 10, -4
 13157 57e2 BF92      		push r11
 13158               	.LCFI242:
 13159               		.cfi_def_cfa_offset 6
 13160               		.cfi_offset 11, -5
 13161 57e4 CF92      		push r12
 13162               	.LCFI243:
 13163               		.cfi_def_cfa_offset 7
 13164               		.cfi_offset 12, -6
 13165 57e6 DF92      		push r13
 13166               	.LCFI244:
 13167               		.cfi_def_cfa_offset 8
 13168               		.cfi_offset 13, -7
 13169 57e8 EF92      		push r14
 13170               	.LCFI245:
 13171               		.cfi_def_cfa_offset 9
 13172               		.cfi_offset 14, -8
 13173 57ea FF92      		push r15
 13174               	.LCFI246:
 13175               		.cfi_def_cfa_offset 10
 13176               		.cfi_offset 15, -9
 13177 57ec 0F93      		push r16
 13178               	.LCFI247:
 13179               		.cfi_def_cfa_offset 11
 13180               		.cfi_offset 16, -10
 13181 57ee 1F93      		push r17
 13182               	.LCFI248:
 13183               		.cfi_def_cfa_offset 12
 13184               		.cfi_offset 17, -11
 13185 57f0 CF93      		push r28
 13186               	.LCFI249:
 13187               		.cfi_def_cfa_offset 13
 13188               		.cfi_offset 28, -12
 13189 57f2 DF93      		push r29
 13190               	.LCFI250:
 13191               		.cfi_def_cfa_offset 14
 13192               		.cfi_offset 29, -13
 13193 57f4 CDB7      		in r28,__SP_L__
 13194 57f6 DEB7      		in r29,__SP_H__
 13195               	.LCFI251:
 13196               		.cfi_def_cfa_register 28
 13197 57f8 CE55      		subi r28,94
 13198 57fa D109      		sbc r29,__zero_reg__
 13199               	.LCFI252:
 13200               		.cfi_def_cfa_offset 108
 13201 57fc 0FB6      		in __tmp_reg__,__SREG__
 13202 57fe F894      		cli
 13203 5800 DEBF      		out __SP_H__,r29
 13204 5802 0FBE      		out __SREG__,__tmp_reg__
 13205 5804 CDBF      		out __SP_L__,r28
 13206               	/* prologue: function */
 13207               	/* frame size = 94 */
 13208               	/* stack size = 106 */
 13209               	.L__stack_usage = 106
 13210 5806 FE01      		movw r30,r28
 13211 5808 E35B      		subi r30,-77
 13212 580a FF4F      		sbci r31,-1
 13213 580c 9183      		std Z+1,r25
 13214 580e 8083      		st Z,r24
 13215 5810 CE01      		movw r24,r28
 13216 5812 815B      		subi r24,-79
 13217 5814 9F4F      		sbci r25,-1
 13218 5816 DC01      		movw r26,r24
 13219 5818 6D93      		st X+,r22
 13220 581a 7C93      		st X,r23
 13221 581c CE01      		movw r24,r28
 13222 581e 8F5A      		subi r24,-81
 13223 5820 9F4F      		sbci r25,-1
 13224 5822 FC01      		movw r30,r24
 13225 5824 5183      		std Z+1,r21
 13226 5826 4083      		st Z,r20
 13227 5828 CE01      		movw r24,r28
 13228 582a 8D5A      		subi r24,-83
 13229 582c 9F4F      		sbci r25,-1
 13230 582e DC01      		movw r26,r24
 13231 5830 2D93      		st X+,r18
 13232 5832 3C93      		st X,r19
 13233 5834 CE01      		movw r24,r28
 13234 5836 8B5A      		subi r24,-85
 13235 5838 9F4F      		sbci r25,-1
 13236 583a FC01      		movw r30,r24
 13237 583c 1183      		std Z+1,r17
 13238 583e 0083      		st Z,r16
 13239 5840 CE01      		movw r24,r28
 13240 5842 895A      		subi r24,-87
 13241 5844 9F4F      		sbci r25,-1
 13242 5846 DC01      		movw r26,r24
 13243 5848 ED92      		st X+,r14
 13244 584a FC92      		st X,r15
 13245 584c CE01      		movw r24,r28
 13246 584e 875A      		subi r24,-89
 13247 5850 9F4F      		sbci r25,-1
 13248 5852 FC01      		movw r30,r24
 13249 5854 C082      		st Z,r12
 13250 5856 CE01      		movw r24,r28
 13251 5858 865A      		subi r24,-90
 13252 585a 9F4F      		sbci r25,-1
 13253 585c DC01      		movw r26,r24
 13254 585e AC92      		st X,r10
 13255 5860 CE01      		movw r24,r28
 13256 5862 855A      		subi r24,-91
 13257 5864 9F4F      		sbci r25,-1
 13258 5866 FC01      		movw r30,r24
 13259 5868 9182      		std Z+1,r9
 13260 586a 8082      		st Z,r8
1348:lp_solve_5.5/lp_price.c ****   int      i, iy, iz, ix, k, nbound;
1349:lp_solve_5.5/lp_price.c ****   LREAL    w, g, quot;
1350:lp_solve_5.5/lp_price.c ****   REAL     viol, p, epspivot = lp->epspivot;
 13261               		.loc 1 1350 0
 13262 586c CE01      		movw r24,r28
 13263 586e 835B      		subi r24,-77
 13264 5870 9F4F      		sbci r25,-1
 13265 5872 DC01      		movw r26,r24
 13266 5874 8D91      		ld r24,X+
 13267 5876 9C91      		ld r25,X
 13268 5878 8E5D      		subi r24,-34
 13269 587a 9C4F      		sbci r25,-4
 13270 587c FC01      		movw r30,r24
 13271 587e 8081      		ld r24,Z
 13272 5880 9181      		ldd r25,Z+1
 13273 5882 A281      		ldd r26,Z+2
 13274 5884 B381      		ldd r27,Z+3
 13275 5886 8D8B      		std Y+21,r24
 13276 5888 9E8B      		std Y+22,r25
 13277 588a AF8B      		std Y+23,r26
 13278 588c B88F      		std Y+24,r27
1351:lp_solve_5.5/lp_price.c **** #ifdef MachinePrecRoundRHS
1352:lp_solve_5.5/lp_price.c ****   REAL     epsvalue = lp->epsmachine;
1353:lp_solve_5.5/lp_price.c **** #else
1354:lp_solve_5.5/lp_price.c ****   REAL     epsvalue = lp->epsvalue;
 13279               		.loc 1 1354 0
 13280 588e CE01      		movw r24,r28
 13281 5890 835B      		subi r24,-77
 13282 5892 9F4F      		sbci r25,-1
 13283 5894 DC01      		movw r26,r24
 13284 5896 8D91      		ld r24,X+
 13285 5898 9C91      		ld r25,X
 13286 589a 8A5E      		subi r24,-22
 13287 589c 9C4F      		sbci r25,-4
 13288 589e FC01      		movw r30,r24
 13289 58a0 8081      		ld r24,Z
 13290 58a2 9181      		ldd r25,Z+1
 13291 58a4 A281      		ldd r26,Z+2
 13292 58a6 B381      		ldd r27,Z+3
 13293 58a8 898F      		std Y+25,r24
 13294 58aa 9A8F      		std Y+26,r25
 13295 58ac AB8F      		std Y+27,r26
 13296 58ae BC8F      		std Y+28,r27
1355:lp_solve_5.5/lp_price.c **** #endif
1356:lp_solve_5.5/lp_price.c ****   pricerec current, candidate;
1357:lp_solve_5.5/lp_price.c ****   MYBOOL   isbatch = FALSE, /* Requires that lp->longsteps->size > lp->sum */
 13297               		.loc 1 1357 0
 13298 58b0 1B8A      		std Y+19,__zero_reg__
1358:lp_solve_5.5/lp_price.c ****            dolongsteps = (MYBOOL) (lp->longsteps != NULL);
 13299               		.loc 1 1358 0
 13300 58b2 CE01      		movw r24,r28
 13301 58b4 835B      		subi r24,-77
 13302 58b6 9F4F      		sbci r25,-1
 13303 58b8 DC01      		movw r26,r24
 13304 58ba 8D91      		ld r24,X+
 13305 58bc 9C91      		ld r25,X
 13306 58be 8455      		subi r24,84
 13307 58c0 9D4F      		sbci r25,-3
 13308 58c2 FC01      		movw r30,r24
 13309 58c4 8081      		ld r24,Z
 13310 58c6 9181      		ldd r25,Z+1
 13311 58c8 21E0      		ldi r18,lo8(1)
 13312 58ca 892B      		or r24,r25
 13313 58cc 01F4      		brne .L384
 13314 58ce 20E0      		ldi r18,0
 13315               	.L384:
 13316 58d0 2C8B      		std Y+20,r18
1359:lp_solve_5.5/lp_price.c **** 
1360:lp_solve_5.5/lp_price.c ****   /* Initialize */
1361:lp_solve_5.5/lp_price.c ****   if(xviol != NULL)
 13317               		.loc 1 1361 0
 13318 58d2 AF96      		adiw r28,109-62
 13319 58d4 8EAD      		ldd r24,Y+62
 13320 58d6 9FAD      		ldd r25,Y+63
 13321 58d8 AF97      		sbiw r28,109-62
 13322 58da 892B      		or r24,r25
 13323 58dc 01F0      		breq .L385
1362:lp_solve_5.5/lp_price.c ****     *xviol = lp->infinite;
 13324               		.loc 1 1362 0
 13325 58de CE01      		movw r24,r28
 13326 58e0 835B      		subi r24,-77
 13327 58e2 9F4F      		sbci r25,-1
 13328 58e4 DC01      		movw r26,r24
 13329 58e6 8D91      		ld r24,X+
 13330 58e8 9C91      		ld r25,X
 13331 58ea 865F      		subi r24,-10
 13332 58ec 9C4F      		sbci r25,-4
 13333 58ee FC01      		movw r30,r24
 13334 58f0 8081      		ld r24,Z
 13335 58f2 9181      		ldd r25,Z+1
 13336 58f4 A281      		ldd r26,Z+2
 13337 58f6 B381      		ldd r27,Z+3
 13338 58f8 AF96      		adiw r28,109-62
 13339 58fa 2EAD      		ldd r18,Y+62
 13340 58fc 3FAD      		ldd r19,Y+63
 13341 58fe AF97      		sbiw r28,109-62
 13342 5900 F901      		movw r30,r18
 13343 5902 8083      		st Z,r24
 13344 5904 9183      		std Z+1,r25
 13345 5906 A283      		std Z+2,r26
 13346 5908 B383      		std Z+3,r27
 13347               	.L385:
1363:lp_solve_5.5/lp_price.c ****   if(dolongsteps && !dualphase1)
 13348               		.loc 1 1363 0
 13349 590a 8C89      		ldd r24,Y+20
 13350 590c 8823      		tst r24
 13351 590e 01F0      		breq .L386
 13352               		.loc 1 1363 0 is_stmt 0 discriminator 1
 13353 5910 CE01      		movw r24,r28
 13354 5912 875A      		subi r24,-89
 13355 5914 9F4F      		sbci r25,-1
 13356 5916 DC01      		movw r26,r24
 13357 5918 8C91      		ld r24,X
 13358 591a 8823      		tst r24
 13359 591c 01F4      		brne .L386
1364:lp_solve_5.5/lp_price.c ****     dolongsteps = AUTOMATIC;  /* Sets Phase1 = TRUE, Phase2 = AUTOMATIC */
 13360               		.loc 1 1364 0 is_stmt 1
 13361 591e 82E0      		ldi r24,lo8(2)
 13362 5920 8C8B      		std Y+20,r24
 13363               	.L386:
1365:lp_solve_5.5/lp_price.c ****   current.theta    = lp->infinite;
 13364               		.loc 1 1365 0
 13365 5922 CE01      		movw r24,r28
 13366 5924 835B      		subi r24,-77
 13367 5926 9F4F      		sbci r25,-1
 13368 5928 FC01      		movw r30,r24
 13369 592a 8081      		ld r24,Z
 13370 592c 9181      		ldd r25,Z+1
 13371 592e 865F      		subi r24,-10
 13372 5930 9C4F      		sbci r25,-4
 13373 5932 FC01      		movw r30,r24
 13374 5934 8081      		ld r24,Z
 13375 5936 9181      		ldd r25,Z+1
 13376 5938 A281      		ldd r26,Z+2
 13377 593a B381      		ldd r27,Z+3
 13378 593c 8BA7      		std Y+43,r24
 13379 593e 9CA7      		std Y+44,r25
 13380 5940 ADA7      		std Y+45,r26
 13381 5942 BEA7      		std Y+46,r27
1366:lp_solve_5.5/lp_price.c ****   current.pivot    = 0;
 13382               		.loc 1 1366 0
 13383 5944 1FA6      		std Y+47,__zero_reg__
 13384 5946 18AA      		std Y+48,__zero_reg__
 13385 5948 19AA      		std Y+49,__zero_reg__
 13386 594a 1AAA      		std Y+50,__zero_reg__
1367:lp_solve_5.5/lp_price.c ****   current.varno    = 0;
 13387               		.loc 1 1367 0
 13388 594c 18AE      		std Y+56,__zero_reg__
 13389 594e 1FAA      		std Y+55,__zero_reg__
1368:lp_solve_5.5/lp_price.c ****   current.epspivot = epspivot;
 13390               		.loc 1 1368 0
 13391 5950 8D89      		ldd r24,Y+21
 13392 5952 9E89      		ldd r25,Y+22
 13393 5954 AF89      		ldd r26,Y+23
 13394 5956 B88D      		ldd r27,Y+24
 13395 5958 8BAB      		std Y+51,r24
 13396 595a 9CAB      		std Y+52,r25
 13397 595c ADAB      		std Y+53,r26
 13398 595e BEAB      		std Y+54,r27
1369:lp_solve_5.5/lp_price.c ****   current.isdual   = TRUE;
 13399               		.loc 1 1369 0
 13400 5960 81E0      		ldi r24,lo8(1)
 13401 5962 8BAF      		std Y+59,r24
1370:lp_solve_5.5/lp_price.c ****   current.lp       = lp;
 13402               		.loc 1 1370 0
 13403 5964 CE01      		movw r24,r28
 13404 5966 835B      		subi r24,-77
 13405 5968 9F4F      		sbci r25,-1
 13406 596a DC01      		movw r26,r24
 13407 596c 8D91      		ld r24,X+
 13408 596e 9C91      		ld r25,X
 13409 5970 9AAF      		std Y+58,r25
 13410 5972 89AF      		std Y+57,r24
1371:lp_solve_5.5/lp_price.c ****   candidate.epspivot = epspivot;
 13411               		.loc 1 1371 0
 13412 5974 9E01      		movw r18,r28
 13413 5976 2C5B      		subi r18,-68
 13414 5978 3F4F      		sbci r19,-1
 13415 597a 8D89      		ldd r24,Y+21
 13416 597c 9E89      		ldd r25,Y+22
 13417 597e AF89      		ldd r26,Y+23
 13418 5980 B88D      		ldd r27,Y+24
 13419 5982 F901      		movw r30,r18
 13420 5984 8083      		st Z,r24
 13421 5986 9183      		std Z+1,r25
 13422 5988 A283      		std Z+2,r26
 13423 598a B383      		std Z+3,r27
1372:lp_solve_5.5/lp_price.c ****   candidate.isdual = TRUE;
 13424               		.loc 1 1372 0
 13425 598c CE01      		movw r24,r28
 13426 598e 845B      		subi r24,-76
 13427 5990 9F4F      		sbci r25,-1
 13428 5992 21E0      		ldi r18,lo8(1)
 13429 5994 DC01      		movw r26,r24
 13430 5996 2C93      		st X,r18
1373:lp_solve_5.5/lp_price.c ****   candidate.lp     = lp;
 13431               		.loc 1 1373 0
 13432 5998 CE01      		movw r24,r28
 13433 599a 865B      		subi r24,-74
 13434 599c 9F4F      		sbci r25,-1
 13435 599e 9E01      		movw r18,r28
 13436 59a0 235B      		subi r18,-77
 13437 59a2 3F4F      		sbci r19,-1
 13438 59a4 F901      		movw r30,r18
 13439 59a6 2081      		ld r18,Z
 13440 59a8 3181      		ldd r19,Z+1
 13441 59aa DC01      		movw r26,r24
 13442 59ac 2D93      		st X+,r18
 13443 59ae 3C93      		st X,r19
1374:lp_solve_5.5/lp_price.c ****   *candidatecount  = 0;
 13444               		.loc 1 1374 0
 13445 59b0 CE01      		movw r24,r28
 13446 59b2 855A      		subi r24,-91
 13447 59b4 9F4F      		sbci r25,-1
 13448 59b6 FC01      		movw r30,r24
 13449 59b8 8081      		ld r24,Z
 13450 59ba 9181      		ldd r25,Z+1
 13451 59bc DC01      		movw r26,r24
 13452 59be 1D92      		st X+,__zero_reg__
 13453 59c0 1C92      		st X,__zero_reg__
1375:lp_solve_5.5/lp_price.c **** 
1376:lp_solve_5.5/lp_price.c ****   /* Compute reduced costs */
1377:lp_solve_5.5/lp_price.c ****   if(!skipupdate) {
 13454               		.loc 1 1377 0
 13455 59c2 CE01      		movw r24,r28
 13456 59c4 865A      		subi r24,-90
 13457 59c6 9F4F      		sbci r25,-1
 13458 59c8 FC01      		movw r30,r24
 13459 59ca 8081      		ld r24,Z
 13460 59cc 8823      		tst r24
 13461 59ce 01F4      		brne .L387
1378:lp_solve_5.5/lp_price.c **** #ifdef UseDualReducedCostUpdate
1379:lp_solve_5.5/lp_price.c ****     /* Recompute from scratch only at the beginning, otherwise update */
1380:lp_solve_5.5/lp_price.c ****     if((lp->current_iter > 0) && (refactRecent(lp) < AUTOMATIC))
1381:lp_solve_5.5/lp_price.c ****       compute_reducedcosts(lp, TRUE, row_nr, NULL, TRUE,
1382:lp_solve_5.5/lp_price.c ****                                prow, nzprow,
1383:lp_solve_5.5/lp_price.c ****                                NULL, NULL,
1384:lp_solve_5.5/lp_price.c ****                                MAT_ROUNDDEFAULT);
1385:lp_solve_5.5/lp_price.c ****     else
1386:lp_solve_5.5/lp_price.c **** #endif
1387:lp_solve_5.5/lp_price.c ****       compute_reducedcosts(lp, TRUE, row_nr, NULL, TRUE,
 13462               		.loc 1 1387 0
 13463 59d0 CE01      		movw r24,r28
 13464 59d2 895A      		subi r24,-87
 13465 59d4 9F4F      		sbci r25,-1
 13466 59d6 FC01      		movw r30,r24
 13467 59d8 A081      		ld r26,Z
 13468 59da B181      		ldd r27,Z+1
 13469 59dc CE01      		movw r24,r28
 13470 59de 8B5A      		subi r24,-85
 13471 59e0 9F4F      		sbci r25,-1
 13472 59e2 FC01      		movw r30,r24
 13473 59e4 0190      		ld __tmp_reg__,Z+
 13474 59e6 F081      		ld r31,Z
 13475 59e8 E02D      		mov r30,__tmp_reg__
 13476 59ea 6F96      		adiw r28,93-62
 13477 59ec FFAF      		std Y+63,r31
 13478 59ee EEAF      		std Y+62,r30
 13479 59f0 6F97      		sbiw r28,93-62
 13480 59f2 CE01      		movw r24,r28
 13481 59f4 8D5A      		subi r24,-83
 13482 59f6 9F4F      		sbci r25,-1
 13483 59f8 FC01      		movw r30,r24
 13484 59fa 6081      		ld r22,Z
 13485 59fc 7181      		ldd r23,Z+1
 13486 59fe CE01      		movw r24,r28
 13487 5a00 8F5A      		subi r24,-81
 13488 5a02 9F4F      		sbci r25,-1
 13489 5a04 FC01      		movw r30,r24
 13490 5a06 2081      		ld r18,Z
 13491 5a08 3181      		ldd r19,Z+1
 13492 5a0a CE01      		movw r24,r28
 13493 5a0c 815B      		subi r24,-79
 13494 5a0e 9F4F      		sbci r25,-1
 13495 5a10 FC01      		movw r30,r24
 13496 5a12 4081      		ld r20,Z
 13497 5a14 5181      		ldd r21,Z+1
 13498 5a16 CE01      		movw r24,r28
 13499 5a18 835B      		subi r24,-77
 13500 5a1a 9F4F      		sbci r25,-1
 13501 5a1c FC01      		movw r30,r24
 13502 5a1e 8081      		ld r24,Z
 13503 5a20 9181      		ldd r25,Z+1
 13504 5a22 1F92      		push __zero_reg__
 13505 5a24 12E0      		ldi r17,lo8(2)
 13506 5a26 1F93      		push r17
 13507 5a28 4D01      		movw r8,r26
 13508 5a2a 6F96      		adiw r28,93-62
 13509 5a2c AEAC      		ldd r10,Y+62
 13510 5a2e BFAC      		ldd r11,Y+63
 13511 5a30 6F97      		sbiw r28,93-62
 13512 5a32 6B01      		movw r12,r22
 13513 5a34 7901      		movw r14,r18
 13514 5a36 01E0      		ldi r16,lo8(1)
 13515 5a38 20E0      		ldi r18,0
 13516 5a3a 30E0      		ldi r19,0
 13517 5a3c 61E0      		ldi r22,lo8(1)
 13518 5a3e 0E94 0000 		call compute_reducedcosts
 13519 5a42 0F90      		pop __tmp_reg__
 13520 5a44 0F90      		pop __tmp_reg__
 13521               	.L387:
1388:lp_solve_5.5/lp_price.c ****                                prow, nzprow,
1389:lp_solve_5.5/lp_price.c ****                                drow, nzdrow,
1390:lp_solve_5.5/lp_price.c ****                                MAT_ROUNDDEFAULT);
1391:lp_solve_5.5/lp_price.c ****   }
1392:lp_solve_5.5/lp_price.c **** 
1393:lp_solve_5.5/lp_price.c **** #if 0
1394:lp_solve_5.5/lp_price.c ****   /* Override all above to do in-line testing with fixed test set */
1395:lp_solve_5.5/lp_price.c ****   if(lp->rows > 1 && lp->columns > 10)
1396:lp_solve_5.5/lp_price.c ****     longdual_testset(lp, 10, row_nr, prow, nzprow, drow, nzdrow);
1397:lp_solve_5.5/lp_price.c **** #endif
1398:lp_solve_5.5/lp_price.c **** 
1399:lp_solve_5.5/lp_price.c ****   /* Compute the current violation of the bounds of the outgoing variable,
1400:lp_solve_5.5/lp_price.c ****      negative for violation of lower bound, positive for upper bound violation.
1401:lp_solve_5.5/lp_price.c ****      (Basic variables are always lower-bounded, by lp_solve convention) */
1402:lp_solve_5.5/lp_price.c ****   g = 1;
 13522               		.loc 1 1402 0
 13523 5a46 80E0      		ldi r24,0
 13524 5a48 90E0      		ldi r25,0
 13525 5a4a A0E8      		ldi r26,lo8(-128)
 13526 5a4c BFE3      		ldi r27,lo8(63)
 13527 5a4e 8F83      		std Y+7,r24
 13528 5a50 9887      		std Y+8,r25
 13529 5a52 A987      		std Y+9,r26
 13530 5a54 BA87      		std Y+10,r27
1403:lp_solve_5.5/lp_price.c ****   viol = lp->rhs[row_nr];
 13531               		.loc 1 1403 0
 13532 5a56 CE01      		movw r24,r28
 13533 5a58 835B      		subi r24,-77
 13534 5a5a 9F4F      		sbci r25,-1
 13535 5a5c DC01      		movw r26,r24
 13536 5a5e 8D91      		ld r24,X+
 13537 5a60 9C91      		ld r25,X
 13538 5a62 8855      		subi r24,88
 13539 5a64 9D4F      		sbci r25,-3
 13540 5a66 FC01      		movw r30,r24
 13541 5a68 2081      		ld r18,Z
 13542 5a6a 3181      		ldd r19,Z+1
 13543 5a6c CE01      		movw r24,r28
 13544 5a6e 815B      		subi r24,-79
 13545 5a70 9F4F      		sbci r25,-1
 13546 5a72 DC01      		movw r26,r24
 13547 5a74 8D91      		ld r24,X+
 13548 5a76 9C91      		ld r25,X
 13549 5a78 880F      		lsl r24
 13550 5a7a 991F      		rol r25
 13551 5a7c 880F      		lsl r24
 13552 5a7e 991F      		rol r25
 13553 5a80 820F      		add r24,r18
 13554 5a82 931F      		adc r25,r19
 13555 5a84 FC01      		movw r30,r24
 13556 5a86 8081      		ld r24,Z
 13557 5a88 9181      		ldd r25,Z+1
 13558 5a8a A281      		ldd r26,Z+2
 13559 5a8c B381      		ldd r27,Z+3
 13560 5a8e 8B87      		std Y+11,r24
 13561 5a90 9C87      		std Y+12,r25
 13562 5a92 AD87      		std Y+13,r26
 13563 5a94 BE87      		std Y+14,r27
1404:lp_solve_5.5/lp_price.c ****   if(viol > 0) {   /* Check if the leaving variable is >= its upper bound */
 13564               		.loc 1 1404 0
 13565 5a96 20E0      		ldi r18,0
 13566 5a98 30E0      		ldi r19,0
 13567 5a9a A901      		movw r20,r18
 13568 5a9c 6B85      		ldd r22,Y+11
 13569 5a9e 7C85      		ldd r23,Y+12
 13570 5aa0 8D85      		ldd r24,Y+13
 13571 5aa2 9E85      		ldd r25,Y+14
 13572 5aa4 0E94 0000 		call __gtsf2
 13573 5aa8 1816      		cp __zero_reg__,r24
 13574 5aaa 04F0      		brlt .+2
 13575 5aac 00C0      		rjmp .L388
1405:lp_solve_5.5/lp_price.c ****     p = lp->upbo[lp->var_basic[row_nr]];
 13576               		.loc 1 1405 0
 13577 5aae CE01      		movw r24,r28
 13578 5ab0 835B      		subi r24,-77
 13579 5ab2 9F4F      		sbci r25,-1
 13580 5ab4 DC01      		movw r26,r24
 13581 5ab6 8D91      		ld r24,X+
 13582 5ab8 9C91      		ld r25,X
 13583 5aba 8055      		subi r24,80
 13584 5abc 9D4F      		sbci r25,-3
 13585 5abe FC01      		movw r30,r24
 13586 5ac0 2081      		ld r18,Z
 13587 5ac2 3181      		ldd r19,Z+1
 13588 5ac4 CE01      		movw r24,r28
 13589 5ac6 835B      		subi r24,-77
 13590 5ac8 9F4F      		sbci r25,-1
 13591 5aca DC01      		movw r26,r24
 13592 5acc 8D91      		ld r24,X+
 13593 5ace 9C91      		ld r25,X
 13594 5ad0 8453      		subi r24,52
 13595 5ad2 9D4F      		sbci r25,-3
 13596 5ad4 FC01      		movw r30,r24
 13597 5ad6 4081      		ld r20,Z
 13598 5ad8 5181      		ldd r21,Z+1
 13599 5ada CE01      		movw r24,r28
 13600 5adc 815B      		subi r24,-79
 13601 5ade 9F4F      		sbci r25,-1
 13602 5ae0 DC01      		movw r26,r24
 13603 5ae2 8D91      		ld r24,X+
 13604 5ae4 9C91      		ld r25,X
 13605 5ae6 880F      		lsl r24
 13606 5ae8 991F      		rol r25
 13607 5aea 840F      		add r24,r20
 13608 5aec 951F      		adc r25,r21
 13609 5aee FC01      		movw r30,r24
 13610 5af0 8081      		ld r24,Z
 13611 5af2 9181      		ldd r25,Z+1
 13612 5af4 880F      		lsl r24
 13613 5af6 991F      		rol r25
 13614 5af8 880F      		lsl r24
 13615 5afa 991F      		rol r25
 13616 5afc 820F      		add r24,r18
 13617 5afe 931F      		adc r25,r19
 13618 5b00 FC01      		movw r30,r24
 13619 5b02 8081      		ld r24,Z
 13620 5b04 9181      		ldd r25,Z+1
 13621 5b06 A281      		ldd r26,Z+2
 13622 5b08 B381      		ldd r27,Z+3
 13623 5b0a 8F87      		std Y+15,r24
 13624 5b0c 988B      		std Y+16,r25
 13625 5b0e A98B      		std Y+17,r26
 13626 5b10 BA8B      		std Y+18,r27
1406:lp_solve_5.5/lp_price.c ****     if(p < lp->infinite) {
 13627               		.loc 1 1406 0
 13628 5b12 CE01      		movw r24,r28
 13629 5b14 835B      		subi r24,-77
 13630 5b16 9F4F      		sbci r25,-1
 13631 5b18 DC01      		movw r26,r24
 13632 5b1a 8D91      		ld r24,X+
 13633 5b1c 9C91      		ld r25,X
 13634 5b1e 865F      		subi r24,-10
 13635 5b20 9C4F      		sbci r25,-4
 13636 5b22 FC01      		movw r30,r24
 13637 5b24 8081      		ld r24,Z
 13638 5b26 9181      		ldd r25,Z+1
 13639 5b28 A281      		ldd r26,Z+2
 13640 5b2a B381      		ldd r27,Z+3
 13641 5b2c 2F85      		ldd r18,Y+15
 13642 5b2e 3889      		ldd r19,Y+16
 13643 5b30 4989      		ldd r20,Y+17
 13644 5b32 5A89      		ldd r21,Y+18
 13645 5b34 BC01      		movw r22,r24
 13646 5b36 CD01      		movw r24,r26
 13647 5b38 0E94 0000 		call __gtsf2
 13648 5b3c 1816      		cp __zero_reg__,r24
 13649 5b3e 04F4      		brge .L390
1407:lp_solve_5.5/lp_price.c ****       viol -= p;
 13650               		.loc 1 1407 0
 13651 5b40 2F85      		ldd r18,Y+15
 13652 5b42 3889      		ldd r19,Y+16
 13653 5b44 4989      		ldd r20,Y+17
 13654 5b46 5A89      		ldd r21,Y+18
 13655 5b48 6B85      		ldd r22,Y+11
 13656 5b4a 7C85      		ldd r23,Y+12
 13657 5b4c 8D85      		ldd r24,Y+13
 13658 5b4e 9E85      		ldd r25,Y+14
 13659 5b50 0E94 0000 		call __subsf3
 13660 5b54 DC01      		movw r26,r24
 13661 5b56 CB01      		movw r24,r22
 13662 5b58 8B87      		std Y+11,r24
 13663 5b5a 9C87      		std Y+12,r25
 13664 5b5c AD87      		std Y+13,r26
 13665 5b5e BE87      		std Y+14,r27
1408:lp_solve_5.5/lp_price.c ****       my_roundzero(viol, epsvalue);
 13666               		.loc 1 1408 0
 13667 5b60 8B85      		ldd r24,Y+11
 13668 5b62 9C85      		ldd r25,Y+12
 13669 5b64 AD85      		ldd r26,Y+13
 13670 5b66 BE85      		ldd r27,Y+14
 13671 5b68 BF77      		andi r27,0x7f
 13672 5b6a 298D      		ldd r18,Y+25
 13673 5b6c 3A8D      		ldd r19,Y+26
 13674 5b6e 4B8D      		ldd r20,Y+27
 13675 5b70 5C8D      		ldd r21,Y+28
 13676 5b72 BC01      		movw r22,r24
 13677 5b74 CD01      		movw r24,r26
 13678 5b76 0E94 0000 		call __ltsf2
 13679 5b7a 8823      		tst r24
 13680 5b7c 04F4      		brge .L392
 13681               		.loc 1 1408 0 is_stmt 0 discriminator 1
 13682 5b7e 1B86      		std Y+11,__zero_reg__
 13683 5b80 1C86      		std Y+12,__zero_reg__
 13684 5b82 1D86      		std Y+13,__zero_reg__
 13685 5b84 1E86      		std Y+14,__zero_reg__
 13686               	.L392:
1409:lp_solve_5.5/lp_price.c ****       if(viol > 0)
 13687               		.loc 1 1409 0 is_stmt 1
 13688 5b86 20E0      		ldi r18,0
 13689 5b88 30E0      		ldi r19,0
 13690 5b8a A901      		movw r20,r18
 13691 5b8c 6B85      		ldd r22,Y+11
 13692 5b8e 7C85      		ldd r23,Y+12
 13693 5b90 8D85      		ldd r24,Y+13
 13694 5b92 9E85      		ldd r25,Y+14
 13695 5b94 0E94 0000 		call __gtsf2
 13696 5b98 1816      		cp __zero_reg__,r24
 13697 5b9a 04F4      		brge .L390
1410:lp_solve_5.5/lp_price.c ****         g = -1;
 13698               		.loc 1 1410 0
 13699 5b9c 80E0      		ldi r24,0
 13700 5b9e 90E0      		ldi r25,0
 13701 5ba0 A0E8      		ldi r26,lo8(-128)
 13702 5ba2 BFEB      		ldi r27,lo8(-65)
 13703 5ba4 8F83      		std Y+7,r24
 13704 5ba6 9887      		std Y+8,r25
 13705 5ba8 A987      		std Y+9,r26
 13706 5baa BA87      		std Y+10,r27
 13707               	.L390:
1411:lp_solve_5.5/lp_price.c ****     }
1412:lp_solve_5.5/lp_price.c ****     /* Do validation of numerics */
1413:lp_solve_5.5/lp_price.c ****     if(g == 1) {
 13708               		.loc 1 1413 0
 13709 5bac 20E0      		ldi r18,0
 13710 5bae 30E0      		ldi r19,0
 13711 5bb0 40E8      		ldi r20,lo8(-128)
 13712 5bb2 5FE3      		ldi r21,lo8(63)
 13713 5bb4 6F81      		ldd r22,Y+7
 13714 5bb6 7885      		ldd r23,Y+8
 13715 5bb8 8985      		ldd r24,Y+9
 13716 5bba 9A85      		ldd r25,Y+10
 13717 5bbc 0E94 0000 		call __eqsf2
 13718 5bc0 8823      		tst r24
 13719 5bc2 01F0      		breq .+2
 13720 5bc4 00C0      		rjmp .L388
1414:lp_solve_5.5/lp_price.c ****       if(viol >= lp->infinite) {
 13721               		.loc 1 1414 0
 13722 5bc6 CE01      		movw r24,r28
 13723 5bc8 835B      		subi r24,-77
 13724 5bca 9F4F      		sbci r25,-1
 13725 5bcc DC01      		movw r26,r24
 13726 5bce 8D91      		ld r24,X+
 13727 5bd0 9C91      		ld r25,X
 13728 5bd2 865F      		subi r24,-10
 13729 5bd4 9C4F      		sbci r25,-4
 13730 5bd6 FC01      		movw r30,r24
 13731 5bd8 8081      		ld r24,Z
 13732 5bda 9181      		ldd r25,Z+1
 13733 5bdc A281      		ldd r26,Z+2
 13734 5bde B381      		ldd r27,Z+3
 13735 5be0 2B85      		ldd r18,Y+11
 13736 5be2 3C85      		ldd r19,Y+12
 13737 5be4 4D85      		ldd r20,Y+13
 13738 5be6 5E85      		ldd r21,Y+14
 13739 5be8 BC01      		movw r22,r24
 13740 5bea CD01      		movw r24,r26
 13741 5bec 0E94 0000 		call __lesf2
 13742 5bf0 1816      		cp __zero_reg__,r24
 13743 5bf2 04F4      		brge .+2
 13744 5bf4 00C0      		rjmp .L437
1415:lp_solve_5.5/lp_price.c ****         report(lp, IMPORTANT, "coldual: Large basic solution value %g at iter %.0f indicates numeri
1416:lp_solve_5.5/lp_price.c ****                                lp->rhs[row_nr], (double) get_total_iter(lp));
 13745               		.loc 1 1416 0
 13746 5bf6 CE01      		movw r24,r28
 13747 5bf8 835B      		subi r24,-77
 13748 5bfa 9F4F      		sbci r25,-1
 13749 5bfc DC01      		movw r26,r24
 13750 5bfe 8D91      		ld r24,X+
 13751 5c00 9C91      		ld r25,X
 13752 5c02 0E94 0000 		call get_total_iter
 13753 5c06 A22E      		mov r10,r18
 13754 5c08 B32E      		mov r11,r19
 13755 5c0a C42E      		mov r12,r20
 13756 5c0c D52E      		mov r13,r21
 13757 5c0e E62E      		mov r14,r22
 13758 5c10 F72E      		mov r15,r23
 13759 5c12 082F      		mov r16,r24
 13760 5c14 192F      		mov r17,r25
1415:lp_solve_5.5/lp_price.c ****         report(lp, IMPORTANT, "coldual: Large basic solution value %g at iter %.0f indicates numeri
 13761               		.loc 1 1415 0
 13762 5c16 2A2D      		mov r18,r10
 13763 5c18 3B2D      		mov r19,r11
 13764 5c1a 4C2D      		mov r20,r12
 13765 5c1c 5D2D      		mov r21,r13
 13766 5c1e 6E2D      		mov r22,r14
 13767 5c20 7F2D      		mov r23,r15
 13768 5c22 802F      		mov r24,r16
 13769 5c24 912F      		mov r25,r17
 13770 5c26 0E94 0000 		call __floatdisf
 13771 5c2a 9B01      		movw r18,r22
 13772 5c2c AC01      		movw r20,r24
 13773               		.loc 1 1416 0
 13774 5c2e CE01      		movw r24,r28
 13775 5c30 835B      		subi r24,-77
 13776 5c32 9F4F      		sbci r25,-1
 13777 5c34 FC01      		movw r30,r24
 13778 5c36 8081      		ld r24,Z
 13779 5c38 9181      		ldd r25,Z+1
 13780 5c3a 8855      		subi r24,88
 13781 5c3c 9D4F      		sbci r25,-3
 13782 5c3e DC01      		movw r26,r24
 13783 5c40 6D91      		ld r22,X+
 13784 5c42 7C91      		ld r23,X
 13785 5c44 CE01      		movw r24,r28
 13786 5c46 815B      		subi r24,-79
 13787 5c48 9F4F      		sbci r25,-1
 13788 5c4a FC01      		movw r30,r24
 13789 5c4c 8081      		ld r24,Z
 13790 5c4e 9181      		ldd r25,Z+1
 13791 5c50 880F      		lsl r24
 13792 5c52 991F      		rol r25
 13793 5c54 880F      		lsl r24
 13794 5c56 991F      		rol r25
 13795 5c58 860F      		add r24,r22
 13796 5c5a 971F      		adc r25,r23
1415:lp_solve_5.5/lp_price.c ****         report(lp, IMPORTANT, "coldual: Large basic solution value %g at iter %.0f indicates numeri
 13797               		.loc 1 1415 0
 13798 5c5c FC01      		movw r30,r24
 13799 5c5e 8081      		ld r24,Z
 13800 5c60 9181      		ldd r25,Z+1
 13801 5c62 A281      		ldd r26,Z+2
 13802 5c64 B381      		ldd r27,Z+3
 13803 5c66 652F      		mov r22,r21
 13804 5c68 6F93      		push r22
 13805 5c6a 642F      		mov r22,r20
 13806 5c6c 6F93      		push r22
 13807 5c6e 632F      		mov r22,r19
 13808 5c70 6F93      		push r22
 13809 5c72 2F93      		push r18
 13810 5c74 2B2F      		mov r18,r27
 13811 5c76 2F93      		push r18
 13812 5c78 2A2F      		mov r18,r26
 13813 5c7a 2F93      		push r18
 13814 5c7c 292F      		mov r18,r25
 13815 5c7e 2F93      		push r18
 13816 5c80 8F93      		push r24
 13817 5c82 80E0      		ldi r24,lo8(.LC9)
 13818 5c84 90E0      		ldi r25,hi8(.LC9)
 13819 5c86 892F      		mov r24,r25
 13820 5c88 8F93      		push r24
 13821 5c8a 80E0      		ldi r24,lo8(.LC9)
 13822 5c8c 90E0      		ldi r25,hi8(.LC9)
 13823 5c8e 8F93      		push r24
 13824 5c90 1F92      		push __zero_reg__
 13825 5c92 83E0      		ldi r24,lo8(3)
 13826 5c94 8F93      		push r24
 13827 5c96 CE01      		movw r24,r28
 13828 5c98 835B      		subi r24,-77
 13829 5c9a 9F4F      		sbci r25,-1
 13830 5c9c DC01      		movw r26,r24
 13831 5c9e 1196      		adiw r26,1
 13832 5ca0 2C91      		ld r18,X
 13833 5ca2 2F93      		push r18
 13834 5ca4 FC01      		movw r30,r24
 13835 5ca6 8081      		ld r24,Z
 13836 5ca8 8F93      		push r24
 13837 5caa 0E94 0000 		call report
 13838 5cae 2DB7      		in r18,__SP_L__
 13839 5cb0 3EB7      		in r19,__SP_H__
 13840 5cb2 225F      		subi r18,-14
 13841 5cb4 3F4F      		sbci r19,-1
 13842 5cb6 0FB6      		in __tmp_reg__,__SREG__
 13843 5cb8 F894      		cli
 13844 5cba DEBF      		out __SP_H__,r29
 13845 5cbc 0FBE      		out __SREG__,__tmp_reg__
 13846 5cbe CDBF      		out __SP_L__,r28
1417:lp_solve_5.5/lp_price.c ****         lp->spx_status = NUMFAILURE;
 13847               		.loc 1 1417 0
 13848 5cc0 CE01      		movw r24,r28
 13849 5cc2 835B      		subi r24,-77
 13850 5cc4 9F4F      		sbci r25,-1
 13851 5cc6 DC01      		movw r26,r24
 13852 5cc8 8D91      		ld r24,X+
 13853 5cca 9C91      		ld r25,X
 13854 5ccc 8A5F      		subi r24,-6
 13855 5cce 9D4F      		sbci r25,-3
 13856 5cd0 25E0      		ldi r18,lo8(5)
 13857 5cd2 30E0      		ldi r19,0
 13858 5cd4 FC01      		movw r30,r24
 13859 5cd6 3183      		std Z+1,r19
 13860 5cd8 2083      		st Z,r18
1418:lp_solve_5.5/lp_price.c ****         return( 0 );
 13861               		.loc 1 1418 0
 13862 5cda 80E0      		ldi r24,0
 13863 5cdc 90E0      		ldi r25,0
 13864 5cde 00C0      		rjmp .L426
 13865               	.L437:
1419:lp_solve_5.5/lp_price.c **** 
1420:lp_solve_5.5/lp_price.c ****       }
1421:lp_solve_5.5/lp_price.c ****       if(skipupdate)
 13866               		.loc 1 1421 0
 13867 5ce0 CE01      		movw r24,r28
 13868 5ce2 865A      		subi r24,-90
 13869 5ce4 9F4F      		sbci r25,-1
 13870 5ce6 DC01      		movw r26,r24
 13871 5ce8 8C91      		ld r24,X
 13872 5cea 8823      		tst r24
 13873 5cec 01F4      		brne .+2
 13874 5cee 00C0      		rjmp .L399
1422:lp_solve_5.5/lp_price.c ****         report(lp, DETAILED, "coldual: Inaccurate bound-flip accuracy at iter %.0f\n",
1423:lp_solve_5.5/lp_price.c ****                               (double) get_total_iter(lp));
 13875               		.loc 1 1423 0
 13876 5cf0 CE01      		movw r24,r28
 13877 5cf2 835B      		subi r24,-77
 13878 5cf4 9F4F      		sbci r25,-1
 13879 5cf6 FC01      		movw r30,r24
 13880 5cf8 8081      		ld r24,Z
 13881 5cfa 9181      		ldd r25,Z+1
 13882 5cfc 0E94 0000 		call get_total_iter
 13883 5d00 A22E      		mov r10,r18
 13884 5d02 B32E      		mov r11,r19
 13885 5d04 C42E      		mov r12,r20
 13886 5d06 D52E      		mov r13,r21
 13887 5d08 E62E      		mov r14,r22
 13888 5d0a F72E      		mov r15,r23
 13889 5d0c 082F      		mov r16,r24
 13890 5d0e 192F      		mov r17,r25
1422:lp_solve_5.5/lp_price.c ****         report(lp, DETAILED, "coldual: Inaccurate bound-flip accuracy at iter %.0f\n",
 13891               		.loc 1 1422 0
 13892 5d10 2A2D      		mov r18,r10
 13893 5d12 3B2D      		mov r19,r11
 13894 5d14 4C2D      		mov r20,r12
 13895 5d16 5D2D      		mov r21,r13
 13896 5d18 6E2D      		mov r22,r14
 13897 5d1a 7F2D      		mov r23,r15
 13898 5d1c 802F      		mov r24,r16
 13899 5d1e 912F      		mov r25,r17
 13900 5d20 0E94 0000 		call __floatdisf
 13901 5d24 DC01      		movw r26,r24
 13902 5d26 CB01      		movw r24,r22
 13903 5d28 2B2F      		mov r18,r27
 13904 5d2a 2F93      		push r18
 13905 5d2c 2A2F      		mov r18,r26
 13906 5d2e 2F93      		push r18
 13907 5d30 292F      		mov r18,r25
 13908 5d32 2F93      		push r18
 13909 5d34 8F93      		push r24
 13910 5d36 80E0      		ldi r24,lo8(.LC10)
 13911 5d38 90E0      		ldi r25,hi8(.LC10)
 13912 5d3a 892F      		mov r24,r25
 13913 5d3c 8F93      		push r24
 13914 5d3e 80E0      		ldi r24,lo8(.LC10)
 13915 5d40 90E0      		ldi r25,hi8(.LC10)
 13916 5d42 8F93      		push r24
 13917 5d44 1F92      		push __zero_reg__
 13918 5d46 85E0      		ldi r24,lo8(5)
 13919 5d48 8F93      		push r24
 13920 5d4a CE01      		movw r24,r28
 13921 5d4c 835B      		subi r24,-77
 13922 5d4e 9F4F      		sbci r25,-1
 13923 5d50 DC01      		movw r26,r24
 13924 5d52 1196      		adiw r26,1
 13925 5d54 2C91      		ld r18,X
 13926 5d56 2F93      		push r18
 13927 5d58 FC01      		movw r30,r24
 13928 5d5a 8081      		ld r24,Z
 13929 5d5c 8F93      		push r24
 13930 5d5e 0E94 0000 		call report
 13931 5d62 2DB7      		in r18,__SP_L__
 13932 5d64 3EB7      		in r19,__SP_H__
 13933 5d66 265F      		subi r18,-10
 13934 5d68 3F4F      		sbci r19,-1
 13935 5d6a 0FB6      		in __tmp_reg__,__SREG__
 13936 5d6c F894      		cli
 13937 5d6e DEBF      		out __SP_H__,r29
 13938 5d70 0FBE      		out __SREG__,__tmp_reg__
 13939 5d72 CDBF      		out __SP_L__,r28
 13940 5d74 00C0      		rjmp .L400
 13941               	.L399:
1424:lp_solve_5.5/lp_price.c ****       else
1425:lp_solve_5.5/lp_price.c ****         report(lp, SEVERE,   "coldual: Leaving variable %d does not violate bounds at iter %.0f\n",
1426:lp_solve_5.5/lp_price.c ****                               row_nr, (double) get_total_iter(lp));
 13942               		.loc 1 1426 0
 13943 5d76 CE01      		movw r24,r28
 13944 5d78 835B      		subi r24,-77
 13945 5d7a 9F4F      		sbci r25,-1
 13946 5d7c DC01      		movw r26,r24
 13947 5d7e 8D91      		ld r24,X+
 13948 5d80 9C91      		ld r25,X
 13949 5d82 0E94 0000 		call get_total_iter
 13950 5d86 A22E      		mov r10,r18
 13951 5d88 B32E      		mov r11,r19
 13952 5d8a C42E      		mov r12,r20
 13953 5d8c D52E      		mov r13,r21
 13954 5d8e E62E      		mov r14,r22
 13955 5d90 F72E      		mov r15,r23
 13956 5d92 082F      		mov r16,r24
 13957 5d94 192F      		mov r17,r25
1425:lp_solve_5.5/lp_price.c ****                               row_nr, (double) get_total_iter(lp));
 13958               		.loc 1 1425 0
 13959 5d96 2A2D      		mov r18,r10
 13960 5d98 3B2D      		mov r19,r11
 13961 5d9a 4C2D      		mov r20,r12
 13962 5d9c 5D2D      		mov r21,r13
 13963 5d9e 6E2D      		mov r22,r14
 13964 5da0 7F2D      		mov r23,r15
 13965 5da2 802F      		mov r24,r16
 13966 5da4 912F      		mov r25,r17
 13967 5da6 0E94 0000 		call __floatdisf
 13968 5daa DC01      		movw r26,r24
 13969 5dac CB01      		movw r24,r22
 13970 5dae 2B2F      		mov r18,r27
 13971 5db0 2F93      		push r18
 13972 5db2 2A2F      		mov r18,r26
 13973 5db4 2F93      		push r18
 13974 5db6 292F      		mov r18,r25
 13975 5db8 2F93      		push r18
 13976 5dba 8F93      		push r24
 13977 5dbc CE01      		movw r24,r28
 13978 5dbe 815B      		subi r24,-79
 13979 5dc0 9F4F      		sbci r25,-1
 13980 5dc2 FC01      		movw r30,r24
 13981 5dc4 2181      		ldd r18,Z+1
 13982 5dc6 2F93      		push r18
 13983 5dc8 DC01      		movw r26,r24
 13984 5dca 8C91      		ld r24,X
 13985 5dcc 8F93      		push r24
 13986 5dce 80E0      		ldi r24,lo8(.LC11)
 13987 5dd0 90E0      		ldi r25,hi8(.LC11)
 13988 5dd2 892F      		mov r24,r25
 13989 5dd4 8F93      		push r24
 13990 5dd6 80E0      		ldi r24,lo8(.LC11)
 13991 5dd8 90E0      		ldi r25,hi8(.LC11)
 13992 5dda 8F93      		push r24
 13993 5ddc 1F92      		push __zero_reg__
 13994 5dde 82E0      		ldi r24,lo8(2)
 13995 5de0 8F93      		push r24
 13996 5de2 CE01      		movw r24,r28
 13997 5de4 835B      		subi r24,-77
 13998 5de6 9F4F      		sbci r25,-1
 13999 5de8 FC01      		movw r30,r24
 14000 5dea 2181      		ldd r18,Z+1
 14001 5dec 2F93      		push r18
 14002 5dee DC01      		movw r26,r24
 14003 5df0 8C91      		ld r24,X
 14004 5df2 8F93      		push r24
 14005 5df4 0E94 0000 		call report
 14006 5df8 EDB7      		in r30,__SP_L__
 14007 5dfa FEB7      		in r31,__SP_H__
 14008 5dfc 3C96      		adiw r30,12
 14009 5dfe 0FB6      		in __tmp_reg__,__SREG__
 14010 5e00 F894      		cli
 14011 5e02 DEBF      		out __SP_H__,r29
 14012 5e04 0FBE      		out __SREG__,__tmp_reg__
 14013 5e06 CDBF      		out __SP_L__,r28
 14014               	.L400:
1427:lp_solve_5.5/lp_price.c ****       return( -1 );
 14015               		.loc 1 1427 0
 14016 5e08 8FEF      		ldi r24,lo8(-1)
 14017 5e0a 9FEF      		ldi r25,lo8(-1)
 14018 5e0c 00C0      		rjmp .L426
 14019               	.L388:
1428:lp_solve_5.5/lp_price.c ****     }
1429:lp_solve_5.5/lp_price.c ****   }
1430:lp_solve_5.5/lp_price.c **** 
1431:lp_solve_5.5/lp_price.c ****   /* Update local value of pivot setting */
1432:lp_solve_5.5/lp_price.c ****   lp->_piv_rule_ = get_piv_rule(lp);
 14020               		.loc 1 1432 0
 14021 5e0e CE01      		movw r24,r28
 14022 5e10 835B      		subi r24,-77
 14023 5e12 9F4F      		sbci r25,-1
 14024 5e14 DC01      		movw r26,r24
 14025 5e16 8D91      		ld r24,X+
 14026 5e18 9C91      		ld r25,X
 14027 5e1a 0E94 0000 		call get_piv_rule
 14028 5e1e 9C01      		movw r18,r24
 14029 5e20 CE01      		movw r24,r28
 14030 5e22 835B      		subi r24,-77
 14031 5e24 9F4F      		sbci r25,-1
 14032 5e26 FC01      		movw r30,r24
 14033 5e28 8081      		ld r24,Z
 14034 5e2a 9181      		ldd r25,Z+1
 14035 5e2c 8E59      		subi r24,-98
 14036 5e2e 9D4F      		sbci r25,-3
 14037 5e30 DC01      		movw r26,r24
 14038 5e32 2D93      		st X+,r18
 14039 5e34 3C93      		st X,r19
1433:lp_solve_5.5/lp_price.c **** 
1434:lp_solve_5.5/lp_price.c ****   /* Condense list of relevant targets */
1435:lp_solve_5.5/lp_price.c ****   p = 0;
 14040               		.loc 1 1435 0
 14041 5e36 1F86      		std Y+15,__zero_reg__
 14042 5e38 188A      		std Y+16,__zero_reg__
 14043 5e3a 198A      		std Y+17,__zero_reg__
 14044 5e3c 1A8A      		std Y+18,__zero_reg__
1436:lp_solve_5.5/lp_price.c ****   k = 0;
 14045               		.loc 1 1436 0
 14046 5e3e 1C82      		std Y+4,__zero_reg__
 14047 5e40 1B82      		std Y+3,__zero_reg__
1437:lp_solve_5.5/lp_price.c ****   nbound = 0;
 14048               		.loc 1 1437 0
 14049 5e42 1E82      		std Y+6,__zero_reg__
 14050 5e44 1D82      		std Y+5,__zero_reg__
1438:lp_solve_5.5/lp_price.c ****   ix = 1;
 14051               		.loc 1 1438 0
 14052 5e46 81E0      		ldi r24,lo8(1)
 14053 5e48 90E0      		ldi r25,0
 14054 5e4a 9AA7      		std Y+42,r25
 14055 5e4c 89A7      		std Y+41,r24
1439:lp_solve_5.5/lp_price.c ****   iy = nzprow[0];
 14056               		.loc 1 1439 0
 14057 5e4e CE01      		movw r24,r28
 14058 5e50 8D5A      		subi r24,-83
 14059 5e52 9F4F      		sbci r25,-1
 14060 5e54 FC01      		movw r30,r24
 14061 5e56 8081      		ld r24,Z
 14062 5e58 9181      		ldd r25,Z+1
 14063 5e5a DC01      		movw r26,r24
 14064 5e5c 8D91      		ld r24,X+
 14065 5e5e 9C91      		ld r25,X
 14066 5e60 9EA3      		std Y+38,r25
 14067 5e62 8DA3      		std Y+37,r24
1440:lp_solve_5.5/lp_price.c ****   for(ix = 1; ix <= iy; ix++) {
 14068               		.loc 1 1440 0
 14069 5e64 81E0      		ldi r24,lo8(1)
 14070 5e66 90E0      		ldi r25,0
 14071 5e68 9AA7      		std Y+42,r25
 14072 5e6a 89A7      		std Y+41,r24
 14073 5e6c 00C0      		rjmp .L401
 14074               	.L410:
1441:lp_solve_5.5/lp_price.c ****     i = nzprow[ix];
 14075               		.loc 1 1441 0
 14076 5e6e 89A5      		ldd r24,Y+41
 14077 5e70 9AA5      		ldd r25,Y+42
 14078 5e72 880F      		lsl r24
 14079 5e74 991F      		rol r25
 14080 5e76 9E01      		movw r18,r28
 14081 5e78 2D5A      		subi r18,-83
 14082 5e7a 3F4F      		sbci r19,-1
 14083 5e7c F901      		movw r30,r18
 14084 5e7e 2081      		ld r18,Z
 14085 5e80 3181      		ldd r19,Z+1
 14086 5e82 820F      		add r24,r18
 14087 5e84 931F      		adc r25,r19
 14088 5e86 DC01      		movw r26,r24
 14089 5e88 8D91      		ld r24,X+
 14090 5e8a 9C91      		ld r25,X
 14091 5e8c 9A83      		std Y+2,r25
 14092 5e8e 8983      		std Y+1,r24
1442:lp_solve_5.5/lp_price.c ****     w = prow[i] * g;            /* Change sign if upper bound of the leaving variable is violated  
 14093               		.loc 1 1442 0
 14094 5e90 8981      		ldd r24,Y+1
 14095 5e92 9A81      		ldd r25,Y+2
 14096 5e94 880F      		lsl r24
 14097 5e96 991F      		rol r25
 14098 5e98 880F      		lsl r24
 14099 5e9a 991F      		rol r25
 14100 5e9c 9E01      		movw r18,r28
 14101 5e9e 2F5A      		subi r18,-81
 14102 5ea0 3F4F      		sbci r19,-1
 14103 5ea2 F901      		movw r30,r18
 14104 5ea4 2081      		ld r18,Z
 14105 5ea6 3181      		ldd r19,Z+1
 14106 5ea8 820F      		add r24,r18
 14107 5eaa 931F      		adc r25,r19
 14108 5eac FC01      		movw r30,r24
 14109 5eae 8081      		ld r24,Z
 14110 5eb0 9181      		ldd r25,Z+1
 14111 5eb2 A281      		ldd r26,Z+2
 14112 5eb4 B381      		ldd r27,Z+3
 14113 5eb6 2F81      		ldd r18,Y+7
 14114 5eb8 3885      		ldd r19,Y+8
 14115 5eba 4985      		ldd r20,Y+9
 14116 5ebc 5A85      		ldd r21,Y+10
 14117 5ebe BC01      		movw r22,r24
 14118 5ec0 CD01      		movw r24,r26
 14119 5ec2 0E94 0000 		call __mulsf3
 14120 5ec6 DC01      		movw r26,r24
 14121 5ec8 CB01      		movw r24,r22
 14122 5eca 8D8F      		std Y+29,r24
 14123 5ecc 9E8F      		std Y+30,r25
 14124 5ece AF8F      		std Y+31,r26
 14125 5ed0 B8A3      		std Y+32,r27
1443:lp_solve_5.5/lp_price.c ****     /* Change sign if the non-basic variable is currently upper-bounded */
1444:lp_solve_5.5/lp_price.c ****     /* w *= 2*lp->is_lower[i] - 1; */ /* fails on AIX!!! */
1445:lp_solve_5.5/lp_price.c ****     w = my_chsign(!lp->is_lower[i], w);
 14126               		.loc 1 1445 0
 14127 5ed2 CE01      		movw r24,r28
 14128 5ed4 835B      		subi r24,-77
 14129 5ed6 9F4F      		sbci r25,-1
 14130 5ed8 DC01      		movw r26,r24
 14131 5eda 8D91      		ld r24,X+
 14132 5edc 9C91      		ld r25,X
 14133 5ede 8E52      		subi r24,46
 14134 5ee0 9D4F      		sbci r25,-3
 14135 5ee2 FC01      		movw r30,r24
 14136 5ee4 2081      		ld r18,Z
 14137 5ee6 3181      		ldd r19,Z+1
 14138 5ee8 8981      		ldd r24,Y+1
 14139 5eea 9A81      		ldd r25,Y+2
 14140 5eec 820F      		add r24,r18
 14141 5eee 931F      		adc r25,r19
 14142 5ef0 DC01      		movw r26,r24
 14143 5ef2 8C91      		ld r24,X
 14144 5ef4 8823      		tst r24
 14145 5ef6 01F4      		brne .L402
 14146               		.loc 1 1445 0 is_stmt 0 discriminator 1
 14147 5ef8 20E0      		ldi r18,0
 14148 5efa 30E0      		ldi r19,0
 14149 5efc A901      		movw r20,r18
 14150 5efe 6D8D      		ldd r22,Y+29
 14151 5f00 7E8D      		ldd r23,Y+30
 14152 5f02 8F8D      		ldd r24,Y+31
 14153 5f04 98A1      		ldd r25,Y+32
 14154 5f06 0E94 0000 		call __nesf2
 14155 5f0a 8823      		tst r24
 14156 5f0c 01F0      		breq .L402
 14157               		.loc 1 1445 0 discriminator 3
 14158 5f0e 8D8D      		ldd r24,Y+29
 14159 5f10 9E8D      		ldd r25,Y+30
 14160 5f12 AF8D      		ldd r26,Y+31
 14161 5f14 B8A1      		ldd r27,Y+32
 14162 5f16 B058      		subi r27,0x80
 14163 5f18 00C0      		rjmp .L404
 14164               	.L402:
 14165               		.loc 1 1445 0 discriminator 4
 14166 5f1a 8D8D      		ldd r24,Y+29
 14167 5f1c 9E8D      		ldd r25,Y+30
 14168 5f1e AF8D      		ldd r26,Y+31
 14169 5f20 B8A1      		ldd r27,Y+32
 14170               	.L404:
 14171               		.loc 1 1445 0 discriminator 6
 14172 5f22 8D8F      		std Y+29,r24
 14173 5f24 9E8F      		std Y+30,r25
 14174 5f26 AF8F      		std Y+31,r26
 14175 5f28 B8A3      		std Y+32,r27
1446:lp_solve_5.5/lp_price.c **** 
1447:lp_solve_5.5/lp_price.c ****     /* Check if the candidate is worth using for anything */
1448:lp_solve_5.5/lp_price.c ****     if(w < -epsvalue) {
 14176               		.loc 1 1448 0 is_stmt 1 discriminator 6
 14177 5f2a 898D      		ldd r24,Y+25
 14178 5f2c 9A8D      		ldd r25,Y+26
 14179 5f2e AB8D      		ldd r26,Y+27
 14180 5f30 BC8D      		ldd r27,Y+28
 14181 5f32 B058      		subi r27,0x80
 14182 5f34 2D8D      		ldd r18,Y+29
 14183 5f36 3E8D      		ldd r19,Y+30
 14184 5f38 4F8D      		ldd r20,Y+31
 14185 5f3a 58A1      		ldd r21,Y+32
 14186 5f3c BC01      		movw r22,r24
 14187 5f3e CD01      		movw r24,r26
 14188 5f40 0E94 0000 		call __gtsf2
 14189 5f44 1816      		cp __zero_reg__,r24
 14190 5f46 04F0      		brlt .+2
 14191 5f48 00C0      		rjmp .L405
1449:lp_solve_5.5/lp_price.c ****       /* Tally bounded variables */
1450:lp_solve_5.5/lp_price.c ****       if(lp->upbo[i] < lp->infinite)
 14192               		.loc 1 1450 0
 14193 5f4a CE01      		movw r24,r28
 14194 5f4c 835B      		subi r24,-77
 14195 5f4e 9F4F      		sbci r25,-1
 14196 5f50 FC01      		movw r30,r24
 14197 5f52 8081      		ld r24,Z
 14198 5f54 9181      		ldd r25,Z+1
 14199 5f56 8055      		subi r24,80
 14200 5f58 9D4F      		sbci r25,-3
 14201 5f5a DC01      		movw r26,r24
 14202 5f5c 2D91      		ld r18,X+
 14203 5f5e 3C91      		ld r19,X
 14204 5f60 8981      		ldd r24,Y+1
 14205 5f62 9A81      		ldd r25,Y+2
 14206 5f64 880F      		lsl r24
 14207 5f66 991F      		rol r25
 14208 5f68 880F      		lsl r24
 14209 5f6a 991F      		rol r25
 14210 5f6c 820F      		add r24,r18
 14211 5f6e 931F      		adc r25,r19
 14212 5f70 FC01      		movw r30,r24
 14213 5f72 8081      		ld r24,Z
 14214 5f74 9181      		ldd r25,Z+1
 14215 5f76 A281      		ldd r26,Z+2
 14216 5f78 B381      		ldd r27,Z+3
 14217 5f7a 9E01      		movw r18,r28
 14218 5f7c 235B      		subi r18,-77
 14219 5f7e 3F4F      		sbci r19,-1
 14220 5f80 F901      		movw r30,r18
 14221 5f82 2081      		ld r18,Z
 14222 5f84 3181      		ldd r19,Z+1
 14223 5f86 265F      		subi r18,-10
 14224 5f88 3C4F      		sbci r19,-4
 14225 5f8a F901      		movw r30,r18
 14226 5f8c 2081      		ld r18,Z
 14227 5f8e 3181      		ldd r19,Z+1
 14228 5f90 4281      		ldd r20,Z+2
 14229 5f92 5381      		ldd r21,Z+3
 14230 5f94 BC01      		movw r22,r24
 14231 5f96 CD01      		movw r24,r26
 14232 5f98 0E94 0000 		call __ltsf2
 14233 5f9c 8823      		tst r24
 14234 5f9e 04F4      		brge .L407
1451:lp_solve_5.5/lp_price.c ****         nbound++;
 14235               		.loc 1 1451 0
 14236 5fa0 8D81      		ldd r24,Y+5
 14237 5fa2 9E81      		ldd r25,Y+6
 14238 5fa4 0196      		adiw r24,1
 14239 5fa6 9E83      		std Y+6,r25
 14240 5fa8 8D83      		std Y+5,r24
 14241               	.L407:
1452:lp_solve_5.5/lp_price.c **** 
1453:lp_solve_5.5/lp_price.c ****       /* Update the nz-index */
1454:lp_solve_5.5/lp_price.c ****       k++;
 14242               		.loc 1 1454 0
 14243 5faa 8B81      		ldd r24,Y+3
 14244 5fac 9C81      		ldd r25,Y+4
 14245 5fae 0196      		adiw r24,1
 14246 5fb0 9C83      		std Y+4,r25
 14247 5fb2 8B83      		std Y+3,r24
1455:lp_solve_5.5/lp_price.c ****       nzprow[k] = i;
 14248               		.loc 1 1455 0
 14249 5fb4 8B81      		ldd r24,Y+3
 14250 5fb6 9C81      		ldd r25,Y+4
 14251 5fb8 880F      		lsl r24
 14252 5fba 991F      		rol r25
 14253 5fbc 9E01      		movw r18,r28
 14254 5fbe 2D5A      		subi r18,-83
 14255 5fc0 3F4F      		sbci r19,-1
 14256 5fc2 D901      		movw r26,r18
 14257 5fc4 2D91      		ld r18,X+
 14258 5fc6 3C91      		ld r19,X
 14259 5fc8 820F      		add r24,r18
 14260 5fca 931F      		adc r25,r19
 14261 5fcc 2981      		ldd r18,Y+1
 14262 5fce 3A81      		ldd r19,Y+2
 14263 5fd0 FC01      		movw r30,r24
 14264 5fd2 3183      		std Z+1,r19
 14265 5fd4 2083      		st Z,r18
1456:lp_solve_5.5/lp_price.c ****       SETMAX(p, -w);
 14266               		.loc 1 1456 0
 14267 5fd6 8D8D      		ldd r24,Y+29
 14268 5fd8 9E8D      		ldd r25,Y+30
 14269 5fda AF8D      		ldd r26,Y+31
 14270 5fdc B8A1      		ldd r27,Y+32
 14271 5fde B058      		subi r27,0x80
 14272 5fe0 2F85      		ldd r18,Y+15
 14273 5fe2 3889      		ldd r19,Y+16
 14274 5fe4 4989      		ldd r20,Y+17
 14275 5fe6 5A89      		ldd r21,Y+18
 14276 5fe8 BC01      		movw r22,r24
 14277 5fea CD01      		movw r24,r26
 14278 5fec 0E94 0000 		call __gtsf2
 14279 5ff0 1816      		cp __zero_reg__,r24
 14280 5ff2 04F4      		brge .L405
 14281               		.loc 1 1456 0 is_stmt 0 discriminator 1
 14282 5ff4 8D8D      		ldd r24,Y+29
 14283 5ff6 9E8D      		ldd r25,Y+30
 14284 5ff8 AF8D      		ldd r26,Y+31
 14285 5ffa B8A1      		ldd r27,Y+32
 14286 5ffc B058      		subi r27,0x80
 14287 5ffe 8F87      		std Y+15,r24
 14288 6000 988B      		std Y+16,r25
 14289 6002 A98B      		std Y+17,r26
 14290 6004 BA8B      		std Y+18,r27
 14291               	.L405:
1440:lp_solve_5.5/lp_price.c ****     i = nzprow[ix];
 14292               		.loc 1 1440 0 is_stmt 1 discriminator 2
 14293 6006 89A5      		ldd r24,Y+41
 14294 6008 9AA5      		ldd r25,Y+42
 14295 600a 0196      		adiw r24,1
 14296 600c 9AA7      		std Y+42,r25
 14297 600e 89A7      		std Y+41,r24
 14298               	.L401:
1440:lp_solve_5.5/lp_price.c ****     i = nzprow[ix];
 14299               		.loc 1 1440 0 is_stmt 0 discriminator 1
 14300 6010 29A5      		ldd r18,Y+41
 14301 6012 3AA5      		ldd r19,Y+42
 14302 6014 8DA1      		ldd r24,Y+37
 14303 6016 9EA1      		ldd r25,Y+38
 14304 6018 8217      		cp r24,r18
 14305 601a 9307      		cpc r25,r19
 14306 601c 04F0      		brlt .+2
 14307 601e 00C0      		rjmp .L410
1457:lp_solve_5.5/lp_price.c ****     }
1458:lp_solve_5.5/lp_price.c **** #ifdef Paranoia
1459:lp_solve_5.5/lp_price.c ****     else {
1460:lp_solve_5.5/lp_price.c ****       if(lp->spx_trace) {
1461:lp_solve_5.5/lp_price.c ****         report(lp, FULL, "coldual: Candidate variable prow[%d] rejected with %g too small\n",
1462:lp_solve_5.5/lp_price.c ****                          i, w);
1463:lp_solve_5.5/lp_price.c ****       }
1464:lp_solve_5.5/lp_price.c ****     }
1465:lp_solve_5.5/lp_price.c **** #endif
1466:lp_solve_5.5/lp_price.c **** 
1467:lp_solve_5.5/lp_price.c ****   }
1468:lp_solve_5.5/lp_price.c ****   nzprow[0] = k;
 14308               		.loc 1 1468 0 is_stmt 1
 14309 6020 CE01      		movw r24,r28
 14310 6022 8D5A      		subi r24,-83
 14311 6024 9F4F      		sbci r25,-1
 14312 6026 DC01      		movw r26,r24
 14313 6028 8D91      		ld r24,X+
 14314 602a 9C91      		ld r25,X
 14315 602c 2B81      		ldd r18,Y+3
 14316 602e 3C81      		ldd r19,Y+4
 14317 6030 FC01      		movw r30,r24
 14318 6032 3183      		std Z+1,r19
 14319 6034 2083      		st Z,r18
1469:lp_solve_5.5/lp_price.c ****   if(xviol != NULL)
 14320               		.loc 1 1469 0
 14321 6036 AF96      		adiw r28,109-62
 14322 6038 8EAD      		ldd r24,Y+62
 14323 603a 9FAD      		ldd r25,Y+63
 14324 603c AF97      		sbiw r28,109-62
 14325 603e 892B      		or r24,r25
 14326 6040 01F0      		breq .L411
1470:lp_solve_5.5/lp_price.c ****     *xviol = p;
 14327               		.loc 1 1470 0
 14328 6042 AF96      		adiw r28,109-62
 14329 6044 2EAD      		ldd r18,Y+62
 14330 6046 3FAD      		ldd r19,Y+63
 14331 6048 AF97      		sbiw r28,109-62
 14332 604a 8F85      		ldd r24,Y+15
 14333 604c 9889      		ldd r25,Y+16
 14334 604e A989      		ldd r26,Y+17
 14335 6050 BA89      		ldd r27,Y+18
 14336 6052 F901      		movw r30,r18
 14337 6054 8083      		st Z,r24
 14338 6056 9183      		std Z+1,r25
 14339 6058 A283      		std Z+2,r26
 14340 605a B383      		std Z+3,r27
 14341               	.L411:
1471:lp_solve_5.5/lp_price.c **** 
1472:lp_solve_5.5/lp_price.c **** #ifdef UseRelativePivot_Dual
1473:lp_solve_5.5/lp_price.c **** /*  epspivot *= sqrt(lp->matA->dynrange) / lp->matA->infnorm; */
1474:lp_solve_5.5/lp_price.c ****   epspivot /= MAX(1, sqrt(lp->matA->rowmax[row_nr]));
1475:lp_solve_5.5/lp_price.c **** #endif
1476:lp_solve_5.5/lp_price.c ****   current.epspivot   = epspivot;
 14342               		.loc 1 1476 0
 14343 605c 8D89      		ldd r24,Y+21
 14344 605e 9E89      		ldd r25,Y+22
 14345 6060 AF89      		ldd r26,Y+23
 14346 6062 B88D      		ldd r27,Y+24
 14347 6064 8BAB      		std Y+51,r24
 14348 6066 9CAB      		std Y+52,r25
 14349 6068 ADAB      		std Y+53,r26
 14350 606a BEAB      		std Y+54,r27
1477:lp_solve_5.5/lp_price.c ****   candidate.epspivot = epspivot;
 14351               		.loc 1 1477 0
 14352 606c 9E01      		movw r18,r28
 14353 606e 2C5B      		subi r18,-68
 14354 6070 3F4F      		sbci r19,-1
 14355 6072 8D89      		ldd r24,Y+21
 14356 6074 9E89      		ldd r25,Y+22
 14357 6076 AF89      		ldd r26,Y+23
 14358 6078 B88D      		ldd r27,Y+24
 14359 607a F901      		movw r30,r18
 14360 607c 8083      		st Z,r24
 14361 607e 9183      		std Z+1,r25
 14362 6080 A283      		std Z+2,r26
 14363 6082 B383      		std Z+3,r27
1478:lp_solve_5.5/lp_price.c **** 
1479:lp_solve_5.5/lp_price.c ****   /* Initialize the long-step structures if indicated */
1480:lp_solve_5.5/lp_price.c ****   if(dolongsteps) {
 14364               		.loc 1 1480 0
 14365 6084 8C89      		ldd r24,Y+20
 14366 6086 8823      		tst r24
 14367 6088 01F4      		brne .+2
 14368 608a 00C0      		rjmp .L412
1481:lp_solve_5.5/lp_price.c ****     if((nzprow[0] <= 1) || (nbound == 0)) {  /* Don't bother */
 14369               		.loc 1 1481 0
 14370 608c CE01      		movw r24,r28
 14371 608e 8D5A      		subi r24,-83
 14372 6090 9F4F      		sbci r25,-1
 14373 6092 DC01      		movw r26,r24
 14374 6094 8D91      		ld r24,X+
 14375 6096 9C91      		ld r25,X
 14376 6098 FC01      		movw r30,r24
 14377 609a 8081      		ld r24,Z
 14378 609c 9181      		ldd r25,Z+1
 14379 609e 0297      		sbiw r24,2
 14380 60a0 04F0      		brlt .L413
 14381               		.loc 1 1481 0 is_stmt 0 discriminator 1
 14382 60a2 8D81      		ldd r24,Y+5
 14383 60a4 9E81      		ldd r25,Y+6
 14384 60a6 892B      		or r24,r25
 14385 60a8 01F4      		brne .L414
 14386               	.L413:
1482:lp_solve_5.5/lp_price.c ****       dolongsteps = FALSE;
 14387               		.loc 1 1482 0 is_stmt 1
 14388 60aa 1C8A      		std Y+20,__zero_reg__
1483:lp_solve_5.5/lp_price.c ****       lp->longsteps->indexSet[0] = 0;
 14389               		.loc 1 1483 0
 14390 60ac CE01      		movw r24,r28
 14391 60ae 835B      		subi r24,-77
 14392 60b0 9F4F      		sbci r25,-1
 14393 60b2 DC01      		movw r26,r24
 14394 60b4 8D91      		ld r24,X+
 14395 60b6 9C91      		ld r25,X
 14396 60b8 8455      		subi r24,84
 14397 60ba 9D4F      		sbci r25,-3
 14398 60bc FC01      		movw r30,r24
 14399 60be 8081      		ld r24,Z
 14400 60c0 9181      		ldd r25,Z+1
 14401 60c2 DC01      		movw r26,r24
 14402 60c4 5296      		adiw r26,18
 14403 60c6 8D91      		ld r24,X+
 14404 60c8 9C91      		ld r25,X
 14405 60ca 5397      		sbiw r26,18+1
 14406 60cc FC01      		movw r30,r24
 14407 60ce 1182      		std Z+1,__zero_reg__
 14408 60d0 1082      		st Z,__zero_reg__
 14409 60d2 00C0      		rjmp .L412
 14410               	.L414:
1484:lp_solve_5.5/lp_price.c ****     }
1485:lp_solve_5.5/lp_price.c ****     else {
1486:lp_solve_5.5/lp_price.c ****       multi_restart(lp->longsteps);
 14411               		.loc 1 1486 0
 14412 60d4 CE01      		movw r24,r28
 14413 60d6 835B      		subi r24,-77
 14414 60d8 9F4F      		sbci r25,-1
 14415 60da DC01      		movw r26,r24
 14416 60dc 8D91      		ld r24,X+
 14417 60de 9C91      		ld r25,X
 14418 60e0 8455      		subi r24,84
 14419 60e2 9D4F      		sbci r25,-3
 14420 60e4 FC01      		movw r30,r24
 14421 60e6 8081      		ld r24,Z
 14422 60e8 9181      		ldd r25,Z+1
 14423 60ea 0E94 0000 		call multi_restart
1487:lp_solve_5.5/lp_price.c ****       multi_valueInit(lp->longsteps, g*viol, lp->rhs[0]);
 14424               		.loc 1 1487 0
 14425 60ee CE01      		movw r24,r28
 14426 60f0 835B      		subi r24,-77
 14427 60f2 9F4F      		sbci r25,-1
 14428 60f4 DC01      		movw r26,r24
 14429 60f6 8D91      		ld r24,X+
 14430 60f8 9C91      		ld r25,X
 14431 60fa 8855      		subi r24,88
 14432 60fc 9D4F      		sbci r25,-3
 14433 60fe FC01      		movw r30,r24
 14434 6100 8081      		ld r24,Z
 14435 6102 9181      		ldd r25,Z+1
 14436 6104 DC01      		movw r26,r24
 14437 6106 CD90      		ld r12,X+
 14438 6108 DD90      		ld r13,X+
 14439 610a ED90      		ld r14,X+
 14440 610c FC90      		ld r15,X
 14441 610e 2B85      		ldd r18,Y+11
 14442 6110 3C85      		ldd r19,Y+12
 14443 6112 4D85      		ldd r20,Y+13
 14444 6114 5E85      		ldd r21,Y+14
 14445 6116 6F81      		ldd r22,Y+7
 14446 6118 7885      		ldd r23,Y+8
 14447 611a 8985      		ldd r24,Y+9
 14448 611c 9A85      		ldd r25,Y+10
 14449 611e 0E94 0000 		call __mulsf3
 14450 6122 DC01      		movw r26,r24
 14451 6124 CB01      		movw r24,r22
 14452 6126 AC01      		movw r20,r24
 14453 6128 BD01      		movw r22,r26
 14454 612a CE01      		movw r24,r28
 14455 612c 835B      		subi r24,-77
 14456 612e 9F4F      		sbci r25,-1
 14457 6130 FC01      		movw r30,r24
 14458 6132 8081      		ld r24,Z
 14459 6134 9181      		ldd r25,Z+1
 14460 6136 8455      		subi r24,84
 14461 6138 9D4F      		sbci r25,-3
 14462 613a DC01      		movw r26,r24
 14463 613c 8D91      		ld r24,X+
 14464 613e 9C91      		ld r25,X
 14465 6140 9701      		movw r18,r14
 14466 6142 8601      		movw r16,r12
 14467 6144 0E94 0000 		call multi_valueInit
 14468               	.L412:
1488:lp_solve_5.5/lp_price.c ****     }
1489:lp_solve_5.5/lp_price.c ****   }
1490:lp_solve_5.5/lp_price.c **** 
1491:lp_solve_5.5/lp_price.c ****   /* Loop over all entering column candidates */
1492:lp_solve_5.5/lp_price.c ****   ix = 1;
 14469               		.loc 1 1492 0
 14470 6148 81E0      		ldi r24,lo8(1)
 14471 614a 90E0      		ldi r25,0
 14472 614c 9AA7      		std Y+42,r25
 14473 614e 89A7      		std Y+41,r24
1493:lp_solve_5.5/lp_price.c ****   iy = nzprow[0];
 14474               		.loc 1 1493 0
 14475 6150 CE01      		movw r24,r28
 14476 6152 8D5A      		subi r24,-83
 14477 6154 9F4F      		sbci r25,-1
 14478 6156 FC01      		movw r30,r24
 14479 6158 8081      		ld r24,Z
 14480 615a 9181      		ldd r25,Z+1
 14481 615c DC01      		movw r26,r24
 14482 615e 8D91      		ld r24,X+
 14483 6160 9C91      		ld r25,X
 14484 6162 9EA3      		std Y+38,r25
 14485 6164 8DA3      		std Y+37,r24
1494:lp_solve_5.5/lp_price.c ****   makePriceLoop(lp, &ix, &iy, &iz);
 14486               		.loc 1 1494 0
 14487 6166 9E01      		movw r18,r28
 14488 6168 295D      		subi r18,-39
 14489 616a 3F4F      		sbci r19,-1
 14490 616c AE01      		movw r20,r28
 14491 616e 4B5D      		subi r20,-37
 14492 6170 5F4F      		sbci r21,-1
 14493 6172 BE01      		movw r22,r28
 14494 6174 675D      		subi r22,-41
 14495 6176 7F4F      		sbci r23,-1
 14496 6178 CE01      		movw r24,r28
 14497 617a 835B      		subi r24,-77
 14498 617c 9F4F      		sbci r25,-1
 14499 617e FC01      		movw r30,r24
 14500 6180 8081      		ld r24,Z
 14501 6182 9181      		ldd r25,Z+1
 14502 6184 0E94 0000 		call makePriceLoop
1495:lp_solve_5.5/lp_price.c ****   iy *= iz;
 14503               		.loc 1 1495 0
 14504 6188 4DA1      		ldd r20,Y+37
 14505 618a 5EA1      		ldd r21,Y+38
 14506 618c 2FA1      		ldd r18,Y+39
 14507 618e 38A5      		ldd r19,Y+40
 14508 6190 429F      		mul r20,r18
 14509 6192 C001      		movw r24,r0
 14510 6194 439F      		mul r20,r19
 14511 6196 900D      		add r25,r0
 14512 6198 529F      		mul r21,r18
 14513 619a 900D      		add r25,r0
 14514 619c 1124      		clr r1
 14515 619e 9EA3      		std Y+38,r25
 14516 61a0 8DA3      		std Y+37,r24
1496:lp_solve_5.5/lp_price.c ****   for(; ix*iz <= iy; ix += iz) {
 14517               		.loc 1 1496 0
 14518 61a2 00C0      		rjmp .L415
 14519               	.L422:
1497:lp_solve_5.5/lp_price.c ****     i = nzprow[ix];
 14520               		.loc 1 1497 0
 14521 61a4 89A5      		ldd r24,Y+41
 14522 61a6 9AA5      		ldd r25,Y+42
 14523 61a8 880F      		lsl r24
 14524 61aa 991F      		rol r25
 14525 61ac 9E01      		movw r18,r28
 14526 61ae 2D5A      		subi r18,-83
 14527 61b0 3F4F      		sbci r19,-1
 14528 61b2 D901      		movw r26,r18
 14529 61b4 2D91      		ld r18,X+
 14530 61b6 3C91      		ld r19,X
 14531 61b8 820F      		add r24,r18
 14532 61ba 931F      		adc r25,r19
 14533 61bc FC01      		movw r30,r24
 14534 61be 8081      		ld r24,Z
 14535 61c0 9181      		ldd r25,Z+1
 14536 61c2 9A83      		std Y+2,r25
 14537 61c4 8983      		std Y+1,r24
1498:lp_solve_5.5/lp_price.c **** 
1499:lp_solve_5.5/lp_price.c ****     /* Compute the dual ratio (prow = w and drow = cbar in Chvatal's "nomenclatura") */
1500:lp_solve_5.5/lp_price.c ****     w    = prow[i] * g;         /* Change sign if upper bound of the leaving variable is violated  
 14538               		.loc 1 1500 0
 14539 61c6 8981      		ldd r24,Y+1
 14540 61c8 9A81      		ldd r25,Y+2
 14541 61ca 880F      		lsl r24
 14542 61cc 991F      		rol r25
 14543 61ce 880F      		lsl r24
 14544 61d0 991F      		rol r25
 14545 61d2 9E01      		movw r18,r28
 14546 61d4 2F5A      		subi r18,-81
 14547 61d6 3F4F      		sbci r19,-1
 14548 61d8 D901      		movw r26,r18
 14549 61da 2D91      		ld r18,X+
 14550 61dc 3C91      		ld r19,X
 14551 61de 820F      		add r24,r18
 14552 61e0 931F      		adc r25,r19
 14553 61e2 FC01      		movw r30,r24
 14554 61e4 8081      		ld r24,Z
 14555 61e6 9181      		ldd r25,Z+1
 14556 61e8 A281      		ldd r26,Z+2
 14557 61ea B381      		ldd r27,Z+3
 14558 61ec 2F81      		ldd r18,Y+7
 14559 61ee 3885      		ldd r19,Y+8
 14560 61f0 4985      		ldd r20,Y+9
 14561 61f2 5A85      		ldd r21,Y+10
 14562 61f4 BC01      		movw r22,r24
 14563 61f6 CD01      		movw r24,r26
 14564 61f8 0E94 0000 		call __mulsf3
 14565 61fc DC01      		movw r26,r24
 14566 61fe CB01      		movw r24,r22
 14567 6200 8D8F      		std Y+29,r24
 14568 6202 9E8F      		std Y+30,r25
 14569 6204 AF8F      		std Y+31,r26
 14570 6206 B8A3      		std Y+32,r27
1501:lp_solve_5.5/lp_price.c ****     quot = -drow[i] / w;        /* Remember this sign-reversal in multi_recompute!                 
 14571               		.loc 1 1501 0
 14572 6208 8981      		ldd r24,Y+1
 14573 620a 9A81      		ldd r25,Y+2
 14574 620c 880F      		lsl r24
 14575 620e 991F      		rol r25
 14576 6210 880F      		lsl r24
 14577 6212 991F      		rol r25
 14578 6214 9E01      		movw r18,r28
 14579 6216 2B5A      		subi r18,-85
 14580 6218 3F4F      		sbci r19,-1
 14581 621a D901      		movw r26,r18
 14582 621c 2D91      		ld r18,X+
 14583 621e 3C91      		ld r19,X
 14584 6220 820F      		add r24,r18
 14585 6222 931F      		adc r25,r19
 14586 6224 FC01      		movw r30,r24
 14587 6226 8081      		ld r24,Z
 14588 6228 9181      		ldd r25,Z+1
 14589 622a A281      		ldd r26,Z+2
 14590 622c B381      		ldd r27,Z+3
 14591 622e B058      		subi r27,0x80
 14592 6230 2D8D      		ldd r18,Y+29
 14593 6232 3E8D      		ldd r19,Y+30
 14594 6234 4F8D      		ldd r20,Y+31
 14595 6236 58A1      		ldd r21,Y+32
 14596 6238 BC01      		movw r22,r24
 14597 623a CD01      		movw r24,r26
 14598 623c 0E94 0000 		call __divsf3
 14599 6240 DC01      		movw r26,r24
 14600 6242 CB01      		movw r24,r22
 14601 6244 89A3      		std Y+33,r24
 14602 6246 9AA3      		std Y+34,r25
 14603 6248 ABA3      		std Y+35,r26
 14604 624a BCA3      		std Y+36,r27
1502:lp_solve_5.5/lp_price.c **** 
1503:lp_solve_5.5/lp_price.c ****     /* Apply the selected pivot strategy (smallest theta) */
1504:lp_solve_5.5/lp_price.c ****     candidate.theta = quot;  /* Note that abs() is applied in findSubstitutionVar */
 14605               		.loc 1 1504 0
 14606 624c 89A1      		ldd r24,Y+33
 14607 624e 9AA1      		ldd r25,Y+34
 14608 6250 ABA1      		ldd r26,Y+35
 14609 6252 BCA1      		ldd r27,Y+36
 14610 6254 8CAF      		std Y+60,r24
 14611 6256 9DAF      		std Y+61,r25
 14612 6258 AEAF      		std Y+62,r26
 14613 625a BFAF      		std Y+63,r27
1505:lp_solve_5.5/lp_price.c ****     candidate.pivot = w;
 14614               		.loc 1 1505 0
 14615 625c 9E01      		movw r18,r28
 14616 625e 205C      		subi r18,-64
 14617 6260 3F4F      		sbci r19,-1
 14618 6262 8D8D      		ldd r24,Y+29
 14619 6264 9E8D      		ldd r25,Y+30
 14620 6266 AF8D      		ldd r26,Y+31
 14621 6268 B8A1      		ldd r27,Y+32
 14622 626a F901      		movw r30,r18
 14623 626c 8083      		st Z,r24
 14624 626e 9183      		std Z+1,r25
 14625 6270 A283      		std Z+2,r26
 14626 6272 B383      		std Z+3,r27
1506:lp_solve_5.5/lp_price.c ****     candidate.varno = i;
 14627               		.loc 1 1506 0
 14628 6274 CE01      		movw r24,r28
 14629 6276 885B      		subi r24,-72
 14630 6278 9F4F      		sbci r25,-1
 14631 627a 2981      		ldd r18,Y+1
 14632 627c 3A81      		ldd r19,Y+2
 14633 627e DC01      		movw r26,r24
 14634 6280 2D93      		st X+,r18
 14635 6282 3C93      		st X,r19
1507:lp_solve_5.5/lp_price.c **** 
1508:lp_solve_5.5/lp_price.c ****     /* Collect candidates for minor iterations/bound flips */
1509:lp_solve_5.5/lp_price.c ****     if(dolongsteps) {
 14636               		.loc 1 1509 0
 14637 6284 8C89      		ldd r24,Y+20
 14638 6286 8823      		tst r24
 14639 6288 01F4      		brne .+2
 14640 628a 00C0      		rjmp .L416
1510:lp_solve_5.5/lp_price.c ****       if(isbatch && (ix == iy))
 14641               		.loc 1 1510 0
 14642 628c 8B89      		ldd r24,Y+19
 14643 628e 8823      		tst r24
 14644 6290 01F0      		breq .L417
 14645               		.loc 1 1510 0 is_stmt 0 discriminator 1
 14646 6292 29A5      		ldd r18,Y+41
 14647 6294 3AA5      		ldd r19,Y+42
 14648 6296 8DA1      		ldd r24,Y+37
 14649 6298 9EA1      		ldd r25,Y+38
 14650 629a 2817      		cp r18,r24
 14651 629c 3907      		cpc r19,r25
 14652 629e 01F4      		brne .L417
1511:lp_solve_5.5/lp_price.c ****         isbatch = AUTOMATIC;
 14653               		.loc 1 1511 0 is_stmt 1
 14654 62a0 82E0      		ldi r24,lo8(2)
 14655 62a2 8B8B      		std Y+19,r24
 14656               	.L417:
1512:lp_solve_5.5/lp_price.c ****       if(collectMinorVar(&candidate, lp->longsteps, (MYBOOL) (dolongsteps == AUTOMATIC), isbatch) &
 14657               		.loc 1 1512 0
 14658 62a4 81E0      		ldi r24,lo8(1)
 14659 62a6 9C89      		ldd r25,Y+20
 14660 62a8 9230      		cpi r25,lo8(2)
 14661 62aa 01F0      		breq .L418
 14662 62ac 80E0      		ldi r24,0
 14663               	.L418:
 14664 62ae 382F      		mov r19,r24
 14665 62b0 CE01      		movw r24,r28
 14666 62b2 835B      		subi r24,-77
 14667 62b4 9F4F      		sbci r25,-1
 14668 62b6 FC01      		movw r30,r24
 14669 62b8 8081      		ld r24,Z
 14670 62ba 9181      		ldd r25,Z+1
 14671 62bc 8455      		subi r24,84
 14672 62be 9D4F      		sbci r25,-3
 14673 62c0 DC01      		movw r26,r24
 14674 62c2 6D91      		ld r22,X+
 14675 62c4 7C91      		ld r23,X
 14676 62c6 CE01      		movw r24,r28
 14677 62c8 CC96      		adiw r24,60
 14678 62ca 2B89      		ldd r18,Y+19
 14679 62cc 432F      		mov r20,r19
 14680 62ce 0E94 0000 		call collectMinorVar
 14681 62d2 8823      		tst r24
 14682 62d4 01F0      		breq .L419
1513:lp_solve_5.5/lp_price.c ****          lp->spx_trace)
 14683               		.loc 1 1513 0 discriminator 1
 14684 62d6 CE01      		movw r24,r28
 14685 62d8 835B      		subi r24,-77
 14686 62da 9F4F      		sbci r25,-1
 14687 62dc FC01      		movw r30,r24
 14688 62de 8081      		ld r24,Z
 14689 62e0 9181      		ldd r25,Z+1
 14690 62e2 8E5F      		subi r24,-2
 14691 62e4 9D4F      		sbci r25,-3
 14692 62e6 DC01      		movw r26,r24
 14693 62e8 8C91      		ld r24,X
1512:lp_solve_5.5/lp_price.c ****       if(collectMinorVar(&candidate, lp->longsteps, (MYBOOL) (dolongsteps == AUTOMATIC), isbatch) &
 14694               		.loc 1 1512 0 discriminator 1
 14695 62ea 8823      		tst r24
 14696 62ec 01F0      		breq .L419
1514:lp_solve_5.5/lp_price.c ****         report(lp, DETAILED, "coldual: Long-dual break point with %d bound-flip variables\n",
1515:lp_solve_5.5/lp_price.c ****                              lp->longsteps->used);
 14697               		.loc 1 1515 0
 14698 62ee CE01      		movw r24,r28
 14699 62f0 835B      		subi r24,-77
 14700 62f2 9F4F      		sbci r25,-1
 14701 62f4 FC01      		movw r30,r24
 14702 62f6 8081      		ld r24,Z
 14703 62f8 9181      		ldd r25,Z+1
 14704 62fa 8455      		subi r24,84
 14705 62fc 9D4F      		sbci r25,-3
 14706 62fe DC01      		movw r26,r24
 14707 6300 8D91      		ld r24,X+
 14708 6302 9C91      		ld r25,X
1514:lp_solve_5.5/lp_price.c ****         report(lp, DETAILED, "coldual: Long-dual break point with %d bound-flip variables\n",
 14709               		.loc 1 1514 0
 14710 6304 FC01      		movw r30,r24
 14711 6306 8481      		ldd r24,Z+4
 14712 6308 9581      		ldd r25,Z+5
 14713 630a 292F      		mov r18,r25
 14714 630c 2F93      		push r18
 14715 630e 8F93      		push r24
 14716 6310 80E0      		ldi r24,lo8(.LC12)
 14717 6312 90E0      		ldi r25,hi8(.LC12)
 14718 6314 892F      		mov r24,r25
 14719 6316 8F93      		push r24
 14720 6318 80E0      		ldi r24,lo8(.LC12)
 14721 631a 90E0      		ldi r25,hi8(.LC12)
 14722 631c 8F93      		push r24
 14723 631e 1F92      		push __zero_reg__
 14724 6320 85E0      		ldi r24,lo8(5)
 14725 6322 8F93      		push r24
 14726 6324 CE01      		movw r24,r28
 14727 6326 835B      		subi r24,-77
 14728 6328 9F4F      		sbci r25,-1
 14729 632a DC01      		movw r26,r24
 14730 632c 1196      		adiw r26,1
 14731 632e 2C91      		ld r18,X
 14732 6330 2F93      		push r18
 14733 6332 FC01      		movw r30,r24
 14734 6334 8081      		ld r24,Z
 14735 6336 8F93      		push r24
 14736 6338 0E94 0000 		call report
 14737 633c 2DB7      		in r18,__SP_L__
 14738 633e 3EB7      		in r19,__SP_H__
 14739 6340 285F      		subi r18,-8
 14740 6342 3F4F      		sbci r19,-1
 14741 6344 0FB6      		in __tmp_reg__,__SREG__
 14742 6346 F894      		cli
 14743 6348 DEBF      		out __SP_H__,r29
 14744 634a 0FBE      		out __SREG__,__tmp_reg__
 14745 634c CDBF      		out __SP_L__,r28
 14746               	.L419:
1516:lp_solve_5.5/lp_price.c ****       if(lp->spx_status == FATHOMED)
 14747               		.loc 1 1516 0
 14748 634e CE01      		movw r24,r28
 14749 6350 835B      		subi r24,-77
 14750 6352 9F4F      		sbci r25,-1
 14751 6354 DC01      		movw r26,r24
 14752 6356 8D91      		ld r24,X+
 14753 6358 9C91      		ld r25,X
 14754 635a 8A5F      		subi r24,-6
 14755 635c 9D4F      		sbci r25,-3
 14756 635e FC01      		movw r30,r24
 14757 6360 8081      		ld r24,Z
 14758 6362 9181      		ldd r25,Z+1
 14759 6364 0E97      		sbiw r24,14
 14760 6366 01F4      		brne .L420
1517:lp_solve_5.5/lp_price.c ****         return( 0 );
 14761               		.loc 1 1517 0
 14762 6368 80E0      		ldi r24,0
 14763 636a 90E0      		ldi r25,0
 14764 636c 00C0      		rjmp .L426
 14765               	.L416:
1518:lp_solve_5.5/lp_price.c ****     }
1519:lp_solve_5.5/lp_price.c **** 
1520:lp_solve_5.5/lp_price.c ****     /* We have a candidate for entering the basis; check if it is better than the incumbent */
1521:lp_solve_5.5/lp_price.c ****     else if(findSubstitutionVar(&current, &candidate, candidatecount))
 14766               		.loc 1 1521 0
 14767 636e CE01      		movw r24,r28
 14768 6370 855A      		subi r24,-91
 14769 6372 9F4F      		sbci r25,-1
 14770 6374 DC01      		movw r26,r24
 14771 6376 4D91      		ld r20,X+
 14772 6378 5C91      		ld r21,X
 14773 637a 9E01      		movw r18,r28
 14774 637c 245C      		subi r18,-60
 14775 637e 3F4F      		sbci r19,-1
 14776 6380 CE01      		movw r24,r28
 14777 6382 8B96      		adiw r24,43
 14778 6384 B901      		movw r22,r18
 14779 6386 0E94 0000 		call findSubstitutionVar
 14780 638a 8823      		tst r24
 14781 638c 01F4      		brne .L438
 14782               	.L420:
1496:lp_solve_5.5/lp_price.c ****     i = nzprow[ix];
 14783               		.loc 1 1496 0
 14784 638e 29A5      		ldd r18,Y+41
 14785 6390 3AA5      		ldd r19,Y+42
 14786 6392 8FA1      		ldd r24,Y+39
 14787 6394 98A5      		ldd r25,Y+40
 14788 6396 820F      		add r24,r18
 14789 6398 931F      		adc r25,r19
 14790 639a 9AA7      		std Y+42,r25
 14791 639c 89A7      		std Y+41,r24
 14792               	.L415:
1496:lp_solve_5.5/lp_price.c ****     i = nzprow[ix];
 14793               		.loc 1 1496 0 is_stmt 0 discriminator 1
 14794 639e 49A5      		ldd r20,Y+41
 14795 63a0 5AA5      		ldd r21,Y+42
 14796 63a2 8FA1      		ldd r24,Y+39
 14797 63a4 98A5      		ldd r25,Y+40
 14798 63a6 489F      		mul r20,r24
 14799 63a8 9001      		movw r18,r0
 14800 63aa 499F      		mul r20,r25
 14801 63ac 300D      		add r19,r0
 14802 63ae 589F      		mul r21,r24
 14803 63b0 300D      		add r19,r0
 14804 63b2 1124      		clr r1
 14805 63b4 8DA1      		ldd r24,Y+37
 14806 63b6 9EA1      		ldd r25,Y+38
 14807 63b8 8217      		cp r24,r18
 14808 63ba 9307      		cpc r25,r19
 14809 63bc 04F0      		brlt .+2
 14810 63be 00C0      		rjmp .L422
 14811 63c0 00C0      		rjmp .L421
 14812               	.L438:
1522:lp_solve_5.5/lp_price.c ****       break;
 14813               		.loc 1 1522 0 is_stmt 1
 14814 63c2 0000      		nop
 14815               	.L421:
1523:lp_solve_5.5/lp_price.c ****   }
1524:lp_solve_5.5/lp_price.c **** 
1525:lp_solve_5.5/lp_price.c ****   /* Set entering variable and long-step bound swap variables */
1526:lp_solve_5.5/lp_price.c ****   if(dolongsteps) {
 14816               		.loc 1 1526 0
 14817 63c4 8C89      		ldd r24,Y+20
 14818 63c6 8823      		tst r24
 14819 63c8 01F0      		breq .L423
1527:lp_solve_5.5/lp_price.c ****     *candidatecount = lp->longsteps->used;
 14820               		.loc 1 1527 0
 14821 63ca CE01      		movw r24,r28
 14822 63cc 835B      		subi r24,-77
 14823 63ce 9F4F      		sbci r25,-1
 14824 63d0 FC01      		movw r30,r24
 14825 63d2 8081      		ld r24,Z
 14826 63d4 9181      		ldd r25,Z+1
 14827 63d6 8455      		subi r24,84
 14828 63d8 9D4F      		sbci r25,-3
 14829 63da DC01      		movw r26,r24
 14830 63dc 8D91      		ld r24,X+
 14831 63de 9C91      		ld r25,X
 14832 63e0 FC01      		movw r30,r24
 14833 63e2 2481      		ldd r18,Z+4
 14834 63e4 3581      		ldd r19,Z+5
 14835 63e6 CE01      		movw r24,r28
 14836 63e8 855A      		subi r24,-91
 14837 63ea 9F4F      		sbci r25,-1
 14838 63ec DC01      		movw r26,r24
 14839 63ee 8D91      		ld r24,X+
 14840 63f0 9C91      		ld r25,X
 14841 63f2 FC01      		movw r30,r24
 14842 63f4 3183      		std Z+1,r19
 14843 63f6 2083      		st Z,r18
1528:lp_solve_5.5/lp_price.c ****     i = multi_enteringvar(lp->longsteps, NULL, 3);
 14844               		.loc 1 1528 0
 14845 63f8 CE01      		movw r24,r28
 14846 63fa 835B      		subi r24,-77
 14847 63fc 9F4F      		sbci r25,-1
 14848 63fe DC01      		movw r26,r24
 14849 6400 8D91      		ld r24,X+
 14850 6402 9C91      		ld r25,X
 14851 6404 8455      		subi r24,84
 14852 6406 9D4F      		sbci r25,-3
 14853 6408 FC01      		movw r30,r24
 14854 640a 8081      		ld r24,Z
 14855 640c 9181      		ldd r25,Z+1
 14856 640e 43E0      		ldi r20,lo8(3)
 14857 6410 50E0      		ldi r21,0
 14858 6412 60E0      		ldi r22,0
 14859 6414 70E0      		ldi r23,0
 14860 6416 0E94 0000 		call multi_enteringvar
 14861 641a 9A83      		std Y+2,r25
 14862 641c 8983      		std Y+1,r24
 14863 641e 00C0      		rjmp .L424
 14864               	.L423:
1529:lp_solve_5.5/lp_price.c ****   }
1530:lp_solve_5.5/lp_price.c ****   else
1531:lp_solve_5.5/lp_price.c ****     i = current.varno;
 14865               		.loc 1 1531 0
 14866 6420 8FA9      		ldd r24,Y+55
 14867 6422 98AD      		ldd r25,Y+56
 14868 6424 9A83      		std Y+2,r25
 14869 6426 8983      		std Y+1,r24
 14870               	.L424:
1532:lp_solve_5.5/lp_price.c **** 
1533:lp_solve_5.5/lp_price.c ****   if(lp->spx_trace)
 14871               		.loc 1 1533 0
 14872 6428 CE01      		movw r24,r28
 14873 642a 835B      		subi r24,-77
 14874 642c 9F4F      		sbci r25,-1
 14875 642e DC01      		movw r26,r24
 14876 6430 8D91      		ld r24,X+
 14877 6432 9C91      		ld r25,X
 14878 6434 8E5F      		subi r24,-2
 14879 6436 9D4F      		sbci r25,-3
 14880 6438 FC01      		movw r30,r24
 14881 643a 8081      		ld r24,Z
 14882 643c 8823      		tst r24
 14883 643e 01F4      		brne .+2
 14884 6440 00C0      		rjmp .L425
1534:lp_solve_5.5/lp_price.c ****     report(lp, NORMAL, "coldual: Entering column %d, reduced cost %g, pivot value %g, bound swaps %
 14885               		.loc 1 1534 0
 14886 6442 CE01      		movw r24,r28
 14887 6444 835B      		subi r24,-77
 14888 6446 9F4F      		sbci r25,-1
 14889 6448 DC01      		movw r26,r24
 14890 644a 8D91      		ld r24,X+
 14891 644c 9C91      		ld r25,X
 14892 644e 8455      		subi r24,84
 14893 6450 9D4F      		sbci r25,-3
 14894 6452 FC01      		movw r30,r24
 14895 6454 8081      		ld r24,Z
 14896 6456 9181      		ldd r25,Z+1
 14897 6458 0E94 0000 		call multi_used
 14898 645c 6F96      		adiw r28,93-62
 14899 645e 9FAF      		std Y+63,r25
 14900 6460 8EAF      		std Y+62,r24
 14901 6462 6F97      		sbiw r28,93-62
1535:lp_solve_5.5/lp_price.c ****                        i, drow[i], prow[i], multi_used(lp->longsteps));
 14902               		.loc 1 1535 0
 14903 6464 8981      		ldd r24,Y+1
 14904 6466 9A81      		ldd r25,Y+2
 14905 6468 880F      		lsl r24
 14906 646a 991F      		rol r25
 14907 646c 880F      		lsl r24
 14908 646e 991F      		rol r25
 14909 6470 9E01      		movw r18,r28
 14910 6472 2F5A      		subi r18,-81
 14911 6474 3F4F      		sbci r19,-1
 14912 6476 D901      		movw r26,r18
 14913 6478 2D91      		ld r18,X+
 14914 647a 3C91      		ld r19,X
 14915 647c 820F      		add r24,r18
 14916 647e 931F      		adc r25,r19
1534:lp_solve_5.5/lp_price.c ****     report(lp, NORMAL, "coldual: Entering column %d, reduced cost %g, pivot value %g, bound swaps %
 14917               		.loc 1 1534 0
 14918 6480 FC01      		movw r30,r24
 14919 6482 2081      		ld r18,Z
 14920 6484 3181      		ldd r19,Z+1
 14921 6486 4281      		ldd r20,Z+2
 14922 6488 5381      		ldd r21,Z+3
 14923               		.loc 1 1535 0
 14924 648a 8981      		ldd r24,Y+1
 14925 648c 9A81      		ldd r25,Y+2
 14926 648e 880F      		lsl r24
 14927 6490 991F      		rol r25
 14928 6492 880F      		lsl r24
 14929 6494 991F      		rol r25
 14930 6496 BE01      		movw r22,r28
 14931 6498 6B5A      		subi r22,-85
 14932 649a 7F4F      		sbci r23,-1
 14933 649c DB01      		movw r26,r22
 14934 649e 6D91      		ld r22,X+
 14935 64a0 7C91      		ld r23,X
 14936 64a2 860F      		add r24,r22
 14937 64a4 971F      		adc r25,r23
1534:lp_solve_5.5/lp_price.c ****     report(lp, NORMAL, "coldual: Entering column %d, reduced cost %g, pivot value %g, bound swaps %
 14938               		.loc 1 1534 0
 14939 64a6 FC01      		movw r30,r24
 14940 64a8 8081      		ld r24,Z
 14941 64aa 9181      		ldd r25,Z+1
 14942 64ac A281      		ldd r26,Z+2
 14943 64ae B381      		ldd r27,Z+3
 14944 64b0 6F96      		adiw r28,94-63
 14945 64b2 6FAD      		ldd r22,Y+63
 14946 64b4 6F97      		sbiw r28,94-63
 14947 64b6 6F93      		push r22
 14948 64b8 6E96      		adiw r28,93-63
 14949 64ba 6FAD      		ldd r22,Y+63
 14950 64bc 6E97      		sbiw r28,93-63
 14951 64be 6F93      		push r22
 14952 64c0 652F      		mov r22,r21
 14953 64c2 6F93      		push r22
 14954 64c4 642F      		mov r22,r20
 14955 64c6 6F93      		push r22
 14956 64c8 632F      		mov r22,r19
 14957 64ca 6F93      		push r22
 14958 64cc 2F93      		push r18
 14959 64ce 2B2F      		mov r18,r27
 14960 64d0 2F93      		push r18
 14961 64d2 2A2F      		mov r18,r26
 14962 64d4 2F93      		push r18
 14963 64d6 292F      		mov r18,r25
 14964 64d8 2F93      		push r18
 14965 64da 8F93      		push r24
 14966 64dc 8A81      		ldd r24,Y+2
 14967 64de 8F93      		push r24
 14968 64e0 8981      		ldd r24,Y+1
 14969 64e2 8F93      		push r24
 14970 64e4 80E0      		ldi r24,lo8(.LC13)
 14971 64e6 90E0      		ldi r25,hi8(.LC13)
 14972 64e8 892F      		mov r24,r25
 14973 64ea 8F93      		push r24
 14974 64ec 80E0      		ldi r24,lo8(.LC13)
 14975 64ee 90E0      		ldi r25,hi8(.LC13)
 14976 64f0 8F93      		push r24
 14977 64f2 1F92      		push __zero_reg__
 14978 64f4 84E0      		ldi r24,lo8(4)
 14979 64f6 8F93      		push r24
 14980 64f8 CE01      		movw r24,r28
 14981 64fa 835B      		subi r24,-77
 14982 64fc 9F4F      		sbci r25,-1
 14983 64fe DC01      		movw r26,r24
 14984 6500 1196      		adiw r26,1
 14985 6502 2C91      		ld r18,X
 14986 6504 2F93      		push r18
 14987 6506 FC01      		movw r30,r24
 14988 6508 8081      		ld r24,Z
 14989 650a 8F93      		push r24
 14990 650c 0E94 0000 		call report
 14991 6510 2DB7      		in r18,__SP_L__
 14992 6512 3EB7      		in r19,__SP_H__
 14993 6514 2E5E      		subi r18,-18
 14994 6516 3F4F      		sbci r19,-1
 14995 6518 0FB6      		in __tmp_reg__,__SREG__
 14996 651a F894      		cli
 14997 651c DEBF      		out __SP_H__,r29
 14998 651e 0FBE      		out __SREG__,__tmp_reg__
 14999 6520 CDBF      		out __SP_L__,r28
 15000               	.L425:
1536:lp_solve_5.5/lp_price.c **** 
1537:lp_solve_5.5/lp_price.c ****   return( i );
 15001               		.loc 1 1537 0
 15002 6522 8981      		ldd r24,Y+1
 15003 6524 9A81      		ldd r25,Y+2
 15004               	.L426:
 15005               	/* epilogue start */
1538:lp_solve_5.5/lp_price.c **** } /* coldual */
 15006               		.loc 1 1538 0 discriminator 1
 15007 6526 C25A      		subi r28,-94
 15008 6528 DF4F      		sbci r29,-1
 15009 652a 0FB6      		in __tmp_reg__,__SREG__
 15010 652c F894      		cli
 15011 652e DEBF      		out __SP_H__,r29
 15012 6530 0FBE      		out __SREG__,__tmp_reg__
 15013 6532 CDBF      		out __SP_L__,r28
 15014 6534 DF91      		pop r29
 15015 6536 CF91      		pop r28
 15016 6538 1F91      		pop r17
 15017 653a 0F91      		pop r16
 15018 653c FF90      		pop r15
 15019 653e EF90      		pop r14
 15020 6540 DF90      		pop r13
 15021 6542 CF90      		pop r12
 15022 6544 BF90      		pop r11
 15023 6546 AF90      		pop r10
 15024 6548 9F90      		pop r9
 15025 654a 8F90      		pop r8
 15026 654c 0895      		ret
 15027               		.cfi_endproc
 15028               	.LFE32:
 15031               	normalizeEdge:
 15032               	.LFB33:
1539:lp_solve_5.5/lp_price.c **** 
1540:lp_solve_5.5/lp_price.c **** 
1541:lp_solve_5.5/lp_price.c **** INLINE REAL normalizeEdge(lprec *lp, int item, REAL edge, MYBOOL isdual)
1542:lp_solve_5.5/lp_price.c **** {
 15033               		.loc 1 1542 0
 15034               		.cfi_startproc
 15035 654e 0F93      		push r16
 15036               	.LCFI253:
 15037               		.cfi_def_cfa_offset 3
 15038               		.cfi_offset 16, -2
 15039 6550 CF93      		push r28
 15040               	.LCFI254:
 15041               		.cfi_def_cfa_offset 4
 15042               		.cfi_offset 28, -3
 15043 6552 DF93      		push r29
 15044               	.LCFI255:
 15045               		.cfi_def_cfa_offset 5
 15046               		.cfi_offset 29, -4
 15047 6554 CDB7      		in r28,__SP_L__
 15048 6556 DEB7      		in r29,__SP_H__
 15049               	.LCFI256:
 15050               		.cfi_def_cfa_register 28
 15051 6558 2997      		sbiw r28,9
 15052               	.LCFI257:
 15053               		.cfi_def_cfa_offset 14
 15054 655a 0FB6      		in __tmp_reg__,__SREG__
 15055 655c F894      		cli
 15056 655e DEBF      		out __SP_H__,r29
 15057 6560 0FBE      		out __SREG__,__tmp_reg__
 15058 6562 CDBF      		out __SP_L__,r28
 15059               	/* prologue: function */
 15060               	/* frame size = 9 */
 15061               	/* stack size = 12 */
 15062               	.L__stack_usage = 12
 15063 6564 9A83      		std Y+2,r25
 15064 6566 8983      		std Y+1,r24
 15065 6568 7C83      		std Y+4,r23
 15066 656a 6B83      		std Y+3,r22
 15067 656c 2D83      		std Y+5,r18
 15068 656e 3E83      		std Y+6,r19
 15069 6570 4F83      		std Y+7,r20
 15070 6572 5887      		std Y+8,r21
 15071 6574 0987      		std Y+9,r16
1543:lp_solve_5.5/lp_price.c **** #if 1
1544:lp_solve_5.5/lp_price.c ****   /* Don't use the pricer "close to home", since this can possibly
1545:lp_solve_5.5/lp_price.c ****     worsen the final feasibility picture (mainly a Devex issue?) */
1546:lp_solve_5.5/lp_price.c ****   if(fabs(edge) > lp->epssolution)
 15072               		.loc 1 1546 0
 15073 6576 8D81      		ldd r24,Y+5
 15074 6578 9E81      		ldd r25,Y+6
 15075 657a AF81      		ldd r26,Y+7
 15076 657c B885      		ldd r27,Y+8
 15077 657e BF77      		andi r27,0x7f
 15078 6580 2981      		ldd r18,Y+1
 15079 6582 3A81      		ldd r19,Y+2
 15080 6584 265D      		subi r18,-42
 15081 6586 3C4F      		sbci r19,-4
 15082 6588 F901      		movw r30,r18
 15083 658a 2081      		ld r18,Z
 15084 658c 3181      		ldd r19,Z+1
 15085 658e 4281      		ldd r20,Z+2
 15086 6590 5381      		ldd r21,Z+3
 15087 6592 BC01      		movw r22,r24
 15088 6594 CD01      		movw r24,r26
 15089 6596 0E94 0000 		call __gtsf2
 15090 659a 1816      		cp __zero_reg__,r24
 15091 659c 04F4      		brge .L440
1547:lp_solve_5.5/lp_price.c **** #endif
1548:lp_solve_5.5/lp_price.c ****     edge /= getPricer(lp, item, isdual);
 15092               		.loc 1 1548 0
 15093 659e 2B81      		ldd r18,Y+3
 15094 65a0 3C81      		ldd r19,Y+4
 15095 65a2 8981      		ldd r24,Y+1
 15096 65a4 9A81      		ldd r25,Y+2
 15097 65a6 4985      		ldd r20,Y+9
 15098 65a8 B901      		movw r22,r18
 15099 65aa 0E94 0000 		call getPricer
 15100 65ae DC01      		movw r26,r24
 15101 65b0 CB01      		movw r24,r22
 15102 65b2 9C01      		movw r18,r24
 15103 65b4 AD01      		movw r20,r26
 15104 65b6 6D81      		ldd r22,Y+5
 15105 65b8 7E81      		ldd r23,Y+6
 15106 65ba 8F81      		ldd r24,Y+7
 15107 65bc 9885      		ldd r25,Y+8
 15108 65be 0E94 0000 		call __divsf3
 15109 65c2 DC01      		movw r26,r24
 15110 65c4 CB01      		movw r24,r22
 15111 65c6 8D83      		std Y+5,r24
 15112 65c8 9E83      		std Y+6,r25
 15113 65ca AF83      		std Y+7,r26
 15114 65cc B887      		std Y+8,r27
 15115               	.L440:
1549:lp_solve_5.5/lp_price.c ****   if((lp->piv_strategy & PRICE_RANDOMIZE) != 0)
 15116               		.loc 1 1549 0
 15117 65ce 8981      		ldd r24,Y+1
 15118 65d0 9A81      		ldd r25,Y+2
 15119 65d2 805A      		subi r24,-96
 15120 65d4 9D4F      		sbci r25,-3
 15121 65d6 FC01      		movw r30,r24
 15122 65d8 8081      		ld r24,Z
 15123 65da 9181      		ldd r25,Z+1
 15124 65dc 8078      		andi r24,128
 15125 65de 9927      		clr r25
 15126 65e0 892B      		or r24,r25
 15127 65e2 01F0      		breq .L442
1550:lp_solve_5.5/lp_price.c ****     edge *= (1.0-PRICER_RANDFACT) + PRICER_RANDFACT*rand_uniform(lp, 1.0);
 15128               		.loc 1 1550 0
 15129 65e4 8981      		ldd r24,Y+1
 15130 65e6 9A81      		ldd r25,Y+2
 15131 65e8 40E0      		ldi r20,0
 15132 65ea 50E0      		ldi r21,0
 15133 65ec 60E8      		ldi r22,lo8(-128)
 15134 65ee 7FE3      		ldi r23,lo8(63)
 15135 65f0 0E94 0000 		call rand_uniform
 15136 65f4 DC01      		movw r26,r24
 15137 65f6 CB01      		movw r24,r22
 15138 65f8 2DEC      		ldi r18,lo8(-51)
 15139 65fa 3CEC      		ldi r19,lo8(-52)
 15140 65fc 4CEC      		ldi r20,lo8(-52)
 15141 65fe 5DE3      		ldi r21,lo8(61)
 15142 6600 BC01      		movw r22,r24
 15143 6602 CD01      		movw r24,r26
 15144 6604 0E94 0000 		call __mulsf3
 15145 6608 DC01      		movw r26,r24
 15146 660a CB01      		movw r24,r22
 15147 660c 26E6      		ldi r18,lo8(102)
 15148 660e 36E6      		ldi r19,lo8(102)
 15149 6610 46E6      		ldi r20,lo8(102)
 15150 6612 5FE3      		ldi r21,lo8(63)
 15151 6614 BC01      		movw r22,r24
 15152 6616 CD01      		movw r24,r26
 15153 6618 0E94 0000 		call __addsf3
 15154 661c DC01      		movw r26,r24
 15155 661e CB01      		movw r24,r22
 15156 6620 9C01      		movw r18,r24
 15157 6622 AD01      		movw r20,r26
 15158 6624 6D81      		ldd r22,Y+5
 15159 6626 7E81      		ldd r23,Y+6
 15160 6628 8F81      		ldd r24,Y+7
 15161 662a 9885      		ldd r25,Y+8
 15162 662c 0E94 0000 		call __mulsf3
 15163 6630 DC01      		movw r26,r24
 15164 6632 CB01      		movw r24,r22
 15165 6634 8D83      		std Y+5,r24
 15166 6636 9E83      		std Y+6,r25
 15167 6638 AF83      		std Y+7,r26
 15168 663a B887      		std Y+8,r27
 15169               	.L442:
1551:lp_solve_5.5/lp_price.c ****   return( edge );
 15170               		.loc 1 1551 0
 15171 663c 8D81      		ldd r24,Y+5
 15172 663e 9E81      		ldd r25,Y+6
 15173 6640 AF81      		ldd r26,Y+7
 15174 6642 B885      		ldd r27,Y+8
1552:lp_solve_5.5/lp_price.c **** 
1553:lp_solve_5.5/lp_price.c **** }
 15175               		.loc 1 1553 0
 15176 6644 BC01      		movw r22,r24
 15177 6646 CD01      		movw r24,r26
 15178               	/* epilogue start */
 15179 6648 2996      		adiw r28,9
 15180 664a 0FB6      		in __tmp_reg__,__SREG__
 15181 664c F894      		cli
 15182 664e DEBF      		out __SP_H__,r29
 15183 6650 0FBE      		out __SREG__,__tmp_reg__
 15184 6652 CDBF      		out __SP_L__,r28
 15185 6654 DF91      		pop r29
 15186 6656 CF91      		pop r28
 15187 6658 0F91      		pop r16
 15188 665a 0895      		ret
 15189               		.cfi_endproc
 15190               	.LFE33:
 15192               	.global	partial_findBlocks
 15194               	partial_findBlocks:
 15195               	.LFB34:
1554:lp_solve_5.5/lp_price.c **** 
1555:lp_solve_5.5/lp_price.c **** /* Support routines for block detection and partial pricing */
1556:lp_solve_5.5/lp_price.c **** STATIC int partial_findBlocks(lprec *lp, MYBOOL autodefine, MYBOOL isrow)
1557:lp_solve_5.5/lp_price.c **** {
 15196               		.loc 1 1557 0
 15197               		.cfi_startproc
 15198 665c CF92      		push r12
 15199               	.LCFI258:
 15200               		.cfi_def_cfa_offset 3
 15201               		.cfi_offset 12, -2
 15202 665e DF92      		push r13
 15203               	.LCFI259:
 15204               		.cfi_def_cfa_offset 4
 15205               		.cfi_offset 13, -3
 15206 6660 EF92      		push r14
 15207               	.LCFI260:
 15208               		.cfi_def_cfa_offset 5
 15209               		.cfi_offset 14, -4
 15210 6662 FF92      		push r15
 15211               	.LCFI261:
 15212               		.cfi_def_cfa_offset 6
 15213               		.cfi_offset 15, -5
 15214 6664 0F93      		push r16
 15215               	.LCFI262:
 15216               		.cfi_def_cfa_offset 7
 15217               		.cfi_offset 16, -6
 15218 6666 1F93      		push r17
 15219               	.LCFI263:
 15220               		.cfi_def_cfa_offset 8
 15221               		.cfi_offset 17, -7
 15222 6668 CF93      		push r28
 15223               	.LCFI264:
 15224               		.cfi_def_cfa_offset 9
 15225               		.cfi_offset 28, -8
 15226 666a DF93      		push r29
 15227               	.LCFI265:
 15228               		.cfi_def_cfa_offset 10
 15229               		.cfi_offset 29, -9
 15230 666c CDB7      		in r28,__SP_L__
 15231 666e DEB7      		in r29,__SP_H__
 15232               	.LCFI266:
 15233               		.cfi_def_cfa_register 28
 15234 6670 6E97      		sbiw r28,30
 15235               	.LCFI267:
 15236               		.cfi_def_cfa_offset 40
 15237 6672 0FB6      		in __tmp_reg__,__SREG__
 15238 6674 F894      		cli
 15239 6676 DEBF      		out __SP_H__,r29
 15240 6678 0FBE      		out __SREG__,__tmp_reg__
 15241 667a CDBF      		out __SP_L__,r28
 15242               	/* prologue: function */
 15243               	/* frame size = 30 */
 15244               	/* stack size = 38 */
 15245               	.L__stack_usage = 38
 15246 667c 9C8F      		std Y+28,r25
 15247 667e 8B8F      		std Y+27,r24
 15248 6680 6D8F      		std Y+29,r22
 15249 6682 4E8F      		std Y+30,r20
1558:lp_solve_5.5/lp_price.c ****   int    i, jj, n, nb, ne, items;
1559:lp_solve_5.5/lp_price.c ****   REAL   hold, biggest, *sum = NULL;
 15250               		.loc 1 1559 0
 15251 6684 1A8E      		std Y+26,__zero_reg__
 15252 6686 198E      		std Y+25,__zero_reg__
1560:lp_solve_5.5/lp_price.c ****   MATrec *mat = lp->matA;
 15253               		.loc 1 1560 0
 15254 6688 8B8D      		ldd r24,Y+27
 15255 668a 9C8D      		ldd r25,Y+28
 15256 668c 8A54      		subi r24,74
 15257 668e 9D4F      		sbci r25,-3
 15258 6690 FC01      		movw r30,r24
 15259 6692 8081      		ld r24,Z
 15260 6694 9181      		ldd r25,Z+1
 15261 6696 9C8B      		std Y+20,r25
 15262 6698 8B8B      		std Y+19,r24
1561:lp_solve_5.5/lp_price.c ****   partialrec *blockdata;
1562:lp_solve_5.5/lp_price.c **** 
1563:lp_solve_5.5/lp_price.c ****   if(!mat_validate(mat))
 15263               		.loc 1 1563 0
 15264 669a 8B89      		ldd r24,Y+19
 15265 669c 9C89      		ldd r25,Y+20
 15266 669e 0E94 0000 		call mat_validate
 15267 66a2 8823      		tst r24
 15268 66a4 01F4      		brne .L446
1564:lp_solve_5.5/lp_price.c ****     return( 1 );
 15269               		.loc 1 1564 0
 15270 66a6 81E0      		ldi r24,lo8(1)
 15271 66a8 90E0      		ldi r25,0
 15272 66aa 00C0      		rjmp .L486
 15273               	.L446:
1565:lp_solve_5.5/lp_price.c **** 
1566:lp_solve_5.5/lp_price.c ****   blockdata = IF(isrow, lp->rowblocks, lp->colblocks);
 15274               		.loc 1 1566 0
 15275 66ac 8E8D      		ldd r24,Y+30
 15276 66ae 8823      		tst r24
 15277 66b0 01F0      		breq .L448
 15278               		.loc 1 1566 0 is_stmt 0 discriminator 1
 15279 66b2 8B8D      		ldd r24,Y+27
 15280 66b4 9C8D      		ldd r25,Y+28
 15281 66b6 8E57      		subi r24,126
 15282 66b8 9D4F      		sbci r25,-3
 15283 66ba FC01      		movw r30,r24
 15284 66bc 8081      		ld r24,Z
 15285 66be 9181      		ldd r25,Z+1
 15286 66c0 00C0      		rjmp .L449
 15287               	.L448:
 15288               		.loc 1 1566 0 discriminator 2
 15289 66c2 8B8D      		ldd r24,Y+27
 15290 66c4 9C8D      		ldd r25,Y+28
 15291 66c6 8C57      		subi r24,124
 15292 66c8 9D4F      		sbci r25,-3
 15293 66ca FC01      		movw r30,r24
 15294 66cc 8081      		ld r24,Z
 15295 66ce 9181      		ldd r25,Z+1
 15296               	.L449:
 15297               		.loc 1 1566 0 discriminator 4
 15298 66d0 9E8B      		std Y+22,r25
 15299 66d2 8D8B      		std Y+21,r24
1567:lp_solve_5.5/lp_price.c ****   items     = IF(isrow, lp->rows, lp->columns);
 15300               		.loc 1 1567 0 is_stmt 1 discriminator 4
 15301 66d4 8E8D      		ldd r24,Y+30
 15302 66d6 8823      		tst r24
 15303 66d8 01F0      		breq .L450
 15304               		.loc 1 1567 0 is_stmt 0 discriminator 1
 15305 66da 8B8D      		ldd r24,Y+27
 15306 66dc 9C8D      		ldd r25,Y+28
 15307 66de 8651      		subi r24,22
 15308 66e0 9E4F      		sbci r25,-2
 15309 66e2 FC01      		movw r30,r24
 15310 66e4 8081      		ld r24,Z
 15311 66e6 9181      		ldd r25,Z+1
 15312 66e8 00C0      		rjmp .L451
 15313               	.L450:
 15314               		.loc 1 1567 0 discriminator 2
 15315 66ea 8B8D      		ldd r24,Y+27
 15316 66ec 9C8D      		ldd r25,Y+28
 15317 66ee 8451      		subi r24,20
 15318 66f0 9E4F      		sbci r25,-2
 15319 66f2 FC01      		movw r30,r24
 15320 66f4 8081      		ld r24,Z
 15321 66f6 9181      		ldd r25,Z+1
 15322               	.L451:
 15323               		.loc 1 1567 0 discriminator 4
 15324 66f8 988F      		std Y+24,r25
 15325 66fa 8F8B      		std Y+23,r24
1568:lp_solve_5.5/lp_price.c ****   allocREAL(lp, &sum, items+1, FALSE);
 15326               		.loc 1 1568 0 is_stmt 1 discriminator 4
 15327 66fc 8F89      		ldd r24,Y+23
 15328 66fe 988D      		ldd r25,Y+24
 15329 6700 AC01      		movw r20,r24
 15330 6702 4F5F      		subi r20,-1
 15331 6704 5F4F      		sbci r21,-1
 15332 6706 BE01      		movw r22,r28
 15333 6708 675E      		subi r22,-25
 15334 670a 7F4F      		sbci r23,-1
 15335 670c 8B8D      		ldd r24,Y+27
 15336 670e 9C8D      		ldd r25,Y+28
 15337 6710 20E0      		ldi r18,0
 15338 6712 0E94 0000 		call allocREAL
1569:lp_solve_5.5/lp_price.c **** 
1570:lp_solve_5.5/lp_price.c ****   /* Loop over items and compute the average column index for each */
1571:lp_solve_5.5/lp_price.c ****   sum[0] = 0;
 15339               		.loc 1 1571 0 discriminator 4
 15340 6716 898D      		ldd r24,Y+25
 15341 6718 9A8D      		ldd r25,Y+26
 15342 671a FC01      		movw r30,r24
 15343 671c 1082      		st Z,__zero_reg__
 15344 671e 1182      		std Z+1,__zero_reg__
 15345 6720 1282      		std Z+2,__zero_reg__
 15346 6722 1382      		std Z+3,__zero_reg__
1572:lp_solve_5.5/lp_price.c ****   for(i = 1; i <= items; i++) {
 15347               		.loc 1 1572 0 discriminator 4
 15348 6724 81E0      		ldi r24,lo8(1)
 15349 6726 90E0      		ldi r25,0
 15350 6728 9A83      		std Y+2,r25
 15351 672a 8983      		std Y+1,r24
 15352 672c 00C0      		rjmp .L452
 15353               	.L463:
1573:lp_solve_5.5/lp_price.c ****     n = 0;
 15354               		.loc 1 1573 0
 15355 672e 1E82      		std Y+6,__zero_reg__
 15356 6730 1D82      		std Y+5,__zero_reg__
1574:lp_solve_5.5/lp_price.c ****     if(isrow) {
 15357               		.loc 1 1574 0
 15358 6732 8E8D      		ldd r24,Y+30
 15359 6734 8823      		tst r24
 15360 6736 01F0      		breq .L453
1575:lp_solve_5.5/lp_price.c ****       nb = mat->row_end[i-1];
 15361               		.loc 1 1575 0
 15362 6738 8B89      		ldd r24,Y+19
 15363 673a 9C89      		ldd r25,Y+20
 15364 673c FC01      		movw r30,r24
 15365 673e 208D      		ldd r18,Z+24
 15366 6740 318D      		ldd r19,Z+25
 15367 6742 8981      		ldd r24,Y+1
 15368 6744 9A81      		ldd r25,Y+2
 15369 6746 8150      		subi r24,1
 15370 6748 9048      		sbci r25,-128
 15371 674a 880F      		lsl r24
 15372 674c 991F      		rol r25
 15373 674e 820F      		add r24,r18
 15374 6750 931F      		adc r25,r19
 15375 6752 FC01      		movw r30,r24
 15376 6754 8081      		ld r24,Z
 15377 6756 9181      		ldd r25,Z+1
 15378 6758 9887      		std Y+8,r25
 15379 675a 8F83      		std Y+7,r24
1576:lp_solve_5.5/lp_price.c ****       ne = mat->row_end[i];
 15380               		.loc 1 1576 0
 15381 675c 8B89      		ldd r24,Y+19
 15382 675e 9C89      		ldd r25,Y+20
 15383 6760 FC01      		movw r30,r24
 15384 6762 208D      		ldd r18,Z+24
 15385 6764 318D      		ldd r19,Z+25
 15386 6766 8981      		ldd r24,Y+1
 15387 6768 9A81      		ldd r25,Y+2
 15388 676a 880F      		lsl r24
 15389 676c 991F      		rol r25
 15390 676e 820F      		add r24,r18
 15391 6770 931F      		adc r25,r19
 15392 6772 FC01      		movw r30,r24
 15393 6774 8081      		ld r24,Z
 15394 6776 9181      		ldd r25,Z+1
 15395 6778 9A87      		std Y+10,r25
 15396 677a 8987      		std Y+9,r24
 15397 677c 00C0      		rjmp .L454
 15398               	.L453:
1577:lp_solve_5.5/lp_price.c ****     }
1578:lp_solve_5.5/lp_price.c ****     else {
1579:lp_solve_5.5/lp_price.c ****       nb = mat->col_end[i-1];
 15399               		.loc 1 1579 0
 15400 677e 8B89      		ldd r24,Y+19
 15401 6780 9C89      		ldd r25,Y+20
 15402 6782 FC01      		movw r30,r24
 15403 6784 2289      		ldd r18,Z+18
 15404 6786 3389      		ldd r19,Z+19
 15405 6788 8981      		ldd r24,Y+1
 15406 678a 9A81      		ldd r25,Y+2
 15407 678c 8150      		subi r24,1
 15408 678e 9048      		sbci r25,-128
 15409 6790 880F      		lsl r24
 15410 6792 991F      		rol r25
 15411 6794 820F      		add r24,r18
 15412 6796 931F      		adc r25,r19
 15413 6798 FC01      		movw r30,r24
 15414 679a 8081      		ld r24,Z
 15415 679c 9181      		ldd r25,Z+1
 15416 679e 9887      		std Y+8,r25
 15417 67a0 8F83      		std Y+7,r24
1580:lp_solve_5.5/lp_price.c ****       ne = mat->col_end[i];
 15418               		.loc 1 1580 0
 15419 67a2 8B89      		ldd r24,Y+19
 15420 67a4 9C89      		ldd r25,Y+20
 15421 67a6 FC01      		movw r30,r24
 15422 67a8 2289      		ldd r18,Z+18
 15423 67aa 3389      		ldd r19,Z+19
 15424 67ac 8981      		ldd r24,Y+1
 15425 67ae 9A81      		ldd r25,Y+2
 15426 67b0 880F      		lsl r24
 15427 67b2 991F      		rol r25
 15428 67b4 820F      		add r24,r18
 15429 67b6 931F      		adc r25,r19
 15430 67b8 FC01      		movw r30,r24
 15431 67ba 8081      		ld r24,Z
 15432 67bc 9181      		ldd r25,Z+1
 15433 67be 9A87      		std Y+10,r25
 15434 67c0 8987      		std Y+9,r24
 15435               	.L454:
1581:lp_solve_5.5/lp_price.c ****     }
1582:lp_solve_5.5/lp_price.c ****     n = ne-nb;
 15436               		.loc 1 1582 0
 15437 67c2 2985      		ldd r18,Y+9
 15438 67c4 3A85      		ldd r19,Y+10
 15439 67c6 8F81      		ldd r24,Y+7
 15440 67c8 9885      		ldd r25,Y+8
 15441 67ca A901      		movw r20,r18
 15442 67cc 481B      		sub r20,r24
 15443 67ce 590B      		sbc r21,r25
 15444 67d0 CA01      		movw r24,r20
 15445 67d2 9E83      		std Y+6,r25
 15446 67d4 8D83      		std Y+5,r24
1583:lp_solve_5.5/lp_price.c ****     sum[i] = 0;
 15447               		.loc 1 1583 0
 15448 67d6 298D      		ldd r18,Y+25
 15449 67d8 3A8D      		ldd r19,Y+26
 15450 67da 8981      		ldd r24,Y+1
 15451 67dc 9A81      		ldd r25,Y+2
 15452 67de 880F      		lsl r24
 15453 67e0 991F      		rol r25
 15454 67e2 880F      		lsl r24
 15455 67e4 991F      		rol r25
 15456 67e6 820F      		add r24,r18
 15457 67e8 931F      		adc r25,r19
 15458 67ea FC01      		movw r30,r24
 15459 67ec 1082      		st Z,__zero_reg__
 15460 67ee 1182      		std Z+1,__zero_reg__
 15461 67f0 1282      		std Z+2,__zero_reg__
 15462 67f2 1382      		std Z+3,__zero_reg__
1584:lp_solve_5.5/lp_price.c ****     if(n > 0) {
 15463               		.loc 1 1584 0
 15464 67f4 8D81      		ldd r24,Y+5
 15465 67f6 9E81      		ldd r25,Y+6
 15466 67f8 1816      		cp __zero_reg__,r24
 15467 67fa 1906      		cpc __zero_reg__,r25
 15468 67fc 04F0      		brlt .+2
 15469 67fe 00C0      		rjmp .L455
1585:lp_solve_5.5/lp_price.c ****       if(isrow)
 15470               		.loc 1 1585 0
 15471 6800 8E8D      		ldd r24,Y+30
 15472 6802 8823      		tst r24
 15473 6804 01F4      		brne .+2
 15474 6806 00C0      		rjmp .L456
1586:lp_solve_5.5/lp_price.c ****         for(jj = nb; jj < ne; jj++)
 15475               		.loc 1 1586 0
 15476 6808 8F81      		ldd r24,Y+7
 15477 680a 9885      		ldd r25,Y+8
 15478 680c 9C83      		std Y+4,r25
 15479 680e 8B83      		std Y+3,r24
 15480 6810 00C0      		rjmp .L457
 15481               	.L458:
1587:lp_solve_5.5/lp_price.c ****           sum[i] += ROW_MAT_COLNR(jj);
 15482               		.loc 1 1587 0 discriminator 3
 15483 6812 298D      		ldd r18,Y+25
 15484 6814 3A8D      		ldd r19,Y+26
 15485 6816 8981      		ldd r24,Y+1
 15486 6818 9A81      		ldd r25,Y+2
 15487 681a 880F      		lsl r24
 15488 681c 991F      		rol r25
 15489 681e 880F      		lsl r24
 15490 6820 991F      		rol r25
 15491 6822 8901      		movw r16,r18
 15492 6824 080F      		add r16,r24
 15493 6826 191F      		adc r17,r25
 15494 6828 298D      		ldd r18,Y+25
 15495 682a 3A8D      		ldd r19,Y+26
 15496 682c 8981      		ldd r24,Y+1
 15497 682e 9A81      		ldd r25,Y+2
 15498 6830 880F      		lsl r24
 15499 6832 991F      		rol r25
 15500 6834 880F      		lsl r24
 15501 6836 991F      		rol r25
 15502 6838 820F      		add r24,r18
 15503 683a 931F      		adc r25,r19
 15504 683c FC01      		movw r30,r24
 15505 683e C080      		ld r12,Z
 15506 6840 D180      		ldd r13,Z+1
 15507 6842 E280      		ldd r14,Z+2
 15508 6844 F380      		ldd r15,Z+3
 15509 6846 8B89      		ldd r24,Y+19
 15510 6848 9C89      		ldd r25,Y+20
 15511 684a FC01      		movw r30,r24
 15512 684c 2485      		ldd r18,Z+12
 15513 684e 3585      		ldd r19,Z+13
 15514 6850 8B89      		ldd r24,Y+19
 15515 6852 9C89      		ldd r25,Y+20
 15516 6854 FC01      		movw r30,r24
 15517 6856 4689      		ldd r20,Z+22
 15518 6858 5789      		ldd r21,Z+23
 15519 685a 8B81      		ldd r24,Y+3
 15520 685c 9C81      		ldd r25,Y+4
 15521 685e 880F      		lsl r24
 15522 6860 991F      		rol r25
 15523 6862 840F      		add r24,r20
 15524 6864 951F      		adc r25,r21
 15525 6866 FC01      		movw r30,r24
 15526 6868 8081      		ld r24,Z
 15527 686a 9181      		ldd r25,Z+1
 15528 686c 880F      		lsl r24
 15529 686e 991F      		rol r25
 15530 6870 820F      		add r24,r18
 15531 6872 931F      		adc r25,r19
 15532 6874 FC01      		movw r30,r24
 15533 6876 8081      		ld r24,Z
 15534 6878 9181      		ldd r25,Z+1
 15535 687a 092E      		mov __tmp_reg__,r25
 15536 687c 000C      		lsl r0
 15537 687e AA0B      		sbc r26,r26
 15538 6880 BB0B      		sbc r27,r27
 15539 6882 BC01      		movw r22,r24
 15540 6884 CD01      		movw r24,r26
 15541 6886 0E94 0000 		call __floatsisf
 15542 688a DC01      		movw r26,r24
 15543 688c CB01      		movw r24,r22
 15544 688e 9C01      		movw r18,r24
 15545 6890 AD01      		movw r20,r26
 15546 6892 C701      		movw r24,r14
 15547 6894 B601      		movw r22,r12
 15548 6896 0E94 0000 		call __addsf3
 15549 689a DC01      		movw r26,r24
 15550 689c CB01      		movw r24,r22
 15551 689e F801      		movw r30,r16
 15552 68a0 8083      		st Z,r24
 15553 68a2 9183      		std Z+1,r25
 15554 68a4 A283      		std Z+2,r26
 15555 68a6 B383      		std Z+3,r27
1586:lp_solve_5.5/lp_price.c ****         for(jj = nb; jj < ne; jj++)
 15556               		.loc 1 1586 0 discriminator 3
 15557 68a8 8B81      		ldd r24,Y+3
 15558 68aa 9C81      		ldd r25,Y+4
 15559 68ac 0196      		adiw r24,1
 15560 68ae 9C83      		std Y+4,r25
 15561 68b0 8B83      		std Y+3,r24
 15562               	.L457:
1586:lp_solve_5.5/lp_price.c ****         for(jj = nb; jj < ne; jj++)
 15563               		.loc 1 1586 0 is_stmt 0 discriminator 1
 15564 68b2 2B81      		ldd r18,Y+3
 15565 68b4 3C81      		ldd r19,Y+4
 15566 68b6 8985      		ldd r24,Y+9
 15567 68b8 9A85      		ldd r25,Y+10
 15568 68ba 2817      		cp r18,r24
 15569 68bc 3907      		cpc r19,r25
 15570 68be 04F4      		brge .+2
 15571 68c0 00C0      		rjmp .L458
 15572 68c2 00C0      		rjmp .L459
 15573               	.L456:
1588:lp_solve_5.5/lp_price.c ****       else
1589:lp_solve_5.5/lp_price.c ****         for(jj = nb; jj < ne; jj++)
 15574               		.loc 1 1589 0 is_stmt 1
 15575 68c4 8F81      		ldd r24,Y+7
 15576 68c6 9885      		ldd r25,Y+8
 15577 68c8 9C83      		std Y+4,r25
 15578 68ca 8B83      		std Y+3,r24
 15579 68cc 00C0      		rjmp .L460
 15580               	.L461:
1590:lp_solve_5.5/lp_price.c ****           sum[i] += COL_MAT_ROWNR(jj);
 15581               		.loc 1 1590 0 discriminator 3
 15582 68ce 298D      		ldd r18,Y+25
 15583 68d0 3A8D      		ldd r19,Y+26
 15584 68d2 8981      		ldd r24,Y+1
 15585 68d4 9A81      		ldd r25,Y+2
 15586 68d6 880F      		lsl r24
 15587 68d8 991F      		rol r25
 15588 68da 880F      		lsl r24
 15589 68dc 991F      		rol r25
 15590 68de 8901      		movw r16,r18
 15591 68e0 080F      		add r16,r24
 15592 68e2 191F      		adc r17,r25
 15593 68e4 298D      		ldd r18,Y+25
 15594 68e6 3A8D      		ldd r19,Y+26
 15595 68e8 8981      		ldd r24,Y+1
 15596 68ea 9A81      		ldd r25,Y+2
 15597 68ec 880F      		lsl r24
 15598 68ee 991F      		rol r25
 15599 68f0 880F      		lsl r24
 15600 68f2 991F      		rol r25
 15601 68f4 820F      		add r24,r18
 15602 68f6 931F      		adc r25,r19
 15603 68f8 FC01      		movw r30,r24
 15604 68fa C080      		ld r12,Z
 15605 68fc D180      		ldd r13,Z+1
 15606 68fe E280      		ldd r14,Z+2
 15607 6900 F380      		ldd r15,Z+3
 15608 6902 8B89      		ldd r24,Y+19
 15609 6904 9C89      		ldd r25,Y+20
 15610 6906 FC01      		movw r30,r24
 15611 6908 2685      		ldd r18,Z+14
 15612 690a 3785      		ldd r19,Z+15
 15613 690c 8B81      		ldd r24,Y+3
 15614 690e 9C81      		ldd r25,Y+4
 15615 6910 880F      		lsl r24
 15616 6912 991F      		rol r25
 15617 6914 820F      		add r24,r18
 15618 6916 931F      		adc r25,r19
 15619 6918 FC01      		movw r30,r24
 15620 691a 8081      		ld r24,Z
 15621 691c 9181      		ldd r25,Z+1
 15622 691e 092E      		mov __tmp_reg__,r25
 15623 6920 000C      		lsl r0
 15624 6922 AA0B      		sbc r26,r26
 15625 6924 BB0B      		sbc r27,r27
 15626 6926 BC01      		movw r22,r24
 15627 6928 CD01      		movw r24,r26
 15628 692a 0E94 0000 		call __floatsisf
 15629 692e DC01      		movw r26,r24
 15630 6930 CB01      		movw r24,r22
 15631 6932 9C01      		movw r18,r24
 15632 6934 AD01      		movw r20,r26
 15633 6936 C701      		movw r24,r14
 15634 6938 B601      		movw r22,r12
 15635 693a 0E94 0000 		call __addsf3
 15636 693e DC01      		movw r26,r24
 15637 6940 CB01      		movw r24,r22
 15638 6942 F801      		movw r30,r16
 15639 6944 8083      		st Z,r24
 15640 6946 9183      		std Z+1,r25
 15641 6948 A283      		std Z+2,r26
 15642 694a B383      		std Z+3,r27
1589:lp_solve_5.5/lp_price.c ****           sum[i] += COL_MAT_ROWNR(jj);
 15643               		.loc 1 1589 0 discriminator 3
 15644 694c 8B81      		ldd r24,Y+3
 15645 694e 9C81      		ldd r25,Y+4
 15646 6950 0196      		adiw r24,1
 15647 6952 9C83      		std Y+4,r25
 15648 6954 8B83      		std Y+3,r24
 15649               	.L460:
1589:lp_solve_5.5/lp_price.c ****           sum[i] += COL_MAT_ROWNR(jj);
 15650               		.loc 1 1589 0 is_stmt 0 discriminator 1
 15651 6956 2B81      		ldd r18,Y+3
 15652 6958 3C81      		ldd r19,Y+4
 15653 695a 8985      		ldd r24,Y+9
 15654 695c 9A85      		ldd r25,Y+10
 15655 695e 2817      		cp r18,r24
 15656 6960 3907      		cpc r19,r25
 15657 6962 04F4      		brge .+2
 15658 6964 00C0      		rjmp .L461
 15659               	.L459:
1591:lp_solve_5.5/lp_price.c ****       sum[i] /= n;
 15660               		.loc 1 1591 0 is_stmt 1
 15661 6966 298D      		ldd r18,Y+25
 15662 6968 3A8D      		ldd r19,Y+26
 15663 696a 8981      		ldd r24,Y+1
 15664 696c 9A81      		ldd r25,Y+2
 15665 696e 880F      		lsl r24
 15666 6970 991F      		rol r25
 15667 6972 880F      		lsl r24
 15668 6974 991F      		rol r25
 15669 6976 8901      		movw r16,r18
 15670 6978 080F      		add r16,r24
 15671 697a 191F      		adc r17,r25
 15672 697c 298D      		ldd r18,Y+25
 15673 697e 3A8D      		ldd r19,Y+26
 15674 6980 8981      		ldd r24,Y+1
 15675 6982 9A81      		ldd r25,Y+2
 15676 6984 880F      		lsl r24
 15677 6986 991F      		rol r25
 15678 6988 880F      		lsl r24
 15679 698a 991F      		rol r25
 15680 698c 820F      		add r24,r18
 15681 698e 931F      		adc r25,r19
 15682 6990 FC01      		movw r30,r24
 15683 6992 C080      		ld r12,Z
 15684 6994 D180      		ldd r13,Z+1
 15685 6996 E280      		ldd r14,Z+2
 15686 6998 F380      		ldd r15,Z+3
 15687 699a 8D81      		ldd r24,Y+5
 15688 699c 9E81      		ldd r25,Y+6
 15689 699e 092E      		mov __tmp_reg__,r25
 15690 69a0 000C      		lsl r0
 15691 69a2 AA0B      		sbc r26,r26
 15692 69a4 BB0B      		sbc r27,r27
 15693 69a6 BC01      		movw r22,r24
 15694 69a8 CD01      		movw r24,r26
 15695 69aa 0E94 0000 		call __floatsisf
 15696 69ae DC01      		movw r26,r24
 15697 69b0 CB01      		movw r24,r22
 15698 69b2 9C01      		movw r18,r24
 15699 69b4 AD01      		movw r20,r26
 15700 69b6 C701      		movw r24,r14
 15701 69b8 B601      		movw r22,r12
 15702 69ba 0E94 0000 		call __divsf3
 15703 69be DC01      		movw r26,r24
 15704 69c0 CB01      		movw r24,r22
 15705 69c2 F801      		movw r30,r16
 15706 69c4 8083      		st Z,r24
 15707 69c6 9183      		std Z+1,r25
 15708 69c8 A283      		std Z+2,r26
 15709 69ca B383      		std Z+3,r27
 15710 69cc 00C0      		rjmp .L462
 15711               	.L455:
1592:lp_solve_5.5/lp_price.c ****     }
1593:lp_solve_5.5/lp_price.c ****     else
1594:lp_solve_5.5/lp_price.c ****       sum[i] = sum[i-1];
 15712               		.loc 1 1594 0
 15713 69ce 298D      		ldd r18,Y+25
 15714 69d0 3A8D      		ldd r19,Y+26
 15715 69d2 8981      		ldd r24,Y+1
 15716 69d4 9A81      		ldd r25,Y+2
 15717 69d6 880F      		lsl r24
 15718 69d8 991F      		rol r25
 15719 69da 880F      		lsl r24
 15720 69dc 991F      		rol r25
 15721 69de 280F      		add r18,r24
 15722 69e0 391F      		adc r19,r25
 15723 69e2 498D      		ldd r20,Y+25
 15724 69e4 5A8D      		ldd r21,Y+26
 15725 69e6 8981      		ldd r24,Y+1
 15726 69e8 9A81      		ldd r25,Y+2
 15727 69ea 8150      		subi r24,1
 15728 69ec 904C      		sbci r25,-64
 15729 69ee 880F      		lsl r24
 15730 69f0 991F      		rol r25
 15731 69f2 880F      		lsl r24
 15732 69f4 991F      		rol r25
 15733 69f6 840F      		add r24,r20
 15734 69f8 951F      		adc r25,r21
 15735 69fa FC01      		movw r30,r24
 15736 69fc 8081      		ld r24,Z
 15737 69fe 9181      		ldd r25,Z+1
 15738 6a00 A281      		ldd r26,Z+2
 15739 6a02 B381      		ldd r27,Z+3
 15740 6a04 F901      		movw r30,r18
 15741 6a06 8083      		st Z,r24
 15742 6a08 9183      		std Z+1,r25
 15743 6a0a A283      		std Z+2,r26
 15744 6a0c B383      		std Z+3,r27
 15745               	.L462:
1572:lp_solve_5.5/lp_price.c ****     n = 0;
 15746               		.loc 1 1572 0 discriminator 2
 15747 6a0e 8981      		ldd r24,Y+1
 15748 6a10 9A81      		ldd r25,Y+2
 15749 6a12 0196      		adiw r24,1
 15750 6a14 9A83      		std Y+2,r25
 15751 6a16 8983      		std Y+1,r24
 15752               	.L452:
1572:lp_solve_5.5/lp_price.c ****     n = 0;
 15753               		.loc 1 1572 0 is_stmt 0 discriminator 1
 15754 6a18 2981      		ldd r18,Y+1
 15755 6a1a 3A81      		ldd r19,Y+2
 15756 6a1c 8F89      		ldd r24,Y+23
 15757 6a1e 988D      		ldd r25,Y+24
 15758 6a20 8217      		cp r24,r18
 15759 6a22 9307      		cpc r25,r19
 15760 6a24 04F0      		brlt .+2
 15761 6a26 00C0      		rjmp .L463
1595:lp_solve_5.5/lp_price.c ****   }
1596:lp_solve_5.5/lp_price.c **** 
1597:lp_solve_5.5/lp_price.c ****   /* Loop over items again, find largest difference and make monotone */
1598:lp_solve_5.5/lp_price.c ****   hold = 0;
 15762               		.loc 1 1598 0 is_stmt 1
 15763 6a28 1B86      		std Y+11,__zero_reg__
 15764 6a2a 1C86      		std Y+12,__zero_reg__
 15765 6a2c 1D86      		std Y+13,__zero_reg__
 15766 6a2e 1E86      		std Y+14,__zero_reg__
1599:lp_solve_5.5/lp_price.c ****   biggest = 0;
 15767               		.loc 1 1599 0
 15768 6a30 1F86      		std Y+15,__zero_reg__
 15769 6a32 188A      		std Y+16,__zero_reg__
 15770 6a34 198A      		std Y+17,__zero_reg__
 15771 6a36 1A8A      		std Y+18,__zero_reg__
1600:lp_solve_5.5/lp_price.c ****   for(i = 2; i <= items; i++) {
 15772               		.loc 1 1600 0
 15773 6a38 82E0      		ldi r24,lo8(2)
 15774 6a3a 90E0      		ldi r25,0
 15775 6a3c 9A83      		std Y+2,r25
 15776 6a3e 8983      		std Y+1,r24
 15777 6a40 00C0      		rjmp .L464
 15778               	.L470:
1601:lp_solve_5.5/lp_price.c ****     hold = sum[i] - sum[i-1];
 15779               		.loc 1 1601 0
 15780 6a42 298D      		ldd r18,Y+25
 15781 6a44 3A8D      		ldd r19,Y+26
 15782 6a46 8981      		ldd r24,Y+1
 15783 6a48 9A81      		ldd r25,Y+2
 15784 6a4a 880F      		lsl r24
 15785 6a4c 991F      		rol r25
 15786 6a4e 880F      		lsl r24
 15787 6a50 991F      		rol r25
 15788 6a52 820F      		add r24,r18
 15789 6a54 931F      		adc r25,r19
 15790 6a56 FC01      		movw r30,r24
 15791 6a58 8081      		ld r24,Z
 15792 6a5a 9181      		ldd r25,Z+1
 15793 6a5c A281      		ldd r26,Z+2
 15794 6a5e B381      		ldd r27,Z+3
 15795 6a60 498D      		ldd r20,Y+25
 15796 6a62 5A8D      		ldd r21,Y+26
 15797 6a64 2981      		ldd r18,Y+1
 15798 6a66 3A81      		ldd r19,Y+2
 15799 6a68 2150      		subi r18,1
 15800 6a6a 304C      		sbci r19,-64
 15801 6a6c 220F      		lsl r18
 15802 6a6e 331F      		rol r19
 15803 6a70 220F      		lsl r18
 15804 6a72 331F      		rol r19
 15805 6a74 240F      		add r18,r20
 15806 6a76 351F      		adc r19,r21
 15807 6a78 F901      		movw r30,r18
 15808 6a7a 2081      		ld r18,Z
 15809 6a7c 3181      		ldd r19,Z+1
 15810 6a7e 4281      		ldd r20,Z+2
 15811 6a80 5381      		ldd r21,Z+3
 15812 6a82 BC01      		movw r22,r24
 15813 6a84 CD01      		movw r24,r26
 15814 6a86 0E94 0000 		call __subsf3
 15815 6a8a DC01      		movw r26,r24
 15816 6a8c CB01      		movw r24,r22
 15817 6a8e 8B87      		std Y+11,r24
 15818 6a90 9C87      		std Y+12,r25
 15819 6a92 AD87      		std Y+13,r26
 15820 6a94 BE87      		std Y+14,r27
1602:lp_solve_5.5/lp_price.c ****     if(hold > 0) {
 15821               		.loc 1 1602 0
 15822 6a96 20E0      		ldi r18,0
 15823 6a98 30E0      		ldi r19,0
 15824 6a9a A901      		movw r20,r18
 15825 6a9c 6B85      		ldd r22,Y+11
 15826 6a9e 7C85      		ldd r23,Y+12
 15827 6aa0 8D85      		ldd r24,Y+13
 15828 6aa2 9E85      		ldd r25,Y+14
 15829 6aa4 0E94 0000 		call __gtsf2
 15830 6aa8 1816      		cp __zero_reg__,r24
 15831 6aaa 04F4      		brge .L491
1603:lp_solve_5.5/lp_price.c ****       if(hold > biggest)
 15832               		.loc 1 1603 0
 15833 6aac 2F85      		ldd r18,Y+15
 15834 6aae 3889      		ldd r19,Y+16
 15835 6ab0 4989      		ldd r20,Y+17
 15836 6ab2 5A89      		ldd r21,Y+18
 15837 6ab4 6B85      		ldd r22,Y+11
 15838 6ab6 7C85      		ldd r23,Y+12
 15839 6ab8 8D85      		ldd r24,Y+13
 15840 6aba 9E85      		ldd r25,Y+14
 15841 6abc 0E94 0000 		call __gtsf2
 15842 6ac0 1816      		cp __zero_reg__,r24
 15843 6ac2 04F4      		brge .L469
1604:lp_solve_5.5/lp_price.c ****         biggest = hold;
 15844               		.loc 1 1604 0
 15845 6ac4 8B85      		ldd r24,Y+11
 15846 6ac6 9C85      		ldd r25,Y+12
 15847 6ac8 AD85      		ldd r26,Y+13
 15848 6aca BE85      		ldd r27,Y+14
 15849 6acc 8F87      		std Y+15,r24
 15850 6ace 988B      		std Y+16,r25
 15851 6ad0 A98B      		std Y+17,r26
 15852 6ad2 BA8B      		std Y+18,r27
 15853 6ad4 00C0      		rjmp .L469
 15854               	.L491:
1605:lp_solve_5.5/lp_price.c ****     }
1606:lp_solve_5.5/lp_price.c ****     else
1607:lp_solve_5.5/lp_price.c ****       hold = 0;
 15855               		.loc 1 1607 0
 15856 6ad6 1B86      		std Y+11,__zero_reg__
 15857 6ad8 1C86      		std Y+12,__zero_reg__
 15858 6ada 1D86      		std Y+13,__zero_reg__
 15859 6adc 1E86      		std Y+14,__zero_reg__
 15860               	.L469:
1608:lp_solve_5.5/lp_price.c ****     sum[i-1] = hold;
 15861               		.loc 1 1608 0 discriminator 2
 15862 6ade 298D      		ldd r18,Y+25
 15863 6ae0 3A8D      		ldd r19,Y+26
 15864 6ae2 8981      		ldd r24,Y+1
 15865 6ae4 9A81      		ldd r25,Y+2
 15866 6ae6 8150      		subi r24,1
 15867 6ae8 904C      		sbci r25,-64
 15868 6aea 880F      		lsl r24
 15869 6aec 991F      		rol r25
 15870 6aee 880F      		lsl r24
 15871 6af0 991F      		rol r25
 15872 6af2 280F      		add r18,r24
 15873 6af4 391F      		adc r19,r25
 15874 6af6 8B85      		ldd r24,Y+11
 15875 6af8 9C85      		ldd r25,Y+12
 15876 6afa AD85      		ldd r26,Y+13
 15877 6afc BE85      		ldd r27,Y+14
 15878 6afe F901      		movw r30,r18
 15879 6b00 8083      		st Z,r24
 15880 6b02 9183      		std Z+1,r25
 15881 6b04 A283      		std Z+2,r26
 15882 6b06 B383      		std Z+3,r27
1600:lp_solve_5.5/lp_price.c ****     hold = sum[i] - sum[i-1];
 15883               		.loc 1 1600 0 discriminator 2
 15884 6b08 8981      		ldd r24,Y+1
 15885 6b0a 9A81      		ldd r25,Y+2
 15886 6b0c 0196      		adiw r24,1
 15887 6b0e 9A83      		std Y+2,r25
 15888 6b10 8983      		std Y+1,r24
 15889               	.L464:
1600:lp_solve_5.5/lp_price.c ****     hold = sum[i] - sum[i-1];
 15890               		.loc 1 1600 0 is_stmt 0 discriminator 1
 15891 6b12 2981      		ldd r18,Y+1
 15892 6b14 3A81      		ldd r19,Y+2
 15893 6b16 8F89      		ldd r24,Y+23
 15894 6b18 988D      		ldd r25,Y+24
 15895 6b1a 8217      		cp r24,r18
 15896 6b1c 9307      		cpc r25,r19
 15897 6b1e 04F0      		brlt .+2
 15898 6b20 00C0      		rjmp .L470
1609:lp_solve_5.5/lp_price.c ****   }
1610:lp_solve_5.5/lp_price.c **** 
1611:lp_solve_5.5/lp_price.c ****   /* Loop over items again and find differences exceeding threshold;
1612:lp_solve_5.5/lp_price.c ****      the discriminatory power of this routine depends strongly on the
1613:lp_solve_5.5/lp_price.c ****      magnitude of the scaling factor - from empirical evidence > 0.9 */
1614:lp_solve_5.5/lp_price.c ****   biggest = MAX(1, 0.9*biggest);
 15899               		.loc 1 1614 0 is_stmt 1
 15900 6b22 26E6      		ldi r18,lo8(102)
 15901 6b24 36E6      		ldi r19,lo8(102)
 15902 6b26 46E6      		ldi r20,lo8(102)
 15903 6b28 5FE3      		ldi r21,lo8(63)
 15904 6b2a 6F85      		ldd r22,Y+15
 15905 6b2c 7889      		ldd r23,Y+16
 15906 6b2e 8989      		ldd r24,Y+17
 15907 6b30 9A89      		ldd r25,Y+18
 15908 6b32 0E94 0000 		call __mulsf3
 15909 6b36 DC01      		movw r26,r24
 15910 6b38 CB01      		movw r24,r22
 15911 6b3a 20E0      		ldi r18,0
 15912 6b3c 30E0      		ldi r19,0
 15913 6b3e 40E8      		ldi r20,lo8(-128)
 15914 6b40 5FE3      		ldi r21,lo8(63)
 15915 6b42 BC01      		movw r22,r24
 15916 6b44 CD01      		movw r24,r26
 15917 6b46 0E94 0000 		call __ltsf2
 15918 6b4a 8823      		tst r24
 15919 6b4c 04F4      		brge .L492
 15920               		.loc 1 1614 0 is_stmt 0 discriminator 1
 15921 6b4e 80E0      		ldi r24,0
 15922 6b50 90E0      		ldi r25,0
 15923 6b52 A0E8      		ldi r26,lo8(-128)
 15924 6b54 BFE3      		ldi r27,lo8(63)
 15925 6b56 00C0      		rjmp .L473
 15926               	.L492:
 15927               		.loc 1 1614 0 discriminator 2
 15928 6b58 26E6      		ldi r18,lo8(102)
 15929 6b5a 36E6      		ldi r19,lo8(102)
 15930 6b5c 46E6      		ldi r20,lo8(102)
 15931 6b5e 5FE3      		ldi r21,lo8(63)
 15932 6b60 6F85      		ldd r22,Y+15
 15933 6b62 7889      		ldd r23,Y+16
 15934 6b64 8989      		ldd r24,Y+17
 15935 6b66 9A89      		ldd r25,Y+18
 15936 6b68 0E94 0000 		call __mulsf3
 15937 6b6c DC01      		movw r26,r24
 15938 6b6e CB01      		movw r24,r22
 15939               	.L473:
 15940               		.loc 1 1614 0 discriminator 4
 15941 6b70 8F87      		std Y+15,r24
 15942 6b72 988B      		std Y+16,r25
 15943 6b74 A98B      		std Y+17,r26
 15944 6b76 BA8B      		std Y+18,r27
1615:lp_solve_5.5/lp_price.c ****   n = 0;
 15945               		.loc 1 1615 0 is_stmt 1 discriminator 4
 15946 6b78 1E82      		std Y+6,__zero_reg__
 15947 6b7a 1D82      		std Y+5,__zero_reg__
1616:lp_solve_5.5/lp_price.c ****   nb = 0;
 15948               		.loc 1 1616 0 discriminator 4
 15949 6b7c 1886      		std Y+8,__zero_reg__
 15950 6b7e 1F82      		std Y+7,__zero_reg__
1617:lp_solve_5.5/lp_price.c ****   ne = 0;
 15951               		.loc 1 1617 0 discriminator 4
 15952 6b80 1A86      		std Y+10,__zero_reg__
 15953 6b82 1986      		std Y+9,__zero_reg__
1618:lp_solve_5.5/lp_price.c ****   for(i = 1; i < items; i++)
 15954               		.loc 1 1618 0 discriminator 4
 15955 6b84 81E0      		ldi r24,lo8(1)
 15956 6b86 90E0      		ldi r25,0
 15957 6b88 9A83      		std Y+2,r25
 15958 6b8a 8983      		std Y+1,r24
 15959 6b8c 00C0      		rjmp .L474
 15960               	.L477:
1619:lp_solve_5.5/lp_price.c ****     if(sum[i] > biggest) {
 15961               		.loc 1 1619 0
 15962 6b8e 298D      		ldd r18,Y+25
 15963 6b90 3A8D      		ldd r19,Y+26
 15964 6b92 8981      		ldd r24,Y+1
 15965 6b94 9A81      		ldd r25,Y+2
 15966 6b96 880F      		lsl r24
 15967 6b98 991F      		rol r25
 15968 6b9a 880F      		lsl r24
 15969 6b9c 991F      		rol r25
 15970 6b9e 820F      		add r24,r18
 15971 6ba0 931F      		adc r25,r19
 15972 6ba2 FC01      		movw r30,r24
 15973 6ba4 8081      		ld r24,Z
 15974 6ba6 9181      		ldd r25,Z+1
 15975 6ba8 A281      		ldd r26,Z+2
 15976 6baa B381      		ldd r27,Z+3
 15977 6bac 2F85      		ldd r18,Y+15
 15978 6bae 3889      		ldd r19,Y+16
 15979 6bb0 4989      		ldd r20,Y+17
 15980 6bb2 5A89      		ldd r21,Y+18
 15981 6bb4 BC01      		movw r22,r24
 15982 6bb6 CD01      		movw r24,r26
 15983 6bb8 0E94 0000 		call __gtsf2
 15984 6bbc 1816      		cp __zero_reg__,r24
 15985 6bbe 04F4      		brge .L475
1620:lp_solve_5.5/lp_price.c ****       ne += i-nb;        /* Compute sum of index gaps between maxima */
 15986               		.loc 1 1620 0
 15987 6bc0 2981      		ldd r18,Y+1
 15988 6bc2 3A81      		ldd r19,Y+2
 15989 6bc4 8F81      		ldd r24,Y+7
 15990 6bc6 9885      		ldd r25,Y+8
 15991 6bc8 A901      		movw r20,r18
 15992 6bca 481B      		sub r20,r24
 15993 6bcc 590B      		sbc r21,r25
 15994 6bce CA01      		movw r24,r20
 15995 6bd0 2985      		ldd r18,Y+9
 15996 6bd2 3A85      		ldd r19,Y+10
 15997 6bd4 820F      		add r24,r18
 15998 6bd6 931F      		adc r25,r19
 15999 6bd8 9A87      		std Y+10,r25
 16000 6bda 8987      		std Y+9,r24
1621:lp_solve_5.5/lp_price.c ****       nb = i;
 16001               		.loc 1 1621 0
 16002 6bdc 8981      		ldd r24,Y+1
 16003 6bde 9A81      		ldd r25,Y+2
 16004 6be0 9887      		std Y+8,r25
 16005 6be2 8F83      		std Y+7,r24
1622:lp_solve_5.5/lp_price.c ****       n++;               /* Increment count */
 16006               		.loc 1 1622 0
 16007 6be4 8D81      		ldd r24,Y+5
 16008 6be6 9E81      		ldd r25,Y+6
 16009 6be8 0196      		adiw r24,1
 16010 6bea 9E83      		std Y+6,r25
 16011 6bec 8D83      		std Y+5,r24
 16012               	.L475:
1618:lp_solve_5.5/lp_price.c ****     if(sum[i] > biggest) {
 16013               		.loc 1 1618 0 discriminator 2
 16014 6bee 8981      		ldd r24,Y+1
 16015 6bf0 9A81      		ldd r25,Y+2
 16016 6bf2 0196      		adiw r24,1
 16017 6bf4 9A83      		std Y+2,r25
 16018 6bf6 8983      		std Y+1,r24
 16019               	.L474:
1618:lp_solve_5.5/lp_price.c ****     if(sum[i] > biggest) {
 16020               		.loc 1 1618 0 is_stmt 0 discriminator 1
 16021 6bf8 2981      		ldd r18,Y+1
 16022 6bfa 3A81      		ldd r19,Y+2
 16023 6bfc 8F89      		ldd r24,Y+23
 16024 6bfe 988D      		ldd r25,Y+24
 16025 6c00 2817      		cp r18,r24
 16026 6c02 3907      		cpc r19,r25
 16027 6c04 04F0      		brlt .L477
1623:lp_solve_5.5/lp_price.c ****     }
1624:lp_solve_5.5/lp_price.c **** 
1625:lp_solve_5.5/lp_price.c ****   /* Clean up */
1626:lp_solve_5.5/lp_price.c ****   FREE(sum);
 16028               		.loc 1 1626 0 is_stmt 1
 16029 6c06 898D      		ldd r24,Y+25
 16030 6c08 9A8D      		ldd r25,Y+26
 16031 6c0a 892B      		or r24,r25
 16032 6c0c 01F0      		breq .L478
 16033               		.loc 1 1626 0 is_stmt 0 discriminator 1
 16034 6c0e 898D      		ldd r24,Y+25
 16035 6c10 9A8D      		ldd r25,Y+26
 16036 6c12 0E94 0000 		call free
 16037 6c16 1A8E      		std Y+26,__zero_reg__
 16038 6c18 198E      		std Y+25,__zero_reg__
 16039               	.L478:
1627:lp_solve_5.5/lp_price.c **** 
1628:lp_solve_5.5/lp_price.c ****   /* Require that the maxima are spread "nicely" across the columns,
1629:lp_solve_5.5/lp_price.c ****      otherwise return that there is only one monolithic block.
1630:lp_solve_5.5/lp_price.c ****      (This is probably an area for improvement in the logic!) */
1631:lp_solve_5.5/lp_price.c ****   if(n > 0) {
 16040               		.loc 1 1631 0 is_stmt 1
 16041 6c1a 8D81      		ldd r24,Y+5
 16042 6c1c 9E81      		ldd r25,Y+6
 16043 6c1e 1816      		cp __zero_reg__,r24
 16044 6c20 1906      		cpc __zero_reg__,r25
 16045 6c22 04F0      		brlt .+2
 16046 6c24 00C0      		rjmp .L479
1632:lp_solve_5.5/lp_price.c ****     ne /= n;                 /* Average index gap between maxima */
 16047               		.loc 1 1632 0
 16048 6c26 8985      		ldd r24,Y+9
 16049 6c28 9A85      		ldd r25,Y+10
 16050 6c2a 2D81      		ldd r18,Y+5
 16051 6c2c 3E81      		ldd r19,Y+6
 16052 6c2e B901      		movw r22,r18
 16053 6c30 0E94 0000 		call __divmodhi4
 16054 6c34 CB01      		movw r24,r22
 16055 6c36 9A87      		std Y+10,r25
 16056 6c38 8987      		std Y+9,r24
1633:lp_solve_5.5/lp_price.c ****     i = IF(isrow, lp->columns, lp->rows);
 16057               		.loc 1 1633 0
 16058 6c3a 8E8D      		ldd r24,Y+30
 16059 6c3c 8823      		tst r24
 16060 6c3e 01F0      		breq .L480
 16061               		.loc 1 1633 0 is_stmt 0 discriminator 1
 16062 6c40 8B8D      		ldd r24,Y+27
 16063 6c42 9C8D      		ldd r25,Y+28
 16064 6c44 8451      		subi r24,20
 16065 6c46 9E4F      		sbci r25,-2
 16066 6c48 FC01      		movw r30,r24
 16067 6c4a 8081      		ld r24,Z
 16068 6c4c 9181      		ldd r25,Z+1
 16069 6c4e 00C0      		rjmp .L481
 16070               	.L480:
 16071               		.loc 1 1633 0 discriminator 2
 16072 6c50 8B8D      		ldd r24,Y+27
 16073 6c52 9C8D      		ldd r25,Y+28
 16074 6c54 8651      		subi r24,22
 16075 6c56 9E4F      		sbci r25,-2
 16076 6c58 FC01      		movw r30,r24
 16077 6c5a 8081      		ld r24,Z
 16078 6c5c 9181      		ldd r25,Z+1
 16079               	.L481:
 16080               		.loc 1 1633 0 discriminator 4
 16081 6c5e 9A83      		std Y+2,r25
 16082 6c60 8983      		std Y+1,r24
1634:lp_solve_5.5/lp_price.c ****     nb = i / ne;             /* Another estimated block count */
 16083               		.loc 1 1634 0 is_stmt 1 discriminator 4
 16084 6c62 8981      		ldd r24,Y+1
 16085 6c64 9A81      		ldd r25,Y+2
 16086 6c66 2985      		ldd r18,Y+9
 16087 6c68 3A85      		ldd r19,Y+10
 16088 6c6a B901      		movw r22,r18
 16089 6c6c 0E94 0000 		call __divmodhi4
 16090 6c70 CB01      		movw r24,r22
 16091 6c72 9887      		std Y+8,r25
 16092 6c74 8F83      		std Y+7,r24
1635:lp_solve_5.5/lp_price.c ****     if(abs(nb - n) > 2)      /* Probably Ok to require equality (nb==n)*/
 16093               		.loc 1 1635 0 discriminator 4
 16094 6c76 2F81      		ldd r18,Y+7
 16095 6c78 3885      		ldd r19,Y+8
 16096 6c7a 8D81      		ldd r24,Y+5
 16097 6c7c 9E81      		ldd r25,Y+6
 16098 6c7e A901      		movw r20,r18
 16099 6c80 481B      		sub r20,r24
 16100 6c82 590B      		sbc r21,r25
 16101 6c84 CA01      		movw r24,r20
 16102 6c86 9923      		tst r25
 16103 6c88 04F4      		brge .L482
 16104 6c8a 9195      		neg r25
 16105 6c8c 8195      		neg r24
 16106 6c8e 9109      		sbc r25,__zero_reg__
 16107               	.L482:
 16108 6c90 0397      		sbiw r24,3
 16109 6c92 04F0      		brlt .L483
1636:lp_solve_5.5/lp_price.c ****       n = 1;
 16110               		.loc 1 1636 0
 16111 6c94 81E0      		ldi r24,lo8(1)
 16112 6c96 90E0      		ldi r25,0
 16113 6c98 9E83      		std Y+6,r25
 16114 6c9a 8D83      		std Y+5,r24
 16115 6c9c 00C0      		rjmp .L485
 16116               	.L483:
1637:lp_solve_5.5/lp_price.c ****     else if(autodefine)      /* Generate row/column break-indeces for partial pricing */
 16117               		.loc 1 1637 0
 16118 6c9e 8D8D      		ldd r24,Y+29
 16119 6ca0 8823      		tst r24
 16120 6ca2 01F0      		breq .L485
1638:lp_solve_5.5/lp_price.c ****       set_partialprice(lp, nb, NULL, isrow);
 16121               		.loc 1 1638 0
 16122 6ca4 6F81      		ldd r22,Y+7
 16123 6ca6 7885      		ldd r23,Y+8
 16124 6ca8 8B8D      		ldd r24,Y+27
 16125 6caa 9C8D      		ldd r25,Y+28
 16126 6cac 2E8D      		ldd r18,Y+30
 16127 6cae 40E0      		ldi r20,0
 16128 6cb0 50E0      		ldi r21,0
 16129 6cb2 0E94 0000 		call set_partialprice
 16130 6cb6 00C0      		rjmp .L485
 16131               	.L479:
1639:lp_solve_5.5/lp_price.c ****   }
1640:lp_solve_5.5/lp_price.c ****   else
1641:lp_solve_5.5/lp_price.c ****     n = 1;
 16132               		.loc 1 1641 0
 16133 6cb8 81E0      		ldi r24,lo8(1)
 16134 6cba 90E0      		ldi r25,0
 16135 6cbc 9E83      		std Y+6,r25
 16136 6cbe 8D83      		std Y+5,r24
 16137               	.L485:
1642:lp_solve_5.5/lp_price.c **** 
1643:lp_solve_5.5/lp_price.c ****   return( n );
 16138               		.loc 1 1643 0
 16139 6cc0 8D81      		ldd r24,Y+5
 16140 6cc2 9E81      		ldd r25,Y+6
 16141               	.L486:
 16142               	/* epilogue start */
1644:lp_solve_5.5/lp_price.c **** }
 16143               		.loc 1 1644 0 discriminator 1
 16144 6cc4 6E96      		adiw r28,30
 16145 6cc6 0FB6      		in __tmp_reg__,__SREG__
 16146 6cc8 F894      		cli
 16147 6cca DEBF      		out __SP_H__,r29
 16148 6ccc 0FBE      		out __SREG__,__tmp_reg__
 16149 6cce CDBF      		out __SP_L__,r28
 16150 6cd0 DF91      		pop r29
 16151 6cd2 CF91      		pop r28
 16152 6cd4 1F91      		pop r17
 16153 6cd6 0F91      		pop r16
 16154 6cd8 FF90      		pop r15
 16155 6cda EF90      		pop r14
 16156 6cdc DF90      		pop r13
 16157 6cde CF90      		pop r12
 16158 6ce0 0895      		ret
 16159               		.cfi_endproc
 16160               	.LFE34:
 16162               	.global	partial_blockStart
 16164               	partial_blockStart:
 16165               	.LFB35:
1645:lp_solve_5.5/lp_price.c **** STATIC int partial_blockStart(lprec *lp, MYBOOL isrow)
1646:lp_solve_5.5/lp_price.c **** {
 16166               		.loc 1 1646 0
 16167               		.cfi_startproc
 16168 6ce2 CF93      		push r28
 16169               	.LCFI268:
 16170               		.cfi_def_cfa_offset 3
 16171               		.cfi_offset 28, -2
 16172 6ce4 DF93      		push r29
 16173               	.LCFI269:
 16174               		.cfi_def_cfa_offset 4
 16175               		.cfi_offset 29, -3
 16176 6ce6 00D0      		rcall .
 16177 6ce8 00D0      		rcall .
 16178 6cea 1F92      		push __zero_reg__
 16179               	.LCFI270:
 16180               		.cfi_def_cfa_offset 9
 16181 6cec CDB7      		in r28,__SP_L__
 16182 6cee DEB7      		in r29,__SP_H__
 16183               	.LCFI271:
 16184               		.cfi_def_cfa_register 28
 16185               	/* prologue: function */
 16186               	/* frame size = 5 */
 16187               	/* stack size = 7 */
 16188               	.L__stack_usage = 7
 16189 6cf0 9C83      		std Y+4,r25
 16190 6cf2 8B83      		std Y+3,r24
 16191 6cf4 6D83      		std Y+5,r22
1647:lp_solve_5.5/lp_price.c ****   partialrec *blockdata;
1648:lp_solve_5.5/lp_price.c **** 
1649:lp_solve_5.5/lp_price.c ****   blockdata = IF(isrow, lp->rowblocks, lp->colblocks);
 16192               		.loc 1 1649 0
 16193 6cf6 8D81      		ldd r24,Y+5
 16194 6cf8 8823      		tst r24
 16195 6cfa 01F0      		breq .L494
 16196               		.loc 1 1649 0 is_stmt 0 discriminator 1
 16197 6cfc 8B81      		ldd r24,Y+3
 16198 6cfe 9C81      		ldd r25,Y+4
 16199 6d00 8E57      		subi r24,126
 16200 6d02 9D4F      		sbci r25,-3
 16201 6d04 FC01      		movw r30,r24
 16202 6d06 8081      		ld r24,Z
 16203 6d08 9181      		ldd r25,Z+1
 16204 6d0a 00C0      		rjmp .L495
 16205               	.L494:
 16206               		.loc 1 1649 0 discriminator 2
 16207 6d0c 8B81      		ldd r24,Y+3
 16208 6d0e 9C81      		ldd r25,Y+4
 16209 6d10 8C57      		subi r24,124
 16210 6d12 9D4F      		sbci r25,-3
 16211 6d14 FC01      		movw r30,r24
 16212 6d16 8081      		ld r24,Z
 16213 6d18 9181      		ldd r25,Z+1
 16214               	.L495:
 16215               		.loc 1 1649 0 discriminator 4
 16216 6d1a 9A83      		std Y+2,r25
 16217 6d1c 8983      		std Y+1,r24
1650:lp_solve_5.5/lp_price.c ****   if(blockdata == NULL)
 16218               		.loc 1 1650 0 is_stmt 1 discriminator 4
 16219 6d1e 8981      		ldd r24,Y+1
 16220 6d20 9A81      		ldd r25,Y+2
 16221 6d22 892B      		or r24,r25
 16222 6d24 01F4      		brne .L496
1651:lp_solve_5.5/lp_price.c ****     return( 1 );
 16223               		.loc 1 1651 0
 16224 6d26 81E0      		ldi r24,lo8(1)
 16225 6d28 90E0      		ldi r25,0
 16226 6d2a 00C0      		rjmp .L497
 16227               	.L496:
1652:lp_solve_5.5/lp_price.c ****   else {
1653:lp_solve_5.5/lp_price.c ****     if((blockdata->blocknow < 1) || (blockdata->blocknow > blockdata->blockcount))
 16228               		.loc 1 1653 0
 16229 6d2c 8981      		ldd r24,Y+1
 16230 6d2e 9A81      		ldd r25,Y+2
 16231 6d30 FC01      		movw r30,r24
 16232 6d32 8481      		ldd r24,Z+4
 16233 6d34 9581      		ldd r25,Z+5
 16234 6d36 1816      		cp __zero_reg__,r24
 16235 6d38 1906      		cpc __zero_reg__,r25
 16236 6d3a 04F4      		brge .L498
 16237               		.loc 1 1653 0 is_stmt 0 discriminator 1
 16238 6d3c 8981      		ldd r24,Y+1
 16239 6d3e 9A81      		ldd r25,Y+2
 16240 6d40 FC01      		movw r30,r24
 16241 6d42 2481      		ldd r18,Z+4
 16242 6d44 3581      		ldd r19,Z+5
 16243 6d46 8981      		ldd r24,Y+1
 16244 6d48 9A81      		ldd r25,Y+2
 16245 6d4a FC01      		movw r30,r24
 16246 6d4c 8281      		ldd r24,Z+2
 16247 6d4e 9381      		ldd r25,Z+3
 16248 6d50 8217      		cp r24,r18
 16249 6d52 9307      		cpc r25,r19
 16250 6d54 04F4      		brge .L499
 16251               	.L498:
1654:lp_solve_5.5/lp_price.c ****       blockdata->blocknow = 1;
 16252               		.loc 1 1654 0 is_stmt 1
 16253 6d56 8981      		ldd r24,Y+1
 16254 6d58 9A81      		ldd r25,Y+2
 16255 6d5a 21E0      		ldi r18,lo8(1)
 16256 6d5c 30E0      		ldi r19,0
 16257 6d5e FC01      		movw r30,r24
 16258 6d60 3583      		std Z+5,r19
 16259 6d62 2483      		std Z+4,r18
 16260               	.L499:
1655:lp_solve_5.5/lp_price.c ****     return( blockdata->blockend[blockdata->blocknow-1] );
 16261               		.loc 1 1655 0
 16262 6d64 8981      		ldd r24,Y+1
 16263 6d66 9A81      		ldd r25,Y+2
 16264 6d68 FC01      		movw r30,r24
 16265 6d6a 2681      		ldd r18,Z+6
 16266 6d6c 3781      		ldd r19,Z+7
 16267 6d6e 8981      		ldd r24,Y+1
 16268 6d70 9A81      		ldd r25,Y+2
 16269 6d72 FC01      		movw r30,r24
 16270 6d74 8481      		ldd r24,Z+4
 16271 6d76 9581      		ldd r25,Z+5
 16272 6d78 8150      		subi r24,1
 16273 6d7a 9048      		sbci r25,-128
 16274 6d7c 880F      		lsl r24
 16275 6d7e 991F      		rol r25
 16276 6d80 820F      		add r24,r18
 16277 6d82 931F      		adc r25,r19
 16278 6d84 FC01      		movw r30,r24
 16279 6d86 8081      		ld r24,Z
 16280 6d88 9181      		ldd r25,Z+1
 16281               	.L497:
 16282               	/* epilogue start */
1656:lp_solve_5.5/lp_price.c ****   }
1657:lp_solve_5.5/lp_price.c **** }
 16283               		.loc 1 1657 0
 16284 6d8a 0F90      		pop __tmp_reg__
 16285 6d8c 0F90      		pop __tmp_reg__
 16286 6d8e 0F90      		pop __tmp_reg__
 16287 6d90 0F90      		pop __tmp_reg__
 16288 6d92 0F90      		pop __tmp_reg__
 16289 6d94 DF91      		pop r29
 16290 6d96 CF91      		pop r28
 16291 6d98 0895      		ret
 16292               		.cfi_endproc
 16293               	.LFE35:
 16295               	.global	partial_blockEnd
 16297               	partial_blockEnd:
 16298               	.LFB36:
1658:lp_solve_5.5/lp_price.c **** STATIC int partial_blockEnd(lprec *lp, MYBOOL isrow)
1659:lp_solve_5.5/lp_price.c **** {
 16299               		.loc 1 1659 0
 16300               		.cfi_startproc
 16301 6d9a CF93      		push r28
 16302               	.LCFI272:
 16303               		.cfi_def_cfa_offset 3
 16304               		.cfi_offset 28, -2
 16305 6d9c DF93      		push r29
 16306               	.LCFI273:
 16307               		.cfi_def_cfa_offset 4
 16308               		.cfi_offset 29, -3
 16309 6d9e 00D0      		rcall .
 16310 6da0 00D0      		rcall .
 16311 6da2 1F92      		push __zero_reg__
 16312               	.LCFI274:
 16313               		.cfi_def_cfa_offset 9
 16314 6da4 CDB7      		in r28,__SP_L__
 16315 6da6 DEB7      		in r29,__SP_H__
 16316               	.LCFI275:
 16317               		.cfi_def_cfa_register 28
 16318               	/* prologue: function */
 16319               	/* frame size = 5 */
 16320               	/* stack size = 7 */
 16321               	.L__stack_usage = 7
 16322 6da8 9C83      		std Y+4,r25
 16323 6daa 8B83      		std Y+3,r24
 16324 6dac 6D83      		std Y+5,r22
1660:lp_solve_5.5/lp_price.c ****   partialrec *blockdata;
1661:lp_solve_5.5/lp_price.c **** 
1662:lp_solve_5.5/lp_price.c ****   blockdata = IF(isrow, lp->rowblocks, lp->colblocks);
 16325               		.loc 1 1662 0
 16326 6dae 8D81      		ldd r24,Y+5
 16327 6db0 8823      		tst r24
 16328 6db2 01F0      		breq .L501
 16329               		.loc 1 1662 0 is_stmt 0 discriminator 1
 16330 6db4 8B81      		ldd r24,Y+3
 16331 6db6 9C81      		ldd r25,Y+4
 16332 6db8 8E57      		subi r24,126
 16333 6dba 9D4F      		sbci r25,-3
 16334 6dbc FC01      		movw r30,r24
 16335 6dbe 8081      		ld r24,Z
 16336 6dc0 9181      		ldd r25,Z+1
 16337 6dc2 00C0      		rjmp .L502
 16338               	.L501:
 16339               		.loc 1 1662 0 discriminator 2
 16340 6dc4 8B81      		ldd r24,Y+3
 16341 6dc6 9C81      		ldd r25,Y+4
 16342 6dc8 8C57      		subi r24,124
 16343 6dca 9D4F      		sbci r25,-3
 16344 6dcc FC01      		movw r30,r24
 16345 6dce 8081      		ld r24,Z
 16346 6dd0 9181      		ldd r25,Z+1
 16347               	.L502:
 16348               		.loc 1 1662 0 discriminator 4
 16349 6dd2 9A83      		std Y+2,r25
 16350 6dd4 8983      		std Y+1,r24
1663:lp_solve_5.5/lp_price.c ****   if(blockdata == NULL)
 16351               		.loc 1 1663 0 is_stmt 1 discriminator 4
 16352 6dd6 8981      		ldd r24,Y+1
 16353 6dd8 9A81      		ldd r25,Y+2
 16354 6dda 892B      		or r24,r25
 16355 6ddc 01F4      		brne .L503
1664:lp_solve_5.5/lp_price.c ****     return( IF(isrow, lp->rows, lp->sum) );
 16356               		.loc 1 1664 0
 16357 6dde 8D81      		ldd r24,Y+5
 16358 6de0 8823      		tst r24
 16359 6de2 01F0      		breq .L504
 16360               		.loc 1 1664 0 is_stmt 0 discriminator 1
 16361 6de4 8B81      		ldd r24,Y+3
 16362 6de6 9C81      		ldd r25,Y+4
 16363 6de8 8651      		subi r24,22
 16364 6dea 9E4F      		sbci r25,-2
 16365 6dec FC01      		movw r30,r24
 16366 6dee 8081      		ld r24,Z
 16367 6df0 9181      		ldd r25,Z+1
 16368 6df2 00C0      		rjmp .L506
 16369               	.L504:
 16370               		.loc 1 1664 0 discriminator 2
 16371 6df4 8B81      		ldd r24,Y+3
 16372 6df6 9C81      		ldd r25,Y+4
 16373 6df8 8851      		subi r24,24
 16374 6dfa 9E4F      		sbci r25,-2
 16375 6dfc FC01      		movw r30,r24
 16376 6dfe 8081      		ld r24,Z
 16377 6e00 9181      		ldd r25,Z+1
 16378 6e02 00C0      		rjmp .L506
 16379               	.L503:
1665:lp_solve_5.5/lp_price.c ****   else {
1666:lp_solve_5.5/lp_price.c ****     if((blockdata->blocknow < 1) || (blockdata->blocknow > blockdata->blockcount))
 16380               		.loc 1 1666 0 is_stmt 1
 16381 6e04 8981      		ldd r24,Y+1
 16382 6e06 9A81      		ldd r25,Y+2
 16383 6e08 FC01      		movw r30,r24
 16384 6e0a 8481      		ldd r24,Z+4
 16385 6e0c 9581      		ldd r25,Z+5
 16386 6e0e 1816      		cp __zero_reg__,r24
 16387 6e10 1906      		cpc __zero_reg__,r25
 16388 6e12 04F4      		brge .L507
 16389               		.loc 1 1666 0 is_stmt 0 discriminator 1
 16390 6e14 8981      		ldd r24,Y+1
 16391 6e16 9A81      		ldd r25,Y+2
 16392 6e18 FC01      		movw r30,r24
 16393 6e1a 2481      		ldd r18,Z+4
 16394 6e1c 3581      		ldd r19,Z+5
 16395 6e1e 8981      		ldd r24,Y+1
 16396 6e20 9A81      		ldd r25,Y+2
 16397 6e22 FC01      		movw r30,r24
 16398 6e24 8281      		ldd r24,Z+2
 16399 6e26 9381      		ldd r25,Z+3
 16400 6e28 8217      		cp r24,r18
 16401 6e2a 9307      		cpc r25,r19
 16402 6e2c 04F4      		brge .L508
 16403               	.L507:
1667:lp_solve_5.5/lp_price.c ****       blockdata->blocknow = 1;
 16404               		.loc 1 1667 0 is_stmt 1
 16405 6e2e 8981      		ldd r24,Y+1
 16406 6e30 9A81      		ldd r25,Y+2
 16407 6e32 21E0      		ldi r18,lo8(1)
 16408 6e34 30E0      		ldi r19,0
 16409 6e36 FC01      		movw r30,r24
 16410 6e38 3583      		std Z+5,r19
 16411 6e3a 2483      		std Z+4,r18
 16412               	.L508:
1668:lp_solve_5.5/lp_price.c ****     return( blockdata->blockend[blockdata->blocknow]-1 );
 16413               		.loc 1 1668 0
 16414 6e3c 8981      		ldd r24,Y+1
 16415 6e3e 9A81      		ldd r25,Y+2
 16416 6e40 FC01      		movw r30,r24
 16417 6e42 2681      		ldd r18,Z+6
 16418 6e44 3781      		ldd r19,Z+7
 16419 6e46 8981      		ldd r24,Y+1
 16420 6e48 9A81      		ldd r25,Y+2
 16421 6e4a FC01      		movw r30,r24
 16422 6e4c 8481      		ldd r24,Z+4
 16423 6e4e 9581      		ldd r25,Z+5
 16424 6e50 880F      		lsl r24
 16425 6e52 991F      		rol r25
 16426 6e54 820F      		add r24,r18
 16427 6e56 931F      		adc r25,r19
 16428 6e58 FC01      		movw r30,r24
 16429 6e5a 8081      		ld r24,Z
 16430 6e5c 9181      		ldd r25,Z+1
 16431 6e5e 0197      		sbiw r24,1
 16432               	.L506:
 16433               	/* epilogue start */
1669:lp_solve_5.5/lp_price.c ****   }
1670:lp_solve_5.5/lp_price.c **** }
 16434               		.loc 1 1670 0
 16435 6e60 0F90      		pop __tmp_reg__
 16436 6e62 0F90      		pop __tmp_reg__
 16437 6e64 0F90      		pop __tmp_reg__
 16438 6e66 0F90      		pop __tmp_reg__
 16439 6e68 0F90      		pop __tmp_reg__
 16440 6e6a DF91      		pop r29
 16441 6e6c CF91      		pop r28
 16442 6e6e 0895      		ret
 16443               		.cfi_endproc
 16444               	.LFE36:
 16446               	.global	partial_blockNextPos
 16448               	partial_blockNextPos:
 16449               	.LFB37:
1671:lp_solve_5.5/lp_price.c **** STATIC int partial_blockNextPos(lprec *lp, int block, MYBOOL isrow)
1672:lp_solve_5.5/lp_price.c **** {
 16450               		.loc 1 1672 0
 16451               		.cfi_startproc
 16452 6e70 CF93      		push r28
 16453               	.LCFI276:
 16454               		.cfi_def_cfa_offset 3
 16455               		.cfi_offset 28, -2
 16456 6e72 DF93      		push r29
 16457               	.LCFI277:
 16458               		.cfi_def_cfa_offset 4
 16459               		.cfi_offset 29, -3
 16460 6e74 CDB7      		in r28,__SP_L__
 16461 6e76 DEB7      		in r29,__SP_H__
 16462               	.LCFI278:
 16463               		.cfi_def_cfa_register 28
 16464 6e78 2797      		sbiw r28,7
 16465               	.LCFI279:
 16466               		.cfi_def_cfa_offset 11
 16467 6e7a 0FB6      		in __tmp_reg__,__SREG__
 16468 6e7c F894      		cli
 16469 6e7e DEBF      		out __SP_H__,r29
 16470 6e80 0FBE      		out __SREG__,__tmp_reg__
 16471 6e82 CDBF      		out __SP_L__,r28
 16472               	/* prologue: function */
 16473               	/* frame size = 7 */
 16474               	/* stack size = 9 */
 16475               	.L__stack_usage = 9
 16476 6e84 9C83      		std Y+4,r25
 16477 6e86 8B83      		std Y+3,r24
 16478 6e88 7E83      		std Y+6,r23
 16479 6e8a 6D83      		std Y+5,r22
 16480 6e8c 4F83      		std Y+7,r20
1673:lp_solve_5.5/lp_price.c ****   partialrec *blockdata;
1674:lp_solve_5.5/lp_price.c **** 
1675:lp_solve_5.5/lp_price.c ****   blockdata = IF(isrow, lp->rowblocks, lp->colblocks);
 16481               		.loc 1 1675 0
 16482 6e8e 8F81      		ldd r24,Y+7
 16483 6e90 8823      		tst r24
 16484 6e92 01F0      		breq .L510
 16485               		.loc 1 1675 0 is_stmt 0 discriminator 1
 16486 6e94 8B81      		ldd r24,Y+3
 16487 6e96 9C81      		ldd r25,Y+4
 16488 6e98 8E57      		subi r24,126
 16489 6e9a 9D4F      		sbci r25,-3
 16490 6e9c FC01      		movw r30,r24
 16491 6e9e 8081      		ld r24,Z
 16492 6ea0 9181      		ldd r25,Z+1
 16493 6ea2 00C0      		rjmp .L511
 16494               	.L510:
 16495               		.loc 1 1675 0 discriminator 2
 16496 6ea4 8B81      		ldd r24,Y+3
 16497 6ea6 9C81      		ldd r25,Y+4
 16498 6ea8 8C57      		subi r24,124
 16499 6eaa 9D4F      		sbci r25,-3
 16500 6eac FC01      		movw r30,r24
 16501 6eae 8081      		ld r24,Z
 16502 6eb0 9181      		ldd r25,Z+1
 16503               	.L511:
 16504               		.loc 1 1675 0 discriminator 4
 16505 6eb2 9A83      		std Y+2,r25
 16506 6eb4 8983      		std Y+1,r24
1676:lp_solve_5.5/lp_price.c **** #ifdef Paranoia
1677:lp_solve_5.5/lp_price.c ****   if((blockdata == NULL) || (block <= 1) || (block > blockdata->blockcount)) {
1678:lp_solve_5.5/lp_price.c ****     report(lp, SEVERE, "partial_blockNextPos: Invalid block %d specified.\n",
1679:lp_solve_5.5/lp_price.c ****                        block);
1680:lp_solve_5.5/lp_price.c ****     return( -1 );
1681:lp_solve_5.5/lp_price.c ****   }
1682:lp_solve_5.5/lp_price.c **** #endif
1683:lp_solve_5.5/lp_price.c ****   block--;
 16507               		.loc 1 1683 0 is_stmt 1 discriminator 4
 16508 6eb6 8D81      		ldd r24,Y+5
 16509 6eb8 9E81      		ldd r25,Y+6
 16510 6eba 0197      		sbiw r24,1
 16511 6ebc 9E83      		std Y+6,r25
 16512 6ebe 8D83      		std Y+5,r24
1684:lp_solve_5.5/lp_price.c ****   if(blockdata->blockpos[block] == blockdata->blockend[block+1])
 16513               		.loc 1 1684 0 discriminator 4
 16514 6ec0 8981      		ldd r24,Y+1
 16515 6ec2 9A81      		ldd r25,Y+2
 16516 6ec4 FC01      		movw r30,r24
 16517 6ec6 2085      		ldd r18,Z+8
 16518 6ec8 3185      		ldd r19,Z+9
 16519 6eca 8D81      		ldd r24,Y+5
 16520 6ecc 9E81      		ldd r25,Y+6
 16521 6ece 880F      		lsl r24
 16522 6ed0 991F      		rol r25
 16523 6ed2 820F      		add r24,r18
 16524 6ed4 931F      		adc r25,r19
 16525 6ed6 FC01      		movw r30,r24
 16526 6ed8 2081      		ld r18,Z
 16527 6eda 3181      		ldd r19,Z+1
 16528 6edc 8981      		ldd r24,Y+1
 16529 6ede 9A81      		ldd r25,Y+2
 16530 6ee0 FC01      		movw r30,r24
 16531 6ee2 4681      		ldd r20,Z+6
 16532 6ee4 5781      		ldd r21,Z+7
 16533 6ee6 8D81      		ldd r24,Y+5
 16534 6ee8 9E81      		ldd r25,Y+6
 16535 6eea 0196      		adiw r24,1
 16536 6eec 880F      		lsl r24
 16537 6eee 991F      		rol r25
 16538 6ef0 840F      		add r24,r20
 16539 6ef2 951F      		adc r25,r21
 16540 6ef4 FC01      		movw r30,r24
 16541 6ef6 8081      		ld r24,Z
 16542 6ef8 9181      		ldd r25,Z+1
 16543 6efa 2817      		cp r18,r24
 16544 6efc 3907      		cpc r19,r25
 16545 6efe 01F4      		brne .L512
1685:lp_solve_5.5/lp_price.c ****     blockdata->blockpos[block] = blockdata->blockend[block];
 16546               		.loc 1 1685 0
 16547 6f00 8981      		ldd r24,Y+1
 16548 6f02 9A81      		ldd r25,Y+2
 16549 6f04 FC01      		movw r30,r24
 16550 6f06 2085      		ldd r18,Z+8
 16551 6f08 3185      		ldd r19,Z+9
 16552 6f0a 8D81      		ldd r24,Y+5
 16553 6f0c 9E81      		ldd r25,Y+6
 16554 6f0e 880F      		lsl r24
 16555 6f10 991F      		rol r25
 16556 6f12 820F      		add r24,r18
 16557 6f14 931F      		adc r25,r19
 16558 6f16 2981      		ldd r18,Y+1
 16559 6f18 3A81      		ldd r19,Y+2
 16560 6f1a F901      		movw r30,r18
 16561 6f1c 4681      		ldd r20,Z+6
 16562 6f1e 5781      		ldd r21,Z+7
 16563 6f20 2D81      		ldd r18,Y+5
 16564 6f22 3E81      		ldd r19,Y+6
 16565 6f24 220F      		lsl r18
 16566 6f26 331F      		rol r19
 16567 6f28 240F      		add r18,r20
 16568 6f2a 351F      		adc r19,r21
 16569 6f2c F901      		movw r30,r18
 16570 6f2e 2081      		ld r18,Z
 16571 6f30 3181      		ldd r19,Z+1
 16572 6f32 FC01      		movw r30,r24
 16573 6f34 3183      		std Z+1,r19
 16574 6f36 2083      		st Z,r18
 16575 6f38 00C0      		rjmp .L513
 16576               	.L512:
1686:lp_solve_5.5/lp_price.c ****   else
1687:lp_solve_5.5/lp_price.c ****     blockdata->blockpos[block]++;
 16577               		.loc 1 1687 0
 16578 6f3a 8981      		ldd r24,Y+1
 16579 6f3c 9A81      		ldd r25,Y+2
 16580 6f3e FC01      		movw r30,r24
 16581 6f40 2085      		ldd r18,Z+8
 16582 6f42 3185      		ldd r19,Z+9
 16583 6f44 8D81      		ldd r24,Y+5
 16584 6f46 9E81      		ldd r25,Y+6
 16585 6f48 880F      		lsl r24
 16586 6f4a 991F      		rol r25
 16587 6f4c 820F      		add r24,r18
 16588 6f4e 931F      		adc r25,r19
 16589 6f50 FC01      		movw r30,r24
 16590 6f52 2081      		ld r18,Z
 16591 6f54 3181      		ldd r19,Z+1
 16592 6f56 2F5F      		subi r18,-1
 16593 6f58 3F4F      		sbci r19,-1
 16594 6f5a FC01      		movw r30,r24
 16595 6f5c 3183      		std Z+1,r19
 16596 6f5e 2083      		st Z,r18
 16597               	.L513:
1688:lp_solve_5.5/lp_price.c ****   return( blockdata->blockpos[block] );
 16598               		.loc 1 1688 0
 16599 6f60 8981      		ldd r24,Y+1
 16600 6f62 9A81      		ldd r25,Y+2
 16601 6f64 FC01      		movw r30,r24
 16602 6f66 2085      		ldd r18,Z+8
 16603 6f68 3185      		ldd r19,Z+9
 16604 6f6a 8D81      		ldd r24,Y+5
 16605 6f6c 9E81      		ldd r25,Y+6
 16606 6f6e 880F      		lsl r24
 16607 6f70 991F      		rol r25
 16608 6f72 820F      		add r24,r18
 16609 6f74 931F      		adc r25,r19
 16610 6f76 FC01      		movw r30,r24
 16611 6f78 8081      		ld r24,Z
 16612 6f7a 9181      		ldd r25,Z+1
 16613               	/* epilogue start */
1689:lp_solve_5.5/lp_price.c **** }
 16614               		.loc 1 1689 0
 16615 6f7c 2796      		adiw r28,7
 16616 6f7e 0FB6      		in __tmp_reg__,__SREG__
 16617 6f80 F894      		cli
 16618 6f82 DEBF      		out __SP_H__,r29
 16619 6f84 0FBE      		out __SREG__,__tmp_reg__
 16620 6f86 CDBF      		out __SP_L__,r28
 16621 6f88 DF91      		pop r29
 16622 6f8a CF91      		pop r28
 16623 6f8c 0895      		ret
 16624               		.cfi_endproc
 16625               	.LFE37:
 16627               	.global	partial_blockStep
 16629               	partial_blockStep:
 16630               	.LFB38:
1690:lp_solve_5.5/lp_price.c **** STATIC MYBOOL partial_blockStep(lprec *lp, MYBOOL isrow)
1691:lp_solve_5.5/lp_price.c **** {
 16631               		.loc 1 1691 0
 16632               		.cfi_startproc
 16633 6f8e CF93      		push r28
 16634               	.LCFI280:
 16635               		.cfi_def_cfa_offset 3
 16636               		.cfi_offset 28, -2
 16637 6f90 DF93      		push r29
 16638               	.LCFI281:
 16639               		.cfi_def_cfa_offset 4
 16640               		.cfi_offset 29, -3
 16641 6f92 00D0      		rcall .
 16642 6f94 00D0      		rcall .
 16643 6f96 1F92      		push __zero_reg__
 16644               	.LCFI282:
 16645               		.cfi_def_cfa_offset 9
 16646 6f98 CDB7      		in r28,__SP_L__
 16647 6f9a DEB7      		in r29,__SP_H__
 16648               	.LCFI283:
 16649               		.cfi_def_cfa_register 28
 16650               	/* prologue: function */
 16651               	/* frame size = 5 */
 16652               	/* stack size = 7 */
 16653               	.L__stack_usage = 7
 16654 6f9c 9C83      		std Y+4,r25
 16655 6f9e 8B83      		std Y+3,r24
 16656 6fa0 6D83      		std Y+5,r22
1692:lp_solve_5.5/lp_price.c ****   partialrec *blockdata;
1693:lp_solve_5.5/lp_price.c **** 
1694:lp_solve_5.5/lp_price.c ****   blockdata = IF(isrow, lp->rowblocks, lp->colblocks);
 16657               		.loc 1 1694 0
 16658 6fa2 8D81      		ldd r24,Y+5
 16659 6fa4 8823      		tst r24
 16660 6fa6 01F0      		breq .L516
 16661               		.loc 1 1694 0 is_stmt 0 discriminator 1
 16662 6fa8 8B81      		ldd r24,Y+3
 16663 6faa 9C81      		ldd r25,Y+4
 16664 6fac 8E57      		subi r24,126
 16665 6fae 9D4F      		sbci r25,-3
 16666 6fb0 FC01      		movw r30,r24
 16667 6fb2 8081      		ld r24,Z
 16668 6fb4 9181      		ldd r25,Z+1
 16669 6fb6 00C0      		rjmp .L517
 16670               	.L516:
 16671               		.loc 1 1694 0 discriminator 2
 16672 6fb8 8B81      		ldd r24,Y+3
 16673 6fba 9C81      		ldd r25,Y+4
 16674 6fbc 8C57      		subi r24,124
 16675 6fbe 9D4F      		sbci r25,-3
 16676 6fc0 FC01      		movw r30,r24
 16677 6fc2 8081      		ld r24,Z
 16678 6fc4 9181      		ldd r25,Z+1
 16679               	.L517:
 16680               		.loc 1 1694 0 discriminator 4
 16681 6fc6 9A83      		std Y+2,r25
 16682 6fc8 8983      		std Y+1,r24
1695:lp_solve_5.5/lp_price.c ****   if(blockdata == NULL)
 16683               		.loc 1 1695 0 is_stmt 1 discriminator 4
 16684 6fca 8981      		ldd r24,Y+1
 16685 6fcc 9A81      		ldd r25,Y+2
 16686 6fce 892B      		or r24,r25
 16687 6fd0 01F4      		brne .L518
1696:lp_solve_5.5/lp_price.c ****     return( FALSE );
 16688               		.loc 1 1696 0
 16689 6fd2 80E0      		ldi r24,0
 16690 6fd4 00C0      		rjmp .L519
 16691               	.L518:
1697:lp_solve_5.5/lp_price.c ****   else if(blockdata->blocknow < blockdata->blockcount) {
 16692               		.loc 1 1697 0
 16693 6fd6 8981      		ldd r24,Y+1
 16694 6fd8 9A81      		ldd r25,Y+2
 16695 6fda FC01      		movw r30,r24
 16696 6fdc 2481      		ldd r18,Z+4
 16697 6fde 3581      		ldd r19,Z+5
 16698 6fe0 8981      		ldd r24,Y+1
 16699 6fe2 9A81      		ldd r25,Y+2
 16700 6fe4 FC01      		movw r30,r24
 16701 6fe6 8281      		ldd r24,Z+2
 16702 6fe8 9381      		ldd r25,Z+3
 16703 6fea 2817      		cp r18,r24
 16704 6fec 3907      		cpc r19,r25
 16705 6fee 04F4      		brge .L520
1698:lp_solve_5.5/lp_price.c ****     blockdata->blocknow++;
 16706               		.loc 1 1698 0
 16707 6ff0 8981      		ldd r24,Y+1
 16708 6ff2 9A81      		ldd r25,Y+2
 16709 6ff4 FC01      		movw r30,r24
 16710 6ff6 8481      		ldd r24,Z+4
 16711 6ff8 9581      		ldd r25,Z+5
 16712 6ffa 9C01      		movw r18,r24
 16713 6ffc 2F5F      		subi r18,-1
 16714 6ffe 3F4F      		sbci r19,-1
 16715 7000 8981      		ldd r24,Y+1
 16716 7002 9A81      		ldd r25,Y+2
 16717 7004 FC01      		movw r30,r24
 16718 7006 3583      		std Z+5,r19
 16719 7008 2483      		std Z+4,r18
1699:lp_solve_5.5/lp_price.c ****     return( TRUE);
 16720               		.loc 1 1699 0
 16721 700a 81E0      		ldi r24,lo8(1)
 16722 700c 00C0      		rjmp .L519
 16723               	.L520:
1700:lp_solve_5.5/lp_price.c ****   }
1701:lp_solve_5.5/lp_price.c ****   else {
1702:lp_solve_5.5/lp_price.c ****     blockdata->blocknow = 1;
 16724               		.loc 1 1702 0
 16725 700e 8981      		ldd r24,Y+1
 16726 7010 9A81      		ldd r25,Y+2
 16727 7012 21E0      		ldi r18,lo8(1)
 16728 7014 30E0      		ldi r19,0
 16729 7016 FC01      		movw r30,r24
 16730 7018 3583      		std Z+5,r19
 16731 701a 2483      		std Z+4,r18
1703:lp_solve_5.5/lp_price.c ****     return( TRUE );
 16732               		.loc 1 1703 0
 16733 701c 81E0      		ldi r24,lo8(1)
 16734               	.L519:
 16735               	/* epilogue start */
1704:lp_solve_5.5/lp_price.c ****   }
1705:lp_solve_5.5/lp_price.c **** }
 16736               		.loc 1 1705 0
 16737 701e 0F90      		pop __tmp_reg__
 16738 7020 0F90      		pop __tmp_reg__
 16739 7022 0F90      		pop __tmp_reg__
 16740 7024 0F90      		pop __tmp_reg__
 16741 7026 0F90      		pop __tmp_reg__
 16742 7028 DF91      		pop r29
 16743 702a CF91      		pop r28
 16744 702c 0895      		ret
 16745               		.cfi_endproc
 16746               	.LFE38:
 16748               	.global	partial_isVarActive
 16750               	partial_isVarActive:
 16751               	.LFB39:
1706:lp_solve_5.5/lp_price.c **** STATIC MYBOOL partial_isVarActive(lprec *lp, int varno, MYBOOL isrow)
1707:lp_solve_5.5/lp_price.c **** {
 16752               		.loc 1 1707 0
 16753               		.cfi_startproc
 16754 702e CF93      		push r28
 16755               	.LCFI284:
 16756               		.cfi_def_cfa_offset 3
 16757               		.cfi_offset 28, -2
 16758 7030 DF93      		push r29
 16759               	.LCFI285:
 16760               		.cfi_def_cfa_offset 4
 16761               		.cfi_offset 29, -3
 16762 7032 CDB7      		in r28,__SP_L__
 16763 7034 DEB7      		in r29,__SP_H__
 16764               	.LCFI286:
 16765               		.cfi_def_cfa_register 28
 16766 7036 2797      		sbiw r28,7
 16767               	.LCFI287:
 16768               		.cfi_def_cfa_offset 11
 16769 7038 0FB6      		in __tmp_reg__,__SREG__
 16770 703a F894      		cli
 16771 703c DEBF      		out __SP_H__,r29
 16772 703e 0FBE      		out __SREG__,__tmp_reg__
 16773 7040 CDBF      		out __SP_L__,r28
 16774               	/* prologue: function */
 16775               	/* frame size = 7 */
 16776               	/* stack size = 9 */
 16777               	.L__stack_usage = 9
 16778 7042 9C83      		std Y+4,r25
 16779 7044 8B83      		std Y+3,r24
 16780 7046 7E83      		std Y+6,r23
 16781 7048 6D83      		std Y+5,r22
 16782 704a 4F83      		std Y+7,r20
1708:lp_solve_5.5/lp_price.c ****   partialrec *blockdata;
1709:lp_solve_5.5/lp_price.c **** 
1710:lp_solve_5.5/lp_price.c ****   blockdata = IF(isrow, lp->rowblocks, lp->colblocks);
 16783               		.loc 1 1710 0
 16784 704c 8F81      		ldd r24,Y+7
 16785 704e 8823      		tst r24
 16786 7050 01F0      		breq .L522
 16787               		.loc 1 1710 0 is_stmt 0 discriminator 1
 16788 7052 8B81      		ldd r24,Y+3
 16789 7054 9C81      		ldd r25,Y+4
 16790 7056 8E57      		subi r24,126
 16791 7058 9D4F      		sbci r25,-3
 16792 705a FC01      		movw r30,r24
 16793 705c 8081      		ld r24,Z
 16794 705e 9181      		ldd r25,Z+1
 16795 7060 00C0      		rjmp .L523
 16796               	.L522:
 16797               		.loc 1 1710 0 discriminator 2
 16798 7062 8B81      		ldd r24,Y+3
 16799 7064 9C81      		ldd r25,Y+4
 16800 7066 8C57      		subi r24,124
 16801 7068 9D4F      		sbci r25,-3
 16802 706a FC01      		movw r30,r24
 16803 706c 8081      		ld r24,Z
 16804 706e 9181      		ldd r25,Z+1
 16805               	.L523:
 16806               		.loc 1 1710 0 discriminator 4
 16807 7070 9A83      		std Y+2,r25
 16808 7072 8983      		std Y+1,r24
1711:lp_solve_5.5/lp_price.c ****   if(blockdata == NULL)
 16809               		.loc 1 1711 0 is_stmt 1 discriminator 4
 16810 7074 8981      		ldd r24,Y+1
 16811 7076 9A81      		ldd r25,Y+2
 16812 7078 892B      		or r24,r25
 16813 707a 01F4      		brne .L524
1712:lp_solve_5.5/lp_price.c ****     return( TRUE );
 16814               		.loc 1 1712 0
 16815 707c 81E0      		ldi r24,lo8(1)
 16816 707e 00C0      		rjmp .L525
 16817               	.L524:
1713:lp_solve_5.5/lp_price.c ****   else {
1714:lp_solve_5.5/lp_price.c ****     return( (MYBOOL) ((varno >= blockdata->blockend[blockdata->blocknow-1]) &&
 16818               		.loc 1 1714 0
 16819 7080 8981      		ldd r24,Y+1
 16820 7082 9A81      		ldd r25,Y+2
 16821 7084 FC01      		movw r30,r24
 16822 7086 2681      		ldd r18,Z+6
 16823 7088 3781      		ldd r19,Z+7
 16824 708a 8981      		ldd r24,Y+1
 16825 708c 9A81      		ldd r25,Y+2
 16826 708e FC01      		movw r30,r24
 16827 7090 8481      		ldd r24,Z+4
 16828 7092 9581      		ldd r25,Z+5
 16829 7094 8150      		subi r24,1
 16830 7096 9048      		sbci r25,-128
 16831 7098 880F      		lsl r24
 16832 709a 991F      		rol r25
 16833 709c 820F      		add r24,r18
 16834 709e 931F      		adc r25,r19
 16835 70a0 FC01      		movw r30,r24
 16836 70a2 2081      		ld r18,Z
 16837 70a4 3181      		ldd r19,Z+1
 16838 70a6 8D81      		ldd r24,Y+5
 16839 70a8 9E81      		ldd r25,Y+6
 16840 70aa 8217      		cp r24,r18
 16841 70ac 9307      		cpc r25,r19
 16842 70ae 04F0      		brlt .L526
1715:lp_solve_5.5/lp_price.c ****                       (varno < blockdata->blockend[blockdata->blocknow])) );
 16843               		.loc 1 1715 0 discriminator 1
 16844 70b0 8981      		ldd r24,Y+1
 16845 70b2 9A81      		ldd r25,Y+2
 16846 70b4 FC01      		movw r30,r24
 16847 70b6 2681      		ldd r18,Z+6
 16848 70b8 3781      		ldd r19,Z+7
 16849 70ba 8981      		ldd r24,Y+1
 16850 70bc 9A81      		ldd r25,Y+2
 16851 70be FC01      		movw r30,r24
 16852 70c0 8481      		ldd r24,Z+4
 16853 70c2 9581      		ldd r25,Z+5
 16854 70c4 880F      		lsl r24
 16855 70c6 991F      		rol r25
 16856 70c8 820F      		add r24,r18
 16857 70ca 931F      		adc r25,r19
 16858 70cc FC01      		movw r30,r24
 16859 70ce 2081      		ld r18,Z
 16860 70d0 3181      		ldd r19,Z+1
1714:lp_solve_5.5/lp_price.c ****                       (varno < blockdata->blockend[blockdata->blocknow])) );
 16861               		.loc 1 1714 0 discriminator 1
 16862 70d2 8D81      		ldd r24,Y+5
 16863 70d4 9E81      		ldd r25,Y+6
 16864 70d6 8217      		cp r24,r18
 16865 70d8 9307      		cpc r25,r19
 16866 70da 04F4      		brge .L526
1714:lp_solve_5.5/lp_price.c ****                       (varno < blockdata->blockend[blockdata->blocknow])) );
 16867               		.loc 1 1714 0 is_stmt 0 discriminator 3
 16868 70dc 81E0      		ldi r24,lo8(1)
 16869 70de 90E0      		ldi r25,0
 16870 70e0 00C0      		rjmp .L527
 16871               	.L526:
1714:lp_solve_5.5/lp_price.c ****                       (varno < blockdata->blockend[blockdata->blocknow])) );
 16872               		.loc 1 1714 0 discriminator 4
 16873 70e2 80E0      		ldi r24,0
 16874 70e4 90E0      		ldi r25,0
 16875               	.L527:
 16876               	.L525:
 16877               	/* epilogue start */
1716:lp_solve_5.5/lp_price.c ****   }
1717:lp_solve_5.5/lp_price.c **** }
 16878               		.loc 1 1717 0 is_stmt 1
 16879 70e6 2796      		adiw r28,7
 16880 70e8 0FB6      		in __tmp_reg__,__SREG__
 16881 70ea F894      		cli
 16882 70ec DEBF      		out __SP_H__,r29
 16883 70ee 0FBE      		out __SREG__,__tmp_reg__
 16884 70f0 CDBF      		out __SP_L__,r28
 16885 70f2 DF91      		pop r29
 16886 70f4 CF91      		pop r28
 16887 70f6 0895      		ret
 16888               		.cfi_endproc
 16889               	.LFE39:
 16891               	.global	multi_create
 16893               	multi_create:
 16894               	.LFB40:
1718:lp_solve_5.5/lp_price.c **** 
1719:lp_solve_5.5/lp_price.c **** 
1720:lp_solve_5.5/lp_price.c **** /* Multiple pricing routines */
1721:lp_solve_5.5/lp_price.c **** STATIC multirec *multi_create(lprec *lp, MYBOOL truncinf)
1722:lp_solve_5.5/lp_price.c **** {
 16895               		.loc 1 1722 0
 16896               		.cfi_startproc
 16897 70f8 CF93      		push r28
 16898               	.LCFI288:
 16899               		.cfi_def_cfa_offset 3
 16900               		.cfi_offset 28, -2
 16901 70fa DF93      		push r29
 16902               	.LCFI289:
 16903               		.cfi_def_cfa_offset 4
 16904               		.cfi_offset 29, -3
 16905 70fc 00D0      		rcall .
 16906 70fe 00D0      		rcall .
 16907 7100 1F92      		push __zero_reg__
 16908               	.LCFI290:
 16909               		.cfi_def_cfa_offset 9
 16910 7102 CDB7      		in r28,__SP_L__
 16911 7104 DEB7      		in r29,__SP_H__
 16912               	.LCFI291:
 16913               		.cfi_def_cfa_register 28
 16914               	/* prologue: function */
 16915               	/* frame size = 5 */
 16916               	/* stack size = 7 */
 16917               	.L__stack_usage = 7
 16918 7106 9C83      		std Y+4,r25
 16919 7108 8B83      		std Y+3,r24
 16920 710a 6D83      		std Y+5,r22
1723:lp_solve_5.5/lp_price.c ****   multirec *multi;
1724:lp_solve_5.5/lp_price.c **** 
1725:lp_solve_5.5/lp_price.c ****   multi = (multirec *) calloc(1, sizeof(*multi));
 16921               		.loc 1 1725 0
 16922 710c 68E3      		ldi r22,lo8(56)
 16923 710e 70E0      		ldi r23,0
 16924 7110 81E0      		ldi r24,lo8(1)
 16925 7112 90E0      		ldi r25,0
 16926 7114 0E94 0000 		call calloc
 16927 7118 9A83      		std Y+2,r25
 16928 711a 8983      		std Y+1,r24
1726:lp_solve_5.5/lp_price.c ****   if(multi != NULL) {
 16929               		.loc 1 1726 0
 16930 711c 8981      		ldd r24,Y+1
 16931 711e 9A81      		ldd r25,Y+2
 16932 7120 892B      		or r24,r25
 16933 7122 01F0      		breq .L529
1727:lp_solve_5.5/lp_price.c ****     multi->active = 1;
 16934               		.loc 1 1727 0
 16935 7124 8981      		ldd r24,Y+1
 16936 7126 9A81      		ldd r25,Y+2
 16937 7128 21E0      		ldi r18,lo8(1)
 16938 712a 30E0      		ldi r19,0
 16939 712c FC01      		movw r30,r24
 16940 712e 358B      		std Z+21,r19
 16941 7130 248B      		std Z+20,r18
1728:lp_solve_5.5/lp_price.c ****     multi->lp = lp;
 16942               		.loc 1 1728 0
 16943 7132 8981      		ldd r24,Y+1
 16944 7134 9A81      		ldd r25,Y+2
 16945 7136 2B81      		ldd r18,Y+3
 16946 7138 3C81      		ldd r19,Y+4
 16947 713a FC01      		movw r30,r24
 16948 713c 3183      		std Z+1,r19
 16949 713e 2083      		st Z,r18
1729:lp_solve_5.5/lp_price.c ****     multi->epszero = lp->epsprimal;
 16950               		.loc 1 1729 0
 16951 7140 8B81      		ldd r24,Y+3
 16952 7142 9C81      		ldd r25,Y+4
 16953 7144 865E      		subi r24,-26
 16954 7146 9C4F      		sbci r25,-4
 16955 7148 FC01      		movw r30,r24
 16956 714a 8081      		ld r24,Z
 16957 714c 9181      		ldd r25,Z+1
 16958 714e A281      		ldd r26,Z+2
 16959 7150 B381      		ldd r27,Z+3
 16960 7152 2981      		ldd r18,Y+1
 16961 7154 3A81      		ldd r19,Y+2
 16962 7156 F901      		movw r30,r18
 16963 7158 80A7      		std Z+40,r24
 16964 715a 91A7      		std Z+41,r25
 16965 715c A2A7      		std Z+42,r26
 16966 715e B3A7      		std Z+43,r27
1730:lp_solve_5.5/lp_price.c ****     multi->truncinf = truncinf;
 16967               		.loc 1 1730 0
 16968 7160 8981      		ldd r24,Y+1
 16969 7162 9A81      		ldd r25,Y+2
 16970 7164 2D81      		ldd r18,Y+5
 16971 7166 FC01      		movw r30,r24
 16972 7168 25AB      		std Z+53,r18
 16973               	.L529:
1731:lp_solve_5.5/lp_price.c ****   }
1732:lp_solve_5.5/lp_price.c **** 
1733:lp_solve_5.5/lp_price.c ****   return(multi);
 16974               		.loc 1 1733 0
 16975 716a 8981      		ldd r24,Y+1
 16976 716c 9A81      		ldd r25,Y+2
 16977               	/* epilogue start */
1734:lp_solve_5.5/lp_price.c **** }
 16978               		.loc 1 1734 0
 16979 716e 0F90      		pop __tmp_reg__
 16980 7170 0F90      		pop __tmp_reg__
 16981 7172 0F90      		pop __tmp_reg__
 16982 7174 0F90      		pop __tmp_reg__
 16983 7176 0F90      		pop __tmp_reg__
 16984 7178 DF91      		pop r29
 16985 717a CF91      		pop r28
 16986 717c 0895      		ret
 16987               		.cfi_endproc
 16988               	.LFE40:
 16990               	.global	multi_free
 16992               	multi_free:
 16993               	.LFB41:
1735:lp_solve_5.5/lp_price.c **** STATIC void multi_free(multirec **multi)
1736:lp_solve_5.5/lp_price.c **** {
 16994               		.loc 1 1736 0
 16995               		.cfi_startproc
 16996 717e CF93      		push r28
 16997               	.LCFI292:
 16998               		.cfi_def_cfa_offset 3
 16999               		.cfi_offset 28, -2
 17000 7180 DF93      		push r29
 17001               	.LCFI293:
 17002               		.cfi_def_cfa_offset 4
 17003               		.cfi_offset 29, -3
 17004 7182 00D0      		rcall .
 17005               	.LCFI294:
 17006               		.cfi_def_cfa_offset 6
 17007 7184 CDB7      		in r28,__SP_L__
 17008 7186 DEB7      		in r29,__SP_H__
 17009               	.LCFI295:
 17010               		.cfi_def_cfa_register 28
 17011               	/* prologue: function */
 17012               	/* frame size = 2 */
 17013               	/* stack size = 4 */
 17014               	.L__stack_usage = 4
 17015 7188 9A83      		std Y+2,r25
 17016 718a 8983      		std Y+1,r24
1737:lp_solve_5.5/lp_price.c ****   if((multi == NULL) || (*multi == NULL))
 17017               		.loc 1 1737 0
 17018 718c 8981      		ldd r24,Y+1
 17019 718e 9A81      		ldd r25,Y+2
 17020 7190 892B      		or r24,r25
 17021 7192 01F4      		brne .+2
 17022 7194 00C0      		rjmp .L540
 17023               		.loc 1 1737 0 is_stmt 0 discriminator 1
 17024 7196 8981      		ldd r24,Y+1
 17025 7198 9A81      		ldd r25,Y+2
 17026 719a FC01      		movw r30,r24
 17027 719c 8081      		ld r24,Z
 17028 719e 9181      		ldd r25,Z+1
 17029 71a0 892B      		or r24,r25
 17030 71a2 01F4      		brne .+2
 17031 71a4 00C0      		rjmp .L540
1738:lp_solve_5.5/lp_price.c ****     return;
1739:lp_solve_5.5/lp_price.c ****   FREE((*multi)->items);
 17032               		.loc 1 1739 0 is_stmt 1
 17033 71a6 8981      		ldd r24,Y+1
 17034 71a8 9A81      		ldd r25,Y+2
 17035 71aa FC01      		movw r30,r24
 17036 71ac 8081      		ld r24,Z
 17037 71ae 9181      		ldd r25,Z+1
 17038 71b0 FC01      		movw r30,r24
 17039 71b2 8085      		ldd r24,Z+8
 17040 71b4 9185      		ldd r25,Z+9
 17041 71b6 892B      		or r24,r25
 17042 71b8 01F0      		breq .L535
 17043               		.loc 1 1739 0 is_stmt 0 discriminator 1
 17044 71ba 8981      		ldd r24,Y+1
 17045 71bc 9A81      		ldd r25,Y+2
 17046 71be FC01      		movw r30,r24
 17047 71c0 8081      		ld r24,Z
 17048 71c2 9181      		ldd r25,Z+1
 17049 71c4 FC01      		movw r30,r24
 17050 71c6 8085      		ldd r24,Z+8
 17051 71c8 9185      		ldd r25,Z+9
 17052 71ca 0E94 0000 		call free
 17053 71ce 8981      		ldd r24,Y+1
 17054 71d0 9A81      		ldd r25,Y+2
 17055 71d2 FC01      		movw r30,r24
 17056 71d4 8081      		ld r24,Z
 17057 71d6 9181      		ldd r25,Z+1
 17058 71d8 FC01      		movw r30,r24
 17059 71da 1186      		std Z+9,__zero_reg__
 17060 71dc 1086      		std Z+8,__zero_reg__
 17061               	.L535:
1740:lp_solve_5.5/lp_price.c ****   FREE((*multi)->valueList);
 17062               		.loc 1 1740 0 is_stmt 1
 17063 71de 8981      		ldd r24,Y+1
 17064 71e0 9A81      		ldd r25,Y+2
 17065 71e2 FC01      		movw r30,r24
 17066 71e4 8081      		ld r24,Z
 17067 71e6 9181      		ldd r25,Z+1
 17068 71e8 FC01      		movw r30,r24
 17069 71ea 8089      		ldd r24,Z+16
 17070 71ec 9189      		ldd r25,Z+17
 17071 71ee 892B      		or r24,r25
 17072 71f0 01F0      		breq .L536
 17073               		.loc 1 1740 0 is_stmt 0 discriminator 1
 17074 71f2 8981      		ldd r24,Y+1
 17075 71f4 9A81      		ldd r25,Y+2
 17076 71f6 FC01      		movw r30,r24
 17077 71f8 8081      		ld r24,Z
 17078 71fa 9181      		ldd r25,Z+1
 17079 71fc FC01      		movw r30,r24
 17080 71fe 8089      		ldd r24,Z+16
 17081 7200 9189      		ldd r25,Z+17
 17082 7202 0E94 0000 		call free
 17083 7206 8981      		ldd r24,Y+1
 17084 7208 9A81      		ldd r25,Y+2
 17085 720a FC01      		movw r30,r24
 17086 720c 8081      		ld r24,Z
 17087 720e 9181      		ldd r25,Z+1
 17088 7210 FC01      		movw r30,r24
 17089 7212 118A      		std Z+17,__zero_reg__
 17090 7214 108A      		std Z+16,__zero_reg__
 17091               	.L536:
1741:lp_solve_5.5/lp_price.c ****   FREE((*multi)->indexSet);
 17092               		.loc 1 1741 0 is_stmt 1
 17093 7216 8981      		ldd r24,Y+1
 17094 7218 9A81      		ldd r25,Y+2
 17095 721a FC01      		movw r30,r24
 17096 721c 8081      		ld r24,Z
 17097 721e 9181      		ldd r25,Z+1
 17098 7220 FC01      		movw r30,r24
 17099 7222 8289      		ldd r24,Z+18
 17100 7224 9389      		ldd r25,Z+19
 17101 7226 892B      		or r24,r25
 17102 7228 01F0      		breq .L537
 17103               		.loc 1 1741 0 is_stmt 0 discriminator 1
 17104 722a 8981      		ldd r24,Y+1
 17105 722c 9A81      		ldd r25,Y+2
 17106 722e FC01      		movw r30,r24
 17107 7230 8081      		ld r24,Z
 17108 7232 9181      		ldd r25,Z+1
 17109 7234 FC01      		movw r30,r24
 17110 7236 8289      		ldd r24,Z+18
 17111 7238 9389      		ldd r25,Z+19
 17112 723a 0E94 0000 		call free
 17113 723e 8981      		ldd r24,Y+1
 17114 7240 9A81      		ldd r25,Y+2
 17115 7242 FC01      		movw r30,r24
 17116 7244 8081      		ld r24,Z
 17117 7246 9181      		ldd r25,Z+1
 17118 7248 FC01      		movw r30,r24
 17119 724a 138A      		std Z+19,__zero_reg__
 17120 724c 128A      		std Z+18,__zero_reg__
 17121               	.L537:
1742:lp_solve_5.5/lp_price.c ****   FREE((*multi)->freeList);
 17122               		.loc 1 1742 0 is_stmt 1
 17123 724e 8981      		ldd r24,Y+1
 17124 7250 9A81      		ldd r25,Y+2
 17125 7252 FC01      		movw r30,r24
 17126 7254 8081      		ld r24,Z
 17127 7256 9181      		ldd r25,Z+1
 17128 7258 FC01      		movw r30,r24
 17129 725a 8285      		ldd r24,Z+10
 17130 725c 9385      		ldd r25,Z+11
 17131 725e 892B      		or r24,r25
 17132 7260 01F0      		breq .L538
 17133               		.loc 1 1742 0 is_stmt 0 discriminator 1
 17134 7262 8981      		ldd r24,Y+1
 17135 7264 9A81      		ldd r25,Y+2
 17136 7266 FC01      		movw r30,r24
 17137 7268 8081      		ld r24,Z
 17138 726a 9181      		ldd r25,Z+1
 17139 726c FC01      		movw r30,r24
 17140 726e 8285      		ldd r24,Z+10
 17141 7270 9385      		ldd r25,Z+11
 17142 7272 0E94 0000 		call free
 17143 7276 8981      		ldd r24,Y+1
 17144 7278 9A81      		ldd r25,Y+2
 17145 727a FC01      		movw r30,r24
 17146 727c 8081      		ld r24,Z
 17147 727e 9181      		ldd r25,Z+1
 17148 7280 FC01      		movw r30,r24
 17149 7282 1386      		std Z+11,__zero_reg__
 17150 7284 1286      		std Z+10,__zero_reg__
 17151               	.L538:
1743:lp_solve_5.5/lp_price.c ****   FREE((*multi)->sortedList);
 17152               		.loc 1 1743 0 is_stmt 1
 17153 7286 8981      		ldd r24,Y+1
 17154 7288 9A81      		ldd r25,Y+2
 17155 728a FC01      		movw r30,r24
 17156 728c 8081      		ld r24,Z
 17157 728e 9181      		ldd r25,Z+1
 17158 7290 FC01      		movw r30,r24
 17159 7292 8485      		ldd r24,Z+12
 17160 7294 9585      		ldd r25,Z+13
 17161 7296 892B      		or r24,r25
 17162 7298 01F0      		breq .L539
 17163               		.loc 1 1743 0 is_stmt 0 discriminator 1
 17164 729a 8981      		ldd r24,Y+1
 17165 729c 9A81      		ldd r25,Y+2
 17166 729e FC01      		movw r30,r24
 17167 72a0 8081      		ld r24,Z
 17168 72a2 9181      		ldd r25,Z+1
 17169 72a4 FC01      		movw r30,r24
 17170 72a6 8485      		ldd r24,Z+12
 17171 72a8 9585      		ldd r25,Z+13
 17172 72aa 0E94 0000 		call free
 17173 72ae 8981      		ldd r24,Y+1
 17174 72b0 9A81      		ldd r25,Y+2
 17175 72b2 FC01      		movw r30,r24
 17176 72b4 8081      		ld r24,Z
 17177 72b6 9181      		ldd r25,Z+1
 17178 72b8 FC01      		movw r30,r24
 17179 72ba 1586      		std Z+13,__zero_reg__
 17180 72bc 1486      		std Z+12,__zero_reg__
 17181               	.L539:
1744:lp_solve_5.5/lp_price.c ****   FREE(*multi);
 17182               		.loc 1 1744 0 is_stmt 1
 17183 72be 8981      		ldd r24,Y+1
 17184 72c0 9A81      		ldd r25,Y+2
 17185 72c2 FC01      		movw r30,r24
 17186 72c4 8081      		ld r24,Z
 17187 72c6 9181      		ldd r25,Z+1
 17188 72c8 892B      		or r24,r25
 17189 72ca 01F0      		breq .L531
 17190               		.loc 1 1744 0 is_stmt 0 discriminator 1
 17191 72cc 8981      		ldd r24,Y+1
 17192 72ce 9A81      		ldd r25,Y+2
 17193 72d0 FC01      		movw r30,r24
 17194 72d2 8081      		ld r24,Z
 17195 72d4 9181      		ldd r25,Z+1
 17196 72d6 0E94 0000 		call free
 17197 72da 8981      		ldd r24,Y+1
 17198 72dc 9A81      		ldd r25,Y+2
 17199 72de FC01      		movw r30,r24
 17200 72e0 1182      		std Z+1,__zero_reg__
 17201 72e2 1082      		st Z,__zero_reg__
 17202 72e4 00C0      		rjmp .L531
 17203               	.L540:
1738:lp_solve_5.5/lp_price.c ****   FREE((*multi)->items);
 17204               		.loc 1 1738 0 is_stmt 1
 17205 72e6 0000      		nop
 17206               	.L531:
 17207               	/* epilogue start */
1745:lp_solve_5.5/lp_price.c **** }
 17208               		.loc 1 1745 0
 17209 72e8 0F90      		pop __tmp_reg__
 17210 72ea 0F90      		pop __tmp_reg__
 17211 72ec DF91      		pop r29
 17212 72ee CF91      		pop r28
 17213 72f0 0895      		ret
 17214               		.cfi_endproc
 17215               	.LFE41:
 17217               	.global	multi_mustupdate
 17219               	multi_mustupdate:
 17220               	.LFB42:
1746:lp_solve_5.5/lp_price.c **** STATIC MYBOOL multi_mustupdate(multirec *multi)
1747:lp_solve_5.5/lp_price.c **** {
 17221               		.loc 1 1747 0
 17222               		.cfi_startproc
 17223 72f2 CF93      		push r28
 17224               	.LCFI296:
 17225               		.cfi_def_cfa_offset 3
 17226               		.cfi_offset 28, -2
 17227 72f4 DF93      		push r29
 17228               	.LCFI297:
 17229               		.cfi_def_cfa_offset 4
 17230               		.cfi_offset 29, -3
 17231 72f6 00D0      		rcall .
 17232               	.LCFI298:
 17233               		.cfi_def_cfa_offset 6
 17234 72f8 CDB7      		in r28,__SP_L__
 17235 72fa DEB7      		in r29,__SP_H__
 17236               	.LCFI299:
 17237               		.cfi_def_cfa_register 28
 17238               	/* prologue: function */
 17239               	/* frame size = 2 */
 17240               	/* stack size = 4 */
 17241               	.L__stack_usage = 4
 17242 72fc 9A83      		std Y+2,r25
 17243 72fe 8983      		std Y+1,r24
1748:lp_solve_5.5/lp_price.c ****   return( (MYBOOL) ((multi != NULL) &&
 17244               		.loc 1 1748 0
 17245 7300 8981      		ldd r24,Y+1
 17246 7302 9A81      		ldd r25,Y+2
 17247 7304 892B      		or r24,r25
 17248 7306 01F0      		breq .L542
1749:lp_solve_5.5/lp_price.c ****                      (multi->used < multi->limit)) );
 17249               		.loc 1 1749 0 discriminator 1
 17250 7308 8981      		ldd r24,Y+1
 17251 730a 9A81      		ldd r25,Y+2
 17252 730c FC01      		movw r30,r24
 17253 730e 2481      		ldd r18,Z+4
 17254 7310 3581      		ldd r19,Z+5
 17255 7312 8981      		ldd r24,Y+1
 17256 7314 9A81      		ldd r25,Y+2
 17257 7316 FC01      		movw r30,r24
 17258 7318 8681      		ldd r24,Z+6
 17259 731a 9781      		ldd r25,Z+7
1748:lp_solve_5.5/lp_price.c ****   return( (MYBOOL) ((multi != NULL) &&
 17260               		.loc 1 1748 0 discriminator 1
 17261 731c 2817      		cp r18,r24
 17262 731e 3907      		cpc r19,r25
 17263 7320 04F4      		brge .L542
1748:lp_solve_5.5/lp_price.c ****   return( (MYBOOL) ((multi != NULL) &&
 17264               		.loc 1 1748 0 is_stmt 0 discriminator 3
 17265 7322 81E0      		ldi r24,lo8(1)
 17266 7324 90E0      		ldi r25,0
 17267 7326 00C0      		rjmp .L543
 17268               	.L542:
1748:lp_solve_5.5/lp_price.c ****   return( (MYBOOL) ((multi != NULL) &&
 17269               		.loc 1 1748 0 discriminator 4
 17270 7328 80E0      		ldi r24,0
 17271 732a 90E0      		ldi r25,0
 17272               	.L543:
 17273               	/* epilogue start */
1750:lp_solve_5.5/lp_price.c **** }
 17274               		.loc 1 1750 0 is_stmt 1 discriminator 6
 17275 732c 0F90      		pop __tmp_reg__
 17276 732e 0F90      		pop __tmp_reg__
 17277 7330 DF91      		pop r29
 17278 7332 CF91      		pop r28
 17279 7334 0895      		ret
 17280               		.cfi_endproc
 17281               	.LFE42:
 17283               	.global	multi_resize
 17285               	multi_resize:
 17286               	.LFB43:
1751:lp_solve_5.5/lp_price.c **** STATIC MYBOOL multi_resize(multirec *multi, int blocksize, int blockdiv, MYBOOL doVlist, MYBOOL doI
1752:lp_solve_5.5/lp_price.c **** {
 17287               		.loc 1 1752 0
 17288               		.cfi_startproc
 17289 7336 0F93      		push r16
 17290               	.LCFI300:
 17291               		.cfi_def_cfa_offset 3
 17292               		.cfi_offset 16, -2
 17293 7338 CF93      		push r28
 17294               	.LCFI301:
 17295               		.cfi_def_cfa_offset 4
 17296               		.cfi_offset 28, -3
 17297 733a DF93      		push r29
 17298               	.LCFI302:
 17299               		.cfi_def_cfa_offset 5
 17300               		.cfi_offset 29, -4
 17301 733c CDB7      		in r28,__SP_L__
 17302 733e DEB7      		in r29,__SP_H__
 17303               	.LCFI303:
 17304               		.cfi_def_cfa_register 28
 17305 7340 2F97      		sbiw r28,15
 17306               	.LCFI304:
 17307               		.cfi_def_cfa_offset 20
 17308 7342 0FB6      		in __tmp_reg__,__SREG__
 17309 7344 F894      		cli
 17310 7346 DEBF      		out __SP_H__,r29
 17311 7348 0FBE      		out __SREG__,__tmp_reg__
 17312 734a CDBF      		out __SP_L__,r28
 17313               	/* prologue: function */
 17314               	/* frame size = 15 */
 17315               	/* stack size = 18 */
 17316               	.L__stack_usage = 18
 17317 734c 9987      		std Y+9,r25
 17318 734e 8887      		std Y+8,r24
 17319 7350 7B87      		std Y+11,r23
 17320 7352 6A87      		std Y+10,r22
 17321 7354 5D87      		std Y+13,r21
 17322 7356 4C87      		std Y+12,r20
 17323 7358 2E87      		std Y+14,r18
 17324 735a 0F87      		std Y+15,r16
1753:lp_solve_5.5/lp_price.c ****   MYBOOL ok = TRUE;
 17325               		.loc 1 1753 0
 17326 735c 81E0      		ldi r24,lo8(1)
 17327 735e 8983      		std Y+1,r24
1754:lp_solve_5.5/lp_price.c **** 
1755:lp_solve_5.5/lp_price.c ****   if((blocksize > 1) && (blockdiv > 0)) {
 17328               		.loc 1 1755 0
 17329 7360 8A85      		ldd r24,Y+10
 17330 7362 9B85      		ldd r25,Y+11
 17331 7364 0297      		sbiw r24,2
 17332 7366 04F4      		brge .+2
 17333 7368 00C0      		rjmp .L546
 17334               		.loc 1 1755 0 is_stmt 0 discriminator 1
 17335 736a 8C85      		ldd r24,Y+12
 17336 736c 9D85      		ldd r25,Y+13
 17337 736e 1816      		cp __zero_reg__,r24
 17338 7370 1906      		cpc __zero_reg__,r25
 17339 7372 04F0      		brlt .+2
 17340 7374 00C0      		rjmp .L546
 17341               	.LBB12:
1756:lp_solve_5.5/lp_price.c ****     int oldsize = multi->size;
 17342               		.loc 1 1756 0 is_stmt 1
 17343 7376 8885      		ldd r24,Y+8
 17344 7378 9985      		ldd r25,Y+9
 17345 737a FC01      		movw r30,r24
 17346 737c 8281      		ldd r24,Z+2
 17347 737e 9381      		ldd r25,Z+3
 17348 7380 9F83      		std Y+7,r25
 17349 7382 8E83      		std Y+6,r24
1757:lp_solve_5.5/lp_price.c **** 
1758:lp_solve_5.5/lp_price.c ****     multi->size = blocksize;
 17350               		.loc 1 1758 0
 17351 7384 8885      		ldd r24,Y+8
 17352 7386 9985      		ldd r25,Y+9
 17353 7388 2A85      		ldd r18,Y+10
 17354 738a 3B85      		ldd r19,Y+11
 17355 738c FC01      		movw r30,r24
 17356 738e 3383      		std Z+3,r19
 17357 7390 2283      		std Z+2,r18
1759:lp_solve_5.5/lp_price.c ****     if(blockdiv > 1)
 17358               		.loc 1 1759 0
 17359 7392 8C85      		ldd r24,Y+12
 17360 7394 9D85      		ldd r25,Y+13
 17361 7396 0297      		sbiw r24,2
 17362 7398 04F0      		brlt .L547
1760:lp_solve_5.5/lp_price.c ****       multi->limit += (multi->size-oldsize) / blockdiv;
 17363               		.loc 1 1760 0
 17364 739a 8885      		ldd r24,Y+8
 17365 739c 9985      		ldd r25,Y+9
 17366 739e FC01      		movw r30,r24
 17367 73a0 2681      		ldd r18,Z+6
 17368 73a2 3781      		ldd r19,Z+7
 17369 73a4 8885      		ldd r24,Y+8
 17370 73a6 9985      		ldd r25,Y+9
 17371 73a8 FC01      		movw r30,r24
 17372 73aa 4281      		ldd r20,Z+2
 17373 73ac 5381      		ldd r21,Z+3
 17374 73ae 8E81      		ldd r24,Y+6
 17375 73b0 9F81      		ldd r25,Y+7
 17376 73b2 BA01      		movw r22,r20
 17377 73b4 681B      		sub r22,r24
 17378 73b6 790B      		sbc r23,r25
 17379 73b8 CB01      		movw r24,r22
 17380 73ba 4C85      		ldd r20,Y+12
 17381 73bc 5D85      		ldd r21,Y+13
 17382 73be BA01      		movw r22,r20
 17383 73c0 0E94 0000 		call __divmodhi4
 17384 73c4 CB01      		movw r24,r22
 17385 73c6 280F      		add r18,r24
 17386 73c8 391F      		adc r19,r25
 17387 73ca 8885      		ldd r24,Y+8
 17388 73cc 9985      		ldd r25,Y+9
 17389 73ce FC01      		movw r30,r24
 17390 73d0 3783      		std Z+7,r19
 17391 73d2 2683      		std Z+6,r18
 17392               	.L547:
1761:lp_solve_5.5/lp_price.c **** 
1762:lp_solve_5.5/lp_price.c ****     multi->items = (pricerec *) realloc(multi->items, (multi->size+1)*sizeof(*(multi->items)));
 17393               		.loc 1 1762 0
 17394 73d4 8885      		ldd r24,Y+8
 17395 73d6 9985      		ldd r25,Y+9
 17396 73d8 FC01      		movw r30,r24
 17397 73da 8281      		ldd r24,Z+2
 17398 73dc 9381      		ldd r25,Z+3
 17399 73de 0196      		adiw r24,1
 17400 73e0 41E1      		ldi r20,lo8(17)
 17401 73e2 489F      		mul r20,r24
 17402 73e4 9001      		movw r18,r0
 17403 73e6 499F      		mul r20,r25
 17404 73e8 300D      		add r19,r0
 17405 73ea 1124      		clr __zero_reg__
 17406 73ec 8885      		ldd r24,Y+8
 17407 73ee 9985      		ldd r25,Y+9
 17408 73f0 FC01      		movw r30,r24
 17409 73f2 8085      		ldd r24,Z+8
 17410 73f4 9185      		ldd r25,Z+9
 17411 73f6 B901      		movw r22,r18
 17412 73f8 0E94 0000 		call realloc
 17413 73fc 9C01      		movw r18,r24
 17414 73fe 8885      		ldd r24,Y+8
 17415 7400 9985      		ldd r25,Y+9
 17416 7402 FC01      		movw r30,r24
 17417 7404 3187      		std Z+9,r19
 17418 7406 2087      		std Z+8,r18
1763:lp_solve_5.5/lp_price.c ****     multi->sortedList = (UNIONTYPE QSORTrec *) realloc(multi->sortedList, (multi->size+1)*sizeof(*(
 17419               		.loc 1 1763 0
 17420 7408 8885      		ldd r24,Y+8
 17421 740a 9985      		ldd r25,Y+9
 17422 740c FC01      		movw r30,r24
 17423 740e 8281      		ldd r24,Z+2
 17424 7410 9381      		ldd r25,Z+3
 17425 7412 0196      		adiw r24,1
 17426 7414 9C01      		movw r18,r24
 17427 7416 220F      		lsl r18
 17428 7418 331F      		rol r19
 17429 741a 220F      		lsl r18
 17430 741c 331F      		rol r19
 17431 741e 220F      		lsl r18
 17432 7420 331F      		rol r19
 17433 7422 8885      		ldd r24,Y+8
 17434 7424 9985      		ldd r25,Y+9
 17435 7426 FC01      		movw r30,r24
 17436 7428 8485      		ldd r24,Z+12
 17437 742a 9585      		ldd r25,Z+13
 17438 742c B901      		movw r22,r18
 17439 742e 0E94 0000 		call realloc
 17440 7432 9C01      		movw r18,r24
 17441 7434 8885      		ldd r24,Y+8
 17442 7436 9985      		ldd r25,Y+9
 17443 7438 FC01      		movw r30,r24
 17444 743a 3587      		std Z+13,r19
 17445 743c 2487      		std Z+12,r18
1764:lp_solve_5.5/lp_price.c ****     ok = (multi->items != NULL) && (multi->sortedList != NULL) &&
 17446               		.loc 1 1764 0
 17447 743e 8885      		ldd r24,Y+8
 17448 7440 9985      		ldd r25,Y+9
 17449 7442 FC01      		movw r30,r24
 17450 7444 8085      		ldd r24,Z+8
 17451 7446 9185      		ldd r25,Z+9
 17452 7448 892B      		or r24,r25
 17453 744a 01F0      		breq .L548
 17454               		.loc 1 1764 0 is_stmt 0 discriminator 1
 17455 744c 8885      		ldd r24,Y+8
 17456 744e 9985      		ldd r25,Y+9
 17457 7450 FC01      		movw r30,r24
 17458 7452 8485      		ldd r24,Z+12
 17459 7454 9585      		ldd r25,Z+13
 17460 7456 892B      		or r24,r25
 17461 7458 01F0      		breq .L548
1765:lp_solve_5.5/lp_price.c ****          allocINT(multi->lp, &(multi->freeList), multi->size+1, AUTOMATIC);
 17462               		.loc 1 1765 0 is_stmt 1 discriminator 3
 17463 745a 8885      		ldd r24,Y+8
 17464 745c 9985      		ldd r25,Y+9
 17465 745e FC01      		movw r30,r24
 17466 7460 8281      		ldd r24,Z+2
 17467 7462 9381      		ldd r25,Z+3
 17468 7464 AC01      		movw r20,r24
 17469 7466 4F5F      		subi r20,-1
 17470 7468 5F4F      		sbci r21,-1
 17471 746a 8885      		ldd r24,Y+8
 17472 746c 9985      		ldd r25,Y+9
 17473 746e BC01      		movw r22,r24
 17474 7470 665F      		subi r22,-10
 17475 7472 7F4F      		sbci r23,-1
 17476 7474 8885      		ldd r24,Y+8
 17477 7476 9985      		ldd r25,Y+9
 17478 7478 FC01      		movw r30,r24
 17479 747a 8081      		ld r24,Z
 17480 747c 9181      		ldd r25,Z+1
 17481 747e 22E0      		ldi r18,lo8(2)
 17482 7480 0E94 0000 		call allocINT
1764:lp_solve_5.5/lp_price.c ****     ok = (multi->items != NULL) && (multi->sortedList != NULL) &&
 17483               		.loc 1 1764 0 discriminator 3
 17484 7484 8823      		tst r24
 17485 7486 01F0      		breq .L548
1764:lp_solve_5.5/lp_price.c ****     ok = (multi->items != NULL) && (multi->sortedList != NULL) &&
 17486               		.loc 1 1764 0 is_stmt 0 discriminator 5
 17487 7488 81E0      		ldi r24,lo8(1)
 17488 748a 90E0      		ldi r25,0
 17489 748c 00C0      		rjmp .L549
 17490               	.L548:
1764:lp_solve_5.5/lp_price.c ****     ok = (multi->items != NULL) && (multi->sortedList != NULL) &&
 17491               		.loc 1 1764 0 discriminator 6
 17492 748e 80E0      		ldi r24,0
 17493 7490 90E0      		ldi r25,0
 17494               	.L549:
1764:lp_solve_5.5/lp_price.c ****     ok = (multi->items != NULL) && (multi->sortedList != NULL) &&
 17495               		.loc 1 1764 0 discriminator 8
 17496 7492 8983      		std Y+1,r24
1766:lp_solve_5.5/lp_price.c ****     if(ok) {
 17497               		.loc 1 1766 0 is_stmt 1 discriminator 8
 17498 7494 8981      		ldd r24,Y+1
 17499 7496 8823      		tst r24
 17500 7498 01F4      		brne .+2
 17501 749a 00C0      		rjmp .L550
 17502               	.LBB13:
1767:lp_solve_5.5/lp_price.c ****       int i, n;
1768:lp_solve_5.5/lp_price.c **** 
1769:lp_solve_5.5/lp_price.c ****       if(oldsize == 0)
 17503               		.loc 1 1769 0
 17504 749c 8E81      		ldd r24,Y+6
 17505 749e 9F81      		ldd r25,Y+7
 17506 74a0 892B      		or r24,r25
 17507 74a2 01F4      		brne .L551
1770:lp_solve_5.5/lp_price.c ****         i = 0;
 17508               		.loc 1 1770 0
 17509 74a4 1B82      		std Y+3,__zero_reg__
 17510 74a6 1A82      		std Y+2,__zero_reg__
 17511 74a8 00C0      		rjmp .L552
 17512               	.L551:
1771:lp_solve_5.5/lp_price.c ****       else
1772:lp_solve_5.5/lp_price.c ****         i = multi->freeList[0];
 17513               		.loc 1 1772 0
 17514 74aa 8885      		ldd r24,Y+8
 17515 74ac 9985      		ldd r25,Y+9
 17516 74ae FC01      		movw r30,r24
 17517 74b0 8285      		ldd r24,Z+10
 17518 74b2 9385      		ldd r25,Z+11
 17519 74b4 FC01      		movw r30,r24
 17520 74b6 8081      		ld r24,Z
 17521 74b8 9181      		ldd r25,Z+1
 17522 74ba 9B83      		std Y+3,r25
 17523 74bc 8A83      		std Y+2,r24
 17524               	.L552:
1773:lp_solve_5.5/lp_price.c ****       multi->freeList[0] = i + (multi->size-oldsize);
 17525               		.loc 1 1773 0
 17526 74be 8885      		ldd r24,Y+8
 17527 74c0 9985      		ldd r25,Y+9
 17528 74c2 FC01      		movw r30,r24
 17529 74c4 8285      		ldd r24,Z+10
 17530 74c6 9385      		ldd r25,Z+11
 17531 74c8 2885      		ldd r18,Y+8
 17532 74ca 3985      		ldd r19,Y+9
 17533 74cc F901      		movw r30,r18
 17534 74ce 4281      		ldd r20,Z+2
 17535 74d0 5381      		ldd r21,Z+3
 17536 74d2 2E81      		ldd r18,Y+6
 17537 74d4 3F81      		ldd r19,Y+7
 17538 74d6 421B      		sub r20,r18
 17539 74d8 530B      		sbc r21,r19
 17540 74da 2A81      		ldd r18,Y+2
 17541 74dc 3B81      		ldd r19,Y+3
 17542 74de 240F      		add r18,r20
 17543 74e0 351F      		adc r19,r21
 17544 74e2 FC01      		movw r30,r24
 17545 74e4 3183      		std Z+1,r19
 17546 74e6 2083      		st Z,r18
1774:lp_solve_5.5/lp_price.c ****       for(n = multi->size - 1, i++; i <= multi->freeList[0]; i++, n--)
 17547               		.loc 1 1774 0
 17548 74e8 8885      		ldd r24,Y+8
 17549 74ea 9985      		ldd r25,Y+9
 17550 74ec FC01      		movw r30,r24
 17551 74ee 8281      		ldd r24,Z+2
 17552 74f0 9381      		ldd r25,Z+3
 17553 74f2 0197      		sbiw r24,1
 17554 74f4 9D83      		std Y+5,r25
 17555 74f6 8C83      		std Y+4,r24
 17556 74f8 8A81      		ldd r24,Y+2
 17557 74fa 9B81      		ldd r25,Y+3
 17558 74fc 0196      		adiw r24,1
 17559 74fe 9B83      		std Y+3,r25
 17560 7500 8A83      		std Y+2,r24
 17561 7502 00C0      		rjmp .L553
 17562               	.L554:
1775:lp_solve_5.5/lp_price.c ****         multi->freeList[i] = n;
 17563               		.loc 1 1775 0 discriminator 3
 17564 7504 8885      		ldd r24,Y+8
 17565 7506 9985      		ldd r25,Y+9
 17566 7508 FC01      		movw r30,r24
 17567 750a 2285      		ldd r18,Z+10
 17568 750c 3385      		ldd r19,Z+11
 17569 750e 8A81      		ldd r24,Y+2
 17570 7510 9B81      		ldd r25,Y+3
 17571 7512 880F      		lsl r24
 17572 7514 991F      		rol r25
 17573 7516 820F      		add r24,r18
 17574 7518 931F      		adc r25,r19
 17575 751a 2C81      		ldd r18,Y+4
 17576 751c 3D81      		ldd r19,Y+5
 17577 751e FC01      		movw r30,r24
 17578 7520 3183      		std Z+1,r19
 17579 7522 2083      		st Z,r18
1774:lp_solve_5.5/lp_price.c ****       for(n = multi->size - 1, i++; i <= multi->freeList[0]; i++, n--)
 17580               		.loc 1 1774 0 discriminator 3
 17581 7524 8A81      		ldd r24,Y+2
 17582 7526 9B81      		ldd r25,Y+3
 17583 7528 0196      		adiw r24,1
 17584 752a 9B83      		std Y+3,r25
 17585 752c 8A83      		std Y+2,r24
 17586 752e 8C81      		ldd r24,Y+4
 17587 7530 9D81      		ldd r25,Y+5
 17588 7532 0197      		sbiw r24,1
 17589 7534 9D83      		std Y+5,r25
 17590 7536 8C83      		std Y+4,r24
 17591               	.L553:
1774:lp_solve_5.5/lp_price.c ****       for(n = multi->size - 1, i++; i <= multi->freeList[0]; i++, n--)
 17592               		.loc 1 1774 0 is_stmt 0 discriminator 1
 17593 7538 8885      		ldd r24,Y+8
 17594 753a 9985      		ldd r25,Y+9
 17595 753c FC01      		movw r30,r24
 17596 753e 8285      		ldd r24,Z+10
 17597 7540 9385      		ldd r25,Z+11
 17598 7542 FC01      		movw r30,r24
 17599 7544 2081      		ld r18,Z
 17600 7546 3181      		ldd r19,Z+1
 17601 7548 8A81      		ldd r24,Y+2
 17602 754a 9B81      		ldd r25,Y+3
 17603 754c 2817      		cp r18,r24
 17604 754e 3907      		cpc r19,r25
 17605 7550 04F4      		brge .L554
 17606               	.L550:
 17607               	.LBE13:
1776:lp_solve_5.5/lp_price.c ****     }
1777:lp_solve_5.5/lp_price.c ****     if(doVlist)
 17608               		.loc 1 1777 0 is_stmt 1
 17609 7552 8E85      		ldd r24,Y+14
 17610 7554 8823      		tst r24
 17611 7556 01F0      		breq .L555
1778:lp_solve_5.5/lp_price.c ****       ok &= allocREAL(multi->lp, &(multi->valueList), multi->size+1, AUTOMATIC);
 17612               		.loc 1 1778 0
 17613 7558 8885      		ldd r24,Y+8
 17614 755a 9985      		ldd r25,Y+9
 17615 755c FC01      		movw r30,r24
 17616 755e 8281      		ldd r24,Z+2
 17617 7560 9381      		ldd r25,Z+3
 17618 7562 AC01      		movw r20,r24
 17619 7564 4F5F      		subi r20,-1
 17620 7566 5F4F      		sbci r21,-1
 17621 7568 8885      		ldd r24,Y+8
 17622 756a 9985      		ldd r25,Y+9
 17623 756c BC01      		movw r22,r24
 17624 756e 605F      		subi r22,-16
 17625 7570 7F4F      		sbci r23,-1
 17626 7572 8885      		ldd r24,Y+8
 17627 7574 9985      		ldd r25,Y+9
 17628 7576 FC01      		movw r30,r24
 17629 7578 8081      		ld r24,Z
 17630 757a 9181      		ldd r25,Z+1
 17631 757c 22E0      		ldi r18,lo8(2)
 17632 757e 0E94 0000 		call allocREAL
 17633 7582 982F      		mov r25,r24
 17634 7584 8981      		ldd r24,Y+1
 17635 7586 8923      		and r24,r25
 17636 7588 8983      		std Y+1,r24
 17637               	.L555:
1779:lp_solve_5.5/lp_price.c ****     if(doIset) {
 17638               		.loc 1 1779 0
 17639 758a 8F85      		ldd r24,Y+15
 17640 758c 8823      		tst r24
 17641 758e 01F0      		breq .L556
1780:lp_solve_5.5/lp_price.c ****       ok &= allocINT(multi->lp, &(multi->indexSet), multi->size+1, AUTOMATIC);
 17642               		.loc 1 1780 0
 17643 7590 8885      		ldd r24,Y+8
 17644 7592 9985      		ldd r25,Y+9
 17645 7594 FC01      		movw r30,r24
 17646 7596 8281      		ldd r24,Z+2
 17647 7598 9381      		ldd r25,Z+3
 17648 759a AC01      		movw r20,r24
 17649 759c 4F5F      		subi r20,-1
 17650 759e 5F4F      		sbci r21,-1
 17651 75a0 8885      		ldd r24,Y+8
 17652 75a2 9985      		ldd r25,Y+9
 17653 75a4 BC01      		movw r22,r24
 17654 75a6 6E5E      		subi r22,-18
 17655 75a8 7F4F      		sbci r23,-1
 17656 75aa 8885      		ldd r24,Y+8
 17657 75ac 9985      		ldd r25,Y+9
 17658 75ae FC01      		movw r30,r24
 17659 75b0 8081      		ld r24,Z
 17660 75b2 9181      		ldd r25,Z+1
 17661 75b4 22E0      		ldi r18,lo8(2)
 17662 75b6 0E94 0000 		call allocINT
 17663 75ba 982F      		mov r25,r24
 17664 75bc 8981      		ldd r24,Y+1
 17665 75be 8923      		and r24,r25
 17666 75c0 8983      		std Y+1,r24
1781:lp_solve_5.5/lp_price.c ****       if(ok && (oldsize == 0))
 17667               		.loc 1 1781 0
 17668 75c2 8981      		ldd r24,Y+1
 17669 75c4 8823      		tst r24
 17670 75c6 01F0      		breq .L556
 17671               		.loc 1 1781 0 is_stmt 0 discriminator 1
 17672 75c8 8E81      		ldd r24,Y+6
 17673 75ca 9F81      		ldd r25,Y+7
 17674 75cc 892B      		or r24,r25
 17675 75ce 01F4      		brne .L556
1782:lp_solve_5.5/lp_price.c ****         multi->indexSet[0] = 0;
 17676               		.loc 1 1782 0 is_stmt 1
 17677 75d0 8885      		ldd r24,Y+8
 17678 75d2 9985      		ldd r25,Y+9
 17679 75d4 FC01      		movw r30,r24
 17680 75d6 8289      		ldd r24,Z+18
 17681 75d8 9389      		ldd r25,Z+19
 17682 75da FC01      		movw r30,r24
 17683 75dc 1182      		std Z+1,__zero_reg__
 17684 75de 1082      		st Z,__zero_reg__
 17685               	.L556:
1783:lp_solve_5.5/lp_price.c ****     }
1784:lp_solve_5.5/lp_price.c ****     if(!ok)
 17686               		.loc 1 1784 0
 17687 75e0 8981      		ldd r24,Y+1
 17688 75e2 8823      		tst r24
 17689 75e4 01F0      		breq .+2
 17690 75e6 00C0      		rjmp .L564
1785:lp_solve_5.5/lp_price.c ****       goto Undo;
 17691               		.loc 1 1785 0
 17692 75e8 0000      		nop
 17693               	.L546:
 17694               	.LBE12:
1786:lp_solve_5.5/lp_price.c **** 
1787:lp_solve_5.5/lp_price.c ****   }
1788:lp_solve_5.5/lp_price.c ****   else {
1789:lp_solve_5.5/lp_price.c **** Undo:
1790:lp_solve_5.5/lp_price.c ****     multi->size = 0;
 17695               		.loc 1 1790 0
 17696 75ea 8885      		ldd r24,Y+8
 17697 75ec 9985      		ldd r25,Y+9
 17698 75ee FC01      		movw r30,r24
 17699 75f0 1382      		std Z+3,__zero_reg__
 17700 75f2 1282      		std Z+2,__zero_reg__
1791:lp_solve_5.5/lp_price.c ****     FREE(multi->items);
 17701               		.loc 1 1791 0
 17702 75f4 8885      		ldd r24,Y+8
 17703 75f6 9985      		ldd r25,Y+9
 17704 75f8 FC01      		movw r30,r24
 17705 75fa 8085      		ldd r24,Z+8
 17706 75fc 9185      		ldd r25,Z+9
 17707 75fe 892B      		or r24,r25
 17708 7600 01F0      		breq .L559
 17709               		.loc 1 1791 0 is_stmt 0 discriminator 1
 17710 7602 8885      		ldd r24,Y+8
 17711 7604 9985      		ldd r25,Y+9
 17712 7606 FC01      		movw r30,r24
 17713 7608 8085      		ldd r24,Z+8
 17714 760a 9185      		ldd r25,Z+9
 17715 760c 0E94 0000 		call free
 17716 7610 8885      		ldd r24,Y+8
 17717 7612 9985      		ldd r25,Y+9
 17718 7614 FC01      		movw r30,r24
 17719 7616 1186      		std Z+9,__zero_reg__
 17720 7618 1086      		std Z+8,__zero_reg__
 17721               	.L559:
1792:lp_solve_5.5/lp_price.c ****     FREE(multi->valueList);
 17722               		.loc 1 1792 0 is_stmt 1
 17723 761a 8885      		ldd r24,Y+8
 17724 761c 9985      		ldd r25,Y+9
 17725 761e FC01      		movw r30,r24
 17726 7620 8089      		ldd r24,Z+16
 17727 7622 9189      		ldd r25,Z+17
 17728 7624 892B      		or r24,r25
 17729 7626 01F0      		breq .L560
 17730               		.loc 1 1792 0 is_stmt 0 discriminator 1
 17731 7628 8885      		ldd r24,Y+8
 17732 762a 9985      		ldd r25,Y+9
 17733 762c FC01      		movw r30,r24
 17734 762e 8089      		ldd r24,Z+16
 17735 7630 9189      		ldd r25,Z+17
 17736 7632 0E94 0000 		call free
 17737 7636 8885      		ldd r24,Y+8
 17738 7638 9985      		ldd r25,Y+9
 17739 763a FC01      		movw r30,r24
 17740 763c 118A      		std Z+17,__zero_reg__
 17741 763e 108A      		std Z+16,__zero_reg__
 17742               	.L560:
1793:lp_solve_5.5/lp_price.c ****     FREE(multi->indexSet);
 17743               		.loc 1 1793 0 is_stmt 1
 17744 7640 8885      		ldd r24,Y+8
 17745 7642 9985      		ldd r25,Y+9
 17746 7644 FC01      		movw r30,r24
 17747 7646 8289      		ldd r24,Z+18
 17748 7648 9389      		ldd r25,Z+19
 17749 764a 892B      		or r24,r25
 17750 764c 01F0      		breq .L561
 17751               		.loc 1 1793 0 is_stmt 0 discriminator 1
 17752 764e 8885      		ldd r24,Y+8
 17753 7650 9985      		ldd r25,Y+9
 17754 7652 FC01      		movw r30,r24
 17755 7654 8289      		ldd r24,Z+18
 17756 7656 9389      		ldd r25,Z+19
 17757 7658 0E94 0000 		call free
 17758 765c 8885      		ldd r24,Y+8
 17759 765e 9985      		ldd r25,Y+9
 17760 7660 FC01      		movw r30,r24
 17761 7662 138A      		std Z+19,__zero_reg__
 17762 7664 128A      		std Z+18,__zero_reg__
 17763               	.L561:
1794:lp_solve_5.5/lp_price.c ****     FREE(multi->freeList);
 17764               		.loc 1 1794 0 is_stmt 1
 17765 7666 8885      		ldd r24,Y+8
 17766 7668 9985      		ldd r25,Y+9
 17767 766a FC01      		movw r30,r24
 17768 766c 8285      		ldd r24,Z+10
 17769 766e 9385      		ldd r25,Z+11
 17770 7670 892B      		or r24,r25
 17771 7672 01F0      		breq .L562
 17772               		.loc 1 1794 0 is_stmt 0 discriminator 1
 17773 7674 8885      		ldd r24,Y+8
 17774 7676 9985      		ldd r25,Y+9
 17775 7678 FC01      		movw r30,r24
 17776 767a 8285      		ldd r24,Z+10
 17777 767c 9385      		ldd r25,Z+11
 17778 767e 0E94 0000 		call free
 17779 7682 8885      		ldd r24,Y+8
 17780 7684 9985      		ldd r25,Y+9
 17781 7686 FC01      		movw r30,r24
 17782 7688 1386      		std Z+11,__zero_reg__
 17783 768a 1286      		std Z+10,__zero_reg__
 17784               	.L562:
1795:lp_solve_5.5/lp_price.c ****     FREE(multi->sortedList);
 17785               		.loc 1 1795 0 is_stmt 1
 17786 768c 8885      		ldd r24,Y+8
 17787 768e 9985      		ldd r25,Y+9
 17788 7690 FC01      		movw r30,r24
 17789 7692 8485      		ldd r24,Z+12
 17790 7694 9585      		ldd r25,Z+13
 17791 7696 892B      		or r24,r25
 17792 7698 01F0      		breq .L558
 17793               		.loc 1 1795 0 is_stmt 0 discriminator 1
 17794 769a 8885      		ldd r24,Y+8
 17795 769c 9985      		ldd r25,Y+9
 17796 769e FC01      		movw r30,r24
 17797 76a0 8485      		ldd r24,Z+12
 17798 76a2 9585      		ldd r25,Z+13
 17799 76a4 0E94 0000 		call free
 17800 76a8 8885      		ldd r24,Y+8
 17801 76aa 9985      		ldd r25,Y+9
 17802 76ac FC01      		movw r30,r24
 17803 76ae 1586      		std Z+13,__zero_reg__
 17804 76b0 1486      		std Z+12,__zero_reg__
 17805 76b2 00C0      		rjmp .L558
 17806               	.L564:
1755:lp_solve_5.5/lp_price.c ****     int oldsize = multi->size;
 17807               		.loc 1 1755 0 is_stmt 1
 17808 76b4 0000      		nop
 17809               	.L558:
1796:lp_solve_5.5/lp_price.c ****   }
1797:lp_solve_5.5/lp_price.c ****   multi->active = 1;
 17810               		.loc 1 1797 0
 17811 76b6 8885      		ldd r24,Y+8
 17812 76b8 9985      		ldd r25,Y+9
 17813 76ba 21E0      		ldi r18,lo8(1)
 17814 76bc 30E0      		ldi r19,0
 17815 76be FC01      		movw r30,r24
 17816 76c0 358B      		std Z+21,r19
 17817 76c2 248B      		std Z+20,r18
1798:lp_solve_5.5/lp_price.c **** 
1799:lp_solve_5.5/lp_price.c ****   return( ok );
 17818               		.loc 1 1799 0
 17819 76c4 8981      		ldd r24,Y+1
 17820               	/* epilogue start */
1800:lp_solve_5.5/lp_price.c **** }
 17821               		.loc 1 1800 0
 17822 76c6 2F96      		adiw r28,15
 17823 76c8 0FB6      		in __tmp_reg__,__SREG__
 17824 76ca F894      		cli
 17825 76cc DEBF      		out __SP_H__,r29
 17826 76ce 0FBE      		out __SREG__,__tmp_reg__
 17827 76d0 CDBF      		out __SP_L__,r28
 17828 76d2 DF91      		pop r29
 17829 76d4 CF91      		pop r28
 17830 76d6 0F91      		pop r16
 17831 76d8 0895      		ret
 17832               		.cfi_endproc
 17833               	.LFE43:
 17835               	.global	multi_size
 17837               	multi_size:
 17838               	.LFB44:
1801:lp_solve_5.5/lp_price.c **** 
1802:lp_solve_5.5/lp_price.c **** STATIC int multi_size(multirec *multi)
1803:lp_solve_5.5/lp_price.c **** {
 17839               		.loc 1 1803 0
 17840               		.cfi_startproc
 17841 76da CF93      		push r28
 17842               	.LCFI305:
 17843               		.cfi_def_cfa_offset 3
 17844               		.cfi_offset 28, -2
 17845 76dc DF93      		push r29
 17846               	.LCFI306:
 17847               		.cfi_def_cfa_offset 4
 17848               		.cfi_offset 29, -3
 17849 76de 00D0      		rcall .
 17850               	.LCFI307:
 17851               		.cfi_def_cfa_offset 6
 17852 76e0 CDB7      		in r28,__SP_L__
 17853 76e2 DEB7      		in r29,__SP_H__
 17854               	.LCFI308:
 17855               		.cfi_def_cfa_register 28
 17856               	/* prologue: function */
 17857               	/* frame size = 2 */
 17858               	/* stack size = 4 */
 17859               	.L__stack_usage = 4
 17860 76e4 9A83      		std Y+2,r25
 17861 76e6 8983      		std Y+1,r24
1804:lp_solve_5.5/lp_price.c ****   if(multi == NULL)
 17862               		.loc 1 1804 0
 17863 76e8 8981      		ldd r24,Y+1
 17864 76ea 9A81      		ldd r25,Y+2
 17865 76ec 892B      		or r24,r25
 17866 76ee 01F4      		brne .L566
1805:lp_solve_5.5/lp_price.c ****     return( 0 );
 17867               		.loc 1 1805 0
 17868 76f0 80E0      		ldi r24,0
 17869 76f2 90E0      		ldi r25,0
 17870 76f4 00C0      		rjmp .L567
 17871               	.L566:
1806:lp_solve_5.5/lp_price.c ****   else
1807:lp_solve_5.5/lp_price.c ****     return( multi->size );
 17872               		.loc 1 1807 0
 17873 76f6 8981      		ldd r24,Y+1
 17874 76f8 9A81      		ldd r25,Y+2
 17875 76fa FC01      		movw r30,r24
 17876 76fc 8281      		ldd r24,Z+2
 17877 76fe 9381      		ldd r25,Z+3
 17878               	.L567:
 17879               	/* epilogue start */
1808:lp_solve_5.5/lp_price.c **** }
 17880               		.loc 1 1808 0
 17881 7700 0F90      		pop __tmp_reg__
 17882 7702 0F90      		pop __tmp_reg__
 17883 7704 DF91      		pop r29
 17884 7706 CF91      		pop r28
 17885 7708 0895      		ret
 17886               		.cfi_endproc
 17887               	.LFE44:
 17889               	.global	multi_used
 17891               	multi_used:
 17892               	.LFB45:
1809:lp_solve_5.5/lp_price.c **** 
1810:lp_solve_5.5/lp_price.c **** STATIC int multi_used(multirec *multi)
1811:lp_solve_5.5/lp_price.c **** {
 17893               		.loc 1 1811 0
 17894               		.cfi_startproc
 17895 770a CF93      		push r28
 17896               	.LCFI309:
 17897               		.cfi_def_cfa_offset 3
 17898               		.cfi_offset 28, -2
 17899 770c DF93      		push r29
 17900               	.LCFI310:
 17901               		.cfi_def_cfa_offset 4
 17902               		.cfi_offset 29, -3
 17903 770e 00D0      		rcall .
 17904               	.LCFI311:
 17905               		.cfi_def_cfa_offset 6
 17906 7710 CDB7      		in r28,__SP_L__
 17907 7712 DEB7      		in r29,__SP_H__
 17908               	.LCFI312:
 17909               		.cfi_def_cfa_register 28
 17910               	/* prologue: function */
 17911               	/* frame size = 2 */
 17912               	/* stack size = 4 */
 17913               	.L__stack_usage = 4
 17914 7714 9A83      		std Y+2,r25
 17915 7716 8983      		std Y+1,r24
1812:lp_solve_5.5/lp_price.c ****   if(multi == NULL)
 17916               		.loc 1 1812 0
 17917 7718 8981      		ldd r24,Y+1
 17918 771a 9A81      		ldd r25,Y+2
 17919 771c 892B      		or r24,r25
 17920 771e 01F4      		brne .L569
1813:lp_solve_5.5/lp_price.c ****     return( 0 );
 17921               		.loc 1 1813 0
 17922 7720 80E0      		ldi r24,0
 17923 7722 90E0      		ldi r25,0
 17924 7724 00C0      		rjmp .L570
 17925               	.L569:
1814:lp_solve_5.5/lp_price.c ****   else
1815:lp_solve_5.5/lp_price.c ****     return( multi->used );
 17926               		.loc 1 1815 0
 17927 7726 8981      		ldd r24,Y+1
 17928 7728 9A81      		ldd r25,Y+2
 17929 772a FC01      		movw r30,r24
 17930 772c 8481      		ldd r24,Z+4
 17931 772e 9581      		ldd r25,Z+5
 17932               	.L570:
 17933               	/* epilogue start */
1816:lp_solve_5.5/lp_price.c **** }
 17934               		.loc 1 1816 0
 17935 7730 0F90      		pop __tmp_reg__
 17936 7732 0F90      		pop __tmp_reg__
 17937 7734 DF91      		pop r29
 17938 7736 CF91      		pop r28
 17939 7738 0895      		ret
 17940               		.cfi_endproc
 17941               	.LFE45:
 17943               	.global	multi_restart
 17945               	multi_restart:
 17946               	.LFB46:
1817:lp_solve_5.5/lp_price.c **** 
1818:lp_solve_5.5/lp_price.c **** STATIC int multi_restart(multirec *multi)
1819:lp_solve_5.5/lp_price.c **** {
 17947               		.loc 1 1819 0
 17948               		.cfi_startproc
 17949 773a CF93      		push r28
 17950               	.LCFI313:
 17951               		.cfi_def_cfa_offset 3
 17952               		.cfi_offset 28, -2
 17953 773c DF93      		push r29
 17954               	.LCFI314:
 17955               		.cfi_def_cfa_offset 4
 17956               		.cfi_offset 29, -3
 17957 773e 00D0      		rcall .
 17958 7740 00D0      		rcall .
 17959 7742 00D0      		rcall .
 17960               	.LCFI315:
 17961               		.cfi_def_cfa_offset 10
 17962 7744 CDB7      		in r28,__SP_L__
 17963 7746 DEB7      		in r29,__SP_H__
 17964               	.LCFI316:
 17965               		.cfi_def_cfa_register 28
 17966               	/* prologue: function */
 17967               	/* frame size = 6 */
 17968               	/* stack size = 8 */
 17969               	.L__stack_usage = 8
 17970 7748 9E83      		std Y+6,r25
 17971 774a 8D83      		std Y+5,r24
1820:lp_solve_5.5/lp_price.c ****   int i, n = multi->used;
 17972               		.loc 1 1820 0
 17973 774c 8D81      		ldd r24,Y+5
 17974 774e 9E81      		ldd r25,Y+6
 17975 7750 FC01      		movw r30,r24
 17976 7752 8481      		ldd r24,Z+4
 17977 7754 9581      		ldd r25,Z+5
 17978 7756 9C83      		std Y+4,r25
 17979 7758 8B83      		std Y+3,r24
1821:lp_solve_5.5/lp_price.c **** 
1822:lp_solve_5.5/lp_price.c ****   multi->used   = 0;
 17980               		.loc 1 1822 0
 17981 775a 8D81      		ldd r24,Y+5
 17982 775c 9E81      		ldd r25,Y+6
 17983 775e FC01      		movw r30,r24
 17984 7760 1582      		std Z+5,__zero_reg__
 17985 7762 1482      		std Z+4,__zero_reg__
1823:lp_solve_5.5/lp_price.c ****   multi->sorted = FALSE;
 17986               		.loc 1 1823 0
 17987 7764 8D81      		ldd r24,Y+5
 17988 7766 9E81      		ldd r25,Y+6
 17989 7768 FC01      		movw r30,r24
 17990 776a 14AA      		std Z+52,__zero_reg__
1824:lp_solve_5.5/lp_price.c ****   multi->dirty  = FALSE;
 17991               		.loc 1 1824 0
 17992 776c 8D81      		ldd r24,Y+5
 17993 776e 9E81      		ldd r25,Y+6
 17994 7770 FC01      		movw r30,r24
 17995 7772 17AA      		std Z+55,__zero_reg__
1825:lp_solve_5.5/lp_price.c ****   if(multi->freeList != NULL) {
 17996               		.loc 1 1825 0
 17997 7774 8D81      		ldd r24,Y+5
 17998 7776 9E81      		ldd r25,Y+6
 17999 7778 FC01      		movw r30,r24
 18000 777a 8285      		ldd r24,Z+10
 18001 777c 9385      		ldd r25,Z+11
 18002 777e 892B      		or r24,r25
 18003 7780 01F0      		breq .L572
1826:lp_solve_5.5/lp_price.c ****     for(i = 1; i <= multi->size; i++)
 18004               		.loc 1 1826 0
 18005 7782 81E0      		ldi r24,lo8(1)
 18006 7784 90E0      		ldi r25,0
 18007 7786 9A83      		std Y+2,r25
 18008 7788 8983      		std Y+1,r24
 18009 778a 00C0      		rjmp .L573
 18010               	.L574:
1827:lp_solve_5.5/lp_price.c ****       multi->freeList[i] = multi->size - i;
 18011               		.loc 1 1827 0 discriminator 3
 18012 778c 8D81      		ldd r24,Y+5
 18013 778e 9E81      		ldd r25,Y+6
 18014 7790 FC01      		movw r30,r24
 18015 7792 2285      		ldd r18,Z+10
 18016 7794 3385      		ldd r19,Z+11
 18017 7796 8981      		ldd r24,Y+1
 18018 7798 9A81      		ldd r25,Y+2
 18019 779a 880F      		lsl r24
 18020 779c 991F      		rol r25
 18021 779e 820F      		add r24,r18
 18022 77a0 931F      		adc r25,r19
 18023 77a2 2D81      		ldd r18,Y+5
 18024 77a4 3E81      		ldd r19,Y+6
 18025 77a6 F901      		movw r30,r18
 18026 77a8 4281      		ldd r20,Z+2
 18027 77aa 5381      		ldd r21,Z+3
 18028 77ac 2981      		ldd r18,Y+1
 18029 77ae 3A81      		ldd r19,Y+2
 18030 77b0 BA01      		movw r22,r20
 18031 77b2 621B      		sub r22,r18
 18032 77b4 730B      		sbc r23,r19
 18033 77b6 9B01      		movw r18,r22
 18034 77b8 FC01      		movw r30,r24
 18035 77ba 3183      		std Z+1,r19
 18036 77bc 2083      		st Z,r18
1826:lp_solve_5.5/lp_price.c ****     for(i = 1; i <= multi->size; i++)
 18037               		.loc 1 1826 0 discriminator 3
 18038 77be 8981      		ldd r24,Y+1
 18039 77c0 9A81      		ldd r25,Y+2
 18040 77c2 0196      		adiw r24,1
 18041 77c4 9A83      		std Y+2,r25
 18042 77c6 8983      		std Y+1,r24
 18043               	.L573:
1826:lp_solve_5.5/lp_price.c ****     for(i = 1; i <= multi->size; i++)
 18044               		.loc 1 1826 0 is_stmt 0 discriminator 1
 18045 77c8 8D81      		ldd r24,Y+5
 18046 77ca 9E81      		ldd r25,Y+6
 18047 77cc FC01      		movw r30,r24
 18048 77ce 2281      		ldd r18,Z+2
 18049 77d0 3381      		ldd r19,Z+3
 18050 77d2 8981      		ldd r24,Y+1
 18051 77d4 9A81      		ldd r25,Y+2
 18052 77d6 2817      		cp r18,r24
 18053 77d8 3907      		cpc r19,r25
 18054 77da 04F4      		brge .L574
1828:lp_solve_5.5/lp_price.c ****     multi->freeList[0] = multi->size;
 18055               		.loc 1 1828 0 is_stmt 1
 18056 77dc 8D81      		ldd r24,Y+5
 18057 77de 9E81      		ldd r25,Y+6
 18058 77e0 FC01      		movw r30,r24
 18059 77e2 8285      		ldd r24,Z+10
 18060 77e4 9385      		ldd r25,Z+11
 18061 77e6 2D81      		ldd r18,Y+5
 18062 77e8 3E81      		ldd r19,Y+6
 18063 77ea F901      		movw r30,r18
 18064 77ec 2281      		ldd r18,Z+2
 18065 77ee 3381      		ldd r19,Z+3
 18066 77f0 FC01      		movw r30,r24
 18067 77f2 3183      		std Z+1,r19
 18068 77f4 2083      		st Z,r18
 18069               	.L572:
1829:lp_solve_5.5/lp_price.c ****   }
1830:lp_solve_5.5/lp_price.c **** #if 0
1831:lp_solve_5.5/lp_price.c ****   if(multi->indexSet != NULL)
1832:lp_solve_5.5/lp_price.c ****     multi->indexSet[0] = 0;
1833:lp_solve_5.5/lp_price.c **** #endif
1834:lp_solve_5.5/lp_price.c ****   return( n );
 18070               		.loc 1 1834 0
 18071 77f6 8B81      		ldd r24,Y+3
 18072 77f8 9C81      		ldd r25,Y+4
 18073               	/* epilogue start */
1835:lp_solve_5.5/lp_price.c **** }
 18074               		.loc 1 1835 0
 18075 77fa 2696      		adiw r28,6
 18076 77fc 0FB6      		in __tmp_reg__,__SREG__
 18077 77fe F894      		cli
 18078 7800 DEBF      		out __SP_H__,r29
 18079 7802 0FBE      		out __SREG__,__tmp_reg__
 18080 7804 CDBF      		out __SP_L__,r28
 18081 7806 DF91      		pop r29
 18082 7808 CF91      		pop r28
 18083 780a 0895      		ret
 18084               		.cfi_endproc
 18085               	.LFE46:
 18087               	.global	multi_valueInit
 18089               	multi_valueInit:
 18090               	.LFB47:
1836:lp_solve_5.5/lp_price.c **** 
1837:lp_solve_5.5/lp_price.c **** STATIC void multi_valueInit(multirec *multi, REAL step_base, REAL obj_base)
1838:lp_solve_5.5/lp_price.c **** {
 18091               		.loc 1 1838 0
 18092               		.cfi_startproc
 18093 780c 0F93      		push r16
 18094               	.LCFI317:
 18095               		.cfi_def_cfa_offset 3
 18096               		.cfi_offset 16, -2
 18097 780e 1F93      		push r17
 18098               	.LCFI318:
 18099               		.cfi_def_cfa_offset 4
 18100               		.cfi_offset 17, -3
 18101 7810 CF93      		push r28
 18102               	.LCFI319:
 18103               		.cfi_def_cfa_offset 5
 18104               		.cfi_offset 28, -4
 18105 7812 DF93      		push r29
 18106               	.LCFI320:
 18107               		.cfi_def_cfa_offset 6
 18108               		.cfi_offset 29, -5
 18109 7814 CDB7      		in r28,__SP_L__
 18110 7816 DEB7      		in r29,__SP_H__
 18111               	.LCFI321:
 18112               		.cfi_def_cfa_register 28
 18113 7818 2A97      		sbiw r28,10
 18114               	.LCFI322:
 18115               		.cfi_def_cfa_offset 16
 18116 781a 0FB6      		in __tmp_reg__,__SREG__
 18117 781c F894      		cli
 18118 781e DEBF      		out __SP_H__,r29
 18119 7820 0FBE      		out __SREG__,__tmp_reg__
 18120 7822 CDBF      		out __SP_L__,r28
 18121               	/* prologue: function */
 18122               	/* frame size = 10 */
 18123               	/* stack size = 14 */
 18124               	.L__stack_usage = 14
 18125 7824 9A83      		std Y+2,r25
 18126 7826 8983      		std Y+1,r24
 18127 7828 4B83      		std Y+3,r20
 18128 782a 5C83      		std Y+4,r21
 18129 782c 6D83      		std Y+5,r22
 18130 782e 7E83      		std Y+6,r23
 18131 7830 0F83      		std Y+7,r16
 18132 7832 1887      		std Y+8,r17
 18133 7834 2987      		std Y+9,r18
 18134 7836 3A87      		std Y+10,r19
1839:lp_solve_5.5/lp_price.c ****   multi->step_base = multi->step_last = step_base;
 18135               		.loc 1 1839 0
 18136 7838 2981      		ldd r18,Y+1
 18137 783a 3A81      		ldd r19,Y+2
 18138 783c 8B81      		ldd r24,Y+3
 18139 783e 9C81      		ldd r25,Y+4
 18140 7840 AD81      		ldd r26,Y+5
 18141 7842 BE81      		ldd r27,Y+6
 18142 7844 F901      		movw r30,r18
 18143 7846 848F      		std Z+28,r24
 18144 7848 958F      		std Z+29,r25
 18145 784a A68F      		std Z+30,r26
 18146 784c B78F      		std Z+31,r27
 18147 784e 8981      		ldd r24,Y+1
 18148 7850 9A81      		ldd r25,Y+2
 18149 7852 FC01      		movw r30,r24
 18150 7854 848D      		ldd r24,Z+28
 18151 7856 958D      		ldd r25,Z+29
 18152 7858 A68D      		ldd r26,Z+30
 18153 785a B78D      		ldd r27,Z+31
 18154 785c 2981      		ldd r18,Y+1
 18155 785e 3A81      		ldd r19,Y+2
 18156 7860 F901      		movw r30,r18
 18157 7862 808F      		std Z+24,r24
 18158 7864 918F      		std Z+25,r25
 18159 7866 A28F      		std Z+26,r26
 18160 7868 B38F      		std Z+27,r27
1840:lp_solve_5.5/lp_price.c ****   multi->obj_base  = multi->obj_last  = obj_base;
 18161               		.loc 1 1840 0
 18162 786a 2981      		ldd r18,Y+1
 18163 786c 3A81      		ldd r19,Y+2
 18164 786e 8F81      		ldd r24,Y+7
 18165 7870 9885      		ldd r25,Y+8
 18166 7872 A985      		ldd r26,Y+9
 18167 7874 BA85      		ldd r27,Y+10
 18168 7876 F901      		movw r30,r18
 18169 7878 84A3      		std Z+36,r24
 18170 787a 95A3      		std Z+37,r25
 18171 787c A6A3      		std Z+38,r26
 18172 787e B7A3      		std Z+39,r27
 18173 7880 8981      		ldd r24,Y+1
 18174 7882 9A81      		ldd r25,Y+2
 18175 7884 FC01      		movw r30,r24
 18176 7886 84A1      		ldd r24,Z+36
 18177 7888 95A1      		ldd r25,Z+37
 18178 788a A6A1      		ldd r26,Z+38
 18179 788c B7A1      		ldd r27,Z+39
 18180 788e 2981      		ldd r18,Y+1
 18181 7890 3A81      		ldd r19,Y+2
 18182 7892 F901      		movw r30,r18
 18183 7894 80A3      		std Z+32,r24
 18184 7896 91A3      		std Z+33,r25
 18185 7898 A2A3      		std Z+34,r26
 18186 789a B3A3      		std Z+35,r27
1841:lp_solve_5.5/lp_price.c **** #ifdef Paranoia
1842:lp_solve_5.5/lp_price.c ****   if(step_base > 0)
1843:lp_solve_5.5/lp_price.c ****     report(multi->lp, SEVERE, "multi_valueInit: Positive constraint violation %g provided at iterat
1844:lp_solve_5.5/lp_price.c ****                               step_base, (double) get_total_iter(multi->lp));
1845:lp_solve_5.5/lp_price.c **** #endif
1846:lp_solve_5.5/lp_price.c **** }
 18187               		.loc 1 1846 0
 18188 789c 0000      		nop
 18189               	/* epilogue start */
 18190 789e 2A96      		adiw r28,10
 18191 78a0 0FB6      		in __tmp_reg__,__SREG__
 18192 78a2 F894      		cli
 18193 78a4 DEBF      		out __SP_H__,r29
 18194 78a6 0FBE      		out __SREG__,__tmp_reg__
 18195 78a8 CDBF      		out __SP_L__,r28
 18196 78aa DF91      		pop r29
 18197 78ac CF91      		pop r28
 18198 78ae 1F91      		pop r17
 18199 78b0 0F91      		pop r16
 18200 78b2 0895      		ret
 18201               		.cfi_endproc
 18202               	.LFE47:
 18204               	.global	multi_valueList
 18206               	multi_valueList:
 18207               	.LFB48:
1847:lp_solve_5.5/lp_price.c **** 
1848:lp_solve_5.5/lp_price.c **** STATIC REAL *multi_valueList(multirec *multi)
1849:lp_solve_5.5/lp_price.c **** {
 18208               		.loc 1 1849 0
 18209               		.cfi_startproc
 18210 78b4 CF93      		push r28
 18211               	.LCFI323:
 18212               		.cfi_def_cfa_offset 3
 18213               		.cfi_offset 28, -2
 18214 78b6 DF93      		push r29
 18215               	.LCFI324:
 18216               		.cfi_def_cfa_offset 4
 18217               		.cfi_offset 29, -3
 18218 78b8 00D0      		rcall .
 18219               	.LCFI325:
 18220               		.cfi_def_cfa_offset 6
 18221 78ba CDB7      		in r28,__SP_L__
 18222 78bc DEB7      		in r29,__SP_H__
 18223               	.LCFI326:
 18224               		.cfi_def_cfa_register 28
 18225               	/* prologue: function */
 18226               	/* frame size = 2 */
 18227               	/* stack size = 4 */
 18228               	.L__stack_usage = 4
 18229 78be 9A83      		std Y+2,r25
 18230 78c0 8983      		std Y+1,r24
1850:lp_solve_5.5/lp_price.c ****   return(multi->valueList);
 18231               		.loc 1 1850 0
 18232 78c2 8981      		ldd r24,Y+1
 18233 78c4 9A81      		ldd r25,Y+2
 18234 78c6 FC01      		movw r30,r24
 18235 78c8 8089      		ldd r24,Z+16
 18236 78ca 9189      		ldd r25,Z+17
 18237               	/* epilogue start */
1851:lp_solve_5.5/lp_price.c **** }
 18238               		.loc 1 1851 0
 18239 78cc 0F90      		pop __tmp_reg__
 18240 78ce 0F90      		pop __tmp_reg__
 18241 78d0 DF91      		pop r29
 18242 78d2 CF91      		pop r28
 18243 78d4 0895      		ret
 18244               		.cfi_endproc
 18245               	.LFE48:
 18247               	.global	multi_indexSet
 18249               	multi_indexSet:
 18250               	.LFB49:
1852:lp_solve_5.5/lp_price.c **** 
1853:lp_solve_5.5/lp_price.c **** STATIC int *multi_indexSet(multirec *multi, MYBOOL regenerate)
1854:lp_solve_5.5/lp_price.c **** {
 18251               		.loc 1 1854 0
 18252               		.cfi_startproc
 18253 78d6 CF93      		push r28
 18254               	.LCFI327:
 18255               		.cfi_def_cfa_offset 3
 18256               		.cfi_offset 28, -2
 18257 78d8 DF93      		push r29
 18258               	.LCFI328:
 18259               		.cfi_def_cfa_offset 4
 18260               		.cfi_offset 29, -3
 18261 78da 00D0      		rcall .
 18262 78dc 1F92      		push __zero_reg__
 18263               	.LCFI329:
 18264               		.cfi_def_cfa_offset 7
 18265 78de CDB7      		in r28,__SP_L__
 18266 78e0 DEB7      		in r29,__SP_H__
 18267               	.LCFI330:
 18268               		.cfi_def_cfa_register 28
 18269               	/* prologue: function */
 18270               	/* frame size = 3 */
 18271               	/* stack size = 5 */
 18272               	.L__stack_usage = 5
 18273 78e2 9A83      		std Y+2,r25
 18274 78e4 8983      		std Y+1,r24
 18275 78e6 6B83      		std Y+3,r22
1855:lp_solve_5.5/lp_price.c ****   if(regenerate)
 18276               		.loc 1 1855 0
 18277 78e8 8B81      		ldd r24,Y+3
 18278 78ea 8823      		tst r24
 18279 78ec 01F0      		breq .L580
1856:lp_solve_5.5/lp_price.c ****     multi_populateSet(multi, NULL, -1);
 18280               		.loc 1 1856 0
 18281 78ee 8981      		ldd r24,Y+1
 18282 78f0 9A81      		ldd r25,Y+2
 18283 78f2 4FEF      		ldi r20,lo8(-1)
 18284 78f4 5FEF      		ldi r21,lo8(-1)
 18285 78f6 60E0      		ldi r22,0
 18286 78f8 70E0      		ldi r23,0
 18287 78fa 0E94 0000 		call multi_populateSet
 18288               	.L580:
1857:lp_solve_5.5/lp_price.c ****   return(multi->indexSet);
 18289               		.loc 1 1857 0
 18290 78fe 8981      		ldd r24,Y+1
 18291 7900 9A81      		ldd r25,Y+2
 18292 7902 FC01      		movw r30,r24
 18293 7904 8289      		ldd r24,Z+18
 18294 7906 9389      		ldd r25,Z+19
 18295               	/* epilogue start */
1858:lp_solve_5.5/lp_price.c **** }
 18296               		.loc 1 1858 0
 18297 7908 0F90      		pop __tmp_reg__
 18298 790a 0F90      		pop __tmp_reg__
 18299 790c 0F90      		pop __tmp_reg__
 18300 790e DF91      		pop r29
 18301 7910 CF91      		pop r28
 18302 7912 0895      		ret
 18303               		.cfi_endproc
 18304               	.LFE49:
 18306               	.global	multi_getvar
 18308               	multi_getvar:
 18309               	.LFB50:
1859:lp_solve_5.5/lp_price.c **** 
1860:lp_solve_5.5/lp_price.c **** STATIC int multi_getvar(multirec *multi, int item)
1861:lp_solve_5.5/lp_price.c **** {
 18310               		.loc 1 1861 0
 18311               		.cfi_startproc
 18312 7914 CF93      		push r28
 18313               	.LCFI331:
 18314               		.cfi_def_cfa_offset 3
 18315               		.cfi_offset 28, -2
 18316 7916 DF93      		push r29
 18317               	.LCFI332:
 18318               		.cfi_def_cfa_offset 4
 18319               		.cfi_offset 29, -3
 18320 7918 00D0      		rcall .
 18321 791a 00D0      		rcall .
 18322               	.LCFI333:
 18323               		.cfi_def_cfa_offset 8
 18324 791c CDB7      		in r28,__SP_L__
 18325 791e DEB7      		in r29,__SP_H__
 18326               	.LCFI334:
 18327               		.cfi_def_cfa_register 28
 18328               	/* prologue: function */
 18329               	/* frame size = 4 */
 18330               	/* stack size = 6 */
 18331               	.L__stack_usage = 6
 18332 7920 9A83      		std Y+2,r25
 18333 7922 8983      		std Y+1,r24
 18334 7924 7C83      		std Y+4,r23
 18335 7926 6B83      		std Y+3,r22
1862:lp_solve_5.5/lp_price.c **** #ifdef Paranoia
1863:lp_solve_5.5/lp_price.c ****   if((item < 1) || (item >= multi->size))
1864:lp_solve_5.5/lp_price.c ****     return(-1);
1865:lp_solve_5.5/lp_price.c **** #endif
1866:lp_solve_5.5/lp_price.c ****   return( ((pricerec *) &(multi->sortedList[item].pvoidreal.ptr))->varno );
 18336               		.loc 1 1866 0
 18337 7928 8981      		ldd r24,Y+1
 18338 792a 9A81      		ldd r25,Y+2
 18339 792c FC01      		movw r30,r24
 18340 792e 2485      		ldd r18,Z+12
 18341 7930 3585      		ldd r19,Z+13
 18342 7932 8B81      		ldd r24,Y+3
 18343 7934 9C81      		ldd r25,Y+4
 18344 7936 880F      		lsl r24
 18345 7938 991F      		rol r25
 18346 793a 880F      		lsl r24
 18347 793c 991F      		rol r25
 18348 793e 880F      		lsl r24
 18349 7940 991F      		rol r25
 18350 7942 820F      		add r24,r18
 18351 7944 931F      		adc r25,r19
 18352 7946 FC01      		movw r30,r24
 18353 7948 8485      		ldd r24,Z+12
 18354 794a 9585      		ldd r25,Z+13
 18355               	/* epilogue start */
1867:lp_solve_5.5/lp_price.c **** }
 18356               		.loc 1 1867 0
 18357 794c 0F90      		pop __tmp_reg__
 18358 794e 0F90      		pop __tmp_reg__
 18359 7950 0F90      		pop __tmp_reg__
 18360 7952 0F90      		pop __tmp_reg__
 18361 7954 DF91      		pop r29
 18362 7956 CF91      		pop r28
 18363 7958 0895      		ret
 18364               		.cfi_endproc
 18365               	.LFE50:
 18367               	.global	multi_recompute
 18369               	multi_recompute:
 18370               	.LFB51:
1868:lp_solve_5.5/lp_price.c **** 
1869:lp_solve_5.5/lp_price.c **** STATIC MYBOOL multi_recompute(multirec *multi, int index, MYBOOL isphase2, MYBOOL fullupdate)
1870:lp_solve_5.5/lp_price.c **** {
 18371               		.loc 1 1870 0
 18372               		.cfi_startproc
 18373 795a 8F92      		push r8
 18374               	.LCFI335:
 18375               		.cfi_def_cfa_offset 3
 18376               		.cfi_offset 8, -2
 18377 795c 9F92      		push r9
 18378               	.LCFI336:
 18379               		.cfi_def_cfa_offset 4
 18380               		.cfi_offset 9, -3
 18381 795e AF92      		push r10
 18382               	.LCFI337:
 18383               		.cfi_def_cfa_offset 5
 18384               		.cfi_offset 10, -4
 18385 7960 BF92      		push r11
 18386               	.LCFI338:
 18387               		.cfi_def_cfa_offset 6
 18388               		.cfi_offset 11, -5
 18389 7962 CF92      		push r12
 18390               	.LCFI339:
 18391               		.cfi_def_cfa_offset 7
 18392               		.cfi_offset 12, -6
 18393 7964 DF92      		push r13
 18394               	.LCFI340:
 18395               		.cfi_def_cfa_offset 8
 18396               		.cfi_offset 13, -7
 18397 7966 EF92      		push r14
 18398               	.LCFI341:
 18399               		.cfi_def_cfa_offset 9
 18400               		.cfi_offset 14, -8
 18401 7968 FF92      		push r15
 18402               	.LCFI342:
 18403               		.cfi_def_cfa_offset 10
 18404               		.cfi_offset 15, -9
 18405 796a 1F93      		push r17
 18406               	.LCFI343:
 18407               		.cfi_def_cfa_offset 11
 18408               		.cfi_offset 17, -10
 18409 796c CF93      		push r28
 18410               	.LCFI344:
 18411               		.cfi_def_cfa_offset 12
 18412               		.cfi_offset 28, -11
 18413 796e DF93      		push r29
 18414               	.LCFI345:
 18415               		.cfi_def_cfa_offset 13
 18416               		.cfi_offset 29, -12
 18417 7970 CDB7      		in r28,__SP_L__
 18418 7972 DEB7      		in r29,__SP_H__
 18419               	.LCFI346:
 18420               		.cfi_def_cfa_register 28
 18421 7974 A297      		sbiw r28,34
 18422               	.LCFI347:
 18423               		.cfi_def_cfa_offset 47
 18424 7976 0FB6      		in __tmp_reg__,__SREG__
 18425 7978 F894      		cli
 18426 797a DEBF      		out __SP_H__,r29
 18427 797c 0FBE      		out __SREG__,__tmp_reg__
 18428 797e CDBF      		out __SP_L__,r28
 18429               	/* prologue: function */
 18430               	/* frame size = 34 */
 18431               	/* stack size = 45 */
 18432               	.L__stack_usage = 45
 18433 7980 9E8F      		std Y+30,r25
 18434 7982 8D8F      		std Y+29,r24
 18435 7984 78A3      		std Y+32,r23
 18436 7986 6F8F      		std Y+31,r22
 18437 7988 49A3      		std Y+33,r20
 18438 798a 2AA3      		std Y+34,r18
1871:lp_solve_5.5/lp_price.c ****   int      i, n;
1872:lp_solve_5.5/lp_price.c ****   REAL     lB, uB, Alpha, this_theta, prev_theta;
1873:lp_solve_5.5/lp_price.c ****   lprec    *lp = multi->lp;
 18439               		.loc 1 1873 0
 18440 798c 8D8D      		ldd r24,Y+29
 18441 798e 9E8D      		ldd r25,Y+30
 18442 7990 FC01      		movw r30,r24
 18443 7992 8081      		ld r24,Z
 18444 7994 9181      		ldd r25,Z+1
 18445 7996 9887      		std Y+8,r25
 18446 7998 8F83      		std Y+7,r24
1874:lp_solve_5.5/lp_price.c ****   pricerec *thisprice;
1875:lp_solve_5.5/lp_price.c **** 
1876:lp_solve_5.5/lp_price.c ****   /* Define target update window */
1877:lp_solve_5.5/lp_price.c ****   if(multi->dirty) {
 18447               		.loc 1 1877 0
 18448 799a 8D8D      		ldd r24,Y+29
 18449 799c 9E8D      		ldd r25,Y+30
 18450 799e FC01      		movw r30,r24
 18451 79a0 87A9      		ldd r24,Z+55
 18452 79a2 8823      		tst r24
 18453 79a4 01F0      		breq .L585
1878:lp_solve_5.5/lp_price.c ****     index = 0;
 18454               		.loc 1 1878 0
 18455 79a6 18A2      		std Y+32,__zero_reg__
 18456 79a8 1F8E      		std Y+31,__zero_reg__
1879:lp_solve_5.5/lp_price.c ****     n = multi->used - 1;
 18457               		.loc 1 1879 0
 18458 79aa 8D8D      		ldd r24,Y+29
 18459 79ac 9E8D      		ldd r25,Y+30
 18460 79ae FC01      		movw r30,r24
 18461 79b0 8481      		ldd r24,Z+4
 18462 79b2 9581      		ldd r25,Z+5
 18463 79b4 0197      		sbiw r24,1
 18464 79b6 9A83      		std Y+2,r25
 18465 79b8 8983      		std Y+1,r24
 18466 79ba 00C0      		rjmp .L586
 18467               	.L585:
1880:lp_solve_5.5/lp_price.c ****   }
1881:lp_solve_5.5/lp_price.c ****   else if(fullupdate)
 18468               		.loc 1 1881 0
 18469 79bc 8AA1      		ldd r24,Y+34
 18470 79be 8823      		tst r24
 18471 79c0 01F0      		breq .L587
1882:lp_solve_5.5/lp_price.c ****     n = multi->used - 1;
 18472               		.loc 1 1882 0
 18473 79c2 8D8D      		ldd r24,Y+29
 18474 79c4 9E8D      		ldd r25,Y+30
 18475 79c6 FC01      		movw r30,r24
 18476 79c8 8481      		ldd r24,Z+4
 18477 79ca 9581      		ldd r25,Z+5
 18478 79cc 0197      		sbiw r24,1
 18479 79ce 9A83      		std Y+2,r25
 18480 79d0 8983      		std Y+1,r24
 18481 79d2 00C0      		rjmp .L586
 18482               	.L587:
1883:lp_solve_5.5/lp_price.c ****   else
1884:lp_solve_5.5/lp_price.c ****     n = index;
 18483               		.loc 1 1884 0
 18484 79d4 8F8D      		ldd r24,Y+31
 18485 79d6 98A1      		ldd r25,Y+32
 18486 79d8 9A83      		std Y+2,r25
 18487 79da 8983      		std Y+1,r24
 18488               	.L586:
1885:lp_solve_5.5/lp_price.c **** 
1886:lp_solve_5.5/lp_price.c ****   /* Initialize accumulators from the specified update index */
1887:lp_solve_5.5/lp_price.c ****   if(index == 0) {
 18489               		.loc 1 1887 0
 18490 79dc 8F8D      		ldd r24,Y+31
 18491 79de 98A1      		ldd r25,Y+32
 18492 79e0 892B      		or r24,r25
 18493 79e2 01F4      		brne .L588
1888:lp_solve_5.5/lp_price.c ****     multi->maxpivot = 0;
 18494               		.loc 1 1888 0
 18495 79e4 8D8D      		ldd r24,Y+29
 18496 79e6 9E8D      		ldd r25,Y+30
 18497 79e8 FC01      		movw r30,r24
 18498 79ea 14A6      		std Z+44,__zero_reg__
 18499 79ec 15A6      		std Z+45,__zero_reg__
 18500 79ee 16A6      		std Z+46,__zero_reg__
 18501 79f0 17A6      		std Z+47,__zero_reg__
1889:lp_solve_5.5/lp_price.c ****     multi->maxbound = 0;
 18502               		.loc 1 1889 0
 18503 79f2 8D8D      		ldd r24,Y+29
 18504 79f4 9E8D      		ldd r25,Y+30
 18505 79f6 FC01      		movw r30,r24
 18506 79f8 10AA      		std Z+48,__zero_reg__
 18507 79fa 11AA      		std Z+49,__zero_reg__
 18508 79fc 12AA      		std Z+50,__zero_reg__
 18509 79fe 13AA      		std Z+51,__zero_reg__
1890:lp_solve_5.5/lp_price.c ****     multi->step_last = multi->step_base;
 18510               		.loc 1 1890 0
 18511 7a00 8D8D      		ldd r24,Y+29
 18512 7a02 9E8D      		ldd r25,Y+30
 18513 7a04 FC01      		movw r30,r24
 18514 7a06 808D      		ldd r24,Z+24
 18515 7a08 918D      		ldd r25,Z+25
 18516 7a0a A28D      		ldd r26,Z+26
 18517 7a0c B38D      		ldd r27,Z+27
 18518 7a0e 2D8D      		ldd r18,Y+29
 18519 7a10 3E8D      		ldd r19,Y+30
 18520 7a12 F901      		movw r30,r18
 18521 7a14 848F      		std Z+28,r24
 18522 7a16 958F      		std Z+29,r25
 18523 7a18 A68F      		std Z+30,r26
 18524 7a1a B78F      		std Z+31,r27
1891:lp_solve_5.5/lp_price.c ****     multi->obj_last  = multi->obj_base;
 18525               		.loc 1 1891 0
 18526 7a1c 8D8D      		ldd r24,Y+29
 18527 7a1e 9E8D      		ldd r25,Y+30
 18528 7a20 FC01      		movw r30,r24
 18529 7a22 80A1      		ldd r24,Z+32
 18530 7a24 91A1      		ldd r25,Z+33
 18531 7a26 A2A1      		ldd r26,Z+34
 18532 7a28 B3A1      		ldd r27,Z+35
 18533 7a2a 2D8D      		ldd r18,Y+29
 18534 7a2c 3E8D      		ldd r19,Y+30
 18535 7a2e F901      		movw r30,r18
 18536 7a30 84A3      		std Z+36,r24
 18537 7a32 95A3      		std Z+37,r25
 18538 7a34 A6A3      		std Z+38,r26
 18539 7a36 B7A3      		std Z+39,r27
1892:lp_solve_5.5/lp_price.c ****     thisprice  = NULL;
 18540               		.loc 1 1892 0
 18541 7a38 1A86      		std Y+10,__zero_reg__
 18542 7a3a 1986      		std Y+9,__zero_reg__
1893:lp_solve_5.5/lp_price.c ****     this_theta  = 0;
 18543               		.loc 1 1893 0
 18544 7a3c 1B82      		std Y+3,__zero_reg__
 18545 7a3e 1C82      		std Y+4,__zero_reg__
 18546 7a40 1D82      		std Y+5,__zero_reg__
 18547 7a42 1E82      		std Y+6,__zero_reg__
 18548 7a44 00C0      		rjmp .L590
 18549               	.L588:
1894:lp_solve_5.5/lp_price.c ****   }
1895:lp_solve_5.5/lp_price.c ****   else {
1896:lp_solve_5.5/lp_price.c ****     multi->obj_last  = multi->valueList[index-1];
 18550               		.loc 1 1896 0
 18551 7a46 8D8D      		ldd r24,Y+29
 18552 7a48 9E8D      		ldd r25,Y+30
 18553 7a4a FC01      		movw r30,r24
 18554 7a4c 2089      		ldd r18,Z+16
 18555 7a4e 3189      		ldd r19,Z+17
 18556 7a50 8F8D      		ldd r24,Y+31
 18557 7a52 98A1      		ldd r25,Y+32
 18558 7a54 8150      		subi r24,1
 18559 7a56 904C      		sbci r25,-64
 18560 7a58 880F      		lsl r24
 18561 7a5a 991F      		rol r25
 18562 7a5c 880F      		lsl r24
 18563 7a5e 991F      		rol r25
 18564 7a60 820F      		add r24,r18
 18565 7a62 931F      		adc r25,r19
 18566 7a64 FC01      		movw r30,r24
 18567 7a66 8081      		ld r24,Z
 18568 7a68 9181      		ldd r25,Z+1
 18569 7a6a A281      		ldd r26,Z+2
 18570 7a6c B381      		ldd r27,Z+3
 18571 7a6e 2D8D      		ldd r18,Y+29
 18572 7a70 3E8D      		ldd r19,Y+30
 18573 7a72 F901      		movw r30,r18
 18574 7a74 84A3      		std Z+36,r24
 18575 7a76 95A3      		std Z+37,r25
 18576 7a78 A6A3      		std Z+38,r26
 18577 7a7a B7A3      		std Z+39,r27
1897:lp_solve_5.5/lp_price.c ****     multi->step_last = multi->sortedList[index-1].pvoidreal.realval;
 18578               		.loc 1 1897 0
 18579 7a7c 8D8D      		ldd r24,Y+29
 18580 7a7e 9E8D      		ldd r25,Y+30
 18581 7a80 FC01      		movw r30,r24
 18582 7a82 2485      		ldd r18,Z+12
 18583 7a84 3585      		ldd r19,Z+13
 18584 7a86 8F8D      		ldd r24,Y+31
 18585 7a88 98A1      		ldd r25,Y+32
 18586 7a8a 8150      		subi r24,1
 18587 7a8c 904E      		sbci r25,-32
 18588 7a8e 880F      		lsl r24
 18589 7a90 991F      		rol r25
 18590 7a92 880F      		lsl r24
 18591 7a94 991F      		rol r25
 18592 7a96 880F      		lsl r24
 18593 7a98 991F      		rol r25
 18594 7a9a 820F      		add r24,r18
 18595 7a9c 931F      		adc r25,r19
 18596 7a9e FC01      		movw r30,r24
 18597 7aa0 8281      		ldd r24,Z+2
 18598 7aa2 9381      		ldd r25,Z+3
 18599 7aa4 A481      		ldd r26,Z+4
 18600 7aa6 B581      		ldd r27,Z+5
 18601 7aa8 2D8D      		ldd r18,Y+29
 18602 7aaa 3E8D      		ldd r19,Y+30
 18603 7aac F901      		movw r30,r18
 18604 7aae 848F      		std Z+28,r24
 18605 7ab0 958F      		std Z+29,r25
 18606 7ab2 A68F      		std Z+30,r26
 18607 7ab4 B78F      		std Z+31,r27
1898:lp_solve_5.5/lp_price.c ****     thisprice  = (pricerec *) (multi->sortedList[index-1].pvoidreal.ptr);
 18608               		.loc 1 1898 0
 18609 7ab6 8D8D      		ldd r24,Y+29
 18610 7ab8 9E8D      		ldd r25,Y+30
 18611 7aba FC01      		movw r30,r24
 18612 7abc 2485      		ldd r18,Z+12
 18613 7abe 3585      		ldd r19,Z+13
 18614 7ac0 8F8D      		ldd r24,Y+31
 18615 7ac2 98A1      		ldd r25,Y+32
 18616 7ac4 8150      		subi r24,1
 18617 7ac6 904E      		sbci r25,-32
 18618 7ac8 880F      		lsl r24
 18619 7aca 991F      		rol r25
 18620 7acc 880F      		lsl r24
 18621 7ace 991F      		rol r25
 18622 7ad0 880F      		lsl r24
 18623 7ad2 991F      		rol r25
 18624 7ad4 820F      		add r24,r18
 18625 7ad6 931F      		adc r25,r19
 18626 7ad8 FC01      		movw r30,r24
 18627 7ada 8081      		ld r24,Z
 18628 7adc 9181      		ldd r25,Z+1
 18629 7ade 9A87      		std Y+10,r25
 18630 7ae0 8987      		std Y+9,r24
1899:lp_solve_5.5/lp_price.c ****     this_theta = thisprice->theta;
 18631               		.loc 1 1899 0
 18632 7ae2 8985      		ldd r24,Y+9
 18633 7ae4 9A85      		ldd r25,Y+10
 18634 7ae6 FC01      		movw r30,r24
 18635 7ae8 8081      		ld r24,Z
 18636 7aea 9181      		ldd r25,Z+1
 18637 7aec A281      		ldd r26,Z+2
 18638 7aee B381      		ldd r27,Z+3
 18639 7af0 8B83      		std Y+3,r24
 18640 7af2 9C83      		std Y+4,r25
 18641 7af4 AD83      		std Y+5,r26
 18642 7af6 BE83      		std Y+6,r27
1900:lp_solve_5.5/lp_price.c ****   }
1901:lp_solve_5.5/lp_price.c **** 
1902:lp_solve_5.5/lp_price.c ****   /* Update step lengths and objective values */
1903:lp_solve_5.5/lp_price.c ****   while((index <= n) && (multi->step_last < multi->epszero)) {
 18643               		.loc 1 1903 0
 18644 7af8 00C0      		rjmp .L590
 18645               	.L601:
1904:lp_solve_5.5/lp_price.c **** 
1905:lp_solve_5.5/lp_price.c ****     /* Update parameters for this loop */
1906:lp_solve_5.5/lp_price.c ****     prev_theta = this_theta;
 18646               		.loc 1 1906 0
 18647 7afa 8B81      		ldd r24,Y+3
 18648 7afc 9C81      		ldd r25,Y+4
 18649 7afe AD81      		ldd r26,Y+5
 18650 7b00 BE81      		ldd r27,Y+6
 18651 7b02 8B87      		std Y+11,r24
 18652 7b04 9C87      		std Y+12,r25
 18653 7b06 AD87      		std Y+13,r26
 18654 7b08 BE87      		std Y+14,r27
1907:lp_solve_5.5/lp_price.c ****     thisprice  = (pricerec *) (multi->sortedList[index].pvoidreal.ptr);
 18655               		.loc 1 1907 0
 18656 7b0a 8D8D      		ldd r24,Y+29
 18657 7b0c 9E8D      		ldd r25,Y+30
 18658 7b0e FC01      		movw r30,r24
 18659 7b10 2485      		ldd r18,Z+12
 18660 7b12 3585      		ldd r19,Z+13
 18661 7b14 8F8D      		ldd r24,Y+31
 18662 7b16 98A1      		ldd r25,Y+32
 18663 7b18 880F      		lsl r24
 18664 7b1a 991F      		rol r25
 18665 7b1c 880F      		lsl r24
 18666 7b1e 991F      		rol r25
 18667 7b20 880F      		lsl r24
 18668 7b22 991F      		rol r25
 18669 7b24 820F      		add r24,r18
 18670 7b26 931F      		adc r25,r19
 18671 7b28 FC01      		movw r30,r24
 18672 7b2a 8081      		ld r24,Z
 18673 7b2c 9181      		ldd r25,Z+1
 18674 7b2e 9A87      		std Y+10,r25
 18675 7b30 8987      		std Y+9,r24
1908:lp_solve_5.5/lp_price.c ****     this_theta = thisprice->theta;
 18676               		.loc 1 1908 0
 18677 7b32 8985      		ldd r24,Y+9
 18678 7b34 9A85      		ldd r25,Y+10
 18679 7b36 FC01      		movw r30,r24
 18680 7b38 8081      		ld r24,Z
 18681 7b3a 9181      		ldd r25,Z+1
 18682 7b3c A281      		ldd r26,Z+2
 18683 7b3e B381      		ldd r27,Z+3
 18684 7b40 8B83      		std Y+3,r24
 18685 7b42 9C83      		std Y+4,r25
 18686 7b44 AD83      		std Y+5,r26
 18687 7b46 BE83      		std Y+6,r27
1909:lp_solve_5.5/lp_price.c ****     Alpha = fabs(thisprice->pivot);
 18688               		.loc 1 1909 0
 18689 7b48 8985      		ldd r24,Y+9
 18690 7b4a 9A85      		ldd r25,Y+10
 18691 7b4c FC01      		movw r30,r24
 18692 7b4e 8481      		ldd r24,Z+4
 18693 7b50 9581      		ldd r25,Z+5
 18694 7b52 A681      		ldd r26,Z+6
 18695 7b54 B781      		ldd r27,Z+7
 18696 7b56 BF77      		andi r27,0x7f
 18697 7b58 8F87      		std Y+15,r24
 18698 7b5a 988B      		std Y+16,r25
 18699 7b5c A98B      		std Y+17,r26
 18700 7b5e BA8B      		std Y+18,r27
1910:lp_solve_5.5/lp_price.c ****     uB = lp->upbo[thisprice->varno];
 18701               		.loc 1 1910 0
 18702 7b60 8F81      		ldd r24,Y+7
 18703 7b62 9885      		ldd r25,Y+8
 18704 7b64 8055      		subi r24,80
 18705 7b66 9D4F      		sbci r25,-3
 18706 7b68 FC01      		movw r30,r24
 18707 7b6a 2081      		ld r18,Z
 18708 7b6c 3181      		ldd r19,Z+1
 18709 7b6e 8985      		ldd r24,Y+9
 18710 7b70 9A85      		ldd r25,Y+10
 18711 7b72 FC01      		movw r30,r24
 18712 7b74 8485      		ldd r24,Z+12
 18713 7b76 9585      		ldd r25,Z+13
 18714 7b78 880F      		lsl r24
 18715 7b7a 991F      		rol r25
 18716 7b7c 880F      		lsl r24
 18717 7b7e 991F      		rol r25
 18718 7b80 820F      		add r24,r18
 18719 7b82 931F      		adc r25,r19
 18720 7b84 FC01      		movw r30,r24
 18721 7b86 8081      		ld r24,Z
 18722 7b88 9181      		ldd r25,Z+1
 18723 7b8a A281      		ldd r26,Z+2
 18724 7b8c B381      		ldd r27,Z+3
 18725 7b8e 8B8B      		std Y+19,r24
 18726 7b90 9C8B      		std Y+20,r25
 18727 7b92 AD8B      		std Y+21,r26
 18728 7b94 BE8B      		std Y+22,r27
1911:lp_solve_5.5/lp_price.c ****     lB = 0;
 18729               		.loc 1 1911 0
 18730 7b96 1F8A      		std Y+23,__zero_reg__
 18731 7b98 188E      		std Y+24,__zero_reg__
 18732 7b9a 198E      		std Y+25,__zero_reg__
 18733 7b9c 1A8E      		std Y+26,__zero_reg__
1912:lp_solve_5.5/lp_price.c ****     SETMAX(multi->maxpivot, Alpha);
 18734               		.loc 1 1912 0
 18735 7b9e 8D8D      		ldd r24,Y+29
 18736 7ba0 9E8D      		ldd r25,Y+30
 18737 7ba2 FC01      		movw r30,r24
 18738 7ba4 84A5      		ldd r24,Z+44
 18739 7ba6 95A5      		ldd r25,Z+45
 18740 7ba8 A6A5      		ldd r26,Z+46
 18741 7baa B7A5      		ldd r27,Z+47
 18742 7bac 2F85      		ldd r18,Y+15
 18743 7bae 3889      		ldd r19,Y+16
 18744 7bb0 4989      		ldd r20,Y+17
 18745 7bb2 5A89      		ldd r21,Y+18
 18746 7bb4 BC01      		movw r22,r24
 18747 7bb6 CD01      		movw r24,r26
 18748 7bb8 0E94 0000 		call __ltsf2
 18749 7bbc 8823      		tst r24
 18750 7bbe 04F4      		brge .L591
 18751               		.loc 1 1912 0 is_stmt 0 discriminator 1
 18752 7bc0 2D8D      		ldd r18,Y+29
 18753 7bc2 3E8D      		ldd r19,Y+30
 18754 7bc4 8F85      		ldd r24,Y+15
 18755 7bc6 9889      		ldd r25,Y+16
 18756 7bc8 A989      		ldd r26,Y+17
 18757 7bca BA89      		ldd r27,Y+18
 18758 7bcc F901      		movw r30,r18
 18759 7bce 84A7      		std Z+44,r24
 18760 7bd0 95A7      		std Z+45,r25
 18761 7bd2 A6A7      		std Z+46,r26
 18762 7bd4 B7A7      		std Z+47,r27
 18763               	.L591:
1913:lp_solve_5.5/lp_price.c ****     SETMAX(multi->maxbound, uB);
 18764               		.loc 1 1913 0 is_stmt 1
 18765 7bd6 8D8D      		ldd r24,Y+29
 18766 7bd8 9E8D      		ldd r25,Y+30
 18767 7bda FC01      		movw r30,r24
 18768 7bdc 80A9      		ldd r24,Z+48
 18769 7bde 91A9      		ldd r25,Z+49
 18770 7be0 A2A9      		ldd r26,Z+50
 18771 7be2 B3A9      		ldd r27,Z+51
 18772 7be4 2B89      		ldd r18,Y+19
 18773 7be6 3C89      		ldd r19,Y+20
 18774 7be8 4D89      		ldd r20,Y+21
 18775 7bea 5E89      		ldd r21,Y+22
 18776 7bec BC01      		movw r22,r24
 18777 7bee CD01      		movw r24,r26
 18778 7bf0 0E94 0000 		call __ltsf2
 18779 7bf4 8823      		tst r24
 18780 7bf6 04F4      		brge .L593
 18781               		.loc 1 1913 0 is_stmt 0 discriminator 1
 18782 7bf8 2D8D      		ldd r18,Y+29
 18783 7bfa 3E8D      		ldd r19,Y+30
 18784 7bfc 8B89      		ldd r24,Y+19
 18785 7bfe 9C89      		ldd r25,Y+20
 18786 7c00 AD89      		ldd r26,Y+21
 18787 7c02 BE89      		ldd r27,Y+22
 18788 7c04 F901      		movw r30,r18
 18789 7c06 80AB      		std Z+48,r24
 18790 7c08 91AB      		std Z+49,r25
 18791 7c0a A2AB      		std Z+50,r26
 18792 7c0c B3AB      		std Z+51,r27
 18793               	.L593:
1914:lp_solve_5.5/lp_price.c **** 
1915:lp_solve_5.5/lp_price.c ****     /* Do the value updates */
1916:lp_solve_5.5/lp_price.c ****     if(isphase2) {
 18794               		.loc 1 1916 0 is_stmt 1
 18795 7c0e 89A1      		ldd r24,Y+33
 18796 7c10 8823      		tst r24
 18797 7c12 01F4      		brne .+2
 18798 7c14 00C0      		rjmp .L595
1917:lp_solve_5.5/lp_price.c ****       multi->obj_last += (this_theta - prev_theta) * multi->step_last; /* Sign-readjusted from cold
 18799               		.loc 1 1917 0
 18800 7c16 8D8D      		ldd r24,Y+29
 18801 7c18 9E8D      		ldd r25,Y+30
 18802 7c1a FC01      		movw r30,r24
 18803 7c1c C4A0      		ldd r12,Z+36
 18804 7c1e D5A0      		ldd r13,Z+37
 18805 7c20 E6A0      		ldd r14,Z+38
 18806 7c22 F7A0      		ldd r15,Z+39
 18807 7c24 2B85      		ldd r18,Y+11
 18808 7c26 3C85      		ldd r19,Y+12
 18809 7c28 4D85      		ldd r20,Y+13
 18810 7c2a 5E85      		ldd r21,Y+14
 18811 7c2c 6B81      		ldd r22,Y+3
 18812 7c2e 7C81      		ldd r23,Y+4
 18813 7c30 8D81      		ldd r24,Y+5
 18814 7c32 9E81      		ldd r25,Y+6
 18815 7c34 0E94 0000 		call __subsf3
 18816 7c38 DC01      		movw r26,r24
 18817 7c3a CB01      		movw r24,r22
 18818 7c3c 4C01      		movw r8,r24
 18819 7c3e 5D01      		movw r10,r26
 18820 7c40 8D8D      		ldd r24,Y+29
 18821 7c42 9E8D      		ldd r25,Y+30
 18822 7c44 FC01      		movw r30,r24
 18823 7c46 848D      		ldd r24,Z+28
 18824 7c48 958D      		ldd r25,Z+29
 18825 7c4a A68D      		ldd r26,Z+30
 18826 7c4c B78D      		ldd r27,Z+31
 18827 7c4e 9C01      		movw r18,r24
 18828 7c50 AD01      		movw r20,r26
 18829 7c52 C501      		movw r24,r10
 18830 7c54 B401      		movw r22,r8
 18831 7c56 0E94 0000 		call __mulsf3
 18832 7c5a DC01      		movw r26,r24
 18833 7c5c CB01      		movw r24,r22
 18834 7c5e 9C01      		movw r18,r24
 18835 7c60 AD01      		movw r20,r26
 18836 7c62 C701      		movw r24,r14
 18837 7c64 B601      		movw r22,r12
 18838 7c66 0E94 0000 		call __addsf3
 18839 7c6a DC01      		movw r26,r24
 18840 7c6c CB01      		movw r24,r22
 18841 7c6e 2D8D      		ldd r18,Y+29
 18842 7c70 3E8D      		ldd r19,Y+30
 18843 7c72 F901      		movw r30,r18
 18844 7c74 84A3      		std Z+36,r24
 18845 7c76 95A3      		std Z+37,r25
 18846 7c78 A6A3      		std Z+38,r26
 18847 7c7a B7A3      		std Z+39,r27
1918:lp_solve_5.5/lp_price.c ****       if(uB >= lp->infinite)
 18848               		.loc 1 1918 0
 18849 7c7c 8F81      		ldd r24,Y+7
 18850 7c7e 9885      		ldd r25,Y+8
 18851 7c80 865F      		subi r24,-10
 18852 7c82 9C4F      		sbci r25,-4
 18853 7c84 FC01      		movw r30,r24
 18854 7c86 8081      		ld r24,Z
 18855 7c88 9181      		ldd r25,Z+1
 18856 7c8a A281      		ldd r26,Z+2
 18857 7c8c B381      		ldd r27,Z+3
 18858 7c8e 2B89      		ldd r18,Y+19
 18859 7c90 3C89      		ldd r19,Y+20
 18860 7c92 4D89      		ldd r20,Y+21
 18861 7c94 5E89      		ldd r21,Y+22
 18862 7c96 BC01      		movw r22,r24
 18863 7c98 CD01      		movw r24,r26
 18864 7c9a 0E94 0000 		call __lesf2
 18865 7c9e 1816      		cp __zero_reg__,r24
 18866 7ca0 04F0      		brlt .L610
1919:lp_solve_5.5/lp_price.c ****         multi->step_last  = lp->infinite;
 18867               		.loc 1 1919 0
 18868 7ca2 8F81      		ldd r24,Y+7
 18869 7ca4 9885      		ldd r25,Y+8
 18870 7ca6 865F      		subi r24,-10
 18871 7ca8 9C4F      		sbci r25,-4
 18872 7caa FC01      		movw r30,r24
 18873 7cac 8081      		ld r24,Z
 18874 7cae 9181      		ldd r25,Z+1
 18875 7cb0 A281      		ldd r26,Z+2
 18876 7cb2 B381      		ldd r27,Z+3
 18877 7cb4 2D8D      		ldd r18,Y+29
 18878 7cb6 3E8D      		ldd r19,Y+30
 18879 7cb8 F901      		movw r30,r18
 18880 7cba 848F      		std Z+28,r24
 18881 7cbc 958F      		std Z+29,r25
 18882 7cbe A68F      		std Z+30,r26
 18883 7cc0 B78F      		std Z+31,r27
 18884 7cc2 00C0      		rjmp .L599
 18885               	.L610:
1920:lp_solve_5.5/lp_price.c ****       else
1921:lp_solve_5.5/lp_price.c ****         multi->step_last += Alpha*(uB-lB);
 18886               		.loc 1 1921 0
 18887 7cc4 8D8D      		ldd r24,Y+29
 18888 7cc6 9E8D      		ldd r25,Y+30
 18889 7cc8 FC01      		movw r30,r24
 18890 7cca C48C      		ldd r12,Z+28
 18891 7ccc D58C      		ldd r13,Z+29
 18892 7cce E68C      		ldd r14,Z+30
 18893 7cd0 F78C      		ldd r15,Z+31
 18894 7cd2 2F89      		ldd r18,Y+23
 18895 7cd4 388D      		ldd r19,Y+24
 18896 7cd6 498D      		ldd r20,Y+25
 18897 7cd8 5A8D      		ldd r21,Y+26
 18898 7cda 6B89      		ldd r22,Y+19
 18899 7cdc 7C89      		ldd r23,Y+20
 18900 7cde 8D89      		ldd r24,Y+21
 18901 7ce0 9E89      		ldd r25,Y+22
 18902 7ce2 0E94 0000 		call __subsf3
 18903 7ce6 DC01      		movw r26,r24
 18904 7ce8 CB01      		movw r24,r22
 18905 7cea 2F85      		ldd r18,Y+15
 18906 7cec 3889      		ldd r19,Y+16
 18907 7cee 4989      		ldd r20,Y+17
 18908 7cf0 5A89      		ldd r21,Y+18
 18909 7cf2 BC01      		movw r22,r24
 18910 7cf4 CD01      		movw r24,r26
 18911 7cf6 0E94 0000 		call __mulsf3
 18912 7cfa DC01      		movw r26,r24
 18913 7cfc CB01      		movw r24,r22
 18914 7cfe 9C01      		movw r18,r24
 18915 7d00 AD01      		movw r20,r26
 18916 7d02 C701      		movw r24,r14
 18917 7d04 B601      		movw r22,r12
 18918 7d06 0E94 0000 		call __addsf3
 18919 7d0a DC01      		movw r26,r24
 18920 7d0c CB01      		movw r24,r22
 18921 7d0e 2D8D      		ldd r18,Y+29
 18922 7d10 3E8D      		ldd r19,Y+30
 18923 7d12 F901      		movw r30,r18
 18924 7d14 848F      		std Z+28,r24
 18925 7d16 958F      		std Z+29,r25
 18926 7d18 A68F      		std Z+30,r26
 18927 7d1a B78F      		std Z+31,r27
 18928 7d1c 00C0      		rjmp .L599
 18929               	.L595:
1922:lp_solve_5.5/lp_price.c ****     }
1923:lp_solve_5.5/lp_price.c ****     else {
1924:lp_solve_5.5/lp_price.c ****       multi->obj_last += (this_theta - prev_theta) * multi->step_last; /* Sign-readjusted from cold
 18930               		.loc 1 1924 0
 18931 7d1e 8D8D      		ldd r24,Y+29
 18932 7d20 9E8D      		ldd r25,Y+30
 18933 7d22 FC01      		movw r30,r24
 18934 7d24 C4A0      		ldd r12,Z+36
 18935 7d26 D5A0      		ldd r13,Z+37
 18936 7d28 E6A0      		ldd r14,Z+38
 18937 7d2a F7A0      		ldd r15,Z+39
 18938 7d2c 2B85      		ldd r18,Y+11
 18939 7d2e 3C85      		ldd r19,Y+12
 18940 7d30 4D85      		ldd r20,Y+13
 18941 7d32 5E85      		ldd r21,Y+14
 18942 7d34 6B81      		ldd r22,Y+3
 18943 7d36 7C81      		ldd r23,Y+4
 18944 7d38 8D81      		ldd r24,Y+5
 18945 7d3a 9E81      		ldd r25,Y+6
 18946 7d3c 0E94 0000 		call __subsf3
 18947 7d40 DC01      		movw r26,r24
 18948 7d42 CB01      		movw r24,r22
 18949 7d44 4C01      		movw r8,r24
 18950 7d46 5D01      		movw r10,r26
 18951 7d48 8D8D      		ldd r24,Y+29
 18952 7d4a 9E8D      		ldd r25,Y+30
 18953 7d4c FC01      		movw r30,r24
 18954 7d4e 848D      		ldd r24,Z+28
 18955 7d50 958D      		ldd r25,Z+29
 18956 7d52 A68D      		ldd r26,Z+30
 18957 7d54 B78D      		ldd r27,Z+31
 18958 7d56 9C01      		movw r18,r24
 18959 7d58 AD01      		movw r20,r26
 18960 7d5a C501      		movw r24,r10
 18961 7d5c B401      		movw r22,r8
 18962 7d5e 0E94 0000 		call __mulsf3
 18963 7d62 DC01      		movw r26,r24
 18964 7d64 CB01      		movw r24,r22
 18965 7d66 9C01      		movw r18,r24
 18966 7d68 AD01      		movw r20,r26
 18967 7d6a C701      		movw r24,r14
 18968 7d6c B601      		movw r22,r12
 18969 7d6e 0E94 0000 		call __addsf3
 18970 7d72 DC01      		movw r26,r24
 18971 7d74 CB01      		movw r24,r22
 18972 7d76 2D8D      		ldd r18,Y+29
 18973 7d78 3E8D      		ldd r19,Y+30
 18974 7d7a F901      		movw r30,r18
 18975 7d7c 84A3      		std Z+36,r24
 18976 7d7e 95A3      		std Z+37,r25
 18977 7d80 A6A3      		std Z+38,r26
 18978 7d82 B7A3      		std Z+39,r27
1925:lp_solve_5.5/lp_price.c ****       multi->step_last += Alpha;
 18979               		.loc 1 1925 0
 18980 7d84 8D8D      		ldd r24,Y+29
 18981 7d86 9E8D      		ldd r25,Y+30
 18982 7d88 FC01      		movw r30,r24
 18983 7d8a 848D      		ldd r24,Z+28
 18984 7d8c 958D      		ldd r25,Z+29
 18985 7d8e A68D      		ldd r26,Z+30
 18986 7d90 B78D      		ldd r27,Z+31
 18987 7d92 2F85      		ldd r18,Y+15
 18988 7d94 3889      		ldd r19,Y+16
 18989 7d96 4989      		ldd r20,Y+17
 18990 7d98 5A89      		ldd r21,Y+18
 18991 7d9a BC01      		movw r22,r24
 18992 7d9c CD01      		movw r24,r26
 18993 7d9e 0E94 0000 		call __addsf3
 18994 7da2 DC01      		movw r26,r24
 18995 7da4 CB01      		movw r24,r22
 18996 7da6 2D8D      		ldd r18,Y+29
 18997 7da8 3E8D      		ldd r19,Y+30
 18998 7daa F901      		movw r30,r18
 18999 7dac 848F      		std Z+28,r24
 19000 7dae 958F      		std Z+29,r25
 19001 7db0 A68F      		std Z+30,r26
 19002 7db2 B78F      		std Z+31,r27
 19003               	.L599:
1926:lp_solve_5.5/lp_price.c ****     }
1927:lp_solve_5.5/lp_price.c **** 
1928:lp_solve_5.5/lp_price.c ****     /* Store updated values at the indexed locations */
1929:lp_solve_5.5/lp_price.c ****     multi->sortedList[index].pvoidreal.realval = multi->step_last;
 19004               		.loc 1 1929 0
 19005 7db4 8D8D      		ldd r24,Y+29
 19006 7db6 9E8D      		ldd r25,Y+30
 19007 7db8 FC01      		movw r30,r24
 19008 7dba 2485      		ldd r18,Z+12
 19009 7dbc 3585      		ldd r19,Z+13
 19010 7dbe 8F8D      		ldd r24,Y+31
 19011 7dc0 98A1      		ldd r25,Y+32
 19012 7dc2 880F      		lsl r24
 19013 7dc4 991F      		rol r25
 19014 7dc6 880F      		lsl r24
 19015 7dc8 991F      		rol r25
 19016 7dca 880F      		lsl r24
 19017 7dcc 991F      		rol r25
 19018 7dce 280F      		add r18,r24
 19019 7dd0 391F      		adc r19,r25
 19020 7dd2 8D8D      		ldd r24,Y+29
 19021 7dd4 9E8D      		ldd r25,Y+30
 19022 7dd6 FC01      		movw r30,r24
 19023 7dd8 848D      		ldd r24,Z+28
 19024 7dda 958D      		ldd r25,Z+29
 19025 7ddc A68D      		ldd r26,Z+30
 19026 7dde B78D      		ldd r27,Z+31
 19027 7de0 F901      		movw r30,r18
 19028 7de2 8283      		std Z+2,r24
 19029 7de4 9383      		std Z+3,r25
 19030 7de6 A483      		std Z+4,r26
 19031 7de8 B583      		std Z+5,r27
1930:lp_solve_5.5/lp_price.c ****     multi->valueList[index] = multi->obj_last;
 19032               		.loc 1 1930 0
 19033 7dea 8D8D      		ldd r24,Y+29
 19034 7dec 9E8D      		ldd r25,Y+30
 19035 7dee FC01      		movw r30,r24
 19036 7df0 2089      		ldd r18,Z+16
 19037 7df2 3189      		ldd r19,Z+17
 19038 7df4 8F8D      		ldd r24,Y+31
 19039 7df6 98A1      		ldd r25,Y+32
 19040 7df8 880F      		lsl r24
 19041 7dfa 991F      		rol r25
 19042 7dfc 880F      		lsl r24
 19043 7dfe 991F      		rol r25
 19044 7e00 280F      		add r18,r24
 19045 7e02 391F      		adc r19,r25
 19046 7e04 8D8D      		ldd r24,Y+29
 19047 7e06 9E8D      		ldd r25,Y+30
 19048 7e08 FC01      		movw r30,r24
 19049 7e0a 84A1      		ldd r24,Z+36
 19050 7e0c 95A1      		ldd r25,Z+37
 19051 7e0e A6A1      		ldd r26,Z+38
 19052 7e10 B7A1      		ldd r27,Z+39
 19053 7e12 F901      		movw r30,r18
 19054 7e14 8083      		st Z,r24
 19055 7e16 9183      		std Z+1,r25
 19056 7e18 A283      		std Z+2,r26
 19057 7e1a B383      		std Z+3,r27
1931:lp_solve_5.5/lp_price.c **** #ifdef Paranoia
1932:lp_solve_5.5/lp_price.c ****     if(lp->spx_trace &&
1933:lp_solve_5.5/lp_price.c ****        (multi->step_last > lp->infinite))
1934:lp_solve_5.5/lp_price.c ****       report(lp, SEVERE, "multi_recompute: A very large step-size %g was generated at iteration %6.
1935:lp_solve_5.5/lp_price.c ****                          multi->step_last, (double) get_total_iter(lp));
1936:lp_solve_5.5/lp_price.c **** #endif
1937:lp_solve_5.5/lp_price.c ****     index++;
 19058               		.loc 1 1937 0
 19059 7e1c 8F8D      		ldd r24,Y+31
 19060 7e1e 98A1      		ldd r25,Y+32
 19061 7e20 0196      		adiw r24,1
 19062 7e22 98A3      		std Y+32,r25
 19063 7e24 8F8F      		std Y+31,r24
 19064               	.L590:
1903:lp_solve_5.5/lp_price.c **** 
 19065               		.loc 1 1903 0
 19066 7e26 2F8D      		ldd r18,Y+31
 19067 7e28 38A1      		ldd r19,Y+32
 19068 7e2a 8981      		ldd r24,Y+1
 19069 7e2c 9A81      		ldd r25,Y+2
 19070 7e2e 8217      		cp r24,r18
 19071 7e30 9307      		cpc r25,r19
 19072 7e32 04F0      		brlt .L600
1903:lp_solve_5.5/lp_price.c **** 
 19073               		.loc 1 1903 0 is_stmt 0 discriminator 1
 19074 7e34 8D8D      		ldd r24,Y+29
 19075 7e36 9E8D      		ldd r25,Y+30
 19076 7e38 FC01      		movw r30,r24
 19077 7e3a 848D      		ldd r24,Z+28
 19078 7e3c 958D      		ldd r25,Z+29
 19079 7e3e A68D      		ldd r26,Z+30
 19080 7e40 B78D      		ldd r27,Z+31
 19081 7e42 2D8D      		ldd r18,Y+29
 19082 7e44 3E8D      		ldd r19,Y+30
 19083 7e46 F901      		movw r30,r18
 19084 7e48 20A5      		ldd r18,Z+40
 19085 7e4a 31A5      		ldd r19,Z+41
 19086 7e4c 42A5      		ldd r20,Z+42
 19087 7e4e 53A5      		ldd r21,Z+43
 19088 7e50 BC01      		movw r22,r24
 19089 7e52 CD01      		movw r24,r26
 19090 7e54 0E94 0000 		call __ltsf2
 19091 7e58 8823      		tst r24
 19092 7e5a 04F4      		brge .+2
 19093 7e5c 00C0      		rjmp .L601
 19094               	.L600:
1938:lp_solve_5.5/lp_price.c ****   }
1939:lp_solve_5.5/lp_price.c **** 
1940:lp_solve_5.5/lp_price.c ****   /* Discard candidates entered earlier that now make the OF worsen, and
1941:lp_solve_5.5/lp_price.c ****      make sure that the released positions are added to the free list. */
1942:lp_solve_5.5/lp_price.c ****   n = index;
 19095               		.loc 1 1942 0 is_stmt 1
 19096 7e5e 8F8D      		ldd r24,Y+31
 19097 7e60 98A1      		ldd r25,Y+32
 19098 7e62 9A83      		std Y+2,r25
 19099 7e64 8983      		std Y+1,r24
1943:lp_solve_5.5/lp_price.c ****   while(n < multi->used) {
 19100               		.loc 1 1943 0
 19101 7e66 00C0      		rjmp .L602
 19102               	.L603:
1944:lp_solve_5.5/lp_price.c ****     i = ++multi->freeList[0];
 19103               		.loc 1 1944 0
 19104 7e68 8D8D      		ldd r24,Y+29
 19105 7e6a 9E8D      		ldd r25,Y+30
 19106 7e6c FC01      		movw r30,r24
 19107 7e6e 8285      		ldd r24,Z+10
 19108 7e70 9385      		ldd r25,Z+11
 19109 7e72 FC01      		movw r30,r24
 19110 7e74 2081      		ld r18,Z
 19111 7e76 3181      		ldd r19,Z+1
 19112 7e78 2F5F      		subi r18,-1
 19113 7e7a 3F4F      		sbci r19,-1
 19114 7e7c FC01      		movw r30,r24
 19115 7e7e 3183      		std Z+1,r19
 19116 7e80 2083      		st Z,r18
 19117 7e82 FC01      		movw r30,r24
 19118 7e84 8081      		ld r24,Z
 19119 7e86 9181      		ldd r25,Z+1
 19120 7e88 9C8F      		std Y+28,r25
 19121 7e8a 8B8F      		std Y+27,r24
1945:lp_solve_5.5/lp_price.c ****     multi->freeList[i] = (int) (((pricerec *) multi->sortedList[n].pvoidreal.ptr) - multi->items);
 19122               		.loc 1 1945 0
 19123 7e8c 8D8D      		ldd r24,Y+29
 19124 7e8e 9E8D      		ldd r25,Y+30
 19125 7e90 FC01      		movw r30,r24
 19126 7e92 2285      		ldd r18,Z+10
 19127 7e94 3385      		ldd r19,Z+11
 19128 7e96 8B8D      		ldd r24,Y+27
 19129 7e98 9C8D      		ldd r25,Y+28
 19130 7e9a 880F      		lsl r24
 19131 7e9c 991F      		rol r25
 19132 7e9e 820F      		add r24,r18
 19133 7ea0 931F      		adc r25,r19
 19134 7ea2 2D8D      		ldd r18,Y+29
 19135 7ea4 3E8D      		ldd r19,Y+30
 19136 7ea6 F901      		movw r30,r18
 19137 7ea8 4485      		ldd r20,Z+12
 19138 7eaa 5585      		ldd r21,Z+13
 19139 7eac 2981      		ldd r18,Y+1
 19140 7eae 3A81      		ldd r19,Y+2
 19141 7eb0 220F      		lsl r18
 19142 7eb2 331F      		rol r19
 19143 7eb4 220F      		lsl r18
 19144 7eb6 331F      		rol r19
 19145 7eb8 220F      		lsl r18
 19146 7eba 331F      		rol r19
 19147 7ebc 240F      		add r18,r20
 19148 7ebe 351F      		adc r19,r21
 19149 7ec0 F901      		movw r30,r18
 19150 7ec2 2081      		ld r18,Z
 19151 7ec4 3181      		ldd r19,Z+1
 19152 7ec6 A901      		movw r20,r18
 19153 7ec8 2D8D      		ldd r18,Y+29
 19154 7eca 3E8D      		ldd r19,Y+30
 19155 7ecc F901      		movw r30,r18
 19156 7ece 2085      		ldd r18,Z+8
 19157 7ed0 3185      		ldd r19,Z+9
 19158 7ed2 421B      		sub r20,r18
 19159 7ed4 530B      		sbc r21,r19
 19160 7ed6 21EF      		ldi r18,lo8(-15)
 19161 7ed8 30EF      		ldi r19,lo8(-16)
 19162 7eda 429F      		mul r20,r18
 19163 7edc B001      		movw r22,r0
 19164 7ede 439F      		mul r20,r19
 19165 7ee0 700D      		add r23,r0
 19166 7ee2 529F      		mul r21,r18
 19167 7ee4 700D      		add r23,r0
 19168 7ee6 1124      		clr r1
 19169 7ee8 9B01      		movw r18,r22
 19170 7eea FC01      		movw r30,r24
 19171 7eec 3183      		std Z+1,r19
 19172 7eee 2083      		st Z,r18
1946:lp_solve_5.5/lp_price.c ****     n++;
 19173               		.loc 1 1946 0
 19174 7ef0 8981      		ldd r24,Y+1
 19175 7ef2 9A81      		ldd r25,Y+2
 19176 7ef4 0196      		adiw r24,1
 19177 7ef6 9A83      		std Y+2,r25
 19178 7ef8 8983      		std Y+1,r24
 19179               	.L602:
1943:lp_solve_5.5/lp_price.c ****     i = ++multi->freeList[0];
 19180               		.loc 1 1943 0
 19181 7efa 8D8D      		ldd r24,Y+29
 19182 7efc 9E8D      		ldd r25,Y+30
 19183 7efe FC01      		movw r30,r24
 19184 7f00 2481      		ldd r18,Z+4
 19185 7f02 3581      		ldd r19,Z+5
 19186 7f04 8981      		ldd r24,Y+1
 19187 7f06 9A81      		ldd r25,Y+2
 19188 7f08 8217      		cp r24,r18
 19189 7f0a 9307      		cpc r25,r19
 19190 7f0c 04F4      		brge .+2
 19191 7f0e 00C0      		rjmp .L603
1947:lp_solve_5.5/lp_price.c ****   }
1948:lp_solve_5.5/lp_price.c ****   multi->used  = index;
 19192               		.loc 1 1948 0
 19193 7f10 8D8D      		ldd r24,Y+29
 19194 7f12 9E8D      		ldd r25,Y+30
 19195 7f14 2F8D      		ldd r18,Y+31
 19196 7f16 38A1      		ldd r19,Y+32
 19197 7f18 FC01      		movw r30,r24
 19198 7f1a 3583      		std Z+5,r19
 19199 7f1c 2483      		std Z+4,r18
1949:lp_solve_5.5/lp_price.c ****   if(multi->sorted && (index == 1))
 19200               		.loc 1 1949 0
 19201 7f1e 8D8D      		ldd r24,Y+29
 19202 7f20 9E8D      		ldd r25,Y+30
 19203 7f22 FC01      		movw r30,r24
 19204 7f24 84A9      		ldd r24,Z+52
 19205 7f26 8823      		tst r24
 19206 7f28 01F0      		breq .L604
 19207               		.loc 1 1949 0 is_stmt 0 discriminator 1
 19208 7f2a 8F8D      		ldd r24,Y+31
 19209 7f2c 98A1      		ldd r25,Y+32
 19210 7f2e 0197      		sbiw r24,1
 19211 7f30 01F4      		brne .L604
1950:lp_solve_5.5/lp_price.c ****     multi->sorted = FALSE;
 19212               		.loc 1 1950 0 is_stmt 1
 19213 7f32 8D8D      		ldd r24,Y+29
 19214 7f34 9E8D      		ldd r25,Y+30
 19215 7f36 FC01      		movw r30,r24
 19216 7f38 14AA      		std Z+52,__zero_reg__
 19217               	.L604:
1951:lp_solve_5.5/lp_price.c ****   multi->dirty = FALSE;
 19218               		.loc 1 1951 0
 19219 7f3a 8D8D      		ldd r24,Y+29
 19220 7f3c 9E8D      		ldd r25,Y+30
 19221 7f3e FC01      		movw r30,r24
 19222 7f40 17AA      		std Z+55,__zero_reg__
1952:lp_solve_5.5/lp_price.c **** 
1953:lp_solve_5.5/lp_price.c ****   /* Return TRUE if the step is now positive */
1954:lp_solve_5.5/lp_price.c ****   return( (MYBOOL) (multi->step_last >= multi->epszero) );
 19223               		.loc 1 1954 0
 19224 7f42 8D8D      		ldd r24,Y+29
 19225 7f44 9E8D      		ldd r25,Y+30
 19226 7f46 FC01      		movw r30,r24
 19227 7f48 848D      		ldd r24,Z+28
 19228 7f4a 958D      		ldd r25,Z+29
 19229 7f4c A68D      		ldd r26,Z+30
 19230 7f4e B78D      		ldd r27,Z+31
 19231 7f50 2D8D      		ldd r18,Y+29
 19232 7f52 3E8D      		ldd r19,Y+30
 19233 7f54 F901      		movw r30,r18
 19234 7f56 20A5      		ldd r18,Z+40
 19235 7f58 31A5      		ldd r19,Z+41
 19236 7f5a 42A5      		ldd r20,Z+42
 19237 7f5c 53A5      		ldd r21,Z+43
 19238 7f5e 11E0      		ldi r17,lo8(1)
 19239 7f60 BC01      		movw r22,r24
 19240 7f62 CD01      		movw r24,r26
 19241 7f64 0E94 0000 		call __gesf2
 19242 7f68 8823      		tst r24
 19243 7f6a 04F4      		brge .L605
 19244 7f6c 10E0      		ldi r17,0
 19245               	.L605:
 19246 7f6e 812F      		mov r24,r17
 19247               	/* epilogue start */
1955:lp_solve_5.5/lp_price.c **** }
 19248               		.loc 1 1955 0
 19249 7f70 A296      		adiw r28,34
 19250 7f72 0FB6      		in __tmp_reg__,__SREG__
 19251 7f74 F894      		cli
 19252 7f76 DEBF      		out __SP_H__,r29
 19253 7f78 0FBE      		out __SREG__,__tmp_reg__
 19254 7f7a CDBF      		out __SP_L__,r28
 19255 7f7c DF91      		pop r29
 19256 7f7e CF91      		pop r28
 19257 7f80 1F91      		pop r17
 19258 7f82 FF90      		pop r15
 19259 7f84 EF90      		pop r14
 19260 7f86 DF90      		pop r13
 19261 7f88 CF90      		pop r12
 19262 7f8a BF90      		pop r11
 19263 7f8c AF90      		pop r10
 19264 7f8e 9F90      		pop r9
 19265 7f90 8F90      		pop r8
 19266 7f92 0895      		ret
 19267               		.cfi_endproc
 19268               	.LFE51:
 19270               	.global	multi_truncatingvar
 19272               	multi_truncatingvar:
 19273               	.LFB52:
1956:lp_solve_5.5/lp_price.c **** 
1957:lp_solve_5.5/lp_price.c **** STATIC MYBOOL multi_truncatingvar(multirec *multi, int varnr)
1958:lp_solve_5.5/lp_price.c **** {
 19274               		.loc 1 1958 0
 19275               		.cfi_startproc
 19276 7f94 CF93      		push r28
 19277               	.LCFI348:
 19278               		.cfi_def_cfa_offset 3
 19279               		.cfi_offset 28, -2
 19280 7f96 DF93      		push r29
 19281               	.LCFI349:
 19282               		.cfi_def_cfa_offset 4
 19283               		.cfi_offset 29, -3
 19284 7f98 00D0      		rcall .
 19285 7f9a 00D0      		rcall .
 19286               	.LCFI350:
 19287               		.cfi_def_cfa_offset 8
 19288 7f9c CDB7      		in r28,__SP_L__
 19289 7f9e DEB7      		in r29,__SP_H__
 19290               	.LCFI351:
 19291               		.cfi_def_cfa_register 28
 19292               	/* prologue: function */
 19293               	/* frame size = 4 */
 19294               	/* stack size = 6 */
 19295               	.L__stack_usage = 6
 19296 7fa0 9A83      		std Y+2,r25
 19297 7fa2 8983      		std Y+1,r24
 19298 7fa4 7C83      		std Y+4,r23
 19299 7fa6 6B83      		std Y+3,r22
1959:lp_solve_5.5/lp_price.c ****   return( multi->truncinf && is_infinite(multi->lp, multi->lp->upbo[varnr]) );
 19300               		.loc 1 1959 0
 19301 7fa8 8981      		ldd r24,Y+1
 19302 7faa 9A81      		ldd r25,Y+2
 19303 7fac FC01      		movw r30,r24
 19304 7fae 85A9      		ldd r24,Z+53
 19305 7fb0 8823      		tst r24
 19306 7fb2 01F0      		breq .L612
 19307               		.loc 1 1959 0 is_stmt 0 discriminator 1
 19308 7fb4 8981      		ldd r24,Y+1
 19309 7fb6 9A81      		ldd r25,Y+2
 19310 7fb8 FC01      		movw r30,r24
 19311 7fba 8081      		ld r24,Z
 19312 7fbc 9181      		ldd r25,Z+1
 19313 7fbe 8055      		subi r24,80
 19314 7fc0 9D4F      		sbci r25,-3
 19315 7fc2 FC01      		movw r30,r24
 19316 7fc4 2081      		ld r18,Z
 19317 7fc6 3181      		ldd r19,Z+1
 19318 7fc8 8B81      		ldd r24,Y+3
 19319 7fca 9C81      		ldd r25,Y+4
 19320 7fcc 880F      		lsl r24
 19321 7fce 991F      		rol r25
 19322 7fd0 880F      		lsl r24
 19323 7fd2 991F      		rol r25
 19324 7fd4 820F      		add r24,r18
 19325 7fd6 931F      		adc r25,r19
 19326 7fd8 FC01      		movw r30,r24
 19327 7fda 8081      		ld r24,Z
 19328 7fdc 9181      		ldd r25,Z+1
 19329 7fde A281      		ldd r26,Z+2
 19330 7fe0 B381      		ldd r27,Z+3
 19331 7fe2 2981      		ldd r18,Y+1
 19332 7fe4 3A81      		ldd r19,Y+2
 19333 7fe6 F901      		movw r30,r18
 19334 7fe8 2081      		ld r18,Z
 19335 7fea 3181      		ldd r19,Z+1
 19336 7fec AC01      		movw r20,r24
 19337 7fee BD01      		movw r22,r26
 19338 7ff0 C901      		movw r24,r18
 19339 7ff2 0E94 0000 		call is_infinite
 19340 7ff6 8823      		tst r24
 19341 7ff8 01F0      		breq .L612
 19342               		.loc 1 1959 0 discriminator 3
 19343 7ffa 81E0      		ldi r24,lo8(1)
 19344 7ffc 90E0      		ldi r25,0
 19345 7ffe 00C0      		rjmp .L613
 19346               	.L612:
 19347               		.loc 1 1959 0 discriminator 4
 19348 8000 80E0      		ldi r24,0
 19349 8002 90E0      		ldi r25,0
 19350               	.L613:
 19351               	/* epilogue start */
1960:lp_solve_5.5/lp_price.c **** }
 19352               		.loc 1 1960 0 is_stmt 1 discriminator 6
 19353 8004 0F90      		pop __tmp_reg__
 19354 8006 0F90      		pop __tmp_reg__
 19355 8008 0F90      		pop __tmp_reg__
 19356 800a 0F90      		pop __tmp_reg__
 19357 800c DF91      		pop r29
 19358 800e CF91      		pop r28
 19359 8010 0895      		ret
 19360               		.cfi_endproc
 19361               	.LFE52:
 19363               	.global	multi_removevar
 19365               	multi_removevar:
 19366               	.LFB53:
1961:lp_solve_5.5/lp_price.c **** 
1962:lp_solve_5.5/lp_price.c **** STATIC MYBOOL multi_removevar(multirec *multi, int varnr)
1963:lp_solve_5.5/lp_price.c **** {
 19367               		.loc 1 1963 0
 19368               		.cfi_startproc
 19369 8012 CF93      		push r28
 19370               	.LCFI352:
 19371               		.cfi_def_cfa_offset 3
 19372               		.cfi_offset 28, -2
 19373 8014 DF93      		push r29
 19374               	.LCFI353:
 19375               		.cfi_def_cfa_offset 4
 19376               		.cfi_offset 29, -3
 19377 8016 CDB7      		in r28,__SP_L__
 19378 8018 DEB7      		in r29,__SP_H__
 19379               	.LCFI354:
 19380               		.cfi_def_cfa_register 28
 19381 801a 2897      		sbiw r28,8
 19382               	.LCFI355:
 19383               		.cfi_def_cfa_offset 12
 19384 801c 0FB6      		in __tmp_reg__,__SREG__
 19385 801e F894      		cli
 19386 8020 DEBF      		out __SP_H__,r29
 19387 8022 0FBE      		out __SREG__,__tmp_reg__
 19388 8024 CDBF      		out __SP_L__,r28
 19389               	/* prologue: function */
 19390               	/* frame size = 8 */
 19391               	/* stack size = 10 */
 19392               	.L__stack_usage = 10
 19393 8026 9E83      		std Y+6,r25
 19394 8028 8D83      		std Y+5,r24
 19395 802a 7887      		std Y+8,r23
 19396 802c 6F83      		std Y+7,r22
1964:lp_solve_5.5/lp_price.c ****   int i = 1;
 19397               		.loc 1 1964 0
 19398 802e 81E0      		ldi r24,lo8(1)
 19399 8030 90E0      		ldi r25,0
 19400 8032 9A83      		std Y+2,r25
 19401 8034 8983      		std Y+1,r24
1965:lp_solve_5.5/lp_price.c ****   int *coltarget = multi->indexSet;
 19402               		.loc 1 1965 0
 19403 8036 8D81      		ldd r24,Y+5
 19404 8038 9E81      		ldd r25,Y+6
 19405 803a FC01      		movw r30,r24
 19406 803c 8289      		ldd r24,Z+18
 19407 803e 9389      		ldd r25,Z+19
 19408 8040 9C83      		std Y+4,r25
 19409 8042 8B83      		std Y+3,r24
1966:lp_solve_5.5/lp_price.c **** 
1967:lp_solve_5.5/lp_price.c ****   if(coltarget == NULL)
 19410               		.loc 1 1967 0
 19411 8044 8B81      		ldd r24,Y+3
 19412 8046 9C81      		ldd r25,Y+4
 19413 8048 892B      		or r24,r25
 19414 804a 01F4      		brne .L618
1968:lp_solve_5.5/lp_price.c ****     return( FALSE );
 19415               		.loc 1 1968 0
 19416 804c 80E0      		ldi r24,0
 19417 804e 00C0      		rjmp .L617
 19418               	.L620:
1969:lp_solve_5.5/lp_price.c **** 
1970:lp_solve_5.5/lp_price.c ****   while((i <= multi->used) && (coltarget[i] != varnr))
1971:lp_solve_5.5/lp_price.c ****     i++;
 19419               		.loc 1 1971 0
 19420 8050 8981      		ldd r24,Y+1
 19421 8052 9A81      		ldd r25,Y+2
 19422 8054 0196      		adiw r24,1
 19423 8056 9A83      		std Y+2,r25
 19424 8058 8983      		std Y+1,r24
 19425               	.L618:
1970:lp_solve_5.5/lp_price.c ****     i++;
 19426               		.loc 1 1970 0
 19427 805a 8D81      		ldd r24,Y+5
 19428 805c 9E81      		ldd r25,Y+6
 19429 805e FC01      		movw r30,r24
 19430 8060 2481      		ldd r18,Z+4
 19431 8062 3581      		ldd r19,Z+5
 19432 8064 8981      		ldd r24,Y+1
 19433 8066 9A81      		ldd r25,Y+2
 19434 8068 2817      		cp r18,r24
 19435 806a 3907      		cpc r19,r25
 19436 806c 04F0      		brlt .L619
1970:lp_solve_5.5/lp_price.c ****     i++;
 19437               		.loc 1 1970 0 is_stmt 0 discriminator 1
 19438 806e 8981      		ldd r24,Y+1
 19439 8070 9A81      		ldd r25,Y+2
 19440 8072 880F      		lsl r24
 19441 8074 991F      		rol r25
 19442 8076 2B81      		ldd r18,Y+3
 19443 8078 3C81      		ldd r19,Y+4
 19444 807a 820F      		add r24,r18
 19445 807c 931F      		adc r25,r19
 19446 807e FC01      		movw r30,r24
 19447 8080 2081      		ld r18,Z
 19448 8082 3181      		ldd r19,Z+1
 19449 8084 8F81      		ldd r24,Y+7
 19450 8086 9885      		ldd r25,Y+8
 19451 8088 2817      		cp r18,r24
 19452 808a 3907      		cpc r19,r25
 19453 808c 01F4      		brne .L620
 19454               	.L619:
1972:lp_solve_5.5/lp_price.c ****   if(i > multi->used)
 19455               		.loc 1 1972 0 is_stmt 1
 19456 808e 8D81      		ldd r24,Y+5
 19457 8090 9E81      		ldd r25,Y+6
 19458 8092 FC01      		movw r30,r24
 19459 8094 2481      		ldd r18,Z+4
 19460 8096 3581      		ldd r19,Z+5
 19461 8098 8981      		ldd r24,Y+1
 19462 809a 9A81      		ldd r25,Y+2
 19463 809c 2817      		cp r18,r24
 19464 809e 3907      		cpc r19,r25
 19465 80a0 04F4      		brge .L622
1973:lp_solve_5.5/lp_price.c ****     return( FALSE );
 19466               		.loc 1 1973 0
 19467 80a2 80E0      		ldi r24,0
 19468 80a4 00C0      		rjmp .L617
 19469               	.L623:
1974:lp_solve_5.5/lp_price.c **** 
1975:lp_solve_5.5/lp_price.c ****   for(; i < multi->used; i++)
1976:lp_solve_5.5/lp_price.c ****     coltarget[i] = coltarget[i+1];
 19470               		.loc 1 1976 0 discriminator 2
 19471 80a6 8981      		ldd r24,Y+1
 19472 80a8 9A81      		ldd r25,Y+2
 19473 80aa 880F      		lsl r24
 19474 80ac 991F      		rol r25
 19475 80ae 2B81      		ldd r18,Y+3
 19476 80b0 3C81      		ldd r19,Y+4
 19477 80b2 820F      		add r24,r18
 19478 80b4 931F      		adc r25,r19
 19479 80b6 2981      		ldd r18,Y+1
 19480 80b8 3A81      		ldd r19,Y+2
 19481 80ba 2F5F      		subi r18,-1
 19482 80bc 3F4F      		sbci r19,-1
 19483 80be 220F      		lsl r18
 19484 80c0 331F      		rol r19
 19485 80c2 4B81      		ldd r20,Y+3
 19486 80c4 5C81      		ldd r21,Y+4
 19487 80c6 240F      		add r18,r20
 19488 80c8 351F      		adc r19,r21
 19489 80ca F901      		movw r30,r18
 19490 80cc 2081      		ld r18,Z
 19491 80ce 3181      		ldd r19,Z+1
 19492 80d0 FC01      		movw r30,r24
 19493 80d2 3183      		std Z+1,r19
 19494 80d4 2083      		st Z,r18
1975:lp_solve_5.5/lp_price.c ****     coltarget[i] = coltarget[i+1];
 19495               		.loc 1 1975 0 discriminator 2
 19496 80d6 8981      		ldd r24,Y+1
 19497 80d8 9A81      		ldd r25,Y+2
 19498 80da 0196      		adiw r24,1
 19499 80dc 9A83      		std Y+2,r25
 19500 80de 8983      		std Y+1,r24
 19501               	.L622:
1975:lp_solve_5.5/lp_price.c ****     coltarget[i] = coltarget[i+1];
 19502               		.loc 1 1975 0 is_stmt 0 discriminator 1
 19503 80e0 8D81      		ldd r24,Y+5
 19504 80e2 9E81      		ldd r25,Y+6
 19505 80e4 FC01      		movw r30,r24
 19506 80e6 2481      		ldd r18,Z+4
 19507 80e8 3581      		ldd r19,Z+5
 19508 80ea 8981      		ldd r24,Y+1
 19509 80ec 9A81      		ldd r25,Y+2
 19510 80ee 8217      		cp r24,r18
 19511 80f0 9307      		cpc r25,r19
 19512 80f2 04F0      		brlt .L623
1977:lp_solve_5.5/lp_price.c ****   coltarget[0]--;
 19513               		.loc 1 1977 0 is_stmt 1
 19514 80f4 8B81      		ldd r24,Y+3
 19515 80f6 9C81      		ldd r25,Y+4
 19516 80f8 FC01      		movw r30,r24
 19517 80fa 8081      		ld r24,Z
 19518 80fc 9181      		ldd r25,Z+1
 19519 80fe 9C01      		movw r18,r24
 19520 8100 2150      		subi r18,1
 19521 8102 3109      		sbc r19,__zero_reg__
 19522 8104 8B81      		ldd r24,Y+3
 19523 8106 9C81      		ldd r25,Y+4
 19524 8108 FC01      		movw r30,r24
 19525 810a 3183      		std Z+1,r19
 19526 810c 2083      		st Z,r18
1978:lp_solve_5.5/lp_price.c ****   multi->used--;
 19527               		.loc 1 1978 0
 19528 810e 8D81      		ldd r24,Y+5
 19529 8110 9E81      		ldd r25,Y+6
 19530 8112 FC01      		movw r30,r24
 19531 8114 8481      		ldd r24,Z+4
 19532 8116 9581      		ldd r25,Z+5
 19533 8118 9C01      		movw r18,r24
 19534 811a 2150      		subi r18,1
 19535 811c 3109      		sbc r19,__zero_reg__
 19536 811e 8D81      		ldd r24,Y+5
 19537 8120 9E81      		ldd r25,Y+6
 19538 8122 FC01      		movw r30,r24
 19539 8124 3583      		std Z+5,r19
 19540 8126 2483      		std Z+4,r18
1979:lp_solve_5.5/lp_price.c ****   multi->dirty = TRUE;
 19541               		.loc 1 1979 0
 19542 8128 8D81      		ldd r24,Y+5
 19543 812a 9E81      		ldd r25,Y+6
 19544 812c 21E0      		ldi r18,lo8(1)
 19545 812e FC01      		movw r30,r24
 19546 8130 27AB      		std Z+55,r18
1980:lp_solve_5.5/lp_price.c ****   return( TRUE );
 19547               		.loc 1 1980 0
 19548 8132 81E0      		ldi r24,lo8(1)
 19549               	.L617:
 19550               	/* epilogue start */
1981:lp_solve_5.5/lp_price.c **** }
 19551               		.loc 1 1981 0
 19552 8134 2896      		adiw r28,8
 19553 8136 0FB6      		in __tmp_reg__,__SREG__
 19554 8138 F894      		cli
 19555 813a DEBF      		out __SP_H__,r29
 19556 813c 0FBE      		out __SREG__,__tmp_reg__
 19557 813e CDBF      		out __SP_L__,r28
 19558 8140 DF91      		pop r29
 19559 8142 CF91      		pop r28
 19560 8144 0895      		ret
 19561               		.cfi_endproc
 19562               	.LFE53:
 19564               		.section	.rodata
 19565               	.LC14:
 19566 0326 6D75 6C74 		.string	"multi_enteringvar: A very large Theta %g was generated (pivot %g)\n"
 19566      695F 656E 
 19566      7465 7269 
 19566      6E67 7661 
 19566      723A 2041 
 19567               		.text
 19568               	.global	multi_enteringvar
 19570               	multi_enteringvar:
 19571               	.LFB54:
1982:lp_solve_5.5/lp_price.c **** 
1983:lp_solve_5.5/lp_price.c **** STATIC int multi_enteringvar(multirec *multi, pricerec *current, int priority)
1984:lp_solve_5.5/lp_price.c **** {
 19572               		.loc 1 1984 0
 19573               		.cfi_startproc
 19574 8146 8F92      		push r8
 19575               	.LCFI356:
 19576               		.cfi_def_cfa_offset 3
 19577               		.cfi_offset 8, -2
 19578 8148 9F92      		push r9
 19579               	.LCFI357:
 19580               		.cfi_def_cfa_offset 4
 19581               		.cfi_offset 9, -3
 19582 814a AF92      		push r10
 19583               	.LCFI358:
 19584               		.cfi_def_cfa_offset 5
 19585               		.cfi_offset 10, -4
 19586 814c BF92      		push r11
 19587               	.LCFI359:
 19588               		.cfi_def_cfa_offset 6
 19589               		.cfi_offset 11, -5
 19590 814e CF92      		push r12
 19591               	.LCFI360:
 19592               		.cfi_def_cfa_offset 7
 19593               		.cfi_offset 12, -6
 19594 8150 DF92      		push r13
 19595               	.LCFI361:
 19596               		.cfi_def_cfa_offset 8
 19597               		.cfi_offset 13, -7
 19598 8152 EF92      		push r14
 19599               	.LCFI362:
 19600               		.cfi_def_cfa_offset 9
 19601               		.cfi_offset 14, -8
 19602 8154 FF92      		push r15
 19603               	.LCFI363:
 19604               		.cfi_def_cfa_offset 10
 19605               		.cfi_offset 15, -9
 19606 8156 0F93      		push r16
 19607               	.LCFI364:
 19608               		.cfi_def_cfa_offset 11
 19609               		.cfi_offset 16, -10
 19610 8158 1F93      		push r17
 19611               	.LCFI365:
 19612               		.cfi_def_cfa_offset 12
 19613               		.cfi_offset 17, -11
 19614 815a CF93      		push r28
 19615               	.LCFI366:
 19616               		.cfi_def_cfa_offset 13
 19617               		.cfi_offset 28, -12
 19618 815c DF93      		push r29
 19619               	.LCFI367:
 19620               		.cfi_def_cfa_offset 14
 19621               		.cfi_offset 29, -13
 19622 815e CDB7      		in r28,__SP_L__
 19623 8160 DEB7      		in r29,__SP_H__
 19624               	.LCFI368:
 19625               		.cfi_def_cfa_register 28
 19626 8162 AA97      		sbiw r28,42
 19627               	.LCFI369:
 19628               		.cfi_def_cfa_offset 56
 19629 8164 0FB6      		in __tmp_reg__,__SREG__
 19630 8166 F894      		cli
 19631 8168 DEBF      		out __SP_H__,r29
 19632 816a 0FBE      		out __SREG__,__tmp_reg__
 19633 816c CDBF      		out __SP_L__,r28
 19634               	/* prologue: function */
 19635               	/* frame size = 42 */
 19636               	/* stack size = 54 */
 19637               	.L__stack_usage = 54
 19638 816e 9EA3      		std Y+38,r25
 19639 8170 8DA3      		std Y+37,r24
 19640 8172 78A7      		std Y+40,r23
 19641 8174 6FA3      		std Y+39,r22
 19642 8176 5AA7      		std Y+42,r21
 19643 8178 49A7      		std Y+41,r20
1985:lp_solve_5.5/lp_price.c ****   lprec    *lp = multi->lp;
 19644               		.loc 1 1985 0
 19645 817a 8DA1      		ldd r24,Y+37
 19646 817c 9EA1      		ldd r25,Y+38
 19647 817e FC01      		movw r30,r24
 19648 8180 8081      		ld r24,Z
 19649 8182 9181      		ldd r25,Z+1
 19650 8184 988F      		std Y+24,r25
 19651 8186 8F8B      		std Y+23,r24
1986:lp_solve_5.5/lp_price.c ****   int      i = 0, bestindex, colnr;
 19652               		.loc 1 1986 0
 19653 8188 1A82      		std Y+2,__zero_reg__
 19654 818a 1982      		std Y+1,__zero_reg__
1987:lp_solve_5.5/lp_price.c ****   REAL     bound, score, bestscore = -lp->infinite;
 19655               		.loc 1 1987 0
 19656 818c 8F89      		ldd r24,Y+23
 19657 818e 988D      		ldd r25,Y+24
 19658 8190 865F      		subi r24,-10
 19659 8192 9C4F      		sbci r25,-4
 19660 8194 FC01      		movw r30,r24
 19661 8196 8081      		ld r24,Z
 19662 8198 9181      		ldd r25,Z+1
 19663 819a A281      		ldd r26,Z+2
 19664 819c B381      		ldd r27,Z+3
 19665 819e B058      		subi r27,0x80
 19666 81a0 8D83      		std Y+5,r24
 19667 81a2 9E83      		std Y+6,r25
 19668 81a4 AF83      		std Y+7,r26
 19669 81a6 B887      		std Y+8,r27
1988:lp_solve_5.5/lp_price.c ****   REAL     b1, b2, b3;
1989:lp_solve_5.5/lp_price.c ****   pricerec *candidate, *bestcand;
1990:lp_solve_5.5/lp_price.c **** 
1991:lp_solve_5.5/lp_price.c ****   /* Check that we have a candidate */
1992:lp_solve_5.5/lp_price.c ****   multi->active = bestindex = 0;
 19670               		.loc 1 1992 0
 19671 81a8 1C82      		std Y+4,__zero_reg__
 19672 81aa 1B82      		std Y+3,__zero_reg__
 19673 81ac 8DA1      		ldd r24,Y+37
 19674 81ae 9EA1      		ldd r25,Y+38
 19675 81b0 2B81      		ldd r18,Y+3
 19676 81b2 3C81      		ldd r19,Y+4
 19677 81b4 FC01      		movw r30,r24
 19678 81b6 358B      		std Z+21,r19
 19679 81b8 248B      		std Z+20,r18
1993:lp_solve_5.5/lp_price.c ****   if((multi == NULL) || (multi->used == 0))
 19680               		.loc 1 1993 0
 19681 81ba 8DA1      		ldd r24,Y+37
 19682 81bc 9EA1      		ldd r25,Y+38
 19683 81be 892B      		or r24,r25
 19684 81c0 01F0      		breq .L625
 19685               		.loc 1 1993 0 is_stmt 0 discriminator 1
 19686 81c2 8DA1      		ldd r24,Y+37
 19687 81c4 9EA1      		ldd r25,Y+38
 19688 81c6 FC01      		movw r30,r24
 19689 81c8 8481      		ldd r24,Z+4
 19690 81ca 9581      		ldd r25,Z+5
 19691 81cc 892B      		or r24,r25
 19692 81ce 01F4      		brne .L626
 19693               	.L625:
1994:lp_solve_5.5/lp_price.c ****     return( bestindex );
 19694               		.loc 1 1994 0 is_stmt 1
 19695 81d0 8B81      		ldd r24,Y+3
 19696 81d2 9C81      		ldd r25,Y+4
 19697 81d4 00C0      		rjmp .L627
 19698               	.L626:
1995:lp_solve_5.5/lp_price.c **** 
1996:lp_solve_5.5/lp_price.c ****   /* Check for pruning possibility of the B&B tree */
1997:lp_solve_5.5/lp_price.c ****   if(multi->objcheck && (lp->solutioncount > 0) &&
 19699               		.loc 1 1997 0
 19700 81d6 8DA1      		ldd r24,Y+37
 19701 81d8 9EA1      		ldd r25,Y+38
 19702 81da FC01      		movw r30,r24
 19703 81dc 86A9      		ldd r24,Z+54
 19704 81de 8823      		tst r24
 19705 81e0 01F0      		breq .L628
 19706               		.loc 1 1997 0 is_stmt 0 discriminator 1
 19707 81e2 8F89      		ldd r24,Y+23
 19708 81e4 988D      		ldd r25,Y+24
 19709 81e6 865F      		subi r24,-10
 19710 81e8 9D4F      		sbci r25,-3
 19711 81ea FC01      		movw r30,r24
 19712 81ec 8081      		ld r24,Z
 19713 81ee 9181      		ldd r25,Z+1
 19714 81f0 1816      		cp __zero_reg__,r24
 19715 81f2 1906      		cpc __zero_reg__,r25
 19716 81f4 04F4      		brge .L628
1998:lp_solve_5.5/lp_price.c ****      bb_better(lp, OF_WORKING | OF_PROJECTED, OF_TEST_WE)) {
 19717               		.loc 1 1998 0 is_stmt 1 discriminator 2
 19718 81f6 8F89      		ldd r24,Y+23
 19719 81f8 988D      		ldd r25,Y+24
 19720 81fa 44E0      		ldi r20,lo8(4)
 19721 81fc 50E0      		ldi r21,0
 19722 81fe 62E1      		ldi r22,lo8(18)
 19723 8200 70E0      		ldi r23,0
 19724 8202 0E94 0000 		call bb_better
1997:lp_solve_5.5/lp_price.c ****      bb_better(lp, OF_WORKING | OF_PROJECTED, OF_TEST_WE)) {
 19725               		.loc 1 1997 0 discriminator 2
 19726 8206 8823      		tst r24
 19727 8208 01F0      		breq .L628
1999:lp_solve_5.5/lp_price.c ****     lp->spx_status = FATHOMED;
 19728               		.loc 1 1999 0
 19729 820a 8F89      		ldd r24,Y+23
 19730 820c 988D      		ldd r25,Y+24
 19731 820e 8A5F      		subi r24,-6
 19732 8210 9D4F      		sbci r25,-3
 19733 8212 2EE0      		ldi r18,lo8(14)
 19734 8214 30E0      		ldi r19,0
 19735 8216 FC01      		movw r30,r24
 19736 8218 3183      		std Z+1,r19
 19737 821a 2083      		st Z,r18
2000:lp_solve_5.5/lp_price.c ****     return( bestindex );
 19738               		.loc 1 2000 0
 19739 821c 8B81      		ldd r24,Y+3
 19740 821e 9C81      		ldd r25,Y+4
 19741 8220 00C0      		rjmp .L627
 19742               	.L628:
2001:lp_solve_5.5/lp_price.c ****   }
2002:lp_solve_5.5/lp_price.c **** 
2003:lp_solve_5.5/lp_price.c ****   /* Check the trivial case */
2004:lp_solve_5.5/lp_price.c ****   if(multi->used == 1) {
 19743               		.loc 1 2004 0
 19744 8222 8DA1      		ldd r24,Y+37
 19745 8224 9EA1      		ldd r25,Y+38
 19746 8226 FC01      		movw r30,r24
 19747 8228 8481      		ldd r24,Z+4
 19748 822a 9581      		ldd r25,Z+5
 19749 822c 0197      		sbiw r24,1
 19750 822e 01F4      		brne .L629
2005:lp_solve_5.5/lp_price.c ****     bestcand = (pricerec *) (multi->sortedList[bestindex].pvoidreal.ptr);
 19751               		.loc 1 2005 0
 19752 8230 8DA1      		ldd r24,Y+37
 19753 8232 9EA1      		ldd r25,Y+38
 19754 8234 FC01      		movw r30,r24
 19755 8236 2485      		ldd r18,Z+12
 19756 8238 3585      		ldd r19,Z+13
 19757 823a 8B81      		ldd r24,Y+3
 19758 823c 9C81      		ldd r25,Y+4
 19759 823e 880F      		lsl r24
 19760 8240 991F      		rol r25
 19761 8242 880F      		lsl r24
 19762 8244 991F      		rol r25
 19763 8246 880F      		lsl r24
 19764 8248 991F      		rol r25
 19765 824a 820F      		add r24,r18
 19766 824c 931F      		adc r25,r19
 19767 824e FC01      		movw r30,r24
 19768 8250 8081      		ld r24,Z
 19769 8252 9181      		ldd r25,Z+1
 19770 8254 9E8B      		std Y+22,r25
 19771 8256 8D8B      		std Y+21,r24
2006:lp_solve_5.5/lp_price.c ****     goto Finish;
 19772               		.loc 1 2006 0
 19773 8258 00C0      		rjmp .L630
 19774               	.L629:
2007:lp_solve_5.5/lp_price.c ****   }
2008:lp_solve_5.5/lp_price.c **** 
2009:lp_solve_5.5/lp_price.c ****   /* Set priority weights */
2010:lp_solve_5.5/lp_price.c **** Redo:
2011:lp_solve_5.5/lp_price.c ****   switch(priority) {
 19775               		.loc 1 2011 0
 19776 825a 89A5      		ldd r24,Y+41
 19777 825c 9AA5      		ldd r25,Y+42
 19778 825e 8230      		cpi r24,2
 19779 8260 9105      		cpc r25,__zero_reg__
 19780 8262 01F4      		brne .+2
 19781 8264 00C0      		rjmp .L632
 19782 8266 8330      		cpi r24,3
 19783 8268 9105      		cpc r25,__zero_reg__
 19784 826a 04F4      		brge .L633
 19785 826c 0097      		sbiw r24,0
 19786 826e 01F0      		breq .L634
 19787 8270 0197      		sbiw r24,1
 19788 8272 01F0      		breq .L635
 19789 8274 00C0      		rjmp .L631
 19790               	.L633:
 19791 8276 8330      		cpi r24,3
 19792 8278 9105      		cpc r25,__zero_reg__
 19793 827a 01F4      		brne .+2
 19794 827c 00C0      		rjmp .L636
 19795 827e 0497      		sbiw r24,4
 19796 8280 01F4      		brne .+2
 19797 8282 00C0      		rjmp .L637
 19798 8284 00C0      		rjmp .L631
 19799               	.L634:
2012:lp_solve_5.5/lp_price.c ****     case 0:  b1 = 0.0, b2 = 0.0, b3 = 1.0;          /* Only OF          */
 19800               		.loc 1 2012 0
 19801 8286 1986      		std Y+9,__zero_reg__
 19802 8288 1A86      		std Y+10,__zero_reg__
 19803 828a 1B86      		std Y+11,__zero_reg__
 19804 828c 1C86      		std Y+12,__zero_reg__
 19805 828e 1D86      		std Y+13,__zero_reg__
 19806 8290 1E86      		std Y+14,__zero_reg__
 19807 8292 1F86      		std Y+15,__zero_reg__
 19808 8294 188A      		std Y+16,__zero_reg__
 19809 8296 80E0      		ldi r24,0
 19810 8298 90E0      		ldi r25,0
 19811 829a A0E8      		ldi r26,lo8(-128)
 19812 829c BFE3      		ldi r27,lo8(63)
 19813 829e 898B      		std Y+17,r24
 19814 82a0 9A8B      		std Y+18,r25
 19815 82a2 AB8B      		std Y+19,r26
 19816 82a4 BC8B      		std Y+20,r27
2013:lp_solve_5.5/lp_price.c ****               bestindex = multi->used - 2;   break;
 19817               		.loc 1 2013 0
 19818 82a6 8DA1      		ldd r24,Y+37
 19819 82a8 9EA1      		ldd r25,Y+38
 19820 82aa FC01      		movw r30,r24
 19821 82ac 8481      		ldd r24,Z+4
 19822 82ae 9581      		ldd r25,Z+5
 19823 82b0 0297      		sbiw r24,2
 19824 82b2 9C83      		std Y+4,r25
 19825 82b4 8B83      		std Y+3,r24
 19826 82b6 00C0      		rjmp .L638
 19827               	.L635:
2014:lp_solve_5.5/lp_price.c ****     case 1:  b1 = 0.2, b2 = 0.3, b3 = 0.5; break;  /* Emphasize OF     */
 19828               		.loc 1 2014 0
 19829 82b8 8DEC      		ldi r24,lo8(-51)
 19830 82ba 9CEC      		ldi r25,lo8(-52)
 19831 82bc ACE4      		ldi r26,lo8(76)
 19832 82be BEE3      		ldi r27,lo8(62)
 19833 82c0 8987      		std Y+9,r24
 19834 82c2 9A87      		std Y+10,r25
 19835 82c4 AB87      		std Y+11,r26
 19836 82c6 BC87      		std Y+12,r27
 19837 82c8 8AE9      		ldi r24,lo8(-102)
 19838 82ca 99E9      		ldi r25,lo8(-103)
 19839 82cc A9E9      		ldi r26,lo8(-103)
 19840 82ce BEE3      		ldi r27,lo8(62)
 19841 82d0 8D87      		std Y+13,r24
 19842 82d2 9E87      		std Y+14,r25
 19843 82d4 AF87      		std Y+15,r26
 19844 82d6 B88B      		std Y+16,r27
 19845 82d8 80E0      		ldi r24,0
 19846 82da 90E0      		ldi r25,0
 19847 82dc A0E0      		ldi r26,0
 19848 82de BFE3      		ldi r27,lo8(63)
 19849 82e0 898B      		std Y+17,r24
 19850 82e2 9A8B      		std Y+18,r25
 19851 82e4 AB8B      		std Y+19,r26
 19852 82e6 BC8B      		std Y+20,r27
 19853 82e8 00C0      		rjmp .L638
 19854               	.L632:
2015:lp_solve_5.5/lp_price.c ****     case 2:  b1 = 0.3, b2 = 0.5, b3 = 0.2; break;  /* Emphasize bound  */
 19855               		.loc 1 2015 0
 19856 82ea 8AE9      		ldi r24,lo8(-102)
 19857 82ec 99E9      		ldi r25,lo8(-103)
 19858 82ee A9E9      		ldi r26,lo8(-103)
 19859 82f0 BEE3      		ldi r27,lo8(62)
 19860 82f2 8987      		std Y+9,r24
 19861 82f4 9A87      		std Y+10,r25
 19862 82f6 AB87      		std Y+11,r26
 19863 82f8 BC87      		std Y+12,r27
 19864 82fa 80E0      		ldi r24,0
 19865 82fc 90E0      		ldi r25,0
 19866 82fe A0E0      		ldi r26,0
 19867 8300 BFE3      		ldi r27,lo8(63)
 19868 8302 8D87      		std Y+13,r24
 19869 8304 9E87      		std Y+14,r25
 19870 8306 AF87      		std Y+15,r26
 19871 8308 B88B      		std Y+16,r27
 19872 830a 8DEC      		ldi r24,lo8(-51)
 19873 830c 9CEC      		ldi r25,lo8(-52)
 19874 830e ACE4      		ldi r26,lo8(76)
 19875 8310 BEE3      		ldi r27,lo8(62)
 19876 8312 898B      		std Y+17,r24
 19877 8314 9A8B      		std Y+18,r25
 19878 8316 AB8B      		std Y+19,r26
 19879 8318 BC8B      		std Y+20,r27
 19880 831a 00C0      		rjmp .L638
 19881               	.L636:
2016:lp_solve_5.5/lp_price.c ****     case 3:  b1 = 0.6, b2 = 0.2, b3 = 0.2; break;  /* Emphasize pivot  */
 19882               		.loc 1 2016 0
 19883 831c 8AE9      		ldi r24,lo8(-102)
 19884 831e 99E9      		ldi r25,lo8(-103)
 19885 8320 A9E1      		ldi r26,lo8(25)
 19886 8322 BFE3      		ldi r27,lo8(63)
 19887 8324 8987      		std Y+9,r24
 19888 8326 9A87      		std Y+10,r25
 19889 8328 AB87      		std Y+11,r26
 19890 832a BC87      		std Y+12,r27
 19891 832c 8DEC      		ldi r24,lo8(-51)
 19892 832e 9CEC      		ldi r25,lo8(-52)
 19893 8330 ACE4      		ldi r26,lo8(76)
 19894 8332 BEE3      		ldi r27,lo8(62)
 19895 8334 8D87      		std Y+13,r24
 19896 8336 9E87      		std Y+14,r25
 19897 8338 AF87      		std Y+15,r26
 19898 833a B88B      		std Y+16,r27
 19899 833c 8DEC      		ldi r24,lo8(-51)
 19900 833e 9CEC      		ldi r25,lo8(-52)
 19901 8340 ACE4      		ldi r26,lo8(76)
 19902 8342 BEE3      		ldi r27,lo8(62)
 19903 8344 898B      		std Y+17,r24
 19904 8346 9A8B      		std Y+18,r25
 19905 8348 AB8B      		std Y+19,r26
 19906 834a BC8B      		std Y+20,r27
 19907 834c 00C0      		rjmp .L638
 19908               	.L637:
2017:lp_solve_5.5/lp_price.c ****     case 4:  b1 = 1.0, b2 = 0.0, b3 = 0.0; break;  /* Only pivot       */
 19909               		.loc 1 2017 0
 19910 834e 80E0      		ldi r24,0
 19911 8350 90E0      		ldi r25,0
 19912 8352 A0E8      		ldi r26,lo8(-128)
 19913 8354 BFE3      		ldi r27,lo8(63)
 19914 8356 8987      		std Y+9,r24
 19915 8358 9A87      		std Y+10,r25
 19916 835a AB87      		std Y+11,r26
 19917 835c BC87      		std Y+12,r27
 19918 835e 1D86      		std Y+13,__zero_reg__
 19919 8360 1E86      		std Y+14,__zero_reg__
 19920 8362 1F86      		std Y+15,__zero_reg__
 19921 8364 188A      		std Y+16,__zero_reg__
 19922 8366 198A      		std Y+17,__zero_reg__
 19923 8368 1A8A      		std Y+18,__zero_reg__
 19924 836a 1B8A      		std Y+19,__zero_reg__
 19925 836c 1C8A      		std Y+20,__zero_reg__
 19926 836e 00C0      		rjmp .L638
 19927               	.L631:
2018:lp_solve_5.5/lp_price.c ****     default: b1 = 0.4, b2 = 0.2, b3 = 0.4;         /* Balanced default */
 19928               		.loc 1 2018 0
 19929 8370 8DEC      		ldi r24,lo8(-51)
 19930 8372 9CEC      		ldi r25,lo8(-52)
 19931 8374 ACEC      		ldi r26,lo8(-52)
 19932 8376 BEE3      		ldi r27,lo8(62)
 19933 8378 8987      		std Y+9,r24
 19934 837a 9A87      		std Y+10,r25
 19935 837c AB87      		std Y+11,r26
 19936 837e BC87      		std Y+12,r27
 19937 8380 8DEC      		ldi r24,lo8(-51)
 19938 8382 9CEC      		ldi r25,lo8(-52)
 19939 8384 ACE4      		ldi r26,lo8(76)
 19940 8386 BEE3      		ldi r27,lo8(62)
 19941 8388 8D87      		std Y+13,r24
 19942 838a 9E87      		std Y+14,r25
 19943 838c AF87      		std Y+15,r26
 19944 838e B88B      		std Y+16,r27
 19945 8390 8DEC      		ldi r24,lo8(-51)
 19946 8392 9CEC      		ldi r25,lo8(-52)
 19947 8394 ACEC      		ldi r26,lo8(-52)
 19948 8396 BEE3      		ldi r27,lo8(62)
 19949 8398 898B      		std Y+17,r24
 19950 839a 9A8B      		std Y+18,r25
 19951 839c AB8B      		std Y+19,r26
 19952 839e BC8B      		std Y+20,r27
 19953               	.L638:
2019:lp_solve_5.5/lp_price.c ****   }
2020:lp_solve_5.5/lp_price.c ****   bestcand = (pricerec *) (multi->sortedList[bestindex].pvoidreal.ptr);
 19954               		.loc 1 2020 0
 19955 83a0 8DA1      		ldd r24,Y+37
 19956 83a2 9EA1      		ldd r25,Y+38
 19957 83a4 FC01      		movw r30,r24
 19958 83a6 2485      		ldd r18,Z+12
 19959 83a8 3585      		ldd r19,Z+13
 19960 83aa 8B81      		ldd r24,Y+3
 19961 83ac 9C81      		ldd r25,Y+4
 19962 83ae 880F      		lsl r24
 19963 83b0 991F      		rol r25
 19964 83b2 880F      		lsl r24
 19965 83b4 991F      		rol r25
 19966 83b6 880F      		lsl r24
 19967 83b8 991F      		rol r25
 19968 83ba 820F      		add r24,r18
 19969 83bc 931F      		adc r25,r19
 19970 83be FC01      		movw r30,r24
 19971 83c0 8081      		ld r24,Z
 19972 83c2 9181      		ldd r25,Z+1
 19973 83c4 9E8B      		std Y+22,r25
 19974 83c6 8D8B      		std Y+21,r24
2021:lp_solve_5.5/lp_price.c **** 
2022:lp_solve_5.5/lp_price.c ****   /* Loop over all candidates to get the best entering candidate;
2023:lp_solve_5.5/lp_price.c ****      start at the end to try to maximize the chain length */
2024:lp_solve_5.5/lp_price.c ****   for(i = multi->used - 1; i >= 0; i--) {
 19975               		.loc 1 2024 0
 19976 83c8 8DA1      		ldd r24,Y+37
 19977 83ca 9EA1      		ldd r25,Y+38
 19978 83cc FC01      		movw r30,r24
 19979 83ce 8481      		ldd r24,Z+4
 19980 83d0 9581      		ldd r25,Z+5
 19981 83d2 0197      		sbiw r24,1
 19982 83d4 9A83      		std Y+2,r25
 19983 83d6 8983      		std Y+1,r24
 19984 83d8 00C0      		rjmp .L639
 19985               	.L642:
2025:lp_solve_5.5/lp_price.c ****     candidate = (pricerec *) (multi->sortedList[i].pvoidreal.ptr);
 19986               		.loc 1 2025 0
 19987 83da 8DA1      		ldd r24,Y+37
 19988 83dc 9EA1      		ldd r25,Y+38
 19989 83de FC01      		movw r30,r24
 19990 83e0 2485      		ldd r18,Z+12
 19991 83e2 3585      		ldd r19,Z+13
 19992 83e4 8981      		ldd r24,Y+1
 19993 83e6 9A81      		ldd r25,Y+2
 19994 83e8 880F      		lsl r24
 19995 83ea 991F      		rol r25
 19996 83ec 880F      		lsl r24
 19997 83ee 991F      		rol r25
 19998 83f0 880F      		lsl r24
 19999 83f2 991F      		rol r25
 20000 83f4 820F      		add r24,r18
 20001 83f6 931F      		adc r25,r19
 20002 83f8 FC01      		movw r30,r24
 20003 83fa 8081      		ld r24,Z
 20004 83fc 9181      		ldd r25,Z+1
 20005 83fe 9A8F      		std Y+26,r25
 20006 8400 898F      		std Y+25,r24
2026:lp_solve_5.5/lp_price.c ****     colnr = candidate->varno;
 20007               		.loc 1 2026 0
 20008 8402 898D      		ldd r24,Y+25
 20009 8404 9A8D      		ldd r25,Y+26
 20010 8406 FC01      		movw r30,r24
 20011 8408 8485      		ldd r24,Z+12
 20012 840a 9585      		ldd r25,Z+13
 20013 840c 9C8F      		std Y+28,r25
 20014 840e 8B8F      		std Y+27,r24
2027:lp_solve_5.5/lp_price.c ****     bound = lp->upbo[colnr];
 20015               		.loc 1 2027 0
 20016 8410 8F89      		ldd r24,Y+23
 20017 8412 988D      		ldd r25,Y+24
 20018 8414 8055      		subi r24,80
 20019 8416 9D4F      		sbci r25,-3
 20020 8418 FC01      		movw r30,r24
 20021 841a 2081      		ld r18,Z
 20022 841c 3181      		ldd r19,Z+1
 20023 841e 8B8D      		ldd r24,Y+27
 20024 8420 9C8D      		ldd r25,Y+28
 20025 8422 880F      		lsl r24
 20026 8424 991F      		rol r25
 20027 8426 880F      		lsl r24
 20028 8428 991F      		rol r25
 20029 842a 820F      		add r24,r18
 20030 842c 931F      		adc r25,r19
 20031 842e FC01      		movw r30,r24
 20032 8430 8081      		ld r24,Z
 20033 8432 9181      		ldd r25,Z+1
 20034 8434 A281      		ldd r26,Z+2
 20035 8436 B381      		ldd r27,Z+3
 20036 8438 8D8F      		std Y+29,r24
 20037 843a 9E8F      		std Y+30,r25
 20038 843c AF8F      		std Y+31,r26
 20039 843e B8A3      		std Y+32,r27
2028:lp_solve_5.5/lp_price.c ****     score = fabs(candidate->pivot) / multi->maxpivot;
 20040               		.loc 1 2028 0
 20041 8440 898D      		ldd r24,Y+25
 20042 8442 9A8D      		ldd r25,Y+26
 20043 8444 FC01      		movw r30,r24
 20044 8446 8481      		ldd r24,Z+4
 20045 8448 9581      		ldd r25,Z+5
 20046 844a A681      		ldd r26,Z+6
 20047 844c B781      		ldd r27,Z+7
 20048 844e BF77      		andi r27,0x7f
 20049 8450 2DA1      		ldd r18,Y+37
 20050 8452 3EA1      		ldd r19,Y+38
 20051 8454 F901      		movw r30,r18
 20052 8456 24A5      		ldd r18,Z+44
 20053 8458 35A5      		ldd r19,Z+45
 20054 845a 46A5      		ldd r20,Z+46
 20055 845c 57A5      		ldd r21,Z+47
 20056 845e BC01      		movw r22,r24
 20057 8460 CD01      		movw r24,r26
 20058 8462 0E94 0000 		call __divsf3
 20059 8466 DC01      		movw r26,r24
 20060 8468 CB01      		movw r24,r22
 20061 846a 89A3      		std Y+33,r24
 20062 846c 9AA3      		std Y+34,r25
 20063 846e ABA3      		std Y+35,r26
 20064 8470 BCA3      		std Y+36,r27
2029:lp_solve_5.5/lp_price.c ****     score = pow(1.0 + score                           , b1) *
 20065               		.loc 1 2029 0
 20066 8472 20E0      		ldi r18,0
 20067 8474 30E0      		ldi r19,0
 20068 8476 40E8      		ldi r20,lo8(-128)
 20069 8478 5FE3      		ldi r21,lo8(63)
 20070 847a 69A1      		ldd r22,Y+33
 20071 847c 7AA1      		ldd r23,Y+34
 20072 847e 8BA1      		ldd r24,Y+35
 20073 8480 9CA1      		ldd r25,Y+36
 20074 8482 0E94 0000 		call __addsf3
 20075 8486 DC01      		movw r26,r24
 20076 8488 CB01      		movw r24,r22
 20077 848a 7C01      		movw r14,r24
 20078 848c 8D01      		movw r16,r26
 20079 848e 8985      		ldd r24,Y+9
 20080 8490 9A85      		ldd r25,Y+10
 20081 8492 AB85      		ldd r26,Y+11
 20082 8494 BC85      		ldd r27,Y+12
 20083 8496 9C01      		movw r18,r24
 20084 8498 AD01      		movw r20,r26
 20085 849a C801      		movw r24,r16
 20086 849c B701      		movw r22,r14
 20087 849e 0E94 0000 		call pow
 20088 84a2 6B01      		movw r12,r22
 20089 84a4 7C01      		movw r14,r24
2030:lp_solve_5.5/lp_price.c ****             pow(1.0 + log(bound / multi->maxbound + 1), b2) *
 20090               		.loc 1 2030 0
 20091 84a6 8DA1      		ldd r24,Y+37
 20092 84a8 9EA1      		ldd r25,Y+38
 20093 84aa FC01      		movw r30,r24
 20094 84ac 80A9      		ldd r24,Z+48
 20095 84ae 91A9      		ldd r25,Z+49
 20096 84b0 A2A9      		ldd r26,Z+50
 20097 84b2 B3A9      		ldd r27,Z+51
 20098 84b4 9C01      		movw r18,r24
 20099 84b6 AD01      		movw r20,r26
 20100 84b8 6D8D      		ldd r22,Y+29
 20101 84ba 7E8D      		ldd r23,Y+30
 20102 84bc 8F8D      		ldd r24,Y+31
 20103 84be 98A1      		ldd r25,Y+32
 20104 84c0 0E94 0000 		call __divsf3
 20105 84c4 DC01      		movw r26,r24
 20106 84c6 CB01      		movw r24,r22
 20107 84c8 20E0      		ldi r18,0
 20108 84ca 30E0      		ldi r19,0
 20109 84cc 40E8      		ldi r20,lo8(-128)
 20110 84ce 5FE3      		ldi r21,lo8(63)
 20111 84d0 BC01      		movw r22,r24
 20112 84d2 CD01      		movw r24,r26
 20113 84d4 0E94 0000 		call __addsf3
 20114 84d8 DC01      		movw r26,r24
 20115 84da CB01      		movw r24,r22
 20116 84dc BC01      		movw r22,r24
 20117 84de CD01      		movw r24,r26
 20118 84e0 0E94 0000 		call log
 20119 84e4 DC01      		movw r26,r24
 20120 84e6 CB01      		movw r24,r22
 20121 84e8 20E0      		ldi r18,0
 20122 84ea 30E0      		ldi r19,0
 20123 84ec 40E8      		ldi r20,lo8(-128)
 20124 84ee 5FE3      		ldi r21,lo8(63)
 20125 84f0 BC01      		movw r22,r24
 20126 84f2 CD01      		movw r24,r26
 20127 84f4 0E94 0000 		call __addsf3
 20128 84f8 DC01      		movw r26,r24
 20129 84fa CB01      		movw r24,r22
 20130 84fc 4C01      		movw r8,r24
 20131 84fe 5D01      		movw r10,r26
 20132 8500 8D85      		ldd r24,Y+13
 20133 8502 9E85      		ldd r25,Y+14
 20134 8504 AF85      		ldd r26,Y+15
 20135 8506 B889      		ldd r27,Y+16
 20136 8508 9C01      		movw r18,r24
 20137 850a AD01      		movw r20,r26
 20138 850c C501      		movw r24,r10
 20139 850e B401      		movw r22,r8
 20140 8510 0E94 0000 		call pow
 20141 8514 DC01      		movw r26,r24
 20142 8516 CB01      		movw r24,r22
2029:lp_solve_5.5/lp_price.c ****     score = pow(1.0 + score                           , b1) *
 20143               		.loc 1 2029 0
 20144 8518 9C01      		movw r18,r24
 20145 851a AD01      		movw r20,r26
 20146 851c C701      		movw r24,r14
 20147 851e B601      		movw r22,r12
 20148 8520 0E94 0000 		call __mulsf3
 20149 8524 DC01      		movw r26,r24
 20150 8526 CB01      		movw r24,r22
 20151 8528 6C01      		movw r12,r24
 20152 852a 7D01      		movw r14,r26
2031:lp_solve_5.5/lp_price.c ****             pow(1.0 + (REAL) i / multi->used          , b3);
 20153               		.loc 1 2031 0
 20154 852c 8981      		ldd r24,Y+1
 20155 852e 9A81      		ldd r25,Y+2
 20156 8530 092E      		mov __tmp_reg__,r25
 20157 8532 000C      		lsl r0
 20158 8534 AA0B      		sbc r26,r26
 20159 8536 BB0B      		sbc r27,r27
 20160 8538 BC01      		movw r22,r24
 20161 853a CD01      		movw r24,r26
 20162 853c 0E94 0000 		call __floatsisf
 20163 8540 4B01      		movw r8,r22
 20164 8542 5C01      		movw r10,r24
 20165 8544 8DA1      		ldd r24,Y+37
 20166 8546 9EA1      		ldd r25,Y+38
 20167 8548 FC01      		movw r30,r24
 20168 854a 8481      		ldd r24,Z+4
 20169 854c 9581      		ldd r25,Z+5
 20170 854e 092E      		mov __tmp_reg__,r25
 20171 8550 000C      		lsl r0
 20172 8552 AA0B      		sbc r26,r26
 20173 8554 BB0B      		sbc r27,r27
 20174 8556 BC01      		movw r22,r24
 20175 8558 CD01      		movw r24,r26
 20176 855a 0E94 0000 		call __floatsisf
 20177 855e DC01      		movw r26,r24
 20178 8560 CB01      		movw r24,r22
 20179 8562 9C01      		movw r18,r24
 20180 8564 AD01      		movw r20,r26
 20181 8566 C501      		movw r24,r10
 20182 8568 B401      		movw r22,r8
 20183 856a 0E94 0000 		call __divsf3
 20184 856e DC01      		movw r26,r24
 20185 8570 CB01      		movw r24,r22
 20186 8572 20E0      		ldi r18,0
 20187 8574 30E0      		ldi r19,0
 20188 8576 40E8      		ldi r20,lo8(-128)
 20189 8578 5FE3      		ldi r21,lo8(63)
 20190 857a BC01      		movw r22,r24
 20191 857c CD01      		movw r24,r26
 20192 857e 0E94 0000 		call __addsf3
 20193 8582 DC01      		movw r26,r24
 20194 8584 CB01      		movw r24,r22
 20195 8586 4C01      		movw r8,r24
 20196 8588 5D01      		movw r10,r26
 20197 858a 8989      		ldd r24,Y+17
 20198 858c 9A89      		ldd r25,Y+18
 20199 858e AB89      		ldd r26,Y+19
 20200 8590 BC89      		ldd r27,Y+20
 20201 8592 9C01      		movw r18,r24
 20202 8594 AD01      		movw r20,r26
 20203 8596 C501      		movw r24,r10
 20204 8598 B401      		movw r22,r8
 20205 859a 0E94 0000 		call pow
 20206 859e DC01      		movw r26,r24
 20207 85a0 CB01      		movw r24,r22
2029:lp_solve_5.5/lp_price.c ****     score = pow(1.0 + score                           , b1) *
 20208               		.loc 1 2029 0
 20209 85a2 9C01      		movw r18,r24
 20210 85a4 AD01      		movw r20,r26
 20211 85a6 C701      		movw r24,r14
 20212 85a8 B601      		movw r22,r12
 20213 85aa 0E94 0000 		call __mulsf3
 20214 85ae DC01      		movw r26,r24
 20215 85b0 CB01      		movw r24,r22
 20216 85b2 89A3      		std Y+33,r24
 20217 85b4 9AA3      		std Y+34,r25
 20218 85b6 ABA3      		std Y+35,r26
 20219 85b8 BCA3      		std Y+36,r27
2032:lp_solve_5.5/lp_price.c ****     if(score > bestscore) {
 20220               		.loc 1 2032 0
 20221 85ba 2D81      		ldd r18,Y+5
 20222 85bc 3E81      		ldd r19,Y+6
 20223 85be 4F81      		ldd r20,Y+7
 20224 85c0 5885      		ldd r21,Y+8
 20225 85c2 69A1      		ldd r22,Y+33
 20226 85c4 7AA1      		ldd r23,Y+34
 20227 85c6 8BA1      		ldd r24,Y+35
 20228 85c8 9CA1      		ldd r25,Y+36
 20229 85ca 0E94 0000 		call __gtsf2
 20230 85ce 1816      		cp __zero_reg__,r24
 20231 85d0 04F4      		brge .L640
2033:lp_solve_5.5/lp_price.c ****       bestscore = score;
 20232               		.loc 1 2033 0
 20233 85d2 89A1      		ldd r24,Y+33
 20234 85d4 9AA1      		ldd r25,Y+34
 20235 85d6 ABA1      		ldd r26,Y+35
 20236 85d8 BCA1      		ldd r27,Y+36
 20237 85da 8D83      		std Y+5,r24
 20238 85dc 9E83      		std Y+6,r25
 20239 85de AF83      		std Y+7,r26
 20240 85e0 B887      		std Y+8,r27
2034:lp_solve_5.5/lp_price.c ****       bestindex = i;
 20241               		.loc 1 2034 0
 20242 85e2 8981      		ldd r24,Y+1
 20243 85e4 9A81      		ldd r25,Y+2
 20244 85e6 9C83      		std Y+4,r25
 20245 85e8 8B83      		std Y+3,r24
2035:lp_solve_5.5/lp_price.c ****       bestcand  = candidate;
 20246               		.loc 1 2035 0
 20247 85ea 898D      		ldd r24,Y+25
 20248 85ec 9A8D      		ldd r25,Y+26
 20249 85ee 9E8B      		std Y+22,r25
 20250 85f0 8D8B      		std Y+21,r24
 20251               	.L640:
2024:lp_solve_5.5/lp_price.c ****     candidate = (pricerec *) (multi->sortedList[i].pvoidreal.ptr);
 20252               		.loc 1 2024 0 discriminator 2
 20253 85f2 8981      		ldd r24,Y+1
 20254 85f4 9A81      		ldd r25,Y+2
 20255 85f6 0197      		sbiw r24,1
 20256 85f8 9A83      		std Y+2,r25
 20257 85fa 8983      		std Y+1,r24
 20258               	.L639:
2024:lp_solve_5.5/lp_price.c ****     candidate = (pricerec *) (multi->sortedList[i].pvoidreal.ptr);
 20259               		.loc 1 2024 0 is_stmt 0 discriminator 1
 20260 85fc 8981      		ldd r24,Y+1
 20261 85fe 9A81      		ldd r25,Y+2
 20262 8600 9923      		tst r25
 20263 8602 04F0      		brlt .+2
 20264 8604 00C0      		rjmp .L642
2036:lp_solve_5.5/lp_price.c ****     }
2037:lp_solve_5.5/lp_price.c ****   }
2038:lp_solve_5.5/lp_price.c **** 
2039:lp_solve_5.5/lp_price.c ****   /* Do pivot protection */
2040:lp_solve_5.5/lp_price.c ****   if((priority < 4) && (fabs(bestcand->pivot) < lp->epssolution)) {
 20265               		.loc 1 2040 0 is_stmt 1
 20266 8606 89A5      		ldd r24,Y+41
 20267 8608 9AA5      		ldd r25,Y+42
 20268 860a 0497      		sbiw r24,4
 20269 860c 04F4      		brge .L630
 20270               		.loc 1 2040 0 is_stmt 0 discriminator 1
 20271 860e 8D89      		ldd r24,Y+21
 20272 8610 9E89      		ldd r25,Y+22
 20273 8612 FC01      		movw r30,r24
 20274 8614 8481      		ldd r24,Z+4
 20275 8616 9581      		ldd r25,Z+5
 20276 8618 A681      		ldd r26,Z+6
 20277 861a B781      		ldd r27,Z+7
 20278 861c BF77      		andi r27,0x7f
 20279 861e 2F89      		ldd r18,Y+23
 20280 8620 388D      		ldd r19,Y+24
 20281 8622 265D      		subi r18,-42
 20282 8624 3C4F      		sbci r19,-4
 20283 8626 F901      		movw r30,r18
 20284 8628 2081      		ld r18,Z
 20285 862a 3181      		ldd r19,Z+1
 20286 862c 4281      		ldd r20,Z+2
 20287 862e 5381      		ldd r21,Z+3
 20288 8630 BC01      		movw r22,r24
 20289 8632 CD01      		movw r24,r26
 20290 8634 0E94 0000 		call __ltsf2
 20291 8638 8823      		tst r24
 20292 863a 04F4      		brge .L630
2041:lp_solve_5.5/lp_price.c ****     bestindex = 0;
 20293               		.loc 1 2041 0 is_stmt 1
 20294 863c 1C82      		std Y+4,__zero_reg__
 20295 863e 1B82      		std Y+3,__zero_reg__
2042:lp_solve_5.5/lp_price.c ****     priority++;
 20296               		.loc 1 2042 0
 20297 8640 89A5      		ldd r24,Y+41
 20298 8642 9AA5      		ldd r25,Y+42
 20299 8644 0196      		adiw r24,1
 20300 8646 9AA7      		std Y+42,r25
 20301 8648 89A7      		std Y+41,r24
2043:lp_solve_5.5/lp_price.c ****     goto Redo;
 20302               		.loc 1 2043 0
 20303 864a 00C0      		rjmp .L629
 20304               	.L630:
2044:lp_solve_5.5/lp_price.c ****   }
2045:lp_solve_5.5/lp_price.c **** 
2046:lp_solve_5.5/lp_price.c **** Finish:
2047:lp_solve_5.5/lp_price.c ****   /* Make sure we shrink the list and update */
2048:lp_solve_5.5/lp_price.c ****   multi->active = colnr = bestcand->varno;
 20305               		.loc 1 2048 0
 20306 864c 8D89      		ldd r24,Y+21
 20307 864e 9E89      		ldd r25,Y+22
 20308 8650 FC01      		movw r30,r24
 20309 8652 8485      		ldd r24,Z+12
 20310 8654 9585      		ldd r25,Z+13
 20311 8656 9C8F      		std Y+28,r25
 20312 8658 8B8F      		std Y+27,r24
 20313 865a 8DA1      		ldd r24,Y+37
 20314 865c 9EA1      		ldd r25,Y+38
 20315 865e 2B8D      		ldd r18,Y+27
 20316 8660 3C8D      		ldd r19,Y+28
 20317 8662 FC01      		movw r30,r24
 20318 8664 358B      		std Z+21,r19
 20319 8666 248B      		std Z+20,r18
2049:lp_solve_5.5/lp_price.c ****   if(bestindex < multi->used - 1) {
 20320               		.loc 1 2049 0
 20321 8668 8DA1      		ldd r24,Y+37
 20322 866a 9EA1      		ldd r25,Y+38
 20323 866c FC01      		movw r30,r24
 20324 866e 8481      		ldd r24,Z+4
 20325 8670 9581      		ldd r25,Z+5
 20326 8672 9C01      		movw r18,r24
 20327 8674 2150      		subi r18,1
 20328 8676 3109      		sbc r19,__zero_reg__
 20329 8678 8B81      		ldd r24,Y+3
 20330 867a 9C81      		ldd r25,Y+4
 20331 867c 8217      		cp r24,r18
 20332 867e 9307      		cpc r25,r19
 20333 8680 04F4      		brge .L644
2050:lp_solve_5.5/lp_price.c **** #if 0
2051:lp_solve_5.5/lp_price.c **** /*    if(lp->upbo[colnr] >= lp->infinite) */
2052:lp_solve_5.5/lp_price.c ****     QS_swap(multi->sortedList, bestindex, multi->used-1);
2053:lp_solve_5.5/lp_price.c ****     multi_recompute(multi, bestindex, (bestcand->isdual == AUTOMATIC), TRUE);
2054:lp_solve_5.5/lp_price.c **** #else
2055:lp_solve_5.5/lp_price.c ****     multi->used = i + 1;
 20334               		.loc 1 2055 0
 20335 8682 8981      		ldd r24,Y+1
 20336 8684 9A81      		ldd r25,Y+2
 20337 8686 9C01      		movw r18,r24
 20338 8688 2F5F      		subi r18,-1
 20339 868a 3F4F      		sbci r19,-1
 20340 868c 8DA1      		ldd r24,Y+37
 20341 868e 9EA1      		ldd r25,Y+38
 20342 8690 FC01      		movw r30,r24
 20343 8692 3583      		std Z+5,r19
 20344 8694 2483      		std Z+4,r18
 20345               	.L644:
2056:lp_solve_5.5/lp_price.c **** #endif
2057:lp_solve_5.5/lp_price.c ****   }
2058:lp_solve_5.5/lp_price.c ****   multi_populateSet(multi, NULL, multi->active);
 20346               		.loc 1 2058 0
 20347 8696 8DA1      		ldd r24,Y+37
 20348 8698 9EA1      		ldd r25,Y+38
 20349 869a FC01      		movw r30,r24
 20350 869c 2489      		ldd r18,Z+20
 20351 869e 3589      		ldd r19,Z+21
 20352 86a0 8DA1      		ldd r24,Y+37
 20353 86a2 9EA1      		ldd r25,Y+38
 20354 86a4 A901      		movw r20,r18
 20355 86a6 60E0      		ldi r22,0
 20356 86a8 70E0      		ldi r23,0
 20357 86aa 0E94 0000 		call multi_populateSet
2059:lp_solve_5.5/lp_price.c **** 
2060:lp_solve_5.5/lp_price.c ****   /* Compute the entering theta and update parameters */
2061:lp_solve_5.5/lp_price.c ****   score = (multi->used == 1 ? multi->step_base : multi->sortedList[multi->used-2].pvoidreal.realval
 20358               		.loc 1 2061 0
 20359 86ae 8DA1      		ldd r24,Y+37
 20360 86b0 9EA1      		ldd r25,Y+38
 20361 86b2 FC01      		movw r30,r24
 20362 86b4 8481      		ldd r24,Z+4
 20363 86b6 9581      		ldd r25,Z+5
 20364 86b8 0197      		sbiw r24,1
 20365 86ba 01F4      		brne .L645
 20366               		.loc 1 2061 0 is_stmt 0 discriminator 1
 20367 86bc 8DA1      		ldd r24,Y+37
 20368 86be 9EA1      		ldd r25,Y+38
 20369 86c0 FC01      		movw r30,r24
 20370 86c2 808D      		ldd r24,Z+24
 20371 86c4 918D      		ldd r25,Z+25
 20372 86c6 A28D      		ldd r26,Z+26
 20373 86c8 B38D      		ldd r27,Z+27
 20374 86ca 00C0      		rjmp .L646
 20375               	.L645:
 20376               		.loc 1 2061 0 discriminator 2
 20377 86cc 8DA1      		ldd r24,Y+37
 20378 86ce 9EA1      		ldd r25,Y+38
 20379 86d0 FC01      		movw r30,r24
 20380 86d2 2485      		ldd r18,Z+12
 20381 86d4 3585      		ldd r19,Z+13
 20382 86d6 8DA1      		ldd r24,Y+37
 20383 86d8 9EA1      		ldd r25,Y+38
 20384 86da FC01      		movw r30,r24
 20385 86dc 8481      		ldd r24,Z+4
 20386 86de 9581      		ldd r25,Z+5
 20387 86e0 8250      		subi r24,2
 20388 86e2 904E      		sbci r25,-32
 20389 86e4 880F      		lsl r24
 20390 86e6 991F      		rol r25
 20391 86e8 880F      		lsl r24
 20392 86ea 991F      		rol r25
 20393 86ec 880F      		lsl r24
 20394 86ee 991F      		rol r25
 20395 86f0 820F      		add r24,r18
 20396 86f2 931F      		adc r25,r19
 20397 86f4 FC01      		movw r30,r24
 20398 86f6 8281      		ldd r24,Z+2
 20399 86f8 9381      		ldd r25,Z+3
 20400 86fa A481      		ldd r26,Z+4
 20401 86fc B581      		ldd r27,Z+5
 20402               	.L646:
 20403               		.loc 1 2061 0 discriminator 4
 20404 86fe 89A3      		std Y+33,r24
 20405 8700 9AA3      		std Y+34,r25
 20406 8702 ABA3      		std Y+35,r26
 20407 8704 BCA3      		std Y+36,r27
2062:lp_solve_5.5/lp_price.c ****   score /= bestcand->pivot;
 20408               		.loc 1 2062 0 is_stmt 1 discriminator 4
 20409 8706 8D89      		ldd r24,Y+21
 20410 8708 9E89      		ldd r25,Y+22
 20411 870a FC01      		movw r30,r24
 20412 870c 8481      		ldd r24,Z+4
 20413 870e 9581      		ldd r25,Z+5
 20414 8710 A681      		ldd r26,Z+6
 20415 8712 B781      		ldd r27,Z+7
 20416 8714 9C01      		movw r18,r24
 20417 8716 AD01      		movw r20,r26
 20418 8718 69A1      		ldd r22,Y+33
 20419 871a 7AA1      		ldd r23,Y+34
 20420 871c 8BA1      		ldd r24,Y+35
 20421 871e 9CA1      		ldd r25,Y+36
 20422 8720 0E94 0000 		call __divsf3
 20423 8724 DC01      		movw r26,r24
 20424 8726 CB01      		movw r24,r22
 20425 8728 89A3      		std Y+33,r24
 20426 872a 9AA3      		std Y+34,r25
 20427 872c ABA3      		std Y+35,r26
 20428 872e BCA3      		std Y+36,r27
2063:lp_solve_5.5/lp_price.c ****   score = my_chsign(!lp->is_lower[multi->active], score);
 20429               		.loc 1 2063 0 discriminator 4
 20430 8730 8F89      		ldd r24,Y+23
 20431 8732 988D      		ldd r25,Y+24
 20432 8734 8E52      		subi r24,46
 20433 8736 9D4F      		sbci r25,-3
 20434 8738 FC01      		movw r30,r24
 20435 873a 8081      		ld r24,Z
 20436 873c 9181      		ldd r25,Z+1
 20437 873e 2DA1      		ldd r18,Y+37
 20438 8740 3EA1      		ldd r19,Y+38
 20439 8742 F901      		movw r30,r18
 20440 8744 2489      		ldd r18,Z+20
 20441 8746 3589      		ldd r19,Z+21
 20442 8748 820F      		add r24,r18
 20443 874a 931F      		adc r25,r19
 20444 874c FC01      		movw r30,r24
 20445 874e 8081      		ld r24,Z
 20446 8750 8823      		tst r24
 20447 8752 01F4      		brne .L647
 20448               		.loc 1 2063 0 is_stmt 0 discriminator 1
 20449 8754 20E0      		ldi r18,0
 20450 8756 30E0      		ldi r19,0
 20451 8758 A901      		movw r20,r18
 20452 875a 69A1      		ldd r22,Y+33
 20453 875c 7AA1      		ldd r23,Y+34
 20454 875e 8BA1      		ldd r24,Y+35
 20455 8760 9CA1      		ldd r25,Y+36
 20456 8762 0E94 0000 		call __nesf2
 20457 8766 8823      		tst r24
 20458 8768 01F0      		breq .L647
 20459               		.loc 1 2063 0 discriminator 3
 20460 876a 89A1      		ldd r24,Y+33
 20461 876c 9AA1      		ldd r25,Y+34
 20462 876e ABA1      		ldd r26,Y+35
 20463 8770 BCA1      		ldd r27,Y+36
 20464 8772 B058      		subi r27,0x80
 20465 8774 00C0      		rjmp .L649
 20466               	.L647:
 20467               		.loc 1 2063 0 discriminator 4
 20468 8776 89A1      		ldd r24,Y+33
 20469 8778 9AA1      		ldd r25,Y+34
 20470 877a ABA1      		ldd r26,Y+35
 20471 877c BCA1      		ldd r27,Y+36
 20472               	.L649:
 20473               		.loc 1 2063 0 discriminator 6
 20474 877e 89A3      		std Y+33,r24
 20475 8780 9AA3      		std Y+34,r25
 20476 8782 ABA3      		std Y+35,r26
 20477 8784 BCA3      		std Y+36,r27
2064:lp_solve_5.5/lp_price.c **** 
2065:lp_solve_5.5/lp_price.c ****   if(lp->spx_trace &&
 20478               		.loc 1 2065 0 is_stmt 1 discriminator 6
 20479 8786 8F89      		ldd r24,Y+23
 20480 8788 988D      		ldd r25,Y+24
 20481 878a 8E5F      		subi r24,-2
 20482 878c 9D4F      		sbci r25,-3
 20483 878e FC01      		movw r30,r24
 20484 8790 8081      		ld r24,Z
 20485 8792 8823      		tst r24
 20486 8794 01F4      		brne .+2
 20487 8796 00C0      		rjmp .L650
2066:lp_solve_5.5/lp_price.c ****      (fabs(score) > 1/lp->epsprimal))
 20488               		.loc 1 2066 0 discriminator 1
 20489 8798 89A1      		ldd r24,Y+33
 20490 879a 9AA1      		ldd r25,Y+34
 20491 879c ABA1      		ldd r26,Y+35
 20492 879e BCA1      		ldd r27,Y+36
 20493 87a0 6C01      		movw r12,r24
 20494 87a2 7D01      		movw r14,r26
 20495 87a4 E894      		clt
 20496 87a6 F7F8      		bld r15,7
 20497 87a8 8F89      		ldd r24,Y+23
 20498 87aa 988D      		ldd r25,Y+24
 20499 87ac 865E      		subi r24,-26
 20500 87ae 9C4F      		sbci r25,-4
 20501 87b0 FC01      		movw r30,r24
 20502 87b2 8081      		ld r24,Z
 20503 87b4 9181      		ldd r25,Z+1
 20504 87b6 A281      		ldd r26,Z+2
 20505 87b8 B381      		ldd r27,Z+3
 20506 87ba 9C01      		movw r18,r24
 20507 87bc AD01      		movw r20,r26
 20508 87be 60E0      		ldi r22,0
 20509 87c0 70E0      		ldi r23,0
 20510 87c2 80E8      		ldi r24,lo8(-128)
 20511 87c4 9FE3      		ldi r25,lo8(63)
 20512 87c6 0E94 0000 		call __divsf3
 20513 87ca DC01      		movw r26,r24
 20514 87cc CB01      		movw r24,r22
2065:lp_solve_5.5/lp_price.c ****      (fabs(score) > 1/lp->epsprimal))
 20515               		.loc 1 2065 0 discriminator 1
 20516 87ce 9C01      		movw r18,r24
 20517 87d0 AD01      		movw r20,r26
 20518 87d2 C701      		movw r24,r14
 20519 87d4 B601      		movw r22,r12
 20520 87d6 0E94 0000 		call __gtsf2
 20521 87da 1816      		cp __zero_reg__,r24
 20522 87dc 04F4      		brge .L650
2067:lp_solve_5.5/lp_price.c ****     report(lp, IMPORTANT, "multi_enteringvar: A very large Theta %g was generated (pivot %g)\n",
 20523               		.loc 1 2067 0
 20524 87de 8D89      		ldd r24,Y+21
 20525 87e0 9E89      		ldd r25,Y+22
 20526 87e2 FC01      		movw r30,r24
 20527 87e4 8481      		ldd r24,Z+4
 20528 87e6 9581      		ldd r25,Z+5
 20529 87e8 A681      		ldd r26,Z+6
 20530 87ea B781      		ldd r27,Z+7
 20531 87ec 2B2F      		mov r18,r27
 20532 87ee 2F93      		push r18
 20533 87f0 2A2F      		mov r18,r26
 20534 87f2 2F93      		push r18
 20535 87f4 292F      		mov r18,r25
 20536 87f6 2F93      		push r18
 20537 87f8 8F93      		push r24
 20538 87fa 8CA1      		ldd r24,Y+36
 20539 87fc 8F93      		push r24
 20540 87fe 8BA1      		ldd r24,Y+35
 20541 8800 8F93      		push r24
 20542 8802 8AA1      		ldd r24,Y+34
 20543 8804 8F93      		push r24
 20544 8806 89A1      		ldd r24,Y+33
 20545 8808 8F93      		push r24
 20546 880a 80E0      		ldi r24,lo8(.LC14)
 20547 880c 90E0      		ldi r25,hi8(.LC14)
 20548 880e 892F      		mov r24,r25
 20549 8810 8F93      		push r24
 20550 8812 80E0      		ldi r24,lo8(.LC14)
 20551 8814 90E0      		ldi r25,hi8(.LC14)
 20552 8816 8F93      		push r24
 20553 8818 1F92      		push __zero_reg__
 20554 881a 83E0      		ldi r24,lo8(3)
 20555 881c 8F93      		push r24
 20556 881e 888D      		ldd r24,Y+24
 20557 8820 8F93      		push r24
 20558 8822 8F89      		ldd r24,Y+23
 20559 8824 8F93      		push r24
 20560 8826 0E94 0000 		call report
 20561 882a 8DB7      		in r24,__SP_L__
 20562 882c 9EB7      		in r25,__SP_H__
 20563 882e 0E96      		adiw r24,14
 20564 8830 0FB6      		in __tmp_reg__,__SREG__
 20565 8832 F894      		cli
 20566 8834 DEBF      		out __SP_H__,r29
 20567 8836 0FBE      		out __SREG__,__tmp_reg__
 20568 8838 CDBF      		out __SP_L__,r28
 20569               	.L650:
2068:lp_solve_5.5/lp_price.c ****                        score, bestcand->pivot);
2069:lp_solve_5.5/lp_price.c ****   multi->step_base = score;
 20570               		.loc 1 2069 0
 20571 883a 2DA1      		ldd r18,Y+37
 20572 883c 3EA1      		ldd r19,Y+38
 20573 883e 89A1      		ldd r24,Y+33
 20574 8840 9AA1      		ldd r25,Y+34
 20575 8842 ABA1      		ldd r26,Y+35
 20576 8844 BCA1      		ldd r27,Y+36
 20577 8846 F901      		movw r30,r18
 20578 8848 808F      		std Z+24,r24
 20579 884a 918F      		std Z+25,r25
 20580 884c A28F      		std Z+26,r26
 20581 884e B38F      		std Z+27,r27
2070:lp_solve_5.5/lp_price.c ****   if(current != NULL)
 20582               		.loc 1 2070 0
 20583 8850 8FA1      		ldd r24,Y+39
 20584 8852 98A5      		ldd r25,Y+40
 20585 8854 892B      		or r24,r25
 20586 8856 01F0      		breq .L652
2071:lp_solve_5.5/lp_price.c ****     *current = *bestcand;
 20587               		.loc 1 2071 0
 20588 8858 8FA1      		ldd r24,Y+39
 20589 885a 98A5      		ldd r25,Y+40
 20590 885c 2D89      		ldd r18,Y+21
 20591 885e 3E89      		ldd r19,Y+22
 20592 8860 41E1      		ldi r20,lo8(17)
 20593 8862 F901      		movw r30,r18
 20594 8864 DC01      		movw r26,r24
 20595               		0:
 20596 8866 0190      		ld r0,Z+
 20597 8868 0D92      		st X+,r0
 20598 886a 4A95      		dec r20
 20599 886c 01F4      		brne 0b
 20600               	.L652:
2072:lp_solve_5.5/lp_price.c **** 
2073:lp_solve_5.5/lp_price.c ****   return( multi->active );
 20601               		.loc 1 2073 0
 20602 886e 8DA1      		ldd r24,Y+37
 20603 8870 9EA1      		ldd r25,Y+38
 20604 8872 FC01      		movw r30,r24
 20605 8874 8489      		ldd r24,Z+20
 20606 8876 9589      		ldd r25,Z+21
 20607               	.L627:
 20608               	/* epilogue start */
2074:lp_solve_5.5/lp_price.c **** }
 20609               		.loc 1 2074 0
 20610 8878 AA96      		adiw r28,42
 20611 887a 0FB6      		in __tmp_reg__,__SREG__
 20612 887c F894      		cli
 20613 887e DEBF      		out __SP_H__,r29
 20614 8880 0FBE      		out __SREG__,__tmp_reg__
 20615 8882 CDBF      		out __SP_L__,r28
 20616 8884 DF91      		pop r29
 20617 8886 CF91      		pop r28
 20618 8888 1F91      		pop r17
 20619 888a 0F91      		pop r16
 20620 888c FF90      		pop r15
 20621 888e EF90      		pop r14
 20622 8890 DF90      		pop r13
 20623 8892 CF90      		pop r12
 20624 8894 BF90      		pop r11
 20625 8896 AF90      		pop r10
 20626 8898 9F90      		pop r9
 20627 889a 8F90      		pop r8
 20628 889c 0895      		ret
 20629               		.cfi_endproc
 20630               	.LFE54:
 20632               	.global	multi_enteringtheta
 20634               	multi_enteringtheta:
 20635               	.LFB55:
2075:lp_solve_5.5/lp_price.c **** 
2076:lp_solve_5.5/lp_price.c **** STATIC REAL multi_enteringtheta(multirec *multi)
2077:lp_solve_5.5/lp_price.c **** {
 20636               		.loc 1 2077 0
 20637               		.cfi_startproc
 20638 889e CF93      		push r28
 20639               	.LCFI370:
 20640               		.cfi_def_cfa_offset 3
 20641               		.cfi_offset 28, -2
 20642 88a0 DF93      		push r29
 20643               	.LCFI371:
 20644               		.cfi_def_cfa_offset 4
 20645               		.cfi_offset 29, -3
 20646 88a2 00D0      		rcall .
 20647               	.LCFI372:
 20648               		.cfi_def_cfa_offset 6
 20649 88a4 CDB7      		in r28,__SP_L__
 20650 88a6 DEB7      		in r29,__SP_H__
 20651               	.LCFI373:
 20652               		.cfi_def_cfa_register 28
 20653               	/* prologue: function */
 20654               	/* frame size = 2 */
 20655               	/* stack size = 4 */
 20656               	.L__stack_usage = 4
 20657 88a8 9A83      		std Y+2,r25
 20658 88aa 8983      		std Y+1,r24
2078:lp_solve_5.5/lp_price.c ****   return( multi->step_base );
 20659               		.loc 1 2078 0
 20660 88ac 8981      		ldd r24,Y+1
 20661 88ae 9A81      		ldd r25,Y+2
 20662 88b0 FC01      		movw r30,r24
 20663 88b2 808D      		ldd r24,Z+24
 20664 88b4 918D      		ldd r25,Z+25
 20665 88b6 A28D      		ldd r26,Z+26
 20666 88b8 B38D      		ldd r27,Z+27
2079:lp_solve_5.5/lp_price.c **** }
 20667               		.loc 1 2079 0
 20668 88ba BC01      		movw r22,r24
 20669 88bc CD01      		movw r24,r26
 20670               	/* epilogue start */
 20671 88be 0F90      		pop __tmp_reg__
 20672 88c0 0F90      		pop __tmp_reg__
 20673 88c2 DF91      		pop r29
 20674 88c4 CF91      		pop r28
 20675 88c6 0895      		ret
 20676               		.cfi_endproc
 20677               	.LFE55:
 20679               	.global	multi_populateSet
 20681               	multi_populateSet:
 20682               	.LFB56:
2080:lp_solve_5.5/lp_price.c **** 
2081:lp_solve_5.5/lp_price.c **** STATIC int multi_populateSet(multirec *multi, int **list, int excludenr)
2082:lp_solve_5.5/lp_price.c **** {
 20683               		.loc 1 2082 0
 20684               		.cfi_startproc
 20685 88c8 CF93      		push r28
 20686               	.LCFI374:
 20687               		.cfi_def_cfa_offset 3
 20688               		.cfi_offset 28, -2
 20689 88ca DF93      		push r29
 20690               	.LCFI375:
 20691               		.cfi_def_cfa_offset 4
 20692               		.cfi_offset 29, -3
 20693 88cc CDB7      		in r28,__SP_L__
 20694 88ce DEB7      		in r29,__SP_H__
 20695               	.LCFI376:
 20696               		.cfi_def_cfa_register 28
 20697 88d0 2C97      		sbiw r28,12
 20698               	.LCFI377:
 20699               		.cfi_def_cfa_offset 16
 20700 88d2 0FB6      		in __tmp_reg__,__SREG__
 20701 88d4 F894      		cli
 20702 88d6 DEBF      		out __SP_H__,r29
 20703 88d8 0FBE      		out __SREG__,__tmp_reg__
 20704 88da CDBF      		out __SP_L__,r28
 20705               	/* prologue: function */
 20706               	/* frame size = 12 */
 20707               	/* stack size = 14 */
 20708               	.L__stack_usage = 14
 20709 88dc 9887      		std Y+8,r25
 20710 88de 8F83      		std Y+7,r24
 20711 88e0 7A87      		std Y+10,r23
 20712 88e2 6987      		std Y+9,r22
 20713 88e4 5C87      		std Y+12,r21
 20714 88e6 4B87      		std Y+11,r20
2083:lp_solve_5.5/lp_price.c ****   int n = 0;
 20715               		.loc 1 2083 0
 20716 88e8 1A82      		std Y+2,__zero_reg__
 20717 88ea 1982      		std Y+1,__zero_reg__
2084:lp_solve_5.5/lp_price.c ****   if(list == NULL)
 20718               		.loc 1 2084 0
 20719 88ec 8985      		ldd r24,Y+9
 20720 88ee 9A85      		ldd r25,Y+10
 20721 88f0 892B      		or r24,r25
 20722 88f2 01F4      		brne .L660
2085:lp_solve_5.5/lp_price.c ****     list = &(multi->indexSet);
 20723               		.loc 1 2085 0
 20724 88f4 8F81      		ldd r24,Y+7
 20725 88f6 9885      		ldd r25,Y+8
 20726 88f8 4296      		adiw r24,18
 20727 88fa 9A87      		std Y+10,r25
 20728 88fc 8987      		std Y+9,r24
 20729               	.L660:
2086:lp_solve_5.5/lp_price.c ****   if((multi->used > 0) &&
 20730               		.loc 1 2086 0
 20731 88fe 8F81      		ldd r24,Y+7
 20732 8900 9885      		ldd r25,Y+8
 20733 8902 FC01      		movw r30,r24
 20734 8904 8481      		ldd r24,Z+4
 20735 8906 9581      		ldd r25,Z+5
 20736 8908 1816      		cp __zero_reg__,r24
 20737 890a 1906      		cpc __zero_reg__,r25
 20738 890c 04F0      		brlt .+2
 20739 890e 00C0      		rjmp .L661
2087:lp_solve_5.5/lp_price.c ****      ((*list != NULL) || allocINT(multi->lp, list, multi->size+1, FALSE))) {
 20740               		.loc 1 2087 0 discriminator 1
 20741 8910 8985      		ldd r24,Y+9
 20742 8912 9A85      		ldd r25,Y+10
 20743 8914 FC01      		movw r30,r24
 20744 8916 8081      		ld r24,Z
 20745 8918 9181      		ldd r25,Z+1
2086:lp_solve_5.5/lp_price.c ****   if((multi->used > 0) &&
 20746               		.loc 1 2086 0 discriminator 1
 20747 891a 892B      		or r24,r25
 20748 891c 01F4      		brne .L662
 20749               		.loc 1 2087 0
 20750 891e 8F81      		ldd r24,Y+7
 20751 8920 9885      		ldd r25,Y+8
 20752 8922 FC01      		movw r30,r24
 20753 8924 8281      		ldd r24,Z+2
 20754 8926 9381      		ldd r25,Z+3
 20755 8928 AC01      		movw r20,r24
 20756 892a 4F5F      		subi r20,-1
 20757 892c 5F4F      		sbci r21,-1
 20758 892e 8F81      		ldd r24,Y+7
 20759 8930 9885      		ldd r25,Y+8
 20760 8932 FC01      		movw r30,r24
 20761 8934 8081      		ld r24,Z
 20762 8936 9181      		ldd r25,Z+1
 20763 8938 6985      		ldd r22,Y+9
 20764 893a 7A85      		ldd r23,Y+10
 20765 893c 20E0      		ldi r18,0
 20766 893e 0E94 0000 		call allocINT
 20767 8942 8823      		tst r24
 20768 8944 01F4      		brne .+2
 20769 8946 00C0      		rjmp .L661
 20770               	.L662:
 20771               	.LBB14:
2088:lp_solve_5.5/lp_price.c ****     int i, colnr;
2089:lp_solve_5.5/lp_price.c **** 
2090:lp_solve_5.5/lp_price.c ****     for(i = 0; i < multi->used; i++) {
 20772               		.loc 1 2090 0
 20773 8948 1C82      		std Y+4,__zero_reg__
 20774 894a 1B82      		std Y+3,__zero_reg__
 20775 894c 00C0      		rjmp .L663
 20776               	.L666:
2091:lp_solve_5.5/lp_price.c ****       colnr = ((pricerec *) (multi->sortedList[i].pvoidreal.ptr))->varno;
 20777               		.loc 1 2091 0
 20778 894e 8F81      		ldd r24,Y+7
 20779 8950 9885      		ldd r25,Y+8
 20780 8952 FC01      		movw r30,r24
 20781 8954 2485      		ldd r18,Z+12
 20782 8956 3585      		ldd r19,Z+13
 20783 8958 8B81      		ldd r24,Y+3
 20784 895a 9C81      		ldd r25,Y+4
 20785 895c 880F      		lsl r24
 20786 895e 991F      		rol r25
 20787 8960 880F      		lsl r24
 20788 8962 991F      		rol r25
 20789 8964 880F      		lsl r24
 20790 8966 991F      		rol r25
 20791 8968 820F      		add r24,r18
 20792 896a 931F      		adc r25,r19
 20793 896c FC01      		movw r30,r24
 20794 896e 8081      		ld r24,Z
 20795 8970 9181      		ldd r25,Z+1
 20796 8972 FC01      		movw r30,r24
 20797 8974 8485      		ldd r24,Z+12
 20798 8976 9585      		ldd r25,Z+13
 20799 8978 9E83      		std Y+6,r25
 20800 897a 8D83      		std Y+5,r24
2092:lp_solve_5.5/lp_price.c ****       if((colnr != excludenr) &&
 20801               		.loc 1 2092 0
 20802 897c 2D81      		ldd r18,Y+5
 20803 897e 3E81      		ldd r19,Y+6
 20804 8980 8B85      		ldd r24,Y+11
 20805 8982 9C85      		ldd r25,Y+12
 20806 8984 2817      		cp r18,r24
 20807 8986 3907      		cpc r19,r25
 20808 8988 01F4      		brne .+2
 20809 898a 00C0      		rjmp .L664
 20810               		.loc 1 2092 0 is_stmt 0 discriminator 1
 20811 898c 8B85      		ldd r24,Y+11
 20812 898e 9C85      		ldd r25,Y+12
 20813 8990 1816      		cp __zero_reg__,r24
 20814 8992 1906      		cpc __zero_reg__,r25
 20815 8994 04F0      		brlt .+2
 20816 8996 00C0      		rjmp .L664
2093:lp_solve_5.5/lp_price.c ****         /* Prevent an unbounded variable from "bound-flip"; this could
2094:lp_solve_5.5/lp_price.c ****           actually indicate that we should let the entering variable be
2095:lp_solve_5.5/lp_price.c ****           bound-swapped (in the case that it is bounded), but we
2096:lp_solve_5.5/lp_price.c ****           disregard this possibility here, since it brings with it
2097:lp_solve_5.5/lp_price.c ****           issues of pivot size, etc. */
2098:lp_solve_5.5/lp_price.c ****         ((excludenr > 0) && (multi->lp->upbo[colnr] < multi->lp->infinite))) {
 20817               		.loc 1 2098 0 is_stmt 1
 20818 8998 8F81      		ldd r24,Y+7
 20819 899a 9885      		ldd r25,Y+8
 20820 899c FC01      		movw r30,r24
 20821 899e 8081      		ld r24,Z
 20822 89a0 9181      		ldd r25,Z+1
 20823 89a2 8055      		subi r24,80
 20824 89a4 9D4F      		sbci r25,-3
 20825 89a6 FC01      		movw r30,r24
 20826 89a8 2081      		ld r18,Z
 20827 89aa 3181      		ldd r19,Z+1
 20828 89ac 8D81      		ldd r24,Y+5
 20829 89ae 9E81      		ldd r25,Y+6
 20830 89b0 880F      		lsl r24
 20831 89b2 991F      		rol r25
 20832 89b4 880F      		lsl r24
 20833 89b6 991F      		rol r25
 20834 89b8 820F      		add r24,r18
 20835 89ba 931F      		adc r25,r19
 20836 89bc FC01      		movw r30,r24
 20837 89be 8081      		ld r24,Z
 20838 89c0 9181      		ldd r25,Z+1
 20839 89c2 A281      		ldd r26,Z+2
 20840 89c4 B381      		ldd r27,Z+3
 20841 89c6 2F81      		ldd r18,Y+7
 20842 89c8 3885      		ldd r19,Y+8
 20843 89ca F901      		movw r30,r18
 20844 89cc 2081      		ld r18,Z
 20845 89ce 3181      		ldd r19,Z+1
 20846 89d0 265F      		subi r18,-10
 20847 89d2 3C4F      		sbci r19,-4
 20848 89d4 F901      		movw r30,r18
 20849 89d6 2081      		ld r18,Z
 20850 89d8 3181      		ldd r19,Z+1
 20851 89da 4281      		ldd r20,Z+2
 20852 89dc 5381      		ldd r21,Z+3
 20853 89de BC01      		movw r22,r24
 20854 89e0 CD01      		movw r24,r26
 20855 89e2 0E94 0000 		call __ltsf2
 20856 89e6 8823      		tst r24
 20857 89e8 04F4      		brge .L664
2099:lp_solve_5.5/lp_price.c ****         n++;
 20858               		.loc 1 2099 0
 20859 89ea 8981      		ldd r24,Y+1
 20860 89ec 9A81      		ldd r25,Y+2
 20861 89ee 0196      		adiw r24,1
 20862 89f0 9A83      		std Y+2,r25
 20863 89f2 8983      		std Y+1,r24
2100:lp_solve_5.5/lp_price.c ****         (*list)[n] = colnr;
 20864               		.loc 1 2100 0
 20865 89f4 8985      		ldd r24,Y+9
 20866 89f6 9A85      		ldd r25,Y+10
 20867 89f8 FC01      		movw r30,r24
 20868 89fa 2081      		ld r18,Z
 20869 89fc 3181      		ldd r19,Z+1
 20870 89fe 8981      		ldd r24,Y+1
 20871 8a00 9A81      		ldd r25,Y+2
 20872 8a02 880F      		lsl r24
 20873 8a04 991F      		rol r25
 20874 8a06 820F      		add r24,r18
 20875 8a08 931F      		adc r25,r19
 20876 8a0a 2D81      		ldd r18,Y+5
 20877 8a0c 3E81      		ldd r19,Y+6
 20878 8a0e FC01      		movw r30,r24
 20879 8a10 3183      		std Z+1,r19
 20880 8a12 2083      		st Z,r18
 20881               	.L664:
2090:lp_solve_5.5/lp_price.c ****       colnr = ((pricerec *) (multi->sortedList[i].pvoidreal.ptr))->varno;
 20882               		.loc 1 2090 0 discriminator 2
 20883 8a14 8B81      		ldd r24,Y+3
 20884 8a16 9C81      		ldd r25,Y+4
 20885 8a18 0196      		adiw r24,1
 20886 8a1a 9C83      		std Y+4,r25
 20887 8a1c 8B83      		std Y+3,r24
 20888               	.L663:
2090:lp_solve_5.5/lp_price.c ****       colnr = ((pricerec *) (multi->sortedList[i].pvoidreal.ptr))->varno;
 20889               		.loc 1 2090 0 is_stmt 0 discriminator 1
 20890 8a1e 8F81      		ldd r24,Y+7
 20891 8a20 9885      		ldd r25,Y+8
 20892 8a22 FC01      		movw r30,r24
 20893 8a24 2481      		ldd r18,Z+4
 20894 8a26 3581      		ldd r19,Z+5
 20895 8a28 8B81      		ldd r24,Y+3
 20896 8a2a 9C81      		ldd r25,Y+4
 20897 8a2c 8217      		cp r24,r18
 20898 8a2e 9307      		cpc r25,r19
 20899 8a30 04F4      		brge .+2
 20900 8a32 00C0      		rjmp .L666
2101:lp_solve_5.5/lp_price.c ****       }
2102:lp_solve_5.5/lp_price.c ****     }
2103:lp_solve_5.5/lp_price.c ****     (*list)[0] = n;
 20901               		.loc 1 2103 0 is_stmt 1
 20902 8a34 8985      		ldd r24,Y+9
 20903 8a36 9A85      		ldd r25,Y+10
 20904 8a38 FC01      		movw r30,r24
 20905 8a3a 8081      		ld r24,Z
 20906 8a3c 9181      		ldd r25,Z+1
 20907 8a3e 2981      		ldd r18,Y+1
 20908 8a40 3A81      		ldd r19,Y+2
 20909 8a42 FC01      		movw r30,r24
 20910 8a44 3183      		std Z+1,r19
 20911 8a46 2083      		st Z,r18
 20912               	.L661:
 20913               	.LBE14:
2104:lp_solve_5.5/lp_price.c ****   }
2105:lp_solve_5.5/lp_price.c ****   return( n );
 20914               		.loc 1 2105 0
 20915 8a48 8981      		ldd r24,Y+1
 20916 8a4a 9A81      		ldd r25,Y+2
 20917               	/* epilogue start */
2106:lp_solve_5.5/lp_price.c **** }
 20918               		.loc 1 2106 0
 20919 8a4c 2C96      		adiw r28,12
 20920 8a4e 0FB6      		in __tmp_reg__,__SREG__
 20921 8a50 F894      		cli
 20922 8a52 DEBF      		out __SP_H__,r29
 20923 8a54 0FBE      		out __SREG__,__tmp_reg__
 20924 8a56 CDBF      		out __SP_L__,r28
 20925 8a58 DF91      		pop r29
 20926 8a5a CF91      		pop r28
 20927 8a5c 0895      		ret
 20928               		.cfi_endproc
 20929               	.LFE56:
 20931               	.Letext0:
 20932               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\lib\\gc
 20933               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 20934               		.file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 20935               		.file 5 "lp_solve_5.5\\shared/commonlib.h"
 20936               		.file 6 "lp_solve_5.5/lp_types.h"
 20937               		.file 7 "lp_solve_5.5/lp_lib.h"
 20938               		.file 8 "lp_solve_5.5/lp_utils.h"
 20939               		.file 9 "lp_solve_5.5/lp_Hash.h"
 20940               		.file 10 "lp_solve_5.5/lp_matrix.h"
 20941               		.file 11 "lp_solve_5.5/lp_mipbb.h"
 20942               		.file 12 "lp_solve_5.5/lp_SOS.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lp_price.c
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:18     .text:00000000 compareImprovementVar
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:518    .text:00000304 compareSubstitutionVar
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:1105   .text:000006a2 compareBoundFlipVar
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:1605   .text:000009a8 validImprovementVar
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:1704   .text:00000a1a validSubstitutionVar
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:1899   .text:00000b2c compareImprovementQS
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:1954   .text:00000b68 compareSubstitutionQS
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:2009   .text:00000ba4 addCandidateVar
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:19272  .text:00007f94 multi_truncatingvar
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:2716   .text:00001060 findImprovementVar
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:2895   .text:0000116c collectMinorVar
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:18369  .text:0000795a multi_recompute
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:3117   .text:000012c8 findSubstitutionVar
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:3241   .text:00001374 partial_createBlocks
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:3325   .text:000013e0 partial_countBlocks
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:3411   .text:00001444 partial_activeBlocks
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:3497   .text:000014a8 partial_freeBlocks
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:3634   .text:00001574 makePriceLoop
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:3938   .text:0000172e serious_facterror
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:4464   .text:00001ab2 update_reducedcosts
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:4808   .text:00001cf0 compute_reducedcosts
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:5185   .text:00001f4e verify_stability
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:5277   .text:00001fac find_rowReplacement
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:5627   .text:000021c4 colprim
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:17219  .text:000072f2 multi_mustupdate
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:17945  .text:0000773a multi_restart
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:18249  .text:000078d6 multi_indexSet
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:15031  .text:0000654e normalizeEdge
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:16164  .text:00006ce2 partial_blockStart
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:16297  .text:00006d9a partial_blockEnd
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:19365  .text:00008012 multi_removevar
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:6930   .text:00002aac rowprim
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:8885   .text:00003866 rowdual
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:9973   .text:00003fec longdual_testset
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:13141  .text:000057dc coldual
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:18089  .text:0000780c multi_valueInit
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:19570  .text:00008146 multi_enteringvar
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:17891  .text:0000770a multi_used
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:15194  .text:0000665c partial_findBlocks
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:16448  .text:00006e70 partial_blockNextPos
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:16629  .text:00006f8e partial_blockStep
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:16750  .text:0000702e partial_isVarActive
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:16893  .text:000070f8 multi_create
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:16992  .text:0000717e multi_free
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:17285  .text:00007336 multi_resize
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:17837  .text:000076da multi_size
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:18206  .text:000078b4 multi_valueList
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:20681  .text:000088c8 multi_populateSet
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:18308  .text:00007914 multi_getvar
C:\Users\GUILHE~1\AppData\Local\Temp\cc5POtRg.s:20634  .text:0000889e multi_enteringtheta

UNDEFINED SYMBOLS
__ltsf2
__subsf3
__addsf3
__divsf3
__gtsf2
rand_uniform
__gesf2
compareREAL
QS_execute
findIndexEx
memcpy
QS_append
QS_insert
calloc
free
is_piv_mode
__adddi3
__cmpdi2_s8
swapINT
__mulsf3
__floatsisf
get_OF_active
report
bsolve_xA2
bsolve
refactRecent
set_action
prod_xA
clear_action
is_fixedvar
fsolve
__nesf2
__lesf2
get_piv_rule
mempool_obtainVector
compute_theta
mempool_releaseVector
is_action
__eqsf2
__floatdisf
get_total_iter
getPricer
mat_validate
allocREAL
__divmodhi4
set_partialprice
realloc
allocINT
is_infinite
bb_better
pow
log
__do_copy_data
