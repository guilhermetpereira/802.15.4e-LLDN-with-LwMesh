   1               		.file	"lp_MPS.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               	.global	namecpy
  13               	namecpy:
  14               	.LFB7:
  15               		.file 1 "lp_solve_5.5/lp_MPS.c"
   1:lp_solve_5.5/lp_MPS.c **** 
   2:lp_solve_5.5/lp_MPS.c **** #include <string.h>
   3:lp_solve_5.5/lp_MPS.c **** #include <stdarg.h>
   4:lp_solve_5.5/lp_MPS.c **** #include <ctype.h>
   5:lp_solve_5.5/lp_MPS.c **** #include "commonlib.h"
   6:lp_solve_5.5/lp_MPS.c **** #include "lp_lib.h"
   7:lp_solve_5.5/lp_MPS.c **** #include "lp_scale.h"
   8:lp_solve_5.5/lp_MPS.c **** #include "lp_report.h"
   9:lp_solve_5.5/lp_MPS.c **** #include "lp_MPS.h"
  10:lp_solve_5.5/lp_MPS.c **** 
  11:lp_solve_5.5/lp_MPS.c **** #ifdef FORTIFY
  12:lp_solve_5.5/lp_MPS.c **** # include "lp_fortify.h"
  13:lp_solve_5.5/lp_MPS.c **** #endif
  14:lp_solve_5.5/lp_MPS.c **** 
  15:lp_solve_5.5/lp_MPS.c **** /* Define buffer-size controled function mapping */
  16:lp_solve_5.5/lp_MPS.c **** # if defined _MSC_VER
  17:lp_solve_5.5/lp_MPS.c **** #  define vsnprintf _vsnprintf
  18:lp_solve_5.5/lp_MPS.c **** # endif
  19:lp_solve_5.5/lp_MPS.c **** 
  20:lp_solve_5.5/lp_MPS.c **** /* MPS file input and output routines for lp_solve                           */
  21:lp_solve_5.5/lp_MPS.c **** /* ------------------------------------------------------------------------- */
  22:lp_solve_5.5/lp_MPS.c **** 
  23:lp_solve_5.5/lp_MPS.c **** /*
  24:lp_solve_5.5/lp_MPS.c **** A:  MPS format was named after an early IBM LP product and has emerged
  25:lp_solve_5.5/lp_MPS.c **** as a de facto standard ASCII medium among most of the commercial LP
  26:lp_solve_5.5/lp_MPS.c **** codes.  Essentially all commercial LP codes accept this format, but if
  27:lp_solve_5.5/lp_MPS.c **** you are using public domain software and have MPS files, you may need
  28:lp_solve_5.5/lp_MPS.c **** to write your own reader routine for this.  It's not too hard.  The
  29:lp_solve_5.5/lp_MPS.c **** main things to know about MPS format are that it is column oriented (as
  30:lp_solve_5.5/lp_MPS.c **** opposed to entering the model as equations), and everything (variables,
  31:lp_solve_5.5/lp_MPS.c **** rows, etc.) gets a name.  MPS format is described in more detail in
  32:lp_solve_5.5/lp_MPS.c **** Murtagh's book, referenced in another section. Also,
  33:lp_solve_5.5/lp_MPS.c **** 
  34:lp_solve_5.5/lp_MPS.c **** ftp://softlib.cs.rice.edu/pub/miplib/mps_format
  35:lp_solve_5.5/lp_MPS.c **** 
  36:lp_solve_5.5/lp_MPS.c **** is a nice short introduction.  exports
  37:lp_solve_5.5/lp_MPS.c **** 
  38:lp_solve_5.5/lp_MPS.c **** MPS is an old format, so it is set up as though you were using punch
  39:lp_solve_5.5/lp_MPS.c **** cards, and is not free format. Fields start in column 1, 5, 15, 25, 40
  40:lp_solve_5.5/lp_MPS.c **** and 50.  Sections of an MPS file are marked by so-called header cards,
  41:lp_solve_5.5/lp_MPS.c **** which are distinguished by their starting in column 1.  Although it is
  42:lp_solve_5.5/lp_MPS.c **** typical to use upper-case throughout the file (like I said, MPS has
  43:lp_solve_5.5/lp_MPS.c **** long historical roots), many MPS-readers will accept mixed-case for
  44:lp_solve_5.5/lp_MPS.c **** anything except the header cards, and some allow mixed-case anywhere.
  45:lp_solve_5.5/lp_MPS.c **** The names that you choose for the individual entities (constraints or
  46:lp_solve_5.5/lp_MPS.c **** variables) are not important to the solver; you should pick names that
  47:lp_solve_5.5/lp_MPS.c **** are meaningful to you, or will be easy for a post-processing code to
  48:lp_solve_5.5/lp_MPS.c **** read.
  49:lp_solve_5.5/lp_MPS.c **** 
  50:lp_solve_5.5/lp_MPS.c **** Here is a little sample model written in MPS format (explained in more
  51:lp_solve_5.5/lp_MPS.c **** detail below):
  52:lp_solve_5.5/lp_MPS.c **** 
  53:lp_solve_5.5/lp_MPS.c **** NAME          TESTPROB
  54:lp_solve_5.5/lp_MPS.c **** ROWS
  55:lp_solve_5.5/lp_MPS.c ****  N  COST
  56:lp_solve_5.5/lp_MPS.c ****  L  LIM1
  57:lp_solve_5.5/lp_MPS.c ****  G  LIM2
  58:lp_solve_5.5/lp_MPS.c ****  E  MYEQN
  59:lp_solve_5.5/lp_MPS.c **** COLUMNS
  60:lp_solve_5.5/lp_MPS.c ****     XONE      COST                 1   LIM1                 1
  61:lp_solve_5.5/lp_MPS.c ****     XONE      LIM2                 1
  62:lp_solve_5.5/lp_MPS.c ****     YTWO      COST                 4   LIM1                 1
  63:lp_solve_5.5/lp_MPS.c ****     YTWO      MYEQN               -1
  64:lp_solve_5.5/lp_MPS.c ****     ZTHREE    COST                 9   LIM2                 1
  65:lp_solve_5.5/lp_MPS.c ****     ZTHREE    MYEQN                1
  66:lp_solve_5.5/lp_MPS.c **** RHS
  67:lp_solve_5.5/lp_MPS.c ****     RHS1      LIM1                 5   LIM2                10
  68:lp_solve_5.5/lp_MPS.c ****     RHS1      MYEQN                7
  69:lp_solve_5.5/lp_MPS.c **** BOUNDS
  70:lp_solve_5.5/lp_MPS.c ****  UP BND1      XONE                 4
  71:lp_solve_5.5/lp_MPS.c ****  LO BND1      YTWO                -1
  72:lp_solve_5.5/lp_MPS.c ****  UP BND1      YTWO                 1
  73:lp_solve_5.5/lp_MPS.c **** ENDATA
  74:lp_solve_5.5/lp_MPS.c **** 
  75:lp_solve_5.5/lp_MPS.c **** means:
  76:lp_solve_5.5/lp_MPS.c **** 
  77:lp_solve_5.5/lp_MPS.c **** Optimize
  78:lp_solve_5.5/lp_MPS.c ****  COST:    XONE + 4 YTWO + 9 ZTHREE
  79:lp_solve_5.5/lp_MPS.c **** Subject To
  80:lp_solve_5.5/lp_MPS.c ****  LIM1:    XONE + YTWO <= 5
  81:lp_solve_5.5/lp_MPS.c ****  LIM2:    XONE + ZTHREE >= 10
  82:lp_solve_5.5/lp_MPS.c ****  MYEQN:   - YTWO + ZTHREE  = 7
  83:lp_solve_5.5/lp_MPS.c **** Bounds
  84:lp_solve_5.5/lp_MPS.c ****  0 <= XONE <= 4
  85:lp_solve_5.5/lp_MPS.c **** -1 <= YTWO <= 1
  86:lp_solve_5.5/lp_MPS.c **** End
  87:lp_solve_5.5/lp_MPS.c **** 
  88:lp_solve_5.5/lp_MPS.c **** */
  89:lp_solve_5.5/lp_MPS.c **** 
  90:lp_solve_5.5/lp_MPS.c **** /* copy a MPS name, only trailing spaces are removed. In MPS, names can have
  91:lp_solve_5.5/lp_MPS.c ****    embedded spaces! */
  92:lp_solve_5.5/lp_MPS.c **** STATIC void namecpy(char *into, char *from)
  93:lp_solve_5.5/lp_MPS.c **** {
  16               		.loc 1 93 0
  17               		.cfi_startproc
  18 0000 CF93      		push r28
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22 0002 DF93      		push r29
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 29, -3
  26 0004 00D0      		rcall .
  27 0006 00D0      		rcall .
  28 0008 00D0      		rcall .
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 10
  31 000a CDB7      		in r28,__SP_L__
  32 000c DEB7      		in r29,__SP_H__
  33               	.LCFI3:
  34               		.cfi_def_cfa_register 28
  35               	/* prologue: function */
  36               	/* frame size = 6 */
  37               	/* stack size = 8 */
  38               	.L__stack_usage = 8
  39 000e 9C83      		std Y+4,r25
  40 0010 8B83      		std Y+3,r24
  41 0012 7E83      		std Y+6,r23
  42 0014 6D83      		std Y+5,r22
  94:lp_solve_5.5/lp_MPS.c ****   int i;
  95:lp_solve_5.5/lp_MPS.c **** 
  96:lp_solve_5.5/lp_MPS.c ****   /* copy at most 8 characters of from, stop at end of string or newline */
  97:lp_solve_5.5/lp_MPS.c ****   for(i = 0; (from[i] != '\0') && (from[i] != '\n') && (from[i] != '\r') && (i < 8); i++)
  43               		.loc 1 97 0
  44 0016 1A82      		std Y+2,__zero_reg__
  45 0018 1982      		std Y+1,__zero_reg__
  46 001a 00C0      		rjmp .L2
  47               	.L4:
  98:lp_solve_5.5/lp_MPS.c ****     into[i] = from[i];
  48               		.loc 1 98 0 discriminator 6
  49 001c 8981      		ldd r24,Y+1
  50 001e 9A81      		ldd r25,Y+2
  51 0020 2B81      		ldd r18,Y+3
  52 0022 3C81      		ldd r19,Y+4
  53 0024 820F      		add r24,r18
  54 0026 931F      		adc r25,r19
  55 0028 2981      		ldd r18,Y+1
  56 002a 3A81      		ldd r19,Y+2
  57 002c 4D81      		ldd r20,Y+5
  58 002e 5E81      		ldd r21,Y+6
  59 0030 240F      		add r18,r20
  60 0032 351F      		adc r19,r21
  61 0034 F901      		movw r30,r18
  62 0036 2081      		ld r18,Z
  63 0038 FC01      		movw r30,r24
  64 003a 2083      		st Z,r18
  97:lp_solve_5.5/lp_MPS.c ****     into[i] = from[i];
  65               		.loc 1 97 0 discriminator 6
  66 003c 8981      		ldd r24,Y+1
  67 003e 9A81      		ldd r25,Y+2
  68 0040 0196      		adiw r24,1
  69 0042 9A83      		std Y+2,r25
  70 0044 8983      		std Y+1,r24
  71               	.L2:
  97:lp_solve_5.5/lp_MPS.c ****     into[i] = from[i];
  72               		.loc 1 97 0 is_stmt 0 discriminator 1
  73 0046 8981      		ldd r24,Y+1
  74 0048 9A81      		ldd r25,Y+2
  75 004a 2D81      		ldd r18,Y+5
  76 004c 3E81      		ldd r19,Y+6
  77 004e 820F      		add r24,r18
  78 0050 931F      		adc r25,r19
  79 0052 FC01      		movw r30,r24
  80 0054 8081      		ld r24,Z
  81 0056 8823      		tst r24
  82 0058 01F0      		breq .L3
  97:lp_solve_5.5/lp_MPS.c ****     into[i] = from[i];
  83               		.loc 1 97 0 discriminator 3
  84 005a 8981      		ldd r24,Y+1
  85 005c 9A81      		ldd r25,Y+2
  86 005e 2D81      		ldd r18,Y+5
  87 0060 3E81      		ldd r19,Y+6
  88 0062 820F      		add r24,r18
  89 0064 931F      		adc r25,r19
  90 0066 FC01      		movw r30,r24
  91 0068 8081      		ld r24,Z
  92 006a 8A30      		cpi r24,lo8(10)
  93 006c 01F0      		breq .L3
  97:lp_solve_5.5/lp_MPS.c ****     into[i] = from[i];
  94               		.loc 1 97 0 discriminator 4
  95 006e 8981      		ldd r24,Y+1
  96 0070 9A81      		ldd r25,Y+2
  97 0072 2D81      		ldd r18,Y+5
  98 0074 3E81      		ldd r19,Y+6
  99 0076 820F      		add r24,r18
 100 0078 931F      		adc r25,r19
 101 007a FC01      		movw r30,r24
 102 007c 8081      		ld r24,Z
 103 007e 8D30      		cpi r24,lo8(13)
 104 0080 01F0      		breq .L3
  97:lp_solve_5.5/lp_MPS.c ****     into[i] = from[i];
 105               		.loc 1 97 0 discriminator 5
 106 0082 8981      		ldd r24,Y+1
 107 0084 9A81      		ldd r25,Y+2
 108 0086 0897      		sbiw r24,8
 109 0088 04F0      		brlt .L4
 110               	.L3:
  99:lp_solve_5.5/lp_MPS.c **** 
 100:lp_solve_5.5/lp_MPS.c ****   /* end with end of string */
 101:lp_solve_5.5/lp_MPS.c ****   into[i] = '\0';
 111               		.loc 1 101 0 is_stmt 1
 112 008a 8981      		ldd r24,Y+1
 113 008c 9A81      		ldd r25,Y+2
 114 008e 2B81      		ldd r18,Y+3
 115 0090 3C81      		ldd r19,Y+4
 116 0092 820F      		add r24,r18
 117 0094 931F      		adc r25,r19
 118 0096 FC01      		movw r30,r24
 119 0098 1082      		st Z,__zero_reg__
 102:lp_solve_5.5/lp_MPS.c **** 
 103:lp_solve_5.5/lp_MPS.c ****   /* remove trailing spaces, if any */
 104:lp_solve_5.5/lp_MPS.c ****   for(i--; (i >= 0) && (into[i] == ' '); i--)
 120               		.loc 1 104 0
 121 009a 8981      		ldd r24,Y+1
 122 009c 9A81      		ldd r25,Y+2
 123 009e 0197      		sbiw r24,1
 124 00a0 9A83      		std Y+2,r25
 125 00a2 8983      		std Y+1,r24
 126 00a4 00C0      		rjmp .L5
 127               	.L7:
 105:lp_solve_5.5/lp_MPS.c ****     into[i] = '\0';
 128               		.loc 1 105 0 discriminator 4
 129 00a6 8981      		ldd r24,Y+1
 130 00a8 9A81      		ldd r25,Y+2
 131 00aa 2B81      		ldd r18,Y+3
 132 00ac 3C81      		ldd r19,Y+4
 133 00ae 820F      		add r24,r18
 134 00b0 931F      		adc r25,r19
 135 00b2 FC01      		movw r30,r24
 136 00b4 1082      		st Z,__zero_reg__
 104:lp_solve_5.5/lp_MPS.c ****     into[i] = '\0';
 137               		.loc 1 104 0 discriminator 4
 138 00b6 8981      		ldd r24,Y+1
 139 00b8 9A81      		ldd r25,Y+2
 140 00ba 0197      		sbiw r24,1
 141 00bc 9A83      		std Y+2,r25
 142 00be 8983      		std Y+1,r24
 143               	.L5:
 104:lp_solve_5.5/lp_MPS.c ****     into[i] = '\0';
 144               		.loc 1 104 0 is_stmt 0 discriminator 1
 145 00c0 8981      		ldd r24,Y+1
 146 00c2 9A81      		ldd r25,Y+2
 147 00c4 9923      		tst r25
 148 00c6 04F0      		brlt .L8
 104:lp_solve_5.5/lp_MPS.c ****     into[i] = '\0';
 149               		.loc 1 104 0 discriminator 3
 150 00c8 8981      		ldd r24,Y+1
 151 00ca 9A81      		ldd r25,Y+2
 152 00cc 2B81      		ldd r18,Y+3
 153 00ce 3C81      		ldd r19,Y+4
 154 00d0 820F      		add r24,r18
 155 00d2 931F      		adc r25,r19
 156 00d4 FC01      		movw r30,r24
 157 00d6 8081      		ld r24,Z
 158 00d8 8032      		cpi r24,lo8(32)
 159 00da 01F0      		breq .L7
 160               	.L8:
 106:lp_solve_5.5/lp_MPS.c **** }
 161               		.loc 1 106 0 is_stmt 1
 162 00dc 0000      		nop
 163               	/* epilogue start */
 164 00de 2696      		adiw r28,6
 165 00e0 0FB6      		in __tmp_reg__,__SREG__
 166 00e2 F894      		cli
 167 00e4 DEBF      		out __SP_H__,r29
 168 00e6 0FBE      		out __SREG__,__tmp_reg__
 169 00e8 CDBF      		out __SP_L__,r28
 170 00ea DF91      		pop r29
 171 00ec CF91      		pop r28
 172 00ee 0895      		ret
 173               		.cfi_endproc
 174               	.LFE7:
 176               		.section	.rodata
 177               	.LC0:
 178 0000 2573 00   		.string	"%s"
 179               	.LC1:
 180 0003 4D50 535F 		.string	"MPS_readfile: invalid data card; column 4 must be blank\n"
 180      7265 6164 
 180      6669 6C65 
 180      3A20 696E 
 180      7661 6C69 
 181               	.LC2:
 182 003c 4D50 535F 		.string	"MPS_readfile: invalid data card; columns 13-14 must be blank\n"
 182      7265 6164 
 182      6669 6C65 
 182      3A20 696E 
 182      7661 6C69 
 183               	.LC3:
 184 007a 4D50 535F 		.string	"MPS_readfile: invalid data card; columns 23-24 must be blank\n"
 184      7265 6164 
 184      6669 6C65 
 184      3A20 696E 
 184      7661 6C69 
 185               	.LC4:
 186 00b8 4D50 535F 		.string	"MPS_readfile: invalid number in columns 25-36 \n"
 186      7265 6164 
 186      6669 6C65 
 186      3A20 696E 
 186      7661 6C69 
 187               	.LC5:
 188 00e8 4D50 535F 		.string	"MPS_readfile: invalid data card; columns 37-39 must be blank\n"
 188      7265 6164 
 188      6669 6C65 
 188      3A20 696E 
 188      7661 6C69 
 189               	.LC6:
 190 0126 4D50 535F 		.string	"MPS_readfile: invalid data card; columns 48-49 must be blank\n"
 190      7265 6164 
 190      6669 6C65 
 190      3A20 696E 
 190      7661 6C69 
 191               	.LC7:
 192 0164 4D50 535F 		.string	"MPS_readfile: invalid number in columns 50-61 \n"
 192      7265 6164 
 192      6669 6C65 
 192      3A20 696E 
 192      7661 6C69 
 193               		.text
 194               	.global	scan_lineFIXED
 196               	scan_lineFIXED:
 197               	.LFB8:
 107:lp_solve_5.5/lp_MPS.c **** 
 108:lp_solve_5.5/lp_MPS.c **** /* scan an MPS line, and pick up the information in the fields that are
 109:lp_solve_5.5/lp_MPS.c ****    present */
 110:lp_solve_5.5/lp_MPS.c **** 
 111:lp_solve_5.5/lp_MPS.c **** /* scan_line for fixed MPS format */
 112:lp_solve_5.5/lp_MPS.c **** STATIC int scan_lineFIXED(lprec *lp, int section, char* line, char *field1, char *field2, char *fie
 113:lp_solve_5.5/lp_MPS.c ****                           double *field4, char *field5, double *field6)
 114:lp_solve_5.5/lp_MPS.c **** {
 198               		.loc 1 114 0
 199               		.cfi_startproc
 200 00f0 8F92      		push r8
 201               	.LCFI4:
 202               		.cfi_def_cfa_offset 3
 203               		.cfi_offset 8, -2
 204 00f2 9F92      		push r9
 205               	.LCFI5:
 206               		.cfi_def_cfa_offset 4
 207               		.cfi_offset 9, -3
 208 00f4 AF92      		push r10
 209               	.LCFI6:
 210               		.cfi_def_cfa_offset 5
 211               		.cfi_offset 10, -4
 212 00f6 BF92      		push r11
 213               	.LCFI7:
 214               		.cfi_def_cfa_offset 6
 215               		.cfi_offset 11, -5
 216 00f8 CF92      		push r12
 217               	.LCFI8:
 218               		.cfi_def_cfa_offset 7
 219               		.cfi_offset 12, -6
 220 00fa DF92      		push r13
 221               	.LCFI9:
 222               		.cfi_def_cfa_offset 8
 223               		.cfi_offset 13, -7
 224 00fc EF92      		push r14
 225               	.LCFI10:
 226               		.cfi_def_cfa_offset 9
 227               		.cfi_offset 14, -8
 228 00fe FF92      		push r15
 229               	.LCFI11:
 230               		.cfi_def_cfa_offset 10
 231               		.cfi_offset 15, -9
 232 0100 0F93      		push r16
 233               	.LCFI12:
 234               		.cfi_def_cfa_offset 11
 235               		.cfi_offset 16, -10
 236 0102 1F93      		push r17
 237               	.LCFI13:
 238               		.cfi_def_cfa_offset 12
 239               		.cfi_offset 17, -11
 240 0104 CF93      		push r28
 241               	.LCFI14:
 242               		.cfi_def_cfa_offset 13
 243               		.cfi_offset 28, -12
 244 0106 DF93      		push r29
 245               	.LCFI15:
 246               		.cfi_def_cfa_offset 14
 247               		.cfi_offset 29, -13
 248 0108 CDB7      		in r28,__SP_L__
 249 010a DEB7      		in r29,__SP_H__
 250               	.LCFI16:
 251               		.cfi_def_cfa_register 28
 252 010c AA97      		sbiw r28,42
 253               	.LCFI17:
 254               		.cfi_def_cfa_offset 56
 255 010e 0FB6      		in __tmp_reg__,__SREG__
 256 0110 F894      		cli
 257 0112 DEBF      		out __SP_H__,r29
 258 0114 0FBE      		out __SREG__,__tmp_reg__
 259 0116 CDBF      		out __SP_L__,r28
 260               	/* prologue: function */
 261               	/* frame size = 42 */
 262               	/* stack size = 54 */
 263               	.L__stack_usage = 54
 264 0118 9A8F      		std Y+26,r25
 265 011a 898F      		std Y+25,r24
 266 011c 7C8F      		std Y+28,r23
 267 011e 6B8F      		std Y+27,r22
 268 0120 5E8F      		std Y+30,r21
 269 0122 4D8F      		std Y+29,r20
 270 0124 38A3      		std Y+32,r19
 271 0126 2F8F      		std Y+31,r18
 272 0128 1AA3      		std Y+34,r17
 273 012a 09A3      		std Y+33,r16
 274 012c FCA2      		std Y+36,r15
 275 012e EBA2      		std Y+35,r14
 276 0130 DEA2      		std Y+38,r13
 277 0132 CDA2      		std Y+37,r12
 278 0134 B8A6      		std Y+40,r11
 279 0136 AFA2      		std Y+39,r10
 280 0138 9AA6      		std Y+42,r9
 281 013a 89A6      		std Y+41,r8
 115:lp_solve_5.5/lp_MPS.c ****   int  items = 0, line_len;
 282               		.loc 1 115 0
 283 013c 1A82      		std Y+2,__zero_reg__
 284 013e 1982      		std Y+1,__zero_reg__
 116:lp_solve_5.5/lp_MPS.c ****   char buf[16], *ptr1, *ptr2;
 117:lp_solve_5.5/lp_MPS.c **** 
 118:lp_solve_5.5/lp_MPS.c ****   line_len = (int) strlen(line);
 285               		.loc 1 118 0
 286 0140 8D8D      		ldd r24,Y+29
 287 0142 9E8D      		ldd r25,Y+30
 288 0144 0E94 0000 		call strlen
 289 0148 9C83      		std Y+4,r25
 290 014a 8B83      		std Y+3,r24
 119:lp_solve_5.5/lp_MPS.c ****   while ((line_len) && ((line[line_len-1] == '\n') || (line[line_len-1] == '\r') || (line[line_len-
 291               		.loc 1 119 0
 292 014c 00C0      		rjmp .L10
 293               	.L12:
 120:lp_solve_5.5/lp_MPS.c ****    line_len--;
 294               		.loc 1 120 0
 295 014e 8B81      		ldd r24,Y+3
 296 0150 9C81      		ldd r25,Y+4
 297 0152 0197      		sbiw r24,1
 298 0154 9C83      		std Y+4,r25
 299 0156 8B83      		std Y+3,r24
 300               	.L10:
 119:lp_solve_5.5/lp_MPS.c ****   while ((line_len) && ((line[line_len-1] == '\n') || (line[line_len-1] == '\r') || (line[line_len-
 301               		.loc 1 119 0
 302 0158 8B81      		ldd r24,Y+3
 303 015a 9C81      		ldd r25,Y+4
 304 015c 892B      		or r24,r25
 305 015e 01F0      		breq .L11
 119:lp_solve_5.5/lp_MPS.c ****   while ((line_len) && ((line[line_len-1] == '\n') || (line[line_len-1] == '\r') || (line[line_len-
 306               		.loc 1 119 0 is_stmt 0 discriminator 1
 307 0160 8B81      		ldd r24,Y+3
 308 0162 9C81      		ldd r25,Y+4
 309 0164 0197      		sbiw r24,1
 310 0166 2D8D      		ldd r18,Y+29
 311 0168 3E8D      		ldd r19,Y+30
 312 016a 820F      		add r24,r18
 313 016c 931F      		adc r25,r19
 314 016e FC01      		movw r30,r24
 315 0170 8081      		ld r24,Z
 316 0172 8A30      		cpi r24,lo8(10)
 317 0174 01F0      		breq .L12
 119:lp_solve_5.5/lp_MPS.c ****   while ((line_len) && ((line[line_len-1] == '\n') || (line[line_len-1] == '\r') || (line[line_len-
 318               		.loc 1 119 0 discriminator 2
 319 0176 8B81      		ldd r24,Y+3
 320 0178 9C81      		ldd r25,Y+4
 321 017a 0197      		sbiw r24,1
 322 017c 2D8D      		ldd r18,Y+29
 323 017e 3E8D      		ldd r19,Y+30
 324 0180 820F      		add r24,r18
 325 0182 931F      		adc r25,r19
 326 0184 FC01      		movw r30,r24
 327 0186 8081      		ld r24,Z
 328 0188 8D30      		cpi r24,lo8(13)
 329 018a 01F0      		breq .L12
 119:lp_solve_5.5/lp_MPS.c ****   while ((line_len) && ((line[line_len-1] == '\n') || (line[line_len-1] == '\r') || (line[line_len-
 330               		.loc 1 119 0 discriminator 3
 331 018c 8B81      		ldd r24,Y+3
 332 018e 9C81      		ldd r25,Y+4
 333 0190 0197      		sbiw r24,1
 334 0192 2D8D      		ldd r18,Y+29
 335 0194 3E8D      		ldd r19,Y+30
 336 0196 820F      		add r24,r18
 337 0198 931F      		adc r25,r19
 338 019a FC01      		movw r30,r24
 339 019c 8081      		ld r24,Z
 340 019e 8032      		cpi r24,lo8(32)
 341 01a0 01F0      		breq .L12
 342               	.L11:
 121:lp_solve_5.5/lp_MPS.c **** 
 122:lp_solve_5.5/lp_MPS.c ****   if(line_len >= 1) { /* spaces or N/L/G/E or UP/LO */
 343               		.loc 1 122 0 is_stmt 1
 344 01a2 8B81      		ldd r24,Y+3
 345 01a4 9C81      		ldd r25,Y+4
 346 01a6 1816      		cp __zero_reg__,r24
 347 01a8 1906      		cpc __zero_reg__,r25
 348 01aa 04F4      		brge .L13
 123:lp_solve_5.5/lp_MPS.c ****     strncpy(buf, line, 4);
 349               		.loc 1 123 0
 350 01ac 2D8D      		ldd r18,Y+29
 351 01ae 3E8D      		ldd r19,Y+30
 352 01b0 CE01      		movw r24,r28
 353 01b2 0796      		adiw r24,7
 354 01b4 44E0      		ldi r20,lo8(4)
 355 01b6 50E0      		ldi r21,0
 356 01b8 B901      		movw r22,r18
 357 01ba 0E94 0000 		call strncpy
 124:lp_solve_5.5/lp_MPS.c ****     buf[4] = '\0';
 358               		.loc 1 124 0
 359 01be 1B86      		std Y+11,__zero_reg__
 125:lp_solve_5.5/lp_MPS.c ****     sscanf(buf, "%s", field1);
 360               		.loc 1 125 0
 361 01c0 88A1      		ldd r24,Y+32
 362 01c2 8F93      		push r24
 363 01c4 8F8D      		ldd r24,Y+31
 364 01c6 8F93      		push r24
 365 01c8 80E0      		ldi r24,lo8(.LC0)
 366 01ca 90E0      		ldi r25,hi8(.LC0)
 367 01cc 892F      		mov r24,r25
 368 01ce 8F93      		push r24
 369 01d0 80E0      		ldi r24,lo8(.LC0)
 370 01d2 90E0      		ldi r25,hi8(.LC0)
 371 01d4 8F93      		push r24
 372 01d6 CE01      		movw r24,r28
 373 01d8 0796      		adiw r24,7
 374 01da 292F      		mov r18,r25
 375 01dc 2F93      		push r18
 376 01de 8F93      		push r24
 377 01e0 0E94 0000 		call sscanf
 378 01e4 0F90      		pop __tmp_reg__
 379 01e6 0F90      		pop __tmp_reg__
 380 01e8 0F90      		pop __tmp_reg__
 381 01ea 0F90      		pop __tmp_reg__
 382 01ec 0F90      		pop __tmp_reg__
 383 01ee 0F90      		pop __tmp_reg__
 126:lp_solve_5.5/lp_MPS.c ****     items++;
 384               		.loc 1 126 0
 385 01f0 8981      		ldd r24,Y+1
 386 01f2 9A81      		ldd r25,Y+2
 387 01f4 0196      		adiw r24,1
 388 01f6 9A83      		std Y+2,r25
 389 01f8 8983      		std Y+1,r24
 390 01fa 00C0      		rjmp .L14
 391               	.L13:
 127:lp_solve_5.5/lp_MPS.c ****   }
 128:lp_solve_5.5/lp_MPS.c ****   else
 129:lp_solve_5.5/lp_MPS.c ****     field1[0] = '\0';
 392               		.loc 1 129 0
 393 01fc 8F8D      		ldd r24,Y+31
 394 01fe 98A1      		ldd r25,Y+32
 395 0200 FC01      		movw r30,r24
 396 0202 1082      		st Z,__zero_reg__
 397               	.L14:
 130:lp_solve_5.5/lp_MPS.c **** 
 131:lp_solve_5.5/lp_MPS.c ****   line += 4;
 398               		.loc 1 131 0
 399 0204 8D8D      		ldd r24,Y+29
 400 0206 9E8D      		ldd r25,Y+30
 401 0208 0496      		adiw r24,4
 402 020a 9E8F      		std Y+30,r25
 403 020c 8D8F      		std Y+29,r24
 132:lp_solve_5.5/lp_MPS.c **** 
 133:lp_solve_5.5/lp_MPS.c ****   if(line_len >= 5) { /* name */
 404               		.loc 1 133 0
 405 020e 8B81      		ldd r24,Y+3
 406 0210 9C81      		ldd r25,Y+4
 407 0212 0597      		sbiw r24,5
 408 0214 04F0      		brlt .L15
 134:lp_solve_5.5/lp_MPS.c ****     if (line[-1] != ' ') {
 409               		.loc 1 134 0
 410 0216 8D8D      		ldd r24,Y+29
 411 0218 9E8D      		ldd r25,Y+30
 412 021a 0197      		sbiw r24,1
 413 021c FC01      		movw r30,r24
 414 021e 8081      		ld r24,Z
 415 0220 8032      		cpi r24,lo8(32)
 416 0222 01F0      		breq .L16
 135:lp_solve_5.5/lp_MPS.c ****       report(lp, IMPORTANT, "MPS_readfile: invalid data card; column 4 must be blank\n");
 417               		.loc 1 135 0
 418 0224 80E0      		ldi r24,lo8(.LC1)
 419 0226 90E0      		ldi r25,hi8(.LC1)
 420 0228 892F      		mov r24,r25
 421 022a 8F93      		push r24
 422 022c 80E0      		ldi r24,lo8(.LC1)
 423 022e 90E0      		ldi r25,hi8(.LC1)
 424 0230 8F93      		push r24
 425 0232 1F92      		push __zero_reg__
 426 0234 83E0      		ldi r24,lo8(3)
 427 0236 8F93      		push r24
 428 0238 8A8D      		ldd r24,Y+26
 429 023a 8F93      		push r24
 430 023c 898D      		ldd r24,Y+25
 431 023e 8F93      		push r24
 432 0240 0E94 0000 		call report
 433 0244 0F90      		pop __tmp_reg__
 434 0246 0F90      		pop __tmp_reg__
 435 0248 0F90      		pop __tmp_reg__
 436 024a 0F90      		pop __tmp_reg__
 437 024c 0F90      		pop __tmp_reg__
 438 024e 0F90      		pop __tmp_reg__
 136:lp_solve_5.5/lp_MPS.c ****       return(-1);
 439               		.loc 1 136 0
 440 0250 8FEF      		ldi r24,lo8(-1)
 441 0252 9FEF      		ldi r25,lo8(-1)
 442 0254 00C0      		rjmp .L43
 443               	.L16:
 137:lp_solve_5.5/lp_MPS.c ****     }
 138:lp_solve_5.5/lp_MPS.c ****     namecpy(field2, line);
 444               		.loc 1 138 0
 445 0256 2D8D      		ldd r18,Y+29
 446 0258 3E8D      		ldd r19,Y+30
 447 025a 89A1      		ldd r24,Y+33
 448 025c 9AA1      		ldd r25,Y+34
 449 025e B901      		movw r22,r18
 450 0260 0E94 0000 		call namecpy
 139:lp_solve_5.5/lp_MPS.c ****     items++;
 451               		.loc 1 139 0
 452 0264 8981      		ldd r24,Y+1
 453 0266 9A81      		ldd r25,Y+2
 454 0268 0196      		adiw r24,1
 455 026a 9A83      		std Y+2,r25
 456 026c 8983      		std Y+1,r24
 457 026e 00C0      		rjmp .L18
 458               	.L15:
 140:lp_solve_5.5/lp_MPS.c ****   }
 141:lp_solve_5.5/lp_MPS.c ****   else
 142:lp_solve_5.5/lp_MPS.c ****     field2[0] = '\0';
 459               		.loc 1 142 0
 460 0270 89A1      		ldd r24,Y+33
 461 0272 9AA1      		ldd r25,Y+34
 462 0274 FC01      		movw r30,r24
 463 0276 1082      		st Z,__zero_reg__
 464               	.L18:
 143:lp_solve_5.5/lp_MPS.c **** 
 144:lp_solve_5.5/lp_MPS.c ****   line += 10;
 465               		.loc 1 144 0
 466 0278 8D8D      		ldd r24,Y+29
 467 027a 9E8D      		ldd r25,Y+30
 468 027c 0A96      		adiw r24,10
 469 027e 9E8F      		std Y+30,r25
 470 0280 8D8F      		std Y+29,r24
 145:lp_solve_5.5/lp_MPS.c **** 
 146:lp_solve_5.5/lp_MPS.c ****   if(line_len >= 14) { /* name */
 471               		.loc 1 146 0
 472 0282 8B81      		ldd r24,Y+3
 473 0284 9C81      		ldd r25,Y+4
 474 0286 0E97      		sbiw r24,14
 475 0288 04F0      		brlt .L19
 147:lp_solve_5.5/lp_MPS.c ****     if (line[-1] != ' ' || line[-2] != ' ') {
 476               		.loc 1 147 0
 477 028a 8D8D      		ldd r24,Y+29
 478 028c 9E8D      		ldd r25,Y+30
 479 028e 0197      		sbiw r24,1
 480 0290 FC01      		movw r30,r24
 481 0292 8081      		ld r24,Z
 482 0294 8032      		cpi r24,lo8(32)
 483 0296 01F4      		brne .L20
 484               		.loc 1 147 0 is_stmt 0 discriminator 1
 485 0298 8D8D      		ldd r24,Y+29
 486 029a 9E8D      		ldd r25,Y+30
 487 029c 0297      		sbiw r24,2
 488 029e FC01      		movw r30,r24
 489 02a0 8081      		ld r24,Z
 490 02a2 8032      		cpi r24,lo8(32)
 491 02a4 01F0      		breq .L21
 492               	.L20:
 148:lp_solve_5.5/lp_MPS.c ****       report(lp, IMPORTANT, "MPS_readfile: invalid data card; columns 13-14 must be blank\n");
 493               		.loc 1 148 0 is_stmt 1
 494 02a6 80E0      		ldi r24,lo8(.LC2)
 495 02a8 90E0      		ldi r25,hi8(.LC2)
 496 02aa 892F      		mov r24,r25
 497 02ac 8F93      		push r24
 498 02ae 80E0      		ldi r24,lo8(.LC2)
 499 02b0 90E0      		ldi r25,hi8(.LC2)
 500 02b2 8F93      		push r24
 501 02b4 1F92      		push __zero_reg__
 502 02b6 83E0      		ldi r24,lo8(3)
 503 02b8 8F93      		push r24
 504 02ba 8A8D      		ldd r24,Y+26
 505 02bc 8F93      		push r24
 506 02be 898D      		ldd r24,Y+25
 507 02c0 8F93      		push r24
 508 02c2 0E94 0000 		call report
 509 02c6 0F90      		pop __tmp_reg__
 510 02c8 0F90      		pop __tmp_reg__
 511 02ca 0F90      		pop __tmp_reg__
 512 02cc 0F90      		pop __tmp_reg__
 513 02ce 0F90      		pop __tmp_reg__
 514 02d0 0F90      		pop __tmp_reg__
 149:lp_solve_5.5/lp_MPS.c ****       return(-1);
 515               		.loc 1 149 0
 516 02d2 8FEF      		ldi r24,lo8(-1)
 517 02d4 9FEF      		ldi r25,lo8(-1)
 518 02d6 00C0      		rjmp .L43
 519               	.L21:
 150:lp_solve_5.5/lp_MPS.c ****     }
 151:lp_solve_5.5/lp_MPS.c ****     namecpy(field3, line);
 520               		.loc 1 151 0
 521 02d8 2D8D      		ldd r18,Y+29
 522 02da 3E8D      		ldd r19,Y+30
 523 02dc 8BA1      		ldd r24,Y+35
 524 02de 9CA1      		ldd r25,Y+36
 525 02e0 B901      		movw r22,r18
 526 02e2 0E94 0000 		call namecpy
 152:lp_solve_5.5/lp_MPS.c ****     items++;
 527               		.loc 1 152 0
 528 02e6 8981      		ldd r24,Y+1
 529 02e8 9A81      		ldd r25,Y+2
 530 02ea 0196      		adiw r24,1
 531 02ec 9A83      		std Y+2,r25
 532 02ee 8983      		std Y+1,r24
 533 02f0 00C0      		rjmp .L22
 534               	.L19:
 153:lp_solve_5.5/lp_MPS.c ****   }
 154:lp_solve_5.5/lp_MPS.c ****   else
 155:lp_solve_5.5/lp_MPS.c ****     field3[0] = '\0';
 535               		.loc 1 155 0
 536 02f2 8BA1      		ldd r24,Y+35
 537 02f4 9CA1      		ldd r25,Y+36
 538 02f6 FC01      		movw r30,r24
 539 02f8 1082      		st Z,__zero_reg__
 540               	.L22:
 156:lp_solve_5.5/lp_MPS.c **** 
 157:lp_solve_5.5/lp_MPS.c ****   line += 10;
 541               		.loc 1 157 0
 542 02fa 8D8D      		ldd r24,Y+29
 543 02fc 9E8D      		ldd r25,Y+30
 544 02fe 0A96      		adiw r24,10
 545 0300 9E8F      		std Y+30,r25
 546 0302 8D8F      		std Y+29,r24
 158:lp_solve_5.5/lp_MPS.c **** 
 159:lp_solve_5.5/lp_MPS.c ****   if(line_len >= 25) { /* number */
 547               		.loc 1 159 0
 548 0304 8B81      		ldd r24,Y+3
 549 0306 9C81      		ldd r25,Y+4
 550 0308 4997      		sbiw r24,25
 551 030a 04F4      		brge .+2
 552 030c 00C0      		rjmp .L23
 160:lp_solve_5.5/lp_MPS.c ****     if (line[-1] != ' ' || line[-2] != ' ') {
 553               		.loc 1 160 0
 554 030e 8D8D      		ldd r24,Y+29
 555 0310 9E8D      		ldd r25,Y+30
 556 0312 0197      		sbiw r24,1
 557 0314 FC01      		movw r30,r24
 558 0316 8081      		ld r24,Z
 559 0318 8032      		cpi r24,lo8(32)
 560 031a 01F4      		brne .L24
 561               		.loc 1 160 0 is_stmt 0 discriminator 1
 562 031c 8D8D      		ldd r24,Y+29
 563 031e 9E8D      		ldd r25,Y+30
 564 0320 0297      		sbiw r24,2
 565 0322 FC01      		movw r30,r24
 566 0324 8081      		ld r24,Z
 567 0326 8032      		cpi r24,lo8(32)
 568 0328 01F0      		breq .L25
 569               	.L24:
 161:lp_solve_5.5/lp_MPS.c ****       report(lp, IMPORTANT, "MPS_readfile: invalid data card; columns 23-24 must be blank\n");
 570               		.loc 1 161 0 is_stmt 1
 571 032a 80E0      		ldi r24,lo8(.LC3)
 572 032c 90E0      		ldi r25,hi8(.LC3)
 573 032e 892F      		mov r24,r25
 574 0330 8F93      		push r24
 575 0332 80E0      		ldi r24,lo8(.LC3)
 576 0334 90E0      		ldi r25,hi8(.LC3)
 577 0336 8F93      		push r24
 578 0338 1F92      		push __zero_reg__
 579 033a 83E0      		ldi r24,lo8(3)
 580 033c 8F93      		push r24
 581 033e 8A8D      		ldd r24,Y+26
 582 0340 8F93      		push r24
 583 0342 898D      		ldd r24,Y+25
 584 0344 8F93      		push r24
 585 0346 0E94 0000 		call report
 586 034a 0F90      		pop __tmp_reg__
 587 034c 0F90      		pop __tmp_reg__
 588 034e 0F90      		pop __tmp_reg__
 589 0350 0F90      		pop __tmp_reg__
 590 0352 0F90      		pop __tmp_reg__
 591 0354 0F90      		pop __tmp_reg__
 162:lp_solve_5.5/lp_MPS.c ****       return(-1);
 592               		.loc 1 162 0
 593 0356 8FEF      		ldi r24,lo8(-1)
 594 0358 9FEF      		ldi r25,lo8(-1)
 595 035a 00C0      		rjmp .L43
 596               	.L25:
 163:lp_solve_5.5/lp_MPS.c ****     }
 164:lp_solve_5.5/lp_MPS.c ****     strncpy(buf, line, 15);
 597               		.loc 1 164 0
 598 035c 2D8D      		ldd r18,Y+29
 599 035e 3E8D      		ldd r19,Y+30
 600 0360 CE01      		movw r24,r28
 601 0362 0796      		adiw r24,7
 602 0364 4FE0      		ldi r20,lo8(15)
 603 0366 50E0      		ldi r21,0
 604 0368 B901      		movw r22,r18
 605 036a 0E94 0000 		call strncpy
 165:lp_solve_5.5/lp_MPS.c ****     buf[15] = '\0';
 606               		.loc 1 165 0
 607 036e 1E8A      		std Y+22,__zero_reg__
 166:lp_solve_5.5/lp_MPS.c ****     for(ptr1 = ptr2 = buf; ; ptr1++)
 608               		.loc 1 166 0
 609 0370 CE01      		movw r24,r28
 610 0372 0796      		adiw r24,7
 611 0374 9E83      		std Y+6,r25
 612 0376 8D83      		std Y+5,r24
 613 0378 8D81      		ldd r24,Y+5
 614 037a 9E81      		ldd r25,Y+6
 615 037c 988F      		std Y+24,r25
 616 037e 8F8B      		std Y+23,r24
 617               	.L28:
 167:lp_solve_5.5/lp_MPS.c ****       if(!isspace((unsigned char) *ptr1))
 618               		.loc 1 167 0
 619 0380 8F89      		ldd r24,Y+23
 620 0382 988D      		ldd r25,Y+24
 621 0384 FC01      		movw r30,r24
 622 0386 8081      		ld r24,Z
 623 0388 882F      		mov r24,r24
 624 038a 90E0      		ldi r25,0
 625 038c 0E94 0000 		call isspace
 626 0390 892B      		or r24,r25
 627 0392 01F4      		brne .L26
 168:lp_solve_5.5/lp_MPS.c ****         if((*(ptr2++) = *ptr1) == 0)
 628               		.loc 1 168 0
 629 0394 8D81      		ldd r24,Y+5
 630 0396 9E81      		ldd r25,Y+6
 631 0398 9C01      		movw r18,r24
 632 039a 2F5F      		subi r18,-1
 633 039c 3F4F      		sbci r19,-1
 634 039e 3E83      		std Y+6,r19
 635 03a0 2D83      		std Y+5,r18
 636 03a2 2F89      		ldd r18,Y+23
 637 03a4 388D      		ldd r19,Y+24
 638 03a6 F901      		movw r30,r18
 639 03a8 2081      		ld r18,Z
 640 03aa FC01      		movw r30,r24
 641 03ac 2083      		st Z,r18
 642 03ae FC01      		movw r30,r24
 643 03b0 8081      		ld r24,Z
 644 03b2 8823      		tst r24
 645 03b4 01F0      		breq .L46
 646               	.L26:
 166:lp_solve_5.5/lp_MPS.c ****     for(ptr1 = ptr2 = buf; ; ptr1++)
 647               		.loc 1 166 0
 648 03b6 8F89      		ldd r24,Y+23
 649 03b8 988D      		ldd r25,Y+24
 650 03ba 0196      		adiw r24,1
 651 03bc 988F      		std Y+24,r25
 652 03be 8F8B      		std Y+23,r24
 169:lp_solve_5.5/lp_MPS.c ****           break;
 170:lp_solve_5.5/lp_MPS.c ****     /* *field4 = atof(buf); */
 171:lp_solve_5.5/lp_MPS.c ****     *field4 = strtod(buf, &ptr1);
 653               		.loc 1 171 0
 654 03c0 00C0      		rjmp .L28
 655               	.L46:
 169:lp_solve_5.5/lp_MPS.c ****           break;
 656               		.loc 1 169 0
 657 03c2 0000      		nop
 658               		.loc 1 171 0
 659 03c4 9E01      		movw r18,r28
 660 03c6 295E      		subi r18,-23
 661 03c8 3F4F      		sbci r19,-1
 662 03ca CE01      		movw r24,r28
 663 03cc 0796      		adiw r24,7
 664 03ce B901      		movw r22,r18
 665 03d0 0E94 0000 		call strtod
 666 03d4 DC01      		movw r26,r24
 667 03d6 CB01      		movw r24,r22
 668 03d8 2DA1      		ldd r18,Y+37
 669 03da 3EA1      		ldd r19,Y+38
 670 03dc F901      		movw r30,r18
 671 03de 8083      		st Z,r24
 672 03e0 9183      		std Z+1,r25
 673 03e2 A283      		std Z+2,r26
 674 03e4 B383      		std Z+3,r27
 172:lp_solve_5.5/lp_MPS.c ****     if(*ptr1) {
 675               		.loc 1 172 0
 676 03e6 8F89      		ldd r24,Y+23
 677 03e8 988D      		ldd r25,Y+24
 678 03ea FC01      		movw r30,r24
 679 03ec 8081      		ld r24,Z
 680 03ee 8823      		tst r24
 681 03f0 01F0      		breq .L29
 173:lp_solve_5.5/lp_MPS.c ****       report(lp, IMPORTANT, "MPS_readfile: invalid number in columns 25-36 \n");
 682               		.loc 1 173 0
 683 03f2 80E0      		ldi r24,lo8(.LC4)
 684 03f4 90E0      		ldi r25,hi8(.LC4)
 685 03f6 892F      		mov r24,r25
 686 03f8 8F93      		push r24
 687 03fa 80E0      		ldi r24,lo8(.LC4)
 688 03fc 90E0      		ldi r25,hi8(.LC4)
 689 03fe 8F93      		push r24
 690 0400 1F92      		push __zero_reg__
 691 0402 83E0      		ldi r24,lo8(3)
 692 0404 8F93      		push r24
 693 0406 8A8D      		ldd r24,Y+26
 694 0408 8F93      		push r24
 695 040a 898D      		ldd r24,Y+25
 696 040c 8F93      		push r24
 697 040e 0E94 0000 		call report
 698 0412 0F90      		pop __tmp_reg__
 699 0414 0F90      		pop __tmp_reg__
 700 0416 0F90      		pop __tmp_reg__
 701 0418 0F90      		pop __tmp_reg__
 702 041a 0F90      		pop __tmp_reg__
 703 041c 0F90      		pop __tmp_reg__
 174:lp_solve_5.5/lp_MPS.c ****       return(-1);
 704               		.loc 1 174 0
 705 041e 8FEF      		ldi r24,lo8(-1)
 706 0420 9FEF      		ldi r25,lo8(-1)
 707 0422 00C0      		rjmp .L43
 708               	.L29:
 175:lp_solve_5.5/lp_MPS.c ****     }
 176:lp_solve_5.5/lp_MPS.c ****     items++;
 709               		.loc 1 176 0
 710 0424 8981      		ldd r24,Y+1
 711 0426 9A81      		ldd r25,Y+2
 712 0428 0196      		adiw r24,1
 713 042a 9A83      		std Y+2,r25
 714 042c 8983      		std Y+1,r24
 715 042e 00C0      		rjmp .L30
 716               	.L23:
 177:lp_solve_5.5/lp_MPS.c ****   }
 178:lp_solve_5.5/lp_MPS.c ****   else
 179:lp_solve_5.5/lp_MPS.c ****     *field4 = 0;
 717               		.loc 1 179 0
 718 0430 8DA1      		ldd r24,Y+37
 719 0432 9EA1      		ldd r25,Y+38
 720 0434 FC01      		movw r30,r24
 721 0436 1082      		st Z,__zero_reg__
 722 0438 1182      		std Z+1,__zero_reg__
 723 043a 1282      		std Z+2,__zero_reg__
 724 043c 1382      		std Z+3,__zero_reg__
 725               	.L30:
 180:lp_solve_5.5/lp_MPS.c **** 
 181:lp_solve_5.5/lp_MPS.c ****   line += 15;
 726               		.loc 1 181 0
 727 043e 8D8D      		ldd r24,Y+29
 728 0440 9E8D      		ldd r25,Y+30
 729 0442 0F96      		adiw r24,15
 730 0444 9E8F      		std Y+30,r25
 731 0446 8D8F      		std Y+29,r24
 182:lp_solve_5.5/lp_MPS.c **** 
 183:lp_solve_5.5/lp_MPS.c ****   if(line_len >= 40) { /* name */
 732               		.loc 1 183 0
 733 0448 8B81      		ldd r24,Y+3
 734 044a 9C81      		ldd r25,Y+4
 735 044c 8897      		sbiw r24,40
 736 044e 04F0      		brlt .L31
 184:lp_solve_5.5/lp_MPS.c ****     if (line[-1] != ' ' || line[-2] != ' ' || line[-3] != ' ') {
 737               		.loc 1 184 0
 738 0450 8D8D      		ldd r24,Y+29
 739 0452 9E8D      		ldd r25,Y+30
 740 0454 0197      		sbiw r24,1
 741 0456 FC01      		movw r30,r24
 742 0458 8081      		ld r24,Z
 743 045a 8032      		cpi r24,lo8(32)
 744 045c 01F4      		brne .L32
 745               		.loc 1 184 0 is_stmt 0 discriminator 1
 746 045e 8D8D      		ldd r24,Y+29
 747 0460 9E8D      		ldd r25,Y+30
 748 0462 0297      		sbiw r24,2
 749 0464 FC01      		movw r30,r24
 750 0466 8081      		ld r24,Z
 751 0468 8032      		cpi r24,lo8(32)
 752 046a 01F4      		brne .L32
 753               		.loc 1 184 0 discriminator 2
 754 046c 8D8D      		ldd r24,Y+29
 755 046e 9E8D      		ldd r25,Y+30
 756 0470 0397      		sbiw r24,3
 757 0472 FC01      		movw r30,r24
 758 0474 8081      		ld r24,Z
 759 0476 8032      		cpi r24,lo8(32)
 760 0478 01F0      		breq .L33
 761               	.L32:
 185:lp_solve_5.5/lp_MPS.c ****       report(lp, IMPORTANT, "MPS_readfile: invalid data card; columns 37-39 must be blank\n");
 762               		.loc 1 185 0 is_stmt 1
 763 047a 80E0      		ldi r24,lo8(.LC5)
 764 047c 90E0      		ldi r25,hi8(.LC5)
 765 047e 892F      		mov r24,r25
 766 0480 8F93      		push r24
 767 0482 80E0      		ldi r24,lo8(.LC5)
 768 0484 90E0      		ldi r25,hi8(.LC5)
 769 0486 8F93      		push r24
 770 0488 1F92      		push __zero_reg__
 771 048a 83E0      		ldi r24,lo8(3)
 772 048c 8F93      		push r24
 773 048e 8A8D      		ldd r24,Y+26
 774 0490 8F93      		push r24
 775 0492 898D      		ldd r24,Y+25
 776 0494 8F93      		push r24
 777 0496 0E94 0000 		call report
 778 049a 0F90      		pop __tmp_reg__
 779 049c 0F90      		pop __tmp_reg__
 780 049e 0F90      		pop __tmp_reg__
 781 04a0 0F90      		pop __tmp_reg__
 782 04a2 0F90      		pop __tmp_reg__
 783 04a4 0F90      		pop __tmp_reg__
 186:lp_solve_5.5/lp_MPS.c ****       return(-1);
 784               		.loc 1 186 0
 785 04a6 8FEF      		ldi r24,lo8(-1)
 786 04a8 9FEF      		ldi r25,lo8(-1)
 787 04aa 00C0      		rjmp .L43
 788               	.L33:
 187:lp_solve_5.5/lp_MPS.c ****     }
 188:lp_solve_5.5/lp_MPS.c ****     namecpy(field5, line);
 789               		.loc 1 188 0
 790 04ac 2D8D      		ldd r18,Y+29
 791 04ae 3E8D      		ldd r19,Y+30
 792 04b0 8FA1      		ldd r24,Y+39
 793 04b2 98A5      		ldd r25,Y+40
 794 04b4 B901      		movw r22,r18
 795 04b6 0E94 0000 		call namecpy
 189:lp_solve_5.5/lp_MPS.c ****     items++;
 796               		.loc 1 189 0
 797 04ba 8981      		ldd r24,Y+1
 798 04bc 9A81      		ldd r25,Y+2
 799 04be 0196      		adiw r24,1
 800 04c0 9A83      		std Y+2,r25
 801 04c2 8983      		std Y+1,r24
 802 04c4 00C0      		rjmp .L34
 803               	.L31:
 190:lp_solve_5.5/lp_MPS.c ****   }
 191:lp_solve_5.5/lp_MPS.c ****   else
 192:lp_solve_5.5/lp_MPS.c ****     field5[0] = '\0';
 804               		.loc 1 192 0
 805 04c6 8FA1      		ldd r24,Y+39
 806 04c8 98A5      		ldd r25,Y+40
 807 04ca FC01      		movw r30,r24
 808 04cc 1082      		st Z,__zero_reg__
 809               	.L34:
 193:lp_solve_5.5/lp_MPS.c ****   line += 10;
 810               		.loc 1 193 0
 811 04ce 8D8D      		ldd r24,Y+29
 812 04d0 9E8D      		ldd r25,Y+30
 813 04d2 0A96      		adiw r24,10
 814 04d4 9E8F      		std Y+30,r25
 815 04d6 8D8F      		std Y+29,r24
 194:lp_solve_5.5/lp_MPS.c **** 
 195:lp_solve_5.5/lp_MPS.c ****   if(line_len >= 50) { /* number */
 816               		.loc 1 195 0
 817 04d8 8B81      		ldd r24,Y+3
 818 04da 9C81      		ldd r25,Y+4
 819 04dc C297      		sbiw r24,50
 820 04de 04F4      		brge .+2
 821 04e0 00C0      		rjmp .L35
 196:lp_solve_5.5/lp_MPS.c ****     if (line[-1] != ' ' || line[-2] != ' ') {
 822               		.loc 1 196 0
 823 04e2 8D8D      		ldd r24,Y+29
 824 04e4 9E8D      		ldd r25,Y+30
 825 04e6 0197      		sbiw r24,1
 826 04e8 FC01      		movw r30,r24
 827 04ea 8081      		ld r24,Z
 828 04ec 8032      		cpi r24,lo8(32)
 829 04ee 01F4      		brne .L36
 830               		.loc 1 196 0 is_stmt 0 discriminator 1
 831 04f0 8D8D      		ldd r24,Y+29
 832 04f2 9E8D      		ldd r25,Y+30
 833 04f4 0297      		sbiw r24,2
 834 04f6 FC01      		movw r30,r24
 835 04f8 8081      		ld r24,Z
 836 04fa 8032      		cpi r24,lo8(32)
 837 04fc 01F0      		breq .L37
 838               	.L36:
 197:lp_solve_5.5/lp_MPS.c ****       report(lp, IMPORTANT, "MPS_readfile: invalid data card; columns 48-49 must be blank\n");
 839               		.loc 1 197 0 is_stmt 1
 840 04fe 80E0      		ldi r24,lo8(.LC6)
 841 0500 90E0      		ldi r25,hi8(.LC6)
 842 0502 892F      		mov r24,r25
 843 0504 8F93      		push r24
 844 0506 80E0      		ldi r24,lo8(.LC6)
 845 0508 90E0      		ldi r25,hi8(.LC6)
 846 050a 8F93      		push r24
 847 050c 1F92      		push __zero_reg__
 848 050e 83E0      		ldi r24,lo8(3)
 849 0510 8F93      		push r24
 850 0512 8A8D      		ldd r24,Y+26
 851 0514 8F93      		push r24
 852 0516 898D      		ldd r24,Y+25
 853 0518 8F93      		push r24
 854 051a 0E94 0000 		call report
 855 051e 0F90      		pop __tmp_reg__
 856 0520 0F90      		pop __tmp_reg__
 857 0522 0F90      		pop __tmp_reg__
 858 0524 0F90      		pop __tmp_reg__
 859 0526 0F90      		pop __tmp_reg__
 860 0528 0F90      		pop __tmp_reg__
 198:lp_solve_5.5/lp_MPS.c ****       return(-1);
 861               		.loc 1 198 0
 862 052a 8FEF      		ldi r24,lo8(-1)
 863 052c 9FEF      		ldi r25,lo8(-1)
 864 052e 00C0      		rjmp .L43
 865               	.L37:
 199:lp_solve_5.5/lp_MPS.c ****     }
 200:lp_solve_5.5/lp_MPS.c ****     strncpy(buf, line, 15);
 866               		.loc 1 200 0
 867 0530 2D8D      		ldd r18,Y+29
 868 0532 3E8D      		ldd r19,Y+30
 869 0534 CE01      		movw r24,r28
 870 0536 0796      		adiw r24,7
 871 0538 4FE0      		ldi r20,lo8(15)
 872 053a 50E0      		ldi r21,0
 873 053c B901      		movw r22,r18
 874 053e 0E94 0000 		call strncpy
 201:lp_solve_5.5/lp_MPS.c ****     buf[15] = '\0';
 875               		.loc 1 201 0
 876 0542 1E8A      		std Y+22,__zero_reg__
 202:lp_solve_5.5/lp_MPS.c ****     for(ptr1 = ptr2 = buf; ; ptr1++)
 877               		.loc 1 202 0
 878 0544 CE01      		movw r24,r28
 879 0546 0796      		adiw r24,7
 880 0548 9E83      		std Y+6,r25
 881 054a 8D83      		std Y+5,r24
 882 054c 8D81      		ldd r24,Y+5
 883 054e 9E81      		ldd r25,Y+6
 884 0550 988F      		std Y+24,r25
 885 0552 8F8B      		std Y+23,r24
 886               	.L40:
 203:lp_solve_5.5/lp_MPS.c ****       if(!isspace((unsigned char) *ptr1))
 887               		.loc 1 203 0
 888 0554 8F89      		ldd r24,Y+23
 889 0556 988D      		ldd r25,Y+24
 890 0558 FC01      		movw r30,r24
 891 055a 8081      		ld r24,Z
 892 055c 882F      		mov r24,r24
 893 055e 90E0      		ldi r25,0
 894 0560 0E94 0000 		call isspace
 895 0564 892B      		or r24,r25
 896 0566 01F4      		brne .L38
 204:lp_solve_5.5/lp_MPS.c ****         if((*(ptr2++) = *ptr1) == 0)
 897               		.loc 1 204 0
 898 0568 8D81      		ldd r24,Y+5
 899 056a 9E81      		ldd r25,Y+6
 900 056c 9C01      		movw r18,r24
 901 056e 2F5F      		subi r18,-1
 902 0570 3F4F      		sbci r19,-1
 903 0572 3E83      		std Y+6,r19
 904 0574 2D83      		std Y+5,r18
 905 0576 2F89      		ldd r18,Y+23
 906 0578 388D      		ldd r19,Y+24
 907 057a F901      		movw r30,r18
 908 057c 2081      		ld r18,Z
 909 057e FC01      		movw r30,r24
 910 0580 2083      		st Z,r18
 911 0582 FC01      		movw r30,r24
 912 0584 8081      		ld r24,Z
 913 0586 8823      		tst r24
 914 0588 01F0      		breq .L47
 915               	.L38:
 202:lp_solve_5.5/lp_MPS.c ****     for(ptr1 = ptr2 = buf; ; ptr1++)
 916               		.loc 1 202 0
 917 058a 8F89      		ldd r24,Y+23
 918 058c 988D      		ldd r25,Y+24
 919 058e 0196      		adiw r24,1
 920 0590 988F      		std Y+24,r25
 921 0592 8F8B      		std Y+23,r24
 205:lp_solve_5.5/lp_MPS.c ****           break;
 206:lp_solve_5.5/lp_MPS.c ****     /* *field6 = atof(buf); */
 207:lp_solve_5.5/lp_MPS.c ****     *field6 = strtod(buf, &ptr1);
 922               		.loc 1 207 0
 923 0594 00C0      		rjmp .L40
 924               	.L47:
 205:lp_solve_5.5/lp_MPS.c ****           break;
 925               		.loc 1 205 0
 926 0596 0000      		nop
 927               		.loc 1 207 0
 928 0598 9E01      		movw r18,r28
 929 059a 295E      		subi r18,-23
 930 059c 3F4F      		sbci r19,-1
 931 059e CE01      		movw r24,r28
 932 05a0 0796      		adiw r24,7
 933 05a2 B901      		movw r22,r18
 934 05a4 0E94 0000 		call strtod
 935 05a8 DC01      		movw r26,r24
 936 05aa CB01      		movw r24,r22
 937 05ac 29A5      		ldd r18,Y+41
 938 05ae 3AA5      		ldd r19,Y+42
 939 05b0 F901      		movw r30,r18
 940 05b2 8083      		st Z,r24
 941 05b4 9183      		std Z+1,r25
 942 05b6 A283      		std Z+2,r26
 943 05b8 B383      		std Z+3,r27
 208:lp_solve_5.5/lp_MPS.c ****     if(*ptr1) {
 944               		.loc 1 208 0
 945 05ba 8F89      		ldd r24,Y+23
 946 05bc 988D      		ldd r25,Y+24
 947 05be FC01      		movw r30,r24
 948 05c0 8081      		ld r24,Z
 949 05c2 8823      		tst r24
 950 05c4 01F0      		breq .L41
 209:lp_solve_5.5/lp_MPS.c ****       report(lp, IMPORTANT, "MPS_readfile: invalid number in columns 50-61 \n");
 951               		.loc 1 209 0
 952 05c6 80E0      		ldi r24,lo8(.LC7)
 953 05c8 90E0      		ldi r25,hi8(.LC7)
 954 05ca 892F      		mov r24,r25
 955 05cc 8F93      		push r24
 956 05ce 80E0      		ldi r24,lo8(.LC7)
 957 05d0 90E0      		ldi r25,hi8(.LC7)
 958 05d2 8F93      		push r24
 959 05d4 1F92      		push __zero_reg__
 960 05d6 83E0      		ldi r24,lo8(3)
 961 05d8 8F93      		push r24
 962 05da 8A8D      		ldd r24,Y+26
 963 05dc 8F93      		push r24
 964 05de 898D      		ldd r24,Y+25
 965 05e0 8F93      		push r24
 966 05e2 0E94 0000 		call report
 967 05e6 0F90      		pop __tmp_reg__
 968 05e8 0F90      		pop __tmp_reg__
 969 05ea 0F90      		pop __tmp_reg__
 970 05ec 0F90      		pop __tmp_reg__
 971 05ee 0F90      		pop __tmp_reg__
 972 05f0 0F90      		pop __tmp_reg__
 210:lp_solve_5.5/lp_MPS.c ****       return(-1);
 973               		.loc 1 210 0
 974 05f2 8FEF      		ldi r24,lo8(-1)
 975 05f4 9FEF      		ldi r25,lo8(-1)
 976 05f6 00C0      		rjmp .L43
 977               	.L41:
 211:lp_solve_5.5/lp_MPS.c ****     }
 212:lp_solve_5.5/lp_MPS.c ****     items++;
 978               		.loc 1 212 0
 979 05f8 8981      		ldd r24,Y+1
 980 05fa 9A81      		ldd r25,Y+2
 981 05fc 0196      		adiw r24,1
 982 05fe 9A83      		std Y+2,r25
 983 0600 8983      		std Y+1,r24
 984 0602 00C0      		rjmp .L42
 985               	.L35:
 213:lp_solve_5.5/lp_MPS.c ****   }
 214:lp_solve_5.5/lp_MPS.c ****   else
 215:lp_solve_5.5/lp_MPS.c ****     *field6 = 0;
 986               		.loc 1 215 0
 987 0604 89A5      		ldd r24,Y+41
 988 0606 9AA5      		ldd r25,Y+42
 989 0608 FC01      		movw r30,r24
 990 060a 1082      		st Z,__zero_reg__
 991 060c 1182      		std Z+1,__zero_reg__
 992 060e 1282      		std Z+2,__zero_reg__
 993 0610 1382      		std Z+3,__zero_reg__
 994               	.L42:
 216:lp_solve_5.5/lp_MPS.c **** 
 217:lp_solve_5.5/lp_MPS.c ****   return(items);
 995               		.loc 1 217 0
 996 0612 8981      		ldd r24,Y+1
 997 0614 9A81      		ldd r25,Y+2
 998               	.L43:
 999               	/* epilogue start */
 218:lp_solve_5.5/lp_MPS.c **** }
 1000               		.loc 1 218 0 discriminator 1
 1001 0616 AA96      		adiw r28,42
 1002 0618 0FB6      		in __tmp_reg__,__SREG__
 1003 061a F894      		cli
 1004 061c DEBF      		out __SP_H__,r29
 1005 061e 0FBE      		out __SREG__,__tmp_reg__
 1006 0620 CDBF      		out __SP_L__,r28
 1007 0622 DF91      		pop r29
 1008 0624 CF91      		pop r28
 1009 0626 1F91      		pop r17
 1010 0628 0F91      		pop r16
 1011 062a FF90      		pop r15
 1012 062c EF90      		pop r14
 1013 062e DF90      		pop r13
 1014 0630 CF90      		pop r12
 1015 0632 BF90      		pop r11
 1016 0634 AF90      		pop r10
 1017 0636 9F90      		pop r9
 1018 0638 8F90      		pop r8
 1019 063a 0895      		ret
 1020               		.cfi_endproc
 1021               	.LFE8:
 1023               	.global	spaces
 1025               	spaces:
 1026               	.LFB9:
 219:lp_solve_5.5/lp_MPS.c **** 
 220:lp_solve_5.5/lp_MPS.c **** STATIC int spaces(char *line, int line_len)
 221:lp_solve_5.5/lp_MPS.c **** {
 1027               		.loc 1 221 0
 1028               		.cfi_startproc
 1029 063c CF93      		push r28
 1030               	.LCFI18:
 1031               		.cfi_def_cfa_offset 3
 1032               		.cfi_offset 28, -2
 1033 063e DF93      		push r29
 1034               	.LCFI19:
 1035               		.cfi_def_cfa_offset 4
 1036               		.cfi_offset 29, -3
 1037 0640 CDB7      		in r28,__SP_L__
 1038 0642 DEB7      		in r29,__SP_H__
 1039               	.LCFI20:
 1040               		.cfi_def_cfa_register 28
 1041 0644 2897      		sbiw r28,8
 1042               	.LCFI21:
 1043               		.cfi_def_cfa_offset 12
 1044 0646 0FB6      		in __tmp_reg__,__SREG__
 1045 0648 F894      		cli
 1046 064a DEBF      		out __SP_H__,r29
 1047 064c 0FBE      		out __SREG__,__tmp_reg__
 1048 064e CDBF      		out __SP_L__,r28
 1049               	/* prologue: function */
 1050               	/* frame size = 8 */
 1051               	/* stack size = 10 */
 1052               	.L__stack_usage = 10
 1053 0650 9E83      		std Y+6,r25
 1054 0652 8D83      		std Y+5,r24
 1055 0654 7887      		std Y+8,r23
 1056 0656 6F83      		std Y+7,r22
 222:lp_solve_5.5/lp_MPS.c ****   int l;
 223:lp_solve_5.5/lp_MPS.c ****   char *line1 = line;
 1057               		.loc 1 223 0
 1058 0658 8D81      		ldd r24,Y+5
 1059 065a 9E81      		ldd r25,Y+6
 1060 065c 9C83      		std Y+4,r25
 1061 065e 8B83      		std Y+3,r24
 224:lp_solve_5.5/lp_MPS.c **** 
 225:lp_solve_5.5/lp_MPS.c ****   while (*line1 == ' ')
 1062               		.loc 1 225 0
 1063 0660 00C0      		rjmp .L49
 1064               	.L50:
 226:lp_solve_5.5/lp_MPS.c ****     line1++;
 1065               		.loc 1 226 0
 1066 0662 8B81      		ldd r24,Y+3
 1067 0664 9C81      		ldd r25,Y+4
 1068 0666 0196      		adiw r24,1
 1069 0668 9C83      		std Y+4,r25
 1070 066a 8B83      		std Y+3,r24
 1071               	.L49:
 225:lp_solve_5.5/lp_MPS.c ****     line1++;
 1072               		.loc 1 225 0
 1073 066c 8B81      		ldd r24,Y+3
 1074 066e 9C81      		ldd r25,Y+4
 1075 0670 FC01      		movw r30,r24
 1076 0672 8081      		ld r24,Z
 1077 0674 8032      		cpi r24,lo8(32)
 1078 0676 01F0      		breq .L50
 227:lp_solve_5.5/lp_MPS.c ****   l = (int) (line1 - line);
 1079               		.loc 1 227 0
 1080 0678 2B81      		ldd r18,Y+3
 1081 067a 3C81      		ldd r19,Y+4
 1082 067c 8D81      		ldd r24,Y+5
 1083 067e 9E81      		ldd r25,Y+6
 1084 0680 A901      		movw r20,r18
 1085 0682 481B      		sub r20,r24
 1086 0684 590B      		sbc r21,r25
 1087 0686 CA01      		movw r24,r20
 1088 0688 9A83      		std Y+2,r25
 1089 068a 8983      		std Y+1,r24
 228:lp_solve_5.5/lp_MPS.c ****   if (line_len < l)
 1090               		.loc 1 228 0
 1091 068c 2F81      		ldd r18,Y+7
 1092 068e 3885      		ldd r19,Y+8
 1093 0690 8981      		ldd r24,Y+1
 1094 0692 9A81      		ldd r25,Y+2
 1095 0694 2817      		cp r18,r24
 1096 0696 3907      		cpc r19,r25
 1097 0698 04F4      		brge .L51
 229:lp_solve_5.5/lp_MPS.c ****     l = line_len;
 1098               		.loc 1 229 0
 1099 069a 8F81      		ldd r24,Y+7
 1100 069c 9885      		ldd r25,Y+8
 1101 069e 9A83      		std Y+2,r25
 1102 06a0 8983      		std Y+1,r24
 1103               	.L51:
 230:lp_solve_5.5/lp_MPS.c ****   return(l);
 1104               		.loc 1 230 0
 1105 06a2 8981      		ldd r24,Y+1
 1106 06a4 9A81      		ldd r25,Y+2
 1107               	/* epilogue start */
 231:lp_solve_5.5/lp_MPS.c **** }
 1108               		.loc 1 231 0
 1109 06a6 2896      		adiw r28,8
 1110 06a8 0FB6      		in __tmp_reg__,__SREG__
 1111 06aa F894      		cli
 1112 06ac DEBF      		out __SP_H__,r29
 1113 06ae 0FBE      		out __SREG__,__tmp_reg__
 1114 06b0 CDBF      		out __SP_L__,r28
 1115 06b2 DF91      		pop r29
 1116 06b4 CF91      		pop r28
 1117 06b6 0895      		ret
 1118               		.cfi_endproc
 1119               	.LFE9:
 1121               	.global	lenfield
 1123               	lenfield:
 1124               	.LFB10:
 232:lp_solve_5.5/lp_MPS.c **** 
 233:lp_solve_5.5/lp_MPS.c **** STATIC int lenfield(char *line, int line_len)
 234:lp_solve_5.5/lp_MPS.c **** {
 1125               		.loc 1 234 0
 1126               		.cfi_startproc
 1127 06b8 CF93      		push r28
 1128               	.LCFI22:
 1129               		.cfi_def_cfa_offset 3
 1130               		.cfi_offset 28, -2
 1131 06ba DF93      		push r29
 1132               	.LCFI23:
 1133               		.cfi_def_cfa_offset 4
 1134               		.cfi_offset 29, -3
 1135 06bc CDB7      		in r28,__SP_L__
 1136 06be DEB7      		in r29,__SP_H__
 1137               	.LCFI24:
 1138               		.cfi_def_cfa_register 28
 1139 06c0 2897      		sbiw r28,8
 1140               	.LCFI25:
 1141               		.cfi_def_cfa_offset 12
 1142 06c2 0FB6      		in __tmp_reg__,__SREG__
 1143 06c4 F894      		cli
 1144 06c6 DEBF      		out __SP_H__,r29
 1145 06c8 0FBE      		out __SREG__,__tmp_reg__
 1146 06ca CDBF      		out __SP_L__,r28
 1147               	/* prologue: function */
 1148               	/* frame size = 8 */
 1149               	/* stack size = 10 */
 1150               	.L__stack_usage = 10
 1151 06cc 9E83      		std Y+6,r25
 1152 06ce 8D83      		std Y+5,r24
 1153 06d0 7887      		std Y+8,r23
 1154 06d2 6F83      		std Y+7,r22
 235:lp_solve_5.5/lp_MPS.c ****   int l;
 236:lp_solve_5.5/lp_MPS.c ****   char *line1 = line;
 1155               		.loc 1 236 0
 1156 06d4 8D81      		ldd r24,Y+5
 1157 06d6 9E81      		ldd r25,Y+6
 1158 06d8 9C83      		std Y+4,r25
 1159 06da 8B83      		std Y+3,r24
 237:lp_solve_5.5/lp_MPS.c **** 
 238:lp_solve_5.5/lp_MPS.c ****   while ((*line1) && (*line1 != ' '))
 1160               		.loc 1 238 0
 1161 06dc 00C0      		rjmp .L54
 1162               	.L56:
 239:lp_solve_5.5/lp_MPS.c ****     line1++;
 1163               		.loc 1 239 0
 1164 06de 8B81      		ldd r24,Y+3
 1165 06e0 9C81      		ldd r25,Y+4
 1166 06e2 0196      		adiw r24,1
 1167 06e4 9C83      		std Y+4,r25
 1168 06e6 8B83      		std Y+3,r24
 1169               	.L54:
 238:lp_solve_5.5/lp_MPS.c ****     line1++;
 1170               		.loc 1 238 0
 1171 06e8 8B81      		ldd r24,Y+3
 1172 06ea 9C81      		ldd r25,Y+4
 1173 06ec FC01      		movw r30,r24
 1174 06ee 8081      		ld r24,Z
 1175 06f0 8823      		tst r24
 1176 06f2 01F0      		breq .L55
 238:lp_solve_5.5/lp_MPS.c ****     line1++;
 1177               		.loc 1 238 0 is_stmt 0 discriminator 1
 1178 06f4 8B81      		ldd r24,Y+3
 1179 06f6 9C81      		ldd r25,Y+4
 1180 06f8 FC01      		movw r30,r24
 1181 06fa 8081      		ld r24,Z
 1182 06fc 8032      		cpi r24,lo8(32)
 1183 06fe 01F4      		brne .L56
 1184               	.L55:
 240:lp_solve_5.5/lp_MPS.c ****   l = (int) (line1 - line);
 1185               		.loc 1 240 0 is_stmt 1
 1186 0700 2B81      		ldd r18,Y+3
 1187 0702 3C81      		ldd r19,Y+4
 1188 0704 8D81      		ldd r24,Y+5
 1189 0706 9E81      		ldd r25,Y+6
 1190 0708 A901      		movw r20,r18
 1191 070a 481B      		sub r20,r24
 1192 070c 590B      		sbc r21,r25
 1193 070e CA01      		movw r24,r20
 1194 0710 9A83      		std Y+2,r25
 1195 0712 8983      		std Y+1,r24
 241:lp_solve_5.5/lp_MPS.c ****   if (line_len < l)
 1196               		.loc 1 241 0
 1197 0714 2F81      		ldd r18,Y+7
 1198 0716 3885      		ldd r19,Y+8
 1199 0718 8981      		ldd r24,Y+1
 1200 071a 9A81      		ldd r25,Y+2
 1201 071c 2817      		cp r18,r24
 1202 071e 3907      		cpc r19,r25
 1203 0720 04F4      		brge .L57
 242:lp_solve_5.5/lp_MPS.c ****     l = line_len;
 1204               		.loc 1 242 0
 1205 0722 8F81      		ldd r24,Y+7
 1206 0724 9885      		ldd r25,Y+8
 1207 0726 9A83      		std Y+2,r25
 1208 0728 8983      		std Y+1,r24
 1209               	.L57:
 243:lp_solve_5.5/lp_MPS.c ****   return(l);
 1210               		.loc 1 243 0
 1211 072a 8981      		ldd r24,Y+1
 1212 072c 9A81      		ldd r25,Y+2
 1213               	/* epilogue start */
 244:lp_solve_5.5/lp_MPS.c **** }
 1214               		.loc 1 244 0
 1215 072e 2896      		adiw r28,8
 1216 0730 0FB6      		in __tmp_reg__,__SREG__
 1217 0732 F894      		cli
 1218 0734 DEBF      		out __SP_H__,r29
 1219 0736 0FBE      		out __SREG__,__tmp_reg__
 1220 0738 CDBF      		out __SP_L__,r28
 1221 073a DF91      		pop r29
 1222 073c CF91      		pop r28
 1223 073e 0895      		ret
 1224               		.cfi_endproc
 1225               	.LFE10:
 1227               		.section	.rodata
 1228               	.LC8:
 1229 0194 274D 4152 		.string	"'MARKER'"
 1229      4B45 5227 
 1229      00
 1230               	.LC9:
 1231 019d 4652 00   		.string	"FR"
 1232               	.LC10:
 1233 01a0 4D49 00   		.string	"MI"
 1234               	.LC11:
 1235 01a3 504C 00   		.string	"PL"
 1236               	.LC12:
 1237 01a6 4256 00   		.string	"BV"
 1238               		.text
 1239               	.global	scan_lineFREE
 1241               	scan_lineFREE:
 1242               	.LFB11:
 245:lp_solve_5.5/lp_MPS.c **** 
 246:lp_solve_5.5/lp_MPS.c **** /* scan_line for fixed MPS format */
 247:lp_solve_5.5/lp_MPS.c **** STATIC int scan_lineFREE(lprec *lp, int section, char* line, char *field1, char *field2, char *fiel
 248:lp_solve_5.5/lp_MPS.c ****                          double *field4, char *field5, double *field6)
 249:lp_solve_5.5/lp_MPS.c **** {
 1243               		.loc 1 249 0
 1244               		.cfi_startproc
 1245 0740 8F92      		push r8
 1246               	.LCFI26:
 1247               		.cfi_def_cfa_offset 3
 1248               		.cfi_offset 8, -2
 1249 0742 9F92      		push r9
 1250               	.LCFI27:
 1251               		.cfi_def_cfa_offset 4
 1252               		.cfi_offset 9, -3
 1253 0744 AF92      		push r10
 1254               	.LCFI28:
 1255               		.cfi_def_cfa_offset 5
 1256               		.cfi_offset 10, -4
 1257 0746 BF92      		push r11
 1258               	.LCFI29:
 1259               		.cfi_def_cfa_offset 6
 1260               		.cfi_offset 11, -5
 1261 0748 CF92      		push r12
 1262               	.LCFI30:
 1263               		.cfi_def_cfa_offset 7
 1264               		.cfi_offset 12, -6
 1265 074a DF92      		push r13
 1266               	.LCFI31:
 1267               		.cfi_def_cfa_offset 8
 1268               		.cfi_offset 13, -7
 1269 074c EF92      		push r14
 1270               	.LCFI32:
 1271               		.cfi_def_cfa_offset 9
 1272               		.cfi_offset 14, -8
 1273 074e FF92      		push r15
 1274               	.LCFI33:
 1275               		.cfi_def_cfa_offset 10
 1276               		.cfi_offset 15, -9
 1277 0750 0F93      		push r16
 1278               	.LCFI34:
 1279               		.cfi_def_cfa_offset 11
 1280               		.cfi_offset 16, -10
 1281 0752 1F93      		push r17
 1282               	.LCFI35:
 1283               		.cfi_def_cfa_offset 12
 1284               		.cfi_offset 17, -11
 1285 0754 CF93      		push r28
 1286               	.LCFI36:
 1287               		.cfi_def_cfa_offset 13
 1288               		.cfi_offset 28, -12
 1289 0756 DF93      		push r29
 1290               	.LCFI37:
 1291               		.cfi_def_cfa_offset 14
 1292               		.cfi_offset 29, -13
 1293 0758 CDB7      		in r28,__SP_L__
 1294 075a DEB7      		in r29,__SP_H__
 1295               	.LCFI38:
 1296               		.cfi_def_cfa_register 28
 1297 075c C252      		subi r28,34
 1298 075e D140      		sbci r29,1
 1299               	.LCFI39:
 1300               		.cfi_def_cfa_offset 304
 1301 0760 0FB6      		in __tmp_reg__,__SREG__
 1302 0762 F894      		cli
 1303 0764 DEBF      		out __SP_H__,r29
 1304 0766 0FBE      		out __SREG__,__tmp_reg__
 1305 0768 CDBF      		out __SP_L__,r28
 1306               	/* prologue: function */
 1307               	/* frame size = 290 */
 1308               	/* stack size = 302 */
 1309               	.L__stack_usage = 302
 1310 076a FE01      		movw r30,r28
 1311 076c EF5E      		subi r30,-17
 1312 076e FE4F      		sbci r31,-2
 1313 0770 9183      		std Z+1,r25
 1314 0772 8083      		st Z,r24
 1315 0774 CE01      		movw r24,r28
 1316 0776 8D5E      		subi r24,-19
 1317 0778 9E4F      		sbci r25,-2
 1318 077a FC01      		movw r30,r24
 1319 077c 7183      		std Z+1,r23
 1320 077e 6083      		st Z,r22
 1321 0780 CE01      		movw r24,r28
 1322 0782 8B5E      		subi r24,-21
 1323 0784 9E4F      		sbci r25,-2
 1324 0786 FC01      		movw r30,r24
 1325 0788 5183      		std Z+1,r21
 1326 078a 4083      		st Z,r20
 1327 078c CE01      		movw r24,r28
 1328 078e 895E      		subi r24,-23
 1329 0790 9E4F      		sbci r25,-2
 1330 0792 FC01      		movw r30,r24
 1331 0794 3183      		std Z+1,r19
 1332 0796 2083      		st Z,r18
 1333 0798 CE01      		movw r24,r28
 1334 079a 875E      		subi r24,-25
 1335 079c 9E4F      		sbci r25,-2
 1336 079e FC01      		movw r30,r24
 1337 07a0 1183      		std Z+1,r17
 1338 07a2 0083      		st Z,r16
 1339 07a4 CE01      		movw r24,r28
 1340 07a6 855E      		subi r24,-27
 1341 07a8 9E4F      		sbci r25,-2
 1342 07aa FC01      		movw r30,r24
 1343 07ac F182      		std Z+1,r15
 1344 07ae E082      		st Z,r14
 1345 07b0 CE01      		movw r24,r28
 1346 07b2 835E      		subi r24,-29
 1347 07b4 9E4F      		sbci r25,-2
 1348 07b6 FC01      		movw r30,r24
 1349 07b8 D182      		std Z+1,r13
 1350 07ba C082      		st Z,r12
 1351 07bc CE01      		movw r24,r28
 1352 07be 815E      		subi r24,-31
 1353 07c0 9E4F      		sbci r25,-2
 1354 07c2 FC01      		movw r30,r24
 1355 07c4 B182      		std Z+1,r11
 1356 07c6 A082      		st Z,r10
 1357 07c8 CE01      		movw r24,r28
 1358 07ca 8F5D      		subi r24,-33
 1359 07cc 9E4F      		sbci r25,-2
 1360 07ce FC01      		movw r30,r24
 1361 07d0 9182      		std Z+1,r9
 1362 07d2 8082      		st Z,r8
 250:lp_solve_5.5/lp_MPS.c ****   int  items = 0, line_len, len;
 1363               		.loc 1 250 0
 1364 07d4 1A82      		std Y+2,__zero_reg__
 1365 07d6 1982      		std Y+1,__zero_reg__
 251:lp_solve_5.5/lp_MPS.c ****   char buf[256], *ptr1 = NULL, *ptr2;
 1366               		.loc 1 251 0
 1367 07d8 CE01      		movw r24,r28
 1368 07da 815F      		subi r24,-15
 1369 07dc 9E4F      		sbci r25,-2
 1370 07de FC01      		movw r30,r24
 1371 07e0 1182      		std Z+1,__zero_reg__
 1372 07e2 1082      		st Z,__zero_reg__
 252:lp_solve_5.5/lp_MPS.c **** 
 253:lp_solve_5.5/lp_MPS.c ****   line_len = (int) strlen(line);
 1373               		.loc 1 253 0
 1374 07e4 CE01      		movw r24,r28
 1375 07e6 8B5E      		subi r24,-21
 1376 07e8 9E4F      		sbci r25,-2
 1377 07ea FC01      		movw r30,r24
 1378 07ec 8081      		ld r24,Z
 1379 07ee 9181      		ldd r25,Z+1
 1380 07f0 0E94 0000 		call strlen
 1381 07f4 9C83      		std Y+4,r25
 1382 07f6 8B83      		std Y+3,r24
 254:lp_solve_5.5/lp_MPS.c ****   while ((line_len) && ((line[line_len-1] == '\n') || (line[line_len-1] == '\r') || (line[line_len-
 1383               		.loc 1 254 0
 1384 07f8 00C0      		rjmp .L60
 1385               	.L62:
 255:lp_solve_5.5/lp_MPS.c ****    line_len--;
 1386               		.loc 1 255 0
 1387 07fa 8B81      		ldd r24,Y+3
 1388 07fc 9C81      		ldd r25,Y+4
 1389 07fe 0197      		sbiw r24,1
 1390 0800 9C83      		std Y+4,r25
 1391 0802 8B83      		std Y+3,r24
 1392               	.L60:
 254:lp_solve_5.5/lp_MPS.c ****   while ((line_len) && ((line[line_len-1] == '\n') || (line[line_len-1] == '\r') || (line[line_len-
 1393               		.loc 1 254 0
 1394 0804 8B81      		ldd r24,Y+3
 1395 0806 9C81      		ldd r25,Y+4
 1396 0808 892B      		or r24,r25
 1397 080a 01F0      		breq .L61
 254:lp_solve_5.5/lp_MPS.c ****   while ((line_len) && ((line[line_len-1] == '\n') || (line[line_len-1] == '\r') || (line[line_len-
 1398               		.loc 1 254 0 is_stmt 0 discriminator 1
 1399 080c 8B81      		ldd r24,Y+3
 1400 080e 9C81      		ldd r25,Y+4
 1401 0810 0197      		sbiw r24,1
 1402 0812 9E01      		movw r18,r28
 1403 0814 2B5E      		subi r18,-21
 1404 0816 3E4F      		sbci r19,-2
 1405 0818 F901      		movw r30,r18
 1406 081a 2081      		ld r18,Z
 1407 081c 3181      		ldd r19,Z+1
 1408 081e 820F      		add r24,r18
 1409 0820 931F      		adc r25,r19
 1410 0822 FC01      		movw r30,r24
 1411 0824 8081      		ld r24,Z
 1412 0826 8A30      		cpi r24,lo8(10)
 1413 0828 01F0      		breq .L62
 254:lp_solve_5.5/lp_MPS.c ****   while ((line_len) && ((line[line_len-1] == '\n') || (line[line_len-1] == '\r') || (line[line_len-
 1414               		.loc 1 254 0 discriminator 2
 1415 082a 8B81      		ldd r24,Y+3
 1416 082c 9C81      		ldd r25,Y+4
 1417 082e 0197      		sbiw r24,1
 1418 0830 9E01      		movw r18,r28
 1419 0832 2B5E      		subi r18,-21
 1420 0834 3E4F      		sbci r19,-2
 1421 0836 F901      		movw r30,r18
 1422 0838 2081      		ld r18,Z
 1423 083a 3181      		ldd r19,Z+1
 1424 083c 820F      		add r24,r18
 1425 083e 931F      		adc r25,r19
 1426 0840 FC01      		movw r30,r24
 1427 0842 8081      		ld r24,Z
 1428 0844 8D30      		cpi r24,lo8(13)
 1429 0846 01F0      		breq .L62
 254:lp_solve_5.5/lp_MPS.c ****   while ((line_len) && ((line[line_len-1] == '\n') || (line[line_len-1] == '\r') || (line[line_len-
 1430               		.loc 1 254 0 discriminator 3
 1431 0848 8B81      		ldd r24,Y+3
 1432 084a 9C81      		ldd r25,Y+4
 1433 084c 0197      		sbiw r24,1
 1434 084e 9E01      		movw r18,r28
 1435 0850 2B5E      		subi r18,-21
 1436 0852 3E4F      		sbci r19,-2
 1437 0854 F901      		movw r30,r18
 1438 0856 2081      		ld r18,Z
 1439 0858 3181      		ldd r19,Z+1
 1440 085a 820F      		add r24,r18
 1441 085c 931F      		adc r25,r19
 1442 085e FC01      		movw r30,r24
 1443 0860 8081      		ld r24,Z
 1444 0862 8032      		cpi r24,lo8(32)
 1445 0864 01F0      		breq .L62
 1446               	.L61:
 256:lp_solve_5.5/lp_MPS.c **** 
 257:lp_solve_5.5/lp_MPS.c ****   len = spaces(line, line_len);
 1447               		.loc 1 257 0 is_stmt 1
 1448 0866 2B81      		ldd r18,Y+3
 1449 0868 3C81      		ldd r19,Y+4
 1450 086a CE01      		movw r24,r28
 1451 086c 8B5E      		subi r24,-21
 1452 086e 9E4F      		sbci r25,-2
 1453 0870 FC01      		movw r30,r24
 1454 0872 8081      		ld r24,Z
 1455 0874 9181      		ldd r25,Z+1
 1456 0876 B901      		movw r22,r18
 1457 0878 0E94 0000 		call spaces
 1458 087c 9E87      		std Y+14,r25
 1459 087e 8D87      		std Y+13,r24
 258:lp_solve_5.5/lp_MPS.c ****   line += len;
 1460               		.loc 1 258 0
 1461 0880 2D85      		ldd r18,Y+13
 1462 0882 3E85      		ldd r19,Y+14
 1463 0884 CE01      		movw r24,r28
 1464 0886 8B5E      		subi r24,-21
 1465 0888 9E4F      		sbci r25,-2
 1466 088a AE01      		movw r20,r28
 1467 088c 4B5E      		subi r20,-21
 1468 088e 5E4F      		sbci r21,-2
 1469 0890 FA01      		movw r30,r20
 1470 0892 4081      		ld r20,Z
 1471 0894 5181      		ldd r21,Z+1
 1472 0896 240F      		add r18,r20
 1473 0898 351F      		adc r19,r21
 1474 089a FC01      		movw r30,r24
 1475 089c 3183      		std Z+1,r19
 1476 089e 2083      		st Z,r18
 259:lp_solve_5.5/lp_MPS.c ****   line_len -= len;
 1477               		.loc 1 259 0
 1478 08a0 2B81      		ldd r18,Y+3
 1479 08a2 3C81      		ldd r19,Y+4
 1480 08a4 8D85      		ldd r24,Y+13
 1481 08a6 9E85      		ldd r25,Y+14
 1482 08a8 A901      		movw r20,r18
 1483 08aa 481B      		sub r20,r24
 1484 08ac 590B      		sbc r21,r25
 1485 08ae CA01      		movw r24,r20
 1486 08b0 9C83      		std Y+4,r25
 1487 08b2 8B83      		std Y+3,r24
 260:lp_solve_5.5/lp_MPS.c **** 
 261:lp_solve_5.5/lp_MPS.c ****   if ((section == MPSCOLUMNS) || (section == MPSRHS) || (section == MPSRANGES)) {
 1488               		.loc 1 261 0
 1489 08b4 CE01      		movw r24,r28
 1490 08b6 8D5E      		subi r24,-19
 1491 08b8 9E4F      		sbci r25,-2
 1492 08ba FC01      		movw r30,r24
 1493 08bc 8081      		ld r24,Z
 1494 08be 9181      		ldd r25,Z+1
 1495 08c0 0197      		sbiw r24,1
 1496 08c2 01F0      		breq .L63
 1497               		.loc 1 261 0 is_stmt 0 discriminator 1
 1498 08c4 CE01      		movw r24,r28
 1499 08c6 8D5E      		subi r24,-19
 1500 08c8 9E4F      		sbci r25,-2
 1501 08ca FC01      		movw r30,r24
 1502 08cc 8081      		ld r24,Z
 1503 08ce 9181      		ldd r25,Z+1
 1504 08d0 0297      		sbiw r24,2
 1505 08d2 01F0      		breq .L63
 1506               		.loc 1 261 0 discriminator 2
 1507 08d4 CE01      		movw r24,r28
 1508 08d6 8D5E      		subi r24,-19
 1509 08d8 9E4F      		sbci r25,-2
 1510 08da FC01      		movw r30,r24
 1511 08dc 8081      		ld r24,Z
 1512 08de 9181      		ldd r25,Z+1
 1513 08e0 0497      		sbiw r24,4
 1514 08e2 01F4      		brne .L64
 1515               	.L63:
 262:lp_solve_5.5/lp_MPS.c ****     field1[0] = '\0';
 1516               		.loc 1 262 0 is_stmt 1
 1517 08e4 CE01      		movw r24,r28
 1518 08e6 895E      		subi r24,-23
 1519 08e8 9E4F      		sbci r25,-2
 1520 08ea FC01      		movw r30,r24
 1521 08ec 8081      		ld r24,Z
 1522 08ee 9181      		ldd r25,Z+1
 1523 08f0 FC01      		movw r30,r24
 1524 08f2 1082      		st Z,__zero_reg__
 263:lp_solve_5.5/lp_MPS.c ****     items++;
 1525               		.loc 1 263 0
 1526 08f4 8981      		ldd r24,Y+1
 1527 08f6 9A81      		ldd r25,Y+2
 1528 08f8 0196      		adiw r24,1
 1529 08fa 9A83      		std Y+2,r25
 1530 08fc 8983      		std Y+1,r24
 1531 08fe 00C0      		rjmp .L65
 1532               	.L64:
 264:lp_solve_5.5/lp_MPS.c ****   }
 265:lp_solve_5.5/lp_MPS.c ****   else {
 266:lp_solve_5.5/lp_MPS.c ****     len = lenfield(line, line_len);
 1533               		.loc 1 266 0
 1534 0900 2B81      		ldd r18,Y+3
 1535 0902 3C81      		ldd r19,Y+4
 1536 0904 CE01      		movw r24,r28
 1537 0906 8B5E      		subi r24,-21
 1538 0908 9E4F      		sbci r25,-2
 1539 090a FC01      		movw r30,r24
 1540 090c 8081      		ld r24,Z
 1541 090e 9181      		ldd r25,Z+1
 1542 0910 B901      		movw r22,r18
 1543 0912 0E94 0000 		call lenfield
 1544 0916 9E87      		std Y+14,r25
 1545 0918 8D87      		std Y+13,r24
 267:lp_solve_5.5/lp_MPS.c ****     if(line_len >= 1) { /* spaces or N/L/G/E or UP/LO */
 1546               		.loc 1 267 0
 1547 091a 8B81      		ldd r24,Y+3
 1548 091c 9C81      		ldd r25,Y+4
 1549 091e 1816      		cp __zero_reg__,r24
 1550 0920 1906      		cpc __zero_reg__,r25
 1551 0922 04F0      		brlt .+2
 1552 0924 00C0      		rjmp .L66
 268:lp_solve_5.5/lp_MPS.c ****       strncpy(buf, line, len);
 1553               		.loc 1 268 0
 1554 0926 4D85      		ldd r20,Y+13
 1555 0928 5E85      		ldd r21,Y+14
 1556 092a CE01      		movw r24,r28
 1557 092c 8B5E      		subi r24,-21
 1558 092e 9E4F      		sbci r25,-2
 1559 0930 FC01      		movw r30,r24
 1560 0932 2081      		ld r18,Z
 1561 0934 3181      		ldd r19,Z+1
 1562 0936 CE01      		movw r24,r28
 1563 0938 0F96      		adiw r24,15
 1564 093a B901      		movw r22,r18
 1565 093c 0E94 0000 		call strncpy
 269:lp_solve_5.5/lp_MPS.c ****       buf[len] = '\0';
 1566               		.loc 1 269 0
 1567 0940 9E01      		movw r18,r28
 1568 0942 215F      		subi r18,-15
 1569 0944 3F4F      		sbci r19,-1
 1570 0946 8D85      		ldd r24,Y+13
 1571 0948 9E85      		ldd r25,Y+14
 1572 094a 820F      		add r24,r18
 1573 094c 931F      		adc r25,r19
 1574 094e FC01      		movw r30,r24
 1575 0950 1082      		st Z,__zero_reg__
 270:lp_solve_5.5/lp_MPS.c ****       sscanf(buf, "%s", field1);
 1576               		.loc 1 270 0
 1577 0952 CE01      		movw r24,r28
 1578 0954 895E      		subi r24,-23
 1579 0956 9E4F      		sbci r25,-2
 1580 0958 FC01      		movw r30,r24
 1581 095a 2181      		ldd r18,Z+1
 1582 095c 2F93      		push r18
 1583 095e FC01      		movw r30,r24
 1584 0960 8081      		ld r24,Z
 1585 0962 8F93      		push r24
 1586 0964 80E0      		ldi r24,lo8(.LC0)
 1587 0966 90E0      		ldi r25,hi8(.LC0)
 1588 0968 892F      		mov r24,r25
 1589 096a 8F93      		push r24
 1590 096c 80E0      		ldi r24,lo8(.LC0)
 1591 096e 90E0      		ldi r25,hi8(.LC0)
 1592 0970 8F93      		push r24
 1593 0972 CE01      		movw r24,r28
 1594 0974 0F96      		adiw r24,15
 1595 0976 292F      		mov r18,r25
 1596 0978 2F93      		push r18
 1597 097a 8F93      		push r24
 1598 097c 0E94 0000 		call sscanf
 1599 0980 0F90      		pop __tmp_reg__
 1600 0982 0F90      		pop __tmp_reg__
 1601 0984 0F90      		pop __tmp_reg__
 1602 0986 0F90      		pop __tmp_reg__
 1603 0988 0F90      		pop __tmp_reg__
 1604 098a 0F90      		pop __tmp_reg__
 271:lp_solve_5.5/lp_MPS.c ****       if(section == MPSBOUNDS) {
 1605               		.loc 1 271 0
 1606 098c CE01      		movw r24,r28
 1607 098e 8D5E      		subi r24,-19
 1608 0990 9E4F      		sbci r25,-2
 1609 0992 FC01      		movw r30,r24
 1610 0994 8081      		ld r24,Z
 1611 0996 9181      		ldd r25,Z+1
 1612 0998 0397      		sbiw r24,3
 1613 099a 01F4      		brne .L67
 272:lp_solve_5.5/lp_MPS.c ****         for(ptr1 = field1; *ptr1; ptr1++)
 1614               		.loc 1 272 0
 1615 099c CE01      		movw r24,r28
 1616 099e 815F      		subi r24,-15
 1617 09a0 9E4F      		sbci r25,-2
 1618 09a2 9E01      		movw r18,r28
 1619 09a4 295E      		subi r18,-23
 1620 09a6 3E4F      		sbci r19,-2
 1621 09a8 F901      		movw r30,r18
 1622 09aa 2081      		ld r18,Z
 1623 09ac 3181      		ldd r19,Z+1
 1624 09ae FC01      		movw r30,r24
 1625 09b0 3183      		std Z+1,r19
 1626 09b2 2083      		st Z,r18
 1627 09b4 00C0      		rjmp .L68
 1628               	.L69:
 273:lp_solve_5.5/lp_MPS.c ****           *ptr1=(char)toupper(*ptr1);
 1629               		.loc 1 273 0 discriminator 3
 1630 09b6 CE01      		movw r24,r28
 1631 09b8 815F      		subi r24,-15
 1632 09ba 9E4F      		sbci r25,-2
 1633 09bc FC01      		movw r30,r24
 1634 09be 0081      		ld r16,Z
 1635 09c0 1181      		ldd r17,Z+1
 1636 09c2 CE01      		movw r24,r28
 1637 09c4 815F      		subi r24,-15
 1638 09c6 9E4F      		sbci r25,-2
 1639 09c8 FC01      		movw r30,r24
 1640 09ca 8081      		ld r24,Z
 1641 09cc 9181      		ldd r25,Z+1
 1642 09ce FC01      		movw r30,r24
 1643 09d0 8081      		ld r24,Z
 1644 09d2 882F      		mov r24,r24
 1645 09d4 90E0      		ldi r25,0
 1646 09d6 0E94 0000 		call toupper
 1647 09da F801      		movw r30,r16
 1648 09dc 8083      		st Z,r24
 272:lp_solve_5.5/lp_MPS.c ****         for(ptr1 = field1; *ptr1; ptr1++)
 1649               		.loc 1 272 0 discriminator 3
 1650 09de CE01      		movw r24,r28
 1651 09e0 815F      		subi r24,-15
 1652 09e2 9E4F      		sbci r25,-2
 1653 09e4 FC01      		movw r30,r24
 1654 09e6 8081      		ld r24,Z
 1655 09e8 9181      		ldd r25,Z+1
 1656 09ea 9C01      		movw r18,r24
 1657 09ec 2F5F      		subi r18,-1
 1658 09ee 3F4F      		sbci r19,-1
 1659 09f0 CE01      		movw r24,r28
 1660 09f2 815F      		subi r24,-15
 1661 09f4 9E4F      		sbci r25,-2
 1662 09f6 FC01      		movw r30,r24
 1663 09f8 3183      		std Z+1,r19
 1664 09fa 2083      		st Z,r18
 1665               	.L68:
 272:lp_solve_5.5/lp_MPS.c ****         for(ptr1 = field1; *ptr1; ptr1++)
 1666               		.loc 1 272 0 is_stmt 0 discriminator 1
 1667 09fc CE01      		movw r24,r28
 1668 09fe 815F      		subi r24,-15
 1669 0a00 9E4F      		sbci r25,-2
 1670 0a02 FC01      		movw r30,r24
 1671 0a04 8081      		ld r24,Z
 1672 0a06 9181      		ldd r25,Z+1
 1673 0a08 FC01      		movw r30,r24
 1674 0a0a 8081      		ld r24,Z
 1675 0a0c 8823      		tst r24
 1676 0a0e 01F4      		brne .L69
 1677               	.L67:
 274:lp_solve_5.5/lp_MPS.c ****       }
 275:lp_solve_5.5/lp_MPS.c ****       items++;
 1678               		.loc 1 275 0 is_stmt 1
 1679 0a10 8981      		ldd r24,Y+1
 1680 0a12 9A81      		ldd r25,Y+2
 1681 0a14 0196      		adiw r24,1
 1682 0a16 9A83      		std Y+2,r25
 1683 0a18 8983      		std Y+1,r24
 1684 0a1a 00C0      		rjmp .L70
 1685               	.L66:
 276:lp_solve_5.5/lp_MPS.c ****     }
 277:lp_solve_5.5/lp_MPS.c ****     else
 278:lp_solve_5.5/lp_MPS.c ****       field1[0] = '\0';
 1686               		.loc 1 278 0
 1687 0a1c CE01      		movw r24,r28
 1688 0a1e 895E      		subi r24,-23
 1689 0a20 9E4F      		sbci r25,-2
 1690 0a22 FC01      		movw r30,r24
 1691 0a24 8081      		ld r24,Z
 1692 0a26 9181      		ldd r25,Z+1
 1693 0a28 FC01      		movw r30,r24
 1694 0a2a 1082      		st Z,__zero_reg__
 1695               	.L70:
 279:lp_solve_5.5/lp_MPS.c **** 
 280:lp_solve_5.5/lp_MPS.c ****     line += len;
 1696               		.loc 1 280 0
 1697 0a2c 2D85      		ldd r18,Y+13
 1698 0a2e 3E85      		ldd r19,Y+14
 1699 0a30 CE01      		movw r24,r28
 1700 0a32 8B5E      		subi r24,-21
 1701 0a34 9E4F      		sbci r25,-2
 1702 0a36 AE01      		movw r20,r28
 1703 0a38 4B5E      		subi r20,-21
 1704 0a3a 5E4F      		sbci r21,-2
 1705 0a3c FA01      		movw r30,r20
 1706 0a3e 4081      		ld r20,Z
 1707 0a40 5181      		ldd r21,Z+1
 1708 0a42 240F      		add r18,r20
 1709 0a44 351F      		adc r19,r21
 1710 0a46 FC01      		movw r30,r24
 1711 0a48 3183      		std Z+1,r19
 1712 0a4a 2083      		st Z,r18
 281:lp_solve_5.5/lp_MPS.c ****     line_len -= len;
 1713               		.loc 1 281 0
 1714 0a4c 2B81      		ldd r18,Y+3
 1715 0a4e 3C81      		ldd r19,Y+4
 1716 0a50 8D85      		ldd r24,Y+13
 1717 0a52 9E85      		ldd r25,Y+14
 1718 0a54 A901      		movw r20,r18
 1719 0a56 481B      		sub r20,r24
 1720 0a58 590B      		sbc r21,r25
 1721 0a5a CA01      		movw r24,r20
 1722 0a5c 9C83      		std Y+4,r25
 1723 0a5e 8B83      		std Y+3,r24
 282:lp_solve_5.5/lp_MPS.c **** 
 283:lp_solve_5.5/lp_MPS.c ****     len = spaces(line, line_len);
 1724               		.loc 1 283 0
 1725 0a60 2B81      		ldd r18,Y+3
 1726 0a62 3C81      		ldd r19,Y+4
 1727 0a64 CE01      		movw r24,r28
 1728 0a66 8B5E      		subi r24,-21
 1729 0a68 9E4F      		sbci r25,-2
 1730 0a6a FC01      		movw r30,r24
 1731 0a6c 8081      		ld r24,Z
 1732 0a6e 9181      		ldd r25,Z+1
 1733 0a70 B901      		movw r22,r18
 1734 0a72 0E94 0000 		call spaces
 1735 0a76 9E87      		std Y+14,r25
 1736 0a78 8D87      		std Y+13,r24
 284:lp_solve_5.5/lp_MPS.c ****     line += len;
 1737               		.loc 1 284 0
 1738 0a7a 2D85      		ldd r18,Y+13
 1739 0a7c 3E85      		ldd r19,Y+14
 1740 0a7e CE01      		movw r24,r28
 1741 0a80 8B5E      		subi r24,-21
 1742 0a82 9E4F      		sbci r25,-2
 1743 0a84 AE01      		movw r20,r28
 1744 0a86 4B5E      		subi r20,-21
 1745 0a88 5E4F      		sbci r21,-2
 1746 0a8a FA01      		movw r30,r20
 1747 0a8c 4081      		ld r20,Z
 1748 0a8e 5181      		ldd r21,Z+1
 1749 0a90 240F      		add r18,r20
 1750 0a92 351F      		adc r19,r21
 1751 0a94 FC01      		movw r30,r24
 1752 0a96 3183      		std Z+1,r19
 1753 0a98 2083      		st Z,r18
 285:lp_solve_5.5/lp_MPS.c ****     line_len -= len;
 1754               		.loc 1 285 0
 1755 0a9a 2B81      		ldd r18,Y+3
 1756 0a9c 3C81      		ldd r19,Y+4
 1757 0a9e 8D85      		ldd r24,Y+13
 1758 0aa0 9E85      		ldd r25,Y+14
 1759 0aa2 A901      		movw r20,r18
 1760 0aa4 481B      		sub r20,r24
 1761 0aa6 590B      		sbc r21,r25
 1762 0aa8 CA01      		movw r24,r20
 1763 0aaa 9C83      		std Y+4,r25
 1764 0aac 8B83      		std Y+3,r24
 1765               	.L65:
 286:lp_solve_5.5/lp_MPS.c ****   }
 287:lp_solve_5.5/lp_MPS.c **** 
 288:lp_solve_5.5/lp_MPS.c ****   len = lenfield(line, line_len);
 1766               		.loc 1 288 0
 1767 0aae 2B81      		ldd r18,Y+3
 1768 0ab0 3C81      		ldd r19,Y+4
 1769 0ab2 CE01      		movw r24,r28
 1770 0ab4 8B5E      		subi r24,-21
 1771 0ab6 9E4F      		sbci r25,-2
 1772 0ab8 FC01      		movw r30,r24
 1773 0aba 8081      		ld r24,Z
 1774 0abc 9181      		ldd r25,Z+1
 1775 0abe B901      		movw r22,r18
 1776 0ac0 0E94 0000 		call lenfield
 1777 0ac4 9E87      		std Y+14,r25
 1778 0ac6 8D87      		std Y+13,r24
 289:lp_solve_5.5/lp_MPS.c ****   if(line_len >= 1) { /* name */
 1779               		.loc 1 289 0
 1780 0ac8 8B81      		ldd r24,Y+3
 1781 0aca 9C81      		ldd r25,Y+4
 1782 0acc 1816      		cp __zero_reg__,r24
 1783 0ace 1906      		cpc __zero_reg__,r25
 1784 0ad0 04F4      		brge .L71
 290:lp_solve_5.5/lp_MPS.c ****     strncpy(field2, line, len);
 1785               		.loc 1 290 0
 1786 0ad2 4D85      		ldd r20,Y+13
 1787 0ad4 5E85      		ldd r21,Y+14
 1788 0ad6 CE01      		movw r24,r28
 1789 0ad8 8B5E      		subi r24,-21
 1790 0ada 9E4F      		sbci r25,-2
 1791 0adc FC01      		movw r30,r24
 1792 0ade 2081      		ld r18,Z
 1793 0ae0 3181      		ldd r19,Z+1
 1794 0ae2 CE01      		movw r24,r28
 1795 0ae4 875E      		subi r24,-25
 1796 0ae6 9E4F      		sbci r25,-2
 1797 0ae8 FC01      		movw r30,r24
 1798 0aea 8081      		ld r24,Z
 1799 0aec 9181      		ldd r25,Z+1
 1800 0aee B901      		movw r22,r18
 1801 0af0 0E94 0000 		call strncpy
 291:lp_solve_5.5/lp_MPS.c ****     field2[len] = '\0';
 1802               		.loc 1 291 0
 1803 0af4 8D85      		ldd r24,Y+13
 1804 0af6 9E85      		ldd r25,Y+14
 1805 0af8 9E01      		movw r18,r28
 1806 0afa 275E      		subi r18,-25
 1807 0afc 3E4F      		sbci r19,-2
 1808 0afe F901      		movw r30,r18
 1809 0b00 2081      		ld r18,Z
 1810 0b02 3181      		ldd r19,Z+1
 1811 0b04 820F      		add r24,r18
 1812 0b06 931F      		adc r25,r19
 1813 0b08 FC01      		movw r30,r24
 1814 0b0a 1082      		st Z,__zero_reg__
 292:lp_solve_5.5/lp_MPS.c ****     items++;
 1815               		.loc 1 292 0
 1816 0b0c 8981      		ldd r24,Y+1
 1817 0b0e 9A81      		ldd r25,Y+2
 1818 0b10 0196      		adiw r24,1
 1819 0b12 9A83      		std Y+2,r25
 1820 0b14 8983      		std Y+1,r24
 1821 0b16 00C0      		rjmp .L72
 1822               	.L71:
 293:lp_solve_5.5/lp_MPS.c ****   }
 294:lp_solve_5.5/lp_MPS.c ****   else
 295:lp_solve_5.5/lp_MPS.c ****     field2[0] = '\0';
 1823               		.loc 1 295 0
 1824 0b18 CE01      		movw r24,r28
 1825 0b1a 875E      		subi r24,-25
 1826 0b1c 9E4F      		sbci r25,-2
 1827 0b1e FC01      		movw r30,r24
 1828 0b20 8081      		ld r24,Z
 1829 0b22 9181      		ldd r25,Z+1
 1830 0b24 FC01      		movw r30,r24
 1831 0b26 1082      		st Z,__zero_reg__
 1832               	.L72:
 296:lp_solve_5.5/lp_MPS.c **** 
 297:lp_solve_5.5/lp_MPS.c ****   line += len;
 1833               		.loc 1 297 0
 1834 0b28 2D85      		ldd r18,Y+13
 1835 0b2a 3E85      		ldd r19,Y+14
 1836 0b2c CE01      		movw r24,r28
 1837 0b2e 8B5E      		subi r24,-21
 1838 0b30 9E4F      		sbci r25,-2
 1839 0b32 AE01      		movw r20,r28
 1840 0b34 4B5E      		subi r20,-21
 1841 0b36 5E4F      		sbci r21,-2
 1842 0b38 FA01      		movw r30,r20
 1843 0b3a 4081      		ld r20,Z
 1844 0b3c 5181      		ldd r21,Z+1
 1845 0b3e 240F      		add r18,r20
 1846 0b40 351F      		adc r19,r21
 1847 0b42 FC01      		movw r30,r24
 1848 0b44 3183      		std Z+1,r19
 1849 0b46 2083      		st Z,r18
 298:lp_solve_5.5/lp_MPS.c ****   line_len -= len;
 1850               		.loc 1 298 0
 1851 0b48 2B81      		ldd r18,Y+3
 1852 0b4a 3C81      		ldd r19,Y+4
 1853 0b4c 8D85      		ldd r24,Y+13
 1854 0b4e 9E85      		ldd r25,Y+14
 1855 0b50 A901      		movw r20,r18
 1856 0b52 481B      		sub r20,r24
 1857 0b54 590B      		sbc r21,r25
 1858 0b56 CA01      		movw r24,r20
 1859 0b58 9C83      		std Y+4,r25
 1860 0b5a 8B83      		std Y+3,r24
 299:lp_solve_5.5/lp_MPS.c **** 
 300:lp_solve_5.5/lp_MPS.c ****   len = spaces(line, line_len);
 1861               		.loc 1 300 0
 1862 0b5c 2B81      		ldd r18,Y+3
 1863 0b5e 3C81      		ldd r19,Y+4
 1864 0b60 CE01      		movw r24,r28
 1865 0b62 8B5E      		subi r24,-21
 1866 0b64 9E4F      		sbci r25,-2
 1867 0b66 FC01      		movw r30,r24
 1868 0b68 8081      		ld r24,Z
 1869 0b6a 9181      		ldd r25,Z+1
 1870 0b6c B901      		movw r22,r18
 1871 0b6e 0E94 0000 		call spaces
 1872 0b72 9E87      		std Y+14,r25
 1873 0b74 8D87      		std Y+13,r24
 301:lp_solve_5.5/lp_MPS.c ****   line += len;
 1874               		.loc 1 301 0
 1875 0b76 2D85      		ldd r18,Y+13
 1876 0b78 3E85      		ldd r19,Y+14
 1877 0b7a CE01      		movw r24,r28
 1878 0b7c 8B5E      		subi r24,-21
 1879 0b7e 9E4F      		sbci r25,-2
 1880 0b80 AE01      		movw r20,r28
 1881 0b82 4B5E      		subi r20,-21
 1882 0b84 5E4F      		sbci r21,-2
 1883 0b86 FA01      		movw r30,r20
 1884 0b88 4081      		ld r20,Z
 1885 0b8a 5181      		ldd r21,Z+1
 1886 0b8c 240F      		add r18,r20
 1887 0b8e 351F      		adc r19,r21
 1888 0b90 FC01      		movw r30,r24
 1889 0b92 3183      		std Z+1,r19
 1890 0b94 2083      		st Z,r18
 302:lp_solve_5.5/lp_MPS.c ****   line_len -= len;
 1891               		.loc 1 302 0
 1892 0b96 2B81      		ldd r18,Y+3
 1893 0b98 3C81      		ldd r19,Y+4
 1894 0b9a 8D85      		ldd r24,Y+13
 1895 0b9c 9E85      		ldd r25,Y+14
 1896 0b9e A901      		movw r20,r18
 1897 0ba0 481B      		sub r20,r24
 1898 0ba2 590B      		sbc r21,r25
 1899 0ba4 CA01      		movw r24,r20
 1900 0ba6 9C83      		std Y+4,r25
 1901 0ba8 8B83      		std Y+3,r24
 303:lp_solve_5.5/lp_MPS.c **** 
 304:lp_solve_5.5/lp_MPS.c ****   len = lenfield(line, line_len);
 1902               		.loc 1 304 0
 1903 0baa 2B81      		ldd r18,Y+3
 1904 0bac 3C81      		ldd r19,Y+4
 1905 0bae CE01      		movw r24,r28
 1906 0bb0 8B5E      		subi r24,-21
 1907 0bb2 9E4F      		sbci r25,-2
 1908 0bb4 FC01      		movw r30,r24
 1909 0bb6 8081      		ld r24,Z
 1910 0bb8 9181      		ldd r25,Z+1
 1911 0bba B901      		movw r22,r18
 1912 0bbc 0E94 0000 		call lenfield
 1913 0bc0 9E87      		std Y+14,r25
 1914 0bc2 8D87      		std Y+13,r24
 305:lp_solve_5.5/lp_MPS.c ****   if(line_len >= 1) { /* name */
 1915               		.loc 1 305 0
 1916 0bc4 8B81      		ldd r24,Y+3
 1917 0bc6 9C81      		ldd r25,Y+4
 1918 0bc8 1816      		cp __zero_reg__,r24
 1919 0bca 1906      		cpc __zero_reg__,r25
 1920 0bcc 04F4      		brge .L73
 306:lp_solve_5.5/lp_MPS.c ****     strncpy(field3, line, len);
 1921               		.loc 1 306 0
 1922 0bce 4D85      		ldd r20,Y+13
 1923 0bd0 5E85      		ldd r21,Y+14
 1924 0bd2 CE01      		movw r24,r28
 1925 0bd4 8B5E      		subi r24,-21
 1926 0bd6 9E4F      		sbci r25,-2
 1927 0bd8 FC01      		movw r30,r24
 1928 0bda 2081      		ld r18,Z
 1929 0bdc 3181      		ldd r19,Z+1
 1930 0bde CE01      		movw r24,r28
 1931 0be0 855E      		subi r24,-27
 1932 0be2 9E4F      		sbci r25,-2
 1933 0be4 FC01      		movw r30,r24
 1934 0be6 8081      		ld r24,Z
 1935 0be8 9181      		ldd r25,Z+1
 1936 0bea B901      		movw r22,r18
 1937 0bec 0E94 0000 		call strncpy
 307:lp_solve_5.5/lp_MPS.c ****     field3[len] = '\0';
 1938               		.loc 1 307 0
 1939 0bf0 8D85      		ldd r24,Y+13
 1940 0bf2 9E85      		ldd r25,Y+14
 1941 0bf4 9E01      		movw r18,r28
 1942 0bf6 255E      		subi r18,-27
 1943 0bf8 3E4F      		sbci r19,-2
 1944 0bfa F901      		movw r30,r18
 1945 0bfc 2081      		ld r18,Z
 1946 0bfe 3181      		ldd r19,Z+1
 1947 0c00 820F      		add r24,r18
 1948 0c02 931F      		adc r25,r19
 1949 0c04 FC01      		movw r30,r24
 1950 0c06 1082      		st Z,__zero_reg__
 308:lp_solve_5.5/lp_MPS.c ****     items++;
 1951               		.loc 1 308 0
 1952 0c08 8981      		ldd r24,Y+1
 1953 0c0a 9A81      		ldd r25,Y+2
 1954 0c0c 0196      		adiw r24,1
 1955 0c0e 9A83      		std Y+2,r25
 1956 0c10 8983      		std Y+1,r24
 1957 0c12 00C0      		rjmp .L74
 1958               	.L73:
 309:lp_solve_5.5/lp_MPS.c ****   }
 310:lp_solve_5.5/lp_MPS.c ****   else
 311:lp_solve_5.5/lp_MPS.c ****     field3[0] = '\0';
 1959               		.loc 1 311 0
 1960 0c14 CE01      		movw r24,r28
 1961 0c16 855E      		subi r24,-27
 1962 0c18 9E4F      		sbci r25,-2
 1963 0c1a FC01      		movw r30,r24
 1964 0c1c 8081      		ld r24,Z
 1965 0c1e 9181      		ldd r25,Z+1
 1966 0c20 FC01      		movw r30,r24
 1967 0c22 1082      		st Z,__zero_reg__
 1968               	.L74:
 312:lp_solve_5.5/lp_MPS.c **** 
 313:lp_solve_5.5/lp_MPS.c ****   line += len;
 1969               		.loc 1 313 0
 1970 0c24 2D85      		ldd r18,Y+13
 1971 0c26 3E85      		ldd r19,Y+14
 1972 0c28 CE01      		movw r24,r28
 1973 0c2a 8B5E      		subi r24,-21
 1974 0c2c 9E4F      		sbci r25,-2
 1975 0c2e AE01      		movw r20,r28
 1976 0c30 4B5E      		subi r20,-21
 1977 0c32 5E4F      		sbci r21,-2
 1978 0c34 FA01      		movw r30,r20
 1979 0c36 4081      		ld r20,Z
 1980 0c38 5181      		ldd r21,Z+1
 1981 0c3a 240F      		add r18,r20
 1982 0c3c 351F      		adc r19,r21
 1983 0c3e FC01      		movw r30,r24
 1984 0c40 3183      		std Z+1,r19
 1985 0c42 2083      		st Z,r18
 314:lp_solve_5.5/lp_MPS.c ****   line_len -= len;
 1986               		.loc 1 314 0
 1987 0c44 2B81      		ldd r18,Y+3
 1988 0c46 3C81      		ldd r19,Y+4
 1989 0c48 8D85      		ldd r24,Y+13
 1990 0c4a 9E85      		ldd r25,Y+14
 1991 0c4c A901      		movw r20,r18
 1992 0c4e 481B      		sub r20,r24
 1993 0c50 590B      		sbc r21,r25
 1994 0c52 CA01      		movw r24,r20
 1995 0c54 9C83      		std Y+4,r25
 1996 0c56 8B83      		std Y+3,r24
 315:lp_solve_5.5/lp_MPS.c **** 
 316:lp_solve_5.5/lp_MPS.c ****   len = spaces(line, line_len);
 1997               		.loc 1 316 0
 1998 0c58 2B81      		ldd r18,Y+3
 1999 0c5a 3C81      		ldd r19,Y+4
 2000 0c5c CE01      		movw r24,r28
 2001 0c5e 8B5E      		subi r24,-21
 2002 0c60 9E4F      		sbci r25,-2
 2003 0c62 FC01      		movw r30,r24
 2004 0c64 8081      		ld r24,Z
 2005 0c66 9181      		ldd r25,Z+1
 2006 0c68 B901      		movw r22,r18
 2007 0c6a 0E94 0000 		call spaces
 2008 0c6e 9E87      		std Y+14,r25
 2009 0c70 8D87      		std Y+13,r24
 317:lp_solve_5.5/lp_MPS.c ****   line += len;
 2010               		.loc 1 317 0
 2011 0c72 2D85      		ldd r18,Y+13
 2012 0c74 3E85      		ldd r19,Y+14
 2013 0c76 CE01      		movw r24,r28
 2014 0c78 8B5E      		subi r24,-21
 2015 0c7a 9E4F      		sbci r25,-2
 2016 0c7c AE01      		movw r20,r28
 2017 0c7e 4B5E      		subi r20,-21
 2018 0c80 5E4F      		sbci r21,-2
 2019 0c82 FA01      		movw r30,r20
 2020 0c84 4081      		ld r20,Z
 2021 0c86 5181      		ldd r21,Z+1
 2022 0c88 240F      		add r18,r20
 2023 0c8a 351F      		adc r19,r21
 2024 0c8c FC01      		movw r30,r24
 2025 0c8e 3183      		std Z+1,r19
 2026 0c90 2083      		st Z,r18
 318:lp_solve_5.5/lp_MPS.c ****   line_len -= len;
 2027               		.loc 1 318 0
 2028 0c92 2B81      		ldd r18,Y+3
 2029 0c94 3C81      		ldd r19,Y+4
 2030 0c96 8D85      		ldd r24,Y+13
 2031 0c98 9E85      		ldd r25,Y+14
 2032 0c9a A901      		movw r20,r18
 2033 0c9c 481B      		sub r20,r24
 2034 0c9e 590B      		sbc r21,r25
 2035 0ca0 CA01      		movw r24,r20
 2036 0ca2 9C83      		std Y+4,r25
 2037 0ca4 8B83      		std Y+3,r24
 319:lp_solve_5.5/lp_MPS.c **** 
 320:lp_solve_5.5/lp_MPS.c ****   if (*field3) {
 2038               		.loc 1 320 0
 2039 0ca6 CE01      		movw r24,r28
 2040 0ca8 855E      		subi r24,-27
 2041 0caa 9E4F      		sbci r25,-2
 2042 0cac FC01      		movw r30,r24
 2043 0cae 8081      		ld r24,Z
 2044 0cb0 9181      		ldd r25,Z+1
 2045 0cb2 FC01      		movw r30,r24
 2046 0cb4 8081      		ld r24,Z
 2047 0cb6 8823      		tst r24
 2048 0cb8 01F4      		brne .+2
 2049 0cba 00C0      		rjmp .L75
 321:lp_solve_5.5/lp_MPS.c ****     if((section == MPSCOLUMNS) && (strcmp(field3, "'MARKER'") == 0)) {
 2050               		.loc 1 321 0
 2051 0cbc CE01      		movw r24,r28
 2052 0cbe 8D5E      		subi r24,-19
 2053 0cc0 9E4F      		sbci r25,-2
 2054 0cc2 FC01      		movw r30,r24
 2055 0cc4 8081      		ld r24,Z
 2056 0cc6 9181      		ldd r25,Z+1
 2057 0cc8 0197      		sbiw r24,1
 2058 0cca 01F4      		brne .L76
 2059               		.loc 1 321 0 is_stmt 0 discriminator 1
 2060 0ccc CE01      		movw r24,r28
 2061 0cce 855E      		subi r24,-27
 2062 0cd0 9E4F      		sbci r25,-2
 2063 0cd2 FC01      		movw r30,r24
 2064 0cd4 8081      		ld r24,Z
 2065 0cd6 9181      		ldd r25,Z+1
 2066 0cd8 60E0      		ldi r22,lo8(.LC8)
 2067 0cda 70E0      		ldi r23,hi8(.LC8)
 2068 0cdc 0E94 0000 		call strcmp
 2069 0ce0 892B      		or r24,r25
 2070 0ce2 01F4      		brne .L76
 322:lp_solve_5.5/lp_MPS.c ****       *field4 = 0;
 2071               		.loc 1 322 0 is_stmt 1
 2072 0ce4 CE01      		movw r24,r28
 2073 0ce6 835E      		subi r24,-29
 2074 0ce8 9E4F      		sbci r25,-2
 2075 0cea FC01      		movw r30,r24
 2076 0cec 8081      		ld r24,Z
 2077 0cee 9181      		ldd r25,Z+1
 2078 0cf0 FC01      		movw r30,r24
 2079 0cf2 1082      		st Z,__zero_reg__
 2080 0cf4 1182      		std Z+1,__zero_reg__
 2081 0cf6 1282      		std Z+2,__zero_reg__
 2082 0cf8 1382      		std Z+3,__zero_reg__
 323:lp_solve_5.5/lp_MPS.c ****       items++;
 2083               		.loc 1 323 0
 2084 0cfa 8981      		ldd r24,Y+1
 2085 0cfc 9A81      		ldd r25,Y+2
 2086 0cfe 0196      		adiw r24,1
 2087 0d00 9A83      		std Y+2,r25
 2088 0d02 8983      		std Y+1,r24
 324:lp_solve_5.5/lp_MPS.c ****       ptr1 = field3;
 2089               		.loc 1 324 0
 2090 0d04 CE01      		movw r24,r28
 2091 0d06 815F      		subi r24,-15
 2092 0d08 9E4F      		sbci r25,-2
 2093 0d0a 9E01      		movw r18,r28
 2094 0d0c 255E      		subi r18,-27
 2095 0d0e 3E4F      		sbci r19,-2
 2096 0d10 F901      		movw r30,r18
 2097 0d12 2081      		ld r18,Z
 2098 0d14 3181      		ldd r19,Z+1
 2099 0d16 FC01      		movw r30,r24
 2100 0d18 3183      		std Z+1,r19
 2101 0d1a 2083      		st Z,r18
 2102 0d1c 00C0      		rjmp .L89
 2103               	.L76:
 325:lp_solve_5.5/lp_MPS.c ****     }
 326:lp_solve_5.5/lp_MPS.c ****     else if((section == MPSBOUNDS) &&
 2104               		.loc 1 326 0
 2105 0d1e CE01      		movw r24,r28
 2106 0d20 8D5E      		subi r24,-19
 2107 0d22 9E4F      		sbci r25,-2
 2108 0d24 FC01      		movw r30,r24
 2109 0d26 8081      		ld r24,Z
 2110 0d28 9181      		ldd r25,Z+1
 2111 0d2a 0397      		sbiw r24,3
 2112 0d2c 01F4      		brne .L78
 327:lp_solve_5.5/lp_MPS.c ****             ((strcmp(field1, "FR") == 0) || (strcmp(field1, "MI") == 0) || (strcmp(field1, "PL") ==
 2113               		.loc 1 327 0 discriminator 1
 2114 0d2e CE01      		movw r24,r28
 2115 0d30 895E      		subi r24,-23
 2116 0d32 9E4F      		sbci r25,-2
 2117 0d34 FC01      		movw r30,r24
 2118 0d36 8081      		ld r24,Z
 2119 0d38 9181      		ldd r25,Z+1
 2120 0d3a 60E0      		ldi r22,lo8(.LC9)
 2121 0d3c 70E0      		ldi r23,hi8(.LC9)
 2122 0d3e 0E94 0000 		call strcmp
 326:lp_solve_5.5/lp_MPS.c ****             ((strcmp(field1, "FR") == 0) || (strcmp(field1, "MI") == 0) || (strcmp(field1, "PL") ==
 2123               		.loc 1 326 0 discriminator 1
 2124 0d42 892B      		or r24,r25
 2125 0d44 01F4      		brne .+2
 2126 0d46 00C0      		rjmp .L114
 2127               		.loc 1 327 0
 2128 0d48 CE01      		movw r24,r28
 2129 0d4a 895E      		subi r24,-23
 2130 0d4c 9E4F      		sbci r25,-2
 2131 0d4e FC01      		movw r30,r24
 2132 0d50 8081      		ld r24,Z
 2133 0d52 9181      		ldd r25,Z+1
 2134 0d54 60E0      		ldi r22,lo8(.LC10)
 2135 0d56 70E0      		ldi r23,hi8(.LC10)
 2136 0d58 0E94 0000 		call strcmp
 2137 0d5c 892B      		or r24,r25
 2138 0d5e 01F4      		brne .+2
 2139 0d60 00C0      		rjmp .L114
 2140               		.loc 1 327 0 is_stmt 0 discriminator 1
 2141 0d62 CE01      		movw r24,r28
 2142 0d64 895E      		subi r24,-23
 2143 0d66 9E4F      		sbci r25,-2
 2144 0d68 FC01      		movw r30,r24
 2145 0d6a 8081      		ld r24,Z
 2146 0d6c 9181      		ldd r25,Z+1
 2147 0d6e 60E0      		ldi r22,lo8(.LC11)
 2148 0d70 70E0      		ldi r23,hi8(.LC11)
 2149 0d72 0E94 0000 		call strcmp
 2150 0d76 892B      		or r24,r25
 2151 0d78 01F4      		brne .+2
 2152 0d7a 00C0      		rjmp .L114
 2153               		.loc 1 327 0 discriminator 2
 2154 0d7c CE01      		movw r24,r28
 2155 0d7e 895E      		subi r24,-23
 2156 0d80 9E4F      		sbci r25,-2
 2157 0d82 FC01      		movw r30,r24
 2158 0d84 8081      		ld r24,Z
 2159 0d86 9181      		ldd r25,Z+1
 2160 0d88 60E0      		ldi r22,lo8(.LC12)
 2161 0d8a 70E0      		ldi r23,hi8(.LC12)
 2162 0d8c 0E94 0000 		call strcmp
 2163 0d90 892B      		or r24,r25
 2164 0d92 01F4      		brne .+2
 2165 0d94 00C0      		rjmp .L114
 2166               	.L78:
 2167               	.LBB2:
 328:lp_solve_5.5/lp_MPS.c ****       /* field3 *is* the variable name */;
 329:lp_solve_5.5/lp_MPS.c ****     else {
 330:lp_solve_5.5/lp_MPS.c ****       /* Some free MPS formats allow that field 2 is not provided after the first time.
 331:lp_solve_5.5/lp_MPS.c ****          The fieldname is then the same as the the defined field the line before.
 332:lp_solve_5.5/lp_MPS.c ****          In that case field2 shifts to field3, field1 shifts to field 2.
 333:lp_solve_5.5/lp_MPS.c ****          This situation is tested by checking if field3 is numerical AND there are an even number o
 334:lp_solve_5.5/lp_MPS.c ****       */
 335:lp_solve_5.5/lp_MPS.c ****       char *line1 = line;
 2168               		.loc 1 335 0 is_stmt 1
 2169 0d96 CE01      		movw r24,r28
 2170 0d98 8B5E      		subi r24,-21
 2171 0d9a 9E4F      		sbci r25,-2
 2172 0d9c FC01      		movw r30,r24
 2173 0d9e 8081      		ld r24,Z
 2174 0da0 9181      		ldd r25,Z+1
 2175 0da2 9887      		std Y+8,r25
 2176 0da4 8F83      		std Y+7,r24
 336:lp_solve_5.5/lp_MPS.c ****       int line_len1 = line_len;
 2177               		.loc 1 336 0
 2178 0da6 8B81      		ldd r24,Y+3
 2179 0da8 9C81      		ldd r25,Y+4
 2180 0daa 9A87      		std Y+10,r25
 2181 0dac 8987      		std Y+9,r24
 337:lp_solve_5.5/lp_MPS.c ****       int items1 = 0;
 2182               		.loc 1 337 0
 2183 0dae 1C86      		std Y+12,__zero_reg__
 2184 0db0 1B86      		std Y+11,__zero_reg__
 338:lp_solve_5.5/lp_MPS.c **** 
 339:lp_solve_5.5/lp_MPS.c ****       while (line_len1 > 0) {
 2185               		.loc 1 339 0
 2186 0db2 00C0      		rjmp .L80
 2187               	.L82:
 340:lp_solve_5.5/lp_MPS.c ****         len = lenfield(line1, line_len1);
 2188               		.loc 1 340 0
 2189 0db4 2985      		ldd r18,Y+9
 2190 0db6 3A85      		ldd r19,Y+10
 2191 0db8 8F81      		ldd r24,Y+7
 2192 0dba 9885      		ldd r25,Y+8
 2193 0dbc B901      		movw r22,r18
 2194 0dbe 0E94 0000 		call lenfield
 2195 0dc2 9E87      		std Y+14,r25
 2196 0dc4 8D87      		std Y+13,r24
 341:lp_solve_5.5/lp_MPS.c ****         if (len > 0) {
 2197               		.loc 1 341 0
 2198 0dc6 8D85      		ldd r24,Y+13
 2199 0dc8 9E85      		ldd r25,Y+14
 2200 0dca 1816      		cp __zero_reg__,r24
 2201 0dcc 1906      		cpc __zero_reg__,r25
 2202 0dce 04F4      		brge .L81
 342:lp_solve_5.5/lp_MPS.c ****           line1 += len;
 2203               		.loc 1 342 0
 2204 0dd0 8D85      		ldd r24,Y+13
 2205 0dd2 9E85      		ldd r25,Y+14
 2206 0dd4 2F81      		ldd r18,Y+7
 2207 0dd6 3885      		ldd r19,Y+8
 2208 0dd8 820F      		add r24,r18
 2209 0dda 931F      		adc r25,r19
 2210 0ddc 9887      		std Y+8,r25
 2211 0dde 8F83      		std Y+7,r24
 343:lp_solve_5.5/lp_MPS.c ****           line_len1 -= len;
 2212               		.loc 1 343 0
 2213 0de0 2985      		ldd r18,Y+9
 2214 0de2 3A85      		ldd r19,Y+10
 2215 0de4 8D85      		ldd r24,Y+13
 2216 0de6 9E85      		ldd r25,Y+14
 2217 0de8 A901      		movw r20,r18
 2218 0dea 481B      		sub r20,r24
 2219 0dec 590B      		sbc r21,r25
 2220 0dee CA01      		movw r24,r20
 2221 0df0 9A87      		std Y+10,r25
 2222 0df2 8987      		std Y+9,r24
 344:lp_solve_5.5/lp_MPS.c ****           items1++;
 2223               		.loc 1 344 0
 2224 0df4 8B85      		ldd r24,Y+11
 2225 0df6 9C85      		ldd r25,Y+12
 2226 0df8 0196      		adiw r24,1
 2227 0dfa 9C87      		std Y+12,r25
 2228 0dfc 8B87      		std Y+11,r24
 2229               	.L81:
 345:lp_solve_5.5/lp_MPS.c ****         }
 346:lp_solve_5.5/lp_MPS.c ****         len = spaces(line1, line_len1);
 2230               		.loc 1 346 0
 2231 0dfe 2985      		ldd r18,Y+9
 2232 0e00 3A85      		ldd r19,Y+10
 2233 0e02 8F81      		ldd r24,Y+7
 2234 0e04 9885      		ldd r25,Y+8
 2235 0e06 B901      		movw r22,r18
 2236 0e08 0E94 0000 		call spaces
 2237 0e0c 9E87      		std Y+14,r25
 2238 0e0e 8D87      		std Y+13,r24
 347:lp_solve_5.5/lp_MPS.c ****         line1 += len;
 2239               		.loc 1 347 0
 2240 0e10 8D85      		ldd r24,Y+13
 2241 0e12 9E85      		ldd r25,Y+14
 2242 0e14 2F81      		ldd r18,Y+7
 2243 0e16 3885      		ldd r19,Y+8
 2244 0e18 820F      		add r24,r18
 2245 0e1a 931F      		adc r25,r19
 2246 0e1c 9887      		std Y+8,r25
 2247 0e1e 8F83      		std Y+7,r24
 348:lp_solve_5.5/lp_MPS.c ****         line_len1 -= len;
 2248               		.loc 1 348 0
 2249 0e20 2985      		ldd r18,Y+9
 2250 0e22 3A85      		ldd r19,Y+10
 2251 0e24 8D85      		ldd r24,Y+13
 2252 0e26 9E85      		ldd r25,Y+14
 2253 0e28 F901      		movw r30,r18
 2254 0e2a E81B      		sub r30,r24
 2255 0e2c F90B      		sbc r31,r25
 2256 0e2e CF01      		movw r24,r30
 2257 0e30 9A87      		std Y+10,r25
 2258 0e32 8987      		std Y+9,r24
 2259               	.L80:
 339:lp_solve_5.5/lp_MPS.c ****         len = lenfield(line1, line_len1);
 2260               		.loc 1 339 0
 2261 0e34 8985      		ldd r24,Y+9
 2262 0e36 9A85      		ldd r25,Y+10
 2263 0e38 1816      		cp __zero_reg__,r24
 2264 0e3a 1906      		cpc __zero_reg__,r25
 2265 0e3c 04F4      		brge .+2
 2266 0e3e 00C0      		rjmp .L82
 349:lp_solve_5.5/lp_MPS.c ****       }
 350:lp_solve_5.5/lp_MPS.c ****       if ((items1 % 2) == 0) {
 2267               		.loc 1 350 0
 2268 0e40 8B85      		ldd r24,Y+11
 2269 0e42 9C85      		ldd r25,Y+12
 2270 0e44 8170      		andi r24,1
 2271 0e46 9927      		clr r25
 2272 0e48 892B      		or r24,r25
 2273 0e4a 01F0      		breq .+2
 2274 0e4c 00C0      		rjmp .L83
 351:lp_solve_5.5/lp_MPS.c ****         *field4 = strtod(field3, &ptr1);
 2275               		.loc 1 351 0
 2276 0e4e 9E01      		movw r18,r28
 2277 0e50 215F      		subi r18,-15
 2278 0e52 3E4F      		sbci r19,-2
 2279 0e54 CE01      		movw r24,r28
 2280 0e56 855E      		subi r24,-27
 2281 0e58 9E4F      		sbci r25,-2
 2282 0e5a FC01      		movw r30,r24
 2283 0e5c 8081      		ld r24,Z
 2284 0e5e 9181      		ldd r25,Z+1
 2285 0e60 B901      		movw r22,r18
 2286 0e62 0E94 0000 		call strtod
 2287 0e66 DC01      		movw r26,r24
 2288 0e68 CB01      		movw r24,r22
 2289 0e6a 9E01      		movw r18,r28
 2290 0e6c 235E      		subi r18,-29
 2291 0e6e 3E4F      		sbci r19,-2
 2292 0e70 F901      		movw r30,r18
 2293 0e72 2081      		ld r18,Z
 2294 0e74 3181      		ldd r19,Z+1
 2295 0e76 F901      		movw r30,r18
 2296 0e78 8083      		st Z,r24
 2297 0e7a 9183      		std Z+1,r25
 2298 0e7c A283      		std Z+2,r26
 2299 0e7e B383      		std Z+3,r27
 352:lp_solve_5.5/lp_MPS.c ****         if(*ptr1 == 0) {
 2300               		.loc 1 352 0
 2301 0e80 CE01      		movw r24,r28
 2302 0e82 815F      		subi r24,-15
 2303 0e84 9E4F      		sbci r25,-2
 2304 0e86 FC01      		movw r30,r24
 2305 0e88 8081      		ld r24,Z
 2306 0e8a 9181      		ldd r25,Z+1
 2307 0e8c FC01      		movw r30,r24
 2308 0e8e 8081      		ld r24,Z
 2309 0e90 8823      		tst r24
 2310 0e92 01F0      		breq .+2
 2311 0e94 00C0      		rjmp .L84
 353:lp_solve_5.5/lp_MPS.c ****           strcpy(field3, field2);
 2312               		.loc 1 353 0
 2313 0e96 CE01      		movw r24,r28
 2314 0e98 875E      		subi r24,-25
 2315 0e9a 9E4F      		sbci r25,-2
 2316 0e9c FC01      		movw r30,r24
 2317 0e9e 2081      		ld r18,Z
 2318 0ea0 3181      		ldd r19,Z+1
 2319 0ea2 CE01      		movw r24,r28
 2320 0ea4 855E      		subi r24,-27
 2321 0ea6 9E4F      		sbci r25,-2
 2322 0ea8 FC01      		movw r30,r24
 2323 0eaa 8081      		ld r24,Z
 2324 0eac 9181      		ldd r25,Z+1
 2325 0eae B901      		movw r22,r18
 2326 0eb0 0E94 0000 		call strcpy
 354:lp_solve_5.5/lp_MPS.c ****           if ((section == MPSROWS) || (section == MPSBOUNDS) /* || (section == MPSSOS) */)
 2327               		.loc 1 354 0
 2328 0eb4 CE01      		movw r24,r28
 2329 0eb6 8D5E      		subi r24,-19
 2330 0eb8 9E4F      		sbci r25,-2
 2331 0eba FC01      		movw r30,r24
 2332 0ebc 8081      		ld r24,Z
 2333 0ebe 9181      		ldd r25,Z+1
 2334 0ec0 892B      		or r24,r25
 2335 0ec2 01F0      		breq .L85
 2336               		.loc 1 354 0 is_stmt 0 discriminator 1
 2337 0ec4 CE01      		movw r24,r28
 2338 0ec6 8D5E      		subi r24,-19
 2339 0ec8 9E4F      		sbci r25,-2
 2340 0eca FC01      		movw r30,r24
 2341 0ecc 8081      		ld r24,Z
 2342 0ece 9181      		ldd r25,Z+1
 2343 0ed0 0397      		sbiw r24,3
 2344 0ed2 01F4      		brne .L86
 2345               	.L85:
 355:lp_solve_5.5/lp_MPS.c ****             *field2 = 0;
 2346               		.loc 1 355 0 is_stmt 1
 2347 0ed4 CE01      		movw r24,r28
 2348 0ed6 875E      		subi r24,-25
 2349 0ed8 9E4F      		sbci r25,-2
 2350 0eda FC01      		movw r30,r24
 2351 0edc 8081      		ld r24,Z
 2352 0ede 9181      		ldd r25,Z+1
 2353 0ee0 FC01      		movw r30,r24
 2354 0ee2 1082      		st Z,__zero_reg__
 2355 0ee4 00C0      		rjmp .L87
 2356               	.L86:
 356:lp_solve_5.5/lp_MPS.c ****           else {
 357:lp_solve_5.5/lp_MPS.c ****             strcpy(field2, field1);
 2357               		.loc 1 357 0
 2358 0ee6 CE01      		movw r24,r28
 2359 0ee8 895E      		subi r24,-23
 2360 0eea 9E4F      		sbci r25,-2
 2361 0eec FC01      		movw r30,r24
 2362 0eee 2081      		ld r18,Z
 2363 0ef0 3181      		ldd r19,Z+1
 2364 0ef2 CE01      		movw r24,r28
 2365 0ef4 875E      		subi r24,-25
 2366 0ef6 9E4F      		sbci r25,-2
 2367 0ef8 FC01      		movw r30,r24
 2368 0efa 8081      		ld r24,Z
 2369 0efc 9181      		ldd r25,Z+1
 2370 0efe B901      		movw r22,r18
 2371 0f00 0E94 0000 		call strcpy
 358:lp_solve_5.5/lp_MPS.c ****             *field1 = 0;
 2372               		.loc 1 358 0
 2373 0f04 CE01      		movw r24,r28
 2374 0f06 895E      		subi r24,-23
 2375 0f08 9E4F      		sbci r25,-2
 2376 0f0a FC01      		movw r30,r24
 2377 0f0c 8081      		ld r24,Z
 2378 0f0e 9181      		ldd r25,Z+1
 2379 0f10 FC01      		movw r30,r24
 2380 0f12 1082      		st Z,__zero_reg__
 2381               	.L87:
 359:lp_solve_5.5/lp_MPS.c ****           }
 360:lp_solve_5.5/lp_MPS.c ****           items++;
 2382               		.loc 1 360 0
 2383 0f14 8981      		ldd r24,Y+1
 2384 0f16 9A81      		ldd r25,Y+2
 2385 0f18 0196      		adiw r24,1
 2386 0f1a 9A83      		std Y+2,r25
 2387 0f1c 8983      		std Y+1,r24
 2388 0f1e 00C0      		rjmp .L89
 2389               	.L84:
 361:lp_solve_5.5/lp_MPS.c ****         }
 362:lp_solve_5.5/lp_MPS.c ****         else
 363:lp_solve_5.5/lp_MPS.c ****           ptr1 = NULL;
 2390               		.loc 1 363 0
 2391 0f20 CE01      		movw r24,r28
 2392 0f22 815F      		subi r24,-15
 2393 0f24 9E4F      		sbci r25,-2
 2394 0f26 FC01      		movw r30,r24
 2395 0f28 1182      		std Z+1,__zero_reg__
 2396 0f2a 1082      		st Z,__zero_reg__
 2397 0f2c 00C0      		rjmp .L89
 2398               	.L83:
 364:lp_solve_5.5/lp_MPS.c ****       }
 365:lp_solve_5.5/lp_MPS.c ****       else
 366:lp_solve_5.5/lp_MPS.c ****         ptr1 = NULL;
 2399               		.loc 1 366 0
 2400 0f2e CE01      		movw r24,r28
 2401 0f30 815F      		subi r24,-15
 2402 0f32 9E4F      		sbci r25,-2
 2403 0f34 FC01      		movw r30,r24
 2404 0f36 1182      		std Z+1,__zero_reg__
 2405 0f38 1082      		st Z,__zero_reg__
 2406 0f3a 00C0      		rjmp .L89
 2407               	.L75:
 2408               	.LBE2:
 367:lp_solve_5.5/lp_MPS.c ****     }
 368:lp_solve_5.5/lp_MPS.c ****   }
 369:lp_solve_5.5/lp_MPS.c ****   else {
 370:lp_solve_5.5/lp_MPS.c ****     ptr1 = NULL;
 2409               		.loc 1 370 0
 2410 0f3c CE01      		movw r24,r28
 2411 0f3e 815F      		subi r24,-15
 2412 0f40 9E4F      		sbci r25,-2
 2413 0f42 FC01      		movw r30,r24
 2414 0f44 1182      		std Z+1,__zero_reg__
 2415 0f46 1082      		st Z,__zero_reg__
 371:lp_solve_5.5/lp_MPS.c ****     if((section == MPSBOUNDS) &&
 2416               		.loc 1 371 0
 2417 0f48 CE01      		movw r24,r28
 2418 0f4a 8D5E      		subi r24,-19
 2419 0f4c 9E4F      		sbci r25,-2
 2420 0f4e FC01      		movw r30,r24
 2421 0f50 8081      		ld r24,Z
 2422 0f52 9181      		ldd r25,Z+1
 2423 0f54 0397      		sbiw r24,3
 2424 0f56 01F0      		breq .+2
 2425 0f58 00C0      		rjmp .L89
 372:lp_solve_5.5/lp_MPS.c ****        ((strcmp(field1, "FR") == 0) || (strcmp(field1, "MI") == 0) || (strcmp(field1, "PL") == 0) |
 2426               		.loc 1 372 0 discriminator 1
 2427 0f5a CE01      		movw r24,r28
 2428 0f5c 895E      		subi r24,-23
 2429 0f5e 9E4F      		sbci r25,-2
 2430 0f60 FC01      		movw r30,r24
 2431 0f62 8081      		ld r24,Z
 2432 0f64 9181      		ldd r25,Z+1
 2433 0f66 60E0      		ldi r22,lo8(.LC9)
 2434 0f68 70E0      		ldi r23,hi8(.LC9)
 2435 0f6a 0E94 0000 		call strcmp
 371:lp_solve_5.5/lp_MPS.c ****     if((section == MPSBOUNDS) &&
 2436               		.loc 1 371 0 discriminator 1
 2437 0f6e 892B      		or r24,r25
 2438 0f70 01F0      		breq .L90
 2439               		.loc 1 372 0
 2440 0f72 CE01      		movw r24,r28
 2441 0f74 895E      		subi r24,-23
 2442 0f76 9E4F      		sbci r25,-2
 2443 0f78 FC01      		movw r30,r24
 2444 0f7a 8081      		ld r24,Z
 2445 0f7c 9181      		ldd r25,Z+1
 2446 0f7e 60E0      		ldi r22,lo8(.LC10)
 2447 0f80 70E0      		ldi r23,hi8(.LC10)
 2448 0f82 0E94 0000 		call strcmp
 2449 0f86 892B      		or r24,r25
 2450 0f88 01F0      		breq .L90
 2451               		.loc 1 372 0 is_stmt 0 discriminator 1
 2452 0f8a CE01      		movw r24,r28
 2453 0f8c 895E      		subi r24,-23
 2454 0f8e 9E4F      		sbci r25,-2
 2455 0f90 FC01      		movw r30,r24
 2456 0f92 8081      		ld r24,Z
 2457 0f94 9181      		ldd r25,Z+1
 2458 0f96 60E0      		ldi r22,lo8(.LC11)
 2459 0f98 70E0      		ldi r23,hi8(.LC11)
 2460 0f9a 0E94 0000 		call strcmp
 2461 0f9e 892B      		or r24,r25
 2462 0fa0 01F0      		breq .L90
 2463               		.loc 1 372 0 discriminator 2
 2464 0fa2 CE01      		movw r24,r28
 2465 0fa4 895E      		subi r24,-23
 2466 0fa6 9E4F      		sbci r25,-2
 2467 0fa8 FC01      		movw r30,r24
 2468 0faa 8081      		ld r24,Z
 2469 0fac 9181      		ldd r25,Z+1
 2470 0fae 60E0      		ldi r22,lo8(.LC12)
 2471 0fb0 70E0      		ldi r23,hi8(.LC12)
 2472 0fb2 0E94 0000 		call strcmp
 2473 0fb6 892B      		or r24,r25
 2474 0fb8 01F4      		brne .L89
 2475               	.L90:
 373:lp_solve_5.5/lp_MPS.c ****       strcpy(field3, field2);
 2476               		.loc 1 373 0 is_stmt 1
 2477 0fba CE01      		movw r24,r28
 2478 0fbc 875E      		subi r24,-25
 2479 0fbe 9E4F      		sbci r25,-2
 2480 0fc0 FC01      		movw r30,r24
 2481 0fc2 2081      		ld r18,Z
 2482 0fc4 3181      		ldd r19,Z+1
 2483 0fc6 CE01      		movw r24,r28
 2484 0fc8 855E      		subi r24,-27
 2485 0fca 9E4F      		sbci r25,-2
 2486 0fcc FC01      		movw r30,r24
 2487 0fce 8081      		ld r24,Z
 2488 0fd0 9181      		ldd r25,Z+1
 2489 0fd2 B901      		movw r22,r18
 2490 0fd4 0E94 0000 		call strcpy
 374:lp_solve_5.5/lp_MPS.c ****       *field2 = 0;
 2491               		.loc 1 374 0
 2492 0fd8 CE01      		movw r24,r28
 2493 0fda 875E      		subi r24,-25
 2494 0fdc 9E4F      		sbci r25,-2
 2495 0fde FC01      		movw r30,r24
 2496 0fe0 8081      		ld r24,Z
 2497 0fe2 9181      		ldd r25,Z+1
 2498 0fe4 FC01      		movw r30,r24
 2499 0fe6 1082      		st Z,__zero_reg__
 375:lp_solve_5.5/lp_MPS.c ****       items++;
 2500               		.loc 1 375 0
 2501 0fe8 8981      		ldd r24,Y+1
 2502 0fea 9A81      		ldd r25,Y+2
 2503 0fec 0196      		adiw r24,1
 2504 0fee 9A83      		std Y+2,r25
 2505 0ff0 8983      		std Y+1,r24
 2506 0ff2 00C0      		rjmp .L89
 2507               	.L114:
 326:lp_solve_5.5/lp_MPS.c ****             ((strcmp(field1, "FR") == 0) || (strcmp(field1, "MI") == 0) || (strcmp(field1, "PL") ==
 2508               		.loc 1 326 0
 2509 0ff4 0000      		nop
 2510               	.L89:
 376:lp_solve_5.5/lp_MPS.c ****     }
 377:lp_solve_5.5/lp_MPS.c ****   }
 378:lp_solve_5.5/lp_MPS.c **** 
 379:lp_solve_5.5/lp_MPS.c ****   if(ptr1 == NULL) {
 2511               		.loc 1 379 0
 2512 0ff6 CE01      		movw r24,r28
 2513 0ff8 815F      		subi r24,-15
 2514 0ffa 9E4F      		sbci r25,-2
 2515 0ffc FC01      		movw r30,r24
 2516 0ffe 8081      		ld r24,Z
 2517 1000 9181      		ldd r25,Z+1
 2518 1002 892B      		or r24,r25
 2519 1004 01F0      		breq .+2
 2520 1006 00C0      		rjmp .L91
 380:lp_solve_5.5/lp_MPS.c ****     len = lenfield(line, line_len);
 2521               		.loc 1 380 0
 2522 1008 2B81      		ldd r18,Y+3
 2523 100a 3C81      		ldd r19,Y+4
 2524 100c CE01      		movw r24,r28
 2525 100e 8B5E      		subi r24,-21
 2526 1010 9E4F      		sbci r25,-2
 2527 1012 FC01      		movw r30,r24
 2528 1014 8081      		ld r24,Z
 2529 1016 9181      		ldd r25,Z+1
 2530 1018 B901      		movw r22,r18
 2531 101a 0E94 0000 		call lenfield
 2532 101e 9E87      		std Y+14,r25
 2533 1020 8D87      		std Y+13,r24
 381:lp_solve_5.5/lp_MPS.c ****     if(line_len >= 1) { /* number */
 2534               		.loc 1 381 0
 2535 1022 8B81      		ldd r24,Y+3
 2536 1024 9C81      		ldd r25,Y+4
 2537 1026 1816      		cp __zero_reg__,r24
 2538 1028 1906      		cpc __zero_reg__,r25
 2539 102a 04F0      		brlt .+2
 2540 102c 00C0      		rjmp .L92
 382:lp_solve_5.5/lp_MPS.c ****       strncpy(buf, line, len);
 2541               		.loc 1 382 0
 2542 102e 4D85      		ldd r20,Y+13
 2543 1030 5E85      		ldd r21,Y+14
 2544 1032 CE01      		movw r24,r28
 2545 1034 8B5E      		subi r24,-21
 2546 1036 9E4F      		sbci r25,-2
 2547 1038 FC01      		movw r30,r24
 2548 103a 2081      		ld r18,Z
 2549 103c 3181      		ldd r19,Z+1
 2550 103e CE01      		movw r24,r28
 2551 1040 0F96      		adiw r24,15
 2552 1042 B901      		movw r22,r18
 2553 1044 0E94 0000 		call strncpy
 383:lp_solve_5.5/lp_MPS.c ****       buf[len] = '\0';
 2554               		.loc 1 383 0
 2555 1048 9E01      		movw r18,r28
 2556 104a 215F      		subi r18,-15
 2557 104c 3F4F      		sbci r19,-1
 2558 104e 8D85      		ldd r24,Y+13
 2559 1050 9E85      		ldd r25,Y+14
 2560 1052 820F      		add r24,r18
 2561 1054 931F      		adc r25,r19
 2562 1056 FC01      		movw r30,r24
 2563 1058 1082      		st Z,__zero_reg__
 384:lp_solve_5.5/lp_MPS.c ****       for(ptr1 = ptr2 = buf; ; ptr1++)
 2564               		.loc 1 384 0
 2565 105a CE01      		movw r24,r28
 2566 105c 0F96      		adiw r24,15
 2567 105e 9E83      		std Y+6,r25
 2568 1060 8D83      		std Y+5,r24
 2569 1062 CE01      		movw r24,r28
 2570 1064 815F      		subi r24,-15
 2571 1066 9E4F      		sbci r25,-2
 2572 1068 2D81      		ldd r18,Y+5
 2573 106a 3E81      		ldd r19,Y+6
 2574 106c FC01      		movw r30,r24
 2575 106e 3183      		std Z+1,r19
 2576 1070 2083      		st Z,r18
 2577               	.L95:
 385:lp_solve_5.5/lp_MPS.c ****         if(!isspace((unsigned char) *ptr1))
 2578               		.loc 1 385 0
 2579 1072 CE01      		movw r24,r28
 2580 1074 815F      		subi r24,-15
 2581 1076 9E4F      		sbci r25,-2
 2582 1078 FC01      		movw r30,r24
 2583 107a 8081      		ld r24,Z
 2584 107c 9181      		ldd r25,Z+1
 2585 107e FC01      		movw r30,r24
 2586 1080 8081      		ld r24,Z
 2587 1082 882F      		mov r24,r24
 2588 1084 90E0      		ldi r25,0
 2589 1086 0E94 0000 		call isspace
 2590 108a 892B      		or r24,r25
 2591 108c 01F4      		brne .L93
 386:lp_solve_5.5/lp_MPS.c ****           if((*(ptr2++) = *ptr1) == 0)
 2592               		.loc 1 386 0
 2593 108e 8D81      		ldd r24,Y+5
 2594 1090 9E81      		ldd r25,Y+6
 2595 1092 9C01      		movw r18,r24
 2596 1094 2F5F      		subi r18,-1
 2597 1096 3F4F      		sbci r19,-1
 2598 1098 3E83      		std Y+6,r19
 2599 109a 2D83      		std Y+5,r18
 2600 109c 9E01      		movw r18,r28
 2601 109e 215F      		subi r18,-15
 2602 10a0 3E4F      		sbci r19,-2
 2603 10a2 F901      		movw r30,r18
 2604 10a4 2081      		ld r18,Z
 2605 10a6 3181      		ldd r19,Z+1
 2606 10a8 F901      		movw r30,r18
 2607 10aa 2081      		ld r18,Z
 2608 10ac FC01      		movw r30,r24
 2609 10ae 2083      		st Z,r18
 2610 10b0 FC01      		movw r30,r24
 2611 10b2 8081      		ld r24,Z
 2612 10b4 8823      		tst r24
 2613 10b6 01F0      		breq .L115
 2614               	.L93:
 384:lp_solve_5.5/lp_MPS.c ****       for(ptr1 = ptr2 = buf; ; ptr1++)
 2615               		.loc 1 384 0
 2616 10b8 CE01      		movw r24,r28
 2617 10ba 815F      		subi r24,-15
 2618 10bc 9E4F      		sbci r25,-2
 2619 10be FC01      		movw r30,r24
 2620 10c0 8081      		ld r24,Z
 2621 10c2 9181      		ldd r25,Z+1
 2622 10c4 9C01      		movw r18,r24
 2623 10c6 2F5F      		subi r18,-1
 2624 10c8 3F4F      		sbci r19,-1
 2625 10ca CE01      		movw r24,r28
 2626 10cc 815F      		subi r24,-15
 2627 10ce 9E4F      		sbci r25,-2
 2628 10d0 FC01      		movw r30,r24
 2629 10d2 3183      		std Z+1,r19
 2630 10d4 2083      		st Z,r18
 387:lp_solve_5.5/lp_MPS.c ****             break;
 388:lp_solve_5.5/lp_MPS.c ****       /* *field4 = atof(buf); */
 389:lp_solve_5.5/lp_MPS.c ****       *field4 = strtod(buf, &ptr1);
 2631               		.loc 1 389 0
 2632 10d6 00C0      		rjmp .L95
 2633               	.L115:
 387:lp_solve_5.5/lp_MPS.c ****             break;
 2634               		.loc 1 387 0
 2635 10d8 0000      		nop
 2636               		.loc 1 389 0
 2637 10da 9E01      		movw r18,r28
 2638 10dc 215F      		subi r18,-15
 2639 10de 3E4F      		sbci r19,-2
 2640 10e0 CE01      		movw r24,r28
 2641 10e2 0F96      		adiw r24,15
 2642 10e4 B901      		movw r22,r18
 2643 10e6 0E94 0000 		call strtod
 2644 10ea DC01      		movw r26,r24
 2645 10ec CB01      		movw r24,r22
 2646 10ee 9E01      		movw r18,r28
 2647 10f0 235E      		subi r18,-29
 2648 10f2 3E4F      		sbci r19,-2
 2649 10f4 F901      		movw r30,r18
 2650 10f6 2081      		ld r18,Z
 2651 10f8 3181      		ldd r19,Z+1
 2652 10fa F901      		movw r30,r18
 2653 10fc 8083      		st Z,r24
 2654 10fe 9183      		std Z+1,r25
 2655 1100 A283      		std Z+2,r26
 2656 1102 B383      		std Z+3,r27
 390:lp_solve_5.5/lp_MPS.c ****       if(*ptr1)
 2657               		.loc 1 390 0
 2658 1104 CE01      		movw r24,r28
 2659 1106 815F      		subi r24,-15
 2660 1108 9E4F      		sbci r25,-2
 2661 110a FC01      		movw r30,r24
 2662 110c 8081      		ld r24,Z
 2663 110e 9181      		ldd r25,Z+1
 2664 1110 FC01      		movw r30,r24
 2665 1112 8081      		ld r24,Z
 2666 1114 8823      		tst r24
 2667 1116 01F0      		breq .L96
 391:lp_solve_5.5/lp_MPS.c ****         return(-1);
 2668               		.loc 1 391 0
 2669 1118 8FEF      		ldi r24,lo8(-1)
 2670 111a 9FEF      		ldi r25,lo8(-1)
 2671 111c 00C0      		rjmp .L111
 2672               	.L96:
 392:lp_solve_5.5/lp_MPS.c ****       items++;
 2673               		.loc 1 392 0
 2674 111e 8981      		ldd r24,Y+1
 2675 1120 9A81      		ldd r25,Y+2
 2676 1122 0196      		adiw r24,1
 2677 1124 9A83      		std Y+2,r25
 2678 1126 8983      		std Y+1,r24
 2679 1128 00C0      		rjmp .L98
 2680               	.L92:
 393:lp_solve_5.5/lp_MPS.c ****     }
 394:lp_solve_5.5/lp_MPS.c ****     else
 395:lp_solve_5.5/lp_MPS.c ****       *field4 = 0;
 2681               		.loc 1 395 0
 2682 112a CE01      		movw r24,r28
 2683 112c 835E      		subi r24,-29
 2684 112e 9E4F      		sbci r25,-2
 2685 1130 FC01      		movw r30,r24
 2686 1132 8081      		ld r24,Z
 2687 1134 9181      		ldd r25,Z+1
 2688 1136 FC01      		movw r30,r24
 2689 1138 1082      		st Z,__zero_reg__
 2690 113a 1182      		std Z+1,__zero_reg__
 2691 113c 1282      		std Z+2,__zero_reg__
 2692 113e 1382      		std Z+3,__zero_reg__
 2693               	.L98:
 396:lp_solve_5.5/lp_MPS.c **** 
 397:lp_solve_5.5/lp_MPS.c ****     line += len;
 2694               		.loc 1 397 0
 2695 1140 2D85      		ldd r18,Y+13
 2696 1142 3E85      		ldd r19,Y+14
 2697 1144 CE01      		movw r24,r28
 2698 1146 8B5E      		subi r24,-21
 2699 1148 9E4F      		sbci r25,-2
 2700 114a AE01      		movw r20,r28
 2701 114c 4B5E      		subi r20,-21
 2702 114e 5E4F      		sbci r21,-2
 2703 1150 FA01      		movw r30,r20
 2704 1152 4081      		ld r20,Z
 2705 1154 5181      		ldd r21,Z+1
 2706 1156 240F      		add r18,r20
 2707 1158 351F      		adc r19,r21
 2708 115a FC01      		movw r30,r24
 2709 115c 3183      		std Z+1,r19
 2710 115e 2083      		st Z,r18
 398:lp_solve_5.5/lp_MPS.c ****     line_len -= len;
 2711               		.loc 1 398 0
 2712 1160 2B81      		ldd r18,Y+3
 2713 1162 3C81      		ldd r19,Y+4
 2714 1164 8D85      		ldd r24,Y+13
 2715 1166 9E85      		ldd r25,Y+14
 2716 1168 A901      		movw r20,r18
 2717 116a 481B      		sub r20,r24
 2718 116c 590B      		sbc r21,r25
 2719 116e CA01      		movw r24,r20
 2720 1170 9C83      		std Y+4,r25
 2721 1172 8B83      		std Y+3,r24
 399:lp_solve_5.5/lp_MPS.c **** 
 400:lp_solve_5.5/lp_MPS.c ****     len = spaces(line, line_len);
 2722               		.loc 1 400 0
 2723 1174 2B81      		ldd r18,Y+3
 2724 1176 3C81      		ldd r19,Y+4
 2725 1178 CE01      		movw r24,r28
 2726 117a 8B5E      		subi r24,-21
 2727 117c 9E4F      		sbci r25,-2
 2728 117e FC01      		movw r30,r24
 2729 1180 8081      		ld r24,Z
 2730 1182 9181      		ldd r25,Z+1
 2731 1184 B901      		movw r22,r18
 2732 1186 0E94 0000 		call spaces
 2733 118a 9E87      		std Y+14,r25
 2734 118c 8D87      		std Y+13,r24
 401:lp_solve_5.5/lp_MPS.c ****     line += len;
 2735               		.loc 1 401 0
 2736 118e 2D85      		ldd r18,Y+13
 2737 1190 3E85      		ldd r19,Y+14
 2738 1192 CE01      		movw r24,r28
 2739 1194 8B5E      		subi r24,-21
 2740 1196 9E4F      		sbci r25,-2
 2741 1198 AE01      		movw r20,r28
 2742 119a 4B5E      		subi r20,-21
 2743 119c 5E4F      		sbci r21,-2
 2744 119e FA01      		movw r30,r20
 2745 11a0 4081      		ld r20,Z
 2746 11a2 5181      		ldd r21,Z+1
 2747 11a4 240F      		add r18,r20
 2748 11a6 351F      		adc r19,r21
 2749 11a8 FC01      		movw r30,r24
 2750 11aa 3183      		std Z+1,r19
 2751 11ac 2083      		st Z,r18
 402:lp_solve_5.5/lp_MPS.c ****     line_len -= len;
 2752               		.loc 1 402 0
 2753 11ae 2B81      		ldd r18,Y+3
 2754 11b0 3C81      		ldd r19,Y+4
 2755 11b2 8D85      		ldd r24,Y+13
 2756 11b4 9E85      		ldd r25,Y+14
 2757 11b6 A901      		movw r20,r18
 2758 11b8 481B      		sub r20,r24
 2759 11ba 590B      		sbc r21,r25
 2760 11bc CA01      		movw r24,r20
 2761 11be 9C83      		std Y+4,r25
 2762 11c0 8B83      		std Y+3,r24
 2763               	.L91:
 403:lp_solve_5.5/lp_MPS.c ****   }
 404:lp_solve_5.5/lp_MPS.c **** 
 405:lp_solve_5.5/lp_MPS.c ****   len = lenfield(line, line_len);
 2764               		.loc 1 405 0
 2765 11c2 2B81      		ldd r18,Y+3
 2766 11c4 3C81      		ldd r19,Y+4
 2767 11c6 CE01      		movw r24,r28
 2768 11c8 8B5E      		subi r24,-21
 2769 11ca 9E4F      		sbci r25,-2
 2770 11cc FC01      		movw r30,r24
 2771 11ce 8081      		ld r24,Z
 2772 11d0 9181      		ldd r25,Z+1
 2773 11d2 B901      		movw r22,r18
 2774 11d4 0E94 0000 		call lenfield
 2775 11d8 9E87      		std Y+14,r25
 2776 11da 8D87      		std Y+13,r24
 406:lp_solve_5.5/lp_MPS.c ****   if(line_len >= 1) { /* name */
 2777               		.loc 1 406 0
 2778 11dc 8B81      		ldd r24,Y+3
 2779 11de 9C81      		ldd r25,Y+4
 2780 11e0 1816      		cp __zero_reg__,r24
 2781 11e2 1906      		cpc __zero_reg__,r25
 2782 11e4 04F4      		brge .L99
 407:lp_solve_5.5/lp_MPS.c ****     strncpy(field5, line, len);
 2783               		.loc 1 407 0
 2784 11e6 4D85      		ldd r20,Y+13
 2785 11e8 5E85      		ldd r21,Y+14
 2786 11ea CE01      		movw r24,r28
 2787 11ec 8B5E      		subi r24,-21
 2788 11ee 9E4F      		sbci r25,-2
 2789 11f0 FC01      		movw r30,r24
 2790 11f2 2081      		ld r18,Z
 2791 11f4 3181      		ldd r19,Z+1
 2792 11f6 CE01      		movw r24,r28
 2793 11f8 815E      		subi r24,-31
 2794 11fa 9E4F      		sbci r25,-2
 2795 11fc FC01      		movw r30,r24
 2796 11fe 8081      		ld r24,Z
 2797 1200 9181      		ldd r25,Z+1
 2798 1202 B901      		movw r22,r18
 2799 1204 0E94 0000 		call strncpy
 408:lp_solve_5.5/lp_MPS.c ****     field5[len] = '\0';
 2800               		.loc 1 408 0
 2801 1208 8D85      		ldd r24,Y+13
 2802 120a 9E85      		ldd r25,Y+14
 2803 120c 9E01      		movw r18,r28
 2804 120e 215E      		subi r18,-31
 2805 1210 3E4F      		sbci r19,-2
 2806 1212 F901      		movw r30,r18
 2807 1214 2081      		ld r18,Z
 2808 1216 3181      		ldd r19,Z+1
 2809 1218 820F      		add r24,r18
 2810 121a 931F      		adc r25,r19
 2811 121c FC01      		movw r30,r24
 2812 121e 1082      		st Z,__zero_reg__
 409:lp_solve_5.5/lp_MPS.c ****     items++;
 2813               		.loc 1 409 0
 2814 1220 8981      		ldd r24,Y+1
 2815 1222 9A81      		ldd r25,Y+2
 2816 1224 0196      		adiw r24,1
 2817 1226 9A83      		std Y+2,r25
 2818 1228 8983      		std Y+1,r24
 2819 122a 00C0      		rjmp .L100
 2820               	.L99:
 410:lp_solve_5.5/lp_MPS.c ****   }
 411:lp_solve_5.5/lp_MPS.c ****   else
 412:lp_solve_5.5/lp_MPS.c ****     field5[0] = '\0';
 2821               		.loc 1 412 0
 2822 122c CE01      		movw r24,r28
 2823 122e 815E      		subi r24,-31
 2824 1230 9E4F      		sbci r25,-2
 2825 1232 FC01      		movw r30,r24
 2826 1234 8081      		ld r24,Z
 2827 1236 9181      		ldd r25,Z+1
 2828 1238 FC01      		movw r30,r24
 2829 123a 1082      		st Z,__zero_reg__
 2830               	.L100:
 413:lp_solve_5.5/lp_MPS.c ****   line += len;
 2831               		.loc 1 413 0
 2832 123c 2D85      		ldd r18,Y+13
 2833 123e 3E85      		ldd r19,Y+14
 2834 1240 CE01      		movw r24,r28
 2835 1242 8B5E      		subi r24,-21
 2836 1244 9E4F      		sbci r25,-2
 2837 1246 AE01      		movw r20,r28
 2838 1248 4B5E      		subi r20,-21
 2839 124a 5E4F      		sbci r21,-2
 2840 124c FA01      		movw r30,r20
 2841 124e 4081      		ld r20,Z
 2842 1250 5181      		ldd r21,Z+1
 2843 1252 240F      		add r18,r20
 2844 1254 351F      		adc r19,r21
 2845 1256 FC01      		movw r30,r24
 2846 1258 3183      		std Z+1,r19
 2847 125a 2083      		st Z,r18
 414:lp_solve_5.5/lp_MPS.c ****   line_len -= len;
 2848               		.loc 1 414 0
 2849 125c 2B81      		ldd r18,Y+3
 2850 125e 3C81      		ldd r19,Y+4
 2851 1260 8D85      		ldd r24,Y+13
 2852 1262 9E85      		ldd r25,Y+14
 2853 1264 A901      		movw r20,r18
 2854 1266 481B      		sub r20,r24
 2855 1268 590B      		sbc r21,r25
 2856 126a CA01      		movw r24,r20
 2857 126c 9C83      		std Y+4,r25
 2858 126e 8B83      		std Y+3,r24
 415:lp_solve_5.5/lp_MPS.c **** 
 416:lp_solve_5.5/lp_MPS.c ****   len = spaces(line, line_len);
 2859               		.loc 1 416 0
 2860 1270 2B81      		ldd r18,Y+3
 2861 1272 3C81      		ldd r19,Y+4
 2862 1274 CE01      		movw r24,r28
 2863 1276 8B5E      		subi r24,-21
 2864 1278 9E4F      		sbci r25,-2
 2865 127a FC01      		movw r30,r24
 2866 127c 8081      		ld r24,Z
 2867 127e 9181      		ldd r25,Z+1
 2868 1280 B901      		movw r22,r18
 2869 1282 0E94 0000 		call spaces
 2870 1286 9E87      		std Y+14,r25
 2871 1288 8D87      		std Y+13,r24
 417:lp_solve_5.5/lp_MPS.c ****   line += len;
 2872               		.loc 1 417 0
 2873 128a 2D85      		ldd r18,Y+13
 2874 128c 3E85      		ldd r19,Y+14
 2875 128e CE01      		movw r24,r28
 2876 1290 8B5E      		subi r24,-21
 2877 1292 9E4F      		sbci r25,-2
 2878 1294 AE01      		movw r20,r28
 2879 1296 4B5E      		subi r20,-21
 2880 1298 5E4F      		sbci r21,-2
 2881 129a FA01      		movw r30,r20
 2882 129c 4081      		ld r20,Z
 2883 129e 5181      		ldd r21,Z+1
 2884 12a0 240F      		add r18,r20
 2885 12a2 351F      		adc r19,r21
 2886 12a4 FC01      		movw r30,r24
 2887 12a6 3183      		std Z+1,r19
 2888 12a8 2083      		st Z,r18
 418:lp_solve_5.5/lp_MPS.c ****   line_len -= len;
 2889               		.loc 1 418 0
 2890 12aa 2B81      		ldd r18,Y+3
 2891 12ac 3C81      		ldd r19,Y+4
 2892 12ae 8D85      		ldd r24,Y+13
 2893 12b0 9E85      		ldd r25,Y+14
 2894 12b2 A901      		movw r20,r18
 2895 12b4 481B      		sub r20,r24
 2896 12b6 590B      		sbc r21,r25
 2897 12b8 CA01      		movw r24,r20
 2898 12ba 9C83      		std Y+4,r25
 2899 12bc 8B83      		std Y+3,r24
 419:lp_solve_5.5/lp_MPS.c **** 
 420:lp_solve_5.5/lp_MPS.c ****   len = lenfield(line, line_len);
 2900               		.loc 1 420 0
 2901 12be 2B81      		ldd r18,Y+3
 2902 12c0 3C81      		ldd r19,Y+4
 2903 12c2 CE01      		movw r24,r28
 2904 12c4 8B5E      		subi r24,-21
 2905 12c6 9E4F      		sbci r25,-2
 2906 12c8 FC01      		movw r30,r24
 2907 12ca 8081      		ld r24,Z
 2908 12cc 9181      		ldd r25,Z+1
 2909 12ce B901      		movw r22,r18
 2910 12d0 0E94 0000 		call lenfield
 2911 12d4 9E87      		std Y+14,r25
 2912 12d6 8D87      		std Y+13,r24
 421:lp_solve_5.5/lp_MPS.c ****   if(line_len >= 1) { /* number */
 2913               		.loc 1 421 0
 2914 12d8 8B81      		ldd r24,Y+3
 2915 12da 9C81      		ldd r25,Y+4
 2916 12dc 1816      		cp __zero_reg__,r24
 2917 12de 1906      		cpc __zero_reg__,r25
 2918 12e0 04F0      		brlt .+2
 2919 12e2 00C0      		rjmp .L101
 422:lp_solve_5.5/lp_MPS.c ****     strncpy(buf, line, len);
 2920               		.loc 1 422 0
 2921 12e4 4D85      		ldd r20,Y+13
 2922 12e6 5E85      		ldd r21,Y+14
 2923 12e8 CE01      		movw r24,r28
 2924 12ea 8B5E      		subi r24,-21
 2925 12ec 9E4F      		sbci r25,-2
 2926 12ee FC01      		movw r30,r24
 2927 12f0 2081      		ld r18,Z
 2928 12f2 3181      		ldd r19,Z+1
 2929 12f4 CE01      		movw r24,r28
 2930 12f6 0F96      		adiw r24,15
 2931 12f8 B901      		movw r22,r18
 2932 12fa 0E94 0000 		call strncpy
 423:lp_solve_5.5/lp_MPS.c ****     buf[len] = '\0';
 2933               		.loc 1 423 0
 2934 12fe 9E01      		movw r18,r28
 2935 1300 215F      		subi r18,-15
 2936 1302 3F4F      		sbci r19,-1
 2937 1304 8D85      		ldd r24,Y+13
 2938 1306 9E85      		ldd r25,Y+14
 2939 1308 820F      		add r24,r18
 2940 130a 931F      		adc r25,r19
 2941 130c FC01      		movw r30,r24
 2942 130e 1082      		st Z,__zero_reg__
 424:lp_solve_5.5/lp_MPS.c ****     for(ptr1 = ptr2 = buf; ; ptr1++)
 2943               		.loc 1 424 0
 2944 1310 CE01      		movw r24,r28
 2945 1312 0F96      		adiw r24,15
 2946 1314 9E83      		std Y+6,r25
 2947 1316 8D83      		std Y+5,r24
 2948 1318 CE01      		movw r24,r28
 2949 131a 815F      		subi r24,-15
 2950 131c 9E4F      		sbci r25,-2
 2951 131e 2D81      		ldd r18,Y+5
 2952 1320 3E81      		ldd r19,Y+6
 2953 1322 FC01      		movw r30,r24
 2954 1324 3183      		std Z+1,r19
 2955 1326 2083      		st Z,r18
 2956               	.L104:
 425:lp_solve_5.5/lp_MPS.c ****       if(!isspace((unsigned char) *ptr1))
 2957               		.loc 1 425 0
 2958 1328 CE01      		movw r24,r28
 2959 132a 815F      		subi r24,-15
 2960 132c 9E4F      		sbci r25,-2
 2961 132e FC01      		movw r30,r24
 2962 1330 8081      		ld r24,Z
 2963 1332 9181      		ldd r25,Z+1
 2964 1334 FC01      		movw r30,r24
 2965 1336 8081      		ld r24,Z
 2966 1338 882F      		mov r24,r24
 2967 133a 90E0      		ldi r25,0
 2968 133c 0E94 0000 		call isspace
 2969 1340 892B      		or r24,r25
 2970 1342 01F4      		brne .L102
 426:lp_solve_5.5/lp_MPS.c ****         if((*(ptr2++) = *ptr1) == 0)
 2971               		.loc 1 426 0
 2972 1344 8D81      		ldd r24,Y+5
 2973 1346 9E81      		ldd r25,Y+6
 2974 1348 9C01      		movw r18,r24
 2975 134a 2F5F      		subi r18,-1
 2976 134c 3F4F      		sbci r19,-1
 2977 134e 3E83      		std Y+6,r19
 2978 1350 2D83      		std Y+5,r18
 2979 1352 9E01      		movw r18,r28
 2980 1354 215F      		subi r18,-15
 2981 1356 3E4F      		sbci r19,-2
 2982 1358 F901      		movw r30,r18
 2983 135a 2081      		ld r18,Z
 2984 135c 3181      		ldd r19,Z+1
 2985 135e F901      		movw r30,r18
 2986 1360 2081      		ld r18,Z
 2987 1362 FC01      		movw r30,r24
 2988 1364 2083      		st Z,r18
 2989 1366 FC01      		movw r30,r24
 2990 1368 8081      		ld r24,Z
 2991 136a 8823      		tst r24
 2992 136c 01F0      		breq .L116
 2993               	.L102:
 424:lp_solve_5.5/lp_MPS.c ****     for(ptr1 = ptr2 = buf; ; ptr1++)
 2994               		.loc 1 424 0
 2995 136e CE01      		movw r24,r28
 2996 1370 815F      		subi r24,-15
 2997 1372 9E4F      		sbci r25,-2
 2998 1374 FC01      		movw r30,r24
 2999 1376 8081      		ld r24,Z
 3000 1378 9181      		ldd r25,Z+1
 3001 137a 9C01      		movw r18,r24
 3002 137c 2F5F      		subi r18,-1
 3003 137e 3F4F      		sbci r19,-1
 3004 1380 CE01      		movw r24,r28
 3005 1382 815F      		subi r24,-15
 3006 1384 9E4F      		sbci r25,-2
 3007 1386 FC01      		movw r30,r24
 3008 1388 3183      		std Z+1,r19
 3009 138a 2083      		st Z,r18
 427:lp_solve_5.5/lp_MPS.c ****           break;
 428:lp_solve_5.5/lp_MPS.c ****     /* *field6 = atof(buf); */
 429:lp_solve_5.5/lp_MPS.c ****     *field6 = strtod(buf, &ptr1);
 3010               		.loc 1 429 0
 3011 138c 00C0      		rjmp .L104
 3012               	.L116:
 427:lp_solve_5.5/lp_MPS.c ****           break;
 3013               		.loc 1 427 0
 3014 138e 0000      		nop
 3015               		.loc 1 429 0
 3016 1390 9E01      		movw r18,r28
 3017 1392 215F      		subi r18,-15
 3018 1394 3E4F      		sbci r19,-2
 3019 1396 CE01      		movw r24,r28
 3020 1398 0F96      		adiw r24,15
 3021 139a B901      		movw r22,r18
 3022 139c 0E94 0000 		call strtod
 3023 13a0 DC01      		movw r26,r24
 3024 13a2 CB01      		movw r24,r22
 3025 13a4 9E01      		movw r18,r28
 3026 13a6 2F5D      		subi r18,-33
 3027 13a8 3E4F      		sbci r19,-2
 3028 13aa F901      		movw r30,r18
 3029 13ac 2081      		ld r18,Z
 3030 13ae 3181      		ldd r19,Z+1
 3031 13b0 F901      		movw r30,r18
 3032 13b2 8083      		st Z,r24
 3033 13b4 9183      		std Z+1,r25
 3034 13b6 A283      		std Z+2,r26
 3035 13b8 B383      		std Z+3,r27
 430:lp_solve_5.5/lp_MPS.c ****     if(*ptr1)
 3036               		.loc 1 430 0
 3037 13ba CE01      		movw r24,r28
 3038 13bc 815F      		subi r24,-15
 3039 13be 9E4F      		sbci r25,-2
 3040 13c0 FC01      		movw r30,r24
 3041 13c2 8081      		ld r24,Z
 3042 13c4 9181      		ldd r25,Z+1
 3043 13c6 FC01      		movw r30,r24
 3044 13c8 8081      		ld r24,Z
 3045 13ca 8823      		tst r24
 3046 13cc 01F0      		breq .L105
 431:lp_solve_5.5/lp_MPS.c ****       return(-1);
 3047               		.loc 1 431 0
 3048 13ce 8FEF      		ldi r24,lo8(-1)
 3049 13d0 9FEF      		ldi r25,lo8(-1)
 3050 13d2 00C0      		rjmp .L111
 3051               	.L105:
 432:lp_solve_5.5/lp_MPS.c ****     items++;
 3052               		.loc 1 432 0
 3053 13d4 8981      		ldd r24,Y+1
 3054 13d6 9A81      		ldd r25,Y+2
 3055 13d8 0196      		adiw r24,1
 3056 13da 9A83      		std Y+2,r25
 3057 13dc 8983      		std Y+1,r24
 3058 13de 00C0      		rjmp .L106
 3059               	.L101:
 433:lp_solve_5.5/lp_MPS.c ****   }
 434:lp_solve_5.5/lp_MPS.c ****   else
 435:lp_solve_5.5/lp_MPS.c ****     *field6 = 0;
 3060               		.loc 1 435 0
 3061 13e0 CE01      		movw r24,r28
 3062 13e2 8F5D      		subi r24,-33
 3063 13e4 9E4F      		sbci r25,-2
 3064 13e6 FC01      		movw r30,r24
 3065 13e8 8081      		ld r24,Z
 3066 13ea 9181      		ldd r25,Z+1
 3067 13ec FC01      		movw r30,r24
 3068 13ee 1082      		st Z,__zero_reg__
 3069 13f0 1182      		std Z+1,__zero_reg__
 3070 13f2 1282      		std Z+2,__zero_reg__
 3071 13f4 1382      		std Z+3,__zero_reg__
 3072               	.L106:
 436:lp_solve_5.5/lp_MPS.c **** 
 437:lp_solve_5.5/lp_MPS.c ****   if((section == MPSSOS) && (items == 2)) {
 3073               		.loc 1 437 0
 3074 13f6 CE01      		movw r24,r28
 3075 13f8 8D5E      		subi r24,-19
 3076 13fa 9E4F      		sbci r25,-2
 3077 13fc FC01      		movw r30,r24
 3078 13fe 8081      		ld r24,Z
 3079 1400 9181      		ldd r25,Z+1
 3080 1402 0597      		sbiw r24,5
 3081 1404 01F4      		brne .L107
 3082               		.loc 1 437 0 is_stmt 0 discriminator 1
 3083 1406 8981      		ldd r24,Y+1
 3084 1408 9A81      		ldd r25,Y+2
 3085 140a 0297      		sbiw r24,2
 3086 140c 01F4      		brne .L107
 438:lp_solve_5.5/lp_MPS.c ****     strcpy(field3, field2);
 3087               		.loc 1 438 0 is_stmt 1
 3088 140e CE01      		movw r24,r28
 3089 1410 875E      		subi r24,-25
 3090 1412 9E4F      		sbci r25,-2
 3091 1414 FC01      		movw r30,r24
 3092 1416 2081      		ld r18,Z
 3093 1418 3181      		ldd r19,Z+1
 3094 141a CE01      		movw r24,r28
 3095 141c 855E      		subi r24,-27
 3096 141e 9E4F      		sbci r25,-2
 3097 1420 FC01      		movw r30,r24
 3098 1422 8081      		ld r24,Z
 3099 1424 9181      		ldd r25,Z+1
 3100 1426 B901      		movw r22,r18
 3101 1428 0E94 0000 		call strcpy
 439:lp_solve_5.5/lp_MPS.c ****     strcpy(field2, field1);
 3102               		.loc 1 439 0
 3103 142c CE01      		movw r24,r28
 3104 142e 895E      		subi r24,-23
 3105 1430 9E4F      		sbci r25,-2
 3106 1432 FC01      		movw r30,r24
 3107 1434 2081      		ld r18,Z
 3108 1436 3181      		ldd r19,Z+1
 3109 1438 CE01      		movw r24,r28
 3110 143a 875E      		subi r24,-25
 3111 143c 9E4F      		sbci r25,-2
 3112 143e FC01      		movw r30,r24
 3113 1440 8081      		ld r24,Z
 3114 1442 9181      		ldd r25,Z+1
 3115 1444 B901      		movw r22,r18
 3116 1446 0E94 0000 		call strcpy
 440:lp_solve_5.5/lp_MPS.c ****     *field1 = 0;
 3117               		.loc 1 440 0
 3118 144a CE01      		movw r24,r28
 3119 144c 895E      		subi r24,-23
 3120 144e 9E4F      		sbci r25,-2
 3121 1450 FC01      		movw r30,r24
 3122 1452 8081      		ld r24,Z
 3123 1454 9181      		ldd r25,Z+1
 3124 1456 FC01      		movw r30,r24
 3125 1458 1082      		st Z,__zero_reg__
 3126               	.L107:
 441:lp_solve_5.5/lp_MPS.c ****   }
 442:lp_solve_5.5/lp_MPS.c **** 
 443:lp_solve_5.5/lp_MPS.c ****   if((section != MPSOBJNAME) && (section != MPSBOUNDS)) {
 3127               		.loc 1 443 0
 3128 145a CE01      		movw r24,r28
 3129 145c 8D5E      		subi r24,-19
 3130 145e 9E4F      		sbci r25,-2
 3131 1460 FC01      		movw r30,r24
 3132 1462 8081      		ld r24,Z
 3133 1464 9181      		ldd r25,Z+1
 3134 1466 0196      		adiw r24,1
 3135 1468 01F4      		brne .+2
 3136 146a 00C0      		rjmp .L108
 3137               		.loc 1 443 0 is_stmt 0 discriminator 1
 3138 146c CE01      		movw r24,r28
 3139 146e 8D5E      		subi r24,-19
 3140 1470 9E4F      		sbci r25,-2
 3141 1472 FC01      		movw r30,r24
 3142 1474 8081      		ld r24,Z
 3143 1476 9181      		ldd r25,Z+1
 3144 1478 0397      		sbiw r24,3
 3145 147a 01F0      		breq .L108
 444:lp_solve_5.5/lp_MPS.c ****     for(ptr1 = field1; *ptr1; ptr1++)
 3146               		.loc 1 444 0 is_stmt 1
 3147 147c CE01      		movw r24,r28
 3148 147e 815F      		subi r24,-15
 3149 1480 9E4F      		sbci r25,-2
 3150 1482 9E01      		movw r18,r28
 3151 1484 295E      		subi r18,-23
 3152 1486 3E4F      		sbci r19,-2
 3153 1488 F901      		movw r30,r18
 3154 148a 2081      		ld r18,Z
 3155 148c 3181      		ldd r19,Z+1
 3156 148e FC01      		movw r30,r24
 3157 1490 3183      		std Z+1,r19
 3158 1492 2083      		st Z,r18
 3159 1494 00C0      		rjmp .L109
 3160               	.L110:
 445:lp_solve_5.5/lp_MPS.c ****       *ptr1=(char)toupper(*ptr1);
 3161               		.loc 1 445 0 discriminator 3
 3162 1496 CE01      		movw r24,r28
 3163 1498 815F      		subi r24,-15
 3164 149a 9E4F      		sbci r25,-2
 3165 149c FC01      		movw r30,r24
 3166 149e 0081      		ld r16,Z
 3167 14a0 1181      		ldd r17,Z+1
 3168 14a2 CE01      		movw r24,r28
 3169 14a4 815F      		subi r24,-15
 3170 14a6 9E4F      		sbci r25,-2
 3171 14a8 FC01      		movw r30,r24
 3172 14aa 8081      		ld r24,Z
 3173 14ac 9181      		ldd r25,Z+1
 3174 14ae FC01      		movw r30,r24
 3175 14b0 8081      		ld r24,Z
 3176 14b2 882F      		mov r24,r24
 3177 14b4 90E0      		ldi r25,0
 3178 14b6 0E94 0000 		call toupper
 3179 14ba F801      		movw r30,r16
 3180 14bc 8083      		st Z,r24
 444:lp_solve_5.5/lp_MPS.c ****     for(ptr1 = field1; *ptr1; ptr1++)
 3181               		.loc 1 444 0 discriminator 3
 3182 14be CE01      		movw r24,r28
 3183 14c0 815F      		subi r24,-15
 3184 14c2 9E4F      		sbci r25,-2
 3185 14c4 FC01      		movw r30,r24
 3186 14c6 8081      		ld r24,Z
 3187 14c8 9181      		ldd r25,Z+1
 3188 14ca 9C01      		movw r18,r24
 3189 14cc 2F5F      		subi r18,-1
 3190 14ce 3F4F      		sbci r19,-1
 3191 14d0 CE01      		movw r24,r28
 3192 14d2 815F      		subi r24,-15
 3193 14d4 9E4F      		sbci r25,-2
 3194 14d6 FC01      		movw r30,r24
 3195 14d8 3183      		std Z+1,r19
 3196 14da 2083      		st Z,r18
 3197               	.L109:
 444:lp_solve_5.5/lp_MPS.c ****     for(ptr1 = field1; *ptr1; ptr1++)
 3198               		.loc 1 444 0 is_stmt 0 discriminator 1
 3199 14dc CE01      		movw r24,r28
 3200 14de 815F      		subi r24,-15
 3201 14e0 9E4F      		sbci r25,-2
 3202 14e2 FC01      		movw r30,r24
 3203 14e4 8081      		ld r24,Z
 3204 14e6 9181      		ldd r25,Z+1
 3205 14e8 FC01      		movw r30,r24
 3206 14ea 8081      		ld r24,Z
 3207 14ec 8823      		tst r24
 3208 14ee 01F4      		brne .L110
 3209               	.L108:
 446:lp_solve_5.5/lp_MPS.c ****   }
 447:lp_solve_5.5/lp_MPS.c **** 
 448:lp_solve_5.5/lp_MPS.c ****   return(items);
 3210               		.loc 1 448 0 is_stmt 1
 3211 14f0 8981      		ldd r24,Y+1
 3212 14f2 9A81      		ldd r25,Y+2
 3213               	.L111:
 3214               	/* epilogue start */
 449:lp_solve_5.5/lp_MPS.c **** }
 3215               		.loc 1 449 0 discriminator 3
 3216 14f4 CE5D      		subi r28,-34
 3217 14f6 DE4F      		sbci r29,-2
 3218 14f8 0FB6      		in __tmp_reg__,__SREG__
 3219 14fa F894      		cli
 3220 14fc DEBF      		out __SP_H__,r29
 3221 14fe 0FBE      		out __SREG__,__tmp_reg__
 3222 1500 CDBF      		out __SP_L__,r28
 3223 1502 DF91      		pop r29
 3224 1504 CF91      		pop r28
 3225 1506 1F91      		pop r17
 3226 1508 0F91      		pop r16
 3227 150a FF90      		pop r15
 3228 150c EF90      		pop r14
 3229 150e DF90      		pop r13
 3230 1510 CF90      		pop r12
 3231 1512 BF90      		pop r11
 3232 1514 AF90      		pop r10
 3233 1516 9F90      		pop r9
 3234 1518 8F90      		pop r8
 3235 151a 0895      		ret
 3236               		.cfi_endproc
 3237               	.LFE11:
 3239               	.global	addmpscolumn
 3241               	addmpscolumn:
 3242               	.LFB12:
 450:lp_solve_5.5/lp_MPS.c **** 
 451:lp_solve_5.5/lp_MPS.c **** STATIC int addmpscolumn(lprec *lp, MYBOOL Int_section, int typeMPS, MYBOOL *Column_ready,
 452:lp_solve_5.5/lp_MPS.c ****                         int *count, REAL *Last_column, int *Last_columnno, char *Last_col_name)
 453:lp_solve_5.5/lp_MPS.c **** {
 3243               		.loc 1 453 0
 3244               		.cfi_startproc
 3245 151c AF92      		push r10
 3246               	.LCFI40:
 3247               		.cfi_def_cfa_offset 3
 3248               		.cfi_offset 10, -2
 3249 151e BF92      		push r11
 3250               	.LCFI41:
 3251               		.cfi_def_cfa_offset 4
 3252               		.cfi_offset 11, -3
 3253 1520 CF92      		push r12
 3254               	.LCFI42:
 3255               		.cfi_def_cfa_offset 5
 3256               		.cfi_offset 12, -4
 3257 1522 DF92      		push r13
 3258               	.LCFI43:
 3259               		.cfi_def_cfa_offset 6
 3260               		.cfi_offset 13, -5
 3261 1524 EF92      		push r14
 3262               	.LCFI44:
 3263               		.cfi_def_cfa_offset 7
 3264               		.cfi_offset 14, -6
 3265 1526 FF92      		push r15
 3266               	.LCFI45:
 3267               		.cfi_def_cfa_offset 8
 3268               		.cfi_offset 15, -7
 3269 1528 0F93      		push r16
 3270               	.LCFI46:
 3271               		.cfi_def_cfa_offset 9
 3272               		.cfi_offset 16, -8
 3273 152a 1F93      		push r17
 3274               	.LCFI47:
 3275               		.cfi_def_cfa_offset 10
 3276               		.cfi_offset 17, -9
 3277 152c CF93      		push r28
 3278               	.LCFI48:
 3279               		.cfi_def_cfa_offset 11
 3280               		.cfi_offset 28, -10
 3281 152e DF93      		push r29
 3282               	.LCFI49:
 3283               		.cfi_def_cfa_offset 12
 3284               		.cfi_offset 29, -11
 3285 1530 CDB7      		in r28,__SP_L__
 3286 1532 DEB7      		in r29,__SP_H__
 3287               	.LCFI50:
 3288               		.cfi_def_cfa_register 28
 3289 1534 6197      		sbiw r28,17
 3290               	.LCFI51:
 3291               		.cfi_def_cfa_offset 29
 3292 1536 0FB6      		in __tmp_reg__,__SREG__
 3293 1538 F894      		cli
 3294 153a DEBF      		out __SP_H__,r29
 3295 153c 0FBE      		out __SREG__,__tmp_reg__
 3296 153e CDBF      		out __SP_L__,r28
 3297               	/* prologue: function */
 3298               	/* frame size = 17 */
 3299               	/* stack size = 27 */
 3300               	.L__stack_usage = 27
 3301 1540 9C83      		std Y+4,r25
 3302 1542 8B83      		std Y+3,r24
 3303 1544 6D83      		std Y+5,r22
 3304 1546 5F83      		std Y+7,r21
 3305 1548 4E83      		std Y+6,r20
 3306 154a 3987      		std Y+9,r19
 3307 154c 2887      		std Y+8,r18
 3308 154e 1B87      		std Y+11,r17
 3309 1550 0A87      		std Y+10,r16
 3310 1552 FD86      		std Y+13,r15
 3311 1554 EC86      		std Y+12,r14
 3312 1556 DF86      		std Y+15,r13
 3313 1558 CE86      		std Y+14,r12
 3314 155a B98A      		std Y+17,r11
 3315 155c A88A      		std Y+16,r10
 454:lp_solve_5.5/lp_MPS.c ****   int ok = TRUE;
 3316               		.loc 1 454 0
 3317 155e 81E0      		ldi r24,lo8(1)
 3318 1560 90E0      		ldi r25,0
 3319 1562 9A83      		std Y+2,r25
 3320 1564 8983      		std Y+1,r24
 455:lp_solve_5.5/lp_MPS.c **** 
 456:lp_solve_5.5/lp_MPS.c ****   if (*Column_ready) {
 3321               		.loc 1 456 0
 3322 1566 8885      		ldd r24,Y+8
 3323 1568 9985      		ldd r25,Y+9
 3324 156a FC01      		movw r30,r24
 3325 156c 8081      		ld r24,Z
 3326 156e 8823      		tst r24
 3327 1570 01F4      		brne .+2
 3328 1572 00C0      		rjmp .L118
 457:lp_solve_5.5/lp_MPS.c ****     ok = add_columnex(lp, *count, Last_column, Last_columnno);
 3329               		.loc 1 457 0
 3330 1574 8A85      		ldd r24,Y+10
 3331 1576 9B85      		ldd r25,Y+11
 3332 1578 FC01      		movw r30,r24
 3333 157a 6081      		ld r22,Z
 3334 157c 7181      		ldd r23,Z+1
 3335 157e 2E85      		ldd r18,Y+14
 3336 1580 3F85      		ldd r19,Y+15
 3337 1582 4C85      		ldd r20,Y+12
 3338 1584 5D85      		ldd r21,Y+13
 3339 1586 8B81      		ldd r24,Y+3
 3340 1588 9C81      		ldd r25,Y+4
 3341 158a 0E94 0000 		call add_columnex
 3342 158e 882F      		mov r24,r24
 3343 1590 90E0      		ldi r25,0
 3344 1592 9A83      		std Y+2,r25
 3345 1594 8983      		std Y+1,r24
 458:lp_solve_5.5/lp_MPS.c ****     if (ok) {
 3346               		.loc 1 458 0
 3347 1596 8981      		ldd r24,Y+1
 3348 1598 9A81      		ldd r25,Y+2
 3349 159a 892B      		or r24,r25
 3350 159c 01F0      		breq .L119
 459:lp_solve_5.5/lp_MPS.c ****       ok = set_col_name(lp, lp->columns, Last_col_name);
 3351               		.loc 1 459 0
 3352 159e 8B81      		ldd r24,Y+3
 3353 15a0 9C81      		ldd r25,Y+4
 3354 15a2 8451      		subi r24,20
 3355 15a4 9E4F      		sbci r25,-2
 3356 15a6 FC01      		movw r30,r24
 3357 15a8 2081      		ld r18,Z
 3358 15aa 3181      		ldd r19,Z+1
 3359 15ac 4889      		ldd r20,Y+16
 3360 15ae 5989      		ldd r21,Y+17
 3361 15b0 8B81      		ldd r24,Y+3
 3362 15b2 9C81      		ldd r25,Y+4
 3363 15b4 B901      		movw r22,r18
 3364 15b6 0E94 0000 		call set_col_name
 3365 15ba 882F      		mov r24,r24
 3366 15bc 90E0      		ldi r25,0
 3367 15be 9A83      		std Y+2,r25
 3368 15c0 8983      		std Y+1,r24
 3369               	.L119:
 460:lp_solve_5.5/lp_MPS.c ****     }
 461:lp_solve_5.5/lp_MPS.c ****     if (ok) {
 3370               		.loc 1 461 0
 3371 15c2 8981      		ldd r24,Y+1
 3372 15c4 9A81      		ldd r25,Y+2
 3373 15c6 892B      		or r24,r25
 3374 15c8 01F0      		breq .L118
 462:lp_solve_5.5/lp_MPS.c ****       set_int(lp, lp->columns, Int_section);
 3375               		.loc 1 462 0
 3376 15ca 8B81      		ldd r24,Y+3
 3377 15cc 9C81      		ldd r25,Y+4
 3378 15ce 8451      		subi r24,20
 3379 15d0 9E4F      		sbci r25,-2
 3380 15d2 FC01      		movw r30,r24
 3381 15d4 2081      		ld r18,Z
 3382 15d6 3181      		ldd r19,Z+1
 3383 15d8 8B81      		ldd r24,Y+3
 3384 15da 9C81      		ldd r25,Y+4
 3385 15dc 4D81      		ldd r20,Y+5
 3386 15de B901      		movw r22,r18
 3387 15e0 0E94 0000 		call set_int
 463:lp_solve_5.5/lp_MPS.c ****       if ((Int_section) && (typeMPS & MPSIBM))
 3388               		.loc 1 463 0
 3389 15e4 8D81      		ldd r24,Y+5
 3390 15e6 8823      		tst r24
 3391 15e8 01F0      		breq .L118
 3392               		.loc 1 463 0 is_stmt 0 discriminator 1
 3393 15ea 8E81      		ldd r24,Y+6
 3394 15ec 9F81      		ldd r25,Y+7
 3395 15ee 8470      		andi r24,4
 3396 15f0 9927      		clr r25
 3397 15f2 892B      		or r24,r25
 3398 15f4 01F0      		breq .L118
 464:lp_solve_5.5/lp_MPS.c ****         set_bounds(lp, lp->columns, 10.0 / DEF_INFINITE, DEF_INFINITE / 10.0);
 3399               		.loc 1 464 0 is_stmt 1
 3400 15f6 8B81      		ldd r24,Y+3
 3401 15f8 9C81      		ldd r25,Y+4
 3402 15fa 8451      		subi r24,20
 3403 15fc 9E4F      		sbci r25,-2
 3404 15fe FC01      		movw r30,r24
 3405 1600 6081      		ld r22,Z
 3406 1602 7181      		ldd r23,Z+1
 3407 1604 8B81      		ldd r24,Y+3
 3408 1606 9C81      		ldd r25,Y+4
 3409 1608 18E0      		ldi r17,lo8(8)
 3410 160a E12E      		mov r14,r17
 3411 160c 1FE8      		ldi r17,lo8(-113)
 3412 160e F12E      		mov r15,r17
 3413 1610 01EA      		ldi r16,lo8(-95)
 3414 1612 1FE6      		ldi r17,lo8(111)
 3415 1614 28EF      		ldi r18,lo8(-8)
 3416 1616 32ED      		ldi r19,lo8(-46)
 3417 1618 4AE4      		ldi r20,lo8(74)
 3418 161a 5FE0      		ldi r21,lo8(15)
 3419 161c 0E94 0000 		call set_bounds
 3420               	.L118:
 465:lp_solve_5.5/lp_MPS.c ****     }
 466:lp_solve_5.5/lp_MPS.c ****   }
 467:lp_solve_5.5/lp_MPS.c ****   *Column_ready = FALSE;
 3421               		.loc 1 467 0
 3422 1620 8885      		ldd r24,Y+8
 3423 1622 9985      		ldd r25,Y+9
 3424 1624 FC01      		movw r30,r24
 3425 1626 1082      		st Z,__zero_reg__
 468:lp_solve_5.5/lp_MPS.c ****   *count = 0;
 3426               		.loc 1 468 0
 3427 1628 8A85      		ldd r24,Y+10
 3428 162a 9B85      		ldd r25,Y+11
 3429 162c FC01      		movw r30,r24
 3430 162e 1182      		std Z+1,__zero_reg__
 3431 1630 1082      		st Z,__zero_reg__
 469:lp_solve_5.5/lp_MPS.c ****   return(ok);
 3432               		.loc 1 469 0
 3433 1632 8981      		ldd r24,Y+1
 3434 1634 9A81      		ldd r25,Y+2
 3435               	/* epilogue start */
 470:lp_solve_5.5/lp_MPS.c **** }
 3436               		.loc 1 470 0
 3437 1636 6196      		adiw r28,17
 3438 1638 0FB6      		in __tmp_reg__,__SREG__
 3439 163a F894      		cli
 3440 163c DEBF      		out __SP_H__,r29
 3441 163e 0FBE      		out __SREG__,__tmp_reg__
 3442 1640 CDBF      		out __SP_L__,r28
 3443 1642 DF91      		pop r29
 3444 1644 CF91      		pop r28
 3445 1646 1F91      		pop r17
 3446 1648 0F91      		pop r16
 3447 164a FF90      		pop r15
 3448 164c EF90      		pop r14
 3449 164e DF90      		pop r13
 3450 1650 CF90      		pop r12
 3451 1652 BF90      		pop r11
 3452 1654 AF90      		pop r10
 3453 1656 0895      		ret
 3454               		.cfi_endproc
 3455               	.LFE12:
 3457               	.global	__addsf3
 3458               	.global	appendmpsitem
 3460               	appendmpsitem:
 3461               	.LFB13:
 471:lp_solve_5.5/lp_MPS.c **** 
 472:lp_solve_5.5/lp_MPS.c **** #if 0
 473:lp_solve_5.5/lp_MPS.c **** STATIC MYBOOL appendmpsitem(int *count, int rowIndex[], REAL rowValue[])
 474:lp_solve_5.5/lp_MPS.c **** {
 475:lp_solve_5.5/lp_MPS.c ****   int i = *count;
 476:lp_solve_5.5/lp_MPS.c **** 
 477:lp_solve_5.5/lp_MPS.c ****   if(rowValue[i] == 0)
 478:lp_solve_5.5/lp_MPS.c ****     return( FALSE );
 479:lp_solve_5.5/lp_MPS.c **** 
 480:lp_solve_5.5/lp_MPS.c ****   while((i > 0) && (rowIndex[i] < rowIndex[i-1])) {
 481:lp_solve_5.5/lp_MPS.c ****     swapINT (rowIndex+i, rowIndex+i-1);
 482:lp_solve_5.5/lp_MPS.c ****     swapREAL(rowValue+i, rowValue+i-1);
 483:lp_solve_5.5/lp_MPS.c ****     i--;
 484:lp_solve_5.5/lp_MPS.c ****   }
 485:lp_solve_5.5/lp_MPS.c ****   (*count)++;
 486:lp_solve_5.5/lp_MPS.c ****   return( TRUE );
 487:lp_solve_5.5/lp_MPS.c **** }
 488:lp_solve_5.5/lp_MPS.c **** #endif
 489:lp_solve_5.5/lp_MPS.c **** 
 490:lp_solve_5.5/lp_MPS.c **** STATIC MYBOOL appendmpsitem(int *count, int rowIndex[], REAL rowValue[])
 491:lp_solve_5.5/lp_MPS.c **** {
 3462               		.loc 1 491 0
 3463               		.cfi_startproc
 3464 1658 0F93      		push r16
 3465               	.LCFI52:
 3466               		.cfi_def_cfa_offset 3
 3467               		.cfi_offset 16, -2
 3468 165a 1F93      		push r17
 3469               	.LCFI53:
 3470               		.cfi_def_cfa_offset 4
 3471               		.cfi_offset 17, -3
 3472 165c CF93      		push r28
 3473               	.LCFI54:
 3474               		.cfi_def_cfa_offset 5
 3475               		.cfi_offset 28, -4
 3476 165e DF93      		push r29
 3477               	.LCFI55:
 3478               		.cfi_def_cfa_offset 6
 3479               		.cfi_offset 29, -5
 3480 1660 CDB7      		in r28,__SP_L__
 3481 1662 DEB7      		in r29,__SP_H__
 3482               	.LCFI56:
 3483               		.cfi_def_cfa_register 28
 3484 1664 2A97      		sbiw r28,10
 3485               	.LCFI57:
 3486               		.cfi_def_cfa_offset 16
 3487 1666 0FB6      		in __tmp_reg__,__SREG__
 3488 1668 F894      		cli
 3489 166a DEBF      		out __SP_H__,r29
 3490 166c 0FBE      		out __SREG__,__tmp_reg__
 3491 166e CDBF      		out __SP_L__,r28
 3492               	/* prologue: function */
 3493               	/* frame size = 10 */
 3494               	/* stack size = 14 */
 3495               	.L__stack_usage = 14
 3496 1670 9E83      		std Y+6,r25
 3497 1672 8D83      		std Y+5,r24
 3498 1674 7887      		std Y+8,r23
 3499 1676 6F83      		std Y+7,r22
 3500 1678 5A87      		std Y+10,r21
 3501 167a 4987      		std Y+9,r20
 492:lp_solve_5.5/lp_MPS.c ****   int i = *count;
 3502               		.loc 1 492 0
 3503 167c 8D81      		ldd r24,Y+5
 3504 167e 9E81      		ldd r25,Y+6
 3505 1680 FC01      		movw r30,r24
 3506 1682 8081      		ld r24,Z
 3507 1684 9181      		ldd r25,Z+1
 3508 1686 9A83      		std Y+2,r25
 3509 1688 8983      		std Y+1,r24
 493:lp_solve_5.5/lp_MPS.c **** 
 494:lp_solve_5.5/lp_MPS.c ****   /* Check for non-negativity of the index */
 495:lp_solve_5.5/lp_MPS.c ****   if(rowIndex[i] < 0)
 3510               		.loc 1 495 0
 3511 168a 8981      		ldd r24,Y+1
 3512 168c 9A81      		ldd r25,Y+2
 3513 168e 880F      		lsl r24
 3514 1690 991F      		rol r25
 3515 1692 2F81      		ldd r18,Y+7
 3516 1694 3885      		ldd r19,Y+8
 3517 1696 820F      		add r24,r18
 3518 1698 931F      		adc r25,r19
 3519 169a FC01      		movw r30,r24
 3520 169c 8081      		ld r24,Z
 3521 169e 9181      		ldd r25,Z+1
 3522 16a0 9923      		tst r25
 3523 16a2 04F4      		brge .L124
 496:lp_solve_5.5/lp_MPS.c ****     return( FALSE );
 3524               		.loc 1 496 0
 3525 16a4 80E0      		ldi r24,0
 3526 16a6 00C0      		rjmp .L123
 3527               	.L126:
 497:lp_solve_5.5/lp_MPS.c **** 
 498:lp_solve_5.5/lp_MPS.c ****   /* Move the element so that the index list is sorted ascending */
 499:lp_solve_5.5/lp_MPS.c ****   while((i > 0) && (rowIndex[i] < rowIndex[i-1])) {
 500:lp_solve_5.5/lp_MPS.c ****     swapINT (rowIndex+i, rowIndex+i-1);
 3528               		.loc 1 500 0
 3529 16a8 8981      		ldd r24,Y+1
 3530 16aa 9A81      		ldd r25,Y+2
 3531 16ac 8150      		subi r24,1
 3532 16ae 9048      		sbci r25,-128
 3533 16b0 880F      		lsl r24
 3534 16b2 991F      		rol r25
 3535 16b4 2F81      		ldd r18,Y+7
 3536 16b6 3885      		ldd r19,Y+8
 3537 16b8 A901      		movw r20,r18
 3538 16ba 480F      		add r20,r24
 3539 16bc 591F      		adc r21,r25
 3540 16be 8981      		ldd r24,Y+1
 3541 16c0 9A81      		ldd r25,Y+2
 3542 16c2 880F      		lsl r24
 3543 16c4 991F      		rol r25
 3544 16c6 2F81      		ldd r18,Y+7
 3545 16c8 3885      		ldd r19,Y+8
 3546 16ca 820F      		add r24,r18
 3547 16cc 931F      		adc r25,r19
 3548 16ce BA01      		movw r22,r20
 3549 16d0 0E94 0000 		call swapINT
 501:lp_solve_5.5/lp_MPS.c ****     swapREAL(rowValue+i, rowValue+i-1);
 3550               		.loc 1 501 0
 3551 16d4 8981      		ldd r24,Y+1
 3552 16d6 9A81      		ldd r25,Y+2
 3553 16d8 8150      		subi r24,1
 3554 16da 904C      		sbci r25,-64
 3555 16dc 880F      		lsl r24
 3556 16de 991F      		rol r25
 3557 16e0 880F      		lsl r24
 3558 16e2 991F      		rol r25
 3559 16e4 2985      		ldd r18,Y+9
 3560 16e6 3A85      		ldd r19,Y+10
 3561 16e8 A901      		movw r20,r18
 3562 16ea 480F      		add r20,r24
 3563 16ec 591F      		adc r21,r25
 3564 16ee 8981      		ldd r24,Y+1
 3565 16f0 9A81      		ldd r25,Y+2
 3566 16f2 880F      		lsl r24
 3567 16f4 991F      		rol r25
 3568 16f6 880F      		lsl r24
 3569 16f8 991F      		rol r25
 3570 16fa 2985      		ldd r18,Y+9
 3571 16fc 3A85      		ldd r19,Y+10
 3572 16fe 820F      		add r24,r18
 3573 1700 931F      		adc r25,r19
 3574 1702 BA01      		movw r22,r20
 3575 1704 0E94 0000 		call swapREAL
 502:lp_solve_5.5/lp_MPS.c ****     i--;
 3576               		.loc 1 502 0
 3577 1708 8981      		ldd r24,Y+1
 3578 170a 9A81      		ldd r25,Y+2
 3579 170c 0197      		sbiw r24,1
 3580 170e 9A83      		std Y+2,r25
 3581 1710 8983      		std Y+1,r24
 3582               	.L124:
 499:lp_solve_5.5/lp_MPS.c ****     swapINT (rowIndex+i, rowIndex+i-1);
 3583               		.loc 1 499 0
 3584 1712 8981      		ldd r24,Y+1
 3585 1714 9A81      		ldd r25,Y+2
 3586 1716 1816      		cp __zero_reg__,r24
 3587 1718 1906      		cpc __zero_reg__,r25
 3588 171a 04F4      		brge .L125
 499:lp_solve_5.5/lp_MPS.c ****     swapINT (rowIndex+i, rowIndex+i-1);
 3589               		.loc 1 499 0 is_stmt 0 discriminator 1
 3590 171c 8981      		ldd r24,Y+1
 3591 171e 9A81      		ldd r25,Y+2
 3592 1720 880F      		lsl r24
 3593 1722 991F      		rol r25
 3594 1724 2F81      		ldd r18,Y+7
 3595 1726 3885      		ldd r19,Y+8
 3596 1728 820F      		add r24,r18
 3597 172a 931F      		adc r25,r19
 3598 172c FC01      		movw r30,r24
 3599 172e 2081      		ld r18,Z
 3600 1730 3181      		ldd r19,Z+1
 3601 1732 8981      		ldd r24,Y+1
 3602 1734 9A81      		ldd r25,Y+2
 3603 1736 8150      		subi r24,1
 3604 1738 9048      		sbci r25,-128
 3605 173a 880F      		lsl r24
 3606 173c 991F      		rol r25
 3607 173e 4F81      		ldd r20,Y+7
 3608 1740 5885      		ldd r21,Y+8
 3609 1742 840F      		add r24,r20
 3610 1744 951F      		adc r25,r21
 3611 1746 FC01      		movw r30,r24
 3612 1748 8081      		ld r24,Z
 3613 174a 9181      		ldd r25,Z+1
 3614 174c 2817      		cp r18,r24
 3615 174e 3907      		cpc r19,r25
 3616 1750 04F4      		brge .+2
 3617 1752 00C0      		rjmp .L126
 3618               	.L125:
 503:lp_solve_5.5/lp_MPS.c ****   }
 504:lp_solve_5.5/lp_MPS.c **** 
 505:lp_solve_5.5/lp_MPS.c ****   /* Add same-indexed items (which is rarely encountered), and shorten the list */
 506:lp_solve_5.5/lp_MPS.c ****   if((i < *count) && (rowIndex[i] == rowIndex[i+1])) {
 3619               		.loc 1 506 0 is_stmt 1
 3620 1754 8D81      		ldd r24,Y+5
 3621 1756 9E81      		ldd r25,Y+6
 3622 1758 FC01      		movw r30,r24
 3623 175a 2081      		ld r18,Z
 3624 175c 3181      		ldd r19,Z+1
 3625 175e 8981      		ldd r24,Y+1
 3626 1760 9A81      		ldd r25,Y+2
 3627 1762 8217      		cp r24,r18
 3628 1764 9307      		cpc r25,r19
 3629 1766 04F0      		brlt .+2
 3630 1768 00C0      		rjmp .L127
 3631               		.loc 1 506 0 is_stmt 0 discriminator 1
 3632 176a 8981      		ldd r24,Y+1
 3633 176c 9A81      		ldd r25,Y+2
 3634 176e 880F      		lsl r24
 3635 1770 991F      		rol r25
 3636 1772 2F81      		ldd r18,Y+7
 3637 1774 3885      		ldd r19,Y+8
 3638 1776 820F      		add r24,r18
 3639 1778 931F      		adc r25,r19
 3640 177a FC01      		movw r30,r24
 3641 177c 2081      		ld r18,Z
 3642 177e 3181      		ldd r19,Z+1
 3643 1780 8981      		ldd r24,Y+1
 3644 1782 9A81      		ldd r25,Y+2
 3645 1784 0196      		adiw r24,1
 3646 1786 880F      		lsl r24
 3647 1788 991F      		rol r25
 3648 178a 4F81      		ldd r20,Y+7
 3649 178c 5885      		ldd r21,Y+8
 3650 178e 840F      		add r24,r20
 3651 1790 951F      		adc r25,r21
 3652 1792 FC01      		movw r30,r24
 3653 1794 8081      		ld r24,Z
 3654 1796 9181      		ldd r25,Z+1
 3655 1798 2817      		cp r18,r24
 3656 179a 3907      		cpc r19,r25
 3657 179c 01F0      		breq .+2
 3658 179e 00C0      		rjmp .L127
 3659               	.LBB3:
 507:lp_solve_5.5/lp_MPS.c ****     int ii = i + 1;
 3660               		.loc 1 507 0 is_stmt 1
 3661 17a0 8981      		ldd r24,Y+1
 3662 17a2 9A81      		ldd r25,Y+2
 3663 17a4 0196      		adiw r24,1
 3664 17a6 9C83      		std Y+4,r25
 3665 17a8 8B83      		std Y+3,r24
 508:lp_solve_5.5/lp_MPS.c ****     rowValue[i] += rowValue[ii];
 3666               		.loc 1 508 0
 3667 17aa 8981      		ldd r24,Y+1
 3668 17ac 9A81      		ldd r25,Y+2
 3669 17ae 880F      		lsl r24
 3670 17b0 991F      		rol r25
 3671 17b2 880F      		lsl r24
 3672 17b4 991F      		rol r25
 3673 17b6 2985      		ldd r18,Y+9
 3674 17b8 3A85      		ldd r19,Y+10
 3675 17ba 8901      		movw r16,r18
 3676 17bc 080F      		add r16,r24
 3677 17be 191F      		adc r17,r25
 3678 17c0 8981      		ldd r24,Y+1
 3679 17c2 9A81      		ldd r25,Y+2
 3680 17c4 880F      		lsl r24
 3681 17c6 991F      		rol r25
 3682 17c8 880F      		lsl r24
 3683 17ca 991F      		rol r25
 3684 17cc 2985      		ldd r18,Y+9
 3685 17ce 3A85      		ldd r19,Y+10
 3686 17d0 820F      		add r24,r18
 3687 17d2 931F      		adc r25,r19
 3688 17d4 FC01      		movw r30,r24
 3689 17d6 8081      		ld r24,Z
 3690 17d8 9181      		ldd r25,Z+1
 3691 17da A281      		ldd r26,Z+2
 3692 17dc B381      		ldd r27,Z+3
 3693 17de 2B81      		ldd r18,Y+3
 3694 17e0 3C81      		ldd r19,Y+4
 3695 17e2 220F      		lsl r18
 3696 17e4 331F      		rol r19
 3697 17e6 220F      		lsl r18
 3698 17e8 331F      		rol r19
 3699 17ea 4985      		ldd r20,Y+9
 3700 17ec 5A85      		ldd r21,Y+10
 3701 17ee 240F      		add r18,r20
 3702 17f0 351F      		adc r19,r21
 3703 17f2 F901      		movw r30,r18
 3704 17f4 2081      		ld r18,Z
 3705 17f6 3181      		ldd r19,Z+1
 3706 17f8 4281      		ldd r20,Z+2
 3707 17fa 5381      		ldd r21,Z+3
 3708 17fc BC01      		movw r22,r24
 3709 17fe CD01      		movw r24,r26
 3710 1800 0E94 0000 		call __addsf3
 3711 1804 DC01      		movw r26,r24
 3712 1806 CB01      		movw r24,r22
 3713 1808 F801      		movw r30,r16
 3714 180a 8083      		st Z,r24
 3715 180c 9183      		std Z+1,r25
 3716 180e A283      		std Z+2,r26
 3717 1810 B383      		std Z+3,r27
 509:lp_solve_5.5/lp_MPS.c ****     (*count)--;
 3718               		.loc 1 509 0
 3719 1812 8D81      		ldd r24,Y+5
 3720 1814 9E81      		ldd r25,Y+6
 3721 1816 FC01      		movw r30,r24
 3722 1818 8081      		ld r24,Z
 3723 181a 9181      		ldd r25,Z+1
 3724 181c 9C01      		movw r18,r24
 3725 181e 2150      		subi r18,1
 3726 1820 3109      		sbc r19,__zero_reg__
 3727 1822 8D81      		ldd r24,Y+5
 3728 1824 9E81      		ldd r25,Y+6
 3729 1826 FC01      		movw r30,r24
 3730 1828 3183      		std Z+1,r19
 3731 182a 2083      		st Z,r18
 510:lp_solve_5.5/lp_MPS.c ****     while(ii < *count) {
 3732               		.loc 1 510 0
 3733 182c 00C0      		rjmp .L128
 3734               	.L129:
 511:lp_solve_5.5/lp_MPS.c ****       rowIndex[ii] = rowIndex[ii+1];
 3735               		.loc 1 511 0
 3736 182e 8B81      		ldd r24,Y+3
 3737 1830 9C81      		ldd r25,Y+4
 3738 1832 880F      		lsl r24
 3739 1834 991F      		rol r25
 3740 1836 2F81      		ldd r18,Y+7
 3741 1838 3885      		ldd r19,Y+8
 3742 183a 820F      		add r24,r18
 3743 183c 931F      		adc r25,r19
 3744 183e 2B81      		ldd r18,Y+3
 3745 1840 3C81      		ldd r19,Y+4
 3746 1842 2F5F      		subi r18,-1
 3747 1844 3F4F      		sbci r19,-1
 3748 1846 220F      		lsl r18
 3749 1848 331F      		rol r19
 3750 184a 4F81      		ldd r20,Y+7
 3751 184c 5885      		ldd r21,Y+8
 3752 184e 240F      		add r18,r20
 3753 1850 351F      		adc r19,r21
 3754 1852 F901      		movw r30,r18
 3755 1854 2081      		ld r18,Z
 3756 1856 3181      		ldd r19,Z+1
 3757 1858 FC01      		movw r30,r24
 3758 185a 3183      		std Z+1,r19
 3759 185c 2083      		st Z,r18
 512:lp_solve_5.5/lp_MPS.c ****       rowValue[ii] = rowValue[ii+1];
 3760               		.loc 1 512 0
 3761 185e 8B81      		ldd r24,Y+3
 3762 1860 9C81      		ldd r25,Y+4
 3763 1862 880F      		lsl r24
 3764 1864 991F      		rol r25
 3765 1866 880F      		lsl r24
 3766 1868 991F      		rol r25
 3767 186a 2985      		ldd r18,Y+9
 3768 186c 3A85      		ldd r19,Y+10
 3769 186e 280F      		add r18,r24
 3770 1870 391F      		adc r19,r25
 3771 1872 8B81      		ldd r24,Y+3
 3772 1874 9C81      		ldd r25,Y+4
 3773 1876 0196      		adiw r24,1
 3774 1878 880F      		lsl r24
 3775 187a 991F      		rol r25
 3776 187c 880F      		lsl r24
 3777 187e 991F      		rol r25
 3778 1880 4985      		ldd r20,Y+9
 3779 1882 5A85      		ldd r21,Y+10
 3780 1884 840F      		add r24,r20
 3781 1886 951F      		adc r25,r21
 3782 1888 FC01      		movw r30,r24
 3783 188a 8081      		ld r24,Z
 3784 188c 9181      		ldd r25,Z+1
 3785 188e A281      		ldd r26,Z+2
 3786 1890 B381      		ldd r27,Z+3
 3787 1892 F901      		movw r30,r18
 3788 1894 8083      		st Z,r24
 3789 1896 9183      		std Z+1,r25
 3790 1898 A283      		std Z+2,r26
 3791 189a B383      		std Z+3,r27
 513:lp_solve_5.5/lp_MPS.c ****       ii++;
 3792               		.loc 1 513 0
 3793 189c 8B81      		ldd r24,Y+3
 3794 189e 9C81      		ldd r25,Y+4
 3795 18a0 0196      		adiw r24,1
 3796 18a2 9C83      		std Y+4,r25
 3797 18a4 8B83      		std Y+3,r24
 3798               	.L128:
 510:lp_solve_5.5/lp_MPS.c ****       rowIndex[ii] = rowIndex[ii+1];
 3799               		.loc 1 510 0
 3800 18a6 8D81      		ldd r24,Y+5
 3801 18a8 9E81      		ldd r25,Y+6
 3802 18aa FC01      		movw r30,r24
 3803 18ac 2081      		ld r18,Z
 3804 18ae 3181      		ldd r19,Z+1
 3805 18b0 8B81      		ldd r24,Y+3
 3806 18b2 9C81      		ldd r25,Y+4
 3807 18b4 8217      		cp r24,r18
 3808 18b6 9307      		cpc r25,r19
 3809 18b8 04F4      		brge .+2
 3810 18ba 00C0      		rjmp .L129
 3811               	.L127:
 3812               	.LBE3:
 514:lp_solve_5.5/lp_MPS.c ****     }
 515:lp_solve_5.5/lp_MPS.c ****   }
 516:lp_solve_5.5/lp_MPS.c **** 
 517:lp_solve_5.5/lp_MPS.c ****   /* Update the count and return */
 518:lp_solve_5.5/lp_MPS.c ****   (*count)++;
 3813               		.loc 1 518 0
 3814 18bc 8D81      		ldd r24,Y+5
 3815 18be 9E81      		ldd r25,Y+6
 3816 18c0 FC01      		movw r30,r24
 3817 18c2 8081      		ld r24,Z
 3818 18c4 9181      		ldd r25,Z+1
 3819 18c6 9C01      		movw r18,r24
 3820 18c8 2F5F      		subi r18,-1
 3821 18ca 3F4F      		sbci r19,-1
 3822 18cc 8D81      		ldd r24,Y+5
 3823 18ce 9E81      		ldd r25,Y+6
 3824 18d0 FC01      		movw r30,r24
 3825 18d2 3183      		std Z+1,r19
 3826 18d4 2083      		st Z,r18
 519:lp_solve_5.5/lp_MPS.c ****   return( TRUE );
 3827               		.loc 1 519 0
 3828 18d6 81E0      		ldi r24,lo8(1)
 3829               	.L123:
 3830               	/* epilogue start */
 520:lp_solve_5.5/lp_MPS.c **** }
 3831               		.loc 1 520 0
 3832 18d8 2A96      		adiw r28,10
 3833 18da 0FB6      		in __tmp_reg__,__SREG__
 3834 18dc F894      		cli
 3835 18de DEBF      		out __SP_H__,r29
 3836 18e0 0FBE      		out __SREG__,__tmp_reg__
 3837 18e2 CDBF      		out __SP_L__,r28
 3838 18e4 DF91      		pop r29
 3839 18e6 CF91      		pop r28
 3840 18e8 1F91      		pop r17
 3841 18ea 0F91      		pop r16
 3842 18ec 0895      		ret
 3843               		.cfi_endproc
 3844               	.LFE13:
 3846               		.section	.rodata
 3847               	.LC13:
 3848 01a9 7200      		.string	"r"
 3849               		.text
 3850               	.global	MPS_readfile
 3852               	MPS_readfile:
 3853               	.LFB14:
 521:lp_solve_5.5/lp_MPS.c **** 
 522:lp_solve_5.5/lp_MPS.c **** MYBOOL MPS_readfile(lprec **newlp, char *filename, int typeMPS, int verbose)
 523:lp_solve_5.5/lp_MPS.c **** {
 3854               		.loc 1 523 0
 3855               		.cfi_startproc
 3856 18ee CF93      		push r28
 3857               	.LCFI58:
 3858               		.cfi_def_cfa_offset 3
 3859               		.cfi_offset 28, -2
 3860 18f0 DF93      		push r29
 3861               	.LCFI59:
 3862               		.cfi_def_cfa_offset 4
 3863               		.cfi_offset 29, -3
 3864 18f2 CDB7      		in r28,__SP_L__
 3865 18f4 DEB7      		in r29,__SP_H__
 3866               	.LCFI60:
 3867               		.cfi_def_cfa_register 28
 3868 18f6 2B97      		sbiw r28,11
 3869               	.LCFI61:
 3870               		.cfi_def_cfa_offset 15
 3871 18f8 0FB6      		in __tmp_reg__,__SREG__
 3872 18fa F894      		cli
 3873 18fc DEBF      		out __SP_H__,r29
 3874 18fe 0FBE      		out __SREG__,__tmp_reg__
 3875 1900 CDBF      		out __SP_L__,r28
 3876               	/* prologue: function */
 3877               	/* frame size = 11 */
 3878               	/* stack size = 13 */
 3879               	.L__stack_usage = 13
 3880 1902 9D83      		std Y+5,r25
 3881 1904 8C83      		std Y+4,r24
 3882 1906 7F83      		std Y+7,r23
 3883 1908 6E83      		std Y+6,r22
 3884 190a 5987      		std Y+9,r21
 3885 190c 4887      		std Y+8,r20
 3886 190e 3B87      		std Y+11,r19
 3887 1910 2A87      		std Y+10,r18
 524:lp_solve_5.5/lp_MPS.c ****   MYBOOL status = FALSE;
 3888               		.loc 1 524 0
 3889 1912 1982      		std Y+1,__zero_reg__
 525:lp_solve_5.5/lp_MPS.c ****   FILE   *fpin;
 526:lp_solve_5.5/lp_MPS.c **** 
 527:lp_solve_5.5/lp_MPS.c ****   fpin = fopen(filename, "r");
 3890               		.loc 1 527 0
 3891 1914 8E81      		ldd r24,Y+6
 3892 1916 9F81      		ldd r25,Y+7
 3893 1918 60E0      		ldi r22,lo8(.LC13)
 3894 191a 70E0      		ldi r23,hi8(.LC13)
 3895 191c 0E94 0000 		call fopen
 3896 1920 9B83      		std Y+3,r25
 3897 1922 8A83      		std Y+2,r24
 528:lp_solve_5.5/lp_MPS.c ****   if(fpin != NULL) {
 3898               		.loc 1 528 0
 3899 1924 8A81      		ldd r24,Y+2
 3900 1926 9B81      		ldd r25,Y+3
 3901 1928 892B      		or r24,r25
 3902 192a 01F0      		breq .L131
 529:lp_solve_5.5/lp_MPS.c ****     status = MPS_readhandle(newlp, fpin, typeMPS, verbose);
 3903               		.loc 1 529 0
 3904 192c 2A85      		ldd r18,Y+10
 3905 192e 3B85      		ldd r19,Y+11
 3906 1930 4885      		ldd r20,Y+8
 3907 1932 5985      		ldd r21,Y+9
 3908 1934 6A81      		ldd r22,Y+2
 3909 1936 7B81      		ldd r23,Y+3
 3910 1938 8C81      		ldd r24,Y+4
 3911 193a 9D81      		ldd r25,Y+5
 3912 193c 0E94 0000 		call MPS_readhandle
 3913 1940 8983      		std Y+1,r24
 530:lp_solve_5.5/lp_MPS.c ****     fclose(fpin);
 3914               		.loc 1 530 0
 3915 1942 8A81      		ldd r24,Y+2
 3916 1944 9B81      		ldd r25,Y+3
 3917 1946 0E94 0000 		call fclose
 3918               	.L131:
 531:lp_solve_5.5/lp_MPS.c ****   }
 532:lp_solve_5.5/lp_MPS.c ****   return( status );
 3919               		.loc 1 532 0
 3920 194a 8981      		ldd r24,Y+1
 3921               	/* epilogue start */
 533:lp_solve_5.5/lp_MPS.c **** }
 3922               		.loc 1 533 0
 3923 194c 2B96      		adiw r28,11
 3924 194e 0FB6      		in __tmp_reg__,__SREG__
 3925 1950 F894      		cli
 3926 1952 DEBF      		out __SP_H__,r29
 3927 1954 0FBE      		out __SREG__,__tmp_reg__
 3928 1956 CDBF      		out __SP_L__,r28
 3929 1958 DF91      		pop r29
 3930 195a CF91      		pop r28
 3931 195c 0895      		ret
 3932               		.cfi_endproc
 3933               	.LFE14:
 3936               	MPS_input:
 3937               	.LFB15:
 534:lp_solve_5.5/lp_MPS.c **** 
 535:lp_solve_5.5/lp_MPS.c **** static int __WINAPI MPS_input(void *fpin, char *buf, int max_size)
 536:lp_solve_5.5/lp_MPS.c **** {
 3938               		.loc 1 536 0
 3939               		.cfi_startproc
 3940 195e CF93      		push r28
 3941               	.LCFI62:
 3942               		.cfi_def_cfa_offset 3
 3943               		.cfi_offset 28, -2
 3944 1960 DF93      		push r29
 3945               	.LCFI63:
 3946               		.cfi_def_cfa_offset 4
 3947               		.cfi_offset 29, -3
 3948 1962 00D0      		rcall .
 3949 1964 00D0      		rcall .
 3950 1966 00D0      		rcall .
 3951               	.LCFI64:
 3952               		.cfi_def_cfa_offset 10
 3953 1968 CDB7      		in r28,__SP_L__
 3954 196a DEB7      		in r29,__SP_H__
 3955               	.LCFI65:
 3956               		.cfi_def_cfa_register 28
 3957               	/* prologue: function */
 3958               	/* frame size = 6 */
 3959               	/* stack size = 8 */
 3960               	.L__stack_usage = 8
 3961 196c 9A83      		std Y+2,r25
 3962 196e 8983      		std Y+1,r24
 3963 1970 7C83      		std Y+4,r23
 3964 1972 6B83      		std Y+3,r22
 3965 1974 5E83      		std Y+6,r21
 3966 1976 4D83      		std Y+5,r20
 537:lp_solve_5.5/lp_MPS.c ****   return(fgets(buf, max_size, (FILE *) fpin) != NULL);
 3967               		.loc 1 537 0
 3968 1978 4981      		ldd r20,Y+1
 3969 197a 5A81      		ldd r21,Y+2
 3970 197c 2D81      		ldd r18,Y+5
 3971 197e 3E81      		ldd r19,Y+6
 3972 1980 8B81      		ldd r24,Y+3
 3973 1982 9C81      		ldd r25,Y+4
 3974 1984 B901      		movw r22,r18
 3975 1986 0E94 0000 		call fgets
 3976 198a 21E0      		ldi r18,lo8(1)
 3977 198c 892B      		or r24,r25
 3978 198e 01F4      		brne .L134
 3979 1990 20E0      		ldi r18,0
 3980               	.L134:
 3981 1992 822F      		mov r24,r18
 3982 1994 90E0      		ldi r25,0
 3983               	/* epilogue start */
 538:lp_solve_5.5/lp_MPS.c **** }
 3984               		.loc 1 538 0
 3985 1996 2696      		adiw r28,6
 3986 1998 0FB6      		in __tmp_reg__,__SREG__
 3987 199a F894      		cli
 3988 199c DEBF      		out __SP_H__,r29
 3989 199e 0FBE      		out __SREG__,__tmp_reg__
 3990 19a0 CDBF      		out __SP_L__,r28
 3991 19a2 DF91      		pop r29
 3992 19a4 CF91      		pop r28
 3993 19a6 0895      		ret
 3994               		.cfi_endproc
 3995               	.LFE15:
 3997               	.global	MPS_readhandle
 3999               	MPS_readhandle:
 4000               	.LFB16:
 539:lp_solve_5.5/lp_MPS.c **** 
 540:lp_solve_5.5/lp_MPS.c **** MYBOOL __WINAPI MPS_readhandle(lprec **newlp, FILE *filehandle, int typeMPS, int verbose)
 541:lp_solve_5.5/lp_MPS.c **** {
 4001               		.loc 1 541 0
 4002               		.cfi_startproc
 4003 19a8 0F93      		push r16
 4004               	.LCFI66:
 4005               		.cfi_def_cfa_offset 3
 4006               		.cfi_offset 16, -2
 4007 19aa 1F93      		push r17
 4008               	.LCFI67:
 4009               		.cfi_def_cfa_offset 4
 4010               		.cfi_offset 17, -3
 4011 19ac CF93      		push r28
 4012               	.LCFI68:
 4013               		.cfi_def_cfa_offset 5
 4014               		.cfi_offset 28, -4
 4015 19ae DF93      		push r29
 4016               	.LCFI69:
 4017               		.cfi_def_cfa_offset 6
 4018               		.cfi_offset 29, -5
 4019 19b0 CDB7      		in r28,__SP_L__
 4020 19b2 DEB7      		in r29,__SP_H__
 4021               	.LCFI70:
 4022               		.cfi_def_cfa_register 28
 4023 19b4 2897      		sbiw r28,8
 4024               	.LCFI71:
 4025               		.cfi_def_cfa_offset 14
 4026 19b6 0FB6      		in __tmp_reg__,__SREG__
 4027 19b8 F894      		cli
 4028 19ba DEBF      		out __SP_H__,r29
 4029 19bc 0FBE      		out __SREG__,__tmp_reg__
 4030 19be CDBF      		out __SP_L__,r28
 4031               	/* prologue: function */
 4032               	/* frame size = 8 */
 4033               	/* stack size = 12 */
 4034               	.L__stack_usage = 12
 4035 19c0 9A83      		std Y+2,r25
 4036 19c2 8983      		std Y+1,r24
 4037 19c4 7C83      		std Y+4,r23
 4038 19c6 6B83      		std Y+3,r22
 4039 19c8 5E83      		std Y+6,r21
 4040 19ca 4D83      		std Y+5,r20
 4041 19cc 3887      		std Y+8,r19
 4042 19ce 2F83      		std Y+7,r18
 542:lp_solve_5.5/lp_MPS.c ****   return(MPS_readex(newlp, (void *) filehandle, MPS_input, typeMPS, verbose));
 4043               		.loc 1 542 0
 4044 19d0 4F81      		ldd r20,Y+7
 4045 19d2 5885      		ldd r21,Y+8
 4046 19d4 2D81      		ldd r18,Y+5
 4047 19d6 3E81      		ldd r19,Y+6
 4048 19d8 6B81      		ldd r22,Y+3
 4049 19da 7C81      		ldd r23,Y+4
 4050 19dc 8981      		ldd r24,Y+1
 4051 19de 9A81      		ldd r25,Y+2
 4052 19e0 8A01      		movw r16,r20
 4053 19e2 40E0      		ldi r20,lo8(gs(MPS_input))
 4054 19e4 50E0      		ldi r21,hi8(gs(MPS_input))
 4055 19e6 0E94 0000 		call MPS_readex
 4056               	/* epilogue start */
 543:lp_solve_5.5/lp_MPS.c **** }
 4057               		.loc 1 543 0
 4058 19ea 2896      		adiw r28,8
 4059 19ec 0FB6      		in __tmp_reg__,__SREG__
 4060 19ee F894      		cli
 4061 19f0 DEBF      		out __SP_H__,r29
 4062 19f2 0FBE      		out __SREG__,__tmp_reg__
 4063 19f4 CDBF      		out __SP_L__,r28
 4064 19f6 DF91      		pop r29
 4065 19f8 CF91      		pop r28
 4066 19fa 1F91      		pop r17
 4067 19fc 0F91      		pop r16
 4068 19fe 0895      		ret
 4069               		.cfi_endproc
 4070               	.LFE16:
 4072               		.section	.rodata
 4073               	.LC14:
 4074 01ab 4D50 535F 		.string	"MPS_readfile: Unrecognized MPS line type.\n"
 4074      7265 6164 
 4074      6669 6C65 
 4074      3A20 556E 
 4074      7265 636F 
 4075               	.LC15:
 4076 01d6 00        		.string	""
 4077               	.LC16:
 4078 01d7 436F 6D6D 		.string	"Comment on line %d: %s"
 4078      656E 7420 
 4078      6F6E 206C 
 4078      696E 6520 
 4078      2564 3A20 
 4079               	.LC17:
 4080 01ee 4C69 6E65 		.string	"Line %6d: %s"
 4080      2025 3664 
 4080      3A20 2573 
 4080      00
 4081               	.LC18:
 4082 01fb 4E41 4D45 		.string	"NAME"
 4082      00
 4083               	.LC19:
 4084 0200 4E41 4D45 		.string	"NAME %s"
 4084      2025 7300 
 4085               	.LC20:
 4086 0208 4F42 4A53 		.string	"OBJSENSE"
 4086      454E 5345 
 4086      00
 4087               	.LC21:
 4088 0211 5377 6974 		.string	"Switching to OBJSENSE section\n"
 4088      6368 696E 
 4088      6720 746F 
 4088      204F 424A 
 4088      5345 4E53 
 4089               	.LC22:
 4090 0230 4F42 4A4E 		.string	"OBJNAME"
 4090      414D 4500 
 4091               	.LC23:
 4092 0238 5377 6974 		.string	"Switching to OBJNAME section\n"
 4092      6368 696E 
 4092      6720 746F 
 4092      204F 424A 
 4092      4E41 4D45 
 4093               	.LC24:
 4094 0256 524F 5753 		.string	"ROWS"
 4094      00
 4095               	.LC25:
 4096 025b 5377 6974 		.string	"Switching to ROWS section\n"
 4096      6368 696E 
 4096      6720 746F 
 4096      2052 4F57 
 4096      5320 7365 
 4097               	.LC26:
 4098 0276 434F 4C55 		.string	"COLUMNS"
 4098      4D4E 5300 
 4099               	.LC27:
 4100 027e 5377 6974 		.string	"Switching to COLUMNS section\n"
 4100      6368 696E 
 4100      6720 746F 
 4100      2043 4F4C 
 4100      554D 4E53 
 4101               	.LC28:
 4102 029c 5248 5300 		.string	"RHS"
 4103               	.LC29:
 4104 02a0 5377 6974 		.string	"Switching to RHS section\n"
 4104      6368 696E 
 4104      6720 746F 
 4104      2052 4853 
 4104      2073 6563 
 4105               	.LC30:
 4106 02ba 424F 554E 		.string	"BOUNDS"
 4106      4453 00
 4107               	.LC31:
 4108 02c1 5377 6974 		.string	"Switching to BOUNDS section\n"
 4108      6368 696E 
 4108      6720 746F 
 4108      2042 4F55 
 4108      4E44 5320 
 4109               	.LC32:
 4110 02de 5241 4E47 		.string	"RANGES"
 4110      4553 00
 4111               	.LC33:
 4112 02e5 5377 6974 		.string	"Switching to RANGES section\n"
 4112      6368 696E 
 4112      6720 746F 
 4112      2052 414E 
 4112      4745 5320 
 4113               	.LC34:
 4114 0302 534F 5300 		.string	"SOS"
 4115               	.LC35:
 4116 0306 5345 5453 		.string	"SETS"
 4116      00
 4117               	.LC36:
 4118 030b 5377 6974 		.string	"Switching to %s section\n"
 4118      6368 696E 
 4118      6720 746F 
 4118      2025 7320 
 4118      7365 6374 
 4119               	.LC37:
 4120 0324 454E 4441 		.string	"ENDATA"
 4120      5441 00
 4121               	.LC38:
 4122 032b 4669 6E69 		.string	"Finished reading MPS file\n"
 4122      7368 6564 
 4122      2072 6561 
 4122      6469 6E67 
 4122      204D 5053 
 4123               	.LC39:
 4124 0346 556E 7265 		.string	"Unrecognized MPS line %d: %s\n"
 4124      636F 676E 
 4124      697A 6564 
 4124      204D 5053 
 4124      206C 696E 
 4125               	.LC40:
 4126 0364 5379 6E74 		.string	"Syntax error on line %d: %s\n"
 4126      6178 2065 
 4126      7272 6F72 
 4126      206F 6E20 
 4126      6C69 6E65 
 4127               	.LC41:
 4128 0381 4572 726F 		.string	"Error, extra line under NAME line\n"
 4128      722C 2065 
 4128      7874 7261 
 4128      206C 696E 
 4128      6520 756E 
 4129               	.LC42:
 4130 03a4 4572 726F 		.string	"Error, extra line under OBJSENSE line\n"
 4130      722C 2065 
 4130      7874 7261 
 4130      206C 696E 
 4130      6520 756E 
 4131               	.LC43:
 4132 03cb 4D41 5849 		.string	"MAXIMIZE"
 4132      4D49 5A45 
 4132      00
 4133               	.LC44:
 4134 03d4 4D41 5800 		.string	"MAX"
 4135               	.LC45:
 4136 03d8 4D49 4E49 		.string	"MINIMIZE"
 4136      4D49 5A45 
 4136      00
 4137               	.LC46:
 4138 03e1 4D49 4E00 		.string	"MIN"
 4139               	.LC47:
 4140 03e5 556E 6B6E 		.string	"Unknown OBJSENSE direction '%s' on line %d\n"
 4140      6F77 6E20 
 4140      4F42 4A53 
 4140      454E 5345 
 4140      2064 6972 
 4141               	.LC48:
 4142 0411 4572 726F 		.string	"Error, extra line under OBJNAME line\n"
 4142      722C 2065 
 4142      7874 7261 
 4142      206C 696E 
 4142      6520 756E 
 4143               	.LC49:
 4144 0437 526F 7720 		.string	"Row   %5d: %s %s\n"
 4144      2020 2535 
 4144      643A 2025 
 4144      7320 2573 
 4144      0A00 
 4145               	.LC50:
 4146 0449 4E00      		.string	"N"
 4147               	.LC51:
 4148 044b 556E 636F 		.string	"Unconstrained row %s ignored\n"
 4148      6E73 7472 
 4148      6169 6E65 
 4148      6420 726F 
 4148      7720 2573 
 4149               	.LC52:
 4150 0469 4675 7274 		.string	"Further messages of this kind will be suppressed\n"
 4150      6865 7220 
 4150      6D65 7373 
 4150      6167 6573 
 4150      206F 6620 
 4151               	.LC53:
 4152 049b 4C00      		.string	"L"
 4153               	.LC54:
 4154 049d 4700      		.string	"G"
 4155               	.LC55:
 4156 049f 4500      		.string	"E"
 4157               	.LC56:
 4158 04a1 556E 6B6E 		.string	"Unknown relation code '%s' on line %d\n"
 4158      6F77 6E20 
 4158      7265 6C61 
 4158      7469 6F6E 
 4158      2063 6F64 
 4159               	.LC57:
 4160 04c8 436F 6C75 		.string	"Column %4d: %s %s %g %s %g\n"
 4160      6D6E 2025 
 4160      3464 3A20 
 4160      2573 2025 
 4160      7320 2567 
 4161               	.LC58:
 4162 04e4 5661 7269 		.string	"Variable name (%s) is already used!\n"
 4162      6162 6C65 
 4162      206E 616D 
 4162      6520 2825 
 4162      7329 2069 
 4163               	.LC59:
 4164 0509 2749 4E54 		.string	"'INTORG'"
 4164      4F52 4727 
 4164      00
 4165               	.LC60:
 4166 0512 5377 6974 		.string	"Switching to integer section\n"
 4166      6368 696E 
 4166      6720 746F 
 4166      2069 6E74 
 4166      6567 6572 
 4167               	.LC61:
 4168 0530 2749 4E54 		.string	"'INTEND'"
 4168      454E 4427 
 4168      00
 4169               	.LC62:
 4170 0539 5377 6974 		.string	"Switching to non-integer section\n"
 4170      6368 696E 
 4170      6720 746F 
 4170      206E 6F6E 
 4170      2D69 6E74 
 4171               	.LC63:
 4172 055b 556E 6B6E 		.string	"Unknown marker (ignored) at line %d: %s\n"
 4172      6F77 6E20 
 4172      6D61 726B 
 4172      6572 2028 
 4172      6967 6E6F 
 4173               	.LC64:
 4174 0584 496E 7661 		.string	"Invalid row %s encountered in the MPS file\n"
 4174      6C69 6420 
 4174      726F 7720 
 4174      2573 2065 
 4174      6E63 6F75 
 4175               	.LC65:
 4176 05b0 5772 6F6E 		.string	"Wrong number of items (%d) in COLUMNS section (line %d)\n"
 4176      6720 6E75 
 4176      6D62 6572 
 4176      206F 6620 
 4176      6974 656D 
 4177               	.LC66:
 4178 05e9 5248 5320 		.string	"RHS line: %s %s %g %s %g\n"
 4178      6C69 6E65 
 4178      3A20 2573 
 4178      2025 7320 
 4178      2567 2025 
 4179               	.LC67:
 4180 0603 5772 6F6E 		.string	"Wrong number of items (%d) in RHS section line %d\n"
 4180      6720 6E75 
 4180      6D62 6572 
 4180      206F 6620 
 4180      6974 656D 
 4181               	.LC68:
 4182 0636 424F 554E 		.string	"BOUNDS line: %s %s %s %g\n"
 4182      4453 206C 
 4182      696E 653A 
 4182      2025 7320 
 4182      2573 2025 
 4183               	.LC69:
 4184 0650 5550 00   		.string	"UP"
 4185               	.LC70:
 4186 0653 5343 00   		.string	"SC"
 4187               	.global	__eqsf2
 4188               	.LC71:
 4189 0656 5349 00   		.string	"SI"
 4190               	.LC72:
 4191 0659 4C4F 00   		.string	"LO"
 4192               	.LC73:
 4193 065c 4658 00   		.string	"FX"
 4194               	.LC74:
 4195 065f 5549 00   		.string	"UI"
 4196               	.LC75:
 4197 0662 4C49 00   		.string	"LI"
 4198               	.LC76:
 4199 0665 424F 554E 		.string	"BOUND type %s on line %d is not supported"
 4199      4420 7479 
 4199      7065 2025 
 4199      7320 6F6E 
 4199      206C 696E 
 4200               	.LC77:
 4201 068f 5241 4E47 		.string	"RANGES line: %s %s %g %s %g"
 4201      4553 206C 
 4201      696E 653A 
 4201      2025 7320 
 4201      2573 2025 
 4202               	.LC78:
 4203 06ab 5772 6F6E 		.string	"Wrong number of items (%d) in RANGES section line %d"
 4203      6720 6E75 
 4203      6D62 6572 
 4203      206F 6620 
 4203      6974 656D 
 4204               	.global	__gesf2
 4205               	.LC79:
 4206 06e0 5761 726E 		.string	"Warning, Range for row %s >= infinity (value %g) on line %d, ignored"
 4206      696E 672C 
 4206      2052 616E 
 4206      6765 2066 
 4206      6F72 2072 
 4207               	.global	__nesf2
 4208               	.global	__ltsf2
 4209               	.LC80:
 4210 0725 4361 6E6E 		.string	"Cannot figure out row type, row = %d, is_chsign = %d, upbo = %g on line %d"
 4210      6F74 2066 
 4210      6967 7572 
 4210      6520 6F75 
 4210      7420 726F 
 4211               	.LC81:
 4212 0770 534F 5320 		.string	"SOS line: %s %s %g %s %g"
 4212      6C69 6E65 
 4212      3A20 2573 
 4212      2025 7320 
 4212      2567 2025 
 4213               	.LC82:
 4214 0789 496E 7661 		.string	"Invalid number of items (%d) in SOS section line %d\n"
 4214      6C69 6420 
 4214      6E75 6D62 
 4214      6572 206F 
 4214      6620 6974 
 4215               	.LC83:
 4216 07be 4572 726F 		.string	"Error: Invalid SOS type %s line %d\n"
 4216      723A 2049 
 4216      6E76 616C 
 4216      6964 2053 
 4216      4F53 2074 
 4217               	.LC84:
 4218 07e2 534F 535F 		.string	"SOS_%d"
 4218      2564 00
 4219               	.global	__fixsfsi
 4220               	.LC85:
 4221 07e9 4572 726F 		.string	"Error: Cannot handle line %d\n"
 4221      723A 2043 
 4221      616E 6E6F 
 4221      7420 6861 
 4221      6E64 6C65 
 4222               	.LC86:
 4223 0807 4572 726F 		.string	"Error: Objective function specified by OBJNAME card not found\n"
 4223      723A 204F 
 4223      626A 6563 
 4223      7469 7665 
 4223      2066 756E 
 4224               		.text
 4225               	.global	MPS_readex
 4227               	MPS_readex:
 4228               	.LFB17:
 544:lp_solve_5.5/lp_MPS.c **** 
 545:lp_solve_5.5/lp_MPS.c **** MYBOOL __WINAPI MPS_readex(lprec **newlp, void *userhandle, read_modeldata_func read_modeldata, int
 546:lp_solve_5.5/lp_MPS.c **** {
 4229               		.loc 1 546 0
 4230               		.cfi_startproc
 4231 1a00 8F92      		push r8
 4232               	.LCFI72:
 4233               		.cfi_def_cfa_offset 3
 4234               		.cfi_offset 8, -2
 4235 1a02 9F92      		push r9
 4236               	.LCFI73:
 4237               		.cfi_def_cfa_offset 4
 4238               		.cfi_offset 9, -3
 4239 1a04 AF92      		push r10
 4240               	.LCFI74:
 4241               		.cfi_def_cfa_offset 5
 4242               		.cfi_offset 10, -4
 4243 1a06 BF92      		push r11
 4244               	.LCFI75:
 4245               		.cfi_def_cfa_offset 6
 4246               		.cfi_offset 11, -5
 4247 1a08 CF92      		push r12
 4248               	.LCFI76:
 4249               		.cfi_def_cfa_offset 7
 4250               		.cfi_offset 12, -6
 4251 1a0a DF92      		push r13
 4252               	.LCFI77:
 4253               		.cfi_def_cfa_offset 8
 4254               		.cfi_offset 13, -7
 4255 1a0c EF92      		push r14
 4256               	.LCFI78:
 4257               		.cfi_def_cfa_offset 9
 4258               		.cfi_offset 14, -8
 4259 1a0e FF92      		push r15
 4260               	.LCFI79:
 4261               		.cfi_def_cfa_offset 10
 4262               		.cfi_offset 15, -9
 4263 1a10 0F93      		push r16
 4264               	.LCFI80:
 4265               		.cfi_def_cfa_offset 11
 4266               		.cfi_offset 16, -10
 4267 1a12 1F93      		push r17
 4268               	.LCFI81:
 4269               		.cfi_def_cfa_offset 12
 4270               		.cfi_offset 17, -11
 4271 1a14 CF93      		push r28
 4272               	.LCFI82:
 4273               		.cfi_def_cfa_offset 13
 4274               		.cfi_offset 28, -12
 4275 1a16 DF93      		push r29
 4276               	.LCFI83:
 4277               		.cfi_def_cfa_offset 14
 4278               		.cfi_offset 29, -13
 4279 1a18 CDB7      		in r28,__SP_L__
 4280 1a1a DEB7      		in r29,__SP_H__
 4281               	.LCFI84:
 4282               		.cfi_def_cfa_register 28
 4283 1a1c C254      		subi r28,66
 4284 1a1e D442      		sbci r29,36
 4285               	.LCFI85:
 4286               		.cfi_def_cfa_offset 9296
 4287 1a20 0FB6      		in __tmp_reg__,__SREG__
 4288 1a22 F894      		cli
 4289 1a24 DEBF      		out __SP_H__,r29
 4290 1a26 0FBE      		out __SREG__,__tmp_reg__
 4291 1a28 CDBF      		out __SP_L__,r28
 4292               	/* prologue: function */
 4293               	/* frame size = 9282 */
 4294               	/* stack size = 9294 */
 4295               	.L__stack_usage = 9294
 4296 1a2a FE01      		movw r30,r28
 4297 1a2c E95C      		subi r30,-55
 4298 1a2e FB4D      		sbci r31,-37
 4299 1a30 9183      		std Z+1,r25
 4300 1a32 8083      		st Z,r24
 4301 1a34 CE01      		movw r24,r28
 4302 1a36 875C      		subi r24,-57
 4303 1a38 9B4D      		sbci r25,-37
 4304 1a3a DC01      		movw r26,r24
 4305 1a3c 6D93      		st X+,r22
 4306 1a3e 7C93      		st X,r23
 4307 1a40 CE01      		movw r24,r28
 4308 1a42 855C      		subi r24,-59
 4309 1a44 9B4D      		sbci r25,-37
 4310 1a46 FC01      		movw r30,r24
 4311 1a48 5183      		std Z+1,r21
 4312 1a4a 4083      		st Z,r20
 4313 1a4c CE01      		movw r24,r28
 4314 1a4e 835C      		subi r24,-61
 4315 1a50 9B4D      		sbci r25,-37
 4316 1a52 DC01      		movw r26,r24
 4317 1a54 2D93      		st X+,r18
 4318 1a56 3C93      		st X,r19
 4319 1a58 CE01      		movw r24,r28
 4320 1a5a 815C      		subi r24,-63
 4321 1a5c 9B4D      		sbci r25,-37
 4322 1a5e FC01      		movw r30,r24
 4323 1a60 1183      		std Z+1,r17
 4324 1a62 0083      		st Z,r16
 547:lp_solve_5.5/lp_MPS.c ****   char   field1[BUFSIZ], field2[BUFSIZ], field3[BUFSIZ], field5[BUFSIZ], line[BUFSIZ], tmp[BUFSIZ],
 548:lp_solve_5.5/lp_MPS.c ****          Last_col_name[BUFSIZ], probname[BUFSIZ], OBJNAME[BUFSIZ], *ptr;
 549:lp_solve_5.5/lp_MPS.c ****   int    items, row, Lineno, var,
 550:lp_solve_5.5/lp_MPS.c ****          section = MPSUNDEF, variant = 0, NZ = 0, SOS = 0;
 4325               		.loc 1 550 0
 4326 1a64 8CEF      		ldi r24,lo8(-4)
 4327 1a66 9FEF      		ldi r25,lo8(-1)
 4328 1a68 9887      		std Y+8,r25
 4329 1a6a 8F83      		std Y+7,r24
 4330 1a6c 1A86      		std Y+10,__zero_reg__
 4331 1a6e 1986      		std Y+9,__zero_reg__
 4332 1a70 1C86      		std Y+12,__zero_reg__
 4333 1a72 1B86      		std Y+11,__zero_reg__
 4334 1a74 1E86      		std Y+14,__zero_reg__
 4335 1a76 1D86      		std Y+13,__zero_reg__
 551:lp_solve_5.5/lp_MPS.c ****   MYBOOL Int_section, Column_ready, Column_ready1,
 552:lp_solve_5.5/lp_MPS.c ****          Unconstrained_rows_found = FALSE, OF_found = FALSE, CompleteStatus = FALSE;
 4336               		.loc 1 552 0
 4337 1a78 188A      		std Y+16,__zero_reg__
 4338 1a7a 198A      		std Y+17,__zero_reg__
 4339 1a7c 1A8A      		std Y+18,__zero_reg__
 553:lp_solve_5.5/lp_MPS.c ****   double field4, field6;
 554:lp_solve_5.5/lp_MPS.c ****   REAL   *Last_column = NULL;
 4340               		.loc 1 554 0
 4341 1a7e CE01      		movw r24,r28
 4342 1a80 8F5C      		subi r24,-49
 4343 1a82 9B4D      		sbci r25,-37
 4344 1a84 DC01      		movw r26,r24
 4345 1a86 1D92      		st X+,__zero_reg__
 4346 1a88 1C92      		st X,__zero_reg__
 555:lp_solve_5.5/lp_MPS.c ****   int    count = 0, *Last_columnno = NULL;
 4347               		.loc 1 555 0
 4348 1a8a CE01      		movw r24,r28
 4349 1a8c 8D5C      		subi r24,-51
 4350 1a8e 9B4D      		sbci r25,-37
 4351 1a90 FC01      		movw r30,r24
 4352 1a92 1182      		std Z+1,__zero_reg__
 4353 1a94 1082      		st Z,__zero_reg__
 4354 1a96 CE01      		movw r24,r28
 4355 1a98 8B5C      		subi r24,-53
 4356 1a9a 9B4D      		sbci r25,-37
 4357 1a9c DC01      		movw r26,r24
 4358 1a9e 1D92      		st X+,__zero_reg__
 4359 1aa0 1C92      		st X,__zero_reg__
 556:lp_solve_5.5/lp_MPS.c ****   int    OBJSENSE = ROWTYPE_EMPTY;
 4360               		.loc 1 556 0
 4361 1aa2 1C8A      		std Y+20,__zero_reg__
 4362 1aa4 1B8A      		std Y+19,__zero_reg__
 557:lp_solve_5.5/lp_MPS.c ****   lprec  *lp;
 558:lp_solve_5.5/lp_MPS.c ****   int    (*scan_line)(lprec *lp, int section, char* line, char *field1, char *field2, char *field3,
 559:lp_solve_5.5/lp_MPS.c ****                       double *field4, char *field5, double *field6);
 560:lp_solve_5.5/lp_MPS.c **** 
 561:lp_solve_5.5/lp_MPS.c ****   if(newlp == NULL)
 4363               		.loc 1 561 0
 4364 1aa6 CE01      		movw r24,r28
 4365 1aa8 895C      		subi r24,-55
 4366 1aaa 9B4D      		sbci r25,-37
 4367 1aac FC01      		movw r30,r24
 4368 1aae 8081      		ld r24,Z
 4369 1ab0 9181      		ldd r25,Z+1
 4370 1ab2 892B      		or r24,r25
 4371 1ab4 01F4      		brne .L139
 562:lp_solve_5.5/lp_MPS.c ****     return( CompleteStatus );
 4372               		.loc 1 562 0
 4373 1ab6 8A89      		ldd r24,Y+18
 4374 1ab8 0C94 0000 		jmp .L316
 4375               	.L139:
 563:lp_solve_5.5/lp_MPS.c ****   else if(*newlp == NULL)
 4376               		.loc 1 563 0
 4377 1abc CE01      		movw r24,r28
 4378 1abe 895C      		subi r24,-55
 4379 1ac0 9B4D      		sbci r25,-37
 4380 1ac2 DC01      		movw r26,r24
 4381 1ac4 8D91      		ld r24,X+
 4382 1ac6 9C91      		ld r25,X
 4383 1ac8 FC01      		movw r30,r24
 4384 1aca 8081      		ld r24,Z
 4385 1acc 9181      		ldd r25,Z+1
 4386 1ace 892B      		or r24,r25
 4387 1ad0 01F4      		brne .L141
 564:lp_solve_5.5/lp_MPS.c ****     lp = make_lp(0, 0);
 4388               		.loc 1 564 0
 4389 1ad2 60E0      		ldi r22,0
 4390 1ad4 70E0      		ldi r23,0
 4391 1ad6 80E0      		ldi r24,0
 4392 1ad8 90E0      		ldi r25,0
 4393 1ada 0E94 0000 		call make_lp
 4394 1ade 9E8B      		std Y+22,r25
 4395 1ae0 8D8B      		std Y+21,r24
 4396 1ae2 00C0      		rjmp .L142
 4397               	.L141:
 565:lp_solve_5.5/lp_MPS.c ****   else
 566:lp_solve_5.5/lp_MPS.c ****     lp = *newlp;
 4398               		.loc 1 566 0
 4399 1ae4 CE01      		movw r24,r28
 4400 1ae6 895C      		subi r24,-55
 4401 1ae8 9B4D      		sbci r25,-37
 4402 1aea DC01      		movw r26,r24
 4403 1aec 8D91      		ld r24,X+
 4404 1aee 9C91      		ld r25,X
 4405 1af0 FC01      		movw r30,r24
 4406 1af2 8081      		ld r24,Z
 4407 1af4 9181      		ldd r25,Z+1
 4408 1af6 9E8B      		std Y+22,r25
 4409 1af8 8D8B      		std Y+21,r24
 4410               	.L142:
 567:lp_solve_5.5/lp_MPS.c **** 
 568:lp_solve_5.5/lp_MPS.c ****   if((typeMPS & MPSFIXED) == MPSFIXED)
 4411               		.loc 1 568 0
 4412 1afa CE01      		movw r24,r28
 4413 1afc 835C      		subi r24,-61
 4414 1afe 9B4D      		sbci r25,-37
 4415 1b00 DC01      		movw r26,r24
 4416 1b02 8D91      		ld r24,X+
 4417 1b04 9C91      		ld r25,X
 4418 1b06 8170      		andi r24,1
 4419 1b08 9927      		clr r25
 4420 1b0a 892B      		or r24,r25
 4421 1b0c 01F0      		breq .L143
 569:lp_solve_5.5/lp_MPS.c ****     scan_line = scan_lineFIXED;
 4422               		.loc 1 569 0
 4423 1b0e 80E0      		ldi r24,lo8(gs(scan_lineFIXED))
 4424 1b10 90E0      		ldi r25,hi8(gs(scan_lineFIXED))
 4425 1b12 988F      		std Y+24,r25
 4426 1b14 8F8B      		std Y+23,r24
 4427 1b16 00C0      		rjmp .L144
 4428               	.L143:
 570:lp_solve_5.5/lp_MPS.c ****   else if((typeMPS & MPSFREE) == MPSFREE)
 4429               		.loc 1 570 0
 4430 1b18 CE01      		movw r24,r28
 4431 1b1a 835C      		subi r24,-61
 4432 1b1c 9B4D      		sbci r25,-37
 4433 1b1e FC01      		movw r30,r24
 4434 1b20 8081      		ld r24,Z
 4435 1b22 9181      		ldd r25,Z+1
 4436 1b24 8270      		andi r24,2
 4437 1b26 9927      		clr r25
 4438 1b28 892B      		or r24,r25
 4439 1b2a 01F0      		breq .L145
 571:lp_solve_5.5/lp_MPS.c ****     scan_line = scan_lineFREE;
 4440               		.loc 1 571 0
 4441 1b2c 80E0      		ldi r24,lo8(gs(scan_lineFREE))
 4442 1b2e 90E0      		ldi r25,hi8(gs(scan_lineFREE))
 4443 1b30 988F      		std Y+24,r25
 4444 1b32 8F8B      		std Y+23,r24
 4445 1b34 00C0      		rjmp .L144
 4446               	.L145:
 572:lp_solve_5.5/lp_MPS.c ****   else {
 573:lp_solve_5.5/lp_MPS.c ****     report(lp, IMPORTANT, "MPS_readfile: Unrecognized MPS line type.\n");
 4447               		.loc 1 573 0
 4448 1b36 80E0      		ldi r24,lo8(.LC14)
 4449 1b38 90E0      		ldi r25,hi8(.LC14)
 4450 1b3a 892F      		mov r24,r25
 4451 1b3c 8F93      		push r24
 4452 1b3e 80E0      		ldi r24,lo8(.LC14)
 4453 1b40 90E0      		ldi r25,hi8(.LC14)
 4454 1b42 8F93      		push r24
 4455 1b44 1F92      		push __zero_reg__
 4456 1b46 83E0      		ldi r24,lo8(3)
 4457 1b48 8F93      		push r24
 4458 1b4a 8E89      		ldd r24,Y+22
 4459 1b4c 8F93      		push r24
 4460 1b4e 8D89      		ldd r24,Y+21
 4461 1b50 8F93      		push r24
 4462 1b52 0E94 0000 		call report
 4463 1b56 0F90      		pop __tmp_reg__
 4464 1b58 0F90      		pop __tmp_reg__
 4465 1b5a 0F90      		pop __tmp_reg__
 4466 1b5c 0F90      		pop __tmp_reg__
 4467 1b5e 0F90      		pop __tmp_reg__
 4468 1b60 0F90      		pop __tmp_reg__
 574:lp_solve_5.5/lp_MPS.c ****     if (*newlp == NULL)
 4469               		.loc 1 574 0
 4470 1b62 CE01      		movw r24,r28
 4471 1b64 895C      		subi r24,-55
 4472 1b66 9B4D      		sbci r25,-37
 4473 1b68 DC01      		movw r26,r24
 4474 1b6a 8D91      		ld r24,X+
 4475 1b6c 9C91      		ld r25,X
 4476 1b6e FC01      		movw r30,r24
 4477 1b70 8081      		ld r24,Z
 4478 1b72 9181      		ldd r25,Z+1
 4479 1b74 892B      		or r24,r25
 4480 1b76 01F4      		brne .L146
 575:lp_solve_5.5/lp_MPS.c ****       delete_lp(lp);
 4481               		.loc 1 575 0
 4482 1b78 8D89      		ldd r24,Y+21
 4483 1b7a 9E89      		ldd r25,Y+22
 4484 1b7c 0E94 0000 		call delete_lp
 4485               	.L146:
 576:lp_solve_5.5/lp_MPS.c ****     return( CompleteStatus );
 4486               		.loc 1 576 0
 4487 1b80 8A89      		ldd r24,Y+18
 4488 1b82 0C94 0000 		jmp .L316
 4489               	.L144:
 577:lp_solve_5.5/lp_MPS.c ****   }
 578:lp_solve_5.5/lp_MPS.c **** 
 579:lp_solve_5.5/lp_MPS.c ****   if (lp != NULL) {
 4490               		.loc 1 579 0
 4491 1b86 8D89      		ldd r24,Y+21
 4492 1b88 9E89      		ldd r25,Y+22
 4493 1b8a 892B      		or r24,r25
 4494 1b8c 01F4      		brne .+4
 4495 1b8e 0C94 0000 		jmp .L147
 580:lp_solve_5.5/lp_MPS.c ****     lp->source_is_file = TRUE;
 4496               		.loc 1 580 0
 4497 1b92 8D89      		ldd r24,Y+21
 4498 1b94 9E89      		ldd r25,Y+22
 4499 1b96 8650      		subi r24,6
 4500 1b98 9E4F      		sbci r25,-2
 4501 1b9a 21E0      		ldi r18,lo8(1)
 4502 1b9c DC01      		movw r26,r24
 4503 1b9e 2C93      		st X,r18
 581:lp_solve_5.5/lp_MPS.c ****     lp->verbose = verbose;
 4504               		.loc 1 581 0
 4505 1ba0 8D89      		ldd r24,Y+21
 4506 1ba2 9E89      		ldd r25,Y+22
 4507 1ba4 885A      		subi r24,-88
 4508 1ba6 9D4F      		sbci r25,-3
 4509 1ba8 9E01      		movw r18,r28
 4510 1baa 215C      		subi r18,-63
 4511 1bac 3B4D      		sbci r19,-37
 4512 1bae F901      		movw r30,r18
 4513 1bb0 2081      		ld r18,Z
 4514 1bb2 3181      		ldd r19,Z+1
 4515 1bb4 DC01      		movw r26,r24
 4516 1bb6 2D93      		st X+,r18
 4517 1bb8 3C93      		st X,r19
 582:lp_solve_5.5/lp_MPS.c ****     strcpy(Last_col_name, "");
 4518               		.loc 1 582 0
 4519 1bba 2091 0000 		lds r18,.LC15
 4520 1bbe CE01      		movw r24,r28
 4521 1bc0 8A5D      		subi r24,-38
 4522 1bc2 974E      		sbci r25,-25
 4523 1bc4 FC01      		movw r30,r24
 4524 1bc6 2083      		st Z,r18
 583:lp_solve_5.5/lp_MPS.c ****     strcpy(OBJNAME, "");
 4525               		.loc 1 583 0
 4526 1bc8 2091 0000 		lds r18,.LC15
 4527 1bcc CE01      		movw r24,r28
 4528 1bce 8A5D      		subi r24,-38
 4529 1bd0 9F4D      		sbci r25,-33
 4530 1bd2 DC01      		movw r26,r24
 4531 1bd4 2C93      		st X,r18
 584:lp_solve_5.5/lp_MPS.c ****     Int_section = FALSE;
 4532               		.loc 1 584 0
 4533 1bd6 1F86      		std Y+15,__zero_reg__
 585:lp_solve_5.5/lp_MPS.c ****     Column_ready = FALSE;
 4534               		.loc 1 585 0
 4535 1bd8 CE01      		movw r24,r28
 4536 1bda 885D      		subi r24,-40
 4537 1bdc 9B4D      		sbci r25,-37
 4538 1bde FC01      		movw r30,r24
 4539 1be0 1082      		st Z,__zero_reg__
 586:lp_solve_5.5/lp_MPS.c ****     Lineno = 0;
 4540               		.loc 1 586 0
 4541 1be2 1E82      		std Y+6,__zero_reg__
 4542 1be4 1D82      		std Y+5,__zero_reg__
 587:lp_solve_5.5/lp_MPS.c **** 
 588:lp_solve_5.5/lp_MPS.c ****     /* let's initialize line to all zero's */
 589:lp_solve_5.5/lp_MPS.c ****     MEMCLEAR(line, BUFSIZ);
 4543               		.loc 1 589 0
 4544 1be6 CE01      		movw r24,r28
 4545 1be8 8A5D      		subi r24,-38
 4546 1bea 9F4E      		sbci r25,-17
 4547 1bec 40E0      		ldi r20,0
 4548 1bee 54E0      		ldi r21,lo8(4)
 4549 1bf0 60E0      		ldi r22,0
 4550 1bf2 70E0      		ldi r23,0
 4551 1bf4 0E94 0000 		call memset
 590:lp_solve_5.5/lp_MPS.c **** 
 591:lp_solve_5.5/lp_MPS.c ****     while(read_modeldata(userhandle, line, BUFSIZ - 1)) {
 4552               		.loc 1 591 0
 4553 1bf8 0C94 0000 		jmp .L148
 4554               	.L299:
 592:lp_solve_5.5/lp_MPS.c ****       Lineno++;
 4555               		.loc 1 592 0
 4556 1bfc 8D81      		ldd r24,Y+5
 4557 1bfe 9E81      		ldd r25,Y+6
 4558 1c00 0196      		adiw r24,1
 4559 1c02 9E83      		std Y+6,r25
 4560 1c04 8D83      		std Y+5,r24
 593:lp_solve_5.5/lp_MPS.c **** 
 594:lp_solve_5.5/lp_MPS.c ****       for(ptr = line; (*ptr) && (isspace((unsigned char) *ptr)); ptr++);
 4561               		.loc 1 594 0
 4562 1c06 CE01      		movw r24,r28
 4563 1c08 8A5D      		subi r24,-38
 4564 1c0a 9F4E      		sbci r25,-17
 4565 1c0c 9A83      		std Y+2,r25
 4566 1c0e 8983      		std Y+1,r24
 4567 1c10 00C0      		rjmp .L149
 4568               	.L151:
 4569               		.loc 1 594 0 is_stmt 0 discriminator 4
 4570 1c12 8981      		ldd r24,Y+1
 4571 1c14 9A81      		ldd r25,Y+2
 4572 1c16 0196      		adiw r24,1
 4573 1c18 9A83      		std Y+2,r25
 4574 1c1a 8983      		std Y+1,r24
 4575               	.L149:
 4576               		.loc 1 594 0 discriminator 1
 4577 1c1c 8981      		ldd r24,Y+1
 4578 1c1e 9A81      		ldd r25,Y+2
 4579 1c20 DC01      		movw r26,r24
 4580 1c22 8C91      		ld r24,X
 4581 1c24 8823      		tst r24
 4582 1c26 01F0      		breq .L150
 4583               		.loc 1 594 0 discriminator 3
 4584 1c28 8981      		ldd r24,Y+1
 4585 1c2a 9A81      		ldd r25,Y+2
 4586 1c2c FC01      		movw r30,r24
 4587 1c2e 8081      		ld r24,Z
 4588 1c30 882F      		mov r24,r24
 4589 1c32 90E0      		ldi r25,0
 4590 1c34 0E94 0000 		call isspace
 4591 1c38 892B      		or r24,r25
 4592 1c3a 01F4      		brne .L151
 4593               	.L150:
 595:lp_solve_5.5/lp_MPS.c **** 
 596:lp_solve_5.5/lp_MPS.c ****       /* skip lines which start with "*", they are comment */
 597:lp_solve_5.5/lp_MPS.c ****       if((line[0] == '*') || (*ptr == 0) || (*ptr == '\n') || (*ptr == '\r')) {
 4594               		.loc 1 597 0 is_stmt 1
 4595 1c3c CE01      		movw r24,r28
 4596 1c3e 8A5D      		subi r24,-38
 4597 1c40 9F4E      		sbci r25,-17
 4598 1c42 DC01      		movw r26,r24
 4599 1c44 8C91      		ld r24,X
 4600 1c46 8A32      		cpi r24,lo8(42)
 4601 1c48 01F0      		breq .L152
 4602               		.loc 1 597 0 is_stmt 0 discriminator 1
 4603 1c4a 8981      		ldd r24,Y+1
 4604 1c4c 9A81      		ldd r25,Y+2
 4605 1c4e FC01      		movw r30,r24
 4606 1c50 8081      		ld r24,Z
 4607 1c52 8823      		tst r24
 4608 1c54 01F0      		breq .L152
 4609               		.loc 1 597 0 discriminator 2
 4610 1c56 8981      		ldd r24,Y+1
 4611 1c58 9A81      		ldd r25,Y+2
 4612 1c5a DC01      		movw r26,r24
 4613 1c5c 8C91      		ld r24,X
 4614 1c5e 8A30      		cpi r24,lo8(10)
 4615 1c60 01F0      		breq .L152
 4616               		.loc 1 597 0 discriminator 3
 4617 1c62 8981      		ldd r24,Y+1
 4618 1c64 9A81      		ldd r25,Y+2
 4619 1c66 FC01      		movw r30,r24
 4620 1c68 8081      		ld r24,Z
 4621 1c6a 8D30      		cpi r24,lo8(13)
 4622 1c6c 01F4      		brne .L153
 4623               	.L152:
 598:lp_solve_5.5/lp_MPS.c ****         report(lp, FULL, "Comment on line %d: %s", Lineno, line);
 4624               		.loc 1 598 0 is_stmt 1
 4625 1c6e CE01      		movw r24,r28
 4626 1c70 8A5D      		subi r24,-38
 4627 1c72 9F4E      		sbci r25,-17
 4628 1c74 292F      		mov r18,r25
 4629 1c76 2F93      		push r18
 4630 1c78 8F93      		push r24
 4631 1c7a 8E81      		ldd r24,Y+6
 4632 1c7c 8F93      		push r24
 4633 1c7e 8D81      		ldd r24,Y+5
 4634 1c80 8F93      		push r24
 4635 1c82 80E0      		ldi r24,lo8(.LC16)
 4636 1c84 90E0      		ldi r25,hi8(.LC16)
 4637 1c86 892F      		mov r24,r25
 4638 1c88 8F93      		push r24
 4639 1c8a 80E0      		ldi r24,lo8(.LC16)
 4640 1c8c 90E0      		ldi r25,hi8(.LC16)
 4641 1c8e 8F93      		push r24
 4642 1c90 1F92      		push __zero_reg__
 4643 1c92 86E0      		ldi r24,lo8(6)
 4644 1c94 8F93      		push r24
 4645 1c96 8E89      		ldd r24,Y+22
 4646 1c98 8F93      		push r24
 4647 1c9a 8D89      		ldd r24,Y+21
 4648 1c9c 8F93      		push r24
 4649 1c9e 0E94 0000 		call report
 4650 1ca2 2DB7      		in r18,__SP_L__
 4651 1ca4 3EB7      		in r19,__SP_H__
 4652 1ca6 265F      		subi r18,-10
 4653 1ca8 3F4F      		sbci r19,-1
 4654 1caa 0FB6      		in __tmp_reg__,__SREG__
 4655 1cac F894      		cli
 4656 1cae DEBF      		out __SP_H__,r29
 4657 1cb0 0FBE      		out __SREG__,__tmp_reg__
 4658 1cb2 CDBF      		out __SP_L__,r28
 599:lp_solve_5.5/lp_MPS.c ****         continue;
 4659               		.loc 1 599 0
 4660 1cb4 0C94 0000 		jmp .L148
 4661               	.L153:
 600:lp_solve_5.5/lp_MPS.c ****       }
 601:lp_solve_5.5/lp_MPS.c **** 
 602:lp_solve_5.5/lp_MPS.c ****       report(lp, FULL, "Line %6d: %s", Lineno, line);
 4662               		.loc 1 602 0
 4663 1cb8 CE01      		movw r24,r28
 4664 1cba 8A5D      		subi r24,-38
 4665 1cbc 9F4E      		sbci r25,-17
 4666 1cbe 292F      		mov r18,r25
 4667 1cc0 2F93      		push r18
 4668 1cc2 8F93      		push r24
 4669 1cc4 8E81      		ldd r24,Y+6
 4670 1cc6 8F93      		push r24
 4671 1cc8 8D81      		ldd r24,Y+5
 4672 1cca 8F93      		push r24
 4673 1ccc 80E0      		ldi r24,lo8(.LC17)
 4674 1cce 90E0      		ldi r25,hi8(.LC17)
 4675 1cd0 892F      		mov r24,r25
 4676 1cd2 8F93      		push r24
 4677 1cd4 80E0      		ldi r24,lo8(.LC17)
 4678 1cd6 90E0      		ldi r25,hi8(.LC17)
 4679 1cd8 8F93      		push r24
 4680 1cda 1F92      		push __zero_reg__
 4681 1cdc 86E0      		ldi r24,lo8(6)
 4682 1cde 8F93      		push r24
 4683 1ce0 8E89      		ldd r24,Y+22
 4684 1ce2 8F93      		push r24
 4685 1ce4 8D89      		ldd r24,Y+21
 4686 1ce6 8F93      		push r24
 4687 1ce8 0E94 0000 		call report
 4688 1cec 8DB7      		in r24,__SP_L__
 4689 1cee 9EB7      		in r25,__SP_H__
 4690 1cf0 0A96      		adiw r24,10
 4691 1cf2 0FB6      		in __tmp_reg__,__SREG__
 4692 1cf4 F894      		cli
 4693 1cf6 DEBF      		out __SP_H__,r29
 4694 1cf8 0FBE      		out __SREG__,__tmp_reg__
 4695 1cfa CDBF      		out __SP_L__,r28
 603:lp_solve_5.5/lp_MPS.c **** 
 604:lp_solve_5.5/lp_MPS.c ****       /* first check for "special" lines: NAME, ROWS, BOUNDS .... */
 605:lp_solve_5.5/lp_MPS.c ****       /* this must start in the first position of line */
 606:lp_solve_5.5/lp_MPS.c ****       if(line[0] != ' ') {
 4696               		.loc 1 606 0
 4697 1cfc CE01      		movw r24,r28
 4698 1cfe 8A5D      		subi r24,-38
 4699 1d00 9F4E      		sbci r25,-17
 4700 1d02 DC01      		movw r26,r24
 4701 1d04 8C91      		ld r24,X
 4702 1d06 8032      		cpi r24,lo8(32)
 4703 1d08 01F4      		brne .+2
 4704 1d0a 00C0      		rjmp .L154
 607:lp_solve_5.5/lp_MPS.c ****         sscanf(line, "%s", tmp);
 4705               		.loc 1 607 0
 4706 1d0c CE01      		movw r24,r28
 4707 1d0e 8A5D      		subi r24,-38
 4708 1d10 9B4E      		sbci r25,-21
 4709 1d12 292F      		mov r18,r25
 4710 1d14 2F93      		push r18
 4711 1d16 8F93      		push r24
 4712 1d18 80E0      		ldi r24,lo8(.LC0)
 4713 1d1a 90E0      		ldi r25,hi8(.LC0)
 4714 1d1c 892F      		mov r24,r25
 4715 1d1e 8F93      		push r24
 4716 1d20 80E0      		ldi r24,lo8(.LC0)
 4717 1d22 90E0      		ldi r25,hi8(.LC0)
 4718 1d24 8F93      		push r24
 4719 1d26 CE01      		movw r24,r28
 4720 1d28 8A5D      		subi r24,-38
 4721 1d2a 9F4E      		sbci r25,-17
 4722 1d2c 292F      		mov r18,r25
 4723 1d2e 2F93      		push r18
 4724 1d30 8F93      		push r24
 4725 1d32 0E94 0000 		call sscanf
 4726 1d36 0F90      		pop __tmp_reg__
 4727 1d38 0F90      		pop __tmp_reg__
 4728 1d3a 0F90      		pop __tmp_reg__
 4729 1d3c 0F90      		pop __tmp_reg__
 4730 1d3e 0F90      		pop __tmp_reg__
 4731 1d40 0F90      		pop __tmp_reg__
 608:lp_solve_5.5/lp_MPS.c ****         if(strcmp(tmp, "NAME") == 0) {
 4732               		.loc 1 608 0
 4733 1d42 CE01      		movw r24,r28
 4734 1d44 8A5D      		subi r24,-38
 4735 1d46 9B4E      		sbci r25,-21
 4736 1d48 60E0      		ldi r22,lo8(.LC18)
 4737 1d4a 70E0      		ldi r23,hi8(.LC18)
 4738 1d4c 0E94 0000 		call strcmp
 4739 1d50 892B      		or r24,r25
 4740 1d52 01F4      		brne .L155
 609:lp_solve_5.5/lp_MPS.c ****           section = MPSNAME;
 4741               		.loc 1 609 0
 4742 1d54 8DEF      		ldi r24,lo8(-3)
 4743 1d56 9FEF      		ldi r25,lo8(-1)
 4744 1d58 9887      		std Y+8,r25
 4745 1d5a 8F83      		std Y+7,r24
 610:lp_solve_5.5/lp_MPS.c ****           *probname = 0;
 4746               		.loc 1 610 0
 4747 1d5c CE01      		movw r24,r28
 4748 1d5e 8A5D      		subi r24,-38
 4749 1d60 934E      		sbci r25,-29
 4750 1d62 FC01      		movw r30,r24
 4751 1d64 1082      		st Z,__zero_reg__
 611:lp_solve_5.5/lp_MPS.c ****           sscanf(line, "NAME %s", probname);
 4752               		.loc 1 611 0
 4753 1d66 CE01      		movw r24,r28
 4754 1d68 8A5D      		subi r24,-38
 4755 1d6a 934E      		sbci r25,-29
 4756 1d6c 292F      		mov r18,r25
 4757 1d6e 2F93      		push r18
 4758 1d70 8F93      		push r24
 4759 1d72 80E0      		ldi r24,lo8(.LC19)
 4760 1d74 90E0      		ldi r25,hi8(.LC19)
 4761 1d76 892F      		mov r24,r25
 4762 1d78 8F93      		push r24
 4763 1d7a 80E0      		ldi r24,lo8(.LC19)
 4764 1d7c 90E0      		ldi r25,hi8(.LC19)
 4765 1d7e 8F93      		push r24
 4766 1d80 CE01      		movw r24,r28
 4767 1d82 8A5D      		subi r24,-38
 4768 1d84 9F4E      		sbci r25,-17
 4769 1d86 292F      		mov r18,r25
 4770 1d88 2F93      		push r18
 4771 1d8a 8F93      		push r24
 4772 1d8c 0E94 0000 		call sscanf
 4773 1d90 0F90      		pop __tmp_reg__
 4774 1d92 0F90      		pop __tmp_reg__
 4775 1d94 0F90      		pop __tmp_reg__
 4776 1d96 0F90      		pop __tmp_reg__
 4777 1d98 0F90      		pop __tmp_reg__
 4778 1d9a 0F90      		pop __tmp_reg__
 612:lp_solve_5.5/lp_MPS.c ****           if (!set_lp_name(lp, probname))
 4779               		.loc 1 612 0
 4780 1d9c 9E01      		movw r18,r28
 4781 1d9e 2A5D      		subi r18,-38
 4782 1da0 334E      		sbci r19,-29
 4783 1da2 8D89      		ldd r24,Y+21
 4784 1da4 9E89      		ldd r25,Y+22
 4785 1da6 B901      		movw r22,r18
 4786 1da8 0E94 0000 		call set_lp_name
 4787 1dac 8823      		tst r24
 4788 1dae 01F0      		breq .+4
 4789 1db0 0C94 0000 		jmp .L148
 613:lp_solve_5.5/lp_MPS.c ****             break;
 4790               		.loc 1 613 0
 4791 1db4 0C94 0000 		jmp .L157
 4792               	.L155:
 614:lp_solve_5.5/lp_MPS.c ****         }
 615:lp_solve_5.5/lp_MPS.c ****         else if(((typeMPS & MPSFREE) == MPSFREE) && (strcmp(tmp, "OBJSENSE") == 0)) {
 4793               		.loc 1 615 0
 4794 1db8 CE01      		movw r24,r28
 4795 1dba 835C      		subi r24,-61
 4796 1dbc 9B4D      		sbci r25,-37
 4797 1dbe DC01      		movw r26,r24
 4798 1dc0 8D91      		ld r24,X+
 4799 1dc2 9C91      		ld r25,X
 4800 1dc4 8270      		andi r24,2
 4801 1dc6 9927      		clr r25
 4802 1dc8 892B      		or r24,r25
 4803 1dca 01F0      		breq .L158
 4804               		.loc 1 615 0 is_stmt 0 discriminator 1
 4805 1dcc CE01      		movw r24,r28
 4806 1dce 8A5D      		subi r24,-38
 4807 1dd0 9B4E      		sbci r25,-21
 4808 1dd2 60E0      		ldi r22,lo8(.LC20)
 4809 1dd4 70E0      		ldi r23,hi8(.LC20)
 4810 1dd6 0E94 0000 		call strcmp
 4811 1dda 892B      		or r24,r25
 4812 1ddc 01F4      		brne .L158
 616:lp_solve_5.5/lp_MPS.c ****           section = MPSOBJSENSE;
 4813               		.loc 1 616 0 is_stmt 1
 4814 1dde 8EEF      		ldi r24,lo8(-2)
 4815 1de0 9FEF      		ldi r25,lo8(-1)
 4816 1de2 9887      		std Y+8,r25
 4817 1de4 8F83      		std Y+7,r24
 617:lp_solve_5.5/lp_MPS.c ****           report(lp, FULL, "Switching to OBJSENSE section\n");
 4818               		.loc 1 617 0
 4819 1de6 80E0      		ldi r24,lo8(.LC21)
 4820 1de8 90E0      		ldi r25,hi8(.LC21)
 4821 1dea 892F      		mov r24,r25
 4822 1dec 8F93      		push r24
 4823 1dee 80E0      		ldi r24,lo8(.LC21)
 4824 1df0 90E0      		ldi r25,hi8(.LC21)
 4825 1df2 8F93      		push r24
 4826 1df4 1F92      		push __zero_reg__
 4827 1df6 86E0      		ldi r24,lo8(6)
 4828 1df8 8F93      		push r24
 4829 1dfa 8E89      		ldd r24,Y+22
 4830 1dfc 8F93      		push r24
 4831 1dfe 8D89      		ldd r24,Y+21
 4832 1e00 8F93      		push r24
 4833 1e02 0E94 0000 		call report
 4834 1e06 0F90      		pop __tmp_reg__
 4835 1e08 0F90      		pop __tmp_reg__
 4836 1e0a 0F90      		pop __tmp_reg__
 4837 1e0c 0F90      		pop __tmp_reg__
 4838 1e0e 0F90      		pop __tmp_reg__
 4839 1e10 0F90      		pop __tmp_reg__
 4840 1e12 0C94 0000 		jmp .L148
 4841               	.L158:
 618:lp_solve_5.5/lp_MPS.c ****         }
 619:lp_solve_5.5/lp_MPS.c ****         else if(((typeMPS & MPSFREE) == MPSFREE) && (strcmp(tmp, "OBJNAME") == 0)) {
 4842               		.loc 1 619 0
 4843 1e16 CE01      		movw r24,r28
 4844 1e18 835C      		subi r24,-61
 4845 1e1a 9B4D      		sbci r25,-37
 4846 1e1c FC01      		movw r30,r24
 4847 1e1e 8081      		ld r24,Z
 4848 1e20 9181      		ldd r25,Z+1
 4849 1e22 8270      		andi r24,2
 4850 1e24 9927      		clr r25
 4851 1e26 892B      		or r24,r25
 4852 1e28 01F0      		breq .L159
 4853               		.loc 1 619 0 is_stmt 0 discriminator 1
 4854 1e2a CE01      		movw r24,r28
 4855 1e2c 8A5D      		subi r24,-38
 4856 1e2e 9B4E      		sbci r25,-21
 4857 1e30 60E0      		ldi r22,lo8(.LC22)
 4858 1e32 70E0      		ldi r23,hi8(.LC22)
 4859 1e34 0E94 0000 		call strcmp
 4860 1e38 892B      		or r24,r25
 4861 1e3a 01F4      		brne .L159
 620:lp_solve_5.5/lp_MPS.c ****           section = MPSOBJNAME;
 4862               		.loc 1 620 0 is_stmt 1
 4863 1e3c 8FEF      		ldi r24,lo8(-1)
 4864 1e3e 9FEF      		ldi r25,lo8(-1)
 4865 1e40 9887      		std Y+8,r25
 4866 1e42 8F83      		std Y+7,r24
 621:lp_solve_5.5/lp_MPS.c ****           report(lp, FULL, "Switching to OBJNAME section\n");
 4867               		.loc 1 621 0
 4868 1e44 80E0      		ldi r24,lo8(.LC23)
 4869 1e46 90E0      		ldi r25,hi8(.LC23)
 4870 1e48 892F      		mov r24,r25
 4871 1e4a 8F93      		push r24
 4872 1e4c 80E0      		ldi r24,lo8(.LC23)
 4873 1e4e 90E0      		ldi r25,hi8(.LC23)
 4874 1e50 8F93      		push r24
 4875 1e52 1F92      		push __zero_reg__
 4876 1e54 86E0      		ldi r24,lo8(6)
 4877 1e56 8F93      		push r24
 4878 1e58 8E89      		ldd r24,Y+22
 4879 1e5a 8F93      		push r24
 4880 1e5c 8D89      		ldd r24,Y+21
 4881 1e5e 8F93      		push r24
 4882 1e60 0E94 0000 		call report
 4883 1e64 0F90      		pop __tmp_reg__
 4884 1e66 0F90      		pop __tmp_reg__
 4885 1e68 0F90      		pop __tmp_reg__
 4886 1e6a 0F90      		pop __tmp_reg__
 4887 1e6c 0F90      		pop __tmp_reg__
 4888 1e6e 0F90      		pop __tmp_reg__
 4889 1e70 0C94 0000 		jmp .L148
 4890               	.L159:
 622:lp_solve_5.5/lp_MPS.c ****         }
 623:lp_solve_5.5/lp_MPS.c ****         else if(strcmp(tmp, "ROWS") == 0) {
 4891               		.loc 1 623 0
 4892 1e74 CE01      		movw r24,r28
 4893 1e76 8A5D      		subi r24,-38
 4894 1e78 9B4E      		sbci r25,-21
 4895 1e7a 60E0      		ldi r22,lo8(.LC24)
 4896 1e7c 70E0      		ldi r23,hi8(.LC24)
 4897 1e7e 0E94 0000 		call strcmp
 4898 1e82 892B      		or r24,r25
 4899 1e84 01F4      		brne .L160
 624:lp_solve_5.5/lp_MPS.c ****           section = MPSROWS;
 4900               		.loc 1 624 0
 4901 1e86 1886      		std Y+8,__zero_reg__
 4902 1e88 1F82      		std Y+7,__zero_reg__
 625:lp_solve_5.5/lp_MPS.c ****           report(lp, FULL, "Switching to ROWS section\n");
 4903               		.loc 1 625 0
 4904 1e8a 80E0      		ldi r24,lo8(.LC25)
 4905 1e8c 90E0      		ldi r25,hi8(.LC25)
 4906 1e8e 892F      		mov r24,r25
 4907 1e90 8F93      		push r24
 4908 1e92 80E0      		ldi r24,lo8(.LC25)
 4909 1e94 90E0      		ldi r25,hi8(.LC25)
 4910 1e96 8F93      		push r24
 4911 1e98 1F92      		push __zero_reg__
 4912 1e9a 86E0      		ldi r24,lo8(6)
 4913 1e9c 8F93      		push r24
 4914 1e9e 8E89      		ldd r24,Y+22
 4915 1ea0 8F93      		push r24
 4916 1ea2 8D89      		ldd r24,Y+21
 4917 1ea4 8F93      		push r24
 4918 1ea6 0E94 0000 		call report
 4919 1eaa 0F90      		pop __tmp_reg__
 4920 1eac 0F90      		pop __tmp_reg__
 4921 1eae 0F90      		pop __tmp_reg__
 4922 1eb0 0F90      		pop __tmp_reg__
 4923 1eb2 0F90      		pop __tmp_reg__
 4924 1eb4 0F90      		pop __tmp_reg__
 4925 1eb6 0C94 0000 		jmp .L148
 4926               	.L160:
 626:lp_solve_5.5/lp_MPS.c ****         }
 627:lp_solve_5.5/lp_MPS.c ****         else if(strcmp(tmp, "COLUMNS") == 0) {
 4927               		.loc 1 627 0
 4928 1eba CE01      		movw r24,r28
 4929 1ebc 8A5D      		subi r24,-38
 4930 1ebe 9B4E      		sbci r25,-21
 4931 1ec0 60E0      		ldi r22,lo8(.LC26)
 4932 1ec2 70E0      		ldi r23,hi8(.LC26)
 4933 1ec4 0E94 0000 		call strcmp
 4934 1ec8 892B      		or r24,r25
 4935 1eca 01F0      		breq .+2
 4936 1ecc 00C0      		rjmp .L161
 628:lp_solve_5.5/lp_MPS.c ****           allocREAL(lp, &Last_column, lp->rows + 1, TRUE);
 4937               		.loc 1 628 0
 4938 1ece 8D89      		ldd r24,Y+21
 4939 1ed0 9E89      		ldd r25,Y+22
 4940 1ed2 8651      		subi r24,22
 4941 1ed4 9E4F      		sbci r25,-2
 4942 1ed6 DC01      		movw r26,r24
 4943 1ed8 8D91      		ld r24,X+
 4944 1eda 9C91      		ld r25,X
 4945 1edc AC01      		movw r20,r24
 4946 1ede 4F5F      		subi r20,-1
 4947 1ee0 5F4F      		sbci r21,-1
 4948 1ee2 BE01      		movw r22,r28
 4949 1ee4 6F5C      		subi r22,-49
 4950 1ee6 7B4D      		sbci r23,-37
 4951 1ee8 8D89      		ldd r24,Y+21
 4952 1eea 9E89      		ldd r25,Y+22
 4953 1eec 21E0      		ldi r18,lo8(1)
 4954 1eee 0E94 0000 		call allocREAL
 629:lp_solve_5.5/lp_MPS.c ****           allocINT(lp, &Last_columnno, lp->rows + 1, TRUE);
 4955               		.loc 1 629 0
 4956 1ef2 8D89      		ldd r24,Y+21
 4957 1ef4 9E89      		ldd r25,Y+22
 4958 1ef6 8651      		subi r24,22
 4959 1ef8 9E4F      		sbci r25,-2
 4960 1efa FC01      		movw r30,r24
 4961 1efc 8081      		ld r24,Z
 4962 1efe 9181      		ldd r25,Z+1
 4963 1f00 AC01      		movw r20,r24
 4964 1f02 4F5F      		subi r20,-1
 4965 1f04 5F4F      		sbci r21,-1
 4966 1f06 BE01      		movw r22,r28
 4967 1f08 6B5C      		subi r22,-53
 4968 1f0a 7B4D      		sbci r23,-37
 4969 1f0c 8D89      		ldd r24,Y+21
 4970 1f0e 9E89      		ldd r25,Y+22
 4971 1f10 21E0      		ldi r18,lo8(1)
 4972 1f12 0E94 0000 		call allocINT
 630:lp_solve_5.5/lp_MPS.c ****           count = 0;
 4973               		.loc 1 630 0
 4974 1f16 CE01      		movw r24,r28
 4975 1f18 8D5C      		subi r24,-51
 4976 1f1a 9B4D      		sbci r25,-37
 4977 1f1c DC01      		movw r26,r24
 4978 1f1e 1D92      		st X+,__zero_reg__
 4979 1f20 1C92      		st X,__zero_reg__
 631:lp_solve_5.5/lp_MPS.c ****           if ((Last_column == NULL) || (Last_columnno == NULL))
 4980               		.loc 1 631 0
 4981 1f22 CE01      		movw r24,r28
 4982 1f24 8F5C      		subi r24,-49
 4983 1f26 9B4D      		sbci r25,-37
 4984 1f28 FC01      		movw r30,r24
 4985 1f2a 8081      		ld r24,Z
 4986 1f2c 9181      		ldd r25,Z+1
 4987 1f2e 892B      		or r24,r25
 4988 1f30 01F4      		brne .+4
 4989 1f32 0C94 0000 		jmp .L157
 4990               		.loc 1 631 0 is_stmt 0 discriminator 1
 4991 1f36 CE01      		movw r24,r28
 4992 1f38 8B5C      		subi r24,-53
 4993 1f3a 9B4D      		sbci r25,-37
 4994 1f3c DC01      		movw r26,r24
 4995 1f3e 8D91      		ld r24,X+
 4996 1f40 9C91      		ld r25,X
 4997 1f42 892B      		or r24,r25
 4998 1f44 01F4      		brne .+4
 4999 1f46 0C94 0000 		jmp .L157
 632:lp_solve_5.5/lp_MPS.c ****             break;
 633:lp_solve_5.5/lp_MPS.c ****           section = MPSCOLUMNS;
 5000               		.loc 1 633 0 is_stmt 1
 5001 1f4a 81E0      		ldi r24,lo8(1)
 5002 1f4c 90E0      		ldi r25,0
 5003 1f4e 9887      		std Y+8,r25
 5004 1f50 8F83      		std Y+7,r24
 634:lp_solve_5.5/lp_MPS.c ****           report(lp, FULL, "Switching to COLUMNS section\n");
 5005               		.loc 1 634 0
 5006 1f52 80E0      		ldi r24,lo8(.LC27)
 5007 1f54 90E0      		ldi r25,hi8(.LC27)
 5008 1f56 892F      		mov r24,r25
 5009 1f58 8F93      		push r24
 5010 1f5a 80E0      		ldi r24,lo8(.LC27)
 5011 1f5c 90E0      		ldi r25,hi8(.LC27)
 5012 1f5e 8F93      		push r24
 5013 1f60 1F92      		push __zero_reg__
 5014 1f62 86E0      		ldi r24,lo8(6)
 5015 1f64 8F93      		push r24
 5016 1f66 8E89      		ldd r24,Y+22
 5017 1f68 8F93      		push r24
 5018 1f6a 8D89      		ldd r24,Y+21
 5019 1f6c 8F93      		push r24
 5020 1f6e 0E94 0000 		call report
 5021 1f72 0F90      		pop __tmp_reg__
 5022 1f74 0F90      		pop __tmp_reg__
 5023 1f76 0F90      		pop __tmp_reg__
 5024 1f78 0F90      		pop __tmp_reg__
 5025 1f7a 0F90      		pop __tmp_reg__
 5026 1f7c 0F90      		pop __tmp_reg__
 5027 1f7e 0C94 0000 		jmp .L148
 5028               	.L161:
 635:lp_solve_5.5/lp_MPS.c ****         }
 636:lp_solve_5.5/lp_MPS.c ****         else if(strcmp(tmp, "RHS") == 0) {
 5029               		.loc 1 636 0
 5030 1f82 CE01      		movw r24,r28
 5031 1f84 8A5D      		subi r24,-38
 5032 1f86 9B4E      		sbci r25,-21
 5033 1f88 60E0      		ldi r22,lo8(.LC28)
 5034 1f8a 70E0      		ldi r23,hi8(.LC28)
 5035 1f8c 0E94 0000 		call strcmp
 5036 1f90 892B      		or r24,r25
 5037 1f92 01F0      		breq .+2
 5038 1f94 00C0      		rjmp .L162
 637:lp_solve_5.5/lp_MPS.c ****           if (!addmpscolumn(lp, Int_section, typeMPS, &Column_ready, &count, Last_column, Last_colu
 5039               		.loc 1 637 0
 5040 1f96 CE01      		movw r24,r28
 5041 1f98 8B5C      		subi r24,-53
 5042 1f9a 9B4D      		sbci r25,-37
 5043 1f9c FC01      		movw r30,r24
 5044 1f9e A081      		ld r26,Z
 5045 1fa0 B181      		ldd r27,Z+1
 5046 1fa2 CE01      		movw r24,r28
 5047 1fa4 8F5C      		subi r24,-49
 5048 1fa6 9B4D      		sbci r25,-37
 5049 1fa8 FC01      		movw r30,r24
 5050 1faa 0190      		ld __tmp_reg__,Z+
 5051 1fac F081      		ld r31,Z
 5052 1fae E02D      		mov r30,__tmp_reg__
 5053 1fb0 CF5B      		subi r28,lo8(-9281)
 5054 1fb2 DB4D      		sbci r29,hi8(-9281)
 5055 1fb4 F983      		std Y+1,r31
 5056 1fb6 E883      		st Y,r30
 5057 1fb8 C154      		subi r28,lo8(9281)
 5058 1fba D442      		sbci r29,hi8(9281)
 5059 1fbc 8E01      		movw r16,r28
 5060 1fbe 0A5D      		subi r16,-38
 5061 1fc0 174E      		sbci r17,-25
 5062 1fc2 BE01      		movw r22,r28
 5063 1fc4 6D5C      		subi r22,-51
 5064 1fc6 7B4D      		sbci r23,-37
 5065 1fc8 9E01      		movw r18,r28
 5066 1fca 285D      		subi r18,-40
 5067 1fcc 3B4D      		sbci r19,-37
 5068 1fce CE01      		movw r24,r28
 5069 1fd0 835C      		subi r24,-61
 5070 1fd2 9B4D      		sbci r25,-37
 5071 1fd4 FC01      		movw r30,r24
 5072 1fd6 4081      		ld r20,Z
 5073 1fd8 5181      		ldd r21,Z+1
 5074 1fda 8D89      		ldd r24,Y+21
 5075 1fdc 9E89      		ldd r25,Y+22
 5076 1fde 5801      		movw r10,r16
 5077 1fe0 6D01      		movw r12,r26
 5078 1fe2 CF5B      		subi r28,lo8(-9281)
 5079 1fe4 DB4D      		sbci r29,hi8(-9281)
 5080 1fe6 E880      		ld r14,Y
 5081 1fe8 F980      		ldd r15,Y+1
 5082 1fea C154      		subi r28,lo8(9281)
 5083 1fec D442      		sbci r29,hi8(9281)
 5084 1fee 8B01      		movw r16,r22
 5085 1ff0 6F85      		ldd r22,Y+15
 5086 1ff2 0E94 0000 		call addmpscolumn
 5087 1ff6 892B      		or r24,r25
 5088 1ff8 01F4      		brne .+4
 5089 1ffa 0C94 0000 		jmp .L349
 638:lp_solve_5.5/lp_MPS.c ****             break;
 639:lp_solve_5.5/lp_MPS.c ****           section = MPSRHS;
 5090               		.loc 1 639 0
 5091 1ffe 82E0      		ldi r24,lo8(2)
 5092 2000 90E0      		ldi r25,0
 5093 2002 9887      		std Y+8,r25
 5094 2004 8F83      		std Y+7,r24
 640:lp_solve_5.5/lp_MPS.c ****           report(lp, FULL, "Switching to RHS section\n");
 5095               		.loc 1 640 0
 5096 2006 80E0      		ldi r24,lo8(.LC29)
 5097 2008 90E0      		ldi r25,hi8(.LC29)
 5098 200a 892F      		mov r24,r25
 5099 200c 8F93      		push r24
 5100 200e 80E0      		ldi r24,lo8(.LC29)
 5101 2010 90E0      		ldi r25,hi8(.LC29)
 5102 2012 8F93      		push r24
 5103 2014 1F92      		push __zero_reg__
 5104 2016 86E0      		ldi r24,lo8(6)
 5105 2018 8F93      		push r24
 5106 201a 8E89      		ldd r24,Y+22
 5107 201c 8F93      		push r24
 5108 201e 8D89      		ldd r24,Y+21
 5109 2020 8F93      		push r24
 5110 2022 0E94 0000 		call report
 5111 2026 0F90      		pop __tmp_reg__
 5112 2028 0F90      		pop __tmp_reg__
 5113 202a 0F90      		pop __tmp_reg__
 5114 202c 0F90      		pop __tmp_reg__
 5115 202e 0F90      		pop __tmp_reg__
 5116 2030 0F90      		pop __tmp_reg__
 5117 2032 0C94 0000 		jmp .L148
 5118               	.L162:
 641:lp_solve_5.5/lp_MPS.c ****         }
 642:lp_solve_5.5/lp_MPS.c ****         else if(strcmp(tmp, "BOUNDS") == 0) {
 5119               		.loc 1 642 0
 5120 2036 CE01      		movw r24,r28
 5121 2038 8A5D      		subi r24,-38
 5122 203a 9B4E      		sbci r25,-21
 5123 203c 60E0      		ldi r22,lo8(.LC30)
 5124 203e 70E0      		ldi r23,hi8(.LC30)
 5125 2040 0E94 0000 		call strcmp
 5126 2044 892B      		or r24,r25
 5127 2046 01F4      		brne .L164
 643:lp_solve_5.5/lp_MPS.c ****           section = MPSBOUNDS;
 5128               		.loc 1 643 0
 5129 2048 83E0      		ldi r24,lo8(3)
 5130 204a 90E0      		ldi r25,0
 5131 204c 9887      		std Y+8,r25
 5132 204e 8F83      		std Y+7,r24
 644:lp_solve_5.5/lp_MPS.c ****           report(lp, FULL, "Switching to BOUNDS section\n");
 5133               		.loc 1 644 0
 5134 2050 80E0      		ldi r24,lo8(.LC31)
 5135 2052 90E0      		ldi r25,hi8(.LC31)
 5136 2054 892F      		mov r24,r25
 5137 2056 8F93      		push r24
 5138 2058 80E0      		ldi r24,lo8(.LC31)
 5139 205a 90E0      		ldi r25,hi8(.LC31)
 5140 205c 8F93      		push r24
 5141 205e 1F92      		push __zero_reg__
 5142 2060 86E0      		ldi r24,lo8(6)
 5143 2062 8F93      		push r24
 5144 2064 8E89      		ldd r24,Y+22
 5145 2066 8F93      		push r24
 5146 2068 8D89      		ldd r24,Y+21
 5147 206a 8F93      		push r24
 5148 206c 0E94 0000 		call report
 5149 2070 0F90      		pop __tmp_reg__
 5150 2072 0F90      		pop __tmp_reg__
 5151 2074 0F90      		pop __tmp_reg__
 5152 2076 0F90      		pop __tmp_reg__
 5153 2078 0F90      		pop __tmp_reg__
 5154 207a 0F90      		pop __tmp_reg__
 5155 207c 0C94 0000 		jmp .L148
 5156               	.L164:
 645:lp_solve_5.5/lp_MPS.c ****         }
 646:lp_solve_5.5/lp_MPS.c ****         else if(strcmp(tmp, "RANGES") == 0) {
 5157               		.loc 1 646 0
 5158 2080 CE01      		movw r24,r28
 5159 2082 8A5D      		subi r24,-38
 5160 2084 9B4E      		sbci r25,-21
 5161 2086 60E0      		ldi r22,lo8(.LC32)
 5162 2088 70E0      		ldi r23,hi8(.LC32)
 5163 208a 0E94 0000 		call strcmp
 5164 208e 892B      		or r24,r25
 5165 2090 01F4      		brne .L165
 647:lp_solve_5.5/lp_MPS.c ****           section = MPSRANGES;
 5166               		.loc 1 647 0
 5167 2092 84E0      		ldi r24,lo8(4)
 5168 2094 90E0      		ldi r25,0
 5169 2096 9887      		std Y+8,r25
 5170 2098 8F83      		std Y+7,r24
 648:lp_solve_5.5/lp_MPS.c ****           report(lp, FULL, "Switching to RANGES section\n");
 5171               		.loc 1 648 0
 5172 209a 80E0      		ldi r24,lo8(.LC33)
 5173 209c 90E0      		ldi r25,hi8(.LC33)
 5174 209e 892F      		mov r24,r25
 5175 20a0 8F93      		push r24
 5176 20a2 80E0      		ldi r24,lo8(.LC33)
 5177 20a4 90E0      		ldi r25,hi8(.LC33)
 5178 20a6 8F93      		push r24
 5179 20a8 1F92      		push __zero_reg__
 5180 20aa 86E0      		ldi r24,lo8(6)
 5181 20ac 8F93      		push r24
 5182 20ae 8E89      		ldd r24,Y+22
 5183 20b0 8F93      		push r24
 5184 20b2 8D89      		ldd r24,Y+21
 5185 20b4 8F93      		push r24
 5186 20b6 0E94 0000 		call report
 5187 20ba 0F90      		pop __tmp_reg__
 5188 20bc 0F90      		pop __tmp_reg__
 5189 20be 0F90      		pop __tmp_reg__
 5190 20c0 0F90      		pop __tmp_reg__
 5191 20c2 0F90      		pop __tmp_reg__
 5192 20c4 0F90      		pop __tmp_reg__
 5193 20c6 0C94 0000 		jmp .L148
 5194               	.L165:
 649:lp_solve_5.5/lp_MPS.c ****         }
 650:lp_solve_5.5/lp_MPS.c ****         else if((strcmp(tmp, "SOS") == 0) || (strcmp(tmp, "SETS") == 0)) {
 5195               		.loc 1 650 0
 5196 20ca CE01      		movw r24,r28
 5197 20cc 8A5D      		subi r24,-38
 5198 20ce 9B4E      		sbci r25,-21
 5199 20d0 60E0      		ldi r22,lo8(.LC34)
 5200 20d2 70E0      		ldi r23,hi8(.LC34)
 5201 20d4 0E94 0000 		call strcmp
 5202 20d8 892B      		or r24,r25
 5203 20da 01F0      		breq .L166
 5204               		.loc 1 650 0 is_stmt 0 discriminator 1
 5205 20dc CE01      		movw r24,r28
 5206 20de 8A5D      		subi r24,-38
 5207 20e0 9B4E      		sbci r25,-21
 5208 20e2 60E0      		ldi r22,lo8(.LC35)
 5209 20e4 70E0      		ldi r23,hi8(.LC35)
 5210 20e6 0E94 0000 		call strcmp
 5211 20ea 892B      		or r24,r25
 5212 20ec 01F4      		brne .L167
 5213               	.L166:
 651:lp_solve_5.5/lp_MPS.c ****           section = MPSSOS;
 5214               		.loc 1 651 0 is_stmt 1
 5215 20ee 85E0      		ldi r24,lo8(5)
 5216 20f0 90E0      		ldi r25,0
 5217 20f2 9887      		std Y+8,r25
 5218 20f4 8F83      		std Y+7,r24
 652:lp_solve_5.5/lp_MPS.c ****           if(strcmp(tmp, "SOS") == 0)
 5219               		.loc 1 652 0
 5220 20f6 CE01      		movw r24,r28
 5221 20f8 8A5D      		subi r24,-38
 5222 20fa 9B4E      		sbci r25,-21
 5223 20fc 60E0      		ldi r22,lo8(.LC34)
 5224 20fe 70E0      		ldi r23,hi8(.LC34)
 5225 2100 0E94 0000 		call strcmp
 5226 2104 892B      		or r24,r25
 5227 2106 01F4      		brne .L168
 653:lp_solve_5.5/lp_MPS.c ****             variant = 0;
 5228               		.loc 1 653 0
 5229 2108 1A86      		std Y+10,__zero_reg__
 5230 210a 1986      		std Y+9,__zero_reg__
 5231 210c 00C0      		rjmp .L169
 5232               	.L168:
 654:lp_solve_5.5/lp_MPS.c ****           else
 655:lp_solve_5.5/lp_MPS.c ****             variant = 1;
 5233               		.loc 1 655 0
 5234 210e 81E0      		ldi r24,lo8(1)
 5235 2110 90E0      		ldi r25,0
 5236 2112 9A87      		std Y+10,r25
 5237 2114 8987      		std Y+9,r24
 5238               	.L169:
 656:lp_solve_5.5/lp_MPS.c ****           report(lp, FULL, "Switching to %s section\n", tmp);
 5239               		.loc 1 656 0
 5240 2116 CE01      		movw r24,r28
 5241 2118 8A5D      		subi r24,-38
 5242 211a 9B4E      		sbci r25,-21
 5243 211c 292F      		mov r18,r25
 5244 211e 2F93      		push r18
 5245 2120 8F93      		push r24
 5246 2122 80E0      		ldi r24,lo8(.LC36)
 5247 2124 90E0      		ldi r25,hi8(.LC36)
 5248 2126 892F      		mov r24,r25
 5249 2128 8F93      		push r24
 5250 212a 80E0      		ldi r24,lo8(.LC36)
 5251 212c 90E0      		ldi r25,hi8(.LC36)
 5252 212e 8F93      		push r24
 5253 2130 1F92      		push __zero_reg__
 5254 2132 86E0      		ldi r24,lo8(6)
 5255 2134 8F93      		push r24
 5256 2136 8E89      		ldd r24,Y+22
 5257 2138 8F93      		push r24
 5258 213a 8D89      		ldd r24,Y+21
 5259 213c 8F93      		push r24
 5260 213e 0E94 0000 		call report
 5261 2142 2DB7      		in r18,__SP_L__
 5262 2144 3EB7      		in r19,__SP_H__
 5263 2146 285F      		subi r18,-8
 5264 2148 3F4F      		sbci r19,-1
 5265 214a 0FB6      		in __tmp_reg__,__SREG__
 5266 214c F894      		cli
 5267 214e DEBF      		out __SP_H__,r29
 5268 2150 0FBE      		out __SREG__,__tmp_reg__
 5269 2152 CDBF      		out __SP_L__,r28
 5270 2154 0C94 0000 		jmp .L148
 5271               	.L167:
 657:lp_solve_5.5/lp_MPS.c ****         }
 658:lp_solve_5.5/lp_MPS.c ****         else if(strcmp(tmp, "ENDATA") == 0) {
 5272               		.loc 1 658 0
 5273 2158 CE01      		movw r24,r28
 5274 215a 8A5D      		subi r24,-38
 5275 215c 9B4E      		sbci r25,-21
 5276 215e 60E0      		ldi r22,lo8(.LC37)
 5277 2160 70E0      		ldi r23,hi8(.LC37)
 5278 2162 0E94 0000 		call strcmp
 5279 2166 892B      		or r24,r25
 5280 2168 01F4      		brne .L170
 659:lp_solve_5.5/lp_MPS.c ****           report(lp, FULL, "Finished reading MPS file\n");
 5281               		.loc 1 659 0
 5282 216a 80E0      		ldi r24,lo8(.LC38)
 5283 216c 90E0      		ldi r25,hi8(.LC38)
 5284 216e 892F      		mov r24,r25
 5285 2170 8F93      		push r24
 5286 2172 80E0      		ldi r24,lo8(.LC38)
 5287 2174 90E0      		ldi r25,hi8(.LC38)
 5288 2176 8F93      		push r24
 5289 2178 1F92      		push __zero_reg__
 5290 217a 86E0      		ldi r24,lo8(6)
 5291 217c 8F93      		push r24
 5292 217e 8E89      		ldd r24,Y+22
 5293 2180 8F93      		push r24
 5294 2182 8D89      		ldd r24,Y+21
 5295 2184 8F93      		push r24
 5296 2186 0E94 0000 		call report
 5297 218a 0F90      		pop __tmp_reg__
 5298 218c 0F90      		pop __tmp_reg__
 5299 218e 0F90      		pop __tmp_reg__
 5300 2190 0F90      		pop __tmp_reg__
 5301 2192 0F90      		pop __tmp_reg__
 5302 2194 0F90      		pop __tmp_reg__
 660:lp_solve_5.5/lp_MPS.c ****           CompleteStatus = TRUE;
 5303               		.loc 1 660 0
 5304 2196 81E0      		ldi r24,lo8(1)
 5305 2198 8A8B      		std Y+18,r24
 661:lp_solve_5.5/lp_MPS.c ****           break;
 5306               		.loc 1 661 0
 5307 219a 0C94 0000 		jmp .L157
 5308               	.L170:
 662:lp_solve_5.5/lp_MPS.c ****         }
 663:lp_solve_5.5/lp_MPS.c ****         else { /* line does not start with space and does not match above */
 664:lp_solve_5.5/lp_MPS.c ****           report(lp, IMPORTANT, "Unrecognized MPS line %d: %s\n", Lineno, line);
 5309               		.loc 1 664 0
 5310 219e CE01      		movw r24,r28
 5311 21a0 8A5D      		subi r24,-38
 5312 21a2 9F4E      		sbci r25,-17
 5313 21a4 292F      		mov r18,r25
 5314 21a6 2F93      		push r18
 5315 21a8 8F93      		push r24
 5316 21aa 8E81      		ldd r24,Y+6
 5317 21ac 8F93      		push r24
 5318 21ae 8D81      		ldd r24,Y+5
 5319 21b0 8F93      		push r24
 5320 21b2 80E0      		ldi r24,lo8(.LC39)
 5321 21b4 90E0      		ldi r25,hi8(.LC39)
 5322 21b6 892F      		mov r24,r25
 5323 21b8 8F93      		push r24
 5324 21ba 80E0      		ldi r24,lo8(.LC39)
 5325 21bc 90E0      		ldi r25,hi8(.LC39)
 5326 21be 8F93      		push r24
 5327 21c0 1F92      		push __zero_reg__
 5328 21c2 83E0      		ldi r24,lo8(3)
 5329 21c4 8F93      		push r24
 5330 21c6 8E89      		ldd r24,Y+22
 5331 21c8 8F93      		push r24
 5332 21ca 8D89      		ldd r24,Y+21
 5333 21cc 8F93      		push r24
 5334 21ce 0E94 0000 		call report
 5335 21d2 8DB7      		in r24,__SP_L__
 5336 21d4 9EB7      		in r25,__SP_H__
 5337 21d6 0A96      		adiw r24,10
 5338 21d8 0FB6      		in __tmp_reg__,__SREG__
 5339 21da F894      		cli
 5340 21dc DEBF      		out __SP_H__,r29
 5341 21de 0FBE      		out __SREG__,__tmp_reg__
 5342 21e0 CDBF      		out __SP_L__,r28
 665:lp_solve_5.5/lp_MPS.c ****           break;
 5343               		.loc 1 665 0
 5344 21e2 0C94 0000 		jmp .L157
 5345               	.L154:
 666:lp_solve_5.5/lp_MPS.c ****         }
 667:lp_solve_5.5/lp_MPS.c ****       }
 668:lp_solve_5.5/lp_MPS.c ****       else { /* normal line, process */
 669:lp_solve_5.5/lp_MPS.c ****         items = scan_line(lp, section, line, field1, field2, field3, &field4, field5, &field6);
 5346               		.loc 1 669 0
 5347 21e6 5E01      		movw r10,r28
 5348 21e8 93ED      		ldi r25,-45
 5349 21ea A91A      		sub r10,r25
 5350 21ec 9BED      		ldi r25,-37
 5351 21ee B90A      		sbc r11,r25
 5352 21f0 6E01      		movw r12,r28
 5353 21f2 AAED      		ldi r26,-38
 5354 21f4 CA1A      		sub r12,r26
 5355 21f6 A3EF      		ldi r26,-13
 5356 21f8 DA0A      		sbc r13,r26
 5357 21fa 7E01      		movw r14,r28
 5358 21fc B7ED      		ldi r27,-41
 5359 21fe EB1A      		sub r14,r27
 5360 2200 BBED      		ldi r27,-37
 5361 2202 FB0A      		sbc r15,r27
 5362 2204 8E01      		movw r16,r28
 5363 2206 0A5D      		subi r16,-38
 5364 2208 174F      		sbci r17,-9
 5365 220a DE01      		movw r26,r28
 5366 220c AA5D      		subi r26,-38
 5367 220e BB4F      		sbci r27,-5
 5368 2210 9E01      		movw r18,r28
 5369 2212 2A5D      		subi r18,-38
 5370 2214 3F4F      		sbci r19,-1
 5371 2216 AE01      		movw r20,r28
 5372 2218 4A5D      		subi r20,-38
 5373 221a 5F4E      		sbci r21,-17
 5374 221c 6F81      		ldd r22,Y+7
 5375 221e 7885      		ldd r23,Y+8
 5376 2220 8D89      		ldd r24,Y+21
 5377 2222 9E89      		ldd r25,Y+22
 5378 2224 EF89      		ldd r30,Y+23
 5379 2226 F88D      		ldd r31,Y+24
 5380 2228 4501      		movw r8,r10
 5381 222a 5601      		movw r10,r12
 5382 222c 6701      		movw r12,r14
 5383 222e 7801      		movw r14,r16
 5384 2230 8D01      		movw r16,r26
 5385 2232 0995      		icall
 5386 2234 9C83      		std Y+4,r25
 5387 2236 8B83      		std Y+3,r24
 670:lp_solve_5.5/lp_MPS.c ****         if(items < 0){
 5388               		.loc 1 670 0
 5389 2238 8B81      		ldd r24,Y+3
 5390 223a 9C81      		ldd r25,Y+4
 5391 223c 9923      		tst r25
 5392 223e 04F4      		brge .L171
 671:lp_solve_5.5/lp_MPS.c ****           report(lp, IMPORTANT, "Syntax error on line %d: %s\n", Lineno, line);
 5393               		.loc 1 671 0
 5394 2240 CE01      		movw r24,r28
 5395 2242 8A5D      		subi r24,-38
 5396 2244 9F4E      		sbci r25,-17
 5397 2246 292F      		mov r18,r25
 5398 2248 2F93      		push r18
 5399 224a 8F93      		push r24
 5400 224c 8E81      		ldd r24,Y+6
 5401 224e 8F93      		push r24
 5402 2250 8D81      		ldd r24,Y+5
 5403 2252 8F93      		push r24
 5404 2254 80E0      		ldi r24,lo8(.LC40)
 5405 2256 90E0      		ldi r25,hi8(.LC40)
 5406 2258 892F      		mov r24,r25
 5407 225a 8F93      		push r24
 5408 225c 80E0      		ldi r24,lo8(.LC40)
 5409 225e 90E0      		ldi r25,hi8(.LC40)
 5410 2260 8F93      		push r24
 5411 2262 1F92      		push __zero_reg__
 5412 2264 83E0      		ldi r24,lo8(3)
 5413 2266 8F93      		push r24
 5414 2268 8E89      		ldd r24,Y+22
 5415 226a 8F93      		push r24
 5416 226c 8D89      		ldd r24,Y+21
 5417 226e 8F93      		push r24
 5418 2270 0E94 0000 		call report
 5419 2274 EDB7      		in r30,__SP_L__
 5420 2276 FEB7      		in r31,__SP_H__
 5421 2278 3A96      		adiw r30,10
 5422 227a 0FB6      		in __tmp_reg__,__SREG__
 5423 227c F894      		cli
 5424 227e DEBF      		out __SP_H__,r29
 5425 2280 0FBE      		out __SREG__,__tmp_reg__
 5426 2282 CDBF      		out __SP_L__,r28
 672:lp_solve_5.5/lp_MPS.c ****           break;
 5427               		.loc 1 672 0
 5428 2284 0C94 0000 		jmp .L157
 5429               	.L171:
 673:lp_solve_5.5/lp_MPS.c ****         }
 674:lp_solve_5.5/lp_MPS.c **** 
 675:lp_solve_5.5/lp_MPS.c ****         switch(section) {
 5430               		.loc 1 675 0
 5431 2288 8F81      		ldd r24,Y+7
 5432 228a 9885      		ldd r25,Y+8
 5433 228c 092E      		mov __tmp_reg__,r25
 5434 228e 000C      		lsl r0
 5435 2290 AA0B      		sbc r26,r26
 5436 2292 BB0B      		sbc r27,r27
 5437 2294 4DEF      		ldi r20,lo8(-3)
 5438 2296 5FEF      		ldi r21,lo8(-1)
 5439 2298 28E0      		ldi r18,lo8(8)
 5440 229a 30E0      		ldi r19,0
 5441 229c 841B      		sub r24,r20
 5442 229e 950B      		sbc r25,r21
 5443 22a0 2817      		cp r18,r24
 5444 22a2 3907      		cpc r19,r25
 5445 22a4 00F4      		brsh .+4
 5446 22a6 0C94 0000 		jmp .L172
 5447 22aa 8050      		subi r24,lo8(-(gs(.L174)))
 5448 22ac 9040      		sbci r25,hi8(-(gs(.L174)))
 5449 22ae FC01      		movw r30,r24
 5450 22b0 0C94 0000 		jmp __tablejump2__
 5451               		.section	.progmem.gcc_sw_table,"a",@progbits
 5452               		.p2align	1
 5453               	.L174:
 5454 0000 0000      		.word gs(.L173)
 5455 0002 0000      		.word gs(.L175)
 5456 0004 0000      		.word gs(.L176)
 5457 0006 0000      		.word gs(.L177)
 5458 0008 0000      		.word gs(.L178)
 5459 000a 0000      		.word gs(.L179)
 5460 000c 0000      		.word gs(.L180)
 5461 000e 0000      		.word gs(.L181)
 5462 0010 0000      		.word gs(.L182)
 5463               		.text
 5464               	.L173:
 676:lp_solve_5.5/lp_MPS.c **** 
 677:lp_solve_5.5/lp_MPS.c ****         case MPSNAME:
 678:lp_solve_5.5/lp_MPS.c ****           report(lp, IMPORTANT, "Error, extra line under NAME line\n");
 5465               		.loc 1 678 0
 5466 22b4 80E0      		ldi r24,lo8(.LC41)
 5467 22b6 90E0      		ldi r25,hi8(.LC41)
 5468 22b8 892F      		mov r24,r25
 5469 22ba 8F93      		push r24
 5470 22bc 80E0      		ldi r24,lo8(.LC41)
 5471 22be 90E0      		ldi r25,hi8(.LC41)
 5472 22c0 8F93      		push r24
 5473 22c2 1F92      		push __zero_reg__
 5474 22c4 83E0      		ldi r24,lo8(3)
 5475 22c6 8F93      		push r24
 5476 22c8 8E89      		ldd r24,Y+22
 5477 22ca 8F93      		push r24
 5478 22cc 8D89      		ldd r24,Y+21
 5479 22ce 8F93      		push r24
 5480 22d0 0E94 0000 		call report
 5481 22d4 0F90      		pop __tmp_reg__
 5482 22d6 0F90      		pop __tmp_reg__
 5483 22d8 0F90      		pop __tmp_reg__
 5484 22da 0F90      		pop __tmp_reg__
 5485 22dc 0F90      		pop __tmp_reg__
 5486 22de 0F90      		pop __tmp_reg__
 679:lp_solve_5.5/lp_MPS.c ****           break;
 5487               		.loc 1 679 0
 5488 22e0 0C94 0000 		jmp .L172
 5489               	.L175:
 680:lp_solve_5.5/lp_MPS.c **** 
 681:lp_solve_5.5/lp_MPS.c ****         case MPSOBJSENSE:
 682:lp_solve_5.5/lp_MPS.c ****           if(OBJSENSE != ROWTYPE_EMPTY) {
 5490               		.loc 1 682 0
 5491 22e4 8B89      		ldd r24,Y+19
 5492 22e6 9C89      		ldd r25,Y+20
 5493 22e8 892B      		or r24,r25
 5494 22ea 01F0      		breq .L183
 683:lp_solve_5.5/lp_MPS.c ****             report(lp, IMPORTANT, "Error, extra line under OBJSENSE line\n");
 5495               		.loc 1 683 0
 5496 22ec 80E0      		ldi r24,lo8(.LC42)
 5497 22ee 90E0      		ldi r25,hi8(.LC42)
 5498 22f0 892F      		mov r24,r25
 5499 22f2 8F93      		push r24
 5500 22f4 80E0      		ldi r24,lo8(.LC42)
 5501 22f6 90E0      		ldi r25,hi8(.LC42)
 5502 22f8 8F93      		push r24
 5503 22fa 1F92      		push __zero_reg__
 5504 22fc 83E0      		ldi r24,lo8(3)
 5505 22fe 8F93      		push r24
 5506 2300 8E89      		ldd r24,Y+22
 5507 2302 8F93      		push r24
 5508 2304 8D89      		ldd r24,Y+21
 5509 2306 8F93      		push r24
 5510 2308 0E94 0000 		call report
 5511 230c 0F90      		pop __tmp_reg__
 5512 230e 0F90      		pop __tmp_reg__
 5513 2310 0F90      		pop __tmp_reg__
 5514 2312 0F90      		pop __tmp_reg__
 5515 2314 0F90      		pop __tmp_reg__
 5516 2316 0F90      		pop __tmp_reg__
 684:lp_solve_5.5/lp_MPS.c ****             break;
 5517               		.loc 1 684 0
 5518 2318 0C94 0000 		jmp .L172
 5519               	.L183:
 685:lp_solve_5.5/lp_MPS.c ****           }
 686:lp_solve_5.5/lp_MPS.c ****           if((strcmp(field1, "MAXIMIZE") == 0) || (strcmp(field1, "MAX") == 0)) {
 5520               		.loc 1 686 0
 5521 231c CE01      		movw r24,r28
 5522 231e 8696      		adiw r24,38
 5523 2320 60E0      		ldi r22,lo8(.LC43)
 5524 2322 70E0      		ldi r23,hi8(.LC43)
 5525 2324 0E94 0000 		call strcmp
 5526 2328 892B      		or r24,r25
 5527 232a 01F0      		breq .L184
 5528               		.loc 1 686 0 is_stmt 0 discriminator 1
 5529 232c CE01      		movw r24,r28
 5530 232e 8696      		adiw r24,38
 5531 2330 60E0      		ldi r22,lo8(.LC44)
 5532 2332 70E0      		ldi r23,hi8(.LC44)
 5533 2334 0E94 0000 		call strcmp
 5534 2338 892B      		or r24,r25
 5535 233a 01F4      		brne .L185
 5536               	.L184:
 687:lp_solve_5.5/lp_MPS.c ****             OBJSENSE = ROWTYPE_OFMAX;
 5537               		.loc 1 687 0 is_stmt 1
 5538 233c 86E0      		ldi r24,lo8(6)
 5539 233e 90E0      		ldi r25,0
 5540 2340 9C8B      		std Y+20,r25
 5541 2342 8B8B      		std Y+19,r24
 688:lp_solve_5.5/lp_MPS.c ****             set_maxim(lp);
 5542               		.loc 1 688 0
 5543 2344 8D89      		ldd r24,Y+21
 5544 2346 9E89      		ldd r25,Y+22
 5545 2348 0E94 0000 		call set_maxim
 5546 234c 00C0      		rjmp .L186
 5547               	.L185:
 689:lp_solve_5.5/lp_MPS.c ****           }
 690:lp_solve_5.5/lp_MPS.c ****           else if((strcmp(field1, "MINIMIZE") == 0) || (strcmp(field1, "MIN") == 0)) {
 5548               		.loc 1 690 0
 5549 234e CE01      		movw r24,r28
 5550 2350 8696      		adiw r24,38
 5551 2352 60E0      		ldi r22,lo8(.LC45)
 5552 2354 70E0      		ldi r23,hi8(.LC45)
 5553 2356 0E94 0000 		call strcmp
 5554 235a 892B      		or r24,r25
 5555 235c 01F0      		breq .L187
 5556               		.loc 1 690 0 is_stmt 0 discriminator 1
 5557 235e CE01      		movw r24,r28
 5558 2360 8696      		adiw r24,38
 5559 2362 60E0      		ldi r22,lo8(.LC46)
 5560 2364 70E0      		ldi r23,hi8(.LC46)
 5561 2366 0E94 0000 		call strcmp
 5562 236a 892B      		or r24,r25
 5563 236c 01F4      		brne .L188
 5564               	.L187:
 691:lp_solve_5.5/lp_MPS.c ****             OBJSENSE = ROWTYPE_OFMIN;
 5565               		.loc 1 691 0 is_stmt 1
 5566 236e 85E0      		ldi r24,lo8(5)
 5567 2370 90E0      		ldi r25,0
 5568 2372 9C8B      		std Y+20,r25
 5569 2374 8B8B      		std Y+19,r24
 692:lp_solve_5.5/lp_MPS.c ****             set_minim(lp);
 5570               		.loc 1 692 0
 5571 2376 8D89      		ldd r24,Y+21
 5572 2378 9E89      		ldd r25,Y+22
 5573 237a 0E94 0000 		call set_minim
 5574 237e 00C0      		rjmp .L186
 5575               	.L188:
 693:lp_solve_5.5/lp_MPS.c ****           }
 694:lp_solve_5.5/lp_MPS.c ****           else {
 695:lp_solve_5.5/lp_MPS.c ****             report(lp, SEVERE, "Unknown OBJSENSE direction '%s' on line %d\n", field1, Lineno);
 5576               		.loc 1 695 0
 5577 2380 8E81      		ldd r24,Y+6
 5578 2382 8F93      		push r24
 5579 2384 8D81      		ldd r24,Y+5
 5580 2386 8F93      		push r24
 5581 2388 CE01      		movw r24,r28
 5582 238a 8696      		adiw r24,38
 5583 238c 292F      		mov r18,r25
 5584 238e 2F93      		push r18
 5585 2390 8F93      		push r24
 5586 2392 80E0      		ldi r24,lo8(.LC47)
 5587 2394 90E0      		ldi r25,hi8(.LC47)
 5588 2396 892F      		mov r24,r25
 5589 2398 8F93      		push r24
 5590 239a 80E0      		ldi r24,lo8(.LC47)
 5591 239c 90E0      		ldi r25,hi8(.LC47)
 5592 239e 8F93      		push r24
 5593 23a0 1F92      		push __zero_reg__
 5594 23a2 82E0      		ldi r24,lo8(2)
 5595 23a4 8F93      		push r24
 5596 23a6 8E89      		ldd r24,Y+22
 5597 23a8 8F93      		push r24
 5598 23aa 8D89      		ldd r24,Y+21
 5599 23ac 8F93      		push r24
 5600 23ae 0E94 0000 		call report
 5601 23b2 2DB7      		in r18,__SP_L__
 5602 23b4 3EB7      		in r19,__SP_H__
 5603 23b6 265F      		subi r18,-10
 5604 23b8 3F4F      		sbci r19,-1
 5605 23ba 0FB6      		in __tmp_reg__,__SREG__
 5606 23bc F894      		cli
 5607 23be DEBF      		out __SP_H__,r29
 5608 23c0 0FBE      		out __SREG__,__tmp_reg__
 5609 23c2 CDBF      		out __SP_L__,r28
 696:lp_solve_5.5/lp_MPS.c ****             break;
 5610               		.loc 1 696 0
 5611 23c4 0C94 0000 		jmp .L172
 5612               	.L186:
 697:lp_solve_5.5/lp_MPS.c ****           }
 698:lp_solve_5.5/lp_MPS.c ****           continue;
 5613               		.loc 1 698 0
 5614 23c8 0C94 0000 		jmp .L148
 5615               	.L176:
 699:lp_solve_5.5/lp_MPS.c **** 
 700:lp_solve_5.5/lp_MPS.c ****         case MPSOBJNAME:
 701:lp_solve_5.5/lp_MPS.c ****           if(*OBJNAME) {
 5616               		.loc 1 701 0
 5617 23cc CE01      		movw r24,r28
 5618 23ce 8A5D      		subi r24,-38
 5619 23d0 9F4D      		sbci r25,-33
 5620 23d2 DC01      		movw r26,r24
 5621 23d4 8C91      		ld r24,X
 5622 23d6 8823      		tst r24
 5623 23d8 01F0      		breq .L189
 702:lp_solve_5.5/lp_MPS.c ****             report(lp, IMPORTANT, "Error, extra line under OBJNAME line\n");
 5624               		.loc 1 702 0
 5625 23da 80E0      		ldi r24,lo8(.LC48)
 5626 23dc 90E0      		ldi r25,hi8(.LC48)
 5627 23de 892F      		mov r24,r25
 5628 23e0 8F93      		push r24
 5629 23e2 80E0      		ldi r24,lo8(.LC48)
 5630 23e4 90E0      		ldi r25,hi8(.LC48)
 5631 23e6 8F93      		push r24
 5632 23e8 1F92      		push __zero_reg__
 5633 23ea 83E0      		ldi r24,lo8(3)
 5634 23ec 8F93      		push r24
 5635 23ee 8E89      		ldd r24,Y+22
 5636 23f0 8F93      		push r24
 5637 23f2 8D89      		ldd r24,Y+21
 5638 23f4 8F93      		push r24
 5639 23f6 0E94 0000 		call report
 5640 23fa 0F90      		pop __tmp_reg__
 5641 23fc 0F90      		pop __tmp_reg__
 5642 23fe 0F90      		pop __tmp_reg__
 5643 2400 0F90      		pop __tmp_reg__
 5644 2402 0F90      		pop __tmp_reg__
 5645 2404 0F90      		pop __tmp_reg__
 703:lp_solve_5.5/lp_MPS.c ****             break;
 5646               		.loc 1 703 0
 5647 2406 0C94 0000 		jmp .L172
 5648               	.L189:
 704:lp_solve_5.5/lp_MPS.c ****           }
 705:lp_solve_5.5/lp_MPS.c ****           strcpy(OBJNAME, field1);
 5649               		.loc 1 705 0
 5650 240a 9E01      		movw r18,r28
 5651 240c 2A5D      		subi r18,-38
 5652 240e 3F4F      		sbci r19,-1
 5653 2410 CE01      		movw r24,r28
 5654 2412 8A5D      		subi r24,-38
 5655 2414 9F4D      		sbci r25,-33
 5656 2416 B901      		movw r22,r18
 5657 2418 0E94 0000 		call strcpy
 706:lp_solve_5.5/lp_MPS.c ****           continue;
 5658               		.loc 1 706 0
 5659 241c 0C94 0000 		jmp .L148
 5660               	.L177:
 707:lp_solve_5.5/lp_MPS.c **** 
 708:lp_solve_5.5/lp_MPS.c ****         /* Process entries in the ROWS section */
 709:lp_solve_5.5/lp_MPS.c ****         case MPSROWS:
 710:lp_solve_5.5/lp_MPS.c ****           /* field1: rel. operator; field2: name of constraint */
 711:lp_solve_5.5/lp_MPS.c **** 
 712:lp_solve_5.5/lp_MPS.c ****           report(lp, FULL, "Row   %5d: %s %s\n", lp->rows + 1, field1, field2);
 5661               		.loc 1 712 0
 5662 2420 8D89      		ldd r24,Y+21
 5663 2422 9E89      		ldd r25,Y+22
 5664 2424 8651      		subi r24,22
 5665 2426 9E4F      		sbci r25,-2
 5666 2428 FC01      		movw r30,r24
 5667 242a 8081      		ld r24,Z
 5668 242c 9181      		ldd r25,Z+1
 5669 242e 0196      		adiw r24,1
 5670 2430 9E01      		movw r18,r28
 5671 2432 2A5D      		subi r18,-38
 5672 2434 3B4F      		sbci r19,-5
 5673 2436 432F      		mov r20,r19
 5674 2438 4F93      		push r20
 5675 243a 2F93      		push r18
 5676 243c 9E01      		movw r18,r28
 5677 243e 2A5D      		subi r18,-38
 5678 2440 3F4F      		sbci r19,-1
 5679 2442 432F      		mov r20,r19
 5680 2444 4F93      		push r20
 5681 2446 2F93      		push r18
 5682 2448 292F      		mov r18,r25
 5683 244a 2F93      		push r18
 5684 244c 8F93      		push r24
 5685 244e 80E0      		ldi r24,lo8(.LC49)
 5686 2450 90E0      		ldi r25,hi8(.LC49)
 5687 2452 892F      		mov r24,r25
 5688 2454 8F93      		push r24
 5689 2456 80E0      		ldi r24,lo8(.LC49)
 5690 2458 90E0      		ldi r25,hi8(.LC49)
 5691 245a 8F93      		push r24
 5692 245c 1F92      		push __zero_reg__
 5693 245e 86E0      		ldi r24,lo8(6)
 5694 2460 8F93      		push r24
 5695 2462 8E89      		ldd r24,Y+22
 5696 2464 8F93      		push r24
 5697 2466 8D89      		ldd r24,Y+21
 5698 2468 8F93      		push r24
 5699 246a 0E94 0000 		call report
 5700 246e 2DB7      		in r18,__SP_L__
 5701 2470 3EB7      		in r19,__SP_H__
 5702 2472 245F      		subi r18,-12
 5703 2474 3F4F      		sbci r19,-1
 5704 2476 0FB6      		in __tmp_reg__,__SREG__
 5705 2478 F894      		cli
 5706 247a DEBF      		out __SP_H__,r29
 5707 247c 0FBE      		out __SREG__,__tmp_reg__
 5708 247e CDBF      		out __SP_L__,r28
 713:lp_solve_5.5/lp_MPS.c **** 
 714:lp_solve_5.5/lp_MPS.c ****           if(strcmp(field1, "N") == 0) {
 5709               		.loc 1 714 0
 5710 2480 CE01      		movw r24,r28
 5711 2482 8696      		adiw r24,38
 5712 2484 60E0      		ldi r22,lo8(.LC50)
 5713 2486 70E0      		ldi r23,hi8(.LC50)
 5714 2488 0E94 0000 		call strcmp
 5715 248c 892B      		or r24,r25
 5716 248e 01F0      		breq .+2
 5717 2490 00C0      		rjmp .L190
 715:lp_solve_5.5/lp_MPS.c ****             if((*OBJNAME) && (strcmp(field2, OBJNAME)))
 5718               		.loc 1 715 0
 5719 2492 CE01      		movw r24,r28
 5720 2494 8A5D      		subi r24,-38
 5721 2496 9F4D      		sbci r25,-33
 5722 2498 DC01      		movw r26,r24
 5723 249a 8C91      		ld r24,X
 5724 249c 8823      		tst r24
 5725 249e 01F0      		breq .L191
 5726               		.loc 1 715 0 is_stmt 0 discriminator 1
 5727 24a0 9E01      		movw r18,r28
 5728 24a2 2A5D      		subi r18,-38
 5729 24a4 3F4D      		sbci r19,-33
 5730 24a6 CE01      		movw r24,r28
 5731 24a8 8A5D      		subi r24,-38
 5732 24aa 9B4F      		sbci r25,-5
 5733 24ac B901      		movw r22,r18
 5734 24ae 0E94 0000 		call strcmp
 5735 24b2 892B      		or r24,r25
 5736 24b4 01F0      		breq .+2
 5737 24b6 00C0      		rjmp .L195
 5738               	.L191:
 716:lp_solve_5.5/lp_MPS.c ****               /* Ignore this objective name since it is not equal to the OBJNAME name */;
 717:lp_solve_5.5/lp_MPS.c ****             else if(!OF_found) { /* take the first N row as OF, ignore others */
 5739               		.loc 1 717 0 is_stmt 1
 5740 24b8 8989      		ldd r24,Y+17
 5741 24ba 8823      		tst r24
 5742 24bc 01F4      		brne .L193
 718:lp_solve_5.5/lp_MPS.c ****               if (!set_row_name(lp, 0, field2))
 5743               		.loc 1 718 0
 5744 24be 9E01      		movw r18,r28
 5745 24c0 2A5D      		subi r18,-38
 5746 24c2 3B4F      		sbci r19,-5
 5747 24c4 8D89      		ldd r24,Y+21
 5748 24c6 9E89      		ldd r25,Y+22
 5749 24c8 A901      		movw r20,r18
 5750 24ca 60E0      		ldi r22,0
 5751 24cc 70E0      		ldi r23,0
 5752 24ce 0E94 0000 		call set_row_name
 5753 24d2 8823      		tst r24
 5754 24d4 01F4      		brne .+4
 5755 24d6 0C94 0000 		jmp .L350
 719:lp_solve_5.5/lp_MPS.c ****                 break;
 720:lp_solve_5.5/lp_MPS.c ****               OF_found = TRUE;
 5756               		.loc 1 720 0
 5757 24da 81E0      		ldi r24,lo8(1)
 5758 24dc 898B      		std Y+17,r24
 5759 24de 0C94 0000 		jmp .L148
 5760               	.L193:
 721:lp_solve_5.5/lp_MPS.c ****             }
 722:lp_solve_5.5/lp_MPS.c ****             else if(!Unconstrained_rows_found) {
 5761               		.loc 1 722 0
 5762 24e2 8889      		ldd r24,Y+16
 5763 24e4 8823      		tst r24
 5764 24e6 01F0      		breq .+4
 5765 24e8 0C94 0000 		jmp .L148
 723:lp_solve_5.5/lp_MPS.c ****               report(lp, IMPORTANT, "Unconstrained row %s ignored\n", field2);
 5766               		.loc 1 723 0
 5767 24ec CE01      		movw r24,r28
 5768 24ee 8A5D      		subi r24,-38
 5769 24f0 9B4F      		sbci r25,-5
 5770 24f2 292F      		mov r18,r25
 5771 24f4 2F93      		push r18
 5772 24f6 8F93      		push r24
 5773 24f8 80E0      		ldi r24,lo8(.LC51)
 5774 24fa 90E0      		ldi r25,hi8(.LC51)
 5775 24fc 892F      		mov r24,r25
 5776 24fe 8F93      		push r24
 5777 2500 80E0      		ldi r24,lo8(.LC51)
 5778 2502 90E0      		ldi r25,hi8(.LC51)
 5779 2504 8F93      		push r24
 5780 2506 1F92      		push __zero_reg__
 5781 2508 83E0      		ldi r24,lo8(3)
 5782 250a 8F93      		push r24
 5783 250c 8E89      		ldd r24,Y+22
 5784 250e 8F93      		push r24
 5785 2510 8D89      		ldd r24,Y+21
 5786 2512 8F93      		push r24
 5787 2514 0E94 0000 		call report
 5788 2518 EDB7      		in r30,__SP_L__
 5789 251a FEB7      		in r31,__SP_H__
 5790 251c 3896      		adiw r30,8
 5791 251e 0FB6      		in __tmp_reg__,__SREG__
 5792 2520 F894      		cli
 5793 2522 DEBF      		out __SP_H__,r29
 5794 2524 0FBE      		out __SREG__,__tmp_reg__
 5795 2526 CDBF      		out __SP_L__,r28
 724:lp_solve_5.5/lp_MPS.c ****               report(lp, IMPORTANT, "Further messages of this kind will be suppressed\n");
 5796               		.loc 1 724 0
 5797 2528 80E0      		ldi r24,lo8(.LC52)
 5798 252a 90E0      		ldi r25,hi8(.LC52)
 5799 252c 892F      		mov r24,r25
 5800 252e 8F93      		push r24
 5801 2530 80E0      		ldi r24,lo8(.LC52)
 5802 2532 90E0      		ldi r25,hi8(.LC52)
 5803 2534 8F93      		push r24
 5804 2536 1F92      		push __zero_reg__
 5805 2538 83E0      		ldi r24,lo8(3)
 5806 253a 8F93      		push r24
 5807 253c 8E89      		ldd r24,Y+22
 5808 253e 8F93      		push r24
 5809 2540 8D89      		ldd r24,Y+21
 5810 2542 8F93      		push r24
 5811 2544 0E94 0000 		call report
 5812 2548 0F90      		pop __tmp_reg__
 5813 254a 0F90      		pop __tmp_reg__
 5814 254c 0F90      		pop __tmp_reg__
 5815 254e 0F90      		pop __tmp_reg__
 5816 2550 0F90      		pop __tmp_reg__
 5817 2552 0F90      		pop __tmp_reg__
 725:lp_solve_5.5/lp_MPS.c ****               Unconstrained_rows_found = TRUE;
 5818               		.loc 1 725 0
 5819 2554 81E0      		ldi r24,lo8(1)
 5820 2556 888B      		std Y+16,r24
 5821 2558 0C94 0000 		jmp .L148
 5822               	.L190:
 726:lp_solve_5.5/lp_MPS.c ****             }
 727:lp_solve_5.5/lp_MPS.c ****           }
 728:lp_solve_5.5/lp_MPS.c ****           else if(strcmp(field1, "L") == 0) {
 5823               		.loc 1 728 0
 5824 255c CE01      		movw r24,r28
 5825 255e 8696      		adiw r24,38
 5826 2560 60E0      		ldi r22,lo8(.LC53)
 5827 2562 70E0      		ldi r23,hi8(.LC53)
 5828 2564 0E94 0000 		call strcmp
 5829 2568 892B      		or r24,r25
 5830 256a 01F4      		brne .L196
 729:lp_solve_5.5/lp_MPS.c ****             if ((!str_add_constraint(lp, "" ,LE ,0)) || (!set_row_name(lp, lp->rows, field2)))
 5831               		.loc 1 729 0
 5832 256c 8D89      		ldd r24,Y+21
 5833 256e 9E89      		ldd r25,Y+22
 5834 2570 00E0      		ldi r16,0
 5835 2572 10E0      		ldi r17,0
 5836 2574 9801      		movw r18,r16
 5837 2576 41E0      		ldi r20,lo8(1)
 5838 2578 50E0      		ldi r21,0
 5839 257a 60E0      		ldi r22,lo8(.LC15)
 5840 257c 70E0      		ldi r23,hi8(.LC15)
 5841 257e 0E94 0000 		call str_add_constraint
 5842 2582 8823      		tst r24
 5843 2584 01F4      		brne .+4
 5844 2586 0C94 0000 		jmp .L172
 5845               		.loc 1 729 0 is_stmt 0 discriminator 1
 5846 258a 8D89      		ldd r24,Y+21
 5847 258c 9E89      		ldd r25,Y+22
 5848 258e 8651      		subi r24,22
 5849 2590 9E4F      		sbci r25,-2
 5850 2592 DC01      		movw r26,r24
 5851 2594 2D91      		ld r18,X+
 5852 2596 3C91      		ld r19,X
 5853 2598 AE01      		movw r20,r28
 5854 259a 4A5D      		subi r20,-38
 5855 259c 5B4F      		sbci r21,-5
 5856 259e 8D89      		ldd r24,Y+21
 5857 25a0 9E89      		ldd r25,Y+22
 5858 25a2 B901      		movw r22,r18
 5859 25a4 0E94 0000 		call set_row_name
 5860 25a8 8823      		tst r24
 5861 25aa 01F4      		brne .+4
 5862 25ac 0C94 0000 		jmp .L172
 5863 25b0 0C94 0000 		jmp .L148
 5864               	.L196:
 730:lp_solve_5.5/lp_MPS.c ****               break;
 731:lp_solve_5.5/lp_MPS.c ****           }
 732:lp_solve_5.5/lp_MPS.c ****           else if(strcmp(field1, "G") == 0) {
 5865               		.loc 1 732 0 is_stmt 1
 5866 25b4 CE01      		movw r24,r28
 5867 25b6 8696      		adiw r24,38
 5868 25b8 60E0      		ldi r22,lo8(.LC54)
 5869 25ba 70E0      		ldi r23,hi8(.LC54)
 5870 25bc 0E94 0000 		call strcmp
 5871 25c0 892B      		or r24,r25
 5872 25c2 01F4      		brne .L197
 733:lp_solve_5.5/lp_MPS.c ****             if ((!str_add_constraint(lp, "" ,GE ,0)) || (!set_row_name(lp, lp->rows, field2)))
 5873               		.loc 1 733 0
 5874 25c4 8D89      		ldd r24,Y+21
 5875 25c6 9E89      		ldd r25,Y+22
 5876 25c8 00E0      		ldi r16,0
 5877 25ca 10E0      		ldi r17,0
 5878 25cc 9801      		movw r18,r16
 5879 25ce 42E0      		ldi r20,lo8(2)
 5880 25d0 50E0      		ldi r21,0
 5881 25d2 60E0      		ldi r22,lo8(.LC15)
 5882 25d4 70E0      		ldi r23,hi8(.LC15)
 5883 25d6 0E94 0000 		call str_add_constraint
 5884 25da 8823      		tst r24
 5885 25dc 01F4      		brne .+4
 5886 25de 0C94 0000 		jmp .L172
 5887               		.loc 1 733 0 is_stmt 0 discriminator 1
 5888 25e2 8D89      		ldd r24,Y+21
 5889 25e4 9E89      		ldd r25,Y+22
 5890 25e6 8651      		subi r24,22
 5891 25e8 9E4F      		sbci r25,-2
 5892 25ea FC01      		movw r30,r24
 5893 25ec 2081      		ld r18,Z
 5894 25ee 3181      		ldd r19,Z+1
 5895 25f0 AE01      		movw r20,r28
 5896 25f2 4A5D      		subi r20,-38
 5897 25f4 5B4F      		sbci r21,-5
 5898 25f6 8D89      		ldd r24,Y+21
 5899 25f8 9E89      		ldd r25,Y+22
 5900 25fa B901      		movw r22,r18
 5901 25fc 0E94 0000 		call set_row_name
 5902 2600 8823      		tst r24
 5903 2602 01F4      		brne .+4
 5904 2604 0C94 0000 		jmp .L172
 5905 2608 0C94 0000 		jmp .L148
 5906               	.L197:
 734:lp_solve_5.5/lp_MPS.c ****               break;
 735:lp_solve_5.5/lp_MPS.c ****           }
 736:lp_solve_5.5/lp_MPS.c ****           else if(strcmp(field1, "E") == 0) {
 5907               		.loc 1 736 0 is_stmt 1
 5908 260c CE01      		movw r24,r28
 5909 260e 8696      		adiw r24,38
 5910 2610 60E0      		ldi r22,lo8(.LC55)
 5911 2612 70E0      		ldi r23,hi8(.LC55)
 5912 2614 0E94 0000 		call strcmp
 5913 2618 892B      		or r24,r25
 5914 261a 01F4      		brne .L198
 737:lp_solve_5.5/lp_MPS.c ****             if ((!str_add_constraint(lp, "",EQ ,0)) || (!set_row_name(lp, lp->rows, field2)))
 5915               		.loc 1 737 0
 5916 261c 8D89      		ldd r24,Y+21
 5917 261e 9E89      		ldd r25,Y+22
 5918 2620 00E0      		ldi r16,0
 5919 2622 10E0      		ldi r17,0
 5920 2624 9801      		movw r18,r16
 5921 2626 43E0      		ldi r20,lo8(3)
 5922 2628 50E0      		ldi r21,0
 5923 262a 60E0      		ldi r22,lo8(.LC15)
 5924 262c 70E0      		ldi r23,hi8(.LC15)
 5925 262e 0E94 0000 		call str_add_constraint
 5926 2632 8823      		tst r24
 5927 2634 01F4      		brne .+4
 5928 2636 0C94 0000 		jmp .L172
 5929               		.loc 1 737 0 is_stmt 0 discriminator 1
 5930 263a 8D89      		ldd r24,Y+21
 5931 263c 9E89      		ldd r25,Y+22
 5932 263e 8651      		subi r24,22
 5933 2640 9E4F      		sbci r25,-2
 5934 2642 DC01      		movw r26,r24
 5935 2644 2D91      		ld r18,X+
 5936 2646 3C91      		ld r19,X
 5937 2648 AE01      		movw r20,r28
 5938 264a 4A5D      		subi r20,-38
 5939 264c 5B4F      		sbci r21,-5
 5940 264e 8D89      		ldd r24,Y+21
 5941 2650 9E89      		ldd r25,Y+22
 5942 2652 B901      		movw r22,r18
 5943 2654 0E94 0000 		call set_row_name
 5944 2658 8823      		tst r24
 5945 265a 01F4      		brne .+4
 5946 265c 0C94 0000 		jmp .L172
 5947 2660 0C94 0000 		jmp .L148
 5948               	.L198:
 738:lp_solve_5.5/lp_MPS.c ****               break;
 739:lp_solve_5.5/lp_MPS.c ****           }
 740:lp_solve_5.5/lp_MPS.c ****           else {
 741:lp_solve_5.5/lp_MPS.c ****             report(lp, SEVERE, "Unknown relation code '%s' on line %d\n", field1, Lineno);
 5949               		.loc 1 741 0 is_stmt 1
 5950 2664 8E81      		ldd r24,Y+6
 5951 2666 8F93      		push r24
 5952 2668 8D81      		ldd r24,Y+5
 5953 266a 8F93      		push r24
 5954 266c CE01      		movw r24,r28
 5955 266e 8696      		adiw r24,38
 5956 2670 292F      		mov r18,r25
 5957 2672 2F93      		push r18
 5958 2674 8F93      		push r24
 5959 2676 80E0      		ldi r24,lo8(.LC56)
 5960 2678 90E0      		ldi r25,hi8(.LC56)
 5961 267a 892F      		mov r24,r25
 5962 267c 8F93      		push r24
 5963 267e 80E0      		ldi r24,lo8(.LC56)
 5964 2680 90E0      		ldi r25,hi8(.LC56)
 5965 2682 8F93      		push r24
 5966 2684 1F92      		push __zero_reg__
 5967 2686 82E0      		ldi r24,lo8(2)
 5968 2688 8F93      		push r24
 5969 268a 8E89      		ldd r24,Y+22
 5970 268c 8F93      		push r24
 5971 268e 8D89      		ldd r24,Y+21
 5972 2690 8F93      		push r24
 5973 2692 0E94 0000 		call report
 5974 2696 EDB7      		in r30,__SP_L__
 5975 2698 FEB7      		in r31,__SP_H__
 5976 269a 3A96      		adiw r30,10
 5977 269c 0FB6      		in __tmp_reg__,__SREG__
 5978 269e F894      		cli
 5979 26a0 DEBF      		out __SP_H__,r29
 5980 26a2 0FBE      		out __SREG__,__tmp_reg__
 5981 26a4 CDBF      		out __SP_L__,r28
 742:lp_solve_5.5/lp_MPS.c ****             break;
 5982               		.loc 1 742 0
 5983 26a6 0C94 0000 		jmp .L172
 5984               	.L195:
 743:lp_solve_5.5/lp_MPS.c ****           }
 744:lp_solve_5.5/lp_MPS.c **** 
 745:lp_solve_5.5/lp_MPS.c ****           continue;
 5985               		.loc 1 745 0
 5986 26aa 0C94 0000 		jmp .L148
 5987               	.L178:
 746:lp_solve_5.5/lp_MPS.c **** 
 747:lp_solve_5.5/lp_MPS.c ****         /* Process entries in the COLUMNS section */
 748:lp_solve_5.5/lp_MPS.c ****         case MPSCOLUMNS:
 749:lp_solve_5.5/lp_MPS.c ****           /* field2: variable; field3: constraint; field4: coef */
 750:lp_solve_5.5/lp_MPS.c ****           /* optional: field5: constraint; field6: coef */
 751:lp_solve_5.5/lp_MPS.c **** 
 752:lp_solve_5.5/lp_MPS.c ****           report(lp, FULL, "Column %4d: %s %s %g %s %g\n",
 5988               		.loc 1 752 0
 5989 26ae CE01      		movw r24,r28
 5990 26b0 835D      		subi r24,-45
 5991 26b2 9B4D      		sbci r25,-37
 5992 26b4 DC01      		movw r26,r24
 5993 26b6 2D91      		ld r18,X+
 5994 26b8 3D91      		ld r19,X+
 5995 26ba 4D91      		ld r20,X+
 5996 26bc 5C91      		ld r21,X
 5997 26be CE01      		movw r24,r28
 5998 26c0 875D      		subi r24,-41
 5999 26c2 9B4D      		sbci r25,-37
 6000 26c4 FC01      		movw r30,r24
 6001 26c6 8081      		ld r24,Z
 6002 26c8 9181      		ldd r25,Z+1
 6003 26ca A281      		ldd r26,Z+2
 6004 26cc B381      		ldd r27,Z+3
 753:lp_solve_5.5/lp_MPS.c ****                             lp->columns + 1, field2, field3, field4, field5, field6);
 6005               		.loc 1 753 0
 6006 26ce 6D89      		ldd r22,Y+21
 6007 26d0 7E89      		ldd r23,Y+22
 6008 26d2 6451      		subi r22,20
 6009 26d4 7E4F      		sbci r23,-2
 6010 26d6 FB01      		movw r30,r22
 6011 26d8 6081      		ld r22,Z
 6012 26da 7181      		ldd r23,Z+1
 752:lp_solve_5.5/lp_MPS.c ****                             lp->columns + 1, field2, field3, field4, field5, field6);
 6013               		.loc 1 752 0
 6014 26dc 6F5F      		subi r22,-1
 6015 26de 7F4F      		sbci r23,-1
 6016 26e0 E52F      		mov r30,r21
 6017 26e2 EF93      		push r30
 6018 26e4 E42F      		mov r30,r20
 6019 26e6 EF93      		push r30
 6020 26e8 E32F      		mov r30,r19
 6021 26ea EF93      		push r30
 6022 26ec 2F93      		push r18
 6023 26ee 9E01      		movw r18,r28
 6024 26f0 2A5D      		subi r18,-38
 6025 26f2 334F      		sbci r19,-13
 6026 26f4 432F      		mov r20,r19
 6027 26f6 4F93      		push r20
 6028 26f8 2F93      		push r18
 6029 26fa 2B2F      		mov r18,r27
 6030 26fc 2F93      		push r18
 6031 26fe 2A2F      		mov r18,r26
 6032 2700 2F93      		push r18
 6033 2702 292F      		mov r18,r25
 6034 2704 2F93      		push r18
 6035 2706 8F93      		push r24
 6036 2708 CE01      		movw r24,r28
 6037 270a 8A5D      		subi r24,-38
 6038 270c 974F      		sbci r25,-9
 6039 270e 292F      		mov r18,r25
 6040 2710 2F93      		push r18
 6041 2712 8F93      		push r24
 6042 2714 CE01      		movw r24,r28
 6043 2716 8A5D      		subi r24,-38
 6044 2718 9B4F      		sbci r25,-5
 6045 271a 292F      		mov r18,r25
 6046 271c 2F93      		push r18
 6047 271e 8F93      		push r24
 6048 2720 872F      		mov r24,r23
 6049 2722 8F93      		push r24
 6050 2724 862F      		mov r24,r22
 6051 2726 8F93      		push r24
 6052 2728 80E0      		ldi r24,lo8(.LC57)
 6053 272a 90E0      		ldi r25,hi8(.LC57)
 6054 272c 892F      		mov r24,r25
 6055 272e 8F93      		push r24
 6056 2730 80E0      		ldi r24,lo8(.LC57)
 6057 2732 90E0      		ldi r25,hi8(.LC57)
 6058 2734 8F93      		push r24
 6059 2736 1F92      		push __zero_reg__
 6060 2738 86E0      		ldi r24,lo8(6)
 6061 273a 8F93      		push r24
 6062 273c 8E89      		ldd r24,Y+22
 6063 273e 8F93      		push r24
 6064 2740 8D89      		ldd r24,Y+21
 6065 2742 8F93      		push r24
 6066 2744 0E94 0000 		call report
 6067 2748 2DB7      		in r18,__SP_L__
 6068 274a 3EB7      		in r19,__SP_H__
 6069 274c 2A5E      		subi r18,-22
 6070 274e 3F4F      		sbci r19,-1
 6071 2750 0FB6      		in __tmp_reg__,__SREG__
 6072 2752 F894      		cli
 6073 2754 DEBF      		out __SP_H__,r29
 6074 2756 0FBE      		out __SREG__,__tmp_reg__
 6075 2758 CDBF      		out __SP_L__,r28
 754:lp_solve_5.5/lp_MPS.c **** 
 755:lp_solve_5.5/lp_MPS.c ****           if((items == 4) || (items == 5) || (items == 6)) {
 6076               		.loc 1 755 0
 6077 275a 8B81      		ldd r24,Y+3
 6078 275c 9C81      		ldd r25,Y+4
 6079 275e 0497      		sbiw r24,4
 6080 2760 01F0      		breq .L199
 6081               		.loc 1 755 0 is_stmt 0 discriminator 1
 6082 2762 8B81      		ldd r24,Y+3
 6083 2764 9C81      		ldd r25,Y+4
 6084 2766 0597      		sbiw r24,5
 6085 2768 01F0      		breq .L199
 6086               		.loc 1 755 0 discriminator 2
 6087 276a 8B81      		ldd r24,Y+3
 6088 276c 9C81      		ldd r25,Y+4
 6089 276e 0697      		sbiw r24,6
 6090 2770 01F0      		breq .+2
 6091 2772 00C0      		rjmp .L200
 6092               	.L199:
 756:lp_solve_5.5/lp_MPS.c ****             if (NZ == 0)
 6093               		.loc 1 756 0 is_stmt 1
 6094 2774 8B85      		ldd r24,Y+11
 6095 2776 9C85      		ldd r25,Y+12
 6096 2778 892B      		or r24,r25
 6097 277a 01F4      		brne .L201
 757:lp_solve_5.5/lp_MPS.c ****               strcpy(Last_col_name, field2);
 6098               		.loc 1 757 0
 6099 277c 9E01      		movw r18,r28
 6100 277e 2A5D      		subi r18,-38
 6101 2780 3B4F      		sbci r19,-5
 6102 2782 CE01      		movw r24,r28
 6103 2784 8A5D      		subi r24,-38
 6104 2786 974E      		sbci r25,-25
 6105 2788 B901      		movw r22,r18
 6106 278a 0E94 0000 		call strcpy
 6107 278e 00C0      		rjmp .L202
 6108               	.L201:
 758:lp_solve_5.5/lp_MPS.c ****             else if(*field2) {
 6109               		.loc 1 758 0
 6110 2790 CE01      		movw r24,r28
 6111 2792 8A5D      		subi r24,-38
 6112 2794 9B4F      		sbci r25,-5
 6113 2796 DC01      		movw r26,r24
 6114 2798 8C91      		ld r24,X
 6115 279a 8823      		tst r24
 6116 279c 01F4      		brne .+2
 6117 279e 00C0      		rjmp .L202
 759:lp_solve_5.5/lp_MPS.c ****               Column_ready1 = (MYBOOL) (strcmp(field2, Last_col_name) != 0);
 6118               		.loc 1 759 0
 6119 27a0 9E01      		movw r18,r28
 6120 27a2 2A5D      		subi r18,-38
 6121 27a4 374E      		sbci r19,-25
 6122 27a6 CE01      		movw r24,r28
 6123 27a8 8A5D      		subi r24,-38
 6124 27aa 9B4F      		sbci r25,-5
 6125 27ac B901      		movw r22,r18
 6126 27ae 0E94 0000 		call strcmp
 6127 27b2 21E0      		ldi r18,lo8(1)
 6128 27b4 892B      		or r24,r25
 6129 27b6 01F4      		brne .L203
 6130 27b8 20E0      		ldi r18,0
 6131               	.L203:
 6132 27ba 29A3      		std Y+33,r18
 760:lp_solve_5.5/lp_MPS.c ****               if(Column_ready1) {
 6133               		.loc 1 760 0
 6134 27bc 89A1      		ldd r24,Y+33
 6135 27be 8823      		tst r24
 6136 27c0 01F4      		brne .+2
 6137 27c2 00C0      		rjmp .L202
 761:lp_solve_5.5/lp_MPS.c ****                 if (find_var(lp, field2, FALSE) >= 0) {
 6138               		.loc 1 761 0
 6139 27c4 9E01      		movw r18,r28
 6140 27c6 2A5D      		subi r18,-38
 6141 27c8 3B4F      		sbci r19,-5
 6142 27ca 8D89      		ldd r24,Y+21
 6143 27cc 9E89      		ldd r25,Y+22
 6144 27ce 40E0      		ldi r20,0
 6145 27d0 B901      		movw r22,r18
 6146 27d2 0E94 0000 		call find_var
 6147 27d6 9923      		tst r25
 6148 27d8 04F0      		brlt .L204
 762:lp_solve_5.5/lp_MPS.c ****                   report(lp, SEVERE, "Variable name (%s) is already used!\n", field2);
 6149               		.loc 1 762 0
 6150 27da CE01      		movw r24,r28
 6151 27dc 8A5D      		subi r24,-38
 6152 27de 9B4F      		sbci r25,-5
 6153 27e0 292F      		mov r18,r25
 6154 27e2 2F93      		push r18
 6155 27e4 8F93      		push r24
 6156 27e6 80E0      		ldi r24,lo8(.LC58)
 6157 27e8 90E0      		ldi r25,hi8(.LC58)
 6158 27ea 892F      		mov r24,r25
 6159 27ec 8F93      		push r24
 6160 27ee 80E0      		ldi r24,lo8(.LC58)
 6161 27f0 90E0      		ldi r25,hi8(.LC58)
 6162 27f2 8F93      		push r24
 6163 27f4 1F92      		push __zero_reg__
 6164 27f6 82E0      		ldi r24,lo8(2)
 6165 27f8 8F93      		push r24
 6166 27fa 8E89      		ldd r24,Y+22
 6167 27fc 8F93      		push r24
 6168 27fe 8D89      		ldd r24,Y+21
 6169 2800 8F93      		push r24
 6170 2802 0E94 0000 		call report
 6171 2806 EDB7      		in r30,__SP_L__
 6172 2808 FEB7      		in r31,__SP_H__
 6173 280a 3896      		adiw r30,8
 6174 280c 0FB6      		in __tmp_reg__,__SREG__
 6175 280e F894      		cli
 6176 2810 DEBF      		out __SP_H__,r29
 6177 2812 0FBE      		out __SREG__,__tmp_reg__
 6178 2814 CDBF      		out __SP_L__,r28
 763:lp_solve_5.5/lp_MPS.c ****                   break;
 6179               		.loc 1 763 0
 6180 2816 0C94 0000 		jmp .L172
 6181               	.L204:
 764:lp_solve_5.5/lp_MPS.c ****                 }
 765:lp_solve_5.5/lp_MPS.c **** 
 766:lp_solve_5.5/lp_MPS.c ****                 if(Column_ready) {  /* Added ability to handle non-standard "same as above" column 
 6182               		.loc 1 766 0
 6183 281a CE01      		movw r24,r28
 6184 281c 885D      		subi r24,-40
 6185 281e 9B4D      		sbci r25,-37
 6186 2820 DC01      		movw r26,r24
 6187 2822 8C91      		ld r24,X
 6188 2824 8823      		tst r24
 6189 2826 01F4      		brne .+2
 6190 2828 00C0      		rjmp .L202
 767:lp_solve_5.5/lp_MPS.c ****                   if (addmpscolumn(lp, Int_section, typeMPS, &Column_ready, &count, Last_column, La
 6191               		.loc 1 767 0
 6192 282a CE01      		movw r24,r28
 6193 282c 8B5C      		subi r24,-53
 6194 282e 9B4D      		sbci r25,-37
 6195 2830 FC01      		movw r30,r24
 6196 2832 A081      		ld r26,Z
 6197 2834 B181      		ldd r27,Z+1
 6198 2836 CE01      		movw r24,r28
 6199 2838 8F5C      		subi r24,-49
 6200 283a 9B4D      		sbci r25,-37
 6201 283c FC01      		movw r30,r24
 6202 283e 0190      		ld __tmp_reg__,Z+
 6203 2840 F081      		ld r31,Z
 6204 2842 E02D      		mov r30,__tmp_reg__
 6205 2844 CF5B      		subi r28,lo8(-9281)
 6206 2846 DB4D      		sbci r29,hi8(-9281)
 6207 2848 F983      		std Y+1,r31
 6208 284a E883      		st Y,r30
 6209 284c C154      		subi r28,lo8(9281)
 6210 284e D442      		sbci r29,hi8(9281)
 6211 2850 8E01      		movw r16,r28
 6212 2852 0A5D      		subi r16,-38
 6213 2854 174E      		sbci r17,-25
 6214 2856 BE01      		movw r22,r28
 6215 2858 6D5C      		subi r22,-51
 6216 285a 7B4D      		sbci r23,-37
 6217 285c 9E01      		movw r18,r28
 6218 285e 285D      		subi r18,-40
 6219 2860 3B4D      		sbci r19,-37
 6220 2862 CE01      		movw r24,r28
 6221 2864 835C      		subi r24,-61
 6222 2866 9B4D      		sbci r25,-37
 6223 2868 FC01      		movw r30,r24
 6224 286a 4081      		ld r20,Z
 6225 286c 5181      		ldd r21,Z+1
 6226 286e 8D89      		ldd r24,Y+21
 6227 2870 9E89      		ldd r25,Y+22
 6228 2872 5801      		movw r10,r16
 6229 2874 6D01      		movw r12,r26
 6230 2876 CF5B      		subi r28,lo8(-9281)
 6231 2878 DB4D      		sbci r29,hi8(-9281)
 6232 287a E880      		ld r14,Y
 6233 287c F980      		ldd r15,Y+1
 6234 287e C154      		subi r28,lo8(9281)
 6235 2880 D442      		sbci r29,hi8(9281)
 6236 2882 8B01      		movw r16,r22
 6237 2884 6F85      		ldd r22,Y+15
 6238 2886 0E94 0000 		call addmpscolumn
 6239 288a 892B      		or r24,r25
 6240 288c 01F4      		brne .+4
 6241 288e 0C94 0000 		jmp .L351
 768:lp_solve_5.5/lp_MPS.c ****                     strcpy(Last_col_name, field2);
 6242               		.loc 1 768 0
 6243 2892 9E01      		movw r18,r28
 6244 2894 2A5D      		subi r18,-38
 6245 2896 3B4F      		sbci r19,-5
 6246 2898 CE01      		movw r24,r28
 6247 289a 8A5D      		subi r24,-38
 6248 289c 974E      		sbci r25,-25
 6249 289e B901      		movw r22,r18
 6250 28a0 0E94 0000 		call strcpy
 769:lp_solve_5.5/lp_MPS.c ****                     NZ = 0;
 6251               		.loc 1 769 0
 6252 28a4 1C86      		std Y+12,__zero_reg__
 6253 28a6 1B86      		std Y+11,__zero_reg__
 6254               	.L202:
 770:lp_solve_5.5/lp_MPS.c ****                   }
 771:lp_solve_5.5/lp_MPS.c ****                   else
 772:lp_solve_5.5/lp_MPS.c ****                     break;
 773:lp_solve_5.5/lp_MPS.c ****                 }
 774:lp_solve_5.5/lp_MPS.c ****               }
 775:lp_solve_5.5/lp_MPS.c ****             }
 776:lp_solve_5.5/lp_MPS.c ****             if(items == 5) { /* there might be an INTEND or INTORG marker */
 6255               		.loc 1 776 0
 6256 28a8 8B81      		ldd r24,Y+3
 6257 28aa 9C81      		ldd r25,Y+4
 6258 28ac 0597      		sbiw r24,5
 6259 28ae 01F0      		breq .+2
 6260 28b0 00C0      		rjmp .L206
 777:lp_solve_5.5/lp_MPS.c ****              /* look for "    <name>  'MARKER'                 'INTORG'"
 778:lp_solve_5.5/lp_MPS.c ****                       or "    <name>  'MARKER'                 'INTEND'"  */
 779:lp_solve_5.5/lp_MPS.c ****               if(strcmp(field3, "'MARKER'") != 0)
 6261               		.loc 1 779 0
 6262 28b2 CE01      		movw r24,r28
 6263 28b4 8A5D      		subi r24,-38
 6264 28b6 974F      		sbci r25,-9
 6265 28b8 60E0      		ldi r22,lo8(.LC8)
 6266 28ba 70E0      		ldi r23,hi8(.LC8)
 6267 28bc 0E94 0000 		call strcmp
 6268 28c0 892B      		or r24,r25
 6269 28c2 01F0      		breq .+4
 6270 28c4 0C94 0000 		jmp .L352
 780:lp_solve_5.5/lp_MPS.c ****                 break;
 781:lp_solve_5.5/lp_MPS.c ****               if(strcmp(field5, "'INTORG'") == 0) {
 6271               		.loc 1 781 0
 6272 28c8 CE01      		movw r24,r28
 6273 28ca 8A5D      		subi r24,-38
 6274 28cc 934F      		sbci r25,-13
 6275 28ce 60E0      		ldi r22,lo8(.LC59)
 6276 28d0 70E0      		ldi r23,hi8(.LC59)
 6277 28d2 0E94 0000 		call strcmp
 6278 28d6 892B      		or r24,r25
 6279 28d8 01F4      		brne .L208
 782:lp_solve_5.5/lp_MPS.c ****                 Int_section = TRUE;
 6280               		.loc 1 782 0
 6281 28da 81E0      		ldi r24,lo8(1)
 6282 28dc 8F87      		std Y+15,r24
 783:lp_solve_5.5/lp_MPS.c ****                 report(lp, FULL, "Switching to integer section\n");
 6283               		.loc 1 783 0
 6284 28de 80E0      		ldi r24,lo8(.LC60)
 6285 28e0 90E0      		ldi r25,hi8(.LC60)
 6286 28e2 892F      		mov r24,r25
 6287 28e4 8F93      		push r24
 6288 28e6 80E0      		ldi r24,lo8(.LC60)
 6289 28e8 90E0      		ldi r25,hi8(.LC60)
 6290 28ea 8F93      		push r24
 6291 28ec 1F92      		push __zero_reg__
 6292 28ee 86E0      		ldi r24,lo8(6)
 6293 28f0 8F93      		push r24
 6294 28f2 8E89      		ldd r24,Y+22
 6295 28f4 8F93      		push r24
 6296 28f6 8D89      		ldd r24,Y+21
 6297 28f8 8F93      		push r24
 6298 28fa 0E94 0000 		call report
 6299 28fe 0F90      		pop __tmp_reg__
 6300 2900 0F90      		pop __tmp_reg__
 6301 2902 0F90      		pop __tmp_reg__
 6302 2904 0F90      		pop __tmp_reg__
 6303 2906 0F90      		pop __tmp_reg__
 6304 2908 0F90      		pop __tmp_reg__
 6305 290a 00C0      		rjmp .L200
 6306               	.L208:
 784:lp_solve_5.5/lp_MPS.c ****               }
 785:lp_solve_5.5/lp_MPS.c ****               else if(strcmp(field5, "'INTEND'") == 0) {
 6307               		.loc 1 785 0
 6308 290c CE01      		movw r24,r28
 6309 290e 8A5D      		subi r24,-38
 6310 2910 934F      		sbci r25,-13
 6311 2912 60E0      		ldi r22,lo8(.LC61)
 6312 2914 70E0      		ldi r23,hi8(.LC61)
 6313 2916 0E94 0000 		call strcmp
 6314 291a 892B      		or r24,r25
 6315 291c 01F4      		brne .L210
 786:lp_solve_5.5/lp_MPS.c ****                 Int_section = FALSE;
 6316               		.loc 1 786 0
 6317 291e 1F86      		std Y+15,__zero_reg__
 787:lp_solve_5.5/lp_MPS.c ****                 report(lp, FULL, "Switching to non-integer section\n");
 6318               		.loc 1 787 0
 6319 2920 80E0      		ldi r24,lo8(.LC62)
 6320 2922 90E0      		ldi r25,hi8(.LC62)
 6321 2924 892F      		mov r24,r25
 6322 2926 8F93      		push r24
 6323 2928 80E0      		ldi r24,lo8(.LC62)
 6324 292a 90E0      		ldi r25,hi8(.LC62)
 6325 292c 8F93      		push r24
 6326 292e 1F92      		push __zero_reg__
 6327 2930 86E0      		ldi r24,lo8(6)
 6328 2932 8F93      		push r24
 6329 2934 8E89      		ldd r24,Y+22
 6330 2936 8F93      		push r24
 6331 2938 8D89      		ldd r24,Y+21
 6332 293a 8F93      		push r24
 6333 293c 0E94 0000 		call report
 6334 2940 0F90      		pop __tmp_reg__
 6335 2942 0F90      		pop __tmp_reg__
 6336 2944 0F90      		pop __tmp_reg__
 6337 2946 0F90      		pop __tmp_reg__
 6338 2948 0F90      		pop __tmp_reg__
 6339 294a 0F90      		pop __tmp_reg__
 6340 294c 00C0      		rjmp .L200
 6341               	.L210:
 788:lp_solve_5.5/lp_MPS.c ****               }
 789:lp_solve_5.5/lp_MPS.c ****               else
 790:lp_solve_5.5/lp_MPS.c ****                 report(lp, IMPORTANT, "Unknown marker (ignored) at line %d: %s\n",
 6342               		.loc 1 790 0
 6343 294e CE01      		movw r24,r28
 6344 2950 8A5D      		subi r24,-38
 6345 2952 934F      		sbci r25,-13
 6346 2954 292F      		mov r18,r25
 6347 2956 2F93      		push r18
 6348 2958 8F93      		push r24
 6349 295a 8E81      		ldd r24,Y+6
 6350 295c 8F93      		push r24
 6351 295e 8D81      		ldd r24,Y+5
 6352 2960 8F93      		push r24
 6353 2962 80E0      		ldi r24,lo8(.LC63)
 6354 2964 90E0      		ldi r25,hi8(.LC63)
 6355 2966 892F      		mov r24,r25
 6356 2968 8F93      		push r24
 6357 296a 80E0      		ldi r24,lo8(.LC63)
 6358 296c 90E0      		ldi r25,hi8(.LC63)
 6359 296e 8F93      		push r24
 6360 2970 1F92      		push __zero_reg__
 6361 2972 83E0      		ldi r24,lo8(3)
 6362 2974 8F93      		push r24
 6363 2976 8E89      		ldd r24,Y+22
 6364 2978 8F93      		push r24
 6365 297a 8D89      		ldd r24,Y+21
 6366 297c 8F93      		push r24
 6367 297e 0E94 0000 		call report
 6368 2982 2DB7      		in r18,__SP_L__
 6369 2984 3EB7      		in r19,__SP_H__
 6370 2986 265F      		subi r18,-10
 6371 2988 3F4F      		sbci r19,-1
 6372 298a 0FB6      		in __tmp_reg__,__SREG__
 6373 298c F894      		cli
 6374 298e DEBF      		out __SP_H__,r29
 6375 2990 0FBE      		out __SREG__,__tmp_reg__
 6376 2992 CDBF      		out __SP_L__,r28
 6377 2994 00C0      		rjmp .L200
 6378               	.L206:
 791:lp_solve_5.5/lp_MPS.c ****                                        Lineno, field5);
 792:lp_solve_5.5/lp_MPS.c ****             }
 793:lp_solve_5.5/lp_MPS.c ****             else if((row = find_row(lp, field3, Unconstrained_rows_found)) >= 0) {
 6379               		.loc 1 793 0
 6380 2996 9E01      		movw r18,r28
 6381 2998 2A5D      		subi r18,-38
 6382 299a 374F      		sbci r19,-9
 6383 299c 8D89      		ldd r24,Y+21
 6384 299e 9E89      		ldd r25,Y+22
 6385 29a0 4889      		ldd r20,Y+16
 6386 29a2 B901      		movw r22,r18
 6387 29a4 0E94 0000 		call find_row
 6388 29a8 9BA3      		std Y+35,r25
 6389 29aa 8AA3      		std Y+34,r24
 6390 29ac 8AA1      		ldd r24,Y+34
 6391 29ae 9BA1      		ldd r25,Y+35
 6392 29b0 9923      		tst r25
 6393 29b2 04F4      		brge .+2
 6394 29b4 00C0      		rjmp .L200
 794:lp_solve_5.5/lp_MPS.c ****               if(row > lp->rows)
 6395               		.loc 1 794 0
 6396 29b6 8D89      		ldd r24,Y+21
 6397 29b8 9E89      		ldd r25,Y+22
 6398 29ba 8651      		subi r24,22
 6399 29bc 9E4F      		sbci r25,-2
 6400 29be DC01      		movw r26,r24
 6401 29c0 2D91      		ld r18,X+
 6402 29c2 3C91      		ld r19,X
 6403 29c4 8AA1      		ldd r24,Y+34
 6404 29c6 9BA1      		ldd r25,Y+35
 6405 29c8 2817      		cp r18,r24
 6406 29ca 3907      		cpc r19,r25
 6407 29cc 04F4      		brge .L211
 795:lp_solve_5.5/lp_MPS.c ****                 report(lp, CRITICAL, "Invalid row %s encountered in the MPS file\n", field3);
 6408               		.loc 1 795 0
 6409 29ce CE01      		movw r24,r28
 6410 29d0 8A5D      		subi r24,-38
 6411 29d2 974F      		sbci r25,-9
 6412 29d4 292F      		mov r18,r25
 6413 29d6 2F93      		push r18
 6414 29d8 8F93      		push r24
 6415 29da 80E0      		ldi r24,lo8(.LC64)
 6416 29dc 90E0      		ldi r25,hi8(.LC64)
 6417 29de 892F      		mov r24,r25
 6418 29e0 8F93      		push r24
 6419 29e2 80E0      		ldi r24,lo8(.LC64)
 6420 29e4 90E0      		ldi r25,hi8(.LC64)
 6421 29e6 8F93      		push r24
 6422 29e8 1F92      		push __zero_reg__
 6423 29ea 81E0      		ldi r24,lo8(1)
 6424 29ec 8F93      		push r24
 6425 29ee 8E89      		ldd r24,Y+22
 6426 29f0 8F93      		push r24
 6427 29f2 8D89      		ldd r24,Y+21
 6428 29f4 8F93      		push r24
 6429 29f6 0E94 0000 		call report
 6430 29fa EDB7      		in r30,__SP_L__
 6431 29fc FEB7      		in r31,__SP_H__
 6432 29fe 3896      		adiw r30,8
 6433 2a00 0FB6      		in __tmp_reg__,__SREG__
 6434 2a02 F894      		cli
 6435 2a04 DEBF      		out __SP_H__,r29
 6436 2a06 0FBE      		out __SREG__,__tmp_reg__
 6437 2a08 CDBF      		out __SP_L__,r28
 6438               	.L211:
 796:lp_solve_5.5/lp_MPS.c ****               Last_columnno[count] = row;
 6439               		.loc 1 796 0
 6440 2a0a CE01      		movw r24,r28
 6441 2a0c 8B5C      		subi r24,-53
 6442 2a0e 9B4D      		sbci r25,-37
 6443 2a10 DC01      		movw r26,r24
 6444 2a12 2D91      		ld r18,X+
 6445 2a14 3C91      		ld r19,X
 6446 2a16 CE01      		movw r24,r28
 6447 2a18 8D5C      		subi r24,-51
 6448 2a1a 9B4D      		sbci r25,-37
 6449 2a1c FC01      		movw r30,r24
 6450 2a1e 8081      		ld r24,Z
 6451 2a20 9181      		ldd r25,Z+1
 6452 2a22 880F      		lsl r24
 6453 2a24 991F      		rol r25
 6454 2a26 820F      		add r24,r18
 6455 2a28 931F      		adc r25,r19
 6456 2a2a 2AA1      		ldd r18,Y+34
 6457 2a2c 3BA1      		ldd r19,Y+35
 6458 2a2e DC01      		movw r26,r24
 6459 2a30 2D93      		st X+,r18
 6460 2a32 3C93      		st X,r19
 797:lp_solve_5.5/lp_MPS.c ****               Last_column[count] = (REAL)field4;
 6461               		.loc 1 797 0
 6462 2a34 CE01      		movw r24,r28
 6463 2a36 8F5C      		subi r24,-49
 6464 2a38 9B4D      		sbci r25,-37
 6465 2a3a FC01      		movw r30,r24
 6466 2a3c 2081      		ld r18,Z
 6467 2a3e 3181      		ldd r19,Z+1
 6468 2a40 CE01      		movw r24,r28
 6469 2a42 8D5C      		subi r24,-51
 6470 2a44 9B4D      		sbci r25,-37
 6471 2a46 DC01      		movw r26,r24
 6472 2a48 8D91      		ld r24,X+
 6473 2a4a 9C91      		ld r25,X
 6474 2a4c 880F      		lsl r24
 6475 2a4e 991F      		rol r25
 6476 2a50 880F      		lsl r24
 6477 2a52 991F      		rol r25
 6478 2a54 280F      		add r18,r24
 6479 2a56 391F      		adc r19,r25
 6480 2a58 CE01      		movw r24,r28
 6481 2a5a 875D      		subi r24,-41
 6482 2a5c 9B4D      		sbci r25,-37
 6483 2a5e FC01      		movw r30,r24
 6484 2a60 8081      		ld r24,Z
 6485 2a62 9181      		ldd r25,Z+1
 6486 2a64 A281      		ldd r26,Z+2
 6487 2a66 B381      		ldd r27,Z+3
 6488 2a68 F901      		movw r30,r18
 6489 2a6a 8083      		st Z,r24
 6490 2a6c 9183      		std Z+1,r25
 6491 2a6e A283      		std Z+2,r26
 6492 2a70 B383      		std Z+3,r27
 798:lp_solve_5.5/lp_MPS.c ****               if(appendmpsitem(&count, Last_columnno, Last_column)) {
 6493               		.loc 1 798 0
 6494 2a72 CE01      		movw r24,r28
 6495 2a74 8F5C      		subi r24,-49
 6496 2a76 9B4D      		sbci r25,-37
 6497 2a78 DC01      		movw r26,r24
 6498 2a7a 4D91      		ld r20,X+
 6499 2a7c 5C91      		ld r21,X
 6500 2a7e CE01      		movw r24,r28
 6501 2a80 8B5C      		subi r24,-53
 6502 2a82 9B4D      		sbci r25,-37
 6503 2a84 FC01      		movw r30,r24
 6504 2a86 2081      		ld r18,Z
 6505 2a88 3181      		ldd r19,Z+1
 6506 2a8a CE01      		movw r24,r28
 6507 2a8c 8D5C      		subi r24,-51
 6508 2a8e 9B4D      		sbci r25,-37
 6509 2a90 B901      		movw r22,r18
 6510 2a92 0E94 0000 		call appendmpsitem
 6511 2a96 8823      		tst r24
 6512 2a98 01F0      		breq .L200
 799:lp_solve_5.5/lp_MPS.c ****                 NZ++;
 6513               		.loc 1 799 0
 6514 2a9a 8B85      		ldd r24,Y+11
 6515 2a9c 9C85      		ldd r25,Y+12
 6516 2a9e 0196      		adiw r24,1
 6517 2aa0 9C87      		std Y+12,r25
 6518 2aa2 8B87      		std Y+11,r24
 800:lp_solve_5.5/lp_MPS.c ****                 Column_ready = TRUE;
 6519               		.loc 1 800 0
 6520 2aa4 CE01      		movw r24,r28
 6521 2aa6 885D      		subi r24,-40
 6522 2aa8 9B4D      		sbci r25,-37
 6523 2aaa 21E0      		ldi r18,lo8(1)
 6524 2aac DC01      		movw r26,r24
 6525 2aae 2C93      		st X,r18
 6526               	.L200:
 801:lp_solve_5.5/lp_MPS.c ****               }
 802:lp_solve_5.5/lp_MPS.c ****             }
 803:lp_solve_5.5/lp_MPS.c ****           }
 804:lp_solve_5.5/lp_MPS.c ****           if(items == 6) {
 6527               		.loc 1 804 0
 6528 2ab0 8B81      		ldd r24,Y+3
 6529 2ab2 9C81      		ldd r25,Y+4
 6530 2ab4 0697      		sbiw r24,6
 6531 2ab6 01F0      		breq .+2
 6532 2ab8 00C0      		rjmp .L212
 805:lp_solve_5.5/lp_MPS.c ****             if((row = find_row(lp, field5, Unconstrained_rows_found)) >= 0) {
 6533               		.loc 1 805 0
 6534 2aba 9E01      		movw r18,r28
 6535 2abc 2A5D      		subi r18,-38
 6536 2abe 334F      		sbci r19,-13
 6537 2ac0 8D89      		ldd r24,Y+21
 6538 2ac2 9E89      		ldd r25,Y+22
 6539 2ac4 4889      		ldd r20,Y+16
 6540 2ac6 B901      		movw r22,r18
 6541 2ac8 0E94 0000 		call find_row
 6542 2acc 9BA3      		std Y+35,r25
 6543 2ace 8AA3      		std Y+34,r24
 6544 2ad0 8AA1      		ldd r24,Y+34
 6545 2ad2 9BA1      		ldd r25,Y+35
 6546 2ad4 9923      		tst r25
 6547 2ad6 04F4      		brge .+2
 6548 2ad8 00C0      		rjmp .L212
 806:lp_solve_5.5/lp_MPS.c ****               if(row > lp->rows)
 6549               		.loc 1 806 0
 6550 2ada 8D89      		ldd r24,Y+21
 6551 2adc 9E89      		ldd r25,Y+22
 6552 2ade 8651      		subi r24,22
 6553 2ae0 9E4F      		sbci r25,-2
 6554 2ae2 FC01      		movw r30,r24
 6555 2ae4 2081      		ld r18,Z
 6556 2ae6 3181      		ldd r19,Z+1
 6557 2ae8 8AA1      		ldd r24,Y+34
 6558 2aea 9BA1      		ldd r25,Y+35
 6559 2aec 2817      		cp r18,r24
 6560 2aee 3907      		cpc r19,r25
 6561 2af0 04F4      		brge .L213
 807:lp_solve_5.5/lp_MPS.c ****                 report(lp, CRITICAL, "Invalid row %s encountered in the MPS file\n", field5);
 6562               		.loc 1 807 0
 6563 2af2 CE01      		movw r24,r28
 6564 2af4 8A5D      		subi r24,-38
 6565 2af6 934F      		sbci r25,-13
 6566 2af8 292F      		mov r18,r25
 6567 2afa 2F93      		push r18
 6568 2afc 8F93      		push r24
 6569 2afe 80E0      		ldi r24,lo8(.LC64)
 6570 2b00 90E0      		ldi r25,hi8(.LC64)
 6571 2b02 892F      		mov r24,r25
 6572 2b04 8F93      		push r24
 6573 2b06 80E0      		ldi r24,lo8(.LC64)
 6574 2b08 90E0      		ldi r25,hi8(.LC64)
 6575 2b0a 8F93      		push r24
 6576 2b0c 1F92      		push __zero_reg__
 6577 2b0e 81E0      		ldi r24,lo8(1)
 6578 2b10 8F93      		push r24
 6579 2b12 8E89      		ldd r24,Y+22
 6580 2b14 8F93      		push r24
 6581 2b16 8D89      		ldd r24,Y+21
 6582 2b18 8F93      		push r24
 6583 2b1a 0E94 0000 		call report
 6584 2b1e 2DB7      		in r18,__SP_L__
 6585 2b20 3EB7      		in r19,__SP_H__
 6586 2b22 285F      		subi r18,-8
 6587 2b24 3F4F      		sbci r19,-1
 6588 2b26 0FB6      		in __tmp_reg__,__SREG__
 6589 2b28 F894      		cli
 6590 2b2a DEBF      		out __SP_H__,r29
 6591 2b2c 0FBE      		out __SREG__,__tmp_reg__
 6592 2b2e CDBF      		out __SP_L__,r28
 6593               	.L213:
 808:lp_solve_5.5/lp_MPS.c ****               Last_columnno[count] = row;
 6594               		.loc 1 808 0
 6595 2b30 CE01      		movw r24,r28
 6596 2b32 8B5C      		subi r24,-53
 6597 2b34 9B4D      		sbci r25,-37
 6598 2b36 DC01      		movw r26,r24
 6599 2b38 2D91      		ld r18,X+
 6600 2b3a 3C91      		ld r19,X
 6601 2b3c CE01      		movw r24,r28
 6602 2b3e 8D5C      		subi r24,-51
 6603 2b40 9B4D      		sbci r25,-37
 6604 2b42 FC01      		movw r30,r24
 6605 2b44 8081      		ld r24,Z
 6606 2b46 9181      		ldd r25,Z+1
 6607 2b48 880F      		lsl r24
 6608 2b4a 991F      		rol r25
 6609 2b4c 820F      		add r24,r18
 6610 2b4e 931F      		adc r25,r19
 6611 2b50 2AA1      		ldd r18,Y+34
 6612 2b52 3BA1      		ldd r19,Y+35
 6613 2b54 DC01      		movw r26,r24
 6614 2b56 2D93      		st X+,r18
 6615 2b58 3C93      		st X,r19
 809:lp_solve_5.5/lp_MPS.c ****               Last_column[count] = (REAL)field6;
 6616               		.loc 1 809 0
 6617 2b5a CE01      		movw r24,r28
 6618 2b5c 8F5C      		subi r24,-49
 6619 2b5e 9B4D      		sbci r25,-37
 6620 2b60 FC01      		movw r30,r24
 6621 2b62 2081      		ld r18,Z
 6622 2b64 3181      		ldd r19,Z+1
 6623 2b66 CE01      		movw r24,r28
 6624 2b68 8D5C      		subi r24,-51
 6625 2b6a 9B4D      		sbci r25,-37
 6626 2b6c DC01      		movw r26,r24
 6627 2b6e 8D91      		ld r24,X+
 6628 2b70 9C91      		ld r25,X
 6629 2b72 880F      		lsl r24
 6630 2b74 991F      		rol r25
 6631 2b76 880F      		lsl r24
 6632 2b78 991F      		rol r25
 6633 2b7a 280F      		add r18,r24
 6634 2b7c 391F      		adc r19,r25
 6635 2b7e CE01      		movw r24,r28
 6636 2b80 835D      		subi r24,-45
 6637 2b82 9B4D      		sbci r25,-37
 6638 2b84 FC01      		movw r30,r24
 6639 2b86 8081      		ld r24,Z
 6640 2b88 9181      		ldd r25,Z+1
 6641 2b8a A281      		ldd r26,Z+2
 6642 2b8c B381      		ldd r27,Z+3
 6643 2b8e F901      		movw r30,r18
 6644 2b90 8083      		st Z,r24
 6645 2b92 9183      		std Z+1,r25
 6646 2b94 A283      		std Z+2,r26
 6647 2b96 B383      		std Z+3,r27
 810:lp_solve_5.5/lp_MPS.c ****               if(appendmpsitem(&count, Last_columnno, Last_column)) {
 6648               		.loc 1 810 0
 6649 2b98 CE01      		movw r24,r28
 6650 2b9a 8F5C      		subi r24,-49
 6651 2b9c 9B4D      		sbci r25,-37
 6652 2b9e DC01      		movw r26,r24
 6653 2ba0 4D91      		ld r20,X+
 6654 2ba2 5C91      		ld r21,X
 6655 2ba4 CE01      		movw r24,r28
 6656 2ba6 8B5C      		subi r24,-53
 6657 2ba8 9B4D      		sbci r25,-37
 6658 2baa FC01      		movw r30,r24
 6659 2bac 2081      		ld r18,Z
 6660 2bae 3181      		ldd r19,Z+1
 6661 2bb0 CE01      		movw r24,r28
 6662 2bb2 8D5C      		subi r24,-51
 6663 2bb4 9B4D      		sbci r25,-37
 6664 2bb6 B901      		movw r22,r18
 6665 2bb8 0E94 0000 		call appendmpsitem
 6666 2bbc 8823      		tst r24
 6667 2bbe 01F0      		breq .L212
 811:lp_solve_5.5/lp_MPS.c ****                 NZ++;
 6668               		.loc 1 811 0
 6669 2bc0 8B85      		ldd r24,Y+11
 6670 2bc2 9C85      		ldd r25,Y+12
 6671 2bc4 0196      		adiw r24,1
 6672 2bc6 9C87      		std Y+12,r25
 6673 2bc8 8B87      		std Y+11,r24
 812:lp_solve_5.5/lp_MPS.c ****                 Column_ready = TRUE;
 6674               		.loc 1 812 0
 6675 2bca CE01      		movw r24,r28
 6676 2bcc 885D      		subi r24,-40
 6677 2bce 9B4D      		sbci r25,-37
 6678 2bd0 21E0      		ldi r18,lo8(1)
 6679 2bd2 DC01      		movw r26,r24
 6680 2bd4 2C93      		st X,r18
 6681               	.L212:
 813:lp_solve_5.5/lp_MPS.c ****               }
 814:lp_solve_5.5/lp_MPS.c ****             }
 815:lp_solve_5.5/lp_MPS.c ****           }
 816:lp_solve_5.5/lp_MPS.c **** 
 817:lp_solve_5.5/lp_MPS.c ****           if((items < 4) || (items > 6)) { /* Wrong! */
 6682               		.loc 1 817 0
 6683 2bd6 8B81      		ldd r24,Y+3
 6684 2bd8 9C81      		ldd r25,Y+4
 6685 2bda 0497      		sbiw r24,4
 6686 2bdc 04F0      		brlt .L214
 6687               		.loc 1 817 0 is_stmt 0 discriminator 1
 6688 2bde 8B81      		ldd r24,Y+3
 6689 2be0 9C81      		ldd r25,Y+4
 6690 2be2 0797      		sbiw r24,7
 6691 2be4 04F4      		brge .+4
 6692 2be6 0C94 0000 		jmp .L148
 6693               	.L214:
 818:lp_solve_5.5/lp_MPS.c ****             report(lp, CRITICAL, "Wrong number of items (%d) in COLUMNS section (line %d)\n",
 6694               		.loc 1 818 0 is_stmt 1
 6695 2bea 8E81      		ldd r24,Y+6
 6696 2bec 8F93      		push r24
 6697 2bee 8D81      		ldd r24,Y+5
 6698 2bf0 8F93      		push r24
 6699 2bf2 8C81      		ldd r24,Y+4
 6700 2bf4 8F93      		push r24
 6701 2bf6 8B81      		ldd r24,Y+3
 6702 2bf8 8F93      		push r24
 6703 2bfa 80E0      		ldi r24,lo8(.LC65)
 6704 2bfc 90E0      		ldi r25,hi8(.LC65)
 6705 2bfe 892F      		mov r24,r25
 6706 2c00 8F93      		push r24
 6707 2c02 80E0      		ldi r24,lo8(.LC65)
 6708 2c04 90E0      		ldi r25,hi8(.LC65)
 6709 2c06 8F93      		push r24
 6710 2c08 1F92      		push __zero_reg__
 6711 2c0a 81E0      		ldi r24,lo8(1)
 6712 2c0c 8F93      		push r24
 6713 2c0e 8E89      		ldd r24,Y+22
 6714 2c10 8F93      		push r24
 6715 2c12 8D89      		ldd r24,Y+21
 6716 2c14 8F93      		push r24
 6717 2c16 0E94 0000 		call report
 6718 2c1a EDB7      		in r30,__SP_L__
 6719 2c1c FEB7      		in r31,__SP_H__
 6720 2c1e 3A96      		adiw r30,10
 6721 2c20 0FB6      		in __tmp_reg__,__SREG__
 6722 2c22 F894      		cli
 6723 2c24 DEBF      		out __SP_H__,r29
 6724 2c26 0FBE      		out __SREG__,__tmp_reg__
 6725 2c28 CDBF      		out __SP_L__,r28
 819:lp_solve_5.5/lp_MPS.c ****                                   items, Lineno);
 820:lp_solve_5.5/lp_MPS.c ****             break;
 6726               		.loc 1 820 0
 6727 2c2a 0C94 0000 		jmp .L172
 6728               	.L179:
 821:lp_solve_5.5/lp_MPS.c ****           }
 822:lp_solve_5.5/lp_MPS.c **** 
 823:lp_solve_5.5/lp_MPS.c ****           continue;
 824:lp_solve_5.5/lp_MPS.c **** 
 825:lp_solve_5.5/lp_MPS.c ****         /* Process entries in the RHS section */
 826:lp_solve_5.5/lp_MPS.c ****         /* field2: uninteresting name; field3: constraint name */
 827:lp_solve_5.5/lp_MPS.c ****         /* field4: value */
 828:lp_solve_5.5/lp_MPS.c ****         /* optional: field5: constraint name; field6: value */
 829:lp_solve_5.5/lp_MPS.c ****         case MPSRHS:
 830:lp_solve_5.5/lp_MPS.c **** 
 831:lp_solve_5.5/lp_MPS.c ****           report(lp, FULL, "RHS line: %s %s %g %s %g\n",
 6729               		.loc 1 831 0
 6730 2c2e CE01      		movw r24,r28
 6731 2c30 835D      		subi r24,-45
 6732 2c32 9B4D      		sbci r25,-37
 6733 2c34 DC01      		movw r26,r24
 6734 2c36 2D91      		ld r18,X+
 6735 2c38 3D91      		ld r19,X+
 6736 2c3a 4D91      		ld r20,X+
 6737 2c3c 5C91      		ld r21,X
 6738 2c3e CE01      		movw r24,r28
 6739 2c40 875D      		subi r24,-41
 6740 2c42 9B4D      		sbci r25,-37
 6741 2c44 FC01      		movw r30,r24
 6742 2c46 8081      		ld r24,Z
 6743 2c48 9181      		ldd r25,Z+1
 6744 2c4a A281      		ldd r26,Z+2
 6745 2c4c B381      		ldd r27,Z+3
 6746 2c4e 652F      		mov r22,r21
 6747 2c50 6F93      		push r22
 6748 2c52 642F      		mov r22,r20
 6749 2c54 6F93      		push r22
 6750 2c56 632F      		mov r22,r19
 6751 2c58 6F93      		push r22
 6752 2c5a 2F93      		push r18
 6753 2c5c 9E01      		movw r18,r28
 6754 2c5e 2A5D      		subi r18,-38
 6755 2c60 334F      		sbci r19,-13
 6756 2c62 432F      		mov r20,r19
 6757 2c64 4F93      		push r20
 6758 2c66 2F93      		push r18
 6759 2c68 2B2F      		mov r18,r27
 6760 2c6a 2F93      		push r18
 6761 2c6c 2A2F      		mov r18,r26
 6762 2c6e 2F93      		push r18
 6763 2c70 292F      		mov r18,r25
 6764 2c72 2F93      		push r18
 6765 2c74 8F93      		push r24
 6766 2c76 CE01      		movw r24,r28
 6767 2c78 8A5D      		subi r24,-38
 6768 2c7a 974F      		sbci r25,-9
 6769 2c7c 292F      		mov r18,r25
 6770 2c7e 2F93      		push r18
 6771 2c80 8F93      		push r24
 6772 2c82 CE01      		movw r24,r28
 6773 2c84 8A5D      		subi r24,-38
 6774 2c86 9B4F      		sbci r25,-5
 6775 2c88 292F      		mov r18,r25
 6776 2c8a 2F93      		push r18
 6777 2c8c 8F93      		push r24
 6778 2c8e 80E0      		ldi r24,lo8(.LC66)
 6779 2c90 90E0      		ldi r25,hi8(.LC66)
 6780 2c92 892F      		mov r24,r25
 6781 2c94 8F93      		push r24
 6782 2c96 80E0      		ldi r24,lo8(.LC66)
 6783 2c98 90E0      		ldi r25,hi8(.LC66)
 6784 2c9a 8F93      		push r24
 6785 2c9c 1F92      		push __zero_reg__
 6786 2c9e 86E0      		ldi r24,lo8(6)
 6787 2ca0 8F93      		push r24
 6788 2ca2 8E89      		ldd r24,Y+22
 6789 2ca4 8F93      		push r24
 6790 2ca6 8D89      		ldd r24,Y+21
 6791 2ca8 8F93      		push r24
 6792 2caa 0E94 0000 		call report
 6793 2cae 2DB7      		in r18,__SP_L__
 6794 2cb0 3EB7      		in r19,__SP_H__
 6795 2cb2 2C5E      		subi r18,-20
 6796 2cb4 3F4F      		sbci r19,-1
 6797 2cb6 0FB6      		in __tmp_reg__,__SREG__
 6798 2cb8 F894      		cli
 6799 2cba DEBF      		out __SP_H__,r29
 6800 2cbc 0FBE      		out __SREG__,__tmp_reg__
 6801 2cbe CDBF      		out __SP_L__,r28
 832:lp_solve_5.5/lp_MPS.c ****                             field2, field3, field4, field5, field6);
 833:lp_solve_5.5/lp_MPS.c **** 
 834:lp_solve_5.5/lp_MPS.c ****           if((items != 4) && (items != 6)) {
 6802               		.loc 1 834 0
 6803 2cc0 8B81      		ldd r24,Y+3
 6804 2cc2 9C81      		ldd r25,Y+4
 6805 2cc4 0497      		sbiw r24,4
 6806 2cc6 01F0      		breq .L216
 6807               		.loc 1 834 0 is_stmt 0 discriminator 1
 6808 2cc8 8B81      		ldd r24,Y+3
 6809 2cca 9C81      		ldd r25,Y+4
 6810 2ccc 0697      		sbiw r24,6
 6811 2cce 01F0      		breq .L216
 835:lp_solve_5.5/lp_MPS.c ****             report(lp, CRITICAL, "Wrong number of items (%d) in RHS section line %d\n",
 6812               		.loc 1 835 0 is_stmt 1
 6813 2cd0 8E81      		ldd r24,Y+6
 6814 2cd2 8F93      		push r24
 6815 2cd4 8D81      		ldd r24,Y+5
 6816 2cd6 8F93      		push r24
 6817 2cd8 8C81      		ldd r24,Y+4
 6818 2cda 8F93      		push r24
 6819 2cdc 8B81      		ldd r24,Y+3
 6820 2cde 8F93      		push r24
 6821 2ce0 80E0      		ldi r24,lo8(.LC67)
 6822 2ce2 90E0      		ldi r25,hi8(.LC67)
 6823 2ce4 892F      		mov r24,r25
 6824 2ce6 8F93      		push r24
 6825 2ce8 80E0      		ldi r24,lo8(.LC67)
 6826 2cea 90E0      		ldi r25,hi8(.LC67)
 6827 2cec 8F93      		push r24
 6828 2cee 1F92      		push __zero_reg__
 6829 2cf0 81E0      		ldi r24,lo8(1)
 6830 2cf2 8F93      		push r24
 6831 2cf4 8E89      		ldd r24,Y+22
 6832 2cf6 8F93      		push r24
 6833 2cf8 8D89      		ldd r24,Y+21
 6834 2cfa 8F93      		push r24
 6835 2cfc 0E94 0000 		call report
 6836 2d00 8DB7      		in r24,__SP_L__
 6837 2d02 9EB7      		in r25,__SP_H__
 6838 2d04 0A96      		adiw r24,10
 6839 2d06 0FB6      		in __tmp_reg__,__SREG__
 6840 2d08 F894      		cli
 6841 2d0a DEBF      		out __SP_H__,r29
 6842 2d0c 0FBE      		out __SREG__,__tmp_reg__
 6843 2d0e CDBF      		out __SP_L__,r28
 836:lp_solve_5.5/lp_MPS.c ****                                   items, Lineno);
 837:lp_solve_5.5/lp_MPS.c ****             break;
 6844               		.loc 1 837 0
 6845 2d10 0C94 0000 		jmp .L172
 6846               	.L216:
 838:lp_solve_5.5/lp_MPS.c ****           }
 839:lp_solve_5.5/lp_MPS.c **** 
 840:lp_solve_5.5/lp_MPS.c ****           if((row = find_row(lp, field3, Unconstrained_rows_found)) >= 0) {
 6847               		.loc 1 840 0
 6848 2d14 9E01      		movw r18,r28
 6849 2d16 2A5D      		subi r18,-38
 6850 2d18 374F      		sbci r19,-9
 6851 2d1a 8D89      		ldd r24,Y+21
 6852 2d1c 9E89      		ldd r25,Y+22
 6853 2d1e 4889      		ldd r20,Y+16
 6854 2d20 B901      		movw r22,r18
 6855 2d22 0E94 0000 		call find_row
 6856 2d26 9BA3      		std Y+35,r25
 6857 2d28 8AA3      		std Y+34,r24
 6858 2d2a 8AA1      		ldd r24,Y+34
 6859 2d2c 9BA1      		ldd r25,Y+35
 6860 2d2e 9923      		tst r25
 6861 2d30 04F0      		brlt .L217
 841:lp_solve_5.5/lp_MPS.c ****             if ((row == 0) && ((typeMPS & MPSNEGOBJCONST) == MPSNEGOBJCONST))
 6862               		.loc 1 841 0
 6863 2d32 8AA1      		ldd r24,Y+34
 6864 2d34 9BA1      		ldd r25,Y+35
 6865 2d36 892B      		or r24,r25
 6866 2d38 01F4      		brne .L218
 6867               		.loc 1 841 0 is_stmt 0 discriminator 1
 6868 2d3a CE01      		movw r24,r28
 6869 2d3c 835C      		subi r24,-61
 6870 2d3e 9B4D      		sbci r25,-37
 6871 2d40 DC01      		movw r26,r24
 6872 2d42 8D91      		ld r24,X+
 6873 2d44 9C91      		ld r25,X
 6874 2d46 8870      		andi r24,8
 6875 2d48 9927      		clr r25
 6876 2d4a 892B      		or r24,r25
 6877 2d4c 01F0      		breq .L218
 842:lp_solve_5.5/lp_MPS.c ****               field4 = -field4;
 6878               		.loc 1 842 0 is_stmt 1
 6879 2d4e CE01      		movw r24,r28
 6880 2d50 875D      		subi r24,-41
 6881 2d52 9B4D      		sbci r25,-37
 6882 2d54 FC01      		movw r30,r24
 6883 2d56 8081      		ld r24,Z
 6884 2d58 9181      		ldd r25,Z+1
 6885 2d5a A281      		ldd r26,Z+2
 6886 2d5c B381      		ldd r27,Z+3
 6887 2d5e B058      		subi r27,0x80
 6888 2d60 9E01      		movw r18,r28
 6889 2d62 275D      		subi r18,-41
 6890 2d64 3B4D      		sbci r19,-37
 6891 2d66 F901      		movw r30,r18
 6892 2d68 8083      		st Z,r24
 6893 2d6a 9183      		std Z+1,r25
 6894 2d6c A283      		std Z+2,r26
 6895 2d6e B383      		std Z+3,r27
 6896               	.L218:
 843:lp_solve_5.5/lp_MPS.c ****             set_rh(lp, row, (REAL)field4);
 6897               		.loc 1 843 0
 6898 2d70 CE01      		movw r24,r28
 6899 2d72 875D      		subi r24,-41
 6900 2d74 9B4D      		sbci r25,-37
 6901 2d76 FC01      		movw r30,r24
 6902 2d78 8081      		ld r24,Z
 6903 2d7a 9181      		ldd r25,Z+1
 6904 2d7c A281      		ldd r26,Z+2
 6905 2d7e B381      		ldd r27,Z+3
 6906 2d80 6AA1      		ldd r22,Y+34
 6907 2d82 7BA1      		ldd r23,Y+35
 6908 2d84 ED89      		ldd r30,Y+21
 6909 2d86 FE89      		ldd r31,Y+22
 6910 2d88 9C01      		movw r18,r24
 6911 2d8a AD01      		movw r20,r26
 6912 2d8c CF01      		movw r24,r30
 6913 2d8e 0E94 0000 		call set_rh
 6914               	.L217:
 844:lp_solve_5.5/lp_MPS.c ****           }
 845:lp_solve_5.5/lp_MPS.c **** 
 846:lp_solve_5.5/lp_MPS.c ****           if(items == 6) {
 6915               		.loc 1 846 0
 6916 2d92 8B81      		ldd r24,Y+3
 6917 2d94 9C81      		ldd r25,Y+4
 6918 2d96 0697      		sbiw r24,6
 6919 2d98 01F0      		breq .+4
 6920 2d9a 0C94 0000 		jmp .L148
 847:lp_solve_5.5/lp_MPS.c ****             if((row = find_row(lp, field5, Unconstrained_rows_found)) >= 0) {
 6921               		.loc 1 847 0
 6922 2d9e 9E01      		movw r18,r28
 6923 2da0 2A5D      		subi r18,-38
 6924 2da2 334F      		sbci r19,-13
 6925 2da4 8D89      		ldd r24,Y+21
 6926 2da6 9E89      		ldd r25,Y+22
 6927 2da8 4889      		ldd r20,Y+16
 6928 2daa B901      		movw r22,r18
 6929 2dac 0E94 0000 		call find_row
 6930 2db0 9BA3      		std Y+35,r25
 6931 2db2 8AA3      		std Y+34,r24
 6932 2db4 8AA1      		ldd r24,Y+34
 6933 2db6 9BA1      		ldd r25,Y+35
 6934 2db8 9923      		tst r25
 6935 2dba 04F4      		brge .+4
 6936 2dbc 0C94 0000 		jmp .L148
 848:lp_solve_5.5/lp_MPS.c ****               if ((row == 0) && ((typeMPS & MPSNEGOBJCONST) == MPSNEGOBJCONST))
 6937               		.loc 1 848 0
 6938 2dc0 8AA1      		ldd r24,Y+34
 6939 2dc2 9BA1      		ldd r25,Y+35
 6940 2dc4 892B      		or r24,r25
 6941 2dc6 01F4      		brne .L220
 6942               		.loc 1 848 0 is_stmt 0 discriminator 1
 6943 2dc8 CE01      		movw r24,r28
 6944 2dca 835C      		subi r24,-61
 6945 2dcc 9B4D      		sbci r25,-37
 6946 2dce DC01      		movw r26,r24
 6947 2dd0 8D91      		ld r24,X+
 6948 2dd2 9C91      		ld r25,X
 6949 2dd4 8870      		andi r24,8
 6950 2dd6 9927      		clr r25
 6951 2dd8 892B      		or r24,r25
 6952 2dda 01F0      		breq .L220
 849:lp_solve_5.5/lp_MPS.c ****                 field6 = -field6;
 6953               		.loc 1 849 0 is_stmt 1
 6954 2ddc CE01      		movw r24,r28
 6955 2dde 835D      		subi r24,-45
 6956 2de0 9B4D      		sbci r25,-37
 6957 2de2 FC01      		movw r30,r24
 6958 2de4 8081      		ld r24,Z
 6959 2de6 9181      		ldd r25,Z+1
 6960 2de8 A281      		ldd r26,Z+2
 6961 2dea B381      		ldd r27,Z+3
 6962 2dec B058      		subi r27,0x80
 6963 2dee 9E01      		movw r18,r28
 6964 2df0 235D      		subi r18,-45
 6965 2df2 3B4D      		sbci r19,-37
 6966 2df4 F901      		movw r30,r18
 6967 2df6 8083      		st Z,r24
 6968 2df8 9183      		std Z+1,r25
 6969 2dfa A283      		std Z+2,r26
 6970 2dfc B383      		std Z+3,r27
 6971               	.L220:
 850:lp_solve_5.5/lp_MPS.c ****               set_rh(lp, row, (REAL)field6);
 6972               		.loc 1 850 0
 6973 2dfe CE01      		movw r24,r28
 6974 2e00 835D      		subi r24,-45
 6975 2e02 9B4D      		sbci r25,-37
 6976 2e04 FC01      		movw r30,r24
 6977 2e06 8081      		ld r24,Z
 6978 2e08 9181      		ldd r25,Z+1
 6979 2e0a A281      		ldd r26,Z+2
 6980 2e0c B381      		ldd r27,Z+3
 6981 2e0e 6AA1      		ldd r22,Y+34
 6982 2e10 7BA1      		ldd r23,Y+35
 6983 2e12 ED89      		ldd r30,Y+21
 6984 2e14 FE89      		ldd r31,Y+22
 6985 2e16 9C01      		movw r18,r24
 6986 2e18 AD01      		movw r20,r26
 6987 2e1a CF01      		movw r24,r30
 6988 2e1c 0E94 0000 		call set_rh
 851:lp_solve_5.5/lp_MPS.c ****             }
 852:lp_solve_5.5/lp_MPS.c ****           }
 853:lp_solve_5.5/lp_MPS.c **** 
 854:lp_solve_5.5/lp_MPS.c ****           continue;
 6989               		.loc 1 854 0
 6990 2e20 0C94 0000 		jmp .L148
 6991               	.L180:
 855:lp_solve_5.5/lp_MPS.c **** 
 856:lp_solve_5.5/lp_MPS.c ****         /* Process entries in the BOUNDS section */
 857:lp_solve_5.5/lp_MPS.c ****         /* field1: bound type; field2: uninteresting name; */
 858:lp_solve_5.5/lp_MPS.c ****         /* field3: variable name; field4: value */
 859:lp_solve_5.5/lp_MPS.c ****         case MPSBOUNDS:
 860:lp_solve_5.5/lp_MPS.c **** 
 861:lp_solve_5.5/lp_MPS.c ****           report(lp, FULL, "BOUNDS line: %s %s %s %g\n",
 6992               		.loc 1 861 0
 6993 2e24 CE01      		movw r24,r28
 6994 2e26 875D      		subi r24,-41
 6995 2e28 9B4D      		sbci r25,-37
 6996 2e2a FC01      		movw r30,r24
 6997 2e2c 8081      		ld r24,Z
 6998 2e2e 9181      		ldd r25,Z+1
 6999 2e30 A281      		ldd r26,Z+2
 7000 2e32 B381      		ldd r27,Z+3
 7001 2e34 2B2F      		mov r18,r27
 7002 2e36 2F93      		push r18
 7003 2e38 2A2F      		mov r18,r26
 7004 2e3a 2F93      		push r18
 7005 2e3c 292F      		mov r18,r25
 7006 2e3e 2F93      		push r18
 7007 2e40 8F93      		push r24
 7008 2e42 CE01      		movw r24,r28
 7009 2e44 8A5D      		subi r24,-38
 7010 2e46 974F      		sbci r25,-9
 7011 2e48 292F      		mov r18,r25
 7012 2e4a 2F93      		push r18
 7013 2e4c 8F93      		push r24
 7014 2e4e CE01      		movw r24,r28
 7015 2e50 8A5D      		subi r24,-38
 7016 2e52 9B4F      		sbci r25,-5
 7017 2e54 292F      		mov r18,r25
 7018 2e56 2F93      		push r18
 7019 2e58 8F93      		push r24
 7020 2e5a CE01      		movw r24,r28
 7021 2e5c 8696      		adiw r24,38
 7022 2e5e 292F      		mov r18,r25
 7023 2e60 2F93      		push r18
 7024 2e62 8F93      		push r24
 7025 2e64 80E0      		ldi r24,lo8(.LC68)
 7026 2e66 90E0      		ldi r25,hi8(.LC68)
 7027 2e68 892F      		mov r24,r25
 7028 2e6a 8F93      		push r24
 7029 2e6c 80E0      		ldi r24,lo8(.LC68)
 7030 2e6e 90E0      		ldi r25,hi8(.LC68)
 7031 2e70 8F93      		push r24
 7032 2e72 1F92      		push __zero_reg__
 7033 2e74 86E0      		ldi r24,lo8(6)
 7034 2e76 8F93      		push r24
 7035 2e78 8E89      		ldd r24,Y+22
 7036 2e7a 8F93      		push r24
 7037 2e7c 8D89      		ldd r24,Y+21
 7038 2e7e 8F93      		push r24
 7039 2e80 0E94 0000 		call report
 7040 2e84 2DB7      		in r18,__SP_L__
 7041 2e86 3EB7      		in r19,__SP_H__
 7042 2e88 205F      		subi r18,-16
 7043 2e8a 3F4F      		sbci r19,-1
 7044 2e8c 0FB6      		in __tmp_reg__,__SREG__
 7045 2e8e F894      		cli
 7046 2e90 DEBF      		out __SP_H__,r29
 7047 2e92 0FBE      		out __SREG__,__tmp_reg__
 7048 2e94 CDBF      		out __SP_L__,r28
 862:lp_solve_5.5/lp_MPS.c ****                             field1, field2, field3, field4);
 863:lp_solve_5.5/lp_MPS.c **** 
 864:lp_solve_5.5/lp_MPS.c ****           var = find_var(lp, field3, FALSE);
 7049               		.loc 1 864 0
 7050 2e96 9E01      		movw r18,r28
 7051 2e98 2A5D      		subi r18,-38
 7052 2e9a 374F      		sbci r19,-9
 7053 2e9c 8D89      		ldd r24,Y+21
 7054 2e9e 9E89      		ldd r25,Y+22
 7055 2ea0 40E0      		ldi r20,0
 7056 2ea2 B901      		movw r22,r18
 7057 2ea4 0E94 0000 		call find_var
 7058 2ea8 9C01      		movw r18,r24
 7059 2eaa CE01      		movw r24,r28
 7060 2eac 8A5D      		subi r24,-38
 7061 2eae 9B4D      		sbci r25,-37
 7062 2eb0 DC01      		movw r26,r24
 7063 2eb2 2D93      		st X+,r18
 7064 2eb4 3C93      		st X,r19
 865:lp_solve_5.5/lp_MPS.c ****           if(var < 0){ /* bound on undefined var in COLUMNS section ... */
 7065               		.loc 1 865 0
 7066 2eb6 CE01      		movw r24,r28
 7067 2eb8 8A5D      		subi r24,-38
 7068 2eba 9B4D      		sbci r25,-37
 7069 2ebc FC01      		movw r30,r24
 7070 2ebe 8081      		ld r24,Z
 7071 2ec0 9181      		ldd r25,Z+1
 7072 2ec2 9923      		tst r25
 7073 2ec4 04F0      		brlt .+2
 7074 2ec6 00C0      		rjmp .L221
 866:lp_solve_5.5/lp_MPS.c ****             Column_ready = TRUE;
 7075               		.loc 1 866 0
 7076 2ec8 CE01      		movw r24,r28
 7077 2eca 885D      		subi r24,-40
 7078 2ecc 9B4D      		sbci r25,-37
 7079 2ece 21E0      		ldi r18,lo8(1)
 7080 2ed0 DC01      		movw r26,r24
 7081 2ed2 2C93      		st X,r18
 867:lp_solve_5.5/lp_MPS.c ****             if (!addmpscolumn(lp, FALSE, typeMPS, &Column_ready, &count, Last_column, Last_columnno
 7082               		.loc 1 867 0
 7083 2ed4 CE01      		movw r24,r28
 7084 2ed6 8B5C      		subi r24,-53
 7085 2ed8 9B4D      		sbci r25,-37
 7086 2eda FC01      		movw r30,r24
 7087 2edc A081      		ld r26,Z
 7088 2ede B181      		ldd r27,Z+1
 7089 2ee0 CE01      		movw r24,r28
 7090 2ee2 8F5C      		subi r24,-49
 7091 2ee4 9B4D      		sbci r25,-37
 7092 2ee6 FC01      		movw r30,r24
 7093 2ee8 0190      		ld __tmp_reg__,Z+
 7094 2eea F081      		ld r31,Z
 7095 2eec E02D      		mov r30,__tmp_reg__
 7096 2eee CF5B      		subi r28,lo8(-9281)
 7097 2ef0 DB4D      		sbci r29,hi8(-9281)
 7098 2ef2 F983      		std Y+1,r31
 7099 2ef4 E883      		st Y,r30
 7100 2ef6 C154      		subi r28,lo8(9281)
 7101 2ef8 D442      		sbci r29,hi8(9281)
 7102 2efa 8E01      		movw r16,r28
 7103 2efc 0A5D      		subi r16,-38
 7104 2efe 174F      		sbci r17,-9
 7105 2f00 BE01      		movw r22,r28
 7106 2f02 6D5C      		subi r22,-51
 7107 2f04 7B4D      		sbci r23,-37
 7108 2f06 9E01      		movw r18,r28
 7109 2f08 285D      		subi r18,-40
 7110 2f0a 3B4D      		sbci r19,-37
 7111 2f0c CE01      		movw r24,r28
 7112 2f0e 835C      		subi r24,-61
 7113 2f10 9B4D      		sbci r25,-37
 7114 2f12 FC01      		movw r30,r24
 7115 2f14 4081      		ld r20,Z
 7116 2f16 5181      		ldd r21,Z+1
 7117 2f18 8D89      		ldd r24,Y+21
 7118 2f1a 9E89      		ldd r25,Y+22
 7119 2f1c 5801      		movw r10,r16
 7120 2f1e 6D01      		movw r12,r26
 7121 2f20 CF5B      		subi r28,lo8(-9281)
 7122 2f22 DB4D      		sbci r29,hi8(-9281)
 7123 2f24 E880      		ld r14,Y
 7124 2f26 F980      		ldd r15,Y+1
 7125 2f28 C154      		subi r28,lo8(9281)
 7126 2f2a D442      		sbci r29,hi8(9281)
 7127 2f2c 8B01      		movw r16,r22
 7128 2f2e 60E0      		ldi r22,0
 7129 2f30 0E94 0000 		call addmpscolumn
 7130 2f34 892B      		or r24,r25
 7131 2f36 01F4      		brne .+4
 7132 2f38 0C94 0000 		jmp .L353
 868:lp_solve_5.5/lp_MPS.c ****               break;
 869:lp_solve_5.5/lp_MPS.c ****             Column_ready = TRUE;
 7133               		.loc 1 869 0
 7134 2f3c CE01      		movw r24,r28
 7135 2f3e 885D      		subi r24,-40
 7136 2f40 9B4D      		sbci r25,-37
 7137 2f42 21E0      		ldi r18,lo8(1)
 7138 2f44 DC01      		movw r26,r24
 7139 2f46 2C93      		st X,r18
 870:lp_solve_5.5/lp_MPS.c ****             var = find_var(lp, field3, TRUE);
 7140               		.loc 1 870 0
 7141 2f48 9E01      		movw r18,r28
 7142 2f4a 2A5D      		subi r18,-38
 7143 2f4c 374F      		sbci r19,-9
 7144 2f4e 8D89      		ldd r24,Y+21
 7145 2f50 9E89      		ldd r25,Y+22
 7146 2f52 41E0      		ldi r20,lo8(1)
 7147 2f54 B901      		movw r22,r18
 7148 2f56 0E94 0000 		call find_var
 7149 2f5a 9C01      		movw r18,r24
 7150 2f5c CE01      		movw r24,r28
 7151 2f5e 8A5D      		subi r24,-38
 7152 2f60 9B4D      		sbci r25,-37
 7153 2f62 FC01      		movw r30,r24
 7154 2f64 3183      		std Z+1,r19
 7155 2f66 2083      		st Z,r18
 7156               	.L221:
 871:lp_solve_5.5/lp_MPS.c ****           }
 872:lp_solve_5.5/lp_MPS.c ****           if(var < 0) /* undefined var and could add ... */;
 7157               		.loc 1 872 0
 7158 2f68 CE01      		movw r24,r28
 7159 2f6a 8A5D      		subi r24,-38
 7160 2f6c 9B4D      		sbci r25,-37
 7161 2f6e DC01      		movw r26,r24
 7162 2f70 8D91      		ld r24,X+
 7163 2f72 9C91      		ld r25,X
 7164 2f74 9923      		tst r25
 7165 2f76 04F4      		brge .+4
 7166 2f78 0C94 0000 		jmp .L148
 873:lp_solve_5.5/lp_MPS.c ****           else if(strcmp(field1, "UP") == 0) {
 7167               		.loc 1 873 0
 7168 2f7c CE01      		movw r24,r28
 7169 2f7e 8696      		adiw r24,38
 7170 2f80 60E0      		ldi r22,lo8(.LC69)
 7171 2f82 70E0      		ldi r23,hi8(.LC69)
 7172 2f84 0E94 0000 		call strcmp
 7173 2f88 892B      		or r24,r25
 7174 2f8a 01F4      		brne .L224
 874:lp_solve_5.5/lp_MPS.c ****           /* upper bound */
 875:lp_solve_5.5/lp_MPS.c ****             /* if(!set_bounds(lp, var, get_lowbo(lp, var), field4)) */
 876:lp_solve_5.5/lp_MPS.c ****             if(!set_upbo(lp, var, field4))
 7175               		.loc 1 876 0
 7176 2f8c CE01      		movw r24,r28
 7177 2f8e 875D      		subi r24,-41
 7178 2f90 9B4D      		sbci r25,-37
 7179 2f92 FC01      		movw r30,r24
 7180 2f94 8081      		ld r24,Z
 7181 2f96 9181      		ldd r25,Z+1
 7182 2f98 A281      		ldd r26,Z+2
 7183 2f9a B381      		ldd r27,Z+3
 7184 2f9c 9E01      		movw r18,r28
 7185 2f9e 2A5D      		subi r18,-38
 7186 2fa0 3B4D      		sbci r19,-37
 7187 2fa2 F901      		movw r30,r18
 7188 2fa4 6081      		ld r22,Z
 7189 2fa6 7181      		ldd r23,Z+1
 7190 2fa8 ED89      		ldd r30,Y+21
 7191 2faa FE89      		ldd r31,Y+22
 7192 2fac 9C01      		movw r18,r24
 7193 2fae AD01      		movw r20,r26
 7194 2fb0 CF01      		movw r24,r30
 7195 2fb2 0E94 0000 		call set_upbo
 7196 2fb6 8823      		tst r24
 7197 2fb8 01F0      		breq .+4
 7198 2fba 0C94 0000 		jmp .L148
 877:lp_solve_5.5/lp_MPS.c ****               break;
 7199               		.loc 1 877 0
 7200 2fbe 0C94 0000 		jmp .L172
 7201               	.L224:
 878:lp_solve_5.5/lp_MPS.c ****           }
 879:lp_solve_5.5/lp_MPS.c ****           else if(strcmp(field1, "SC") == 0) {
 7202               		.loc 1 879 0
 7203 2fc2 CE01      		movw r24,r28
 7204 2fc4 8696      		adiw r24,38
 7205 2fc6 60E0      		ldi r22,lo8(.LC70)
 7206 2fc8 70E0      		ldi r23,hi8(.LC70)
 7207 2fca 0E94 0000 		call strcmp
 7208 2fce 892B      		or r24,r25
 7209 2fd0 01F0      		breq .+2
 7210 2fd2 00C0      		rjmp .L225
 880:lp_solve_5.5/lp_MPS.c ****             /* upper bound */
 881:lp_solve_5.5/lp_MPS.c ****             if(field4 == 0)
 7211               		.loc 1 881 0
 7212 2fd4 CE01      		movw r24,r28
 7213 2fd6 875D      		subi r24,-41
 7214 2fd8 9B4D      		sbci r25,-37
 7215 2fda FC01      		movw r30,r24
 7216 2fdc 8081      		ld r24,Z
 7217 2fde 9181      		ldd r25,Z+1
 7218 2fe0 A281      		ldd r26,Z+2
 7219 2fe2 B381      		ldd r27,Z+3
 7220 2fe4 20E0      		ldi r18,0
 7221 2fe6 30E0      		ldi r19,0
 7222 2fe8 A901      		movw r20,r18
 7223 2fea BC01      		movw r22,r24
 7224 2fec CD01      		movw r24,r26
 7225 2fee 0E94 0000 		call __eqsf2
 7226 2ff2 8823      		tst r24
 7227 2ff4 01F4      		brne .L226
 882:lp_solve_5.5/lp_MPS.c ****               field4 = lp->infinite;
 7228               		.loc 1 882 0
 7229 2ff6 8D89      		ldd r24,Y+21
 7230 2ff8 9E89      		ldd r25,Y+22
 7231 2ffa 865F      		subi r24,-10
 7232 2ffc 9C4F      		sbci r25,-4
 7233 2ffe FC01      		movw r30,r24
 7234 3000 8081      		ld r24,Z
 7235 3002 9181      		ldd r25,Z+1
 7236 3004 A281      		ldd r26,Z+2
 7237 3006 B381      		ldd r27,Z+3
 7238 3008 9E01      		movw r18,r28
 7239 300a 275D      		subi r18,-41
 7240 300c 3B4D      		sbci r19,-37
 7241 300e F901      		movw r30,r18
 7242 3010 8083      		st Z,r24
 7243 3012 9183      		std Z+1,r25
 7244 3014 A283      		std Z+2,r26
 7245 3016 B383      		std Z+3,r27
 7246               	.L226:
 883:lp_solve_5.5/lp_MPS.c ****             /* if(!set_bounds(lp, var, get_lowbo(lp, var), field4)) */
 884:lp_solve_5.5/lp_MPS.c ****             if(!set_upbo(lp, var, field4))
 7247               		.loc 1 884 0
 7248 3018 CE01      		movw r24,r28
 7249 301a 875D      		subi r24,-41
 7250 301c 9B4D      		sbci r25,-37
 7251 301e FC01      		movw r30,r24
 7252 3020 8081      		ld r24,Z
 7253 3022 9181      		ldd r25,Z+1
 7254 3024 A281      		ldd r26,Z+2
 7255 3026 B381      		ldd r27,Z+3
 7256 3028 9E01      		movw r18,r28
 7257 302a 2A5D      		subi r18,-38
 7258 302c 3B4D      		sbci r19,-37
 7259 302e F901      		movw r30,r18
 7260 3030 6081      		ld r22,Z
 7261 3032 7181      		ldd r23,Z+1
 7262 3034 ED89      		ldd r30,Y+21
 7263 3036 FE89      		ldd r31,Y+22
 7264 3038 9C01      		movw r18,r24
 7265 303a AD01      		movw r20,r26
 7266 303c CF01      		movw r24,r30
 7267 303e 0E94 0000 		call set_upbo
 7268 3042 8823      		tst r24
 7269 3044 01F4      		brne .+2
 7270 3046 00C0      		rjmp .L354
 885:lp_solve_5.5/lp_MPS.c ****               break;
 886:lp_solve_5.5/lp_MPS.c ****             set_semicont(lp, var, TRUE);
 7271               		.loc 1 886 0
 7272 3048 CE01      		movw r24,r28
 7273 304a 8A5D      		subi r24,-38
 7274 304c 9B4D      		sbci r25,-37
 7275 304e DC01      		movw r26,r24
 7276 3050 2D91      		ld r18,X+
 7277 3052 3C91      		ld r19,X
 7278 3054 8D89      		ldd r24,Y+21
 7279 3056 9E89      		ldd r25,Y+22
 7280 3058 41E0      		ldi r20,lo8(1)
 7281 305a B901      		movw r22,r18
 7282 305c 0E94 0000 		call set_semicont
 7283 3060 0C94 0000 		jmp .L148
 7284               	.L225:
 887:lp_solve_5.5/lp_MPS.c ****           }
 888:lp_solve_5.5/lp_MPS.c ****           else if(strcmp(field1, "SI") == 0) {
 7285               		.loc 1 888 0
 7286 3064 CE01      		movw r24,r28
 7287 3066 8696      		adiw r24,38
 7288 3068 60E0      		ldi r22,lo8(.LC71)
 7289 306a 70E0      		ldi r23,hi8(.LC71)
 7290 306c 0E94 0000 		call strcmp
 7291 3070 892B      		or r24,r25
 7292 3072 01F0      		breq .+2
 7293 3074 00C0      		rjmp .L229
 889:lp_solve_5.5/lp_MPS.c ****             /* upper bound */
 890:lp_solve_5.5/lp_MPS.c ****             if(field4 == 0)
 7294               		.loc 1 890 0
 7295 3076 CE01      		movw r24,r28
 7296 3078 875D      		subi r24,-41
 7297 307a 9B4D      		sbci r25,-37
 7298 307c FC01      		movw r30,r24
 7299 307e 8081      		ld r24,Z
 7300 3080 9181      		ldd r25,Z+1
 7301 3082 A281      		ldd r26,Z+2
 7302 3084 B381      		ldd r27,Z+3
 7303 3086 20E0      		ldi r18,0
 7304 3088 30E0      		ldi r19,0
 7305 308a A901      		movw r20,r18
 7306 308c BC01      		movw r22,r24
 7307 308e CD01      		movw r24,r26
 7308 3090 0E94 0000 		call __eqsf2
 7309 3094 8823      		tst r24
 7310 3096 01F4      		brne .L230
 891:lp_solve_5.5/lp_MPS.c ****               field4 = lp->infinite;
 7311               		.loc 1 891 0
 7312 3098 8D89      		ldd r24,Y+21
 7313 309a 9E89      		ldd r25,Y+22
 7314 309c 865F      		subi r24,-10
 7315 309e 9C4F      		sbci r25,-4
 7316 30a0 FC01      		movw r30,r24
 7317 30a2 8081      		ld r24,Z
 7318 30a4 9181      		ldd r25,Z+1
 7319 30a6 A281      		ldd r26,Z+2
 7320 30a8 B381      		ldd r27,Z+3
 7321 30aa 9E01      		movw r18,r28
 7322 30ac 275D      		subi r18,-41
 7323 30ae 3B4D      		sbci r19,-37
 7324 30b0 F901      		movw r30,r18
 7325 30b2 8083      		st Z,r24
 7326 30b4 9183      		std Z+1,r25
 7327 30b6 A283      		std Z+2,r26
 7328 30b8 B383      		std Z+3,r27
 7329               	.L230:
 892:lp_solve_5.5/lp_MPS.c ****             /* if(!set_bounds(lp, var, get_lowbo(lp, var), field4)) */
 893:lp_solve_5.5/lp_MPS.c ****             if(!set_upbo(lp, var, field4))
 7330               		.loc 1 893 0
 7331 30ba CE01      		movw r24,r28
 7332 30bc 875D      		subi r24,-41
 7333 30be 9B4D      		sbci r25,-37
 7334 30c0 FC01      		movw r30,r24
 7335 30c2 8081      		ld r24,Z
 7336 30c4 9181      		ldd r25,Z+1
 7337 30c6 A281      		ldd r26,Z+2
 7338 30c8 B381      		ldd r27,Z+3
 7339 30ca 9E01      		movw r18,r28
 7340 30cc 2A5D      		subi r18,-38
 7341 30ce 3B4D      		sbci r19,-37
 7342 30d0 F901      		movw r30,r18
 7343 30d2 6081      		ld r22,Z
 7344 30d4 7181      		ldd r23,Z+1
 7345 30d6 ED89      		ldd r30,Y+21
 7346 30d8 FE89      		ldd r31,Y+22
 7347 30da 9C01      		movw r18,r24
 7348 30dc AD01      		movw r20,r26
 7349 30de CF01      		movw r24,r30
 7350 30e0 0E94 0000 		call set_upbo
 7351 30e4 8823      		tst r24
 7352 30e6 01F4      		brne .+2
 7353 30e8 00C0      		rjmp .L355
 894:lp_solve_5.5/lp_MPS.c ****               break;
 895:lp_solve_5.5/lp_MPS.c ****             set_int(lp, var, TRUE);
 7354               		.loc 1 895 0
 7355 30ea CE01      		movw r24,r28
 7356 30ec 8A5D      		subi r24,-38
 7357 30ee 9B4D      		sbci r25,-37
 7358 30f0 DC01      		movw r26,r24
 7359 30f2 2D91      		ld r18,X+
 7360 30f4 3C91      		ld r19,X
 7361 30f6 8D89      		ldd r24,Y+21
 7362 30f8 9E89      		ldd r25,Y+22
 7363 30fa 41E0      		ldi r20,lo8(1)
 7364 30fc B901      		movw r22,r18
 7365 30fe 0E94 0000 		call set_int
 896:lp_solve_5.5/lp_MPS.c ****             set_semicont(lp, var, TRUE);
 7366               		.loc 1 896 0
 7367 3102 CE01      		movw r24,r28
 7368 3104 8A5D      		subi r24,-38
 7369 3106 9B4D      		sbci r25,-37
 7370 3108 FC01      		movw r30,r24
 7371 310a 2081      		ld r18,Z
 7372 310c 3181      		ldd r19,Z+1
 7373 310e 8D89      		ldd r24,Y+21
 7374 3110 9E89      		ldd r25,Y+22
 7375 3112 41E0      		ldi r20,lo8(1)
 7376 3114 B901      		movw r22,r18
 7377 3116 0E94 0000 		call set_semicont
 7378 311a 0C94 0000 		jmp .L148
 7379               	.L229:
 897:lp_solve_5.5/lp_MPS.c ****           }
 898:lp_solve_5.5/lp_MPS.c ****           else if(strcmp(field1, "LO") == 0) {
 7380               		.loc 1 898 0
 7381 311e CE01      		movw r24,r28
 7382 3120 8696      		adiw r24,38
 7383 3122 60E0      		ldi r22,lo8(.LC72)
 7384 3124 70E0      		ldi r23,hi8(.LC72)
 7385 3126 0E94 0000 		call strcmp
 7386 312a 892B      		or r24,r25
 7387 312c 01F4      		brne .L233
 899:lp_solve_5.5/lp_MPS.c ****             /* lower bound */
 900:lp_solve_5.5/lp_MPS.c ****             /* if(!set_bounds(lp, var, field4, get_upbo(lp, var))) */
 901:lp_solve_5.5/lp_MPS.c ****             if(!set_lowbo(lp, var, field4))
 7388               		.loc 1 901 0
 7389 312e CE01      		movw r24,r28
 7390 3130 875D      		subi r24,-41
 7391 3132 9B4D      		sbci r25,-37
 7392 3134 FC01      		movw r30,r24
 7393 3136 8081      		ld r24,Z
 7394 3138 9181      		ldd r25,Z+1
 7395 313a A281      		ldd r26,Z+2
 7396 313c B381      		ldd r27,Z+3
 7397 313e 9E01      		movw r18,r28
 7398 3140 2A5D      		subi r18,-38
 7399 3142 3B4D      		sbci r19,-37
 7400 3144 F901      		movw r30,r18
 7401 3146 6081      		ld r22,Z
 7402 3148 7181      		ldd r23,Z+1
 7403 314a ED89      		ldd r30,Y+21
 7404 314c FE89      		ldd r31,Y+22
 7405 314e 9C01      		movw r18,r24
 7406 3150 AD01      		movw r20,r26
 7407 3152 CF01      		movw r24,r30
 7408 3154 0E94 0000 		call set_lowbo
 7409 3158 8823      		tst r24
 7410 315a 01F0      		breq .+2
 7411 315c 00C0      		rjmp .L148
 902:lp_solve_5.5/lp_MPS.c ****               break;
 7412               		.loc 1 902 0
 7413 315e 00C0      		rjmp .L172
 7414               	.L233:
 903:lp_solve_5.5/lp_MPS.c ****           }
 904:lp_solve_5.5/lp_MPS.c ****           else if(strcmp(field1, "PL") == 0) { /* plus-ranged variable */
 7415               		.loc 1 904 0
 7416 3160 CE01      		movw r24,r28
 7417 3162 8696      		adiw r24,38
 7418 3164 60E0      		ldi r22,lo8(.LC11)
 7419 3166 70E0      		ldi r23,hi8(.LC11)
 7420 3168 0E94 0000 		call strcmp
 7421 316c 892B      		or r24,r25
 7422 316e 01F4      		brne .L234
 905:lp_solve_5.5/lp_MPS.c ****             /* if(!set_bounds(lp, var, get_lowbo(lp, var), lp->infinite)) */
 906:lp_solve_5.5/lp_MPS.c ****             if(!set_upbo(lp, var, lp->infinite))
 7423               		.loc 1 906 0
 7424 3170 8D89      		ldd r24,Y+21
 7425 3172 9E89      		ldd r25,Y+22
 7426 3174 865F      		subi r24,-10
 7427 3176 9C4F      		sbci r25,-4
 7428 3178 FC01      		movw r30,r24
 7429 317a 8081      		ld r24,Z
 7430 317c 9181      		ldd r25,Z+1
 7431 317e A281      		ldd r26,Z+2
 7432 3180 B381      		ldd r27,Z+3
 7433 3182 9E01      		movw r18,r28
 7434 3184 2A5D      		subi r18,-38
 7435 3186 3B4D      		sbci r19,-37
 7436 3188 F901      		movw r30,r18
 7437 318a 6081      		ld r22,Z
 7438 318c 7181      		ldd r23,Z+1
 7439 318e ED89      		ldd r30,Y+21
 7440 3190 FE89      		ldd r31,Y+22
 7441 3192 9C01      		movw r18,r24
 7442 3194 AD01      		movw r20,r26
 7443 3196 CF01      		movw r24,r30
 7444 3198 0E94 0000 		call set_upbo
 7445 319c 8823      		tst r24
 7446 319e 01F0      		breq .+2
 7447 31a0 00C0      		rjmp .L148
 907:lp_solve_5.5/lp_MPS.c ****               break;
 7448               		.loc 1 907 0
 7449 31a2 00C0      		rjmp .L172
 7450               	.L234:
 908:lp_solve_5.5/lp_MPS.c ****           }
 909:lp_solve_5.5/lp_MPS.c ****           else if(strcmp(field1, "MI") == 0) { /* minus-ranged variable */
 7451               		.loc 1 909 0
 7452 31a4 CE01      		movw r24,r28
 7453 31a6 8696      		adiw r24,38
 7454 31a8 60E0      		ldi r22,lo8(.LC10)
 7455 31aa 70E0      		ldi r23,hi8(.LC10)
 7456 31ac 0E94 0000 		call strcmp
 7457 31b0 892B      		or r24,r25
 7458 31b2 01F4      		brne .L235
 910:lp_solve_5.5/lp_MPS.c ****             /* if(!set_bounds(lp, var, -lp->infinite, get_upbo(lp, var))) */
 911:lp_solve_5.5/lp_MPS.c ****             if(!set_lowbo(lp, var, -lp->infinite))
 7459               		.loc 1 911 0
 7460 31b4 8D89      		ldd r24,Y+21
 7461 31b6 9E89      		ldd r25,Y+22
 7462 31b8 865F      		subi r24,-10
 7463 31ba 9C4F      		sbci r25,-4
 7464 31bc FC01      		movw r30,r24
 7465 31be 8081      		ld r24,Z
 7466 31c0 9181      		ldd r25,Z+1
 7467 31c2 A281      		ldd r26,Z+2
 7468 31c4 B381      		ldd r27,Z+3
 7469 31c6 B058      		subi r27,0x80
 7470 31c8 9E01      		movw r18,r28
 7471 31ca 2A5D      		subi r18,-38
 7472 31cc 3B4D      		sbci r19,-37
 7473 31ce F901      		movw r30,r18
 7474 31d0 6081      		ld r22,Z
 7475 31d2 7181      		ldd r23,Z+1
 7476 31d4 ED89      		ldd r30,Y+21
 7477 31d6 FE89      		ldd r31,Y+22
 7478 31d8 9C01      		movw r18,r24
 7479 31da AD01      		movw r20,r26
 7480 31dc CF01      		movw r24,r30
 7481 31de 0E94 0000 		call set_lowbo
 7482 31e2 8823      		tst r24
 7483 31e4 01F0      		breq .+2
 7484 31e6 00C0      		rjmp .L148
 912:lp_solve_5.5/lp_MPS.c ****               break;
 7485               		.loc 1 912 0
 7486 31e8 00C0      		rjmp .L172
 7487               	.L235:
 913:lp_solve_5.5/lp_MPS.c ****           }
 914:lp_solve_5.5/lp_MPS.c ****           else if(strcmp(field1, "FR") == 0) { /* free variable */
 7488               		.loc 1 914 0
 7489 31ea CE01      		movw r24,r28
 7490 31ec 8696      		adiw r24,38
 7491 31ee 60E0      		ldi r22,lo8(.LC9)
 7492 31f0 70E0      		ldi r23,hi8(.LC9)
 7493 31f2 0E94 0000 		call strcmp
 7494 31f6 892B      		or r24,r25
 7495 31f8 01F4      		brne .L236
 915:lp_solve_5.5/lp_MPS.c ****             set_unbounded(lp, var);
 7496               		.loc 1 915 0
 7497 31fa CE01      		movw r24,r28
 7498 31fc 8A5D      		subi r24,-38
 7499 31fe 9B4D      		sbci r25,-37
 7500 3200 DC01      		movw r26,r24
 7501 3202 2D91      		ld r18,X+
 7502 3204 3C91      		ld r19,X
 7503 3206 8D89      		ldd r24,Y+21
 7504 3208 9E89      		ldd r25,Y+22
 7505 320a B901      		movw r22,r18
 7506 320c 0E94 0000 		call set_unbounded
 7507 3210 00C0      		rjmp .L148
 7508               	.L236:
 916:lp_solve_5.5/lp_MPS.c ****           }
 917:lp_solve_5.5/lp_MPS.c ****           else if(strcmp(field1, "FX") == 0) {
 7509               		.loc 1 917 0
 7510 3212 CE01      		movw r24,r28
 7511 3214 8696      		adiw r24,38
 7512 3216 60E0      		ldi r22,lo8(.LC73)
 7513 3218 70E0      		ldi r23,hi8(.LC73)
 7514 321a 0E94 0000 		call strcmp
 7515 321e 892B      		or r24,r25
 7516 3220 01F4      		brne .L237
 918:lp_solve_5.5/lp_MPS.c ****             /* fixed, upper _and_ lower  */
 919:lp_solve_5.5/lp_MPS.c ****             if(!set_bounds(lp, var, field4, field4))
 7517               		.loc 1 919 0
 7518 3222 CE01      		movw r24,r28
 7519 3224 875D      		subi r24,-41
 7520 3226 9B4D      		sbci r25,-37
 7521 3228 FC01      		movw r30,r24
 7522 322a 2081      		ld r18,Z
 7523 322c 3181      		ldd r19,Z+1
 7524 322e 4281      		ldd r20,Z+2
 7525 3230 5381      		ldd r21,Z+3
 7526 3232 CE01      		movw r24,r28
 7527 3234 875D      		subi r24,-41
 7528 3236 9B4D      		sbci r25,-37
 7529 3238 FC01      		movw r30,r24
 7530 323a 8081      		ld r24,Z
 7531 323c 9181      		ldd r25,Z+1
 7532 323e A281      		ldd r26,Z+2
 7533 3240 B381      		ldd r27,Z+3
 7534 3242 BE01      		movw r22,r28
 7535 3244 6A5D      		subi r22,-38
 7536 3246 7B4D      		sbci r23,-37
 7537 3248 FB01      		movw r30,r22
 7538 324a 6081      		ld r22,Z
 7539 324c 7181      		ldd r23,Z+1
 7540 324e ED89      		ldd r30,Y+21
 7541 3250 FE89      		ldd r31,Y+22
 7542 3252 7901      		movw r14,r18
 7543 3254 8A01      		movw r16,r20
 7544 3256 9C01      		movw r18,r24
 7545 3258 AD01      		movw r20,r26
 7546 325a CF01      		movw r24,r30
 7547 325c 0E94 0000 		call set_bounds
 7548 3260 8823      		tst r24
 7549 3262 01F0      		breq .+2
 7550 3264 00C0      		rjmp .L148
 920:lp_solve_5.5/lp_MPS.c ****               break;
 7551               		.loc 1 920 0
 7552 3266 00C0      		rjmp .L172
 7553               	.L237:
 921:lp_solve_5.5/lp_MPS.c ****           }
 922:lp_solve_5.5/lp_MPS.c ****           else if(strcmp(field1, "BV") == 0) { /* binary variable */
 7554               		.loc 1 922 0
 7555 3268 CE01      		movw r24,r28
 7556 326a 8696      		adiw r24,38
 7557 326c 60E0      		ldi r22,lo8(.LC12)
 7558 326e 70E0      		ldi r23,hi8(.LC12)
 7559 3270 0E94 0000 		call strcmp
 7560 3274 892B      		or r24,r25
 7561 3276 01F4      		brne .L238
 923:lp_solve_5.5/lp_MPS.c ****             set_binary(lp, var, TRUE);
 7562               		.loc 1 923 0
 7563 3278 CE01      		movw r24,r28
 7564 327a 8A5D      		subi r24,-38
 7565 327c 9B4D      		sbci r25,-37
 7566 327e DC01      		movw r26,r24
 7567 3280 2D91      		ld r18,X+
 7568 3282 3C91      		ld r19,X
 7569 3284 8D89      		ldd r24,Y+21
 7570 3286 9E89      		ldd r25,Y+22
 7571 3288 41E0      		ldi r20,lo8(1)
 7572 328a B901      		movw r22,r18
 7573 328c 0E94 0000 		call set_binary
 7574 3290 00C0      		rjmp .L148
 7575               	.L238:
 924:lp_solve_5.5/lp_MPS.c ****           }
 925:lp_solve_5.5/lp_MPS.c ****           /* AMPL bounds type UI and LI added by E.Imamura (CRIEPI)  */
 926:lp_solve_5.5/lp_MPS.c ****           else if(strcmp(field1, "UI") == 0) { /* upper bound for integer variable */
 7576               		.loc 1 926 0
 7577 3292 CE01      		movw r24,r28
 7578 3294 8696      		adiw r24,38
 7579 3296 60E0      		ldi r22,lo8(.LC74)
 7580 3298 70E0      		ldi r23,hi8(.LC74)
 7581 329a 0E94 0000 		call strcmp
 7582 329e 892B      		or r24,r25
 7583 32a0 01F4      		brne .L239
 927:lp_solve_5.5/lp_MPS.c ****             /* if(!set_bounds(lp, var, get_lowbo(lp, var), field4)) */
 928:lp_solve_5.5/lp_MPS.c ****             if(!set_upbo(lp, var, field4))
 7584               		.loc 1 928 0
 7585 32a2 CE01      		movw r24,r28
 7586 32a4 875D      		subi r24,-41
 7587 32a6 9B4D      		sbci r25,-37
 7588 32a8 FC01      		movw r30,r24
 7589 32aa 8081      		ld r24,Z
 7590 32ac 9181      		ldd r25,Z+1
 7591 32ae A281      		ldd r26,Z+2
 7592 32b0 B381      		ldd r27,Z+3
 7593 32b2 9E01      		movw r18,r28
 7594 32b4 2A5D      		subi r18,-38
 7595 32b6 3B4D      		sbci r19,-37
 7596 32b8 F901      		movw r30,r18
 7597 32ba 6081      		ld r22,Z
 7598 32bc 7181      		ldd r23,Z+1
 7599 32be ED89      		ldd r30,Y+21
 7600 32c0 FE89      		ldd r31,Y+22
 7601 32c2 9C01      		movw r18,r24
 7602 32c4 AD01      		movw r20,r26
 7603 32c6 CF01      		movw r24,r30
 7604 32c8 0E94 0000 		call set_upbo
 7605 32cc 8823      		tst r24
 7606 32ce 01F4      		brne .+2
 7607 32d0 00C0      		rjmp .L356
 929:lp_solve_5.5/lp_MPS.c ****               break;
 930:lp_solve_5.5/lp_MPS.c ****             set_int(lp, var, TRUE);
 7608               		.loc 1 930 0
 7609 32d2 CE01      		movw r24,r28
 7610 32d4 8A5D      		subi r24,-38
 7611 32d6 9B4D      		sbci r25,-37
 7612 32d8 DC01      		movw r26,r24
 7613 32da 2D91      		ld r18,X+
 7614 32dc 3C91      		ld r19,X
 7615 32de 8D89      		ldd r24,Y+21
 7616 32e0 9E89      		ldd r25,Y+22
 7617 32e2 41E0      		ldi r20,lo8(1)
 7618 32e4 B901      		movw r22,r18
 7619 32e6 0E94 0000 		call set_int
 7620 32ea 00C0      		rjmp .L148
 7621               	.L239:
 931:lp_solve_5.5/lp_MPS.c ****           }
 932:lp_solve_5.5/lp_MPS.c ****           else if(strcmp(field1, "LI") == 0) { /* lower bound for integer variable - corrected by K
 7622               		.loc 1 932 0
 7623 32ec CE01      		movw r24,r28
 7624 32ee 8696      		adiw r24,38
 7625 32f0 60E0      		ldi r22,lo8(.LC75)
 7626 32f2 70E0      		ldi r23,hi8(.LC75)
 7627 32f4 0E94 0000 		call strcmp
 7628 32f8 892B      		or r24,r25
 7629 32fa 01F4      		brne .L241
 933:lp_solve_5.5/lp_MPS.c ****             /* if(!set_bounds(lp, var, field4, get_upbo(lp, var))) */
 934:lp_solve_5.5/lp_MPS.c ****             if(!set_lowbo(lp, var, field4))
 7630               		.loc 1 934 0
 7631 32fc CE01      		movw r24,r28
 7632 32fe 875D      		subi r24,-41
 7633 3300 9B4D      		sbci r25,-37
 7634 3302 FC01      		movw r30,r24
 7635 3304 8081      		ld r24,Z
 7636 3306 9181      		ldd r25,Z+1
 7637 3308 A281      		ldd r26,Z+2
 7638 330a B381      		ldd r27,Z+3
 7639 330c 9E01      		movw r18,r28
 7640 330e 2A5D      		subi r18,-38
 7641 3310 3B4D      		sbci r19,-37
 7642 3312 F901      		movw r30,r18
 7643 3314 6081      		ld r22,Z
 7644 3316 7181      		ldd r23,Z+1
 7645 3318 ED89      		ldd r30,Y+21
 7646 331a FE89      		ldd r31,Y+22
 7647 331c 9C01      		movw r18,r24
 7648 331e AD01      		movw r20,r26
 7649 3320 CF01      		movw r24,r30
 7650 3322 0E94 0000 		call set_lowbo
 7651 3326 8823      		tst r24
 7652 3328 01F4      		brne .+2
 7653 332a 00C0      		rjmp .L357
 935:lp_solve_5.5/lp_MPS.c ****               break;
 936:lp_solve_5.5/lp_MPS.c ****             set_int(lp, var, TRUE);
 7654               		.loc 1 936 0
 7655 332c CE01      		movw r24,r28
 7656 332e 8A5D      		subi r24,-38
 7657 3330 9B4D      		sbci r25,-37
 7658 3332 DC01      		movw r26,r24
 7659 3334 2D91      		ld r18,X+
 7660 3336 3C91      		ld r19,X
 7661 3338 8D89      		ldd r24,Y+21
 7662 333a 9E89      		ldd r25,Y+22
 7663 333c 41E0      		ldi r20,lo8(1)
 7664 333e B901      		movw r22,r18
 7665 3340 0E94 0000 		call set_int
 7666 3344 00C0      		rjmp .L148
 7667               	.L241:
 937:lp_solve_5.5/lp_MPS.c ****           }
 938:lp_solve_5.5/lp_MPS.c ****           else {
 939:lp_solve_5.5/lp_MPS.c ****             report(lp, CRITICAL, "BOUND type %s on line %d is not supported",
 7668               		.loc 1 939 0
 7669 3346 8E81      		ldd r24,Y+6
 7670 3348 8F93      		push r24
 7671 334a 8D81      		ldd r24,Y+5
 7672 334c 8F93      		push r24
 7673 334e CE01      		movw r24,r28
 7674 3350 8696      		adiw r24,38
 7675 3352 292F      		mov r18,r25
 7676 3354 2F93      		push r18
 7677 3356 8F93      		push r24
 7678 3358 80E0      		ldi r24,lo8(.LC76)
 7679 335a 90E0      		ldi r25,hi8(.LC76)
 7680 335c 892F      		mov r24,r25
 7681 335e 8F93      		push r24
 7682 3360 80E0      		ldi r24,lo8(.LC76)
 7683 3362 90E0      		ldi r25,hi8(.LC76)
 7684 3364 8F93      		push r24
 7685 3366 1F92      		push __zero_reg__
 7686 3368 81E0      		ldi r24,lo8(1)
 7687 336a 8F93      		push r24
 7688 336c 8E89      		ldd r24,Y+22
 7689 336e 8F93      		push r24
 7690 3370 8D89      		ldd r24,Y+21
 7691 3372 8F93      		push r24
 7692 3374 0E94 0000 		call report
 7693 3378 EDB7      		in r30,__SP_L__
 7694 337a FEB7      		in r31,__SP_H__
 7695 337c 3A96      		adiw r30,10
 7696 337e 0FB6      		in __tmp_reg__,__SREG__
 7697 3380 F894      		cli
 7698 3382 DEBF      		out __SP_H__,r29
 7699 3384 0FBE      		out __SREG__,__tmp_reg__
 7700 3386 CDBF      		out __SP_L__,r28
 940:lp_solve_5.5/lp_MPS.c ****                                   field1, Lineno);
 941:lp_solve_5.5/lp_MPS.c ****             break;
 7701               		.loc 1 941 0
 7702 3388 00C0      		rjmp .L172
 7703               	.L181:
 942:lp_solve_5.5/lp_MPS.c ****           }
 943:lp_solve_5.5/lp_MPS.c **** 
 944:lp_solve_5.5/lp_MPS.c ****           continue;
 945:lp_solve_5.5/lp_MPS.c **** 
 946:lp_solve_5.5/lp_MPS.c ****           /* Process entries in the BOUNDS section */
 947:lp_solve_5.5/lp_MPS.c **** 
 948:lp_solve_5.5/lp_MPS.c ****       /* We have to implement the following semantics:
 949:lp_solve_5.5/lp_MPS.c **** 
 950:lp_solve_5.5/lp_MPS.c ****       D. The RANGES section is for constraints of the form: h <=
 951:lp_solve_5.5/lp_MPS.c ****       constraint <= u .  The range of the constraint is r = u - h .  The
 952:lp_solve_5.5/lp_MPS.c ****       value of r is specified in the RANGES section, and the value of u or
 953:lp_solve_5.5/lp_MPS.c ****       h is specified in the RHS section.  If b is the value entered in the
 954:lp_solve_5.5/lp_MPS.c ****       RHS section, and r is the value entered in the RANGES section, then
 955:lp_solve_5.5/lp_MPS.c ****       u and h are thus defined:
 956:lp_solve_5.5/lp_MPS.c **** 
 957:lp_solve_5.5/lp_MPS.c ****       row type       sign of r       h          u
 958:lp_solve_5.5/lp_MPS.c ****       ----------------------------------------------
 959:lp_solve_5.5/lp_MPS.c ****      G            + or -         b        b + |r|
 960:lp_solve_5.5/lp_MPS.c ****      L            + or -       b - |r|      b
 961:lp_solve_5.5/lp_MPS.c ****      E              +            b        b + |r|
 962:lp_solve_5.5/lp_MPS.c ****      E              -          b - |r|      b            */
 963:lp_solve_5.5/lp_MPS.c **** 
 964:lp_solve_5.5/lp_MPS.c ****         /* field2: uninteresting name; field3: constraint name */
 965:lp_solve_5.5/lp_MPS.c ****         /* field4: value */
 966:lp_solve_5.5/lp_MPS.c ****         /* optional: field5: constraint name; field6: value */
 967:lp_solve_5.5/lp_MPS.c **** 
 968:lp_solve_5.5/lp_MPS.c ****         case MPSRANGES:
 969:lp_solve_5.5/lp_MPS.c **** 
 970:lp_solve_5.5/lp_MPS.c ****           report(lp, FULL, "RANGES line: %s %s %g %s %g",
 7704               		.loc 1 970 0
 7705 338a CE01      		movw r24,r28
 7706 338c 835D      		subi r24,-45
 7707 338e 9B4D      		sbci r25,-37
 7708 3390 DC01      		movw r26,r24
 7709 3392 2D91      		ld r18,X+
 7710 3394 3D91      		ld r19,X+
 7711 3396 4D91      		ld r20,X+
 7712 3398 5C91      		ld r21,X
 7713 339a CE01      		movw r24,r28
 7714 339c 875D      		subi r24,-41
 7715 339e 9B4D      		sbci r25,-37
 7716 33a0 FC01      		movw r30,r24
 7717 33a2 8081      		ld r24,Z
 7718 33a4 9181      		ldd r25,Z+1
 7719 33a6 A281      		ldd r26,Z+2
 7720 33a8 B381      		ldd r27,Z+3
 7721 33aa 652F      		mov r22,r21
 7722 33ac 6F93      		push r22
 7723 33ae 642F      		mov r22,r20
 7724 33b0 6F93      		push r22
 7725 33b2 632F      		mov r22,r19
 7726 33b4 6F93      		push r22
 7727 33b6 2F93      		push r18
 7728 33b8 9E01      		movw r18,r28
 7729 33ba 2A5D      		subi r18,-38
 7730 33bc 334F      		sbci r19,-13
 7731 33be 432F      		mov r20,r19
 7732 33c0 4F93      		push r20
 7733 33c2 2F93      		push r18
 7734 33c4 2B2F      		mov r18,r27
 7735 33c6 2F93      		push r18
 7736 33c8 2A2F      		mov r18,r26
 7737 33ca 2F93      		push r18
 7738 33cc 292F      		mov r18,r25
 7739 33ce 2F93      		push r18
 7740 33d0 8F93      		push r24
 7741 33d2 CE01      		movw r24,r28
 7742 33d4 8A5D      		subi r24,-38
 7743 33d6 974F      		sbci r25,-9
 7744 33d8 292F      		mov r18,r25
 7745 33da 2F93      		push r18
 7746 33dc 8F93      		push r24
 7747 33de CE01      		movw r24,r28
 7748 33e0 8A5D      		subi r24,-38
 7749 33e2 9B4F      		sbci r25,-5
 7750 33e4 292F      		mov r18,r25
 7751 33e6 2F93      		push r18
 7752 33e8 8F93      		push r24
 7753 33ea 80E0      		ldi r24,lo8(.LC77)
 7754 33ec 90E0      		ldi r25,hi8(.LC77)
 7755 33ee 892F      		mov r24,r25
 7756 33f0 8F93      		push r24
 7757 33f2 80E0      		ldi r24,lo8(.LC77)
 7758 33f4 90E0      		ldi r25,hi8(.LC77)
 7759 33f6 8F93      		push r24
 7760 33f8 1F92      		push __zero_reg__
 7761 33fa 86E0      		ldi r24,lo8(6)
 7762 33fc 8F93      		push r24
 7763 33fe 8E89      		ldd r24,Y+22
 7764 3400 8F93      		push r24
 7765 3402 8D89      		ldd r24,Y+21
 7766 3404 8F93      		push r24
 7767 3406 0E94 0000 		call report
 7768 340a 2DB7      		in r18,__SP_L__
 7769 340c 3EB7      		in r19,__SP_H__
 7770 340e 2C5E      		subi r18,-20
 7771 3410 3F4F      		sbci r19,-1
 7772 3412 0FB6      		in __tmp_reg__,__SREG__
 7773 3414 F894      		cli
 7774 3416 DEBF      		out __SP_H__,r29
 7775 3418 0FBE      		out __SREG__,__tmp_reg__
 7776 341a CDBF      		out __SP_L__,r28
 971:lp_solve_5.5/lp_MPS.c ****                             field2, field3, field4, field5, field6);
 972:lp_solve_5.5/lp_MPS.c **** 
 973:lp_solve_5.5/lp_MPS.c ****           if((items != 4) && (items != 6)) {
 7777               		.loc 1 973 0
 7778 341c 8B81      		ldd r24,Y+3
 7779 341e 9C81      		ldd r25,Y+4
 7780 3420 0497      		sbiw r24,4
 7781 3422 01F0      		breq .L243
 7782               		.loc 1 973 0 is_stmt 0 discriminator 1
 7783 3424 8B81      		ldd r24,Y+3
 7784 3426 9C81      		ldd r25,Y+4
 7785 3428 0697      		sbiw r24,6
 7786 342a 01F0      		breq .L243
 974:lp_solve_5.5/lp_MPS.c ****             report(lp, CRITICAL, "Wrong number of items (%d) in RANGES section line %d",
 7787               		.loc 1 974 0 is_stmt 1
 7788 342c 8E81      		ldd r24,Y+6
 7789 342e 8F93      		push r24
 7790 3430 8D81      		ldd r24,Y+5
 7791 3432 8F93      		push r24
 7792 3434 8C81      		ldd r24,Y+4
 7793 3436 8F93      		push r24
 7794 3438 8B81      		ldd r24,Y+3
 7795 343a 8F93      		push r24
 7796 343c 80E0      		ldi r24,lo8(.LC78)
 7797 343e 90E0      		ldi r25,hi8(.LC78)
 7798 3440 892F      		mov r24,r25
 7799 3442 8F93      		push r24
 7800 3444 80E0      		ldi r24,lo8(.LC78)
 7801 3446 90E0      		ldi r25,hi8(.LC78)
 7802 3448 8F93      		push r24
 7803 344a 1F92      		push __zero_reg__
 7804 344c 81E0      		ldi r24,lo8(1)
 7805 344e 8F93      		push r24
 7806 3450 8E89      		ldd r24,Y+22
 7807 3452 8F93      		push r24
 7808 3454 8D89      		ldd r24,Y+21
 7809 3456 8F93      		push r24
 7810 3458 0E94 0000 		call report
 7811 345c 8DB7      		in r24,__SP_L__
 7812 345e 9EB7      		in r25,__SP_H__
 7813 3460 0A96      		adiw r24,10
 7814 3462 0FB6      		in __tmp_reg__,__SREG__
 7815 3464 F894      		cli
 7816 3466 DEBF      		out __SP_H__,r29
 7817 3468 0FBE      		out __SREG__,__tmp_reg__
 7818 346a CDBF      		out __SP_L__,r28
 975:lp_solve_5.5/lp_MPS.c ****                                   items, Lineno);
 976:lp_solve_5.5/lp_MPS.c ****             break;
 7819               		.loc 1 976 0
 7820 346c 00C0      		rjmp .L172
 7821               	.L243:
 977:lp_solve_5.5/lp_MPS.c ****           }
 978:lp_solve_5.5/lp_MPS.c **** 
 979:lp_solve_5.5/lp_MPS.c ****           if((row = find_row(lp, field3, Unconstrained_rows_found)) >= 0) {
 7822               		.loc 1 979 0
 7823 346e 9E01      		movw r18,r28
 7824 3470 2A5D      		subi r18,-38
 7825 3472 374F      		sbci r19,-9
 7826 3474 8D89      		ldd r24,Y+21
 7827 3476 9E89      		ldd r25,Y+22
 7828 3478 4889      		ldd r20,Y+16
 7829 347a B901      		movw r22,r18
 7830 347c 0E94 0000 		call find_row
 7831 3480 9BA3      		std Y+35,r25
 7832 3482 8AA3      		std Y+34,r24
 7833 3484 8AA1      		ldd r24,Y+34
 7834 3486 9BA1      		ldd r25,Y+35
 7835 3488 9923      		tst r25
 7836 348a 04F4      		brge .+2
 7837 348c 00C0      		rjmp .L244
 980:lp_solve_5.5/lp_MPS.c ****             /* Determine constraint type */
 981:lp_solve_5.5/lp_MPS.c **** 
 982:lp_solve_5.5/lp_MPS.c ****             if(fabs(field4) >= lp->infinite) {
 7838               		.loc 1 982 0
 7839 348e CE01      		movw r24,r28
 7840 3490 875D      		subi r24,-41
 7841 3492 9B4D      		sbci r25,-37
 7842 3494 FC01      		movw r30,r24
 7843 3496 8081      		ld r24,Z
 7844 3498 9181      		ldd r25,Z+1
 7845 349a A281      		ldd r26,Z+2
 7846 349c B381      		ldd r27,Z+3
 7847 349e BF77      		andi r27,0x7f
 7848 34a0 2D89      		ldd r18,Y+21
 7849 34a2 3E89      		ldd r19,Y+22
 7850 34a4 265F      		subi r18,-10
 7851 34a6 3C4F      		sbci r19,-4
 7852 34a8 F901      		movw r30,r18
 7853 34aa 2081      		ld r18,Z
 7854 34ac 3181      		ldd r19,Z+1
 7855 34ae 4281      		ldd r20,Z+2
 7856 34b0 5381      		ldd r21,Z+3
 7857 34b2 BC01      		movw r22,r24
 7858 34b4 CD01      		movw r24,r26
 7859 34b6 0E94 0000 		call __gesf2
 7860 34ba 8823      		tst r24
 7861 34bc 04F0      		brlt .L341
 983:lp_solve_5.5/lp_MPS.c ****               report(lp, IMPORTANT,
 7862               		.loc 1 983 0
 7863 34be CE01      		movw r24,r28
 7864 34c0 875D      		subi r24,-41
 7865 34c2 9B4D      		sbci r25,-37
 7866 34c4 FC01      		movw r30,r24
 7867 34c6 8081      		ld r24,Z
 7868 34c8 9181      		ldd r25,Z+1
 7869 34ca A281      		ldd r26,Z+2
 7870 34cc B381      		ldd r27,Z+3
 7871 34ce 2E81      		ldd r18,Y+6
 7872 34d0 2F93      		push r18
 7873 34d2 2D81      		ldd r18,Y+5
 7874 34d4 2F93      		push r18
 7875 34d6 2B2F      		mov r18,r27
 7876 34d8 2F93      		push r18
 7877 34da 2A2F      		mov r18,r26
 7878 34dc 2F93      		push r18
 7879 34de 292F      		mov r18,r25
 7880 34e0 2F93      		push r18
 7881 34e2 8F93      		push r24
 7882 34e4 CE01      		movw r24,r28
 7883 34e6 8A5D      		subi r24,-38
 7884 34e8 974F      		sbci r25,-9
 7885 34ea 292F      		mov r18,r25
 7886 34ec 2F93      		push r18
 7887 34ee 8F93      		push r24
 7888 34f0 80E0      		ldi r24,lo8(.LC79)
 7889 34f2 90E0      		ldi r25,hi8(.LC79)
 7890 34f4 892F      		mov r24,r25
 7891 34f6 8F93      		push r24
 7892 34f8 80E0      		ldi r24,lo8(.LC79)
 7893 34fa 90E0      		ldi r25,hi8(.LC79)
 7894 34fc 8F93      		push r24
 7895 34fe 1F92      		push __zero_reg__
 7896 3500 83E0      		ldi r24,lo8(3)
 7897 3502 8F93      		push r24
 7898 3504 8E89      		ldd r24,Y+22
 7899 3506 8F93      		push r24
 7900 3508 8D89      		ldd r24,Y+21
 7901 350a 8F93      		push r24
 7902 350c 0E94 0000 		call report
 7903 3510 2DB7      		in r18,__SP_L__
 7904 3512 3EB7      		in r19,__SP_H__
 7905 3514 225F      		subi r18,-14
 7906 3516 3F4F      		sbci r19,-1
 7907 3518 0FB6      		in __tmp_reg__,__SREG__
 7908 351a F894      		cli
 7909 351c DEBF      		out __SP_H__,r29
 7910 351e 0FBE      		out __SREG__,__tmp_reg__
 7911 3520 CDBF      		out __SP_L__,r28
 7912 3522 00C0      		rjmp .L244
 7913               	.L341:
 984:lp_solve_5.5/lp_MPS.c ****                           "Warning, Range for row %s >= infinity (value %g) on line %d, ignored",
 985:lp_solve_5.5/lp_MPS.c ****                           field3, field4, Lineno);
 986:lp_solve_5.5/lp_MPS.c ****             }
 987:lp_solve_5.5/lp_MPS.c ****             else if(field4 == 0) {
 7914               		.loc 1 987 0
 7915 3524 CE01      		movw r24,r28
 7916 3526 875D      		subi r24,-41
 7917 3528 9B4D      		sbci r25,-37
 7918 352a FC01      		movw r30,r24
 7919 352c 8081      		ld r24,Z
 7920 352e 9181      		ldd r25,Z+1
 7921 3530 A281      		ldd r26,Z+2
 7922 3532 B381      		ldd r27,Z+3
 7923 3534 20E0      		ldi r18,0
 7924 3536 30E0      		ldi r19,0
 7925 3538 A901      		movw r20,r18
 7926 353a BC01      		movw r22,r24
 7927 353c CD01      		movw r24,r26
 7928 353e 0E94 0000 		call __eqsf2
 7929 3542 8823      		tst r24
 7930 3544 01F4      		brne .L342
 988:lp_solve_5.5/lp_MPS.c ****               /* Change of a GE or LE to EQ */
 989:lp_solve_5.5/lp_MPS.c ****               if(lp->orig_upbo[row] != 0)
 7931               		.loc 1 989 0
 7932 3546 8D89      		ldd r24,Y+21
 7933 3548 9E89      		ldd r25,Y+22
 7934 354a 8255      		subi r24,82
 7935 354c 9D4F      		sbci r25,-3
 7936 354e DC01      		movw r26,r24
 7937 3550 2D91      		ld r18,X+
 7938 3552 3C91      		ld r19,X
 7939 3554 8AA1      		ldd r24,Y+34
 7940 3556 9BA1      		ldd r25,Y+35
 7941 3558 880F      		lsl r24
 7942 355a 991F      		rol r25
 7943 355c 880F      		lsl r24
 7944 355e 991F      		rol r25
 7945 3560 820F      		add r24,r18
 7946 3562 931F      		adc r25,r19
 7947 3564 FC01      		movw r30,r24
 7948 3566 8081      		ld r24,Z
 7949 3568 9181      		ldd r25,Z+1
 7950 356a A281      		ldd r26,Z+2
 7951 356c B381      		ldd r27,Z+3
 7952 356e 20E0      		ldi r18,0
 7953 3570 30E0      		ldi r19,0
 7954 3572 A901      		movw r20,r18
 7955 3574 BC01      		movw r22,r24
 7956 3576 CD01      		movw r24,r26
 7957 3578 0E94 0000 		call __nesf2
 7958 357c 8823      		tst r24
 7959 357e 01F4      		brne .+2
 7960 3580 00C0      		rjmp .L244
 990:lp_solve_5.5/lp_MPS.c ****                 set_constr_type(lp, row, EQ);
 7961               		.loc 1 990 0
 7962 3582 2AA1      		ldd r18,Y+34
 7963 3584 3BA1      		ldd r19,Y+35
 7964 3586 8D89      		ldd r24,Y+21
 7965 3588 9E89      		ldd r25,Y+22
 7966 358a 43E0      		ldi r20,lo8(3)
 7967 358c 50E0      		ldi r21,0
 7968 358e B901      		movw r22,r18
 7969 3590 0E94 0000 		call set_constr_type
 7970 3594 00C0      		rjmp .L244
 7971               	.L342:
 991:lp_solve_5.5/lp_MPS.c ****             }
 992:lp_solve_5.5/lp_MPS.c ****             else if(is_chsign(lp, row)) {
 7972               		.loc 1 992 0
 7973 3596 2AA1      		ldd r18,Y+34
 7974 3598 3BA1      		ldd r19,Y+35
 7975 359a 8D89      		ldd r24,Y+21
 7976 359c 9E89      		ldd r25,Y+22
 7977 359e B901      		movw r22,r18
 7978 35a0 0E94 0000 		call is_chsign
 7979 35a4 8823      		tst r24
 7980 35a6 01F0      		breq .L251
 993:lp_solve_5.5/lp_MPS.c ****               /* GE */
 994:lp_solve_5.5/lp_MPS.c ****               lp->orig_upbo[row] = fabs(field4);
 7981               		.loc 1 994 0
 7982 35a8 8D89      		ldd r24,Y+21
 7983 35aa 9E89      		ldd r25,Y+22
 7984 35ac 8255      		subi r24,82
 7985 35ae 9D4F      		sbci r25,-3
 7986 35b0 DC01      		movw r26,r24
 7987 35b2 2D91      		ld r18,X+
 7988 35b4 3C91      		ld r19,X
 7989 35b6 8AA1      		ldd r24,Y+34
 7990 35b8 9BA1      		ldd r25,Y+35
 7991 35ba 880F      		lsl r24
 7992 35bc 991F      		rol r25
 7993 35be 880F      		lsl r24
 7994 35c0 991F      		rol r25
 7995 35c2 280F      		add r18,r24
 7996 35c4 391F      		adc r19,r25
 7997 35c6 CE01      		movw r24,r28
 7998 35c8 875D      		subi r24,-41
 7999 35ca 9B4D      		sbci r25,-37
 8000 35cc FC01      		movw r30,r24
 8001 35ce 8081      		ld r24,Z
 8002 35d0 9181      		ldd r25,Z+1
 8003 35d2 A281      		ldd r26,Z+2
 8004 35d4 B381      		ldd r27,Z+3
 8005 35d6 BF77      		andi r27,0x7f
 8006 35d8 F901      		movw r30,r18
 8007 35da 8083      		st Z,r24
 8008 35dc 9183      		std Z+1,r25
 8009 35de A283      		std Z+2,r26
 8010 35e0 B383      		std Z+3,r27
 8011 35e2 00C0      		rjmp .L244
 8012               	.L251:
 995:lp_solve_5.5/lp_MPS.c ****             }
 996:lp_solve_5.5/lp_MPS.c ****             else if((lp->orig_upbo[row] == 0) && (field4 >= 0)) {
 8013               		.loc 1 996 0
 8014 35e4 8D89      		ldd r24,Y+21
 8015 35e6 9E89      		ldd r25,Y+22
 8016 35e8 8255      		subi r24,82
 8017 35ea 9D4F      		sbci r25,-3
 8018 35ec DC01      		movw r26,r24
 8019 35ee 2D91      		ld r18,X+
 8020 35f0 3C91      		ld r19,X
 8021 35f2 8AA1      		ldd r24,Y+34
 8022 35f4 9BA1      		ldd r25,Y+35
 8023 35f6 880F      		lsl r24
 8024 35f8 991F      		rol r25
 8025 35fa 880F      		lsl r24
 8026 35fc 991F      		rol r25
 8027 35fe 820F      		add r24,r18
 8028 3600 931F      		adc r25,r19
 8029 3602 FC01      		movw r30,r24
 8030 3604 8081      		ld r24,Z
 8031 3606 9181      		ldd r25,Z+1
 8032 3608 A281      		ldd r26,Z+2
 8033 360a B381      		ldd r27,Z+3
 8034 360c 20E0      		ldi r18,0
 8035 360e 30E0      		ldi r19,0
 8036 3610 A901      		movw r20,r18
 8037 3612 BC01      		movw r22,r24
 8038 3614 CD01      		movw r24,r26
 8039 3616 0E94 0000 		call __eqsf2
 8040 361a 8823      		tst r24
 8041 361c 01F4      		brne .L252
 8042               		.loc 1 996 0 is_stmt 0 discriminator 1
 8043 361e CE01      		movw r24,r28
 8044 3620 875D      		subi r24,-41
 8045 3622 9B4D      		sbci r25,-37
 8046 3624 FC01      		movw r30,r24
 8047 3626 8081      		ld r24,Z
 8048 3628 9181      		ldd r25,Z+1
 8049 362a A281      		ldd r26,Z+2
 8050 362c B381      		ldd r27,Z+3
 8051 362e 20E0      		ldi r18,0
 8052 3630 30E0      		ldi r19,0
 8053 3632 A901      		movw r20,r18
 8054 3634 BC01      		movw r22,r24
 8055 3636 CD01      		movw r24,r26
 8056 3638 0E94 0000 		call __gesf2
 8057 363c 8823      		tst r24
 8058 363e 04F0      		brlt .L252
 997:lp_solve_5.5/lp_MPS.c ****               /*  EQ with positive sign of r value */
 998:lp_solve_5.5/lp_MPS.c ****               set_constr_type(lp, row, GE);
 8059               		.loc 1 998 0 is_stmt 1
 8060 3640 2AA1      		ldd r18,Y+34
 8061 3642 3BA1      		ldd r19,Y+35
 8062 3644 8D89      		ldd r24,Y+21
 8063 3646 9E89      		ldd r25,Y+22
 8064 3648 42E0      		ldi r20,lo8(2)
 8065 364a 50E0      		ldi r21,0
 8066 364c B901      		movw r22,r18
 8067 364e 0E94 0000 		call set_constr_type
 999:lp_solve_5.5/lp_MPS.c ****               lp->orig_upbo[row] = field4;
 8068               		.loc 1 999 0
 8069 3652 8D89      		ldd r24,Y+21
 8070 3654 9E89      		ldd r25,Y+22
 8071 3656 8255      		subi r24,82
 8072 3658 9D4F      		sbci r25,-3
 8073 365a DC01      		movw r26,r24
 8074 365c 2D91      		ld r18,X+
 8075 365e 3C91      		ld r19,X
 8076 3660 8AA1      		ldd r24,Y+34
 8077 3662 9BA1      		ldd r25,Y+35
 8078 3664 880F      		lsl r24
 8079 3666 991F      		rol r25
 8080 3668 880F      		lsl r24
 8081 366a 991F      		rol r25
 8082 366c 280F      		add r18,r24
 8083 366e 391F      		adc r19,r25
 8084 3670 CE01      		movw r24,r28
 8085 3672 875D      		subi r24,-41
 8086 3674 9B4D      		sbci r25,-37
 8087 3676 FC01      		movw r30,r24
 8088 3678 8081      		ld r24,Z
 8089 367a 9181      		ldd r25,Z+1
 8090 367c A281      		ldd r26,Z+2
 8091 367e B381      		ldd r27,Z+3
 8092 3680 F901      		movw r30,r18
 8093 3682 8083      		st Z,r24
 8094 3684 9183      		std Z+1,r25
 8095 3686 A283      		std Z+2,r26
 8096 3688 B383      		std Z+3,r27
 8097 368a 00C0      		rjmp .L244
 8098               	.L252:
1000:lp_solve_5.5/lp_MPS.c ****             }
1001:lp_solve_5.5/lp_MPS.c ****             else if(lp->orig_upbo[row] == lp->infinite) {
 8099               		.loc 1 1001 0
 8100 368c 8D89      		ldd r24,Y+21
 8101 368e 9E89      		ldd r25,Y+22
 8102 3690 8255      		subi r24,82
 8103 3692 9D4F      		sbci r25,-3
 8104 3694 DC01      		movw r26,r24
 8105 3696 2D91      		ld r18,X+
 8106 3698 3C91      		ld r19,X
 8107 369a 8AA1      		ldd r24,Y+34
 8108 369c 9BA1      		ldd r25,Y+35
 8109 369e 880F      		lsl r24
 8110 36a0 991F      		rol r25
 8111 36a2 880F      		lsl r24
 8112 36a4 991F      		rol r25
 8113 36a6 820F      		add r24,r18
 8114 36a8 931F      		adc r25,r19
 8115 36aa FC01      		movw r30,r24
 8116 36ac 8081      		ld r24,Z
 8117 36ae 9181      		ldd r25,Z+1
 8118 36b0 A281      		ldd r26,Z+2
 8119 36b2 B381      		ldd r27,Z+3
 8120 36b4 2D89      		ldd r18,Y+21
 8121 36b6 3E89      		ldd r19,Y+22
 8122 36b8 265F      		subi r18,-10
 8123 36ba 3C4F      		sbci r19,-4
 8124 36bc F901      		movw r30,r18
 8125 36be 2081      		ld r18,Z
 8126 36c0 3181      		ldd r19,Z+1
 8127 36c2 4281      		ldd r20,Z+2
 8128 36c4 5381      		ldd r21,Z+3
 8129 36c6 BC01      		movw r22,r24
 8130 36c8 CD01      		movw r24,r26
 8131 36ca 0E94 0000 		call __eqsf2
 8132 36ce 8823      		tst r24
 8133 36d0 01F4      		brne .L343
1002:lp_solve_5.5/lp_MPS.c ****               /* LE */
1003:lp_solve_5.5/lp_MPS.c ****               lp->orig_upbo[row] = fabs(field4);
 8134               		.loc 1 1003 0
 8135 36d2 8D89      		ldd r24,Y+21
 8136 36d4 9E89      		ldd r25,Y+22
 8137 36d6 8255      		subi r24,82
 8138 36d8 9D4F      		sbci r25,-3
 8139 36da DC01      		movw r26,r24
 8140 36dc 2D91      		ld r18,X+
 8141 36de 3C91      		ld r19,X
 8142 36e0 8AA1      		ldd r24,Y+34
 8143 36e2 9BA1      		ldd r25,Y+35
 8144 36e4 880F      		lsl r24
 8145 36e6 991F      		rol r25
 8146 36e8 880F      		lsl r24
 8147 36ea 991F      		rol r25
 8148 36ec 280F      		add r18,r24
 8149 36ee 391F      		adc r19,r25
 8150 36f0 CE01      		movw r24,r28
 8151 36f2 875D      		subi r24,-41
 8152 36f4 9B4D      		sbci r25,-37
 8153 36f6 FC01      		movw r30,r24
 8154 36f8 8081      		ld r24,Z
 8155 36fa 9181      		ldd r25,Z+1
 8156 36fc A281      		ldd r26,Z+2
 8157 36fe B381      		ldd r27,Z+3
 8158 3700 BF77      		andi r27,0x7f
 8159 3702 F901      		movw r30,r18
 8160 3704 8083      		st Z,r24
 8161 3706 9183      		std Z+1,r25
 8162 3708 A283      		std Z+2,r26
 8163 370a B383      		std Z+3,r27
 8164 370c 00C0      		rjmp .L244
 8165               	.L343:
1004:lp_solve_5.5/lp_MPS.c ****             }
1005:lp_solve_5.5/lp_MPS.c ****             else if((lp->orig_upbo[row] == 0) && (field4 < 0)) {
 8166               		.loc 1 1005 0
 8167 370e 8D89      		ldd r24,Y+21
 8168 3710 9E89      		ldd r25,Y+22
 8169 3712 8255      		subi r24,82
 8170 3714 9D4F      		sbci r25,-3
 8171 3716 DC01      		movw r26,r24
 8172 3718 2D91      		ld r18,X+
 8173 371a 3C91      		ld r19,X
 8174 371c 8AA1      		ldd r24,Y+34
 8175 371e 9BA1      		ldd r25,Y+35
 8176 3720 880F      		lsl r24
 8177 3722 991F      		rol r25
 8178 3724 880F      		lsl r24
 8179 3726 991F      		rol r25
 8180 3728 820F      		add r24,r18
 8181 372a 931F      		adc r25,r19
 8182 372c FC01      		movw r30,r24
 8183 372e 8081      		ld r24,Z
 8184 3730 9181      		ldd r25,Z+1
 8185 3732 A281      		ldd r26,Z+2
 8186 3734 B381      		ldd r27,Z+3
 8187 3736 20E0      		ldi r18,0
 8188 3738 30E0      		ldi r19,0
 8189 373a A901      		movw r20,r18
 8190 373c BC01      		movw r22,r24
 8191 373e CD01      		movw r24,r26
 8192 3740 0E94 0000 		call __eqsf2
 8193 3744 8823      		tst r24
 8194 3746 01F0      		breq .+2
 8195 3748 00C0      		rjmp .L257
 8196               		.loc 1 1005 0 is_stmt 0 discriminator 1
 8197 374a CE01      		movw r24,r28
 8198 374c 875D      		subi r24,-41
 8199 374e 9B4D      		sbci r25,-37
 8200 3750 FC01      		movw r30,r24
 8201 3752 8081      		ld r24,Z
 8202 3754 9181      		ldd r25,Z+1
 8203 3756 A281      		ldd r26,Z+2
 8204 3758 B381      		ldd r27,Z+3
 8205 375a 20E0      		ldi r18,0
 8206 375c 30E0      		ldi r19,0
 8207 375e A901      		movw r20,r18
 8208 3760 BC01      		movw r22,r24
 8209 3762 CD01      		movw r24,r26
 8210 3764 0E94 0000 		call __ltsf2
 8211 3768 8823      		tst r24
 8212 376a 04F4      		brge .L257
1006:lp_solve_5.5/lp_MPS.c ****               /* EQ with negative sign of r value */
1007:lp_solve_5.5/lp_MPS.c ****               set_constr_type(lp, row, LE);
 8213               		.loc 1 1007 0 is_stmt 1
 8214 376c 2AA1      		ldd r18,Y+34
 8215 376e 3BA1      		ldd r19,Y+35
 8216 3770 8D89      		ldd r24,Y+21
 8217 3772 9E89      		ldd r25,Y+22
 8218 3774 41E0      		ldi r20,lo8(1)
 8219 3776 50E0      		ldi r21,0
 8220 3778 B901      		movw r22,r18
 8221 377a 0E94 0000 		call set_constr_type
1008:lp_solve_5.5/lp_MPS.c ****               lp->orig_upbo[row] = my_flipsign(field4);
 8222               		.loc 1 1008 0
 8223 377e 8D89      		ldd r24,Y+21
 8224 3780 9E89      		ldd r25,Y+22
 8225 3782 8255      		subi r24,82
 8226 3784 9D4F      		sbci r25,-3
 8227 3786 DC01      		movw r26,r24
 8228 3788 2D91      		ld r18,X+
 8229 378a 3C91      		ld r19,X
 8230 378c 8AA1      		ldd r24,Y+34
 8231 378e 9BA1      		ldd r25,Y+35
 8232 3790 880F      		lsl r24
 8233 3792 991F      		rol r25
 8234 3794 880F      		lsl r24
 8235 3796 991F      		rol r25
 8236 3798 8901      		movw r16,r18
 8237 379a 080F      		add r16,r24
 8238 379c 191F      		adc r17,r25
 8239 379e CE01      		movw r24,r28
 8240 37a0 875D      		subi r24,-41
 8241 37a2 9B4D      		sbci r25,-37
 8242 37a4 FC01      		movw r30,r24
 8243 37a6 8081      		ld r24,Z
 8244 37a8 9181      		ldd r25,Z+1
 8245 37aa A281      		ldd r26,Z+2
 8246 37ac B381      		ldd r27,Z+3
 8247 37ae 20E0      		ldi r18,0
 8248 37b0 30E0      		ldi r19,0
 8249 37b2 A901      		movw r20,r18
 8250 37b4 BC01      		movw r22,r24
 8251 37b6 CD01      		movw r24,r26
 8252 37b8 0E94 0000 		call __nesf2
 8253 37bc 8823      		tst r24
 8254 37be 01F0      		breq .L344
 8255               		.loc 1 1008 0 is_stmt 0 discriminator 1
 8256 37c0 CE01      		movw r24,r28
 8257 37c2 875D      		subi r24,-41
 8258 37c4 9B4D      		sbci r25,-37
 8259 37c6 FC01      		movw r30,r24
 8260 37c8 8081      		ld r24,Z
 8261 37ca 9181      		ldd r25,Z+1
 8262 37cc A281      		ldd r26,Z+2
 8263 37ce B381      		ldd r27,Z+3
 8264 37d0 B058      		subi r27,0x80
 8265 37d2 00C0      		rjmp .L262
 8266               	.L344:
 8267               		.loc 1 1008 0 discriminator 2
 8268 37d4 80E0      		ldi r24,0
 8269 37d6 90E0      		ldi r25,0
 8270 37d8 DC01      		movw r26,r24
 8271               	.L262:
 8272               		.loc 1 1008 0 discriminator 4
 8273 37da F801      		movw r30,r16
 8274 37dc 8083      		st Z,r24
 8275 37de 9183      		std Z+1,r25
 8276 37e0 A283      		std Z+2,r26
 8277 37e2 B383      		std Z+3,r27
 8278 37e4 00C0      		rjmp .L244
 8279               	.L257:
1009:lp_solve_5.5/lp_MPS.c ****             }
1010:lp_solve_5.5/lp_MPS.c ****             else { /* let's be paranoid */
1011:lp_solve_5.5/lp_MPS.c ****               report(lp, IMPORTANT,
1012:lp_solve_5.5/lp_MPS.c ****                           "Cannot figure out row type, row = %d, is_chsign = %d, upbo = %g on line 
1013:lp_solve_5.5/lp_MPS.c ****                           row, is_chsign(lp, row), (double)lp->orig_upbo[row], Lineno);
 8280               		.loc 1 1013 0 is_stmt 1
 8281 37e6 8D89      		ldd r24,Y+21
 8282 37e8 9E89      		ldd r25,Y+22
 8283 37ea 8255      		subi r24,82
 8284 37ec 9D4F      		sbci r25,-3
 8285 37ee DC01      		movw r26,r24
 8286 37f0 2D91      		ld r18,X+
 8287 37f2 3C91      		ld r19,X
 8288 37f4 8AA1      		ldd r24,Y+34
 8289 37f6 9BA1      		ldd r25,Y+35
 8290 37f8 880F      		lsl r24
 8291 37fa 991F      		rol r25
 8292 37fc 880F      		lsl r24
 8293 37fe 991F      		rol r25
 8294 3800 820F      		add r24,r18
 8295 3802 931F      		adc r25,r19
1011:lp_solve_5.5/lp_MPS.c ****                           "Cannot figure out row type, row = %d, is_chsign = %d, upbo = %g on line 
 8296               		.loc 1 1011 0
 8297 3804 FC01      		movw r30,r24
 8298 3806 C080      		ld r12,Z
 8299 3808 D180      		ldd r13,Z+1
 8300 380a E280      		ldd r14,Z+2
 8301 380c F380      		ldd r15,Z+3
 8302               		.loc 1 1013 0
 8303 380e 2AA1      		ldd r18,Y+34
 8304 3810 3BA1      		ldd r19,Y+35
 8305 3812 8D89      		ldd r24,Y+21
 8306 3814 9E89      		ldd r25,Y+22
 8307 3816 B901      		movw r22,r18
 8308 3818 0E94 0000 		call is_chsign
1011:lp_solve_5.5/lp_MPS.c ****                           "Cannot figure out row type, row = %d, is_chsign = %d, upbo = %g on line 
 8309               		.loc 1 1011 0
 8310 381c 882F      		mov r24,r24
 8311 381e 90E0      		ldi r25,0
 8312 3820 2E81      		ldd r18,Y+6
 8313 3822 2F93      		push r18
 8314 3824 2D81      		ldd r18,Y+5
 8315 3826 2F93      		push r18
 8316 3828 2F2D      		mov r18,r15
 8317 382a 2F93      		push r18
 8318 382c 2E2D      		mov r18,r14
 8319 382e 2F93      		push r18
 8320 3830 2D2D      		mov r18,r13
 8321 3832 2F93      		push r18
 8322 3834 2C2D      		mov r18,r12
 8323 3836 2F93      		push r18
 8324 3838 292F      		mov r18,r25
 8325 383a 2F93      		push r18
 8326 383c 8F93      		push r24
 8327 383e 8BA1      		ldd r24,Y+35
 8328 3840 8F93      		push r24
 8329 3842 8AA1      		ldd r24,Y+34
 8330 3844 8F93      		push r24
 8331 3846 80E0      		ldi r24,lo8(.LC80)
 8332 3848 90E0      		ldi r25,hi8(.LC80)
 8333 384a 892F      		mov r24,r25
 8334 384c 8F93      		push r24
 8335 384e 80E0      		ldi r24,lo8(.LC80)
 8336 3850 90E0      		ldi r25,hi8(.LC80)
 8337 3852 8F93      		push r24
 8338 3854 1F92      		push __zero_reg__
 8339 3856 83E0      		ldi r24,lo8(3)
 8340 3858 8F93      		push r24
 8341 385a 8E89      		ldd r24,Y+22
 8342 385c 8F93      		push r24
 8343 385e 8D89      		ldd r24,Y+21
 8344 3860 8F93      		push r24
 8345 3862 0E94 0000 		call report
 8346 3866 2DB7      		in r18,__SP_L__
 8347 3868 3EB7      		in r19,__SP_H__
 8348 386a 205F      		subi r18,-16
 8349 386c 3F4F      		sbci r19,-1
 8350 386e 0FB6      		in __tmp_reg__,__SREG__
 8351 3870 F894      		cli
 8352 3872 DEBF      		out __SP_H__,r29
 8353 3874 0FBE      		out __SREG__,__tmp_reg__
 8354 3876 CDBF      		out __SP_L__,r28
 8355               	.L244:
1014:lp_solve_5.5/lp_MPS.c ****             }
1015:lp_solve_5.5/lp_MPS.c ****           }
1016:lp_solve_5.5/lp_MPS.c **** 
1017:lp_solve_5.5/lp_MPS.c ****           if(items == 6) {
 8356               		.loc 1 1017 0
 8357 3878 8B81      		ldd r24,Y+3
 8358 387a 9C81      		ldd r25,Y+4
 8359 387c 0697      		sbiw r24,6
 8360 387e 01F0      		breq .+2
 8361 3880 00C0      		rjmp .L148
1018:lp_solve_5.5/lp_MPS.c ****             if((row = find_row(lp, field5, Unconstrained_rows_found)) >= 0) {
 8362               		.loc 1 1018 0
 8363 3882 9E01      		movw r18,r28
 8364 3884 2A5D      		subi r18,-38
 8365 3886 334F      		sbci r19,-13
 8366 3888 8D89      		ldd r24,Y+21
 8367 388a 9E89      		ldd r25,Y+22
 8368 388c 4889      		ldd r20,Y+16
 8369 388e B901      		movw r22,r18
 8370 3890 0E94 0000 		call find_row
 8371 3894 9BA3      		std Y+35,r25
 8372 3896 8AA3      		std Y+34,r24
 8373 3898 8AA1      		ldd r24,Y+34
 8374 389a 9BA1      		ldd r25,Y+35
 8375 389c 9923      		tst r25
 8376 389e 04F4      		brge .+2
 8377 38a0 00C0      		rjmp .L148
1019:lp_solve_5.5/lp_MPS.c ****               /* Determine constraint type */
1020:lp_solve_5.5/lp_MPS.c **** 
1021:lp_solve_5.5/lp_MPS.c ****               if(fabs(field6) >= lp->infinite) {
 8378               		.loc 1 1021 0
 8379 38a2 CE01      		movw r24,r28
 8380 38a4 835D      		subi r24,-45
 8381 38a6 9B4D      		sbci r25,-37
 8382 38a8 FC01      		movw r30,r24
 8383 38aa 8081      		ld r24,Z
 8384 38ac 9181      		ldd r25,Z+1
 8385 38ae A281      		ldd r26,Z+2
 8386 38b0 B381      		ldd r27,Z+3
 8387 38b2 BF77      		andi r27,0x7f
 8388 38b4 2D89      		ldd r18,Y+21
 8389 38b6 3E89      		ldd r19,Y+22
 8390 38b8 265F      		subi r18,-10
 8391 38ba 3C4F      		sbci r19,-4
 8392 38bc F901      		movw r30,r18
 8393 38be 2081      		ld r18,Z
 8394 38c0 3181      		ldd r19,Z+1
 8395 38c2 4281      		ldd r20,Z+2
 8396 38c4 5381      		ldd r21,Z+3
 8397 38c6 BC01      		movw r22,r24
 8398 38c8 CD01      		movw r24,r26
 8399 38ca 0E94 0000 		call __gesf2
 8400 38ce 8823      		tst r24
 8401 38d0 04F0      		brlt .L345
1022:lp_solve_5.5/lp_MPS.c ****                 report(lp, IMPORTANT,
 8402               		.loc 1 1022 0
 8403 38d2 CE01      		movw r24,r28
 8404 38d4 835D      		subi r24,-45
 8405 38d6 9B4D      		sbci r25,-37
 8406 38d8 FC01      		movw r30,r24
 8407 38da 8081      		ld r24,Z
 8408 38dc 9181      		ldd r25,Z+1
 8409 38de A281      		ldd r26,Z+2
 8410 38e0 B381      		ldd r27,Z+3
 8411 38e2 2E81      		ldd r18,Y+6
 8412 38e4 2F93      		push r18
 8413 38e6 2D81      		ldd r18,Y+5
 8414 38e8 2F93      		push r18
 8415 38ea 2B2F      		mov r18,r27
 8416 38ec 2F93      		push r18
 8417 38ee 2A2F      		mov r18,r26
 8418 38f0 2F93      		push r18
 8419 38f2 292F      		mov r18,r25
 8420 38f4 2F93      		push r18
 8421 38f6 8F93      		push r24
 8422 38f8 CE01      		movw r24,r28
 8423 38fa 8A5D      		subi r24,-38
 8424 38fc 934F      		sbci r25,-13
 8425 38fe 292F      		mov r18,r25
 8426 3900 2F93      		push r18
 8427 3902 8F93      		push r24
 8428 3904 80E0      		ldi r24,lo8(.LC79)
 8429 3906 90E0      		ldi r25,hi8(.LC79)
 8430 3908 892F      		mov r24,r25
 8431 390a 8F93      		push r24
 8432 390c 80E0      		ldi r24,lo8(.LC79)
 8433 390e 90E0      		ldi r25,hi8(.LC79)
 8434 3910 8F93      		push r24
 8435 3912 1F92      		push __zero_reg__
 8436 3914 83E0      		ldi r24,lo8(3)
 8437 3916 8F93      		push r24
 8438 3918 8E89      		ldd r24,Y+22
 8439 391a 8F93      		push r24
 8440 391c 8D89      		ldd r24,Y+21
 8441 391e 8F93      		push r24
 8442 3920 0E94 0000 		call report
 8443 3924 2DB7      		in r18,__SP_L__
 8444 3926 3EB7      		in r19,__SP_H__
 8445 3928 225F      		subi r18,-14
 8446 392a 3F4F      		sbci r19,-1
 8447 392c 0FB6      		in __tmp_reg__,__SREG__
 8448 392e F894      		cli
 8449 3930 DEBF      		out __SP_H__,r29
 8450 3932 0FBE      		out __SREG__,__tmp_reg__
 8451 3934 CDBF      		out __SP_L__,r28
 8452 3936 00C0      		rjmp .L148
 8453               	.L345:
1023:lp_solve_5.5/lp_MPS.c ****                             "Warning, Range for row %s >= infinity (value %g) on line %d, ignored",
1024:lp_solve_5.5/lp_MPS.c ****                             field5, field6, Lineno);
1025:lp_solve_5.5/lp_MPS.c ****               }
1026:lp_solve_5.5/lp_MPS.c ****               else if(field6 == 0) {
 8454               		.loc 1 1026 0
 8455 3938 CE01      		movw r24,r28
 8456 393a 835D      		subi r24,-45
 8457 393c 9B4D      		sbci r25,-37
 8458 393e FC01      		movw r30,r24
 8459 3940 8081      		ld r24,Z
 8460 3942 9181      		ldd r25,Z+1
 8461 3944 A281      		ldd r26,Z+2
 8462 3946 B381      		ldd r27,Z+3
 8463 3948 20E0      		ldi r18,0
 8464 394a 30E0      		ldi r19,0
 8465 394c A901      		movw r20,r18
 8466 394e BC01      		movw r22,r24
 8467 3950 CD01      		movw r24,r26
 8468 3952 0E94 0000 		call __eqsf2
 8469 3956 8823      		tst r24
 8470 3958 01F4      		brne .L346
1027:lp_solve_5.5/lp_MPS.c ****                 /* Change of a GE or LE to EQ */
1028:lp_solve_5.5/lp_MPS.c ****                 if(lp->orig_upbo[row] != 0)
 8471               		.loc 1 1028 0
 8472 395a 8D89      		ldd r24,Y+21
 8473 395c 9E89      		ldd r25,Y+22
 8474 395e 8255      		subi r24,82
 8475 3960 9D4F      		sbci r25,-3
 8476 3962 DC01      		movw r26,r24
 8477 3964 2D91      		ld r18,X+
 8478 3966 3C91      		ld r19,X
 8479 3968 8AA1      		ldd r24,Y+34
 8480 396a 9BA1      		ldd r25,Y+35
 8481 396c 880F      		lsl r24
 8482 396e 991F      		rol r25
 8483 3970 880F      		lsl r24
 8484 3972 991F      		rol r25
 8485 3974 820F      		add r24,r18
 8486 3976 931F      		adc r25,r19
 8487 3978 FC01      		movw r30,r24
 8488 397a 8081      		ld r24,Z
 8489 397c 9181      		ldd r25,Z+1
 8490 397e A281      		ldd r26,Z+2
 8491 3980 B381      		ldd r27,Z+3
 8492 3982 20E0      		ldi r18,0
 8493 3984 30E0      		ldi r19,0
 8494 3986 A901      		movw r20,r18
 8495 3988 BC01      		movw r22,r24
 8496 398a CD01      		movw r24,r26
 8497 398c 0E94 0000 		call __nesf2
 8498 3990 8823      		tst r24
 8499 3992 01F4      		brne .+2
 8500 3994 00C0      		rjmp .L263
1029:lp_solve_5.5/lp_MPS.c ****                   set_constr_type(lp, row, EQ);
 8501               		.loc 1 1029 0
 8502 3996 2AA1      		ldd r18,Y+34
 8503 3998 3BA1      		ldd r19,Y+35
 8504 399a 8D89      		ldd r24,Y+21
 8505 399c 9E89      		ldd r25,Y+22
 8506 399e 43E0      		ldi r20,lo8(3)
 8507 39a0 50E0      		ldi r21,0
 8508 39a2 B901      		movw r22,r18
 8509 39a4 0E94 0000 		call set_constr_type
 8510 39a8 00C0      		rjmp .L148
 8511               	.L346:
1030:lp_solve_5.5/lp_MPS.c ****               }
1031:lp_solve_5.5/lp_MPS.c ****               else if(is_chsign(lp, row)) {
 8512               		.loc 1 1031 0
 8513 39aa 2AA1      		ldd r18,Y+34
 8514 39ac 3BA1      		ldd r19,Y+35
 8515 39ae 8D89      		ldd r24,Y+21
 8516 39b0 9E89      		ldd r25,Y+22
 8517 39b2 B901      		movw r22,r18
 8518 39b4 0E94 0000 		call is_chsign
 8519 39b8 8823      		tst r24
 8520 39ba 01F0      		breq .L270
1032:lp_solve_5.5/lp_MPS.c ****                 /* GE */
1033:lp_solve_5.5/lp_MPS.c ****                 lp->orig_upbo[row] = fabs(field6);
 8521               		.loc 1 1033 0
 8522 39bc 8D89      		ldd r24,Y+21
 8523 39be 9E89      		ldd r25,Y+22
 8524 39c0 8255      		subi r24,82
 8525 39c2 9D4F      		sbci r25,-3
 8526 39c4 DC01      		movw r26,r24
 8527 39c6 2D91      		ld r18,X+
 8528 39c8 3C91      		ld r19,X
 8529 39ca 8AA1      		ldd r24,Y+34
 8530 39cc 9BA1      		ldd r25,Y+35
 8531 39ce 880F      		lsl r24
 8532 39d0 991F      		rol r25
 8533 39d2 880F      		lsl r24
 8534 39d4 991F      		rol r25
 8535 39d6 280F      		add r18,r24
 8536 39d8 391F      		adc r19,r25
 8537 39da CE01      		movw r24,r28
 8538 39dc 835D      		subi r24,-45
 8539 39de 9B4D      		sbci r25,-37
 8540 39e0 FC01      		movw r30,r24
 8541 39e2 8081      		ld r24,Z
 8542 39e4 9181      		ldd r25,Z+1
 8543 39e6 A281      		ldd r26,Z+2
 8544 39e8 B381      		ldd r27,Z+3
 8545 39ea BF77      		andi r27,0x7f
 8546 39ec F901      		movw r30,r18
 8547 39ee 8083      		st Z,r24
 8548 39f0 9183      		std Z+1,r25
 8549 39f2 A283      		std Z+2,r26
 8550 39f4 B383      		std Z+3,r27
 8551 39f6 00C0      		rjmp .L148
 8552               	.L270:
1034:lp_solve_5.5/lp_MPS.c ****               }
1035:lp_solve_5.5/lp_MPS.c ****               else if(lp->orig_upbo[row] == 0 && field6 >= 0) {
 8553               		.loc 1 1035 0
 8554 39f8 8D89      		ldd r24,Y+21
 8555 39fa 9E89      		ldd r25,Y+22
 8556 39fc 8255      		subi r24,82
 8557 39fe 9D4F      		sbci r25,-3
 8558 3a00 DC01      		movw r26,r24
 8559 3a02 2D91      		ld r18,X+
 8560 3a04 3C91      		ld r19,X
 8561 3a06 8AA1      		ldd r24,Y+34
 8562 3a08 9BA1      		ldd r25,Y+35
 8563 3a0a 880F      		lsl r24
 8564 3a0c 991F      		rol r25
 8565 3a0e 880F      		lsl r24
 8566 3a10 991F      		rol r25
 8567 3a12 820F      		add r24,r18
 8568 3a14 931F      		adc r25,r19
 8569 3a16 FC01      		movw r30,r24
 8570 3a18 8081      		ld r24,Z
 8571 3a1a 9181      		ldd r25,Z+1
 8572 3a1c A281      		ldd r26,Z+2
 8573 3a1e B381      		ldd r27,Z+3
 8574 3a20 20E0      		ldi r18,0
 8575 3a22 30E0      		ldi r19,0
 8576 3a24 A901      		movw r20,r18
 8577 3a26 BC01      		movw r22,r24
 8578 3a28 CD01      		movw r24,r26
 8579 3a2a 0E94 0000 		call __eqsf2
 8580 3a2e 8823      		tst r24
 8581 3a30 01F4      		brne .L271
 8582               		.loc 1 1035 0 is_stmt 0 discriminator 1
 8583 3a32 CE01      		movw r24,r28
 8584 3a34 835D      		subi r24,-45
 8585 3a36 9B4D      		sbci r25,-37
 8586 3a38 FC01      		movw r30,r24
 8587 3a3a 8081      		ld r24,Z
 8588 3a3c 9181      		ldd r25,Z+1
 8589 3a3e A281      		ldd r26,Z+2
 8590 3a40 B381      		ldd r27,Z+3
 8591 3a42 20E0      		ldi r18,0
 8592 3a44 30E0      		ldi r19,0
 8593 3a46 A901      		movw r20,r18
 8594 3a48 BC01      		movw r22,r24
 8595 3a4a CD01      		movw r24,r26
 8596 3a4c 0E94 0000 		call __gesf2
 8597 3a50 8823      		tst r24
 8598 3a52 04F0      		brlt .L271
1036:lp_solve_5.5/lp_MPS.c ****                 /*  EQ with positive sign of r value */
1037:lp_solve_5.5/lp_MPS.c ****                 set_constr_type(lp, row, GE);
 8599               		.loc 1 1037 0 is_stmt 1
 8600 3a54 2AA1      		ldd r18,Y+34
 8601 3a56 3BA1      		ldd r19,Y+35
 8602 3a58 8D89      		ldd r24,Y+21
 8603 3a5a 9E89      		ldd r25,Y+22
 8604 3a5c 42E0      		ldi r20,lo8(2)
 8605 3a5e 50E0      		ldi r21,0
 8606 3a60 B901      		movw r22,r18
 8607 3a62 0E94 0000 		call set_constr_type
1038:lp_solve_5.5/lp_MPS.c ****                 lp->orig_upbo[row] = field6;
 8608               		.loc 1 1038 0
 8609 3a66 8D89      		ldd r24,Y+21
 8610 3a68 9E89      		ldd r25,Y+22
 8611 3a6a 8255      		subi r24,82
 8612 3a6c 9D4F      		sbci r25,-3
 8613 3a6e DC01      		movw r26,r24
 8614 3a70 2D91      		ld r18,X+
 8615 3a72 3C91      		ld r19,X
 8616 3a74 8AA1      		ldd r24,Y+34
 8617 3a76 9BA1      		ldd r25,Y+35
 8618 3a78 880F      		lsl r24
 8619 3a7a 991F      		rol r25
 8620 3a7c 880F      		lsl r24
 8621 3a7e 991F      		rol r25
 8622 3a80 280F      		add r18,r24
 8623 3a82 391F      		adc r19,r25
 8624 3a84 CE01      		movw r24,r28
 8625 3a86 835D      		subi r24,-45
 8626 3a88 9B4D      		sbci r25,-37
 8627 3a8a FC01      		movw r30,r24
 8628 3a8c 8081      		ld r24,Z
 8629 3a8e 9181      		ldd r25,Z+1
 8630 3a90 A281      		ldd r26,Z+2
 8631 3a92 B381      		ldd r27,Z+3
 8632 3a94 F901      		movw r30,r18
 8633 3a96 8083      		st Z,r24
 8634 3a98 9183      		std Z+1,r25
 8635 3a9a A283      		std Z+2,r26
 8636 3a9c B383      		std Z+3,r27
 8637 3a9e 00C0      		rjmp .L263
 8638               	.L271:
1039:lp_solve_5.5/lp_MPS.c ****               }
1040:lp_solve_5.5/lp_MPS.c ****               else if(lp->orig_upbo[row] == lp->infinite) {
 8639               		.loc 1 1040 0
 8640 3aa0 8D89      		ldd r24,Y+21
 8641 3aa2 9E89      		ldd r25,Y+22
 8642 3aa4 8255      		subi r24,82
 8643 3aa6 9D4F      		sbci r25,-3
 8644 3aa8 DC01      		movw r26,r24
 8645 3aaa 2D91      		ld r18,X+
 8646 3aac 3C91      		ld r19,X
 8647 3aae 8AA1      		ldd r24,Y+34
 8648 3ab0 9BA1      		ldd r25,Y+35
 8649 3ab2 880F      		lsl r24
 8650 3ab4 991F      		rol r25
 8651 3ab6 880F      		lsl r24
 8652 3ab8 991F      		rol r25
 8653 3aba 820F      		add r24,r18
 8654 3abc 931F      		adc r25,r19
 8655 3abe FC01      		movw r30,r24
 8656 3ac0 8081      		ld r24,Z
 8657 3ac2 9181      		ldd r25,Z+1
 8658 3ac4 A281      		ldd r26,Z+2
 8659 3ac6 B381      		ldd r27,Z+3
 8660 3ac8 2D89      		ldd r18,Y+21
 8661 3aca 3E89      		ldd r19,Y+22
 8662 3acc 265F      		subi r18,-10
 8663 3ace 3C4F      		sbci r19,-4
 8664 3ad0 F901      		movw r30,r18
 8665 3ad2 2081      		ld r18,Z
 8666 3ad4 3181      		ldd r19,Z+1
 8667 3ad6 4281      		ldd r20,Z+2
 8668 3ad8 5381      		ldd r21,Z+3
 8669 3ada BC01      		movw r22,r24
 8670 3adc CD01      		movw r24,r26
 8671 3ade 0E94 0000 		call __eqsf2
 8672 3ae2 8823      		tst r24
 8673 3ae4 01F4      		brne .L347
1041:lp_solve_5.5/lp_MPS.c ****                 /* LE */
1042:lp_solve_5.5/lp_MPS.c ****                 lp->orig_upbo[row] = fabs(field6);
 8674               		.loc 1 1042 0
 8675 3ae6 8D89      		ldd r24,Y+21
 8676 3ae8 9E89      		ldd r25,Y+22
 8677 3aea 8255      		subi r24,82
 8678 3aec 9D4F      		sbci r25,-3
 8679 3aee DC01      		movw r26,r24
 8680 3af0 2D91      		ld r18,X+
 8681 3af2 3C91      		ld r19,X
 8682 3af4 8AA1      		ldd r24,Y+34
 8683 3af6 9BA1      		ldd r25,Y+35
 8684 3af8 880F      		lsl r24
 8685 3afa 991F      		rol r25
 8686 3afc 880F      		lsl r24
 8687 3afe 991F      		rol r25
 8688 3b00 280F      		add r18,r24
 8689 3b02 391F      		adc r19,r25
 8690 3b04 CE01      		movw r24,r28
 8691 3b06 835D      		subi r24,-45
 8692 3b08 9B4D      		sbci r25,-37
 8693 3b0a FC01      		movw r30,r24
 8694 3b0c 8081      		ld r24,Z
 8695 3b0e 9181      		ldd r25,Z+1
 8696 3b10 A281      		ldd r26,Z+2
 8697 3b12 B381      		ldd r27,Z+3
 8698 3b14 BF77      		andi r27,0x7f
 8699 3b16 F901      		movw r30,r18
 8700 3b18 8083      		st Z,r24
 8701 3b1a 9183      		std Z+1,r25
 8702 3b1c A283      		std Z+2,r26
 8703 3b1e B383      		std Z+3,r27
 8704 3b20 00C0      		rjmp .L148
 8705               	.L347:
1043:lp_solve_5.5/lp_MPS.c ****               }
1044:lp_solve_5.5/lp_MPS.c ****               else if((lp->orig_upbo[row] == 0) && (field6 < 0)) {
 8706               		.loc 1 1044 0
 8707 3b22 8D89      		ldd r24,Y+21
 8708 3b24 9E89      		ldd r25,Y+22
 8709 3b26 8255      		subi r24,82
 8710 3b28 9D4F      		sbci r25,-3
 8711 3b2a DC01      		movw r26,r24
 8712 3b2c 2D91      		ld r18,X+
 8713 3b2e 3C91      		ld r19,X
 8714 3b30 8AA1      		ldd r24,Y+34
 8715 3b32 9BA1      		ldd r25,Y+35
 8716 3b34 880F      		lsl r24
 8717 3b36 991F      		rol r25
 8718 3b38 880F      		lsl r24
 8719 3b3a 991F      		rol r25
 8720 3b3c 820F      		add r24,r18
 8721 3b3e 931F      		adc r25,r19
 8722 3b40 FC01      		movw r30,r24
 8723 3b42 8081      		ld r24,Z
 8724 3b44 9181      		ldd r25,Z+1
 8725 3b46 A281      		ldd r26,Z+2
 8726 3b48 B381      		ldd r27,Z+3
 8727 3b4a 20E0      		ldi r18,0
 8728 3b4c 30E0      		ldi r19,0
 8729 3b4e A901      		movw r20,r18
 8730 3b50 BC01      		movw r22,r24
 8731 3b52 CD01      		movw r24,r26
 8732 3b54 0E94 0000 		call __eqsf2
 8733 3b58 8823      		tst r24
 8734 3b5a 01F0      		breq .+2
 8735 3b5c 00C0      		rjmp .L276
 8736               		.loc 1 1044 0 is_stmt 0 discriminator 1
 8737 3b5e CE01      		movw r24,r28
 8738 3b60 835D      		subi r24,-45
 8739 3b62 9B4D      		sbci r25,-37
 8740 3b64 FC01      		movw r30,r24
 8741 3b66 8081      		ld r24,Z
 8742 3b68 9181      		ldd r25,Z+1
 8743 3b6a A281      		ldd r26,Z+2
 8744 3b6c B381      		ldd r27,Z+3
 8745 3b6e 20E0      		ldi r18,0
 8746 3b70 30E0      		ldi r19,0
 8747 3b72 A901      		movw r20,r18
 8748 3b74 BC01      		movw r22,r24
 8749 3b76 CD01      		movw r24,r26
 8750 3b78 0E94 0000 		call __ltsf2
 8751 3b7c 8823      		tst r24
 8752 3b7e 04F4      		brge .L276
1045:lp_solve_5.5/lp_MPS.c ****                 /* EQ with negative sign of r value */
1046:lp_solve_5.5/lp_MPS.c ****                 set_constr_type(lp, row, LE);
 8753               		.loc 1 1046 0 is_stmt 1
 8754 3b80 2AA1      		ldd r18,Y+34
 8755 3b82 3BA1      		ldd r19,Y+35
 8756 3b84 8D89      		ldd r24,Y+21
 8757 3b86 9E89      		ldd r25,Y+22
 8758 3b88 41E0      		ldi r20,lo8(1)
 8759 3b8a 50E0      		ldi r21,0
 8760 3b8c B901      		movw r22,r18
 8761 3b8e 0E94 0000 		call set_constr_type
1047:lp_solve_5.5/lp_MPS.c ****                 lp->orig_upbo[row] = my_flipsign(field6);
 8762               		.loc 1 1047 0
 8763 3b92 8D89      		ldd r24,Y+21
 8764 3b94 9E89      		ldd r25,Y+22
 8765 3b96 8255      		subi r24,82
 8766 3b98 9D4F      		sbci r25,-3
 8767 3b9a DC01      		movw r26,r24
 8768 3b9c 2D91      		ld r18,X+
 8769 3b9e 3C91      		ld r19,X
 8770 3ba0 8AA1      		ldd r24,Y+34
 8771 3ba2 9BA1      		ldd r25,Y+35
 8772 3ba4 880F      		lsl r24
 8773 3ba6 991F      		rol r25
 8774 3ba8 880F      		lsl r24
 8775 3baa 991F      		rol r25
 8776 3bac 8901      		movw r16,r18
 8777 3bae 080F      		add r16,r24
 8778 3bb0 191F      		adc r17,r25
 8779 3bb2 CE01      		movw r24,r28
 8780 3bb4 835D      		subi r24,-45
 8781 3bb6 9B4D      		sbci r25,-37
 8782 3bb8 FC01      		movw r30,r24
 8783 3bba 8081      		ld r24,Z
 8784 3bbc 9181      		ldd r25,Z+1
 8785 3bbe A281      		ldd r26,Z+2
 8786 3bc0 B381      		ldd r27,Z+3
 8787 3bc2 20E0      		ldi r18,0
 8788 3bc4 30E0      		ldi r19,0
 8789 3bc6 A901      		movw r20,r18
 8790 3bc8 BC01      		movw r22,r24
 8791 3bca CD01      		movw r24,r26
 8792 3bcc 0E94 0000 		call __nesf2
 8793 3bd0 8823      		tst r24
 8794 3bd2 01F0      		breq .L348
 8795               		.loc 1 1047 0 is_stmt 0 discriminator 1
 8796 3bd4 CE01      		movw r24,r28
 8797 3bd6 835D      		subi r24,-45
 8798 3bd8 9B4D      		sbci r25,-37
 8799 3bda FC01      		movw r30,r24
 8800 3bdc 8081      		ld r24,Z
 8801 3bde 9181      		ldd r25,Z+1
 8802 3be0 A281      		ldd r26,Z+2
 8803 3be2 B381      		ldd r27,Z+3
 8804 3be4 B058      		subi r27,0x80
 8805 3be6 00C0      		rjmp .L281
 8806               	.L348:
 8807               		.loc 1 1047 0 discriminator 2
 8808 3be8 80E0      		ldi r24,0
 8809 3bea 90E0      		ldi r25,0
 8810 3bec DC01      		movw r26,r24
 8811               	.L281:
 8812               		.loc 1 1047 0 discriminator 4
 8813 3bee F801      		movw r30,r16
 8814 3bf0 8083      		st Z,r24
 8815 3bf2 9183      		std Z+1,r25
 8816 3bf4 A283      		std Z+2,r26
 8817 3bf6 B383      		std Z+3,r27
 8818 3bf8 00C0      		rjmp .L263
 8819               	.L276:
1048:lp_solve_5.5/lp_MPS.c ****               }
1049:lp_solve_5.5/lp_MPS.c ****               else { /* let's be paranoid */
1050:lp_solve_5.5/lp_MPS.c ****                 report(lp, IMPORTANT,
1051:lp_solve_5.5/lp_MPS.c ****                             "Cannot figure out row type, row = %d, is_chsign = %d, upbo = %g on lin
1052:lp_solve_5.5/lp_MPS.c ****                             row, is_chsign(lp,row), (double) lp->orig_upbo[row], Lineno);
 8820               		.loc 1 1052 0 is_stmt 1
 8821 3bfa 8D89      		ldd r24,Y+21
 8822 3bfc 9E89      		ldd r25,Y+22
 8823 3bfe 8255      		subi r24,82
 8824 3c00 9D4F      		sbci r25,-3
 8825 3c02 DC01      		movw r26,r24
 8826 3c04 2D91      		ld r18,X+
 8827 3c06 3C91      		ld r19,X
 8828 3c08 8AA1      		ldd r24,Y+34
 8829 3c0a 9BA1      		ldd r25,Y+35
 8830 3c0c 880F      		lsl r24
 8831 3c0e 991F      		rol r25
 8832 3c10 880F      		lsl r24
 8833 3c12 991F      		rol r25
 8834 3c14 820F      		add r24,r18
 8835 3c16 931F      		adc r25,r19
1050:lp_solve_5.5/lp_MPS.c ****                             "Cannot figure out row type, row = %d, is_chsign = %d, upbo = %g on lin
 8836               		.loc 1 1050 0
 8837 3c18 FC01      		movw r30,r24
 8838 3c1a C080      		ld r12,Z
 8839 3c1c D180      		ldd r13,Z+1
 8840 3c1e E280      		ldd r14,Z+2
 8841 3c20 F380      		ldd r15,Z+3
 8842               		.loc 1 1052 0
 8843 3c22 2AA1      		ldd r18,Y+34
 8844 3c24 3BA1      		ldd r19,Y+35
 8845 3c26 8D89      		ldd r24,Y+21
 8846 3c28 9E89      		ldd r25,Y+22
 8847 3c2a B901      		movw r22,r18
 8848 3c2c 0E94 0000 		call is_chsign
1050:lp_solve_5.5/lp_MPS.c ****                             "Cannot figure out row type, row = %d, is_chsign = %d, upbo = %g on lin
 8849               		.loc 1 1050 0
 8850 3c30 882F      		mov r24,r24
 8851 3c32 90E0      		ldi r25,0
 8852 3c34 2E81      		ldd r18,Y+6
 8853 3c36 2F93      		push r18
 8854 3c38 2D81      		ldd r18,Y+5
 8855 3c3a 2F93      		push r18
 8856 3c3c 2F2D      		mov r18,r15
 8857 3c3e 2F93      		push r18
 8858 3c40 2E2D      		mov r18,r14
 8859 3c42 2F93      		push r18
 8860 3c44 2D2D      		mov r18,r13
 8861 3c46 2F93      		push r18
 8862 3c48 2C2D      		mov r18,r12
 8863 3c4a 2F93      		push r18
 8864 3c4c 292F      		mov r18,r25
 8865 3c4e 2F93      		push r18
 8866 3c50 8F93      		push r24
 8867 3c52 8BA1      		ldd r24,Y+35
 8868 3c54 8F93      		push r24
 8869 3c56 8AA1      		ldd r24,Y+34
 8870 3c58 8F93      		push r24
 8871 3c5a 80E0      		ldi r24,lo8(.LC80)
 8872 3c5c 90E0      		ldi r25,hi8(.LC80)
 8873 3c5e 892F      		mov r24,r25
 8874 3c60 8F93      		push r24
 8875 3c62 80E0      		ldi r24,lo8(.LC80)
 8876 3c64 90E0      		ldi r25,hi8(.LC80)
 8877 3c66 8F93      		push r24
 8878 3c68 1F92      		push __zero_reg__
 8879 3c6a 83E0      		ldi r24,lo8(3)
 8880 3c6c 8F93      		push r24
 8881 3c6e 8E89      		ldd r24,Y+22
 8882 3c70 8F93      		push r24
 8883 3c72 8D89      		ldd r24,Y+21
 8884 3c74 8F93      		push r24
 8885 3c76 0E94 0000 		call report
 8886 3c7a 2DB7      		in r18,__SP_L__
 8887 3c7c 3EB7      		in r19,__SP_H__
 8888 3c7e 205F      		subi r18,-16
 8889 3c80 3F4F      		sbci r19,-1
 8890 3c82 0FB6      		in __tmp_reg__,__SREG__
 8891 3c84 F894      		cli
 8892 3c86 DEBF      		out __SP_H__,r29
 8893 3c88 0FBE      		out __SREG__,__tmp_reg__
 8894 3c8a CDBF      		out __SP_L__,r28
 8895               	.L263:
1053:lp_solve_5.5/lp_MPS.c ****               }
1054:lp_solve_5.5/lp_MPS.c ****             }
1055:lp_solve_5.5/lp_MPS.c ****           }
1056:lp_solve_5.5/lp_MPS.c **** 
1057:lp_solve_5.5/lp_MPS.c ****           continue;
 8896               		.loc 1 1057 0
 8897 3c8c 00C0      		rjmp .L148
 8898               	.L182:
1058:lp_solve_5.5/lp_MPS.c **** 
1059:lp_solve_5.5/lp_MPS.c ****         /* Process entries in the SOS section */
1060:lp_solve_5.5/lp_MPS.c **** 
1061:lp_solve_5.5/lp_MPS.c ****         /* We have to implement the following semantics:
1062:lp_solve_5.5/lp_MPS.c **** 
1063:lp_solve_5.5/lp_MPS.c ****           E. The SOS section is for ordered variable sets of the form:
1064:lp_solve_5.5/lp_MPS.c ****       x1, x2, x3 ... xn where only a given number of consequtive variables
1065:lp_solve_5.5/lp_MPS.c ****           may be non-zero.  Each set definition is prefaced by type, name
1066:lp_solve_5.5/lp_MPS.c ****       and priority data.  Each set member has an optional weight that
1067:lp_solve_5.5/lp_MPS.c ****       determines its order.  There are two forms supported; a full format
1068:lp_solve_5.5/lp_MPS.c ****       and a reduced CPLEX-like format.                                       */
1069:lp_solve_5.5/lp_MPS.c **** 
1070:lp_solve_5.5/lp_MPS.c ****         case MPSSOS:
1071:lp_solve_5.5/lp_MPS.c ****           report(lp, FULL, "SOS line: %s %s %g %s %g",
 8899               		.loc 1 1071 0
 8900 3c8e CE01      		movw r24,r28
 8901 3c90 835D      		subi r24,-45
 8902 3c92 9B4D      		sbci r25,-37
 8903 3c94 DC01      		movw r26,r24
 8904 3c96 2D91      		ld r18,X+
 8905 3c98 3D91      		ld r19,X+
 8906 3c9a 4D91      		ld r20,X+
 8907 3c9c 5C91      		ld r21,X
 8908 3c9e CE01      		movw r24,r28
 8909 3ca0 875D      		subi r24,-41
 8910 3ca2 9B4D      		sbci r25,-37
 8911 3ca4 FC01      		movw r30,r24
 8912 3ca6 8081      		ld r24,Z
 8913 3ca8 9181      		ldd r25,Z+1
 8914 3caa A281      		ldd r26,Z+2
 8915 3cac B381      		ldd r27,Z+3
 8916 3cae 652F      		mov r22,r21
 8917 3cb0 6F93      		push r22
 8918 3cb2 642F      		mov r22,r20
 8919 3cb4 6F93      		push r22
 8920 3cb6 632F      		mov r22,r19
 8921 3cb8 6F93      		push r22
 8922 3cba 2F93      		push r18
 8923 3cbc 9E01      		movw r18,r28
 8924 3cbe 2A5D      		subi r18,-38
 8925 3cc0 334F      		sbci r19,-13
 8926 3cc2 432F      		mov r20,r19
 8927 3cc4 4F93      		push r20
 8928 3cc6 2F93      		push r18
 8929 3cc8 2B2F      		mov r18,r27
 8930 3cca 2F93      		push r18
 8931 3ccc 2A2F      		mov r18,r26
 8932 3cce 2F93      		push r18
 8933 3cd0 292F      		mov r18,r25
 8934 3cd2 2F93      		push r18
 8935 3cd4 8F93      		push r24
 8936 3cd6 CE01      		movw r24,r28
 8937 3cd8 8A5D      		subi r24,-38
 8938 3cda 974F      		sbci r25,-9
 8939 3cdc 292F      		mov r18,r25
 8940 3cde 2F93      		push r18
 8941 3ce0 8F93      		push r24
 8942 3ce2 CE01      		movw r24,r28
 8943 3ce4 8A5D      		subi r24,-38
 8944 3ce6 9B4F      		sbci r25,-5
 8945 3ce8 292F      		mov r18,r25
 8946 3cea 2F93      		push r18
 8947 3cec 8F93      		push r24
 8948 3cee 80E0      		ldi r24,lo8(.LC81)
 8949 3cf0 90E0      		ldi r25,hi8(.LC81)
 8950 3cf2 892F      		mov r24,r25
 8951 3cf4 8F93      		push r24
 8952 3cf6 80E0      		ldi r24,lo8(.LC81)
 8953 3cf8 90E0      		ldi r25,hi8(.LC81)
 8954 3cfa 8F93      		push r24
 8955 3cfc 1F92      		push __zero_reg__
 8956 3cfe 86E0      		ldi r24,lo8(6)
 8957 3d00 8F93      		push r24
 8958 3d02 8E89      		ldd r24,Y+22
 8959 3d04 8F93      		push r24
 8960 3d06 8D89      		ldd r24,Y+21
 8961 3d08 8F93      		push r24
 8962 3d0a 0E94 0000 		call report
 8963 3d0e 2DB7      		in r18,__SP_L__
 8964 3d10 3EB7      		in r19,__SP_H__
 8965 3d12 2C5E      		subi r18,-20
 8966 3d14 3F4F      		sbci r19,-1
 8967 3d16 0FB6      		in __tmp_reg__,__SREG__
 8968 3d18 F894      		cli
 8969 3d1a DEBF      		out __SP_H__,r29
 8970 3d1c 0FBE      		out __SREG__,__tmp_reg__
 8971 3d1e CDBF      		out __SP_L__,r28
1072:lp_solve_5.5/lp_MPS.c ****                              field2, field3, field4, field5, field6);
1073:lp_solve_5.5/lp_MPS.c **** 
1074:lp_solve_5.5/lp_MPS.c ****           if((items == 0) || (items > 4)) {
 8972               		.loc 1 1074 0
 8973 3d20 8B81      		ldd r24,Y+3
 8974 3d22 9C81      		ldd r25,Y+4
 8975 3d24 892B      		or r24,r25
 8976 3d26 01F0      		breq .L282
 8977               		.loc 1 1074 0 is_stmt 0 discriminator 1
 8978 3d28 8B81      		ldd r24,Y+3
 8979 3d2a 9C81      		ldd r25,Y+4
 8980 3d2c 0597      		sbiw r24,5
 8981 3d2e 04F0      		brlt .L283
 8982               	.L282:
1075:lp_solve_5.5/lp_MPS.c ****             report(lp, IMPORTANT,
 8983               		.loc 1 1075 0 is_stmt 1
 8984 3d30 8E81      		ldd r24,Y+6
 8985 3d32 8F93      		push r24
 8986 3d34 8D81      		ldd r24,Y+5
 8987 3d36 8F93      		push r24
 8988 3d38 8C81      		ldd r24,Y+4
 8989 3d3a 8F93      		push r24
 8990 3d3c 8B81      		ldd r24,Y+3
 8991 3d3e 8F93      		push r24
 8992 3d40 80E0      		ldi r24,lo8(.LC82)
 8993 3d42 90E0      		ldi r25,hi8(.LC82)
 8994 3d44 892F      		mov r24,r25
 8995 3d46 8F93      		push r24
 8996 3d48 80E0      		ldi r24,lo8(.LC82)
 8997 3d4a 90E0      		ldi r25,hi8(.LC82)
 8998 3d4c 8F93      		push r24
 8999 3d4e 1F92      		push __zero_reg__
 9000 3d50 83E0      		ldi r24,lo8(3)
 9001 3d52 8F93      		push r24
 9002 3d54 8E89      		ldd r24,Y+22
 9003 3d56 8F93      		push r24
 9004 3d58 8D89      		ldd r24,Y+21
 9005 3d5a 8F93      		push r24
 9006 3d5c 0E94 0000 		call report
 9007 3d60 8DB7      		in r24,__SP_L__
 9008 3d62 9EB7      		in r25,__SP_H__
 9009 3d64 0A96      		adiw r24,10
 9010 3d66 0FB6      		in __tmp_reg__,__SREG__
 9011 3d68 F894      		cli
 9012 3d6a DEBF      		out __SP_H__,r29
 9013 3d6c 0FBE      		out __SREG__,__tmp_reg__
 9014 3d6e CDBF      		out __SP_L__,r28
1076:lp_solve_5.5/lp_MPS.c ****                    "Invalid number of items (%d) in SOS section line %d\n",
1077:lp_solve_5.5/lp_MPS.c ****                    items, Lineno);
1078:lp_solve_5.5/lp_MPS.c ****             break;
 9015               		.loc 1 1078 0
 9016 3d70 00C0      		rjmp .L172
 9017               	.L283:
1079:lp_solve_5.5/lp_MPS.c ****           }
1080:lp_solve_5.5/lp_MPS.c **** 
1081:lp_solve_5.5/lp_MPS.c ****           if(strlen(field1) == 0) items--;  /* fix scanline anomoly! */
 9018               		.loc 1 1081 0
 9019 3d72 CE01      		movw r24,r28
 9020 3d74 8696      		adiw r24,38
 9021 3d76 DC01      		movw r26,r24
 9022 3d78 8C91      		ld r24,X
 9023 3d7a 8823      		tst r24
 9024 3d7c 01F4      		brne .L284
 9025               		.loc 1 1081 0 is_stmt 0 discriminator 1
 9026 3d7e 8B81      		ldd r24,Y+3
 9027 3d80 9C81      		ldd r25,Y+4
 9028 3d82 0197      		sbiw r24,1
 9029 3d84 9C83      		std Y+4,r25
 9030 3d86 8B83      		std Y+3,r24
 9031               	.L284:
1082:lp_solve_5.5/lp_MPS.c **** 
1083:lp_solve_5.5/lp_MPS.c ****           /* Check if this is the start of a new SOS */
1084:lp_solve_5.5/lp_MPS.c ****           if(items == 1 || items == 4) {
 9032               		.loc 1 1084 0 is_stmt 1
 9033 3d88 8B81      		ldd r24,Y+3
 9034 3d8a 9C81      		ldd r25,Y+4
 9035 3d8c 0197      		sbiw r24,1
 9036 3d8e 01F0      		breq .L285
 9037               		.loc 1 1084 0 is_stmt 0 discriminator 1
 9038 3d90 8B81      		ldd r24,Y+3
 9039 3d92 9C81      		ldd r25,Y+4
 9040 3d94 0497      		sbiw r24,4
 9041 3d96 01F0      		breq .+2
 9042 3d98 00C0      		rjmp .L286
 9043               	.L285:
1085:lp_solve_5.5/lp_MPS.c ****             row = (int) (field1[1] - '0');
 9044               		.loc 1 1085 0 is_stmt 1
 9045 3d9a 8FA1      		ldd r24,Y+39
 9046 3d9c 882F      		mov r24,r24
 9047 3d9e 90E0      		ldi r25,0
 9048 3da0 C097      		sbiw r24,48
 9049 3da2 9BA3      		std Y+35,r25
 9050 3da4 8AA3      		std Y+34,r24
1086:lp_solve_5.5/lp_MPS.c ****             if((row <= 0) || (row > 9)) {
 9051               		.loc 1 1086 0
 9052 3da6 8AA1      		ldd r24,Y+34
 9053 3da8 9BA1      		ldd r25,Y+35
 9054 3daa 1816      		cp __zero_reg__,r24
 9055 3dac 1906      		cpc __zero_reg__,r25
 9056 3dae 04F4      		brge .L287
 9057               		.loc 1 1086 0 is_stmt 0 discriminator 1
 9058 3db0 8AA1      		ldd r24,Y+34
 9059 3db2 9BA1      		ldd r25,Y+35
 9060 3db4 0A97      		sbiw r24,10
 9061 3db6 04F0      		brlt .L288
 9062               	.L287:
1087:lp_solve_5.5/lp_MPS.c ****               report(lp, IMPORTANT,
 9063               		.loc 1 1087 0 is_stmt 1
 9064 3db8 8E81      		ldd r24,Y+6
 9065 3dba 8F93      		push r24
 9066 3dbc 8D81      		ldd r24,Y+5
 9067 3dbe 8F93      		push r24
 9068 3dc0 CE01      		movw r24,r28
 9069 3dc2 8696      		adiw r24,38
 9070 3dc4 292F      		mov r18,r25
 9071 3dc6 2F93      		push r18
 9072 3dc8 8F93      		push r24
 9073 3dca 80E0      		ldi r24,lo8(.LC83)
 9074 3dcc 90E0      		ldi r25,hi8(.LC83)
 9075 3dce 892F      		mov r24,r25
 9076 3dd0 8F93      		push r24
 9077 3dd2 80E0      		ldi r24,lo8(.LC83)
 9078 3dd4 90E0      		ldi r25,hi8(.LC83)
 9079 3dd6 8F93      		push r24
 9080 3dd8 1F92      		push __zero_reg__
 9081 3dda 83E0      		ldi r24,lo8(3)
 9082 3ddc 8F93      		push r24
 9083 3dde 8E89      		ldd r24,Y+22
 9084 3de0 8F93      		push r24
 9085 3de2 8D89      		ldd r24,Y+21
 9086 3de4 8F93      		push r24
 9087 3de6 0E94 0000 		call report
 9088 3dea EDB7      		in r30,__SP_L__
 9089 3dec FEB7      		in r31,__SP_H__
 9090 3dee 3A96      		adiw r30,10
 9091 3df0 0FB6      		in __tmp_reg__,__SREG__
 9092 3df2 F894      		cli
 9093 3df4 DEBF      		out __SP_H__,r29
 9094 3df6 0FBE      		out __SREG__,__tmp_reg__
 9095 3df8 CDBF      		out __SP_L__,r28
1088:lp_solve_5.5/lp_MPS.c ****                      "Error: Invalid SOS type %s line %d\n", field1, Lineno);
1089:lp_solve_5.5/lp_MPS.c ****               break;
 9096               		.loc 1 1089 0
 9097 3dfa 00C0      		rjmp .L172
 9098               	.L288:
1090:lp_solve_5.5/lp_MPS.c ****             }
1091:lp_solve_5.5/lp_MPS.c ****             field1[0] = '\0';               /* fix scanline anomoly! */
 9099               		.loc 1 1091 0
 9100 3dfc 1EA2      		std Y+38,__zero_reg__
1092:lp_solve_5.5/lp_MPS.c **** 
1093:lp_solve_5.5/lp_MPS.c ****             /* lp_solve needs a name for the SOS */
1094:lp_solve_5.5/lp_MPS.c ****             if(variant == 0) {
 9101               		.loc 1 1094 0
 9102 3dfe 8985      		ldd r24,Y+9
 9103 3e00 9A85      		ldd r25,Y+10
 9104 3e02 892B      		or r24,r25
 9105 3e04 01F4      		brne .L289
1095:lp_solve_5.5/lp_MPS.c ****               if(strlen(field3) == 0)  /* CPLEX format does not provide a SOS name; create one */
 9106               		.loc 1 1095 0
 9107 3e06 CE01      		movw r24,r28
 9108 3e08 8A5D      		subi r24,-38
 9109 3e0a 974F      		sbci r25,-9
 9110 3e0c DC01      		movw r26,r24
 9111 3e0e 8C91      		ld r24,X
 9112 3e10 8823      		tst r24
 9113 3e12 01F4      		brne .L291
1096:lp_solve_5.5/lp_MPS.c ****                 sprintf(field3, "SOS_%d", SOS_count(lp) + 1);
 9114               		.loc 1 1096 0
 9115 3e14 8D89      		ldd r24,Y+21
 9116 3e16 9E89      		ldd r25,Y+22
 9117 3e18 0E94 0000 		call SOS_count
 9118 3e1c 0196      		adiw r24,1
 9119 3e1e 292F      		mov r18,r25
 9120 3e20 2F93      		push r18
 9121 3e22 8F93      		push r24
 9122 3e24 80E0      		ldi r24,lo8(.LC84)
 9123 3e26 90E0      		ldi r25,hi8(.LC84)
 9124 3e28 892F      		mov r24,r25
 9125 3e2a 8F93      		push r24
 9126 3e2c 80E0      		ldi r24,lo8(.LC84)
 9127 3e2e 90E0      		ldi r25,hi8(.LC84)
 9128 3e30 8F93      		push r24
 9129 3e32 CE01      		movw r24,r28
 9130 3e34 8A5D      		subi r24,-38
 9131 3e36 974F      		sbci r25,-9
 9132 3e38 292F      		mov r18,r25
 9133 3e3a 2F93      		push r18
 9134 3e3c 8F93      		push r24
 9135 3e3e 0E94 0000 		call sprintf
 9136 3e42 0F90      		pop __tmp_reg__
 9137 3e44 0F90      		pop __tmp_reg__
 9138 3e46 0F90      		pop __tmp_reg__
 9139 3e48 0F90      		pop __tmp_reg__
 9140 3e4a 0F90      		pop __tmp_reg__
 9141 3e4c 0F90      		pop __tmp_reg__
 9142 3e4e 00C0      		rjmp .L291
 9143               	.L289:
1097:lp_solve_5.5/lp_MPS.c ****             }
1098:lp_solve_5.5/lp_MPS.c ****             else {                     /* Remap XPRESS format name */
1099:lp_solve_5.5/lp_MPS.c ****               strcpy(field3, field1);
 9144               		.loc 1 1099 0
 9145 3e50 9E01      		movw r18,r28
 9146 3e52 2A5D      		subi r18,-38
 9147 3e54 3F4F      		sbci r19,-1
 9148 3e56 CE01      		movw r24,r28
 9149 3e58 8A5D      		subi r24,-38
 9150 3e5a 974F      		sbci r25,-9
 9151 3e5c B901      		movw r22,r18
 9152 3e5e 0E94 0000 		call strcpy
 9153               	.L291:
1100:lp_solve_5.5/lp_MPS.c ****             }
1101:lp_solve_5.5/lp_MPS.c ****             /* Obtain the SOS priority */
1102:lp_solve_5.5/lp_MPS.c ****             if(items == 4)
 9154               		.loc 1 1102 0
 9155 3e62 8B81      		ldd r24,Y+3
 9156 3e64 9C81      		ldd r25,Y+4
 9157 3e66 0497      		sbiw r24,4
 9158 3e68 01F4      		brne .L292
1103:lp_solve_5.5/lp_MPS.c ****               SOS = (int) field4;
 9159               		.loc 1 1103 0
 9160 3e6a CE01      		movw r24,r28
 9161 3e6c 875D      		subi r24,-41
 9162 3e6e 9B4D      		sbci r25,-37
 9163 3e70 FC01      		movw r30,r24
 9164 3e72 8081      		ld r24,Z
 9165 3e74 9181      		ldd r25,Z+1
 9166 3e76 A281      		ldd r26,Z+2
 9167 3e78 B381      		ldd r27,Z+3
 9168 3e7a BC01      		movw r22,r24
 9169 3e7c CD01      		movw r24,r26
 9170 3e7e 0E94 0000 		call __fixsfsi
 9171 3e82 DC01      		movw r26,r24
 9172 3e84 CB01      		movw r24,r22
 9173 3e86 9E87      		std Y+14,r25
 9174 3e88 8D87      		std Y+13,r24
 9175 3e8a 00C0      		rjmp .L293
 9176               	.L292:
1104:lp_solve_5.5/lp_MPS.c ****             else
1105:lp_solve_5.5/lp_MPS.c ****               SOS = 1;
 9177               		.loc 1 1105 0
 9178 3e8c 81E0      		ldi r24,lo8(1)
 9179 3e8e 90E0      		ldi r25,0
 9180 3e90 9E87      		std Y+14,r25
 9181 3e92 8D87      		std Y+13,r24
 9182               	.L293:
1106:lp_solve_5.5/lp_MPS.c **** 
1107:lp_solve_5.5/lp_MPS.c ****             /* Define a new SOS instance */
1108:lp_solve_5.5/lp_MPS.c **** 
1109:lp_solve_5.5/lp_MPS.c ****             SOS = add_SOS(lp, field3, (int) row, SOS, 0, NULL, NULL);
 9183               		.loc 1 1109 0
 9184 3e94 2D85      		ldd r18,Y+13
 9185 3e96 3E85      		ldd r19,Y+14
 9186 3e98 4AA1      		ldd r20,Y+34
 9187 3e9a 5BA1      		ldd r21,Y+35
 9188 3e9c BE01      		movw r22,r28
 9189 3e9e 6A5D      		subi r22,-38
 9190 3ea0 774F      		sbci r23,-9
 9191 3ea2 8D89      		ldd r24,Y+21
 9192 3ea4 9E89      		ldd r25,Y+22
 9193 3ea6 C12C      		mov r12,__zero_reg__
 9194 3ea8 D12C      		mov r13,__zero_reg__
 9195 3eaa E12C      		mov r14,__zero_reg__
 9196 3eac F12C      		mov r15,__zero_reg__
 9197 3eae 00E0      		ldi r16,0
 9198 3eb0 10E0      		ldi r17,0
 9199 3eb2 0E94 0000 		call add_SOS
 9200 3eb6 9E87      		std Y+14,r25
 9201 3eb8 8D87      		std Y+13,r24
 9202 3eba 00C0      		rjmp .L294
 9203               	.L286:
 9204               	.LBB4:
1110:lp_solve_5.5/lp_MPS.c ****           }
1111:lp_solve_5.5/lp_MPS.c ****           /* Otherwise, add set members to the active SOS */
1112:lp_solve_5.5/lp_MPS.c ****           else {
1113:lp_solve_5.5/lp_MPS.c ****             char *field = (items == 3) ? field3 /* Native lp_solve and XPRESS formats */ : field2 /
 9205               		.loc 1 1113 0
 9206 3ebc 8B81      		ldd r24,Y+3
 9207 3ebe 9C81      		ldd r25,Y+4
 9208 3ec0 0397      		sbiw r24,3
 9209 3ec2 01F4      		brne .L295
 9210               		.loc 1 1113 0 is_stmt 0 discriminator 1
 9211 3ec4 CE01      		movw r24,r28
 9212 3ec6 8A5D      		subi r24,-38
 9213 3ec8 974F      		sbci r25,-9
 9214 3eca 00C0      		rjmp .L296
 9215               	.L295:
 9216               		.loc 1 1113 0 discriminator 2
 9217 3ecc CE01      		movw r24,r28
 9218 3ece 8A5D      		subi r24,-38
 9219 3ed0 9B4F      		sbci r25,-5
 9220               	.L296:
 9221               		.loc 1 1113 0 discriminator 4
 9222 3ed2 9DA3      		std Y+37,r25
 9223 3ed4 8CA3      		std Y+36,r24
1114:lp_solve_5.5/lp_MPS.c **** 
1115:lp_solve_5.5/lp_MPS.c ****             var = find_var(lp, field, FALSE);  /* Native lp_solve and XPRESS formats */
 9224               		.loc 1 1115 0 is_stmt 1 discriminator 4
 9225 3ed6 2CA1      		ldd r18,Y+36
 9226 3ed8 3DA1      		ldd r19,Y+37
 9227 3eda 8D89      		ldd r24,Y+21
 9228 3edc 9E89      		ldd r25,Y+22
 9229 3ede 40E0      		ldi r20,0
 9230 3ee0 B901      		movw r22,r18
 9231 3ee2 0E94 0000 		call find_var
 9232 3ee6 9C01      		movw r18,r24
 9233 3ee8 CE01      		movw r24,r28
 9234 3eea 8A5D      		subi r24,-38
 9235 3eec 9B4D      		sbci r25,-37
 9236 3eee DC01      		movw r26,r24
 9237 3ef0 2D93      		st X+,r18
 9238 3ef2 3C93      		st X,r19
1116:lp_solve_5.5/lp_MPS.c ****             if(var < 0){ /* SOS on undefined var in COLUMNS section ... */
 9239               		.loc 1 1116 0 discriminator 4
 9240 3ef4 CE01      		movw r24,r28
 9241 3ef6 8A5D      		subi r24,-38
 9242 3ef8 9B4D      		sbci r25,-37
 9243 3efa FC01      		movw r30,r24
 9244 3efc 8081      		ld r24,Z
 9245 3efe 9181      		ldd r25,Z+1
 9246 3f00 9923      		tst r25
 9247 3f02 04F0      		brlt .+2
 9248 3f04 00C0      		rjmp .L297
1117:lp_solve_5.5/lp_MPS.c ****               Column_ready = TRUE;
 9249               		.loc 1 1117 0
 9250 3f06 CE01      		movw r24,r28
 9251 3f08 885D      		subi r24,-40
 9252 3f0a 9B4D      		sbci r25,-37
 9253 3f0c 21E0      		ldi r18,lo8(1)
 9254 3f0e DC01      		movw r26,r24
 9255 3f10 2C93      		st X,r18
1118:lp_solve_5.5/lp_MPS.c ****               if (!addmpscolumn(lp, FALSE, typeMPS, &Column_ready, &count, Last_column, Last_column
 9256               		.loc 1 1118 0
 9257 3f12 CE01      		movw r24,r28
 9258 3f14 8B5C      		subi r24,-53
 9259 3f16 9B4D      		sbci r25,-37
 9260 3f18 FC01      		movw r30,r24
 9261 3f1a A081      		ld r26,Z
 9262 3f1c B181      		ldd r27,Z+1
 9263 3f1e CE01      		movw r24,r28
 9264 3f20 8F5C      		subi r24,-49
 9265 3f22 9B4D      		sbci r25,-37
 9266 3f24 FC01      		movw r30,r24
 9267 3f26 0190      		ld __tmp_reg__,Z+
 9268 3f28 F081      		ld r31,Z
 9269 3f2a E02D      		mov r30,__tmp_reg__
 9270 3f2c CF5B      		subi r28,lo8(-9281)
 9271 3f2e DB4D      		sbci r29,hi8(-9281)
 9272 3f30 F983      		std Y+1,r31
 9273 3f32 E883      		st Y,r30
 9274 3f34 C154      		subi r28,lo8(9281)
 9275 3f36 D442      		sbci r29,hi8(9281)
 9276 3f38 0CA1      		ldd r16,Y+36
 9277 3f3a 1DA1      		ldd r17,Y+37
 9278 3f3c BE01      		movw r22,r28
 9279 3f3e 6D5C      		subi r22,-51
 9280 3f40 7B4D      		sbci r23,-37
 9281 3f42 9E01      		movw r18,r28
 9282 3f44 285D      		subi r18,-40
 9283 3f46 3B4D      		sbci r19,-37
 9284 3f48 CE01      		movw r24,r28
 9285 3f4a 835C      		subi r24,-61
 9286 3f4c 9B4D      		sbci r25,-37
 9287 3f4e FC01      		movw r30,r24
 9288 3f50 4081      		ld r20,Z
 9289 3f52 5181      		ldd r21,Z+1
 9290 3f54 8D89      		ldd r24,Y+21
 9291 3f56 9E89      		ldd r25,Y+22
 9292 3f58 5801      		movw r10,r16
 9293 3f5a 6D01      		movw r12,r26
 9294 3f5c CF5B      		subi r28,lo8(-9281)
 9295 3f5e DB4D      		sbci r29,hi8(-9281)
 9296 3f60 E880      		ld r14,Y
 9297 3f62 F980      		ldd r15,Y+1
 9298 3f64 C154      		subi r28,lo8(9281)
 9299 3f66 D442      		sbci r29,hi8(9281)
 9300 3f68 8B01      		movw r16,r22
 9301 3f6a 60E0      		ldi r22,0
 9302 3f6c 0E94 0000 		call addmpscolumn
 9303 3f70 892B      		or r24,r25
 9304 3f72 01F4      		brne .+2
 9305 3f74 00C0      		rjmp .L358
1119:lp_solve_5.5/lp_MPS.c ****                 break;
1120:lp_solve_5.5/lp_MPS.c ****               Column_ready = TRUE;
 9306               		.loc 1 1120 0
 9307 3f76 CE01      		movw r24,r28
 9308 3f78 885D      		subi r24,-40
 9309 3f7a 9B4D      		sbci r25,-37
 9310 3f7c 21E0      		ldi r18,lo8(1)
 9311 3f7e DC01      		movw r26,r24
 9312 3f80 2C93      		st X,r18
1121:lp_solve_5.5/lp_MPS.c ****               var = find_var(lp, field, TRUE);
 9313               		.loc 1 1121 0
 9314 3f82 2CA1      		ldd r18,Y+36
 9315 3f84 3DA1      		ldd r19,Y+37
 9316 3f86 8D89      		ldd r24,Y+21
 9317 3f88 9E89      		ldd r25,Y+22
 9318 3f8a 41E0      		ldi r20,lo8(1)
 9319 3f8c B901      		movw r22,r18
 9320 3f8e 0E94 0000 		call find_var
 9321 3f92 9C01      		movw r18,r24
 9322 3f94 CE01      		movw r24,r28
 9323 3f96 8A5D      		subi r24,-38
 9324 3f98 9B4D      		sbci r25,-37
 9325 3f9a FC01      		movw r30,r24
 9326 3f9c 3183      		std Z+1,r19
 9327 3f9e 2083      		st Z,r18
 9328               	.L297:
1122:lp_solve_5.5/lp_MPS.c ****             }
1123:lp_solve_5.5/lp_MPS.c ****             if((var < 0) || (SOS < 1)) /* undefined var and could add ... */;
 9329               		.loc 1 1123 0
 9330 3fa0 CE01      		movw r24,r28
 9331 3fa2 8A5D      		subi r24,-38
 9332 3fa4 9B4D      		sbci r25,-37
 9333 3fa6 DC01      		movw r26,r24
 9334 3fa8 8D91      		ld r24,X+
 9335 3faa 9C91      		ld r25,X
 9336 3fac 9923      		tst r25
 9337 3fae 04F4      		brge .+2
 9338 3fb0 00C0      		rjmp .L148
 9339               		.loc 1 1123 0 is_stmt 0 discriminator 1
 9340 3fb2 8D85      		ldd r24,Y+13
 9341 3fb4 9E85      		ldd r25,Y+14
 9342 3fb6 1816      		cp __zero_reg__,r24
 9343 3fb8 1906      		cpc __zero_reg__,r25
 9344 3fba 04F0      		brlt .+2
 9345 3fbc 00C0      		rjmp .L148
1124:lp_solve_5.5/lp_MPS.c ****             else append_SOSrec(lp->SOS->sos_list[SOS-1], 1, &var, &field4);
 9346               		.loc 1 1124 0 is_stmt 1
 9347 3fbe 8D89      		ldd r24,Y+21
 9348 3fc0 9E89      		ldd r25,Y+22
 9349 3fc2 8256      		subi r24,98
 9350 3fc4 9D4F      		sbci r25,-3
 9351 3fc6 FC01      		movw r30,r24
 9352 3fc8 8081      		ld r24,Z
 9353 3fca 9181      		ldd r25,Z+1
 9354 3fcc DC01      		movw r26,r24
 9355 3fce 1296      		adiw r26,2
 9356 3fd0 2D91      		ld r18,X+
 9357 3fd2 3C91      		ld r19,X
 9358 3fd4 1397      		sbiw r26,2+1
 9359 3fd6 8D85      		ldd r24,Y+13
 9360 3fd8 9E85      		ldd r25,Y+14
 9361 3fda 8150      		subi r24,1
 9362 3fdc 9048      		sbci r25,-128
 9363 3fde 880F      		lsl r24
 9364 3fe0 991F      		rol r25
 9365 3fe2 820F      		add r24,r18
 9366 3fe4 931F      		adc r25,r19
 9367 3fe6 FC01      		movw r30,r24
 9368 3fe8 8081      		ld r24,Z
 9369 3fea 9181      		ldd r25,Z+1
 9370 3fec 9E01      		movw r18,r28
 9371 3fee 275D      		subi r18,-41
 9372 3ff0 3B4D      		sbci r19,-37
 9373 3ff2 AE01      		movw r20,r28
 9374 3ff4 4A5D      		subi r20,-38
 9375 3ff6 5B4D      		sbci r21,-37
 9376 3ff8 61E0      		ldi r22,lo8(1)
 9377 3ffa 70E0      		ldi r23,0
 9378 3ffc 0E94 0000 		call append_SOSrec
 9379               	.L294:
 9380               	.LBE4:
1125:lp_solve_5.5/lp_MPS.c ****           }
1126:lp_solve_5.5/lp_MPS.c **** 
1127:lp_solve_5.5/lp_MPS.c ****           continue;
 9381               		.loc 1 1127 0
 9382 4000 00C0      		rjmp .L148
 9383               	.L350:
 719:lp_solve_5.5/lp_MPS.c ****               OF_found = TRUE;
 9384               		.loc 1 719 0
 9385 4002 0000      		nop
 9386 4004 00C0      		rjmp .L172
 9387               	.L351:
 772:lp_solve_5.5/lp_MPS.c ****                 }
 9388               		.loc 1 772 0
 9389 4006 0000      		nop
 9390 4008 00C0      		rjmp .L172
 9391               	.L352:
 780:lp_solve_5.5/lp_MPS.c ****               if(strcmp(field5, "'INTORG'") == 0) {
 9392               		.loc 1 780 0
 9393 400a 0000      		nop
 9394 400c 00C0      		rjmp .L172
 9395               	.L353:
 868:lp_solve_5.5/lp_MPS.c ****             Column_ready = TRUE;
 9396               		.loc 1 868 0
 9397 400e 0000      		nop
 9398 4010 00C0      		rjmp .L172
 9399               	.L354:
 885:lp_solve_5.5/lp_MPS.c ****             set_semicont(lp, var, TRUE);
 9400               		.loc 1 885 0
 9401 4012 0000      		nop
 9402 4014 00C0      		rjmp .L172
 9403               	.L355:
 894:lp_solve_5.5/lp_MPS.c ****             set_int(lp, var, TRUE);
 9404               		.loc 1 894 0
 9405 4016 0000      		nop
 9406 4018 00C0      		rjmp .L172
 9407               	.L356:
 929:lp_solve_5.5/lp_MPS.c ****             set_int(lp, var, TRUE);
 9408               		.loc 1 929 0
 9409 401a 0000      		nop
 9410 401c 00C0      		rjmp .L172
 9411               	.L357:
 935:lp_solve_5.5/lp_MPS.c ****             set_int(lp, var, TRUE);
 9412               		.loc 1 935 0
 9413 401e 0000      		nop
 9414 4020 00C0      		rjmp .L172
 9415               	.L358:
 9416               	.LBB5:
1119:lp_solve_5.5/lp_MPS.c ****               Column_ready = TRUE;
 9417               		.loc 1 1119 0
 9418 4022 0000      		nop
 9419               	.L172:
 9420               	.LBE5:
1128:lp_solve_5.5/lp_MPS.c ****         }
1129:lp_solve_5.5/lp_MPS.c **** 
1130:lp_solve_5.5/lp_MPS.c ****         /* If we got here there was an error "upstream" */
1131:lp_solve_5.5/lp_MPS.c ****          report(lp, IMPORTANT,
 9421               		.loc 1 1131 0
 9422 4024 8E81      		ldd r24,Y+6
 9423 4026 8F93      		push r24
 9424 4028 8D81      		ldd r24,Y+5
 9425 402a 8F93      		push r24
 9426 402c 80E0      		ldi r24,lo8(.LC85)
 9427 402e 90E0      		ldi r25,hi8(.LC85)
 9428 4030 892F      		mov r24,r25
 9429 4032 8F93      		push r24
 9430 4034 80E0      		ldi r24,lo8(.LC85)
 9431 4036 90E0      		ldi r25,hi8(.LC85)
 9432 4038 8F93      		push r24
 9433 403a 1F92      		push __zero_reg__
 9434 403c 83E0      		ldi r24,lo8(3)
 9435 403e 8F93      		push r24
 9436 4040 8E89      		ldd r24,Y+22
 9437 4042 8F93      		push r24
 9438 4044 8D89      		ldd r24,Y+21
 9439 4046 8F93      		push r24
 9440 4048 0E94 0000 		call report
 9441 404c 2DB7      		in r18,__SP_L__
 9442 404e 3EB7      		in r19,__SP_H__
 9443 4050 285F      		subi r18,-8
 9444 4052 3F4F      		sbci r19,-1
 9445 4054 0FB6      		in __tmp_reg__,__SREG__
 9446 4056 F894      		cli
 9447 4058 DEBF      		out __SP_H__,r29
 9448 405a 0FBE      		out __SREG__,__tmp_reg__
 9449 405c CDBF      		out __SP_L__,r28
1132:lp_solve_5.5/lp_MPS.c ****                      "Error: Cannot handle line %d\n", Lineno);
1133:lp_solve_5.5/lp_MPS.c ****          break;
 9450               		.loc 1 1133 0
 9451 405e 00C0      		rjmp .L157
 9452               	.L148:
 591:lp_solve_5.5/lp_MPS.c ****       Lineno++;
 9453               		.loc 1 591 0
 9454 4060 BE01      		movw r22,r28
 9455 4062 6A5D      		subi r22,-38
 9456 4064 7F4E      		sbci r23,-17
 9457 4066 CE01      		movw r24,r28
 9458 4068 875C      		subi r24,-57
 9459 406a 9B4D      		sbci r25,-37
 9460 406c DC01      		movw r26,r24
 9461 406e ED91      		ld r30,X+
 9462 4070 FC91      		ld r31,X
 9463 4072 CE01      		movw r24,r28
 9464 4074 855C      		subi r24,-59
 9465 4076 9B4D      		sbci r25,-37
 9466 4078 DC01      		movw r26,r24
 9467 407a 2D91      		ld r18,X+
 9468 407c 3C91      		ld r19,X
 9469 407e 4FEF      		ldi r20,lo8(-1)
 9470 4080 53E0      		ldi r21,lo8(3)
 9471 4082 CF01      		movw r24,r30
 9472 4084 F901      		movw r30,r18
 9473 4086 0995      		icall
 9474 4088 892B      		or r24,r25
 9475 408a 01F0      		breq .+4
 9476 408c 0C94 0000 		jmp .L299
 9477 4090 00C0      		rjmp .L157
 9478               	.L349:
 638:lp_solve_5.5/lp_MPS.c ****           section = MPSRHS;
 9479               		.loc 1 638 0
 9480 4092 0000      		nop
 9481               	.L157:
1134:lp_solve_5.5/lp_MPS.c ****       }
1135:lp_solve_5.5/lp_MPS.c ****     }
1136:lp_solve_5.5/lp_MPS.c **** 
1137:lp_solve_5.5/lp_MPS.c ****     if((*OBJNAME) && (!OF_found)) {
 9482               		.loc 1 1137 0
 9483 4094 CE01      		movw r24,r28
 9484 4096 8A5D      		subi r24,-38
 9485 4098 9F4D      		sbci r25,-33
 9486 409a DC01      		movw r26,r24
 9487 409c 8C91      		ld r24,X
 9488 409e 8823      		tst r24
 9489 40a0 01F0      		breq .L300
 9490               		.loc 1 1137 0 is_stmt 0 discriminator 1
 9491 40a2 8989      		ldd r24,Y+17
 9492 40a4 8823      		tst r24
 9493 40a6 01F4      		brne .L300
1138:lp_solve_5.5/lp_MPS.c ****       report(lp, IMPORTANT,
 9494               		.loc 1 1138 0 is_stmt 1
 9495 40a8 80E0      		ldi r24,lo8(.LC86)
 9496 40aa 90E0      		ldi r25,hi8(.LC86)
 9497 40ac 892F      		mov r24,r25
 9498 40ae 8F93      		push r24
 9499 40b0 80E0      		ldi r24,lo8(.LC86)
 9500 40b2 90E0      		ldi r25,hi8(.LC86)
 9501 40b4 8F93      		push r24
 9502 40b6 1F92      		push __zero_reg__
 9503 40b8 83E0      		ldi r24,lo8(3)
 9504 40ba 8F93      		push r24
 9505 40bc 8E89      		ldd r24,Y+22
 9506 40be 8F93      		push r24
 9507 40c0 8D89      		ldd r24,Y+21
 9508 40c2 8F93      		push r24
 9509 40c4 0E94 0000 		call report
 9510 40c8 0F90      		pop __tmp_reg__
 9511 40ca 0F90      		pop __tmp_reg__
 9512 40cc 0F90      		pop __tmp_reg__
 9513 40ce 0F90      		pop __tmp_reg__
 9514 40d0 0F90      		pop __tmp_reg__
 9515 40d2 0F90      		pop __tmp_reg__
1139:lp_solve_5.5/lp_MPS.c ****                   "Error: Objective function specified by OBJNAME card not found\n");
1140:lp_solve_5.5/lp_MPS.c ****       CompleteStatus = FALSE;
 9516               		.loc 1 1140 0
 9517 40d4 1A8A      		std Y+18,__zero_reg__
 9518               	.L300:
1141:lp_solve_5.5/lp_MPS.c ****     }
1142:lp_solve_5.5/lp_MPS.c **** 
1143:lp_solve_5.5/lp_MPS.c ****     if(CompleteStatus == FALSE) {
 9519               		.loc 1 1143 0
 9520 40d6 8A89      		ldd r24,Y+18
 9521 40d8 8823      		tst r24
 9522 40da 01F4      		brne .L301
1144:lp_solve_5.5/lp_MPS.c ****       if (*newlp == NULL)
 9523               		.loc 1 1144 0
 9524 40dc CE01      		movw r24,r28
 9525 40de 895C      		subi r24,-55
 9526 40e0 9B4D      		sbci r25,-37
 9527 40e2 FC01      		movw r30,r24
 9528 40e4 8081      		ld r24,Z
 9529 40e6 9181      		ldd r25,Z+1
 9530 40e8 DC01      		movw r26,r24
 9531 40ea 8D91      		ld r24,X+
 9532 40ec 9C91      		ld r25,X
 9533 40ee 892B      		or r24,r25
 9534 40f0 01F0      		breq .+2
 9535 40f2 00C0      		rjmp .L303
1145:lp_solve_5.5/lp_MPS.c ****         delete_lp(lp);
 9536               		.loc 1 1145 0
 9537 40f4 8D89      		ldd r24,Y+21
 9538 40f6 9E89      		ldd r25,Y+22
 9539 40f8 0E94 0000 		call delete_lp
 9540 40fc 00C0      		rjmp .L303
 9541               	.L301:
1146:lp_solve_5.5/lp_MPS.c ****     }
1147:lp_solve_5.5/lp_MPS.c ****     else {
1148:lp_solve_5.5/lp_MPS.c ****       if (typeMPS & MPSIBM) {
 9542               		.loc 1 1148 0
 9543 40fe CE01      		movw r24,r28
 9544 4100 835C      		subi r24,-61
 9545 4102 9B4D      		sbci r25,-37
 9546 4104 FC01      		movw r30,r24
 9547 4106 8081      		ld r24,Z
 9548 4108 9181      		ldd r25,Z+1
 9549 410a 8470      		andi r24,4
 9550 410c 9927      		clr r25
 9551 410e 892B      		or r24,r25
 9552 4110 01F4      		brne .+2
 9553 4112 00C0      		rjmp .L304
 9554               	.LBB6:
1149:lp_solve_5.5/lp_MPS.c ****         REAL lower, upper;
1150:lp_solve_5.5/lp_MPS.c **** 
1151:lp_solve_5.5/lp_MPS.c ****         for (var = 1; var <= lp->columns; var++)
 9555               		.loc 1 1151 0
 9556 4114 CE01      		movw r24,r28
 9557 4116 8A5D      		subi r24,-38
 9558 4118 9B4D      		sbci r25,-37
 9559 411a 21E0      		ldi r18,lo8(1)
 9560 411c 30E0      		ldi r19,0
 9561 411e DC01      		movw r26,r24
 9562 4120 2D93      		st X+,r18
 9563 4122 3C93      		st X,r19
 9564 4124 00C0      		rjmp .L305
 9565               	.L314:
1152:lp_solve_5.5/lp_MPS.c ****           if (is_int(lp, var)) {
 9566               		.loc 1 1152 0
 9567 4126 CE01      		movw r24,r28
 9568 4128 8A5D      		subi r24,-38
 9569 412a 9B4D      		sbci r25,-37
 9570 412c FC01      		movw r30,r24
 9571 412e 2081      		ld r18,Z
 9572 4130 3181      		ldd r19,Z+1
 9573 4132 8D89      		ldd r24,Y+21
 9574 4134 9E89      		ldd r25,Y+22
 9575 4136 B901      		movw r22,r18
 9576 4138 0E94 0000 		call is_int
 9577 413c 8823      		tst r24
 9578 413e 01F4      		brne .+2
 9579 4140 00C0      		rjmp .L306
1153:lp_solve_5.5/lp_MPS.c ****             lower = get_lowbo(lp, var);
 9580               		.loc 1 1153 0
 9581 4142 CE01      		movw r24,r28
 9582 4144 8A5D      		subi r24,-38
 9583 4146 9B4D      		sbci r25,-37
 9584 4148 DC01      		movw r26,r24
 9585 414a 2D91      		ld r18,X+
 9586 414c 3C91      		ld r19,X
 9587 414e 8D89      		ldd r24,Y+21
 9588 4150 9E89      		ldd r25,Y+22
 9589 4152 B901      		movw r22,r18
 9590 4154 0E94 0000 		call get_lowbo
 9591 4158 DC01      		movw r26,r24
 9592 415a CB01      		movw r24,r22
 9593 415c 898F      		std Y+25,r24
 9594 415e 9A8F      		std Y+26,r25
 9595 4160 AB8F      		std Y+27,r26
 9596 4162 BC8F      		std Y+28,r27
1154:lp_solve_5.5/lp_MPS.c ****             upper = get_upbo(lp, var);
 9597               		.loc 1 1154 0
 9598 4164 CE01      		movw r24,r28
 9599 4166 8A5D      		subi r24,-38
 9600 4168 9B4D      		sbci r25,-37
 9601 416a FC01      		movw r30,r24
 9602 416c 2081      		ld r18,Z
 9603 416e 3181      		ldd r19,Z+1
 9604 4170 8D89      		ldd r24,Y+21
 9605 4172 9E89      		ldd r25,Y+22
 9606 4174 B901      		movw r22,r18
 9607 4176 0E94 0000 		call get_upbo
 9608 417a DC01      		movw r26,r24
 9609 417c CB01      		movw r24,r22
 9610 417e 8D8F      		std Y+29,r24
 9611 4180 9E8F      		std Y+30,r25
 9612 4182 AF8F      		std Y+31,r26
 9613 4184 B8A3      		std Y+32,r27
1155:lp_solve_5.5/lp_MPS.c ****             if ((lower == 10.0 / DEF_INFINITE) && (upper == DEF_INFINITE / 10.0))
 9614               		.loc 1 1155 0
 9615 4186 28EF      		ldi r18,lo8(-8)
 9616 4188 32ED      		ldi r19,lo8(-46)
 9617 418a 4AE4      		ldi r20,lo8(74)
 9618 418c 5FE0      		ldi r21,lo8(15)
 9619 418e 698D      		ldd r22,Y+25
 9620 4190 7A8D      		ldd r23,Y+26
 9621 4192 8B8D      		ldd r24,Y+27
 9622 4194 9C8D      		ldd r25,Y+28
 9623 4196 0E94 0000 		call __eqsf2
 9624 419a 8823      		tst r24
 9625 419c 01F4      		brne .L307
 9626               		.loc 1 1155 0 is_stmt 0 discriminator 1
 9627 419e 28E0      		ldi r18,lo8(8)
 9628 41a0 3FE8      		ldi r19,lo8(-113)
 9629 41a2 41EA      		ldi r20,lo8(-95)
 9630 41a4 5FE6      		ldi r21,lo8(111)
 9631 41a6 6D8D      		ldd r22,Y+29
 9632 41a8 7E8D      		ldd r23,Y+30
 9633 41aa 8F8D      		ldd r24,Y+31
 9634 41ac 98A1      		ldd r25,Y+32
 9635 41ae 0E94 0000 		call __eqsf2
 9636 41b2 8823      		tst r24
 9637 41b4 01F4      		brne .L307
1156:lp_solve_5.5/lp_MPS.c ****               upper = 1.0;
 9638               		.loc 1 1156 0 is_stmt 1
 9639 41b6 80E0      		ldi r24,0
 9640 41b8 90E0      		ldi r25,0
 9641 41ba A0E8      		ldi r26,lo8(-128)
 9642 41bc BFE3      		ldi r27,lo8(63)
 9643 41be 8D8F      		std Y+29,r24
 9644 41c0 9E8F      		std Y+30,r25
 9645 41c2 AF8F      		std Y+31,r26
 9646 41c4 B8A3      		std Y+32,r27
 9647               	.L307:
1157:lp_solve_5.5/lp_MPS.c ****             if (lower == 10.0 / DEF_INFINITE)
 9648               		.loc 1 1157 0
 9649 41c6 28EF      		ldi r18,lo8(-8)
 9650 41c8 32ED      		ldi r19,lo8(-46)
 9651 41ca 4AE4      		ldi r20,lo8(74)
 9652 41cc 5FE0      		ldi r21,lo8(15)
 9653 41ce 698D      		ldd r22,Y+25
 9654 41d0 7A8D      		ldd r23,Y+26
 9655 41d2 8B8D      		ldd r24,Y+27
 9656 41d4 9C8D      		ldd r25,Y+28
 9657 41d6 0E94 0000 		call __eqsf2
 9658 41da 8823      		tst r24
 9659 41dc 01F4      		brne .L310
1158:lp_solve_5.5/lp_MPS.c ****               lower = 0.0;
 9660               		.loc 1 1158 0
 9661 41de 198E      		std Y+25,__zero_reg__
 9662 41e0 1A8E      		std Y+26,__zero_reg__
 9663 41e2 1B8E      		std Y+27,__zero_reg__
 9664 41e4 1C8E      		std Y+28,__zero_reg__
 9665               	.L310:
1159:lp_solve_5.5/lp_MPS.c ****             if (upper == DEF_INFINITE / 10.0)
 9666               		.loc 1 1159 0
 9667 41e6 28E0      		ldi r18,lo8(8)
 9668 41e8 3FE8      		ldi r19,lo8(-113)
 9669 41ea 41EA      		ldi r20,lo8(-95)
 9670 41ec 5FE6      		ldi r21,lo8(111)
 9671 41ee 6D8D      		ldd r22,Y+29
 9672 41f0 7E8D      		ldd r23,Y+30
 9673 41f2 8F8D      		ldd r24,Y+31
 9674 41f4 98A1      		ldd r25,Y+32
 9675 41f6 0E94 0000 		call __eqsf2
 9676 41fa 8823      		tst r24
 9677 41fc 01F4      		brne .L312
1160:lp_solve_5.5/lp_MPS.c ****               upper = lp->infinite;
 9678               		.loc 1 1160 0
 9679 41fe 8D89      		ldd r24,Y+21
 9680 4200 9E89      		ldd r25,Y+22
 9681 4202 865F      		subi r24,-10
 9682 4204 9C4F      		sbci r25,-4
 9683 4206 FC01      		movw r30,r24
 9684 4208 8081      		ld r24,Z
 9685 420a 9181      		ldd r25,Z+1
 9686 420c A281      		ldd r26,Z+2
 9687 420e B381      		ldd r27,Z+3
 9688 4210 8D8F      		std Y+29,r24
 9689 4212 9E8F      		std Y+30,r25
 9690 4214 AF8F      		std Y+31,r26
 9691 4216 B8A3      		std Y+32,r27
 9692               	.L312:
1161:lp_solve_5.5/lp_MPS.c ****             set_bounds(lp, var, lower, upper);
 9693               		.loc 1 1161 0
 9694 4218 CE01      		movw r24,r28
 9695 421a 8A5D      		subi r24,-38
 9696 421c 9B4D      		sbci r25,-37
 9697 421e DC01      		movw r26,r24
 9698 4220 6D91      		ld r22,X+
 9699 4222 7C91      		ld r23,X
 9700 4224 2D8D      		ldd r18,Y+29
 9701 4226 3E8D      		ldd r19,Y+30
 9702 4228 4F8D      		ldd r20,Y+31
 9703 422a 58A1      		ldd r21,Y+32
 9704 422c 898D      		ldd r24,Y+25
 9705 422e 9A8D      		ldd r25,Y+26
 9706 4230 AB8D      		ldd r26,Y+27
 9707 4232 BC8D      		ldd r27,Y+28
 9708 4234 ED89      		ldd r30,Y+21
 9709 4236 FE89      		ldd r31,Y+22
 9710 4238 7901      		movw r14,r18
 9711 423a 8A01      		movw r16,r20
 9712 423c 9C01      		movw r18,r24
 9713 423e AD01      		movw r20,r26
 9714 4240 CF01      		movw r24,r30
 9715 4242 0E94 0000 		call set_bounds
 9716               	.L306:
1151:lp_solve_5.5/lp_MPS.c ****           if (is_int(lp, var)) {
 9717               		.loc 1 1151 0 discriminator 2
 9718 4246 CE01      		movw r24,r28
 9719 4248 8A5D      		subi r24,-38
 9720 424a 9B4D      		sbci r25,-37
 9721 424c FC01      		movw r30,r24
 9722 424e 8081      		ld r24,Z
 9723 4250 9181      		ldd r25,Z+1
 9724 4252 9C01      		movw r18,r24
 9725 4254 2F5F      		subi r18,-1
 9726 4256 3F4F      		sbci r19,-1
 9727 4258 CE01      		movw r24,r28
 9728 425a 8A5D      		subi r24,-38
 9729 425c 9B4D      		sbci r25,-37
 9730 425e DC01      		movw r26,r24
 9731 4260 2D93      		st X+,r18
 9732 4262 3C93      		st X,r19
 9733               	.L305:
1151:lp_solve_5.5/lp_MPS.c ****           if (is_int(lp, var)) {
 9734               		.loc 1 1151 0 is_stmt 0 discriminator 1
 9735 4264 8D89      		ldd r24,Y+21
 9736 4266 9E89      		ldd r25,Y+22
 9737 4268 8451      		subi r24,20
 9738 426a 9E4F      		sbci r25,-2
 9739 426c FC01      		movw r30,r24
 9740 426e 2081      		ld r18,Z
 9741 4270 3181      		ldd r19,Z+1
 9742 4272 CE01      		movw r24,r28
 9743 4274 8A5D      		subi r24,-38
 9744 4276 9B4D      		sbci r25,-37
 9745 4278 DC01      		movw r26,r24
 9746 427a 8D91      		ld r24,X+
 9747 427c 9C91      		ld r25,X
 9748 427e 2817      		cp r18,r24
 9749 4280 3907      		cpc r19,r25
 9750 4282 04F0      		brlt .+2
 9751 4284 00C0      		rjmp .L314
 9752               	.L304:
 9753               	.LBE6:
1162:lp_solve_5.5/lp_MPS.c ****           }
1163:lp_solve_5.5/lp_MPS.c ****       }
1164:lp_solve_5.5/lp_MPS.c ****       *newlp = lp;
 9754               		.loc 1 1164 0 is_stmt 1
 9755 4286 CE01      		movw r24,r28
 9756 4288 895C      		subi r24,-55
 9757 428a 9B4D      		sbci r25,-37
 9758 428c FC01      		movw r30,r24
 9759 428e 8081      		ld r24,Z
 9760 4290 9181      		ldd r25,Z+1
 9761 4292 2D89      		ldd r18,Y+21
 9762 4294 3E89      		ldd r19,Y+22
 9763 4296 DC01      		movw r26,r24
 9764 4298 2D93      		st X+,r18
 9765 429a 3C93      		st X,r19
 9766               	.L303:
1165:lp_solve_5.5/lp_MPS.c ****     }
1166:lp_solve_5.5/lp_MPS.c ****     if(Last_column != NULL)
 9767               		.loc 1 1166 0
 9768 429c CE01      		movw r24,r28
 9769 429e 8F5C      		subi r24,-49
 9770 42a0 9B4D      		sbci r25,-37
 9771 42a2 FC01      		movw r30,r24
 9772 42a4 8081      		ld r24,Z
 9773 42a6 9181      		ldd r25,Z+1
 9774 42a8 892B      		or r24,r25
 9775 42aa 01F0      		breq .L315
1167:lp_solve_5.5/lp_MPS.c ****       FREE(Last_column);
 9776               		.loc 1 1167 0
 9777 42ac CE01      		movw r24,r28
 9778 42ae 8F5C      		subi r24,-49
 9779 42b0 9B4D      		sbci r25,-37
 9780 42b2 DC01      		movw r26,r24
 9781 42b4 8D91      		ld r24,X+
 9782 42b6 9C91      		ld r25,X
 9783 42b8 892B      		or r24,r25
 9784 42ba 01F0      		breq .L315
 9785               		.loc 1 1167 0 is_stmt 0 discriminator 1
 9786 42bc CE01      		movw r24,r28
 9787 42be 8F5C      		subi r24,-49
 9788 42c0 9B4D      		sbci r25,-37
 9789 42c2 FC01      		movw r30,r24
 9790 42c4 8081      		ld r24,Z
 9791 42c6 9181      		ldd r25,Z+1
 9792 42c8 0E94 0000 		call free
 9793 42cc CE01      		movw r24,r28
 9794 42ce 8F5C      		subi r24,-49
 9795 42d0 9B4D      		sbci r25,-37
 9796 42d2 DC01      		movw r26,r24
 9797 42d4 1D92      		st X+,__zero_reg__
 9798 42d6 1C92      		st X,__zero_reg__
 9799               	.L315:
1168:lp_solve_5.5/lp_MPS.c ****     if(Last_columnno != NULL)
 9800               		.loc 1 1168 0 is_stmt 1
 9801 42d8 CE01      		movw r24,r28
 9802 42da 8B5C      		subi r24,-53
 9803 42dc 9B4D      		sbci r25,-37
 9804 42de FC01      		movw r30,r24
 9805 42e0 8081      		ld r24,Z
 9806 42e2 9181      		ldd r25,Z+1
 9807 42e4 892B      		or r24,r25
 9808 42e6 01F0      		breq .L147
1169:lp_solve_5.5/lp_MPS.c ****       FREE(Last_columnno);
 9809               		.loc 1 1169 0
 9810 42e8 CE01      		movw r24,r28
 9811 42ea 8B5C      		subi r24,-53
 9812 42ec 9B4D      		sbci r25,-37
 9813 42ee DC01      		movw r26,r24
 9814 42f0 8D91      		ld r24,X+
 9815 42f2 9C91      		ld r25,X
 9816 42f4 892B      		or r24,r25
 9817 42f6 01F0      		breq .L147
 9818               		.loc 1 1169 0 is_stmt 0 discriminator 1
 9819 42f8 CE01      		movw r24,r28
 9820 42fa 8B5C      		subi r24,-53
 9821 42fc 9B4D      		sbci r25,-37
 9822 42fe FC01      		movw r30,r24
 9823 4300 8081      		ld r24,Z
 9824 4302 9181      		ldd r25,Z+1
 9825 4304 0E94 0000 		call free
 9826 4308 CE01      		movw r24,r28
 9827 430a 8B5C      		subi r24,-53
 9828 430c 9B4D      		sbci r25,-37
 9829 430e DC01      		movw r26,r24
 9830 4310 1D92      		st X+,__zero_reg__
 9831 4312 1C92      		st X,__zero_reg__
 9832               	.L147:
1170:lp_solve_5.5/lp_MPS.c ****   }
1171:lp_solve_5.5/lp_MPS.c **** 
1172:lp_solve_5.5/lp_MPS.c ****   return( CompleteStatus );
 9833               		.loc 1 1172 0 is_stmt 1
 9834 4314 8A89      		ldd r24,Y+18
 9835               	.L316:
 9836               	/* epilogue start */
1173:lp_solve_5.5/lp_MPS.c **** }
 9837               		.loc 1 1173 0 discriminator 3
 9838 4316 CE5B      		subi r28,-66
 9839 4318 DB4D      		sbci r29,-37
 9840 431a 0FB6      		in __tmp_reg__,__SREG__
 9841 431c F894      		cli
 9842 431e DEBF      		out __SP_H__,r29
 9843 4320 0FBE      		out __SREG__,__tmp_reg__
 9844 4322 CDBF      		out __SP_L__,r28
 9845 4324 DF91      		pop r29
 9846 4326 CF91      		pop r28
 9847 4328 1F91      		pop r17
 9848 432a 0F91      		pop r16
 9849 432c FF90      		pop r15
 9850 432e EF90      		pop r14
 9851 4330 DF90      		pop r13
 9852 4332 CF90      		pop r12
 9853 4334 BF90      		pop r11
 9854 4336 AF90      		pop r10
 9855 4338 9F90      		pop r9
 9856 433a 8F90      		pop r8
 9857 433c 0895      		ret
 9858               		.cfi_endproc
 9859               	.LFE17:
 9861               	.global	__gtsf2
 9862               		.section	.rodata
 9863               	.LC87:
 9864 0846 252A 2E2A 		.string	"%*.*E"
 9864      4500 
 9865               	.LC88:
 9866 084c 252A 2E30 		.string	"%*.0f"
 9866      6600 
 9867               	.LC89:
 9868 0852 2531 322E 		.string	"%12.10f"
 9868      3130 6600 
 9869               	.global	__lesf2
 9870               	.LC90:
 9871 085a 2531 322E 		.string	"%12.9f"
 9871      3966 00
 9872               		.text
 9874               	number:
 9875               	.LFB18:
1174:lp_solve_5.5/lp_MPS.c **** 
1175:lp_solve_5.5/lp_MPS.c **** static void number(char *str,REAL value)
1176:lp_solve_5.5/lp_MPS.c ****  {
 9876               		.loc 1 1176 0
 9877               		.cfi_startproc
 9878 433e CF93      		push r28
 9879               	.LCFI86:
 9880               		.cfi_def_cfa_offset 3
 9881               		.cfi_offset 28, -2
 9882 4340 DF93      		push r29
 9883               	.LCFI87:
 9884               		.cfi_def_cfa_offset 4
 9885               		.cfi_offset 29, -3
 9886 4342 CDB7      		in r28,__SP_L__
 9887 4344 DEB7      		in r29,__SP_H__
 9888               	.LCFI88:
 9889               		.cfi_def_cfa_register 28
 9890 4346 C656      		subi r28,102
 9891 4348 D109      		sbc r29,__zero_reg__
 9892               	.LCFI89:
 9893               		.cfi_def_cfa_offset 106
 9894 434a 0FB6      		in __tmp_reg__,__SREG__
 9895 434c F894      		cli
 9896 434e DEBF      		out __SP_H__,r29
 9897 4350 0FBE      		out __SREG__,__tmp_reg__
 9898 4352 CDBF      		out __SP_L__,r28
 9899               	/* prologue: function */
 9900               	/* frame size = 102 */
 9901               	/* stack size = 104 */
 9902               	.L__stack_usage = 104
 9903 4354 9E01      		movw r18,r28
 9904 4356 2F59      		subi r18,-97
 9905 4358 3F4F      		sbci r19,-1
 9906 435a F901      		movw r30,r18
 9907 435c 9183      		std Z+1,r25
 9908 435e 8083      		st Z,r24
 9909 4360 CE01      		movw r24,r28
 9910 4362 8D59      		subi r24,-99
 9911 4364 9F4F      		sbci r25,-1
 9912 4366 FC01      		movw r30,r24
 9913 4368 4083      		st Z,r20
 9914 436a 5183      		std Z+1,r21
 9915 436c 6283      		std Z+2,r22
 9916 436e 7383      		std Z+3,r23
1177:lp_solve_5.5/lp_MPS.c ****   char __str[80], *_str;
1178:lp_solve_5.5/lp_MPS.c ****   int  i;
1179:lp_solve_5.5/lp_MPS.c **** 
1180:lp_solve_5.5/lp_MPS.c ****   /* sprintf(_str,"%12.6G",value); */
1181:lp_solve_5.5/lp_MPS.c ****   _str=__str+2;
 9917               		.loc 1 1181 0
 9918 4370 CE01      		movw r24,r28
 9919 4372 4196      		adiw r24,17
 9920 4374 0296      		adiw r24,2
 9921 4376 9A83      		std Y+2,r25
 9922 4378 8983      		std Y+1,r24
1182:lp_solve_5.5/lp_MPS.c ****   if (value>=0.0)
 9923               		.loc 1 1182 0
 9924 437a CE01      		movw r24,r28
 9925 437c 8D59      		subi r24,-99
 9926 437e 9F4F      		sbci r25,-1
 9927 4380 20E0      		ldi r18,0
 9928 4382 30E0      		ldi r19,0
 9929 4384 A901      		movw r20,r18
 9930 4386 FC01      		movw r30,r24
 9931 4388 6081      		ld r22,Z
 9932 438a 7181      		ldd r23,Z+1
 9933 438c 8281      		ldd r24,Z+2
 9934 438e 9381      		ldd r25,Z+3
 9935 4390 0E94 0000 		call __gesf2
 9936 4394 8823      		tst r24
 9937 4396 04F4      		brge .+2
 9938 4398 00C0      		rjmp .L401
1183:lp_solve_5.5/lp_MPS.c ****    if ((value!=0.0) && ((value>0.99999999e12) || (value<0.0001))) {
 9939               		.loc 1 1183 0
 9940 439a CE01      		movw r24,r28
 9941 439c 8D59      		subi r24,-99
 9942 439e 9F4F      		sbci r25,-1
 9943 43a0 20E0      		ldi r18,0
 9944 43a2 30E0      		ldi r19,0
 9945 43a4 A901      		movw r20,r18
 9946 43a6 FC01      		movw r30,r24
 9947 43a8 6081      		ld r22,Z
 9948 43aa 7181      		ldd r23,Z+1
 9949 43ac 8281      		ldd r24,Z+2
 9950 43ae 9381      		ldd r25,Z+3
 9951 43b0 0E94 0000 		call __nesf2
 9952 43b4 8823      		tst r24
 9953 43b6 01F4      		brne .+2
 9954 43b8 00C0      		rjmp .L362
 9955               		.loc 1 1183 0 is_stmt 0 discriminator 1
 9956 43ba CE01      		movw r24,r28
 9957 43bc 8D59      		subi r24,-99
 9958 43be 9F4F      		sbci r25,-1
 9959 43c0 25EA      		ldi r18,lo8(-91)
 9960 43c2 34ED      		ldi r19,lo8(-44)
 9961 43c4 48E6      		ldi r20,lo8(104)
 9962 43c6 53E5      		ldi r21,lo8(83)
 9963 43c8 FC01      		movw r30,r24
 9964 43ca 6081      		ld r22,Z
 9965 43cc 7181      		ldd r23,Z+1
 9966 43ce 8281      		ldd r24,Z+2
 9967 43d0 9381      		ldd r25,Z+3
 9968 43d2 0E94 0000 		call __gtsf2
 9969 43d6 1816      		cp __zero_reg__,r24
 9970 43d8 04F0      		brlt .L364
 9971               		.loc 1 1183 0 discriminator 2
 9972 43da CE01      		movw r24,r28
 9973 43dc 8D59      		subi r24,-99
 9974 43de 9F4F      		sbci r25,-1
 9975 43e0 27E1      		ldi r18,lo8(23)
 9976 43e2 37EB      		ldi r19,lo8(-73)
 9977 43e4 41ED      		ldi r20,lo8(-47)
 9978 43e6 58E3      		ldi r21,lo8(56)
 9979 43e8 FC01      		movw r30,r24
 9980 43ea 6081      		ld r22,Z
 9981 43ec 7181      		ldd r23,Z+1
 9982 43ee 8281      		ldd r24,Z+2
 9983 43f0 9381      		ldd r25,Z+3
 9984 43f2 0E94 0000 		call __ltsf2
 9985 43f6 8823      		tst r24
 9986 43f8 04F0      		brlt .+2
 9987 43fa 00C0      		rjmp .L362
 9988               	.L364:
 9989               	.LBB7:
1184:lp_solve_5.5/lp_MPS.c ****     int n=15;
 9990               		.loc 1 1184 0 is_stmt 1
 9991 43fc 8FE0      		ldi r24,lo8(15)
 9992 43fe 90E0      		ldi r25,0
 9993 4400 9E83      		std Y+6,r25
 9994 4402 8D83      		std Y+5,r24
 9995               	.L370:
1185:lp_solve_5.5/lp_MPS.c **** 
1186:lp_solve_5.5/lp_MPS.c ****     do {
1187:lp_solve_5.5/lp_MPS.c ****      n--;
 9996               		.loc 1 1187 0
 9997 4404 8D81      		ldd r24,Y+5
 9998 4406 9E81      		ldd r25,Y+6
 9999 4408 0197      		sbiw r24,1
 10000 440a 9E83      		std Y+6,r25
 10001 440c 8D83      		std Y+5,r24
1188:lp_solve_5.5/lp_MPS.c ****      i=sprintf(_str,"%*.*E",n,n-6,(double) value);
 10002               		.loc 1 1188 0
 10003 440e 8D81      		ldd r24,Y+5
 10004 4410 9E81      		ldd r25,Y+6
 10005 4412 9C01      		movw r18,r24
 10006 4414 2650      		subi r18,6
 10007 4416 3109      		sbc r19,__zero_reg__
 10008 4418 CE01      		movw r24,r28
 10009 441a 8D59      		subi r24,-99
 10010 441c 9F4F      		sbci r25,-1
 10011 441e FC01      		movw r30,r24
 10012 4420 4381      		ldd r20,Z+3
 10013 4422 4F93      		push r20
 10014 4424 FC01      		movw r30,r24
 10015 4426 4281      		ldd r20,Z+2
 10016 4428 4F93      		push r20
 10017 442a FC01      		movw r30,r24
 10018 442c 4181      		ldd r20,Z+1
 10019 442e 4F93      		push r20
 10020 4430 FC01      		movw r30,r24
 10021 4432 8081      		ld r24,Z
 10022 4434 8F93      		push r24
 10023 4436 832F      		mov r24,r19
 10024 4438 8F93      		push r24
 10025 443a 822F      		mov r24,r18
 10026 443c 8F93      		push r24
 10027 443e 8E81      		ldd r24,Y+6
 10028 4440 8F93      		push r24
 10029 4442 8D81      		ldd r24,Y+5
 10030 4444 8F93      		push r24
 10031 4446 80E0      		ldi r24,lo8(.LC87)
 10032 4448 90E0      		ldi r25,hi8(.LC87)
 10033 444a 892F      		mov r24,r25
 10034 444c 8F93      		push r24
 10035 444e 80E0      		ldi r24,lo8(.LC87)
 10036 4450 90E0      		ldi r25,hi8(.LC87)
 10037 4452 8F93      		push r24
 10038 4454 8A81      		ldd r24,Y+2
 10039 4456 8F93      		push r24
 10040 4458 8981      		ldd r24,Y+1
 10041 445a 8F93      		push r24
 10042 445c 0E94 0000 		call sprintf
 10043 4460 2DB7      		in r18,__SP_L__
 10044 4462 3EB7      		in r19,__SP_H__
 10045 4464 245F      		subi r18,-12
 10046 4466 3F4F      		sbci r19,-1
 10047 4468 0FB6      		in __tmp_reg__,__SREG__
 10048 446a F894      		cli
 10049 446c DEBF      		out __SP_H__,r29
 10050 446e 0FBE      		out __SREG__,__tmp_reg__
 10051 4470 CDBF      		out __SP_L__,r28
 10052 4472 9C83      		std Y+4,r25
 10053 4474 8B83      		std Y+3,r24
1189:lp_solve_5.5/lp_MPS.c ****      if (i>12) {
 10054               		.loc 1 1189 0
 10055 4476 8B81      		ldd r24,Y+3
 10056 4478 9C81      		ldd r25,Y+4
 10057 447a 0D97      		sbiw r24,13
 10058 447c 04F0      		brlt .L366
 10059               	.LBB8:
1190:lp_solve_5.5/lp_MPS.c ****       char *ptr=strchr(_str,'E');
 10060               		.loc 1 1190 0
 10061 447e 8981      		ldd r24,Y+1
 10062 4480 9A81      		ldd r25,Y+2
 10063 4482 65E4      		ldi r22,lo8(69)
 10064 4484 70E0      		ldi r23,0
 10065 4486 0E94 0000 		call strchr
 10066 448a 9887      		std Y+8,r25
 10067 448c 8F83      		std Y+7,r24
1191:lp_solve_5.5/lp_MPS.c **** 
1192:lp_solve_5.5/lp_MPS.c ****       if (ptr!=NULL) {
 10068               		.loc 1 1192 0
 10069 448e 8F81      		ldd r24,Y+7
 10070 4490 9885      		ldd r25,Y+8
 10071 4492 892B      		or r24,r25
 10072 4494 01F0      		breq .L366
1193:lp_solve_5.5/lp_MPS.c ****        if (*(++ptr)=='-') ptr++;
 10073               		.loc 1 1193 0
 10074 4496 8F81      		ldd r24,Y+7
 10075 4498 9885      		ldd r25,Y+8
 10076 449a 0196      		adiw r24,1
 10077 449c 9887      		std Y+8,r25
 10078 449e 8F83      		std Y+7,r24
 10079 44a0 8F81      		ldd r24,Y+7
 10080 44a2 9885      		ldd r25,Y+8
 10081 44a4 FC01      		movw r30,r24
 10082 44a6 8081      		ld r24,Z
 10083 44a8 8D32      		cpi r24,lo8(45)
 10084 44aa 01F4      		brne .L368
 10085               		.loc 1 1193 0 is_stmt 0 discriminator 1
 10086 44ac 8F81      		ldd r24,Y+7
 10087 44ae 9885      		ldd r25,Y+8
 10088 44b0 0196      		adiw r24,1
 10089 44b2 9887      		std Y+8,r25
 10090 44b4 8F83      		std Y+7,r24
1194:lp_solve_5.5/lp_MPS.c ****        while ((i>12) && ((*ptr=='+') || (*ptr=='0'))) {
 10091               		.loc 1 1194 0 is_stmt 1 discriminator 1
 10092 44b6 00C0      		rjmp .L368
 10093               	.L369:
1195:lp_solve_5.5/lp_MPS.c ****         strcpy(ptr,ptr+1);
 10094               		.loc 1 1195 0
 10095 44b8 8F81      		ldd r24,Y+7
 10096 44ba 9885      		ldd r25,Y+8
 10097 44bc 9C01      		movw r18,r24
 10098 44be 2F5F      		subi r18,-1
 10099 44c0 3F4F      		sbci r19,-1
 10100 44c2 8F81      		ldd r24,Y+7
 10101 44c4 9885      		ldd r25,Y+8
 10102 44c6 B901      		movw r22,r18
 10103 44c8 0E94 0000 		call strcpy
1196:lp_solve_5.5/lp_MPS.c ****         i--;
 10104               		.loc 1 1196 0
 10105 44cc 8B81      		ldd r24,Y+3
 10106 44ce 9C81      		ldd r25,Y+4
 10107 44d0 0197      		sbiw r24,1
 10108 44d2 9C83      		std Y+4,r25
 10109 44d4 8B83      		std Y+3,r24
 10110               	.L368:
1194:lp_solve_5.5/lp_MPS.c ****        while ((i>12) && ((*ptr=='+') || (*ptr=='0'))) {
 10111               		.loc 1 1194 0
 10112 44d6 8B81      		ldd r24,Y+3
 10113 44d8 9C81      		ldd r25,Y+4
 10114 44da 0D97      		sbiw r24,13
 10115 44dc 04F0      		brlt .L366
1194:lp_solve_5.5/lp_MPS.c ****        while ((i>12) && ((*ptr=='+') || (*ptr=='0'))) {
 10116               		.loc 1 1194 0 is_stmt 0 discriminator 1
 10117 44de 8F81      		ldd r24,Y+7
 10118 44e0 9885      		ldd r25,Y+8
 10119 44e2 FC01      		movw r30,r24
 10120 44e4 8081      		ld r24,Z
 10121 44e6 8B32      		cpi r24,lo8(43)
 10122 44e8 01F0      		breq .L369
1194:lp_solve_5.5/lp_MPS.c ****        while ((i>12) && ((*ptr=='+') || (*ptr=='0'))) {
 10123               		.loc 1 1194 0 discriminator 2
 10124 44ea 8F81      		ldd r24,Y+7
 10125 44ec 9885      		ldd r25,Y+8
 10126 44ee FC01      		movw r30,r24
 10127 44f0 8081      		ld r24,Z
 10128 44f2 8033      		cpi r24,lo8(48)
 10129 44f4 01F0      		breq .L369
 10130               	.L366:
 10131               	.LBE8:
1197:lp_solve_5.5/lp_MPS.c ****        }
1198:lp_solve_5.5/lp_MPS.c ****       }
1199:lp_solve_5.5/lp_MPS.c ****      }
1200:lp_solve_5.5/lp_MPS.c ****     } while (i>12);
 10132               		.loc 1 1200 0 is_stmt 1
 10133 44f6 8B81      		ldd r24,Y+3
 10134 44f8 9C81      		ldd r25,Y+4
 10135 44fa 0D97      		sbiw r24,13
 10136 44fc 04F0      		brlt .+2
 10137 44fe 00C0      		rjmp .L370
 10138               	.LBE7:
1183:lp_solve_5.5/lp_MPS.c ****     int n=15;
 10139               		.loc 1 1183 0
 10140 4500 00C0      		rjmp .L380
 10141               	.L362:
1201:lp_solve_5.5/lp_MPS.c ****    }
1202:lp_solve_5.5/lp_MPS.c ****    else if (value>=1.0e10) {
 10142               		.loc 1 1202 0
 10143 4502 CE01      		movw r24,r28
 10144 4504 8D59      		subi r24,-99
 10145 4506 9F4F      		sbci r25,-1
 10146 4508 29EF      		ldi r18,lo8(-7)
 10147 450a 32E0      		ldi r19,lo8(2)
 10148 450c 45E1      		ldi r20,lo8(21)
 10149 450e 50E5      		ldi r21,lo8(80)
 10150 4510 FC01      		movw r30,r24
 10151 4512 6081      		ld r22,Z
 10152 4514 7181      		ldd r23,Z+1
 10153 4516 8281      		ldd r24,Z+2
 10154 4518 9381      		ldd r25,Z+3
 10155 451a 0E94 0000 		call __gesf2
 10156 451e 8823      		tst r24
 10157 4520 04F0      		brlt .L402
 10158               	.LBB9:
1203:lp_solve_5.5/lp_MPS.c ****     int n=13;
 10159               		.loc 1 1203 0
 10160 4522 8DE0      		ldi r24,lo8(13)
 10161 4524 90E0      		ldi r25,0
 10162 4526 9A87      		std Y+10,r25
 10163 4528 8987      		std Y+9,r24
 10164               	.L374:
1204:lp_solve_5.5/lp_MPS.c **** 
1205:lp_solve_5.5/lp_MPS.c ****     do {
1206:lp_solve_5.5/lp_MPS.c ****      i=sprintf(_str,"%*.0f",--n,(double) value);
 10165               		.loc 1 1206 0 discriminator 1
 10166 452a 8985      		ldd r24,Y+9
 10167 452c 9A85      		ldd r25,Y+10
 10168 452e 0197      		sbiw r24,1
 10169 4530 9A87      		std Y+10,r25
 10170 4532 8987      		std Y+9,r24
 10171 4534 CE01      		movw r24,r28
 10172 4536 8D59      		subi r24,-99
 10173 4538 9F4F      		sbci r25,-1
 10174 453a FC01      		movw r30,r24
 10175 453c 2381      		ldd r18,Z+3
 10176 453e 2F93      		push r18
 10177 4540 FC01      		movw r30,r24
 10178 4542 2281      		ldd r18,Z+2
 10179 4544 2F93      		push r18
 10180 4546 FC01      		movw r30,r24
 10181 4548 2181      		ldd r18,Z+1
 10182 454a 2F93      		push r18
 10183 454c FC01      		movw r30,r24
 10184 454e 8081      		ld r24,Z
 10185 4550 8F93      		push r24
 10186 4552 8A85      		ldd r24,Y+10
 10187 4554 8F93      		push r24
 10188 4556 8985      		ldd r24,Y+9
 10189 4558 8F93      		push r24
 10190 455a 80E0      		ldi r24,lo8(.LC88)
 10191 455c 90E0      		ldi r25,hi8(.LC88)
 10192 455e 892F      		mov r24,r25
 10193 4560 8F93      		push r24
 10194 4562 80E0      		ldi r24,lo8(.LC88)
 10195 4564 90E0      		ldi r25,hi8(.LC88)
 10196 4566 8F93      		push r24
 10197 4568 8A81      		ldd r24,Y+2
 10198 456a 8F93      		push r24
 10199 456c 8981      		ldd r24,Y+1
 10200 456e 8F93      		push r24
 10201 4570 0E94 0000 		call sprintf
 10202 4574 2DB7      		in r18,__SP_L__
 10203 4576 3EB7      		in r19,__SP_H__
 10204 4578 265F      		subi r18,-10
 10205 457a 3F4F      		sbci r19,-1
 10206 457c 0FB6      		in __tmp_reg__,__SREG__
 10207 457e F894      		cli
 10208 4580 DEBF      		out __SP_H__,r29
 10209 4582 0FBE      		out __SREG__,__tmp_reg__
 10210 4584 CDBF      		out __SP_L__,r28
 10211 4586 9C83      		std Y+4,r25
 10212 4588 8B83      		std Y+3,r24
1207:lp_solve_5.5/lp_MPS.c ****     } while (i>12);
 10213               		.loc 1 1207 0 discriminator 1
 10214 458a 8B81      		ldd r24,Y+3
 10215 458c 9C81      		ldd r25,Y+4
 10216 458e 0D97      		sbiw r24,13
 10217 4590 04F4      		brge .L374
 10218 4592 00C0      		rjmp .L380
 10219               	.L402:
 10220               	.LBE9:
1208:lp_solve_5.5/lp_MPS.c ****    }
1209:lp_solve_5.5/lp_MPS.c ****    else {
1210:lp_solve_5.5/lp_MPS.c ****     if (((i=sprintf(_str,"%12.10f",(double) value))>12) && (_str[12]>='5')) {
 10221               		.loc 1 1210 0
 10222 4594 CE01      		movw r24,r28
 10223 4596 8D59      		subi r24,-99
 10224 4598 9F4F      		sbci r25,-1
 10225 459a FC01      		movw r30,r24
 10226 459c 2381      		ldd r18,Z+3
 10227 459e 2F93      		push r18
 10228 45a0 FC01      		movw r30,r24
 10229 45a2 2281      		ldd r18,Z+2
 10230 45a4 2F93      		push r18
 10231 45a6 FC01      		movw r30,r24
 10232 45a8 2181      		ldd r18,Z+1
 10233 45aa 2F93      		push r18
 10234 45ac FC01      		movw r30,r24
 10235 45ae 8081      		ld r24,Z
 10236 45b0 8F93      		push r24
 10237 45b2 80E0      		ldi r24,lo8(.LC89)
 10238 45b4 90E0      		ldi r25,hi8(.LC89)
 10239 45b6 892F      		mov r24,r25
 10240 45b8 8F93      		push r24
 10241 45ba 80E0      		ldi r24,lo8(.LC89)
 10242 45bc 90E0      		ldi r25,hi8(.LC89)
 10243 45be 8F93      		push r24
 10244 45c0 8A81      		ldd r24,Y+2
 10245 45c2 8F93      		push r24
 10246 45c4 8981      		ldd r24,Y+1
 10247 45c6 8F93      		push r24
 10248 45c8 0E94 0000 		call sprintf
 10249 45cc 2DB7      		in r18,__SP_L__
 10250 45ce 3EB7      		in r19,__SP_H__
 10251 45d0 285F      		subi r18,-8
 10252 45d2 3F4F      		sbci r19,-1
 10253 45d4 0FB6      		in __tmp_reg__,__SREG__
 10254 45d6 F894      		cli
 10255 45d8 DEBF      		out __SP_H__,r29
 10256 45da 0FBE      		out __SREG__,__tmp_reg__
 10257 45dc CDBF      		out __SP_L__,r28
 10258 45de 9C83      		std Y+4,r25
 10259 45e0 8B83      		std Y+3,r24
 10260 45e2 8B81      		ldd r24,Y+3
 10261 45e4 9C81      		ldd r25,Y+4
 10262 45e6 0D97      		sbiw r24,13
 10263 45e8 04F4      		brge .+2
 10264 45ea 00C0      		rjmp .L380
 10265               		.loc 1 1210 0 is_stmt 0 discriminator 1
 10266 45ec 8981      		ldd r24,Y+1
 10267 45ee 9A81      		ldd r25,Y+2
 10268 45f0 0C96      		adiw r24,12
 10269 45f2 FC01      		movw r30,r24
 10270 45f4 8081      		ld r24,Z
 10271 45f6 8533      		cpi r24,lo8(53)
 10272 45f8 00F4      		brsh .+2
 10273 45fa 00C0      		rjmp .L380
1211:lp_solve_5.5/lp_MPS.c ****      for (i=11;i>=0;i--)
 10274               		.loc 1 1211 0 is_stmt 1
 10275 45fc 8BE0      		ldi r24,lo8(11)
 10276 45fe 90E0      		ldi r25,0
 10277 4600 9C83      		std Y+4,r25
 10278 4602 8B83      		std Y+3,r24
 10279 4604 00C0      		rjmp .L375
 10280               	.L379:
1212:lp_solve_5.5/lp_MPS.c ****       if (_str[i]!='.') {
 10281               		.loc 1 1212 0
 10282 4606 8B81      		ldd r24,Y+3
 10283 4608 9C81      		ldd r25,Y+4
 10284 460a 2981      		ldd r18,Y+1
 10285 460c 3A81      		ldd r19,Y+2
 10286 460e 820F      		add r24,r18
 10287 4610 931F      		adc r25,r19
 10288 4612 FC01      		movw r30,r24
 10289 4614 8081      		ld r24,Z
 10290 4616 8E32      		cpi r24,lo8(46)
 10291 4618 01F0      		breq .L376
1213:lp_solve_5.5/lp_MPS.c ****        if (++_str[i]>'9') _str[i]='0';
 10292               		.loc 1 1213 0
 10293 461a 8B81      		ldd r24,Y+3
 10294 461c 9C81      		ldd r25,Y+4
 10295 461e 2981      		ldd r18,Y+1
 10296 4620 3A81      		ldd r19,Y+2
 10297 4622 820F      		add r24,r18
 10298 4624 931F      		adc r25,r19
 10299 4626 FC01      		movw r30,r24
 10300 4628 2081      		ld r18,Z
 10301 462a 2F5F      		subi r18,lo8(-(1))
 10302 462c FC01      		movw r30,r24
 10303 462e 2083      		st Z,r18
 10304 4630 FC01      		movw r30,r24
 10305 4632 8081      		ld r24,Z
 10306 4634 8A33      		cpi r24,lo8(58)
 10307 4636 00F0      		brlo .L405
 10308               		.loc 1 1213 0 is_stmt 0 discriminator 1
 10309 4638 8B81      		ldd r24,Y+3
 10310 463a 9C81      		ldd r25,Y+4
 10311 463c 2981      		ldd r18,Y+1
 10312 463e 3A81      		ldd r19,Y+2
 10313 4640 820F      		add r24,r18
 10314 4642 931F      		adc r25,r19
 10315 4644 20E3      		ldi r18,lo8(48)
 10316 4646 FC01      		movw r30,r24
 10317 4648 2083      		st Z,r18
 10318               	.L376:
1211:lp_solve_5.5/lp_MPS.c ****      for (i=11;i>=0;i--)
 10319               		.loc 1 1211 0 is_stmt 1 discriminator 2
 10320 464a 8B81      		ldd r24,Y+3
 10321 464c 9C81      		ldd r25,Y+4
 10322 464e 0197      		sbiw r24,1
 10323 4650 9C83      		std Y+4,r25
 10324 4652 8B83      		std Y+3,r24
 10325               	.L375:
1211:lp_solve_5.5/lp_MPS.c ****      for (i=11;i>=0;i--)
 10326               		.loc 1 1211 0 is_stmt 0 discriminator 1
 10327 4654 8B81      		ldd r24,Y+3
 10328 4656 9C81      		ldd r25,Y+4
 10329 4658 9923      		tst r25
 10330 465a 04F4      		brge .L379
 10331 465c 00C0      		rjmp .L378
 10332               	.L405:
1214:lp_solve_5.5/lp_MPS.c ****        else break;
 10333               		.loc 1 1214 0 is_stmt 1
 10334 465e 0000      		nop
 10335               	.L378:
1215:lp_solve_5.5/lp_MPS.c ****       }
1216:lp_solve_5.5/lp_MPS.c ****      if (i<0) {
 10336               		.loc 1 1216 0
 10337 4660 8B81      		ldd r24,Y+3
 10338 4662 9C81      		ldd r25,Y+4
 10339 4664 9923      		tst r25
 10340 4666 04F0      		brlt .+2
 10341 4668 00C0      		rjmp .L380
1217:lp_solve_5.5/lp_MPS.c ****       *(--_str)='1';
 10342               		.loc 1 1217 0
 10343 466a 8981      		ldd r24,Y+1
 10344 466c 9A81      		ldd r25,Y+2
 10345 466e 0197      		sbiw r24,1
 10346 4670 9A83      		std Y+2,r25
 10347 4672 8983      		std Y+1,r24
 10348 4674 8981      		ldd r24,Y+1
 10349 4676 9A81      		ldd r25,Y+2
 10350 4678 21E3      		ldi r18,lo8(49)
 10351 467a FC01      		movw r30,r24
 10352 467c 2083      		st Z,r18
1218:lp_solve_5.5/lp_MPS.c ****       *(--_str)=' ';
 10353               		.loc 1 1218 0
 10354 467e 8981      		ldd r24,Y+1
 10355 4680 9A81      		ldd r25,Y+2
 10356 4682 0197      		sbiw r24,1
 10357 4684 9A83      		std Y+2,r25
 10358 4686 8983      		std Y+1,r24
 10359 4688 8981      		ldd r24,Y+1
 10360 468a 9A81      		ldd r25,Y+2
 10361 468c 20E2      		ldi r18,lo8(32)
 10362 468e FC01      		movw r30,r24
 10363 4690 2083      		st Z,r18
 10364 4692 00C0      		rjmp .L380
 10365               	.L401:
1219:lp_solve_5.5/lp_MPS.c ****      }
1220:lp_solve_5.5/lp_MPS.c ****     }
1221:lp_solve_5.5/lp_MPS.c ****    }
1222:lp_solve_5.5/lp_MPS.c ****   else
1223:lp_solve_5.5/lp_MPS.c ****    if ((value<-0.99999999e11) || (value>-0.0001)) {
 10366               		.loc 1 1223 0
 10367 4694 CE01      		movw r24,r28
 10368 4696 8D59      		subi r24,-99
 10369 4698 9F4F      		sbci r25,-1
 10370 469a 27EB      		ldi r18,lo8(-73)
 10371 469c 33E4      		ldi r19,lo8(67)
 10372 469e 4AEB      		ldi r20,lo8(-70)
 10373 46a0 51ED      		ldi r21,lo8(-47)
 10374 46a2 FC01      		movw r30,r24
 10375 46a4 6081      		ld r22,Z
 10376 46a6 7181      		ldd r23,Z+1
 10377 46a8 8281      		ldd r24,Z+2
 10378 46aa 9381      		ldd r25,Z+3
 10379 46ac 0E94 0000 		call __ltsf2
 10380 46b0 8823      		tst r24
 10381 46b2 04F0      		brlt .L381
 10382               		.loc 1 1223 0 is_stmt 0 discriminator 1
 10383 46b4 CE01      		movw r24,r28
 10384 46b6 8D59      		subi r24,-99
 10385 46b8 9F4F      		sbci r25,-1
 10386 46ba 27E1      		ldi r18,lo8(23)
 10387 46bc 37EB      		ldi r19,lo8(-73)
 10388 46be 41ED      		ldi r20,lo8(-47)
 10389 46c0 58EB      		ldi r21,lo8(-72)
 10390 46c2 FC01      		movw r30,r24
 10391 46c4 6081      		ld r22,Z
 10392 46c6 7181      		ldd r23,Z+1
 10393 46c8 8281      		ldd r24,Z+2
 10394 46ca 9381      		ldd r25,Z+3
 10395 46cc 0E94 0000 		call __gtsf2
 10396 46d0 1816      		cp __zero_reg__,r24
 10397 46d2 04F0      		brlt .+2
 10398 46d4 00C0      		rjmp .L403
 10399               	.L381:
 10400               	.LBB10:
1224:lp_solve_5.5/lp_MPS.c ****     int n=15;
 10401               		.loc 1 1224 0 is_stmt 1
 10402 46d6 8FE0      		ldi r24,lo8(15)
 10403 46d8 90E0      		ldi r25,0
 10404 46da 9C87      		std Y+12,r25
 10405 46dc 8B87      		std Y+11,r24
 10406               	.L388:
1225:lp_solve_5.5/lp_MPS.c **** 
1226:lp_solve_5.5/lp_MPS.c ****     do {
1227:lp_solve_5.5/lp_MPS.c ****      n--;
 10407               		.loc 1 1227 0
 10408 46de 8B85      		ldd r24,Y+11
 10409 46e0 9C85      		ldd r25,Y+12
 10410 46e2 0197      		sbiw r24,1
 10411 46e4 9C87      		std Y+12,r25
 10412 46e6 8B87      		std Y+11,r24
1228:lp_solve_5.5/lp_MPS.c ****      i=sprintf(_str,"%*.*E",n,n-7,(double) value);
 10413               		.loc 1 1228 0
 10414 46e8 8B85      		ldd r24,Y+11
 10415 46ea 9C85      		ldd r25,Y+12
 10416 46ec 9C01      		movw r18,r24
 10417 46ee 2750      		subi r18,7
 10418 46f0 3109      		sbc r19,__zero_reg__
 10419 46f2 CE01      		movw r24,r28
 10420 46f4 8D59      		subi r24,-99
 10421 46f6 9F4F      		sbci r25,-1
 10422 46f8 FC01      		movw r30,r24
 10423 46fa 4381      		ldd r20,Z+3
 10424 46fc 4F93      		push r20
 10425 46fe FC01      		movw r30,r24
 10426 4700 4281      		ldd r20,Z+2
 10427 4702 4F93      		push r20
 10428 4704 FC01      		movw r30,r24
 10429 4706 4181      		ldd r20,Z+1
 10430 4708 4F93      		push r20
 10431 470a FC01      		movw r30,r24
 10432 470c 8081      		ld r24,Z
 10433 470e 8F93      		push r24
 10434 4710 832F      		mov r24,r19
 10435 4712 8F93      		push r24
 10436 4714 822F      		mov r24,r18
 10437 4716 8F93      		push r24
 10438 4718 8C85      		ldd r24,Y+12
 10439 471a 8F93      		push r24
 10440 471c 8B85      		ldd r24,Y+11
 10441 471e 8F93      		push r24
 10442 4720 80E0      		ldi r24,lo8(.LC87)
 10443 4722 90E0      		ldi r25,hi8(.LC87)
 10444 4724 892F      		mov r24,r25
 10445 4726 8F93      		push r24
 10446 4728 80E0      		ldi r24,lo8(.LC87)
 10447 472a 90E0      		ldi r25,hi8(.LC87)
 10448 472c 8F93      		push r24
 10449 472e 8A81      		ldd r24,Y+2
 10450 4730 8F93      		push r24
 10451 4732 8981      		ldd r24,Y+1
 10452 4734 8F93      		push r24
 10453 4736 0E94 0000 		call sprintf
 10454 473a 2DB7      		in r18,__SP_L__
 10455 473c 3EB7      		in r19,__SP_H__
 10456 473e 245F      		subi r18,-12
 10457 4740 3F4F      		sbci r19,-1
 10458 4742 0FB6      		in __tmp_reg__,__SREG__
 10459 4744 F894      		cli
 10460 4746 DEBF      		out __SP_H__,r29
 10461 4748 0FBE      		out __SREG__,__tmp_reg__
 10462 474a CDBF      		out __SP_L__,r28
 10463 474c 9C83      		std Y+4,r25
 10464 474e 8B83      		std Y+3,r24
1229:lp_solve_5.5/lp_MPS.c ****      if (i>12) {
 10465               		.loc 1 1229 0
 10466 4750 8B81      		ldd r24,Y+3
 10467 4752 9C81      		ldd r25,Y+4
 10468 4754 0D97      		sbiw r24,13
 10469 4756 04F0      		brlt .L384
 10470               	.LBB11:
1230:lp_solve_5.5/lp_MPS.c ****       char *ptr=strchr(_str,'E');
 10471               		.loc 1 1230 0
 10472 4758 8981      		ldd r24,Y+1
 10473 475a 9A81      		ldd r25,Y+2
 10474 475c 65E4      		ldi r22,lo8(69)
 10475 475e 70E0      		ldi r23,0
 10476 4760 0E94 0000 		call strchr
 10477 4764 9E87      		std Y+14,r25
 10478 4766 8D87      		std Y+13,r24
1231:lp_solve_5.5/lp_MPS.c **** 
1232:lp_solve_5.5/lp_MPS.c ****       if (ptr!=NULL) {
 10479               		.loc 1 1232 0
 10480 4768 8D85      		ldd r24,Y+13
 10481 476a 9E85      		ldd r25,Y+14
 10482 476c 892B      		or r24,r25
 10483 476e 01F0      		breq .L384
1233:lp_solve_5.5/lp_MPS.c ****        if (*(++ptr)=='-') ptr++;
 10484               		.loc 1 1233 0
 10485 4770 8D85      		ldd r24,Y+13
 10486 4772 9E85      		ldd r25,Y+14
 10487 4774 0196      		adiw r24,1
 10488 4776 9E87      		std Y+14,r25
 10489 4778 8D87      		std Y+13,r24
 10490 477a 8D85      		ldd r24,Y+13
 10491 477c 9E85      		ldd r25,Y+14
 10492 477e FC01      		movw r30,r24
 10493 4780 8081      		ld r24,Z
 10494 4782 8D32      		cpi r24,lo8(45)
 10495 4784 01F4      		brne .L386
 10496               		.loc 1 1233 0 is_stmt 0 discriminator 1
 10497 4786 8D85      		ldd r24,Y+13
 10498 4788 9E85      		ldd r25,Y+14
 10499 478a 0196      		adiw r24,1
 10500 478c 9E87      		std Y+14,r25
 10501 478e 8D87      		std Y+13,r24
1234:lp_solve_5.5/lp_MPS.c ****        while ((i>12) && ((*ptr=='+') || (*ptr=='0'))) {
 10502               		.loc 1 1234 0 is_stmt 1 discriminator 1
 10503 4790 00C0      		rjmp .L386
 10504               	.L387:
1235:lp_solve_5.5/lp_MPS.c ****         strcpy(ptr,ptr+1);
 10505               		.loc 1 1235 0
 10506 4792 8D85      		ldd r24,Y+13
 10507 4794 9E85      		ldd r25,Y+14
 10508 4796 9C01      		movw r18,r24
 10509 4798 2F5F      		subi r18,-1
 10510 479a 3F4F      		sbci r19,-1
 10511 479c 8D85      		ldd r24,Y+13
 10512 479e 9E85      		ldd r25,Y+14
 10513 47a0 B901      		movw r22,r18
 10514 47a2 0E94 0000 		call strcpy
1236:lp_solve_5.5/lp_MPS.c ****         i--;
 10515               		.loc 1 1236 0
 10516 47a6 8B81      		ldd r24,Y+3
 10517 47a8 9C81      		ldd r25,Y+4
 10518 47aa 0197      		sbiw r24,1
 10519 47ac 9C83      		std Y+4,r25
 10520 47ae 8B83      		std Y+3,r24
 10521               	.L386:
1234:lp_solve_5.5/lp_MPS.c ****        while ((i>12) && ((*ptr=='+') || (*ptr=='0'))) {
 10522               		.loc 1 1234 0
 10523 47b0 8B81      		ldd r24,Y+3
 10524 47b2 9C81      		ldd r25,Y+4
 10525 47b4 0D97      		sbiw r24,13
 10526 47b6 04F0      		brlt .L384
1234:lp_solve_5.5/lp_MPS.c ****        while ((i>12) && ((*ptr=='+') || (*ptr=='0'))) {
 10527               		.loc 1 1234 0 is_stmt 0 discriminator 1
 10528 47b8 8D85      		ldd r24,Y+13
 10529 47ba 9E85      		ldd r25,Y+14
 10530 47bc FC01      		movw r30,r24
 10531 47be 8081      		ld r24,Z
 10532 47c0 8B32      		cpi r24,lo8(43)
 10533 47c2 01F0      		breq .L387
1234:lp_solve_5.5/lp_MPS.c ****        while ((i>12) && ((*ptr=='+') || (*ptr=='0'))) {
 10534               		.loc 1 1234 0 discriminator 2
 10535 47c4 8D85      		ldd r24,Y+13
 10536 47c6 9E85      		ldd r25,Y+14
 10537 47c8 FC01      		movw r30,r24
 10538 47ca 8081      		ld r24,Z
 10539 47cc 8033      		cpi r24,lo8(48)
 10540 47ce 01F0      		breq .L387
 10541               	.L384:
 10542               	.LBE11:
1237:lp_solve_5.5/lp_MPS.c ****        }
1238:lp_solve_5.5/lp_MPS.c ****       }
1239:lp_solve_5.5/lp_MPS.c ****      }
1240:lp_solve_5.5/lp_MPS.c ****     } while (i>12);
 10543               		.loc 1 1240 0 is_stmt 1
 10544 47d0 8B81      		ldd r24,Y+3
 10545 47d2 9C81      		ldd r25,Y+4
 10546 47d4 0D97      		sbiw r24,13
 10547 47d6 04F0      		brlt .+2
 10548 47d8 00C0      		rjmp .L388
 10549               	.LBE10:
1223:lp_solve_5.5/lp_MPS.c ****     int n=15;
 10550               		.loc 1 1223 0
 10551 47da 00C0      		rjmp .L380
 10552               	.L403:
1241:lp_solve_5.5/lp_MPS.c ****    }
1242:lp_solve_5.5/lp_MPS.c ****    else if (value<=-1.0e9) {
 10553               		.loc 1 1242 0
 10554 47dc CE01      		movw r24,r28
 10555 47de 8D59      		subi r24,-99
 10556 47e0 9F4F      		sbci r25,-1
 10557 47e2 28E2      		ldi r18,lo8(40)
 10558 47e4 3BE6      		ldi r19,lo8(107)
 10559 47e6 4EE6      		ldi r20,lo8(110)
 10560 47e8 5EEC      		ldi r21,lo8(-50)
 10561 47ea FC01      		movw r30,r24
 10562 47ec 6081      		ld r22,Z
 10563 47ee 7181      		ldd r23,Z+1
 10564 47f0 8281      		ldd r24,Z+2
 10565 47f2 9381      		ldd r25,Z+3
 10566 47f4 0E94 0000 		call __lesf2
 10567 47f8 1816      		cp __zero_reg__,r24
 10568 47fa 04F0      		brlt .L404
 10569               	.LBB12:
1243:lp_solve_5.5/lp_MPS.c ****     int n=13;
 10570               		.loc 1 1243 0
 10571 47fc 8DE0      		ldi r24,lo8(13)
 10572 47fe 90E0      		ldi r25,0
 10573 4800 988B      		std Y+16,r25
 10574 4802 8F87      		std Y+15,r24
 10575               	.L391:
1244:lp_solve_5.5/lp_MPS.c **** 
1245:lp_solve_5.5/lp_MPS.c ****     do {
1246:lp_solve_5.5/lp_MPS.c ****      i=sprintf(_str,"%*.0f",--n,(double) value);
 10576               		.loc 1 1246 0 discriminator 1
 10577 4804 8F85      		ldd r24,Y+15
 10578 4806 9889      		ldd r25,Y+16
 10579 4808 0197      		sbiw r24,1
 10580 480a 988B      		std Y+16,r25
 10581 480c 8F87      		std Y+15,r24
 10582 480e CE01      		movw r24,r28
 10583 4810 8D59      		subi r24,-99
 10584 4812 9F4F      		sbci r25,-1
 10585 4814 FC01      		movw r30,r24
 10586 4816 2381      		ldd r18,Z+3
 10587 4818 2F93      		push r18
 10588 481a FC01      		movw r30,r24
 10589 481c 2281      		ldd r18,Z+2
 10590 481e 2F93      		push r18
 10591 4820 FC01      		movw r30,r24
 10592 4822 2181      		ldd r18,Z+1
 10593 4824 2F93      		push r18
 10594 4826 FC01      		movw r30,r24
 10595 4828 8081      		ld r24,Z
 10596 482a 8F93      		push r24
 10597 482c 8889      		ldd r24,Y+16
 10598 482e 8F93      		push r24
 10599 4830 8F85      		ldd r24,Y+15
 10600 4832 8F93      		push r24
 10601 4834 80E0      		ldi r24,lo8(.LC88)
 10602 4836 90E0      		ldi r25,hi8(.LC88)
 10603 4838 892F      		mov r24,r25
 10604 483a 8F93      		push r24
 10605 483c 80E0      		ldi r24,lo8(.LC88)
 10606 483e 90E0      		ldi r25,hi8(.LC88)
 10607 4840 8F93      		push r24
 10608 4842 8A81      		ldd r24,Y+2
 10609 4844 8F93      		push r24
 10610 4846 8981      		ldd r24,Y+1
 10611 4848 8F93      		push r24
 10612 484a 0E94 0000 		call sprintf
 10613 484e 2DB7      		in r18,__SP_L__
 10614 4850 3EB7      		in r19,__SP_H__
 10615 4852 265F      		subi r18,-10
 10616 4854 3F4F      		sbci r19,-1
 10617 4856 0FB6      		in __tmp_reg__,__SREG__
 10618 4858 F894      		cli
 10619 485a DEBF      		out __SP_H__,r29
 10620 485c 0FBE      		out __SREG__,__tmp_reg__
 10621 485e CDBF      		out __SP_L__,r28
 10622 4860 9C83      		std Y+4,r25
 10623 4862 8B83      		std Y+3,r24
1247:lp_solve_5.5/lp_MPS.c ****     } while (i>12);
 10624               		.loc 1 1247 0 discriminator 1
 10625 4864 8B81      		ldd r24,Y+3
 10626 4866 9C81      		ldd r25,Y+4
 10627 4868 0D97      		sbiw r24,13
 10628 486a 04F4      		brge .L391
 10629 486c 00C0      		rjmp .L380
 10630               	.L404:
 10631               	.LBE12:
1248:lp_solve_5.5/lp_MPS.c ****    }
1249:lp_solve_5.5/lp_MPS.c ****    else
1250:lp_solve_5.5/lp_MPS.c ****     if (((i=sprintf(_str,"%12.9f",(double) value))>12) && (_str[12]>='5')) {
 10632               		.loc 1 1250 0
 10633 486e CE01      		movw r24,r28
 10634 4870 8D59      		subi r24,-99
 10635 4872 9F4F      		sbci r25,-1
 10636 4874 FC01      		movw r30,r24
 10637 4876 2381      		ldd r18,Z+3
 10638 4878 2F93      		push r18
 10639 487a FC01      		movw r30,r24
 10640 487c 2281      		ldd r18,Z+2
 10641 487e 2F93      		push r18
 10642 4880 FC01      		movw r30,r24
 10643 4882 2181      		ldd r18,Z+1
 10644 4884 2F93      		push r18
 10645 4886 FC01      		movw r30,r24
 10646 4888 8081      		ld r24,Z
 10647 488a 8F93      		push r24
 10648 488c 80E0      		ldi r24,lo8(.LC90)
 10649 488e 90E0      		ldi r25,hi8(.LC90)
 10650 4890 892F      		mov r24,r25
 10651 4892 8F93      		push r24
 10652 4894 80E0      		ldi r24,lo8(.LC90)
 10653 4896 90E0      		ldi r25,hi8(.LC90)
 10654 4898 8F93      		push r24
 10655 489a 8A81      		ldd r24,Y+2
 10656 489c 8F93      		push r24
 10657 489e 8981      		ldd r24,Y+1
 10658 48a0 8F93      		push r24
 10659 48a2 0E94 0000 		call sprintf
 10660 48a6 2DB7      		in r18,__SP_L__
 10661 48a8 3EB7      		in r19,__SP_H__
 10662 48aa 285F      		subi r18,-8
 10663 48ac 3F4F      		sbci r19,-1
 10664 48ae 0FB6      		in __tmp_reg__,__SREG__
 10665 48b0 F894      		cli
 10666 48b2 DEBF      		out __SP_H__,r29
 10667 48b4 0FBE      		out __SREG__,__tmp_reg__
 10668 48b6 CDBF      		out __SP_L__,r28
 10669 48b8 9C83      		std Y+4,r25
 10670 48ba 8B83      		std Y+3,r24
 10671 48bc 8B81      		ldd r24,Y+3
 10672 48be 9C81      		ldd r25,Y+4
 10673 48c0 0D97      		sbiw r24,13
 10674 48c2 04F4      		brge .+2
 10675 48c4 00C0      		rjmp .L380
 10676               		.loc 1 1250 0 is_stmt 0 discriminator 1
 10677 48c6 8981      		ldd r24,Y+1
 10678 48c8 9A81      		ldd r25,Y+2
 10679 48ca 0C96      		adiw r24,12
 10680 48cc FC01      		movw r30,r24
 10681 48ce 8081      		ld r24,Z
 10682 48d0 8533      		cpi r24,lo8(53)
 10683 48d2 00F4      		brsh .+2
 10684 48d4 00C0      		rjmp .L380
1251:lp_solve_5.5/lp_MPS.c ****      for (i=11;i>=1;i--)
 10685               		.loc 1 1251 0 is_stmt 1
 10686 48d6 8BE0      		ldi r24,lo8(11)
 10687 48d8 90E0      		ldi r25,0
 10688 48da 9C83      		std Y+4,r25
 10689 48dc 8B83      		std Y+3,r24
 10690 48de 00C0      		rjmp .L392
 10691               	.L396:
1252:lp_solve_5.5/lp_MPS.c ****       if (_str[i]!='.') {
 10692               		.loc 1 1252 0
 10693 48e0 8B81      		ldd r24,Y+3
 10694 48e2 9C81      		ldd r25,Y+4
 10695 48e4 2981      		ldd r18,Y+1
 10696 48e6 3A81      		ldd r19,Y+2
 10697 48e8 820F      		add r24,r18
 10698 48ea 931F      		adc r25,r19
 10699 48ec FC01      		movw r30,r24
 10700 48ee 8081      		ld r24,Z
 10701 48f0 8E32      		cpi r24,lo8(46)
 10702 48f2 01F0      		breq .L393
1253:lp_solve_5.5/lp_MPS.c ****        if (++_str[i]>'9') _str[i]='0';
 10703               		.loc 1 1253 0
 10704 48f4 8B81      		ldd r24,Y+3
 10705 48f6 9C81      		ldd r25,Y+4
 10706 48f8 2981      		ldd r18,Y+1
 10707 48fa 3A81      		ldd r19,Y+2
 10708 48fc 820F      		add r24,r18
 10709 48fe 931F      		adc r25,r19
 10710 4900 FC01      		movw r30,r24
 10711 4902 2081      		ld r18,Z
 10712 4904 2F5F      		subi r18,lo8(-(1))
 10713 4906 FC01      		movw r30,r24
 10714 4908 2083      		st Z,r18
 10715 490a FC01      		movw r30,r24
 10716 490c 8081      		ld r24,Z
 10717 490e 8A33      		cpi r24,lo8(58)
 10718 4910 00F0      		brlo .L406
 10719               		.loc 1 1253 0 is_stmt 0 discriminator 1
 10720 4912 8B81      		ldd r24,Y+3
 10721 4914 9C81      		ldd r25,Y+4
 10722 4916 2981      		ldd r18,Y+1
 10723 4918 3A81      		ldd r19,Y+2
 10724 491a 820F      		add r24,r18
 10725 491c 931F      		adc r25,r19
 10726 491e 20E3      		ldi r18,lo8(48)
 10727 4920 FC01      		movw r30,r24
 10728 4922 2083      		st Z,r18
 10729               	.L393:
1251:lp_solve_5.5/lp_MPS.c ****      for (i=11;i>=1;i--)
 10730               		.loc 1 1251 0 is_stmt 1 discriminator 2
 10731 4924 8B81      		ldd r24,Y+3
 10732 4926 9C81      		ldd r25,Y+4
 10733 4928 0197      		sbiw r24,1
 10734 492a 9C83      		std Y+4,r25
 10735 492c 8B83      		std Y+3,r24
 10736               	.L392:
1251:lp_solve_5.5/lp_MPS.c ****      for (i=11;i>=1;i--)
 10737               		.loc 1 1251 0 is_stmt 0 discriminator 1
 10738 492e 8B81      		ldd r24,Y+3
 10739 4930 9C81      		ldd r25,Y+4
 10740 4932 1816      		cp __zero_reg__,r24
 10741 4934 1906      		cpc __zero_reg__,r25
 10742 4936 04F0      		brlt .L396
 10743 4938 00C0      		rjmp .L395
 10744               	.L406:
1254:lp_solve_5.5/lp_MPS.c ****        else break;
 10745               		.loc 1 1254 0 is_stmt 1
 10746 493a 0000      		nop
 10747               	.L395:
1255:lp_solve_5.5/lp_MPS.c ****       }
1256:lp_solve_5.5/lp_MPS.c ****      if (i<1) {
 10748               		.loc 1 1256 0
 10749 493c 8B81      		ldd r24,Y+3
 10750 493e 9C81      		ldd r25,Y+4
 10751 4940 1816      		cp __zero_reg__,r24
 10752 4942 1906      		cpc __zero_reg__,r25
 10753 4944 04F0      		brlt .L380
1257:lp_solve_5.5/lp_MPS.c ****       *_str='1';
 10754               		.loc 1 1257 0
 10755 4946 8981      		ldd r24,Y+1
 10756 4948 9A81      		ldd r25,Y+2
 10757 494a 21E3      		ldi r18,lo8(49)
 10758 494c FC01      		movw r30,r24
 10759 494e 2083      		st Z,r18
1258:lp_solve_5.5/lp_MPS.c ****       *(--_str)='-';
 10760               		.loc 1 1258 0
 10761 4950 8981      		ldd r24,Y+1
 10762 4952 9A81      		ldd r25,Y+2
 10763 4954 0197      		sbiw r24,1
 10764 4956 9A83      		std Y+2,r25
 10765 4958 8983      		std Y+1,r24
 10766 495a 8981      		ldd r24,Y+1
 10767 495c 9A81      		ldd r25,Y+2
 10768 495e 2DE2      		ldi r18,lo8(45)
 10769 4960 FC01      		movw r30,r24
 10770 4962 2083      		st Z,r18
1259:lp_solve_5.5/lp_MPS.c ****       *(--_str)=' ';
 10771               		.loc 1 1259 0
 10772 4964 8981      		ldd r24,Y+1
 10773 4966 9A81      		ldd r25,Y+2
 10774 4968 0197      		sbiw r24,1
 10775 496a 9A83      		std Y+2,r25
 10776 496c 8983      		std Y+1,r24
 10777 496e 8981      		ldd r24,Y+1
 10778 4970 9A81      		ldd r25,Y+2
 10779 4972 20E2      		ldi r18,lo8(32)
 10780 4974 FC01      		movw r30,r24
 10781 4976 2083      		st Z,r18
 10782               	.L380:
1260:lp_solve_5.5/lp_MPS.c ****      }
1261:lp_solve_5.5/lp_MPS.c ****     }
1262:lp_solve_5.5/lp_MPS.c ****   strncpy(str,_str,12);
 10783               		.loc 1 1262 0
 10784 4978 2981      		ldd r18,Y+1
 10785 497a 3A81      		ldd r19,Y+2
 10786 497c CE01      		movw r24,r28
 10787 497e 8F59      		subi r24,-97
 10788 4980 9F4F      		sbci r25,-1
 10789 4982 FC01      		movw r30,r24
 10790 4984 8081      		ld r24,Z
 10791 4986 9181      		ldd r25,Z+1
 10792 4988 4CE0      		ldi r20,lo8(12)
 10793 498a 50E0      		ldi r21,0
 10794 498c B901      		movw r22,r18
 10795 498e 0E94 0000 		call strncpy
1263:lp_solve_5.5/lp_MPS.c ****  }
 10796               		.loc 1 1263 0
 10797 4992 0000      		nop
 10798               	/* epilogue start */
 10799 4994 CA59      		subi r28,-102
 10800 4996 DF4F      		sbci r29,-1
 10801 4998 0FB6      		in __tmp_reg__,__SREG__
 10802 499a F894      		cli
 10803 499c DEBF      		out __SP_H__,r29
 10804 499e 0FBE      		out __SREG__,__tmp_reg__
 10805 49a0 CDBF      		out __SP_L__,r28
 10806 49a2 DF91      		pop r29
 10807 49a4 CF91      		pop r28
 10808 49a6 0895      		ret
 10809               		.cfi_endproc
 10810               	.LFE18:
 10813               	formatnumber12:
 10814               	.LFB19:
1264:lp_solve_5.5/lp_MPS.c **** 
1265:lp_solve_5.5/lp_MPS.c **** static char *formatnumber12(char *numberbuffer, double a)
1266:lp_solve_5.5/lp_MPS.c **** {
 10815               		.loc 1 1266 0
 10816               		.cfi_startproc
 10817 49a8 CF93      		push r28
 10818               	.LCFI90:
 10819               		.cfi_def_cfa_offset 3
 10820               		.cfi_offset 28, -2
 10821 49aa DF93      		push r29
 10822               	.LCFI91:
 10823               		.cfi_def_cfa_offset 4
 10824               		.cfi_offset 29, -3
 10825 49ac 00D0      		rcall .
 10826 49ae 00D0      		rcall .
 10827 49b0 00D0      		rcall .
 10828               	.LCFI92:
 10829               		.cfi_def_cfa_offset 10
 10830 49b2 CDB7      		in r28,__SP_L__
 10831 49b4 DEB7      		in r29,__SP_H__
 10832               	.LCFI93:
 10833               		.cfi_def_cfa_register 28
 10834               	/* prologue: function */
 10835               	/* frame size = 6 */
 10836               	/* stack size = 8 */
 10837               	.L__stack_usage = 8
 10838 49b6 9A83      		std Y+2,r25
 10839 49b8 8983      		std Y+1,r24
 10840 49ba 4B83      		std Y+3,r20
 10841 49bc 5C83      		std Y+4,r21
 10842 49be 6D83      		std Y+5,r22
 10843 49c0 7E83      		std Y+6,r23
1267:lp_solve_5.5/lp_MPS.c **** #if 0
1268:lp_solve_5.5/lp_MPS.c ****   return(sprintf(numberbuffer, "%12g", a));
1269:lp_solve_5.5/lp_MPS.c **** #else
1270:lp_solve_5.5/lp_MPS.c ****   number(numberbuffer, a);
 10844               		.loc 1 1270 0
 10845 49c2 8B81      		ldd r24,Y+3
 10846 49c4 9C81      		ldd r25,Y+4
 10847 49c6 AD81      		ldd r26,Y+5
 10848 49c8 BE81      		ldd r27,Y+6
 10849 49ca 2981      		ldd r18,Y+1
 10850 49cc 3A81      		ldd r19,Y+2
 10851 49ce AC01      		movw r20,r24
 10852 49d0 BD01      		movw r22,r26
 10853 49d2 C901      		movw r24,r18
 10854 49d4 0E94 0000 		call number
1271:lp_solve_5.5/lp_MPS.c ****   return(numberbuffer);
 10855               		.loc 1 1271 0
 10856 49d8 8981      		ldd r24,Y+1
 10857 49da 9A81      		ldd r25,Y+2
 10858               	/* epilogue start */
1272:lp_solve_5.5/lp_MPS.c **** #endif
1273:lp_solve_5.5/lp_MPS.c **** }
 10859               		.loc 1 1273 0
 10860 49dc 2696      		adiw r28,6
 10861 49de 0FB6      		in __tmp_reg__,__SREG__
 10862 49e0 F894      		cli
 10863 49e2 DEBF      		out __SP_H__,r29
 10864 49e4 0FBE      		out __SREG__,__tmp_reg__
 10865 49e6 CDBF      		out __SP_L__,r28
 10866 49e8 DF91      		pop r29
 10867 49ea CF91      		pop r28
 10868 49ec 0895      		ret
 10869               		.cfi_endproc
 10870               	.LFE19:
 10872               		.section	.rodata
 10873               	.LC91:
 10874 0861 252D 382E 		.string	"%-8.8s"
 10874      3873 00
 10875               		.text
 10876               	.global	MPSnameFIXED
 10878               	MPSnameFIXED:
 10879               	.LFB20:
1274:lp_solve_5.5/lp_MPS.c **** 
1275:lp_solve_5.5/lp_MPS.c **** STATIC char *MPSnameFIXED(char *name0, char *name)
1276:lp_solve_5.5/lp_MPS.c **** {
 10880               		.loc 1 1276 0
 10881               		.cfi_startproc
 10882 49ee CF93      		push r28
 10883               	.LCFI94:
 10884               		.cfi_def_cfa_offset 3
 10885               		.cfi_offset 28, -2
 10886 49f0 DF93      		push r29
 10887               	.LCFI95:
 10888               		.cfi_def_cfa_offset 4
 10889               		.cfi_offset 29, -3
 10890 49f2 00D0      		rcall .
 10891 49f4 00D0      		rcall .
 10892               	.LCFI96:
 10893               		.cfi_def_cfa_offset 8
 10894 49f6 CDB7      		in r28,__SP_L__
 10895 49f8 DEB7      		in r29,__SP_H__
 10896               	.LCFI97:
 10897               		.cfi_def_cfa_register 28
 10898               	/* prologue: function */
 10899               	/* frame size = 4 */
 10900               	/* stack size = 6 */
 10901               	.L__stack_usage = 6
 10902 49fa 9A83      		std Y+2,r25
 10903 49fc 8983      		std Y+1,r24
 10904 49fe 7C83      		std Y+4,r23
 10905 4a00 6B83      		std Y+3,r22
1277:lp_solve_5.5/lp_MPS.c ****   sprintf(name0, "%-8.8s", name);
 10906               		.loc 1 1277 0
 10907 4a02 8C81      		ldd r24,Y+4
 10908 4a04 8F93      		push r24
 10909 4a06 8B81      		ldd r24,Y+3
 10910 4a08 8F93      		push r24
 10911 4a0a 80E0      		ldi r24,lo8(.LC91)
 10912 4a0c 90E0      		ldi r25,hi8(.LC91)
 10913 4a0e 892F      		mov r24,r25
 10914 4a10 8F93      		push r24
 10915 4a12 80E0      		ldi r24,lo8(.LC91)
 10916 4a14 90E0      		ldi r25,hi8(.LC91)
 10917 4a16 8F93      		push r24
 10918 4a18 8A81      		ldd r24,Y+2
 10919 4a1a 8F93      		push r24
 10920 4a1c 8981      		ldd r24,Y+1
 10921 4a1e 8F93      		push r24
 10922 4a20 0E94 0000 		call sprintf
 10923 4a24 0F90      		pop __tmp_reg__
 10924 4a26 0F90      		pop __tmp_reg__
 10925 4a28 0F90      		pop __tmp_reg__
 10926 4a2a 0F90      		pop __tmp_reg__
 10927 4a2c 0F90      		pop __tmp_reg__
 10928 4a2e 0F90      		pop __tmp_reg__
1278:lp_solve_5.5/lp_MPS.c ****   return(name0);
 10929               		.loc 1 1278 0
 10930 4a30 8981      		ldd r24,Y+1
 10931 4a32 9A81      		ldd r25,Y+2
 10932               	/* epilogue start */
1279:lp_solve_5.5/lp_MPS.c **** }
 10933               		.loc 1 1279 0
 10934 4a34 0F90      		pop __tmp_reg__
 10935 4a36 0F90      		pop __tmp_reg__
 10936 4a38 0F90      		pop __tmp_reg__
 10937 4a3a 0F90      		pop __tmp_reg__
 10938 4a3c DF91      		pop r29
 10939 4a3e CF91      		pop r28
 10940 4a40 0895      		ret
 10941               		.cfi_endproc
 10942               	.LFE20:
 10944               	.global	MPSnameFREE
 10946               	MPSnameFREE:
 10947               	.LFB21:
1280:lp_solve_5.5/lp_MPS.c **** 
1281:lp_solve_5.5/lp_MPS.c **** STATIC char *MPSnameFREE(char *name0, char *name)
1282:lp_solve_5.5/lp_MPS.c **** {
 10948               		.loc 1 1282 0
 10949               		.cfi_startproc
 10950 4a42 CF93      		push r28
 10951               	.LCFI98:
 10952               		.cfi_def_cfa_offset 3
 10953               		.cfi_offset 28, -2
 10954 4a44 DF93      		push r29
 10955               	.LCFI99:
 10956               		.cfi_def_cfa_offset 4
 10957               		.cfi_offset 29, -3
 10958 4a46 00D0      		rcall .
 10959 4a48 00D0      		rcall .
 10960               	.LCFI100:
 10961               		.cfi_def_cfa_offset 8
 10962 4a4a CDB7      		in r28,__SP_L__
 10963 4a4c DEB7      		in r29,__SP_H__
 10964               	.LCFI101:
 10965               		.cfi_def_cfa_register 28
 10966               	/* prologue: function */
 10967               	/* frame size = 4 */
 10968               	/* stack size = 6 */
 10969               	.L__stack_usage = 6
 10970 4a4e 9A83      		std Y+2,r25
 10971 4a50 8983      		std Y+1,r24
 10972 4a52 7C83      		std Y+4,r23
 10973 4a54 6B83      		std Y+3,r22
1283:lp_solve_5.5/lp_MPS.c ****   if(strlen(name) < 8)
 10974               		.loc 1 1283 0
 10975 4a56 8B81      		ldd r24,Y+3
 10976 4a58 9C81      		ldd r25,Y+4
 10977 4a5a 0E94 0000 		call strlen
 10978 4a5e 0897      		sbiw r24,8
 10979 4a60 00F4      		brsh .L412
1284:lp_solve_5.5/lp_MPS.c ****     return(MPSnameFIXED(name0, name));
 10980               		.loc 1 1284 0
 10981 4a62 2B81      		ldd r18,Y+3
 10982 4a64 3C81      		ldd r19,Y+4
 10983 4a66 8981      		ldd r24,Y+1
 10984 4a68 9A81      		ldd r25,Y+2
 10985 4a6a B901      		movw r22,r18
 10986 4a6c 0E94 0000 		call MPSnameFIXED
 10987 4a70 00C0      		rjmp .L413
 10988               	.L412:
1285:lp_solve_5.5/lp_MPS.c ****   else
1286:lp_solve_5.5/lp_MPS.c ****     return(name);
 10989               		.loc 1 1286 0
 10990 4a72 8B81      		ldd r24,Y+3
 10991 4a74 9C81      		ldd r25,Y+4
 10992               	.L413:
 10993               	/* epilogue start */
1287:lp_solve_5.5/lp_MPS.c **** }
 10994               		.loc 1 1287 0
 10995 4a76 0F90      		pop __tmp_reg__
 10996 4a78 0F90      		pop __tmp_reg__
 10997 4a7a 0F90      		pop __tmp_reg__
 10998 4a7c 0F90      		pop __tmp_reg__
 10999 4a7e DF91      		pop r29
 11000 4a80 CF91      		pop r28
 11001 4a82 0895      		ret
 11002               		.cfi_endproc
 11003               	.LFE21:
 11006               	write_data:
 11007               	.LFB22:
1288:lp_solve_5.5/lp_MPS.c **** 
1289:lp_solve_5.5/lp_MPS.c **** static void write_data(void *userhandle, write_modeldata_func write_modeldata, char *format, ...)
1290:lp_solve_5.5/lp_MPS.c **** {
 11008               		.loc 1 1290 0
 11009               		.cfi_startproc
 11010 4a84 CF93      		push r28
 11011               	.LCFI102:
 11012               		.cfi_def_cfa_offset 3
 11013               		.cfi_offset 28, -2
 11014 4a86 DF93      		push r29
 11015               	.LCFI103:
 11016               		.cfi_def_cfa_offset 4
 11017               		.cfi_offset 29, -3
 11018 4a88 CDB7      		in r28,__SP_L__
 11019 4a8a DEB7      		in r29,__SP_H__
 11020               	.LCFI104:
 11021               		.cfi_def_cfa_register 28
 11022 4a8c C350      		subi r28,3
 11023 4a8e D240      		sbci r29,2
 11024               	.LCFI105:
 11025               		.cfi_def_cfa_offset 519
 11026 4a90 0FB6      		in __tmp_reg__,__SREG__
 11027 4a92 F894      		cli
 11028 4a94 DEBF      		out __SP_H__,r29
 11029 4a96 0FBE      		out __SREG__,__tmp_reg__
 11030 4a98 CDBF      		out __SP_L__,r28
 11031               	/* prologue: function */
 11032               	/* frame size = 515 */
 11033               	/* stack size = 517 */
 11034               	.L__stack_usage = 517
1291:lp_solve_5.5/lp_MPS.c ****   char buff[DEF_STRBUFSIZE+1];
1292:lp_solve_5.5/lp_MPS.c ****   va_list ap;
1293:lp_solve_5.5/lp_MPS.c **** 
1294:lp_solve_5.5/lp_MPS.c ****   va_start(ap, format);
 11035               		.loc 1 1294 0
 11036 4a9a 9E01      		movw r18,r28
 11037 4a9c 225F      		subi r18,-14
 11038 4a9e 3D4F      		sbci r19,-3
 11039 4aa0 CE01      		movw r24,r28
 11040 4aa2 8E5F      		subi r24,-2
 11041 4aa4 9D4F      		sbci r25,-3
 11042 4aa6 FC01      		movw r30,r24
 11043 4aa8 3183      		std Z+1,r19
 11044 4aaa 2083      		st Z,r18
1295:lp_solve_5.5/lp_MPS.c ****   vsnprintf(buff, DEF_STRBUFSIZE, format, ap);
 11045               		.loc 1 1295 0
 11046 4aac CE01      		movw r24,r28
 11047 4aae 8E5F      		subi r24,-2
 11048 4ab0 9D4F      		sbci r25,-3
 11049 4ab2 FC01      		movw r30,r24
 11050 4ab4 2081      		ld r18,Z
 11051 4ab6 3181      		ldd r19,Z+1
 11052 4ab8 C45F      		subi r28,lo8(-524)
 11053 4aba DD4F      		sbci r29,hi8(-524)
 11054 4abc 8881      		ld r24,Y
 11055 4abe 9981      		ldd r25,Y+1
 11056 4ac0 CC50      		subi r28,lo8(524)
 11057 4ac2 D240      		sbci r29,hi8(524)
 11058 4ac4 AC01      		movw r20,r24
 11059 4ac6 60E0      		ldi r22,0
 11060 4ac8 72E0      		ldi r23,lo8(2)
 11061 4aca CE01      		movw r24,r28
 11062 4acc 0196      		adiw r24,1
 11063 4ace 0E94 0000 		call vsnprintf
1296:lp_solve_5.5/lp_MPS.c ****   va_end(ap);
1297:lp_solve_5.5/lp_MPS.c ****   write_modeldata(userhandle, buff);
 11064               		.loc 1 1297 0
 11065 4ad2 C85F      		subi r28,lo8(-520)
 11066 4ad4 DD4F      		sbci r29,hi8(-520)
 11067 4ad6 8881      		ld r24,Y
 11068 4ad8 9981      		ldd r25,Y+1
 11069 4ada C850      		subi r28,lo8(520)
 11070 4adc D240      		sbci r29,hi8(520)
 11071 4ade C65F      		subi r28,lo8(-522)
 11072 4ae0 DD4F      		sbci r29,hi8(-522)
 11073 4ae2 2881      		ld r18,Y
 11074 4ae4 3981      		ldd r19,Y+1
 11075 4ae6 CA50      		subi r28,lo8(522)
 11076 4ae8 D240      		sbci r29,hi8(522)
 11077 4aea AE01      		movw r20,r28
 11078 4aec 4F5F      		subi r20,-1
 11079 4aee 5F4F      		sbci r21,-1
 11080 4af0 BA01      		movw r22,r20
 11081 4af2 F901      		movw r30,r18
 11082 4af4 0995      		icall
1298:lp_solve_5.5/lp_MPS.c **** }
 11083               		.loc 1 1298 0
 11084 4af6 0000      		nop
 11085               	/* epilogue start */
 11086 4af8 CD5F      		subi r28,-3
 11087 4afa DD4F      		sbci r29,-3
 11088 4afc 0FB6      		in __tmp_reg__,__SREG__
 11089 4afe F894      		cli
 11090 4b00 DEBF      		out __SP_H__,r29
 11091 4b02 0FBE      		out __SREG__,__tmp_reg__
 11092 4b04 CDBF      		out __SP_L__,r28
 11093 4b06 DF91      		pop r29
 11094 4b08 CF91      		pop r28
 11095 4b0a 0895      		ret
 11096               		.cfi_endproc
 11097               	.LFE22:
 11099               		.section	.rodata
 11100               	.LC92:
 11101 0868 4D50 535F 		.string	"MPS_writefile: unrecognized MPS name type.\n"
 11101      7772 6974 
 11101      6566 696C 
 11101      653A 2075 
 11101      6E72 6563 
 11102               	.LC93:
 11103 0894 2A3C 6D65 		.string	"*<meta creator='lp_solve v%d.%d'>\n"
 11103      7461 2063 
 11103      7265 6174 
 11103      6F72 3D27 
 11103      6C70 5F73 
 11104               	.LC94:
 11105 08b7 2A3C 6D65 		.string	"*<meta rows=%d>\n"
 11105      7461 2072 
 11105      6F77 733D 
 11105      2564 3E0A 
 11105      00
 11106               	.LC95:
 11107 08c8 2A3C 6D65 		.string	"*<meta columns=%d>\n"
 11107      7461 2063 
 11107      6F6C 756D 
 11107      6E73 3D25 
 11107      643E 0A00 
 11108               	.LC96:
 11109 08dc 2A3C 6D65 		.string	"*<meta equalities=%d>\n"
 11109      7461 2065 
 11109      7175 616C 
 11109      6974 6965 
 11109      733D 2564 
 11110               	.LC97:
 11111 08f3 2A3C 6D65 		.string	"*<meta SOS=%d>\n"
 11111      7461 2053 
 11111      4F53 3D25 
 11111      643E 0A00 
 11112               	.LC98:
 11113 0903 2A3C 6D65 		.string	"*<meta integers=%d>\n"
 11113      7461 2069 
 11113      6E74 6567 
 11113      6572 733D 
 11113      2564 3E0A 
 11114               	.LC99:
 11115 0918 2A3C 6D65 		.string	"*<meta scvars=%d>\n"
 11115      7461 2073 
 11115      6376 6172 
 11115      733D 2564 
 11115      3E0A 00
 11116               	.LC100:
 11117 092b 2A3C 6D65 		.string	"*<meta origsense='%s'>\n"
 11117      7461 206F 
 11117      7269 6773 
 11117      656E 7365 
 11117      3D27 2573 
 11118               	.LC101:
 11119 0943 2A0A 00   		.string	"*\n"
 11120               	.LC102:
 11121 0946 4E41 4D45 		.string	"NAME          %s\n"
 11121      2020 2020 
 11121      2020 2020 
 11121      2020 2573 
 11121      0A00 
 11122               	.LC103:
 11123 0958 4F42 4A53 		.string	"OBJSENSE\n MAX\n"
 11123      454E 5345 
 11123      0A20 4D41 
 11123      580A 00
 11124               	.LC104:
 11125 0967 524F 5753 		.string	"ROWS\n"
 11125      0A00 
 11126               	.LC105:
 11127 096d 204E 2020 		.string	" N  "
 11127      00
 11128               	.LC106:
 11129 0972 2047 2020 		.string	" G  "
 11129      00
 11130               	.LC107:
 11131 0977 204C 2020 		.string	" L  "
 11131      00
 11132               	.LC108:
 11133 097c 2045 2020 		.string	" E  "
 11133      00
 11134               	.LC109:
 11135 0981 2573 0A00 		.string	"%s\n"
 11136               	.LC110:
 11137 0985 434F 4C55 		.string	"COLUMNS\n"
 11137      4D4E 530A 
 11137      00
 11138               	.LC111:
 11139 098e 2020 2020 		.string	"    MARK%04d  'MARKER'                 'INTORG'\n"
 11139      4D41 524B 
 11139      2530 3464 
 11139      2020 274D 
 11139      4152 4B45 
 11140               	.LC112:
 11141 09bf 2020 2020 		.string	"    MARK%04d  'MARKER'                 'INTEND'\n"
 11141      4D41 524B 
 11141      2530 3464 
 11141      2020 274D 
 11141      4152 4B45 
 11142               	.LC113:
 11143 09f0 2020 2020 		.string	"    %s"
 11143      2573 00
 11144               	.global	__mulsf3
 11145               	.LC114:
 11146 09f7 2020 2573 		.string	"  %s  %s"
 11146      2020 2573 
 11146      00
 11147               	.LC115:
 11148 0a00 2020 2025 		.string	"   %s  %s\n"
 11148      7320 2025 
 11148      730A 00
 11149               	.LC116:
 11150 0a0b 0A00      		.string	"\n"
 11151               	.LC117:
 11152 0a0d 5248 530A 		.string	"RHS\n"
 11152      00
 11153               	.LC118:
 11154 0a12 2020 2020 		.string	"    RHS       %s  %s"
 11154      5248 5320 
 11154      2020 2020 
 11154      2020 2573 
 11154      2020 2573 
 11155               	.LC119:
 11156 0a27 5241 4E47 		.string	"RANGES\n"
 11156      4553 0A00 
 11157               	.LC120:
 11158 0a2f 2020 2020 		.string	"    RGS       %s  %s"
 11158      5247 5320 
 11158      2020 2020 
 11158      2020 2573 
 11158      2020 2573 
 11159               	.LC121:
 11160 0a44 424F 554E 		.string	"BOUNDS\n"
 11160      4453 0A00 
 11161               	.LC122:
 11162 0a4c 2046 5820 		.string	" FX BND       %s  %s\n"
 11162      424E 4420 
 11162      2020 2020 
 11162      2020 2573 
 11162      2020 2573 
 11163               	.LC123:
 11164 0a62 2042 5620 		.string	" BV BND       %s\n"
 11164      424E 4420 
 11164      2020 2020 
 11164      2020 2573 
 11164      0A00 
 11165               	.LC124:
 11166 0a74 2046 5220 		.string	" FR BND       %s\n"
 11166      424E 4420 
 11166      2020 2020 
 11166      2020 2573 
 11166      0A00 
 11167               	.LC125:
 11168 0a86 204C 4F20 		.string	" LO BND       %s  %s\n"
 11168      424E 4420 
 11168      2020 2020 
 11168      2020 2573 
 11168      2020 2573 
 11169               	.LC126:
 11170 0a9c 204D 4920 		.string	" MI BND       %s\n"
 11170      424E 4420 
 11170      2020 2020 
 11170      2020 2573 
 11170      0A00 
 11171               	.LC127:
 11172 0aae 2020 2020 		.string	"            "
 11172      2020 2020 
 11172      2020 2020 
 11172      00
 11173               	.LC128:
 11174 0abb 2053 4920 		.string	" SI BND       %s  %s\n"
 11174      424E 4420 
 11174      2020 2020 
 11174      2020 2573 
 11174      2020 2573 
 11175               	.LC129:
 11176 0ad1 2053 4320 		.string	" SC BND       %s  %s\n"
 11176      424E 4420 
 11176      2020 2020 
 11176      2020 2573 
 11176      2020 2573 
 11177               	.LC130:
 11178 0ae7 2055 5020 		.string	" UP BND       %s  %s\n"
 11178      424E 4420 
 11178      2020 2020 
 11178      2020 2573 
 11178      2020 2573 
 11179               	.LC131:
 11180 0afd 534F 530A 		.string	"SOS\n"
 11180      00
 11181               	.global	__floatsisf
 11182               	.LC132:
 11183 0b02 2053 2531 		.string	" S%1d SOS       %s  %s\n"
 11183      6420 534F 
 11183      5320 2020 
 11183      2020 2020 
 11183      2573 2020 
 11184               	.LC133:
 11185 0b1a 2020 2020 		.string	"    SOS       %s  %s\n"
 11185      534F 5320 
 11185      2020 2020 
 11185      2020 2573 
 11185      2020 2573 
 11186               	.LC134:
 11187 0b30 454E 4441 		.string	"ENDATA\n"
 11187      5441 0A00 
 11188               		.text
 11189               	.global	MPS_writefileex
 11191               	MPS_writefileex:
 11192               	.LFB23:
1299:lp_solve_5.5/lp_MPS.c **** 
1300:lp_solve_5.5/lp_MPS.c **** MYBOOL __WINAPI MPS_writefileex(lprec *lp, int typeMPS, void *userhandle, write_modeldata_func writ
1301:lp_solve_5.5/lp_MPS.c **** {
 11193               		.loc 1 1301 0
 11194               		.cfi_startproc
 11195 4b0c EF92      		push r14
 11196               	.LCFI106:
 11197               		.cfi_def_cfa_offset 3
 11198               		.cfi_offset 14, -2
 11199 4b0e FF92      		push r15
 11200               	.LCFI107:
 11201               		.cfi_def_cfa_offset 4
 11202               		.cfi_offset 15, -3
 11203 4b10 0F93      		push r16
 11204               	.LCFI108:
 11205               		.cfi_def_cfa_offset 5
 11206               		.cfi_offset 16, -4
 11207 4b12 1F93      		push r17
 11208               	.LCFI109:
 11209               		.cfi_def_cfa_offset 6
 11210               		.cfi_offset 17, -5
 11211 4b14 CF93      		push r28
 11212               	.LCFI110:
 11213               		.cfi_def_cfa_offset 7
 11214               		.cfi_offset 28, -6
 11215 4b16 DF93      		push r29
 11216               	.LCFI111:
 11217               		.cfi_def_cfa_offset 8
 11218               		.cfi_offset 29, -7
 11219 4b18 CDB7      		in r28,__SP_L__
 11220 4b1a DEB7      		in r29,__SP_H__
 11221               	.LCFI112:
 11222               		.cfi_def_cfa_register 28
 11223 4b1c C254      		subi r28,66
 11224 4b1e D109      		sbc r29,__zero_reg__
 11225               	.LCFI113:
 11226               		.cfi_def_cfa_offset 74
 11227 4b20 0FB6      		in __tmp_reg__,__SREG__
 11228 4b22 F894      		cli
 11229 4b24 DEBF      		out __SP_H__,r29
 11230 4b26 0FBE      		out __SREG__,__tmp_reg__
 11231 4b28 CDBF      		out __SP_L__,r28
 11232               	/* prologue: function */
 11233               	/* frame size = 66 */
 11234               	/* stack size = 72 */
 11235               	.L__stack_usage = 72
 11236 4b2a 9CAF      		std Y+60,r25
 11237 4b2c 8BAF      		std Y+59,r24
 11238 4b2e 7EAF      		std Y+62,r23
 11239 4b30 6DAF      		std Y+61,r22
 11240 4b32 CE01      		movw r24,r28
 11241 4b34 CF96      		adiw r24,63
 11242 4b36 FC01      		movw r30,r24
 11243 4b38 5183      		std Z+1,r21
 11244 4b3a 4083      		st Z,r20
 11245 4b3c CE01      		movw r24,r28
 11246 4b3e 8F5B      		subi r24,-65
 11247 4b40 9F4F      		sbci r25,-1
 11248 4b42 FC01      		movw r30,r24
 11249 4b44 3183      		std Z+1,r19
 11250 4b46 2083      		st Z,r18
1302:lp_solve_5.5/lp_MPS.c ****   int    i, j, jj, je, k, marker, putheader, ChangeSignObj = FALSE, *idx, *idx1;
 11251               		.loc 1 1302 0
 11252 4b48 1E86      		std Y+14,__zero_reg__
 11253 4b4a 1D86      		std Y+13,__zero_reg__
1303:lp_solve_5.5/lp_MPS.c ****   MYBOOL ok = TRUE, names_used;
 11254               		.loc 1 1303 0
 11255 4b4c 81E0      		ldi r24,lo8(1)
 11256 4b4e 898B      		std Y+17,r24
1304:lp_solve_5.5/lp_MPS.c ****   REAL   a, *val, *val1;
1305:lp_solve_5.5/lp_MPS.c ****   char * (*MPSname)(char *name0, char *name);
1306:lp_solve_5.5/lp_MPS.c ****   char numberbuffer[15];
1307:lp_solve_5.5/lp_MPS.c ****   char name0[9];
1308:lp_solve_5.5/lp_MPS.c **** 
1309:lp_solve_5.5/lp_MPS.c ****   if((typeMPS & MPSFIXED) == MPSFIXED) {
 11257               		.loc 1 1309 0
 11258 4b50 8DAD      		ldd r24,Y+61
 11259 4b52 9EAD      		ldd r25,Y+62
 11260 4b54 8170      		andi r24,1
 11261 4b56 9927      		clr r25
 11262 4b58 892B      		or r24,r25
 11263 4b5a 01F0      		breq .L416
1310:lp_solve_5.5/lp_MPS.c ****     MPSname = MPSnameFIXED;
 11264               		.loc 1 1310 0
 11265 4b5c 80E0      		ldi r24,lo8(gs(MPSnameFIXED))
 11266 4b5e 90E0      		ldi r25,hi8(gs(MPSnameFIXED))
 11267 4b60 998F      		std Y+25,r25
 11268 4b62 888F      		std Y+24,r24
1311:lp_solve_5.5/lp_MPS.c ****     ChangeSignObj = is_maxim(lp);
 11269               		.loc 1 1311 0
 11270 4b64 8BAD      		ldd r24,Y+59
 11271 4b66 9CAD      		ldd r25,Y+60
 11272 4b68 0E94 0000 		call is_maxim
 11273 4b6c 882F      		mov r24,r24
 11274 4b6e 90E0      		ldi r25,0
 11275 4b70 9E87      		std Y+14,r25
 11276 4b72 8D87      		std Y+13,r24
 11277 4b74 00C0      		rjmp .L417
 11278               	.L416:
1312:lp_solve_5.5/lp_MPS.c ****   }
1313:lp_solve_5.5/lp_MPS.c ****   else if((typeMPS & MPSFREE) == MPSFREE) {
 11279               		.loc 1 1313 0
 11280 4b76 8DAD      		ldd r24,Y+61
 11281 4b78 9EAD      		ldd r25,Y+62
 11282 4b7a 8270      		andi r24,2
 11283 4b7c 9927      		clr r25
 11284 4b7e 892B      		or r24,r25
 11285 4b80 01F0      		breq .L418
1314:lp_solve_5.5/lp_MPS.c ****     MPSname = MPSnameFREE;
 11286               		.loc 1 1314 0
 11287 4b82 80E0      		ldi r24,lo8(gs(MPSnameFREE))
 11288 4b84 90E0      		ldi r25,hi8(gs(MPSnameFREE))
 11289 4b86 998F      		std Y+25,r25
 11290 4b88 888F      		std Y+24,r24
 11291 4b8a 00C0      		rjmp .L417
 11292               	.L418:
1315:lp_solve_5.5/lp_MPS.c ****   }
1316:lp_solve_5.5/lp_MPS.c ****   else {
1317:lp_solve_5.5/lp_MPS.c ****     report(lp, IMPORTANT, "MPS_writefile: unrecognized MPS name type.\n");
 11293               		.loc 1 1317 0
 11294 4b8c 80E0      		ldi r24,lo8(.LC92)
 11295 4b8e 90E0      		ldi r25,hi8(.LC92)
 11296 4b90 892F      		mov r24,r25
 11297 4b92 8F93      		push r24
 11298 4b94 80E0      		ldi r24,lo8(.LC92)
 11299 4b96 90E0      		ldi r25,hi8(.LC92)
 11300 4b98 8F93      		push r24
 11301 4b9a 1F92      		push __zero_reg__
 11302 4b9c 83E0      		ldi r24,lo8(3)
 11303 4b9e 8F93      		push r24
 11304 4ba0 8CAD      		ldd r24,Y+60
 11305 4ba2 8F93      		push r24
 11306 4ba4 8BAD      		ldd r24,Y+59
 11307 4ba6 8F93      		push r24
 11308 4ba8 0E94 0000 		call report
 11309 4bac 0F90      		pop __tmp_reg__
 11310 4bae 0F90      		pop __tmp_reg__
 11311 4bb0 0F90      		pop __tmp_reg__
 11312 4bb2 0F90      		pop __tmp_reg__
 11313 4bb4 0F90      		pop __tmp_reg__
 11314 4bb6 0F90      		pop __tmp_reg__
1318:lp_solve_5.5/lp_MPS.c ****     return(FALSE);
 11315               		.loc 1 1318 0
 11316 4bb8 80E0      		ldi r24,0
 11317 4bba 0C94 0000 		jmp .L516
 11318               	.L417:
1319:lp_solve_5.5/lp_MPS.c ****   }
1320:lp_solve_5.5/lp_MPS.c **** 
1321:lp_solve_5.5/lp_MPS.c ****   names_used = lp->names_used;
 11319               		.loc 1 1321 0
 11320 4bbe 8BAD      		ldd r24,Y+59
 11321 4bc0 9CAD      		ldd r25,Y+60
 11322 4bc2 8250      		subi r24,2
 11323 4bc4 9E4F      		sbci r25,-2
 11324 4bc6 FC01      		movw r30,r24
 11325 4bc8 8081      		ld r24,Z
 11326 4bca 8A8F      		std Y+26,r24
1322:lp_solve_5.5/lp_MPS.c **** 
1323:lp_solve_5.5/lp_MPS.c ****   if((typeMPS & MPSFIXED) == MPSFIXED) {
 11327               		.loc 1 1323 0
 11328 4bcc 8DAD      		ldd r24,Y+61
 11329 4bce 9EAD      		ldd r25,Y+62
 11330 4bd0 8170      		andi r24,1
 11331 4bd2 9927      		clr r25
 11332 4bd4 892B      		or r24,r25
 11333 4bd6 01F4      		brne .+2
 11334 4bd8 00C0      		rjmp .L420
1324:lp_solve_5.5/lp_MPS.c ****     /* Check if there is no variable name where the first 8 charachters are equal to the first 8 ch
1325:lp_solve_5.5/lp_MPS.c ****     if(names_used)
 11335               		.loc 1 1325 0
 11336 4bda 8A8D      		ldd r24,Y+26
 11337 4bdc 8823      		tst r24
 11338 4bde 01F4      		brne .+2
 11339 4be0 00C0      		rjmp .L420
1326:lp_solve_5.5/lp_MPS.c ****       for(i = 1; (i <= lp->columns) && (ok); i++)
 11340               		.loc 1 1326 0
 11341 4be2 81E0      		ldi r24,lo8(1)
 11342 4be4 90E0      		ldi r25,0
 11343 4be6 9A83      		std Y+2,r25
 11344 4be8 8983      		std Y+1,r24
 11345 4bea 00C0      		rjmp .L421
 11346               	.L426:
1327:lp_solve_5.5/lp_MPS.c ****         if((lp->col_name[i] != NULL) && (lp->col_name[i]->name != NULL) && (!is_splitvar(lp, i)) &&
 11347               		.loc 1 1327 0
 11348 4bec 8BAD      		ldd r24,Y+59
 11349 4bee 9CAD      		ldd r25,Y+60
 11350 4bf0 8458      		subi r24,-124
 11351 4bf2 9D4F      		sbci r25,-3
 11352 4bf4 FC01      		movw r30,r24
 11353 4bf6 2081      		ld r18,Z
 11354 4bf8 3181      		ldd r19,Z+1
 11355 4bfa 8981      		ldd r24,Y+1
 11356 4bfc 9A81      		ldd r25,Y+2
 11357 4bfe 880F      		lsl r24
 11358 4c00 991F      		rol r25
 11359 4c02 820F      		add r24,r18
 11360 4c04 931F      		adc r25,r19
 11361 4c06 FC01      		movw r30,r24
 11362 4c08 8081      		ld r24,Z
 11363 4c0a 9181      		ldd r25,Z+1
 11364 4c0c 892B      		or r24,r25
 11365 4c0e 01F4      		brne .+2
 11366 4c10 00C0      		rjmp .L422
 11367               		.loc 1 1327 0 is_stmt 0 discriminator 1
 11368 4c12 8BAD      		ldd r24,Y+59
 11369 4c14 9CAD      		ldd r25,Y+60
 11370 4c16 8458      		subi r24,-124
 11371 4c18 9D4F      		sbci r25,-3
 11372 4c1a FC01      		movw r30,r24
 11373 4c1c 2081      		ld r18,Z
 11374 4c1e 3181      		ldd r19,Z+1
 11375 4c20 8981      		ldd r24,Y+1
 11376 4c22 9A81      		ldd r25,Y+2
 11377 4c24 880F      		lsl r24
 11378 4c26 991F      		rol r25
 11379 4c28 820F      		add r24,r18
 11380 4c2a 931F      		adc r25,r19
 11381 4c2c FC01      		movw r30,r24
 11382 4c2e 8081      		ld r24,Z
 11383 4c30 9181      		ldd r25,Z+1
 11384 4c32 FC01      		movw r30,r24
 11385 4c34 8081      		ld r24,Z
 11386 4c36 9181      		ldd r25,Z+1
 11387 4c38 892B      		or r24,r25
 11388 4c3a 01F4      		brne .+2
 11389 4c3c 00C0      		rjmp .L422
 11390               		.loc 1 1327 0 discriminator 2
 11391 4c3e 2981      		ldd r18,Y+1
 11392 4c40 3A81      		ldd r19,Y+2
 11393 4c42 8BAD      		ldd r24,Y+59
 11394 4c44 9CAD      		ldd r25,Y+60
 11395 4c46 B901      		movw r22,r18
 11396 4c48 0E94 0000 		call is_splitvar
 11397 4c4c 8823      		tst r24
 11398 4c4e 01F0      		breq .+2
 11399 4c50 00C0      		rjmp .L422
 11400               		.loc 1 1327 0 discriminator 3
 11401 4c52 8BAD      		ldd r24,Y+59
 11402 4c54 9CAD      		ldd r25,Y+60
 11403 4c56 8458      		subi r24,-124
 11404 4c58 9D4F      		sbci r25,-3
 11405 4c5a FC01      		movw r30,r24
 11406 4c5c 2081      		ld r18,Z
 11407 4c5e 3181      		ldd r19,Z+1
 11408 4c60 8981      		ldd r24,Y+1
 11409 4c62 9A81      		ldd r25,Y+2
 11410 4c64 880F      		lsl r24
 11411 4c66 991F      		rol r25
 11412 4c68 820F      		add r24,r18
 11413 4c6a 931F      		adc r25,r19
 11414 4c6c FC01      		movw r30,r24
 11415 4c6e 8081      		ld r24,Z
 11416 4c70 9181      		ldd r25,Z+1
 11417 4c72 FC01      		movw r30,r24
 11418 4c74 8081      		ld r24,Z
 11419 4c76 9181      		ldd r25,Z+1
 11420 4c78 0E94 0000 		call strlen
 11421 4c7c 0997      		sbiw r24,9
 11422 4c7e 00F4      		brsh .+2
 11423 4c80 00C0      		rjmp .L422
1328:lp_solve_5.5/lp_MPS.c ****           for(j = 1; (j < i) && (ok); j++)
 11424               		.loc 1 1328 0 is_stmt 1
 11425 4c82 81E0      		ldi r24,lo8(1)
 11426 4c84 90E0      		ldi r25,0
 11427 4c86 9C83      		std Y+4,r25
 11428 4c88 8B83      		std Y+3,r24
 11429 4c8a 00C0      		rjmp .L423
 11430               	.L425:
1329:lp_solve_5.5/lp_MPS.c ****     if((lp->col_name[j] != NULL) && (lp->col_name[j]->name != NULL) && (!is_splitvar(lp, j)))
 11431               		.loc 1 1329 0
 11432 4c8c 8BAD      		ldd r24,Y+59
 11433 4c8e 9CAD      		ldd r25,Y+60
 11434 4c90 8458      		subi r24,-124
 11435 4c92 9D4F      		sbci r25,-3
 11436 4c94 FC01      		movw r30,r24
 11437 4c96 2081      		ld r18,Z
 11438 4c98 3181      		ldd r19,Z+1
 11439 4c9a 8B81      		ldd r24,Y+3
 11440 4c9c 9C81      		ldd r25,Y+4
 11441 4c9e 880F      		lsl r24
 11442 4ca0 991F      		rol r25
 11443 4ca2 820F      		add r24,r18
 11444 4ca4 931F      		adc r25,r19
 11445 4ca6 FC01      		movw r30,r24
 11446 4ca8 8081      		ld r24,Z
 11447 4caa 9181      		ldd r25,Z+1
 11448 4cac 892B      		or r24,r25
 11449 4cae 01F4      		brne .+2
 11450 4cb0 00C0      		rjmp .L424
 11451               		.loc 1 1329 0 is_stmt 0 discriminator 1
 11452 4cb2 8BAD      		ldd r24,Y+59
 11453 4cb4 9CAD      		ldd r25,Y+60
 11454 4cb6 8458      		subi r24,-124
 11455 4cb8 9D4F      		sbci r25,-3
 11456 4cba FC01      		movw r30,r24
 11457 4cbc 2081      		ld r18,Z
 11458 4cbe 3181      		ldd r19,Z+1
 11459 4cc0 8B81      		ldd r24,Y+3
 11460 4cc2 9C81      		ldd r25,Y+4
 11461 4cc4 880F      		lsl r24
 11462 4cc6 991F      		rol r25
 11463 4cc8 820F      		add r24,r18
 11464 4cca 931F      		adc r25,r19
 11465 4ccc FC01      		movw r30,r24
 11466 4cce 8081      		ld r24,Z
 11467 4cd0 9181      		ldd r25,Z+1
 11468 4cd2 FC01      		movw r30,r24
 11469 4cd4 8081      		ld r24,Z
 11470 4cd6 9181      		ldd r25,Z+1
 11471 4cd8 892B      		or r24,r25
 11472 4cda 01F0      		breq .L424
 11473               		.loc 1 1329 0 discriminator 2
 11474 4cdc 2B81      		ldd r18,Y+3
 11475 4cde 3C81      		ldd r19,Y+4
 11476 4ce0 8BAD      		ldd r24,Y+59
 11477 4ce2 9CAD      		ldd r25,Y+60
 11478 4ce4 B901      		movw r22,r18
 11479 4ce6 0E94 0000 		call is_splitvar
 11480 4cea 8823      		tst r24
 11481 4cec 01F4      		brne .L424
1330:lp_solve_5.5/lp_MPS.c ****       if(strncmp(lp->col_name[i]->name, lp->col_name[j]->name, 8) == 0)
 11482               		.loc 1 1330 0 is_stmt 1
 11483 4cee 8BAD      		ldd r24,Y+59
 11484 4cf0 9CAD      		ldd r25,Y+60
 11485 4cf2 8458      		subi r24,-124
 11486 4cf4 9D4F      		sbci r25,-3
 11487 4cf6 FC01      		movw r30,r24
 11488 4cf8 2081      		ld r18,Z
 11489 4cfa 3181      		ldd r19,Z+1
 11490 4cfc 8B81      		ldd r24,Y+3
 11491 4cfe 9C81      		ldd r25,Y+4
 11492 4d00 880F      		lsl r24
 11493 4d02 991F      		rol r25
 11494 4d04 820F      		add r24,r18
 11495 4d06 931F      		adc r25,r19
 11496 4d08 FC01      		movw r30,r24
 11497 4d0a 8081      		ld r24,Z
 11498 4d0c 9181      		ldd r25,Z+1
 11499 4d0e FC01      		movw r30,r24
 11500 4d10 6081      		ld r22,Z
 11501 4d12 7181      		ldd r23,Z+1
 11502 4d14 8BAD      		ldd r24,Y+59
 11503 4d16 9CAD      		ldd r25,Y+60
 11504 4d18 8458      		subi r24,-124
 11505 4d1a 9D4F      		sbci r25,-3
 11506 4d1c FC01      		movw r30,r24
 11507 4d1e 2081      		ld r18,Z
 11508 4d20 3181      		ldd r19,Z+1
 11509 4d22 8981      		ldd r24,Y+1
 11510 4d24 9A81      		ldd r25,Y+2
 11511 4d26 880F      		lsl r24
 11512 4d28 991F      		rol r25
 11513 4d2a 820F      		add r24,r18
 11514 4d2c 931F      		adc r25,r19
 11515 4d2e FC01      		movw r30,r24
 11516 4d30 8081      		ld r24,Z
 11517 4d32 9181      		ldd r25,Z+1
 11518 4d34 FC01      		movw r30,r24
 11519 4d36 8081      		ld r24,Z
 11520 4d38 9181      		ldd r25,Z+1
 11521 4d3a 48E0      		ldi r20,lo8(8)
 11522 4d3c 50E0      		ldi r21,0
 11523 4d3e 0E94 0000 		call strncmp
 11524 4d42 892B      		or r24,r25
 11525 4d44 01F4      		brne .L424
1331:lp_solve_5.5/lp_MPS.c ****         ok = FALSE;
 11526               		.loc 1 1331 0
 11527 4d46 198A      		std Y+17,__zero_reg__
 11528               	.L424:
1328:lp_solve_5.5/lp_MPS.c ****     if((lp->col_name[j] != NULL) && (lp->col_name[j]->name != NULL) && (!is_splitvar(lp, j)))
 11529               		.loc 1 1328 0 discriminator 2
 11530 4d48 8B81      		ldd r24,Y+3
 11531 4d4a 9C81      		ldd r25,Y+4
 11532 4d4c 0196      		adiw r24,1
 11533 4d4e 9C83      		std Y+4,r25
 11534 4d50 8B83      		std Y+3,r24
 11535               	.L423:
1328:lp_solve_5.5/lp_MPS.c ****     if((lp->col_name[j] != NULL) && (lp->col_name[j]->name != NULL) && (!is_splitvar(lp, j)))
 11536               		.loc 1 1328 0 is_stmt 0 discriminator 1
 11537 4d52 2B81      		ldd r18,Y+3
 11538 4d54 3C81      		ldd r19,Y+4
 11539 4d56 8981      		ldd r24,Y+1
 11540 4d58 9A81      		ldd r25,Y+2
 11541 4d5a 2817      		cp r18,r24
 11542 4d5c 3907      		cpc r19,r25
 11543 4d5e 04F4      		brge .L422
1328:lp_solve_5.5/lp_MPS.c ****     if((lp->col_name[j] != NULL) && (lp->col_name[j]->name != NULL) && (!is_splitvar(lp, j)))
 11544               		.loc 1 1328 0 discriminator 3
 11545 4d60 8989      		ldd r24,Y+17
 11546 4d62 8823      		tst r24
 11547 4d64 01F0      		breq .+2
 11548 4d66 00C0      		rjmp .L425
 11549               	.L422:
1326:lp_solve_5.5/lp_MPS.c ****         if((lp->col_name[i] != NULL) && (lp->col_name[i]->name != NULL) && (!is_splitvar(lp, i)) &&
 11550               		.loc 1 1326 0 is_stmt 1 discriminator 2
 11551 4d68 8981      		ldd r24,Y+1
 11552 4d6a 9A81      		ldd r25,Y+2
 11553 4d6c 0196      		adiw r24,1
 11554 4d6e 9A83      		std Y+2,r25
 11555 4d70 8983      		std Y+1,r24
 11556               	.L421:
1326:lp_solve_5.5/lp_MPS.c ****         if((lp->col_name[i] != NULL) && (lp->col_name[i]->name != NULL) && (!is_splitvar(lp, i)) &&
 11557               		.loc 1 1326 0 is_stmt 0 discriminator 1
 11558 4d72 8BAD      		ldd r24,Y+59
 11559 4d74 9CAD      		ldd r25,Y+60
 11560 4d76 8451      		subi r24,20
 11561 4d78 9E4F      		sbci r25,-2
 11562 4d7a FC01      		movw r30,r24
 11563 4d7c 2081      		ld r18,Z
 11564 4d7e 3181      		ldd r19,Z+1
 11565 4d80 8981      		ldd r24,Y+1
 11566 4d82 9A81      		ldd r25,Y+2
 11567 4d84 2817      		cp r18,r24
 11568 4d86 3907      		cpc r19,r25
 11569 4d88 04F0      		brlt .L420
1326:lp_solve_5.5/lp_MPS.c ****         if((lp->col_name[i] != NULL) && (lp->col_name[i]->name != NULL) && (!is_splitvar(lp, i)) &&
 11570               		.loc 1 1326 0 discriminator 3
 11571 4d8a 8989      		ldd r24,Y+17
 11572 4d8c 8823      		tst r24
 11573 4d8e 01F0      		breq .+2
 11574 4d90 00C0      		rjmp .L426
 11575               	.L420:
1332:lp_solve_5.5/lp_MPS.c ****   }
1333:lp_solve_5.5/lp_MPS.c **** 
1334:lp_solve_5.5/lp_MPS.c ****   if(!ok) {
 11576               		.loc 1 1334 0 is_stmt 1
 11577 4d92 8989      		ldd r24,Y+17
 11578 4d94 8823      		tst r24
 11579 4d96 01F4      		brne .L427
1335:lp_solve_5.5/lp_MPS.c ****     lp->names_used = FALSE;
 11580               		.loc 1 1335 0
 11581 4d98 8BAD      		ldd r24,Y+59
 11582 4d9a 9CAD      		ldd r25,Y+60
 11583 4d9c 8250      		subi r24,2
 11584 4d9e 9E4F      		sbci r25,-2
 11585 4da0 FC01      		movw r30,r24
 11586 4da2 1082      		st Z,__zero_reg__
1336:lp_solve_5.5/lp_MPS.c ****     ok = TRUE;
 11587               		.loc 1 1336 0
 11588 4da4 81E0      		ldi r24,lo8(1)
 11589 4da6 898B      		std Y+17,r24
 11590               	.L427:
1337:lp_solve_5.5/lp_MPS.c ****   }
1338:lp_solve_5.5/lp_MPS.c **** 
1339:lp_solve_5.5/lp_MPS.c ****   memset(numberbuffer, 0, sizeof(numberbuffer));
 11591               		.loc 1 1339 0
 11592 4da8 CE01      		movw r24,r28
 11593 4daa 8396      		adiw r24,35
 11594 4dac 4FE0      		ldi r20,lo8(15)
 11595 4dae 50E0      		ldi r21,0
 11596 4db0 60E0      		ldi r22,0
 11597 4db2 70E0      		ldi r23,0
 11598 4db4 0E94 0000 		call memset
1340:lp_solve_5.5/lp_MPS.c **** 
1341:lp_solve_5.5/lp_MPS.c ****   marker = 0;
 11599               		.loc 1 1341 0
 11600 4db8 1A86      		std Y+10,__zero_reg__
 11601 4dba 1986      		std Y+9,__zero_reg__
1342:lp_solve_5.5/lp_MPS.c **** 
1343:lp_solve_5.5/lp_MPS.c ****   /* First write metadata in structured comment form (lp_solve style) */
1344:lp_solve_5.5/lp_MPS.c ****   write_data(userhandle, write_modeldata, "*<meta creator='lp_solve v%d.%d'>\n",
 11602               		.loc 1 1344 0
 11603 4dbc 1F92      		push __zero_reg__
 11604 4dbe 85E0      		ldi r24,lo8(5)
 11605 4dc0 8F93      		push r24
 11606 4dc2 1F92      		push __zero_reg__
 11607 4dc4 85E0      		ldi r24,lo8(5)
 11608 4dc6 8F93      		push r24
 11609 4dc8 80E0      		ldi r24,lo8(.LC93)
 11610 4dca 90E0      		ldi r25,hi8(.LC93)
 11611 4dcc 892F      		mov r24,r25
 11612 4dce 8F93      		push r24
 11613 4dd0 80E0      		ldi r24,lo8(.LC93)
 11614 4dd2 90E0      		ldi r25,hi8(.LC93)
 11615 4dd4 8F93      		push r24
 11616 4dd6 CE01      		movw r24,r28
 11617 4dd8 8F5B      		subi r24,-65
 11618 4dda 9F4F      		sbci r25,-1
 11619 4ddc FC01      		movw r30,r24
 11620 4dde 2181      		ldd r18,Z+1
 11621 4de0 2F93      		push r18
 11622 4de2 FC01      		movw r30,r24
 11623 4de4 8081      		ld r24,Z
 11624 4de6 8F93      		push r24
 11625 4de8 CE01      		movw r24,r28
 11626 4dea 805C      		subi r24,-64
 11627 4dec 9F4F      		sbci r25,-1
 11628 4dee FC01      		movw r30,r24
 11629 4df0 8081      		ld r24,Z
 11630 4df2 8F93      		push r24
 11631 4df4 8FAD      		ldd r24,Y+63
 11632 4df6 8F93      		push r24
 11633 4df8 0E94 0000 		call write_data
 11634 4dfc 4DB7      		in r20,__SP_L__
 11635 4dfe 5EB7      		in r21,__SP_H__
 11636 4e00 465F      		subi r20,-10
 11637 4e02 5F4F      		sbci r21,-1
 11638 4e04 0FB6      		in __tmp_reg__,__SREG__
 11639 4e06 F894      		cli
 11640 4e08 DEBF      		out __SP_H__,r29
 11641 4e0a 0FBE      		out __SREG__,__tmp_reg__
 11642 4e0c CDBF      		out __SP_L__,r28
1345:lp_solve_5.5/lp_MPS.c ****                   (int) MAJORVERSION, (int) MINORVERSION);
1346:lp_solve_5.5/lp_MPS.c ****   write_data(userhandle, write_modeldata, "*<meta rows=%d>\n", lp->rows);
 11643               		.loc 1 1346 0
 11644 4e0e 8BAD      		ldd r24,Y+59
 11645 4e10 9CAD      		ldd r25,Y+60
 11646 4e12 8651      		subi r24,22
 11647 4e14 9E4F      		sbci r25,-2
 11648 4e16 FC01      		movw r30,r24
 11649 4e18 8081      		ld r24,Z
 11650 4e1a 9181      		ldd r25,Z+1
 11651 4e1c 292F      		mov r18,r25
 11652 4e1e 2F93      		push r18
 11653 4e20 8F93      		push r24
 11654 4e22 80E0      		ldi r24,lo8(.LC94)
 11655 4e24 90E0      		ldi r25,hi8(.LC94)
 11656 4e26 892F      		mov r24,r25
 11657 4e28 8F93      		push r24
 11658 4e2a 80E0      		ldi r24,lo8(.LC94)
 11659 4e2c 90E0      		ldi r25,hi8(.LC94)
 11660 4e2e 8F93      		push r24
 11661 4e30 CE01      		movw r24,r28
 11662 4e32 8F5B      		subi r24,-65
 11663 4e34 9F4F      		sbci r25,-1
 11664 4e36 FC01      		movw r30,r24
 11665 4e38 2181      		ldd r18,Z+1
 11666 4e3a 2F93      		push r18
 11667 4e3c FC01      		movw r30,r24
 11668 4e3e 8081      		ld r24,Z
 11669 4e40 8F93      		push r24
 11670 4e42 CE01      		movw r24,r28
 11671 4e44 805C      		subi r24,-64
 11672 4e46 9F4F      		sbci r25,-1
 11673 4e48 FC01      		movw r30,r24
 11674 4e4a 8081      		ld r24,Z
 11675 4e4c 8F93      		push r24
 11676 4e4e 8FAD      		ldd r24,Y+63
 11677 4e50 8F93      		push r24
 11678 4e52 0E94 0000 		call write_data
 11679 4e56 4DB7      		in r20,__SP_L__
 11680 4e58 5EB7      		in r21,__SP_H__
 11681 4e5a 485F      		subi r20,-8
 11682 4e5c 5F4F      		sbci r21,-1
 11683 4e5e 0FB6      		in __tmp_reg__,__SREG__
 11684 4e60 F894      		cli
 11685 4e62 DEBF      		out __SP_H__,r29
 11686 4e64 0FBE      		out __SREG__,__tmp_reg__
 11687 4e66 CDBF      		out __SP_L__,r28
1347:lp_solve_5.5/lp_MPS.c ****   write_data(userhandle, write_modeldata, "*<meta columns=%d>\n", lp->columns);
 11688               		.loc 1 1347 0
 11689 4e68 8BAD      		ldd r24,Y+59
 11690 4e6a 9CAD      		ldd r25,Y+60
 11691 4e6c 8451      		subi r24,20
 11692 4e6e 9E4F      		sbci r25,-2
 11693 4e70 FC01      		movw r30,r24
 11694 4e72 8081      		ld r24,Z
 11695 4e74 9181      		ldd r25,Z+1
 11696 4e76 292F      		mov r18,r25
 11697 4e78 2F93      		push r18
 11698 4e7a 8F93      		push r24
 11699 4e7c 80E0      		ldi r24,lo8(.LC95)
 11700 4e7e 90E0      		ldi r25,hi8(.LC95)
 11701 4e80 892F      		mov r24,r25
 11702 4e82 8F93      		push r24
 11703 4e84 80E0      		ldi r24,lo8(.LC95)
 11704 4e86 90E0      		ldi r25,hi8(.LC95)
 11705 4e88 8F93      		push r24
 11706 4e8a CE01      		movw r24,r28
 11707 4e8c 8F5B      		subi r24,-65
 11708 4e8e 9F4F      		sbci r25,-1
 11709 4e90 FC01      		movw r30,r24
 11710 4e92 2181      		ldd r18,Z+1
 11711 4e94 2F93      		push r18
 11712 4e96 FC01      		movw r30,r24
 11713 4e98 8081      		ld r24,Z
 11714 4e9a 8F93      		push r24
 11715 4e9c CE01      		movw r24,r28
 11716 4e9e 805C      		subi r24,-64
 11717 4ea0 9F4F      		sbci r25,-1
 11718 4ea2 FC01      		movw r30,r24
 11719 4ea4 8081      		ld r24,Z
 11720 4ea6 8F93      		push r24
 11721 4ea8 8FAD      		ldd r24,Y+63
 11722 4eaa 8F93      		push r24
 11723 4eac 0E94 0000 		call write_data
 11724 4eb0 4DB7      		in r20,__SP_L__
 11725 4eb2 5EB7      		in r21,__SP_H__
 11726 4eb4 485F      		subi r20,-8
 11727 4eb6 5F4F      		sbci r21,-1
 11728 4eb8 0FB6      		in __tmp_reg__,__SREG__
 11729 4eba F894      		cli
 11730 4ebc DEBF      		out __SP_H__,r29
 11731 4ebe 0FBE      		out __SREG__,__tmp_reg__
 11732 4ec0 CDBF      		out __SP_L__,r28
1348:lp_solve_5.5/lp_MPS.c ****   write_data(userhandle, write_modeldata, "*<meta equalities=%d>\n", lp->equalities);
 11733               		.loc 1 1348 0
 11734 4ec2 8BAD      		ldd r24,Y+59
 11735 4ec4 9CAD      		ldd r25,Y+60
 11736 4ec6 8251      		subi r24,18
 11737 4ec8 9E4F      		sbci r25,-2
 11738 4eca FC01      		movw r30,r24
 11739 4ecc 8081      		ld r24,Z
 11740 4ece 9181      		ldd r25,Z+1
 11741 4ed0 292F      		mov r18,r25
 11742 4ed2 2F93      		push r18
 11743 4ed4 8F93      		push r24
 11744 4ed6 80E0      		ldi r24,lo8(.LC96)
 11745 4ed8 90E0      		ldi r25,hi8(.LC96)
 11746 4eda 892F      		mov r24,r25
 11747 4edc 8F93      		push r24
 11748 4ede 80E0      		ldi r24,lo8(.LC96)
 11749 4ee0 90E0      		ldi r25,hi8(.LC96)
 11750 4ee2 8F93      		push r24
 11751 4ee4 CE01      		movw r24,r28
 11752 4ee6 8F5B      		subi r24,-65
 11753 4ee8 9F4F      		sbci r25,-1
 11754 4eea FC01      		movw r30,r24
 11755 4eec 2181      		ldd r18,Z+1
 11756 4eee 2F93      		push r18
 11757 4ef0 FC01      		movw r30,r24
 11758 4ef2 8081      		ld r24,Z
 11759 4ef4 8F93      		push r24
 11760 4ef6 CE01      		movw r24,r28
 11761 4ef8 805C      		subi r24,-64
 11762 4efa 9F4F      		sbci r25,-1
 11763 4efc FC01      		movw r30,r24
 11764 4efe 8081      		ld r24,Z
 11765 4f00 8F93      		push r24
 11766 4f02 8FAD      		ldd r24,Y+63
 11767 4f04 8F93      		push r24
 11768 4f06 0E94 0000 		call write_data
 11769 4f0a 4DB7      		in r20,__SP_L__
 11770 4f0c 5EB7      		in r21,__SP_H__
 11771 4f0e 485F      		subi r20,-8
 11772 4f10 5F4F      		sbci r21,-1
 11773 4f12 0FB6      		in __tmp_reg__,__SREG__
 11774 4f14 F894      		cli
 11775 4f16 DEBF      		out __SP_H__,r29
 11776 4f18 0FBE      		out __SREG__,__tmp_reg__
 11777 4f1a CDBF      		out __SP_L__,r28
1349:lp_solve_5.5/lp_MPS.c ****   if(SOS_count(lp) > 0)
 11778               		.loc 1 1349 0
 11779 4f1c 8BAD      		ldd r24,Y+59
 11780 4f1e 9CAD      		ldd r25,Y+60
 11781 4f20 0E94 0000 		call SOS_count
 11782 4f24 1816      		cp __zero_reg__,r24
 11783 4f26 1906      		cpc __zero_reg__,r25
 11784 4f28 04F4      		brge .L428
1350:lp_solve_5.5/lp_MPS.c ****     write_data(userhandle, write_modeldata, "*<meta SOS=%d>\n", SOS_count(lp));
 11785               		.loc 1 1350 0
 11786 4f2a 8BAD      		ldd r24,Y+59
 11787 4f2c 9CAD      		ldd r25,Y+60
 11788 4f2e 0E94 0000 		call SOS_count
 11789 4f32 292F      		mov r18,r25
 11790 4f34 2F93      		push r18
 11791 4f36 8F93      		push r24
 11792 4f38 80E0      		ldi r24,lo8(.LC97)
 11793 4f3a 90E0      		ldi r25,hi8(.LC97)
 11794 4f3c 892F      		mov r24,r25
 11795 4f3e 8F93      		push r24
 11796 4f40 80E0      		ldi r24,lo8(.LC97)
 11797 4f42 90E0      		ldi r25,hi8(.LC97)
 11798 4f44 8F93      		push r24
 11799 4f46 CE01      		movw r24,r28
 11800 4f48 8F5B      		subi r24,-65
 11801 4f4a 9F4F      		sbci r25,-1
 11802 4f4c FC01      		movw r30,r24
 11803 4f4e 2181      		ldd r18,Z+1
 11804 4f50 2F93      		push r18
 11805 4f52 FC01      		movw r30,r24
 11806 4f54 8081      		ld r24,Z
 11807 4f56 8F93      		push r24
 11808 4f58 CE01      		movw r24,r28
 11809 4f5a 805C      		subi r24,-64
 11810 4f5c 9F4F      		sbci r25,-1
 11811 4f5e FC01      		movw r30,r24
 11812 4f60 8081      		ld r24,Z
 11813 4f62 8F93      		push r24
 11814 4f64 8FAD      		ldd r24,Y+63
 11815 4f66 8F93      		push r24
 11816 4f68 0E94 0000 		call write_data
 11817 4f6c 4DB7      		in r20,__SP_L__
 11818 4f6e 5EB7      		in r21,__SP_H__
 11819 4f70 485F      		subi r20,-8
 11820 4f72 5F4F      		sbci r21,-1
 11821 4f74 0FB6      		in __tmp_reg__,__SREG__
 11822 4f76 F894      		cli
 11823 4f78 DEBF      		out __SP_H__,r29
 11824 4f7a 0FBE      		out __SREG__,__tmp_reg__
 11825 4f7c CDBF      		out __SP_L__,r28
 11826               	.L428:
1351:lp_solve_5.5/lp_MPS.c ****   write_data(userhandle, write_modeldata, "*<meta integers=%d>\n", lp->int_vars);
 11827               		.loc 1 1351 0
 11828 4f7e 8BAD      		ldd r24,Y+59
 11829 4f80 9CAD      		ldd r25,Y+60
 11830 4f82 8257      		subi r24,114
 11831 4f84 9D4F      		sbci r25,-3
 11832 4f86 FC01      		movw r30,r24
 11833 4f88 8081      		ld r24,Z
 11834 4f8a 9181      		ldd r25,Z+1
 11835 4f8c 292F      		mov r18,r25
 11836 4f8e 2F93      		push r18
 11837 4f90 8F93      		push r24
 11838 4f92 80E0      		ldi r24,lo8(.LC98)
 11839 4f94 90E0      		ldi r25,hi8(.LC98)
 11840 4f96 892F      		mov r24,r25
 11841 4f98 8F93      		push r24
 11842 4f9a 80E0      		ldi r24,lo8(.LC98)
 11843 4f9c 90E0      		ldi r25,hi8(.LC98)
 11844 4f9e 8F93      		push r24
 11845 4fa0 CE01      		movw r24,r28
 11846 4fa2 8F5B      		subi r24,-65
 11847 4fa4 9F4F      		sbci r25,-1
 11848 4fa6 FC01      		movw r30,r24
 11849 4fa8 2181      		ldd r18,Z+1
 11850 4faa 2F93      		push r18
 11851 4fac FC01      		movw r30,r24
 11852 4fae 8081      		ld r24,Z
 11853 4fb0 8F93      		push r24
 11854 4fb2 CE01      		movw r24,r28
 11855 4fb4 805C      		subi r24,-64
 11856 4fb6 9F4F      		sbci r25,-1
 11857 4fb8 FC01      		movw r30,r24
 11858 4fba 8081      		ld r24,Z
 11859 4fbc 8F93      		push r24
 11860 4fbe 8FAD      		ldd r24,Y+63
 11861 4fc0 8F93      		push r24
 11862 4fc2 0E94 0000 		call write_data
 11863 4fc6 4DB7      		in r20,__SP_L__
 11864 4fc8 5EB7      		in r21,__SP_H__
 11865 4fca 485F      		subi r20,-8
 11866 4fcc 5F4F      		sbci r21,-1
 11867 4fce 0FB6      		in __tmp_reg__,__SREG__
 11868 4fd0 F894      		cli
 11869 4fd2 DEBF      		out __SP_H__,r29
 11870 4fd4 0FBE      		out __SREG__,__tmp_reg__
 11871 4fd6 CDBF      		out __SP_L__,r28
1352:lp_solve_5.5/lp_MPS.c ****   if(lp->sc_vars > 0)
 11872               		.loc 1 1352 0
 11873 4fd8 8BAD      		ldd r24,Y+59
 11874 4fda 9CAD      		ldd r25,Y+60
 11875 4fdc 8057      		subi r24,112
 11876 4fde 9D4F      		sbci r25,-3
 11877 4fe0 FC01      		movw r30,r24
 11878 4fe2 8081      		ld r24,Z
 11879 4fe4 9181      		ldd r25,Z+1
 11880 4fe6 1816      		cp __zero_reg__,r24
 11881 4fe8 1906      		cpc __zero_reg__,r25
 11882 4fea 04F4      		brge .L429
1353:lp_solve_5.5/lp_MPS.c ****     write_data(userhandle, write_modeldata, "*<meta scvars=%d>\n", lp->sc_vars);
 11883               		.loc 1 1353 0
 11884 4fec 8BAD      		ldd r24,Y+59
 11885 4fee 9CAD      		ldd r25,Y+60
 11886 4ff0 8057      		subi r24,112
 11887 4ff2 9D4F      		sbci r25,-3
 11888 4ff4 FC01      		movw r30,r24
 11889 4ff6 8081      		ld r24,Z
 11890 4ff8 9181      		ldd r25,Z+1
 11891 4ffa 292F      		mov r18,r25
 11892 4ffc 2F93      		push r18
 11893 4ffe 8F93      		push r24
 11894 5000 80E0      		ldi r24,lo8(.LC99)
 11895 5002 90E0      		ldi r25,hi8(.LC99)
 11896 5004 892F      		mov r24,r25
 11897 5006 8F93      		push r24
 11898 5008 80E0      		ldi r24,lo8(.LC99)
 11899 500a 90E0      		ldi r25,hi8(.LC99)
 11900 500c 8F93      		push r24
 11901 500e CE01      		movw r24,r28
 11902 5010 8F5B      		subi r24,-65
 11903 5012 9F4F      		sbci r25,-1
 11904 5014 FC01      		movw r30,r24
 11905 5016 2181      		ldd r18,Z+1
 11906 5018 2F93      		push r18
 11907 501a FC01      		movw r30,r24
 11908 501c 8081      		ld r24,Z
 11909 501e 8F93      		push r24
 11910 5020 CE01      		movw r24,r28
 11911 5022 805C      		subi r24,-64
 11912 5024 9F4F      		sbci r25,-1
 11913 5026 FC01      		movw r30,r24
 11914 5028 8081      		ld r24,Z
 11915 502a 8F93      		push r24
 11916 502c 8FAD      		ldd r24,Y+63
 11917 502e 8F93      		push r24
 11918 5030 0E94 0000 		call write_data
 11919 5034 4DB7      		in r20,__SP_L__
 11920 5036 5EB7      		in r21,__SP_H__
 11921 5038 485F      		subi r20,-8
 11922 503a 5F4F      		sbci r21,-1
 11923 503c 0FB6      		in __tmp_reg__,__SREG__
 11924 503e F894      		cli
 11925 5040 DEBF      		out __SP_H__,r29
 11926 5042 0FBE      		out __SREG__,__tmp_reg__
 11927 5044 CDBF      		out __SP_L__,r28
 11928               	.L429:
1354:lp_solve_5.5/lp_MPS.c ****   write_data(userhandle, write_modeldata, "*<meta origsense='%s'>\n", (is_maxim(lp) ? "MAX" : "MIN"
 11929               		.loc 1 1354 0
 11930 5046 8BAD      		ldd r24,Y+59
 11931 5048 9CAD      		ldd r25,Y+60
 11932 504a 0E94 0000 		call is_maxim
 11933 504e 8823      		tst r24
 11934 5050 01F0      		breq .L430
 11935               		.loc 1 1354 0 is_stmt 0 discriminator 1
 11936 5052 80E0      		ldi r24,lo8(.LC44)
 11937 5054 90E0      		ldi r25,hi8(.LC44)
 11938 5056 00C0      		rjmp .L431
 11939               	.L430:
 11940               		.loc 1 1354 0 discriminator 2
 11941 5058 80E0      		ldi r24,lo8(.LC46)
 11942 505a 90E0      		ldi r25,hi8(.LC46)
 11943               	.L431:
 11944               		.loc 1 1354 0 discriminator 4
 11945 505c 292F      		mov r18,r25
 11946 505e 2F93      		push r18
 11947 5060 8F93      		push r24
 11948 5062 80E0      		ldi r24,lo8(.LC100)
 11949 5064 90E0      		ldi r25,hi8(.LC100)
 11950 5066 892F      		mov r24,r25
 11951 5068 8F93      		push r24
 11952 506a 80E0      		ldi r24,lo8(.LC100)
 11953 506c 90E0      		ldi r25,hi8(.LC100)
 11954 506e 8F93      		push r24
 11955 5070 CE01      		movw r24,r28
 11956 5072 8F5B      		subi r24,-65
 11957 5074 9F4F      		sbci r25,-1
 11958 5076 FC01      		movw r30,r24
 11959 5078 2181      		ldd r18,Z+1
 11960 507a 2F93      		push r18
 11961 507c FC01      		movw r30,r24
 11962 507e 8081      		ld r24,Z
 11963 5080 8F93      		push r24
 11964 5082 CE01      		movw r24,r28
 11965 5084 805C      		subi r24,-64
 11966 5086 9F4F      		sbci r25,-1
 11967 5088 FC01      		movw r30,r24
 11968 508a 8081      		ld r24,Z
 11969 508c 8F93      		push r24
 11970 508e 8FAD      		ldd r24,Y+63
 11971 5090 8F93      		push r24
 11972 5092 0E94 0000 		call write_data
 11973 5096 4DB7      		in r20,__SP_L__
 11974 5098 5EB7      		in r21,__SP_H__
 11975 509a 485F      		subi r20,-8
 11976 509c 5F4F      		sbci r21,-1
 11977 509e 0FB6      		in __tmp_reg__,__SREG__
 11978 50a0 F894      		cli
 11979 50a2 DEBF      		out __SP_H__,r29
 11980 50a4 0FBE      		out __SREG__,__tmp_reg__
 11981 50a6 CDBF      		out __SP_L__,r28
1355:lp_solve_5.5/lp_MPS.c ****   write_data(userhandle, write_modeldata, "*\n");
 11982               		.loc 1 1355 0 is_stmt 1 discriminator 4
 11983 50a8 80E0      		ldi r24,lo8(.LC101)
 11984 50aa 90E0      		ldi r25,hi8(.LC101)
 11985 50ac 892F      		mov r24,r25
 11986 50ae 8F93      		push r24
 11987 50b0 80E0      		ldi r24,lo8(.LC101)
 11988 50b2 90E0      		ldi r25,hi8(.LC101)
 11989 50b4 8F93      		push r24
 11990 50b6 CE01      		movw r24,r28
 11991 50b8 8F5B      		subi r24,-65
 11992 50ba 9F4F      		sbci r25,-1
 11993 50bc FC01      		movw r30,r24
 11994 50be 2181      		ldd r18,Z+1
 11995 50c0 2F93      		push r18
 11996 50c2 FC01      		movw r30,r24
 11997 50c4 8081      		ld r24,Z
 11998 50c6 8F93      		push r24
 11999 50c8 CE01      		movw r24,r28
 12000 50ca 805C      		subi r24,-64
 12001 50cc 9F4F      		sbci r25,-1
 12002 50ce FC01      		movw r30,r24
 12003 50d0 8081      		ld r24,Z
 12004 50d2 8F93      		push r24
 12005 50d4 8FAD      		ldd r24,Y+63
 12006 50d6 8F93      		push r24
 12007 50d8 0E94 0000 		call write_data
 12008 50dc 0F90      		pop __tmp_reg__
 12009 50de 0F90      		pop __tmp_reg__
 12010 50e0 0F90      		pop __tmp_reg__
 12011 50e2 0F90      		pop __tmp_reg__
 12012 50e4 0F90      		pop __tmp_reg__
 12013 50e6 0F90      		pop __tmp_reg__
1356:lp_solve_5.5/lp_MPS.c **** 
1357:lp_solve_5.5/lp_MPS.c ****   /* Write the MPS content */
1358:lp_solve_5.5/lp_MPS.c ****   write_data(userhandle, write_modeldata, "NAME          %s\n", MPSname(name0, get_lp_name(lp)));
 12014               		.loc 1 1358 0 discriminator 4
 12015 50e8 8BAD      		ldd r24,Y+59
 12016 50ea 9CAD      		ldd r25,Y+60
 12017 50ec 0E94 0000 		call get_lp_name
 12018 50f0 AC01      		movw r20,r24
 12019 50f2 CE01      		movw r24,r28
 12020 50f4 C296      		adiw r24,50
 12021 50f6 288D      		ldd r18,Y+24
 12022 50f8 398D      		ldd r19,Y+25
 12023 50fa BA01      		movw r22,r20
 12024 50fc F901      		movw r30,r18
 12025 50fe 0995      		icall
 12026 5100 292F      		mov r18,r25
 12027 5102 2F93      		push r18
 12028 5104 8F93      		push r24
 12029 5106 80E0      		ldi r24,lo8(.LC102)
 12030 5108 90E0      		ldi r25,hi8(.LC102)
 12031 510a 892F      		mov r24,r25
 12032 510c 8F93      		push r24
 12033 510e 80E0      		ldi r24,lo8(.LC102)
 12034 5110 90E0      		ldi r25,hi8(.LC102)
 12035 5112 8F93      		push r24
 12036 5114 CE01      		movw r24,r28
 12037 5116 8F5B      		subi r24,-65
 12038 5118 9F4F      		sbci r25,-1
 12039 511a FC01      		movw r30,r24
 12040 511c 2181      		ldd r18,Z+1
 12041 511e 2F93      		push r18
 12042 5120 FC01      		movw r30,r24
 12043 5122 8081      		ld r24,Z
 12044 5124 8F93      		push r24
 12045 5126 CE01      		movw r24,r28
 12046 5128 805C      		subi r24,-64
 12047 512a 9F4F      		sbci r25,-1
 12048 512c FC01      		movw r30,r24
 12049 512e 8081      		ld r24,Z
 12050 5130 8F93      		push r24
 12051 5132 8FAD      		ldd r24,Y+63
 12052 5134 8F93      		push r24
 12053 5136 0E94 0000 		call write_data
 12054 513a 4DB7      		in r20,__SP_L__
 12055 513c 5EB7      		in r21,__SP_H__
 12056 513e 485F      		subi r20,-8
 12057 5140 5F4F      		sbci r21,-1
 12058 5142 0FB6      		in __tmp_reg__,__SREG__
 12059 5144 F894      		cli
 12060 5146 DEBF      		out __SP_H__,r29
 12061 5148 0FBE      		out __SREG__,__tmp_reg__
 12062 514a CDBF      		out __SP_L__,r28
1359:lp_solve_5.5/lp_MPS.c ****   if(((typeMPS & MPSFREE) == MPSFREE) && (is_maxim(lp)))
 12063               		.loc 1 1359 0 discriminator 4
 12064 514c 8DAD      		ldd r24,Y+61
 12065 514e 9EAD      		ldd r25,Y+62
 12066 5150 8270      		andi r24,2
 12067 5152 9927      		clr r25
 12068 5154 892B      		or r24,r25
 12069 5156 01F0      		breq .L432
 12070               		.loc 1 1359 0 is_stmt 0 discriminator 1
 12071 5158 8BAD      		ldd r24,Y+59
 12072 515a 9CAD      		ldd r25,Y+60
 12073 515c 0E94 0000 		call is_maxim
 12074 5160 8823      		tst r24
 12075 5162 01F0      		breq .L432
1360:lp_solve_5.5/lp_MPS.c ****     write_data(userhandle, write_modeldata, "OBJSENSE\n MAX\n");
 12076               		.loc 1 1360 0 is_stmt 1
 12077 5164 80E0      		ldi r24,lo8(.LC103)
 12078 5166 90E0      		ldi r25,hi8(.LC103)
 12079 5168 892F      		mov r24,r25
 12080 516a 8F93      		push r24
 12081 516c 80E0      		ldi r24,lo8(.LC103)
 12082 516e 90E0      		ldi r25,hi8(.LC103)
 12083 5170 8F93      		push r24
 12084 5172 CE01      		movw r24,r28
 12085 5174 8F5B      		subi r24,-65
 12086 5176 9F4F      		sbci r25,-1
 12087 5178 FC01      		movw r30,r24
 12088 517a 2181      		ldd r18,Z+1
 12089 517c 2F93      		push r18
 12090 517e FC01      		movw r30,r24
 12091 5180 8081      		ld r24,Z
 12092 5182 8F93      		push r24
 12093 5184 CE01      		movw r24,r28
 12094 5186 805C      		subi r24,-64
 12095 5188 9F4F      		sbci r25,-1
 12096 518a FC01      		movw r30,r24
 12097 518c 8081      		ld r24,Z
 12098 518e 8F93      		push r24
 12099 5190 8FAD      		ldd r24,Y+63
 12100 5192 8F93      		push r24
 12101 5194 0E94 0000 		call write_data
 12102 5198 0F90      		pop __tmp_reg__
 12103 519a 0F90      		pop __tmp_reg__
 12104 519c 0F90      		pop __tmp_reg__
 12105 519e 0F90      		pop __tmp_reg__
 12106 51a0 0F90      		pop __tmp_reg__
 12107 51a2 0F90      		pop __tmp_reg__
 12108               	.L432:
1361:lp_solve_5.5/lp_MPS.c ****   write_data(userhandle, write_modeldata, "ROWS\n");
 12109               		.loc 1 1361 0
 12110 51a4 80E0      		ldi r24,lo8(.LC104)
 12111 51a6 90E0      		ldi r25,hi8(.LC104)
 12112 51a8 892F      		mov r24,r25
 12113 51aa 8F93      		push r24
 12114 51ac 80E0      		ldi r24,lo8(.LC104)
 12115 51ae 90E0      		ldi r25,hi8(.LC104)
 12116 51b0 8F93      		push r24
 12117 51b2 CE01      		movw r24,r28
 12118 51b4 8F5B      		subi r24,-65
 12119 51b6 9F4F      		sbci r25,-1
 12120 51b8 FC01      		movw r30,r24
 12121 51ba 2181      		ldd r18,Z+1
 12122 51bc 2F93      		push r18
 12123 51be FC01      		movw r30,r24
 12124 51c0 8081      		ld r24,Z
 12125 51c2 8F93      		push r24
 12126 51c4 CE01      		movw r24,r28
 12127 51c6 805C      		subi r24,-64
 12128 51c8 9F4F      		sbci r25,-1
 12129 51ca FC01      		movw r30,r24
 12130 51cc 8081      		ld r24,Z
 12131 51ce 8F93      		push r24
 12132 51d0 8FAD      		ldd r24,Y+63
 12133 51d2 8F93      		push r24
 12134 51d4 0E94 0000 		call write_data
 12135 51d8 0F90      		pop __tmp_reg__
 12136 51da 0F90      		pop __tmp_reg__
 12137 51dc 0F90      		pop __tmp_reg__
 12138 51de 0F90      		pop __tmp_reg__
 12139 51e0 0F90      		pop __tmp_reg__
 12140 51e2 0F90      		pop __tmp_reg__
1362:lp_solve_5.5/lp_MPS.c ****   for(i = 0; i <= lp->rows; i++) {
 12141               		.loc 1 1362 0
 12142 51e4 1A82      		std Y+2,__zero_reg__
 12143 51e6 1982      		std Y+1,__zero_reg__
 12144 51e8 00C0      		rjmp .L433
 12145               	.L440:
1363:lp_solve_5.5/lp_MPS.c ****     if(i == 0)
 12146               		.loc 1 1363 0
 12147 51ea 8981      		ldd r24,Y+1
 12148 51ec 9A81      		ldd r25,Y+2
 12149 51ee 892B      		or r24,r25
 12150 51f0 01F4      		brne .L434
1364:lp_solve_5.5/lp_MPS.c ****       write_data(userhandle, write_modeldata, " N  ");
 12151               		.loc 1 1364 0
 12152 51f2 80E0      		ldi r24,lo8(.LC105)
 12153 51f4 90E0      		ldi r25,hi8(.LC105)
 12154 51f6 892F      		mov r24,r25
 12155 51f8 8F93      		push r24
 12156 51fa 80E0      		ldi r24,lo8(.LC105)
 12157 51fc 90E0      		ldi r25,hi8(.LC105)
 12158 51fe 8F93      		push r24
 12159 5200 CE01      		movw r24,r28
 12160 5202 8F5B      		subi r24,-65
 12161 5204 9F4F      		sbci r25,-1
 12162 5206 FC01      		movw r30,r24
 12163 5208 2181      		ldd r18,Z+1
 12164 520a 2F93      		push r18
 12165 520c FC01      		movw r30,r24
 12166 520e 8081      		ld r24,Z
 12167 5210 8F93      		push r24
 12168 5212 CE01      		movw r24,r28
 12169 5214 805C      		subi r24,-64
 12170 5216 9F4F      		sbci r25,-1
 12171 5218 FC01      		movw r30,r24
 12172 521a 8081      		ld r24,Z
 12173 521c 8F93      		push r24
 12174 521e 8FAD      		ldd r24,Y+63
 12175 5220 8F93      		push r24
 12176 5222 0E94 0000 		call write_data
 12177 5226 0F90      		pop __tmp_reg__
 12178 5228 0F90      		pop __tmp_reg__
 12179 522a 0F90      		pop __tmp_reg__
 12180 522c 0F90      		pop __tmp_reg__
 12181 522e 0F90      		pop __tmp_reg__
 12182 5230 0F90      		pop __tmp_reg__
 12183 5232 00C0      		rjmp .L435
 12184               	.L434:
1365:lp_solve_5.5/lp_MPS.c ****     else if(lp->orig_upbo[i] != 0) {
 12185               		.loc 1 1365 0
 12186 5234 8BAD      		ldd r24,Y+59
 12187 5236 9CAD      		ldd r25,Y+60
 12188 5238 8255      		subi r24,82
 12189 523a 9D4F      		sbci r25,-3
 12190 523c FC01      		movw r30,r24
 12191 523e 2081      		ld r18,Z
 12192 5240 3181      		ldd r19,Z+1
 12193 5242 8981      		ldd r24,Y+1
 12194 5244 9A81      		ldd r25,Y+2
 12195 5246 880F      		lsl r24
 12196 5248 991F      		rol r25
 12197 524a 880F      		lsl r24
 12198 524c 991F      		rol r25
 12199 524e 820F      		add r24,r18
 12200 5250 931F      		adc r25,r19
 12201 5252 FC01      		movw r30,r24
 12202 5254 8081      		ld r24,Z
 12203 5256 9181      		ldd r25,Z+1
 12204 5258 A281      		ldd r26,Z+2
 12205 525a B381      		ldd r27,Z+3
 12206 525c 20E0      		ldi r18,0
 12207 525e 30E0      		ldi r19,0
 12208 5260 A901      		movw r20,r18
 12209 5262 BC01      		movw r22,r24
 12210 5264 CD01      		movw r24,r26
 12211 5266 0E94 0000 		call __nesf2
 12212 526a 8823      		tst r24
 12213 526c 01F4      		brne .+2
 12214 526e 00C0      		rjmp .L530
1366:lp_solve_5.5/lp_MPS.c ****       if(is_chsign(lp,i))
 12215               		.loc 1 1366 0
 12216 5270 2981      		ldd r18,Y+1
 12217 5272 3A81      		ldd r19,Y+2
 12218 5274 8BAD      		ldd r24,Y+59
 12219 5276 9CAD      		ldd r25,Y+60
 12220 5278 B901      		movw r22,r18
 12221 527a 0E94 0000 		call is_chsign
 12222 527e 8823      		tst r24
 12223 5280 01F0      		breq .L438
1367:lp_solve_5.5/lp_MPS.c ****         write_data(userhandle, write_modeldata, " G  ");
 12224               		.loc 1 1367 0
 12225 5282 80E0      		ldi r24,lo8(.LC106)
 12226 5284 90E0      		ldi r25,hi8(.LC106)
 12227 5286 892F      		mov r24,r25
 12228 5288 8F93      		push r24
 12229 528a 80E0      		ldi r24,lo8(.LC106)
 12230 528c 90E0      		ldi r25,hi8(.LC106)
 12231 528e 8F93      		push r24
 12232 5290 CE01      		movw r24,r28
 12233 5292 8F5B      		subi r24,-65
 12234 5294 9F4F      		sbci r25,-1
 12235 5296 FC01      		movw r30,r24
 12236 5298 2181      		ldd r18,Z+1
 12237 529a 2F93      		push r18
 12238 529c FC01      		movw r30,r24
 12239 529e 8081      		ld r24,Z
 12240 52a0 8F93      		push r24
 12241 52a2 CE01      		movw r24,r28
 12242 52a4 805C      		subi r24,-64
 12243 52a6 9F4F      		sbci r25,-1
 12244 52a8 FC01      		movw r30,r24
 12245 52aa 8081      		ld r24,Z
 12246 52ac 8F93      		push r24
 12247 52ae 8FAD      		ldd r24,Y+63
 12248 52b0 8F93      		push r24
 12249 52b2 0E94 0000 		call write_data
 12250 52b6 0F90      		pop __tmp_reg__
 12251 52b8 0F90      		pop __tmp_reg__
 12252 52ba 0F90      		pop __tmp_reg__
 12253 52bc 0F90      		pop __tmp_reg__
 12254 52be 0F90      		pop __tmp_reg__
 12255 52c0 0F90      		pop __tmp_reg__
 12256 52c2 00C0      		rjmp .L435
 12257               	.L438:
1368:lp_solve_5.5/lp_MPS.c ****       else
1369:lp_solve_5.5/lp_MPS.c ****         write_data(userhandle, write_modeldata, " L  ");
 12258               		.loc 1 1369 0
 12259 52c4 80E0      		ldi r24,lo8(.LC107)
 12260 52c6 90E0      		ldi r25,hi8(.LC107)
 12261 52c8 892F      		mov r24,r25
 12262 52ca 8F93      		push r24
 12263 52cc 80E0      		ldi r24,lo8(.LC107)
 12264 52ce 90E0      		ldi r25,hi8(.LC107)
 12265 52d0 8F93      		push r24
 12266 52d2 CE01      		movw r24,r28
 12267 52d4 8F5B      		subi r24,-65
 12268 52d6 9F4F      		sbci r25,-1
 12269 52d8 FC01      		movw r30,r24
 12270 52da 2181      		ldd r18,Z+1
 12271 52dc 2F93      		push r18
 12272 52de FC01      		movw r30,r24
 12273 52e0 8081      		ld r24,Z
 12274 52e2 8F93      		push r24
 12275 52e4 CE01      		movw r24,r28
 12276 52e6 805C      		subi r24,-64
 12277 52e8 9F4F      		sbci r25,-1
 12278 52ea FC01      		movw r30,r24
 12279 52ec 8081      		ld r24,Z
 12280 52ee 8F93      		push r24
 12281 52f0 8FAD      		ldd r24,Y+63
 12282 52f2 8F93      		push r24
 12283 52f4 0E94 0000 		call write_data
 12284 52f8 0F90      		pop __tmp_reg__
 12285 52fa 0F90      		pop __tmp_reg__
 12286 52fc 0F90      		pop __tmp_reg__
 12287 52fe 0F90      		pop __tmp_reg__
 12288 5300 0F90      		pop __tmp_reg__
 12289 5302 0F90      		pop __tmp_reg__
 12290 5304 00C0      		rjmp .L435
 12291               	.L530:
1370:lp_solve_5.5/lp_MPS.c ****     }
1371:lp_solve_5.5/lp_MPS.c ****     else
1372:lp_solve_5.5/lp_MPS.c ****       write_data(userhandle, write_modeldata, " E  ");
 12292               		.loc 1 1372 0
 12293 5306 80E0      		ldi r24,lo8(.LC108)
 12294 5308 90E0      		ldi r25,hi8(.LC108)
 12295 530a 892F      		mov r24,r25
 12296 530c 8F93      		push r24
 12297 530e 80E0      		ldi r24,lo8(.LC108)
 12298 5310 90E0      		ldi r25,hi8(.LC108)
 12299 5312 8F93      		push r24
 12300 5314 CE01      		movw r24,r28
 12301 5316 8F5B      		subi r24,-65
 12302 5318 9F4F      		sbci r25,-1
 12303 531a FC01      		movw r30,r24
 12304 531c 2181      		ldd r18,Z+1
 12305 531e 2F93      		push r18
 12306 5320 FC01      		movw r30,r24
 12307 5322 8081      		ld r24,Z
 12308 5324 8F93      		push r24
 12309 5326 CE01      		movw r24,r28
 12310 5328 805C      		subi r24,-64
 12311 532a 9F4F      		sbci r25,-1
 12312 532c FC01      		movw r30,r24
 12313 532e 8081      		ld r24,Z
 12314 5330 8F93      		push r24
 12315 5332 8FAD      		ldd r24,Y+63
 12316 5334 8F93      		push r24
 12317 5336 0E94 0000 		call write_data
 12318 533a 0F90      		pop __tmp_reg__
 12319 533c 0F90      		pop __tmp_reg__
 12320 533e 0F90      		pop __tmp_reg__
 12321 5340 0F90      		pop __tmp_reg__
 12322 5342 0F90      		pop __tmp_reg__
 12323 5344 0F90      		pop __tmp_reg__
 12324               	.L435:
1373:lp_solve_5.5/lp_MPS.c ****     write_data(userhandle, write_modeldata, "%s\n", MPSname(name0, get_row_name(lp, i)));
 12325               		.loc 1 1373 0 discriminator 2
 12326 5346 2981      		ldd r18,Y+1
 12327 5348 3A81      		ldd r19,Y+2
 12328 534a 8BAD      		ldd r24,Y+59
 12329 534c 9CAD      		ldd r25,Y+60
 12330 534e B901      		movw r22,r18
 12331 5350 0E94 0000 		call get_row_name
 12332 5354 AC01      		movw r20,r24
 12333 5356 CE01      		movw r24,r28
 12334 5358 C296      		adiw r24,50
 12335 535a 288D      		ldd r18,Y+24
 12336 535c 398D      		ldd r19,Y+25
 12337 535e BA01      		movw r22,r20
 12338 5360 F901      		movw r30,r18
 12339 5362 0995      		icall
 12340 5364 292F      		mov r18,r25
 12341 5366 2F93      		push r18
 12342 5368 8F93      		push r24
 12343 536a 80E0      		ldi r24,lo8(.LC109)
 12344 536c 90E0      		ldi r25,hi8(.LC109)
 12345 536e 892F      		mov r24,r25
 12346 5370 8F93      		push r24
 12347 5372 80E0      		ldi r24,lo8(.LC109)
 12348 5374 90E0      		ldi r25,hi8(.LC109)
 12349 5376 8F93      		push r24
 12350 5378 CE01      		movw r24,r28
 12351 537a 8F5B      		subi r24,-65
 12352 537c 9F4F      		sbci r25,-1
 12353 537e FC01      		movw r30,r24
 12354 5380 2181      		ldd r18,Z+1
 12355 5382 2F93      		push r18
 12356 5384 FC01      		movw r30,r24
 12357 5386 8081      		ld r24,Z
 12358 5388 8F93      		push r24
 12359 538a CE01      		movw r24,r28
 12360 538c 805C      		subi r24,-64
 12361 538e 9F4F      		sbci r25,-1
 12362 5390 FC01      		movw r30,r24
 12363 5392 8081      		ld r24,Z
 12364 5394 8F93      		push r24
 12365 5396 8FAD      		ldd r24,Y+63
 12366 5398 8F93      		push r24
 12367 539a 0E94 0000 		call write_data
 12368 539e 4DB7      		in r20,__SP_L__
 12369 53a0 5EB7      		in r21,__SP_H__
 12370 53a2 485F      		subi r20,-8
 12371 53a4 5F4F      		sbci r21,-1
 12372 53a6 0FB6      		in __tmp_reg__,__SREG__
 12373 53a8 F894      		cli
 12374 53aa DEBF      		out __SP_H__,r29
 12375 53ac 0FBE      		out __SREG__,__tmp_reg__
 12376 53ae CDBF      		out __SP_L__,r28
1362:lp_solve_5.5/lp_MPS.c ****     if(i == 0)
 12377               		.loc 1 1362 0 discriminator 2
 12378 53b0 8981      		ldd r24,Y+1
 12379 53b2 9A81      		ldd r25,Y+2
 12380 53b4 0196      		adiw r24,1
 12381 53b6 9A83      		std Y+2,r25
 12382 53b8 8983      		std Y+1,r24
 12383               	.L433:
1362:lp_solve_5.5/lp_MPS.c ****     if(i == 0)
 12384               		.loc 1 1362 0 is_stmt 0 discriminator 1
 12385 53ba 8BAD      		ldd r24,Y+59
 12386 53bc 9CAD      		ldd r25,Y+60
 12387 53be 8651      		subi r24,22
 12388 53c0 9E4F      		sbci r25,-2
 12389 53c2 FC01      		movw r30,r24
 12390 53c4 2081      		ld r18,Z
 12391 53c6 3181      		ldd r19,Z+1
 12392 53c8 8981      		ldd r24,Y+1
 12393 53ca 9A81      		ldd r25,Y+2
 12394 53cc 2817      		cp r18,r24
 12395 53ce 3907      		cpc r19,r25
 12396 53d0 04F0      		brlt .+2
 12397 53d2 00C0      		rjmp .L440
1374:lp_solve_5.5/lp_MPS.c ****   }
1375:lp_solve_5.5/lp_MPS.c **** 
1376:lp_solve_5.5/lp_MPS.c ****   allocREAL(lp, &val, 1 + lp->rows, TRUE);
 12398               		.loc 1 1376 0 is_stmt 1
 12399 53d4 8BAD      		ldd r24,Y+59
 12400 53d6 9CAD      		ldd r25,Y+60
 12401 53d8 8651      		subi r24,22
 12402 53da 9E4F      		sbci r25,-2
 12403 53dc FC01      		movw r30,r24
 12404 53de 8081      		ld r24,Z
 12405 53e0 9181      		ldd r25,Z+1
 12406 53e2 AC01      		movw r20,r24
 12407 53e4 4F5F      		subi r20,-1
 12408 53e6 5F4F      		sbci r21,-1
 12409 53e8 BE01      		movw r22,r28
 12410 53ea 6F5D      		subi r22,-33
 12411 53ec 7F4F      		sbci r23,-1
 12412 53ee 8BAD      		ldd r24,Y+59
 12413 53f0 9CAD      		ldd r25,Y+60
 12414 53f2 21E0      		ldi r18,lo8(1)
 12415 53f4 0E94 0000 		call allocREAL
1377:lp_solve_5.5/lp_MPS.c ****   allocINT(lp, &idx, 1 + lp->rows, TRUE);
 12416               		.loc 1 1377 0
 12417 53f8 8BAD      		ldd r24,Y+59
 12418 53fa 9CAD      		ldd r25,Y+60
 12419 53fc 8651      		subi r24,22
 12420 53fe 9E4F      		sbci r25,-2
 12421 5400 FC01      		movw r30,r24
 12422 5402 8081      		ld r24,Z
 12423 5404 9181      		ldd r25,Z+1
 12424 5406 AC01      		movw r20,r24
 12425 5408 4F5F      		subi r20,-1
 12426 540a 5F4F      		sbci r21,-1
 12427 540c BE01      		movw r22,r28
 12428 540e 615E      		subi r22,-31
 12429 5410 7F4F      		sbci r23,-1
 12430 5412 8BAD      		ldd r24,Y+59
 12431 5414 9CAD      		ldd r25,Y+60
 12432 5416 21E0      		ldi r18,lo8(1)
 12433 5418 0E94 0000 		call allocINT
1378:lp_solve_5.5/lp_MPS.c ****   write_data(userhandle, write_modeldata, "COLUMNS\n");
 12434               		.loc 1 1378 0
 12435 541c 80E0      		ldi r24,lo8(.LC110)
 12436 541e 90E0      		ldi r25,hi8(.LC110)
 12437 5420 892F      		mov r24,r25
 12438 5422 8F93      		push r24
 12439 5424 80E0      		ldi r24,lo8(.LC110)
 12440 5426 90E0      		ldi r25,hi8(.LC110)
 12441 5428 8F93      		push r24
 12442 542a CE01      		movw r24,r28
 12443 542c 8F5B      		subi r24,-65
 12444 542e 9F4F      		sbci r25,-1
 12445 5430 FC01      		movw r30,r24
 12446 5432 2181      		ldd r18,Z+1
 12447 5434 2F93      		push r18
 12448 5436 FC01      		movw r30,r24
 12449 5438 8081      		ld r24,Z
 12450 543a 8F93      		push r24
 12451 543c CE01      		movw r24,r28
 12452 543e 805C      		subi r24,-64
 12453 5440 9F4F      		sbci r25,-1
 12454 5442 FC01      		movw r30,r24
 12455 5444 8081      		ld r24,Z
 12456 5446 8F93      		push r24
 12457 5448 8FAD      		ldd r24,Y+63
 12458 544a 8F93      		push r24
 12459 544c 0E94 0000 		call write_data
 12460 5450 0F90      		pop __tmp_reg__
 12461 5452 0F90      		pop __tmp_reg__
 12462 5454 0F90      		pop __tmp_reg__
 12463 5456 0F90      		pop __tmp_reg__
 12464 5458 0F90      		pop __tmp_reg__
 12465 545a 0F90      		pop __tmp_reg__
1379:lp_solve_5.5/lp_MPS.c ****   for(i = 1; i <= lp->columns; i++) {
 12466               		.loc 1 1379 0
 12467 545c 81E0      		ldi r24,lo8(1)
 12468 545e 90E0      		ldi r25,0
 12469 5460 9A83      		std Y+2,r25
 12470 5462 8983      		std Y+1,r24
 12471 5464 00C0      		rjmp .L441
 12472               	.L454:
1380:lp_solve_5.5/lp_MPS.c ****     if(!is_splitvar(lp, i)) {
 12473               		.loc 1 1380 0
 12474 5466 2981      		ldd r18,Y+1
 12475 5468 3A81      		ldd r19,Y+2
 12476 546a 8BAD      		ldd r24,Y+59
 12477 546c 9CAD      		ldd r25,Y+60
 12478 546e B901      		movw r22,r18
 12479 5470 0E94 0000 		call is_splitvar
 12480 5474 8823      		tst r24
 12481 5476 01F0      		breq .+2
 12482 5478 00C0      		rjmp .L442
1381:lp_solve_5.5/lp_MPS.c ****       if(is_int(lp,i) && (marker % 2) == 0) {
 12483               		.loc 1 1381 0
 12484 547a 2981      		ldd r18,Y+1
 12485 547c 3A81      		ldd r19,Y+2
 12486 547e 8BAD      		ldd r24,Y+59
 12487 5480 9CAD      		ldd r25,Y+60
 12488 5482 B901      		movw r22,r18
 12489 5484 0E94 0000 		call is_int
 12490 5488 8823      		tst r24
 12491 548a 01F0      		breq .L443
 12492               		.loc 1 1381 0 is_stmt 0 discriminator 1
 12493 548c 8985      		ldd r24,Y+9
 12494 548e 9A85      		ldd r25,Y+10
 12495 5490 8170      		andi r24,1
 12496 5492 9927      		clr r25
 12497 5494 892B      		or r24,r25
 12498 5496 01F4      		brne .L443
1382:lp_solve_5.5/lp_MPS.c ****         write_data(userhandle, write_modeldata, "    MARK%04d  'MARKER'                 'INTORG'\n"
 12499               		.loc 1 1382 0 is_stmt 1
 12500 5498 8A85      		ldd r24,Y+10
 12501 549a 8F93      		push r24
 12502 549c 8985      		ldd r24,Y+9
 12503 549e 8F93      		push r24
 12504 54a0 80E0      		ldi r24,lo8(.LC111)
 12505 54a2 90E0      		ldi r25,hi8(.LC111)
 12506 54a4 892F      		mov r24,r25
 12507 54a6 8F93      		push r24
 12508 54a8 80E0      		ldi r24,lo8(.LC111)
 12509 54aa 90E0      		ldi r25,hi8(.LC111)
 12510 54ac 8F93      		push r24
 12511 54ae CE01      		movw r24,r28
 12512 54b0 8F5B      		subi r24,-65
 12513 54b2 9F4F      		sbci r25,-1
 12514 54b4 FC01      		movw r30,r24
 12515 54b6 2181      		ldd r18,Z+1
 12516 54b8 2F93      		push r18
 12517 54ba FC01      		movw r30,r24
 12518 54bc 8081      		ld r24,Z
 12519 54be 8F93      		push r24
 12520 54c0 CE01      		movw r24,r28
 12521 54c2 805C      		subi r24,-64
 12522 54c4 9F4F      		sbci r25,-1
 12523 54c6 FC01      		movw r30,r24
 12524 54c8 8081      		ld r24,Z
 12525 54ca 8F93      		push r24
 12526 54cc 8FAD      		ldd r24,Y+63
 12527 54ce 8F93      		push r24
 12528 54d0 0E94 0000 		call write_data
 12529 54d4 4DB7      		in r20,__SP_L__
 12530 54d6 5EB7      		in r21,__SP_H__
 12531 54d8 485F      		subi r20,-8
 12532 54da 5F4F      		sbci r21,-1
 12533 54dc 0FB6      		in __tmp_reg__,__SREG__
 12534 54de F894      		cli
 12535 54e0 DEBF      		out __SP_H__,r29
 12536 54e2 0FBE      		out __SREG__,__tmp_reg__
 12537 54e4 CDBF      		out __SP_L__,r28
1383:lp_solve_5.5/lp_MPS.c ****                 marker);
1384:lp_solve_5.5/lp_MPS.c ****         marker++;
 12538               		.loc 1 1384 0
 12539 54e6 8985      		ldd r24,Y+9
 12540 54e8 9A85      		ldd r25,Y+10
 12541 54ea 0196      		adiw r24,1
 12542 54ec 9A87      		std Y+10,r25
 12543 54ee 8987      		std Y+9,r24
 12544               	.L443:
1385:lp_solve_5.5/lp_MPS.c ****       }
1386:lp_solve_5.5/lp_MPS.c ****       if(!is_int(lp,i) && (marker % 2) == 1) {
 12545               		.loc 1 1386 0
 12546 54f0 2981      		ldd r18,Y+1
 12547 54f2 3A81      		ldd r19,Y+2
 12548 54f4 8BAD      		ldd r24,Y+59
 12549 54f6 9CAD      		ldd r25,Y+60
 12550 54f8 B901      		movw r22,r18
 12551 54fa 0E94 0000 		call is_int
 12552 54fe 8823      		tst r24
 12553 5500 01F4      		brne .L444
 12554               		.loc 1 1386 0 is_stmt 0 discriminator 1
 12555 5502 8985      		ldd r24,Y+9
 12556 5504 9A85      		ldd r25,Y+10
 12557 5506 8170      		andi r24,1
 12558 5508 9078      		andi r25,128
 12559 550a 9923      		tst r25
 12560 550c 04F4      		brge .L445
 12561 550e 0197      		sbiw r24,1
 12562 5510 8E6F      		ori r24,254
 12563 5512 9F6F      		ori r25,255
 12564 5514 0196      		adiw r24,1
 12565               	.L445:
 12566 5516 0197      		sbiw r24,1
 12567 5518 01F4      		brne .L444
1387:lp_solve_5.5/lp_MPS.c ****         write_data(userhandle, write_modeldata, "    MARK%04d  'MARKER'                 'INTEND'\n"
 12568               		.loc 1 1387 0 is_stmt 1
 12569 551a 8A85      		ldd r24,Y+10
 12570 551c 8F93      		push r24
 12571 551e 8985      		ldd r24,Y+9
 12572 5520 8F93      		push r24
 12573 5522 80E0      		ldi r24,lo8(.LC112)
 12574 5524 90E0      		ldi r25,hi8(.LC112)
 12575 5526 892F      		mov r24,r25
 12576 5528 8F93      		push r24
 12577 552a 80E0      		ldi r24,lo8(.LC112)
 12578 552c 90E0      		ldi r25,hi8(.LC112)
 12579 552e 8F93      		push r24
 12580 5530 CE01      		movw r24,r28
 12581 5532 8F5B      		subi r24,-65
 12582 5534 9F4F      		sbci r25,-1
 12583 5536 FC01      		movw r30,r24
 12584 5538 2181      		ldd r18,Z+1
 12585 553a 2F93      		push r18
 12586 553c FC01      		movw r30,r24
 12587 553e 8081      		ld r24,Z
 12588 5540 8F93      		push r24
 12589 5542 CE01      		movw r24,r28
 12590 5544 805C      		subi r24,-64
 12591 5546 9F4F      		sbci r25,-1
 12592 5548 FC01      		movw r30,r24
 12593 554a 8081      		ld r24,Z
 12594 554c 8F93      		push r24
 12595 554e 8FAD      		ldd r24,Y+63
 12596 5550 8F93      		push r24
 12597 5552 0E94 0000 		call write_data
 12598 5556 4DB7      		in r20,__SP_L__
 12599 5558 5EB7      		in r21,__SP_H__
 12600 555a 485F      		subi r20,-8
 12601 555c 5F4F      		sbci r21,-1
 12602 555e 0FB6      		in __tmp_reg__,__SREG__
 12603 5560 F894      		cli
 12604 5562 DEBF      		out __SP_H__,r29
 12605 5564 0FBE      		out __SREG__,__tmp_reg__
 12606 5566 CDBF      		out __SP_L__,r28
1388:lp_solve_5.5/lp_MPS.c ****                 marker);
1389:lp_solve_5.5/lp_MPS.c ****         marker++;
 12607               		.loc 1 1389 0
 12608 5568 8985      		ldd r24,Y+9
 12609 556a 9A85      		ldd r25,Y+10
 12610 556c 0196      		adiw r24,1
 12611 556e 9A87      		std Y+10,r25
 12612 5570 8987      		std Y+9,r24
 12613               	.L444:
1390:lp_solve_5.5/lp_MPS.c ****       }
1391:lp_solve_5.5/lp_MPS.c **** 
1392:lp_solve_5.5/lp_MPS.c ****       /* Loop over non-zero column entries */
1393:lp_solve_5.5/lp_MPS.c ****       je = get_columnex(lp, i, val, idx);
 12614               		.loc 1 1393 0
 12615 5572 2F8D      		ldd r18,Y+31
 12616 5574 38A1      		ldd r19,Y+32
 12617 5576 49A1      		ldd r20,Y+33
 12618 5578 5AA1      		ldd r21,Y+34
 12619 557a 6981      		ldd r22,Y+1
 12620 557c 7A81      		ldd r23,Y+2
 12621 557e 8BAD      		ldd r24,Y+59
 12622 5580 9CAD      		ldd r25,Y+60
 12623 5582 0E94 0000 		call get_columnex
 12624 5586 9C8F      		std Y+28,r25
 12625 5588 8B8F      		std Y+27,r24
1394:lp_solve_5.5/lp_MPS.c ****       for(k = 1, val1 = val, idx1 = idx, jj = 0; jj < je; jj++) {
 12626               		.loc 1 1394 0
 12627 558a 81E0      		ldi r24,lo8(1)
 12628 558c 90E0      		ldi r25,0
 12629 558e 9887      		std Y+8,r25
 12630 5590 8F83      		std Y+7,r24
 12631 5592 89A1      		ldd r24,Y+33
 12632 5594 9AA1      		ldd r25,Y+34
 12633 5596 9F8B      		std Y+23,r25
 12634 5598 8E8B      		std Y+22,r24
 12635 559a 8F8D      		ldd r24,Y+31
 12636 559c 98A1      		ldd r25,Y+32
 12637 559e 988B      		std Y+16,r25
 12638 55a0 8F87      		std Y+15,r24
 12639 55a2 1E82      		std Y+6,__zero_reg__
 12640 55a4 1D82      		std Y+5,__zero_reg__
 12641 55a6 00C0      		rjmp .L446
 12642               	.L453:
1395:lp_solve_5.5/lp_MPS.c ****         k = 1 - k;
 12643               		.loc 1 1395 0
 12644 55a8 21E0      		ldi r18,lo8(1)
 12645 55aa 30E0      		ldi r19,0
 12646 55ac 8F81      		ldd r24,Y+7
 12647 55ae 9885      		ldd r25,Y+8
 12648 55b0 F901      		movw r30,r18
 12649 55b2 E81B      		sub r30,r24
 12650 55b4 F90B      		sbc r31,r25
 12651 55b6 CF01      		movw r24,r30
 12652 55b8 9887      		std Y+8,r25
 12653 55ba 8F83      		std Y+7,r24
1396:lp_solve_5.5/lp_MPS.c ****         j = *(idx1++);
 12654               		.loc 1 1396 0
 12655 55bc 8F85      		ldd r24,Y+15
 12656 55be 9889      		ldd r25,Y+16
 12657 55c0 9C01      		movw r18,r24
 12658 55c2 2E5F      		subi r18,-2
 12659 55c4 3F4F      		sbci r19,-1
 12660 55c6 388B      		std Y+16,r19
 12661 55c8 2F87      		std Y+15,r18
 12662 55ca FC01      		movw r30,r24
 12663 55cc 8081      		ld r24,Z
 12664 55ce 9181      		ldd r25,Z+1
 12665 55d0 9C83      		std Y+4,r25
 12666 55d2 8B83      		std Y+3,r24
1397:lp_solve_5.5/lp_MPS.c ****         a = *(val1++);
 12667               		.loc 1 1397 0
 12668 55d4 8E89      		ldd r24,Y+22
 12669 55d6 9F89      		ldd r25,Y+23
 12670 55d8 9C01      		movw r18,r24
 12671 55da 2C5F      		subi r18,-4
 12672 55dc 3F4F      		sbci r19,-1
 12673 55de 3F8B      		std Y+23,r19
 12674 55e0 2E8B      		std Y+22,r18
 12675 55e2 FC01      		movw r30,r24
 12676 55e4 8081      		ld r24,Z
 12677 55e6 9181      		ldd r25,Z+1
 12678 55e8 A281      		ldd r26,Z+2
 12679 55ea B381      		ldd r27,Z+3
 12680 55ec 8A8B      		std Y+18,r24
 12681 55ee 9B8B      		std Y+19,r25
 12682 55f0 AC8B      		std Y+20,r26
 12683 55f2 BD8B      		std Y+21,r27
1398:lp_solve_5.5/lp_MPS.c ****         if (k == 0) {
 12684               		.loc 1 1398 0
 12685 55f4 8F81      		ldd r24,Y+7
 12686 55f6 9885      		ldd r25,Y+8
 12687 55f8 892B      		or r24,r25
 12688 55fa 01F0      		breq .+2
 12689 55fc 00C0      		rjmp .L447
1399:lp_solve_5.5/lp_MPS.c ****           write_data(userhandle, write_modeldata, "    %s",
 12690               		.loc 1 1399 0
 12691 55fe 2981      		ldd r18,Y+1
 12692 5600 3A81      		ldd r19,Y+2
 12693 5602 8BAD      		ldd r24,Y+59
 12694 5604 9CAD      		ldd r25,Y+60
 12695 5606 B901      		movw r22,r18
 12696 5608 0E94 0000 		call get_col_name
 12697 560c AC01      		movw r20,r24
 12698 560e CE01      		movw r24,r28
 12699 5610 C296      		adiw r24,50
 12700 5612 288D      		ldd r18,Y+24
 12701 5614 398D      		ldd r19,Y+25
 12702 5616 BA01      		movw r22,r20
 12703 5618 F901      		movw r30,r18
 12704 561a 0995      		icall
 12705 561c 292F      		mov r18,r25
 12706 561e 2F93      		push r18
 12707 5620 8F93      		push r24
 12708 5622 80E0      		ldi r24,lo8(.LC113)
 12709 5624 90E0      		ldi r25,hi8(.LC113)
 12710 5626 892F      		mov r24,r25
 12711 5628 8F93      		push r24
 12712 562a 80E0      		ldi r24,lo8(.LC113)
 12713 562c 90E0      		ldi r25,hi8(.LC113)
 12714 562e 8F93      		push r24
 12715 5630 CE01      		movw r24,r28
 12716 5632 8F5B      		subi r24,-65
 12717 5634 9F4F      		sbci r25,-1
 12718 5636 FC01      		movw r30,r24
 12719 5638 2181      		ldd r18,Z+1
 12720 563a 2F93      		push r18
 12721 563c FC01      		movw r30,r24
 12722 563e 8081      		ld r24,Z
 12723 5640 8F93      		push r24
 12724 5642 CE01      		movw r24,r28
 12725 5644 805C      		subi r24,-64
 12726 5646 9F4F      		sbci r25,-1
 12727 5648 FC01      		movw r30,r24
 12728 564a 8081      		ld r24,Z
 12729 564c 8F93      		push r24
 12730 564e 8FAD      		ldd r24,Y+63
 12731 5650 8F93      		push r24
 12732 5652 0E94 0000 		call write_data
 12733 5656 4DB7      		in r20,__SP_L__
 12734 5658 5EB7      		in r21,__SP_H__
 12735 565a 485F      		subi r20,-8
 12736 565c 5F4F      		sbci r21,-1
 12737 565e 0FB6      		in __tmp_reg__,__SREG__
 12738 5660 F894      		cli
 12739 5662 DEBF      		out __SP_H__,r29
 12740 5664 0FBE      		out __SREG__,__tmp_reg__
 12741 5666 CDBF      		out __SP_L__,r28
1400:lp_solve_5.5/lp_MPS.c ****                           MPSname(name0, get_col_name(lp, i)));
1401:lp_solve_5.5/lp_MPS.c ****           write_data(userhandle, write_modeldata, "  %s  %s",
 12742               		.loc 1 1401 0
 12743 5668 8B81      		ldd r24,Y+3
 12744 566a 9C81      		ldd r25,Y+4
 12745 566c 892B      		or r24,r25
 12746 566e 01F4      		brne .L448
1402:lp_solve_5.5/lp_MPS.c ****                           MPSname(name0, get_row_name(lp, j)),
1403:lp_solve_5.5/lp_MPS.c **** /*                          formatnumber12(numberbuffer, (double) a)); */
1404:lp_solve_5.5/lp_MPS.c ****                           formatnumber12(numberbuffer, (double) (a * (j == 0 && ChangeSignObj ? -1 
 12747               		.loc 1 1404 0
 12748 5670 8D85      		ldd r24,Y+13
 12749 5672 9E85      		ldd r25,Y+14
 12750 5674 892B      		or r24,r25
 12751 5676 01F0      		breq .L448
1401:lp_solve_5.5/lp_MPS.c ****                           MPSname(name0, get_row_name(lp, j)),
 12752               		.loc 1 1401 0
 12753 5678 80E0      		ldi r24,0
 12754 567a 90E0      		ldi r25,0
 12755 567c A0E8      		ldi r26,lo8(-128)
 12756 567e BFEB      		ldi r27,lo8(-65)
 12757 5680 00C0      		rjmp .L449
 12758               	.L448:
1401:lp_solve_5.5/lp_MPS.c ****                           MPSname(name0, get_row_name(lp, j)),
 12759               		.loc 1 1401 0 is_stmt 0 discriminator 1
 12760 5682 80E0      		ldi r24,0
 12761 5684 90E0      		ldi r25,0
 12762 5686 A0E8      		ldi r26,lo8(-128)
 12763 5688 BFE3      		ldi r27,lo8(63)
 12764               	.L449:
1401:lp_solve_5.5/lp_MPS.c ****                           MPSname(name0, get_row_name(lp, j)),
 12765               		.loc 1 1401 0 discriminator 3
 12766 568a 2A89      		ldd r18,Y+18
 12767 568c 3B89      		ldd r19,Y+19
 12768 568e 4C89      		ldd r20,Y+20
 12769 5690 5D89      		ldd r21,Y+21
 12770 5692 BC01      		movw r22,r24
 12771 5694 CD01      		movw r24,r26
 12772 5696 0E94 0000 		call __mulsf3
 12773 569a DC01      		movw r26,r24
 12774 569c CB01      		movw r24,r22
 12775 569e 9C01      		movw r18,r24
 12776 56a0 AD01      		movw r20,r26
 12777 56a2 CE01      		movw r24,r28
 12778 56a4 8396      		adiw r24,35
 12779 56a6 BA01      		movw r22,r20
 12780 56a8 A901      		movw r20,r18
 12781 56aa 0E94 0000 		call formatnumber12
 12782 56ae 8C01      		movw r16,r24
 12783 56b0 2B81      		ldd r18,Y+3
 12784 56b2 3C81      		ldd r19,Y+4
 12785 56b4 8BAD      		ldd r24,Y+59
 12786 56b6 9CAD      		ldd r25,Y+60
 12787 56b8 B901      		movw r22,r18
 12788 56ba 0E94 0000 		call get_row_name
 12789 56be AC01      		movw r20,r24
 12790 56c0 CE01      		movw r24,r28
 12791 56c2 C296      		adiw r24,50
 12792 56c4 288D      		ldd r18,Y+24
 12793 56c6 398D      		ldd r19,Y+25
 12794 56c8 BA01      		movw r22,r20
 12795 56ca F901      		movw r30,r18
 12796 56cc 0995      		icall
 12797 56ce 212F      		mov r18,r17
 12798 56d0 2F93      		push r18
 12799 56d2 202F      		mov r18,r16
 12800 56d4 2F93      		push r18
 12801 56d6 292F      		mov r18,r25
 12802 56d8 2F93      		push r18
 12803 56da 8F93      		push r24
 12804 56dc 80E0      		ldi r24,lo8(.LC114)
 12805 56de 90E0      		ldi r25,hi8(.LC114)
 12806 56e0 892F      		mov r24,r25
 12807 56e2 8F93      		push r24
 12808 56e4 80E0      		ldi r24,lo8(.LC114)
 12809 56e6 90E0      		ldi r25,hi8(.LC114)
 12810 56e8 8F93      		push r24
 12811 56ea CE01      		movw r24,r28
 12812 56ec 8F5B      		subi r24,-65
 12813 56ee 9F4F      		sbci r25,-1
 12814 56f0 FC01      		movw r30,r24
 12815 56f2 2181      		ldd r18,Z+1
 12816 56f4 2F93      		push r18
 12817 56f6 FC01      		movw r30,r24
 12818 56f8 8081      		ld r24,Z
 12819 56fa 8F93      		push r24
 12820 56fc CE01      		movw r24,r28
 12821 56fe 805C      		subi r24,-64
 12822 5700 9F4F      		sbci r25,-1
 12823 5702 FC01      		movw r30,r24
 12824 5704 8081      		ld r24,Z
 12825 5706 8F93      		push r24
 12826 5708 8FAD      		ldd r24,Y+63
 12827 570a 8F93      		push r24
 12828 570c 0E94 0000 		call write_data
 12829 5710 4DB7      		in r20,__SP_L__
 12830 5712 5EB7      		in r21,__SP_H__
 12831 5714 465F      		subi r20,-10
 12832 5716 5F4F      		sbci r21,-1
 12833 5718 0FB6      		in __tmp_reg__,__SREG__
 12834 571a F894      		cli
 12835 571c DEBF      		out __SP_H__,r29
 12836 571e 0FBE      		out __SREG__,__tmp_reg__
 12837 5720 CDBF      		out __SP_L__,r28
 12838 5722 00C0      		rjmp .L450
 12839               	.L447:
1405:lp_solve_5.5/lp_MPS.c ****     }
1406:lp_solve_5.5/lp_MPS.c ****         else
1407:lp_solve_5.5/lp_MPS.c ****           write_data(userhandle, write_modeldata, "   %s  %s\n",
 12840               		.loc 1 1407 0 is_stmt 1
 12841 5724 8B81      		ldd r24,Y+3
 12842 5726 9C81      		ldd r25,Y+4
 12843 5728 892B      		or r24,r25
 12844 572a 01F4      		brne .L451
1408:lp_solve_5.5/lp_MPS.c ****                           MPSname(name0, get_row_name(lp, j)),
1409:lp_solve_5.5/lp_MPS.c ****                           formatnumber12(numberbuffer, (double) (a * (j == 0 && ChangeSignObj ? -1 
 12845               		.loc 1 1409 0
 12846 572c 8D85      		ldd r24,Y+13
 12847 572e 9E85      		ldd r25,Y+14
 12848 5730 892B      		or r24,r25
 12849 5732 01F0      		breq .L451
1407:lp_solve_5.5/lp_MPS.c ****                           MPSname(name0, get_row_name(lp, j)),
 12850               		.loc 1 1407 0
 12851 5734 80E0      		ldi r24,0
 12852 5736 90E0      		ldi r25,0
 12853 5738 A0E8      		ldi r26,lo8(-128)
 12854 573a BFEB      		ldi r27,lo8(-65)
 12855 573c 00C0      		rjmp .L452
 12856               	.L451:
1407:lp_solve_5.5/lp_MPS.c ****                           MPSname(name0, get_row_name(lp, j)),
 12857               		.loc 1 1407 0 is_stmt 0 discriminator 1
 12858 573e 80E0      		ldi r24,0
 12859 5740 90E0      		ldi r25,0
 12860 5742 A0E8      		ldi r26,lo8(-128)
 12861 5744 BFE3      		ldi r27,lo8(63)
 12862               	.L452:
1407:lp_solve_5.5/lp_MPS.c ****                           MPSname(name0, get_row_name(lp, j)),
 12863               		.loc 1 1407 0 discriminator 3
 12864 5746 2A89      		ldd r18,Y+18
 12865 5748 3B89      		ldd r19,Y+19
 12866 574a 4C89      		ldd r20,Y+20
 12867 574c 5D89      		ldd r21,Y+21
 12868 574e BC01      		movw r22,r24
 12869 5750 CD01      		movw r24,r26
 12870 5752 0E94 0000 		call __mulsf3
 12871 5756 DC01      		movw r26,r24
 12872 5758 CB01      		movw r24,r22
 12873 575a 9C01      		movw r18,r24
 12874 575c AD01      		movw r20,r26
 12875 575e CE01      		movw r24,r28
 12876 5760 8396      		adiw r24,35
 12877 5762 BA01      		movw r22,r20
 12878 5764 A901      		movw r20,r18
 12879 5766 0E94 0000 		call formatnumber12
 12880 576a 8C01      		movw r16,r24
 12881 576c 2B81      		ldd r18,Y+3
 12882 576e 3C81      		ldd r19,Y+4
 12883 5770 8BAD      		ldd r24,Y+59
 12884 5772 9CAD      		ldd r25,Y+60
 12885 5774 B901      		movw r22,r18
 12886 5776 0E94 0000 		call get_row_name
 12887 577a AC01      		movw r20,r24
 12888 577c CE01      		movw r24,r28
 12889 577e C296      		adiw r24,50
 12890 5780 288D      		ldd r18,Y+24
 12891 5782 398D      		ldd r19,Y+25
 12892 5784 BA01      		movw r22,r20
 12893 5786 F901      		movw r30,r18
 12894 5788 0995      		icall
 12895 578a 212F      		mov r18,r17
 12896 578c 2F93      		push r18
 12897 578e 202F      		mov r18,r16
 12898 5790 2F93      		push r18
 12899 5792 292F      		mov r18,r25
 12900 5794 2F93      		push r18
 12901 5796 8F93      		push r24
 12902 5798 80E0      		ldi r24,lo8(.LC115)
 12903 579a 90E0      		ldi r25,hi8(.LC115)
 12904 579c 892F      		mov r24,r25
 12905 579e 8F93      		push r24
 12906 57a0 80E0      		ldi r24,lo8(.LC115)
 12907 57a2 90E0      		ldi r25,hi8(.LC115)
 12908 57a4 8F93      		push r24
 12909 57a6 CE01      		movw r24,r28
 12910 57a8 8F5B      		subi r24,-65
 12911 57aa 9F4F      		sbci r25,-1
 12912 57ac FC01      		movw r30,r24
 12913 57ae 2181      		ldd r18,Z+1
 12914 57b0 2F93      		push r18
 12915 57b2 FC01      		movw r30,r24
 12916 57b4 8081      		ld r24,Z
 12917 57b6 8F93      		push r24
 12918 57b8 CE01      		movw r24,r28
 12919 57ba 805C      		subi r24,-64
 12920 57bc 9F4F      		sbci r25,-1
 12921 57be FC01      		movw r30,r24
 12922 57c0 8081      		ld r24,Z
 12923 57c2 8F93      		push r24
 12924 57c4 8FAD      		ldd r24,Y+63
 12925 57c6 8F93      		push r24
 12926 57c8 0E94 0000 		call write_data
 12927 57cc 4DB7      		in r20,__SP_L__
 12928 57ce 5EB7      		in r21,__SP_H__
 12929 57d0 465F      		subi r20,-10
 12930 57d2 5F4F      		sbci r21,-1
 12931 57d4 0FB6      		in __tmp_reg__,__SREG__
 12932 57d6 F894      		cli
 12933 57d8 DEBF      		out __SP_H__,r29
 12934 57da 0FBE      		out __SREG__,__tmp_reg__
 12935 57dc CDBF      		out __SP_L__,r28
 12936               	.L450:
1394:lp_solve_5.5/lp_MPS.c ****         k = 1 - k;
 12937               		.loc 1 1394 0 is_stmt 1 discriminator 2
 12938 57de 8D81      		ldd r24,Y+5
 12939 57e0 9E81      		ldd r25,Y+6
 12940 57e2 0196      		adiw r24,1
 12941 57e4 9E83      		std Y+6,r25
 12942 57e6 8D83      		std Y+5,r24
 12943               	.L446:
1394:lp_solve_5.5/lp_MPS.c ****         k = 1 - k;
 12944               		.loc 1 1394 0 is_stmt 0 discriminator 1
 12945 57e8 2D81      		ldd r18,Y+5
 12946 57ea 3E81      		ldd r19,Y+6
 12947 57ec 8B8D      		ldd r24,Y+27
 12948 57ee 9C8D      		ldd r25,Y+28
 12949 57f0 2817      		cp r18,r24
 12950 57f2 3907      		cpc r19,r25
 12951 57f4 04F4      		brge .+2
 12952 57f6 00C0      		rjmp .L453
1410:lp_solve_5.5/lp_MPS.c **** /*                          formatnumber12(numberbuffer, (double) a)); */
1411:lp_solve_5.5/lp_MPS.c ****       }
1412:lp_solve_5.5/lp_MPS.c ****       if(k == 0)
 12953               		.loc 1 1412 0 is_stmt 1
 12954 57f8 8F81      		ldd r24,Y+7
 12955 57fa 9885      		ldd r25,Y+8
 12956 57fc 892B      		or r24,r25
 12957 57fe 01F4      		brne .L442
1413:lp_solve_5.5/lp_MPS.c ****         write_data(userhandle, write_modeldata, "\n");
 12958               		.loc 1 1413 0
 12959 5800 80E0      		ldi r24,lo8(.LC116)
 12960 5802 90E0      		ldi r25,hi8(.LC116)
 12961 5804 892F      		mov r24,r25
 12962 5806 8F93      		push r24
 12963 5808 80E0      		ldi r24,lo8(.LC116)
 12964 580a 90E0      		ldi r25,hi8(.LC116)
 12965 580c 8F93      		push r24
 12966 580e CE01      		movw r24,r28
 12967 5810 8F5B      		subi r24,-65
 12968 5812 9F4F      		sbci r25,-1
 12969 5814 FC01      		movw r30,r24
 12970 5816 2181      		ldd r18,Z+1
 12971 5818 2F93      		push r18
 12972 581a FC01      		movw r30,r24
 12973 581c 8081      		ld r24,Z
 12974 581e 8F93      		push r24
 12975 5820 CE01      		movw r24,r28
 12976 5822 805C      		subi r24,-64
 12977 5824 9F4F      		sbci r25,-1
 12978 5826 FC01      		movw r30,r24
 12979 5828 8081      		ld r24,Z
 12980 582a 8F93      		push r24
 12981 582c 8FAD      		ldd r24,Y+63
 12982 582e 8F93      		push r24
 12983 5830 0E94 0000 		call write_data
 12984 5834 0F90      		pop __tmp_reg__
 12985 5836 0F90      		pop __tmp_reg__
 12986 5838 0F90      		pop __tmp_reg__
 12987 583a 0F90      		pop __tmp_reg__
 12988 583c 0F90      		pop __tmp_reg__
 12989 583e 0F90      		pop __tmp_reg__
 12990               	.L442:
1379:lp_solve_5.5/lp_MPS.c ****     if(!is_splitvar(lp, i)) {
 12991               		.loc 1 1379 0 discriminator 2
 12992 5840 8981      		ldd r24,Y+1
 12993 5842 9A81      		ldd r25,Y+2
 12994 5844 0196      		adiw r24,1
 12995 5846 9A83      		std Y+2,r25
 12996 5848 8983      		std Y+1,r24
 12997               	.L441:
1379:lp_solve_5.5/lp_MPS.c ****     if(!is_splitvar(lp, i)) {
 12998               		.loc 1 1379 0 is_stmt 0 discriminator 1
 12999 584a 8BAD      		ldd r24,Y+59
 13000 584c 9CAD      		ldd r25,Y+60
 13001 584e 8451      		subi r24,20
 13002 5850 9E4F      		sbci r25,-2
 13003 5852 FC01      		movw r30,r24
 13004 5854 2081      		ld r18,Z
 13005 5856 3181      		ldd r19,Z+1
 13006 5858 8981      		ldd r24,Y+1
 13007 585a 9A81      		ldd r25,Y+2
 13008 585c 2817      		cp r18,r24
 13009 585e 3907      		cpc r19,r25
 13010 5860 04F0      		brlt .+2
 13011 5862 00C0      		rjmp .L454
1414:lp_solve_5.5/lp_MPS.c ****     }
1415:lp_solve_5.5/lp_MPS.c ****   }
1416:lp_solve_5.5/lp_MPS.c ****   if((marker % 2) == 1) {
 13012               		.loc 1 1416 0 is_stmt 1
 13013 5864 8985      		ldd r24,Y+9
 13014 5866 9A85      		ldd r25,Y+10
 13015 5868 8170      		andi r24,1
 13016 586a 9078      		andi r25,128
 13017 586c 9923      		tst r25
 13018 586e 04F4      		brge .L455
 13019 5870 0197      		sbiw r24,1
 13020 5872 8E6F      		ori r24,254
 13021 5874 9F6F      		ori r25,255
 13022 5876 0196      		adiw r24,1
 13023               	.L455:
 13024 5878 0197      		sbiw r24,1
 13025 587a 01F4      		brne .L456
1417:lp_solve_5.5/lp_MPS.c ****     write_data(userhandle, write_modeldata, "    MARK%04d  'MARKER'                 'INTEND'\n",
 13026               		.loc 1 1417 0
 13027 587c 8A85      		ldd r24,Y+10
 13028 587e 8F93      		push r24
 13029 5880 8985      		ldd r24,Y+9
 13030 5882 8F93      		push r24
 13031 5884 80E0      		ldi r24,lo8(.LC112)
 13032 5886 90E0      		ldi r25,hi8(.LC112)
 13033 5888 892F      		mov r24,r25
 13034 588a 8F93      		push r24
 13035 588c 80E0      		ldi r24,lo8(.LC112)
 13036 588e 90E0      		ldi r25,hi8(.LC112)
 13037 5890 8F93      		push r24
 13038 5892 CE01      		movw r24,r28
 13039 5894 8F5B      		subi r24,-65
 13040 5896 9F4F      		sbci r25,-1
 13041 5898 FC01      		movw r30,r24
 13042 589a 2181      		ldd r18,Z+1
 13043 589c 2F93      		push r18
 13044 589e FC01      		movw r30,r24
 13045 58a0 8081      		ld r24,Z
 13046 58a2 8F93      		push r24
 13047 58a4 CE01      		movw r24,r28
 13048 58a6 805C      		subi r24,-64
 13049 58a8 9F4F      		sbci r25,-1
 13050 58aa FC01      		movw r30,r24
 13051 58ac 8081      		ld r24,Z
 13052 58ae 8F93      		push r24
 13053 58b0 8FAD      		ldd r24,Y+63
 13054 58b2 8F93      		push r24
 13055 58b4 0E94 0000 		call write_data
 13056 58b8 4DB7      		in r20,__SP_L__
 13057 58ba 5EB7      		in r21,__SP_H__
 13058 58bc 485F      		subi r20,-8
 13059 58be 5F4F      		sbci r21,-1
 13060 58c0 0FB6      		in __tmp_reg__,__SREG__
 13061 58c2 F894      		cli
 13062 58c4 DEBF      		out __SP_H__,r29
 13063 58c6 0FBE      		out __SREG__,__tmp_reg__
 13064 58c8 CDBF      		out __SP_L__,r28
 13065               	.L456:
1418:lp_solve_5.5/lp_MPS.c ****             marker);
1419:lp_solve_5.5/lp_MPS.c ****   /* marker++; */ /* marker not used after this */
1420:lp_solve_5.5/lp_MPS.c ****   }
1421:lp_solve_5.5/lp_MPS.c ****   FREE(idx);
 13066               		.loc 1 1421 0
 13067 58ca 8F8D      		ldd r24,Y+31
 13068 58cc 98A1      		ldd r25,Y+32
 13069 58ce 892B      		or r24,r25
 13070 58d0 01F0      		breq .L457
 13071               		.loc 1 1421 0 is_stmt 0 discriminator 1
 13072 58d2 8F8D      		ldd r24,Y+31
 13073 58d4 98A1      		ldd r25,Y+32
 13074 58d6 0E94 0000 		call free
 13075 58da 18A2      		std Y+32,__zero_reg__
 13076 58dc 1F8E      		std Y+31,__zero_reg__
 13077               	.L457:
1422:lp_solve_5.5/lp_MPS.c ****   FREE(val);
 13078               		.loc 1 1422 0 is_stmt 1
 13079 58de 89A1      		ldd r24,Y+33
 13080 58e0 9AA1      		ldd r25,Y+34
 13081 58e2 892B      		or r24,r25
 13082 58e4 01F0      		breq .L458
 13083               		.loc 1 1422 0 is_stmt 0 discriminator 1
 13084 58e6 89A1      		ldd r24,Y+33
 13085 58e8 9AA1      		ldd r25,Y+34
 13086 58ea 0E94 0000 		call free
 13087 58ee 1AA2      		std Y+34,__zero_reg__
 13088 58f0 19A2      		std Y+33,__zero_reg__
 13089               	.L458:
1423:lp_solve_5.5/lp_MPS.c **** 
1424:lp_solve_5.5/lp_MPS.c ****   write_data(userhandle, write_modeldata, "RHS\n");
 13090               		.loc 1 1424 0 is_stmt 1
 13091 58f2 80E0      		ldi r24,lo8(.LC117)
 13092 58f4 90E0      		ldi r25,hi8(.LC117)
 13093 58f6 892F      		mov r24,r25
 13094 58f8 8F93      		push r24
 13095 58fa 80E0      		ldi r24,lo8(.LC117)
 13096 58fc 90E0      		ldi r25,hi8(.LC117)
 13097 58fe 8F93      		push r24
 13098 5900 CE01      		movw r24,r28
 13099 5902 8F5B      		subi r24,-65
 13100 5904 9F4F      		sbci r25,-1
 13101 5906 FC01      		movw r30,r24
 13102 5908 2181      		ldd r18,Z+1
 13103 590a 2F93      		push r18
 13104 590c FC01      		movw r30,r24
 13105 590e 8081      		ld r24,Z
 13106 5910 8F93      		push r24
 13107 5912 CE01      		movw r24,r28
 13108 5914 805C      		subi r24,-64
 13109 5916 9F4F      		sbci r25,-1
 13110 5918 FC01      		movw r30,r24
 13111 591a 8081      		ld r24,Z
 13112 591c 8F93      		push r24
 13113 591e 8FAD      		ldd r24,Y+63
 13114 5920 8F93      		push r24
 13115 5922 0E94 0000 		call write_data
 13116 5926 0F90      		pop __tmp_reg__
 13117 5928 0F90      		pop __tmp_reg__
 13118 592a 0F90      		pop __tmp_reg__
 13119 592c 0F90      		pop __tmp_reg__
 13120 592e 0F90      		pop __tmp_reg__
 13121 5930 0F90      		pop __tmp_reg__
1425:lp_solve_5.5/lp_MPS.c ****   for(k = 1, i = 0; i <= lp->rows; i++) {
 13122               		.loc 1 1425 0
 13123 5932 81E0      		ldi r24,lo8(1)
 13124 5934 90E0      		ldi r25,0
 13125 5936 9887      		std Y+8,r25
 13126 5938 8F83      		std Y+7,r24
 13127 593a 1A82      		std Y+2,__zero_reg__
 13128 593c 1982      		std Y+1,__zero_reg__
 13129 593e 00C0      		rjmp .L459
 13130               	.L469:
1426:lp_solve_5.5/lp_MPS.c ****     a = lp->orig_rhs[i];
 13131               		.loc 1 1426 0
 13132 5940 8BAD      		ldd r24,Y+59
 13133 5942 9CAD      		ldd r25,Y+60
 13134 5944 8A55      		subi r24,90
 13135 5946 9D4F      		sbci r25,-3
 13136 5948 FC01      		movw r30,r24
 13137 594a 2081      		ld r18,Z
 13138 594c 3181      		ldd r19,Z+1
 13139 594e 8981      		ldd r24,Y+1
 13140 5950 9A81      		ldd r25,Y+2
 13141 5952 880F      		lsl r24
 13142 5954 991F      		rol r25
 13143 5956 880F      		lsl r24
 13144 5958 991F      		rol r25
 13145 595a 820F      		add r24,r18
 13146 595c 931F      		adc r25,r19
 13147 595e FC01      		movw r30,r24
 13148 5960 8081      		ld r24,Z
 13149 5962 9181      		ldd r25,Z+1
 13150 5964 A281      		ldd r26,Z+2
 13151 5966 B381      		ldd r27,Z+3
 13152 5968 8A8B      		std Y+18,r24
 13153 596a 9B8B      		std Y+19,r25
 13154 596c AC8B      		std Y+20,r26
 13155 596e BD8B      		std Y+21,r27
1427:lp_solve_5.5/lp_MPS.c ****     if(a) {
 13156               		.loc 1 1427 0
 13157 5970 20E0      		ldi r18,0
 13158 5972 30E0      		ldi r19,0
 13159 5974 A901      		movw r20,r18
 13160 5976 6A89      		ldd r22,Y+18
 13161 5978 7B89      		ldd r23,Y+19
 13162 597a 8C89      		ldd r24,Y+20
 13163 597c 9D89      		ldd r25,Y+21
 13164 597e 0E94 0000 		call __nesf2
 13165 5982 8823      		tst r24
 13166 5984 01F4      		brne .+2
 13167 5986 00C0      		rjmp .L460
1428:lp_solve_5.5/lp_MPS.c ****       a = unscaled_value(lp, a, i);
 13168               		.loc 1 1428 0
 13169 5988 2981      		ldd r18,Y+1
 13170 598a 3A81      		ldd r19,Y+2
 13171 598c 8A89      		ldd r24,Y+18
 13172 598e 9B89      		ldd r25,Y+19
 13173 5990 AC89      		ldd r26,Y+20
 13174 5992 BD89      		ldd r27,Y+21
 13175 5994 EBAD      		ldd r30,Y+59
 13176 5996 FCAD      		ldd r31,Y+60
 13177 5998 AC01      		movw r20,r24
 13178 599a BD01      		movw r22,r26
 13179 599c CF01      		movw r24,r30
 13180 599e 0E94 0000 		call unscaled_value
 13181 59a2 DC01      		movw r26,r24
 13182 59a4 CB01      		movw r24,r22
 13183 59a6 8A8B      		std Y+18,r24
 13184 59a8 9B8B      		std Y+19,r25
 13185 59aa AC8B      		std Y+20,r26
 13186 59ac BD8B      		std Y+21,r27
1429:lp_solve_5.5/lp_MPS.c ****       if ((i == 0) && ((typeMPS & MPSNEGOBJCONST) == MPSNEGOBJCONST))
 13187               		.loc 1 1429 0
 13188 59ae 8981      		ldd r24,Y+1
 13189 59b0 9A81      		ldd r25,Y+2
 13190 59b2 892B      		or r24,r25
 13191 59b4 01F4      		brne .L462
 13192               		.loc 1 1429 0 is_stmt 0 discriminator 1
 13193 59b6 8DAD      		ldd r24,Y+61
 13194 59b8 9EAD      		ldd r25,Y+62
 13195 59ba 8870      		andi r24,8
 13196 59bc 9927      		clr r25
 13197 59be 892B      		or r24,r25
 13198 59c0 01F0      		breq .L462
1430:lp_solve_5.5/lp_MPS.c ****         a = -a;
 13199               		.loc 1 1430 0 is_stmt 1
 13200 59c2 8A89      		ldd r24,Y+18
 13201 59c4 9B89      		ldd r25,Y+19
 13202 59c6 AC89      		ldd r26,Y+20
 13203 59c8 BD89      		ldd r27,Y+21
 13204 59ca B058      		subi r27,0x80
 13205 59cc 8A8B      		std Y+18,r24
 13206 59ce 9B8B      		std Y+19,r25
 13207 59d0 AC8B      		std Y+20,r26
 13208 59d2 BD8B      		std Y+21,r27
 13209               	.L462:
1431:lp_solve_5.5/lp_MPS.c ****       if((i == 0) || is_chsign(lp, i))
 13210               		.loc 1 1431 0
 13211 59d4 8981      		ldd r24,Y+1
 13212 59d6 9A81      		ldd r25,Y+2
 13213 59d8 892B      		or r24,r25
 13214 59da 01F0      		breq .L463
 13215               		.loc 1 1431 0 is_stmt 0 discriminator 1
 13216 59dc 2981      		ldd r18,Y+1
 13217 59de 3A81      		ldd r19,Y+2
 13218 59e0 8BAD      		ldd r24,Y+59
 13219 59e2 9CAD      		ldd r25,Y+60
 13220 59e4 B901      		movw r22,r18
 13221 59e6 0E94 0000 		call is_chsign
 13222 59ea 8823      		tst r24
 13223 59ec 01F0      		breq .L464
 13224               	.L463:
1432:lp_solve_5.5/lp_MPS.c ****         a = my_flipsign(a);
 13225               		.loc 1 1432 0 is_stmt 1
 13226 59ee 20E0      		ldi r18,0
 13227 59f0 30E0      		ldi r19,0
 13228 59f2 A901      		movw r20,r18
 13229 59f4 6A89      		ldd r22,Y+18
 13230 59f6 7B89      		ldd r23,Y+19
 13231 59f8 8C89      		ldd r24,Y+20
 13232 59fa 9D89      		ldd r25,Y+21
 13233 59fc 0E94 0000 		call __nesf2
 13234 5a00 8823      		tst r24
 13235 5a02 01F0      		breq .L531
 13236               		.loc 1 1432 0 is_stmt 0 discriminator 1
 13237 5a04 8A89      		ldd r24,Y+18
 13238 5a06 9B89      		ldd r25,Y+19
 13239 5a08 AC89      		ldd r26,Y+20
 13240 5a0a BD89      		ldd r27,Y+21
 13241 5a0c B058      		subi r27,0x80
 13242 5a0e 00C0      		rjmp .L467
 13243               	.L531:
 13244               		.loc 1 1432 0 discriminator 2
 13245 5a10 80E0      		ldi r24,0
 13246 5a12 90E0      		ldi r25,0
 13247 5a14 DC01      		movw r26,r24
 13248               	.L467:
 13249               		.loc 1 1432 0 discriminator 4
 13250 5a16 8A8B      		std Y+18,r24
 13251 5a18 9B8B      		std Y+19,r25
 13252 5a1a AC8B      		std Y+20,r26
 13253 5a1c BD8B      		std Y+21,r27
 13254               	.L464:
1433:lp_solve_5.5/lp_MPS.c ****       k = 1 - k;
 13255               		.loc 1 1433 0 is_stmt 1
 13256 5a1e 21E0      		ldi r18,lo8(1)
 13257 5a20 30E0      		ldi r19,0
 13258 5a22 8F81      		ldd r24,Y+7
 13259 5a24 9885      		ldd r25,Y+8
 13260 5a26 A901      		movw r20,r18
 13261 5a28 481B      		sub r20,r24
 13262 5a2a 590B      		sbc r21,r25
 13263 5a2c CA01      		movw r24,r20
 13264 5a2e 9887      		std Y+8,r25
 13265 5a30 8F83      		std Y+7,r24
1434:lp_solve_5.5/lp_MPS.c ****       if(k == 0)
 13266               		.loc 1 1434 0
 13267 5a32 8F81      		ldd r24,Y+7
 13268 5a34 9885      		ldd r25,Y+8
 13269 5a36 892B      		or r24,r25
 13270 5a38 01F0      		breq .+2
 13271 5a3a 00C0      		rjmp .L468
1435:lp_solve_5.5/lp_MPS.c ****         write_data(userhandle, write_modeldata, "    RHS       %s  %s",
 13272               		.loc 1 1435 0
 13273 5a3c 8A89      		ldd r24,Y+18
 13274 5a3e 9B89      		ldd r25,Y+19
 13275 5a40 AC89      		ldd r26,Y+20
 13276 5a42 BD89      		ldd r27,Y+21
 13277 5a44 9E01      		movw r18,r28
 13278 5a46 2D5D      		subi r18,-35
 13279 5a48 3F4F      		sbci r19,-1
 13280 5a4a AC01      		movw r20,r24
 13281 5a4c BD01      		movw r22,r26
 13282 5a4e C901      		movw r24,r18
 13283 5a50 0E94 0000 		call formatnumber12
 13284 5a54 8C01      		movw r16,r24
 13285 5a56 2981      		ldd r18,Y+1
 13286 5a58 3A81      		ldd r19,Y+2
 13287 5a5a 8BAD      		ldd r24,Y+59
 13288 5a5c 9CAD      		ldd r25,Y+60
 13289 5a5e B901      		movw r22,r18
 13290 5a60 0E94 0000 		call get_row_name
 13291 5a64 AC01      		movw r20,r24
 13292 5a66 CE01      		movw r24,r28
 13293 5a68 C296      		adiw r24,50
 13294 5a6a 288D      		ldd r18,Y+24
 13295 5a6c 398D      		ldd r19,Y+25
 13296 5a6e BA01      		movw r22,r20
 13297 5a70 F901      		movw r30,r18
 13298 5a72 0995      		icall
 13299 5a74 212F      		mov r18,r17
 13300 5a76 2F93      		push r18
 13301 5a78 202F      		mov r18,r16
 13302 5a7a 2F93      		push r18
 13303 5a7c 292F      		mov r18,r25
 13304 5a7e 2F93      		push r18
 13305 5a80 8F93      		push r24
 13306 5a82 80E0      		ldi r24,lo8(.LC118)
 13307 5a84 90E0      		ldi r25,hi8(.LC118)
 13308 5a86 892F      		mov r24,r25
 13309 5a88 8F93      		push r24
 13310 5a8a 80E0      		ldi r24,lo8(.LC118)
 13311 5a8c 90E0      		ldi r25,hi8(.LC118)
 13312 5a8e 8F93      		push r24
 13313 5a90 CE01      		movw r24,r28
 13314 5a92 8F5B      		subi r24,-65
 13315 5a94 9F4F      		sbci r25,-1
 13316 5a96 FC01      		movw r30,r24
 13317 5a98 2181      		ldd r18,Z+1
 13318 5a9a 2F93      		push r18
 13319 5a9c FC01      		movw r30,r24
 13320 5a9e 8081      		ld r24,Z
 13321 5aa0 8F93      		push r24
 13322 5aa2 CE01      		movw r24,r28
 13323 5aa4 805C      		subi r24,-64
 13324 5aa6 9F4F      		sbci r25,-1
 13325 5aa8 FC01      		movw r30,r24
 13326 5aaa 8081      		ld r24,Z
 13327 5aac 8F93      		push r24
 13328 5aae 8FAD      		ldd r24,Y+63
 13329 5ab0 8F93      		push r24
 13330 5ab2 0E94 0000 		call write_data
 13331 5ab6 4DB7      		in r20,__SP_L__
 13332 5ab8 5EB7      		in r21,__SP_H__
 13333 5aba 465F      		subi r20,-10
 13334 5abc 5F4F      		sbci r21,-1
 13335 5abe 0FB6      		in __tmp_reg__,__SREG__
 13336 5ac0 F894      		cli
 13337 5ac2 DEBF      		out __SP_H__,r29
 13338 5ac4 0FBE      		out __SREG__,__tmp_reg__
 13339 5ac6 CDBF      		out __SP_L__,r28
 13340 5ac8 00C0      		rjmp .L460
 13341               	.L468:
1436:lp_solve_5.5/lp_MPS.c ****                         MPSname(name0, get_row_name(lp, i)),
1437:lp_solve_5.5/lp_MPS.c ****                         formatnumber12(numberbuffer, (double)a));
1438:lp_solve_5.5/lp_MPS.c ****       else
1439:lp_solve_5.5/lp_MPS.c ****         write_data(userhandle, write_modeldata, "   %s  %s\n",
 13342               		.loc 1 1439 0
 13343 5aca 8A89      		ldd r24,Y+18
 13344 5acc 9B89      		ldd r25,Y+19
 13345 5ace AC89      		ldd r26,Y+20
 13346 5ad0 BD89      		ldd r27,Y+21
 13347 5ad2 9E01      		movw r18,r28
 13348 5ad4 2D5D      		subi r18,-35
 13349 5ad6 3F4F      		sbci r19,-1
 13350 5ad8 AC01      		movw r20,r24
 13351 5ada BD01      		movw r22,r26
 13352 5adc C901      		movw r24,r18
 13353 5ade 0E94 0000 		call formatnumber12
 13354 5ae2 8C01      		movw r16,r24
 13355 5ae4 2981      		ldd r18,Y+1
 13356 5ae6 3A81      		ldd r19,Y+2
 13357 5ae8 8BAD      		ldd r24,Y+59
 13358 5aea 9CAD      		ldd r25,Y+60
 13359 5aec B901      		movw r22,r18
 13360 5aee 0E94 0000 		call get_row_name
 13361 5af2 AC01      		movw r20,r24
 13362 5af4 CE01      		movw r24,r28
 13363 5af6 C296      		adiw r24,50
 13364 5af8 288D      		ldd r18,Y+24
 13365 5afa 398D      		ldd r19,Y+25
 13366 5afc BA01      		movw r22,r20
 13367 5afe F901      		movw r30,r18
 13368 5b00 0995      		icall
 13369 5b02 212F      		mov r18,r17
 13370 5b04 2F93      		push r18
 13371 5b06 202F      		mov r18,r16
 13372 5b08 2F93      		push r18
 13373 5b0a 292F      		mov r18,r25
 13374 5b0c 2F93      		push r18
 13375 5b0e 8F93      		push r24
 13376 5b10 80E0      		ldi r24,lo8(.LC115)
 13377 5b12 90E0      		ldi r25,hi8(.LC115)
 13378 5b14 892F      		mov r24,r25
 13379 5b16 8F93      		push r24
 13380 5b18 80E0      		ldi r24,lo8(.LC115)
 13381 5b1a 90E0      		ldi r25,hi8(.LC115)
 13382 5b1c 8F93      		push r24
 13383 5b1e CE01      		movw r24,r28
 13384 5b20 8F5B      		subi r24,-65
 13385 5b22 9F4F      		sbci r25,-1
 13386 5b24 FC01      		movw r30,r24
 13387 5b26 2181      		ldd r18,Z+1
 13388 5b28 2F93      		push r18
 13389 5b2a FC01      		movw r30,r24
 13390 5b2c 8081      		ld r24,Z
 13391 5b2e 8F93      		push r24
 13392 5b30 CE01      		movw r24,r28
 13393 5b32 805C      		subi r24,-64
 13394 5b34 9F4F      		sbci r25,-1
 13395 5b36 FC01      		movw r30,r24
 13396 5b38 8081      		ld r24,Z
 13397 5b3a 8F93      		push r24
 13398 5b3c 8FAD      		ldd r24,Y+63
 13399 5b3e 8F93      		push r24
 13400 5b40 0E94 0000 		call write_data
 13401 5b44 4DB7      		in r20,__SP_L__
 13402 5b46 5EB7      		in r21,__SP_H__
 13403 5b48 465F      		subi r20,-10
 13404 5b4a 5F4F      		sbci r21,-1
 13405 5b4c 0FB6      		in __tmp_reg__,__SREG__
 13406 5b4e F894      		cli
 13407 5b50 DEBF      		out __SP_H__,r29
 13408 5b52 0FBE      		out __SREG__,__tmp_reg__
 13409 5b54 CDBF      		out __SP_L__,r28
 13410               	.L460:
1425:lp_solve_5.5/lp_MPS.c ****     a = lp->orig_rhs[i];
 13411               		.loc 1 1425 0 discriminator 2
 13412 5b56 8981      		ldd r24,Y+1
 13413 5b58 9A81      		ldd r25,Y+2
 13414 5b5a 0196      		adiw r24,1
 13415 5b5c 9A83      		std Y+2,r25
 13416 5b5e 8983      		std Y+1,r24
 13417               	.L459:
1425:lp_solve_5.5/lp_MPS.c ****     a = lp->orig_rhs[i];
 13418               		.loc 1 1425 0 is_stmt 0 discriminator 1
 13419 5b60 8BAD      		ldd r24,Y+59
 13420 5b62 9CAD      		ldd r25,Y+60
 13421 5b64 8651      		subi r24,22
 13422 5b66 9E4F      		sbci r25,-2
 13423 5b68 FC01      		movw r30,r24
 13424 5b6a 2081      		ld r18,Z
 13425 5b6c 3181      		ldd r19,Z+1
 13426 5b6e 8981      		ldd r24,Y+1
 13427 5b70 9A81      		ldd r25,Y+2
 13428 5b72 2817      		cp r18,r24
 13429 5b74 3907      		cpc r19,r25
 13430 5b76 04F0      		brlt .+2
 13431 5b78 00C0      		rjmp .L469
1440:lp_solve_5.5/lp_MPS.c ****                         MPSname(name0, get_row_name(lp, i)),
1441:lp_solve_5.5/lp_MPS.c ****                         formatnumber12(numberbuffer, (double)a));
1442:lp_solve_5.5/lp_MPS.c ****     }
1443:lp_solve_5.5/lp_MPS.c ****   }
1444:lp_solve_5.5/lp_MPS.c ****   if(k == 0)
 13432               		.loc 1 1444 0 is_stmt 1
 13433 5b7a 8F81      		ldd r24,Y+7
 13434 5b7c 9885      		ldd r25,Y+8
 13435 5b7e 892B      		or r24,r25
 13436 5b80 01F4      		brne .L470
1445:lp_solve_5.5/lp_MPS.c ****     write_data(userhandle, write_modeldata, "\n");
 13437               		.loc 1 1445 0
 13438 5b82 80E0      		ldi r24,lo8(.LC116)
 13439 5b84 90E0      		ldi r25,hi8(.LC116)
 13440 5b86 892F      		mov r24,r25
 13441 5b88 8F93      		push r24
 13442 5b8a 80E0      		ldi r24,lo8(.LC116)
 13443 5b8c 90E0      		ldi r25,hi8(.LC116)
 13444 5b8e 8F93      		push r24
 13445 5b90 CE01      		movw r24,r28
 13446 5b92 8F5B      		subi r24,-65
 13447 5b94 9F4F      		sbci r25,-1
 13448 5b96 FC01      		movw r30,r24
 13449 5b98 2181      		ldd r18,Z+1
 13450 5b9a 2F93      		push r18
 13451 5b9c FC01      		movw r30,r24
 13452 5b9e 8081      		ld r24,Z
 13453 5ba0 8F93      		push r24
 13454 5ba2 CE01      		movw r24,r28
 13455 5ba4 805C      		subi r24,-64
 13456 5ba6 9F4F      		sbci r25,-1
 13457 5ba8 FC01      		movw r30,r24
 13458 5baa 8081      		ld r24,Z
 13459 5bac 8F93      		push r24
 13460 5bae 8FAD      		ldd r24,Y+63
 13461 5bb0 8F93      		push r24
 13462 5bb2 0E94 0000 		call write_data
 13463 5bb6 0F90      		pop __tmp_reg__
 13464 5bb8 0F90      		pop __tmp_reg__
 13465 5bba 0F90      		pop __tmp_reg__
 13466 5bbc 0F90      		pop __tmp_reg__
 13467 5bbe 0F90      		pop __tmp_reg__
 13468 5bc0 0F90      		pop __tmp_reg__
 13469               	.L470:
1446:lp_solve_5.5/lp_MPS.c **** 
1447:lp_solve_5.5/lp_MPS.c ****   putheader = TRUE;
 13470               		.loc 1 1447 0
 13471 5bc2 81E0      		ldi r24,lo8(1)
 13472 5bc4 90E0      		ldi r25,0
 13473 5bc6 9C87      		std Y+12,r25
 13474 5bc8 8B87      		std Y+11,r24
1448:lp_solve_5.5/lp_MPS.c ****   for(k = 1, i = 1; i <= lp->rows; i++){
 13475               		.loc 1 1448 0
 13476 5bca 81E0      		ldi r24,lo8(1)
 13477 5bcc 90E0      		ldi r25,0
 13478 5bce 9887      		std Y+8,r25
 13479 5bd0 8F83      		std Y+7,r24
 13480 5bd2 81E0      		ldi r24,lo8(1)
 13481 5bd4 90E0      		ldi r25,0
 13482 5bd6 9A83      		std Y+2,r25
 13483 5bd8 8983      		std Y+1,r24
 13484 5bda 00C0      		rjmp .L471
 13485               	.L479:
1449:lp_solve_5.5/lp_MPS.c ****     a = 0;
 13486               		.loc 1 1449 0
 13487 5bdc 1A8A      		std Y+18,__zero_reg__
 13488 5bde 1B8A      		std Y+19,__zero_reg__
 13489 5be0 1C8A      		std Y+20,__zero_reg__
 13490 5be2 1D8A      		std Y+21,__zero_reg__
1450:lp_solve_5.5/lp_MPS.c ****     if((lp->orig_upbo[i] < lp->infinite) && (lp->orig_upbo[i] != 0.0))
 13491               		.loc 1 1450 0
 13492 5be4 8BAD      		ldd r24,Y+59
 13493 5be6 9CAD      		ldd r25,Y+60
 13494 5be8 8255      		subi r24,82
 13495 5bea 9D4F      		sbci r25,-3
 13496 5bec FC01      		movw r30,r24
 13497 5bee 2081      		ld r18,Z
 13498 5bf0 3181      		ldd r19,Z+1
 13499 5bf2 8981      		ldd r24,Y+1
 13500 5bf4 9A81      		ldd r25,Y+2
 13501 5bf6 880F      		lsl r24
 13502 5bf8 991F      		rol r25
 13503 5bfa 880F      		lsl r24
 13504 5bfc 991F      		rol r25
 13505 5bfe 820F      		add r24,r18
 13506 5c00 931F      		adc r25,r19
 13507 5c02 FC01      		movw r30,r24
 13508 5c04 8081      		ld r24,Z
 13509 5c06 9181      		ldd r25,Z+1
 13510 5c08 A281      		ldd r26,Z+2
 13511 5c0a B381      		ldd r27,Z+3
 13512 5c0c 2BAD      		ldd r18,Y+59
 13513 5c0e 3CAD      		ldd r19,Y+60
 13514 5c10 265F      		subi r18,-10
 13515 5c12 3C4F      		sbci r19,-4
 13516 5c14 F901      		movw r30,r18
 13517 5c16 2081      		ld r18,Z
 13518 5c18 3181      		ldd r19,Z+1
 13519 5c1a 4281      		ldd r20,Z+2
 13520 5c1c 5381      		ldd r21,Z+3
 13521 5c1e BC01      		movw r22,r24
 13522 5c20 CD01      		movw r24,r26
 13523 5c22 0E94 0000 		call __ltsf2
 13524 5c26 8823      		tst r24
 13525 5c28 04F4      		brge .L472
 13526               		.loc 1 1450 0 is_stmt 0 discriminator 1
 13527 5c2a 8BAD      		ldd r24,Y+59
 13528 5c2c 9CAD      		ldd r25,Y+60
 13529 5c2e 8255      		subi r24,82
 13530 5c30 9D4F      		sbci r25,-3
 13531 5c32 FC01      		movw r30,r24
 13532 5c34 2081      		ld r18,Z
 13533 5c36 3181      		ldd r19,Z+1
 13534 5c38 8981      		ldd r24,Y+1
 13535 5c3a 9A81      		ldd r25,Y+2
 13536 5c3c 880F      		lsl r24
 13537 5c3e 991F      		rol r25
 13538 5c40 880F      		lsl r24
 13539 5c42 991F      		rol r25
 13540 5c44 820F      		add r24,r18
 13541 5c46 931F      		adc r25,r19
 13542 5c48 FC01      		movw r30,r24
 13543 5c4a 8081      		ld r24,Z
 13544 5c4c 9181      		ldd r25,Z+1
 13545 5c4e A281      		ldd r26,Z+2
 13546 5c50 B381      		ldd r27,Z+3
 13547 5c52 20E0      		ldi r18,0
 13548 5c54 30E0      		ldi r19,0
 13549 5c56 A901      		movw r20,r18
 13550 5c58 BC01      		movw r22,r24
 13551 5c5a CD01      		movw r24,r26
 13552 5c5c 0E94 0000 		call __nesf2
 13553 5c60 8823      		tst r24
 13554 5c62 01F0      		breq .L472
1451:lp_solve_5.5/lp_MPS.c ****       a = lp->orig_upbo[i];
 13555               		.loc 1 1451 0 is_stmt 1
 13556 5c64 8BAD      		ldd r24,Y+59
 13557 5c66 9CAD      		ldd r25,Y+60
 13558 5c68 8255      		subi r24,82
 13559 5c6a 9D4F      		sbci r25,-3
 13560 5c6c FC01      		movw r30,r24
 13561 5c6e 2081      		ld r18,Z
 13562 5c70 3181      		ldd r19,Z+1
 13563 5c72 8981      		ldd r24,Y+1
 13564 5c74 9A81      		ldd r25,Y+2
 13565 5c76 880F      		lsl r24
 13566 5c78 991F      		rol r25
 13567 5c7a 880F      		lsl r24
 13568 5c7c 991F      		rol r25
 13569 5c7e 820F      		add r24,r18
 13570 5c80 931F      		adc r25,r19
 13571 5c82 FC01      		movw r30,r24
 13572 5c84 8081      		ld r24,Z
 13573 5c86 9181      		ldd r25,Z+1
 13574 5c88 A281      		ldd r26,Z+2
 13575 5c8a B381      		ldd r27,Z+3
 13576 5c8c 8A8B      		std Y+18,r24
 13577 5c8e 9B8B      		std Y+19,r25
 13578 5c90 AC8B      		std Y+20,r26
 13579 5c92 BD8B      		std Y+21,r27
 13580               	.L472:
1452:lp_solve_5.5/lp_MPS.c ****     if(a) {
 13581               		.loc 1 1452 0
 13582 5c94 20E0      		ldi r18,0
 13583 5c96 30E0      		ldi r19,0
 13584 5c98 A901      		movw r20,r18
 13585 5c9a 6A89      		ldd r22,Y+18
 13586 5c9c 7B89      		ldd r23,Y+19
 13587 5c9e 8C89      		ldd r24,Y+20
 13588 5ca0 9D89      		ldd r25,Y+21
 13589 5ca2 0E94 0000 		call __nesf2
 13590 5ca6 8823      		tst r24
 13591 5ca8 01F4      		brne .+2
 13592 5caa 00C0      		rjmp .L475
1453:lp_solve_5.5/lp_MPS.c ****       if(putheader) {
 13593               		.loc 1 1453 0
 13594 5cac 8B85      		ldd r24,Y+11
 13595 5cae 9C85      		ldd r25,Y+12
 13596 5cb0 892B      		or r24,r25
 13597 5cb2 01F0      		breq .L477
1454:lp_solve_5.5/lp_MPS.c ****         write_data(userhandle, write_modeldata, "RANGES\n");
 13598               		.loc 1 1454 0
 13599 5cb4 80E0      		ldi r24,lo8(.LC119)
 13600 5cb6 90E0      		ldi r25,hi8(.LC119)
 13601 5cb8 892F      		mov r24,r25
 13602 5cba 8F93      		push r24
 13603 5cbc 80E0      		ldi r24,lo8(.LC119)
 13604 5cbe 90E0      		ldi r25,hi8(.LC119)
 13605 5cc0 8F93      		push r24
 13606 5cc2 CE01      		movw r24,r28
 13607 5cc4 8F5B      		subi r24,-65
 13608 5cc6 9F4F      		sbci r25,-1
 13609 5cc8 FC01      		movw r30,r24
 13610 5cca 2181      		ldd r18,Z+1
 13611 5ccc 2F93      		push r18
 13612 5cce FC01      		movw r30,r24
 13613 5cd0 8081      		ld r24,Z
 13614 5cd2 8F93      		push r24
 13615 5cd4 CE01      		movw r24,r28
 13616 5cd6 805C      		subi r24,-64
 13617 5cd8 9F4F      		sbci r25,-1
 13618 5cda FC01      		movw r30,r24
 13619 5cdc 8081      		ld r24,Z
 13620 5cde 8F93      		push r24
 13621 5ce0 8FAD      		ldd r24,Y+63
 13622 5ce2 8F93      		push r24
 13623 5ce4 0E94 0000 		call write_data
 13624 5ce8 0F90      		pop __tmp_reg__
 13625 5cea 0F90      		pop __tmp_reg__
 13626 5cec 0F90      		pop __tmp_reg__
 13627 5cee 0F90      		pop __tmp_reg__
 13628 5cf0 0F90      		pop __tmp_reg__
 13629 5cf2 0F90      		pop __tmp_reg__
1455:lp_solve_5.5/lp_MPS.c ****         putheader = FALSE;
 13630               		.loc 1 1455 0
 13631 5cf4 1C86      		std Y+12,__zero_reg__
 13632 5cf6 1B86      		std Y+11,__zero_reg__
 13633               	.L477:
1456:lp_solve_5.5/lp_MPS.c ****       }
1457:lp_solve_5.5/lp_MPS.c ****       a = unscaled_value(lp, a, i);
 13634               		.loc 1 1457 0
 13635 5cf8 2981      		ldd r18,Y+1
 13636 5cfa 3A81      		ldd r19,Y+2
 13637 5cfc 8A89      		ldd r24,Y+18
 13638 5cfe 9B89      		ldd r25,Y+19
 13639 5d00 AC89      		ldd r26,Y+20
 13640 5d02 BD89      		ldd r27,Y+21
 13641 5d04 EBAD      		ldd r30,Y+59
 13642 5d06 FCAD      		ldd r31,Y+60
 13643 5d08 AC01      		movw r20,r24
 13644 5d0a BD01      		movw r22,r26
 13645 5d0c CF01      		movw r24,r30
 13646 5d0e 0E94 0000 		call unscaled_value
 13647 5d12 DC01      		movw r26,r24
 13648 5d14 CB01      		movw r24,r22
 13649 5d16 8A8B      		std Y+18,r24
 13650 5d18 9B8B      		std Y+19,r25
 13651 5d1a AC8B      		std Y+20,r26
 13652 5d1c BD8B      		std Y+21,r27
1458:lp_solve_5.5/lp_MPS.c ****       k = 1 - k;
 13653               		.loc 1 1458 0
 13654 5d1e 21E0      		ldi r18,lo8(1)
 13655 5d20 30E0      		ldi r19,0
 13656 5d22 8F81      		ldd r24,Y+7
 13657 5d24 9885      		ldd r25,Y+8
 13658 5d26 A901      		movw r20,r18
 13659 5d28 481B      		sub r20,r24
 13660 5d2a 590B      		sbc r21,r25
 13661 5d2c CA01      		movw r24,r20
 13662 5d2e 9887      		std Y+8,r25
 13663 5d30 8F83      		std Y+7,r24
1459:lp_solve_5.5/lp_MPS.c ****       if(k == 0)
 13664               		.loc 1 1459 0
 13665 5d32 8F81      		ldd r24,Y+7
 13666 5d34 9885      		ldd r25,Y+8
 13667 5d36 892B      		or r24,r25
 13668 5d38 01F0      		breq .+2
 13669 5d3a 00C0      		rjmp .L478
1460:lp_solve_5.5/lp_MPS.c ****         write_data(userhandle, write_modeldata, "    RGS       %s  %s",
 13670               		.loc 1 1460 0
 13671 5d3c 8A89      		ldd r24,Y+18
 13672 5d3e 9B89      		ldd r25,Y+19
 13673 5d40 AC89      		ldd r26,Y+20
 13674 5d42 BD89      		ldd r27,Y+21
 13675 5d44 9E01      		movw r18,r28
 13676 5d46 2D5D      		subi r18,-35
 13677 5d48 3F4F      		sbci r19,-1
 13678 5d4a AC01      		movw r20,r24
 13679 5d4c BD01      		movw r22,r26
 13680 5d4e C901      		movw r24,r18
 13681 5d50 0E94 0000 		call formatnumber12
 13682 5d54 8C01      		movw r16,r24
 13683 5d56 2981      		ldd r18,Y+1
 13684 5d58 3A81      		ldd r19,Y+2
 13685 5d5a 8BAD      		ldd r24,Y+59
 13686 5d5c 9CAD      		ldd r25,Y+60
 13687 5d5e B901      		movw r22,r18
 13688 5d60 0E94 0000 		call get_row_name
 13689 5d64 AC01      		movw r20,r24
 13690 5d66 CE01      		movw r24,r28
 13691 5d68 C296      		adiw r24,50
 13692 5d6a 288D      		ldd r18,Y+24
 13693 5d6c 398D      		ldd r19,Y+25
 13694 5d6e BA01      		movw r22,r20
 13695 5d70 F901      		movw r30,r18
 13696 5d72 0995      		icall
 13697 5d74 212F      		mov r18,r17
 13698 5d76 2F93      		push r18
 13699 5d78 202F      		mov r18,r16
 13700 5d7a 2F93      		push r18
 13701 5d7c 292F      		mov r18,r25
 13702 5d7e 2F93      		push r18
 13703 5d80 8F93      		push r24
 13704 5d82 80E0      		ldi r24,lo8(.LC120)
 13705 5d84 90E0      		ldi r25,hi8(.LC120)
 13706 5d86 892F      		mov r24,r25
 13707 5d88 8F93      		push r24
 13708 5d8a 80E0      		ldi r24,lo8(.LC120)
 13709 5d8c 90E0      		ldi r25,hi8(.LC120)
 13710 5d8e 8F93      		push r24
 13711 5d90 CE01      		movw r24,r28
 13712 5d92 8F5B      		subi r24,-65
 13713 5d94 9F4F      		sbci r25,-1
 13714 5d96 FC01      		movw r30,r24
 13715 5d98 2181      		ldd r18,Z+1
 13716 5d9a 2F93      		push r18
 13717 5d9c FC01      		movw r30,r24
 13718 5d9e 8081      		ld r24,Z
 13719 5da0 8F93      		push r24
 13720 5da2 CE01      		movw r24,r28
 13721 5da4 805C      		subi r24,-64
 13722 5da6 9F4F      		sbci r25,-1
 13723 5da8 FC01      		movw r30,r24
 13724 5daa 8081      		ld r24,Z
 13725 5dac 8F93      		push r24
 13726 5dae 8FAD      		ldd r24,Y+63
 13727 5db0 8F93      		push r24
 13728 5db2 0E94 0000 		call write_data
 13729 5db6 4DB7      		in r20,__SP_L__
 13730 5db8 5EB7      		in r21,__SP_H__
 13731 5dba 465F      		subi r20,-10
 13732 5dbc 5F4F      		sbci r21,-1
 13733 5dbe 0FB6      		in __tmp_reg__,__SREG__
 13734 5dc0 F894      		cli
 13735 5dc2 DEBF      		out __SP_H__,r29
 13736 5dc4 0FBE      		out __SREG__,__tmp_reg__
 13737 5dc6 CDBF      		out __SP_L__,r28
 13738 5dc8 00C0      		rjmp .L475
 13739               	.L478:
1461:lp_solve_5.5/lp_MPS.c ****                         MPSname(name0, get_row_name(lp, i)),
1462:lp_solve_5.5/lp_MPS.c ****                         formatnumber12(numberbuffer, (double)a));
1463:lp_solve_5.5/lp_MPS.c ****       else
1464:lp_solve_5.5/lp_MPS.c ****         write_data(userhandle, write_modeldata, "   %s  %s\n",
 13740               		.loc 1 1464 0
 13741 5dca 8A89      		ldd r24,Y+18
 13742 5dcc 9B89      		ldd r25,Y+19
 13743 5dce AC89      		ldd r26,Y+20
 13744 5dd0 BD89      		ldd r27,Y+21
 13745 5dd2 9E01      		movw r18,r28
 13746 5dd4 2D5D      		subi r18,-35
 13747 5dd6 3F4F      		sbci r19,-1
 13748 5dd8 AC01      		movw r20,r24
 13749 5dda BD01      		movw r22,r26
 13750 5ddc C901      		movw r24,r18
 13751 5dde 0E94 0000 		call formatnumber12
 13752 5de2 8C01      		movw r16,r24
 13753 5de4 2981      		ldd r18,Y+1
 13754 5de6 3A81      		ldd r19,Y+2
 13755 5de8 8BAD      		ldd r24,Y+59
 13756 5dea 9CAD      		ldd r25,Y+60
 13757 5dec B901      		movw r22,r18
 13758 5dee 0E94 0000 		call get_row_name
 13759 5df2 AC01      		movw r20,r24
 13760 5df4 CE01      		movw r24,r28
 13761 5df6 C296      		adiw r24,50
 13762 5df8 288D      		ldd r18,Y+24
 13763 5dfa 398D      		ldd r19,Y+25
 13764 5dfc BA01      		movw r22,r20
 13765 5dfe F901      		movw r30,r18
 13766 5e00 0995      		icall
 13767 5e02 212F      		mov r18,r17
 13768 5e04 2F93      		push r18
 13769 5e06 202F      		mov r18,r16
 13770 5e08 2F93      		push r18
 13771 5e0a 292F      		mov r18,r25
 13772 5e0c 2F93      		push r18
 13773 5e0e 8F93      		push r24
 13774 5e10 80E0      		ldi r24,lo8(.LC115)
 13775 5e12 90E0      		ldi r25,hi8(.LC115)
 13776 5e14 892F      		mov r24,r25
 13777 5e16 8F93      		push r24
 13778 5e18 80E0      		ldi r24,lo8(.LC115)
 13779 5e1a 90E0      		ldi r25,hi8(.LC115)
 13780 5e1c 8F93      		push r24
 13781 5e1e CE01      		movw r24,r28
 13782 5e20 8F5B      		subi r24,-65
 13783 5e22 9F4F      		sbci r25,-1
 13784 5e24 FC01      		movw r30,r24
 13785 5e26 2181      		ldd r18,Z+1
 13786 5e28 2F93      		push r18
 13787 5e2a FC01      		movw r30,r24
 13788 5e2c 8081      		ld r24,Z
 13789 5e2e 8F93      		push r24
 13790 5e30 CE01      		movw r24,r28
 13791 5e32 805C      		subi r24,-64
 13792 5e34 9F4F      		sbci r25,-1
 13793 5e36 FC01      		movw r30,r24
 13794 5e38 8081      		ld r24,Z
 13795 5e3a 8F93      		push r24
 13796 5e3c 8FAD      		ldd r24,Y+63
 13797 5e3e 8F93      		push r24
 13798 5e40 0E94 0000 		call write_data
 13799 5e44 4DB7      		in r20,__SP_L__
 13800 5e46 5EB7      		in r21,__SP_H__
 13801 5e48 465F      		subi r20,-10
 13802 5e4a 5F4F      		sbci r21,-1
 13803 5e4c 0FB6      		in __tmp_reg__,__SREG__
 13804 5e4e F894      		cli
 13805 5e50 DEBF      		out __SP_H__,r29
 13806 5e52 0FBE      		out __SREG__,__tmp_reg__
 13807 5e54 CDBF      		out __SP_L__,r28
 13808               	.L475:
1448:lp_solve_5.5/lp_MPS.c ****     a = 0;
 13809               		.loc 1 1448 0 discriminator 2
 13810 5e56 8981      		ldd r24,Y+1
 13811 5e58 9A81      		ldd r25,Y+2
 13812 5e5a 0196      		adiw r24,1
 13813 5e5c 9A83      		std Y+2,r25
 13814 5e5e 8983      		std Y+1,r24
 13815               	.L471:
1448:lp_solve_5.5/lp_MPS.c ****     a = 0;
 13816               		.loc 1 1448 0 is_stmt 0 discriminator 1
 13817 5e60 8BAD      		ldd r24,Y+59
 13818 5e62 9CAD      		ldd r25,Y+60
 13819 5e64 8651      		subi r24,22
 13820 5e66 9E4F      		sbci r25,-2
 13821 5e68 FC01      		movw r30,r24
 13822 5e6a 2081      		ld r18,Z
 13823 5e6c 3181      		ldd r19,Z+1
 13824 5e6e 8981      		ldd r24,Y+1
 13825 5e70 9A81      		ldd r25,Y+2
 13826 5e72 2817      		cp r18,r24
 13827 5e74 3907      		cpc r19,r25
 13828 5e76 04F0      		brlt .+2
 13829 5e78 00C0      		rjmp .L479
1465:lp_solve_5.5/lp_MPS.c ****                         MPSname(name0, get_row_name(lp, i)),
1466:lp_solve_5.5/lp_MPS.c ****                         formatnumber12(numberbuffer, (double)a));
1467:lp_solve_5.5/lp_MPS.c ****     }
1468:lp_solve_5.5/lp_MPS.c ****   }
1469:lp_solve_5.5/lp_MPS.c ****   if(k == 0)
 13830               		.loc 1 1469 0 is_stmt 1
 13831 5e7a 8F81      		ldd r24,Y+7
 13832 5e7c 9885      		ldd r25,Y+8
 13833 5e7e 892B      		or r24,r25
 13834 5e80 01F4      		brne .L480
1470:lp_solve_5.5/lp_MPS.c ****     write_data(userhandle, write_modeldata, "\n");
 13835               		.loc 1 1470 0
 13836 5e82 80E0      		ldi r24,lo8(.LC116)
 13837 5e84 90E0      		ldi r25,hi8(.LC116)
 13838 5e86 892F      		mov r24,r25
 13839 5e88 8F93      		push r24
 13840 5e8a 80E0      		ldi r24,lo8(.LC116)
 13841 5e8c 90E0      		ldi r25,hi8(.LC116)
 13842 5e8e 8F93      		push r24
 13843 5e90 CE01      		movw r24,r28
 13844 5e92 8F5B      		subi r24,-65
 13845 5e94 9F4F      		sbci r25,-1
 13846 5e96 FC01      		movw r30,r24
 13847 5e98 2181      		ldd r18,Z+1
 13848 5e9a 2F93      		push r18
 13849 5e9c FC01      		movw r30,r24
 13850 5e9e 8081      		ld r24,Z
 13851 5ea0 8F93      		push r24
 13852 5ea2 CE01      		movw r24,r28
 13853 5ea4 805C      		subi r24,-64
 13854 5ea6 9F4F      		sbci r25,-1
 13855 5ea8 FC01      		movw r30,r24
 13856 5eaa 8081      		ld r24,Z
 13857 5eac 8F93      		push r24
 13858 5eae 8FAD      		ldd r24,Y+63
 13859 5eb0 8F93      		push r24
 13860 5eb2 0E94 0000 		call write_data
 13861 5eb6 0F90      		pop __tmp_reg__
 13862 5eb8 0F90      		pop __tmp_reg__
 13863 5eba 0F90      		pop __tmp_reg__
 13864 5ebc 0F90      		pop __tmp_reg__
 13865 5ebe 0F90      		pop __tmp_reg__
 13866 5ec0 0F90      		pop __tmp_reg__
 13867               	.L480:
1471:lp_solve_5.5/lp_MPS.c **** 
1472:lp_solve_5.5/lp_MPS.c ****   putheader = TRUE;
 13868               		.loc 1 1472 0
 13869 5ec2 81E0      		ldi r24,lo8(1)
 13870 5ec4 90E0      		ldi r25,0
 13871 5ec6 9C87      		std Y+12,r25
 13872 5ec8 8B87      		std Y+11,r24
1473:lp_solve_5.5/lp_MPS.c ****   for(i = lp->rows + 1; i <= lp->sum; i++)
 13873               		.loc 1 1473 0
 13874 5eca 8BAD      		ldd r24,Y+59
 13875 5ecc 9CAD      		ldd r25,Y+60
 13876 5ece 8651      		subi r24,22
 13877 5ed0 9E4F      		sbci r25,-2
 13878 5ed2 FC01      		movw r30,r24
 13879 5ed4 8081      		ld r24,Z
 13880 5ed6 9181      		ldd r25,Z+1
 13881 5ed8 0196      		adiw r24,1
 13882 5eda 9A83      		std Y+2,r25
 13883 5edc 8983      		std Y+1,r24
 13884 5ede 00C0      		rjmp .L481
 13885               	.L510:
1474:lp_solve_5.5/lp_MPS.c ****     if(!is_splitvar(lp, i - lp->rows)) {
 13886               		.loc 1 1474 0
 13887 5ee0 8BAD      		ldd r24,Y+59
 13888 5ee2 9CAD      		ldd r25,Y+60
 13889 5ee4 8651      		subi r24,22
 13890 5ee6 9E4F      		sbci r25,-2
 13891 5ee8 FC01      		movw r30,r24
 13892 5eea 8081      		ld r24,Z
 13893 5eec 9181      		ldd r25,Z+1
 13894 5eee 2981      		ldd r18,Y+1
 13895 5ef0 3A81      		ldd r19,Y+2
 13896 5ef2 281B      		sub r18,r24
 13897 5ef4 390B      		sbc r19,r25
 13898 5ef6 8BAD      		ldd r24,Y+59
 13899 5ef8 9CAD      		ldd r25,Y+60
 13900 5efa B901      		movw r22,r18
 13901 5efc 0E94 0000 		call is_splitvar
 13902 5f00 8823      		tst r24
 13903 5f02 01F0      		breq .+2
 13904 5f04 00C0      		rjmp .L482
1475:lp_solve_5.5/lp_MPS.c ****       j = i - lp->rows;
 13905               		.loc 1 1475 0
 13906 5f06 8BAD      		ldd r24,Y+59
 13907 5f08 9CAD      		ldd r25,Y+60
 13908 5f0a 8651      		subi r24,22
 13909 5f0c 9E4F      		sbci r25,-2
 13910 5f0e FC01      		movw r30,r24
 13911 5f10 8081      		ld r24,Z
 13912 5f12 9181      		ldd r25,Z+1
 13913 5f14 2981      		ldd r18,Y+1
 13914 5f16 3A81      		ldd r19,Y+2
 13915 5f18 A901      		movw r20,r18
 13916 5f1a 481B      		sub r20,r24
 13917 5f1c 590B      		sbc r21,r25
 13918 5f1e CA01      		movw r24,r20
 13919 5f20 9C83      		std Y+4,r25
 13920 5f22 8B83      		std Y+3,r24
1476:lp_solve_5.5/lp_MPS.c ****       if((lp->orig_lowbo[i] != 0) && (lp->orig_upbo[i] < lp->infinite) &&
 13921               		.loc 1 1476 0
 13922 5f24 8BAD      		ldd r24,Y+59
 13923 5f26 9CAD      		ldd r25,Y+60
 13924 5f28 8E54      		subi r24,78
 13925 5f2a 9D4F      		sbci r25,-3
 13926 5f2c FC01      		movw r30,r24
 13927 5f2e 2081      		ld r18,Z
 13928 5f30 3181      		ldd r19,Z+1
 13929 5f32 8981      		ldd r24,Y+1
 13930 5f34 9A81      		ldd r25,Y+2
 13931 5f36 880F      		lsl r24
 13932 5f38 991F      		rol r25
 13933 5f3a 880F      		lsl r24
 13934 5f3c 991F      		rol r25
 13935 5f3e 820F      		add r24,r18
 13936 5f40 931F      		adc r25,r19
 13937 5f42 FC01      		movw r30,r24
 13938 5f44 8081      		ld r24,Z
 13939 5f46 9181      		ldd r25,Z+1
 13940 5f48 A281      		ldd r26,Z+2
 13941 5f4a B381      		ldd r27,Z+3
 13942 5f4c 20E0      		ldi r18,0
 13943 5f4e 30E0      		ldi r19,0
 13944 5f50 A901      		movw r20,r18
 13945 5f52 BC01      		movw r22,r24
 13946 5f54 CD01      		movw r24,r26
 13947 5f56 0E94 0000 		call __nesf2
 13948 5f5a 8823      		tst r24
 13949 5f5c 01F4      		brne .+2
 13950 5f5e 00C0      		rjmp .L483
 13951               		.loc 1 1476 0 is_stmt 0 discriminator 1
 13952 5f60 8BAD      		ldd r24,Y+59
 13953 5f62 9CAD      		ldd r25,Y+60
 13954 5f64 8255      		subi r24,82
 13955 5f66 9D4F      		sbci r25,-3
 13956 5f68 FC01      		movw r30,r24
 13957 5f6a 2081      		ld r18,Z
 13958 5f6c 3181      		ldd r19,Z+1
 13959 5f6e 8981      		ldd r24,Y+1
 13960 5f70 9A81      		ldd r25,Y+2
 13961 5f72 880F      		lsl r24
 13962 5f74 991F      		rol r25
 13963 5f76 880F      		lsl r24
 13964 5f78 991F      		rol r25
 13965 5f7a 820F      		add r24,r18
 13966 5f7c 931F      		adc r25,r19
 13967 5f7e FC01      		movw r30,r24
 13968 5f80 8081      		ld r24,Z
 13969 5f82 9181      		ldd r25,Z+1
 13970 5f84 A281      		ldd r26,Z+2
 13971 5f86 B381      		ldd r27,Z+3
 13972 5f88 2BAD      		ldd r18,Y+59
 13973 5f8a 3CAD      		ldd r19,Y+60
 13974 5f8c 265F      		subi r18,-10
 13975 5f8e 3C4F      		sbci r19,-4
 13976 5f90 F901      		movw r30,r18
 13977 5f92 2081      		ld r18,Z
 13978 5f94 3181      		ldd r19,Z+1
 13979 5f96 4281      		ldd r20,Z+2
 13980 5f98 5381      		ldd r21,Z+3
 13981 5f9a BC01      		movw r22,r24
 13982 5f9c CD01      		movw r24,r26
 13983 5f9e 0E94 0000 		call __ltsf2
 13984 5fa2 8823      		tst r24
 13985 5fa4 04F0      		brlt .+2
 13986 5fa6 00C0      		rjmp .L483
1477:lp_solve_5.5/lp_MPS.c ****          (lp->orig_lowbo[i] == lp->orig_upbo[i])) {
 13987               		.loc 1 1477 0 is_stmt 1 discriminator 2
 13988 5fa8 8BAD      		ldd r24,Y+59
 13989 5faa 9CAD      		ldd r25,Y+60
 13990 5fac 8E54      		subi r24,78
 13991 5fae 9D4F      		sbci r25,-3
 13992 5fb0 FC01      		movw r30,r24
 13993 5fb2 2081      		ld r18,Z
 13994 5fb4 3181      		ldd r19,Z+1
 13995 5fb6 8981      		ldd r24,Y+1
 13996 5fb8 9A81      		ldd r25,Y+2
 13997 5fba 880F      		lsl r24
 13998 5fbc 991F      		rol r25
 13999 5fbe 880F      		lsl r24
 14000 5fc0 991F      		rol r25
 14001 5fc2 820F      		add r24,r18
 14002 5fc4 931F      		adc r25,r19
 14003 5fc6 FC01      		movw r30,r24
 14004 5fc8 8081      		ld r24,Z
 14005 5fca 9181      		ldd r25,Z+1
 14006 5fcc A281      		ldd r26,Z+2
 14007 5fce B381      		ldd r27,Z+3
 14008 5fd0 2BAD      		ldd r18,Y+59
 14009 5fd2 3CAD      		ldd r19,Y+60
 14010 5fd4 2255      		subi r18,82
 14011 5fd6 3D4F      		sbci r19,-3
 14012 5fd8 F901      		movw r30,r18
 14013 5fda 4081      		ld r20,Z
 14014 5fdc 5181      		ldd r21,Z+1
 14015 5fde 2981      		ldd r18,Y+1
 14016 5fe0 3A81      		ldd r19,Y+2
 14017 5fe2 220F      		lsl r18
 14018 5fe4 331F      		rol r19
 14019 5fe6 220F      		lsl r18
 14020 5fe8 331F      		rol r19
 14021 5fea 240F      		add r18,r20
 14022 5fec 351F      		adc r19,r21
 14023 5fee F901      		movw r30,r18
 14024 5ff0 2081      		ld r18,Z
 14025 5ff2 3181      		ldd r19,Z+1
 14026 5ff4 4281      		ldd r20,Z+2
 14027 5ff6 5381      		ldd r21,Z+3
1476:lp_solve_5.5/lp_MPS.c ****       if((lp->orig_lowbo[i] != 0) && (lp->orig_upbo[i] < lp->infinite) &&
 14028               		.loc 1 1476 0 discriminator 2
 14029 5ff8 BC01      		movw r22,r24
 14030 5ffa CD01      		movw r24,r26
 14031 5ffc 0E94 0000 		call __eqsf2
 14032 6000 8823      		tst r24
 14033 6002 01F0      		breq .+2
 14034 6004 00C0      		rjmp .L483
1478:lp_solve_5.5/lp_MPS.c ****         a = lp->orig_upbo[i];
 14035               		.loc 1 1478 0
 14036 6006 8BAD      		ldd r24,Y+59
 14037 6008 9CAD      		ldd r25,Y+60
 14038 600a 8255      		subi r24,82
 14039 600c 9D4F      		sbci r25,-3
 14040 600e FC01      		movw r30,r24
 14041 6010 2081      		ld r18,Z
 14042 6012 3181      		ldd r19,Z+1
 14043 6014 8981      		ldd r24,Y+1
 14044 6016 9A81      		ldd r25,Y+2
 14045 6018 880F      		lsl r24
 14046 601a 991F      		rol r25
 14047 601c 880F      		lsl r24
 14048 601e 991F      		rol r25
 14049 6020 820F      		add r24,r18
 14050 6022 931F      		adc r25,r19
 14051 6024 FC01      		movw r30,r24
 14052 6026 8081      		ld r24,Z
 14053 6028 9181      		ldd r25,Z+1
 14054 602a A281      		ldd r26,Z+2
 14055 602c B381      		ldd r27,Z+3
 14056 602e 8A8B      		std Y+18,r24
 14057 6030 9B8B      		std Y+19,r25
 14058 6032 AC8B      		std Y+20,r26
 14059 6034 BD8B      		std Y+21,r27
1479:lp_solve_5.5/lp_MPS.c ****         a = unscaled_value(lp, a, i);
 14060               		.loc 1 1479 0
 14061 6036 2981      		ldd r18,Y+1
 14062 6038 3A81      		ldd r19,Y+2
 14063 603a 8A89      		ldd r24,Y+18
 14064 603c 9B89      		ldd r25,Y+19
 14065 603e AC89      		ldd r26,Y+20
 14066 6040 BD89      		ldd r27,Y+21
 14067 6042 EBAD      		ldd r30,Y+59
 14068 6044 FCAD      		ldd r31,Y+60
 14069 6046 AC01      		movw r20,r24
 14070 6048 BD01      		movw r22,r26
 14071 604a CF01      		movw r24,r30
 14072 604c 0E94 0000 		call unscaled_value
 14073 6050 DC01      		movw r26,r24
 14074 6052 CB01      		movw r24,r22
 14075 6054 8A8B      		std Y+18,r24
 14076 6056 9B8B      		std Y+19,r25
 14077 6058 AC8B      		std Y+20,r26
 14078 605a BD8B      		std Y+21,r27
1480:lp_solve_5.5/lp_MPS.c ****         if(putheader) {
 14079               		.loc 1 1480 0
 14080 605c 8B85      		ldd r24,Y+11
 14081 605e 9C85      		ldd r25,Y+12
 14082 6060 892B      		or r24,r25
 14083 6062 01F0      		breq .L487
1481:lp_solve_5.5/lp_MPS.c ****           write_data(userhandle, write_modeldata, "BOUNDS\n");
 14084               		.loc 1 1481 0
 14085 6064 80E0      		ldi r24,lo8(.LC121)
 14086 6066 90E0      		ldi r25,hi8(.LC121)
 14087 6068 892F      		mov r24,r25
 14088 606a 8F93      		push r24
 14089 606c 80E0      		ldi r24,lo8(.LC121)
 14090 606e 90E0      		ldi r25,hi8(.LC121)
 14091 6070 8F93      		push r24
 14092 6072 CE01      		movw r24,r28
 14093 6074 8F5B      		subi r24,-65
 14094 6076 9F4F      		sbci r25,-1
 14095 6078 FC01      		movw r30,r24
 14096 607a 2181      		ldd r18,Z+1
 14097 607c 2F93      		push r18
 14098 607e FC01      		movw r30,r24
 14099 6080 8081      		ld r24,Z
 14100 6082 8F93      		push r24
 14101 6084 CE01      		movw r24,r28
 14102 6086 805C      		subi r24,-64
 14103 6088 9F4F      		sbci r25,-1
 14104 608a FC01      		movw r30,r24
 14105 608c 8081      		ld r24,Z
 14106 608e 8F93      		push r24
 14107 6090 8FAD      		ldd r24,Y+63
 14108 6092 8F93      		push r24
 14109 6094 0E94 0000 		call write_data
 14110 6098 0F90      		pop __tmp_reg__
 14111 609a 0F90      		pop __tmp_reg__
 14112 609c 0F90      		pop __tmp_reg__
 14113 609e 0F90      		pop __tmp_reg__
 14114 60a0 0F90      		pop __tmp_reg__
 14115 60a2 0F90      		pop __tmp_reg__
1482:lp_solve_5.5/lp_MPS.c ****           putheader = FALSE;
 14116               		.loc 1 1482 0
 14117 60a4 1C86      		std Y+12,__zero_reg__
 14118 60a6 1B86      		std Y+11,__zero_reg__
 14119               	.L487:
1483:lp_solve_5.5/lp_MPS.c ****         }
1484:lp_solve_5.5/lp_MPS.c ****         write_data(userhandle, write_modeldata, " FX BND       %s  %s\n",
 14120               		.loc 1 1484 0
 14121 60a8 8A89      		ldd r24,Y+18
 14122 60aa 9B89      		ldd r25,Y+19
 14123 60ac AC89      		ldd r26,Y+20
 14124 60ae BD89      		ldd r27,Y+21
 14125 60b0 9E01      		movw r18,r28
 14126 60b2 2D5D      		subi r18,-35
 14127 60b4 3F4F      		sbci r19,-1
 14128 60b6 AC01      		movw r20,r24
 14129 60b8 BD01      		movw r22,r26
 14130 60ba C901      		movw r24,r18
 14131 60bc 0E94 0000 		call formatnumber12
 14132 60c0 8C01      		movw r16,r24
 14133 60c2 2B81      		ldd r18,Y+3
 14134 60c4 3C81      		ldd r19,Y+4
 14135 60c6 8BAD      		ldd r24,Y+59
 14136 60c8 9CAD      		ldd r25,Y+60
 14137 60ca B901      		movw r22,r18
 14138 60cc 0E94 0000 		call get_col_name
 14139 60d0 AC01      		movw r20,r24
 14140 60d2 CE01      		movw r24,r28
 14141 60d4 C296      		adiw r24,50
 14142 60d6 288D      		ldd r18,Y+24
 14143 60d8 398D      		ldd r19,Y+25
 14144 60da BA01      		movw r22,r20
 14145 60dc F901      		movw r30,r18
 14146 60de 0995      		icall
 14147 60e0 212F      		mov r18,r17
 14148 60e2 2F93      		push r18
 14149 60e4 202F      		mov r18,r16
 14150 60e6 2F93      		push r18
 14151 60e8 292F      		mov r18,r25
 14152 60ea 2F93      		push r18
 14153 60ec 8F93      		push r24
 14154 60ee 80E0      		ldi r24,lo8(.LC122)
 14155 60f0 90E0      		ldi r25,hi8(.LC122)
 14156 60f2 892F      		mov r24,r25
 14157 60f4 8F93      		push r24
 14158 60f6 80E0      		ldi r24,lo8(.LC122)
 14159 60f8 90E0      		ldi r25,hi8(.LC122)
 14160 60fa 8F93      		push r24
 14161 60fc CE01      		movw r24,r28
 14162 60fe 8F5B      		subi r24,-65
 14163 6100 9F4F      		sbci r25,-1
 14164 6102 FC01      		movw r30,r24
 14165 6104 2181      		ldd r18,Z+1
 14166 6106 2F93      		push r18
 14167 6108 FC01      		movw r30,r24
 14168 610a 8081      		ld r24,Z
 14169 610c 8F93      		push r24
 14170 610e CE01      		movw r24,r28
 14171 6110 805C      		subi r24,-64
 14172 6112 9F4F      		sbci r25,-1
 14173 6114 FC01      		movw r30,r24
 14174 6116 8081      		ld r24,Z
 14175 6118 8F93      		push r24
 14176 611a 8FAD      		ldd r24,Y+63
 14177 611c 8F93      		push r24
 14178 611e 0E94 0000 		call write_data
 14179 6122 4DB7      		in r20,__SP_L__
 14180 6124 5EB7      		in r21,__SP_H__
 14181 6126 465F      		subi r20,-10
 14182 6128 5F4F      		sbci r21,-1
 14183 612a 0FB6      		in __tmp_reg__,__SREG__
 14184 612c F894      		cli
 14185 612e DEBF      		out __SP_H__,r29
 14186 6130 0FBE      		out __SREG__,__tmp_reg__
 14187 6132 CDBF      		out __SP_L__,r28
 14188 6134 00C0      		rjmp .L482
 14189               	.L483:
1485:lp_solve_5.5/lp_MPS.c ****                         MPSname(name0, get_col_name(lp, j)),
1486:lp_solve_5.5/lp_MPS.c ****                         formatnumber12(numberbuffer, (double)a));
1487:lp_solve_5.5/lp_MPS.c ****       }
1488:lp_solve_5.5/lp_MPS.c ****       else if(is_binary(lp, j)) {
 14190               		.loc 1 1488 0
 14191 6136 2B81      		ldd r18,Y+3
 14192 6138 3C81      		ldd r19,Y+4
 14193 613a 8BAD      		ldd r24,Y+59
 14194 613c 9CAD      		ldd r25,Y+60
 14195 613e B901      		movw r22,r18
 14196 6140 0E94 0000 		call is_binary
 14197 6144 8823      		tst r24
 14198 6146 01F4      		brne .+2
 14199 6148 00C0      		rjmp .L488
1489:lp_solve_5.5/lp_MPS.c ****         if(putheader) {
 14200               		.loc 1 1489 0
 14201 614a 8B85      		ldd r24,Y+11
 14202 614c 9C85      		ldd r25,Y+12
 14203 614e 892B      		or r24,r25
 14204 6150 01F0      		breq .L489
1490:lp_solve_5.5/lp_MPS.c ****           write_data(userhandle, write_modeldata, "BOUNDS\n");
 14205               		.loc 1 1490 0
 14206 6152 80E0      		ldi r24,lo8(.LC121)
 14207 6154 90E0      		ldi r25,hi8(.LC121)
 14208 6156 892F      		mov r24,r25
 14209 6158 8F93      		push r24
 14210 615a 80E0      		ldi r24,lo8(.LC121)
 14211 615c 90E0      		ldi r25,hi8(.LC121)
 14212 615e 8F93      		push r24
 14213 6160 CE01      		movw r24,r28
 14214 6162 8F5B      		subi r24,-65
 14215 6164 9F4F      		sbci r25,-1
 14216 6166 FC01      		movw r30,r24
 14217 6168 2181      		ldd r18,Z+1
 14218 616a 2F93      		push r18
 14219 616c FC01      		movw r30,r24
 14220 616e 8081      		ld r24,Z
 14221 6170 8F93      		push r24
 14222 6172 CE01      		movw r24,r28
 14223 6174 805C      		subi r24,-64
 14224 6176 9F4F      		sbci r25,-1
 14225 6178 FC01      		movw r30,r24
 14226 617a 8081      		ld r24,Z
 14227 617c 8F93      		push r24
 14228 617e 8FAD      		ldd r24,Y+63
 14229 6180 8F93      		push r24
 14230 6182 0E94 0000 		call write_data
 14231 6186 0F90      		pop __tmp_reg__
 14232 6188 0F90      		pop __tmp_reg__
 14233 618a 0F90      		pop __tmp_reg__
 14234 618c 0F90      		pop __tmp_reg__
 14235 618e 0F90      		pop __tmp_reg__
 14236 6190 0F90      		pop __tmp_reg__
1491:lp_solve_5.5/lp_MPS.c ****           putheader = FALSE;
 14237               		.loc 1 1491 0
 14238 6192 1C86      		std Y+12,__zero_reg__
 14239 6194 1B86      		std Y+11,__zero_reg__
 14240               	.L489:
1492:lp_solve_5.5/lp_MPS.c ****         }
1493:lp_solve_5.5/lp_MPS.c ****         write_data(userhandle, write_modeldata, " BV BND       %s\n",
 14241               		.loc 1 1493 0
 14242 6196 2B81      		ldd r18,Y+3
 14243 6198 3C81      		ldd r19,Y+4
 14244 619a 8BAD      		ldd r24,Y+59
 14245 619c 9CAD      		ldd r25,Y+60
 14246 619e B901      		movw r22,r18
 14247 61a0 0E94 0000 		call get_col_name
 14248 61a4 AC01      		movw r20,r24
 14249 61a6 CE01      		movw r24,r28
 14250 61a8 C296      		adiw r24,50
 14251 61aa 288D      		ldd r18,Y+24
 14252 61ac 398D      		ldd r19,Y+25
 14253 61ae BA01      		movw r22,r20
 14254 61b0 F901      		movw r30,r18
 14255 61b2 0995      		icall
 14256 61b4 292F      		mov r18,r25
 14257 61b6 2F93      		push r18
 14258 61b8 8F93      		push r24
 14259 61ba 80E0      		ldi r24,lo8(.LC123)
 14260 61bc 90E0      		ldi r25,hi8(.LC123)
 14261 61be 892F      		mov r24,r25
 14262 61c0 8F93      		push r24
 14263 61c2 80E0      		ldi r24,lo8(.LC123)
 14264 61c4 90E0      		ldi r25,hi8(.LC123)
 14265 61c6 8F93      		push r24
 14266 61c8 CE01      		movw r24,r28
 14267 61ca 8F5B      		subi r24,-65
 14268 61cc 9F4F      		sbci r25,-1
 14269 61ce FC01      		movw r30,r24
 14270 61d0 2181      		ldd r18,Z+1
 14271 61d2 2F93      		push r18
 14272 61d4 FC01      		movw r30,r24
 14273 61d6 8081      		ld r24,Z
 14274 61d8 8F93      		push r24
 14275 61da CE01      		movw r24,r28
 14276 61dc 805C      		subi r24,-64
 14277 61de 9F4F      		sbci r25,-1
 14278 61e0 FC01      		movw r30,r24
 14279 61e2 8081      		ld r24,Z
 14280 61e4 8F93      		push r24
 14281 61e6 8FAD      		ldd r24,Y+63
 14282 61e8 8F93      		push r24
 14283 61ea 0E94 0000 		call write_data
 14284 61ee 4DB7      		in r20,__SP_L__
 14285 61f0 5EB7      		in r21,__SP_H__
 14286 61f2 485F      		subi r20,-8
 14287 61f4 5F4F      		sbci r21,-1
 14288 61f6 0FB6      		in __tmp_reg__,__SREG__
 14289 61f8 F894      		cli
 14290 61fa DEBF      		out __SP_H__,r29
 14291 61fc 0FBE      		out __SREG__,__tmp_reg__
 14292 61fe CDBF      		out __SP_L__,r28
 14293 6200 00C0      		rjmp .L482
 14294               	.L488:
1494:lp_solve_5.5/lp_MPS.c ****                         MPSname(name0, get_col_name(lp, j)));
1495:lp_solve_5.5/lp_MPS.c ****       }
1496:lp_solve_5.5/lp_MPS.c ****       else if(is_unbounded(lp, j)) {
 14295               		.loc 1 1496 0
 14296 6202 2B81      		ldd r18,Y+3
 14297 6204 3C81      		ldd r19,Y+4
 14298 6206 8BAD      		ldd r24,Y+59
 14299 6208 9CAD      		ldd r25,Y+60
 14300 620a B901      		movw r22,r18
 14301 620c 0E94 0000 		call is_unbounded
 14302 6210 8823      		tst r24
 14303 6212 01F4      		brne .+2
 14304 6214 00C0      		rjmp .L490
1497:lp_solve_5.5/lp_MPS.c ****         if(putheader) {
 14305               		.loc 1 1497 0
 14306 6216 8B85      		ldd r24,Y+11
 14307 6218 9C85      		ldd r25,Y+12
 14308 621a 892B      		or r24,r25
 14309 621c 01F0      		breq .L491
1498:lp_solve_5.5/lp_MPS.c ****           write_data(userhandle, write_modeldata, "BOUNDS\n");
 14310               		.loc 1 1498 0
 14311 621e 80E0      		ldi r24,lo8(.LC121)
 14312 6220 90E0      		ldi r25,hi8(.LC121)
 14313 6222 892F      		mov r24,r25
 14314 6224 8F93      		push r24
 14315 6226 80E0      		ldi r24,lo8(.LC121)
 14316 6228 90E0      		ldi r25,hi8(.LC121)
 14317 622a 8F93      		push r24
 14318 622c CE01      		movw r24,r28
 14319 622e 8F5B      		subi r24,-65
 14320 6230 9F4F      		sbci r25,-1
 14321 6232 FC01      		movw r30,r24
 14322 6234 2181      		ldd r18,Z+1
 14323 6236 2F93      		push r18
 14324 6238 FC01      		movw r30,r24
 14325 623a 8081      		ld r24,Z
 14326 623c 8F93      		push r24
 14327 623e CE01      		movw r24,r28
 14328 6240 805C      		subi r24,-64
 14329 6242 9F4F      		sbci r25,-1
 14330 6244 FC01      		movw r30,r24
 14331 6246 8081      		ld r24,Z
 14332 6248 8F93      		push r24
 14333 624a 8FAD      		ldd r24,Y+63
 14334 624c 8F93      		push r24
 14335 624e 0E94 0000 		call write_data
 14336 6252 0F90      		pop __tmp_reg__
 14337 6254 0F90      		pop __tmp_reg__
 14338 6256 0F90      		pop __tmp_reg__
 14339 6258 0F90      		pop __tmp_reg__
 14340 625a 0F90      		pop __tmp_reg__
 14341 625c 0F90      		pop __tmp_reg__
1499:lp_solve_5.5/lp_MPS.c ****           putheader = FALSE;
 14342               		.loc 1 1499 0
 14343 625e 1C86      		std Y+12,__zero_reg__
 14344 6260 1B86      		std Y+11,__zero_reg__
 14345               	.L491:
1500:lp_solve_5.5/lp_MPS.c ****         }
1501:lp_solve_5.5/lp_MPS.c ****         write_data(userhandle, write_modeldata, " FR BND       %s\n",
 14346               		.loc 1 1501 0
 14347 6262 2B81      		ldd r18,Y+3
 14348 6264 3C81      		ldd r19,Y+4
 14349 6266 8BAD      		ldd r24,Y+59
 14350 6268 9CAD      		ldd r25,Y+60
 14351 626a B901      		movw r22,r18
 14352 626c 0E94 0000 		call get_col_name
 14353 6270 AC01      		movw r20,r24
 14354 6272 CE01      		movw r24,r28
 14355 6274 C296      		adiw r24,50
 14356 6276 288D      		ldd r18,Y+24
 14357 6278 398D      		ldd r19,Y+25
 14358 627a BA01      		movw r22,r20
 14359 627c F901      		movw r30,r18
 14360 627e 0995      		icall
 14361 6280 292F      		mov r18,r25
 14362 6282 2F93      		push r18
 14363 6284 8F93      		push r24
 14364 6286 80E0      		ldi r24,lo8(.LC124)
 14365 6288 90E0      		ldi r25,hi8(.LC124)
 14366 628a 892F      		mov r24,r25
 14367 628c 8F93      		push r24
 14368 628e 80E0      		ldi r24,lo8(.LC124)
 14369 6290 90E0      		ldi r25,hi8(.LC124)
 14370 6292 8F93      		push r24
 14371 6294 CE01      		movw r24,r28
 14372 6296 8F5B      		subi r24,-65
 14373 6298 9F4F      		sbci r25,-1
 14374 629a FC01      		movw r30,r24
 14375 629c 2181      		ldd r18,Z+1
 14376 629e 2F93      		push r18
 14377 62a0 FC01      		movw r30,r24
 14378 62a2 8081      		ld r24,Z
 14379 62a4 8F93      		push r24
 14380 62a6 CE01      		movw r24,r28
 14381 62a8 805C      		subi r24,-64
 14382 62aa 9F4F      		sbci r25,-1
 14383 62ac FC01      		movw r30,r24
 14384 62ae 8081      		ld r24,Z
 14385 62b0 8F93      		push r24
 14386 62b2 8FAD      		ldd r24,Y+63
 14387 62b4 8F93      		push r24
 14388 62b6 0E94 0000 		call write_data
 14389 62ba 4DB7      		in r20,__SP_L__
 14390 62bc 5EB7      		in r21,__SP_H__
 14391 62be 485F      		subi r20,-8
 14392 62c0 5F4F      		sbci r21,-1
 14393 62c2 0FB6      		in __tmp_reg__,__SREG__
 14394 62c4 F894      		cli
 14395 62c6 DEBF      		out __SP_H__,r29
 14396 62c8 0FBE      		out __SREG__,__tmp_reg__
 14397 62ca CDBF      		out __SP_L__,r28
 14398 62cc 00C0      		rjmp .L482
 14399               	.L490:
1502:lp_solve_5.5/lp_MPS.c ****                         MPSname(name0, get_col_name(lp, j)));
1503:lp_solve_5.5/lp_MPS.c ****       }
1504:lp_solve_5.5/lp_MPS.c ****       else {
1505:lp_solve_5.5/lp_MPS.c ****         if((lp->orig_lowbo[i] != 0) || (is_int(lp, j))) { /* Some solvers like CPLEX need to have a
 14400               		.loc 1 1505 0
 14401 62ce 8BAD      		ldd r24,Y+59
 14402 62d0 9CAD      		ldd r25,Y+60
 14403 62d2 8E54      		subi r24,78
 14404 62d4 9D4F      		sbci r25,-3
 14405 62d6 FC01      		movw r30,r24
 14406 62d8 2081      		ld r18,Z
 14407 62da 3181      		ldd r19,Z+1
 14408 62dc 8981      		ldd r24,Y+1
 14409 62de 9A81      		ldd r25,Y+2
 14410 62e0 880F      		lsl r24
 14411 62e2 991F      		rol r25
 14412 62e4 880F      		lsl r24
 14413 62e6 991F      		rol r25
 14414 62e8 820F      		add r24,r18
 14415 62ea 931F      		adc r25,r19
 14416 62ec FC01      		movw r30,r24
 14417 62ee 8081      		ld r24,Z
 14418 62f0 9181      		ldd r25,Z+1
 14419 62f2 A281      		ldd r26,Z+2
 14420 62f4 B381      		ldd r27,Z+3
 14421 62f6 20E0      		ldi r18,0
 14422 62f8 30E0      		ldi r19,0
 14423 62fa A901      		movw r20,r18
 14424 62fc BC01      		movw r22,r24
 14425 62fe CD01      		movw r24,r26
 14426 6300 0E94 0000 		call __nesf2
 14427 6304 8823      		tst r24
 14428 6306 01F4      		brne .L492
 14429               		.loc 1 1505 0 is_stmt 0 discriminator 1
 14430 6308 2B81      		ldd r18,Y+3
 14431 630a 3C81      		ldd r19,Y+4
 14432 630c 8BAD      		ldd r24,Y+59
 14433 630e 9CAD      		ldd r25,Y+60
 14434 6310 B901      		movw r22,r18
 14435 6312 0E94 0000 		call is_int
 14436 6316 8823      		tst r24
 14437 6318 01F4      		brne .+2
 14438 631a 00C0      		rjmp .L493
 14439               	.L492:
1506:lp_solve_5.5/lp_MPS.c ****           a = lp->orig_lowbo[i];
 14440               		.loc 1 1506 0 is_stmt 1
 14441 631c 8BAD      		ldd r24,Y+59
 14442 631e 9CAD      		ldd r25,Y+60
 14443 6320 8E54      		subi r24,78
 14444 6322 9D4F      		sbci r25,-3
 14445 6324 FC01      		movw r30,r24
 14446 6326 2081      		ld r18,Z
 14447 6328 3181      		ldd r19,Z+1
 14448 632a 8981      		ldd r24,Y+1
 14449 632c 9A81      		ldd r25,Y+2
 14450 632e 880F      		lsl r24
 14451 6330 991F      		rol r25
 14452 6332 880F      		lsl r24
 14453 6334 991F      		rol r25
 14454 6336 820F      		add r24,r18
 14455 6338 931F      		adc r25,r19
 14456 633a FC01      		movw r30,r24
 14457 633c 8081      		ld r24,Z
 14458 633e 9181      		ldd r25,Z+1
 14459 6340 A281      		ldd r26,Z+2
 14460 6342 B381      		ldd r27,Z+3
 14461 6344 8A8B      		std Y+18,r24
 14462 6346 9B8B      		std Y+19,r25
 14463 6348 AC8B      		std Y+20,r26
 14464 634a BD8B      		std Y+21,r27
1507:lp_solve_5.5/lp_MPS.c ****           a = unscaled_value(lp, a, i);
 14465               		.loc 1 1507 0
 14466 634c 2981      		ldd r18,Y+1
 14467 634e 3A81      		ldd r19,Y+2
 14468 6350 8A89      		ldd r24,Y+18
 14469 6352 9B89      		ldd r25,Y+19
 14470 6354 AC89      		ldd r26,Y+20
 14471 6356 BD89      		ldd r27,Y+21
 14472 6358 EBAD      		ldd r30,Y+59
 14473 635a FCAD      		ldd r31,Y+60
 14474 635c AC01      		movw r20,r24
 14475 635e BD01      		movw r22,r26
 14476 6360 CF01      		movw r24,r30
 14477 6362 0E94 0000 		call unscaled_value
 14478 6366 DC01      		movw r26,r24
 14479 6368 CB01      		movw r24,r22
 14480 636a 8A8B      		std Y+18,r24
 14481 636c 9B8B      		std Y+19,r25
 14482 636e AC8B      		std Y+20,r26
 14483 6370 BD8B      		std Y+21,r27
1508:lp_solve_5.5/lp_MPS.c ****           if(putheader) {
 14484               		.loc 1 1508 0
 14485 6372 8B85      		ldd r24,Y+11
 14486 6374 9C85      		ldd r25,Y+12
 14487 6376 892B      		or r24,r25
 14488 6378 01F0      		breq .L494
1509:lp_solve_5.5/lp_MPS.c ****             write_data(userhandle, write_modeldata, "BOUNDS\n");
 14489               		.loc 1 1509 0
 14490 637a 80E0      		ldi r24,lo8(.LC121)
 14491 637c 90E0      		ldi r25,hi8(.LC121)
 14492 637e 892F      		mov r24,r25
 14493 6380 8F93      		push r24
 14494 6382 80E0      		ldi r24,lo8(.LC121)
 14495 6384 90E0      		ldi r25,hi8(.LC121)
 14496 6386 8F93      		push r24
 14497 6388 CE01      		movw r24,r28
 14498 638a 8F5B      		subi r24,-65
 14499 638c 9F4F      		sbci r25,-1
 14500 638e FC01      		movw r30,r24
 14501 6390 2181      		ldd r18,Z+1
 14502 6392 2F93      		push r18
 14503 6394 FC01      		movw r30,r24
 14504 6396 8081      		ld r24,Z
 14505 6398 8F93      		push r24
 14506 639a CE01      		movw r24,r28
 14507 639c 805C      		subi r24,-64
 14508 639e 9F4F      		sbci r25,-1
 14509 63a0 FC01      		movw r30,r24
 14510 63a2 8081      		ld r24,Z
 14511 63a4 8F93      		push r24
 14512 63a6 8FAD      		ldd r24,Y+63
 14513 63a8 8F93      		push r24
 14514 63aa 0E94 0000 		call write_data
 14515 63ae 0F90      		pop __tmp_reg__
 14516 63b0 0F90      		pop __tmp_reg__
 14517 63b2 0F90      		pop __tmp_reg__
 14518 63b4 0F90      		pop __tmp_reg__
 14519 63b6 0F90      		pop __tmp_reg__
 14520 63b8 0F90      		pop __tmp_reg__
1510:lp_solve_5.5/lp_MPS.c ****             putheader = FALSE;
 14521               		.loc 1 1510 0
 14522 63ba 1C86      		std Y+12,__zero_reg__
 14523 63bc 1B86      		std Y+11,__zero_reg__
 14524               	.L494:
1511:lp_solve_5.5/lp_MPS.c ****           }
1512:lp_solve_5.5/lp_MPS.c ****           if(lp->orig_lowbo[i] != -lp->infinite)
 14525               		.loc 1 1512 0
 14526 63be 8BAD      		ldd r24,Y+59
 14527 63c0 9CAD      		ldd r25,Y+60
 14528 63c2 8E54      		subi r24,78
 14529 63c4 9D4F      		sbci r25,-3
 14530 63c6 FC01      		movw r30,r24
 14531 63c8 2081      		ld r18,Z
 14532 63ca 3181      		ldd r19,Z+1
 14533 63cc 8981      		ldd r24,Y+1
 14534 63ce 9A81      		ldd r25,Y+2
 14535 63d0 880F      		lsl r24
 14536 63d2 991F      		rol r25
 14537 63d4 880F      		lsl r24
 14538 63d6 991F      		rol r25
 14539 63d8 820F      		add r24,r18
 14540 63da 931F      		adc r25,r19
 14541 63dc FC01      		movw r30,r24
 14542 63de E080      		ld r14,Z
 14543 63e0 F180      		ldd r15,Z+1
 14544 63e2 0281      		ldd r16,Z+2
 14545 63e4 1381      		ldd r17,Z+3
 14546 63e6 8BAD      		ldd r24,Y+59
 14547 63e8 9CAD      		ldd r25,Y+60
 14548 63ea 865F      		subi r24,-10
 14549 63ec 9C4F      		sbci r25,-4
 14550 63ee FC01      		movw r30,r24
 14551 63f0 8081      		ld r24,Z
 14552 63f2 9181      		ldd r25,Z+1
 14553 63f4 A281      		ldd r26,Z+2
 14554 63f6 B381      		ldd r27,Z+3
 14555 63f8 B058      		subi r27,0x80
 14556 63fa 9C01      		movw r18,r24
 14557 63fc AD01      		movw r20,r26
 14558 63fe C801      		movw r24,r16
 14559 6400 B701      		movw r22,r14
 14560 6402 0E94 0000 		call __nesf2
 14561 6406 8823      		tst r24
 14562 6408 01F4      		brne .+2
 14563 640a 00C0      		rjmp .L532
1513:lp_solve_5.5/lp_MPS.c ****             write_data(userhandle, write_modeldata, " LO BND       %s  %s\n",
 14564               		.loc 1 1513 0
 14565 640c 8A89      		ldd r24,Y+18
 14566 640e 9B89      		ldd r25,Y+19
 14567 6410 AC89      		ldd r26,Y+20
 14568 6412 BD89      		ldd r27,Y+21
 14569 6414 9E01      		movw r18,r28
 14570 6416 2D5D      		subi r18,-35
 14571 6418 3F4F      		sbci r19,-1
 14572 641a AC01      		movw r20,r24
 14573 641c BD01      		movw r22,r26
 14574 641e C901      		movw r24,r18
 14575 6420 0E94 0000 		call formatnumber12
 14576 6424 8C01      		movw r16,r24
 14577 6426 2B81      		ldd r18,Y+3
 14578 6428 3C81      		ldd r19,Y+4
 14579 642a 8BAD      		ldd r24,Y+59
 14580 642c 9CAD      		ldd r25,Y+60
 14581 642e B901      		movw r22,r18
 14582 6430 0E94 0000 		call get_col_name
 14583 6434 AC01      		movw r20,r24
 14584 6436 CE01      		movw r24,r28
 14585 6438 C296      		adiw r24,50
 14586 643a 288D      		ldd r18,Y+24
 14587 643c 398D      		ldd r19,Y+25
 14588 643e BA01      		movw r22,r20
 14589 6440 F901      		movw r30,r18
 14590 6442 0995      		icall
 14591 6444 212F      		mov r18,r17
 14592 6446 2F93      		push r18
 14593 6448 202F      		mov r18,r16
 14594 644a 2F93      		push r18
 14595 644c 292F      		mov r18,r25
 14596 644e 2F93      		push r18
 14597 6450 8F93      		push r24
 14598 6452 80E0      		ldi r24,lo8(.LC125)
 14599 6454 90E0      		ldi r25,hi8(.LC125)
 14600 6456 892F      		mov r24,r25
 14601 6458 8F93      		push r24
 14602 645a 80E0      		ldi r24,lo8(.LC125)
 14603 645c 90E0      		ldi r25,hi8(.LC125)
 14604 645e 8F93      		push r24
 14605 6460 CE01      		movw r24,r28
 14606 6462 8F5B      		subi r24,-65
 14607 6464 9F4F      		sbci r25,-1
 14608 6466 FC01      		movw r30,r24
 14609 6468 2181      		ldd r18,Z+1
 14610 646a 2F93      		push r18
 14611 646c FC01      		movw r30,r24
 14612 646e 8081      		ld r24,Z
 14613 6470 8F93      		push r24
 14614 6472 CE01      		movw r24,r28
 14615 6474 805C      		subi r24,-64
 14616 6476 9F4F      		sbci r25,-1
 14617 6478 FC01      		movw r30,r24
 14618 647a 8081      		ld r24,Z
 14619 647c 8F93      		push r24
 14620 647e 8FAD      		ldd r24,Y+63
 14621 6480 8F93      		push r24
 14622 6482 0E94 0000 		call write_data
 14623 6486 4DB7      		in r20,__SP_L__
 14624 6488 5EB7      		in r21,__SP_H__
 14625 648a 465F      		subi r20,-10
 14626 648c 5F4F      		sbci r21,-1
 14627 648e 0FB6      		in __tmp_reg__,__SREG__
 14628 6490 F894      		cli
 14629 6492 DEBF      		out __SP_H__,r29
 14630 6494 0FBE      		out __SREG__,__tmp_reg__
 14631 6496 CDBF      		out __SP_L__,r28
 14632 6498 00C0      		rjmp .L493
 14633               	.L532:
1514:lp_solve_5.5/lp_MPS.c ****                             MPSname(name0, get_col_name(lp, j)),
1515:lp_solve_5.5/lp_MPS.c ****                             formatnumber12(numberbuffer, (double)a));
1516:lp_solve_5.5/lp_MPS.c ****           else
1517:lp_solve_5.5/lp_MPS.c ****             write_data(userhandle, write_modeldata, " MI BND       %s\n",
 14634               		.loc 1 1517 0
 14635 649a 2B81      		ldd r18,Y+3
 14636 649c 3C81      		ldd r19,Y+4
 14637 649e 8BAD      		ldd r24,Y+59
 14638 64a0 9CAD      		ldd r25,Y+60
 14639 64a2 B901      		movw r22,r18
 14640 64a4 0E94 0000 		call get_col_name
 14641 64a8 AC01      		movw r20,r24
 14642 64aa CE01      		movw r24,r28
 14643 64ac C296      		adiw r24,50
 14644 64ae 288D      		ldd r18,Y+24
 14645 64b0 398D      		ldd r19,Y+25
 14646 64b2 BA01      		movw r22,r20
 14647 64b4 F901      		movw r30,r18
 14648 64b6 0995      		icall
 14649 64b8 292F      		mov r18,r25
 14650 64ba 2F93      		push r18
 14651 64bc 8F93      		push r24
 14652 64be 80E0      		ldi r24,lo8(.LC126)
 14653 64c0 90E0      		ldi r25,hi8(.LC126)
 14654 64c2 892F      		mov r24,r25
 14655 64c4 8F93      		push r24
 14656 64c6 80E0      		ldi r24,lo8(.LC126)
 14657 64c8 90E0      		ldi r25,hi8(.LC126)
 14658 64ca 8F93      		push r24
 14659 64cc CE01      		movw r24,r28
 14660 64ce 8F5B      		subi r24,-65
 14661 64d0 9F4F      		sbci r25,-1
 14662 64d2 FC01      		movw r30,r24
 14663 64d4 2181      		ldd r18,Z+1
 14664 64d6 2F93      		push r18
 14665 64d8 FC01      		movw r30,r24
 14666 64da 8081      		ld r24,Z
 14667 64dc 8F93      		push r24
 14668 64de CE01      		movw r24,r28
 14669 64e0 805C      		subi r24,-64
 14670 64e2 9F4F      		sbci r25,-1
 14671 64e4 FC01      		movw r30,r24
 14672 64e6 8081      		ld r24,Z
 14673 64e8 8F93      		push r24
 14674 64ea 8FAD      		ldd r24,Y+63
 14675 64ec 8F93      		push r24
 14676 64ee 0E94 0000 		call write_data
 14677 64f2 4DB7      		in r20,__SP_L__
 14678 64f4 5EB7      		in r21,__SP_H__
 14679 64f6 485F      		subi r20,-8
 14680 64f8 5F4F      		sbci r21,-1
 14681 64fa 0FB6      		in __tmp_reg__,__SREG__
 14682 64fc F894      		cli
 14683 64fe DEBF      		out __SP_H__,r29
 14684 6500 0FBE      		out __SREG__,__tmp_reg__
 14685 6502 CDBF      		out __SP_L__,r28
 14686               	.L493:
1518:lp_solve_5.5/lp_MPS.c ****                             MPSname(name0, get_col_name(lp, j)));
1519:lp_solve_5.5/lp_MPS.c ****         }
1520:lp_solve_5.5/lp_MPS.c **** 
1521:lp_solve_5.5/lp_MPS.c ****         if((lp->orig_upbo[i] < lp->infinite) || (is_semicont(lp, j))) {
 14687               		.loc 1 1521 0
 14688 6504 8BAD      		ldd r24,Y+59
 14689 6506 9CAD      		ldd r25,Y+60
 14690 6508 8255      		subi r24,82
 14691 650a 9D4F      		sbci r25,-3
 14692 650c FC01      		movw r30,r24
 14693 650e 2081      		ld r18,Z
 14694 6510 3181      		ldd r19,Z+1
 14695 6512 8981      		ldd r24,Y+1
 14696 6514 9A81      		ldd r25,Y+2
 14697 6516 880F      		lsl r24
 14698 6518 991F      		rol r25
 14699 651a 880F      		lsl r24
 14700 651c 991F      		rol r25
 14701 651e 820F      		add r24,r18
 14702 6520 931F      		adc r25,r19
 14703 6522 FC01      		movw r30,r24
 14704 6524 8081      		ld r24,Z
 14705 6526 9181      		ldd r25,Z+1
 14706 6528 A281      		ldd r26,Z+2
 14707 652a B381      		ldd r27,Z+3
 14708 652c 2BAD      		ldd r18,Y+59
 14709 652e 3CAD      		ldd r19,Y+60
 14710 6530 265F      		subi r18,-10
 14711 6532 3C4F      		sbci r19,-4
 14712 6534 F901      		movw r30,r18
 14713 6536 2081      		ld r18,Z
 14714 6538 3181      		ldd r19,Z+1
 14715 653a 4281      		ldd r20,Z+2
 14716 653c 5381      		ldd r21,Z+3
 14717 653e BC01      		movw r22,r24
 14718 6540 CD01      		movw r24,r26
 14719 6542 0E94 0000 		call __ltsf2
 14720 6546 8823      		tst r24
 14721 6548 04F0      		brlt .L497
 14722               		.loc 1 1521 0 is_stmt 0 discriminator 1
 14723 654a 2B81      		ldd r18,Y+3
 14724 654c 3C81      		ldd r19,Y+4
 14725 654e 8BAD      		ldd r24,Y+59
 14726 6550 9CAD      		ldd r25,Y+60
 14727 6552 B901      		movw r22,r18
 14728 6554 0E94 0000 		call is_semicont
 14729 6558 8823      		tst r24
 14730 655a 01F4      		brne .+2
 14731 655c 00C0      		rjmp .L482
 14732               	.L497:
1522:lp_solve_5.5/lp_MPS.c ****           a = lp->orig_upbo[i];
 14733               		.loc 1 1522 0 is_stmt 1
 14734 655e 8BAD      		ldd r24,Y+59
 14735 6560 9CAD      		ldd r25,Y+60
 14736 6562 8255      		subi r24,82
 14737 6564 9D4F      		sbci r25,-3
 14738 6566 FC01      		movw r30,r24
 14739 6568 2081      		ld r18,Z
 14740 656a 3181      		ldd r19,Z+1
 14741 656c 8981      		ldd r24,Y+1
 14742 656e 9A81      		ldd r25,Y+2
 14743 6570 880F      		lsl r24
 14744 6572 991F      		rol r25
 14745 6574 880F      		lsl r24
 14746 6576 991F      		rol r25
 14747 6578 820F      		add r24,r18
 14748 657a 931F      		adc r25,r19
 14749 657c FC01      		movw r30,r24
 14750 657e 8081      		ld r24,Z
 14751 6580 9181      		ldd r25,Z+1
 14752 6582 A281      		ldd r26,Z+2
 14753 6584 B381      		ldd r27,Z+3
 14754 6586 8A8B      		std Y+18,r24
 14755 6588 9B8B      		std Y+19,r25
 14756 658a AC8B      		std Y+20,r26
 14757 658c BD8B      		std Y+21,r27
1523:lp_solve_5.5/lp_MPS.c ****           if(a < lp->infinite)
 14758               		.loc 1 1523 0
 14759 658e 8BAD      		ldd r24,Y+59
 14760 6590 9CAD      		ldd r25,Y+60
 14761 6592 865F      		subi r24,-10
 14762 6594 9C4F      		sbci r25,-4
 14763 6596 FC01      		movw r30,r24
 14764 6598 8081      		ld r24,Z
 14765 659a 9181      		ldd r25,Z+1
 14766 659c A281      		ldd r26,Z+2
 14767 659e B381      		ldd r27,Z+3
 14768 65a0 2A89      		ldd r18,Y+18
 14769 65a2 3B89      		ldd r19,Y+19
 14770 65a4 4C89      		ldd r20,Y+20
 14771 65a6 5D89      		ldd r21,Y+21
 14772 65a8 BC01      		movw r22,r24
 14773 65aa CD01      		movw r24,r26
 14774 65ac 0E94 0000 		call __gtsf2
 14775 65b0 1816      		cp __zero_reg__,r24
 14776 65b2 04F4      		brge .L498
1524:lp_solve_5.5/lp_MPS.c ****             a = unscaled_value(lp, a, i);
 14777               		.loc 1 1524 0
 14778 65b4 2981      		ldd r18,Y+1
 14779 65b6 3A81      		ldd r19,Y+2
 14780 65b8 8A89      		ldd r24,Y+18
 14781 65ba 9B89      		ldd r25,Y+19
 14782 65bc AC89      		ldd r26,Y+20
 14783 65be BD89      		ldd r27,Y+21
 14784 65c0 EBAD      		ldd r30,Y+59
 14785 65c2 FCAD      		ldd r31,Y+60
 14786 65c4 AC01      		movw r20,r24
 14787 65c6 BD01      		movw r22,r26
 14788 65c8 CF01      		movw r24,r30
 14789 65ca 0E94 0000 		call unscaled_value
 14790 65ce DC01      		movw r26,r24
 14791 65d0 CB01      		movw r24,r22
 14792 65d2 8A8B      		std Y+18,r24
 14793 65d4 9B8B      		std Y+19,r25
 14794 65d6 AC8B      		std Y+20,r26
 14795 65d8 BD8B      		std Y+21,r27
 14796               	.L498:
1525:lp_solve_5.5/lp_MPS.c ****           if(putheader) {
 14797               		.loc 1 1525 0
 14798 65da 8B85      		ldd r24,Y+11
 14799 65dc 9C85      		ldd r25,Y+12
 14800 65de 892B      		or r24,r25
 14801 65e0 01F0      		breq .L500
1526:lp_solve_5.5/lp_MPS.c ****             write_data(userhandle, write_modeldata, "BOUNDS\n");
 14802               		.loc 1 1526 0
 14803 65e2 80E0      		ldi r24,lo8(.LC121)
 14804 65e4 90E0      		ldi r25,hi8(.LC121)
 14805 65e6 892F      		mov r24,r25
 14806 65e8 8F93      		push r24
 14807 65ea 80E0      		ldi r24,lo8(.LC121)
 14808 65ec 90E0      		ldi r25,hi8(.LC121)
 14809 65ee 8F93      		push r24
 14810 65f0 CE01      		movw r24,r28
 14811 65f2 8F5B      		subi r24,-65
 14812 65f4 9F4F      		sbci r25,-1
 14813 65f6 FC01      		movw r30,r24
 14814 65f8 2181      		ldd r18,Z+1
 14815 65fa 2F93      		push r18
 14816 65fc FC01      		movw r30,r24
 14817 65fe 8081      		ld r24,Z
 14818 6600 8F93      		push r24
 14819 6602 CE01      		movw r24,r28
 14820 6604 805C      		subi r24,-64
 14821 6606 9F4F      		sbci r25,-1
 14822 6608 FC01      		movw r30,r24
 14823 660a 8081      		ld r24,Z
 14824 660c 8F93      		push r24
 14825 660e 8FAD      		ldd r24,Y+63
 14826 6610 8F93      		push r24
 14827 6612 0E94 0000 		call write_data
 14828 6616 0F90      		pop __tmp_reg__
 14829 6618 0F90      		pop __tmp_reg__
 14830 661a 0F90      		pop __tmp_reg__
 14831 661c 0F90      		pop __tmp_reg__
 14832 661e 0F90      		pop __tmp_reg__
 14833 6620 0F90      		pop __tmp_reg__
1527:lp_solve_5.5/lp_MPS.c ****             putheader = FALSE;
 14834               		.loc 1 1527 0
 14835 6622 1C86      		std Y+12,__zero_reg__
 14836 6624 1B86      		std Y+11,__zero_reg__
 14837               	.L500:
1528:lp_solve_5.5/lp_MPS.c ****           }
1529:lp_solve_5.5/lp_MPS.c ****           if(is_semicont(lp, j)) {
 14838               		.loc 1 1529 0
 14839 6626 2B81      		ldd r18,Y+3
 14840 6628 3C81      		ldd r19,Y+4
 14841 662a 8BAD      		ldd r24,Y+59
 14842 662c 9CAD      		ldd r25,Y+60
 14843 662e B901      		movw r22,r18
 14844 6630 0E94 0000 		call is_semicont
 14845 6634 8823      		tst r24
 14846 6636 01F4      		brne .+2
 14847 6638 00C0      		rjmp .L501
1530:lp_solve_5.5/lp_MPS.c ****             if(is_int(lp, j))
 14848               		.loc 1 1530 0
 14849 663a 2B81      		ldd r18,Y+3
 14850 663c 3C81      		ldd r19,Y+4
 14851 663e 8BAD      		ldd r24,Y+59
 14852 6640 9CAD      		ldd r25,Y+60
 14853 6642 B901      		movw r22,r18
 14854 6644 0E94 0000 		call is_int
 14855 6648 8823      		tst r24
 14856 664a 01F4      		brne .+2
 14857 664c 00C0      		rjmp .L502
1531:lp_solve_5.5/lp_MPS.c ****               write_data(userhandle, write_modeldata, " SI BND       %s  %s\n",
1532:lp_solve_5.5/lp_MPS.c ****                               MPSname(name0, get_col_name(lp, j)),
1533:lp_solve_5.5/lp_MPS.c ****                   (a < lp->infinite) ? formatnumber12(numberbuffer, (double)a) : "            ");
 14858               		.loc 1 1533 0
 14859 664e 8BAD      		ldd r24,Y+59
 14860 6650 9CAD      		ldd r25,Y+60
 14861 6652 865F      		subi r24,-10
 14862 6654 9C4F      		sbci r25,-4
 14863 6656 FC01      		movw r30,r24
 14864 6658 8081      		ld r24,Z
 14865 665a 9181      		ldd r25,Z+1
 14866 665c A281      		ldd r26,Z+2
 14867 665e B381      		ldd r27,Z+3
1531:lp_solve_5.5/lp_MPS.c ****               write_data(userhandle, write_modeldata, " SI BND       %s  %s\n",
 14868               		.loc 1 1531 0
 14869 6660 2A89      		ldd r18,Y+18
 14870 6662 3B89      		ldd r19,Y+19
 14871 6664 4C89      		ldd r20,Y+20
 14872 6666 5D89      		ldd r21,Y+21
 14873 6668 BC01      		movw r22,r24
 14874 666a CD01      		movw r24,r26
 14875 666c 0E94 0000 		call __gtsf2
 14876 6670 1816      		cp __zero_reg__,r24
 14877 6672 04F4      		brge .L533
1531:lp_solve_5.5/lp_MPS.c ****               write_data(userhandle, write_modeldata, " SI BND       %s  %s\n",
 14878               		.loc 1 1531 0 is_stmt 0 discriminator 1
 14879 6674 8A89      		ldd r24,Y+18
 14880 6676 9B89      		ldd r25,Y+19
 14881 6678 AC89      		ldd r26,Y+20
 14882 667a BD89      		ldd r27,Y+21
 14883 667c 9E01      		movw r18,r28
 14884 667e 2D5D      		subi r18,-35
 14885 6680 3F4F      		sbci r19,-1
 14886 6682 AC01      		movw r20,r24
 14887 6684 BD01      		movw r22,r26
 14888 6686 C901      		movw r24,r18
 14889 6688 0E94 0000 		call formatnumber12
 14890 668c 8C01      		movw r16,r24
 14891 668e 00C0      		rjmp .L505
 14892               	.L533:
1531:lp_solve_5.5/lp_MPS.c ****               write_data(userhandle, write_modeldata, " SI BND       %s  %s\n",
 14893               		.loc 1 1531 0 discriminator 2
 14894 6690 00E0      		ldi r16,lo8(.LC127)
 14895 6692 10E0      		ldi r17,hi8(.LC127)
 14896               	.L505:
1531:lp_solve_5.5/lp_MPS.c ****               write_data(userhandle, write_modeldata, " SI BND       %s  %s\n",
 14897               		.loc 1 1531 0 discriminator 4
 14898 6694 2B81      		ldd r18,Y+3
 14899 6696 3C81      		ldd r19,Y+4
 14900 6698 8BAD      		ldd r24,Y+59
 14901 669a 9CAD      		ldd r25,Y+60
 14902 669c B901      		movw r22,r18
 14903 669e 0E94 0000 		call get_col_name
 14904 66a2 AC01      		movw r20,r24
 14905 66a4 CE01      		movw r24,r28
 14906 66a6 C296      		adiw r24,50
 14907 66a8 288D      		ldd r18,Y+24
 14908 66aa 398D      		ldd r19,Y+25
 14909 66ac BA01      		movw r22,r20
 14910 66ae F901      		movw r30,r18
 14911 66b0 0995      		icall
 14912 66b2 212F      		mov r18,r17
 14913 66b4 2F93      		push r18
 14914 66b6 202F      		mov r18,r16
 14915 66b8 2F93      		push r18
 14916 66ba 292F      		mov r18,r25
 14917 66bc 2F93      		push r18
 14918 66be 8F93      		push r24
 14919 66c0 80E0      		ldi r24,lo8(.LC128)
 14920 66c2 90E0      		ldi r25,hi8(.LC128)
 14921 66c4 892F      		mov r24,r25
 14922 66c6 8F93      		push r24
 14923 66c8 80E0      		ldi r24,lo8(.LC128)
 14924 66ca 90E0      		ldi r25,hi8(.LC128)
 14925 66cc 8F93      		push r24
 14926 66ce CE01      		movw r24,r28
 14927 66d0 8F5B      		subi r24,-65
 14928 66d2 9F4F      		sbci r25,-1
 14929 66d4 FC01      		movw r30,r24
 14930 66d6 2181      		ldd r18,Z+1
 14931 66d8 2F93      		push r18
 14932 66da FC01      		movw r30,r24
 14933 66dc 8081      		ld r24,Z
 14934 66de 8F93      		push r24
 14935 66e0 CE01      		movw r24,r28
 14936 66e2 805C      		subi r24,-64
 14937 66e4 9F4F      		sbci r25,-1
 14938 66e6 FC01      		movw r30,r24
 14939 66e8 8081      		ld r24,Z
 14940 66ea 8F93      		push r24
 14941 66ec 8FAD      		ldd r24,Y+63
 14942 66ee 8F93      		push r24
 14943 66f0 0E94 0000 		call write_data
 14944 66f4 4DB7      		in r20,__SP_L__
 14945 66f6 5EB7      		in r21,__SP_H__
 14946 66f8 465F      		subi r20,-10
 14947 66fa 5F4F      		sbci r21,-1
 14948 66fc 0FB6      		in __tmp_reg__,__SREG__
 14949 66fe F894      		cli
 14950 6700 DEBF      		out __SP_H__,r29
 14951 6702 0FBE      		out __SREG__,__tmp_reg__
 14952 6704 CDBF      		out __SP_L__,r28
 14953 6706 00C0      		rjmp .L482
 14954               	.L502:
1534:lp_solve_5.5/lp_MPS.c ****             else
1535:lp_solve_5.5/lp_MPS.c ****               write_data(userhandle, write_modeldata, " SC BND       %s  %s\n",
1536:lp_solve_5.5/lp_MPS.c ****                               MPSname(name0, get_col_name(lp, j)),
1537:lp_solve_5.5/lp_MPS.c ****                               (a < lp->infinite) ? formatnumber12(numberbuffer, (double)a) : "     
 14955               		.loc 1 1537 0 is_stmt 1
 14956 6708 8BAD      		ldd r24,Y+59
 14957 670a 9CAD      		ldd r25,Y+60
 14958 670c 865F      		subi r24,-10
 14959 670e 9C4F      		sbci r25,-4
 14960 6710 FC01      		movw r30,r24
 14961 6712 8081      		ld r24,Z
 14962 6714 9181      		ldd r25,Z+1
 14963 6716 A281      		ldd r26,Z+2
 14964 6718 B381      		ldd r27,Z+3
1535:lp_solve_5.5/lp_MPS.c ****                               MPSname(name0, get_col_name(lp, j)),
 14965               		.loc 1 1535 0
 14966 671a 2A89      		ldd r18,Y+18
 14967 671c 3B89      		ldd r19,Y+19
 14968 671e 4C89      		ldd r20,Y+20
 14969 6720 5D89      		ldd r21,Y+21
 14970 6722 BC01      		movw r22,r24
 14971 6724 CD01      		movw r24,r26
 14972 6726 0E94 0000 		call __gtsf2
 14973 672a 1816      		cp __zero_reg__,r24
 14974 672c 04F4      		brge .L534
1535:lp_solve_5.5/lp_MPS.c ****                               MPSname(name0, get_col_name(lp, j)),
 14975               		.loc 1 1535 0 is_stmt 0 discriminator 1
 14976 672e 8A89      		ldd r24,Y+18
 14977 6730 9B89      		ldd r25,Y+19
 14978 6732 AC89      		ldd r26,Y+20
 14979 6734 BD89      		ldd r27,Y+21
 14980 6736 9E01      		movw r18,r28
 14981 6738 2D5D      		subi r18,-35
 14982 673a 3F4F      		sbci r19,-1
 14983 673c AC01      		movw r20,r24
 14984 673e BD01      		movw r22,r26
 14985 6740 C901      		movw r24,r18
 14986 6742 0E94 0000 		call formatnumber12
 14987 6746 8C01      		movw r16,r24
 14988 6748 00C0      		rjmp .L509
 14989               	.L534:
1535:lp_solve_5.5/lp_MPS.c ****                               MPSname(name0, get_col_name(lp, j)),
 14990               		.loc 1 1535 0 discriminator 2
 14991 674a 00E0      		ldi r16,lo8(.LC127)
 14992 674c 10E0      		ldi r17,hi8(.LC127)
 14993               	.L509:
1535:lp_solve_5.5/lp_MPS.c ****                               MPSname(name0, get_col_name(lp, j)),
 14994               		.loc 1 1535 0 discriminator 4
 14995 674e 2B81      		ldd r18,Y+3
 14996 6750 3C81      		ldd r19,Y+4
 14997 6752 8BAD      		ldd r24,Y+59
 14998 6754 9CAD      		ldd r25,Y+60
 14999 6756 B901      		movw r22,r18
 15000 6758 0E94 0000 		call get_col_name
 15001 675c AC01      		movw r20,r24
 15002 675e CE01      		movw r24,r28
 15003 6760 C296      		adiw r24,50
 15004 6762 288D      		ldd r18,Y+24
 15005 6764 398D      		ldd r19,Y+25
 15006 6766 BA01      		movw r22,r20
 15007 6768 F901      		movw r30,r18
 15008 676a 0995      		icall
 15009 676c 212F      		mov r18,r17
 15010 676e 2F93      		push r18
 15011 6770 202F      		mov r18,r16
 15012 6772 2F93      		push r18
 15013 6774 292F      		mov r18,r25
 15014 6776 2F93      		push r18
 15015 6778 8F93      		push r24
 15016 677a 80E0      		ldi r24,lo8(.LC129)
 15017 677c 90E0      		ldi r25,hi8(.LC129)
 15018 677e 892F      		mov r24,r25
 15019 6780 8F93      		push r24
 15020 6782 80E0      		ldi r24,lo8(.LC129)
 15021 6784 90E0      		ldi r25,hi8(.LC129)
 15022 6786 8F93      		push r24
 15023 6788 CE01      		movw r24,r28
 15024 678a 8F5B      		subi r24,-65
 15025 678c 9F4F      		sbci r25,-1
 15026 678e FC01      		movw r30,r24
 15027 6790 2181      		ldd r18,Z+1
 15028 6792 2F93      		push r18
 15029 6794 FC01      		movw r30,r24
 15030 6796 8081      		ld r24,Z
 15031 6798 8F93      		push r24
 15032 679a CE01      		movw r24,r28
 15033 679c 805C      		subi r24,-64
 15034 679e 9F4F      		sbci r25,-1
 15035 67a0 FC01      		movw r30,r24
 15036 67a2 8081      		ld r24,Z
 15037 67a4 8F93      		push r24
 15038 67a6 8FAD      		ldd r24,Y+63
 15039 67a8 8F93      		push r24
 15040 67aa 0E94 0000 		call write_data
 15041 67ae 4DB7      		in r20,__SP_L__
 15042 67b0 5EB7      		in r21,__SP_H__
 15043 67b2 465F      		subi r20,-10
 15044 67b4 5F4F      		sbci r21,-1
 15045 67b6 0FB6      		in __tmp_reg__,__SREG__
 15046 67b8 F894      		cli
 15047 67ba DEBF      		out __SP_H__,r29
 15048 67bc 0FBE      		out __SREG__,__tmp_reg__
 15049 67be CDBF      		out __SP_L__,r28
 15050 67c0 00C0      		rjmp .L482
 15051               	.L501:
1538:lp_solve_5.5/lp_MPS.c ****           }
1539:lp_solve_5.5/lp_MPS.c ****           else
1540:lp_solve_5.5/lp_MPS.c ****             write_data(userhandle, write_modeldata, " UP BND       %s  %s\n",
 15052               		.loc 1 1540 0 is_stmt 1
 15053 67c2 8A89      		ldd r24,Y+18
 15054 67c4 9B89      		ldd r25,Y+19
 15055 67c6 AC89      		ldd r26,Y+20
 15056 67c8 BD89      		ldd r27,Y+21
 15057 67ca 9E01      		movw r18,r28
 15058 67cc 2D5D      		subi r18,-35
 15059 67ce 3F4F      		sbci r19,-1
 15060 67d0 AC01      		movw r20,r24
 15061 67d2 BD01      		movw r22,r26
 15062 67d4 C901      		movw r24,r18
 15063 67d6 0E94 0000 		call formatnumber12
 15064 67da 8C01      		movw r16,r24
 15065 67dc 2B81      		ldd r18,Y+3
 15066 67de 3C81      		ldd r19,Y+4
 15067 67e0 8BAD      		ldd r24,Y+59
 15068 67e2 9CAD      		ldd r25,Y+60
 15069 67e4 B901      		movw r22,r18
 15070 67e6 0E94 0000 		call get_col_name
 15071 67ea AC01      		movw r20,r24
 15072 67ec CE01      		movw r24,r28
 15073 67ee C296      		adiw r24,50
 15074 67f0 288D      		ldd r18,Y+24
 15075 67f2 398D      		ldd r19,Y+25
 15076 67f4 BA01      		movw r22,r20
 15077 67f6 F901      		movw r30,r18
 15078 67f8 0995      		icall
 15079 67fa 212F      		mov r18,r17
 15080 67fc 2F93      		push r18
 15081 67fe 202F      		mov r18,r16
 15082 6800 2F93      		push r18
 15083 6802 292F      		mov r18,r25
 15084 6804 2F93      		push r18
 15085 6806 8F93      		push r24
 15086 6808 80E0      		ldi r24,lo8(.LC130)
 15087 680a 90E0      		ldi r25,hi8(.LC130)
 15088 680c 892F      		mov r24,r25
 15089 680e 8F93      		push r24
 15090 6810 80E0      		ldi r24,lo8(.LC130)
 15091 6812 90E0      		ldi r25,hi8(.LC130)
 15092 6814 8F93      		push r24
 15093 6816 CE01      		movw r24,r28
 15094 6818 8F5B      		subi r24,-65
 15095 681a 9F4F      		sbci r25,-1
 15096 681c FC01      		movw r30,r24
 15097 681e 2181      		ldd r18,Z+1
 15098 6820 2F93      		push r18
 15099 6822 FC01      		movw r30,r24
 15100 6824 8081      		ld r24,Z
 15101 6826 8F93      		push r24
 15102 6828 CE01      		movw r24,r28
 15103 682a 805C      		subi r24,-64
 15104 682c 9F4F      		sbci r25,-1
 15105 682e FC01      		movw r30,r24
 15106 6830 8081      		ld r24,Z
 15107 6832 8F93      		push r24
 15108 6834 8FAD      		ldd r24,Y+63
 15109 6836 8F93      		push r24
 15110 6838 0E94 0000 		call write_data
 15111 683c 4DB7      		in r20,__SP_L__
 15112 683e 5EB7      		in r21,__SP_H__
 15113 6840 465F      		subi r20,-10
 15114 6842 5F4F      		sbci r21,-1
 15115 6844 0FB6      		in __tmp_reg__,__SREG__
 15116 6846 F894      		cli
 15117 6848 DEBF      		out __SP_H__,r29
 15118 684a 0FBE      		out __SREG__,__tmp_reg__
 15119 684c CDBF      		out __SP_L__,r28
 15120               	.L482:
1473:lp_solve_5.5/lp_MPS.c ****     if(!is_splitvar(lp, i - lp->rows)) {
 15121               		.loc 1 1473 0 discriminator 2
 15122 684e 8981      		ldd r24,Y+1
 15123 6850 9A81      		ldd r25,Y+2
 15124 6852 0196      		adiw r24,1
 15125 6854 9A83      		std Y+2,r25
 15126 6856 8983      		std Y+1,r24
 15127               	.L481:
1473:lp_solve_5.5/lp_MPS.c ****     if(!is_splitvar(lp, i - lp->rows)) {
 15128               		.loc 1 1473 0 is_stmt 0 discriminator 1
 15129 6858 8BAD      		ldd r24,Y+59
 15130 685a 9CAD      		ldd r25,Y+60
 15131 685c 8851      		subi r24,24
 15132 685e 9E4F      		sbci r25,-2
 15133 6860 FC01      		movw r30,r24
 15134 6862 2081      		ld r18,Z
 15135 6864 3181      		ldd r19,Z+1
 15136 6866 8981      		ldd r24,Y+1
 15137 6868 9A81      		ldd r25,Y+2
 15138 686a 2817      		cp r18,r24
 15139 686c 3907      		cpc r19,r25
 15140 686e 04F0      		brlt .+2
 15141 6870 00C0      		rjmp .L510
1541:lp_solve_5.5/lp_MPS.c ****                             MPSname(name0, get_col_name(lp, j)),
1542:lp_solve_5.5/lp_MPS.c ****                             formatnumber12(numberbuffer, (double)a));
1543:lp_solve_5.5/lp_MPS.c ****         }
1544:lp_solve_5.5/lp_MPS.c ****       }
1545:lp_solve_5.5/lp_MPS.c ****     }
1546:lp_solve_5.5/lp_MPS.c **** 
1547:lp_solve_5.5/lp_MPS.c ****  /* Write optional SOS section */
1548:lp_solve_5.5/lp_MPS.c ****   putheader = TRUE;
 15142               		.loc 1 1548 0 is_stmt 1
 15143 6872 81E0      		ldi r24,lo8(1)
 15144 6874 90E0      		ldi r25,0
 15145 6876 9C87      		std Y+12,r25
 15146 6878 8B87      		std Y+11,r24
1549:lp_solve_5.5/lp_MPS.c ****   for(i = 0; i < SOS_count(lp); i++) {
 15147               		.loc 1 1549 0
 15148 687a 1A82      		std Y+2,__zero_reg__
 15149 687c 1982      		std Y+1,__zero_reg__
 15150 687e 00C0      		rjmp .L511
 15151               	.L515:
 15152               	.LBB13:
1550:lp_solve_5.5/lp_MPS.c ****     SOSgroup *SOS = lp->SOS;
 15153               		.loc 1 1550 0
 15154 6880 8BAD      		ldd r24,Y+59
 15155 6882 9CAD      		ldd r25,Y+60
 15156 6884 8256      		subi r24,98
 15157 6886 9D4F      		sbci r25,-3
 15158 6888 FC01      		movw r30,r24
 15159 688a 8081      		ld r24,Z
 15160 688c 9181      		ldd r25,Z+1
 15161 688e 9E8F      		std Y+30,r25
 15162 6890 8D8F      		std Y+29,r24
1551:lp_solve_5.5/lp_MPS.c **** 
1552:lp_solve_5.5/lp_MPS.c ****     if(putheader) {
 15163               		.loc 1 1552 0
 15164 6892 8B85      		ldd r24,Y+11
 15165 6894 9C85      		ldd r25,Y+12
 15166 6896 892B      		or r24,r25
 15167 6898 01F0      		breq .L512
1553:lp_solve_5.5/lp_MPS.c ****       write_data(userhandle, write_modeldata, "SOS\n");
 15168               		.loc 1 1553 0
 15169 689a 80E0      		ldi r24,lo8(.LC131)
 15170 689c 90E0      		ldi r25,hi8(.LC131)
 15171 689e 892F      		mov r24,r25
 15172 68a0 8F93      		push r24
 15173 68a2 80E0      		ldi r24,lo8(.LC131)
 15174 68a4 90E0      		ldi r25,hi8(.LC131)
 15175 68a6 8F93      		push r24
 15176 68a8 CE01      		movw r24,r28
 15177 68aa 8F5B      		subi r24,-65
 15178 68ac 9F4F      		sbci r25,-1
 15179 68ae FC01      		movw r30,r24
 15180 68b0 2181      		ldd r18,Z+1
 15181 68b2 2F93      		push r18
 15182 68b4 FC01      		movw r30,r24
 15183 68b6 8081      		ld r24,Z
 15184 68b8 8F93      		push r24
 15185 68ba CE01      		movw r24,r28
 15186 68bc 805C      		subi r24,-64
 15187 68be 9F4F      		sbci r25,-1
 15188 68c0 FC01      		movw r30,r24
 15189 68c2 8081      		ld r24,Z
 15190 68c4 8F93      		push r24
 15191 68c6 8FAD      		ldd r24,Y+63
 15192 68c8 8F93      		push r24
 15193 68ca 0E94 0000 		call write_data
 15194 68ce 0F90      		pop __tmp_reg__
 15195 68d0 0F90      		pop __tmp_reg__
 15196 68d2 0F90      		pop __tmp_reg__
 15197 68d4 0F90      		pop __tmp_reg__
 15198 68d6 0F90      		pop __tmp_reg__
 15199 68d8 0F90      		pop __tmp_reg__
1554:lp_solve_5.5/lp_MPS.c ****       putheader = FALSE;
 15200               		.loc 1 1554 0
 15201 68da 1C86      		std Y+12,__zero_reg__
 15202 68dc 1B86      		std Y+11,__zero_reg__
 15203               	.L512:
1555:lp_solve_5.5/lp_MPS.c ****     }
1556:lp_solve_5.5/lp_MPS.c ****     write_data(userhandle, write_modeldata, " S%1d SOS       %s  %s\n",
1557:lp_solve_5.5/lp_MPS.c ****                     SOS->sos_list[i]->type,
1558:lp_solve_5.5/lp_MPS.c ****                     MPSname(name0, SOS->sos_list[i]->name),
1559:lp_solve_5.5/lp_MPS.c ****                     formatnumber12(numberbuffer, (double) SOS->sos_list[i]->priority));
 15204               		.loc 1 1559 0
 15205 68de 8D8D      		ldd r24,Y+29
 15206 68e0 9E8D      		ldd r25,Y+30
 15207 68e2 FC01      		movw r30,r24
 15208 68e4 2281      		ldd r18,Z+2
 15209 68e6 3381      		ldd r19,Z+3
 15210 68e8 8981      		ldd r24,Y+1
 15211 68ea 9A81      		ldd r25,Y+2
 15212 68ec 880F      		lsl r24
 15213 68ee 991F      		rol r25
 15214 68f0 820F      		add r24,r18
 15215 68f2 931F      		adc r25,r19
 15216 68f4 FC01      		movw r30,r24
 15217 68f6 8081      		ld r24,Z
 15218 68f8 9181      		ldd r25,Z+1
 15219 68fa FC01      		movw r30,r24
 15220 68fc 8385      		ldd r24,Z+11
 15221 68fe 9485      		ldd r25,Z+12
1556:lp_solve_5.5/lp_MPS.c ****                     SOS->sos_list[i]->type,
 15222               		.loc 1 1556 0
 15223 6900 092E      		mov __tmp_reg__,r25
 15224 6902 000C      		lsl r0
 15225 6904 AA0B      		sbc r26,r26
 15226 6906 BB0B      		sbc r27,r27
 15227 6908 BC01      		movw r22,r24
 15228 690a CD01      		movw r24,r26
 15229 690c 0E94 0000 		call __floatsisf
 15230 6910 9B01      		movw r18,r22
 15231 6912 AC01      		movw r20,r24
 15232 6914 CE01      		movw r24,r28
 15233 6916 8396      		adiw r24,35
 15234 6918 BA01      		movw r22,r20
 15235 691a A901      		movw r20,r18
 15236 691c 0E94 0000 		call formatnumber12
 15237 6920 8C01      		movw r16,r24
1558:lp_solve_5.5/lp_MPS.c ****                     formatnumber12(numberbuffer, (double) SOS->sos_list[i]->priority));
 15238               		.loc 1 1558 0
 15239 6922 8D8D      		ldd r24,Y+29
 15240 6924 9E8D      		ldd r25,Y+30
 15241 6926 FC01      		movw r30,r24
 15242 6928 2281      		ldd r18,Z+2
 15243 692a 3381      		ldd r19,Z+3
 15244 692c 8981      		ldd r24,Y+1
 15245 692e 9A81      		ldd r25,Y+2
 15246 6930 880F      		lsl r24
 15247 6932 991F      		rol r25
 15248 6934 820F      		add r24,r18
 15249 6936 931F      		adc r25,r19
 15250 6938 FC01      		movw r30,r24
 15251 693a 8081      		ld r24,Z
 15252 693c 9181      		ldd r25,Z+1
1556:lp_solve_5.5/lp_MPS.c ****                     SOS->sos_list[i]->type,
 15253               		.loc 1 1556 0
 15254 693e FC01      		movw r30,r24
 15255 6940 4481      		ldd r20,Z+4
 15256 6942 5581      		ldd r21,Z+5
 15257 6944 CE01      		movw r24,r28
 15258 6946 C296      		adiw r24,50
 15259 6948 288D      		ldd r18,Y+24
 15260 694a 398D      		ldd r19,Y+25
 15261 694c BA01      		movw r22,r20
 15262 694e F901      		movw r30,r18
 15263 6950 0995      		icall
 15264 6952 AC01      		movw r20,r24
1557:lp_solve_5.5/lp_MPS.c ****                     MPSname(name0, SOS->sos_list[i]->name),
 15265               		.loc 1 1557 0
 15266 6954 8D8D      		ldd r24,Y+29
 15267 6956 9E8D      		ldd r25,Y+30
 15268 6958 FC01      		movw r30,r24
 15269 695a 2281      		ldd r18,Z+2
 15270 695c 3381      		ldd r19,Z+3
 15271 695e 8981      		ldd r24,Y+1
 15272 6960 9A81      		ldd r25,Y+2
 15273 6962 880F      		lsl r24
 15274 6964 991F      		rol r25
 15275 6966 820F      		add r24,r18
 15276 6968 931F      		adc r25,r19
 15277 696a FC01      		movw r30,r24
 15278 696c 8081      		ld r24,Z
 15279 696e 9181      		ldd r25,Z+1
1556:lp_solve_5.5/lp_MPS.c ****                     SOS->sos_list[i]->type,
 15280               		.loc 1 1556 0
 15281 6970 FC01      		movw r30,r24
 15282 6972 8681      		ldd r24,Z+6
 15283 6974 9781      		ldd r25,Z+7
 15284 6976 212F      		mov r18,r17
 15285 6978 2F93      		push r18
 15286 697a 202F      		mov r18,r16
 15287 697c 2F93      		push r18
 15288 697e 252F      		mov r18,r21
 15289 6980 2F93      		push r18
 15290 6982 242F      		mov r18,r20
 15291 6984 2F93      		push r18
 15292 6986 292F      		mov r18,r25
 15293 6988 2F93      		push r18
 15294 698a 8F93      		push r24
 15295 698c 80E0      		ldi r24,lo8(.LC132)
 15296 698e 90E0      		ldi r25,hi8(.LC132)
 15297 6990 892F      		mov r24,r25
 15298 6992 8F93      		push r24
 15299 6994 80E0      		ldi r24,lo8(.LC132)
 15300 6996 90E0      		ldi r25,hi8(.LC132)
 15301 6998 8F93      		push r24
 15302 699a CE01      		movw r24,r28
 15303 699c 8F5B      		subi r24,-65
 15304 699e 9F4F      		sbci r25,-1
 15305 69a0 FC01      		movw r30,r24
 15306 69a2 2181      		ldd r18,Z+1
 15307 69a4 2F93      		push r18
 15308 69a6 FC01      		movw r30,r24
 15309 69a8 8081      		ld r24,Z
 15310 69aa 8F93      		push r24
 15311 69ac CE01      		movw r24,r28
 15312 69ae 805C      		subi r24,-64
 15313 69b0 9F4F      		sbci r25,-1
 15314 69b2 FC01      		movw r30,r24
 15315 69b4 8081      		ld r24,Z
 15316 69b6 8F93      		push r24
 15317 69b8 8FAD      		ldd r24,Y+63
 15318 69ba 8F93      		push r24
 15319 69bc 0E94 0000 		call write_data
 15320 69c0 4DB7      		in r20,__SP_L__
 15321 69c2 5EB7      		in r21,__SP_H__
 15322 69c4 445F      		subi r20,-12
 15323 69c6 5F4F      		sbci r21,-1
 15324 69c8 0FB6      		in __tmp_reg__,__SREG__
 15325 69ca F894      		cli
 15326 69cc DEBF      		out __SP_H__,r29
 15327 69ce 0FBE      		out __SREG__,__tmp_reg__
 15328 69d0 CDBF      		out __SP_L__,r28
1560:lp_solve_5.5/lp_MPS.c ****     for(j = 1; j <= SOS->sos_list[i]->size; j++) {
 15329               		.loc 1 1560 0
 15330 69d2 81E0      		ldi r24,lo8(1)
 15331 69d4 90E0      		ldi r25,0
 15332 69d6 9C83      		std Y+4,r25
 15333 69d8 8B83      		std Y+3,r24
 15334 69da 00C0      		rjmp .L513
 15335               	.L514:
1561:lp_solve_5.5/lp_MPS.c ****       write_data(userhandle, write_modeldata, "    SOS       %s  %s\n",
1562:lp_solve_5.5/lp_MPS.c ****                       MPSname(name0, get_col_name(lp, SOS->sos_list[i]->members[j])),
1563:lp_solve_5.5/lp_MPS.c ****                       formatnumber12(numberbuffer, (double) SOS->sos_list[i]->weights[j]));
 15336               		.loc 1 1563 0 discriminator 3
 15337 69dc 8D8D      		ldd r24,Y+29
 15338 69de 9E8D      		ldd r25,Y+30
 15339 69e0 FC01      		movw r30,r24
 15340 69e2 2281      		ldd r18,Z+2
 15341 69e4 3381      		ldd r19,Z+3
 15342 69e6 8981      		ldd r24,Y+1
 15343 69e8 9A81      		ldd r25,Y+2
 15344 69ea 880F      		lsl r24
 15345 69ec 991F      		rol r25
 15346 69ee 820F      		add r24,r18
 15347 69f0 931F      		adc r25,r19
 15348 69f2 FC01      		movw r30,r24
 15349 69f4 8081      		ld r24,Z
 15350 69f6 9181      		ldd r25,Z+1
 15351 69f8 FC01      		movw r30,r24
 15352 69fa 2785      		ldd r18,Z+15
 15353 69fc 3089      		ldd r19,Z+16
 15354 69fe 8B81      		ldd r24,Y+3
 15355 6a00 9C81      		ldd r25,Y+4
 15356 6a02 880F      		lsl r24
 15357 6a04 991F      		rol r25
 15358 6a06 880F      		lsl r24
 15359 6a08 991F      		rol r25
 15360 6a0a 820F      		add r24,r18
 15361 6a0c 931F      		adc r25,r19
1561:lp_solve_5.5/lp_MPS.c ****       write_data(userhandle, write_modeldata, "    SOS       %s  %s\n",
 15362               		.loc 1 1561 0 discriminator 3
 15363 6a0e FC01      		movw r30,r24
 15364 6a10 8081      		ld r24,Z
 15365 6a12 9181      		ldd r25,Z+1
 15366 6a14 A281      		ldd r26,Z+2
 15367 6a16 B381      		ldd r27,Z+3
 15368 6a18 9E01      		movw r18,r28
 15369 6a1a 2D5D      		subi r18,-35
 15370 6a1c 3F4F      		sbci r19,-1
 15371 6a1e AC01      		movw r20,r24
 15372 6a20 BD01      		movw r22,r26
 15373 6a22 C901      		movw r24,r18
 15374 6a24 0E94 0000 		call formatnumber12
 15375 6a28 8C01      		movw r16,r24
1562:lp_solve_5.5/lp_MPS.c ****                       formatnumber12(numberbuffer, (double) SOS->sos_list[i]->weights[j]));
 15376               		.loc 1 1562 0 discriminator 3
 15377 6a2a 8D8D      		ldd r24,Y+29
 15378 6a2c 9E8D      		ldd r25,Y+30
 15379 6a2e FC01      		movw r30,r24
 15380 6a30 2281      		ldd r18,Z+2
 15381 6a32 3381      		ldd r19,Z+3
 15382 6a34 8981      		ldd r24,Y+1
 15383 6a36 9A81      		ldd r25,Y+2
 15384 6a38 880F      		lsl r24
 15385 6a3a 991F      		rol r25
 15386 6a3c 820F      		add r24,r18
 15387 6a3e 931F      		adc r25,r19
 15388 6a40 FC01      		movw r30,r24
 15389 6a42 8081      		ld r24,Z
 15390 6a44 9181      		ldd r25,Z+1
 15391 6a46 FC01      		movw r30,r24
 15392 6a48 2585      		ldd r18,Z+13
 15393 6a4a 3685      		ldd r19,Z+14
 15394 6a4c 8B81      		ldd r24,Y+3
 15395 6a4e 9C81      		ldd r25,Y+4
 15396 6a50 880F      		lsl r24
 15397 6a52 991F      		rol r25
 15398 6a54 820F      		add r24,r18
 15399 6a56 931F      		adc r25,r19
1561:lp_solve_5.5/lp_MPS.c ****       write_data(userhandle, write_modeldata, "    SOS       %s  %s\n",
 15400               		.loc 1 1561 0 discriminator 3
 15401 6a58 FC01      		movw r30,r24
 15402 6a5a 2081      		ld r18,Z
 15403 6a5c 3181      		ldd r19,Z+1
 15404 6a5e 8BAD      		ldd r24,Y+59
 15405 6a60 9CAD      		ldd r25,Y+60
 15406 6a62 B901      		movw r22,r18
 15407 6a64 0E94 0000 		call get_col_name
 15408 6a68 AC01      		movw r20,r24
 15409 6a6a CE01      		movw r24,r28
 15410 6a6c C296      		adiw r24,50
 15411 6a6e 288D      		ldd r18,Y+24
 15412 6a70 398D      		ldd r19,Y+25
 15413 6a72 BA01      		movw r22,r20
 15414 6a74 F901      		movw r30,r18
 15415 6a76 0995      		icall
 15416 6a78 212F      		mov r18,r17
 15417 6a7a 2F93      		push r18
 15418 6a7c 202F      		mov r18,r16
 15419 6a7e 2F93      		push r18
 15420 6a80 292F      		mov r18,r25
 15421 6a82 2F93      		push r18
 15422 6a84 8F93      		push r24
 15423 6a86 80E0      		ldi r24,lo8(.LC133)
 15424 6a88 90E0      		ldi r25,hi8(.LC133)
 15425 6a8a 892F      		mov r24,r25
 15426 6a8c 8F93      		push r24
 15427 6a8e 80E0      		ldi r24,lo8(.LC133)
 15428 6a90 90E0      		ldi r25,hi8(.LC133)
 15429 6a92 8F93      		push r24
 15430 6a94 CE01      		movw r24,r28
 15431 6a96 8F5B      		subi r24,-65
 15432 6a98 9F4F      		sbci r25,-1
 15433 6a9a FC01      		movw r30,r24
 15434 6a9c 2181      		ldd r18,Z+1
 15435 6a9e 2F93      		push r18
 15436 6aa0 FC01      		movw r30,r24
 15437 6aa2 8081      		ld r24,Z
 15438 6aa4 8F93      		push r24
 15439 6aa6 CE01      		movw r24,r28
 15440 6aa8 805C      		subi r24,-64
 15441 6aaa 9F4F      		sbci r25,-1
 15442 6aac FC01      		movw r30,r24
 15443 6aae 8081      		ld r24,Z
 15444 6ab0 8F93      		push r24
 15445 6ab2 8FAD      		ldd r24,Y+63
 15446 6ab4 8F93      		push r24
 15447 6ab6 0E94 0000 		call write_data
 15448 6aba 4DB7      		in r20,__SP_L__
 15449 6abc 5EB7      		in r21,__SP_H__
 15450 6abe 465F      		subi r20,-10
 15451 6ac0 5F4F      		sbci r21,-1
 15452 6ac2 0FB6      		in __tmp_reg__,__SREG__
 15453 6ac4 F894      		cli
 15454 6ac6 DEBF      		out __SP_H__,r29
 15455 6ac8 0FBE      		out __SREG__,__tmp_reg__
 15456 6aca CDBF      		out __SP_L__,r28
1560:lp_solve_5.5/lp_MPS.c ****     for(j = 1; j <= SOS->sos_list[i]->size; j++) {
 15457               		.loc 1 1560 0 discriminator 3
 15458 6acc 8B81      		ldd r24,Y+3
 15459 6ace 9C81      		ldd r25,Y+4
 15460 6ad0 0196      		adiw r24,1
 15461 6ad2 9C83      		std Y+4,r25
 15462 6ad4 8B83      		std Y+3,r24
 15463               	.L513:
1560:lp_solve_5.5/lp_MPS.c ****     for(j = 1; j <= SOS->sos_list[i]->size; j++) {
 15464               		.loc 1 1560 0 is_stmt 0 discriminator 1
 15465 6ad6 8D8D      		ldd r24,Y+29
 15466 6ad8 9E8D      		ldd r25,Y+30
 15467 6ada FC01      		movw r30,r24
 15468 6adc 2281      		ldd r18,Z+2
 15469 6ade 3381      		ldd r19,Z+3
 15470 6ae0 8981      		ldd r24,Y+1
 15471 6ae2 9A81      		ldd r25,Y+2
 15472 6ae4 880F      		lsl r24
 15473 6ae6 991F      		rol r25
 15474 6ae8 820F      		add r24,r18
 15475 6aea 931F      		adc r25,r19
 15476 6aec FC01      		movw r30,r24
 15477 6aee 8081      		ld r24,Z
 15478 6af0 9181      		ldd r25,Z+1
 15479 6af2 FC01      		movw r30,r24
 15480 6af4 2185      		ldd r18,Z+9
 15481 6af6 3285      		ldd r19,Z+10
 15482 6af8 8B81      		ldd r24,Y+3
 15483 6afa 9C81      		ldd r25,Y+4
 15484 6afc 2817      		cp r18,r24
 15485 6afe 3907      		cpc r19,r25
 15486 6b00 04F0      		brlt .+2
 15487 6b02 00C0      		rjmp .L514
 15488               	.LBE13:
1549:lp_solve_5.5/lp_MPS.c ****     SOSgroup *SOS = lp->SOS;
 15489               		.loc 1 1549 0 is_stmt 1 discriminator 2
 15490 6b04 8981      		ldd r24,Y+1
 15491 6b06 9A81      		ldd r25,Y+2
 15492 6b08 0196      		adiw r24,1
 15493 6b0a 9A83      		std Y+2,r25
 15494 6b0c 8983      		std Y+1,r24
 15495               	.L511:
1549:lp_solve_5.5/lp_MPS.c ****     SOSgroup *SOS = lp->SOS;
 15496               		.loc 1 1549 0 is_stmt 0 discriminator 1
 15497 6b0e 8BAD      		ldd r24,Y+59
 15498 6b10 9CAD      		ldd r25,Y+60
 15499 6b12 0E94 0000 		call SOS_count
 15500 6b16 9C01      		movw r18,r24
 15501 6b18 8981      		ldd r24,Y+1
 15502 6b1a 9A81      		ldd r25,Y+2
 15503 6b1c 8217      		cp r24,r18
 15504 6b1e 9307      		cpc r25,r19
 15505 6b20 04F4      		brge .+2
 15506 6b22 00C0      		rjmp .L515
1564:lp_solve_5.5/lp_MPS.c ****     }
1565:lp_solve_5.5/lp_MPS.c ****   }
1566:lp_solve_5.5/lp_MPS.c **** 
1567:lp_solve_5.5/lp_MPS.c ****   write_data(userhandle, write_modeldata, "ENDATA\n");
 15507               		.loc 1 1567 0 is_stmt 1
 15508 6b24 80E0      		ldi r24,lo8(.LC134)
 15509 6b26 90E0      		ldi r25,hi8(.LC134)
 15510 6b28 892F      		mov r24,r25
 15511 6b2a 8F93      		push r24
 15512 6b2c 80E0      		ldi r24,lo8(.LC134)
 15513 6b2e 90E0      		ldi r25,hi8(.LC134)
 15514 6b30 8F93      		push r24
 15515 6b32 CE01      		movw r24,r28
 15516 6b34 8F5B      		subi r24,-65
 15517 6b36 9F4F      		sbci r25,-1
 15518 6b38 FC01      		movw r30,r24
 15519 6b3a 2181      		ldd r18,Z+1
 15520 6b3c 2F93      		push r18
 15521 6b3e FC01      		movw r30,r24
 15522 6b40 8081      		ld r24,Z
 15523 6b42 8F93      		push r24
 15524 6b44 CE01      		movw r24,r28
 15525 6b46 805C      		subi r24,-64
 15526 6b48 9F4F      		sbci r25,-1
 15527 6b4a FC01      		movw r30,r24
 15528 6b4c 8081      		ld r24,Z
 15529 6b4e 8F93      		push r24
 15530 6b50 8FAD      		ldd r24,Y+63
 15531 6b52 8F93      		push r24
 15532 6b54 0E94 0000 		call write_data
 15533 6b58 0F90      		pop __tmp_reg__
 15534 6b5a 0F90      		pop __tmp_reg__
 15535 6b5c 0F90      		pop __tmp_reg__
 15536 6b5e 0F90      		pop __tmp_reg__
 15537 6b60 0F90      		pop __tmp_reg__
 15538 6b62 0F90      		pop __tmp_reg__
1568:lp_solve_5.5/lp_MPS.c **** 
1569:lp_solve_5.5/lp_MPS.c ****   lp->names_used = names_used;
 15539               		.loc 1 1569 0
 15540 6b64 8BAD      		ldd r24,Y+59
 15541 6b66 9CAD      		ldd r25,Y+60
 15542 6b68 8250      		subi r24,2
 15543 6b6a 9E4F      		sbci r25,-2
 15544 6b6c 2A8D      		ldd r18,Y+26
 15545 6b6e FC01      		movw r30,r24
 15546 6b70 2083      		st Z,r18
1570:lp_solve_5.5/lp_MPS.c **** 
1571:lp_solve_5.5/lp_MPS.c ****   return(ok);
 15547               		.loc 1 1571 0
 15548 6b72 8989      		ldd r24,Y+17
 15549               	.L516:
 15550               	/* epilogue start */
1572:lp_solve_5.5/lp_MPS.c **** }
 15551               		.loc 1 1572 0 discriminator 1
 15552 6b74 CE5B      		subi r28,-66
 15553 6b76 DF4F      		sbci r29,-1
 15554 6b78 0FB6      		in __tmp_reg__,__SREG__
 15555 6b7a F894      		cli
 15556 6b7c DEBF      		out __SP_H__,r29
 15557 6b7e 0FBE      		out __SREG__,__tmp_reg__
 15558 6b80 CDBF      		out __SP_L__,r28
 15559 6b82 DF91      		pop r29
 15560 6b84 CF91      		pop r28
 15561 6b86 1F91      		pop r17
 15562 6b88 0F91      		pop r16
 15563 6b8a FF90      		pop r15
 15564 6b8c EF90      		pop r14
 15565 6b8e 0895      		ret
 15566               		.cfi_endproc
 15567               	.LFE23:
 15570               	write_lpdata:
 15571               	.LFB24:
1573:lp_solve_5.5/lp_MPS.c **** 
1574:lp_solve_5.5/lp_MPS.c **** static int __WINAPI write_lpdata(void *userhandle, char *buf)
1575:lp_solve_5.5/lp_MPS.c **** {
 15572               		.loc 1 1575 0
 15573               		.cfi_startproc
 15574 6b90 CF93      		push r28
 15575               	.LCFI114:
 15576               		.cfi_def_cfa_offset 3
 15577               		.cfi_offset 28, -2
 15578 6b92 DF93      		push r29
 15579               	.LCFI115:
 15580               		.cfi_def_cfa_offset 4
 15581               		.cfi_offset 29, -3
 15582 6b94 00D0      		rcall .
 15583 6b96 00D0      		rcall .
 15584               	.LCFI116:
 15585               		.cfi_def_cfa_offset 8
 15586 6b98 CDB7      		in r28,__SP_L__
 15587 6b9a DEB7      		in r29,__SP_H__
 15588               	.LCFI117:
 15589               		.cfi_def_cfa_register 28
 15590               	/* prologue: function */
 15591               	/* frame size = 4 */
 15592               	/* stack size = 6 */
 15593               	.L__stack_usage = 6
 15594 6b9c 9A83      		std Y+2,r25
 15595 6b9e 8983      		std Y+1,r24
 15596 6ba0 7C83      		std Y+4,r23
 15597 6ba2 6B83      		std Y+3,r22
1576:lp_solve_5.5/lp_MPS.c ****   fputs(buf, (FILE *) userhandle);
 15598               		.loc 1 1576 0
 15599 6ba4 2981      		ldd r18,Y+1
 15600 6ba6 3A81      		ldd r19,Y+2
 15601 6ba8 8B81      		ldd r24,Y+3
 15602 6baa 9C81      		ldd r25,Y+4
 15603 6bac B901      		movw r22,r18
 15604 6bae 0E94 0000 		call fputs
1577:lp_solve_5.5/lp_MPS.c ****   return(TRUE);
 15605               		.loc 1 1577 0
 15606 6bb2 81E0      		ldi r24,lo8(1)
 15607 6bb4 90E0      		ldi r25,0
 15608               	/* epilogue start */
1578:lp_solve_5.5/lp_MPS.c **** }
 15609               		.loc 1 1578 0
 15610 6bb6 0F90      		pop __tmp_reg__
 15611 6bb8 0F90      		pop __tmp_reg__
 15612 6bba 0F90      		pop __tmp_reg__
 15613 6bbc 0F90      		pop __tmp_reg__
 15614 6bbe DF91      		pop r29
 15615 6bc0 CF91      		pop r28
 15616 6bc2 0895      		ret
 15617               		.cfi_endproc
 15618               	.LFE24:
 15620               		.section	.rodata
 15621               	.LC135:
 15622 0b38 7700      		.string	"w"
 15623               		.text
 15624               	.global	MPS_writefile
 15626               	MPS_writefile:
 15627               	.LFB25:
1579:lp_solve_5.5/lp_MPS.c **** 
1580:lp_solve_5.5/lp_MPS.c **** MYBOOL MPS_writefile(lprec *lp, int typeMPS, char *filename)
1581:lp_solve_5.5/lp_MPS.c **** {
 15628               		.loc 1 1581 0
 15629               		.cfi_startproc
 15630 6bc4 CF93      		push r28
 15631               	.LCFI118:
 15632               		.cfi_def_cfa_offset 3
 15633               		.cfi_offset 28, -2
 15634 6bc6 DF93      		push r29
 15635               	.LCFI119:
 15636               		.cfi_def_cfa_offset 4
 15637               		.cfi_offset 29, -3
 15638 6bc8 CDB7      		in r28,__SP_L__
 15639 6bca DEB7      		in r29,__SP_H__
 15640               	.LCFI120:
 15641               		.cfi_def_cfa_register 28
 15642 6bcc 2997      		sbiw r28,9
 15643               	.LCFI121:
 15644               		.cfi_def_cfa_offset 13
 15645 6bce 0FB6      		in __tmp_reg__,__SREG__
 15646 6bd0 F894      		cli
 15647 6bd2 DEBF      		out __SP_H__,r29
 15648 6bd4 0FBE      		out __SREG__,__tmp_reg__
 15649 6bd6 CDBF      		out __SP_L__,r28
 15650               	/* prologue: function */
 15651               	/* frame size = 9 */
 15652               	/* stack size = 11 */
 15653               	.L__stack_usage = 11
 15654 6bd8 9D83      		std Y+5,r25
 15655 6bda 8C83      		std Y+4,r24
 15656 6bdc 7F83      		std Y+7,r23
 15657 6bde 6E83      		std Y+6,r22
 15658 6be0 5987      		std Y+9,r21
 15659 6be2 4887      		std Y+8,r20
1582:lp_solve_5.5/lp_MPS.c ****   FILE *output = stdout;
 15660               		.loc 1 1582 0
 15661 6be4 8091 0000 		lds r24,__iob+2
 15662 6be8 9091 0000 		lds r25,__iob+2+1
 15663 6bec 9A83      		std Y+2,r25
 15664 6bee 8983      		std Y+1,r24
1583:lp_solve_5.5/lp_MPS.c ****   MYBOOL ok;
1584:lp_solve_5.5/lp_MPS.c **** 
1585:lp_solve_5.5/lp_MPS.c ****   if (filename != NULL) {
 15665               		.loc 1 1585 0
 15666 6bf0 8885      		ldd r24,Y+8
 15667 6bf2 9985      		ldd r25,Y+9
 15668 6bf4 892B      		or r24,r25
 15669 6bf6 01F0      		breq .L538
1586:lp_solve_5.5/lp_MPS.c ****     ok = ((output = fopen(filename, "w")) != NULL);
 15670               		.loc 1 1586 0
 15671 6bf8 8885      		ldd r24,Y+8
 15672 6bfa 9985      		ldd r25,Y+9
 15673 6bfc 60E0      		ldi r22,lo8(.LC135)
 15674 6bfe 70E0      		ldi r23,hi8(.LC135)
 15675 6c00 0E94 0000 		call fopen
 15676 6c04 9A83      		std Y+2,r25
 15677 6c06 8983      		std Y+1,r24
 15678 6c08 21E0      		ldi r18,lo8(1)
 15679 6c0a 8981      		ldd r24,Y+1
 15680 6c0c 9A81      		ldd r25,Y+2
 15681 6c0e 892B      		or r24,r25
 15682 6c10 01F4      		brne .L539
 15683 6c12 20E0      		ldi r18,0
 15684               	.L539:
 15685 6c14 2B83      		std Y+3,r18
1587:lp_solve_5.5/lp_MPS.c ****     if(!ok)
 15686               		.loc 1 1587 0
 15687 6c16 8B81      		ldd r24,Y+3
 15688 6c18 8823      		tst r24
 15689 6c1a 01F4      		brne .L540
1588:lp_solve_5.5/lp_MPS.c ****       return(ok);
 15690               		.loc 1 1588 0
 15691 6c1c 8B81      		ldd r24,Y+3
 15692 6c1e 00C0      		rjmp .L541
 15693               	.L538:
1589:lp_solve_5.5/lp_MPS.c ****   }
1590:lp_solve_5.5/lp_MPS.c ****   else
1591:lp_solve_5.5/lp_MPS.c ****     output = lp->outstream;
 15694               		.loc 1 1591 0
 15695 6c20 8C81      		ldd r24,Y+4
 15696 6c22 9D81      		ldd r25,Y+5
 15697 6c24 845A      		subi r24,-92
 15698 6c26 9D4F      		sbci r25,-3
 15699 6c28 FC01      		movw r30,r24
 15700 6c2a 8081      		ld r24,Z
 15701 6c2c 9181      		ldd r25,Z+1
 15702 6c2e 9A83      		std Y+2,r25
 15703 6c30 8983      		std Y+1,r24
 15704               	.L540:
1592:lp_solve_5.5/lp_MPS.c **** 
1593:lp_solve_5.5/lp_MPS.c ****   ok = MPS_writefileex(lp, typeMPS, (void *) output, write_lpdata);
 15705               		.loc 1 1593 0
 15706 6c32 4981      		ldd r20,Y+1
 15707 6c34 5A81      		ldd r21,Y+2
 15708 6c36 6E81      		ldd r22,Y+6
 15709 6c38 7F81      		ldd r23,Y+7
 15710 6c3a 8C81      		ldd r24,Y+4
 15711 6c3c 9D81      		ldd r25,Y+5
 15712 6c3e 20E0      		ldi r18,lo8(gs(write_lpdata))
 15713 6c40 30E0      		ldi r19,hi8(gs(write_lpdata))
 15714 6c42 0E94 0000 		call MPS_writefileex
 15715 6c46 8B83      		std Y+3,r24
1594:lp_solve_5.5/lp_MPS.c **** 
1595:lp_solve_5.5/lp_MPS.c ****   if (filename != NULL)
 15716               		.loc 1 1595 0
 15717 6c48 8885      		ldd r24,Y+8
 15718 6c4a 9985      		ldd r25,Y+9
 15719 6c4c 892B      		or r24,r25
 15720 6c4e 01F0      		breq .L542
1596:lp_solve_5.5/lp_MPS.c ****     fclose(output);
 15721               		.loc 1 1596 0
 15722 6c50 8981      		ldd r24,Y+1
 15723 6c52 9A81      		ldd r25,Y+2
 15724 6c54 0E94 0000 		call fclose
 15725               	.L542:
1597:lp_solve_5.5/lp_MPS.c **** 
1598:lp_solve_5.5/lp_MPS.c ****   return(ok);
 15726               		.loc 1 1598 0
 15727 6c58 8B81      		ldd r24,Y+3
 15728               	.L541:
 15729               	/* epilogue start */
1599:lp_solve_5.5/lp_MPS.c **** }
 15730               		.loc 1 1599 0
 15731 6c5a 2996      		adiw r28,9
 15732 6c5c 0FB6      		in __tmp_reg__,__SREG__
 15733 6c5e F894      		cli
 15734 6c60 DEBF      		out __SP_H__,r29
 15735 6c62 0FBE      		out __SREG__,__tmp_reg__
 15736 6c64 CDBF      		out __SP_L__,r28
 15737 6c66 DF91      		pop r29
 15738 6c68 CF91      		pop r28
 15739 6c6a 0895      		ret
 15740               		.cfi_endproc
 15741               	.LFE25:
 15743               	.global	MPS_writehandle
 15745               	MPS_writehandle:
 15746               	.LFB26:
1600:lp_solve_5.5/lp_MPS.c **** 
1601:lp_solve_5.5/lp_MPS.c **** MYBOOL MPS_writehandle(lprec *lp, int typeMPS, FILE *output)
1602:lp_solve_5.5/lp_MPS.c **** {
 15747               		.loc 1 1602 0
 15748               		.cfi_startproc
 15749 6c6c CF93      		push r28
 15750               	.LCFI122:
 15751               		.cfi_def_cfa_offset 3
 15752               		.cfi_offset 28, -2
 15753 6c6e DF93      		push r29
 15754               	.LCFI123:
 15755               		.cfi_def_cfa_offset 4
 15756               		.cfi_offset 29, -3
 15757 6c70 CDB7      		in r28,__SP_L__
 15758 6c72 DEB7      		in r29,__SP_H__
 15759               	.LCFI124:
 15760               		.cfi_def_cfa_register 28
 15761 6c74 2797      		sbiw r28,7
 15762               	.LCFI125:
 15763               		.cfi_def_cfa_offset 11
 15764 6c76 0FB6      		in __tmp_reg__,__SREG__
 15765 6c78 F894      		cli
 15766 6c7a DEBF      		out __SP_H__,r29
 15767 6c7c 0FBE      		out __SREG__,__tmp_reg__
 15768 6c7e CDBF      		out __SP_L__,r28
 15769               	/* prologue: function */
 15770               	/* frame size = 7 */
 15771               	/* stack size = 9 */
 15772               	.L__stack_usage = 9
 15773 6c80 9B83      		std Y+3,r25
 15774 6c82 8A83      		std Y+2,r24
 15775 6c84 7D83      		std Y+5,r23
 15776 6c86 6C83      		std Y+4,r22
 15777 6c88 5F83      		std Y+7,r21
 15778 6c8a 4E83      		std Y+6,r20
1603:lp_solve_5.5/lp_MPS.c ****   MYBOOL ok;
1604:lp_solve_5.5/lp_MPS.c **** 
1605:lp_solve_5.5/lp_MPS.c ****   if (output != NULL)
 15779               		.loc 1 1605 0
 15780 6c8c 8E81      		ldd r24,Y+6
 15781 6c8e 9F81      		ldd r25,Y+7
 15782 6c90 892B      		or r24,r25
 15783 6c92 01F0      		breq .L544
1606:lp_solve_5.5/lp_MPS.c ****     set_outputstream(lp, output);
 15784               		.loc 1 1606 0
 15785 6c94 2E81      		ldd r18,Y+6
 15786 6c96 3F81      		ldd r19,Y+7
 15787 6c98 8A81      		ldd r24,Y+2
 15788 6c9a 9B81      		ldd r25,Y+3
 15789 6c9c B901      		movw r22,r18
 15790 6c9e 0E94 0000 		call set_outputstream
 15791               	.L544:
1607:lp_solve_5.5/lp_MPS.c **** 
1608:lp_solve_5.5/lp_MPS.c ****   output = lp->outstream;
 15792               		.loc 1 1608 0
 15793 6ca2 8A81      		ldd r24,Y+2
 15794 6ca4 9B81      		ldd r25,Y+3
 15795 6ca6 845A      		subi r24,-92
 15796 6ca8 9D4F      		sbci r25,-3
 15797 6caa FC01      		movw r30,r24
 15798 6cac 8081      		ld r24,Z
 15799 6cae 9181      		ldd r25,Z+1
 15800 6cb0 9F83      		std Y+7,r25
 15801 6cb2 8E83      		std Y+6,r24
1609:lp_solve_5.5/lp_MPS.c **** 
1610:lp_solve_5.5/lp_MPS.c ****   ok = MPS_writefileex(lp, typeMPS, (void *) output, write_lpdata);
 15802               		.loc 1 1610 0
 15803 6cb4 4E81      		ldd r20,Y+6
 15804 6cb6 5F81      		ldd r21,Y+7
 15805 6cb8 6C81      		ldd r22,Y+4
 15806 6cba 7D81      		ldd r23,Y+5
 15807 6cbc 8A81      		ldd r24,Y+2
 15808 6cbe 9B81      		ldd r25,Y+3
 15809 6cc0 20E0      		ldi r18,lo8(gs(write_lpdata))
 15810 6cc2 30E0      		ldi r19,hi8(gs(write_lpdata))
 15811 6cc4 0E94 0000 		call MPS_writefileex
 15812 6cc8 8983      		std Y+1,r24
1611:lp_solve_5.5/lp_MPS.c **** 
1612:lp_solve_5.5/lp_MPS.c ****   return(ok);
 15813               		.loc 1 1612 0
 15814 6cca 8981      		ldd r24,Y+1
 15815               	/* epilogue start */
1613:lp_solve_5.5/lp_MPS.c **** }
 15816               		.loc 1 1613 0
 15817 6ccc 2796      		adiw r28,7
 15818 6cce 0FB6      		in __tmp_reg__,__SREG__
 15819 6cd0 F894      		cli
 15820 6cd2 DEBF      		out __SP_H__,r29
 15821 6cd4 0FBE      		out __SREG__,__tmp_reg__
 15822 6cd6 CDBF      		out __SP_L__,r28
 15823 6cd8 DF91      		pop r29
 15824 6cda CF91      		pop r28
 15825 6cdc 0895      		ret
 15826               		.cfi_endproc
 15827               	.LFE26:
 15829               		.section	.rodata
 15830               	.LC136:
 15831 0b3a 5225 6400 		.string	"R%d"
 15832               	.LC137:
 15833 0b3e 4325 6400 		.string	"C%d"
 15834               	.LC138:
 15835 0b42 2564 00   		.string	"%d"
 15836               		.text
 15838               	MPS_getnameidx:
 15839               	.LFB27:
1614:lp_solve_5.5/lp_MPS.c **** 
1615:lp_solve_5.5/lp_MPS.c **** 
1616:lp_solve_5.5/lp_MPS.c **** /* Read and write BAS files */
1617:lp_solve_5.5/lp_MPS.c **** /* #define OldNameMatch */
1618:lp_solve_5.5/lp_MPS.c **** #ifdef OldNameMatch
1619:lp_solve_5.5/lp_MPS.c **** static int MPS_getnameidx(lprec *lp, char *varname, MYBOOL isrow)
1620:lp_solve_5.5/lp_MPS.c **** {
1621:lp_solve_5.5/lp_MPS.c ****   int in = -1;
1622:lp_solve_5.5/lp_MPS.c **** 
1623:lp_solve_5.5/lp_MPS.c ****   in = get_nameindex(lp, varname, isrow);
1624:lp_solve_5.5/lp_MPS.c ****   if((in < 0) && (strncmp(varname, (isrow ? ROWNAMEMASK : COLNAMEMASK), 1) == 0)) {
1625:lp_solve_5.5/lp_MPS.c ****     if(sscanf(varname + 1, "%d", &in) != 1)
1626:lp_solve_5.5/lp_MPS.c ****       in = -1;
1627:lp_solve_5.5/lp_MPS.c ****   }
1628:lp_solve_5.5/lp_MPS.c ****   return( in );
1629:lp_solve_5.5/lp_MPS.c **** }
1630:lp_solve_5.5/lp_MPS.c **** #else
1631:lp_solve_5.5/lp_MPS.c **** static int MPS_getnameidx(lprec *lp, char *varname, MYBOOL tryrowfirst)
1632:lp_solve_5.5/lp_MPS.c **** {
 15840               		.loc 1 1632 0
 15841               		.cfi_startproc
 15842 6cde CF93      		push r28
 15843               	.LCFI126:
 15844               		.cfi_def_cfa_offset 3
 15845               		.cfi_offset 28, -2
 15846 6ce0 DF93      		push r29
 15847               	.LCFI127:
 15848               		.cfi_def_cfa_offset 4
 15849               		.cfi_offset 29, -3
 15850 6ce2 CDB7      		in r28,__SP_L__
 15851 6ce4 DEB7      		in r29,__SP_H__
 15852               	.LCFI128:
 15853               		.cfi_def_cfa_register 28
 15854 6ce6 2797      		sbiw r28,7
 15855               	.LCFI129:
 15856               		.cfi_def_cfa_offset 11
 15857 6ce8 0FB6      		in __tmp_reg__,__SREG__
 15858 6cea F894      		cli
 15859 6cec DEBF      		out __SP_H__,r29
 15860 6cee 0FBE      		out __SREG__,__tmp_reg__
 15861 6cf0 CDBF      		out __SP_L__,r28
 15862               	/* prologue: function */
 15863               	/* frame size = 7 */
 15864               	/* stack size = 9 */
 15865               	.L__stack_usage = 9
 15866 6cf2 9C83      		std Y+4,r25
 15867 6cf4 8B83      		std Y+3,r24
 15868 6cf6 7E83      		std Y+6,r23
 15869 6cf8 6D83      		std Y+5,r22
 15870 6cfa 4F83      		std Y+7,r20
1633:lp_solve_5.5/lp_MPS.c ****   int in = -1;
 15871               		.loc 1 1633 0
 15872 6cfc 8FEF      		ldi r24,lo8(-1)
 15873 6cfe 9FEF      		ldi r25,lo8(-1)
 15874 6d00 9A83      		std Y+2,r25
 15875 6d02 8983      		std Y+1,r24
1634:lp_solve_5.5/lp_MPS.c **** 
1635:lp_solve_5.5/lp_MPS.c ****   /* Have we defined our own variable names? */
1636:lp_solve_5.5/lp_MPS.c ****   if(lp->names_used) {
 15876               		.loc 1 1636 0
 15877 6d04 8B81      		ldd r24,Y+3
 15878 6d06 9C81      		ldd r25,Y+4
 15879 6d08 8250      		subi r24,2
 15880 6d0a 9E4F      		sbci r25,-2
 15881 6d0c FC01      		movw r30,r24
 15882 6d0e 8081      		ld r24,Z
 15883 6d10 8823      		tst r24
 15884 6d12 01F4      		brne .+2
 15885 6d14 00C0      		rjmp .L547
1637:lp_solve_5.5/lp_MPS.c ****     /* First check the primary name list */
1638:lp_solve_5.5/lp_MPS.c ****     in = get_nameindex(lp, varname, tryrowfirst);
 15886               		.loc 1 1638 0
 15887 6d16 2D81      		ldd r18,Y+5
 15888 6d18 3E81      		ldd r19,Y+6
 15889 6d1a 8B81      		ldd r24,Y+3
 15890 6d1c 9C81      		ldd r25,Y+4
 15891 6d1e 4F81      		ldd r20,Y+7
 15892 6d20 B901      		movw r22,r18
 15893 6d22 0E94 0000 		call get_nameindex
 15894 6d26 9A83      		std Y+2,r25
 15895 6d28 8983      		std Y+1,r24
1639:lp_solve_5.5/lp_MPS.c ****     if((in > 0) && !tryrowfirst)
 15896               		.loc 1 1639 0
 15897 6d2a 8981      		ldd r24,Y+1
 15898 6d2c 9A81      		ldd r25,Y+2
 15899 6d2e 1816      		cp __zero_reg__,r24
 15900 6d30 1906      		cpc __zero_reg__,r25
 15901 6d32 04F4      		brge .L548
 15902               		.loc 1 1639 0 is_stmt 0 discriminator 1
 15903 6d34 8F81      		ldd r24,Y+7
 15904 6d36 8823      		tst r24
 15905 6d38 01F4      		brne .L548
1640:lp_solve_5.5/lp_MPS.c ****       in += lp->rows;
 15906               		.loc 1 1640 0 is_stmt 1
 15907 6d3a 8B81      		ldd r24,Y+3
 15908 6d3c 9C81      		ldd r25,Y+4
 15909 6d3e 8651      		subi r24,22
 15910 6d40 9E4F      		sbci r25,-2
 15911 6d42 FC01      		movw r30,r24
 15912 6d44 2081      		ld r18,Z
 15913 6d46 3181      		ldd r19,Z+1
 15914 6d48 8981      		ldd r24,Y+1
 15915 6d4a 9A81      		ldd r25,Y+2
 15916 6d4c 820F      		add r24,r18
 15917 6d4e 931F      		adc r25,r19
 15918 6d50 9A83      		std Y+2,r25
 15919 6d52 8983      		std Y+1,r24
 15920 6d54 00C0      		rjmp .L547
 15921               	.L548:
1641:lp_solve_5.5/lp_MPS.c ****     /* If we were unsuccessful, try the secondary name list */
1642:lp_solve_5.5/lp_MPS.c ****     else if(in < 0) {
 15922               		.loc 1 1642 0
 15923 6d56 8981      		ldd r24,Y+1
 15924 6d58 9A81      		ldd r25,Y+2
 15925 6d5a 9923      		tst r25
 15926 6d5c 04F4      		brge .L547
1643:lp_solve_5.5/lp_MPS.c ****       in = get_nameindex(lp, varname, (MYBOOL) !tryrowfirst);
 15927               		.loc 1 1643 0
 15928 6d5e 81E0      		ldi r24,lo8(1)
 15929 6d60 9F81      		ldd r25,Y+7
 15930 6d62 9923      		tst r25
 15931 6d64 01F0      		breq .L549
 15932 6d66 80E0      		ldi r24,0
 15933               	.L549:
 15934 6d68 482F      		mov r20,r24
 15935 6d6a 2D81      		ldd r18,Y+5
 15936 6d6c 3E81      		ldd r19,Y+6
 15937 6d6e 8B81      		ldd r24,Y+3
 15938 6d70 9C81      		ldd r25,Y+4
 15939 6d72 B901      		movw r22,r18
 15940 6d74 0E94 0000 		call get_nameindex
 15941 6d78 9A83      		std Y+2,r25
 15942 6d7a 8983      		std Y+1,r24
1644:lp_solve_5.5/lp_MPS.c ****       if((in > 0) && tryrowfirst)
 15943               		.loc 1 1644 0
 15944 6d7c 8981      		ldd r24,Y+1
 15945 6d7e 9A81      		ldd r25,Y+2
 15946 6d80 1816      		cp __zero_reg__,r24
 15947 6d82 1906      		cpc __zero_reg__,r25
 15948 6d84 04F4      		brge .L547
 15949               		.loc 1 1644 0 is_stmt 0 discriminator 1
 15950 6d86 8F81      		ldd r24,Y+7
 15951 6d88 8823      		tst r24
 15952 6d8a 01F0      		breq .L547
1645:lp_solve_5.5/lp_MPS.c ****         in += lp->rows;
 15953               		.loc 1 1645 0 is_stmt 1
 15954 6d8c 8B81      		ldd r24,Y+3
 15955 6d8e 9C81      		ldd r25,Y+4
 15956 6d90 8651      		subi r24,22
 15957 6d92 9E4F      		sbci r25,-2
 15958 6d94 FC01      		movw r30,r24
 15959 6d96 2081      		ld r18,Z
 15960 6d98 3181      		ldd r19,Z+1
 15961 6d9a 8981      		ldd r24,Y+1
 15962 6d9c 9A81      		ldd r25,Y+2
 15963 6d9e 820F      		add r24,r18
 15964 6da0 931F      		adc r25,r19
 15965 6da2 9A83      		std Y+2,r25
 15966 6da4 8983      		std Y+1,r24
 15967               	.L547:
1646:lp_solve_5.5/lp_MPS.c ****     }
1647:lp_solve_5.5/lp_MPS.c ****   }
1648:lp_solve_5.5/lp_MPS.c ****   /* If not, see if we can match the standard name mask */
1649:lp_solve_5.5/lp_MPS.c **** 
1650:lp_solve_5.5/lp_MPS.c ****   if(in == -1) {
 15968               		.loc 1 1650 0
 15969 6da6 8981      		ldd r24,Y+1
 15970 6da8 9A81      		ldd r25,Y+2
 15971 6daa 0196      		adiw r24,1
 15972 6dac 01F0      		breq .+2
 15973 6dae 00C0      		rjmp .L550
1651:lp_solve_5.5/lp_MPS.c ****     if(strncmp(varname, (tryrowfirst ? ROWNAMEMASK : COLNAMEMASK), 1) == 0) {
 15974               		.loc 1 1651 0
 15975 6db0 8D81      		ldd r24,Y+5
 15976 6db2 9E81      		ldd r25,Y+6
 15977 6db4 FC01      		movw r30,r24
 15978 6db6 2081      		ld r18,Z
 15979 6db8 8F81      		ldd r24,Y+7
 15980 6dba 8823      		tst r24
 15981 6dbc 01F0      		breq .L551
 15982               		.loc 1 1651 0 is_stmt 0 discriminator 1
 15983 6dbe 80E0      		ldi r24,lo8(.LC136)
 15984 6dc0 90E0      		ldi r25,hi8(.LC136)
 15985 6dc2 00C0      		rjmp .L552
 15986               	.L551:
 15987               		.loc 1 1651 0 discriminator 2
 15988 6dc4 80E0      		ldi r24,lo8(.LC137)
 15989 6dc6 90E0      		ldi r25,hi8(.LC137)
 15990               	.L552:
 15991               		.loc 1 1651 0 discriminator 4
 15992 6dc8 FC01      		movw r30,r24
 15993 6dca 8081      		ld r24,Z
 15994 6dcc 2817      		cp r18,r24
 15995 6dce 01F0      		breq .+2
 15996 6dd0 00C0      		rjmp .L553
1652:lp_solve_5.5/lp_MPS.c ****       /* Fail if we did not successfully scan as a valid integer */
1653:lp_solve_5.5/lp_MPS.c ****       if((sscanf(varname + 1, "%d", &in) != 1) ||
 15997               		.loc 1 1653 0 is_stmt 1
 15998 6dd2 8D81      		ldd r24,Y+5
 15999 6dd4 9E81      		ldd r25,Y+6
 16000 6dd6 9C01      		movw r18,r24
 16001 6dd8 2F5F      		subi r18,-1
 16002 6dda 3F4F      		sbci r19,-1
 16003 6ddc CE01      		movw r24,r28
 16004 6dde 0196      		adiw r24,1
 16005 6de0 9F93      		push r25
 16006 6de2 8F93      		push r24
 16007 6de4 80E0      		ldi r24,lo8(.LC138)
 16008 6de6 90E0      		ldi r25,hi8(.LC138)
 16009 6de8 892F      		mov r24,r25
 16010 6dea 8F93      		push r24
 16011 6dec 80E0      		ldi r24,lo8(.LC138)
 16012 6dee 90E0      		ldi r25,hi8(.LC138)
 16013 6df0 8F93      		push r24
 16014 6df2 832F      		mov r24,r19
 16015 6df4 8F93      		push r24
 16016 6df6 822F      		mov r24,r18
 16017 6df8 8F93      		push r24
 16018 6dfa 0E94 0000 		call sscanf
 16019 6dfe 0F90      		pop __tmp_reg__
 16020 6e00 0F90      		pop __tmp_reg__
 16021 6e02 0F90      		pop __tmp_reg__
 16022 6e04 0F90      		pop __tmp_reg__
 16023 6e06 0F90      		pop __tmp_reg__
 16024 6e08 0F90      		pop __tmp_reg__
 16025 6e0a 0197      		sbiw r24,1
 16026 6e0c 01F4      		brne .L554
1654:lp_solve_5.5/lp_MPS.c ****          (in < (tryrowfirst ? 0 : 1)) || (in > (tryrowfirst ? lp->rows : lp->columns)))
 16027               		.loc 1 1654 0 discriminator 1
 16028 6e0e 81E0      		ldi r24,lo8(1)
 16029 6e10 9F81      		ldd r25,Y+7
 16030 6e12 9923      		tst r25
 16031 6e14 01F0      		breq .L555
 16032 6e16 80E0      		ldi r24,0
 16033               	.L555:
 16034 6e18 282F      		mov r18,r24
 16035 6e1a 30E0      		ldi r19,0
 16036 6e1c 8981      		ldd r24,Y+1
 16037 6e1e 9A81      		ldd r25,Y+2
1653:lp_solve_5.5/lp_MPS.c ****          (in < (tryrowfirst ? 0 : 1)) || (in > (tryrowfirst ? lp->rows : lp->columns)))
 16038               		.loc 1 1653 0 discriminator 1
 16039 6e20 8217      		cp r24,r18
 16040 6e22 9307      		cpc r25,r19
 16041 6e24 04F0      		brlt .L554
 16042               		.loc 1 1654 0
 16043 6e26 8F81      		ldd r24,Y+7
 16044 6e28 8823      		tst r24
 16045 6e2a 01F0      		breq .L556
 16046               		.loc 1 1654 0 is_stmt 0 discriminator 1
 16047 6e2c 8B81      		ldd r24,Y+3
 16048 6e2e 9C81      		ldd r25,Y+4
 16049 6e30 8651      		subi r24,22
 16050 6e32 9E4F      		sbci r25,-2
 16051 6e34 FC01      		movw r30,r24
 16052 6e36 8081      		ld r24,Z
 16053 6e38 9181      		ldd r25,Z+1
 16054 6e3a 00C0      		rjmp .L557
 16055               	.L556:
 16056               		.loc 1 1654 0 discriminator 2
 16057 6e3c 8B81      		ldd r24,Y+3
 16058 6e3e 9C81      		ldd r25,Y+4
 16059 6e40 8451      		subi r24,20
 16060 6e42 9E4F      		sbci r25,-2
 16061 6e44 FC01      		movw r30,r24
 16062 6e46 8081      		ld r24,Z
 16063 6e48 9181      		ldd r25,Z+1
 16064               	.L557:
 16065               		.loc 1 1654 0 discriminator 4
 16066 6e4a 2981      		ldd r18,Y+1
 16067 6e4c 3A81      		ldd r19,Y+2
 16068 6e4e 8217      		cp r24,r18
 16069 6e50 9307      		cpc r25,r19
 16070 6e52 04F0      		brlt .+2
 16071 6e54 00C0      		rjmp .L550
 16072               	.L554:
1655:lp_solve_5.5/lp_MPS.c ****         in = -1;
 16073               		.loc 1 1655 0 is_stmt 1
 16074 6e56 8FEF      		ldi r24,lo8(-1)
 16075 6e58 9FEF      		ldi r25,lo8(-1)
 16076 6e5a 9A83      		std Y+2,r25
 16077 6e5c 8983      		std Y+1,r24
 16078 6e5e 00C0      		rjmp .L550
 16079               	.L553:
1656:lp_solve_5.5/lp_MPS.c ****     }
1657:lp_solve_5.5/lp_MPS.c ****     else if(strncmp(varname, (!tryrowfirst ? ROWNAMEMASK : COLNAMEMASK), 1) == 0) {
 16080               		.loc 1 1657 0
 16081 6e60 8D81      		ldd r24,Y+5
 16082 6e62 9E81      		ldd r25,Y+6
 16083 6e64 FC01      		movw r30,r24
 16084 6e66 2081      		ld r18,Z
 16085 6e68 8F81      		ldd r24,Y+7
 16086 6e6a 8823      		tst r24
 16087 6e6c 01F4      		brne .L559
 16088               		.loc 1 1657 0 is_stmt 0 discriminator 1
 16089 6e6e 80E0      		ldi r24,lo8(.LC136)
 16090 6e70 90E0      		ldi r25,hi8(.LC136)
 16091 6e72 00C0      		rjmp .L560
 16092               	.L559:
 16093               		.loc 1 1657 0 discriminator 2
 16094 6e74 80E0      		ldi r24,lo8(.LC137)
 16095 6e76 90E0      		ldi r25,hi8(.LC137)
 16096               	.L560:
 16097               		.loc 1 1657 0 discriminator 4
 16098 6e78 FC01      		movw r30,r24
 16099 6e7a 8081      		ld r24,Z
 16100 6e7c 2817      		cp r18,r24
 16101 6e7e 01F0      		breq .+2
 16102 6e80 00C0      		rjmp .L550
1658:lp_solve_5.5/lp_MPS.c ****       /* Fail if we did not successfully scan as a valid integer */
1659:lp_solve_5.5/lp_MPS.c ****       if((sscanf(varname + 1, "%d", &in) != 1) ||
 16103               		.loc 1 1659 0 is_stmt 1
 16104 6e82 8D81      		ldd r24,Y+5
 16105 6e84 9E81      		ldd r25,Y+6
 16106 6e86 9C01      		movw r18,r24
 16107 6e88 2F5F      		subi r18,-1
 16108 6e8a 3F4F      		sbci r19,-1
 16109 6e8c CE01      		movw r24,r28
 16110 6e8e 0196      		adiw r24,1
 16111 6e90 9F93      		push r25
 16112 6e92 8F93      		push r24
 16113 6e94 80E0      		ldi r24,lo8(.LC138)
 16114 6e96 90E0      		ldi r25,hi8(.LC138)
 16115 6e98 892F      		mov r24,r25
 16116 6e9a 8F93      		push r24
 16117 6e9c 80E0      		ldi r24,lo8(.LC138)
 16118 6e9e 90E0      		ldi r25,hi8(.LC138)
 16119 6ea0 8F93      		push r24
 16120 6ea2 832F      		mov r24,r19
 16121 6ea4 8F93      		push r24
 16122 6ea6 822F      		mov r24,r18
 16123 6ea8 8F93      		push r24
 16124 6eaa 0E94 0000 		call sscanf
 16125 6eae 0F90      		pop __tmp_reg__
 16126 6eb0 0F90      		pop __tmp_reg__
 16127 6eb2 0F90      		pop __tmp_reg__
 16128 6eb4 0F90      		pop __tmp_reg__
 16129 6eb6 0F90      		pop __tmp_reg__
 16130 6eb8 0F90      		pop __tmp_reg__
 16131 6eba 0197      		sbiw r24,1
 16132 6ebc 01F4      		brne .L561
1660:lp_solve_5.5/lp_MPS.c ****          (in < (tryrowfirst ? 0 : 1)) || (in > (tryrowfirst ? lp->rows : lp->columns)))
 16133               		.loc 1 1660 0 discriminator 1
 16134 6ebe 81E0      		ldi r24,lo8(1)
 16135 6ec0 9F81      		ldd r25,Y+7
 16136 6ec2 9923      		tst r25
 16137 6ec4 01F0      		breq .L562
 16138 6ec6 80E0      		ldi r24,0
 16139               	.L562:
 16140 6ec8 282F      		mov r18,r24
 16141 6eca 30E0      		ldi r19,0
 16142 6ecc 8981      		ldd r24,Y+1
 16143 6ece 9A81      		ldd r25,Y+2
1659:lp_solve_5.5/lp_MPS.c ****          (in < (tryrowfirst ? 0 : 1)) || (in > (tryrowfirst ? lp->rows : lp->columns)))
 16144               		.loc 1 1659 0 discriminator 1
 16145 6ed0 8217      		cp r24,r18
 16146 6ed2 9307      		cpc r25,r19
 16147 6ed4 04F0      		brlt .L561
 16148               		.loc 1 1660 0
 16149 6ed6 8F81      		ldd r24,Y+7
 16150 6ed8 8823      		tst r24
 16151 6eda 01F0      		breq .L563
 16152               		.loc 1 1660 0 is_stmt 0 discriminator 1
 16153 6edc 8B81      		ldd r24,Y+3
 16154 6ede 9C81      		ldd r25,Y+4
 16155 6ee0 8651      		subi r24,22
 16156 6ee2 9E4F      		sbci r25,-2
 16157 6ee4 FC01      		movw r30,r24
 16158 6ee6 8081      		ld r24,Z
 16159 6ee8 9181      		ldd r25,Z+1
 16160 6eea 00C0      		rjmp .L564
 16161               	.L563:
 16162               		.loc 1 1660 0 discriminator 2
 16163 6eec 8B81      		ldd r24,Y+3
 16164 6eee 9C81      		ldd r25,Y+4
 16165 6ef0 8451      		subi r24,20
 16166 6ef2 9E4F      		sbci r25,-2
 16167 6ef4 FC01      		movw r30,r24
 16168 6ef6 8081      		ld r24,Z
 16169 6ef8 9181      		ldd r25,Z+1
 16170               	.L564:
 16171               		.loc 1 1660 0 discriminator 4
 16172 6efa 2981      		ldd r18,Y+1
 16173 6efc 3A81      		ldd r19,Y+2
 16174 6efe 8217      		cp r24,r18
 16175 6f00 9307      		cpc r25,r19
 16176 6f02 04F4      		brge .L550
 16177               	.L561:
1661:lp_solve_5.5/lp_MPS.c ****         in = -1;
 16178               		.loc 1 1661 0 is_stmt 1
 16179 6f04 8FEF      		ldi r24,lo8(-1)
 16180 6f06 9FEF      		ldi r25,lo8(-1)
 16181 6f08 9A83      		std Y+2,r25
 16182 6f0a 8983      		std Y+1,r24
 16183               	.L550:
1662:lp_solve_5.5/lp_MPS.c ****     }
1663:lp_solve_5.5/lp_MPS.c ****   }
1664:lp_solve_5.5/lp_MPS.c ****   return( in );
 16184               		.loc 1 1664 0
 16185 6f0c 8981      		ldd r24,Y+1
 16186 6f0e 9A81      		ldd r25,Y+2
 16187               	/* epilogue start */
1665:lp_solve_5.5/lp_MPS.c **** }
 16188               		.loc 1 1665 0
 16189 6f10 2796      		adiw r28,7
 16190 6f12 0FB6      		in __tmp_reg__,__SREG__
 16191 6f14 F894      		cli
 16192 6f16 DEBF      		out __SP_H__,r29
 16193 6f18 0FBE      		out __SREG__,__tmp_reg__
 16194 6f1a CDBF      		out __SP_L__,r28
 16195 6f1c DF91      		pop r29
 16196 6f1e CF91      		pop r28
 16197 6f20 0895      		ret
 16198               		.cfi_endproc
 16199               	.LFE27:
 16201               		.section	.rodata
 16202               	.LC139:
 16203 0b45 4D50 535F 		.string	"MPS_readBAS: unrecognized MPS line type.\n"
 16203      7265 6164 
 16203      4241 533A 
 16203      2075 6E72 
 16203      6563 6F67 
 16204               	.LC140:
 16205 0b6f 4669 6E69 		.string	"Finished reading BAS file\n"
 16205      7368 6564 
 16205      2072 6561 
 16205      6469 6E67 
 16205      2042 4153 
 16206               	.LC141:
 16207 0b8a 556E 7265 		.string	"Unrecognized BAS line %d: %s\n"
 16207      636F 676E 
 16207      697A 6564 
 16207      2042 4153 
 16207      206C 696E 
 16208               		.text
 16209               	.global	MPS_readBAS
 16211               	MPS_readBAS:
 16212               	.LFB28:
1666:lp_solve_5.5/lp_MPS.c **** #endif
1667:lp_solve_5.5/lp_MPS.c **** 
1668:lp_solve_5.5/lp_MPS.c **** MYBOOL MPS_readBAS(lprec *lp, int typeMPS, char *filename, char *info)
1669:lp_solve_5.5/lp_MPS.c **** {
 16213               		.loc 1 1669 0
 16214               		.cfi_startproc
 16215 6f22 8F92      		push r8
 16216               	.LCFI130:
 16217               		.cfi_def_cfa_offset 3
 16218               		.cfi_offset 8, -2
 16219 6f24 9F92      		push r9
 16220               	.LCFI131:
 16221               		.cfi_def_cfa_offset 4
 16222               		.cfi_offset 9, -3
 16223 6f26 AF92      		push r10
 16224               	.LCFI132:
 16225               		.cfi_def_cfa_offset 5
 16226               		.cfi_offset 10, -4
 16227 6f28 BF92      		push r11
 16228               	.LCFI133:
 16229               		.cfi_def_cfa_offset 6
 16230               		.cfi_offset 11, -5
 16231 6f2a CF92      		push r12
 16232               	.LCFI134:
 16233               		.cfi_def_cfa_offset 7
 16234               		.cfi_offset 12, -6
 16235 6f2c DF92      		push r13
 16236               	.LCFI135:
 16237               		.cfi_def_cfa_offset 8
 16238               		.cfi_offset 13, -7
 16239 6f2e EF92      		push r14
 16240               	.LCFI136:
 16241               		.cfi_def_cfa_offset 9
 16242               		.cfi_offset 14, -8
 16243 6f30 FF92      		push r15
 16244               	.LCFI137:
 16245               		.cfi_def_cfa_offset 10
 16246               		.cfi_offset 15, -9
 16247 6f32 0F93      		push r16
 16248               	.LCFI138:
 16249               		.cfi_def_cfa_offset 11
 16250               		.cfi_offset 16, -10
 16251 6f34 1F93      		push r17
 16252               	.LCFI139:
 16253               		.cfi_def_cfa_offset 12
 16254               		.cfi_offset 17, -11
 16255 6f36 CF93      		push r28
 16256               	.LCFI140:
 16257               		.cfi_def_cfa_offset 13
 16258               		.cfi_offset 28, -12
 16259 6f38 DF93      		push r29
 16260               	.LCFI141:
 16261               		.cfi_def_cfa_offset 14
 16262               		.cfi_offset 29, -13
 16263 6f3a CDB7      		in r28,__SP_L__
 16264 6f3c DEB7      		in r29,__SP_H__
 16265               	.LCFI142:
 16266               		.cfi_def_cfa_register 28
 16267 6f3e CF51      		subi r28,31
 16268 6f40 D841      		sbci r29,24
 16269               	.LCFI143:
 16270               		.cfi_def_cfa_offset 6189
 16271 6f42 0FB6      		in __tmp_reg__,__SREG__
 16272 6f44 F894      		cli
 16273 6f46 DEBF      		out __SP_H__,r29
 16274 6f48 0FBE      		out __SREG__,__tmp_reg__
 16275 6f4a CDBF      		out __SP_L__,r28
 16276               	/* prologue: function */
 16277               	/* frame size = 6175 */
 16278               	/* stack size = 6187 */
 16279               	.L__stack_usage = 6187
 16280 6f4c FE01      		movw r30,r28
 16281 6f4e E85E      		subi r30,-24
 16282 6f50 F74E      		sbci r31,-25
 16283 6f52 9183      		std Z+1,r25
 16284 6f54 8083      		st Z,r24
 16285 6f56 CE01      		movw r24,r28
 16286 6f58 865E      		subi r24,-26
 16287 6f5a 974E      		sbci r25,-25
 16288 6f5c FC01      		movw r30,r24
 16289 6f5e 7183      		std Z+1,r23
 16290 6f60 6083      		st Z,r22
 16291 6f62 CE01      		movw r24,r28
 16292 6f64 845E      		subi r24,-28
 16293 6f66 974E      		sbci r25,-25
 16294 6f68 FC01      		movw r30,r24
 16295 6f6a 5183      		std Z+1,r21
 16296 6f6c 4083      		st Z,r20
 16297 6f6e CE01      		movw r24,r28
 16298 6f70 825E      		subi r24,-30
 16299 6f72 974E      		sbci r25,-25
 16300 6f74 FC01      		movw r30,r24
 16301 6f76 3183      		std Z+1,r19
 16302 6f78 2083      		st Z,r18
1670:lp_solve_5.5/lp_MPS.c ****   char   field1[BUFSIZ], field2[BUFSIZ], field3[BUFSIZ], field5[BUFSIZ],
1671:lp_solve_5.5/lp_MPS.c ****          line[BUFSIZ], tmp[BUFSIZ], *ptr;
1672:lp_solve_5.5/lp_MPS.c ****   double field4, field6;
1673:lp_solve_5.5/lp_MPS.c ****   int    ib, in, items, Lineno = 0;
 16303               		.loc 1 1673 0
 16304 6f7a 1886      		std Y+8,__zero_reg__
 16305 6f7c 1F82      		std Y+7,__zero_reg__
1674:lp_solve_5.5/lp_MPS.c ****   MYBOOL ok;
1675:lp_solve_5.5/lp_MPS.c ****   FILE   *input = stdin;
 16306               		.loc 1 1675 0
 16307 6f7e 8091 0000 		lds r24,__iob
 16308 6f82 9091 0000 		lds r25,__iob+1
 16309 6f86 9B87      		std Y+11,r25
 16310 6f88 8A87      		std Y+10,r24
1676:lp_solve_5.5/lp_MPS.c ****   int    (*scan_line)(lprec *lp, int section, char* line, char *field1, char *field2, char *field3,
1677:lp_solve_5.5/lp_MPS.c ****                       double *field4, char *field5, double *field6);
1678:lp_solve_5.5/lp_MPS.c **** 
1679:lp_solve_5.5/lp_MPS.c ****   if((typeMPS & MPSFIXED) == MPSFIXED)
 16311               		.loc 1 1679 0
 16312 6f8a CE01      		movw r24,r28
 16313 6f8c 865E      		subi r24,-26
 16314 6f8e 974E      		sbci r25,-25
 16315 6f90 FC01      		movw r30,r24
 16316 6f92 8081      		ld r24,Z
 16317 6f94 9181      		ldd r25,Z+1
 16318 6f96 8170      		andi r24,1
 16319 6f98 9927      		clr r25
 16320 6f9a 892B      		or r24,r25
 16321 6f9c 01F0      		breq .L567
1680:lp_solve_5.5/lp_MPS.c ****     scan_line = scan_lineFIXED;
 16322               		.loc 1 1680 0
 16323 6f9e 80E0      		ldi r24,lo8(gs(scan_lineFIXED))
 16324 6fa0 90E0      		ldi r25,hi8(gs(scan_lineFIXED))
 16325 6fa2 9D87      		std Y+13,r25
 16326 6fa4 8C87      		std Y+12,r24
 16327 6fa6 00C0      		rjmp .L568
 16328               	.L567:
1681:lp_solve_5.5/lp_MPS.c ****   else if((typeMPS & MPSFREE) == MPSFREE)
 16329               		.loc 1 1681 0
 16330 6fa8 CE01      		movw r24,r28
 16331 6faa 865E      		subi r24,-26
 16332 6fac 974E      		sbci r25,-25
 16333 6fae FC01      		movw r30,r24
 16334 6fb0 8081      		ld r24,Z
 16335 6fb2 9181      		ldd r25,Z+1
 16336 6fb4 8270      		andi r24,2
 16337 6fb6 9927      		clr r25
 16338 6fb8 892B      		or r24,r25
 16339 6fba 01F0      		breq .L569
1682:lp_solve_5.5/lp_MPS.c ****     scan_line = scan_lineFREE;
 16340               		.loc 1 1682 0
 16341 6fbc 80E0      		ldi r24,lo8(gs(scan_lineFREE))
 16342 6fbe 90E0      		ldi r25,hi8(gs(scan_lineFREE))
 16343 6fc0 9D87      		std Y+13,r25
 16344 6fc2 8C87      		std Y+12,r24
 16345 6fc4 00C0      		rjmp .L568
 16346               	.L569:
1683:lp_solve_5.5/lp_MPS.c ****   else {
1684:lp_solve_5.5/lp_MPS.c ****     report(lp, IMPORTANT, "MPS_readBAS: unrecognized MPS line type.\n");
 16347               		.loc 1 1684 0
 16348 6fc6 80E0      		ldi r24,lo8(.LC139)
 16349 6fc8 90E0      		ldi r25,hi8(.LC139)
 16350 6fca 892F      		mov r24,r25
 16351 6fcc 8F93      		push r24
 16352 6fce 80E0      		ldi r24,lo8(.LC139)
 16353 6fd0 90E0      		ldi r25,hi8(.LC139)
 16354 6fd2 8F93      		push r24
 16355 6fd4 1F92      		push __zero_reg__
 16356 6fd6 83E0      		ldi r24,lo8(3)
 16357 6fd8 8F93      		push r24
 16358 6fda CE01      		movw r24,r28
 16359 6fdc 885E      		subi r24,-24
 16360 6fde 974E      		sbci r25,-25
 16361 6fe0 FC01      		movw r30,r24
 16362 6fe2 2181      		ldd r18,Z+1
 16363 6fe4 2F93      		push r18
 16364 6fe6 FC01      		movw r30,r24
 16365 6fe8 8081      		ld r24,Z
 16366 6fea 8F93      		push r24
 16367 6fec 0E94 0000 		call report
 16368 6ff0 0F90      		pop __tmp_reg__
 16369 6ff2 0F90      		pop __tmp_reg__
 16370 6ff4 0F90      		pop __tmp_reg__
 16371 6ff6 0F90      		pop __tmp_reg__
 16372 6ff8 0F90      		pop __tmp_reg__
 16373 6ffa 0F90      		pop __tmp_reg__
1685:lp_solve_5.5/lp_MPS.c ****     return(FALSE);
 16374               		.loc 1 1685 0
 16375 6ffc 80E0      		ldi r24,0
 16376 6ffe 00C0      		rjmp .L602
 16377               	.L568:
1686:lp_solve_5.5/lp_MPS.c ****   }
1687:lp_solve_5.5/lp_MPS.c **** 
1688:lp_solve_5.5/lp_MPS.c ****   ok = (MYBOOL) ((filename != NULL) && ((input = fopen(filename,"r")) != NULL));
 16378               		.loc 1 1688 0
 16379 7000 CE01      		movw r24,r28
 16380 7002 845E      		subi r24,-28
 16381 7004 974E      		sbci r25,-25
 16382 7006 FC01      		movw r30,r24
 16383 7008 8081      		ld r24,Z
 16384 700a 9181      		ldd r25,Z+1
 16385 700c 892B      		or r24,r25
 16386 700e 01F0      		breq .L571
 16387               		.loc 1 1688 0 is_stmt 0 discriminator 1
 16388 7010 CE01      		movw r24,r28
 16389 7012 845E      		subi r24,-28
 16390 7014 974E      		sbci r25,-25
 16391 7016 FC01      		movw r30,r24
 16392 7018 8081      		ld r24,Z
 16393 701a 9181      		ldd r25,Z+1
 16394 701c 60E0      		ldi r22,lo8(.LC13)
 16395 701e 70E0      		ldi r23,hi8(.LC13)
 16396 7020 0E94 0000 		call fopen
 16397 7024 9B87      		std Y+11,r25
 16398 7026 8A87      		std Y+10,r24
 16399 7028 8A85      		ldd r24,Y+10
 16400 702a 9B85      		ldd r25,Y+11
 16401 702c 892B      		or r24,r25
 16402 702e 01F0      		breq .L571
 16403               		.loc 1 1688 0 discriminator 3
 16404 7030 81E0      		ldi r24,lo8(1)
 16405 7032 90E0      		ldi r25,0
 16406 7034 00C0      		rjmp .L572
 16407               	.L571:
 16408               		.loc 1 1688 0 discriminator 4
 16409 7036 80E0      		ldi r24,0
 16410 7038 90E0      		ldi r25,0
 16411               	.L572:
 16412               		.loc 1 1688 0 discriminator 6
 16413 703a 8987      		std Y+9,r24
1689:lp_solve_5.5/lp_MPS.c ****   if(!ok)
 16414               		.loc 1 1689 0 is_stmt 1 discriminator 6
 16415 703c 8985      		ldd r24,Y+9
 16416 703e 8823      		tst r24
 16417 7040 01F4      		brne .L573
1690:lp_solve_5.5/lp_MPS.c ****     return(ok);
 16418               		.loc 1 1690 0
 16419 7042 8985      		ldd r24,Y+9
 16420 7044 00C0      		rjmp .L602
 16421               	.L573:
1691:lp_solve_5.5/lp_MPS.c ****   default_basis(lp);
 16422               		.loc 1 1691 0
 16423 7046 CE01      		movw r24,r28
 16424 7048 885E      		subi r24,-24
 16425 704a 974E      		sbci r25,-25
 16426 704c FC01      		movw r30,r24
 16427 704e 8081      		ld r24,Z
 16428 7050 9181      		ldd r25,Z+1
 16429 7052 0E94 0000 		call default_basis
1692:lp_solve_5.5/lp_MPS.c **** 
1693:lp_solve_5.5/lp_MPS.c ****   /* Let's initialize line to all zero's */
1694:lp_solve_5.5/lp_MPS.c ****   MEMCLEAR(line, BUFSIZ);
 16430               		.loc 1 1694 0
 16431 7056 CE01      		movw r24,r28
 16432 7058 805F      		subi r24,-16
 16433 705a 9F4E      		sbci r25,-17
 16434 705c 40E0      		ldi r20,0
 16435 705e 54E0      		ldi r21,lo8(4)
 16436 7060 60E0      		ldi r22,0
 16437 7062 70E0      		ldi r23,0
 16438 7064 0E94 0000 		call memset
1695:lp_solve_5.5/lp_MPS.c ****   ok = FALSE;
 16439               		.loc 1 1695 0
 16440 7068 1986      		std Y+9,__zero_reg__
1696:lp_solve_5.5/lp_MPS.c ****   while(fgets(line, BUFSIZ - 1, input)) {
 16441               		.loc 1 1696 0
 16442 706a 00C0      		rjmp .L574
 16443               	.L598:
1697:lp_solve_5.5/lp_MPS.c ****     Lineno++;
 16444               		.loc 1 1697 0
 16445 706c 8F81      		ldd r24,Y+7
 16446 706e 9885      		ldd r25,Y+8
 16447 7070 0196      		adiw r24,1
 16448 7072 9887      		std Y+8,r25
 16449 7074 8F83      		std Y+7,r24
1698:lp_solve_5.5/lp_MPS.c **** 
1699:lp_solve_5.5/lp_MPS.c ****     for(ptr = line; (*ptr) && (isspace((unsigned char) *ptr)); ptr++);
 16450               		.loc 1 1699 0
 16451 7076 CE01      		movw r24,r28
 16452 7078 805F      		subi r24,-16
 16453 707a 9F4E      		sbci r25,-17
 16454 707c 9A83      		std Y+2,r25
 16455 707e 8983      		std Y+1,r24
 16456 7080 00C0      		rjmp .L575
 16457               	.L577:
 16458               		.loc 1 1699 0 is_stmt 0 discriminator 4
 16459 7082 8981      		ldd r24,Y+1
 16460 7084 9A81      		ldd r25,Y+2
 16461 7086 0196      		adiw r24,1
 16462 7088 9A83      		std Y+2,r25
 16463 708a 8983      		std Y+1,r24
 16464               	.L575:
 16465               		.loc 1 1699 0 discriminator 1
 16466 708c 8981      		ldd r24,Y+1
 16467 708e 9A81      		ldd r25,Y+2
 16468 7090 FC01      		movw r30,r24
 16469 7092 8081      		ld r24,Z
 16470 7094 8823      		tst r24
 16471 7096 01F0      		breq .L576
 16472               		.loc 1 1699 0 discriminator 3
 16473 7098 8981      		ldd r24,Y+1
 16474 709a 9A81      		ldd r25,Y+2
 16475 709c FC01      		movw r30,r24
 16476 709e 8081      		ld r24,Z
 16477 70a0 882F      		mov r24,r24
 16478 70a2 90E0      		ldi r25,0
 16479 70a4 0E94 0000 		call isspace
 16480 70a8 892B      		or r24,r25
 16481 70aa 01F4      		brne .L577
 16482               	.L576:
1700:lp_solve_5.5/lp_MPS.c **** 
1701:lp_solve_5.5/lp_MPS.c ****     /* skip lines which start with "*", they are comment */
1702:lp_solve_5.5/lp_MPS.c ****     if((line[0] == '*') || (*ptr == 0) || (*ptr == '\n') || (*ptr == '\r')) {
 16483               		.loc 1 1702 0 is_stmt 1
 16484 70ac CE01      		movw r24,r28
 16485 70ae 805F      		subi r24,-16
 16486 70b0 9F4E      		sbci r25,-17
 16487 70b2 FC01      		movw r30,r24
 16488 70b4 8081      		ld r24,Z
 16489 70b6 8A32      		cpi r24,lo8(42)
 16490 70b8 01F0      		breq .L578
 16491               		.loc 1 1702 0 is_stmt 0 discriminator 1
 16492 70ba 8981      		ldd r24,Y+1
 16493 70bc 9A81      		ldd r25,Y+2
 16494 70be FC01      		movw r30,r24
 16495 70c0 8081      		ld r24,Z
 16496 70c2 8823      		tst r24
 16497 70c4 01F0      		breq .L578
 16498               		.loc 1 1702 0 discriminator 2
 16499 70c6 8981      		ldd r24,Y+1
 16500 70c8 9A81      		ldd r25,Y+2
 16501 70ca FC01      		movw r30,r24
 16502 70cc 8081      		ld r24,Z
 16503 70ce 8A30      		cpi r24,lo8(10)
 16504 70d0 01F0      		breq .L578
 16505               		.loc 1 1702 0 discriminator 3
 16506 70d2 8981      		ldd r24,Y+1
 16507 70d4 9A81      		ldd r25,Y+2
 16508 70d6 FC01      		movw r30,r24
 16509 70d8 8081      		ld r24,Z
 16510 70da 8D30      		cpi r24,lo8(13)
 16511 70dc 01F4      		brne .L579
 16512               	.L578:
1703:lp_solve_5.5/lp_MPS.c ****       report(lp, FULL, "Comment on line %d: %s", Lineno, line);
 16513               		.loc 1 1703 0 is_stmt 1
 16514 70de CE01      		movw r24,r28
 16515 70e0 805F      		subi r24,-16
 16516 70e2 9F4E      		sbci r25,-17
 16517 70e4 292F      		mov r18,r25
 16518 70e6 2F93      		push r18
 16519 70e8 8F93      		push r24
 16520 70ea 8885      		ldd r24,Y+8
 16521 70ec 8F93      		push r24
 16522 70ee 8F81      		ldd r24,Y+7
 16523 70f0 8F93      		push r24
 16524 70f2 80E0      		ldi r24,lo8(.LC16)
 16525 70f4 90E0      		ldi r25,hi8(.LC16)
 16526 70f6 892F      		mov r24,r25
 16527 70f8 8F93      		push r24
 16528 70fa 80E0      		ldi r24,lo8(.LC16)
 16529 70fc 90E0      		ldi r25,hi8(.LC16)
 16530 70fe 8F93      		push r24
 16531 7100 1F92      		push __zero_reg__
 16532 7102 86E0      		ldi r24,lo8(6)
 16533 7104 8F93      		push r24
 16534 7106 CE01      		movw r24,r28
 16535 7108 885E      		subi r24,-24
 16536 710a 974E      		sbci r25,-25
 16537 710c FC01      		movw r30,r24
 16538 710e 2181      		ldd r18,Z+1
 16539 7110 2F93      		push r18
 16540 7112 FC01      		movw r30,r24
 16541 7114 8081      		ld r24,Z
 16542 7116 8F93      		push r24
 16543 7118 0E94 0000 		call report
 16544 711c 8DB7      		in r24,__SP_L__
 16545 711e 9EB7      		in r25,__SP_H__
 16546 7120 0A96      		adiw r24,10
 16547 7122 0FB6      		in __tmp_reg__,__SREG__
 16548 7124 F894      		cli
 16549 7126 DEBF      		out __SP_H__,r29
 16550 7128 0FBE      		out __SREG__,__tmp_reg__
 16551 712a CDBF      		out __SP_L__,r28
1704:lp_solve_5.5/lp_MPS.c ****       continue;
 16552               		.loc 1 1704 0
 16553 712c 00C0      		rjmp .L574
 16554               	.L579:
1705:lp_solve_5.5/lp_MPS.c ****     }
1706:lp_solve_5.5/lp_MPS.c **** 
1707:lp_solve_5.5/lp_MPS.c ****     report(lp, FULL, "Line %6d: %s", Lineno, line);
 16555               		.loc 1 1707 0
 16556 712e CE01      		movw r24,r28
 16557 7130 805F      		subi r24,-16
 16558 7132 9F4E      		sbci r25,-17
 16559 7134 292F      		mov r18,r25
 16560 7136 2F93      		push r18
 16561 7138 8F93      		push r24
 16562 713a 8885      		ldd r24,Y+8
 16563 713c 8F93      		push r24
 16564 713e 8F81      		ldd r24,Y+7
 16565 7140 8F93      		push r24
 16566 7142 80E0      		ldi r24,lo8(.LC17)
 16567 7144 90E0      		ldi r25,hi8(.LC17)
 16568 7146 892F      		mov r24,r25
 16569 7148 8F93      		push r24
 16570 714a 80E0      		ldi r24,lo8(.LC17)
 16571 714c 90E0      		ldi r25,hi8(.LC17)
 16572 714e 8F93      		push r24
 16573 7150 1F92      		push __zero_reg__
 16574 7152 86E0      		ldi r24,lo8(6)
 16575 7154 8F93      		push r24
 16576 7156 CE01      		movw r24,r28
 16577 7158 885E      		subi r24,-24
 16578 715a 974E      		sbci r25,-25
 16579 715c FC01      		movw r30,r24
 16580 715e 2181      		ldd r18,Z+1
 16581 7160 2F93      		push r18
 16582 7162 FC01      		movw r30,r24
 16583 7164 8081      		ld r24,Z
 16584 7166 8F93      		push r24
 16585 7168 0E94 0000 		call report
 16586 716c 8DB7      		in r24,__SP_L__
 16587 716e 9EB7      		in r25,__SP_H__
 16588 7170 0A96      		adiw r24,10
 16589 7172 0FB6      		in __tmp_reg__,__SREG__
 16590 7174 F894      		cli
 16591 7176 DEBF      		out __SP_H__,r29
 16592 7178 0FBE      		out __SREG__,__tmp_reg__
 16593 717a CDBF      		out __SP_L__,r28
1708:lp_solve_5.5/lp_MPS.c **** 
1709:lp_solve_5.5/lp_MPS.c ****     /* first check for "special" lines: in our case only NAME and ENDATA,
1710:lp_solve_5.5/lp_MPS.c ****        ...this must start in the first position of line */
1711:lp_solve_5.5/lp_MPS.c ****     if(line[0] != ' ') {
 16594               		.loc 1 1711 0
 16595 717c CE01      		movw r24,r28
 16596 717e 805F      		subi r24,-16
 16597 7180 9F4E      		sbci r25,-17
 16598 7182 FC01      		movw r30,r24
 16599 7184 8081      		ld r24,Z
 16600 7186 8032      		cpi r24,lo8(32)
 16601 7188 01F4      		brne .+2
 16602 718a 00C0      		rjmp .L580
1712:lp_solve_5.5/lp_MPS.c ****       sscanf(line, "%s", tmp);
 16603               		.loc 1 1712 0
 16604 718c CE01      		movw r24,r28
 16605 718e 805F      		subi r24,-16
 16606 7190 9B4E      		sbci r25,-21
 16607 7192 292F      		mov r18,r25
 16608 7194 2F93      		push r18
 16609 7196 8F93      		push r24
 16610 7198 80E0      		ldi r24,lo8(.LC0)
 16611 719a 90E0      		ldi r25,hi8(.LC0)
 16612 719c 892F      		mov r24,r25
 16613 719e 8F93      		push r24
 16614 71a0 80E0      		ldi r24,lo8(.LC0)
 16615 71a2 90E0      		ldi r25,hi8(.LC0)
 16616 71a4 8F93      		push r24
 16617 71a6 CE01      		movw r24,r28
 16618 71a8 805F      		subi r24,-16
 16619 71aa 9F4E      		sbci r25,-17
 16620 71ac 292F      		mov r18,r25
 16621 71ae 2F93      		push r18
 16622 71b0 8F93      		push r24
 16623 71b2 0E94 0000 		call sscanf
 16624 71b6 0F90      		pop __tmp_reg__
 16625 71b8 0F90      		pop __tmp_reg__
 16626 71ba 0F90      		pop __tmp_reg__
 16627 71bc 0F90      		pop __tmp_reg__
 16628 71be 0F90      		pop __tmp_reg__
 16629 71c0 0F90      		pop __tmp_reg__
1713:lp_solve_5.5/lp_MPS.c ****       if(strcmp(tmp, "NAME") == 0) {
 16630               		.loc 1 1713 0
 16631 71c2 CE01      		movw r24,r28
 16632 71c4 805F      		subi r24,-16
 16633 71c6 9B4E      		sbci r25,-21
 16634 71c8 60E0      		ldi r22,lo8(.LC18)
 16635 71ca 70E0      		ldi r23,hi8(.LC18)
 16636 71cc 0E94 0000 		call strcmp
 16637 71d0 892B      		or r24,r25
 16638 71d2 01F0      		breq .+2
 16639 71d4 00C0      		rjmp .L581
1714:lp_solve_5.5/lp_MPS.c ****         if(info != NULL) {
 16640               		.loc 1 1714 0
 16641 71d6 CE01      		movw r24,r28
 16642 71d8 825E      		subi r24,-30
 16643 71da 974E      		sbci r25,-25
 16644 71dc FC01      		movw r30,r24
 16645 71de 8081      		ld r24,Z
 16646 71e0 9181      		ldd r25,Z+1
 16647 71e2 892B      		or r24,r25
 16648 71e4 01F4      		brne .+2
 16649 71e6 00C0      		rjmp .L574
1715:lp_solve_5.5/lp_MPS.c ****           *info = 0;
 16650               		.loc 1 1715 0
 16651 71e8 CE01      		movw r24,r28
 16652 71ea 825E      		subi r24,-30
 16653 71ec 974E      		sbci r25,-25
 16654 71ee FC01      		movw r30,r24
 16655 71f0 8081      		ld r24,Z
 16656 71f2 9181      		ldd r25,Z+1
 16657 71f4 FC01      		movw r30,r24
 16658 71f6 1082      		st Z,__zero_reg__
1716:lp_solve_5.5/lp_MPS.c ****           for(ptr = line + 4; (*ptr) && (isspace((unsigned char) *ptr)); ptr++);
 16659               		.loc 1 1716 0
 16660 71f8 CE01      		movw r24,r28
 16661 71fa 805F      		subi r24,-16
 16662 71fc 9F4E      		sbci r25,-17
 16663 71fe 0496      		adiw r24,4
 16664 7200 9A83      		std Y+2,r25
 16665 7202 8983      		std Y+1,r24
 16666 7204 00C0      		rjmp .L583
 16667               	.L585:
 16668               		.loc 1 1716 0 is_stmt 0 discriminator 4
 16669 7206 8981      		ldd r24,Y+1
 16670 7208 9A81      		ldd r25,Y+2
 16671 720a 0196      		adiw r24,1
 16672 720c 9A83      		std Y+2,r25
 16673 720e 8983      		std Y+1,r24
 16674               	.L583:
 16675               		.loc 1 1716 0 discriminator 1
 16676 7210 8981      		ldd r24,Y+1
 16677 7212 9A81      		ldd r25,Y+2
 16678 7214 FC01      		movw r30,r24
 16679 7216 8081      		ld r24,Z
 16680 7218 8823      		tst r24
 16681 721a 01F0      		breq .L584
 16682               		.loc 1 1716 0 discriminator 3
 16683 721c 8981      		ldd r24,Y+1
 16684 721e 9A81      		ldd r25,Y+2
 16685 7220 FC01      		movw r30,r24
 16686 7222 8081      		ld r24,Z
 16687 7224 882F      		mov r24,r24
 16688 7226 90E0      		ldi r25,0
 16689 7228 0E94 0000 		call isspace
 16690 722c 892B      		or r24,r25
 16691 722e 01F4      		brne .L585
 16692               	.L584:
1717:lp_solve_5.5/lp_MPS.c ****           in = (int) strlen(ptr);
 16693               		.loc 1 1717 0 is_stmt 1
 16694 7230 8981      		ldd r24,Y+1
 16695 7232 9A81      		ldd r25,Y+2
 16696 7234 0E94 0000 		call strlen
 16697 7238 9E83      		std Y+6,r25
 16698 723a 8D83      		std Y+5,r24
1718:lp_solve_5.5/lp_MPS.c ****           while ((in > 0) && ((ptr[in - 1] == '\r') || (ptr[in - 1] == '\n') || isspace(ptr[in - 1]
 16699               		.loc 1 1718 0
 16700 723c 00C0      		rjmp .L586
 16701               	.L588:
1719:lp_solve_5.5/lp_MPS.c ****             in--;
 16702               		.loc 1 1719 0
 16703 723e 8D81      		ldd r24,Y+5
 16704 7240 9E81      		ldd r25,Y+6
 16705 7242 0197      		sbiw r24,1
 16706 7244 9E83      		std Y+6,r25
 16707 7246 8D83      		std Y+5,r24
 16708               	.L586:
1718:lp_solve_5.5/lp_MPS.c ****           while ((in > 0) && ((ptr[in - 1] == '\r') || (ptr[in - 1] == '\n') || isspace(ptr[in - 1]
 16709               		.loc 1 1718 0
 16710 7248 8D81      		ldd r24,Y+5
 16711 724a 9E81      		ldd r25,Y+6
 16712 724c 1816      		cp __zero_reg__,r24
 16713 724e 1906      		cpc __zero_reg__,r25
 16714 7250 04F4      		brge .L587
1718:lp_solve_5.5/lp_MPS.c ****           while ((in > 0) && ((ptr[in - 1] == '\r') || (ptr[in - 1] == '\n') || isspace(ptr[in - 1]
 16715               		.loc 1 1718 0 is_stmt 0 discriminator 1
 16716 7252 8D81      		ldd r24,Y+5
 16717 7254 9E81      		ldd r25,Y+6
 16718 7256 0197      		sbiw r24,1
 16719 7258 2981      		ldd r18,Y+1
 16720 725a 3A81      		ldd r19,Y+2
 16721 725c 820F      		add r24,r18
 16722 725e 931F      		adc r25,r19
 16723 7260 FC01      		movw r30,r24
 16724 7262 8081      		ld r24,Z
 16725 7264 8D30      		cpi r24,lo8(13)
 16726 7266 01F0      		breq .L588
1718:lp_solve_5.5/lp_MPS.c ****           while ((in > 0) && ((ptr[in - 1] == '\r') || (ptr[in - 1] == '\n') || isspace(ptr[in - 1]
 16727               		.loc 1 1718 0 discriminator 2
 16728 7268 8D81      		ldd r24,Y+5
 16729 726a 9E81      		ldd r25,Y+6
 16730 726c 0197      		sbiw r24,1
 16731 726e 2981      		ldd r18,Y+1
 16732 7270 3A81      		ldd r19,Y+2
 16733 7272 820F      		add r24,r18
 16734 7274 931F      		adc r25,r19
 16735 7276 FC01      		movw r30,r24
 16736 7278 8081      		ld r24,Z
 16737 727a 8A30      		cpi r24,lo8(10)
 16738 727c 01F0      		breq .L588
1718:lp_solve_5.5/lp_MPS.c ****           while ((in > 0) && ((ptr[in - 1] == '\r') || (ptr[in - 1] == '\n') || isspace(ptr[in - 1]
 16739               		.loc 1 1718 0 discriminator 3
 16740 727e 8D81      		ldd r24,Y+5
 16741 7280 9E81      		ldd r25,Y+6
 16742 7282 0197      		sbiw r24,1
 16743 7284 2981      		ldd r18,Y+1
 16744 7286 3A81      		ldd r19,Y+2
 16745 7288 820F      		add r24,r18
 16746 728a 931F      		adc r25,r19
 16747 728c FC01      		movw r30,r24
 16748 728e 8081      		ld r24,Z
 16749 7290 882F      		mov r24,r24
 16750 7292 90E0      		ldi r25,0
 16751 7294 0E94 0000 		call isspace
 16752 7298 892B      		or r24,r25
 16753 729a 01F4      		brne .L588
 16754               	.L587:
1720:lp_solve_5.5/lp_MPS.c ****           ptr[in] = 0;
 16755               		.loc 1 1720 0 is_stmt 1
 16756 729c 8D81      		ldd r24,Y+5
 16757 729e 9E81      		ldd r25,Y+6
 16758 72a0 2981      		ldd r18,Y+1
 16759 72a2 3A81      		ldd r19,Y+2
 16760 72a4 820F      		add r24,r18
 16761 72a6 931F      		adc r25,r19
 16762 72a8 FC01      		movw r30,r24
 16763 72aa 1082      		st Z,__zero_reg__
1721:lp_solve_5.5/lp_MPS.c ****           strcpy(info, ptr);
 16764               		.loc 1 1721 0
 16765 72ac 2981      		ldd r18,Y+1
 16766 72ae 3A81      		ldd r19,Y+2
 16767 72b0 CE01      		movw r24,r28
 16768 72b2 825E      		subi r24,-30
 16769 72b4 974E      		sbci r25,-25
 16770 72b6 FC01      		movw r30,r24
 16771 72b8 8081      		ld r24,Z
 16772 72ba 9181      		ldd r25,Z+1
 16773 72bc B901      		movw r22,r18
 16774 72be 0E94 0000 		call strcpy
 16775 72c2 00C0      		rjmp .L574
 16776               	.L581:
1722:lp_solve_5.5/lp_MPS.c ****         }
1723:lp_solve_5.5/lp_MPS.c ****       }
1724:lp_solve_5.5/lp_MPS.c ****       else if(strcmp(tmp, "ENDATA") == 0) {
 16777               		.loc 1 1724 0
 16778 72c4 CE01      		movw r24,r28
 16779 72c6 805F      		subi r24,-16
 16780 72c8 9B4E      		sbci r25,-21
 16781 72ca 60E0      		ldi r22,lo8(.LC37)
 16782 72cc 70E0      		ldi r23,hi8(.LC37)
 16783 72ce 0E94 0000 		call strcmp
 16784 72d2 892B      		or r24,r25
 16785 72d4 01F4      		brne .L589
1725:lp_solve_5.5/lp_MPS.c ****         report(lp, FULL, "Finished reading BAS file\n");
 16786               		.loc 1 1725 0
 16787 72d6 80E0      		ldi r24,lo8(.LC140)
 16788 72d8 90E0      		ldi r25,hi8(.LC140)
 16789 72da 892F      		mov r24,r25
 16790 72dc 8F93      		push r24
 16791 72de 80E0      		ldi r24,lo8(.LC140)
 16792 72e0 90E0      		ldi r25,hi8(.LC140)
 16793 72e2 8F93      		push r24
 16794 72e4 1F92      		push __zero_reg__
 16795 72e6 86E0      		ldi r24,lo8(6)
 16796 72e8 8F93      		push r24
 16797 72ea CE01      		movw r24,r28
 16798 72ec 885E      		subi r24,-24
 16799 72ee 974E      		sbci r25,-25
 16800 72f0 FC01      		movw r30,r24
 16801 72f2 2181      		ldd r18,Z+1
 16802 72f4 2F93      		push r18
 16803 72f6 FC01      		movw r30,r24
 16804 72f8 8081      		ld r24,Z
 16805 72fa 8F93      		push r24
 16806 72fc 0E94 0000 		call report
 16807 7300 0F90      		pop __tmp_reg__
 16808 7302 0F90      		pop __tmp_reg__
 16809 7304 0F90      		pop __tmp_reg__
 16810 7306 0F90      		pop __tmp_reg__
 16811 7308 0F90      		pop __tmp_reg__
 16812 730a 0F90      		pop __tmp_reg__
1726:lp_solve_5.5/lp_MPS.c ****         ok = TRUE;
 16813               		.loc 1 1726 0
 16814 730c 81E0      		ldi r24,lo8(1)
 16815 730e 8987      		std Y+9,r24
1727:lp_solve_5.5/lp_MPS.c ****         break;
 16816               		.loc 1 1727 0
 16817 7310 00C0      		rjmp .L590
 16818               	.L589:
1728:lp_solve_5.5/lp_MPS.c ****       }
1729:lp_solve_5.5/lp_MPS.c ****       else { /* line does not start with space and does not match above */
1730:lp_solve_5.5/lp_MPS.c ****         report(lp, IMPORTANT, "Unrecognized BAS line %d: %s\n", Lineno, line);
 16819               		.loc 1 1730 0
 16820 7312 CE01      		movw r24,r28
 16821 7314 805F      		subi r24,-16
 16822 7316 9F4E      		sbci r25,-17
 16823 7318 292F      		mov r18,r25
 16824 731a 2F93      		push r18
 16825 731c 8F93      		push r24
 16826 731e 8885      		ldd r24,Y+8
 16827 7320 8F93      		push r24
 16828 7322 8F81      		ldd r24,Y+7
 16829 7324 8F93      		push r24
 16830 7326 80E0      		ldi r24,lo8(.LC141)
 16831 7328 90E0      		ldi r25,hi8(.LC141)
 16832 732a 892F      		mov r24,r25
 16833 732c 8F93      		push r24
 16834 732e 80E0      		ldi r24,lo8(.LC141)
 16835 7330 90E0      		ldi r25,hi8(.LC141)
 16836 7332 8F93      		push r24
 16837 7334 1F92      		push __zero_reg__
 16838 7336 83E0      		ldi r24,lo8(3)
 16839 7338 8F93      		push r24
 16840 733a CE01      		movw r24,r28
 16841 733c 885E      		subi r24,-24
 16842 733e 974E      		sbci r25,-25
 16843 7340 FC01      		movw r30,r24
 16844 7342 2181      		ldd r18,Z+1
 16845 7344 2F93      		push r18
 16846 7346 FC01      		movw r30,r24
 16847 7348 8081      		ld r24,Z
 16848 734a 8F93      		push r24
 16849 734c 0E94 0000 		call report
 16850 7350 8DB7      		in r24,__SP_L__
 16851 7352 9EB7      		in r25,__SP_H__
 16852 7354 0A96      		adiw r24,10
 16853 7356 0FB6      		in __tmp_reg__,__SREG__
 16854 7358 F894      		cli
 16855 735a DEBF      		out __SP_H__,r29
 16856 735c 0FBE      		out __SREG__,__tmp_reg__
 16857 735e CDBF      		out __SP_L__,r28
1731:lp_solve_5.5/lp_MPS.c ****         break;
 16858               		.loc 1 1731 0
 16859 7360 00C0      		rjmp .L590
 16860               	.L580:
1732:lp_solve_5.5/lp_MPS.c ****       }
1733:lp_solve_5.5/lp_MPS.c ****     }
1734:lp_solve_5.5/lp_MPS.c ****     else { /* normal line, process */
1735:lp_solve_5.5/lp_MPS.c ****       items = scan_line(lp, /* MPSRHS */ MPSBOUNDS, line, field1, field2, field3, &field4, field5, 
 16861               		.loc 1 1735 0
 16862 7362 6E01      		movw r12,r28
 16863 7364 9CEE      		ldi r25,-20
 16864 7366 C91A      		sub r12,r25
 16865 7368 97EE      		ldi r25,-25
 16866 736a D90A      		sbc r13,r25
 16867 736c 7E01      		movw r14,r28
 16868 736e E0EF      		ldi r30,-16
 16869 7370 EE1A      		sub r14,r30
 16870 7372 E3EF      		ldi r30,-13
 16871 7374 FE0A      		sbc r15,r30
 16872 7376 8E01      		movw r16,r28
 16873 7378 005F      		subi r16,-16
 16874 737a 174E      		sbci r17,-25
 16875 737c DE01      		movw r26,r28
 16876 737e A05F      		subi r26,-16
 16877 7380 B74F      		sbci r27,-9
 16878 7382 BE01      		movw r22,r28
 16879 7384 605F      		subi r22,-16
 16880 7386 7B4F      		sbci r23,-5
 16881 7388 9E01      		movw r18,r28
 16882 738a 205F      		subi r18,-16
 16883 738c 3F4F      		sbci r19,-1
 16884 738e AE01      		movw r20,r28
 16885 7390 405F      		subi r20,-16
 16886 7392 5F4E      		sbci r21,-17
 16887 7394 CE01      		movw r24,r28
 16888 7396 885E      		subi r24,-24
 16889 7398 974E      		sbci r25,-25
 16890 739a FC01      		movw r30,r24
 16891 739c 8081      		ld r24,Z
 16892 739e 9181      		ldd r25,Z+1
 16893 73a0 EC85      		ldd r30,Y+12
 16894 73a2 FD85      		ldd r31,Y+13
 16895 73a4 4601      		movw r8,r12
 16896 73a6 5701      		movw r10,r14
 16897 73a8 6801      		movw r12,r16
 16898 73aa 7D01      		movw r14,r26
 16899 73ac 8B01      		movw r16,r22
 16900 73ae 63E0      		ldi r22,lo8(3)
 16901 73b0 70E0      		ldi r23,0
 16902 73b2 0995      		icall
 16903 73b4 9F87      		std Y+15,r25
 16904 73b6 8E87      		std Y+14,r24
1736:lp_solve_5.5/lp_MPS.c ****       if(items < 0){
 16905               		.loc 1 1736 0
 16906 73b8 8E85      		ldd r24,Y+14
 16907 73ba 9F85      		ldd r25,Y+15
 16908 73bc 9923      		tst r25
 16909 73be 04F4      		brge .L591
1737:lp_solve_5.5/lp_MPS.c ****         report(lp, IMPORTANT, "Syntax error on line %d: %s\n", Lineno, line);
 16910               		.loc 1 1737 0
 16911 73c0 CE01      		movw r24,r28
 16912 73c2 805F      		subi r24,-16
 16913 73c4 9F4E      		sbci r25,-17
 16914 73c6 292F      		mov r18,r25
 16915 73c8 2F93      		push r18
 16916 73ca 8F93      		push r24
 16917 73cc 8885      		ldd r24,Y+8
 16918 73ce 8F93      		push r24
 16919 73d0 8F81      		ldd r24,Y+7
 16920 73d2 8F93      		push r24
 16921 73d4 80E0      		ldi r24,lo8(.LC40)
 16922 73d6 90E0      		ldi r25,hi8(.LC40)
 16923 73d8 892F      		mov r24,r25
 16924 73da 8F93      		push r24
 16925 73dc 80E0      		ldi r24,lo8(.LC40)
 16926 73de 90E0      		ldi r25,hi8(.LC40)
 16927 73e0 8F93      		push r24
 16928 73e2 1F92      		push __zero_reg__
 16929 73e4 83E0      		ldi r24,lo8(3)
 16930 73e6 8F93      		push r24
 16931 73e8 CE01      		movw r24,r28
 16932 73ea 885E      		subi r24,-24
 16933 73ec 974E      		sbci r25,-25
 16934 73ee FC01      		movw r30,r24
 16935 73f0 2181      		ldd r18,Z+1
 16936 73f2 2F93      		push r18
 16937 73f4 FC01      		movw r30,r24
 16938 73f6 8081      		ld r24,Z
 16939 73f8 8F93      		push r24
 16940 73fa 0E94 0000 		call report
 16941 73fe 8DB7      		in r24,__SP_L__
 16942 7400 9EB7      		in r25,__SP_H__
 16943 7402 0A96      		adiw r24,10
 16944 7404 0FB6      		in __tmp_reg__,__SREG__
 16945 7406 F894      		cli
 16946 7408 DEBF      		out __SP_H__,r29
 16947 740a 0FBE      		out __SREG__,__tmp_reg__
 16948 740c CDBF      		out __SP_L__,r28
1738:lp_solve_5.5/lp_MPS.c ****         break;
 16949               		.loc 1 1738 0
 16950 740e 00C0      		rjmp .L590
 16951               	.L591:
1739:lp_solve_5.5/lp_MPS.c ****       }
1740:lp_solve_5.5/lp_MPS.c ****       /* find first variable index value */
1741:lp_solve_5.5/lp_MPS.c ****       in = MPS_getnameidx(lp, field2, FALSE);
 16952               		.loc 1 1741 0
 16953 7410 9E01      		movw r18,r28
 16954 7412 205F      		subi r18,-16
 16955 7414 3B4F      		sbci r19,-5
 16956 7416 CE01      		movw r24,r28
 16957 7418 885E      		subi r24,-24
 16958 741a 974E      		sbci r25,-25
 16959 741c FC01      		movw r30,r24
 16960 741e 8081      		ld r24,Z
 16961 7420 9181      		ldd r25,Z+1
 16962 7422 40E0      		ldi r20,0
 16963 7424 B901      		movw r22,r18
 16964 7426 0E94 0000 		call MPS_getnameidx
 16965 742a 9E83      		std Y+6,r25
 16966 742c 8D83      		std Y+5,r24
1742:lp_solve_5.5/lp_MPS.c **** #ifdef OldNameMatch
1743:lp_solve_5.5/lp_MPS.c ****       if(in < 0)
1744:lp_solve_5.5/lp_MPS.c ****         in = MPS_getnameidx(lp, field2, TRUE);
1745:lp_solve_5.5/lp_MPS.c ****       else
1746:lp_solve_5.5/lp_MPS.c ****         in += lp->rows;
1747:lp_solve_5.5/lp_MPS.c **** #endif
1748:lp_solve_5.5/lp_MPS.c ****       if(in < 0)
 16967               		.loc 1 1748 0
 16968 742e 8D81      		ldd r24,Y+5
 16969 7430 9E81      		ldd r25,Y+6
 16970 7432 9923      		tst r25
 16971 7434 04F4      		brge .+2
 16972 7436 00C0      		rjmp .L603
1749:lp_solve_5.5/lp_MPS.c ****         break;
1750:lp_solve_5.5/lp_MPS.c **** 
1751:lp_solve_5.5/lp_MPS.c ****       /* check if we have the basic/non-basic variable format */
1752:lp_solve_5.5/lp_MPS.c ****       if(field1[0] == 'X') {
 16973               		.loc 1 1752 0
 16974 7438 8889      		ldd r24,Y+16
 16975 743a 8835      		cpi r24,lo8(88)
 16976 743c 01F0      		breq .+2
 16977 743e 00C0      		rjmp .L593
1753:lp_solve_5.5/lp_MPS.c ****         /* find second variable index value */
1754:lp_solve_5.5/lp_MPS.c ****         ib = in;
 16978               		.loc 1 1754 0
 16979 7440 8D81      		ldd r24,Y+5
 16980 7442 9E81      		ldd r25,Y+6
 16981 7444 9C83      		std Y+4,r25
 16982 7446 8B83      		std Y+3,r24
1755:lp_solve_5.5/lp_MPS.c ****         in = MPS_getnameidx(lp, field3, FALSE);
 16983               		.loc 1 1755 0
 16984 7448 9E01      		movw r18,r28
 16985 744a 205F      		subi r18,-16
 16986 744c 374F      		sbci r19,-9
 16987 744e CE01      		movw r24,r28
 16988 7450 885E      		subi r24,-24
 16989 7452 974E      		sbci r25,-25
 16990 7454 FC01      		movw r30,r24
 16991 7456 8081      		ld r24,Z
 16992 7458 9181      		ldd r25,Z+1
 16993 745a 40E0      		ldi r20,0
 16994 745c B901      		movw r22,r18
 16995 745e 0E94 0000 		call MPS_getnameidx
 16996 7462 9E83      		std Y+6,r25
 16997 7464 8D83      		std Y+5,r24
1756:lp_solve_5.5/lp_MPS.c **** #ifdef OldNameMatch
1757:lp_solve_5.5/lp_MPS.c ****         if(in < 0)
1758:lp_solve_5.5/lp_MPS.c ****           in = MPS_getnameidx(lp, field3, TRUE);
1759:lp_solve_5.5/lp_MPS.c ****         else
1760:lp_solve_5.5/lp_MPS.c ****           in += lp->rows;
1761:lp_solve_5.5/lp_MPS.c **** #endif
1762:lp_solve_5.5/lp_MPS.c ****         if(in < 0)
 16998               		.loc 1 1762 0
 16999 7466 8D81      		ldd r24,Y+5
 17000 7468 9E81      		ldd r25,Y+6
 17001 746a 9923      		tst r25
 17002 746c 04F4      		brge .+2
 17003 746e 00C0      		rjmp .L604
1763:lp_solve_5.5/lp_MPS.c ****           break;
1764:lp_solve_5.5/lp_MPS.c **** 
1765:lp_solve_5.5/lp_MPS.c ****         lp->is_lower[in] = (MYBOOL) (field1[1] == 'L');
 17004               		.loc 1 1765 0
 17005 7470 CE01      		movw r24,r28
 17006 7472 885E      		subi r24,-24
 17007 7474 974E      		sbci r25,-25
 17008 7476 FC01      		movw r30,r24
 17009 7478 8081      		ld r24,Z
 17010 747a 9181      		ldd r25,Z+1
 17011 747c 8E52      		subi r24,46
 17012 747e 9D4F      		sbci r25,-3
 17013 7480 FC01      		movw r30,r24
 17014 7482 2081      		ld r18,Z
 17015 7484 3181      		ldd r19,Z+1
 17016 7486 8D81      		ldd r24,Y+5
 17017 7488 9E81      		ldd r25,Y+6
 17018 748a 820F      		add r24,r18
 17019 748c 931F      		adc r25,r19
 17020 748e 3989      		ldd r19,Y+17
 17021 7490 21E0      		ldi r18,lo8(1)
 17022 7492 3C34      		cpi r19,lo8(76)
 17023 7494 01F0      		breq .L595
 17024 7496 20E0      		ldi r18,0
 17025               	.L595:
 17026 7498 FC01      		movw r30,r24
 17027 749a 2083      		st Z,r18
1766:lp_solve_5.5/lp_MPS.c ****         lp->is_basic[ib] = TRUE;
 17028               		.loc 1 1766 0
 17029 749c CE01      		movw r24,r28
 17030 749e 885E      		subi r24,-24
 17031 74a0 974E      		sbci r25,-25
 17032 74a2 FC01      		movw r30,r24
 17033 74a4 8081      		ld r24,Z
 17034 74a6 9181      		ldd r25,Z+1
 17035 74a8 8053      		subi r24,48
 17036 74aa 9D4F      		sbci r25,-3
 17037 74ac FC01      		movw r30,r24
 17038 74ae 2081      		ld r18,Z
 17039 74b0 3181      		ldd r19,Z+1
 17040 74b2 8B81      		ldd r24,Y+3
 17041 74b4 9C81      		ldd r25,Y+4
 17042 74b6 820F      		add r24,r18
 17043 74b8 931F      		adc r25,r19
 17044 74ba 21E0      		ldi r18,lo8(1)
 17045 74bc FC01      		movw r30,r24
 17046 74be 2083      		st Z,r18
 17047 74c0 00C0      		rjmp .L596
 17048               	.L593:
1767:lp_solve_5.5/lp_MPS.c ****       }
1768:lp_solve_5.5/lp_MPS.c ****       else
1769:lp_solve_5.5/lp_MPS.c ****         lp->is_lower[in] = (MYBOOL) (field1[0] == 'L');
 17049               		.loc 1 1769 0
 17050 74c2 CE01      		movw r24,r28
 17051 74c4 885E      		subi r24,-24
 17052 74c6 974E      		sbci r25,-25
 17053 74c8 FC01      		movw r30,r24
 17054 74ca 8081      		ld r24,Z
 17055 74cc 9181      		ldd r25,Z+1
 17056 74ce 8E52      		subi r24,46
 17057 74d0 9D4F      		sbci r25,-3
 17058 74d2 FC01      		movw r30,r24
 17059 74d4 2081      		ld r18,Z
 17060 74d6 3181      		ldd r19,Z+1
 17061 74d8 8D81      		ldd r24,Y+5
 17062 74da 9E81      		ldd r25,Y+6
 17063 74dc 820F      		add r24,r18
 17064 74de 931F      		adc r25,r19
 17065 74e0 3889      		ldd r19,Y+16
 17066 74e2 21E0      		ldi r18,lo8(1)
 17067 74e4 3C34      		cpi r19,lo8(76)
 17068 74e6 01F0      		breq .L597
 17069 74e8 20E0      		ldi r18,0
 17070               	.L597:
 17071 74ea FC01      		movw r30,r24
 17072 74ec 2083      		st Z,r18
 17073               	.L596:
1770:lp_solve_5.5/lp_MPS.c **** 
1771:lp_solve_5.5/lp_MPS.c ****       lp->is_basic[in] = FALSE;
 17074               		.loc 1 1771 0
 17075 74ee CE01      		movw r24,r28
 17076 74f0 885E      		subi r24,-24
 17077 74f2 974E      		sbci r25,-25
 17078 74f4 FC01      		movw r30,r24
 17079 74f6 8081      		ld r24,Z
 17080 74f8 9181      		ldd r25,Z+1
 17081 74fa 8053      		subi r24,48
 17082 74fc 9D4F      		sbci r25,-3
 17083 74fe FC01      		movw r30,r24
 17084 7500 2081      		ld r18,Z
 17085 7502 3181      		ldd r19,Z+1
 17086 7504 8D81      		ldd r24,Y+5
 17087 7506 9E81      		ldd r25,Y+6
 17088 7508 820F      		add r24,r18
 17089 750a 931F      		adc r25,r19
 17090 750c FC01      		movw r30,r24
 17091 750e 1082      		st Z,__zero_reg__
 17092               	.L574:
1696:lp_solve_5.5/lp_MPS.c ****     Lineno++;
 17093               		.loc 1 1696 0
 17094 7510 2A85      		ldd r18,Y+10
 17095 7512 3B85      		ldd r19,Y+11
 17096 7514 CE01      		movw r24,r28
 17097 7516 805F      		subi r24,-16
 17098 7518 9F4E      		sbci r25,-17
 17099 751a A901      		movw r20,r18
 17100 751c 6FEF      		ldi r22,lo8(-1)
 17101 751e 73E0      		ldi r23,lo8(3)
 17102 7520 0E94 0000 		call fgets
 17103 7524 892B      		or r24,r25
 17104 7526 01F0      		breq .+2
 17105 7528 00C0      		rjmp .L598
 17106 752a 00C0      		rjmp .L590
 17107               	.L603:
1749:lp_solve_5.5/lp_MPS.c **** 
 17108               		.loc 1 1749 0
 17109 752c 0000      		nop
 17110 752e 00C0      		rjmp .L590
 17111               	.L604:
1763:lp_solve_5.5/lp_MPS.c **** 
 17112               		.loc 1 1763 0
 17113 7530 0000      		nop
 17114               	.L590:
1772:lp_solve_5.5/lp_MPS.c **** 
1773:lp_solve_5.5/lp_MPS.c ****     }
1774:lp_solve_5.5/lp_MPS.c ****   }
1775:lp_solve_5.5/lp_MPS.c ****   /* Update the basis index-to-variable array */
1776:lp_solve_5.5/lp_MPS.c ****   ib = 0;
 17115               		.loc 1 1776 0
 17116 7532 1C82      		std Y+4,__zero_reg__
 17117 7534 1B82      		std Y+3,__zero_reg__
1777:lp_solve_5.5/lp_MPS.c ****   items = lp->sum;
 17118               		.loc 1 1777 0
 17119 7536 CE01      		movw r24,r28
 17120 7538 885E      		subi r24,-24
 17121 753a 974E      		sbci r25,-25
 17122 753c FC01      		movw r30,r24
 17123 753e 8081      		ld r24,Z
 17124 7540 9181      		ldd r25,Z+1
 17125 7542 8851      		subi r24,24
 17126 7544 9E4F      		sbci r25,-2
 17127 7546 FC01      		movw r30,r24
 17128 7548 8081      		ld r24,Z
 17129 754a 9181      		ldd r25,Z+1
 17130 754c 9F87      		std Y+15,r25
 17131 754e 8E87      		std Y+14,r24
1778:lp_solve_5.5/lp_MPS.c ****   for(in = 1; in <= items; in++)
 17132               		.loc 1 1778 0
 17133 7550 81E0      		ldi r24,lo8(1)
 17134 7552 90E0      		ldi r25,0
 17135 7554 9E83      		std Y+6,r25
 17136 7556 8D83      		std Y+5,r24
 17137 7558 00C0      		rjmp .L599
 17138               	.L601:
1779:lp_solve_5.5/lp_MPS.c ****     if(lp->is_basic[in]) {
 17139               		.loc 1 1779 0
 17140 755a CE01      		movw r24,r28
 17141 755c 885E      		subi r24,-24
 17142 755e 974E      		sbci r25,-25
 17143 7560 FC01      		movw r30,r24
 17144 7562 8081      		ld r24,Z
 17145 7564 9181      		ldd r25,Z+1
 17146 7566 8053      		subi r24,48
 17147 7568 9D4F      		sbci r25,-3
 17148 756a FC01      		movw r30,r24
 17149 756c 2081      		ld r18,Z
 17150 756e 3181      		ldd r19,Z+1
 17151 7570 8D81      		ldd r24,Y+5
 17152 7572 9E81      		ldd r25,Y+6
 17153 7574 820F      		add r24,r18
 17154 7576 931F      		adc r25,r19
 17155 7578 FC01      		movw r30,r24
 17156 757a 8081      		ld r24,Z
 17157 757c 8823      		tst r24
 17158 757e 01F0      		breq .L600
1780:lp_solve_5.5/lp_MPS.c ****       ib++;
 17159               		.loc 1 1780 0
 17160 7580 8B81      		ldd r24,Y+3
 17161 7582 9C81      		ldd r25,Y+4
 17162 7584 0196      		adiw r24,1
 17163 7586 9C83      		std Y+4,r25
 17164 7588 8B83      		std Y+3,r24
1781:lp_solve_5.5/lp_MPS.c ****       lp->var_basic[ib] = in;
 17165               		.loc 1 1781 0
 17166 758a CE01      		movw r24,r28
 17167 758c 885E      		subi r24,-24
 17168 758e 974E      		sbci r25,-25
 17169 7590 FC01      		movw r30,r24
 17170 7592 8081      		ld r24,Z
 17171 7594 9181      		ldd r25,Z+1
 17172 7596 8453      		subi r24,52
 17173 7598 9D4F      		sbci r25,-3
 17174 759a FC01      		movw r30,r24
 17175 759c 2081      		ld r18,Z
 17176 759e 3181      		ldd r19,Z+1
 17177 75a0 8B81      		ldd r24,Y+3
 17178 75a2 9C81      		ldd r25,Y+4
 17179 75a4 880F      		lsl r24
 17180 75a6 991F      		rol r25
 17181 75a8 820F      		add r24,r18
 17182 75aa 931F      		adc r25,r19
 17183 75ac 2D81      		ldd r18,Y+5
 17184 75ae 3E81      		ldd r19,Y+6
 17185 75b0 FC01      		movw r30,r24
 17186 75b2 3183      		std Z+1,r19
 17187 75b4 2083      		st Z,r18
 17188               	.L600:
1778:lp_solve_5.5/lp_MPS.c ****     if(lp->is_basic[in]) {
 17189               		.loc 1 1778 0 discriminator 2
 17190 75b6 8D81      		ldd r24,Y+5
 17191 75b8 9E81      		ldd r25,Y+6
 17192 75ba 0196      		adiw r24,1
 17193 75bc 9E83      		std Y+6,r25
 17194 75be 8D83      		std Y+5,r24
 17195               	.L599:
1778:lp_solve_5.5/lp_MPS.c ****     if(lp->is_basic[in]) {
 17196               		.loc 1 1778 0 is_stmt 0 discriminator 1
 17197 75c0 2D81      		ldd r18,Y+5
 17198 75c2 3E81      		ldd r19,Y+6
 17199 75c4 8E85      		ldd r24,Y+14
 17200 75c6 9F85      		ldd r25,Y+15
 17201 75c8 8217      		cp r24,r18
 17202 75ca 9307      		cpc r25,r19
 17203 75cc 04F4      		brge .L601
1782:lp_solve_5.5/lp_MPS.c ****     }
1783:lp_solve_5.5/lp_MPS.c **** 
1784:lp_solve_5.5/lp_MPS.c ****   fclose(input);
 17204               		.loc 1 1784 0 is_stmt 1
 17205 75ce 8A85      		ldd r24,Y+10
 17206 75d0 9B85      		ldd r25,Y+11
 17207 75d2 0E94 0000 		call fclose
1785:lp_solve_5.5/lp_MPS.c ****   return( ok );
 17208               		.loc 1 1785 0
 17209 75d6 8985      		ldd r24,Y+9
 17210               	.L602:
 17211               	/* epilogue start */
1786:lp_solve_5.5/lp_MPS.c **** }
 17212               		.loc 1 1786 0 discriminator 2
 17213 75d8 C15E      		subi r28,-31
 17214 75da D74E      		sbci r29,-25
 17215 75dc 0FB6      		in __tmp_reg__,__SREG__
 17216 75de F894      		cli
 17217 75e0 DEBF      		out __SP_H__,r29
 17218 75e2 0FBE      		out __SREG__,__tmp_reg__
 17219 75e4 CDBF      		out __SP_L__,r28
 17220 75e6 DF91      		pop r29
 17221 75e8 CF91      		pop r28
 17222 75ea 1F91      		pop r17
 17223 75ec 0F91      		pop r16
 17224 75ee FF90      		pop r15
 17225 75f0 EF90      		pop r14
 17226 75f2 DF90      		pop r13
 17227 75f4 CF90      		pop r12
 17228 75f6 BF90      		pop r11
 17229 75f8 AF90      		pop r10
 17230 75fa 9F90      		pop r9
 17231 75fc 8F90      		pop r8
 17232 75fe 0895      		ret
 17233               		.cfi_endproc
 17234               	.LFE28:
 17236               		.section	.rodata
 17237               	.LC142:
 17238 0ba8 4D50 535F 		.string	"MPS_writeBAS: unrecognized MPS name type.\n"
 17238      7772 6974 
 17238      6542 4153 
 17238      3A20 756E 
 17238      7265 636F 
 17239               	.global	__floatdisf
 17240               	.LC143:
 17241 0bd3 4E41 4D45 		.string	"NAME          %s Rows %d Cols %d Iters %.0f\n"
 17241      2020 2020 
 17241      2020 2020 
 17241      2020 2573 
 17241      2052 6F77 
 17242               	.LC144:
 17243 0c00 584C 00   		.string	"XL"
 17244               	.LC145:
 17245 0c03 5855 00   		.string	"XU"
 17246               	.LC146:
 17247 0c06 2025 3273 		.string	" %2s %s  %s\n"
 17247      2025 7320 
 17247      2025 730A 
 17247      00
 17248               	.LC147:
 17249 0c13 4C4C 00   		.string	"LL"
 17250               	.LC148:
 17251 0c16 554C 00   		.string	"UL"
 17252               	.LC149:
 17253 0c19 2025 3273 		.string	" %2s %s\n"
 17253      2025 730A 
 17253      00
 17254               		.text
 17255               	.global	MPS_writeBAS
 17257               	MPS_writeBAS:
 17258               	.LFB29:
1787:lp_solve_5.5/lp_MPS.c **** 
1788:lp_solve_5.5/lp_MPS.c **** MYBOOL MPS_writeBAS(lprec *lp, int typeMPS, char *filename)
1789:lp_solve_5.5/lp_MPS.c **** {
 17259               		.loc 1 1789 0
 17260               		.cfi_startproc
 17261 7600 AF92      		push r10
 17262               	.LCFI144:
 17263               		.cfi_def_cfa_offset 3
 17264               		.cfi_offset 10, -2
 17265 7602 BF92      		push r11
 17266               	.LCFI145:
 17267               		.cfi_def_cfa_offset 4
 17268               		.cfi_offset 11, -3
 17269 7604 CF92      		push r12
 17270               	.LCFI146:
 17271               		.cfi_def_cfa_offset 5
 17272               		.cfi_offset 12, -4
 17273 7606 DF92      		push r13
 17274               	.LCFI147:
 17275               		.cfi_def_cfa_offset 6
 17276               		.cfi_offset 13, -5
 17277 7608 EF92      		push r14
 17278               	.LCFI148:
 17279               		.cfi_def_cfa_offset 7
 17280               		.cfi_offset 14, -6
 17281 760a FF92      		push r15
 17282               	.LCFI149:
 17283               		.cfi_def_cfa_offset 8
 17284               		.cfi_offset 15, -7
 17285 760c 0F93      		push r16
 17286               	.LCFI150:
 17287               		.cfi_def_cfa_offset 9
 17288               		.cfi_offset 16, -8
 17289 760e 1F93      		push r17
 17290               	.LCFI151:
 17291               		.cfi_def_cfa_offset 10
 17292               		.cfi_offset 17, -9
 17293 7610 CF93      		push r28
 17294               	.LCFI152:
 17295               		.cfi_def_cfa_offset 11
 17296               		.cfi_offset 28, -10
 17297 7612 DF93      		push r29
 17298               	.LCFI153:
 17299               		.cfi_def_cfa_offset 12
 17300               		.cfi_offset 29, -11
 17301 7614 CDB7      		in r28,__SP_L__
 17302 7616 DEB7      		in r29,__SP_H__
 17303               	.LCFI154:
 17304               		.cfi_def_cfa_register 28
 17305 7618 C05E      		subi r28,-32
 17306 761a D109      		sbc r29,__zero_reg__
 17307               	.LCFI155:
 17308               		.cfi_def_cfa_offset 236
 17309 761c 0FB6      		in __tmp_reg__,__SREG__
 17310 761e F894      		cli
 17311 7620 DEBF      		out __SP_H__,r29
 17312 7622 0FBE      		out __SREG__,__tmp_reg__
 17313 7624 CDBF      		out __SP_L__,r28
 17314               	/* prologue: function */
 17315               	/* frame size = 224 */
 17316               	/* stack size = 234 */
 17317               	.L__stack_usage = 234
 17318 7626 9E01      		movw r18,r28
 17319 7628 2552      		subi r18,37
 17320 762a 3F4F      		sbci r19,-1
 17321 762c F901      		movw r30,r18
 17322 762e 9183      		std Z+1,r25
 17323 7630 8083      		st Z,r24
 17324 7632 CE01      		movw r24,r28
 17325 7634 8352      		subi r24,35
 17326 7636 9F4F      		sbci r25,-1
 17327 7638 FC01      		movw r30,r24
 17328 763a 7183      		std Z+1,r23
 17329 763c 6083      		st Z,r22
 17330 763e CE01      		movw r24,r28
 17331 7640 8152      		subi r24,33
 17332 7642 9F4F      		sbci r25,-1
 17333 7644 FC01      		movw r30,r24
 17334 7646 5183      		std Z+1,r21
 17335 7648 4083      		st Z,r20
1790:lp_solve_5.5/lp_MPS.c ****   int    ib, in;
1791:lp_solve_5.5/lp_MPS.c ****   MYBOOL ok;
1792:lp_solve_5.5/lp_MPS.c ****   char   name1[100], name2[100];
1793:lp_solve_5.5/lp_MPS.c ****   FILE   *output = stdout;
 17336               		.loc 1 1793 0
 17337 764a 8091 0000 		lds r24,__iob+2
 17338 764e 9091 0000 		lds r25,__iob+2+1
 17339 7652 9E83      		std Y+6,r25
 17340 7654 8D83      		std Y+5,r24
1794:lp_solve_5.5/lp_MPS.c ****   char * (*MPSname)(char *name0, char *name);
1795:lp_solve_5.5/lp_MPS.c ****   char name0[9];
1796:lp_solve_5.5/lp_MPS.c **** 
1797:lp_solve_5.5/lp_MPS.c ****   /* Set name formatter */
1798:lp_solve_5.5/lp_MPS.c ****   if((typeMPS & MPSFIXED) == MPSFIXED)
 17341               		.loc 1 1798 0
 17342 7656 CE01      		movw r24,r28
 17343 7658 8352      		subi r24,35
 17344 765a 9F4F      		sbci r25,-1
 17345 765c FC01      		movw r30,r24
 17346 765e 8081      		ld r24,Z
 17347 7660 9181      		ldd r25,Z+1
 17348 7662 8170      		andi r24,1
 17349 7664 9927      		clr r25
 17350 7666 892B      		or r24,r25
 17351 7668 01F0      		breq .L606
1799:lp_solve_5.5/lp_MPS.c ****     MPSname = MPSnameFIXED;
 17352               		.loc 1 1799 0
 17353 766a 80E0      		ldi r24,lo8(gs(MPSnameFIXED))
 17354 766c 90E0      		ldi r25,hi8(gs(MPSnameFIXED))
 17355 766e 9887      		std Y+8,r25
 17356 7670 8F83      		std Y+7,r24
 17357 7672 00C0      		rjmp .L607
 17358               	.L606:
1800:lp_solve_5.5/lp_MPS.c ****   else if((typeMPS & MPSFREE) == MPSFREE)
 17359               		.loc 1 1800 0
 17360 7674 CE01      		movw r24,r28
 17361 7676 8352      		subi r24,35
 17362 7678 9F4F      		sbci r25,-1
 17363 767a FC01      		movw r30,r24
 17364 767c 8081      		ld r24,Z
 17365 767e 9181      		ldd r25,Z+1
 17366 7680 8270      		andi r24,2
 17367 7682 9927      		clr r25
 17368 7684 892B      		or r24,r25
 17369 7686 01F0      		breq .L608
1801:lp_solve_5.5/lp_MPS.c ****     MPSname = MPSnameFREE;
 17370               		.loc 1 1801 0
 17371 7688 80E0      		ldi r24,lo8(gs(MPSnameFREE))
 17372 768a 90E0      		ldi r25,hi8(gs(MPSnameFREE))
 17373 768c 9887      		std Y+8,r25
 17374 768e 8F83      		std Y+7,r24
 17375 7690 00C0      		rjmp .L607
 17376               	.L608:
1802:lp_solve_5.5/lp_MPS.c ****   else {
1803:lp_solve_5.5/lp_MPS.c ****     report(lp, IMPORTANT, "MPS_writeBAS: unrecognized MPS name type.\n");
 17377               		.loc 1 1803 0
 17378 7692 80E0      		ldi r24,lo8(.LC142)
 17379 7694 90E0      		ldi r25,hi8(.LC142)
 17380 7696 892F      		mov r24,r25
 17381 7698 8F93      		push r24
 17382 769a 80E0      		ldi r24,lo8(.LC142)
 17383 769c 90E0      		ldi r25,hi8(.LC142)
 17384 769e 8F93      		push r24
 17385 76a0 1F92      		push __zero_reg__
 17386 76a2 83E0      		ldi r24,lo8(3)
 17387 76a4 8F93      		push r24
 17388 76a6 CE01      		movw r24,r28
 17389 76a8 8552      		subi r24,37
 17390 76aa 9F4F      		sbci r25,-1
 17391 76ac FC01      		movw r30,r24
 17392 76ae 2181      		ldd r18,Z+1
 17393 76b0 2F93      		push r18
 17394 76b2 FC01      		movw r30,r24
 17395 76b4 8081      		ld r24,Z
 17396 76b6 8F93      		push r24
 17397 76b8 0E94 0000 		call report
 17398 76bc 0F90      		pop __tmp_reg__
 17399 76be 0F90      		pop __tmp_reg__
 17400 76c0 0F90      		pop __tmp_reg__
 17401 76c2 0F90      		pop __tmp_reg__
 17402 76c4 0F90      		pop __tmp_reg__
 17403 76c6 0F90      		pop __tmp_reg__
1804:lp_solve_5.5/lp_MPS.c ****     return(FALSE);
 17404               		.loc 1 1804 0
 17405 76c8 80E0      		ldi r24,0
 17406 76ca 00C0      		rjmp .L635
 17407               	.L607:
1805:lp_solve_5.5/lp_MPS.c ****   }
1806:lp_solve_5.5/lp_MPS.c **** 
1807:lp_solve_5.5/lp_MPS.c ****   /* Open the file for writing */
1808:lp_solve_5.5/lp_MPS.c ****   ok = (MYBOOL) ((filename == NULL) || ((output = fopen(filename,"w")) != NULL));
 17408               		.loc 1 1808 0
 17409 76cc CE01      		movw r24,r28
 17410 76ce 8152      		subi r24,33
 17411 76d0 9F4F      		sbci r25,-1
 17412 76d2 FC01      		movw r30,r24
 17413 76d4 8081      		ld r24,Z
 17414 76d6 9181      		ldd r25,Z+1
 17415 76d8 892B      		or r24,r25
 17416 76da 01F0      		breq .L610
 17417               		.loc 1 1808 0 is_stmt 0 discriminator 2
 17418 76dc CE01      		movw r24,r28
 17419 76de 8152      		subi r24,33
 17420 76e0 9F4F      		sbci r25,-1
 17421 76e2 FC01      		movw r30,r24
 17422 76e4 8081      		ld r24,Z
 17423 76e6 9181      		ldd r25,Z+1
 17424 76e8 60E0      		ldi r22,lo8(.LC135)
 17425 76ea 70E0      		ldi r23,hi8(.LC135)
 17426 76ec 0E94 0000 		call fopen
 17427 76f0 9E83      		std Y+6,r25
 17428 76f2 8D83      		std Y+5,r24
 17429 76f4 8D81      		ldd r24,Y+5
 17430 76f6 9E81      		ldd r25,Y+6
 17431 76f8 892B      		or r24,r25
 17432 76fa 01F0      		breq .L611
 17433               	.L610:
 17434               		.loc 1 1808 0 discriminator 3
 17435 76fc 81E0      		ldi r24,lo8(1)
 17436 76fe 90E0      		ldi r25,0
 17437 7700 00C0      		rjmp .L612
 17438               	.L611:
 17439               		.loc 1 1808 0 discriminator 4
 17440 7702 80E0      		ldi r24,0
 17441 7704 90E0      		ldi r25,0
 17442               	.L612:
 17443               		.loc 1 1808 0 discriminator 6
 17444 7706 8987      		std Y+9,r24
1809:lp_solve_5.5/lp_MPS.c ****   if(!ok)
 17445               		.loc 1 1809 0 is_stmt 1 discriminator 6
 17446 7708 8985      		ldd r24,Y+9
 17447 770a 8823      		tst r24
 17448 770c 01F4      		brne .L613
1810:lp_solve_5.5/lp_MPS.c ****     return(ok);
 17449               		.loc 1 1810 0
 17450 770e 8985      		ldd r24,Y+9
 17451 7710 00C0      		rjmp .L635
 17452               	.L613:
1811:lp_solve_5.5/lp_MPS.c ****   if(filename == NULL && lp->outstream != NULL)
 17453               		.loc 1 1811 0
 17454 7712 CE01      		movw r24,r28
 17455 7714 8152      		subi r24,33
 17456 7716 9F4F      		sbci r25,-1
 17457 7718 FC01      		movw r30,r24
 17458 771a 8081      		ld r24,Z
 17459 771c 9181      		ldd r25,Z+1
 17460 771e 892B      		or r24,r25
 17461 7720 01F4      		brne .L614
 17462               		.loc 1 1811 0 is_stmt 0 discriminator 1
 17463 7722 CE01      		movw r24,r28
 17464 7724 8552      		subi r24,37
 17465 7726 9F4F      		sbci r25,-1
 17466 7728 FC01      		movw r30,r24
 17467 772a 8081      		ld r24,Z
 17468 772c 9181      		ldd r25,Z+1
 17469 772e 845A      		subi r24,-92
 17470 7730 9D4F      		sbci r25,-3
 17471 7732 FC01      		movw r30,r24
 17472 7734 8081      		ld r24,Z
 17473 7736 9181      		ldd r25,Z+1
 17474 7738 892B      		or r24,r25
 17475 773a 01F0      		breq .L614
1812:lp_solve_5.5/lp_MPS.c ****     output = lp->outstream;
 17476               		.loc 1 1812 0 is_stmt 1
 17477 773c CE01      		movw r24,r28
 17478 773e 8552      		subi r24,37
 17479 7740 9F4F      		sbci r25,-1
 17480 7742 FC01      		movw r30,r24
 17481 7744 8081      		ld r24,Z
 17482 7746 9181      		ldd r25,Z+1
 17483 7748 845A      		subi r24,-92
 17484 774a 9D4F      		sbci r25,-3
 17485 774c FC01      		movw r30,r24
 17486 774e 8081      		ld r24,Z
 17487 7750 9181      		ldd r25,Z+1
 17488 7752 9E83      		std Y+6,r25
 17489 7754 8D83      		std Y+5,r24
 17490               	.L614:
1813:lp_solve_5.5/lp_MPS.c **** 
1814:lp_solve_5.5/lp_MPS.c ****   fprintf(output, "NAME          %s Rows %d Cols %d Iters %.0f\n",
1815:lp_solve_5.5/lp_MPS.c ****                   get_lp_name(lp), lp->rows, lp->columns, (double) get_total_iter(lp));
 17491               		.loc 1 1815 0
 17492 7756 CE01      		movw r24,r28
 17493 7758 8552      		subi r24,37
 17494 775a 9F4F      		sbci r25,-1
 17495 775c FC01      		movw r30,r24
 17496 775e 8081      		ld r24,Z
 17497 7760 9181      		ldd r25,Z+1
 17498 7762 0E94 0000 		call get_total_iter
 17499 7766 A22E      		mov r10,r18
 17500 7768 B32E      		mov r11,r19
 17501 776a C42E      		mov r12,r20
 17502 776c D52E      		mov r13,r21
 17503 776e E62E      		mov r14,r22
 17504 7770 F72E      		mov r15,r23
 17505 7772 082F      		mov r16,r24
 17506 7774 192F      		mov r17,r25
1814:lp_solve_5.5/lp_MPS.c ****                   get_lp_name(lp), lp->rows, lp->columns, (double) get_total_iter(lp));
 17507               		.loc 1 1814 0
 17508 7776 2A2D      		mov r18,r10
 17509 7778 3B2D      		mov r19,r11
 17510 777a 4C2D      		mov r20,r12
 17511 777c 5D2D      		mov r21,r13
 17512 777e 6E2D      		mov r22,r14
 17513 7780 7F2D      		mov r23,r15
 17514 7782 802F      		mov r24,r16
 17515 7784 912F      		mov r25,r17
 17516 7786 0E94 0000 		call __floatdisf
 17517 778a 6B01      		movw r12,r22
 17518 778c 7C01      		movw r14,r24
 17519 778e CE01      		movw r24,r28
 17520 7790 8552      		subi r24,37
 17521 7792 9F4F      		sbci r25,-1
 17522 7794 FC01      		movw r30,r24
 17523 7796 8081      		ld r24,Z
 17524 7798 9181      		ldd r25,Z+1
 17525 779a 8451      		subi r24,20
 17526 779c 9E4F      		sbci r25,-2
 17527 779e FC01      		movw r30,r24
 17528 77a0 A080      		ld r10,Z
 17529 77a2 B180      		ldd r11,Z+1
 17530 77a4 CE01      		movw r24,r28
 17531 77a6 8552      		subi r24,37
 17532 77a8 9F4F      		sbci r25,-1
 17533 77aa FC01      		movw r30,r24
 17534 77ac 8081      		ld r24,Z
 17535 77ae 9181      		ldd r25,Z+1
 17536 77b0 8651      		subi r24,22
 17537 77b2 9E4F      		sbci r25,-2
 17538 77b4 FC01      		movw r30,r24
 17539 77b6 0081      		ld r16,Z
 17540 77b8 1181      		ldd r17,Z+1
 17541 77ba CE01      		movw r24,r28
 17542 77bc 8552      		subi r24,37
 17543 77be 9F4F      		sbci r25,-1
 17544 77c0 FC01      		movw r30,r24
 17545 77c2 8081      		ld r24,Z
 17546 77c4 9181      		ldd r25,Z+1
 17547 77c6 0E94 0000 		call get_lp_name
 17548 77ca 2F2D      		mov r18,r15
 17549 77cc 2F93      		push r18
 17550 77ce 2E2D      		mov r18,r14
 17551 77d0 2F93      		push r18
 17552 77d2 2D2D      		mov r18,r13
 17553 77d4 2F93      		push r18
 17554 77d6 2C2D      		mov r18,r12
 17555 77d8 2F93      		push r18
 17556 77da 2B2D      		mov r18,r11
 17557 77dc 2F93      		push r18
 17558 77de 2A2D      		mov r18,r10
 17559 77e0 2F93      		push r18
 17560 77e2 212F      		mov r18,r17
 17561 77e4 2F93      		push r18
 17562 77e6 202F      		mov r18,r16
 17563 77e8 2F93      		push r18
 17564 77ea 292F      		mov r18,r25
 17565 77ec 2F93      		push r18
 17566 77ee 8F93      		push r24
 17567 77f0 80E0      		ldi r24,lo8(.LC143)
 17568 77f2 90E0      		ldi r25,hi8(.LC143)
 17569 77f4 892F      		mov r24,r25
 17570 77f6 8F93      		push r24
 17571 77f8 80E0      		ldi r24,lo8(.LC143)
 17572 77fa 90E0      		ldi r25,hi8(.LC143)
 17573 77fc 8F93      		push r24
 17574 77fe 8E81      		ldd r24,Y+6
 17575 7800 8F93      		push r24
 17576 7802 8D81      		ldd r24,Y+5
 17577 7804 8F93      		push r24
 17578 7806 0E94 0000 		call fprintf
 17579 780a 8DB7      		in r24,__SP_L__
 17580 780c 9EB7      		in r25,__SP_H__
 17581 780e 0E96      		adiw r24,14
 17582 7810 0FB6      		in __tmp_reg__,__SREG__
 17583 7812 F894      		cli
 17584 7814 DEBF      		out __SP_H__,r29
 17585 7816 0FBE      		out __SREG__,__tmp_reg__
 17586 7818 CDBF      		out __SP_L__,r28
1816:lp_solve_5.5/lp_MPS.c **** 
1817:lp_solve_5.5/lp_MPS.c ****   ib = lp->rows;
 17587               		.loc 1 1817 0
 17588 781a CE01      		movw r24,r28
 17589 781c 8552      		subi r24,37
 17590 781e 9F4F      		sbci r25,-1
 17591 7820 FC01      		movw r30,r24
 17592 7822 8081      		ld r24,Z
 17593 7824 9181      		ldd r25,Z+1
 17594 7826 8651      		subi r24,22
 17595 7828 9E4F      		sbci r25,-2
 17596 782a FC01      		movw r30,r24
 17597 782c 8081      		ld r24,Z
 17598 782e 9181      		ldd r25,Z+1
 17599 7830 9A83      		std Y+2,r25
 17600 7832 8983      		std Y+1,r24
1818:lp_solve_5.5/lp_MPS.c ****   in = 0;
 17601               		.loc 1 1818 0
 17602 7834 1C82      		std Y+4,__zero_reg__
 17603 7836 1B82      		std Y+3,__zero_reg__
1819:lp_solve_5.5/lp_MPS.c ****   while ((ib < lp->sum) || (in < lp->sum)) {
 17604               		.loc 1 1819 0
 17605 7838 00C0      		rjmp .L615
 17606               	.L633:
1820:lp_solve_5.5/lp_MPS.c **** 
1821:lp_solve_5.5/lp_MPS.c ****     /* Find next basic variable (skip slacks) */
1822:lp_solve_5.5/lp_MPS.c ****     ib++;
 17607               		.loc 1 1822 0
 17608 783a 8981      		ldd r24,Y+1
 17609 783c 9A81      		ldd r25,Y+2
 17610 783e 0196      		adiw r24,1
 17611 7840 9A83      		std Y+2,r25
 17612 7842 8983      		std Y+1,r24
1823:lp_solve_5.5/lp_MPS.c ****     while((ib <= lp->sum) && !lp->is_basic[ib])
 17613               		.loc 1 1823 0
 17614 7844 00C0      		rjmp .L616
 17615               	.L618:
1824:lp_solve_5.5/lp_MPS.c ****       ib++;
 17616               		.loc 1 1824 0
 17617 7846 8981      		ldd r24,Y+1
 17618 7848 9A81      		ldd r25,Y+2
 17619 784a 0196      		adiw r24,1
 17620 784c 9A83      		std Y+2,r25
 17621 784e 8983      		std Y+1,r24
 17622               	.L616:
1823:lp_solve_5.5/lp_MPS.c ****     while((ib <= lp->sum) && !lp->is_basic[ib])
 17623               		.loc 1 1823 0
 17624 7850 CE01      		movw r24,r28
 17625 7852 8552      		subi r24,37
 17626 7854 9F4F      		sbci r25,-1
 17627 7856 FC01      		movw r30,r24
 17628 7858 8081      		ld r24,Z
 17629 785a 9181      		ldd r25,Z+1
 17630 785c 8851      		subi r24,24
 17631 785e 9E4F      		sbci r25,-2
 17632 7860 FC01      		movw r30,r24
 17633 7862 2081      		ld r18,Z
 17634 7864 3181      		ldd r19,Z+1
 17635 7866 8981      		ldd r24,Y+1
 17636 7868 9A81      		ldd r25,Y+2
 17637 786a 2817      		cp r18,r24
 17638 786c 3907      		cpc r19,r25
 17639 786e 04F0      		brlt .L617
1823:lp_solve_5.5/lp_MPS.c ****     while((ib <= lp->sum) && !lp->is_basic[ib])
 17640               		.loc 1 1823 0 is_stmt 0 discriminator 1
 17641 7870 CE01      		movw r24,r28
 17642 7872 8552      		subi r24,37
 17643 7874 9F4F      		sbci r25,-1
 17644 7876 FC01      		movw r30,r24
 17645 7878 8081      		ld r24,Z
 17646 787a 9181      		ldd r25,Z+1
 17647 787c 8053      		subi r24,48
 17648 787e 9D4F      		sbci r25,-3
 17649 7880 FC01      		movw r30,r24
 17650 7882 2081      		ld r18,Z
 17651 7884 3181      		ldd r19,Z+1
 17652 7886 8981      		ldd r24,Y+1
 17653 7888 9A81      		ldd r25,Y+2
 17654 788a 820F      		add r24,r18
 17655 788c 931F      		adc r25,r19
 17656 788e FC01      		movw r30,r24
 17657 7890 8081      		ld r24,Z
 17658 7892 8823      		tst r24
 17659 7894 01F0      		breq .L618
 17660               	.L617:
1825:lp_solve_5.5/lp_MPS.c **** 
1826:lp_solve_5.5/lp_MPS.c ****     /* Find next non-basic variable (skip lower-bounded structural variables) */
1827:lp_solve_5.5/lp_MPS.c ****     in++;
 17661               		.loc 1 1827 0 is_stmt 1
 17662 7896 8B81      		ldd r24,Y+3
 17663 7898 9C81      		ldd r25,Y+4
 17664 789a 0196      		adiw r24,1
 17665 789c 9C83      		std Y+4,r25
 17666 789e 8B83      		std Y+3,r24
1828:lp_solve_5.5/lp_MPS.c ****     while((in <= lp->sum) && (lp->is_basic[in] ||
 17667               		.loc 1 1828 0
 17668 78a0 00C0      		rjmp .L619
 17669               	.L621:
1829:lp_solve_5.5/lp_MPS.c ****                               ((in > lp->rows) && lp->is_lower[in])))
1830:lp_solve_5.5/lp_MPS.c ****       in++;
 17670               		.loc 1 1830 0
 17671 78a2 8B81      		ldd r24,Y+3
 17672 78a4 9C81      		ldd r25,Y+4
 17673 78a6 0196      		adiw r24,1
 17674 78a8 9C83      		std Y+4,r25
 17675 78aa 8B83      		std Y+3,r24
 17676               	.L619:
1828:lp_solve_5.5/lp_MPS.c ****     while((in <= lp->sum) && (lp->is_basic[in] ||
 17677               		.loc 1 1828 0
 17678 78ac CE01      		movw r24,r28
 17679 78ae 8552      		subi r24,37
 17680 78b0 9F4F      		sbci r25,-1
 17681 78b2 FC01      		movw r30,r24
 17682 78b4 8081      		ld r24,Z
 17683 78b6 9181      		ldd r25,Z+1
 17684 78b8 8851      		subi r24,24
 17685 78ba 9E4F      		sbci r25,-2
 17686 78bc FC01      		movw r30,r24
 17687 78be 2081      		ld r18,Z
 17688 78c0 3181      		ldd r19,Z+1
 17689 78c2 8B81      		ldd r24,Y+3
 17690 78c4 9C81      		ldd r25,Y+4
 17691 78c6 2817      		cp r18,r24
 17692 78c8 3907      		cpc r19,r25
 17693 78ca 04F0      		brlt .L620
1828:lp_solve_5.5/lp_MPS.c ****     while((in <= lp->sum) && (lp->is_basic[in] ||
 17694               		.loc 1 1828 0 is_stmt 0 discriminator 1
 17695 78cc CE01      		movw r24,r28
 17696 78ce 8552      		subi r24,37
 17697 78d0 9F4F      		sbci r25,-1
 17698 78d2 FC01      		movw r30,r24
 17699 78d4 8081      		ld r24,Z
 17700 78d6 9181      		ldd r25,Z+1
 17701 78d8 8053      		subi r24,48
 17702 78da 9D4F      		sbci r25,-3
 17703 78dc FC01      		movw r30,r24
 17704 78de 2081      		ld r18,Z
 17705 78e0 3181      		ldd r19,Z+1
 17706 78e2 8B81      		ldd r24,Y+3
 17707 78e4 9C81      		ldd r25,Y+4
 17708 78e6 820F      		add r24,r18
 17709 78e8 931F      		adc r25,r19
 17710 78ea FC01      		movw r30,r24
 17711 78ec 8081      		ld r24,Z
 17712 78ee 8823      		tst r24
 17713 78f0 01F4      		brne .L621
1829:lp_solve_5.5/lp_MPS.c ****                               ((in > lp->rows) && lp->is_lower[in])))
 17714               		.loc 1 1829 0 is_stmt 1 discriminator 2
 17715 78f2 CE01      		movw r24,r28
 17716 78f4 8552      		subi r24,37
 17717 78f6 9F4F      		sbci r25,-1
 17718 78f8 FC01      		movw r30,r24
 17719 78fa 8081      		ld r24,Z
 17720 78fc 9181      		ldd r25,Z+1
 17721 78fe 8651      		subi r24,22
 17722 7900 9E4F      		sbci r25,-2
 17723 7902 FC01      		movw r30,r24
 17724 7904 2081      		ld r18,Z
 17725 7906 3181      		ldd r19,Z+1
1828:lp_solve_5.5/lp_MPS.c ****     while((in <= lp->sum) && (lp->is_basic[in] ||
 17726               		.loc 1 1828 0 discriminator 2
 17727 7908 8B81      		ldd r24,Y+3
 17728 790a 9C81      		ldd r25,Y+4
 17729 790c 2817      		cp r18,r24
 17730 790e 3907      		cpc r19,r25
 17731 7910 04F4      		brge .L620
1829:lp_solve_5.5/lp_MPS.c ****                               ((in > lp->rows) && lp->is_lower[in])))
 17732               		.loc 1 1829 0
 17733 7912 CE01      		movw r24,r28
 17734 7914 8552      		subi r24,37
 17735 7916 9F4F      		sbci r25,-1
 17736 7918 FC01      		movw r30,r24
 17737 791a 8081      		ld r24,Z
 17738 791c 9181      		ldd r25,Z+1
 17739 791e 8E52      		subi r24,46
 17740 7920 9D4F      		sbci r25,-3
 17741 7922 FC01      		movw r30,r24
 17742 7924 2081      		ld r18,Z
 17743 7926 3181      		ldd r19,Z+1
 17744 7928 8B81      		ldd r24,Y+3
 17745 792a 9C81      		ldd r25,Y+4
 17746 792c 820F      		add r24,r18
 17747 792e 931F      		adc r25,r19
 17748 7930 FC01      		movw r30,r24
 17749 7932 8081      		ld r24,Z
 17750 7934 8823      		tst r24
 17751 7936 01F0      		breq .+2
 17752 7938 00C0      		rjmp .L621
 17753               	.L620:
1831:lp_solve_5.5/lp_MPS.c **** 
1832:lp_solve_5.5/lp_MPS.c ****     /* Check if we have a basic/non-basic variable pair */
1833:lp_solve_5.5/lp_MPS.c ****     if((ib <= lp->sum) && (in <= lp->sum)) {
 17754               		.loc 1 1833 0
 17755 793a CE01      		movw r24,r28
 17756 793c 8552      		subi r24,37
 17757 793e 9F4F      		sbci r25,-1
 17758 7940 FC01      		movw r30,r24
 17759 7942 8081      		ld r24,Z
 17760 7944 9181      		ldd r25,Z+1
 17761 7946 8851      		subi r24,24
 17762 7948 9E4F      		sbci r25,-2
 17763 794a FC01      		movw r30,r24
 17764 794c 2081      		ld r18,Z
 17765 794e 3181      		ldd r19,Z+1
 17766 7950 8981      		ldd r24,Y+1
 17767 7952 9A81      		ldd r25,Y+2
 17768 7954 2817      		cp r18,r24
 17769 7956 3907      		cpc r19,r25
 17770 7958 04F4      		brge .+2
 17771 795a 00C0      		rjmp .L622
 17772               		.loc 1 1833 0 is_stmt 0 discriminator 1
 17773 795c CE01      		movw r24,r28
 17774 795e 8552      		subi r24,37
 17775 7960 9F4F      		sbci r25,-1
 17776 7962 FC01      		movw r30,r24
 17777 7964 8081      		ld r24,Z
 17778 7966 9181      		ldd r25,Z+1
 17779 7968 8851      		subi r24,24
 17780 796a 9E4F      		sbci r25,-2
 17781 796c FC01      		movw r30,r24
 17782 796e 2081      		ld r18,Z
 17783 7970 3181      		ldd r19,Z+1
 17784 7972 8B81      		ldd r24,Y+3
 17785 7974 9C81      		ldd r25,Y+4
 17786 7976 2817      		cp r18,r24
 17787 7978 3907      		cpc r19,r25
 17788 797a 04F4      		brge .+2
 17789 797c 00C0      		rjmp .L622
1834:lp_solve_5.5/lp_MPS.c ****       strcpy(name1, MPSname(name0, (ib <= lp->rows ? get_row_name(lp, ib) :
 17790               		.loc 1 1834 0 is_stmt 1
 17791 797e CE01      		movw r24,r28
 17792 7980 8552      		subi r24,37
 17793 7982 9F4F      		sbci r25,-1
 17794 7984 FC01      		movw r30,r24
 17795 7986 8081      		ld r24,Z
 17796 7988 9181      		ldd r25,Z+1
 17797 798a 8651      		subi r24,22
 17798 798c 9E4F      		sbci r25,-2
 17799 798e FC01      		movw r30,r24
 17800 7990 2081      		ld r18,Z
 17801 7992 3181      		ldd r19,Z+1
 17802 7994 8981      		ldd r24,Y+1
 17803 7996 9A81      		ldd r25,Y+2
 17804 7998 2817      		cp r18,r24
 17805 799a 3907      		cpc r19,r25
 17806 799c 04F0      		brlt .L623
 17807               		.loc 1 1834 0 is_stmt 0 discriminator 1
 17808 799e 2981      		ldd r18,Y+1
 17809 79a0 3A81      		ldd r19,Y+2
 17810 79a2 CE01      		movw r24,r28
 17811 79a4 8552      		subi r24,37
 17812 79a6 9F4F      		sbci r25,-1
 17813 79a8 FC01      		movw r30,r24
 17814 79aa 8081      		ld r24,Z
 17815 79ac 9181      		ldd r25,Z+1
 17816 79ae B901      		movw r22,r18
 17817 79b0 0E94 0000 		call get_row_name
 17818 79b4 AC01      		movw r20,r24
 17819 79b6 00C0      		rjmp .L624
 17820               	.L623:
1835:lp_solve_5.5/lp_MPS.c ****                                               get_col_name(lp, ib-lp->rows))));
 17821               		.loc 1 1835 0 is_stmt 1 discriminator 2
 17822 79b8 CE01      		movw r24,r28
 17823 79ba 8552      		subi r24,37
 17824 79bc 9F4F      		sbci r25,-1
 17825 79be FC01      		movw r30,r24
 17826 79c0 8081      		ld r24,Z
 17827 79c2 9181      		ldd r25,Z+1
 17828 79c4 8651      		subi r24,22
 17829 79c6 9E4F      		sbci r25,-2
 17830 79c8 FC01      		movw r30,r24
 17831 79ca 8081      		ld r24,Z
 17832 79cc 9181      		ldd r25,Z+1
 17833 79ce 2981      		ldd r18,Y+1
 17834 79d0 3A81      		ldd r19,Y+2
 17835 79d2 281B      		sub r18,r24
 17836 79d4 390B      		sbc r19,r25
1834:lp_solve_5.5/lp_MPS.c ****       strcpy(name1, MPSname(name0, (ib <= lp->rows ? get_row_name(lp, ib) :
 17837               		.loc 1 1834 0 discriminator 2
 17838 79d6 CE01      		movw r24,r28
 17839 79d8 8552      		subi r24,37
 17840 79da 9F4F      		sbci r25,-1
 17841 79dc FC01      		movw r30,r24
 17842 79de 8081      		ld r24,Z
 17843 79e0 9181      		ldd r25,Z+1
 17844 79e2 B901      		movw r22,r18
 17845 79e4 0E94 0000 		call get_col_name
 17846 79e8 AC01      		movw r20,r24
 17847               	.L624:
1834:lp_solve_5.5/lp_MPS.c ****       strcpy(name1, MPSname(name0, (ib <= lp->rows ? get_row_name(lp, ib) :
 17848               		.loc 1 1834 0 is_stmt 0 discriminator 4
 17849 79ea CE01      		movw r24,r28
 17850 79ec 8E52      		subi r24,46
 17851 79ee 9F4F      		sbci r25,-1
 17852 79f0 2F81      		ldd r18,Y+7
 17853 79f2 3885      		ldd r19,Y+8
 17854 79f4 BA01      		movw r22,r20
 17855 79f6 F901      		movw r30,r18
 17856 79f8 0995      		icall
 17857 79fa 9C01      		movw r18,r24
 17858 79fc CE01      		movw r24,r28
 17859 79fe 0A96      		adiw r24,10
 17860 7a00 B901      		movw r22,r18
 17861 7a02 0E94 0000 		call strcpy
1836:lp_solve_5.5/lp_MPS.c ****       strcpy(name2, MPSname(name0, (in <= lp->rows ? get_row_name(lp, in) :
 17862               		.loc 1 1836 0 is_stmt 1 discriminator 4
 17863 7a06 CE01      		movw r24,r28
 17864 7a08 8552      		subi r24,37
 17865 7a0a 9F4F      		sbci r25,-1
 17866 7a0c FC01      		movw r30,r24
 17867 7a0e 8081      		ld r24,Z
 17868 7a10 9181      		ldd r25,Z+1
 17869 7a12 8651      		subi r24,22
 17870 7a14 9E4F      		sbci r25,-2
 17871 7a16 FC01      		movw r30,r24
 17872 7a18 2081      		ld r18,Z
 17873 7a1a 3181      		ldd r19,Z+1
 17874 7a1c 8B81      		ldd r24,Y+3
 17875 7a1e 9C81      		ldd r25,Y+4
 17876 7a20 2817      		cp r18,r24
 17877 7a22 3907      		cpc r19,r25
 17878 7a24 04F0      		brlt .L625
 17879               		.loc 1 1836 0 is_stmt 0 discriminator 1
 17880 7a26 2B81      		ldd r18,Y+3
 17881 7a28 3C81      		ldd r19,Y+4
 17882 7a2a CE01      		movw r24,r28
 17883 7a2c 8552      		subi r24,37
 17884 7a2e 9F4F      		sbci r25,-1
 17885 7a30 FC01      		movw r30,r24
 17886 7a32 8081      		ld r24,Z
 17887 7a34 9181      		ldd r25,Z+1
 17888 7a36 B901      		movw r22,r18
 17889 7a38 0E94 0000 		call get_row_name
 17890 7a3c AC01      		movw r20,r24
 17891 7a3e 00C0      		rjmp .L626
 17892               	.L625:
1837:lp_solve_5.5/lp_MPS.c ****                                               get_col_name(lp, in-lp->rows))));
 17893               		.loc 1 1837 0 is_stmt 1 discriminator 2
 17894 7a40 CE01      		movw r24,r28
 17895 7a42 8552      		subi r24,37
 17896 7a44 9F4F      		sbci r25,-1
 17897 7a46 FC01      		movw r30,r24
 17898 7a48 8081      		ld r24,Z
 17899 7a4a 9181      		ldd r25,Z+1
 17900 7a4c 8651      		subi r24,22
 17901 7a4e 9E4F      		sbci r25,-2
 17902 7a50 FC01      		movw r30,r24
 17903 7a52 8081      		ld r24,Z
 17904 7a54 9181      		ldd r25,Z+1
 17905 7a56 2B81      		ldd r18,Y+3
 17906 7a58 3C81      		ldd r19,Y+4
 17907 7a5a 281B      		sub r18,r24
 17908 7a5c 390B      		sbc r19,r25
1836:lp_solve_5.5/lp_MPS.c ****       strcpy(name2, MPSname(name0, (in <= lp->rows ? get_row_name(lp, in) :
 17909               		.loc 1 1836 0 discriminator 2
 17910 7a5e CE01      		movw r24,r28
 17911 7a60 8552      		subi r24,37
 17912 7a62 9F4F      		sbci r25,-1
 17913 7a64 FC01      		movw r30,r24
 17914 7a66 8081      		ld r24,Z
 17915 7a68 9181      		ldd r25,Z+1
 17916 7a6a B901      		movw r22,r18
 17917 7a6c 0E94 0000 		call get_col_name
 17918 7a70 AC01      		movw r20,r24
 17919               	.L626:
1836:lp_solve_5.5/lp_MPS.c ****       strcpy(name2, MPSname(name0, (in <= lp->rows ? get_row_name(lp, in) :
 17920               		.loc 1 1836 0 is_stmt 0 discriminator 4
 17921 7a72 CE01      		movw r24,r28
 17922 7a74 8E52      		subi r24,46
 17923 7a76 9F4F      		sbci r25,-1
 17924 7a78 2F81      		ldd r18,Y+7
 17925 7a7a 3885      		ldd r19,Y+8
 17926 7a7c BA01      		movw r22,r20
 17927 7a7e F901      		movw r30,r18
 17928 7a80 0995      		icall
 17929 7a82 9C01      		movw r18,r24
 17930 7a84 CE01      		movw r24,r28
 17931 7a86 8259      		subi r24,-110
 17932 7a88 9F4F      		sbci r25,-1
 17933 7a8a B901      		movw r22,r18
 17934 7a8c 0E94 0000 		call strcpy
1838:lp_solve_5.5/lp_MPS.c ****       fprintf(output, " %2s %s  %s\n", (lp->is_lower[in] ? "XL" : "XU"), name1, name2);
 17935               		.loc 1 1838 0 is_stmt 1 discriminator 4
 17936 7a90 CE01      		movw r24,r28
 17937 7a92 8552      		subi r24,37
 17938 7a94 9F4F      		sbci r25,-1
 17939 7a96 FC01      		movw r30,r24
 17940 7a98 8081      		ld r24,Z
 17941 7a9a 9181      		ldd r25,Z+1
 17942 7a9c 8E52      		subi r24,46
 17943 7a9e 9D4F      		sbci r25,-3
 17944 7aa0 FC01      		movw r30,r24
 17945 7aa2 2081      		ld r18,Z
 17946 7aa4 3181      		ldd r19,Z+1
 17947 7aa6 8B81      		ldd r24,Y+3
 17948 7aa8 9C81      		ldd r25,Y+4
 17949 7aaa 820F      		add r24,r18
 17950 7aac 931F      		adc r25,r19
 17951 7aae FC01      		movw r30,r24
 17952 7ab0 8081      		ld r24,Z
 17953 7ab2 8823      		tst r24
 17954 7ab4 01F0      		breq .L627
 17955               		.loc 1 1838 0 is_stmt 0 discriminator 1
 17956 7ab6 80E0      		ldi r24,lo8(.LC144)
 17957 7ab8 90E0      		ldi r25,hi8(.LC144)
 17958 7aba 00C0      		rjmp .L628
 17959               	.L627:
 17960               		.loc 1 1838 0 discriminator 2
 17961 7abc 80E0      		ldi r24,lo8(.LC145)
 17962 7abe 90E0      		ldi r25,hi8(.LC145)
 17963               	.L628:
 17964               		.loc 1 1838 0 discriminator 4
 17965 7ac0 9E01      		movw r18,r28
 17966 7ac2 2259      		subi r18,-110
 17967 7ac4 3F4F      		sbci r19,-1
 17968 7ac6 432F      		mov r20,r19
 17969 7ac8 4F93      		push r20
 17970 7aca 2F93      		push r18
 17971 7acc 9E01      		movw r18,r28
 17972 7ace 265F      		subi r18,-10
 17973 7ad0 3F4F      		sbci r19,-1
 17974 7ad2 432F      		mov r20,r19
 17975 7ad4 4F93      		push r20
 17976 7ad6 2F93      		push r18
 17977 7ad8 292F      		mov r18,r25
 17978 7ada 2F93      		push r18
 17979 7adc 8F93      		push r24
 17980 7ade 80E0      		ldi r24,lo8(.LC146)
 17981 7ae0 90E0      		ldi r25,hi8(.LC146)
 17982 7ae2 892F      		mov r24,r25
 17983 7ae4 8F93      		push r24
 17984 7ae6 80E0      		ldi r24,lo8(.LC146)
 17985 7ae8 90E0      		ldi r25,hi8(.LC146)
 17986 7aea 8F93      		push r24
 17987 7aec 8E81      		ldd r24,Y+6
 17988 7aee 8F93      		push r24
 17989 7af0 8D81      		ldd r24,Y+5
 17990 7af2 8F93      		push r24
 17991 7af4 0E94 0000 		call fprintf
 17992 7af8 8DB7      		in r24,__SP_L__
 17993 7afa 9EB7      		in r25,__SP_H__
 17994 7afc 0A96      		adiw r24,10
 17995 7afe 0FB6      		in __tmp_reg__,__SREG__
 17996 7b00 F894      		cli
 17997 7b02 DEBF      		out __SP_H__,r29
 17998 7b04 0FBE      		out __SREG__,__tmp_reg__
 17999 7b06 CDBF      		out __SP_L__,r28
 18000 7b08 00C0      		rjmp .L615
 18001               	.L622:
1839:lp_solve_5.5/lp_MPS.c ****     }
1840:lp_solve_5.5/lp_MPS.c **** 
1841:lp_solve_5.5/lp_MPS.c ****     /* Otherwise just write the bound state of the non-basic variable */
1842:lp_solve_5.5/lp_MPS.c ****     else if(in <= lp->sum) {
 18002               		.loc 1 1842 0 is_stmt 1
 18003 7b0a CE01      		movw r24,r28
 18004 7b0c 8552      		subi r24,37
 18005 7b0e 9F4F      		sbci r25,-1
 18006 7b10 FC01      		movw r30,r24
 18007 7b12 8081      		ld r24,Z
 18008 7b14 9181      		ldd r25,Z+1
 18009 7b16 8851      		subi r24,24
 18010 7b18 9E4F      		sbci r25,-2
 18011 7b1a FC01      		movw r30,r24
 18012 7b1c 2081      		ld r18,Z
 18013 7b1e 3181      		ldd r19,Z+1
 18014 7b20 8B81      		ldd r24,Y+3
 18015 7b22 9C81      		ldd r25,Y+4
 18016 7b24 2817      		cp r18,r24
 18017 7b26 3907      		cpc r19,r25
 18018 7b28 04F4      		brge .+2
 18019 7b2a 00C0      		rjmp .L615
1843:lp_solve_5.5/lp_MPS.c ****       strcpy(name1, MPSname(name0, (in <= lp->rows ? get_row_name(lp, in) :
 18020               		.loc 1 1843 0
 18021 7b2c CE01      		movw r24,r28
 18022 7b2e 8552      		subi r24,37
 18023 7b30 9F4F      		sbci r25,-1
 18024 7b32 FC01      		movw r30,r24
 18025 7b34 8081      		ld r24,Z
 18026 7b36 9181      		ldd r25,Z+1
 18027 7b38 8651      		subi r24,22
 18028 7b3a 9E4F      		sbci r25,-2
 18029 7b3c FC01      		movw r30,r24
 18030 7b3e 2081      		ld r18,Z
 18031 7b40 3181      		ldd r19,Z+1
 18032 7b42 8B81      		ldd r24,Y+3
 18033 7b44 9C81      		ldd r25,Y+4
 18034 7b46 2817      		cp r18,r24
 18035 7b48 3907      		cpc r19,r25
 18036 7b4a 04F0      		brlt .L629
 18037               		.loc 1 1843 0 is_stmt 0 discriminator 1
 18038 7b4c 2B81      		ldd r18,Y+3
 18039 7b4e 3C81      		ldd r19,Y+4
 18040 7b50 CE01      		movw r24,r28
 18041 7b52 8552      		subi r24,37
 18042 7b54 9F4F      		sbci r25,-1
 18043 7b56 FC01      		movw r30,r24
 18044 7b58 8081      		ld r24,Z
 18045 7b5a 9181      		ldd r25,Z+1
 18046 7b5c B901      		movw r22,r18
 18047 7b5e 0E94 0000 		call get_row_name
 18048 7b62 AC01      		movw r20,r24
 18049 7b64 00C0      		rjmp .L630
 18050               	.L629:
1844:lp_solve_5.5/lp_MPS.c ****                                               get_col_name(lp, in-lp->rows))));
 18051               		.loc 1 1844 0 is_stmt 1 discriminator 2
 18052 7b66 CE01      		movw r24,r28
 18053 7b68 8552      		subi r24,37
 18054 7b6a 9F4F      		sbci r25,-1
 18055 7b6c FC01      		movw r30,r24
 18056 7b6e 8081      		ld r24,Z
 18057 7b70 9181      		ldd r25,Z+1
 18058 7b72 8651      		subi r24,22
 18059 7b74 9E4F      		sbci r25,-2
 18060 7b76 FC01      		movw r30,r24
 18061 7b78 8081      		ld r24,Z
 18062 7b7a 9181      		ldd r25,Z+1
 18063 7b7c 2B81      		ldd r18,Y+3
 18064 7b7e 3C81      		ldd r19,Y+4
 18065 7b80 281B      		sub r18,r24
 18066 7b82 390B      		sbc r19,r25
1843:lp_solve_5.5/lp_MPS.c ****       strcpy(name1, MPSname(name0, (in <= lp->rows ? get_row_name(lp, in) :
 18067               		.loc 1 1843 0 discriminator 2
 18068 7b84 CE01      		movw r24,r28
 18069 7b86 8552      		subi r24,37
 18070 7b88 9F4F      		sbci r25,-1
 18071 7b8a FC01      		movw r30,r24
 18072 7b8c 8081      		ld r24,Z
 18073 7b8e 9181      		ldd r25,Z+1
 18074 7b90 B901      		movw r22,r18
 18075 7b92 0E94 0000 		call get_col_name
 18076 7b96 AC01      		movw r20,r24
 18077               	.L630:
1843:lp_solve_5.5/lp_MPS.c ****       strcpy(name1, MPSname(name0, (in <= lp->rows ? get_row_name(lp, in) :
 18078               		.loc 1 1843 0 is_stmt 0 discriminator 4
 18079 7b98 CE01      		movw r24,r28
 18080 7b9a 8E52      		subi r24,46
 18081 7b9c 9F4F      		sbci r25,-1
 18082 7b9e 2F81      		ldd r18,Y+7
 18083 7ba0 3885      		ldd r19,Y+8
 18084 7ba2 BA01      		movw r22,r20
 18085 7ba4 F901      		movw r30,r18
 18086 7ba6 0995      		icall
 18087 7ba8 9C01      		movw r18,r24
 18088 7baa CE01      		movw r24,r28
 18089 7bac 0A96      		adiw r24,10
 18090 7bae B901      		movw r22,r18
 18091 7bb0 0E94 0000 		call strcpy
1845:lp_solve_5.5/lp_MPS.c ****       fprintf(output, " %2s %s\n", (lp->is_lower[in] ? "LL" : "UL"), name1);
 18092               		.loc 1 1845 0 is_stmt 1 discriminator 4
 18093 7bb4 CE01      		movw r24,r28
 18094 7bb6 8552      		subi r24,37
 18095 7bb8 9F4F      		sbci r25,-1
 18096 7bba FC01      		movw r30,r24
 18097 7bbc 8081      		ld r24,Z
 18098 7bbe 9181      		ldd r25,Z+1
 18099 7bc0 8E52      		subi r24,46
 18100 7bc2 9D4F      		sbci r25,-3
 18101 7bc4 FC01      		movw r30,r24
 18102 7bc6 2081      		ld r18,Z
 18103 7bc8 3181      		ldd r19,Z+1
 18104 7bca 8B81      		ldd r24,Y+3
 18105 7bcc 9C81      		ldd r25,Y+4
 18106 7bce 820F      		add r24,r18
 18107 7bd0 931F      		adc r25,r19
 18108 7bd2 FC01      		movw r30,r24
 18109 7bd4 8081      		ld r24,Z
 18110 7bd6 8823      		tst r24
 18111 7bd8 01F0      		breq .L631
 18112               		.loc 1 1845 0 is_stmt 0 discriminator 1
 18113 7bda 80E0      		ldi r24,lo8(.LC147)
 18114 7bdc 90E0      		ldi r25,hi8(.LC147)
 18115 7bde 00C0      		rjmp .L632
 18116               	.L631:
 18117               		.loc 1 1845 0 discriminator 2
 18118 7be0 80E0      		ldi r24,lo8(.LC148)
 18119 7be2 90E0      		ldi r25,hi8(.LC148)
 18120               	.L632:
 18121               		.loc 1 1845 0 discriminator 4
 18122 7be4 9E01      		movw r18,r28
 18123 7be6 265F      		subi r18,-10
 18124 7be8 3F4F      		sbci r19,-1
 18125 7bea 432F      		mov r20,r19
 18126 7bec 4F93      		push r20
 18127 7bee 2F93      		push r18
 18128 7bf0 292F      		mov r18,r25
 18129 7bf2 2F93      		push r18
 18130 7bf4 8F93      		push r24
 18131 7bf6 80E0      		ldi r24,lo8(.LC149)
 18132 7bf8 90E0      		ldi r25,hi8(.LC149)
 18133 7bfa 892F      		mov r24,r25
 18134 7bfc 8F93      		push r24
 18135 7bfe 80E0      		ldi r24,lo8(.LC149)
 18136 7c00 90E0      		ldi r25,hi8(.LC149)
 18137 7c02 8F93      		push r24
 18138 7c04 8E81      		ldd r24,Y+6
 18139 7c06 8F93      		push r24
 18140 7c08 8D81      		ldd r24,Y+5
 18141 7c0a 8F93      		push r24
 18142 7c0c 0E94 0000 		call fprintf
 18143 7c10 8DB7      		in r24,__SP_L__
 18144 7c12 9EB7      		in r25,__SP_H__
 18145 7c14 0896      		adiw r24,8
 18146 7c16 0FB6      		in __tmp_reg__,__SREG__
 18147 7c18 F894      		cli
 18148 7c1a DEBF      		out __SP_H__,r29
 18149 7c1c 0FBE      		out __SREG__,__tmp_reg__
 18150 7c1e CDBF      		out __SP_L__,r28
 18151               	.L615:
1819:lp_solve_5.5/lp_MPS.c **** 
 18152               		.loc 1 1819 0 is_stmt 1
 18153 7c20 CE01      		movw r24,r28
 18154 7c22 8552      		subi r24,37
 18155 7c24 9F4F      		sbci r25,-1
 18156 7c26 FC01      		movw r30,r24
 18157 7c28 8081      		ld r24,Z
 18158 7c2a 9181      		ldd r25,Z+1
 18159 7c2c 8851      		subi r24,24
 18160 7c2e 9E4F      		sbci r25,-2
 18161 7c30 FC01      		movw r30,r24
 18162 7c32 2081      		ld r18,Z
 18163 7c34 3181      		ldd r19,Z+1
 18164 7c36 8981      		ldd r24,Y+1
 18165 7c38 9A81      		ldd r25,Y+2
 18166 7c3a 8217      		cp r24,r18
 18167 7c3c 9307      		cpc r25,r19
 18168 7c3e 04F4      		brge .+2
 18169 7c40 00C0      		rjmp .L633
1819:lp_solve_5.5/lp_MPS.c **** 
 18170               		.loc 1 1819 0 is_stmt 0 discriminator 1
 18171 7c42 CE01      		movw r24,r28
 18172 7c44 8552      		subi r24,37
 18173 7c46 9F4F      		sbci r25,-1
 18174 7c48 FC01      		movw r30,r24
 18175 7c4a 8081      		ld r24,Z
 18176 7c4c 9181      		ldd r25,Z+1
 18177 7c4e 8851      		subi r24,24
 18178 7c50 9E4F      		sbci r25,-2
 18179 7c52 FC01      		movw r30,r24
 18180 7c54 2081      		ld r18,Z
 18181 7c56 3181      		ldd r19,Z+1
 18182 7c58 8B81      		ldd r24,Y+3
 18183 7c5a 9C81      		ldd r25,Y+4
 18184 7c5c 8217      		cp r24,r18
 18185 7c5e 9307      		cpc r25,r19
 18186 7c60 04F4      		brge .+2
 18187 7c62 00C0      		rjmp .L633
1846:lp_solve_5.5/lp_MPS.c ****     }
1847:lp_solve_5.5/lp_MPS.c **** 
1848:lp_solve_5.5/lp_MPS.c ****   }
1849:lp_solve_5.5/lp_MPS.c ****   fprintf(output, "ENDATA\n");
 18188               		.loc 1 1849 0 is_stmt 1
 18189 7c64 8D81      		ldd r24,Y+5
 18190 7c66 9E81      		ldd r25,Y+6
 18191 7c68 9C01      		movw r18,r24
 18192 7c6a 47E0      		ldi r20,lo8(7)
 18193 7c6c 50E0      		ldi r21,0
 18194 7c6e 61E0      		ldi r22,lo8(1)
 18195 7c70 70E0      		ldi r23,0
 18196 7c72 80E0      		ldi r24,lo8(.LC134)
 18197 7c74 90E0      		ldi r25,hi8(.LC134)
 18198 7c76 0E94 0000 		call fwrite
1850:lp_solve_5.5/lp_MPS.c **** 
1851:lp_solve_5.5/lp_MPS.c ****   if(filename != NULL)
 18199               		.loc 1 1851 0
 18200 7c7a CE01      		movw r24,r28
 18201 7c7c 8152      		subi r24,33
 18202 7c7e 9F4F      		sbci r25,-1
 18203 7c80 FC01      		movw r30,r24
 18204 7c82 8081      		ld r24,Z
 18205 7c84 9181      		ldd r25,Z+1
 18206 7c86 892B      		or r24,r25
 18207 7c88 01F0      		breq .L634
1852:lp_solve_5.5/lp_MPS.c ****     fclose(output);
 18208               		.loc 1 1852 0
 18209 7c8a 8D81      		ldd r24,Y+5
 18210 7c8c 9E81      		ldd r25,Y+6
 18211 7c8e 0E94 0000 		call fclose
 18212               	.L634:
1853:lp_solve_5.5/lp_MPS.c ****   return( ok );
 18213               		.loc 1 1853 0
 18214 7c92 8985      		ldd r24,Y+9
 18215               	.L635:
 18216               	/* epilogue start */
1854:lp_solve_5.5/lp_MPS.c **** }
 18217               		.loc 1 1854 0 discriminator 1
 18218 7c94 C052      		subi r28,32
 18219 7c96 DF4F      		sbci r29,-1
 18220 7c98 0FB6      		in __tmp_reg__,__SREG__
 18221 7c9a F894      		cli
 18222 7c9c DEBF      		out __SP_H__,r29
 18223 7c9e 0FBE      		out __SREG__,__tmp_reg__
 18224 7ca0 CDBF      		out __SP_L__,r28
 18225 7ca2 DF91      		pop r29
 18226 7ca4 CF91      		pop r28
 18227 7ca6 1F91      		pop r17
 18228 7ca8 0F91      		pop r16
 18229 7caa FF90      		pop r15
 18230 7cac EF90      		pop r14
 18231 7cae DF90      		pop r13
 18232 7cb0 CF90      		pop r12
 18233 7cb2 BF90      		pop r11
 18234 7cb4 AF90      		pop r10
 18235 7cb6 0895      		ret
 18236               		.cfi_endproc
 18237               	.LFE29:
 18239               	.Letext0:
 18240               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\lib\\gc
 18241               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\lib\\gc
 18242               		.file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 18243               		.file 5 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 18244               		.file 6 "lp_solve_5.5\\shared/commonlib.h"
 18245               		.file 7 "lp_solve_5.5/lp_types.h"
 18246               		.file 8 "lp_solve_5.5/lp_lib.h"
 18247               		.file 9 "lp_solve_5.5/lp_utils.h"
 18248               		.file 10 "lp_solve_5.5/lp_Hash.h"
 18249               		.file 11 "lp_solve_5.5/lp_matrix.h"
 18250               		.file 12 "lp_solve_5.5/lp_mipbb.h"
 18251               		.file 13 "lp_solve_5.5/lp_SOS.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lp_MPS.c
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:13     .text:00000000 namecpy
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:196    .text:000000f0 scan_lineFIXED
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:1025   .text:0000063c spaces
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:1123   .text:000006b8 lenfield
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:1241   .text:00000740 scan_lineFREE
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:3241   .text:0000151c addmpscolumn
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:3460   .text:00001658 appendmpsitem
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:3852   .text:000018ee MPS_readfile
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:3999   .text:000019a8 MPS_readhandle
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:3936   .text:0000195e MPS_input
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:4227   .text:00001a00 MPS_readex
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:9874   .text:0000433e number
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:10813  .text:000049a8 formatnumber12
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:10878  .text:000049ee MPSnameFIXED
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:10946  .text:00004a42 MPSnameFREE
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:11006  .text:00004a84 write_data
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:11191  .text:00004b0c MPS_writefileex
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:15570  .text:00006b90 write_lpdata
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:15626  .text:00006bc4 MPS_writefile
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:15745  .text:00006c6c MPS_writehandle
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:15838  .text:00006cde MPS_getnameidx
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:16211  .text:00006f22 MPS_readBAS
C:\Users\GUILHE~1\AppData\Local\Temp\cckZc2sd.s:17257  .text:00007600 MPS_writeBAS

UNDEFINED SYMBOLS
strlen
strncpy
sscanf
report
isspace
strtod
toupper
strcmp
strcpy
add_columnex
set_col_name
set_int
set_bounds
__addsf3
swapINT
swapREAL
fopen
fclose
fgets
__eqsf2
__gesf2
__nesf2
__ltsf2
__fixsfsi
make_lp
delete_lp
memset
set_lp_name
allocREAL
allocINT
__tablejump2__
set_maxim
set_minim
set_row_name
str_add_constraint
find_var
find_row
set_rh
set_upbo
set_semicont
set_lowbo
set_unbounded
set_binary
set_constr_type
is_chsign
SOS_count
sprintf
add_SOS
append_SOSrec
is_int
get_lowbo
get_upbo
free
__gtsf2
__lesf2
strchr
vsnprintf
__mulsf3
__floatsisf
is_maxim
is_splitvar
strncmp
get_lp_name
get_row_name
get_columnex
get_col_name
unscaled_value
is_binary
is_unbounded
is_semicont
fputs
__iob
set_outputstream
get_nameindex
default_basis
__floatdisf
get_total_iter
fprintf
fwrite
__do_copy_data
