   1               		.file	"lp_SOS.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               	.global	create_SOSgroup
  13               	create_SOSgroup:
  14               	.LFB7:
  15               		.file 1 "lp_solve_5.5/lp_SOS.c"
   1:lp_solve_5.5/lp_SOS.c **** 
   2:lp_solve_5.5/lp_SOS.c **** #include <string.h>
   3:lp_solve_5.5/lp_SOS.c **** #include "commonlib.h"
   4:lp_solve_5.5/lp_SOS.c **** #include "lp_lib.h"
   5:lp_solve_5.5/lp_SOS.c **** #include "lp_report.h"
   6:lp_solve_5.5/lp_SOS.c **** #include "lp_SOS.h"
   7:lp_solve_5.5/lp_SOS.c **** 
   8:lp_solve_5.5/lp_SOS.c **** #ifdef FORTIFY
   9:lp_solve_5.5/lp_SOS.c **** # include "lp_fortify.h"
  10:lp_solve_5.5/lp_SOS.c **** #endif
  11:lp_solve_5.5/lp_SOS.c **** 
  12:lp_solve_5.5/lp_SOS.c **** 
  13:lp_solve_5.5/lp_SOS.c **** /*
  14:lp_solve_5.5/lp_SOS.c ****     Specially Ordered Set (SOS) routines - w/interface for lp_solve v5.0+
  15:lp_solve_5.5/lp_SOS.c ****    ----------------------------------------------------------------------------------
  16:lp_solve_5.5/lp_SOS.c ****     Author:        Kjell Eikland
  17:lp_solve_5.5/lp_SOS.c ****     Contact:       kjell.eikland@broadpark.no
  18:lp_solve_5.5/lp_SOS.c ****     License terms: LGPL.
  19:lp_solve_5.5/lp_SOS.c **** 
  20:lp_solve_5.5/lp_SOS.c ****     Requires:      lp_lib.h
  21:lp_solve_5.5/lp_SOS.c **** 
  22:lp_solve_5.5/lp_SOS.c ****     Release notes:
  23:lp_solve_5.5/lp_SOS.c ****     v1.0    1 September 2003    Complete package for SOS creation and use in a LP
  24:lp_solve_5.5/lp_SOS.c ****                                 setting.  Notable feature of this implementation
  25:lp_solve_5.5/lp_SOS.c ****                                 compared to those in other commercial systems is
  26:lp_solve_5.5/lp_SOS.c ****                                 the generalization to SOS'es of "unlimited" order.
  27:lp_solve_5.5/lp_SOS.c ****     v1.1     8 December 2003    Added variable (index) deletion method.
  28:lp_solve_5.5/lp_SOS.c ****     v1.2    17 December 2004    Added bound change tracking functionality.
  29:lp_solve_5.5/lp_SOS.c ****     v1.3    18 September 2005   Added sparse SOS handling to speed up processing
  30:lp_solve_5.5/lp_SOS.c ****                                 of large number of SOS'es.
  31:lp_solve_5.5/lp_SOS.c **** 
  32:lp_solve_5.5/lp_SOS.c ****    ----------------------------------------------------------------------------------
  33:lp_solve_5.5/lp_SOS.c **** */
  34:lp_solve_5.5/lp_SOS.c **** 
  35:lp_solve_5.5/lp_SOS.c **** /* SOS group functions */
  36:lp_solve_5.5/lp_SOS.c **** STATIC SOSgroup *create_SOSgroup(lprec *lp)
  37:lp_solve_5.5/lp_SOS.c **** {
  16               		.loc 1 37 0
  17               		.cfi_startproc
  18 0000 CF93      		push r28
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22 0002 DF93      		push r29
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 29, -3
  26 0004 00D0      		rcall .
  27 0006 00D0      		rcall .
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 8
  30 0008 CDB7      		in r28,__SP_L__
  31 000a DEB7      		in r29,__SP_H__
  32               	.LCFI3:
  33               		.cfi_def_cfa_register 28
  34               	/* prologue: function */
  35               	/* frame size = 4 */
  36               	/* stack size = 6 */
  37               	.L__stack_usage = 6
  38 000c 9C83      		std Y+4,r25
  39 000e 8B83      		std Y+3,r24
  38:lp_solve_5.5/lp_SOS.c ****   SOSgroup *group;
  39:lp_solve_5.5/lp_SOS.c **** 
  40:lp_solve_5.5/lp_SOS.c ****   group = (SOSgroup *) calloc(1, sizeof(*group));
  40               		.loc 1 40 0
  41 0010 60E1      		ldi r22,lo8(16)
  42 0012 70E0      		ldi r23,0
  43 0014 81E0      		ldi r24,lo8(1)
  44 0016 90E0      		ldi r25,0
  45 0018 0E94 0000 		call calloc
  46 001c 9A83      		std Y+2,r25
  47 001e 8983      		std Y+1,r24
  41:lp_solve_5.5/lp_SOS.c ****   group->lp = lp;
  48               		.loc 1 41 0
  49 0020 8981      		ldd r24,Y+1
  50 0022 9A81      		ldd r25,Y+2
  51 0024 2B81      		ldd r18,Y+3
  52 0026 3C81      		ldd r19,Y+4
  53 0028 FC01      		movw r30,r24
  54 002a 3183      		std Z+1,r19
  55 002c 2083      		st Z,r18
  42:lp_solve_5.5/lp_SOS.c ****   group->sos_alloc = SOS_START_SIZE;
  56               		.loc 1 42 0
  57 002e 8981      		ldd r24,Y+1
  58 0030 9A81      		ldd r25,Y+2
  59 0032 2AE0      		ldi r18,lo8(10)
  60 0034 30E0      		ldi r19,0
  61 0036 FC01      		movw r30,r24
  62 0038 3583      		std Z+5,r19
  63 003a 2483      		std Z+4,r18
  43:lp_solve_5.5/lp_SOS.c ****   group->sos_list = (SOSrec **) malloc((group->sos_alloc) * sizeof(*group->sos_list));
  64               		.loc 1 43 0
  65 003c 8981      		ldd r24,Y+1
  66 003e 9A81      		ldd r25,Y+2
  67 0040 FC01      		movw r30,r24
  68 0042 8481      		ldd r24,Z+4
  69 0044 9581      		ldd r25,Z+5
  70 0046 880F      		lsl r24
  71 0048 991F      		rol r25
  72 004a 0E94 0000 		call malloc
  73 004e 9C01      		movw r18,r24
  74 0050 8981      		ldd r24,Y+1
  75 0052 9A81      		ldd r25,Y+2
  76 0054 FC01      		movw r30,r24
  77 0056 3383      		std Z+3,r19
  78 0058 2283      		std Z+2,r18
  44:lp_solve_5.5/lp_SOS.c ****   return(group);
  79               		.loc 1 44 0
  80 005a 8981      		ldd r24,Y+1
  81 005c 9A81      		ldd r25,Y+2
  82               	/* epilogue start */
  45:lp_solve_5.5/lp_SOS.c **** }
  83               		.loc 1 45 0
  84 005e 0F90      		pop __tmp_reg__
  85 0060 0F90      		pop __tmp_reg__
  86 0062 0F90      		pop __tmp_reg__
  87 0064 0F90      		pop __tmp_reg__
  88 0066 DF91      		pop r29
  89 0068 CF91      		pop r28
  90 006a 0895      		ret
  91               		.cfi_endproc
  92               	.LFE7:
  94               	.global	__floatsisf
  95               	.global	__mulsf3
  96               	.global	__fixsfsi
  97               	.global	resize_SOSgroup
  99               	resize_SOSgroup:
 100               	.LFB8:
  46:lp_solve_5.5/lp_SOS.c **** 
  47:lp_solve_5.5/lp_SOS.c **** STATIC void resize_SOSgroup(SOSgroup *group)
  48:lp_solve_5.5/lp_SOS.c **** {
 101               		.loc 1 48 0
 102               		.cfi_startproc
 103 006c CF93      		push r28
 104               	.LCFI4:
 105               		.cfi_def_cfa_offset 3
 106               		.cfi_offset 28, -2
 107 006e DF93      		push r29
 108               	.LCFI5:
 109               		.cfi_def_cfa_offset 4
 110               		.cfi_offset 29, -3
 111 0070 00D0      		rcall .
 112               	.LCFI6:
 113               		.cfi_def_cfa_offset 6
 114 0072 CDB7      		in r28,__SP_L__
 115 0074 DEB7      		in r29,__SP_H__
 116               	.LCFI7:
 117               		.cfi_def_cfa_register 28
 118               	/* prologue: function */
 119               	/* frame size = 2 */
 120               	/* stack size = 4 */
 121               	.L__stack_usage = 4
 122 0076 9A83      		std Y+2,r25
 123 0078 8983      		std Y+1,r24
  49:lp_solve_5.5/lp_SOS.c ****   if(group->sos_count == group->sos_alloc) {
 124               		.loc 1 49 0
 125 007a 8981      		ldd r24,Y+1
 126 007c 9A81      		ldd r25,Y+2
 127 007e FC01      		movw r30,r24
 128 0080 2681      		ldd r18,Z+6
 129 0082 3781      		ldd r19,Z+7
 130 0084 8981      		ldd r24,Y+1
 131 0086 9A81      		ldd r25,Y+2
 132 0088 FC01      		movw r30,r24
 133 008a 8481      		ldd r24,Z+4
 134 008c 9581      		ldd r25,Z+5
 135 008e 2817      		cp r18,r24
 136 0090 3907      		cpc r19,r25
 137 0092 01F4      		brne .L5
  50:lp_solve_5.5/lp_SOS.c ****     group->sos_alloc = (int)((double) group->sos_alloc*RESIZEFACTOR);
 138               		.loc 1 50 0
 139 0094 8981      		ldd r24,Y+1
 140 0096 9A81      		ldd r25,Y+2
 141 0098 FC01      		movw r30,r24
 142 009a 8481      		ldd r24,Z+4
 143 009c 9581      		ldd r25,Z+5
 144 009e 092E      		mov __tmp_reg__,r25
 145 00a0 000C      		lsl r0
 146 00a2 AA0B      		sbc r26,r26
 147 00a4 BB0B      		sbc r27,r27
 148 00a6 BC01      		movw r22,r24
 149 00a8 CD01      		movw r24,r26
 150 00aa 0E94 0000 		call __floatsisf
 151 00ae DC01      		movw r26,r24
 152 00b0 CB01      		movw r24,r22
 153 00b2 20E0      		ldi r18,0
 154 00b4 30E0      		ldi r19,0
 155 00b6 40E8      		ldi r20,lo8(-128)
 156 00b8 50E4      		ldi r21,lo8(64)
 157 00ba BC01      		movw r22,r24
 158 00bc CD01      		movw r24,r26
 159 00be 0E94 0000 		call __mulsf3
 160 00c2 DC01      		movw r26,r24
 161 00c4 CB01      		movw r24,r22
 162 00c6 BC01      		movw r22,r24
 163 00c8 CD01      		movw r24,r26
 164 00ca 0E94 0000 		call __fixsfsi
 165 00ce DC01      		movw r26,r24
 166 00d0 CB01      		movw r24,r22
 167 00d2 9C01      		movw r18,r24
 168 00d4 8981      		ldd r24,Y+1
 169 00d6 9A81      		ldd r25,Y+2
 170 00d8 FC01      		movw r30,r24
 171 00da 3583      		std Z+5,r19
 172 00dc 2483      		std Z+4,r18
  51:lp_solve_5.5/lp_SOS.c ****     group->sos_list = (SOSrec **) realloc(group->sos_list,
  52:lp_solve_5.5/lp_SOS.c ****                                           (group->sos_alloc) * sizeof(*group->sos_list));
 173               		.loc 1 52 0
 174 00de 8981      		ldd r24,Y+1
 175 00e0 9A81      		ldd r25,Y+2
 176 00e2 FC01      		movw r30,r24
 177 00e4 8481      		ldd r24,Z+4
 178 00e6 9581      		ldd r25,Z+5
  51:lp_solve_5.5/lp_SOS.c ****     group->sos_list = (SOSrec **) realloc(group->sos_list,
 179               		.loc 1 51 0
 180 00e8 9C01      		movw r18,r24
 181 00ea 220F      		lsl r18
 182 00ec 331F      		rol r19
 183 00ee 8981      		ldd r24,Y+1
 184 00f0 9A81      		ldd r25,Y+2
 185 00f2 FC01      		movw r30,r24
 186 00f4 8281      		ldd r24,Z+2
 187 00f6 9381      		ldd r25,Z+3
 188 00f8 B901      		movw r22,r18
 189 00fa 0E94 0000 		call realloc
 190 00fe 9C01      		movw r18,r24
 191 0100 8981      		ldd r24,Y+1
 192 0102 9A81      		ldd r25,Y+2
 193 0104 FC01      		movw r30,r24
 194 0106 3383      		std Z+3,r19
 195 0108 2283      		std Z+2,r18
 196               	.L5:
  53:lp_solve_5.5/lp_SOS.c ****   }
  54:lp_solve_5.5/lp_SOS.c **** }
 197               		.loc 1 54 0
 198 010a 0000      		nop
 199               	/* epilogue start */
 200 010c 0F90      		pop __tmp_reg__
 201 010e 0F90      		pop __tmp_reg__
 202 0110 DF91      		pop r29
 203 0112 CF91      		pop r28
 204 0114 0895      		ret
 205               		.cfi_endproc
 206               	.LFE8:
 208               	.global	append_SOSgroup
 210               	append_SOSgroup:
 211               	.LFB9:
  55:lp_solve_5.5/lp_SOS.c **** 
  56:lp_solve_5.5/lp_SOS.c **** STATIC int append_SOSgroup(SOSgroup *group, SOSrec *SOS)
  57:lp_solve_5.5/lp_SOS.c **** {
 212               		.loc 1 57 0
 213               		.cfi_startproc
 214 0116 CF93      		push r28
 215               	.LCFI8:
 216               		.cfi_def_cfa_offset 3
 217               		.cfi_offset 28, -2
 218 0118 DF93      		push r29
 219               	.LCFI9:
 220               		.cfi_def_cfa_offset 4
 221               		.cfi_offset 29, -3
 222 011a CDB7      		in r28,__SP_L__
 223 011c DEB7      		in r29,__SP_H__
 224               	.LCFI10:
 225               		.cfi_def_cfa_register 28
 226 011e 2A97      		sbiw r28,10
 227               	.LCFI11:
 228               		.cfi_def_cfa_offset 14
 229 0120 0FB6      		in __tmp_reg__,__SREG__
 230 0122 F894      		cli
 231 0124 DEBF      		out __SP_H__,r29
 232 0126 0FBE      		out __SREG__,__tmp_reg__
 233 0128 CDBF      		out __SP_L__,r28
 234               	/* prologue: function */
 235               	/* frame size = 10 */
 236               	/* stack size = 12 */
 237               	.L__stack_usage = 12
 238 012a 9887      		std Y+8,r25
 239 012c 8F83      		std Y+7,r24
 240 012e 7A87      		std Y+10,r23
 241 0130 6987      		std Y+9,r22
  58:lp_solve_5.5/lp_SOS.c ****   int    i, k;
  59:lp_solve_5.5/lp_SOS.c ****   SOSrec *SOSHold;
  60:lp_solve_5.5/lp_SOS.c **** 
  61:lp_solve_5.5/lp_SOS.c ****   /* Check if we should resize */
  62:lp_solve_5.5/lp_SOS.c ****   resize_SOSgroup(group);
 242               		.loc 1 62 0
 243 0132 8F81      		ldd r24,Y+7
 244 0134 9885      		ldd r25,Y+8
 245 0136 0E94 0000 		call resize_SOSgroup
  63:lp_solve_5.5/lp_SOS.c **** 
  64:lp_solve_5.5/lp_SOS.c ****   /* First append to the end of the list */
  65:lp_solve_5.5/lp_SOS.c ****   group->sos_list[group->sos_count] = SOS;
 246               		.loc 1 65 0
 247 013a 8F81      		ldd r24,Y+7
 248 013c 9885      		ldd r25,Y+8
 249 013e FC01      		movw r30,r24
 250 0140 2281      		ldd r18,Z+2
 251 0142 3381      		ldd r19,Z+3
 252 0144 8F81      		ldd r24,Y+7
 253 0146 9885      		ldd r25,Y+8
 254 0148 FC01      		movw r30,r24
 255 014a 8681      		ldd r24,Z+6
 256 014c 9781      		ldd r25,Z+7
 257 014e 880F      		lsl r24
 258 0150 991F      		rol r25
 259 0152 820F      		add r24,r18
 260 0154 931F      		adc r25,r19
 261 0156 2985      		ldd r18,Y+9
 262 0158 3A85      		ldd r19,Y+10
 263 015a FC01      		movw r30,r24
 264 015c 3183      		std Z+1,r19
 265 015e 2083      		st Z,r18
  66:lp_solve_5.5/lp_SOS.c ****   group->sos_count++;
 266               		.loc 1 66 0
 267 0160 8F81      		ldd r24,Y+7
 268 0162 9885      		ldd r25,Y+8
 269 0164 FC01      		movw r30,r24
 270 0166 8681      		ldd r24,Z+6
 271 0168 9781      		ldd r25,Z+7
 272 016a 9C01      		movw r18,r24
 273 016c 2F5F      		subi r18,-1
 274 016e 3F4F      		sbci r19,-1
 275 0170 8F81      		ldd r24,Y+7
 276 0172 9885      		ldd r25,Y+8
 277 0174 FC01      		movw r30,r24
 278 0176 3783      		std Z+7,r19
 279 0178 2683      		std Z+6,r18
  67:lp_solve_5.5/lp_SOS.c ****   i = abs(SOS->type);
 280               		.loc 1 67 0
 281 017a 8985      		ldd r24,Y+9
 282 017c 9A85      		ldd r25,Y+10
 283 017e FC01      		movw r30,r24
 284 0180 8681      		ldd r24,Z+6
 285 0182 9781      		ldd r25,Z+7
 286 0184 9923      		tst r25
 287 0186 04F4      		brge .L7
 288 0188 9195      		neg r25
 289 018a 8195      		neg r24
 290 018c 9109      		sbc r25,__zero_reg__
 291               	.L7:
 292 018e 9A83      		std Y+2,r25
 293 0190 8983      		std Y+1,r24
  68:lp_solve_5.5/lp_SOS.c ****   SETMAX(group->maxorder, i);
 294               		.loc 1 68 0
 295 0192 8F81      		ldd r24,Y+7
 296 0194 9885      		ldd r25,Y+8
 297 0196 FC01      		movw r30,r24
 298 0198 2085      		ldd r18,Z+8
 299 019a 3185      		ldd r19,Z+9
 300 019c 8981      		ldd r24,Y+1
 301 019e 9A81      		ldd r25,Y+2
 302 01a0 2817      		cp r18,r24
 303 01a2 3907      		cpc r19,r25
 304 01a4 04F4      		brge .L8
 305               		.loc 1 68 0 is_stmt 0 discriminator 1
 306 01a6 8F81      		ldd r24,Y+7
 307 01a8 9885      		ldd r25,Y+8
 308 01aa 2981      		ldd r18,Y+1
 309 01ac 3A81      		ldd r19,Y+2
 310 01ae FC01      		movw r30,r24
 311 01b0 3187      		std Z+9,r19
 312 01b2 2087      		std Z+8,r18
 313               	.L8:
  69:lp_solve_5.5/lp_SOS.c ****   if(i == 1)
 314               		.loc 1 69 0 is_stmt 1
 315 01b4 8981      		ldd r24,Y+1
 316 01b6 9A81      		ldd r25,Y+2
 317 01b8 0197      		sbiw r24,1
 318 01ba 01F4      		brne .L9
  70:lp_solve_5.5/lp_SOS.c ****     group->sos1_count++;
 319               		.loc 1 70 0
 320 01bc 8F81      		ldd r24,Y+7
 321 01be 9885      		ldd r25,Y+8
 322 01c0 FC01      		movw r30,r24
 323 01c2 8285      		ldd r24,Z+10
 324 01c4 9385      		ldd r25,Z+11
 325 01c6 9C01      		movw r18,r24
 326 01c8 2F5F      		subi r18,-1
 327 01ca 3F4F      		sbci r19,-1
 328 01cc 8F81      		ldd r24,Y+7
 329 01ce 9885      		ldd r25,Y+8
 330 01d0 FC01      		movw r30,r24
 331 01d2 3387      		std Z+11,r19
 332 01d4 2287      		std Z+10,r18
 333               	.L9:
  71:lp_solve_5.5/lp_SOS.c ****   k = group->sos_count;
 334               		.loc 1 71 0
 335 01d6 8F81      		ldd r24,Y+7
 336 01d8 9885      		ldd r25,Y+8
 337 01da FC01      		movw r30,r24
 338 01dc 8681      		ldd r24,Z+6
 339 01de 9781      		ldd r25,Z+7
 340 01e0 9C83      		std Y+4,r25
 341 01e2 8B83      		std Y+3,r24
  72:lp_solve_5.5/lp_SOS.c ****   SOS->tagorder = k;
 342               		.loc 1 72 0
 343 01e4 8985      		ldd r24,Y+9
 344 01e6 9A85      		ldd r25,Y+10
 345 01e8 2B81      		ldd r18,Y+3
 346 01ea 3C81      		ldd r19,Y+4
 347 01ec FC01      		movw r30,r24
 348 01ee 3383      		std Z+3,r19
 349 01f0 2283      		std Z+2,r18
  73:lp_solve_5.5/lp_SOS.c **** 
  74:lp_solve_5.5/lp_SOS.c ****   /* Sort the SOS list by given priority */
  75:lp_solve_5.5/lp_SOS.c ****   for(i = group->sos_count-1; i > 0; i--) {
 350               		.loc 1 75 0
 351 01f2 8F81      		ldd r24,Y+7
 352 01f4 9885      		ldd r25,Y+8
 353 01f6 FC01      		movw r30,r24
 354 01f8 8681      		ldd r24,Z+6
 355 01fa 9781      		ldd r25,Z+7
 356 01fc 0197      		sbiw r24,1
 357 01fe 9A83      		std Y+2,r25
 358 0200 8983      		std Y+1,r24
 359 0202 00C0      		rjmp .L10
 360               	.L15:
  76:lp_solve_5.5/lp_SOS.c ****     if(group->sos_list[i]->priority < group->sos_list[i-1]->priority) {
 361               		.loc 1 76 0
 362 0204 8F81      		ldd r24,Y+7
 363 0206 9885      		ldd r25,Y+8
 364 0208 FC01      		movw r30,r24
 365 020a 2281      		ldd r18,Z+2
 366 020c 3381      		ldd r19,Z+3
 367 020e 8981      		ldd r24,Y+1
 368 0210 9A81      		ldd r25,Y+2
 369 0212 880F      		lsl r24
 370 0214 991F      		rol r25
 371 0216 820F      		add r24,r18
 372 0218 931F      		adc r25,r19
 373 021a FC01      		movw r30,r24
 374 021c 8081      		ld r24,Z
 375 021e 9181      		ldd r25,Z+1
 376 0220 FC01      		movw r30,r24
 377 0222 2385      		ldd r18,Z+11
 378 0224 3485      		ldd r19,Z+12
 379 0226 8F81      		ldd r24,Y+7
 380 0228 9885      		ldd r25,Y+8
 381 022a FC01      		movw r30,r24
 382 022c 4281      		ldd r20,Z+2
 383 022e 5381      		ldd r21,Z+3
 384 0230 8981      		ldd r24,Y+1
 385 0232 9A81      		ldd r25,Y+2
 386 0234 8150      		subi r24,1
 387 0236 9048      		sbci r25,-128
 388 0238 880F      		lsl r24
 389 023a 991F      		rol r25
 390 023c 840F      		add r24,r20
 391 023e 951F      		adc r25,r21
 392 0240 FC01      		movw r30,r24
 393 0242 8081      		ld r24,Z
 394 0244 9181      		ldd r25,Z+1
 395 0246 FC01      		movw r30,r24
 396 0248 8385      		ldd r24,Z+11
 397 024a 9485      		ldd r25,Z+12
 398 024c 2817      		cp r18,r24
 399 024e 3907      		cpc r19,r25
 400 0250 04F0      		brlt .+2
 401 0252 00C0      		rjmp .L17
  77:lp_solve_5.5/lp_SOS.c ****       SOSHold = group->sos_list[i];
 402               		.loc 1 77 0
 403 0254 8F81      		ldd r24,Y+7
 404 0256 9885      		ldd r25,Y+8
 405 0258 FC01      		movw r30,r24
 406 025a 2281      		ldd r18,Z+2
 407 025c 3381      		ldd r19,Z+3
 408 025e 8981      		ldd r24,Y+1
 409 0260 9A81      		ldd r25,Y+2
 410 0262 880F      		lsl r24
 411 0264 991F      		rol r25
 412 0266 820F      		add r24,r18
 413 0268 931F      		adc r25,r19
 414 026a FC01      		movw r30,r24
 415 026c 8081      		ld r24,Z
 416 026e 9181      		ldd r25,Z+1
 417 0270 9E83      		std Y+6,r25
 418 0272 8D83      		std Y+5,r24
  78:lp_solve_5.5/lp_SOS.c ****       group->sos_list[i] = group->sos_list[i-1];
 419               		.loc 1 78 0
 420 0274 8F81      		ldd r24,Y+7
 421 0276 9885      		ldd r25,Y+8
 422 0278 FC01      		movw r30,r24
 423 027a 2281      		ldd r18,Z+2
 424 027c 3381      		ldd r19,Z+3
 425 027e 8981      		ldd r24,Y+1
 426 0280 9A81      		ldd r25,Y+2
 427 0282 880F      		lsl r24
 428 0284 991F      		rol r25
 429 0286 820F      		add r24,r18
 430 0288 931F      		adc r25,r19
 431 028a 2F81      		ldd r18,Y+7
 432 028c 3885      		ldd r19,Y+8
 433 028e F901      		movw r30,r18
 434 0290 4281      		ldd r20,Z+2
 435 0292 5381      		ldd r21,Z+3
 436 0294 2981      		ldd r18,Y+1
 437 0296 3A81      		ldd r19,Y+2
 438 0298 2150      		subi r18,1
 439 029a 3048      		sbci r19,-128
 440 029c 220F      		lsl r18
 441 029e 331F      		rol r19
 442 02a0 240F      		add r18,r20
 443 02a2 351F      		adc r19,r21
 444 02a4 F901      		movw r30,r18
 445 02a6 2081      		ld r18,Z
 446 02a8 3181      		ldd r19,Z+1
 447 02aa FC01      		movw r30,r24
 448 02ac 3183      		std Z+1,r19
 449 02ae 2083      		st Z,r18
  79:lp_solve_5.5/lp_SOS.c ****       group->sos_list[i-1] = SOSHold;
 450               		.loc 1 79 0
 451 02b0 8F81      		ldd r24,Y+7
 452 02b2 9885      		ldd r25,Y+8
 453 02b4 FC01      		movw r30,r24
 454 02b6 2281      		ldd r18,Z+2
 455 02b8 3381      		ldd r19,Z+3
 456 02ba 8981      		ldd r24,Y+1
 457 02bc 9A81      		ldd r25,Y+2
 458 02be 8150      		subi r24,1
 459 02c0 9048      		sbci r25,-128
 460 02c2 880F      		lsl r24
 461 02c4 991F      		rol r25
 462 02c6 820F      		add r24,r18
 463 02c8 931F      		adc r25,r19
 464 02ca 2D81      		ldd r18,Y+5
 465 02cc 3E81      		ldd r19,Y+6
 466 02ce FC01      		movw r30,r24
 467 02d0 3183      		std Z+1,r19
 468 02d2 2083      		st Z,r18
  80:lp_solve_5.5/lp_SOS.c ****       if(SOSHold == SOS)
 469               		.loc 1 80 0
 470 02d4 2D81      		ldd r18,Y+5
 471 02d6 3E81      		ldd r19,Y+6
 472 02d8 8985      		ldd r24,Y+9
 473 02da 9A85      		ldd r25,Y+10
 474 02dc 2817      		cp r18,r24
 475 02de 3907      		cpc r19,r25
 476 02e0 01F4      		brne .L13
  81:lp_solve_5.5/lp_SOS.c ****         k = i; /* This is the index in the [1..> range */
 477               		.loc 1 81 0
 478 02e2 8981      		ldd r24,Y+1
 479 02e4 9A81      		ldd r25,Y+2
 480 02e6 9C83      		std Y+4,r25
 481 02e8 8B83      		std Y+3,r24
 482               	.L13:
  75:lp_solve_5.5/lp_SOS.c ****     if(group->sos_list[i]->priority < group->sos_list[i-1]->priority) {
 483               		.loc 1 75 0 discriminator 2
 484 02ea 8981      		ldd r24,Y+1
 485 02ec 9A81      		ldd r25,Y+2
 486 02ee 0197      		sbiw r24,1
 487 02f0 9A83      		std Y+2,r25
 488 02f2 8983      		std Y+1,r24
 489               	.L10:
  75:lp_solve_5.5/lp_SOS.c ****     if(group->sos_list[i]->priority < group->sos_list[i-1]->priority) {
 490               		.loc 1 75 0 is_stmt 0 discriminator 1
 491 02f4 8981      		ldd r24,Y+1
 492 02f6 9A81      		ldd r25,Y+2
 493 02f8 1816      		cp __zero_reg__,r24
 494 02fa 1906      		cpc __zero_reg__,r25
 495 02fc 04F4      		brge .+2
 496 02fe 00C0      		rjmp .L15
 497 0300 00C0      		rjmp .L14
 498               	.L17:
  82:lp_solve_5.5/lp_SOS.c ****     }
  83:lp_solve_5.5/lp_SOS.c ****     else
  84:lp_solve_5.5/lp_SOS.c ****       break;
 499               		.loc 1 84 0 is_stmt 1
 500 0302 0000      		nop
 501               	.L14:
  85:lp_solve_5.5/lp_SOS.c ****   }
  86:lp_solve_5.5/lp_SOS.c ****   /* Return the list index of the new SOS */
  87:lp_solve_5.5/lp_SOS.c ****   return( k );
 502               		.loc 1 87 0
 503 0304 8B81      		ldd r24,Y+3
 504 0306 9C81      		ldd r25,Y+4
 505               	/* epilogue start */
  88:lp_solve_5.5/lp_SOS.c **** }
 506               		.loc 1 88 0
 507 0308 2A96      		adiw r28,10
 508 030a 0FB6      		in __tmp_reg__,__SREG__
 509 030c F894      		cli
 510 030e DEBF      		out __SP_H__,r29
 511 0310 0FBE      		out __SREG__,__tmp_reg__
 512 0312 CDBF      		out __SP_L__,r28
 513 0314 DF91      		pop r29
 514 0316 CF91      		pop r28
 515 0318 0895      		ret
 516               		.cfi_endproc
 517               	.LFE9:
 519               	.global	clean_SOSgroup
 521               	clean_SOSgroup:
 522               	.LFB10:
  89:lp_solve_5.5/lp_SOS.c **** 
  90:lp_solve_5.5/lp_SOS.c **** 
  91:lp_solve_5.5/lp_SOS.c **** STATIC int clean_SOSgroup(SOSgroup *group, MYBOOL forceupdatemap)
  92:lp_solve_5.5/lp_SOS.c **** {
 523               		.loc 1 92 0
 524               		.cfi_startproc
 525 031a CF93      		push r28
 526               	.LCFI12:
 527               		.cfi_def_cfa_offset 3
 528               		.cfi_offset 28, -2
 529 031c DF93      		push r29
 530               	.LCFI13:
 531               		.cfi_def_cfa_offset 4
 532               		.cfi_offset 29, -3
 533 031e CDB7      		in r28,__SP_L__
 534 0320 DEB7      		in r29,__SP_H__
 535               	.LCFI14:
 536               		.cfi_def_cfa_register 28
 537 0322 2B97      		sbiw r28,11
 538               	.LCFI15:
 539               		.cfi_def_cfa_offset 15
 540 0324 0FB6      		in __tmp_reg__,__SREG__
 541 0326 F894      		cli
 542 0328 DEBF      		out __SP_H__,r29
 543 032a 0FBE      		out __SREG__,__tmp_reg__
 544 032c CDBF      		out __SP_L__,r28
 545               	/* prologue: function */
 546               	/* frame size = 11 */
 547               	/* stack size = 13 */
 548               	.L__stack_usage = 13
 549 032e 9A87      		std Y+10,r25
 550 0330 8987      		std Y+9,r24
 551 0332 6B87      		std Y+11,r22
  93:lp_solve_5.5/lp_SOS.c ****   int    i, n, k;
  94:lp_solve_5.5/lp_SOS.c ****   SOSrec *SOS;
  95:lp_solve_5.5/lp_SOS.c **** 
  96:lp_solve_5.5/lp_SOS.c ****   if(group == NULL)
 552               		.loc 1 96 0
 553 0334 8985      		ldd r24,Y+9
 554 0336 9A85      		ldd r25,Y+10
 555 0338 892B      		or r24,r25
 556 033a 01F4      		brne .L19
  97:lp_solve_5.5/lp_SOS.c ****     return( 0 );
 557               		.loc 1 97 0
 558 033c 80E0      		ldi r24,0
 559 033e 90E0      		ldi r25,0
 560 0340 00C0      		rjmp .L20
 561               	.L19:
  98:lp_solve_5.5/lp_SOS.c **** 
  99:lp_solve_5.5/lp_SOS.c ****   /* Delete any SOS without members or trivial member count */
 100:lp_solve_5.5/lp_SOS.c ****   n = 0;
 562               		.loc 1 100 0
 563 0342 1C82      		std Y+4,__zero_reg__
 564 0344 1B82      		std Y+3,__zero_reg__
 101:lp_solve_5.5/lp_SOS.c ****   if(group->sos_alloc > 0) {
 565               		.loc 1 101 0
 566 0346 8985      		ldd r24,Y+9
 567 0348 9A85      		ldd r25,Y+10
 568 034a FC01      		movw r30,r24
 569 034c 8481      		ldd r24,Z+4
 570 034e 9581      		ldd r25,Z+5
 571 0350 1816      		cp __zero_reg__,r24
 572 0352 1906      		cpc __zero_reg__,r25
 573 0354 04F0      		brlt .+2
 574 0356 00C0      		rjmp .L21
 102:lp_solve_5.5/lp_SOS.c ****     group->maxorder = 0;
 575               		.loc 1 102 0
 576 0358 8985      		ldd r24,Y+9
 577 035a 9A85      		ldd r25,Y+10
 578 035c FC01      		movw r30,r24
 579 035e 1186      		std Z+9,__zero_reg__
 580 0360 1086      		std Z+8,__zero_reg__
 103:lp_solve_5.5/lp_SOS.c ****     for(i = group->sos_count; i > 0; i--) {
 581               		.loc 1 103 0
 582 0362 8985      		ldd r24,Y+9
 583 0364 9A85      		ldd r25,Y+10
 584 0366 FC01      		movw r30,r24
 585 0368 8681      		ldd r24,Z+6
 586 036a 9781      		ldd r25,Z+7
 587 036c 9A83      		std Y+2,r25
 588 036e 8983      		std Y+1,r24
 589 0370 00C0      		rjmp .L22
 590               	.L29:
 104:lp_solve_5.5/lp_SOS.c ****       SOS = group->sos_list[i-1];
 591               		.loc 1 104 0
 592 0372 8985      		ldd r24,Y+9
 593 0374 9A85      		ldd r25,Y+10
 594 0376 FC01      		movw r30,r24
 595 0378 2281      		ldd r18,Z+2
 596 037a 3381      		ldd r19,Z+3
 597 037c 8981      		ldd r24,Y+1
 598 037e 9A81      		ldd r25,Y+2
 599 0380 8150      		subi r24,1
 600 0382 9048      		sbci r25,-128
 601 0384 880F      		lsl r24
 602 0386 991F      		rol r25
 603 0388 820F      		add r24,r18
 604 038a 931F      		adc r25,r19
 605 038c FC01      		movw r30,r24
 606 038e 8081      		ld r24,Z
 607 0390 9181      		ldd r25,Z+1
 608 0392 9E83      		std Y+6,r25
 609 0394 8D83      		std Y+5,r24
 105:lp_solve_5.5/lp_SOS.c ****       k = SOS->members[0];
 610               		.loc 1 105 0
 611 0396 8D81      		ldd r24,Y+5
 612 0398 9E81      		ldd r25,Y+6
 613 039a FC01      		movw r30,r24
 614 039c 8585      		ldd r24,Z+13
 615 039e 9685      		ldd r25,Z+14
 616 03a0 FC01      		movw r30,r24
 617 03a2 8081      		ld r24,Z
 618 03a4 9181      		ldd r25,Z+1
 619 03a6 9887      		std Y+8,r25
 620 03a8 8F83      		std Y+7,r24
 106:lp_solve_5.5/lp_SOS.c ****       if((k == 0) ||                              /* Empty */
 621               		.loc 1 106 0
 622 03aa 8F81      		ldd r24,Y+7
 623 03ac 9885      		ldd r25,Y+8
 624 03ae 892B      		or r24,r25
 625 03b0 01F0      		breq .L23
 107:lp_solve_5.5/lp_SOS.c ****          ((k == abs(SOS->type)) && (k <= 2))) {   /* Trivial */
 626               		.loc 1 107 0 discriminator 1
 627 03b2 8D81      		ldd r24,Y+5
 628 03b4 9E81      		ldd r25,Y+6
 629 03b6 FC01      		movw r30,r24
 630 03b8 8681      		ldd r24,Z+6
 631 03ba 9781      		ldd r25,Z+7
 632 03bc 9923      		tst r25
 633 03be 04F4      		brge .L24
 634 03c0 9195      		neg r25
 635 03c2 8195      		neg r24
 636 03c4 9109      		sbc r25,__zero_reg__
 637               	.L24:
 638 03c6 9C01      		movw r18,r24
 106:lp_solve_5.5/lp_SOS.c ****       if((k == 0) ||                              /* Empty */
 639               		.loc 1 106 0 discriminator 1
 640 03c8 8F81      		ldd r24,Y+7
 641 03ca 9885      		ldd r25,Y+8
 642 03cc 2817      		cp r18,r24
 643 03ce 3907      		cpc r19,r25
 644 03d0 01F4      		brne .L25
 645               		.loc 1 107 0
 646 03d2 8F81      		ldd r24,Y+7
 647 03d4 9885      		ldd r25,Y+8
 648 03d6 0397      		sbiw r24,3
 649 03d8 04F4      		brge .L25
 650               	.L23:
 108:lp_solve_5.5/lp_SOS.c ****         delete_SOSrec(group, i);
 651               		.loc 1 108 0
 652 03da 2981      		ldd r18,Y+1
 653 03dc 3A81      		ldd r19,Y+2
 654 03de 8985      		ldd r24,Y+9
 655 03e0 9A85      		ldd r25,Y+10
 656 03e2 B901      		movw r22,r18
 657 03e4 0E94 0000 		call delete_SOSrec
 109:lp_solve_5.5/lp_SOS.c ****         n++;
 658               		.loc 1 109 0
 659 03e8 8B81      		ldd r24,Y+3
 660 03ea 9C81      		ldd r25,Y+4
 661 03ec 0196      		adiw r24,1
 662 03ee 9C83      		std Y+4,r25
 663 03f0 8B83      		std Y+3,r24
 664 03f2 00C0      		rjmp .L26
 665               	.L25:
 110:lp_solve_5.5/lp_SOS.c ****       }
 111:lp_solve_5.5/lp_SOS.c ****       else {
 112:lp_solve_5.5/lp_SOS.c ****         SETMAX(group->maxorder, abs(SOS->type));
 666               		.loc 1 112 0
 667 03f4 8985      		ldd r24,Y+9
 668 03f6 9A85      		ldd r25,Y+10
 669 03f8 FC01      		movw r30,r24
 670 03fa 2085      		ldd r18,Z+8
 671 03fc 3185      		ldd r19,Z+9
 672 03fe 8D81      		ldd r24,Y+5
 673 0400 9E81      		ldd r25,Y+6
 674 0402 FC01      		movw r30,r24
 675 0404 8681      		ldd r24,Z+6
 676 0406 9781      		ldd r25,Z+7
 677 0408 9923      		tst r25
 678 040a 04F4      		brge .L27
 679 040c 9195      		neg r25
 680 040e 8195      		neg r24
 681 0410 9109      		sbc r25,__zero_reg__
 682               	.L27:
 683 0412 2817      		cp r18,r24
 684 0414 3907      		cpc r19,r25
 685 0416 04F4      		brge .L26
 686               		.loc 1 112 0 is_stmt 0 discriminator 1
 687 0418 8D81      		ldd r24,Y+5
 688 041a 9E81      		ldd r25,Y+6
 689 041c FC01      		movw r30,r24
 690 041e 8681      		ldd r24,Z+6
 691 0420 9781      		ldd r25,Z+7
 692 0422 9923      		tst r25
 693 0424 04F4      		brge .L28
 694 0426 9195      		neg r25
 695 0428 8195      		neg r24
 696 042a 9109      		sbc r25,__zero_reg__
 697               	.L28:
 698 042c 9C01      		movw r18,r24
 699 042e 8985      		ldd r24,Y+9
 700 0430 9A85      		ldd r25,Y+10
 701 0432 FC01      		movw r30,r24
 702 0434 3187      		std Z+9,r19
 703 0436 2087      		std Z+8,r18
 704               	.L26:
 103:lp_solve_5.5/lp_SOS.c ****       SOS = group->sos_list[i-1];
 705               		.loc 1 103 0 is_stmt 1 discriminator 2
 706 0438 8981      		ldd r24,Y+1
 707 043a 9A81      		ldd r25,Y+2
 708 043c 0197      		sbiw r24,1
 709 043e 9A83      		std Y+2,r25
 710 0440 8983      		std Y+1,r24
 711               	.L22:
 103:lp_solve_5.5/lp_SOS.c ****       SOS = group->sos_list[i-1];
 712               		.loc 1 103 0 is_stmt 0 discriminator 1
 713 0442 8981      		ldd r24,Y+1
 714 0444 9A81      		ldd r25,Y+2
 715 0446 1816      		cp __zero_reg__,r24
 716 0448 1906      		cpc __zero_reg__,r25
 717 044a 04F4      		brge .+2
 718 044c 00C0      		rjmp .L29
 113:lp_solve_5.5/lp_SOS.c ****       }
 114:lp_solve_5.5/lp_SOS.c ****     }
 115:lp_solve_5.5/lp_SOS.c ****     if((n > 0) || forceupdatemap)
 719               		.loc 1 115 0 is_stmt 1
 720 044e 8B81      		ldd r24,Y+3
 721 0450 9C81      		ldd r25,Y+4
 722 0452 1816      		cp __zero_reg__,r24
 723 0454 1906      		cpc __zero_reg__,r25
 724 0456 04F0      		brlt .L30
 725               		.loc 1 115 0 is_stmt 0 discriminator 1
 726 0458 8B85      		ldd r24,Y+11
 727 045a 8823      		tst r24
 728 045c 01F0      		breq .L21
 729               	.L30:
 116:lp_solve_5.5/lp_SOS.c ****       SOS_member_updatemap(group);
 730               		.loc 1 116 0 is_stmt 1
 731 045e 8985      		ldd r24,Y+9
 732 0460 9A85      		ldd r25,Y+10
 733 0462 0E94 0000 		call SOS_member_updatemap
 734               	.L21:
 117:lp_solve_5.5/lp_SOS.c ****   }
 118:lp_solve_5.5/lp_SOS.c ****   return( n );
 735               		.loc 1 118 0
 736 0466 8B81      		ldd r24,Y+3
 737 0468 9C81      		ldd r25,Y+4
 738               	.L20:
 739               	/* epilogue start */
 119:lp_solve_5.5/lp_SOS.c **** }
 740               		.loc 1 119 0
 741 046a 2B96      		adiw r28,11
 742 046c 0FB6      		in __tmp_reg__,__SREG__
 743 046e F894      		cli
 744 0470 DEBF      		out __SP_H__,r29
 745 0472 0FBE      		out __SREG__,__tmp_reg__
 746 0474 CDBF      		out __SP_L__,r28
 747 0476 DF91      		pop r29
 748 0478 CF91      		pop r28
 749 047a 0895      		ret
 750               		.cfi_endproc
 751               	.LFE10:
 753               	.global	free_SOSgroup
 755               	free_SOSgroup:
 756               	.LFB11:
 120:lp_solve_5.5/lp_SOS.c **** 
 121:lp_solve_5.5/lp_SOS.c **** 
 122:lp_solve_5.5/lp_SOS.c **** STATIC void free_SOSgroup(SOSgroup **group)
 123:lp_solve_5.5/lp_SOS.c **** {
 757               		.loc 1 123 0
 758               		.cfi_startproc
 759 047c CF93      		push r28
 760               	.LCFI16:
 761               		.cfi_def_cfa_offset 3
 762               		.cfi_offset 28, -2
 763 047e DF93      		push r29
 764               	.LCFI17:
 765               		.cfi_def_cfa_offset 4
 766               		.cfi_offset 29, -3
 767 0480 00D0      		rcall .
 768 0482 00D0      		rcall .
 769               	.LCFI18:
 770               		.cfi_def_cfa_offset 8
 771 0484 CDB7      		in r28,__SP_L__
 772 0486 DEB7      		in r29,__SP_H__
 773               	.LCFI19:
 774               		.cfi_def_cfa_register 28
 775               	/* prologue: function */
 776               	/* frame size = 4 */
 777               	/* stack size = 6 */
 778               	.L__stack_usage = 6
 779 0488 9C83      		std Y+4,r25
 780 048a 8B83      		std Y+3,r24
 124:lp_solve_5.5/lp_SOS.c ****   int i;
 125:lp_solve_5.5/lp_SOS.c **** 
 126:lp_solve_5.5/lp_SOS.c ****   if((group == NULL) || (*group == NULL))
 781               		.loc 1 126 0
 782 048c 8B81      		ldd r24,Y+3
 783 048e 9C81      		ldd r25,Y+4
 784 0490 892B      		or r24,r25
 785 0492 01F4      		brne .+2
 786 0494 00C0      		rjmp .L40
 787               		.loc 1 126 0 is_stmt 0 discriminator 1
 788 0496 8B81      		ldd r24,Y+3
 789 0498 9C81      		ldd r25,Y+4
 790 049a FC01      		movw r30,r24
 791 049c 8081      		ld r24,Z
 792 049e 9181      		ldd r25,Z+1
 793 04a0 892B      		or r24,r25
 794 04a2 01F4      		brne .+2
 795 04a4 00C0      		rjmp .L40
 127:lp_solve_5.5/lp_SOS.c ****     return;
 128:lp_solve_5.5/lp_SOS.c ****   if((*group)->sos_alloc > 0) {
 796               		.loc 1 128 0 is_stmt 1
 797 04a6 8B81      		ldd r24,Y+3
 798 04a8 9C81      		ldd r25,Y+4
 799 04aa FC01      		movw r30,r24
 800 04ac 8081      		ld r24,Z
 801 04ae 9181      		ldd r25,Z+1
 802 04b0 FC01      		movw r30,r24
 803 04b2 8481      		ldd r24,Z+4
 804 04b4 9581      		ldd r25,Z+5
 805 04b6 1816      		cp __zero_reg__,r24
 806 04b8 1906      		cpc __zero_reg__,r25
 807 04ba 04F0      		brlt .+2
 808 04bc 00C0      		rjmp .L35
 129:lp_solve_5.5/lp_SOS.c ****     for(i = 0; i < (*group)->sos_count; i++)
 809               		.loc 1 129 0
 810 04be 1A82      		std Y+2,__zero_reg__
 811 04c0 1982      		std Y+1,__zero_reg__
 812 04c2 00C0      		rjmp .L36
 813               	.L37:
 130:lp_solve_5.5/lp_SOS.c ****       free_SOSrec((*group)->sos_list[i]);
 814               		.loc 1 130 0 discriminator 3
 815 04c4 8B81      		ldd r24,Y+3
 816 04c6 9C81      		ldd r25,Y+4
 817 04c8 FC01      		movw r30,r24
 818 04ca 8081      		ld r24,Z
 819 04cc 9181      		ldd r25,Z+1
 820 04ce FC01      		movw r30,r24
 821 04d0 2281      		ldd r18,Z+2
 822 04d2 3381      		ldd r19,Z+3
 823 04d4 8981      		ldd r24,Y+1
 824 04d6 9A81      		ldd r25,Y+2
 825 04d8 880F      		lsl r24
 826 04da 991F      		rol r25
 827 04dc 820F      		add r24,r18
 828 04de 931F      		adc r25,r19
 829 04e0 FC01      		movw r30,r24
 830 04e2 8081      		ld r24,Z
 831 04e4 9181      		ldd r25,Z+1
 832 04e6 0E94 0000 		call free_SOSrec
 129:lp_solve_5.5/lp_SOS.c ****     for(i = 0; i < (*group)->sos_count; i++)
 833               		.loc 1 129 0 discriminator 3
 834 04ea 8981      		ldd r24,Y+1
 835 04ec 9A81      		ldd r25,Y+2
 836 04ee 0196      		adiw r24,1
 837 04f0 9A83      		std Y+2,r25
 838 04f2 8983      		std Y+1,r24
 839               	.L36:
 129:lp_solve_5.5/lp_SOS.c ****     for(i = 0; i < (*group)->sos_count; i++)
 840               		.loc 1 129 0 is_stmt 0 discriminator 1
 841 04f4 8B81      		ldd r24,Y+3
 842 04f6 9C81      		ldd r25,Y+4
 843 04f8 FC01      		movw r30,r24
 844 04fa 8081      		ld r24,Z
 845 04fc 9181      		ldd r25,Z+1
 846 04fe FC01      		movw r30,r24
 847 0500 2681      		ldd r18,Z+6
 848 0502 3781      		ldd r19,Z+7
 849 0504 8981      		ldd r24,Y+1
 850 0506 9A81      		ldd r25,Y+2
 851 0508 8217      		cp r24,r18
 852 050a 9307      		cpc r25,r19
 853 050c 04F0      		brlt .L37
 131:lp_solve_5.5/lp_SOS.c ****     FREE((*group)->sos_list);
 854               		.loc 1 131 0 is_stmt 1
 855 050e 8B81      		ldd r24,Y+3
 856 0510 9C81      		ldd r25,Y+4
 857 0512 FC01      		movw r30,r24
 858 0514 8081      		ld r24,Z
 859 0516 9181      		ldd r25,Z+1
 860 0518 FC01      		movw r30,r24
 861 051a 8281      		ldd r24,Z+2
 862 051c 9381      		ldd r25,Z+3
 863 051e 892B      		or r24,r25
 864 0520 01F0      		breq .L38
 865               		.loc 1 131 0 is_stmt 0 discriminator 1
 866 0522 8B81      		ldd r24,Y+3
 867 0524 9C81      		ldd r25,Y+4
 868 0526 FC01      		movw r30,r24
 869 0528 8081      		ld r24,Z
 870 052a 9181      		ldd r25,Z+1
 871 052c FC01      		movw r30,r24
 872 052e 8281      		ldd r24,Z+2
 873 0530 9381      		ldd r25,Z+3
 874 0532 0E94 0000 		call free
 875 0536 8B81      		ldd r24,Y+3
 876 0538 9C81      		ldd r25,Y+4
 877 053a FC01      		movw r30,r24
 878 053c 8081      		ld r24,Z
 879 053e 9181      		ldd r25,Z+1
 880 0540 FC01      		movw r30,r24
 881 0542 1382      		std Z+3,__zero_reg__
 882 0544 1282      		std Z+2,__zero_reg__
 883               	.L38:
 132:lp_solve_5.5/lp_SOS.c ****     FREE((*group)->membership);
 884               		.loc 1 132 0 is_stmt 1
 885 0546 8B81      		ldd r24,Y+3
 886 0548 9C81      		ldd r25,Y+4
 887 054a FC01      		movw r30,r24
 888 054c 8081      		ld r24,Z
 889 054e 9181      		ldd r25,Z+1
 890 0550 FC01      		movw r30,r24
 891 0552 8485      		ldd r24,Z+12
 892 0554 9585      		ldd r25,Z+13
 893 0556 892B      		or r24,r25
 894 0558 01F0      		breq .L39
 895               		.loc 1 132 0 is_stmt 0 discriminator 1
 896 055a 8B81      		ldd r24,Y+3
 897 055c 9C81      		ldd r25,Y+4
 898 055e FC01      		movw r30,r24
 899 0560 8081      		ld r24,Z
 900 0562 9181      		ldd r25,Z+1
 901 0564 FC01      		movw r30,r24
 902 0566 8485      		ldd r24,Z+12
 903 0568 9585      		ldd r25,Z+13
 904 056a 0E94 0000 		call free
 905 056e 8B81      		ldd r24,Y+3
 906 0570 9C81      		ldd r25,Y+4
 907 0572 FC01      		movw r30,r24
 908 0574 8081      		ld r24,Z
 909 0576 9181      		ldd r25,Z+1
 910 0578 FC01      		movw r30,r24
 911 057a 1586      		std Z+13,__zero_reg__
 912 057c 1486      		std Z+12,__zero_reg__
 913               	.L39:
 133:lp_solve_5.5/lp_SOS.c ****     FREE((*group)->memberpos);
 914               		.loc 1 133 0 is_stmt 1
 915 057e 8B81      		ldd r24,Y+3
 916 0580 9C81      		ldd r25,Y+4
 917 0582 FC01      		movw r30,r24
 918 0584 8081      		ld r24,Z
 919 0586 9181      		ldd r25,Z+1
 920 0588 FC01      		movw r30,r24
 921 058a 8685      		ldd r24,Z+14
 922 058c 9785      		ldd r25,Z+15
 923 058e 892B      		or r24,r25
 924 0590 01F0      		breq .L35
 925               		.loc 1 133 0 is_stmt 0 discriminator 1
 926 0592 8B81      		ldd r24,Y+3
 927 0594 9C81      		ldd r25,Y+4
 928 0596 FC01      		movw r30,r24
 929 0598 8081      		ld r24,Z
 930 059a 9181      		ldd r25,Z+1
 931 059c FC01      		movw r30,r24
 932 059e 8685      		ldd r24,Z+14
 933 05a0 9785      		ldd r25,Z+15
 934 05a2 0E94 0000 		call free
 935 05a6 8B81      		ldd r24,Y+3
 936 05a8 9C81      		ldd r25,Y+4
 937 05aa FC01      		movw r30,r24
 938 05ac 8081      		ld r24,Z
 939 05ae 9181      		ldd r25,Z+1
 940 05b0 FC01      		movw r30,r24
 941 05b2 1786      		std Z+15,__zero_reg__
 942 05b4 1686      		std Z+14,__zero_reg__
 943               	.L35:
 134:lp_solve_5.5/lp_SOS.c ****   }
 135:lp_solve_5.5/lp_SOS.c ****   FREE(*group);
 944               		.loc 1 135 0 is_stmt 1
 945 05b6 8B81      		ldd r24,Y+3
 946 05b8 9C81      		ldd r25,Y+4
 947 05ba FC01      		movw r30,r24
 948 05bc 8081      		ld r24,Z
 949 05be 9181      		ldd r25,Z+1
 950 05c0 892B      		or r24,r25
 951 05c2 01F0      		breq .L31
 952               		.loc 1 135 0 is_stmt 0 discriminator 1
 953 05c4 8B81      		ldd r24,Y+3
 954 05c6 9C81      		ldd r25,Y+4
 955 05c8 FC01      		movw r30,r24
 956 05ca 8081      		ld r24,Z
 957 05cc 9181      		ldd r25,Z+1
 958 05ce 0E94 0000 		call free
 959 05d2 8B81      		ldd r24,Y+3
 960 05d4 9C81      		ldd r25,Y+4
 961 05d6 FC01      		movw r30,r24
 962 05d8 1182      		std Z+1,__zero_reg__
 963 05da 1082      		st Z,__zero_reg__
 964 05dc 00C0      		rjmp .L31
 965               	.L40:
 127:lp_solve_5.5/lp_SOS.c ****   if((*group)->sos_alloc > 0) {
 966               		.loc 1 127 0 is_stmt 1
 967 05de 0000      		nop
 968               	.L31:
 969               	/* epilogue start */
 136:lp_solve_5.5/lp_SOS.c **** }
 970               		.loc 1 136 0
 971 05e0 0F90      		pop __tmp_reg__
 972 05e2 0F90      		pop __tmp_reg__
 973 05e4 0F90      		pop __tmp_reg__
 974 05e6 0F90      		pop __tmp_reg__
 975 05e8 DF91      		pop r29
 976 05ea CF91      		pop r28
 977 05ec 0895      		ret
 978               		.cfi_endproc
 979               	.LFE11:
 981               	.global	create_SOSrec
 983               	create_SOSrec:
 984               	.LFB12:
 137:lp_solve_5.5/lp_SOS.c **** 
 138:lp_solve_5.5/lp_SOS.c **** /* SOS record functions */
 139:lp_solve_5.5/lp_SOS.c **** STATIC SOSrec *create_SOSrec(SOSgroup *group, char *name, int type, int priority, int size, int *va
 140:lp_solve_5.5/lp_SOS.c **** {
 985               		.loc 1 140 0
 986               		.cfi_startproc
 987 05ee CF92      		push r12
 988               	.LCFI20:
 989               		.cfi_def_cfa_offset 3
 990               		.cfi_offset 12, -2
 991 05f0 DF92      		push r13
 992               	.LCFI21:
 993               		.cfi_def_cfa_offset 4
 994               		.cfi_offset 13, -3
 995 05f2 EF92      		push r14
 996               	.LCFI22:
 997               		.cfi_def_cfa_offset 5
 998               		.cfi_offset 14, -4
 999 05f4 FF92      		push r15
 1000               	.LCFI23:
 1001               		.cfi_def_cfa_offset 6
 1002               		.cfi_offset 15, -5
 1003 05f6 0F93      		push r16
 1004               	.LCFI24:
 1005               		.cfi_def_cfa_offset 7
 1006               		.cfi_offset 16, -6
 1007 05f8 1F93      		push r17
 1008               	.LCFI25:
 1009               		.cfi_def_cfa_offset 8
 1010               		.cfi_offset 17, -7
 1011 05fa CF93      		push r28
 1012               	.LCFI26:
 1013               		.cfi_def_cfa_offset 9
 1014               		.cfi_offset 28, -8
 1015 05fc DF93      		push r29
 1016               	.LCFI27:
 1017               		.cfi_def_cfa_offset 10
 1018               		.cfi_offset 29, -9
 1019 05fe CDB7      		in r28,__SP_L__
 1020 0600 DEB7      		in r29,__SP_H__
 1021               	.LCFI28:
 1022               		.cfi_def_cfa_register 28
 1023 0602 6097      		sbiw r28,16
 1024               	.LCFI29:
 1025               		.cfi_def_cfa_offset 26
 1026 0604 0FB6      		in __tmp_reg__,__SREG__
 1027 0606 F894      		cli
 1028 0608 DEBF      		out __SP_H__,r29
 1029 060a 0FBE      		out __SREG__,__tmp_reg__
 1030 060c CDBF      		out __SP_L__,r28
 1031               	/* prologue: function */
 1032               	/* frame size = 16 */
 1033               	/* stack size = 24 */
 1034               	.L__stack_usage = 24
 1035 060e 9C83      		std Y+4,r25
 1036 0610 8B83      		std Y+3,r24
 1037 0612 7E83      		std Y+6,r23
 1038 0614 6D83      		std Y+5,r22
 1039 0616 5887      		std Y+8,r21
 1040 0618 4F83      		std Y+7,r20
 1041 061a 3A87      		std Y+10,r19
 1042 061c 2987      		std Y+9,r18
 1043 061e 1C87      		std Y+12,r17
 1044 0620 0B87      		std Y+11,r16
 1045 0622 FE86      		std Y+14,r15
 1046 0624 ED86      		std Y+13,r14
 1047 0626 D88A      		std Y+16,r13
 1048 0628 CF86      		std Y+15,r12
 141:lp_solve_5.5/lp_SOS.c ****   SOSrec *SOS;
 142:lp_solve_5.5/lp_SOS.c **** 
 143:lp_solve_5.5/lp_SOS.c ****   SOS = (SOSrec *) calloc(1 , sizeof(*SOS));
 1049               		.loc 1 143 0
 1050 062a 65E1      		ldi r22,lo8(21)
 1051 062c 70E0      		ldi r23,0
 1052 062e 81E0      		ldi r24,lo8(1)
 1053 0630 90E0      		ldi r25,0
 1054 0632 0E94 0000 		call calloc
 1055 0636 9A83      		std Y+2,r25
 1056 0638 8983      		std Y+1,r24
 144:lp_solve_5.5/lp_SOS.c ****   SOS->parent = group;
 1057               		.loc 1 144 0
 1058 063a 8981      		ldd r24,Y+1
 1059 063c 9A81      		ldd r25,Y+2
 1060 063e 2B81      		ldd r18,Y+3
 1061 0640 3C81      		ldd r19,Y+4
 1062 0642 FC01      		movw r30,r24
 1063 0644 3183      		std Z+1,r19
 1064 0646 2083      		st Z,r18
 145:lp_solve_5.5/lp_SOS.c ****   SOS->type = type;
 1065               		.loc 1 145 0
 1066 0648 8981      		ldd r24,Y+1
 1067 064a 9A81      		ldd r25,Y+2
 1068 064c 2F81      		ldd r18,Y+7
 1069 064e 3885      		ldd r19,Y+8
 1070 0650 FC01      		movw r30,r24
 1071 0652 3783      		std Z+7,r19
 1072 0654 2683      		std Z+6,r18
 146:lp_solve_5.5/lp_SOS.c ****   if(name == NULL)
 1073               		.loc 1 146 0
 1074 0656 8D81      		ldd r24,Y+5
 1075 0658 9E81      		ldd r25,Y+6
 1076 065a 892B      		or r24,r25
 1077 065c 01F4      		brne .L42
 147:lp_solve_5.5/lp_SOS.c ****     SOS->name = NULL;
 1078               		.loc 1 147 0
 1079 065e 8981      		ldd r24,Y+1
 1080 0660 9A81      		ldd r25,Y+2
 1081 0662 FC01      		movw r30,r24
 1082 0664 1582      		std Z+5,__zero_reg__
 1083 0666 1482      		std Z+4,__zero_reg__
 1084 0668 00C0      		rjmp .L43
 1085               	.L42:
 148:lp_solve_5.5/lp_SOS.c ****   else
 149:lp_solve_5.5/lp_SOS.c ****   {
 150:lp_solve_5.5/lp_SOS.c ****     allocCHAR(group->lp, &SOS->name, (int) (strlen(name)+1), FALSE);
 1086               		.loc 1 150 0
 1087 066a 8D81      		ldd r24,Y+5
 1088 066c 9E81      		ldd r25,Y+6
 1089 066e 0E94 0000 		call strlen
 1090 0672 0196      		adiw r24,1
 1091 0674 AC01      		movw r20,r24
 1092 0676 8981      		ldd r24,Y+1
 1093 0678 9A81      		ldd r25,Y+2
 1094 067a BC01      		movw r22,r24
 1095 067c 6C5F      		subi r22,-4
 1096 067e 7F4F      		sbci r23,-1
 1097 0680 8B81      		ldd r24,Y+3
 1098 0682 9C81      		ldd r25,Y+4
 1099 0684 FC01      		movw r30,r24
 1100 0686 8081      		ld r24,Z
 1101 0688 9181      		ldd r25,Z+1
 1102 068a 20E0      		ldi r18,0
 1103 068c 0E94 0000 		call allocCHAR
 151:lp_solve_5.5/lp_SOS.c ****     strcpy(SOS->name, name);
 1104               		.loc 1 151 0
 1105 0690 8981      		ldd r24,Y+1
 1106 0692 9A81      		ldd r25,Y+2
 1107 0694 FC01      		movw r30,r24
 1108 0696 8481      		ldd r24,Z+4
 1109 0698 9581      		ldd r25,Z+5
 1110 069a 2D81      		ldd r18,Y+5
 1111 069c 3E81      		ldd r19,Y+6
 1112 069e B901      		movw r22,r18
 1113 06a0 0E94 0000 		call strcpy
 1114               	.L43:
 152:lp_solve_5.5/lp_SOS.c ****   }
 153:lp_solve_5.5/lp_SOS.c ****   if(type < 0)
 1115               		.loc 1 153 0
 1116 06a4 8F81      		ldd r24,Y+7
 1117 06a6 9885      		ldd r25,Y+8
 1118 06a8 9923      		tst r25
 1119 06aa 04F4      		brge .L44
 154:lp_solve_5.5/lp_SOS.c ****     type = abs(type);
 1120               		.loc 1 154 0
 1121 06ac 8F81      		ldd r24,Y+7
 1122 06ae 9885      		ldd r25,Y+8
 1123 06b0 9923      		tst r25
 1124 06b2 04F4      		brge .L45
 1125 06b4 9195      		neg r25
 1126 06b6 8195      		neg r24
 1127 06b8 9109      		sbc r25,__zero_reg__
 1128               	.L45:
 1129 06ba 9887      		std Y+8,r25
 1130 06bc 8F83      		std Y+7,r24
 1131               	.L44:
 155:lp_solve_5.5/lp_SOS.c ****   SOS->tagorder = 0;
 1132               		.loc 1 155 0
 1133 06be 8981      		ldd r24,Y+1
 1134 06c0 9A81      		ldd r25,Y+2
 1135 06c2 FC01      		movw r30,r24
 1136 06c4 1382      		std Z+3,__zero_reg__
 1137 06c6 1282      		std Z+2,__zero_reg__
 156:lp_solve_5.5/lp_SOS.c ****   SOS->size = 0;
 1138               		.loc 1 156 0
 1139 06c8 8981      		ldd r24,Y+1
 1140 06ca 9A81      		ldd r25,Y+2
 1141 06cc FC01      		movw r30,r24
 1142 06ce 1286      		std Z+10,__zero_reg__
 1143 06d0 1186      		std Z+9,__zero_reg__
 157:lp_solve_5.5/lp_SOS.c ****   SOS->priority = priority;
 1144               		.loc 1 157 0
 1145 06d2 8981      		ldd r24,Y+1
 1146 06d4 9A81      		ldd r25,Y+2
 1147 06d6 2985      		ldd r18,Y+9
 1148 06d8 3A85      		ldd r19,Y+10
 1149 06da FC01      		movw r30,r24
 1150 06dc 3487      		std Z+12,r19
 1151 06de 2387      		std Z+11,r18
 158:lp_solve_5.5/lp_SOS.c ****   SOS->members = NULL;
 1152               		.loc 1 158 0
 1153 06e0 8981      		ldd r24,Y+1
 1154 06e2 9A81      		ldd r25,Y+2
 1155 06e4 FC01      		movw r30,r24
 1156 06e6 1686      		std Z+14,__zero_reg__
 1157 06e8 1586      		std Z+13,__zero_reg__
 159:lp_solve_5.5/lp_SOS.c ****   SOS->weights = NULL;
 1158               		.loc 1 159 0
 1159 06ea 8981      		ldd r24,Y+1
 1160 06ec 9A81      		ldd r25,Y+2
 1161 06ee FC01      		movw r30,r24
 1162 06f0 108A      		std Z+16,__zero_reg__
 1163 06f2 1786      		std Z+15,__zero_reg__
 160:lp_solve_5.5/lp_SOS.c ****   SOS->membersSorted = NULL;
 1164               		.loc 1 160 0
 1165 06f4 8981      		ldd r24,Y+1
 1166 06f6 9A81      		ldd r25,Y+2
 1167 06f8 FC01      		movw r30,r24
 1168 06fa 128A      		std Z+18,__zero_reg__
 1169 06fc 118A      		std Z+17,__zero_reg__
 161:lp_solve_5.5/lp_SOS.c ****   SOS->membersMapped = NULL;
 1170               		.loc 1 161 0
 1171 06fe 8981      		ldd r24,Y+1
 1172 0700 9A81      		ldd r25,Y+2
 1173 0702 FC01      		movw r30,r24
 1174 0704 148A      		std Z+20,__zero_reg__
 1175 0706 138A      		std Z+19,__zero_reg__
 162:lp_solve_5.5/lp_SOS.c **** 
 163:lp_solve_5.5/lp_SOS.c ****   if(size > 0)
 1176               		.loc 1 163 0
 1177 0708 8B85      		ldd r24,Y+11
 1178 070a 9C85      		ldd r25,Y+12
 1179 070c 1816      		cp __zero_reg__,r24
 1180 070e 1906      		cpc __zero_reg__,r25
 1181 0710 04F4      		brge .L46
 164:lp_solve_5.5/lp_SOS.c ****     size = append_SOSrec(SOS, size, variables, weights);
 1182               		.loc 1 164 0
 1183 0712 2F85      		ldd r18,Y+15
 1184 0714 3889      		ldd r19,Y+16
 1185 0716 4D85      		ldd r20,Y+13
 1186 0718 5E85      		ldd r21,Y+14
 1187 071a 6B85      		ldd r22,Y+11
 1188 071c 7C85      		ldd r23,Y+12
 1189 071e 8981      		ldd r24,Y+1
 1190 0720 9A81      		ldd r25,Y+2
 1191 0722 0E94 0000 		call append_SOSrec
 1192 0726 9C87      		std Y+12,r25
 1193 0728 8B87      		std Y+11,r24
 1194               	.L46:
 165:lp_solve_5.5/lp_SOS.c **** 
 166:lp_solve_5.5/lp_SOS.c ****   return(SOS);
 1195               		.loc 1 166 0
 1196 072a 8981      		ldd r24,Y+1
 1197 072c 9A81      		ldd r25,Y+2
 1198               	/* epilogue start */
 167:lp_solve_5.5/lp_SOS.c **** }
 1199               		.loc 1 167 0
 1200 072e 6096      		adiw r28,16
 1201 0730 0FB6      		in __tmp_reg__,__SREG__
 1202 0732 F894      		cli
 1203 0734 DEBF      		out __SP_H__,r29
 1204 0736 0FBE      		out __SREG__,__tmp_reg__
 1205 0738 CDBF      		out __SP_L__,r28
 1206 073a DF91      		pop r29
 1207 073c CF91      		pop r28
 1208 073e 1F91      		pop r17
 1209 0740 0F91      		pop r16
 1210 0742 FF90      		pop r15
 1211 0744 EF90      		pop r14
 1212 0746 DF90      		pop r13
 1213 0748 CF90      		pop r12
 1214 074a 0895      		ret
 1215               		.cfi_endproc
 1216               	.LFE12:
 1218               		.section	.rodata
 1219               	.LC0:
 1220 0000 6170 7065 		.string	"append_SOS_rec: Invalid SOS variable definition for index %d\n"
 1220      6E64 5F53 
 1220      4F53 5F72 
 1220      6563 3A20 
 1220      496E 7661 
 1221               	.global	__addsf3
 1222               	.LC1:
 1223 003e 6170 7065 		.string	"append_SOS_rec: Non-unique SOS variable weight for index %d\n"
 1223      6E64 5F53 
 1223      4F53 5F72 
 1223      6563 3A20 
 1223      4E6F 6E2D 
 1224               		.text
 1225               	.global	append_SOSrec
 1227               	append_SOSrec:
 1228               	.LFB13:
 168:lp_solve_5.5/lp_SOS.c **** 
 169:lp_solve_5.5/lp_SOS.c **** 
 170:lp_solve_5.5/lp_SOS.c **** STATIC int append_SOSrec(SOSrec *SOS, int size, int *variables, REAL *weights)
 171:lp_solve_5.5/lp_SOS.c **** {
 1229               		.loc 1 171 0
 1230               		.cfi_startproc
 1231 074c 0F93      		push r16
 1232               	.LCFI30:
 1233               		.cfi_def_cfa_offset 3
 1234               		.cfi_offset 16, -2
 1235 074e 1F93      		push r17
 1236               	.LCFI31:
 1237               		.cfi_def_cfa_offset 4
 1238               		.cfi_offset 17, -3
 1239 0750 CF93      		push r28
 1240               	.LCFI32:
 1241               		.cfi_def_cfa_offset 5
 1242               		.cfi_offset 28, -4
 1243 0752 DF93      		push r29
 1244               	.LCFI33:
 1245               		.cfi_def_cfa_offset 6
 1246               		.cfi_offset 29, -5
 1247 0754 CDB7      		in r28,__SP_L__
 1248 0756 DEB7      		in r29,__SP_H__
 1249               	.LCFI34:
 1250               		.cfi_def_cfa_register 28
 1251 0758 6297      		sbiw r28,18
 1252               	.LCFI35:
 1253               		.cfi_def_cfa_offset 24
 1254 075a 0FB6      		in __tmp_reg__,__SREG__
 1255 075c F894      		cli
 1256 075e DEBF      		out __SP_H__,r29
 1257 0760 0FBE      		out __SREG__,__tmp_reg__
 1258 0762 CDBF      		out __SP_L__,r28
 1259               	/* prologue: function */
 1260               	/* frame size = 18 */
 1261               	/* stack size = 22 */
 1262               	.L__stack_usage = 22
 1263 0764 9C87      		std Y+12,r25
 1264 0766 8B87      		std Y+11,r24
 1265 0768 7E87      		std Y+14,r23
 1266 076a 6D87      		std Y+13,r22
 1267 076c 588B      		std Y+16,r21
 1268 076e 4F87      		std Y+15,r20
 1269 0770 3A8B      		std Y+18,r19
 1270 0772 298B      		std Y+17,r18
 172:lp_solve_5.5/lp_SOS.c ****   int   i, oldsize, newsize, nn;
 173:lp_solve_5.5/lp_SOS.c ****   lprec *lp = SOS->parent->lp;
 1271               		.loc 1 173 0
 1272 0774 8B85      		ldd r24,Y+11
 1273 0776 9C85      		ldd r25,Y+12
 1274 0778 FC01      		movw r30,r24
 1275 077a 8081      		ld r24,Z
 1276 077c 9181      		ldd r25,Z+1
 1277 077e FC01      		movw r30,r24
 1278 0780 8081      		ld r24,Z
 1279 0782 9181      		ldd r25,Z+1
 1280 0784 9C83      		std Y+4,r25
 1281 0786 8B83      		std Y+3,r24
 174:lp_solve_5.5/lp_SOS.c **** 
 175:lp_solve_5.5/lp_SOS.c ****   oldsize = SOS->size;
 1282               		.loc 1 175 0
 1283 0788 8B85      		ldd r24,Y+11
 1284 078a 9C85      		ldd r25,Y+12
 1285 078c FC01      		movw r30,r24
 1286 078e 8185      		ldd r24,Z+9
 1287 0790 9285      		ldd r25,Z+10
 1288 0792 9E83      		std Y+6,r25
 1289 0794 8D83      		std Y+5,r24
 176:lp_solve_5.5/lp_SOS.c ****   newsize = oldsize + size;
 1290               		.loc 1 176 0
 1291 0796 2D81      		ldd r18,Y+5
 1292 0798 3E81      		ldd r19,Y+6
 1293 079a 8D85      		ldd r24,Y+13
 1294 079c 9E85      		ldd r25,Y+14
 1295 079e 820F      		add r24,r18
 1296 07a0 931F      		adc r25,r19
 1297 07a2 9887      		std Y+8,r25
 1298 07a4 8F83      		std Y+7,r24
 177:lp_solve_5.5/lp_SOS.c ****   nn = abs(SOS->type);
 1299               		.loc 1 177 0
 1300 07a6 8B85      		ldd r24,Y+11
 1301 07a8 9C85      		ldd r25,Y+12
 1302 07aa FC01      		movw r30,r24
 1303 07ac 8681      		ldd r24,Z+6
 1304 07ae 9781      		ldd r25,Z+7
 1305 07b0 9923      		tst r25
 1306 07b2 04F4      		brge .L49
 1307 07b4 9195      		neg r25
 1308 07b6 8195      		neg r24
 1309 07b8 9109      		sbc r25,__zero_reg__
 1310               	.L49:
 1311 07ba 9A87      		std Y+10,r25
 1312 07bc 8987      		std Y+9,r24
 178:lp_solve_5.5/lp_SOS.c **** 
 179:lp_solve_5.5/lp_SOS.c ****  /* Shift existing active data right (normally zero) */
 180:lp_solve_5.5/lp_SOS.c ****   if(SOS->members == NULL)
 1313               		.loc 1 180 0
 1314 07be 8B85      		ldd r24,Y+11
 1315 07c0 9C85      		ldd r25,Y+12
 1316 07c2 FC01      		movw r30,r24
 1317 07c4 8585      		ldd r24,Z+13
 1318 07c6 9685      		ldd r25,Z+14
 1319 07c8 892B      		or r24,r25
 1320 07ca 01F4      		brne .L50
 181:lp_solve_5.5/lp_SOS.c ****     allocINT(lp, &SOS->members, 1+newsize+1+nn, TRUE);
 1321               		.loc 1 181 0
 1322 07cc 8F81      		ldd r24,Y+7
 1323 07ce 9885      		ldd r25,Y+8
 1324 07d0 9C01      		movw r18,r24
 1325 07d2 2E5F      		subi r18,-2
 1326 07d4 3F4F      		sbci r19,-1
 1327 07d6 8985      		ldd r24,Y+9
 1328 07d8 9A85      		ldd r25,Y+10
 1329 07da A901      		movw r20,r18
 1330 07dc 480F      		add r20,r24
 1331 07de 591F      		adc r21,r25
 1332 07e0 8B85      		ldd r24,Y+11
 1333 07e2 9C85      		ldd r25,Y+12
 1334 07e4 BC01      		movw r22,r24
 1335 07e6 635F      		subi r22,-13
 1336 07e8 7F4F      		sbci r23,-1
 1337 07ea 8B81      		ldd r24,Y+3
 1338 07ec 9C81      		ldd r25,Y+4
 1339 07ee 21E0      		ldi r18,lo8(1)
 1340 07f0 0E94 0000 		call allocINT
 1341 07f4 00C0      		rjmp .L51
 1342               	.L50:
 182:lp_solve_5.5/lp_SOS.c ****   else {
 183:lp_solve_5.5/lp_SOS.c ****     allocINT(lp, &SOS->members, 1+newsize+1+nn, AUTOMATIC);
 1343               		.loc 1 183 0
 1344 07f6 8F81      		ldd r24,Y+7
 1345 07f8 9885      		ldd r25,Y+8
 1346 07fa 9C01      		movw r18,r24
 1347 07fc 2E5F      		subi r18,-2
 1348 07fe 3F4F      		sbci r19,-1
 1349 0800 8985      		ldd r24,Y+9
 1350 0802 9A85      		ldd r25,Y+10
 1351 0804 A901      		movw r20,r18
 1352 0806 480F      		add r20,r24
 1353 0808 591F      		adc r21,r25
 1354 080a 8B85      		ldd r24,Y+11
 1355 080c 9C85      		ldd r25,Y+12
 1356 080e BC01      		movw r22,r24
 1357 0810 635F      		subi r22,-13
 1358 0812 7F4F      		sbci r23,-1
 1359 0814 8B81      		ldd r24,Y+3
 1360 0816 9C81      		ldd r25,Y+4
 1361 0818 22E0      		ldi r18,lo8(2)
 1362 081a 0E94 0000 		call allocINT
 184:lp_solve_5.5/lp_SOS.c ****     for(i = newsize+1+nn; i > newsize+1; i--)
 1363               		.loc 1 184 0
 1364 081e 8F81      		ldd r24,Y+7
 1365 0820 9885      		ldd r25,Y+8
 1366 0822 9C01      		movw r18,r24
 1367 0824 2F5F      		subi r18,-1
 1368 0826 3F4F      		sbci r19,-1
 1369 0828 8985      		ldd r24,Y+9
 1370 082a 9A85      		ldd r25,Y+10
 1371 082c 820F      		add r24,r18
 1372 082e 931F      		adc r25,r19
 1373 0830 9A83      		std Y+2,r25
 1374 0832 8983      		std Y+1,r24
 1375 0834 00C0      		rjmp .L52
 1376               	.L53:
 185:lp_solve_5.5/lp_SOS.c ****     SOS->members[i] = SOS->members[i-size];
 1377               		.loc 1 185 0 discriminator 3
 1378 0836 8B85      		ldd r24,Y+11
 1379 0838 9C85      		ldd r25,Y+12
 1380 083a FC01      		movw r30,r24
 1381 083c 2585      		ldd r18,Z+13
 1382 083e 3685      		ldd r19,Z+14
 1383 0840 8981      		ldd r24,Y+1
 1384 0842 9A81      		ldd r25,Y+2
 1385 0844 880F      		lsl r24
 1386 0846 991F      		rol r25
 1387 0848 820F      		add r24,r18
 1388 084a 931F      		adc r25,r19
 1389 084c 2B85      		ldd r18,Y+11
 1390 084e 3C85      		ldd r19,Y+12
 1391 0850 F901      		movw r30,r18
 1392 0852 4585      		ldd r20,Z+13
 1393 0854 5685      		ldd r21,Z+14
 1394 0856 6981      		ldd r22,Y+1
 1395 0858 7A81      		ldd r23,Y+2
 1396 085a 2D85      		ldd r18,Y+13
 1397 085c 3E85      		ldd r19,Y+14
 1398 085e FB01      		movw r30,r22
 1399 0860 E21B      		sub r30,r18
 1400 0862 F30B      		sbc r31,r19
 1401 0864 9F01      		movw r18,r30
 1402 0866 220F      		lsl r18
 1403 0868 331F      		rol r19
 1404 086a 240F      		add r18,r20
 1405 086c 351F      		adc r19,r21
 1406 086e F901      		movw r30,r18
 1407 0870 2081      		ld r18,Z
 1408 0872 3181      		ldd r19,Z+1
 1409 0874 FC01      		movw r30,r24
 1410 0876 3183      		std Z+1,r19
 1411 0878 2083      		st Z,r18
 184:lp_solve_5.5/lp_SOS.c ****     for(i = newsize+1+nn; i > newsize+1; i--)
 1412               		.loc 1 184 0 discriminator 3
 1413 087a 8981      		ldd r24,Y+1
 1414 087c 9A81      		ldd r25,Y+2
 1415 087e 0197      		sbiw r24,1
 1416 0880 9A83      		std Y+2,r25
 1417 0882 8983      		std Y+1,r24
 1418               	.L52:
 184:lp_solve_5.5/lp_SOS.c ****     for(i = newsize+1+nn; i > newsize+1; i--)
 1419               		.loc 1 184 0 is_stmt 0 discriminator 1
 1420 0884 8F81      		ldd r24,Y+7
 1421 0886 9885      		ldd r25,Y+8
 1422 0888 9C01      		movw r18,r24
 1423 088a 2F5F      		subi r18,-1
 1424 088c 3F4F      		sbci r19,-1
 1425 088e 8981      		ldd r24,Y+1
 1426 0890 9A81      		ldd r25,Y+2
 1427 0892 2817      		cp r18,r24
 1428 0894 3907      		cpc r19,r25
 1429 0896 04F0      		brlt .L53
 1430               	.L51:
 186:lp_solve_5.5/lp_SOS.c ****   }
 187:lp_solve_5.5/lp_SOS.c ****   SOS->members[0] = newsize;
 1431               		.loc 1 187 0 is_stmt 1
 1432 0898 8B85      		ldd r24,Y+11
 1433 089a 9C85      		ldd r25,Y+12
 1434 089c FC01      		movw r30,r24
 1435 089e 8585      		ldd r24,Z+13
 1436 08a0 9685      		ldd r25,Z+14
 1437 08a2 2F81      		ldd r18,Y+7
 1438 08a4 3885      		ldd r19,Y+8
 1439 08a6 FC01      		movw r30,r24
 1440 08a8 3183      		std Z+1,r19
 1441 08aa 2083      		st Z,r18
 188:lp_solve_5.5/lp_SOS.c ****   SOS->members[newsize+1] = nn;
 1442               		.loc 1 188 0
 1443 08ac 8B85      		ldd r24,Y+11
 1444 08ae 9C85      		ldd r25,Y+12
 1445 08b0 FC01      		movw r30,r24
 1446 08b2 2585      		ldd r18,Z+13
 1447 08b4 3685      		ldd r19,Z+14
 1448 08b6 8F81      		ldd r24,Y+7
 1449 08b8 9885      		ldd r25,Y+8
 1450 08ba 0196      		adiw r24,1
 1451 08bc 880F      		lsl r24
 1452 08be 991F      		rol r25
 1453 08c0 820F      		add r24,r18
 1454 08c2 931F      		adc r25,r19
 1455 08c4 2985      		ldd r18,Y+9
 1456 08c6 3A85      		ldd r19,Y+10
 1457 08c8 FC01      		movw r30,r24
 1458 08ca 3183      		std Z+1,r19
 1459 08cc 2083      		st Z,r18
 189:lp_solve_5.5/lp_SOS.c **** 
 190:lp_solve_5.5/lp_SOS.c ****  /* Copy the new data into the arrays */
 191:lp_solve_5.5/lp_SOS.c ****   if(SOS->weights == NULL)
 1460               		.loc 1 191 0
 1461 08ce 8B85      		ldd r24,Y+11
 1462 08d0 9C85      		ldd r25,Y+12
 1463 08d2 FC01      		movw r30,r24
 1464 08d4 8785      		ldd r24,Z+15
 1465 08d6 9089      		ldd r25,Z+16
 1466 08d8 892B      		or r24,r25
 1467 08da 01F4      		brne .L54
 192:lp_solve_5.5/lp_SOS.c ****     allocREAL(lp, &SOS->weights, 1+newsize, TRUE);
 1468               		.loc 1 192 0
 1469 08dc 8F81      		ldd r24,Y+7
 1470 08de 9885      		ldd r25,Y+8
 1471 08e0 AC01      		movw r20,r24
 1472 08e2 4F5F      		subi r20,-1
 1473 08e4 5F4F      		sbci r21,-1
 1474 08e6 8B85      		ldd r24,Y+11
 1475 08e8 9C85      		ldd r25,Y+12
 1476 08ea BC01      		movw r22,r24
 1477 08ec 615F      		subi r22,-15
 1478 08ee 7F4F      		sbci r23,-1
 1479 08f0 8B81      		ldd r24,Y+3
 1480 08f2 9C81      		ldd r25,Y+4
 1481 08f4 21E0      		ldi r18,lo8(1)
 1482 08f6 0E94 0000 		call allocREAL
 1483 08fa 00C0      		rjmp .L55
 1484               	.L54:
 193:lp_solve_5.5/lp_SOS.c ****   else
 194:lp_solve_5.5/lp_SOS.c ****     allocREAL(lp, &SOS->weights, 1+newsize, AUTOMATIC);
 1485               		.loc 1 194 0
 1486 08fc 8F81      		ldd r24,Y+7
 1487 08fe 9885      		ldd r25,Y+8
 1488 0900 AC01      		movw r20,r24
 1489 0902 4F5F      		subi r20,-1
 1490 0904 5F4F      		sbci r21,-1
 1491 0906 8B85      		ldd r24,Y+11
 1492 0908 9C85      		ldd r25,Y+12
 1493 090a BC01      		movw r22,r24
 1494 090c 615F      		subi r22,-15
 1495 090e 7F4F      		sbci r23,-1
 1496 0910 8B81      		ldd r24,Y+3
 1497 0912 9C81      		ldd r25,Y+4
 1498 0914 22E0      		ldi r18,lo8(2)
 1499 0916 0E94 0000 		call allocREAL
 1500               	.L55:
 195:lp_solve_5.5/lp_SOS.c ****   for(i = oldsize+1; i <= newsize; i++) {
 1501               		.loc 1 195 0
 1502 091a 8D81      		ldd r24,Y+5
 1503 091c 9E81      		ldd r25,Y+6
 1504 091e 0196      		adiw r24,1
 1505 0920 9A83      		std Y+2,r25
 1506 0922 8983      		std Y+1,r24
 1507 0924 00C0      		rjmp .L56
 1508               	.L63:
 196:lp_solve_5.5/lp_SOS.c ****     SOS->members[i] = variables[i-oldsize-1];
 1509               		.loc 1 196 0
 1510 0926 8B85      		ldd r24,Y+11
 1511 0928 9C85      		ldd r25,Y+12
 1512 092a FC01      		movw r30,r24
 1513 092c 2585      		ldd r18,Z+13
 1514 092e 3685      		ldd r19,Z+14
 1515 0930 8981      		ldd r24,Y+1
 1516 0932 9A81      		ldd r25,Y+2
 1517 0934 880F      		lsl r24
 1518 0936 991F      		rol r25
 1519 0938 820F      		add r24,r18
 1520 093a 931F      		adc r25,r19
 1521 093c 4981      		ldd r20,Y+1
 1522 093e 5A81      		ldd r21,Y+2
 1523 0940 2D81      		ldd r18,Y+5
 1524 0942 3E81      		ldd r19,Y+6
 1525 0944 BA01      		movw r22,r20
 1526 0946 621B      		sub r22,r18
 1527 0948 730B      		sbc r23,r19
 1528 094a 9B01      		movw r18,r22
 1529 094c 2150      		subi r18,1
 1530 094e 3048      		sbci r19,-128
 1531 0950 220F      		lsl r18
 1532 0952 331F      		rol r19
 1533 0954 4F85      		ldd r20,Y+15
 1534 0956 5889      		ldd r21,Y+16
 1535 0958 240F      		add r18,r20
 1536 095a 351F      		adc r19,r21
 1537 095c F901      		movw r30,r18
 1538 095e 2081      		ld r18,Z
 1539 0960 3181      		ldd r19,Z+1
 1540 0962 FC01      		movw r30,r24
 1541 0964 3183      		std Z+1,r19
 1542 0966 2083      		st Z,r18
 197:lp_solve_5.5/lp_SOS.c ****     if((SOS->members[i] < 1) || (SOS->members[i] > lp->columns))
 1543               		.loc 1 197 0
 1544 0968 8B85      		ldd r24,Y+11
 1545 096a 9C85      		ldd r25,Y+12
 1546 096c FC01      		movw r30,r24
 1547 096e 2585      		ldd r18,Z+13
 1548 0970 3685      		ldd r19,Z+14
 1549 0972 8981      		ldd r24,Y+1
 1550 0974 9A81      		ldd r25,Y+2
 1551 0976 880F      		lsl r24
 1552 0978 991F      		rol r25
 1553 097a 820F      		add r24,r18
 1554 097c 931F      		adc r25,r19
 1555 097e FC01      		movw r30,r24
 1556 0980 8081      		ld r24,Z
 1557 0982 9181      		ldd r25,Z+1
 1558 0984 1816      		cp __zero_reg__,r24
 1559 0986 1906      		cpc __zero_reg__,r25
 1560 0988 04F4      		brge .L57
 1561               		.loc 1 197 0 is_stmt 0 discriminator 1
 1562 098a 8B85      		ldd r24,Y+11
 1563 098c 9C85      		ldd r25,Y+12
 1564 098e FC01      		movw r30,r24
 1565 0990 2585      		ldd r18,Z+13
 1566 0992 3685      		ldd r19,Z+14
 1567 0994 8981      		ldd r24,Y+1
 1568 0996 9A81      		ldd r25,Y+2
 1569 0998 880F      		lsl r24
 1570 099a 991F      		rol r25
 1571 099c 820F      		add r24,r18
 1572 099e 931F      		adc r25,r19
 1573 09a0 FC01      		movw r30,r24
 1574 09a2 2081      		ld r18,Z
 1575 09a4 3181      		ldd r19,Z+1
 1576 09a6 8B81      		ldd r24,Y+3
 1577 09a8 9C81      		ldd r25,Y+4
 1578 09aa 8451      		subi r24,20
 1579 09ac 9E4F      		sbci r25,-2
 1580 09ae FC01      		movw r30,r24
 1581 09b0 8081      		ld r24,Z
 1582 09b2 9181      		ldd r25,Z+1
 1583 09b4 8217      		cp r24,r18
 1584 09b6 9307      		cpc r25,r19
 1585 09b8 04F4      		brge .L58
 1586               	.L57:
 198:lp_solve_5.5/lp_SOS.c ****       report(lp, IMPORTANT, "append_SOS_rec: Invalid SOS variable definition for index %d\n", SOS->
 1587               		.loc 1 198 0 is_stmt 1
 1588 09ba 8B85      		ldd r24,Y+11
 1589 09bc 9C85      		ldd r25,Y+12
 1590 09be FC01      		movw r30,r24
 1591 09c0 2585      		ldd r18,Z+13
 1592 09c2 3685      		ldd r19,Z+14
 1593 09c4 8981      		ldd r24,Y+1
 1594 09c6 9A81      		ldd r25,Y+2
 1595 09c8 880F      		lsl r24
 1596 09ca 991F      		rol r25
 1597 09cc 820F      		add r24,r18
 1598 09ce 931F      		adc r25,r19
 1599 09d0 FC01      		movw r30,r24
 1600 09d2 8081      		ld r24,Z
 1601 09d4 9181      		ldd r25,Z+1
 1602 09d6 292F      		mov r18,r25
 1603 09d8 2F93      		push r18
 1604 09da 8F93      		push r24
 1605 09dc 80E0      		ldi r24,lo8(.LC0)
 1606 09de 90E0      		ldi r25,hi8(.LC0)
 1607 09e0 892F      		mov r24,r25
 1608 09e2 8F93      		push r24
 1609 09e4 80E0      		ldi r24,lo8(.LC0)
 1610 09e6 90E0      		ldi r25,hi8(.LC0)
 1611 09e8 8F93      		push r24
 1612 09ea 1F92      		push __zero_reg__
 1613 09ec 83E0      		ldi r24,lo8(3)
 1614 09ee 8F93      		push r24
 1615 09f0 8C81      		ldd r24,Y+4
 1616 09f2 8F93      		push r24
 1617 09f4 8B81      		ldd r24,Y+3
 1618 09f6 8F93      		push r24
 1619 09f8 0E94 0000 		call report
 1620 09fc 6DB7      		in r22,__SP_L__
 1621 09fe 7EB7      		in r23,__SP_H__
 1622 0a00 685F      		subi r22,-8
 1623 0a02 7F4F      		sbci r23,-1
 1624 0a04 0FB6      		in __tmp_reg__,__SREG__
 1625 0a06 F894      		cli
 1626 0a08 DEBF      		out __SP_H__,r29
 1627 0a0a 0FBE      		out __SREG__,__tmp_reg__
 1628 0a0c CDBF      		out __SP_L__,r28
 1629 0a0e 00C0      		rjmp .L59
 1630               	.L58:
 199:lp_solve_5.5/lp_SOS.c ****     else {
 200:lp_solve_5.5/lp_SOS.c ****       if(SOS->isGUB)
 1631               		.loc 1 200 0
 1632 0a10 8B85      		ldd r24,Y+11
 1633 0a12 9C85      		ldd r25,Y+12
 1634 0a14 FC01      		movw r30,r24
 1635 0a16 8085      		ldd r24,Z+8
 1636 0a18 8823      		tst r24
 1637 0a1a 01F0      		breq .L60
 201:lp_solve_5.5/lp_SOS.c ****         lp->var_type[SOS->members[i]] |= ISGUB;
 1638               		.loc 1 201 0
 1639 0a1c 8B81      		ldd r24,Y+3
 1640 0a1e 9C81      		ldd r25,Y+4
 1641 0a20 8A57      		subi r24,122
 1642 0a22 9D4F      		sbci r25,-3
 1643 0a24 FC01      		movw r30,r24
 1644 0a26 8081      		ld r24,Z
 1645 0a28 9181      		ldd r25,Z+1
 1646 0a2a 2B85      		ldd r18,Y+11
 1647 0a2c 3C85      		ldd r19,Y+12
 1648 0a2e F901      		movw r30,r18
 1649 0a30 4585      		ldd r20,Z+13
 1650 0a32 5685      		ldd r21,Z+14
 1651 0a34 2981      		ldd r18,Y+1
 1652 0a36 3A81      		ldd r19,Y+2
 1653 0a38 220F      		lsl r18
 1654 0a3a 331F      		rol r19
 1655 0a3c 240F      		add r18,r20
 1656 0a3e 351F      		adc r19,r21
 1657 0a40 F901      		movw r30,r18
 1658 0a42 2081      		ld r18,Z
 1659 0a44 3181      		ldd r19,Z+1
 1660 0a46 820F      		add r24,r18
 1661 0a48 931F      		adc r25,r19
 1662 0a4a 2B81      		ldd r18,Y+3
 1663 0a4c 3C81      		ldd r19,Y+4
 1664 0a4e 2A57      		subi r18,122
 1665 0a50 3D4F      		sbci r19,-3
 1666 0a52 F901      		movw r30,r18
 1667 0a54 2081      		ld r18,Z
 1668 0a56 3181      		ldd r19,Z+1
 1669 0a58 4B85      		ldd r20,Y+11
 1670 0a5a 5C85      		ldd r21,Y+12
 1671 0a5c FA01      		movw r30,r20
 1672 0a5e 6585      		ldd r22,Z+13
 1673 0a60 7685      		ldd r23,Z+14
 1674 0a62 4981      		ldd r20,Y+1
 1675 0a64 5A81      		ldd r21,Y+2
 1676 0a66 440F      		lsl r20
 1677 0a68 551F      		rol r21
 1678 0a6a 460F      		add r20,r22
 1679 0a6c 571F      		adc r21,r23
 1680 0a6e FA01      		movw r30,r20
 1681 0a70 4081      		ld r20,Z
 1682 0a72 5181      		ldd r21,Z+1
 1683 0a74 240F      		add r18,r20
 1684 0a76 351F      		adc r19,r21
 1685 0a78 F901      		movw r30,r18
 1686 0a7a 2081      		ld r18,Z
 1687 0a7c 2061      		ori r18,lo8(16)
 1688 0a7e FC01      		movw r30,r24
 1689 0a80 2083      		st Z,r18
 1690 0a82 00C0      		rjmp .L59
 1691               	.L60:
 202:lp_solve_5.5/lp_SOS.c ****       else
 203:lp_solve_5.5/lp_SOS.c ****         lp->var_type[SOS->members[i]] |= ISSOS;
 1692               		.loc 1 203 0
 1693 0a84 8B81      		ldd r24,Y+3
 1694 0a86 9C81      		ldd r25,Y+4
 1695 0a88 8A57      		subi r24,122
 1696 0a8a 9D4F      		sbci r25,-3
 1697 0a8c FC01      		movw r30,r24
 1698 0a8e 8081      		ld r24,Z
 1699 0a90 9181      		ldd r25,Z+1
 1700 0a92 2B85      		ldd r18,Y+11
 1701 0a94 3C85      		ldd r19,Y+12
 1702 0a96 F901      		movw r30,r18
 1703 0a98 4585      		ldd r20,Z+13
 1704 0a9a 5685      		ldd r21,Z+14
 1705 0a9c 2981      		ldd r18,Y+1
 1706 0a9e 3A81      		ldd r19,Y+2
 1707 0aa0 220F      		lsl r18
 1708 0aa2 331F      		rol r19
 1709 0aa4 240F      		add r18,r20
 1710 0aa6 351F      		adc r19,r21
 1711 0aa8 F901      		movw r30,r18
 1712 0aaa 2081      		ld r18,Z
 1713 0aac 3181      		ldd r19,Z+1
 1714 0aae 820F      		add r24,r18
 1715 0ab0 931F      		adc r25,r19
 1716 0ab2 2B81      		ldd r18,Y+3
 1717 0ab4 3C81      		ldd r19,Y+4
 1718 0ab6 2A57      		subi r18,122
 1719 0ab8 3D4F      		sbci r19,-3
 1720 0aba F901      		movw r30,r18
 1721 0abc 2081      		ld r18,Z
 1722 0abe 3181      		ldd r19,Z+1
 1723 0ac0 4B85      		ldd r20,Y+11
 1724 0ac2 5C85      		ldd r21,Y+12
 1725 0ac4 FA01      		movw r30,r20
 1726 0ac6 6585      		ldd r22,Z+13
 1727 0ac8 7685      		ldd r23,Z+14
 1728 0aca 4981      		ldd r20,Y+1
 1729 0acc 5A81      		ldd r21,Y+2
 1730 0ace 440F      		lsl r20
 1731 0ad0 551F      		rol r21
 1732 0ad2 460F      		add r20,r22
 1733 0ad4 571F      		adc r21,r23
 1734 0ad6 FA01      		movw r30,r20
 1735 0ad8 4081      		ld r20,Z
 1736 0ada 5181      		ldd r21,Z+1
 1737 0adc 240F      		add r18,r20
 1738 0ade 351F      		adc r19,r21
 1739 0ae0 F901      		movw r30,r18
 1740 0ae2 2081      		ld r18,Z
 1741 0ae4 2460      		ori r18,lo8(4)
 1742 0ae6 FC01      		movw r30,r24
 1743 0ae8 2083      		st Z,r18
 1744               	.L59:
 204:lp_solve_5.5/lp_SOS.c ****     }
 205:lp_solve_5.5/lp_SOS.c ****     if(weights == NULL)
 1745               		.loc 1 205 0
 1746 0aea 8989      		ldd r24,Y+17
 1747 0aec 9A89      		ldd r25,Y+18
 1748 0aee 892B      		or r24,r25
 1749 0af0 01F4      		brne .L61
 206:lp_solve_5.5/lp_SOS.c ****       SOS->weights[i] = i;  /* Follow standard, which is sorted ascending */
 1750               		.loc 1 206 0
 1751 0af2 8B85      		ldd r24,Y+11
 1752 0af4 9C85      		ldd r25,Y+12
 1753 0af6 FC01      		movw r30,r24
 1754 0af8 2785      		ldd r18,Z+15
 1755 0afa 3089      		ldd r19,Z+16
 1756 0afc 8981      		ldd r24,Y+1
 1757 0afe 9A81      		ldd r25,Y+2
 1758 0b00 880F      		lsl r24
 1759 0b02 991F      		rol r25
 1760 0b04 880F      		lsl r24
 1761 0b06 991F      		rol r25
 1762 0b08 8901      		movw r16,r18
 1763 0b0a 080F      		add r16,r24
 1764 0b0c 191F      		adc r17,r25
 1765 0b0e 8981      		ldd r24,Y+1
 1766 0b10 9A81      		ldd r25,Y+2
 1767 0b12 092E      		mov __tmp_reg__,r25
 1768 0b14 000C      		lsl r0
 1769 0b16 AA0B      		sbc r26,r26
 1770 0b18 BB0B      		sbc r27,r27
 1771 0b1a BC01      		movw r22,r24
 1772 0b1c CD01      		movw r24,r26
 1773 0b1e 0E94 0000 		call __floatsisf
 1774 0b22 DC01      		movw r26,r24
 1775 0b24 CB01      		movw r24,r22
 1776 0b26 F801      		movw r30,r16
 1777 0b28 8083      		st Z,r24
 1778 0b2a 9183      		std Z+1,r25
 1779 0b2c A283      		std Z+2,r26
 1780 0b2e B383      		std Z+3,r27
 1781 0b30 00C0      		rjmp .L62
 1782               	.L61:
 207:lp_solve_5.5/lp_SOS.c ****     else
 208:lp_solve_5.5/lp_SOS.c ****       SOS->weights[i] = weights[i-oldsize-1];
 1783               		.loc 1 208 0
 1784 0b32 8B85      		ldd r24,Y+11
 1785 0b34 9C85      		ldd r25,Y+12
 1786 0b36 FC01      		movw r30,r24
 1787 0b38 2785      		ldd r18,Z+15
 1788 0b3a 3089      		ldd r19,Z+16
 1789 0b3c 8981      		ldd r24,Y+1
 1790 0b3e 9A81      		ldd r25,Y+2
 1791 0b40 880F      		lsl r24
 1792 0b42 991F      		rol r25
 1793 0b44 880F      		lsl r24
 1794 0b46 991F      		rol r25
 1795 0b48 280F      		add r18,r24
 1796 0b4a 391F      		adc r19,r25
 1797 0b4c 4981      		ldd r20,Y+1
 1798 0b4e 5A81      		ldd r21,Y+2
 1799 0b50 8D81      		ldd r24,Y+5
 1800 0b52 9E81      		ldd r25,Y+6
 1801 0b54 BA01      		movw r22,r20
 1802 0b56 681B      		sub r22,r24
 1803 0b58 790B      		sbc r23,r25
 1804 0b5a CB01      		movw r24,r22
 1805 0b5c 8150      		subi r24,1
 1806 0b5e 904C      		sbci r25,-64
 1807 0b60 880F      		lsl r24
 1808 0b62 991F      		rol r25
 1809 0b64 880F      		lsl r24
 1810 0b66 991F      		rol r25
 1811 0b68 4989      		ldd r20,Y+17
 1812 0b6a 5A89      		ldd r21,Y+18
 1813 0b6c 840F      		add r24,r20
 1814 0b6e 951F      		adc r25,r21
 1815 0b70 FC01      		movw r30,r24
 1816 0b72 8081      		ld r24,Z
 1817 0b74 9181      		ldd r25,Z+1
 1818 0b76 A281      		ldd r26,Z+2
 1819 0b78 B381      		ldd r27,Z+3
 1820 0b7a F901      		movw r30,r18
 1821 0b7c 8083      		st Z,r24
 1822 0b7e 9183      		std Z+1,r25
 1823 0b80 A283      		std Z+2,r26
 1824 0b82 B383      		std Z+3,r27
 1825               	.L62:
 209:lp_solve_5.5/lp_SOS.c ****     SOS->weights[0] += SOS->weights[i];
 1826               		.loc 1 209 0 discriminator 2
 1827 0b84 8B85      		ldd r24,Y+11
 1828 0b86 9C85      		ldd r25,Y+12
 1829 0b88 FC01      		movw r30,r24
 1830 0b8a 0785      		ldd r16,Z+15
 1831 0b8c 1089      		ldd r17,Z+16
 1832 0b8e 8B85      		ldd r24,Y+11
 1833 0b90 9C85      		ldd r25,Y+12
 1834 0b92 FC01      		movw r30,r24
 1835 0b94 8785      		ldd r24,Z+15
 1836 0b96 9089      		ldd r25,Z+16
 1837 0b98 FC01      		movw r30,r24
 1838 0b9a 8081      		ld r24,Z
 1839 0b9c 9181      		ldd r25,Z+1
 1840 0b9e A281      		ldd r26,Z+2
 1841 0ba0 B381      		ldd r27,Z+3
 1842 0ba2 2B85      		ldd r18,Y+11
 1843 0ba4 3C85      		ldd r19,Y+12
 1844 0ba6 F901      		movw r30,r18
 1845 0ba8 4785      		ldd r20,Z+15
 1846 0baa 5089      		ldd r21,Z+16
 1847 0bac 2981      		ldd r18,Y+1
 1848 0bae 3A81      		ldd r19,Y+2
 1849 0bb0 220F      		lsl r18
 1850 0bb2 331F      		rol r19
 1851 0bb4 220F      		lsl r18
 1852 0bb6 331F      		rol r19
 1853 0bb8 240F      		add r18,r20
 1854 0bba 351F      		adc r19,r21
 1855 0bbc F901      		movw r30,r18
 1856 0bbe 2081      		ld r18,Z
 1857 0bc0 3181      		ldd r19,Z+1
 1858 0bc2 4281      		ldd r20,Z+2
 1859 0bc4 5381      		ldd r21,Z+3
 1860 0bc6 BC01      		movw r22,r24
 1861 0bc8 CD01      		movw r24,r26
 1862 0bca 0E94 0000 		call __addsf3
 1863 0bce DC01      		movw r26,r24
 1864 0bd0 CB01      		movw r24,r22
 1865 0bd2 F801      		movw r30,r16
 1866 0bd4 8083      		st Z,r24
 1867 0bd6 9183      		std Z+1,r25
 1868 0bd8 A283      		std Z+2,r26
 1869 0bda B383      		std Z+3,r27
 195:lp_solve_5.5/lp_SOS.c ****     SOS->members[i] = variables[i-oldsize-1];
 1870               		.loc 1 195 0 discriminator 2
 1871 0bdc 8981      		ldd r24,Y+1
 1872 0bde 9A81      		ldd r25,Y+2
 1873 0be0 0196      		adiw r24,1
 1874 0be2 9A83      		std Y+2,r25
 1875 0be4 8983      		std Y+1,r24
 1876               	.L56:
 195:lp_solve_5.5/lp_SOS.c ****     SOS->members[i] = variables[i-oldsize-1];
 1877               		.loc 1 195 0 is_stmt 0 discriminator 1
 1878 0be6 2981      		ldd r18,Y+1
 1879 0be8 3A81      		ldd r19,Y+2
 1880 0bea 8F81      		ldd r24,Y+7
 1881 0bec 9885      		ldd r25,Y+8
 1882 0bee 8217      		cp r24,r18
 1883 0bf0 9307      		cpc r25,r19
 1884 0bf2 04F0      		brlt .+2
 1885 0bf4 00C0      		rjmp .L63
 210:lp_solve_5.5/lp_SOS.c ****   }
 211:lp_solve_5.5/lp_SOS.c **** 
 212:lp_solve_5.5/lp_SOS.c ****  /* Sort the new paired lists ascending by weight (simple bubble sort) */
 213:lp_solve_5.5/lp_SOS.c ****   i = sortByREAL(SOS->members, SOS->weights, newsize, 1, TRUE);
 1886               		.loc 1 213 0 is_stmt 1
 1887 0bf6 8B85      		ldd r24,Y+11
 1888 0bf8 9C85      		ldd r25,Y+12
 1889 0bfa FC01      		movw r30,r24
 1890 0bfc 6785      		ldd r22,Z+15
 1891 0bfe 7089      		ldd r23,Z+16
 1892 0c00 8B85      		ldd r24,Y+11
 1893 0c02 9C85      		ldd r25,Y+12
 1894 0c04 FC01      		movw r30,r24
 1895 0c06 8585      		ldd r24,Z+13
 1896 0c08 9685      		ldd r25,Z+14
 1897 0c0a 4F81      		ldd r20,Y+7
 1898 0c0c 5885      		ldd r21,Y+8
 1899 0c0e 01E0      		ldi r16,lo8(1)
 1900 0c10 21E0      		ldi r18,lo8(1)
 1901 0c12 30E0      		ldi r19,0
 1902 0c14 0E94 0000 		call sortByREAL
 1903 0c18 9A83      		std Y+2,r25
 1904 0c1a 8983      		std Y+1,r24
 214:lp_solve_5.5/lp_SOS.c ****   if(i > 0)
 1905               		.loc 1 214 0
 1906 0c1c 8981      		ldd r24,Y+1
 1907 0c1e 9A81      		ldd r25,Y+2
 1908 0c20 1816      		cp __zero_reg__,r24
 1909 0c22 1906      		cpc __zero_reg__,r25
 1910 0c24 04F4      		brge .L64
 215:lp_solve_5.5/lp_SOS.c ****     report(lp, DETAILED, "append_SOS_rec: Non-unique SOS variable weight for index %d\n", i);
 1911               		.loc 1 215 0
 1912 0c26 8A81      		ldd r24,Y+2
 1913 0c28 8F93      		push r24
 1914 0c2a 8981      		ldd r24,Y+1
 1915 0c2c 8F93      		push r24
 1916 0c2e 80E0      		ldi r24,lo8(.LC1)
 1917 0c30 90E0      		ldi r25,hi8(.LC1)
 1918 0c32 892F      		mov r24,r25
 1919 0c34 8F93      		push r24
 1920 0c36 80E0      		ldi r24,lo8(.LC1)
 1921 0c38 90E0      		ldi r25,hi8(.LC1)
 1922 0c3a 8F93      		push r24
 1923 0c3c 1F92      		push __zero_reg__
 1924 0c3e 85E0      		ldi r24,lo8(5)
 1925 0c40 8F93      		push r24
 1926 0c42 8C81      		ldd r24,Y+4
 1927 0c44 8F93      		push r24
 1928 0c46 8B81      		ldd r24,Y+3
 1929 0c48 8F93      		push r24
 1930 0c4a 0E94 0000 		call report
 1931 0c4e 6DB7      		in r22,__SP_L__
 1932 0c50 7EB7      		in r23,__SP_H__
 1933 0c52 685F      		subi r22,-8
 1934 0c54 7F4F      		sbci r23,-1
 1935 0c56 0FB6      		in __tmp_reg__,__SREG__
 1936 0c58 F894      		cli
 1937 0c5a DEBF      		out __SP_H__,r29
 1938 0c5c 0FBE      		out __SREG__,__tmp_reg__
 1939 0c5e CDBF      		out __SP_L__,r28
 1940               	.L64:
 216:lp_solve_5.5/lp_SOS.c **** 
 217:lp_solve_5.5/lp_SOS.c ****  /* Define mapping arrays to search large SOS's faster */
 218:lp_solve_5.5/lp_SOS.c ****   allocINT(lp, &SOS->membersSorted, newsize, AUTOMATIC);
 1941               		.loc 1 218 0
 1942 0c60 8B85      		ldd r24,Y+11
 1943 0c62 9C85      		ldd r25,Y+12
 1944 0c64 BC01      		movw r22,r24
 1945 0c66 6F5E      		subi r22,-17
 1946 0c68 7F4F      		sbci r23,-1
 1947 0c6a 4F81      		ldd r20,Y+7
 1948 0c6c 5885      		ldd r21,Y+8
 1949 0c6e 8B81      		ldd r24,Y+3
 1950 0c70 9C81      		ldd r25,Y+4
 1951 0c72 22E0      		ldi r18,lo8(2)
 1952 0c74 0E94 0000 		call allocINT
 219:lp_solve_5.5/lp_SOS.c ****   allocINT(lp, &SOS->membersMapped, newsize, AUTOMATIC);
 1953               		.loc 1 219 0
 1954 0c78 8B85      		ldd r24,Y+11
 1955 0c7a 9C85      		ldd r25,Y+12
 1956 0c7c BC01      		movw r22,r24
 1957 0c7e 6D5E      		subi r22,-19
 1958 0c80 7F4F      		sbci r23,-1
 1959 0c82 4F81      		ldd r20,Y+7
 1960 0c84 5885      		ldd r21,Y+8
 1961 0c86 8B81      		ldd r24,Y+3
 1962 0c88 9C81      		ldd r25,Y+4
 1963 0c8a 22E0      		ldi r18,lo8(2)
 1964 0c8c 0E94 0000 		call allocINT
 220:lp_solve_5.5/lp_SOS.c ****   for(i = oldsize+1; i <= newsize; i++) {
 1965               		.loc 1 220 0
 1966 0c90 8D81      		ldd r24,Y+5
 1967 0c92 9E81      		ldd r25,Y+6
 1968 0c94 0196      		adiw r24,1
 1969 0c96 9A83      		std Y+2,r25
 1970 0c98 8983      		std Y+1,r24
 1971 0c9a 00C0      		rjmp .L65
 1972               	.L66:
 221:lp_solve_5.5/lp_SOS.c ****     SOS->membersSorted[i - 1] = SOS->members[i];
 1973               		.loc 1 221 0 discriminator 3
 1974 0c9c 8B85      		ldd r24,Y+11
 1975 0c9e 9C85      		ldd r25,Y+12
 1976 0ca0 FC01      		movw r30,r24
 1977 0ca2 2189      		ldd r18,Z+17
 1978 0ca4 3289      		ldd r19,Z+18
 1979 0ca6 8981      		ldd r24,Y+1
 1980 0ca8 9A81      		ldd r25,Y+2
 1981 0caa 8150      		subi r24,1
 1982 0cac 9048      		sbci r25,-128
 1983 0cae 880F      		lsl r24
 1984 0cb0 991F      		rol r25
 1985 0cb2 820F      		add r24,r18
 1986 0cb4 931F      		adc r25,r19
 1987 0cb6 2B85      		ldd r18,Y+11
 1988 0cb8 3C85      		ldd r19,Y+12
 1989 0cba F901      		movw r30,r18
 1990 0cbc 4585      		ldd r20,Z+13
 1991 0cbe 5685      		ldd r21,Z+14
 1992 0cc0 2981      		ldd r18,Y+1
 1993 0cc2 3A81      		ldd r19,Y+2
 1994 0cc4 220F      		lsl r18
 1995 0cc6 331F      		rol r19
 1996 0cc8 240F      		add r18,r20
 1997 0cca 351F      		adc r19,r21
 1998 0ccc F901      		movw r30,r18
 1999 0cce 2081      		ld r18,Z
 2000 0cd0 3181      		ldd r19,Z+1
 2001 0cd2 FC01      		movw r30,r24
 2002 0cd4 3183      		std Z+1,r19
 2003 0cd6 2083      		st Z,r18
 222:lp_solve_5.5/lp_SOS.c ****     SOS->membersMapped[i - 1] = i;
 2004               		.loc 1 222 0 discriminator 3
 2005 0cd8 8B85      		ldd r24,Y+11
 2006 0cda 9C85      		ldd r25,Y+12
 2007 0cdc FC01      		movw r30,r24
 2008 0cde 2389      		ldd r18,Z+19
 2009 0ce0 3489      		ldd r19,Z+20
 2010 0ce2 8981      		ldd r24,Y+1
 2011 0ce4 9A81      		ldd r25,Y+2
 2012 0ce6 8150      		subi r24,1
 2013 0ce8 9048      		sbci r25,-128
 2014 0cea 880F      		lsl r24
 2015 0cec 991F      		rol r25
 2016 0cee 820F      		add r24,r18
 2017 0cf0 931F      		adc r25,r19
 2018 0cf2 2981      		ldd r18,Y+1
 2019 0cf4 3A81      		ldd r19,Y+2
 2020 0cf6 FC01      		movw r30,r24
 2021 0cf8 3183      		std Z+1,r19
 2022 0cfa 2083      		st Z,r18
 220:lp_solve_5.5/lp_SOS.c ****   for(i = oldsize+1; i <= newsize; i++) {
 2023               		.loc 1 220 0 discriminator 3
 2024 0cfc 8981      		ldd r24,Y+1
 2025 0cfe 9A81      		ldd r25,Y+2
 2026 0d00 0196      		adiw r24,1
 2027 0d02 9A83      		std Y+2,r25
 2028 0d04 8983      		std Y+1,r24
 2029               	.L65:
 220:lp_solve_5.5/lp_SOS.c ****   for(i = oldsize+1; i <= newsize; i++) {
 2030               		.loc 1 220 0 is_stmt 0 discriminator 1
 2031 0d06 2981      		ldd r18,Y+1
 2032 0d08 3A81      		ldd r19,Y+2
 2033 0d0a 8F81      		ldd r24,Y+7
 2034 0d0c 9885      		ldd r25,Y+8
 2035 0d0e 8217      		cp r24,r18
 2036 0d10 9307      		cpc r25,r19
 2037 0d12 04F4      		brge .L66
 223:lp_solve_5.5/lp_SOS.c ****   }
 224:lp_solve_5.5/lp_SOS.c ****   sortByINT(SOS->membersMapped, SOS->membersSorted, newsize, 0, TRUE);
 2038               		.loc 1 224 0 is_stmt 1
 2039 0d14 8B85      		ldd r24,Y+11
 2040 0d16 9C85      		ldd r25,Y+12
 2041 0d18 FC01      		movw r30,r24
 2042 0d1a 6189      		ldd r22,Z+17
 2043 0d1c 7289      		ldd r23,Z+18
 2044 0d1e 8B85      		ldd r24,Y+11
 2045 0d20 9C85      		ldd r25,Y+12
 2046 0d22 FC01      		movw r30,r24
 2047 0d24 8389      		ldd r24,Z+19
 2048 0d26 9489      		ldd r25,Z+20
 2049 0d28 4F81      		ldd r20,Y+7
 2050 0d2a 5885      		ldd r21,Y+8
 2051 0d2c 01E0      		ldi r16,lo8(1)
 2052 0d2e 20E0      		ldi r18,0
 2053 0d30 30E0      		ldi r19,0
 2054 0d32 0E94 0000 		call sortByINT
 225:lp_solve_5.5/lp_SOS.c **** 
 226:lp_solve_5.5/lp_SOS.c ****  /* Confirm the new size */
 227:lp_solve_5.5/lp_SOS.c ****   SOS->size = newsize;
 2055               		.loc 1 227 0
 2056 0d36 8B85      		ldd r24,Y+11
 2057 0d38 9C85      		ldd r25,Y+12
 2058 0d3a 2F81      		ldd r18,Y+7
 2059 0d3c 3885      		ldd r19,Y+8
 2060 0d3e FC01      		movw r30,r24
 2061 0d40 3287      		std Z+10,r19
 2062 0d42 2187      		std Z+9,r18
 228:lp_solve_5.5/lp_SOS.c **** 
 229:lp_solve_5.5/lp_SOS.c ****   return(newsize);
 2063               		.loc 1 229 0
 2064 0d44 8F81      		ldd r24,Y+7
 2065 0d46 9885      		ldd r25,Y+8
 2066               	/* epilogue start */
 230:lp_solve_5.5/lp_SOS.c **** 
 231:lp_solve_5.5/lp_SOS.c **** }
 2067               		.loc 1 231 0
 2068 0d48 6296      		adiw r28,18
 2069 0d4a 0FB6      		in __tmp_reg__,__SREG__
 2070 0d4c F894      		cli
 2071 0d4e DEBF      		out __SP_H__,r29
 2072 0d50 0FBE      		out __SREG__,__tmp_reg__
 2073 0d52 CDBF      		out __SP_L__,r28
 2074 0d54 DF91      		pop r29
 2075 0d56 CF91      		pop r28
 2076 0d58 1F91      		pop r17
 2077 0d5a 0F91      		pop r16
 2078 0d5c 0895      		ret
 2079               		.cfi_endproc
 2080               	.LFE13:
 2082               	.global	make_SOSchain
 2084               	make_SOSchain:
 2085               	.LFB14:
 232:lp_solve_5.5/lp_SOS.c **** 
 233:lp_solve_5.5/lp_SOS.c **** STATIC int make_SOSchain(lprec *lp, MYBOOL forceresort)
 234:lp_solve_5.5/lp_SOS.c **** {
 2086               		.loc 1 234 0
 2087               		.cfi_startproc
 2088 0d5e CF92      		push r12
 2089               	.LCFI36:
 2090               		.cfi_def_cfa_offset 3
 2091               		.cfi_offset 12, -2
 2092 0d60 DF92      		push r13
 2093               	.LCFI37:
 2094               		.cfi_def_cfa_offset 4
 2095               		.cfi_offset 13, -3
 2096 0d62 EF92      		push r14
 2097               	.LCFI38:
 2098               		.cfi_def_cfa_offset 5
 2099               		.cfi_offset 14, -4
 2100 0d64 FF92      		push r15
 2101               	.LCFI39:
 2102               		.cfi_def_cfa_offset 6
 2103               		.cfi_offset 15, -5
 2104 0d66 0F93      		push r16
 2105               	.LCFI40:
 2106               		.cfi_def_cfa_offset 7
 2107               		.cfi_offset 16, -6
 2108 0d68 CF93      		push r28
 2109               	.LCFI41:
 2110               		.cfi_def_cfa_offset 8
 2111               		.cfi_offset 28, -7
 2112 0d6a DF93      		push r29
 2113               	.LCFI42:
 2114               		.cfi_def_cfa_offset 9
 2115               		.cfi_offset 29, -8
 2116 0d6c CDB7      		in r28,__SP_L__
 2117 0d6e DEB7      		in r29,__SP_H__
 2118               	.LCFI43:
 2119               		.cfi_def_cfa_register 28
 2120 0d70 6997      		sbiw r28,25
 2121               	.LCFI44:
 2122               		.cfi_def_cfa_offset 34
 2123 0d72 0FB6      		in __tmp_reg__,__SREG__
 2124 0d74 F894      		cli
 2125 0d76 DEBF      		out __SP_H__,r29
 2126 0d78 0FBE      		out __SREG__,__tmp_reg__
 2127 0d7a CDBF      		out __SP_L__,r28
 2128               	/* prologue: function */
 2129               	/* frame size = 25 */
 2130               	/* stack size = 32 */
 2131               	.L__stack_usage = 32
 2132 0d7c 988F      		std Y+24,r25
 2133 0d7e 8F8B      		std Y+23,r24
 2134 0d80 698F      		std Y+25,r22
 235:lp_solve_5.5/lp_SOS.c ****   int      i, j, k, n;
 236:lp_solve_5.5/lp_SOS.c ****   MYBOOL   *hold = NULL;
 2135               		.loc 1 236 0
 2136 0d82 1C8A      		std Y+20,__zero_reg__
 2137 0d84 1B8A      		std Y+19,__zero_reg__
 237:lp_solve_5.5/lp_SOS.c ****   REAL     *order, sum, weight;
 238:lp_solve_5.5/lp_SOS.c ****   SOSgroup *group = lp->SOS;
 2138               		.loc 1 238 0
 2139 0d86 8F89      		ldd r24,Y+23
 2140 0d88 988D      		ldd r25,Y+24
 2141 0d8a 8256      		subi r24,98
 2142 0d8c 9D4F      		sbci r25,-3
 2143 0d8e FC01      		movw r30,r24
 2144 0d90 8081      		ld r24,Z
 2145 0d92 9181      		ldd r25,Z+1
 2146 0d94 9E87      		std Y+14,r25
 2147 0d96 8D87      		std Y+13,r24
 239:lp_solve_5.5/lp_SOS.c **** 
 240:lp_solve_5.5/lp_SOS.c ****   /* PART A: Resort individual SOS member lists, if specified */
 241:lp_solve_5.5/lp_SOS.c ****   if(forceresort)
 2148               		.loc 1 241 0
 2149 0d98 898D      		ldd r24,Y+25
 2150 0d9a 8823      		tst r24
 2151 0d9c 01F0      		breq .L69
 242:lp_solve_5.5/lp_SOS.c ****     SOS_member_sortlist(group, 0);
 2152               		.loc 1 242 0
 2153 0d9e 8D85      		ldd r24,Y+13
 2154 0da0 9E85      		ldd r25,Y+14
 2155 0da2 60E0      		ldi r22,0
 2156 0da4 70E0      		ldi r23,0
 2157 0da6 0E94 0000 		call SOS_member_sortlist
 2158               	.L69:
 243:lp_solve_5.5/lp_SOS.c **** 
 244:lp_solve_5.5/lp_SOS.c ****   /* PART B: Tally SOS variables and create master SOS variable list */
 245:lp_solve_5.5/lp_SOS.c ****   n = 0;
 2159               		.loc 1 245 0
 2160 0daa 1886      		std Y+8,__zero_reg__
 2161 0dac 1F82      		std Y+7,__zero_reg__
 246:lp_solve_5.5/lp_SOS.c ****   for(i = 0; i < group->sos_count; i++)
 2162               		.loc 1 246 0
 2163 0dae 1A82      		std Y+2,__zero_reg__
 2164 0db0 1982      		std Y+1,__zero_reg__
 2165 0db2 00C0      		rjmp .L70
 2166               	.L71:
 247:lp_solve_5.5/lp_SOS.c ****     n += group->sos_list[i]->size;
 2167               		.loc 1 247 0 discriminator 3
 2168 0db4 8D85      		ldd r24,Y+13
 2169 0db6 9E85      		ldd r25,Y+14
 2170 0db8 FC01      		movw r30,r24
 2171 0dba 2281      		ldd r18,Z+2
 2172 0dbc 3381      		ldd r19,Z+3
 2173 0dbe 8981      		ldd r24,Y+1
 2174 0dc0 9A81      		ldd r25,Y+2
 2175 0dc2 880F      		lsl r24
 2176 0dc4 991F      		rol r25
 2177 0dc6 820F      		add r24,r18
 2178 0dc8 931F      		adc r25,r19
 2179 0dca FC01      		movw r30,r24
 2180 0dcc 8081      		ld r24,Z
 2181 0dce 9181      		ldd r25,Z+1
 2182 0dd0 FC01      		movw r30,r24
 2183 0dd2 8185      		ldd r24,Z+9
 2184 0dd4 9285      		ldd r25,Z+10
 2185 0dd6 2F81      		ldd r18,Y+7
 2186 0dd8 3885      		ldd r19,Y+8
 2187 0dda 820F      		add r24,r18
 2188 0ddc 931F      		adc r25,r19
 2189 0dde 9887      		std Y+8,r25
 2190 0de0 8F83      		std Y+7,r24
 246:lp_solve_5.5/lp_SOS.c ****   for(i = 0; i < group->sos_count; i++)
 2191               		.loc 1 246 0 discriminator 3
 2192 0de2 8981      		ldd r24,Y+1
 2193 0de4 9A81      		ldd r25,Y+2
 2194 0de6 0196      		adiw r24,1
 2195 0de8 9A83      		std Y+2,r25
 2196 0dea 8983      		std Y+1,r24
 2197               	.L70:
 246:lp_solve_5.5/lp_SOS.c ****   for(i = 0; i < group->sos_count; i++)
 2198               		.loc 1 246 0 is_stmt 0 discriminator 1
 2199 0dec 8D85      		ldd r24,Y+13
 2200 0dee 9E85      		ldd r25,Y+14
 2201 0df0 FC01      		movw r30,r24
 2202 0df2 2681      		ldd r18,Z+6
 2203 0df4 3781      		ldd r19,Z+7
 2204 0df6 8981      		ldd r24,Y+1
 2205 0df8 9A81      		ldd r25,Y+2
 2206 0dfa 8217      		cp r24,r18
 2207 0dfc 9307      		cpc r25,r19
 2208 0dfe 04F0      		brlt .L71
 248:lp_solve_5.5/lp_SOS.c ****   lp->sos_vars = n;
 2209               		.loc 1 248 0 is_stmt 1
 2210 0e00 8F89      		ldd r24,Y+23
 2211 0e02 988D      		ldd r25,Y+24
 2212 0e04 8656      		subi r24,102
 2213 0e06 9D4F      		sbci r25,-3
 2214 0e08 2F81      		ldd r18,Y+7
 2215 0e0a 3885      		ldd r19,Y+8
 2216 0e0c FC01      		movw r30,r24
 2217 0e0e 3183      		std Z+1,r19
 2218 0e10 2083      		st Z,r18
 249:lp_solve_5.5/lp_SOS.c ****   if(lp->sos_vars > 0) /* Prevent memory loss in case of multiple solves */
 2219               		.loc 1 249 0
 2220 0e12 8F89      		ldd r24,Y+23
 2221 0e14 988D      		ldd r25,Y+24
 2222 0e16 8656      		subi r24,102
 2223 0e18 9D4F      		sbci r25,-3
 2224 0e1a FC01      		movw r30,r24
 2225 0e1c 8081      		ld r24,Z
 2226 0e1e 9181      		ldd r25,Z+1
 2227 0e20 1816      		cp __zero_reg__,r24
 2228 0e22 1906      		cpc __zero_reg__,r25
 2229 0e24 04F4      		brge .L72
 250:lp_solve_5.5/lp_SOS.c ****     FREE(lp->sos_priority);
 2230               		.loc 1 250 0
 2231 0e26 8F89      		ldd r24,Y+23
 2232 0e28 988D      		ldd r25,Y+24
 2233 0e2a 8056      		subi r24,96
 2234 0e2c 9D4F      		sbci r25,-3
 2235 0e2e FC01      		movw r30,r24
 2236 0e30 8081      		ld r24,Z
 2237 0e32 9181      		ldd r25,Z+1
 2238 0e34 892B      		or r24,r25
 2239 0e36 01F0      		breq .L72
 2240               		.loc 1 250 0 is_stmt 0 discriminator 1
 2241 0e38 8F89      		ldd r24,Y+23
 2242 0e3a 988D      		ldd r25,Y+24
 2243 0e3c 8056      		subi r24,96
 2244 0e3e 9D4F      		sbci r25,-3
 2245 0e40 FC01      		movw r30,r24
 2246 0e42 8081      		ld r24,Z
 2247 0e44 9181      		ldd r25,Z+1
 2248 0e46 0E94 0000 		call free
 2249 0e4a 8F89      		ldd r24,Y+23
 2250 0e4c 988D      		ldd r25,Y+24
 2251 0e4e 8056      		subi r24,96
 2252 0e50 9D4F      		sbci r25,-3
 2253 0e52 FC01      		movw r30,r24
 2254 0e54 1182      		std Z+1,__zero_reg__
 2255 0e56 1082      		st Z,__zero_reg__
 2256               	.L72:
 251:lp_solve_5.5/lp_SOS.c ****   allocINT(lp, &lp->sos_priority, n, FALSE);
 2257               		.loc 1 251 0 is_stmt 1
 2258 0e58 8F89      		ldd r24,Y+23
 2259 0e5a 988D      		ldd r25,Y+24
 2260 0e5c BC01      		movw r22,r24
 2261 0e5e 6056      		subi r22,96
 2262 0e60 7D4F      		sbci r23,-3
 2263 0e62 4F81      		ldd r20,Y+7
 2264 0e64 5885      		ldd r21,Y+8
 2265 0e66 8F89      		ldd r24,Y+23
 2266 0e68 988D      		ldd r25,Y+24
 2267 0e6a 20E0      		ldi r18,0
 2268 0e6c 0E94 0000 		call allocINT
 252:lp_solve_5.5/lp_SOS.c ****   allocREAL(lp, &order, n, FALSE);
 2269               		.loc 1 252 0
 2270 0e70 4F81      		ldd r20,Y+7
 2271 0e72 5885      		ldd r21,Y+8
 2272 0e74 BE01      		movw r22,r28
 2273 0e76 6B5E      		subi r22,-21
 2274 0e78 7F4F      		sbci r23,-1
 2275 0e7a 8F89      		ldd r24,Y+23
 2276 0e7c 988D      		ldd r25,Y+24
 2277 0e7e 20E0      		ldi r18,0
 2278 0e80 0E94 0000 		call allocREAL
 253:lp_solve_5.5/lp_SOS.c **** 
 254:lp_solve_5.5/lp_SOS.c ****   /* Move variable data to the master SOS list and sort by ascending weight */
 255:lp_solve_5.5/lp_SOS.c ****   n = 0;
 2279               		.loc 1 255 0
 2280 0e84 1886      		std Y+8,__zero_reg__
 2281 0e86 1F82      		std Y+7,__zero_reg__
 256:lp_solve_5.5/lp_SOS.c ****   sum = 0;
 2282               		.loc 1 256 0
 2283 0e88 1986      		std Y+9,__zero_reg__
 2284 0e8a 1A86      		std Y+10,__zero_reg__
 2285 0e8c 1B86      		std Y+11,__zero_reg__
 2286 0e8e 1C86      		std Y+12,__zero_reg__
 257:lp_solve_5.5/lp_SOS.c ****   for(i = 0; i < group->sos_count; i++) {
 2287               		.loc 1 257 0
 2288 0e90 1A82      		std Y+2,__zero_reg__
 2289 0e92 1982      		std Y+1,__zero_reg__
 2290 0e94 00C0      		rjmp .L73
 2291               	.L76:
 258:lp_solve_5.5/lp_SOS.c ****     for(j = 1; j <= group->sos_list[i]->size; j++) {
 2292               		.loc 1 258 0
 2293 0e96 81E0      		ldi r24,lo8(1)
 2294 0e98 90E0      		ldi r25,0
 2295 0e9a 9C83      		std Y+4,r25
 2296 0e9c 8B83      		std Y+3,r24
 2297 0e9e 00C0      		rjmp .L74
 2298               	.L75:
 259:lp_solve_5.5/lp_SOS.c ****       lp->sos_priority[n] = group->sos_list[i]->members[j];
 2299               		.loc 1 259 0 discriminator 3
 2300 0ea0 8F89      		ldd r24,Y+23
 2301 0ea2 988D      		ldd r25,Y+24
 2302 0ea4 8056      		subi r24,96
 2303 0ea6 9D4F      		sbci r25,-3
 2304 0ea8 FC01      		movw r30,r24
 2305 0eaa 2081      		ld r18,Z
 2306 0eac 3181      		ldd r19,Z+1
 2307 0eae 8F81      		ldd r24,Y+7
 2308 0eb0 9885      		ldd r25,Y+8
 2309 0eb2 880F      		lsl r24
 2310 0eb4 991F      		rol r25
 2311 0eb6 820F      		add r24,r18
 2312 0eb8 931F      		adc r25,r19
 2313 0eba 2D85      		ldd r18,Y+13
 2314 0ebc 3E85      		ldd r19,Y+14
 2315 0ebe F901      		movw r30,r18
 2316 0ec0 4281      		ldd r20,Z+2
 2317 0ec2 5381      		ldd r21,Z+3
 2318 0ec4 2981      		ldd r18,Y+1
 2319 0ec6 3A81      		ldd r19,Y+2
 2320 0ec8 220F      		lsl r18
 2321 0eca 331F      		rol r19
 2322 0ecc 240F      		add r18,r20
 2323 0ece 351F      		adc r19,r21
 2324 0ed0 F901      		movw r30,r18
 2325 0ed2 2081      		ld r18,Z
 2326 0ed4 3181      		ldd r19,Z+1
 2327 0ed6 F901      		movw r30,r18
 2328 0ed8 4585      		ldd r20,Z+13
 2329 0eda 5685      		ldd r21,Z+14
 2330 0edc 2B81      		ldd r18,Y+3
 2331 0ede 3C81      		ldd r19,Y+4
 2332 0ee0 220F      		lsl r18
 2333 0ee2 331F      		rol r19
 2334 0ee4 240F      		add r18,r20
 2335 0ee6 351F      		adc r19,r21
 2336 0ee8 F901      		movw r30,r18
 2337 0eea 2081      		ld r18,Z
 2338 0eec 3181      		ldd r19,Z+1
 2339 0eee FC01      		movw r30,r24
 2340 0ef0 3183      		std Z+1,r19
 2341 0ef2 2083      		st Z,r18
 260:lp_solve_5.5/lp_SOS.c ****       weight = group->sos_list[i]->weights[j];
 2342               		.loc 1 260 0 discriminator 3
 2343 0ef4 8D85      		ldd r24,Y+13
 2344 0ef6 9E85      		ldd r25,Y+14
 2345 0ef8 FC01      		movw r30,r24
 2346 0efa 2281      		ldd r18,Z+2
 2347 0efc 3381      		ldd r19,Z+3
 2348 0efe 8981      		ldd r24,Y+1
 2349 0f00 9A81      		ldd r25,Y+2
 2350 0f02 880F      		lsl r24
 2351 0f04 991F      		rol r25
 2352 0f06 820F      		add r24,r18
 2353 0f08 931F      		adc r25,r19
 2354 0f0a FC01      		movw r30,r24
 2355 0f0c 8081      		ld r24,Z
 2356 0f0e 9181      		ldd r25,Z+1
 2357 0f10 FC01      		movw r30,r24
 2358 0f12 2785      		ldd r18,Z+15
 2359 0f14 3089      		ldd r19,Z+16
 2360 0f16 8B81      		ldd r24,Y+3
 2361 0f18 9C81      		ldd r25,Y+4
 2362 0f1a 880F      		lsl r24
 2363 0f1c 991F      		rol r25
 2364 0f1e 880F      		lsl r24
 2365 0f20 991F      		rol r25
 2366 0f22 820F      		add r24,r18
 2367 0f24 931F      		adc r25,r19
 2368 0f26 FC01      		movw r30,r24
 2369 0f28 8081      		ld r24,Z
 2370 0f2a 9181      		ldd r25,Z+1
 2371 0f2c A281      		ldd r26,Z+2
 2372 0f2e B381      		ldd r27,Z+3
 2373 0f30 8F87      		std Y+15,r24
 2374 0f32 988B      		std Y+16,r25
 2375 0f34 A98B      		std Y+17,r26
 2376 0f36 BA8B      		std Y+18,r27
 261:lp_solve_5.5/lp_SOS.c ****       sum += weight;
 2377               		.loc 1 261 0 discriminator 3
 2378 0f38 2F85      		ldd r18,Y+15
 2379 0f3a 3889      		ldd r19,Y+16
 2380 0f3c 4989      		ldd r20,Y+17
 2381 0f3e 5A89      		ldd r21,Y+18
 2382 0f40 6985      		ldd r22,Y+9
 2383 0f42 7A85      		ldd r23,Y+10
 2384 0f44 8B85      		ldd r24,Y+11
 2385 0f46 9C85      		ldd r25,Y+12
 2386 0f48 0E94 0000 		call __addsf3
 2387 0f4c DC01      		movw r26,r24
 2388 0f4e CB01      		movw r24,r22
 2389 0f50 8987      		std Y+9,r24
 2390 0f52 9A87      		std Y+10,r25
 2391 0f54 AB87      		std Y+11,r26
 2392 0f56 BC87      		std Y+12,r27
 262:lp_solve_5.5/lp_SOS.c ****       order[n] = sum;
 2393               		.loc 1 262 0 discriminator 3
 2394 0f58 2D89      		ldd r18,Y+21
 2395 0f5a 3E89      		ldd r19,Y+22
 2396 0f5c 8F81      		ldd r24,Y+7
 2397 0f5e 9885      		ldd r25,Y+8
 2398 0f60 880F      		lsl r24
 2399 0f62 991F      		rol r25
 2400 0f64 880F      		lsl r24
 2401 0f66 991F      		rol r25
 2402 0f68 280F      		add r18,r24
 2403 0f6a 391F      		adc r19,r25
 2404 0f6c 8985      		ldd r24,Y+9
 2405 0f6e 9A85      		ldd r25,Y+10
 2406 0f70 AB85      		ldd r26,Y+11
 2407 0f72 BC85      		ldd r27,Y+12
 2408 0f74 F901      		movw r30,r18
 2409 0f76 8083      		st Z,r24
 2410 0f78 9183      		std Z+1,r25
 2411 0f7a A283      		std Z+2,r26
 2412 0f7c B383      		std Z+3,r27
 263:lp_solve_5.5/lp_SOS.c ****       n++;
 2413               		.loc 1 263 0 discriminator 3
 2414 0f7e 8F81      		ldd r24,Y+7
 2415 0f80 9885      		ldd r25,Y+8
 2416 0f82 0196      		adiw r24,1
 2417 0f84 9887      		std Y+8,r25
 2418 0f86 8F83      		std Y+7,r24
 258:lp_solve_5.5/lp_SOS.c ****       lp->sos_priority[n] = group->sos_list[i]->members[j];
 2419               		.loc 1 258 0 discriminator 3
 2420 0f88 8B81      		ldd r24,Y+3
 2421 0f8a 9C81      		ldd r25,Y+4
 2422 0f8c 0196      		adiw r24,1
 2423 0f8e 9C83      		std Y+4,r25
 2424 0f90 8B83      		std Y+3,r24
 2425               	.L74:
 258:lp_solve_5.5/lp_SOS.c ****       lp->sos_priority[n] = group->sos_list[i]->members[j];
 2426               		.loc 1 258 0 is_stmt 0 discriminator 1
 2427 0f92 8D85      		ldd r24,Y+13
 2428 0f94 9E85      		ldd r25,Y+14
 2429 0f96 FC01      		movw r30,r24
 2430 0f98 2281      		ldd r18,Z+2
 2431 0f9a 3381      		ldd r19,Z+3
 2432 0f9c 8981      		ldd r24,Y+1
 2433 0f9e 9A81      		ldd r25,Y+2
 2434 0fa0 880F      		lsl r24
 2435 0fa2 991F      		rol r25
 2436 0fa4 820F      		add r24,r18
 2437 0fa6 931F      		adc r25,r19
 2438 0fa8 FC01      		movw r30,r24
 2439 0faa 8081      		ld r24,Z
 2440 0fac 9181      		ldd r25,Z+1
 2441 0fae FC01      		movw r30,r24
 2442 0fb0 2185      		ldd r18,Z+9
 2443 0fb2 3285      		ldd r19,Z+10
 2444 0fb4 8B81      		ldd r24,Y+3
 2445 0fb6 9C81      		ldd r25,Y+4
 2446 0fb8 2817      		cp r18,r24
 2447 0fba 3907      		cpc r19,r25
 2448 0fbc 04F0      		brlt .+2
 2449 0fbe 00C0      		rjmp .L75
 257:lp_solve_5.5/lp_SOS.c ****     for(j = 1; j <= group->sos_list[i]->size; j++) {
 2450               		.loc 1 257 0 is_stmt 1 discriminator 2
 2451 0fc0 8981      		ldd r24,Y+1
 2452 0fc2 9A81      		ldd r25,Y+2
 2453 0fc4 0196      		adiw r24,1
 2454 0fc6 9A83      		std Y+2,r25
 2455 0fc8 8983      		std Y+1,r24
 2456               	.L73:
 257:lp_solve_5.5/lp_SOS.c ****     for(j = 1; j <= group->sos_list[i]->size; j++) {
 2457               		.loc 1 257 0 is_stmt 0 discriminator 1
 2458 0fca 8D85      		ldd r24,Y+13
 2459 0fcc 9E85      		ldd r25,Y+14
 2460 0fce FC01      		movw r30,r24
 2461 0fd0 2681      		ldd r18,Z+6
 2462 0fd2 3781      		ldd r19,Z+7
 2463 0fd4 8981      		ldd r24,Y+1
 2464 0fd6 9A81      		ldd r25,Y+2
 2465 0fd8 8217      		cp r24,r18
 2466 0fda 9307      		cpc r25,r19
 2467 0fdc 04F4      		brge .+2
 2468 0fde 00C0      		rjmp .L76
 264:lp_solve_5.5/lp_SOS.c ****     }
 265:lp_solve_5.5/lp_SOS.c ****   }
 266:lp_solve_5.5/lp_SOS.c ****   hpsortex(order, n, 0, sizeof(*order), FALSE, compareREAL, lp->sos_priority);
 2469               		.loc 1 266 0 is_stmt 1
 2470 0fe0 8F89      		ldd r24,Y+23
 2471 0fe2 988D      		ldd r25,Y+24
 2472 0fe4 8056      		subi r24,96
 2473 0fe6 9D4F      		sbci r25,-3
 2474 0fe8 FC01      		movw r30,r24
 2475 0fea 2081      		ld r18,Z
 2476 0fec 3181      		ldd r19,Z+1
 2477 0fee 8D89      		ldd r24,Y+21
 2478 0ff0 9E89      		ldd r25,Y+22
 2479 0ff2 6F81      		ldd r22,Y+7
 2480 0ff4 7885      		ldd r23,Y+8
 2481 0ff6 6901      		movw r12,r18
 2482 0ff8 0F2E      		mov __tmp_reg__,r31
 2483 0ffa F0E0      		ldi r31,lo8(gs(compareREAL))
 2484 0ffc EF2E      		mov r14,r31
 2485 0ffe F0E0      		ldi r31,hi8(gs(compareREAL))
 2486 1000 FF2E      		mov r15,r31
 2487 1002 F02D      		mov r31,__tmp_reg__
 2488 1004 00E0      		ldi r16,0
 2489 1006 24E0      		ldi r18,lo8(4)
 2490 1008 30E0      		ldi r19,0
 2491 100a 40E0      		ldi r20,0
 2492 100c 50E0      		ldi r21,0
 2493 100e 0E94 0000 		call hpsortex
 267:lp_solve_5.5/lp_SOS.c ****   FREE(order);
 2494               		.loc 1 267 0
 2495 1012 8D89      		ldd r24,Y+21
 2496 1014 9E89      		ldd r25,Y+22
 2497 1016 892B      		or r24,r25
 2498 1018 01F0      		breq .L77
 2499               		.loc 1 267 0 is_stmt 0 discriminator 1
 2500 101a 8D89      		ldd r24,Y+21
 2501 101c 9E89      		ldd r25,Y+22
 2502 101e 0E94 0000 		call free
 2503 1022 1E8A      		std Y+22,__zero_reg__
 2504 1024 1D8A      		std Y+21,__zero_reg__
 2505               	.L77:
 268:lp_solve_5.5/lp_SOS.c **** 
 269:lp_solve_5.5/lp_SOS.c ****   /* Remove duplicate SOS variables */
 270:lp_solve_5.5/lp_SOS.c ****   allocMYBOOL(lp, &hold, lp->columns+1, TRUE);
 2506               		.loc 1 270 0 is_stmt 1
 2507 1026 8F89      		ldd r24,Y+23
 2508 1028 988D      		ldd r25,Y+24
 2509 102a 8451      		subi r24,20
 2510 102c 9E4F      		sbci r25,-2
 2511 102e FC01      		movw r30,r24
 2512 1030 8081      		ld r24,Z
 2513 1032 9181      		ldd r25,Z+1
 2514 1034 AC01      		movw r20,r24
 2515 1036 4F5F      		subi r20,-1
 2516 1038 5F4F      		sbci r21,-1
 2517 103a BE01      		movw r22,r28
 2518 103c 6D5E      		subi r22,-19
 2519 103e 7F4F      		sbci r23,-1
 2520 1040 8F89      		ldd r24,Y+23
 2521 1042 988D      		ldd r25,Y+24
 2522 1044 21E0      		ldi r18,lo8(1)
 2523 1046 0E94 0000 		call allocMYBOOL
 271:lp_solve_5.5/lp_SOS.c ****   k = 0;
 2524               		.loc 1 271 0
 2525 104a 1E82      		std Y+6,__zero_reg__
 2526 104c 1D82      		std Y+5,__zero_reg__
 272:lp_solve_5.5/lp_SOS.c ****   for(i = 0; i < n; i++) {
 2527               		.loc 1 272 0
 2528 104e 1A82      		std Y+2,__zero_reg__
 2529 1050 1982      		std Y+1,__zero_reg__
 2530 1052 00C0      		rjmp .L78
 2531               	.L81:
 273:lp_solve_5.5/lp_SOS.c ****     j = lp->sos_priority[i];
 2532               		.loc 1 273 0
 2533 1054 8F89      		ldd r24,Y+23
 2534 1056 988D      		ldd r25,Y+24
 2535 1058 8056      		subi r24,96
 2536 105a 9D4F      		sbci r25,-3
 2537 105c FC01      		movw r30,r24
 2538 105e 2081      		ld r18,Z
 2539 1060 3181      		ldd r19,Z+1
 2540 1062 8981      		ldd r24,Y+1
 2541 1064 9A81      		ldd r25,Y+2
 2542 1066 880F      		lsl r24
 2543 1068 991F      		rol r25
 2544 106a 820F      		add r24,r18
 2545 106c 931F      		adc r25,r19
 2546 106e FC01      		movw r30,r24
 2547 1070 8081      		ld r24,Z
 2548 1072 9181      		ldd r25,Z+1
 2549 1074 9C83      		std Y+4,r25
 2550 1076 8B83      		std Y+3,r24
 274:lp_solve_5.5/lp_SOS.c ****     if(!hold[j]) {
 2551               		.loc 1 274 0
 2552 1078 2B89      		ldd r18,Y+19
 2553 107a 3C89      		ldd r19,Y+20
 2554 107c 8B81      		ldd r24,Y+3
 2555 107e 9C81      		ldd r25,Y+4
 2556 1080 820F      		add r24,r18
 2557 1082 931F      		adc r25,r19
 2558 1084 FC01      		movw r30,r24
 2559 1086 8081      		ld r24,Z
 2560 1088 8823      		tst r24
 2561 108a 01F4      		brne .L79
 275:lp_solve_5.5/lp_SOS.c ****       hold[j] = TRUE;
 2562               		.loc 1 275 0
 2563 108c 2B89      		ldd r18,Y+19
 2564 108e 3C89      		ldd r19,Y+20
 2565 1090 8B81      		ldd r24,Y+3
 2566 1092 9C81      		ldd r25,Y+4
 2567 1094 820F      		add r24,r18
 2568 1096 931F      		adc r25,r19
 2569 1098 21E0      		ldi r18,lo8(1)
 2570 109a FC01      		movw r30,r24
 2571 109c 2083      		st Z,r18
 276:lp_solve_5.5/lp_SOS.c ****       if(k < i)
 2572               		.loc 1 276 0
 2573 109e 2D81      		ldd r18,Y+5
 2574 10a0 3E81      		ldd r19,Y+6
 2575 10a2 8981      		ldd r24,Y+1
 2576 10a4 9A81      		ldd r25,Y+2
 2577 10a6 2817      		cp r18,r24
 2578 10a8 3907      		cpc r19,r25
 2579 10aa 04F4      		brge .L80
 277:lp_solve_5.5/lp_SOS.c ****         lp->sos_priority[k] = j;
 2580               		.loc 1 277 0
 2581 10ac 8F89      		ldd r24,Y+23
 2582 10ae 988D      		ldd r25,Y+24
 2583 10b0 8056      		subi r24,96
 2584 10b2 9D4F      		sbci r25,-3
 2585 10b4 FC01      		movw r30,r24
 2586 10b6 2081      		ld r18,Z
 2587 10b8 3181      		ldd r19,Z+1
 2588 10ba 8D81      		ldd r24,Y+5
 2589 10bc 9E81      		ldd r25,Y+6
 2590 10be 880F      		lsl r24
 2591 10c0 991F      		rol r25
 2592 10c2 820F      		add r24,r18
 2593 10c4 931F      		adc r25,r19
 2594 10c6 2B81      		ldd r18,Y+3
 2595 10c8 3C81      		ldd r19,Y+4
 2596 10ca FC01      		movw r30,r24
 2597 10cc 3183      		std Z+1,r19
 2598 10ce 2083      		st Z,r18
 2599               	.L80:
 278:lp_solve_5.5/lp_SOS.c ****       k++;
 2600               		.loc 1 278 0
 2601 10d0 8D81      		ldd r24,Y+5
 2602 10d2 9E81      		ldd r25,Y+6
 2603 10d4 0196      		adiw r24,1
 2604 10d6 9E83      		std Y+6,r25
 2605 10d8 8D83      		std Y+5,r24
 2606               	.L79:
 272:lp_solve_5.5/lp_SOS.c ****     j = lp->sos_priority[i];
 2607               		.loc 1 272 0 discriminator 2
 2608 10da 8981      		ldd r24,Y+1
 2609 10dc 9A81      		ldd r25,Y+2
 2610 10de 0196      		adiw r24,1
 2611 10e0 9A83      		std Y+2,r25
 2612 10e2 8983      		std Y+1,r24
 2613               	.L78:
 272:lp_solve_5.5/lp_SOS.c ****     j = lp->sos_priority[i];
 2614               		.loc 1 272 0 is_stmt 0 discriminator 1
 2615 10e4 2981      		ldd r18,Y+1
 2616 10e6 3A81      		ldd r19,Y+2
 2617 10e8 8F81      		ldd r24,Y+7
 2618 10ea 9885      		ldd r25,Y+8
 2619 10ec 2817      		cp r18,r24
 2620 10ee 3907      		cpc r19,r25
 2621 10f0 04F4      		brge .+2
 2622 10f2 00C0      		rjmp .L81
 279:lp_solve_5.5/lp_SOS.c ****     }
 280:lp_solve_5.5/lp_SOS.c ****   }
 281:lp_solve_5.5/lp_SOS.c ****   FREE(hold);
 2623               		.loc 1 281 0 is_stmt 1
 2624 10f4 8B89      		ldd r24,Y+19
 2625 10f6 9C89      		ldd r25,Y+20
 2626 10f8 892B      		or r24,r25
 2627 10fa 01F0      		breq .L82
 2628               		.loc 1 281 0 is_stmt 0 discriminator 1
 2629 10fc 8B89      		ldd r24,Y+19
 2630 10fe 9C89      		ldd r25,Y+20
 2631 1100 0E94 0000 		call free
 2632 1104 1C8A      		std Y+20,__zero_reg__
 2633 1106 1B8A      		std Y+19,__zero_reg__
 2634               	.L82:
 282:lp_solve_5.5/lp_SOS.c **** 
 283:lp_solve_5.5/lp_SOS.c ****   /* Adjust the size of the master variable list, if necessary */
 284:lp_solve_5.5/lp_SOS.c ****   if(k < lp->sos_vars) {
 2635               		.loc 1 284 0 is_stmt 1
 2636 1108 8F89      		ldd r24,Y+23
 2637 110a 988D      		ldd r25,Y+24
 2638 110c 8656      		subi r24,102
 2639 110e 9D4F      		sbci r25,-3
 2640 1110 FC01      		movw r30,r24
 2641 1112 2081      		ld r18,Z
 2642 1114 3181      		ldd r19,Z+1
 2643 1116 8D81      		ldd r24,Y+5
 2644 1118 9E81      		ldd r25,Y+6
 2645 111a 8217      		cp r24,r18
 2646 111c 9307      		cpc r25,r19
 2647 111e 04F4      		brge .L83
 285:lp_solve_5.5/lp_SOS.c ****     allocINT(lp, &lp->sos_priority, k, AUTOMATIC);
 2648               		.loc 1 285 0
 2649 1120 8F89      		ldd r24,Y+23
 2650 1122 988D      		ldd r25,Y+24
 2651 1124 BC01      		movw r22,r24
 2652 1126 6056      		subi r22,96
 2653 1128 7D4F      		sbci r23,-3
 2654 112a 4D81      		ldd r20,Y+5
 2655 112c 5E81      		ldd r21,Y+6
 2656 112e 8F89      		ldd r24,Y+23
 2657 1130 988D      		ldd r25,Y+24
 2658 1132 22E0      		ldi r18,lo8(2)
 2659 1134 0E94 0000 		call allocINT
 286:lp_solve_5.5/lp_SOS.c ****     lp->sos_vars = k;
 2660               		.loc 1 286 0
 2661 1138 8F89      		ldd r24,Y+23
 2662 113a 988D      		ldd r25,Y+24
 2663 113c 8656      		subi r24,102
 2664 113e 9D4F      		sbci r25,-3
 2665 1140 2D81      		ldd r18,Y+5
 2666 1142 3E81      		ldd r19,Y+6
 2667 1144 FC01      		movw r30,r24
 2668 1146 3183      		std Z+1,r19
 2669 1148 2083      		st Z,r18
 2670               	.L83:
 287:lp_solve_5.5/lp_SOS.c ****   }
 288:lp_solve_5.5/lp_SOS.c **** 
 289:lp_solve_5.5/lp_SOS.c ****   return( k );
 2671               		.loc 1 289 0
 2672 114a 8D81      		ldd r24,Y+5
 2673 114c 9E81      		ldd r25,Y+6
 2674               	/* epilogue start */
 290:lp_solve_5.5/lp_SOS.c **** 
 291:lp_solve_5.5/lp_SOS.c **** }
 2675               		.loc 1 291 0
 2676 114e 6996      		adiw r28,25
 2677 1150 0FB6      		in __tmp_reg__,__SREG__
 2678 1152 F894      		cli
 2679 1154 DEBF      		out __SP_H__,r29
 2680 1156 0FBE      		out __SREG__,__tmp_reg__
 2681 1158 CDBF      		out __SP_L__,r28
 2682 115a DF91      		pop r29
 2683 115c CF91      		pop r28
 2684 115e 0F91      		pop r16
 2685 1160 FF90      		pop r15
 2686 1162 EF90      		pop r14
 2687 1164 DF90      		pop r13
 2688 1166 CF90      		pop r12
 2689 1168 0895      		ret
 2690               		.cfi_endproc
 2691               	.LFE14:
 2693               	.global	delete_SOSrec
 2695               	delete_SOSrec:
 2696               	.LFB15:
 292:lp_solve_5.5/lp_SOS.c **** 
 293:lp_solve_5.5/lp_SOS.c **** 
 294:lp_solve_5.5/lp_SOS.c **** STATIC MYBOOL delete_SOSrec(SOSgroup *group, int sosindex)
 295:lp_solve_5.5/lp_SOS.c **** {
 2697               		.loc 1 295 0
 2698               		.cfi_startproc
 2699 116a CF93      		push r28
 2700               	.LCFI45:
 2701               		.cfi_def_cfa_offset 3
 2702               		.cfi_offset 28, -2
 2703 116c DF93      		push r29
 2704               	.LCFI46:
 2705               		.cfi_def_cfa_offset 4
 2706               		.cfi_offset 29, -3
 2707 116e 00D0      		rcall .
 2708 1170 00D0      		rcall .
 2709               	.LCFI47:
 2710               		.cfi_def_cfa_offset 8
 2711 1172 CDB7      		in r28,__SP_L__
 2712 1174 DEB7      		in r29,__SP_H__
 2713               	.LCFI48:
 2714               		.cfi_def_cfa_register 28
 2715               	/* prologue: function */
 2716               	/* frame size = 4 */
 2717               	/* stack size = 6 */
 2718               	.L__stack_usage = 6
 2719 1176 9A83      		std Y+2,r25
 2720 1178 8983      		std Y+1,r24
 2721 117a 7C83      		std Y+4,r23
 2722 117c 6B83      		std Y+3,r22
 296:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
 297:lp_solve_5.5/lp_SOS.c ****   if((sosindex <= 0) || (sosindex > group->sos_count)) {
 298:lp_solve_5.5/lp_SOS.c ****     report(group->lp, IMPORTANT, "delete_SOSrec: Invalid SOS index %d\n", sosindex);
 299:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 300:lp_solve_5.5/lp_SOS.c ****   }
 301:lp_solve_5.5/lp_SOS.c **** #endif
 302:lp_solve_5.5/lp_SOS.c **** 
 303:lp_solve_5.5/lp_SOS.c ****   /* Delete and free the SOS record */
 304:lp_solve_5.5/lp_SOS.c ****   if(abs(SOS_get_type(group, sosindex)) == 1)
 2723               		.loc 1 304 0
 2724 117e 2B81      		ldd r18,Y+3
 2725 1180 3C81      		ldd r19,Y+4
 2726 1182 8981      		ldd r24,Y+1
 2727 1184 9A81      		ldd r25,Y+2
 2728 1186 B901      		movw r22,r18
 2729 1188 0E94 0000 		call SOS_get_type
 2730 118c 9923      		tst r25
 2731 118e 04F4      		brge .L86
 2732 1190 9195      		neg r25
 2733 1192 8195      		neg r24
 2734 1194 9109      		sbc r25,__zero_reg__
 2735               	.L86:
 2736 1196 0197      		sbiw r24,1
 2737 1198 01F4      		brne .L87
 305:lp_solve_5.5/lp_SOS.c ****     group->sos1_count--;
 2738               		.loc 1 305 0
 2739 119a 8981      		ldd r24,Y+1
 2740 119c 9A81      		ldd r25,Y+2
 2741 119e FC01      		movw r30,r24
 2742 11a0 8285      		ldd r24,Z+10
 2743 11a2 9385      		ldd r25,Z+11
 2744 11a4 9C01      		movw r18,r24
 2745 11a6 2150      		subi r18,1
 2746 11a8 3109      		sbc r19,__zero_reg__
 2747 11aa 8981      		ldd r24,Y+1
 2748 11ac 9A81      		ldd r25,Y+2
 2749 11ae FC01      		movw r30,r24
 2750 11b0 3387      		std Z+11,r19
 2751 11b2 2287      		std Z+10,r18
 2752               	.L87:
 306:lp_solve_5.5/lp_SOS.c ****   free_SOSrec(group->sos_list[sosindex-1]);
 2753               		.loc 1 306 0
 2754 11b4 8981      		ldd r24,Y+1
 2755 11b6 9A81      		ldd r25,Y+2
 2756 11b8 FC01      		movw r30,r24
 2757 11ba 2281      		ldd r18,Z+2
 2758 11bc 3381      		ldd r19,Z+3
 2759 11be 8B81      		ldd r24,Y+3
 2760 11c0 9C81      		ldd r25,Y+4
 2761 11c2 8150      		subi r24,1
 2762 11c4 9048      		sbci r25,-128
 2763 11c6 880F      		lsl r24
 2764 11c8 991F      		rol r25
 2765 11ca 820F      		add r24,r18
 2766 11cc 931F      		adc r25,r19
 2767 11ce FC01      		movw r30,r24
 2768 11d0 8081      		ld r24,Z
 2769 11d2 9181      		ldd r25,Z+1
 2770 11d4 0E94 0000 		call free_SOSrec
 307:lp_solve_5.5/lp_SOS.c ****   while(sosindex < group->sos_count) {
 2771               		.loc 1 307 0
 2772 11d8 00C0      		rjmp .L88
 2773               	.L89:
 308:lp_solve_5.5/lp_SOS.c ****     group->sos_list[sosindex-1] = group->sos_list[sosindex];
 2774               		.loc 1 308 0
 2775 11da 8981      		ldd r24,Y+1
 2776 11dc 9A81      		ldd r25,Y+2
 2777 11de FC01      		movw r30,r24
 2778 11e0 2281      		ldd r18,Z+2
 2779 11e2 3381      		ldd r19,Z+3
 2780 11e4 8B81      		ldd r24,Y+3
 2781 11e6 9C81      		ldd r25,Y+4
 2782 11e8 8150      		subi r24,1
 2783 11ea 9048      		sbci r25,-128
 2784 11ec 880F      		lsl r24
 2785 11ee 991F      		rol r25
 2786 11f0 820F      		add r24,r18
 2787 11f2 931F      		adc r25,r19
 2788 11f4 2981      		ldd r18,Y+1
 2789 11f6 3A81      		ldd r19,Y+2
 2790 11f8 F901      		movw r30,r18
 2791 11fa 4281      		ldd r20,Z+2
 2792 11fc 5381      		ldd r21,Z+3
 2793 11fe 2B81      		ldd r18,Y+3
 2794 1200 3C81      		ldd r19,Y+4
 2795 1202 220F      		lsl r18
 2796 1204 331F      		rol r19
 2797 1206 240F      		add r18,r20
 2798 1208 351F      		adc r19,r21
 2799 120a F901      		movw r30,r18
 2800 120c 2081      		ld r18,Z
 2801 120e 3181      		ldd r19,Z+1
 2802 1210 FC01      		movw r30,r24
 2803 1212 3183      		std Z+1,r19
 2804 1214 2083      		st Z,r18
 309:lp_solve_5.5/lp_SOS.c ****     sosindex++;
 2805               		.loc 1 309 0
 2806 1216 8B81      		ldd r24,Y+3
 2807 1218 9C81      		ldd r25,Y+4
 2808 121a 0196      		adiw r24,1
 2809 121c 9C83      		std Y+4,r25
 2810 121e 8B83      		std Y+3,r24
 2811               	.L88:
 307:lp_solve_5.5/lp_SOS.c ****   while(sosindex < group->sos_count) {
 2812               		.loc 1 307 0
 2813 1220 8981      		ldd r24,Y+1
 2814 1222 9A81      		ldd r25,Y+2
 2815 1224 FC01      		movw r30,r24
 2816 1226 2681      		ldd r18,Z+6
 2817 1228 3781      		ldd r19,Z+7
 2818 122a 8B81      		ldd r24,Y+3
 2819 122c 9C81      		ldd r25,Y+4
 2820 122e 8217      		cp r24,r18
 2821 1230 9307      		cpc r25,r19
 2822 1232 04F0      		brlt .L89
 310:lp_solve_5.5/lp_SOS.c ****   }
 311:lp_solve_5.5/lp_SOS.c ****   group->sos_count--;
 2823               		.loc 1 311 0
 2824 1234 8981      		ldd r24,Y+1
 2825 1236 9A81      		ldd r25,Y+2
 2826 1238 FC01      		movw r30,r24
 2827 123a 8681      		ldd r24,Z+6
 2828 123c 9781      		ldd r25,Z+7
 2829 123e 9C01      		movw r18,r24
 2830 1240 2150      		subi r18,1
 2831 1242 3109      		sbc r19,__zero_reg__
 2832 1244 8981      		ldd r24,Y+1
 2833 1246 9A81      		ldd r25,Y+2
 2834 1248 FC01      		movw r30,r24
 2835 124a 3783      		std Z+7,r19
 2836 124c 2683      		std Z+6,r18
 312:lp_solve_5.5/lp_SOS.c **** 
 313:lp_solve_5.5/lp_SOS.c ****   /* Update maxorder */
 314:lp_solve_5.5/lp_SOS.c ****   group->maxorder = 0;
 2837               		.loc 1 314 0
 2838 124e 8981      		ldd r24,Y+1
 2839 1250 9A81      		ldd r25,Y+2
 2840 1252 FC01      		movw r30,r24
 2841 1254 1186      		std Z+9,__zero_reg__
 2842 1256 1086      		std Z+8,__zero_reg__
 315:lp_solve_5.5/lp_SOS.c ****   for(sosindex = 0; sosindex < group->sos_count; sosindex++) {
 2843               		.loc 1 315 0
 2844 1258 1C82      		std Y+4,__zero_reg__
 2845 125a 1B82      		std Y+3,__zero_reg__
 2846 125c 00C0      		rjmp .L90
 2847               	.L94:
 316:lp_solve_5.5/lp_SOS.c ****     SETMAX(group->maxorder, abs(group->sos_list[sosindex]->type));
 2848               		.loc 1 316 0
 2849 125e 8981      		ldd r24,Y+1
 2850 1260 9A81      		ldd r25,Y+2
 2851 1262 FC01      		movw r30,r24
 2852 1264 2085      		ldd r18,Z+8
 2853 1266 3185      		ldd r19,Z+9
 2854 1268 8981      		ldd r24,Y+1
 2855 126a 9A81      		ldd r25,Y+2
 2856 126c FC01      		movw r30,r24
 2857 126e 4281      		ldd r20,Z+2
 2858 1270 5381      		ldd r21,Z+3
 2859 1272 8B81      		ldd r24,Y+3
 2860 1274 9C81      		ldd r25,Y+4
 2861 1276 880F      		lsl r24
 2862 1278 991F      		rol r25
 2863 127a 840F      		add r24,r20
 2864 127c 951F      		adc r25,r21
 2865 127e FC01      		movw r30,r24
 2866 1280 8081      		ld r24,Z
 2867 1282 9181      		ldd r25,Z+1
 2868 1284 FC01      		movw r30,r24
 2869 1286 8681      		ldd r24,Z+6
 2870 1288 9781      		ldd r25,Z+7
 2871 128a 9923      		tst r25
 2872 128c 04F4      		brge .L91
 2873 128e 9195      		neg r25
 2874 1290 8195      		neg r24
 2875 1292 9109      		sbc r25,__zero_reg__
 2876               	.L91:
 2877 1294 2817      		cp r18,r24
 2878 1296 3907      		cpc r19,r25
 2879 1298 04F4      		brge .L92
 2880               		.loc 1 316 0 is_stmt 0 discriminator 1
 2881 129a 8981      		ldd r24,Y+1
 2882 129c 9A81      		ldd r25,Y+2
 2883 129e FC01      		movw r30,r24
 2884 12a0 2281      		ldd r18,Z+2
 2885 12a2 3381      		ldd r19,Z+3
 2886 12a4 8B81      		ldd r24,Y+3
 2887 12a6 9C81      		ldd r25,Y+4
 2888 12a8 880F      		lsl r24
 2889 12aa 991F      		rol r25
 2890 12ac 820F      		add r24,r18
 2891 12ae 931F      		adc r25,r19
 2892 12b0 FC01      		movw r30,r24
 2893 12b2 8081      		ld r24,Z
 2894 12b4 9181      		ldd r25,Z+1
 2895 12b6 FC01      		movw r30,r24
 2896 12b8 8681      		ldd r24,Z+6
 2897 12ba 9781      		ldd r25,Z+7
 2898 12bc 9923      		tst r25
 2899 12be 04F4      		brge .L93
 2900 12c0 9195      		neg r25
 2901 12c2 8195      		neg r24
 2902 12c4 9109      		sbc r25,__zero_reg__
 2903               	.L93:
 2904 12c6 9C01      		movw r18,r24
 2905 12c8 8981      		ldd r24,Y+1
 2906 12ca 9A81      		ldd r25,Y+2
 2907 12cc FC01      		movw r30,r24
 2908 12ce 3187      		std Z+9,r19
 2909 12d0 2087      		std Z+8,r18
 2910               	.L92:
 315:lp_solve_5.5/lp_SOS.c ****   for(sosindex = 0; sosindex < group->sos_count; sosindex++) {
 2911               		.loc 1 315 0 is_stmt 1 discriminator 2
 2912 12d2 8B81      		ldd r24,Y+3
 2913 12d4 9C81      		ldd r25,Y+4
 2914 12d6 0196      		adiw r24,1
 2915 12d8 9C83      		std Y+4,r25
 2916 12da 8B83      		std Y+3,r24
 2917               	.L90:
 315:lp_solve_5.5/lp_SOS.c ****   for(sosindex = 0; sosindex < group->sos_count; sosindex++) {
 2918               		.loc 1 315 0 is_stmt 0 discriminator 1
 2919 12dc 8981      		ldd r24,Y+1
 2920 12de 9A81      		ldd r25,Y+2
 2921 12e0 FC01      		movw r30,r24
 2922 12e2 2681      		ldd r18,Z+6
 2923 12e4 3781      		ldd r19,Z+7
 2924 12e6 8B81      		ldd r24,Y+3
 2925 12e8 9C81      		ldd r25,Y+4
 2926 12ea 8217      		cp r24,r18
 2927 12ec 9307      		cpc r25,r19
 2928 12ee 04F4      		brge .+2
 2929 12f0 00C0      		rjmp .L94
 317:lp_solve_5.5/lp_SOS.c ****   }
 318:lp_solve_5.5/lp_SOS.c **** 
 319:lp_solve_5.5/lp_SOS.c ****   return(TRUE);
 2930               		.loc 1 319 0 is_stmt 1
 2931 12f2 81E0      		ldi r24,lo8(1)
 2932               	/* epilogue start */
 320:lp_solve_5.5/lp_SOS.c **** }
 2933               		.loc 1 320 0
 2934 12f4 0F90      		pop __tmp_reg__
 2935 12f6 0F90      		pop __tmp_reg__
 2936 12f8 0F90      		pop __tmp_reg__
 2937 12fa 0F90      		pop __tmp_reg__
 2938 12fc DF91      		pop r29
 2939 12fe CF91      		pop r28
 2940 1300 0895      		ret
 2941               		.cfi_endproc
 2942               	.LFE15:
 2944               	.global	free_SOSrec
 2946               	free_SOSrec:
 2947               	.LFB16:
 321:lp_solve_5.5/lp_SOS.c **** 
 322:lp_solve_5.5/lp_SOS.c **** 
 323:lp_solve_5.5/lp_SOS.c **** STATIC void free_SOSrec(SOSrec *SOS)
 324:lp_solve_5.5/lp_SOS.c **** {
 2948               		.loc 1 324 0
 2949               		.cfi_startproc
 2950 1302 CF93      		push r28
 2951               	.LCFI49:
 2952               		.cfi_def_cfa_offset 3
 2953               		.cfi_offset 28, -2
 2954 1304 DF93      		push r29
 2955               	.LCFI50:
 2956               		.cfi_def_cfa_offset 4
 2957               		.cfi_offset 29, -3
 2958 1306 00D0      		rcall .
 2959               	.LCFI51:
 2960               		.cfi_def_cfa_offset 6
 2961 1308 CDB7      		in r28,__SP_L__
 2962 130a DEB7      		in r29,__SP_H__
 2963               	.LCFI52:
 2964               		.cfi_def_cfa_register 28
 2965               	/* prologue: function */
 2966               	/* frame size = 2 */
 2967               	/* stack size = 4 */
 2968               	.L__stack_usage = 4
 2969 130c 9A83      		std Y+2,r25
 2970 130e 8983      		std Y+1,r24
 325:lp_solve_5.5/lp_SOS.c ****   if(SOS->name != NULL)
 2971               		.loc 1 325 0
 2972 1310 8981      		ldd r24,Y+1
 2973 1312 9A81      		ldd r25,Y+2
 2974 1314 FC01      		movw r30,r24
 2975 1316 8481      		ldd r24,Z+4
 2976 1318 9581      		ldd r25,Z+5
 2977 131a 892B      		or r24,r25
 2978 131c 01F0      		breq .L97
 326:lp_solve_5.5/lp_SOS.c ****     FREE(SOS->name);
 2979               		.loc 1 326 0
 2980 131e 8981      		ldd r24,Y+1
 2981 1320 9A81      		ldd r25,Y+2
 2982 1322 FC01      		movw r30,r24
 2983 1324 8481      		ldd r24,Z+4
 2984 1326 9581      		ldd r25,Z+5
 2985 1328 892B      		or r24,r25
 2986 132a 01F0      		breq .L97
 2987               		.loc 1 326 0 is_stmt 0 discriminator 1
 2988 132c 8981      		ldd r24,Y+1
 2989 132e 9A81      		ldd r25,Y+2
 2990 1330 FC01      		movw r30,r24
 2991 1332 8481      		ldd r24,Z+4
 2992 1334 9581      		ldd r25,Z+5
 2993 1336 0E94 0000 		call free
 2994 133a 8981      		ldd r24,Y+1
 2995 133c 9A81      		ldd r25,Y+2
 2996 133e FC01      		movw r30,r24
 2997 1340 1582      		std Z+5,__zero_reg__
 2998 1342 1482      		std Z+4,__zero_reg__
 2999               	.L97:
 327:lp_solve_5.5/lp_SOS.c ****   if(SOS->size > 0) {
 3000               		.loc 1 327 0 is_stmt 1
 3001 1344 8981      		ldd r24,Y+1
 3002 1346 9A81      		ldd r25,Y+2
 3003 1348 FC01      		movw r30,r24
 3004 134a 8185      		ldd r24,Z+9
 3005 134c 9285      		ldd r25,Z+10
 3006 134e 1816      		cp __zero_reg__,r24
 3007 1350 1906      		cpc __zero_reg__,r25
 3008 1352 04F0      		brlt .+2
 3009 1354 00C0      		rjmp .L98
 328:lp_solve_5.5/lp_SOS.c ****     FREE(SOS->members);
 3010               		.loc 1 328 0
 3011 1356 8981      		ldd r24,Y+1
 3012 1358 9A81      		ldd r25,Y+2
 3013 135a FC01      		movw r30,r24
 3014 135c 8585      		ldd r24,Z+13
 3015 135e 9685      		ldd r25,Z+14
 3016 1360 892B      		or r24,r25
 3017 1362 01F0      		breq .L99
 3018               		.loc 1 328 0 is_stmt 0 discriminator 1
 3019 1364 8981      		ldd r24,Y+1
 3020 1366 9A81      		ldd r25,Y+2
 3021 1368 FC01      		movw r30,r24
 3022 136a 8585      		ldd r24,Z+13
 3023 136c 9685      		ldd r25,Z+14
 3024 136e 0E94 0000 		call free
 3025 1372 8981      		ldd r24,Y+1
 3026 1374 9A81      		ldd r25,Y+2
 3027 1376 FC01      		movw r30,r24
 3028 1378 1686      		std Z+14,__zero_reg__
 3029 137a 1586      		std Z+13,__zero_reg__
 3030               	.L99:
 329:lp_solve_5.5/lp_SOS.c ****     FREE(SOS->weights);
 3031               		.loc 1 329 0 is_stmt 1
 3032 137c 8981      		ldd r24,Y+1
 3033 137e 9A81      		ldd r25,Y+2
 3034 1380 FC01      		movw r30,r24
 3035 1382 8785      		ldd r24,Z+15
 3036 1384 9089      		ldd r25,Z+16
 3037 1386 892B      		or r24,r25
 3038 1388 01F0      		breq .L100
 3039               		.loc 1 329 0 is_stmt 0 discriminator 1
 3040 138a 8981      		ldd r24,Y+1
 3041 138c 9A81      		ldd r25,Y+2
 3042 138e FC01      		movw r30,r24
 3043 1390 8785      		ldd r24,Z+15
 3044 1392 9089      		ldd r25,Z+16
 3045 1394 0E94 0000 		call free
 3046 1398 8981      		ldd r24,Y+1
 3047 139a 9A81      		ldd r25,Y+2
 3048 139c FC01      		movw r30,r24
 3049 139e 108A      		std Z+16,__zero_reg__
 3050 13a0 1786      		std Z+15,__zero_reg__
 3051               	.L100:
 330:lp_solve_5.5/lp_SOS.c ****     FREE(SOS->membersSorted);
 3052               		.loc 1 330 0 is_stmt 1
 3053 13a2 8981      		ldd r24,Y+1
 3054 13a4 9A81      		ldd r25,Y+2
 3055 13a6 FC01      		movw r30,r24
 3056 13a8 8189      		ldd r24,Z+17
 3057 13aa 9289      		ldd r25,Z+18
 3058 13ac 892B      		or r24,r25
 3059 13ae 01F0      		breq .L101
 3060               		.loc 1 330 0 is_stmt 0 discriminator 1
 3061 13b0 8981      		ldd r24,Y+1
 3062 13b2 9A81      		ldd r25,Y+2
 3063 13b4 FC01      		movw r30,r24
 3064 13b6 8189      		ldd r24,Z+17
 3065 13b8 9289      		ldd r25,Z+18
 3066 13ba 0E94 0000 		call free
 3067 13be 8981      		ldd r24,Y+1
 3068 13c0 9A81      		ldd r25,Y+2
 3069 13c2 FC01      		movw r30,r24
 3070 13c4 128A      		std Z+18,__zero_reg__
 3071 13c6 118A      		std Z+17,__zero_reg__
 3072               	.L101:
 331:lp_solve_5.5/lp_SOS.c ****     FREE(SOS->membersMapped);
 3073               		.loc 1 331 0 is_stmt 1
 3074 13c8 8981      		ldd r24,Y+1
 3075 13ca 9A81      		ldd r25,Y+2
 3076 13cc FC01      		movw r30,r24
 3077 13ce 8389      		ldd r24,Z+19
 3078 13d0 9489      		ldd r25,Z+20
 3079 13d2 892B      		or r24,r25
 3080 13d4 01F0      		breq .L98
 3081               		.loc 1 331 0 is_stmt 0 discriminator 1
 3082 13d6 8981      		ldd r24,Y+1
 3083 13d8 9A81      		ldd r25,Y+2
 3084 13da FC01      		movw r30,r24
 3085 13dc 8389      		ldd r24,Z+19
 3086 13de 9489      		ldd r25,Z+20
 3087 13e0 0E94 0000 		call free
 3088 13e4 8981      		ldd r24,Y+1
 3089 13e6 9A81      		ldd r25,Y+2
 3090 13e8 FC01      		movw r30,r24
 3091 13ea 148A      		std Z+20,__zero_reg__
 3092 13ec 138A      		std Z+19,__zero_reg__
 3093               	.L98:
 332:lp_solve_5.5/lp_SOS.c ****   }
 333:lp_solve_5.5/lp_SOS.c ****   FREE(SOS);
 3094               		.loc 1 333 0 is_stmt 1
 3095 13ee 8981      		ldd r24,Y+1
 3096 13f0 9A81      		ldd r25,Y+2
 3097 13f2 892B      		or r24,r25
 3098 13f4 01F0      		breq .L103
 3099               		.loc 1 333 0 is_stmt 0 discriminator 1
 3100 13f6 8981      		ldd r24,Y+1
 3101 13f8 9A81      		ldd r25,Y+2
 3102 13fa 0E94 0000 		call free
 3103 13fe 1A82      		std Y+2,__zero_reg__
 3104 1400 1982      		std Y+1,__zero_reg__
 3105               	.L103:
 334:lp_solve_5.5/lp_SOS.c **** }
 3106               		.loc 1 334 0 is_stmt 1
 3107 1402 0000      		nop
 3108               	/* epilogue start */
 3109 1404 0F90      		pop __tmp_reg__
 3110 1406 0F90      		pop __tmp_reg__
 3111 1408 DF91      		pop r29
 3112 140a CF91      		pop r28
 3113 140c 0895      		ret
 3114               		.cfi_endproc
 3115               	.LFE16:
 3117               	.global	SOS_member_sortlist
 3119               	SOS_member_sortlist:
 3120               	.LFB17:
 335:lp_solve_5.5/lp_SOS.c **** 
 336:lp_solve_5.5/lp_SOS.c **** 
 337:lp_solve_5.5/lp_SOS.c **** STATIC MYBOOL SOS_member_sortlist(SOSgroup *group, int sosindex)
 338:lp_solve_5.5/lp_SOS.c **** /* Routine to (re-)sort SOS member arrays for faster access to large SOSes */
 339:lp_solve_5.5/lp_SOS.c **** {
 3121               		.loc 1 339 0
 3122               		.cfi_startproc
 3123 140e 0F93      		push r16
 3124               	.LCFI53:
 3125               		.cfi_def_cfa_offset 3
 3126               		.cfi_offset 16, -2
 3127 1410 CF93      		push r28
 3128               	.LCFI54:
 3129               		.cfi_def_cfa_offset 4
 3130               		.cfi_offset 28, -3
 3131 1412 DF93      		push r29
 3132               	.LCFI55:
 3133               		.cfi_def_cfa_offset 5
 3134               		.cfi_offset 29, -4
 3135 1414 CDB7      		in r28,__SP_L__
 3136 1416 DEB7      		in r29,__SP_H__
 3137               	.LCFI56:
 3138               		.cfi_def_cfa_register 28
 3139 1418 2E97      		sbiw r28,14
 3140               	.LCFI57:
 3141               		.cfi_def_cfa_offset 19
 3142 141a 0FB6      		in __tmp_reg__,__SREG__
 3143 141c F894      		cli
 3144 141e DEBF      		out __SP_H__,r29
 3145 1420 0FBE      		out __SREG__,__tmp_reg__
 3146 1422 CDBF      		out __SP_L__,r28
 3147               	/* prologue: function */
 3148               	/* frame size = 14 */
 3149               	/* stack size = 17 */
 3150               	.L__stack_usage = 17
 3151 1424 9C87      		std Y+12,r25
 3152 1426 8B87      		std Y+11,r24
 3153 1428 7E87      		std Y+14,r23
 3154 142a 6D87      		std Y+13,r22
 340:lp_solve_5.5/lp_SOS.c ****   int    i, n;
 341:lp_solve_5.5/lp_SOS.c ****   int    *list;
 342:lp_solve_5.5/lp_SOS.c ****   lprec  *lp = group->lp;
 3155               		.loc 1 342 0
 3156 142c 8B85      		ldd r24,Y+11
 3157 142e 9C85      		ldd r25,Y+12
 3158 1430 FC01      		movw r30,r24
 3159 1432 8081      		ld r24,Z
 3160 1434 9181      		ldd r25,Z+1
 3161 1436 9C83      		std Y+4,r25
 3162 1438 8B83      		std Y+3,r24
 343:lp_solve_5.5/lp_SOS.c ****   SOSrec *SOS;
 344:lp_solve_5.5/lp_SOS.c **** 
 345:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
 346:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
 347:lp_solve_5.5/lp_SOS.c ****     report(lp, IMPORTANT, "SOS_member_sortlist: Invalid SOS index %d\n", sosindex);
 348:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 349:lp_solve_5.5/lp_SOS.c ****   }
 350:lp_solve_5.5/lp_SOS.c **** #endif
 351:lp_solve_5.5/lp_SOS.c **** 
 352:lp_solve_5.5/lp_SOS.c ****   if((sosindex == 0) && (group->sos_count == 1))
 3163               		.loc 1 352 0
 3164 143a 8D85      		ldd r24,Y+13
 3165 143c 9E85      		ldd r25,Y+14
 3166 143e 892B      		or r24,r25
 3167 1440 01F4      		brne .L105
 3168               		.loc 1 352 0 is_stmt 0 discriminator 1
 3169 1442 8B85      		ldd r24,Y+11
 3170 1444 9C85      		ldd r25,Y+12
 3171 1446 FC01      		movw r30,r24
 3172 1448 8681      		ldd r24,Z+6
 3173 144a 9781      		ldd r25,Z+7
 3174 144c 0197      		sbiw r24,1
 3175 144e 01F4      		brne .L105
 353:lp_solve_5.5/lp_SOS.c ****     sosindex = 1;
 3176               		.loc 1 353 0 is_stmt 1
 3177 1450 81E0      		ldi r24,lo8(1)
 3178 1452 90E0      		ldi r25,0
 3179 1454 9E87      		std Y+14,r25
 3180 1456 8D87      		std Y+13,r24
 3181               	.L105:
 354:lp_solve_5.5/lp_SOS.c **** 
 355:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0) {
 3182               		.loc 1 355 0
 3183 1458 8D85      		ldd r24,Y+13
 3184 145a 9E85      		ldd r25,Y+14
 3185 145c 892B      		or r24,r25
 3186 145e 01F4      		brne .L106
 356:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++) {
 3187               		.loc 1 356 0
 3188 1460 81E0      		ldi r24,lo8(1)
 3189 1462 90E0      		ldi r25,0
 3190 1464 9A83      		std Y+2,r25
 3191 1466 8983      		std Y+1,r24
 3192 1468 00C0      		rjmp .L107
 3193               	.L110:
 357:lp_solve_5.5/lp_SOS.c ****       if(!SOS_member_sortlist(group, i))
 3194               		.loc 1 357 0
 3195 146a 2981      		ldd r18,Y+1
 3196 146c 3A81      		ldd r19,Y+2
 3197 146e 8B85      		ldd r24,Y+11
 3198 1470 9C85      		ldd r25,Y+12
 3199 1472 B901      		movw r22,r18
 3200 1474 0E94 0000 		call SOS_member_sortlist
 3201 1478 8823      		tst r24
 3202 147a 01F4      		brne .L108
 358:lp_solve_5.5/lp_SOS.c ****         return(FALSE);
 3203               		.loc 1 358 0
 3204 147c 80E0      		ldi r24,0
 3205 147e 00C0      		rjmp .L109
 3206               	.L108:
 356:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++) {
 3207               		.loc 1 356 0 discriminator 2
 3208 1480 8981      		ldd r24,Y+1
 3209 1482 9A81      		ldd r25,Y+2
 3210 1484 0196      		adiw r24,1
 3211 1486 9A83      		std Y+2,r25
 3212 1488 8983      		std Y+1,r24
 3213               	.L107:
 356:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++) {
 3214               		.loc 1 356 0 is_stmt 0 discriminator 1
 3215 148a 8B85      		ldd r24,Y+11
 3216 148c 9C85      		ldd r25,Y+12
 3217 148e FC01      		movw r30,r24
 3218 1490 2681      		ldd r18,Z+6
 3219 1492 3781      		ldd r19,Z+7
 3220 1494 8981      		ldd r24,Y+1
 3221 1496 9A81      		ldd r25,Y+2
 3222 1498 2817      		cp r18,r24
 3223 149a 3907      		cpc r19,r25
 3224 149c 04F4      		brge .L110
 3225 149e 00C0      		rjmp .L111
 3226               	.L106:
 359:lp_solve_5.5/lp_SOS.c ****     }
 360:lp_solve_5.5/lp_SOS.c ****   }
 361:lp_solve_5.5/lp_SOS.c ****   else {
 362:lp_solve_5.5/lp_SOS.c ****     SOS = group->sos_list[sosindex-1];
 3227               		.loc 1 362 0 is_stmt 1
 3228 14a0 8B85      		ldd r24,Y+11
 3229 14a2 9C85      		ldd r25,Y+12
 3230 14a4 FC01      		movw r30,r24
 3231 14a6 2281      		ldd r18,Z+2
 3232 14a8 3381      		ldd r19,Z+3
 3233 14aa 8D85      		ldd r24,Y+13
 3234 14ac 9E85      		ldd r25,Y+14
 3235 14ae 8150      		subi r24,1
 3236 14b0 9048      		sbci r25,-128
 3237 14b2 880F      		lsl r24
 3238 14b4 991F      		rol r25
 3239 14b6 820F      		add r24,r18
 3240 14b8 931F      		adc r25,r19
 3241 14ba FC01      		movw r30,r24
 3242 14bc 8081      		ld r24,Z
 3243 14be 9181      		ldd r25,Z+1
 3244 14c0 9E83      		std Y+6,r25
 3245 14c2 8D83      		std Y+5,r24
 363:lp_solve_5.5/lp_SOS.c ****     list = SOS->members;
 3246               		.loc 1 363 0
 3247 14c4 8D81      		ldd r24,Y+5
 3248 14c6 9E81      		ldd r25,Y+6
 3249 14c8 FC01      		movw r30,r24
 3250 14ca 8585      		ldd r24,Z+13
 3251 14cc 9685      		ldd r25,Z+14
 3252 14ce 9887      		std Y+8,r25
 3253 14d0 8F83      		std Y+7,r24
 364:lp_solve_5.5/lp_SOS.c ****     n = list[0];
 3254               		.loc 1 364 0
 3255 14d2 8F81      		ldd r24,Y+7
 3256 14d4 9885      		ldd r25,Y+8
 3257 14d6 FC01      		movw r30,r24
 3258 14d8 8081      		ld r24,Z
 3259 14da 9181      		ldd r25,Z+1
 3260 14dc 9A87      		std Y+10,r25
 3261 14de 8987      		std Y+9,r24
 365:lp_solve_5.5/lp_SOS.c ****     /* Make sure that the arrays are properly allocated and sized */
 366:lp_solve_5.5/lp_SOS.c ****     if(n != group->sos_list[sosindex-1]->size) {
 3262               		.loc 1 366 0
 3263 14e0 8B85      		ldd r24,Y+11
 3264 14e2 9C85      		ldd r25,Y+12
 3265 14e4 FC01      		movw r30,r24
 3266 14e6 2281      		ldd r18,Z+2
 3267 14e8 3381      		ldd r19,Z+3
 3268 14ea 8D85      		ldd r24,Y+13
 3269 14ec 9E85      		ldd r25,Y+14
 3270 14ee 8150      		subi r24,1
 3271 14f0 9048      		sbci r25,-128
 3272 14f2 880F      		lsl r24
 3273 14f4 991F      		rol r25
 3274 14f6 820F      		add r24,r18
 3275 14f8 931F      		adc r25,r19
 3276 14fa FC01      		movw r30,r24
 3277 14fc 8081      		ld r24,Z
 3278 14fe 9181      		ldd r25,Z+1
 3279 1500 FC01      		movw r30,r24
 3280 1502 2185      		ldd r18,Z+9
 3281 1504 3285      		ldd r19,Z+10
 3282 1506 8985      		ldd r24,Y+9
 3283 1508 9A85      		ldd r25,Y+10
 3284 150a 2817      		cp r18,r24
 3285 150c 3907      		cpc r19,r25
 3286 150e 01F0      		breq .L112
 367:lp_solve_5.5/lp_SOS.c ****       allocINT(lp, &SOS->membersSorted, n, AUTOMATIC);
 3287               		.loc 1 367 0
 3288 1510 8D81      		ldd r24,Y+5
 3289 1512 9E81      		ldd r25,Y+6
 3290 1514 BC01      		movw r22,r24
 3291 1516 6F5E      		subi r22,-17
 3292 1518 7F4F      		sbci r23,-1
 3293 151a 4985      		ldd r20,Y+9
 3294 151c 5A85      		ldd r21,Y+10
 3295 151e 8B81      		ldd r24,Y+3
 3296 1520 9C81      		ldd r25,Y+4
 3297 1522 22E0      		ldi r18,lo8(2)
 3298 1524 0E94 0000 		call allocINT
 368:lp_solve_5.5/lp_SOS.c ****       allocINT(lp, &SOS->membersMapped, n, AUTOMATIC);
 3299               		.loc 1 368 0
 3300 1528 8D81      		ldd r24,Y+5
 3301 152a 9E81      		ldd r25,Y+6
 3302 152c BC01      		movw r22,r24
 3303 152e 6D5E      		subi r22,-19
 3304 1530 7F4F      		sbci r23,-1
 3305 1532 4985      		ldd r20,Y+9
 3306 1534 5A85      		ldd r21,Y+10
 3307 1536 8B81      		ldd r24,Y+3
 3308 1538 9C81      		ldd r25,Y+4
 3309 153a 22E0      		ldi r18,lo8(2)
 3310 153c 0E94 0000 		call allocINT
 369:lp_solve_5.5/lp_SOS.c ****       group->sos_list[sosindex-1]->size = n;
 3311               		.loc 1 369 0
 3312 1540 8B85      		ldd r24,Y+11
 3313 1542 9C85      		ldd r25,Y+12
 3314 1544 FC01      		movw r30,r24
 3315 1546 2281      		ldd r18,Z+2
 3316 1548 3381      		ldd r19,Z+3
 3317 154a 8D85      		ldd r24,Y+13
 3318 154c 9E85      		ldd r25,Y+14
 3319 154e 8150      		subi r24,1
 3320 1550 9048      		sbci r25,-128
 3321 1552 880F      		lsl r24
 3322 1554 991F      		rol r25
 3323 1556 820F      		add r24,r18
 3324 1558 931F      		adc r25,r19
 3325 155a FC01      		movw r30,r24
 3326 155c 8081      		ld r24,Z
 3327 155e 9181      		ldd r25,Z+1
 3328 1560 2985      		ldd r18,Y+9
 3329 1562 3A85      		ldd r19,Y+10
 3330 1564 FC01      		movw r30,r24
 3331 1566 3287      		std Z+10,r19
 3332 1568 2187      		std Z+9,r18
 3333               	.L112:
 370:lp_solve_5.5/lp_SOS.c ****     }
 371:lp_solve_5.5/lp_SOS.c ****     /* Reload the arrays and do the sorting */
 372:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= n; i++) {
 3334               		.loc 1 372 0
 3335 156a 81E0      		ldi r24,lo8(1)
 3336 156c 90E0      		ldi r25,0
 3337 156e 9A83      		std Y+2,r25
 3338 1570 8983      		std Y+1,r24
 3339 1572 00C0      		rjmp .L113
 3340               	.L114:
 373:lp_solve_5.5/lp_SOS.c ****       SOS->membersSorted[i - 1] = list[i];
 3341               		.loc 1 373 0 discriminator 3
 3342 1574 8D81      		ldd r24,Y+5
 3343 1576 9E81      		ldd r25,Y+6
 3344 1578 FC01      		movw r30,r24
 3345 157a 2189      		ldd r18,Z+17
 3346 157c 3289      		ldd r19,Z+18
 3347 157e 8981      		ldd r24,Y+1
 3348 1580 9A81      		ldd r25,Y+2
 3349 1582 8150      		subi r24,1
 3350 1584 9048      		sbci r25,-128
 3351 1586 880F      		lsl r24
 3352 1588 991F      		rol r25
 3353 158a 820F      		add r24,r18
 3354 158c 931F      		adc r25,r19
 3355 158e 2981      		ldd r18,Y+1
 3356 1590 3A81      		ldd r19,Y+2
 3357 1592 220F      		lsl r18
 3358 1594 331F      		rol r19
 3359 1596 4F81      		ldd r20,Y+7
 3360 1598 5885      		ldd r21,Y+8
 3361 159a 240F      		add r18,r20
 3362 159c 351F      		adc r19,r21
 3363 159e F901      		movw r30,r18
 3364 15a0 2081      		ld r18,Z
 3365 15a2 3181      		ldd r19,Z+1
 3366 15a4 FC01      		movw r30,r24
 3367 15a6 3183      		std Z+1,r19
 3368 15a8 2083      		st Z,r18
 374:lp_solve_5.5/lp_SOS.c ****       SOS->membersMapped[i - 1] = i;
 3369               		.loc 1 374 0 discriminator 3
 3370 15aa 8D81      		ldd r24,Y+5
 3371 15ac 9E81      		ldd r25,Y+6
 3372 15ae FC01      		movw r30,r24
 3373 15b0 2389      		ldd r18,Z+19
 3374 15b2 3489      		ldd r19,Z+20
 3375 15b4 8981      		ldd r24,Y+1
 3376 15b6 9A81      		ldd r25,Y+2
 3377 15b8 8150      		subi r24,1
 3378 15ba 9048      		sbci r25,-128
 3379 15bc 880F      		lsl r24
 3380 15be 991F      		rol r25
 3381 15c0 820F      		add r24,r18
 3382 15c2 931F      		adc r25,r19
 3383 15c4 2981      		ldd r18,Y+1
 3384 15c6 3A81      		ldd r19,Y+2
 3385 15c8 FC01      		movw r30,r24
 3386 15ca 3183      		std Z+1,r19
 3387 15cc 2083      		st Z,r18
 372:lp_solve_5.5/lp_SOS.c ****       SOS->membersSorted[i - 1] = list[i];
 3388               		.loc 1 372 0 discriminator 3
 3389 15ce 8981      		ldd r24,Y+1
 3390 15d0 9A81      		ldd r25,Y+2
 3391 15d2 0196      		adiw r24,1
 3392 15d4 9A83      		std Y+2,r25
 3393 15d6 8983      		std Y+1,r24
 3394               	.L113:
 372:lp_solve_5.5/lp_SOS.c ****       SOS->membersSorted[i - 1] = list[i];
 3395               		.loc 1 372 0 is_stmt 0 discriminator 1
 3396 15d8 2981      		ldd r18,Y+1
 3397 15da 3A81      		ldd r19,Y+2
 3398 15dc 8985      		ldd r24,Y+9
 3399 15de 9A85      		ldd r25,Y+10
 3400 15e0 8217      		cp r24,r18
 3401 15e2 9307      		cpc r25,r19
 3402 15e4 04F4      		brge .L114
 375:lp_solve_5.5/lp_SOS.c ****     }
 376:lp_solve_5.5/lp_SOS.c ****     sortByINT(SOS->membersMapped, SOS->membersSorted, n, 0, TRUE);
 3403               		.loc 1 376 0 is_stmt 1
 3404 15e6 8D81      		ldd r24,Y+5
 3405 15e8 9E81      		ldd r25,Y+6
 3406 15ea FC01      		movw r30,r24
 3407 15ec 6189      		ldd r22,Z+17
 3408 15ee 7289      		ldd r23,Z+18
 3409 15f0 8D81      		ldd r24,Y+5
 3410 15f2 9E81      		ldd r25,Y+6
 3411 15f4 FC01      		movw r30,r24
 3412 15f6 8389      		ldd r24,Z+19
 3413 15f8 9489      		ldd r25,Z+20
 3414 15fa 4985      		ldd r20,Y+9
 3415 15fc 5A85      		ldd r21,Y+10
 3416 15fe 01E0      		ldi r16,lo8(1)
 3417 1600 20E0      		ldi r18,0
 3418 1602 30E0      		ldi r19,0
 3419 1604 0E94 0000 		call sortByINT
 3420               	.L111:
 377:lp_solve_5.5/lp_SOS.c ****   }
 378:lp_solve_5.5/lp_SOS.c ****   return( TRUE );
 3421               		.loc 1 378 0
 3422 1608 81E0      		ldi r24,lo8(1)
 3423               	.L109:
 3424               	/* epilogue start */
 379:lp_solve_5.5/lp_SOS.c **** }
 3425               		.loc 1 379 0
 3426 160a 2E96      		adiw r28,14
 3427 160c 0FB6      		in __tmp_reg__,__SREG__
 3428 160e F894      		cli
 3429 1610 DEBF      		out __SP_H__,r29
 3430 1612 0FBE      		out __SREG__,__tmp_reg__
 3431 1614 CDBF      		out __SP_L__,r28
 3432 1616 DF91      		pop r29
 3433 1618 CF91      		pop r28
 3434 161a 0F91      		pop r16
 3435 161c 0895      		ret
 3436               		.cfi_endproc
 3437               	.LFE17:
 3439               	.global	SOS_member_updatemap
 3441               	SOS_member_updatemap:
 3442               	.LFB18:
 380:lp_solve_5.5/lp_SOS.c **** 
 381:lp_solve_5.5/lp_SOS.c **** STATIC int SOS_member_updatemap(SOSgroup *group)
 382:lp_solve_5.5/lp_SOS.c **** {
 3443               		.loc 1 382 0
 3444               		.cfi_startproc
 3445 161e CF93      		push r28
 3446               	.LCFI58:
 3447               		.cfi_def_cfa_offset 3
 3448               		.cfi_offset 28, -2
 3449 1620 DF93      		push r29
 3450               	.LCFI59:
 3451               		.cfi_def_cfa_offset 4
 3452               		.cfi_offset 29, -3
 3453 1622 CDB7      		in r28,__SP_L__
 3454 1624 DEB7      		in r29,__SP_H__
 3455               	.LCFI60:
 3456               		.cfi_def_cfa_register 28
 3457 1626 6497      		sbiw r28,20
 3458               	.LCFI61:
 3459               		.cfi_def_cfa_offset 24
 3460 1628 0FB6      		in __tmp_reg__,__SREG__
 3461 162a F894      		cli
 3462 162c DEBF      		out __SP_H__,r29
 3463 162e 0FBE      		out __SREG__,__tmp_reg__
 3464 1630 CDBF      		out __SP_L__,r28
 3465               	/* prologue: function */
 3466               	/* frame size = 20 */
 3467               	/* stack size = 22 */
 3468               	.L__stack_usage = 22
 3469 1632 9C8B      		std Y+20,r25
 3470 1634 8B8B      		std Y+19,r24
 383:lp_solve_5.5/lp_SOS.c ****   int      i, j, k, n, nvars = 0,
 3471               		.loc 1 383 0
 3472 1636 1E82      		std Y+6,__zero_reg__
 3473 1638 1D82      		std Y+5,__zero_reg__
 384:lp_solve_5.5/lp_SOS.c ****            *list, *tally = NULL;
 3474               		.loc 1 384 0
 3475 163a 1A8A      		std Y+18,__zero_reg__
 3476 163c 198A      		std Y+17,__zero_reg__
 385:lp_solve_5.5/lp_SOS.c ****   SOSrec   *rec;
 386:lp_solve_5.5/lp_SOS.c ****   lprec    *lp = group->lp;
 3477               		.loc 1 386 0
 3478 163e 8B89      		ldd r24,Y+19
 3479 1640 9C89      		ldd r25,Y+20
 3480 1642 FC01      		movw r30,r24
 3481 1644 8081      		ld r24,Z
 3482 1646 9181      		ldd r25,Z+1
 3483 1648 9887      		std Y+8,r25
 3484 164a 8F83      		std Y+7,r24
 387:lp_solve_5.5/lp_SOS.c **** 
 388:lp_solve_5.5/lp_SOS.c ****   /* (Re)-initialize usage arrays */
 389:lp_solve_5.5/lp_SOS.c ****   allocINT(lp, &group->memberpos, lp->columns+1, AUTOMATIC);
 3485               		.loc 1 389 0
 3486 164c 8F81      		ldd r24,Y+7
 3487 164e 9885      		ldd r25,Y+8
 3488 1650 8451      		subi r24,20
 3489 1652 9E4F      		sbci r25,-2
 3490 1654 FC01      		movw r30,r24
 3491 1656 8081      		ld r24,Z
 3492 1658 9181      		ldd r25,Z+1
 3493 165a AC01      		movw r20,r24
 3494 165c 4F5F      		subi r20,-1
 3495 165e 5F4F      		sbci r21,-1
 3496 1660 8B89      		ldd r24,Y+19
 3497 1662 9C89      		ldd r25,Y+20
 3498 1664 BC01      		movw r22,r24
 3499 1666 625F      		subi r22,-14
 3500 1668 7F4F      		sbci r23,-1
 3501 166a 8F81      		ldd r24,Y+7
 3502 166c 9885      		ldd r25,Y+8
 3503 166e 22E0      		ldi r18,lo8(2)
 3504 1670 0E94 0000 		call allocINT
 390:lp_solve_5.5/lp_SOS.c ****   allocINT(lp, &tally, lp->columns+1, TRUE);
 3505               		.loc 1 390 0
 3506 1674 8F81      		ldd r24,Y+7
 3507 1676 9885      		ldd r25,Y+8
 3508 1678 8451      		subi r24,20
 3509 167a 9E4F      		sbci r25,-2
 3510 167c FC01      		movw r30,r24
 3511 167e 8081      		ld r24,Z
 3512 1680 9181      		ldd r25,Z+1
 3513 1682 AC01      		movw r20,r24
 3514 1684 4F5F      		subi r20,-1
 3515 1686 5F4F      		sbci r21,-1
 3516 1688 BE01      		movw r22,r28
 3517 168a 6F5E      		subi r22,-17
 3518 168c 7F4F      		sbci r23,-1
 3519 168e 8F81      		ldd r24,Y+7
 3520 1690 9885      		ldd r25,Y+8
 3521 1692 21E0      		ldi r18,lo8(1)
 3522 1694 0E94 0000 		call allocINT
 391:lp_solve_5.5/lp_SOS.c **** 
 392:lp_solve_5.5/lp_SOS.c ****   /* Get each variable's SOS membership count */
 393:lp_solve_5.5/lp_SOS.c ****   for(i = 0; i < group->sos_count; i++) {
 3523               		.loc 1 393 0
 3524 1698 1A82      		std Y+2,__zero_reg__
 3525 169a 1982      		std Y+1,__zero_reg__
 3526 169c 00C0      		rjmp .L116
 3527               	.L119:
 394:lp_solve_5.5/lp_SOS.c ****     rec = group->sos_list[i];
 3528               		.loc 1 394 0
 3529 169e 8B89      		ldd r24,Y+19
 3530 16a0 9C89      		ldd r25,Y+20
 3531 16a2 FC01      		movw r30,r24
 3532 16a4 2281      		ldd r18,Z+2
 3533 16a6 3381      		ldd r19,Z+3
 3534 16a8 8981      		ldd r24,Y+1
 3535 16aa 9A81      		ldd r25,Y+2
 3536 16ac 880F      		lsl r24
 3537 16ae 991F      		rol r25
 3538 16b0 820F      		add r24,r18
 3539 16b2 931F      		adc r25,r19
 3540 16b4 FC01      		movw r30,r24
 3541 16b6 8081      		ld r24,Z
 3542 16b8 9181      		ldd r25,Z+1
 3543 16ba 9A87      		std Y+10,r25
 3544 16bc 8987      		std Y+9,r24
 395:lp_solve_5.5/lp_SOS.c ****     n = rec->size;
 3545               		.loc 1 395 0
 3546 16be 8985      		ldd r24,Y+9
 3547 16c0 9A85      		ldd r25,Y+10
 3548 16c2 FC01      		movw r30,r24
 3549 16c4 8185      		ldd r24,Z+9
 3550 16c6 9285      		ldd r25,Z+10
 3551 16c8 9C87      		std Y+12,r25
 3552 16ca 8B87      		std Y+11,r24
 396:lp_solve_5.5/lp_SOS.c ****     list = rec->members;
 3553               		.loc 1 396 0
 3554 16cc 8985      		ldd r24,Y+9
 3555 16ce 9A85      		ldd r25,Y+10
 3556 16d0 FC01      		movw r30,r24
 3557 16d2 8585      		ldd r24,Z+13
 3558 16d4 9685      		ldd r25,Z+14
 3559 16d6 9E87      		std Y+14,r25
 3560 16d8 8D87      		std Y+13,r24
 397:lp_solve_5.5/lp_SOS.c ****     for(j = 1; j <= n; j++) {
 3561               		.loc 1 397 0
 3562 16da 81E0      		ldi r24,lo8(1)
 3563 16dc 90E0      		ldi r25,0
 3564 16de 9C83      		std Y+4,r25
 3565 16e0 8B83      		std Y+3,r24
 3566 16e2 00C0      		rjmp .L117
 3567               	.L118:
 398:lp_solve_5.5/lp_SOS.c ****       k = list[j];
 3568               		.loc 1 398 0 discriminator 3
 3569 16e4 8B81      		ldd r24,Y+3
 3570 16e6 9C81      		ldd r25,Y+4
 3571 16e8 880F      		lsl r24
 3572 16ea 991F      		rol r25
 3573 16ec 2D85      		ldd r18,Y+13
 3574 16ee 3E85      		ldd r19,Y+14
 3575 16f0 820F      		add r24,r18
 3576 16f2 931F      		adc r25,r19
 3577 16f4 FC01      		movw r30,r24
 3578 16f6 8081      		ld r24,Z
 3579 16f8 9181      		ldd r25,Z+1
 3580 16fa 988B      		std Y+16,r25
 3581 16fc 8F87      		std Y+15,r24
 399:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
 400:lp_solve_5.5/lp_SOS.c ****       if((k < 1) || (k > lp->columns))
 401:lp_solve_5.5/lp_SOS.c ****         report(lp, SEVERE, "SOS_member_updatemap: Member %j of SOS number %d is out of column range
 402:lp_solve_5.5/lp_SOS.c ****                             j, i+1, k);
 403:lp_solve_5.5/lp_SOS.c **** #endif
 404:lp_solve_5.5/lp_SOS.c ****       tally[k]++;
 3582               		.loc 1 404 0 discriminator 3
 3583 16fe 2989      		ldd r18,Y+17
 3584 1700 3A89      		ldd r19,Y+18
 3585 1702 8F85      		ldd r24,Y+15
 3586 1704 9889      		ldd r25,Y+16
 3587 1706 880F      		lsl r24
 3588 1708 991F      		rol r25
 3589 170a 820F      		add r24,r18
 3590 170c 931F      		adc r25,r19
 3591 170e FC01      		movw r30,r24
 3592 1710 2081      		ld r18,Z
 3593 1712 3181      		ldd r19,Z+1
 3594 1714 2F5F      		subi r18,-1
 3595 1716 3F4F      		sbci r19,-1
 3596 1718 FC01      		movw r30,r24
 3597 171a 3183      		std Z+1,r19
 3598 171c 2083      		st Z,r18
 397:lp_solve_5.5/lp_SOS.c ****       k = list[j];
 3599               		.loc 1 397 0 discriminator 3
 3600 171e 8B81      		ldd r24,Y+3
 3601 1720 9C81      		ldd r25,Y+4
 3602 1722 0196      		adiw r24,1
 3603 1724 9C83      		std Y+4,r25
 3604 1726 8B83      		std Y+3,r24
 3605               	.L117:
 397:lp_solve_5.5/lp_SOS.c ****       k = list[j];
 3606               		.loc 1 397 0 is_stmt 0 discriminator 1
 3607 1728 2B81      		ldd r18,Y+3
 3608 172a 3C81      		ldd r19,Y+4
 3609 172c 8B85      		ldd r24,Y+11
 3610 172e 9C85      		ldd r25,Y+12
 3611 1730 8217      		cp r24,r18
 3612 1732 9307      		cpc r25,r19
 3613 1734 04F4      		brge .L118
 393:lp_solve_5.5/lp_SOS.c ****     rec = group->sos_list[i];
 3614               		.loc 1 393 0 is_stmt 1 discriminator 2
 3615 1736 8981      		ldd r24,Y+1
 3616 1738 9A81      		ldd r25,Y+2
 3617 173a 0196      		adiw r24,1
 3618 173c 9A83      		std Y+2,r25
 3619 173e 8983      		std Y+1,r24
 3620               	.L116:
 393:lp_solve_5.5/lp_SOS.c ****     rec = group->sos_list[i];
 3621               		.loc 1 393 0 is_stmt 0 discriminator 1
 3622 1740 8B89      		ldd r24,Y+19
 3623 1742 9C89      		ldd r25,Y+20
 3624 1744 FC01      		movw r30,r24
 3625 1746 2681      		ldd r18,Z+6
 3626 1748 3781      		ldd r19,Z+7
 3627 174a 8981      		ldd r24,Y+1
 3628 174c 9A81      		ldd r25,Y+2
 3629 174e 8217      		cp r24,r18
 3630 1750 9307      		cpc r25,r19
 3631 1752 04F4      		brge .+2
 3632 1754 00C0      		rjmp .L119
 405:lp_solve_5.5/lp_SOS.c ****     }
 406:lp_solve_5.5/lp_SOS.c **** 
 407:lp_solve_5.5/lp_SOS.c ****   }
 408:lp_solve_5.5/lp_SOS.c **** 
 409:lp_solve_5.5/lp_SOS.c ****   /* Compute pointer into column-sorted array */
 410:lp_solve_5.5/lp_SOS.c ****   group->memberpos[0] = 0;
 3633               		.loc 1 410 0 is_stmt 1
 3634 1756 8B89      		ldd r24,Y+19
 3635 1758 9C89      		ldd r25,Y+20
 3636 175a FC01      		movw r30,r24
 3637 175c 8685      		ldd r24,Z+14
 3638 175e 9785      		ldd r25,Z+15
 3639 1760 FC01      		movw r30,r24
 3640 1762 1182      		std Z+1,__zero_reg__
 3641 1764 1082      		st Z,__zero_reg__
 411:lp_solve_5.5/lp_SOS.c ****   for(i = 1; i <= lp->columns; i++) {
 3642               		.loc 1 411 0
 3643 1766 81E0      		ldi r24,lo8(1)
 3644 1768 90E0      		ldi r25,0
 3645 176a 9A83      		std Y+2,r25
 3646 176c 8983      		std Y+1,r24
 3647 176e 00C0      		rjmp .L120
 3648               	.L122:
 412:lp_solve_5.5/lp_SOS.c ****     n = tally[i];
 3649               		.loc 1 412 0
 3650 1770 2989      		ldd r18,Y+17
 3651 1772 3A89      		ldd r19,Y+18
 3652 1774 8981      		ldd r24,Y+1
 3653 1776 9A81      		ldd r25,Y+2
 3654 1778 880F      		lsl r24
 3655 177a 991F      		rol r25
 3656 177c 820F      		add r24,r18
 3657 177e 931F      		adc r25,r19
 3658 1780 FC01      		movw r30,r24
 3659 1782 8081      		ld r24,Z
 3660 1784 9181      		ldd r25,Z+1
 3661 1786 9C87      		std Y+12,r25
 3662 1788 8B87      		std Y+11,r24
 413:lp_solve_5.5/lp_SOS.c ****     if(n > 0)
 3663               		.loc 1 413 0
 3664 178a 8B85      		ldd r24,Y+11
 3665 178c 9C85      		ldd r25,Y+12
 3666 178e 1816      		cp __zero_reg__,r24
 3667 1790 1906      		cpc __zero_reg__,r25
 3668 1792 04F4      		brge .L121
 414:lp_solve_5.5/lp_SOS.c ****       nvars++;
 3669               		.loc 1 414 0
 3670 1794 8D81      		ldd r24,Y+5
 3671 1796 9E81      		ldd r25,Y+6
 3672 1798 0196      		adiw r24,1
 3673 179a 9E83      		std Y+6,r25
 3674 179c 8D83      		std Y+5,r24
 3675               	.L121:
 415:lp_solve_5.5/lp_SOS.c ****     group->memberpos[i] = group->memberpos[i-1] + n;
 3676               		.loc 1 415 0 discriminator 2
 3677 179e 8B89      		ldd r24,Y+19
 3678 17a0 9C89      		ldd r25,Y+20
 3679 17a2 FC01      		movw r30,r24
 3680 17a4 2685      		ldd r18,Z+14
 3681 17a6 3785      		ldd r19,Z+15
 3682 17a8 8981      		ldd r24,Y+1
 3683 17aa 9A81      		ldd r25,Y+2
 3684 17ac 880F      		lsl r24
 3685 17ae 991F      		rol r25
 3686 17b0 820F      		add r24,r18
 3687 17b2 931F      		adc r25,r19
 3688 17b4 2B89      		ldd r18,Y+19
 3689 17b6 3C89      		ldd r19,Y+20
 3690 17b8 F901      		movw r30,r18
 3691 17ba 4685      		ldd r20,Z+14
 3692 17bc 5785      		ldd r21,Z+15
 3693 17be 2981      		ldd r18,Y+1
 3694 17c0 3A81      		ldd r19,Y+2
 3695 17c2 2150      		subi r18,1
 3696 17c4 3048      		sbci r19,-128
 3697 17c6 220F      		lsl r18
 3698 17c8 331F      		rol r19
 3699 17ca 240F      		add r18,r20
 3700 17cc 351F      		adc r19,r21
 3701 17ce F901      		movw r30,r18
 3702 17d0 4081      		ld r20,Z
 3703 17d2 5181      		ldd r21,Z+1
 3704 17d4 2B85      		ldd r18,Y+11
 3705 17d6 3C85      		ldd r19,Y+12
 3706 17d8 240F      		add r18,r20
 3707 17da 351F      		adc r19,r21
 3708 17dc FC01      		movw r30,r24
 3709 17de 3183      		std Z+1,r19
 3710 17e0 2083      		st Z,r18
 411:lp_solve_5.5/lp_SOS.c ****     n = tally[i];
 3711               		.loc 1 411 0 discriminator 2
 3712 17e2 8981      		ldd r24,Y+1
 3713 17e4 9A81      		ldd r25,Y+2
 3714 17e6 0196      		adiw r24,1
 3715 17e8 9A83      		std Y+2,r25
 3716 17ea 8983      		std Y+1,r24
 3717               	.L120:
 411:lp_solve_5.5/lp_SOS.c ****     n = tally[i];
 3718               		.loc 1 411 0 is_stmt 0 discriminator 1
 3719 17ec 8F81      		ldd r24,Y+7
 3720 17ee 9885      		ldd r25,Y+8
 3721 17f0 8451      		subi r24,20
 3722 17f2 9E4F      		sbci r25,-2
 3723 17f4 FC01      		movw r30,r24
 3724 17f6 2081      		ld r18,Z
 3725 17f8 3181      		ldd r19,Z+1
 3726 17fa 8981      		ldd r24,Y+1
 3727 17fc 9A81      		ldd r25,Y+2
 3728 17fe 2817      		cp r18,r24
 3729 1800 3907      		cpc r19,r25
 3730 1802 04F0      		brlt .+2
 3731 1804 00C0      		rjmp .L122
 416:lp_solve_5.5/lp_SOS.c ****   }
 417:lp_solve_5.5/lp_SOS.c ****   n = group->memberpos[lp->columns];
 3732               		.loc 1 417 0 is_stmt 1
 3733 1806 8B89      		ldd r24,Y+19
 3734 1808 9C89      		ldd r25,Y+20
 3735 180a FC01      		movw r30,r24
 3736 180c 2685      		ldd r18,Z+14
 3737 180e 3785      		ldd r19,Z+15
 3738 1810 8F81      		ldd r24,Y+7
 3739 1812 9885      		ldd r25,Y+8
 3740 1814 8451      		subi r24,20
 3741 1816 9E4F      		sbci r25,-2
 3742 1818 FC01      		movw r30,r24
 3743 181a 8081      		ld r24,Z
 3744 181c 9181      		ldd r25,Z+1
 3745 181e 880F      		lsl r24
 3746 1820 991F      		rol r25
 3747 1822 820F      		add r24,r18
 3748 1824 931F      		adc r25,r19
 3749 1826 FC01      		movw r30,r24
 3750 1828 8081      		ld r24,Z
 3751 182a 9181      		ldd r25,Z+1
 3752 182c 9C87      		std Y+12,r25
 3753 182e 8B87      		std Y+11,r24
 418:lp_solve_5.5/lp_SOS.c ****   MEMCOPY(tally+1, group->memberpos, lp->columns);
 3754               		.loc 1 418 0
 3755 1830 8F81      		ldd r24,Y+7
 3756 1832 9885      		ldd r25,Y+8
 3757 1834 8451      		subi r24,20
 3758 1836 9E4F      		sbci r25,-2
 3759 1838 FC01      		movw r30,r24
 3760 183a 8081      		ld r24,Z
 3761 183c 9181      		ldd r25,Z+1
 3762 183e AC01      		movw r20,r24
 3763 1840 440F      		lsl r20
 3764 1842 551F      		rol r21
 3765 1844 8B89      		ldd r24,Y+19
 3766 1846 9C89      		ldd r25,Y+20
 3767 1848 FC01      		movw r30,r24
 3768 184a 2685      		ldd r18,Z+14
 3769 184c 3785      		ldd r19,Z+15
 3770 184e 8989      		ldd r24,Y+17
 3771 1850 9A89      		ldd r25,Y+18
 3772 1852 0296      		adiw r24,2
 3773 1854 B901      		movw r22,r18
 3774 1856 0E94 0000 		call memcpy
 419:lp_solve_5.5/lp_SOS.c **** 
 420:lp_solve_5.5/lp_SOS.c ****   /* Load the column-sorted SOS indeces / pointers */
 421:lp_solve_5.5/lp_SOS.c ****   allocINT(lp, &group->membership, n+1, AUTOMATIC);
 3775               		.loc 1 421 0
 3776 185a 8B85      		ldd r24,Y+11
 3777 185c 9C85      		ldd r25,Y+12
 3778 185e AC01      		movw r20,r24
 3779 1860 4F5F      		subi r20,-1
 3780 1862 5F4F      		sbci r21,-1
 3781 1864 8B89      		ldd r24,Y+19
 3782 1866 9C89      		ldd r25,Y+20
 3783 1868 BC01      		movw r22,r24
 3784 186a 645F      		subi r22,-12
 3785 186c 7F4F      		sbci r23,-1
 3786 186e 8F81      		ldd r24,Y+7
 3787 1870 9885      		ldd r25,Y+8
 3788 1872 22E0      		ldi r18,lo8(2)
 3789 1874 0E94 0000 		call allocINT
 422:lp_solve_5.5/lp_SOS.c ****   for(i = 0; i < group->sos_count; i++) {
 3790               		.loc 1 422 0
 3791 1878 1A82      		std Y+2,__zero_reg__
 3792 187a 1982      		std Y+1,__zero_reg__
 3793 187c 00C0      		rjmp .L123
 3794               	.L126:
 423:lp_solve_5.5/lp_SOS.c ****     rec = group->sos_list[i];
 3795               		.loc 1 423 0
 3796 187e 8B89      		ldd r24,Y+19
 3797 1880 9C89      		ldd r25,Y+20
 3798 1882 FC01      		movw r30,r24
 3799 1884 2281      		ldd r18,Z+2
 3800 1886 3381      		ldd r19,Z+3
 3801 1888 8981      		ldd r24,Y+1
 3802 188a 9A81      		ldd r25,Y+2
 3803 188c 880F      		lsl r24
 3804 188e 991F      		rol r25
 3805 1890 820F      		add r24,r18
 3806 1892 931F      		adc r25,r19
 3807 1894 FC01      		movw r30,r24
 3808 1896 8081      		ld r24,Z
 3809 1898 9181      		ldd r25,Z+1
 3810 189a 9A87      		std Y+10,r25
 3811 189c 8987      		std Y+9,r24
 424:lp_solve_5.5/lp_SOS.c ****     n = rec->size;
 3812               		.loc 1 424 0
 3813 189e 8985      		ldd r24,Y+9
 3814 18a0 9A85      		ldd r25,Y+10
 3815 18a2 FC01      		movw r30,r24
 3816 18a4 8185      		ldd r24,Z+9
 3817 18a6 9285      		ldd r25,Z+10
 3818 18a8 9C87      		std Y+12,r25
 3819 18aa 8B87      		std Y+11,r24
 425:lp_solve_5.5/lp_SOS.c ****     list = rec->members;
 3820               		.loc 1 425 0
 3821 18ac 8985      		ldd r24,Y+9
 3822 18ae 9A85      		ldd r25,Y+10
 3823 18b0 FC01      		movw r30,r24
 3824 18b2 8585      		ldd r24,Z+13
 3825 18b4 9685      		ldd r25,Z+14
 3826 18b6 9E87      		std Y+14,r25
 3827 18b8 8D87      		std Y+13,r24
 426:lp_solve_5.5/lp_SOS.c ****     for(j = 1; j <= n; j++) {
 3828               		.loc 1 426 0
 3829 18ba 81E0      		ldi r24,lo8(1)
 3830 18bc 90E0      		ldi r25,0
 3831 18be 9C83      		std Y+4,r25
 3832 18c0 8B83      		std Y+3,r24
 3833 18c2 00C0      		rjmp .L124
 3834               	.L125:
 427:lp_solve_5.5/lp_SOS.c ****       k = tally[list[j]]++;
 3835               		.loc 1 427 0 discriminator 3
 3836 18c4 2989      		ldd r18,Y+17
 3837 18c6 3A89      		ldd r19,Y+18
 3838 18c8 8B81      		ldd r24,Y+3
 3839 18ca 9C81      		ldd r25,Y+4
 3840 18cc 880F      		lsl r24
 3841 18ce 991F      		rol r25
 3842 18d0 4D85      		ldd r20,Y+13
 3843 18d2 5E85      		ldd r21,Y+14
 3844 18d4 840F      		add r24,r20
 3845 18d6 951F      		adc r25,r21
 3846 18d8 FC01      		movw r30,r24
 3847 18da 8081      		ld r24,Z
 3848 18dc 9181      		ldd r25,Z+1
 3849 18de 880F      		lsl r24
 3850 18e0 991F      		rol r25
 3851 18e2 280F      		add r18,r24
 3852 18e4 391F      		adc r19,r25
 3853 18e6 F901      		movw r30,r18
 3854 18e8 8081      		ld r24,Z
 3855 18ea 9181      		ldd r25,Z+1
 3856 18ec AC01      		movw r20,r24
 3857 18ee 4F5F      		subi r20,-1
 3858 18f0 5F4F      		sbci r21,-1
 3859 18f2 F901      		movw r30,r18
 3860 18f4 5183      		std Z+1,r21
 3861 18f6 4083      		st Z,r20
 3862 18f8 988B      		std Y+16,r25
 3863 18fa 8F87      		std Y+15,r24
 428:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
 429:lp_solve_5.5/lp_SOS.c ****       if(k > group->memberpos[lp->columns])
 430:lp_solve_5.5/lp_SOS.c ****         report(lp, SEVERE, "SOS_member_updatemap: Member mapping for variable %j of SOS number %d i
 431:lp_solve_5.5/lp_SOS.c ****                             list[j], i+1);
 432:lp_solve_5.5/lp_SOS.c **** #endif
 433:lp_solve_5.5/lp_SOS.c ****       group->membership[k] = i+1;
 3864               		.loc 1 433 0 discriminator 3
 3865 18fc 8B89      		ldd r24,Y+19
 3866 18fe 9C89      		ldd r25,Y+20
 3867 1900 FC01      		movw r30,r24
 3868 1902 2485      		ldd r18,Z+12
 3869 1904 3585      		ldd r19,Z+13
 3870 1906 8F85      		ldd r24,Y+15
 3871 1908 9889      		ldd r25,Y+16
 3872 190a 880F      		lsl r24
 3873 190c 991F      		rol r25
 3874 190e 820F      		add r24,r18
 3875 1910 931F      		adc r25,r19
 3876 1912 2981      		ldd r18,Y+1
 3877 1914 3A81      		ldd r19,Y+2
 3878 1916 2F5F      		subi r18,-1
 3879 1918 3F4F      		sbci r19,-1
 3880 191a FC01      		movw r30,r24
 3881 191c 3183      		std Z+1,r19
 3882 191e 2083      		st Z,r18
 426:lp_solve_5.5/lp_SOS.c ****       k = tally[list[j]]++;
 3883               		.loc 1 426 0 discriminator 3
 3884 1920 8B81      		ldd r24,Y+3
 3885 1922 9C81      		ldd r25,Y+4
 3886 1924 0196      		adiw r24,1
 3887 1926 9C83      		std Y+4,r25
 3888 1928 8B83      		std Y+3,r24
 3889               	.L124:
 426:lp_solve_5.5/lp_SOS.c ****       k = tally[list[j]]++;
 3890               		.loc 1 426 0 is_stmt 0 discriminator 1
 3891 192a 2B81      		ldd r18,Y+3
 3892 192c 3C81      		ldd r19,Y+4
 3893 192e 8B85      		ldd r24,Y+11
 3894 1930 9C85      		ldd r25,Y+12
 3895 1932 8217      		cp r24,r18
 3896 1934 9307      		cpc r25,r19
 3897 1936 04F4      		brge .L125
 422:lp_solve_5.5/lp_SOS.c ****     rec = group->sos_list[i];
 3898               		.loc 1 422 0 is_stmt 1 discriminator 2
 3899 1938 8981      		ldd r24,Y+1
 3900 193a 9A81      		ldd r25,Y+2
 3901 193c 0196      		adiw r24,1
 3902 193e 9A83      		std Y+2,r25
 3903 1940 8983      		std Y+1,r24
 3904               	.L123:
 422:lp_solve_5.5/lp_SOS.c ****     rec = group->sos_list[i];
 3905               		.loc 1 422 0 is_stmt 0 discriminator 1
 3906 1942 8B89      		ldd r24,Y+19
 3907 1944 9C89      		ldd r25,Y+20
 3908 1946 FC01      		movw r30,r24
 3909 1948 2681      		ldd r18,Z+6
 3910 194a 3781      		ldd r19,Z+7
 3911 194c 8981      		ldd r24,Y+1
 3912 194e 9A81      		ldd r25,Y+2
 3913 1950 8217      		cp r24,r18
 3914 1952 9307      		cpc r25,r19
 3915 1954 04F4      		brge .+2
 3916 1956 00C0      		rjmp .L126
 434:lp_solve_5.5/lp_SOS.c ****     }
 435:lp_solve_5.5/lp_SOS.c ****   }
 436:lp_solve_5.5/lp_SOS.c ****   FREE(tally);
 3917               		.loc 1 436 0 is_stmt 1
 3918 1958 8989      		ldd r24,Y+17
 3919 195a 9A89      		ldd r25,Y+18
 3920 195c 892B      		or r24,r25
 3921 195e 01F0      		breq .L127
 3922               		.loc 1 436 0 is_stmt 0 discriminator 1
 3923 1960 8989      		ldd r24,Y+17
 3924 1962 9A89      		ldd r25,Y+18
 3925 1964 0E94 0000 		call free
 3926 1968 1A8A      		std Y+18,__zero_reg__
 3927 196a 198A      		std Y+17,__zero_reg__
 3928               	.L127:
 437:lp_solve_5.5/lp_SOS.c **** 
 438:lp_solve_5.5/lp_SOS.c ****   return( nvars );
 3929               		.loc 1 438 0 is_stmt 1
 3930 196c 8D81      		ldd r24,Y+5
 3931 196e 9E81      		ldd r25,Y+6
 3932               	/* epilogue start */
 439:lp_solve_5.5/lp_SOS.c **** }
 3933               		.loc 1 439 0
 3934 1970 6496      		adiw r28,20
 3935 1972 0FB6      		in __tmp_reg__,__SREG__
 3936 1974 F894      		cli
 3937 1976 DEBF      		out __SP_H__,r29
 3938 1978 0FBE      		out __SREG__,__tmp_reg__
 3939 197a CDBF      		out __SP_L__,r28
 3940 197c DF91      		pop r29
 3941 197e CF91      		pop r28
 3942 1980 0895      		ret
 3943               		.cfi_endproc
 3944               	.LFE18:
 3946               	.global	SOS_shift_col
 3948               	SOS_shift_col:
 3949               	.LFB19:
 440:lp_solve_5.5/lp_SOS.c **** 
 441:lp_solve_5.5/lp_SOS.c **** 
 442:lp_solve_5.5/lp_SOS.c **** STATIC MYBOOL SOS_shift_col(SOSgroup *group, int sosindex, int column, int delta, LLrec *usedmap, M
 443:lp_solve_5.5/lp_SOS.c **** /* Routine to adjust SOS indeces for variable insertions or deletions;
 444:lp_solve_5.5/lp_SOS.c ****    Note: SOS_shift_col must be called before make_SOSchain! */
 445:lp_solve_5.5/lp_SOS.c **** {
 3950               		.loc 1 445 0
 3951               		.cfi_startproc
 3952 1982 EF92      		push r14
 3953               	.LCFI62:
 3954               		.cfi_def_cfa_offset 3
 3955               		.cfi_offset 14, -2
 3956 1984 0F93      		push r16
 3957               	.LCFI63:
 3958               		.cfi_def_cfa_offset 4
 3959               		.cfi_offset 16, -3
 3960 1986 1F93      		push r17
 3961               	.LCFI64:
 3962               		.cfi_def_cfa_offset 5
 3963               		.cfi_offset 17, -4
 3964 1988 CF93      		push r28
 3965               	.LCFI65:
 3966               		.cfi_def_cfa_offset 6
 3967               		.cfi_offset 28, -5
 3968 198a DF93      		push r29
 3969               	.LCFI66:
 3970               		.cfi_def_cfa_offset 7
 3971               		.cfi_offset 29, -6
 3972 198c CDB7      		in r28,__SP_L__
 3973 198e DEB7      		in r29,__SP_H__
 3974               	.LCFI67:
 3975               		.cfi_def_cfa_register 28
 3976 1990 6D97      		sbiw r28,29
 3977               	.LCFI68:
 3978               		.cfi_def_cfa_offset 36
 3979 1992 0FB6      		in __tmp_reg__,__SREG__
 3980 1994 F894      		cli
 3981 1996 DEBF      		out __SP_H__,r29
 3982 1998 0FBE      		out __SREG__,__tmp_reg__
 3983 199a CDBF      		out __SP_L__,r28
 3984               	/* prologue: function */
 3985               	/* frame size = 29 */
 3986               	/* stack size = 34 */
 3987               	.L__stack_usage = 34
 3988 199c 9C8B      		std Y+20,r25
 3989 199e 8B8B      		std Y+19,r24
 3990 19a0 7E8B      		std Y+22,r23
 3991 19a2 6D8B      		std Y+21,r22
 3992 19a4 588F      		std Y+24,r21
 3993 19a6 4F8B      		std Y+23,r20
 3994 19a8 3A8F      		std Y+26,r19
 3995 19aa 298F      		std Y+25,r18
 3996 19ac 1C8F      		std Y+28,r17
 3997 19ae 0B8F      		std Y+27,r16
 3998 19b0 ED8E      		std Y+29,r14
 446:lp_solve_5.5/lp_SOS.c ****   int    i, ii, n, nn, nr;
 447:lp_solve_5.5/lp_SOS.c ****   int    changed;
 448:lp_solve_5.5/lp_SOS.c ****   int    *list;
 449:lp_solve_5.5/lp_SOS.c ****   REAL   *weights;
 450:lp_solve_5.5/lp_SOS.c **** 
 451:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
 452:lp_solve_5.5/lp_SOS.c ****   lprec  *lp = group->lp;
 453:lp_solve_5.5/lp_SOS.c **** 
 454:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
 455:lp_solve_5.5/lp_SOS.c ****     report(lp, IMPORTANT, "SOS_shift_col: Invalid SOS index %d\n", sosindex);
 456:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 457:lp_solve_5.5/lp_SOS.c ****   }
 458:lp_solve_5.5/lp_SOS.c ****   else if((column < 1) || (delta == 0)) {
 459:lp_solve_5.5/lp_SOS.c ****     report(lp, IMPORTANT, "SOS_shift_col: Invalid column %d specified with delta %d\n",
 460:lp_solve_5.5/lp_SOS.c ****                           column, delta);
 461:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 462:lp_solve_5.5/lp_SOS.c ****   }
 463:lp_solve_5.5/lp_SOS.c **** #endif
 464:lp_solve_5.5/lp_SOS.c **** 
 465:lp_solve_5.5/lp_SOS.c ****   if((sosindex == 0) && (group->sos_count == 1))
 3999               		.loc 1 465 0
 4000 19b2 8D89      		ldd r24,Y+21
 4001 19b4 9E89      		ldd r25,Y+22
 4002 19b6 892B      		or r24,r25
 4003 19b8 01F4      		brne .L130
 4004               		.loc 1 465 0 is_stmt 0 discriminator 1
 4005 19ba 8B89      		ldd r24,Y+19
 4006 19bc 9C89      		ldd r25,Y+20
 4007 19be FC01      		movw r30,r24
 4008 19c0 8681      		ldd r24,Z+6
 4009 19c2 9781      		ldd r25,Z+7
 4010 19c4 0197      		sbiw r24,1
 4011 19c6 01F4      		brne .L130
 466:lp_solve_5.5/lp_SOS.c ****     sosindex = 1;
 4012               		.loc 1 466 0 is_stmt 1
 4013 19c8 81E0      		ldi r24,lo8(1)
 4014 19ca 90E0      		ldi r25,0
 4015 19cc 9E8B      		std Y+22,r25
 4016 19ce 8D8B      		std Y+21,r24
 4017               	.L130:
 467:lp_solve_5.5/lp_SOS.c **** 
 468:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0) {
 4018               		.loc 1 468 0
 4019 19d0 8D89      		ldd r24,Y+21
 4020 19d2 9E89      		ldd r25,Y+22
 4021 19d4 892B      		or r24,r25
 4022 19d6 01F4      		brne .L131
 469:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++) {
 4023               		.loc 1 469 0
 4024 19d8 81E0      		ldi r24,lo8(1)
 4025 19da 90E0      		ldi r25,0
 4026 19dc 9A83      		std Y+2,r25
 4027 19de 8983      		std Y+1,r24
 4028 19e0 00C0      		rjmp .L132
 4029               	.L135:
 470:lp_solve_5.5/lp_SOS.c ****       if(!SOS_shift_col(group, i, column, delta, usedmap, forceresort))
 4030               		.loc 1 470 0
 4031 19e2 EB8D      		ldd r30,Y+27
 4032 19e4 FC8D      		ldd r31,Y+28
 4033 19e6 298D      		ldd r18,Y+25
 4034 19e8 3A8D      		ldd r19,Y+26
 4035 19ea 4F89      		ldd r20,Y+23
 4036 19ec 588D      		ldd r21,Y+24
 4037 19ee 6981      		ldd r22,Y+1
 4038 19f0 7A81      		ldd r23,Y+2
 4039 19f2 8B89      		ldd r24,Y+19
 4040 19f4 9C89      		ldd r25,Y+20
 4041 19f6 ED8C      		ldd r14,Y+29
 4042 19f8 8F01      		movw r16,r30
 4043 19fa 0E94 0000 		call SOS_shift_col
 4044 19fe 8823      		tst r24
 4045 1a00 01F4      		brne .L133
 471:lp_solve_5.5/lp_SOS.c ****         return(FALSE);
 4046               		.loc 1 471 0
 4047 1a02 80E0      		ldi r24,0
 4048 1a04 00C0      		rjmp .L134
 4049               	.L133:
 469:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++) {
 4050               		.loc 1 469 0 discriminator 2
 4051 1a06 8981      		ldd r24,Y+1
 4052 1a08 9A81      		ldd r25,Y+2
 4053 1a0a 0196      		adiw r24,1
 4054 1a0c 9A83      		std Y+2,r25
 4055 1a0e 8983      		std Y+1,r24
 4056               	.L132:
 469:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++) {
 4057               		.loc 1 469 0 is_stmt 0 discriminator 1
 4058 1a10 8B89      		ldd r24,Y+19
 4059 1a12 9C89      		ldd r25,Y+20
 4060 1a14 FC01      		movw r30,r24
 4061 1a16 2681      		ldd r18,Z+6
 4062 1a18 3781      		ldd r19,Z+7
 4063 1a1a 8981      		ldd r24,Y+1
 4064 1a1c 9A81      		ldd r25,Y+2
 4065 1a1e 2817      		cp r18,r24
 4066 1a20 3907      		cpc r19,r25
 4067 1a22 04F4      		brge .L135
 4068 1a24 00C0      		rjmp .L136
 4069               	.L131:
 472:lp_solve_5.5/lp_SOS.c ****     }
 473:lp_solve_5.5/lp_SOS.c ****   }
 474:lp_solve_5.5/lp_SOS.c ****   else {
 475:lp_solve_5.5/lp_SOS.c ****     list = group->sos_list[sosindex-1]->members;
 4070               		.loc 1 475 0 is_stmt 1
 4071 1a26 8B89      		ldd r24,Y+19
 4072 1a28 9C89      		ldd r25,Y+20
 4073 1a2a FC01      		movw r30,r24
 4074 1a2c 2281      		ldd r18,Z+2
 4075 1a2e 3381      		ldd r19,Z+3
 4076 1a30 8D89      		ldd r24,Y+21
 4077 1a32 9E89      		ldd r25,Y+22
 4078 1a34 8150      		subi r24,1
 4079 1a36 9048      		sbci r25,-128
 4080 1a38 880F      		lsl r24
 4081 1a3a 991F      		rol r25
 4082 1a3c 820F      		add r24,r18
 4083 1a3e 931F      		adc r25,r19
 4084 1a40 FC01      		movw r30,r24
 4085 1a42 8081      		ld r24,Z
 4086 1a44 9181      		ldd r25,Z+1
 4087 1a46 FC01      		movw r30,r24
 4088 1a48 8585      		ldd r24,Z+13
 4089 1a4a 9685      		ldd r25,Z+14
 4090 1a4c 9A87      		std Y+10,r25
 4091 1a4e 8987      		std Y+9,r24
 476:lp_solve_5.5/lp_SOS.c ****     weights = group->sos_list[sosindex-1]->weights;
 4092               		.loc 1 476 0
 4093 1a50 8B89      		ldd r24,Y+19
 4094 1a52 9C89      		ldd r25,Y+20
 4095 1a54 FC01      		movw r30,r24
 4096 1a56 2281      		ldd r18,Z+2
 4097 1a58 3381      		ldd r19,Z+3
 4098 1a5a 8D89      		ldd r24,Y+21
 4099 1a5c 9E89      		ldd r25,Y+22
 4100 1a5e 8150      		subi r24,1
 4101 1a60 9048      		sbci r25,-128
 4102 1a62 880F      		lsl r24
 4103 1a64 991F      		rol r25
 4104 1a66 820F      		add r24,r18
 4105 1a68 931F      		adc r25,r19
 4106 1a6a FC01      		movw r30,r24
 4107 1a6c 8081      		ld r24,Z
 4108 1a6e 9181      		ldd r25,Z+1
 4109 1a70 FC01      		movw r30,r24
 4110 1a72 8785      		ldd r24,Z+15
 4111 1a74 9089      		ldd r25,Z+16
 4112 1a76 9C87      		std Y+12,r25
 4113 1a78 8B87      		std Y+11,r24
 477:lp_solve_5.5/lp_SOS.c ****     n = list[0];
 4114               		.loc 1 477 0
 4115 1a7a 8985      		ldd r24,Y+9
 4116 1a7c 9A85      		ldd r25,Y+10
 4117 1a7e FC01      		movw r30,r24
 4118 1a80 8081      		ld r24,Z
 4119 1a82 9181      		ldd r25,Z+1
 4120 1a84 9E87      		std Y+14,r25
 4121 1a86 8D87      		std Y+13,r24
 478:lp_solve_5.5/lp_SOS.c ****     nn = list[n+1];
 4122               		.loc 1 478 0
 4123 1a88 8D85      		ldd r24,Y+13
 4124 1a8a 9E85      		ldd r25,Y+14
 4125 1a8c 0196      		adiw r24,1
 4126 1a8e 880F      		lsl r24
 4127 1a90 991F      		rol r25
 4128 1a92 2985      		ldd r18,Y+9
 4129 1a94 3A85      		ldd r19,Y+10
 4130 1a96 820F      		add r24,r18
 4131 1a98 931F      		adc r25,r19
 4132 1a9a FC01      		movw r30,r24
 4133 1a9c 8081      		ld r24,Z
 4134 1a9e 9181      		ldd r25,Z+1
 4135 1aa0 988B      		std Y+16,r25
 4136 1aa2 8F87      		std Y+15,r24
 479:lp_solve_5.5/lp_SOS.c **** 
 480:lp_solve_5.5/lp_SOS.c ****     /* Case where variable indeces are to be incremented */
 481:lp_solve_5.5/lp_SOS.c ****     if(delta > 0) {
 4137               		.loc 1 481 0
 4138 1aa4 898D      		ldd r24,Y+25
 4139 1aa6 9A8D      		ldd r25,Y+26
 4140 1aa8 1816      		cp __zero_reg__,r24
 4141 1aaa 1906      		cpc __zero_reg__,r25
 4142 1aac 04F4      		brge .L137
 482:lp_solve_5.5/lp_SOS.c ****       for(i = 1; i <= n; i++) {
 4143               		.loc 1 482 0
 4144 1aae 81E0      		ldi r24,lo8(1)
 4145 1ab0 90E0      		ldi r25,0
 4146 1ab2 9A83      		std Y+2,r25
 4147 1ab4 8983      		std Y+1,r24
 4148 1ab6 00C0      		rjmp .L138
 4149               	.L140:
 483:lp_solve_5.5/lp_SOS.c ****         if(list[i] >= column)
 4150               		.loc 1 483 0
 4151 1ab8 8981      		ldd r24,Y+1
 4152 1aba 9A81      		ldd r25,Y+2
 4153 1abc 880F      		lsl r24
 4154 1abe 991F      		rol r25
 4155 1ac0 2985      		ldd r18,Y+9
 4156 1ac2 3A85      		ldd r19,Y+10
 4157 1ac4 820F      		add r24,r18
 4158 1ac6 931F      		adc r25,r19
 4159 1ac8 FC01      		movw r30,r24
 4160 1aca 2081      		ld r18,Z
 4161 1acc 3181      		ldd r19,Z+1
 4162 1ace 8F89      		ldd r24,Y+23
 4163 1ad0 988D      		ldd r25,Y+24
 4164 1ad2 2817      		cp r18,r24
 4165 1ad4 3907      		cpc r19,r25
 4166 1ad6 04F0      		brlt .L139
 484:lp_solve_5.5/lp_SOS.c ****           list[i] += delta;
 4167               		.loc 1 484 0
 4168 1ad8 8981      		ldd r24,Y+1
 4169 1ada 9A81      		ldd r25,Y+2
 4170 1adc 880F      		lsl r24
 4171 1ade 991F      		rol r25
 4172 1ae0 2985      		ldd r18,Y+9
 4173 1ae2 3A85      		ldd r19,Y+10
 4174 1ae4 820F      		add r24,r18
 4175 1ae6 931F      		adc r25,r19
 4176 1ae8 2981      		ldd r18,Y+1
 4177 1aea 3A81      		ldd r19,Y+2
 4178 1aec 220F      		lsl r18
 4179 1aee 331F      		rol r19
 4180 1af0 4985      		ldd r20,Y+9
 4181 1af2 5A85      		ldd r21,Y+10
 4182 1af4 240F      		add r18,r20
 4183 1af6 351F      		adc r19,r21
 4184 1af8 F901      		movw r30,r18
 4185 1afa 4081      		ld r20,Z
 4186 1afc 5181      		ldd r21,Z+1
 4187 1afe 298D      		ldd r18,Y+25
 4188 1b00 3A8D      		ldd r19,Y+26
 4189 1b02 240F      		add r18,r20
 4190 1b04 351F      		adc r19,r21
 4191 1b06 FC01      		movw r30,r24
 4192 1b08 3183      		std Z+1,r19
 4193 1b0a 2083      		st Z,r18
 4194               	.L139:
 482:lp_solve_5.5/lp_SOS.c ****       for(i = 1; i <= n; i++) {
 4195               		.loc 1 482 0 discriminator 2
 4196 1b0c 8981      		ldd r24,Y+1
 4197 1b0e 9A81      		ldd r25,Y+2
 4198 1b10 0196      		adiw r24,1
 4199 1b12 9A83      		std Y+2,r25
 4200 1b14 8983      		std Y+1,r24
 4201               	.L138:
 482:lp_solve_5.5/lp_SOS.c ****       for(i = 1; i <= n; i++) {
 4202               		.loc 1 482 0 is_stmt 0 discriminator 1
 4203 1b16 2981      		ldd r18,Y+1
 4204 1b18 3A81      		ldd r19,Y+2
 4205 1b1a 8D85      		ldd r24,Y+13
 4206 1b1c 9E85      		ldd r25,Y+14
 4207 1b1e 8217      		cp r24,r18
 4208 1b20 9307      		cpc r25,r19
 4209 1b22 04F4      		brge .L140
 4210 1b24 00C0      		rjmp .L136
 4211               	.L137:
 485:lp_solve_5.5/lp_SOS.c ****       }
 486:lp_solve_5.5/lp_SOS.c ****     }
 487:lp_solve_5.5/lp_SOS.c ****     /* Case where variables are to be deleted/indeces decremented */
 488:lp_solve_5.5/lp_SOS.c ****     else {
 489:lp_solve_5.5/lp_SOS.c ****       changed = 0;
 4212               		.loc 1 489 0 is_stmt 1
 4213 1b26 1886      		std Y+8,__zero_reg__
 4214 1b28 1F82      		std Y+7,__zero_reg__
 490:lp_solve_5.5/lp_SOS.c ****       if(usedmap != NULL) {
 4215               		.loc 1 490 0
 4216 1b2a 8B8D      		ldd r24,Y+27
 4217 1b2c 9C8D      		ldd r25,Y+28
 4218 1b2e 892B      		or r24,r25
 4219 1b30 01F4      		brne .+2
 4220 1b32 00C0      		rjmp .L141
 4221               	.LBB2:
 491:lp_solve_5.5/lp_SOS.c ****         int *newidx = NULL;
 4222               		.loc 1 491 0
 4223 1b34 1A8A      		std Y+18,__zero_reg__
 4224 1b36 198A      		std Y+17,__zero_reg__
 492:lp_solve_5.5/lp_SOS.c ****         /* Defer creation of index mapper until we are sure that a
 493:lp_solve_5.5/lp_SOS.c ****            member of this SOS is actually targeted for deletion */
 494:lp_solve_5.5/lp_SOS.c ****         if(newidx == NULL) {
 4225               		.loc 1 494 0
 4226 1b38 8989      		ldd r24,Y+17
 4227 1b3a 9A89      		ldd r25,Y+18
 4228 1b3c 892B      		or r24,r25
 4229 1b3e 01F0      		breq .+2
 4230 1b40 00C0      		rjmp .L142
 495:lp_solve_5.5/lp_SOS.c ****           allocINT(group->lp, &newidx, group->lp->columns+1, TRUE);
 4231               		.loc 1 495 0
 4232 1b42 8B89      		ldd r24,Y+19
 4233 1b44 9C89      		ldd r25,Y+20
 4234 1b46 FC01      		movw r30,r24
 4235 1b48 8081      		ld r24,Z
 4236 1b4a 9181      		ldd r25,Z+1
 4237 1b4c 8451      		subi r24,20
 4238 1b4e 9E4F      		sbci r25,-2
 4239 1b50 FC01      		movw r30,r24
 4240 1b52 8081      		ld r24,Z
 4241 1b54 9181      		ldd r25,Z+1
 4242 1b56 AC01      		movw r20,r24
 4243 1b58 4F5F      		subi r20,-1
 4244 1b5a 5F4F      		sbci r21,-1
 4245 1b5c 8B89      		ldd r24,Y+19
 4246 1b5e 9C89      		ldd r25,Y+20
 4247 1b60 FC01      		movw r30,r24
 4248 1b62 8081      		ld r24,Z
 4249 1b64 9181      		ldd r25,Z+1
 4250 1b66 BE01      		movw r22,r28
 4251 1b68 6F5E      		subi r22,-17
 4252 1b6a 7F4F      		sbci r23,-1
 4253 1b6c 21E0      		ldi r18,lo8(1)
 4254 1b6e 0E94 0000 		call allocINT
 496:lp_solve_5.5/lp_SOS.c ****           for(i = firstActiveLink(usedmap), ii = 1; i != 0;
 4255               		.loc 1 496 0
 4256 1b72 8B8D      		ldd r24,Y+27
 4257 1b74 9C8D      		ldd r25,Y+28
 4258 1b76 0E94 0000 		call firstActiveLink
 4259 1b7a 9A83      		std Y+2,r25
 4260 1b7c 8983      		std Y+1,r24
 4261 1b7e 81E0      		ldi r24,lo8(1)
 4262 1b80 90E0      		ldi r25,0
 4263 1b82 9C83      		std Y+4,r25
 4264 1b84 8B83      		std Y+3,r24
 4265 1b86 00C0      		rjmp .L143
 4266               	.L144:
 497:lp_solve_5.5/lp_SOS.c ****               i = nextActiveLink(usedmap, i), ii++)
 498:lp_solve_5.5/lp_SOS.c ****             newidx[i] = ii;
 4267               		.loc 1 498 0
 4268 1b88 2989      		ldd r18,Y+17
 4269 1b8a 3A89      		ldd r19,Y+18
 4270 1b8c 8981      		ldd r24,Y+1
 4271 1b8e 9A81      		ldd r25,Y+2
 4272 1b90 880F      		lsl r24
 4273 1b92 991F      		rol r25
 4274 1b94 820F      		add r24,r18
 4275 1b96 931F      		adc r25,r19
 4276 1b98 2B81      		ldd r18,Y+3
 4277 1b9a 3C81      		ldd r19,Y+4
 4278 1b9c FC01      		movw r30,r24
 4279 1b9e 3183      		std Z+1,r19
 4280 1ba0 2083      		st Z,r18
 497:lp_solve_5.5/lp_SOS.c ****               i = nextActiveLink(usedmap, i), ii++)
 4281               		.loc 1 497 0
 4282 1ba2 2981      		ldd r18,Y+1
 4283 1ba4 3A81      		ldd r19,Y+2
 4284 1ba6 8B8D      		ldd r24,Y+27
 4285 1ba8 9C8D      		ldd r25,Y+28
 4286 1baa B901      		movw r22,r18
 4287 1bac 0E94 0000 		call nextActiveLink
 4288 1bb0 9A83      		std Y+2,r25
 4289 1bb2 8983      		std Y+1,r24
 4290 1bb4 8B81      		ldd r24,Y+3
 4291 1bb6 9C81      		ldd r25,Y+4
 4292 1bb8 0196      		adiw r24,1
 4293 1bba 9C83      		std Y+4,r25
 4294 1bbc 8B83      		std Y+3,r24
 4295               	.L143:
 496:lp_solve_5.5/lp_SOS.c ****           for(i = firstActiveLink(usedmap), ii = 1; i != 0;
 4296               		.loc 1 496 0 discriminator 1
 4297 1bbe 8981      		ldd r24,Y+1
 4298 1bc0 9A81      		ldd r25,Y+2
 4299 1bc2 892B      		or r24,r25
 4300 1bc4 01F4      		brne .L144
 4301               	.L142:
 499:lp_solve_5.5/lp_SOS.c ****         }
 500:lp_solve_5.5/lp_SOS.c ****         for(i = 1, ii = 0; i <= n; i++) {
 4302               		.loc 1 500 0
 4303 1bc6 81E0      		ldi r24,lo8(1)
 4304 1bc8 90E0      		ldi r25,0
 4305 1bca 9A83      		std Y+2,r25
 4306 1bcc 8983      		std Y+1,r24
 4307 1bce 1C82      		std Y+4,__zero_reg__
 4308 1bd0 1B82      		std Y+3,__zero_reg__
 4309 1bd2 00C0      		rjmp .L145
 4310               	.L148:
 501:lp_solve_5.5/lp_SOS.c ****           nr = list[i];
 4311               		.loc 1 501 0
 4312 1bd4 8981      		ldd r24,Y+1
 4313 1bd6 9A81      		ldd r25,Y+2
 4314 1bd8 880F      		lsl r24
 4315 1bda 991F      		rol r25
 4316 1bdc 2985      		ldd r18,Y+9
 4317 1bde 3A85      		ldd r19,Y+10
 4318 1be0 820F      		add r24,r18
 4319 1be2 931F      		adc r25,r19
 4320 1be4 FC01      		movw r30,r24
 4321 1be6 8081      		ld r24,Z
 4322 1be8 9181      		ldd r25,Z+1
 4323 1bea 9E83      		std Y+6,r25
 4324 1bec 8D83      		std Y+5,r24
 502:lp_solve_5.5/lp_SOS.c ****           /* Check if this SOS variable should be deleted */
 503:lp_solve_5.5/lp_SOS.c ****           if(!isActiveLink(usedmap, nr))
 4325               		.loc 1 503 0
 4326 1bee 2D81      		ldd r18,Y+5
 4327 1bf0 3E81      		ldd r19,Y+6
 4328 1bf2 8B8D      		ldd r24,Y+27
 4329 1bf4 9C8D      		ldd r25,Y+28
 4330 1bf6 B901      		movw r22,r18
 4331 1bf8 0E94 0000 		call isActiveLink
 4332 1bfc 8823      		tst r24
 4333 1bfe 01F4      		brne .+2
 4334 1c00 00C0      		rjmp .L158
 504:lp_solve_5.5/lp_SOS.c ****             continue;
 505:lp_solve_5.5/lp_SOS.c **** 
 506:lp_solve_5.5/lp_SOS.c ****           /* If the index is "high" then make adjustment and shift */
 507:lp_solve_5.5/lp_SOS.c ****           changed++;
 4335               		.loc 1 507 0
 4336 1c02 8F81      		ldd r24,Y+7
 4337 1c04 9885      		ldd r25,Y+8
 4338 1c06 0196      		adiw r24,1
 4339 1c08 9887      		std Y+8,r25
 4340 1c0a 8F83      		std Y+7,r24
 508:lp_solve_5.5/lp_SOS.c ****           ii++;
 4341               		.loc 1 508 0
 4342 1c0c 8B81      		ldd r24,Y+3
 4343 1c0e 9C81      		ldd r25,Y+4
 4344 1c10 0196      		adiw r24,1
 4345 1c12 9C83      		std Y+4,r25
 4346 1c14 8B83      		std Y+3,r24
 509:lp_solve_5.5/lp_SOS.c ****           list[ii] = newidx[nr];
 4347               		.loc 1 509 0
 4348 1c16 8B81      		ldd r24,Y+3
 4349 1c18 9C81      		ldd r25,Y+4
 4350 1c1a 880F      		lsl r24
 4351 1c1c 991F      		rol r25
 4352 1c1e 2985      		ldd r18,Y+9
 4353 1c20 3A85      		ldd r19,Y+10
 4354 1c22 820F      		add r24,r18
 4355 1c24 931F      		adc r25,r19
 4356 1c26 4989      		ldd r20,Y+17
 4357 1c28 5A89      		ldd r21,Y+18
 4358 1c2a 2D81      		ldd r18,Y+5
 4359 1c2c 3E81      		ldd r19,Y+6
 4360 1c2e 220F      		lsl r18
 4361 1c30 331F      		rol r19
 4362 1c32 240F      		add r18,r20
 4363 1c34 351F      		adc r19,r21
 4364 1c36 F901      		movw r30,r18
 4365 1c38 2081      		ld r18,Z
 4366 1c3a 3181      		ldd r19,Z+1
 4367 1c3c FC01      		movw r30,r24
 4368 1c3e 3183      		std Z+1,r19
 4369 1c40 2083      		st Z,r18
 510:lp_solve_5.5/lp_SOS.c ****           weights[ii] = weights[i];
 4370               		.loc 1 510 0
 4371 1c42 8B81      		ldd r24,Y+3
 4372 1c44 9C81      		ldd r25,Y+4
 4373 1c46 880F      		lsl r24
 4374 1c48 991F      		rol r25
 4375 1c4a 880F      		lsl r24
 4376 1c4c 991F      		rol r25
 4377 1c4e 2B85      		ldd r18,Y+11
 4378 1c50 3C85      		ldd r19,Y+12
 4379 1c52 280F      		add r18,r24
 4380 1c54 391F      		adc r19,r25
 4381 1c56 8981      		ldd r24,Y+1
 4382 1c58 9A81      		ldd r25,Y+2
 4383 1c5a 880F      		lsl r24
 4384 1c5c 991F      		rol r25
 4385 1c5e 880F      		lsl r24
 4386 1c60 991F      		rol r25
 4387 1c62 4B85      		ldd r20,Y+11
 4388 1c64 5C85      		ldd r21,Y+12
 4389 1c66 840F      		add r24,r20
 4390 1c68 951F      		adc r25,r21
 4391 1c6a FC01      		movw r30,r24
 4392 1c6c 8081      		ld r24,Z
 4393 1c6e 9181      		ldd r25,Z+1
 4394 1c70 A281      		ldd r26,Z+2
 4395 1c72 B381      		ldd r27,Z+3
 4396 1c74 F901      		movw r30,r18
 4397 1c76 8083      		st Z,r24
 4398 1c78 9183      		std Z+1,r25
 4399 1c7a A283      		std Z+2,r26
 4400 1c7c B383      		std Z+3,r27
 4401 1c7e 00C0      		rjmp .L147
 4402               	.L158:
 504:lp_solve_5.5/lp_SOS.c **** 
 4403               		.loc 1 504 0
 4404 1c80 0000      		nop
 4405               	.L147:
 500:lp_solve_5.5/lp_SOS.c ****           nr = list[i];
 4406               		.loc 1 500 0 discriminator 2
 4407 1c82 8981      		ldd r24,Y+1
 4408 1c84 9A81      		ldd r25,Y+2
 4409 1c86 0196      		adiw r24,1
 4410 1c88 9A83      		std Y+2,r25
 4411 1c8a 8983      		std Y+1,r24
 4412               	.L145:
 500:lp_solve_5.5/lp_SOS.c ****           nr = list[i];
 4413               		.loc 1 500 0 is_stmt 0 discriminator 1
 4414 1c8c 2981      		ldd r18,Y+1
 4415 1c8e 3A81      		ldd r19,Y+2
 4416 1c90 8D85      		ldd r24,Y+13
 4417 1c92 9E85      		ldd r25,Y+14
 4418 1c94 8217      		cp r24,r18
 4419 1c96 9307      		cpc r25,r19
 4420 1c98 04F0      		brlt .+2
 4421 1c9a 00C0      		rjmp .L148
 511:lp_solve_5.5/lp_SOS.c ****         }
 512:lp_solve_5.5/lp_SOS.c ****         FREE(newidx);
 4422               		.loc 1 512 0 is_stmt 1
 4423 1c9c 8989      		ldd r24,Y+17
 4424 1c9e 9A89      		ldd r25,Y+18
 4425 1ca0 892B      		or r24,r25
 4426 1ca2 01F4      		brne .+2
 4427 1ca4 00C0      		rjmp .L150
 4428               		.loc 1 512 0 is_stmt 0 discriminator 1
 4429 1ca6 8989      		ldd r24,Y+17
 4430 1ca8 9A89      		ldd r25,Y+18
 4431 1caa 0E94 0000 		call free
 4432 1cae 1A8A      		std Y+18,__zero_reg__
 4433 1cb0 198A      		std Y+17,__zero_reg__
 4434 1cb2 00C0      		rjmp .L150
 4435               	.L141:
 4436               	.LBE2:
 513:lp_solve_5.5/lp_SOS.c ****       }
 514:lp_solve_5.5/lp_SOS.c ****       else
 515:lp_solve_5.5/lp_SOS.c ****         for(i = 1, ii = 0; i <= n; i++) {
 4437               		.loc 1 515 0 is_stmt 1
 4438 1cb4 81E0      		ldi r24,lo8(1)
 4439 1cb6 90E0      		ldi r25,0
 4440 1cb8 9A83      		std Y+2,r25
 4441 1cba 8983      		std Y+1,r24
 4442 1cbc 1C82      		std Y+4,__zero_reg__
 4443 1cbe 1B82      		std Y+3,__zero_reg__
 4444 1cc0 00C0      		rjmp .L151
 4445               	.L155:
 516:lp_solve_5.5/lp_SOS.c ****           nr = list[i];
 4446               		.loc 1 516 0
 4447 1cc2 8981      		ldd r24,Y+1
 4448 1cc4 9A81      		ldd r25,Y+2
 4449 1cc6 880F      		lsl r24
 4450 1cc8 991F      		rol r25
 4451 1cca 2985      		ldd r18,Y+9
 4452 1ccc 3A85      		ldd r19,Y+10
 4453 1cce 820F      		add r24,r18
 4454 1cd0 931F      		adc r25,r19
 4455 1cd2 FC01      		movw r30,r24
 4456 1cd4 8081      		ld r24,Z
 4457 1cd6 9181      		ldd r25,Z+1
 4458 1cd8 9E83      		std Y+6,r25
 4459 1cda 8D83      		std Y+5,r24
 517:lp_solve_5.5/lp_SOS.c ****           /* Check if this SOS variable should be deleted */
 518:lp_solve_5.5/lp_SOS.c ****           if((nr >= column) && (nr < column-delta))
 4460               		.loc 1 518 0
 4461 1cdc 2D81      		ldd r18,Y+5
 4462 1cde 3E81      		ldd r19,Y+6
 4463 1ce0 8F89      		ldd r24,Y+23
 4464 1ce2 988D      		ldd r25,Y+24
 4465 1ce4 2817      		cp r18,r24
 4466 1ce6 3907      		cpc r19,r25
 4467 1ce8 04F0      		brlt .L152
 4468               		.loc 1 518 0 is_stmt 0 discriminator 1
 4469 1cea 2F89      		ldd r18,Y+23
 4470 1cec 388D      		ldd r19,Y+24
 4471 1cee 898D      		ldd r24,Y+25
 4472 1cf0 9A8D      		ldd r25,Y+26
 4473 1cf2 281B      		sub r18,r24
 4474 1cf4 390B      		sbc r19,r25
 4475 1cf6 8D81      		ldd r24,Y+5
 4476 1cf8 9E81      		ldd r25,Y+6
 4477 1cfa 8217      		cp r24,r18
 4478 1cfc 9307      		cpc r25,r19
 4479 1cfe 04F4      		brge .+2
 4480 1d00 00C0      		rjmp .L159
 4481               	.L152:
 519:lp_solve_5.5/lp_SOS.c ****             continue;
 520:lp_solve_5.5/lp_SOS.c ****           /* If the index is "high" then decrement */
 521:lp_solve_5.5/lp_SOS.c ****           if(nr > column) {
 4482               		.loc 1 521 0 is_stmt 1
 4483 1d02 2D81      		ldd r18,Y+5
 4484 1d04 3E81      		ldd r19,Y+6
 4485 1d06 8F89      		ldd r24,Y+23
 4486 1d08 988D      		ldd r25,Y+24
 4487 1d0a 8217      		cp r24,r18
 4488 1d0c 9307      		cpc r25,r19
 4489 1d0e 04F4      		brge .L154
 522:lp_solve_5.5/lp_SOS.c ****             changed++;
 4490               		.loc 1 522 0
 4491 1d10 8F81      		ldd r24,Y+7
 4492 1d12 9885      		ldd r25,Y+8
 4493 1d14 0196      		adiw r24,1
 4494 1d16 9887      		std Y+8,r25
 4495 1d18 8F83      		std Y+7,r24
 523:lp_solve_5.5/lp_SOS.c ****             nr += delta;
 4496               		.loc 1 523 0
 4497 1d1a 2D81      		ldd r18,Y+5
 4498 1d1c 3E81      		ldd r19,Y+6
 4499 1d1e 898D      		ldd r24,Y+25
 4500 1d20 9A8D      		ldd r25,Y+26
 4501 1d22 820F      		add r24,r18
 4502 1d24 931F      		adc r25,r19
 4503 1d26 9E83      		std Y+6,r25
 4504 1d28 8D83      		std Y+5,r24
 4505               	.L154:
 524:lp_solve_5.5/lp_SOS.c ****           }
 525:lp_solve_5.5/lp_SOS.c ****           ii++;
 4506               		.loc 1 525 0
 4507 1d2a 8B81      		ldd r24,Y+3
 4508 1d2c 9C81      		ldd r25,Y+4
 4509 1d2e 0196      		adiw r24,1
 4510 1d30 9C83      		std Y+4,r25
 4511 1d32 8B83      		std Y+3,r24
 526:lp_solve_5.5/lp_SOS.c ****           list[ii] = nr;
 4512               		.loc 1 526 0
 4513 1d34 8B81      		ldd r24,Y+3
 4514 1d36 9C81      		ldd r25,Y+4
 4515 1d38 880F      		lsl r24
 4516 1d3a 991F      		rol r25
 4517 1d3c 2985      		ldd r18,Y+9
 4518 1d3e 3A85      		ldd r19,Y+10
 4519 1d40 820F      		add r24,r18
 4520 1d42 931F      		adc r25,r19
 4521 1d44 2D81      		ldd r18,Y+5
 4522 1d46 3E81      		ldd r19,Y+6
 4523 1d48 FC01      		movw r30,r24
 4524 1d4a 3183      		std Z+1,r19
 4525 1d4c 2083      		st Z,r18
 527:lp_solve_5.5/lp_SOS.c ****           weights[ii] = weights[i];
 4526               		.loc 1 527 0
 4527 1d4e 8B81      		ldd r24,Y+3
 4528 1d50 9C81      		ldd r25,Y+4
 4529 1d52 880F      		lsl r24
 4530 1d54 991F      		rol r25
 4531 1d56 880F      		lsl r24
 4532 1d58 991F      		rol r25
 4533 1d5a 2B85      		ldd r18,Y+11
 4534 1d5c 3C85      		ldd r19,Y+12
 4535 1d5e 280F      		add r18,r24
 4536 1d60 391F      		adc r19,r25
 4537 1d62 8981      		ldd r24,Y+1
 4538 1d64 9A81      		ldd r25,Y+2
 4539 1d66 880F      		lsl r24
 4540 1d68 991F      		rol r25
 4541 1d6a 880F      		lsl r24
 4542 1d6c 991F      		rol r25
 4543 1d6e 4B85      		ldd r20,Y+11
 4544 1d70 5C85      		ldd r21,Y+12
 4545 1d72 840F      		add r24,r20
 4546 1d74 951F      		adc r25,r21
 4547 1d76 FC01      		movw r30,r24
 4548 1d78 8081      		ld r24,Z
 4549 1d7a 9181      		ldd r25,Z+1
 4550 1d7c A281      		ldd r26,Z+2
 4551 1d7e B381      		ldd r27,Z+3
 4552 1d80 F901      		movw r30,r18
 4553 1d82 8083      		st Z,r24
 4554 1d84 9183      		std Z+1,r25
 4555 1d86 A283      		std Z+2,r26
 4556 1d88 B383      		std Z+3,r27
 4557 1d8a 00C0      		rjmp .L153
 4558               	.L159:
 519:lp_solve_5.5/lp_SOS.c ****           /* If the index is "high" then decrement */
 4559               		.loc 1 519 0
 4560 1d8c 0000      		nop
 4561               	.L153:
 515:lp_solve_5.5/lp_SOS.c ****           nr = list[i];
 4562               		.loc 1 515 0 discriminator 2
 4563 1d8e 8981      		ldd r24,Y+1
 4564 1d90 9A81      		ldd r25,Y+2
 4565 1d92 0196      		adiw r24,1
 4566 1d94 9A83      		std Y+2,r25
 4567 1d96 8983      		std Y+1,r24
 4568               	.L151:
 515:lp_solve_5.5/lp_SOS.c ****           nr = list[i];
 4569               		.loc 1 515 0 is_stmt 0 discriminator 1
 4570 1d98 2981      		ldd r18,Y+1
 4571 1d9a 3A81      		ldd r19,Y+2
 4572 1d9c 8D85      		ldd r24,Y+13
 4573 1d9e 9E85      		ldd r25,Y+14
 4574 1da0 8217      		cp r24,r18
 4575 1da2 9307      		cpc r25,r19
 4576 1da4 04F0      		brlt .+2
 4577 1da6 00C0      		rjmp .L155
 4578               	.L150:
 528:lp_solve_5.5/lp_SOS.c ****         }
 529:lp_solve_5.5/lp_SOS.c ****       /* Update the SOS length / type indicators */
 530:lp_solve_5.5/lp_SOS.c ****       if(ii < n) {
 4579               		.loc 1 530 0 is_stmt 1
 4580 1da8 2B81      		ldd r18,Y+3
 4581 1daa 3C81      		ldd r19,Y+4
 4582 1dac 8D85      		ldd r24,Y+13
 4583 1dae 9E85      		ldd r25,Y+14
 4584 1db0 2817      		cp r18,r24
 4585 1db2 3907      		cpc r19,r25
 4586 1db4 04F4      		brge .L156
 531:lp_solve_5.5/lp_SOS.c ****         list[0] = ii;
 4587               		.loc 1 531 0
 4588 1db6 8985      		ldd r24,Y+9
 4589 1db8 9A85      		ldd r25,Y+10
 4590 1dba 2B81      		ldd r18,Y+3
 4591 1dbc 3C81      		ldd r19,Y+4
 4592 1dbe FC01      		movw r30,r24
 4593 1dc0 3183      		std Z+1,r19
 4594 1dc2 2083      		st Z,r18
 532:lp_solve_5.5/lp_SOS.c ****         list[ii+1] = nn;
 4595               		.loc 1 532 0
 4596 1dc4 8B81      		ldd r24,Y+3
 4597 1dc6 9C81      		ldd r25,Y+4
 4598 1dc8 0196      		adiw r24,1
 4599 1dca 880F      		lsl r24
 4600 1dcc 991F      		rol r25
 4601 1dce 2985      		ldd r18,Y+9
 4602 1dd0 3A85      		ldd r19,Y+10
 4603 1dd2 820F      		add r24,r18
 4604 1dd4 931F      		adc r25,r19
 4605 1dd6 2F85      		ldd r18,Y+15
 4606 1dd8 3889      		ldd r19,Y+16
 4607 1dda FC01      		movw r30,r24
 4608 1ddc 3183      		std Z+1,r19
 4609 1dde 2083      		st Z,r18
 4610               	.L156:
 533:lp_solve_5.5/lp_SOS.c ****       }
 534:lp_solve_5.5/lp_SOS.c **** 
 535:lp_solve_5.5/lp_SOS.c ****      /* Update mapping arrays to search large SOS's faster */
 536:lp_solve_5.5/lp_SOS.c ****       if(forceresort && ((ii < n) || (changed > 0)))
 4611               		.loc 1 536 0
 4612 1de0 8D8D      		ldd r24,Y+29
 4613 1de2 8823      		tst r24
 4614 1de4 01F0      		breq .L136
 4615               		.loc 1 536 0 is_stmt 0 discriminator 1
 4616 1de6 2B81      		ldd r18,Y+3
 4617 1de8 3C81      		ldd r19,Y+4
 4618 1dea 8D85      		ldd r24,Y+13
 4619 1dec 9E85      		ldd r25,Y+14
 4620 1dee 2817      		cp r18,r24
 4621 1df0 3907      		cpc r19,r25
 4622 1df2 04F0      		brlt .L157
 4623               		.loc 1 536 0 discriminator 2
 4624 1df4 8F81      		ldd r24,Y+7
 4625 1df6 9885      		ldd r25,Y+8
 4626 1df8 1816      		cp __zero_reg__,r24
 4627 1dfa 1906      		cpc __zero_reg__,r25
 4628 1dfc 04F4      		brge .L136
 4629               	.L157:
 537:lp_solve_5.5/lp_SOS.c ****         SOS_member_sortlist(group, sosindex);
 4630               		.loc 1 537 0 is_stmt 1
 4631 1dfe 2D89      		ldd r18,Y+21
 4632 1e00 3E89      		ldd r19,Y+22
 4633 1e02 8B89      		ldd r24,Y+19
 4634 1e04 9C89      		ldd r25,Y+20
 4635 1e06 B901      		movw r22,r18
 4636 1e08 0E94 0000 		call SOS_member_sortlist
 4637               	.L136:
 538:lp_solve_5.5/lp_SOS.c ****     }
 539:lp_solve_5.5/lp_SOS.c **** 
 540:lp_solve_5.5/lp_SOS.c ****   }
 541:lp_solve_5.5/lp_SOS.c ****   return(TRUE);
 4638               		.loc 1 541 0
 4639 1e0c 81E0      		ldi r24,lo8(1)
 4640               	.L134:
 4641               	/* epilogue start */
 542:lp_solve_5.5/lp_SOS.c **** 
 543:lp_solve_5.5/lp_SOS.c **** }
 4642               		.loc 1 543 0
 4643 1e0e 6D96      		adiw r28,29
 4644 1e10 0FB6      		in __tmp_reg__,__SREG__
 4645 1e12 F894      		cli
 4646 1e14 DEBF      		out __SP_H__,r29
 4647 1e16 0FBE      		out __SREG__,__tmp_reg__
 4648 1e18 CDBF      		out __SP_L__,r28
 4649 1e1a DF91      		pop r29
 4650 1e1c CF91      		pop r28
 4651 1e1e 1F91      		pop r17
 4652 1e20 0F91      		pop r16
 4653 1e22 EF90      		pop r14
 4654 1e24 0895      		ret
 4655               		.cfi_endproc
 4656               	.LFE19:
 4658               	.global	SOS_member_count
 4660               	SOS_member_count:
 4661               	.LFB20:
 544:lp_solve_5.5/lp_SOS.c **** 
 545:lp_solve_5.5/lp_SOS.c **** int SOS_member_count(SOSgroup *group, int sosindex)
 546:lp_solve_5.5/lp_SOS.c **** {
 4662               		.loc 1 546 0
 4663               		.cfi_startproc
 4664 1e26 CF93      		push r28
 4665               	.LCFI69:
 4666               		.cfi_def_cfa_offset 3
 4667               		.cfi_offset 28, -2
 4668 1e28 DF93      		push r29
 4669               	.LCFI70:
 4670               		.cfi_def_cfa_offset 4
 4671               		.cfi_offset 29, -3
 4672 1e2a 00D0      		rcall .
 4673 1e2c 00D0      		rcall .
 4674 1e2e 00D0      		rcall .
 4675               	.LCFI71:
 4676               		.cfi_def_cfa_offset 10
 4677 1e30 CDB7      		in r28,__SP_L__
 4678 1e32 DEB7      		in r29,__SP_H__
 4679               	.LCFI72:
 4680               		.cfi_def_cfa_register 28
 4681               	/* prologue: function */
 4682               	/* frame size = 6 */
 4683               	/* stack size = 8 */
 4684               	.L__stack_usage = 8
 4685 1e34 9C83      		std Y+4,r25
 4686 1e36 8B83      		std Y+3,r24
 4687 1e38 7E83      		std Y+6,r23
 4688 1e3a 6D83      		std Y+5,r22
 547:lp_solve_5.5/lp_SOS.c ****   SOSrec *SOS;
 548:lp_solve_5.5/lp_SOS.c **** 
 549:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
 550:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
 551:lp_solve_5.5/lp_SOS.c ****     report(group->lp, IMPORTANT, "SOS_member_count: Invalid SOS index %d\n", sosindex);
 552:lp_solve_5.5/lp_SOS.c ****     return( -1 );
 553:lp_solve_5.5/lp_SOS.c ****   }
 554:lp_solve_5.5/lp_SOS.c **** #endif
 555:lp_solve_5.5/lp_SOS.c ****   SOS = group->sos_list[sosindex-1];
 4689               		.loc 1 555 0
 4690 1e3c 8B81      		ldd r24,Y+3
 4691 1e3e 9C81      		ldd r25,Y+4
 4692 1e40 FC01      		movw r30,r24
 4693 1e42 2281      		ldd r18,Z+2
 4694 1e44 3381      		ldd r19,Z+3
 4695 1e46 8D81      		ldd r24,Y+5
 4696 1e48 9E81      		ldd r25,Y+6
 4697 1e4a 8150      		subi r24,1
 4698 1e4c 9048      		sbci r25,-128
 4699 1e4e 880F      		lsl r24
 4700 1e50 991F      		rol r25
 4701 1e52 820F      		add r24,r18
 4702 1e54 931F      		adc r25,r19
 4703 1e56 FC01      		movw r30,r24
 4704 1e58 8081      		ld r24,Z
 4705 1e5a 9181      		ldd r25,Z+1
 4706 1e5c 9A83      		std Y+2,r25
 4707 1e5e 8983      		std Y+1,r24
 556:lp_solve_5.5/lp_SOS.c ****   return( SOS->members[0] );
 4708               		.loc 1 556 0
 4709 1e60 8981      		ldd r24,Y+1
 4710 1e62 9A81      		ldd r25,Y+2
 4711 1e64 FC01      		movw r30,r24
 4712 1e66 8585      		ldd r24,Z+13
 4713 1e68 9685      		ldd r25,Z+14
 4714 1e6a FC01      		movw r30,r24
 4715 1e6c 8081      		ld r24,Z
 4716 1e6e 9181      		ldd r25,Z+1
 4717               	/* epilogue start */
 557:lp_solve_5.5/lp_SOS.c **** }
 4718               		.loc 1 557 0
 4719 1e70 2696      		adiw r28,6
 4720 1e72 0FB6      		in __tmp_reg__,__SREG__
 4721 1e74 F894      		cli
 4722 1e76 DEBF      		out __SP_H__,r29
 4723 1e78 0FBE      		out __SREG__,__tmp_reg__
 4724 1e7a CDBF      		out __SP_L__,r28
 4725 1e7c DF91      		pop r29
 4726 1e7e CF91      		pop r28
 4727 1e80 0895      		ret
 4728               		.cfi_endproc
 4729               	.LFE20:
 4731               	.global	SOS_member_delete
 4733               	SOS_member_delete:
 4734               	.LFB21:
 558:lp_solve_5.5/lp_SOS.c **** 
 559:lp_solve_5.5/lp_SOS.c **** int SOS_member_delete(SOSgroup *group, int sosindex, int member)
 560:lp_solve_5.5/lp_SOS.c **** {
 4735               		.loc 1 560 0
 4736               		.cfi_startproc
 4737 1e82 CF93      		push r28
 4738               	.LCFI73:
 4739               		.cfi_def_cfa_offset 3
 4740               		.cfi_offset 28, -2
 4741 1e84 DF93      		push r29
 4742               	.LCFI74:
 4743               		.cfi_def_cfa_offset 4
 4744               		.cfi_offset 29, -3
 4745 1e86 CDB7      		in r28,__SP_L__
 4746 1e88 DEB7      		in r29,__SP_H__
 4747               	.LCFI75:
 4748               		.cfi_def_cfa_register 28
 4749 1e8a 6697      		sbiw r28,22
 4750               	.LCFI76:
 4751               		.cfi_def_cfa_offset 26
 4752 1e8c 0FB6      		in __tmp_reg__,__SREG__
 4753 1e8e F894      		cli
 4754 1e90 DEBF      		out __SP_H__,r29
 4755 1e92 0FBE      		out __SREG__,__tmp_reg__
 4756 1e94 CDBF      		out __SP_L__,r28
 4757               	/* prologue: function */
 4758               	/* frame size = 22 */
 4759               	/* stack size = 24 */
 4760               	.L__stack_usage = 24
 4761 1e96 9A8B      		std Y+18,r25
 4762 1e98 898B      		std Y+17,r24
 4763 1e9a 7C8B      		std Y+20,r23
 4764 1e9c 6B8B      		std Y+19,r22
 4765 1e9e 5E8B      		std Y+22,r21
 4766 1ea0 4D8B      		std Y+21,r20
 561:lp_solve_5.5/lp_SOS.c ****   int   *list, i, i2, k, n, nn = 0;
 4767               		.loc 1 561 0
 4768 1ea2 1E82      		std Y+6,__zero_reg__
 4769 1ea4 1D82      		std Y+5,__zero_reg__
 562:lp_solve_5.5/lp_SOS.c ****   SOSrec *SOS;
 563:lp_solve_5.5/lp_SOS.c ****   lprec  *lp = group->lp;
 4770               		.loc 1 563 0
 4771 1ea6 8989      		ldd r24,Y+17
 4772 1ea8 9A89      		ldd r25,Y+18
 4773 1eaa FC01      		movw r30,r24
 4774 1eac 8081      		ld r24,Z
 4775 1eae 9181      		ldd r25,Z+1
 4776 1eb0 9887      		std Y+8,r25
 4777 1eb2 8F83      		std Y+7,r24
 564:lp_solve_5.5/lp_SOS.c **** 
 565:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
 566:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
 567:lp_solve_5.5/lp_SOS.c ****     report(group->lp, IMPORTANT, "SOS_member_delete: Invalid SOS index %d\n", sosindex);
 568:lp_solve_5.5/lp_SOS.c ****     return( -1 );
 569:lp_solve_5.5/lp_SOS.c ****   }
 570:lp_solve_5.5/lp_SOS.c **** #endif
 571:lp_solve_5.5/lp_SOS.c **** 
 572:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0) {
 4778               		.loc 1 572 0
 4779 1eb4 8B89      		ldd r24,Y+19
 4780 1eb6 9C89      		ldd r25,Y+20
 4781 1eb8 892B      		or r24,r25
 4782 1eba 01F0      		breq .+2
 4783 1ebc 00C0      		rjmp .L163
 573:lp_solve_5.5/lp_SOS.c ****     for(i = group->memberpos[member-1]; i < group->memberpos[member]; i++) {
 4784               		.loc 1 573 0
 4785 1ebe 8989      		ldd r24,Y+17
 4786 1ec0 9A89      		ldd r25,Y+18
 4787 1ec2 FC01      		movw r30,r24
 4788 1ec4 2685      		ldd r18,Z+14
 4789 1ec6 3785      		ldd r19,Z+15
 4790 1ec8 8D89      		ldd r24,Y+21
 4791 1eca 9E89      		ldd r25,Y+22
 4792 1ecc 8150      		subi r24,1
 4793 1ece 9048      		sbci r25,-128
 4794 1ed0 880F      		lsl r24
 4795 1ed2 991F      		rol r25
 4796 1ed4 820F      		add r24,r18
 4797 1ed6 931F      		adc r25,r19
 4798 1ed8 FC01      		movw r30,r24
 4799 1eda 8081      		ld r24,Z
 4800 1edc 9181      		ldd r25,Z+1
 4801 1ede 9A83      		std Y+2,r25
 4802 1ee0 8983      		std Y+1,r24
 4803 1ee2 00C0      		rjmp .L164
 4804               	.L168:
 574:lp_solve_5.5/lp_SOS.c ****       k = group->membership[i];
 4805               		.loc 1 574 0
 4806 1ee4 8989      		ldd r24,Y+17
 4807 1ee6 9A89      		ldd r25,Y+18
 4808 1ee8 FC01      		movw r30,r24
 4809 1eea 2485      		ldd r18,Z+12
 4810 1eec 3585      		ldd r19,Z+13
 4811 1eee 8981      		ldd r24,Y+1
 4812 1ef0 9A81      		ldd r25,Y+2
 4813 1ef2 880F      		lsl r24
 4814 1ef4 991F      		rol r25
 4815 1ef6 820F      		add r24,r18
 4816 1ef8 931F      		adc r25,r19
 4817 1efa FC01      		movw r30,r24
 4818 1efc 8081      		ld r24,Z
 4819 1efe 9181      		ldd r25,Z+1
 4820 1f00 9C83      		std Y+4,r25
 4821 1f02 8B83      		std Y+3,r24
 575:lp_solve_5.5/lp_SOS.c ****       n = SOS_member_delete(group, k, member);
 4822               		.loc 1 575 0
 4823 1f04 4D89      		ldd r20,Y+21
 4824 1f06 5E89      		ldd r21,Y+22
 4825 1f08 2B81      		ldd r18,Y+3
 4826 1f0a 3C81      		ldd r19,Y+4
 4827 1f0c 8989      		ldd r24,Y+17
 4828 1f0e 9A89      		ldd r25,Y+18
 4829 1f10 B901      		movw r22,r18
 4830 1f12 0E94 0000 		call SOS_member_delete
 4831 1f16 9A87      		std Y+10,r25
 4832 1f18 8987      		std Y+9,r24
 576:lp_solve_5.5/lp_SOS.c ****       if(n >= 0)
 4833               		.loc 1 576 0
 4834 1f1a 8985      		ldd r24,Y+9
 4835 1f1c 9A85      		ldd r25,Y+10
 4836 1f1e 9923      		tst r25
 4837 1f20 04F0      		brlt .L165
 577:lp_solve_5.5/lp_SOS.c ****         nn += n;
 4838               		.loc 1 577 0
 4839 1f22 2D81      		ldd r18,Y+5
 4840 1f24 3E81      		ldd r19,Y+6
 4841 1f26 8985      		ldd r24,Y+9
 4842 1f28 9A85      		ldd r25,Y+10
 4843 1f2a 820F      		add r24,r18
 4844 1f2c 931F      		adc r25,r19
 4845 1f2e 9E83      		std Y+6,r25
 4846 1f30 8D83      		std Y+5,r24
 4847 1f32 00C0      		rjmp .L184
 4848               	.L165:
 578:lp_solve_5.5/lp_SOS.c ****       else
 579:lp_solve_5.5/lp_SOS.c ****         return( n );
 4849               		.loc 1 579 0
 4850 1f34 8985      		ldd r24,Y+9
 4851 1f36 9A85      		ldd r25,Y+10
 4852 1f38 00C0      		rjmp .L167
 4853               	.L184:
 573:lp_solve_5.5/lp_SOS.c ****       k = group->membership[i];
 4854               		.loc 1 573 0 discriminator 2
 4855 1f3a 8981      		ldd r24,Y+1
 4856 1f3c 9A81      		ldd r25,Y+2
 4857 1f3e 0196      		adiw r24,1
 4858 1f40 9A83      		std Y+2,r25
 4859 1f42 8983      		std Y+1,r24
 4860               	.L164:
 573:lp_solve_5.5/lp_SOS.c ****       k = group->membership[i];
 4861               		.loc 1 573 0 is_stmt 0 discriminator 1
 4862 1f44 8989      		ldd r24,Y+17
 4863 1f46 9A89      		ldd r25,Y+18
 4864 1f48 FC01      		movw r30,r24
 4865 1f4a 2685      		ldd r18,Z+14
 4866 1f4c 3785      		ldd r19,Z+15
 4867 1f4e 8D89      		ldd r24,Y+21
 4868 1f50 9E89      		ldd r25,Y+22
 4869 1f52 880F      		lsl r24
 4870 1f54 991F      		rol r25
 4871 1f56 820F      		add r24,r18
 4872 1f58 931F      		adc r25,r19
 4873 1f5a FC01      		movw r30,r24
 4874 1f5c 2081      		ld r18,Z
 4875 1f5e 3181      		ldd r19,Z+1
 4876 1f60 8981      		ldd r24,Y+1
 4877 1f62 9A81      		ldd r25,Y+2
 4878 1f64 8217      		cp r24,r18
 4879 1f66 9307      		cpc r25,r19
 4880 1f68 04F4      		brge .+2
 4881 1f6a 00C0      		rjmp .L168
 580:lp_solve_5.5/lp_SOS.c ****     }
 581:lp_solve_5.5/lp_SOS.c ****     /* We must update the mapper */
 582:lp_solve_5.5/lp_SOS.c ****     k = group->memberpos[member];
 4882               		.loc 1 582 0 is_stmt 1
 4883 1f6c 8989      		ldd r24,Y+17
 4884 1f6e 9A89      		ldd r25,Y+18
 4885 1f70 FC01      		movw r30,r24
 4886 1f72 2685      		ldd r18,Z+14
 4887 1f74 3785      		ldd r19,Z+15
 4888 1f76 8D89      		ldd r24,Y+21
 4889 1f78 9E89      		ldd r25,Y+22
 4890 1f7a 880F      		lsl r24
 4891 1f7c 991F      		rol r25
 4892 1f7e 820F      		add r24,r18
 4893 1f80 931F      		adc r25,r19
 4894 1f82 FC01      		movw r30,r24
 4895 1f84 8081      		ld r24,Z
 4896 1f86 9181      		ldd r25,Z+1
 4897 1f88 9C83      		std Y+4,r25
 4898 1f8a 8B83      		std Y+3,r24
 583:lp_solve_5.5/lp_SOS.c ****     i = group->memberpos[member-1];
 4899               		.loc 1 583 0
 4900 1f8c 8989      		ldd r24,Y+17
 4901 1f8e 9A89      		ldd r25,Y+18
 4902 1f90 FC01      		movw r30,r24
 4903 1f92 2685      		ldd r18,Z+14
 4904 1f94 3785      		ldd r19,Z+15
 4905 1f96 8D89      		ldd r24,Y+21
 4906 1f98 9E89      		ldd r25,Y+22
 4907 1f9a 8150      		subi r24,1
 4908 1f9c 9048      		sbci r25,-128
 4909 1f9e 880F      		lsl r24
 4910 1fa0 991F      		rol r25
 4911 1fa2 820F      		add r24,r18
 4912 1fa4 931F      		adc r25,r19
 4913 1fa6 FC01      		movw r30,r24
 4914 1fa8 8081      		ld r24,Z
 4915 1faa 9181      		ldd r25,Z+1
 4916 1fac 9A83      		std Y+2,r25
 4917 1fae 8983      		std Y+1,r24
 584:lp_solve_5.5/lp_SOS.c ****     n = group->memberpos[lp->columns] - k;
 4918               		.loc 1 584 0
 4919 1fb0 8989      		ldd r24,Y+17
 4920 1fb2 9A89      		ldd r25,Y+18
 4921 1fb4 FC01      		movw r30,r24
 4922 1fb6 2685      		ldd r18,Z+14
 4923 1fb8 3785      		ldd r19,Z+15
 4924 1fba 8F81      		ldd r24,Y+7
 4925 1fbc 9885      		ldd r25,Y+8
 4926 1fbe 8451      		subi r24,20
 4927 1fc0 9E4F      		sbci r25,-2
 4928 1fc2 FC01      		movw r30,r24
 4929 1fc4 8081      		ld r24,Z
 4930 1fc6 9181      		ldd r25,Z+1
 4931 1fc8 880F      		lsl r24
 4932 1fca 991F      		rol r25
 4933 1fcc 820F      		add r24,r18
 4934 1fce 931F      		adc r25,r19
 4935 1fd0 FC01      		movw r30,r24
 4936 1fd2 2081      		ld r18,Z
 4937 1fd4 3181      		ldd r19,Z+1
 4938 1fd6 8B81      		ldd r24,Y+3
 4939 1fd8 9C81      		ldd r25,Y+4
 4940 1fda A901      		movw r20,r18
 4941 1fdc 481B      		sub r20,r24
 4942 1fde 590B      		sbc r21,r25
 4943 1fe0 CA01      		movw r24,r20
 4944 1fe2 9A87      		std Y+10,r25
 4945 1fe4 8987      		std Y+9,r24
 585:lp_solve_5.5/lp_SOS.c ****     if(n > 0)
 4946               		.loc 1 585 0
 4947 1fe6 8985      		ldd r24,Y+9
 4948 1fe8 9A85      		ldd r25,Y+10
 4949 1fea 1816      		cp __zero_reg__,r24
 4950 1fec 1906      		cpc __zero_reg__,r25
 4951 1fee 04F4      		brge .L169
 586:lp_solve_5.5/lp_SOS.c ****       MEMCOPY(group->membership + i, group->membership + k, n);
 4952               		.loc 1 586 0
 4953 1ff0 8985      		ldd r24,Y+9
 4954 1ff2 9A85      		ldd r25,Y+10
 4955 1ff4 AC01      		movw r20,r24
 4956 1ff6 440F      		lsl r20
 4957 1ff8 551F      		rol r21
 4958 1ffa 8989      		ldd r24,Y+17
 4959 1ffc 9A89      		ldd r25,Y+18
 4960 1ffe FC01      		movw r30,r24
 4961 2000 2485      		ldd r18,Z+12
 4962 2002 3585      		ldd r19,Z+13
 4963 2004 8B81      		ldd r24,Y+3
 4964 2006 9C81      		ldd r25,Y+4
 4965 2008 880F      		lsl r24
 4966 200a 991F      		rol r25
 4967 200c B901      		movw r22,r18
 4968 200e 680F      		add r22,r24
 4969 2010 791F      		adc r23,r25
 4970 2012 8989      		ldd r24,Y+17
 4971 2014 9A89      		ldd r25,Y+18
 4972 2016 FC01      		movw r30,r24
 4973 2018 2485      		ldd r18,Z+12
 4974 201a 3585      		ldd r19,Z+13
 4975 201c 8981      		ldd r24,Y+1
 4976 201e 9A81      		ldd r25,Y+2
 4977 2020 880F      		lsl r24
 4978 2022 991F      		rol r25
 4979 2024 820F      		add r24,r18
 4980 2026 931F      		adc r25,r19
 4981 2028 0E94 0000 		call memcpy
 4982               	.L169:
 587:lp_solve_5.5/lp_SOS.c ****     for(i = member; i <= lp->columns; i++)
 4983               		.loc 1 587 0
 4984 202c 8D89      		ldd r24,Y+21
 4985 202e 9E89      		ldd r25,Y+22
 4986 2030 9A83      		std Y+2,r25
 4987 2032 8983      		std Y+1,r24
 4988 2034 00C0      		rjmp .L170
 4989               	.L171:
 588:lp_solve_5.5/lp_SOS.c ****       group->memberpos[i] = group->memberpos[i-1];
 4990               		.loc 1 588 0 discriminator 3
 4991 2036 8989      		ldd r24,Y+17
 4992 2038 9A89      		ldd r25,Y+18
 4993 203a FC01      		movw r30,r24
 4994 203c 2685      		ldd r18,Z+14
 4995 203e 3785      		ldd r19,Z+15
 4996 2040 8981      		ldd r24,Y+1
 4997 2042 9A81      		ldd r25,Y+2
 4998 2044 880F      		lsl r24
 4999 2046 991F      		rol r25
 5000 2048 820F      		add r24,r18
 5001 204a 931F      		adc r25,r19
 5002 204c 2989      		ldd r18,Y+17
 5003 204e 3A89      		ldd r19,Y+18
 5004 2050 F901      		movw r30,r18
 5005 2052 4685      		ldd r20,Z+14
 5006 2054 5785      		ldd r21,Z+15
 5007 2056 2981      		ldd r18,Y+1
 5008 2058 3A81      		ldd r19,Y+2
 5009 205a 2150      		subi r18,1
 5010 205c 3048      		sbci r19,-128
 5011 205e 220F      		lsl r18
 5012 2060 331F      		rol r19
 5013 2062 240F      		add r18,r20
 5014 2064 351F      		adc r19,r21
 5015 2066 F901      		movw r30,r18
 5016 2068 2081      		ld r18,Z
 5017 206a 3181      		ldd r19,Z+1
 5018 206c FC01      		movw r30,r24
 5019 206e 3183      		std Z+1,r19
 5020 2070 2083      		st Z,r18
 587:lp_solve_5.5/lp_SOS.c ****     for(i = member; i <= lp->columns; i++)
 5021               		.loc 1 587 0 discriminator 3
 5022 2072 8981      		ldd r24,Y+1
 5023 2074 9A81      		ldd r25,Y+2
 5024 2076 0196      		adiw r24,1
 5025 2078 9A83      		std Y+2,r25
 5026 207a 8983      		std Y+1,r24
 5027               	.L170:
 587:lp_solve_5.5/lp_SOS.c ****     for(i = member; i <= lp->columns; i++)
 5028               		.loc 1 587 0 is_stmt 0 discriminator 1
 5029 207c 8F81      		ldd r24,Y+7
 5030 207e 9885      		ldd r25,Y+8
 5031 2080 8451      		subi r24,20
 5032 2082 9E4F      		sbci r25,-2
 5033 2084 FC01      		movw r30,r24
 5034 2086 2081      		ld r18,Z
 5035 2088 3181      		ldd r19,Z+1
 5036 208a 8981      		ldd r24,Y+1
 5037 208c 9A81      		ldd r25,Y+2
 5038 208e 2817      		cp r18,r24
 5039 2090 3907      		cpc r19,r25
 5040 2092 04F4      		brge .L171
 5041 2094 00C0      		rjmp .L172
 5042               	.L163:
 589:lp_solve_5.5/lp_SOS.c ****   }
 590:lp_solve_5.5/lp_SOS.c ****   else {
 591:lp_solve_5.5/lp_SOS.c ****     SOS = group->sos_list[sosindex-1];
 5043               		.loc 1 591 0 is_stmt 1
 5044 2096 8989      		ldd r24,Y+17
 5045 2098 9A89      		ldd r25,Y+18
 5046 209a FC01      		movw r30,r24
 5047 209c 2281      		ldd r18,Z+2
 5048 209e 3381      		ldd r19,Z+3
 5049 20a0 8B89      		ldd r24,Y+19
 5050 20a2 9C89      		ldd r25,Y+20
 5051 20a4 8150      		subi r24,1
 5052 20a6 9048      		sbci r25,-128
 5053 20a8 880F      		lsl r24
 5054 20aa 991F      		rol r25
 5055 20ac 820F      		add r24,r18
 5056 20ae 931F      		adc r25,r19
 5057 20b0 FC01      		movw r30,r24
 5058 20b2 8081      		ld r24,Z
 5059 20b4 9181      		ldd r25,Z+1
 5060 20b6 9C87      		std Y+12,r25
 5061 20b8 8B87      		std Y+11,r24
 592:lp_solve_5.5/lp_SOS.c ****     list = SOS->members;
 5062               		.loc 1 592 0
 5063 20ba 8B85      		ldd r24,Y+11
 5064 20bc 9C85      		ldd r25,Y+12
 5065 20be FC01      		movw r30,r24
 5066 20c0 8585      		ldd r24,Z+13
 5067 20c2 9685      		ldd r25,Z+14
 5068 20c4 9E87      		std Y+14,r25
 5069 20c6 8D87      		std Y+13,r24
 593:lp_solve_5.5/lp_SOS.c ****     n = list[0];
 5070               		.loc 1 593 0
 5071 20c8 8D85      		ldd r24,Y+13
 5072 20ca 9E85      		ldd r25,Y+14
 5073 20cc FC01      		movw r30,r24
 5074 20ce 8081      		ld r24,Z
 5075 20d0 9181      		ldd r25,Z+1
 5076 20d2 9A87      		std Y+10,r25
 5077 20d4 8987      		std Y+9,r24
 594:lp_solve_5.5/lp_SOS.c **** 
 595:lp_solve_5.5/lp_SOS.c ****     /* Find the offset of the member */
 596:lp_solve_5.5/lp_SOS.c ****     i = 1;
 5078               		.loc 1 596 0
 5079 20d6 81E0      		ldi r24,lo8(1)
 5080 20d8 90E0      		ldi r25,0
 5081 20da 9A83      		std Y+2,r25
 5082 20dc 8983      		std Y+1,r24
 597:lp_solve_5.5/lp_SOS.c ****     while((i <= n) && (abs(list[i]) != member))
 5083               		.loc 1 597 0
 5084 20de 00C0      		rjmp .L173
 5085               	.L176:
 598:lp_solve_5.5/lp_SOS.c ****       i++;
 5086               		.loc 1 598 0
 5087 20e0 8981      		ldd r24,Y+1
 5088 20e2 9A81      		ldd r25,Y+2
 5089 20e4 0196      		adiw r24,1
 5090 20e6 9A83      		std Y+2,r25
 5091 20e8 8983      		std Y+1,r24
 5092               	.L173:
 597:lp_solve_5.5/lp_SOS.c ****     while((i <= n) && (abs(list[i]) != member))
 5093               		.loc 1 597 0
 5094 20ea 2981      		ldd r18,Y+1
 5095 20ec 3A81      		ldd r19,Y+2
 5096 20ee 8985      		ldd r24,Y+9
 5097 20f0 9A85      		ldd r25,Y+10
 5098 20f2 8217      		cp r24,r18
 5099 20f4 9307      		cpc r25,r19
 5100 20f6 04F0      		brlt .L174
 597:lp_solve_5.5/lp_SOS.c ****     while((i <= n) && (abs(list[i]) != member))
 5101               		.loc 1 597 0 is_stmt 0 discriminator 1
 5102 20f8 8981      		ldd r24,Y+1
 5103 20fa 9A81      		ldd r25,Y+2
 5104 20fc 880F      		lsl r24
 5105 20fe 991F      		rol r25
 5106 2100 2D85      		ldd r18,Y+13
 5107 2102 3E85      		ldd r19,Y+14
 5108 2104 820F      		add r24,r18
 5109 2106 931F      		adc r25,r19
 5110 2108 FC01      		movw r30,r24
 5111 210a 8081      		ld r24,Z
 5112 210c 9181      		ldd r25,Z+1
 5113 210e 9923      		tst r25
 5114 2110 04F4      		brge .L175
 5115 2112 9195      		neg r25
 5116 2114 8195      		neg r24
 5117 2116 9109      		sbc r25,__zero_reg__
 5118               	.L175:
 5119 2118 9C01      		movw r18,r24
 5120 211a 8D89      		ldd r24,Y+21
 5121 211c 9E89      		ldd r25,Y+22
 5122 211e 2817      		cp r18,r24
 5123 2120 3907      		cpc r19,r25
 5124 2122 01F4      		brne .L176
 5125               	.L174:
 599:lp_solve_5.5/lp_SOS.c ****     if(i > n)
 5126               		.loc 1 599 0 is_stmt 1
 5127 2124 2981      		ldd r18,Y+1
 5128 2126 3A81      		ldd r19,Y+2
 5129 2128 8985      		ldd r24,Y+9
 5130 212a 9A85      		ldd r25,Y+10
 5131 212c 8217      		cp r24,r18
 5132 212e 9307      		cpc r25,r19
 5133 2130 04F4      		brge .L177
 600:lp_solve_5.5/lp_SOS.c ****       return( -1 );
 5134               		.loc 1 600 0
 5135 2132 8FEF      		ldi r24,lo8(-1)
 5136 2134 9FEF      		ldi r25,lo8(-1)
 5137 2136 00C0      		rjmp .L167
 5138               	.L177:
 601:lp_solve_5.5/lp_SOS.c ****     nn++;
 5139               		.loc 1 601 0
 5140 2138 8D81      		ldd r24,Y+5
 5141 213a 9E81      		ldd r25,Y+6
 5142 213c 0196      		adiw r24,1
 5143 213e 9E83      		std Y+6,r25
 5144 2140 8D83      		std Y+5,r24
 602:lp_solve_5.5/lp_SOS.c **** 
 603:lp_solve_5.5/lp_SOS.c ****     /* Shift remaining members *and* the active count one position left */
 604:lp_solve_5.5/lp_SOS.c ****     while(i <= n) {
 5145               		.loc 1 604 0
 5146 2142 00C0      		rjmp .L178
 5147               	.L179:
 605:lp_solve_5.5/lp_SOS.c ****       list[i] = list[i+1];
 5148               		.loc 1 605 0
 5149 2144 8981      		ldd r24,Y+1
 5150 2146 9A81      		ldd r25,Y+2
 5151 2148 880F      		lsl r24
 5152 214a 991F      		rol r25
 5153 214c 2D85      		ldd r18,Y+13
 5154 214e 3E85      		ldd r19,Y+14
 5155 2150 820F      		add r24,r18
 5156 2152 931F      		adc r25,r19
 5157 2154 2981      		ldd r18,Y+1
 5158 2156 3A81      		ldd r19,Y+2
 5159 2158 2F5F      		subi r18,-1
 5160 215a 3F4F      		sbci r19,-1
 5161 215c 220F      		lsl r18
 5162 215e 331F      		rol r19
 5163 2160 4D85      		ldd r20,Y+13
 5164 2162 5E85      		ldd r21,Y+14
 5165 2164 240F      		add r18,r20
 5166 2166 351F      		adc r19,r21
 5167 2168 F901      		movw r30,r18
 5168 216a 2081      		ld r18,Z
 5169 216c 3181      		ldd r19,Z+1
 5170 216e FC01      		movw r30,r24
 5171 2170 3183      		std Z+1,r19
 5172 2172 2083      		st Z,r18
 606:lp_solve_5.5/lp_SOS.c ****       i++;
 5173               		.loc 1 606 0
 5174 2174 8981      		ldd r24,Y+1
 5175 2176 9A81      		ldd r25,Y+2
 5176 2178 0196      		adiw r24,1
 5177 217a 9A83      		std Y+2,r25
 5178 217c 8983      		std Y+1,r24
 5179               	.L178:
 604:lp_solve_5.5/lp_SOS.c ****       list[i] = list[i+1];
 5180               		.loc 1 604 0
 5181 217e 2981      		ldd r18,Y+1
 5182 2180 3A81      		ldd r19,Y+2
 5183 2182 8985      		ldd r24,Y+9
 5184 2184 9A85      		ldd r25,Y+10
 5185 2186 8217      		cp r24,r18
 5186 2188 9307      		cpc r25,r19
 5187 218a 04F4      		brge .L179
 607:lp_solve_5.5/lp_SOS.c ****     }
 608:lp_solve_5.5/lp_SOS.c ****     list[0]--;
 5188               		.loc 1 608 0
 5189 218c 8D85      		ldd r24,Y+13
 5190 218e 9E85      		ldd r25,Y+14
 5191 2190 FC01      		movw r30,r24
 5192 2192 8081      		ld r24,Z
 5193 2194 9181      		ldd r25,Z+1
 5194 2196 9C01      		movw r18,r24
 5195 2198 2150      		subi r18,1
 5196 219a 3109      		sbc r19,__zero_reg__
 5197 219c 8D85      		ldd r24,Y+13
 5198 219e 9E85      		ldd r25,Y+14
 5199 21a0 FC01      		movw r30,r24
 5200 21a2 3183      		std Z+1,r19
 5201 21a4 2083      		st Z,r18
 609:lp_solve_5.5/lp_SOS.c ****     SOS->size--;
 5202               		.loc 1 609 0
 5203 21a6 8B85      		ldd r24,Y+11
 5204 21a8 9C85      		ldd r25,Y+12
 5205 21aa FC01      		movw r30,r24
 5206 21ac 8185      		ldd r24,Z+9
 5207 21ae 9285      		ldd r25,Z+10
 5208 21b0 9C01      		movw r18,r24
 5209 21b2 2150      		subi r18,1
 5210 21b4 3109      		sbc r19,__zero_reg__
 5211 21b6 8B85      		ldd r24,Y+11
 5212 21b8 9C85      		ldd r25,Y+12
 5213 21ba FC01      		movw r30,r24
 5214 21bc 3287      		std Z+10,r19
 5215 21be 2187      		std Z+9,r18
 610:lp_solve_5.5/lp_SOS.c **** 
 611:lp_solve_5.5/lp_SOS.c ****     /* Do the same with the active list one position left */
 612:lp_solve_5.5/lp_SOS.c ****     i = n + 1;
 5216               		.loc 1 612 0
 5217 21c0 8985      		ldd r24,Y+9
 5218 21c2 9A85      		ldd r25,Y+10
 5219 21c4 0196      		adiw r24,1
 5220 21c6 9A83      		std Y+2,r25
 5221 21c8 8983      		std Y+1,r24
 613:lp_solve_5.5/lp_SOS.c ****     i2 = i + list[n];
 5222               		.loc 1 613 0
 5223 21ca 8985      		ldd r24,Y+9
 5224 21cc 9A85      		ldd r25,Y+10
 5225 21ce 880F      		lsl r24
 5226 21d0 991F      		rol r25
 5227 21d2 2D85      		ldd r18,Y+13
 5228 21d4 3E85      		ldd r19,Y+14
 5229 21d6 820F      		add r24,r18
 5230 21d8 931F      		adc r25,r19
 5231 21da FC01      		movw r30,r24
 5232 21dc 2081      		ld r18,Z
 5233 21de 3181      		ldd r19,Z+1
 5234 21e0 8981      		ldd r24,Y+1
 5235 21e2 9A81      		ldd r25,Y+2
 5236 21e4 820F      		add r24,r18
 5237 21e6 931F      		adc r25,r19
 5238 21e8 988B      		std Y+16,r25
 5239 21ea 8F87      		std Y+15,r24
 614:lp_solve_5.5/lp_SOS.c ****     k = i + 1;
 5240               		.loc 1 614 0
 5241 21ec 8981      		ldd r24,Y+1
 5242 21ee 9A81      		ldd r25,Y+2
 5243 21f0 0196      		adiw r24,1
 5244 21f2 9C83      		std Y+4,r25
 5245 21f4 8B83      		std Y+3,r24
 615:lp_solve_5.5/lp_SOS.c ****     while(i < i2) {
 5246               		.loc 1 615 0
 5247 21f6 00C0      		rjmp .L180
 5248               	.L183:
 616:lp_solve_5.5/lp_SOS.c ****       if(abs(list[k]) == member)
 5249               		.loc 1 616 0
 5250 21f8 8B81      		ldd r24,Y+3
 5251 21fa 9C81      		ldd r25,Y+4
 5252 21fc 880F      		lsl r24
 5253 21fe 991F      		rol r25
 5254 2200 2D85      		ldd r18,Y+13
 5255 2202 3E85      		ldd r19,Y+14
 5256 2204 820F      		add r24,r18
 5257 2206 931F      		adc r25,r19
 5258 2208 FC01      		movw r30,r24
 5259 220a 8081      		ld r24,Z
 5260 220c 9181      		ldd r25,Z+1
 5261 220e 9923      		tst r25
 5262 2210 04F4      		brge .L181
 5263 2212 9195      		neg r25
 5264 2214 8195      		neg r24
 5265 2216 9109      		sbc r25,__zero_reg__
 5266               	.L181:
 5267 2218 9C01      		movw r18,r24
 5268 221a 8D89      		ldd r24,Y+21
 5269 221c 9E89      		ldd r25,Y+22
 5270 221e 2817      		cp r18,r24
 5271 2220 3907      		cpc r19,r25
 5272 2222 01F4      		brne .L182
 617:lp_solve_5.5/lp_SOS.c ****         k++;
 5273               		.loc 1 617 0
 5274 2224 8B81      		ldd r24,Y+3
 5275 2226 9C81      		ldd r25,Y+4
 5276 2228 0196      		adiw r24,1
 5277 222a 9C83      		std Y+4,r25
 5278 222c 8B83      		std Y+3,r24
 5279               	.L182:
 618:lp_solve_5.5/lp_SOS.c ****       list[i] = list[k];
 5280               		.loc 1 618 0
 5281 222e 8981      		ldd r24,Y+1
 5282 2230 9A81      		ldd r25,Y+2
 5283 2232 880F      		lsl r24
 5284 2234 991F      		rol r25
 5285 2236 2D85      		ldd r18,Y+13
 5286 2238 3E85      		ldd r19,Y+14
 5287 223a 820F      		add r24,r18
 5288 223c 931F      		adc r25,r19
 5289 223e 2B81      		ldd r18,Y+3
 5290 2240 3C81      		ldd r19,Y+4
 5291 2242 220F      		lsl r18
 5292 2244 331F      		rol r19
 5293 2246 4D85      		ldd r20,Y+13
 5294 2248 5E85      		ldd r21,Y+14
 5295 224a 240F      		add r18,r20
 5296 224c 351F      		adc r19,r21
 5297 224e F901      		movw r30,r18
 5298 2250 2081      		ld r18,Z
 5299 2252 3181      		ldd r19,Z+1
 5300 2254 FC01      		movw r30,r24
 5301 2256 3183      		std Z+1,r19
 5302 2258 2083      		st Z,r18
 619:lp_solve_5.5/lp_SOS.c ****       i++;
 5303               		.loc 1 619 0
 5304 225a 8981      		ldd r24,Y+1
 5305 225c 9A81      		ldd r25,Y+2
 5306 225e 0196      		adiw r24,1
 5307 2260 9A83      		std Y+2,r25
 5308 2262 8983      		std Y+1,r24
 620:lp_solve_5.5/lp_SOS.c ****       k++;
 5309               		.loc 1 620 0
 5310 2264 8B81      		ldd r24,Y+3
 5311 2266 9C81      		ldd r25,Y+4
 5312 2268 0196      		adiw r24,1
 5313 226a 9C83      		std Y+4,r25
 5314 226c 8B83      		std Y+3,r24
 5315               	.L180:
 615:lp_solve_5.5/lp_SOS.c ****       if(abs(list[k]) == member)
 5316               		.loc 1 615 0
 5317 226e 2981      		ldd r18,Y+1
 5318 2270 3A81      		ldd r19,Y+2
 5319 2272 8F85      		ldd r24,Y+15
 5320 2274 9889      		ldd r25,Y+16
 5321 2276 2817      		cp r18,r24
 5322 2278 3907      		cpc r19,r25
 5323 227a 04F4      		brge .+2
 5324 227c 00C0      		rjmp .L183
 5325               	.L172:
 621:lp_solve_5.5/lp_SOS.c ****     }
 622:lp_solve_5.5/lp_SOS.c ****   }
 623:lp_solve_5.5/lp_SOS.c **** 
 624:lp_solve_5.5/lp_SOS.c ****   return( nn );
 5326               		.loc 1 624 0
 5327 227e 8D81      		ldd r24,Y+5
 5328 2280 9E81      		ldd r25,Y+6
 5329               	.L167:
 5330               	/* epilogue start */
 625:lp_solve_5.5/lp_SOS.c **** }
 5331               		.loc 1 625 0
 5332 2282 6696      		adiw r28,22
 5333 2284 0FB6      		in __tmp_reg__,__SREG__
 5334 2286 F894      		cli
 5335 2288 DEBF      		out __SP_H__,r29
 5336 228a 0FBE      		out __SREG__,__tmp_reg__
 5337 228c CDBF      		out __SP_L__,r28
 5338 228e DF91      		pop r29
 5339 2290 CF91      		pop r28
 5340 2292 0895      		ret
 5341               		.cfi_endproc
 5342               	.LFE21:
 5344               	.global	SOS_get_type
 5346               	SOS_get_type:
 5347               	.LFB22:
 626:lp_solve_5.5/lp_SOS.c **** 
 627:lp_solve_5.5/lp_SOS.c **** int SOS_get_type(SOSgroup *group, int sosindex)
 628:lp_solve_5.5/lp_SOS.c **** {
 5348               		.loc 1 628 0
 5349               		.cfi_startproc
 5350 2294 CF93      		push r28
 5351               	.LCFI77:
 5352               		.cfi_def_cfa_offset 3
 5353               		.cfi_offset 28, -2
 5354 2296 DF93      		push r29
 5355               	.LCFI78:
 5356               		.cfi_def_cfa_offset 4
 5357               		.cfi_offset 29, -3
 5358 2298 00D0      		rcall .
 5359 229a 00D0      		rcall .
 5360               	.LCFI79:
 5361               		.cfi_def_cfa_offset 8
 5362 229c CDB7      		in r28,__SP_L__
 5363 229e DEB7      		in r29,__SP_H__
 5364               	.LCFI80:
 5365               		.cfi_def_cfa_register 28
 5366               	/* prologue: function */
 5367               	/* frame size = 4 */
 5368               	/* stack size = 6 */
 5369               	.L__stack_usage = 6
 5370 22a0 9A83      		std Y+2,r25
 5371 22a2 8983      		std Y+1,r24
 5372 22a4 7C83      		std Y+4,r23
 5373 22a6 6B83      		std Y+3,r22
 629:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
 630:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 1) || (sosindex > group->sos_count)) {
 631:lp_solve_5.5/lp_SOS.c ****     report(group->lp, IMPORTANT, "SOS_get_type: Invalid SOS index %d\n", sosindex);
 632:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 633:lp_solve_5.5/lp_SOS.c ****   }
 634:lp_solve_5.5/lp_SOS.c **** #endif
 635:lp_solve_5.5/lp_SOS.c **** 
 636:lp_solve_5.5/lp_SOS.c ****   return(group->sos_list[sosindex-1]->type);
 5374               		.loc 1 636 0
 5375 22a8 8981      		ldd r24,Y+1
 5376 22aa 9A81      		ldd r25,Y+2
 5377 22ac FC01      		movw r30,r24
 5378 22ae 2281      		ldd r18,Z+2
 5379 22b0 3381      		ldd r19,Z+3
 5380 22b2 8B81      		ldd r24,Y+3
 5381 22b4 9C81      		ldd r25,Y+4
 5382 22b6 8150      		subi r24,1
 5383 22b8 9048      		sbci r25,-128
 5384 22ba 880F      		lsl r24
 5385 22bc 991F      		rol r25
 5386 22be 820F      		add r24,r18
 5387 22c0 931F      		adc r25,r19
 5388 22c2 FC01      		movw r30,r24
 5389 22c4 8081      		ld r24,Z
 5390 22c6 9181      		ldd r25,Z+1
 5391 22c8 FC01      		movw r30,r24
 5392 22ca 8681      		ldd r24,Z+6
 5393 22cc 9781      		ldd r25,Z+7
 5394               	/* epilogue start */
 637:lp_solve_5.5/lp_SOS.c **** }
 5395               		.loc 1 637 0
 5396 22ce 0F90      		pop __tmp_reg__
 5397 22d0 0F90      		pop __tmp_reg__
 5398 22d2 0F90      		pop __tmp_reg__
 5399 22d4 0F90      		pop __tmp_reg__
 5400 22d6 DF91      		pop r29
 5401 22d8 CF91      		pop r28
 5402 22da 0895      		ret
 5403               		.cfi_endproc
 5404               	.LFE22:
 5406               	.global	__gtsf2
 5407               	.global	SOS_infeasible
 5409               	SOS_infeasible:
 5410               	.LFB23:
 638:lp_solve_5.5/lp_SOS.c **** 
 639:lp_solve_5.5/lp_SOS.c **** 
 640:lp_solve_5.5/lp_SOS.c **** int SOS_infeasible(SOSgroup *group, int sosindex)
 641:lp_solve_5.5/lp_SOS.c **** {
 5411               		.loc 1 641 0
 5412               		.cfi_startproc
 5413 22dc CF93      		push r28
 5414               	.LCFI81:
 5415               		.cfi_def_cfa_offset 3
 5416               		.cfi_offset 28, -2
 5417 22de DF93      		push r29
 5418               	.LCFI82:
 5419               		.cfi_def_cfa_offset 4
 5420               		.cfi_offset 29, -3
 5421 22e0 CDB7      		in r28,__SP_L__
 5422 22e2 DEB7      		in r29,__SP_H__
 5423               	.LCFI83:
 5424               		.cfi_def_cfa_register 28
 5425 22e4 6297      		sbiw r28,18
 5426               	.LCFI84:
 5427               		.cfi_def_cfa_offset 22
 5428 22e6 0FB6      		in __tmp_reg__,__SREG__
 5429 22e8 F894      		cli
 5430 22ea DEBF      		out __SP_H__,r29
 5431 22ec 0FBE      		out __SREG__,__tmp_reg__
 5432 22ee CDBF      		out __SP_L__,r28
 5433               	/* prologue: function */
 5434               	/* frame size = 18 */
 5435               	/* stack size = 20 */
 5436               	.L__stack_usage = 20
 5437 22f0 988B      		std Y+16,r25
 5438 22f2 8F87      		std Y+15,r24
 5439 22f4 7A8B      		std Y+18,r23
 5440 22f6 698B      		std Y+17,r22
 642:lp_solve_5.5/lp_SOS.c ****   int    i, n, nn, varnr, failindex, *list;
 643:lp_solve_5.5/lp_SOS.c ****   lprec  *lp = group->lp;
 5441               		.loc 1 643 0
 5442 22f8 8F85      		ldd r24,Y+15
 5443 22fa 9889      		ldd r25,Y+16
 5444 22fc FC01      		movw r30,r24
 5445 22fe 8081      		ld r24,Z
 5446 2300 9181      		ldd r25,Z+1
 5447 2302 9E83      		std Y+6,r25
 5448 2304 8D83      		std Y+5,r24
 644:lp_solve_5.5/lp_SOS.c **** 
 645:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
 646:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
 647:lp_solve_5.5/lp_SOS.c ****     report(lp, IMPORTANT, "SOS_infeasible: Invalid SOS index %d\n", sosindex);
 648:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 649:lp_solve_5.5/lp_SOS.c ****   }
 650:lp_solve_5.5/lp_SOS.c **** #endif
 651:lp_solve_5.5/lp_SOS.c **** 
 652:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0 && group->sos_count == 1)
 5449               		.loc 1 652 0
 5450 2306 8989      		ldd r24,Y+17
 5451 2308 9A89      		ldd r25,Y+18
 5452 230a 892B      		or r24,r25
 5453 230c 01F4      		brne .L188
 5454               		.loc 1 652 0 is_stmt 0 discriminator 1
 5455 230e 8F85      		ldd r24,Y+15
 5456 2310 9889      		ldd r25,Y+16
 5457 2312 FC01      		movw r30,r24
 5458 2314 8681      		ldd r24,Z+6
 5459 2316 9781      		ldd r25,Z+7
 5460 2318 0197      		sbiw r24,1
 5461 231a 01F4      		brne .L188
 653:lp_solve_5.5/lp_SOS.c ****     sosindex = 1;
 5462               		.loc 1 653 0 is_stmt 1
 5463 231c 81E0      		ldi r24,lo8(1)
 5464 231e 90E0      		ldi r25,0
 5465 2320 9A8B      		std Y+18,r25
 5466 2322 898B      		std Y+17,r24
 5467               	.L188:
 654:lp_solve_5.5/lp_SOS.c **** 
 655:lp_solve_5.5/lp_SOS.c ****   failindex = 0;
 5468               		.loc 1 655 0
 5469 2324 1C82      		std Y+4,__zero_reg__
 5470 2326 1B82      		std Y+3,__zero_reg__
 656:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0) {
 5471               		.loc 1 656 0
 5472 2328 8989      		ldd r24,Y+17
 5473 232a 9A89      		ldd r25,Y+18
 5474 232c 892B      		or r24,r25
 5475 232e 01F4      		brne .L189
 657:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++) {
 5476               		.loc 1 657 0
 5477 2330 81E0      		ldi r24,lo8(1)
 5478 2332 90E0      		ldi r25,0
 5479 2334 9A83      		std Y+2,r25
 5480 2336 8983      		std Y+1,r24
 5481 2338 00C0      		rjmp .L190
 5482               	.L193:
 658:lp_solve_5.5/lp_SOS.c ****       failindex = SOS_infeasible(group, i);
 5483               		.loc 1 658 0
 5484 233a 2981      		ldd r18,Y+1
 5485 233c 3A81      		ldd r19,Y+2
 5486 233e 8F85      		ldd r24,Y+15
 5487 2340 9889      		ldd r25,Y+16
 5488 2342 B901      		movw r22,r18
 5489 2344 0E94 0000 		call SOS_infeasible
 5490 2348 9C83      		std Y+4,r25
 5491 234a 8B83      		std Y+3,r24
 659:lp_solve_5.5/lp_SOS.c ****       if(failindex > 0) break;
 5492               		.loc 1 659 0
 5493 234c 8B81      		ldd r24,Y+3
 5494 234e 9C81      		ldd r25,Y+4
 5495 2350 1816      		cp __zero_reg__,r24
 5496 2352 1906      		cpc __zero_reg__,r25
 5497 2354 04F4      		brge .+2
 5498 2356 00C0      		rjmp .L211
 657:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++) {
 5499               		.loc 1 657 0 discriminator 2
 5500 2358 8981      		ldd r24,Y+1
 5501 235a 9A81      		ldd r25,Y+2
 5502 235c 0196      		adiw r24,1
 5503 235e 9A83      		std Y+2,r25
 5504 2360 8983      		std Y+1,r24
 5505               	.L190:
 657:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++) {
 5506               		.loc 1 657 0 is_stmt 0 discriminator 1
 5507 2362 8F85      		ldd r24,Y+15
 5508 2364 9889      		ldd r25,Y+16
 5509 2366 FC01      		movw r30,r24
 5510 2368 2681      		ldd r18,Z+6
 5511 236a 3781      		ldd r19,Z+7
 5512 236c 8981      		ldd r24,Y+1
 5513 236e 9A81      		ldd r25,Y+2
 5514 2370 2817      		cp r18,r24
 5515 2372 3907      		cpc r19,r25
 5516 2374 04F4      		brge .L193
 5517 2376 00C0      		rjmp .L194
 5518               	.L189:
 660:lp_solve_5.5/lp_SOS.c ****     }
 661:lp_solve_5.5/lp_SOS.c ****   }
 662:lp_solve_5.5/lp_SOS.c ****   else {
 663:lp_solve_5.5/lp_SOS.c ****     list = group->sos_list[sosindex-1]->members;
 5519               		.loc 1 663 0 is_stmt 1
 5520 2378 8F85      		ldd r24,Y+15
 5521 237a 9889      		ldd r25,Y+16
 5522 237c FC01      		movw r30,r24
 5523 237e 2281      		ldd r18,Z+2
 5524 2380 3381      		ldd r19,Z+3
 5525 2382 8989      		ldd r24,Y+17
 5526 2384 9A89      		ldd r25,Y+18
 5527 2386 8150      		subi r24,1
 5528 2388 9048      		sbci r25,-128
 5529 238a 880F      		lsl r24
 5530 238c 991F      		rol r25
 5531 238e 820F      		add r24,r18
 5532 2390 931F      		adc r25,r19
 5533 2392 FC01      		movw r30,r24
 5534 2394 8081      		ld r24,Z
 5535 2396 9181      		ldd r25,Z+1
 5536 2398 FC01      		movw r30,r24
 5537 239a 8585      		ldd r24,Z+13
 5538 239c 9685      		ldd r25,Z+14
 5539 239e 9887      		std Y+8,r25
 5540 23a0 8F83      		std Y+7,r24
 664:lp_solve_5.5/lp_SOS.c ****     n = list[0];
 5541               		.loc 1 664 0
 5542 23a2 8F81      		ldd r24,Y+7
 5543 23a4 9885      		ldd r25,Y+8
 5544 23a6 FC01      		movw r30,r24
 5545 23a8 8081      		ld r24,Z
 5546 23aa 9181      		ldd r25,Z+1
 5547 23ac 9A87      		std Y+10,r25
 5548 23ae 8987      		std Y+9,r24
 665:lp_solve_5.5/lp_SOS.c ****     nn = list[n+1];
 5549               		.loc 1 665 0
 5550 23b0 8985      		ldd r24,Y+9
 5551 23b2 9A85      		ldd r25,Y+10
 5552 23b4 0196      		adiw r24,1
 5553 23b6 880F      		lsl r24
 5554 23b8 991F      		rol r25
 5555 23ba 2F81      		ldd r18,Y+7
 5556 23bc 3885      		ldd r19,Y+8
 5557 23be 820F      		add r24,r18
 5558 23c0 931F      		adc r25,r19
 5559 23c2 FC01      		movw r30,r24
 5560 23c4 8081      		ld r24,Z
 5561 23c6 9181      		ldd r25,Z+1
 5562 23c8 9C87      		std Y+12,r25
 5563 23ca 8B87      		std Y+11,r24
 666:lp_solve_5.5/lp_SOS.c ****    /* Find index of next lower-bounded variable */
 667:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= n; i++) {
 5564               		.loc 1 667 0
 5565 23cc 81E0      		ldi r24,lo8(1)
 5566 23ce 90E0      		ldi r25,0
 5567 23d0 9A83      		std Y+2,r25
 5568 23d2 8983      		std Y+1,r24
 5569 23d4 00C0      		rjmp .L195
 5570               	.L200:
 668:lp_solve_5.5/lp_SOS.c ****       varnr = abs(list[i]);
 5571               		.loc 1 668 0
 5572 23d6 8981      		ldd r24,Y+1
 5573 23d8 9A81      		ldd r25,Y+2
 5574 23da 880F      		lsl r24
 5575 23dc 991F      		rol r25
 5576 23de 2F81      		ldd r18,Y+7
 5577 23e0 3885      		ldd r19,Y+8
 5578 23e2 820F      		add r24,r18
 5579 23e4 931F      		adc r25,r19
 5580 23e6 FC01      		movw r30,r24
 5581 23e8 8081      		ld r24,Z
 5582 23ea 9181      		ldd r25,Z+1
 5583 23ec 9923      		tst r25
 5584 23ee 04F4      		brge .L196
 5585 23f0 9195      		neg r25
 5586 23f2 8195      		neg r24
 5587 23f4 9109      		sbc r25,__zero_reg__
 5588               	.L196:
 5589 23f6 9E87      		std Y+14,r25
 5590 23f8 8D87      		std Y+13,r24
 669:lp_solve_5.5/lp_SOS.c ****       if((lp->orig_lowbo[lp->rows + varnr] > 0) &&
 5591               		.loc 1 669 0
 5592 23fa 8D81      		ldd r24,Y+5
 5593 23fc 9E81      		ldd r25,Y+6
 5594 23fe 8E54      		subi r24,78
 5595 2400 9D4F      		sbci r25,-3
 5596 2402 FC01      		movw r30,r24
 5597 2404 2081      		ld r18,Z
 5598 2406 3181      		ldd r19,Z+1
 5599 2408 8D81      		ldd r24,Y+5
 5600 240a 9E81      		ldd r25,Y+6
 5601 240c 8651      		subi r24,22
 5602 240e 9E4F      		sbci r25,-2
 5603 2410 FC01      		movw r30,r24
 5604 2412 4081      		ld r20,Z
 5605 2414 5181      		ldd r21,Z+1
 5606 2416 8D85      		ldd r24,Y+13
 5607 2418 9E85      		ldd r25,Y+14
 5608 241a 840F      		add r24,r20
 5609 241c 951F      		adc r25,r21
 5610 241e 880F      		lsl r24
 5611 2420 991F      		rol r25
 5612 2422 880F      		lsl r24
 5613 2424 991F      		rol r25
 5614 2426 820F      		add r24,r18
 5615 2428 931F      		adc r25,r19
 5616 242a FC01      		movw r30,r24
 5617 242c 8081      		ld r24,Z
 5618 242e 9181      		ldd r25,Z+1
 5619 2430 A281      		ldd r26,Z+2
 5620 2432 B381      		ldd r27,Z+3
 5621 2434 20E0      		ldi r18,0
 5622 2436 30E0      		ldi r19,0
 5623 2438 A901      		movw r20,r18
 5624 243a BC01      		movw r22,r24
 5625 243c CD01      		movw r24,r26
 5626 243e 0E94 0000 		call __gtsf2
 5627 2442 1816      		cp __zero_reg__,r24
 5628 2444 04F4      		brge .L197
 670:lp_solve_5.5/lp_SOS.c ****          !((lp->sc_vars > 0) && is_semicont(lp, varnr)))
 5629               		.loc 1 670 0 discriminator 1
 5630 2446 8D81      		ldd r24,Y+5
 5631 2448 9E81      		ldd r25,Y+6
 5632 244a 8057      		subi r24,112
 5633 244c 9D4F      		sbci r25,-3
 5634 244e FC01      		movw r30,r24
 5635 2450 8081      		ld r24,Z
 5636 2452 9181      		ldd r25,Z+1
 669:lp_solve_5.5/lp_SOS.c ****       if((lp->orig_lowbo[lp->rows + varnr] > 0) &&
 5637               		.loc 1 669 0 discriminator 1
 5638 2454 1816      		cp __zero_reg__,r24
 5639 2456 1906      		cpc __zero_reg__,r25
 5640 2458 04F4      		brge .L199
 5641               		.loc 1 670 0
 5642 245a 2D85      		ldd r18,Y+13
 5643 245c 3E85      		ldd r19,Y+14
 5644 245e 8D81      		ldd r24,Y+5
 5645 2460 9E81      		ldd r25,Y+6
 5646 2462 B901      		movw r22,r18
 5647 2464 0E94 0000 		call is_semicont
 5648 2468 8823      		tst r24
 5649 246a 01F0      		breq .L199
 5650               	.L197:
 667:lp_solve_5.5/lp_SOS.c ****       varnr = abs(list[i]);
 5651               		.loc 1 667 0 discriminator 2
 5652 246c 8981      		ldd r24,Y+1
 5653 246e 9A81      		ldd r25,Y+2
 5654 2470 0196      		adiw r24,1
 5655 2472 9A83      		std Y+2,r25
 5656 2474 8983      		std Y+1,r24
 5657               	.L195:
 667:lp_solve_5.5/lp_SOS.c ****       varnr = abs(list[i]);
 5658               		.loc 1 667 0 is_stmt 0 discriminator 1
 5659 2476 2981      		ldd r18,Y+1
 5660 2478 3A81      		ldd r19,Y+2
 5661 247a 8985      		ldd r24,Y+9
 5662 247c 9A85      		ldd r25,Y+10
 5663 247e 8217      		cp r24,r18
 5664 2480 9307      		cpc r25,r19
 5665 2482 04F0      		brlt .+2
 5666 2484 00C0      		rjmp .L200
 5667               	.L199:
 671:lp_solve_5.5/lp_SOS.c ****         break;
 672:lp_solve_5.5/lp_SOS.c ****     }
 673:lp_solve_5.5/lp_SOS.c **** 
 674:lp_solve_5.5/lp_SOS.c ****    /* Find if there is another lower-bounded variable beyond the type window */
 675:lp_solve_5.5/lp_SOS.c ****     i = i+nn;
 5668               		.loc 1 675 0 is_stmt 1
 5669 2486 2981      		ldd r18,Y+1
 5670 2488 3A81      		ldd r19,Y+2
 5671 248a 8B85      		ldd r24,Y+11
 5672 248c 9C85      		ldd r25,Y+12
 5673 248e 820F      		add r24,r18
 5674 2490 931F      		adc r25,r19
 5675 2492 9A83      		std Y+2,r25
 5676 2494 8983      		std Y+1,r24
 676:lp_solve_5.5/lp_SOS.c ****     while(i <= n) {
 5677               		.loc 1 676 0
 5678 2496 00C0      		rjmp .L201
 5679               	.L206:
 677:lp_solve_5.5/lp_SOS.c ****       varnr = abs(list[i]);
 5680               		.loc 1 677 0
 5681 2498 8981      		ldd r24,Y+1
 5682 249a 9A81      		ldd r25,Y+2
 5683 249c 880F      		lsl r24
 5684 249e 991F      		rol r25
 5685 24a0 2F81      		ldd r18,Y+7
 5686 24a2 3885      		ldd r19,Y+8
 5687 24a4 820F      		add r24,r18
 5688 24a6 931F      		adc r25,r19
 5689 24a8 FC01      		movw r30,r24
 5690 24aa 8081      		ld r24,Z
 5691 24ac 9181      		ldd r25,Z+1
 5692 24ae 9923      		tst r25
 5693 24b0 04F4      		brge .L202
 5694 24b2 9195      		neg r25
 5695 24b4 8195      		neg r24
 5696 24b6 9109      		sbc r25,__zero_reg__
 5697               	.L202:
 5698 24b8 9E87      		std Y+14,r25
 5699 24ba 8D87      		std Y+13,r24
 678:lp_solve_5.5/lp_SOS.c ****       if((lp->orig_lowbo[lp->rows + varnr] > 0) &&
 5700               		.loc 1 678 0
 5701 24bc 8D81      		ldd r24,Y+5
 5702 24be 9E81      		ldd r25,Y+6
 5703 24c0 8E54      		subi r24,78
 5704 24c2 9D4F      		sbci r25,-3
 5705 24c4 FC01      		movw r30,r24
 5706 24c6 2081      		ld r18,Z
 5707 24c8 3181      		ldd r19,Z+1
 5708 24ca 8D81      		ldd r24,Y+5
 5709 24cc 9E81      		ldd r25,Y+6
 5710 24ce 8651      		subi r24,22
 5711 24d0 9E4F      		sbci r25,-2
 5712 24d2 FC01      		movw r30,r24
 5713 24d4 4081      		ld r20,Z
 5714 24d6 5181      		ldd r21,Z+1
 5715 24d8 8D85      		ldd r24,Y+13
 5716 24da 9E85      		ldd r25,Y+14
 5717 24dc 840F      		add r24,r20
 5718 24de 951F      		adc r25,r21
 5719 24e0 880F      		lsl r24
 5720 24e2 991F      		rol r25
 5721 24e4 880F      		lsl r24
 5722 24e6 991F      		rol r25
 5723 24e8 820F      		add r24,r18
 5724 24ea 931F      		adc r25,r19
 5725 24ec FC01      		movw r30,r24
 5726 24ee 8081      		ld r24,Z
 5727 24f0 9181      		ldd r25,Z+1
 5728 24f2 A281      		ldd r26,Z+2
 5729 24f4 B381      		ldd r27,Z+3
 5730 24f6 20E0      		ldi r18,0
 5731 24f8 30E0      		ldi r19,0
 5732 24fa A901      		movw r20,r18
 5733 24fc BC01      		movw r22,r24
 5734 24fe CD01      		movw r24,r26
 5735 2500 0E94 0000 		call __gtsf2
 5736 2504 1816      		cp __zero_reg__,r24
 5737 2506 04F4      		brge .L203
 679:lp_solve_5.5/lp_SOS.c ****          !((lp->sc_vars > 0) && is_semicont(lp, varnr)))
 5738               		.loc 1 679 0 discriminator 1
 5739 2508 8D81      		ldd r24,Y+5
 5740 250a 9E81      		ldd r25,Y+6
 5741 250c 8057      		subi r24,112
 5742 250e 9D4F      		sbci r25,-3
 5743 2510 FC01      		movw r30,r24
 5744 2512 8081      		ld r24,Z
 5745 2514 9181      		ldd r25,Z+1
 678:lp_solve_5.5/lp_SOS.c ****       if((lp->orig_lowbo[lp->rows + varnr] > 0) &&
 5746               		.loc 1 678 0 discriminator 1
 5747 2516 1816      		cp __zero_reg__,r24
 5748 2518 1906      		cpc __zero_reg__,r25
 5749 251a 04F4      		brge .L205
 5750               		.loc 1 679 0
 5751 251c 2D85      		ldd r18,Y+13
 5752 251e 3E85      		ldd r19,Y+14
 5753 2520 8D81      		ldd r24,Y+5
 5754 2522 9E81      		ldd r25,Y+6
 5755 2524 B901      		movw r22,r18
 5756 2526 0E94 0000 		call is_semicont
 5757 252a 8823      		tst r24
 5758 252c 01F0      		breq .L205
 5759               	.L203:
 680:lp_solve_5.5/lp_SOS.c ****         break;
 681:lp_solve_5.5/lp_SOS.c ****       i++;
 5760               		.loc 1 681 0
 5761 252e 8981      		ldd r24,Y+1
 5762 2530 9A81      		ldd r25,Y+2
 5763 2532 0196      		adiw r24,1
 5764 2534 9A83      		std Y+2,r25
 5765 2536 8983      		std Y+1,r24
 5766               	.L201:
 676:lp_solve_5.5/lp_SOS.c ****       varnr = abs(list[i]);
 5767               		.loc 1 676 0
 5768 2538 2981      		ldd r18,Y+1
 5769 253a 3A81      		ldd r19,Y+2
 5770 253c 8985      		ldd r24,Y+9
 5771 253e 9A85      		ldd r25,Y+10
 5772 2540 8217      		cp r24,r18
 5773 2542 9307      		cpc r25,r19
 5774 2544 04F0      		brlt .+2
 5775 2546 00C0      		rjmp .L206
 5776               	.L205:
 682:lp_solve_5.5/lp_SOS.c ****     }
 683:lp_solve_5.5/lp_SOS.c ****     if(i <= n)
 5777               		.loc 1 683 0
 5778 2548 2981      		ldd r18,Y+1
 5779 254a 3A81      		ldd r19,Y+2
 5780 254c 8985      		ldd r24,Y+9
 5781 254e 9A85      		ldd r25,Y+10
 5782 2550 8217      		cp r24,r18
 5783 2552 9307      		cpc r25,r19
 5784 2554 04F0      		brlt .L194
 684:lp_solve_5.5/lp_SOS.c ****       failindex = abs(list[i]);
 5785               		.loc 1 684 0
 5786 2556 8981      		ldd r24,Y+1
 5787 2558 9A81      		ldd r25,Y+2
 5788 255a 880F      		lsl r24
 5789 255c 991F      		rol r25
 5790 255e 2F81      		ldd r18,Y+7
 5791 2560 3885      		ldd r19,Y+8
 5792 2562 820F      		add r24,r18
 5793 2564 931F      		adc r25,r19
 5794 2566 FC01      		movw r30,r24
 5795 2568 8081      		ld r24,Z
 5796 256a 9181      		ldd r25,Z+1
 5797 256c 9923      		tst r25
 5798 256e 04F4      		brge .L207
 5799 2570 9195      		neg r25
 5800 2572 8195      		neg r24
 5801 2574 9109      		sbc r25,__zero_reg__
 5802               	.L207:
 5803 2576 9C83      		std Y+4,r25
 5804 2578 8B83      		std Y+3,r24
 5805 257a 00C0      		rjmp .L194
 5806               	.L211:
 659:lp_solve_5.5/lp_SOS.c ****     }
 5807               		.loc 1 659 0
 5808 257c 0000      		nop
 5809               	.L194:
 685:lp_solve_5.5/lp_SOS.c ****   }
 686:lp_solve_5.5/lp_SOS.c ****   return(failindex);
 5810               		.loc 1 686 0
 5811 257e 8B81      		ldd r24,Y+3
 5812 2580 9C81      		ldd r25,Y+4
 5813               	/* epilogue start */
 687:lp_solve_5.5/lp_SOS.c **** }
 5814               		.loc 1 687 0
 5815 2582 6296      		adiw r28,18
 5816 2584 0FB6      		in __tmp_reg__,__SREG__
 5817 2586 F894      		cli
 5818 2588 DEBF      		out __SP_H__,r29
 5819 258a 0FBE      		out __SREG__,__tmp_reg__
 5820 258c CDBF      		out __SP_L__,r28
 5821 258e DF91      		pop r29
 5822 2590 CF91      		pop r28
 5823 2592 0895      		ret
 5824               		.cfi_endproc
 5825               	.LFE23:
 5827               	.global	SOS_member_index
 5829               	SOS_member_index:
 5830               	.LFB24:
 688:lp_solve_5.5/lp_SOS.c **** 
 689:lp_solve_5.5/lp_SOS.c **** 
 690:lp_solve_5.5/lp_SOS.c **** int SOS_member_index(SOSgroup *group, int sosindex, int member)
 691:lp_solve_5.5/lp_SOS.c **** {
 5831               		.loc 1 691 0
 5832               		.cfi_startproc
 5833 2594 0F93      		push r16
 5834               	.LCFI85:
 5835               		.cfi_def_cfa_offset 3
 5836               		.cfi_offset 16, -2
 5837 2596 CF93      		push r28
 5838               	.LCFI86:
 5839               		.cfi_def_cfa_offset 4
 5840               		.cfi_offset 28, -3
 5841 2598 DF93      		push r29
 5842               	.LCFI87:
 5843               		.cfi_def_cfa_offset 5
 5844               		.cfi_offset 29, -4
 5845 259a CDB7      		in r28,__SP_L__
 5846 259c DEB7      		in r29,__SP_H__
 5847               	.LCFI88:
 5848               		.cfi_def_cfa_register 28
 5849 259e 2A97      		sbiw r28,10
 5850               	.LCFI89:
 5851               		.cfi_def_cfa_offset 15
 5852 25a0 0FB6      		in __tmp_reg__,__SREG__
 5853 25a2 F894      		cli
 5854 25a4 DEBF      		out __SP_H__,r29
 5855 25a6 0FBE      		out __SREG__,__tmp_reg__
 5856 25a8 CDBF      		out __SP_L__,r28
 5857               	/* prologue: function */
 5858               	/* frame size = 10 */
 5859               	/* stack size = 13 */
 5860               	.L__stack_usage = 13
 5861 25aa 9E83      		std Y+6,r25
 5862 25ac 8D83      		std Y+5,r24
 5863 25ae 7887      		std Y+8,r23
 5864 25b0 6F83      		std Y+7,r22
 5865 25b2 5A87      		std Y+10,r21
 5866 25b4 4987      		std Y+9,r20
 692:lp_solve_5.5/lp_SOS.c ****   int    n;
 693:lp_solve_5.5/lp_SOS.c ****   SOSrec *SOS;
 694:lp_solve_5.5/lp_SOS.c **** 
 695:lp_solve_5.5/lp_SOS.c ****   SOS = group->sos_list[sosindex-1];
 5867               		.loc 1 695 0
 5868 25b6 8D81      		ldd r24,Y+5
 5869 25b8 9E81      		ldd r25,Y+6
 5870 25ba FC01      		movw r30,r24
 5871 25bc 2281      		ldd r18,Z+2
 5872 25be 3381      		ldd r19,Z+3
 5873 25c0 8F81      		ldd r24,Y+7
 5874 25c2 9885      		ldd r25,Y+8
 5875 25c4 8150      		subi r24,1
 5876 25c6 9048      		sbci r25,-128
 5877 25c8 880F      		lsl r24
 5878 25ca 991F      		rol r25
 5879 25cc 820F      		add r24,r18
 5880 25ce 931F      		adc r25,r19
 5881 25d0 FC01      		movw r30,r24
 5882 25d2 8081      		ld r24,Z
 5883 25d4 9181      		ldd r25,Z+1
 5884 25d6 9C83      		std Y+4,r25
 5885 25d8 8B83      		std Y+3,r24
 696:lp_solve_5.5/lp_SOS.c ****   n = SOS->members[0];
 5886               		.loc 1 696 0
 5887 25da 8B81      		ldd r24,Y+3
 5888 25dc 9C81      		ldd r25,Y+4
 5889 25de FC01      		movw r30,r24
 5890 25e0 8585      		ldd r24,Z+13
 5891 25e2 9685      		ldd r25,Z+14
 5892 25e4 FC01      		movw r30,r24
 5893 25e6 8081      		ld r24,Z
 5894 25e8 9181      		ldd r25,Z+1
 5895 25ea 9A83      		std Y+2,r25
 5896 25ec 8983      		std Y+1,r24
 697:lp_solve_5.5/lp_SOS.c **** 
 698:lp_solve_5.5/lp_SOS.c ****   n = searchFor(member, SOS->membersSorted, n, 0, FALSE);
 5897               		.loc 1 698 0
 5898 25ee 8B81      		ldd r24,Y+3
 5899 25f0 9C81      		ldd r25,Y+4
 5900 25f2 FC01      		movw r30,r24
 5901 25f4 6189      		ldd r22,Z+17
 5902 25f6 7289      		ldd r23,Z+18
 5903 25f8 4981      		ldd r20,Y+1
 5904 25fa 5A81      		ldd r21,Y+2
 5905 25fc 8985      		ldd r24,Y+9
 5906 25fe 9A85      		ldd r25,Y+10
 5907 2600 00E0      		ldi r16,0
 5908 2602 20E0      		ldi r18,0
 5909 2604 30E0      		ldi r19,0
 5910 2606 0E94 0000 		call searchFor
 5911 260a 9A83      		std Y+2,r25
 5912 260c 8983      		std Y+1,r24
 699:lp_solve_5.5/lp_SOS.c ****   if(n >= 0)
 5913               		.loc 1 699 0
 5914 260e 8981      		ldd r24,Y+1
 5915 2610 9A81      		ldd r25,Y+2
 5916 2612 9923      		tst r25
 5917 2614 04F0      		brlt .L213
 700:lp_solve_5.5/lp_SOS.c ****     n = SOS->membersMapped[n];
 5918               		.loc 1 700 0
 5919 2616 8B81      		ldd r24,Y+3
 5920 2618 9C81      		ldd r25,Y+4
 5921 261a FC01      		movw r30,r24
 5922 261c 2389      		ldd r18,Z+19
 5923 261e 3489      		ldd r19,Z+20
 5924 2620 8981      		ldd r24,Y+1
 5925 2622 9A81      		ldd r25,Y+2
 5926 2624 880F      		lsl r24
 5927 2626 991F      		rol r25
 5928 2628 820F      		add r24,r18
 5929 262a 931F      		adc r25,r19
 5930 262c FC01      		movw r30,r24
 5931 262e 8081      		ld r24,Z
 5932 2630 9181      		ldd r25,Z+1
 5933 2632 9A83      		std Y+2,r25
 5934 2634 8983      		std Y+1,r24
 5935               	.L213:
 701:lp_solve_5.5/lp_SOS.c **** 
 702:lp_solve_5.5/lp_SOS.c ****   return(n);
 5936               		.loc 1 702 0
 5937 2636 8981      		ldd r24,Y+1
 5938 2638 9A81      		ldd r25,Y+2
 5939               	/* epilogue start */
 703:lp_solve_5.5/lp_SOS.c **** }
 5940               		.loc 1 703 0
 5941 263a 2A96      		adiw r28,10
 5942 263c 0FB6      		in __tmp_reg__,__SREG__
 5943 263e F894      		cli
 5944 2640 DEBF      		out __SP_H__,r29
 5945 2642 0FBE      		out __SREG__,__tmp_reg__
 5946 2644 CDBF      		out __SP_L__,r28
 5947 2646 DF91      		pop r29
 5948 2648 CF91      		pop r28
 5949 264a 0F91      		pop r16
 5950 264c 0895      		ret
 5951               		.cfi_endproc
 5952               	.LFE24:
 5954               	.global	SOS_memberships
 5956               	SOS_memberships:
 5957               	.LFB25:
 704:lp_solve_5.5/lp_SOS.c **** 
 705:lp_solve_5.5/lp_SOS.c **** 
 706:lp_solve_5.5/lp_SOS.c **** int SOS_memberships(SOSgroup *group, int varnr)
 707:lp_solve_5.5/lp_SOS.c **** {
 5958               		.loc 1 707 0
 5959               		.cfi_startproc
 5960 264e CF93      		push r28
 5961               	.LCFI90:
 5962               		.cfi_def_cfa_offset 3
 5963               		.cfi_offset 28, -2
 5964 2650 DF93      		push r29
 5965               	.LCFI91:
 5966               		.cfi_def_cfa_offset 4
 5967               		.cfi_offset 29, -3
 5968 2652 CDB7      		in r28,__SP_L__
 5969 2654 DEB7      		in r29,__SP_H__
 5970               	.LCFI92:
 5971               		.cfi_def_cfa_register 28
 5972 2656 2A97      		sbiw r28,10
 5973               	.LCFI93:
 5974               		.cfi_def_cfa_offset 14
 5975 2658 0FB6      		in __tmp_reg__,__SREG__
 5976 265a F894      		cli
 5977 265c DEBF      		out __SP_H__,r29
 5978 265e 0FBE      		out __SREG__,__tmp_reg__
 5979 2660 CDBF      		out __SP_L__,r28
 5980               	/* prologue: function */
 5981               	/* frame size = 10 */
 5982               	/* stack size = 12 */
 5983               	.L__stack_usage = 12
 5984 2662 9887      		std Y+8,r25
 5985 2664 8F83      		std Y+7,r24
 5986 2666 7A87      		std Y+10,r23
 5987 2668 6987      		std Y+9,r22
 708:lp_solve_5.5/lp_SOS.c ****   int   i, n = 0;
 5988               		.loc 1 708 0
 5989 266a 1C82      		std Y+4,__zero_reg__
 5990 266c 1B82      		std Y+3,__zero_reg__
 709:lp_solve_5.5/lp_SOS.c ****   lprec *lp;
 710:lp_solve_5.5/lp_SOS.c **** 
 711:lp_solve_5.5/lp_SOS.c ****   /* Check if there is anything to do */
 712:lp_solve_5.5/lp_SOS.c ****   if((group == NULL) || (SOS_count(lp = group->lp) == 0))
 5991               		.loc 1 712 0
 5992 266e 8F81      		ldd r24,Y+7
 5993 2670 9885      		ldd r25,Y+8
 5994 2672 892B      		or r24,r25
 5995 2674 01F0      		breq .L216
 5996               		.loc 1 712 0 is_stmt 0 discriminator 1
 5997 2676 8F81      		ldd r24,Y+7
 5998 2678 9885      		ldd r25,Y+8
 5999 267a FC01      		movw r30,r24
 6000 267c 8081      		ld r24,Z
 6001 267e 9181      		ldd r25,Z+1
 6002 2680 9E83      		std Y+6,r25
 6003 2682 8D83      		std Y+5,r24
 6004 2684 8D81      		ldd r24,Y+5
 6005 2686 9E81      		ldd r25,Y+6
 6006 2688 0E94 0000 		call SOS_count
 6007 268c 892B      		or r24,r25
 6008 268e 01F4      		brne .L217
 6009               	.L216:
 713:lp_solve_5.5/lp_SOS.c ****     return( n );
 6010               		.loc 1 713 0 is_stmt 1
 6011 2690 8B81      		ldd r24,Y+3
 6012 2692 9C81      		ldd r25,Y+4
 6013 2694 00C0      		rjmp .L218
 6014               	.L217:
 714:lp_solve_5.5/lp_SOS.c **** 
 715:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
 716:lp_solve_5.5/lp_SOS.c ****   if((varnr < 0) || (varnr > lp->columns)) {
 717:lp_solve_5.5/lp_SOS.c ****     report(lp, IMPORTANT, "SOS_memberships: Invalid variable index %d given\n", varnr);
 718:lp_solve_5.5/lp_SOS.c ****     return( n );
 719:lp_solve_5.5/lp_SOS.c ****   }
 720:lp_solve_5.5/lp_SOS.c **** #endif
 721:lp_solve_5.5/lp_SOS.c **** 
 722:lp_solve_5.5/lp_SOS.c ****   if(varnr == 0) {
 6015               		.loc 1 722 0
 6016 2696 8985      		ldd r24,Y+9
 6017 2698 9A85      		ldd r25,Y+10
 6018 269a 892B      		or r24,r25
 6019 269c 01F4      		brne .L219
 723:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= lp->columns; i++)
 6020               		.loc 1 723 0
 6021 269e 81E0      		ldi r24,lo8(1)
 6022 26a0 90E0      		ldi r25,0
 6023 26a2 9A83      		std Y+2,r25
 6024 26a4 8983      		std Y+1,r24
 6025 26a6 00C0      		rjmp .L220
 6026               	.L222:
 724:lp_solve_5.5/lp_SOS.c ****       if(group->memberpos[i] > group->memberpos[i-1])
 6027               		.loc 1 724 0
 6028 26a8 8F81      		ldd r24,Y+7
 6029 26aa 9885      		ldd r25,Y+8
 6030 26ac FC01      		movw r30,r24
 6031 26ae 2685      		ldd r18,Z+14
 6032 26b0 3785      		ldd r19,Z+15
 6033 26b2 8981      		ldd r24,Y+1
 6034 26b4 9A81      		ldd r25,Y+2
 6035 26b6 880F      		lsl r24
 6036 26b8 991F      		rol r25
 6037 26ba 820F      		add r24,r18
 6038 26bc 931F      		adc r25,r19
 6039 26be FC01      		movw r30,r24
 6040 26c0 2081      		ld r18,Z
 6041 26c2 3181      		ldd r19,Z+1
 6042 26c4 8F81      		ldd r24,Y+7
 6043 26c6 9885      		ldd r25,Y+8
 6044 26c8 FC01      		movw r30,r24
 6045 26ca 4685      		ldd r20,Z+14
 6046 26cc 5785      		ldd r21,Z+15
 6047 26ce 8981      		ldd r24,Y+1
 6048 26d0 9A81      		ldd r25,Y+2
 6049 26d2 8150      		subi r24,1
 6050 26d4 9048      		sbci r25,-128
 6051 26d6 880F      		lsl r24
 6052 26d8 991F      		rol r25
 6053 26da 840F      		add r24,r20
 6054 26dc 951F      		adc r25,r21
 6055 26de FC01      		movw r30,r24
 6056 26e0 8081      		ld r24,Z
 6057 26e2 9181      		ldd r25,Z+1
 6058 26e4 8217      		cp r24,r18
 6059 26e6 9307      		cpc r25,r19
 6060 26e8 04F4      		brge .L221
 725:lp_solve_5.5/lp_SOS.c ****         n++;
 6061               		.loc 1 725 0
 6062 26ea 8B81      		ldd r24,Y+3
 6063 26ec 9C81      		ldd r25,Y+4
 6064 26ee 0196      		adiw r24,1
 6065 26f0 9C83      		std Y+4,r25
 6066 26f2 8B83      		std Y+3,r24
 6067               	.L221:
 723:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= lp->columns; i++)
 6068               		.loc 1 723 0 discriminator 2
 6069 26f4 8981      		ldd r24,Y+1
 6070 26f6 9A81      		ldd r25,Y+2
 6071 26f8 0196      		adiw r24,1
 6072 26fa 9A83      		std Y+2,r25
 6073 26fc 8983      		std Y+1,r24
 6074               	.L220:
 723:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= lp->columns; i++)
 6075               		.loc 1 723 0 is_stmt 0 discriminator 1
 6076 26fe 8D81      		ldd r24,Y+5
 6077 2700 9E81      		ldd r25,Y+6
 6078 2702 8451      		subi r24,20
 6079 2704 9E4F      		sbci r25,-2
 6080 2706 FC01      		movw r30,r24
 6081 2708 2081      		ld r18,Z
 6082 270a 3181      		ldd r19,Z+1
 6083 270c 8981      		ldd r24,Y+1
 6084 270e 9A81      		ldd r25,Y+2
 6085 2710 2817      		cp r18,r24
 6086 2712 3907      		cpc r19,r25
 6087 2714 04F4      		brge .L222
 6088 2716 00C0      		rjmp .L223
 6089               	.L219:
 726:lp_solve_5.5/lp_SOS.c ****   }
 727:lp_solve_5.5/lp_SOS.c ****   else
 728:lp_solve_5.5/lp_SOS.c ****     n = group->memberpos[varnr] - group->memberpos[varnr-1];
 6090               		.loc 1 728 0 is_stmt 1
 6091 2718 8F81      		ldd r24,Y+7
 6092 271a 9885      		ldd r25,Y+8
 6093 271c FC01      		movw r30,r24
 6094 271e 2685      		ldd r18,Z+14
 6095 2720 3785      		ldd r19,Z+15
 6096 2722 8985      		ldd r24,Y+9
 6097 2724 9A85      		ldd r25,Y+10
 6098 2726 880F      		lsl r24
 6099 2728 991F      		rol r25
 6100 272a 820F      		add r24,r18
 6101 272c 931F      		adc r25,r19
 6102 272e FC01      		movw r30,r24
 6103 2730 2081      		ld r18,Z
 6104 2732 3181      		ldd r19,Z+1
 6105 2734 8F81      		ldd r24,Y+7
 6106 2736 9885      		ldd r25,Y+8
 6107 2738 FC01      		movw r30,r24
 6108 273a 4685      		ldd r20,Z+14
 6109 273c 5785      		ldd r21,Z+15
 6110 273e 8985      		ldd r24,Y+9
 6111 2740 9A85      		ldd r25,Y+10
 6112 2742 8150      		subi r24,1
 6113 2744 9048      		sbci r25,-128
 6114 2746 880F      		lsl r24
 6115 2748 991F      		rol r25
 6116 274a 840F      		add r24,r20
 6117 274c 951F      		adc r25,r21
 6118 274e FC01      		movw r30,r24
 6119 2750 8081      		ld r24,Z
 6120 2752 9181      		ldd r25,Z+1
 6121 2754 A901      		movw r20,r18
 6122 2756 481B      		sub r20,r24
 6123 2758 590B      		sbc r21,r25
 6124 275a CA01      		movw r24,r20
 6125 275c 9C83      		std Y+4,r25
 6126 275e 8B83      		std Y+3,r24
 6127               	.L223:
 729:lp_solve_5.5/lp_SOS.c **** 
 730:lp_solve_5.5/lp_SOS.c ****   return( n );
 6128               		.loc 1 730 0
 6129 2760 8B81      		ldd r24,Y+3
 6130 2762 9C81      		ldd r25,Y+4
 6131               	.L218:
 6132               	/* epilogue start */
 731:lp_solve_5.5/lp_SOS.c **** }
 6133               		.loc 1 731 0
 6134 2764 2A96      		adiw r28,10
 6135 2766 0FB6      		in __tmp_reg__,__SREG__
 6136 2768 F894      		cli
 6137 276a DEBF      		out __SP_H__,r29
 6138 276c 0FBE      		out __SREG__,__tmp_reg__
 6139 276e CDBF      		out __SP_L__,r28
 6140 2770 DF91      		pop r29
 6141 2772 CF91      		pop r28
 6142 2774 0895      		ret
 6143               		.cfi_endproc
 6144               	.LFE25:
 6146               	.global	SOS_is_member
 6148               	SOS_is_member:
 6149               	.LFB26:
 732:lp_solve_5.5/lp_SOS.c **** 
 733:lp_solve_5.5/lp_SOS.c **** 
 734:lp_solve_5.5/lp_SOS.c **** int SOS_is_member(SOSgroup *group, int sosindex, int column)
 735:lp_solve_5.5/lp_SOS.c **** {
 6150               		.loc 1 735 0
 6151               		.cfi_startproc
 6152 2776 CF93      		push r28
 6153               	.LCFI94:
 6154               		.cfi_def_cfa_offset 3
 6155               		.cfi_offset 28, -2
 6156 2778 DF93      		push r29
 6157               	.LCFI95:
 6158               		.cfi_def_cfa_offset 4
 6159               		.cfi_offset 29, -3
 6160 277a CDB7      		in r28,__SP_L__
 6161 277c DEB7      		in r29,__SP_H__
 6162               	.LCFI96:
 6163               		.cfi_def_cfa_register 28
 6164 277e 2E97      		sbiw r28,14
 6165               	.LCFI97:
 6166               		.cfi_def_cfa_offset 18
 6167 2780 0FB6      		in __tmp_reg__,__SREG__
 6168 2782 F894      		cli
 6169 2784 DEBF      		out __SP_H__,r29
 6170 2786 0FBE      		out __SREG__,__tmp_reg__
 6171 2788 CDBF      		out __SP_L__,r28
 6172               	/* prologue: function */
 6173               	/* frame size = 14 */
 6174               	/* stack size = 16 */
 6175               	.L__stack_usage = 16
 6176 278a 9A87      		std Y+10,r25
 6177 278c 8987      		std Y+9,r24
 6178 278e 7C87      		std Y+12,r23
 6179 2790 6B87      		std Y+11,r22
 6180 2792 5E87      		std Y+14,r21
 6181 2794 4D87      		std Y+13,r20
 736:lp_solve_5.5/lp_SOS.c ****   int    i, n = FALSE, *list;
 6182               		.loc 1 736 0
 6183 2796 1A82      		std Y+2,__zero_reg__
 6184 2798 1982      		std Y+1,__zero_reg__
 737:lp_solve_5.5/lp_SOS.c ****   lprec  *lp;
 738:lp_solve_5.5/lp_SOS.c **** 
 739:lp_solve_5.5/lp_SOS.c ****   if(group == NULL)
 6185               		.loc 1 739 0
 6186 279a 8985      		ldd r24,Y+9
 6187 279c 9A85      		ldd r25,Y+10
 6188 279e 892B      		or r24,r25
 6189 27a0 01F4      		brne .L225
 740:lp_solve_5.5/lp_SOS.c ****     return( FALSE );
 6190               		.loc 1 740 0
 6191 27a2 80E0      		ldi r24,0
 6192 27a4 90E0      		ldi r25,0
 6193 27a6 00C0      		rjmp .L226
 6194               	.L225:
 741:lp_solve_5.5/lp_SOS.c ****   lp = group->lp;
 6195               		.loc 1 741 0
 6196 27a8 8985      		ldd r24,Y+9
 6197 27aa 9A85      		ldd r25,Y+10
 6198 27ac FC01      		movw r30,r24
 6199 27ae 8081      		ld r24,Z
 6200 27b0 9181      		ldd r25,Z+1
 6201 27b2 9C83      		std Y+4,r25
 6202 27b4 8B83      		std Y+3,r24
 742:lp_solve_5.5/lp_SOS.c **** 
 743:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
 744:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
 745:lp_solve_5.5/lp_SOS.c ****     report(lp, IMPORTANT, "SOS_is_member: Invalid SOS index %d\n", sosindex);
 746:lp_solve_5.5/lp_SOS.c ****     return(n);
 747:lp_solve_5.5/lp_SOS.c ****   }
 748:lp_solve_5.5/lp_SOS.c **** #endif
 749:lp_solve_5.5/lp_SOS.c **** 
 750:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0) {
 6203               		.loc 1 750 0
 6204 27b6 8B85      		ldd r24,Y+11
 6205 27b8 9C85      		ldd r25,Y+12
 6206 27ba 892B      		or r24,r25
 6207 27bc 01F4      		brne .L227
 751:lp_solve_5.5/lp_SOS.c ****     if(lp->var_type[column] & (ISSOS | ISGUB))
 6208               		.loc 1 751 0
 6209 27be 8B81      		ldd r24,Y+3
 6210 27c0 9C81      		ldd r25,Y+4
 6211 27c2 8A57      		subi r24,122
 6212 27c4 9D4F      		sbci r25,-3
 6213 27c6 FC01      		movw r30,r24
 6214 27c8 2081      		ld r18,Z
 6215 27ca 3181      		ldd r19,Z+1
 6216 27cc 8D85      		ldd r24,Y+13
 6217 27ce 9E85      		ldd r25,Y+14
 6218 27d0 820F      		add r24,r18
 6219 27d2 931F      		adc r25,r19
 6220 27d4 FC01      		movw r30,r24
 6221 27d6 8081      		ld r24,Z
 6222 27d8 882F      		mov r24,r24
 6223 27da 90E0      		ldi r25,0
 6224 27dc 8471      		andi r24,20
 6225 27de 9927      		clr r25
 6226 27e0 892B      		or r24,r25
 6227 27e2 01F4      		brne .+2
 6228 27e4 00C0      		rjmp .L230
 752:lp_solve_5.5/lp_SOS.c ****       n = (MYBOOL) (SOS_memberships(group, column) > 0);
 6229               		.loc 1 752 0
 6230 27e6 2D85      		ldd r18,Y+13
 6231 27e8 3E85      		ldd r19,Y+14
 6232 27ea 8985      		ldd r24,Y+9
 6233 27ec 9A85      		ldd r25,Y+10
 6234 27ee B901      		movw r22,r18
 6235 27f0 0E94 0000 		call SOS_memberships
 6236 27f4 21E0      		ldi r18,lo8(1)
 6237 27f6 1816      		cp __zero_reg__,r24
 6238 27f8 1906      		cpc __zero_reg__,r25
 6239 27fa 04F0      		brlt .L229
 6240 27fc 20E0      		ldi r18,0
 6241               	.L229:
 6242 27fe 822F      		mov r24,r18
 6243 2800 90E0      		ldi r25,0
 6244 2802 9A83      		std Y+2,r25
 6245 2804 8983      		std Y+1,r24
 6246 2806 00C0      		rjmp .L230
 6247               	.L227:
 753:lp_solve_5.5/lp_SOS.c ****   }
 754:lp_solve_5.5/lp_SOS.c ****   else if(lp->var_type[column] & (ISSOS | ISGUB)) {
 6248               		.loc 1 754 0
 6249 2808 8B81      		ldd r24,Y+3
 6250 280a 9C81      		ldd r25,Y+4
 6251 280c 8A57      		subi r24,122
 6252 280e 9D4F      		sbci r25,-3
 6253 2810 FC01      		movw r30,r24
 6254 2812 2081      		ld r18,Z
 6255 2814 3181      		ldd r19,Z+1
 6256 2816 8D85      		ldd r24,Y+13
 6257 2818 9E85      		ldd r25,Y+14
 6258 281a 820F      		add r24,r18
 6259 281c 931F      		adc r25,r19
 6260 281e FC01      		movw r30,r24
 6261 2820 8081      		ld r24,Z
 6262 2822 882F      		mov r24,r24
 6263 2824 90E0      		ldi r25,0
 6264 2826 8471      		andi r24,20
 6265 2828 9927      		clr r25
 6266 282a 892B      		or r24,r25
 6267 282c 01F0      		breq .L230
 755:lp_solve_5.5/lp_SOS.c **** 
 756:lp_solve_5.5/lp_SOS.c ****    /* Search for the variable */
 757:lp_solve_5.5/lp_SOS.c ****     i = SOS_member_index(group, sosindex, column);
 6268               		.loc 1 757 0
 6269 282e 4D85      		ldd r20,Y+13
 6270 2830 5E85      		ldd r21,Y+14
 6271 2832 2B85      		ldd r18,Y+11
 6272 2834 3C85      		ldd r19,Y+12
 6273 2836 8985      		ldd r24,Y+9
 6274 2838 9A85      		ldd r25,Y+10
 6275 283a B901      		movw r22,r18
 6276 283c 0E94 0000 		call SOS_member_index
 6277 2840 9E83      		std Y+6,r25
 6278 2842 8D83      		std Y+5,r24
 758:lp_solve_5.5/lp_SOS.c **** 
 759:lp_solve_5.5/lp_SOS.c ****    /* Signal active status if found, otherwise return FALSE */
 760:lp_solve_5.5/lp_SOS.c ****     if(i > 0) {
 6279               		.loc 1 760 0
 6280 2844 8D81      		ldd r24,Y+5
 6281 2846 9E81      		ldd r25,Y+6
 6282 2848 1816      		cp __zero_reg__,r24
 6283 284a 1906      		cpc __zero_reg__,r25
 6284 284c 04F4      		brge .L230
 761:lp_solve_5.5/lp_SOS.c ****       list = group->sos_list[sosindex-1]->members;
 6285               		.loc 1 761 0
 6286 284e 8985      		ldd r24,Y+9
 6287 2850 9A85      		ldd r25,Y+10
 6288 2852 FC01      		movw r30,r24
 6289 2854 2281      		ldd r18,Z+2
 6290 2856 3381      		ldd r19,Z+3
 6291 2858 8B85      		ldd r24,Y+11
 6292 285a 9C85      		ldd r25,Y+12
 6293 285c 8150      		subi r24,1
 6294 285e 9048      		sbci r25,-128
 6295 2860 880F      		lsl r24
 6296 2862 991F      		rol r25
 6297 2864 820F      		add r24,r18
 6298 2866 931F      		adc r25,r19
 6299 2868 FC01      		movw r30,r24
 6300 286a 8081      		ld r24,Z
 6301 286c 9181      		ldd r25,Z+1
 6302 286e FC01      		movw r30,r24
 6303 2870 8585      		ldd r24,Z+13
 6304 2872 9685      		ldd r25,Z+14
 6305 2874 9887      		std Y+8,r25
 6306 2876 8F83      		std Y+7,r24
 762:lp_solve_5.5/lp_SOS.c ****       if(list[i] < 0)
 6307               		.loc 1 762 0
 6308 2878 8D81      		ldd r24,Y+5
 6309 287a 9E81      		ldd r25,Y+6
 6310 287c 880F      		lsl r24
 6311 287e 991F      		rol r25
 6312 2880 2F81      		ldd r18,Y+7
 6313 2882 3885      		ldd r19,Y+8
 6314 2884 820F      		add r24,r18
 6315 2886 931F      		adc r25,r19
 6316 2888 FC01      		movw r30,r24
 6317 288a 8081      		ld r24,Z
 6318 288c 9181      		ldd r25,Z+1
 6319 288e 9923      		tst r25
 6320 2890 04F4      		brge .L231
 763:lp_solve_5.5/lp_SOS.c ****         n = -TRUE;
 6321               		.loc 1 763 0
 6322 2892 8FEF      		ldi r24,lo8(-1)
 6323 2894 9FEF      		ldi r25,lo8(-1)
 6324 2896 9A83      		std Y+2,r25
 6325 2898 8983      		std Y+1,r24
 6326 289a 00C0      		rjmp .L230
 6327               	.L231:
 764:lp_solve_5.5/lp_SOS.c ****       else
 765:lp_solve_5.5/lp_SOS.c ****       n = TRUE;
 6328               		.loc 1 765 0
 6329 289c 81E0      		ldi r24,lo8(1)
 6330 289e 90E0      		ldi r25,0
 6331 28a0 9A83      		std Y+2,r25
 6332 28a2 8983      		std Y+1,r24
 6333               	.L230:
 766:lp_solve_5.5/lp_SOS.c ****     }
 767:lp_solve_5.5/lp_SOS.c ****   }
 768:lp_solve_5.5/lp_SOS.c ****   return(n);
 6334               		.loc 1 768 0
 6335 28a4 8981      		ldd r24,Y+1
 6336 28a6 9A81      		ldd r25,Y+2
 6337               	.L226:
 6338               	/* epilogue start */
 769:lp_solve_5.5/lp_SOS.c **** }
 6339               		.loc 1 769 0
 6340 28a8 2E96      		adiw r28,14
 6341 28aa 0FB6      		in __tmp_reg__,__SREG__
 6342 28ac F894      		cli
 6343 28ae DEBF      		out __SP_H__,r29
 6344 28b0 0FBE      		out __SREG__,__tmp_reg__
 6345 28b2 CDBF      		out __SP_L__,r28
 6346 28b4 DF91      		pop r29
 6347 28b6 CF91      		pop r28
 6348 28b8 0895      		ret
 6349               		.cfi_endproc
 6350               	.LFE26:
 6352               	.global	SOS_is_member_of_type
 6354               	SOS_is_member_of_type:
 6355               	.LFB27:
 770:lp_solve_5.5/lp_SOS.c **** 
 771:lp_solve_5.5/lp_SOS.c **** 
 772:lp_solve_5.5/lp_SOS.c **** MYBOOL SOS_is_member_of_type(SOSgroup *group, int column, int sostype)
 773:lp_solve_5.5/lp_SOS.c **** {
 6356               		.loc 1 773 0
 6357               		.cfi_startproc
 6358 28ba CF93      		push r28
 6359               	.LCFI98:
 6360               		.cfi_def_cfa_offset 3
 6361               		.cfi_offset 28, -2
 6362 28bc DF93      		push r29
 6363               	.LCFI99:
 6364               		.cfi_def_cfa_offset 4
 6365               		.cfi_offset 29, -3
 6366 28be CDB7      		in r28,__SP_L__
 6367 28c0 DEB7      		in r29,__SP_H__
 6368               	.LCFI100:
 6369               		.cfi_def_cfa_register 28
 6370 28c2 2C97      		sbiw r28,12
 6371               	.LCFI101:
 6372               		.cfi_def_cfa_offset 16
 6373 28c4 0FB6      		in __tmp_reg__,__SREG__
 6374 28c6 F894      		cli
 6375 28c8 DEBF      		out __SP_H__,r29
 6376 28ca 0FBE      		out __SREG__,__tmp_reg__
 6377 28cc CDBF      		out __SP_L__,r28
 6378               	/* prologue: function */
 6379               	/* frame size = 12 */
 6380               	/* stack size = 14 */
 6381               	.L__stack_usage = 14
 6382 28ce 9887      		std Y+8,r25
 6383 28d0 8F83      		std Y+7,r24
 6384 28d2 7A87      		std Y+10,r23
 6385 28d4 6987      		std Y+9,r22
 6386 28d6 5C87      		std Y+12,r21
 6387 28d8 4B87      		std Y+11,r20
 774:lp_solve_5.5/lp_SOS.c ****   int i, k, n;
 775:lp_solve_5.5/lp_SOS.c **** 
 776:lp_solve_5.5/lp_SOS.c ****   if(group != NULL)
 6388               		.loc 1 776 0
 6389 28da 8F81      		ldd r24,Y+7
 6390 28dc 9885      		ldd r25,Y+8
 6391 28de 892B      		or r24,r25
 6392 28e0 01F4      		brne .+2
 6393 28e2 00C0      		rjmp .L233
 777:lp_solve_5.5/lp_SOS.c ****   for(i = group->memberpos[column-1]; i < group->memberpos[column]; i++) {
 6394               		.loc 1 777 0
 6395 28e4 8F81      		ldd r24,Y+7
 6396 28e6 9885      		ldd r25,Y+8
 6397 28e8 FC01      		movw r30,r24
 6398 28ea 2685      		ldd r18,Z+14
 6399 28ec 3785      		ldd r19,Z+15
 6400 28ee 8985      		ldd r24,Y+9
 6401 28f0 9A85      		ldd r25,Y+10
 6402 28f2 8150      		subi r24,1
 6403 28f4 9048      		sbci r25,-128
 6404 28f6 880F      		lsl r24
 6405 28f8 991F      		rol r25
 6406 28fa 820F      		add r24,r18
 6407 28fc 931F      		adc r25,r19
 6408 28fe FC01      		movw r30,r24
 6409 2900 8081      		ld r24,Z
 6410 2902 9181      		ldd r25,Z+1
 6411 2904 9A83      		std Y+2,r25
 6412 2906 8983      		std Y+1,r24
 6413 2908 00C0      		rjmp .L234
 6414               	.L237:
 778:lp_solve_5.5/lp_SOS.c ****     k = group->membership[i];
 6415               		.loc 1 778 0
 6416 290a 8F81      		ldd r24,Y+7
 6417 290c 9885      		ldd r25,Y+8
 6418 290e FC01      		movw r30,r24
 6419 2910 2485      		ldd r18,Z+12
 6420 2912 3585      		ldd r19,Z+13
 6421 2914 8981      		ldd r24,Y+1
 6422 2916 9A81      		ldd r25,Y+2
 6423 2918 880F      		lsl r24
 6424 291a 991F      		rol r25
 6425 291c 820F      		add r24,r18
 6426 291e 931F      		adc r25,r19
 6427 2920 FC01      		movw r30,r24
 6428 2922 8081      		ld r24,Z
 6429 2924 9181      		ldd r25,Z+1
 6430 2926 9C83      		std Y+4,r25
 6431 2928 8B83      		std Y+3,r24
 779:lp_solve_5.5/lp_SOS.c ****     n = SOS_get_type(group, k);
 6432               		.loc 1 779 0
 6433 292a 2B81      		ldd r18,Y+3
 6434 292c 3C81      		ldd r19,Y+4
 6435 292e 8F81      		ldd r24,Y+7
 6436 2930 9885      		ldd r25,Y+8
 6437 2932 B901      		movw r22,r18
 6438 2934 0E94 0000 		call SOS_get_type
 6439 2938 9E83      		std Y+6,r25
 6440 293a 8D83      		std Y+5,r24
 780:lp_solve_5.5/lp_SOS.c ****     if(((n == sostype) ||
 6441               		.loc 1 780 0
 6442 293c 2D81      		ldd r18,Y+5
 6443 293e 3E81      		ldd r19,Y+6
 6444 2940 8B85      		ldd r24,Y+11
 6445 2942 9C85      		ldd r25,Y+12
 6446 2944 2817      		cp r18,r24
 6447 2946 3907      		cpc r19,r25
 6448 2948 01F4      		brne .L235
 781:lp_solve_5.5/lp_SOS.c ****         ((sostype == SOSn) && (n > 2))) && SOS_is_member(group, k, column))
 6449               		.loc 1 781 0
 6450 294a 4985      		ldd r20,Y+9
 6451 294c 5A85      		ldd r21,Y+10
 6452 294e 2B81      		ldd r18,Y+3
 6453 2950 3C81      		ldd r19,Y+4
 6454 2952 8F81      		ldd r24,Y+7
 6455 2954 9885      		ldd r25,Y+8
 6456 2956 B901      		movw r22,r18
 6457 2958 0E94 0000 		call SOS_is_member
 6458 295c 892B      		or r24,r25
 6459 295e 01F0      		breq .L235
 782:lp_solve_5.5/lp_SOS.c ****       return(TRUE);
 6460               		.loc 1 782 0
 6461 2960 81E0      		ldi r24,lo8(1)
 6462 2962 00C0      		rjmp .L236
 6463               	.L235:
 777:lp_solve_5.5/lp_SOS.c ****     k = group->membership[i];
 6464               		.loc 1 777 0 discriminator 2
 6465 2964 8981      		ldd r24,Y+1
 6466 2966 9A81      		ldd r25,Y+2
 6467 2968 0196      		adiw r24,1
 6468 296a 9A83      		std Y+2,r25
 6469 296c 8983      		std Y+1,r24
 6470               	.L234:
 777:lp_solve_5.5/lp_SOS.c ****     k = group->membership[i];
 6471               		.loc 1 777 0 is_stmt 0 discriminator 1
 6472 296e 8F81      		ldd r24,Y+7
 6473 2970 9885      		ldd r25,Y+8
 6474 2972 FC01      		movw r30,r24
 6475 2974 2685      		ldd r18,Z+14
 6476 2976 3785      		ldd r19,Z+15
 6477 2978 8985      		ldd r24,Y+9
 6478 297a 9A85      		ldd r25,Y+10
 6479 297c 880F      		lsl r24
 6480 297e 991F      		rol r25
 6481 2980 820F      		add r24,r18
 6482 2982 931F      		adc r25,r19
 6483 2984 FC01      		movw r30,r24
 6484 2986 2081      		ld r18,Z
 6485 2988 3181      		ldd r19,Z+1
 6486 298a 8981      		ldd r24,Y+1
 6487 298c 9A81      		ldd r25,Y+2
 6488 298e 8217      		cp r24,r18
 6489 2990 9307      		cpc r25,r19
 6490 2992 04F4      		brge .+2
 6491 2994 00C0      		rjmp .L237
 6492               	.L233:
 783:lp_solve_5.5/lp_SOS.c ****   }
 784:lp_solve_5.5/lp_SOS.c ****   return(FALSE);
 6493               		.loc 1 784 0 is_stmt 1
 6494 2996 80E0      		ldi r24,0
 6495               	.L236:
 6496               	/* epilogue start */
 785:lp_solve_5.5/lp_SOS.c **** }
 6497               		.loc 1 785 0
 6498 2998 2C96      		adiw r28,12
 6499 299a 0FB6      		in __tmp_reg__,__SREG__
 6500 299c F894      		cli
 6501 299e DEBF      		out __SP_H__,r29
 6502 29a0 0FBE      		out __SREG__,__tmp_reg__
 6503 29a2 CDBF      		out __SP_L__,r28
 6504 29a4 DF91      		pop r29
 6505 29a6 CF91      		pop r28
 6506 29a8 0895      		ret
 6507               		.cfi_endproc
 6508               	.LFE27:
 6510               	.global	SOS_set_GUB
 6512               	SOS_set_GUB:
 6513               	.LFB28:
 786:lp_solve_5.5/lp_SOS.c **** 
 787:lp_solve_5.5/lp_SOS.c **** 
 788:lp_solve_5.5/lp_SOS.c **** MYBOOL SOS_set_GUB(SOSgroup *group, int sosindex, MYBOOL state)
 789:lp_solve_5.5/lp_SOS.c **** {
 6514               		.loc 1 789 0
 6515               		.cfi_startproc
 6516 29aa CF93      		push r28
 6517               	.LCFI102:
 6518               		.cfi_def_cfa_offset 3
 6519               		.cfi_offset 28, -2
 6520 29ac DF93      		push r29
 6521               	.LCFI103:
 6522               		.cfi_def_cfa_offset 4
 6523               		.cfi_offset 29, -3
 6524 29ae CDB7      		in r28,__SP_L__
 6525 29b0 DEB7      		in r29,__SP_H__
 6526               	.LCFI104:
 6527               		.cfi_def_cfa_register 28
 6528 29b2 2797      		sbiw r28,7
 6529               	.LCFI105:
 6530               		.cfi_def_cfa_offset 11
 6531 29b4 0FB6      		in __tmp_reg__,__SREG__
 6532 29b6 F894      		cli
 6533 29b8 DEBF      		out __SP_H__,r29
 6534 29ba 0FBE      		out __SREG__,__tmp_reg__
 6535 29bc CDBF      		out __SP_L__,r28
 6536               	/* prologue: function */
 6537               	/* frame size = 7 */
 6538               	/* stack size = 9 */
 6539               	.L__stack_usage = 9
 6540 29be 9C83      		std Y+4,r25
 6541 29c0 8B83      		std Y+3,r24
 6542 29c2 7E83      		std Y+6,r23
 6543 29c4 6D83      		std Y+5,r22
 6544 29c6 4F83      		std Y+7,r20
 790:lp_solve_5.5/lp_SOS.c ****   int i;
 791:lp_solve_5.5/lp_SOS.c **** 
 792:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
 793:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
 794:lp_solve_5.5/lp_SOS.c ****     report(group->lp, IMPORTANT, "SOS_set_GUB: Invalid SOS index %d\n", sosindex);
 795:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 796:lp_solve_5.5/lp_SOS.c ****   }
 797:lp_solve_5.5/lp_SOS.c **** #endif
 798:lp_solve_5.5/lp_SOS.c ****   if((sosindex == 0) && (group->sos_count == 1))
 6545               		.loc 1 798 0
 6546 29c8 8D81      		ldd r24,Y+5
 6547 29ca 9E81      		ldd r25,Y+6
 6548 29cc 892B      		or r24,r25
 6549 29ce 01F4      		brne .L239
 6550               		.loc 1 798 0 is_stmt 0 discriminator 1
 6551 29d0 8B81      		ldd r24,Y+3
 6552 29d2 9C81      		ldd r25,Y+4
 6553 29d4 FC01      		movw r30,r24
 6554 29d6 8681      		ldd r24,Z+6
 6555 29d8 9781      		ldd r25,Z+7
 6556 29da 0197      		sbiw r24,1
 6557 29dc 01F4      		brne .L239
 799:lp_solve_5.5/lp_SOS.c ****     sosindex = 1;
 6558               		.loc 1 799 0 is_stmt 1
 6559 29de 81E0      		ldi r24,lo8(1)
 6560 29e0 90E0      		ldi r25,0
 6561 29e2 9E83      		std Y+6,r25
 6562 29e4 8D83      		std Y+5,r24
 6563               	.L239:
 800:lp_solve_5.5/lp_SOS.c **** 
 801:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0) {
 6564               		.loc 1 801 0
 6565 29e6 8D81      		ldd r24,Y+5
 6566 29e8 9E81      		ldd r25,Y+6
 6567 29ea 892B      		or r24,r25
 6568 29ec 01F4      		brne .L240
 802:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++)
 6569               		.loc 1 802 0
 6570 29ee 81E0      		ldi r24,lo8(1)
 6571 29f0 90E0      		ldi r25,0
 6572 29f2 9A83      		std Y+2,r25
 6573 29f4 8983      		std Y+1,r24
 6574 29f6 00C0      		rjmp .L241
 6575               	.L242:
 803:lp_solve_5.5/lp_SOS.c ****       SOS_set_GUB(group, i, state);
 6576               		.loc 1 803 0 discriminator 3
 6577 29f8 2981      		ldd r18,Y+1
 6578 29fa 3A81      		ldd r19,Y+2
 6579 29fc 8B81      		ldd r24,Y+3
 6580 29fe 9C81      		ldd r25,Y+4
 6581 2a00 4F81      		ldd r20,Y+7
 6582 2a02 B901      		movw r22,r18
 6583 2a04 0E94 0000 		call SOS_set_GUB
 802:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++)
 6584               		.loc 1 802 0 discriminator 3
 6585 2a08 8981      		ldd r24,Y+1
 6586 2a0a 9A81      		ldd r25,Y+2
 6587 2a0c 0196      		adiw r24,1
 6588 2a0e 9A83      		std Y+2,r25
 6589 2a10 8983      		std Y+1,r24
 6590               	.L241:
 802:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++)
 6591               		.loc 1 802 0 is_stmt 0 discriminator 1
 6592 2a12 8B81      		ldd r24,Y+3
 6593 2a14 9C81      		ldd r25,Y+4
 6594 2a16 FC01      		movw r30,r24
 6595 2a18 2681      		ldd r18,Z+6
 6596 2a1a 3781      		ldd r19,Z+7
 6597 2a1c 8981      		ldd r24,Y+1
 6598 2a1e 9A81      		ldd r25,Y+2
 6599 2a20 2817      		cp r18,r24
 6600 2a22 3907      		cpc r19,r25
 6601 2a24 04F4      		brge .L242
 6602 2a26 00C0      		rjmp .L243
 6603               	.L240:
 804:lp_solve_5.5/lp_SOS.c ****   }
 805:lp_solve_5.5/lp_SOS.c ****   else
 806:lp_solve_5.5/lp_SOS.c ****     group->sos_list[sosindex-1]->isGUB = state;
 6604               		.loc 1 806 0 is_stmt 1
 6605 2a28 8B81      		ldd r24,Y+3
 6606 2a2a 9C81      		ldd r25,Y+4
 6607 2a2c FC01      		movw r30,r24
 6608 2a2e 2281      		ldd r18,Z+2
 6609 2a30 3381      		ldd r19,Z+3
 6610 2a32 8D81      		ldd r24,Y+5
 6611 2a34 9E81      		ldd r25,Y+6
 6612 2a36 8150      		subi r24,1
 6613 2a38 9048      		sbci r25,-128
 6614 2a3a 880F      		lsl r24
 6615 2a3c 991F      		rol r25
 6616 2a3e 820F      		add r24,r18
 6617 2a40 931F      		adc r25,r19
 6618 2a42 FC01      		movw r30,r24
 6619 2a44 8081      		ld r24,Z
 6620 2a46 9181      		ldd r25,Z+1
 6621 2a48 2F81      		ldd r18,Y+7
 6622 2a4a FC01      		movw r30,r24
 6623 2a4c 2087      		std Z+8,r18
 6624               	.L243:
 807:lp_solve_5.5/lp_SOS.c ****   return(TRUE);
 6625               		.loc 1 807 0
 6626 2a4e 81E0      		ldi r24,lo8(1)
 6627               	/* epilogue start */
 808:lp_solve_5.5/lp_SOS.c **** }
 6628               		.loc 1 808 0
 6629 2a50 2796      		adiw r28,7
 6630 2a52 0FB6      		in __tmp_reg__,__SREG__
 6631 2a54 F894      		cli
 6632 2a56 DEBF      		out __SP_H__,r29
 6633 2a58 0FBE      		out __SREG__,__tmp_reg__
 6634 2a5a CDBF      		out __SP_L__,r28
 6635 2a5c DF91      		pop r29
 6636 2a5e CF91      		pop r28
 6637 2a60 0895      		ret
 6638               		.cfi_endproc
 6639               	.LFE28:
 6641               	.global	SOS_is_GUB
 6643               	SOS_is_GUB:
 6644               	.LFB29:
 809:lp_solve_5.5/lp_SOS.c **** 
 810:lp_solve_5.5/lp_SOS.c **** 
 811:lp_solve_5.5/lp_SOS.c **** MYBOOL SOS_is_GUB(SOSgroup *group, int sosindex)
 812:lp_solve_5.5/lp_SOS.c **** {
 6645               		.loc 1 812 0
 6646               		.cfi_startproc
 6647 2a62 CF93      		push r28
 6648               	.LCFI106:
 6649               		.cfi_def_cfa_offset 3
 6650               		.cfi_offset 28, -2
 6651 2a64 DF93      		push r29
 6652               	.LCFI107:
 6653               		.cfi_def_cfa_offset 4
 6654               		.cfi_offset 29, -3
 6655 2a66 00D0      		rcall .
 6656 2a68 00D0      		rcall .
 6657 2a6a 00D0      		rcall .
 6658               	.LCFI108:
 6659               		.cfi_def_cfa_offset 10
 6660 2a6c CDB7      		in r28,__SP_L__
 6661 2a6e DEB7      		in r29,__SP_H__
 6662               	.LCFI109:
 6663               		.cfi_def_cfa_register 28
 6664               	/* prologue: function */
 6665               	/* frame size = 6 */
 6666               	/* stack size = 8 */
 6667               	.L__stack_usage = 8
 6668 2a70 9C83      		std Y+4,r25
 6669 2a72 8B83      		std Y+3,r24
 6670 2a74 7E83      		std Y+6,r23
 6671 2a76 6D83      		std Y+5,r22
 813:lp_solve_5.5/lp_SOS.c ****   int    i;
 814:lp_solve_5.5/lp_SOS.c **** 
 815:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
 816:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
 817:lp_solve_5.5/lp_SOS.c ****     report(group->lp, IMPORTANT, "SOS_is_GUB: Invalid SOS index %d\n", sosindex);
 818:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 819:lp_solve_5.5/lp_SOS.c ****   }
 820:lp_solve_5.5/lp_SOS.c **** #endif
 821:lp_solve_5.5/lp_SOS.c **** 
 822:lp_solve_5.5/lp_SOS.c ****   if((sosindex == 0) && (group->sos_count == 1))
 6672               		.loc 1 822 0
 6673 2a78 8D81      		ldd r24,Y+5
 6674 2a7a 9E81      		ldd r25,Y+6
 6675 2a7c 892B      		or r24,r25
 6676 2a7e 01F4      		brne .L246
 6677               		.loc 1 822 0 is_stmt 0 discriminator 1
 6678 2a80 8B81      		ldd r24,Y+3
 6679 2a82 9C81      		ldd r25,Y+4
 6680 2a84 FC01      		movw r30,r24
 6681 2a86 8681      		ldd r24,Z+6
 6682 2a88 9781      		ldd r25,Z+7
 6683 2a8a 0197      		sbiw r24,1
 6684 2a8c 01F4      		brne .L246
 823:lp_solve_5.5/lp_SOS.c ****     sosindex = 1;
 6685               		.loc 1 823 0 is_stmt 1
 6686 2a8e 81E0      		ldi r24,lo8(1)
 6687 2a90 90E0      		ldi r25,0
 6688 2a92 9E83      		std Y+6,r25
 6689 2a94 8D83      		std Y+5,r24
 6690               	.L246:
 824:lp_solve_5.5/lp_SOS.c **** 
 825:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0) {
 6691               		.loc 1 825 0
 6692 2a96 8D81      		ldd r24,Y+5
 6693 2a98 9E81      		ldd r25,Y+6
 6694 2a9a 892B      		or r24,r25
 6695 2a9c 01F4      		brne .L247
 826:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++) {
 6696               		.loc 1 826 0
 6697 2a9e 81E0      		ldi r24,lo8(1)
 6698 2aa0 90E0      		ldi r25,0
 6699 2aa2 9A83      		std Y+2,r25
 6700 2aa4 8983      		std Y+1,r24
 6701 2aa6 00C0      		rjmp .L248
 6702               	.L251:
 827:lp_solve_5.5/lp_SOS.c ****       if(SOS_is_GUB(group, i))
 6703               		.loc 1 827 0
 6704 2aa8 2981      		ldd r18,Y+1
 6705 2aaa 3A81      		ldd r19,Y+2
 6706 2aac 8B81      		ldd r24,Y+3
 6707 2aae 9C81      		ldd r25,Y+4
 6708 2ab0 B901      		movw r22,r18
 6709 2ab2 0E94 0000 		call SOS_is_GUB
 6710 2ab6 8823      		tst r24
 6711 2ab8 01F0      		breq .L249
 828:lp_solve_5.5/lp_SOS.c ****         return(TRUE);
 6712               		.loc 1 828 0
 6713 2aba 81E0      		ldi r24,lo8(1)
 6714 2abc 00C0      		rjmp .L250
 6715               	.L249:
 826:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++) {
 6716               		.loc 1 826 0 discriminator 2
 6717 2abe 8981      		ldd r24,Y+1
 6718 2ac0 9A81      		ldd r25,Y+2
 6719 2ac2 0196      		adiw r24,1
 6720 2ac4 9A83      		std Y+2,r25
 6721 2ac6 8983      		std Y+1,r24
 6722               	.L248:
 826:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++) {
 6723               		.loc 1 826 0 is_stmt 0 discriminator 1
 6724 2ac8 8B81      		ldd r24,Y+3
 6725 2aca 9C81      		ldd r25,Y+4
 6726 2acc FC01      		movw r30,r24
 6727 2ace 2681      		ldd r18,Z+6
 6728 2ad0 3781      		ldd r19,Z+7
 6729 2ad2 8981      		ldd r24,Y+1
 6730 2ad4 9A81      		ldd r25,Y+2
 6731 2ad6 2817      		cp r18,r24
 6732 2ad8 3907      		cpc r19,r25
 6733 2ada 04F4      		brge .L251
 829:lp_solve_5.5/lp_SOS.c ****     }
 830:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 6734               		.loc 1 830 0 is_stmt 1
 6735 2adc 80E0      		ldi r24,0
 6736 2ade 00C0      		rjmp .L250
 6737               	.L247:
 831:lp_solve_5.5/lp_SOS.c ****   }
 832:lp_solve_5.5/lp_SOS.c ****   else
 833:lp_solve_5.5/lp_SOS.c ****     return( group->sos_list[sosindex-1]->isGUB );
 6738               		.loc 1 833 0
 6739 2ae0 8B81      		ldd r24,Y+3
 6740 2ae2 9C81      		ldd r25,Y+4
 6741 2ae4 FC01      		movw r30,r24
 6742 2ae6 2281      		ldd r18,Z+2
 6743 2ae8 3381      		ldd r19,Z+3
 6744 2aea 8D81      		ldd r24,Y+5
 6745 2aec 9E81      		ldd r25,Y+6
 6746 2aee 8150      		subi r24,1
 6747 2af0 9048      		sbci r25,-128
 6748 2af2 880F      		lsl r24
 6749 2af4 991F      		rol r25
 6750 2af6 820F      		add r24,r18
 6751 2af8 931F      		adc r25,r19
 6752 2afa FC01      		movw r30,r24
 6753 2afc 8081      		ld r24,Z
 6754 2afe 9181      		ldd r25,Z+1
 6755 2b00 FC01      		movw r30,r24
 6756 2b02 8085      		ldd r24,Z+8
 6757               	.L250:
 6758               	/* epilogue start */
 834:lp_solve_5.5/lp_SOS.c **** }
 6759               		.loc 1 834 0
 6760 2b04 2696      		adiw r28,6
 6761 2b06 0FB6      		in __tmp_reg__,__SREG__
 6762 2b08 F894      		cli
 6763 2b0a DEBF      		out __SP_H__,r29
 6764 2b0c 0FBE      		out __SREG__,__tmp_reg__
 6765 2b0e CDBF      		out __SP_L__,r28
 6766 2b10 DF91      		pop r29
 6767 2b12 CF91      		pop r28
 6768 2b14 0895      		ret
 6769               		.cfi_endproc
 6770               	.LFE29:
 6772               	.global	SOS_is_marked
 6774               	SOS_is_marked:
 6775               	.LFB30:
 835:lp_solve_5.5/lp_SOS.c **** 
 836:lp_solve_5.5/lp_SOS.c **** 
 837:lp_solve_5.5/lp_SOS.c **** MYBOOL SOS_is_marked(SOSgroup *group, int sosindex, int column)
 838:lp_solve_5.5/lp_SOS.c **** {
 6776               		.loc 1 838 0
 6777               		.cfi_startproc
 6778 2b16 CF93      		push r28
 6779               	.LCFI110:
 6780               		.cfi_def_cfa_offset 3
 6781               		.cfi_offset 28, -2
 6782 2b18 DF93      		push r29
 6783               	.LCFI111:
 6784               		.cfi_def_cfa_offset 4
 6785               		.cfi_offset 29, -3
 6786 2b1a CDB7      		in r28,__SP_L__
 6787 2b1c DEB7      		in r29,__SP_H__
 6788               	.LCFI112:
 6789               		.cfi_def_cfa_register 28
 6790 2b1e 6097      		sbiw r28,16
 6791               	.LCFI113:
 6792               		.cfi_def_cfa_offset 20
 6793 2b20 0FB6      		in __tmp_reg__,__SREG__
 6794 2b22 F894      		cli
 6795 2b24 DEBF      		out __SP_H__,r29
 6796 2b26 0FBE      		out __SREG__,__tmp_reg__
 6797 2b28 CDBF      		out __SP_L__,r28
 6798               	/* prologue: function */
 6799               	/* frame size = 16 */
 6800               	/* stack size = 18 */
 6801               	.L__stack_usage = 18
 6802 2b2a 9C87      		std Y+12,r25
 6803 2b2c 8B87      		std Y+11,r24
 6804 2b2e 7E87      		std Y+14,r23
 6805 2b30 6D87      		std Y+13,r22
 6806 2b32 588B      		std Y+16,r21
 6807 2b34 4F87      		std Y+15,r20
 839:lp_solve_5.5/lp_SOS.c ****   int    i, k, n, *list;
 840:lp_solve_5.5/lp_SOS.c ****   lprec  *lp;
 841:lp_solve_5.5/lp_SOS.c **** 
 842:lp_solve_5.5/lp_SOS.c ****   if(group == NULL)
 6808               		.loc 1 842 0
 6809 2b36 8B85      		ldd r24,Y+11
 6810 2b38 9C85      		ldd r25,Y+12
 6811 2b3a 892B      		or r24,r25
 6812 2b3c 01F4      		brne .L253
 843:lp_solve_5.5/lp_SOS.c ****     return( FALSE );
 6813               		.loc 1 843 0
 6814 2b3e 80E0      		ldi r24,0
 6815 2b40 00C0      		rjmp .L254
 6816               	.L253:
 844:lp_solve_5.5/lp_SOS.c ****   lp = group->lp;
 6817               		.loc 1 844 0
 6818 2b42 8B85      		ldd r24,Y+11
 6819 2b44 9C85      		ldd r25,Y+12
 6820 2b46 FC01      		movw r30,r24
 6821 2b48 8081      		ld r24,Z
 6822 2b4a 9181      		ldd r25,Z+1
 6823 2b4c 9C83      		std Y+4,r25
 6824 2b4e 8B83      		std Y+3,r24
 845:lp_solve_5.5/lp_SOS.c **** 
 846:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
 847:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
 848:lp_solve_5.5/lp_SOS.c ****     report(lp, IMPORTANT, "SOS_is_marked: Invalid SOS index %d\n", sosindex);
 849:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 850:lp_solve_5.5/lp_SOS.c ****   }
 851:lp_solve_5.5/lp_SOS.c **** #endif
 852:lp_solve_5.5/lp_SOS.c **** 
 853:lp_solve_5.5/lp_SOS.c ****   if(!(lp->var_type[column] & (ISSOS | ISGUB)))
 6825               		.loc 1 853 0
 6826 2b50 8B81      		ldd r24,Y+3
 6827 2b52 9C81      		ldd r25,Y+4
 6828 2b54 8A57      		subi r24,122
 6829 2b56 9D4F      		sbci r25,-3
 6830 2b58 FC01      		movw r30,r24
 6831 2b5a 2081      		ld r18,Z
 6832 2b5c 3181      		ldd r19,Z+1
 6833 2b5e 8F85      		ldd r24,Y+15
 6834 2b60 9889      		ldd r25,Y+16
 6835 2b62 820F      		add r24,r18
 6836 2b64 931F      		adc r25,r19
 6837 2b66 FC01      		movw r30,r24
 6838 2b68 8081      		ld r24,Z
 6839 2b6a 882F      		mov r24,r24
 6840 2b6c 90E0      		ldi r25,0
 6841 2b6e 8471      		andi r24,20
 6842 2b70 9927      		clr r25
 6843 2b72 892B      		or r24,r25
 6844 2b74 01F4      		brne .L255
 854:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 6845               		.loc 1 854 0
 6846 2b76 80E0      		ldi r24,0
 6847 2b78 00C0      		rjmp .L254
 6848               	.L255:
 855:lp_solve_5.5/lp_SOS.c **** 
 856:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0) {
 6849               		.loc 1 856 0
 6850 2b7a 8D85      		ldd r24,Y+13
 6851 2b7c 9E85      		ldd r25,Y+14
 6852 2b7e 892B      		or r24,r25
 6853 2b80 01F0      		breq .+2
 6854 2b82 00C0      		rjmp .L256
 857:lp_solve_5.5/lp_SOS.c ****     for(i = group->memberpos[column-1]; i < group->memberpos[column]; i++) {
 6855               		.loc 1 857 0
 6856 2b84 8B85      		ldd r24,Y+11
 6857 2b86 9C85      		ldd r25,Y+12
 6858 2b88 FC01      		movw r30,r24
 6859 2b8a 2685      		ldd r18,Z+14
 6860 2b8c 3785      		ldd r19,Z+15
 6861 2b8e 8F85      		ldd r24,Y+15
 6862 2b90 9889      		ldd r25,Y+16
 6863 2b92 8150      		subi r24,1
 6864 2b94 9048      		sbci r25,-128
 6865 2b96 880F      		lsl r24
 6866 2b98 991F      		rol r25
 6867 2b9a 820F      		add r24,r18
 6868 2b9c 931F      		adc r25,r19
 6869 2b9e FC01      		movw r30,r24
 6870 2ba0 8081      		ld r24,Z
 6871 2ba2 9181      		ldd r25,Z+1
 6872 2ba4 9A83      		std Y+2,r25
 6873 2ba6 8983      		std Y+1,r24
 6874 2ba8 00C0      		rjmp .L257
 6875               	.L259:
 858:lp_solve_5.5/lp_SOS.c ****       k = group->membership[i];
 6876               		.loc 1 858 0
 6877 2baa 8B85      		ldd r24,Y+11
 6878 2bac 9C85      		ldd r25,Y+12
 6879 2bae FC01      		movw r30,r24
 6880 2bb0 2485      		ldd r18,Z+12
 6881 2bb2 3585      		ldd r19,Z+13
 6882 2bb4 8981      		ldd r24,Y+1
 6883 2bb6 9A81      		ldd r25,Y+2
 6884 2bb8 880F      		lsl r24
 6885 2bba 991F      		rol r25
 6886 2bbc 820F      		add r24,r18
 6887 2bbe 931F      		adc r25,r19
 6888 2bc0 FC01      		movw r30,r24
 6889 2bc2 8081      		ld r24,Z
 6890 2bc4 9181      		ldd r25,Z+1
 6891 2bc6 9E83      		std Y+6,r25
 6892 2bc8 8D83      		std Y+5,r24
 859:lp_solve_5.5/lp_SOS.c ****       n = SOS_is_marked(group, k, column);
 6893               		.loc 1 859 0
 6894 2bca 4F85      		ldd r20,Y+15
 6895 2bcc 5889      		ldd r21,Y+16
 6896 2bce 2D81      		ldd r18,Y+5
 6897 2bd0 3E81      		ldd r19,Y+6
 6898 2bd2 8B85      		ldd r24,Y+11
 6899 2bd4 9C85      		ldd r25,Y+12
 6900 2bd6 B901      		movw r22,r18
 6901 2bd8 0E94 0000 		call SOS_is_marked
 6902 2bdc 882F      		mov r24,r24
 6903 2bde 90E0      		ldi r25,0
 6904 2be0 9887      		std Y+8,r25
 6905 2be2 8F83      		std Y+7,r24
 860:lp_solve_5.5/lp_SOS.c ****       if(n)
 6906               		.loc 1 860 0
 6907 2be4 8F81      		ldd r24,Y+7
 6908 2be6 9885      		ldd r25,Y+8
 6909 2be8 892B      		or r24,r25
 6910 2bea 01F0      		breq .L258
 861:lp_solve_5.5/lp_SOS.c ****         return(TRUE);
 6911               		.loc 1 861 0
 6912 2bec 81E0      		ldi r24,lo8(1)
 6913 2bee 00C0      		rjmp .L254
 6914               	.L258:
 857:lp_solve_5.5/lp_SOS.c ****       k = group->membership[i];
 6915               		.loc 1 857 0 discriminator 2
 6916 2bf0 8981      		ldd r24,Y+1
 6917 2bf2 9A81      		ldd r25,Y+2
 6918 2bf4 0196      		adiw r24,1
 6919 2bf6 9A83      		std Y+2,r25
 6920 2bf8 8983      		std Y+1,r24
 6921               	.L257:
 857:lp_solve_5.5/lp_SOS.c ****       k = group->membership[i];
 6922               		.loc 1 857 0 is_stmt 0 discriminator 1
 6923 2bfa 8B85      		ldd r24,Y+11
 6924 2bfc 9C85      		ldd r25,Y+12
 6925 2bfe FC01      		movw r30,r24
 6926 2c00 2685      		ldd r18,Z+14
 6927 2c02 3785      		ldd r19,Z+15
 6928 2c04 8F85      		ldd r24,Y+15
 6929 2c06 9889      		ldd r25,Y+16
 6930 2c08 880F      		lsl r24
 6931 2c0a 991F      		rol r25
 6932 2c0c 820F      		add r24,r18
 6933 2c0e 931F      		adc r25,r19
 6934 2c10 FC01      		movw r30,r24
 6935 2c12 2081      		ld r18,Z
 6936 2c14 3181      		ldd r19,Z+1
 6937 2c16 8981      		ldd r24,Y+1
 6938 2c18 9A81      		ldd r25,Y+2
 6939 2c1a 8217      		cp r24,r18
 6940 2c1c 9307      		cpc r25,r19
 6941 2c1e 04F0      		brlt .L259
 6942 2c20 00C0      		rjmp .L260
 6943               	.L256:
 862:lp_solve_5.5/lp_SOS.c ****     }
 863:lp_solve_5.5/lp_SOS.c ****   }
 864:lp_solve_5.5/lp_SOS.c ****   else  {
 865:lp_solve_5.5/lp_SOS.c ****     list = group->sos_list[sosindex-1]->members;
 6944               		.loc 1 865 0 is_stmt 1
 6945 2c22 8B85      		ldd r24,Y+11
 6946 2c24 9C85      		ldd r25,Y+12
 6947 2c26 FC01      		movw r30,r24
 6948 2c28 2281      		ldd r18,Z+2
 6949 2c2a 3381      		ldd r19,Z+3
 6950 2c2c 8D85      		ldd r24,Y+13
 6951 2c2e 9E85      		ldd r25,Y+14
 6952 2c30 8150      		subi r24,1
 6953 2c32 9048      		sbci r25,-128
 6954 2c34 880F      		lsl r24
 6955 2c36 991F      		rol r25
 6956 2c38 820F      		add r24,r18
 6957 2c3a 931F      		adc r25,r19
 6958 2c3c FC01      		movw r30,r24
 6959 2c3e 8081      		ld r24,Z
 6960 2c40 9181      		ldd r25,Z+1
 6961 2c42 FC01      		movw r30,r24
 6962 2c44 8585      		ldd r24,Z+13
 6963 2c46 9685      		ldd r25,Z+14
 6964 2c48 9A87      		std Y+10,r25
 6965 2c4a 8987      		std Y+9,r24
 866:lp_solve_5.5/lp_SOS.c ****     n = list[0];
 6966               		.loc 1 866 0
 6967 2c4c 8985      		ldd r24,Y+9
 6968 2c4e 9A85      		ldd r25,Y+10
 6969 2c50 FC01      		movw r30,r24
 6970 2c52 8081      		ld r24,Z
 6971 2c54 9181      		ldd r25,Z+1
 6972 2c56 9887      		std Y+8,r25
 6973 2c58 8F83      		std Y+7,r24
 867:lp_solve_5.5/lp_SOS.c **** 
 868:lp_solve_5.5/lp_SOS.c ****    /* Search for the variable (normally always faster to do linear search here) */
 869:lp_solve_5.5/lp_SOS.c ****     column = -column;
 6974               		.loc 1 869 0
 6975 2c5a 8F85      		ldd r24,Y+15
 6976 2c5c 9889      		ldd r25,Y+16
 6977 2c5e 9195      		neg r25
 6978 2c60 8195      		neg r24
 6979 2c62 9109      		sbc r25,__zero_reg__
 6980 2c64 988B      		std Y+16,r25
 6981 2c66 8F87      		std Y+15,r24
 870:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= n; i++)
 6982               		.loc 1 870 0
 6983 2c68 81E0      		ldi r24,lo8(1)
 6984 2c6a 90E0      		ldi r25,0
 6985 2c6c 9A83      		std Y+2,r25
 6986 2c6e 8983      		std Y+1,r24
 6987 2c70 00C0      		rjmp .L261
 6988               	.L263:
 871:lp_solve_5.5/lp_SOS.c ****       if(list[i] == column)
 6989               		.loc 1 871 0
 6990 2c72 8981      		ldd r24,Y+1
 6991 2c74 9A81      		ldd r25,Y+2
 6992 2c76 880F      		lsl r24
 6993 2c78 991F      		rol r25
 6994 2c7a 2985      		ldd r18,Y+9
 6995 2c7c 3A85      		ldd r19,Y+10
 6996 2c7e 820F      		add r24,r18
 6997 2c80 931F      		adc r25,r19
 6998 2c82 FC01      		movw r30,r24
 6999 2c84 2081      		ld r18,Z
 7000 2c86 3181      		ldd r19,Z+1
 7001 2c88 8F85      		ldd r24,Y+15
 7002 2c8a 9889      		ldd r25,Y+16
 7003 2c8c 2817      		cp r18,r24
 7004 2c8e 3907      		cpc r19,r25
 7005 2c90 01F4      		brne .L262
 872:lp_solve_5.5/lp_SOS.c ****         return(TRUE);
 7006               		.loc 1 872 0
 7007 2c92 81E0      		ldi r24,lo8(1)
 7008 2c94 00C0      		rjmp .L254
 7009               	.L262:
 870:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= n; i++)
 7010               		.loc 1 870 0 discriminator 2
 7011 2c96 8981      		ldd r24,Y+1
 7012 2c98 9A81      		ldd r25,Y+2
 7013 2c9a 0196      		adiw r24,1
 7014 2c9c 9A83      		std Y+2,r25
 7015 2c9e 8983      		std Y+1,r24
 7016               	.L261:
 870:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= n; i++)
 7017               		.loc 1 870 0 is_stmt 0 discriminator 1
 7018 2ca0 2981      		ldd r18,Y+1
 7019 2ca2 3A81      		ldd r19,Y+2
 7020 2ca4 8F81      		ldd r24,Y+7
 7021 2ca6 9885      		ldd r25,Y+8
 7022 2ca8 8217      		cp r24,r18
 7023 2caa 9307      		cpc r25,r19
 7024 2cac 04F4      		brge .L263
 7025               	.L260:
 873:lp_solve_5.5/lp_SOS.c ****   }
 874:lp_solve_5.5/lp_SOS.c ****   return(FALSE);
 7026               		.loc 1 874 0 is_stmt 1
 7027 2cae 80E0      		ldi r24,0
 7028               	.L254:
 7029               	/* epilogue start */
 875:lp_solve_5.5/lp_SOS.c **** }
 7030               		.loc 1 875 0
 7031 2cb0 6096      		adiw r28,16
 7032 2cb2 0FB6      		in __tmp_reg__,__SREG__
 7033 2cb4 F894      		cli
 7034 2cb6 DEBF      		out __SP_H__,r29
 7035 2cb8 0FBE      		out __SREG__,__tmp_reg__
 7036 2cba CDBF      		out __SP_L__,r28
 7037 2cbc DF91      		pop r29
 7038 2cbe CF91      		pop r28
 7039 2cc0 0895      		ret
 7040               		.cfi_endproc
 7041               	.LFE30:
 7043               	.global	SOS_is_active
 7045               	SOS_is_active:
 7046               	.LFB31:
 876:lp_solve_5.5/lp_SOS.c **** 
 877:lp_solve_5.5/lp_SOS.c **** 
 878:lp_solve_5.5/lp_SOS.c **** MYBOOL SOS_is_active(SOSgroup *group, int sosindex, int column)
 879:lp_solve_5.5/lp_SOS.c **** {
 7047               		.loc 1 879 0
 7048               		.cfi_startproc
 7049 2cc2 CF93      		push r28
 7050               	.LCFI114:
 7051               		.cfi_def_cfa_offset 3
 7052               		.cfi_offset 28, -2
 7053 2cc4 DF93      		push r29
 7054               	.LCFI115:
 7055               		.cfi_def_cfa_offset 4
 7056               		.cfi_offset 29, -3
 7057 2cc6 CDB7      		in r28,__SP_L__
 7058 2cc8 DEB7      		in r29,__SP_H__
 7059               	.LCFI116:
 7060               		.cfi_def_cfa_register 28
 7061 2cca 6097      		sbiw r28,16
 7062               	.LCFI117:
 7063               		.cfi_def_cfa_offset 20
 7064 2ccc 0FB6      		in __tmp_reg__,__SREG__
 7065 2cce F894      		cli
 7066 2cd0 DEBF      		out __SP_H__,r29
 7067 2cd2 0FBE      		out __SREG__,__tmp_reg__
 7068 2cd4 CDBF      		out __SP_L__,r28
 7069               	/* prologue: function */
 7070               	/* frame size = 16 */
 7071               	/* stack size = 18 */
 7072               	.L__stack_usage = 18
 7073 2cd6 9C87      		std Y+12,r25
 7074 2cd8 8B87      		std Y+11,r24
 7075 2cda 7E87      		std Y+14,r23
 7076 2cdc 6D87      		std Y+13,r22
 7077 2cde 588B      		std Y+16,r21
 7078 2ce0 4F87      		std Y+15,r20
 880:lp_solve_5.5/lp_SOS.c ****   int    i, n, nn, *list;
 881:lp_solve_5.5/lp_SOS.c ****   lprec  *lp = group->lp;
 7079               		.loc 1 881 0
 7080 2ce2 8B85      		ldd r24,Y+11
 7081 2ce4 9C85      		ldd r25,Y+12
 7082 2ce6 FC01      		movw r30,r24
 7083 2ce8 8081      		ld r24,Z
 7084 2cea 9181      		ldd r25,Z+1
 7085 2cec 9C83      		std Y+4,r25
 7086 2cee 8B83      		std Y+3,r24
 882:lp_solve_5.5/lp_SOS.c **** 
 883:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
 884:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
 885:lp_solve_5.5/lp_SOS.c ****     report(lp, IMPORTANT, "SOS_is_active: Invalid SOS index %d\n", sosindex);
 886:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 887:lp_solve_5.5/lp_SOS.c ****   }
 888:lp_solve_5.5/lp_SOS.c **** #endif
 889:lp_solve_5.5/lp_SOS.c **** 
 890:lp_solve_5.5/lp_SOS.c ****   if(!(lp->var_type[column] & (ISSOS | ISGUB)))
 7087               		.loc 1 890 0
 7088 2cf0 8B81      		ldd r24,Y+3
 7089 2cf2 9C81      		ldd r25,Y+4
 7090 2cf4 8A57      		subi r24,122
 7091 2cf6 9D4F      		sbci r25,-3
 7092 2cf8 FC01      		movw r30,r24
 7093 2cfa 2081      		ld r18,Z
 7094 2cfc 3181      		ldd r19,Z+1
 7095 2cfe 8F85      		ldd r24,Y+15
 7096 2d00 9889      		ldd r25,Y+16
 7097 2d02 820F      		add r24,r18
 7098 2d04 931F      		adc r25,r19
 7099 2d06 FC01      		movw r30,r24
 7100 2d08 8081      		ld r24,Z
 7101 2d0a 882F      		mov r24,r24
 7102 2d0c 90E0      		ldi r25,0
 7103 2d0e 8471      		andi r24,20
 7104 2d10 9927      		clr r25
 7105 2d12 892B      		or r24,r25
 7106 2d14 01F4      		brne .L265
 891:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 7107               		.loc 1 891 0
 7108 2d16 80E0      		ldi r24,0
 7109 2d18 00C0      		rjmp .L266
 7110               	.L265:
 892:lp_solve_5.5/lp_SOS.c **** 
 893:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0) {
 7111               		.loc 1 893 0
 7112 2d1a 8D85      		ldd r24,Y+13
 7113 2d1c 9E85      		ldd r25,Y+14
 7114 2d1e 892B      		or r24,r25
 7115 2d20 01F0      		breq .+2
 7116 2d22 00C0      		rjmp .L267
 894:lp_solve_5.5/lp_SOS.c ****     for(i = group->memberpos[column-1]; i < group->memberpos[column]; i++) {
 7117               		.loc 1 894 0
 7118 2d24 8B85      		ldd r24,Y+11
 7119 2d26 9C85      		ldd r25,Y+12
 7120 2d28 FC01      		movw r30,r24
 7121 2d2a 2685      		ldd r18,Z+14
 7122 2d2c 3785      		ldd r19,Z+15
 7123 2d2e 8F85      		ldd r24,Y+15
 7124 2d30 9889      		ldd r25,Y+16
 7125 2d32 8150      		subi r24,1
 7126 2d34 9048      		sbci r25,-128
 7127 2d36 880F      		lsl r24
 7128 2d38 991F      		rol r25
 7129 2d3a 820F      		add r24,r18
 7130 2d3c 931F      		adc r25,r19
 7131 2d3e FC01      		movw r30,r24
 7132 2d40 8081      		ld r24,Z
 7133 2d42 9181      		ldd r25,Z+1
 7134 2d44 9A83      		std Y+2,r25
 7135 2d46 8983      		std Y+1,r24
 7136 2d48 00C0      		rjmp .L268
 7137               	.L270:
 895:lp_solve_5.5/lp_SOS.c ****       nn = group->membership[i];
 7138               		.loc 1 895 0
 7139 2d4a 8B85      		ldd r24,Y+11
 7140 2d4c 9C85      		ldd r25,Y+12
 7141 2d4e FC01      		movw r30,r24
 7142 2d50 2485      		ldd r18,Z+12
 7143 2d52 3585      		ldd r19,Z+13
 7144 2d54 8981      		ldd r24,Y+1
 7145 2d56 9A81      		ldd r25,Y+2
 7146 2d58 880F      		lsl r24
 7147 2d5a 991F      		rol r25
 7148 2d5c 820F      		add r24,r18
 7149 2d5e 931F      		adc r25,r19
 7150 2d60 FC01      		movw r30,r24
 7151 2d62 8081      		ld r24,Z
 7152 2d64 9181      		ldd r25,Z+1
 7153 2d66 9E83      		std Y+6,r25
 7154 2d68 8D83      		std Y+5,r24
 896:lp_solve_5.5/lp_SOS.c ****       n = SOS_is_active(group, nn, column);
 7155               		.loc 1 896 0
 7156 2d6a 4F85      		ldd r20,Y+15
 7157 2d6c 5889      		ldd r21,Y+16
 7158 2d6e 2D81      		ldd r18,Y+5
 7159 2d70 3E81      		ldd r19,Y+6
 7160 2d72 8B85      		ldd r24,Y+11
 7161 2d74 9C85      		ldd r25,Y+12
 7162 2d76 B901      		movw r22,r18
 7163 2d78 0E94 0000 		call SOS_is_active
 7164 2d7c 882F      		mov r24,r24
 7165 2d7e 90E0      		ldi r25,0
 7166 2d80 9887      		std Y+8,r25
 7167 2d82 8F83      		std Y+7,r24
 897:lp_solve_5.5/lp_SOS.c ****       if(n)
 7168               		.loc 1 897 0
 7169 2d84 8F81      		ldd r24,Y+7
 7170 2d86 9885      		ldd r25,Y+8
 7171 2d88 892B      		or r24,r25
 7172 2d8a 01F0      		breq .L269
 898:lp_solve_5.5/lp_SOS.c ****         return(TRUE);
 7173               		.loc 1 898 0
 7174 2d8c 81E0      		ldi r24,lo8(1)
 7175 2d8e 00C0      		rjmp .L266
 7176               	.L269:
 894:lp_solve_5.5/lp_SOS.c ****       nn = group->membership[i];
 7177               		.loc 1 894 0 discriminator 2
 7178 2d90 8981      		ldd r24,Y+1
 7179 2d92 9A81      		ldd r25,Y+2
 7180 2d94 0196      		adiw r24,1
 7181 2d96 9A83      		std Y+2,r25
 7182 2d98 8983      		std Y+1,r24
 7183               	.L268:
 894:lp_solve_5.5/lp_SOS.c ****       nn = group->membership[i];
 7184               		.loc 1 894 0 is_stmt 0 discriminator 1
 7185 2d9a 8B85      		ldd r24,Y+11
 7186 2d9c 9C85      		ldd r25,Y+12
 7187 2d9e FC01      		movw r30,r24
 7188 2da0 2685      		ldd r18,Z+14
 7189 2da2 3785      		ldd r19,Z+15
 7190 2da4 8F85      		ldd r24,Y+15
 7191 2da6 9889      		ldd r25,Y+16
 7192 2da8 880F      		lsl r24
 7193 2daa 991F      		rol r25
 7194 2dac 820F      		add r24,r18
 7195 2dae 931F      		adc r25,r19
 7196 2db0 FC01      		movw r30,r24
 7197 2db2 2081      		ld r18,Z
 7198 2db4 3181      		ldd r19,Z+1
 7199 2db6 8981      		ldd r24,Y+1
 7200 2db8 9A81      		ldd r25,Y+2
 7201 2dba 8217      		cp r24,r18
 7202 2dbc 9307      		cpc r25,r19
 7203 2dbe 04F0      		brlt .L270
 7204 2dc0 00C0      		rjmp .L271
 7205               	.L267:
 899:lp_solve_5.5/lp_SOS.c ****     }
 900:lp_solve_5.5/lp_SOS.c ****   }
 901:lp_solve_5.5/lp_SOS.c ****   else {
 902:lp_solve_5.5/lp_SOS.c **** 
 903:lp_solve_5.5/lp_SOS.c ****     list = group->sos_list[sosindex-1]->members;
 7206               		.loc 1 903 0 is_stmt 1
 7207 2dc2 8B85      		ldd r24,Y+11
 7208 2dc4 9C85      		ldd r25,Y+12
 7209 2dc6 FC01      		movw r30,r24
 7210 2dc8 2281      		ldd r18,Z+2
 7211 2dca 3381      		ldd r19,Z+3
 7212 2dcc 8D85      		ldd r24,Y+13
 7213 2dce 9E85      		ldd r25,Y+14
 7214 2dd0 8150      		subi r24,1
 7215 2dd2 9048      		sbci r25,-128
 7216 2dd4 880F      		lsl r24
 7217 2dd6 991F      		rol r25
 7218 2dd8 820F      		add r24,r18
 7219 2dda 931F      		adc r25,r19
 7220 2ddc FC01      		movw r30,r24
 7221 2dde 8081      		ld r24,Z
 7222 2de0 9181      		ldd r25,Z+1
 7223 2de2 FC01      		movw r30,r24
 7224 2de4 8585      		ldd r24,Z+13
 7225 2de6 9685      		ldd r25,Z+14
 7226 2de8 9A87      		std Y+10,r25
 7227 2dea 8987      		std Y+9,r24
 904:lp_solve_5.5/lp_SOS.c ****     n = list[0]+1;
 7228               		.loc 1 904 0
 7229 2dec 8985      		ldd r24,Y+9
 7230 2dee 9A85      		ldd r25,Y+10
 7231 2df0 FC01      		movw r30,r24
 7232 2df2 8081      		ld r24,Z
 7233 2df4 9181      		ldd r25,Z+1
 7234 2df6 0196      		adiw r24,1
 7235 2df8 9887      		std Y+8,r25
 7236 2dfa 8F83      		std Y+7,r24
 905:lp_solve_5.5/lp_SOS.c ****     nn = list[n];
 7237               		.loc 1 905 0
 7238 2dfc 8F81      		ldd r24,Y+7
 7239 2dfe 9885      		ldd r25,Y+8
 7240 2e00 880F      		lsl r24
 7241 2e02 991F      		rol r25
 7242 2e04 2985      		ldd r18,Y+9
 7243 2e06 3A85      		ldd r19,Y+10
 7244 2e08 820F      		add r24,r18
 7245 2e0a 931F      		adc r25,r19
 7246 2e0c FC01      		movw r30,r24
 7247 2e0e 8081      		ld r24,Z
 7248 2e10 9181      		ldd r25,Z+1
 7249 2e12 9E83      		std Y+6,r25
 7250 2e14 8D83      		std Y+5,r24
 906:lp_solve_5.5/lp_SOS.c **** 
 907:lp_solve_5.5/lp_SOS.c ****     /* Scan the active (non-zero) SOS index list */
 908:lp_solve_5.5/lp_SOS.c ****     for(i = 1; (i <= nn) && (list[n+i] != 0); i++)
 7251               		.loc 1 908 0
 7252 2e16 81E0      		ldi r24,lo8(1)
 7253 2e18 90E0      		ldi r25,0
 7254 2e1a 9A83      		std Y+2,r25
 7255 2e1c 8983      		std Y+1,r24
 7256 2e1e 00C0      		rjmp .L272
 7257               	.L274:
 909:lp_solve_5.5/lp_SOS.c ****       if(list[n+i] == column)
 7258               		.loc 1 909 0
 7259 2e20 2F81      		ldd r18,Y+7
 7260 2e22 3885      		ldd r19,Y+8
 7261 2e24 8981      		ldd r24,Y+1
 7262 2e26 9A81      		ldd r25,Y+2
 7263 2e28 820F      		add r24,r18
 7264 2e2a 931F      		adc r25,r19
 7265 2e2c 880F      		lsl r24
 7266 2e2e 991F      		rol r25
 7267 2e30 2985      		ldd r18,Y+9
 7268 2e32 3A85      		ldd r19,Y+10
 7269 2e34 820F      		add r24,r18
 7270 2e36 931F      		adc r25,r19
 7271 2e38 FC01      		movw r30,r24
 7272 2e3a 2081      		ld r18,Z
 7273 2e3c 3181      		ldd r19,Z+1
 7274 2e3e 8F85      		ldd r24,Y+15
 7275 2e40 9889      		ldd r25,Y+16
 7276 2e42 2817      		cp r18,r24
 7277 2e44 3907      		cpc r19,r25
 7278 2e46 01F4      		brne .L273
 910:lp_solve_5.5/lp_SOS.c ****         return(TRUE);
 7279               		.loc 1 910 0
 7280 2e48 81E0      		ldi r24,lo8(1)
 7281 2e4a 00C0      		rjmp .L266
 7282               	.L273:
 908:lp_solve_5.5/lp_SOS.c ****       if(list[n+i] == column)
 7283               		.loc 1 908 0 discriminator 2
 7284 2e4c 8981      		ldd r24,Y+1
 7285 2e4e 9A81      		ldd r25,Y+2
 7286 2e50 0196      		adiw r24,1
 7287 2e52 9A83      		std Y+2,r25
 7288 2e54 8983      		std Y+1,r24
 7289               	.L272:
 908:lp_solve_5.5/lp_SOS.c ****       if(list[n+i] == column)
 7290               		.loc 1 908 0 is_stmt 0 discriminator 1
 7291 2e56 2981      		ldd r18,Y+1
 7292 2e58 3A81      		ldd r19,Y+2
 7293 2e5a 8D81      		ldd r24,Y+5
 7294 2e5c 9E81      		ldd r25,Y+6
 7295 2e5e 8217      		cp r24,r18
 7296 2e60 9307      		cpc r25,r19
 7297 2e62 04F0      		brlt .L271
 908:lp_solve_5.5/lp_SOS.c ****       if(list[n+i] == column)
 7298               		.loc 1 908 0 discriminator 3
 7299 2e64 2F81      		ldd r18,Y+7
 7300 2e66 3885      		ldd r19,Y+8
 7301 2e68 8981      		ldd r24,Y+1
 7302 2e6a 9A81      		ldd r25,Y+2
 7303 2e6c 820F      		add r24,r18
 7304 2e6e 931F      		adc r25,r19
 7305 2e70 880F      		lsl r24
 7306 2e72 991F      		rol r25
 7307 2e74 2985      		ldd r18,Y+9
 7308 2e76 3A85      		ldd r19,Y+10
 7309 2e78 820F      		add r24,r18
 7310 2e7a 931F      		adc r25,r19
 7311 2e7c FC01      		movw r30,r24
 7312 2e7e 8081      		ld r24,Z
 7313 2e80 9181      		ldd r25,Z+1
 7314 2e82 892B      		or r24,r25
 7315 2e84 01F4      		brne .L274
 7316               	.L271:
 911:lp_solve_5.5/lp_SOS.c ****   }
 912:lp_solve_5.5/lp_SOS.c ****   return(FALSE);
 7317               		.loc 1 912 0 is_stmt 1
 7318 2e86 80E0      		ldi r24,0
 7319               	.L266:
 7320               	/* epilogue start */
 913:lp_solve_5.5/lp_SOS.c **** }
 7321               		.loc 1 913 0
 7322 2e88 6096      		adiw r28,16
 7323 2e8a 0FB6      		in __tmp_reg__,__SREG__
 7324 2e8c F894      		cli
 7325 2e8e DEBF      		out __SP_H__,r29
 7326 2e90 0FBE      		out __SREG__,__tmp_reg__
 7327 2e92 CDBF      		out __SP_L__,r28
 7328 2e94 DF91      		pop r29
 7329 2e96 CF91      		pop r28
 7330 2e98 0895      		ret
 7331               		.cfi_endproc
 7332               	.LFE31:
 7334               	.global	SOS_is_full
 7336               	SOS_is_full:
 7337               	.LFB32:
 914:lp_solve_5.5/lp_SOS.c **** 
 915:lp_solve_5.5/lp_SOS.c **** 
 916:lp_solve_5.5/lp_SOS.c **** MYBOOL SOS_is_full(SOSgroup *group, int sosindex, int column, MYBOOL activeonly)
 917:lp_solve_5.5/lp_SOS.c **** {
 7338               		.loc 1 917 0
 7339               		.cfi_startproc
 7340 2e9a CF93      		push r28
 7341               	.LCFI118:
 7342               		.cfi_def_cfa_offset 3
 7343               		.cfi_offset 28, -2
 7344 2e9c DF93      		push r29
 7345               	.LCFI119:
 7346               		.cfi_def_cfa_offset 4
 7347               		.cfi_offset 29, -3
 7348 2e9e CDB7      		in r28,__SP_L__
 7349 2ea0 DEB7      		in r29,__SP_H__
 7350               	.LCFI120:
 7351               		.cfi_def_cfa_register 28
 7352 2ea2 6197      		sbiw r28,17
 7353               	.LCFI121:
 7354               		.cfi_def_cfa_offset 21
 7355 2ea4 0FB6      		in __tmp_reg__,__SREG__
 7356 2ea6 F894      		cli
 7357 2ea8 DEBF      		out __SP_H__,r29
 7358 2eaa 0FBE      		out __SREG__,__tmp_reg__
 7359 2eac CDBF      		out __SP_L__,r28
 7360               	/* prologue: function */
 7361               	/* frame size = 17 */
 7362               	/* stack size = 19 */
 7363               	.L__stack_usage = 19
 7364 2eae 9C87      		std Y+12,r25
 7365 2eb0 8B87      		std Y+11,r24
 7366 2eb2 7E87      		std Y+14,r23
 7367 2eb4 6D87      		std Y+13,r22
 7368 2eb6 588B      		std Y+16,r21
 7369 2eb8 4F87      		std Y+15,r20
 7370 2eba 298B      		std Y+17,r18
 918:lp_solve_5.5/lp_SOS.c ****   int    i, nn, n, *list;
 919:lp_solve_5.5/lp_SOS.c ****   lprec  *lp = group->lp;
 7371               		.loc 1 919 0
 7372 2ebc 8B85      		ldd r24,Y+11
 7373 2ebe 9C85      		ldd r25,Y+12
 7374 2ec0 FC01      		movw r30,r24
 7375 2ec2 8081      		ld r24,Z
 7376 2ec4 9181      		ldd r25,Z+1
 7377 2ec6 9E83      		std Y+6,r25
 7378 2ec8 8D83      		std Y+5,r24
 920:lp_solve_5.5/lp_SOS.c **** 
 921:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
 922:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
 923:lp_solve_5.5/lp_SOS.c ****     report(lp, IMPORTANT, "SOS_is_full: Invalid SOS index %d\n", sosindex);
 924:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 925:lp_solve_5.5/lp_SOS.c ****   }
 926:lp_solve_5.5/lp_SOS.c **** #endif
 927:lp_solve_5.5/lp_SOS.c **** 
 928:lp_solve_5.5/lp_SOS.c ****   if(!(lp->var_type[column] & (ISSOS | ISGUB)))
 7379               		.loc 1 928 0
 7380 2eca 8D81      		ldd r24,Y+5
 7381 2ecc 9E81      		ldd r25,Y+6
 7382 2ece 8A57      		subi r24,122
 7383 2ed0 9D4F      		sbci r25,-3
 7384 2ed2 FC01      		movw r30,r24
 7385 2ed4 2081      		ld r18,Z
 7386 2ed6 3181      		ldd r19,Z+1
 7387 2ed8 8F85      		ldd r24,Y+15
 7388 2eda 9889      		ldd r25,Y+16
 7389 2edc 820F      		add r24,r18
 7390 2ede 931F      		adc r25,r19
 7391 2ee0 FC01      		movw r30,r24
 7392 2ee2 8081      		ld r24,Z
 7393 2ee4 882F      		mov r24,r24
 7394 2ee6 90E0      		ldi r25,0
 7395 2ee8 8471      		andi r24,20
 7396 2eea 9927      		clr r25
 7397 2eec 892B      		or r24,r25
 7398 2eee 01F4      		brne .L276
 929:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 7399               		.loc 1 929 0
 7400 2ef0 80E0      		ldi r24,0
 7401 2ef2 00C0      		rjmp .L277
 7402               	.L276:
 930:lp_solve_5.5/lp_SOS.c **** 
 931:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0) {
 7403               		.loc 1 931 0
 7404 2ef4 8D85      		ldd r24,Y+13
 7405 2ef6 9E85      		ldd r25,Y+14
 7406 2ef8 892B      		or r24,r25
 7407 2efa 01F0      		breq .+2
 7408 2efc 00C0      		rjmp .L278
 932:lp_solve_5.5/lp_SOS.c ****     for(i = group->memberpos[column-1]; i < group->memberpos[column]; i++) {
 7409               		.loc 1 932 0
 7410 2efe 8B85      		ldd r24,Y+11
 7411 2f00 9C85      		ldd r25,Y+12
 7412 2f02 FC01      		movw r30,r24
 7413 2f04 2685      		ldd r18,Z+14
 7414 2f06 3785      		ldd r19,Z+15
 7415 2f08 8F85      		ldd r24,Y+15
 7416 2f0a 9889      		ldd r25,Y+16
 7417 2f0c 8150      		subi r24,1
 7418 2f0e 9048      		sbci r25,-128
 7419 2f10 880F      		lsl r24
 7420 2f12 991F      		rol r25
 7421 2f14 820F      		add r24,r18
 7422 2f16 931F      		adc r25,r19
 7423 2f18 FC01      		movw r30,r24
 7424 2f1a 8081      		ld r24,Z
 7425 2f1c 9181      		ldd r25,Z+1
 7426 2f1e 9A83      		std Y+2,r25
 7427 2f20 8983      		std Y+1,r24
 7428 2f22 00C0      		rjmp .L279
 7429               	.L281:
 933:lp_solve_5.5/lp_SOS.c ****       nn = group->membership[i];
 7430               		.loc 1 933 0
 7431 2f24 8B85      		ldd r24,Y+11
 7432 2f26 9C85      		ldd r25,Y+12
 7433 2f28 FC01      		movw r30,r24
 7434 2f2a 2485      		ldd r18,Z+12
 7435 2f2c 3585      		ldd r19,Z+13
 7436 2f2e 8981      		ldd r24,Y+1
 7437 2f30 9A81      		ldd r25,Y+2
 7438 2f32 880F      		lsl r24
 7439 2f34 991F      		rol r25
 7440 2f36 820F      		add r24,r18
 7441 2f38 931F      		adc r25,r19
 7442 2f3a FC01      		movw r30,r24
 7443 2f3c 8081      		ld r24,Z
 7444 2f3e 9181      		ldd r25,Z+1
 7445 2f40 9C83      		std Y+4,r25
 7446 2f42 8B83      		std Y+3,r24
 934:lp_solve_5.5/lp_SOS.c ****       if(SOS_is_full(group, nn, column, activeonly))
 7447               		.loc 1 934 0
 7448 2f44 4F85      		ldd r20,Y+15
 7449 2f46 5889      		ldd r21,Y+16
 7450 2f48 6B81      		ldd r22,Y+3
 7451 2f4a 7C81      		ldd r23,Y+4
 7452 2f4c 8B85      		ldd r24,Y+11
 7453 2f4e 9C85      		ldd r25,Y+12
 7454 2f50 2989      		ldd r18,Y+17
 7455 2f52 0E94 0000 		call SOS_is_full
 7456 2f56 8823      		tst r24
 7457 2f58 01F0      		breq .L280
 935:lp_solve_5.5/lp_SOS.c ****         return(TRUE);
 7458               		.loc 1 935 0
 7459 2f5a 81E0      		ldi r24,lo8(1)
 7460 2f5c 00C0      		rjmp .L277
 7461               	.L280:
 932:lp_solve_5.5/lp_SOS.c ****       nn = group->membership[i];
 7462               		.loc 1 932 0 discriminator 2
 7463 2f5e 8981      		ldd r24,Y+1
 7464 2f60 9A81      		ldd r25,Y+2
 7465 2f62 0196      		adiw r24,1
 7466 2f64 9A83      		std Y+2,r25
 7467 2f66 8983      		std Y+1,r24
 7468               	.L279:
 932:lp_solve_5.5/lp_SOS.c ****       nn = group->membership[i];
 7469               		.loc 1 932 0 is_stmt 0 discriminator 1
 7470 2f68 8B85      		ldd r24,Y+11
 7471 2f6a 9C85      		ldd r25,Y+12
 7472 2f6c FC01      		movw r30,r24
 7473 2f6e 2685      		ldd r18,Z+14
 7474 2f70 3785      		ldd r19,Z+15
 7475 2f72 8F85      		ldd r24,Y+15
 7476 2f74 9889      		ldd r25,Y+16
 7477 2f76 880F      		lsl r24
 7478 2f78 991F      		rol r25
 7479 2f7a 820F      		add r24,r18
 7480 2f7c 931F      		adc r25,r19
 7481 2f7e FC01      		movw r30,r24
 7482 2f80 2081      		ld r18,Z
 7483 2f82 3181      		ldd r19,Z+1
 7484 2f84 8981      		ldd r24,Y+1
 7485 2f86 9A81      		ldd r25,Y+2
 7486 2f88 8217      		cp r24,r18
 7487 2f8a 9307      		cpc r25,r19
 7488 2f8c 04F0      		brlt .L281
 7489 2f8e 00C0      		rjmp .L282
 7490               	.L278:
 936:lp_solve_5.5/lp_SOS.c ****     }
 937:lp_solve_5.5/lp_SOS.c ****   }
 938:lp_solve_5.5/lp_SOS.c ****   else if(SOS_is_member(group, sosindex, column)) {
 7491               		.loc 1 938 0 is_stmt 1
 7492 2f90 4F85      		ldd r20,Y+15
 7493 2f92 5889      		ldd r21,Y+16
 7494 2f94 2D85      		ldd r18,Y+13
 7495 2f96 3E85      		ldd r19,Y+14
 7496 2f98 8B85      		ldd r24,Y+11
 7497 2f9a 9C85      		ldd r25,Y+12
 7498 2f9c B901      		movw r22,r18
 7499 2f9e 0E94 0000 		call SOS_is_member
 7500 2fa2 892B      		or r24,r25
 7501 2fa4 01F4      		brne .+2
 7502 2fa6 00C0      		rjmp .L282
 939:lp_solve_5.5/lp_SOS.c **** 
 940:lp_solve_5.5/lp_SOS.c ****     list = group->sos_list[sosindex-1]->members;
 7503               		.loc 1 940 0
 7504 2fa8 8B85      		ldd r24,Y+11
 7505 2faa 9C85      		ldd r25,Y+12
 7506 2fac FC01      		movw r30,r24
 7507 2fae 2281      		ldd r18,Z+2
 7508 2fb0 3381      		ldd r19,Z+3
 7509 2fb2 8D85      		ldd r24,Y+13
 7510 2fb4 9E85      		ldd r25,Y+14
 7511 2fb6 8150      		subi r24,1
 7512 2fb8 9048      		sbci r25,-128
 7513 2fba 880F      		lsl r24
 7514 2fbc 991F      		rol r25
 7515 2fbe 820F      		add r24,r18
 7516 2fc0 931F      		adc r25,r19
 7517 2fc2 FC01      		movw r30,r24
 7518 2fc4 8081      		ld r24,Z
 7519 2fc6 9181      		ldd r25,Z+1
 7520 2fc8 FC01      		movw r30,r24
 7521 2fca 8585      		ldd r24,Z+13
 7522 2fcc 9685      		ldd r25,Z+14
 7523 2fce 9887      		std Y+8,r25
 7524 2fd0 8F83      		std Y+7,r24
 941:lp_solve_5.5/lp_SOS.c ****     n = list[0]+1;
 7525               		.loc 1 941 0
 7526 2fd2 8F81      		ldd r24,Y+7
 7527 2fd4 9885      		ldd r25,Y+8
 7528 2fd6 FC01      		movw r30,r24
 7529 2fd8 8081      		ld r24,Z
 7530 2fda 9181      		ldd r25,Z+1
 7531 2fdc 0196      		adiw r24,1
 7532 2fde 9A87      		std Y+10,r25
 7533 2fe0 8987      		std Y+9,r24
 942:lp_solve_5.5/lp_SOS.c ****     nn = list[n];
 7534               		.loc 1 942 0
 7535 2fe2 8985      		ldd r24,Y+9
 7536 2fe4 9A85      		ldd r25,Y+10
 7537 2fe6 880F      		lsl r24
 7538 2fe8 991F      		rol r25
 7539 2fea 2F81      		ldd r18,Y+7
 7540 2fec 3885      		ldd r19,Y+8
 7541 2fee 820F      		add r24,r18
 7542 2ff0 931F      		adc r25,r19
 7543 2ff2 FC01      		movw r30,r24
 7544 2ff4 8081      		ld r24,Z
 7545 2ff6 9181      		ldd r25,Z+1
 7546 2ff8 9C83      		std Y+4,r25
 7547 2ffa 8B83      		std Y+3,r24
 943:lp_solve_5.5/lp_SOS.c **** 
 944:lp_solve_5.5/lp_SOS.c ****    /* Info: Last item in the active list is non-zero if the current SOS is full */
 945:lp_solve_5.5/lp_SOS.c ****     if(list[n+nn] != 0)
 7548               		.loc 1 945 0
 7549 2ffc 2985      		ldd r18,Y+9
 7550 2ffe 3A85      		ldd r19,Y+10
 7551 3000 8B81      		ldd r24,Y+3
 7552 3002 9C81      		ldd r25,Y+4
 7553 3004 820F      		add r24,r18
 7554 3006 931F      		adc r25,r19
 7555 3008 880F      		lsl r24
 7556 300a 991F      		rol r25
 7557 300c 2F81      		ldd r18,Y+7
 7558 300e 3885      		ldd r19,Y+8
 7559 3010 820F      		add r24,r18
 7560 3012 931F      		adc r25,r19
 7561 3014 FC01      		movw r30,r24
 7562 3016 8081      		ld r24,Z
 7563 3018 9181      		ldd r25,Z+1
 7564 301a 892B      		or r24,r25
 7565 301c 01F0      		breq .L283
 946:lp_solve_5.5/lp_SOS.c ****       return(TRUE);
 7566               		.loc 1 946 0
 7567 301e 81E0      		ldi r24,lo8(1)
 7568 3020 00C0      		rjmp .L277
 7569               	.L283:
 947:lp_solve_5.5/lp_SOS.c **** 
 948:lp_solve_5.5/lp_SOS.c ****     if(!activeonly) {
 7570               		.loc 1 948 0
 7571 3022 8989      		ldd r24,Y+17
 7572 3024 8823      		tst r24
 7573 3026 01F0      		breq .+2
 7574 3028 00C0      		rjmp .L282
 949:lp_solve_5.5/lp_SOS.c ****       /* Spool to last active variable */
 950:lp_solve_5.5/lp_SOS.c ****       for(i = nn-1; (i > 0) && (list[n+i] == 0); i--);
 7575               		.loc 1 950 0
 7576 302a 8B81      		ldd r24,Y+3
 7577 302c 9C81      		ldd r25,Y+4
 7578 302e 0197      		sbiw r24,1
 7579 3030 9A83      		std Y+2,r25
 7580 3032 8983      		std Y+1,r24
 7581 3034 00C0      		rjmp .L284
 7582               	.L286:
 7583               		.loc 1 950 0 is_stmt 0 discriminator 4
 7584 3036 8981      		ldd r24,Y+1
 7585 3038 9A81      		ldd r25,Y+2
 7586 303a 0197      		sbiw r24,1
 7587 303c 9A83      		std Y+2,r25
 7588 303e 8983      		std Y+1,r24
 7589               	.L284:
 7590               		.loc 1 950 0 discriminator 1
 7591 3040 8981      		ldd r24,Y+1
 7592 3042 9A81      		ldd r25,Y+2
 7593 3044 1816      		cp __zero_reg__,r24
 7594 3046 1906      		cpc __zero_reg__,r25
 7595 3048 04F4      		brge .L285
 7596               		.loc 1 950 0 discriminator 3
 7597 304a 2985      		ldd r18,Y+9
 7598 304c 3A85      		ldd r19,Y+10
 7599 304e 8981      		ldd r24,Y+1
 7600 3050 9A81      		ldd r25,Y+2
 7601 3052 820F      		add r24,r18
 7602 3054 931F      		adc r25,r19
 7603 3056 880F      		lsl r24
 7604 3058 991F      		rol r25
 7605 305a 2F81      		ldd r18,Y+7
 7606 305c 3885      		ldd r19,Y+8
 7607 305e 820F      		add r24,r18
 7608 3060 931F      		adc r25,r19
 7609 3062 FC01      		movw r30,r24
 7610 3064 8081      		ld r24,Z
 7611 3066 9181      		ldd r25,Z+1
 7612 3068 892B      		or r24,r25
 7613 306a 01F0      		breq .L286
 7614               	.L285:
 951:lp_solve_5.5/lp_SOS.c ****       /* Having found it, check if subsequent variables are set (via bounds) as inactive */
 952:lp_solve_5.5/lp_SOS.c ****       if(i > 0) {
 7615               		.loc 1 952 0 is_stmt 1
 7616 306c 8981      		ldd r24,Y+1
 7617 306e 9A81      		ldd r25,Y+2
 7618 3070 1816      		cp __zero_reg__,r24
 7619 3072 1906      		cpc __zero_reg__,r25
 7620 3074 04F0      		brlt .+2
 7621 3076 00C0      		rjmp .L282
 953:lp_solve_5.5/lp_SOS.c ****         nn -= i;  /* Compute unused active slots */
 7622               		.loc 1 953 0
 7623 3078 2B81      		ldd r18,Y+3
 7624 307a 3C81      		ldd r19,Y+4
 7625 307c 8981      		ldd r24,Y+1
 7626 307e 9A81      		ldd r25,Y+2
 7627 3080 A901      		movw r20,r18
 7628 3082 481B      		sub r20,r24
 7629 3084 590B      		sbc r21,r25
 7630 3086 CA01      		movw r24,r20
 7631 3088 9C83      		std Y+4,r25
 7632 308a 8B83      		std Y+3,r24
 954:lp_solve_5.5/lp_SOS.c ****         i = SOS_member_index(group, sosindex, list[n+i]);
 7633               		.loc 1 954 0
 7634 308c 2985      		ldd r18,Y+9
 7635 308e 3A85      		ldd r19,Y+10
 7636 3090 8981      		ldd r24,Y+1
 7637 3092 9A81      		ldd r25,Y+2
 7638 3094 820F      		add r24,r18
 7639 3096 931F      		adc r25,r19
 7640 3098 880F      		lsl r24
 7641 309a 991F      		rol r25
 7642 309c 2F81      		ldd r18,Y+7
 7643 309e 3885      		ldd r19,Y+8
 7644 30a0 820F      		add r24,r18
 7645 30a2 931F      		adc r25,r19
 7646 30a4 FC01      		movw r30,r24
 7647 30a6 4081      		ld r20,Z
 7648 30a8 5181      		ldd r21,Z+1
 7649 30aa 2D85      		ldd r18,Y+13
 7650 30ac 3E85      		ldd r19,Y+14
 7651 30ae 8B85      		ldd r24,Y+11
 7652 30b0 9C85      		ldd r25,Y+12
 7653 30b2 B901      		movw r22,r18
 7654 30b4 0E94 0000 		call SOS_member_index
 7655 30b8 9A83      		std Y+2,r25
 7656 30ba 8983      		std Y+1,r24
 955:lp_solve_5.5/lp_SOS.c ****         for(; (nn > 0) && (list[i] < 0); i++, nn--);
 7657               		.loc 1 955 0
 7658 30bc 00C0      		rjmp .L287
 7659               	.L289:
 7660               		.loc 1 955 0 is_stmt 0 discriminator 3
 7661 30be 8981      		ldd r24,Y+1
 7662 30c0 9A81      		ldd r25,Y+2
 7663 30c2 0196      		adiw r24,1
 7664 30c4 9A83      		std Y+2,r25
 7665 30c6 8983      		std Y+1,r24
 7666 30c8 8B81      		ldd r24,Y+3
 7667 30ca 9C81      		ldd r25,Y+4
 7668 30cc 0197      		sbiw r24,1
 7669 30ce 9C83      		std Y+4,r25
 7670 30d0 8B83      		std Y+3,r24
 7671               	.L287:
 7672               		.loc 1 955 0 discriminator 1
 7673 30d2 8B81      		ldd r24,Y+3
 7674 30d4 9C81      		ldd r25,Y+4
 7675 30d6 1816      		cp __zero_reg__,r24
 7676 30d8 1906      		cpc __zero_reg__,r25
 7677 30da 04F4      		brge .L288
 7678               		.loc 1 955 0 discriminator 2
 7679 30dc 8981      		ldd r24,Y+1
 7680 30de 9A81      		ldd r25,Y+2
 7681 30e0 880F      		lsl r24
 7682 30e2 991F      		rol r25
 7683 30e4 2F81      		ldd r18,Y+7
 7684 30e6 3885      		ldd r19,Y+8
 7685 30e8 820F      		add r24,r18
 7686 30ea 931F      		adc r25,r19
 7687 30ec FC01      		movw r30,r24
 7688 30ee 8081      		ld r24,Z
 7689 30f0 9181      		ldd r25,Z+1
 7690 30f2 9923      		tst r25
 7691 30f4 04F0      		brlt .L289
 7692               	.L288:
 956:lp_solve_5.5/lp_SOS.c ****         if(nn == 0)
 7693               		.loc 1 956 0 is_stmt 1
 7694 30f6 8B81      		ldd r24,Y+3
 7695 30f8 9C81      		ldd r25,Y+4
 7696 30fa 892B      		or r24,r25
 7697 30fc 01F4      		brne .L282
 957:lp_solve_5.5/lp_SOS.c ****           return(TRUE);
 7698               		.loc 1 957 0
 7699 30fe 81E0      		ldi r24,lo8(1)
 7700 3100 00C0      		rjmp .L277
 7701               	.L282:
 958:lp_solve_5.5/lp_SOS.c ****       }
 959:lp_solve_5.5/lp_SOS.c ****     }
 960:lp_solve_5.5/lp_SOS.c ****   }
 961:lp_solve_5.5/lp_SOS.c **** 
 962:lp_solve_5.5/lp_SOS.c ****   return(FALSE);
 7702               		.loc 1 962 0
 7703 3102 80E0      		ldi r24,0
 7704               	.L277:
 7705               	/* epilogue start */
 963:lp_solve_5.5/lp_SOS.c **** }
 7706               		.loc 1 963 0
 7707 3104 6196      		adiw r28,17
 7708 3106 0FB6      		in __tmp_reg__,__SREG__
 7709 3108 F894      		cli
 7710 310a DEBF      		out __SP_H__,r29
 7711 310c 0FBE      		out __SREG__,__tmp_reg__
 7712 310e CDBF      		out __SP_L__,r28
 7713 3110 DF91      		pop r29
 7714 3112 CF91      		pop r28
 7715 3114 0895      		ret
 7716               		.cfi_endproc
 7717               	.LFE32:
 7719               	.global	__eqsf2
 7720               		.section	.rodata
 7721               	.LC2:
 7722 007b 534F 535F 		.string	"SOS_can_activate: Internal index error at SOS %d\n"
 7722      6361 6E5F 
 7722      6163 7469 
 7722      7661 7465 
 7722      3A20 496E 
 7723               		.text
 7724               	.global	SOS_can_activate
 7726               	SOS_can_activate:
 7727               	.LFB33:
 964:lp_solve_5.5/lp_SOS.c **** 
 965:lp_solve_5.5/lp_SOS.c **** 
 966:lp_solve_5.5/lp_SOS.c **** MYBOOL SOS_can_activate(SOSgroup *group, int sosindex, int column)
 967:lp_solve_5.5/lp_SOS.c **** {
 7728               		.loc 1 967 0
 7729               		.cfi_startproc
 7730 3116 CF93      		push r28
 7731               	.LCFI122:
 7732               		.cfi_def_cfa_offset 3
 7733               		.cfi_offset 28, -2
 7734 3118 DF93      		push r29
 7735               	.LCFI123:
 7736               		.cfi_def_cfa_offset 4
 7737               		.cfi_offset 29, -3
 7738 311a CDB7      		in r28,__SP_L__
 7739 311c DEB7      		in r29,__SP_H__
 7740               	.LCFI124:
 7741               		.cfi_def_cfa_register 28
 7742 311e 6297      		sbiw r28,18
 7743               	.LCFI125:
 7744               		.cfi_def_cfa_offset 22
 7745 3120 0FB6      		in __tmp_reg__,__SREG__
 7746 3122 F894      		cli
 7747 3124 DEBF      		out __SP_H__,r29
 7748 3126 0FBE      		out __SREG__,__tmp_reg__
 7749 3128 CDBF      		out __SP_L__,r28
 7750               	/* prologue: function */
 7751               	/* frame size = 18 */
 7752               	/* stack size = 20 */
 7753               	.L__stack_usage = 20
 7754 312a 9E87      		std Y+14,r25
 7755 312c 8D87      		std Y+13,r24
 7756 312e 788B      		std Y+16,r23
 7757 3130 6F87      		std Y+15,r22
 7758 3132 5A8B      		std Y+18,r21
 7759 3134 498B      		std Y+17,r20
 968:lp_solve_5.5/lp_SOS.c ****   int    i, n, nn, nz, *list;
 969:lp_solve_5.5/lp_SOS.c ****   lprec  *lp;
 970:lp_solve_5.5/lp_SOS.c **** 
 971:lp_solve_5.5/lp_SOS.c ****   if(group == NULL)
 7760               		.loc 1 971 0
 7761 3136 8D85      		ldd r24,Y+13
 7762 3138 9E85      		ldd r25,Y+14
 7763 313a 892B      		or r24,r25
 7764 313c 01F4      		brne .L291
 972:lp_solve_5.5/lp_SOS.c ****     return( FALSE );
 7765               		.loc 1 972 0
 7766 313e 80E0      		ldi r24,0
 7767 3140 00C0      		rjmp .L292
 7768               	.L291:
 973:lp_solve_5.5/lp_SOS.c ****   lp = group->lp;
 7769               		.loc 1 973 0
 7770 3142 8D85      		ldd r24,Y+13
 7771 3144 9E85      		ldd r25,Y+14
 7772 3146 FC01      		movw r30,r24
 7773 3148 8081      		ld r24,Z
 7774 314a 9181      		ldd r25,Z+1
 7775 314c 9E83      		std Y+6,r25
 7776 314e 8D83      		std Y+5,r24
 974:lp_solve_5.5/lp_SOS.c **** 
 975:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
 976:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
 977:lp_solve_5.5/lp_SOS.c ****     report(lp, IMPORTANT, "SOS_can_activate: Invalid SOS index %d\n", sosindex);
 978:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 979:lp_solve_5.5/lp_SOS.c ****   }
 980:lp_solve_5.5/lp_SOS.c **** #endif
 981:lp_solve_5.5/lp_SOS.c **** 
 982:lp_solve_5.5/lp_SOS.c ****   if(!(lp->var_type[column] & (ISSOS | ISGUB)))
 7777               		.loc 1 982 0
 7778 3150 8D81      		ldd r24,Y+5
 7779 3152 9E81      		ldd r25,Y+6
 7780 3154 8A57      		subi r24,122
 7781 3156 9D4F      		sbci r25,-3
 7782 3158 FC01      		movw r30,r24
 7783 315a 2081      		ld r18,Z
 7784 315c 3181      		ldd r19,Z+1
 7785 315e 8989      		ldd r24,Y+17
 7786 3160 9A89      		ldd r25,Y+18
 7787 3162 820F      		add r24,r18
 7788 3164 931F      		adc r25,r19
 7789 3166 FC01      		movw r30,r24
 7790 3168 8081      		ld r24,Z
 7791 316a 882F      		mov r24,r24
 7792 316c 90E0      		ldi r25,0
 7793 316e 8471      		andi r24,20
 7794 3170 9927      		clr r25
 7795 3172 892B      		or r24,r25
 7796 3174 01F4      		brne .L293
 983:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 7797               		.loc 1 983 0
 7798 3176 80E0      		ldi r24,0
 7799 3178 00C0      		rjmp .L292
 7800               	.L293:
 984:lp_solve_5.5/lp_SOS.c **** 
 985:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0) {
 7801               		.loc 1 985 0
 7802 317a 8F85      		ldd r24,Y+15
 7803 317c 9889      		ldd r25,Y+16
 7804 317e 892B      		or r24,r25
 7805 3180 01F0      		breq .+2
 7806 3182 00C0      		rjmp .L294
 986:lp_solve_5.5/lp_SOS.c ****     for(i = group->memberpos[column-1]; i < group->memberpos[column]; i++) {
 7807               		.loc 1 986 0
 7808 3184 8D85      		ldd r24,Y+13
 7809 3186 9E85      		ldd r25,Y+14
 7810 3188 FC01      		movw r30,r24
 7811 318a 2685      		ldd r18,Z+14
 7812 318c 3785      		ldd r19,Z+15
 7813 318e 8989      		ldd r24,Y+17
 7814 3190 9A89      		ldd r25,Y+18
 7815 3192 8150      		subi r24,1
 7816 3194 9048      		sbci r25,-128
 7817 3196 880F      		lsl r24
 7818 3198 991F      		rol r25
 7819 319a 820F      		add r24,r18
 7820 319c 931F      		adc r25,r19
 7821 319e FC01      		movw r30,r24
 7822 31a0 8081      		ld r24,Z
 7823 31a2 9181      		ldd r25,Z+1
 7824 31a4 9A83      		std Y+2,r25
 7825 31a6 8983      		std Y+1,r24
 7826 31a8 00C0      		rjmp .L295
 7827               	.L297:
 987:lp_solve_5.5/lp_SOS.c ****       nn = group->membership[i];
 7828               		.loc 1 987 0
 7829 31aa 8D85      		ldd r24,Y+13
 7830 31ac 9E85      		ldd r25,Y+14
 7831 31ae FC01      		movw r30,r24
 7832 31b0 2485      		ldd r18,Z+12
 7833 31b2 3585      		ldd r19,Z+13
 7834 31b4 8981      		ldd r24,Y+1
 7835 31b6 9A81      		ldd r25,Y+2
 7836 31b8 880F      		lsl r24
 7837 31ba 991F      		rol r25
 7838 31bc 820F      		add r24,r18
 7839 31be 931F      		adc r25,r19
 7840 31c0 FC01      		movw r30,r24
 7841 31c2 8081      		ld r24,Z
 7842 31c4 9181      		ldd r25,Z+1
 7843 31c6 9887      		std Y+8,r25
 7844 31c8 8F83      		std Y+7,r24
 988:lp_solve_5.5/lp_SOS.c ****       n = SOS_can_activate(group, nn, column);
 7845               		.loc 1 988 0
 7846 31ca 4989      		ldd r20,Y+17
 7847 31cc 5A89      		ldd r21,Y+18
 7848 31ce 2F81      		ldd r18,Y+7
 7849 31d0 3885      		ldd r19,Y+8
 7850 31d2 8D85      		ldd r24,Y+13
 7851 31d4 9E85      		ldd r25,Y+14
 7852 31d6 B901      		movw r22,r18
 7853 31d8 0E94 0000 		call SOS_can_activate
 7854 31dc 882F      		mov r24,r24
 7855 31de 90E0      		ldi r25,0
 7856 31e0 9A87      		std Y+10,r25
 7857 31e2 8987      		std Y+9,r24
 989:lp_solve_5.5/lp_SOS.c ****       if(n == FALSE)
 7858               		.loc 1 989 0
 7859 31e4 8985      		ldd r24,Y+9
 7860 31e6 9A85      		ldd r25,Y+10
 7861 31e8 892B      		or r24,r25
 7862 31ea 01F4      		brne .L296
 990:lp_solve_5.5/lp_SOS.c ****         return(FALSE);
 7863               		.loc 1 990 0
 7864 31ec 80E0      		ldi r24,0
 7865 31ee 00C0      		rjmp .L292
 7866               	.L296:
 986:lp_solve_5.5/lp_SOS.c ****       nn = group->membership[i];
 7867               		.loc 1 986 0 discriminator 2
 7868 31f0 8981      		ldd r24,Y+1
 7869 31f2 9A81      		ldd r25,Y+2
 7870 31f4 0196      		adiw r24,1
 7871 31f6 9A83      		std Y+2,r25
 7872 31f8 8983      		std Y+1,r24
 7873               	.L295:
 986:lp_solve_5.5/lp_SOS.c ****       nn = group->membership[i];
 7874               		.loc 1 986 0 is_stmt 0 discriminator 1
 7875 31fa 8D85      		ldd r24,Y+13
 7876 31fc 9E85      		ldd r25,Y+14
 7877 31fe FC01      		movw r30,r24
 7878 3200 2685      		ldd r18,Z+14
 7879 3202 3785      		ldd r19,Z+15
 7880 3204 8989      		ldd r24,Y+17
 7881 3206 9A89      		ldd r25,Y+18
 7882 3208 880F      		lsl r24
 7883 320a 991F      		rol r25
 7884 320c 820F      		add r24,r18
 7885 320e 931F      		adc r25,r19
 7886 3210 FC01      		movw r30,r24
 7887 3212 2081      		ld r18,Z
 7888 3214 3181      		ldd r19,Z+1
 7889 3216 8981      		ldd r24,Y+1
 7890 3218 9A81      		ldd r25,Y+2
 7891 321a 8217      		cp r24,r18
 7892 321c 9307      		cpc r25,r19
 7893 321e 04F0      		brlt .L297
 7894 3220 00C0      		rjmp .L298
 7895               	.L294:
 991:lp_solve_5.5/lp_SOS.c ****     }
 992:lp_solve_5.5/lp_SOS.c ****   }
 993:lp_solve_5.5/lp_SOS.c ****   else if(SOS_is_member(group, sosindex, column)) {
 7896               		.loc 1 993 0 is_stmt 1
 7897 3222 4989      		ldd r20,Y+17
 7898 3224 5A89      		ldd r21,Y+18
 7899 3226 2F85      		ldd r18,Y+15
 7900 3228 3889      		ldd r19,Y+16
 7901 322a 8D85      		ldd r24,Y+13
 7902 322c 9E85      		ldd r25,Y+14
 7903 322e B901      		movw r22,r18
 7904 3230 0E94 0000 		call SOS_is_member
 7905 3234 892B      		or r24,r25
 7906 3236 01F4      		brne .+2
 7907 3238 00C0      		rjmp .L298
 994:lp_solve_5.5/lp_SOS.c **** 
 995:lp_solve_5.5/lp_SOS.c ****     list = group->sos_list[sosindex-1]->members;
 7908               		.loc 1 995 0
 7909 323a 8D85      		ldd r24,Y+13
 7910 323c 9E85      		ldd r25,Y+14
 7911 323e FC01      		movw r30,r24
 7912 3240 2281      		ldd r18,Z+2
 7913 3242 3381      		ldd r19,Z+3
 7914 3244 8F85      		ldd r24,Y+15
 7915 3246 9889      		ldd r25,Y+16
 7916 3248 8150      		subi r24,1
 7917 324a 9048      		sbci r25,-128
 7918 324c 880F      		lsl r24
 7919 324e 991F      		rol r25
 7920 3250 820F      		add r24,r18
 7921 3252 931F      		adc r25,r19
 7922 3254 FC01      		movw r30,r24
 7923 3256 8081      		ld r24,Z
 7924 3258 9181      		ldd r25,Z+1
 7925 325a FC01      		movw r30,r24
 7926 325c 8585      		ldd r24,Z+13
 7927 325e 9685      		ldd r25,Z+14
 7928 3260 9C87      		std Y+12,r25
 7929 3262 8B87      		std Y+11,r24
 996:lp_solve_5.5/lp_SOS.c ****     n = list[0]+1;
 7930               		.loc 1 996 0
 7931 3264 8B85      		ldd r24,Y+11
 7932 3266 9C85      		ldd r25,Y+12
 7933 3268 FC01      		movw r30,r24
 7934 326a 8081      		ld r24,Z
 7935 326c 9181      		ldd r25,Z+1
 7936 326e 0196      		adiw r24,1
 7937 3270 9A87      		std Y+10,r25
 7938 3272 8987      		std Y+9,r24
 997:lp_solve_5.5/lp_SOS.c ****     nn = list[n];
 7939               		.loc 1 997 0
 7940 3274 8985      		ldd r24,Y+9
 7941 3276 9A85      		ldd r25,Y+10
 7942 3278 880F      		lsl r24
 7943 327a 991F      		rol r25
 7944 327c 2B85      		ldd r18,Y+11
 7945 327e 3C85      		ldd r19,Y+12
 7946 3280 820F      		add r24,r18
 7947 3282 931F      		adc r25,r19
 7948 3284 FC01      		movw r30,r24
 7949 3286 8081      		ld r24,Z
 7950 3288 9181      		ldd r25,Z+1
 7951 328a 9887      		std Y+8,r25
 7952 328c 8F83      		std Y+7,r24
 998:lp_solve_5.5/lp_SOS.c **** 
 999:lp_solve_5.5/lp_SOS.c **** #if 0
1000:lp_solve_5.5/lp_SOS.c ****     /* Accept if the SOS is empty */
1001:lp_solve_5.5/lp_SOS.c ****     if(list[n+1] == 0)
1002:lp_solve_5.5/lp_SOS.c ****       return(TRUE);
1003:lp_solve_5.5/lp_SOS.c **** #endif
1004:lp_solve_5.5/lp_SOS.c **** 
1005:lp_solve_5.5/lp_SOS.c ****     /* Cannot activate a variable if the SOS is full */
1006:lp_solve_5.5/lp_SOS.c ****     if(list[n+nn] != 0)
 7953               		.loc 1 1006 0
 7954 328e 2985      		ldd r18,Y+9
 7955 3290 3A85      		ldd r19,Y+10
 7956 3292 8F81      		ldd r24,Y+7
 7957 3294 9885      		ldd r25,Y+8
 7958 3296 820F      		add r24,r18
 7959 3298 931F      		adc r25,r19
 7960 329a 880F      		lsl r24
 7961 329c 991F      		rol r25
 7962 329e 2B85      		ldd r18,Y+11
 7963 32a0 3C85      		ldd r19,Y+12
 7964 32a2 820F      		add r24,r18
 7965 32a4 931F      		adc r25,r19
 7966 32a6 FC01      		movw r30,r24
 7967 32a8 8081      		ld r24,Z
 7968 32aa 9181      		ldd r25,Z+1
 7969 32ac 892B      		or r24,r25
 7970 32ae 01F0      		breq .L299
1007:lp_solve_5.5/lp_SOS.c ****       return(FALSE);
 7971               		.loc 1 1007 0
 7972 32b0 80E0      		ldi r24,0
 7973 32b2 00C0      		rjmp .L292
 7974               	.L299:
1008:lp_solve_5.5/lp_SOS.c **** 
1009:lp_solve_5.5/lp_SOS.c ****     /* Check if there are variables quasi-active via non-zero lower bounds */
1010:lp_solve_5.5/lp_SOS.c ****     nz = 0;
 7975               		.loc 1 1010 0
 7976 32b4 1C82      		std Y+4,__zero_reg__
 7977 32b6 1B82      		std Y+3,__zero_reg__
1011:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i < n; i++)
 7978               		.loc 1 1011 0
 7979 32b8 81E0      		ldi r24,lo8(1)
 7980 32ba 90E0      		ldi r25,0
 7981 32bc 9A83      		std Y+2,r25
 7982 32be 8983      		std Y+1,r24
 7983 32c0 00C0      		rjmp .L300
 7984               	.L304:
1012:lp_solve_5.5/lp_SOS.c ****       if(lp->bb_bounds->lowbo[lp->rows+abs(list[i])] > 0) {
 7985               		.loc 1 1012 0
 7986 32c2 8D81      		ldd r24,Y+5
 7987 32c4 9E81      		ldd r25,Y+6
 7988 32c6 8654      		subi r24,70
 7989 32c8 9D4F      		sbci r25,-3
 7990 32ca FC01      		movw r30,r24
 7991 32cc 8081      		ld r24,Z
 7992 32ce 9181      		ldd r25,Z+1
 7993 32d0 FC01      		movw r30,r24
 7994 32d2 22A1      		ldd r18,Z+34
 7995 32d4 33A1      		ldd r19,Z+35
 7996 32d6 8D81      		ldd r24,Y+5
 7997 32d8 9E81      		ldd r25,Y+6
 7998 32da 8651      		subi r24,22
 7999 32dc 9E4F      		sbci r25,-2
 8000 32de FC01      		movw r30,r24
 8001 32e0 4081      		ld r20,Z
 8002 32e2 5181      		ldd r21,Z+1
 8003 32e4 8981      		ldd r24,Y+1
 8004 32e6 9A81      		ldd r25,Y+2
 8005 32e8 880F      		lsl r24
 8006 32ea 991F      		rol r25
 8007 32ec 6B85      		ldd r22,Y+11
 8008 32ee 7C85      		ldd r23,Y+12
 8009 32f0 860F      		add r24,r22
 8010 32f2 971F      		adc r25,r23
 8011 32f4 FC01      		movw r30,r24
 8012 32f6 8081      		ld r24,Z
 8013 32f8 9181      		ldd r25,Z+1
 8014 32fa 9923      		tst r25
 8015 32fc 04F4      		brge .L301
 8016 32fe 9195      		neg r25
 8017 3300 8195      		neg r24
 8018 3302 9109      		sbc r25,__zero_reg__
 8019               	.L301:
 8020 3304 840F      		add r24,r20
 8021 3306 951F      		adc r25,r21
 8022 3308 880F      		lsl r24
 8023 330a 991F      		rol r25
 8024 330c 880F      		lsl r24
 8025 330e 991F      		rol r25
 8026 3310 820F      		add r24,r18
 8027 3312 931F      		adc r25,r19
 8028 3314 FC01      		movw r30,r24
 8029 3316 8081      		ld r24,Z
 8030 3318 9181      		ldd r25,Z+1
 8031 331a A281      		ldd r26,Z+2
 8032 331c B381      		ldd r27,Z+3
 8033 331e 20E0      		ldi r18,0
 8034 3320 30E0      		ldi r19,0
 8035 3322 A901      		movw r20,r18
 8036 3324 BC01      		movw r22,r24
 8037 3326 CD01      		movw r24,r26
 8038 3328 0E94 0000 		call __gtsf2
 8039 332c 1816      		cp __zero_reg__,r24
 8040 332e 04F4      		brge .L302
1013:lp_solve_5.5/lp_SOS.c ****         nz++;
 8041               		.loc 1 1013 0
 8042 3330 8B81      		ldd r24,Y+3
 8043 3332 9C81      		ldd r25,Y+4
 8044 3334 0196      		adiw r24,1
 8045 3336 9C83      		std Y+4,r25
 8046 3338 8B83      		std Y+3,r24
1014:lp_solve_5.5/lp_SOS.c ****         /* Reject outright if selected column has a non-zero lower bound */
1015:lp_solve_5.5/lp_SOS.c ****         if(list[i] == column)
 8047               		.loc 1 1015 0
 8048 333a 8981      		ldd r24,Y+1
 8049 333c 9A81      		ldd r25,Y+2
 8050 333e 880F      		lsl r24
 8051 3340 991F      		rol r25
 8052 3342 2B85      		ldd r18,Y+11
 8053 3344 3C85      		ldd r19,Y+12
 8054 3346 820F      		add r24,r18
 8055 3348 931F      		adc r25,r19
 8056 334a FC01      		movw r30,r24
 8057 334c 2081      		ld r18,Z
 8058 334e 3181      		ldd r19,Z+1
 8059 3350 8989      		ldd r24,Y+17
 8060 3352 9A89      		ldd r25,Y+18
 8061 3354 2817      		cp r18,r24
 8062 3356 3907      		cpc r19,r25
 8063 3358 01F4      		brne .L302
1016:lp_solve_5.5/lp_SOS.c ****           return(FALSE);
 8064               		.loc 1 1016 0
 8065 335a 80E0      		ldi r24,0
 8066 335c 00C0      		rjmp .L292
 8067               	.L302:
1011:lp_solve_5.5/lp_SOS.c ****       if(lp->bb_bounds->lowbo[lp->rows+abs(list[i])] > 0) {
 8068               		.loc 1 1011 0 discriminator 2
 8069 335e 8981      		ldd r24,Y+1
 8070 3360 9A81      		ldd r25,Y+2
 8071 3362 0196      		adiw r24,1
 8072 3364 9A83      		std Y+2,r25
 8073 3366 8983      		std Y+1,r24
 8074               	.L300:
1011:lp_solve_5.5/lp_SOS.c ****       if(lp->bb_bounds->lowbo[lp->rows+abs(list[i])] > 0) {
 8075               		.loc 1 1011 0 is_stmt 0 discriminator 1
 8076 3368 2981      		ldd r18,Y+1
 8077 336a 3A81      		ldd r19,Y+2
 8078 336c 8985      		ldd r24,Y+9
 8079 336e 9A85      		ldd r25,Y+10
 8080 3370 2817      		cp r18,r24
 8081 3372 3907      		cpc r19,r25
 8082 3374 04F4      		brge .+2
 8083 3376 00C0      		rjmp .L304
1017:lp_solve_5.5/lp_SOS.c ****       }
1018:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
1019:lp_solve_5.5/lp_SOS.c ****     if(nz > nn)
1020:lp_solve_5.5/lp_SOS.c ****       report(lp, SEVERE, "SOS_can_activate: Found too many non-zero member variables for SOS index 
1021:lp_solve_5.5/lp_SOS.c **** #endif
1022:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= nn; i++) {
 8084               		.loc 1 1022 0 is_stmt 1
 8085 3378 81E0      		ldi r24,lo8(1)
 8086 337a 90E0      		ldi r25,0
 8087 337c 9A83      		std Y+2,r25
 8088 337e 8983      		std Y+1,r24
 8089 3380 00C0      		rjmp .L305
 8090               	.L310:
1023:lp_solve_5.5/lp_SOS.c ****       if(list[n+i] == 0)
 8091               		.loc 1 1023 0
 8092 3382 2985      		ldd r18,Y+9
 8093 3384 3A85      		ldd r19,Y+10
 8094 3386 8981      		ldd r24,Y+1
 8095 3388 9A81      		ldd r25,Y+2
 8096 338a 820F      		add r24,r18
 8097 338c 931F      		adc r25,r19
 8098 338e 880F      		lsl r24
 8099 3390 991F      		rol r25
 8100 3392 2B85      		ldd r18,Y+11
 8101 3394 3C85      		ldd r19,Y+12
 8102 3396 820F      		add r24,r18
 8103 3398 931F      		adc r25,r19
 8104 339a FC01      		movw r30,r24
 8105 339c 8081      		ld r24,Z
 8106 339e 9181      		ldd r25,Z+1
 8107 33a0 892B      		or r24,r25
 8108 33a2 01F4      		brne .+2
 8109 33a4 00C0      		rjmp .L328
1024:lp_solve_5.5/lp_SOS.c ****         break;
1025:lp_solve_5.5/lp_SOS.c ****       if(lp->bb_bounds->lowbo[lp->rows+list[n+i]] == 0)
 8110               		.loc 1 1025 0
 8111 33a6 8D81      		ldd r24,Y+5
 8112 33a8 9E81      		ldd r25,Y+6
 8113 33aa 8654      		subi r24,70
 8114 33ac 9D4F      		sbci r25,-3
 8115 33ae FC01      		movw r30,r24
 8116 33b0 8081      		ld r24,Z
 8117 33b2 9181      		ldd r25,Z+1
 8118 33b4 FC01      		movw r30,r24
 8119 33b6 22A1      		ldd r18,Z+34
 8120 33b8 33A1      		ldd r19,Z+35
 8121 33ba 8D81      		ldd r24,Y+5
 8122 33bc 9E81      		ldd r25,Y+6
 8123 33be 8651      		subi r24,22
 8124 33c0 9E4F      		sbci r25,-2
 8125 33c2 FC01      		movw r30,r24
 8126 33c4 4081      		ld r20,Z
 8127 33c6 5181      		ldd r21,Z+1
 8128 33c8 6985      		ldd r22,Y+9
 8129 33ca 7A85      		ldd r23,Y+10
 8130 33cc 8981      		ldd r24,Y+1
 8131 33ce 9A81      		ldd r25,Y+2
 8132 33d0 860F      		add r24,r22
 8133 33d2 971F      		adc r25,r23
 8134 33d4 880F      		lsl r24
 8135 33d6 991F      		rol r25
 8136 33d8 6B85      		ldd r22,Y+11
 8137 33da 7C85      		ldd r23,Y+12
 8138 33dc 860F      		add r24,r22
 8139 33de 971F      		adc r25,r23
 8140 33e0 FC01      		movw r30,r24
 8141 33e2 8081      		ld r24,Z
 8142 33e4 9181      		ldd r25,Z+1
 8143 33e6 840F      		add r24,r20
 8144 33e8 951F      		adc r25,r21
 8145 33ea 880F      		lsl r24
 8146 33ec 991F      		rol r25
 8147 33ee 880F      		lsl r24
 8148 33f0 991F      		rol r25
 8149 33f2 820F      		add r24,r18
 8150 33f4 931F      		adc r25,r19
 8151 33f6 FC01      		movw r30,r24
 8152 33f8 8081      		ld r24,Z
 8153 33fa 9181      		ldd r25,Z+1
 8154 33fc A281      		ldd r26,Z+2
 8155 33fe B381      		ldd r27,Z+3
 8156 3400 20E0      		ldi r18,0
 8157 3402 30E0      		ldi r19,0
 8158 3404 A901      		movw r20,r18
 8159 3406 BC01      		movw r22,r24
 8160 3408 CD01      		movw r24,r26
 8161 340a 0E94 0000 		call __eqsf2
 8162 340e 8823      		tst r24
 8163 3410 01F4      		brne .L308
1026:lp_solve_5.5/lp_SOS.c ****         nz++;
 8164               		.loc 1 1026 0
 8165 3412 8B81      		ldd r24,Y+3
 8166 3414 9C81      		ldd r25,Y+4
 8167 3416 0196      		adiw r24,1
 8168 3418 9C83      		std Y+4,r25
 8169 341a 8B83      		std Y+3,r24
 8170               	.L308:
1022:lp_solve_5.5/lp_SOS.c ****       if(list[n+i] == 0)
 8171               		.loc 1 1022 0 discriminator 2
 8172 341c 8981      		ldd r24,Y+1
 8173 341e 9A81      		ldd r25,Y+2
 8174 3420 0196      		adiw r24,1
 8175 3422 9A83      		std Y+2,r25
 8176 3424 8983      		std Y+1,r24
 8177               	.L305:
1022:lp_solve_5.5/lp_SOS.c ****       if(list[n+i] == 0)
 8178               		.loc 1 1022 0 is_stmt 0 discriminator 1
 8179 3426 2981      		ldd r18,Y+1
 8180 3428 3A81      		ldd r19,Y+2
 8181 342a 8F81      		ldd r24,Y+7
 8182 342c 9885      		ldd r25,Y+8
 8183 342e 8217      		cp r24,r18
 8184 3430 9307      		cpc r25,r19
 8185 3432 04F0      		brlt .+2
 8186 3434 00C0      		rjmp .L310
 8187 3436 00C0      		rjmp .L307
 8188               	.L328:
1024:lp_solve_5.5/lp_SOS.c ****         break;
 8189               		.loc 1 1024 0 is_stmt 1
 8190 3438 0000      		nop
 8191               	.L307:
1027:lp_solve_5.5/lp_SOS.c ****     }
1028:lp_solve_5.5/lp_SOS.c ****     if(nz == nn)
 8192               		.loc 1 1028 0
 8193 343a 2B81      		ldd r18,Y+3
 8194 343c 3C81      		ldd r19,Y+4
 8195 343e 8F81      		ldd r24,Y+7
 8196 3440 9885      		ldd r25,Y+8
 8197 3442 2817      		cp r18,r24
 8198 3444 3907      		cpc r19,r25
 8199 3446 01F4      		brne .L311
1029:lp_solve_5.5/lp_SOS.c ****       return(FALSE);
 8200               		.loc 1 1029 0
 8201 3448 80E0      		ldi r24,0
 8202 344a 00C0      		rjmp .L292
 8203               	.L311:
1030:lp_solve_5.5/lp_SOS.c **** 
1031:lp_solve_5.5/lp_SOS.c ****     /* Accept if the SOS is empty */
1032:lp_solve_5.5/lp_SOS.c ****     if(list[n+1] == 0)
 8204               		.loc 1 1032 0
 8205 344c 8985      		ldd r24,Y+9
 8206 344e 9A85      		ldd r25,Y+10
 8207 3450 0196      		adiw r24,1
 8208 3452 880F      		lsl r24
 8209 3454 991F      		rol r25
 8210 3456 2B85      		ldd r18,Y+11
 8211 3458 3C85      		ldd r19,Y+12
 8212 345a 820F      		add r24,r18
 8213 345c 931F      		adc r25,r19
 8214 345e FC01      		movw r30,r24
 8215 3460 8081      		ld r24,Z
 8216 3462 9181      		ldd r25,Z+1
 8217 3464 892B      		or r24,r25
 8218 3466 01F4      		brne .L312
1033:lp_solve_5.5/lp_SOS.c ****       return(TRUE);
 8219               		.loc 1 1033 0
 8220 3468 81E0      		ldi r24,lo8(1)
 8221 346a 00C0      		rjmp .L292
 8222               	.L312:
1034:lp_solve_5.5/lp_SOS.c **** 
1035:lp_solve_5.5/lp_SOS.c ****     /* Check if we can set variable active in SOS2..SOSn
1036:lp_solve_5.5/lp_SOS.c ****       (must check left and right neighbours if one variable is already active) */
1037:lp_solve_5.5/lp_SOS.c ****     if(nn > 1) {
 8223               		.loc 1 1037 0
 8224 346c 8F81      		ldd r24,Y+7
 8225 346e 9885      		ldd r25,Y+8
 8226 3470 0297      		sbiw r24,2
 8227 3472 04F4      		brge .+2
 8228 3474 00C0      		rjmp .L298
1038:lp_solve_5.5/lp_SOS.c **** 
1039:lp_solve_5.5/lp_SOS.c ****      /* Find the variable that was last activated;
1040:lp_solve_5.5/lp_SOS.c ****        Also check that the candidate variable is not already active */
1041:lp_solve_5.5/lp_SOS.c ****       for(i = 1; i <= nn; i++) {
 8229               		.loc 1 1041 0
 8230 3476 81E0      		ldi r24,lo8(1)
 8231 3478 90E0      		ldi r25,0
 8232 347a 9A83      		std Y+2,r25
 8233 347c 8983      		std Y+1,r24
 8234 347e 00C0      		rjmp .L313
 8235               	.L317:
1042:lp_solve_5.5/lp_SOS.c ****         if(list[n+i] == 0)
 8236               		.loc 1 1042 0
 8237 3480 2985      		ldd r18,Y+9
 8238 3482 3A85      		ldd r19,Y+10
 8239 3484 8981      		ldd r24,Y+1
 8240 3486 9A81      		ldd r25,Y+2
 8241 3488 820F      		add r24,r18
 8242 348a 931F      		adc r25,r19
 8243 348c 880F      		lsl r24
 8244 348e 991F      		rol r25
 8245 3490 2B85      		ldd r18,Y+11
 8246 3492 3C85      		ldd r19,Y+12
 8247 3494 820F      		add r24,r18
 8248 3496 931F      		adc r25,r19
 8249 3498 FC01      		movw r30,r24
 8250 349a 8081      		ld r24,Z
 8251 349c 9181      		ldd r25,Z+1
 8252 349e 892B      		or r24,r25
 8253 34a0 01F0      		breq .L329
1043:lp_solve_5.5/lp_SOS.c ****           break;
1044:lp_solve_5.5/lp_SOS.c ****         if(list[n+i] == column)
 8254               		.loc 1 1044 0
 8255 34a2 2985      		ldd r18,Y+9
 8256 34a4 3A85      		ldd r19,Y+10
 8257 34a6 8981      		ldd r24,Y+1
 8258 34a8 9A81      		ldd r25,Y+2
 8259 34aa 820F      		add r24,r18
 8260 34ac 931F      		adc r25,r19
 8261 34ae 880F      		lsl r24
 8262 34b0 991F      		rol r25
 8263 34b2 2B85      		ldd r18,Y+11
 8264 34b4 3C85      		ldd r19,Y+12
 8265 34b6 820F      		add r24,r18
 8266 34b8 931F      		adc r25,r19
 8267 34ba FC01      		movw r30,r24
 8268 34bc 2081      		ld r18,Z
 8269 34be 3181      		ldd r19,Z+1
 8270 34c0 8989      		ldd r24,Y+17
 8271 34c2 9A89      		ldd r25,Y+18
 8272 34c4 2817      		cp r18,r24
 8273 34c6 3907      		cpc r19,r25
 8274 34c8 01F4      		brne .L316
1045:lp_solve_5.5/lp_SOS.c ****           return(FALSE);
 8275               		.loc 1 1045 0
 8276 34ca 80E0      		ldi r24,0
 8277 34cc 00C0      		rjmp .L292
 8278               	.L316:
1041:lp_solve_5.5/lp_SOS.c ****         if(list[n+i] == 0)
 8279               		.loc 1 1041 0 discriminator 2
 8280 34ce 8981      		ldd r24,Y+1
 8281 34d0 9A81      		ldd r25,Y+2
 8282 34d2 0196      		adiw r24,1
 8283 34d4 9A83      		std Y+2,r25
 8284 34d6 8983      		std Y+1,r24
 8285               	.L313:
1041:lp_solve_5.5/lp_SOS.c ****         if(list[n+i] == 0)
 8286               		.loc 1 1041 0 is_stmt 0 discriminator 1
 8287 34d8 2981      		ldd r18,Y+1
 8288 34da 3A81      		ldd r19,Y+2
 8289 34dc 8F81      		ldd r24,Y+7
 8290 34de 9885      		ldd r25,Y+8
 8291 34e0 8217      		cp r24,r18
 8292 34e2 9307      		cpc r25,r19
 8293 34e4 04F4      		brge .L317
 8294 34e6 00C0      		rjmp .L315
 8295               	.L329:
1043:lp_solve_5.5/lp_SOS.c ****           break;
 8296               		.loc 1 1043 0 is_stmt 1
 8297 34e8 0000      		nop
 8298               	.L315:
1046:lp_solve_5.5/lp_SOS.c ****       }
1047:lp_solve_5.5/lp_SOS.c ****       i--;
 8299               		.loc 1 1047 0
 8300 34ea 8981      		ldd r24,Y+1
 8301 34ec 9A81      		ldd r25,Y+2
 8302 34ee 0197      		sbiw r24,1
 8303 34f0 9A83      		std Y+2,r25
 8304 34f2 8983      		std Y+1,r24
1048:lp_solve_5.5/lp_SOS.c ****       nn = list[n+i];
 8305               		.loc 1 1048 0
 8306 34f4 2985      		ldd r18,Y+9
 8307 34f6 3A85      		ldd r19,Y+10
 8308 34f8 8981      		ldd r24,Y+1
 8309 34fa 9A81      		ldd r25,Y+2
 8310 34fc 820F      		add r24,r18
 8311 34fe 931F      		adc r25,r19
 8312 3500 880F      		lsl r24
 8313 3502 991F      		rol r25
 8314 3504 2B85      		ldd r18,Y+11
 8315 3506 3C85      		ldd r19,Y+12
 8316 3508 820F      		add r24,r18
 8317 350a 931F      		adc r25,r19
 8318 350c FC01      		movw r30,r24
 8319 350e 8081      		ld r24,Z
 8320 3510 9181      		ldd r25,Z+1
 8321 3512 9887      		std Y+8,r25
 8322 3514 8F83      		std Y+7,r24
1049:lp_solve_5.5/lp_SOS.c **** 
1050:lp_solve_5.5/lp_SOS.c ****       /* SOS accepts an additional variable; confirm neighbourness of candidate;
1051:lp_solve_5.5/lp_SOS.c ****          Search for the SOS set index of the last activated variable */
1052:lp_solve_5.5/lp_SOS.c ****       n = list[0];
 8323               		.loc 1 1052 0
 8324 3516 8B85      		ldd r24,Y+11
 8325 3518 9C85      		ldd r25,Y+12
 8326 351a FC01      		movw r30,r24
 8327 351c 8081      		ld r24,Z
 8328 351e 9181      		ldd r25,Z+1
 8329 3520 9A87      		std Y+10,r25
 8330 3522 8987      		std Y+9,r24
1053:lp_solve_5.5/lp_SOS.c ****       for(i = 1; i <= n; i++)
 8331               		.loc 1 1053 0
 8332 3524 81E0      		ldi r24,lo8(1)
 8333 3526 90E0      		ldi r25,0
 8334 3528 9A83      		std Y+2,r25
 8335 352a 8983      		std Y+1,r24
 8336 352c 00C0      		rjmp .L318
 8337               	.L322:
1054:lp_solve_5.5/lp_SOS.c ****         if(abs(list[i]) == nn)
 8338               		.loc 1 1054 0
 8339 352e 8981      		ldd r24,Y+1
 8340 3530 9A81      		ldd r25,Y+2
 8341 3532 880F      		lsl r24
 8342 3534 991F      		rol r25
 8343 3536 2B85      		ldd r18,Y+11
 8344 3538 3C85      		ldd r19,Y+12
 8345 353a 820F      		add r24,r18
 8346 353c 931F      		adc r25,r19
 8347 353e FC01      		movw r30,r24
 8348 3540 8081      		ld r24,Z
 8349 3542 9181      		ldd r25,Z+1
 8350 3544 9923      		tst r25
 8351 3546 04F4      		brge .L319
 8352 3548 9195      		neg r25
 8353 354a 8195      		neg r24
 8354 354c 9109      		sbc r25,__zero_reg__
 8355               	.L319:
 8356 354e 9C01      		movw r18,r24
 8357 3550 8F81      		ldd r24,Y+7
 8358 3552 9885      		ldd r25,Y+8
 8359 3554 2817      		cp r18,r24
 8360 3556 3907      		cpc r19,r25
 8361 3558 01F0      		breq .L330
1053:lp_solve_5.5/lp_SOS.c ****       for(i = 1; i <= n; i++)
 8362               		.loc 1 1053 0 discriminator 2
 8363 355a 8981      		ldd r24,Y+1
 8364 355c 9A81      		ldd r25,Y+2
 8365 355e 0196      		adiw r24,1
 8366 3560 9A83      		std Y+2,r25
 8367 3562 8983      		std Y+1,r24
 8368               	.L318:
1053:lp_solve_5.5/lp_SOS.c ****       for(i = 1; i <= n; i++)
 8369               		.loc 1 1053 0 is_stmt 0 discriminator 1
 8370 3564 2981      		ldd r18,Y+1
 8371 3566 3A81      		ldd r19,Y+2
 8372 3568 8985      		ldd r24,Y+9
 8373 356a 9A85      		ldd r25,Y+10
 8374 356c 8217      		cp r24,r18
 8375 356e 9307      		cpc r25,r19
 8376 3570 04F4      		brge .L322
 8377 3572 00C0      		rjmp .L321
 8378               	.L330:
1055:lp_solve_5.5/lp_SOS.c ****           break;
 8379               		.loc 1 1055 0 is_stmt 1
 8380 3574 0000      		nop
 8381               	.L321:
1056:lp_solve_5.5/lp_SOS.c ****       if(i > n) {
 8382               		.loc 1 1056 0
 8383 3576 2981      		ldd r18,Y+1
 8384 3578 3A81      		ldd r19,Y+2
 8385 357a 8985      		ldd r24,Y+9
 8386 357c 9A85      		ldd r25,Y+10
 8387 357e 8217      		cp r24,r18
 8388 3580 9307      		cpc r25,r19
 8389 3582 04F4      		brge .L323
1057:lp_solve_5.5/lp_SOS.c ****         report(lp, CRITICAL, "SOS_can_activate: Internal index error at SOS %d\n", sosindex);
 8390               		.loc 1 1057 0
 8391 3584 8889      		ldd r24,Y+16
 8392 3586 8F93      		push r24
 8393 3588 8F85      		ldd r24,Y+15
 8394 358a 8F93      		push r24
 8395 358c 80E0      		ldi r24,lo8(.LC2)
 8396 358e 90E0      		ldi r25,hi8(.LC2)
 8397 3590 892F      		mov r24,r25
 8398 3592 8F93      		push r24
 8399 3594 80E0      		ldi r24,lo8(.LC2)
 8400 3596 90E0      		ldi r25,hi8(.LC2)
 8401 3598 8F93      		push r24
 8402 359a 1F92      		push __zero_reg__
 8403 359c 81E0      		ldi r24,lo8(1)
 8404 359e 8F93      		push r24
 8405 35a0 8E81      		ldd r24,Y+6
 8406 35a2 8F93      		push r24
 8407 35a4 8D81      		ldd r24,Y+5
 8408 35a6 8F93      		push r24
 8409 35a8 0E94 0000 		call report
 8410 35ac 8DB7      		in r24,__SP_L__
 8411 35ae 9EB7      		in r25,__SP_H__
 8412 35b0 0896      		adiw r24,8
 8413 35b2 0FB6      		in __tmp_reg__,__SREG__
 8414 35b4 F894      		cli
 8415 35b6 DEBF      		out __SP_H__,r29
 8416 35b8 0FBE      		out __SREG__,__tmp_reg__
 8417 35ba CDBF      		out __SP_L__,r28
1058:lp_solve_5.5/lp_SOS.c ****         return(FALSE);
 8418               		.loc 1 1058 0
 8419 35bc 80E0      		ldi r24,0
 8420 35be 00C0      		rjmp .L292
 8421               	.L323:
1059:lp_solve_5.5/lp_SOS.c ****       }
1060:lp_solve_5.5/lp_SOS.c **** 
1061:lp_solve_5.5/lp_SOS.c ****       /* SOS accepts an additional variable; confirm neighbourness of candidate */
1062:lp_solve_5.5/lp_SOS.c **** 
1063:lp_solve_5.5/lp_SOS.c ****       /* Check left neighbour */
1064:lp_solve_5.5/lp_SOS.c ****       if((i > 1) && (list[i-1] == column))
 8422               		.loc 1 1064 0
 8423 35c0 8981      		ldd r24,Y+1
 8424 35c2 9A81      		ldd r25,Y+2
 8425 35c4 0297      		sbiw r24,2
 8426 35c6 04F0      		brlt .L324
 8427               		.loc 1 1064 0 is_stmt 0 discriminator 1
 8428 35c8 8981      		ldd r24,Y+1
 8429 35ca 9A81      		ldd r25,Y+2
 8430 35cc 8150      		subi r24,1
 8431 35ce 9048      		sbci r25,-128
 8432 35d0 880F      		lsl r24
 8433 35d2 991F      		rol r25
 8434 35d4 2B85      		ldd r18,Y+11
 8435 35d6 3C85      		ldd r19,Y+12
 8436 35d8 820F      		add r24,r18
 8437 35da 931F      		adc r25,r19
 8438 35dc FC01      		movw r30,r24
 8439 35de 2081      		ld r18,Z
 8440 35e0 3181      		ldd r19,Z+1
 8441 35e2 8989      		ldd r24,Y+17
 8442 35e4 9A89      		ldd r25,Y+18
 8443 35e6 2817      		cp r18,r24
 8444 35e8 3907      		cpc r19,r25
 8445 35ea 01F4      		brne .L324
1065:lp_solve_5.5/lp_SOS.c ****         return(TRUE);
 8446               		.loc 1 1065 0 is_stmt 1
 8447 35ec 81E0      		ldi r24,lo8(1)
 8448 35ee 00C0      		rjmp .L292
 8449               	.L324:
1066:lp_solve_5.5/lp_SOS.c ****       /* Check right neighbour */
1067:lp_solve_5.5/lp_SOS.c ****       if((i < n) && (list[i+1] == column))
 8450               		.loc 1 1067 0
 8451 35f0 2981      		ldd r18,Y+1
 8452 35f2 3A81      		ldd r19,Y+2
 8453 35f4 8985      		ldd r24,Y+9
 8454 35f6 9A85      		ldd r25,Y+10
 8455 35f8 2817      		cp r18,r24
 8456 35fa 3907      		cpc r19,r25
 8457 35fc 04F4      		brge .L325
 8458               		.loc 1 1067 0 is_stmt 0 discriminator 1
 8459 35fe 8981      		ldd r24,Y+1
 8460 3600 9A81      		ldd r25,Y+2
 8461 3602 0196      		adiw r24,1
 8462 3604 880F      		lsl r24
 8463 3606 991F      		rol r25
 8464 3608 2B85      		ldd r18,Y+11
 8465 360a 3C85      		ldd r19,Y+12
 8466 360c 820F      		add r24,r18
 8467 360e 931F      		adc r25,r19
 8468 3610 FC01      		movw r30,r24
 8469 3612 2081      		ld r18,Z
 8470 3614 3181      		ldd r19,Z+1
 8471 3616 8989      		ldd r24,Y+17
 8472 3618 9A89      		ldd r25,Y+18
 8473 361a 2817      		cp r18,r24
 8474 361c 3907      		cpc r19,r25
 8475 361e 01F4      		brne .L325
1068:lp_solve_5.5/lp_SOS.c ****         return(TRUE);
 8476               		.loc 1 1068 0 is_stmt 1
 8477 3620 81E0      		ldi r24,lo8(1)
 8478 3622 00C0      		rjmp .L292
 8479               	.L325:
1069:lp_solve_5.5/lp_SOS.c **** 
1070:lp_solve_5.5/lp_SOS.c ****       /* It is not the right neighbour; return false */
1071:lp_solve_5.5/lp_SOS.c ****       return(FALSE);
 8480               		.loc 1 1071 0
 8481 3624 80E0      		ldi r24,0
 8482 3626 00C0      		rjmp .L292
 8483               	.L298:
1072:lp_solve_5.5/lp_SOS.c ****     }
1073:lp_solve_5.5/lp_SOS.c ****   }
1074:lp_solve_5.5/lp_SOS.c ****   return(TRUE);
 8484               		.loc 1 1074 0
 8485 3628 81E0      		ldi r24,lo8(1)
 8486               	.L292:
 8487               	/* epilogue start */
1075:lp_solve_5.5/lp_SOS.c **** }
 8488               		.loc 1 1075 0
 8489 362a 6296      		adiw r28,18
 8490 362c 0FB6      		in __tmp_reg__,__SREG__
 8491 362e F894      		cli
 8492 3630 DEBF      		out __SP_H__,r29
 8493 3632 0FBE      		out __SREG__,__tmp_reg__
 8494 3634 CDBF      		out __SP_L__,r28
 8495 3636 DF91      		pop r29
 8496 3638 CF91      		pop r28
 8497 363a 0895      		ret
 8498               		.cfi_endproc
 8499               	.LFE33:
 8501               	.global	SOS_set_marked
 8503               	SOS_set_marked:
 8504               	.LFB34:
1076:lp_solve_5.5/lp_SOS.c **** 
1077:lp_solve_5.5/lp_SOS.c **** 
1078:lp_solve_5.5/lp_SOS.c **** MYBOOL SOS_set_marked(SOSgroup *group, int sosindex, int column, MYBOOL asactive)
1079:lp_solve_5.5/lp_SOS.c **** {
 8505               		.loc 1 1079 0
 8506               		.cfi_startproc
 8507 363c CF93      		push r28
 8508               	.LCFI126:
 8509               		.cfi_def_cfa_offset 3
 8510               		.cfi_offset 28, -2
 8511 363e DF93      		push r29
 8512               	.LCFI127:
 8513               		.cfi_def_cfa_offset 4
 8514               		.cfi_offset 29, -3
 8515 3640 CDB7      		in r28,__SP_L__
 8516 3642 DEB7      		in r29,__SP_H__
 8517               	.LCFI128:
 8518               		.cfi_def_cfa_register 28
 8519 3644 6197      		sbiw r28,17
 8520               	.LCFI129:
 8521               		.cfi_def_cfa_offset 21
 8522 3646 0FB6      		in __tmp_reg__,__SREG__
 8523 3648 F894      		cli
 8524 364a DEBF      		out __SP_H__,r29
 8525 364c 0FBE      		out __SREG__,__tmp_reg__
 8526 364e CDBF      		out __SP_L__,r28
 8527               	/* prologue: function */
 8528               	/* frame size = 17 */
 8529               	/* stack size = 19 */
 8530               	.L__stack_usage = 19
 8531 3650 9C87      		std Y+12,r25
 8532 3652 8B87      		std Y+11,r24
 8533 3654 7E87      		std Y+14,r23
 8534 3656 6D87      		std Y+13,r22
 8535 3658 588B      		std Y+16,r21
 8536 365a 4F87      		std Y+15,r20
 8537 365c 298B      		std Y+17,r18
1080:lp_solve_5.5/lp_SOS.c ****   int    i, n, nn, *list;
1081:lp_solve_5.5/lp_SOS.c ****   lprec  *lp = group->lp;
 8538               		.loc 1 1081 0
 8539 365e 8B85      		ldd r24,Y+11
 8540 3660 9C85      		ldd r25,Y+12
 8541 3662 FC01      		movw r30,r24
 8542 3664 8081      		ld r24,Z
 8543 3666 9181      		ldd r25,Z+1
 8544 3668 9E83      		std Y+6,r25
 8545 366a 8D83      		std Y+5,r24
1082:lp_solve_5.5/lp_SOS.c **** 
1083:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
1084:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
1085:lp_solve_5.5/lp_SOS.c ****     report(lp, IMPORTANT, "SOS_set_marked: Invalid SOS index %d\n", sosindex);
1086:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
1087:lp_solve_5.5/lp_SOS.c ****   }
1088:lp_solve_5.5/lp_SOS.c **** #endif
1089:lp_solve_5.5/lp_SOS.c **** 
1090:lp_solve_5.5/lp_SOS.c ****   if(!(lp->var_type[column] & (ISSOS | ISGUB)))
 8546               		.loc 1 1090 0
 8547 366c 8D81      		ldd r24,Y+5
 8548 366e 9E81      		ldd r25,Y+6
 8549 3670 8A57      		subi r24,122
 8550 3672 9D4F      		sbci r25,-3
 8551 3674 FC01      		movw r30,r24
 8552 3676 2081      		ld r18,Z
 8553 3678 3181      		ldd r19,Z+1
 8554 367a 8F85      		ldd r24,Y+15
 8555 367c 9889      		ldd r25,Y+16
 8556 367e 820F      		add r24,r18
 8557 3680 931F      		adc r25,r19
 8558 3682 FC01      		movw r30,r24
 8559 3684 8081      		ld r24,Z
 8560 3686 882F      		mov r24,r24
 8561 3688 90E0      		ldi r25,0
 8562 368a 8471      		andi r24,20
 8563 368c 9927      		clr r25
 8564 368e 892B      		or r24,r25
 8565 3690 01F4      		brne .L332
1091:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 8566               		.loc 1 1091 0
 8567 3692 80E0      		ldi r24,0
 8568 3694 00C0      		rjmp .L333
 8569               	.L332:
1092:lp_solve_5.5/lp_SOS.c **** 
1093:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0) {
 8570               		.loc 1 1093 0
 8571 3696 8D85      		ldd r24,Y+13
 8572 3698 9E85      		ldd r25,Y+14
 8573 369a 892B      		or r24,r25
 8574 369c 01F0      		breq .+2
 8575 369e 00C0      		rjmp .L334
1094:lp_solve_5.5/lp_SOS.c **** 
1095:lp_solve_5.5/lp_SOS.c ****    /* Define an IBM-"SOS3" member variable temporarily as integer, if it is
1096:lp_solve_5.5/lp_SOS.c ****       not already a permanent integer; is reset in SOS_unmark */
1097:lp_solve_5.5/lp_SOS.c ****     if(asactive && !is_int(lp, column) && SOS_is_member_of_type(group, column, SOS3)) {
 8576               		.loc 1 1097 0
 8577 36a0 8989      		ldd r24,Y+17
 8578 36a2 8823      		tst r24
 8579 36a4 01F0      		breq .L335
 8580               		.loc 1 1097 0 is_stmt 0 discriminator 1
 8581 36a6 2F85      		ldd r18,Y+15
 8582 36a8 3889      		ldd r19,Y+16
 8583 36aa 8D81      		ldd r24,Y+5
 8584 36ac 9E81      		ldd r25,Y+6
 8585 36ae B901      		movw r22,r18
 8586 36b0 0E94 0000 		call is_int
 8587 36b4 8823      		tst r24
 8588 36b6 01F4      		brne .L335
 8589               		.loc 1 1097 0 discriminator 2
 8590 36b8 2F85      		ldd r18,Y+15
 8591 36ba 3889      		ldd r19,Y+16
 8592 36bc 8B85      		ldd r24,Y+11
 8593 36be 9C85      		ldd r25,Y+12
 8594 36c0 4FEF      		ldi r20,lo8(-1)
 8595 36c2 5FEF      		ldi r21,lo8(-1)
 8596 36c4 B901      		movw r22,r18
 8597 36c6 0E94 0000 		call SOS_is_member_of_type
 8598 36ca 8823      		tst r24
 8599 36cc 01F0      		breq .L335
1098:lp_solve_5.5/lp_SOS.c ****       lp->var_type[column] |= ISSOSTEMPINT;
 8600               		.loc 1 1098 0 is_stmt 1
 8601 36ce 8D81      		ldd r24,Y+5
 8602 36d0 9E81      		ldd r25,Y+6
 8603 36d2 8A57      		subi r24,122
 8604 36d4 9D4F      		sbci r25,-3
 8605 36d6 FC01      		movw r30,r24
 8606 36d8 2081      		ld r18,Z
 8607 36da 3181      		ldd r19,Z+1
 8608 36dc 8F85      		ldd r24,Y+15
 8609 36de 9889      		ldd r25,Y+16
 8610 36e0 820F      		add r24,r18
 8611 36e2 931F      		adc r25,r19
 8612 36e4 2D81      		ldd r18,Y+5
 8613 36e6 3E81      		ldd r19,Y+6
 8614 36e8 2A57      		subi r18,122
 8615 36ea 3D4F      		sbci r19,-3
 8616 36ec F901      		movw r30,r18
 8617 36ee 4081      		ld r20,Z
 8618 36f0 5181      		ldd r21,Z+1
 8619 36f2 2F85      		ldd r18,Y+15
 8620 36f4 3889      		ldd r19,Y+16
 8621 36f6 240F      		add r18,r20
 8622 36f8 351F      		adc r19,r21
 8623 36fa F901      		movw r30,r18
 8624 36fc 2081      		ld r18,Z
 8625 36fe 2860      		ori r18,lo8(8)
 8626 3700 FC01      		movw r30,r24
 8627 3702 2083      		st Z,r18
1099:lp_solve_5.5/lp_SOS.c ****       set_int(lp, column, TRUE);
 8628               		.loc 1 1099 0
 8629 3704 2F85      		ldd r18,Y+15
 8630 3706 3889      		ldd r19,Y+16
 8631 3708 8D81      		ldd r24,Y+5
 8632 370a 9E81      		ldd r25,Y+6
 8633 370c 41E0      		ldi r20,lo8(1)
 8634 370e B901      		movw r22,r18
 8635 3710 0E94 0000 		call set_int
 8636               	.L335:
1100:lp_solve_5.5/lp_SOS.c ****     }
1101:lp_solve_5.5/lp_SOS.c **** 
1102:lp_solve_5.5/lp_SOS.c ****     nn = 0;
 8637               		.loc 1 1102 0
 8638 3714 1C82      		std Y+4,__zero_reg__
 8639 3716 1B82      		std Y+3,__zero_reg__
1103:lp_solve_5.5/lp_SOS.c ****     for(i = group->memberpos[column-1]; i < group->memberpos[column]; i++) {
 8640               		.loc 1 1103 0
 8641 3718 8B85      		ldd r24,Y+11
 8642 371a 9C85      		ldd r25,Y+12
 8643 371c FC01      		movw r30,r24
 8644 371e 2685      		ldd r18,Z+14
 8645 3720 3785      		ldd r19,Z+15
 8646 3722 8F85      		ldd r24,Y+15
 8647 3724 9889      		ldd r25,Y+16
 8648 3726 8150      		subi r24,1
 8649 3728 9048      		sbci r25,-128
 8650 372a 880F      		lsl r24
 8651 372c 991F      		rol r25
 8652 372e 820F      		add r24,r18
 8653 3730 931F      		adc r25,r19
 8654 3732 FC01      		movw r30,r24
 8655 3734 8081      		ld r24,Z
 8656 3736 9181      		ldd r25,Z+1
 8657 3738 9A83      		std Y+2,r25
 8658 373a 8983      		std Y+1,r24
 8659 373c 00C0      		rjmp .L336
 8660               	.L338:
1104:lp_solve_5.5/lp_SOS.c ****       n = group->membership[i];
 8661               		.loc 1 1104 0
 8662 373e 8B85      		ldd r24,Y+11
 8663 3740 9C85      		ldd r25,Y+12
 8664 3742 FC01      		movw r30,r24
 8665 3744 2485      		ldd r18,Z+12
 8666 3746 3585      		ldd r19,Z+13
 8667 3748 8981      		ldd r24,Y+1
 8668 374a 9A81      		ldd r25,Y+2
 8669 374c 880F      		lsl r24
 8670 374e 991F      		rol r25
 8671 3750 820F      		add r24,r18
 8672 3752 931F      		adc r25,r19
 8673 3754 FC01      		movw r30,r24
 8674 3756 8081      		ld r24,Z
 8675 3758 9181      		ldd r25,Z+1
 8676 375a 9887      		std Y+8,r25
 8677 375c 8F83      		std Y+7,r24
1105:lp_solve_5.5/lp_SOS.c ****       if(SOS_set_marked(group, n, column, asactive))
 8678               		.loc 1 1105 0
 8679 375e 4F85      		ldd r20,Y+15
 8680 3760 5889      		ldd r21,Y+16
 8681 3762 6F81      		ldd r22,Y+7
 8682 3764 7885      		ldd r23,Y+8
 8683 3766 8B85      		ldd r24,Y+11
 8684 3768 9C85      		ldd r25,Y+12
 8685 376a 2989      		ldd r18,Y+17
 8686 376c 0E94 0000 		call SOS_set_marked
 8687 3770 8823      		tst r24
 8688 3772 01F0      		breq .L337
1106:lp_solve_5.5/lp_SOS.c ****         nn++;
 8689               		.loc 1 1106 0
 8690 3774 8B81      		ldd r24,Y+3
 8691 3776 9C81      		ldd r25,Y+4
 8692 3778 0196      		adiw r24,1
 8693 377a 9C83      		std Y+4,r25
 8694 377c 8B83      		std Y+3,r24
 8695               	.L337:
1103:lp_solve_5.5/lp_SOS.c ****       n = group->membership[i];
 8696               		.loc 1 1103 0 discriminator 2
 8697 377e 8981      		ldd r24,Y+1
 8698 3780 9A81      		ldd r25,Y+2
 8699 3782 0196      		adiw r24,1
 8700 3784 9A83      		std Y+2,r25
 8701 3786 8983      		std Y+1,r24
 8702               	.L336:
1103:lp_solve_5.5/lp_SOS.c ****       n = group->membership[i];
 8703               		.loc 1 1103 0 is_stmt 0 discriminator 1
 8704 3788 8B85      		ldd r24,Y+11
 8705 378a 9C85      		ldd r25,Y+12
 8706 378c FC01      		movw r30,r24
 8707 378e 2685      		ldd r18,Z+14
 8708 3790 3785      		ldd r19,Z+15
 8709 3792 8F85      		ldd r24,Y+15
 8710 3794 9889      		ldd r25,Y+16
 8711 3796 880F      		lsl r24
 8712 3798 991F      		rol r25
 8713 379a 820F      		add r24,r18
 8714 379c 931F      		adc r25,r19
 8715 379e FC01      		movw r30,r24
 8716 37a0 2081      		ld r18,Z
 8717 37a2 3181      		ldd r19,Z+1
 8718 37a4 8981      		ldd r24,Y+1
 8719 37a6 9A81      		ldd r25,Y+2
 8720 37a8 8217      		cp r24,r18
 8721 37aa 9307      		cpc r25,r19
 8722 37ac 04F0      		brlt .L338
1107:lp_solve_5.5/lp_SOS.c ****     }
1108:lp_solve_5.5/lp_SOS.c ****     return((MYBOOL) (nn == group->sos_count));
 8723               		.loc 1 1108 0 is_stmt 1
 8724 37ae 8B85      		ldd r24,Y+11
 8725 37b0 9C85      		ldd r25,Y+12
 8726 37b2 FC01      		movw r30,r24
 8727 37b4 2681      		ldd r18,Z+6
 8728 37b6 3781      		ldd r19,Z+7
 8729 37b8 41E0      		ldi r20,lo8(1)
 8730 37ba 8B81      		ldd r24,Y+3
 8731 37bc 9C81      		ldd r25,Y+4
 8732 37be 2817      		cp r18,r24
 8733 37c0 3907      		cpc r19,r25
 8734 37c2 01F0      		breq .L339
 8735 37c4 40E0      		ldi r20,0
 8736               	.L339:
 8737 37c6 842F      		mov r24,r20
 8738 37c8 00C0      		rjmp .L333
 8739               	.L334:
1109:lp_solve_5.5/lp_SOS.c ****   }
1110:lp_solve_5.5/lp_SOS.c ****   else {
1111:lp_solve_5.5/lp_SOS.c ****     list = group->sos_list[sosindex-1]->members;
 8740               		.loc 1 1111 0
 8741 37ca 8B85      		ldd r24,Y+11
 8742 37cc 9C85      		ldd r25,Y+12
 8743 37ce FC01      		movw r30,r24
 8744 37d0 2281      		ldd r18,Z+2
 8745 37d2 3381      		ldd r19,Z+3
 8746 37d4 8D85      		ldd r24,Y+13
 8747 37d6 9E85      		ldd r25,Y+14
 8748 37d8 8150      		subi r24,1
 8749 37da 9048      		sbci r25,-128
 8750 37dc 880F      		lsl r24
 8751 37de 991F      		rol r25
 8752 37e0 820F      		add r24,r18
 8753 37e2 931F      		adc r25,r19
 8754 37e4 FC01      		movw r30,r24
 8755 37e6 8081      		ld r24,Z
 8756 37e8 9181      		ldd r25,Z+1
 8757 37ea FC01      		movw r30,r24
 8758 37ec 8585      		ldd r24,Z+13
 8759 37ee 9685      		ldd r25,Z+14
 8760 37f0 9A87      		std Y+10,r25
 8761 37f2 8987      		std Y+9,r24
1112:lp_solve_5.5/lp_SOS.c ****     n = list[0]+1;
 8762               		.loc 1 1112 0
 8763 37f4 8985      		ldd r24,Y+9
 8764 37f6 9A85      		ldd r25,Y+10
 8765 37f8 FC01      		movw r30,r24
 8766 37fa 8081      		ld r24,Z
 8767 37fc 9181      		ldd r25,Z+1
 8768 37fe 0196      		adiw r24,1
 8769 3800 9887      		std Y+8,r25
 8770 3802 8F83      		std Y+7,r24
1113:lp_solve_5.5/lp_SOS.c ****     nn = list[n];
 8771               		.loc 1 1113 0
 8772 3804 8F81      		ldd r24,Y+7
 8773 3806 9885      		ldd r25,Y+8
 8774 3808 880F      		lsl r24
 8775 380a 991F      		rol r25
 8776 380c 2985      		ldd r18,Y+9
 8777 380e 3A85      		ldd r19,Y+10
 8778 3810 820F      		add r24,r18
 8779 3812 931F      		adc r25,r19
 8780 3814 FC01      		movw r30,r24
 8781 3816 8081      		ld r24,Z
 8782 3818 9181      		ldd r25,Z+1
 8783 381a 9C83      		std Y+4,r25
 8784 381c 8B83      		std Y+3,r24
1114:lp_solve_5.5/lp_SOS.c **** 
1115:lp_solve_5.5/lp_SOS.c ****    /* Search for the variable */
1116:lp_solve_5.5/lp_SOS.c ****     i = SOS_member_index(group, sosindex, column);
 8785               		.loc 1 1116 0
 8786 381e 4F85      		ldd r20,Y+15
 8787 3820 5889      		ldd r21,Y+16
 8788 3822 2D85      		ldd r18,Y+13
 8789 3824 3E85      		ldd r19,Y+14
 8790 3826 8B85      		ldd r24,Y+11
 8791 3828 9C85      		ldd r25,Y+12
 8792 382a B901      		movw r22,r18
 8793 382c 0E94 0000 		call SOS_member_index
 8794 3830 9A83      		std Y+2,r25
 8795 3832 8983      		std Y+1,r24
1117:lp_solve_5.5/lp_SOS.c **** 
1118:lp_solve_5.5/lp_SOS.c ****    /* First mark active in the set member list as used */
1119:lp_solve_5.5/lp_SOS.c ****     if((i > 0) && (list[i] > 0))
 8796               		.loc 1 1119 0
 8797 3834 8981      		ldd r24,Y+1
 8798 3836 9A81      		ldd r25,Y+2
 8799 3838 1816      		cp __zero_reg__,r24
 8800 383a 1906      		cpc __zero_reg__,r25
 8801 383c 04F4      		brge .L340
 8802               		.loc 1 1119 0 is_stmt 0 discriminator 1
 8803 383e 8981      		ldd r24,Y+1
 8804 3840 9A81      		ldd r25,Y+2
 8805 3842 880F      		lsl r24
 8806 3844 991F      		rol r25
 8807 3846 2985      		ldd r18,Y+9
 8808 3848 3A85      		ldd r19,Y+10
 8809 384a 820F      		add r24,r18
 8810 384c 931F      		adc r25,r19
 8811 384e FC01      		movw r30,r24
 8812 3850 8081      		ld r24,Z
 8813 3852 9181      		ldd r25,Z+1
 8814 3854 1816      		cp __zero_reg__,r24
 8815 3856 1906      		cpc __zero_reg__,r25
 8816 3858 04F4      		brge .L340
1120:lp_solve_5.5/lp_SOS.c ****       list[i] *= -1;
 8817               		.loc 1 1120 0 is_stmt 1
 8818 385a 8981      		ldd r24,Y+1
 8819 385c 9A81      		ldd r25,Y+2
 8820 385e 880F      		lsl r24
 8821 3860 991F      		rol r25
 8822 3862 2985      		ldd r18,Y+9
 8823 3864 3A85      		ldd r19,Y+10
 8824 3866 820F      		add r24,r18
 8825 3868 931F      		adc r25,r19
 8826 386a 2981      		ldd r18,Y+1
 8827 386c 3A81      		ldd r19,Y+2
 8828 386e 220F      		lsl r18
 8829 3870 331F      		rol r19
 8830 3872 4985      		ldd r20,Y+9
 8831 3874 5A85      		ldd r21,Y+10
 8832 3876 240F      		add r18,r20
 8833 3878 351F      		adc r19,r21
 8834 387a F901      		movw r30,r18
 8835 387c 2081      		ld r18,Z
 8836 387e 3181      		ldd r19,Z+1
 8837 3880 3195      		neg r19
 8838 3882 2195      		neg r18
 8839 3884 3109      		sbc r19,__zero_reg__
 8840 3886 FC01      		movw r30,r24
 8841 3888 3183      		std Z+1,r19
 8842 388a 2083      		st Z,r18
1121:lp_solve_5.5/lp_SOS.c ****     else
1122:lp_solve_5.5/lp_SOS.c ****       return(TRUE);
1123:lp_solve_5.5/lp_SOS.c **** 
1124:lp_solve_5.5/lp_SOS.c ****    /* Then move the variable to the live list */
1125:lp_solve_5.5/lp_SOS.c ****     if(asactive) {
 8843               		.loc 1 1125 0
 8844 388c 8989      		ldd r24,Y+17
 8845 388e 8823      		tst r24
 8846 3890 01F4      		brne .L341
 8847 3892 00C0      		rjmp .L342
 8848               	.L340:
1122:lp_solve_5.5/lp_SOS.c **** 
 8849               		.loc 1 1122 0
 8850 3894 81E0      		ldi r24,lo8(1)
 8851 3896 00C0      		rjmp .L333
 8852               	.L341:
1126:lp_solve_5.5/lp_SOS.c ****       for(i = 1; i <= nn; i++) {
 8853               		.loc 1 1126 0
 8854 3898 81E0      		ldi r24,lo8(1)
 8855 389a 90E0      		ldi r25,0
 8856 389c 9A83      		std Y+2,r25
 8857 389e 8983      		std Y+1,r24
 8858 38a0 00C0      		rjmp .L343
 8859               	.L346:
1127:lp_solve_5.5/lp_SOS.c ****         if(list[n+i] == column)
 8860               		.loc 1 1127 0
 8861 38a2 2F81      		ldd r18,Y+7
 8862 38a4 3885      		ldd r19,Y+8
 8863 38a6 8981      		ldd r24,Y+1
 8864 38a8 9A81      		ldd r25,Y+2
 8865 38aa 820F      		add r24,r18
 8866 38ac 931F      		adc r25,r19
 8867 38ae 880F      		lsl r24
 8868 38b0 991F      		rol r25
 8869 38b2 2985      		ldd r18,Y+9
 8870 38b4 3A85      		ldd r19,Y+10
 8871 38b6 820F      		add r24,r18
 8872 38b8 931F      		adc r25,r19
 8873 38ba FC01      		movw r30,r24
 8874 38bc 2081      		ld r18,Z
 8875 38be 3181      		ldd r19,Z+1
 8876 38c0 8F85      		ldd r24,Y+15
 8877 38c2 9889      		ldd r25,Y+16
 8878 38c4 2817      		cp r18,r24
 8879 38c6 3907      		cpc r19,r25
 8880 38c8 01F4      		brne .L344
1128:lp_solve_5.5/lp_SOS.c ****           return(FALSE);
 8881               		.loc 1 1128 0
 8882 38ca 80E0      		ldi r24,0
 8883 38cc 00C0      		rjmp .L333
 8884               	.L344:
1129:lp_solve_5.5/lp_SOS.c ****         else if(list[n+i] == 0) {
 8885               		.loc 1 1129 0
 8886 38ce 2F81      		ldd r18,Y+7
 8887 38d0 3885      		ldd r19,Y+8
 8888 38d2 8981      		ldd r24,Y+1
 8889 38d4 9A81      		ldd r25,Y+2
 8890 38d6 820F      		add r24,r18
 8891 38d8 931F      		adc r25,r19
 8892 38da 880F      		lsl r24
 8893 38dc 991F      		rol r25
 8894 38de 2985      		ldd r18,Y+9
 8895 38e0 3A85      		ldd r19,Y+10
 8896 38e2 820F      		add r24,r18
 8897 38e4 931F      		adc r25,r19
 8898 38e6 FC01      		movw r30,r24
 8899 38e8 8081      		ld r24,Z
 8900 38ea 9181      		ldd r25,Z+1
 8901 38ec 892B      		or r24,r25
 8902 38ee 01F4      		brne .L345
1130:lp_solve_5.5/lp_SOS.c ****           list[n+i] = column;
 8903               		.loc 1 1130 0
 8904 38f0 2F81      		ldd r18,Y+7
 8905 38f2 3885      		ldd r19,Y+8
 8906 38f4 8981      		ldd r24,Y+1
 8907 38f6 9A81      		ldd r25,Y+2
 8908 38f8 820F      		add r24,r18
 8909 38fa 931F      		adc r25,r19
 8910 38fc 880F      		lsl r24
 8911 38fe 991F      		rol r25
 8912 3900 2985      		ldd r18,Y+9
 8913 3902 3A85      		ldd r19,Y+10
 8914 3904 820F      		add r24,r18
 8915 3906 931F      		adc r25,r19
 8916 3908 2F85      		ldd r18,Y+15
 8917 390a 3889      		ldd r19,Y+16
 8918 390c FC01      		movw r30,r24
 8919 390e 3183      		std Z+1,r19
 8920 3910 2083      		st Z,r18
1131:lp_solve_5.5/lp_SOS.c ****           return(FALSE);
 8921               		.loc 1 1131 0
 8922 3912 80E0      		ldi r24,0
 8923 3914 00C0      		rjmp .L333
 8924               	.L345:
1126:lp_solve_5.5/lp_SOS.c ****         if(list[n+i] == column)
 8925               		.loc 1 1126 0 discriminator 2
 8926 3916 8981      		ldd r24,Y+1
 8927 3918 9A81      		ldd r25,Y+2
 8928 391a 0196      		adiw r24,1
 8929 391c 9A83      		std Y+2,r25
 8930 391e 8983      		std Y+1,r24
 8931               	.L343:
1126:lp_solve_5.5/lp_SOS.c ****         if(list[n+i] == column)
 8932               		.loc 1 1126 0 is_stmt 0 discriminator 1
 8933 3920 2981      		ldd r18,Y+1
 8934 3922 3A81      		ldd r19,Y+2
 8935 3924 8B81      		ldd r24,Y+3
 8936 3926 9C81      		ldd r25,Y+4
 8937 3928 8217      		cp r24,r18
 8938 392a 9307      		cpc r25,r19
 8939 392c 04F0      		brlt .+2
 8940 392e 00C0      		rjmp .L346
 8941               	.L342:
1132:lp_solve_5.5/lp_SOS.c ****         }
1133:lp_solve_5.5/lp_SOS.c ****       }
1134:lp_solve_5.5/lp_SOS.c ****     }
1135:lp_solve_5.5/lp_SOS.c ****     return(TRUE);
 8942               		.loc 1 1135 0 is_stmt 1
 8943 3930 81E0      		ldi r24,lo8(1)
 8944               	.L333:
 8945               	/* epilogue start */
1136:lp_solve_5.5/lp_SOS.c ****   }
1137:lp_solve_5.5/lp_SOS.c **** }
 8946               		.loc 1 1137 0
 8947 3932 6196      		adiw r28,17
 8948 3934 0FB6      		in __tmp_reg__,__SREG__
 8949 3936 F894      		cli
 8950 3938 DEBF      		out __SP_H__,r29
 8951 393a 0FBE      		out __SREG__,__tmp_reg__
 8952 393c CDBF      		out __SP_L__,r28
 8953 393e DF91      		pop r29
 8954 3940 CF91      		pop r28
 8955 3942 0895      		ret
 8956               		.cfi_endproc
 8957               	.LFE34:
 8959               	.global	SOS_unmark
 8961               	SOS_unmark:
 8962               	.LFB35:
1138:lp_solve_5.5/lp_SOS.c **** 
1139:lp_solve_5.5/lp_SOS.c **** 
1140:lp_solve_5.5/lp_SOS.c **** MYBOOL SOS_unmark(SOSgroup *group, int sosindex, int column)
1141:lp_solve_5.5/lp_SOS.c **** {
 8963               		.loc 1 1141 0
 8964               		.cfi_startproc
 8965 3944 CF93      		push r28
 8966               	.LCFI130:
 8967               		.cfi_def_cfa_offset 3
 8968               		.cfi_offset 28, -2
 8969 3946 DF93      		push r29
 8970               	.LCFI131:
 8971               		.cfi_def_cfa_offset 4
 8972               		.cfi_offset 29, -3
 8973 3948 CDB7      		in r28,__SP_L__
 8974 394a DEB7      		in r29,__SP_H__
 8975               	.LCFI132:
 8976               		.cfi_def_cfa_register 28
 8977 394c 6197      		sbiw r28,17
 8978               	.LCFI133:
 8979               		.cfi_def_cfa_offset 21
 8980 394e 0FB6      		in __tmp_reg__,__SREG__
 8981 3950 F894      		cli
 8982 3952 DEBF      		out __SP_H__,r29
 8983 3954 0FBE      		out __SREG__,__tmp_reg__
 8984 3956 CDBF      		out __SP_L__,r28
 8985               	/* prologue: function */
 8986               	/* frame size = 17 */
 8987               	/* stack size = 19 */
 8988               	.L__stack_usage = 19
 8989 3958 9D87      		std Y+13,r25
 8990 395a 8C87      		std Y+12,r24
 8991 395c 7F87      		std Y+15,r23
 8992 395e 6E87      		std Y+14,r22
 8993 3960 598B      		std Y+17,r21
 8994 3962 488B      		std Y+16,r20
1142:lp_solve_5.5/lp_SOS.c ****   int    i, n, nn, *list;
1143:lp_solve_5.5/lp_SOS.c ****   MYBOOL isactive;
1144:lp_solve_5.5/lp_SOS.c ****   lprec  *lp = group->lp;
 8995               		.loc 1 1144 0
 8996 3964 8C85      		ldd r24,Y+12
 8997 3966 9D85      		ldd r25,Y+13
 8998 3968 FC01      		movw r30,r24
 8999 396a 8081      		ld r24,Z
 9000 396c 9181      		ldd r25,Z+1
 9001 396e 9E83      		std Y+6,r25
 9002 3970 8D83      		std Y+5,r24
1145:lp_solve_5.5/lp_SOS.c **** 
1146:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
1147:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
1148:lp_solve_5.5/lp_SOS.c ****     report(lp, IMPORTANT, "SOS_unmark: Invalid SOS index %d\n", sosindex);
1149:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
1150:lp_solve_5.5/lp_SOS.c ****   }
1151:lp_solve_5.5/lp_SOS.c **** #endif
1152:lp_solve_5.5/lp_SOS.c **** 
1153:lp_solve_5.5/lp_SOS.c ****   if(!(lp->var_type[column] & (ISSOS | ISGUB)))
 9003               		.loc 1 1153 0
 9004 3972 8D81      		ldd r24,Y+5
 9005 3974 9E81      		ldd r25,Y+6
 9006 3976 8A57      		subi r24,122
 9007 3978 9D4F      		sbci r25,-3
 9008 397a FC01      		movw r30,r24
 9009 397c 2081      		ld r18,Z
 9010 397e 3181      		ldd r19,Z+1
 9011 3980 8889      		ldd r24,Y+16
 9012 3982 9989      		ldd r25,Y+17
 9013 3984 820F      		add r24,r18
 9014 3986 931F      		adc r25,r19
 9015 3988 FC01      		movw r30,r24
 9016 398a 8081      		ld r24,Z
 9017 398c 882F      		mov r24,r24
 9018 398e 90E0      		ldi r25,0
 9019 3990 8471      		andi r24,20
 9020 3992 9927      		clr r25
 9021 3994 892B      		or r24,r25
 9022 3996 01F4      		brne .L348
1154:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
 9023               		.loc 1 1154 0
 9024 3998 80E0      		ldi r24,0
 9025 399a 00C0      		rjmp .L349
 9026               	.L348:
1155:lp_solve_5.5/lp_SOS.c **** 
1156:lp_solve_5.5/lp_SOS.c **** 
1157:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0) {
 9027               		.loc 1 1157 0
 9028 399c 8E85      		ldd r24,Y+14
 9029 399e 9F85      		ldd r25,Y+15
 9030 39a0 892B      		or r24,r25
 9031 39a2 01F0      		breq .+2
 9032 39a4 00C0      		rjmp .L350
1158:lp_solve_5.5/lp_SOS.c **** 
1159:lp_solve_5.5/lp_SOS.c ****     /* Undefine a SOS3 member variable that has temporarily been set as integer */
1160:lp_solve_5.5/lp_SOS.c ****     if(lp->var_type[column] & ISSOSTEMPINT) {
 9033               		.loc 1 1160 0
 9034 39a6 8D81      		ldd r24,Y+5
 9035 39a8 9E81      		ldd r25,Y+6
 9036 39aa 8A57      		subi r24,122
 9037 39ac 9D4F      		sbci r25,-3
 9038 39ae FC01      		movw r30,r24
 9039 39b0 2081      		ld r18,Z
 9040 39b2 3181      		ldd r19,Z+1
 9041 39b4 8889      		ldd r24,Y+16
 9042 39b6 9989      		ldd r25,Y+17
 9043 39b8 820F      		add r24,r18
 9044 39ba 931F      		adc r25,r19
 9045 39bc FC01      		movw r30,r24
 9046 39be 8081      		ld r24,Z
 9047 39c0 882F      		mov r24,r24
 9048 39c2 90E0      		ldi r25,0
 9049 39c4 8870      		andi r24,8
 9050 39c6 9927      		clr r25
 9051 39c8 892B      		or r24,r25
 9052 39ca 01F0      		breq .L351
1161:lp_solve_5.5/lp_SOS.c ****       lp->var_type[column] &= !ISSOSTEMPINT;
 9053               		.loc 1 1161 0
 9054 39cc 8D81      		ldd r24,Y+5
 9055 39ce 9E81      		ldd r25,Y+6
 9056 39d0 8A57      		subi r24,122
 9057 39d2 9D4F      		sbci r25,-3
 9058 39d4 FC01      		movw r30,r24
 9059 39d6 2081      		ld r18,Z
 9060 39d8 3181      		ldd r19,Z+1
 9061 39da 8889      		ldd r24,Y+16
 9062 39dc 9989      		ldd r25,Y+17
 9063 39de 820F      		add r24,r18
 9064 39e0 931F      		adc r25,r19
 9065 39e2 FC01      		movw r30,r24
 9066 39e4 1082      		st Z,__zero_reg__
1162:lp_solve_5.5/lp_SOS.c ****       set_int(lp, column, FALSE);
 9067               		.loc 1 1162 0
 9068 39e6 2889      		ldd r18,Y+16
 9069 39e8 3989      		ldd r19,Y+17
 9070 39ea 8D81      		ldd r24,Y+5
 9071 39ec 9E81      		ldd r25,Y+6
 9072 39ee 40E0      		ldi r20,0
 9073 39f0 B901      		movw r22,r18
 9074 39f2 0E94 0000 		call set_int
 9075               	.L351:
1163:lp_solve_5.5/lp_SOS.c ****     }
1164:lp_solve_5.5/lp_SOS.c **** 
1165:lp_solve_5.5/lp_SOS.c ****     nn = 0;
 9076               		.loc 1 1165 0
 9077 39f6 1C82      		std Y+4,__zero_reg__
 9078 39f8 1B82      		std Y+3,__zero_reg__
1166:lp_solve_5.5/lp_SOS.c ****     for(i = group->memberpos[column-1]; i < group->memberpos[column]; i++) {
 9079               		.loc 1 1166 0
 9080 39fa 8C85      		ldd r24,Y+12
 9081 39fc 9D85      		ldd r25,Y+13
 9082 39fe FC01      		movw r30,r24
 9083 3a00 2685      		ldd r18,Z+14
 9084 3a02 3785      		ldd r19,Z+15
 9085 3a04 8889      		ldd r24,Y+16
 9086 3a06 9989      		ldd r25,Y+17
 9087 3a08 8150      		subi r24,1
 9088 3a0a 9048      		sbci r25,-128
 9089 3a0c 880F      		lsl r24
 9090 3a0e 991F      		rol r25
 9091 3a10 820F      		add r24,r18
 9092 3a12 931F      		adc r25,r19
 9093 3a14 FC01      		movw r30,r24
 9094 3a16 8081      		ld r24,Z
 9095 3a18 9181      		ldd r25,Z+1
 9096 3a1a 9A83      		std Y+2,r25
 9097 3a1c 8983      		std Y+1,r24
 9098 3a1e 00C0      		rjmp .L352
 9099               	.L354:
1167:lp_solve_5.5/lp_SOS.c ****       n = group->membership[i];
 9100               		.loc 1 1167 0
 9101 3a20 8C85      		ldd r24,Y+12
 9102 3a22 9D85      		ldd r25,Y+13
 9103 3a24 FC01      		movw r30,r24
 9104 3a26 2485      		ldd r18,Z+12
 9105 3a28 3585      		ldd r19,Z+13
 9106 3a2a 8981      		ldd r24,Y+1
 9107 3a2c 9A81      		ldd r25,Y+2
 9108 3a2e 880F      		lsl r24
 9109 3a30 991F      		rol r25
 9110 3a32 820F      		add r24,r18
 9111 3a34 931F      		adc r25,r19
 9112 3a36 FC01      		movw r30,r24
 9113 3a38 8081      		ld r24,Z
 9114 3a3a 9181      		ldd r25,Z+1
 9115 3a3c 9887      		std Y+8,r25
 9116 3a3e 8F83      		std Y+7,r24
1168:lp_solve_5.5/lp_SOS.c ****       if(SOS_unmark(group, n, column))
 9117               		.loc 1 1168 0
 9118 3a40 4889      		ldd r20,Y+16
 9119 3a42 5989      		ldd r21,Y+17
 9120 3a44 2F81      		ldd r18,Y+7
 9121 3a46 3885      		ldd r19,Y+8
 9122 3a48 8C85      		ldd r24,Y+12
 9123 3a4a 9D85      		ldd r25,Y+13
 9124 3a4c B901      		movw r22,r18
 9125 3a4e 0E94 0000 		call SOS_unmark
 9126 3a52 8823      		tst r24
 9127 3a54 01F0      		breq .L353
1169:lp_solve_5.5/lp_SOS.c ****         nn++;
 9128               		.loc 1 1169 0
 9129 3a56 8B81      		ldd r24,Y+3
 9130 3a58 9C81      		ldd r25,Y+4
 9131 3a5a 0196      		adiw r24,1
 9132 3a5c 9C83      		std Y+4,r25
 9133 3a5e 8B83      		std Y+3,r24
 9134               	.L353:
1166:lp_solve_5.5/lp_SOS.c ****       n = group->membership[i];
 9135               		.loc 1 1166 0 discriminator 2
 9136 3a60 8981      		ldd r24,Y+1
 9137 3a62 9A81      		ldd r25,Y+2
 9138 3a64 0196      		adiw r24,1
 9139 3a66 9A83      		std Y+2,r25
 9140 3a68 8983      		std Y+1,r24
 9141               	.L352:
1166:lp_solve_5.5/lp_SOS.c ****       n = group->membership[i];
 9142               		.loc 1 1166 0 is_stmt 0 discriminator 1
 9143 3a6a 8C85      		ldd r24,Y+12
 9144 3a6c 9D85      		ldd r25,Y+13
 9145 3a6e FC01      		movw r30,r24
 9146 3a70 2685      		ldd r18,Z+14
 9147 3a72 3785      		ldd r19,Z+15
 9148 3a74 8889      		ldd r24,Y+16
 9149 3a76 9989      		ldd r25,Y+17
 9150 3a78 880F      		lsl r24
 9151 3a7a 991F      		rol r25
 9152 3a7c 820F      		add r24,r18
 9153 3a7e 931F      		adc r25,r19
 9154 3a80 FC01      		movw r30,r24
 9155 3a82 2081      		ld r18,Z
 9156 3a84 3181      		ldd r19,Z+1
 9157 3a86 8981      		ldd r24,Y+1
 9158 3a88 9A81      		ldd r25,Y+2
 9159 3a8a 8217      		cp r24,r18
 9160 3a8c 9307      		cpc r25,r19
 9161 3a8e 04F0      		brlt .L354
1170:lp_solve_5.5/lp_SOS.c ****     }
1171:lp_solve_5.5/lp_SOS.c ****     return((MYBOOL) (nn == group->sos_count));
 9162               		.loc 1 1171 0 is_stmt 1
 9163 3a90 8C85      		ldd r24,Y+12
 9164 3a92 9D85      		ldd r25,Y+13
 9165 3a94 FC01      		movw r30,r24
 9166 3a96 2681      		ldd r18,Z+6
 9167 3a98 3781      		ldd r19,Z+7
 9168 3a9a 41E0      		ldi r20,lo8(1)
 9169 3a9c 8B81      		ldd r24,Y+3
 9170 3a9e 9C81      		ldd r25,Y+4
 9171 3aa0 2817      		cp r18,r24
 9172 3aa2 3907      		cpc r19,r25
 9173 3aa4 01F0      		breq .L355
 9174 3aa6 40E0      		ldi r20,0
 9175               	.L355:
 9176 3aa8 842F      		mov r24,r20
 9177 3aaa 00C0      		rjmp .L349
 9178               	.L350:
1172:lp_solve_5.5/lp_SOS.c ****   }
1173:lp_solve_5.5/lp_SOS.c ****   else {
1174:lp_solve_5.5/lp_SOS.c ****     list = group->sos_list[sosindex-1]->members;
 9179               		.loc 1 1174 0
 9180 3aac 8C85      		ldd r24,Y+12
 9181 3aae 9D85      		ldd r25,Y+13
 9182 3ab0 FC01      		movw r30,r24
 9183 3ab2 2281      		ldd r18,Z+2
 9184 3ab4 3381      		ldd r19,Z+3
 9185 3ab6 8E85      		ldd r24,Y+14
 9186 3ab8 9F85      		ldd r25,Y+15
 9187 3aba 8150      		subi r24,1
 9188 3abc 9048      		sbci r25,-128
 9189 3abe 880F      		lsl r24
 9190 3ac0 991F      		rol r25
 9191 3ac2 820F      		add r24,r18
 9192 3ac4 931F      		adc r25,r19
 9193 3ac6 FC01      		movw r30,r24
 9194 3ac8 8081      		ld r24,Z
 9195 3aca 9181      		ldd r25,Z+1
 9196 3acc FC01      		movw r30,r24
 9197 3ace 8585      		ldd r24,Z+13
 9198 3ad0 9685      		ldd r25,Z+14
 9199 3ad2 9A87      		std Y+10,r25
 9200 3ad4 8987      		std Y+9,r24
1175:lp_solve_5.5/lp_SOS.c ****     n = list[0]+1;
 9201               		.loc 1 1175 0
 9202 3ad6 8985      		ldd r24,Y+9
 9203 3ad8 9A85      		ldd r25,Y+10
 9204 3ada FC01      		movw r30,r24
 9205 3adc 8081      		ld r24,Z
 9206 3ade 9181      		ldd r25,Z+1
 9207 3ae0 0196      		adiw r24,1
 9208 3ae2 9887      		std Y+8,r25
 9209 3ae4 8F83      		std Y+7,r24
1176:lp_solve_5.5/lp_SOS.c ****     nn = list[n];
 9210               		.loc 1 1176 0
 9211 3ae6 8F81      		ldd r24,Y+7
 9212 3ae8 9885      		ldd r25,Y+8
 9213 3aea 880F      		lsl r24
 9214 3aec 991F      		rol r25
 9215 3aee 2985      		ldd r18,Y+9
 9216 3af0 3A85      		ldd r19,Y+10
 9217 3af2 820F      		add r24,r18
 9218 3af4 931F      		adc r25,r19
 9219 3af6 FC01      		movw r30,r24
 9220 3af8 8081      		ld r24,Z
 9221 3afa 9181      		ldd r25,Z+1
 9222 3afc 9C83      		std Y+4,r25
 9223 3afe 8B83      		std Y+3,r24
1177:lp_solve_5.5/lp_SOS.c **** 
1178:lp_solve_5.5/lp_SOS.c ****    /* Search for the variable */
1179:lp_solve_5.5/lp_SOS.c ****     i = SOS_member_index(group, sosindex, column);
 9224               		.loc 1 1179 0
 9225 3b00 4889      		ldd r20,Y+16
 9226 3b02 5989      		ldd r21,Y+17
 9227 3b04 2E85      		ldd r18,Y+14
 9228 3b06 3F85      		ldd r19,Y+15
 9229 3b08 8C85      		ldd r24,Y+12
 9230 3b0a 9D85      		ldd r25,Y+13
 9231 3b0c B901      		movw r22,r18
 9232 3b0e 0E94 0000 		call SOS_member_index
 9233 3b12 9A83      		std Y+2,r25
 9234 3b14 8983      		std Y+1,r24
1180:lp_solve_5.5/lp_SOS.c **** 
1181:lp_solve_5.5/lp_SOS.c ****    /* Restore sign in main list */
1182:lp_solve_5.5/lp_SOS.c ****     if((i > 0) && (list[i] < 0))
 9235               		.loc 1 1182 0
 9236 3b16 8981      		ldd r24,Y+1
 9237 3b18 9A81      		ldd r25,Y+2
 9238 3b1a 1816      		cp __zero_reg__,r24
 9239 3b1c 1906      		cpc __zero_reg__,r25
 9240 3b1e 04F4      		brge .L356
 9241               		.loc 1 1182 0 is_stmt 0 discriminator 1
 9242 3b20 8981      		ldd r24,Y+1
 9243 3b22 9A81      		ldd r25,Y+2
 9244 3b24 880F      		lsl r24
 9245 3b26 991F      		rol r25
 9246 3b28 2985      		ldd r18,Y+9
 9247 3b2a 3A85      		ldd r19,Y+10
 9248 3b2c 820F      		add r24,r18
 9249 3b2e 931F      		adc r25,r19
 9250 3b30 FC01      		movw r30,r24
 9251 3b32 8081      		ld r24,Z
 9252 3b34 9181      		ldd r25,Z+1
 9253 3b36 9923      		tst r25
 9254 3b38 04F4      		brge .L356
1183:lp_solve_5.5/lp_SOS.c ****       list[i] *= -1;
 9255               		.loc 1 1183 0 is_stmt 1
 9256 3b3a 8981      		ldd r24,Y+1
 9257 3b3c 9A81      		ldd r25,Y+2
 9258 3b3e 880F      		lsl r24
 9259 3b40 991F      		rol r25
 9260 3b42 2985      		ldd r18,Y+9
 9261 3b44 3A85      		ldd r19,Y+10
 9262 3b46 820F      		add r24,r18
 9263 3b48 931F      		adc r25,r19
 9264 3b4a 2981      		ldd r18,Y+1
 9265 3b4c 3A81      		ldd r19,Y+2
 9266 3b4e 220F      		lsl r18
 9267 3b50 331F      		rol r19
 9268 3b52 4985      		ldd r20,Y+9
 9269 3b54 5A85      		ldd r21,Y+10
 9270 3b56 240F      		add r18,r20
 9271 3b58 351F      		adc r19,r21
 9272 3b5a F901      		movw r30,r18
 9273 3b5c 2081      		ld r18,Z
 9274 3b5e 3181      		ldd r19,Z+1
 9275 3b60 3195      		neg r19
 9276 3b62 2195      		neg r18
 9277 3b64 3109      		sbc r19,__zero_reg__
 9278 3b66 FC01      		movw r30,r24
 9279 3b68 3183      		std Z+1,r19
 9280 3b6a 2083      		st Z,r18
1184:lp_solve_5.5/lp_SOS.c ****     else
1185:lp_solve_5.5/lp_SOS.c ****       return(TRUE);
1186:lp_solve_5.5/lp_SOS.c **** 
1187:lp_solve_5.5/lp_SOS.c ****    /* Find the variable in the active list... */
1188:lp_solve_5.5/lp_SOS.c ****     isactive = SOS_is_active(group, sosindex, column);
 9281               		.loc 1 1188 0
 9282 3b6c 4889      		ldd r20,Y+16
 9283 3b6e 5989      		ldd r21,Y+17
 9284 3b70 2E85      		ldd r18,Y+14
 9285 3b72 3F85      		ldd r19,Y+15
 9286 3b74 8C85      		ldd r24,Y+12
 9287 3b76 9D85      		ldd r25,Y+13
 9288 3b78 B901      		movw r22,r18
 9289 3b7a 0E94 0000 		call SOS_is_active
 9290 3b7e 8B87      		std Y+11,r24
1189:lp_solve_5.5/lp_SOS.c ****     if(isactive) {
 9291               		.loc 1 1189 0
 9292 3b80 8B85      		ldd r24,Y+11
 9293 3b82 8823      		tst r24
 9294 3b84 01F4      		brne .L357
 9295 3b86 00C0      		rjmp .L366
 9296               	.L356:
1185:lp_solve_5.5/lp_SOS.c **** 
 9297               		.loc 1 1185 0
 9298 3b88 81E0      		ldi r24,lo8(1)
 9299 3b8a 00C0      		rjmp .L349
 9300               	.L357:
1190:lp_solve_5.5/lp_SOS.c ****       for(i = 1; i <= nn; i++)
 9301               		.loc 1 1190 0
 9302 3b8c 81E0      		ldi r24,lo8(1)
 9303 3b8e 90E0      		ldi r25,0
 9304 3b90 9A83      		std Y+2,r25
 9305 3b92 8983      		std Y+1,r24
 9306 3b94 00C0      		rjmp .L359
 9307               	.L362:
1191:lp_solve_5.5/lp_SOS.c ****         if(list[n+i] == column)
 9308               		.loc 1 1191 0
 9309 3b96 2F81      		ldd r18,Y+7
 9310 3b98 3885      		ldd r19,Y+8
 9311 3b9a 8981      		ldd r24,Y+1
 9312 3b9c 9A81      		ldd r25,Y+2
 9313 3b9e 820F      		add r24,r18
 9314 3ba0 931F      		adc r25,r19
 9315 3ba2 880F      		lsl r24
 9316 3ba4 991F      		rol r25
 9317 3ba6 2985      		ldd r18,Y+9
 9318 3ba8 3A85      		ldd r19,Y+10
 9319 3baa 820F      		add r24,r18
 9320 3bac 931F      		adc r25,r19
 9321 3bae FC01      		movw r30,r24
 9322 3bb0 2081      		ld r18,Z
 9323 3bb2 3181      		ldd r19,Z+1
 9324 3bb4 8889      		ldd r24,Y+16
 9325 3bb6 9989      		ldd r25,Y+17
 9326 3bb8 2817      		cp r18,r24
 9327 3bba 3907      		cpc r19,r25
 9328 3bbc 01F0      		breq .L367
1190:lp_solve_5.5/lp_SOS.c ****       for(i = 1; i <= nn; i++)
 9329               		.loc 1 1190 0 discriminator 2
 9330 3bbe 8981      		ldd r24,Y+1
 9331 3bc0 9A81      		ldd r25,Y+2
 9332 3bc2 0196      		adiw r24,1
 9333 3bc4 9A83      		std Y+2,r25
 9334 3bc6 8983      		std Y+1,r24
 9335               	.L359:
1190:lp_solve_5.5/lp_SOS.c ****       for(i = 1; i <= nn; i++)
 9336               		.loc 1 1190 0 is_stmt 0 discriminator 1
 9337 3bc8 2981      		ldd r18,Y+1
 9338 3bca 3A81      		ldd r19,Y+2
 9339 3bcc 8B81      		ldd r24,Y+3
 9340 3bce 9C81      		ldd r25,Y+4
 9341 3bd0 8217      		cp r24,r18
 9342 3bd2 9307      		cpc r25,r19
 9343 3bd4 04F4      		brge .L362
 9344 3bd6 00C0      		rjmp .L361
 9345               	.L367:
1192:lp_solve_5.5/lp_SOS.c ****           break;
 9346               		.loc 1 1192 0 is_stmt 1
 9347 3bd8 0000      		nop
 9348               	.L361:
1193:lp_solve_5.5/lp_SOS.c ****      /* ...shrink the list if found, otherwise return error */
1194:lp_solve_5.5/lp_SOS.c ****       if(i <= nn) {
 9349               		.loc 1 1194 0
 9350 3bda 2981      		ldd r18,Y+1
 9351 3bdc 3A81      		ldd r19,Y+2
 9352 3bde 8B81      		ldd r24,Y+3
 9353 3be0 9C81      		ldd r25,Y+4
 9354 3be2 8217      		cp r24,r18
 9355 3be4 9307      		cpc r25,r19
 9356 3be6 04F4      		brge .+2
 9357 3be8 00C0      		rjmp .L363
1195:lp_solve_5.5/lp_SOS.c ****         for(; i<nn; i++)
 9358               		.loc 1 1195 0
 9359 3bea 00C0      		rjmp .L364
 9360               	.L365:
1196:lp_solve_5.5/lp_SOS.c ****         list[n+i] = list[n+i+1];
 9361               		.loc 1 1196 0 discriminator 2
 9362 3bec 2F81      		ldd r18,Y+7
 9363 3bee 3885      		ldd r19,Y+8
 9364 3bf0 8981      		ldd r24,Y+1
 9365 3bf2 9A81      		ldd r25,Y+2
 9366 3bf4 820F      		add r24,r18
 9367 3bf6 931F      		adc r25,r19
 9368 3bf8 880F      		lsl r24
 9369 3bfa 991F      		rol r25
 9370 3bfc 2985      		ldd r18,Y+9
 9371 3bfe 3A85      		ldd r19,Y+10
 9372 3c00 820F      		add r24,r18
 9373 3c02 931F      		adc r25,r19
 9374 3c04 4F81      		ldd r20,Y+7
 9375 3c06 5885      		ldd r21,Y+8
 9376 3c08 2981      		ldd r18,Y+1
 9377 3c0a 3A81      		ldd r19,Y+2
 9378 3c0c 240F      		add r18,r20
 9379 3c0e 351F      		adc r19,r21
 9380 3c10 2F5F      		subi r18,-1
 9381 3c12 3F4F      		sbci r19,-1
 9382 3c14 220F      		lsl r18
 9383 3c16 331F      		rol r19
 9384 3c18 4985      		ldd r20,Y+9
 9385 3c1a 5A85      		ldd r21,Y+10
 9386 3c1c 240F      		add r18,r20
 9387 3c1e 351F      		adc r19,r21
 9388 3c20 F901      		movw r30,r18
 9389 3c22 2081      		ld r18,Z
 9390 3c24 3181      		ldd r19,Z+1
 9391 3c26 FC01      		movw r30,r24
 9392 3c28 3183      		std Z+1,r19
 9393 3c2a 2083      		st Z,r18
1195:lp_solve_5.5/lp_SOS.c ****         for(; i<nn; i++)
 9394               		.loc 1 1195 0 discriminator 2
 9395 3c2c 8981      		ldd r24,Y+1
 9396 3c2e 9A81      		ldd r25,Y+2
 9397 3c30 0196      		adiw r24,1
 9398 3c32 9A83      		std Y+2,r25
 9399 3c34 8983      		std Y+1,r24
 9400               	.L364:
1195:lp_solve_5.5/lp_SOS.c ****         for(; i<nn; i++)
 9401               		.loc 1 1195 0 is_stmt 0 discriminator 1
 9402 3c36 2981      		ldd r18,Y+1
 9403 3c38 3A81      		ldd r19,Y+2
 9404 3c3a 8B81      		ldd r24,Y+3
 9405 3c3c 9C81      		ldd r25,Y+4
 9406 3c3e 2817      		cp r18,r24
 9407 3c40 3907      		cpc r19,r25
 9408 3c42 04F0      		brlt .L365
1197:lp_solve_5.5/lp_SOS.c ****         list[n+nn] = 0;
 9409               		.loc 1 1197 0 is_stmt 1
 9410 3c44 2F81      		ldd r18,Y+7
 9411 3c46 3885      		ldd r19,Y+8
 9412 3c48 8B81      		ldd r24,Y+3
 9413 3c4a 9C81      		ldd r25,Y+4
 9414 3c4c 820F      		add r24,r18
 9415 3c4e 931F      		adc r25,r19
 9416 3c50 880F      		lsl r24
 9417 3c52 991F      		rol r25
 9418 3c54 2985      		ldd r18,Y+9
 9419 3c56 3A85      		ldd r19,Y+10
 9420 3c58 820F      		add r24,r18
 9421 3c5a 931F      		adc r25,r19
 9422 3c5c FC01      		movw r30,r24
 9423 3c5e 1182      		std Z+1,__zero_reg__
 9424 3c60 1082      		st Z,__zero_reg__
1198:lp_solve_5.5/lp_SOS.c ****         return(TRUE);
 9425               		.loc 1 1198 0
 9426 3c62 81E0      		ldi r24,lo8(1)
 9427 3c64 00C0      		rjmp .L349
 9428               	.L363:
1199:lp_solve_5.5/lp_SOS.c ****       }
1200:lp_solve_5.5/lp_SOS.c ****       return(FALSE);
 9429               		.loc 1 1200 0
 9430 3c66 80E0      		ldi r24,0
 9431 3c68 00C0      		rjmp .L349
 9432               	.L366:
1201:lp_solve_5.5/lp_SOS.c ****     }
1202:lp_solve_5.5/lp_SOS.c ****     else
1203:lp_solve_5.5/lp_SOS.c ****       return(TRUE);
 9433               		.loc 1 1203 0
 9434 3c6a 81E0      		ldi r24,lo8(1)
 9435               	.L349:
 9436               	/* epilogue start */
1204:lp_solve_5.5/lp_SOS.c ****   }
1205:lp_solve_5.5/lp_SOS.c **** }
 9437               		.loc 1 1205 0
 9438 3c6c 6196      		adiw r28,17
 9439 3c6e 0FB6      		in __tmp_reg__,__SREG__
 9440 3c70 F894      		cli
 9441 3c72 DEBF      		out __SP_H__,r29
 9442 3c74 0FBE      		out __SREG__,__tmp_reg__
 9443 3c76 CDBF      		out __SP_L__,r28
 9444 3c78 DF91      		pop r29
 9445 3c7a CF91      		pop r28
 9446 3c7c 0895      		ret
 9447               		.cfi_endproc
 9448               	.LFE35:
 9450               	.global	__nesf2
 9451               	.global	__ltsf2
 9452               	.global	SOS_fix_unmarked
 9454               	SOS_fix_unmarked:
 9455               	.LFB36:
1206:lp_solve_5.5/lp_SOS.c **** 
1207:lp_solve_5.5/lp_SOS.c **** 
1208:lp_solve_5.5/lp_SOS.c **** int SOS_fix_unmarked(SOSgroup *group, int sosindex, int variable, REAL *bound, REAL value, MYBOOL i
1209:lp_solve_5.5/lp_SOS.c ****                      int *diffcount, DeltaVrec *changelog)
1210:lp_solve_5.5/lp_SOS.c **** {
 9456               		.loc 1 1210 0
 9457               		.cfi_startproc
 9458 3c7e 8F92      		push r8
 9459               	.LCFI134:
 9460               		.cfi_def_cfa_offset 3
 9461               		.cfi_offset 8, -2
 9462 3c80 9F92      		push r9
 9463               	.LCFI135:
 9464               		.cfi_def_cfa_offset 4
 9465               		.cfi_offset 9, -3
 9466 3c82 AF92      		push r10
 9467               	.LCFI136:
 9468               		.cfi_def_cfa_offset 5
 9469               		.cfi_offset 10, -4
 9470 3c84 BF92      		push r11
 9471               	.LCFI137:
 9472               		.cfi_def_cfa_offset 6
 9473               		.cfi_offset 11, -5
 9474 3c86 CF92      		push r12
 9475               	.LCFI138:
 9476               		.cfi_def_cfa_offset 7
 9477               		.cfi_offset 12, -6
 9478 3c88 EF92      		push r14
 9479               	.LCFI139:
 9480               		.cfi_def_cfa_offset 8
 9481               		.cfi_offset 14, -7
 9482 3c8a FF92      		push r15
 9483               	.LCFI140:
 9484               		.cfi_def_cfa_offset 9
 9485               		.cfi_offset 15, -8
 9486 3c8c 0F93      		push r16
 9487               	.LCFI141:
 9488               		.cfi_def_cfa_offset 10
 9489               		.cfi_offset 16, -9
 9490 3c8e 1F93      		push r17
 9491               	.LCFI142:
 9492               		.cfi_def_cfa_offset 11
 9493               		.cfi_offset 17, -10
 9494 3c90 CF93      		push r28
 9495               	.LCFI143:
 9496               		.cfi_def_cfa_offset 12
 9497               		.cfi_offset 28, -11
 9498 3c92 DF93      		push r29
 9499               	.LCFI144:
 9500               		.cfi_def_cfa_offset 13
 9501               		.cfi_offset 29, -12
 9502 3c94 CDB7      		in r28,__SP_L__
 9503 3c96 DEB7      		in r29,__SP_H__
 9504               	.LCFI145:
 9505               		.cfi_def_cfa_register 28
 9506 3c98 A397      		sbiw r28,35
 9507               	.LCFI146:
 9508               		.cfi_def_cfa_offset 48
 9509 3c9a 0FB6      		in __tmp_reg__,__SREG__
 9510 3c9c F894      		cli
 9511 3c9e DEBF      		out __SP_H__,r29
 9512 3ca0 0FBE      		out __SREG__,__tmp_reg__
 9513 3ca2 CDBF      		out __SP_L__,r28
 9514               	/* prologue: function */
 9515               	/* frame size = 35 */
 9516               	/* stack size = 46 */
 9517               	.L__stack_usage = 46
 9518 3ca4 9C8B      		std Y+20,r25
 9519 3ca6 8B8B      		std Y+19,r24
 9520 3ca8 7E8B      		std Y+22,r23
 9521 3caa 6D8B      		std Y+21,r22
 9522 3cac 588F      		std Y+24,r21
 9523 3cae 4F8B      		std Y+23,r20
 9524 3cb0 3A8F      		std Y+26,r19
 9525 3cb2 298F      		std Y+25,r18
 9526 3cb4 EB8E      		std Y+27,r14
 9527 3cb6 FC8E      		std Y+28,r15
 9528 3cb8 0D8F      		std Y+29,r16
 9529 3cba 1E8F      		std Y+30,r17
 9530 3cbc CF8E      		std Y+31,r12
 9531 3cbe B9A2      		std Y+33,r11
 9532 3cc0 A8A2      		std Y+32,r10
 9533 3cc2 9BA2      		std Y+35,r9
 9534 3cc4 8AA2      		std Y+34,r8
1211:lp_solve_5.5/lp_SOS.c ****   int    i, ii, count, n, nn, nLeft, nRight, *list;
1212:lp_solve_5.5/lp_SOS.c ****   lprec  *lp = group->lp;
 9535               		.loc 1 1212 0
 9536 3cc6 8B89      		ldd r24,Y+19
 9537 3cc8 9C89      		ldd r25,Y+20
 9538 3cca FC01      		movw r30,r24
 9539 3ccc 8081      		ld r24,Z
 9540 3cce 9181      		ldd r25,Z+1
 9541 3cd0 9A87      		std Y+10,r25
 9542 3cd2 8987      		std Y+9,r24
1213:lp_solve_5.5/lp_SOS.c **** 
1214:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
1215:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
1216:lp_solve_5.5/lp_SOS.c ****     report(lp, IMPORTANT, "SOS_fix_unmarked: Invalid SOS index %d\n", sosindex);
1217:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
1218:lp_solve_5.5/lp_SOS.c ****   }
1219:lp_solve_5.5/lp_SOS.c **** #endif
1220:lp_solve_5.5/lp_SOS.c **** 
1221:lp_solve_5.5/lp_SOS.c ****   count = 0;
 9543               		.loc 1 1221 0
 9544 3cd4 1C82      		std Y+4,__zero_reg__
 9545 3cd6 1B82      		std Y+3,__zero_reg__
1222:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0) {
 9546               		.loc 1 1222 0
 9547 3cd8 8D89      		ldd r24,Y+21
 9548 3cda 9E89      		ldd r25,Y+22
 9549 3cdc 892B      		or r24,r25
 9550 3cde 01F0      		breq .+2
 9551 3ce0 00C0      		rjmp .L369
1223:lp_solve_5.5/lp_SOS.c ****     for(i = group->memberpos[variable-1]; i < group->memberpos[variable]; i++) {
 9552               		.loc 1 1223 0
 9553 3ce2 8B89      		ldd r24,Y+19
 9554 3ce4 9C89      		ldd r25,Y+20
 9555 3ce6 FC01      		movw r30,r24
 9556 3ce8 2685      		ldd r18,Z+14
 9557 3cea 3785      		ldd r19,Z+15
 9558 3cec 8F89      		ldd r24,Y+23
 9559 3cee 988D      		ldd r25,Y+24
 9560 3cf0 8150      		subi r24,1
 9561 3cf2 9048      		sbci r25,-128
 9562 3cf4 880F      		lsl r24
 9563 3cf6 991F      		rol r25
 9564 3cf8 820F      		add r24,r18
 9565 3cfa 931F      		adc r25,r19
 9566 3cfc FC01      		movw r30,r24
 9567 3cfe 8081      		ld r24,Z
 9568 3d00 9181      		ldd r25,Z+1
 9569 3d02 9A83      		std Y+2,r25
 9570 3d04 8983      		std Y+1,r24
 9571 3d06 00C0      		rjmp .L370
 9572               	.L371:
1224:lp_solve_5.5/lp_SOS.c ****       n = group->membership[i];
 9573               		.loc 1 1224 0 discriminator 3
 9574 3d08 8B89      		ldd r24,Y+19
 9575 3d0a 9C89      		ldd r25,Y+20
 9576 3d0c FC01      		movw r30,r24
 9577 3d0e 2485      		ldd r18,Z+12
 9578 3d10 3585      		ldd r19,Z+13
 9579 3d12 8981      		ldd r24,Y+1
 9580 3d14 9A81      		ldd r25,Y+2
 9581 3d16 880F      		lsl r24
 9582 3d18 991F      		rol r25
 9583 3d1a 820F      		add r24,r18
 9584 3d1c 931F      		adc r25,r19
 9585 3d1e FC01      		movw r30,r24
 9586 3d20 8081      		ld r24,Z
 9587 3d22 9181      		ldd r25,Z+1
 9588 3d24 9E87      		std Y+14,r25
 9589 3d26 8D87      		std Y+13,r24
1225:lp_solve_5.5/lp_SOS.c ****       count += SOS_fix_unmarked(group, n, variable, bound, value, isupper, diffcount, changelog);
 9590               		.loc 1 1225 0 discriminator 3
 9591 3d28 EAA0      		ldd r14,Y+34
 9592 3d2a FBA0      		ldd r15,Y+35
 9593 3d2c 08A1      		ldd r16,Y+32
 9594 3d2e 19A1      		ldd r17,Y+33
 9595 3d30 8B8D      		ldd r24,Y+27
 9596 3d32 9C8D      		ldd r25,Y+28
 9597 3d34 AD8D      		ldd r26,Y+29
 9598 3d36 BE8D      		ldd r27,Y+30
 9599 3d38 298D      		ldd r18,Y+25
 9600 3d3a 3A8D      		ldd r19,Y+26
 9601 3d3c 4F89      		ldd r20,Y+23
 9602 3d3e 588D      		ldd r21,Y+24
 9603 3d40 6D85      		ldd r22,Y+13
 9604 3d42 7E85      		ldd r23,Y+14
 9605 3d44 EB89      		ldd r30,Y+19
 9606 3d46 FC89      		ldd r31,Y+20
 9607 3d48 4701      		movw r8,r14
 9608 3d4a 5801      		movw r10,r16
 9609 3d4c CF8C      		ldd r12,Y+31
 9610 3d4e 7C01      		movw r14,r24
 9611 3d50 8D01      		movw r16,r26
 9612 3d52 CF01      		movw r24,r30
 9613 3d54 0E94 0000 		call SOS_fix_unmarked
 9614 3d58 9C01      		movw r18,r24
 9615 3d5a 8B81      		ldd r24,Y+3
 9616 3d5c 9C81      		ldd r25,Y+4
 9617 3d5e 820F      		add r24,r18
 9618 3d60 931F      		adc r25,r19
 9619 3d62 9C83      		std Y+4,r25
 9620 3d64 8B83      		std Y+3,r24
1223:lp_solve_5.5/lp_SOS.c ****     for(i = group->memberpos[variable-1]; i < group->memberpos[variable]; i++) {
 9621               		.loc 1 1223 0 discriminator 3
 9622 3d66 8981      		ldd r24,Y+1
 9623 3d68 9A81      		ldd r25,Y+2
 9624 3d6a 0196      		adiw r24,1
 9625 3d6c 9A83      		std Y+2,r25
 9626 3d6e 8983      		std Y+1,r24
 9627               	.L370:
1223:lp_solve_5.5/lp_SOS.c ****     for(i = group->memberpos[variable-1]; i < group->memberpos[variable]; i++) {
 9628               		.loc 1 1223 0 is_stmt 0 discriminator 1
 9629 3d70 8B89      		ldd r24,Y+19
 9630 3d72 9C89      		ldd r25,Y+20
 9631 3d74 FC01      		movw r30,r24
 9632 3d76 2685      		ldd r18,Z+14
 9633 3d78 3785      		ldd r19,Z+15
 9634 3d7a 8F89      		ldd r24,Y+23
 9635 3d7c 988D      		ldd r25,Y+24
 9636 3d7e 880F      		lsl r24
 9637 3d80 991F      		rol r25
 9638 3d82 820F      		add r24,r18
 9639 3d84 931F      		adc r25,r19
 9640 3d86 FC01      		movw r30,r24
 9641 3d88 2081      		ld r18,Z
 9642 3d8a 3181      		ldd r19,Z+1
 9643 3d8c 8981      		ldd r24,Y+1
 9644 3d8e 9A81      		ldd r25,Y+2
 9645 3d90 8217      		cp r24,r18
 9646 3d92 9307      		cpc r25,r19
 9647 3d94 04F4      		brge .+2
 9648 3d96 00C0      		rjmp .L371
 9649 3d98 00C0      		rjmp .L372
 9650               	.L369:
1226:lp_solve_5.5/lp_SOS.c ****     }
1227:lp_solve_5.5/lp_SOS.c ****   }
1228:lp_solve_5.5/lp_SOS.c ****   else {
1229:lp_solve_5.5/lp_SOS.c ****     list = group->sos_list[sosindex-1]->members;
 9651               		.loc 1 1229 0 is_stmt 1
 9652 3d9a 8B89      		ldd r24,Y+19
 9653 3d9c 9C89      		ldd r25,Y+20
 9654 3d9e FC01      		movw r30,r24
 9655 3da0 2281      		ldd r18,Z+2
 9656 3da2 3381      		ldd r19,Z+3
 9657 3da4 8D89      		ldd r24,Y+21
 9658 3da6 9E89      		ldd r25,Y+22
 9659 3da8 8150      		subi r24,1
 9660 3daa 9048      		sbci r25,-128
 9661 3dac 880F      		lsl r24
 9662 3dae 991F      		rol r25
 9663 3db0 820F      		add r24,r18
 9664 3db2 931F      		adc r25,r19
 9665 3db4 FC01      		movw r30,r24
 9666 3db6 8081      		ld r24,Z
 9667 3db8 9181      		ldd r25,Z+1
 9668 3dba FC01      		movw r30,r24
 9669 3dbc 8585      		ldd r24,Z+13
 9670 3dbe 9685      		ldd r25,Z+14
 9671 3dc0 9C87      		std Y+12,r25
 9672 3dc2 8B87      		std Y+11,r24
1230:lp_solve_5.5/lp_SOS.c ****     n = list[0]+1;
 9673               		.loc 1 1230 0
 9674 3dc4 8B85      		ldd r24,Y+11
 9675 3dc6 9C85      		ldd r25,Y+12
 9676 3dc8 FC01      		movw r30,r24
 9677 3dca 8081      		ld r24,Z
 9678 3dcc 9181      		ldd r25,Z+1
 9679 3dce 0196      		adiw r24,1
 9680 3dd0 9E87      		std Y+14,r25
 9681 3dd2 8D87      		std Y+13,r24
1231:lp_solve_5.5/lp_SOS.c **** 
1232:lp_solve_5.5/lp_SOS.c ****    /* Count the number of active and free SOS variables */
1233:lp_solve_5.5/lp_SOS.c ****     nn = list[n];
 9682               		.loc 1 1233 0
 9683 3dd4 8D85      		ldd r24,Y+13
 9684 3dd6 9E85      		ldd r25,Y+14
 9685 3dd8 880F      		lsl r24
 9686 3dda 991F      		rol r25
 9687 3ddc 2B85      		ldd r18,Y+11
 9688 3dde 3C85      		ldd r19,Y+12
 9689 3de0 820F      		add r24,r18
 9690 3de2 931F      		adc r25,r19
 9691 3de4 FC01      		movw r30,r24
 9692 3de6 8081      		ld r24,Z
 9693 3de8 9181      		ldd r25,Z+1
 9694 3dea 988B      		std Y+16,r25
 9695 3dec 8F87      		std Y+15,r24
1234:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= nn; i++) {
 9696               		.loc 1 1234 0
 9697 3dee 81E0      		ldi r24,lo8(1)
 9698 3df0 90E0      		ldi r25,0
 9699 3df2 9A83      		std Y+2,r25
 9700 3df4 8983      		std Y+1,r24
 9701 3df6 00C0      		rjmp .L373
 9702               	.L376:
1235:lp_solve_5.5/lp_SOS.c ****       if(list[n+i] == 0)
 9703               		.loc 1 1235 0
 9704 3df8 2D85      		ldd r18,Y+13
 9705 3dfa 3E85      		ldd r19,Y+14
 9706 3dfc 8981      		ldd r24,Y+1
 9707 3dfe 9A81      		ldd r25,Y+2
 9708 3e00 820F      		add r24,r18
 9709 3e02 931F      		adc r25,r19
 9710 3e04 880F      		lsl r24
 9711 3e06 991F      		rol r25
 9712 3e08 2B85      		ldd r18,Y+11
 9713 3e0a 3C85      		ldd r19,Y+12
 9714 3e0c 820F      		add r24,r18
 9715 3e0e 931F      		adc r25,r19
 9716 3e10 FC01      		movw r30,r24
 9717 3e12 8081      		ld r24,Z
 9718 3e14 9181      		ldd r25,Z+1
 9719 3e16 892B      		or r24,r25
 9720 3e18 01F0      		breq .L397
1234:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= nn; i++) {
 9721               		.loc 1 1234 0 discriminator 2
 9722 3e1a 8981      		ldd r24,Y+1
 9723 3e1c 9A81      		ldd r25,Y+2
 9724 3e1e 0196      		adiw r24,1
 9725 3e20 9A83      		std Y+2,r25
 9726 3e22 8983      		std Y+1,r24
 9727               	.L373:
1234:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= nn; i++) {
 9728               		.loc 1 1234 0 is_stmt 0 discriminator 1
 9729 3e24 2981      		ldd r18,Y+1
 9730 3e26 3A81      		ldd r19,Y+2
 9731 3e28 8F85      		ldd r24,Y+15
 9732 3e2a 9889      		ldd r25,Y+16
 9733 3e2c 8217      		cp r24,r18
 9734 3e2e 9307      		cpc r25,r19
 9735 3e30 04F4      		brge .L376
 9736 3e32 00C0      		rjmp .L375
 9737               	.L397:
1236:lp_solve_5.5/lp_SOS.c ****       break;
 9738               		.loc 1 1236 0 is_stmt 1
 9739 3e34 0000      		nop
 9740               	.L375:
1237:lp_solve_5.5/lp_SOS.c ****     }
1238:lp_solve_5.5/lp_SOS.c ****     i--;
 9741               		.loc 1 1238 0
 9742 3e36 8981      		ldd r24,Y+1
 9743 3e38 9A81      		ldd r25,Y+2
 9744 3e3a 0197      		sbiw r24,1
 9745 3e3c 9A83      		std Y+2,r25
 9746 3e3e 8983      		std Y+1,r24
1239:lp_solve_5.5/lp_SOS.c ****     i = nn - i;  /* Establish the number of unused slots */
 9747               		.loc 1 1239 0
 9748 3e40 2F85      		ldd r18,Y+15
 9749 3e42 3889      		ldd r19,Y+16
 9750 3e44 8981      		ldd r24,Y+1
 9751 3e46 9A81      		ldd r25,Y+2
 9752 3e48 A901      		movw r20,r18
 9753 3e4a 481B      		sub r20,r24
 9754 3e4c 590B      		sbc r21,r25
 9755 3e4e CA01      		movw r24,r20
 9756 3e50 9A83      		std Y+2,r25
 9757 3e52 8983      		std Y+1,r24
1240:lp_solve_5.5/lp_SOS.c **** 
1241:lp_solve_5.5/lp_SOS.c ****    /* Determine the free SOS variable window */
1242:lp_solve_5.5/lp_SOS.c ****     if(i == nn) {
 9758               		.loc 1 1242 0
 9759 3e54 2981      		ldd r18,Y+1
 9760 3e56 3A81      		ldd r19,Y+2
 9761 3e58 8F85      		ldd r24,Y+15
 9762 3e5a 9889      		ldd r25,Y+16
 9763 3e5c 2817      		cp r18,r24
 9764 3e5e 3907      		cpc r19,r25
 9765 3e60 01F4      		brne .L377
1243:lp_solve_5.5/lp_SOS.c ****       nLeft = 0;
 9766               		.loc 1 1243 0
 9767 3e62 1E82      		std Y+6,__zero_reg__
 9768 3e64 1D82      		std Y+5,__zero_reg__
1244:lp_solve_5.5/lp_SOS.c ****       nRight = SOS_member_index(group, sosindex, variable);
 9769               		.loc 1 1244 0
 9770 3e66 4F89      		ldd r20,Y+23
 9771 3e68 588D      		ldd r21,Y+24
 9772 3e6a 2D89      		ldd r18,Y+21
 9773 3e6c 3E89      		ldd r19,Y+22
 9774 3e6e 8B89      		ldd r24,Y+19
 9775 3e70 9C89      		ldd r25,Y+20
 9776 3e72 B901      		movw r22,r18
 9777 3e74 0E94 0000 		call SOS_member_index
 9778 3e78 9887      		std Y+8,r25
 9779 3e7a 8F83      		std Y+7,r24
 9780 3e7c 00C0      		rjmp .L378
 9781               	.L377:
1245:lp_solve_5.5/lp_SOS.c ****     }
1246:lp_solve_5.5/lp_SOS.c ****     else {
1247:lp_solve_5.5/lp_SOS.c ****       nLeft  = SOS_member_index(group, sosindex, list[n+1]);
 9782               		.loc 1 1247 0
 9783 3e7e 8D85      		ldd r24,Y+13
 9784 3e80 9E85      		ldd r25,Y+14
 9785 3e82 0196      		adiw r24,1
 9786 3e84 880F      		lsl r24
 9787 3e86 991F      		rol r25
 9788 3e88 2B85      		ldd r18,Y+11
 9789 3e8a 3C85      		ldd r19,Y+12
 9790 3e8c 820F      		add r24,r18
 9791 3e8e 931F      		adc r25,r19
 9792 3e90 FC01      		movw r30,r24
 9793 3e92 4081      		ld r20,Z
 9794 3e94 5181      		ldd r21,Z+1
 9795 3e96 2D89      		ldd r18,Y+21
 9796 3e98 3E89      		ldd r19,Y+22
 9797 3e9a 8B89      		ldd r24,Y+19
 9798 3e9c 9C89      		ldd r25,Y+20
 9799 3e9e B901      		movw r22,r18
 9800 3ea0 0E94 0000 		call SOS_member_index
 9801 3ea4 9E83      		std Y+6,r25
 9802 3ea6 8D83      		std Y+5,r24
1248:lp_solve_5.5/lp_SOS.c ****       if(variable == list[n+1])
 9803               		.loc 1 1248 0
 9804 3ea8 8D85      		ldd r24,Y+13
 9805 3eaa 9E85      		ldd r25,Y+14
 9806 3eac 0196      		adiw r24,1
 9807 3eae 880F      		lsl r24
 9808 3eb0 991F      		rol r25
 9809 3eb2 2B85      		ldd r18,Y+11
 9810 3eb4 3C85      		ldd r19,Y+12
 9811 3eb6 820F      		add r24,r18
 9812 3eb8 931F      		adc r25,r19
 9813 3eba FC01      		movw r30,r24
 9814 3ebc 2081      		ld r18,Z
 9815 3ebe 3181      		ldd r19,Z+1
 9816 3ec0 8F89      		ldd r24,Y+23
 9817 3ec2 988D      		ldd r25,Y+24
 9818 3ec4 2817      		cp r18,r24
 9819 3ec6 3907      		cpc r19,r25
 9820 3ec8 01F4      		brne .L379
1249:lp_solve_5.5/lp_SOS.c ****         nRight = nLeft;
 9821               		.loc 1 1249 0
 9822 3eca 8D81      		ldd r24,Y+5
 9823 3ecc 9E81      		ldd r25,Y+6
 9824 3ece 9887      		std Y+8,r25
 9825 3ed0 8F83      		std Y+7,r24
 9826 3ed2 00C0      		rjmp .L378
 9827               	.L379:
1250:lp_solve_5.5/lp_SOS.c ****       else
1251:lp_solve_5.5/lp_SOS.c ****         nRight = SOS_member_index(group, sosindex, variable);
 9828               		.loc 1 1251 0
 9829 3ed4 4F89      		ldd r20,Y+23
 9830 3ed6 588D      		ldd r21,Y+24
 9831 3ed8 2D89      		ldd r18,Y+21
 9832 3eda 3E89      		ldd r19,Y+22
 9833 3edc 8B89      		ldd r24,Y+19
 9834 3ede 9C89      		ldd r25,Y+20
 9835 3ee0 B901      		movw r22,r18
 9836 3ee2 0E94 0000 		call SOS_member_index
 9837 3ee6 9887      		std Y+8,r25
 9838 3ee8 8F83      		std Y+7,r24
 9839               	.L378:
1252:lp_solve_5.5/lp_SOS.c ****     }
1253:lp_solve_5.5/lp_SOS.c **** 
1254:lp_solve_5.5/lp_SOS.c ****     nRight += i;  /* Loop (nRight+1)..n */
 9840               		.loc 1 1254 0
 9841 3eea 2F81      		ldd r18,Y+7
 9842 3eec 3885      		ldd r19,Y+8
 9843 3eee 8981      		ldd r24,Y+1
 9844 3ef0 9A81      		ldd r25,Y+2
 9845 3ef2 820F      		add r24,r18
 9846 3ef4 931F      		adc r25,r19
 9847 3ef6 9887      		std Y+8,r25
 9848 3ef8 8F83      		std Y+7,r24
1255:lp_solve_5.5/lp_SOS.c **** 
1256:lp_solve_5.5/lp_SOS.c ****    /* Fix variables outside of the free SOS variable window */
1257:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i < n; i++)  {
 9849               		.loc 1 1257 0
 9850 3efa 81E0      		ldi r24,lo8(1)
 9851 3efc 90E0      		ldi r25,0
 9852 3efe 9A83      		std Y+2,r25
 9853 3f00 8983      		std Y+1,r24
 9854 3f02 00C0      		rjmp .L380
 9855               	.L392:
1258:lp_solve_5.5/lp_SOS.c ****      /* Skip the SOS variable window */
1259:lp_solve_5.5/lp_SOS.c ****       if((i >= nLeft) && (i <= nRight))
 9856               		.loc 1 1259 0
 9857 3f04 2981      		ldd r18,Y+1
 9858 3f06 3A81      		ldd r19,Y+2
 9859 3f08 8D81      		ldd r24,Y+5
 9860 3f0a 9E81      		ldd r25,Y+6
 9861 3f0c 2817      		cp r18,r24
 9862 3f0e 3907      		cpc r19,r25
 9863 3f10 04F0      		brlt .L381
 9864               		.loc 1 1259 0 is_stmt 0 discriminator 1
 9865 3f12 2981      		ldd r18,Y+1
 9866 3f14 3A81      		ldd r19,Y+2
 9867 3f16 8F81      		ldd r24,Y+7
 9868 3f18 9885      		ldd r25,Y+8
 9869 3f1a 8217      		cp r24,r18
 9870 3f1c 9307      		cpc r25,r19
 9871 3f1e 04F0      		brlt .+2
 9872 3f20 00C0      		rjmp .L398
 9873               	.L381:
1260:lp_solve_5.5/lp_SOS.c ****         continue;
1261:lp_solve_5.5/lp_SOS.c ****      /* Otherwise proceed to set bound */
1262:lp_solve_5.5/lp_SOS.c ****       ii = list[i];
 9874               		.loc 1 1262 0 is_stmt 1
 9875 3f22 8981      		ldd r24,Y+1
 9876 3f24 9A81      		ldd r25,Y+2
 9877 3f26 880F      		lsl r24
 9878 3f28 991F      		rol r25
 9879 3f2a 2B85      		ldd r18,Y+11
 9880 3f2c 3C85      		ldd r19,Y+12
 9881 3f2e 820F      		add r24,r18
 9882 3f30 931F      		adc r25,r19
 9883 3f32 FC01      		movw r30,r24
 9884 3f34 8081      		ld r24,Z
 9885 3f36 9181      		ldd r25,Z+1
 9886 3f38 9A8B      		std Y+18,r25
 9887 3f3a 898B      		std Y+17,r24
1263:lp_solve_5.5/lp_SOS.c ****       if(ii > 0) {
 9888               		.loc 1 1263 0
 9889 3f3c 8989      		ldd r24,Y+17
 9890 3f3e 9A89      		ldd r25,Y+18
 9891 3f40 1816      		cp __zero_reg__,r24
 9892 3f42 1906      		cpc __zero_reg__,r25
 9893 3f44 04F0      		brlt .+2
 9894 3f46 00C0      		rjmp .L382
1264:lp_solve_5.5/lp_SOS.c ****         ii += lp->rows;
 9895               		.loc 1 1264 0
 9896 3f48 8985      		ldd r24,Y+9
 9897 3f4a 9A85      		ldd r25,Y+10
 9898 3f4c 8651      		subi r24,22
 9899 3f4e 9E4F      		sbci r25,-2
 9900 3f50 FC01      		movw r30,r24
 9901 3f52 8081      		ld r24,Z
 9902 3f54 9181      		ldd r25,Z+1
 9903 3f56 2989      		ldd r18,Y+17
 9904 3f58 3A89      		ldd r19,Y+18
 9905 3f5a 820F      		add r24,r18
 9906 3f5c 931F      		adc r25,r19
 9907 3f5e 9A8B      		std Y+18,r25
 9908 3f60 898B      		std Y+17,r24
1265:lp_solve_5.5/lp_SOS.c ****         if(bound[ii] != value) {
 9909               		.loc 1 1265 0
 9910 3f62 8989      		ldd r24,Y+17
 9911 3f64 9A89      		ldd r25,Y+18
 9912 3f66 880F      		lsl r24
 9913 3f68 991F      		rol r25
 9914 3f6a 880F      		lsl r24
 9915 3f6c 991F      		rol r25
 9916 3f6e 298D      		ldd r18,Y+25
 9917 3f70 3A8D      		ldd r19,Y+26
 9918 3f72 820F      		add r24,r18
 9919 3f74 931F      		adc r25,r19
 9920 3f76 FC01      		movw r30,r24
 9921 3f78 8081      		ld r24,Z
 9922 3f7a 9181      		ldd r25,Z+1
 9923 3f7c A281      		ldd r26,Z+2
 9924 3f7e B381      		ldd r27,Z+3
 9925 3f80 2B8D      		ldd r18,Y+27
 9926 3f82 3C8D      		ldd r19,Y+28
 9927 3f84 4D8D      		ldd r20,Y+29
 9928 3f86 5E8D      		ldd r21,Y+30
 9929 3f88 BC01      		movw r22,r24
 9930 3f8a CD01      		movw r24,r26
 9931 3f8c 0E94 0000 		call __nesf2
 9932 3f90 8823      		tst r24
 9933 3f92 01F4      		brne .+2
 9934 3f94 00C0      		rjmp .L383
1266:lp_solve_5.5/lp_SOS.c ****          /* Verify that we don't violate original bounds */
1267:lp_solve_5.5/lp_SOS.c ****           if(isupper && (value < lp->orig_lowbo[ii]))
 9935               		.loc 1 1267 0
 9936 3f96 8F8D      		ldd r24,Y+31
 9937 3f98 8823      		tst r24
 9938 3f9a 01F0      		breq .L385
 9939               		.loc 1 1267 0 is_stmt 0 discriminator 1
 9940 3f9c 8985      		ldd r24,Y+9
 9941 3f9e 9A85      		ldd r25,Y+10
 9942 3fa0 8E54      		subi r24,78
 9943 3fa2 9D4F      		sbci r25,-3
 9944 3fa4 FC01      		movw r30,r24
 9945 3fa6 2081      		ld r18,Z
 9946 3fa8 3181      		ldd r19,Z+1
 9947 3faa 8989      		ldd r24,Y+17
 9948 3fac 9A89      		ldd r25,Y+18
 9949 3fae 880F      		lsl r24
 9950 3fb0 991F      		rol r25
 9951 3fb2 880F      		lsl r24
 9952 3fb4 991F      		rol r25
 9953 3fb6 820F      		add r24,r18
 9954 3fb8 931F      		adc r25,r19
 9955 3fba FC01      		movw r30,r24
 9956 3fbc 8081      		ld r24,Z
 9957 3fbe 9181      		ldd r25,Z+1
 9958 3fc0 A281      		ldd r26,Z+2
 9959 3fc2 B381      		ldd r27,Z+3
 9960 3fc4 2B8D      		ldd r18,Y+27
 9961 3fc6 3C8D      		ldd r19,Y+28
 9962 3fc8 4D8D      		ldd r20,Y+29
 9963 3fca 5E8D      		ldd r21,Y+30
 9964 3fcc BC01      		movw r22,r24
 9965 3fce CD01      		movw r24,r26
 9966 3fd0 0E94 0000 		call __gtsf2
 9967 3fd4 1816      		cp __zero_reg__,r24
 9968 3fd6 04F4      		brge .L385
1268:lp_solve_5.5/lp_SOS.c ****             return(-ii);
 9969               		.loc 1 1268 0 is_stmt 1
 9970 3fd8 8989      		ldd r24,Y+17
 9971 3fda 9A89      		ldd r25,Y+18
 9972 3fdc 9195      		neg r25
 9973 3fde 8195      		neg r24
 9974 3fe0 9109      		sbc r25,__zero_reg__
 9975 3fe2 00C0      		rjmp .L387
 9976               	.L385:
1269:lp_solve_5.5/lp_SOS.c ****           else if(!isupper && (value > lp->orig_upbo[ii]))
 9977               		.loc 1 1269 0
 9978 3fe4 8F8D      		ldd r24,Y+31
 9979 3fe6 8823      		tst r24
 9980 3fe8 01F4      		brne .L388
 9981               		.loc 1 1269 0 is_stmt 0 discriminator 1
 9982 3fea 8985      		ldd r24,Y+9
 9983 3fec 9A85      		ldd r25,Y+10
 9984 3fee 8255      		subi r24,82
 9985 3ff0 9D4F      		sbci r25,-3
 9986 3ff2 FC01      		movw r30,r24
 9987 3ff4 2081      		ld r18,Z
 9988 3ff6 3181      		ldd r19,Z+1
 9989 3ff8 8989      		ldd r24,Y+17
 9990 3ffa 9A89      		ldd r25,Y+18
 9991 3ffc 880F      		lsl r24
 9992 3ffe 991F      		rol r25
 9993 4000 880F      		lsl r24
 9994 4002 991F      		rol r25
 9995 4004 820F      		add r24,r18
 9996 4006 931F      		adc r25,r19
 9997 4008 FC01      		movw r30,r24
 9998 400a 8081      		ld r24,Z
 9999 400c 9181      		ldd r25,Z+1
 10000 400e A281      		ldd r26,Z+2
 10001 4010 B381      		ldd r27,Z+3
 10002 4012 2B8D      		ldd r18,Y+27
 10003 4014 3C8D      		ldd r19,Y+28
 10004 4016 4D8D      		ldd r20,Y+29
 10005 4018 5E8D      		ldd r21,Y+30
 10006 401a BC01      		movw r22,r24
 10007 401c CD01      		movw r24,r26
 10008 401e 0E94 0000 		call __ltsf2
 10009 4022 8823      		tst r24
 10010 4024 04F4      		brge .L388
1270:lp_solve_5.5/lp_SOS.c ****             return(-ii);
 10011               		.loc 1 1270 0 is_stmt 1
 10012 4026 8989      		ldd r24,Y+17
 10013 4028 9A89      		ldd r25,Y+18
 10014 402a 9195      		neg r25
 10015 402c 8195      		neg r24
 10016 402e 9109      		sbc r25,__zero_reg__
 10017 4030 00C0      		rjmp .L387
 10018               	.L388:
1271:lp_solve_5.5/lp_SOS.c ****          /* OK, set the new bound */
1272:lp_solve_5.5/lp_SOS.c ****           count++;
 10019               		.loc 1 1272 0
 10020 4032 8B81      		ldd r24,Y+3
 10021 4034 9C81      		ldd r25,Y+4
 10022 4036 0196      		adiw r24,1
 10023 4038 9C83      		std Y+4,r25
 10024 403a 8B83      		std Y+3,r24
1273:lp_solve_5.5/lp_SOS.c ****           if(changelog == NULL)
 10025               		.loc 1 1273 0
 10026 403c 8AA1      		ldd r24,Y+34
 10027 403e 9BA1      		ldd r25,Y+35
 10028 4040 892B      		or r24,r25
 10029 4042 01F4      		brne .L390
1274:lp_solve_5.5/lp_SOS.c ****             bound[ii] = value;
 10030               		.loc 1 1274 0
 10031 4044 8989      		ldd r24,Y+17
 10032 4046 9A89      		ldd r25,Y+18
 10033 4048 880F      		lsl r24
 10034 404a 991F      		rol r25
 10035 404c 880F      		lsl r24
 10036 404e 991F      		rol r25
 10037 4050 298D      		ldd r18,Y+25
 10038 4052 3A8D      		ldd r19,Y+26
 10039 4054 280F      		add r18,r24
 10040 4056 391F      		adc r19,r25
 10041 4058 8B8D      		ldd r24,Y+27
 10042 405a 9C8D      		ldd r25,Y+28
 10043 405c AD8D      		ldd r26,Y+29
 10044 405e BE8D      		ldd r27,Y+30
 10045 4060 F901      		movw r30,r18
 10046 4062 8083      		st Z,r24
 10047 4064 9183      		std Z+1,r25
 10048 4066 A283      		std Z+2,r26
 10049 4068 B383      		std Z+3,r27
 10050 406a 00C0      		rjmp .L383
 10051               	.L390:
1275:lp_solve_5.5/lp_SOS.c ****           else
1276:lp_solve_5.5/lp_SOS.c ****             modifyUndoLadder(changelog, ii, bound, value);
 10052               		.loc 1 1276 0
 10053 406c 8B8D      		ldd r24,Y+27
 10054 406e 9C8D      		ldd r25,Y+28
 10055 4070 AD8D      		ldd r26,Y+29
 10056 4072 BE8D      		ldd r27,Y+30
 10057 4074 498D      		ldd r20,Y+25
 10058 4076 5A8D      		ldd r21,Y+26
 10059 4078 6989      		ldd r22,Y+17
 10060 407a 7A89      		ldd r23,Y+18
 10061 407c EAA1      		ldd r30,Y+34
 10062 407e FBA1      		ldd r31,Y+35
 10063 4080 8C01      		movw r16,r24
 10064 4082 9D01      		movw r18,r26
 10065 4084 CF01      		movw r24,r30
 10066 4086 0E94 0000 		call modifyUndoLadder
 10067               	.L383:
1277:lp_solve_5.5/lp_SOS.c **** 
1278:lp_solve_5.5/lp_SOS.c ****         }
1279:lp_solve_5.5/lp_SOS.c ****         if((diffcount != NULL) && (lp->solution[ii] != value))
 10068               		.loc 1 1279 0
 10069 408a 88A1      		ldd r24,Y+32
 10070 408c 99A1      		ldd r25,Y+33
 10071 408e 892B      		or r24,r25
 10072 4090 01F0      		breq .L382
 10073               		.loc 1 1279 0 is_stmt 0 discriminator 1
 10074 4092 8985      		ldd r24,Y+9
 10075 4094 9A85      		ldd r25,Y+10
 10076 4096 8E5E      		subi r24,-18
 10077 4098 9D4F      		sbci r25,-3
 10078 409a FC01      		movw r30,r24
 10079 409c 2081      		ld r18,Z
 10080 409e 3181      		ldd r19,Z+1
 10081 40a0 8989      		ldd r24,Y+17
 10082 40a2 9A89      		ldd r25,Y+18
 10083 40a4 880F      		lsl r24
 10084 40a6 991F      		rol r25
 10085 40a8 880F      		lsl r24
 10086 40aa 991F      		rol r25
 10087 40ac 820F      		add r24,r18
 10088 40ae 931F      		adc r25,r19
 10089 40b0 FC01      		movw r30,r24
 10090 40b2 8081      		ld r24,Z
 10091 40b4 9181      		ldd r25,Z+1
 10092 40b6 A281      		ldd r26,Z+2
 10093 40b8 B381      		ldd r27,Z+3
 10094 40ba 2B8D      		ldd r18,Y+27
 10095 40bc 3C8D      		ldd r19,Y+28
 10096 40be 4D8D      		ldd r20,Y+29
 10097 40c0 5E8D      		ldd r21,Y+30
 10098 40c2 BC01      		movw r22,r24
 10099 40c4 CD01      		movw r24,r26
 10100 40c6 0E94 0000 		call __nesf2
 10101 40ca 8823      		tst r24
 10102 40cc 01F0      		breq .L382
1280:lp_solve_5.5/lp_SOS.c ****           (*diffcount)++;
 10103               		.loc 1 1280 0 is_stmt 1
 10104 40ce 88A1      		ldd r24,Y+32
 10105 40d0 99A1      		ldd r25,Y+33
 10106 40d2 FC01      		movw r30,r24
 10107 40d4 8081      		ld r24,Z
 10108 40d6 9181      		ldd r25,Z+1
 10109 40d8 9C01      		movw r18,r24
 10110 40da 2F5F      		subi r18,-1
 10111 40dc 3F4F      		sbci r19,-1
 10112 40de 88A1      		ldd r24,Y+32
 10113 40e0 99A1      		ldd r25,Y+33
 10114 40e2 FC01      		movw r30,r24
 10115 40e4 3183      		std Z+1,r19
 10116 40e6 2083      		st Z,r18
 10117 40e8 00C0      		rjmp .L382
 10118               	.L398:
1260:lp_solve_5.5/lp_SOS.c ****      /* Otherwise proceed to set bound */
 10119               		.loc 1 1260 0
 10120 40ea 0000      		nop
 10121               	.L382:
1257:lp_solve_5.5/lp_SOS.c ****      /* Skip the SOS variable window */
 10122               		.loc 1 1257 0 discriminator 2
 10123 40ec 8981      		ldd r24,Y+1
 10124 40ee 9A81      		ldd r25,Y+2
 10125 40f0 0196      		adiw r24,1
 10126 40f2 9A83      		std Y+2,r25
 10127 40f4 8983      		std Y+1,r24
 10128               	.L380:
1257:lp_solve_5.5/lp_SOS.c ****      /* Skip the SOS variable window */
 10129               		.loc 1 1257 0 is_stmt 0 discriminator 1
 10130 40f6 2981      		ldd r18,Y+1
 10131 40f8 3A81      		ldd r19,Y+2
 10132 40fa 8D85      		ldd r24,Y+13
 10133 40fc 9E85      		ldd r25,Y+14
 10134 40fe 2817      		cp r18,r24
 10135 4100 3907      		cpc r19,r25
 10136 4102 04F4      		brge .+2
 10137 4104 00C0      		rjmp .L392
 10138               	.L372:
1281:lp_solve_5.5/lp_SOS.c ****       }
1282:lp_solve_5.5/lp_SOS.c ****     }
1283:lp_solve_5.5/lp_SOS.c ****   }
1284:lp_solve_5.5/lp_SOS.c ****   return(count);
 10139               		.loc 1 1284 0 is_stmt 1
 10140 4106 8B81      		ldd r24,Y+3
 10141 4108 9C81      		ldd r25,Y+4
 10142               	.L387:
 10143               	/* epilogue start */
1285:lp_solve_5.5/lp_SOS.c **** }
 10144               		.loc 1 1285 0
 10145 410a A396      		adiw r28,35
 10146 410c 0FB6      		in __tmp_reg__,__SREG__
 10147 410e F894      		cli
 10148 4110 DEBF      		out __SP_H__,r29
 10149 4112 0FBE      		out __SREG__,__tmp_reg__
 10150 4114 CDBF      		out __SP_L__,r28
 10151 4116 DF91      		pop r29
 10152 4118 CF91      		pop r28
 10153 411a 1F91      		pop r17
 10154 411c 0F91      		pop r16
 10155 411e FF90      		pop r15
 10156 4120 EF90      		pop r14
 10157 4122 CF90      		pop r12
 10158 4124 BF90      		pop r11
 10159 4126 AF90      		pop r10
 10160 4128 9F90      		pop r9
 10161 412a 8F90      		pop r8
 10162 412c 0895      		ret
 10163               		.cfi_endproc
 10164               	.LFE36:
 10166               		.section	.rodata
 10167               	.LC3:
 10168 00ad 534F 535F 		.string	"SOS_get_candidates: Invalid non-zero lower bound setting\n"
 10168      6765 745F 
 10168      6361 6E64 
 10168      6964 6174 
 10168      6573 3A20 
 10169               		.text
 10170               	.global	SOS_get_candidates
 10172               	SOS_get_candidates:
 10173               	.LFB37:
1286:lp_solve_5.5/lp_SOS.c **** 
1287:lp_solve_5.5/lp_SOS.c **** int *SOS_get_candidates(SOSgroup *group, int sosindex, int column, MYBOOL excludetarget,
1288:lp_solve_5.5/lp_SOS.c ****                         REAL *upbound, REAL *lobound)
1289:lp_solve_5.5/lp_SOS.c **** {
 10174               		.loc 1 1289 0
 10175               		.cfi_startproc
 10176 412e EF92      		push r14
 10177               	.LCFI147:
 10178               		.cfi_def_cfa_offset 3
 10179               		.cfi_offset 14, -2
 10180 4130 FF92      		push r15
 10181               	.LCFI148:
 10182               		.cfi_def_cfa_offset 4
 10183               		.cfi_offset 15, -3
 10184 4132 0F93      		push r16
 10185               	.LCFI149:
 10186               		.cfi_def_cfa_offset 5
 10187               		.cfi_offset 16, -4
 10188 4134 1F93      		push r17
 10189               	.LCFI150:
 10190               		.cfi_def_cfa_offset 6
 10191               		.cfi_offset 17, -5
 10192 4136 CF93      		push r28
 10193               	.LCFI151:
 10194               		.cfi_def_cfa_offset 7
 10195               		.cfi_offset 28, -6
 10196 4138 DF93      		push r29
 10197               	.LCFI152:
 10198               		.cfi_def_cfa_offset 8
 10199               		.cfi_offset 29, -7
 10200 413a CDB7      		in r28,__SP_L__
 10201 413c DEB7      		in r29,__SP_H__
 10202               	.LCFI153:
 10203               		.cfi_def_cfa_register 28
 10204 413e 6B97      		sbiw r28,27
 10205               	.LCFI154:
 10206               		.cfi_def_cfa_offset 35
 10207 4140 0FB6      		in __tmp_reg__,__SREG__
 10208 4142 F894      		cli
 10209 4144 DEBF      		out __SP_H__,r29
 10210 4146 0FBE      		out __SREG__,__tmp_reg__
 10211 4148 CDBF      		out __SP_L__,r28
 10212               	/* prologue: function */
 10213               	/* frame size = 27 */
 10214               	/* stack size = 33 */
 10215               	.L__stack_usage = 33
 10216 414a 9A8B      		std Y+18,r25
 10217 414c 898B      		std Y+17,r24
 10218 414e 7C8B      		std Y+20,r23
 10219 4150 6B8B      		std Y+19,r22
 10220 4152 5E8B      		std Y+22,r21
 10221 4154 4D8B      		std Y+21,r20
 10222 4156 2F8B      		std Y+23,r18
 10223 4158 198F      		std Y+25,r17
 10224 415a 088F      		std Y+24,r16
 10225 415c FB8E      		std Y+27,r15
 10226 415e EA8E      		std Y+26,r14
1290:lp_solve_5.5/lp_SOS.c ****   int    i, ii, j, n, nn = 0, *list, *candidates = NULL;
 10227               		.loc 1 1290 0
 10228 4160 1886      		std Y+8,__zero_reg__
 10229 4162 1F82      		std Y+7,__zero_reg__
 10230 4164 188A      		std Y+16,__zero_reg__
 10231 4166 1F86      		std Y+15,__zero_reg__
1291:lp_solve_5.5/lp_SOS.c ****   lprec  *lp = group->lp;
 10232               		.loc 1 1291 0
 10233 4168 8989      		ldd r24,Y+17
 10234 416a 9A89      		ldd r25,Y+18
 10235 416c FC01      		movw r30,r24
 10236 416e 8081      		ld r24,Z
 10237 4170 9181      		ldd r25,Z+1
 10238 4172 9A87      		std Y+10,r25
 10239 4174 8987      		std Y+9,r24
1292:lp_solve_5.5/lp_SOS.c **** 
1293:lp_solve_5.5/lp_SOS.c ****   if(group == NULL)
 10240               		.loc 1 1293 0
 10241 4176 8989      		ldd r24,Y+17
 10242 4178 9A89      		ldd r25,Y+18
 10243 417a 892B      		or r24,r25
 10244 417c 01F4      		brne .L400
1294:lp_solve_5.5/lp_SOS.c ****     return( candidates );
 10245               		.loc 1 1294 0
 10246 417e 8F85      		ldd r24,Y+15
 10247 4180 9889      		ldd r25,Y+16
 10248 4182 00C0      		rjmp .L422
 10249               	.L400:
1295:lp_solve_5.5/lp_SOS.c **** 
1296:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
1297:lp_solve_5.5/lp_SOS.c ****   if(sosindex > group->sos_count) {
1298:lp_solve_5.5/lp_SOS.c ****     report(lp, IMPORTANT, "SOS_get_candidates: Invalid index %d\n", sosindex);
1299:lp_solve_5.5/lp_SOS.c ****     return( candidates );
1300:lp_solve_5.5/lp_SOS.c ****   }
1301:lp_solve_5.5/lp_SOS.c **** #endif
1302:lp_solve_5.5/lp_SOS.c **** 
1303:lp_solve_5.5/lp_SOS.c ****   /* Determine SOS target(s); note that if "sosindex" is negative, only
1304:lp_solve_5.5/lp_SOS.c ****      the first non-empty SOS where "column" is a member is processed */
1305:lp_solve_5.5/lp_SOS.c ****   if(sosindex <= 0) {
 10250               		.loc 1 1305 0
 10251 4184 8B89      		ldd r24,Y+19
 10252 4186 9C89      		ldd r25,Y+20
 10253 4188 1816      		cp __zero_reg__,r24
 10254 418a 1906      		cpc __zero_reg__,r25
 10255 418c 04F0      		brlt .L402
1306:lp_solve_5.5/lp_SOS.c ****     i = 0;
 10256               		.loc 1 1306 0
 10257 418e 1A82      		std Y+2,__zero_reg__
 10258 4190 1982      		std Y+1,__zero_reg__
1307:lp_solve_5.5/lp_SOS.c ****     ii = group->sos_count;
 10259               		.loc 1 1307 0
 10260 4192 8989      		ldd r24,Y+17
 10261 4194 9A89      		ldd r25,Y+18
 10262 4196 FC01      		movw r30,r24
 10263 4198 8681      		ldd r24,Z+6
 10264 419a 9781      		ldd r25,Z+7
 10265 419c 9C83      		std Y+4,r25
 10266 419e 8B83      		std Y+3,r24
 10267 41a0 00C0      		rjmp .L403
 10268               	.L402:
1308:lp_solve_5.5/lp_SOS.c ****   }
1309:lp_solve_5.5/lp_SOS.c ****   else {
1310:lp_solve_5.5/lp_SOS.c ****     i = sosindex - 1;
 10269               		.loc 1 1310 0
 10270 41a2 8B89      		ldd r24,Y+19
 10271 41a4 9C89      		ldd r25,Y+20
 10272 41a6 0197      		sbiw r24,1
 10273 41a8 9A83      		std Y+2,r25
 10274 41aa 8983      		std Y+1,r24
1311:lp_solve_5.5/lp_SOS.c ****     ii = sosindex;
 10275               		.loc 1 1311 0
 10276 41ac 8B89      		ldd r24,Y+19
 10277 41ae 9C89      		ldd r25,Y+20
 10278 41b0 9C83      		std Y+4,r25
 10279 41b2 8B83      		std Y+3,r24
 10280               	.L403:
1312:lp_solve_5.5/lp_SOS.c ****   }
1313:lp_solve_5.5/lp_SOS.c **** 
1314:lp_solve_5.5/lp_SOS.c ****   /* Tally candidate usage */
1315:lp_solve_5.5/lp_SOS.c ****   allocINT(lp, &candidates, lp->columns+1, TRUE);
 10281               		.loc 1 1315 0
 10282 41b4 8985      		ldd r24,Y+9
 10283 41b6 9A85      		ldd r25,Y+10
 10284 41b8 8451      		subi r24,20
 10285 41ba 9E4F      		sbci r25,-2
 10286 41bc FC01      		movw r30,r24
 10287 41be 8081      		ld r24,Z
 10288 41c0 9181      		ldd r25,Z+1
 10289 41c2 AC01      		movw r20,r24
 10290 41c4 4F5F      		subi r20,-1
 10291 41c6 5F4F      		sbci r21,-1
 10292 41c8 BE01      		movw r22,r28
 10293 41ca 615F      		subi r22,-15
 10294 41cc 7F4F      		sbci r23,-1
 10295 41ce 8985      		ldd r24,Y+9
 10296 41d0 9A85      		ldd r25,Y+10
 10297 41d2 21E0      		ldi r18,lo8(1)
 10298 41d4 0E94 0000 		call allocINT
1316:lp_solve_5.5/lp_SOS.c ****   for(; i < ii; i++) {
 10299               		.loc 1 1316 0
 10300 41d8 00C0      		rjmp .L404
 10301               	.L416:
1317:lp_solve_5.5/lp_SOS.c ****     if(!SOS_is_member(group, i+1, column))
 10302               		.loc 1 1317 0
 10303 41da 8981      		ldd r24,Y+1
 10304 41dc 9A81      		ldd r25,Y+2
 10305 41de 9C01      		movw r18,r24
 10306 41e0 2F5F      		subi r18,-1
 10307 41e2 3F4F      		sbci r19,-1
 10308 41e4 4D89      		ldd r20,Y+21
 10309 41e6 5E89      		ldd r21,Y+22
 10310 41e8 8989      		ldd r24,Y+17
 10311 41ea 9A89      		ldd r25,Y+18
 10312 41ec B901      		movw r22,r18
 10313 41ee 0E94 0000 		call SOS_is_member
 10314 41f2 892B      		or r24,r25
 10315 41f4 01F4      		brne .+2
 10316 41f6 00C0      		rjmp .L426
1318:lp_solve_5.5/lp_SOS.c ****       continue;
1319:lp_solve_5.5/lp_SOS.c ****     list = group->sos_list[i]->members;
 10317               		.loc 1 1319 0
 10318 41f8 8989      		ldd r24,Y+17
 10319 41fa 9A89      		ldd r25,Y+18
 10320 41fc FC01      		movw r30,r24
 10321 41fe 2281      		ldd r18,Z+2
 10322 4200 3381      		ldd r19,Z+3
 10323 4202 8981      		ldd r24,Y+1
 10324 4204 9A81      		ldd r25,Y+2
 10325 4206 880F      		lsl r24
 10326 4208 991F      		rol r25
 10327 420a 820F      		add r24,r18
 10328 420c 931F      		adc r25,r19
 10329 420e FC01      		movw r30,r24
 10330 4210 8081      		ld r24,Z
 10331 4212 9181      		ldd r25,Z+1
 10332 4214 FC01      		movw r30,r24
 10333 4216 8585      		ldd r24,Z+13
 10334 4218 9685      		ldd r25,Z+14
 10335 421a 9C87      		std Y+12,r25
 10336 421c 8B87      		std Y+11,r24
1320:lp_solve_5.5/lp_SOS.c ****     n = list[0];
 10337               		.loc 1 1320 0
 10338 421e 8B85      		ldd r24,Y+11
 10339 4220 9C85      		ldd r25,Y+12
 10340 4222 FC01      		movw r30,r24
 10341 4224 8081      		ld r24,Z
 10342 4226 9181      		ldd r25,Z+1
 10343 4228 9E83      		std Y+6,r25
 10344 422a 8D83      		std Y+5,r24
1321:lp_solve_5.5/lp_SOS.c ****     while(n > 0) {
 10345               		.loc 1 1321 0
 10346 422c 00C0      		rjmp .L407
 10347               	.L414:
1322:lp_solve_5.5/lp_SOS.c ****       j = list[n];
 10348               		.loc 1 1322 0
 10349 422e 8D81      		ldd r24,Y+5
 10350 4230 9E81      		ldd r25,Y+6
 10351 4232 880F      		lsl r24
 10352 4234 991F      		rol r25
 10353 4236 2B85      		ldd r18,Y+11
 10354 4238 3C85      		ldd r19,Y+12
 10355 423a 820F      		add r24,r18
 10356 423c 931F      		adc r25,r19
 10357 423e FC01      		movw r30,r24
 10358 4240 8081      		ld r24,Z
 10359 4242 9181      		ldd r25,Z+1
 10360 4244 9E87      		std Y+14,r25
 10361 4246 8D87      		std Y+13,r24
1323:lp_solve_5.5/lp_SOS.c ****       if((j > 0) && (upbound[lp->rows+j] > 0)) {
 10362               		.loc 1 1323 0
 10363 4248 8D85      		ldd r24,Y+13
 10364 424a 9E85      		ldd r25,Y+14
 10365 424c 1816      		cp __zero_reg__,r24
 10366 424e 1906      		cpc __zero_reg__,r25
 10367 4250 04F0      		brlt .+2
 10368 4252 00C0      		rjmp .L408
 10369               		.loc 1 1323 0 is_stmt 0 discriminator 1
 10370 4254 8985      		ldd r24,Y+9
 10371 4256 9A85      		ldd r25,Y+10
 10372 4258 8651      		subi r24,22
 10373 425a 9E4F      		sbci r25,-2
 10374 425c FC01      		movw r30,r24
 10375 425e 2081      		ld r18,Z
 10376 4260 3181      		ldd r19,Z+1
 10377 4262 8D85      		ldd r24,Y+13
 10378 4264 9E85      		ldd r25,Y+14
 10379 4266 820F      		add r24,r18
 10380 4268 931F      		adc r25,r19
 10381 426a 880F      		lsl r24
 10382 426c 991F      		rol r25
 10383 426e 880F      		lsl r24
 10384 4270 991F      		rol r25
 10385 4272 288D      		ldd r18,Y+24
 10386 4274 398D      		ldd r19,Y+25
 10387 4276 820F      		add r24,r18
 10388 4278 931F      		adc r25,r19
 10389 427a FC01      		movw r30,r24
 10390 427c 8081      		ld r24,Z
 10391 427e 9181      		ldd r25,Z+1
 10392 4280 A281      		ldd r26,Z+2
 10393 4282 B381      		ldd r27,Z+3
 10394 4284 20E0      		ldi r18,0
 10395 4286 30E0      		ldi r19,0
 10396 4288 A901      		movw r20,r18
 10397 428a BC01      		movw r22,r24
 10398 428c CD01      		movw r24,r26
 10399 428e 0E94 0000 		call __gtsf2
 10400 4292 1816      		cp __zero_reg__,r24
 10401 4294 04F0      		brlt .+2
 10402 4296 00C0      		rjmp .L408
1324:lp_solve_5.5/lp_SOS.c ****         if(lobound[lp->rows+j] > 0) {
 10403               		.loc 1 1324 0 is_stmt 1
 10404 4298 8985      		ldd r24,Y+9
 10405 429a 9A85      		ldd r25,Y+10
 10406 429c 8651      		subi r24,22
 10407 429e 9E4F      		sbci r25,-2
 10408 42a0 FC01      		movw r30,r24
 10409 42a2 2081      		ld r18,Z
 10410 42a4 3181      		ldd r19,Z+1
 10411 42a6 8D85      		ldd r24,Y+13
 10412 42a8 9E85      		ldd r25,Y+14
 10413 42aa 820F      		add r24,r18
 10414 42ac 931F      		adc r25,r19
 10415 42ae 880F      		lsl r24
 10416 42b0 991F      		rol r25
 10417 42b2 880F      		lsl r24
 10418 42b4 991F      		rol r25
 10419 42b6 2A8D      		ldd r18,Y+26
 10420 42b8 3B8D      		ldd r19,Y+27
 10421 42ba 820F      		add r24,r18
 10422 42bc 931F      		adc r25,r19
 10423 42be FC01      		movw r30,r24
 10424 42c0 8081      		ld r24,Z
 10425 42c2 9181      		ldd r25,Z+1
 10426 42c4 A281      		ldd r26,Z+2
 10427 42c6 B381      		ldd r27,Z+3
 10428 42c8 20E0      		ldi r18,0
 10429 42ca 30E0      		ldi r19,0
 10430 42cc A901      		movw r20,r18
 10431 42ce BC01      		movw r22,r24
 10432 42d0 CD01      		movw r24,r26
 10433 42d2 0E94 0000 		call __gtsf2
 10434 42d6 1816      		cp __zero_reg__,r24
 10435 42d8 04F4      		brge .L425
1325:lp_solve_5.5/lp_SOS.c ****           report(lp, IMPORTANT, "SOS_get_candidates: Invalid non-zero lower bound setting\n");
 10436               		.loc 1 1325 0
 10437 42da 80E0      		ldi r24,lo8(.LC3)
 10438 42dc 90E0      		ldi r25,hi8(.LC3)
 10439 42de 892F      		mov r24,r25
 10440 42e0 8F93      		push r24
 10441 42e2 80E0      		ldi r24,lo8(.LC3)
 10442 42e4 90E0      		ldi r25,hi8(.LC3)
 10443 42e6 8F93      		push r24
 10444 42e8 1F92      		push __zero_reg__
 10445 42ea 83E0      		ldi r24,lo8(3)
 10446 42ec 8F93      		push r24
 10447 42ee 8A85      		ldd r24,Y+10
 10448 42f0 8F93      		push r24
 10449 42f2 8985      		ldd r24,Y+9
 10450 42f4 8F93      		push r24
 10451 42f6 0E94 0000 		call report
 10452 42fa 0F90      		pop __tmp_reg__
 10453 42fc 0F90      		pop __tmp_reg__
 10454 42fe 0F90      		pop __tmp_reg__
 10455 4300 0F90      		pop __tmp_reg__
 10456 4302 0F90      		pop __tmp_reg__
 10457 4304 0F90      		pop __tmp_reg__
1326:lp_solve_5.5/lp_SOS.c ****           n = 0;
 10458               		.loc 1 1326 0
 10459 4306 1E82      		std Y+6,__zero_reg__
 10460 4308 1D82      		std Y+5,__zero_reg__
1327:lp_solve_5.5/lp_SOS.c ****           goto Finish;
 10461               		.loc 1 1327 0
 10462 430a 00C0      		rjmp .L412
 10463               	.L425:
1328:lp_solve_5.5/lp_SOS.c ****         }
1329:lp_solve_5.5/lp_SOS.c ****         if(candidates[j] == 0)
 10464               		.loc 1 1329 0
 10465 430c 2F85      		ldd r18,Y+15
 10466 430e 3889      		ldd r19,Y+16
 10467 4310 8D85      		ldd r24,Y+13
 10468 4312 9E85      		ldd r25,Y+14
 10469 4314 880F      		lsl r24
 10470 4316 991F      		rol r25
 10471 4318 820F      		add r24,r18
 10472 431a 931F      		adc r25,r19
 10473 431c FC01      		movw r30,r24
 10474 431e 8081      		ld r24,Z
 10475 4320 9181      		ldd r25,Z+1
 10476 4322 892B      		or r24,r25
 10477 4324 01F4      		brne .L413
1330:lp_solve_5.5/lp_SOS.c ****           nn++;
 10478               		.loc 1 1330 0
 10479 4326 8F81      		ldd r24,Y+7
 10480 4328 9885      		ldd r25,Y+8
 10481 432a 0196      		adiw r24,1
 10482 432c 9887      		std Y+8,r25
 10483 432e 8F83      		std Y+7,r24
 10484               	.L413:
1331:lp_solve_5.5/lp_SOS.c ****         candidates[j]++;
 10485               		.loc 1 1331 0
 10486 4330 2F85      		ldd r18,Y+15
 10487 4332 3889      		ldd r19,Y+16
 10488 4334 8D85      		ldd r24,Y+13
 10489 4336 9E85      		ldd r25,Y+14
 10490 4338 880F      		lsl r24
 10491 433a 991F      		rol r25
 10492 433c 820F      		add r24,r18
 10493 433e 931F      		adc r25,r19
 10494 4340 FC01      		movw r30,r24
 10495 4342 2081      		ld r18,Z
 10496 4344 3181      		ldd r19,Z+1
 10497 4346 2F5F      		subi r18,-1
 10498 4348 3F4F      		sbci r19,-1
 10499 434a FC01      		movw r30,r24
 10500 434c 3183      		std Z+1,r19
 10501 434e 2083      		st Z,r18
 10502               	.L408:
1332:lp_solve_5.5/lp_SOS.c ****       }
1333:lp_solve_5.5/lp_SOS.c ****       n--;
 10503               		.loc 1 1333 0
 10504 4350 8D81      		ldd r24,Y+5
 10505 4352 9E81      		ldd r25,Y+6
 10506 4354 0197      		sbiw r24,1
 10507 4356 9E83      		std Y+6,r25
 10508 4358 8D83      		std Y+5,r24
 10509               	.L407:
1321:lp_solve_5.5/lp_SOS.c ****       j = list[n];
 10510               		.loc 1 1321 0
 10511 435a 8D81      		ldd r24,Y+5
 10512 435c 9E81      		ldd r25,Y+6
 10513 435e 1816      		cp __zero_reg__,r24
 10514 4360 1906      		cpc __zero_reg__,r25
 10515 4362 04F4      		brge .+2
 10516 4364 00C0      		rjmp .L414
1334:lp_solve_5.5/lp_SOS.c ****     }
1335:lp_solve_5.5/lp_SOS.c ****     if((sosindex < 0) && (nn > 1))
 10517               		.loc 1 1335 0
 10518 4366 8B89      		ldd r24,Y+19
 10519 4368 9C89      		ldd r25,Y+20
 10520 436a 9923      		tst r25
 10521 436c 04F4      		brge .L406
 10522               		.loc 1 1335 0 is_stmt 0 discriminator 1
 10523 436e 8F81      		ldd r24,Y+7
 10524 4370 9885      		ldd r25,Y+8
 10525 4372 0297      		sbiw r24,2
 10526 4374 04F4      		brge .L427
 10527 4376 00C0      		rjmp .L406
 10528               	.L426:
1318:lp_solve_5.5/lp_SOS.c ****     list = group->sos_list[i]->members;
 10529               		.loc 1 1318 0 is_stmt 1
 10530 4378 0000      		nop
 10531               	.L406:
1316:lp_solve_5.5/lp_SOS.c ****     if(!SOS_is_member(group, i+1, column))
 10532               		.loc 1 1316 0
 10533 437a 8981      		ldd r24,Y+1
 10534 437c 9A81      		ldd r25,Y+2
 10535 437e 0196      		adiw r24,1
 10536 4380 9A83      		std Y+2,r25
 10537 4382 8983      		std Y+1,r24
 10538               	.L404:
1316:lp_solve_5.5/lp_SOS.c ****     if(!SOS_is_member(group, i+1, column))
 10539               		.loc 1 1316 0 is_stmt 0 discriminator 1
 10540 4384 2981      		ldd r18,Y+1
 10541 4386 3A81      		ldd r19,Y+2
 10542 4388 8B81      		ldd r24,Y+3
 10543 438a 9C81      		ldd r25,Y+4
 10544 438c 2817      		cp r18,r24
 10545 438e 3907      		cpc r19,r25
 10546 4390 04F4      		brge .+2
 10547 4392 00C0      		rjmp .L416
 10548 4394 00C0      		rjmp .L415
 10549               	.L427:
1336:lp_solve_5.5/lp_SOS.c ****       break;
 10550               		.loc 1 1336 0 is_stmt 1
 10551 4396 0000      		nop
 10552               	.L415:
1337:lp_solve_5.5/lp_SOS.c ****   }
1338:lp_solve_5.5/lp_SOS.c **** 
1339:lp_solve_5.5/lp_SOS.c ****   /* Condense the list into indeces */
1340:lp_solve_5.5/lp_SOS.c ****   n = 0;
 10553               		.loc 1 1340 0
 10554 4398 1E82      		std Y+6,__zero_reg__
 10555 439a 1D82      		std Y+5,__zero_reg__
1341:lp_solve_5.5/lp_SOS.c ****   for(i = 1; i <= lp->columns; i++) {
 10556               		.loc 1 1341 0
 10557 439c 81E0      		ldi r24,lo8(1)
 10558 439e 90E0      		ldi r25,0
 10559 43a0 9A83      		std Y+2,r25
 10560 43a2 8983      		std Y+1,r24
 10561 43a4 00C0      		rjmp .L417
 10562               	.L420:
1342:lp_solve_5.5/lp_SOS.c ****     if((candidates[i] > 0) && (!excludetarget || (i != column))) {
 10563               		.loc 1 1342 0
 10564 43a6 2F85      		ldd r18,Y+15
 10565 43a8 3889      		ldd r19,Y+16
 10566 43aa 8981      		ldd r24,Y+1
 10567 43ac 9A81      		ldd r25,Y+2
 10568 43ae 880F      		lsl r24
 10569 43b0 991F      		rol r25
 10570 43b2 820F      		add r24,r18
 10571 43b4 931F      		adc r25,r19
 10572 43b6 FC01      		movw r30,r24
 10573 43b8 8081      		ld r24,Z
 10574 43ba 9181      		ldd r25,Z+1
 10575 43bc 1816      		cp __zero_reg__,r24
 10576 43be 1906      		cpc __zero_reg__,r25
 10577 43c0 04F4      		brge .L418
 10578               		.loc 1 1342 0 is_stmt 0 discriminator 1
 10579 43c2 8F89      		ldd r24,Y+23
 10580 43c4 8823      		tst r24
 10581 43c6 01F0      		breq .L419
 10582               		.loc 1 1342 0 discriminator 2
 10583 43c8 2981      		ldd r18,Y+1
 10584 43ca 3A81      		ldd r19,Y+2
 10585 43cc 8D89      		ldd r24,Y+21
 10586 43ce 9E89      		ldd r25,Y+22
 10587 43d0 2817      		cp r18,r24
 10588 43d2 3907      		cpc r19,r25
 10589 43d4 01F0      		breq .L418
 10590               	.L419:
1343:lp_solve_5.5/lp_SOS.c ****       n++;
 10591               		.loc 1 1343 0 is_stmt 1
 10592 43d6 8D81      		ldd r24,Y+5
 10593 43d8 9E81      		ldd r25,Y+6
 10594 43da 0196      		adiw r24,1
 10595 43dc 9E83      		std Y+6,r25
 10596 43de 8D83      		std Y+5,r24
1344:lp_solve_5.5/lp_SOS.c ****       candidates[n] = i;
 10597               		.loc 1 1344 0
 10598 43e0 2F85      		ldd r18,Y+15
 10599 43e2 3889      		ldd r19,Y+16
 10600 43e4 8D81      		ldd r24,Y+5
 10601 43e6 9E81      		ldd r25,Y+6
 10602 43e8 880F      		lsl r24
 10603 43ea 991F      		rol r25
 10604 43ec 820F      		add r24,r18
 10605 43ee 931F      		adc r25,r19
 10606 43f0 2981      		ldd r18,Y+1
 10607 43f2 3A81      		ldd r19,Y+2
 10608 43f4 FC01      		movw r30,r24
 10609 43f6 3183      		std Z+1,r19
 10610 43f8 2083      		st Z,r18
 10611               	.L418:
1341:lp_solve_5.5/lp_SOS.c ****     if((candidates[i] > 0) && (!excludetarget || (i != column))) {
 10612               		.loc 1 1341 0 discriminator 2
 10613 43fa 8981      		ldd r24,Y+1
 10614 43fc 9A81      		ldd r25,Y+2
 10615 43fe 0196      		adiw r24,1
 10616 4400 9A83      		std Y+2,r25
 10617 4402 8983      		std Y+1,r24
 10618               	.L417:
1341:lp_solve_5.5/lp_SOS.c ****     if((candidates[i] > 0) && (!excludetarget || (i != column))) {
 10619               		.loc 1 1341 0 is_stmt 0 discriminator 1
 10620 4404 8985      		ldd r24,Y+9
 10621 4406 9A85      		ldd r25,Y+10
 10622 4408 8451      		subi r24,20
 10623 440a 9E4F      		sbci r25,-2
 10624 440c FC01      		movw r30,r24
 10625 440e 2081      		ld r18,Z
 10626 4410 3181      		ldd r19,Z+1
 10627 4412 8981      		ldd r24,Y+1
 10628 4414 9A81      		ldd r25,Y+2
 10629 4416 2817      		cp r18,r24
 10630 4418 3907      		cpc r19,r25
 10631 441a 04F4      		brge .L420
 10632               	.L412:
1345:lp_solve_5.5/lp_SOS.c ****     }
1346:lp_solve_5.5/lp_SOS.c ****   }
1347:lp_solve_5.5/lp_SOS.c **** 
1348:lp_solve_5.5/lp_SOS.c ****   /* Finalize */
1349:lp_solve_5.5/lp_SOS.c **** Finish:
1350:lp_solve_5.5/lp_SOS.c ****   candidates[0] = n;
 10633               		.loc 1 1350 0 is_stmt 1
 10634 441c 8F85      		ldd r24,Y+15
 10635 441e 9889      		ldd r25,Y+16
 10636 4420 2D81      		ldd r18,Y+5
 10637 4422 3E81      		ldd r19,Y+6
 10638 4424 FC01      		movw r30,r24
 10639 4426 3183      		std Z+1,r19
 10640 4428 2083      		st Z,r18
1351:lp_solve_5.5/lp_SOS.c ****   if(n == 0)
 10641               		.loc 1 1351 0
 10642 442a 8D81      		ldd r24,Y+5
 10643 442c 9E81      		ldd r25,Y+6
 10644 442e 892B      		or r24,r25
 10645 4430 01F4      		brne .L421
1352:lp_solve_5.5/lp_SOS.c ****     FREE(candidates);
 10646               		.loc 1 1352 0
 10647 4432 8F85      		ldd r24,Y+15
 10648 4434 9889      		ldd r25,Y+16
 10649 4436 892B      		or r24,r25
 10650 4438 01F0      		breq .L421
 10651               		.loc 1 1352 0 is_stmt 0 discriminator 1
 10652 443a 8F85      		ldd r24,Y+15
 10653 443c 9889      		ldd r25,Y+16
 10654 443e 0E94 0000 		call free
 10655 4442 188A      		std Y+16,__zero_reg__
 10656 4444 1F86      		std Y+15,__zero_reg__
 10657               	.L421:
1353:lp_solve_5.5/lp_SOS.c **** 
1354:lp_solve_5.5/lp_SOS.c ****   return( candidates);
 10658               		.loc 1 1354 0 is_stmt 1
 10659 4446 8F85      		ldd r24,Y+15
 10660 4448 9889      		ldd r25,Y+16
 10661               	.L422:
 10662               	/* epilogue start */
1355:lp_solve_5.5/lp_SOS.c **** 
1356:lp_solve_5.5/lp_SOS.c **** }
 10663               		.loc 1 1356 0 discriminator 1
 10664 444a 6B96      		adiw r28,27
 10665 444c 0FB6      		in __tmp_reg__,__SREG__
 10666 444e F894      		cli
 10667 4450 DEBF      		out __SP_H__,r29
 10668 4452 0FBE      		out __SREG__,__tmp_reg__
 10669 4454 CDBF      		out __SP_L__,r28
 10670 4456 DF91      		pop r29
 10671 4458 CF91      		pop r28
 10672 445a 1F91      		pop r17
 10673 445c 0F91      		pop r16
 10674 445e FF90      		pop r15
 10675 4460 EF90      		pop r14
 10676 4462 0895      		ret
 10677               		.cfi_endproc
 10678               	.LFE37:
 10680               	.global	SOS_fix_list
 10682               	SOS_fix_list:
 10683               	.LFB38:
1357:lp_solve_5.5/lp_SOS.c **** 
1358:lp_solve_5.5/lp_SOS.c **** int SOS_fix_list(SOSgroup *group, int sosindex, int variable, REAL *bound,
1359:lp_solve_5.5/lp_SOS.c ****                  int *varlist, MYBOOL isleft, DeltaVrec *changelog)
1360:lp_solve_5.5/lp_SOS.c **** {
 10684               		.loc 1 1360 0
 10685               		.cfi_startproc
 10686 4464 CF92      		push r12
 10687               	.LCFI155:
 10688               		.cfi_def_cfa_offset 3
 10689               		.cfi_offset 12, -2
 10690 4466 DF92      		push r13
 10691               	.LCFI156:
 10692               		.cfi_def_cfa_offset 4
 10693               		.cfi_offset 13, -3
 10694 4468 EF92      		push r14
 10695               	.LCFI157:
 10696               		.cfi_def_cfa_offset 5
 10697               		.cfi_offset 14, -4
 10698 446a 0F93      		push r16
 10699               	.LCFI158:
 10700               		.cfi_def_cfa_offset 6
 10701               		.cfi_offset 16, -5
 10702 446c 1F93      		push r17
 10703               	.LCFI159:
 10704               		.cfi_def_cfa_offset 7
 10705               		.cfi_offset 17, -6
 10706 446e CF93      		push r28
 10707               	.LCFI160:
 10708               		.cfi_def_cfa_offset 8
 10709               		.cfi_offset 28, -7
 10710 4470 DF93      		push r29
 10711               	.LCFI161:
 10712               		.cfi_def_cfa_offset 9
 10713               		.cfi_offset 29, -8
 10714 4472 CDB7      		in r28,__SP_L__
 10715 4474 DEB7      		in r29,__SP_H__
 10716               	.LCFI162:
 10717               		.cfi_def_cfa_register 28
 10718 4476 6B97      		sbiw r28,27
 10719               	.LCFI163:
 10720               		.cfi_def_cfa_offset 36
 10721 4478 0FB6      		in __tmp_reg__,__SREG__
 10722 447a F894      		cli
 10723 447c DEBF      		out __SP_H__,r29
 10724 447e 0FBE      		out __SREG__,__tmp_reg__
 10725 4480 CDBF      		out __SP_L__,r28
 10726               	/* prologue: function */
 10727               	/* frame size = 27 */
 10728               	/* stack size = 34 */
 10729               	.L__stack_usage = 34
 10730 4482 988B      		std Y+16,r25
 10731 4484 8F87      		std Y+15,r24
 10732 4486 7A8B      		std Y+18,r23
 10733 4488 698B      		std Y+17,r22
 10734 448a 5C8B      		std Y+20,r21
 10735 448c 4B8B      		std Y+19,r20
 10736 448e 3E8B      		std Y+22,r19
 10737 4490 2D8B      		std Y+21,r18
 10738 4492 188F      		std Y+24,r17
 10739 4494 0F8B      		std Y+23,r16
 10740 4496 E98E      		std Y+25,r14
 10741 4498 DB8E      		std Y+27,r13
 10742 449a CA8E      		std Y+26,r12
1361:lp_solve_5.5/lp_SOS.c ****   int    i, ii, jj, count = 0;
 10743               		.loc 1 1361 0
 10744 449c 1E82      		std Y+6,__zero_reg__
 10745 449e 1D82      		std Y+5,__zero_reg__
1362:lp_solve_5.5/lp_SOS.c ****   REAL   value = 0;
 10746               		.loc 1 1362 0
 10747 44a0 1F82      		std Y+7,__zero_reg__
 10748 44a2 1886      		std Y+8,__zero_reg__
 10749 44a4 1986      		std Y+9,__zero_reg__
 10750 44a6 1A86      		std Y+10,__zero_reg__
1363:lp_solve_5.5/lp_SOS.c ****   lprec  *lp = group->lp;
 10751               		.loc 1 1363 0
 10752 44a8 8F85      		ldd r24,Y+15
 10753 44aa 9889      		ldd r25,Y+16
 10754 44ac FC01      		movw r30,r24
 10755 44ae 8081      		ld r24,Z
 10756 44b0 9181      		ldd r25,Z+1
 10757 44b2 9C87      		std Y+12,r25
 10758 44b4 8B87      		std Y+11,r24
1364:lp_solve_5.5/lp_SOS.c **** 
1365:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
1366:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
1367:lp_solve_5.5/lp_SOS.c ****     report(lp, IMPORTANT, "SOS_fix_list: Invalid index %d\n", sosindex);
1368:lp_solve_5.5/lp_SOS.c ****     return(FALSE);
1369:lp_solve_5.5/lp_SOS.c ****   }
1370:lp_solve_5.5/lp_SOS.c **** #endif
1371:lp_solve_5.5/lp_SOS.c **** 
1372:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0) {
 10759               		.loc 1 1372 0
 10760 44b6 8989      		ldd r24,Y+17
 10761 44b8 9A89      		ldd r25,Y+18
 10762 44ba 892B      		or r24,r25
 10763 44bc 01F0      		breq .+2
 10764 44be 00C0      		rjmp .L429
1373:lp_solve_5.5/lp_SOS.c ****     for(i = group->memberpos[variable-1]; i < group->memberpos[variable]; i++) {
 10765               		.loc 1 1373 0
 10766 44c0 8F85      		ldd r24,Y+15
 10767 44c2 9889      		ldd r25,Y+16
 10768 44c4 FC01      		movw r30,r24
 10769 44c6 2685      		ldd r18,Z+14
 10770 44c8 3785      		ldd r19,Z+15
 10771 44ca 8B89      		ldd r24,Y+19
 10772 44cc 9C89      		ldd r25,Y+20
 10773 44ce 8150      		subi r24,1
 10774 44d0 9048      		sbci r25,-128
 10775 44d2 880F      		lsl r24
 10776 44d4 991F      		rol r25
 10777 44d6 820F      		add r24,r18
 10778 44d8 931F      		adc r25,r19
 10779 44da FC01      		movw r30,r24
 10780 44dc 8081      		ld r24,Z
 10781 44de 9181      		ldd r25,Z+1
 10782 44e0 9A83      		std Y+2,r25
 10783 44e2 8983      		std Y+1,r24
 10784 44e4 00C0      		rjmp .L430
 10785               	.L431:
1374:lp_solve_5.5/lp_SOS.c ****       ii = group->membership[i];
 10786               		.loc 1 1374 0 discriminator 3
 10787 44e6 8F85      		ldd r24,Y+15
 10788 44e8 9889      		ldd r25,Y+16
 10789 44ea FC01      		movw r30,r24
 10790 44ec 2485      		ldd r18,Z+12
 10791 44ee 3585      		ldd r19,Z+13
 10792 44f0 8981      		ldd r24,Y+1
 10793 44f2 9A81      		ldd r25,Y+2
 10794 44f4 880F      		lsl r24
 10795 44f6 991F      		rol r25
 10796 44f8 820F      		add r24,r18
 10797 44fa 931F      		adc r25,r19
 10798 44fc FC01      		movw r30,r24
 10799 44fe 8081      		ld r24,Z
 10800 4500 9181      		ldd r25,Z+1
 10801 4502 9C83      		std Y+4,r25
 10802 4504 8B83      		std Y+3,r24
1375:lp_solve_5.5/lp_SOS.c ****       count += SOS_fix_list(group, ii, variable, bound, varlist, isleft, changelog);
 10803               		.loc 1 1375 0 discriminator 3
 10804 4506 AA8D      		ldd r26,Y+26
 10805 4508 BB8D      		ldd r27,Y+27
 10806 450a EF89      		ldd r30,Y+23
 10807 450c F88D      		ldd r31,Y+24
 10808 450e 2D89      		ldd r18,Y+21
 10809 4510 3E89      		ldd r19,Y+22
 10810 4512 4B89      		ldd r20,Y+19
 10811 4514 5C89      		ldd r21,Y+20
 10812 4516 6B81      		ldd r22,Y+3
 10813 4518 7C81      		ldd r23,Y+4
 10814 451a 8F85      		ldd r24,Y+15
 10815 451c 9889      		ldd r25,Y+16
 10816 451e 6D01      		movw r12,r26
 10817 4520 E98C      		ldd r14,Y+25
 10818 4522 8F01      		movw r16,r30
 10819 4524 0E94 0000 		call SOS_fix_list
 10820 4528 9C01      		movw r18,r24
 10821 452a 8D81      		ldd r24,Y+5
 10822 452c 9E81      		ldd r25,Y+6
 10823 452e 820F      		add r24,r18
 10824 4530 931F      		adc r25,r19
 10825 4532 9E83      		std Y+6,r25
 10826 4534 8D83      		std Y+5,r24
1373:lp_solve_5.5/lp_SOS.c ****     for(i = group->memberpos[variable-1]; i < group->memberpos[variable]; i++) {
 10827               		.loc 1 1373 0 discriminator 3
 10828 4536 8981      		ldd r24,Y+1
 10829 4538 9A81      		ldd r25,Y+2
 10830 453a 0196      		adiw r24,1
 10831 453c 9A83      		std Y+2,r25
 10832 453e 8983      		std Y+1,r24
 10833               	.L430:
1373:lp_solve_5.5/lp_SOS.c ****     for(i = group->memberpos[variable-1]; i < group->memberpos[variable]; i++) {
 10834               		.loc 1 1373 0 is_stmt 0 discriminator 1
 10835 4540 8F85      		ldd r24,Y+15
 10836 4542 9889      		ldd r25,Y+16
 10837 4544 FC01      		movw r30,r24
 10838 4546 2685      		ldd r18,Z+14
 10839 4548 3785      		ldd r19,Z+15
 10840 454a 8B89      		ldd r24,Y+19
 10841 454c 9C89      		ldd r25,Y+20
 10842 454e 880F      		lsl r24
 10843 4550 991F      		rol r25
 10844 4552 820F      		add r24,r18
 10845 4554 931F      		adc r25,r19
 10846 4556 FC01      		movw r30,r24
 10847 4558 2081      		ld r18,Z
 10848 455a 3181      		ldd r19,Z+1
 10849 455c 8981      		ldd r24,Y+1
 10850 455e 9A81      		ldd r25,Y+2
 10851 4560 8217      		cp r24,r18
 10852 4562 9307      		cpc r25,r19
 10853 4564 04F4      		brge .+2
 10854 4566 00C0      		rjmp .L431
 10855 4568 00C0      		rjmp .L432
 10856               	.L429:
1376:lp_solve_5.5/lp_SOS.c ****     }
1377:lp_solve_5.5/lp_SOS.c ****   }
1378:lp_solve_5.5/lp_SOS.c ****   else {
1379:lp_solve_5.5/lp_SOS.c **** 
1380:lp_solve_5.5/lp_SOS.c ****     /* Establish the number of unmarked variables in the left window
1381:lp_solve_5.5/lp_SOS.c ****        (note that "variable" should have been marked previously) */
1382:lp_solve_5.5/lp_SOS.c ****     ii = varlist[0] / 2;
 10857               		.loc 1 1382 0 is_stmt 1
 10858 456a 8F89      		ldd r24,Y+23
 10859 456c 988D      		ldd r25,Y+24
 10860 456e FC01      		movw r30,r24
 10861 4570 8081      		ld r24,Z
 10862 4572 9181      		ldd r25,Z+1
 10863 4574 9923      		tst r25
 10864 4576 04F4      		brge .L433
 10865 4578 0196      		adiw r24,1
 10866               	.L433:
 10867 457a 9595      		asr r25
 10868 457c 8795      		ror r24
 10869 457e 9C83      		std Y+4,r25
 10870 4580 8B83      		std Y+3,r24
1383:lp_solve_5.5/lp_SOS.c ****     if(isleft) {
 10871               		.loc 1 1383 0
 10872 4582 898D      		ldd r24,Y+25
 10873 4584 8823      		tst r24
 10874 4586 01F0      		breq .L434
1384:lp_solve_5.5/lp_SOS.c ****       i = 1;
 10875               		.loc 1 1384 0
 10876 4588 81E0      		ldi r24,lo8(1)
 10877 458a 90E0      		ldi r25,0
 10878 458c 9A83      		std Y+2,r25
 10879 458e 8983      		std Y+1,r24
1385:lp_solve_5.5/lp_SOS.c ****       if(isleft == AUTOMATIC)
 10880               		.loc 1 1385 0
 10881 4590 898D      		ldd r24,Y+25
 10882 4592 8230      		cpi r24,lo8(2)
 10883 4594 01F0      		breq .+2
 10884 4596 00C0      		rjmp .L437
1386:lp_solve_5.5/lp_SOS.c ****         ii = varlist[0];
 10885               		.loc 1 1386 0
 10886 4598 8F89      		ldd r24,Y+23
 10887 459a 988D      		ldd r25,Y+24
 10888 459c FC01      		movw r30,r24
 10889 459e 8081      		ld r24,Z
 10890 45a0 9181      		ldd r25,Z+1
 10891 45a2 9C83      		std Y+4,r25
 10892 45a4 8B83      		std Y+3,r24
 10893 45a6 00C0      		rjmp .L437
 10894               	.L434:
1387:lp_solve_5.5/lp_SOS.c ****     }
1388:lp_solve_5.5/lp_SOS.c ****     else {
1389:lp_solve_5.5/lp_SOS.c ****       i = ii + 1;
 10895               		.loc 1 1389 0
 10896 45a8 8B81      		ldd r24,Y+3
 10897 45aa 9C81      		ldd r25,Y+4
 10898 45ac 0196      		adiw r24,1
 10899 45ae 9A83      		std Y+2,r25
 10900 45b0 8983      		std Y+1,r24
1390:lp_solve_5.5/lp_SOS.c ****       ii = varlist[0];
 10901               		.loc 1 1390 0
 10902 45b2 8F89      		ldd r24,Y+23
 10903 45b4 988D      		ldd r25,Y+24
 10904 45b6 FC01      		movw r30,r24
 10905 45b8 8081      		ld r24,Z
 10906 45ba 9181      		ldd r25,Z+1
 10907 45bc 9C83      		std Y+4,r25
 10908 45be 8B83      		std Y+3,r24
1391:lp_solve_5.5/lp_SOS.c ****     }
1392:lp_solve_5.5/lp_SOS.c **** 
1393:lp_solve_5.5/lp_SOS.c ****     /* Loop over members to fix values at the new bound (zero) */
1394:lp_solve_5.5/lp_SOS.c ****     while(i <= ii) {
 10909               		.loc 1 1394 0
 10910 45c0 00C0      		rjmp .L437
 10911               	.L443:
1395:lp_solve_5.5/lp_SOS.c ****       if(SOS_is_member(group, sosindex, varlist[i])) {
 10912               		.loc 1 1395 0
 10913 45c2 8981      		ldd r24,Y+1
 10914 45c4 9A81      		ldd r25,Y+2
 10915 45c6 880F      		lsl r24
 10916 45c8 991F      		rol r25
 10917 45ca 2F89      		ldd r18,Y+23
 10918 45cc 388D      		ldd r19,Y+24
 10919 45ce 820F      		add r24,r18
 10920 45d0 931F      		adc r25,r19
 10921 45d2 FC01      		movw r30,r24
 10922 45d4 4081      		ld r20,Z
 10923 45d6 5181      		ldd r21,Z+1
 10924 45d8 2989      		ldd r18,Y+17
 10925 45da 3A89      		ldd r19,Y+18
 10926 45dc 8F85      		ldd r24,Y+15
 10927 45de 9889      		ldd r25,Y+16
 10928 45e0 B901      		movw r22,r18
 10929 45e2 0E94 0000 		call SOS_is_member
 10930 45e6 892B      		or r24,r25
 10931 45e8 01F4      		brne .+2
 10932 45ea 00C0      		rjmp .L438
1396:lp_solve_5.5/lp_SOS.c ****         jj = lp->rows + varlist[i];
 10933               		.loc 1 1396 0
 10934 45ec 8B85      		ldd r24,Y+11
 10935 45ee 9C85      		ldd r25,Y+12
 10936 45f0 8651      		subi r24,22
 10937 45f2 9E4F      		sbci r25,-2
 10938 45f4 FC01      		movw r30,r24
 10939 45f6 2081      		ld r18,Z
 10940 45f8 3181      		ldd r19,Z+1
 10941 45fa 8981      		ldd r24,Y+1
 10942 45fc 9A81      		ldd r25,Y+2
 10943 45fe 880F      		lsl r24
 10944 4600 991F      		rol r25
 10945 4602 4F89      		ldd r20,Y+23
 10946 4604 588D      		ldd r21,Y+24
 10947 4606 840F      		add r24,r20
 10948 4608 951F      		adc r25,r21
 10949 460a FC01      		movw r30,r24
 10950 460c 8081      		ld r24,Z
 10951 460e 9181      		ldd r25,Z+1
 10952 4610 820F      		add r24,r18
 10953 4612 931F      		adc r25,r19
 10954 4614 9E87      		std Y+14,r25
 10955 4616 8D87      		std Y+13,r24
1397:lp_solve_5.5/lp_SOS.c **** 
1398:lp_solve_5.5/lp_SOS.c ****         /* Verify that we don't violate original bounds */
1399:lp_solve_5.5/lp_SOS.c ****         if(value < lp->orig_lowbo[jj])
 10956               		.loc 1 1399 0
 10957 4618 8B85      		ldd r24,Y+11
 10958 461a 9C85      		ldd r25,Y+12
 10959 461c 8E54      		subi r24,78
 10960 461e 9D4F      		sbci r25,-3
 10961 4620 FC01      		movw r30,r24
 10962 4622 2081      		ld r18,Z
 10963 4624 3181      		ldd r19,Z+1
 10964 4626 8D85      		ldd r24,Y+13
 10965 4628 9E85      		ldd r25,Y+14
 10966 462a 880F      		lsl r24
 10967 462c 991F      		rol r25
 10968 462e 880F      		lsl r24
 10969 4630 991F      		rol r25
 10970 4632 820F      		add r24,r18
 10971 4634 931F      		adc r25,r19
 10972 4636 FC01      		movw r30,r24
 10973 4638 8081      		ld r24,Z
 10974 463a 9181      		ldd r25,Z+1
 10975 463c A281      		ldd r26,Z+2
 10976 463e B381      		ldd r27,Z+3
 10977 4640 2F81      		ldd r18,Y+7
 10978 4642 3885      		ldd r19,Y+8
 10979 4644 4985      		ldd r20,Y+9
 10980 4646 5A85      		ldd r21,Y+10
 10981 4648 BC01      		movw r22,r24
 10982 464a CD01      		movw r24,r26
 10983 464c 0E94 0000 		call __gtsf2
 10984 4650 1816      		cp __zero_reg__,r24
 10985 4652 04F4      		brge .L445
1400:lp_solve_5.5/lp_SOS.c ****           return( -jj );
 10986               		.loc 1 1400 0
 10987 4654 8D85      		ldd r24,Y+13
 10988 4656 9E85      		ldd r25,Y+14
 10989 4658 9195      		neg r25
 10990 465a 8195      		neg r24
 10991 465c 9109      		sbc r25,__zero_reg__
 10992 465e 00C0      		rjmp .L441
 10993               	.L445:
1401:lp_solve_5.5/lp_SOS.c ****         /* OK, set the new bound */
1402:lp_solve_5.5/lp_SOS.c ****         count++;
 10994               		.loc 1 1402 0
 10995 4660 8D81      		ldd r24,Y+5
 10996 4662 9E81      		ldd r25,Y+6
 10997 4664 0196      		adiw r24,1
 10998 4666 9E83      		std Y+6,r25
 10999 4668 8D83      		std Y+5,r24
1403:lp_solve_5.5/lp_SOS.c ****         if(changelog == NULL)
 11000               		.loc 1 1403 0
 11001 466a 8A8D      		ldd r24,Y+26
 11002 466c 9B8D      		ldd r25,Y+27
 11003 466e 892B      		or r24,r25
 11004 4670 01F4      		brne .L442
1404:lp_solve_5.5/lp_SOS.c ****           bound[jj] = value;
 11005               		.loc 1 1404 0
 11006 4672 8D85      		ldd r24,Y+13
 11007 4674 9E85      		ldd r25,Y+14
 11008 4676 880F      		lsl r24
 11009 4678 991F      		rol r25
 11010 467a 880F      		lsl r24
 11011 467c 991F      		rol r25
 11012 467e 2D89      		ldd r18,Y+21
 11013 4680 3E89      		ldd r19,Y+22
 11014 4682 280F      		add r18,r24
 11015 4684 391F      		adc r19,r25
 11016 4686 8F81      		ldd r24,Y+7
 11017 4688 9885      		ldd r25,Y+8
 11018 468a A985      		ldd r26,Y+9
 11019 468c BA85      		ldd r27,Y+10
 11020 468e F901      		movw r30,r18
 11021 4690 8083      		st Z,r24
 11022 4692 9183      		std Z+1,r25
 11023 4694 A283      		std Z+2,r26
 11024 4696 B383      		std Z+3,r27
 11025 4698 00C0      		rjmp .L438
 11026               	.L442:
1405:lp_solve_5.5/lp_SOS.c ****         else
1406:lp_solve_5.5/lp_SOS.c ****           modifyUndoLadder(changelog, jj, bound, value);
 11027               		.loc 1 1406 0
 11028 469a 8F81      		ldd r24,Y+7
 11029 469c 9885      		ldd r25,Y+8
 11030 469e A985      		ldd r26,Y+9
 11031 46a0 BA85      		ldd r27,Y+10
 11032 46a2 4D89      		ldd r20,Y+21
 11033 46a4 5E89      		ldd r21,Y+22
 11034 46a6 6D85      		ldd r22,Y+13
 11035 46a8 7E85      		ldd r23,Y+14
 11036 46aa EA8D      		ldd r30,Y+26
 11037 46ac FB8D      		ldd r31,Y+27
 11038 46ae 8C01      		movw r16,r24
 11039 46b0 9D01      		movw r18,r26
 11040 46b2 CF01      		movw r24,r30
 11041 46b4 0E94 0000 		call modifyUndoLadder
 11042               	.L438:
1407:lp_solve_5.5/lp_SOS.c ****       }
1408:lp_solve_5.5/lp_SOS.c ****       i++;
 11043               		.loc 1 1408 0
 11044 46b8 8981      		ldd r24,Y+1
 11045 46ba 9A81      		ldd r25,Y+2
 11046 46bc 0196      		adiw r24,1
 11047 46be 9A83      		std Y+2,r25
 11048 46c0 8983      		std Y+1,r24
 11049               	.L437:
1394:lp_solve_5.5/lp_SOS.c ****       if(SOS_is_member(group, sosindex, varlist[i])) {
 11050               		.loc 1 1394 0
 11051 46c2 2981      		ldd r18,Y+1
 11052 46c4 3A81      		ldd r19,Y+2
 11053 46c6 8B81      		ldd r24,Y+3
 11054 46c8 9C81      		ldd r25,Y+4
 11055 46ca 8217      		cp r24,r18
 11056 46cc 9307      		cpc r25,r19
 11057 46ce 04F0      		brlt .+2
 11058 46d0 00C0      		rjmp .L443
 11059               	.L432:
1409:lp_solve_5.5/lp_SOS.c ****     }
1410:lp_solve_5.5/lp_SOS.c **** 
1411:lp_solve_5.5/lp_SOS.c ****   }
1412:lp_solve_5.5/lp_SOS.c ****   return( count );
 11060               		.loc 1 1412 0
 11061 46d2 8D81      		ldd r24,Y+5
 11062 46d4 9E81      		ldd r25,Y+6
 11063               	.L441:
 11064               	/* epilogue start */
1413:lp_solve_5.5/lp_SOS.c **** }
 11065               		.loc 1 1413 0
 11066 46d6 6B96      		adiw r28,27
 11067 46d8 0FB6      		in __tmp_reg__,__SREG__
 11068 46da F894      		cli
 11069 46dc DEBF      		out __SP_H__,r29
 11070 46de 0FBE      		out __SREG__,__tmp_reg__
 11071 46e0 CDBF      		out __SP_L__,r28
 11072 46e2 DF91      		pop r29
 11073 46e4 CF91      		pop r28
 11074 46e6 1F91      		pop r17
 11075 46e8 0F91      		pop r16
 11076 46ea EF90      		pop r14
 11077 46ec DF90      		pop r13
 11078 46ee CF90      		pop r12
 11079 46f0 0895      		ret
 11080               		.cfi_endproc
 11081               	.LFE38:
 11083               	.global	SOS_is_satisfied
 11085               	SOS_is_satisfied:
 11086               	.LFB39:
1414:lp_solve_5.5/lp_SOS.c **** 
1415:lp_solve_5.5/lp_SOS.c **** int SOS_is_satisfied(SOSgroup *group, int sosindex, REAL *solution)
1416:lp_solve_5.5/lp_SOS.c **** /* Determine if the SOS is satisfied for the current solution vector;
1417:lp_solve_5.5/lp_SOS.c ****    The return code is in the range [-2..+2], depending on the type of
1418:lp_solve_5.5/lp_SOS.c ****    satisfaction.  Positive return value means too many non-zero values,
1419:lp_solve_5.5/lp_SOS.c ****    negative value means set incomplete:
1420:lp_solve_5.5/lp_SOS.c **** 
1421:lp_solve_5.5/lp_SOS.c ****               -2: Set member count not full (SOS3)
1422:lp_solve_5.5/lp_SOS.c ****               -1: Set member count not full
1423:lp_solve_5.5/lp_SOS.c ****                0: Set is full (also returned if the SOS index is invalid)
1424:lp_solve_5.5/lp_SOS.c ****                1: Too many non-zero sequential variables
1425:lp_solve_5.5/lp_SOS.c ****                2: Set consistency error
1426:lp_solve_5.5/lp_SOS.c **** 
1427:lp_solve_5.5/lp_SOS.c **** */
1428:lp_solve_5.5/lp_SOS.c **** {
 11087               		.loc 1 1428 0
 11088               		.cfi_startproc
 11089 46f2 CF93      		push r28
 11090               	.LCFI164:
 11091               		.cfi_def_cfa_offset 3
 11092               		.cfi_offset 28, -2
 11093 46f4 DF93      		push r29
 11094               	.LCFI165:
 11095               		.cfi_def_cfa_offset 4
 11096               		.cfi_offset 29, -3
 11097 46f6 CDB7      		in r28,__SP_L__
 11098 46f8 DEB7      		in r29,__SP_H__
 11099               	.LCFI166:
 11100               		.cfi_def_cfa_register 28
 11101 46fa 6697      		sbiw r28,22
 11102               	.LCFI167:
 11103               		.cfi_def_cfa_offset 26
 11104 46fc 0FB6      		in __tmp_reg__,__SREG__
 11105 46fe F894      		cli
 11106 4700 DEBF      		out __SP_H__,r29
 11107 4702 0FBE      		out __SREG__,__tmp_reg__
 11108 4704 CDBF      		out __SP_L__,r28
 11109               	/* prologue: function */
 11110               	/* frame size = 22 */
 11111               	/* stack size = 24 */
 11112               	.L__stack_usage = 24
 11113 4706 9A8B      		std Y+18,r25
 11114 4708 898B      		std Y+17,r24
 11115 470a 7C8B      		std Y+20,r23
 11116 470c 6B8B      		std Y+19,r22
 11117 470e 5E8B      		std Y+22,r21
 11118 4710 4D8B      		std Y+21,r20
1429:lp_solve_5.5/lp_SOS.c ****   int    i, n, nn, count, *list;
1430:lp_solve_5.5/lp_SOS.c ****   int    type, status = 0;
 11119               		.loc 1 1430 0
 11120 4712 1E82      		std Y+6,__zero_reg__
 11121 4714 1D82      		std Y+5,__zero_reg__
1431:lp_solve_5.5/lp_SOS.c ****   lprec  *lp = group->lp;
 11122               		.loc 1 1431 0
 11123 4716 8989      		ldd r24,Y+17
 11124 4718 9A89      		ldd r25,Y+18
 11125 471a FC01      		movw r30,r24
 11126 471c 8081      		ld r24,Z
 11127 471e 9181      		ldd r25,Z+1
 11128 4720 9887      		std Y+8,r25
 11129 4722 8F83      		std Y+7,r24
1432:lp_solve_5.5/lp_SOS.c **** 
1433:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
1434:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
1435:lp_solve_5.5/lp_SOS.c ****     report(lp, IMPORTANT, "SOS_is_satisfied: Invalid index %d\n", sosindex);
1436:lp_solve_5.5/lp_SOS.c ****     return( SOS_COMPLETE );
1437:lp_solve_5.5/lp_SOS.c ****   }
1438:lp_solve_5.5/lp_SOS.c **** #endif
1439:lp_solve_5.5/lp_SOS.c **** 
1440:lp_solve_5.5/lp_SOS.c ****   if((sosindex == 0) && (group->sos_count == 1))
 11130               		.loc 1 1440 0
 11131 4724 8B89      		ldd r24,Y+19
 11132 4726 9C89      		ldd r25,Y+20
 11133 4728 892B      		or r24,r25
 11134 472a 01F4      		brne .L447
 11135               		.loc 1 1440 0 is_stmt 0 discriminator 1
 11136 472c 8989      		ldd r24,Y+17
 11137 472e 9A89      		ldd r25,Y+18
 11138 4730 FC01      		movw r30,r24
 11139 4732 8681      		ldd r24,Z+6
 11140 4734 9781      		ldd r25,Z+7
 11141 4736 0197      		sbiw r24,1
 11142 4738 01F4      		brne .L447
1441:lp_solve_5.5/lp_SOS.c ****     sosindex = 1;
 11143               		.loc 1 1441 0 is_stmt 1
 11144 473a 81E0      		ldi r24,lo8(1)
 11145 473c 90E0      		ldi r25,0
 11146 473e 9C8B      		std Y+20,r25
 11147 4740 8B8B      		std Y+19,r24
 11148               	.L447:
1442:lp_solve_5.5/lp_SOS.c **** 
1443:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0) {
 11149               		.loc 1 1443 0
 11150 4742 8B89      		ldd r24,Y+19
 11151 4744 9C89      		ldd r25,Y+20
 11152 4746 892B      		or r24,r25
 11153 4748 01F4      		brne .L448
1444:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++) {
 11154               		.loc 1 1444 0
 11155 474a 81E0      		ldi r24,lo8(1)
 11156 474c 90E0      		ldi r25,0
 11157 474e 9A83      		std Y+2,r25
 11158 4750 8983      		std Y+1,r24
 11159 4752 00C0      		rjmp .L449
 11160               	.L452:
1445:lp_solve_5.5/lp_SOS.c ****       status = SOS_is_satisfied(group, i, solution);
 11161               		.loc 1 1445 0
 11162 4754 4D89      		ldd r20,Y+21
 11163 4756 5E89      		ldd r21,Y+22
 11164 4758 2981      		ldd r18,Y+1
 11165 475a 3A81      		ldd r19,Y+2
 11166 475c 8989      		ldd r24,Y+17
 11167 475e 9A89      		ldd r25,Y+18
 11168 4760 B901      		movw r22,r18
 11169 4762 0E94 0000 		call SOS_is_satisfied
 11170 4766 9E83      		std Y+6,r25
 11171 4768 8D83      		std Y+5,r24
1446:lp_solve_5.5/lp_SOS.c ****       if((status != SOS_COMPLETE) && (status != SOS_INCOMPLETE))
 11172               		.loc 1 1446 0
 11173 476a 8D81      		ldd r24,Y+5
 11174 476c 9E81      		ldd r25,Y+6
 11175 476e 892B      		or r24,r25
 11176 4770 01F0      		breq .L450
 11177               		.loc 1 1446 0 is_stmt 0 discriminator 1
 11178 4772 8D81      		ldd r24,Y+5
 11179 4774 9E81      		ldd r25,Y+6
 11180 4776 0196      		adiw r24,1
 11181 4778 01F0      		breq .+2
 11182 477a 00C0      		rjmp .L498
 11183               	.L450:
1444:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++) {
 11184               		.loc 1 1444 0 is_stmt 1 discriminator 2
 11185 477c 8981      		ldd r24,Y+1
 11186 477e 9A81      		ldd r25,Y+2
 11187 4780 0196      		adiw r24,1
 11188 4782 9A83      		std Y+2,r25
 11189 4784 8983      		std Y+1,r24
 11190               	.L449:
1444:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= group->sos_count; i++) {
 11191               		.loc 1 1444 0 is_stmt 0 discriminator 1
 11192 4786 8989      		ldd r24,Y+17
 11193 4788 9A89      		ldd r25,Y+18
 11194 478a FC01      		movw r30,r24
 11195 478c 2681      		ldd r18,Z+6
 11196 478e 3781      		ldd r19,Z+7
 11197 4790 8981      		ldd r24,Y+1
 11198 4792 9A81      		ldd r25,Y+2
 11199 4794 2817      		cp r18,r24
 11200 4796 3907      		cpc r19,r25
 11201 4798 04F4      		brge .L452
 11202 479a 00C0      		rjmp .L453
 11203               	.L448:
1447:lp_solve_5.5/lp_SOS.c ****         break;
1448:lp_solve_5.5/lp_SOS.c ****     }
1449:lp_solve_5.5/lp_SOS.c ****   }
1450:lp_solve_5.5/lp_SOS.c ****   else {
1451:lp_solve_5.5/lp_SOS.c ****     type = SOS_get_type(group, sosindex);
 11204               		.loc 1 1451 0 is_stmt 1
 11205 479c 2B89      		ldd r18,Y+19
 11206 479e 3C89      		ldd r19,Y+20
 11207 47a0 8989      		ldd r24,Y+17
 11208 47a2 9A89      		ldd r25,Y+18
 11209 47a4 B901      		movw r22,r18
 11210 47a6 0E94 0000 		call SOS_get_type
 11211 47aa 9A87      		std Y+10,r25
 11212 47ac 8987      		std Y+9,r24
1452:lp_solve_5.5/lp_SOS.c ****     list = group->sos_list[sosindex-1]->members;
 11213               		.loc 1 1452 0
 11214 47ae 8989      		ldd r24,Y+17
 11215 47b0 9A89      		ldd r25,Y+18
 11216 47b2 FC01      		movw r30,r24
 11217 47b4 2281      		ldd r18,Z+2
 11218 47b6 3381      		ldd r19,Z+3
 11219 47b8 8B89      		ldd r24,Y+19
 11220 47ba 9C89      		ldd r25,Y+20
 11221 47bc 8150      		subi r24,1
 11222 47be 9048      		sbci r25,-128
 11223 47c0 880F      		lsl r24
 11224 47c2 991F      		rol r25
 11225 47c4 820F      		add r24,r18
 11226 47c6 931F      		adc r25,r19
 11227 47c8 FC01      		movw r30,r24
 11228 47ca 8081      		ld r24,Z
 11229 47cc 9181      		ldd r25,Z+1
 11230 47ce FC01      		movw r30,r24
 11231 47d0 8585      		ldd r24,Z+13
 11232 47d2 9685      		ldd r25,Z+14
 11233 47d4 9C87      		std Y+12,r25
 11234 47d6 8B87      		std Y+11,r24
1453:lp_solve_5.5/lp_SOS.c ****     n = list[0]+1;
 11235               		.loc 1 1453 0
 11236 47d8 8B85      		ldd r24,Y+11
 11237 47da 9C85      		ldd r25,Y+12
 11238 47dc FC01      		movw r30,r24
 11239 47de 8081      		ld r24,Z
 11240 47e0 9181      		ldd r25,Z+1
 11241 47e2 0196      		adiw r24,1
 11242 47e4 9E87      		std Y+14,r25
 11243 47e6 8D87      		std Y+13,r24
1454:lp_solve_5.5/lp_SOS.c ****     nn = list[n];
 11244               		.loc 1 1454 0
 11245 47e8 8D85      		ldd r24,Y+13
 11246 47ea 9E85      		ldd r25,Y+14
 11247 47ec 880F      		lsl r24
 11248 47ee 991F      		rol r25
 11249 47f0 2B85      		ldd r18,Y+11
 11250 47f2 3C85      		ldd r19,Y+12
 11251 47f4 820F      		add r24,r18
 11252 47f6 931F      		adc r25,r19
 11253 47f8 FC01      		movw r30,r24
 11254 47fa 8081      		ld r24,Z
 11255 47fc 9181      		ldd r25,Z+1
 11256 47fe 988B      		std Y+16,r25
 11257 4800 8F87      		std Y+15,r24
1455:lp_solve_5.5/lp_SOS.c **** 
1456:lp_solve_5.5/lp_SOS.c ****    /* Count the number of active SOS variables */
1457:lp_solve_5.5/lp_SOS.c ****     for(i = 1; i <= nn; i++) {
 11258               		.loc 1 1457 0
 11259 4802 81E0      		ldi r24,lo8(1)
 11260 4804 90E0      		ldi r25,0
 11261 4806 9A83      		std Y+2,r25
 11262 4808 8983      		std Y+1,r24
 11263 480a 00C0      		rjmp .L454
 11264               	.L457:
1458:lp_solve_5.5/lp_SOS.c ****       if(list[n+i] == 0)
 11265               		.loc 1 1458 0
 11266 480c 2D85      		ldd r18,Y+13
 11267 480e 3E85      		ldd r19,Y+14
 11268 4810 8981      		ldd r24,Y+1
 11269 4812 9A81      		ldd r25,Y+2
 11270 4814 820F      		add r24,r18
 11271 4816 931F      		adc r25,r19
 11272 4818 880F      		lsl r24
 11273 481a 991F      		rol r25
 11274 481c 2B85      		ldd r18,Y+11
 11275 481e 3C85      		ldd r19,Y+12
 11276 4820 820F      		add r24,r18
 11277 4822 931F      		adc r25,r19
 11278 4824 FC01      		movw r30,r24
 11279 4826 8081      		ld r24,Z
 11280 4828 9181      		ldd r25,Z+1
 11281 482a 892B      		or r24,r25
 11282 482c 01F0      		breq .L499
1457:lp_solve_5.5/lp_SOS.c ****       if(list[n+i] == 0)
 11283               		.loc 1 1457 0 discriminator 2
 11284 482e 8981      		ldd r24,Y+1
 11285 4830 9A81      		ldd r25,Y+2
 11286 4832 0196      		adiw r24,1
 11287 4834 9A83      		std Y+2,r25
 11288 4836 8983      		std Y+1,r24
 11289               	.L454:
1457:lp_solve_5.5/lp_SOS.c ****       if(list[n+i] == 0)
 11290               		.loc 1 1457 0 is_stmt 0 discriminator 1
 11291 4838 2981      		ldd r18,Y+1
 11292 483a 3A81      		ldd r19,Y+2
 11293 483c 8F85      		ldd r24,Y+15
 11294 483e 9889      		ldd r25,Y+16
 11295 4840 8217      		cp r24,r18
 11296 4842 9307      		cpc r25,r19
 11297 4844 04F4      		brge .L457
 11298 4846 00C0      		rjmp .L456
 11299               	.L499:
1459:lp_solve_5.5/lp_SOS.c ****         break;
 11300               		.loc 1 1459 0 is_stmt 1
 11301 4848 0000      		nop
 11302               	.L456:
1460:lp_solve_5.5/lp_SOS.c ****     }
1461:lp_solve_5.5/lp_SOS.c ****     count = i-1;
 11303               		.loc 1 1461 0
 11304 484a 8981      		ldd r24,Y+1
 11305 484c 9A81      		ldd r25,Y+2
 11306 484e 0197      		sbiw r24,1
 11307 4850 9C83      		std Y+4,r25
 11308 4852 8B83      		std Y+3,r24
1462:lp_solve_5.5/lp_SOS.c ****     if(count == nn)
 11309               		.loc 1 1462 0
 11310 4854 2B81      		ldd r18,Y+3
 11311 4856 3C81      		ldd r19,Y+4
 11312 4858 8F85      		ldd r24,Y+15
 11313 485a 9889      		ldd r25,Y+16
 11314 485c 2817      		cp r18,r24
 11315 485e 3907      		cpc r19,r25
 11316 4860 01F4      		brne .L458
1463:lp_solve_5.5/lp_SOS.c ****       status = SOS_COMPLETE;    /* Set is full    */
 11317               		.loc 1 1463 0
 11318 4862 1E82      		std Y+6,__zero_reg__
 11319 4864 1D82      		std Y+5,__zero_reg__
 11320 4866 00C0      		rjmp .L459
 11321               	.L458:
1464:lp_solve_5.5/lp_SOS.c ****     else
1465:lp_solve_5.5/lp_SOS.c ****       status = SOS_INCOMPLETE;  /* Set is partial */
 11322               		.loc 1 1465 0
 11323 4868 8FEF      		ldi r24,lo8(-1)
 11324 486a 9FEF      		ldi r25,lo8(-1)
 11325 486c 9E83      		std Y+6,r25
 11326 486e 8D83      		std Y+5,r24
 11327               	.L459:
1466:lp_solve_5.5/lp_SOS.c **** 
1467:lp_solve_5.5/lp_SOS.c ****    /* Find index of the first active variable; fail if some are non-zero */
1468:lp_solve_5.5/lp_SOS.c ****     if(count > 0) {
 11328               		.loc 1 1468 0
 11329 4870 8B81      		ldd r24,Y+3
 11330 4872 9C81      		ldd r25,Y+4
 11331 4874 1816      		cp __zero_reg__,r24
 11332 4876 1906      		cpc __zero_reg__,r25
 11333 4878 04F0      		brlt .+2
 11334 487a 00C0      		rjmp .L460
1469:lp_solve_5.5/lp_SOS.c ****       nn = list[n+1];
 11335               		.loc 1 1469 0
 11336 487c 8D85      		ldd r24,Y+13
 11337 487e 9E85      		ldd r25,Y+14
 11338 4880 0196      		adiw r24,1
 11339 4882 880F      		lsl r24
 11340 4884 991F      		rol r25
 11341 4886 2B85      		ldd r18,Y+11
 11342 4888 3C85      		ldd r19,Y+12
 11343 488a 820F      		add r24,r18
 11344 488c 931F      		adc r25,r19
 11345 488e FC01      		movw r30,r24
 11346 4890 8081      		ld r24,Z
 11347 4892 9181      		ldd r25,Z+1
 11348 4894 988B      		std Y+16,r25
 11349 4896 8F87      		std Y+15,r24
1470:lp_solve_5.5/lp_SOS.c ****       for(i = 1; i < n; i++) {
 11350               		.loc 1 1470 0
 11351 4898 81E0      		ldi r24,lo8(1)
 11352 489a 90E0      		ldi r25,0
 11353 489c 9A83      		std Y+2,r25
 11354 489e 8983      		std Y+1,r24
 11355 48a0 00C0      		rjmp .L461
 11356               	.L465:
1471:lp_solve_5.5/lp_SOS.c ****         if((abs(list[i]) == nn) || (solution[lp->rows + abs(list[i])] != 0))
 11357               		.loc 1 1471 0
 11358 48a2 8981      		ldd r24,Y+1
 11359 48a4 9A81      		ldd r25,Y+2
 11360 48a6 880F      		lsl r24
 11361 48a8 991F      		rol r25
 11362 48aa 2B85      		ldd r18,Y+11
 11363 48ac 3C85      		ldd r19,Y+12
 11364 48ae 820F      		add r24,r18
 11365 48b0 931F      		adc r25,r19
 11366 48b2 FC01      		movw r30,r24
 11367 48b4 8081      		ld r24,Z
 11368 48b6 9181      		ldd r25,Z+1
 11369 48b8 9923      		tst r25
 11370 48ba 04F4      		brge .L462
 11371 48bc 9195      		neg r25
 11372 48be 8195      		neg r24
 11373 48c0 9109      		sbc r25,__zero_reg__
 11374               	.L462:
 11375 48c2 9C01      		movw r18,r24
 11376 48c4 8F85      		ldd r24,Y+15
 11377 48c6 9889      		ldd r25,Y+16
 11378 48c8 2817      		cp r18,r24
 11379 48ca 3907      		cpc r19,r25
 11380 48cc 01F0      		breq .L463
 11381               		.loc 1 1471 0 is_stmt 0 discriminator 1
 11382 48ce 8F81      		ldd r24,Y+7
 11383 48d0 9885      		ldd r25,Y+8
 11384 48d2 8651      		subi r24,22
 11385 48d4 9E4F      		sbci r25,-2
 11386 48d6 FC01      		movw r30,r24
 11387 48d8 2081      		ld r18,Z
 11388 48da 3181      		ldd r19,Z+1
 11389 48dc 8981      		ldd r24,Y+1
 11390 48de 9A81      		ldd r25,Y+2
 11391 48e0 880F      		lsl r24
 11392 48e2 991F      		rol r25
 11393 48e4 4B85      		ldd r20,Y+11
 11394 48e6 5C85      		ldd r21,Y+12
 11395 48e8 840F      		add r24,r20
 11396 48ea 951F      		adc r25,r21
 11397 48ec FC01      		movw r30,r24
 11398 48ee 8081      		ld r24,Z
 11399 48f0 9181      		ldd r25,Z+1
 11400 48f2 9923      		tst r25
 11401 48f4 04F4      		brge .L464
 11402 48f6 9195      		neg r25
 11403 48f8 8195      		neg r24
 11404 48fa 9109      		sbc r25,__zero_reg__
 11405               	.L464:
 11406 48fc 820F      		add r24,r18
 11407 48fe 931F      		adc r25,r19
 11408 4900 880F      		lsl r24
 11409 4902 991F      		rol r25
 11410 4904 880F      		lsl r24
 11411 4906 991F      		rol r25
 11412 4908 2D89      		ldd r18,Y+21
 11413 490a 3E89      		ldd r19,Y+22
 11414 490c 820F      		add r24,r18
 11415 490e 931F      		adc r25,r19
 11416 4910 FC01      		movw r30,r24
 11417 4912 8081      		ld r24,Z
 11418 4914 9181      		ldd r25,Z+1
 11419 4916 A281      		ldd r26,Z+2
 11420 4918 B381      		ldd r27,Z+3
 11421 491a 20E0      		ldi r18,0
 11422 491c 30E0      		ldi r19,0
 11423 491e A901      		movw r20,r18
 11424 4920 BC01      		movw r22,r24
 11425 4922 CD01      		movw r24,r26
 11426 4924 0E94 0000 		call __nesf2
 11427 4928 8823      		tst r24
 11428 492a 01F4      		brne .L463
1470:lp_solve_5.5/lp_SOS.c ****       for(i = 1; i < n; i++) {
 11429               		.loc 1 1470 0 is_stmt 1 discriminator 2
 11430 492c 8981      		ldd r24,Y+1
 11431 492e 9A81      		ldd r25,Y+2
 11432 4930 0196      		adiw r24,1
 11433 4932 9A83      		std Y+2,r25
 11434 4934 8983      		std Y+1,r24
 11435               	.L461:
1470:lp_solve_5.5/lp_SOS.c ****       for(i = 1; i < n; i++) {
 11436               		.loc 1 1470 0 is_stmt 0 discriminator 1
 11437 4936 2981      		ldd r18,Y+1
 11438 4938 3A81      		ldd r19,Y+2
 11439 493a 8D85      		ldd r24,Y+13
 11440 493c 9E85      		ldd r25,Y+14
 11441 493e 2817      		cp r18,r24
 11442 4940 3907      		cpc r19,r25
 11443 4942 04F4      		brge .+2
 11444 4944 00C0      		rjmp .L465
 11445               	.L463:
1472:lp_solve_5.5/lp_SOS.c ****           break;
1473:lp_solve_5.5/lp_SOS.c ****       }
1474:lp_solve_5.5/lp_SOS.c ****       if(abs(list[i]) != nn)
 11446               		.loc 1 1474 0 is_stmt 1
 11447 4946 8981      		ldd r24,Y+1
 11448 4948 9A81      		ldd r25,Y+2
 11449 494a 880F      		lsl r24
 11450 494c 991F      		rol r25
 11451 494e 2B85      		ldd r18,Y+11
 11452 4950 3C85      		ldd r19,Y+12
 11453 4952 820F      		add r24,r18
 11454 4954 931F      		adc r25,r19
 11455 4956 FC01      		movw r30,r24
 11456 4958 8081      		ld r24,Z
 11457 495a 9181      		ldd r25,Z+1
 11458 495c 9923      		tst r25
 11459 495e 04F4      		brge .L466
 11460 4960 9195      		neg r25
 11461 4962 8195      		neg r24
 11462 4964 9109      		sbc r25,__zero_reg__
 11463               	.L466:
 11464 4966 9C01      		movw r18,r24
 11465 4968 8F85      		ldd r24,Y+15
 11466 496a 9889      		ldd r25,Y+16
 11467 496c 2817      		cp r18,r24
 11468 496e 3907      		cpc r19,r25
 11469 4970 01F4      		brne .+2
 11470 4972 00C0      		rjmp .L469
1475:lp_solve_5.5/lp_SOS.c ****         status = SOS_INTERNALERROR;  /* Set consistency error (leading set variables are non-zero) 
 11471               		.loc 1 1475 0
 11472 4974 82E0      		ldi r24,lo8(2)
 11473 4976 90E0      		ldi r25,0
 11474 4978 9E83      		std Y+6,r25
 11475 497a 8D83      		std Y+5,r24
 11476 497c 00C0      		rjmp .L481
 11477               	.L474:
1476:lp_solve_5.5/lp_SOS.c ****       else {
1477:lp_solve_5.5/lp_SOS.c ****        /* Scan active SOS variables until we find a non-zero value */
1478:lp_solve_5.5/lp_SOS.c ****         while(count > 0) {
1479:lp_solve_5.5/lp_SOS.c ****           if(solution[lp->rows + abs(list[i])] != 0)
 11478               		.loc 1 1479 0
 11479 497e 8F81      		ldd r24,Y+7
 11480 4980 9885      		ldd r25,Y+8
 11481 4982 8651      		subi r24,22
 11482 4984 9E4F      		sbci r25,-2
 11483 4986 FC01      		movw r30,r24
 11484 4988 2081      		ld r18,Z
 11485 498a 3181      		ldd r19,Z+1
 11486 498c 8981      		ldd r24,Y+1
 11487 498e 9A81      		ldd r25,Y+2
 11488 4990 880F      		lsl r24
 11489 4992 991F      		rol r25
 11490 4994 4B85      		ldd r20,Y+11
 11491 4996 5C85      		ldd r21,Y+12
 11492 4998 840F      		add r24,r20
 11493 499a 951F      		adc r25,r21
 11494 499c FC01      		movw r30,r24
 11495 499e 8081      		ld r24,Z
 11496 49a0 9181      		ldd r25,Z+1
 11497 49a2 9923      		tst r25
 11498 49a4 04F4      		brge .L470
 11499 49a6 9195      		neg r25
 11500 49a8 8195      		neg r24
 11501 49aa 9109      		sbc r25,__zero_reg__
 11502               	.L470:
 11503 49ac 820F      		add r24,r18
 11504 49ae 931F      		adc r25,r19
 11505 49b0 880F      		lsl r24
 11506 49b2 991F      		rol r25
 11507 49b4 880F      		lsl r24
 11508 49b6 991F      		rol r25
 11509 49b8 2D89      		ldd r18,Y+21
 11510 49ba 3E89      		ldd r19,Y+22
 11511 49bc 820F      		add r24,r18
 11512 49be 931F      		adc r25,r19
 11513 49c0 FC01      		movw r30,r24
 11514 49c2 8081      		ld r24,Z
 11515 49c4 9181      		ldd r25,Z+1
 11516 49c6 A281      		ldd r26,Z+2
 11517 49c8 B381      		ldd r27,Z+3
 11518 49ca 20E0      		ldi r18,0
 11519 49cc 30E0      		ldi r19,0
 11520 49ce A901      		movw r20,r18
 11521 49d0 BC01      		movw r22,r24
 11522 49d2 CD01      		movw r24,r26
 11523 49d4 0E94 0000 		call __nesf2
 11524 49d8 8823      		tst r24
 11525 49da 01F4      		brne .L500
1480:lp_solve_5.5/lp_SOS.c ****             break;
1481:lp_solve_5.5/lp_SOS.c ****           i++;
 11526               		.loc 1 1481 0
 11527 49dc 8981      		ldd r24,Y+1
 11528 49de 9A81      		ldd r25,Y+2
 11529 49e0 0196      		adiw r24,1
 11530 49e2 9A83      		std Y+2,r25
 11531 49e4 8983      		std Y+1,r24
1482:lp_solve_5.5/lp_SOS.c ****           count--;
 11532               		.loc 1 1482 0
 11533 49e6 8B81      		ldd r24,Y+3
 11534 49e8 9C81      		ldd r25,Y+4
 11535 49ea 0197      		sbiw r24,1
 11536 49ec 9C83      		std Y+4,r25
 11537 49ee 8B83      		std Y+3,r24
 11538               	.L469:
1478:lp_solve_5.5/lp_SOS.c ****           if(solution[lp->rows + abs(list[i])] != 0)
 11539               		.loc 1 1478 0
 11540 49f0 8B81      		ldd r24,Y+3
 11541 49f2 9C81      		ldd r25,Y+4
 11542 49f4 1816      		cp __zero_reg__,r24
 11543 49f6 1906      		cpc __zero_reg__,r25
 11544 49f8 04F0      		brlt .L474
 11545 49fa 00C0      		rjmp .L475
 11546               	.L500:
1480:lp_solve_5.5/lp_SOS.c ****             break;
 11547               		.loc 1 1480 0
 11548 49fc 0000      		nop
1483:lp_solve_5.5/lp_SOS.c ****         }
1484:lp_solve_5.5/lp_SOS.c ****        /* Scan active non-zero SOS variables; break at first non-zero (rest required to be zero) */
1485:lp_solve_5.5/lp_SOS.c ****         while(count > 0) {
 11549               		.loc 1 1485 0
 11550 49fe 00C0      		rjmp .L475
 11551               	.L480:
1486:lp_solve_5.5/lp_SOS.c ****           if(solution[lp->rows + abs(list[i])] == 0)
 11552               		.loc 1 1486 0
 11553 4a00 8F81      		ldd r24,Y+7
 11554 4a02 9885      		ldd r25,Y+8
 11555 4a04 8651      		subi r24,22
 11556 4a06 9E4F      		sbci r25,-2
 11557 4a08 FC01      		movw r30,r24
 11558 4a0a 2081      		ld r18,Z
 11559 4a0c 3181      		ldd r19,Z+1
 11560 4a0e 8981      		ldd r24,Y+1
 11561 4a10 9A81      		ldd r25,Y+2
 11562 4a12 880F      		lsl r24
 11563 4a14 991F      		rol r25
 11564 4a16 4B85      		ldd r20,Y+11
 11565 4a18 5C85      		ldd r21,Y+12
 11566 4a1a 840F      		add r24,r20
 11567 4a1c 951F      		adc r25,r21
 11568 4a1e FC01      		movw r30,r24
 11569 4a20 8081      		ld r24,Z
 11570 4a22 9181      		ldd r25,Z+1
 11571 4a24 9923      		tst r25
 11572 4a26 04F4      		brge .L476
 11573 4a28 9195      		neg r25
 11574 4a2a 8195      		neg r24
 11575 4a2c 9109      		sbc r25,__zero_reg__
 11576               	.L476:
 11577 4a2e 820F      		add r24,r18
 11578 4a30 931F      		adc r25,r19
 11579 4a32 880F      		lsl r24
 11580 4a34 991F      		rol r25
 11581 4a36 880F      		lsl r24
 11582 4a38 991F      		rol r25
 11583 4a3a 2D89      		ldd r18,Y+21
 11584 4a3c 3E89      		ldd r19,Y+22
 11585 4a3e 820F      		add r24,r18
 11586 4a40 931F      		adc r25,r19
 11587 4a42 FC01      		movw r30,r24
 11588 4a44 8081      		ld r24,Z
 11589 4a46 9181      		ldd r25,Z+1
 11590 4a48 A281      		ldd r26,Z+2
 11591 4a4a B381      		ldd r27,Z+3
 11592 4a4c 20E0      		ldi r18,0
 11593 4a4e 30E0      		ldi r19,0
 11594 4a50 A901      		movw r20,r18
 11595 4a52 BC01      		movw r22,r24
 11596 4a54 CD01      		movw r24,r26
 11597 4a56 0E94 0000 		call __eqsf2
 11598 4a5a 8823      		tst r24
 11599 4a5c 01F0      		breq .L501
1487:lp_solve_5.5/lp_SOS.c ****             break;
1488:lp_solve_5.5/lp_SOS.c ****           i++;
 11600               		.loc 1 1488 0
 11601 4a5e 8981      		ldd r24,Y+1
 11602 4a60 9A81      		ldd r25,Y+2
 11603 4a62 0196      		adiw r24,1
 11604 4a64 9A83      		std Y+2,r25
 11605 4a66 8983      		std Y+1,r24
1489:lp_solve_5.5/lp_SOS.c ****           count--;
 11606               		.loc 1 1489 0
 11607 4a68 8B81      		ldd r24,Y+3
 11608 4a6a 9C81      		ldd r25,Y+4
 11609 4a6c 0197      		sbiw r24,1
 11610 4a6e 9C83      		std Y+4,r25
 11611 4a70 8B83      		std Y+3,r24
 11612               	.L475:
1485:lp_solve_5.5/lp_SOS.c ****           if(solution[lp->rows + abs(list[i])] == 0)
 11613               		.loc 1 1485 0
 11614 4a72 8B81      		ldd r24,Y+3
 11615 4a74 9C81      		ldd r25,Y+4
 11616 4a76 1816      		cp __zero_reg__,r24
 11617 4a78 1906      		cpc __zero_reg__,r25
 11618 4a7a 04F0      		brlt .L480
 11619 4a7c 00C0      		rjmp .L479
 11620               	.L501:
1487:lp_solve_5.5/lp_SOS.c ****             break;
 11621               		.loc 1 1487 0
 11622 4a7e 0000      		nop
 11623               	.L479:
1490:lp_solve_5.5/lp_SOS.c ****         }
1491:lp_solve_5.5/lp_SOS.c ****         if(count > 0)
 11624               		.loc 1 1491 0
 11625 4a80 8B81      		ldd r24,Y+3
 11626 4a82 9C81      		ldd r25,Y+4
 11627 4a84 1816      		cp __zero_reg__,r24
 11628 4a86 1906      		cpc __zero_reg__,r25
 11629 4a88 04F0      		brlt .+2
 11630 4a8a 00C0      		rjmp .L481
1492:lp_solve_5.5/lp_SOS.c ****           status = SOS_INTERNALERROR; /* Set consistency error (active set variables are zero) */
 11631               		.loc 1 1492 0
 11632 4a8c 82E0      		ldi r24,lo8(2)
 11633 4a8e 90E0      		ldi r25,0
 11634 4a90 9E83      		std Y+6,r25
 11635 4a92 8D83      		std Y+5,r24
 11636 4a94 00C0      		rjmp .L481
 11637               	.L460:
1493:lp_solve_5.5/lp_SOS.c ****       }
1494:lp_solve_5.5/lp_SOS.c ****     }
1495:lp_solve_5.5/lp_SOS.c ****     else {
1496:lp_solve_5.5/lp_SOS.c ****       i = 1;
 11638               		.loc 1 1496 0
 11639 4a96 81E0      		ldi r24,lo8(1)
 11640 4a98 90E0      		ldi r25,0
 11641 4a9a 9A83      		std Y+2,r25
 11642 4a9c 8983      		std Y+1,r24
1497:lp_solve_5.5/lp_SOS.c ****       /* There are no active variables; see if we have happened to find a valid header */
1498:lp_solve_5.5/lp_SOS.c ****       while((i < n) && (solution[lp->rows + abs(list[i])] == 0))
 11643               		.loc 1 1498 0
 11644 4a9e 00C0      		rjmp .L482
 11645               	.L485:
1499:lp_solve_5.5/lp_SOS.c ****         i++;
 11646               		.loc 1 1499 0
 11647 4aa0 8981      		ldd r24,Y+1
 11648 4aa2 9A81      		ldd r25,Y+2
 11649 4aa4 0196      		adiw r24,1
 11650 4aa6 9A83      		std Y+2,r25
 11651 4aa8 8983      		std Y+1,r24
 11652               	.L482:
1498:lp_solve_5.5/lp_SOS.c ****         i++;
 11653               		.loc 1 1498 0
 11654 4aaa 2981      		ldd r18,Y+1
 11655 4aac 3A81      		ldd r19,Y+2
 11656 4aae 8D85      		ldd r24,Y+13
 11657 4ab0 9E85      		ldd r25,Y+14
 11658 4ab2 2817      		cp r18,r24
 11659 4ab4 3907      		cpc r19,r25
 11660 4ab6 04F4      		brge .L483
1498:lp_solve_5.5/lp_SOS.c ****         i++;
 11661               		.loc 1 1498 0 is_stmt 0 discriminator 1
 11662 4ab8 8F81      		ldd r24,Y+7
 11663 4aba 9885      		ldd r25,Y+8
 11664 4abc 8651      		subi r24,22
 11665 4abe 9E4F      		sbci r25,-2
 11666 4ac0 FC01      		movw r30,r24
 11667 4ac2 2081      		ld r18,Z
 11668 4ac4 3181      		ldd r19,Z+1
 11669 4ac6 8981      		ldd r24,Y+1
 11670 4ac8 9A81      		ldd r25,Y+2
 11671 4aca 880F      		lsl r24
 11672 4acc 991F      		rol r25
 11673 4ace 4B85      		ldd r20,Y+11
 11674 4ad0 5C85      		ldd r21,Y+12
 11675 4ad2 840F      		add r24,r20
 11676 4ad4 951F      		adc r25,r21
 11677 4ad6 FC01      		movw r30,r24
 11678 4ad8 8081      		ld r24,Z
 11679 4ada 9181      		ldd r25,Z+1
 11680 4adc 9923      		tst r25
 11681 4ade 04F4      		brge .L484
 11682 4ae0 9195      		neg r25
 11683 4ae2 8195      		neg r24
 11684 4ae4 9109      		sbc r25,__zero_reg__
 11685               	.L484:
 11686 4ae6 820F      		add r24,r18
 11687 4ae8 931F      		adc r25,r19
 11688 4aea 880F      		lsl r24
 11689 4aec 991F      		rol r25
 11690 4aee 880F      		lsl r24
 11691 4af0 991F      		rol r25
 11692 4af2 2D89      		ldd r18,Y+21
 11693 4af4 3E89      		ldd r19,Y+22
 11694 4af6 820F      		add r24,r18
 11695 4af8 931F      		adc r25,r19
 11696 4afa FC01      		movw r30,r24
 11697 4afc 8081      		ld r24,Z
 11698 4afe 9181      		ldd r25,Z+1
 11699 4b00 A281      		ldd r26,Z+2
 11700 4b02 B381      		ldd r27,Z+3
 11701 4b04 20E0      		ldi r18,0
 11702 4b06 30E0      		ldi r19,0
 11703 4b08 A901      		movw r20,r18
 11704 4b0a BC01      		movw r22,r24
 11705 4b0c CD01      		movw r24,r26
 11706 4b0e 0E94 0000 		call __eqsf2
 11707 4b12 8823      		tst r24
 11708 4b14 01F0      		breq .L485
 11709               	.L483:
1500:lp_solve_5.5/lp_SOS.c ****       count = 0;
 11710               		.loc 1 1500 0 is_stmt 1
 11711 4b16 1C82      		std Y+4,__zero_reg__
 11712 4b18 1B82      		std Y+3,__zero_reg__
1501:lp_solve_5.5/lp_SOS.c ****       while((i < n) && (count <= nn) && (solution[lp->rows + abs(list[i])] != 0)) {
 11713               		.loc 1 1501 0
 11714 4b1a 00C0      		rjmp .L486
 11715               	.L489:
1502:lp_solve_5.5/lp_SOS.c ****         count++;
 11716               		.loc 1 1502 0
 11717 4b1c 8B81      		ldd r24,Y+3
 11718 4b1e 9C81      		ldd r25,Y+4
 11719 4b20 0196      		adiw r24,1
 11720 4b22 9C83      		std Y+4,r25
 11721 4b24 8B83      		std Y+3,r24
1503:lp_solve_5.5/lp_SOS.c ****         i++;
 11722               		.loc 1 1503 0
 11723 4b26 8981      		ldd r24,Y+1
 11724 4b28 9A81      		ldd r25,Y+2
 11725 4b2a 0196      		adiw r24,1
 11726 4b2c 9A83      		std Y+2,r25
 11727 4b2e 8983      		std Y+1,r24
 11728               	.L486:
1501:lp_solve_5.5/lp_SOS.c ****       while((i < n) && (count <= nn) && (solution[lp->rows + abs(list[i])] != 0)) {
 11729               		.loc 1 1501 0
 11730 4b30 2981      		ldd r18,Y+1
 11731 4b32 3A81      		ldd r19,Y+2
 11732 4b34 8D85      		ldd r24,Y+13
 11733 4b36 9E85      		ldd r25,Y+14
 11734 4b38 2817      		cp r18,r24
 11735 4b3a 3907      		cpc r19,r25
 11736 4b3c 04F4      		brge .L487
1501:lp_solve_5.5/lp_SOS.c ****       while((i < n) && (count <= nn) && (solution[lp->rows + abs(list[i])] != 0)) {
 11737               		.loc 1 1501 0 is_stmt 0 discriminator 1
 11738 4b3e 2B81      		ldd r18,Y+3
 11739 4b40 3C81      		ldd r19,Y+4
 11740 4b42 8F85      		ldd r24,Y+15
 11741 4b44 9889      		ldd r25,Y+16
 11742 4b46 8217      		cp r24,r18
 11743 4b48 9307      		cpc r25,r19
 11744 4b4a 04F0      		brlt .L487
1501:lp_solve_5.5/lp_SOS.c ****       while((i < n) && (count <= nn) && (solution[lp->rows + abs(list[i])] != 0)) {
 11745               		.loc 1 1501 0 discriminator 2
 11746 4b4c 8F81      		ldd r24,Y+7
 11747 4b4e 9885      		ldd r25,Y+8
 11748 4b50 8651      		subi r24,22
 11749 4b52 9E4F      		sbci r25,-2
 11750 4b54 FC01      		movw r30,r24
 11751 4b56 2081      		ld r18,Z
 11752 4b58 3181      		ldd r19,Z+1
 11753 4b5a 8981      		ldd r24,Y+1
 11754 4b5c 9A81      		ldd r25,Y+2
 11755 4b5e 880F      		lsl r24
 11756 4b60 991F      		rol r25
 11757 4b62 4B85      		ldd r20,Y+11
 11758 4b64 5C85      		ldd r21,Y+12
 11759 4b66 840F      		add r24,r20
 11760 4b68 951F      		adc r25,r21
 11761 4b6a FC01      		movw r30,r24
 11762 4b6c 8081      		ld r24,Z
 11763 4b6e 9181      		ldd r25,Z+1
 11764 4b70 9923      		tst r25
 11765 4b72 04F4      		brge .L488
 11766 4b74 9195      		neg r25
 11767 4b76 8195      		neg r24
 11768 4b78 9109      		sbc r25,__zero_reg__
 11769               	.L488:
 11770 4b7a 820F      		add r24,r18
 11771 4b7c 931F      		adc r25,r19
 11772 4b7e 880F      		lsl r24
 11773 4b80 991F      		rol r25
 11774 4b82 880F      		lsl r24
 11775 4b84 991F      		rol r25
 11776 4b86 2D89      		ldd r18,Y+21
 11777 4b88 3E89      		ldd r19,Y+22
 11778 4b8a 820F      		add r24,r18
 11779 4b8c 931F      		adc r25,r19
 11780 4b8e FC01      		movw r30,r24
 11781 4b90 8081      		ld r24,Z
 11782 4b92 9181      		ldd r25,Z+1
 11783 4b94 A281      		ldd r26,Z+2
 11784 4b96 B381      		ldd r27,Z+3
 11785 4b98 20E0      		ldi r18,0
 11786 4b9a 30E0      		ldi r19,0
 11787 4b9c A901      		movw r20,r18
 11788 4b9e BC01      		movw r22,r24
 11789 4ba0 CD01      		movw r24,r26
 11790 4ba2 0E94 0000 		call __nesf2
 11791 4ba6 8823      		tst r24
 11792 4ba8 01F0      		breq .+2
 11793 4baa 00C0      		rjmp .L489
 11794               	.L487:
1504:lp_solve_5.5/lp_SOS.c ****       }
1505:lp_solve_5.5/lp_SOS.c ****       if(count > nn)
 11795               		.loc 1 1505 0 is_stmt 1
 11796 4bac 2B81      		ldd r18,Y+3
 11797 4bae 3C81      		ldd r19,Y+4
 11798 4bb0 8F85      		ldd r24,Y+15
 11799 4bb2 9889      		ldd r25,Y+16
 11800 4bb4 8217      		cp r24,r18
 11801 4bb6 9307      		cpc r25,r19
 11802 4bb8 04F4      		brge .L481
1506:lp_solve_5.5/lp_SOS.c ****         status = SOS_INFEASIBLE;   /* Too-many sequential non-zero variables */
 11803               		.loc 1 1506 0
 11804 4bba 81E0      		ldi r24,lo8(1)
 11805 4bbc 90E0      		ldi r25,0
 11806 4bbe 9E83      		std Y+6,r25
 11807 4bc0 8D83      		std Y+5,r24
 11808               	.L481:
1507:lp_solve_5.5/lp_SOS.c ****     }
1508:lp_solve_5.5/lp_SOS.c **** 
1509:lp_solve_5.5/lp_SOS.c ****     /* Scan the trailing set of SOS variables; fail if some are non-zero */
1510:lp_solve_5.5/lp_SOS.c ****     if(status <= 0) {
 11809               		.loc 1 1510 0
 11810 4bc2 8D81      		ldd r24,Y+5
 11811 4bc4 9E81      		ldd r25,Y+6
 11812 4bc6 1816      		cp __zero_reg__,r24
 11813 4bc8 1906      		cpc __zero_reg__,r25
 11814 4bca 04F4      		brge .+2
 11815 4bcc 00C0      		rjmp .L453
1511:lp_solve_5.5/lp_SOS.c ****       n--;
 11816               		.loc 1 1511 0
 11817 4bce 8D85      		ldd r24,Y+13
 11818 4bd0 9E85      		ldd r25,Y+14
 11819 4bd2 0197      		sbiw r24,1
 11820 4bd4 9E87      		std Y+14,r25
 11821 4bd6 8D87      		std Y+13,r24
1512:lp_solve_5.5/lp_SOS.c ****       while(i <= n) {
 11822               		.loc 1 1512 0
 11823 4bd8 00C0      		rjmp .L490
 11824               	.L495:
1513:lp_solve_5.5/lp_SOS.c ****         if(solution[lp->rows + abs(list[i])] != 0)
 11825               		.loc 1 1513 0
 11826 4bda 8F81      		ldd r24,Y+7
 11827 4bdc 9885      		ldd r25,Y+8
 11828 4bde 8651      		subi r24,22
 11829 4be0 9E4F      		sbci r25,-2
 11830 4be2 FC01      		movw r30,r24
 11831 4be4 2081      		ld r18,Z
 11832 4be6 3181      		ldd r19,Z+1
 11833 4be8 8981      		ldd r24,Y+1
 11834 4bea 9A81      		ldd r25,Y+2
 11835 4bec 880F      		lsl r24
 11836 4bee 991F      		rol r25
 11837 4bf0 4B85      		ldd r20,Y+11
 11838 4bf2 5C85      		ldd r21,Y+12
 11839 4bf4 840F      		add r24,r20
 11840 4bf6 951F      		adc r25,r21
 11841 4bf8 FC01      		movw r30,r24
 11842 4bfa 8081      		ld r24,Z
 11843 4bfc 9181      		ldd r25,Z+1
 11844 4bfe 9923      		tst r25
 11845 4c00 04F4      		brge .L491
 11846 4c02 9195      		neg r25
 11847 4c04 8195      		neg r24
 11848 4c06 9109      		sbc r25,__zero_reg__
 11849               	.L491:
 11850 4c08 820F      		add r24,r18
 11851 4c0a 931F      		adc r25,r19
 11852 4c0c 880F      		lsl r24
 11853 4c0e 991F      		rol r25
 11854 4c10 880F      		lsl r24
 11855 4c12 991F      		rol r25
 11856 4c14 2D89      		ldd r18,Y+21
 11857 4c16 3E89      		ldd r19,Y+22
 11858 4c18 820F      		add r24,r18
 11859 4c1a 931F      		adc r25,r19
 11860 4c1c FC01      		movw r30,r24
 11861 4c1e 8081      		ld r24,Z
 11862 4c20 9181      		ldd r25,Z+1
 11863 4c22 A281      		ldd r26,Z+2
 11864 4c24 B381      		ldd r27,Z+3
 11865 4c26 20E0      		ldi r18,0
 11866 4c28 30E0      		ldi r19,0
 11867 4c2a A901      		movw r20,r18
 11868 4c2c BC01      		movw r22,r24
 11869 4c2e CD01      		movw r24,r26
 11870 4c30 0E94 0000 		call __nesf2
 11871 4c34 8823      		tst r24
 11872 4c36 01F4      		brne .L502
1514:lp_solve_5.5/lp_SOS.c ****           break;
1515:lp_solve_5.5/lp_SOS.c ****         i++;
 11873               		.loc 1 1515 0
 11874 4c38 8981      		ldd r24,Y+1
 11875 4c3a 9A81      		ldd r25,Y+2
 11876 4c3c 0196      		adiw r24,1
 11877 4c3e 9A83      		std Y+2,r25
 11878 4c40 8983      		std Y+1,r24
 11879               	.L490:
1512:lp_solve_5.5/lp_SOS.c ****         if(solution[lp->rows + abs(list[i])] != 0)
 11880               		.loc 1 1512 0
 11881 4c42 2981      		ldd r18,Y+1
 11882 4c44 3A81      		ldd r19,Y+2
 11883 4c46 8D85      		ldd r24,Y+13
 11884 4c48 9E85      		ldd r25,Y+14
 11885 4c4a 8217      		cp r24,r18
 11886 4c4c 9307      		cpc r25,r19
 11887 4c4e 04F4      		brge .L495
 11888 4c50 00C0      		rjmp .L494
 11889               	.L502:
1514:lp_solve_5.5/lp_SOS.c ****           break;
 11890               		.loc 1 1514 0
 11891 4c52 0000      		nop
 11892               	.L494:
1516:lp_solve_5.5/lp_SOS.c ****       }
1517:lp_solve_5.5/lp_SOS.c ****       if(i <= n)
 11893               		.loc 1 1517 0
 11894 4c54 2981      		ldd r18,Y+1
 11895 4c56 3A81      		ldd r19,Y+2
 11896 4c58 8D85      		ldd r24,Y+13
 11897 4c5a 9E85      		ldd r25,Y+14
 11898 4c5c 8217      		cp r24,r18
 11899 4c5e 9307      		cpc r25,r19
 11900 4c60 04F0      		brlt .L496
1518:lp_solve_5.5/lp_SOS.c ****         status = SOS_INFEASIBLE;  /* Too-many sequential non-zero variables */
 11901               		.loc 1 1518 0
 11902 4c62 81E0      		ldi r24,lo8(1)
 11903 4c64 90E0      		ldi r25,0
 11904 4c66 9E83      		std Y+6,r25
 11905 4c68 8D83      		std Y+5,r24
 11906 4c6a 00C0      		rjmp .L453
 11907               	.L496:
1519:lp_solve_5.5/lp_SOS.c **** 
1520:lp_solve_5.5/lp_SOS.c ****       /* Code member deficiency for SOS3 separately */
1521:lp_solve_5.5/lp_SOS.c ****       else if((status == -1) && (type <= SOS3))
 11908               		.loc 1 1521 0
 11909 4c6c 8D81      		ldd r24,Y+5
 11910 4c6e 9E81      		ldd r25,Y+6
 11911 4c70 0196      		adiw r24,1
 11912 4c72 01F4      		brne .L453
 11913               		.loc 1 1521 0 is_stmt 0 discriminator 1
 11914 4c74 8985      		ldd r24,Y+9
 11915 4c76 9A85      		ldd r25,Y+10
 11916 4c78 9923      		tst r25
 11917 4c7a 04F4      		brge .L453
1522:lp_solve_5.5/lp_SOS.c ****         status = SOS3_INCOMPLETE;
 11918               		.loc 1 1522 0 is_stmt 1
 11919 4c7c 8EEF      		ldi r24,lo8(-2)
 11920 4c7e 9FEF      		ldi r25,lo8(-1)
 11921 4c80 9E83      		std Y+6,r25
 11922 4c82 8D83      		std Y+5,r24
 11923 4c84 00C0      		rjmp .L453
 11924               	.L498:
1447:lp_solve_5.5/lp_SOS.c ****     }
 11925               		.loc 1 1447 0
 11926 4c86 0000      		nop
 11927               	.L453:
1523:lp_solve_5.5/lp_SOS.c ****     }
1524:lp_solve_5.5/lp_SOS.c **** 
1525:lp_solve_5.5/lp_SOS.c ****   }
1526:lp_solve_5.5/lp_SOS.c ****   return( status );
 11928               		.loc 1 1526 0
 11929 4c88 8D81      		ldd r24,Y+5
 11930 4c8a 9E81      		ldd r25,Y+6
 11931               	/* epilogue start */
1527:lp_solve_5.5/lp_SOS.c **** }
 11932               		.loc 1 1527 0
 11933 4c8c 6696      		adiw r28,22
 11934 4c8e 0FB6      		in __tmp_reg__,__SREG__
 11935 4c90 F894      		cli
 11936 4c92 DEBF      		out __SP_H__,r29
 11937 4c94 0FBE      		out __SREG__,__tmp_reg__
 11938 4c96 CDBF      		out __SP_L__,r28
 11939 4c98 DF91      		pop r29
 11940 4c9a CF91      		pop r28
 11941 4c9c 0895      		ret
 11942               		.cfi_endproc
 11943               	.LFE39:
 11945               	.global	SOS_is_feasible
 11947               	SOS_is_feasible:
 11948               	.LFB40:
1528:lp_solve_5.5/lp_SOS.c **** 
1529:lp_solve_5.5/lp_SOS.c **** MYBOOL SOS_is_feasible(SOSgroup *group, int sosindex, REAL *solution)
1530:lp_solve_5.5/lp_SOS.c **** /* Determine if the SOS is feasible up to the current SOS variable */
1531:lp_solve_5.5/lp_SOS.c **** {
 11949               		.loc 1 1531 0
 11950               		.cfi_startproc
 11951 4c9e CF93      		push r28
 11952               	.LCFI168:
 11953               		.cfi_def_cfa_offset 3
 11954               		.cfi_offset 28, -2
 11955 4ca0 DF93      		push r29
 11956               	.LCFI169:
 11957               		.cfi_def_cfa_offset 4
 11958               		.cfi_offset 29, -3
 11959 4ca2 CDB7      		in r28,__SP_L__
 11960 4ca4 DEB7      		in r29,__SP_H__
 11961               	.LCFI170:
 11962               		.cfi_def_cfa_register 28
 11963 4ca6 6197      		sbiw r28,17
 11964               	.LCFI171:
 11965               		.cfi_def_cfa_offset 21
 11966 4ca8 0FB6      		in __tmp_reg__,__SREG__
 11967 4caa F894      		cli
 11968 4cac DEBF      		out __SP_H__,r29
 11969 4cae 0FBE      		out __SREG__,__tmp_reg__
 11970 4cb0 CDBF      		out __SP_L__,r28
 11971               	/* prologue: function */
 11972               	/* frame size = 17 */
 11973               	/* stack size = 19 */
 11974               	.L__stack_usage = 19
 11975 4cb2 9D87      		std Y+13,r25
 11976 4cb4 8C87      		std Y+12,r24
 11977 4cb6 7F87      		std Y+15,r23
 11978 4cb8 6E87      		std Y+14,r22
 11979 4cba 598B      		std Y+17,r21
 11980 4cbc 488B      		std Y+16,r20
1532:lp_solve_5.5/lp_SOS.c ****   int    i, n, nn, *list;
1533:lp_solve_5.5/lp_SOS.c ****   MYBOOL status = TRUE;
 11981               		.loc 1 1533 0
 11982 4cbe 81E0      		ldi r24,lo8(1)
 11983 4cc0 8B83      		std Y+3,r24
1534:lp_solve_5.5/lp_SOS.c ****   lprec  *lp = group->lp;
 11984               		.loc 1 1534 0
 11985 4cc2 8C85      		ldd r24,Y+12
 11986 4cc4 9D85      		ldd r25,Y+13
 11987 4cc6 FC01      		movw r30,r24
 11988 4cc8 8081      		ld r24,Z
 11989 4cca 9181      		ldd r25,Z+1
 11990 4ccc 9D83      		std Y+5,r25
 11991 4cce 8C83      		std Y+4,r24
1535:lp_solve_5.5/lp_SOS.c **** 
1536:lp_solve_5.5/lp_SOS.c **** #ifdef Paranoia
1537:lp_solve_5.5/lp_SOS.c ****   if((sosindex < 0) || (sosindex > group->sos_count)) {
1538:lp_solve_5.5/lp_SOS.c ****     report(lp, IMPORTANT, "SOS_is_feasible: Invalid SOS index %d\n", sosindex);
1539:lp_solve_5.5/lp_SOS.c ****     return( 0 );
1540:lp_solve_5.5/lp_SOS.c ****   }
1541:lp_solve_5.5/lp_SOS.c **** #endif
1542:lp_solve_5.5/lp_SOS.c **** 
1543:lp_solve_5.5/lp_SOS.c ****   if((sosindex == 0) && (group->sos_count == 1))
 11992               		.loc 1 1543 0
 11993 4cd0 8E85      		ldd r24,Y+14
 11994 4cd2 9F85      		ldd r25,Y+15
 11995 4cd4 892B      		or r24,r25
 11996 4cd6 01F4      		brne .L504
 11997               		.loc 1 1543 0 is_stmt 0 discriminator 1
 11998 4cd8 8C85      		ldd r24,Y+12
 11999 4cda 9D85      		ldd r25,Y+13
 12000 4cdc FC01      		movw r30,r24
 12001 4cde 8681      		ldd r24,Z+6
 12002 4ce0 9781      		ldd r25,Z+7
 12003 4ce2 0197      		sbiw r24,1
 12004 4ce4 01F4      		brne .L504
1544:lp_solve_5.5/lp_SOS.c ****     sosindex = 1;
 12005               		.loc 1 1544 0 is_stmt 1
 12006 4ce6 81E0      		ldi r24,lo8(1)
 12007 4ce8 90E0      		ldi r25,0
 12008 4cea 9F87      		std Y+15,r25
 12009 4cec 8E87      		std Y+14,r24
 12010               	.L504:
1545:lp_solve_5.5/lp_SOS.c **** 
1546:lp_solve_5.5/lp_SOS.c ****   if(sosindex == 0) {
 12011               		.loc 1 1546 0
 12012 4cee 8E85      		ldd r24,Y+14
 12013 4cf0 9F85      		ldd r25,Y+15
 12014 4cf2 892B      		or r24,r25
 12015 4cf4 01F4      		brne .L505
1547:lp_solve_5.5/lp_SOS.c ****     for(i = 1; status && (i <= group->sos_count); i++) {
 12016               		.loc 1 1547 0
 12017 4cf6 81E0      		ldi r24,lo8(1)
 12018 4cf8 90E0      		ldi r25,0
 12019 4cfa 9A83      		std Y+2,r25
 12020 4cfc 8983      		std Y+1,r24
 12021 4cfe 00C0      		rjmp .L506
 12022               	.L508:
1548:lp_solve_5.5/lp_SOS.c ****       status = SOS_is_feasible(group, i, solution);
 12023               		.loc 1 1548 0 discriminator 4
 12024 4d00 4889      		ldd r20,Y+16
 12025 4d02 5989      		ldd r21,Y+17
 12026 4d04 2981      		ldd r18,Y+1
 12027 4d06 3A81      		ldd r19,Y+2
 12028 4d08 8C85      		ldd r24,Y+12
 12029 4d0a 9D85      		ldd r25,Y+13
 12030 4d0c B901      		movw r22,r18
 12031 4d0e 0E94 0000 		call SOS_is_feasible
 12032 4d12 8B83      		std Y+3,r24
1547:lp_solve_5.5/lp_SOS.c ****     for(i = 1; status && (i <= group->sos_count); i++) {
 12033               		.loc 1 1547 0 discriminator 4
 12034 4d14 8981      		ldd r24,Y+1
 12035 4d16 9A81      		ldd r25,Y+2
 12036 4d18 0196      		adiw r24,1
 12037 4d1a 9A83      		std Y+2,r25
 12038 4d1c 8983      		std Y+1,r24
 12039               	.L506:
1547:lp_solve_5.5/lp_SOS.c ****     for(i = 1; status && (i <= group->sos_count); i++) {
 12040               		.loc 1 1547 0 is_stmt 0 discriminator 1
 12041 4d1e 8B81      		ldd r24,Y+3
 12042 4d20 8823      		tst r24
 12043 4d22 01F4      		brne .+2
 12044 4d24 00C0      		rjmp .L507
1547:lp_solve_5.5/lp_SOS.c ****     for(i = 1; status && (i <= group->sos_count); i++) {
 12045               		.loc 1 1547 0 discriminator 3
 12046 4d26 8C85      		ldd r24,Y+12
 12047 4d28 9D85      		ldd r25,Y+13
 12048 4d2a FC01      		movw r30,r24
 12049 4d2c 2681      		ldd r18,Z+6
 12050 4d2e 3781      		ldd r19,Z+7
 12051 4d30 8981      		ldd r24,Y+1
 12052 4d32 9A81      		ldd r25,Y+2
 12053 4d34 2817      		cp r18,r24
 12054 4d36 3907      		cpc r19,r25
 12055 4d38 04F4      		brge .L508
 12056 4d3a 00C0      		rjmp .L507
 12057               	.L505:
1549:lp_solve_5.5/lp_SOS.c ****     }
1550:lp_solve_5.5/lp_SOS.c ****   }
1551:lp_solve_5.5/lp_SOS.c ****   else {
1552:lp_solve_5.5/lp_SOS.c ****     list = group->sos_list[sosindex-1]->members;
 12058               		.loc 1 1552 0 is_stmt 1
 12059 4d3c 8C85      		ldd r24,Y+12
 12060 4d3e 9D85      		ldd r25,Y+13
 12061 4d40 FC01      		movw r30,r24
 12062 4d42 2281      		ldd r18,Z+2
 12063 4d44 3381      		ldd r19,Z+3
 12064 4d46 8E85      		ldd r24,Y+14
 12065 4d48 9F85      		ldd r25,Y+15
 12066 4d4a 8150      		subi r24,1
 12067 4d4c 9048      		sbci r25,-128
 12068 4d4e 880F      		lsl r24
 12069 4d50 991F      		rol r25
 12070 4d52 820F      		add r24,r18
 12071 4d54 931F      		adc r25,r19
 12072 4d56 FC01      		movw r30,r24
 12073 4d58 8081      		ld r24,Z
 12074 4d5a 9181      		ldd r25,Z+1
 12075 4d5c FC01      		movw r30,r24
 12076 4d5e 8585      		ldd r24,Z+13
 12077 4d60 9685      		ldd r25,Z+14
 12078 4d62 9F83      		std Y+7,r25
 12079 4d64 8E83      		std Y+6,r24
1553:lp_solve_5.5/lp_SOS.c ****     n = list[0]+1;
 12080               		.loc 1 1553 0
 12081 4d66 8E81      		ldd r24,Y+6
 12082 4d68 9F81      		ldd r25,Y+7
 12083 4d6a FC01      		movw r30,r24
 12084 4d6c 8081      		ld r24,Z
 12085 4d6e 9181      		ldd r25,Z+1
 12086 4d70 0196      		adiw r24,1
 12087 4d72 9987      		std Y+9,r25
 12088 4d74 8887      		std Y+8,r24
1554:lp_solve_5.5/lp_SOS.c ****     nn = list[n];
 12089               		.loc 1 1554 0
 12090 4d76 8885      		ldd r24,Y+8
 12091 4d78 9985      		ldd r25,Y+9
 12092 4d7a 880F      		lsl r24
 12093 4d7c 991F      		rol r25
 12094 4d7e 2E81      		ldd r18,Y+6
 12095 4d80 3F81      		ldd r19,Y+7
 12096 4d82 820F      		add r24,r18
 12097 4d84 931F      		adc r25,r19
 12098 4d86 FC01      		movw r30,r24
 12099 4d88 8081      		ld r24,Z
 12100 4d8a 9181      		ldd r25,Z+1
 12101 4d8c 9B87      		std Y+11,r25
 12102 4d8e 8A87      		std Y+10,r24
1555:lp_solve_5.5/lp_SOS.c ****     if(nn <= 2)
 12103               		.loc 1 1555 0
 12104 4d90 8A85      		ldd r24,Y+10
 12105 4d92 9B85      		ldd r25,Y+11
 12106 4d94 0397      		sbiw r24,3
 12107 4d96 04F4      		brge .L509
1556:lp_solve_5.5/lp_SOS.c ****       return(status);
 12108               		.loc 1 1556 0
 12109 4d98 8B81      		ldd r24,Y+3
 12110 4d9a 00C0      		rjmp .L510
 12111               	.L509:
1557:lp_solve_5.5/lp_SOS.c **** 
1558:lp_solve_5.5/lp_SOS.c ****    /* Find if we have a gap in the non-zero solution values */
1559:lp_solve_5.5/lp_SOS.c ****     i = 1;
 12112               		.loc 1 1559 0
 12113 4d9c 81E0      		ldi r24,lo8(1)
 12114 4d9e 90E0      		ldi r25,0
 12115 4da0 9A83      		std Y+2,r25
 12116 4da2 8983      		std Y+1,r24
1560:lp_solve_5.5/lp_SOS.c ****     sosindex = 0;
 12117               		.loc 1 1560 0
 12118 4da4 1F86      		std Y+15,__zero_reg__
 12119 4da6 1E86      		std Y+14,__zero_reg__
1561:lp_solve_5.5/lp_SOS.c ****     while((i <= nn) && (list[n+i] != 0)) {
 12120               		.loc 1 1561 0
 12121 4da8 00C0      		rjmp .L511
 12122               	.L514:
1562:lp_solve_5.5/lp_SOS.c ****       while((i <= nn) && (list[n+i] != 0) && (solution[lp->rows+list[n+i]] == 0))
1563:lp_solve_5.5/lp_SOS.c ****         i++;
 12123               		.loc 1 1563 0
 12124 4daa 8981      		ldd r24,Y+1
 12125 4dac 9A81      		ldd r25,Y+2
 12126 4dae 0196      		adiw r24,1
 12127 4db0 9A83      		std Y+2,r25
 12128 4db2 8983      		std Y+1,r24
 12129               	.L512:
1562:lp_solve_5.5/lp_SOS.c ****       while((i <= nn) && (list[n+i] != 0) && (solution[lp->rows+list[n+i]] == 0))
 12130               		.loc 1 1562 0
 12131 4db4 2981      		ldd r18,Y+1
 12132 4db6 3A81      		ldd r19,Y+2
 12133 4db8 8A85      		ldd r24,Y+10
 12134 4dba 9B85      		ldd r25,Y+11
 12135 4dbc 8217      		cp r24,r18
 12136 4dbe 9307      		cpc r25,r19
 12137 4dc0 04F4      		brge .+2
 12138 4dc2 00C0      		rjmp .L513
1562:lp_solve_5.5/lp_SOS.c ****       while((i <= nn) && (list[n+i] != 0) && (solution[lp->rows+list[n+i]] == 0))
 12139               		.loc 1 1562 0 is_stmt 0 discriminator 1
 12140 4dc4 2885      		ldd r18,Y+8
 12141 4dc6 3985      		ldd r19,Y+9
 12142 4dc8 8981      		ldd r24,Y+1
 12143 4dca 9A81      		ldd r25,Y+2
 12144 4dcc 820F      		add r24,r18
 12145 4dce 931F      		adc r25,r19
 12146 4dd0 880F      		lsl r24
 12147 4dd2 991F      		rol r25
 12148 4dd4 2E81      		ldd r18,Y+6
 12149 4dd6 3F81      		ldd r19,Y+7
 12150 4dd8 820F      		add r24,r18
 12151 4dda 931F      		adc r25,r19
 12152 4ddc FC01      		movw r30,r24
 12153 4dde 8081      		ld r24,Z
 12154 4de0 9181      		ldd r25,Z+1
 12155 4de2 892B      		or r24,r25
 12156 4de4 01F0      		breq .L513
1562:lp_solve_5.5/lp_SOS.c ****       while((i <= nn) && (list[n+i] != 0) && (solution[lp->rows+list[n+i]] == 0))
 12157               		.loc 1 1562 0 discriminator 2
 12158 4de6 8C81      		ldd r24,Y+4
 12159 4de8 9D81      		ldd r25,Y+5
 12160 4dea 8651      		subi r24,22
 12161 4dec 9E4F      		sbci r25,-2
 12162 4dee FC01      		movw r30,r24
 12163 4df0 2081      		ld r18,Z
 12164 4df2 3181      		ldd r19,Z+1
 12165 4df4 4885      		ldd r20,Y+8
 12166 4df6 5985      		ldd r21,Y+9
 12167 4df8 8981      		ldd r24,Y+1
 12168 4dfa 9A81      		ldd r25,Y+2
 12169 4dfc 840F      		add r24,r20
 12170 4dfe 951F      		adc r25,r21
 12171 4e00 880F      		lsl r24
 12172 4e02 991F      		rol r25
 12173 4e04 4E81      		ldd r20,Y+6
 12174 4e06 5F81      		ldd r21,Y+7
 12175 4e08 840F      		add r24,r20
 12176 4e0a 951F      		adc r25,r21
 12177 4e0c FC01      		movw r30,r24
 12178 4e0e 8081      		ld r24,Z
 12179 4e10 9181      		ldd r25,Z+1
 12180 4e12 820F      		add r24,r18
 12181 4e14 931F      		adc r25,r19
 12182 4e16 880F      		lsl r24
 12183 4e18 991F      		rol r25
 12184 4e1a 880F      		lsl r24
 12185 4e1c 991F      		rol r25
 12186 4e1e 2889      		ldd r18,Y+16
 12187 4e20 3989      		ldd r19,Y+17
 12188 4e22 820F      		add r24,r18
 12189 4e24 931F      		adc r25,r19
 12190 4e26 FC01      		movw r30,r24
 12191 4e28 8081      		ld r24,Z
 12192 4e2a 9181      		ldd r25,Z+1
 12193 4e2c A281      		ldd r26,Z+2
 12194 4e2e B381      		ldd r27,Z+3
 12195 4e30 20E0      		ldi r18,0
 12196 4e32 30E0      		ldi r19,0
 12197 4e34 A901      		movw r20,r18
 12198 4e36 BC01      		movw r22,r24
 12199 4e38 CD01      		movw r24,r26
 12200 4e3a 0E94 0000 		call __eqsf2
 12201 4e3e 8823      		tst r24
 12202 4e40 01F4      		brne .+2
 12203 4e42 00C0      		rjmp .L514
 12204               	.L513:
1564:lp_solve_5.5/lp_SOS.c ****       if((i <= nn) && (list[n+i] != 0)) {
 12205               		.loc 1 1564 0 is_stmt 1
 12206 4e44 2981      		ldd r18,Y+1
 12207 4e46 3A81      		ldd r19,Y+2
 12208 4e48 8A85      		ldd r24,Y+10
 12209 4e4a 9B85      		ldd r25,Y+11
 12210 4e4c 8217      		cp r24,r18
 12211 4e4e 9307      		cpc r25,r19
 12212 4e50 04F4      		brge .+2
 12213 4e52 00C0      		rjmp .L515
 12214               		.loc 1 1564 0 is_stmt 0 discriminator 1
 12215 4e54 2885      		ldd r18,Y+8
 12216 4e56 3985      		ldd r19,Y+9
 12217 4e58 8981      		ldd r24,Y+1
 12218 4e5a 9A81      		ldd r25,Y+2
 12219 4e5c 820F      		add r24,r18
 12220 4e5e 931F      		adc r25,r19
 12221 4e60 880F      		lsl r24
 12222 4e62 991F      		rol r25
 12223 4e64 2E81      		ldd r18,Y+6
 12224 4e66 3F81      		ldd r19,Y+7
 12225 4e68 820F      		add r24,r18
 12226 4e6a 931F      		adc r25,r19
 12227 4e6c FC01      		movw r30,r24
 12228 4e6e 8081      		ld r24,Z
 12229 4e70 9181      		ldd r25,Z+1
 12230 4e72 892B      		or r24,r25
 12231 4e74 01F4      		brne .+2
 12232 4e76 00C0      		rjmp .L515
1565:lp_solve_5.5/lp_SOS.c ****         i++;  /* Step to next */
 12233               		.loc 1 1565 0 is_stmt 1
 12234 4e78 8981      		ldd r24,Y+1
 12235 4e7a 9A81      		ldd r25,Y+2
 12236 4e7c 0196      		adiw r24,1
 12237 4e7e 9A83      		std Y+2,r25
 12238 4e80 8983      		std Y+1,r24
1566:lp_solve_5.5/lp_SOS.c ****         while((i <= nn) && (list[n+i] != 0) && (solution[lp->rows+list[n+i]] != 0))
 12239               		.loc 1 1566 0
 12240 4e82 00C0      		rjmp .L516
 12241               	.L518:
1567:lp_solve_5.5/lp_SOS.c ****           i++;
 12242               		.loc 1 1567 0
 12243 4e84 8981      		ldd r24,Y+1
 12244 4e86 9A81      		ldd r25,Y+2
 12245 4e88 0196      		adiw r24,1
 12246 4e8a 9A83      		std Y+2,r25
 12247 4e8c 8983      		std Y+1,r24
 12248               	.L516:
1566:lp_solve_5.5/lp_SOS.c ****         while((i <= nn) && (list[n+i] != 0) && (solution[lp->rows+list[n+i]] != 0))
 12249               		.loc 1 1566 0
 12250 4e8e 2981      		ldd r18,Y+1
 12251 4e90 3A81      		ldd r19,Y+2
 12252 4e92 8A85      		ldd r24,Y+10
 12253 4e94 9B85      		ldd r25,Y+11
 12254 4e96 8217      		cp r24,r18
 12255 4e98 9307      		cpc r25,r19
 12256 4e9a 04F4      		brge .+2
 12257 4e9c 00C0      		rjmp .L517
1566:lp_solve_5.5/lp_SOS.c ****         while((i <= nn) && (list[n+i] != 0) && (solution[lp->rows+list[n+i]] != 0))
 12258               		.loc 1 1566 0 is_stmt 0 discriminator 1
 12259 4e9e 2885      		ldd r18,Y+8
 12260 4ea0 3985      		ldd r19,Y+9
 12261 4ea2 8981      		ldd r24,Y+1
 12262 4ea4 9A81      		ldd r25,Y+2
 12263 4ea6 820F      		add r24,r18
 12264 4ea8 931F      		adc r25,r19
 12265 4eaa 880F      		lsl r24
 12266 4eac 991F      		rol r25
 12267 4eae 2E81      		ldd r18,Y+6
 12268 4eb0 3F81      		ldd r19,Y+7
 12269 4eb2 820F      		add r24,r18
 12270 4eb4 931F      		adc r25,r19
 12271 4eb6 FC01      		movw r30,r24
 12272 4eb8 8081      		ld r24,Z
 12273 4eba 9181      		ldd r25,Z+1
 12274 4ebc 892B      		or r24,r25
 12275 4ebe 01F0      		breq .L517
1566:lp_solve_5.5/lp_SOS.c ****         while((i <= nn) && (list[n+i] != 0) && (solution[lp->rows+list[n+i]] != 0))
 12276               		.loc 1 1566 0 discriminator 2
 12277 4ec0 8C81      		ldd r24,Y+4
 12278 4ec2 9D81      		ldd r25,Y+5
 12279 4ec4 8651      		subi r24,22
 12280 4ec6 9E4F      		sbci r25,-2
 12281 4ec8 FC01      		movw r30,r24
 12282 4eca 2081      		ld r18,Z
 12283 4ecc 3181      		ldd r19,Z+1
 12284 4ece 4885      		ldd r20,Y+8
 12285 4ed0 5985      		ldd r21,Y+9
 12286 4ed2 8981      		ldd r24,Y+1
 12287 4ed4 9A81      		ldd r25,Y+2
 12288 4ed6 840F      		add r24,r20
 12289 4ed8 951F      		adc r25,r21
 12290 4eda 880F      		lsl r24
 12291 4edc 991F      		rol r25
 12292 4ede 4E81      		ldd r20,Y+6
 12293 4ee0 5F81      		ldd r21,Y+7
 12294 4ee2 840F      		add r24,r20
 12295 4ee4 951F      		adc r25,r21
 12296 4ee6 FC01      		movw r30,r24
 12297 4ee8 8081      		ld r24,Z
 12298 4eea 9181      		ldd r25,Z+1
 12299 4eec 820F      		add r24,r18
 12300 4eee 931F      		adc r25,r19
 12301 4ef0 880F      		lsl r24
 12302 4ef2 991F      		rol r25
 12303 4ef4 880F      		lsl r24
 12304 4ef6 991F      		rol r25
 12305 4ef8 2889      		ldd r18,Y+16
 12306 4efa 3989      		ldd r19,Y+17
 12307 4efc 820F      		add r24,r18
 12308 4efe 931F      		adc r25,r19
 12309 4f00 FC01      		movw r30,r24
 12310 4f02 8081      		ld r24,Z
 12311 4f04 9181      		ldd r25,Z+1
 12312 4f06 A281      		ldd r26,Z+2
 12313 4f08 B381      		ldd r27,Z+3
 12314 4f0a 20E0      		ldi r18,0
 12315 4f0c 30E0      		ldi r19,0
 12316 4f0e A901      		movw r20,r18
 12317 4f10 BC01      		movw r22,r24
 12318 4f12 CD01      		movw r24,r26
 12319 4f14 0E94 0000 		call __nesf2
 12320 4f18 8823      		tst r24
 12321 4f1a 01F0      		breq .+2
 12322 4f1c 00C0      		rjmp .L518
 12323               	.L517:
1568:lp_solve_5.5/lp_SOS.c ****         sosindex++;
 12324               		.loc 1 1568 0 is_stmt 1
 12325 4f1e 8E85      		ldd r24,Y+14
 12326 4f20 9F85      		ldd r25,Y+15
 12327 4f22 0196      		adiw r24,1
 12328 4f24 9F87      		std Y+15,r25
 12329 4f26 8E87      		std Y+14,r24
 12330               	.L515:
1569:lp_solve_5.5/lp_SOS.c ****       }
1570:lp_solve_5.5/lp_SOS.c ****       i++;    /* Step to next */
 12331               		.loc 1 1570 0
 12332 4f28 8981      		ldd r24,Y+1
 12333 4f2a 9A81      		ldd r25,Y+2
 12334 4f2c 0196      		adiw r24,1
 12335 4f2e 9A83      		std Y+2,r25
 12336 4f30 8983      		std Y+1,r24
 12337               	.L511:
1561:lp_solve_5.5/lp_SOS.c ****       while((i <= nn) && (list[n+i] != 0) && (solution[lp->rows+list[n+i]] == 0))
 12338               		.loc 1 1561 0
 12339 4f32 2981      		ldd r18,Y+1
 12340 4f34 3A81      		ldd r19,Y+2
 12341 4f36 8A85      		ldd r24,Y+10
 12342 4f38 9B85      		ldd r25,Y+11
 12343 4f3a 8217      		cp r24,r18
 12344 4f3c 9307      		cpc r25,r19
 12345 4f3e 04F0      		brlt .L519
1561:lp_solve_5.5/lp_SOS.c ****       while((i <= nn) && (list[n+i] != 0) && (solution[lp->rows+list[n+i]] == 0))
 12346               		.loc 1 1561 0 is_stmt 0 discriminator 1
 12347 4f40 2885      		ldd r18,Y+8
 12348 4f42 3985      		ldd r19,Y+9
 12349 4f44 8981      		ldd r24,Y+1
 12350 4f46 9A81      		ldd r25,Y+2
 12351 4f48 820F      		add r24,r18
 12352 4f4a 931F      		adc r25,r19
 12353 4f4c 880F      		lsl r24
 12354 4f4e 991F      		rol r25
 12355 4f50 2E81      		ldd r18,Y+6
 12356 4f52 3F81      		ldd r19,Y+7
 12357 4f54 820F      		add r24,r18
 12358 4f56 931F      		adc r25,r19
 12359 4f58 FC01      		movw r30,r24
 12360 4f5a 8081      		ld r24,Z
 12361 4f5c 9181      		ldd r25,Z+1
 12362 4f5e 892B      		or r24,r25
 12363 4f60 01F0      		breq .+2
 12364 4f62 00C0      		rjmp .L512
 12365               	.L519:
1571:lp_solve_5.5/lp_SOS.c ****     }
1572:lp_solve_5.5/lp_SOS.c ****     status = (MYBOOL) (sosindex <= 1);
 12366               		.loc 1 1572 0 is_stmt 1
 12367 4f64 21E0      		ldi r18,lo8(1)
 12368 4f66 8E85      		ldd r24,Y+14
 12369 4f68 9F85      		ldd r25,Y+15
 12370 4f6a 0297      		sbiw r24,2
 12371 4f6c 04F0      		brlt .L521
 12372 4f6e 20E0      		ldi r18,0
 12373               	.L521:
 12374 4f70 2B83      		std Y+3,r18
 12375               	.L507:
1573:lp_solve_5.5/lp_SOS.c ****   }
1574:lp_solve_5.5/lp_SOS.c ****   return(status);
 12376               		.loc 1 1574 0
 12377 4f72 8B81      		ldd r24,Y+3
 12378               	.L510:
 12379               	/* epilogue start */
1575:lp_solve_5.5/lp_SOS.c **** }
 12380               		.loc 1 1575 0
 12381 4f74 6196      		adiw r28,17
 12382 4f76 0FB6      		in __tmp_reg__,__SREG__
 12383 4f78 F894      		cli
 12384 4f7a DEBF      		out __SP_H__,r29
 12385 4f7c 0FBE      		out __SREG__,__tmp_reg__
 12386 4f7e CDBF      		out __SP_L__,r28
 12387 4f80 DF91      		pop r29
 12388 4f82 CF91      		pop r28
 12389 4f84 0895      		ret
 12390               		.cfi_endproc
 12391               	.LFE40:
 12393               	.Letext0:
 12394               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\lib\\gc
 12395               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 12396               		.file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 12397               		.file 5 "lp_solve_5.5\\shared/commonlib.h"
 12398               		.file 6 "lp_solve_5.5/lp_types.h"
 12399               		.file 7 "lp_solve_5.5/lp_lib.h"
 12400               		.file 8 "lp_solve_5.5/lp_utils.h"
 12401               		.file 9 "lp_solve_5.5/lp_Hash.h"
 12402               		.file 10 "lp_solve_5.5/lp_matrix.h"
 12403               		.file 11 "lp_solve_5.5/lp_mipbb.h"
 12404               		.file 12 "lp_solve_5.5/lp_SOS.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lp_SOS.c
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:2      *ABS*:0000003e __SP_H__
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:3      *ABS*:0000003d __SP_L__
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:4      *ABS*:0000003f __SREG__
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:7      *ABS*:00000001 __zero_reg__
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:13     .text:00000000 create_SOSgroup
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:99     .text:0000006c resize_SOSgroup
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:210    .text:00000116 append_SOSgroup
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:521    .text:0000031a clean_SOSgroup
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:2695   .text:0000116a delete_SOSrec
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:3441   .text:0000161e SOS_member_updatemap
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:755    .text:0000047c free_SOSgroup
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:2946   .text:00001302 free_SOSrec
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:983    .text:000005ee create_SOSrec
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:1227   .text:0000074c append_SOSrec
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:2084   .text:00000d5e make_SOSchain
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:3119   .text:0000140e SOS_member_sortlist
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:5346   .text:00002294 SOS_get_type
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:3948   .text:00001982 SOS_shift_col
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:4660   .text:00001e26 SOS_member_count
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:4733   .text:00001e82 SOS_member_delete
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:5409   .text:000022dc SOS_infeasible
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:5829   .text:00002594 SOS_member_index
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:5956   .text:0000264e SOS_memberships
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:6148   .text:00002776 SOS_is_member
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:6354   .text:000028ba SOS_is_member_of_type
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:6512   .text:000029aa SOS_set_GUB
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:6643   .text:00002a62 SOS_is_GUB
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:6774   .text:00002b16 SOS_is_marked
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:7045   .text:00002cc2 SOS_is_active
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:7336   .text:00002e9a SOS_is_full
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:7726   .text:00003116 SOS_can_activate
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:8503   .text:0000363c SOS_set_marked
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:8961   .text:00003944 SOS_unmark
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:9454   .text:00003c7e SOS_fix_unmarked
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:10172  .text:0000412e SOS_get_candidates
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:10682  .text:00004464 SOS_fix_list
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:11085  .text:000046f2 SOS_is_satisfied
C:\Users\GUILHE~1\AppData\Local\Temp\ccciW9hC.s:11947  .text:00004c9e SOS_is_feasible

UNDEFINED SYMBOLS
calloc
malloc
__floatsisf
__mulsf3
__fixsfsi
realloc
free
strlen
allocCHAR
strcpy
__addsf3
allocINT
allocREAL
report
sortByREAL
sortByINT
compareREAL
hpsortex
allocMYBOOL
memcpy
firstActiveLink
nextActiveLink
isActiveLink
__gtsf2
is_semicont
searchFor
SOS_count
__eqsf2
is_int
set_int
__nesf2
__ltsf2
modifyUndoLadder
__do_copy_data
