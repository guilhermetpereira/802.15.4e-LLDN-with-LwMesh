   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "usart_spi.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .text
  27              	 .align 1
  28              	 .syntax unified
  29              	 .thumb
  30              	 .thumb_func
  31              	 .fpu softvfp
  33              	sysclk_get_main_hz:
  34              	.LFB164:
  35              	 .file 1 "../../../platform/common/services/clock/sam4l/sysclk.h"
   1:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
   2:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \file
   3:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
   4:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Chip-specific system clock management functions
   5:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
   6:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Copyright (c) 2012-2014 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
   8:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \asf_license_start
   9:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  10:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \page License
  11:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  12:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/clock/sam4l/sysclk.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  15:../../../platform/common/services/clock/sam4l/sysclk.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  18:../../../platform/common/services/clock/sam4l/sysclk.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  22:../../../platform/common/services/clock/sam4l/sysclk.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  25:../../../platform/common/services/clock/sam4l/sysclk.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  28:../../../platform/common/services/clock/sam4l/sysclk.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/clock/sam4l/sysclk.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/clock/sam4l/sysclk.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/clock/sam4l/sysclk.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/clock/sam4l/sysclk.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/clock/sam4l/sysclk.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/clock/sam4l/sysclk.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/clock/sam4l/sysclk.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/clock/sam4l/sysclk.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/clock/sam4l/sysclk.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/clock/sam4l/sysclk.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  40:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \asf_license_stop
  41:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  42:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
  43:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CHIP_SYSCLK_H_INCLUDED
  44:../../../platform/common/services/clock/sam4l/sysclk.h **** #define CHIP_SYSCLK_H_INCLUDED
  45:../../../platform/common/services/clock/sam4l/sysclk.h **** 
  46:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <board.h>
  47:../../../platform/common/services/clock/sam4l/sysclk.h **** 
  48:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __cplusplus
  49:../../../platform/common/services/clock/sam4l/sysclk.h **** extern "C" {
  50:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
  51:../../../platform/common/services/clock/sam4l/sysclk.h **** 
  52:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
  53:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \page sysclk_quickstart Quick Start Guide for the System Clock Management service (SAM4L)
  54:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  55:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This is the quick start guide for the \ref sysclk_group "System Clock Management"
  56:../../../platform/common/services/clock/sam4l/sysclk.h ****  * service, with step-by-step instructions on how to configure and use the service for
  57:../../../platform/common/services/clock/sam4l/sysclk.h ****  * specific use cases.
  58:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  59:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \section sysclk_quickstart_usecases System Clock Management use cases
  60:../../../platform/common/services/clock/sam4l/sysclk.h ****  * - \ref sysclk_quickstart_basic
  61:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  62:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \section sysclk_quickstart_basic Basic usage of the System Clock Management service
  63:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This section will present a basic use case for the System Clock Management service.
  64:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This use case will configure the main system clock to 48MHz, using an internal DFLL
  65:../../../platform/common/services/clock/sam4l/sysclk.h ****  * module to multiply the frequency of a crystal attached to the microcontroller. The
  66:../../../platform/common/services/clock/sam4l/sysclk.h ****  * peripheral bus clocks are scaled down from the speed of the main system clock.
  67:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  68:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_prereq Prerequisites
  69:../../../platform/common/services/clock/sam4l/sysclk.h ****  *  - None
  70:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  71:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_setup_steps Initialization code
  72:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Add to the application initialization code:
  73:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \code
  74:../../../platform/common/services/clock/sam4l/sysclk.h **** 	sysclk_init();
  75:../../../platform/common/services/clock/sam4l/sysclk.h **** \endcode
  76:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  77:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_setup_steps_workflow Workflow
  78:../../../platform/common/services/clock/sam4l/sysclk.h ****  * -# Configure the system clocks according to the settings in conf_clock.h:
  79:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    \code sysclk_init(); \endcode
  80:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
  81:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_example_code Example code
  82:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   Add or uncomment the following in your conf_clock.h header file, commenting out all other
  83:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   definitions of the same symbol(s):
  84:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   \code
  85:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_SOURCE        SYSCLK_SRC_DFLL0
  86:../../../platform/common/services/clock/sam4l/sysclk.h **** 
  87:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   // Fdfll = (Fclk * DFLL_mul) / DFLL_div
  88:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_DFLL0_SOURCE         GENCLK_SRC_OSC32K
  89:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_DFLL0_FREQ           48000000UL
  90:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_DFLL0_MUL            (CONFIG_DFLL0_FREQ / BOARD_OSC32_HZ)
  91:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_DFLL0_DIV            1
  92:../../../platform/common/services/clock/sam4l/sysclk.h **** 
  93:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   // Fbus = Fsys / (2 ^ BUS_div)
  94:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_CPU_DIV       0
  95:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_PBA_DIV       1
  96:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_PBB_DIV       1
  97:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_PBC_DIV       1
  98:../../../platform/common/services/clock/sam4l/sysclk.h **** 	   #define CONFIG_SYSCLK_PBD_DIV       1
  99:../../../platform/common/services/clock/sam4l/sysclk.h **** \endcode
 100:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 101:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \subsection sysclk_quickstart_use_case_1_example_workflow Workflow
 102:../../../platform/common/services/clock/sam4l/sysclk.h ****  *  -# Configure the main system clock to use the output of the DFLL0 module as its source:
 103:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   \code #define CONFIG_SYSCLK_SOURCE      SYSCLK_SRC_DFLL0 \endcode
 104:../../../platform/common/services/clock/sam4l/sysclk.h ****  *  -# Configure the DFLL0 module to use external crystal oscillator OSC0 as its source:
 105:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   \code #define CONFIG_DFLL0_SOURCE       GENCLK_SRC_OSC32K \endcode
 106:../../../platform/common/services/clock/sam4l/sysclk.h ****  *  -# Configure the DFLL0 module to multiply the external oscillator OSC0 frequency up to 48MHz:
 107:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   \code
 108:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_DFLL0_FREQ           48000000UL
 109:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_DFLL0_MUL            (CONFIG_DFLL0_FREQ / BOARD_OSC32_HZ)
 110:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_DFLL0_DIV            1
 111:../../../platform/common/services/clock/sam4l/sysclk.h **** \endcode
 112:../../../platform/common/services/clock/sam4l/sysclk.h ****  *   \note For user boards, \c BOARD_OSC0_HZ should be defined in the board \c conf_board.h configu
 113:../../../platform/common/services/clock/sam4l/sysclk.h ****  *         file as the frequency of the crystal attached to OSC0.
 114:../../../platform/common/services/clock/sam4l/sysclk.h ****  *  -# Configure the main clock to run at the full 48MHz, scale the peripheral busses to run at one
 115:../../../platform/common/services/clock/sam4l/sysclk.h ****  *     half (2 to the power of 1) of the system clock speed:
 116:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    \code
 117:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_SYSCLK_CPU_DIV       0
 118:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_SYSCLK_PBA_DIV       1
 119:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_SYSCLK_PBB_DIV       1
 120:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_SYSCLK_PBC_DIV       1
 121:../../../platform/common/services/clock/sam4l/sysclk.h **** 	#define CONFIG_SYSCLK_PBD_DIV       1
 122:../../../platform/common/services/clock/sam4l/sysclk.h **** \endcode
 123:../../../platform/common/services/clock/sam4l/sysclk.h ****  *    \note Some dividers are powers of two, while others are integer division factors. Refer to th
 124:../../../platform/common/services/clock/sam4l/sysclk.h ****  *          formulas in the conf_clock.h template commented above each division define.
 125:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 126:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 127:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 128:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 129:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \weakgroup sysclk_group
 130:../../../platform/common/services/clock/sam4l/sysclk.h ****  * @{
 131:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 132:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 133:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name System clock source
 134:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 135:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_RCSYS        0     //!< System RC oscillator
 136:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_OSC0         1     //!< Oscillator 0
 137:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_PLL0         2     //!< Phase Locked Loop 0
 138:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_DFLL         3     //!< Digital Frequency Locked Loop
 139:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_RC80M        4     //!< 80 MHz RC oscillator
 140:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_RCFAST       5     //!< 4-8-12 MHz RC oscillator
 141:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SRC_RC1M         6     //!< 1 MHz RC oscillator
 142:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 143:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 144:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name USB Clock Sources
 145:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 146:../../../platform/common/services/clock/sam4l/sysclk.h **** #define USBCLK_SRC_OSC0         GENCLK_SRC_OSC0     //!< Use OSC0
 147:../../../platform/common/services/clock/sam4l/sysclk.h **** #define USBCLK_SRC_PLL0         GENCLK_SRC_PLL0     //!< Use PLL0
 148:../../../platform/common/services/clock/sam4l/sysclk.h **** #define USBCLK_SRC_DFLL         GENCLK_SRC_DFLL     //!< Use DFLL
 149:../../../platform/common/services/clock/sam4l/sysclk.h **** #define USBCLK_SRC_GCLKIN0      GENCLK_SRC_GCLKIN0  //!< Use GCLKIN0
 150:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 151:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 152:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Bus index of maskable module clocks
 153:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 154:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_CPU               0
 155:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_HSB               1
 156:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_PBA               2
 157:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_PBB               3
 158:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_PBC               4
 159:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PM_CLK_GRP_PBD               5
 160:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 161:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 162:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the CPU clock
 163:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 164:../../../platform/common/services/clock/sam4l/sysclk.h **** //! On-Chip Debug system
 165:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_OCD              0
 166:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 167:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 168:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the HSB clock
 169:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 170:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PDCA memory interface
 171:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PDCA_HSB         0
 172:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Flash data interface
 173:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_HFLASHC_DATA     1
 174:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HRAMC data interface
 175:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_HRAMC1_DATA      2
 176:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USBC DMA and FIFO interface
 177:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USBC_DATA        3
 178:../../../platform/common/services/clock/sam4l/sysclk.h **** //! CRCCU data interface
 179:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_CRCCU_DATA       4
 180:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HSB<->PBA bridge
 181:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PBA_BRIDGE       5
 182:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HSB<->PBB bridge
 183:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PBB_BRIDGE       6
 184:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HSB<->PBC bridge
 185:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PBC_BRIDGE       7
 186:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HSB<->PBD bridge
 187:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PBD_BRIDGE       8
 188:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Advanced Encryption Standard
 189:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_AESA_HSB         9
 190:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 191:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 192:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the PBA clock
 193:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 194:../../../platform/common/services/clock/sam4l/sysclk.h **** //! IISC Controller
 195:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_IISC             0
 196:../../../platform/common/services/clock/sam4l/sysclk.h **** //! SPI Controller
 197:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SPI              1
 198:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Timer/Counter 0
 199:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TC0              2
 200:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Timer/Counter 1
 201:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TC1              3
 202:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Master 0
 203:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIM0            4
 204:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Slave 0
 205:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIS0            5
 206:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Master 1
 207:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIM1            6
 208:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Slave 1
 209:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIS1            7
 210:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USART 0
 211:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USART0           8
 212:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USART 1
 213:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USART1           9
 214:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USART 2
 215:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USART2           10
 216:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USART 3
 217:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USART3           11
 218:../../../platform/common/services/clock/sam4l/sysclk.h **** //! A/D Converter
 219:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_ADCIFE           12
 220:../../../platform/common/services/clock/sam4l/sysclk.h **** //! D/A Converter
 221:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_DACC             13
 222:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Analog Comparator
 223:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_ACIFC            14
 224:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Glue Logic Controller
 225:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_GLOC             15
 226:../../../platform/common/services/clock/sam4l/sysclk.h **** //! ABDACB Controller
 227:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_ABDACB           16
 228:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TRNG Controller
 229:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TRNG             17
 230:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PARC Controller
 231:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PARC             18
 232:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Capacitive Touch
 233:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_CATB             19
 234:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Master 2
 235:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIM2            21
 236:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TWI Master 3
 237:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_TWIM3            22
 238:../../../platform/common/services/clock/sam4l/sysclk.h **** //! LCD Controller
 239:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_LCDCA            23
 240:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 241:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 242:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 243:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the PBB clock
 244:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 245:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Flash Controller registers
 246:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_HFLASHC_REGS     0
 247:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HRAMC Controller registers
 248:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_HRAMC1_REGS      1
 249:../../../platform/common/services/clock/sam4l/sysclk.h **** //! HSB Matrix configuration
 250:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_HMATRIX          2
 251:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PDCA peripheral bus interface
 252:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PDCA_PB          3
 253:../../../platform/common/services/clock/sam4l/sysclk.h **** //! CRCCU registers
 254:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_CRCCU_REGS       4
 255:../../../platform/common/services/clock/sam4l/sysclk.h **** //! USBC registers
 256:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_USBC_REGS        5
 257:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PEVC Controller
 258:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PEVC             6
 259:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 260:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 261:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the PBC clock
 262:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 263:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PM configuration
 264:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PM               0
 265:../../../platform/common/services/clock/sam4l/sysclk.h **** //! CHIPID Controller
 266:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_CHIPID           1
 267:../../../platform/common/services/clock/sam4l/sysclk.h **** //! System Control Interface
 268:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_SCIF             2
 269:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Frequency Meter
 270:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_FREQM            3
 271:../../../platform/common/services/clock/sam4l/sysclk.h **** //! General-Purpose I/O
 272:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_GPIO             4
 273:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 274:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 275:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Clocks derived from the PBD clock
 276:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 277:../../../platform/common/services/clock/sam4l/sysclk.h **** //! BPM configuration
 278:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_BPM              0
 279:../../../platform/common/services/clock/sam4l/sysclk.h **** //! BSCIF configuration
 280:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_BSCIF            1
 281:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Asynchronous Timer
 282:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_AST              2
 283:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Watchdog Timer
 284:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_WDT              3
 285:../../../platform/common/services/clock/sam4l/sysclk.h **** //! External Interrupt Controller
 286:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_EIC              4
 287:../../../platform/common/services/clock/sam4l/sysclk.h **** //! PICOUART
 288:../../../platform/common/services/clock/sam4l/sysclk.h **** #define SYSCLK_PICOUART         5
 289:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 290:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 291:../../../platform/common/services/clock/sam4l/sysclk.h **** //! \name Divided clock mask derived from the PBA clock
 292:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 293:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TIMER_CLOCK2 mask
 294:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_TIMER_CLOCK2     (1u << 0)
 295:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TIMER_CLOCK3 mask
 296:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_TIMER_CLOCK3     (1u << 2)
 297:../../../platform/common/services/clock/sam4l/sysclk.h **** //! CLK_USART/DIV mask
 298:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_CLK_USART        (1u << 2)
 299:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TIMER_CLOCK4 mask
 300:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_TIMER_CLOCK4     (1u << 4)
 301:../../../platform/common/services/clock/sam4l/sysclk.h **** //! TIMER_CLOCK5 mask
 302:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_TIMER_CLOCK5     (1u << 6)
 303:../../../platform/common/services/clock/sam4l/sysclk.h **** //! Bitfield mask
 304:../../../platform/common/services/clock/sam4l/sysclk.h **** #define PBA_DIVMASK_Msk              (0x7Fu << 0)
 305:../../../platform/common/services/clock/sam4l/sysclk.h **** //@}
 306:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 307:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef __ASSEMBLY__
 308:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 309:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <compiler.h>
 310:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <dfll.h>
 311:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <osc.h>
 312:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <pll.h>
 313:../../../platform/common/services/clock/sam4l/sysclk.h **** #include <genclk.h>
 314:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 315:../../../platform/common/services/clock/sam4l/sysclk.h **** // Use the slow clock (RCOSC) with no prescaling if config was empty.
 316:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_SOURCE
 317:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_SOURCE    SYSCLK_SRC_RCSYS
 318:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_SOURCE */
 319:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 320:../../../platform/common/services/clock/sam4l/sysclk.h **** /*
 321:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Enable PicoCache for flash access by default.
 322:../../../platform/common/services/clock/sam4l/sysclk.h ****  * 0: disable PicoCache, 1: enable PicoCache.
 323:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 324:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_HCACHE_ENABLE
 325:../../../platform/common/services/clock/sam4l/sysclk.h **** #define CONFIG_HCACHE_ENABLE          1
 326:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 327:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 328:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 329:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_CPU_DIV
 330:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for dividing the CPU clock frequency by
 331:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \f$2^{CONFIG\_SYSCLK\_CPU\_DIV}\f$
 332:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 333:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, the CPU clock frequency is not divided.
 334:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 335:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 336:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 337:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_CPU_DIV
 338:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_CPU_DIV   0
 339:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_CPU_DIV */
 340:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 341:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 342:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_HSBMASK
 343:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the HSB clocks enabled at power-on after the
 344:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all HSB clocks are left
 345:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 346:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 347:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 348:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all HSB clocks are left enabled.
 349:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 350:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 351:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 352:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 353:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_HSBMASK
 354:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 355:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 356:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 357:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_PBA_DIV
 358:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for dividing the PBA clock frequency by
 359:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \f$2^{CONFIG\_SYSCLK\_PBA\_DIV}\f$
 360:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 361:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, the PBA clock frequency is not divided.
 362:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 363:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 364:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 365:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_PBA_DIV
 366:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_PBA_DIV   0
 367:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_PBA_DIV */
 368:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 369:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 370:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_PBB_DIV
 371:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for dividing the PBB clock frequency by
 372:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \f$2^{CONFIG\_SYSCLK\_PBB\_DIV}\f$
 373:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 374:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, the PBB clock frequency is not divided.
 375:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 376:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 377:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 378:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_PBB_DIV
 379:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_PBB_DIV   0
 380:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_PBB_DIV */
 381:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 382:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 383:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_PBC_DIV
 384:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for dividing the PBC clock frequency by
 385:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \f$2^{CONFIG\_SYSCLK\_PBC\_DIV}\f$
 386:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 387:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, the PBC clock frequency is not divided.
 388:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 389:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 390:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 391:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_PBC_DIV
 392:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_PBC_DIV   0
 393:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_PBC_DIV */
 394:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 395:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 396:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_PBD_DIV
 397:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for dividing the PBD clock frequency by
 398:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \f$2^{CONFIG\_SYSCLK\_PBD\_DIV}\f$
 399:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 400:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, the PBD clock frequency is not divided.
 401:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 402:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 403:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 404:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifndef CONFIG_SYSCLK_PBD_DIV
 405:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_PBD_DIV   0
 406:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif /* CONFIG_SYSCLK_PBD_DIV */
 407:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 408:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 409:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_CPUMASK
 410:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the CPU clocks enabled at power-on after the
 411:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all CPU clocks are left
 412:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 413:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 414:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 415:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all CPU clocks are left enabled.
 416:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 417:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 418:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 419:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 420:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_CPUMASK
 421:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 422:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 423:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 424:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_PBAMASK
 425:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the PBA clocks enabled at power-on after the
 426:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all PBA clocks are left
 427:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 428:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 429:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 430:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all PBA clocks are left enabled.
 431:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 432:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 433:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 434:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 435:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_PBAMASK
 436:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 437:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 438:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 439:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_PBBMASK
 440:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the PBB clocks enabled at power-on after the
 441:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all PBB clocks are left
 442:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 443:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 444:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 445:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all PBB clocks are left enabled.
 446:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 447:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 448:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 449:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 450:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_PBBMASK
 451:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 452:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 453:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 454:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_PBCMASK
 455:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the PBC clocks enabled at power-on after the
 456:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all PBC clocks are left
 457:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 458:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 459:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 460:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all PBC clocks are left enabled.
 461:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 462:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 463:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 464:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 465:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_PBCMASK
 466:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 467:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 468:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 469:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_SYSCLK_INIT_PBDMASK
 470:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the PBD clocks enabled at power-on after the
 471:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclock module has been initialized. By default, all PBD clocks are left
 472:../../../platform/common/services/clock/sam4l/sysclk.h ****  * enabled, however to save power these can be automatically disabled by defining
 473:../../../platform/common/services/clock/sam4l/sysclk.h ****  * this value to a mask of \c SYSCLOCK_xxx settings.
 474:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 475:../../../platform/common/services/clock/sam4l/sysclk.h ****  * If this symbol is not defined, then all PBD clocks are left enabled.
 476:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 477:../../../platform/common/services/clock/sam4l/sysclk.h ****  * This symbol may be defined in \ref conf_clock.h.
 478:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 479:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 480:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_SYSCLK_INIT_PBDMASK
 481:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 482:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 483:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 484:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_USBCLK_SOURCE
 485:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the USB generic clock source
 486:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 487:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Sets the clock source to use for the USB. The source must also be properly
 488:../../../platform/common/services/clock/sam4l/sysclk.h ****  * configured.
 489:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 490:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Define this to one of the \c USBCLK_SRC_xxx settings. Leave it undefined if
 491:../../../platform/common/services/clock/sam4l/sysclk.h ****  * USB is not required.
 492:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 493:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 494:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_USBCLK_SOURCE
 495:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 496:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 497:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 498:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \def CONFIG_USBCLK_DIV
 499:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Configuration symbol for the USB generic clock divider setting
 500:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 501:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Sets the clock division for the USB generic clock. If a USB clock source is
 502:../../../platform/common/services/clock/sam4l/sysclk.h ****  * selected with CONFIG_USBCLK_SOURCE, this configuration symbol must also be
 503:../../../platform/common/services/clock/sam4l/sysclk.h ****  * defined.
 504:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 505:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Define this as any value that does not exceed \c GENCLK_DIV_MAX, and which
 506:../../../platform/common/services/clock/sam4l/sysclk.h ****  * will give a 48 MHz clock frequency from the selected source.
 507:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 508:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef __DOXYGEN__
 509:../../../platform/common/services/clock/sam4l/sysclk.h **** # define CONFIG_USBCLK_DIV
 510:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 511:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 512:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 513:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \name Querying the system clock and its derived clocks
 514:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 515:../../../platform/common/services/clock/sam4l/sysclk.h ****  * The following functions may be used to query the current frequency of
 516:../../../platform/common/services/clock/sam4l/sysclk.h ****  * the system clock and the CPU and bus clocks derived from it.
 517:../../../platform/common/services/clock/sam4l/sysclk.h ****  * sysclk_get_main_hz() and sysclk_get_cpu_hz() can be assumed to be
 518:../../../platform/common/services/clock/sam4l/sysclk.h ****  * available on all platforms, although some platforms may define
 519:../../../platform/common/services/clock/sam4l/sysclk.h ****  * additional accessors for various chip-internal bus clocks. These are
 520:../../../platform/common/services/clock/sam4l/sysclk.h ****  * usually not intended to be queried directly by generic code.
 521:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 522:../../../platform/common/services/clock/sam4l/sysclk.h **** //@{
 523:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 524:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 525:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Return the current rate in Hz of the main system clock
 526:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 527:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \todo This function assumes that the main clock source never changes
 528:../../../platform/common/services/clock/sam4l/sysclk.h ****  * once it's been set up, and that PLL0 always runs at the compile-time
 529:../../../platform/common/services/clock/sam4l/sysclk.h ****  * configured default rate. While this is probably the most common
 530:../../../platform/common/services/clock/sam4l/sysclk.h ****  * configuration, which we want to support as a special case for
 531:../../../platform/common/services/clock/sam4l/sysclk.h ****  * performance reasons, we will at some point need to support more
 532:../../../platform/common/services/clock/sam4l/sysclk.h ****  * dynamic setups as well.
 533:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 534:../../../platform/common/services/clock/sam4l/sysclk.h **** #if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
 535:../../../platform/common/services/clock/sam4l/sysclk.h **** extern bool sysclk_initialized;
 536:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 537:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline uint32_t sysclk_get_main_hz(void)
 538:../../../platform/common/services/clock/sam4l/sysclk.h **** {
  36              	 .loc 1 538 0
  37              	 .cfi_startproc
  38              	 
  39              	 
  40              	 
  41 0000 80B4     	 push {r7}
  42              	.LCFI0:
  43              	 .cfi_def_cfa_offset 4
  44              	 .cfi_offset 7,-4
  45 0002 00AF     	 add r7,sp,#0
  46              	.LCFI1:
  47              	 .cfi_def_cfa_register 7
 539:../../../platform/common/services/clock/sam4l/sysclk.h **** #if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
 540:../../../platform/common/services/clock/sam4l/sysclk.h **** 	if (!sysclk_initialized ) {
 541:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return OSC_RCSYS_NOMINAL_HZ;
 542:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 543:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 544:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 545:../../../platform/common/services/clock/sam4l/sysclk.h **** 	if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_RCSYS) {
 546:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return OSC_RCSYS_NOMINAL_HZ;
 547:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 548:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 549:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef BOARD_OSC0_HZ
 550:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_OSC0) {
 551:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return BOARD_OSC0_HZ;
  48              	 .loc 1 551 0
  49 0004 024B     	 ldr r3,.L3
 552:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 553:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 554:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 555:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef CONFIG_PLL0_SOURCE
 556:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLL0) {
 557:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return pll_get_default_rate(0);
 558:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 559:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 560:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 561:../../../platform/common/services/clock/sam4l/sysclk.h **** #ifdef CONFIG_DFLL0_SOURCE
 562:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_DFLL) {
 563:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return dfll_get_default_rate(0);
 564:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 565:../../../platform/common/services/clock/sam4l/sysclk.h **** #endif
 566:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 567:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_RC80M) {
 568:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return OSC_RC80M_NOMINAL_HZ;
 569:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 570:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 571:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_RCFAST) {
 572:../../../platform/common/services/clock/sam4l/sysclk.h **** 		if (CONFIG_RCFAST_FRANGE == 2) {
 573:../../../platform/common/services/clock/sam4l/sysclk.h **** 			return OSC_RCFAST12M_NOMINAL_HZ;
 574:../../../platform/common/services/clock/sam4l/sysclk.h **** 		} else if (CONFIG_RCFAST_FRANGE == 1) {
 575:../../../platform/common/services/clock/sam4l/sysclk.h **** 			return OSC_RCFAST8M_NOMINAL_HZ;
 576:../../../platform/common/services/clock/sam4l/sysclk.h **** 		} else {
 577:../../../platform/common/services/clock/sam4l/sysclk.h **** 			return OSC_RCFAST4M_NOMINAL_HZ;
 578:../../../platform/common/services/clock/sam4l/sysclk.h **** 		}
 579:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 580:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 581:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_RC1M) {
 582:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return OSC_RC1M_NOMINAL_HZ;
 583:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 584:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 585:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 586:../../../platform/common/services/clock/sam4l/sysclk.h **** 	else {
 587:../../../platform/common/services/clock/sam4l/sysclk.h **** 		/* unhandled_case(CONFIG_SYSCLK_SOURCE); */
 588:../../../platform/common/services/clock/sam4l/sysclk.h **** 		return 0;
 589:../../../platform/common/services/clock/sam4l/sysclk.h **** 	}
 590:../../../platform/common/services/clock/sam4l/sysclk.h **** }
  50              	 .loc 1 590 0
  51 0006 1846     	 mov r0,r3
  52 0008 BD46     	 mov sp,r7
  53              	.LCFI2:
  54              	 .cfi_def_cfa_register 13
  55              	 
  56 000a 80BC     	 pop {r7}
  57              	.LCFI3:
  58              	 .cfi_restore 7
  59              	 .cfi_def_cfa_offset 0
  60 000c 7047     	 bx lr
  61              	.L4:
  62 000e 00BF     	 .align 2
  63              	.L3:
  64 0010 001BB700 	 .word 12000000
  65              	 .cfi_endproc
  66              	.LFE164:
  68              	 .align 1
  69              	 .syntax unified
  70              	 .thumb
  71              	 .thumb_func
  72              	 .fpu softvfp
  74              	sysclk_get_cpu_hz:
  75              	.LFB165:
 591:../../../platform/common/services/clock/sam4l/sysclk.h **** 
 592:../../../platform/common/services/clock/sam4l/sysclk.h **** /**
 593:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \brief Return the current rate in Hz of the CPU clock
 594:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 595:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \todo This function assumes that the CPU always runs at the system
 596:../../../platform/common/services/clock/sam4l/sysclk.h ****  * clock frequency. We want to support at least two more scenarios:
 597:../../../platform/common/services/clock/sam4l/sysclk.h ****  * Fixed CPU/bus clock dividers (config symbols) and dynamic CPU/bus
 598:../../../platform/common/services/clock/sam4l/sysclk.h ****  * clock dividers (which may change at run time). Ditto for all the bus
 599:../../../platform/common/services/clock/sam4l/sysclk.h ****  * clocks.
 600:../../../platform/common/services/clock/sam4l/sysclk.h ****  *
 601:../../../platform/common/services/clock/sam4l/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 602:../../../platform/common/services/clock/sam4l/sysclk.h ****  */
 603:../../../platform/common/services/clock/sam4l/sysclk.h **** static inline uint32_t sysclk_get_cpu_hz(void)
 604:../../../platform/common/services/clock/sam4l/sysclk.h **** {
  76              	 .loc 1 604 0
  77              	 .cfi_startproc
  78              	 
  79              	 
  80 0014 80B5     	 push {r7,lr}
  81              	.LCFI4:
  82              	 .cfi_def_cfa_offset 8
  83              	 .cfi_offset 7,-8
  84              	 .cfi_offset 14,-4
  85 0016 00AF     	 add r7,sp,#0
  86              	.LCFI5:
  87              	 .cfi_def_cfa_register 7
 605:../../../platform/common/services/clock/sam4l/sysclk.h **** 	return sysclk_get_main_hz() >> CONFIG_SYSCLK_CPU_DIV;
  88              	 .loc 1 605 0
  89 0018 FFF7F2FF 	 bl sysclk_get_main_hz
  90 001c 0346     	 mov r3,r0
 606:../../../platform/common/services/clock/sam4l/sysclk.h **** }
  91              	 .loc 1 606 0
  92 001e 1846     	 mov r0,r3
  93 0020 80BD     	 pop {r7,pc}
  94              	 .cfi_endproc
  95              	.LFE165:
  97              	 .align 1
  98              	 .global usart_spi_init
  99              	 .syntax unified
 100              	 .thumb
 101              	 .thumb_func
 102              	 .fpu softvfp
 104              	usart_spi_init:
 105              	.LFB181:
 106              	 .file 2 "../../../platform/common/services/spi/sam_usart_spi/usart_spi.c"
   1:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /**
   2:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \file
   3:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
   4:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \brief SAM USART in SPI mode driver functions.
   5:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
   6:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * Copyright (c) 2011-2013 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
   8:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \asf_license_start
   9:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
  10:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \page License
  11:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
  12:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
  15:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
  18:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
  22:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
  25:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
  28:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
  40:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \asf_license_stop
  41:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
  42:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  */
  43:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
  44:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** #include "usart_spi.h"
  45:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** #include "sysclk.h"
  46:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
  47:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /// @cond 0
  48:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /**INDENT-OFF**/
  49:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** #ifdef __cplusplus
  50:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** extern "C" {
  51:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** #endif
  52:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /**INDENT-ON**/
  53:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /// @endcond
  54:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
  55:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /*! \brief Enable the USART system clock in SPI master mode.
  56:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
  57:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param p_usart Pointer to Base address of the USART instance.
  58:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
  59:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  */
  60:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** void usart_spi_init(Usart *p_usart)
  61:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** {
 107              	 .loc 2 61 0
 108              	 .cfi_startproc
 109              	 
 110              	 
 111 0022 80B5     	 push {r7,lr}
 112              	.LCFI6:
 113              	 .cfi_def_cfa_offset 8
 114              	 .cfi_offset 7,-8
 115              	 .cfi_offset 14,-4
 116 0024 84B0     	 sub sp,sp,#16
 117              	.LCFI7:
 118              	 .cfi_def_cfa_offset 24
 119 0026 00AF     	 add r7,sp,#0
 120              	.LCFI8:
 121              	 .cfi_def_cfa_register 7
 122 0028 7860     	 str r0,[r7,#4]
  62:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	uint8_t uc_id;
  63:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
  64:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** #ifdef USART0
  65:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	if (p_usart == USART0) {
 123              	 .loc 2 65 0
 124 002a 7B68     	 ldr r3,[r7,#4]
 125 002c 104A     	 ldr r2,.L12
 126 002e 9342     	 cmp r3,r2
 127 0030 02D1     	 bne .L8
  66:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 		uc_id = ID_USART0;
 128              	 .loc 2 66 0
 129 0032 0823     	 movs r3,#8
 130 0034 FB73     	 strb r3,[r7,#15]
 131 0036 13E0     	 b .L9
 132              	.L8:
  67:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	}
  68:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** #endif
  69:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
  70:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** #ifdef USART1
  71:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	else if(p_usart == USART1) {
 133              	 .loc 2 71 0
 134 0038 7B68     	 ldr r3,[r7,#4]
 135 003a 0E4A     	 ldr r2,.L12+4
 136 003c 9342     	 cmp r3,r2
 137 003e 02D1     	 bne .L10
  72:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 		uc_id = ID_USART1;
 138              	 .loc 2 72 0
 139 0040 0923     	 movs r3,#9
 140 0042 FB73     	 strb r3,[r7,#15]
 141 0044 0CE0     	 b .L9
 142              	.L10:
  73:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	}
  74:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** #endif
  75:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
  76:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** #ifdef USART2
  77:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	else if(p_usart == USART2) {
 143              	 .loc 2 77 0
 144 0046 7B68     	 ldr r3,[r7,#4]
 145 0048 0B4A     	 ldr r2,.L12+8
 146 004a 9342     	 cmp r3,r2
 147 004c 02D1     	 bne .L11
  78:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 		uc_id = ID_USART2;
 148              	 .loc 2 78 0
 149 004e 0A23     	 movs r3,#10
 150 0050 FB73     	 strb r3,[r7,#15]
 151 0052 05E0     	 b .L9
 152              	.L11:
  79:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	}
  80:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** #endif
  81:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
  82:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** #ifdef USART3
  83:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	else if(p_usart == USART3) {
 153              	 .loc 2 83 0
 154 0054 7B68     	 ldr r3,[r7,#4]
 155 0056 094A     	 ldr r2,.L12+12
 156 0058 9342     	 cmp r3,r2
 157 005a 01D1     	 bne .L9
  84:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 		uc_id = ID_USART3;
 158              	 .loc 2 84 0
 159 005c 0B23     	 movs r3,#11
 160 005e FB73     	 strb r3,[r7,#15]
 161              	.L9:
  85:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	}
  86:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** #endif
  87:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	
  88:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	sysclk_enable_peripheral_clock(uc_id);
 162              	 .loc 2 88 0
 163 0060 FB7B     	 ldrb r3,[r7,#15]
 164 0062 1846     	 mov r0,r3
 165 0064 064B     	 ldr r3,.L12+16
 166 0066 9847     	 blx r3
 167              	.LVL0:
  89:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** }
 168              	 .loc 2 89 0
 169 0068 00BF     	 nop
 170 006a 1037     	 adds r7,r7,#16
 171              	.LCFI9:
 172              	 .cfi_def_cfa_offset 8
 173 006c BD46     	 mov sp,r7
 174              	.LCFI10:
 175              	 .cfi_def_cfa_register 13
 176              	 
 177 006e 80BD     	 pop {r7,pc}
 178              	.L13:
 179              	 .align 2
 180              	.L12:
 181 0070 00400240 	 .word 1073889280
 182 0074 00800240 	 .word 1073905664
 183 0078 00C00240 	 .word 1073922048
 184 007c 00000340 	 .word 1073938432
 185 0080 00000000 	 .word sysclk_enable_peripheral_clock
 186              	 .cfi_endproc
 187              	.LFE181:
 189              	 .align 1
 190              	 .global usart_spi_setup_device
 191              	 .syntax unified
 192              	 .thumb
 193              	 .thumb_func
 194              	 .fpu softvfp
 196              	usart_spi_setup_device:
 197              	.LFB182:
  90:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
  91:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /**
  92:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \brief Set up a USART in SPI master mode device.
  93:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
  94:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * The returned device descriptor structure must be passed to the driver
  95:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * whenever that device should be used as current slave device.
  96:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
  97:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param p_usart   Base address of the USART instance.
  98:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param device    Pointer to usart device struct that should be initialized.
  99:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param flags     USART configuration flags. Common flags for all
 100:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *                  implementations are the usart modes, which should be SPI_MODE_0,
 101:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *                  SPI_MODE_1, SPI_MODE_2, SPI_MODE_3.
 102:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param baud_rate Baud rate for communication with slave device in Hz.
 103:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param sel_id    Board specific select id.
 104:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  */
 105:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** void usart_spi_setup_device(Usart *p_usart, struct usart_spi_device *device, 
 106:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****      spi_flags_t flags, unsigned long baud_rate,
 107:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****      board_spi_select_id_t sel_id)
 108:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** {
 198              	 .loc 2 108 0
 199              	 .cfi_startproc
 200              	 
 201              	 
 202 0084 80B5     	 push {r7,lr}
 203              	.LCFI11:
 204              	 .cfi_def_cfa_offset 8
 205              	 .cfi_offset 7,-8
 206              	 .cfi_offset 14,-4
 207 0086 88B0     	 sub sp,sp,#32
 208              	.LCFI12:
 209              	 .cfi_def_cfa_offset 40
 210 0088 00AF     	 add r7,sp,#0
 211              	.LCFI13:
 212              	 .cfi_def_cfa_register 7
 213 008a F860     	 str r0,[r7,#12]
 214 008c B960     	 str r1,[r7,#8]
 215 008e 3B60     	 str r3,[r7]
 216 0090 1346     	 mov r3,r2
 217 0092 FB71     	 strb r3,[r7,#7]
 109:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	usart_spi_opt_t opt;
 110:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 111:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	/* avoid Cppcheck Warning */
 112:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	UNUSED(device);
 113:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	UNUSED(sel_id);
 114:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 115:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	/* Basic usart SPI configuration. */
 116:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	opt.baudrate = baud_rate;
 218              	 .loc 2 116 0
 219 0094 3B68     	 ldr r3,[r7]
 220 0096 3B61     	 str r3,[r7,#16]
 117:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	opt.char_length = US_MR_CHRL_8_BIT;
 221              	 .loc 2 117 0
 222 0098 C023     	 movs r3,#192
 223 009a 7B61     	 str r3,[r7,#20]
 118:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	opt.spi_mode = flags;
 224              	 .loc 2 118 0
 225 009c FB79     	 ldrb r3,[r7,#7]
 226 009e BB61     	 str r3,[r7,#24]
 119:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	opt.channel_mode = US_MR_CHMODE_NORMAL;
 227              	 .loc 2 119 0
 228 00a0 0023     	 movs r3,#0
 229 00a2 FB61     	 str r3,[r7,#28]
 120:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	
 121:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	/* Initialize the USART module as SPI master. */
 122:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	usart_init_spi_master(p_usart, &opt, sysclk_get_cpu_hz());
 230              	 .loc 2 122 0
 231 00a4 FFF7B6FF 	 bl sysclk_get_cpu_hz
 232 00a8 0246     	 mov r2,r0
 233 00aa 07F11003 	 add r3,r7,#16
 234 00ae 1946     	 mov r1,r3
 235 00b0 F868     	 ldr r0,[r7,#12]
 236 00b2 064B     	 ldr r3,.L15
 237 00b4 9847     	 blx r3
 238              	.LVL1:
 123:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 124:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	usart_enable_rx(p_usart);
 239              	 .loc 2 124 0
 240 00b6 F868     	 ldr r0,[r7,#12]
 241 00b8 054B     	 ldr r3,.L15+4
 242 00ba 9847     	 blx r3
 243              	.LVL2:
 125:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	usart_enable_tx(p_usart);
 244              	 .loc 2 125 0
 245 00bc F868     	 ldr r0,[r7,#12]
 246 00be 054B     	 ldr r3,.L15+8
 247 00c0 9847     	 blx r3
 248              	.LVL3:
 126:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** }
 249              	 .loc 2 126 0
 250 00c2 00BF     	 nop
 251 00c4 2037     	 adds r7,r7,#32
 252              	.LCFI14:
 253              	 .cfi_def_cfa_offset 8
 254 00c6 BD46     	 mov sp,r7
 255              	.LCFI15:
 256              	 .cfi_def_cfa_register 13
 257              	 
 258 00c8 80BD     	 pop {r7,pc}
 259              	.L16:
 260 00ca 00BF     	 .align 2
 261              	.L15:
 262 00cc 00000000 	 .word usart_init_spi_master
 263 00d0 00000000 	 .word usart_enable_rx
 264 00d4 00000000 	 .word usart_enable_tx
 265              	 .cfi_endproc
 266              	.LFE182:
 268              	 .align 1
 269              	 .global usart_spi_write_single
 270              	 .syntax unified
 271              	 .thumb
 272              	 .thumb_func
 273              	 .fpu softvfp
 275              	usart_spi_write_single:
 276              	.LFB183:
 127:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 128:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /*! \brief Write one byte to an SPI device using USART in SPI mode.
 129:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 130:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param p_usart Base address of the USART instance.
 131:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param data    The data to be sent out. 
 132:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 133:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  */
 134:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** void usart_spi_write_single(Usart *p_usart, uint8_t data)
 135:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** {
 277              	 .loc 2 135 0
 278              	 .cfi_startproc
 279              	 
 280              	 
 281 00d8 80B5     	 push {r7,lr}
 282              	.LCFI16:
 283              	 .cfi_def_cfa_offset 8
 284              	 .cfi_offset 7,-8
 285              	 .cfi_offset 14,-4
 286 00da 82B0     	 sub sp,sp,#8
 287              	.LCFI17:
 288              	 .cfi_def_cfa_offset 16
 289 00dc 00AF     	 add r7,sp,#0
 290              	.LCFI18:
 291              	 .cfi_def_cfa_register 7
 292 00de 7860     	 str r0,[r7,#4]
 293 00e0 0B46     	 mov r3,r1
 294 00e2 FB70     	 strb r3,[r7,#3]
 136:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	usart_putchar(p_usart, data);
 295              	 .loc 2 136 0
 296 00e4 FB78     	 ldrb r3,[r7,#3]
 297 00e6 1946     	 mov r1,r3
 298 00e8 7868     	 ldr r0,[r7,#4]
 299 00ea 034B     	 ldr r3,.L18
 300 00ec 9847     	 blx r3
 301              	.LVL4:
 137:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** }
 302              	 .loc 2 137 0
 303 00ee 00BF     	 nop
 304 00f0 0837     	 adds r7,r7,#8
 305              	.LCFI19:
 306              	 .cfi_def_cfa_offset 8
 307 00f2 BD46     	 mov sp,r7
 308              	.LCFI20:
 309              	 .cfi_def_cfa_register 13
 310              	 
 311 00f4 80BD     	 pop {r7,pc}
 312              	.L19:
 313 00f6 00BF     	 .align 2
 314              	.L18:
 315 00f8 00000000 	 .word usart_putchar
 316              	 .cfi_endproc
 317              	.LFE183:
 319              	 .align 1
 320              	 .global usart_spi_write_packet
 321              	 .syntax unified
 322              	 .thumb
 323              	 .thumb_func
 324              	 .fpu softvfp
 326              	usart_spi_write_packet:
 327              	.LFB184:
 138:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 139:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /**
 140:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \brief Send a sequence of bytes to an SPI device using USART in SPI mode.
 141:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 142:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * Received bytes on the USART in SPI mode are discarded.
 143:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 144:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param p_usart Base address of the USART instance.
 145:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param data    Data buffer to write.
 146:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param len     Length of data.
 147:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 148:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \return 0 if the USART in SPI master mode sends packet successfully.
 149:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 150:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \pre USART device must be selected with usart_spi_select_device() first.
 151:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  */
 152:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** uint32_t usart_spi_write_packet(Usart *p_usart, const uint8_t *data, size_t len)
 153:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** {
 328              	 .loc 2 153 0
 329              	 .cfi_startproc
 330              	 
 331              	 
 332 00fc 80B5     	 push {r7,lr}
 333              	.LCFI21:
 334              	 .cfi_def_cfa_offset 8
 335              	 .cfi_offset 7,-8
 336              	 .cfi_offset 14,-4
 337 00fe 86B0     	 sub sp,sp,#24
 338              	.LCFI22:
 339              	 .cfi_def_cfa_offset 32
 340 0100 00AF     	 add r7,sp,#0
 341              	.LCFI23:
 342              	 .cfi_def_cfa_register 7
 343 0102 F860     	 str r0,[r7,#12]
 344 0104 B960     	 str r1,[r7,#8]
 345 0106 7A60     	 str r2,[r7,#4]
 154:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	uint32_t dummy_data;
 155:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	size_t i=0;
 346              	 .loc 2 155 0
 347 0108 0023     	 movs r3,#0
 348 010a 7B61     	 str r3,[r7,#20]
 156:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	while(len) {
 349              	 .loc 2 156 0
 350 010c 13E0     	 b .L21
 351              	.L22:
 157:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 		usart_putchar(p_usart, *(data+i));
 352              	 .loc 2 157 0
 353 010e BA68     	 ldr r2,[r7,#8]
 354 0110 7B69     	 ldr r3,[r7,#20]
 355 0112 1344     	 add r3,r3,r2
 356 0114 1B78     	 ldrb r3,[r3]
 357 0116 1946     	 mov r1,r3
 358 0118 F868     	 ldr r0,[r7,#12]
 359 011a 0B4B     	 ldr r3,.L24
 360 011c 9847     	 blx r3
 361              	.LVL5:
 158:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 		usart_getchar(p_usart, &dummy_data);
 362              	 .loc 2 158 0
 363 011e 07F11003 	 add r3,r7,#16
 364 0122 1946     	 mov r1,r3
 365 0124 F868     	 ldr r0,[r7,#12]
 366 0126 094B     	 ldr r3,.L24+4
 367 0128 9847     	 blx r3
 368              	.LVL6:
 159:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 		len--;
 369              	 .loc 2 159 0
 370 012a 7B68     	 ldr r3,[r7,#4]
 371 012c 013B     	 subs r3,r3,#1
 372 012e 7B60     	 str r3,[r7,#4]
 160:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 		i++;
 373              	 .loc 2 160 0
 374 0130 7B69     	 ldr r3,[r7,#20]
 375 0132 0133     	 adds r3,r3,#1
 376 0134 7B61     	 str r3,[r7,#20]
 377              	.L21:
 156:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 		usart_putchar(p_usart, *(data+i));
 378              	 .loc 2 156 0
 379 0136 7B68     	 ldr r3,[r7,#4]
 380 0138 002B     	 cmp r3,#0
 381 013a E8D1     	 bne .L22
 161:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	}
 162:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	return 0;
 382              	 .loc 2 162 0
 383 013c 0023     	 movs r3,#0
 163:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** }
 384              	 .loc 2 163 0
 385 013e 1846     	 mov r0,r3
 386 0140 1837     	 adds r7,r7,#24
 387              	.LCFI24:
 388              	 .cfi_def_cfa_offset 8
 389 0142 BD46     	 mov sp,r7
 390              	.LCFI25:
 391              	 .cfi_def_cfa_register 13
 392              	 
 393 0144 80BD     	 pop {r7,pc}
 394              	.L25:
 395 0146 00BF     	 .align 2
 396              	.L24:
 397 0148 00000000 	 .word usart_putchar
 398 014c 00000000 	 .word usart_getchar
 399              	 .cfi_endproc
 400              	.LFE184:
 402              	 .align 1
 403              	 .global usart_spi_read_single
 404              	 .syntax unified
 405              	 .thumb
 406              	 .thumb_func
 407              	 .fpu softvfp
 409              	usart_spi_read_single:
 410              	.LFB185:
 164:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 165:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /*! \brief Receive one byte from an SPI device using USART in SPI mode.
 166:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 167:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param p_usart Base address of the USART instance.
 168:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param data    Pointer to the data byte where to store the received data.
 169:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 170:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \pre USART device must be selected with usart_spi_select_device() first.
 171:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  */
 172:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** void usart_spi_read_single(Usart *p_usart, uint8_t *data)
 173:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** {
 411              	 .loc 2 173 0
 412              	 .cfi_startproc
 413              	 
 414              	 
 415 0150 80B5     	 push {r7,lr}
 416              	.LCFI26:
 417              	 .cfi_def_cfa_offset 8
 418              	 .cfi_offset 7,-8
 419              	 .cfi_offset 14,-4
 420 0152 82B0     	 sub sp,sp,#8
 421              	.LCFI27:
 422              	 .cfi_def_cfa_offset 16
 423 0154 00AF     	 add r7,sp,#0
 424              	.LCFI28:
 425              	 .cfi_def_cfa_register 7
 426 0156 7860     	 str r0,[r7,#4]
 427 0158 3960     	 str r1,[r7]
 174:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	/* Dummy write one data to slave in order to read data. */
 175:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	usart_putchar(p_usart, CONFIG_USART_SPI_DUMMY);
 428              	 .loc 2 175 0
 429 015a FF21     	 movs r1,#255
 430 015c 7868     	 ldr r0,[r7,#4]
 431 015e 054B     	 ldr r3,.L27
 432 0160 9847     	 blx r3
 433              	.LVL7:
 176:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 177:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	usart_getchar(p_usart, (uint32_t*)data);
 434              	 .loc 2 177 0
 435 0162 3968     	 ldr r1,[r7]
 436 0164 7868     	 ldr r0,[r7,#4]
 437 0166 044B     	 ldr r3,.L27+4
 438 0168 9847     	 blx r3
 439              	.LVL8:
 178:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** }
 440              	 .loc 2 178 0
 441 016a 00BF     	 nop
 442 016c 0837     	 adds r7,r7,#8
 443              	.LCFI29:
 444              	 .cfi_def_cfa_offset 8
 445 016e BD46     	 mov sp,r7
 446              	.LCFI30:
 447              	 .cfi_def_cfa_register 13
 448              	 
 449 0170 80BD     	 pop {r7,pc}
 450              	.L28:
 451 0172 00BF     	 .align 2
 452              	.L27:
 453 0174 00000000 	 .word usart_putchar
 454 0178 00000000 	 .word usart_getchar
 455              	 .cfi_endproc
 456              	.LFE185:
 458              	 .align 1
 459              	 .global usart_spi_read_packet
 460              	 .syntax unified
 461              	 .thumb
 462              	 .thumb_func
 463              	 .fpu softvfp
 465              	usart_spi_read_packet:
 466              	.LFB186:
 179:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 180:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /**
 181:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \brief Receive a sequence of bytes from a USART in SPI mode device.
 182:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 183:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * All bytes sent out on usart bus are sent as value 0.
 184:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 185:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param p_usart Base address of the usart instance.
 186:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param data    Data buffer to put read data.
 187:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param len     Length of data.
 188:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 189:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \return 0 if the USART in SPI master mode reads packet successfully.
 190:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 191:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \pre USART device must be selected with usart_spi_select_device() first.
 192:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  */
 193:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** uint32_t usart_spi_read_packet(Usart *p_usart, uint8_t *data, size_t len)
 194:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** {
 467              	 .loc 2 194 0
 468              	 .cfi_startproc
 469              	 
 470              	 
 471 017c 80B5     	 push {r7,lr}
 472              	.LCFI31:
 473              	 .cfi_def_cfa_offset 8
 474              	 .cfi_offset 7,-8
 475              	 .cfi_offset 14,-4
 476 017e 86B0     	 sub sp,sp,#24
 477              	.LCFI32:
 478              	 .cfi_def_cfa_offset 32
 479 0180 00AF     	 add r7,sp,#0
 480              	.LCFI33:
 481              	 .cfi_def_cfa_register 7
 482 0182 F860     	 str r0,[r7,#12]
 483 0184 B960     	 str r1,[r7,#8]
 484 0186 7A60     	 str r2,[r7,#4]
 195:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	uint32_t val;
 196:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	uint32_t i = 0;
 485              	 .loc 2 196 0
 486 0188 0023     	 movs r3,#0
 487 018a 7B61     	 str r3,[r7,#20]
 197:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 198:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	while(len) {
 488              	 .loc 2 198 0
 489 018c 15E0     	 b .L30
 490              	.L31:
 199:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 		/* Dummy write one data to slave in order to read data. */
 200:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 		usart_putchar(p_usart, CONFIG_USART_SPI_DUMMY);
 491              	 .loc 2 200 0
 492 018e FF21     	 movs r1,#255
 493 0190 F868     	 ldr r0,[r7,#12]
 494 0192 0E4B     	 ldr r3,.L33
 495 0194 9847     	 blx r3
 496              	.LVL9:
 201:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 		usart_getchar(p_usart, &val);
 497              	 .loc 2 201 0
 498 0196 07F11003 	 add r3,r7,#16
 499 019a 1946     	 mov r1,r3
 500 019c F868     	 ldr r0,[r7,#12]
 501 019e 0C4B     	 ldr r3,.L33+4
 502 01a0 9847     	 blx r3
 503              	.LVL10:
 202:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 203:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 		data[i] = (uint8_t)(val & 0xFF);
 504              	 .loc 2 203 0
 505 01a2 BA68     	 ldr r2,[r7,#8]
 506 01a4 7B69     	 ldr r3,[r7,#20]
 507 01a6 1344     	 add r3,r3,r2
 508 01a8 3A69     	 ldr r2,[r7,#16]
 509 01aa D2B2     	 uxtb r2,r2
 510 01ac 1A70     	 strb r2,[r3]
 204:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 		i++;
 511              	 .loc 2 204 0
 512 01ae 7B69     	 ldr r3,[r7,#20]
 513 01b0 0133     	 adds r3,r3,#1
 514 01b2 7B61     	 str r3,[r7,#20]
 205:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 		len--;
 515              	 .loc 2 205 0
 516 01b4 7B68     	 ldr r3,[r7,#4]
 517 01b6 013B     	 subs r3,r3,#1
 518 01b8 7B60     	 str r3,[r7,#4]
 519              	.L30:
 198:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 		/* Dummy write one data to slave in order to read data. */
 520              	 .loc 2 198 0
 521 01ba 7B68     	 ldr r3,[r7,#4]
 522 01bc 002B     	 cmp r3,#0
 523 01be E6D1     	 bne .L31
 206:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	}
 207:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	
 208:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	return 0;
 524              	 .loc 2 208 0
 525 01c0 0023     	 movs r3,#0
 209:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** }
 526              	 .loc 2 209 0
 527 01c2 1846     	 mov r0,r3
 528 01c4 1837     	 adds r7,r7,#24
 529              	.LCFI34:
 530              	 .cfi_def_cfa_offset 8
 531 01c6 BD46     	 mov sp,r7
 532              	.LCFI35:
 533              	 .cfi_def_cfa_register 13
 534              	 
 535 01c8 80BD     	 pop {r7,pc}
 536              	.L34:
 537 01ca 00BF     	 .align 2
 538              	.L33:
 539 01cc 00000000 	 .word usart_putchar
 540 01d0 00000000 	 .word usart_getchar
 541              	 .cfi_endproc
 542              	.LFE186:
 544              	 .align 1
 545              	 .global usart_spi_select_device
 546              	 .syntax unified
 547              	 .thumb
 548              	 .thumb_func
 549              	 .fpu softvfp
 551              	usart_spi_select_device:
 552              	.LFB187:
 210:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 211:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /**
 212:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \brief Select the given device on the SPI bus.
 213:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 214:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param p_usart  Base address of the USART instance.
 215:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param device   SPI device.
 216:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 217:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  */
 218:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** void usart_spi_select_device(Usart *p_usart, struct usart_spi_device *device)
 219:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** {
 553              	 .loc 2 219 0
 554              	 .cfi_startproc
 555              	 
 556              	 
 557 01d4 80B5     	 push {r7,lr}
 558              	.LCFI36:
 559              	 .cfi_def_cfa_offset 8
 560              	 .cfi_offset 7,-8
 561              	 .cfi_offset 14,-4
 562 01d6 82B0     	 sub sp,sp,#8
 563              	.LCFI37:
 564              	 .cfi_def_cfa_offset 16
 565 01d8 00AF     	 add r7,sp,#0
 566              	.LCFI38:
 567              	 .cfi_def_cfa_register 7
 568 01da 7860     	 str r0,[r7,#4]
 569 01dc 3960     	 str r1,[r7]
 220:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	/* avoid Cppcheck Warning */
 221:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	UNUSED(device);
 222:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	
 223:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	usart_spi_force_chip_select(p_usart);
 570              	 .loc 2 223 0
 571 01de 7868     	 ldr r0,[r7,#4]
 572 01e0 024B     	 ldr r3,.L36
 573 01e2 9847     	 blx r3
 574              	.LVL11:
 224:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** }
 575              	 .loc 2 224 0
 576 01e4 00BF     	 nop
 577 01e6 0837     	 adds r7,r7,#8
 578              	.LCFI39:
 579              	 .cfi_def_cfa_offset 8
 580 01e8 BD46     	 mov sp,r7
 581              	.LCFI40:
 582              	 .cfi_def_cfa_register 13
 583              	 
 584 01ea 80BD     	 pop {r7,pc}
 585              	.L37:
 586              	 .align 2
 587              	.L36:
 588 01ec 00000000 	 .word usart_spi_force_chip_select
 589              	 .cfi_endproc
 590              	.LFE187:
 592              	 .align 1
 593              	 .global usart_spi_deselect_device
 594              	 .syntax unified
 595              	 .thumb
 596              	 .thumb_func
 597              	 .fpu softvfp
 599              	usart_spi_deselect_device:
 600              	.LFB188:
 225:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 226:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /**
 227:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \brief De-select the given device on the SPI bus.
 228:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 229:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param p_usart Base address of the USART instance.
 230:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param device  SPI device.
 231:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  */
 232:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** void usart_spi_deselect_device(Usart *p_usart, struct usart_spi_device *device)
 233:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** {
 601              	 .loc 2 233 0
 602              	 .cfi_startproc
 603              	 
 604              	 
 605 01f0 80B5     	 push {r7,lr}
 606              	.LCFI41:
 607              	 .cfi_def_cfa_offset 8
 608              	 .cfi_offset 7,-8
 609              	 .cfi_offset 14,-4
 610 01f2 82B0     	 sub sp,sp,#8
 611              	.LCFI42:
 612              	 .cfi_def_cfa_offset 16
 613 01f4 00AF     	 add r7,sp,#0
 614              	.LCFI43:
 615              	 .cfi_def_cfa_register 7
 616 01f6 7860     	 str r0,[r7,#4]
 617 01f8 3960     	 str r1,[r7]
 234:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	/* avoid Cppcheck Warning */
 235:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	UNUSED(device);
 236:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	
 237:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	usart_spi_release_chip_select(p_usart);
 618              	 .loc 2 237 0
 619 01fa 7868     	 ldr r0,[r7,#4]
 620 01fc 024B     	 ldr r3,.L39
 621 01fe 9847     	 blx r3
 622              	.LVL12:
 238:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** }
 623              	 .loc 2 238 0
 624 0200 00BF     	 nop
 625 0202 0837     	 adds r7,r7,#8
 626              	.LCFI44:
 627              	 .cfi_def_cfa_offset 8
 628 0204 BD46     	 mov sp,r7
 629              	.LCFI45:
 630              	 .cfi_def_cfa_register 13
 631              	 
 632 0206 80BD     	 pop {r7,pc}
 633              	.L40:
 634              	 .align 2
 635              	.L39:
 636 0208 00000000 	 .word usart_spi_release_chip_select
 637              	 .cfi_endproc
 638              	.LFE188:
 640              	 .align 1
 641              	 .global usart_spi_is_tx_empty
 642              	 .syntax unified
 643              	 .thumb
 644              	 .thumb_func
 645              	 .fpu softvfp
 647              	usart_spi_is_tx_empty:
 648              	.LFB189:
 239:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 240:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /*! \brief Check whether there are data in Transmit Holding Register or
 241:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *         Transmit Shift Register in SPI master mode.
 242:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 243:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param p_usart Base address of the USART instance.
 244:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 245:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \retval 1      The two registers are empty.
 246:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \retval 0      One of the two registers contains data.
 247:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  */
 248:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** uint32_t usart_spi_is_tx_empty(Usart *p_usart)
 249:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** {
 649              	 .loc 2 249 0
 650              	 .cfi_startproc
 651              	 
 652              	 
 653 020c 80B5     	 push {r7,lr}
 654              	.LCFI46:
 655              	 .cfi_def_cfa_offset 8
 656              	 .cfi_offset 7,-8
 657              	 .cfi_offset 14,-4
 658 020e 82B0     	 sub sp,sp,#8
 659              	.LCFI47:
 660              	 .cfi_def_cfa_offset 16
 661 0210 00AF     	 add r7,sp,#0
 662              	.LCFI48:
 663              	 .cfi_def_cfa_register 7
 664 0212 7860     	 str r0,[r7,#4]
 250:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	return usart_is_tx_empty(p_usart);
 665              	 .loc 2 250 0
 666 0214 7868     	 ldr r0,[r7,#4]
 667 0216 034B     	 ldr r3,.L43
 668 0218 9847     	 blx r3
 669              	.LVL13:
 670 021a 0346     	 mov r3,r0
 251:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** }
 671              	 .loc 2 251 0
 672 021c 1846     	 mov r0,r3
 673 021e 0837     	 adds r7,r7,#8
 674              	.LCFI49:
 675              	 .cfi_def_cfa_offset 8
 676 0220 BD46     	 mov sp,r7
 677              	.LCFI50:
 678              	 .cfi_def_cfa_register 13
 679              	 
 680 0222 80BD     	 pop {r7,pc}
 681              	.L44:
 682              	 .align 2
 683              	.L43:
 684 0224 00000000 	 .word usart_is_tx_empty
 685              	 .cfi_endproc
 686              	.LFE189:
 688              	 .align 1
 689              	 .global usart_spi_is_rx_ready
 690              	 .syntax unified
 691              	 .thumb
 692              	 .thumb_func
 693              	 .fpu softvfp
 695              	usart_spi_is_rx_ready:
 696              	.LFB190:
 252:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 253:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /*! \brief Check whether the USART in SPI master mode contains a received character.
 254:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 255:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param p_usart Base address of the USART instance.
 256:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 257:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \retval 1      Some data have been received.
 258:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \retval 0      No data has been received.
 259:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  */
 260:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** uint32_t usart_spi_is_rx_ready(Usart *p_usart)
 261:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** {
 697              	 .loc 2 261 0
 698              	 .cfi_startproc
 699              	 
 700              	 
 701 0228 80B5     	 push {r7,lr}
 702              	.LCFI51:
 703              	 .cfi_def_cfa_offset 8
 704              	 .cfi_offset 7,-8
 705              	 .cfi_offset 14,-4
 706 022a 82B0     	 sub sp,sp,#8
 707              	.LCFI52:
 708              	 .cfi_def_cfa_offset 16
 709 022c 00AF     	 add r7,sp,#0
 710              	.LCFI53:
 711              	 .cfi_def_cfa_register 7
 712 022e 7860     	 str r0,[r7,#4]
 262:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	return usart_is_rx_ready(p_usart);
 713              	 .loc 2 262 0
 714 0230 7868     	 ldr r0,[r7,#4]
 715 0232 034B     	 ldr r3,.L47
 716 0234 9847     	 blx r3
 717              	.LVL14:
 718 0236 0346     	 mov r3,r0
 263:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** }
 719              	 .loc 2 263 0
 720 0238 1846     	 mov r0,r3
 721 023a 0837     	 adds r7,r7,#8
 722              	.LCFI54:
 723              	 .cfi_def_cfa_offset 8
 724 023c BD46     	 mov sp,r7
 725              	.LCFI55:
 726              	 .cfi_def_cfa_register 13
 727              	 
 728 023e 80BD     	 pop {r7,pc}
 729              	.L48:
 730              	 .align 2
 731              	.L47:
 732 0240 00000000 	 .word usart_is_rx_ready
 733              	 .cfi_endproc
 734              	.LFE190:
 736              	 .align 1
 737              	 .global usart_spi_is_tx_ready
 738              	 .syntax unified
 739              	 .thumb
 740              	 .thumb_func
 741              	 .fpu softvfp
 743              	usart_spi_is_tx_ready:
 744              	.LFB191:
 264:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 265:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /*! \brief Check if the USART Transmit Holding Register is empty or not in SPI mode.
 266:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 267:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param p_usart Base address of the USART instance.
 268:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 269:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \retval 1      There is no data in the Transmit Holding Register.
 270:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \retval 0      There are data in the Transmit Holding Register.
 271:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  */
 272:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** uint32_t usart_spi_is_tx_ready(Usart *p_usart)
 273:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** {
 745              	 .loc 2 273 0
 746              	 .cfi_startproc
 747              	 
 748              	 
 749 0244 80B5     	 push {r7,lr}
 750              	.LCFI56:
 751              	 .cfi_def_cfa_offset 8
 752              	 .cfi_offset 7,-8
 753              	 .cfi_offset 14,-4
 754 0246 82B0     	 sub sp,sp,#8
 755              	.LCFI57:
 756              	 .cfi_def_cfa_offset 16
 757 0248 00AF     	 add r7,sp,#0
 758              	.LCFI58:
 759              	 .cfi_def_cfa_register 7
 760 024a 7860     	 str r0,[r7,#4]
 274:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	return usart_is_tx_ready(p_usart);
 761              	 .loc 2 274 0
 762 024c 7868     	 ldr r0,[r7,#4]
 763 024e 034B     	 ldr r3,.L51
 764 0250 9847     	 blx r3
 765              	.LVL15:
 766 0252 0346     	 mov r3,r0
 275:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** }
 767              	 .loc 2 275 0
 768 0254 1846     	 mov r0,r3
 769 0256 0837     	 adds r7,r7,#8
 770              	.LCFI59:
 771              	 .cfi_def_cfa_offset 8
 772 0258 BD46     	 mov sp,r7
 773              	.LCFI60:
 774              	 .cfi_def_cfa_register 13
 775              	 
 776 025a 80BD     	 pop {r7,pc}
 777              	.L52:
 778              	 .align 2
 779              	.L51:
 780 025c 00000000 	 .word usart_is_tx_ready
 781              	 .cfi_endproc
 782              	.LFE191:
 784              	 .align 1
 785              	 .global usart_spi_is_rx_full
 786              	 .syntax unified
 787              	 .thumb
 788              	 .thumb_func
 789              	 .fpu softvfp
 791              	usart_spi_is_rx_full:
 792              	.LFB192:
 276:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 277:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /*! \brief Check if both receive buffers are full.
 278:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 279:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param p_usart Base address of the USART instance.
 280:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 281:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \retval 1      Receive buffers are full.
 282:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \retval 0      Receive buffers are not full.
 283:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  */
 284:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** uint32_t usart_spi_is_rx_full(Usart *p_usart)
 285:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** {
 793              	 .loc 2 285 0
 794              	 .cfi_startproc
 795              	 
 796              	 
 797 0260 80B5     	 push {r7,lr}
 798              	.LCFI61:
 799              	 .cfi_def_cfa_offset 8
 800              	 .cfi_offset 7,-8
 801              	 .cfi_offset 14,-4
 802 0262 82B0     	 sub sp,sp,#8
 803              	.LCFI62:
 804              	 .cfi_def_cfa_offset 16
 805 0264 00AF     	 add r7,sp,#0
 806              	.LCFI63:
 807              	 .cfi_def_cfa_register 7
 808 0266 7860     	 str r0,[r7,#4]
 286:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	return usart_is_rx_buf_full(p_usart);
 809              	 .loc 2 286 0
 810 0268 7868     	 ldr r0,[r7,#4]
 811 026a 034B     	 ldr r3,.L55
 812 026c 9847     	 blx r3
 813              	.LVL16:
 814 026e 0346     	 mov r3,r0
 287:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** }
 815              	 .loc 2 287 0
 816 0270 1846     	 mov r0,r3
 817 0272 0837     	 adds r7,r7,#8
 818              	.LCFI64:
 819              	 .cfi_def_cfa_offset 8
 820 0274 BD46     	 mov sp,r7
 821              	.LCFI65:
 822              	 .cfi_def_cfa_register 13
 823              	 
 824 0276 80BD     	 pop {r7,pc}
 825              	.L56:
 826              	 .align 2
 827              	.L55:
 828 0278 00000000 	 .word usart_is_rx_buf_full
 829              	 .cfi_endproc
 830              	.LFE192:
 832              	 .align 1
 833              	 .global usart_spi_enable
 834              	 .syntax unified
 835              	 .thumb
 836              	 .thumb_func
 837              	 .fpu softvfp
 839              	usart_spi_enable:
 840              	.LFB193:
 288:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 289:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /*! \brief Enable the USART for the specified USART in SPI mode.
 290:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 291:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param p_usart Base address of the USART instance.
 292:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  */
 293:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** void usart_spi_enable(Usart *p_usart)
 294:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** {
 841              	 .loc 2 294 0
 842              	 .cfi_startproc
 843              	 
 844              	 
 845 027c 80B5     	 push {r7,lr}
 846              	.LCFI66:
 847              	 .cfi_def_cfa_offset 8
 848              	 .cfi_offset 7,-8
 849              	 .cfi_offset 14,-4
 850 027e 82B0     	 sub sp,sp,#8
 851              	.LCFI67:
 852              	 .cfi_def_cfa_offset 16
 853 0280 00AF     	 add r7,sp,#0
 854              	.LCFI68:
 855              	 .cfi_def_cfa_register 7
 856 0282 7860     	 str r0,[r7,#4]
 295:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	usart_enable_tx(p_usart);
 857              	 .loc 2 295 0
 858 0284 7868     	 ldr r0,[r7,#4]
 859 0286 044B     	 ldr r3,.L58
 860 0288 9847     	 blx r3
 861              	.LVL17:
 296:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	usart_enable_rx(p_usart);
 862              	 .loc 2 296 0
 863 028a 7868     	 ldr r0,[r7,#4]
 864 028c 034B     	 ldr r3,.L58+4
 865 028e 9847     	 blx r3
 866              	.LVL18:
 297:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** }
 867              	 .loc 2 297 0
 868 0290 00BF     	 nop
 869 0292 0837     	 adds r7,r7,#8
 870              	.LCFI69:
 871              	 .cfi_def_cfa_offset 8
 872 0294 BD46     	 mov sp,r7
 873              	.LCFI70:
 874              	 .cfi_def_cfa_register 13
 875              	 
 876 0296 80BD     	 pop {r7,pc}
 877              	.L59:
 878              	 .align 2
 879              	.L58:
 880 0298 00000000 	 .word usart_enable_tx
 881 029c 00000000 	 .word usart_enable_rx
 882              	 .cfi_endproc
 883              	.LFE193:
 885              	 .align 1
 886              	 .global usart_spi_disable
 887              	 .syntax unified
 888              	 .thumb
 889              	 .thumb_func
 890              	 .fpu softvfp
 892              	usart_spi_disable:
 893              	.LFB194:
 298:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 
 299:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** /*! \brief Disable the USART for the specified USART in SPI mode.
 300:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 301:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * Ensure that nothing is transferred while setting up buffers.
 302:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 303:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  * \param p_usart Base address of the USART instance.
 304:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  *
 305:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c ****  */
 306:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** void usart_spi_disable(Usart *p_usart)
 307:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** {
 894              	 .loc 2 307 0
 895              	 .cfi_startproc
 896              	 
 897              	 
 898 02a0 80B5     	 push {r7,lr}
 899              	.LCFI71:
 900              	 .cfi_def_cfa_offset 8
 901              	 .cfi_offset 7,-8
 902              	 .cfi_offset 14,-4
 903 02a2 82B0     	 sub sp,sp,#8
 904              	.LCFI72:
 905              	 .cfi_def_cfa_offset 16
 906 02a4 00AF     	 add r7,sp,#0
 907              	.LCFI73:
 908              	 .cfi_def_cfa_register 7
 909 02a6 7860     	 str r0,[r7,#4]
 308:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	usart_disable_tx(p_usart);
 910              	 .loc 2 308 0
 911 02a8 7868     	 ldr r0,[r7,#4]
 912 02aa 044B     	 ldr r3,.L61
 913 02ac 9847     	 blx r3
 914              	.LVL19:
 309:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** 	usart_disable_rx(p_usart);
 915              	 .loc 2 309 0
 916 02ae 7868     	 ldr r0,[r7,#4]
 917 02b0 034B     	 ldr r3,.L61+4
 918 02b2 9847     	 blx r3
 919              	.LVL20:
 310:../../../platform/common/services/spi/sam_usart_spi/usart_spi.c **** }
 920              	 .loc 2 310 0
 921 02b4 00BF     	 nop
 922 02b6 0837     	 adds r7,r7,#8
 923              	.LCFI74:
 924              	 .cfi_def_cfa_offset 8
 925 02b8 BD46     	 mov sp,r7
 926              	.LCFI75:
 927              	 .cfi_def_cfa_register 13
 928              	 
 929 02ba 80BD     	 pop {r7,pc}
 930              	.L62:
 931              	 .align 2
 932              	.L61:
 933 02bc 00000000 	 .word usart_disable_tx
 934 02c0 00000000 	 .word usart_disable_rx
 935              	 .cfi_endproc
 936              	.LFE194:
 938              	.Letext0:
 939              	 .file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 940              	 .file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 941              	 .file 5 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 942              	 .file 6 "../../../platform/sam/utils/cmsis/sam4l/include/sam4lc4b.h"
 943              	 .file 7 "../../../platform/thirdparty/CMSIS/include/core_cm4.h"
 944              	 .file 8 "../../../platform/sam/utils/cmsis/sam4l/source/templates/system_sam4l.h"
 945              	 .file 9 "../../../platform/sam/utils/cmsis/sam4l/include/component/component_usart.h"
 946              	 .file 10 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\lock.h"
 947              	 .file 11 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_types.h"
 948              	 .file 12 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\reent.h"
 949              	 .file 13 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\stdlib.h"
 950              	 .file 14 "../../../platform/common/utils/interrupt/interrupt_sam_nvic.h"
 951              	 .file 15 "../../../platform/sam/utils/compiler.h"
 952              	 .file 16 "../../../platform/sam/drivers/usart/usart.h"
 953              	 .file 17 "../../../platform/common/services/spi/sam_usart_spi/usart_spi.h"
 954              	 .file 18 "../../../platform/common/services/usb/usb_protocol.h"
 955              	 .file 19 "../../../platform/common/services/usb/udc/udi.h"
 956              	 .file 20 "../../../platform/common/services/usb/udc/udc_desc.h"
 957              	 .file 21 "../../../platform/common/services/usb/udc/udd.h"
 958              	 .file 22 "../../../platform/common/services/usb/class/cdc/device/udi_cdc.h"
 959              	 .file 23 "../../../platform/common/utils/stdio/stdio_usb/stdio_usb.h"
 960              	 .file 24 "../../../platform/common/services/clock/sam4l/pll.h"
 961              	 .file 25 "../../../platform/common/services/clock/sam4l/genclk.h"
DEFINED SYMBOLS
                            *ABS*:00000000 usart_spi.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
    {standard input}:27     .text:00000000 $t
    {standard input}:33     .text:00000000 sysclk_get_main_hz
    {standard input}:64     .text:00000010 $d
    {standard input}:68     .text:00000014 $t
    {standard input}:74     .text:00000014 sysclk_get_cpu_hz
    {standard input}:104    .text:00000022 usart_spi_init
    {standard input}:181    .text:00000070 $d
    {standard input}:189    .text:00000084 $t
    {standard input}:196    .text:00000084 usart_spi_setup_device
    {standard input}:262    .text:000000cc $d
    {standard input}:268    .text:000000d8 $t
    {standard input}:275    .text:000000d8 usart_spi_write_single
    {standard input}:315    .text:000000f8 $d
    {standard input}:319    .text:000000fc $t
    {standard input}:326    .text:000000fc usart_spi_write_packet
    {standard input}:397    .text:00000148 $d
    {standard input}:402    .text:00000150 $t
    {standard input}:409    .text:00000150 usart_spi_read_single
    {standard input}:453    .text:00000174 $d
    {standard input}:458    .text:0000017c $t
    {standard input}:465    .text:0000017c usart_spi_read_packet
    {standard input}:539    .text:000001cc $d
    {standard input}:544    .text:000001d4 $t
    {standard input}:551    .text:000001d4 usart_spi_select_device
    {standard input}:588    .text:000001ec $d
    {standard input}:592    .text:000001f0 $t
    {standard input}:599    .text:000001f0 usart_spi_deselect_device
    {standard input}:636    .text:00000208 $d
    {standard input}:640    .text:0000020c $t
    {standard input}:647    .text:0000020c usart_spi_is_tx_empty
    {standard input}:684    .text:00000224 $d
    {standard input}:688    .text:00000228 $t
    {standard input}:695    .text:00000228 usart_spi_is_rx_ready
    {standard input}:732    .text:00000240 $d
    {standard input}:736    .text:00000244 $t
    {standard input}:743    .text:00000244 usart_spi_is_tx_ready
    {standard input}:780    .text:0000025c $d
    {standard input}:784    .text:00000260 $t
    {standard input}:791    .text:00000260 usart_spi_is_rx_full
    {standard input}:828    .text:00000278 $d
    {standard input}:832    .text:0000027c $t
    {standard input}:839    .text:0000027c usart_spi_enable
    {standard input}:880    .text:00000298 $d
    {standard input}:885    .text:000002a0 $t
    {standard input}:892    .text:000002a0 usart_spi_disable
    {standard input}:933    .text:000002bc $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
sysclk_enable_peripheral_clock
usart_init_spi_master
usart_enable_rx
usart_enable_tx
usart_putchar
usart_getchar
usart_spi_force_chip_select
usart_spi_release_chip_select
usart_is_tx_empty
usart_is_rx_ready
usart_is_tx_ready
usart_is_rx_buf_full
usart_disable_tx
usart_disable_rx
