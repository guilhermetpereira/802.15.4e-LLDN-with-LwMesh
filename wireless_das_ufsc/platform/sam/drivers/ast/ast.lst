   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "ast.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .align 1
  16              	 .syntax unified
  17              	 .thumb
  18              	 .thumb_func
  19              	 .fpu softvfp
  21              	NVIC_EnableIRQ:
  22              	.LFB96:
  23              	 .file 1 "../../../platform/thirdparty/CMSIS/include/core_cm4.h"
   1:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /**************************************************************************//**
   2:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @file     core_cm4.h
   3:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @version  V3.00
   5:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @date     03. February 2012
   6:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *
   7:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @note
   8:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *
  10:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @par
  11:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * within development tools that are supporting such ARM based processors.
  14:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *
  15:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @par
  16:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *
  22:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  ******************************************************************************/
  23:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if defined ( __ICCARM__ )
  24:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  25:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
  26:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  27:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #ifdef __cplusplus
  28:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  extern "C" {
  29:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
  30:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  31:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  34:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  35:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  36:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   
  37:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  38:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'. 
  39:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  40:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  41:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****      Unions are used for effective representation of core registers.
  42:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****    
  43:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  44:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****      Function-like macros are used to allow more efficient code. 
  45:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
  46:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  47:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  48:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*******************************************************************************
  49:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *                 CMSIS definitions
  50:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  ******************************************************************************/
  51:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup Cortex_M4
  52:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
  53:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
  54:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  55:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*  CMSIS CM4 definitions */
  56:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x03)                                   /*!< [31:16] CMSIS HAL m
  57:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x00)                                   /*!< [15:0]  CMSIS HAL s
  58:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  59:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  60:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  61:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  62:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  63:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  64:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if   defined ( __CC_ARM )
  65:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  66:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  67:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  68:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  69:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __ICCARM__ )
  70:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  71:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  72:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  73:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  74:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __TMS470__ )
  75:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  76:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  77:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  78:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __GNUC__ )
  79:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  80:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  81:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  82:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  83:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __TASKING__ )
  84:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
  85:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
  86:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  87:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  88:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
  89:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  90:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not. For this, __FPU_PRESENT has to be checked p
  91:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** */
  92:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if defined ( __CC_ARM )
  93:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  94:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
  95:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1
  96:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #else
  97:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  98:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0
  99:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #endif
 100:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #else
 101:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0
 102:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 103:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 104:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __ICCARM__ )
 105:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #if defined __ARMVFP__
 106:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 107:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1
 108:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #else
 109:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 110:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0
 111:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #endif
 112:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #else
 113:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0
 114:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 115:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 116:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __TMS470__ )
 117:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 118:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 119:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1
 120:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #else
 121:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 122:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0
 123:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #endif
 124:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #else
 125:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0
 126:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 127:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 128:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __GNUC__ )
 129:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 130:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 131:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1
 132:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #else
 133:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 134:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0
 135:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #endif
 136:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #else
 137:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0
 138:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 139:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 140:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __TASKING__ )
 141:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     /* add preprocessor checks to define __FPU_USED */
 142:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0
 143:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
 144:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 145:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 146:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 147:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 148:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #include <core_cm4_simd.h>               /* Compiler specific SIMD Intrinsics               */
 149:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 150:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 151:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 152:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 153:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 154:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 155:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 156:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 157:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* check device defines and use defaults */
 158:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 159:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #ifndef __CM4_REV
 160:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __CM4_REV               0x0000
 161:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 162:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 163:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 164:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #ifndef __FPU_PRESENT
 165:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_PRESENT             0
 166:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 167:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 168:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 169:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #ifndef __MPU_PRESENT
 170:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __MPU_PRESENT             0
 171:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 172:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 173:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 174:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 175:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 176:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 177:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 178:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 179:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 180:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 181:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 182:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 183:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
 184:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 185:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 186:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /**
 187:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 188:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  
 189:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 190:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \li to specify the access to peripheral variables.
 191:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 192:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** */
 193:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #ifdef __cplusplus
 194:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 195:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #else
 196:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 197:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
 198:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 199:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 200:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 201:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group Cortex_M4 */
 202:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 203:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 204:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 205:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*******************************************************************************
 206:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *                 Register Abstraction
 207:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   Core Register contain:
 208:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core Register
 209:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core NVIC Register
 210:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core SCB Register
 211:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core SysTick Register
 212:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core Debug Register
 213:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core MPU Register
 214:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core FPU Register
 215:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  ******************************************************************************/
 216:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 217:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 218:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** */
 219:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 220:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup    CMSIS_core_register
 221:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 222:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief  Core Register type definitions.
 223:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 224:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 225:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 226:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 227:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 228:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef union
 229:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 230:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   struct
 231:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   {
 232:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 233:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 234:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #else
 235:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 236:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 237:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 238:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
 239:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 240:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 241:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 242:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 243:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 244:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 245:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 246:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } APSR_Type;
 247:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 248:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 249:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 250:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 251:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef union
 252:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 253:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   struct
 254:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   {
 255:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 256:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 257:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 258:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 259:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } IPSR_Type;
 260:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 261:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 262:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 263:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 264:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef union
 265:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 266:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   struct
 267:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   {
 268:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 269:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 270:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 271:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #else
 272:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 273:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 274:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 275:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
 276:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 277:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 278:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 279:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 280:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 281:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 282:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 283:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 284:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 285:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } xPSR_Type;
 286:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 287:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 288:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 289:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 290:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef union
 291:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 292:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   struct
 293:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   {
 294:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 295:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 296:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 297:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 298:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 299:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 300:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } CONTROL_Type;
 301:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 302:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 303:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 304:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 305:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup    CMSIS_core_register
 306:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 307:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 308:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 309:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 310:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 311:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 312:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 313:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 314:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 315:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 316:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[24];
 317:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 318:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RSERVED1[24];
 319:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 320:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED2[24];
 321:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 322:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED3[24];
 323:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 324:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED4[56];
 325:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 326:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED5[644];
 327:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 328:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }  NVIC_Type;
 329:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 330:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 331:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 332:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL << NVIC_STIR_INTID_Pos)            /*!< STIR: I
 333:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 334:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 335:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 336:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 337:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 338:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 339:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 340:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 341:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 342:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 343:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 344:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 345:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 346:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 347:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 348:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 349:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 350:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 351:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 352:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 353:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 354:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 355:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 356:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 357:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 358:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 359:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 360:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 361:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 362:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 363:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 364:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 365:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 366:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[5];
 367:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 368:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } SCB_Type;
 369:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 370:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB CPUID Register Definitions */
 371:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 372:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 373:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 374:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 375:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 376:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 377:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 378:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 379:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 380:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 381:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 382:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 383:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 384:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 385:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 386:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 387:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 388:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 389:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 390:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 391:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 392:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 393:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 394:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 395:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 396:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 397:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 398:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 399:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 400:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 401:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 402:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 403:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 404:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 405:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 406:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 407:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 408:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 409:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 410:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 411:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 412:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 413:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 414:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 415:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 416:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 417:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 418:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 419:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 420:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 421:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 422:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 423:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 424:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 425:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 426:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 427:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 428:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 429:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 430:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 431:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 432:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 433:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 434:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 435:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 436:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 437:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 438:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 439:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 440:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 441:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 442:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 443:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB System Control Register Definitions */
 444:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 445:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 446:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 447:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 448:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 449:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 450:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 451:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 452:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 453:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 454:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 455:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 456:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 457:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 458:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 459:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 460:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 461:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 462:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 463:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 464:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 465:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 466:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 467:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 468:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 469:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 470:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 471:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 472:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 473:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 474:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 475:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 476:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 477:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 478:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 479:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 480:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 481:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 482:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 483:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 484:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 485:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 486:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 487:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 488:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 489:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 490:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 491:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 492:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 493:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 494:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 495:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 496:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 497:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 498:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 499:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 500:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 501:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 502:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 503:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 504:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 505:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 506:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 507:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 508:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 509:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 510:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 511:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 512:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 513:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 514:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 515:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 516:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 517:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 518:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 519:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 520:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 521:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 522:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 523:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 524:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 525:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 526:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 527:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 528:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 529:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 530:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 531:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 532:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 533:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 534:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 535:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 536:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 537:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 538:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 539:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 540:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 541:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 542:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 543:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 544:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 545:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 546:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 547:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 548:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 549:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 550:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 551:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 552:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 553:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 554:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 555:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 556:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 557:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 558:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 559:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 560:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 561:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 562:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 563:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 564:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[1];
 565:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 566:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 567:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } SCnSCB_Type;
 568:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 569:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 570:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 571:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)      /*!< ICTR: I
 572:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 573:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 574:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 575:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 576:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 577:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 578:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 579:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 580:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 581:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 582:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 583:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 584:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 585:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 586:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 587:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)        /*!< ACTLR: 
 588:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 589:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 590:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 591:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 592:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 593:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 594:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 595:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 596:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 597:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 598:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 599:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 600:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 601:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 602:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 603:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 604:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 605:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 606:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } SysTick_Type;
 607:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 608:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 609:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 610:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 611:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 612:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 613:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 614:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 615:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 616:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 617:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 618:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 619:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 620:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 621:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SysTick Reload Register Definitions */
 622:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 623:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 624:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 625:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SysTick Current Register Definitions */
 626:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 627:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 628:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 629:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 630:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 631:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 632:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 633:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 634:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 635:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 636:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 637:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 638:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 639:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 640:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 641:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 642:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 643:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 644:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 645:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 646:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 647:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 648:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 649:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 650:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 651:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 652:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __O  union
 653:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   {
 654:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 655:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 656:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 657:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 658:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[864];
 659:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 660:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED1[15];
 661:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 662:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED2[15];
 663:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 664:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } ITM_Type;
 665:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 666:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 667:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                          /*!< ITM TPR
 668:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)             /*!< ITM TPR
 669:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 670:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 671:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                          /*!< ITM TCR
 672:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                   /*!< ITM TCR
 673:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 674:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                          /*!< ITM TCR
 675:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)          /*!< ITM TCR
 676:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 677:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                          /*!< ITM TCR
 678:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                /*!< ITM TCR
 679:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 680:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                          /*!< ITM TCR
 681:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)             /*!< ITM TCR
 682:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 683:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                          /*!< ITM TCR
 684:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                 /*!< ITM TCR
 685:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 686:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TXENA_Pos                   3                                          /*!< ITM TCR
 687:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TXENA_Msk                  (1UL << ITM_TCR_TXENA_Pos)                  /*!< ITM TCR
 688:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 689:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                          /*!< ITM TCR
 690:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                /*!< ITM TCR
 691:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 692:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                          /*!< ITM TCR
 693:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                  /*!< ITM TCR
 694:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 695:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                          /*!< ITM TCR
 696:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                 /*!< ITM TCR
 697:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 698:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 699:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 700:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 701:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 702:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 703:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 704:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 705:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 706:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 707:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 708:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 709:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 710:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 711:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 712:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 713:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 714:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 715:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 716:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 717:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 718:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 719:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 720:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 721:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 722:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[1];
 723:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 724:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 725:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 726:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED1[1];
 727:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 728:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 729:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 730:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED2[1];
 731:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 732:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 733:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 734:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } DWT_Type;
 735:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 736:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Control Register Definitions */
 737:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 738:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 739:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 740:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 741:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 742:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 743:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 744:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 745:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 746:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 747:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 748:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 749:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 750:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 751:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 752:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 753:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 754:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 755:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 756:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 757:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 758:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 759:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 760:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 761:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 762:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 763:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 764:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 765:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 766:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 767:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 768:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 769:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 770:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 771:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 772:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 773:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 774:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 775:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 776:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 777:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 778:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 779:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 780:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 781:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 782:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 783:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 784:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 785:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 786:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 787:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 788:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 789:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL << DWT_CTRL_CYCCNTENA_Pos)           /*!< DWT CTR
 790:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 791:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 792:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 793:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL << DWT_CPICNT_CPICNT_Pos)           /*!< DWT CPI
 794:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 795:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 796:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 797:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL << DWT_EXCCNT_EXCCNT_Pos)           /*!< DWT EXC
 798:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 799:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 800:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 801:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL << DWT_SLEEPCNT_SLEEPCNT_Pos)       /*!< DWT SLE
 802:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 803:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 804:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 805:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL << DWT_LSUCNT_LSUCNT_Pos)           /*!< DWT LSU
 806:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 807:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 808:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 809:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL << DWT_FOLDCNT_FOLDCNT_Pos)         /*!< DWT FOL
 810:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 811:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 812:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 813:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL << DWT_MASK_MASK_Pos)               /*!< DWT MAS
 814:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 815:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
 816:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 817:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 818:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 819:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 820:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 821:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 822:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 823:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 824:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 825:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 826:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 827:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 828:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 829:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 830:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 831:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 832:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 833:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 834:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 835:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 836:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 837:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 838:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 839:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 840:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 841:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL << DWT_FUNCTION_FUNCTION_Pos)        /*!< DWT FUN
 842:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 843:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 844:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 845:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 846:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 847:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 848:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 849:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 850:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 851:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 852:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 853:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 854:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 855:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 856:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 857:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 858:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[2];
 859:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 860:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED1[55];
 861:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 862:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED2[131];
 863:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 864:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 865:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 866:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED3[759];
 867:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 868:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
 869:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
 870:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED4[1];
 871:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
 872:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
 873:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
 874:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED5[39];
 875:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
 876:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
 877:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED7[8];
 878:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
 879:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
 880:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } TPI_Type;
 881:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 882:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
 883:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
 884:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL << TPI_ACPR_PRESCALER_Pos)        /*!< TPI ACP
 885:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 886:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
 887:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
 888:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL << TPI_SPPR_TXMODE_Pos)              /*!< TPI SPP
 889:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 890:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
 891:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
 892:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
 893:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 894:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
 895:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
 896:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 897:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
 898:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
 899:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 900:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
 901:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL << TPI_FFSR_FlInProg_Pos)            /*!< TPI FFS
 902:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 903:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
 904:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
 905:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
 906:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 907:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
 908:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
 909:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 910:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
 911:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
 912:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL << TPI_TRIGGER_TRIGGER_Pos)          /*!< TPI TRI
 913:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 914:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
 915:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 916:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
 917:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 918:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
 919:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
 920:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 921:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
 922:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
 923:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 924:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
 925:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
 926:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 927:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
 928:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
 929:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 930:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
 931:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
 932:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 933:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
 934:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL << TPI_FIFO0_ETM0_Pos)              /*!< TPI FIF
 935:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 936:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
 937:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
 938:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL << TPI_ITATBCTR2_ATREADY_Pos)        /*!< TPI ITA
 939:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 940:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
 941:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 942:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
 943:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 944:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
 945:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
 946:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 947:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
 948:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
 949:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 950:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
 951:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
 952:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 953:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
 954:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
 955:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 956:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
 957:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
 958:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 959:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
 960:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL << TPI_FIFO1_ITM0_Pos)              /*!< TPI FIF
 961:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 962:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
 963:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
 964:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL << TPI_ITATBCTR0_ATREADY_Pos)        /*!< TPI ITA
 965:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 966:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
 967:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
 968:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL << TPI_ITCTRL_Mode_Pos)              /*!< TPI ITC
 969:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 970:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI DEVID Register Definitions */
 971:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
 972:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
 973:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 974:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
 975:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
 976:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 977:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
 978:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
 979:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 980:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
 981:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
 982:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 983:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
 984:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
 985:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 986:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
 987:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL << TPI_DEVID_NrTraceInput_Pos)      /*!< TPI DEV
 988:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 989:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
 990:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
 991:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL << TPI_DEVTYPE_SubType_Pos)          /*!< TPI DEV
 992:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 993:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
 994:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
 995:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 996:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
 997:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 998:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 999:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__MPU_PRESENT == 1)
1000:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1001:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1002:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1003:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
1004:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1005:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1006:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1007:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1008:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
1009:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1010:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1011:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1012:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1013:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1014:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1015:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1016:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1017:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1018:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1019:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1020:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1021:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } MPU_Type;
1022:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1023:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* MPU Type Register */
1024:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1025:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1026:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1027:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1028:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1029:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1030:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1031:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
1032:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1033:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* MPU Control Register */
1034:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1035:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1036:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1037:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1038:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1039:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1040:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1041:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
1042:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1043:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* MPU Region Number Register */
1044:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1045:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
1046:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1047:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* MPU Region Base Address Register */
1048:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1049:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1050:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1051:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1052:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1053:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1054:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1055:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
1056:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1057:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* MPU Region Attribute and Size Register */
1058:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1059:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1060:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1061:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1062:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1063:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1064:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1065:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1066:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1067:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1068:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL << MPU_RASR_ENABLE_Pos)                   /*!< MPU 
1069:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1070:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1071:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
1072:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1073:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1074:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1075:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1076:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1077:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1078:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
1079:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1080:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1081:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1082:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1083:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
1084:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1085:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[1];
1086:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1087:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1088:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1089:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1090:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1091:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } FPU_Type;
1092:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1093:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Floating-Point Context Control Register */
1094:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1095:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1096:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1097:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1098:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1099:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1100:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1101:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1102:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1103:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1104:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1105:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1106:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1107:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1108:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1109:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1110:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1111:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1112:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1113:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1114:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1115:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1116:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1117:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1118:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1119:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL << FPU_FPCCR_LSPACT_Pos)                  /*!< FPCC
1120:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1121:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Floating-Point Context Address Register */
1122:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1123:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1124:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1125:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Floating-Point Default Status Control Register */
1126:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1127:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1128:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1129:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1130:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1131:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1132:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1133:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1134:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1135:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1136:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1137:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1138:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Media and FP Feature Register 0 */
1139:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1140:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1141:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1142:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1143:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1144:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1145:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1146:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1147:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1148:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1149:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1150:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1151:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1152:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1153:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1154:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1155:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1156:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1157:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1158:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1159:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1160:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1161:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL << FPU_MVFR0_A_SIMD_registers_Pos)      /*!< MVFR
1162:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1163:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Media and FP Feature Register 1 */
1164:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1165:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1166:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1167:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1168:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1169:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1170:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1171:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1172:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1173:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1174:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL << FPU_MVFR1_FtZ_mode_Pos)              /*!< MVFR
1175:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1176:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1177:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
1178:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1179:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1180:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1181:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1182:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1183:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
1184:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1185:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1186:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1187:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1188:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
1189:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1190:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1191:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1192:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1193:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1194:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } CoreDebug_Type;
1195:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1196:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Debug Halting Control and Status Register */
1197:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1198:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1199:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1200:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1201:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1202:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1203:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1204:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1205:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1206:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1207:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1208:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1209:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1210:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1211:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1212:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1213:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1214:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1215:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1216:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1217:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1218:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1219:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1220:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1221:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1222:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1223:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1224:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1225:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1226:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1227:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1228:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1229:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1230:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1231:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
1232:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1233:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Debug Core Register Selector Register */
1234:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1235:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1236:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1237:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1238:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
1239:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1240:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1241:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1242:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1243:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1244:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1245:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1246:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1247:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1248:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1249:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1250:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1251:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1252:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1253:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1254:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1255:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1256:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1257:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1258:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1259:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1260:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1261:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1262:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1263:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1264:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1265:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1266:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1267:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1268:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1269:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1270:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1271:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1272:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1273:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1274:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1275:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1276:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1277:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1278:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
1279:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1280:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1281:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1282:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1283:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup    CMSIS_core_register
1284:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1285:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1286:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
1287:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1288:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1289:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1290:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1291:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1292:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1293:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1294:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1295:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1296:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1297:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1298:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1299:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1300:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1301:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1302:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1303:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1304:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1305:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1306:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1307:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1308:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__MPU_PRESENT == 1)
1309:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1310:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1311:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
1312:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1313:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1314:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1315:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1316:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
1317:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1318:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} */
1319:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1320:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1321:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1322:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*******************************************************************************
1323:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *                Hardware Abstraction Layer
1324:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   Core Function Interface contains:
1325:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core NVIC Functions
1326:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core SysTick Functions
1327:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core Debug Functions
1328:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core Register Access Functions
1329:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  ******************************************************************************/
1330:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1331:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** */
1332:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1333:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1334:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1335:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1336:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1337:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1338:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1339:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     @{
1340:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1341:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1342:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Set Priority Grouping
1343:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1344:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1345:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1346:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   Only values from 0..7 are used.
1347:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   In case of a conflict between priority grouping and available
1348:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1349:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1350:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1351:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1352:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1353:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1354:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t reg_value;
1355:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 a
1356:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1357:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1358:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1359:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   reg_value  =  (reg_value                                 |
1360:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****                 ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1361:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1362:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1363:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
1364:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1365:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1366:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Get Priority Grouping
1367:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1368:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1369:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1370:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1371:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1372:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1373:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1374:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1375:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
1376:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1377:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1378:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Enable External Interrupt
1379:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1380:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1381:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1382:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1383:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1384:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1385:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
  24              	 .loc 1 1385 0
  25              	 .cfi_startproc
  26              	 
  27              	 
  28              	 
  29 0000 80B4     	 push {r7}
  30              	.LCFI0:
  31              	 .cfi_def_cfa_offset 4
  32              	 .cfi_offset 7,-4
  33 0002 83B0     	 sub sp,sp,#12
  34              	.LCFI1:
  35              	 .cfi_def_cfa_offset 16
  36 0004 00AF     	 add r7,sp,#0
  37              	.LCFI2:
  38              	 .cfi_def_cfa_register 7
  39 0006 0346     	 mov r3,r0
  40 0008 FB71     	 strb r3,[r7,#7]
1386:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
1387:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32
  41              	 .loc 1 1387 0
  42 000a 0849     	 ldr r1,.L2
  43 000c 97F90730 	 ldrsb r3,[r7,#7]
  44 0010 5B09     	 lsrs r3,r3,#5
  45 0012 FA79     	 ldrb r2,[r7,#7]
  46 0014 02F01F02 	 and r2,r2,#31
  47 0018 0120     	 movs r0,#1
  48 001a 00FA02F2 	 lsl r2,r0,r2
  49 001e 41F82320 	 str r2,[r1,r3,lsl#2]
1388:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
  50              	 .loc 1 1388 0
  51 0022 00BF     	 nop
  52 0024 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0026 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 0028 80BC     	 pop {r7}
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 002a 7047     	 bx lr
  64              	.L3:
  65              	 .align 2
  66              	.L2:
  67 002c 00E100E0 	 .word -536813312
  68              	 .cfi_endproc
  69              	.LFE96:
  71              	 .align 1
  72              	 .syntax unified
  73              	 .thumb
  74              	 .thumb_func
  75              	 .fpu softvfp
  77              	NVIC_ClearPendingIRQ:
  78              	.LFB100:
1389:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1390:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1391:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Disable External Interrupt
1392:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1393:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1394:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1395:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1396:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1397:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1398:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1399:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1400:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
1401:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1402:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1403:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Get Pending Interrupt
1404:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1405:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1406:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     for the specified interrupt.
1407:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1408:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1409:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     
1410:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \return             0  Interrupt status is not pending.
1411:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \return             1  Interrupt status is pending.
1412:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1413:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1414:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1415:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1416:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
1417:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1418:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1419:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Set Pending Interrupt
1420:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1421:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     The function sets the pending bit of an external interrupt.
1422:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1423:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1424:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1425:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1426:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1427:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1428:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
1429:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1430:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1431:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Clear Pending Interrupt
1432:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1433:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     The function clears the pending bit of an external interrupt.
1434:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1435:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1436:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1437:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1438:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
  79              	 .loc 1 1438 0
  80              	 .cfi_startproc
  81              	 
  82              	 
  83              	 
  84 0030 80B4     	 push {r7}
  85              	.LCFI6:
  86              	 .cfi_def_cfa_offset 4
  87              	 .cfi_offset 7,-4
  88 0032 83B0     	 sub sp,sp,#12
  89              	.LCFI7:
  90              	 .cfi_def_cfa_offset 16
  91 0034 00AF     	 add r7,sp,#0
  92              	.LCFI8:
  93              	 .cfi_def_cfa_register 7
  94 0036 0346     	 mov r3,r0
  95 0038 FB71     	 strb r3,[r7,#7]
1439:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
  96              	 .loc 1 1439 0
  97 003a 0949     	 ldr r1,.L5
  98 003c 97F90730 	 ldrsb r3,[r7,#7]
  99 0040 5B09     	 lsrs r3,r3,#5
 100 0042 FA79     	 ldrb r2,[r7,#7]
 101 0044 02F01F02 	 and r2,r2,#31
 102 0048 0120     	 movs r0,#1
 103 004a 00FA02F2 	 lsl r2,r0,r2
 104 004e 6033     	 adds r3,r3,#96
 105 0050 41F82320 	 str r2,[r1,r3,lsl#2]
1440:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
 106              	 .loc 1 1440 0
 107 0054 00BF     	 nop
 108 0056 0C37     	 adds r7,r7,#12
 109              	.LCFI9:
 110              	 .cfi_def_cfa_offset 4
 111 0058 BD46     	 mov sp,r7
 112              	.LCFI10:
 113              	 .cfi_def_cfa_register 13
 114              	 
 115 005a 80BC     	 pop {r7}
 116              	.LCFI11:
 117              	 .cfi_restore 7
 118              	 .cfi_def_cfa_offset 0
 119 005c 7047     	 bx lr
 120              	.L6:
 121 005e 00BF     	 .align 2
 122              	.L5:
 123 0060 00E100E0 	 .word -536813312
 124              	 .cfi_endproc
 125              	.LFE100:
 127              	 .align 1
 128              	 .syntax unified
 129              	 .thumb
 130              	 .thumb_func
 131              	 .fpu softvfp
 133              	NVIC_SetPriority:
 134              	.LFB102:
1441:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1442:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1443:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Get Active Interrupt
1444:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1445:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     The function reads the active register in NVIC and returns the active bit.
1446:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     
1447:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1448:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     
1449:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \return             0  Interrupt status is not active.
1450:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \return             1  Interrupt status is active.
1451:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1452:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1453:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1454:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1455:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
1456:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1457:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1458:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Set Interrupt Priority
1459:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1460:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     The function sets the priority of an interrupt. 
1461:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1462:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \note The priority cannot be set for every core interrupt.
1463:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1464:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      IRQn  Interrupt number. 
1465:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]  priority  Priority to set.
1466:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1467:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1468:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 135              	 .loc 1 1468 0
 136              	 .cfi_startproc
 137              	 
 138              	 
 139              	 
 140 0064 80B4     	 push {r7}
 141              	.LCFI12:
 142              	 .cfi_def_cfa_offset 4
 143              	 .cfi_offset 7,-4
 144 0066 83B0     	 sub sp,sp,#12
 145              	.LCFI13:
 146              	 .cfi_def_cfa_offset 16
 147 0068 00AF     	 add r7,sp,#0
 148              	.LCFI14:
 149              	 .cfi_def_cfa_register 7
 150 006a 0346     	 mov r3,r0
 151 006c 3960     	 str r1,[r7]
 152 006e FB71     	 strb r3,[r7,#7]
1469:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   if(IRQn < 0) {
 153              	 .loc 1 1469 0
 154 0070 97F90730 	 ldrsb r3,[r7,#7]
 155 0074 002B     	 cmp r3,#0
 156 0076 0BDA     	 bge .L8
1470:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
 157              	 .loc 1 1470 0
 158 0078 0D49     	 ldr r1,.L11
 159 007a FB79     	 ldrb r3,[r7,#7]
 160 007c 03F00F03 	 and r3,r3,#15
 161 0080 043B     	 subs r3,r3,#4
 162 0082 3A68     	 ldr r2,[r7]
 163 0084 D2B2     	 uxtb r2,r2
 164 0086 1201     	 lsls r2,r2,#4
 165 0088 D2B2     	 uxtb r2,r2
 166 008a 0B44     	 add r3,r3,r1
 167 008c 1A76     	 strb r2,[r3,#24]
1471:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   else {
1472:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
1473:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
 168              	 .loc 1 1473 0
 169 008e 09E0     	 b .L10
 170              	.L8:
1472:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
 171              	 .loc 1 1472 0
 172 0090 0849     	 ldr r1,.L11+4
 173 0092 97F90730 	 ldrsb r3,[r7,#7]
 174 0096 3A68     	 ldr r2,[r7]
 175 0098 D2B2     	 uxtb r2,r2
 176 009a 1201     	 lsls r2,r2,#4
 177 009c D2B2     	 uxtb r2,r2
 178 009e 0B44     	 add r3,r3,r1
 179 00a0 83F80023 	 strb r2,[r3,#768]
 180              	.L10:
 181              	 .loc 1 1473 0
 182 00a4 00BF     	 nop
 183 00a6 0C37     	 adds r7,r7,#12
 184              	.LCFI15:
 185              	 .cfi_def_cfa_offset 4
 186 00a8 BD46     	 mov sp,r7
 187              	.LCFI16:
 188              	 .cfi_def_cfa_register 13
 189              	 
 190 00aa 80BC     	 pop {r7}
 191              	.LCFI17:
 192              	 .cfi_restore 7
 193              	 .cfi_def_cfa_offset 0
 194 00ac 7047     	 bx lr
 195              	.L12:
 196 00ae 00BF     	 .align 2
 197              	.L11:
 198 00b0 00ED00E0 	 .word -536810240
 199 00b4 00E100E0 	 .word -536813312
 200              	 .cfi_endproc
 201              	.LFE102:
 203              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
 204              	 .align 2
 207              	cpu_irq_critical_section_counter:
 208 0000 00000000 	 .space 4
 209              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
 212              	cpu_irq_prev_interrupt_state:
 213 0000 00       	 .space 1
 214              	 .text
 215              	 .align 1
 216              	 .syntax unified
 217              	 .thumb
 218              	 .thumb_func
 219              	 .fpu softvfp
 221              	cpu_irq_save:
 222              	.LFB112:
 223              	 .file 2 "../../../platform/common/utils/interrupt/interrupt_sam_nvic.h"
   1:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
   2:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \file
   3:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
   4:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \brief Global interrupt management for SAM D20, SAM3 and SAM4 (NVIC based)
   5:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
   6:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * Copyright (c) 2012-2013 Atmel Corporation. All rights reserved.
   7:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
   8:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \asf_license_start
   9:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  10:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \page License
  11:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  12:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  15:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  18:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  22:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  25:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  28:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  40:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \asf_license_stop
  41:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  42:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  43:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  44:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #ifndef UTILS_INTERRUPT_INTERRUPT_H
  45:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #define UTILS_INTERRUPT_INTERRUPT_H
  46:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  47:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #include <compiler.h>
  48:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #include <parts.h>
  49:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  50:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  51:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \weakgroup interrupt_group
  52:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  53:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * @{
  54:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  55:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  56:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  57:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \name Interrupt Service Routine definition
  58:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  59:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * @{
  60:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  61:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  62:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  63:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \brief Define service routine
  64:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  65:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \note For NVIC devices the interrupt service routines are predefined to
  66:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *       add to vector table in binary generation, so there is no service
  67:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *       register at run time. The routine collections are in exceptions.h.
  68:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  69:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * Usage:
  70:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \code
  71:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * ISR(foo_irq_handler)
  72:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * {
  73:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *      // Function definition
  74:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *      ...
  75:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * }
  76:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \endcode
  77:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  78:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \param func Name for the function.
  79:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  80:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define ISR(func)   \
  81:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	void func (void)
  82:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  83:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  84:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \brief Initialize interrupt vectors
  85:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  86:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * For NVIC the interrupt vectors are put in vector table. So nothing
  87:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * to do to initialize them, except defined the vector function with
  88:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * right name.
  89:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  90:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * This must be called prior to \ref irq_register_handler.
  91:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  92:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define irq_initialize_vectors()   \
  93:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	do {                             \
  94:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	} while(0)
  95:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  96:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  97:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \brief Register handler for interrupt
  98:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  99:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * For NVIC the interrupt vectors are put in vector table. So nothing
 100:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * to do to register them, except defined the vector function with
 101:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * right name.
 102:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
 103:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * Usage:
 104:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \code
 105:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * irq_initialize_vectors();
 106:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * irq_register_handler(foo_irq_handler);
 107:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \endcode
 108:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
 109:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \note The function \a func must be defined with the \ref ISR macro.
 110:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \note The functions prototypes can be found in the device exception header
 111:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *       files (exceptions.h).
 112:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
 113:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define irq_register_handler(int_num, int_prio)                      \
 114:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	NVIC_ClearPendingIRQ(    (IRQn_Type)int_num);                      \
 115:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	NVIC_SetPriority(    (IRQn_Type)int_num, int_prio);                \
 116:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	NVIC_EnableIRQ(      (IRQn_Type)int_num);                          \
 117:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 118:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** //@}
 119:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 120:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define cpu_irq_enable()                     \
 121:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	do {                                       \
 122:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		g_interrupt_enabled = true;            \
 123:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		__DMB();                               \
 124:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		__enable_irq();                        \
 125:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	} while (0)
 126:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define cpu_irq_disable()                    \
 127:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	do {                                       \
 128:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		__disable_irq();                       \
 129:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		__DMB();                               \
 130:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		g_interrupt_enabled = false;           \
 131:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	} while (0)
 132:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 133:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** typedef uint32_t irqflags_t;
 134:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 135:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #if !defined(__DOXYGEN__)
 136:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** extern volatile bool g_interrupt_enabled;
 137:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #endif
 138:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 139:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #define cpu_irq_is_enabled()    (__get_PRIMASK() == 0)
 140:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 141:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static volatile uint32_t cpu_irq_critical_section_counter;
 142:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static volatile bool     cpu_irq_prev_interrupt_state;
 143:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 144:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static inline irqflags_t cpu_irq_save(void)
 145:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** {
 224              	 .loc 2 145 0
 225              	 .cfi_startproc
 226              	 
 227              	 
 228              	 
 229 00b8 80B4     	 push {r7}
 230              	.LCFI18:
 231              	 .cfi_def_cfa_offset 4
 232              	 .cfi_offset 7,-4
 233 00ba 83B0     	 sub sp,sp,#12
 234              	.LCFI19:
 235              	 .cfi_def_cfa_offset 16
 236 00bc 00AF     	 add r7,sp,#0
 237              	.LCFI20:
 238              	 .cfi_def_cfa_register 7
 239              	.LBB12:
 240              	.LBB13:
 241              	 .file 3 "../../../platform/thirdparty/CMSIS/include/core_cmFunc.h"
   1:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /**************************************************************************//**
   2:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @file     core_cmFunc.h
   3:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @brief    CMSIS Cortex-M Core Function Access Header File
   4:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @version  V3.00
   5:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @date     19. January 2012
   6:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
   7:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @note
   8:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  10:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @par
  11:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * within development tools that are supporting such ARM based processors. 
  14:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  15:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @par
  16:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  22:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  ******************************************************************************/
  23:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  24:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #ifndef __CORE_CMFUNC_H
  25:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __CORE_CMFUNC_H
  26:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  27:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* ###########################  Core Function Access  ########################### */
  28:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \ingroup  CMSIS_Core_FunctionInterface   
  29:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  30:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   @{
  31:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  32:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  33:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  34:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* ARM armcc specific functions */
  35:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  36:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__ARMCC_VERSION < 400677)
  37:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  38:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
  39:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  40:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* intrinsic void __enable_irq();     */
  41:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* intrinsic void __disable_irq();    */
  42:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  43:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Control Register
  44:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  45:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the Control Register.
  46:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  47:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Control Register value
  48:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  49:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_CONTROL(void)
  50:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  51:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  52:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regControl);
  53:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  54:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  55:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  56:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Control Register
  57:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  58:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function writes the given value to the Control Register.
  59:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  60:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    control  Control Register value to set
  61:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  62:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_CONTROL(uint32_t control)
  63:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  64:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  65:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regControl = control;
  66:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  67:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  68:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  69:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get IPSR Register
  70:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  71:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the IPSR Register.
  72:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  73:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               IPSR Register value
  74:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  75:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_IPSR(void)
  76:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  77:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regIPSR          __ASM("ipsr");
  78:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regIPSR);
  79:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  80:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  81:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  82:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get APSR Register
  83:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  84:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the APSR Register.
  85:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  86:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               APSR Register value
  87:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  88:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_APSR(void)
  89:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  90:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regAPSR          __ASM("apsr");
  91:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regAPSR);
  92:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  93:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  94:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  95:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get xPSR Register
  96:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  97:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the xPSR Register.
  98:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  99:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               xPSR Register value
 100:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 101:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_xPSR(void)
 102:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 103:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regXPSR          __ASM("xpsr");
 104:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regXPSR);
 105:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 106:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 107:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 108:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 109:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 110:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 111:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 112:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               PSP Register value
 113:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 114:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PSP(void)
 115:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 116:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 117:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regProcessStackPointer);
 118:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 119:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 120:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 121:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 122:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 123:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 124:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 125:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 126:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 127:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 128:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 129:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 130:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regProcessStackPointer = topOfProcStack;
 131:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 132:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 133:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 134:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 135:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 136:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 137:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 138:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               MSP Register value
 139:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 140:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_MSP(void)
 141:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 142:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 143:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regMainStackPointer);
 144:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 145:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 146:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 147:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 148:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 149:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 150:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 151:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 152:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 153:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 154:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 155:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 156:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regMainStackPointer = topOfMainStack;
 157:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 158:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 159:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 160:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Priority Mask
 161:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 162:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current state of the priority mask bit from the Priority Mask Registe
 163:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 164:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Priority Mask value
 165:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 166:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PRIMASK(void)
 167:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 168:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 169:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regPriMask);
 170:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 171:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 172:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 173:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Priority Mask
 174:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 175:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Priority Mask Register.
 176:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 177:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    priMask  Priority Mask
 178:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 179:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 180:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 181:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 182:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regPriMask = (priMask);
 183:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 184:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 185:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 186:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if       (__CORTEX_M >= 0x03)
 187:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 188:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Enable FIQ
 189:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 190:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function enables FIQ interrupts by clearing the F-bit in the CPSR.
 191:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     Can only be executed in Privileged modes.
 192:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 193:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __enable_fault_irq                __enable_fiq
 194:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 195:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 196:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Disable FIQ
 197:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 198:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function disables FIQ interrupts by setting the F-bit in the CPSR.
 199:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     Can only be executed in Privileged modes.
 200:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 201:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __disable_fault_irq               __disable_fiq
 202:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 203:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 204:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Base Priority
 205:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 206:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Base Priority register.
 207:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 208:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Base Priority register value
 209:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 210:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t  __get_BASEPRI(void)
 211:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 212:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 213:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regBasePri);
 214:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 215:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 216:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 217:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Base Priority
 218:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 219:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Base Priority register.
 220:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 221:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    basePri  Base Priority value to set
 222:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 223:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 224:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 225:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 226:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regBasePri = (basePri & 0xff);
 227:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 228:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 229:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 230:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Fault Mask
 231:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 232:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Fault Mask register.
 233:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 234:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Fault Mask register value
 235:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 236:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 237:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 238:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 239:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regFaultMask);
 240:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 241:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 242:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 243:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Fault Mask
 244:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 245:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Fault Mask register.
 246:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 247:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    faultMask  Fault Mask value to set
 248:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 249:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 250:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 251:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 252:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regFaultMask = (faultMask & (uint32_t)1);
 253:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 254:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 255:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif /* (__CORTEX_M >= 0x03) */
 256:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 257:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 258:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if       (__CORTEX_M == 0x04)
 259:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 260:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get FPSCR
 261:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 262:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Floating Point Status/Control register.
 263:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 264:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Floating Point Status/Control register value
 265:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 266:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FPSCR(void)
 267:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 268:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 269:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 270:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regfpscr);
 271:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #else
 272:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****    return(0);
 273:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
 274:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 275:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 276:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 277:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set FPSCR
 278:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 279:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Floating Point Status/Control register.
 280:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 281:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    fpscr  Floating Point Status/Control value to set
 282:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 283:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 284:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 285:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 286:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 287:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regfpscr = (fpscr);
 288:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
 289:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 290:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 291:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif /* (__CORTEX_M == 0x04) */
 292:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 293:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 294:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 295:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* IAR iccarm specific functions */
 296:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 297:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #include <cmsis_iar.h>
 298:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 299:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 300:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 301:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* TI CCS specific functions */
 302:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 303:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #include <cmsis_ccs.h>
 304:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 305:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 306:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 307:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* GNU gcc specific functions */
 308:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 309:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Enable IRQ Interrupts
 310:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 311:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   This function enables IRQ interrupts by clearing the I-bit in the CPSR.
 312:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   Can only be executed in Privileged modes.
 313:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 314:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
 315:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 316:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("cpsie i");
 317:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 318:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 319:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 320:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Disable IRQ Interrupts
 321:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 322:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   This function disables IRQ interrupts by setting the I-bit in the CPSR.
 323:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   Can only be executed in Privileged modes.
 324:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 325:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
 326:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 327:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("cpsid i");
 328:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 329:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 330:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 331:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Control Register
 332:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 333:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the Control Register.
 334:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 335:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Control Register value
 336:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 337:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
 338:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 339:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 340:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 341:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 342:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 343:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 344:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 345:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 346:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Control Register
 347:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 348:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function writes the given value to the Control Register.
 349:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 350:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    control  Control Register value to set
 351:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 352:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 353:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 354:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) );
 355:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 356:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 357:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 358:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get IPSR Register
 359:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 360:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the IPSR Register.
 361:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 362:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               IPSR Register value
 363:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 364:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 365:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 366:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 367:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 368:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 369:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 370:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 371:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 372:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 373:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get APSR Register
 374:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 375:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the APSR Register.
 376:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 377:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               APSR Register value
 378:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 379:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 380:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 381:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 382:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 383:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 384:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 385:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 386:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 387:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 388:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get xPSR Register
 389:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 390:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the xPSR Register.
 391:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 392:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               xPSR Register value
 393:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 394:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 395:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 396:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 397:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 398:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 399:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 400:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 401:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 402:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 403:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 404:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 405:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 406:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 407:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               PSP Register value
 408:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 409:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 410:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 411:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t result;
 412:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 413:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 414:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 415:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 416:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 417:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 418:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 419:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 420:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 421:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 422:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 423:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 424:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 425:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 426:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) );
 427:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 428:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 429:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 430:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 431:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 432:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 433:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 434:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               MSP Register value
 435:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 436:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 437:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 438:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t result;
 439:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 440:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 441:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 442:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 443:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 444:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 445:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 446:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 447:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 448:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 449:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 450:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 451:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 452:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 453:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) );
 454:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 455:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 456:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 457:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Priority Mask
 458:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 459:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current state of the priority mask bit from the Priority Mask Registe
 460:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 461:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Priority Mask value
 462:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 463:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 464:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 465:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 466:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 467:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 242              	 .loc 3 467 0
 243              	 .syntax unified
 244              	
 245 00be EFF31083 	 MRS r3,primask
 246              	
 247              	 .thumb
 248              	 .syntax unified
 249 00c2 3B60     	 str r3,[r7]
 468:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 250              	 .loc 3 468 0
 251 00c4 3B68     	 ldr r3,[r7]
 252              	.LBE13:
 253              	.LBE12:
 146:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	irqflags_t flags = cpu_irq_is_enabled();
 254              	 .loc 2 146 0
 255 00c6 002B     	 cmp r3,#0
 256 00c8 0CBF     	 ite eq
 257 00ca 0123     	 moveq r3,#1
 258 00cc 0023     	 movne r3,#0
 259 00ce DBB2     	 uxtb r3,r3
 260 00d0 7B60     	 str r3,[r7,#4]
 261              	.LBB14:
 262              	.LBB15:
 327:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 263              	 .loc 3 327 0
 264              	 .syntax unified
 265              	
 266 00d2 72B6     	 cpsid i
 267              	
 268              	 .thumb
 269              	 .syntax unified
 270              	.LBE15:
 271              	.LBE14:
 272              	.LBB16:
 273              	.LBB17:
 274              	 .file 4 "../../../platform/thirdparty/CMSIS/include/core_cmInstr.h"
   1:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /**************************************************************************//**
   2:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @version  V3.00
   5:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @date     07. February 2012
   6:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
   7:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @note
   8:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  10:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @par
  11:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * within development tools that are supporting such ARM based processors.
  14:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  15:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @par
  16:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  22:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  ******************************************************************************/
  23:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  24:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  27:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  28:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   Access to dedicated instructions
  31:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   @{
  32:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** */
  33:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  34:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* ARM armcc specific functions */
  36:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  37:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #endif
  40:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  41:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  42:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  No Operation
  43:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  44:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  46:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __NOP                             __nop
  47:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  48:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  49:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  51:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     until one of a number of events occurs.
  53:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  54:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __WFI                             __wfi
  55:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  56:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  57:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Event
  58:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  59:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  62:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __WFE                             __wfe
  63:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  64:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  65:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Send Event
  66:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  67:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  69:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __SEV                             __sev
  70:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  71:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  72:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  74:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  75:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  76:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     memory, after the instruction has been completed.
  77:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  78:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  80:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  81:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  83:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
  84:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  86:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  88:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  89:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  91:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
  92:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  94:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  96:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  97:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  99:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 101:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 103:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 104:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __REV                             __rev
 105:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 106:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 107:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 109:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 111:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 113:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 114:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 115:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 116:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   rev16 r0, r0
 117:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   bx lr
 118:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 119:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 120:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 121:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 123:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 125:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 127:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 128:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 129:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 130:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   revsh r0, r0
 131:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   bx lr
 132:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 133:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 134:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 135:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 136:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 137:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 138:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 139:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 140:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 141:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Rotated value
 142:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 143:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __ROR                             __ror
 144:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 145:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 146:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 147:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 148:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 149:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 150:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 151:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 152:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 153:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 154:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 155:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __RBIT                            __rbit
 156:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 157:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 158:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 159:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 160:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 161:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 162:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 163:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 164:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 165:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 166:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 167:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 168:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 169:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 170:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 171:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 172:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 173:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 174:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 175:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 176:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 177:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 178:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 179:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 180:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 181:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 182:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 183:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 184:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 185:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 186:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 187:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 188:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 189:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 190:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 191:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 192:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 193:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 194:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 195:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 196:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 197:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 198:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 199:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 200:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 201:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 202:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 203:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 204:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 205:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 206:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 207:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 208:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 209:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 210:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 211:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 212:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 213:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 214:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 215:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 216:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 217:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 218:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 219:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 220:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 221:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 222:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 223:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 224:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 225:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 226:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 227:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 228:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 229:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CLREX                           __clrex
 230:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 231:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 232:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Signed Saturate
 233:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 234:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function saturates a signed value.
 235:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 236:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 238:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             Saturated value
 239:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 240:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __SSAT                            __ssat
 241:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 242:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 243:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 244:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 245:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function saturates an unsigned value.
 246:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 247:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 248:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 249:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             Saturated value
 250:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 251:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __USAT                            __usat
 252:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 253:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 254:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Count leading zeros
 255:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 256:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 257:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 258:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 259:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             number of leading zeros in value
 260:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 261:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CLZ                             __clz
 262:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 263:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 264:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 265:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 266:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 267:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 268:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* IAR iccarm specific functions */
 269:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 270:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #include <cmsis_iar.h>
 271:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 272:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 273:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 274:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* TI CCS specific functions */
 275:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 276:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #include <cmsis_ccs.h>
 277:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 278:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 279:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 280:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* GNU gcc specific functions */
 281:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 282:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  No Operation
 283:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 284:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 285:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 286:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
 287:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 288:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("nop");
 289:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 290:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 291:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 292:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 293:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 294:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 295:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     until one of a number of events occurs.
 296:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 297:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFI(void)
 298:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 299:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("wfi");
 300:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 301:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 302:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 303:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Event
 304:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 305:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 306:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 307:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 308:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFE(void)
 309:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 310:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("wfe");
 311:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 312:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 313:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 314:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Send Event
 315:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 316:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 317:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 318:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __SEV(void)
 319:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 320:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("sev");
 321:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 322:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 323:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 324:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 325:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 326:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 327:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 328:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     memory, after the instruction has been completed.
 329:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 330:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __ISB(void)
 331:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 332:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("isb");
 333:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 334:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 335:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 336:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 337:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 338:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 339:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 340:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 341:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
 342:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 343:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("dsb");
 344:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 345:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 346:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 347:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 348:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 349:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 350:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 351:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 352:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
 353:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 354:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("dmb");
 275              	 .loc 4 354 0
 276              	 .syntax unified
 277              	
 278 00d4 BFF35F8F 	 dmb
 279              	
 280              	 .thumb
 281              	 .syntax unified
 282              	.LBE17:
 283              	.LBE16:
 147:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	cpu_irq_disable();
 284              	 .loc 2 147 0
 285 00d8 044B     	 ldr r3,.L16
 286 00da 0022     	 movs r2,#0
 287 00dc 1A70     	 strb r2,[r3]
 148:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	return flags;
 288              	 .loc 2 148 0
 289 00de 7B68     	 ldr r3,[r7,#4]
 149:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** }
 290              	 .loc 2 149 0
 291 00e0 1846     	 mov r0,r3
 292 00e2 0C37     	 adds r7,r7,#12
 293              	.LCFI21:
 294              	 .cfi_def_cfa_offset 4
 295 00e4 BD46     	 mov sp,r7
 296              	.LCFI22:
 297              	 .cfi_def_cfa_register 13
 298              	 
 299 00e6 80BC     	 pop {r7}
 300              	.LCFI23:
 301              	 .cfi_restore 7
 302              	 .cfi_def_cfa_offset 0
 303 00e8 7047     	 bx lr
 304              	.L17:
 305 00ea 00BF     	 .align 2
 306              	.L16:
 307 00ec 00000000 	 .word g_interrupt_enabled
 308              	 .cfi_endproc
 309              	.LFE112:
 311              	 .align 1
 312              	 .syntax unified
 313              	 .thumb
 314              	 .thumb_func
 315              	 .fpu softvfp
 317              	cpu_irq_is_enabled_flags:
 318              	.LFB113:
 150:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 151:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static inline bool cpu_irq_is_enabled_flags(irqflags_t flags)
 152:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** {
 319              	 .loc 2 152 0
 320              	 .cfi_startproc
 321              	 
 322              	 
 323              	 
 324 00f0 80B4     	 push {r7}
 325              	.LCFI24:
 326              	 .cfi_def_cfa_offset 4
 327              	 .cfi_offset 7,-4
 328 00f2 83B0     	 sub sp,sp,#12
 329              	.LCFI25:
 330              	 .cfi_def_cfa_offset 16
 331 00f4 00AF     	 add r7,sp,#0
 332              	.LCFI26:
 333              	 .cfi_def_cfa_register 7
 334 00f6 7860     	 str r0,[r7,#4]
 153:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	return (flags);
 335              	 .loc 2 153 0
 336 00f8 7B68     	 ldr r3,[r7,#4]
 337 00fa 002B     	 cmp r3,#0
 338 00fc 14BF     	 ite ne
 339 00fe 0123     	 movne r3,#1
 340 0100 0023     	 moveq r3,#0
 341 0102 DBB2     	 uxtb r3,r3
 154:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** }
 342              	 .loc 2 154 0
 343 0104 1846     	 mov r0,r3
 344 0106 0C37     	 adds r7,r7,#12
 345              	.LCFI27:
 346              	 .cfi_def_cfa_offset 4
 347 0108 BD46     	 mov sp,r7
 348              	.LCFI28:
 349              	 .cfi_def_cfa_register 13
 350              	 
 351 010a 80BC     	 pop {r7}
 352              	.LCFI29:
 353              	 .cfi_restore 7
 354              	 .cfi_def_cfa_offset 0
 355 010c 7047     	 bx lr
 356              	 .cfi_endproc
 357              	.LFE113:
 359              	 .align 1
 360              	 .syntax unified
 361              	 .thumb
 362              	 .thumb_func
 363              	 .fpu softvfp
 365              	cpu_irq_restore:
 366              	.LFB114:
 155:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 156:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static inline void cpu_irq_restore(irqflags_t flags)
 157:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** {
 367              	 .loc 2 157 0
 368              	 .cfi_startproc
 369              	 
 370              	 
 371 010e 80B5     	 push {r7,lr}
 372              	.LCFI30:
 373              	 .cfi_def_cfa_offset 8
 374              	 .cfi_offset 7,-8
 375              	 .cfi_offset 14,-4
 376 0110 82B0     	 sub sp,sp,#8
 377              	.LCFI31:
 378              	 .cfi_def_cfa_offset 16
 379 0112 00AF     	 add r7,sp,#0
 380              	.LCFI32:
 381              	 .cfi_def_cfa_register 7
 382 0114 7860     	 str r0,[r7,#4]
 158:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	if (cpu_irq_is_enabled_flags(flags))
 383              	 .loc 2 158 0
 384 0116 7868     	 ldr r0,[r7,#4]
 385 0118 FFF7EAFF 	 bl cpu_irq_is_enabled_flags
 386 011c 0346     	 mov r3,r0
 387 011e 002B     	 cmp r3,#0
 388 0120 05D0     	 beq .L22
 159:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		cpu_irq_enable();
 389              	 .loc 2 159 0
 390 0122 054B     	 ldr r3,.L23
 391 0124 0122     	 movs r2,#1
 392 0126 1A70     	 strb r2,[r3]
 393              	.LBB18:
 394              	.LBB19:
 395              	 .loc 4 354 0
 396              	 .syntax unified
 397              	
 398 0128 BFF35F8F 	 dmb
 399              	
 400              	 .thumb
 401              	 .syntax unified
 402              	.LBE19:
 403              	.LBE18:
 404              	.LBB20:
 405              	.LBB21:
 316:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 406              	 .loc 3 316 0
 407              	 .syntax unified
 408              	
 409 012c 62B6     	 cpsie i
 410              	
 411              	 .thumb
 412              	 .syntax unified
 413              	.L22:
 414              	.LBE21:
 415              	.LBE20:
 160:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** }
 416              	 .loc 2 160 0
 417 012e 00BF     	 nop
 418 0130 0837     	 adds r7,r7,#8
 419              	.LCFI33:
 420              	 .cfi_def_cfa_offset 8
 421 0132 BD46     	 mov sp,r7
 422              	.LCFI34:
 423              	 .cfi_def_cfa_register 13
 424              	 
 425 0134 80BD     	 pop {r7,pc}
 426              	.L24:
 427 0136 00BF     	 .align 2
 428              	.L23:
 429 0138 00000000 	 .word g_interrupt_enabled
 430              	 .cfi_endproc
 431              	.LFE114:
 433              	 .align 1
 434              	 .syntax unified
 435              	 .thumb
 436              	 .thumb_func
 437              	 .fpu softvfp
 439              	ast_is_clkbusy:
 440              	.LFB123:
 441              	 .file 5 "../../../platform/sam/drivers/ast/ast.h"
   1:../../../platform/sam/drivers/ast/ast.h **** /**
   2:../../../platform/sam/drivers/ast/ast.h ****  * \file
   3:../../../platform/sam/drivers/ast/ast.h ****  *
   4:../../../platform/sam/drivers/ast/ast.h ****  * \brief SAM Asynchronous Timer (AST) driver.
   5:../../../platform/sam/drivers/ast/ast.h ****  *
   6:../../../platform/sam/drivers/ast/ast.h ****  * Copyright (C) 2012-2014 Atmel Corporation. All rights reserved.
   7:../../../platform/sam/drivers/ast/ast.h ****  *
   8:../../../platform/sam/drivers/ast/ast.h ****  * \asf_license_start
   9:../../../platform/sam/drivers/ast/ast.h ****  *
  10:../../../platform/sam/drivers/ast/ast.h ****  * \page License
  11:../../../platform/sam/drivers/ast/ast.h ****  *
  12:../../../platform/sam/drivers/ast/ast.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/sam/drivers/ast/ast.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/sam/drivers/ast/ast.h ****  *
  15:../../../platform/sam/drivers/ast/ast.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/sam/drivers/ast/ast.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/sam/drivers/ast/ast.h ****  *
  18:../../../platform/sam/drivers/ast/ast.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/sam/drivers/ast/ast.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/sam/drivers/ast/ast.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/sam/drivers/ast/ast.h ****  *
  22:../../../platform/sam/drivers/ast/ast.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/sam/drivers/ast/ast.h ****  *    from this software without specific prior written permission.
  24:../../../platform/sam/drivers/ast/ast.h ****  *
  25:../../../platform/sam/drivers/ast/ast.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/sam/drivers/ast/ast.h ****  *    Atmel microcontroller product.
  27:../../../platform/sam/drivers/ast/ast.h ****  *
  28:../../../platform/sam/drivers/ast/ast.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/sam/drivers/ast/ast.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/sam/drivers/ast/ast.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/sam/drivers/ast/ast.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/sam/drivers/ast/ast.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/sam/drivers/ast/ast.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/sam/drivers/ast/ast.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/sam/drivers/ast/ast.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/sam/drivers/ast/ast.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/sam/drivers/ast/ast.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/sam/drivers/ast/ast.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/sam/drivers/ast/ast.h ****  *
  40:../../../platform/sam/drivers/ast/ast.h ****  * \asf_license_stop
  41:../../../platform/sam/drivers/ast/ast.h ****  *
  42:../../../platform/sam/drivers/ast/ast.h ****  */
  43:../../../platform/sam/drivers/ast/ast.h **** 
  44:../../../platform/sam/drivers/ast/ast.h **** #ifndef AST_H_INCLUDED
  45:../../../platform/sam/drivers/ast/ast.h **** #define AST_H_INCLUDED
  46:../../../platform/sam/drivers/ast/ast.h **** 
  47:../../../platform/sam/drivers/ast/ast.h **** /**
  48:../../../platform/sam/drivers/ast/ast.h ****  * \defgroup asfdoc_sam_drivers_ast_group SAM4L Asynchronous Timer (AST)
  49:../../../platform/sam/drivers/ast/ast.h ****  *
  50:../../../platform/sam/drivers/ast/ast.h ****  * This driver for SAM4L devices provides an interface for the configuration
  51:../../../platform/sam/drivers/ast/ast.h ****  * and management of the device's Asynchronous Timer functionality.
  52:../../../platform/sam/drivers/ast/ast.h ****  *
  53:../../../platform/sam/drivers/ast/ast.h ****  * The Asynchronous Timer can generate periodic interrupts and peripheral events
  54:../../../platform/sam/drivers/ast/ast.h ****  * from output from the prescaler, as well as alarm interrupts and peripheral
  55:../../../platform/sam/drivers/ast/ast.h ****  * events, which can trigger at any counter value.
  56:../../../platform/sam/drivers/ast/ast.h ****  *
  57:../../../platform/sam/drivers/ast/ast.h ****  * The outline of this documentation is as follows:
  58:../../../platform/sam/drivers/ast/ast.h ****  *  - \ref asfdoc_sam_drivers_ast_prerequisites
  59:../../../platform/sam/drivers/ast/ast.h ****  *  - \ref asfdoc_sam_drivers_ast_module_overview
  60:../../../platform/sam/drivers/ast/ast.h ****  *  - \ref asfdoc_sam_drivers_ast_special_considerations
  61:../../../platform/sam/drivers/ast/ast.h ****  *  - \ref asfdoc_sam_drivers_ast_extra_info
  62:../../../platform/sam/drivers/ast/ast.h ****  *  - \ref asfdoc_sam_drivers_ast_examples
  63:../../../platform/sam/drivers/ast/ast.h ****  *  - \ref asfdoc_sam_drivers_ast_api_overview
  64:../../../platform/sam/drivers/ast/ast.h ****  *
  65:../../../platform/sam/drivers/ast/ast.h ****  *
  66:../../../platform/sam/drivers/ast/ast.h ****  * \section asfdoc_sam_drivers_ast_prerequisites Prerequisites
  67:../../../platform/sam/drivers/ast/ast.h ****  *
  68:../../../platform/sam/drivers/ast/ast.h ****  * There are no prerequisites for this module.
  69:../../../platform/sam/drivers/ast/ast.h ****  *
  70:../../../platform/sam/drivers/ast/ast.h ****  *
  71:../../../platform/sam/drivers/ast/ast.h ****  * \section asfdoc_sam_drivers_ast_module_overview Module Overview
  72:../../../platform/sam/drivers/ast/ast.h ****  * The AST module in the SAM4L devices is a 32-bit counter, with a 32-bit
  73:../../../platform/sam/drivers/ast/ast.h ****  * programmable prescaler. Typically, the AST clock is run continuously,
  74:../../../platform/sam/drivers/ast/ast.h ****  * including in the device's low-power sleep modes, to track the current time
  75:../../../platform/sam/drivers/ast/ast.h ****  * and date information. The AST can also wake-up the system from backup mode
  76:../../../platform/sam/drivers/ast/ast.h ****  * using either the alarm wakeup, periodic wakeup, or overflow wake-up mechanisms.
  77:../../../platform/sam/drivers/ast/ast.h ****  *
  78:../../../platform/sam/drivers/ast/ast.h ****  * The AST has been designed to meet the system tick and Real-Time Clock
  79:../../../platform/sam/drivers/ast/ast.h ****  * requirements of most embedded operating systems.
  80:../../../platform/sam/drivers/ast/ast.h ****  *
  81:../../../platform/sam/drivers/ast/ast.h ****  * In this driver, the AST is operated in Calendar Mode. This allows for an
  82:../../../platform/sam/drivers/ast/ast.h ****  * easy integration of a Real-Time Clock and calendar into a user application
  83:../../../platform/sam/drivers/ast/ast.h ****  * to track the passing of time and/or perform scheduled tasks.
  84:../../../platform/sam/drivers/ast/ast.h ****  *
  85:../../../platform/sam/drivers/ast/ast.h ****  * Whilst operating in Calendar Mode, the AST features:
  86:../../../platform/sam/drivers/ast/ast.h ****  *  - Time tracking in seconds, minutes, and hours in 24 hour format
  87:../../../platform/sam/drivers/ast/ast.h ****  *  - Date tracking in day, month, and year
  88:../../../platform/sam/drivers/ast/ast.h ****  *  - Automatic leap year correction
  89:../../../platform/sam/drivers/ast/ast.h ****  *
  90:../../../platform/sam/drivers/ast/ast.h ****  * \subsection asfdoc_sam_drivers_ast_overview_alarms Alarm Interrupt
  91:../../../platform/sam/drivers/ast/ast.h ****  * The AST has a device dependent number of independent hardware alarms that can
  92:../../../platform/sam/drivers/ast/ast.h ****  * be configured by the user application. These alarms will be triggered
  93:../../../platform/sam/drivers/ast/ast.h ****  * on a match with the current clock value, and can be set up to trigger an
  94:../../../platform/sam/drivers/ast/ast.h ****  * interrupt, event, or both. The AST can also be configured to clear the clock
  95:../../../platform/sam/drivers/ast/ast.h ****  * value on alarm match which will generate an overflow interrupt.
  96:../../../platform/sam/drivers/ast/ast.h ****  *
  97:../../../platform/sam/drivers/ast/ast.h ****  * \note Refer to module configuration at the end of the ast section of the device
  98:../../../platform/sam/drivers/ast/ast.h ****  * datasheet for the number of alarms supported.
  99:../../../platform/sam/drivers/ast/ast.h ****  *
 100:../../../platform/sam/drivers/ast/ast.h ****  * Whilst in Calendar Mode and using a nominal 1Hz input clock frequency, a register
 101:../../../platform/sam/drivers/ast/ast.h ****  * overflow will occur after 64 years.
 102:../../../platform/sam/drivers/ast/ast.h ****  *
 103:../../../platform/sam/drivers/ast/ast.h ****  * \subsection asfdoc_sam_drivers_ast_overview_periodic Periodic Events
 104:../../../platform/sam/drivers/ast/ast.h ****  * The AST can generate events at periodic intervals, allowing for direct
 105:../../../platform/sam/drivers/ast/ast.h ****  * peripheral actions without CPU intervention. The periodic events can be
 106:../../../platform/sam/drivers/ast/ast.h ****  * generated on an AST prescaler match, and will be generated on
 107:../../../platform/sam/drivers/ast/ast.h ****  * the rising edge transition of the specified bit. The resulting periodic
 108:../../../platform/sam/drivers/ast/ast.h ****  * frequency can be calculated by the following formula:
 109:../../../platform/sam/drivers/ast/ast.h ****  *
 110:../../../platform/sam/drivers/ast/ast.h ****  * \f[ f_{PERIODIC}=\frac{f_{ASY}}{2^{n+1}} \f]
 111:../../../platform/sam/drivers/ast/ast.h ****  *
 112:../../../platform/sam/drivers/ast/ast.h ****  * Where \f$f_{ASY}\f$ refers to the \e asynchronous clock set up in the AST
 113:../../../platform/sam/drivers/ast/ast.h ****  * module configuration.
 114:../../../platform/sam/drivers/ast/ast.h ****  *
 115:../../../platform/sam/drivers/ast/ast.h ****  * \note The connection of events between modules requires the use of the
 116:../../../platform/sam/drivers/ast/ast.h ****  *       \ref asfdoc_sam_drivers_events_group "SAM4L Peripheral Event Controller (PEVC)"
 117:../../../platform/sam/drivers/ast/ast.h ****  *       to route an output event of one module to the the input event of another.
 118:../../../platform/sam/drivers/ast/ast.h ****  *       For more information on event routing, refer to the event driver
 119:../../../platform/sam/drivers/ast/ast.h ****  *       documentation.
 120:../../../platform/sam/drivers/ast/ast.h ****  *
 121:../../../platform/sam/drivers/ast/ast.h ****  * \subsection asfdoc_sam_drivers_ast_overview_correction Digital Tuner
 122:../../../platform/sam/drivers/ast/ast.h ****  * The AST module contains Digital Tuner logic to compensate for inaccurate source clock
 123:../../../platform/sam/drivers/ast/ast.h ****  * frequencies, which would otherwise result in skewed time measurements.
 124:../../../platform/sam/drivers/ast/ast.h ****  *
 125:../../../platform/sam/drivers/ast/ast.h ****  *
 126:../../../platform/sam/drivers/ast/ast.h ****  * \section asfdoc_sam_drivers_ast_special_considerations Special Considerations
 127:../../../platform/sam/drivers/ast/ast.h ****  *
 128:../../../platform/sam/drivers/ast/ast.h ****  * \subsection asfdoc_sam_drivers_ast_special_considerations_crystal Crystal Selection
 129:../../../platform/sam/drivers/ast/ast.h ****  * The external crystal selection used by the AST module in the final system design must take
 130:../../../platform/sam/drivers/ast/ast.h ****  * into account:
 131:../../../platform/sam/drivers/ast/ast.h ****  * - Current consumption to achieve the best power savings in low power operating modes
 132:../../../platform/sam/drivers/ast/ast.h ****  * - Frequency drift (due to temperature effects on the circuit) for the best time accuracy
 133:../../../platform/sam/drivers/ast/ast.h ****  *
 134:../../../platform/sam/drivers/ast/ast.h ****  * \subsection asfdoc_sam_drivers_ast_special_considerations_year Year Limit
 135:../../../platform/sam/drivers/ast/ast.h ****  * The AST module has a year range of 63 years from the starting year configured
 136:../../../platform/sam/drivers/ast/ast.h ****  * when the module is initialized. Dates outside the start to end year range
 137:../../../platform/sam/drivers/ast/ast.h ****  * described below will need software adjustment:
 138:../../../platform/sam/drivers/ast/ast.h ****  *
 139:../../../platform/sam/drivers/ast/ast.h ****  * \f[ [YEAR_{START}, YEAR_{START}+64] \f]
 140:../../../platform/sam/drivers/ast/ast.h ****  *
 141:../../../platform/sam/drivers/ast/ast.h ****  *
 142:../../../platform/sam/drivers/ast/ast.h ****  * \section asfdoc_sam_drivers_ast_extra_info Extra Information
 143:../../../platform/sam/drivers/ast/ast.h ****  *
 144:../../../platform/sam/drivers/ast/ast.h ****  * For extra information, see \ref asfdoc_sam_drivers_ast_extra. This includes:
 145:../../../platform/sam/drivers/ast/ast.h ****  *  - \ref asfdoc_sam_drivers_ast_extra_acronyms
 146:../../../platform/sam/drivers/ast/ast.h ****  *  - \ref asfdoc_sam_drivers_ast_extra_dependencies
 147:../../../platform/sam/drivers/ast/ast.h ****  *  - \ref asfdoc_sam_drivers_ast_extra_errata
 148:../../../platform/sam/drivers/ast/ast.h ****  *  - \ref asfdoc_sam_drivers_ast_extra_history
 149:../../../platform/sam/drivers/ast/ast.h ****  *
 150:../../../platform/sam/drivers/ast/ast.h ****  * \section asfdoc_sam_drivers_ast_examples Examples
 151:../../../platform/sam/drivers/ast/ast.h ****  *
 152:../../../platform/sam/drivers/ast/ast.h ****  * For a list of examples related to this driver, see
 153:../../../platform/sam/drivers/ast/ast.h ****  * \ref asfdoc_sam_drivers_ast_exqsg.
 154:../../../platform/sam/drivers/ast/ast.h ****  *
 155:../../../platform/sam/drivers/ast/ast.h ****  * \section asfdoc_sam_drivers_ast_api_overview API Overview
 156:../../../platform/sam/drivers/ast/ast.h ****  * @{
 157:../../../platform/sam/drivers/ast/ast.h ****  */
 158:../../../platform/sam/drivers/ast/ast.h ****  
 159:../../../platform/sam/drivers/ast/ast.h **** #include <compiler.h>
 160:../../../platform/sam/drivers/ast/ast.h **** 
 161:../../../platform/sam/drivers/ast/ast.h **** /// @cond */
 162:../../../platform/sam/drivers/ast/ast.h **** /**INDENT-OFF**/
 163:../../../platform/sam/drivers/ast/ast.h **** #ifdef __cplusplus
 164:../../../platform/sam/drivers/ast/ast.h **** extern "C" {
 165:../../../platform/sam/drivers/ast/ast.h **** #endif
 166:../../../platform/sam/drivers/ast/ast.h **** /**INDENT-ON**/
 167:../../../platform/sam/drivers/ast/ast.h **** /// @endcond */
 168:../../../platform/sam/drivers/ast/ast.h **** 
 169:../../../platform/sam/drivers/ast/ast.h **** /** Timeout to prevent code hang in clock initialization */
 170:../../../platform/sam/drivers/ast/ast.h **** #define AST_POLL_TIMEOUT 10000
 171:../../../platform/sam/drivers/ast/ast.h **** 
 172:../../../platform/sam/drivers/ast/ast.h **** /** \name Predefined PSEL Values
 173:../../../platform/sam/drivers/ast/ast.h ****  */
 174:../../../platform/sam/drivers/ast/ast.h **** /* @{ */
 175:../../../platform/sam/drivers/ast/ast.h **** 
 176:../../../platform/sam/drivers/ast/ast.h **** /**
 177:../../../platform/sam/drivers/ast/ast.h ****  * \brief The PSEL value to set the AST source clock (after the prescaler) to 1Hz,
 178:../../../platform/sam/drivers/ast/ast.h ****  * when using an external 32-kHz crystal.
 179:../../../platform/sam/drivers/ast/ast.h ****  */
 180:../../../platform/sam/drivers/ast/ast.h **** #define AST_PSEL_32KHZ_1HZ    14
 181:../../../platform/sam/drivers/ast/ast.h **** 
 182:../../../platform/sam/drivers/ast/ast.h **** /**
 183:../../../platform/sam/drivers/ast/ast.h ****  * \brief The PSEL value to set the AST source clock (after the prescaler)
 184:../../../platform/sam/drivers/ast/ast.h ****  * to 1.76Hz when using the internal RC oscillator (~ 115kHz)
 185:../../../platform/sam/drivers/ast/ast.h ****  */
 186:../../../platform/sam/drivers/ast/ast.h **** #define AST_PSEL_RC_1_76HZ    15
 187:../../../platform/sam/drivers/ast/ast.h **** 
 188:../../../platform/sam/drivers/ast/ast.h **** /* @} */
 189:../../../platform/sam/drivers/ast/ast.h **** 
 190:../../../platform/sam/drivers/ast/ast.h **** #if !defined(__DOXYGEN__)
 191:../../../platform/sam/drivers/ast/ast.h **** /** \internal Timeout to prevent code hang in clock initialization */
 192:../../../platform/sam/drivers/ast/ast.h **** #define AST_POLL_TIMEOUT 10000
 193:../../../platform/sam/drivers/ast/ast.h **** #endif /* !defined(__DOXYGEN__) */
 194:../../../platform/sam/drivers/ast/ast.h **** /** Description for Calendar Field.*/
 195:../../../platform/sam/drivers/ast/ast.h **** struct ast_calv {
 196:../../../platform/sam/drivers/ast/ast.h **** 	/** Seconds in the range 0 to 59. */
 197:../../../platform/sam/drivers/ast/ast.h **** 	uint32_t sec   : 6;
 198:../../../platform/sam/drivers/ast/ast.h **** 	/** Minutes in the range range 0 to 59. */
 199:../../../platform/sam/drivers/ast/ast.h **** 	uint32_t min   : 6;
 200:../../../platform/sam/drivers/ast/ast.h **** 	/** Hours in the range 0 to 23. */
 201:../../../platform/sam/drivers/ast/ast.h **** 	uint32_t hour  : 5;
 202:../../../platform/sam/drivers/ast/ast.h **** 	/** Day in the range 1 to 31. */
 203:../../../platform/sam/drivers/ast/ast.h **** 	uint32_t day   : 5;
 204:../../../platform/sam/drivers/ast/ast.h **** 	/** Month in the range 1 to 12. */
 205:../../../platform/sam/drivers/ast/ast.h **** 	uint32_t month : 4;
 206:../../../platform/sam/drivers/ast/ast.h **** 	/** Year in the range 0 to 63. */
 207:../../../platform/sam/drivers/ast/ast.h **** 	uint32_t year  : 6;
 208:../../../platform/sam/drivers/ast/ast.h **** };
 209:../../../platform/sam/drivers/ast/ast.h **** 
 210:../../../platform/sam/drivers/ast/ast.h **** /* Input when initializing AST in calendar mode. */
 211:../../../platform/sam/drivers/ast/ast.h **** struct ast_calendar {
 212:../../../platform/sam/drivers/ast/ast.h **** 	union {
 213:../../../platform/sam/drivers/ast/ast.h **** 		uint32_t field;
 214:../../../platform/sam/drivers/ast/ast.h **** 		/** Calendar. */
 215:../../../platform/sam/drivers/ast/ast.h **** 		struct ast_calv FIELD;
 216:../../../platform/sam/drivers/ast/ast.h **** 	};
 217:../../../platform/sam/drivers/ast/ast.h **** };
 218:../../../platform/sam/drivers/ast/ast.h **** 
 219:../../../platform/sam/drivers/ast/ast.h **** /** \ref ast_mode "AST Calendar Mode". */
 220:../../../platform/sam/drivers/ast/ast.h **** typedef enum ast_mode {
 221:../../../platform/sam/drivers/ast/ast.h **** 	/** Counter Mode. */
 222:../../../platform/sam/drivers/ast/ast.h **** 	AST_COUNTER_MODE  = 0,
 223:../../../platform/sam/drivers/ast/ast.h **** 	/** Calendar Mode. */
 224:../../../platform/sam/drivers/ast/ast.h **** 	AST_CALENDAR_MODE = 1,
 225:../../../platform/sam/drivers/ast/ast.h **** } ast_mode_t;
 226:../../../platform/sam/drivers/ast/ast.h **** 
 227:../../../platform/sam/drivers/ast/ast.h **** /** \ref ast_oscillator_type "AST Oscillator type". */
 228:../../../platform/sam/drivers/ast/ast.h **** typedef enum ast_oscillator_type {
 229:../../../platform/sam/drivers/ast/ast.h **** 	/** System RC oscillator (RCSYS). */
 230:../../../platform/sam/drivers/ast/ast.h **** 	AST_OSC_RC    = 0,
 231:../../../platform/sam/drivers/ast/ast.h **** 	/** 32kHz oscillator (OSC32 or RC32). */
 232:../../../platform/sam/drivers/ast/ast.h **** 	AST_OSC_32KHZ = 1,
 233:../../../platform/sam/drivers/ast/ast.h **** 	/** APB clock. */
 234:../../../platform/sam/drivers/ast/ast.h **** 	AST_OSC_PB    = 2,
 235:../../../platform/sam/drivers/ast/ast.h **** 	/** Generic clock (GCLK). */
 236:../../../platform/sam/drivers/ast/ast.h **** 	AST_OSC_GCLK  = 3,
 237:../../../platform/sam/drivers/ast/ast.h **** 	/** 1kHz clock from the 32kHz oscillator or 32kHz RC oscillator (CLK_1K). */
 238:../../../platform/sam/drivers/ast/ast.h **** 	AST_OSC_1KHZ  = 4,
 239:../../../platform/sam/drivers/ast/ast.h **** } ast_oscillator_type_t;
 240:../../../platform/sam/drivers/ast/ast.h **** 
 241:../../../platform/sam/drivers/ast/ast.h **** #if !defined(__DOXYGEN__)
 242:../../../platform/sam/drivers/ast/ast.h **** #define AST_INTERRUPT_SOURCE_NUM    5
 243:../../../platform/sam/drivers/ast/ast.h **** #endif /* !defined(__DOXYGEN__) */
 244:../../../platform/sam/drivers/ast/ast.h **** /** \ref ast_interrupt_source "AST interrupt source". */
 245:../../../platform/sam/drivers/ast/ast.h **** typedef enum ast_interrupt_source {
 246:../../../platform/sam/drivers/ast/ast.h **** 	/** Alarm interrupt. */
 247:../../../platform/sam/drivers/ast/ast.h **** 	AST_INTERRUPT_ALARM = 0,
 248:../../../platform/sam/drivers/ast/ast.h **** 	/** Periodic interrupt. */
 249:../../../platform/sam/drivers/ast/ast.h **** 	AST_INTERRUPT_PER,
 250:../../../platform/sam/drivers/ast/ast.h **** 	/** Overflow interrupt. */
 251:../../../platform/sam/drivers/ast/ast.h **** 	AST_INTERRUPT_OVF,
 252:../../../platform/sam/drivers/ast/ast.h **** 	/** Synchronization complete interrupt. */
 253:../../../platform/sam/drivers/ast/ast.h **** 	AST_INTERRUPT_READY,
 254:../../../platform/sam/drivers/ast/ast.h **** 	/** Clock synchronization complete interrupt. */
 255:../../../platform/sam/drivers/ast/ast.h **** 	AST_INTERRUPT_CLKREADY,
 256:../../../platform/sam/drivers/ast/ast.h **** } ast_interrupt_source_t;
 257:../../../platform/sam/drivers/ast/ast.h **** 
 258:../../../platform/sam/drivers/ast/ast.h **** /** \ref ast_wakeup_source "AST wake-up source". */
 259:../../../platform/sam/drivers/ast/ast.h **** typedef enum ast_wakeup_source {
 260:../../../platform/sam/drivers/ast/ast.h **** 	/** Alarm wake-up source. */
 261:../../../platform/sam/drivers/ast/ast.h **** 	AST_WAKEUP_ALARM = 0,
 262:../../../platform/sam/drivers/ast/ast.h **** 	/** Peripheral interrupt wake-up source. */
 263:../../../platform/sam/drivers/ast/ast.h **** 	AST_WAKEUP_PER,
 264:../../../platform/sam/drivers/ast/ast.h **** 	/** Counter overflow wake-up source. */
 265:../../../platform/sam/drivers/ast/ast.h **** 	AST_WAKEUP_OVF,
 266:../../../platform/sam/drivers/ast/ast.h **** } ast_wakeup_source_t;
 267:../../../platform/sam/drivers/ast/ast.h **** 
 268:../../../platform/sam/drivers/ast/ast.h **** /** \ref ast_event_source "AST event source". */
 269:../../../platform/sam/drivers/ast/ast.h **** typedef enum ast_event_source {
 270:../../../platform/sam/drivers/ast/ast.h **** 	/** Alarm event generation. */
 271:../../../platform/sam/drivers/ast/ast.h **** 	AST_EVENT_ALARM = 0,
 272:../../../platform/sam/drivers/ast/ast.h **** 	/** Peripheral event generation. */
 273:../../../platform/sam/drivers/ast/ast.h **** 	AST_EVENT_PER,
 274:../../../platform/sam/drivers/ast/ast.h **** 	/** Counter overflow event generation. */
 275:../../../platform/sam/drivers/ast/ast.h **** 	AST_EVENT_OVF,
 276:../../../platform/sam/drivers/ast/ast.h **** } ast_event_source_t;
 277:../../../platform/sam/drivers/ast/ast.h **** 
 278:../../../platform/sam/drivers/ast/ast.h **** /** AST configuration. */
 279:../../../platform/sam/drivers/ast/ast.h **** struct ast_config {
 280:../../../platform/sam/drivers/ast/ast.h **** 	/**
 281:../../../platform/sam/drivers/ast/ast.h **** 	 * Mode: Calendar Mode:
 282:../../../platform/sam/drivers/ast/ast.h **** 	 * \ref AST_CALENDAR_MODE or
 283:../../../platform/sam/drivers/ast/ast.h **** 	 * Counter Mode: \ref AST_COUNTER_MODE.
 284:../../../platform/sam/drivers/ast/ast.h **** 	 */
 285:../../../platform/sam/drivers/ast/ast.h **** 	ast_mode_t mode;
 286:../../../platform/sam/drivers/ast/ast.h **** 	/** Oscillator type. */
 287:../../../platform/sam/drivers/ast/ast.h **** 	ast_oscillator_type_t osc_type;
 288:../../../platform/sam/drivers/ast/ast.h **** 	/** Prescaler Value. */
 289:../../../platform/sam/drivers/ast/ast.h **** 	uint8_t psel;
 290:../../../platform/sam/drivers/ast/ast.h **** 	/** Initial counter Value. */
 291:../../../platform/sam/drivers/ast/ast.h **** 	uint32_t counter;
 292:../../../platform/sam/drivers/ast/ast.h **** 	/** Initial calendar Value. */
 293:../../../platform/sam/drivers/ast/ast.h **** 	struct ast_calendar calendar;
 294:../../../platform/sam/drivers/ast/ast.h **** };
 295:../../../platform/sam/drivers/ast/ast.h **** 
 296:../../../platform/sam/drivers/ast/ast.h **** /** AST interrupt callback. */
 297:../../../platform/sam/drivers/ast/ast.h **** typedef void (*ast_callback_t)(void);
 298:../../../platform/sam/drivers/ast/ast.h **** 
 299:../../../platform/sam/drivers/ast/ast.h **** bool ast_is_enabled(Ast *ast);
 300:../../../platform/sam/drivers/ast/ast.h **** 
 301:../../../platform/sam/drivers/ast/ast.h **** void ast_enable(Ast *ast);
 302:../../../platform/sam/drivers/ast/ast.h **** void ast_disable(Ast *ast);
 303:../../../platform/sam/drivers/ast/ast.h **** 
 304:../../../platform/sam/drivers/ast/ast.h **** uint32_t ast_set_config(Ast *ast, struct ast_config *ast_conf);
 305:../../../platform/sam/drivers/ast/ast.h **** void ast_set_callback(Ast *ast, ast_interrupt_source_t source,
 306:../../../platform/sam/drivers/ast/ast.h **** 		ast_callback_t callback, uint8_t irq_line, uint8_t irq_level);
 307:../../../platform/sam/drivers/ast/ast.h **** uint32_t ast_configure_digital_tuner(Ast *ast, uint32_t input_freq,
 308:../../../platform/sam/drivers/ast/ast.h **** 		uint32_t tuned_freq);
 309:../../../platform/sam/drivers/ast/ast.h **** void ast_init_digital_tuner(Ast *ast, bool add, uint8_t value,
 310:../../../platform/sam/drivers/ast/ast.h **** 		uint8_t exp);
 311:../../../platform/sam/drivers/ast/ast.h **** void ast_disable_digital_tuner(Ast *ast);
 312:../../../platform/sam/drivers/ast/ast.h **** 
 313:../../../platform/sam/drivers/ast/ast.h **** void ast_write_calendar_value(Ast *ast, struct ast_calendar calendar);
 314:../../../platform/sam/drivers/ast/ast.h **** struct ast_calendar ast_read_calendar_value(Ast *ast);
 315:../../../platform/sam/drivers/ast/ast.h **** void ast_write_counter_value(Ast *ast, uint32_t ast_counter);
 316:../../../platform/sam/drivers/ast/ast.h **** void ast_enable_counter_clear_on_alarm(Ast *ast, uint8_t alarm_channel);
 317:../../../platform/sam/drivers/ast/ast.h **** void ast_clear_prescalar(Ast *ast);
 318:../../../platform/sam/drivers/ast/ast.h **** 
 319:../../../platform/sam/drivers/ast/ast.h **** /**
 320:../../../platform/sam/drivers/ast/ast.h ****  * \brief Get the AST current counter value.
 321:../../../platform/sam/drivers/ast/ast.h ****  *
 322:../../../platform/sam/drivers/ast/ast.h ****  * \param[in] ast Module hardware register base address pointer
 323:../../../platform/sam/drivers/ast/ast.h ****  *
 324:../../../platform/sam/drivers/ast/ast.h ****  * \return AST current counter value.
 325:../../../platform/sam/drivers/ast/ast.h ****  */
 326:../../../platform/sam/drivers/ast/ast.h **** static inline uint32_t ast_read_counter_value(
 327:../../../platform/sam/drivers/ast/ast.h **** 		Ast *ast)
 328:../../../platform/sam/drivers/ast/ast.h **** {
 329:../../../platform/sam/drivers/ast/ast.h **** 	return ast->AST_CV;
 330:../../../platform/sam/drivers/ast/ast.h **** }
 331:../../../platform/sam/drivers/ast/ast.h **** 
 332:../../../platform/sam/drivers/ast/ast.h **** /**
 333:../../../platform/sam/drivers/ast/ast.h ****  * \brief Check the busy status of the AST clock
 334:../../../platform/sam/drivers/ast/ast.h ****  *
 335:../../../platform/sam/drivers/ast/ast.h ****  * \param[in] ast Module hardware register base address pointer
 336:../../../platform/sam/drivers/ast/ast.h ****  *
 337:../../../platform/sam/drivers/ast/ast.h ****  * \return AST clock busy status.
 338:../../../platform/sam/drivers/ast/ast.h ****  * \retval false AST clock is not busy
 339:../../../platform/sam/drivers/ast/ast.h ****  * \retval true  AST clock is busy
 340:../../../platform/sam/drivers/ast/ast.h ****  */
 341:../../../platform/sam/drivers/ast/ast.h **** static inline bool ast_is_clkbusy(
 342:../../../platform/sam/drivers/ast/ast.h **** 		Ast *ast)
 343:../../../platform/sam/drivers/ast/ast.h **** {
 442              	 .loc 5 343 0
 443              	 .cfi_startproc
 444              	 
 445              	 
 446              	 
 447 013c 80B4     	 push {r7}
 448              	.LCFI35:
 449              	 .cfi_def_cfa_offset 4
 450              	 .cfi_offset 7,-4
 451 013e 83B0     	 sub sp,sp,#12
 452              	.LCFI36:
 453              	 .cfi_def_cfa_offset 16
 454 0140 00AF     	 add r7,sp,#0
 455              	.LCFI37:
 456              	 .cfi_def_cfa_register 7
 457 0142 7860     	 str r0,[r7,#4]
 344:../../../platform/sam/drivers/ast/ast.h **** 	return (ast->AST_SR & AST_SR_CLKBUSY) != 0;
 458              	 .loc 5 344 0
 459 0144 7B68     	 ldr r3,[r7,#4]
 460 0146 9B68     	 ldr r3,[r3,#8]
 461 0148 03F08053 	 and r3,r3,#268435456
 462 014c 002B     	 cmp r3,#0
 463 014e 14BF     	 ite ne
 464 0150 0123     	 movne r3,#1
 465 0152 0023     	 moveq r3,#0
 466 0154 DBB2     	 uxtb r3,r3
 345:../../../platform/sam/drivers/ast/ast.h **** }
 467              	 .loc 5 345 0
 468 0156 1846     	 mov r0,r3
 469 0158 0C37     	 adds r7,r7,#12
 470              	.LCFI38:
 471              	 .cfi_def_cfa_offset 4
 472 015a BD46     	 mov sp,r7
 473              	.LCFI39:
 474              	 .cfi_def_cfa_register 13
 475              	 
 476 015c 80BC     	 pop {r7}
 477              	.LCFI40:
 478              	 .cfi_restore 7
 479              	 .cfi_def_cfa_offset 0
 480 015e 7047     	 bx lr
 481              	 .cfi_endproc
 482              	.LFE123:
 484              	 .align 1
 485              	 .syntax unified
 486              	 .thumb
 487              	 .thumb_func
 488              	 .fpu softvfp
 490              	ast_is_busy:
 491              	.LFB124:
 346:../../../platform/sam/drivers/ast/ast.h **** 
 347:../../../platform/sam/drivers/ast/ast.h **** /**
 348:../../../platform/sam/drivers/ast/ast.h ****  * \brief Check the busy status of AST.
 349:../../../platform/sam/drivers/ast/ast.h ****  *
 350:../../../platform/sam/drivers/ast/ast.h ****  * \param[in] ast Module hardware register base address pointer
 351:../../../platform/sam/drivers/ast/ast.h ****  *
 352:../../../platform/sam/drivers/ast/ast.h ****  * \return AST busy status.
 353:../../../platform/sam/drivers/ast/ast.h ****  * \retval false AST is not busy
 354:../../../platform/sam/drivers/ast/ast.h ****  * \retval true AST is busy
 355:../../../platform/sam/drivers/ast/ast.h ****  */
 356:../../../platform/sam/drivers/ast/ast.h **** static inline bool ast_is_busy(
 357:../../../platform/sam/drivers/ast/ast.h **** 		Ast *ast)
 358:../../../platform/sam/drivers/ast/ast.h **** {
 492              	 .loc 5 358 0
 493              	 .cfi_startproc
 494              	 
 495              	 
 496              	 
 497 0160 80B4     	 push {r7}
 498              	.LCFI41:
 499              	 .cfi_def_cfa_offset 4
 500              	 .cfi_offset 7,-4
 501 0162 83B0     	 sub sp,sp,#12
 502              	.LCFI42:
 503              	 .cfi_def_cfa_offset 16
 504 0164 00AF     	 add r7,sp,#0
 505              	.LCFI43:
 506              	 .cfi_def_cfa_register 7
 507 0166 7860     	 str r0,[r7,#4]
 359:../../../platform/sam/drivers/ast/ast.h **** 	return (ast->AST_SR & AST_SR_BUSY) != 0;
 508              	 .loc 5 359 0
 509 0168 7B68     	 ldr r3,[r7,#4]
 510 016a 9B68     	 ldr r3,[r3,#8]
 511 016c 03F08073 	 and r3,r3,#16777216
 512 0170 002B     	 cmp r3,#0
 513 0172 14BF     	 ite ne
 514 0174 0123     	 movne r3,#1
 515 0176 0023     	 moveq r3,#0
 516 0178 DBB2     	 uxtb r3,r3
 360:../../../platform/sam/drivers/ast/ast.h **** }
 517              	 .loc 5 360 0
 518 017a 1846     	 mov r0,r3
 519 017c 0C37     	 adds r7,r7,#12
 520              	.LCFI44:
 521              	 .cfi_def_cfa_offset 4
 522 017e BD46     	 mov sp,r7
 523              	.LCFI45:
 524              	 .cfi_def_cfa_register 13
 525              	 
 526 0180 80BC     	 pop {r7}
 527              	.LCFI46:
 528              	 .cfi_restore 7
 529              	 .cfi_def_cfa_offset 0
 530 0182 7047     	 bx lr
 531              	 .cfi_endproc
 532              	.LFE124:
 534              	 .align 1
 535              	 .syntax unified
 536              	 .thumb
 537              	 .thumb_func
 538              	 .fpu softvfp
 540              	sleepmgr_lock_mode:
 541              	.LFB191:
 542              	 .file 6 "../../../platform/common/services/sleepmgr/sleepmgr.h"
   1:../../../platform/common/services/sleepmgr/sleepmgr.h **** /**
   2:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \file
   3:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
   4:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \brief Sleep manager
   5:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
   6:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * Copyright (c) 2010 - 2013 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
   8:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \asf_license_start
   9:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  10:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \page License
  11:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  12:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  15:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  18:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  22:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  25:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  28:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  40:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \asf_license_stop
  41:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  42:../../../platform/common/services/sleepmgr/sleepmgr.h ****  */
  43:../../../platform/common/services/sleepmgr/sleepmgr.h **** #ifndef SLEEPMGR_H
  44:../../../platform/common/services/sleepmgr/sleepmgr.h **** #define SLEEPMGR_H
  45:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
  46:../../../platform/common/services/sleepmgr/sleepmgr.h **** #include <compiler.h>
  47:../../../platform/common/services/sleepmgr/sleepmgr.h **** #include <parts.h>
  48:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
  49:../../../platform/common/services/sleepmgr/sleepmgr.h **** #if (SAM3S || SAM3U || SAM3N || SAM3XA || SAM4S || SAM4E)
  50:../../../platform/common/services/sleepmgr/sleepmgr.h **** # include "sam/sleepmgr.h"
  51:../../../platform/common/services/sleepmgr/sleepmgr.h **** #elif XMEGA
  52:../../../platform/common/services/sleepmgr/sleepmgr.h **** # include "xmega/sleepmgr.h"
  53:../../../platform/common/services/sleepmgr/sleepmgr.h **** #elif UC3
  54:../../../platform/common/services/sleepmgr/sleepmgr.h **** # include "uc3/sleepmgr.h"
  55:../../../platform/common/services/sleepmgr/sleepmgr.h **** #elif SAM4L
  56:../../../platform/common/services/sleepmgr/sleepmgr.h **** # include "sam4l/sleepmgr.h"
  57:../../../platform/common/services/sleepmgr/sleepmgr.h **** #elif (MEGA || MEGA_RF)
  58:../../../platform/common/services/sleepmgr/sleepmgr.h **** # include "mega_rf/sleepmgr.h"
  59:../../../platform/common/services/sleepmgr/sleepmgr.h **** #else
  60:../../../platform/common/services/sleepmgr/sleepmgr.h **** # error Unsupported device.
  61:../../../platform/common/services/sleepmgr/sleepmgr.h **** #endif
  62:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
  63:../../../platform/common/services/sleepmgr/sleepmgr.h **** /**
  64:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \defgroup sleepmgr_group Sleep manager
  65:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  66:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * The sleep manager is a service for ensuring that the device is not put to
  67:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * sleep in deeper sleep modes than the system (e.g., peripheral drivers,
  68:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * services or the application) allows at any given time.
  69:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  70:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * It is based on the use of lock counting for the individual sleep modes, and
  71:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * will put the device to sleep in the shallowest sleep mode that has a non-zero
  72:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * lock count. The drivers/services/application can change these counts by use
  73:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * of \ref sleepmgr_lock_mode and \ref sleepmgr_unlock_mode.
  74:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * Refer to \ref sleepmgr_mode for a list of the sleep modes available for
  75:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * locking, and the device datasheet for information on their effect.
  76:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  77:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * The application must supply the file \ref conf_sleepmgr.h.
  78:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  79:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * For the sleep manager to be enabled, the symbol \ref CONFIG_SLEEPMGR_ENABLE
  80:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * must be defined, e.g., in \ref conf_sleepmgr.h. If this symbol is not
  81:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * defined, the functions are replaced with dummy functions and no RAM is used.
  82:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  83:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * @{
  84:../../../platform/common/services/sleepmgr/sleepmgr.h ****  */
  85:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
  86:../../../platform/common/services/sleepmgr/sleepmgr.h **** /**
  87:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \def CONFIG_SLEEPMGR_ENABLE
  88:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \brief Configuration symbol for enabling the sleep manager
  89:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  90:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * If this symbol is not defined, the functions of this service are replaced
  91:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * with dummy functions. This is useful for reducing code size and execution
  92:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * time if the sleep manager is not needed in the application.
  93:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  94:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * This symbol may be defined in \ref conf_sleepmgr.h.
  95:../../../platform/common/services/sleepmgr/sleepmgr.h ****  */
  96:../../../platform/common/services/sleepmgr/sleepmgr.h **** #if defined(__DOXYGEN__) && !defined(CONFIG_SLEEPMGR_ENABLE)
  97:../../../platform/common/services/sleepmgr/sleepmgr.h **** #  define CONFIG_SLEEPMGR_ENABLE
  98:../../../platform/common/services/sleepmgr/sleepmgr.h **** #endif
  99:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 100:../../../platform/common/services/sleepmgr/sleepmgr.h **** /**
 101:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \enum sleepmgr_mode
 102:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \brief Sleep mode locks
 103:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
 104:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * Identifiers for the different sleep mode locks.
 105:../../../platform/common/services/sleepmgr/sleepmgr.h ****  */
 106:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 107:../../../platform/common/services/sleepmgr/sleepmgr.h **** /**
 108:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \brief Initialize the lock counts
 109:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
 110:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * Sets all lock counts to 0, except the very last one, which is set to 1. This
 111:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * is done to simplify the algorithm for finding the deepest allowable sleep
 112:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * mode in \ref sleepmgr_enter_sleep.
 113:../../../platform/common/services/sleepmgr/sleepmgr.h ****  */
 114:../../../platform/common/services/sleepmgr/sleepmgr.h **** static inline void sleepmgr_init(void)
 115:../../../platform/common/services/sleepmgr/sleepmgr.h **** {
 116:../../../platform/common/services/sleepmgr/sleepmgr.h **** #ifdef CONFIG_SLEEPMGR_ENABLE
 117:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	uint8_t i;
 118:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 119:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	for (i = 0; i < SLEEPMGR_NR_OF_MODES - 1; i++) {
 120:../../../platform/common/services/sleepmgr/sleepmgr.h **** 		sleepmgr_locks[i] = 0;
 121:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	}
 122:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	sleepmgr_locks[SLEEPMGR_NR_OF_MODES - 1] = 1;
 123:../../../platform/common/services/sleepmgr/sleepmgr.h **** #endif /* CONFIG_SLEEPMGR_ENABLE */
 124:../../../platform/common/services/sleepmgr/sleepmgr.h **** }
 125:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 126:../../../platform/common/services/sleepmgr/sleepmgr.h **** /**
 127:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \brief Increase lock count for a sleep mode
 128:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
 129:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * Increases the lock count for \a mode to ensure that the sleep manager does
 130:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * not put the device to sleep in the deeper sleep modes.
 131:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
 132:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \param mode Sleep mode to lock.
 133:../../../platform/common/services/sleepmgr/sleepmgr.h ****  */
 134:../../../platform/common/services/sleepmgr/sleepmgr.h **** static inline void sleepmgr_lock_mode(enum sleepmgr_mode mode)
 135:../../../platform/common/services/sleepmgr/sleepmgr.h **** {
 543              	 .loc 6 135 0
 544              	 .cfi_startproc
 545              	 
 546              	 
 547 0184 80B5     	 push {r7,lr}
 548              	.LCFI47:
 549              	 .cfi_def_cfa_offset 8
 550              	 .cfi_offset 7,-8
 551              	 .cfi_offset 14,-4
 552 0186 84B0     	 sub sp,sp,#16
 553              	.LCFI48:
 554              	 .cfi_def_cfa_offset 24
 555 0188 00AF     	 add r7,sp,#0
 556              	.LCFI49:
 557              	 .cfi_def_cfa_register 7
 558 018a 0346     	 mov r3,r0
 559 018c FB71     	 strb r3,[r7,#7]
 136:../../../platform/common/services/sleepmgr/sleepmgr.h **** #ifdef CONFIG_SLEEPMGR_ENABLE
 137:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	irqflags_t flags;
 138:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 139:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	Assert(sleepmgr_locks[mode] < 0xff);
 140:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 141:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	// Enter a critical section
 142:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	flags = cpu_irq_save();
 560              	 .loc 6 142 0
 561 018e FFF793FF 	 bl cpu_irq_save
 562 0192 F860     	 str r0,[r7,#12]
 143:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 144:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	++sleepmgr_locks[mode];
 563              	 .loc 6 144 0
 564 0194 FB79     	 ldrb r3,[r7,#7]
 565 0196 064A     	 ldr r2,.L30
 566 0198 D25C     	 ldrb r2,[r2,r3]
 567 019a 0132     	 adds r2,r2,#1
 568 019c D1B2     	 uxtb r1,r2
 569 019e 044A     	 ldr r2,.L30
 570 01a0 D154     	 strb r1,[r2,r3]
 145:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 146:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	// Leave the critical section
 147:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	cpu_irq_restore(flags);
 571              	 .loc 6 147 0
 572 01a2 F868     	 ldr r0,[r7,#12]
 573 01a4 FFF7B3FF 	 bl cpu_irq_restore
 148:../../../platform/common/services/sleepmgr/sleepmgr.h **** #else
 149:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	UNUSED(mode);
 150:../../../platform/common/services/sleepmgr/sleepmgr.h **** #endif /* CONFIG_SLEEPMGR_ENABLE */
 151:../../../platform/common/services/sleepmgr/sleepmgr.h **** }
 574              	 .loc 6 151 0
 575 01a8 00BF     	 nop
 576 01aa 1037     	 adds r7,r7,#16
 577              	.LCFI50:
 578              	 .cfi_def_cfa_offset 8
 579 01ac BD46     	 mov sp,r7
 580              	.LCFI51:
 581              	 .cfi_def_cfa_register 13
 582              	 
 583 01ae 80BD     	 pop {r7,pc}
 584              	.L31:
 585              	 .align 2
 586              	.L30:
 587 01b0 00000000 	 .word sleepmgr_locks
 588              	 .cfi_endproc
 589              	.LFE191:
 591              	 .align 1
 592              	 .syntax unified
 593              	 .thumb
 594              	 .thumb_func
 595              	 .fpu softvfp
 597              	sleepmgr_unlock_mode:
 598              	.LFB192:
 152:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 153:../../../platform/common/services/sleepmgr/sleepmgr.h **** /**
 154:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \brief Decrease lock count for a sleep mode
 155:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
 156:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * Decreases the lock count for \a mode. If the lock count reaches 0, the sleep
 157:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * manager can put the device to sleep in the deeper sleep modes.
 158:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
 159:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \param mode Sleep mode to unlock.
 160:../../../platform/common/services/sleepmgr/sleepmgr.h ****  */
 161:../../../platform/common/services/sleepmgr/sleepmgr.h **** static inline void sleepmgr_unlock_mode(enum sleepmgr_mode mode)
 162:../../../platform/common/services/sleepmgr/sleepmgr.h **** {
 599              	 .loc 6 162 0
 600              	 .cfi_startproc
 601              	 
 602              	 
 603 01b4 80B5     	 push {r7,lr}
 604              	.LCFI52:
 605              	 .cfi_def_cfa_offset 8
 606              	 .cfi_offset 7,-8
 607              	 .cfi_offset 14,-4
 608 01b6 84B0     	 sub sp,sp,#16
 609              	.LCFI53:
 610              	 .cfi_def_cfa_offset 24
 611 01b8 00AF     	 add r7,sp,#0
 612              	.LCFI54:
 613              	 .cfi_def_cfa_register 7
 614 01ba 0346     	 mov r3,r0
 615 01bc FB71     	 strb r3,[r7,#7]
 163:../../../platform/common/services/sleepmgr/sleepmgr.h **** #ifdef CONFIG_SLEEPMGR_ENABLE
 164:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	irqflags_t flags;
 165:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 166:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	Assert(sleepmgr_locks[mode]);
 167:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 168:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	// Enter a critical section
 169:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	flags = cpu_irq_save();
 616              	 .loc 6 169 0
 617 01be FFF77BFF 	 bl cpu_irq_save
 618 01c2 F860     	 str r0,[r7,#12]
 170:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 171:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	--sleepmgr_locks[mode];
 619              	 .loc 6 171 0
 620 01c4 FB79     	 ldrb r3,[r7,#7]
 621 01c6 064A     	 ldr r2,.L33
 622 01c8 D25C     	 ldrb r2,[r2,r3]
 623 01ca 013A     	 subs r2,r2,#1
 624 01cc D1B2     	 uxtb r1,r2
 625 01ce 044A     	 ldr r2,.L33
 626 01d0 D154     	 strb r1,[r2,r3]
 172:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 173:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	// Leave the critical section
 174:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	cpu_irq_restore(flags);
 627              	 .loc 6 174 0
 628 01d2 F868     	 ldr r0,[r7,#12]
 629 01d4 FFF79BFF 	 bl cpu_irq_restore
 175:../../../platform/common/services/sleepmgr/sleepmgr.h **** #else
 176:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	UNUSED(mode);
 177:../../../platform/common/services/sleepmgr/sleepmgr.h **** #endif /* CONFIG_SLEEPMGR_ENABLE */
 178:../../../platform/common/services/sleepmgr/sleepmgr.h **** }
 630              	 .loc 6 178 0
 631 01d8 00BF     	 nop
 632 01da 1037     	 adds r7,r7,#16
 633              	.LCFI55:
 634              	 .cfi_def_cfa_offset 8
 635 01dc BD46     	 mov sp,r7
 636              	.LCFI56:
 637              	 .cfi_def_cfa_register 13
 638              	 
 639 01de 80BD     	 pop {r7,pc}
 640              	.L34:
 641              	 .align 2
 642              	.L33:
 643 01e0 00000000 	 .word sleepmgr_locks
 644              	 .cfi_endproc
 645              	.LFE192:
 647              	 .comm ast_callback_pointer,20,4
 648              	 .align 1
 649              	 .global ast_is_enabled
 650              	 .syntax unified
 651              	 .thumb
 652              	 .thumb_func
 653              	 .fpu softvfp
 655              	ast_is_enabled:
 656              	.LFB195:
 657              	 .file 7 "../../../platform/sam/drivers/ast/ast.c"
   1:../../../platform/sam/drivers/ast/ast.c **** /**
   2:../../../platform/sam/drivers/ast/ast.c ****  * \file
   3:../../../platform/sam/drivers/ast/ast.c ****  *
   4:../../../platform/sam/drivers/ast/ast.c ****  * \brief SAM Asynchronous Timer (AST) driver.
   5:../../../platform/sam/drivers/ast/ast.c ****  *
   6:../../../platform/sam/drivers/ast/ast.c ****  * Copyright (C) 2012-2014 Atmel Corporation. All rights reserved.
   7:../../../platform/sam/drivers/ast/ast.c ****  *
   8:../../../platform/sam/drivers/ast/ast.c ****  * \asf_license_start
   9:../../../platform/sam/drivers/ast/ast.c ****  *
  10:../../../platform/sam/drivers/ast/ast.c ****  * \page License
  11:../../../platform/sam/drivers/ast/ast.c ****  *
  12:../../../platform/sam/drivers/ast/ast.c ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/sam/drivers/ast/ast.c ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/sam/drivers/ast/ast.c ****  *
  15:../../../platform/sam/drivers/ast/ast.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/sam/drivers/ast/ast.c ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/sam/drivers/ast/ast.c ****  *
  18:../../../platform/sam/drivers/ast/ast.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/sam/drivers/ast/ast.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/sam/drivers/ast/ast.c ****  *    and/or other materials provided with the distribution.
  21:../../../platform/sam/drivers/ast/ast.c ****  *
  22:../../../platform/sam/drivers/ast/ast.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/sam/drivers/ast/ast.c ****  *    from this software without specific prior written permission.
  24:../../../platform/sam/drivers/ast/ast.c ****  *
  25:../../../platform/sam/drivers/ast/ast.c ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/sam/drivers/ast/ast.c ****  *    Atmel microcontroller product.
  27:../../../platform/sam/drivers/ast/ast.c ****  *
  28:../../../platform/sam/drivers/ast/ast.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/sam/drivers/ast/ast.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/sam/drivers/ast/ast.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/sam/drivers/ast/ast.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/sam/drivers/ast/ast.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/sam/drivers/ast/ast.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/sam/drivers/ast/ast.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/sam/drivers/ast/ast.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/sam/drivers/ast/ast.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/sam/drivers/ast/ast.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/sam/drivers/ast/ast.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/sam/drivers/ast/ast.c ****  *
  40:../../../platform/sam/drivers/ast/ast.c ****  * \asf_license_stop
  41:../../../platform/sam/drivers/ast/ast.c ****  *
  42:../../../platform/sam/drivers/ast/ast.c ****  */
  43:../../../platform/sam/drivers/ast/ast.c **** 
  44:../../../platform/sam/drivers/ast/ast.c **** #include "ast.h"
  45:../../../platform/sam/drivers/ast/ast.c **** #include "sysclk.h"
  46:../../../platform/sam/drivers/ast/ast.c **** #include "sleepmgr.h"
  47:../../../platform/sam/drivers/ast/ast.c **** #include "conf_ast.h"
  48:../../../platform/sam/drivers/ast/ast.c **** 
  49:../../../platform/sam/drivers/ast/ast.c **** /**
  50:../../../platform/sam/drivers/ast/ast.c ****  * \internal AST callback function pointer array
  51:../../../platform/sam/drivers/ast/ast.c ****  */
  52:../../../platform/sam/drivers/ast/ast.c **** ast_callback_t ast_callback_pointer[AST_INTERRUPT_SOURCE_NUM];
  53:../../../platform/sam/drivers/ast/ast.c **** 
  54:../../../platform/sam/drivers/ast/ast.c **** /**
  55:../../../platform/sam/drivers/ast/ast.c ****  * \brief Check the status of the AST module.
  56:../../../platform/sam/drivers/ast/ast.c ****  *
  57:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast Module hardware register base address pointer
  58:../../../platform/sam/drivers/ast/ast.c ****  *
  59:../../../platform/sam/drivers/ast/ast.c ****  * \retval false AST is not enabled
  60:../../../platform/sam/drivers/ast/ast.c ****  * \retval true  AST is enabled
  61:../../../platform/sam/drivers/ast/ast.c ****  */
  62:../../../platform/sam/drivers/ast/ast.c **** bool ast_is_enabled(
  63:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast)
  64:../../../platform/sam/drivers/ast/ast.c **** {
 658              	 .loc 7 64 0
 659              	 .cfi_startproc
 660              	 
 661              	 
 662 01e4 80B5     	 push {r7,lr}
 663              	.LCFI57:
 664              	 .cfi_def_cfa_offset 8
 665              	 .cfi_offset 7,-8
 666              	 .cfi_offset 14,-4
 667 01e6 82B0     	 sub sp,sp,#8
 668              	.LCFI58:
 669              	 .cfi_def_cfa_offset 16
 670 01e8 00AF     	 add r7,sp,#0
 671              	.LCFI59:
 672              	 .cfi_def_cfa_register 7
 673 01ea 7860     	 str r0,[r7,#4]
  65:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 674              	 .loc 7 65 0
 675 01ec 00BF     	 nop
 676              	.L36:
 677              	 .loc 7 65 0 is_stmt 0 discriminator 1
 678 01ee 7868     	 ldr r0,[r7,#4]
 679 01f0 FFF7B6FF 	 bl ast_is_busy
 680 01f4 0346     	 mov r3,r0
 681 01f6 002B     	 cmp r3,#0
 682 01f8 F9D1     	 bne .L36
  66:../../../platform/sam/drivers/ast/ast.c **** 	}
  67:../../../platform/sam/drivers/ast/ast.c **** 	return ((ast->AST_CR & AST_CR_EN) != 0);
 683              	 .loc 7 67 0 is_stmt 1
 684 01fa 7B68     	 ldr r3,[r7,#4]
 685 01fc 1B68     	 ldr r3,[r3]
 686 01fe 03F00103 	 and r3,r3,#1
 687 0202 002B     	 cmp r3,#0
 688 0204 14BF     	 ite ne
 689 0206 0123     	 movne r3,#1
 690 0208 0023     	 moveq r3,#0
 691 020a DBB2     	 uxtb r3,r3
  68:../../../platform/sam/drivers/ast/ast.c **** }
 692              	 .loc 7 68 0
 693 020c 1846     	 mov r0,r3
 694 020e 0837     	 adds r7,r7,#8
 695              	.LCFI60:
 696              	 .cfi_def_cfa_offset 8
 697 0210 BD46     	 mov sp,r7
 698              	.LCFI61:
 699              	 .cfi_def_cfa_register 13
 700              	 
 701 0212 80BD     	 pop {r7,pc}
 702              	 .cfi_endproc
 703              	.LFE195:
 705              	 .align 1
 706              	 .global ast_enable
 707              	 .syntax unified
 708              	 .thumb
 709              	 .thumb_func
 710              	 .fpu softvfp
 712              	ast_enable:
 713              	.LFB196:
  69:../../../platform/sam/drivers/ast/ast.c **** 
  70:../../../platform/sam/drivers/ast/ast.c **** /**
  71:../../../platform/sam/drivers/ast/ast.c ****  * \brief Enable the AST module.
  72:../../../platform/sam/drivers/ast/ast.c ****  *
  73:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] ast Module hardware register base address pointer
  74:../../../platform/sam/drivers/ast/ast.c ****  */
  75:../../../platform/sam/drivers/ast/ast.c **** void ast_enable(
  76:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast)
  77:../../../platform/sam/drivers/ast/ast.c **** {
 714              	 .loc 7 77 0
 715              	 .cfi_startproc
 716              	 
 717              	 
 718 0214 80B5     	 push {r7,lr}
 719              	.LCFI62:
 720              	 .cfi_def_cfa_offset 8
 721              	 .cfi_offset 7,-8
 722              	 .cfi_offset 14,-4
 723 0216 82B0     	 sub sp,sp,#8
 724              	.LCFI63:
 725              	 .cfi_def_cfa_offset 16
 726 0218 00AF     	 add r7,sp,#0
 727              	.LCFI64:
 728              	 .cfi_def_cfa_register 7
 729 021a 7860     	 str r0,[r7,#4]
  78:../../../platform/sam/drivers/ast/ast.c **** 	sysclk_enable_peripheral_clock(ast);
 730              	 .loc 7 78 0
 731 021c 7868     	 ldr r0,[r7,#4]
 732 021e 044B     	 ldr r3,.L39
 733 0220 9847     	 blx r3
 734              	.LVL0:
  79:../../../platform/sam/drivers/ast/ast.c **** 	sleepmgr_lock_mode(SLEEPMGR_BACKUP);
 735              	 .loc 7 79 0
 736 0222 0720     	 movs r0,#7
 737 0224 FFF7AEFF 	 bl sleepmgr_lock_mode
  80:../../../platform/sam/drivers/ast/ast.c **** }
 738              	 .loc 7 80 0
 739 0228 00BF     	 nop
 740 022a 0837     	 adds r7,r7,#8
 741              	.LCFI65:
 742              	 .cfi_def_cfa_offset 8
 743 022c BD46     	 mov sp,r7
 744              	.LCFI66:
 745              	 .cfi_def_cfa_register 13
 746              	 
 747 022e 80BD     	 pop {r7,pc}
 748              	.L40:
 749              	 .align 2
 750              	.L39:
 751 0230 00000000 	 .word sysclk_enable_peripheral_clock
 752              	 .cfi_endproc
 753              	.LFE196:
 755              	 .align 1
 756              	 .global ast_disable
 757              	 .syntax unified
 758              	 .thumb
 759              	 .thumb_func
 760              	 .fpu softvfp
 762              	ast_disable:
 763              	.LFB197:
  81:../../../platform/sam/drivers/ast/ast.c **** 
  82:../../../platform/sam/drivers/ast/ast.c **** /**
  83:../../../platform/sam/drivers/ast/ast.c ****  * \brief Disable the AST counter and module.
  84:../../../platform/sam/drivers/ast/ast.c ****  *
  85:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast Module hardware register base address pointer
  86:../../../platform/sam/drivers/ast/ast.c ****  */
  87:../../../platform/sam/drivers/ast/ast.c **** void ast_disable(
  88:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast)
  89:../../../platform/sam/drivers/ast/ast.c **** {
 764              	 .loc 7 89 0
 765              	 .cfi_startproc
 766              	 
 767              	 
 768 0234 80B5     	 push {r7,lr}
 769              	.LCFI67:
 770              	 .cfi_def_cfa_offset 8
 771              	 .cfi_offset 7,-8
 772              	 .cfi_offset 14,-4
 773 0236 82B0     	 sub sp,sp,#8
 774              	.LCFI68:
 775              	 .cfi_def_cfa_offset 16
 776 0238 00AF     	 add r7,sp,#0
 777              	.LCFI69:
 778              	 .cfi_def_cfa_register 7
 779 023a 7860     	 str r0,[r7,#4]
  90:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
  91:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 780              	 .loc 7 91 0
 781 023c 00BF     	 nop
 782              	.L42:
 783              	 .loc 7 91 0 is_stmt 0 discriminator 1
 784 023e 7868     	 ldr r0,[r7,#4]
 785 0240 FFF78EFF 	 bl ast_is_busy
 786 0244 0346     	 mov r3,r0
 787 0246 002B     	 cmp r3,#0
 788 0248 F9D1     	 bne .L42
  92:../../../platform/sam/drivers/ast/ast.c **** 	}
  93:../../../platform/sam/drivers/ast/ast.c **** 	/* Disable the AST */
  94:../../../platform/sam/drivers/ast/ast.c **** 	ast->AST_CR &= ~(AST_CR_EN);
 789              	 .loc 7 94 0 is_stmt 1
 790 024a 7B68     	 ldr r3,[r7,#4]
 791 024c 1B68     	 ldr r3,[r3]
 792 024e 23F00102 	 bic r2,r3,#1
 793 0252 7B68     	 ldr r3,[r7,#4]
 794 0254 1A60     	 str r2,[r3]
  95:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until write is done */
  96:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 795              	 .loc 7 96 0
 796 0256 00BF     	 nop
 797              	.L43:
 798              	 .loc 7 96 0 is_stmt 0 discriminator 1
 799 0258 7868     	 ldr r0,[r7,#4]
 800 025a FFF781FF 	 bl ast_is_busy
 801 025e 0346     	 mov r3,r0
 802 0260 002B     	 cmp r3,#0
 803 0262 F9D1     	 bne .L43
  97:../../../platform/sam/drivers/ast/ast.c **** 	}
  98:../../../platform/sam/drivers/ast/ast.c **** 
  99:../../../platform/sam/drivers/ast/ast.c **** 	sysclk_disable_peripheral_clock(ast);
 804              	 .loc 7 99 0 is_stmt 1
 805 0264 7868     	 ldr r0,[r7,#4]
 806 0266 044B     	 ldr r3,.L44
 807 0268 9847     	 blx r3
 808              	.LVL1:
 100:../../../platform/sam/drivers/ast/ast.c **** 	sleepmgr_unlock_mode(SLEEPMGR_BACKUP);
 809              	 .loc 7 100 0
 810 026a 0720     	 movs r0,#7
 811 026c FFF7A2FF 	 bl sleepmgr_unlock_mode
 101:../../../platform/sam/drivers/ast/ast.c **** }
 812              	 .loc 7 101 0
 813 0270 00BF     	 nop
 814 0272 0837     	 adds r7,r7,#8
 815              	.LCFI70:
 816              	 .cfi_def_cfa_offset 8
 817 0274 BD46     	 mov sp,r7
 818              	.LCFI71:
 819              	 .cfi_def_cfa_register 13
 820              	 
 821 0276 80BD     	 pop {r7,pc}
 822              	.L45:
 823              	 .align 2
 824              	.L44:
 825 0278 00000000 	 .word sysclk_disable_peripheral_clock
 826              	 .cfi_endproc
 827              	.LFE197:
 829              	 .align 1
 830              	 .global ast_enable_counter_clear_on_alarm
 831              	 .syntax unified
 832              	 .thumb
 833              	 .thumb_func
 834              	 .fpu softvfp
 836              	ast_enable_counter_clear_on_alarm:
 837              	.LFB198:
 102:../../../platform/sam/drivers/ast/ast.c **** 
 103:../../../platform/sam/drivers/ast/ast.c **** /**
 104:../../../platform/sam/drivers/ast/ast.c ****  * \brief Enable the option to clear the counter on an AST alarm.
 105:../../../platform/sam/drivers/ast/ast.c ****  *
 106:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast        Module hardware register base address pointer
 107:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] alarm_channel  AST Alarm Channel
 108:../../../platform/sam/drivers/ast/ast.c ****  */
 109:../../../platform/sam/drivers/ast/ast.c **** void ast_enable_counter_clear_on_alarm(
 110:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast,
 111:../../../platform/sam/drivers/ast/ast.c **** 		uint8_t alarm_channel)
 112:../../../platform/sam/drivers/ast/ast.c **** {
 838              	 .loc 7 112 0
 839              	 .cfi_startproc
 840              	 
 841              	 
 842 027c 80B5     	 push {r7,lr}
 843              	.LCFI72:
 844              	 .cfi_def_cfa_offset 8
 845              	 .cfi_offset 7,-8
 846              	 .cfi_offset 14,-4
 847 027e 82B0     	 sub sp,sp,#8
 848              	.LCFI73:
 849              	 .cfi_def_cfa_offset 16
 850 0280 00AF     	 add r7,sp,#0
 851              	.LCFI74:
 852              	 .cfi_def_cfa_register 7
 853 0282 7860     	 str r0,[r7,#4]
 854 0284 0B46     	 mov r3,r1
 855 0286 FB70     	 strb r3,[r7,#3]
 113:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
 114:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 856              	 .loc 7 114 0
 857 0288 00BF     	 nop
 858              	.L47:
 859              	 .loc 7 114 0 is_stmt 0 discriminator 1
 860 028a 7868     	 ldr r0,[r7,#4]
 861 028c FFF768FF 	 bl ast_is_busy
 862 0290 0346     	 mov r3,r0
 863 0292 002B     	 cmp r3,#0
 864 0294 F9D1     	 bne .L47
 115:../../../platform/sam/drivers/ast/ast.c **** 	}
 116:../../../platform/sam/drivers/ast/ast.c **** 	/* Enable Clear Counter on Alarm */
 117:../../../platform/sam/drivers/ast/ast.c **** 	ast->AST_CR
 118:../../../platform/sam/drivers/ast/ast.c **** 		|= (alarm_channel ? 0 : AST_CR_CA0);
 865              	 .loc 7 118 0 is_stmt 1
 866 0296 7B68     	 ldr r3,[r7,#4]
 867 0298 1A68     	 ldr r2,[r3]
 868 029a FB78     	 ldrb r3,[r7,#3]
 869 029c 002B     	 cmp r3,#0
 870 029e 01D0     	 beq .L48
 871              	 .loc 7 118 0 is_stmt 0 discriminator 1
 872 02a0 0023     	 movs r3,#0
 873 02a2 01E0     	 b .L49
 874              	.L48:
 875              	 .loc 7 118 0 discriminator 2
 876 02a4 4FF48073 	 mov r3,#256
 877              	.L49:
 878              	 .loc 7 118 0 discriminator 4
 879 02a8 1A43     	 orrs r2,r2,r3
 880 02aa 7B68     	 ldr r3,[r7,#4]
 881 02ac 1A60     	 str r2,[r3]
 119:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until write is done */
 120:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 882              	 .loc 7 120 0 is_stmt 1 discriminator 4
 883 02ae 00BF     	 nop
 884              	.L50:
 885              	 .loc 7 120 0 is_stmt 0 discriminator 1
 886 02b0 7868     	 ldr r0,[r7,#4]
 887 02b2 FFF755FF 	 bl ast_is_busy
 888 02b6 0346     	 mov r3,r0
 889 02b8 002B     	 cmp r3,#0
 890 02ba F9D1     	 bne .L50
 121:../../../platform/sam/drivers/ast/ast.c **** 	}
 122:../../../platform/sam/drivers/ast/ast.c **** }
 891              	 .loc 7 122 0 is_stmt 1
 892 02bc 00BF     	 nop
 893 02be 0837     	 adds r7,r7,#8
 894              	.LCFI75:
 895              	 .cfi_def_cfa_offset 8
 896 02c0 BD46     	 mov sp,r7
 897              	.LCFI76:
 898              	 .cfi_def_cfa_register 13
 899              	 
 900 02c2 80BD     	 pop {r7,pc}
 901              	 .cfi_endproc
 902              	.LFE198:
 904              	 .align 1
 905              	 .global ast_clear_prescalar
 906              	 .syntax unified
 907              	 .thumb
 908              	 .thumb_func
 909              	 .fpu softvfp
 911              	ast_clear_prescalar:
 912              	.LFB199:
 123:../../../platform/sam/drivers/ast/ast.c **** 
 124:../../../platform/sam/drivers/ast/ast.c **** /**
 125:../../../platform/sam/drivers/ast/ast.c ****  * \brief Clear the AST periodic prescaler counter to zero.
 126:../../../platform/sam/drivers/ast/ast.c ****  *
 127:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast Module hardware register base address pointer
 128:../../../platform/sam/drivers/ast/ast.c ****  */
 129:../../../platform/sam/drivers/ast/ast.c **** void ast_clear_prescalar(
 130:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast)
 131:../../../platform/sam/drivers/ast/ast.c **** {
 913              	 .loc 7 131 0
 914              	 .cfi_startproc
 915              	 
 916              	 
 917 02c4 80B5     	 push {r7,lr}
 918              	.LCFI77:
 919              	 .cfi_def_cfa_offset 8
 920              	 .cfi_offset 7,-8
 921              	 .cfi_offset 14,-4
 922 02c6 82B0     	 sub sp,sp,#8
 923              	.LCFI78:
 924              	 .cfi_def_cfa_offset 16
 925 02c8 00AF     	 add r7,sp,#0
 926              	.LCFI79:
 927              	 .cfi_def_cfa_register 7
 928 02ca 7860     	 str r0,[r7,#4]
 132:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
 133:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 929              	 .loc 7 133 0
 930 02cc 00BF     	 nop
 931              	.L52:
 932              	 .loc 7 133 0 is_stmt 0 discriminator 1
 933 02ce 7868     	 ldr r0,[r7,#4]
 934 02d0 FFF746FF 	 bl ast_is_busy
 935 02d4 0346     	 mov r3,r0
 936 02d6 002B     	 cmp r3,#0
 937 02d8 F9D1     	 bne .L52
 134:../../../platform/sam/drivers/ast/ast.c **** 	}
 135:../../../platform/sam/drivers/ast/ast.c **** 	/* Clear Counter on Alarm */
 136:../../../platform/sam/drivers/ast/ast.c **** 	ast->AST_CR |= AST_CR_PCLR;
 938              	 .loc 7 136 0 is_stmt 1
 939 02da 7B68     	 ldr r3,[r7,#4]
 940 02dc 1B68     	 ldr r3,[r3]
 941 02de 43F00202 	 orr r2,r3,#2
 942 02e2 7B68     	 ldr r3,[r7,#4]
 943 02e4 1A60     	 str r2,[r3]
 137:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until write is done */
 138:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 944              	 .loc 7 138 0
 945 02e6 00BF     	 nop
 946              	.L53:
 947              	 .loc 7 138 0 is_stmt 0 discriminator 1
 948 02e8 7868     	 ldr r0,[r7,#4]
 949 02ea FFF739FF 	 bl ast_is_busy
 950 02ee 0346     	 mov r3,r0
 951 02f0 002B     	 cmp r3,#0
 952 02f2 F9D1     	 bne .L53
 139:../../../platform/sam/drivers/ast/ast.c **** 	}
 140:../../../platform/sam/drivers/ast/ast.c **** }
 953              	 .loc 7 140 0 is_stmt 1
 954 02f4 00BF     	 nop
 955 02f6 0837     	 adds r7,r7,#8
 956              	.LCFI80:
 957              	 .cfi_def_cfa_offset 8
 958 02f8 BD46     	 mov sp,r7
 959              	.LCFI81:
 960              	 .cfi_def_cfa_register 13
 961              	 
 962 02fa 80BD     	 pop {r7,pc}
 963              	 .cfi_endproc
 964              	.LFE199:
 966              	 .align 1
 967              	 .global ast_set_config
 968              	 .syntax unified
 969              	 .thumb
 970              	 .thumb_func
 971              	 .fpu softvfp
 973              	ast_set_config:
 974              	.LFB200:
 141:../../../platform/sam/drivers/ast/ast.c **** 
 142:../../../platform/sam/drivers/ast/ast.c **** /**
 143:../../../platform/sam/drivers/ast/ast.c ****  * \brief Initialize and enable the AST module in Calendar Mode or Counter Mode.
 144:../../../platform/sam/drivers/ast/ast.c ****  *
 145:../../../platform/sam/drivers/ast/ast.c ****  * \note  If you use the 32kHz oscillator it will be enabled by this function.
 146:../../../platform/sam/drivers/ast/ast.c ****  *
 147:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast  Module hardware register base address pointer
 148:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] ast_conf AST configuration structure pointer
 149:../../../platform/sam/drivers/ast/ast.c ****  *
 150:../../../platform/sam/drivers/ast/ast.c ****  * \return Initialization result.
 151:../../../platform/sam/drivers/ast/ast.c ****  * \retval 0 Initialization failed due to a software timeout
 152:../../../platform/sam/drivers/ast/ast.c ****  * \retval 1 Initialization succeeded
 153:../../../platform/sam/drivers/ast/ast.c **** */
 154:../../../platform/sam/drivers/ast/ast.c **** uint32_t ast_set_config(
 155:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast,
 156:../../../platform/sam/drivers/ast/ast.c **** 		struct ast_config *ast_conf)
 157:../../../platform/sam/drivers/ast/ast.c **** {
 975              	 .loc 7 157 0
 976              	 .cfi_startproc
 977              	 
 978              	 
 979 02fc 80B5     	 push {r7,lr}
 980              	.LCFI82:
 981              	 .cfi_def_cfa_offset 8
 982              	 .cfi_offset 7,-8
 983              	 .cfi_offset 14,-4
 984 02fe 84B0     	 sub sp,sp,#16
 985              	.LCFI83:
 986              	 .cfi_def_cfa_offset 24
 987 0300 00AF     	 add r7,sp,#0
 988              	.LCFI84:
 989              	 .cfi_def_cfa_register 7
 990 0302 7860     	 str r0,[r7,#4]
 991 0304 3960     	 str r1,[r7]
 158:../../../platform/sam/drivers/ast/ast.c **** 	uint32_t time_out = AST_POLL_TIMEOUT;
 992              	 .loc 7 158 0
 993 0306 42F21073 	 movw r3,#10000
 994 030a FB60     	 str r3,[r7,#12]
 159:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_clkbusy(ast)) {
 995              	 .loc 7 159 0
 996 030c 07E0     	 b .L55
 997              	.L57:
 160:../../../platform/sam/drivers/ast/ast.c **** 		if (--time_out == 0) {
 998              	 .loc 7 160 0
 999 030e FB68     	 ldr r3,[r7,#12]
 1000 0310 013B     	 subs r3,r3,#1
 1001 0312 FB60     	 str r3,[r7,#12]
 1002 0314 FB68     	 ldr r3,[r7,#12]
 1003 0316 002B     	 cmp r3,#0
 1004 0318 01D1     	 bne .L55
 161:../../../platform/sam/drivers/ast/ast.c **** 			return 0;
 1005              	 .loc 7 161 0
 1006 031a 0023     	 movs r3,#0
 1007 031c 79E0     	 b .L56
 1008              	.L55:
 159:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_clkbusy(ast)) {
 1009              	 .loc 7 159 0
 1010 031e 7868     	 ldr r0,[r7,#4]
 1011 0320 FFF70CFF 	 bl ast_is_clkbusy
 1012 0324 0346     	 mov r3,r0
 1013 0326 002B     	 cmp r3,#0
 1014 0328 F1D1     	 bne .L57
 162:../../../platform/sam/drivers/ast/ast.c **** 		}
 163:../../../platform/sam/drivers/ast/ast.c **** 	}
 164:../../../platform/sam/drivers/ast/ast.c **** 	ast->AST_CLOCK = ast_conf->osc_type << AST_CLOCK_CSSEL_Pos;
 1015              	 .loc 7 164 0
 1016 032a 3B68     	 ldr r3,[r7]
 1017 032c 5B78     	 ldrb r3,[r3,#1]
 1018 032e 1B02     	 lsls r3,r3,#8
 1019 0330 1A46     	 mov r2,r3
 1020 0332 7B68     	 ldr r3,[r7,#4]
 1021 0334 1A64     	 str r2,[r3,#64]
 165:../../../platform/sam/drivers/ast/ast.c **** 	time_out = AST_POLL_TIMEOUT;
 1022              	 .loc 7 165 0
 1023 0336 42F21073 	 movw r3,#10000
 1024 033a FB60     	 str r3,[r7,#12]
 166:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_clkbusy(ast)) {
 1025              	 .loc 7 166 0
 1026 033c 07E0     	 b .L58
 1027              	.L59:
 167:../../../platform/sam/drivers/ast/ast.c **** 		if (--time_out == 0) {
 1028              	 .loc 7 167 0
 1029 033e FB68     	 ldr r3,[r7,#12]
 1030 0340 013B     	 subs r3,r3,#1
 1031 0342 FB60     	 str r3,[r7,#12]
 1032 0344 FB68     	 ldr r3,[r7,#12]
 1033 0346 002B     	 cmp r3,#0
 1034 0348 01D1     	 bne .L58
 168:../../../platform/sam/drivers/ast/ast.c **** 			return 0;
 1035              	 .loc 7 168 0
 1036 034a 0023     	 movs r3,#0
 1037 034c 61E0     	 b .L56
 1038              	.L58:
 166:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_clkbusy(ast)) {
 1039              	 .loc 7 166 0
 1040 034e 7868     	 ldr r0,[r7,#4]
 1041 0350 FFF7F4FE 	 bl ast_is_clkbusy
 1042 0354 0346     	 mov r3,r0
 1043 0356 002B     	 cmp r3,#0
 1044 0358 F1D1     	 bne .L59
 169:../../../platform/sam/drivers/ast/ast.c **** 		}
 170:../../../platform/sam/drivers/ast/ast.c **** 	}
 171:../../../platform/sam/drivers/ast/ast.c **** 	ast->AST_CLOCK |= AST_CLOCK_CEN;
 1045              	 .loc 7 171 0
 1046 035a 7B68     	 ldr r3,[r7,#4]
 1047 035c 1B6C     	 ldr r3,[r3,#64]
 1048 035e 43F00102 	 orr r2,r3,#1
 1049 0362 7B68     	 ldr r3,[r7,#4]
 1050 0364 1A64     	 str r2,[r3,#64]
 172:../../../platform/sam/drivers/ast/ast.c **** 	time_out = AST_POLL_TIMEOUT;
 1051              	 .loc 7 172 0
 1052 0366 42F21073 	 movw r3,#10000
 1053 036a FB60     	 str r3,[r7,#12]
 173:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_clkbusy(ast)) {
 1054              	 .loc 7 173 0
 1055 036c 07E0     	 b .L60
 1056              	.L61:
 174:../../../platform/sam/drivers/ast/ast.c **** 		if (--time_out == 0) {
 1057              	 .loc 7 174 0
 1058 036e FB68     	 ldr r3,[r7,#12]
 1059 0370 013B     	 subs r3,r3,#1
 1060 0372 FB60     	 str r3,[r7,#12]
 1061 0374 FB68     	 ldr r3,[r7,#12]
 1062 0376 002B     	 cmp r3,#0
 1063 0378 01D1     	 bne .L60
 175:../../../platform/sam/drivers/ast/ast.c **** 			return 0;
 1064              	 .loc 7 175 0
 1065 037a 0023     	 movs r3,#0
 1066 037c 49E0     	 b .L56
 1067              	.L60:
 173:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_clkbusy(ast)) {
 1068              	 .loc 7 173 0
 1069 037e 7868     	 ldr r0,[r7,#4]
 1070 0380 FFF7DCFE 	 bl ast_is_clkbusy
 1071 0384 0346     	 mov r3,r0
 1072 0386 002B     	 cmp r3,#0
 1073 0388 F1D1     	 bne .L61
 176:../../../platform/sam/drivers/ast/ast.c **** 		}
 177:../../../platform/sam/drivers/ast/ast.c **** 	}
 178:../../../platform/sam/drivers/ast/ast.c **** 	/* Set the new AST configuration */
 179:../../../platform/sam/drivers/ast/ast.c **** 	if (ast_conf->mode == AST_CALENDAR_MODE) {
 1074              	 .loc 7 179 0
 1075 038a 3B68     	 ldr r3,[r7]
 1076 038c 1B78     	 ldrb r3,[r3]
 1077 038e 012B     	 cmp r3,#1
 1078 0390 06D1     	 bne .L62
 180:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_CR = AST_CR_CAL | ast_conf->psel << AST_CR_PSEL_Pos;
 1079              	 .loc 7 180 0
 1080 0392 3B68     	 ldr r3,[r7]
 1081 0394 9B78     	 ldrb r3,[r3,#2]
 1082 0396 1B04     	 lsls r3,r3,#16
 1083 0398 43F00402 	 orr r2,r3,#4
 1084 039c 7B68     	 ldr r3,[r7,#4]
 1085 039e 1A60     	 str r2,[r3]
 1086              	.L62:
 181:../../../platform/sam/drivers/ast/ast.c **** 	}
 182:../../../platform/sam/drivers/ast/ast.c **** 
 183:../../../platform/sam/drivers/ast/ast.c **** 	if (ast_conf->mode == AST_COUNTER_MODE) {
 1087              	 .loc 7 183 0
 1088 03a0 3B68     	 ldr r3,[r7]
 1089 03a2 1B78     	 ldrb r3,[r3]
 1090 03a4 002B     	 cmp r3,#0
 1091 03a6 05D1     	 bne .L69
 184:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_CR = ast_conf->psel << AST_CR_PSEL_Pos;
 1092              	 .loc 7 184 0
 1093 03a8 3B68     	 ldr r3,[r7]
 1094 03aa 9B78     	 ldrb r3,[r3,#2]
 1095 03ac 1B04     	 lsls r3,r3,#16
 1096 03ae 1A46     	 mov r2,r3
 1097 03b0 7B68     	 ldr r3,[r7,#4]
 1098 03b2 1A60     	 str r2,[r3]
 1099              	.L69:
 185:../../../platform/sam/drivers/ast/ast.c **** 	}
 186:../../../platform/sam/drivers/ast/ast.c **** 
 187:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
 188:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1100              	 .loc 7 188 0
 1101 03b4 00BF     	 nop
 1102              	.L64:
 1103              	 .loc 7 188 0 is_stmt 0 discriminator 1
 1104 03b6 7868     	 ldr r0,[r7,#4]
 1105 03b8 FFF7D2FE 	 bl ast_is_busy
 1106 03bc 0346     	 mov r3,r0
 1107 03be 002B     	 cmp r3,#0
 1108 03c0 F9D1     	 bne .L64
 189:../../../platform/sam/drivers/ast/ast.c **** 	}
 190:../../../platform/sam/drivers/ast/ast.c **** 
 191:../../../platform/sam/drivers/ast/ast.c **** 	/* Set the calendar */
 192:../../../platform/sam/drivers/ast/ast.c **** 	if (ast_conf->mode == AST_CALENDAR_MODE) {
 1109              	 .loc 7 192 0 is_stmt 1
 1110 03c2 3B68     	 ldr r3,[r7]
 1111 03c4 1B78     	 ldrb r3,[r3]
 1112 03c6 012B     	 cmp r3,#1
 1113 03c8 04D1     	 bne .L65
 193:../../../platform/sam/drivers/ast/ast.c **** 		ast_write_calendar_value(ast, ast_conf->calendar);
 1114              	 .loc 7 193 0
 1115 03ca 3B68     	 ldr r3,[r7]
 1116 03cc 9968     	 ldr r1,[r3,#8]
 1117 03ce 7868     	 ldr r0,[r7,#4]
 1118 03d0 FFF7FEFF 	 bl ast_write_calendar_value
 1119              	.L65:
 194:../../../platform/sam/drivers/ast/ast.c **** 	}
 195:../../../platform/sam/drivers/ast/ast.c **** 
 196:../../../platform/sam/drivers/ast/ast.c **** 	if (ast_conf->mode == AST_COUNTER_MODE) {
 1120              	 .loc 7 196 0
 1121 03d4 3B68     	 ldr r3,[r7]
 1122 03d6 1B78     	 ldrb r3,[r3]
 1123 03d8 002B     	 cmp r3,#0
 1124 03da 05D1     	 bne .L70
 197:../../../platform/sam/drivers/ast/ast.c **** 		ast_write_counter_value(ast, ast_conf->counter);
 1125              	 .loc 7 197 0
 1126 03dc 3B68     	 ldr r3,[r7]
 1127 03de 5B68     	 ldr r3,[r3,#4]
 1128 03e0 1946     	 mov r1,r3
 1129 03e2 7868     	 ldr r0,[r7,#4]
 1130 03e4 FFF7FEFF 	 bl ast_write_counter_value
 1131              	.L70:
 198:../../../platform/sam/drivers/ast/ast.c **** 	}
 199:../../../platform/sam/drivers/ast/ast.c **** 
 200:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
 201:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1132              	 .loc 7 201 0
 1133 03e8 00BF     	 nop
 1134              	.L67:
 1135              	 .loc 7 201 0 is_stmt 0 discriminator 1
 1136 03ea 7868     	 ldr r0,[r7,#4]
 1137 03ec FFF7B8FE 	 bl ast_is_busy
 1138 03f0 0346     	 mov r3,r0
 1139 03f2 002B     	 cmp r3,#0
 1140 03f4 F9D1     	 bne .L67
 202:../../../platform/sam/drivers/ast/ast.c **** 	}
 203:../../../platform/sam/drivers/ast/ast.c **** 	/* Enable the AST */
 204:../../../platform/sam/drivers/ast/ast.c **** 	ast->AST_CR |= AST_CR_EN;
 1141              	 .loc 7 204 0 is_stmt 1
 1142 03f6 7B68     	 ldr r3,[r7,#4]
 1143 03f8 1B68     	 ldr r3,[r3]
 1144 03fa 43F00102 	 orr r2,r3,#1
 1145 03fe 7B68     	 ldr r3,[r7,#4]
 1146 0400 1A60     	 str r2,[r3]
 205:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until write is done */
 206:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1147              	 .loc 7 206 0
 1148 0402 00BF     	 nop
 1149              	.L68:
 1150              	 .loc 7 206 0 is_stmt 0 discriminator 1
 1151 0404 7868     	 ldr r0,[r7,#4]
 1152 0406 FFF7ABFE 	 bl ast_is_busy
 1153 040a 0346     	 mov r3,r0
 1154 040c 002B     	 cmp r3,#0
 1155 040e F9D1     	 bne .L68
 207:../../../platform/sam/drivers/ast/ast.c **** 	}
 208:../../../platform/sam/drivers/ast/ast.c **** 
 209:../../../platform/sam/drivers/ast/ast.c **** 	return 1;
 1156              	 .loc 7 209 0 is_stmt 1
 1157 0410 0123     	 movs r3,#1
 1158              	.L56:
 210:../../../platform/sam/drivers/ast/ast.c **** }
 1159              	 .loc 7 210 0
 1160 0412 1846     	 mov r0,r3
 1161 0414 1037     	 adds r7,r7,#16
 1162              	.LCFI85:
 1163              	 .cfi_def_cfa_offset 8
 1164 0416 BD46     	 mov sp,r7
 1165              	.LCFI86:
 1166              	 .cfi_def_cfa_register 13
 1167              	 
 1168 0418 80BD     	 pop {r7,pc}
 1169              	 .cfi_endproc
 1170              	.LFE200:
 1172              	 .align 1
 1173              	 .global ast_configure_digital_tuner
 1174              	 .syntax unified
 1175              	 .thumb
 1176              	 .thumb_func
 1177              	 .fpu softvfp
 1179              	ast_configure_digital_tuner:
 1180              	.LFB201:
 211:../../../platform/sam/drivers/ast/ast.c **** 
 212:../../../platform/sam/drivers/ast/ast.c **** /**
 213:../../../platform/sam/drivers/ast/ast.c ****  * \brief Tune the AST prescaler frequency to the desired frequency.
 214:../../../platform/sam/drivers/ast/ast.c ****  *
 215:../../../platform/sam/drivers/ast/ast.c ****  * \note Refer to the section entitled "digital tuner" in the ast chapter of the
 216:../../../platform/sam/drivers/ast/ast.c ****  * device-specific datasheet for more information.
 217:../../../platform/sam/drivers/ast/ast.c ****  *
 218:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast     Module hardware register base address pointer
 219:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] input_freq  Prescaled AST Clock Frequency
 220:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] tuned_freq  Desired AST frequency
 221:../../../platform/sam/drivers/ast/ast.c ****  */
 222:../../../platform/sam/drivers/ast/ast.c **** uint32_t ast_configure_digital_tuner(
 223:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast,
 224:../../../platform/sam/drivers/ast/ast.c **** 		uint32_t input_freq,
 225:../../../platform/sam/drivers/ast/ast.c **** 		uint32_t tuned_freq)
 226:../../../platform/sam/drivers/ast/ast.c **** {
 1181              	 .loc 7 226 0
 1182              	 .cfi_startproc
 1183              	 
 1184              	 
 1185 041a 80B5     	 push {r7,lr}
 1186              	.LCFI87:
 1187              	 .cfi_def_cfa_offset 8
 1188              	 .cfi_offset 7,-8
 1189              	 .cfi_offset 14,-4
 1190 041c 8AB0     	 sub sp,sp,#40
 1191              	.LCFI88:
 1192              	 .cfi_def_cfa_offset 48
 1193 041e 00AF     	 add r7,sp,#0
 1194              	.LCFI89:
 1195              	 .cfi_def_cfa_register 7
 1196 0420 F860     	 str r0,[r7,#12]
 1197 0422 B960     	 str r1,[r7,#8]
 1198 0424 7A60     	 str r2,[r7,#4]
 227:../../../platform/sam/drivers/ast/ast.c **** 	bool add;
 228:../../../platform/sam/drivers/ast/ast.c **** 	uint8_t value;
 229:../../../platform/sam/drivers/ast/ast.c **** 	uint8_t exp;
 230:../../../platform/sam/drivers/ast/ast.c **** 	uint32_t x, y, z;
 231:../../../platform/sam/drivers/ast/ast.c **** 	uint32_t diff;
 232:../../../platform/sam/drivers/ast/ast.c **** 	if (tuned_freq < input_freq) {
 1199              	 .loc 7 232 0
 1200 0426 7A68     	 ldr r2,[r7,#4]
 1201 0428 BB68     	 ldr r3,[r7,#8]
 1202 042a 9A42     	 cmp r2,r3
 1203 042c 12D2     	 bcs .L72
 233:../../../platform/sam/drivers/ast/ast.c **** 		/* Check for Frequency Limit */
 234:../../../platform/sam/drivers/ast/ast.c **** 		if (tuned_freq < ((4 * input_freq) / 5)) {
 1204              	 .loc 7 234 0
 1205 042e BB68     	 ldr r3,[r7,#8]
 1206 0430 9B00     	 lsls r3,r3,#2
 1207 0432 3A4A     	 ldr r2,.L82
 1208 0434 A2FB0323 	 umull r2,r3,r2,r3
 1209 0438 9A08     	 lsrs r2,r3,#2
 1210 043a 7B68     	 ldr r3,[r7,#4]
 1211 043c 9A42     	 cmp r2,r3
 1212 043e 01D9     	 bls .L73
 235:../../../platform/sam/drivers/ast/ast.c **** 			return 0;
 1213              	 .loc 7 235 0
 1214 0440 0023     	 movs r3,#0
 1215 0442 66E0     	 b .L74
 1216              	.L73:
 236:../../../platform/sam/drivers/ast/ast.c **** 		}
 237:../../../platform/sam/drivers/ast/ast.c **** 
 238:../../../platform/sam/drivers/ast/ast.c **** 		/* Set the ADD to 0 when freq less than input freq */
 239:../../../platform/sam/drivers/ast/ast.c **** 		add = false;
 1217              	 .loc 7 239 0
 1218 0444 0023     	 movs r3,#0
 1219 0446 87F82730 	 strb r3,[r7,#39]
 240:../../../platform/sam/drivers/ast/ast.c **** 		/* Calculate the frequency difference */
 241:../../../platform/sam/drivers/ast/ast.c **** 		diff = input_freq - tuned_freq;
 1220              	 .loc 7 241 0
 1221 044a BA68     	 ldr r2,[r7,#8]
 1222 044c 7B68     	 ldr r3,[r7,#4]
 1223 044e D31A     	 subs r3,r2,r3
 1224 0450 7B61     	 str r3,[r7,#20]
 1225 0452 18E0     	 b .L75
 1226              	.L72:
 242:../../../platform/sam/drivers/ast/ast.c **** 	} else if (tuned_freq > input_freq) {
 1227              	 .loc 7 242 0
 1228 0454 7A68     	 ldr r2,[r7,#4]
 1229 0456 BB68     	 ldr r3,[r7,#8]
 1230 0458 9A42     	 cmp r2,r3
 1231 045a 12D9     	 bls .L76
 243:../../../platform/sam/drivers/ast/ast.c **** 		/* Check for Frequency Limit */
 244:../../../platform/sam/drivers/ast/ast.c **** 		if (tuned_freq > ((4 * input_freq) / 3)) {
 1232              	 .loc 7 244 0
 1233 045c BB68     	 ldr r3,[r7,#8]
 1234 045e 9B00     	 lsls r3,r3,#2
 1235 0460 2F4A     	 ldr r2,.L82+4
 1236 0462 A2FB0323 	 umull r2,r3,r2,r3
 1237 0466 5A08     	 lsrs r2,r3,#1
 1238 0468 7B68     	 ldr r3,[r7,#4]
 1239 046a 9A42     	 cmp r2,r3
 1240 046c 01D2     	 bcs .L77
 245:../../../platform/sam/drivers/ast/ast.c **** 			return 0;
 1241              	 .loc 7 245 0
 1242 046e 0023     	 movs r3,#0
 1243 0470 4FE0     	 b .L74
 1244              	.L77:
 246:../../../platform/sam/drivers/ast/ast.c **** 		}
 247:../../../platform/sam/drivers/ast/ast.c **** 
 248:../../../platform/sam/drivers/ast/ast.c **** 		/* Set the ADD to 1 when freq greater than input freq */
 249:../../../platform/sam/drivers/ast/ast.c **** 		add = true;
 1245              	 .loc 7 249 0
 1246 0472 0123     	 movs r3,#1
 1247 0474 87F82730 	 strb r3,[r7,#39]
 250:../../../platform/sam/drivers/ast/ast.c **** 		/* Calculate the frequency difference */
 251:../../../platform/sam/drivers/ast/ast.c **** 		diff = tuned_freq - input_freq;
 1248              	 .loc 7 251 0
 1249 0478 7A68     	 ldr r2,[r7,#4]
 1250 047a BB68     	 ldr r3,[r7,#8]
 1251 047c D31A     	 subs r3,r2,r3
 1252 047e 7B61     	 str r3,[r7,#20]
 1253 0480 01E0     	 b .L75
 1254              	.L76:
 252:../../../platform/sam/drivers/ast/ast.c **** 	} else {
 253:../../../platform/sam/drivers/ast/ast.c **** 		/* required & input freq are equal */
 254:../../../platform/sam/drivers/ast/ast.c **** 		return 1;
 1255              	 .loc 7 254 0
 1256 0482 0123     	 movs r3,#1
 1257 0484 45E0     	 b .L74
 1258              	.L75:
 255:../../../platform/sam/drivers/ast/ast.c **** 	}
 256:../../../platform/sam/drivers/ast/ast.c **** 
 257:../../../platform/sam/drivers/ast/ast.c **** 	z = (tuned_freq) / (diff);
 1259              	 .loc 7 257 0
 1260 0486 7A68     	 ldr r2,[r7,#4]
 1261 0488 7B69     	 ldr r3,[r7,#20]
 1262 048a B2FBF3F3 	 udiv r3,r2,r3
 1263 048e BB61     	 str r3,[r7,#24]
 258:../../../platform/sam/drivers/ast/ast.c **** 	if ((tuned_freq % diff) > (diff / 2)) {
 1264              	 .loc 7 258 0
 1265 0490 7B68     	 ldr r3,[r7,#4]
 1266 0492 7A69     	 ldr r2,[r7,#20]
 1267 0494 B3FBF2F2 	 udiv r2,r3,r2
 1268 0498 7969     	 ldr r1,[r7,#20]
 1269 049a 01FB02F2 	 mul r2,r1,r2
 1270 049e 9A1A     	 subs r2,r3,r2
 1271 04a0 7B69     	 ldr r3,[r7,#20]
 1272 04a2 5B08     	 lsrs r3,r3,#1
 1273 04a4 9A42     	 cmp r2,r3
 1274 04a6 02D9     	 bls .L78
 259:../../../platform/sam/drivers/ast/ast.c **** 		z++;
 1275              	 .loc 7 259 0
 1276 04a8 BB69     	 ldr r3,[r7,#24]
 1277 04aa 0133     	 adds r3,r3,#1
 1278 04ac BB61     	 str r3,[r7,#24]
 1279              	.L78:
 260:../../../platform/sam/drivers/ast/ast.c **** 	}
 261:../../../platform/sam/drivers/ast/ast.c **** 
 262:../../../platform/sam/drivers/ast/ast.c **** 	/*
 263:../../../platform/sam/drivers/ast/ast.c **** 	 * Initialize with minimum possible values.
 264:../../../platform/sam/drivers/ast/ast.c **** 	 * exp value should be greater than zero, min(exp) = 1 -> min(x)= (2^1)
 265:../../../platform/sam/drivers/ast/ast.c **** 	 * = 2
 266:../../../platform/sam/drivers/ast/ast.c **** 	 * y should be greater than one -> div_ceil(256/value) where value- 0 to
 267:../../../platform/sam/drivers/ast/ast.c **** 	 * 255
 268:../../../platform/sam/drivers/ast/ast.c **** 	 * min(y) = div_ceil(256/255) = 2
 269:../../../platform/sam/drivers/ast/ast.c **** 	 */
 270:../../../platform/sam/drivers/ast/ast.c **** 	y = 2;
 1280              	 .loc 7 270 0
 1281 04ae 0223     	 movs r3,#2
 1282 04b0 FB61     	 str r3,[r7,#28]
 271:../../../platform/sam/drivers/ast/ast.c **** 	x = 2;
 1283              	 .loc 7 271 0
 1284 04b2 0223     	 movs r3,#2
 1285 04b4 3B62     	 str r3,[r7,#32]
 272:../../../platform/sam/drivers/ast/ast.c **** 	exp = 1;
 1286              	 .loc 7 272 0
 1287 04b6 0123     	 movs r3,#1
 1288 04b8 87F82630 	 strb r3,[r7,#38]
 1289              	.L81:
 273:../../../platform/sam/drivers/ast/ast.c **** 
 274:../../../platform/sam/drivers/ast/ast.c **** 	/*
 275:../../../platform/sam/drivers/ast/ast.c **** 	 * Keep exp constant and increase y value until it reaches its limit.
 276:../../../platform/sam/drivers/ast/ast.c **** 	 * Increment exp and follow the same steps until we found the closest
 277:../../../platform/sam/drivers/ast/ast.c **** 	 * possible match for the required frequency.
 278:../../../platform/sam/drivers/ast/ast.c **** 	 */
 279:../../../platform/sam/drivers/ast/ast.c **** 	do {
 280:../../../platform/sam/drivers/ast/ast.c **** 		if (y < 255) {
 1290              	 .loc 7 280 0
 1291 04bc FB69     	 ldr r3,[r7,#28]
 1292 04be FE2B     	 cmp r3,#254
 1293 04c0 03D8     	 bhi .L79
 281:../../../platform/sam/drivers/ast/ast.c **** 			y++;
 1294              	 .loc 7 281 0
 1295 04c2 FB69     	 ldr r3,[r7,#28]
 1296 04c4 0133     	 adds r3,r3,#1
 1297 04c6 FB61     	 str r3,[r7,#28]
 1298 04c8 09E0     	 b .L80
 1299              	.L79:
 282:../../../platform/sam/drivers/ast/ast.c **** 		} else {
 283:../../../platform/sam/drivers/ast/ast.c **** 			x = x << 1;
 1300              	 .loc 7 283 0
 1301 04ca 3B6A     	 ldr r3,[r7,#32]
 1302 04cc 5B00     	 lsls r3,r3,#1
 1303 04ce 3B62     	 str r3,[r7,#32]
 284:../../../platform/sam/drivers/ast/ast.c **** 			y = 2;
 1304              	 .loc 7 284 0
 1305 04d0 0223     	 movs r3,#2
 1306 04d2 FB61     	 str r3,[r7,#28]
 285:../../../platform/sam/drivers/ast/ast.c **** 			exp++;
 1307              	 .loc 7 285 0
 1308 04d4 97F82630 	 ldrb r3,[r7,#38]
 1309 04d8 0133     	 adds r3,r3,#1
 1310 04da 87F82630 	 strb r3,[r7,#38]
 1311              	.L80:
 286:../../../platform/sam/drivers/ast/ast.c **** 		}
 287:../../../platform/sam/drivers/ast/ast.c **** 	} while (z > (x * y));
 1312              	 .loc 7 287 0
 1313 04de 3B6A     	 ldr r3,[r7,#32]
 1314 04e0 FA69     	 ldr r2,[r7,#28]
 1315 04e2 02FB03F2 	 mul r2,r2,r3
 1316 04e6 BB69     	 ldr r3,[r7,#24]
 1317 04e8 9A42     	 cmp r2,r3
 1318 04ea E7D3     	 bcc .L81
 288:../../../platform/sam/drivers/ast/ast.c **** 	/* Decrement y value after exit from loop */
 289:../../../platform/sam/drivers/ast/ast.c **** 	y = y - 1;
 1319              	 .loc 7 289 0
 1320 04ec FB69     	 ldr r3,[r7,#28]
 1321 04ee 013B     	 subs r3,r3,#1
 1322 04f0 FB61     	 str r3,[r7,#28]
 290:../../../platform/sam/drivers/ast/ast.c **** 	/* Find VALUE from y */
 291:../../../platform/sam/drivers/ast/ast.c **** 	value = div_ceil(256, y);
 1323              	 .loc 7 291 0
 1324 04f2 FB69     	 ldr r3,[r7,#28]
 1325 04f4 03F1FF02 	 add r2,r3,#255
 1326 04f8 FB69     	 ldr r3,[r7,#28]
 1327 04fa B2FBF3F3 	 udiv r3,r2,r3
 1328 04fe FB74     	 strb r3,[r7,#19]
 292:../../../platform/sam/drivers/ast/ast.c **** 	/* Initialize the Digital Tuner using the required parameters */
 293:../../../platform/sam/drivers/ast/ast.c **** 	ast_init_digital_tuner(ast, add, value, exp);
 1329              	 .loc 7 293 0
 1330 0500 97F82630 	 ldrb r3,[r7,#38]
 1331 0504 FA7C     	 ldrb r2,[r7,#19]
 1332 0506 97F82710 	 ldrb r1,[r7,#39]
 1333 050a F868     	 ldr r0,[r7,#12]
 1334 050c FFF7FEFF 	 bl ast_init_digital_tuner
 294:../../../platform/sam/drivers/ast/ast.c **** 	return 1;
 1335              	 .loc 7 294 0
 1336 0510 0123     	 movs r3,#1
 1337              	.L74:
 295:../../../platform/sam/drivers/ast/ast.c **** }
 1338              	 .loc 7 295 0
 1339 0512 1846     	 mov r0,r3
 1340 0514 2837     	 adds r7,r7,#40
 1341              	.LCFI90:
 1342              	 .cfi_def_cfa_offset 8
 1343 0516 BD46     	 mov sp,r7
 1344              	.LCFI91:
 1345              	 .cfi_def_cfa_register 13
 1346              	 
 1347 0518 80BD     	 pop {r7,pc}
 1348              	.L83:
 1349 051a 00BF     	 .align 2
 1350              	.L82:
 1351 051c CDCCCCCC 	 .word -858993459
 1352 0520 ABAAAAAA 	 .word -1431655765
 1353              	 .cfi_endproc
 1354              	.LFE201:
 1356              	 .align 1
 1357              	 .global ast_init_digital_tuner
 1358              	 .syntax unified
 1359              	 .thumb
 1360              	 .thumb_func
 1361              	 .fpu softvfp
 1363              	ast_init_digital_tuner:
 1364              	.LFB202:
 296:../../../platform/sam/drivers/ast/ast.c **** 
 297:../../../platform/sam/drivers/ast/ast.c **** /**
 298:../../../platform/sam/drivers/ast/ast.c ****  * \brief Initialize the AST digital tuner.
 299:../../../platform/sam/drivers/ast/ast.c ****  *
 300:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast Module hardware register base address pointer
 301:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] add     Set to true if the frequency needs to be increased, false if it
 302:../../../platform/sam/drivers/ast/ast.c ****  *                    has to be decreased.
 303:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] value   Parameter used in the formula
 304:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] exp     Parameter used in the formula
 305:../../../platform/sam/drivers/ast/ast.c ****  */
 306:../../../platform/sam/drivers/ast/ast.c **** void ast_init_digital_tuner(
 307:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast,
 308:../../../platform/sam/drivers/ast/ast.c **** 		bool add,
 309:../../../platform/sam/drivers/ast/ast.c **** 		uint8_t value,
 310:../../../platform/sam/drivers/ast/ast.c **** 		uint8_t exp)
 311:../../../platform/sam/drivers/ast/ast.c **** {
 1365              	 .loc 7 311 0
 1366              	 .cfi_startproc
 1367              	 
 1368              	 
 1369 0524 80B5     	 push {r7,lr}
 1370              	.LCFI92:
 1371              	 .cfi_def_cfa_offset 8
 1372              	 .cfi_offset 7,-8
 1373              	 .cfi_offset 14,-4
 1374 0526 82B0     	 sub sp,sp,#8
 1375              	.LCFI93:
 1376              	 .cfi_def_cfa_offset 16
 1377 0528 00AF     	 add r7,sp,#0
 1378              	.LCFI94:
 1379              	 .cfi_def_cfa_register 7
 1380 052a 7860     	 str r0,[r7,#4]
 1381 052c 0846     	 mov r0,r1
 1382 052e 1146     	 mov r1,r2
 1383 0530 1A46     	 mov r2,r3
 1384 0532 0346     	 mov r3,r0
 1385 0534 FB70     	 strb r3,[r7,#3]
 1386 0536 0B46     	 mov r3,r1
 1387 0538 BB70     	 strb r3,[r7,#2]
 1388 053a 1346     	 mov r3,r2
 1389 053c 7B70     	 strb r3,[r7,#1]
 312:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
 313:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1390              	 .loc 7 313 0
 1391 053e 00BF     	 nop
 1392              	.L85:
 1393              	 .loc 7 313 0 is_stmt 0 discriminator 1
 1394 0540 7868     	 ldr r0,[r7,#4]
 1395 0542 FFF70DFE 	 bl ast_is_busy
 1396 0546 0346     	 mov r3,r0
 1397 0548 002B     	 cmp r3,#0
 1398 054a F9D1     	 bne .L85
 314:../../../platform/sam/drivers/ast/ast.c **** 	}
 315:../../../platform/sam/drivers/ast/ast.c **** 
 316:../../../platform/sam/drivers/ast/ast.c **** 	if (add) {
 1399              	 .loc 7 316 0 is_stmt 1
 1400 054c FB78     	 ldrb r3,[r7,#3]
 1401 054e 002B     	 cmp r3,#0
 1402 0550 0BD0     	 beq .L86
 317:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_DTR = AST_DTR_ADD | AST_DTR_VALUE(value) | AST_DTR_EXP(
 1403              	 .loc 7 317 0
 1404 0552 BB78     	 ldrb r3,[r7,#2]
 1405 0554 1B02     	 lsls r3,r3,#8
 1406 0556 9AB2     	 uxth r2,r3
 1407 0558 7B78     	 ldrb r3,[r7,#1]
 1408 055a 03F01F03 	 and r3,r3,#31
 1409 055e 1343     	 orrs r3,r3,r2
 1410 0560 43F02002 	 orr r2,r3,#32
 1411 0564 7B68     	 ldr r3,[r7,#4]
 1412 0566 5A64     	 str r2,[r3,#68]
 1413 0568 08E0     	 b .L89
 1414              	.L86:
 318:../../../platform/sam/drivers/ast/ast.c **** 				exp);
 319:../../../platform/sam/drivers/ast/ast.c **** 	} else {
 320:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_DTR = AST_DTR_VALUE(value) | AST_DTR_EXP(exp);
 1415              	 .loc 7 320 0
 1416 056a BB78     	 ldrb r3,[r7,#2]
 1417 056c 1B02     	 lsls r3,r3,#8
 1418 056e 9AB2     	 uxth r2,r3
 1419 0570 7B78     	 ldrb r3,[r7,#1]
 1420 0572 03F01F03 	 and r3,r3,#31
 1421 0576 1A43     	 orrs r2,r2,r3
 1422 0578 7B68     	 ldr r3,[r7,#4]
 1423 057a 5A64     	 str r2,[r3,#68]
 1424              	.L89:
 321:../../../platform/sam/drivers/ast/ast.c **** 	}
 322:../../../platform/sam/drivers/ast/ast.c **** 
 323:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
 324:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1425              	 .loc 7 324 0
 1426 057c 00BF     	 nop
 1427              	.L88:
 1428              	 .loc 7 324 0 is_stmt 0 discriminator 1
 1429 057e 7868     	 ldr r0,[r7,#4]
 1430 0580 FFF7EEFD 	 bl ast_is_busy
 1431 0584 0346     	 mov r3,r0
 1432 0586 002B     	 cmp r3,#0
 1433 0588 F9D1     	 bne .L88
 325:../../../platform/sam/drivers/ast/ast.c **** 	}
 326:../../../platform/sam/drivers/ast/ast.c **** }
 1434              	 .loc 7 326 0 is_stmt 1
 1435 058a 00BF     	 nop
 1436 058c 0837     	 adds r7,r7,#8
 1437              	.LCFI95:
 1438              	 .cfi_def_cfa_offset 8
 1439 058e BD46     	 mov sp,r7
 1440              	.LCFI96:
 1441              	 .cfi_def_cfa_register 13
 1442              	 
 1443 0590 80BD     	 pop {r7,pc}
 1444              	 .cfi_endproc
 1445              	.LFE202:
 1447              	 .align 1
 1448              	 .global ast_disable_digital_tuner
 1449              	 .syntax unified
 1450              	 .thumb
 1451              	 .thumb_func
 1452              	 .fpu softvfp
 1454              	ast_disable_digital_tuner:
 1455              	.LFB203:
 327:../../../platform/sam/drivers/ast/ast.c **** 
 328:../../../platform/sam/drivers/ast/ast.c **** /**
 329:../../../platform/sam/drivers/ast/ast.c ****  * \brief Disable the AST digital tuner.
 330:../../../platform/sam/drivers/ast/ast.c ****  *
 331:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast Module hardware register base address pointer
 332:../../../platform/sam/drivers/ast/ast.c ****  */
 333:../../../platform/sam/drivers/ast/ast.c **** void ast_disable_digital_tuner(
 334:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast)
 335:../../../platform/sam/drivers/ast/ast.c **** {
 1456              	 .loc 7 335 0
 1457              	 .cfi_startproc
 1458              	 
 1459              	 
 1460 0592 80B5     	 push {r7,lr}
 1461              	.LCFI97:
 1462              	 .cfi_def_cfa_offset 8
 1463              	 .cfi_offset 7,-8
 1464              	 .cfi_offset 14,-4
 1465 0594 82B0     	 sub sp,sp,#8
 1466              	.LCFI98:
 1467              	 .cfi_def_cfa_offset 16
 1468 0596 00AF     	 add r7,sp,#0
 1469              	.LCFI99:
 1470              	 .cfi_def_cfa_register 7
 1471 0598 7860     	 str r0,[r7,#4]
 336:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
 337:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1472              	 .loc 7 337 0
 1473 059a 00BF     	 nop
 1474              	.L91:
 1475              	 .loc 7 337 0 is_stmt 0 discriminator 1
 1476 059c 7868     	 ldr r0,[r7,#4]
 1477 059e FFF7DFFD 	 bl ast_is_busy
 1478 05a2 0346     	 mov r3,r0
 1479 05a4 002B     	 cmp r3,#0
 1480 05a6 F9D1     	 bne .L91
 338:../../../platform/sam/drivers/ast/ast.c **** 	}
 339:../../../platform/sam/drivers/ast/ast.c **** 	ast->AST_DTR &= ~(AST_DTR_VALUE_Msk);
 1481              	 .loc 7 339 0 is_stmt 1
 1482 05a8 7B68     	 ldr r3,[r7,#4]
 1483 05aa 5B6C     	 ldr r3,[r3,#68]
 1484 05ac 23F47F42 	 bic r2,r3,#65280
 1485 05b0 7B68     	 ldr r3,[r7,#4]
 1486 05b2 5A64     	 str r2,[r3,#68]
 340:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
 341:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1487              	 .loc 7 341 0
 1488 05b4 00BF     	 nop
 1489              	.L92:
 1490              	 .loc 7 341 0 is_stmt 0 discriminator 1
 1491 05b6 7868     	 ldr r0,[r7,#4]
 1492 05b8 FFF7D2FD 	 bl ast_is_busy
 1493 05bc 0346     	 mov r3,r0
 1494 05be 002B     	 cmp r3,#0
 1495 05c0 F9D1     	 bne .L92
 342:../../../platform/sam/drivers/ast/ast.c **** 	}
 343:../../../platform/sam/drivers/ast/ast.c **** }
 1496              	 .loc 7 343 0 is_stmt 1
 1497 05c2 00BF     	 nop
 1498 05c4 0837     	 adds r7,r7,#8
 1499              	.LCFI100:
 1500              	 .cfi_def_cfa_offset 8
 1501 05c6 BD46     	 mov sp,r7
 1502              	.LCFI101:
 1503              	 .cfi_def_cfa_register 13
 1504              	 
 1505 05c8 80BD     	 pop {r7,pc}
 1506              	 .cfi_endproc
 1507              	.LFE203:
 1509              	 .align 1
 1510              	 .global ast_write_calendar_value
 1511              	 .syntax unified
 1512              	 .thumb
 1513              	 .thumb_func
 1514              	 .fpu softvfp
 1516              	ast_write_calendar_value:
 1517              	.LFB204:
 344:../../../platform/sam/drivers/ast/ast.c **** 
 345:../../../platform/sam/drivers/ast/ast.c **** /**
 346:../../../platform/sam/drivers/ast/ast.c ****  * \brief Set the AST current calendar value.
 347:../../../platform/sam/drivers/ast/ast.c ****  *
 348:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast  Module hardware register base address pointer
 349:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] calendar Startup date structure
 350:../../../platform/sam/drivers/ast/ast.c ****  */
 351:../../../platform/sam/drivers/ast/ast.c **** void ast_write_calendar_value(
 352:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast,
 353:../../../platform/sam/drivers/ast/ast.c **** 		struct ast_calendar calendar)
 354:../../../platform/sam/drivers/ast/ast.c **** {
 1518              	 .loc 7 354 0
 1519              	 .cfi_startproc
 1520              	 
 1521              	 
 1522 05ca 80B5     	 push {r7,lr}
 1523              	.LCFI102:
 1524              	 .cfi_def_cfa_offset 8
 1525              	 .cfi_offset 7,-8
 1526              	 .cfi_offset 14,-4
 1527 05cc 82B0     	 sub sp,sp,#8
 1528              	.LCFI103:
 1529              	 .cfi_def_cfa_offset 16
 1530 05ce 00AF     	 add r7,sp,#0
 1531              	.LCFI104:
 1532              	 .cfi_def_cfa_register 7
 1533 05d0 7860     	 str r0,[r7,#4]
 1534 05d2 3960     	 str r1,[r7]
 355:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until we can write into the VAL register */
 356:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1535              	 .loc 7 356 0
 1536 05d4 00BF     	 nop
 1537              	.L94:
 1538              	 .loc 7 356 0 is_stmt 0 discriminator 1
 1539 05d6 7868     	 ldr r0,[r7,#4]
 1540 05d8 FFF7C2FD 	 bl ast_is_busy
 1541 05dc 0346     	 mov r3,r0
 1542 05de 002B     	 cmp r3,#0
 1543 05e0 F9D1     	 bne .L94
 357:../../../platform/sam/drivers/ast/ast.c **** 	}
 358:../../../platform/sam/drivers/ast/ast.c **** 	/* Set the new value */
 359:../../../platform/sam/drivers/ast/ast.c **** 	ast->AST_CALV = calendar.field;
 1544              	 .loc 7 359 0 is_stmt 1
 1545 05e2 3A68     	 ldr r2,[r7]
 1546 05e4 7B68     	 ldr r3,[r7,#4]
 1547 05e6 5A65     	 str r2,[r3,#84]
 360:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until write is done */
 361:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1548              	 .loc 7 361 0
 1549 05e8 00BF     	 nop
 1550              	.L95:
 1551              	 .loc 7 361 0 is_stmt 0 discriminator 1
 1552 05ea 7868     	 ldr r0,[r7,#4]
 1553 05ec FFF7B8FD 	 bl ast_is_busy
 1554 05f0 0346     	 mov r3,r0
 1555 05f2 002B     	 cmp r3,#0
 1556 05f4 F9D1     	 bne .L95
 362:../../../platform/sam/drivers/ast/ast.c **** 	}
 363:../../../platform/sam/drivers/ast/ast.c **** }
 1557              	 .loc 7 363 0 is_stmt 1
 1558 05f6 00BF     	 nop
 1559 05f8 0837     	 adds r7,r7,#8
 1560              	.LCFI105:
 1561              	 .cfi_def_cfa_offset 8
 1562 05fa BD46     	 mov sp,r7
 1563              	.LCFI106:
 1564              	 .cfi_def_cfa_register 13
 1565              	 
 1566 05fc 80BD     	 pop {r7,pc}
 1567              	 .cfi_endproc
 1568              	.LFE204:
 1570              	 .align 1
 1571              	 .global ast_write_counter_value
 1572              	 .syntax unified
 1573              	 .thumb
 1574              	 .thumb_func
 1575              	 .fpu softvfp
 1577              	ast_write_counter_value:
 1578              	.LFB205:
 364:../../../platform/sam/drivers/ast/ast.c **** 
 365:../../../platform/sam/drivers/ast/ast.c **** /**
 366:../../../platform/sam/drivers/ast/ast.c ****  * \brief Set the AST current counter value.
 367:../../../platform/sam/drivers/ast/ast.c ****  *
 368:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast     Module hardware register base address pointer
 369:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] ast_counter Startup counter value
 370:../../../platform/sam/drivers/ast/ast.c ****  */
 371:../../../platform/sam/drivers/ast/ast.c **** void ast_write_counter_value(
 372:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast,
 373:../../../platform/sam/drivers/ast/ast.c **** 		uint32_t ast_counter)
 374:../../../platform/sam/drivers/ast/ast.c **** {
 1579              	 .loc 7 374 0
 1580              	 .cfi_startproc
 1581              	 
 1582              	 
 1583 05fe 80B5     	 push {r7,lr}
 1584              	.LCFI107:
 1585              	 .cfi_def_cfa_offset 8
 1586              	 .cfi_offset 7,-8
 1587              	 .cfi_offset 14,-4
 1588 0600 82B0     	 sub sp,sp,#8
 1589              	.LCFI108:
 1590              	 .cfi_def_cfa_offset 16
 1591 0602 00AF     	 add r7,sp,#0
 1592              	.LCFI109:
 1593              	 .cfi_def_cfa_register 7
 1594 0604 7860     	 str r0,[r7,#4]
 1595 0606 3960     	 str r1,[r7]
 375:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until we can write into the VAL register */
 376:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1596              	 .loc 7 376 0
 1597 0608 00BF     	 nop
 1598              	.L97:
 1599              	 .loc 7 376 0 is_stmt 0 discriminator 1
 1600 060a 7868     	 ldr r0,[r7,#4]
 1601 060c FFF7A8FD 	 bl ast_is_busy
 1602 0610 0346     	 mov r3,r0
 1603 0612 002B     	 cmp r3,#0
 1604 0614 F9D1     	 bne .L97
 377:../../../platform/sam/drivers/ast/ast.c **** 	}
 378:../../../platform/sam/drivers/ast/ast.c **** 	/* Set the new val value */
 379:../../../platform/sam/drivers/ast/ast.c **** 	ast->AST_CV = ast_counter;
 1605              	 .loc 7 379 0 is_stmt 1
 1606 0616 7B68     	 ldr r3,[r7,#4]
 1607 0618 3A68     	 ldr r2,[r7]
 1608 061a 5A60     	 str r2,[r3,#4]
 380:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until write is done */
 381:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1609              	 .loc 7 381 0
 1610 061c 00BF     	 nop
 1611              	.L98:
 1612              	 .loc 7 381 0 is_stmt 0 discriminator 1
 1613 061e 7868     	 ldr r0,[r7,#4]
 1614 0620 FFF79EFD 	 bl ast_is_busy
 1615 0624 0346     	 mov r3,r0
 1616 0626 002B     	 cmp r3,#0
 1617 0628 F9D1     	 bne .L98
 382:../../../platform/sam/drivers/ast/ast.c **** 	}
 383:../../../platform/sam/drivers/ast/ast.c **** }
 1618              	 .loc 7 383 0 is_stmt 1
 1619 062a 00BF     	 nop
 1620 062c 0837     	 adds r7,r7,#8
 1621              	.LCFI110:
 1622              	 .cfi_def_cfa_offset 8
 1623 062e BD46     	 mov sp,r7
 1624              	.LCFI111:
 1625              	 .cfi_def_cfa_register 13
 1626              	 
 1627 0630 80BD     	 pop {r7,pc}
 1628              	 .cfi_endproc
 1629              	.LFE205:
 1631              	 .align 1
 1632              	 .global ast_read_calendar_value
 1633              	 .syntax unified
 1634              	 .thumb
 1635              	 .thumb_func
 1636              	 .fpu softvfp
 1638              	ast_read_calendar_value:
 1639              	.LFB206:
 384:../../../platform/sam/drivers/ast/ast.c **** 
 385:../../../platform/sam/drivers/ast/ast.c **** /**
 386:../../../platform/sam/drivers/ast/ast.c ****  * \brief Get the AST current calendar value.
 387:../../../platform/sam/drivers/ast/ast.c ****  *
 388:../../../platform/sam/drivers/ast/ast.c ****  * \note There maybe a compiler warning about returning a structure type
 389:../../../platform/sam/drivers/ast/ast.c ****  * value, however it is safe because ast_calendar is actually uint32_t type.
 390:../../../platform/sam/drivers/ast/ast.c ****  *
 391:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] ast Module hardware register base address pointer
 392:../../../platform/sam/drivers/ast/ast.c ****  *
 393:../../../platform/sam/drivers/ast/ast.c ****  * \return The AST current calendar value.
 394:../../../platform/sam/drivers/ast/ast.c ****  */
 395:../../../platform/sam/drivers/ast/ast.c **** struct ast_calendar ast_read_calendar_value(
 396:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast)
 397:../../../platform/sam/drivers/ast/ast.c **** {
 1640              	 .loc 7 397 0
 1641              	 .cfi_startproc
 1642              	 
 1643              	 
 1644              	 
 1645 0632 80B4     	 push {r7}
 1646              	.LCFI112:
 1647              	 .cfi_def_cfa_offset 4
 1648              	 .cfi_offset 7,-4
 1649 0634 85B0     	 sub sp,sp,#20
 1650              	.LCFI113:
 1651              	 .cfi_def_cfa_offset 24
 1652 0636 00AF     	 add r7,sp,#0
 1653              	.LCFI114:
 1654              	 .cfi_def_cfa_register 7
 1655 0638 7860     	 str r0,[r7,#4]
 398:../../../platform/sam/drivers/ast/ast.c **** 	struct ast_calendar calendar;
 399:../../../platform/sam/drivers/ast/ast.c **** 	calendar.field = ast->AST_CALV;
 1656              	 .loc 7 399 0
 1657 063a 7B68     	 ldr r3,[r7,#4]
 1658 063c 5B6D     	 ldr r3,[r3,#84]
 1659 063e FB60     	 str r3,[r7,#12]
 400:../../../platform/sam/drivers/ast/ast.c **** 	return calendar;
 1660              	 .loc 7 400 0
 1661 0640 FB68     	 ldr r3,[r7,#12]
 401:../../../platform/sam/drivers/ast/ast.c **** }
 1662              	 .loc 7 401 0
 1663 0642 1846     	 mov r0,r3
 1664 0644 1437     	 adds r7,r7,#20
 1665              	.LCFI115:
 1666              	 .cfi_def_cfa_offset 4
 1667 0646 BD46     	 mov sp,r7
 1668              	.LCFI116:
 1669              	 .cfi_def_cfa_register 13
 1670              	 
 1671 0648 80BC     	 pop {r7}
 1672              	.LCFI117:
 1673              	 .cfi_restore 7
 1674              	 .cfi_def_cfa_offset 0
 1675 064a 7047     	 bx lr
 1676              	 .cfi_endproc
 1677              	.LFE206:
 1679              	 .align 1
 1680              	 .global ast_write_alarm0_value
 1681              	 .syntax unified
 1682              	 .thumb
 1683              	 .thumb_func
 1684              	 .fpu softvfp
 1686              	ast_write_alarm0_value:
 1687              	.LFB207:
 402:../../../platform/sam/drivers/ast/ast.c **** 
 403:../../../platform/sam/drivers/ast/ast.c **** /**
 404:../../../platform/sam/drivers/ast/ast.c ****  * \brief Set the AST alarm0 value.
 405:../../../platform/sam/drivers/ast/ast.c ****  *
 406:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast     Module hardware register base address pointer
 407:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] alarm_value AST alarm0 value
 408:../../../platform/sam/drivers/ast/ast.c ****  */
 409:../../../platform/sam/drivers/ast/ast.c **** void ast_write_alarm0_value(
 410:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast,
 411:../../../platform/sam/drivers/ast/ast.c **** 		uint32_t alarm_value)
 412:../../../platform/sam/drivers/ast/ast.c **** {
 1688              	 .loc 7 412 0
 1689              	 .cfi_startproc
 1690              	 
 1691              	 
 1692 064c 80B5     	 push {r7,lr}
 1693              	.LCFI118:
 1694              	 .cfi_def_cfa_offset 8
 1695              	 .cfi_offset 7,-8
 1696              	 .cfi_offset 14,-4
 1697 064e 82B0     	 sub sp,sp,#8
 1698              	.LCFI119:
 1699              	 .cfi_def_cfa_offset 16
 1700 0650 00AF     	 add r7,sp,#0
 1701              	.LCFI120:
 1702              	 .cfi_def_cfa_register 7
 1703 0652 7860     	 str r0,[r7,#4]
 1704 0654 3960     	 str r1,[r7]
 413:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
 414:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1705              	 .loc 7 414 0
 1706 0656 00BF     	 nop
 1707              	.L102:
 1708              	 .loc 7 414 0 is_stmt 0 discriminator 1
 1709 0658 7868     	 ldr r0,[r7,#4]
 1710 065a FFF781FD 	 bl ast_is_busy
 1711 065e 0346     	 mov r3,r0
 1712 0660 002B     	 cmp r3,#0
 1713 0662 F9D1     	 bne .L102
 415:../../../platform/sam/drivers/ast/ast.c **** 	}
 416:../../../platform/sam/drivers/ast/ast.c **** 	/* Set the new alarm0 compare value */
 417:../../../platform/sam/drivers/ast/ast.c **** 	ast->AST_AR0 = alarm_value;
 1714              	 .loc 7 417 0 is_stmt 1
 1715 0664 7B68     	 ldr r3,[r7,#4]
 1716 0666 3A68     	 ldr r2,[r7]
 1717 0668 1A62     	 str r2,[r3,#32]
 418:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until write is done */
 419:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1718              	 .loc 7 419 0
 1719 066a 00BF     	 nop
 1720              	.L103:
 1721              	 .loc 7 419 0 is_stmt 0 discriminator 1
 1722 066c 7868     	 ldr r0,[r7,#4]
 1723 066e FFF777FD 	 bl ast_is_busy
 1724 0672 0346     	 mov r3,r0
 1725 0674 002B     	 cmp r3,#0
 1726 0676 F9D1     	 bne .L103
 420:../../../platform/sam/drivers/ast/ast.c **** 	}
 421:../../../platform/sam/drivers/ast/ast.c **** }
 1727              	 .loc 7 421 0 is_stmt 1
 1728 0678 00BF     	 nop
 1729 067a 0837     	 adds r7,r7,#8
 1730              	.LCFI121:
 1731              	 .cfi_def_cfa_offset 8
 1732 067c BD46     	 mov sp,r7
 1733              	.LCFI122:
 1734              	 .cfi_def_cfa_register 13
 1735              	 
 1736 067e 80BD     	 pop {r7,pc}
 1737              	 .cfi_endproc
 1738              	.LFE207:
 1740              	 .align 1
 1741              	 .global ast_write_periodic0_value
 1742              	 .syntax unified
 1743              	 .thumb
 1744              	 .thumb_func
 1745              	 .fpu softvfp
 1747              	ast_write_periodic0_value:
 1748              	.LFB208:
 422:../../../platform/sam/drivers/ast/ast.c **** 
 423:../../../platform/sam/drivers/ast/ast.c **** /**
 424:../../../platform/sam/drivers/ast/ast.c ****  * \brief Set the AST periodic0 value.
 425:../../../platform/sam/drivers/ast/ast.c ****  *
 426:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast Module hardware register base address pointer
 427:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] pir     AST periodic0
 428:../../../platform/sam/drivers/ast/ast.c ****  */
 429:../../../platform/sam/drivers/ast/ast.c **** void ast_write_periodic0_value(
 430:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast,
 431:../../../platform/sam/drivers/ast/ast.c **** 		uint32_t pir)
 432:../../../platform/sam/drivers/ast/ast.c **** {
 1749              	 .loc 7 432 0
 1750              	 .cfi_startproc
 1751              	 
 1752              	 
 1753 0680 80B5     	 push {r7,lr}
 1754              	.LCFI123:
 1755              	 .cfi_def_cfa_offset 8
 1756              	 .cfi_offset 7,-8
 1757              	 .cfi_offset 14,-4
 1758 0682 82B0     	 sub sp,sp,#8
 1759              	.LCFI124:
 1760              	 .cfi_def_cfa_offset 16
 1761 0684 00AF     	 add r7,sp,#0
 1762              	.LCFI125:
 1763              	 .cfi_def_cfa_register 7
 1764 0686 7860     	 str r0,[r7,#4]
 1765 0688 3960     	 str r1,[r7]
 433:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
 434:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1766              	 .loc 7 434 0
 1767 068a 00BF     	 nop
 1768              	.L105:
 1769              	 .loc 7 434 0 is_stmt 0 discriminator 1
 1770 068c 7868     	 ldr r0,[r7,#4]
 1771 068e FFF767FD 	 bl ast_is_busy
 1772 0692 0346     	 mov r3,r0
 1773 0694 002B     	 cmp r3,#0
 1774 0696 F9D1     	 bne .L105
 435:../../../platform/sam/drivers/ast/ast.c **** 	}
 436:../../../platform/sam/drivers/ast/ast.c **** 	/* Set the periodic prescaler value */
 437:../../../platform/sam/drivers/ast/ast.c **** 	ast->AST_PIR0 = pir;
 1775              	 .loc 7 437 0 is_stmt 1
 1776 0698 7B68     	 ldr r3,[r7,#4]
 1777 069a 3A68     	 ldr r2,[r7]
 1778 069c 1A63     	 str r2,[r3,#48]
 438:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until write is done */
 439:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1779              	 .loc 7 439 0
 1780 069e 00BF     	 nop
 1781              	.L106:
 1782              	 .loc 7 439 0 is_stmt 0 discriminator 1
 1783 06a0 7868     	 ldr r0,[r7,#4]
 1784 06a2 FFF75DFD 	 bl ast_is_busy
 1785 06a6 0346     	 mov r3,r0
 1786 06a8 002B     	 cmp r3,#0
 1787 06aa F9D1     	 bne .L106
 440:../../../platform/sam/drivers/ast/ast.c **** 	}
 441:../../../platform/sam/drivers/ast/ast.c **** }
 1788              	 .loc 7 441 0 is_stmt 1
 1789 06ac 00BF     	 nop
 1790 06ae 0837     	 adds r7,r7,#8
 1791              	.LCFI126:
 1792              	 .cfi_def_cfa_offset 8
 1793 06b0 BD46     	 mov sp,r7
 1794              	.LCFI127:
 1795              	 .cfi_def_cfa_register 13
 1796              	 
 1797 06b2 80BD     	 pop {r7,pc}
 1798              	 .cfi_endproc
 1799              	.LFE208:
 1801              	 .align 1
 1802              	 .global ast_enable_interrupt
 1803              	 .syntax unified
 1804              	 .thumb
 1805              	 .thumb_func
 1806              	 .fpu softvfp
 1808              	ast_enable_interrupt:
 1809              	.LFB209:
 442:../../../platform/sam/drivers/ast/ast.c **** 
 443:../../../platform/sam/drivers/ast/ast.c **** /**
 444:../../../platform/sam/drivers/ast/ast.c ****  * \brief Enable an AST interrupt.
 445:../../../platform/sam/drivers/ast/ast.c ****  *
 446:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast Module hardware register base address pointer
 447:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] source  AST interrupt source to be enabled
 448:../../../platform/sam/drivers/ast/ast.c ****  */
 449:../../../platform/sam/drivers/ast/ast.c **** void ast_enable_interrupt(
 450:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast,
 451:../../../platform/sam/drivers/ast/ast.c **** 		ast_interrupt_source_t source)
 452:../../../platform/sam/drivers/ast/ast.c **** {
 1810              	 .loc 7 452 0
 1811              	 .cfi_startproc
 1812              	 
 1813              	 
 1814 06b4 80B5     	 push {r7,lr}
 1815              	.LCFI128:
 1816              	 .cfi_def_cfa_offset 8
 1817              	 .cfi_offset 7,-8
 1818              	 .cfi_offset 14,-4
 1819 06b6 82B0     	 sub sp,sp,#8
 1820              	.LCFI129:
 1821              	 .cfi_def_cfa_offset 16
 1822 06b8 00AF     	 add r7,sp,#0
 1823              	.LCFI130:
 1824              	 .cfi_def_cfa_register 7
 1825 06ba 7860     	 str r0,[r7,#4]
 1826 06bc 0B46     	 mov r3,r1
 1827 06be FB70     	 strb r3,[r7,#3]
 453:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
 454:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1828              	 .loc 7 454 0
 1829 06c0 00BF     	 nop
 1830              	.L108:
 1831              	 .loc 7 454 0 is_stmt 0 discriminator 1
 1832 06c2 7868     	 ldr r0,[r7,#4]
 1833 06c4 FFF74CFD 	 bl ast_is_busy
 1834 06c8 0346     	 mov r3,r0
 1835 06ca 002B     	 cmp r3,#0
 1836 06cc F9D1     	 bne .L108
 455:../../../platform/sam/drivers/ast/ast.c **** 	}
 456:../../../platform/sam/drivers/ast/ast.c **** 
 457:../../../platform/sam/drivers/ast/ast.c **** 	switch (source) {
 1837              	 .loc 7 457 0 is_stmt 1
 1838 06ce FB78     	 ldrb r3,[r7,#3]
 1839 06d0 042B     	 cmp r3,#4
 1840 06d2 25D8     	 bhi .L118
 1841 06d4 01A2     	 adr r2,.L111
 1842 06d6 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1843 06da 00BF     	 .p2align 2
 1844              	.L111:
 1845 06dc F1060000 	 .word .L110+1
 1846 06e0 FB060000 	 .word .L112+1
 1847 06e4 05070000 	 .word .L113+1
 1848 06e8 0D070000 	 .word .L114+1
 1849 06ec 17070000 	 .word .L115+1
 1850              	 .p2align 1
 1851              	.L110:
 458:../../../platform/sam/drivers/ast/ast.c **** 	case AST_INTERRUPT_ALARM:
 459:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_IER = AST_IER_ALARM0_1;
 1852              	 .loc 7 459 0
 1853 06f0 7B68     	 ldr r3,[r7,#4]
 1854 06f2 4FF48072 	 mov r2,#256
 1855 06f6 1A61     	 str r2,[r3,#16]
 460:../../../platform/sam/drivers/ast/ast.c **** 		break;
 1856              	 .loc 7 460 0
 1857 06f8 13E0     	 b .L116
 1858              	.L112:
 461:../../../platform/sam/drivers/ast/ast.c **** 
 462:../../../platform/sam/drivers/ast/ast.c **** 	case AST_INTERRUPT_PER:
 463:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_IER = AST_IER_PER0_1;
 1859              	 .loc 7 463 0
 1860 06fa 7B68     	 ldr r3,[r7,#4]
 1861 06fc 4FF48032 	 mov r2,#65536
 1862 0700 1A61     	 str r2,[r3,#16]
 464:../../../platform/sam/drivers/ast/ast.c **** 		break;
 1863              	 .loc 7 464 0
 1864 0702 0EE0     	 b .L116
 1865              	.L113:
 465:../../../platform/sam/drivers/ast/ast.c **** 
 466:../../../platform/sam/drivers/ast/ast.c **** 	case AST_INTERRUPT_OVF:
 467:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_IER = AST_IER_OVF_1;
 1866              	 .loc 7 467 0
 1867 0704 7B68     	 ldr r3,[r7,#4]
 1868 0706 0122     	 movs r2,#1
 1869 0708 1A61     	 str r2,[r3,#16]
 468:../../../platform/sam/drivers/ast/ast.c **** 		break;
 1870              	 .loc 7 468 0
 1871 070a 0AE0     	 b .L116
 1872              	.L114:
 469:../../../platform/sam/drivers/ast/ast.c **** 
 470:../../../platform/sam/drivers/ast/ast.c **** 	case AST_INTERRUPT_READY:
 471:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_IER = AST_IER_READY_1;
 1873              	 .loc 7 471 0
 1874 070c 7B68     	 ldr r3,[r7,#4]
 1875 070e 4FF00072 	 mov r2,#33554432
 1876 0712 1A61     	 str r2,[r3,#16]
 472:../../../platform/sam/drivers/ast/ast.c **** 		break;
 1877              	 .loc 7 472 0
 1878 0714 05E0     	 b .L116
 1879              	.L115:
 473:../../../platform/sam/drivers/ast/ast.c **** 
 474:../../../platform/sam/drivers/ast/ast.c **** 	case AST_INTERRUPT_CLKREADY:
 475:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_IER = AST_IER_CLKRDY_1;
 1880              	 .loc 7 475 0
 1881 0716 7B68     	 ldr r3,[r7,#4]
 1882 0718 4FF00052 	 mov r2,#536870912
 1883 071c 1A61     	 str r2,[r3,#16]
 476:../../../platform/sam/drivers/ast/ast.c **** 		break;
 1884              	 .loc 7 476 0
 1885 071e 00E0     	 b .L116
 1886              	.L118:
 477:../../../platform/sam/drivers/ast/ast.c **** 
 478:../../../platform/sam/drivers/ast/ast.c **** 	default:
 479:../../../platform/sam/drivers/ast/ast.c **** 		break;
 1887              	 .loc 7 479 0
 1888 0720 00BF     	 nop
 1889              	.L116:
 480:../../../platform/sam/drivers/ast/ast.c **** 	}
 481:../../../platform/sam/drivers/ast/ast.c **** 
 482:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until write is done */
 483:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1890              	 .loc 7 483 0 discriminator 1
 1891 0722 00BF     	 nop
 1892              	.L117:
 1893 0724 7868     	 ldr r0,[r7,#4]
 1894 0726 FFF71BFD 	 bl ast_is_busy
 1895 072a 0346     	 mov r3,r0
 1896 072c 002B     	 cmp r3,#0
 1897 072e F9D1     	 bne .L117
 484:../../../platform/sam/drivers/ast/ast.c **** 	}
 485:../../../platform/sam/drivers/ast/ast.c **** }
 1898              	 .loc 7 485 0
 1899 0730 00BF     	 nop
 1900 0732 0837     	 adds r7,r7,#8
 1901              	.LCFI131:
 1902              	 .cfi_def_cfa_offset 8
 1903 0734 BD46     	 mov sp,r7
 1904              	.LCFI132:
 1905              	 .cfi_def_cfa_register 13
 1906              	 
 1907 0736 80BD     	 pop {r7,pc}
 1908              	 .cfi_endproc
 1909              	.LFE209:
 1911              	 .align 1
 1912              	 .global ast_disable_interrupt
 1913              	 .syntax unified
 1914              	 .thumb
 1915              	 .thumb_func
 1916              	 .fpu softvfp
 1918              	ast_disable_interrupt:
 1919              	.LFB210:
 486:../../../platform/sam/drivers/ast/ast.c **** 
 487:../../../platform/sam/drivers/ast/ast.c **** /**
 488:../../../platform/sam/drivers/ast/ast.c ****  * \brief Disable an AST interrupt.
 489:../../../platform/sam/drivers/ast/ast.c ****  *
 490:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast Module hardware register base address pointer
 491:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] source  AST interrupt source to be disabled
 492:../../../platform/sam/drivers/ast/ast.c ****  */
 493:../../../platform/sam/drivers/ast/ast.c **** void ast_disable_interrupt(
 494:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast,
 495:../../../platform/sam/drivers/ast/ast.c **** 		ast_interrupt_source_t source)
 496:../../../platform/sam/drivers/ast/ast.c **** {
 1920              	 .loc 7 496 0
 1921              	 .cfi_startproc
 1922              	 
 1923              	 
 1924 0738 80B5     	 push {r7,lr}
 1925              	.LCFI133:
 1926              	 .cfi_def_cfa_offset 8
 1927              	 .cfi_offset 7,-8
 1928              	 .cfi_offset 14,-4
 1929 073a 82B0     	 sub sp,sp,#8
 1930              	.LCFI134:
 1931              	 .cfi_def_cfa_offset 16
 1932 073c 00AF     	 add r7,sp,#0
 1933              	.LCFI135:
 1934              	 .cfi_def_cfa_register 7
 1935 073e 7860     	 str r0,[r7,#4]
 1936 0740 0B46     	 mov r3,r1
 1937 0742 FB70     	 strb r3,[r7,#3]
 497:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
 498:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 1938              	 .loc 7 498 0
 1939 0744 00BF     	 nop
 1940              	.L120:
 1941              	 .loc 7 498 0 is_stmt 0 discriminator 1
 1942 0746 7868     	 ldr r0,[r7,#4]
 1943 0748 FFF70AFD 	 bl ast_is_busy
 1944 074c 0346     	 mov r3,r0
 1945 074e 002B     	 cmp r3,#0
 1946 0750 F9D1     	 bne .L120
 499:../../../platform/sam/drivers/ast/ast.c **** 	}
 500:../../../platform/sam/drivers/ast/ast.c **** 
 501:../../../platform/sam/drivers/ast/ast.c **** 	switch (source) {
 1947              	 .loc 7 501 0 is_stmt 1
 1948 0752 FB78     	 ldrb r3,[r7,#3]
 1949 0754 042B     	 cmp r3,#4
 1950 0756 25D8     	 bhi .L130
 1951 0758 01A2     	 adr r2,.L123
 1952 075a 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1953 075e 00BF     	 .p2align 2
 1954              	.L123:
 1955 0760 75070000 	 .word .L122+1
 1956 0764 7F070000 	 .word .L124+1
 1957 0768 89070000 	 .word .L125+1
 1958 076c 91070000 	 .word .L126+1
 1959 0770 9B070000 	 .word .L127+1
 1960              	 .p2align 1
 1961              	.L122:
 502:../../../platform/sam/drivers/ast/ast.c **** 	case AST_INTERRUPT_ALARM:
 503:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_IDR = AST_IDR_ALARM0_1;
 1962              	 .loc 7 503 0
 1963 0774 7B68     	 ldr r3,[r7,#4]
 1964 0776 4FF48072 	 mov r2,#256
 1965 077a 5A61     	 str r2,[r3,#20]
 504:../../../platform/sam/drivers/ast/ast.c **** 		break;
 1966              	 .loc 7 504 0
 1967 077c 13E0     	 b .L128
 1968              	.L124:
 505:../../../platform/sam/drivers/ast/ast.c **** 
 506:../../../platform/sam/drivers/ast/ast.c **** 	case AST_INTERRUPT_PER:
 507:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_IDR = AST_IDR_PER0_1;
 1969              	 .loc 7 507 0
 1970 077e 7B68     	 ldr r3,[r7,#4]
 1971 0780 4FF48032 	 mov r2,#65536
 1972 0784 5A61     	 str r2,[r3,#20]
 508:../../../platform/sam/drivers/ast/ast.c **** 		break;
 1973              	 .loc 7 508 0
 1974 0786 0EE0     	 b .L128
 1975              	.L125:
 509:../../../platform/sam/drivers/ast/ast.c **** 
 510:../../../platform/sam/drivers/ast/ast.c **** 	case AST_INTERRUPT_OVF:
 511:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_IDR = AST_IDR_OVF_1;
 1976              	 .loc 7 511 0
 1977 0788 7B68     	 ldr r3,[r7,#4]
 1978 078a 0122     	 movs r2,#1
 1979 078c 5A61     	 str r2,[r3,#20]
 512:../../../platform/sam/drivers/ast/ast.c **** 		break;
 1980              	 .loc 7 512 0
 1981 078e 0AE0     	 b .L128
 1982              	.L126:
 513:../../../platform/sam/drivers/ast/ast.c **** 
 514:../../../platform/sam/drivers/ast/ast.c **** 	case AST_INTERRUPT_READY:
 515:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_IDR = AST_IDR_READY_1;
 1983              	 .loc 7 515 0
 1984 0790 7B68     	 ldr r3,[r7,#4]
 1985 0792 4FF00072 	 mov r2,#33554432
 1986 0796 5A61     	 str r2,[r3,#20]
 516:../../../platform/sam/drivers/ast/ast.c **** 		break;
 1987              	 .loc 7 516 0
 1988 0798 05E0     	 b .L128
 1989              	.L127:
 517:../../../platform/sam/drivers/ast/ast.c **** 
 518:../../../platform/sam/drivers/ast/ast.c **** 	case AST_INTERRUPT_CLKREADY:
 519:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_IDR = AST_IDR_CLKRDY_1;
 1990              	 .loc 7 519 0
 1991 079a 7B68     	 ldr r3,[r7,#4]
 1992 079c 4FF00052 	 mov r2,#536870912
 1993 07a0 5A61     	 str r2,[r3,#20]
 520:../../../platform/sam/drivers/ast/ast.c **** 		break;
 1994              	 .loc 7 520 0
 1995 07a2 00E0     	 b .L128
 1996              	.L130:
 521:../../../platform/sam/drivers/ast/ast.c **** 
 522:../../../platform/sam/drivers/ast/ast.c **** 	default:
 523:../../../platform/sam/drivers/ast/ast.c **** 		break;
 1997              	 .loc 7 523 0
 1998 07a4 00BF     	 nop
 1999              	.L128:
 524:../../../platform/sam/drivers/ast/ast.c **** 	}
 525:../../../platform/sam/drivers/ast/ast.c **** 
 526:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until write is done */
 527:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 2000              	 .loc 7 527 0 discriminator 1
 2001 07a6 00BF     	 nop
 2002              	.L129:
 2003 07a8 7868     	 ldr r0,[r7,#4]
 2004 07aa FFF7D9FC 	 bl ast_is_busy
 2005 07ae 0346     	 mov r3,r0
 2006 07b0 002B     	 cmp r3,#0
 2007 07b2 F9D1     	 bne .L129
 528:../../../platform/sam/drivers/ast/ast.c **** 	}
 529:../../../platform/sam/drivers/ast/ast.c **** }
 2008              	 .loc 7 529 0
 2009 07b4 00BF     	 nop
 2010 07b6 0837     	 adds r7,r7,#8
 2011              	.LCFI136:
 2012              	 .cfi_def_cfa_offset 8
 2013 07b8 BD46     	 mov sp,r7
 2014              	.LCFI137:
 2015              	 .cfi_def_cfa_register 13
 2016              	 
 2017 07ba 80BD     	 pop {r7,pc}
 2018              	 .cfi_endproc
 2019              	.LFE210:
 2021              	 .align 1
 2022              	 .global ast_clear_interrupt_flag
 2023              	 .syntax unified
 2024              	 .thumb
 2025              	 .thumb_func
 2026              	 .fpu softvfp
 2028              	ast_clear_interrupt_flag:
 2029              	.LFB211:
 530:../../../platform/sam/drivers/ast/ast.c **** 
 531:../../../platform/sam/drivers/ast/ast.c **** /**
 532:../../../platform/sam/drivers/ast/ast.c ****  * \brief Clear an AST interrupt status flag.
 533:../../../platform/sam/drivers/ast/ast.c ****  *
 534:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast Module hardware register base address pointer
 535:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] source  AST interrupt source for which the status is to be cleared
 536:../../../platform/sam/drivers/ast/ast.c ****  */
 537:../../../platform/sam/drivers/ast/ast.c **** void ast_clear_interrupt_flag(
 538:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast,
 539:../../../platform/sam/drivers/ast/ast.c **** 		ast_interrupt_source_t source)
 540:../../../platform/sam/drivers/ast/ast.c **** {
 2030              	 .loc 7 540 0
 2031              	 .cfi_startproc
 2032              	 
 2033              	 
 2034 07bc 80B5     	 push {r7,lr}
 2035              	.LCFI138:
 2036              	 .cfi_def_cfa_offset 8
 2037              	 .cfi_offset 7,-8
 2038              	 .cfi_offset 14,-4
 2039 07be 82B0     	 sub sp,sp,#8
 2040              	.LCFI139:
 2041              	 .cfi_def_cfa_offset 16
 2042 07c0 00AF     	 add r7,sp,#0
 2043              	.LCFI140:
 2044              	 .cfi_def_cfa_register 7
 2045 07c2 7860     	 str r0,[r7,#4]
 2046 07c4 0B46     	 mov r3,r1
 2047 07c6 FB70     	 strb r3,[r7,#3]
 541:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
 542:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 2048              	 .loc 7 542 0
 2049 07c8 00BF     	 nop
 2050              	.L132:
 2051              	 .loc 7 542 0 is_stmt 0 discriminator 1
 2052 07ca 7868     	 ldr r0,[r7,#4]
 2053 07cc FFF7C8FC 	 bl ast_is_busy
 2054 07d0 0346     	 mov r3,r0
 2055 07d2 002B     	 cmp r3,#0
 2056 07d4 F9D1     	 bne .L132
 543:../../../platform/sam/drivers/ast/ast.c **** 	}
 544:../../../platform/sam/drivers/ast/ast.c **** 
 545:../../../platform/sam/drivers/ast/ast.c **** 	switch (source) {
 2057              	 .loc 7 545 0 is_stmt 1
 2058 07d6 FB78     	 ldrb r3,[r7,#3]
 2059 07d8 042B     	 cmp r3,#4
 2060 07da 25D8     	 bhi .L142
 2061 07dc 01A2     	 adr r2,.L135
 2062 07de 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2063 07e2 00BF     	 .p2align 2
 2064              	.L135:
 2065 07e4 F9070000 	 .word .L134+1
 2066 07e8 03080000 	 .word .L136+1
 2067 07ec 0D080000 	 .word .L137+1
 2068 07f0 15080000 	 .word .L138+1
 2069 07f4 1F080000 	 .word .L139+1
 2070              	 .p2align 1
 2071              	.L134:
 546:../../../platform/sam/drivers/ast/ast.c **** 	case AST_INTERRUPT_ALARM:
 547:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_SCR = AST_SCR_ALARM0;
 2072              	 .loc 7 547 0
 2073 07f8 7B68     	 ldr r3,[r7,#4]
 2074 07fa 4FF48072 	 mov r2,#256
 2075 07fe DA60     	 str r2,[r3,#12]
 548:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2076              	 .loc 7 548 0
 2077 0800 13E0     	 b .L140
 2078              	.L136:
 549:../../../platform/sam/drivers/ast/ast.c **** 
 550:../../../platform/sam/drivers/ast/ast.c **** 	case AST_INTERRUPT_PER:
 551:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_SCR = AST_SCR_PER0;
 2079              	 .loc 7 551 0
 2080 0802 7B68     	 ldr r3,[r7,#4]
 2081 0804 4FF48032 	 mov r2,#65536
 2082 0808 DA60     	 str r2,[r3,#12]
 552:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2083              	 .loc 7 552 0
 2084 080a 0EE0     	 b .L140
 2085              	.L137:
 553:../../../platform/sam/drivers/ast/ast.c **** 
 554:../../../platform/sam/drivers/ast/ast.c **** 	case AST_INTERRUPT_OVF:
 555:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_SCR = AST_SCR_OVF;
 2086              	 .loc 7 555 0
 2087 080c 7B68     	 ldr r3,[r7,#4]
 2088 080e 0122     	 movs r2,#1
 2089 0810 DA60     	 str r2,[r3,#12]
 556:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2090              	 .loc 7 556 0
 2091 0812 0AE0     	 b .L140
 2092              	.L138:
 557:../../../platform/sam/drivers/ast/ast.c **** 
 558:../../../platform/sam/drivers/ast/ast.c **** 	case AST_INTERRUPT_READY:
 559:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_SCR = AST_SCR_READY;
 2093              	 .loc 7 559 0
 2094 0814 7B68     	 ldr r3,[r7,#4]
 2095 0816 4FF00072 	 mov r2,#33554432
 2096 081a DA60     	 str r2,[r3,#12]
 560:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2097              	 .loc 7 560 0
 2098 081c 05E0     	 b .L140
 2099              	.L139:
 561:../../../platform/sam/drivers/ast/ast.c **** 
 562:../../../platform/sam/drivers/ast/ast.c **** 	case AST_INTERRUPT_CLKREADY:
 563:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_SCR = AST_SCR_CLKRDY;
 2100              	 .loc 7 563 0
 2101 081e 7B68     	 ldr r3,[r7,#4]
 2102 0820 4FF00052 	 mov r2,#536870912
 2103 0824 DA60     	 str r2,[r3,#12]
 564:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2104              	 .loc 7 564 0
 2105 0826 00E0     	 b .L140
 2106              	.L142:
 565:../../../platform/sam/drivers/ast/ast.c **** 
 566:../../../platform/sam/drivers/ast/ast.c **** 	default:
 567:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2107              	 .loc 7 567 0
 2108 0828 00BF     	 nop
 2109              	.L140:
 568:../../../platform/sam/drivers/ast/ast.c **** 	}
 569:../../../platform/sam/drivers/ast/ast.c **** 
 570:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until write is done */
 571:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 2110              	 .loc 7 571 0 discriminator 1
 2111 082a 00BF     	 nop
 2112              	.L141:
 2113 082c 7868     	 ldr r0,[r7,#4]
 2114 082e FFF797FC 	 bl ast_is_busy
 2115 0832 0346     	 mov r3,r0
 2116 0834 002B     	 cmp r3,#0
 2117 0836 F9D1     	 bne .L141
 572:../../../platform/sam/drivers/ast/ast.c **** 	}
 573:../../../platform/sam/drivers/ast/ast.c **** }
 2118              	 .loc 7 573 0
 2119 0838 00BF     	 nop
 2120 083a 0837     	 adds r7,r7,#8
 2121              	.LCFI141:
 2122              	 .cfi_def_cfa_offset 8
 2123 083c BD46     	 mov sp,r7
 2124              	.LCFI142:
 2125              	 .cfi_def_cfa_register 13
 2126              	 
 2127 083e 80BD     	 pop {r7,pc}
 2128              	 .cfi_endproc
 2129              	.LFE211:
 2131              	 .align 1
 2132              	 .global ast_set_callback
 2133              	 .syntax unified
 2134              	 .thumb
 2135              	 .thumb_func
 2136              	 .fpu softvfp
 2138              	ast_set_callback:
 2139              	.LFB212:
 574:../../../platform/sam/drivers/ast/ast.c **** 
 575:../../../platform/sam/drivers/ast/ast.c **** /**
 576:../../../platform/sam/drivers/ast/ast.c ****  * \brief Set callback for AST interrupts.
 577:../../../platform/sam/drivers/ast/ast.c ****  *
 578:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast   Module hardware register base address pointer
 579:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] source    AST interrupt source
 580:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] callback  Callback function pointer
 581:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] irq_line  Interrupt line
 582:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] irq_level Interrupt level
 583:../../../platform/sam/drivers/ast/ast.c ****  */
 584:../../../platform/sam/drivers/ast/ast.c **** void ast_set_callback(
 585:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast,
 586:../../../platform/sam/drivers/ast/ast.c **** 		ast_interrupt_source_t source,
 587:../../../platform/sam/drivers/ast/ast.c **** 		ast_callback_t callback,
 588:../../../platform/sam/drivers/ast/ast.c **** 		uint8_t irq_line,
 589:../../../platform/sam/drivers/ast/ast.c **** 		uint8_t irq_level)
 590:../../../platform/sam/drivers/ast/ast.c **** {
 2140              	 .loc 7 590 0
 2141              	 .cfi_startproc
 2142              	 
 2143              	 
 2144 0840 80B5     	 push {r7,lr}
 2145              	.LCFI143:
 2146              	 .cfi_def_cfa_offset 8
 2147              	 .cfi_offset 7,-8
 2148              	 .cfi_offset 14,-4
 2149 0842 84B0     	 sub sp,sp,#16
 2150              	.LCFI144:
 2151              	 .cfi_def_cfa_offset 24
 2152 0844 00AF     	 add r7,sp,#0
 2153              	.LCFI145:
 2154              	 .cfi_def_cfa_register 7
 2155 0846 F860     	 str r0,[r7,#12]
 2156 0848 7A60     	 str r2,[r7,#4]
 2157 084a 1A46     	 mov r2,r3
 2158 084c 0B46     	 mov r3,r1
 2159 084e FB72     	 strb r3,[r7,#11]
 2160 0850 1346     	 mov r3,r2
 2161 0852 BB72     	 strb r3,[r7,#10]
 591:../../../platform/sam/drivers/ast/ast.c **** 	ast_callback_pointer[source] = callback;
 2162              	 .loc 7 591 0
 2163 0854 FB7A     	 ldrb r3,[r7,#11]
 2164 0856 0F49     	 ldr r1,.L144
 2165 0858 7A68     	 ldr r2,[r7,#4]
 2166 085a 41F82320 	 str r2,[r1,r3,lsl#2]
 592:../../../platform/sam/drivers/ast/ast.c **** 	NVIC_ClearPendingIRQ((IRQn_Type)irq_line);
 2167              	 .loc 7 592 0
 2168 085e 97F90A30 	 ldrsb r3,[r7,#10]
 2169 0862 1846     	 mov r0,r3
 2170 0864 FFF7E4FB 	 bl NVIC_ClearPendingIRQ
 593:../../../platform/sam/drivers/ast/ast.c **** 	NVIC_SetPriority((IRQn_Type)irq_line, irq_level);
 2171              	 .loc 7 593 0
 2172 0868 97F90A30 	 ldrsb r3,[r7,#10]
 2173 086c 3A7E     	 ldrb r2,[r7,#24]
 2174 086e 1146     	 mov r1,r2
 2175 0870 1846     	 mov r0,r3
 2176 0872 FFF7F7FB 	 bl NVIC_SetPriority
 594:../../../platform/sam/drivers/ast/ast.c **** 	NVIC_EnableIRQ((IRQn_Type)irq_line);
 2177              	 .loc 7 594 0
 2178 0876 97F90A30 	 ldrsb r3,[r7,#10]
 2179 087a 1846     	 mov r0,r3
 2180 087c FFF7C0FB 	 bl NVIC_EnableIRQ
 595:../../../platform/sam/drivers/ast/ast.c **** 	ast_enable_interrupt(ast, source);
 2181              	 .loc 7 595 0
 2182 0880 FB7A     	 ldrb r3,[r7,#11]
 2183 0882 1946     	 mov r1,r3
 2184 0884 F868     	 ldr r0,[r7,#12]
 2185 0886 FFF7FEFF 	 bl ast_enable_interrupt
 596:../../../platform/sam/drivers/ast/ast.c **** }
 2186              	 .loc 7 596 0
 2187 088a 00BF     	 nop
 2188 088c 1037     	 adds r7,r7,#16
 2189              	.LCFI146:
 2190              	 .cfi_def_cfa_offset 8
 2191 088e BD46     	 mov sp,r7
 2192              	.LCFI147:
 2193              	 .cfi_def_cfa_register 13
 2194              	 
 2195 0890 80BD     	 pop {r7,pc}
 2196              	.L145:
 2197 0892 00BF     	 .align 2
 2198              	.L144:
 2199 0894 00000000 	 .word ast_callback_pointer
 2200              	 .cfi_endproc
 2201              	.LFE212:
 2203              	 .align 1
 2204              	 .global ast_enable_wakeup
 2205              	 .syntax unified
 2206              	 .thumb
 2207              	 .thumb_func
 2208              	 .fpu softvfp
 2210              	ast_enable_wakeup:
 2211              	.LFB213:
 597:../../../platform/sam/drivers/ast/ast.c **** 
 598:../../../platform/sam/drivers/ast/ast.c **** /**
 599:../../../platform/sam/drivers/ast/ast.c ****  * \brief Interrupt handler for AST periodic.
 600:../../../platform/sam/drivers/ast/ast.c ****  */
 601:../../../platform/sam/drivers/ast/ast.c **** #if defined(AST_PER_ENABLE) || defined(__DOXYGEN__)
 602:../../../platform/sam/drivers/ast/ast.c **** void AST_PER_Handler(void)
 603:../../../platform/sam/drivers/ast/ast.c **** {
 604:../../../platform/sam/drivers/ast/ast.c **** 	ast_callback_pointer[AST_INTERRUPT_PER]();
 605:../../../platform/sam/drivers/ast/ast.c **** }
 606:../../../platform/sam/drivers/ast/ast.c **** #endif /* AST_PER_ENABLE || defined(__DOXYGEN__) */
 607:../../../platform/sam/drivers/ast/ast.c **** 
 608:../../../platform/sam/drivers/ast/ast.c **** /**
 609:../../../platform/sam/drivers/ast/ast.c ****  * \brief Interrupt handler for AST alarm.
 610:../../../platform/sam/drivers/ast/ast.c ****  */
 611:../../../platform/sam/drivers/ast/ast.c **** #if defined(AST_ALARM_ENABLE) || defined(__DOXYGEN__)
 612:../../../platform/sam/drivers/ast/ast.c **** void AST_ALARM_Handler(void)
 613:../../../platform/sam/drivers/ast/ast.c **** {
 614:../../../platform/sam/drivers/ast/ast.c **** 	ast_callback_pointer[AST_INTERRUPT_ALARM]();
 615:../../../platform/sam/drivers/ast/ast.c **** }
 616:../../../platform/sam/drivers/ast/ast.c **** #endif /* AST_ALARM_ENABLE || defined(__DOXYGEN__) */
 617:../../../platform/sam/drivers/ast/ast.c **** 
 618:../../../platform/sam/drivers/ast/ast.c **** /**
 619:../../../platform/sam/drivers/ast/ast.c ****  * \brief Interrupt handler for AST periodic.
 620:../../../platform/sam/drivers/ast/ast.c ****  */
 621:../../../platform/sam/drivers/ast/ast.c **** #if defined(AST_OVF_ENABLE) || defined(__DOXYGEN__)
 622:../../../platform/sam/drivers/ast/ast.c **** void AST_OVF_Handler(void)
 623:../../../platform/sam/drivers/ast/ast.c **** {
 624:../../../platform/sam/drivers/ast/ast.c **** 	ast_callback_pointer[AST_INTERRUPT_OVF]();
 625:../../../platform/sam/drivers/ast/ast.c **** }
 626:../../../platform/sam/drivers/ast/ast.c **** #endif /* AST_OVF_ENABLE || defined(__DOXYGEN__) */
 627:../../../platform/sam/drivers/ast/ast.c **** 
 628:../../../platform/sam/drivers/ast/ast.c **** /**
 629:../../../platform/sam/drivers/ast/ast.c ****  * \brief Interrupt handler for AST alarm.
 630:../../../platform/sam/drivers/ast/ast.c ****  */
 631:../../../platform/sam/drivers/ast/ast.c **** #if defined(AST_READY_ENABLE)  || defined(__DOXYGEN__)
 632:../../../platform/sam/drivers/ast/ast.c **** void AST_READY_Handler(void)
 633:../../../platform/sam/drivers/ast/ast.c **** {
 634:../../../platform/sam/drivers/ast/ast.c **** 	ast_callback_pointer[AST_INTERRUPT_READY]();
 635:../../../platform/sam/drivers/ast/ast.c **** }
 636:../../../platform/sam/drivers/ast/ast.c **** #endif /* AST_READY_ENABLE  || defined(__DOXYGEN__) */
 637:../../../platform/sam/drivers/ast/ast.c **** 
 638:../../../platform/sam/drivers/ast/ast.c **** /**
 639:../../../platform/sam/drivers/ast/ast.c ****  * \brief Interrupt handler for AST periodic.
 640:../../../platform/sam/drivers/ast/ast.c ****  */
 641:../../../platform/sam/drivers/ast/ast.c **** #if defined(AST_CLKREADY_ENABLE)  || defined(__DOXYGEN__)
 642:../../../platform/sam/drivers/ast/ast.c **** void AST_CLKREADY_Handler(void)
 643:../../../platform/sam/drivers/ast/ast.c **** {
 644:../../../platform/sam/drivers/ast/ast.c **** 	ast_callback_pointer[AST_INTERRUPT_CLKREADY]();
 645:../../../platform/sam/drivers/ast/ast.c **** }
 646:../../../platform/sam/drivers/ast/ast.c **** #endif /* AST_CLKREADY_ENABLE  || defined(__DOXYGEN__) */
 647:../../../platform/sam/drivers/ast/ast.c **** 
 648:../../../platform/sam/drivers/ast/ast.c **** /**
 649:../../../platform/sam/drivers/ast/ast.c ****  * \brief Enable an AST asynchronous wake-up source.
 650:../../../platform/sam/drivers/ast/ast.c ****  *
 651:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast Module hardware register base address pointer
 652:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] source  AST wake-up source to be enabled
 653:../../../platform/sam/drivers/ast/ast.c ****  */
 654:../../../platform/sam/drivers/ast/ast.c **** void ast_enable_wakeup(
 655:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast,
 656:../../../platform/sam/drivers/ast/ast.c **** 		ast_wakeup_source_t source)
 657:../../../platform/sam/drivers/ast/ast.c **** {
 2212              	 .loc 7 657 0
 2213              	 .cfi_startproc
 2214              	 
 2215              	 
 2216 0898 80B5     	 push {r7,lr}
 2217              	.LCFI148:
 2218              	 .cfi_def_cfa_offset 8
 2219              	 .cfi_offset 7,-8
 2220              	 .cfi_offset 14,-4
 2221 089a 82B0     	 sub sp,sp,#8
 2222              	.LCFI149:
 2223              	 .cfi_def_cfa_offset 16
 2224 089c 00AF     	 add r7,sp,#0
 2225              	.LCFI150:
 2226              	 .cfi_def_cfa_register 7
 2227 089e 7860     	 str r0,[r7,#4]
 2228 08a0 0B46     	 mov r3,r1
 2229 08a2 FB70     	 strb r3,[r7,#3]
 658:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
 659:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 2230              	 .loc 7 659 0
 2231 08a4 00BF     	 nop
 2232              	.L147:
 2233              	 .loc 7 659 0 is_stmt 0 discriminator 1
 2234 08a6 7868     	 ldr r0,[r7,#4]
 2235 08a8 FFF75AFC 	 bl ast_is_busy
 2236 08ac 0346     	 mov r3,r0
 2237 08ae 002B     	 cmp r3,#0
 2238 08b0 F9D1     	 bne .L147
 660:../../../platform/sam/drivers/ast/ast.c **** 	}
 661:../../../platform/sam/drivers/ast/ast.c **** 
 662:../../../platform/sam/drivers/ast/ast.c **** 	switch (source) {
 2239              	 .loc 7 662 0 is_stmt 1
 2240 08b2 FB78     	 ldrb r3,[r7,#3]
 2241 08b4 012B     	 cmp r3,#1
 2242 08b6 0BD0     	 beq .L149
 2243 08b8 022B     	 cmp r3,#2
 2244 08ba 10D0     	 beq .L150
 2245 08bc 002B     	 cmp r3,#0
 2246 08be 00D0     	 beq .L151
 663:../../../platform/sam/drivers/ast/ast.c **** 	case AST_WAKEUP_ALARM:
 664:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_WER |= AST_WER_ALARM0_1;
 665:../../../platform/sam/drivers/ast/ast.c **** 		break;
 666:../../../platform/sam/drivers/ast/ast.c **** 
 667:../../../platform/sam/drivers/ast/ast.c **** 	case AST_WAKEUP_PER:
 668:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_WER |= AST_WER_PER0_1;
 669:../../../platform/sam/drivers/ast/ast.c **** 		break;
 670:../../../platform/sam/drivers/ast/ast.c **** 
 671:../../../platform/sam/drivers/ast/ast.c **** 	case AST_WAKEUP_OVF:
 672:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_WER |= AST_WER_OVF_1;
 673:../../../platform/sam/drivers/ast/ast.c **** 		break;
 674:../../../platform/sam/drivers/ast/ast.c **** 
 675:../../../platform/sam/drivers/ast/ast.c **** 	default:
 676:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2247              	 .loc 7 676 0
 2248 08c0 14E0     	 b .L152
 2249              	.L151:
 664:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2250              	 .loc 7 664 0
 2251 08c2 7B68     	 ldr r3,[r7,#4]
 2252 08c4 DB69     	 ldr r3,[r3,#28]
 2253 08c6 43F48072 	 orr r2,r3,#256
 2254 08ca 7B68     	 ldr r3,[r7,#4]
 2255 08cc DA61     	 str r2,[r3,#28]
 665:../../../platform/sam/drivers/ast/ast.c **** 
 2256              	 .loc 7 665 0
 2257 08ce 0DE0     	 b .L152
 2258              	.L149:
 668:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2259              	 .loc 7 668 0
 2260 08d0 7B68     	 ldr r3,[r7,#4]
 2261 08d2 DB69     	 ldr r3,[r3,#28]
 2262 08d4 43F48032 	 orr r2,r3,#65536
 2263 08d8 7B68     	 ldr r3,[r7,#4]
 2264 08da DA61     	 str r2,[r3,#28]
 669:../../../platform/sam/drivers/ast/ast.c **** 
 2265              	 .loc 7 669 0
 2266 08dc 06E0     	 b .L152
 2267              	.L150:
 672:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2268              	 .loc 7 672 0
 2269 08de 7B68     	 ldr r3,[r7,#4]
 2270 08e0 DB69     	 ldr r3,[r3,#28]
 2271 08e2 43F00102 	 orr r2,r3,#1
 2272 08e6 7B68     	 ldr r3,[r7,#4]
 2273 08e8 DA61     	 str r2,[r3,#28]
 673:../../../platform/sam/drivers/ast/ast.c **** 
 2274              	 .loc 7 673 0
 2275 08ea 00BF     	 nop
 2276              	.L152:
 677:../../../platform/sam/drivers/ast/ast.c **** 	}
 678:../../../platform/sam/drivers/ast/ast.c **** 
 679:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until write is done */
 680:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 2277              	 .loc 7 680 0 discriminator 1
 2278 08ec 00BF     	 nop
 2279              	.L153:
 2280 08ee 7868     	 ldr r0,[r7,#4]
 2281 08f0 FFF736FC 	 bl ast_is_busy
 2282 08f4 0346     	 mov r3,r0
 2283 08f6 002B     	 cmp r3,#0
 2284 08f8 F9D1     	 bne .L153
 681:../../../platform/sam/drivers/ast/ast.c **** 	}
 682:../../../platform/sam/drivers/ast/ast.c **** }
 2285              	 .loc 7 682 0
 2286 08fa 00BF     	 nop
 2287 08fc 0837     	 adds r7,r7,#8
 2288              	.LCFI151:
 2289              	 .cfi_def_cfa_offset 8
 2290 08fe BD46     	 mov sp,r7
 2291              	.LCFI152:
 2292              	 .cfi_def_cfa_register 13
 2293              	 
 2294 0900 80BD     	 pop {r7,pc}
 2295              	 .cfi_endproc
 2296              	.LFE213:
 2298              	 .align 1
 2299              	 .global ast_disable_wakeup
 2300              	 .syntax unified
 2301              	 .thumb
 2302              	 .thumb_func
 2303              	 .fpu softvfp
 2305              	ast_disable_wakeup:
 2306              	.LFB214:
 683:../../../platform/sam/drivers/ast/ast.c **** 
 684:../../../platform/sam/drivers/ast/ast.c **** /**
 685:../../../platform/sam/drivers/ast/ast.c ****  * \brief Disable an AST asynchronous wake-up source.
 686:../../../platform/sam/drivers/ast/ast.c ****  *
 687:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast Module hardware register base address pointer
 688:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] source  AST wake-up source to be disabled
 689:../../../platform/sam/drivers/ast/ast.c ****  */
 690:../../../platform/sam/drivers/ast/ast.c **** void ast_disable_wakeup(
 691:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast,
 692:../../../platform/sam/drivers/ast/ast.c **** 		ast_wakeup_source_t source)
 693:../../../platform/sam/drivers/ast/ast.c **** {
 2307              	 .loc 7 693 0
 2308              	 .cfi_startproc
 2309              	 
 2310              	 
 2311 0902 80B5     	 push {r7,lr}
 2312              	.LCFI153:
 2313              	 .cfi_def_cfa_offset 8
 2314              	 .cfi_offset 7,-8
 2315              	 .cfi_offset 14,-4
 2316 0904 82B0     	 sub sp,sp,#8
 2317              	.LCFI154:
 2318              	 .cfi_def_cfa_offset 16
 2319 0906 00AF     	 add r7,sp,#0
 2320              	.LCFI155:
 2321              	 .cfi_def_cfa_register 7
 2322 0908 7860     	 str r0,[r7,#4]
 2323 090a 0B46     	 mov r3,r1
 2324 090c FB70     	 strb r3,[r7,#3]
 694:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
 695:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 2325              	 .loc 7 695 0
 2326 090e 00BF     	 nop
 2327              	.L155:
 2328              	 .loc 7 695 0 is_stmt 0 discriminator 1
 2329 0910 7868     	 ldr r0,[r7,#4]
 2330 0912 FFF725FC 	 bl ast_is_busy
 2331 0916 0346     	 mov r3,r0
 2332 0918 002B     	 cmp r3,#0
 2333 091a F9D1     	 bne .L155
 696:../../../platform/sam/drivers/ast/ast.c **** 	}
 697:../../../platform/sam/drivers/ast/ast.c **** 
 698:../../../platform/sam/drivers/ast/ast.c **** 	switch (source) {
 2334              	 .loc 7 698 0 is_stmt 1
 2335 091c FB78     	 ldrb r3,[r7,#3]
 2336 091e 012B     	 cmp r3,#1
 2337 0920 0BD0     	 beq .L157
 2338 0922 022B     	 cmp r3,#2
 2339 0924 10D0     	 beq .L158
 2340 0926 002B     	 cmp r3,#0
 2341 0928 00D0     	 beq .L159
 699:../../../platform/sam/drivers/ast/ast.c **** 	case AST_WAKEUP_ALARM:
 700:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_WER &= ~AST_WER_ALARM0_1;
 701:../../../platform/sam/drivers/ast/ast.c **** 		break;
 702:../../../platform/sam/drivers/ast/ast.c **** 
 703:../../../platform/sam/drivers/ast/ast.c **** 	case AST_WAKEUP_PER:
 704:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_WER &= ~AST_WER_PER0_1;
 705:../../../platform/sam/drivers/ast/ast.c **** 		break;
 706:../../../platform/sam/drivers/ast/ast.c **** 
 707:../../../platform/sam/drivers/ast/ast.c **** 	case AST_WAKEUP_OVF:
 708:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_WER &= ~AST_WER_OVF_1;
 709:../../../platform/sam/drivers/ast/ast.c **** 		break;
 710:../../../platform/sam/drivers/ast/ast.c **** 
 711:../../../platform/sam/drivers/ast/ast.c **** 	default:
 712:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2342              	 .loc 7 712 0
 2343 092a 14E0     	 b .L160
 2344              	.L159:
 700:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2345              	 .loc 7 700 0
 2346 092c 7B68     	 ldr r3,[r7,#4]
 2347 092e DB69     	 ldr r3,[r3,#28]
 2348 0930 23F48072 	 bic r2,r3,#256
 2349 0934 7B68     	 ldr r3,[r7,#4]
 2350 0936 DA61     	 str r2,[r3,#28]
 701:../../../platform/sam/drivers/ast/ast.c **** 
 2351              	 .loc 7 701 0
 2352 0938 0DE0     	 b .L160
 2353              	.L157:
 704:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2354              	 .loc 7 704 0
 2355 093a 7B68     	 ldr r3,[r7,#4]
 2356 093c DB69     	 ldr r3,[r3,#28]
 2357 093e 23F48032 	 bic r2,r3,#65536
 2358 0942 7B68     	 ldr r3,[r7,#4]
 2359 0944 DA61     	 str r2,[r3,#28]
 705:../../../platform/sam/drivers/ast/ast.c **** 
 2360              	 .loc 7 705 0
 2361 0946 06E0     	 b .L160
 2362              	.L158:
 708:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2363              	 .loc 7 708 0
 2364 0948 7B68     	 ldr r3,[r7,#4]
 2365 094a DB69     	 ldr r3,[r3,#28]
 2366 094c 23F00102 	 bic r2,r3,#1
 2367 0950 7B68     	 ldr r3,[r7,#4]
 2368 0952 DA61     	 str r2,[r3,#28]
 709:../../../platform/sam/drivers/ast/ast.c **** 
 2369              	 .loc 7 709 0
 2370 0954 00BF     	 nop
 2371              	.L160:
 713:../../../platform/sam/drivers/ast/ast.c **** 	}
 714:../../../platform/sam/drivers/ast/ast.c **** 
 715:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until write is done */
 716:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 2372              	 .loc 7 716 0 discriminator 1
 2373 0956 00BF     	 nop
 2374              	.L161:
 2375 0958 7868     	 ldr r0,[r7,#4]
 2376 095a FFF701FC 	 bl ast_is_busy
 2377 095e 0346     	 mov r3,r0
 2378 0960 002B     	 cmp r3,#0
 2379 0962 F9D1     	 bne .L161
 717:../../../platform/sam/drivers/ast/ast.c **** 	}
 718:../../../platform/sam/drivers/ast/ast.c **** }
 2380              	 .loc 7 718 0
 2381 0964 00BF     	 nop
 2382 0966 0837     	 adds r7,r7,#8
 2383              	.LCFI156:
 2384              	 .cfi_def_cfa_offset 8
 2385 0968 BD46     	 mov sp,r7
 2386              	.LCFI157:
 2387              	 .cfi_def_cfa_register 13
 2388              	 
 2389 096a 80BD     	 pop {r7,pc}
 2390              	 .cfi_endproc
 2391              	.LFE214:
 2393              	 .align 1
 2394              	 .global ast_enable_event
 2395              	 .syntax unified
 2396              	 .thumb
 2397              	 .thumb_func
 2398              	 .fpu softvfp
 2400              	ast_enable_event:
 2401              	.LFB215:
 719:../../../platform/sam/drivers/ast/ast.c **** 
 720:../../../platform/sam/drivers/ast/ast.c **** /**
 721:../../../platform/sam/drivers/ast/ast.c ****  * \brief Enable an AST event.
 722:../../../platform/sam/drivers/ast/ast.c ****  *
 723:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast Module hardware register base address pointer
 724:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] source  AST event source to be enabled
 725:../../../platform/sam/drivers/ast/ast.c ****  */
 726:../../../platform/sam/drivers/ast/ast.c **** void ast_enable_event(
 727:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast,
 728:../../../platform/sam/drivers/ast/ast.c **** 		ast_event_source_t source)
 729:../../../platform/sam/drivers/ast/ast.c **** {
 2402              	 .loc 7 729 0
 2403              	 .cfi_startproc
 2404              	 
 2405              	 
 2406 096c 80B5     	 push {r7,lr}
 2407              	.LCFI158:
 2408              	 .cfi_def_cfa_offset 8
 2409              	 .cfi_offset 7,-8
 2410              	 .cfi_offset 14,-4
 2411 096e 82B0     	 sub sp,sp,#8
 2412              	.LCFI159:
 2413              	 .cfi_def_cfa_offset 16
 2414 0970 00AF     	 add r7,sp,#0
 2415              	.LCFI160:
 2416              	 .cfi_def_cfa_register 7
 2417 0972 7860     	 str r0,[r7,#4]
 2418 0974 0B46     	 mov r3,r1
 2419 0976 FB70     	 strb r3,[r7,#3]
 730:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
 731:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 2420              	 .loc 7 731 0
 2421 0978 00BF     	 nop
 2422              	.L163:
 2423              	 .loc 7 731 0 is_stmt 0 discriminator 1
 2424 097a 7868     	 ldr r0,[r7,#4]
 2425 097c FFF7F0FB 	 bl ast_is_busy
 2426 0980 0346     	 mov r3,r0
 2427 0982 002B     	 cmp r3,#0
 2428 0984 F9D1     	 bne .L163
 732:../../../platform/sam/drivers/ast/ast.c **** 	}
 733:../../../platform/sam/drivers/ast/ast.c **** 
 734:../../../platform/sam/drivers/ast/ast.c **** 	switch (source) {
 2429              	 .loc 7 734 0 is_stmt 1
 2430 0986 FB78     	 ldrb r3,[r7,#3]
 2431 0988 012B     	 cmp r3,#1
 2432 098a 09D0     	 beq .L165
 2433 098c 022B     	 cmp r3,#2
 2434 098e 0CD0     	 beq .L166
 2435 0990 002B     	 cmp r3,#0
 2436 0992 00D0     	 beq .L167
 735:../../../platform/sam/drivers/ast/ast.c **** 	case AST_EVENT_ALARM:
 736:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_EVE = AST_EVE_ALARM0;
 737:../../../platform/sam/drivers/ast/ast.c **** 		break;
 738:../../../platform/sam/drivers/ast/ast.c **** 
 739:../../../platform/sam/drivers/ast/ast.c **** 	case AST_EVENT_PER:
 740:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_EVE = AST_EVE_PER0;
 741:../../../platform/sam/drivers/ast/ast.c **** 		break;
 742:../../../platform/sam/drivers/ast/ast.c **** 
 743:../../../platform/sam/drivers/ast/ast.c **** 	case AST_EVENT_OVF:
 744:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_EVE = AST_EVE_OVF;
 745:../../../platform/sam/drivers/ast/ast.c **** 		break;
 746:../../../platform/sam/drivers/ast/ast.c **** 
 747:../../../platform/sam/drivers/ast/ast.c **** 	default:
 748:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2437              	 .loc 7 748 0
 2438 0994 0DE0     	 b .L168
 2439              	.L167:
 736:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2440              	 .loc 7 736 0
 2441 0996 7B68     	 ldr r3,[r7,#4]
 2442 0998 4FF48072 	 mov r2,#256
 2443 099c 9A64     	 str r2,[r3,#72]
 737:../../../platform/sam/drivers/ast/ast.c **** 
 2444              	 .loc 7 737 0
 2445 099e 08E0     	 b .L168
 2446              	.L165:
 740:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2447              	 .loc 7 740 0
 2448 09a0 7B68     	 ldr r3,[r7,#4]
 2449 09a2 4FF48032 	 mov r2,#65536
 2450 09a6 9A64     	 str r2,[r3,#72]
 741:../../../platform/sam/drivers/ast/ast.c **** 
 2451              	 .loc 7 741 0
 2452 09a8 03E0     	 b .L168
 2453              	.L166:
 744:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2454              	 .loc 7 744 0
 2455 09aa 7B68     	 ldr r3,[r7,#4]
 2456 09ac 0122     	 movs r2,#1
 2457 09ae 9A64     	 str r2,[r3,#72]
 745:../../../platform/sam/drivers/ast/ast.c **** 
 2458              	 .loc 7 745 0
 2459 09b0 00BF     	 nop
 2460              	.L168:
 749:../../../platform/sam/drivers/ast/ast.c **** 	}
 750:../../../platform/sam/drivers/ast/ast.c **** 
 751:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until write is done */
 752:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 2461              	 .loc 7 752 0 discriminator 1
 2462 09b2 00BF     	 nop
 2463              	.L169:
 2464 09b4 7868     	 ldr r0,[r7,#4]
 2465 09b6 FFF7D3FB 	 bl ast_is_busy
 2466 09ba 0346     	 mov r3,r0
 2467 09bc 002B     	 cmp r3,#0
 2468 09be F9D1     	 bne .L169
 753:../../../platform/sam/drivers/ast/ast.c **** 	}
 754:../../../platform/sam/drivers/ast/ast.c **** }
 2469              	 .loc 7 754 0
 2470 09c0 00BF     	 nop
 2471 09c2 0837     	 adds r7,r7,#8
 2472              	.LCFI161:
 2473              	 .cfi_def_cfa_offset 8
 2474 09c4 BD46     	 mov sp,r7
 2475              	.LCFI162:
 2476              	 .cfi_def_cfa_register 13
 2477              	 
 2478 09c6 80BD     	 pop {r7,pc}
 2479              	 .cfi_endproc
 2480              	.LFE215:
 2482              	 .align 1
 2483              	 .global ast_disable_event
 2484              	 .syntax unified
 2485              	 .thumb
 2486              	 .thumb_func
 2487              	 .fpu softvfp
 2489              	ast_disable_event:
 2490              	.LFB216:
 755:../../../platform/sam/drivers/ast/ast.c **** 
 756:../../../platform/sam/drivers/ast/ast.c **** /**
 757:../../../platform/sam/drivers/ast/ast.c ****  * \brief Disable an AST event.
 758:../../../platform/sam/drivers/ast/ast.c ****  *
 759:../../../platform/sam/drivers/ast/ast.c ****  * \param[in,out] ast Module hardware register base address pointer
 760:../../../platform/sam/drivers/ast/ast.c ****  * \param[in] source  AST event source to be disabled
 761:../../../platform/sam/drivers/ast/ast.c ****  */
 762:../../../platform/sam/drivers/ast/ast.c **** void ast_disable_event(
 763:../../../platform/sam/drivers/ast/ast.c **** 		Ast *ast,
 764:../../../platform/sam/drivers/ast/ast.c **** 		ast_event_source_t source)
 765:../../../platform/sam/drivers/ast/ast.c **** {
 2491              	 .loc 7 765 0
 2492              	 .cfi_startproc
 2493              	 
 2494              	 
 2495 09c8 80B5     	 push {r7,lr}
 2496              	.LCFI163:
 2497              	 .cfi_def_cfa_offset 8
 2498              	 .cfi_offset 7,-8
 2499              	 .cfi_offset 14,-4
 2500 09ca 82B0     	 sub sp,sp,#8
 2501              	.LCFI164:
 2502              	 .cfi_def_cfa_offset 16
 2503 09cc 00AF     	 add r7,sp,#0
 2504              	.LCFI165:
 2505              	 .cfi_def_cfa_register 7
 2506 09ce 7860     	 str r0,[r7,#4]
 2507 09d0 0B46     	 mov r3,r1
 2508 09d2 FB70     	 strb r3,[r7,#3]
 766:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until the ast CTRL register is up-to-date */
 767:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 2509              	 .loc 7 767 0
 2510 09d4 00BF     	 nop
 2511              	.L171:
 2512              	 .loc 7 767 0 is_stmt 0 discriminator 1
 2513 09d6 7868     	 ldr r0,[r7,#4]
 2514 09d8 FFF7C2FB 	 bl ast_is_busy
 2515 09dc 0346     	 mov r3,r0
 2516 09de 002B     	 cmp r3,#0
 2517 09e0 F9D1     	 bne .L171
 768:../../../platform/sam/drivers/ast/ast.c **** 	}
 769:../../../platform/sam/drivers/ast/ast.c **** 
 770:../../../platform/sam/drivers/ast/ast.c **** 	switch (source) {
 2518              	 .loc 7 770 0 is_stmt 1
 2519 09e2 FB78     	 ldrb r3,[r7,#3]
 2520 09e4 012B     	 cmp r3,#1
 2521 09e6 09D0     	 beq .L173
 2522 09e8 022B     	 cmp r3,#2
 2523 09ea 0CD0     	 beq .L174
 2524 09ec 002B     	 cmp r3,#0
 2525 09ee 00D0     	 beq .L175
 771:../../../platform/sam/drivers/ast/ast.c **** 	case AST_EVENT_ALARM:
 772:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_EVD = AST_EVD_ALARM0;
 773:../../../platform/sam/drivers/ast/ast.c **** 		break;
 774:../../../platform/sam/drivers/ast/ast.c **** 
 775:../../../platform/sam/drivers/ast/ast.c **** 	case AST_EVENT_PER:
 776:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_EVD = AST_EVD_PER0;
 777:../../../platform/sam/drivers/ast/ast.c **** 		break;
 778:../../../platform/sam/drivers/ast/ast.c **** 
 779:../../../platform/sam/drivers/ast/ast.c **** 	case AST_EVENT_OVF:
 780:../../../platform/sam/drivers/ast/ast.c **** 		ast->AST_EVD = AST_EVD_OVF;
 781:../../../platform/sam/drivers/ast/ast.c **** 		break;
 782:../../../platform/sam/drivers/ast/ast.c **** 
 783:../../../platform/sam/drivers/ast/ast.c **** 	default:
 784:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2526              	 .loc 7 784 0
 2527 09f0 0DE0     	 b .L176
 2528              	.L175:
 772:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2529              	 .loc 7 772 0
 2530 09f2 7B68     	 ldr r3,[r7,#4]
 2531 09f4 4FF48072 	 mov r2,#256
 2532 09f8 DA64     	 str r2,[r3,#76]
 773:../../../platform/sam/drivers/ast/ast.c **** 
 2533              	 .loc 7 773 0
 2534 09fa 08E0     	 b .L176
 2535              	.L173:
 776:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2536              	 .loc 7 776 0
 2537 09fc 7B68     	 ldr r3,[r7,#4]
 2538 09fe 4FF48032 	 mov r2,#65536
 2539 0a02 DA64     	 str r2,[r3,#76]
 777:../../../platform/sam/drivers/ast/ast.c **** 
 2540              	 .loc 7 777 0
 2541 0a04 03E0     	 b .L176
 2542              	.L174:
 780:../../../platform/sam/drivers/ast/ast.c **** 		break;
 2543              	 .loc 7 780 0
 2544 0a06 7B68     	 ldr r3,[r7,#4]
 2545 0a08 0122     	 movs r2,#1
 2546 0a0a DA64     	 str r2,[r3,#76]
 781:../../../platform/sam/drivers/ast/ast.c **** 
 2547              	 .loc 7 781 0
 2548 0a0c 00BF     	 nop
 2549              	.L176:
 785:../../../platform/sam/drivers/ast/ast.c **** 	}
 786:../../../platform/sam/drivers/ast/ast.c **** 
 787:../../../platform/sam/drivers/ast/ast.c **** 	/* Wait until write is done */
 788:../../../platform/sam/drivers/ast/ast.c **** 	while (ast_is_busy(ast)) {
 2550              	 .loc 7 788 0 discriminator 1
 2551 0a0e 00BF     	 nop
 2552              	.L177:
 2553 0a10 7868     	 ldr r0,[r7,#4]
 2554 0a12 FFF7A5FB 	 bl ast_is_busy
 2555 0a16 0346     	 mov r3,r0
 2556 0a18 002B     	 cmp r3,#0
 2557 0a1a F9D1     	 bne .L177
 789:../../../platform/sam/drivers/ast/ast.c **** 	}
 790:../../../platform/sam/drivers/ast/ast.c **** }
 2558              	 .loc 7 790 0
 2559 0a1c 00BF     	 nop
 2560 0a1e 0837     	 adds r7,r7,#8
 2561              	.LCFI166:
 2562              	 .cfi_def_cfa_offset 8
 2563 0a20 BD46     	 mov sp,r7
 2564              	.LCFI167:
 2565              	 .cfi_def_cfa_register 13
 2566              	 
 2567 0a22 80BD     	 pop {r7,pc}
 2568              	 .cfi_endproc
 2569              	.LFE216:
 2571              	.Letext0:
 2572              	 .file 8 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 2573              	 .file 9 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 2574              	 .file 10 "../../../platform/sam/utils/cmsis/sam4l/include/sam4lc4b.h"
 2575              	 .file 11 "../../../platform/sam/utils/cmsis/sam4l/source/templates/system_sam4l.h"
 2576              	 .file 12 "../../../platform/sam/utils/cmsis/sam4l/include/component/component_ast.h"
 2577              	 .file 13 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\lock.h"
 2578              	 .file 14 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_types.h"
 2579              	 .file 15 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 2580              	 .file 16 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\reent.h"
 2581              	 .file 17 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\stdlib.h"
 2582              	 .file 18 "../../../platform/sam/utils/compiler.h"
 2583              	 .file 19 "../../../platform/common/services/usb/usb_protocol.h"
 2584              	 .file 20 "../../../platform/common/services/usb/udc/udi.h"
 2585              	 .file 21 "../../../platform/common/services/usb/udc/udc_desc.h"
 2586              	 .file 22 "../../../platform/common/services/usb/udc/udd.h"
 2587              	 .file 23 "../../../platform/common/services/usb/class/cdc/device/udi_cdc.h"
 2588              	 .file 24 "../../../platform/common/utils/stdio/stdio_usb/stdio_usb.h"
 2589              	 .file 25 "../../../platform/common/services/sleepmgr/sam4l/sleepmgr.h"
 2590              	 .file 26 "../../../platform/common/services/clock/sam4l/sysclk.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ast.c
    {standard input}:15     .text:00000000 $t
    {standard input}:21     .text:00000000 NVIC_EnableIRQ
    {standard input}:67     .text:0000002c $d
    {standard input}:71     .text:00000030 $t
    {standard input}:77     .text:00000030 NVIC_ClearPendingIRQ
    {standard input}:123    .text:00000060 $d
    {standard input}:127    .text:00000064 $t
    {standard input}:133    .text:00000064 NVIC_SetPriority
    {standard input}:198    .text:000000b0 $d
    {standard input}:204    .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:207    .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:212    .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:213    .bss.cpu_irq_prev_interrupt_state:00000000 $d
    {standard input}:215    .text:000000b8 $t
    {standard input}:221    .text:000000b8 cpu_irq_save
    {standard input}:307    .text:000000ec $d
    {standard input}:311    .text:000000f0 $t
    {standard input}:317    .text:000000f0 cpu_irq_is_enabled_flags
    {standard input}:365    .text:0000010e cpu_irq_restore
    {standard input}:429    .text:00000138 $d
    {standard input}:433    .text:0000013c $t
    {standard input}:439    .text:0000013c ast_is_clkbusy
    {standard input}:490    .text:00000160 ast_is_busy
    {standard input}:540    .text:00000184 sleepmgr_lock_mode
    {standard input}:587    .text:000001b0 $d
    {standard input}:591    .text:000001b4 $t
    {standard input}:597    .text:000001b4 sleepmgr_unlock_mode
    {standard input}:643    .text:000001e0 $d
                            *COM*:00000014 ast_callback_pointer
    {standard input}:648    .text:000001e4 $t
    {standard input}:655    .text:000001e4 ast_is_enabled
    {standard input}:712    .text:00000214 ast_enable
    {standard input}:751    .text:00000230 $d
    {standard input}:755    .text:00000234 $t
    {standard input}:762    .text:00000234 ast_disable
    {standard input}:825    .text:00000278 $d
    {standard input}:829    .text:0000027c $t
    {standard input}:836    .text:0000027c ast_enable_counter_clear_on_alarm
    {standard input}:911    .text:000002c4 ast_clear_prescalar
    {standard input}:973    .text:000002fc ast_set_config
    {standard input}:1516   .text:000005ca ast_write_calendar_value
    {standard input}:1577   .text:000005fe ast_write_counter_value
    {standard input}:1179   .text:0000041a ast_configure_digital_tuner
    {standard input}:1363   .text:00000524 ast_init_digital_tuner
    {standard input}:1351   .text:0000051c $d
    {standard input}:1356   .text:00000524 $t
    {standard input}:1454   .text:00000592 ast_disable_digital_tuner
    {standard input}:1638   .text:00000632 ast_read_calendar_value
    {standard input}:1686   .text:0000064c ast_write_alarm0_value
    {standard input}:1747   .text:00000680 ast_write_periodic0_value
    {standard input}:1808   .text:000006b4 ast_enable_interrupt
    {standard input}:1845   .text:000006dc $d
    {standard input}:1850   .text:000006f0 $t
    {standard input}:1918   .text:00000738 ast_disable_interrupt
    {standard input}:1955   .text:00000760 $d
    {standard input}:1960   .text:00000774 $t
    {standard input}:2028   .text:000007bc ast_clear_interrupt_flag
    {standard input}:2065   .text:000007e4 $d
    {standard input}:2070   .text:000007f8 $t
    {standard input}:2138   .text:00000840 ast_set_callback
    {standard input}:2199   .text:00000894 $d
    {standard input}:2203   .text:00000898 $t
    {standard input}:2210   .text:00000898 ast_enable_wakeup
    {standard input}:2305   .text:00000902 ast_disable_wakeup
    {standard input}:2400   .text:0000096c ast_enable_event
    {standard input}:2489   .text:000009c8 ast_disable_event
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
g_interrupt_enabled
sleepmgr_locks
sysclk_enable_peripheral_clock
sysclk_disable_peripheral_clock
