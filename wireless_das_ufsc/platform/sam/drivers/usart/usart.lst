   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "usart.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .text
  27              	 .align 1
  28              	 .syntax unified
  29              	 .thumb
  30              	 .thumb_func
  31              	 .fpu softvfp
  33              	usart_set_async_baudrate:
  34              	.LFB122:
  35              	 .file 1 "../../../platform/sam/drivers/usart/usart.c"
   1:../../../platform/sam/drivers/usart/usart.c **** /**
   2:../../../platform/sam/drivers/usart/usart.c ****  * \file
   3:../../../platform/sam/drivers/usart/usart.c ****  *
   4:../../../platform/sam/drivers/usart/usart.c ****  * \brief Universal Synchronous Asynchronous Receiver Transmitter (USART) driver
   5:../../../platform/sam/drivers/usart/usart.c ****  * for SAM.
   6:../../../platform/sam/drivers/usart/usart.c ****  *
   7:../../../platform/sam/drivers/usart/usart.c ****  * Copyright (c) 2011-2014 Atmel Corporation. All rights reserved.
   8:../../../platform/sam/drivers/usart/usart.c ****  *
   9:../../../platform/sam/drivers/usart/usart.c ****  * \asf_license_start
  10:../../../platform/sam/drivers/usart/usart.c ****  *
  11:../../../platform/sam/drivers/usart/usart.c ****  * \page License
  12:../../../platform/sam/drivers/usart/usart.c ****  *
  13:../../../platform/sam/drivers/usart/usart.c ****  * Redistribution and use in source and binary forms, with or without
  14:../../../platform/sam/drivers/usart/usart.c ****  * modification, are permitted provided that the following conditions are met:
  15:../../../platform/sam/drivers/usart/usart.c ****  *
  16:../../../platform/sam/drivers/usart/usart.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  17:../../../platform/sam/drivers/usart/usart.c ****  *    this list of conditions and the following disclaimer.
  18:../../../platform/sam/drivers/usart/usart.c ****  *
  19:../../../platform/sam/drivers/usart/usart.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  20:../../../platform/sam/drivers/usart/usart.c ****  *    this list of conditions and the following disclaimer in the documentation
  21:../../../platform/sam/drivers/usart/usart.c ****  *    and/or other materials provided with the distribution.
  22:../../../platform/sam/drivers/usart/usart.c ****  *
  23:../../../platform/sam/drivers/usart/usart.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  24:../../../platform/sam/drivers/usart/usart.c ****  *    from this software without specific prior written permission.
  25:../../../platform/sam/drivers/usart/usart.c ****  *
  26:../../../platform/sam/drivers/usart/usart.c ****  * 4. This software may only be redistributed and used in connection with an
  27:../../../platform/sam/drivers/usart/usart.c ****  *    Atmel microcontroller product.
  28:../../../platform/sam/drivers/usart/usart.c ****  *
  29:../../../platform/sam/drivers/usart/usart.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  30:../../../platform/sam/drivers/usart/usart.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  31:../../../platform/sam/drivers/usart/usart.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  32:../../../platform/sam/drivers/usart/usart.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  33:../../../platform/sam/drivers/usart/usart.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:../../../platform/sam/drivers/usart/usart.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  35:../../../platform/sam/drivers/usart/usart.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  36:../../../platform/sam/drivers/usart/usart.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  37:../../../platform/sam/drivers/usart/usart.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  38:../../../platform/sam/drivers/usart/usart.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  39:../../../platform/sam/drivers/usart/usart.c ****  * POSSIBILITY OF SUCH DAMAGE.
  40:../../../platform/sam/drivers/usart/usart.c ****  *
  41:../../../platform/sam/drivers/usart/usart.c ****  * \asf_license_stop
  42:../../../platform/sam/drivers/usart/usart.c ****  *
  43:../../../platform/sam/drivers/usart/usart.c ****  */
  44:../../../platform/sam/drivers/usart/usart.c **** 
  45:../../../platform/sam/drivers/usart/usart.c **** #include "usart.h"
  46:../../../platform/sam/drivers/usart/usart.c **** 
  47:../../../platform/sam/drivers/usart/usart.c **** /// @cond 0
  48:../../../platform/sam/drivers/usart/usart.c **** /**INDENT-OFF**/
  49:../../../platform/sam/drivers/usart/usart.c **** #ifdef __cplusplus
  50:../../../platform/sam/drivers/usart/usart.c **** extern "C" {
  51:../../../platform/sam/drivers/usart/usart.c **** #endif
  52:../../../platform/sam/drivers/usart/usart.c **** /**INDENT-ON**/
  53:../../../platform/sam/drivers/usart/usart.c **** /// @endcond
  54:../../../platform/sam/drivers/usart/usart.c **** 
  55:../../../platform/sam/drivers/usart/usart.c **** /**
  56:../../../platform/sam/drivers/usart/usart.c ****  * \defgroup sam_drivers_usart_group Universal Synchronous Asynchronous
  57:../../../platform/sam/drivers/usart/usart.c ****  * Receiver Transmitter (USART)
  58:../../../platform/sam/drivers/usart/usart.c ****  *
  59:../../../platform/sam/drivers/usart/usart.c ****  * The Universal Synchronous Asynchronous Receiver Transceiver (USART)
  60:../../../platform/sam/drivers/usart/usart.c ****  * provides one full duplex universal synchronous asynchronous serial link.
  61:../../../platform/sam/drivers/usart/usart.c ****  * Data frame format is widely programmable (data length, parity, number of
  62:../../../platform/sam/drivers/usart/usart.c ****  * stop bits) to support a maximum of standards. The receiver implements
  63:../../../platform/sam/drivers/usart/usart.c ****  * parity error, framing error and overrun error detection. The receiver
  64:../../../platform/sam/drivers/usart/usart.c ****  * time-out enables handling variable-length frames and the transmitter
  65:../../../platform/sam/drivers/usart/usart.c ****  * timeguard facilitates communications with slow remote devices. Multidrop
  66:../../../platform/sam/drivers/usart/usart.c ****  * communications are also supported through address bit handling in reception
  67:../../../platform/sam/drivers/usart/usart.c ****  * and transmission. The driver supports the following modes:
  68:../../../platform/sam/drivers/usart/usart.c ****  * RS232, RS485, SPI, IrDA, ISO7816, MODEM, Hardware handshaking and LIN.
  69:../../../platform/sam/drivers/usart/usart.c ****  *
  70:../../../platform/sam/drivers/usart/usart.c ****  * @{
  71:../../../platform/sam/drivers/usart/usart.c ****  */
  72:../../../platform/sam/drivers/usart/usart.c **** 
  73:../../../platform/sam/drivers/usart/usart.c **** /* The write protect key value. */
  74:../../../platform/sam/drivers/usart/usart.c **** #ifndef US_WPMR_WPKEY_PASSWD
  75:../../../platform/sam/drivers/usart/usart.c **** #define US_WPMR_WPKEY_PASSWD    US_WPMR_WPKEY(0x555341U)
  76:../../../platform/sam/drivers/usart/usart.c **** #endif
  77:../../../platform/sam/drivers/usart/usart.c **** 
  78:../../../platform/sam/drivers/usart/usart.c **** #ifndef US_WPMR_WPKEY_PASSWD
  79:../../../platform/sam/drivers/usart/usart.c **** #  define US_WPMR_WPKEY_PASSWD US_WPMR_WPKEY(US_WPKEY_VALUE)
  80:../../../platform/sam/drivers/usart/usart.c **** #endif
  81:../../../platform/sam/drivers/usart/usart.c **** 
  82:../../../platform/sam/drivers/usart/usart.c **** /* The CD value scope programmed in MR register. */
  83:../../../platform/sam/drivers/usart/usart.c **** #define MIN_CD_VALUE                  0x01
  84:../../../platform/sam/drivers/usart/usart.c **** #define MIN_CD_VALUE_SPI              0x04
  85:../../../platform/sam/drivers/usart/usart.c **** #define MAX_CD_VALUE                  US_BRGR_CD_Msk
  86:../../../platform/sam/drivers/usart/usart.c **** 
  87:../../../platform/sam/drivers/usart/usart.c **** /* The receiver sampling divide of baudrate clock. */
  88:../../../platform/sam/drivers/usart/usart.c **** #define HIGH_FRQ_SAMPLE_DIV           16
  89:../../../platform/sam/drivers/usart/usart.c **** #define LOW_FRQ_SAMPLE_DIV            8
  90:../../../platform/sam/drivers/usart/usart.c **** 
  91:../../../platform/sam/drivers/usart/usart.c **** /* Max transmitter timeguard. */
  92:../../../platform/sam/drivers/usart/usart.c **** #define MAX_TRAN_GUARD_TIME           US_TTGR_TG_Msk
  93:../../../platform/sam/drivers/usart/usart.c **** 
  94:../../../platform/sam/drivers/usart/usart.c **** /* The non-existent parity error number. */
  95:../../../platform/sam/drivers/usart/usart.c **** #define USART_PARITY_ERROR            5
  96:../../../platform/sam/drivers/usart/usart.c **** 
  97:../../../platform/sam/drivers/usart/usart.c **** /* ISO7816 protocol type. */
  98:../../../platform/sam/drivers/usart/usart.c **** #define ISO7816_T_0                   0
  99:../../../platform/sam/drivers/usart/usart.c **** #define ISO7816_T_1                   1
 100:../../../platform/sam/drivers/usart/usart.c **** 
 101:../../../platform/sam/drivers/usart/usart.c **** /**
 102:../../../platform/sam/drivers/usart/usart.c ****  * \brief Calculate a clock divider(CD) and a fractional part (FP) for the
 103:../../../platform/sam/drivers/usart/usart.c ****  * USART asynchronous modes to generate a baudrate as close as possible to
 104:../../../platform/sam/drivers/usart/usart.c ****  * the baudrate set point.
 105:../../../platform/sam/drivers/usart/usart.c ****  *
 106:../../../platform/sam/drivers/usart/usart.c ****  * \note Baud rate calculation: Baudrate = ul_mck/(Over * (CD + FP/8))
 107:../../../platform/sam/drivers/usart/usart.c ****  * (Over being 16 or 8). The maximal oversampling is selected if it allows to
 108:../../../platform/sam/drivers/usart/usart.c ****  * generate a baudrate close to the set point.
 109:../../../platform/sam/drivers/usart/usart.c ****  *
 110:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 111:../../../platform/sam/drivers/usart/usart.c ****  * \param baudrate Baud rate set point.
 112:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_mck USART module input clock frequency.
 113:../../../platform/sam/drivers/usart/usart.c ****  *
 114:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 Baud rate is successfully initialized.
 115:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 Baud rate set point is out of range for the given input clock
 116:../../../platform/sam/drivers/usart/usart.c ****  * frequency.
 117:../../../platform/sam/drivers/usart/usart.c ****  */
 118:../../../platform/sam/drivers/usart/usart.c **** static uint32_t usart_set_async_baudrate(Usart *p_usart,
 119:../../../platform/sam/drivers/usart/usart.c **** 		uint32_t baudrate, uint32_t ul_mck)
 120:../../../platform/sam/drivers/usart/usart.c **** {
  36              	 .loc 1 120 0
  37              	 .cfi_startproc
  38              	 
  39              	 
  40              	 
  41 0000 80B4     	 push {r7}
  42              	.LCFI0:
  43              	 .cfi_def_cfa_offset 4
  44              	 .cfi_offset 7,-4
  45 0002 89B0     	 sub sp,sp,#36
  46              	.LCFI1:
  47              	 .cfi_def_cfa_offset 40
  48 0004 00AF     	 add r7,sp,#0
  49              	.LCFI2:
  50              	 .cfi_def_cfa_register 7
  51 0006 F860     	 str r0,[r7,#12]
  52 0008 B960     	 str r1,[r7,#8]
  53 000a 7A60     	 str r2,[r7,#4]
 121:../../../platform/sam/drivers/usart/usart.c **** 	uint32_t over;
 122:../../../platform/sam/drivers/usart/usart.c **** 	uint32_t cd_fp;
 123:../../../platform/sam/drivers/usart/usart.c **** 	uint32_t cd;
 124:../../../platform/sam/drivers/usart/usart.c **** 	uint32_t fp;
 125:../../../platform/sam/drivers/usart/usart.c **** 
 126:../../../platform/sam/drivers/usart/usart.c **** 	/* Calculate the receiver sampling divide of baudrate clock. */
 127:../../../platform/sam/drivers/usart/usart.c **** 	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  54              	 .loc 1 127 0
  55 000c BB68     	 ldr r3,[r7,#8]
  56 000e 1A01     	 lsls r2,r3,#4
  57 0010 7B68     	 ldr r3,[r7,#4]
  58 0012 9A42     	 cmp r2,r3
  59 0014 02D8     	 bhi .L2
 128:../../../platform/sam/drivers/usart/usart.c **** 		over = HIGH_FRQ_SAMPLE_DIV;
  60              	 .loc 1 128 0
  61 0016 1023     	 movs r3,#16
  62 0018 FB61     	 str r3,[r7,#28]
  63 001a 01E0     	 b .L3
  64              	.L2:
 129:../../../platform/sam/drivers/usart/usart.c **** 	} else {
 130:../../../platform/sam/drivers/usart/usart.c **** 		over = LOW_FRQ_SAMPLE_DIV;
  65              	 .loc 1 130 0
  66 001c 0823     	 movs r3,#8
  67 001e FB61     	 str r3,[r7,#28]
  68              	.L3:
 131:../../../platform/sam/drivers/usart/usart.c **** 	}
 132:../../../platform/sam/drivers/usart/usart.c **** 
 133:../../../platform/sam/drivers/usart/usart.c **** 	/* Calculate clock divider according to the fraction calculated formula. */
 134:../../../platform/sam/drivers/usart/usart.c **** 	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  69              	 .loc 1 134 0
  70 0020 7B68     	 ldr r3,[r7,#4]
  71 0022 DA00     	 lsls r2,r3,#3
  72 0024 FB69     	 ldr r3,[r7,#28]
  73 0026 B968     	 ldr r1,[r7,#8]
  74 0028 01FB03F3 	 mul r3,r1,r3
  75 002c 5B08     	 lsrs r3,r3,#1
  76 002e 1A44     	 add r2,r2,r3
  77 0030 FB69     	 ldr r3,[r7,#28]
  78 0032 B968     	 ldr r1,[r7,#8]
  79 0034 01FB03F3 	 mul r3,r1,r3
  80 0038 B2FBF3F3 	 udiv r3,r2,r3
  81 003c BB61     	 str r3,[r7,#24]
 135:../../../platform/sam/drivers/usart/usart.c **** 	cd = cd_fp >> 3;
  82              	 .loc 1 135 0
  83 003e BB69     	 ldr r3,[r7,#24]
  84 0040 DB08     	 lsrs r3,r3,#3
  85 0042 7B61     	 str r3,[r7,#20]
 136:../../../platform/sam/drivers/usart/usart.c **** 	fp = cd_fp & 0x07;
  86              	 .loc 1 136 0
  87 0044 BB69     	 ldr r3,[r7,#24]
  88 0046 03F00703 	 and r3,r3,#7
  89 004a 3B61     	 str r3,[r7,#16]
 137:../../../platform/sam/drivers/usart/usart.c **** 	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  90              	 .loc 1 137 0
  91 004c 7B69     	 ldr r3,[r7,#20]
  92 004e 002B     	 cmp r3,#0
  93 0050 03D0     	 beq .L4
  94              	 .loc 1 137 0 is_stmt 0 discriminator 1
  95 0052 7B69     	 ldr r3,[r7,#20]
  96 0054 B3F5803F 	 cmp r3,#65536
  97 0058 01D3     	 bcc .L5
  98              	.L4:
 138:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
  99              	 .loc 1 138 0 is_stmt 1
 100 005a 0123     	 movs r3,#1
 101 005c 0FE0     	 b .L6
 102              	.L5:
 139:../../../platform/sam/drivers/usart/usart.c **** 	}
 140:../../../platform/sam/drivers/usart/usart.c **** 
 141:../../../platform/sam/drivers/usart/usart.c **** 	/* Configure the OVER bit in MR register. */
 142:../../../platform/sam/drivers/usart/usart.c **** 	if (over == 8) {
 103              	 .loc 1 142 0
 104 005e FB69     	 ldr r3,[r7,#28]
 105 0060 082B     	 cmp r3,#8
 106 0062 05D1     	 bne .L7
 143:../../../platform/sam/drivers/usart/usart.c **** 		p_usart->US_MR |= US_MR_OVER;
 107              	 .loc 1 143 0
 108 0064 FB68     	 ldr r3,[r7,#12]
 109 0066 5B68     	 ldr r3,[r3,#4]
 110 0068 43F40022 	 orr r2,r3,#524288
 111 006c FB68     	 ldr r3,[r7,#12]
 112 006e 5A60     	 str r2,[r3,#4]
 113              	.L7:
 144:../../../platform/sam/drivers/usart/usart.c **** 	}
 145:../../../platform/sam/drivers/usart/usart.c **** 
 146:../../../platform/sam/drivers/usart/usart.c **** 	/* Configure the baudrate generate register. */
 147:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
 114              	 .loc 1 147 0
 115 0070 3B69     	 ldr r3,[r7,#16]
 116 0072 1A04     	 lsls r2,r3,#16
 117 0074 7B69     	 ldr r3,[r7,#20]
 118 0076 1A43     	 orrs r2,r2,r3
 119 0078 FB68     	 ldr r3,[r7,#12]
 120 007a 1A62     	 str r2,[r3,#32]
 148:../../../platform/sam/drivers/usart/usart.c **** 
 149:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 121              	 .loc 1 149 0
 122 007c 0023     	 movs r3,#0
 123              	.L6:
 150:../../../platform/sam/drivers/usart/usart.c **** }
 124              	 .loc 1 150 0
 125 007e 1846     	 mov r0,r3
 126 0080 2437     	 adds r7,r7,#36
 127              	.LCFI3:
 128              	 .cfi_def_cfa_offset 4
 129 0082 BD46     	 mov sp,r7
 130              	.LCFI4:
 131              	 .cfi_def_cfa_register 13
 132              	 
 133 0084 80BC     	 pop {r7}
 134              	.LCFI5:
 135              	 .cfi_restore 7
 136              	 .cfi_def_cfa_offset 0
 137 0086 7047     	 bx lr
 138              	 .cfi_endproc
 139              	.LFE122:
 141              	 .align 1
 142              	 .syntax unified
 143              	 .thumb
 144              	 .thumb_func
 145              	 .fpu softvfp
 147              	usart_set_sync_master_baudrate:
 148              	.LFB123:
 151:../../../platform/sam/drivers/usart/usart.c **** 
 152:../../../platform/sam/drivers/usart/usart.c **** /**
 153:../../../platform/sam/drivers/usart/usart.c ****  * \brief Calculate a clock divider for the USART synchronous master modes
 154:../../../platform/sam/drivers/usart/usart.c ****  * to generate a baudrate as close as possible to the baudrate set point.
 155:../../../platform/sam/drivers/usart/usart.c ****  *
 156:../../../platform/sam/drivers/usart/usart.c ****  * \note Synchronous baudrate calculation: baudrate = ul_mck / cd
 157:../../../platform/sam/drivers/usart/usart.c ****  *
 158:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 159:../../../platform/sam/drivers/usart/usart.c ****  * \param baudrate Baud rate set point.
 160:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_mck USART module input clock frequency.
 161:../../../platform/sam/drivers/usart/usart.c ****  *
 162:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 Baud rate is successfully initialized.
 163:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 Baud rate set point is out of range for the given input clock
 164:../../../platform/sam/drivers/usart/usart.c ****  * frequency.
 165:../../../platform/sam/drivers/usart/usart.c ****  */
 166:../../../platform/sam/drivers/usart/usart.c **** static uint32_t usart_set_sync_master_baudrate(Usart *p_usart,
 167:../../../platform/sam/drivers/usart/usart.c **** 		uint32_t baudrate, uint32_t ul_mck)
 168:../../../platform/sam/drivers/usart/usart.c **** {
 149              	 .loc 1 168 0
 150              	 .cfi_startproc
 151              	 
 152              	 
 153              	 
 154 0088 80B4     	 push {r7}
 155              	.LCFI6:
 156              	 .cfi_def_cfa_offset 4
 157              	 .cfi_offset 7,-4
 158 008a 87B0     	 sub sp,sp,#28
 159              	.LCFI7:
 160              	 .cfi_def_cfa_offset 32
 161 008c 00AF     	 add r7,sp,#0
 162              	.LCFI8:
 163              	 .cfi_def_cfa_register 7
 164 008e F860     	 str r0,[r7,#12]
 165 0090 B960     	 str r1,[r7,#8]
 166 0092 7A60     	 str r2,[r7,#4]
 169:../../../platform/sam/drivers/usart/usart.c **** 	uint32_t cd;
 170:../../../platform/sam/drivers/usart/usart.c **** 
 171:../../../platform/sam/drivers/usart/usart.c **** 	/* Calculate clock divider according to the formula in synchronous mode. */
 172:../../../platform/sam/drivers/usart/usart.c **** 	cd = (ul_mck + baudrate / 2) / baudrate;
 167              	 .loc 1 172 0
 168 0094 BB68     	 ldr r3,[r7,#8]
 169 0096 5A08     	 lsrs r2,r3,#1
 170 0098 7B68     	 ldr r3,[r7,#4]
 171 009a 1A44     	 add r2,r2,r3
 172 009c BB68     	 ldr r3,[r7,#8]
 173 009e B2FBF3F3 	 udiv r3,r2,r3
 174 00a2 7B61     	 str r3,[r7,#20]
 173:../../../platform/sam/drivers/usart/usart.c **** 
 174:../../../platform/sam/drivers/usart/usart.c **** 	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
 175              	 .loc 1 174 0
 176 00a4 7B69     	 ldr r3,[r7,#20]
 177 00a6 002B     	 cmp r3,#0
 178 00a8 03D0     	 beq .L9
 179              	 .loc 1 174 0 is_stmt 0 discriminator 1
 180 00aa 7B69     	 ldr r3,[r7,#20]
 181 00ac B3F5803F 	 cmp r3,#65536
 182 00b0 01D3     	 bcc .L10
 183              	.L9:
 175:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 184              	 .loc 1 175 0 is_stmt 1
 185 00b2 0123     	 movs r3,#1
 186 00b4 0BE0     	 b .L11
 187              	.L10:
 176:../../../platform/sam/drivers/usart/usart.c **** 	}
 177:../../../platform/sam/drivers/usart/usart.c **** 
 178:../../../platform/sam/drivers/usart/usart.c **** 	/* Configure the baudrate generate register. */
 179:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_BRGR = cd << US_BRGR_CD_Pos;
 188              	 .loc 1 179 0
 189 00b6 FB68     	 ldr r3,[r7,#12]
 190 00b8 7A69     	 ldr r2,[r7,#20]
 191 00ba 1A62     	 str r2,[r3,#32]
 180:../../../platform/sam/drivers/usart/usart.c **** 
 181:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR = (p_usart->US_MR & ~US_MR_USCLKS_Msk) |
 192              	 .loc 1 181 0
 193 00bc FB68     	 ldr r3,[r7,#12]
 194 00be 5B68     	 ldr r3,[r3,#4]
 182:../../../platform/sam/drivers/usart/usart.c **** 			US_MR_USCLKS_MCK | US_MR_SYNC;
 195              	 .loc 1 182 0
 196 00c0 23F49873 	 bic r3,r3,#304
 197 00c4 43F48072 	 orr r2,r3,#256
 181:../../../platform/sam/drivers/usart/usart.c **** 			US_MR_USCLKS_MCK | US_MR_SYNC;
 198              	 .loc 1 181 0
 199 00c8 FB68     	 ldr r3,[r7,#12]
 200 00ca 5A60     	 str r2,[r3,#4]
 183:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 201              	 .loc 1 183 0
 202 00cc 0023     	 movs r3,#0
 203              	.L11:
 184:../../../platform/sam/drivers/usart/usart.c **** }
 204              	 .loc 1 184 0
 205 00ce 1846     	 mov r0,r3
 206 00d0 1C37     	 adds r7,r7,#28
 207              	.LCFI9:
 208              	 .cfi_def_cfa_offset 4
 209 00d2 BD46     	 mov sp,r7
 210              	.LCFI10:
 211              	 .cfi_def_cfa_register 13
 212              	 
 213 00d4 80BC     	 pop {r7}
 214              	.LCFI11:
 215              	 .cfi_restore 7
 216              	 .cfi_def_cfa_offset 0
 217 00d6 7047     	 bx lr
 218              	 .cfi_endproc
 219              	.LFE123:
 221              	 .align 1
 222              	 .syntax unified
 223              	 .thumb
 224              	 .thumb_func
 225              	 .fpu softvfp
 227              	usart_set_sync_slave_baudrate:
 228              	.LFB124:
 185:../../../platform/sam/drivers/usart/usart.c **** 
 186:../../../platform/sam/drivers/usart/usart.c **** /**
 187:../../../platform/sam/drivers/usart/usart.c ****  * \brief Select the SCK pin as the source of baud rate for the USART
 188:../../../platform/sam/drivers/usart/usart.c ****  * synchronous slave modes.
 189:../../../platform/sam/drivers/usart/usart.c ****  *
 190:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 191:../../../platform/sam/drivers/usart/usart.c ****  */
 192:../../../platform/sam/drivers/usart/usart.c **** static void usart_set_sync_slave_baudrate(Usart *p_usart)
 193:../../../platform/sam/drivers/usart/usart.c **** {
 229              	 .loc 1 193 0
 230              	 .cfi_startproc
 231              	 
 232              	 
 233              	 
 234 00d8 80B4     	 push {r7}
 235              	.LCFI12:
 236              	 .cfi_def_cfa_offset 4
 237              	 .cfi_offset 7,-4
 238 00da 83B0     	 sub sp,sp,#12
 239              	.LCFI13:
 240              	 .cfi_def_cfa_offset 16
 241 00dc 00AF     	 add r7,sp,#0
 242              	.LCFI14:
 243              	 .cfi_def_cfa_register 7
 244 00de 7860     	 str r0,[r7,#4]
 194:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR = (p_usart->US_MR & ~US_MR_USCLKS_Msk) |
 245              	 .loc 1 194 0
 246 00e0 7B68     	 ldr r3,[r7,#4]
 247 00e2 5B68     	 ldr r3,[r3,#4]
 195:../../../platform/sam/drivers/usart/usart.c **** 			US_MR_USCLKS_SCK | US_MR_SYNC;
 248              	 .loc 1 195 0
 249 00e4 43F49872 	 orr r2,r3,#304
 194:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR = (p_usart->US_MR & ~US_MR_USCLKS_Msk) |
 250              	 .loc 1 194 0
 251 00e8 7B68     	 ldr r3,[r7,#4]
 252 00ea 5A60     	 str r2,[r3,#4]
 196:../../../platform/sam/drivers/usart/usart.c **** }
 253              	 .loc 1 196 0
 254 00ec 00BF     	 nop
 255 00ee 0C37     	 adds r7,r7,#12
 256              	.LCFI15:
 257              	 .cfi_def_cfa_offset 4
 258 00f0 BD46     	 mov sp,r7
 259              	.LCFI16:
 260              	 .cfi_def_cfa_register 13
 261              	 
 262 00f2 80BC     	 pop {r7}
 263              	.LCFI17:
 264              	 .cfi_restore 7
 265              	 .cfi_def_cfa_offset 0
 266 00f4 7047     	 bx lr
 267              	 .cfi_endproc
 268              	.LFE124:
 270              	 .align 1
 271              	 .syntax unified
 272              	 .thumb
 273              	 .thumb_func
 274              	 .fpu softvfp
 276              	usart_set_iso7816_clock:
 277              	.LFB125:
 197:../../../platform/sam/drivers/usart/usart.c **** 
 198:../../../platform/sam/drivers/usart/usart.c **** 
 199:../../../platform/sam/drivers/usart/usart.c **** /**
 200:../../../platform/sam/drivers/usart/usart.c ****  * \brief Calculate a clock divider (\e CD) for the USART ISO7816 mode to
 201:../../../platform/sam/drivers/usart/usart.c ****  * generate an ISO7816 clock as close as possible to the clock set point.
 202:../../../platform/sam/drivers/usart/usart.c ****  *
 203:../../../platform/sam/drivers/usart/usart.c ****  * \note ISO7816 clock calculation: Clock = ul_mck / cd
 204:../../../platform/sam/drivers/usart/usart.c ****  *
 205:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 206:../../../platform/sam/drivers/usart/usart.c ****  * \param clock ISO7816 clock set point.
 207:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_mck USART module input clock frequency.
 208:../../../platform/sam/drivers/usart/usart.c ****  *
 209:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 ISO7816 clock is successfully initialized.
 210:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 ISO7816 clock set point is out of range for the given input clock
 211:../../../platform/sam/drivers/usart/usart.c ****  * frequency.
 212:../../../platform/sam/drivers/usart/usart.c ****  */
 213:../../../platform/sam/drivers/usart/usart.c **** static uint32_t usart_set_iso7816_clock(Usart *p_usart,
 214:../../../platform/sam/drivers/usart/usart.c **** 		uint32_t clock, uint32_t ul_mck)
 215:../../../platform/sam/drivers/usart/usart.c **** {
 278              	 .loc 1 215 0
 279              	 .cfi_startproc
 280              	 
 281              	 
 282              	 
 283 00f6 80B4     	 push {r7}
 284              	.LCFI18:
 285              	 .cfi_def_cfa_offset 4
 286              	 .cfi_offset 7,-4
 287 00f8 87B0     	 sub sp,sp,#28
 288              	.LCFI19:
 289              	 .cfi_def_cfa_offset 32
 290 00fa 00AF     	 add r7,sp,#0
 291              	.LCFI20:
 292              	 .cfi_def_cfa_register 7
 293 00fc F860     	 str r0,[r7,#12]
 294 00fe B960     	 str r1,[r7,#8]
 295 0100 7A60     	 str r2,[r7,#4]
 216:../../../platform/sam/drivers/usart/usart.c **** 	uint32_t cd;
 217:../../../platform/sam/drivers/usart/usart.c **** 
 218:../../../platform/sam/drivers/usart/usart.c **** 	/* Calculate clock divider according to the formula in ISO7816 mode. */
 219:../../../platform/sam/drivers/usart/usart.c **** 	cd = (ul_mck + clock / 2) / clock;
 296              	 .loc 1 219 0
 297 0102 BB68     	 ldr r3,[r7,#8]
 298 0104 5A08     	 lsrs r2,r3,#1
 299 0106 7B68     	 ldr r3,[r7,#4]
 300 0108 1A44     	 add r2,r2,r3
 301 010a BB68     	 ldr r3,[r7,#8]
 302 010c B2FBF3F3 	 udiv r3,r2,r3
 303 0110 7B61     	 str r3,[r7,#20]
 220:../../../platform/sam/drivers/usart/usart.c **** 
 221:../../../platform/sam/drivers/usart/usart.c **** 	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
 304              	 .loc 1 221 0
 305 0112 7B69     	 ldr r3,[r7,#20]
 306 0114 002B     	 cmp r3,#0
 307 0116 03D0     	 beq .L14
 308              	 .loc 1 221 0 is_stmt 0 discriminator 1
 309 0118 7B69     	 ldr r3,[r7,#20]
 310 011a B3F5803F 	 cmp r3,#65536
 311 011e 01D3     	 bcc .L15
 312              	.L14:
 222:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 313              	 .loc 1 222 0 is_stmt 1
 314 0120 0123     	 movs r3,#1
 315 0122 0DE0     	 b .L16
 316              	.L15:
 223:../../../platform/sam/drivers/usart/usart.c **** 	}
 224:../../../platform/sam/drivers/usart/usart.c **** 
 225:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR = (p_usart->US_MR & ~(US_MR_USCLKS_Msk | US_MR_SYNC |
 317              	 .loc 1 225 0
 318 0124 FB68     	 ldr r3,[r7,#12]
 319 0126 5B68     	 ldr r3,[r3,#4]
 226:../../../platform/sam/drivers/usart/usart.c **** 			US_MR_OVER)) | US_MR_USCLKS_MCK | US_MR_CLKO;
 320              	 .loc 1 226 0
 321 0128 23F44023 	 bic r3,r3,#786432
 322 012c 23F49873 	 bic r3,r3,#304
 323 0130 43F48022 	 orr r2,r3,#262144
 225:../../../platform/sam/drivers/usart/usart.c **** 			US_MR_OVER)) | US_MR_USCLKS_MCK | US_MR_CLKO;
 324              	 .loc 1 225 0
 325 0134 FB68     	 ldr r3,[r7,#12]
 326 0136 5A60     	 str r2,[r3,#4]
 227:../../../platform/sam/drivers/usart/usart.c **** 
 228:../../../platform/sam/drivers/usart/usart.c **** 	/* Configure the baudrate generate register. */
 229:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_BRGR = cd << US_BRGR_CD_Pos;
 327              	 .loc 1 229 0
 328 0138 FB68     	 ldr r3,[r7,#12]
 329 013a 7A69     	 ldr r2,[r7,#20]
 330 013c 1A62     	 str r2,[r3,#32]
 230:../../../platform/sam/drivers/usart/usart.c **** 
 231:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 331              	 .loc 1 231 0
 332 013e 0023     	 movs r3,#0
 333              	.L16:
 232:../../../platform/sam/drivers/usart/usart.c **** }
 334              	 .loc 1 232 0
 335 0140 1846     	 mov r0,r3
 336 0142 1C37     	 adds r7,r7,#28
 337              	.LCFI21:
 338              	 .cfi_def_cfa_offset 4
 339 0144 BD46     	 mov sp,r7
 340              	.LCFI22:
 341              	 .cfi_def_cfa_register 13
 342              	 
 343 0146 80BC     	 pop {r7}
 344              	.LCFI23:
 345              	 .cfi_restore 7
 346              	 .cfi_def_cfa_offset 0
 347 0148 7047     	 bx lr
 348              	 .cfi_endproc
 349              	.LFE125:
 351              	 .align 1
 352              	 .syntax unified
 353              	 .thumb
 354              	 .thumb_func
 355              	 .fpu softvfp
 357              	usart_set_spi_master_baudrate:
 358              	.LFB126:
 233:../../../platform/sam/drivers/usart/usart.c **** 
 234:../../../platform/sam/drivers/usart/usart.c **** /**
 235:../../../platform/sam/drivers/usart/usart.c ****  * \brief Calculate a clock divider (\e CD) for the USART SPI master mode to
 236:../../../platform/sam/drivers/usart/usart.c ****  * generate a baud rate as close as possible to the baud rate set point.
 237:../../../platform/sam/drivers/usart/usart.c ****  *
 238:../../../platform/sam/drivers/usart/usart.c ****  * \note Baud rate calculation:
 239:../../../platform/sam/drivers/usart/usart.c ****  * \f$ Baudrate = \frac{SelectedClock}{CD} \f$.
 240:../../../platform/sam/drivers/usart/usart.c ****  *
 241:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 242:../../../platform/sam/drivers/usart/usart.c ****  * \param baudrate Baud rate set point.
 243:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_mck USART module input clock frequency.
 244:../../../platform/sam/drivers/usart/usart.c ****  *
 245:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 Baud rate is successfully initialized.
 246:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 Baud rate set point is out of range for the given input clock
 247:../../../platform/sam/drivers/usart/usart.c ****  * frequency.
 248:../../../platform/sam/drivers/usart/usart.c ****  */
 249:../../../platform/sam/drivers/usart/usart.c **** static uint32_t usart_set_spi_master_baudrate(Usart *p_usart,
 250:../../../platform/sam/drivers/usart/usart.c **** 		uint32_t baudrate, uint32_t ul_mck)
 251:../../../platform/sam/drivers/usart/usart.c **** {
 359              	 .loc 1 251 0
 360              	 .cfi_startproc
 361              	 
 362              	 
 363              	 
 364 014a 80B4     	 push {r7}
 365              	.LCFI24:
 366              	 .cfi_def_cfa_offset 4
 367              	 .cfi_offset 7,-4
 368 014c 87B0     	 sub sp,sp,#28
 369              	.LCFI25:
 370              	 .cfi_def_cfa_offset 32
 371 014e 00AF     	 add r7,sp,#0
 372              	.LCFI26:
 373              	 .cfi_def_cfa_register 7
 374 0150 F860     	 str r0,[r7,#12]
 375 0152 B960     	 str r1,[r7,#8]
 376 0154 7A60     	 str r2,[r7,#4]
 252:../../../platform/sam/drivers/usart/usart.c **** 	uint32_t cd;
 253:../../../platform/sam/drivers/usart/usart.c **** 
 254:../../../platform/sam/drivers/usart/usart.c **** 	/* Calculate the clock divider according to the formula in SPI mode. */
 255:../../../platform/sam/drivers/usart/usart.c **** 	cd = (ul_mck + baudrate / 2) / baudrate;
 377              	 .loc 1 255 0
 378 0156 BB68     	 ldr r3,[r7,#8]
 379 0158 5A08     	 lsrs r2,r3,#1
 380 015a 7B68     	 ldr r3,[r7,#4]
 381 015c 1A44     	 add r2,r2,r3
 382 015e BB68     	 ldr r3,[r7,#8]
 383 0160 B2FBF3F3 	 udiv r3,r2,r3
 384 0164 7B61     	 str r3,[r7,#20]
 256:../../../platform/sam/drivers/usart/usart.c **** 
 257:../../../platform/sam/drivers/usart/usart.c **** 	if (cd < MIN_CD_VALUE_SPI || cd > MAX_CD_VALUE) {
 385              	 .loc 1 257 0
 386 0166 7B69     	 ldr r3,[r7,#20]
 387 0168 032B     	 cmp r3,#3
 388 016a 03D9     	 bls .L18
 389              	 .loc 1 257 0 is_stmt 0 discriminator 1
 390 016c 7B69     	 ldr r3,[r7,#20]
 391 016e B3F5803F 	 cmp r3,#65536
 392 0172 01D3     	 bcc .L19
 393              	.L18:
 258:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 394              	 .loc 1 258 0 is_stmt 1
 395 0174 0123     	 movs r3,#1
 396 0176 03E0     	 b .L20
 397              	.L19:
 259:../../../platform/sam/drivers/usart/usart.c **** 	}
 260:../../../platform/sam/drivers/usart/usart.c **** 
 261:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_BRGR = cd << US_BRGR_CD_Pos;
 398              	 .loc 1 261 0
 399 0178 FB68     	 ldr r3,[r7,#12]
 400 017a 7A69     	 ldr r2,[r7,#20]
 401 017c 1A62     	 str r2,[r3,#32]
 262:../../../platform/sam/drivers/usart/usart.c **** 
 263:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 402              	 .loc 1 263 0
 403 017e 0023     	 movs r3,#0
 404              	.L20:
 264:../../../platform/sam/drivers/usart/usart.c **** }
 405              	 .loc 1 264 0
 406 0180 1846     	 mov r0,r3
 407 0182 1C37     	 adds r7,r7,#28
 408              	.LCFI27:
 409              	 .cfi_def_cfa_offset 4
 410 0184 BD46     	 mov sp,r7
 411              	.LCFI28:
 412              	 .cfi_def_cfa_register 13
 413              	 
 414 0186 80BC     	 pop {r7}
 415              	.LCFI29:
 416              	 .cfi_restore 7
 417              	 .cfi_def_cfa_offset 0
 418 0188 7047     	 bx lr
 419              	 .cfi_endproc
 420              	.LFE126:
 422              	 .align 1
 423              	 .syntax unified
 424              	 .thumb
 425              	 .thumb_func
 426              	 .fpu softvfp
 428              	usart_set_spi_slave_baudrate:
 429              	.LFB127:
 265:../../../platform/sam/drivers/usart/usart.c **** 
 266:../../../platform/sam/drivers/usart/usart.c **** /**
 267:../../../platform/sam/drivers/usart/usart.c ****  * \brief Select the SCK pin as the source of baudrate for the USART SPI slave
 268:../../../platform/sam/drivers/usart/usart.c ****  * mode.
 269:../../../platform/sam/drivers/usart/usart.c ****  *
 270:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 271:../../../platform/sam/drivers/usart/usart.c ****  */
 272:../../../platform/sam/drivers/usart/usart.c **** static void usart_set_spi_slave_baudrate(Usart *p_usart)
 273:../../../platform/sam/drivers/usart/usart.c **** {
 430              	 .loc 1 273 0
 431              	 .cfi_startproc
 432              	 
 433              	 
 434              	 
 435 018a 80B4     	 push {r7}
 436              	.LCFI30:
 437              	 .cfi_def_cfa_offset 4
 438              	 .cfi_offset 7,-4
 439 018c 83B0     	 sub sp,sp,#12
 440              	.LCFI31:
 441              	 .cfi_def_cfa_offset 16
 442 018e 00AF     	 add r7,sp,#0
 443              	.LCFI32:
 444              	 .cfi_def_cfa_register 7
 445 0190 7860     	 str r0,[r7,#4]
 274:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR &= ~US_MR_USCLKS_Msk;
 446              	 .loc 1 274 0
 447 0192 7B68     	 ldr r3,[r7,#4]
 448 0194 5B68     	 ldr r3,[r3,#4]
 449 0196 23F03002 	 bic r2,r3,#48
 450 019a 7B68     	 ldr r3,[r7,#4]
 451 019c 5A60     	 str r2,[r3,#4]
 275:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR |= US_MR_USCLKS_SCK;
 452              	 .loc 1 275 0
 453 019e 7B68     	 ldr r3,[r7,#4]
 454 01a0 5B68     	 ldr r3,[r3,#4]
 455 01a2 43F03002 	 orr r2,r3,#48
 456 01a6 7B68     	 ldr r3,[r7,#4]
 457 01a8 5A60     	 str r2,[r3,#4]
 276:../../../platform/sam/drivers/usart/usart.c **** }
 458              	 .loc 1 276 0
 459 01aa 00BF     	 nop
 460 01ac 0C37     	 adds r7,r7,#12
 461              	.LCFI33:
 462              	 .cfi_def_cfa_offset 4
 463 01ae BD46     	 mov sp,r7
 464              	.LCFI34:
 465              	 .cfi_def_cfa_register 13
 466              	 
 467 01b0 80BC     	 pop {r7}
 468              	.LCFI35:
 469              	 .cfi_restore 7
 470              	 .cfi_def_cfa_offset 0
 471 01b2 7047     	 bx lr
 472              	 .cfi_endproc
 473              	.LFE127:
 475              	 .align 1
 476              	 .global usart_reset
 477              	 .syntax unified
 478              	 .thumb
 479              	 .thumb_func
 480              	 .fpu softvfp
 482              	usart_reset:
 483              	.LFB128:
 277:../../../platform/sam/drivers/usart/usart.c **** 
 278:../../../platform/sam/drivers/usart/usart.c **** /**
 279:../../../platform/sam/drivers/usart/usart.c ****  * \brief Reset the USART and disable TX and RX.
 280:../../../platform/sam/drivers/usart/usart.c ****  *
 281:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 282:../../../platform/sam/drivers/usart/usart.c ****  */
 283:../../../platform/sam/drivers/usart/usart.c **** void usart_reset(Usart *p_usart)
 284:../../../platform/sam/drivers/usart/usart.c **** {
 484              	 .loc 1 284 0
 485              	 .cfi_startproc
 486              	 
 487              	 
 488 01b4 80B5     	 push {r7,lr}
 489              	.LCFI36:
 490              	 .cfi_def_cfa_offset 8
 491              	 .cfi_offset 7,-8
 492              	 .cfi_offset 14,-4
 493 01b6 82B0     	 sub sp,sp,#8
 494              	.LCFI37:
 495              	 .cfi_def_cfa_offset 16
 496 01b8 00AF     	 add r7,sp,#0
 497              	.LCFI38:
 498              	 .cfi_def_cfa_register 7
 499 01ba 7860     	 str r0,[r7,#4]
 285:../../../platform/sam/drivers/usart/usart.c **** 	/* Disable the Write Protect. */
 286:../../../platform/sam/drivers/usart/usart.c **** 	usart_disable_writeprotect(p_usart);
 500              	 .loc 1 286 0
 501 01bc 7868     	 ldr r0,[r7,#4]
 502 01be FFF7FEFF 	 bl usart_disable_writeprotect
 287:../../../platform/sam/drivers/usart/usart.c **** 
 288:../../../platform/sam/drivers/usart/usart.c **** 	/* Reset registers that could cause unpredictable behavior after reset. */
 289:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR = 0;
 503              	 .loc 1 289 0
 504 01c2 7B68     	 ldr r3,[r7,#4]
 505 01c4 0022     	 movs r2,#0
 506 01c6 5A60     	 str r2,[r3,#4]
 290:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_RTOR = 0;
 507              	 .loc 1 290 0
 508 01c8 7B68     	 ldr r3,[r7,#4]
 509 01ca 0022     	 movs r2,#0
 510 01cc 5A62     	 str r2,[r3,#36]
 291:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_TTGR = 0;
 511              	 .loc 1 291 0
 512 01ce 7B68     	 ldr r3,[r7,#4]
 513 01d0 0022     	 movs r2,#0
 514 01d2 9A62     	 str r2,[r3,#40]
 292:../../../platform/sam/drivers/usart/usart.c **** 
 293:../../../platform/sam/drivers/usart/usart.c **** 	/* Disable TX and RX. */
 294:../../../platform/sam/drivers/usart/usart.c **** 	usart_reset_tx(p_usart);
 515              	 .loc 1 294 0
 516 01d4 7868     	 ldr r0,[r7,#4]
 517 01d6 FFF7FEFF 	 bl usart_reset_tx
 295:../../../platform/sam/drivers/usart/usart.c **** 	usart_reset_rx(p_usart);
 518              	 .loc 1 295 0
 519 01da 7868     	 ldr r0,[r7,#4]
 520 01dc FFF7FEFF 	 bl usart_reset_rx
 296:../../../platform/sam/drivers/usart/usart.c **** 	/* Reset status bits. */
 297:../../../platform/sam/drivers/usart/usart.c **** 	usart_reset_status(p_usart);
 521              	 .loc 1 297 0
 522 01e0 7868     	 ldr r0,[r7,#4]
 523 01e2 FFF7FEFF 	 bl usart_reset_status
 298:../../../platform/sam/drivers/usart/usart.c **** 	/* Turn off RTS and DTR if exist. */
 299:../../../platform/sam/drivers/usart/usart.c **** 	usart_drive_RTS_pin_high(p_usart);
 524              	 .loc 1 299 0
 525 01e6 7868     	 ldr r0,[r7,#4]
 526 01e8 FFF7FEFF 	 bl usart_drive_RTS_pin_high
 300:../../../platform/sam/drivers/usart/usart.c **** #if (SAM3S || SAM4S || SAM3U || SAM4L || SAM4E)
 301:../../../platform/sam/drivers/usart/usart.c **** 	usart_drive_DTR_pin_high(p_usart);
 527              	 .loc 1 301 0
 528 01ec 7868     	 ldr r0,[r7,#4]
 529 01ee FFF7FEFF 	 bl usart_drive_DTR_pin_high
 302:../../../platform/sam/drivers/usart/usart.c **** #endif
 303:../../../platform/sam/drivers/usart/usart.c **** }
 530              	 .loc 1 303 0
 531 01f2 00BF     	 nop
 532 01f4 0837     	 adds r7,r7,#8
 533              	.LCFI39:
 534              	 .cfi_def_cfa_offset 8
 535 01f6 BD46     	 mov sp,r7
 536              	.LCFI40:
 537              	 .cfi_def_cfa_register 13
 538              	 
 539 01f8 80BD     	 pop {r7,pc}
 540              	 .cfi_endproc
 541              	.LFE128:
 543              	 .align 1
 544              	 .global usart_init_rs232
 545              	 .syntax unified
 546              	 .thumb
 547              	 .thumb_func
 548              	 .fpu softvfp
 550              	usart_init_rs232:
 551              	.LFB129:
 304:../../../platform/sam/drivers/usart/usart.c **** 
 305:../../../platform/sam/drivers/usart/usart.c **** /**
 306:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure USART to work in RS232 mode.
 307:../../../platform/sam/drivers/usart/usart.c ****  *
 308:../../../platform/sam/drivers/usart/usart.c ****  * \note By default, the transmitter and receiver aren't enabled.
 309:../../../platform/sam/drivers/usart/usart.c ****  *
 310:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 311:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart_opt Pointer to sam_usart_opt_t instance.
 312:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_mck USART module input clock frequency.
 313:../../../platform/sam/drivers/usart/usart.c ****  *
 314:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 on success.
 315:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 on failure.
 316:../../../platform/sam/drivers/usart/usart.c ****  */
 317:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_init_rs232(Usart *p_usart,
 318:../../../platform/sam/drivers/usart/usart.c **** 		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
 319:../../../platform/sam/drivers/usart/usart.c **** {
 552              	 .loc 1 319 0
 553              	 .cfi_startproc
 554              	 
 555              	 
 556 01fa 80B5     	 push {r7,lr}
 557              	.LCFI41:
 558              	 .cfi_def_cfa_offset 8
 559              	 .cfi_offset 7,-8
 560              	 .cfi_offset 14,-4
 561 01fc 84B0     	 sub sp,sp,#16
 562              	.LCFI42:
 563              	 .cfi_def_cfa_offset 24
 564 01fe 00AF     	 add r7,sp,#0
 565              	.LCFI43:
 566              	 .cfi_def_cfa_register 7
 567 0200 F860     	 str r0,[r7,#12]
 568 0202 B960     	 str r1,[r7,#8]
 569 0204 7A60     	 str r2,[r7,#4]
 320:../../../platform/sam/drivers/usart/usart.c **** 	static uint32_t ul_reg_val;
 321:../../../platform/sam/drivers/usart/usart.c **** 
 322:../../../platform/sam/drivers/usart/usart.c **** 	/* Reset the USART and shut down TX and RX. */
 323:../../../platform/sam/drivers/usart/usart.c **** 	usart_reset(p_usart);
 570              	 .loc 1 323 0
 571 0206 F868     	 ldr r0,[r7,#12]
 572 0208 FFF7FEFF 	 bl usart_reset
 324:../../../platform/sam/drivers/usart/usart.c **** 
 325:../../../platform/sam/drivers/usart/usart.c **** 	ul_reg_val = 0;
 573              	 .loc 1 325 0
 574 020c 184B     	 ldr r3,.L27
 575 020e 0022     	 movs r2,#0
 576 0210 1A60     	 str r2,[r3]
 326:../../../platform/sam/drivers/usart/usart.c **** 	/* Check whether the input values are legal. */
 327:../../../platform/sam/drivers/usart/usart.c **** 	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
 577              	 .loc 1 327 0
 578 0212 BB68     	 ldr r3,[r7,#8]
 579 0214 002B     	 cmp r3,#0
 580 0216 09D0     	 beq .L24
 581              	 .loc 1 327 0 is_stmt 0 discriminator 1
 582 0218 BB68     	 ldr r3,[r7,#8]
 583 021a 1B68     	 ldr r3,[r3]
 584 021c 7A68     	 ldr r2,[r7,#4]
 585 021e 1946     	 mov r1,r3
 586 0220 F868     	 ldr r0,[r7,#12]
 587 0222 FFF7EDFE 	 bl usart_set_async_baudrate
 588 0226 0346     	 mov r3,r0
 589 0228 002B     	 cmp r3,#0
 590 022a 01D0     	 beq .L25
 591              	.L24:
 328:../../../platform/sam/drivers/usart/usart.c **** 			p_usart_opt->baudrate, ul_mck)) {
 329:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 592              	 .loc 1 329 0 is_stmt 1
 593 022c 0123     	 movs r3,#1
 594 022e 1BE0     	 b .L26
 595              	.L25:
 330:../../../platform/sam/drivers/usart/usart.c **** 	}
 331:../../../platform/sam/drivers/usart/usart.c **** 
 332:../../../platform/sam/drivers/usart/usart.c **** 	/* Configure the USART option. */
 333:../../../platform/sam/drivers/usart/usart.c **** 	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
 596              	 .loc 1 333 0
 597 0230 BB68     	 ldr r3,[r7,#8]
 598 0232 5A68     	 ldr r2,[r3,#4]
 599 0234 BB68     	 ldr r3,[r7,#8]
 600 0236 9B68     	 ldr r3,[r3,#8]
 601 0238 1A43     	 orrs r2,r2,r3
 334:../../../platform/sam/drivers/usart/usart.c **** 			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
 602              	 .loc 1 334 0
 603 023a BB68     	 ldr r3,[r7,#8]
 604 023c 1B69     	 ldr r3,[r3,#16]
 333:../../../platform/sam/drivers/usart/usart.c **** 			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
 605              	 .loc 1 333 0
 606 023e 1A43     	 orrs r2,r2,r3
 607              	 .loc 1 334 0
 608 0240 BB68     	 ldr r3,[r7,#8]
 609 0242 DB68     	 ldr r3,[r3,#12]
 610 0244 1A43     	 orrs r2,r2,r3
 333:../../../platform/sam/drivers/usart/usart.c **** 			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
 611              	 .loc 1 333 0
 612 0246 0A4B     	 ldr r3,.L27
 613 0248 1B68     	 ldr r3,[r3]
 614 024a 1343     	 orrs r3,r3,r2
 615 024c 084A     	 ldr r2,.L27
 616 024e 1360     	 str r3,[r2]
 335:../../../platform/sam/drivers/usart/usart.c **** 
 336:../../../platform/sam/drivers/usart/usart.c **** 	/* Configure the USART mode as normal mode. */
 337:../../../platform/sam/drivers/usart/usart.c **** 	ul_reg_val |= US_MR_USART_MODE_NORMAL;
 617              	 .loc 1 337 0
 618 0250 074B     	 ldr r3,.L27
 619 0252 1B68     	 ldr r3,[r3]
 620 0254 064A     	 ldr r2,.L27
 621 0256 1360     	 str r3,[r2]
 338:../../../platform/sam/drivers/usart/usart.c **** 
 339:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR |= ul_reg_val;
 622              	 .loc 1 339 0
 623 0258 FB68     	 ldr r3,[r7,#12]
 624 025a 5A68     	 ldr r2,[r3,#4]
 625 025c 044B     	 ldr r3,.L27
 626 025e 1B68     	 ldr r3,[r3]
 627 0260 1A43     	 orrs r2,r2,r3
 628 0262 FB68     	 ldr r3,[r7,#12]
 629 0264 5A60     	 str r2,[r3,#4]
 340:../../../platform/sam/drivers/usart/usart.c **** 
 341:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 630              	 .loc 1 341 0
 631 0266 0023     	 movs r3,#0
 632              	.L26:
 342:../../../platform/sam/drivers/usart/usart.c **** }
 633              	 .loc 1 342 0
 634 0268 1846     	 mov r0,r3
 635 026a 1037     	 adds r7,r7,#16
 636              	.LCFI44:
 637              	 .cfi_def_cfa_offset 8
 638 026c BD46     	 mov sp,r7
 639              	.LCFI45:
 640              	 .cfi_def_cfa_register 13
 641              	 
 642 026e 80BD     	 pop {r7,pc}
 643              	.L28:
 644              	 .align 2
 645              	.L27:
 646 0270 00000000 	 .word ul_reg_val.8022
 647              	 .cfi_endproc
 648              	.LFE129:
 650              	 .align 1
 651              	 .global usart_init_hw_handshaking
 652              	 .syntax unified
 653              	 .thumb
 654              	 .thumb_func
 655              	 .fpu softvfp
 657              	usart_init_hw_handshaking:
 658              	.LFB130:
 343:../../../platform/sam/drivers/usart/usart.c **** 
 344:../../../platform/sam/drivers/usart/usart.c **** /**
 345:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure USART to work in hardware handshaking mode.
 346:../../../platform/sam/drivers/usart/usart.c ****  *
 347:../../../platform/sam/drivers/usart/usart.c ****  * \note By default, the transmitter and receiver aren't enabled.
 348:../../../platform/sam/drivers/usart/usart.c ****  *
 349:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 350:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart_opt Pointer to sam_usart_opt_t instance.
 351:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_mck USART module input clock frequency.
 352:../../../platform/sam/drivers/usart/usart.c ****  *
 353:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 on success.
 354:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 on failure.
 355:../../../platform/sam/drivers/usart/usart.c ****  */
 356:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_init_hw_handshaking(Usart *p_usart,
 357:../../../platform/sam/drivers/usart/usart.c **** 		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
 358:../../../platform/sam/drivers/usart/usart.c **** {
 659              	 .loc 1 358 0
 660              	 .cfi_startproc
 661              	 
 662              	 
 663 0274 80B5     	 push {r7,lr}
 664              	.LCFI46:
 665              	 .cfi_def_cfa_offset 8
 666              	 .cfi_offset 7,-8
 667              	 .cfi_offset 14,-4
 668 0276 84B0     	 sub sp,sp,#16
 669              	.LCFI47:
 670              	 .cfi_def_cfa_offset 24
 671 0278 00AF     	 add r7,sp,#0
 672              	.LCFI48:
 673              	 .cfi_def_cfa_register 7
 674 027a F860     	 str r0,[r7,#12]
 675 027c B960     	 str r1,[r7,#8]
 676 027e 7A60     	 str r2,[r7,#4]
 359:../../../platform/sam/drivers/usart/usart.c **** 	/* Initialize the USART as standard RS232. */
 360:../../../platform/sam/drivers/usart/usart.c **** 	if (usart_init_rs232(p_usart, p_usart_opt, ul_mck)) {
 677              	 .loc 1 360 0
 678 0280 7A68     	 ldr r2,[r7,#4]
 679 0282 B968     	 ldr r1,[r7,#8]
 680 0284 F868     	 ldr r0,[r7,#12]
 681 0286 FFF7FEFF 	 bl usart_init_rs232
 682 028a 0346     	 mov r3,r0
 683 028c 002B     	 cmp r3,#0
 684 028e 01D0     	 beq .L30
 361:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 685              	 .loc 1 361 0
 686 0290 0123     	 movs r3,#1
 687 0292 08E0     	 b .L31
 688              	.L30:
 362:../../../platform/sam/drivers/usart/usart.c **** 	}
 363:../../../platform/sam/drivers/usart/usart.c **** 
 364:../../../platform/sam/drivers/usart/usart.c **** 	/* Set hardware handshaking mode. */
 365:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR = (p_usart->US_MR & ~US_MR_USART_MODE_Msk) |
 689              	 .loc 1 365 0
 690 0294 FB68     	 ldr r3,[r7,#12]
 691 0296 5B68     	 ldr r3,[r3,#4]
 692 0298 23F00F03 	 bic r3,r3,#15
 693 029c 43F00202 	 orr r2,r3,#2
 694 02a0 FB68     	 ldr r3,[r7,#12]
 695 02a2 5A60     	 str r2,[r3,#4]
 366:../../../platform/sam/drivers/usart/usart.c **** 			US_MR_USART_MODE_HW_HANDSHAKING;
 367:../../../platform/sam/drivers/usart/usart.c **** 
 368:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 696              	 .loc 1 368 0
 697 02a4 0023     	 movs r3,#0
 698              	.L31:
 369:../../../platform/sam/drivers/usart/usart.c **** }
 699              	 .loc 1 369 0
 700 02a6 1846     	 mov r0,r3
 701 02a8 1037     	 adds r7,r7,#16
 702              	.LCFI49:
 703              	 .cfi_def_cfa_offset 8
 704 02aa BD46     	 mov sp,r7
 705              	.LCFI50:
 706              	 .cfi_def_cfa_register 13
 707              	 
 708 02ac 80BD     	 pop {r7,pc}
 709              	 .cfi_endproc
 710              	.LFE130:
 712              	 .align 1
 713              	 .global usart_init_modem
 714              	 .syntax unified
 715              	 .thumb
 716              	 .thumb_func
 717              	 .fpu softvfp
 719              	usart_init_modem:
 720              	.LFB131:
 370:../../../platform/sam/drivers/usart/usart.c **** 
 371:../../../platform/sam/drivers/usart/usart.c **** #if (SAM3S || SAM4S || SAM3U || SAM4L || SAM4E)
 372:../../../platform/sam/drivers/usart/usart.c **** 
 373:../../../platform/sam/drivers/usart/usart.c **** /**
 374:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure USART to work in modem mode.
 375:../../../platform/sam/drivers/usart/usart.c ****  *
 376:../../../platform/sam/drivers/usart/usart.c ****  * \note By default, the transmitter and receiver aren't enabled.
 377:../../../platform/sam/drivers/usart/usart.c ****  *
 378:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 379:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart_opt Pointer to sam_usart_opt_t instance.
 380:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_mck USART module input clock frequency.
 381:../../../platform/sam/drivers/usart/usart.c ****  *
 382:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 on success.
 383:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 on failure.
 384:../../../platform/sam/drivers/usart/usart.c ****  */
 385:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_init_modem(Usart *p_usart,
 386:../../../platform/sam/drivers/usart/usart.c **** 		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
 387:../../../platform/sam/drivers/usart/usart.c **** {
 721              	 .loc 1 387 0
 722              	 .cfi_startproc
 723              	 
 724              	 
 725 02ae 80B5     	 push {r7,lr}
 726              	.LCFI51:
 727              	 .cfi_def_cfa_offset 8
 728              	 .cfi_offset 7,-8
 729              	 .cfi_offset 14,-4
 730 02b0 84B0     	 sub sp,sp,#16
 731              	.LCFI52:
 732              	 .cfi_def_cfa_offset 24
 733 02b2 00AF     	 add r7,sp,#0
 734              	.LCFI53:
 735              	 .cfi_def_cfa_register 7
 736 02b4 F860     	 str r0,[r7,#12]
 737 02b6 B960     	 str r1,[r7,#8]
 738 02b8 7A60     	 str r2,[r7,#4]
 388:../../../platform/sam/drivers/usart/usart.c **** 	/*
 389:../../../platform/sam/drivers/usart/usart.c **** 	 * SAM3S, SAM4S and SAM4E series support MODEM mode only on USART1,
 390:../../../platform/sam/drivers/usart/usart.c **** 	 * SAM3U and SAM4L series support MODEM mode only on USART0.
 391:../../../platform/sam/drivers/usart/usart.c **** 	 */
 392:../../../platform/sam/drivers/usart/usart.c **** #if (SAM3S || SAM4S || SAM4E)
 393:../../../platform/sam/drivers/usart/usart.c **** #ifdef USART1
 394:../../../platform/sam/drivers/usart/usart.c **** 	if (p_usart != USART1) {
 395:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 396:../../../platform/sam/drivers/usart/usart.c **** 	}
 397:../../../platform/sam/drivers/usart/usart.c **** #endif
 398:../../../platform/sam/drivers/usart/usart.c **** #elif (SAM3U || SAM4L)
 399:../../../platform/sam/drivers/usart/usart.c **** 	if (p_usart != USART0) {
 739              	 .loc 1 399 0
 740 02ba FB68     	 ldr r3,[r7,#12]
 741 02bc 0D4A     	 ldr r2,.L36
 742 02be 9342     	 cmp r3,r2
 743 02c0 01D0     	 beq .L33
 400:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 744              	 .loc 1 400 0
 745 02c2 0123     	 movs r3,#1
 746 02c4 12E0     	 b .L34
 747              	.L33:
 401:../../../platform/sam/drivers/usart/usart.c **** 	}
 402:../../../platform/sam/drivers/usart/usart.c **** #endif
 403:../../../platform/sam/drivers/usart/usart.c **** 
 404:../../../platform/sam/drivers/usart/usart.c **** 	/* Initialize the USART as standard RS232. */
 405:../../../platform/sam/drivers/usart/usart.c **** 	if (usart_init_rs232(p_usart, p_usart_opt, ul_mck)) {
 748              	 .loc 1 405 0
 749 02c6 7A68     	 ldr r2,[r7,#4]
 750 02c8 B968     	 ldr r1,[r7,#8]
 751 02ca F868     	 ldr r0,[r7,#12]
 752 02cc FFF7FEFF 	 bl usart_init_rs232
 753 02d0 0346     	 mov r3,r0
 754 02d2 002B     	 cmp r3,#0
 755 02d4 01D0     	 beq .L35
 406:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 756              	 .loc 1 406 0
 757 02d6 0123     	 movs r3,#1
 758 02d8 08E0     	 b .L34
 759              	.L35:
 407:../../../platform/sam/drivers/usart/usart.c **** 	}
 408:../../../platform/sam/drivers/usart/usart.c **** 
 409:../../../platform/sam/drivers/usart/usart.c **** 	/* Set MODEM mode. */
 410:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR = (p_usart->US_MR & ~US_MR_USART_MODE_Msk) |
 760              	 .loc 1 410 0
 761 02da FB68     	 ldr r3,[r7,#12]
 762 02dc 5B68     	 ldr r3,[r3,#4]
 763 02de 23F00F03 	 bic r3,r3,#15
 764 02e2 43F00302 	 orr r2,r3,#3
 765 02e6 FB68     	 ldr r3,[r7,#12]
 766 02e8 5A60     	 str r2,[r3,#4]
 411:../../../platform/sam/drivers/usart/usart.c **** 			US_MR_USART_MODE_MODEM;
 412:../../../platform/sam/drivers/usart/usart.c **** 
 413:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 767              	 .loc 1 413 0
 768 02ea 0023     	 movs r3,#0
 769              	.L34:
 414:../../../platform/sam/drivers/usart/usart.c **** }
 770              	 .loc 1 414 0
 771 02ec 1846     	 mov r0,r3
 772 02ee 1037     	 adds r7,r7,#16
 773              	.LCFI54:
 774              	 .cfi_def_cfa_offset 8
 775 02f0 BD46     	 mov sp,r7
 776              	.LCFI55:
 777              	 .cfi_def_cfa_register 13
 778              	 
 779 02f2 80BD     	 pop {r7,pc}
 780              	.L37:
 781              	 .align 2
 782              	.L36:
 783 02f4 00400240 	 .word 1073889280
 784              	 .cfi_endproc
 785              	.LFE131:
 787              	 .align 1
 788              	 .global usart_init_sync_master
 789              	 .syntax unified
 790              	 .thumb
 791              	 .thumb_func
 792              	 .fpu softvfp
 794              	usart_init_sync_master:
 795              	.LFB132:
 415:../../../platform/sam/drivers/usart/usart.c **** #endif
 416:../../../platform/sam/drivers/usart/usart.c **** 
 417:../../../platform/sam/drivers/usart/usart.c **** /**
 418:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure USART to work in SYNC mode and act as a master.
 419:../../../platform/sam/drivers/usart/usart.c ****  *
 420:../../../platform/sam/drivers/usart/usart.c ****  * \note By default, the transmitter and receiver aren't enabled.
 421:../../../platform/sam/drivers/usart/usart.c ****  *
 422:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 423:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart_opt Pointer to sam_usart_opt_t instance.
 424:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_mck USART module input clock frequency.
 425:../../../platform/sam/drivers/usart/usart.c ****  *
 426:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 on success.
 427:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 on failure.
 428:../../../platform/sam/drivers/usart/usart.c ****  */
 429:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_init_sync_master(Usart *p_usart,
 430:../../../platform/sam/drivers/usart/usart.c **** 		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
 431:../../../platform/sam/drivers/usart/usart.c **** {
 796              	 .loc 1 431 0
 797              	 .cfi_startproc
 798              	 
 799              	 
 800 02f8 80B5     	 push {r7,lr}
 801              	.LCFI56:
 802              	 .cfi_def_cfa_offset 8
 803              	 .cfi_offset 7,-8
 804              	 .cfi_offset 14,-4
 805 02fa 84B0     	 sub sp,sp,#16
 806              	.LCFI57:
 807              	 .cfi_def_cfa_offset 24
 808 02fc 00AF     	 add r7,sp,#0
 809              	.LCFI58:
 810              	 .cfi_def_cfa_register 7
 811 02fe F860     	 str r0,[r7,#12]
 812 0300 B960     	 str r1,[r7,#8]
 813 0302 7A60     	 str r2,[r7,#4]
 432:../../../platform/sam/drivers/usart/usart.c **** 	static uint32_t ul_reg_val;
 433:../../../platform/sam/drivers/usart/usart.c **** 
 434:../../../platform/sam/drivers/usart/usart.c **** 	/* Reset the USART and shut down TX and RX. */
 435:../../../platform/sam/drivers/usart/usart.c **** 	usart_reset(p_usart);
 814              	 .loc 1 435 0
 815 0304 F868     	 ldr r0,[r7,#12]
 816 0306 FFF7FEFF 	 bl usart_reset
 436:../../../platform/sam/drivers/usart/usart.c **** 
 437:../../../platform/sam/drivers/usart/usart.c **** 	ul_reg_val = 0;
 817              	 .loc 1 437 0
 818 030a 1A4B     	 ldr r3,.L42
 819 030c 0022     	 movs r2,#0
 820 030e 1A60     	 str r2,[r3]
 438:../../../platform/sam/drivers/usart/usart.c **** 	/* Check whether the input values are legal. */
 439:../../../platform/sam/drivers/usart/usart.c **** 	if (!p_usart_opt || usart_set_sync_master_baudrate(p_usart,
 821              	 .loc 1 439 0
 822 0310 BB68     	 ldr r3,[r7,#8]
 823 0312 002B     	 cmp r3,#0
 824 0314 09D0     	 beq .L39
 825              	 .loc 1 439 0 is_stmt 0 discriminator 1
 826 0316 BB68     	 ldr r3,[r7,#8]
 827 0318 1B68     	 ldr r3,[r3]
 828 031a 7A68     	 ldr r2,[r7,#4]
 829 031c 1946     	 mov r1,r3
 830 031e F868     	 ldr r0,[r7,#12]
 831 0320 FFF7B2FE 	 bl usart_set_sync_master_baudrate
 832 0324 0346     	 mov r3,r0
 833 0326 002B     	 cmp r3,#0
 834 0328 01D0     	 beq .L40
 835              	.L39:
 440:../../../platform/sam/drivers/usart/usart.c **** 			p_usart_opt->baudrate, ul_mck)) {
 441:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 836              	 .loc 1 441 0 is_stmt 1
 837 032a 0123     	 movs r3,#1
 838 032c 1DE0     	 b .L41
 839              	.L40:
 442:../../../platform/sam/drivers/usart/usart.c **** 	}
 443:../../../platform/sam/drivers/usart/usart.c **** 
 444:../../../platform/sam/drivers/usart/usart.c **** 	/* Configure the USART option. */
 445:../../../platform/sam/drivers/usart/usart.c **** 	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
 840              	 .loc 1 445 0
 841 032e BB68     	 ldr r3,[r7,#8]
 842 0330 5A68     	 ldr r2,[r3,#4]
 843 0332 BB68     	 ldr r3,[r7,#8]
 844 0334 9B68     	 ldr r3,[r3,#8]
 845 0336 1A43     	 orrs r2,r2,r3
 446:../../../platform/sam/drivers/usart/usart.c **** 			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
 846              	 .loc 1 446 0
 847 0338 BB68     	 ldr r3,[r7,#8]
 848 033a 1B69     	 ldr r3,[r3,#16]
 445:../../../platform/sam/drivers/usart/usart.c **** 			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
 849              	 .loc 1 445 0
 850 033c 1A43     	 orrs r2,r2,r3
 851              	 .loc 1 446 0
 852 033e BB68     	 ldr r3,[r7,#8]
 853 0340 DB68     	 ldr r3,[r3,#12]
 854 0342 1A43     	 orrs r2,r2,r3
 445:../../../platform/sam/drivers/usart/usart.c **** 			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
 855              	 .loc 1 445 0
 856 0344 0B4B     	 ldr r3,.L42
 857 0346 1B68     	 ldr r3,[r3]
 858 0348 1343     	 orrs r3,r3,r2
 859 034a 0A4A     	 ldr r2,.L42
 860 034c 1360     	 str r3,[r2]
 447:../../../platform/sam/drivers/usart/usart.c **** 
 448:../../../platform/sam/drivers/usart/usart.c **** 	/* Set normal mode and output clock as synchronous master. */
 449:../../../platform/sam/drivers/usart/usart.c **** 	ul_reg_val |= US_MR_USART_MODE_NORMAL | US_MR_CLKO;
 861              	 .loc 1 449 0
 862 034e 094B     	 ldr r3,.L42
 863 0350 1B68     	 ldr r3,[r3]
 864 0352 43F48023 	 orr r3,r3,#262144
 865 0356 074A     	 ldr r2,.L42
 866 0358 1360     	 str r3,[r2]
 450:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR |= ul_reg_val;
 867              	 .loc 1 450 0
 868 035a FB68     	 ldr r3,[r7,#12]
 869 035c 5A68     	 ldr r2,[r3,#4]
 870 035e 054B     	 ldr r3,.L42
 871 0360 1B68     	 ldr r3,[r3]
 872 0362 1A43     	 orrs r2,r2,r3
 873 0364 FB68     	 ldr r3,[r7,#12]
 874 0366 5A60     	 str r2,[r3,#4]
 451:../../../platform/sam/drivers/usart/usart.c **** 
 452:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 875              	 .loc 1 452 0
 876 0368 0023     	 movs r3,#0
 877              	.L41:
 453:../../../platform/sam/drivers/usart/usart.c **** }
 878              	 .loc 1 453 0
 879 036a 1846     	 mov r0,r3
 880 036c 1037     	 adds r7,r7,#16
 881              	.LCFI59:
 882              	 .cfi_def_cfa_offset 8
 883 036e BD46     	 mov sp,r7
 884              	.LCFI60:
 885              	 .cfi_def_cfa_register 13
 886              	 
 887 0370 80BD     	 pop {r7,pc}
 888              	.L43:
 889 0372 00BF     	 .align 2
 890              	.L42:
 891 0374 00000000 	 .word ul_reg_val.8038
 892              	 .cfi_endproc
 893              	.LFE132:
 895              	 .align 1
 896              	 .global usart_init_sync_slave
 897              	 .syntax unified
 898              	 .thumb
 899              	 .thumb_func
 900              	 .fpu softvfp
 902              	usart_init_sync_slave:
 903              	.LFB133:
 454:../../../platform/sam/drivers/usart/usart.c **** 
 455:../../../platform/sam/drivers/usart/usart.c **** /**
 456:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure USART to work in SYNC mode and act as a slave.
 457:../../../platform/sam/drivers/usart/usart.c ****  *
 458:../../../platform/sam/drivers/usart/usart.c ****  * \note By default, the transmitter and receiver aren't enabled.
 459:../../../platform/sam/drivers/usart/usart.c ****  *
 460:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 461:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart_opt Pointer to sam_usart_opt_t instance.
 462:../../../platform/sam/drivers/usart/usart.c ****  *
 463:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 on success.
 464:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 on failure.
 465:../../../platform/sam/drivers/usart/usart.c ****  */
 466:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_init_sync_slave(Usart *p_usart,
 467:../../../platform/sam/drivers/usart/usart.c **** 		const sam_usart_opt_t *p_usart_opt)
 468:../../../platform/sam/drivers/usart/usart.c **** {
 904              	 .loc 1 468 0
 905              	 .cfi_startproc
 906              	 
 907              	 
 908 0378 80B5     	 push {r7,lr}
 909              	.LCFI61:
 910              	 .cfi_def_cfa_offset 8
 911              	 .cfi_offset 7,-8
 912              	 .cfi_offset 14,-4
 913 037a 82B0     	 sub sp,sp,#8
 914              	.LCFI62:
 915              	 .cfi_def_cfa_offset 16
 916 037c 00AF     	 add r7,sp,#0
 917              	.LCFI63:
 918              	 .cfi_def_cfa_register 7
 919 037e 7860     	 str r0,[r7,#4]
 920 0380 3960     	 str r1,[r7]
 469:../../../platform/sam/drivers/usart/usart.c **** 	static uint32_t ul_reg_val;
 470:../../../platform/sam/drivers/usart/usart.c **** 
 471:../../../platform/sam/drivers/usart/usart.c **** 	/* Reset the USART and shut down TX and RX. */
 472:../../../platform/sam/drivers/usart/usart.c **** 	usart_reset(p_usart);
 921              	 .loc 1 472 0
 922 0382 7868     	 ldr r0,[r7,#4]
 923 0384 FFF7FEFF 	 bl usart_reset
 473:../../../platform/sam/drivers/usart/usart.c **** 
 474:../../../platform/sam/drivers/usart/usart.c **** 	ul_reg_val = 0;
 924              	 .loc 1 474 0
 925 0388 154B     	 ldr r3,.L47
 926 038a 0022     	 movs r2,#0
 927 038c 1A60     	 str r2,[r3]
 475:../../../platform/sam/drivers/usart/usart.c **** 	usart_set_sync_slave_baudrate(p_usart);
 928              	 .loc 1 475 0
 929 038e 7868     	 ldr r0,[r7,#4]
 930 0390 FFF7A2FE 	 bl usart_set_sync_slave_baudrate
 476:../../../platform/sam/drivers/usart/usart.c **** 
 477:../../../platform/sam/drivers/usart/usart.c **** 	/* Check whether the input values are legal. */
 478:../../../platform/sam/drivers/usart/usart.c **** 	if (!p_usart_opt) {
 931              	 .loc 1 478 0
 932 0394 3B68     	 ldr r3,[r7]
 933 0396 002B     	 cmp r3,#0
 934 0398 01D1     	 bne .L45
 479:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 935              	 .loc 1 479 0
 936 039a 0123     	 movs r3,#1
 937 039c 1BE0     	 b .L46
 938              	.L45:
 480:../../../platform/sam/drivers/usart/usart.c **** 	}
 481:../../../platform/sam/drivers/usart/usart.c **** 
 482:../../../platform/sam/drivers/usart/usart.c **** 	/* Configure the USART option. */
 483:../../../platform/sam/drivers/usart/usart.c **** 	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
 939              	 .loc 1 483 0
 940 039e 3B68     	 ldr r3,[r7]
 941 03a0 5A68     	 ldr r2,[r3,#4]
 942 03a2 3B68     	 ldr r3,[r7]
 943 03a4 9B68     	 ldr r3,[r3,#8]
 944 03a6 1A43     	 orrs r2,r2,r3
 484:../../../platform/sam/drivers/usart/usart.c **** 			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
 945              	 .loc 1 484 0
 946 03a8 3B68     	 ldr r3,[r7]
 947 03aa 1B69     	 ldr r3,[r3,#16]
 483:../../../platform/sam/drivers/usart/usart.c **** 			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
 948              	 .loc 1 483 0
 949 03ac 1A43     	 orrs r2,r2,r3
 950              	 .loc 1 484 0
 951 03ae 3B68     	 ldr r3,[r7]
 952 03b0 DB68     	 ldr r3,[r3,#12]
 953 03b2 1A43     	 orrs r2,r2,r3
 483:../../../platform/sam/drivers/usart/usart.c **** 			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
 954              	 .loc 1 483 0
 955 03b4 0A4B     	 ldr r3,.L47
 956 03b6 1B68     	 ldr r3,[r3]
 957 03b8 1343     	 orrs r3,r3,r2
 958 03ba 094A     	 ldr r2,.L47
 959 03bc 1360     	 str r3,[r2]
 485:../../../platform/sam/drivers/usart/usart.c **** 
 486:../../../platform/sam/drivers/usart/usart.c **** 	/* Set normal mode. */
 487:../../../platform/sam/drivers/usart/usart.c **** 	ul_reg_val |= US_MR_USART_MODE_NORMAL;
 960              	 .loc 1 487 0
 961 03be 084B     	 ldr r3,.L47
 962 03c0 1B68     	 ldr r3,[r3]
 963 03c2 074A     	 ldr r2,.L47
 964 03c4 1360     	 str r3,[r2]
 488:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR |= ul_reg_val;
 965              	 .loc 1 488 0
 966 03c6 7B68     	 ldr r3,[r7,#4]
 967 03c8 5A68     	 ldr r2,[r3,#4]
 968 03ca 054B     	 ldr r3,.L47
 969 03cc 1B68     	 ldr r3,[r3]
 970 03ce 1A43     	 orrs r2,r2,r3
 971 03d0 7B68     	 ldr r3,[r7,#4]
 972 03d2 5A60     	 str r2,[r3,#4]
 489:../../../platform/sam/drivers/usart/usart.c **** 
 490:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 973              	 .loc 1 490 0
 974 03d4 0023     	 movs r3,#0
 975              	.L46:
 491:../../../platform/sam/drivers/usart/usart.c **** }
 976              	 .loc 1 491 0
 977 03d6 1846     	 mov r0,r3
 978 03d8 0837     	 adds r7,r7,#8
 979              	.LCFI64:
 980              	 .cfi_def_cfa_offset 8
 981 03da BD46     	 mov sp,r7
 982              	.LCFI65:
 983              	 .cfi_def_cfa_register 13
 984              	 
 985 03dc 80BD     	 pop {r7,pc}
 986              	.L48:
 987 03de 00BF     	 .align 2
 988              	.L47:
 989 03e0 00000000 	 .word ul_reg_val.8043
 990              	 .cfi_endproc
 991              	.LFE133:
 993              	 .align 1
 994              	 .global usart_init_rs485
 995              	 .syntax unified
 996              	 .thumb
 997              	 .thumb_func
 998              	 .fpu softvfp
 1000              	usart_init_rs485:
 1001              	.LFB134:
 492:../../../platform/sam/drivers/usart/usart.c **** 
 493:../../../platform/sam/drivers/usart/usart.c **** /**
 494:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure USART to work in RS485 mode.
 495:../../../platform/sam/drivers/usart/usart.c ****  *
 496:../../../platform/sam/drivers/usart/usart.c ****  * \note By default, the transmitter and receiver aren't enabled.
 497:../../../platform/sam/drivers/usart/usart.c ****  *
 498:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 499:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart_opt Pointer to sam_usart_opt_t instance.
 500:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_mck USART module input clock frequency.
 501:../../../platform/sam/drivers/usart/usart.c ****  *
 502:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 on success.
 503:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 on failure.
 504:../../../platform/sam/drivers/usart/usart.c ****  */
 505:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_init_rs485(Usart *p_usart,
 506:../../../platform/sam/drivers/usart/usart.c **** 		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
 507:../../../platform/sam/drivers/usart/usart.c **** {
 1002              	 .loc 1 507 0
 1003              	 .cfi_startproc
 1004              	 
 1005              	 
 1006 03e4 80B5     	 push {r7,lr}
 1007              	.LCFI66:
 1008              	 .cfi_def_cfa_offset 8
 1009              	 .cfi_offset 7,-8
 1010              	 .cfi_offset 14,-4
 1011 03e6 84B0     	 sub sp,sp,#16
 1012              	.LCFI67:
 1013              	 .cfi_def_cfa_offset 24
 1014 03e8 00AF     	 add r7,sp,#0
 1015              	.LCFI68:
 1016              	 .cfi_def_cfa_register 7
 1017 03ea F860     	 str r0,[r7,#12]
 1018 03ec B960     	 str r1,[r7,#8]
 1019 03ee 7A60     	 str r2,[r7,#4]
 508:../../../platform/sam/drivers/usart/usart.c **** 	/* Initialize the USART as standard RS232. */
 509:../../../platform/sam/drivers/usart/usart.c **** 	if (usart_init_rs232(p_usart, p_usart_opt, ul_mck)) {
 1020              	 .loc 1 509 0
 1021 03f0 7A68     	 ldr r2,[r7,#4]
 1022 03f2 B968     	 ldr r1,[r7,#8]
 1023 03f4 F868     	 ldr r0,[r7,#12]
 1024 03f6 FFF7FEFF 	 bl usart_init_rs232
 1025 03fa 0346     	 mov r3,r0
 1026 03fc 002B     	 cmp r3,#0
 1027 03fe 01D0     	 beq .L50
 510:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 1028              	 .loc 1 510 0
 1029 0400 0123     	 movs r3,#1
 1030 0402 08E0     	 b .L51
 1031              	.L50:
 511:../../../platform/sam/drivers/usart/usart.c **** 	}
 512:../../../platform/sam/drivers/usart/usart.c **** 
 513:../../../platform/sam/drivers/usart/usart.c **** 	/* Set RS485 mode. */
 514:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR = (p_usart->US_MR & ~US_MR_USART_MODE_Msk) |
 1032              	 .loc 1 514 0
 1033 0404 FB68     	 ldr r3,[r7,#12]
 1034 0406 5B68     	 ldr r3,[r3,#4]
 1035 0408 23F00F03 	 bic r3,r3,#15
 1036 040c 43F00102 	 orr r2,r3,#1
 1037 0410 FB68     	 ldr r3,[r7,#12]
 1038 0412 5A60     	 str r2,[r3,#4]
 515:../../../platform/sam/drivers/usart/usart.c **** 			US_MR_USART_MODE_RS485;
 516:../../../platform/sam/drivers/usart/usart.c **** 
 517:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 1039              	 .loc 1 517 0
 1040 0414 0023     	 movs r3,#0
 1041              	.L51:
 518:../../../platform/sam/drivers/usart/usart.c **** }
 1042              	 .loc 1 518 0
 1043 0416 1846     	 mov r0,r3
 1044 0418 1037     	 adds r7,r7,#16
 1045              	.LCFI69:
 1046              	 .cfi_def_cfa_offset 8
 1047 041a BD46     	 mov sp,r7
 1048              	.LCFI70:
 1049              	 .cfi_def_cfa_register 13
 1050              	 
 1051 041c 80BD     	 pop {r7,pc}
 1052              	 .cfi_endproc
 1053              	.LFE134:
 1055              	 .align 1
 1056              	 .global usart_init_irda
 1057              	 .syntax unified
 1058              	 .thumb
 1059              	 .thumb_func
 1060              	 .fpu softvfp
 1062              	usart_init_irda:
 1063              	.LFB135:
 519:../../../platform/sam/drivers/usart/usart.c **** 
 520:../../../platform/sam/drivers/usart/usart.c **** /**
 521:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure USART to work in IrDA mode.
 522:../../../platform/sam/drivers/usart/usart.c ****  *
 523:../../../platform/sam/drivers/usart/usart.c ****  * \note By default, the transmitter and receiver aren't enabled.
 524:../../../platform/sam/drivers/usart/usart.c ****  *
 525:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 526:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart_opt Pointer to sam_usart_opt_t instance.
 527:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_mck USART module input clock frequency.
 528:../../../platform/sam/drivers/usart/usart.c ****  *
 529:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 on success.
 530:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 on failure.
 531:../../../platform/sam/drivers/usart/usart.c ****  */
 532:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_init_irda(Usart *p_usart,
 533:../../../platform/sam/drivers/usart/usart.c **** 		const sam_usart_opt_t *p_usart_opt, uint32_t ul_mck)
 534:../../../platform/sam/drivers/usart/usart.c **** {
 1064              	 .loc 1 534 0
 1065              	 .cfi_startproc
 1066              	 
 1067              	 
 1068 041e 80B5     	 push {r7,lr}
 1069              	.LCFI71:
 1070              	 .cfi_def_cfa_offset 8
 1071              	 .cfi_offset 7,-8
 1072              	 .cfi_offset 14,-4
 1073 0420 84B0     	 sub sp,sp,#16
 1074              	.LCFI72:
 1075              	 .cfi_def_cfa_offset 24
 1076 0422 00AF     	 add r7,sp,#0
 1077              	.LCFI73:
 1078              	 .cfi_def_cfa_register 7
 1079 0424 F860     	 str r0,[r7,#12]
 1080 0426 B960     	 str r1,[r7,#8]
 1081 0428 7A60     	 str r2,[r7,#4]
 535:../../../platform/sam/drivers/usart/usart.c **** 	/* Initialize the USART as standard RS232. */
 536:../../../platform/sam/drivers/usart/usart.c **** 	if (usart_init_rs232(p_usart, p_usart_opt, ul_mck)) {
 1082              	 .loc 1 536 0
 1083 042a 7A68     	 ldr r2,[r7,#4]
 1084 042c B968     	 ldr r1,[r7,#8]
 1085 042e F868     	 ldr r0,[r7,#12]
 1086 0430 FFF7FEFF 	 bl usart_init_rs232
 1087 0434 0346     	 mov r3,r0
 1088 0436 002B     	 cmp r3,#0
 1089 0438 01D0     	 beq .L53
 537:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 1090              	 .loc 1 537 0
 1091 043a 0123     	 movs r3,#1
 1092 043c 0CE0     	 b .L54
 1093              	.L53:
 538:../../../platform/sam/drivers/usart/usart.c **** 	}
 539:../../../platform/sam/drivers/usart/usart.c **** 
 540:../../../platform/sam/drivers/usart/usart.c **** 	/* Set IrDA filter. */
 541:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_IF = p_usart_opt->irda_filter;
 1094              	 .loc 1 541 0
 1095 043e BB68     	 ldr r3,[r7,#8]
 1096 0440 5A69     	 ldr r2,[r3,#20]
 1097 0442 FB68     	 ldr r3,[r7,#12]
 1098 0444 DA64     	 str r2,[r3,#76]
 542:../../../platform/sam/drivers/usart/usart.c **** 
 543:../../../platform/sam/drivers/usart/usart.c **** 	/* Set IrDA mode. */
 544:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR = (p_usart->US_MR & ~US_MR_USART_MODE_Msk) |
 1099              	 .loc 1 544 0
 1100 0446 FB68     	 ldr r3,[r7,#12]
 1101 0448 5B68     	 ldr r3,[r3,#4]
 1102 044a 23F00F03 	 bic r3,r3,#15
 1103 044e 43F00802 	 orr r2,r3,#8
 1104 0452 FB68     	 ldr r3,[r7,#12]
 1105 0454 5A60     	 str r2,[r3,#4]
 545:../../../platform/sam/drivers/usart/usart.c **** 			US_MR_USART_MODE_IRDA;
 546:../../../platform/sam/drivers/usart/usart.c **** 
 547:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 1106              	 .loc 1 547 0
 1107 0456 0023     	 movs r3,#0
 1108              	.L54:
 548:../../../platform/sam/drivers/usart/usart.c **** }
 1109              	 .loc 1 548 0
 1110 0458 1846     	 mov r0,r3
 1111 045a 1037     	 adds r7,r7,#16
 1112              	.LCFI74:
 1113              	 .cfi_def_cfa_offset 8
 1114 045c BD46     	 mov sp,r7
 1115              	.LCFI75:
 1116              	 .cfi_def_cfa_register 13
 1117              	 
 1118 045e 80BD     	 pop {r7,pc}
 1119              	 .cfi_endproc
 1120              	.LFE135:
 1122              	 .align 1
 1123              	 .global usart_init_iso7816
 1124              	 .syntax unified
 1125              	 .thumb
 1126              	 .thumb_func
 1127              	 .fpu softvfp
 1129              	usart_init_iso7816:
 1130              	.LFB136:
 549:../../../platform/sam/drivers/usart/usart.c **** 
 550:../../../platform/sam/drivers/usart/usart.c **** /**
 551:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure USART to work in ISO7816 mode.
 552:../../../platform/sam/drivers/usart/usart.c ****  *
 553:../../../platform/sam/drivers/usart/usart.c ****  * \note By default, the transmitter and receiver aren't enabled.
 554:../../../platform/sam/drivers/usart/usart.c ****  *
 555:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 556:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart_opt Pointer to sam_usart_opt_t instance.
 557:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_mck USART module input clock frequency.
 558:../../../platform/sam/drivers/usart/usart.c ****  *
 559:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 on success.
 560:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 on failure.
 561:../../../platform/sam/drivers/usart/usart.c ****  */
 562:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_init_iso7816(Usart *p_usart,
 563:../../../platform/sam/drivers/usart/usart.c **** 		const usart_iso7816_opt_t *p_usart_opt, uint32_t ul_mck)
 564:../../../platform/sam/drivers/usart/usart.c **** {
 1131              	 .loc 1 564 0
 1132              	 .cfi_startproc
 1133              	 
 1134              	 
 1135 0460 80B5     	 push {r7,lr}
 1136              	.LCFI76:
 1137              	 .cfi_def_cfa_offset 8
 1138              	 .cfi_offset 7,-8
 1139              	 .cfi_offset 14,-4
 1140 0462 84B0     	 sub sp,sp,#16
 1141              	.LCFI77:
 1142              	 .cfi_def_cfa_offset 24
 1143 0464 00AF     	 add r7,sp,#0
 1144              	.LCFI78:
 1145              	 .cfi_def_cfa_register 7
 1146 0466 F860     	 str r0,[r7,#12]
 1147 0468 B960     	 str r1,[r7,#8]
 1148 046a 7A60     	 str r2,[r7,#4]
 565:../../../platform/sam/drivers/usart/usart.c **** 	static uint32_t ul_reg_val;
 566:../../../platform/sam/drivers/usart/usart.c **** 
 567:../../../platform/sam/drivers/usart/usart.c **** 	/* Reset the USART and shut down TX and RX. */
 568:../../../platform/sam/drivers/usart/usart.c **** 	usart_reset(p_usart);
 1149              	 .loc 1 568 0
 1150 046c F868     	 ldr r0,[r7,#12]
 1151 046e FFF7FEFF 	 bl usart_reset
 569:../../../platform/sam/drivers/usart/usart.c **** 
 570:../../../platform/sam/drivers/usart/usart.c **** 	ul_reg_val = 0;
 1152              	 .loc 1 570 0
 1153 0472 3D4B     	 ldr r3,.L68
 1154 0474 0022     	 movs r2,#0
 1155 0476 1A60     	 str r2,[r3]
 571:../../../platform/sam/drivers/usart/usart.c **** 
 572:../../../platform/sam/drivers/usart/usart.c **** 	/* Check whether the input values are legal. */
 573:../../../platform/sam/drivers/usart/usart.c **** 	if (!p_usart_opt || ((p_usart_opt->parity_type != US_MR_PAR_EVEN) &&
 1156              	 .loc 1 573 0
 1157 0478 BB68     	 ldr r3,[r7,#8]
 1158 047a 002B     	 cmp r3,#0
 1159 047c 08D0     	 beq .L56
 1160              	 .loc 1 573 0 is_stmt 0 discriminator 1
 1161 047e BB68     	 ldr r3,[r7,#8]
 1162 0480 9B68     	 ldr r3,[r3,#8]
 1163 0482 002B     	 cmp r3,#0
 1164 0484 06D0     	 beq .L57
 574:../../../platform/sam/drivers/usart/usart.c **** 			(p_usart_opt->parity_type != US_MR_PAR_ODD))) {
 1165              	 .loc 1 574 0 is_stmt 1 discriminator 2
 1166 0486 BB68     	 ldr r3,[r7,#8]
 1167 0488 9B68     	 ldr r3,[r3,#8]
 573:../../../platform/sam/drivers/usart/usart.c **** 			(p_usart_opt->parity_type != US_MR_PAR_ODD))) {
 1168              	 .loc 1 573 0 discriminator 2
 1169 048a B3F5007F 	 cmp r3,#512
 1170 048e 01D0     	 beq .L57
 1171              	.L56:
 575:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 1172              	 .loc 1 575 0
 1173 0490 0123     	 movs r3,#1
 1174 0492 64E0     	 b .L58
 1175              	.L57:
 576:../../../platform/sam/drivers/usart/usart.c **** 	}
 577:../../../platform/sam/drivers/usart/usart.c **** 
 578:../../../platform/sam/drivers/usart/usart.c **** 	if (p_usart_opt->protocol_type == ISO7816_T_0) {
 1176              	 .loc 1 578 0
 1177 0494 BB68     	 ldr r3,[r7,#8]
 1178 0496 DB69     	 ldr r3,[r3,#28]
 1179 0498 002B     	 cmp r3,#0
 1180 049a 16D1     	 bne .L59
 579:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val |= US_MR_USART_MODE_IS07816_T_0 | US_MR_NBSTOP_2_BIT |
 580:../../../platform/sam/drivers/usart/usart.c **** 				(p_usart_opt->max_iterations << US_MR_MAX_ITERATION_Pos);
 1181              	 .loc 1 580 0
 1182 049c BB68     	 ldr r3,[r7,#8]
 1183 049e 5B69     	 ldr r3,[r3,#20]
 1184 04a0 1A06     	 lsls r2,r3,#24
 579:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val |= US_MR_USART_MODE_IS07816_T_0 | US_MR_NBSTOP_2_BIT |
 1185              	 .loc 1 579 0
 1186 04a2 314B     	 ldr r3,.L68
 1187 04a4 1B68     	 ldr r3,[r3]
 1188 04a6 1343     	 orrs r3,r3,r2
 1189 04a8 43F40053 	 orr r3,r3,#8192
 1190 04ac 43F00403 	 orr r3,r3,#4
 1191 04b0 2D4A     	 ldr r2,.L68
 1192 04b2 1360     	 str r3,[r2]
 581:../../../platform/sam/drivers/usart/usart.c **** 
 582:../../../platform/sam/drivers/usart/usart.c **** 		if (p_usart_opt->bit_order) {
 1193              	 .loc 1 582 0
 1194 04b4 BB68     	 ldr r3,[r7,#8]
 1195 04b6 9B69     	 ldr r3,[r3,#24]
 1196 04b8 002B     	 cmp r3,#0
 1197 04ba 1DD0     	 beq .L61
 583:../../../platform/sam/drivers/usart/usart.c **** 			ul_reg_val |= US_MR_MSBF;
 1198              	 .loc 1 583 0
 1199 04bc 2A4B     	 ldr r3,.L68
 1200 04be 1B68     	 ldr r3,[r3]
 1201 04c0 43F48033 	 orr r3,r3,#65536
 1202 04c4 284A     	 ldr r2,.L68
 1203 04c6 1360     	 str r3,[r2]
 1204 04c8 16E0     	 b .L61
 1205              	.L59:
 584:../../../platform/sam/drivers/usart/usart.c **** 		}
 585:../../../platform/sam/drivers/usart/usart.c **** 	} else if (p_usart_opt->protocol_type == ISO7816_T_1) {
 1206              	 .loc 1 585 0
 1207 04ca BB68     	 ldr r3,[r7,#8]
 1208 04cc DB69     	 ldr r3,[r3,#28]
 1209 04ce 012B     	 cmp r3,#1
 1210 04d0 10D1     	 bne .L62
 586:../../../platform/sam/drivers/usart/usart.c **** 		/*
 587:../../../platform/sam/drivers/usart/usart.c **** 		 * Only LSBF is used in the T=1 protocol, and max_iterations field
 588:../../../platform/sam/drivers/usart/usart.c **** 		 * is only used in T=0 mode.
 589:../../../platform/sam/drivers/usart/usart.c **** 		 */
 590:../../../platform/sam/drivers/usart/usart.c **** 		if (p_usart_opt->bit_order || p_usart_opt->max_iterations) {
 1211              	 .loc 1 590 0
 1212 04d2 BB68     	 ldr r3,[r7,#8]
 1213 04d4 9B69     	 ldr r3,[r3,#24]
 1214 04d6 002B     	 cmp r3,#0
 1215 04d8 03D1     	 bne .L63
 1216              	 .loc 1 590 0 is_stmt 0 discriminator 1
 1217 04da BB68     	 ldr r3,[r7,#8]
 1218 04dc 5B69     	 ldr r3,[r3,#20]
 1219 04de 002B     	 cmp r3,#0
 1220 04e0 01D0     	 beq .L64
 1221              	.L63:
 591:../../../platform/sam/drivers/usart/usart.c **** 			return 1;
 1222              	 .loc 1 591 0 is_stmt 1
 1223 04e2 0123     	 movs r3,#1
 1224 04e4 3BE0     	 b .L58
 1225              	.L64:
 592:../../../platform/sam/drivers/usart/usart.c **** 		}
 593:../../../platform/sam/drivers/usart/usart.c **** 		
 594:../../../platform/sam/drivers/usart/usart.c **** 		/* Set USART mode to ISO7816, T=1, and always uses 1 stop bit. */
 595:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val |= US_MR_USART_MODE_IS07816_T_1 | US_MR_NBSTOP_1_BIT;
 1226              	 .loc 1 595 0
 1227 04e6 204B     	 ldr r3,.L68
 1228 04e8 1B68     	 ldr r3,[r3]
 1229 04ea 43F00603 	 orr r3,r3,#6
 1230 04ee 1E4A     	 ldr r2,.L68
 1231 04f0 1360     	 str r3,[r2]
 1232 04f2 01E0     	 b .L61
 1233              	.L62:
 596:../../../platform/sam/drivers/usart/usart.c **** 	} else {
 597:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 1234              	 .loc 1 597 0
 1235 04f4 0123     	 movs r3,#1
 1236 04f6 32E0     	 b .L58
 1237              	.L61:
 598:../../../platform/sam/drivers/usart/usart.c **** 	}
 599:../../../platform/sam/drivers/usart/usart.c **** 
 600:../../../platform/sam/drivers/usart/usart.c **** 	/* Set up the baudrate. */
 601:../../../platform/sam/drivers/usart/usart.c **** 	if (usart_set_iso7816_clock(p_usart, p_usart_opt->iso7816_hz, ul_mck)) {
 1238              	 .loc 1 601 0
 1239 04f8 BB68     	 ldr r3,[r7,#8]
 1240 04fa 1B68     	 ldr r3,[r3]
 1241 04fc 7A68     	 ldr r2,[r7,#4]
 1242 04fe 1946     	 mov r1,r3
 1243 0500 F868     	 ldr r0,[r7,#12]
 1244 0502 FFF7F8FD 	 bl usart_set_iso7816_clock
 1245 0506 0346     	 mov r3,r0
 1246 0508 002B     	 cmp r3,#0
 1247 050a 01D0     	 beq .L65
 602:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 1248              	 .loc 1 602 0
 1249 050c 0123     	 movs r3,#1
 1250 050e 26E0     	 b .L58
 1251              	.L65:
 603:../../../platform/sam/drivers/usart/usart.c **** 	}
 604:../../../platform/sam/drivers/usart/usart.c **** 
 605:../../../platform/sam/drivers/usart/usart.c **** 	/* Set FIDI register: bit rate = iso7816_hz / fidi_ratio. */
 606:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_FIDI = p_usart_opt->fidi_ratio;
 1252              	 .loc 1 606 0
 1253 0510 BB68     	 ldr r3,[r7,#8]
 1254 0512 5A68     	 ldr r2,[r3,#4]
 1255 0514 FB68     	 ldr r3,[r7,#12]
 1256 0516 1A64     	 str r2,[r3,#64]
 607:../../../platform/sam/drivers/usart/usart.c **** 
 608:../../../platform/sam/drivers/usart/usart.c **** 	/* Set ISO7816 parity type in the MODE register. */
 609:../../../platform/sam/drivers/usart/usart.c **** 	ul_reg_val |= p_usart_opt->parity_type;
 1257              	 .loc 1 609 0
 1258 0518 BB68     	 ldr r3,[r7,#8]
 1259 051a 9A68     	 ldr r2,[r3,#8]
 1260 051c 124B     	 ldr r3,.L68
 1261 051e 1B68     	 ldr r3,[r3]
 1262 0520 1343     	 orrs r3,r3,r2
 1263 0522 114A     	 ldr r2,.L68
 1264 0524 1360     	 str r3,[r2]
 610:../../../platform/sam/drivers/usart/usart.c **** 
 611:../../../platform/sam/drivers/usart/usart.c **** 	if (p_usart_opt->inhibit_nack) {
 1265              	 .loc 1 611 0
 1266 0526 BB68     	 ldr r3,[r7,#8]
 1267 0528 DB68     	 ldr r3,[r3,#12]
 1268 052a 002B     	 cmp r3,#0
 1269 052c 05D0     	 beq .L66
 612:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val |= US_MR_INACK;
 1270              	 .loc 1 612 0
 1271 052e 0E4B     	 ldr r3,.L68
 1272 0530 1B68     	 ldr r3,[r3]
 1273 0532 43F48013 	 orr r3,r3,#1048576
 1274 0536 0C4A     	 ldr r2,.L68
 1275 0538 1360     	 str r3,[r2]
 1276              	.L66:
 613:../../../platform/sam/drivers/usart/usart.c **** 	}
 614:../../../platform/sam/drivers/usart/usart.c **** 	if (p_usart_opt->dis_suc_nack) {
 1277              	 .loc 1 614 0
 1278 053a BB68     	 ldr r3,[r7,#8]
 1279 053c 1B69     	 ldr r3,[r3,#16]
 1280 053e 002B     	 cmp r3,#0
 1281 0540 05D0     	 beq .L67
 615:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val |= US_MR_DSNACK;
 1282              	 .loc 1 615 0
 1283 0542 094B     	 ldr r3,.L68
 1284 0544 1B68     	 ldr r3,[r3]
 1285 0546 43F40013 	 orr r3,r3,#2097152
 1286 054a 074A     	 ldr r2,.L68
 1287 054c 1360     	 str r3,[r2]
 1288              	.L67:
 616:../../../platform/sam/drivers/usart/usart.c **** 	}
 617:../../../platform/sam/drivers/usart/usart.c **** 
 618:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR |= ul_reg_val;
 1289              	 .loc 1 618 0
 1290 054e FB68     	 ldr r3,[r7,#12]
 1291 0550 5A68     	 ldr r2,[r3,#4]
 1292 0552 054B     	 ldr r3,.L68
 1293 0554 1B68     	 ldr r3,[r3]
 1294 0556 1A43     	 orrs r2,r2,r3
 1295 0558 FB68     	 ldr r3,[r7,#12]
 1296 055a 5A60     	 str r2,[r3,#4]
 619:../../../platform/sam/drivers/usart/usart.c **** 
 620:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 1297              	 .loc 1 620 0
 1298 055c 0023     	 movs r3,#0
 1299              	.L58:
 621:../../../platform/sam/drivers/usart/usart.c **** }
 1300              	 .loc 1 621 0
 1301 055e 1846     	 mov r0,r3
 1302 0560 1037     	 adds r7,r7,#16
 1303              	.LCFI79:
 1304              	 .cfi_def_cfa_offset 8
 1305 0562 BD46     	 mov sp,r7
 1306              	.LCFI80:
 1307              	 .cfi_def_cfa_register 13
 1308              	 
 1309 0564 80BD     	 pop {r7,pc}
 1310              	.L69:
 1311 0566 00BF     	 .align 2
 1312              	.L68:
 1313 0568 00000000 	 .word ul_reg_val.8059
 1314              	 .cfi_endproc
 1315              	.LFE136:
 1317              	 .align 1
 1318              	 .global usart_init_spi_master
 1319              	 .syntax unified
 1320              	 .thumb
 1321              	 .thumb_func
 1322              	 .fpu softvfp
 1324              	usart_init_spi_master:
 1325              	.LFB137:
 622:../../../platform/sam/drivers/usart/usart.c **** 
 623:../../../platform/sam/drivers/usart/usart.c **** /**
 624:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure USART to work in SPI mode and act as a master.
 625:../../../platform/sam/drivers/usart/usart.c ****  *
 626:../../../platform/sam/drivers/usart/usart.c ****  * \note By default, the transmitter and receiver aren't enabled.
 627:../../../platform/sam/drivers/usart/usart.c ****  *
 628:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 629:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart_opt Pointer to sam_usart_opt_t instance.
 630:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_mck USART module input clock frequency.
 631:../../../platform/sam/drivers/usart/usart.c ****  *
 632:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 on success.
 633:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 on failure.
 634:../../../platform/sam/drivers/usart/usart.c ****  */
 635:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_init_spi_master(Usart *p_usart,
 636:../../../platform/sam/drivers/usart/usart.c **** 		const usart_spi_opt_t *p_usart_opt, uint32_t ul_mck)
 637:../../../platform/sam/drivers/usart/usart.c **** {
 1326              	 .loc 1 637 0
 1327              	 .cfi_startproc
 1328              	 
 1329              	 
 1330 056c 80B5     	 push {r7,lr}
 1331              	.LCFI81:
 1332              	 .cfi_def_cfa_offset 8
 1333              	 .cfi_offset 7,-8
 1334              	 .cfi_offset 14,-4
 1335 056e 84B0     	 sub sp,sp,#16
 1336              	.LCFI82:
 1337              	 .cfi_def_cfa_offset 24
 1338 0570 00AF     	 add r7,sp,#0
 1339              	.LCFI83:
 1340              	 .cfi_def_cfa_register 7
 1341 0572 F860     	 str r0,[r7,#12]
 1342 0574 B960     	 str r1,[r7,#8]
 1343 0576 7A60     	 str r2,[r7,#4]
 638:../../../platform/sam/drivers/usart/usart.c **** 	static uint32_t ul_reg_val;
 639:../../../platform/sam/drivers/usart/usart.c **** 
 640:../../../platform/sam/drivers/usart/usart.c **** 	/* Reset the USART and shut down TX and RX. */
 641:../../../platform/sam/drivers/usart/usart.c **** 	usart_reset(p_usart);
 1344              	 .loc 1 641 0
 1345 0578 F868     	 ldr r0,[r7,#12]
 1346 057a FFF7FEFF 	 bl usart_reset
 642:../../../platform/sam/drivers/usart/usart.c **** 
 643:../../../platform/sam/drivers/usart/usart.c **** 	ul_reg_val = 0;
 1347              	 .loc 1 643 0
 1348 057e 3C4B     	 ldr r3,.L82
 1349 0580 0022     	 movs r2,#0
 1350 0582 1A60     	 str r2,[r3]
 644:../../../platform/sam/drivers/usart/usart.c **** 	/* Check whether the input values are legal. */
 645:../../../platform/sam/drivers/usart/usart.c **** 	if (!p_usart_opt || (p_usart_opt->spi_mode > SPI_MODE_3) ||
 1351              	 .loc 1 645 0
 1352 0584 BB68     	 ldr r3,[r7,#8]
 1353 0586 002B     	 cmp r3,#0
 1354 0588 0DD0     	 beq .L71
 1355              	 .loc 1 645 0 is_stmt 0 discriminator 1
 1356 058a BB68     	 ldr r3,[r7,#8]
 1357 058c 9B68     	 ldr r3,[r3,#8]
 1358 058e 032B     	 cmp r3,#3
 1359 0590 09D8     	 bhi .L71
 646:../../../platform/sam/drivers/usart/usart.c **** 			usart_set_spi_master_baudrate(p_usart, p_usart_opt->baudrate,
 1360              	 .loc 1 646 0 is_stmt 1 discriminator 2
 1361 0592 BB68     	 ldr r3,[r7,#8]
 1362 0594 1B68     	 ldr r3,[r3]
 1363 0596 7A68     	 ldr r2,[r7,#4]
 1364 0598 1946     	 mov r1,r3
 1365 059a F868     	 ldr r0,[r7,#12]
 1366 059c FFF7D5FD 	 bl usart_set_spi_master_baudrate
 1367 05a0 0346     	 mov r3,r0
 645:../../../platform/sam/drivers/usart/usart.c **** 			usart_set_spi_master_baudrate(p_usart, p_usart_opt->baudrate,
 1368              	 .loc 1 645 0 discriminator 2
 1369 05a2 002B     	 cmp r3,#0
 1370 05a4 01D0     	 beq .L72
 1371              	.L71:
 647:../../../platform/sam/drivers/usart/usart.c **** 			ul_mck)) {
 648:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 1372              	 .loc 1 648 0
 1373 05a6 0123     	 movs r3,#1
 1374 05a8 5DE0     	 b .L73
 1375              	.L72:
 649:../../../platform/sam/drivers/usart/usart.c **** 	}
 650:../../../platform/sam/drivers/usart/usart.c **** 
 651:../../../platform/sam/drivers/usart/usart.c **** 	/* Configure the character length bit in MR register. */
 652:../../../platform/sam/drivers/usart/usart.c **** 	ul_reg_val |= p_usart_opt->char_length;
 1376              	 .loc 1 652 0
 1377 05aa BB68     	 ldr r3,[r7,#8]
 1378 05ac 5A68     	 ldr r2,[r3,#4]
 1379 05ae 304B     	 ldr r3,.L82
 1380 05b0 1B68     	 ldr r3,[r3]
 1381 05b2 1343     	 orrs r3,r3,r2
 1382 05b4 2E4A     	 ldr r2,.L82
 1383 05b6 1360     	 str r3,[r2]
 653:../../../platform/sam/drivers/usart/usart.c **** 
 654:../../../platform/sam/drivers/usart/usart.c **** 	/* Set SPI master mode and channel mode. */
 655:../../../platform/sam/drivers/usart/usart.c **** 	ul_reg_val |= US_MR_USART_MODE_SPI_MASTER | US_MR_CLKO |
 656:../../../platform/sam/drivers/usart/usart.c **** 			p_usart_opt->channel_mode;
 1384              	 .loc 1 656 0
 1385 05b8 BB68     	 ldr r3,[r7,#8]
 1386 05ba DA68     	 ldr r2,[r3,#12]
 655:../../../platform/sam/drivers/usart/usart.c **** 			p_usart_opt->channel_mode;
 1387              	 .loc 1 655 0
 1388 05bc 2C4B     	 ldr r3,.L82
 1389 05be 1B68     	 ldr r3,[r3]
 1390 05c0 1343     	 orrs r3,r3,r2
 1391 05c2 43F48023 	 orr r3,r3,#262144
 1392 05c6 43F00E03 	 orr r3,r3,#14
 1393 05ca 294A     	 ldr r2,.L82
 1394 05cc 1360     	 str r3,[r2]
 657:../../../platform/sam/drivers/usart/usart.c **** 
 658:../../../platform/sam/drivers/usart/usart.c **** 	switch (p_usart_opt->spi_mode) {
 1395              	 .loc 1 658 0
 1396 05ce BB68     	 ldr r3,[r7,#8]
 1397 05d0 9B68     	 ldr r3,[r3,#8]
 1398 05d2 032B     	 cmp r3,#3
 1399 05d4 3ED8     	 bhi .L81
 1400 05d6 01A2     	 adr r2,.L76
 1401 05d8 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1402              	 .p2align 2
 1403              	.L76:
 1404 05dc ED050000 	 .word .L75+1
 1405 05e0 07060000 	 .word .L77+1
 1406 05e4 21060000 	 .word .L78+1
 1407 05e8 3B060000 	 .word .L79+1
 1408              	 .p2align 1
 1409              	.L75:
 659:../../../platform/sam/drivers/usart/usart.c **** 	case SPI_MODE_0:
 660:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val |= US_MR_CPHA;
 1410              	 .loc 1 660 0
 1411 05ec 204B     	 ldr r3,.L82
 1412 05ee 1B68     	 ldr r3,[r3]
 1413 05f0 43F48073 	 orr r3,r3,#256
 1414 05f4 1E4A     	 ldr r2,.L82
 1415 05f6 1360     	 str r3,[r2]
 661:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val &= ~US_MR_CPOL;
 1416              	 .loc 1 661 0
 1417 05f8 1D4B     	 ldr r3,.L82
 1418 05fa 1B68     	 ldr r3,[r3]
 1419 05fc 23F48033 	 bic r3,r3,#65536
 1420 0600 1B4A     	 ldr r2,.L82
 1421 0602 1360     	 str r3,[r2]
 662:../../../platform/sam/drivers/usart/usart.c **** 		break;
 1422              	 .loc 1 662 0
 1423 0604 27E0     	 b .L80
 1424              	.L77:
 663:../../../platform/sam/drivers/usart/usart.c **** 
 664:../../../platform/sam/drivers/usart/usart.c **** 	case SPI_MODE_1:
 665:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val &= ~US_MR_CPHA;
 1425              	 .loc 1 665 0
 1426 0606 1A4B     	 ldr r3,.L82
 1427 0608 1B68     	 ldr r3,[r3]
 1428 060a 23F48073 	 bic r3,r3,#256
 1429 060e 184A     	 ldr r2,.L82
 1430 0610 1360     	 str r3,[r2]
 666:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val &= ~US_MR_CPOL;
 1431              	 .loc 1 666 0
 1432 0612 174B     	 ldr r3,.L82
 1433 0614 1B68     	 ldr r3,[r3]
 1434 0616 23F48033 	 bic r3,r3,#65536
 1435 061a 154A     	 ldr r2,.L82
 1436 061c 1360     	 str r3,[r2]
 667:../../../platform/sam/drivers/usart/usart.c **** 		break;
 1437              	 .loc 1 667 0
 1438 061e 1AE0     	 b .L80
 1439              	.L78:
 668:../../../platform/sam/drivers/usart/usart.c **** 
 669:../../../platform/sam/drivers/usart/usart.c **** 	case SPI_MODE_2:
 670:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val |= US_MR_CPHA;
 1440              	 .loc 1 670 0
 1441 0620 134B     	 ldr r3,.L82
 1442 0622 1B68     	 ldr r3,[r3]
 1443 0624 43F48073 	 orr r3,r3,#256
 1444 0628 114A     	 ldr r2,.L82
 1445 062a 1360     	 str r3,[r2]
 671:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val |= US_MR_CPOL;
 1446              	 .loc 1 671 0
 1447 062c 104B     	 ldr r3,.L82
 1448 062e 1B68     	 ldr r3,[r3]
 1449 0630 43F48033 	 orr r3,r3,#65536
 1450 0634 0E4A     	 ldr r2,.L82
 1451 0636 1360     	 str r3,[r2]
 672:../../../platform/sam/drivers/usart/usart.c **** 		break;
 1452              	 .loc 1 672 0
 1453 0638 0DE0     	 b .L80
 1454              	.L79:
 673:../../../platform/sam/drivers/usart/usart.c **** 
 674:../../../platform/sam/drivers/usart/usart.c **** 	case SPI_MODE_3:
 675:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val &= ~US_MR_CPHA;
 1455              	 .loc 1 675 0
 1456 063a 0D4B     	 ldr r3,.L82
 1457 063c 1B68     	 ldr r3,[r3]
 1458 063e 23F48073 	 bic r3,r3,#256
 1459 0642 0B4A     	 ldr r2,.L82
 1460 0644 1360     	 str r3,[r2]
 676:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val |= US_MR_CPOL;
 1461              	 .loc 1 676 0
 1462 0646 0A4B     	 ldr r3,.L82
 1463 0648 1B68     	 ldr r3,[r3]
 1464 064a 43F48033 	 orr r3,r3,#65536
 1465 064e 084A     	 ldr r2,.L82
 1466 0650 1360     	 str r3,[r2]
 677:../../../platform/sam/drivers/usart/usart.c **** 		break;
 1467              	 .loc 1 677 0
 1468 0652 00E0     	 b .L80
 1469              	.L81:
 678:../../../platform/sam/drivers/usart/usart.c **** 
 679:../../../platform/sam/drivers/usart/usart.c **** 	default:
 680:../../../platform/sam/drivers/usart/usart.c **** 		break;
 1470              	 .loc 1 680 0
 1471 0654 00BF     	 nop
 1472              	.L80:
 681:../../../platform/sam/drivers/usart/usart.c **** 	}
 682:../../../platform/sam/drivers/usart/usart.c **** 
 683:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR |= ul_reg_val;
 1473              	 .loc 1 683 0
 1474 0656 FB68     	 ldr r3,[r7,#12]
 1475 0658 5A68     	 ldr r2,[r3,#4]
 1476 065a 054B     	 ldr r3,.L82
 1477 065c 1B68     	 ldr r3,[r3]
 1478 065e 1A43     	 orrs r2,r2,r3
 1479 0660 FB68     	 ldr r3,[r7,#12]
 1480 0662 5A60     	 str r2,[r3,#4]
 684:../../../platform/sam/drivers/usart/usart.c **** 
 685:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 1481              	 .loc 1 685 0
 1482 0664 0023     	 movs r3,#0
 1483              	.L73:
 686:../../../platform/sam/drivers/usart/usart.c **** }
 1484              	 .loc 1 686 0
 1485 0666 1846     	 mov r0,r3
 1486 0668 1037     	 adds r7,r7,#16
 1487              	.LCFI84:
 1488              	 .cfi_def_cfa_offset 8
 1489 066a BD46     	 mov sp,r7
 1490              	.LCFI85:
 1491              	 .cfi_def_cfa_register 13
 1492              	 
 1493 066c 80BD     	 pop {r7,pc}
 1494              	.L83:
 1495 066e 00BF     	 .align 2
 1496              	.L82:
 1497 0670 00000000 	 .word ul_reg_val.8065
 1498              	 .cfi_endproc
 1499              	.LFE137:
 1501              	 .align 1
 1502              	 .global usart_init_spi_slave
 1503              	 .syntax unified
 1504              	 .thumb
 1505              	 .thumb_func
 1506              	 .fpu softvfp
 1508              	usart_init_spi_slave:
 1509              	.LFB138:
 687:../../../platform/sam/drivers/usart/usart.c **** 
 688:../../../platform/sam/drivers/usart/usart.c **** /**
 689:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure USART to work in SPI mode and act as a slave.
 690:../../../platform/sam/drivers/usart/usart.c ****  *
 691:../../../platform/sam/drivers/usart/usart.c ****  * \note By default, the transmitter and receiver aren't enabled.
 692:../../../platform/sam/drivers/usart/usart.c ****  *
 693:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 694:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart_opt Pointer to sam_usart_opt_t instance.
 695:../../../platform/sam/drivers/usart/usart.c ****  *
 696:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 on success.
 697:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 on failure.
 698:../../../platform/sam/drivers/usart/usart.c ****  */
 699:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_init_spi_slave(Usart *p_usart,
 700:../../../platform/sam/drivers/usart/usart.c **** 		const usart_spi_opt_t *p_usart_opt)
 701:../../../platform/sam/drivers/usart/usart.c **** {
 1510              	 .loc 1 701 0
 1511              	 .cfi_startproc
 1512              	 
 1513              	 
 1514 0674 80B5     	 push {r7,lr}
 1515              	.LCFI86:
 1516              	 .cfi_def_cfa_offset 8
 1517              	 .cfi_offset 7,-8
 1518              	 .cfi_offset 14,-4
 1519 0676 82B0     	 sub sp,sp,#8
 1520              	.LCFI87:
 1521              	 .cfi_def_cfa_offset 16
 1522 0678 00AF     	 add r7,sp,#0
 1523              	.LCFI88:
 1524              	 .cfi_def_cfa_register 7
 1525 067a 7860     	 str r0,[r7,#4]
 1526 067c 3960     	 str r1,[r7]
 702:../../../platform/sam/drivers/usart/usart.c **** 	static uint32_t ul_reg_val;
 703:../../../platform/sam/drivers/usart/usart.c **** 
 704:../../../platform/sam/drivers/usart/usart.c **** 	/* Reset the USART and shut down TX and RX. */
 705:../../../platform/sam/drivers/usart/usart.c **** 	usart_reset(p_usart);
 1527              	 .loc 1 705 0
 1528 067e 7868     	 ldr r0,[r7,#4]
 1529 0680 FFF7FEFF 	 bl usart_reset
 706:../../../platform/sam/drivers/usart/usart.c **** 
 707:../../../platform/sam/drivers/usart/usart.c **** 	ul_reg_val = 0;
 1530              	 .loc 1 707 0
 1531 0684 374B     	 ldr r3,.L96
 1532 0686 0022     	 movs r2,#0
 1533 0688 1A60     	 str r2,[r3]
 708:../../../platform/sam/drivers/usart/usart.c **** 	usart_set_spi_slave_baudrate(p_usart);
 1534              	 .loc 1 708 0
 1535 068a 7868     	 ldr r0,[r7,#4]
 1536 068c FFF77DFD 	 bl usart_set_spi_slave_baudrate
 709:../../../platform/sam/drivers/usart/usart.c **** 
 710:../../../platform/sam/drivers/usart/usart.c **** 	/* Check whether the input values are legal. */
 711:../../../platform/sam/drivers/usart/usart.c **** 	if (!p_usart_opt || p_usart_opt->spi_mode > SPI_MODE_3) {
 1537              	 .loc 1 711 0
 1538 0690 3B68     	 ldr r3,[r7]
 1539 0692 002B     	 cmp r3,#0
 1540 0694 03D0     	 beq .L85
 1541              	 .loc 1 711 0 is_stmt 0 discriminator 1
 1542 0696 3B68     	 ldr r3,[r7]
 1543 0698 9B68     	 ldr r3,[r3,#8]
 1544 069a 032B     	 cmp r3,#3
 1545 069c 01D9     	 bls .L86
 1546              	.L85:
 712:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 1547              	 .loc 1 712 0 is_stmt 1
 1548 069e 0123     	 movs r3,#1
 1549 06a0 5BE0     	 b .L87
 1550              	.L86:
 713:../../../platform/sam/drivers/usart/usart.c **** 	}
 714:../../../platform/sam/drivers/usart/usart.c **** 
 715:../../../platform/sam/drivers/usart/usart.c **** 	/* Configure the character length bit in MR register. */
 716:../../../platform/sam/drivers/usart/usart.c **** 	ul_reg_val |= p_usart_opt->char_length;
 1551              	 .loc 1 716 0
 1552 06a2 3B68     	 ldr r3,[r7]
 1553 06a4 5A68     	 ldr r2,[r3,#4]
 1554 06a6 2F4B     	 ldr r3,.L96
 1555 06a8 1B68     	 ldr r3,[r3]
 1556 06aa 1343     	 orrs r3,r3,r2
 1557 06ac 2D4A     	 ldr r2,.L96
 1558 06ae 1360     	 str r3,[r2]
 717:../../../platform/sam/drivers/usart/usart.c **** 
 718:../../../platform/sam/drivers/usart/usart.c **** 	/* Set SPI slave mode and channel mode. */
 719:../../../platform/sam/drivers/usart/usart.c **** 	ul_reg_val |= US_MR_USART_MODE_SPI_SLAVE | p_usart_opt->channel_mode;
 1559              	 .loc 1 719 0
 1560 06b0 3B68     	 ldr r3,[r7]
 1561 06b2 DA68     	 ldr r2,[r3,#12]
 1562 06b4 2B4B     	 ldr r3,.L96
 1563 06b6 1B68     	 ldr r3,[r3]
 1564 06b8 1343     	 orrs r3,r3,r2
 1565 06ba 43F00F03 	 orr r3,r3,#15
 1566 06be 294A     	 ldr r2,.L96
 1567 06c0 1360     	 str r3,[r2]
 720:../../../platform/sam/drivers/usart/usart.c **** 
 721:../../../platform/sam/drivers/usart/usart.c **** 	switch (p_usart_opt->spi_mode) {
 1568              	 .loc 1 721 0
 1569 06c2 3B68     	 ldr r3,[r7]
 1570 06c4 9B68     	 ldr r3,[r3,#8]
 1571 06c6 032B     	 cmp r3,#3
 1572 06c8 3ED8     	 bhi .L95
 1573 06ca 01A2     	 adr r2,.L90
 1574 06cc 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1575              	 .p2align 2
 1576              	.L90:
 1577 06d0 E1060000 	 .word .L89+1
 1578 06d4 FB060000 	 .word .L91+1
 1579 06d8 15070000 	 .word .L92+1
 1580 06dc 2F070000 	 .word .L93+1
 1581              	 .p2align 1
 1582              	.L89:
 722:../../../platform/sam/drivers/usart/usart.c **** 	case SPI_MODE_0:
 723:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val |= US_MR_CPHA;
 1583              	 .loc 1 723 0
 1584 06e0 204B     	 ldr r3,.L96
 1585 06e2 1B68     	 ldr r3,[r3]
 1586 06e4 43F48073 	 orr r3,r3,#256
 1587 06e8 1E4A     	 ldr r2,.L96
 1588 06ea 1360     	 str r3,[r2]
 724:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val &= ~US_MR_CPOL;
 1589              	 .loc 1 724 0
 1590 06ec 1D4B     	 ldr r3,.L96
 1591 06ee 1B68     	 ldr r3,[r3]
 1592 06f0 23F48033 	 bic r3,r3,#65536
 1593 06f4 1B4A     	 ldr r2,.L96
 1594 06f6 1360     	 str r3,[r2]
 725:../../../platform/sam/drivers/usart/usart.c **** 		break;
 1595              	 .loc 1 725 0
 1596 06f8 27E0     	 b .L94
 1597              	.L91:
 726:../../../platform/sam/drivers/usart/usart.c **** 
 727:../../../platform/sam/drivers/usart/usart.c **** 	case SPI_MODE_1:
 728:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val &= ~US_MR_CPHA;
 1598              	 .loc 1 728 0
 1599 06fa 1A4B     	 ldr r3,.L96
 1600 06fc 1B68     	 ldr r3,[r3]
 1601 06fe 23F48073 	 bic r3,r3,#256
 1602 0702 184A     	 ldr r2,.L96
 1603 0704 1360     	 str r3,[r2]
 729:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val &= ~US_MR_CPOL;
 1604              	 .loc 1 729 0
 1605 0706 174B     	 ldr r3,.L96
 1606 0708 1B68     	 ldr r3,[r3]
 1607 070a 23F48033 	 bic r3,r3,#65536
 1608 070e 154A     	 ldr r2,.L96
 1609 0710 1360     	 str r3,[r2]
 730:../../../platform/sam/drivers/usart/usart.c **** 		break;
 1610              	 .loc 1 730 0
 1611 0712 1AE0     	 b .L94
 1612              	.L92:
 731:../../../platform/sam/drivers/usart/usart.c **** 
 732:../../../platform/sam/drivers/usart/usart.c **** 	case SPI_MODE_2:
 733:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val |= US_MR_CPHA;
 1613              	 .loc 1 733 0
 1614 0714 134B     	 ldr r3,.L96
 1615 0716 1B68     	 ldr r3,[r3]
 1616 0718 43F48073 	 orr r3,r3,#256
 1617 071c 114A     	 ldr r2,.L96
 1618 071e 1360     	 str r3,[r2]
 734:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val |= US_MR_CPOL;
 1619              	 .loc 1 734 0
 1620 0720 104B     	 ldr r3,.L96
 1621 0722 1B68     	 ldr r3,[r3]
 1622 0724 43F48033 	 orr r3,r3,#65536
 1623 0728 0E4A     	 ldr r2,.L96
 1624 072a 1360     	 str r3,[r2]
 735:../../../platform/sam/drivers/usart/usart.c **** 		break;
 1625              	 .loc 1 735 0
 1626 072c 0DE0     	 b .L94
 1627              	.L93:
 736:../../../platform/sam/drivers/usart/usart.c **** 
 737:../../../platform/sam/drivers/usart/usart.c **** 	case SPI_MODE_3:
 738:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val |= US_MR_CPOL;
 1628              	 .loc 1 738 0
 1629 072e 0D4B     	 ldr r3,.L96
 1630 0730 1B68     	 ldr r3,[r3]
 1631 0732 43F48033 	 orr r3,r3,#65536
 1632 0736 0B4A     	 ldr r2,.L96
 1633 0738 1360     	 str r3,[r2]
 739:../../../platform/sam/drivers/usart/usart.c **** 		ul_reg_val &= ~US_MR_CPHA;
 1634              	 .loc 1 739 0
 1635 073a 0A4B     	 ldr r3,.L96
 1636 073c 1B68     	 ldr r3,[r3]
 1637 073e 23F48073 	 bic r3,r3,#256
 1638 0742 084A     	 ldr r2,.L96
 1639 0744 1360     	 str r3,[r2]
 740:../../../platform/sam/drivers/usart/usart.c **** 		break;
 1640              	 .loc 1 740 0
 1641 0746 00E0     	 b .L94
 1642              	.L95:
 741:../../../platform/sam/drivers/usart/usart.c **** 
 742:../../../platform/sam/drivers/usart/usart.c **** 	default:
 743:../../../platform/sam/drivers/usart/usart.c **** 		break;
 1643              	 .loc 1 743 0
 1644 0748 00BF     	 nop
 1645              	.L94:
 744:../../../platform/sam/drivers/usart/usart.c **** 	}
 745:../../../platform/sam/drivers/usart/usart.c **** 
 746:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR |= ul_reg_val;
 1646              	 .loc 1 746 0
 1647 074a 7B68     	 ldr r3,[r7,#4]
 1648 074c 5A68     	 ldr r2,[r3,#4]
 1649 074e 054B     	 ldr r3,.L96
 1650 0750 1B68     	 ldr r3,[r3]
 1651 0752 1A43     	 orrs r2,r2,r3
 1652 0754 7B68     	 ldr r3,[r7,#4]
 1653 0756 5A60     	 str r2,[r3,#4]
 747:../../../platform/sam/drivers/usart/usart.c **** 
 748:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 1654              	 .loc 1 748 0
 1655 0758 0023     	 movs r3,#0
 1656              	.L87:
 749:../../../platform/sam/drivers/usart/usart.c **** }
 1657              	 .loc 1 749 0
 1658 075a 1846     	 mov r0,r3
 1659 075c 0837     	 adds r7,r7,#8
 1660              	.LCFI89:
 1661              	 .cfi_def_cfa_offset 8
 1662 075e BD46     	 mov sp,r7
 1663              	.LCFI90:
 1664              	 .cfi_def_cfa_register 13
 1665              	 
 1666 0760 80BD     	 pop {r7,pc}
 1667              	.L97:
 1668 0762 00BF     	 .align 2
 1669              	.L96:
 1670 0764 00000000 	 .word ul_reg_val.8076
 1671              	 .cfi_endproc
 1672              	.LFE138:
 1674              	 .align 1
 1675              	 .global usart_init_lin_master
 1676              	 .syntax unified
 1677              	 .thumb
 1678              	 .thumb_func
 1679              	 .fpu softvfp
 1681              	usart_init_lin_master:
 1682              	.LFB139:
 750:../../../platform/sam/drivers/usart/usart.c **** 
 751:../../../platform/sam/drivers/usart/usart.c **** #if (SAM3XA || SAM4L)
 752:../../../platform/sam/drivers/usart/usart.c **** 
 753:../../../platform/sam/drivers/usart/usart.c **** /**
 754:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure USART to work in LIN mode and act as a LIN master.
 755:../../../platform/sam/drivers/usart/usart.c ****  *
 756:../../../platform/sam/drivers/usart/usart.c ****  * \note By default, the transmitter and receiver aren't enabled.
 757:../../../platform/sam/drivers/usart/usart.c ****  *
 758:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 759:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_baudrate Baudrate to be used.
 760:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_mck USART module input clock frequency.
 761:../../../platform/sam/drivers/usart/usart.c ****  *
 762:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 on success.
 763:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 on failure.
 764:../../../platform/sam/drivers/usart/usart.c ****  */
 765:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_init_lin_master(Usart *p_usart,uint32_t ul_baudrate,
 766:../../../platform/sam/drivers/usart/usart.c **** 		uint32_t ul_mck)
 767:../../../platform/sam/drivers/usart/usart.c **** {
 1683              	 .loc 1 767 0
 1684              	 .cfi_startproc
 1685              	 
 1686              	 
 1687 0768 80B5     	 push {r7,lr}
 1688              	.LCFI91:
 1689              	 .cfi_def_cfa_offset 8
 1690              	 .cfi_offset 7,-8
 1691              	 .cfi_offset 14,-4
 1692 076a 84B0     	 sub sp,sp,#16
 1693              	.LCFI92:
 1694              	 .cfi_def_cfa_offset 24
 1695 076c 00AF     	 add r7,sp,#0
 1696              	.LCFI93:
 1697              	 .cfi_def_cfa_register 7
 1698 076e F860     	 str r0,[r7,#12]
 1699 0770 B960     	 str r1,[r7,#8]
 1700 0772 7A60     	 str r2,[r7,#4]
 768:../../../platform/sam/drivers/usart/usart.c **** 	/* Reset the USART and shut down TX and RX. */
 769:../../../platform/sam/drivers/usart/usart.c **** 	usart_reset(p_usart);
 1701              	 .loc 1 769 0
 1702 0774 F868     	 ldr r0,[r7,#12]
 1703 0776 FFF7FEFF 	 bl usart_reset
 770:../../../platform/sam/drivers/usart/usart.c **** 
 771:../../../platform/sam/drivers/usart/usart.c **** 	/* Set up the baudrate. */
 772:../../../platform/sam/drivers/usart/usart.c **** 	if (usart_set_async_baudrate(p_usart, ul_baudrate, ul_mck)) {
 1704              	 .loc 1 772 0
 1705 077a 7A68     	 ldr r2,[r7,#4]
 1706 077c B968     	 ldr r1,[r7,#8]
 1707 077e F868     	 ldr r0,[r7,#12]
 1708 0780 FFF73EFC 	 bl usart_set_async_baudrate
 1709 0784 0346     	 mov r3,r0
 1710 0786 002B     	 cmp r3,#0
 1711 0788 01D0     	 beq .L99
 773:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 1712              	 .loc 1 773 0
 1713 078a 0123     	 movs r3,#1
 1714 078c 0EE0     	 b .L100
 1715              	.L99:
 774:../../../platform/sam/drivers/usart/usart.c **** 	}
 775:../../../platform/sam/drivers/usart/usart.c **** 
 776:../../../platform/sam/drivers/usart/usart.c **** 	/* Set LIN master mode. */
 777:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR = (p_usart->US_MR & ~US_MR_USART_MODE_Msk) |
 1716              	 .loc 1 777 0
 1717 078e FB68     	 ldr r3,[r7,#12]
 1718 0790 5B68     	 ldr r3,[r3,#4]
 1719 0792 23F00F03 	 bic r3,r3,#15
 1720 0796 43F00A02 	 orr r2,r3,#10
 1721 079a FB68     	 ldr r3,[r7,#12]
 1722 079c 5A60     	 str r2,[r3,#4]
 778:../../../platform/sam/drivers/usart/usart.c **** 			US_MR_USART_MODE_LIN_MASTER;
 779:../../../platform/sam/drivers/usart/usart.c **** 
 780:../../../platform/sam/drivers/usart/usart.c **** 	usart_enable_rx(p_usart);
 1723              	 .loc 1 780 0
 1724 079e F868     	 ldr r0,[r7,#12]
 1725 07a0 FFF7FEFF 	 bl usart_enable_rx
 781:../../../platform/sam/drivers/usart/usart.c **** 	usart_enable_tx(p_usart);
 1726              	 .loc 1 781 0
 1727 07a4 F868     	 ldr r0,[r7,#12]
 1728 07a6 FFF7FEFF 	 bl usart_enable_tx
 782:../../../platform/sam/drivers/usart/usart.c **** 
 783:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 1729              	 .loc 1 783 0
 1730 07aa 0023     	 movs r3,#0
 1731              	.L100:
 784:../../../platform/sam/drivers/usart/usart.c **** }
 1732              	 .loc 1 784 0
 1733 07ac 1846     	 mov r0,r3
 1734 07ae 1037     	 adds r7,r7,#16
 1735              	.LCFI94:
 1736              	 .cfi_def_cfa_offset 8
 1737 07b0 BD46     	 mov sp,r7
 1738              	.LCFI95:
 1739              	 .cfi_def_cfa_register 13
 1740              	 
 1741 07b2 80BD     	 pop {r7,pc}
 1742              	 .cfi_endproc
 1743              	.LFE139:
 1745              	 .align 1
 1746              	 .global usart_init_lin_slave
 1747              	 .syntax unified
 1748              	 .thumb
 1749              	 .thumb_func
 1750              	 .fpu softvfp
 1752              	usart_init_lin_slave:
 1753              	.LFB140:
 785:../../../platform/sam/drivers/usart/usart.c **** 
 786:../../../platform/sam/drivers/usart/usart.c **** /**
 787:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure USART to work in LIN mode and act as a LIN slave.
 788:../../../platform/sam/drivers/usart/usart.c ****  *
 789:../../../platform/sam/drivers/usart/usart.c ****  * \note By default, the transmitter and receiver aren't enabled.
 790:../../../platform/sam/drivers/usart/usart.c ****  *
 791:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 792:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_baudrate Baudrate to be used.
 793:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_mck USART module input clock frequency.
 794:../../../platform/sam/drivers/usart/usart.c ****  *
 795:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 on success.
 796:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 on failure.
 797:../../../platform/sam/drivers/usart/usart.c ****  */
 798:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_init_lin_slave(Usart *p_usart, uint32_t ul_baudrate,
 799:../../../platform/sam/drivers/usart/usart.c **** 		uint32_t ul_mck)
 800:../../../platform/sam/drivers/usart/usart.c **** {
 1754              	 .loc 1 800 0
 1755              	 .cfi_startproc
 1756              	 
 1757              	 
 1758 07b4 80B5     	 push {r7,lr}
 1759              	.LCFI96:
 1760              	 .cfi_def_cfa_offset 8
 1761              	 .cfi_offset 7,-8
 1762              	 .cfi_offset 14,-4
 1763 07b6 84B0     	 sub sp,sp,#16
 1764              	.LCFI97:
 1765              	 .cfi_def_cfa_offset 24
 1766 07b8 00AF     	 add r7,sp,#0
 1767              	.LCFI98:
 1768              	 .cfi_def_cfa_register 7
 1769 07ba F860     	 str r0,[r7,#12]
 1770 07bc B960     	 str r1,[r7,#8]
 1771 07be 7A60     	 str r2,[r7,#4]
 801:../../../platform/sam/drivers/usart/usart.c **** 	/* Reset the USART and shut down TX and RX. */
 802:../../../platform/sam/drivers/usart/usart.c **** 	usart_reset(p_usart);
 1772              	 .loc 1 802 0
 1773 07c0 F868     	 ldr r0,[r7,#12]
 1774 07c2 FFF7FEFF 	 bl usart_reset
 803:../../../platform/sam/drivers/usart/usart.c **** 
 804:../../../platform/sam/drivers/usart/usart.c **** 	usart_enable_rx(p_usart);
 1775              	 .loc 1 804 0
 1776 07c6 F868     	 ldr r0,[r7,#12]
 1777 07c8 FFF7FEFF 	 bl usart_enable_rx
 805:../../../platform/sam/drivers/usart/usart.c **** 	usart_enable_tx(p_usart);
 1778              	 .loc 1 805 0
 1779 07cc F868     	 ldr r0,[r7,#12]
 1780 07ce FFF7FEFF 	 bl usart_enable_tx
 806:../../../platform/sam/drivers/usart/usart.c **** 
 807:../../../platform/sam/drivers/usart/usart.c **** 	/* Set LIN slave mode. */
 808:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MR = (p_usart->US_MR & ~US_MR_USART_MODE_Msk) |
 1781              	 .loc 1 808 0
 1782 07d2 FB68     	 ldr r3,[r7,#12]
 1783 07d4 5B68     	 ldr r3,[r3,#4]
 1784 07d6 23F00F03 	 bic r3,r3,#15
 1785 07da 43F00B02 	 orr r2,r3,#11
 1786 07de FB68     	 ldr r3,[r7,#12]
 1787 07e0 5A60     	 str r2,[r3,#4]
 809:../../../platform/sam/drivers/usart/usart.c **** 			US_MR_USART_MODE_LIN_SLAVE;
 810:../../../platform/sam/drivers/usart/usart.c **** 
 811:../../../platform/sam/drivers/usart/usart.c **** 	/* Set up the baudrate. */
 812:../../../platform/sam/drivers/usart/usart.c **** 	if (usart_set_async_baudrate(p_usart, ul_baudrate, ul_mck)) {
 1788              	 .loc 1 812 0
 1789 07e2 7A68     	 ldr r2,[r7,#4]
 1790 07e4 B968     	 ldr r1,[r7,#8]
 1791 07e6 F868     	 ldr r0,[r7,#12]
 1792 07e8 FFF70AFC 	 bl usart_set_async_baudrate
 1793 07ec 0346     	 mov r3,r0
 1794 07ee 002B     	 cmp r3,#0
 1795 07f0 01D0     	 beq .L102
 813:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 1796              	 .loc 1 813 0
 1797 07f2 0123     	 movs r3,#1
 1798 07f4 00E0     	 b .L103
 1799              	.L102:
 814:../../../platform/sam/drivers/usart/usart.c **** 	}
 815:../../../platform/sam/drivers/usart/usart.c **** 
 816:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 1800              	 .loc 1 816 0
 1801 07f6 0023     	 movs r3,#0
 1802              	.L103:
 817:../../../platform/sam/drivers/usart/usart.c **** }
 1803              	 .loc 1 817 0
 1804 07f8 1846     	 mov r0,r3
 1805 07fa 1037     	 adds r7,r7,#16
 1806              	.LCFI99:
 1807              	 .cfi_def_cfa_offset 8
 1808 07fc BD46     	 mov sp,r7
 1809              	.LCFI100:
 1810              	 .cfi_def_cfa_register 13
 1811              	 
 1812 07fe 80BD     	 pop {r7,pc}
 1813              	 .cfi_endproc
 1814              	.LFE140:
 1816              	 .align 1
 1817              	 .global usart_lin_abort_tx
 1818              	 .syntax unified
 1819              	 .thumb
 1820              	 .thumb_func
 1821              	 .fpu softvfp
 1823              	usart_lin_abort_tx:
 1824              	.LFB141:
 818:../../../platform/sam/drivers/usart/usart.c **** 
 819:../../../platform/sam/drivers/usart/usart.c **** /**
 820:../../../platform/sam/drivers/usart/usart.c ****  * \brief Abort the current LIN transmission.
 821:../../../platform/sam/drivers/usart/usart.c ****  *
 822:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 823:../../../platform/sam/drivers/usart/usart.c ****  */
 824:../../../platform/sam/drivers/usart/usart.c **** void usart_lin_abort_tx(Usart *p_usart)
 825:../../../platform/sam/drivers/usart/usart.c **** {
 1825              	 .loc 1 825 0
 1826              	 .cfi_startproc
 1827              	 
 1828              	 
 1829              	 
 1830 0800 80B4     	 push {r7}
 1831              	.LCFI101:
 1832              	 .cfi_def_cfa_offset 4
 1833              	 .cfi_offset 7,-4
 1834 0802 83B0     	 sub sp,sp,#12
 1835              	.LCFI102:
 1836              	 .cfi_def_cfa_offset 16
 1837 0804 00AF     	 add r7,sp,#0
 1838              	.LCFI103:
 1839              	 .cfi_def_cfa_register 7
 1840 0806 7860     	 str r0,[r7,#4]
 826:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_LINABT;
 1841              	 .loc 1 826 0
 1842 0808 7B68     	 ldr r3,[r7,#4]
 1843 080a 4FF48012 	 mov r2,#1048576
 1844 080e 1A60     	 str r2,[r3]
 827:../../../platform/sam/drivers/usart/usart.c **** }
 1845              	 .loc 1 827 0
 1846 0810 00BF     	 nop
 1847 0812 0C37     	 adds r7,r7,#12
 1848              	.LCFI104:
 1849              	 .cfi_def_cfa_offset 4
 1850 0814 BD46     	 mov sp,r7
 1851              	.LCFI105:
 1852              	 .cfi_def_cfa_register 13
 1853              	 
 1854 0816 80BC     	 pop {r7}
 1855              	.LCFI106:
 1856              	 .cfi_restore 7
 1857              	 .cfi_def_cfa_offset 0
 1858 0818 7047     	 bx lr
 1859              	 .cfi_endproc
 1860              	.LFE141:
 1862              	 .align 1
 1863              	 .global usart_lin_send_wakeup_signal
 1864              	 .syntax unified
 1865              	 .thumb
 1866              	 .thumb_func
 1867              	 .fpu softvfp
 1869              	usart_lin_send_wakeup_signal:
 1870              	.LFB142:
 828:../../../platform/sam/drivers/usart/usart.c **** 
 829:../../../platform/sam/drivers/usart/usart.c **** /**
 830:../../../platform/sam/drivers/usart/usart.c ****  * \brief Send a wakeup signal on the LIN bus.
 831:../../../platform/sam/drivers/usart/usart.c ****  *
 832:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 833:../../../platform/sam/drivers/usart/usart.c ****  */
 834:../../../platform/sam/drivers/usart/usart.c **** void usart_lin_send_wakeup_signal(Usart *p_usart)
 835:../../../platform/sam/drivers/usart/usart.c **** {
 1871              	 .loc 1 835 0
 1872              	 .cfi_startproc
 1873              	 
 1874              	 
 1875              	 
 1876 081a 80B4     	 push {r7}
 1877              	.LCFI107:
 1878              	 .cfi_def_cfa_offset 4
 1879              	 .cfi_offset 7,-4
 1880 081c 83B0     	 sub sp,sp,#12
 1881              	.LCFI108:
 1882              	 .cfi_def_cfa_offset 16
 1883 081e 00AF     	 add r7,sp,#0
 1884              	.LCFI109:
 1885              	 .cfi_def_cfa_register 7
 1886 0820 7860     	 str r0,[r7,#4]
 836:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_LINWKUP;
 1887              	 .loc 1 836 0
 1888 0822 7B68     	 ldr r3,[r7,#4]
 1889 0824 4FF40012 	 mov r2,#2097152
 1890 0828 1A60     	 str r2,[r3]
 837:../../../platform/sam/drivers/usart/usart.c **** }
 1891              	 .loc 1 837 0
 1892 082a 00BF     	 nop
 1893 082c 0C37     	 adds r7,r7,#12
 1894              	.LCFI110:
 1895              	 .cfi_def_cfa_offset 4
 1896 082e BD46     	 mov sp,r7
 1897              	.LCFI111:
 1898              	 .cfi_def_cfa_register 13
 1899              	 
 1900 0830 80BC     	 pop {r7}
 1901              	.LCFI112:
 1902              	 .cfi_restore 7
 1903              	 .cfi_def_cfa_offset 0
 1904 0832 7047     	 bx lr
 1905              	 .cfi_endproc
 1906              	.LFE142:
 1908              	 .align 1
 1909              	 .global usart_lin_set_node_action
 1910              	 .syntax unified
 1911              	 .thumb
 1912              	 .thumb_func
 1913              	 .fpu softvfp
 1915              	usart_lin_set_node_action:
 1916              	.LFB143:
 838:../../../platform/sam/drivers/usart/usart.c **** 
 839:../../../platform/sam/drivers/usart/usart.c **** /**
 840:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure the LIN node action, which should be one of PUBLISH,
 841:../../../platform/sam/drivers/usart/usart.c ****  * SUBSCRIBE or IGNORE.
 842:../../../platform/sam/drivers/usart/usart.c ****  *
 843:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 844:../../../platform/sam/drivers/usart/usart.c ****  * \param uc_action 0 for PUBLISH, 1 for SUBSCRIBE, 2 for IGNORE.
 845:../../../platform/sam/drivers/usart/usart.c ****  */
 846:../../../platform/sam/drivers/usart/usart.c **** void usart_lin_set_node_action(Usart *p_usart, uint8_t uc_action)
 847:../../../platform/sam/drivers/usart/usart.c **** {
 1917              	 .loc 1 847 0
 1918              	 .cfi_startproc
 1919              	 
 1920              	 
 1921              	 
 1922 0834 80B4     	 push {r7}
 1923              	.LCFI113:
 1924              	 .cfi_def_cfa_offset 4
 1925              	 .cfi_offset 7,-4
 1926 0836 83B0     	 sub sp,sp,#12
 1927              	.LCFI114:
 1928              	 .cfi_def_cfa_offset 16
 1929 0838 00AF     	 add r7,sp,#0
 1930              	.LCFI115:
 1931              	 .cfi_def_cfa_register 7
 1932 083a 7860     	 str r0,[r7,#4]
 1933 083c 0B46     	 mov r3,r1
 1934 083e FB70     	 strb r3,[r7,#3]
 848:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR = (p_usart->US_LINMR & ~US_LINMR_NACT_Msk) |
 1935              	 .loc 1 848 0
 1936 0840 7B68     	 ldr r3,[r7,#4]
 1937 0842 5B6D     	 ldr r3,[r3,#84]
 1938 0844 23F00302 	 bic r2,r3,#3
 849:../../../platform/sam/drivers/usart/usart.c **** 			(uc_action << US_LINMR_NACT_Pos);
 1939              	 .loc 1 849 0
 1940 0848 FB78     	 ldrb r3,[r7,#3]
 848:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR = (p_usart->US_LINMR & ~US_LINMR_NACT_Msk) |
 1941              	 .loc 1 848 0
 1942 084a 1A43     	 orrs r2,r2,r3
 1943 084c 7B68     	 ldr r3,[r7,#4]
 1944 084e 5A65     	 str r2,[r3,#84]
 850:../../../platform/sam/drivers/usart/usart.c **** }
 1945              	 .loc 1 850 0
 1946 0850 00BF     	 nop
 1947 0852 0C37     	 adds r7,r7,#12
 1948              	.LCFI116:
 1949              	 .cfi_def_cfa_offset 4
 1950 0854 BD46     	 mov sp,r7
 1951              	.LCFI117:
 1952              	 .cfi_def_cfa_register 13
 1953              	 
 1954 0856 80BC     	 pop {r7}
 1955              	.LCFI118:
 1956              	 .cfi_restore 7
 1957              	 .cfi_def_cfa_offset 0
 1958 0858 7047     	 bx lr
 1959              	 .cfi_endproc
 1960              	.LFE143:
 1962              	 .align 1
 1963              	 .global usart_lin_disable_parity
 1964              	 .syntax unified
 1965              	 .thumb
 1966              	 .thumb_func
 1967              	 .fpu softvfp
 1969              	usart_lin_disable_parity:
 1970              	.LFB144:
 851:../../../platform/sam/drivers/usart/usart.c **** 
 852:../../../platform/sam/drivers/usart/usart.c **** /**
 853:../../../platform/sam/drivers/usart/usart.c ****  * \brief Disable the parity check during the LIN communication.
 854:../../../platform/sam/drivers/usart/usart.c ****  *
 855:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 856:../../../platform/sam/drivers/usart/usart.c ****  */
 857:../../../platform/sam/drivers/usart/usart.c **** void usart_lin_disable_parity(Usart *p_usart)
 858:../../../platform/sam/drivers/usart/usart.c **** {
 1971              	 .loc 1 858 0
 1972              	 .cfi_startproc
 1973              	 
 1974              	 
 1975              	 
 1976 085a 80B4     	 push {r7}
 1977              	.LCFI119:
 1978              	 .cfi_def_cfa_offset 4
 1979              	 .cfi_offset 7,-4
 1980 085c 83B0     	 sub sp,sp,#12
 1981              	.LCFI120:
 1982              	 .cfi_def_cfa_offset 16
 1983 085e 00AF     	 add r7,sp,#0
 1984              	.LCFI121:
 1985              	 .cfi_def_cfa_register 7
 1986 0860 7860     	 str r0,[r7,#4]
 859:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR |= US_LINMR_PARDIS;
 1987              	 .loc 1 859 0
 1988 0862 7B68     	 ldr r3,[r7,#4]
 1989 0864 5B6D     	 ldr r3,[r3,#84]
 1990 0866 43F00402 	 orr r2,r3,#4
 1991 086a 7B68     	 ldr r3,[r7,#4]
 1992 086c 5A65     	 str r2,[r3,#84]
 860:../../../platform/sam/drivers/usart/usart.c **** }
 1993              	 .loc 1 860 0
 1994 086e 00BF     	 nop
 1995 0870 0C37     	 adds r7,r7,#12
 1996              	.LCFI122:
 1997              	 .cfi_def_cfa_offset 4
 1998 0872 BD46     	 mov sp,r7
 1999              	.LCFI123:
 2000              	 .cfi_def_cfa_register 13
 2001              	 
 2002 0874 80BC     	 pop {r7}
 2003              	.LCFI124:
 2004              	 .cfi_restore 7
 2005              	 .cfi_def_cfa_offset 0
 2006 0876 7047     	 bx lr
 2007              	 .cfi_endproc
 2008              	.LFE144:
 2010              	 .align 1
 2011              	 .global usart_lin_enable_parity
 2012              	 .syntax unified
 2013              	 .thumb
 2014              	 .thumb_func
 2015              	 .fpu softvfp
 2017              	usart_lin_enable_parity:
 2018              	.LFB145:
 861:../../../platform/sam/drivers/usart/usart.c **** 
 862:../../../platform/sam/drivers/usart/usart.c **** /**
 863:../../../platform/sam/drivers/usart/usart.c ****  * \brief Enable the parity check during the LIN communication.
 864:../../../platform/sam/drivers/usart/usart.c ****  *
 865:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 866:../../../platform/sam/drivers/usart/usart.c ****  */
 867:../../../platform/sam/drivers/usart/usart.c **** void usart_lin_enable_parity(Usart *p_usart)
 868:../../../platform/sam/drivers/usart/usart.c **** {
 2019              	 .loc 1 868 0
 2020              	 .cfi_startproc
 2021              	 
 2022              	 
 2023              	 
 2024 0878 80B4     	 push {r7}
 2025              	.LCFI125:
 2026              	 .cfi_def_cfa_offset 4
 2027              	 .cfi_offset 7,-4
 2028 087a 83B0     	 sub sp,sp,#12
 2029              	.LCFI126:
 2030              	 .cfi_def_cfa_offset 16
 2031 087c 00AF     	 add r7,sp,#0
 2032              	.LCFI127:
 2033              	 .cfi_def_cfa_register 7
 2034 087e 7860     	 str r0,[r7,#4]
 869:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR &= ~US_LINMR_PARDIS;
 2035              	 .loc 1 869 0
 2036 0880 7B68     	 ldr r3,[r7,#4]
 2037 0882 5B6D     	 ldr r3,[r3,#84]
 2038 0884 23F00402 	 bic r2,r3,#4
 2039 0888 7B68     	 ldr r3,[r7,#4]
 2040 088a 5A65     	 str r2,[r3,#84]
 870:../../../platform/sam/drivers/usart/usart.c **** }
 2041              	 .loc 1 870 0
 2042 088c 00BF     	 nop
 2043 088e 0C37     	 adds r7,r7,#12
 2044              	.LCFI128:
 2045              	 .cfi_def_cfa_offset 4
 2046 0890 BD46     	 mov sp,r7
 2047              	.LCFI129:
 2048              	 .cfi_def_cfa_register 13
 2049              	 
 2050 0892 80BC     	 pop {r7}
 2051              	.LCFI130:
 2052              	 .cfi_restore 7
 2053              	 .cfi_def_cfa_offset 0
 2054 0894 7047     	 bx lr
 2055              	 .cfi_endproc
 2056              	.LFE145:
 2058              	 .align 1
 2059              	 .global usart_lin_disable_checksum
 2060              	 .syntax unified
 2061              	 .thumb
 2062              	 .thumb_func
 2063              	 .fpu softvfp
 2065              	usart_lin_disable_checksum:
 2066              	.LFB146:
 871:../../../platform/sam/drivers/usart/usart.c **** 
 872:../../../platform/sam/drivers/usart/usart.c **** /**
 873:../../../platform/sam/drivers/usart/usart.c ****  * \brief Disable the checksum during the LIN communication.
 874:../../../platform/sam/drivers/usart/usart.c ****  *
 875:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 876:../../../platform/sam/drivers/usart/usart.c ****  */
 877:../../../platform/sam/drivers/usart/usart.c **** void usart_lin_disable_checksum(Usart *p_usart)
 878:../../../platform/sam/drivers/usart/usart.c **** {
 2067              	 .loc 1 878 0
 2068              	 .cfi_startproc
 2069              	 
 2070              	 
 2071              	 
 2072 0896 80B4     	 push {r7}
 2073              	.LCFI131:
 2074              	 .cfi_def_cfa_offset 4
 2075              	 .cfi_offset 7,-4
 2076 0898 83B0     	 sub sp,sp,#12
 2077              	.LCFI132:
 2078              	 .cfi_def_cfa_offset 16
 2079 089a 00AF     	 add r7,sp,#0
 2080              	.LCFI133:
 2081              	 .cfi_def_cfa_register 7
 2082 089c 7860     	 str r0,[r7,#4]
 879:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR |= US_LINMR_CHKDIS;
 2083              	 .loc 1 879 0
 2084 089e 7B68     	 ldr r3,[r7,#4]
 2085 08a0 5B6D     	 ldr r3,[r3,#84]
 2086 08a2 43F00802 	 orr r2,r3,#8
 2087 08a6 7B68     	 ldr r3,[r7,#4]
 2088 08a8 5A65     	 str r2,[r3,#84]
 880:../../../platform/sam/drivers/usart/usart.c **** }
 2089              	 .loc 1 880 0
 2090 08aa 00BF     	 nop
 2091 08ac 0C37     	 adds r7,r7,#12
 2092              	.LCFI134:
 2093              	 .cfi_def_cfa_offset 4
 2094 08ae BD46     	 mov sp,r7
 2095              	.LCFI135:
 2096              	 .cfi_def_cfa_register 13
 2097              	 
 2098 08b0 80BC     	 pop {r7}
 2099              	.LCFI136:
 2100              	 .cfi_restore 7
 2101              	 .cfi_def_cfa_offset 0
 2102 08b2 7047     	 bx lr
 2103              	 .cfi_endproc
 2104              	.LFE146:
 2106              	 .align 1
 2107              	 .global usart_lin_enable_checksum
 2108              	 .syntax unified
 2109              	 .thumb
 2110              	 .thumb_func
 2111              	 .fpu softvfp
 2113              	usart_lin_enable_checksum:
 2114              	.LFB147:
 881:../../../platform/sam/drivers/usart/usart.c **** 
 882:../../../platform/sam/drivers/usart/usart.c **** /**
 883:../../../platform/sam/drivers/usart/usart.c ****  * \brief Enable the checksum during the LIN communication.
 884:../../../platform/sam/drivers/usart/usart.c ****  *
 885:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 886:../../../platform/sam/drivers/usart/usart.c ****  */
 887:../../../platform/sam/drivers/usart/usart.c **** void usart_lin_enable_checksum(Usart *p_usart)
 888:../../../platform/sam/drivers/usart/usart.c **** {
 2115              	 .loc 1 888 0
 2116              	 .cfi_startproc
 2117              	 
 2118              	 
 2119              	 
 2120 08b4 80B4     	 push {r7}
 2121              	.LCFI137:
 2122              	 .cfi_def_cfa_offset 4
 2123              	 .cfi_offset 7,-4
 2124 08b6 83B0     	 sub sp,sp,#12
 2125              	.LCFI138:
 2126              	 .cfi_def_cfa_offset 16
 2127 08b8 00AF     	 add r7,sp,#0
 2128              	.LCFI139:
 2129              	 .cfi_def_cfa_register 7
 2130 08ba 7860     	 str r0,[r7,#4]
 889:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR &= ~US_LINMR_CHKDIS;
 2131              	 .loc 1 889 0
 2132 08bc 7B68     	 ldr r3,[r7,#4]
 2133 08be 5B6D     	 ldr r3,[r3,#84]
 2134 08c0 23F00802 	 bic r2,r3,#8
 2135 08c4 7B68     	 ldr r3,[r7,#4]
 2136 08c6 5A65     	 str r2,[r3,#84]
 890:../../../platform/sam/drivers/usart/usart.c **** }
 2137              	 .loc 1 890 0
 2138 08c8 00BF     	 nop
 2139 08ca 0C37     	 adds r7,r7,#12
 2140              	.LCFI140:
 2141              	 .cfi_def_cfa_offset 4
 2142 08cc BD46     	 mov sp,r7
 2143              	.LCFI141:
 2144              	 .cfi_def_cfa_register 13
 2145              	 
 2146 08ce 80BC     	 pop {r7}
 2147              	.LCFI142:
 2148              	 .cfi_restore 7
 2149              	 .cfi_def_cfa_offset 0
 2150 08d0 7047     	 bx lr
 2151              	 .cfi_endproc
 2152              	.LFE147:
 2154              	 .align 1
 2155              	 .global usart_lin_set_checksum_type
 2156              	 .syntax unified
 2157              	 .thumb
 2158              	 .thumb_func
 2159              	 .fpu softvfp
 2161              	usart_lin_set_checksum_type:
 2162              	.LFB148:
 891:../../../platform/sam/drivers/usart/usart.c **** 
 892:../../../platform/sam/drivers/usart/usart.c **** /**
 893:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure the checksum type during the LIN communication.
 894:../../../platform/sam/drivers/usart/usart.c ****  *
 895:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 896:../../../platform/sam/drivers/usart/usart.c ****  * \param uc_type 0 for LIN 2.0 Enhanced checksum or 1 for LIN 1.3 Classic
 897:../../../platform/sam/drivers/usart/usart.c ****  *  checksum.
 898:../../../platform/sam/drivers/usart/usart.c ****  */
 899:../../../platform/sam/drivers/usart/usart.c **** void usart_lin_set_checksum_type(Usart *p_usart, uint8_t uc_type)
 900:../../../platform/sam/drivers/usart/usart.c **** {
 2163              	 .loc 1 900 0
 2164              	 .cfi_startproc
 2165              	 
 2166              	 
 2167              	 
 2168 08d2 80B4     	 push {r7}
 2169              	.LCFI143:
 2170              	 .cfi_def_cfa_offset 4
 2171              	 .cfi_offset 7,-4
 2172 08d4 83B0     	 sub sp,sp,#12
 2173              	.LCFI144:
 2174              	 .cfi_def_cfa_offset 16
 2175 08d6 00AF     	 add r7,sp,#0
 2176              	.LCFI145:
 2177              	 .cfi_def_cfa_register 7
 2178 08d8 7860     	 str r0,[r7,#4]
 2179 08da 0B46     	 mov r3,r1
 2180 08dc FB70     	 strb r3,[r7,#3]
 901:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR = (p_usart->US_LINMR & ~US_LINMR_CHKTYP) |
 2181              	 .loc 1 901 0
 2182 08de 7B68     	 ldr r3,[r7,#4]
 2183 08e0 5B6D     	 ldr r3,[r3,#84]
 2184 08e2 23F01003 	 bic r3,r3,#16
 902:../../../platform/sam/drivers/usart/usart.c **** 			(uc_type << 4);
 2185              	 .loc 1 902 0
 2186 08e6 FA78     	 ldrb r2,[r7,#3]
 2187 08e8 1201     	 lsls r2,r2,#4
 901:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR = (p_usart->US_LINMR & ~US_LINMR_CHKTYP) |
 2188              	 .loc 1 901 0
 2189 08ea 1A43     	 orrs r2,r2,r3
 2190 08ec 7B68     	 ldr r3,[r7,#4]
 2191 08ee 5A65     	 str r2,[r3,#84]
 903:../../../platform/sam/drivers/usart/usart.c **** }
 2192              	 .loc 1 903 0
 2193 08f0 00BF     	 nop
 2194 08f2 0C37     	 adds r7,r7,#12
 2195              	.LCFI146:
 2196              	 .cfi_def_cfa_offset 4
 2197 08f4 BD46     	 mov sp,r7
 2198              	.LCFI147:
 2199              	 .cfi_def_cfa_register 13
 2200              	 
 2201 08f6 80BC     	 pop {r7}
 2202              	.LCFI148:
 2203              	 .cfi_restore 7
 2204              	 .cfi_def_cfa_offset 0
 2205 08f8 7047     	 bx lr
 2206              	 .cfi_endproc
 2207              	.LFE148:
 2209              	 .align 1
 2210              	 .global usart_lin_set_data_len_mode
 2211              	 .syntax unified
 2212              	 .thumb
 2213              	 .thumb_func
 2214              	 .fpu softvfp
 2216              	usart_lin_set_data_len_mode:
 2217              	.LFB149:
 904:../../../platform/sam/drivers/usart/usart.c **** 
 905:../../../platform/sam/drivers/usart/usart.c **** /**
 906:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure the data length mode during the LIN communication.
 907:../../../platform/sam/drivers/usart/usart.c ****  *
 908:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 909:../../../platform/sam/drivers/usart/usart.c ****  * \param uc_mode Indicate the data length type: 0 if the data length is
 910:../../../platform/sam/drivers/usart/usart.c ****  * defined by the DLC of LIN mode register or 1 if the data length is defined
 911:../../../platform/sam/drivers/usart/usart.c ****  * by the bit 5 and 6 of the identifier.
 912:../../../platform/sam/drivers/usart/usart.c ****  */
 913:../../../platform/sam/drivers/usart/usart.c **** void usart_lin_set_data_len_mode(Usart *p_usart, uint8_t uc_mode)
 914:../../../platform/sam/drivers/usart/usart.c **** {
 2218              	 .loc 1 914 0
 2219              	 .cfi_startproc
 2220              	 
 2221              	 
 2222              	 
 2223 08fa 80B4     	 push {r7}
 2224              	.LCFI149:
 2225              	 .cfi_def_cfa_offset 4
 2226              	 .cfi_offset 7,-4
 2227 08fc 83B0     	 sub sp,sp,#12
 2228              	.LCFI150:
 2229              	 .cfi_def_cfa_offset 16
 2230 08fe 00AF     	 add r7,sp,#0
 2231              	.LCFI151:
 2232              	 .cfi_def_cfa_register 7
 2233 0900 7860     	 str r0,[r7,#4]
 2234 0902 0B46     	 mov r3,r1
 2235 0904 FB70     	 strb r3,[r7,#3]
 915:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR = (p_usart->US_LINMR & ~US_LINMR_DLM) |
 2236              	 .loc 1 915 0
 2237 0906 7B68     	 ldr r3,[r7,#4]
 2238 0908 5B6D     	 ldr r3,[r3,#84]
 2239 090a 23F02003 	 bic r3,r3,#32
 916:../../../platform/sam/drivers/usart/usart.c **** 			(uc_mode << 5);
 2240              	 .loc 1 916 0
 2241 090e FA78     	 ldrb r2,[r7,#3]
 2242 0910 5201     	 lsls r2,r2,#5
 915:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR = (p_usart->US_LINMR & ~US_LINMR_DLM) |
 2243              	 .loc 1 915 0
 2244 0912 1A43     	 orrs r2,r2,r3
 2245 0914 7B68     	 ldr r3,[r7,#4]
 2246 0916 5A65     	 str r2,[r3,#84]
 917:../../../platform/sam/drivers/usart/usart.c **** }
 2247              	 .loc 1 917 0
 2248 0918 00BF     	 nop
 2249 091a 0C37     	 adds r7,r7,#12
 2250              	.LCFI152:
 2251              	 .cfi_def_cfa_offset 4
 2252 091c BD46     	 mov sp,r7
 2253              	.LCFI153:
 2254              	 .cfi_def_cfa_register 13
 2255              	 
 2256 091e 80BC     	 pop {r7}
 2257              	.LCFI154:
 2258              	 .cfi_restore 7
 2259              	 .cfi_def_cfa_offset 0
 2260 0920 7047     	 bx lr
 2261              	 .cfi_endproc
 2262              	.LFE149:
 2264              	 .align 1
 2265              	 .global usart_lin_disable_frame_slot
 2266              	 .syntax unified
 2267              	 .thumb
 2268              	 .thumb_func
 2269              	 .fpu softvfp
 2271              	usart_lin_disable_frame_slot:
 2272              	.LFB150:
 918:../../../platform/sam/drivers/usart/usart.c **** 
 919:../../../platform/sam/drivers/usart/usart.c **** /**
 920:../../../platform/sam/drivers/usart/usart.c ****  * \brief Disable the frame slot mode during the LIN communication.
 921:../../../platform/sam/drivers/usart/usart.c ****  *
 922:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 923:../../../platform/sam/drivers/usart/usart.c ****  */
 924:../../../platform/sam/drivers/usart/usart.c **** void usart_lin_disable_frame_slot(Usart *p_usart)
 925:../../../platform/sam/drivers/usart/usart.c **** {
 2273              	 .loc 1 925 0
 2274              	 .cfi_startproc
 2275              	 
 2276              	 
 2277              	 
 2278 0922 80B4     	 push {r7}
 2279              	.LCFI155:
 2280              	 .cfi_def_cfa_offset 4
 2281              	 .cfi_offset 7,-4
 2282 0924 83B0     	 sub sp,sp,#12
 2283              	.LCFI156:
 2284              	 .cfi_def_cfa_offset 16
 2285 0926 00AF     	 add r7,sp,#0
 2286              	.LCFI157:
 2287              	 .cfi_def_cfa_register 7
 2288 0928 7860     	 str r0,[r7,#4]
 926:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR |= US_LINMR_FSDIS;
 2289              	 .loc 1 926 0
 2290 092a 7B68     	 ldr r3,[r7,#4]
 2291 092c 5B6D     	 ldr r3,[r3,#84]
 2292 092e 43F04002 	 orr r2,r3,#64
 2293 0932 7B68     	 ldr r3,[r7,#4]
 2294 0934 5A65     	 str r2,[r3,#84]
 927:../../../platform/sam/drivers/usart/usart.c **** }
 2295              	 .loc 1 927 0
 2296 0936 00BF     	 nop
 2297 0938 0C37     	 adds r7,r7,#12
 2298              	.LCFI158:
 2299              	 .cfi_def_cfa_offset 4
 2300 093a BD46     	 mov sp,r7
 2301              	.LCFI159:
 2302              	 .cfi_def_cfa_register 13
 2303              	 
 2304 093c 80BC     	 pop {r7}
 2305              	.LCFI160:
 2306              	 .cfi_restore 7
 2307              	 .cfi_def_cfa_offset 0
 2308 093e 7047     	 bx lr
 2309              	 .cfi_endproc
 2310              	.LFE150:
 2312              	 .align 1
 2313              	 .global usart_lin_enable_frame_slot
 2314              	 .syntax unified
 2315              	 .thumb
 2316              	 .thumb_func
 2317              	 .fpu softvfp
 2319              	usart_lin_enable_frame_slot:
 2320              	.LFB151:
 928:../../../platform/sam/drivers/usart/usart.c **** 
 929:../../../platform/sam/drivers/usart/usart.c **** /**
 930:../../../platform/sam/drivers/usart/usart.c ****  * \brief Enable the frame slot mode during the LIN communication.
 931:../../../platform/sam/drivers/usart/usart.c ****  *
 932:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 933:../../../platform/sam/drivers/usart/usart.c ****  */
 934:../../../platform/sam/drivers/usart/usart.c **** void usart_lin_enable_frame_slot(Usart *p_usart)
 935:../../../platform/sam/drivers/usart/usart.c **** {
 2321              	 .loc 1 935 0
 2322              	 .cfi_startproc
 2323              	 
 2324              	 
 2325              	 
 2326 0940 80B4     	 push {r7}
 2327              	.LCFI161:
 2328              	 .cfi_def_cfa_offset 4
 2329              	 .cfi_offset 7,-4
 2330 0942 83B0     	 sub sp,sp,#12
 2331              	.LCFI162:
 2332              	 .cfi_def_cfa_offset 16
 2333 0944 00AF     	 add r7,sp,#0
 2334              	.LCFI163:
 2335              	 .cfi_def_cfa_register 7
 2336 0946 7860     	 str r0,[r7,#4]
 936:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR &= ~US_LINMR_FSDIS;
 2337              	 .loc 1 936 0
 2338 0948 7B68     	 ldr r3,[r7,#4]
 2339 094a 5B6D     	 ldr r3,[r3,#84]
 2340 094c 23F04002 	 bic r2,r3,#64
 2341 0950 7B68     	 ldr r3,[r7,#4]
 2342 0952 5A65     	 str r2,[r3,#84]
 937:../../../platform/sam/drivers/usart/usart.c **** }
 2343              	 .loc 1 937 0
 2344 0954 00BF     	 nop
 2345 0956 0C37     	 adds r7,r7,#12
 2346              	.LCFI164:
 2347              	 .cfi_def_cfa_offset 4
 2348 0958 BD46     	 mov sp,r7
 2349              	.LCFI165:
 2350              	 .cfi_def_cfa_register 13
 2351              	 
 2352 095a 80BC     	 pop {r7}
 2353              	.LCFI166:
 2354              	 .cfi_restore 7
 2355              	 .cfi_def_cfa_offset 0
 2356 095c 7047     	 bx lr
 2357              	 .cfi_endproc
 2358              	.LFE151:
 2360              	 .align 1
 2361              	 .global usart_lin_set_wakeup_signal_type
 2362              	 .syntax unified
 2363              	 .thumb
 2364              	 .thumb_func
 2365              	 .fpu softvfp
 2367              	usart_lin_set_wakeup_signal_type:
 2368              	.LFB152:
 938:../../../platform/sam/drivers/usart/usart.c **** 
 939:../../../platform/sam/drivers/usart/usart.c **** /**
 940:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure the wakeup signal type during the LIN communication.
 941:../../../platform/sam/drivers/usart/usart.c ****  *
 942:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 943:../../../platform/sam/drivers/usart/usart.c ****  * \param uc_type Indicate the checksum type: 0 if the wakeup signal is a
 944:../../../platform/sam/drivers/usart/usart.c ****  * LIN 2.0 wakeup signal; 1 if the wakeup signal is a LIN 1.3 wakeup signal.
 945:../../../platform/sam/drivers/usart/usart.c ****  */
 946:../../../platform/sam/drivers/usart/usart.c **** void usart_lin_set_wakeup_signal_type(Usart *p_usart, uint8_t uc_type)
 947:../../../platform/sam/drivers/usart/usart.c **** {
 2369              	 .loc 1 947 0
 2370              	 .cfi_startproc
 2371              	 
 2372              	 
 2373              	 
 2374 095e 80B4     	 push {r7}
 2375              	.LCFI167:
 2376              	 .cfi_def_cfa_offset 4
 2377              	 .cfi_offset 7,-4
 2378 0960 83B0     	 sub sp,sp,#12
 2379              	.LCFI168:
 2380              	 .cfi_def_cfa_offset 16
 2381 0962 00AF     	 add r7,sp,#0
 2382              	.LCFI169:
 2383              	 .cfi_def_cfa_register 7
 2384 0964 7860     	 str r0,[r7,#4]
 2385 0966 0B46     	 mov r3,r1
 2386 0968 FB70     	 strb r3,[r7,#3]
 948:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR = (p_usart->US_LINMR & ~US_LINMR_WKUPTYP) |
 2387              	 .loc 1 948 0
 2388 096a 7B68     	 ldr r3,[r7,#4]
 2389 096c 5B6D     	 ldr r3,[r3,#84]
 2390 096e 23F08003 	 bic r3,r3,#128
 949:../../../platform/sam/drivers/usart/usart.c **** 			(uc_type << 7);
 2391              	 .loc 1 949 0
 2392 0972 FA78     	 ldrb r2,[r7,#3]
 2393 0974 D201     	 lsls r2,r2,#7
 948:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR = (p_usart->US_LINMR & ~US_LINMR_WKUPTYP) |
 2394              	 .loc 1 948 0
 2395 0976 1A43     	 orrs r2,r2,r3
 2396 0978 7B68     	 ldr r3,[r7,#4]
 2397 097a 5A65     	 str r2,[r3,#84]
 950:../../../platform/sam/drivers/usart/usart.c **** }
 2398              	 .loc 1 950 0
 2399 097c 00BF     	 nop
 2400 097e 0C37     	 adds r7,r7,#12
 2401              	.LCFI170:
 2402              	 .cfi_def_cfa_offset 4
 2403 0980 BD46     	 mov sp,r7
 2404              	.LCFI171:
 2405              	 .cfi_def_cfa_register 13
 2406              	 
 2407 0982 80BC     	 pop {r7}
 2408              	.LCFI172:
 2409              	 .cfi_restore 7
 2410              	 .cfi_def_cfa_offset 0
 2411 0984 7047     	 bx lr
 2412              	 .cfi_endproc
 2413              	.LFE152:
 2415              	 .align 1
 2416              	 .global usart_lin_set_response_data_len
 2417              	 .syntax unified
 2418              	 .thumb
 2419              	 .thumb_func
 2420              	 .fpu softvfp
 2422              	usart_lin_set_response_data_len:
 2423              	.LFB153:
 951:../../../platform/sam/drivers/usart/usart.c **** 
 952:../../../platform/sam/drivers/usart/usart.c **** /**
 953:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure the response data length if the data length is defined by
 954:../../../platform/sam/drivers/usart/usart.c ****  * the DLC field during the LIN communication.
 955:../../../platform/sam/drivers/usart/usart.c ****  *
 956:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 957:../../../platform/sam/drivers/usart/usart.c ****  * \param uc_len Indicate the response data length.
 958:../../../platform/sam/drivers/usart/usart.c ****  */
 959:../../../platform/sam/drivers/usart/usart.c **** void usart_lin_set_response_data_len(Usart *p_usart, uint8_t uc_len)
 960:../../../platform/sam/drivers/usart/usart.c **** {
 2424              	 .loc 1 960 0
 2425              	 .cfi_startproc
 2426              	 
 2427              	 
 2428              	 
 2429 0986 80B4     	 push {r7}
 2430              	.LCFI173:
 2431              	 .cfi_def_cfa_offset 4
 2432              	 .cfi_offset 7,-4
 2433 0988 83B0     	 sub sp,sp,#12
 2434              	.LCFI174:
 2435              	 .cfi_def_cfa_offset 16
 2436 098a 00AF     	 add r7,sp,#0
 2437              	.LCFI175:
 2438              	 .cfi_def_cfa_register 7
 2439 098c 7860     	 str r0,[r7,#4]
 2440 098e 0B46     	 mov r3,r1
 2441 0990 FB70     	 strb r3,[r7,#3]
 961:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR = (p_usart->US_LINMR & ~US_LINMR_DLC_Msk) |
 2442              	 .loc 1 961 0
 2443 0992 7B68     	 ldr r3,[r7,#4]
 2444 0994 5B6D     	 ldr r3,[r3,#84]
 2445 0996 23F47F43 	 bic r3,r3,#65280
 962:../../../platform/sam/drivers/usart/usart.c **** 			((uc_len - 1) << US_LINMR_DLC_Pos);
 2446              	 .loc 1 962 0
 2447 099a FA78     	 ldrb r2,[r7,#3]
 2448 099c 013A     	 subs r2,r2,#1
 2449 099e 1202     	 lsls r2,r2,#8
 961:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR = (p_usart->US_LINMR & ~US_LINMR_DLC_Msk) |
 2450              	 .loc 1 961 0
 2451 09a0 1A43     	 orrs r2,r2,r3
 2452 09a2 7B68     	 ldr r3,[r7,#4]
 2453 09a4 5A65     	 str r2,[r3,#84]
 963:../../../platform/sam/drivers/usart/usart.c **** }
 2454              	 .loc 1 963 0
 2455 09a6 00BF     	 nop
 2456 09a8 0C37     	 adds r7,r7,#12
 2457              	.LCFI176:
 2458              	 .cfi_def_cfa_offset 4
 2459 09aa BD46     	 mov sp,r7
 2460              	.LCFI177:
 2461              	 .cfi_def_cfa_register 13
 2462              	 
 2463 09ac 80BC     	 pop {r7}
 2464              	.LCFI178:
 2465              	 .cfi_restore 7
 2466              	 .cfi_def_cfa_offset 0
 2467 09ae 7047     	 bx lr
 2468              	 .cfi_endproc
 2469              	.LFE153:
 2471              	 .align 1
 2472              	 .global usart_lin_disable_pdc_mode
 2473              	 .syntax unified
 2474              	 .thumb
 2475              	 .thumb_func
 2476              	 .fpu softvfp
 2478              	usart_lin_disable_pdc_mode:
 2479              	.LFB154:
 964:../../../platform/sam/drivers/usart/usart.c **** 
 965:../../../platform/sam/drivers/usart/usart.c **** /**
 966:../../../platform/sam/drivers/usart/usart.c ****  * \brief The LIN mode register is not written by the PDC.
 967:../../../platform/sam/drivers/usart/usart.c ****  *
 968:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 969:../../../platform/sam/drivers/usart/usart.c ****  */
 970:../../../platform/sam/drivers/usart/usart.c **** void usart_lin_disable_pdc_mode(Usart *p_usart)
 971:../../../platform/sam/drivers/usart/usart.c **** {
 2480              	 .loc 1 971 0
 2481              	 .cfi_startproc
 2482              	 
 2483              	 
 2484              	 
 2485 09b0 80B4     	 push {r7}
 2486              	.LCFI179:
 2487              	 .cfi_def_cfa_offset 4
 2488              	 .cfi_offset 7,-4
 2489 09b2 83B0     	 sub sp,sp,#12
 2490              	.LCFI180:
 2491              	 .cfi_def_cfa_offset 16
 2492 09b4 00AF     	 add r7,sp,#0
 2493              	.LCFI181:
 2494              	 .cfi_def_cfa_register 7
 2495 09b6 7860     	 str r0,[r7,#4]
 972:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR &= ~US_LINMR_PDCM;
 2496              	 .loc 1 972 0
 2497 09b8 7B68     	 ldr r3,[r7,#4]
 2498 09ba 5B6D     	 ldr r3,[r3,#84]
 2499 09bc 23F48032 	 bic r2,r3,#65536
 2500 09c0 7B68     	 ldr r3,[r7,#4]
 2501 09c2 5A65     	 str r2,[r3,#84]
 973:../../../platform/sam/drivers/usart/usart.c **** }
 2502              	 .loc 1 973 0
 2503 09c4 00BF     	 nop
 2504 09c6 0C37     	 adds r7,r7,#12
 2505              	.LCFI182:
 2506              	 .cfi_def_cfa_offset 4
 2507 09c8 BD46     	 mov sp,r7
 2508              	.LCFI183:
 2509              	 .cfi_def_cfa_register 13
 2510              	 
 2511 09ca 80BC     	 pop {r7}
 2512              	.LCFI184:
 2513              	 .cfi_restore 7
 2514              	 .cfi_def_cfa_offset 0
 2515 09cc 7047     	 bx lr
 2516              	 .cfi_endproc
 2517              	.LFE154:
 2519              	 .align 1
 2520              	 .global usart_lin_enable_pdc_mode
 2521              	 .syntax unified
 2522              	 .thumb
 2523              	 .thumb_func
 2524              	 .fpu softvfp
 2526              	usart_lin_enable_pdc_mode:
 2527              	.LFB155:
 974:../../../platform/sam/drivers/usart/usart.c **** 
 975:../../../platform/sam/drivers/usart/usart.c **** /**
 976:../../../platform/sam/drivers/usart/usart.c ****  * \brief The LIN mode register (except this flag) is written by the PDC.
 977:../../../platform/sam/drivers/usart/usart.c ****  *
 978:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 979:../../../platform/sam/drivers/usart/usart.c ****  */
 980:../../../platform/sam/drivers/usart/usart.c **** void usart_lin_enable_pdc_mode(Usart *p_usart)
 981:../../../platform/sam/drivers/usart/usart.c **** {
 2528              	 .loc 1 981 0
 2529              	 .cfi_startproc
 2530              	 
 2531              	 
 2532              	 
 2533 09ce 80B4     	 push {r7}
 2534              	.LCFI185:
 2535              	 .cfi_def_cfa_offset 4
 2536              	 .cfi_offset 7,-4
 2537 09d0 83B0     	 sub sp,sp,#12
 2538              	.LCFI186:
 2539              	 .cfi_def_cfa_offset 16
 2540 09d2 00AF     	 add r7,sp,#0
 2541              	.LCFI187:
 2542              	 .cfi_def_cfa_register 7
 2543 09d4 7860     	 str r0,[r7,#4]
 982:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINMR |= US_LINMR_PDCM;
 2544              	 .loc 1 982 0
 2545 09d6 7B68     	 ldr r3,[r7,#4]
 2546 09d8 5B6D     	 ldr r3,[r3,#84]
 2547 09da 43F48032 	 orr r2,r3,#65536
 2548 09de 7B68     	 ldr r3,[r7,#4]
 2549 09e0 5A65     	 str r2,[r3,#84]
 983:../../../platform/sam/drivers/usart/usart.c **** }
 2550              	 .loc 1 983 0
 2551 09e2 00BF     	 nop
 2552 09e4 0C37     	 adds r7,r7,#12
 2553              	.LCFI188:
 2554              	 .cfi_def_cfa_offset 4
 2555 09e6 BD46     	 mov sp,r7
 2556              	.LCFI189:
 2557              	 .cfi_def_cfa_register 13
 2558              	 
 2559 09e8 80BC     	 pop {r7}
 2560              	.LCFI190:
 2561              	 .cfi_restore 7
 2562              	 .cfi_def_cfa_offset 0
 2563 09ea 7047     	 bx lr
 2564              	 .cfi_endproc
 2565              	.LFE155:
 2567              	 .align 1
 2568              	 .global usart_lin_set_tx_identifier
 2569              	 .syntax unified
 2570              	 .thumb
 2571              	 .thumb_func
 2572              	 .fpu softvfp
 2574              	usart_lin_set_tx_identifier:
 2575              	.LFB156:
 984:../../../platform/sam/drivers/usart/usart.c **** 
 985:../../../platform/sam/drivers/usart/usart.c **** /**
 986:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure the LIN identifier when USART works in LIN master mode.
 987:../../../platform/sam/drivers/usart/usart.c ****  *
 988:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
 989:../../../platform/sam/drivers/usart/usart.c ****  * \param uc_id The identifier to be transmitted.
 990:../../../platform/sam/drivers/usart/usart.c ****  */
 991:../../../platform/sam/drivers/usart/usart.c **** void usart_lin_set_tx_identifier(Usart *p_usart, uint8_t uc_id)
 992:../../../platform/sam/drivers/usart/usart.c **** {
 2576              	 .loc 1 992 0
 2577              	 .cfi_startproc
 2578              	 
 2579              	 
 2580              	 
 2581 09ec 80B4     	 push {r7}
 2582              	.LCFI191:
 2583              	 .cfi_def_cfa_offset 4
 2584              	 .cfi_offset 7,-4
 2585 09ee 83B0     	 sub sp,sp,#12
 2586              	.LCFI192:
 2587              	 .cfi_def_cfa_offset 16
 2588 09f0 00AF     	 add r7,sp,#0
 2589              	.LCFI193:
 2590              	 .cfi_def_cfa_register 7
 2591 09f2 7860     	 str r0,[r7,#4]
 2592 09f4 0B46     	 mov r3,r1
 2593 09f6 FB70     	 strb r3,[r7,#3]
 993:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINIR = (p_usart->US_LINIR & ~US_LINIR_IDCHR_Msk) |
 2594              	 .loc 1 993 0
 2595 09f8 7B68     	 ldr r3,[r7,#4]
 2596 09fa 9B6D     	 ldr r3,[r3,#88]
 2597 09fc 23F0FF02 	 bic r2,r3,#255
 994:../../../platform/sam/drivers/usart/usart.c **** 			US_LINIR_IDCHR(uc_id);
 2598              	 .loc 1 994 0
 2599 0a00 FB78     	 ldrb r3,[r7,#3]
 993:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_LINIR = (p_usart->US_LINIR & ~US_LINIR_IDCHR_Msk) |
 2600              	 .loc 1 993 0
 2601 0a02 1A43     	 orrs r2,r2,r3
 2602 0a04 7B68     	 ldr r3,[r7,#4]
 2603 0a06 9A65     	 str r2,[r3,#88]
 995:../../../platform/sam/drivers/usart/usart.c **** }
 2604              	 .loc 1 995 0
 2605 0a08 00BF     	 nop
 2606 0a0a 0C37     	 adds r7,r7,#12
 2607              	.LCFI194:
 2608              	 .cfi_def_cfa_offset 4
 2609 0a0c BD46     	 mov sp,r7
 2610              	.LCFI195:
 2611              	 .cfi_def_cfa_register 13
 2612              	 
 2613 0a0e 80BC     	 pop {r7}
 2614              	.LCFI196:
 2615              	 .cfi_restore 7
 2616              	 .cfi_def_cfa_offset 0
 2617 0a10 7047     	 bx lr
 2618              	 .cfi_endproc
 2619              	.LFE156:
 2621              	 .align 1
 2622              	 .global usart_lin_read_identifier
 2623              	 .syntax unified
 2624              	 .thumb
 2625              	 .thumb_func
 2626              	 .fpu softvfp
 2628              	usart_lin_read_identifier:
 2629              	.LFB157:
 996:../../../platform/sam/drivers/usart/usart.c **** 
 997:../../../platform/sam/drivers/usart/usart.c **** /**
 998:../../../platform/sam/drivers/usart/usart.c ****  * \brief Read the identifier when USART works in LIN mode.
 999:../../../platform/sam/drivers/usart/usart.c ****  *
1000:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1001:../../../platform/sam/drivers/usart/usart.c ****  *
1002:../../../platform/sam/drivers/usart/usart.c ****  * \return The last identifier received in LIN slave mode or the last
1003:../../../platform/sam/drivers/usart/usart.c ****  * identifier transmitted in LIN master mode.
1004:../../../platform/sam/drivers/usart/usart.c ****  */
1005:../../../platform/sam/drivers/usart/usart.c **** uint8_t usart_lin_read_identifier(Usart *p_usart)
1006:../../../platform/sam/drivers/usart/usart.c **** {
 2630              	 .loc 1 1006 0
 2631              	 .cfi_startproc
 2632              	 
 2633              	 
 2634              	 
 2635 0a12 80B4     	 push {r7}
 2636              	.LCFI197:
 2637              	 .cfi_def_cfa_offset 4
 2638              	 .cfi_offset 7,-4
 2639 0a14 83B0     	 sub sp,sp,#12
 2640              	.LCFI198:
 2641              	 .cfi_def_cfa_offset 16
 2642 0a16 00AF     	 add r7,sp,#0
 2643              	.LCFI199:
 2644              	 .cfi_def_cfa_register 7
 2645 0a18 7860     	 str r0,[r7,#4]
1007:../../../platform/sam/drivers/usart/usart.c **** 	return (p_usart->US_LINIR & US_LINIR_IDCHR_Msk);
 2646              	 .loc 1 1007 0
 2647 0a1a 7B68     	 ldr r3,[r7,#4]
 2648 0a1c 9B6D     	 ldr r3,[r3,#88]
 2649 0a1e DBB2     	 uxtb r3,r3
1008:../../../platform/sam/drivers/usart/usart.c **** }
 2650              	 .loc 1 1008 0
 2651 0a20 1846     	 mov r0,r3
 2652 0a22 0C37     	 adds r7,r7,#12
 2653              	.LCFI200:
 2654              	 .cfi_def_cfa_offset 4
 2655 0a24 BD46     	 mov sp,r7
 2656              	.LCFI201:
 2657              	 .cfi_def_cfa_register 13
 2658              	 
 2659 0a26 80BC     	 pop {r7}
 2660              	.LCFI202:
 2661              	 .cfi_restore 7
 2662              	 .cfi_def_cfa_offset 0
 2663 0a28 7047     	 bx lr
 2664              	 .cfi_endproc
 2665              	.LFE157:
 2667              	 .align 1
 2668              	 .global usart_lin_get_data_length
 2669              	 .syntax unified
 2670              	 .thumb
 2671              	 .thumb_func
 2672              	 .fpu softvfp
 2674              	usart_lin_get_data_length:
 2675              	.LFB158:
1009:../../../platform/sam/drivers/usart/usart.c **** 
1010:../../../platform/sam/drivers/usart/usart.c **** /**
1011:../../../platform/sam/drivers/usart/usart.c ****  * \brief Get data length.
1012:../../../platform/sam/drivers/usart/usart.c ****  *
1013:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1014:../../../platform/sam/drivers/usart/usart.c ****  *
1015:../../../platform/sam/drivers/usart/usart.c ****  * \return Data length.
1016:../../../platform/sam/drivers/usart/usart.c ****  */
1017:../../../platform/sam/drivers/usart/usart.c **** uint8_t usart_lin_get_data_length(Usart *usart)
1018:../../../platform/sam/drivers/usart/usart.c **** {
 2676              	 .loc 1 1018 0
 2677              	 .cfi_startproc
 2678              	 
 2679              	 
 2680              	 
 2681 0a2a 80B4     	 push {r7}
 2682              	.LCFI203:
 2683              	 .cfi_def_cfa_offset 4
 2684              	 .cfi_offset 7,-4
 2685 0a2c 85B0     	 sub sp,sp,#20
 2686              	.LCFI204:
 2687              	 .cfi_def_cfa_offset 24
 2688 0a2e 00AF     	 add r7,sp,#0
 2689              	.LCFI205:
 2690              	 .cfi_def_cfa_register 7
 2691 0a30 7860     	 str r0,[r7,#4]
1019:../../../platform/sam/drivers/usart/usart.c **** 	if (usart->US_LINMR & US_LINMR_DLM) {
 2692              	 .loc 1 1019 0
 2693 0a32 7B68     	 ldr r3,[r7,#4]
 2694 0a34 5B6D     	 ldr r3,[r3,#84]
 2695 0a36 03F02003 	 and r3,r3,#32
 2696 0a3a 002B     	 cmp r3,#0
 2697 0a3c 0AD0     	 beq .L123
 2698              	.LBB2:
1020:../../../platform/sam/drivers/usart/usart.c **** 		uint8_t data_length = 1 << ((usart->US_LINIR >>
 2699              	 .loc 1 1020 0
 2700 0a3e 7B68     	 ldr r3,[r7,#4]
 2701 0a40 9B6D     	 ldr r3,[r3,#88]
 2702 0a42 1B09     	 lsrs r3,r3,#4
1021:../../../platform/sam/drivers/usart/usart.c **** 				(US_LINIR_IDCHR_Pos + 4)) & 0x03);
 2703              	 .loc 1 1021 0
 2704 0a44 03F00303 	 and r3,r3,#3
1020:../../../platform/sam/drivers/usart/usart.c **** 		uint8_t data_length = 1 << ((usart->US_LINIR >>
 2705              	 .loc 1 1020 0
 2706 0a48 0122     	 movs r2,#1
 2707 0a4a 02FA03F3 	 lsl r3,r2,r3
 2708 0a4e FB73     	 strb r3,[r7,#15]
1022:../../../platform/sam/drivers/usart/usart.c **** 		return data_length;
 2709              	 .loc 1 1022 0
 2710 0a50 FB7B     	 ldrb r3,[r7,#15]
 2711 0a52 05E0     	 b .L124
 2712              	.L123:
 2713              	.LBE2:
1023:../../../platform/sam/drivers/usart/usart.c **** 	} else {
1024:../../../platform/sam/drivers/usart/usart.c **** 		return ((usart->US_LINMR & US_LINMR_DLC_Msk) >> US_LINMR_DLC_Pos) + 1;
 2714              	 .loc 1 1024 0
 2715 0a54 7B68     	 ldr r3,[r7,#4]
 2716 0a56 5B6D     	 ldr r3,[r3,#84]
 2717 0a58 1B0A     	 lsrs r3,r3,#8
 2718 0a5a DBB2     	 uxtb r3,r3
 2719 0a5c 0133     	 adds r3,r3,#1
 2720 0a5e DBB2     	 uxtb r3,r3
 2721              	.L124:
1025:../../../platform/sam/drivers/usart/usart.c **** 	}
1026:../../../platform/sam/drivers/usart/usart.c **** }
 2722              	 .loc 1 1026 0
 2723 0a60 1846     	 mov r0,r3
 2724 0a62 1437     	 adds r7,r7,#20
 2725              	.LCFI206:
 2726              	 .cfi_def_cfa_offset 4
 2727 0a64 BD46     	 mov sp,r7
 2728              	.LCFI207:
 2729              	 .cfi_def_cfa_register 13
 2730              	 
 2731 0a66 80BC     	 pop {r7}
 2732              	.LCFI208:
 2733              	 .cfi_restore 7
 2734              	 .cfi_def_cfa_offset 0
 2735 0a68 7047     	 bx lr
 2736              	 .cfi_endproc
 2737              	.LFE158:
 2739              	 .align 1
 2740              	 .global usart_enable_tx
 2741              	 .syntax unified
 2742              	 .thumb
 2743              	 .thumb_func
 2744              	 .fpu softvfp
 2746              	usart_enable_tx:
 2747              	.LFB159:
1027:../../../platform/sam/drivers/usart/usart.c **** 
1028:../../../platform/sam/drivers/usart/usart.c **** #endif
1029:../../../platform/sam/drivers/usart/usart.c **** 
1030:../../../platform/sam/drivers/usart/usart.c **** /**
1031:../../../platform/sam/drivers/usart/usart.c ****  * \brief Enable USART transmitter.
1032:../../../platform/sam/drivers/usart/usart.c ****  *
1033:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1034:../../../platform/sam/drivers/usart/usart.c ****  */
1035:../../../platform/sam/drivers/usart/usart.c **** void usart_enable_tx(Usart *p_usart)
1036:../../../platform/sam/drivers/usart/usart.c **** {
 2748              	 .loc 1 1036 0
 2749              	 .cfi_startproc
 2750              	 
 2751              	 
 2752              	 
 2753 0a6a 80B4     	 push {r7}
 2754              	.LCFI209:
 2755              	 .cfi_def_cfa_offset 4
 2756              	 .cfi_offset 7,-4
 2757 0a6c 83B0     	 sub sp,sp,#12
 2758              	.LCFI210:
 2759              	 .cfi_def_cfa_offset 16
 2760 0a6e 00AF     	 add r7,sp,#0
 2761              	.LCFI211:
 2762              	 .cfi_def_cfa_register 7
 2763 0a70 7860     	 str r0,[r7,#4]
1037:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_TXEN;
 2764              	 .loc 1 1037 0
 2765 0a72 7B68     	 ldr r3,[r7,#4]
 2766 0a74 4022     	 movs r2,#64
 2767 0a76 1A60     	 str r2,[r3]
1038:../../../platform/sam/drivers/usart/usart.c **** }
 2768              	 .loc 1 1038 0
 2769 0a78 00BF     	 nop
 2770 0a7a 0C37     	 adds r7,r7,#12
 2771              	.LCFI212:
 2772              	 .cfi_def_cfa_offset 4
 2773 0a7c BD46     	 mov sp,r7
 2774              	.LCFI213:
 2775              	 .cfi_def_cfa_register 13
 2776              	 
 2777 0a7e 80BC     	 pop {r7}
 2778              	.LCFI214:
 2779              	 .cfi_restore 7
 2780              	 .cfi_def_cfa_offset 0
 2781 0a80 7047     	 bx lr
 2782              	 .cfi_endproc
 2783              	.LFE159:
 2785              	 .align 1
 2786              	 .global usart_disable_tx
 2787              	 .syntax unified
 2788              	 .thumb
 2789              	 .thumb_func
 2790              	 .fpu softvfp
 2792              	usart_disable_tx:
 2793              	.LFB160:
1039:../../../platform/sam/drivers/usart/usart.c **** 
1040:../../../platform/sam/drivers/usart/usart.c **** /**
1041:../../../platform/sam/drivers/usart/usart.c ****  * \brief Disable USART transmitter.
1042:../../../platform/sam/drivers/usart/usart.c ****  *
1043:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1044:../../../platform/sam/drivers/usart/usart.c ****  */
1045:../../../platform/sam/drivers/usart/usart.c **** void usart_disable_tx(Usart *p_usart)
1046:../../../platform/sam/drivers/usart/usart.c **** {
 2794              	 .loc 1 1046 0
 2795              	 .cfi_startproc
 2796              	 
 2797              	 
 2798              	 
 2799 0a82 80B4     	 push {r7}
 2800              	.LCFI215:
 2801              	 .cfi_def_cfa_offset 4
 2802              	 .cfi_offset 7,-4
 2803 0a84 83B0     	 sub sp,sp,#12
 2804              	.LCFI216:
 2805              	 .cfi_def_cfa_offset 16
 2806 0a86 00AF     	 add r7,sp,#0
 2807              	.LCFI217:
 2808              	 .cfi_def_cfa_register 7
 2809 0a88 7860     	 str r0,[r7,#4]
1047:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_TXDIS;
 2810              	 .loc 1 1047 0
 2811 0a8a 7B68     	 ldr r3,[r7,#4]
 2812 0a8c 8022     	 movs r2,#128
 2813 0a8e 1A60     	 str r2,[r3]
1048:../../../platform/sam/drivers/usart/usart.c **** }
 2814              	 .loc 1 1048 0
 2815 0a90 00BF     	 nop
 2816 0a92 0C37     	 adds r7,r7,#12
 2817              	.LCFI218:
 2818              	 .cfi_def_cfa_offset 4
 2819 0a94 BD46     	 mov sp,r7
 2820              	.LCFI219:
 2821              	 .cfi_def_cfa_register 13
 2822              	 
 2823 0a96 80BC     	 pop {r7}
 2824              	.LCFI220:
 2825              	 .cfi_restore 7
 2826              	 .cfi_def_cfa_offset 0
 2827 0a98 7047     	 bx lr
 2828              	 .cfi_endproc
 2829              	.LFE160:
 2831              	 .align 1
 2832              	 .global usart_reset_tx
 2833              	 .syntax unified
 2834              	 .thumb
 2835              	 .thumb_func
 2836              	 .fpu softvfp
 2838              	usart_reset_tx:
 2839              	.LFB161:
1049:../../../platform/sam/drivers/usart/usart.c **** 
1050:../../../platform/sam/drivers/usart/usart.c **** /**
1051:../../../platform/sam/drivers/usart/usart.c ****  * \brief Immediately stop and disable USART transmitter.
1052:../../../platform/sam/drivers/usart/usart.c ****  *
1053:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1054:../../../platform/sam/drivers/usart/usart.c ****  */
1055:../../../platform/sam/drivers/usart/usart.c **** void usart_reset_tx(Usart *p_usart)
1056:../../../platform/sam/drivers/usart/usart.c **** {
 2840              	 .loc 1 1056 0
 2841              	 .cfi_startproc
 2842              	 
 2843              	 
 2844              	 
 2845 0a9a 80B4     	 push {r7}
 2846              	.LCFI221:
 2847              	 .cfi_def_cfa_offset 4
 2848              	 .cfi_offset 7,-4
 2849 0a9c 83B0     	 sub sp,sp,#12
 2850              	.LCFI222:
 2851              	 .cfi_def_cfa_offset 16
 2852 0a9e 00AF     	 add r7,sp,#0
 2853              	.LCFI223:
 2854              	 .cfi_def_cfa_register 7
 2855 0aa0 7860     	 str r0,[r7,#4]
1057:../../../platform/sam/drivers/usart/usart.c **** 	/* Reset transmitter */
1058:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
 2856              	 .loc 1 1058 0
 2857 0aa2 7B68     	 ldr r3,[r7,#4]
 2858 0aa4 8822     	 movs r2,#136
 2859 0aa6 1A60     	 str r2,[r3]
1059:../../../platform/sam/drivers/usart/usart.c **** }
 2860              	 .loc 1 1059 0
 2861 0aa8 00BF     	 nop
 2862 0aaa 0C37     	 adds r7,r7,#12
 2863              	.LCFI224:
 2864              	 .cfi_def_cfa_offset 4
 2865 0aac BD46     	 mov sp,r7
 2866              	.LCFI225:
 2867              	 .cfi_def_cfa_register 13
 2868              	 
 2869 0aae 80BC     	 pop {r7}
 2870              	.LCFI226:
 2871              	 .cfi_restore 7
 2872              	 .cfi_def_cfa_offset 0
 2873 0ab0 7047     	 bx lr
 2874              	 .cfi_endproc
 2875              	.LFE161:
 2877              	 .align 1
 2878              	 .global usart_set_tx_timeguard
 2879              	 .syntax unified
 2880              	 .thumb
 2881              	 .thumb_func
 2882              	 .fpu softvfp
 2884              	usart_set_tx_timeguard:
 2885              	.LFB162:
1060:../../../platform/sam/drivers/usart/usart.c **** 
1061:../../../platform/sam/drivers/usart/usart.c **** /**
1062:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure the transmit timeguard register.
1063:../../../platform/sam/drivers/usart/usart.c ****  *
1064:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1065:../../../platform/sam/drivers/usart/usart.c ****  * \param timeguard The value of transmit timeguard.
1066:../../../platform/sam/drivers/usart/usart.c ****  */
1067:../../../platform/sam/drivers/usart/usart.c **** void usart_set_tx_timeguard(Usart *p_usart, uint32_t timeguard)
1068:../../../platform/sam/drivers/usart/usart.c **** {
 2886              	 .loc 1 1068 0
 2887              	 .cfi_startproc
 2888              	 
 2889              	 
 2890              	 
 2891 0ab2 80B4     	 push {r7}
 2892              	.LCFI227:
 2893              	 .cfi_def_cfa_offset 4
 2894              	 .cfi_offset 7,-4
 2895 0ab4 83B0     	 sub sp,sp,#12
 2896              	.LCFI228:
 2897              	 .cfi_def_cfa_offset 16
 2898 0ab6 00AF     	 add r7,sp,#0
 2899              	.LCFI229:
 2900              	 .cfi_def_cfa_register 7
 2901 0ab8 7860     	 str r0,[r7,#4]
 2902 0aba 3960     	 str r1,[r7]
1069:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_TTGR = timeguard;
 2903              	 .loc 1 1069 0
 2904 0abc 7B68     	 ldr r3,[r7,#4]
 2905 0abe 3A68     	 ldr r2,[r7]
 2906 0ac0 9A62     	 str r2,[r3,#40]
1070:../../../platform/sam/drivers/usart/usart.c **** }
 2907              	 .loc 1 1070 0
 2908 0ac2 00BF     	 nop
 2909 0ac4 0C37     	 adds r7,r7,#12
 2910              	.LCFI230:
 2911              	 .cfi_def_cfa_offset 4
 2912 0ac6 BD46     	 mov sp,r7
 2913              	.LCFI231:
 2914              	 .cfi_def_cfa_register 13
 2915              	 
 2916 0ac8 80BC     	 pop {r7}
 2917              	.LCFI232:
 2918              	 .cfi_restore 7
 2919              	 .cfi_def_cfa_offset 0
 2920 0aca 7047     	 bx lr
 2921              	 .cfi_endproc
 2922              	.LFE162:
 2924              	 .align 1
 2925              	 .global usart_enable_rx
 2926              	 .syntax unified
 2927              	 .thumb
 2928              	 .thumb_func
 2929              	 .fpu softvfp
 2931              	usart_enable_rx:
 2932              	.LFB163:
1071:../../../platform/sam/drivers/usart/usart.c **** 
1072:../../../platform/sam/drivers/usart/usart.c **** /**
1073:../../../platform/sam/drivers/usart/usart.c ****  * \brief Enable USART receiver.
1074:../../../platform/sam/drivers/usart/usart.c ****  *
1075:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1076:../../../platform/sam/drivers/usart/usart.c ****  */
1077:../../../platform/sam/drivers/usart/usart.c **** void usart_enable_rx(Usart *p_usart)
1078:../../../platform/sam/drivers/usart/usart.c **** {
 2933              	 .loc 1 1078 0
 2934              	 .cfi_startproc
 2935              	 
 2936              	 
 2937              	 
 2938 0acc 80B4     	 push {r7}
 2939              	.LCFI233:
 2940              	 .cfi_def_cfa_offset 4
 2941              	 .cfi_offset 7,-4
 2942 0ace 83B0     	 sub sp,sp,#12
 2943              	.LCFI234:
 2944              	 .cfi_def_cfa_offset 16
 2945 0ad0 00AF     	 add r7,sp,#0
 2946              	.LCFI235:
 2947              	 .cfi_def_cfa_register 7
 2948 0ad2 7860     	 str r0,[r7,#4]
1079:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_RXEN;
 2949              	 .loc 1 1079 0
 2950 0ad4 7B68     	 ldr r3,[r7,#4]
 2951 0ad6 1022     	 movs r2,#16
 2952 0ad8 1A60     	 str r2,[r3]
1080:../../../platform/sam/drivers/usart/usart.c **** }
 2953              	 .loc 1 1080 0
 2954 0ada 00BF     	 nop
 2955 0adc 0C37     	 adds r7,r7,#12
 2956              	.LCFI236:
 2957              	 .cfi_def_cfa_offset 4
 2958 0ade BD46     	 mov sp,r7
 2959              	.LCFI237:
 2960              	 .cfi_def_cfa_register 13
 2961              	 
 2962 0ae0 80BC     	 pop {r7}
 2963              	.LCFI238:
 2964              	 .cfi_restore 7
 2965              	 .cfi_def_cfa_offset 0
 2966 0ae2 7047     	 bx lr
 2967              	 .cfi_endproc
 2968              	.LFE163:
 2970              	 .align 1
 2971              	 .global usart_disable_rx
 2972              	 .syntax unified
 2973              	 .thumb
 2974              	 .thumb_func
 2975              	 .fpu softvfp
 2977              	usart_disable_rx:
 2978              	.LFB164:
1081:../../../platform/sam/drivers/usart/usart.c **** 
1082:../../../platform/sam/drivers/usart/usart.c **** /**
1083:../../../platform/sam/drivers/usart/usart.c ****  * \brief Disable USART receiver.
1084:../../../platform/sam/drivers/usart/usart.c ****  *
1085:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1086:../../../platform/sam/drivers/usart/usart.c ****  */
1087:../../../platform/sam/drivers/usart/usart.c **** void usart_disable_rx(Usart *p_usart)
1088:../../../platform/sam/drivers/usart/usart.c **** {
 2979              	 .loc 1 1088 0
 2980              	 .cfi_startproc
 2981              	 
 2982              	 
 2983              	 
 2984 0ae4 80B4     	 push {r7}
 2985              	.LCFI239:
 2986              	 .cfi_def_cfa_offset 4
 2987              	 .cfi_offset 7,-4
 2988 0ae6 83B0     	 sub sp,sp,#12
 2989              	.LCFI240:
 2990              	 .cfi_def_cfa_offset 16
 2991 0ae8 00AF     	 add r7,sp,#0
 2992              	.LCFI241:
 2993              	 .cfi_def_cfa_register 7
 2994 0aea 7860     	 str r0,[r7,#4]
1089:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_RXDIS;
 2995              	 .loc 1 1089 0
 2996 0aec 7B68     	 ldr r3,[r7,#4]
 2997 0aee 2022     	 movs r2,#32
 2998 0af0 1A60     	 str r2,[r3]
1090:../../../platform/sam/drivers/usart/usart.c **** }
 2999              	 .loc 1 1090 0
 3000 0af2 00BF     	 nop
 3001 0af4 0C37     	 adds r7,r7,#12
 3002              	.LCFI242:
 3003              	 .cfi_def_cfa_offset 4
 3004 0af6 BD46     	 mov sp,r7
 3005              	.LCFI243:
 3006              	 .cfi_def_cfa_register 13
 3007              	 
 3008 0af8 80BC     	 pop {r7}
 3009              	.LCFI244:
 3010              	 .cfi_restore 7
 3011              	 .cfi_def_cfa_offset 0
 3012 0afa 7047     	 bx lr
 3013              	 .cfi_endproc
 3014              	.LFE164:
 3016              	 .align 1
 3017              	 .global usart_reset_rx
 3018              	 .syntax unified
 3019              	 .thumb
 3020              	 .thumb_func
 3021              	 .fpu softvfp
 3023              	usart_reset_rx:
 3024              	.LFB165:
1091:../../../platform/sam/drivers/usart/usart.c **** 
1092:../../../platform/sam/drivers/usart/usart.c **** /**
1093:../../../platform/sam/drivers/usart/usart.c ****  * \brief Immediately stop and disable USART receiver.
1094:../../../platform/sam/drivers/usart/usart.c ****  *
1095:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1096:../../../platform/sam/drivers/usart/usart.c ****  */
1097:../../../platform/sam/drivers/usart/usart.c **** void usart_reset_rx(Usart *p_usart)
1098:../../../platform/sam/drivers/usart/usart.c **** {
 3025              	 .loc 1 1098 0
 3026              	 .cfi_startproc
 3027              	 
 3028              	 
 3029              	 
 3030 0afc 80B4     	 push {r7}
 3031              	.LCFI245:
 3032              	 .cfi_def_cfa_offset 4
 3033              	 .cfi_offset 7,-4
 3034 0afe 83B0     	 sub sp,sp,#12
 3035              	.LCFI246:
 3036              	 .cfi_def_cfa_offset 16
 3037 0b00 00AF     	 add r7,sp,#0
 3038              	.LCFI247:
 3039              	 .cfi_def_cfa_register 7
 3040 0b02 7860     	 str r0,[r7,#4]
1099:../../../platform/sam/drivers/usart/usart.c **** 	/* Reset Receiver */
1100:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
 3041              	 .loc 1 1100 0
 3042 0b04 7B68     	 ldr r3,[r7,#4]
 3043 0b06 2422     	 movs r2,#36
 3044 0b08 1A60     	 str r2,[r3]
1101:../../../platform/sam/drivers/usart/usart.c **** }
 3045              	 .loc 1 1101 0
 3046 0b0a 00BF     	 nop
 3047 0b0c 0C37     	 adds r7,r7,#12
 3048              	.LCFI248:
 3049              	 .cfi_def_cfa_offset 4
 3050 0b0e BD46     	 mov sp,r7
 3051              	.LCFI249:
 3052              	 .cfi_def_cfa_register 13
 3053              	 
 3054 0b10 80BC     	 pop {r7}
 3055              	.LCFI250:
 3056              	 .cfi_restore 7
 3057              	 .cfi_def_cfa_offset 0
 3058 0b12 7047     	 bx lr
 3059              	 .cfi_endproc
 3060              	.LFE165:
 3062              	 .align 1
 3063              	 .global usart_set_rx_timeout
 3064              	 .syntax unified
 3065              	 .thumb
 3066              	 .thumb_func
 3067              	 .fpu softvfp
 3069              	usart_set_rx_timeout:
 3070              	.LFB166:
1102:../../../platform/sam/drivers/usart/usart.c **** 
1103:../../../platform/sam/drivers/usart/usart.c **** /**
1104:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure the receive timeout register.
1105:../../../platform/sam/drivers/usart/usart.c ****  *
1106:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1107:../../../platform/sam/drivers/usart/usart.c ****  * \param timeout The value of receive timeout.
1108:../../../platform/sam/drivers/usart/usart.c ****  */
1109:../../../platform/sam/drivers/usart/usart.c **** void usart_set_rx_timeout(Usart *p_usart, uint32_t timeout)
1110:../../../platform/sam/drivers/usart/usart.c **** {
 3071              	 .loc 1 1110 0
 3072              	 .cfi_startproc
 3073              	 
 3074              	 
 3075              	 
 3076 0b14 80B4     	 push {r7}
 3077              	.LCFI251:
 3078              	 .cfi_def_cfa_offset 4
 3079              	 .cfi_offset 7,-4
 3080 0b16 83B0     	 sub sp,sp,#12
 3081              	.LCFI252:
 3082              	 .cfi_def_cfa_offset 16
 3083 0b18 00AF     	 add r7,sp,#0
 3084              	.LCFI253:
 3085              	 .cfi_def_cfa_register 7
 3086 0b1a 7860     	 str r0,[r7,#4]
 3087 0b1c 3960     	 str r1,[r7]
1111:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_RTOR = timeout;
 3088              	 .loc 1 1111 0
 3089 0b1e 7B68     	 ldr r3,[r7,#4]
 3090 0b20 3A68     	 ldr r2,[r7]
 3091 0b22 5A62     	 str r2,[r3,#36]
1112:../../../platform/sam/drivers/usart/usart.c **** }
 3092              	 .loc 1 1112 0
 3093 0b24 00BF     	 nop
 3094 0b26 0C37     	 adds r7,r7,#12
 3095              	.LCFI254:
 3096              	 .cfi_def_cfa_offset 4
 3097 0b28 BD46     	 mov sp,r7
 3098              	.LCFI255:
 3099              	 .cfi_def_cfa_register 13
 3100              	 
 3101 0b2a 80BC     	 pop {r7}
 3102              	.LCFI256:
 3103              	 .cfi_restore 7
 3104              	 .cfi_def_cfa_offset 0
 3105 0b2c 7047     	 bx lr
 3106              	 .cfi_endproc
 3107              	.LFE166:
 3109              	 .align 1
 3110              	 .global usart_enable_interrupt
 3111              	 .syntax unified
 3112              	 .thumb
 3113              	 .thumb_func
 3114              	 .fpu softvfp
 3116              	usart_enable_interrupt:
 3117              	.LFB167:
1113:../../../platform/sam/drivers/usart/usart.c **** 
1114:../../../platform/sam/drivers/usart/usart.c **** /**
1115:../../../platform/sam/drivers/usart/usart.c ****  * \brief Enable USART interrupts.
1116:../../../platform/sam/drivers/usart/usart.c ****  *
1117:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART peripheral.
1118:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_sources Interrupt sources bit map.
1119:../../../platform/sam/drivers/usart/usart.c ****  */
1120:../../../platform/sam/drivers/usart/usart.c **** void usart_enable_interrupt(Usart *p_usart, uint32_t ul_sources)
1121:../../../platform/sam/drivers/usart/usart.c **** {
 3118              	 .loc 1 1121 0
 3119              	 .cfi_startproc
 3120              	 
 3121              	 
 3122              	 
 3123 0b2e 80B4     	 push {r7}
 3124              	.LCFI257:
 3125              	 .cfi_def_cfa_offset 4
 3126              	 .cfi_offset 7,-4
 3127 0b30 83B0     	 sub sp,sp,#12
 3128              	.LCFI258:
 3129              	 .cfi_def_cfa_offset 16
 3130 0b32 00AF     	 add r7,sp,#0
 3131              	.LCFI259:
 3132              	 .cfi_def_cfa_register 7
 3133 0b34 7860     	 str r0,[r7,#4]
 3134 0b36 3960     	 str r1,[r7]
1122:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_IER = ul_sources;
 3135              	 .loc 1 1122 0
 3136 0b38 7B68     	 ldr r3,[r7,#4]
 3137 0b3a 3A68     	 ldr r2,[r7]
 3138 0b3c 9A60     	 str r2,[r3,#8]
1123:../../../platform/sam/drivers/usart/usart.c **** }
 3139              	 .loc 1 1123 0
 3140 0b3e 00BF     	 nop
 3141 0b40 0C37     	 adds r7,r7,#12
 3142              	.LCFI260:
 3143              	 .cfi_def_cfa_offset 4
 3144 0b42 BD46     	 mov sp,r7
 3145              	.LCFI261:
 3146              	 .cfi_def_cfa_register 13
 3147              	 
 3148 0b44 80BC     	 pop {r7}
 3149              	.LCFI262:
 3150              	 .cfi_restore 7
 3151              	 .cfi_def_cfa_offset 0
 3152 0b46 7047     	 bx lr
 3153              	 .cfi_endproc
 3154              	.LFE167:
 3156              	 .align 1
 3157              	 .global usart_disable_interrupt
 3158              	 .syntax unified
 3159              	 .thumb
 3160              	 .thumb_func
 3161              	 .fpu softvfp
 3163              	usart_disable_interrupt:
 3164              	.LFB168:
1124:../../../platform/sam/drivers/usart/usart.c **** 
1125:../../../platform/sam/drivers/usart/usart.c **** /**
1126:../../../platform/sam/drivers/usart/usart.c ****  * \brief Disable USART interrupts.
1127:../../../platform/sam/drivers/usart/usart.c ****  *
1128:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART peripheral.
1129:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_sources Interrupt sources bit map.
1130:../../../platform/sam/drivers/usart/usart.c ****  */
1131:../../../platform/sam/drivers/usart/usart.c **** void usart_disable_interrupt(Usart *p_usart, uint32_t ul_sources)
1132:../../../platform/sam/drivers/usart/usart.c **** {
 3165              	 .loc 1 1132 0
 3166              	 .cfi_startproc
 3167              	 
 3168              	 
 3169              	 
 3170 0b48 80B4     	 push {r7}
 3171              	.LCFI263:
 3172              	 .cfi_def_cfa_offset 4
 3173              	 .cfi_offset 7,-4
 3174 0b4a 83B0     	 sub sp,sp,#12
 3175              	.LCFI264:
 3176              	 .cfi_def_cfa_offset 16
 3177 0b4c 00AF     	 add r7,sp,#0
 3178              	.LCFI265:
 3179              	 .cfi_def_cfa_register 7
 3180 0b4e 7860     	 str r0,[r7,#4]
 3181 0b50 3960     	 str r1,[r7]
1133:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_IDR = ul_sources;
 3182              	 .loc 1 1133 0
 3183 0b52 7B68     	 ldr r3,[r7,#4]
 3184 0b54 3A68     	 ldr r2,[r7]
 3185 0b56 DA60     	 str r2,[r3,#12]
1134:../../../platform/sam/drivers/usart/usart.c **** }
 3186              	 .loc 1 1134 0
 3187 0b58 00BF     	 nop
 3188 0b5a 0C37     	 adds r7,r7,#12
 3189              	.LCFI266:
 3190              	 .cfi_def_cfa_offset 4
 3191 0b5c BD46     	 mov sp,r7
 3192              	.LCFI267:
 3193              	 .cfi_def_cfa_register 13
 3194              	 
 3195 0b5e 80BC     	 pop {r7}
 3196              	.LCFI268:
 3197              	 .cfi_restore 7
 3198              	 .cfi_def_cfa_offset 0
 3199 0b60 7047     	 bx lr
 3200              	 .cfi_endproc
 3201              	.LFE168:
 3203              	 .align 1
 3204              	 .global usart_get_interrupt_mask
 3205              	 .syntax unified
 3206              	 .thumb
 3207              	 .thumb_func
 3208              	 .fpu softvfp
 3210              	usart_get_interrupt_mask:
 3211              	.LFB169:
1135:../../../platform/sam/drivers/usart/usart.c **** 
1136:../../../platform/sam/drivers/usart/usart.c **** /**
1137:../../../platform/sam/drivers/usart/usart.c ****  * \brief Read USART interrupt mask.
1138:../../../platform/sam/drivers/usart/usart.c ****  *
1139:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART peripheral.
1140:../../../platform/sam/drivers/usart/usart.c ****  *
1141:../../../platform/sam/drivers/usart/usart.c ****  * \return The interrupt mask value.
1142:../../../platform/sam/drivers/usart/usart.c ****  */
1143:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_get_interrupt_mask(Usart *p_usart)
1144:../../../platform/sam/drivers/usart/usart.c **** {
 3212              	 .loc 1 1144 0
 3213              	 .cfi_startproc
 3214              	 
 3215              	 
 3216              	 
 3217 0b62 80B4     	 push {r7}
 3218              	.LCFI269:
 3219              	 .cfi_def_cfa_offset 4
 3220              	 .cfi_offset 7,-4
 3221 0b64 83B0     	 sub sp,sp,#12
 3222              	.LCFI270:
 3223              	 .cfi_def_cfa_offset 16
 3224 0b66 00AF     	 add r7,sp,#0
 3225              	.LCFI271:
 3226              	 .cfi_def_cfa_register 7
 3227 0b68 7860     	 str r0,[r7,#4]
1145:../../../platform/sam/drivers/usart/usart.c **** 	return p_usart->US_IMR;
 3228              	 .loc 1 1145 0
 3229 0b6a 7B68     	 ldr r3,[r7,#4]
 3230 0b6c 1B69     	 ldr r3,[r3,#16]
1146:../../../platform/sam/drivers/usart/usart.c **** }
 3231              	 .loc 1 1146 0
 3232 0b6e 1846     	 mov r0,r3
 3233 0b70 0C37     	 adds r7,r7,#12
 3234              	.LCFI272:
 3235              	 .cfi_def_cfa_offset 4
 3236 0b72 BD46     	 mov sp,r7
 3237              	.LCFI273:
 3238              	 .cfi_def_cfa_register 13
 3239              	 
 3240 0b74 80BC     	 pop {r7}
 3241              	.LCFI274:
 3242              	 .cfi_restore 7
 3243              	 .cfi_def_cfa_offset 0
 3244 0b76 7047     	 bx lr
 3245              	 .cfi_endproc
 3246              	.LFE169:
 3248              	 .align 1
 3249              	 .global usart_get_status
 3250              	 .syntax unified
 3251              	 .thumb
 3252              	 .thumb_func
 3253              	 .fpu softvfp
 3255              	usart_get_status:
 3256              	.LFB170:
1147:../../../platform/sam/drivers/usart/usart.c **** 
1148:../../../platform/sam/drivers/usart/usart.c **** /**
1149:../../../platform/sam/drivers/usart/usart.c ****  * \brief Get current status.
1150:../../../platform/sam/drivers/usart/usart.c ****  *
1151:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1152:../../../platform/sam/drivers/usart/usart.c ****  *
1153:../../../platform/sam/drivers/usart/usart.c ****  * \return The current USART status.
1154:../../../platform/sam/drivers/usart/usart.c ****  */
1155:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_get_status(Usart *p_usart)
1156:../../../platform/sam/drivers/usart/usart.c **** {
 3257              	 .loc 1 1156 0
 3258              	 .cfi_startproc
 3259              	 
 3260              	 
 3261              	 
 3262 0b78 80B4     	 push {r7}
 3263              	.LCFI275:
 3264              	 .cfi_def_cfa_offset 4
 3265              	 .cfi_offset 7,-4
 3266 0b7a 83B0     	 sub sp,sp,#12
 3267              	.LCFI276:
 3268              	 .cfi_def_cfa_offset 16
 3269 0b7c 00AF     	 add r7,sp,#0
 3270              	.LCFI277:
 3271              	 .cfi_def_cfa_register 7
 3272 0b7e 7860     	 str r0,[r7,#4]
1157:../../../platform/sam/drivers/usart/usart.c **** 	return p_usart->US_CSR;
 3273              	 .loc 1 1157 0
 3274 0b80 7B68     	 ldr r3,[r7,#4]
 3275 0b82 5B69     	 ldr r3,[r3,#20]
1158:../../../platform/sam/drivers/usart/usart.c **** }
 3276              	 .loc 1 1158 0
 3277 0b84 1846     	 mov r0,r3
 3278 0b86 0C37     	 adds r7,r7,#12
 3279              	.LCFI278:
 3280              	 .cfi_def_cfa_offset 4
 3281 0b88 BD46     	 mov sp,r7
 3282              	.LCFI279:
 3283              	 .cfi_def_cfa_register 13
 3284              	 
 3285 0b8a 80BC     	 pop {r7}
 3286              	.LCFI280:
 3287              	 .cfi_restore 7
 3288              	 .cfi_def_cfa_offset 0
 3289 0b8c 7047     	 bx lr
 3290              	 .cfi_endproc
 3291              	.LFE170:
 3293              	 .align 1
 3294              	 .global usart_reset_status
 3295              	 .syntax unified
 3296              	 .thumb
 3297              	 .thumb_func
 3298              	 .fpu softvfp
 3300              	usart_reset_status:
 3301              	.LFB171:
1159:../../../platform/sam/drivers/usart/usart.c **** 
1160:../../../platform/sam/drivers/usart/usart.c **** /**
1161:../../../platform/sam/drivers/usart/usart.c ****  * \brief Reset status bits (PARE, OVER, MANERR, UNRE and PXBRK in US_CSR).
1162:../../../platform/sam/drivers/usart/usart.c ****  *
1163:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1164:../../../platform/sam/drivers/usart/usart.c ****  */
1165:../../../platform/sam/drivers/usart/usart.c **** void usart_reset_status(Usart *p_usart)
1166:../../../platform/sam/drivers/usart/usart.c **** {
 3302              	 .loc 1 1166 0
 3303              	 .cfi_startproc
 3304              	 
 3305              	 
 3306              	 
 3307 0b8e 80B4     	 push {r7}
 3308              	.LCFI281:
 3309              	 .cfi_def_cfa_offset 4
 3310              	 .cfi_offset 7,-4
 3311 0b90 83B0     	 sub sp,sp,#12
 3312              	.LCFI282:
 3313              	 .cfi_def_cfa_offset 16
 3314 0b92 00AF     	 add r7,sp,#0
 3315              	.LCFI283:
 3316              	 .cfi_def_cfa_register 7
 3317 0b94 7860     	 str r0,[r7,#4]
1167:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_RSTSTA;
 3318              	 .loc 1 1167 0
 3319 0b96 7B68     	 ldr r3,[r7,#4]
 3320 0b98 4FF48072 	 mov r2,#256
 3321 0b9c 1A60     	 str r2,[r3]
1168:../../../platform/sam/drivers/usart/usart.c **** }
 3322              	 .loc 1 1168 0
 3323 0b9e 00BF     	 nop
 3324 0ba0 0C37     	 adds r7,r7,#12
 3325              	.LCFI284:
 3326              	 .cfi_def_cfa_offset 4
 3327 0ba2 BD46     	 mov sp,r7
 3328              	.LCFI285:
 3329              	 .cfi_def_cfa_register 13
 3330              	 
 3331 0ba4 80BC     	 pop {r7}
 3332              	.LCFI286:
 3333              	 .cfi_restore 7
 3334              	 .cfi_def_cfa_offset 0
 3335 0ba6 7047     	 bx lr
 3336              	 .cfi_endproc
 3337              	.LFE171:
 3339              	 .align 1
 3340              	 .global usart_start_tx_break
 3341              	 .syntax unified
 3342              	 .thumb
 3343              	 .thumb_func
 3344              	 .fpu softvfp
 3346              	usart_start_tx_break:
 3347              	.LFB172:
1169:../../../platform/sam/drivers/usart/usart.c **** 
1170:../../../platform/sam/drivers/usart/usart.c **** /**
1171:../../../platform/sam/drivers/usart/usart.c ****  * \brief Start transmission of a break.
1172:../../../platform/sam/drivers/usart/usart.c ****  *
1173:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1174:../../../platform/sam/drivers/usart/usart.c ****  */
1175:../../../platform/sam/drivers/usart/usart.c **** void usart_start_tx_break(Usart *p_usart)
1176:../../../platform/sam/drivers/usart/usart.c **** {
 3348              	 .loc 1 1176 0
 3349              	 .cfi_startproc
 3350              	 
 3351              	 
 3352              	 
 3353 0ba8 80B4     	 push {r7}
 3354              	.LCFI287:
 3355              	 .cfi_def_cfa_offset 4
 3356              	 .cfi_offset 7,-4
 3357 0baa 83B0     	 sub sp,sp,#12
 3358              	.LCFI288:
 3359              	 .cfi_def_cfa_offset 16
 3360 0bac 00AF     	 add r7,sp,#0
 3361              	.LCFI289:
 3362              	 .cfi_def_cfa_register 7
 3363 0bae 7860     	 str r0,[r7,#4]
1177:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_STTBRK;
 3364              	 .loc 1 1177 0
 3365 0bb0 7B68     	 ldr r3,[r7,#4]
 3366 0bb2 4FF40072 	 mov r2,#512
 3367 0bb6 1A60     	 str r2,[r3]
1178:../../../platform/sam/drivers/usart/usart.c **** }
 3368              	 .loc 1 1178 0
 3369 0bb8 00BF     	 nop
 3370 0bba 0C37     	 adds r7,r7,#12
 3371              	.LCFI290:
 3372              	 .cfi_def_cfa_offset 4
 3373 0bbc BD46     	 mov sp,r7
 3374              	.LCFI291:
 3375              	 .cfi_def_cfa_register 13
 3376              	 
 3377 0bbe 80BC     	 pop {r7}
 3378              	.LCFI292:
 3379              	 .cfi_restore 7
 3380              	 .cfi_def_cfa_offset 0
 3381 0bc0 7047     	 bx lr
 3382              	 .cfi_endproc
 3383              	.LFE172:
 3385              	 .align 1
 3386              	 .global usart_stop_tx_break
 3387              	 .syntax unified
 3388              	 .thumb
 3389              	 .thumb_func
 3390              	 .fpu softvfp
 3392              	usart_stop_tx_break:
 3393              	.LFB173:
1179:../../../platform/sam/drivers/usart/usart.c **** 
1180:../../../platform/sam/drivers/usart/usart.c **** /**
1181:../../../platform/sam/drivers/usart/usart.c ****  * \brief Stop transmission of a break.
1182:../../../platform/sam/drivers/usart/usart.c ****  *
1183:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1184:../../../platform/sam/drivers/usart/usart.c ****  */
1185:../../../platform/sam/drivers/usart/usart.c **** void usart_stop_tx_break(Usart *p_usart)
1186:../../../platform/sam/drivers/usart/usart.c **** {
 3394              	 .loc 1 1186 0
 3395              	 .cfi_startproc
 3396              	 
 3397              	 
 3398              	 
 3399 0bc2 80B4     	 push {r7}
 3400              	.LCFI293:
 3401              	 .cfi_def_cfa_offset 4
 3402              	 .cfi_offset 7,-4
 3403 0bc4 83B0     	 sub sp,sp,#12
 3404              	.LCFI294:
 3405              	 .cfi_def_cfa_offset 16
 3406 0bc6 00AF     	 add r7,sp,#0
 3407              	.LCFI295:
 3408              	 .cfi_def_cfa_register 7
 3409 0bc8 7860     	 str r0,[r7,#4]
1187:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_STPBRK;
 3410              	 .loc 1 1187 0
 3411 0bca 7B68     	 ldr r3,[r7,#4]
 3412 0bcc 4FF48062 	 mov r2,#1024
 3413 0bd0 1A60     	 str r2,[r3]
1188:../../../platform/sam/drivers/usart/usart.c **** }
 3414              	 .loc 1 1188 0
 3415 0bd2 00BF     	 nop
 3416 0bd4 0C37     	 adds r7,r7,#12
 3417              	.LCFI296:
 3418              	 .cfi_def_cfa_offset 4
 3419 0bd6 BD46     	 mov sp,r7
 3420              	.LCFI297:
 3421              	 .cfi_def_cfa_register 13
 3422              	 
 3423 0bd8 80BC     	 pop {r7}
 3424              	.LCFI298:
 3425              	 .cfi_restore 7
 3426              	 .cfi_def_cfa_offset 0
 3427 0bda 7047     	 bx lr
 3428              	 .cfi_endproc
 3429              	.LFE173:
 3431              	 .align 1
 3432              	 .global usart_start_rx_timeout
 3433              	 .syntax unified
 3434              	 .thumb
 3435              	 .thumb_func
 3436              	 .fpu softvfp
 3438              	usart_start_rx_timeout:
 3439              	.LFB174:
1189:../../../platform/sam/drivers/usart/usart.c **** 
1190:../../../platform/sam/drivers/usart/usart.c **** /**
1191:../../../platform/sam/drivers/usart/usart.c ****  * \brief Start waiting for a character before clocking the timeout count.
1192:../../../platform/sam/drivers/usart/usart.c ****  * Reset the status bit TIMEOUT in US_CSR.
1193:../../../platform/sam/drivers/usart/usart.c ****  *
1194:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1195:../../../platform/sam/drivers/usart/usart.c ****  */
1196:../../../platform/sam/drivers/usart/usart.c **** void usart_start_rx_timeout(Usart *p_usart)
1197:../../../platform/sam/drivers/usart/usart.c **** {
 3440              	 .loc 1 1197 0
 3441              	 .cfi_startproc
 3442              	 
 3443              	 
 3444              	 
 3445 0bdc 80B4     	 push {r7}
 3446              	.LCFI299:
 3447              	 .cfi_def_cfa_offset 4
 3448              	 .cfi_offset 7,-4
 3449 0bde 83B0     	 sub sp,sp,#12
 3450              	.LCFI300:
 3451              	 .cfi_def_cfa_offset 16
 3452 0be0 00AF     	 add r7,sp,#0
 3453              	.LCFI301:
 3454              	 .cfi_def_cfa_register 7
 3455 0be2 7860     	 str r0,[r7,#4]
1198:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_STTTO;
 3456              	 .loc 1 1198 0
 3457 0be4 7B68     	 ldr r3,[r7,#4]
 3458 0be6 4FF40062 	 mov r2,#2048
 3459 0bea 1A60     	 str r2,[r3]
1199:../../../platform/sam/drivers/usart/usart.c **** }
 3460              	 .loc 1 1199 0
 3461 0bec 00BF     	 nop
 3462 0bee 0C37     	 adds r7,r7,#12
 3463              	.LCFI302:
 3464              	 .cfi_def_cfa_offset 4
 3465 0bf0 BD46     	 mov sp,r7
 3466              	.LCFI303:
 3467              	 .cfi_def_cfa_register 13
 3468              	 
 3469 0bf2 80BC     	 pop {r7}
 3470              	.LCFI304:
 3471              	 .cfi_restore 7
 3472              	 .cfi_def_cfa_offset 0
 3473 0bf4 7047     	 bx lr
 3474              	 .cfi_endproc
 3475              	.LFE174:
 3477              	 .align 1
 3478              	 .global usart_send_address
 3479              	 .syntax unified
 3480              	 .thumb
 3481              	 .thumb_func
 3482              	 .fpu softvfp
 3484              	usart_send_address:
 3485              	.LFB175:
1200:../../../platform/sam/drivers/usart/usart.c **** 
1201:../../../platform/sam/drivers/usart/usart.c **** /**
1202:../../../platform/sam/drivers/usart/usart.c ****  * \brief In Multidrop mode only, the next character written to the US_THR
1203:../../../platform/sam/drivers/usart/usart.c ****  * is sent with the address bit set.
1204:../../../platform/sam/drivers/usart/usart.c ****  *
1205:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1206:../../../platform/sam/drivers/usart/usart.c ****  * \param ul_addr The address to be sent out.
1207:../../../platform/sam/drivers/usart/usart.c ****  *
1208:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 on success.
1209:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 on failure.
1210:../../../platform/sam/drivers/usart/usart.c ****  */
1211:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_send_address(Usart *p_usart, uint32_t ul_addr)
1212:../../../platform/sam/drivers/usart/usart.c **** {
 3486              	 .loc 1 1212 0
 3487              	 .cfi_startproc
 3488              	 
 3489              	 
 3490 0bf6 80B5     	 push {r7,lr}
 3491              	.LCFI305:
 3492              	 .cfi_def_cfa_offset 8
 3493              	 .cfi_offset 7,-8
 3494              	 .cfi_offset 14,-4
 3495 0bf8 82B0     	 sub sp,sp,#8
 3496              	.LCFI306:
 3497              	 .cfi_def_cfa_offset 16
 3498 0bfa 00AF     	 add r7,sp,#0
 3499              	.LCFI307:
 3500              	 .cfi_def_cfa_register 7
 3501 0bfc 7860     	 str r0,[r7,#4]
 3502 0bfe 3960     	 str r1,[r7]
1213:../../../platform/sam/drivers/usart/usart.c **** 	if ((p_usart->US_MR & US_MR_PAR_MULTIDROP) != US_MR_PAR_MULTIDROP) {
 3503              	 .loc 1 1213 0
 3504 0c00 7B68     	 ldr r3,[r7,#4]
 3505 0c02 5B68     	 ldr r3,[r3,#4]
 3506 0c04 03F44063 	 and r3,r3,#3072
 3507 0c08 B3F5406F 	 cmp r3,#3072
 3508 0c0c 01D0     	 beq .L144
1214:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 3509              	 .loc 1 1214 0
 3510 0c0e 0123     	 movs r3,#1
 3511 0c10 0DE0     	 b .L145
 3512              	.L144:
1215:../../../platform/sam/drivers/usart/usart.c **** 	}
1216:../../../platform/sam/drivers/usart/usart.c **** 
1217:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_SENDA;
 3513              	 .loc 1 1217 0
 3514 0c12 7B68     	 ldr r3,[r7,#4]
 3515 0c14 4FF48052 	 mov r2,#4096
 3516 0c18 1A60     	 str r2,[r3]
1218:../../../platform/sam/drivers/usart/usart.c **** 
1219:../../../platform/sam/drivers/usart/usart.c **** 	if (usart_write(p_usart, ul_addr)) {
 3517              	 .loc 1 1219 0
 3518 0c1a 3968     	 ldr r1,[r7]
 3519 0c1c 7868     	 ldr r0,[r7,#4]
 3520 0c1e FFF7FEFF 	 bl usart_write
 3521 0c22 0346     	 mov r3,r0
 3522 0c24 002B     	 cmp r3,#0
 3523 0c26 01D0     	 beq .L146
1220:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 3524              	 .loc 1 1220 0
 3525 0c28 0123     	 movs r3,#1
 3526 0c2a 00E0     	 b .L145
 3527              	.L146:
1221:../../../platform/sam/drivers/usart/usart.c **** 	} else {
1222:../../../platform/sam/drivers/usart/usart.c **** 		return 0;
 3528              	 .loc 1 1222 0
 3529 0c2c 0023     	 movs r3,#0
 3530              	.L145:
1223:../../../platform/sam/drivers/usart/usart.c **** 	}
1224:../../../platform/sam/drivers/usart/usart.c **** }
 3531              	 .loc 1 1224 0
 3532 0c2e 1846     	 mov r0,r3
 3533 0c30 0837     	 adds r7,r7,#8
 3534              	.LCFI308:
 3535              	 .cfi_def_cfa_offset 8
 3536 0c32 BD46     	 mov sp,r7
 3537              	.LCFI309:
 3538              	 .cfi_def_cfa_register 13
 3539              	 
 3540 0c34 80BD     	 pop {r7,pc}
 3541              	 .cfi_endproc
 3542              	.LFE175:
 3544              	 .align 1
 3545              	 .global usart_reset_iterations
 3546              	 .syntax unified
 3547              	 .thumb
 3548              	 .thumb_func
 3549              	 .fpu softvfp
 3551              	usart_reset_iterations:
 3552              	.LFB176:
1225:../../../platform/sam/drivers/usart/usart.c **** 
1226:../../../platform/sam/drivers/usart/usart.c **** /**
1227:../../../platform/sam/drivers/usart/usart.c ****  * \brief Reset the ITERATION in US_CSR when the ISO7816 mode is enabled.
1228:../../../platform/sam/drivers/usart/usart.c ****  *
1229:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1230:../../../platform/sam/drivers/usart/usart.c ****  */
1231:../../../platform/sam/drivers/usart/usart.c **** void usart_reset_iterations(Usart *p_usart)
1232:../../../platform/sam/drivers/usart/usart.c **** {
 3553              	 .loc 1 1232 0
 3554              	 .cfi_startproc
 3555              	 
 3556              	 
 3557              	 
 3558 0c36 80B4     	 push {r7}
 3559              	.LCFI310:
 3560              	 .cfi_def_cfa_offset 4
 3561              	 .cfi_offset 7,-4
 3562 0c38 83B0     	 sub sp,sp,#12
 3563              	.LCFI311:
 3564              	 .cfi_def_cfa_offset 16
 3565 0c3a 00AF     	 add r7,sp,#0
 3566              	.LCFI312:
 3567              	 .cfi_def_cfa_register 7
 3568 0c3c 7860     	 str r0,[r7,#4]
1233:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_RSTIT;
 3569              	 .loc 1 1233 0
 3570 0c3e 7B68     	 ldr r3,[r7,#4]
 3571 0c40 4FF40052 	 mov r2,#8192
 3572 0c44 1A60     	 str r2,[r3]
1234:../../../platform/sam/drivers/usart/usart.c **** }
 3573              	 .loc 1 1234 0
 3574 0c46 00BF     	 nop
 3575 0c48 0C37     	 adds r7,r7,#12
 3576              	.LCFI313:
 3577              	 .cfi_def_cfa_offset 4
 3578 0c4a BD46     	 mov sp,r7
 3579              	.LCFI314:
 3580              	 .cfi_def_cfa_register 13
 3581              	 
 3582 0c4c 80BC     	 pop {r7}
 3583              	.LCFI315:
 3584              	 .cfi_restore 7
 3585              	 .cfi_def_cfa_offset 0
 3586 0c4e 7047     	 bx lr
 3587              	 .cfi_endproc
 3588              	.LFE176:
 3590              	 .align 1
 3591              	 .global usart_reset_nack
 3592              	 .syntax unified
 3593              	 .thumb
 3594              	 .thumb_func
 3595              	 .fpu softvfp
 3597              	usart_reset_nack:
 3598              	.LFB177:
1235:../../../platform/sam/drivers/usart/usart.c **** 
1236:../../../platform/sam/drivers/usart/usart.c **** /**
1237:../../../platform/sam/drivers/usart/usart.c ****  * \brief Reset NACK in US_CSR.
1238:../../../platform/sam/drivers/usart/usart.c ****  *
1239:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1240:../../../platform/sam/drivers/usart/usart.c ****  */
1241:../../../platform/sam/drivers/usart/usart.c **** void usart_reset_nack(Usart *p_usart)
1242:../../../platform/sam/drivers/usart/usart.c **** {
 3599              	 .loc 1 1242 0
 3600              	 .cfi_startproc
 3601              	 
 3602              	 
 3603              	 
 3604 0c50 80B4     	 push {r7}
 3605              	.LCFI316:
 3606              	 .cfi_def_cfa_offset 4
 3607              	 .cfi_offset 7,-4
 3608 0c52 83B0     	 sub sp,sp,#12
 3609              	.LCFI317:
 3610              	 .cfi_def_cfa_offset 16
 3611 0c54 00AF     	 add r7,sp,#0
 3612              	.LCFI318:
 3613              	 .cfi_def_cfa_register 7
 3614 0c56 7860     	 str r0,[r7,#4]
1243:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_RSTNACK;
 3615              	 .loc 1 1243 0
 3616 0c58 7B68     	 ldr r3,[r7,#4]
 3617 0c5a 4FF48042 	 mov r2,#16384
 3618 0c5e 1A60     	 str r2,[r3]
1244:../../../platform/sam/drivers/usart/usart.c **** }
 3619              	 .loc 1 1244 0
 3620 0c60 00BF     	 nop
 3621 0c62 0C37     	 adds r7,r7,#12
 3622              	.LCFI319:
 3623              	 .cfi_def_cfa_offset 4
 3624 0c64 BD46     	 mov sp,r7
 3625              	.LCFI320:
 3626              	 .cfi_def_cfa_register 13
 3627              	 
 3628 0c66 80BC     	 pop {r7}
 3629              	.LCFI321:
 3630              	 .cfi_restore 7
 3631              	 .cfi_def_cfa_offset 0
 3632 0c68 7047     	 bx lr
 3633              	 .cfi_endproc
 3634              	.LFE177:
 3636              	 .align 1
 3637              	 .global usart_restart_rx_timeout
 3638              	 .syntax unified
 3639              	 .thumb
 3640              	 .thumb_func
 3641              	 .fpu softvfp
 3643              	usart_restart_rx_timeout:
 3644              	.LFB178:
1245:../../../platform/sam/drivers/usart/usart.c **** 
1246:../../../platform/sam/drivers/usart/usart.c **** /**
1247:../../../platform/sam/drivers/usart/usart.c ****  * \brief Restart the receive timeout.
1248:../../../platform/sam/drivers/usart/usart.c ****  *
1249:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1250:../../../platform/sam/drivers/usart/usart.c ****  */
1251:../../../platform/sam/drivers/usart/usart.c **** void usart_restart_rx_timeout(Usart *p_usart)
1252:../../../platform/sam/drivers/usart/usart.c **** {
 3645              	 .loc 1 1252 0
 3646              	 .cfi_startproc
 3647              	 
 3648              	 
 3649              	 
 3650 0c6a 80B4     	 push {r7}
 3651              	.LCFI322:
 3652              	 .cfi_def_cfa_offset 4
 3653              	 .cfi_offset 7,-4
 3654 0c6c 83B0     	 sub sp,sp,#12
 3655              	.LCFI323:
 3656              	 .cfi_def_cfa_offset 16
 3657 0c6e 00AF     	 add r7,sp,#0
 3658              	.LCFI324:
 3659              	 .cfi_def_cfa_register 7
 3660 0c70 7860     	 str r0,[r7,#4]
1253:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_RETTO;
 3661              	 .loc 1 1253 0
 3662 0c72 7B68     	 ldr r3,[r7,#4]
 3663 0c74 4FF40042 	 mov r2,#32768
 3664 0c78 1A60     	 str r2,[r3]
1254:../../../platform/sam/drivers/usart/usart.c **** }
 3665              	 .loc 1 1254 0
 3666 0c7a 00BF     	 nop
 3667 0c7c 0C37     	 adds r7,r7,#12
 3668              	.LCFI325:
 3669              	 .cfi_def_cfa_offset 4
 3670 0c7e BD46     	 mov sp,r7
 3671              	.LCFI326:
 3672              	 .cfi_def_cfa_register 13
 3673              	 
 3674 0c80 80BC     	 pop {r7}
 3675              	.LCFI327:
 3676              	 .cfi_restore 7
 3677              	 .cfi_def_cfa_offset 0
 3678 0c82 7047     	 bx lr
 3679              	 .cfi_endproc
 3680              	.LFE178:
 3682              	 .align 1
 3683              	 .global usart_drive_DTR_pin_low
 3684              	 .syntax unified
 3685              	 .thumb
 3686              	 .thumb_func
 3687              	 .fpu softvfp
 3689              	usart_drive_DTR_pin_low:
 3690              	.LFB179:
1255:../../../platform/sam/drivers/usart/usart.c **** 
1256:../../../platform/sam/drivers/usart/usart.c **** #if (SAM3S || SAM4S || SAM3U || SAM4L || SAM4E)
1257:../../../platform/sam/drivers/usart/usart.c **** 
1258:../../../platform/sam/drivers/usart/usart.c **** /**
1259:../../../platform/sam/drivers/usart/usart.c ****  * \brief Drive the pin DTR to 0.
1260:../../../platform/sam/drivers/usart/usart.c ****  *
1261:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1262:../../../platform/sam/drivers/usart/usart.c ****  */
1263:../../../platform/sam/drivers/usart/usart.c **** void usart_drive_DTR_pin_low(Usart *p_usart)
1264:../../../platform/sam/drivers/usart/usart.c **** {
 3691              	 .loc 1 1264 0
 3692              	 .cfi_startproc
 3693              	 
 3694              	 
 3695              	 
 3696 0c84 80B4     	 push {r7}
 3697              	.LCFI328:
 3698              	 .cfi_def_cfa_offset 4
 3699              	 .cfi_offset 7,-4
 3700 0c86 83B0     	 sub sp,sp,#12
 3701              	.LCFI329:
 3702              	 .cfi_def_cfa_offset 16
 3703 0c88 00AF     	 add r7,sp,#0
 3704              	.LCFI330:
 3705              	 .cfi_def_cfa_register 7
 3706 0c8a 7860     	 str r0,[r7,#4]
1265:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_DTREN;
 3707              	 .loc 1 1265 0
 3708 0c8c 7B68     	 ldr r3,[r7,#4]
 3709 0c8e 4FF48032 	 mov r2,#65536
 3710 0c92 1A60     	 str r2,[r3]
1266:../../../platform/sam/drivers/usart/usart.c **** }
 3711              	 .loc 1 1266 0
 3712 0c94 00BF     	 nop
 3713 0c96 0C37     	 adds r7,r7,#12
 3714              	.LCFI331:
 3715              	 .cfi_def_cfa_offset 4
 3716 0c98 BD46     	 mov sp,r7
 3717              	.LCFI332:
 3718              	 .cfi_def_cfa_register 13
 3719              	 
 3720 0c9a 80BC     	 pop {r7}
 3721              	.LCFI333:
 3722              	 .cfi_restore 7
 3723              	 .cfi_def_cfa_offset 0
 3724 0c9c 7047     	 bx lr
 3725              	 .cfi_endproc
 3726              	.LFE179:
 3728              	 .align 1
 3729              	 .global usart_drive_DTR_pin_high
 3730              	 .syntax unified
 3731              	 .thumb
 3732              	 .thumb_func
 3733              	 .fpu softvfp
 3735              	usart_drive_DTR_pin_high:
 3736              	.LFB180:
1267:../../../platform/sam/drivers/usart/usart.c **** 
1268:../../../platform/sam/drivers/usart/usart.c **** /**
1269:../../../platform/sam/drivers/usart/usart.c ****  * \brief Drive the pin DTR to 1.
1270:../../../platform/sam/drivers/usart/usart.c ****  *
1271:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1272:../../../platform/sam/drivers/usart/usart.c ****  */
1273:../../../platform/sam/drivers/usart/usart.c **** void usart_drive_DTR_pin_high(Usart *p_usart)
1274:../../../platform/sam/drivers/usart/usart.c **** {
 3737              	 .loc 1 1274 0
 3738              	 .cfi_startproc
 3739              	 
 3740              	 
 3741              	 
 3742 0c9e 80B4     	 push {r7}
 3743              	.LCFI334:
 3744              	 .cfi_def_cfa_offset 4
 3745              	 .cfi_offset 7,-4
 3746 0ca0 83B0     	 sub sp,sp,#12
 3747              	.LCFI335:
 3748              	 .cfi_def_cfa_offset 16
 3749 0ca2 00AF     	 add r7,sp,#0
 3750              	.LCFI336:
 3751              	 .cfi_def_cfa_register 7
 3752 0ca4 7860     	 str r0,[r7,#4]
1275:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_DTRDIS;
 3753              	 .loc 1 1275 0
 3754 0ca6 7B68     	 ldr r3,[r7,#4]
 3755 0ca8 4FF40032 	 mov r2,#131072
 3756 0cac 1A60     	 str r2,[r3]
1276:../../../platform/sam/drivers/usart/usart.c **** }
 3757              	 .loc 1 1276 0
 3758 0cae 00BF     	 nop
 3759 0cb0 0C37     	 adds r7,r7,#12
 3760              	.LCFI337:
 3761              	 .cfi_def_cfa_offset 4
 3762 0cb2 BD46     	 mov sp,r7
 3763              	.LCFI338:
 3764              	 .cfi_def_cfa_register 13
 3765              	 
 3766 0cb4 80BC     	 pop {r7}
 3767              	.LCFI339:
 3768              	 .cfi_restore 7
 3769              	 .cfi_def_cfa_offset 0
 3770 0cb6 7047     	 bx lr
 3771              	 .cfi_endproc
 3772              	.LFE180:
 3774              	 .align 1
 3775              	 .global usart_drive_RTS_pin_low
 3776              	 .syntax unified
 3777              	 .thumb
 3778              	 .thumb_func
 3779              	 .fpu softvfp
 3781              	usart_drive_RTS_pin_low:
 3782              	.LFB181:
1277:../../../platform/sam/drivers/usart/usart.c **** 
1278:../../../platform/sam/drivers/usart/usart.c **** #endif
1279:../../../platform/sam/drivers/usart/usart.c **** 
1280:../../../platform/sam/drivers/usart/usart.c **** /**
1281:../../../platform/sam/drivers/usart/usart.c ****  * \brief Drive the pin RTS to 0.
1282:../../../platform/sam/drivers/usart/usart.c ****  *
1283:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1284:../../../platform/sam/drivers/usart/usart.c ****  */
1285:../../../platform/sam/drivers/usart/usart.c **** void usart_drive_RTS_pin_low(Usart *p_usart)
1286:../../../platform/sam/drivers/usart/usart.c **** {
 3783              	 .loc 1 1286 0
 3784              	 .cfi_startproc
 3785              	 
 3786              	 
 3787              	 
 3788 0cb8 80B4     	 push {r7}
 3789              	.LCFI340:
 3790              	 .cfi_def_cfa_offset 4
 3791              	 .cfi_offset 7,-4
 3792 0cba 83B0     	 sub sp,sp,#12
 3793              	.LCFI341:
 3794              	 .cfi_def_cfa_offset 16
 3795 0cbc 00AF     	 add r7,sp,#0
 3796              	.LCFI342:
 3797              	 .cfi_def_cfa_register 7
 3798 0cbe 7860     	 str r0,[r7,#4]
1287:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_RTSEN;
 3799              	 .loc 1 1287 0
 3800 0cc0 7B68     	 ldr r3,[r7,#4]
 3801 0cc2 4FF48022 	 mov r2,#262144
 3802 0cc6 1A60     	 str r2,[r3]
1288:../../../platform/sam/drivers/usart/usart.c **** }
 3803              	 .loc 1 1288 0
 3804 0cc8 00BF     	 nop
 3805 0cca 0C37     	 adds r7,r7,#12
 3806              	.LCFI343:
 3807              	 .cfi_def_cfa_offset 4
 3808 0ccc BD46     	 mov sp,r7
 3809              	.LCFI344:
 3810              	 .cfi_def_cfa_register 13
 3811              	 
 3812 0cce 80BC     	 pop {r7}
 3813              	.LCFI345:
 3814              	 .cfi_restore 7
 3815              	 .cfi_def_cfa_offset 0
 3816 0cd0 7047     	 bx lr
 3817              	 .cfi_endproc
 3818              	.LFE181:
 3820              	 .align 1
 3821              	 .global usart_drive_RTS_pin_high
 3822              	 .syntax unified
 3823              	 .thumb
 3824              	 .thumb_func
 3825              	 .fpu softvfp
 3827              	usart_drive_RTS_pin_high:
 3828              	.LFB182:
1289:../../../platform/sam/drivers/usart/usart.c **** 
1290:../../../platform/sam/drivers/usart/usart.c **** /**
1291:../../../platform/sam/drivers/usart/usart.c ****  * \brief Drive the pin RTS to 1.
1292:../../../platform/sam/drivers/usart/usart.c ****  *
1293:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1294:../../../platform/sam/drivers/usart/usart.c ****  */
1295:../../../platform/sam/drivers/usart/usart.c **** void usart_drive_RTS_pin_high(Usart *p_usart)
1296:../../../platform/sam/drivers/usart/usart.c **** {
 3829              	 .loc 1 1296 0
 3830              	 .cfi_startproc
 3831              	 
 3832              	 
 3833              	 
 3834 0cd2 80B4     	 push {r7}
 3835              	.LCFI346:
 3836              	 .cfi_def_cfa_offset 4
 3837              	 .cfi_offset 7,-4
 3838 0cd4 83B0     	 sub sp,sp,#12
 3839              	.LCFI347:
 3840              	 .cfi_def_cfa_offset 16
 3841 0cd6 00AF     	 add r7,sp,#0
 3842              	.LCFI348:
 3843              	 .cfi_def_cfa_register 7
 3844 0cd8 7860     	 str r0,[r7,#4]
1297:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_RTSDIS;
 3845              	 .loc 1 1297 0
 3846 0cda 7B68     	 ldr r3,[r7,#4]
 3847 0cdc 4FF40022 	 mov r2,#524288
 3848 0ce0 1A60     	 str r2,[r3]
1298:../../../platform/sam/drivers/usart/usart.c **** }
 3849              	 .loc 1 1298 0
 3850 0ce2 00BF     	 nop
 3851 0ce4 0C37     	 adds r7,r7,#12
 3852              	.LCFI349:
 3853              	 .cfi_def_cfa_offset 4
 3854 0ce6 BD46     	 mov sp,r7
 3855              	.LCFI350:
 3856              	 .cfi_def_cfa_register 13
 3857              	 
 3858 0ce8 80BC     	 pop {r7}
 3859              	.LCFI351:
 3860              	 .cfi_restore 7
 3861              	 .cfi_def_cfa_offset 0
 3862 0cea 7047     	 bx lr
 3863              	 .cfi_endproc
 3864              	.LFE182:
 3866              	 .align 1
 3867              	 .global usart_spi_force_chip_select
 3868              	 .syntax unified
 3869              	 .thumb
 3870              	 .thumb_func
 3871              	 .fpu softvfp
 3873              	usart_spi_force_chip_select:
 3874              	.LFB183:
1299:../../../platform/sam/drivers/usart/usart.c **** 
1300:../../../platform/sam/drivers/usart/usart.c **** /**
1301:../../../platform/sam/drivers/usart/usart.c ****  * \brief Drive the slave select line NSS (RTS pin) to 0 in SPI master mode.
1302:../../../platform/sam/drivers/usart/usart.c ****  *
1303:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1304:../../../platform/sam/drivers/usart/usart.c ****  */
1305:../../../platform/sam/drivers/usart/usart.c **** void usart_spi_force_chip_select(Usart *p_usart)
1306:../../../platform/sam/drivers/usart/usart.c **** {
 3875              	 .loc 1 1306 0
 3876              	 .cfi_startproc
 3877              	 
 3878              	 
 3879              	 
 3880 0cec 80B4     	 push {r7}
 3881              	.LCFI352:
 3882              	 .cfi_def_cfa_offset 4
 3883              	 .cfi_offset 7,-4
 3884 0cee 83B0     	 sub sp,sp,#12
 3885              	.LCFI353:
 3886              	 .cfi_def_cfa_offset 16
 3887 0cf0 00AF     	 add r7,sp,#0
 3888              	.LCFI354:
 3889              	 .cfi_def_cfa_register 7
 3890 0cf2 7860     	 str r0,[r7,#4]
1307:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_FCS;
 3891              	 .loc 1 1307 0
 3892 0cf4 7B68     	 ldr r3,[r7,#4]
 3893 0cf6 4FF48022 	 mov r2,#262144
 3894 0cfa 1A60     	 str r2,[r3]
1308:../../../platform/sam/drivers/usart/usart.c **** }
 3895              	 .loc 1 1308 0
 3896 0cfc 00BF     	 nop
 3897 0cfe 0C37     	 adds r7,r7,#12
 3898              	.LCFI355:
 3899              	 .cfi_def_cfa_offset 4
 3900 0d00 BD46     	 mov sp,r7
 3901              	.LCFI356:
 3902              	 .cfi_def_cfa_register 13
 3903              	 
 3904 0d02 80BC     	 pop {r7}
 3905              	.LCFI357:
 3906              	 .cfi_restore 7
 3907              	 .cfi_def_cfa_offset 0
 3908 0d04 7047     	 bx lr
 3909              	 .cfi_endproc
 3910              	.LFE183:
 3912              	 .align 1
 3913              	 .global usart_spi_release_chip_select
 3914              	 .syntax unified
 3915              	 .thumb
 3916              	 .thumb_func
 3917              	 .fpu softvfp
 3919              	usart_spi_release_chip_select:
 3920              	.LFB184:
1309:../../../platform/sam/drivers/usart/usart.c **** 
1310:../../../platform/sam/drivers/usart/usart.c **** /**
1311:../../../platform/sam/drivers/usart/usart.c ****  * \brief Drive the slave select line NSS (RTS pin) to 1 in SPI master mode.
1312:../../../platform/sam/drivers/usart/usart.c ****  *
1313:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1314:../../../platform/sam/drivers/usart/usart.c ****  */
1315:../../../platform/sam/drivers/usart/usart.c **** void usart_spi_release_chip_select(Usart *p_usart)
1316:../../../platform/sam/drivers/usart/usart.c **** {
 3921              	 .loc 1 1316 0
 3922              	 .cfi_startproc
 3923              	 
 3924              	 
 3925              	 
 3926 0d06 80B4     	 push {r7}
 3927              	.LCFI358:
 3928              	 .cfi_def_cfa_offset 4
 3929              	 .cfi_offset 7,-4
 3930 0d08 83B0     	 sub sp,sp,#12
 3931              	.LCFI359:
 3932              	 .cfi_def_cfa_offset 16
 3933 0d0a 00AF     	 add r7,sp,#0
 3934              	.LCFI360:
 3935              	 .cfi_def_cfa_register 7
 3936 0d0c 7860     	 str r0,[r7,#4]
1317:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_CR = US_CR_RCS;
 3937              	 .loc 1 1317 0
 3938 0d0e 7B68     	 ldr r3,[r7,#4]
 3939 0d10 4FF40022 	 mov r2,#524288
 3940 0d14 1A60     	 str r2,[r3]
1318:../../../platform/sam/drivers/usart/usart.c **** }
 3941              	 .loc 1 1318 0
 3942 0d16 00BF     	 nop
 3943 0d18 0C37     	 adds r7,r7,#12
 3944              	.LCFI361:
 3945              	 .cfi_def_cfa_offset 4
 3946 0d1a BD46     	 mov sp,r7
 3947              	.LCFI362:
 3948              	 .cfi_def_cfa_register 13
 3949              	 
 3950 0d1c 80BC     	 pop {r7}
 3951              	.LCFI363:
 3952              	 .cfi_restore 7
 3953              	 .cfi_def_cfa_offset 0
 3954 0d1e 7047     	 bx lr
 3955              	 .cfi_endproc
 3956              	.LFE184:
 3958              	 .align 1
 3959              	 .global usart_is_tx_ready
 3960              	 .syntax unified
 3961              	 .thumb
 3962              	 .thumb_func
 3963              	 .fpu softvfp
 3965              	usart_is_tx_ready:
 3966              	.LFB185:
1319:../../../platform/sam/drivers/usart/usart.c **** 
1320:../../../platform/sam/drivers/usart/usart.c **** /**
1321:../../../platform/sam/drivers/usart/usart.c ****  * \brief Check if Transmit is Ready.
1322:../../../platform/sam/drivers/usart/usart.c ****  * Check if data have been loaded in USART_THR and are waiting to be loaded
1323:../../../platform/sam/drivers/usart/usart.c ****  * into the Transmit Shift Register (TSR).
1324:../../../platform/sam/drivers/usart/usart.c ****  *
1325:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1326:../../../platform/sam/drivers/usart/usart.c ****  *
1327:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 No data is in the Transmit Holding Register.
1328:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 There is data in the Transmit Holding Register.
1329:../../../platform/sam/drivers/usart/usart.c ****  */
1330:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_is_tx_ready(Usart *p_usart)
1331:../../../platform/sam/drivers/usart/usart.c **** {
 3967              	 .loc 1 1331 0
 3968              	 .cfi_startproc
 3969              	 
 3970              	 
 3971              	 
 3972 0d20 80B4     	 push {r7}
 3973              	.LCFI364:
 3974              	 .cfi_def_cfa_offset 4
 3975              	 .cfi_offset 7,-4
 3976 0d22 83B0     	 sub sp,sp,#12
 3977              	.LCFI365:
 3978              	 .cfi_def_cfa_offset 16
 3979 0d24 00AF     	 add r7,sp,#0
 3980              	.LCFI366:
 3981              	 .cfi_def_cfa_register 7
 3982 0d26 7860     	 str r0,[r7,#4]
1332:../../../platform/sam/drivers/usart/usart.c **** 	return (p_usart->US_CSR & US_CSR_TXRDY) > 0;
 3983              	 .loc 1 1332 0
 3984 0d28 7B68     	 ldr r3,[r7,#4]
 3985 0d2a 5B69     	 ldr r3,[r3,#20]
 3986 0d2c 03F00203 	 and r3,r3,#2
 3987 0d30 002B     	 cmp r3,#0
 3988 0d32 14BF     	 ite ne
 3989 0d34 0123     	 movne r3,#1
 3990 0d36 0023     	 moveq r3,#0
 3991 0d38 DBB2     	 uxtb r3,r3
1333:../../../platform/sam/drivers/usart/usart.c **** }
 3992              	 .loc 1 1333 0
 3993 0d3a 1846     	 mov r0,r3
 3994 0d3c 0C37     	 adds r7,r7,#12
 3995              	.LCFI367:
 3996              	 .cfi_def_cfa_offset 4
 3997 0d3e BD46     	 mov sp,r7
 3998              	.LCFI368:
 3999              	 .cfi_def_cfa_register 13
 4000              	 
 4001 0d40 80BC     	 pop {r7}
 4002              	.LCFI369:
 4003              	 .cfi_restore 7
 4004              	 .cfi_def_cfa_offset 0
 4005 0d42 7047     	 bx lr
 4006              	 .cfi_endproc
 4007              	.LFE185:
 4009              	 .align 1
 4010              	 .global usart_is_tx_empty
 4011              	 .syntax unified
 4012              	 .thumb
 4013              	 .thumb_func
 4014              	 .fpu softvfp
 4016              	usart_is_tx_empty:
 4017              	.LFB186:
1334:../../../platform/sam/drivers/usart/usart.c **** 
1335:../../../platform/sam/drivers/usart/usart.c **** /**
1336:../../../platform/sam/drivers/usart/usart.c ****  * \brief Check if Transmit Holding Register is empty.
1337:../../../platform/sam/drivers/usart/usart.c ****  * Check if the last data written in USART_THR have been loaded in TSR and the
1338:../../../platform/sam/drivers/usart/usart.c ****  * last data loaded in TSR have been transmitted.
1339:../../../platform/sam/drivers/usart/usart.c ****  *
1340:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1341:../../../platform/sam/drivers/usart/usart.c ****  *
1342:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 Transmitter is empty.
1343:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 Transmitter is not empty.
1344:../../../platform/sam/drivers/usart/usart.c ****  */
1345:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_is_tx_empty(Usart *p_usart)
1346:../../../platform/sam/drivers/usart/usart.c **** {
 4018              	 .loc 1 1346 0
 4019              	 .cfi_startproc
 4020              	 
 4021              	 
 4022              	 
 4023 0d44 80B4     	 push {r7}
 4024              	.LCFI370:
 4025              	 .cfi_def_cfa_offset 4
 4026              	 .cfi_offset 7,-4
 4027 0d46 83B0     	 sub sp,sp,#12
 4028              	.LCFI371:
 4029              	 .cfi_def_cfa_offset 16
 4030 0d48 00AF     	 add r7,sp,#0
 4031              	.LCFI372:
 4032              	 .cfi_def_cfa_register 7
 4033 0d4a 7860     	 str r0,[r7,#4]
1347:../../../platform/sam/drivers/usart/usart.c **** 	return (p_usart->US_CSR & US_CSR_TXEMPTY) > 0;
 4034              	 .loc 1 1347 0
 4035 0d4c 7B68     	 ldr r3,[r7,#4]
 4036 0d4e 5B69     	 ldr r3,[r3,#20]
 4037 0d50 03F40073 	 and r3,r3,#512
 4038 0d54 002B     	 cmp r3,#0
 4039 0d56 14BF     	 ite ne
 4040 0d58 0123     	 movne r3,#1
 4041 0d5a 0023     	 moveq r3,#0
 4042 0d5c DBB2     	 uxtb r3,r3
1348:../../../platform/sam/drivers/usart/usart.c **** }
 4043              	 .loc 1 1348 0
 4044 0d5e 1846     	 mov r0,r3
 4045 0d60 0C37     	 adds r7,r7,#12
 4046              	.LCFI373:
 4047              	 .cfi_def_cfa_offset 4
 4048 0d62 BD46     	 mov sp,r7
 4049              	.LCFI374:
 4050              	 .cfi_def_cfa_register 13
 4051              	 
 4052 0d64 80BC     	 pop {r7}
 4053              	.LCFI375:
 4054              	 .cfi_restore 7
 4055              	 .cfi_def_cfa_offset 0
 4056 0d66 7047     	 bx lr
 4057              	 .cfi_endproc
 4058              	.LFE186:
 4060              	 .align 1
 4061              	 .global usart_is_rx_ready
 4062              	 .syntax unified
 4063              	 .thumb
 4064              	 .thumb_func
 4065              	 .fpu softvfp
 4067              	usart_is_rx_ready:
 4068              	.LFB187:
1349:../../../platform/sam/drivers/usart/usart.c **** 
1350:../../../platform/sam/drivers/usart/usart.c **** /**
1351:../../../platform/sam/drivers/usart/usart.c ****  * \brief Check if the received data are ready.
1352:../../../platform/sam/drivers/usart/usart.c ****  * Check if Data have been received and loaded into USART_RHR.
1353:../../../platform/sam/drivers/usart/usart.c ****  *
1354:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1355:../../../platform/sam/drivers/usart/usart.c ****  *
1356:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 Some data has been received.
1357:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 No data has been received.
1358:../../../platform/sam/drivers/usart/usart.c ****  */
1359:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_is_rx_ready(Usart *p_usart)
1360:../../../platform/sam/drivers/usart/usart.c **** {
 4069              	 .loc 1 1360 0
 4070              	 .cfi_startproc
 4071              	 
 4072              	 
 4073              	 
 4074 0d68 80B4     	 push {r7}
 4075              	.LCFI376:
 4076              	 .cfi_def_cfa_offset 4
 4077              	 .cfi_offset 7,-4
 4078 0d6a 83B0     	 sub sp,sp,#12
 4079              	.LCFI377:
 4080              	 .cfi_def_cfa_offset 16
 4081 0d6c 00AF     	 add r7,sp,#0
 4082              	.LCFI378:
 4083              	 .cfi_def_cfa_register 7
 4084 0d6e 7860     	 str r0,[r7,#4]
1361:../../../platform/sam/drivers/usart/usart.c **** 	return (p_usart->US_CSR & US_CSR_RXRDY) > 0;
 4085              	 .loc 1 1361 0
 4086 0d70 7B68     	 ldr r3,[r7,#4]
 4087 0d72 5B69     	 ldr r3,[r3,#20]
 4088 0d74 03F00103 	 and r3,r3,#1
 4089 0d78 002B     	 cmp r3,#0
 4090 0d7a 14BF     	 ite ne
 4091 0d7c 0123     	 movne r3,#1
 4092 0d7e 0023     	 moveq r3,#0
 4093 0d80 DBB2     	 uxtb r3,r3
1362:../../../platform/sam/drivers/usart/usart.c **** }
 4094              	 .loc 1 1362 0
 4095 0d82 1846     	 mov r0,r3
 4096 0d84 0C37     	 adds r7,r7,#12
 4097              	.LCFI379:
 4098              	 .cfi_def_cfa_offset 4
 4099 0d86 BD46     	 mov sp,r7
 4100              	.LCFI380:
 4101              	 .cfi_def_cfa_register 13
 4102              	 
 4103 0d88 80BC     	 pop {r7}
 4104              	.LCFI381:
 4105              	 .cfi_restore 7
 4106              	 .cfi_def_cfa_offset 0
 4107 0d8a 7047     	 bx lr
 4108              	 .cfi_endproc
 4109              	.LFE187:
 4111              	 .align 1
 4112              	 .global usart_is_rx_buf_end
 4113              	 .syntax unified
 4114              	 .thumb
 4115              	 .thumb_func
 4116              	 .fpu softvfp
 4118              	usart_is_rx_buf_end:
 4119              	.LFB188:
1363:../../../platform/sam/drivers/usart/usart.c **** 
1364:../../../platform/sam/drivers/usart/usart.c **** /**
1365:../../../platform/sam/drivers/usart/usart.c ****  * \brief Check if one receive buffer is filled.
1366:../../../platform/sam/drivers/usart/usart.c ****  *
1367:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1368:../../../platform/sam/drivers/usart/usart.c ****  *
1369:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 Receive is complete.
1370:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 Receive is still pending.
1371:../../../platform/sam/drivers/usart/usart.c ****  */
1372:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_is_rx_buf_end(Usart *p_usart)
1373:../../../platform/sam/drivers/usart/usart.c **** {
 4120              	 .loc 1 1373 0
 4121              	 .cfi_startproc
 4122              	 
 4123              	 
 4124              	 
 4125 0d8c 80B4     	 push {r7}
 4126              	.LCFI382:
 4127              	 .cfi_def_cfa_offset 4
 4128              	 .cfi_offset 7,-4
 4129 0d8e 83B0     	 sub sp,sp,#12
 4130              	.LCFI383:
 4131              	 .cfi_def_cfa_offset 16
 4132 0d90 00AF     	 add r7,sp,#0
 4133              	.LCFI384:
 4134              	 .cfi_def_cfa_register 7
 4135 0d92 7860     	 str r0,[r7,#4]
1374:../../../platform/sam/drivers/usart/usart.c **** 	return (p_usart->US_CSR & US_CSR_ENDRX) > 0;
 4136              	 .loc 1 1374 0
 4137 0d94 7B68     	 ldr r3,[r7,#4]
 4138 0d96 5B69     	 ldr r3,[r3,#20]
 4139 0d98 03F00803 	 and r3,r3,#8
 4140 0d9c 002B     	 cmp r3,#0
 4141 0d9e 14BF     	 ite ne
 4142 0da0 0123     	 movne r3,#1
 4143 0da2 0023     	 moveq r3,#0
 4144 0da4 DBB2     	 uxtb r3,r3
1375:../../../platform/sam/drivers/usart/usart.c **** }
 4145              	 .loc 1 1375 0
 4146 0da6 1846     	 mov r0,r3
 4147 0da8 0C37     	 adds r7,r7,#12
 4148              	.LCFI385:
 4149              	 .cfi_def_cfa_offset 4
 4150 0daa BD46     	 mov sp,r7
 4151              	.LCFI386:
 4152              	 .cfi_def_cfa_register 13
 4153              	 
 4154 0dac 80BC     	 pop {r7}
 4155              	.LCFI387:
 4156              	 .cfi_restore 7
 4157              	 .cfi_def_cfa_offset 0
 4158 0dae 7047     	 bx lr
 4159              	 .cfi_endproc
 4160              	.LFE188:
 4162              	 .align 1
 4163              	 .global usart_is_tx_buf_end
 4164              	 .syntax unified
 4165              	 .thumb
 4166              	 .thumb_func
 4167              	 .fpu softvfp
 4169              	usart_is_tx_buf_end:
 4170              	.LFB189:
1376:../../../platform/sam/drivers/usart/usart.c **** 
1377:../../../platform/sam/drivers/usart/usart.c **** /**
1378:../../../platform/sam/drivers/usart/usart.c ****  * \brief Check if one transmit buffer is empty.
1379:../../../platform/sam/drivers/usart/usart.c ****  *
1380:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1381:../../../platform/sam/drivers/usart/usart.c ****  *
1382:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 Transmit is complete.
1383:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 Transmit is still pending.
1384:../../../platform/sam/drivers/usart/usart.c ****  */
1385:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_is_tx_buf_end(Usart *p_usart)
1386:../../../platform/sam/drivers/usart/usart.c **** {
 4171              	 .loc 1 1386 0
 4172              	 .cfi_startproc
 4173              	 
 4174              	 
 4175              	 
 4176 0db0 80B4     	 push {r7}
 4177              	.LCFI388:
 4178              	 .cfi_def_cfa_offset 4
 4179              	 .cfi_offset 7,-4
 4180 0db2 83B0     	 sub sp,sp,#12
 4181              	.LCFI389:
 4182              	 .cfi_def_cfa_offset 16
 4183 0db4 00AF     	 add r7,sp,#0
 4184              	.LCFI390:
 4185              	 .cfi_def_cfa_register 7
 4186 0db6 7860     	 str r0,[r7,#4]
1387:../../../platform/sam/drivers/usart/usart.c **** 	return (p_usart->US_CSR & US_CSR_ENDTX) > 0;
 4187              	 .loc 1 1387 0
 4188 0db8 7B68     	 ldr r3,[r7,#4]
 4189 0dba 5B69     	 ldr r3,[r3,#20]
 4190 0dbc 03F01003 	 and r3,r3,#16
 4191 0dc0 002B     	 cmp r3,#0
 4192 0dc2 14BF     	 ite ne
 4193 0dc4 0123     	 movne r3,#1
 4194 0dc6 0023     	 moveq r3,#0
 4195 0dc8 DBB2     	 uxtb r3,r3
1388:../../../platform/sam/drivers/usart/usart.c **** }
 4196              	 .loc 1 1388 0
 4197 0dca 1846     	 mov r0,r3
 4198 0dcc 0C37     	 adds r7,r7,#12
 4199              	.LCFI391:
 4200              	 .cfi_def_cfa_offset 4
 4201 0dce BD46     	 mov sp,r7
 4202              	.LCFI392:
 4203              	 .cfi_def_cfa_register 13
 4204              	 
 4205 0dd0 80BC     	 pop {r7}
 4206              	.LCFI393:
 4207              	 .cfi_restore 7
 4208              	 .cfi_def_cfa_offset 0
 4209 0dd2 7047     	 bx lr
 4210              	 .cfi_endproc
 4211              	.LFE189:
 4213              	 .align 1
 4214              	 .global usart_is_rx_buf_full
 4215              	 .syntax unified
 4216              	 .thumb
 4217              	 .thumb_func
 4218              	 .fpu softvfp
 4220              	usart_is_rx_buf_full:
 4221              	.LFB190:
1389:../../../platform/sam/drivers/usart/usart.c **** 
1390:../../../platform/sam/drivers/usart/usart.c **** /**
1391:../../../platform/sam/drivers/usart/usart.c ****  * \brief Check if both receive buffers are full.
1392:../../../platform/sam/drivers/usart/usart.c ****  *
1393:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1394:../../../platform/sam/drivers/usart/usart.c ****  *
1395:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 Receive buffers are full.
1396:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 Receive buffers are not full.
1397:../../../platform/sam/drivers/usart/usart.c ****  */
1398:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_is_rx_buf_full(Usart *p_usart)
1399:../../../platform/sam/drivers/usart/usart.c **** {
 4222              	 .loc 1 1399 0
 4223              	 .cfi_startproc
 4224              	 
 4225              	 
 4226              	 
 4227 0dd4 80B4     	 push {r7}
 4228              	.LCFI394:
 4229              	 .cfi_def_cfa_offset 4
 4230              	 .cfi_offset 7,-4
 4231 0dd6 83B0     	 sub sp,sp,#12
 4232              	.LCFI395:
 4233              	 .cfi_def_cfa_offset 16
 4234 0dd8 00AF     	 add r7,sp,#0
 4235              	.LCFI396:
 4236              	 .cfi_def_cfa_register 7
 4237 0dda 7860     	 str r0,[r7,#4]
1400:../../../platform/sam/drivers/usart/usart.c **** 	return (p_usart->US_CSR & US_CSR_RXBUFF) > 0;
 4238              	 .loc 1 1400 0
 4239 0ddc 7B68     	 ldr r3,[r7,#4]
 4240 0dde 5B69     	 ldr r3,[r3,#20]
 4241 0de0 03F48053 	 and r3,r3,#4096
 4242 0de4 002B     	 cmp r3,#0
 4243 0de6 14BF     	 ite ne
 4244 0de8 0123     	 movne r3,#1
 4245 0dea 0023     	 moveq r3,#0
 4246 0dec DBB2     	 uxtb r3,r3
1401:../../../platform/sam/drivers/usart/usart.c **** }
 4247              	 .loc 1 1401 0
 4248 0dee 1846     	 mov r0,r3
 4249 0df0 0C37     	 adds r7,r7,#12
 4250              	.LCFI397:
 4251              	 .cfi_def_cfa_offset 4
 4252 0df2 BD46     	 mov sp,r7
 4253              	.LCFI398:
 4254              	 .cfi_def_cfa_register 13
 4255              	 
 4256 0df4 80BC     	 pop {r7}
 4257              	.LCFI399:
 4258              	 .cfi_restore 7
 4259              	 .cfi_def_cfa_offset 0
 4260 0df6 7047     	 bx lr
 4261              	 .cfi_endproc
 4262              	.LFE190:
 4264              	 .align 1
 4265              	 .global usart_is_tx_buf_empty
 4266              	 .syntax unified
 4267              	 .thumb
 4268              	 .thumb_func
 4269              	 .fpu softvfp
 4271              	usart_is_tx_buf_empty:
 4272              	.LFB191:
1402:../../../platform/sam/drivers/usart/usart.c **** 
1403:../../../platform/sam/drivers/usart/usart.c **** /**
1404:../../../platform/sam/drivers/usart/usart.c ****  * \brief Check if both transmit buffers are empty.
1405:../../../platform/sam/drivers/usart/usart.c ****  *
1406:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1407:../../../platform/sam/drivers/usart/usart.c ****  *
1408:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 Transmit buffers are empty.
1409:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 Transmit buffers are not empty.
1410:../../../platform/sam/drivers/usart/usart.c ****  */
1411:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_is_tx_buf_empty(Usart *p_usart)
1412:../../../platform/sam/drivers/usart/usart.c **** {
 4273              	 .loc 1 1412 0
 4274              	 .cfi_startproc
 4275              	 
 4276              	 
 4277              	 
 4278 0df8 80B4     	 push {r7}
 4279              	.LCFI400:
 4280              	 .cfi_def_cfa_offset 4
 4281              	 .cfi_offset 7,-4
 4282 0dfa 83B0     	 sub sp,sp,#12
 4283              	.LCFI401:
 4284              	 .cfi_def_cfa_offset 16
 4285 0dfc 00AF     	 add r7,sp,#0
 4286              	.LCFI402:
 4287              	 .cfi_def_cfa_register 7
 4288 0dfe 7860     	 str r0,[r7,#4]
1413:../../../platform/sam/drivers/usart/usart.c **** 	return (p_usart->US_CSR & US_CSR_TXBUFE) > 0;
 4289              	 .loc 1 1413 0
 4290 0e00 7B68     	 ldr r3,[r7,#4]
 4291 0e02 5B69     	 ldr r3,[r3,#20]
 4292 0e04 03F40063 	 and r3,r3,#2048
 4293 0e08 002B     	 cmp r3,#0
 4294 0e0a 14BF     	 ite ne
 4295 0e0c 0123     	 movne r3,#1
 4296 0e0e 0023     	 moveq r3,#0
 4297 0e10 DBB2     	 uxtb r3,r3
1414:../../../platform/sam/drivers/usart/usart.c **** }
 4298              	 .loc 1 1414 0
 4299 0e12 1846     	 mov r0,r3
 4300 0e14 0C37     	 adds r7,r7,#12
 4301              	.LCFI403:
 4302              	 .cfi_def_cfa_offset 4
 4303 0e16 BD46     	 mov sp,r7
 4304              	.LCFI404:
 4305              	 .cfi_def_cfa_register 13
 4306              	 
 4307 0e18 80BC     	 pop {r7}
 4308              	.LCFI405:
 4309              	 .cfi_restore 7
 4310              	 .cfi_def_cfa_offset 0
 4311 0e1a 7047     	 bx lr
 4312              	 .cfi_endproc
 4313              	.LFE191:
 4315              	 .align 1
 4316              	 .global usart_write
 4317              	 .syntax unified
 4318              	 .thumb
 4319              	 .thumb_func
 4320              	 .fpu softvfp
 4322              	usart_write:
 4323              	.LFB192:
1415:../../../platform/sam/drivers/usart/usart.c **** 
1416:../../../platform/sam/drivers/usart/usart.c **** /**
1417:../../../platform/sam/drivers/usart/usart.c ****  * \brief Write to USART Transmit Holding Register.
1418:../../../platform/sam/drivers/usart/usart.c ****  *
1419:../../../platform/sam/drivers/usart/usart.c ****  * \note Before writing user should check if tx is ready (or empty).
1420:../../../platform/sam/drivers/usart/usart.c ****  *
1421:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1422:../../../platform/sam/drivers/usart/usart.c ****  * \param c Data to be sent.
1423:../../../platform/sam/drivers/usart/usart.c ****  *
1424:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 on success.
1425:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 on failure.
1426:../../../platform/sam/drivers/usart/usart.c ****  */
1427:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_write(Usart *p_usart, uint32_t c)
1428:../../../platform/sam/drivers/usart/usart.c **** {
 4324              	 .loc 1 1428 0
 4325              	 .cfi_startproc
 4326              	 
 4327              	 
 4328              	 
 4329 0e1c 80B4     	 push {r7}
 4330              	.LCFI406:
 4331              	 .cfi_def_cfa_offset 4
 4332              	 .cfi_offset 7,-4
 4333 0e1e 83B0     	 sub sp,sp,#12
 4334              	.LCFI407:
 4335              	 .cfi_def_cfa_offset 16
 4336 0e20 00AF     	 add r7,sp,#0
 4337              	.LCFI408:
 4338              	 .cfi_def_cfa_register 7
 4339 0e22 7860     	 str r0,[r7,#4]
 4340 0e24 3960     	 str r1,[r7]
1429:../../../platform/sam/drivers/usart/usart.c **** 	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
 4341              	 .loc 1 1429 0
 4342 0e26 7B68     	 ldr r3,[r7,#4]
 4343 0e28 5B69     	 ldr r3,[r3,#20]
 4344 0e2a 03F00203 	 and r3,r3,#2
 4345 0e2e 002B     	 cmp r3,#0
 4346 0e30 01D1     	 bne .L171
1430:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 4347              	 .loc 1 1430 0
 4348 0e32 0123     	 movs r3,#1
 4349 0e34 05E0     	 b .L172
 4350              	.L171:
1431:../../../platform/sam/drivers/usart/usart.c **** 	}
1432:../../../platform/sam/drivers/usart/usart.c **** 
1433:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_THR = US_THR_TXCHR(c);
 4351              	 .loc 1 1433 0
 4352 0e36 3B68     	 ldr r3,[r7]
 4353 0e38 C3F30802 	 ubfx r2,r3,#0,#9
 4354 0e3c 7B68     	 ldr r3,[r7,#4]
 4355 0e3e DA61     	 str r2,[r3,#28]
1434:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 4356              	 .loc 1 1434 0
 4357 0e40 0023     	 movs r3,#0
 4358              	.L172:
1435:../../../platform/sam/drivers/usart/usart.c **** }
 4359              	 .loc 1 1435 0
 4360 0e42 1846     	 mov r0,r3
 4361 0e44 0C37     	 adds r7,r7,#12
 4362              	.LCFI409:
 4363              	 .cfi_def_cfa_offset 4
 4364 0e46 BD46     	 mov sp,r7
 4365              	.LCFI410:
 4366              	 .cfi_def_cfa_register 13
 4367              	 
 4368 0e48 80BC     	 pop {r7}
 4369              	.LCFI411:
 4370              	 .cfi_restore 7
 4371              	 .cfi_def_cfa_offset 0
 4372 0e4a 7047     	 bx lr
 4373              	 .cfi_endproc
 4374              	.LFE192:
 4376              	 .align 1
 4377              	 .global usart_putchar
 4378              	 .syntax unified
 4379              	 .thumb
 4380              	 .thumb_func
 4381              	 .fpu softvfp
 4383              	usart_putchar:
 4384              	.LFB193:
1436:../../../platform/sam/drivers/usart/usart.c **** 
1437:../../../platform/sam/drivers/usart/usart.c **** /**
1438:../../../platform/sam/drivers/usart/usart.c ****  * \brief Write to USART Transmit Holding Register.
1439:../../../platform/sam/drivers/usart/usart.c ****  *
1440:../../../platform/sam/drivers/usart/usart.c ****  * \note Before writing user should check if tx is ready (or empty).
1441:../../../platform/sam/drivers/usart/usart.c ****  *
1442:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1443:../../../platform/sam/drivers/usart/usart.c ****  * \param c Data to be sent.
1444:../../../platform/sam/drivers/usart/usart.c ****  *
1445:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 on success.
1446:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 on failure.
1447:../../../platform/sam/drivers/usart/usart.c ****  */
1448:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_putchar(Usart *p_usart, uint32_t c)
1449:../../../platform/sam/drivers/usart/usart.c **** {
 4385              	 .loc 1 1449 0
 4386              	 .cfi_startproc
 4387              	 
 4388              	 
 4389              	 
 4390 0e4c 80B4     	 push {r7}
 4391              	.LCFI412:
 4392              	 .cfi_def_cfa_offset 4
 4393              	 .cfi_offset 7,-4
 4394 0e4e 83B0     	 sub sp,sp,#12
 4395              	.LCFI413:
 4396              	 .cfi_def_cfa_offset 16
 4397 0e50 00AF     	 add r7,sp,#0
 4398              	.LCFI414:
 4399              	 .cfi_def_cfa_register 7
 4400 0e52 7860     	 str r0,[r7,#4]
 4401 0e54 3960     	 str r1,[r7]
1450:../../../platform/sam/drivers/usart/usart.c **** 	while (!(p_usart->US_CSR & US_CSR_TXRDY)) {
 4402              	 .loc 1 1450 0
 4403 0e56 00BF     	 nop
 4404              	.L174:
 4405              	 .loc 1 1450 0 is_stmt 0 discriminator 1
 4406 0e58 7B68     	 ldr r3,[r7,#4]
 4407 0e5a 5B69     	 ldr r3,[r3,#20]
 4408 0e5c 03F00203 	 and r3,r3,#2
 4409 0e60 002B     	 cmp r3,#0
 4410 0e62 F9D0     	 beq .L174
1451:../../../platform/sam/drivers/usart/usart.c **** 	}
1452:../../../platform/sam/drivers/usart/usart.c **** 
1453:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_THR = US_THR_TXCHR(c);
 4411              	 .loc 1 1453 0 is_stmt 1
 4412 0e64 3B68     	 ldr r3,[r7]
 4413 0e66 C3F30802 	 ubfx r2,r3,#0,#9
 4414 0e6a 7B68     	 ldr r3,[r7,#4]
 4415 0e6c DA61     	 str r2,[r3,#28]
1454:../../../platform/sam/drivers/usart/usart.c **** 
1455:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 4416              	 .loc 1 1455 0
 4417 0e6e 0023     	 movs r3,#0
1456:../../../platform/sam/drivers/usart/usart.c **** }
 4418              	 .loc 1 1456 0
 4419 0e70 1846     	 mov r0,r3
 4420 0e72 0C37     	 adds r7,r7,#12
 4421              	.LCFI415:
 4422              	 .cfi_def_cfa_offset 4
 4423 0e74 BD46     	 mov sp,r7
 4424              	.LCFI416:
 4425              	 .cfi_def_cfa_register 13
 4426              	 
 4427 0e76 80BC     	 pop {r7}
 4428              	.LCFI417:
 4429              	 .cfi_restore 7
 4430              	 .cfi_def_cfa_offset 0
 4431 0e78 7047     	 bx lr
 4432              	 .cfi_endproc
 4433              	.LFE193:
 4435              	 .align 1
 4436              	 .global usart_write_line
 4437              	 .syntax unified
 4438              	 .thumb
 4439              	 .thumb_func
 4440              	 .fpu softvfp
 4442              	usart_write_line:
 4443              	.LFB194:
1457:../../../platform/sam/drivers/usart/usart.c **** 
1458:../../../platform/sam/drivers/usart/usart.c **** /**
1459:../../../platform/sam/drivers/usart/usart.c ****  * \brief Write one-line string through USART.
1460:../../../platform/sam/drivers/usart/usart.c ****  *
1461:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1462:../../../platform/sam/drivers/usart/usart.c ****  * \param string Pointer to one-line string to be sent.
1463:../../../platform/sam/drivers/usart/usart.c ****  */
1464:../../../platform/sam/drivers/usart/usart.c **** void usart_write_line(Usart *p_usart, const char *string)
1465:../../../platform/sam/drivers/usart/usart.c **** {
 4444              	 .loc 1 1465 0
 4445              	 .cfi_startproc
 4446              	 
 4447              	 
 4448 0e7a 80B5     	 push {r7,lr}
 4449              	.LCFI418:
 4450              	 .cfi_def_cfa_offset 8
 4451              	 .cfi_offset 7,-8
 4452              	 .cfi_offset 14,-4
 4453 0e7c 82B0     	 sub sp,sp,#8
 4454              	.LCFI419:
 4455              	 .cfi_def_cfa_offset 16
 4456 0e7e 00AF     	 add r7,sp,#0
 4457              	.LCFI420:
 4458              	 .cfi_def_cfa_register 7
 4459 0e80 7860     	 str r0,[r7,#4]
 4460 0e82 3960     	 str r1,[r7]
1466:../../../platform/sam/drivers/usart/usart.c **** 	while (*string != '\0') {
 4461              	 .loc 1 1466 0
 4462 0e84 07E0     	 b .L177
 4463              	.L178:
1467:../../../platform/sam/drivers/usart/usart.c **** 		usart_putchar(p_usart, *string++);
 4464              	 .loc 1 1467 0
 4465 0e86 3B68     	 ldr r3,[r7]
 4466 0e88 5A1C     	 adds r2,r3,#1
 4467 0e8a 3A60     	 str r2,[r7]
 4468 0e8c 1B78     	 ldrb r3,[r3]
 4469 0e8e 1946     	 mov r1,r3
 4470 0e90 7868     	 ldr r0,[r7,#4]
 4471 0e92 FFF7FEFF 	 bl usart_putchar
 4472              	.L177:
1466:../../../platform/sam/drivers/usart/usart.c **** 	while (*string != '\0') {
 4473              	 .loc 1 1466 0
 4474 0e96 3B68     	 ldr r3,[r7]
 4475 0e98 1B78     	 ldrb r3,[r3]
 4476 0e9a 002B     	 cmp r3,#0
 4477 0e9c F3D1     	 bne .L178
1468:../../../platform/sam/drivers/usart/usart.c **** 	}
1469:../../../platform/sam/drivers/usart/usart.c **** }
 4478              	 .loc 1 1469 0
 4479 0e9e 00BF     	 nop
 4480 0ea0 0837     	 adds r7,r7,#8
 4481              	.LCFI421:
 4482              	 .cfi_def_cfa_offset 8
 4483 0ea2 BD46     	 mov sp,r7
 4484              	.LCFI422:
 4485              	 .cfi_def_cfa_register 13
 4486              	 
 4487 0ea4 80BD     	 pop {r7,pc}
 4488              	 .cfi_endproc
 4489              	.LFE194:
 4491              	 .align 1
 4492              	 .global usart_read
 4493              	 .syntax unified
 4494              	 .thumb
 4495              	 .thumb_func
 4496              	 .fpu softvfp
 4498              	usart_read:
 4499              	.LFB195:
1470:../../../platform/sam/drivers/usart/usart.c **** 
1471:../../../platform/sam/drivers/usart/usart.c **** /**
1472:../../../platform/sam/drivers/usart/usart.c ****  * \brief Read from USART Receive Holding Register.
1473:../../../platform/sam/drivers/usart/usart.c ****  *
1474:../../../platform/sam/drivers/usart/usart.c ****  * \note Before reading user should check if rx is ready.
1475:../../../platform/sam/drivers/usart/usart.c ****  *
1476:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1477:../../../platform/sam/drivers/usart/usart.c ****  * \param c Pointer where the one-byte received data will be stored.
1478:../../../platform/sam/drivers/usart/usart.c ****  *
1479:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 on success.
1480:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 if no data is available or errors.
1481:../../../platform/sam/drivers/usart/usart.c ****  */
1482:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_read(Usart *p_usart, uint32_t *c)
1483:../../../platform/sam/drivers/usart/usart.c **** {
 4500              	 .loc 1 1483 0
 4501              	 .cfi_startproc
 4502              	 
 4503              	 
 4504              	 
 4505 0ea6 80B4     	 push {r7}
 4506              	.LCFI423:
 4507              	 .cfi_def_cfa_offset 4
 4508              	 .cfi_offset 7,-4
 4509 0ea8 83B0     	 sub sp,sp,#12
 4510              	.LCFI424:
 4511              	 .cfi_def_cfa_offset 16
 4512 0eaa 00AF     	 add r7,sp,#0
 4513              	.LCFI425:
 4514              	 .cfi_def_cfa_register 7
 4515 0eac 7860     	 str r0,[r7,#4]
 4516 0eae 3960     	 str r1,[r7]
1484:../../../platform/sam/drivers/usart/usart.c **** 	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
 4517              	 .loc 1 1484 0
 4518 0eb0 7B68     	 ldr r3,[r7,#4]
 4519 0eb2 5B69     	 ldr r3,[r3,#20]
 4520 0eb4 03F00103 	 and r3,r3,#1
 4521 0eb8 002B     	 cmp r3,#0
 4522 0eba 01D1     	 bne .L180
1485:../../../platform/sam/drivers/usart/usart.c **** 		return 1;
 4523              	 .loc 1 1485 0
 4524 0ebc 0123     	 movs r3,#1
 4525 0ebe 06E0     	 b .L181
 4526              	.L180:
1486:../../../platform/sam/drivers/usart/usart.c **** 	}
1487:../../../platform/sam/drivers/usart/usart.c **** 
1488:../../../platform/sam/drivers/usart/usart.c **** 	/* Read character */
1489:../../../platform/sam/drivers/usart/usart.c **** 	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
 4527              	 .loc 1 1489 0
 4528 0ec0 7B68     	 ldr r3,[r7,#4]
 4529 0ec2 9B69     	 ldr r3,[r3,#24]
 4530 0ec4 C3F30802 	 ubfx r2,r3,#0,#9
 4531 0ec8 3B68     	 ldr r3,[r7]
 4532 0eca 1A60     	 str r2,[r3]
1490:../../../platform/sam/drivers/usart/usart.c **** 
1491:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 4533              	 .loc 1 1491 0
 4534 0ecc 0023     	 movs r3,#0
 4535              	.L181:
1492:../../../platform/sam/drivers/usart/usart.c **** }
 4536              	 .loc 1 1492 0
 4537 0ece 1846     	 mov r0,r3
 4538 0ed0 0C37     	 adds r7,r7,#12
 4539              	.LCFI426:
 4540              	 .cfi_def_cfa_offset 4
 4541 0ed2 BD46     	 mov sp,r7
 4542              	.LCFI427:
 4543              	 .cfi_def_cfa_register 13
 4544              	 
 4545 0ed4 80BC     	 pop {r7}
 4546              	.LCFI428:
 4547              	 .cfi_restore 7
 4548              	 .cfi_def_cfa_offset 0
 4549 0ed6 7047     	 bx lr
 4550              	 .cfi_endproc
 4551              	.LFE195:
 4553              	 .align 1
 4554              	 .global usart_getchar
 4555              	 .syntax unified
 4556              	 .thumb
 4557              	 .thumb_func
 4558              	 .fpu softvfp
 4560              	usart_getchar:
 4561              	.LFB196:
1493:../../../platform/sam/drivers/usart/usart.c **** 
1494:../../../platform/sam/drivers/usart/usart.c **** /**
1495:../../../platform/sam/drivers/usart/usart.c ****  * \brief Read from USART Receive Holding Register.
1496:../../../platform/sam/drivers/usart/usart.c ****  * Before reading user should check if rx is ready.
1497:../../../platform/sam/drivers/usart/usart.c ****  *
1498:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1499:../../../platform/sam/drivers/usart/usart.c ****  * \param c Pointer where the one-byte received data will be stored.
1500:../../../platform/sam/drivers/usart/usart.c ****  *
1501:../../../platform/sam/drivers/usart/usart.c ****  * \retval 0 Data has been received.
1502:../../../platform/sam/drivers/usart/usart.c ****  * \retval 1 on failure.
1503:../../../platform/sam/drivers/usart/usart.c ****  */
1504:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_getchar(Usart *p_usart, uint32_t *c)
1505:../../../platform/sam/drivers/usart/usart.c **** {
 4562              	 .loc 1 1505 0
 4563              	 .cfi_startproc
 4564              	 
 4565              	 
 4566              	 
 4567 0ed8 80B4     	 push {r7}
 4568              	.LCFI429:
 4569              	 .cfi_def_cfa_offset 4
 4570              	 .cfi_offset 7,-4
 4571 0eda 83B0     	 sub sp,sp,#12
 4572              	.LCFI430:
 4573              	 .cfi_def_cfa_offset 16
 4574 0edc 00AF     	 add r7,sp,#0
 4575              	.LCFI431:
 4576              	 .cfi_def_cfa_register 7
 4577 0ede 7860     	 str r0,[r7,#4]
 4578 0ee0 3960     	 str r1,[r7]
1506:../../../platform/sam/drivers/usart/usart.c **** 	/* Wait until it's not empty or timeout has reached. */
1507:../../../platform/sam/drivers/usart/usart.c **** 	while (!(p_usart->US_CSR & US_CSR_RXRDY)) {
 4579              	 .loc 1 1507 0
 4580 0ee2 00BF     	 nop
 4581              	.L183:
 4582              	 .loc 1 1507 0 is_stmt 0 discriminator 1
 4583 0ee4 7B68     	 ldr r3,[r7,#4]
 4584 0ee6 5B69     	 ldr r3,[r3,#20]
 4585 0ee8 03F00103 	 and r3,r3,#1
 4586 0eec 002B     	 cmp r3,#0
 4587 0eee F9D0     	 beq .L183
1508:../../../platform/sam/drivers/usart/usart.c **** 	}
1509:../../../platform/sam/drivers/usart/usart.c **** 
1510:../../../platform/sam/drivers/usart/usart.c **** 	/* Read character */
1511:../../../platform/sam/drivers/usart/usart.c **** 	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
 4588              	 .loc 1 1511 0 is_stmt 1
 4589 0ef0 7B68     	 ldr r3,[r7,#4]
 4590 0ef2 9B69     	 ldr r3,[r3,#24]
 4591 0ef4 C3F30802 	 ubfx r2,r3,#0,#9
 4592 0ef8 3B68     	 ldr r3,[r7]
 4593 0efa 1A60     	 str r2,[r3]
1512:../../../platform/sam/drivers/usart/usart.c **** 
1513:../../../platform/sam/drivers/usart/usart.c **** 	return 0;
 4594              	 .loc 1 1513 0
 4595 0efc 0023     	 movs r3,#0
1514:../../../platform/sam/drivers/usart/usart.c **** }
 4596              	 .loc 1 1514 0
 4597 0efe 1846     	 mov r0,r3
 4598 0f00 0C37     	 adds r7,r7,#12
 4599              	.LCFI432:
 4600              	 .cfi_def_cfa_offset 4
 4601 0f02 BD46     	 mov sp,r7
 4602              	.LCFI433:
 4603              	 .cfi_def_cfa_register 13
 4604              	 
 4605 0f04 80BC     	 pop {r7}
 4606              	.LCFI434:
 4607              	 .cfi_restore 7
 4608              	 .cfi_def_cfa_offset 0
 4609 0f06 7047     	 bx lr
 4610              	 .cfi_endproc
 4611              	.LFE196:
 4613              	 .align 1
 4614              	 .global usart_enable_writeprotect
 4615              	 .syntax unified
 4616              	 .thumb
 4617              	 .thumb_func
 4618              	 .fpu softvfp
 4620              	usart_enable_writeprotect:
 4621              	.LFB197:
1515:../../../platform/sam/drivers/usart/usart.c **** 
1516:../../../platform/sam/drivers/usart/usart.c **** #if (SAM3XA || SAM3U)
1517:../../../platform/sam/drivers/usart/usart.c **** /**
1518:../../../platform/sam/drivers/usart/usart.c ****  * \brief Get Transmit address for DMA operation.
1519:../../../platform/sam/drivers/usart/usart.c ****  *
1520:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1521:../../../platform/sam/drivers/usart/usart.c ****  *
1522:../../../platform/sam/drivers/usart/usart.c ****  * \return Transmit address for DMA access.
1523:../../../platform/sam/drivers/usart/usart.c ****  */
1524:../../../platform/sam/drivers/usart/usart.c **** uint32_t *usart_get_tx_access(Usart *p_usart)
1525:../../../platform/sam/drivers/usart/usart.c **** {
1526:../../../platform/sam/drivers/usart/usart.c **** 	return (uint32_t *)&(p_usart->US_THR);
1527:../../../platform/sam/drivers/usart/usart.c **** }
1528:../../../platform/sam/drivers/usart/usart.c **** 
1529:../../../platform/sam/drivers/usart/usart.c **** /**
1530:../../../platform/sam/drivers/usart/usart.c ****  * \brief Get Receive address for DMA operation.
1531:../../../platform/sam/drivers/usart/usart.c ****  *
1532:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1533:../../../platform/sam/drivers/usart/usart.c ****  *
1534:../../../platform/sam/drivers/usart/usart.c ****  * \return Receive address for DMA access.
1535:../../../platform/sam/drivers/usart/usart.c ****  */
1536:../../../platform/sam/drivers/usart/usart.c **** uint32_t *usart_get_rx_access(Usart *p_usart)
1537:../../../platform/sam/drivers/usart/usart.c **** {
1538:../../../platform/sam/drivers/usart/usart.c **** 	return (uint32_t *)&(p_usart->US_RHR);
1539:../../../platform/sam/drivers/usart/usart.c **** }
1540:../../../platform/sam/drivers/usart/usart.c **** #endif
1541:../../../platform/sam/drivers/usart/usart.c **** 
1542:../../../platform/sam/drivers/usart/usart.c **** #if (!SAM4L)
1543:../../../platform/sam/drivers/usart/usart.c **** /**
1544:../../../platform/sam/drivers/usart/usart.c ****  * \brief Get USART PDC base address.
1545:../../../platform/sam/drivers/usart/usart.c ****  *
1546:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a UART instance.
1547:../../../platform/sam/drivers/usart/usart.c ****  *
1548:../../../platform/sam/drivers/usart/usart.c ****  * \return USART PDC registers base for PDC driver to access.
1549:../../../platform/sam/drivers/usart/usart.c ****  */
1550:../../../platform/sam/drivers/usart/usart.c **** Pdc *usart_get_pdc_base(Usart *p_usart)
1551:../../../platform/sam/drivers/usart/usart.c **** {
1552:../../../platform/sam/drivers/usart/usart.c **** 	Pdc *p_pdc_base;
1553:../../../platform/sam/drivers/usart/usart.c **** 
1554:../../../platform/sam/drivers/usart/usart.c **** 	p_pdc_base = (Pdc *)NULL;
1555:../../../platform/sam/drivers/usart/usart.c **** 
1556:../../../platform/sam/drivers/usart/usart.c **** #ifdef PDC_USART
1557:../../../platform/sam/drivers/usart/usart.c **** 	if (p_usart == USART) {
1558:../../../platform/sam/drivers/usart/usart.c **** 		p_pdc_base = PDC_USART;
1559:../../../platform/sam/drivers/usart/usart.c **** 		return p_pdc_base;
1560:../../../platform/sam/drivers/usart/usart.c **** 	}
1561:../../../platform/sam/drivers/usart/usart.c **** #endif
1562:../../../platform/sam/drivers/usart/usart.c **** #ifdef PDC_USART0
1563:../../../platform/sam/drivers/usart/usart.c **** 	if (p_usart == USART0) {
1564:../../../platform/sam/drivers/usart/usart.c **** 		p_pdc_base = PDC_USART0;
1565:../../../platform/sam/drivers/usart/usart.c **** 		return p_pdc_base;
1566:../../../platform/sam/drivers/usart/usart.c **** 	}
1567:../../../platform/sam/drivers/usart/usart.c **** #endif
1568:../../../platform/sam/drivers/usart/usart.c **** #ifdef PDC_USART1
1569:../../../platform/sam/drivers/usart/usart.c **** 	else if (p_usart == USART1) {
1570:../../../platform/sam/drivers/usart/usart.c **** 		p_pdc_base = PDC_USART1;
1571:../../../platform/sam/drivers/usart/usart.c **** 		return p_pdc_base;
1572:../../../platform/sam/drivers/usart/usart.c **** 	}
1573:../../../platform/sam/drivers/usart/usart.c **** #endif
1574:../../../platform/sam/drivers/usart/usart.c **** #ifdef PDC_USART2
1575:../../../platform/sam/drivers/usart/usart.c **** 	else if (p_usart == USART2) {
1576:../../../platform/sam/drivers/usart/usart.c **** 		p_pdc_base = PDC_USART2;
1577:../../../platform/sam/drivers/usart/usart.c **** 		return p_pdc_base;
1578:../../../platform/sam/drivers/usart/usart.c **** 	}
1579:../../../platform/sam/drivers/usart/usart.c **** #endif
1580:../../../platform/sam/drivers/usart/usart.c **** #ifdef PDC_USART3
1581:../../../platform/sam/drivers/usart/usart.c **** 	else if (p_usart == USART3) {
1582:../../../platform/sam/drivers/usart/usart.c **** 		p_pdc_base = PDC_USART3;
1583:../../../platform/sam/drivers/usart/usart.c **** 		return p_pdc_base;
1584:../../../platform/sam/drivers/usart/usart.c **** 	}
1585:../../../platform/sam/drivers/usart/usart.c **** #endif
1586:../../../platform/sam/drivers/usart/usart.c **** 
1587:../../../platform/sam/drivers/usart/usart.c **** 	return p_pdc_base;
1588:../../../platform/sam/drivers/usart/usart.c **** }
1589:../../../platform/sam/drivers/usart/usart.c **** #endif
1590:../../../platform/sam/drivers/usart/usart.c **** 
1591:../../../platform/sam/drivers/usart/usart.c **** /**
1592:../../../platform/sam/drivers/usart/usart.c ****  * \brief Enable write protect of USART registers.
1593:../../../platform/sam/drivers/usart/usart.c ****  *
1594:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1595:../../../platform/sam/drivers/usart/usart.c ****  */
1596:../../../platform/sam/drivers/usart/usart.c **** void usart_enable_writeprotect(Usart *p_usart)
1597:../../../platform/sam/drivers/usart/usart.c **** {
 4622              	 .loc 1 1597 0
 4623              	 .cfi_startproc
 4624              	 
 4625              	 
 4626              	 
 4627 0f08 80B4     	 push {r7}
 4628              	.LCFI435:
 4629              	 .cfi_def_cfa_offset 4
 4630              	 .cfi_offset 7,-4
 4631 0f0a 83B0     	 sub sp,sp,#12
 4632              	.LCFI436:
 4633              	 .cfi_def_cfa_offset 16
 4634 0f0c 00AF     	 add r7,sp,#0
 4635              	.LCFI437:
 4636              	 .cfi_def_cfa_register 7
 4637 0f0e 7860     	 str r0,[r7,#4]
1598:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_WPMR = US_WPMR_WPEN | US_WPMR_WPKEY_PASSWD;
 4638              	 .loc 1 1598 0
 4639 0f10 7B68     	 ldr r3,[r7,#4]
 4640 0f12 044A     	 ldr r2,.L186
 4641 0f14 C3F8E420 	 str r2,[r3,#228]
1599:../../../platform/sam/drivers/usart/usart.c **** }
 4642              	 .loc 1 1599 0
 4643 0f18 00BF     	 nop
 4644 0f1a 0C37     	 adds r7,r7,#12
 4645              	.LCFI438:
 4646              	 .cfi_def_cfa_offset 4
 4647 0f1c BD46     	 mov sp,r7
 4648              	.LCFI439:
 4649              	 .cfi_def_cfa_register 13
 4650              	 
 4651 0f1e 80BC     	 pop {r7}
 4652              	.LCFI440:
 4653              	 .cfi_restore 7
 4654              	 .cfi_def_cfa_offset 0
 4655 0f20 7047     	 bx lr
 4656              	.L187:
 4657 0f22 00BF     	 .align 2
 4658              	.L186:
 4659 0f24 01415355 	 .word 1431519489
 4660              	 .cfi_endproc
 4661              	.LFE197:
 4663              	 .align 1
 4664              	 .global usart_disable_writeprotect
 4665              	 .syntax unified
 4666              	 .thumb
 4667              	 .thumb_func
 4668              	 .fpu softvfp
 4670              	usart_disable_writeprotect:
 4671              	.LFB198:
1600:../../../platform/sam/drivers/usart/usart.c **** 
1601:../../../platform/sam/drivers/usart/usart.c **** /**
1602:../../../platform/sam/drivers/usart/usart.c ****  * \brief Disable write protect of USART registers.
1603:../../../platform/sam/drivers/usart/usart.c ****  *
1604:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1605:../../../platform/sam/drivers/usart/usart.c ****  */
1606:../../../platform/sam/drivers/usart/usart.c **** void usart_disable_writeprotect(Usart *p_usart)
1607:../../../platform/sam/drivers/usart/usart.c **** {
 4672              	 .loc 1 1607 0
 4673              	 .cfi_startproc
 4674              	 
 4675              	 
 4676              	 
 4677 0f28 80B4     	 push {r7}
 4678              	.LCFI441:
 4679              	 .cfi_def_cfa_offset 4
 4680              	 .cfi_offset 7,-4
 4681 0f2a 83B0     	 sub sp,sp,#12
 4682              	.LCFI442:
 4683              	 .cfi_def_cfa_offset 16
 4684 0f2c 00AF     	 add r7,sp,#0
 4685              	.LCFI443:
 4686              	 .cfi_def_cfa_register 7
 4687 0f2e 7860     	 str r0,[r7,#4]
1608:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
 4688              	 .loc 1 1608 0
 4689 0f30 7B68     	 ldr r3,[r7,#4]
 4690 0f32 044A     	 ldr r2,.L189
 4691 0f34 C3F8E420 	 str r2,[r3,#228]
1609:../../../platform/sam/drivers/usart/usart.c **** }
 4692              	 .loc 1 1609 0
 4693 0f38 00BF     	 nop
 4694 0f3a 0C37     	 adds r7,r7,#12
 4695              	.LCFI444:
 4696              	 .cfi_def_cfa_offset 4
 4697 0f3c BD46     	 mov sp,r7
 4698              	.LCFI445:
 4699              	 .cfi_def_cfa_register 13
 4700              	 
 4701 0f3e 80BC     	 pop {r7}
 4702              	.LCFI446:
 4703              	 .cfi_restore 7
 4704              	 .cfi_def_cfa_offset 0
 4705 0f40 7047     	 bx lr
 4706              	.L190:
 4707 0f42 00BF     	 .align 2
 4708              	.L189:
 4709 0f44 00415355 	 .word 1431519488
 4710              	 .cfi_endproc
 4711              	.LFE198:
 4713              	 .align 1
 4714              	 .global usart_get_writeprotect_status
 4715              	 .syntax unified
 4716              	 .thumb
 4717              	 .thumb_func
 4718              	 .fpu softvfp
 4720              	usart_get_writeprotect_status:
 4721              	.LFB199:
1610:../../../platform/sam/drivers/usart/usart.c **** 
1611:../../../platform/sam/drivers/usart/usart.c **** /**
1612:../../../platform/sam/drivers/usart/usart.c ****  * \brief Get write protect status.
1613:../../../platform/sam/drivers/usart/usart.c ****  *
1614:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1615:../../../platform/sam/drivers/usart/usart.c ****  *
1616:../../../platform/sam/drivers/usart/usart.c ****  * \return 0 if the peripheral is not protected.
1617:../../../platform/sam/drivers/usart/usart.c ****  * \return 16-bit Write Protect Violation Status otherwise.
1618:../../../platform/sam/drivers/usart/usart.c ****  */
1619:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_get_writeprotect_status(Usart *p_usart)
1620:../../../platform/sam/drivers/usart/usart.c **** {
 4722              	 .loc 1 1620 0
 4723              	 .cfi_startproc
 4724              	 
 4725              	 
 4726              	 
 4727 0f48 80B4     	 push {r7}
 4728              	.LCFI447:
 4729              	 .cfi_def_cfa_offset 4
 4730              	 .cfi_offset 7,-4
 4731 0f4a 85B0     	 sub sp,sp,#20
 4732              	.LCFI448:
 4733              	 .cfi_def_cfa_offset 24
 4734 0f4c 00AF     	 add r7,sp,#0
 4735              	.LCFI449:
 4736              	 .cfi_def_cfa_register 7
 4737 0f4e 7860     	 str r0,[r7,#4]
1621:../../../platform/sam/drivers/usart/usart.c **** 	uint32_t reg_value;
1622:../../../platform/sam/drivers/usart/usart.c **** 
1623:../../../platform/sam/drivers/usart/usart.c **** 	reg_value = p_usart->US_WPSR;
 4738              	 .loc 1 1623 0
 4739 0f50 7B68     	 ldr r3,[r7,#4]
 4740 0f52 D3F8E830 	 ldr r3,[r3,#232]
 4741 0f56 FB60     	 str r3,[r7,#12]
1624:../../../platform/sam/drivers/usart/usart.c **** 	if (reg_value & US_WPSR_WPVS) {
 4742              	 .loc 1 1624 0
 4743 0f58 FB68     	 ldr r3,[r7,#12]
 4744 0f5a 03F00103 	 and r3,r3,#1
 4745 0f5e 002B     	 cmp r3,#0
 4746 0f60 03D0     	 beq .L192
1625:../../../platform/sam/drivers/usart/usart.c **** 		return (reg_value & US_WPSR_WPVSRC_Msk) >> US_WPSR_WPVSRC_Pos;
 4747              	 .loc 1 1625 0
 4748 0f62 FB68     	 ldr r3,[r7,#12]
 4749 0f64 1B0A     	 lsrs r3,r3,#8
 4750 0f66 9BB2     	 uxth r3,r3
 4751 0f68 00E0     	 b .L193
 4752              	.L192:
1626:../../../platform/sam/drivers/usart/usart.c **** 	} else {
1627:../../../platform/sam/drivers/usart/usart.c **** 		return 0;
 4753              	 .loc 1 1627 0
 4754 0f6a 0023     	 movs r3,#0
 4755              	.L193:
1628:../../../platform/sam/drivers/usart/usart.c **** 	}
1629:../../../platform/sam/drivers/usart/usart.c **** }
 4756              	 .loc 1 1629 0
 4757 0f6c 1846     	 mov r0,r3
 4758 0f6e 1437     	 adds r7,r7,#20
 4759              	.LCFI450:
 4760              	 .cfi_def_cfa_offset 4
 4761 0f70 BD46     	 mov sp,r7
 4762              	.LCFI451:
 4763              	 .cfi_def_cfa_register 13
 4764              	 
 4765 0f72 80BC     	 pop {r7}
 4766              	.LCFI452:
 4767              	 .cfi_restore 7
 4768              	 .cfi_def_cfa_offset 0
 4769 0f74 7047     	 bx lr
 4770              	 .cfi_endproc
 4771              	.LFE199:
 4773              	 .align 1
 4774              	 .global usart_get_error_number
 4775              	 .syntax unified
 4776              	 .thumb
 4777              	 .thumb_func
 4778              	 .fpu softvfp
 4780              	usart_get_error_number:
 4781              	.LFB200:
1630:../../../platform/sam/drivers/usart/usart.c **** 
1631:../../../platform/sam/drivers/usart/usart.c **** /**
1632:../../../platform/sam/drivers/usart/usart.c ****  * \brief Get the total number of errors that occur during an ISO7816 transfer.
1633:../../../platform/sam/drivers/usart/usart.c ****  *
1634:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1635:../../../platform/sam/drivers/usart/usart.c ****  *
1636:../../../platform/sam/drivers/usart/usart.c ****  * \return The number of errors that occurred.
1637:../../../platform/sam/drivers/usart/usart.c ****  */
1638:../../../platform/sam/drivers/usart/usart.c **** uint8_t usart_get_error_number(Usart *p_usart)
1639:../../../platform/sam/drivers/usart/usart.c **** {
 4782              	 .loc 1 1639 0
 4783              	 .cfi_startproc
 4784              	 
 4785              	 
 4786              	 
 4787 0f76 80B4     	 push {r7}
 4788              	.LCFI453:
 4789              	 .cfi_def_cfa_offset 4
 4790              	 .cfi_offset 7,-4
 4791 0f78 83B0     	 sub sp,sp,#12
 4792              	.LCFI454:
 4793              	 .cfi_def_cfa_offset 16
 4794 0f7a 00AF     	 add r7,sp,#0
 4795              	.LCFI455:
 4796              	 .cfi_def_cfa_register 7
 4797 0f7c 7860     	 str r0,[r7,#4]
1640:../../../platform/sam/drivers/usart/usart.c **** 	return (p_usart->US_NER & US_NER_NB_ERRORS_Msk);
 4798              	 .loc 1 1640 0
 4799 0f7e 7B68     	 ldr r3,[r7,#4]
 4800 0f80 5B6C     	 ldr r3,[r3,#68]
 4801 0f82 DBB2     	 uxtb r3,r3
1641:../../../platform/sam/drivers/usart/usart.c **** }
 4802              	 .loc 1 1641 0
 4803 0f84 1846     	 mov r0,r3
 4804 0f86 0C37     	 adds r7,r7,#12
 4805              	.LCFI456:
 4806              	 .cfi_def_cfa_offset 4
 4807 0f88 BD46     	 mov sp,r7
 4808              	.LCFI457:
 4809              	 .cfi_def_cfa_register 13
 4810              	 
 4811 0f8a 80BC     	 pop {r7}
 4812              	.LCFI458:
 4813              	 .cfi_restore 7
 4814              	 .cfi_def_cfa_offset 0
 4815 0f8c 7047     	 bx lr
 4816              	 .cfi_endproc
 4817              	.LFE200:
 4819              	 .align 1
 4820              	 .global usart_man_set_tx_pre_len
 4821              	 .syntax unified
 4822              	 .thumb
 4823              	 .thumb_func
 4824              	 .fpu softvfp
 4826              	usart_man_set_tx_pre_len:
 4827              	.LFB201:
1642:../../../platform/sam/drivers/usart/usart.c **** 
1643:../../../platform/sam/drivers/usart/usart.c **** #if (SAM3S || SAM4S || SAM3U || SAM3XA || SAM4L || SAM4E || SAM4C || SAM4CP || SAM4CM)
1644:../../../platform/sam/drivers/usart/usart.c **** 
1645:../../../platform/sam/drivers/usart/usart.c **** /**
1646:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure the transmitter preamble length when the Manchester
1647:../../../platform/sam/drivers/usart/usart.c ****  * encode/decode is enabled.
1648:../../../platform/sam/drivers/usart/usart.c ****  *
1649:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1650:../../../platform/sam/drivers/usart/usart.c ****  * \param uc_len The transmitter preamble length, which should be 0 ~ 15.
1651:../../../platform/sam/drivers/usart/usart.c ****  */
1652:../../../platform/sam/drivers/usart/usart.c **** void usart_man_set_tx_pre_len(Usart *p_usart, uint8_t uc_len)
1653:../../../platform/sam/drivers/usart/usart.c **** {
 4828              	 .loc 1 1653 0
 4829              	 .cfi_startproc
 4830              	 
 4831              	 
 4832              	 
 4833 0f8e 80B4     	 push {r7}
 4834              	.LCFI459:
 4835              	 .cfi_def_cfa_offset 4
 4836              	 .cfi_offset 7,-4
 4837 0f90 83B0     	 sub sp,sp,#12
 4838              	.LCFI460:
 4839              	 .cfi_def_cfa_offset 16
 4840 0f92 00AF     	 add r7,sp,#0
 4841              	.LCFI461:
 4842              	 .cfi_def_cfa_register 7
 4843 0f94 7860     	 str r0,[r7,#4]
 4844 0f96 0B46     	 mov r3,r1
 4845 0f98 FB70     	 strb r3,[r7,#3]
1654:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MAN = (p_usart->US_MAN & ~US_MAN_TX_PL_Msk) |
 4846              	 .loc 1 1654 0
 4847 0f9a 7B68     	 ldr r3,[r7,#4]
 4848 0f9c 1B6D     	 ldr r3,[r3,#80]
 4849 0f9e 23F00F02 	 bic r2,r3,#15
1655:../../../platform/sam/drivers/usart/usart.c **** 			US_MAN_TX_PL(uc_len);
 4850              	 .loc 1 1655 0
 4851 0fa2 FB78     	 ldrb r3,[r7,#3]
 4852 0fa4 03F00F03 	 and r3,r3,#15
1654:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MAN = (p_usart->US_MAN & ~US_MAN_TX_PL_Msk) |
 4853              	 .loc 1 1654 0
 4854 0fa8 1A43     	 orrs r2,r2,r3
 4855 0faa 7B68     	 ldr r3,[r7,#4]
 4856 0fac 1A65     	 str r2,[r3,#80]
1656:../../../platform/sam/drivers/usart/usart.c **** }
 4857              	 .loc 1 1656 0
 4858 0fae 00BF     	 nop
 4859 0fb0 0C37     	 adds r7,r7,#12
 4860              	.LCFI462:
 4861              	 .cfi_def_cfa_offset 4
 4862 0fb2 BD46     	 mov sp,r7
 4863              	.LCFI463:
 4864              	 .cfi_def_cfa_register 13
 4865              	 
 4866 0fb4 80BC     	 pop {r7}
 4867              	.LCFI464:
 4868              	 .cfi_restore 7
 4869              	 .cfi_def_cfa_offset 0
 4870 0fb6 7047     	 bx lr
 4871              	 .cfi_endproc
 4872              	.LFE201:
 4874              	 .align 1
 4875              	 .global usart_man_set_tx_pre_pattern
 4876              	 .syntax unified
 4877              	 .thumb
 4878              	 .thumb_func
 4879              	 .fpu softvfp
 4881              	usart_man_set_tx_pre_pattern:
 4882              	.LFB202:
1657:../../../platform/sam/drivers/usart/usart.c **** 
1658:../../../platform/sam/drivers/usart/usart.c **** /**
1659:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure the transmitter preamble pattern when the Manchester
1660:../../../platform/sam/drivers/usart/usart.c ****  * encode/decode is enabled, which should be 0 ~ 3.
1661:../../../platform/sam/drivers/usart/usart.c ****  *
1662:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1663:../../../platform/sam/drivers/usart/usart.c ****  * \param uc_pattern 0 if the preamble is composed of '1's;
1664:../../../platform/sam/drivers/usart/usart.c ****  * 1 if the preamble is composed of '0's;
1665:../../../platform/sam/drivers/usart/usart.c ****  * 2 if the preamble is composed of '01's;
1666:../../../platform/sam/drivers/usart/usart.c ****  * 3 if the preamble is composed of '10's.
1667:../../../platform/sam/drivers/usart/usart.c ****  */
1668:../../../platform/sam/drivers/usart/usart.c **** void usart_man_set_tx_pre_pattern(Usart *p_usart, uint8_t uc_pattern)
1669:../../../platform/sam/drivers/usart/usart.c **** {
 4883              	 .loc 1 1669 0
 4884              	 .cfi_startproc
 4885              	 
 4886              	 
 4887              	 
 4888 0fb8 80B4     	 push {r7}
 4889              	.LCFI465:
 4890              	 .cfi_def_cfa_offset 4
 4891              	 .cfi_offset 7,-4
 4892 0fba 83B0     	 sub sp,sp,#12
 4893              	.LCFI466:
 4894              	 .cfi_def_cfa_offset 16
 4895 0fbc 00AF     	 add r7,sp,#0
 4896              	.LCFI467:
 4897              	 .cfi_def_cfa_register 7
 4898 0fbe 7860     	 str r0,[r7,#4]
 4899 0fc0 0B46     	 mov r3,r1
 4900 0fc2 FB70     	 strb r3,[r7,#3]
1670:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MAN = (p_usart->US_MAN & ~US_MAN_TX_PP_Msk) |
 4901              	 .loc 1 1670 0
 4902 0fc4 7B68     	 ldr r3,[r7,#4]
 4903 0fc6 1B6D     	 ldr r3,[r3,#80]
 4904 0fc8 23F44073 	 bic r3,r3,#768
1671:../../../platform/sam/drivers/usart/usart.c **** 			(uc_pattern << US_MAN_TX_PP_Pos);
 4905              	 .loc 1 1671 0
 4906 0fcc FA78     	 ldrb r2,[r7,#3]
 4907 0fce 1202     	 lsls r2,r2,#8
1670:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MAN = (p_usart->US_MAN & ~US_MAN_TX_PP_Msk) |
 4908              	 .loc 1 1670 0
 4909 0fd0 1A43     	 orrs r2,r2,r3
 4910 0fd2 7B68     	 ldr r3,[r7,#4]
 4911 0fd4 1A65     	 str r2,[r3,#80]
1672:../../../platform/sam/drivers/usart/usart.c **** }
 4912              	 .loc 1 1672 0
 4913 0fd6 00BF     	 nop
 4914 0fd8 0C37     	 adds r7,r7,#12
 4915              	.LCFI468:
 4916              	 .cfi_def_cfa_offset 4
 4917 0fda BD46     	 mov sp,r7
 4918              	.LCFI469:
 4919              	 .cfi_def_cfa_register 13
 4920              	 
 4921 0fdc 80BC     	 pop {r7}
 4922              	.LCFI470:
 4923              	 .cfi_restore 7
 4924              	 .cfi_def_cfa_offset 0
 4925 0fde 7047     	 bx lr
 4926              	 .cfi_endproc
 4927              	.LFE202:
 4929              	 .align 1
 4930              	 .global usart_man_set_tx_polarity
 4931              	 .syntax unified
 4932              	 .thumb
 4933              	 .thumb_func
 4934              	 .fpu softvfp
 4936              	usart_man_set_tx_polarity:
 4937              	.LFB203:
1673:../../../platform/sam/drivers/usart/usart.c **** 
1674:../../../platform/sam/drivers/usart/usart.c **** /**
1675:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure the transmitter Manchester polarity when the Manchester
1676:../../../platform/sam/drivers/usart/usart.c ****  * encode/decode is enabled.
1677:../../../platform/sam/drivers/usart/usart.c ****  *
1678:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1679:../../../platform/sam/drivers/usart/usart.c ****  * \param uc_polarity Indicate the transmitter Manchester polarity, which
1680:../../../platform/sam/drivers/usart/usart.c ****  * should be 0 or 1.
1681:../../../platform/sam/drivers/usart/usart.c ****  */
1682:../../../platform/sam/drivers/usart/usart.c **** void usart_man_set_tx_polarity(Usart *p_usart, uint8_t uc_polarity)
1683:../../../platform/sam/drivers/usart/usart.c **** {
 4938              	 .loc 1 1683 0
 4939              	 .cfi_startproc
 4940              	 
 4941              	 
 4942              	 
 4943 0fe0 80B4     	 push {r7}
 4944              	.LCFI471:
 4945              	 .cfi_def_cfa_offset 4
 4946              	 .cfi_offset 7,-4
 4947 0fe2 83B0     	 sub sp,sp,#12
 4948              	.LCFI472:
 4949              	 .cfi_def_cfa_offset 16
 4950 0fe4 00AF     	 add r7,sp,#0
 4951              	.LCFI473:
 4952              	 .cfi_def_cfa_register 7
 4953 0fe6 7860     	 str r0,[r7,#4]
 4954 0fe8 0B46     	 mov r3,r1
 4955 0fea FB70     	 strb r3,[r7,#3]
1684:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MAN = (p_usart->US_MAN & ~US_MAN_TX_MPOL) |
 4956              	 .loc 1 1684 0
 4957 0fec 7B68     	 ldr r3,[r7,#4]
 4958 0fee 1B6D     	 ldr r3,[r3,#80]
 4959 0ff0 23F48053 	 bic r3,r3,#4096
1685:../../../platform/sam/drivers/usart/usart.c **** 			(uc_polarity << 12);
 4960              	 .loc 1 1685 0
 4961 0ff4 FA78     	 ldrb r2,[r7,#3]
 4962 0ff6 1203     	 lsls r2,r2,#12
1684:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MAN = (p_usart->US_MAN & ~US_MAN_TX_MPOL) |
 4963              	 .loc 1 1684 0
 4964 0ff8 1A43     	 orrs r2,r2,r3
 4965 0ffa 7B68     	 ldr r3,[r7,#4]
 4966 0ffc 1A65     	 str r2,[r3,#80]
1686:../../../platform/sam/drivers/usart/usart.c **** }
 4967              	 .loc 1 1686 0
 4968 0ffe 00BF     	 nop
 4969 1000 0C37     	 adds r7,r7,#12
 4970              	.LCFI474:
 4971              	 .cfi_def_cfa_offset 4
 4972 1002 BD46     	 mov sp,r7
 4973              	.LCFI475:
 4974              	 .cfi_def_cfa_register 13
 4975              	 
 4976 1004 80BC     	 pop {r7}
 4977              	.LCFI476:
 4978              	 .cfi_restore 7
 4979              	 .cfi_def_cfa_offset 0
 4980 1006 7047     	 bx lr
 4981              	 .cfi_endproc
 4982              	.LFE203:
 4984              	 .align 1
 4985              	 .global usart_man_set_rx_pre_len
 4986              	 .syntax unified
 4987              	 .thumb
 4988              	 .thumb_func
 4989              	 .fpu softvfp
 4991              	usart_man_set_rx_pre_len:
 4992              	.LFB204:
1687:../../../platform/sam/drivers/usart/usart.c **** 
1688:../../../platform/sam/drivers/usart/usart.c **** /**
1689:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure the detected receiver preamble length when the Manchester
1690:../../../platform/sam/drivers/usart/usart.c ****  * encode/decode is enabled.
1691:../../../platform/sam/drivers/usart/usart.c ****  *
1692:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1693:../../../platform/sam/drivers/usart/usart.c ****  * \param uc_len The detected receiver preamble length, which should be 0 ~ 15.
1694:../../../platform/sam/drivers/usart/usart.c ****  */
1695:../../../platform/sam/drivers/usart/usart.c **** void usart_man_set_rx_pre_len(Usart *p_usart, uint8_t uc_len)
1696:../../../platform/sam/drivers/usart/usart.c **** {
 4993              	 .loc 1 1696 0
 4994              	 .cfi_startproc
 4995              	 
 4996              	 
 4997              	 
 4998 1008 80B4     	 push {r7}
 4999              	.LCFI477:
 5000              	 .cfi_def_cfa_offset 4
 5001              	 .cfi_offset 7,-4
 5002 100a 83B0     	 sub sp,sp,#12
 5003              	.LCFI478:
 5004              	 .cfi_def_cfa_offset 16
 5005 100c 00AF     	 add r7,sp,#0
 5006              	.LCFI479:
 5007              	 .cfi_def_cfa_register 7
 5008 100e 7860     	 str r0,[r7,#4]
 5009 1010 0B46     	 mov r3,r1
 5010 1012 FB70     	 strb r3,[r7,#3]
1697:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MAN = (p_usart->US_MAN & ~US_MAN_RX_PL_Msk) |
 5011              	 .loc 1 1697 0
 5012 1014 7B68     	 ldr r3,[r7,#4]
 5013 1016 1B6D     	 ldr r3,[r3,#80]
 5014 1018 23F47022 	 bic r2,r3,#983040
1698:../../../platform/sam/drivers/usart/usart.c **** 			US_MAN_RX_PL(uc_len);
 5015              	 .loc 1 1698 0
 5016 101c FB78     	 ldrb r3,[r7,#3]
 5017 101e 1B04     	 lsls r3,r3,#16
 5018 1020 03F47023 	 and r3,r3,#983040
1697:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MAN = (p_usart->US_MAN & ~US_MAN_RX_PL_Msk) |
 5019              	 .loc 1 1697 0
 5020 1024 1A43     	 orrs r2,r2,r3
 5021 1026 7B68     	 ldr r3,[r7,#4]
 5022 1028 1A65     	 str r2,[r3,#80]
1699:../../../platform/sam/drivers/usart/usart.c **** }
 5023              	 .loc 1 1699 0
 5024 102a 00BF     	 nop
 5025 102c 0C37     	 adds r7,r7,#12
 5026              	.LCFI480:
 5027              	 .cfi_def_cfa_offset 4
 5028 102e BD46     	 mov sp,r7
 5029              	.LCFI481:
 5030              	 .cfi_def_cfa_register 13
 5031              	 
 5032 1030 80BC     	 pop {r7}
 5033              	.LCFI482:
 5034              	 .cfi_restore 7
 5035              	 .cfi_def_cfa_offset 0
 5036 1032 7047     	 bx lr
 5037              	 .cfi_endproc
 5038              	.LFE204:
 5040              	 .align 1
 5041              	 .global usart_man_set_rx_pre_pattern
 5042              	 .syntax unified
 5043              	 .thumb
 5044              	 .thumb_func
 5045              	 .fpu softvfp
 5047              	usart_man_set_rx_pre_pattern:
 5048              	.LFB205:
1700:../../../platform/sam/drivers/usart/usart.c **** 
1701:../../../platform/sam/drivers/usart/usart.c **** /**
1702:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure the detected receiver preamble pattern when the Manchester
1703:../../../platform/sam/drivers/usart/usart.c ****  *  encode/decode is enabled, which should be 0 ~ 3.
1704:../../../platform/sam/drivers/usart/usart.c ****  *
1705:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1706:../../../platform/sam/drivers/usart/usart.c ****  * \param uc_pattern 0 if the preamble is composed of '1's;
1707:../../../platform/sam/drivers/usart/usart.c ****  * 1 if the preamble is composed of '0's;
1708:../../../platform/sam/drivers/usart/usart.c ****  * 2 if the preamble is composed of '01's;
1709:../../../platform/sam/drivers/usart/usart.c ****  * 3 if the preamble is composed of '10's.
1710:../../../platform/sam/drivers/usart/usart.c ****  */
1711:../../../platform/sam/drivers/usart/usart.c **** void usart_man_set_rx_pre_pattern(Usart *p_usart, uint8_t uc_pattern)
1712:../../../platform/sam/drivers/usart/usart.c **** {
 5049              	 .loc 1 1712 0
 5050              	 .cfi_startproc
 5051              	 
 5052              	 
 5053              	 
 5054 1034 80B4     	 push {r7}
 5055              	.LCFI483:
 5056              	 .cfi_def_cfa_offset 4
 5057              	 .cfi_offset 7,-4
 5058 1036 83B0     	 sub sp,sp,#12
 5059              	.LCFI484:
 5060              	 .cfi_def_cfa_offset 16
 5061 1038 00AF     	 add r7,sp,#0
 5062              	.LCFI485:
 5063              	 .cfi_def_cfa_register 7
 5064 103a 7860     	 str r0,[r7,#4]
 5065 103c 0B46     	 mov r3,r1
 5066 103e FB70     	 strb r3,[r7,#3]
1713:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MAN = (p_usart->US_MAN & ~US_MAN_RX_PP_Msk) |
 5067              	 .loc 1 1713 0
 5068 1040 7B68     	 ldr r3,[r7,#4]
 5069 1042 1B6D     	 ldr r3,[r3,#80]
 5070 1044 23F04073 	 bic r3,r3,#50331648
1714:../../../platform/sam/drivers/usart/usart.c **** 			(uc_pattern << US_MAN_RX_PP_Pos);
 5071              	 .loc 1 1714 0
 5072 1048 FA78     	 ldrb r2,[r7,#3]
 5073 104a 1206     	 lsls r2,r2,#24
1713:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MAN = (p_usart->US_MAN & ~US_MAN_RX_PP_Msk) |
 5074              	 .loc 1 1713 0
 5075 104c 1A43     	 orrs r2,r2,r3
 5076 104e 7B68     	 ldr r3,[r7,#4]
 5077 1050 1A65     	 str r2,[r3,#80]
1715:../../../platform/sam/drivers/usart/usart.c **** }
 5078              	 .loc 1 1715 0
 5079 1052 00BF     	 nop
 5080 1054 0C37     	 adds r7,r7,#12
 5081              	.LCFI486:
 5082              	 .cfi_def_cfa_offset 4
 5083 1056 BD46     	 mov sp,r7
 5084              	.LCFI487:
 5085              	 .cfi_def_cfa_register 13
 5086              	 
 5087 1058 80BC     	 pop {r7}
 5088              	.LCFI488:
 5089              	 .cfi_restore 7
 5090              	 .cfi_def_cfa_offset 0
 5091 105a 7047     	 bx lr
 5092              	 .cfi_endproc
 5093              	.LFE205:
 5095              	 .align 1
 5096              	 .global usart_man_set_rx_polarity
 5097              	 .syntax unified
 5098              	 .thumb
 5099              	 .thumb_func
 5100              	 .fpu softvfp
 5102              	usart_man_set_rx_polarity:
 5103              	.LFB206:
1716:../../../platform/sam/drivers/usart/usart.c **** 
1717:../../../platform/sam/drivers/usart/usart.c **** /**
1718:../../../platform/sam/drivers/usart/usart.c ****  * \brief Configure the receiver Manchester polarity when the Manchester
1719:../../../platform/sam/drivers/usart/usart.c ****  * encode/decode is enabled.
1720:../../../platform/sam/drivers/usart/usart.c ****  *
1721:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1722:../../../platform/sam/drivers/usart/usart.c ****  * \param uc_polarity Indicate the receiver Manchester polarity, which should
1723:../../../platform/sam/drivers/usart/usart.c ****  * be 0 or 1.
1724:../../../platform/sam/drivers/usart/usart.c ****  */
1725:../../../platform/sam/drivers/usart/usart.c **** void usart_man_set_rx_polarity(Usart *p_usart, uint8_t uc_polarity)
1726:../../../platform/sam/drivers/usart/usart.c **** {
 5104              	 .loc 1 1726 0
 5105              	 .cfi_startproc
 5106              	 
 5107              	 
 5108              	 
 5109 105c 80B4     	 push {r7}
 5110              	.LCFI489:
 5111              	 .cfi_def_cfa_offset 4
 5112              	 .cfi_offset 7,-4
 5113 105e 83B0     	 sub sp,sp,#12
 5114              	.LCFI490:
 5115              	 .cfi_def_cfa_offset 16
 5116 1060 00AF     	 add r7,sp,#0
 5117              	.LCFI491:
 5118              	 .cfi_def_cfa_register 7
 5119 1062 7860     	 str r0,[r7,#4]
 5120 1064 0B46     	 mov r3,r1
 5121 1066 FB70     	 strb r3,[r7,#3]
1727:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MAN = (p_usart->US_MAN & ~US_MAN_RX_MPOL) |
 5122              	 .loc 1 1727 0
 5123 1068 7B68     	 ldr r3,[r7,#4]
 5124 106a 1B6D     	 ldr r3,[r3,#80]
 5125 106c 23F08053 	 bic r3,r3,#268435456
1728:../../../platform/sam/drivers/usart/usart.c **** 			(uc_polarity << 28);
 5126              	 .loc 1 1728 0
 5127 1070 FA78     	 ldrb r2,[r7,#3]
 5128 1072 1207     	 lsls r2,r2,#28
1727:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MAN = (p_usart->US_MAN & ~US_MAN_RX_MPOL) |
 5129              	 .loc 1 1727 0
 5130 1074 1A43     	 orrs r2,r2,r3
 5131 1076 7B68     	 ldr r3,[r7,#4]
 5132 1078 1A65     	 str r2,[r3,#80]
1729:../../../platform/sam/drivers/usart/usart.c **** }
 5133              	 .loc 1 1729 0
 5134 107a 00BF     	 nop
 5135 107c 0C37     	 adds r7,r7,#12
 5136              	.LCFI492:
 5137              	 .cfi_def_cfa_offset 4
 5138 107e BD46     	 mov sp,r7
 5139              	.LCFI493:
 5140              	 .cfi_def_cfa_register 13
 5141              	 
 5142 1080 80BC     	 pop {r7}
 5143              	.LCFI494:
 5144              	 .cfi_restore 7
 5145              	 .cfi_def_cfa_offset 0
 5146 1082 7047     	 bx lr
 5147              	 .cfi_endproc
 5148              	.LFE206:
 5150              	 .align 1
 5151              	 .global usart_man_enable_drift_compensation
 5152              	 .syntax unified
 5153              	 .thumb
 5154              	 .thumb_func
 5155              	 .fpu softvfp
 5157              	usart_man_enable_drift_compensation:
 5158              	.LFB207:
1730:../../../platform/sam/drivers/usart/usart.c **** 
1731:../../../platform/sam/drivers/usart/usart.c **** /**
1732:../../../platform/sam/drivers/usart/usart.c ****  * \brief Enable drift compensation.
1733:../../../platform/sam/drivers/usart/usart.c ****  *
1734:../../../platform/sam/drivers/usart/usart.c ****  * \note The 16X clock mode must be enabled.
1735:../../../platform/sam/drivers/usart/usart.c ****  *
1736:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1737:../../../platform/sam/drivers/usart/usart.c ****  */
1738:../../../platform/sam/drivers/usart/usart.c **** void usart_man_enable_drift_compensation(Usart *p_usart)
1739:../../../platform/sam/drivers/usart/usart.c **** {
 5159              	 .loc 1 1739 0
 5160              	 .cfi_startproc
 5161              	 
 5162              	 
 5163              	 
 5164 1084 80B4     	 push {r7}
 5165              	.LCFI495:
 5166              	 .cfi_def_cfa_offset 4
 5167              	 .cfi_offset 7,-4
 5168 1086 83B0     	 sub sp,sp,#12
 5169              	.LCFI496:
 5170              	 .cfi_def_cfa_offset 16
 5171 1088 00AF     	 add r7,sp,#0
 5172              	.LCFI497:
 5173              	 .cfi_def_cfa_register 7
 5174 108a 7860     	 str r0,[r7,#4]
1740:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MAN |= US_MAN_DRIFT;
 5175              	 .loc 1 1740 0
 5176 108c 7B68     	 ldr r3,[r7,#4]
 5177 108e 1B6D     	 ldr r3,[r3,#80]
 5178 1090 43F08042 	 orr r2,r3,#1073741824
 5179 1094 7B68     	 ldr r3,[r7,#4]
 5180 1096 1A65     	 str r2,[r3,#80]
1741:../../../platform/sam/drivers/usart/usart.c **** }
 5181              	 .loc 1 1741 0
 5182 1098 00BF     	 nop
 5183 109a 0C37     	 adds r7,r7,#12
 5184              	.LCFI498:
 5185              	 .cfi_def_cfa_offset 4
 5186 109c BD46     	 mov sp,r7
 5187              	.LCFI499:
 5188              	 .cfi_def_cfa_register 13
 5189              	 
 5190 109e 80BC     	 pop {r7}
 5191              	.LCFI500:
 5192              	 .cfi_restore 7
 5193              	 .cfi_def_cfa_offset 0
 5194 10a0 7047     	 bx lr
 5195              	 .cfi_endproc
 5196              	.LFE207:
 5198              	 .align 1
 5199              	 .global usart_man_disable_drift_compensation
 5200              	 .syntax unified
 5201              	 .thumb
 5202              	 .thumb_func
 5203              	 .fpu softvfp
 5205              	usart_man_disable_drift_compensation:
 5206              	.LFB208:
1742:../../../platform/sam/drivers/usart/usart.c **** 
1743:../../../platform/sam/drivers/usart/usart.c **** /**
1744:../../../platform/sam/drivers/usart/usart.c ****  * \brief Disable drift compensation.
1745:../../../platform/sam/drivers/usart/usart.c ****  *
1746:../../../platform/sam/drivers/usart/usart.c ****  * \param p_usart Pointer to a USART instance.
1747:../../../platform/sam/drivers/usart/usart.c ****  */
1748:../../../platform/sam/drivers/usart/usart.c **** void usart_man_disable_drift_compensation(Usart *p_usart)
1749:../../../platform/sam/drivers/usart/usart.c **** {
 5207              	 .loc 1 1749 0
 5208              	 .cfi_startproc
 5209              	 
 5210              	 
 5211              	 
 5212 10a2 80B4     	 push {r7}
 5213              	.LCFI501:
 5214              	 .cfi_def_cfa_offset 4
 5215              	 .cfi_offset 7,-4
 5216 10a4 83B0     	 sub sp,sp,#12
 5217              	.LCFI502:
 5218              	 .cfi_def_cfa_offset 16
 5219 10a6 00AF     	 add r7,sp,#0
 5220              	.LCFI503:
 5221              	 .cfi_def_cfa_register 7
 5222 10a8 7860     	 str r0,[r7,#4]
1750:../../../platform/sam/drivers/usart/usart.c **** 	p_usart->US_MAN &= ~US_MAN_DRIFT;
 5223              	 .loc 1 1750 0
 5224 10aa 7B68     	 ldr r3,[r7,#4]
 5225 10ac 1B6D     	 ldr r3,[r3,#80]
 5226 10ae 23F08042 	 bic r2,r3,#1073741824
 5227 10b2 7B68     	 ldr r3,[r7,#4]
 5228 10b4 1A65     	 str r2,[r3,#80]
1751:../../../platform/sam/drivers/usart/usart.c **** }
 5229              	 .loc 1 1751 0
 5230 10b6 00BF     	 nop
 5231 10b8 0C37     	 adds r7,r7,#12
 5232              	.LCFI504:
 5233              	 .cfi_def_cfa_offset 4
 5234 10ba BD46     	 mov sp,r7
 5235              	.LCFI505:
 5236              	 .cfi_def_cfa_register 13
 5237              	 
 5238 10bc 80BC     	 pop {r7}
 5239              	.LCFI506:
 5240              	 .cfi_restore 7
 5241              	 .cfi_def_cfa_offset 0
 5242 10be 7047     	 bx lr
 5243              	 .cfi_endproc
 5244              	.LFE208:
 5246              	 .align 1
 5247              	 .global usart_get_version
 5248              	 .syntax unified
 5249              	 .thumb
 5250              	 .thumb_func
 5251              	 .fpu softvfp
 5253              	usart_get_version:
 5254              	.LFB209:
1752:../../../platform/sam/drivers/usart/usart.c **** 
1753:../../../platform/sam/drivers/usart/usart.c **** #endif
1754:../../../platform/sam/drivers/usart/usart.c **** 
1755:../../../platform/sam/drivers/usart/usart.c **** #if SAM4L
1756:../../../platform/sam/drivers/usart/usart.c **** 
1757:../../../platform/sam/drivers/usart/usart.c **** uint32_t usart_get_version(Usart *p_usart)
1758:../../../platform/sam/drivers/usart/usart.c **** {
 5255              	 .loc 1 1758 0
 5256              	 .cfi_startproc
 5257              	 
 5258              	 
 5259              	 
 5260 10c0 80B4     	 push {r7}
 5261              	.LCFI507:
 5262              	 .cfi_def_cfa_offset 4
 5263              	 .cfi_offset 7,-4
 5264 10c2 83B0     	 sub sp,sp,#12
 5265              	.LCFI508:
 5266              	 .cfi_def_cfa_offset 16
 5267 10c4 00AF     	 add r7,sp,#0
 5268              	.LCFI509:
 5269              	 .cfi_def_cfa_register 7
 5270 10c6 7860     	 str r0,[r7,#4]
1759:../../../platform/sam/drivers/usart/usart.c **** 	return p_usart->US_VERSION;
 5271              	 .loc 1 1759 0
 5272 10c8 7B68     	 ldr r3,[r7,#4]
 5273 10ca D3F8FC30 	 ldr r3,[r3,#252]
1760:../../../platform/sam/drivers/usart/usart.c **** }
 5274              	 .loc 1 1760 0
 5275 10ce 1846     	 mov r0,r3
 5276 10d0 0C37     	 adds r7,r7,#12
 5277              	.LCFI510:
 5278              	 .cfi_def_cfa_offset 4
 5279 10d2 BD46     	 mov sp,r7
 5280              	.LCFI511:
 5281              	 .cfi_def_cfa_register 13
 5282              	 
 5283 10d4 80BC     	 pop {r7}
 5284              	.LCFI512:
 5285              	 .cfi_restore 7
 5286              	 .cfi_def_cfa_offset 0
 5287 10d6 7047     	 bx lr
 5288              	 .cfi_endproc
 5289              	.LFE209:
 5291              	 .section .bss.ul_reg_val.8022,"aw",%nobits
 5292              	 .align 2
 5295              	ul_reg_val.8022:
 5296 0000 00000000 	 .space 4
 5297              	 .section .bss.ul_reg_val.8038,"aw",%nobits
 5298              	 .align 2
 5301              	ul_reg_val.8038:
 5302 0000 00000000 	 .space 4
 5303              	 .section .bss.ul_reg_val.8043,"aw",%nobits
 5304              	 .align 2
 5307              	ul_reg_val.8043:
 5308 0000 00000000 	 .space 4
 5309              	 .section .bss.ul_reg_val.8059,"aw",%nobits
 5310              	 .align 2
 5313              	ul_reg_val.8059:
 5314 0000 00000000 	 .space 4
 5315              	 .section .bss.ul_reg_val.8065,"aw",%nobits
 5316              	 .align 2
 5319              	ul_reg_val.8065:
 5320 0000 00000000 	 .space 4
 5321              	 .section .bss.ul_reg_val.8076,"aw",%nobits
 5322              	 .align 2
 5325              	ul_reg_val.8076:
 5326 0000 00000000 	 .space 4
 5327              	 .text
 5328              	.Letext0:
 5329              	 .file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 5330              	 .file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 5331              	 .file 4 "../../../platform/sam/utils/cmsis/sam4l/include/sam4lc4b.h"
 5332              	 .file 5 "../../../platform/thirdparty/CMSIS/include/core_cm4.h"
 5333              	 .file 6 "../../../platform/sam/utils/cmsis/sam4l/source/templates/system_sam4l.h"
 5334              	 .file 7 "../../../platform/sam/utils/cmsis/sam4l/include/component/component_usart.h"
 5335              	 .file 8 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\lock.h"
 5336              	 .file 9 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_types.h"
 5337              	 .file 10 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 5338              	 .file 11 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\reent.h"
 5339              	 .file 12 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\stdlib.h"
 5340              	 .file 13 "../../../platform/common/utils/interrupt/interrupt_sam_nvic.h"
 5341              	 .file 14 "../../../platform/sam/drivers/usart/usart.h"
DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
    {standard input}:27     .text:00000000 $t
    {standard input}:33     .text:00000000 usart_set_async_baudrate
    {standard input}:147    .text:00000088 usart_set_sync_master_baudrate
    {standard input}:227    .text:000000d8 usart_set_sync_slave_baudrate
    {standard input}:276    .text:000000f6 usart_set_iso7816_clock
    {standard input}:357    .text:0000014a usart_set_spi_master_baudrate
    {standard input}:428    .text:0000018a usart_set_spi_slave_baudrate
    {standard input}:482    .text:000001b4 usart_reset
    {standard input}:4670   .text:00000f28 usart_disable_writeprotect
    {standard input}:2838   .text:00000a9a usart_reset_tx
    {standard input}:3023   .text:00000afc usart_reset_rx
    {standard input}:3300   .text:00000b8e usart_reset_status
    {standard input}:3827   .text:00000cd2 usart_drive_RTS_pin_high
    {standard input}:3735   .text:00000c9e usart_drive_DTR_pin_high
    {standard input}:550    .text:000001fa usart_init_rs232
    {standard input}:646    .text:00000270 $d
    {standard input}:5295   .bss.ul_reg_val.8022:00000000 ul_reg_val.8022
    {standard input}:650    .text:00000274 $t
    {standard input}:657    .text:00000274 usart_init_hw_handshaking
    {standard input}:719    .text:000002ae usart_init_modem
    {standard input}:783    .text:000002f4 $d
    {standard input}:787    .text:000002f8 $t
    {standard input}:794    .text:000002f8 usart_init_sync_master
    {standard input}:891    .text:00000374 $d
    {standard input}:5301   .bss.ul_reg_val.8038:00000000 ul_reg_val.8038
    {standard input}:895    .text:00000378 $t
    {standard input}:902    .text:00000378 usart_init_sync_slave
    {standard input}:989    .text:000003e0 $d
    {standard input}:5307   .bss.ul_reg_val.8043:00000000 ul_reg_val.8043
    {standard input}:993    .text:000003e4 $t
    {standard input}:1000   .text:000003e4 usart_init_rs485
    {standard input}:1062   .text:0000041e usart_init_irda
    {standard input}:1129   .text:00000460 usart_init_iso7816
    {standard input}:1313   .text:00000568 $d
    {standard input}:5313   .bss.ul_reg_val.8059:00000000 ul_reg_val.8059
    {standard input}:1317   .text:0000056c $t
    {standard input}:1324   .text:0000056c usart_init_spi_master
    {standard input}:1404   .text:000005dc $d
    {standard input}:1408   .text:000005ec $t
    {standard input}:1497   .text:00000670 $d
    {standard input}:5319   .bss.ul_reg_val.8065:00000000 ul_reg_val.8065
    {standard input}:1501   .text:00000674 $t
    {standard input}:1508   .text:00000674 usart_init_spi_slave
    {standard input}:1577   .text:000006d0 $d
    {standard input}:1581   .text:000006e0 $t
    {standard input}:1670   .text:00000764 $d
    {standard input}:5325   .bss.ul_reg_val.8076:00000000 ul_reg_val.8076
    {standard input}:1674   .text:00000768 $t
    {standard input}:1681   .text:00000768 usart_init_lin_master
    {standard input}:2931   .text:00000acc usart_enable_rx
    {standard input}:2746   .text:00000a6a usart_enable_tx
    {standard input}:1752   .text:000007b4 usart_init_lin_slave
    {standard input}:1823   .text:00000800 usart_lin_abort_tx
    {standard input}:1869   .text:0000081a usart_lin_send_wakeup_signal
    {standard input}:1915   .text:00000834 usart_lin_set_node_action
    {standard input}:1969   .text:0000085a usart_lin_disable_parity
    {standard input}:2017   .text:00000878 usart_lin_enable_parity
    {standard input}:2065   .text:00000896 usart_lin_disable_checksum
    {standard input}:2113   .text:000008b4 usart_lin_enable_checksum
    {standard input}:2161   .text:000008d2 usart_lin_set_checksum_type
    {standard input}:2216   .text:000008fa usart_lin_set_data_len_mode
    {standard input}:2271   .text:00000922 usart_lin_disable_frame_slot
    {standard input}:2319   .text:00000940 usart_lin_enable_frame_slot
    {standard input}:2367   .text:0000095e usart_lin_set_wakeup_signal_type
    {standard input}:2422   .text:00000986 usart_lin_set_response_data_len
    {standard input}:2478   .text:000009b0 usart_lin_disable_pdc_mode
    {standard input}:2526   .text:000009ce usart_lin_enable_pdc_mode
    {standard input}:2574   .text:000009ec usart_lin_set_tx_identifier
    {standard input}:2628   .text:00000a12 usart_lin_read_identifier
    {standard input}:2674   .text:00000a2a usart_lin_get_data_length
    {standard input}:2792   .text:00000a82 usart_disable_tx
    {standard input}:2884   .text:00000ab2 usart_set_tx_timeguard
    {standard input}:2977   .text:00000ae4 usart_disable_rx
    {standard input}:3069   .text:00000b14 usart_set_rx_timeout
    {standard input}:3116   .text:00000b2e usart_enable_interrupt
    {standard input}:3163   .text:00000b48 usart_disable_interrupt
    {standard input}:3210   .text:00000b62 usart_get_interrupt_mask
    {standard input}:3255   .text:00000b78 usart_get_status
    {standard input}:3346   .text:00000ba8 usart_start_tx_break
    {standard input}:3392   .text:00000bc2 usart_stop_tx_break
    {standard input}:3438   .text:00000bdc usart_start_rx_timeout
    {standard input}:3484   .text:00000bf6 usart_send_address
    {standard input}:4322   .text:00000e1c usart_write
    {standard input}:3551   .text:00000c36 usart_reset_iterations
    {standard input}:3597   .text:00000c50 usart_reset_nack
    {standard input}:3643   .text:00000c6a usart_restart_rx_timeout
    {standard input}:3689   .text:00000c84 usart_drive_DTR_pin_low
    {standard input}:3781   .text:00000cb8 usart_drive_RTS_pin_low
    {standard input}:3873   .text:00000cec usart_spi_force_chip_select
    {standard input}:3919   .text:00000d06 usart_spi_release_chip_select
    {standard input}:3965   .text:00000d20 usart_is_tx_ready
    {standard input}:4016   .text:00000d44 usart_is_tx_empty
    {standard input}:4067   .text:00000d68 usart_is_rx_ready
    {standard input}:4118   .text:00000d8c usart_is_rx_buf_end
    {standard input}:4169   .text:00000db0 usart_is_tx_buf_end
    {standard input}:4220   .text:00000dd4 usart_is_rx_buf_full
    {standard input}:4271   .text:00000df8 usart_is_tx_buf_empty
    {standard input}:4383   .text:00000e4c usart_putchar
    {standard input}:4442   .text:00000e7a usart_write_line
    {standard input}:4498   .text:00000ea6 usart_read
    {standard input}:4560   .text:00000ed8 usart_getchar
    {standard input}:4620   .text:00000f08 usart_enable_writeprotect
    {standard input}:4659   .text:00000f24 $d
    {standard input}:4663   .text:00000f28 $t
    {standard input}:4709   .text:00000f44 $d
    {standard input}:4713   .text:00000f48 $t
    {standard input}:4720   .text:00000f48 usart_get_writeprotect_status
    {standard input}:4780   .text:00000f76 usart_get_error_number
    {standard input}:4826   .text:00000f8e usart_man_set_tx_pre_len
    {standard input}:4881   .text:00000fb8 usart_man_set_tx_pre_pattern
    {standard input}:4936   .text:00000fe0 usart_man_set_tx_polarity
    {standard input}:4991   .text:00001008 usart_man_set_rx_pre_len
    {standard input}:5047   .text:00001034 usart_man_set_rx_pre_pattern
    {standard input}:5102   .text:0000105c usart_man_set_rx_polarity
    {standard input}:5157   .text:00001084 usart_man_enable_drift_compensation
    {standard input}:5205   .text:000010a2 usart_man_disable_drift_compensation
    {standard input}:5253   .text:000010c0 usart_get_version
    {standard input}:5292   .bss.ul_reg_val.8022:00000000 $d
    {standard input}:5298   .bss.ul_reg_val.8038:00000000 $d
    {standard input}:5304   .bss.ul_reg_val.8043:00000000 $d
    {standard input}:5310   .bss.ul_reg_val.8059:00000000 $d
    {standard input}:5316   .bss.ul_reg_val.8065:00000000 $d
    {standard input}:5322   .bss.ul_reg_val.8076:00000000 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
