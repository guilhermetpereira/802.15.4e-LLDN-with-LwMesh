   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "flashcalw.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
  16              	 .align 2
  19              	cpu_irq_critical_section_counter:
  20 0000 00000000 	 .space 4
  21              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
  24              	cpu_irq_prev_interrupt_state:
  25 0000 00       	 .space 1
  26              	 .text
  27              	 .align 1
  28              	 .global flashcalw_get_flash_size
  29              	 .syntax unified
  30              	 .thumb
  31              	 .thumb_func
  32              	 .fpu softvfp
  34              	flashcalw_get_flash_size:
  35              	.LFB181:
  36              	 .file 1 "../../../platform/sam/drivers/flashcalw/flashcalw.c"
   1:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
   2:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \file
   3:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
   4:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief FlashCALW driver for SAM4L.
   5:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
   6:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * Copyright (c) 2012-2013 Atmel Corporation. All rights reserved.
   7:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
   8:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \asf_license_start
   9:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  10:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \page License
  11:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  12:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  15:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  18:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *    and/or other materials provided with the distribution.
  21:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  22:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *    from this software without specific prior written permission.
  24:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  25:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *    Atmel microcontroller product.
  27:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  28:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  40:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \asf_license_stop
  41:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  42:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
  43:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
  44:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #include "flashcalw.h"
  45:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #include "sysclk.h"
  46:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
  47:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /// @cond 0
  48:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**INDENT-OFF**/
  49:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #ifdef __cplusplus
  50:../../../platform/sam/drivers/flashcalw/flashcalw.c **** extern "C" {
  51:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #endif
  52:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**INDENT-ON**/
  53:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /// @endcond
  54:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
  55:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
  56:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \defgroup group_sam_drivers_flashcalw FLASHCALW - FLASH Controller Double-Word
  57:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  58:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * See \ref sam_flashcalw_quickstart.
  59:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  60:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * FLASHCALW interfaces a flash block with the 32-bit internal HSB bus.
  61:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  62:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \{
  63:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
  64:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
  65:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name Flash Properties
  66:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
  67:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
  68:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
  69:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Gets the size of the whole flash array.
  70:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  71:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The size of the whole flash array in Bytes.
  72:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
  73:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_get_flash_size(void)
  74:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
  37              	 .loc 1 74 0
  38              	 .cfi_startproc
  39              	 
  40              	 
  41 0000 80B5     	 push {r7,lr}
  42              	.LCFI0:
  43              	 .cfi_def_cfa_offset 8
  44              	 .cfi_offset 7,-8
  45              	 .cfi_offset 14,-4
  46 0002 88B0     	 sub sp,sp,#32
  47              	.LCFI1:
  48              	 .cfi_def_cfa_offset 40
  49 0004 00AF     	 add r7,sp,#0
  50              	.LCFI2:
  51              	 .cfi_def_cfa_register 7
  75:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	const uint16_t flash_size[(FLASHCALW_FPR_FSZ_Msk >>
  52              	 .loc 1 75 0
  53 0006 3B46     	 mov r3,r7
  54 0008 2022     	 movs r2,#32
  55 000a 0021     	 movs r1,#0
  56 000c 1846     	 mov r0,r3
  57 000e 1A4B     	 ldr r3,.L3
  58 0010 9847     	 blx r3
  59              	.LVL0:
  60 0012 0423     	 movs r3,#4
  61 0014 3B80     	 strh r3,[r7]
  62 0016 0823     	 movs r3,#8
  63 0018 7B80     	 strh r3,[r7,#2]
  64 001a 1023     	 movs r3,#16
  65 001c BB80     	 strh r3,[r7,#4]
  66 001e 2023     	 movs r3,#32
  67 0020 FB80     	 strh r3,[r7,#6]
  68 0022 3023     	 movs r3,#48
  69 0024 3B81     	 strh r3,[r7,#8]
  70 0026 4023     	 movs r3,#64
  71 0028 7B81     	 strh r3,[r7,#10]
  72 002a 6023     	 movs r3,#96
  73 002c BB81     	 strh r3,[r7,#12]
  74 002e 8023     	 movs r3,#128
  75 0030 FB81     	 strh r3,[r7,#14]
  76 0032 C023     	 movs r3,#192
  77 0034 3B82     	 strh r3,[r7,#16]
  78 0036 4FF48073 	 mov r3,#256
  79 003a 7B82     	 strh r3,[r7,#18]
  80 003c 4FF4C073 	 mov r3,#384
  81 0040 BB82     	 strh r3,[r7,#20]
  82 0042 4FF40073 	 mov r3,#512
  83 0046 FB82     	 strh r3,[r7,#22]
  84 0048 4FF44073 	 mov r3,#768
  85 004c 3B83     	 strh r3,[r7,#24]
  86 004e 4FF48063 	 mov r3,#1024
  87 0052 7B83     	 strh r3,[r7,#26]
  88 0054 4FF40063 	 mov r3,#2048
  89 0058 BB83     	 strh r3,[r7,#28]
  76:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	FLASHCALW_FPR_FSZ_Pos) + 1] = {
  77:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		4,
  78:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		8,
  79:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		16,
  80:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		32,
  81:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		48,
  82:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		64,
  83:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		96,
  84:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		128,
  85:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		192,
  86:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		256,
  87:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		384,
  88:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		512,
  89:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		768,
  90:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		1024,
  91:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		2048,
  92:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	};
  93:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((uint32_t)flash_size[(HFLASHC->FLASHCALW_FPR &
  90              	 .loc 1 93 0
  91 005a 084B     	 ldr r3,.L3+4
  92 005c DB68     	 ldr r3,[r3,#12]
  94:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	       FLASHCALW_FPR_FSZ_Msk) >> FLASHCALW_FPR_FSZ_Pos] << 10);
  93              	 .loc 1 94 0
  94 005e 03F00F03 	 and r3,r3,#15
  93:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	       FLASHCALW_FPR_FSZ_Msk) >> FLASHCALW_FPR_FSZ_Pos] << 10);
  95              	 .loc 1 93 0
  96 0062 5B00     	 lsls r3,r3,#1
  97 0064 07F12002 	 add r2,r7,#32
  98 0068 1344     	 add r3,r3,r2
  99 006a 33F8203C 	 ldrh r3,[r3,#-32]
 100              	 .loc 1 94 0
 101 006e 9B02     	 lsls r3,r3,#10
  95:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 102              	 .loc 1 95 0
 103 0070 1846     	 mov r0,r3
 104 0072 2037     	 adds r7,r7,#32
 105              	.LCFI3:
 106              	 .cfi_def_cfa_offset 8
 107 0074 BD46     	 mov sp,r7
 108              	.LCFI4:
 109              	 .cfi_def_cfa_register 13
 110              	 
 111 0076 80BD     	 pop {r7,pc}
 112              	.L4:
 113              	 .align 2
 114              	.L3:
 115 0078 00000000 	 .word memset
 116 007c 00000A40 	 .word 1074397184
 117              	 .cfi_endproc
 118              	.LFE181:
 120              	 .align 1
 121              	 .global flashcalw_get_page_count
 122              	 .syntax unified
 123              	 .thumb
 124              	 .thumb_func
 125              	 .fpu softvfp
 127              	flashcalw_get_page_count:
 128              	.LFB182:
  96:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
  97:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Gets the total number of pages in the flash array.
  98:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
  99:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The total number of pages in the flash array.
 100:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 101:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_get_page_count(void)
 102:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 129              	 .loc 1 102 0
 130              	 .cfi_startproc
 131              	 
 132              	 
 133 0080 80B5     	 push {r7,lr}
 134              	.LCFI5:
 135              	 .cfi_def_cfa_offset 8
 136              	 .cfi_offset 7,-8
 137              	 .cfi_offset 14,-4
 138 0082 00AF     	 add r7,sp,#0
 139              	.LCFI6:
 140              	 .cfi_def_cfa_register 7
 103:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_get_flash_size() / FLASH_PAGE_SIZE;
 141              	 .loc 1 103 0
 142 0084 FFF7FEFF 	 bl flashcalw_get_flash_size
 143 0088 0346     	 mov r3,r0
 144 008a 5B0A     	 lsrs r3,r3,#9
 104:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 145              	 .loc 1 104 0
 146 008c 1846     	 mov r0,r3
 147 008e 80BD     	 pop {r7,pc}
 148              	 .cfi_endproc
 149              	.LFE182:
 151              	 .align 1
 152              	 .global flashcalw_get_page_count_per_region
 153              	 .syntax unified
 154              	 .thumb
 155              	 .thumb_func
 156              	 .fpu softvfp
 158              	flashcalw_get_page_count_per_region:
 159              	.LFB183:
 105:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 106:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Gets the number of pages in each flash region.
 107:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 108:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The number of pages in each flash region.
 109:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 110:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_get_page_count_per_region(void)
 111:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 160              	 .loc 1 111 0
 161              	 .cfi_startproc
 162              	 
 163              	 
 164 0090 80B5     	 push {r7,lr}
 165              	.LCFI7:
 166              	 .cfi_def_cfa_offset 8
 167              	 .cfi_offset 7,-8
 168              	 .cfi_offset 14,-4
 169 0092 00AF     	 add r7,sp,#0
 170              	.LCFI8:
 171              	 .cfi_def_cfa_register 7
 112:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_get_page_count() / FLASH_NB_OF_REGIONS;
 172              	 .loc 1 112 0
 173 0094 FFF7FEFF 	 bl flashcalw_get_page_count
 174 0098 0346     	 mov r3,r0
 175 009a 1B09     	 lsrs r3,r3,#4
 113:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 176              	 .loc 1 113 0
 177 009c 1846     	 mov r0,r3
 178 009e 80BD     	 pop {r7,pc}
 179              	 .cfi_endproc
 180              	.LFE183:
 182              	 .align 1
 183              	 .global flashcalw_get_page_region
 184              	 .syntax unified
 185              	 .thumb
 186              	 .thumb_func
 187              	 .fpu softvfp
 189              	flashcalw_get_page_region:
 190              	.LFB184:
 114:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 115:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Gets the region number of a page.
 116:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 117:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param page_number The page number:
 118:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg \c 0 to <tt>(flashcalw_get_page_count() - 1)</tt>: a page number
 119:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * within the flash array;
 120:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg <tt>< 0</tt>: the current page number.
 121:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 122:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The region number of the specified page.
 123:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 124:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_get_page_region(int32_t page_number)
 125:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 191              	 .loc 1 125 0
 192              	 .cfi_startproc
 193              	 
 194              	 
 195 00a0 90B5     	 push {r4,r7,lr}
 196              	.LCFI9:
 197              	 .cfi_def_cfa_offset 12
 198              	 .cfi_offset 4,-12
 199              	 .cfi_offset 7,-8
 200              	 .cfi_offset 14,-4
 201 00a2 83B0     	 sub sp,sp,#12
 202              	.LCFI10:
 203              	 .cfi_def_cfa_offset 24
 204 00a4 00AF     	 add r7,sp,#0
 205              	.LCFI11:
 206              	 .cfi_def_cfa_register 7
 207 00a6 7860     	 str r0,[r7,#4]
 126:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((page_number >= 0) ? page_number
 127:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			: (int32_t)flashcalw_get_page_number())
 208              	 .loc 1 127 0
 209 00a8 7B68     	 ldr r3,[r7,#4]
 210 00aa 002B     	 cmp r3,#0
 211 00ac 03DA     	 bge .L10
 212              	 .loc 1 127 0 is_stmt 0 discriminator 1
 213 00ae FFF7FEFF 	 bl flashcalw_get_page_number
 214 00b2 0446     	 mov r4,r0
 215 00b4 00E0     	 b .L11
 216              	.L10:
 217              	 .loc 1 127 0 discriminator 2
 218 00b6 7C68     	 ldr r4,[r7,#4]
 219              	.L11:
 128:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/ flashcalw_get_page_count_per_region();
 220              	 .loc 1 128 0 is_stmt 1
 221 00b8 FFF7FEFF 	 bl flashcalw_get_page_count_per_region
 222 00bc 0346     	 mov r3,r0
 223 00be B4FBF3F3 	 udiv r3,r4,r3
 129:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 224              	 .loc 1 129 0
 225 00c2 1846     	 mov r0,r3
 226 00c4 0C37     	 adds r7,r7,#12
 227              	.LCFI12:
 228              	 .cfi_def_cfa_offset 12
 229 00c6 BD46     	 mov sp,r7
 230              	.LCFI13:
 231              	 .cfi_def_cfa_register 13
 232              	 
 233 00c8 90BD     	 pop {r4,r7,pc}
 234              	 .cfi_endproc
 235              	.LFE184:
 237              	 .align 1
 238              	 .global flashcalw_get_region_first_page_number
 239              	 .syntax unified
 240              	 .thumb
 241              	 .thumb_func
 242              	 .fpu softvfp
 244              	flashcalw_get_region_first_page_number:
 245              	.LFB185:
 130:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 131:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Gets the number of the first page of a region.
 132:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 133:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param region The region number: \c 0 to <tt>(FLASHCALW_REGIONS - 1)</tt>.
 134:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 135:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The number of the first page of the specified region.
 136:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 137:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_get_region_first_page_number(uint32_t region)
 138:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 246              	 .loc 1 138 0
 247              	 .cfi_startproc
 248              	 
 249              	 
 250 00ca 80B5     	 push {r7,lr}
 251              	.LCFI14:
 252              	 .cfi_def_cfa_offset 8
 253              	 .cfi_offset 7,-8
 254              	 .cfi_offset 14,-4
 255 00cc 82B0     	 sub sp,sp,#8
 256              	.LCFI15:
 257              	 .cfi_def_cfa_offset 16
 258 00ce 00AF     	 add r7,sp,#0
 259              	.LCFI16:
 260              	 .cfi_def_cfa_register 7
 261 00d0 7860     	 str r0,[r7,#4]
 139:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return region * flashcalw_get_page_count_per_region();
 262              	 .loc 1 139 0
 263 00d2 FFF7FEFF 	 bl flashcalw_get_page_count_per_region
 264 00d6 0246     	 mov r2,r0
 265 00d8 7B68     	 ldr r3,[r7,#4]
 266 00da 03FB02F3 	 mul r3,r3,r2
 140:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 267              	 .loc 1 140 0
 268 00de 1846     	 mov r0,r3
 269 00e0 0837     	 adds r7,r7,#8
 270              	.LCFI17:
 271              	 .cfi_def_cfa_offset 8
 272 00e2 BD46     	 mov sp,r7
 273              	.LCFI18:
 274              	 .cfi_def_cfa_register 13
 275              	 
 276 00e4 80BD     	 pop {r7,pc}
 277              	 .cfi_endproc
 278              	.LFE185:
 280              	 .align 1
 281              	 .global flashcalw_get_wait_state
 282              	 .syntax unified
 283              	 .thumb
 284              	 .thumb_func
 285              	 .fpu softvfp
 287              	flashcalw_get_wait_state:
 288              	.LFB186:
 141:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 142:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @}
 143:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 144:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name FLASHC Control
 145:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 146:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
 147:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 148:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Gets the number of wait states of flash read accesses.
 149:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 150:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The number of wait states of flash read accesses.
 151:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 152:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_get_wait_state(void)
 153:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 289              	 .loc 1 153 0
 290              	 .cfi_startproc
 291              	 
 292              	 
 293              	 
 294 00e6 80B4     	 push {r7}
 295              	.LCFI19:
 296              	 .cfi_def_cfa_offset 4
 297              	 .cfi_offset 7,-4
 298 00e8 00AF     	 add r7,sp,#0
 299              	.LCFI20:
 300              	 .cfi_def_cfa_register 7
 154:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (HFLASHC->FLASHCALW_FCR & FLASHCALW_FCR_FWS ? 1 : 0);
 301              	 .loc 1 154 0
 302 00ea 064B     	 ldr r3,.L17
 303 00ec 1B68     	 ldr r3,[r3]
 304 00ee 03F04003 	 and r3,r3,#64
 305 00f2 002B     	 cmp r3,#0
 306 00f4 14BF     	 ite ne
 307 00f6 0123     	 movne r3,#1
 308 00f8 0023     	 moveq r3,#0
 309 00fa DBB2     	 uxtb r3,r3
 155:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 310              	 .loc 1 155 0
 311 00fc 1846     	 mov r0,r3
 312 00fe BD46     	 mov sp,r7
 313              	.LCFI21:
 314              	 .cfi_def_cfa_register 13
 315              	 
 316 0100 80BC     	 pop {r7}
 317              	.LCFI22:
 318              	 .cfi_restore 7
 319              	 .cfi_def_cfa_offset 0
 320 0102 7047     	 bx lr
 321              	.L18:
 322              	 .align 2
 323              	.L17:
 324 0104 00000A40 	 .word 1074397184
 325              	 .cfi_endproc
 326              	.LFE186:
 328              	 .align 1
 329              	 .global flashcalw_set_wait_state
 330              	 .syntax unified
 331              	 .thumb
 332              	 .thumb_func
 333              	 .fpu softvfp
 335              	flashcalw_set_wait_state:
 336              	.LFB187:
 156:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 157:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Sets the number of wait states of flash read accesses.
 158:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 159:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param wait_state The number of wait states of flash read accesses: \c 0 to
 160:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *                   \c 1.
 161:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 162:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_set_wait_state(uint32_t wait_state)
 163:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 337              	 .loc 1 163 0
 338              	 .cfi_startproc
 339              	 
 340              	 
 341              	 
 342 0108 80B4     	 push {r7}
 343              	.LCFI23:
 344              	 .cfi_def_cfa_offset 4
 345              	 .cfi_offset 7,-4
 346 010a 83B0     	 sub sp,sp,#12
 347              	.LCFI24:
 348              	 .cfi_def_cfa_offset 16
 349 010c 00AF     	 add r7,sp,#0
 350              	.LCFI25:
 351              	 .cfi_def_cfa_register 7
 352 010e 7860     	 str r0,[r7,#4]
 164:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HFLASHC->FLASHCALW_FCR = (HFLASHC->FLASHCALW_FCR & ~FLASHCALW_FCR_FWS)
 353              	 .loc 1 164 0
 354 0110 0849     	 ldr r1,.L22
 355 0112 084B     	 ldr r3,.L22
 356 0114 1B68     	 ldr r3,[r3]
 357 0116 23F04002 	 bic r2,r3,#64
 165:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			| (wait_state ? FLASHCALW_FCR_FWS_1 :
 358              	 .loc 1 165 0
 359 011a 7B68     	 ldr r3,[r7,#4]
 360 011c 002B     	 cmp r3,#0
 361 011e 01D0     	 beq .L20
 362              	 .loc 1 165 0 is_stmt 0 discriminator 1
 363 0120 4023     	 movs r3,#64
 364 0122 00E0     	 b .L21
 365              	.L20:
 366              	 .loc 1 165 0 discriminator 2
 367 0124 0023     	 movs r3,#0
 368              	.L21:
 369              	 .loc 1 165 0 discriminator 4
 370 0126 1343     	 orrs r3,r3,r2
 164:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HFLASHC->FLASHCALW_FCR = (HFLASHC->FLASHCALW_FCR & ~FLASHCALW_FCR_FWS)
 371              	 .loc 1 164 0 is_stmt 1 discriminator 4
 372 0128 0B60     	 str r3,[r1]
 166:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			FLASHCALW_FCR_FWS_0);
 167:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 373              	 .loc 1 167 0 discriminator 4
 374 012a 00BF     	 nop
 375 012c 0C37     	 adds r7,r7,#12
 376              	.LCFI26:
 377              	 .cfi_def_cfa_offset 4
 378 012e BD46     	 mov sp,r7
 379              	.LCFI27:
 380              	 .cfi_def_cfa_register 13
 381              	 
 382 0130 80BC     	 pop {r7}
 383              	.LCFI28:
 384              	 .cfi_restore 7
 385              	 .cfi_def_cfa_offset 0
 386 0132 7047     	 bx lr
 387              	.L23:
 388              	 .align 2
 389              	.L22:
 390 0134 00000A40 	 .word 1074397184
 391              	 .cfi_endproc
 392              	.LFE187:
 394              	 .align 1
 395              	 .global flashcalw_set_flash_waitstate_and_readmode
 396              	 .syntax unified
 397              	 .thumb
 398              	 .thumb_func
 399              	 .fpu softvfp
 401              	flashcalw_set_flash_waitstate_and_readmode:
 402              	.LFB188:
 168:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 169:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #define FLASH_FWS_0_MAX_FREQ           CHIP_FREQ_FWS_0
 170:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #define FLASH_FWS_1_MAX_FREQ           CHIP_FREQ_FWS_1
 171:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #define FLASH_HSEN_FWS_0_MAX_FREQ      CHIP_FREQ_FLASH_HSEN_FWS_0
 172:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #define FLASH_HSEN_FWS_1_MAX_FREQ      CHIP_FREQ_FLASH_HSEN_FWS_1
 173:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 174:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Depending on the CPU frequency, on the Power Scaling mode and on the
 175:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * Fast Wakeup mode, set the wait states of flash read accesses and enable or
 176:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * disable the High speed read mode.
 177:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 178:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param cpu_f_hz The CPU frequency
 179:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param ps_value Power Scaling mode value (0, 1)
 180:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param is_fwu_enabled (boolean), Is fast wakeup mode enabled or not
 181:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 182:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_set_flash_waitstate_and_readmode(uint32_t cpu_f_hz,
 183:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		uint32_t ps_value, bool is_fwu_enabled)
 184:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 403              	 .loc 1 184 0
 404              	 .cfi_startproc
 405              	 
 406              	 
 407 0138 80B5     	 push {r7,lr}
 408              	.LCFI29:
 409              	 .cfi_def_cfa_offset 8
 410              	 .cfi_offset 7,-8
 411              	 .cfi_offset 14,-4
 412 013a 84B0     	 sub sp,sp,#16
 413              	.LCFI30:
 414              	 .cfi_def_cfa_offset 24
 415 013c 00AF     	 add r7,sp,#0
 416              	.LCFI31:
 417              	 .cfi_def_cfa_register 7
 418 013e F860     	 str r0,[r7,#12]
 419 0140 B960     	 str r1,[r7,#8]
 420 0142 1346     	 mov r3,r2
 421 0144 FB71     	 strb r3,[r7,#7]
 185:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #ifdef CONFIG_FLASH_READ_MODE_HIGH_SPEED_ENABLE
 186:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	UNUSED(ps_value);
 187:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	UNUSED(is_fwu_enabled);
 188:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 189:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	if (cpu_f_hz > FLASH_FREQ_PS2_FWS_0_MAX_FREQ) { /* > 24MHz */
 190:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Set a wait-state. */
 191:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_set_wait_state(1);
 192:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	} else {
 193:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* No wait-state. */
 194:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_set_wait_state(0);
 195:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 196:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 197:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Enable the high-speed read mode. */
 198:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_HSEN, -1);
 199:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #else
 200:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	if (ps_value == 0) {
 422              	 .loc 1 200 0
 423 0146 BB68     	 ldr r3,[r7,#8]
 424 0148 002B     	 cmp r3,#0
 425 014a 32D1     	 bne .L25
 201:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		if (cpu_f_hz > FLASH_FREQ_PS0_FWS_0_MAX_FREQ) {
 426              	 .loc 1 201 0
 427 014c FB68     	 ldr r3,[r7,#12]
 428 014e 234A     	 ldr r2,.L35
 429 0150 9342     	 cmp r3,r2
 430 0152 15D9     	 bls .L26
 202:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			// > 18MHz
 203:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			if (cpu_f_hz <= FLASH_FREQ_PS0_FWS_1_MAX_FREQ) {
 431              	 .loc 1 203 0
 432 0154 FB68     	 ldr r3,[r7,#12]
 433 0156 224A     	 ldr r2,.L35+4
 434 0158 9342     	 cmp r3,r2
 435 015a 08D8     	 bhi .L27
 204:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				// <= 36MHz
 205:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* Set a wait-state, disable the high-speed read
 206:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * mode. */
 207:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_set_wait_state(1);
 436              	 .loc 1 207 0
 437 015c 0120     	 movs r0,#1
 438 015e FFF7FEFF 	 bl flashcalw_set_wait_state
 208:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_issue_command(
 439              	 .loc 1 208 0
 440 0162 4FF0FF31 	 mov r1,#-1
 441 0166 1120     	 movs r0,#17
 442 0168 FFF7FEFF 	 bl flashcalw_issue_command
 209:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						FLASHCALW_FCMD_CMD_HSDIS, -1);
 210:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			} else {
 211:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				// > 36 MHz
 212:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* Set a wait-state, enable the high-speed read
 213:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				mode. */
 214:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_set_wait_state(1);
 215:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_issue_command(FLASHCALW_FCMD_CMD_HSEN,
 216:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						-1);
 217:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
 218:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		} else { // <= 18MHz
 219:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			if((is_fwu_enabled == true) &&
 220:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				(cpu_f_hz <= FLASH_FREQ_PS1_FWS_1_FWU_MAX_FREQ))
 221:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			{
 222:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				// <= 12MHz
 223:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* Set a wait-state, disable the high-speed read
 224:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				mode. */
 225:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_set_wait_state(1);
 226:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_issue_command(
 227:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						FLASHCALW_FCMD_CMD_HSDIS, -1);
 228:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			} else {
 229:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* No wait-state, disable the high-speed read
 230:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				mode */
 231:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_set_wait_state(0);
 232:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_issue_command(
 233:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					FLASHCALW_FCMD_CMD_HSDIS, -1);
 234:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
 235:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
 236:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	} else { /* ps_value == 1 */
 237:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		if (cpu_f_hz > FLASH_FREQ_PS1_FWS_0_MAX_FREQ) { /* > 8MHz */
 238:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Set a wait-state. */
 239:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			flashcalw_set_wait_state(1);
 240:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		} else {
 241:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* No wait-state. */
 242:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			flashcalw_set_wait_state(0);
 243:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
 244:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 245:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Disable the high-speed read mode. */
 246:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_issue_command(FLASHCALW_FCMD_CMD_HSDIS, -1);
 247:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 248:../../../platform/sam/drivers/flashcalw/flashcalw.c **** #endif
 249:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 443              	 .loc 1 249 0
 444 016c 31E0     	 b .L34
 445              	.L27:
 214:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_issue_command(FLASHCALW_FCMD_CMD_HSEN,
 446              	 .loc 1 214 0
 447 016e 0120     	 movs r0,#1
 448 0170 FFF7FEFF 	 bl flashcalw_set_wait_state
 215:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						-1);
 449              	 .loc 1 215 0
 450 0174 4FF0FF31 	 mov r1,#-1
 451 0178 1020     	 movs r0,#16
 452 017a FFF7FEFF 	 bl flashcalw_issue_command
 453              	 .loc 1 249 0
 454 017e 28E0     	 b .L34
 455              	.L26:
 219:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				(cpu_f_hz <= FLASH_FREQ_PS1_FWS_1_FWU_MAX_FREQ))
 456              	 .loc 1 219 0
 457 0180 FB79     	 ldrb r3,[r7,#7]
 458 0182 002B     	 cmp r3,#0
 459 0184 0CD0     	 beq .L30
 219:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				(cpu_f_hz <= FLASH_FREQ_PS1_FWS_1_FWU_MAX_FREQ))
 460              	 .loc 1 219 0 is_stmt 0 discriminator 1
 461 0186 FB68     	 ldr r3,[r7,#12]
 462 0188 164A     	 ldr r2,.L35+8
 463 018a 9342     	 cmp r3,r2
 464 018c 08D8     	 bhi .L30
 225:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_issue_command(
 465              	 .loc 1 225 0 is_stmt 1
 466 018e 0120     	 movs r0,#1
 467 0190 FFF7FEFF 	 bl flashcalw_set_wait_state
 226:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						FLASHCALW_FCMD_CMD_HSDIS, -1);
 468              	 .loc 1 226 0
 469 0194 4FF0FF31 	 mov r1,#-1
 470 0198 1120     	 movs r0,#17
 471 019a FFF7FEFF 	 bl flashcalw_issue_command
 472              	 .loc 1 249 0
 473 019e 18E0     	 b .L34
 474              	.L30:
 231:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_issue_command(
 475              	 .loc 1 231 0
 476 01a0 0020     	 movs r0,#0
 477 01a2 FFF7FEFF 	 bl flashcalw_set_wait_state
 232:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					FLASHCALW_FCMD_CMD_HSDIS, -1);
 478              	 .loc 1 232 0
 479 01a6 4FF0FF31 	 mov r1,#-1
 480 01aa 1120     	 movs r0,#17
 481 01ac FFF7FEFF 	 bl flashcalw_issue_command
 482              	 .loc 1 249 0
 483 01b0 0FE0     	 b .L34
 484              	.L25:
 237:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Set a wait-state. */
 485              	 .loc 1 237 0
 486 01b2 FB68     	 ldr r3,[r7,#12]
 487 01b4 0C4A     	 ldr r2,.L35+12
 488 01b6 9342     	 cmp r3,r2
 489 01b8 03D9     	 bls .L32
 239:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		} else {
 490              	 .loc 1 239 0
 491 01ba 0120     	 movs r0,#1
 492 01bc FFF7FEFF 	 bl flashcalw_set_wait_state
 493 01c0 02E0     	 b .L33
 494              	.L32:
 242:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
 495              	 .loc 1 242 0
 496 01c2 0020     	 movs r0,#0
 497 01c4 FFF7FEFF 	 bl flashcalw_set_wait_state
 498              	.L33:
 246:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 499              	 .loc 1 246 0
 500 01c8 4FF0FF31 	 mov r1,#-1
 501 01cc 1120     	 movs r0,#17
 502 01ce FFF7FEFF 	 bl flashcalw_issue_command
 503              	.L34:
 504              	 .loc 1 249 0
 505 01d2 00BF     	 nop
 506 01d4 1037     	 adds r7,r7,#16
 507              	.LCFI32:
 508              	 .cfi_def_cfa_offset 8
 509 01d6 BD46     	 mov sp,r7
 510              	.LCFI33:
 511              	 .cfi_def_cfa_register 13
 512              	 
 513 01d8 80BD     	 pop {r7,pc}
 514              	.L36:
 515 01da 00BF     	 .align 2
 516              	.L35:
 517 01dc 80A81201 	 .word 18000000
 518 01e0 00512502 	 .word 36000000
 519 01e4 001BB700 	 .word 12000000
 520 01e8 00127A00 	 .word 8000000
 521              	 .cfi_endproc
 522              	.LFE188:
 524              	 .align 1
 525              	 .global flashcalw_is_ready_int_enabled
 526              	 .syntax unified
 527              	 .thumb
 528              	 .thumb_func
 529              	 .fpu softvfp
 531              	flashcalw_is_ready_int_enabled:
 532              	.LFB189:
 250:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 251:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether the Flash Ready interrupt is enabled.
 252:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 253:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the Flash Ready interrupt is enabled.
 254:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 255:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_ready_int_enabled(void)
 256:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 533              	 .loc 1 256 0
 534              	 .cfi_startproc
 535              	 
 536              	 
 537              	 
 538 01ec 80B4     	 push {r7}
 539              	.LCFI34:
 540              	 .cfi_def_cfa_offset 4
 541              	 .cfi_offset 7,-4
 542 01ee 00AF     	 add r7,sp,#0
 543              	.LCFI35:
 544              	 .cfi_def_cfa_register 7
 257:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FCR & FLASHCALW_FCR_FRDY) != 0);
 545              	 .loc 1 257 0
 546 01f0 064B     	 ldr r3,.L39
 547 01f2 1B68     	 ldr r3,[r3]
 548 01f4 03F00103 	 and r3,r3,#1
 549 01f8 002B     	 cmp r3,#0
 550 01fa 14BF     	 ite ne
 551 01fc 0123     	 movne r3,#1
 552 01fe 0023     	 moveq r3,#0
 553 0200 DBB2     	 uxtb r3,r3
 258:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 554              	 .loc 1 258 0
 555 0202 1846     	 mov r0,r3
 556 0204 BD46     	 mov sp,r7
 557              	.LCFI36:
 558              	 .cfi_def_cfa_register 13
 559              	 
 560 0206 80BC     	 pop {r7}
 561              	.LCFI37:
 562              	 .cfi_restore 7
 563              	 .cfi_def_cfa_offset 0
 564 0208 7047     	 bx lr
 565              	.L40:
 566 020a 00BF     	 .align 2
 567              	.L39:
 568 020c 00000A40 	 .word 1074397184
 569              	 .cfi_endproc
 570              	.LFE189:
 572              	 .align 1
 573              	 .global flashcalw_enable_ready_int
 574              	 .syntax unified
 575              	 .thumb
 576              	 .thumb_func
 577              	 .fpu softvfp
 579              	flashcalw_enable_ready_int:
 580              	.LFB190:
 259:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 260:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Enables or disables the Flash Ready interrupt.
 261:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 262:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param enable Whether to enable the Flash Ready interrupt: \c true or
 263:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *               \c false.
 264:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 265:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_enable_ready_int(bool enable)
 266:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 581              	 .loc 1 266 0
 582              	 .cfi_startproc
 583              	 
 584              	 
 585              	 
 586 0210 80B4     	 push {r7}
 587              	.LCFI38:
 588              	 .cfi_def_cfa_offset 4
 589              	 .cfi_offset 7,-4
 590 0212 83B0     	 sub sp,sp,#12
 591              	.LCFI39:
 592              	 .cfi_def_cfa_offset 16
 593 0214 00AF     	 add r7,sp,#0
 594              	.LCFI40:
 595              	 .cfi_def_cfa_register 7
 596 0216 0346     	 mov r3,r0
 597 0218 FB71     	 strb r3,[r7,#7]
 267:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HFLASHC->FLASHCALW_FCR
 268:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		&= ((enable &
 598              	 .loc 1 268 0
 599 021a 0649     	 ldr r1,.L42
 600 021c 054B     	 ldr r3,.L42
 601 021e 1A68     	 ldr r2,[r3]
 602 0220 FB79     	 ldrb r3,[r7,#7]
 269:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			FLASHCALW_FCR_FRDY) | (~FLASHCALW_FCR_FRDY));
 603              	 .loc 1 269 0
 604 0222 63F00103 	 orn r3,r3,#1
 268:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			FLASHCALW_FCR_FRDY) | (~FLASHCALW_FCR_FRDY));
 605              	 .loc 1 268 0
 606 0226 1340     	 ands r3,r3,r2
 607 0228 0B60     	 str r3,[r1]
 270:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 608              	 .loc 1 270 0
 609 022a 00BF     	 nop
 610 022c 0C37     	 adds r7,r7,#12
 611              	.LCFI41:
 612              	 .cfi_def_cfa_offset 4
 613 022e BD46     	 mov sp,r7
 614              	.LCFI42:
 615              	 .cfi_def_cfa_register 13
 616              	 
 617 0230 80BC     	 pop {r7}
 618              	.LCFI43:
 619              	 .cfi_restore 7
 620              	 .cfi_def_cfa_offset 0
 621 0232 7047     	 bx lr
 622              	.L43:
 623              	 .align 2
 624              	.L42:
 625 0234 00000A40 	 .word 1074397184
 626              	 .cfi_endproc
 627              	.LFE190:
 629              	 .align 1
 630              	 .global flashcalw_is_lock_error_int_enabled
 631              	 .syntax unified
 632              	 .thumb
 633              	 .thumb_func
 634              	 .fpu softvfp
 636              	flashcalw_is_lock_error_int_enabled:
 637              	.LFB191:
 271:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 272:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether the Lock Error interrupt is enabled.
 273:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 274:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the Lock Error interrupt is enabled.
 275:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 276:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_lock_error_int_enabled(void)
 277:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 638              	 .loc 1 277 0
 639              	 .cfi_startproc
 640              	 
 641              	 
 642              	 
 643 0238 80B4     	 push {r7}
 644              	.LCFI44:
 645              	 .cfi_def_cfa_offset 4
 646              	 .cfi_offset 7,-4
 647 023a 00AF     	 add r7,sp,#0
 648              	.LCFI45:
 649              	 .cfi_def_cfa_register 7
 278:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FCR & FLASHCALW_FCR_LOCKE) != 0);
 650              	 .loc 1 278 0
 651 023c 064B     	 ldr r3,.L46
 652 023e 1B68     	 ldr r3,[r3]
 653 0240 03F00403 	 and r3,r3,#4
 654 0244 002B     	 cmp r3,#0
 655 0246 14BF     	 ite ne
 656 0248 0123     	 movne r3,#1
 657 024a 0023     	 moveq r3,#0
 658 024c DBB2     	 uxtb r3,r3
 279:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 659              	 .loc 1 279 0
 660 024e 1846     	 mov r0,r3
 661 0250 BD46     	 mov sp,r7
 662              	.LCFI46:
 663              	 .cfi_def_cfa_register 13
 664              	 
 665 0252 80BC     	 pop {r7}
 666              	.LCFI47:
 667              	 .cfi_restore 7
 668              	 .cfi_def_cfa_offset 0
 669 0254 7047     	 bx lr
 670              	.L47:
 671 0256 00BF     	 .align 2
 672              	.L46:
 673 0258 00000A40 	 .word 1074397184
 674              	 .cfi_endproc
 675              	.LFE191:
 677              	 .align 1
 678              	 .global flashcalw_enable_lock_error_int
 679              	 .syntax unified
 680              	 .thumb
 681              	 .thumb_func
 682              	 .fpu softvfp
 684              	flashcalw_enable_lock_error_int:
 685              	.LFB192:
 280:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 281:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Enables or disables the Lock Error interrupt.
 282:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 283:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param enable Whether to enable the Lock Error interrupt: \c true or
 284:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *               \c false.
 285:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 286:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_enable_lock_error_int(bool enable)
 287:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 686              	 .loc 1 287 0
 687              	 .cfi_startproc
 688              	 
 689              	 
 690              	 
 691 025c 80B4     	 push {r7}
 692              	.LCFI48:
 693              	 .cfi_def_cfa_offset 4
 694              	 .cfi_offset 7,-4
 695 025e 83B0     	 sub sp,sp,#12
 696              	.LCFI49:
 697              	 .cfi_def_cfa_offset 16
 698 0260 00AF     	 add r7,sp,#0
 699              	.LCFI50:
 700              	 .cfi_def_cfa_register 7
 701 0262 0346     	 mov r3,r0
 702 0264 FB71     	 strb r3,[r7,#7]
 288:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HFLASHC->FLASHCALW_FCR
 289:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		&= ((enable &
 703              	 .loc 1 289 0
 704 0266 0649     	 ldr r1,.L49
 705 0268 054B     	 ldr r3,.L49
 706 026a 1A68     	 ldr r2,[r3]
 290:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			FLASHCALW_FCR_LOCKE) | (~FLASHCALW_FCR_LOCKE));
 707              	 .loc 1 290 0
 708 026c FB79     	 ldrb r3,[r7,#7]
 709 026e 63F00403 	 orn r3,r3,#4
 289:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			FLASHCALW_FCR_LOCKE) | (~FLASHCALW_FCR_LOCKE));
 710              	 .loc 1 289 0
 711 0272 1340     	 ands r3,r3,r2
 712 0274 0B60     	 str r3,[r1]
 291:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 713              	 .loc 1 291 0
 714 0276 00BF     	 nop
 715 0278 0C37     	 adds r7,r7,#12
 716              	.LCFI51:
 717              	 .cfi_def_cfa_offset 4
 718 027a BD46     	 mov sp,r7
 719              	.LCFI52:
 720              	 .cfi_def_cfa_register 13
 721              	 
 722 027c 80BC     	 pop {r7}
 723              	.LCFI53:
 724              	 .cfi_restore 7
 725              	 .cfi_def_cfa_offset 0
 726 027e 7047     	 bx lr
 727              	.L50:
 728              	 .align 2
 729              	.L49:
 730 0280 00000A40 	 .word 1074397184
 731              	 .cfi_endproc
 732              	.LFE192:
 734              	 .align 1
 735              	 .global flashcalw_is_prog_error_int_enabled
 736              	 .syntax unified
 737              	 .thumb
 738              	 .thumb_func
 739              	 .fpu softvfp
 741              	flashcalw_is_prog_error_int_enabled:
 742              	.LFB193:
 292:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 293:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether the Programming Error interrupt is enabled.
 294:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 295:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the Programming Error interrupt is enabled.
 296:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 297:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_prog_error_int_enabled(void)
 298:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 743              	 .loc 1 298 0
 744              	 .cfi_startproc
 745              	 
 746              	 
 747              	 
 748 0284 80B4     	 push {r7}
 749              	.LCFI54:
 750              	 .cfi_def_cfa_offset 4
 751              	 .cfi_offset 7,-4
 752 0286 00AF     	 add r7,sp,#0
 753              	.LCFI55:
 754              	 .cfi_def_cfa_register 7
 299:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FCR & FLASHCALW_FCR_PROGE) != 0);
 755              	 .loc 1 299 0
 756 0288 064B     	 ldr r3,.L53
 757 028a 1B68     	 ldr r3,[r3]
 758 028c 03F00803 	 and r3,r3,#8
 759 0290 002B     	 cmp r3,#0
 760 0292 14BF     	 ite ne
 761 0294 0123     	 movne r3,#1
 762 0296 0023     	 moveq r3,#0
 763 0298 DBB2     	 uxtb r3,r3
 300:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 764              	 .loc 1 300 0
 765 029a 1846     	 mov r0,r3
 766 029c BD46     	 mov sp,r7
 767              	.LCFI56:
 768              	 .cfi_def_cfa_register 13
 769              	 
 770 029e 80BC     	 pop {r7}
 771              	.LCFI57:
 772              	 .cfi_restore 7
 773              	 .cfi_def_cfa_offset 0
 774 02a0 7047     	 bx lr
 775              	.L54:
 776 02a2 00BF     	 .align 2
 777              	.L53:
 778 02a4 00000A40 	 .word 1074397184
 779              	 .cfi_endproc
 780              	.LFE193:
 782              	 .align 1
 783              	 .global flashcalw_enable_prog_error_int
 784              	 .syntax unified
 785              	 .thumb
 786              	 .thumb_func
 787              	 .fpu softvfp
 789              	flashcalw_enable_prog_error_int:
 790              	.LFB194:
 301:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 302:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Enables or disables the Programming Error interrupt.
 303:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 304:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param enable Whether to enable the Programming Error interrupt: \c true or
 305:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *               \c false.
 306:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 307:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_enable_prog_error_int(bool enable)
 308:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 791              	 .loc 1 308 0
 792              	 .cfi_startproc
 793              	 
 794              	 
 795              	 
 796 02a8 80B4     	 push {r7}
 797              	.LCFI58:
 798              	 .cfi_def_cfa_offset 4
 799              	 .cfi_offset 7,-4
 800 02aa 83B0     	 sub sp,sp,#12
 801              	.LCFI59:
 802              	 .cfi_def_cfa_offset 16
 803 02ac 00AF     	 add r7,sp,#0
 804              	.LCFI60:
 805              	 .cfi_def_cfa_register 7
 806 02ae 0346     	 mov r3,r0
 807 02b0 FB71     	 strb r3,[r7,#7]
 309:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HFLASHC->FLASHCALW_FCR &= ((enable &
 808              	 .loc 1 309 0
 809 02b2 0649     	 ldr r1,.L56
 810 02b4 054B     	 ldr r3,.L56
 811 02b6 1A68     	 ldr r2,[r3]
 310:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			FLASHCALW_FCR_PROGE) | (~FLASHCALW_FCR_PROGE));
 812              	 .loc 1 310 0
 813 02b8 FB79     	 ldrb r3,[r7,#7]
 814 02ba 63F00803 	 orn r3,r3,#8
 309:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HFLASHC->FLASHCALW_FCR &= ((enable &
 815              	 .loc 1 309 0
 816 02be 1340     	 ands r3,r3,r2
 817 02c0 0B60     	 str r3,[r1]
 311:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 818              	 .loc 1 311 0
 819 02c2 00BF     	 nop
 820 02c4 0C37     	 adds r7,r7,#12
 821              	.LCFI61:
 822              	 .cfi_def_cfa_offset 4
 823 02c6 BD46     	 mov sp,r7
 824              	.LCFI62:
 825              	 .cfi_def_cfa_register 13
 826              	 
 827 02c8 80BC     	 pop {r7}
 828              	.LCFI63:
 829              	 .cfi_restore 7
 830              	 .cfi_def_cfa_offset 0
 831 02ca 7047     	 bx lr
 832              	.L57:
 833              	 .align 2
 834              	.L56:
 835 02cc 00000A40 	 .word 1074397184
 836              	 .cfi_endproc
 837              	.LFE194:
 839              	 .align 1
 840              	 .global flashcalw_is_ready
 841              	 .syntax unified
 842              	 .thumb
 843              	 .thumb_func
 844              	 .fpu softvfp
 846              	flashcalw_is_ready:
 847              	.LFB195:
 312:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 313:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @}
 314:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 315:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name FLASHCALW Status
 316:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 317:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
 318:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 319:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether the FLASHCALW is ready to run a new command.
 320:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 321:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the FLASHCALW is ready to run a new command.
 322:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 323:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_ready(void)
 324:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 848              	 .loc 1 324 0
 849              	 .cfi_startproc
 850              	 
 851              	 
 852              	 
 853 02d0 80B4     	 push {r7}
 854              	.LCFI64:
 855              	 .cfi_def_cfa_offset 4
 856              	 .cfi_offset 7,-4
 857 02d2 00AF     	 add r7,sp,#0
 858              	.LCFI65:
 859              	 .cfi_def_cfa_register 7
 325:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FSR & FLASHCALW_FSR_FRDY) != 0);
 860              	 .loc 1 325 0
 861 02d4 064B     	 ldr r3,.L60
 862 02d6 9B68     	 ldr r3,[r3,#8]
 863 02d8 03F00103 	 and r3,r3,#1
 864 02dc 002B     	 cmp r3,#0
 865 02de 14BF     	 ite ne
 866 02e0 0123     	 movne r3,#1
 867 02e2 0023     	 moveq r3,#0
 868 02e4 DBB2     	 uxtb r3,r3
 326:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 869              	 .loc 1 326 0
 870 02e6 1846     	 mov r0,r3
 871 02e8 BD46     	 mov sp,r7
 872              	.LCFI66:
 873              	 .cfi_def_cfa_register 13
 874              	 
 875 02ea 80BC     	 pop {r7}
 876              	.LCFI67:
 877              	 .cfi_restore 7
 878              	 .cfi_def_cfa_offset 0
 879 02ec 7047     	 bx lr
 880              	.L61:
 881 02ee 00BF     	 .align 2
 882              	.L60:
 883 02f0 00000A40 	 .word 1074397184
 884              	 .cfi_endproc
 885              	.LFE195:
 887              	 .align 1
 888              	 .global flashcalw_default_wait_until_ready
 889              	 .syntax unified
 890              	 .thumb
 891              	 .thumb_func
 892              	 .fpu softvfp
 894              	flashcalw_default_wait_until_ready:
 895              	.LFB196:
 327:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 328:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Waits actively until the FLASHCALW is ready to run a new command.
 329:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 330:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * This is the default function assigned to \ref flashcalw_wait_until_ready.
 331:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 332:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_default_wait_until_ready(void)
 333:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 896              	 .loc 1 333 0
 897              	 .cfi_startproc
 898              	 
 899              	 
 900 02f4 80B5     	 push {r7,lr}
 901              	.LCFI68:
 902              	 .cfi_def_cfa_offset 8
 903              	 .cfi_offset 7,-8
 904              	 .cfi_offset 14,-4
 905 02f6 00AF     	 add r7,sp,#0
 906              	.LCFI69:
 907              	 .cfi_def_cfa_register 7
 334:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	while (!flashcalw_is_ready()) {
 908              	 .loc 1 334 0
 909 02f8 00BF     	 nop
 910              	.L63:
 911              	 .loc 1 334 0 is_stmt 0 discriminator 1
 912 02fa FFF7FEFF 	 bl flashcalw_is_ready
 913 02fe 0346     	 mov r3,r0
 914 0300 83F00103 	 eor r3,r3,#1
 915 0304 DBB2     	 uxtb r3,r3
 916 0306 002B     	 cmp r3,#0
 917 0308 F7D1     	 bne .L63
 335:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 336:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 918              	 .loc 1 336 0 is_stmt 1
 919 030a 00BF     	 nop
 920 030c 80BD     	 pop {r7,pc}
 921              	 .cfi_endproc
 922              	.LFE196:
 924              	 .global flashcalw_wait_until_ready
 925              	 .section .data.flashcalw_wait_until_ready,"aw",%progbits
 926              	 .align 2
 929              	flashcalw_wait_until_ready:
 930 0000 00000000 	 .word flashcalw_default_wait_until_ready
 931              	 .text
 932              	 .align 1
 933              	 .syntax unified
 934              	 .thumb
 935              	 .thumb_func
 936              	 .fpu softvfp
 938              	flashcalw_get_error_status:
 939              	.LFB197:
 337:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 338:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
 339:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Pointer to the function used by the driver when it needs to wait until
 340:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * the FLASHCALW is ready to run a new command.
 341:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 342:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * The default function is \ref flashcalw_default_wait_until_ready.
 343:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * The user may change this pointer to use another implementation.
 344:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 345:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void(*volatile flashcalw_wait_until_ready) (void)
 346:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	= flashcalw_default_wait_until_ready;
 347:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 348:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
 349:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \internal
 350:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Gets the error status of the FLASHCALW.
 351:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 352:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The error status of the FLASHCALW built up from
 353:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         \c FLASHCALW_FSR_LOCKE and \c FLASHCALW_FSR_PROGE.
 354:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 355:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning This hardware error status is cleared by all functions reading the
 356:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          Flash Status Register (FSR). This function is therefore not part of
 357:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          the driver's API which instead presents \ref flashcalw_is_lock_error
 358:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          and \ref flashcalw_is_programming_error.
 359:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 360:../../../platform/sam/drivers/flashcalw/flashcalw.c **** static uint32_t flashcalw_get_error_status(void)
 361:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 940              	 .loc 1 361 0
 941              	 .cfi_startproc
 942              	 
 943              	 
 944              	 
 945 030e 80B4     	 push {r7}
 946              	.LCFI70:
 947              	 .cfi_def_cfa_offset 4
 948              	 .cfi_offset 7,-4
 949 0310 00AF     	 add r7,sp,#0
 950              	.LCFI71:
 951              	 .cfi_def_cfa_register 7
 362:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return HFLASHC->FLASHCALW_FSR &
 952              	 .loc 1 362 0
 953 0312 044B     	 ldr r3,.L66
 954 0314 9B68     	 ldr r3,[r3,#8]
 955 0316 03F00C03 	 and r3,r3,#12
 363:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	       (FLASHCALW_FSR_LOCKE | FLASHCALW_FSR_PROGE);
 364:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 956              	 .loc 1 364 0
 957 031a 1846     	 mov r0,r3
 958 031c BD46     	 mov sp,r7
 959              	.LCFI72:
 960              	 .cfi_def_cfa_register 13
 961              	 
 962 031e 80BC     	 pop {r7}
 963              	.LCFI73:
 964              	 .cfi_restore 7
 965              	 .cfi_def_cfa_offset 0
 966 0320 7047     	 bx lr
 967              	.L67:
 968 0322 00BF     	 .align 2
 969              	.L66:
 970 0324 00000A40 	 .word 1074397184
 971              	 .cfi_endproc
 972              	.LFE197:
 974              	 .section .bss.flashcalw_error_status,"aw",%nobits
 975              	 .align 2
 978              	flashcalw_error_status:
 979 0000 00000000 	 .space 4
 980              	 .text
 981              	 .align 1
 982              	 .global flashcalw_is_lock_error
 983              	 .syntax unified
 984              	 .thumb
 985              	 .thumb_func
 986              	 .fpu softvfp
 988              	flashcalw_is_lock_error:
 989              	.LFB198:
 365:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 366:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
 367:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \internal
 368:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Sticky error status of the FLASHCALW.
 369:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 370:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * This variable is updated by functions that issue FLASHCALW commands. It
 371:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * contains the cumulated FLASHCALW error status of all the FLASHCALW commands
 372:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * issued by a function.
 373:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 374:../../../platform/sam/drivers/flashcalw/flashcalw.c **** static uint32_t flashcalw_error_status = 0;
 375:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 376:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether a Lock Error has occurred during the last function
 377:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         called that issued one or more FLASHCALW commands.
 378:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 379:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether a Lock Error has occurred during the last function called
 380:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         that issued one or more FLASHCALW commands.
 381:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 382:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_lock_error(void)
 383:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 990              	 .loc 1 383 0
 991              	 .cfi_startproc
 992              	 
 993              	 
 994              	 
 995 0328 80B4     	 push {r7}
 996              	.LCFI74:
 997              	 .cfi_def_cfa_offset 4
 998              	 .cfi_offset 7,-4
 999 032a 00AF     	 add r7,sp,#0
 1000              	.LCFI75:
 1001              	 .cfi_def_cfa_register 7
 384:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((flashcalw_error_status & FLASHCALW_FSR_LOCKE) != 0);
 1002              	 .loc 1 384 0
 1003 032c 064B     	 ldr r3,.L70
 1004 032e 1B68     	 ldr r3,[r3]
 1005 0330 03F00403 	 and r3,r3,#4
 1006 0334 002B     	 cmp r3,#0
 1007 0336 14BF     	 ite ne
 1008 0338 0123     	 movne r3,#1
 1009 033a 0023     	 moveq r3,#0
 1010 033c DBB2     	 uxtb r3,r3
 385:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1011              	 .loc 1 385 0
 1012 033e 1846     	 mov r0,r3
 1013 0340 BD46     	 mov sp,r7
 1014              	.LCFI76:
 1015              	 .cfi_def_cfa_register 13
 1016              	 
 1017 0342 80BC     	 pop {r7}
 1018              	.LCFI77:
 1019              	 .cfi_restore 7
 1020              	 .cfi_def_cfa_offset 0
 1021 0344 7047     	 bx lr
 1022              	.L71:
 1023 0346 00BF     	 .align 2
 1024              	.L70:
 1025 0348 00000000 	 .word flashcalw_error_status
 1026              	 .cfi_endproc
 1027              	.LFE198:
 1029              	 .align 1
 1030              	 .global flashcalw_is_programming_error
 1031              	 .syntax unified
 1032              	 .thumb
 1033              	 .thumb_func
 1034              	 .fpu softvfp
 1036              	flashcalw_is_programming_error:
 1037              	.LFB199:
 386:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 387:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether a Programming Error has occurred during the last
 388:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         function called that issued one or more FLASHCALW commands.
 389:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 390:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether a Programming Error has occurred during the last function
 391:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         called that issued one or more FLASHCALW commands.
 392:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 393:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_programming_error(void)
 394:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1038              	 .loc 1 394 0
 1039              	 .cfi_startproc
 1040              	 
 1041              	 
 1042              	 
 1043 034c 80B4     	 push {r7}
 1044              	.LCFI78:
 1045              	 .cfi_def_cfa_offset 4
 1046              	 .cfi_offset 7,-4
 1047 034e 00AF     	 add r7,sp,#0
 1048              	.LCFI79:
 1049              	 .cfi_def_cfa_register 7
 395:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((flashcalw_error_status & FLASHCALW_FSR_PROGE) != 0);
 1050              	 .loc 1 395 0
 1051 0350 064B     	 ldr r3,.L74
 1052 0352 1B68     	 ldr r3,[r3]
 1053 0354 03F00803 	 and r3,r3,#8
 1054 0358 002B     	 cmp r3,#0
 1055 035a 14BF     	 ite ne
 1056 035c 0123     	 movne r3,#1
 1057 035e 0023     	 moveq r3,#0
 1058 0360 DBB2     	 uxtb r3,r3
 396:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1059              	 .loc 1 396 0
 1060 0362 1846     	 mov r0,r3
 1061 0364 BD46     	 mov sp,r7
 1062              	.LCFI80:
 1063              	 .cfi_def_cfa_register 13
 1064              	 
 1065 0366 80BC     	 pop {r7}
 1066              	.LCFI81:
 1067              	 .cfi_restore 7
 1068              	 .cfi_def_cfa_offset 0
 1069 0368 7047     	 bx lr
 1070              	.L75:
 1071 036a 00BF     	 .align 2
 1072              	.L74:
 1073 036c 00000000 	 .word flashcalw_error_status
 1074              	 .cfi_endproc
 1075              	.LFE199:
 1077              	 .align 1
 1078              	 .global flashcalw_get_command
 1079              	 .syntax unified
 1080              	 .thumb
 1081              	 .thumb_func
 1082              	 .fpu softvfp
 1084              	flashcalw_get_command:
 1085              	.LFB200:
 397:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 398:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @}
 399:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 400:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name FLASHCALW Command Control
 401:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 402:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
 403:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 404:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Gets the last issued FLASHCALW command.
 405:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 406:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The last issued FLASHCALW command.
 407:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 408:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_get_command(void)
 409:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1086              	 .loc 1 409 0
 1087              	 .cfi_startproc
 1088              	 
 1089              	 
 1090              	 
 1091 0370 80B4     	 push {r7}
 1092              	.LCFI82:
 1093              	 .cfi_def_cfa_offset 4
 1094              	 .cfi_offset 7,-4
 1095 0372 00AF     	 add r7,sp,#0
 1096              	.LCFI83:
 1097              	 .cfi_def_cfa_register 7
 410:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (HFLASHC->FLASHCALW_FCMD & FLASHCALW_FCMD_CMD_Msk);
 1098              	 .loc 1 410 0
 1099 0374 034B     	 ldr r3,.L78
 1100 0376 5B68     	 ldr r3,[r3,#4]
 1101 0378 03F03F03 	 and r3,r3,#63
 411:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1102              	 .loc 1 411 0
 1103 037c 1846     	 mov r0,r3
 1104 037e BD46     	 mov sp,r7
 1105              	.LCFI84:
 1106              	 .cfi_def_cfa_register 13
 1107              	 
 1108 0380 80BC     	 pop {r7}
 1109              	.LCFI85:
 1110              	 .cfi_restore 7
 1111              	 .cfi_def_cfa_offset 0
 1112 0382 7047     	 bx lr
 1113              	.L79:
 1114              	 .align 2
 1115              	.L78:
 1116 0384 00000A40 	 .word 1074397184
 1117              	 .cfi_endproc
 1118              	.LFE200:
 1120              	 .align 1
 1121              	 .global flashcalw_get_page_number
 1122              	 .syntax unified
 1123              	 .thumb
 1124              	 .thumb_func
 1125              	 .fpu softvfp
 1127              	flashcalw_get_page_number:
 1128              	.LFB201:
 412:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 413:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Gets the current FLASHCALW page number.
 414:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 415:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The current FLASHCALW page number.
 416:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 417:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_get_page_number(void)
 418:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1129              	 .loc 1 418 0
 1130              	 .cfi_startproc
 1131              	 
 1132              	 
 1133              	 
 1134 0388 80B4     	 push {r7}
 1135              	.LCFI86:
 1136              	 .cfi_def_cfa_offset 4
 1137              	 .cfi_offset 7,-4
 1138 038a 00AF     	 add r7,sp,#0
 1139              	.LCFI87:
 1140              	 .cfi_def_cfa_register 7
 419:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FCMD & FLASHCALW_FCMD_PAGEN_Msk)
 1141              	 .loc 1 419 0
 1142 038c 034B     	 ldr r3,.L82
 1143 038e 5B68     	 ldr r3,[r3,#4]
 420:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			>> FLASHCALW_FCMD_PAGEN_Pos);
 1144              	 .loc 1 420 0
 1145 0390 1B0A     	 lsrs r3,r3,#8
 1146 0392 9BB2     	 uxth r3,r3
 421:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1147              	 .loc 1 421 0
 1148 0394 1846     	 mov r0,r3
 1149 0396 BD46     	 mov sp,r7
 1150              	.LCFI88:
 1151              	 .cfi_def_cfa_register 13
 1152              	 
 1153 0398 80BC     	 pop {r7}
 1154              	.LCFI89:
 1155              	 .cfi_restore 7
 1156              	 .cfi_def_cfa_offset 0
 1157 039a 7047     	 bx lr
 1158              	.L83:
 1159              	 .align 2
 1160              	.L82:
 1161 039c 00000A40 	 .word 1074397184
 1162              	 .cfi_endproc
 1163              	.LFE201:
 1165              	 .align 1
 1166              	 .global flashcalw_issue_command
 1167              	 .syntax unified
 1168              	 .thumb
 1169              	 .thumb_func
 1170              	 .fpu softvfp
 1172              	flashcalw_issue_command:
 1173              	.LFB202:
 422:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 423:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Issues a FLASHCALW command.
 424:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 425:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param command The command: \c FLASHCALW_FCMD_CMD_x.
 426:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param page_number The page number to apply the command to:
 427:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg \c 0 to <tt>(flashcalw_get_page_count() - 1)</tt>: a page number
 428:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *        within the flash array;
 429:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg <tt>< 0</tt>: use this to apply the command to the current page number
 430:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *        or if the command does not apply to any page number;
 431:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg this argument may have other meanings according to the command. See
 432:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *        the FLASHCALW chapter of the MCU datasheet.
 433:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 434:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the command violates the protection
 435:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          mechanism.
 436:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 437:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Programming Error is issued if the command is invalid.
 438:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 439:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 440:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 441:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 442:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_issue_command(uint32_t command, int page_number)
 443:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1174              	 .loc 1 443 0
 1175              	 .cfi_startproc
 1176              	 
 1177              	 
 1178 03a0 80B5     	 push {r7,lr}
 1179              	.LCFI90:
 1180              	 .cfi_def_cfa_offset 8
 1181              	 .cfi_offset 7,-8
 1182              	 .cfi_offset 14,-4
 1183 03a2 84B0     	 sub sp,sp,#16
 1184              	.LCFI91:
 1185              	 .cfi_def_cfa_offset 24
 1186 03a4 00AF     	 add r7,sp,#0
 1187              	.LCFI92:
 1188              	 .cfi_def_cfa_register 7
 1189 03a6 7860     	 str r0,[r7,#4]
 1190 03a8 3960     	 str r1,[r7]
 444:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t tempo;
 445:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 446:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_wait_until_ready();
 1191              	 .loc 1 446 0
 1192 03aa 174B     	 ldr r3,.L87
 1193 03ac 1B68     	 ldr r3,[r3]
 1194 03ae 9847     	 blx r3
 1195              	.LVL1:
 447:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	tempo = HFLASHC->FLASHCALW_FCMD;
 1196              	 .loc 1 447 0
 1197 03b0 164B     	 ldr r3,.L87+4
 1198 03b2 5B68     	 ldr r3,[r3,#4]
 1199 03b4 FB60     	 str r3,[r7,#12]
 448:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Clear the command bitfield. */
 449:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	tempo &= ~FLASHCALW_FCMD_CMD_Msk;
 1200              	 .loc 1 449 0
 1201 03b6 FB68     	 ldr r3,[r7,#12]
 1202 03b8 23F03F03 	 bic r3,r3,#63
 1203 03bc FB60     	 str r3,[r7,#12]
 450:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	if (page_number >= 0) {
 1204              	 .loc 1 450 0
 1205 03be 3B68     	 ldr r3,[r7]
 1206 03c0 002B     	 cmp r3,#0
 1207 03c2 0BDB     	 blt .L85
 451:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		tempo = (FLASHCALW_FCMD_KEY_KEY
 452:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				| FLASHCALW_FCMD_PAGEN(page_number) | command);
 1208              	 .loc 1 452 0
 1209 03c4 3B68     	 ldr r3,[r7]
 1210 03c6 1B02     	 lsls r3,r3,#8
 1211 03c8 23F07F43 	 bic r3,r3,#-16777216
 1212 03cc 23F0FF03 	 bic r3,r3,#255
 1213 03d0 7A68     	 ldr r2,[r7,#4]
 1214 03d2 1343     	 orrs r3,r3,r2
 451:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		tempo = (FLASHCALW_FCMD_KEY_KEY
 1215              	 .loc 1 451 0
 1216 03d4 43F02543 	 orr r3,r3,#-1526726656
 1217 03d8 FB60     	 str r3,[r7,#12]
 1218 03da 05E0     	 b .L86
 1219              	.L85:
 453:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	} else {
 454:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		tempo |= (FLASHCALW_FCMD_KEY_KEY | command);
 1220              	 .loc 1 454 0
 1221 03dc 7A68     	 ldr r2,[r7,#4]
 1222 03de FB68     	 ldr r3,[r7,#12]
 1223 03e0 1343     	 orrs r3,r3,r2
 1224 03e2 43F02543 	 orr r3,r3,#-1526726656
 1225 03e6 FB60     	 str r3,[r7,#12]
 1226              	.L86:
 455:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 456:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 457:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HFLASHC->FLASHCALW_FCMD = tempo;
 1227              	 .loc 1 457 0
 1228 03e8 084A     	 ldr r2,.L87+4
 1229 03ea FB68     	 ldr r3,[r7,#12]
 1230 03ec 5360     	 str r3,[r2,#4]
 458:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = flashcalw_get_error_status();
 1231              	 .loc 1 458 0
 1232 03ee FFF78EFF 	 bl flashcalw_get_error_status
 1233 03f2 0246     	 mov r2,r0
 1234 03f4 064B     	 ldr r3,.L87+8
 1235 03f6 1A60     	 str r2,[r3]
 459:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_wait_until_ready();
 1236              	 .loc 1 459 0
 1237 03f8 034B     	 ldr r3,.L87
 1238 03fa 1B68     	 ldr r3,[r3]
 1239 03fc 9847     	 blx r3
 1240              	.LVL2:
 460:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1241              	 .loc 1 460 0
 1242 03fe 00BF     	 nop
 1243 0400 1037     	 adds r7,r7,#16
 1244              	.LCFI93:
 1245              	 .cfi_def_cfa_offset 8
 1246 0402 BD46     	 mov sp,r7
 1247              	.LCFI94:
 1248              	 .cfi_def_cfa_register 13
 1249              	 
 1250 0404 80BD     	 pop {r7,pc}
 1251              	.L88:
 1252 0406 00BF     	 .align 2
 1253              	.L87:
 1254 0408 00000000 	 .word flashcalw_wait_until_ready
 1255 040c 00000A40 	 .word 1074397184
 1256 0410 00000000 	 .word flashcalw_error_status
 1257              	 .cfi_endproc
 1258              	.LFE202:
 1260              	 .align 1
 1261              	 .global flashcalw_no_operation
 1262              	 .syntax unified
 1263              	 .thumb
 1264              	 .thumb_func
 1265              	 .fpu softvfp
 1267              	flashcalw_no_operation:
 1268              	.LFB203:
 461:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 462:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @}
 463:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 464:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name FLASHCALW Global Commands
 465:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 466:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
 467:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 468:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Issues a No Operation command to the FLASHCALW.
 469:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 470:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 471:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 472:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 473:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_no_operation(void)
 474:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1269              	 .loc 1 474 0
 1270              	 .cfi_startproc
 1271              	 
 1272              	 
 1273 0414 80B5     	 push {r7,lr}
 1274              	.LCFI95:
 1275              	 .cfi_def_cfa_offset 8
 1276              	 .cfi_offset 7,-8
 1277              	 .cfi_offset 14,-4
 1278 0416 00AF     	 add r7,sp,#0
 1279              	.LCFI96:
 1280              	 .cfi_def_cfa_register 7
 475:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_NOP, -1);
 1281              	 .loc 1 475 0
 1282 0418 4FF0FF31 	 mov r1,#-1
 1283 041c 0020     	 movs r0,#0
 1284 041e FFF7FEFF 	 bl flashcalw_issue_command
 476:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1285              	 .loc 1 476 0
 1286 0422 00BF     	 nop
 1287 0424 80BD     	 pop {r7,pc}
 1288              	 .cfi_endproc
 1289              	.LFE203:
 1291              	 .align 1
 1292              	 .global flashcalw_erase_all
 1293              	 .syntax unified
 1294              	 .thumb
 1295              	 .thumb_func
 1296              	 .fpu softvfp
 1298              	flashcalw_erase_all:
 1299              	.LFB204:
 477:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 478:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Issues an Erase All command to the FLASHCALW.
 479:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 480:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * This command erases all bits in the flash array, the general-purpose fuse
 481:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * bits and the Security bit. The User page is not erased.
 482:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 483:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * This command also ensures that all volatile memories, such as register file
 484:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * and RAMs, are erased before the Security bit is erased, i.e. deactivated.
 485:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 486:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if at least one region is locked or the
 487:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          bootloader protection is active.
 488:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 489:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 490:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 491:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 492:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note An erase operation can only set bits.
 493:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 494:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_erase_all(void)
 495:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1300              	 .loc 1 495 0
 1301              	 .cfi_startproc
 1302              	 
 1303              	 
 1304 0426 80B5     	 push {r7,lr}
 1305              	.LCFI97:
 1306              	 .cfi_def_cfa_offset 8
 1307              	 .cfi_offset 7,-8
 1308              	 .cfi_offset 14,-4
 1309 0428 00AF     	 add r7,sp,#0
 1310              	.LCFI98:
 1311              	 .cfi_def_cfa_register 7
 496:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_EA, -1);
 1312              	 .loc 1 496 0
 1313 042a 4FF0FF31 	 mov r1,#-1
 1314 042e 0620     	 movs r0,#6
 1315 0430 FFF7FEFF 	 bl flashcalw_issue_command
 497:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1316              	 .loc 1 497 0
 1317 0434 00BF     	 nop
 1318 0436 80BD     	 pop {r7,pc}
 1319              	 .cfi_endproc
 1320              	.LFE204:
 1322              	 .align 1
 1323              	 .global flashcalw_is_security_bit_active
 1324              	 .syntax unified
 1325              	 .thumb
 1326              	 .thumb_func
 1327              	 .fpu softvfp
 1329              	flashcalw_is_security_bit_active:
 1330              	.LFB205:
 498:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 499:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @}
 500:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 501:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name FLASHCALW Protection Mechanisms
 502:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 503:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
 504:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 505:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether the Security bit is active.
 506:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 507:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the Security bit is active.
 508:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 509:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_security_bit_active(void)
 510:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1331              	 .loc 1 510 0
 1332              	 .cfi_startproc
 1333              	 
 1334              	 
 1335              	 
 1336 0438 80B4     	 push {r7}
 1337              	.LCFI99:
 1338              	 .cfi_def_cfa_offset 4
 1339              	 .cfi_offset 7,-4
 1340 043a 00AF     	 add r7,sp,#0
 1341              	.LCFI100:
 1342              	 .cfi_def_cfa_register 7
 511:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FSR & FLASHCALW_FSR_SECURITY) != 0);
 1343              	 .loc 1 511 0
 1344 043c 064B     	 ldr r3,.L93
 1345 043e 9B68     	 ldr r3,[r3,#8]
 1346 0440 03F01003 	 and r3,r3,#16
 1347 0444 002B     	 cmp r3,#0
 1348 0446 14BF     	 ite ne
 1349 0448 0123     	 movne r3,#1
 1350 044a 0023     	 moveq r3,#0
 1351 044c DBB2     	 uxtb r3,r3
 512:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1352              	 .loc 1 512 0
 1353 044e 1846     	 mov r0,r3
 1354 0450 BD46     	 mov sp,r7
 1355              	.LCFI101:
 1356              	 .cfi_def_cfa_register 13
 1357              	 
 1358 0452 80BC     	 pop {r7}
 1359              	.LCFI102:
 1360              	 .cfi_restore 7
 1361              	 .cfi_def_cfa_offset 0
 1362 0454 7047     	 bx lr
 1363              	.L94:
 1364 0456 00BF     	 .align 2
 1365              	.L93:
 1366 0458 00000A40 	 .word 1074397184
 1367              	 .cfi_endproc
 1368              	.LFE205:
 1370              	 .align 1
 1371              	 .global flashcalw_set_security_bit
 1372              	 .syntax unified
 1373              	 .thumb
 1374              	 .thumb_func
 1375              	 .fpu softvfp
 1377              	flashcalw_set_security_bit:
 1378              	.LFB206:
 513:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 514:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Activates the Security bit.
 515:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 516:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 517:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 518:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 519:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_set_security_bit(void)
 520:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1379              	 .loc 1 520 0
 1380              	 .cfi_startproc
 1381              	 
 1382              	 
 1383 045c 80B5     	 push {r7,lr}
 1384              	.LCFI103:
 1385              	 .cfi_def_cfa_offset 8
 1386              	 .cfi_offset 7,-8
 1387              	 .cfi_offset 14,-4
 1388 045e 00AF     	 add r7,sp,#0
 1389              	.LCFI104:
 1390              	 .cfi_def_cfa_register 7
 521:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_SSB, -1);
 1391              	 .loc 1 521 0
 1392 0460 4FF0FF31 	 mov r1,#-1
 1393 0464 0920     	 movs r0,#9
 1394 0466 FFF7FEFF 	 bl flashcalw_issue_command
 522:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1395              	 .loc 1 522 0
 1396 046a 00BF     	 nop
 1397 046c 80BD     	 pop {r7,pc}
 1398              	 .cfi_endproc
 1399              	.LFE206:
 1401              	 .align 1
 1402              	 .global flashcalw_is_page_region_locked
 1403              	 .syntax unified
 1404              	 .thumb
 1405              	 .thumb_func
 1406              	 .fpu softvfp
 1408              	flashcalw_is_page_region_locked:
 1409              	.LFB207:
 523:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 524:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether the region of a page is locked.
 525:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 526:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param page_number The page number:
 527:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg \c 0 to <tt>(flashcalw_get_page_count() - 1)</tt>: a page number
 528:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *        within the flash array;
 529:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg <tt>< 0</tt>: the current page number.
 530:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 531:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the region of the specified page is locked.
 532:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 533:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_page_region_locked(uint32_t page_number)
 534:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1410              	 .loc 1 534 0
 1411              	 .cfi_startproc
 1412              	 
 1413              	 
 1414 046e 80B5     	 push {r7,lr}
 1415              	.LCFI105:
 1416              	 .cfi_def_cfa_offset 8
 1417              	 .cfi_offset 7,-8
 1418              	 .cfi_offset 14,-4
 1419 0470 82B0     	 sub sp,sp,#8
 1420              	.LCFI106:
 1421              	 .cfi_def_cfa_offset 16
 1422 0472 00AF     	 add r7,sp,#0
 1423              	.LCFI107:
 1424              	 .cfi_def_cfa_register 7
 1425 0474 7860     	 str r0,[r7,#4]
 535:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_is_region_locked(flashcalw_get_page_region(page_number));
 1426              	 .loc 1 535 0
 1427 0476 7B68     	 ldr r3,[r7,#4]
 1428 0478 1846     	 mov r0,r3
 1429 047a FFF7FEFF 	 bl flashcalw_get_page_region
 1430 047e 0346     	 mov r3,r0
 1431 0480 1846     	 mov r0,r3
 1432 0482 FFF7FEFF 	 bl flashcalw_is_region_locked
 1433 0486 0346     	 mov r3,r0
 536:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1434              	 .loc 1 536 0
 1435 0488 1846     	 mov r0,r3
 1436 048a 0837     	 adds r7,r7,#8
 1437              	.LCFI108:
 1438              	 .cfi_def_cfa_offset 8
 1439 048c BD46     	 mov sp,r7
 1440              	.LCFI109:
 1441              	 .cfi_def_cfa_register 13
 1442              	 
 1443 048e 80BD     	 pop {r7,pc}
 1444              	 .cfi_endproc
 1445              	.LFE207:
 1447              	 .align 1
 1448              	 .global flashcalw_is_region_locked
 1449              	 .syntax unified
 1450              	 .thumb
 1451              	 .thumb_func
 1452              	 .fpu softvfp
 1454              	flashcalw_is_region_locked:
 1455              	.LFB208:
 537:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 538:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether a region is locked.
 539:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 540:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param region The region number: \c 0 to <tt>(FLASHCALW_REGIONS - 1)</tt>.
 541:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 542:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the specified region is locked.
 543:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 544:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_region_locked(uint32_t region)
 545:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1456              	 .loc 1 545 0
 1457              	 .cfi_startproc
 1458              	 
 1459              	 
 1460              	 
 1461 0490 80B4     	 push {r7}
 1462              	.LCFI110:
 1463              	 .cfi_def_cfa_offset 4
 1464              	 .cfi_offset 7,-4
 1465 0492 83B0     	 sub sp,sp,#12
 1466              	.LCFI111:
 1467              	 .cfi_def_cfa_offset 16
 1468 0494 00AF     	 add r7,sp,#0
 1469              	.LCFI112:
 1470              	 .cfi_def_cfa_register 7
 1471 0496 7860     	 str r0,[r7,#4]
 546:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FSR & FLASHCALW_FSR_LOCK0
 1472              	 .loc 1 546 0
 1473 0498 094B     	 ldr r3,.L100
 1474 049a 9A68     	 ldr r2,[r3,#8]
 547:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			<< (region & (FLASHCALW_REGIONS - 1))) != 0);
 1475              	 .loc 1 547 0
 1476 049c 7B68     	 ldr r3,[r7,#4]
 1477 049e 03F00F03 	 and r3,r3,#15
 1478 04a2 4FF48031 	 mov r1,#65536
 1479 04a6 01FA03F3 	 lsl r3,r1,r3
 546:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FSR & FLASHCALW_FSR_LOCK0
 1480              	 .loc 1 546 0
 1481 04aa 1340     	 ands r3,r3,r2
 1482              	 .loc 1 547 0
 1483 04ac 002B     	 cmp r3,#0
 1484 04ae 14BF     	 ite ne
 1485 04b0 0123     	 movne r3,#1
 1486 04b2 0023     	 moveq r3,#0
 1487 04b4 DBB2     	 uxtb r3,r3
 548:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1488              	 .loc 1 548 0
 1489 04b6 1846     	 mov r0,r3
 1490 04b8 0C37     	 adds r7,r7,#12
 1491              	.LCFI113:
 1492              	 .cfi_def_cfa_offset 4
 1493 04ba BD46     	 mov sp,r7
 1494              	.LCFI114:
 1495              	 .cfi_def_cfa_register 13
 1496              	 
 1497 04bc 80BC     	 pop {r7}
 1498              	.LCFI115:
 1499              	 .cfi_restore 7
 1500              	 .cfi_def_cfa_offset 0
 1501 04be 7047     	 bx lr
 1502              	.L101:
 1503              	 .align 2
 1504              	.L100:
 1505 04c0 00000A40 	 .word 1074397184
 1506              	 .cfi_endproc
 1507              	.LFE208:
 1509              	 .align 1
 1510              	 .global flashcalw_lock_page_region
 1511              	 .syntax unified
 1512              	 .thumb
 1513              	 .thumb_func
 1514              	 .fpu softvfp
 1516              	flashcalw_lock_page_region:
 1517              	.LFB209:
 549:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 550:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Locks or unlocks the region of a page.
 551:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 552:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param page_number The page number:
 553:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg \c 0 to <tt>(flashcalw_get_page_count() - 1)</tt>: a page number
 554:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *        within the flash array;
 555:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg <tt>< 0</tt>: the current page number.
 556:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param lock Whether to lock the region of the specified page: \c true or
 557:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *             \c false.
 558:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 559:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 560:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 561:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 562:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_lock_page_region(int page_number, bool lock)
 563:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1518              	 .loc 1 563 0
 1519              	 .cfi_startproc
 1520              	 
 1521              	 
 1522 04c4 80B5     	 push {r7,lr}
 1523              	.LCFI116:
 1524              	 .cfi_def_cfa_offset 8
 1525              	 .cfi_offset 7,-8
 1526              	 .cfi_offset 14,-4
 1527 04c6 82B0     	 sub sp,sp,#8
 1528              	.LCFI117:
 1529              	 .cfi_def_cfa_offset 16
 1530 04c8 00AF     	 add r7,sp,#0
 1531              	.LCFI118:
 1532              	 .cfi_def_cfa_register 7
 1533 04ca 7860     	 str r0,[r7,#4]
 1534 04cc 0B46     	 mov r3,r1
 1535 04ce FB70     	 strb r3,[r7,#3]
 564:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(
 1536              	 .loc 1 564 0
 1537 04d0 FB78     	 ldrb r3,[r7,#3]
 1538 04d2 002B     	 cmp r3,#0
 1539 04d4 01D0     	 beq .L103
 1540              	 .loc 1 564 0 is_stmt 0 discriminator 1
 1541 04d6 0423     	 movs r3,#4
 1542 04d8 00E0     	 b .L104
 1543              	.L103:
 1544              	 .loc 1 564 0 discriminator 2
 1545 04da 0523     	 movs r3,#5
 1546              	.L104:
 1547              	 .loc 1 564 0 discriminator 4
 1548 04dc 7968     	 ldr r1,[r7,#4]
 1549 04de 1846     	 mov r0,r3
 1550 04e0 FFF7FEFF 	 bl flashcalw_issue_command
 565:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			(lock) ? FLASHCALW_FCMD_CMD_LP : FLASHCALW_FCMD_CMD_UP,
 566:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			page_number);
 567:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1551              	 .loc 1 567 0 is_stmt 1 discriminator 4
 1552 04e4 00BF     	 nop
 1553 04e6 0837     	 adds r7,r7,#8
 1554              	.LCFI119:
 1555              	 .cfi_def_cfa_offset 8
 1556 04e8 BD46     	 mov sp,r7
 1557              	.LCFI120:
 1558              	 .cfi_def_cfa_register 13
 1559              	 
 1560 04ea 80BD     	 pop {r7,pc}
 1561              	 .cfi_endproc
 1562              	.LFE209:
 1564              	 .align 1
 1565              	 .global flashcalw_lock_region
 1566              	 .syntax unified
 1567              	 .thumb
 1568              	 .thumb_func
 1569              	 .fpu softvfp
 1571              	flashcalw_lock_region:
 1572              	.LFB210:
 568:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 569:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Locks or unlocks a region.
 570:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 571:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param region The region number: \c 0 to <tt>(FLASHCALW_REGIONS - 1)</tt>.
 572:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param lock Whether to lock the specified region: \c true or \c false.
 573:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 574:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 575:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 576:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 577:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_lock_region(uint32_t region, bool lock)
 578:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1573              	 .loc 1 578 0
 1574              	 .cfi_startproc
 1575              	 
 1576              	 
 1577 04ec 80B5     	 push {r7,lr}
 1578              	.LCFI121:
 1579              	 .cfi_def_cfa_offset 8
 1580              	 .cfi_offset 7,-8
 1581              	 .cfi_offset 14,-4
 1582 04ee 82B0     	 sub sp,sp,#8
 1583              	.LCFI122:
 1584              	 .cfi_def_cfa_offset 16
 1585 04f0 00AF     	 add r7,sp,#0
 1586              	.LCFI123:
 1587              	 .cfi_def_cfa_register 7
 1588 04f2 7860     	 str r0,[r7,#4]
 1589 04f4 0B46     	 mov r3,r1
 1590 04f6 FB70     	 strb r3,[r7,#3]
 579:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_lock_page_region(flashcalw_get_region_first_page_number(
 1591              	 .loc 1 579 0
 1592 04f8 7868     	 ldr r0,[r7,#4]
 1593 04fa FFF7FEFF 	 bl flashcalw_get_region_first_page_number
 1594 04fe 0346     	 mov r3,r0
 1595 0500 1A46     	 mov r2,r3
 1596 0502 FB78     	 ldrb r3,[r7,#3]
 1597 0504 1946     	 mov r1,r3
 1598 0506 1046     	 mov r0,r2
 1599 0508 FFF7FEFF 	 bl flashcalw_lock_page_region
 580:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			region), lock);
 581:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1600              	 .loc 1 581 0
 1601 050c 00BF     	 nop
 1602 050e 0837     	 adds r7,r7,#8
 1603              	.LCFI124:
 1604              	 .cfi_def_cfa_offset 8
 1605 0510 BD46     	 mov sp,r7
 1606              	.LCFI125:
 1607              	 .cfi_def_cfa_register 13
 1608              	 
 1609 0512 80BD     	 pop {r7,pc}
 1610              	 .cfi_endproc
 1611              	.LFE210:
 1613              	 .align 1
 1614              	 .global flashcalw_lock_all_regions
 1615              	 .syntax unified
 1616              	 .thumb
 1617              	 .thumb_func
 1618              	 .fpu softvfp
 1620              	flashcalw_lock_all_regions:
 1621              	.LFB211:
 582:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 583:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Locks or unlocks all regions.
 584:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 585:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param lock Whether to lock the regions: \c true or \c false.
 586:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 587:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 588:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 589:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 590:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_lock_all_regions(bool lock)
 591:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1622              	 .loc 1 591 0
 1623              	 .cfi_startproc
 1624              	 
 1625              	 
 1626 0514 80B5     	 push {r7,lr}
 1627              	.LCFI126:
 1628              	 .cfi_def_cfa_offset 8
 1629              	 .cfi_offset 7,-8
 1630              	 .cfi_offset 14,-4
 1631 0516 84B0     	 sub sp,sp,#16
 1632              	.LCFI127:
 1633              	 .cfi_def_cfa_offset 24
 1634 0518 00AF     	 add r7,sp,#0
 1635              	.LCFI128:
 1636              	 .cfi_def_cfa_register 7
 1637 051a 0346     	 mov r3,r0
 1638 051c FB71     	 strb r3,[r7,#7]
 592:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status = 0;
 1639              	 .loc 1 592 0
 1640 051e 0023     	 movs r3,#0
 1641 0520 FB60     	 str r3,[r7,#12]
 593:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t region = FLASHCALW_REGIONS;
 1642              	 .loc 1 593 0
 1643 0522 1023     	 movs r3,#16
 1644 0524 BB60     	 str r3,[r7,#8]
 594:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 595:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	while (region) {
 1645              	 .loc 1 595 0
 1646 0526 0CE0     	 b .L107
 1647              	.L108:
 596:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_lock_region(--region, lock);
 1648              	 .loc 1 596 0
 1649 0528 BB68     	 ldr r3,[r7,#8]
 1650 052a 013B     	 subs r3,r3,#1
 1651 052c BB60     	 str r3,[r7,#8]
 1652 052e FB79     	 ldrb r3,[r7,#7]
 1653 0530 1946     	 mov r1,r3
 1654 0532 B868     	 ldr r0,[r7,#8]
 1655 0534 FFF7FEFF 	 bl flashcalw_lock_region
 597:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 1656              	 .loc 1 597 0
 1657 0538 074B     	 ldr r3,.L109
 1658 053a 1B68     	 ldr r3,[r3]
 1659 053c FA68     	 ldr r2,[r7,#12]
 1660 053e 1343     	 orrs r3,r3,r2
 1661 0540 FB60     	 str r3,[r7,#12]
 1662              	.L107:
 595:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_lock_region(--region, lock);
 1663              	 .loc 1 595 0
 1664 0542 BB68     	 ldr r3,[r7,#8]
 1665 0544 002B     	 cmp r3,#0
 1666 0546 EFD1     	 bne .L108
 598:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 599:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 1667              	 .loc 1 599 0
 1668 0548 034A     	 ldr r2,.L109
 1669 054a FB68     	 ldr r3,[r7,#12]
 1670 054c 1360     	 str r3,[r2]
 600:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1671              	 .loc 1 600 0
 1672 054e 00BF     	 nop
 1673 0550 1037     	 adds r7,r7,#16
 1674              	.LCFI129:
 1675              	 .cfi_def_cfa_offset 8
 1676 0552 BD46     	 mov sp,r7
 1677              	.LCFI130:
 1678              	 .cfi_def_cfa_register 13
 1679              	 
 1680 0554 80BD     	 pop {r7,pc}
 1681              	.L110:
 1682 0556 00BF     	 .align 2
 1683              	.L109:
 1684 0558 00000000 	 .word flashcalw_error_status
 1685              	 .cfi_endproc
 1686              	.LFE211:
 1688              	 .align 1
 1689              	 .global flashcalw_read_gp_fuse_bit
 1690              	 .syntax unified
 1691              	 .thumb
 1692              	 .thumb_func
 1693              	 .fpu softvfp
 1695              	flashcalw_read_gp_fuse_bit:
 1696              	.LFB212:
 601:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 602:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @}
 603:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 604:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name Access to General-Purpose Fuses
 605:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 606:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
 607:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 608:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Reads a general-purpose fuse bit.
 609:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 610:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param gp_fuse_bit The general-purpose fuse bit: \c 0 to \c 63.
 611:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 612:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of the specified general-purpose fuse bit.
 613:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 614:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 615:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 616:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 617:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 618:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_read_gp_fuse_bit(uint32_t gp_fuse_bit)
 619:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1697              	 .loc 1 619 0
 1698              	 .cfi_startproc
 1699              	 
 1700              	 
 1701 055c F0B5     	 push {r4,r5,r6,r7,lr}
 1702              	.LCFI131:
 1703              	 .cfi_def_cfa_offset 20
 1704              	 .cfi_offset 4,-20
 1705              	 .cfi_offset 5,-16
 1706              	 .cfi_offset 6,-12
 1707              	 .cfi_offset 7,-8
 1708              	 .cfi_offset 14,-4
 1709 055e 83B0     	 sub sp,sp,#12
 1710              	.LCFI132:
 1711              	 .cfi_def_cfa_offset 32
 1712 0560 00AF     	 add r7,sp,#0
 1713              	.LCFI133:
 1714              	 .cfi_def_cfa_register 7
 1715 0562 7860     	 str r0,[r7,#4]
 620:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((flashcalw_read_all_gp_fuses() & (uint64_t)1 << (gp_fuse_bit & 0x3F))
 1716              	 .loc 1 620 0
 1717 0564 FFF7FEFF 	 bl flashcalw_read_all_gp_fuses
 1718 0568 0246     	 mov r2,r0
 1719 056a 0B46     	 mov r3,r1
 1720 056c 7968     	 ldr r1,[r7,#4]
 1721 056e 01F03F01 	 and r1,r1,#63
 621:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		!= 0);
 1722              	 .loc 1 621 0
 1723 0572 C1F12006 	 rsb r6,r1,#32
 1724 0576 A1F12000 	 sub r0,r1,#32
 1725 057a 22FA01F4 	 lsr r4,r2,r1
 1726 057e 03FA06F6 	 lsl r6,r3,r6
 1727 0582 3443     	 orrs r4,r4,r6
 1728 0584 23FA00F0 	 lsr r0,r3,r0
 1729 0588 0443     	 orrs r4,r4,r0
 1730 058a 23FA01F5 	 lsr r5,r3,r1
 1731 058e 4FF00102 	 mov r2,#1
 1732 0592 4FF00003 	 mov r3,#0
 1733 0596 04EA0200 	 and r0,r4,r2
 1734 059a 05EA0301 	 and r1,r5,r3
 1735 059e 0346     	 mov r3,r0
 1736 05a0 0C46     	 mov r4,r1
 1737 05a2 2343     	 orrs r3,r3,r4
 1738 05a4 002B     	 cmp r3,#0
 1739 05a6 14BF     	 ite ne
 1740 05a8 0123     	 movne r3,#1
 1741 05aa 0023     	 moveq r3,#0
 1742 05ac DBB2     	 uxtb r3,r3
 622:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1743              	 .loc 1 622 0
 1744 05ae 1846     	 mov r0,r3
 1745 05b0 0C37     	 adds r7,r7,#12
 1746              	.LCFI134:
 1747              	 .cfi_def_cfa_offset 20
 1748 05b2 BD46     	 mov sp,r7
 1749              	.LCFI135:
 1750              	 .cfi_def_cfa_register 13
 1751              	 
 1752 05b4 F0BD     	 pop {r4,r5,r6,r7,pc}
 1753              	 .cfi_endproc
 1754              	.LFE212:
 1756              	 .align 1
 1757              	 .global flashcalw_read_gp_fuse_bitfield
 1758              	 .syntax unified
 1759              	 .thumb
 1760              	 .thumb_func
 1761              	 .fpu softvfp
 1763              	flashcalw_read_gp_fuse_bitfield:
 1764              	.LFB213:
 623:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 624:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Reads a general-purpose fuse bit-field.
 625:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 626:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param pos The bit-position of the general-purpose fuse bit-field: \c 0 to
 627:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *            \c 63.
 628:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param width The bit-width of the general-purpose fuse bit-field: \c 0 to
 629:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *              \c 64.
 630:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 631:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of the specified general-purpose fuse bit-field.
 632:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 633:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 634:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 635:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 636:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 637:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint64_t flashcalw_read_gp_fuse_bitfield(uint32_t pos, uint32_t width)
 638:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1765              	 .loc 1 638 0
 1766              	 .cfi_startproc
 1767              	 
 1768              	 
 1769 05b6 2DE9F043 	 push {r4,r5,r6,r7,r8,r9,lr}
 1770              	.LCFI136:
 1771              	 .cfi_def_cfa_offset 28
 1772              	 .cfi_offset 4,-28
 1773              	 .cfi_offset 5,-24
 1774              	 .cfi_offset 6,-20
 1775              	 .cfi_offset 7,-16
 1776              	 .cfi_offset 8,-12
 1777              	 .cfi_offset 9,-8
 1778              	 .cfi_offset 14,-4
 1779 05ba 83B0     	 sub sp,sp,#12
 1780              	.LCFI137:
 1781              	 .cfi_def_cfa_offset 40
 1782 05bc 00AF     	 add r7,sp,#0
 1783              	.LCFI138:
 1784              	 .cfi_def_cfa_register 7
 1785 05be 7860     	 str r0,[r7,#4]
 1786 05c0 3960     	 str r1,[r7]
 639:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_read_all_gp_fuses() >> (pos & 0x3F)
 1787              	 .loc 1 639 0
 1788 05c2 FFF7FEFF 	 bl flashcalw_read_all_gp_fuses
 1789 05c6 0246     	 mov r2,r0
 1790 05c8 0B46     	 mov r3,r1
 1791 05ca 7968     	 ldr r1,[r7,#4]
 1792 05cc 01F03F01 	 and r1,r1,#63
 1793 05d0 C1F12006 	 rsb r6,r1,#32
 1794 05d4 A1F12000 	 sub r0,r1,#32
 1795 05d8 22FA01F4 	 lsr r4,r2,r1
 1796 05dc 03FA06F6 	 lsl r6,r3,r6
 1797 05e0 3443     	 orrs r4,r4,r6
 1798 05e2 23FA00F0 	 lsr r0,r3,r0
 1799 05e6 0443     	 orrs r4,r4,r0
 1800 05e8 23FA01F5 	 lsr r5,r3,r1
 640:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		& (((uint64_t)1 << Min(width, 64)) - 1);
 1801              	 .loc 1 640 0
 1802 05ec 3B68     	 ldr r3,[r7]
 1803 05ee 402B     	 cmp r3,#64
 1804 05f0 28BF     	 it cs
 1805 05f2 4023     	 movcs r3,#64
 1806 05f4 1946     	 mov r1,r3
 1807 05f6 4FF00102 	 mov r2,#1
 1808 05fa 4FF00003 	 mov r3,#0
 1809 05fe A1F12006 	 sub r6,r1,#32
 1810 0602 C1F12000 	 rsb r0,r1,#32
 1811 0606 03FA01F9 	 lsl r9,r3,r1
 1812 060a 02FA06F6 	 lsl r6,r2,r6
 1813 060e 49EA0609 	 orr r9,r9,r6
 1814 0612 22FA00F0 	 lsr r0,r2,r0
 1815 0616 49EA0009 	 orr r9,r9,r0
 1816 061a 02FA01F8 	 lsl r8,r2,r1
 1817 061e 18F1FF32 	 adds r2,r8,#-1
 1818 0622 49F1FF33 	 adc r3,r9,#-1
 1819 0626 04EA0200 	 and r0,r4,r2
 1820 062a 05EA0301 	 and r1,r5,r3
 1821 062e 0346     	 mov r3,r0
 1822 0630 0C46     	 mov r4,r1
 641:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1823              	 .loc 1 641 0
 1824 0632 1846     	 mov r0,r3
 1825 0634 2146     	 mov r1,r4
 1826 0636 0C37     	 adds r7,r7,#12
 1827              	.LCFI139:
 1828              	 .cfi_def_cfa_offset 28
 1829 0638 BD46     	 mov sp,r7
 1830              	.LCFI140:
 1831              	 .cfi_def_cfa_register 13
 1832              	 
 1833 063a BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
 1834              	 .cfi_endproc
 1835              	.LFE213:
 1837              	 .align 1
 1838              	 .global flashcalw_read_gp_fuse_byte
 1839              	 .syntax unified
 1840              	 .thumb
 1841              	 .thumb_func
 1842              	 .fpu softvfp
 1844              	flashcalw_read_gp_fuse_byte:
 1845              	.LFB214:
 642:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 643:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Reads a general-purpose fuse byte.
 644:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 645:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param gp_fuse_byte The general-purpose fuse byte: \c 0 to \c 7.
 646:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 647:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of the specified general-purpose fuse byte.
 648:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 649:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 650:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 651:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 652:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 653:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint8_t flashcalw_read_gp_fuse_byte(uint32_t gp_fuse_byte)
 654:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1846              	 .loc 1 654 0
 1847              	 .cfi_startproc
 1848              	 
 1849              	 
 1850 063e F0B5     	 push {r4,r5,r6,r7,lr}
 1851              	.LCFI141:
 1852              	 .cfi_def_cfa_offset 20
 1853              	 .cfi_offset 4,-20
 1854              	 .cfi_offset 5,-16
 1855              	 .cfi_offset 6,-12
 1856              	 .cfi_offset 7,-8
 1857              	 .cfi_offset 14,-4
 1858 0640 83B0     	 sub sp,sp,#12
 1859              	.LCFI142:
 1860              	 .cfi_def_cfa_offset 32
 1861 0642 00AF     	 add r7,sp,#0
 1862              	.LCFI143:
 1863              	 .cfi_def_cfa_register 7
 1864 0644 7860     	 str r0,[r7,#4]
 655:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_read_all_gp_fuses() >> ((gp_fuse_byte & 0x07) << 3);
 1865              	 .loc 1 655 0
 1866 0646 FFF7FEFF 	 bl flashcalw_read_all_gp_fuses
 1867 064a 0246     	 mov r2,r0
 1868 064c 0B46     	 mov r3,r1
 1869 064e 7968     	 ldr r1,[r7,#4]
 1870 0650 C900     	 lsls r1,r1,#3
 1871 0652 01F03801 	 and r1,r1,#56
 1872 0656 C1F12006 	 rsb r6,r1,#32
 1873 065a A1F12000 	 sub r0,r1,#32
 1874 065e 22FA01F4 	 lsr r4,r2,r1
 1875 0662 03FA06F6 	 lsl r6,r3,r6
 1876 0666 3443     	 orrs r4,r4,r6
 1877 0668 23FA00F0 	 lsr r0,r3,r0
 1878 066c 0443     	 orrs r4,r4,r0
 1879 066e 23FA01F5 	 lsr r5,r3,r1
 1880 0672 E3B2     	 uxtb r3,r4
 656:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1881              	 .loc 1 656 0
 1882 0674 1846     	 mov r0,r3
 1883 0676 0C37     	 adds r7,r7,#12
 1884              	.LCFI144:
 1885              	 .cfi_def_cfa_offset 20
 1886 0678 BD46     	 mov sp,r7
 1887              	.LCFI145:
 1888              	 .cfi_def_cfa_register 13
 1889              	 
 1890 067a F0BD     	 pop {r4,r5,r6,r7,pc}
 1891              	 .cfi_endproc
 1892              	.LFE214:
 1894              	 .align 1
 1895              	 .global flashcalw_read_all_gp_fuses
 1896              	 .syntax unified
 1897              	 .thumb
 1898              	 .thumb_func
 1899              	 .fpu softvfp
 1901              	flashcalw_read_all_gp_fuses:
 1902              	.LFB215:
 657:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 658:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Reads all general-purpose fuses.
 659:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 660:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of all general-purpose fuses as a word.
 661:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 662:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 663:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 664:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 665:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 666:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint64_t flashcalw_read_all_gp_fuses(void)
 667:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1903              	 .loc 1 667 0
 1904              	 .cfi_startproc
 1905              	 
 1906              	 
 1907              	 
 1908 067c F0B4     	 push {r4,r5,r6,r7}
 1909              	.LCFI146:
 1910              	 .cfi_def_cfa_offset 16
 1911              	 .cfi_offset 4,-16
 1912              	 .cfi_offset 5,-12
 1913              	 .cfi_offset 6,-8
 1914              	 .cfi_offset 7,-4
 1915 067e 82B0     	 sub sp,sp,#8
 1916              	.LCFI147:
 1917              	 .cfi_def_cfa_offset 24
 1918 0680 00AF     	 add r7,sp,#0
 1919              	.LCFI148:
 1920              	 .cfi_def_cfa_register 7
 668:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t fuselo = HFLASHC->FLASHCALW_FGPFRLO;
 1921              	 .loc 1 668 0
 1922 0682 0C4A     	 ldr r2,.L119
 1923 0684 9269     	 ldr r2,[r2,#24]
 1924 0686 7A60     	 str r2,[r7,#4]
 669:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return fuselo |	(uint64_t)HFLASHC->FLASHCALW_FGPFRHI << 32;
 1925              	 .loc 1 669 0
 1926 0688 7A68     	 ldr r2,[r7,#4]
 1927 068a 1146     	 mov r1,r2
 1928 068c 4FF00002 	 mov r2,#0
 1929 0690 0848     	 ldr r0,.L119
 1930 0692 4069     	 ldr r0,[r0,#20]
 1931 0694 0546     	 mov r5,r0
 1932 0696 4FF00006 	 mov r6,#0
 1933 069a 2C00     	 movs r4,r5
 1934 069c 0023     	 movs r3,#0
 1935 069e 43EA0103 	 orr r3,r3,r1
 1936 06a2 44EA0204 	 orr r4,r4,r2
 670:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 1937              	 .loc 1 670 0
 1938 06a6 1846     	 mov r0,r3
 1939 06a8 2146     	 mov r1,r4
 1940 06aa 0837     	 adds r7,r7,#8
 1941              	.LCFI149:
 1942              	 .cfi_def_cfa_offset 16
 1943 06ac BD46     	 mov sp,r7
 1944              	.LCFI150:
 1945              	 .cfi_def_cfa_register 13
 1946              	 
 1947 06ae F0BC     	 pop {r4,r5,r6,r7}
 1948              	.LCFI151:
 1949              	 .cfi_restore 7
 1950              	 .cfi_restore 6
 1951              	 .cfi_restore 5
 1952              	 .cfi_restore 4
 1953              	 .cfi_def_cfa_offset 0
 1954 06b0 7047     	 bx lr
 1955              	.L120:
 1956 06b2 00BF     	 .align 2
 1957              	.L119:
 1958 06b4 00000A40 	 .word 1074397184
 1959              	 .cfi_endproc
 1960              	.LFE215:
 1962              	 .align 1
 1963              	 .global flashcalw_erase_gp_fuse_bit
 1964              	 .syntax unified
 1965              	 .thumb
 1966              	 .thumb_func
 1967              	 .fpu softvfp
 1969              	flashcalw_erase_gp_fuse_bit:
 1970              	.LFB216:
 671:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 672:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Erases a general-purpose fuse bit.
 673:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 674:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param gp_fuse_bit The general-purpose fuse bit: \c 0 to \c 63.
 675:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param check Whether to check erase: \c true or \c false.
 676:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 677:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the erase succeeded or always \c true if erase check was not
 678:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         requested.
 679:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 680:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active and the command
 681:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *  is applied to BOOTPROT.
 682:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 683:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 684:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 685:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 686:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note An erase operation can only set bits.
 687:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 688:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 689:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 690:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 691:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 692:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_erase_gp_fuse_bit(uint32_t gp_fuse_bit, bool check)
 693:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 1971              	 .loc 1 693 0
 1972              	 .cfi_startproc
 1973              	 
 1974              	 
 1975 06b8 80B5     	 push {r7,lr}
 1976              	.LCFI152:
 1977              	 .cfi_def_cfa_offset 8
 1978              	 .cfi_offset 7,-8
 1979              	 .cfi_offset 14,-4
 1980 06ba 82B0     	 sub sp,sp,#8
 1981              	.LCFI153:
 1982              	 .cfi_def_cfa_offset 16
 1983 06bc 00AF     	 add r7,sp,#0
 1984              	.LCFI154:
 1985              	 .cfi_def_cfa_register 7
 1986 06be 7860     	 str r0,[r7,#4]
 1987 06c0 0B46     	 mov r3,r1
 1988 06c2 FB70     	 strb r3,[r7,#3]
 694:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_EGPB, gp_fuse_bit & 0x3F);
 1989              	 .loc 1 694 0
 1990 06c4 7B68     	 ldr r3,[r7,#4]
 1991 06c6 03F03F03 	 and r3,r3,#63
 1992 06ca 1946     	 mov r1,r3
 1993 06cc 0820     	 movs r0,#8
 1994 06ce FFF7FEFF 	 bl flashcalw_issue_command
 695:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (check) ? flashcalw_read_gp_fuse_bit(gp_fuse_bit) : true;
 1995              	 .loc 1 695 0
 1996 06d2 FB78     	 ldrb r3,[r7,#3]
 1997 06d4 002B     	 cmp r3,#0
 1998 06d6 05D0     	 beq .L122
 1999              	 .loc 1 695 0 is_stmt 0 discriminator 2
 2000 06d8 7868     	 ldr r0,[r7,#4]
 2001 06da FFF7FEFF 	 bl flashcalw_read_gp_fuse_bit
 2002 06de 0346     	 mov r3,r0
 2003 06e0 002B     	 cmp r3,#0
 2004 06e2 01D0     	 beq .L123
 2005              	.L122:
 2006              	 .loc 1 695 0 discriminator 3
 2007 06e4 0123     	 movs r3,#1
 2008 06e6 00E0     	 b .L124
 2009              	.L123:
 2010              	 .loc 1 695 0 discriminator 4
 2011 06e8 0023     	 movs r3,#0
 2012              	.L124:
 696:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2013              	 .loc 1 696 0 is_stmt 1 discriminator 6
 2014 06ea 1846     	 mov r0,r3
 2015 06ec 0837     	 adds r7,r7,#8
 2016              	.LCFI155:
 2017              	 .cfi_def_cfa_offset 8
 2018 06ee BD46     	 mov sp,r7
 2019              	.LCFI156:
 2020              	 .cfi_def_cfa_register 13
 2021              	 
 2022 06f0 80BD     	 pop {r7,pc}
 2023              	 .cfi_endproc
 2024              	.LFE216:
 2026              	 .align 1
 2027              	 .global flashcalw_erase_gp_fuse_bitfield
 2028              	 .syntax unified
 2029              	 .thumb
 2030              	 .thumb_func
 2031              	 .fpu softvfp
 2033              	flashcalw_erase_gp_fuse_bitfield:
 2034              	.LFB217:
 697:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 698:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Erases a general-purpose fuse bit-field.
 699:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 700:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param pos The bit-position of the general-purpose fuse bit-field: \c 0 to
 701:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *            \c 63.
 702:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param width The bit-width of the general-purpose fuse bit-field: \c 0 to
 703:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *              \c 64.
 704:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param check Whether to check erase: \c true or \c false.
 705:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 706:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the erase succeeded or always \c true if erase check was not
 707:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         requested.
 708:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 709:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active and the command
 710:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *  is applied to BOOTPROT.
 711:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 712:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 713:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 714:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 715:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note An erase operation can only set bits.
 716:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 717:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 718:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 719:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 720:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 721:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_erase_gp_fuse_bitfield(uint32_t pos, uint32_t width, bool check)
 722:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2035              	 .loc 1 722 0
 2036              	 .cfi_startproc
 2037              	 
 2038              	 
 2039 06f2 2DE9F043 	 push {r4,r5,r6,r7,r8,r9,lr}
 2040              	.LCFI157:
 2041              	 .cfi_def_cfa_offset 28
 2042              	 .cfi_offset 4,-28
 2043              	 .cfi_offset 5,-24
 2044              	 .cfi_offset 6,-20
 2045              	 .cfi_offset 7,-16
 2046              	 .cfi_offset 8,-12
 2047              	 .cfi_offset 9,-8
 2048              	 .cfi_offset 14,-4
 2049 06f6 87B0     	 sub sp,sp,#28
 2050              	.LCFI158:
 2051              	 .cfi_def_cfa_offset 56
 2052 06f8 00AF     	 add r7,sp,#0
 2053              	.LCFI159:
 2054              	 .cfi_def_cfa_register 7
 2055 06fa F860     	 str r0,[r7,#12]
 2056 06fc B960     	 str r1,[r7,#8]
 2057 06fe 1346     	 mov r3,r2
 2058 0700 FB71     	 strb r3,[r7,#7]
 723:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status = 0;
 2059              	 .loc 1 723 0
 2060 0702 0023     	 movs r3,#0
 2061 0704 7B61     	 str r3,[r7,#20]
 724:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t gp_fuse_bit;
 725:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 726:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	pos &= 0x3F;
 2062              	 .loc 1 726 0
 2063 0706 FB68     	 ldr r3,[r7,#12]
 2064 0708 03F03F03 	 and r3,r3,#63
 2065 070c FB60     	 str r3,[r7,#12]
 727:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	width = Min(width, 64);
 2066              	 .loc 1 727 0
 2067 070e BB68     	 ldr r3,[r7,#8]
 2068 0710 402B     	 cmp r3,#64
 2069 0712 28BF     	 it cs
 2070 0714 4023     	 movcs r3,#64
 2071 0716 BB60     	 str r3,[r7,#8]
 728:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 729:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	for (gp_fuse_bit = pos; gp_fuse_bit < pos + width; gp_fuse_bit++) {
 2072              	 .loc 1 729 0
 2073 0718 FB68     	 ldr r3,[r7,#12]
 2074 071a 3B61     	 str r3,[r7,#16]
 2075 071c 0BE0     	 b .L127
 2076              	.L128:
 730:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_erase_gp_fuse_bit(gp_fuse_bit, false);
 2077              	 .loc 1 730 0 discriminator 3
 2078 071e 0021     	 movs r1,#0
 2079 0720 3869     	 ldr r0,[r7,#16]
 2080 0722 FFF7FEFF 	 bl flashcalw_erase_gp_fuse_bit
 731:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 2081              	 .loc 1 731 0 discriminator 3
 2082 0726 214B     	 ldr r3,.L133
 2083 0728 1B68     	 ldr r3,[r3]
 2084 072a 7A69     	 ldr r2,[r7,#20]
 2085 072c 1343     	 orrs r3,r3,r2
 2086 072e 7B61     	 str r3,[r7,#20]
 729:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_erase_gp_fuse_bit(gp_fuse_bit, false);
 2087              	 .loc 1 729 0 discriminator 3
 2088 0730 3B69     	 ldr r3,[r7,#16]
 2089 0732 0133     	 adds r3,r3,#1
 2090 0734 3B61     	 str r3,[r7,#16]
 2091              	.L127:
 729:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_erase_gp_fuse_bit(gp_fuse_bit, false);
 2092              	 .loc 1 729 0 is_stmt 0 discriminator 1
 2093 0736 FA68     	 ldr r2,[r7,#12]
 2094 0738 BB68     	 ldr r3,[r7,#8]
 2095 073a 1A44     	 add r2,r2,r3
 2096 073c 3B69     	 ldr r3,[r7,#16]
 2097 073e 9A42     	 cmp r2,r3
 2098 0740 EDD8     	 bhi .L128
 732:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 733:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 2099              	 .loc 1 733 0 is_stmt 1
 2100 0742 1A4A     	 ldr r2,.L133
 2101 0744 7B69     	 ldr r3,[r7,#20]
 2102 0746 1360     	 str r3,[r2]
 734:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (check) ? (flashcalw_read_gp_fuse_bitfield(pos, width)
 735:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		== ((uint64_t)1 << width) - 1) : true;
 2103              	 .loc 1 735 0
 2104 0748 FB79     	 ldrb r3,[r7,#7]
 2105 074a 002B     	 cmp r3,#0
 2106 074c 22D0     	 beq .L129
 734:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (check) ? (flashcalw_read_gp_fuse_bitfield(pos, width)
 2107              	 .loc 1 734 0 discriminator 2
 2108 074e B968     	 ldr r1,[r7,#8]
 2109 0750 F868     	 ldr r0,[r7,#12]
 2110 0752 FFF7FEFF 	 bl flashcalw_read_gp_fuse_bitfield
 2111 0756 8046     	 mov r8,r0
 2112 0758 8946     	 mov r9,r1
 2113              	 .loc 1 735 0 discriminator 2
 2114 075a 4FF00102 	 mov r2,#1
 2115 075e 4FF00003 	 mov r3,#0
 2116 0762 B968     	 ldr r1,[r7,#8]
 2117 0764 A1F12006 	 sub r6,r1,#32
 2118 0768 C1F12000 	 rsb r0,r1,#32
 2119 076c 03FA01F5 	 lsl r5,r3,r1
 2120 0770 02FA06F6 	 lsl r6,r2,r6
 2121 0774 3543     	 orrs r5,r5,r6
 2122 0776 22FA00F0 	 lsr r0,r2,r0
 2123 077a 0543     	 orrs r5,r5,r0
 2124 077c 02FA01F4 	 lsl r4,r2,r1
 2125 0780 14F1FF32 	 adds r2,r4,#-1
 2126 0784 45F1FF33 	 adc r3,r5,#-1
 2127 0788 1C46     	 mov r4,r3
 2128 078a 1346     	 mov r3,r2
 2129 078c A145     	 cmp r9,r4
 2130 078e 08BF     	 it eq
 2131 0790 9845     	 cmpeq r8,r3
 2132 0792 01D1     	 bne .L130
 2133              	.L129:
 2134              	 .loc 1 735 0 is_stmt 0 discriminator 3
 2135 0794 0123     	 movs r3,#1
 2136 0796 00E0     	 b .L131
 2137              	.L130:
 2138              	 .loc 1 735 0 discriminator 4
 2139 0798 0023     	 movs r3,#0
 2140              	.L131:
 2141              	 .loc 1 735 0 discriminator 6
 2142 079a 03F00103 	 and r3,r3,#1
 2143 079e DBB2     	 uxtb r3,r3
 736:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2144              	 .loc 1 736 0 is_stmt 1 discriminator 6
 2145 07a0 1846     	 mov r0,r3
 2146 07a2 1C37     	 adds r7,r7,#28
 2147              	.LCFI160:
 2148              	 .cfi_def_cfa_offset 28
 2149 07a4 BD46     	 mov sp,r7
 2150              	.LCFI161:
 2151              	 .cfi_def_cfa_register 13
 2152              	 
 2153 07a6 BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
 2154              	.L134:
 2155 07aa 00BF     	 .align 2
 2156              	.L133:
 2157 07ac 00000000 	 .word flashcalw_error_status
 2158              	 .cfi_endproc
 2159              	.LFE217:
 2161              	 .align 1
 2162              	 .global flashcalw_erase_gp_fuse_byte
 2163              	 .syntax unified
 2164              	 .thumb
 2165              	 .thumb_func
 2166              	 .fpu softvfp
 2168              	flashcalw_erase_gp_fuse_byte:
 2169              	.LFB218:
 737:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 738:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Erases a general-purpose fuse byte.
 739:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 740:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param gp_fuse_byte The general-purpose fuse byte: \c 0 to \c 7.
 741:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param check Whether to check erase: \c true or \c false.
 742:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 743:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the erase succeeded or always \c true if erase check was not
 744:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         requested.
 745:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 746:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active.
 747:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 748:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 749:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 750:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 751:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note An erase operation can only set bits.
 752:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 753:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 754:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 755:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 756:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 757:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_erase_gp_fuse_byte(uint32_t gp_fuse_byte, bool check)
 758:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2170              	 .loc 1 758 0
 2171              	 .cfi_startproc
 2172              	 
 2173              	 
 2174 07b0 B0B5     	 push {r4,r5,r7,lr}
 2175              	.LCFI162:
 2176              	 .cfi_def_cfa_offset 16
 2177              	 .cfi_offset 4,-16
 2178              	 .cfi_offset 5,-12
 2179              	 .cfi_offset 7,-8
 2180              	 .cfi_offset 14,-4
 2181 07b2 86B0     	 sub sp,sp,#24
 2182              	.LCFI163:
 2183              	 .cfi_def_cfa_offset 40
 2184 07b4 00AF     	 add r7,sp,#0
 2185              	.LCFI164:
 2186              	 .cfi_def_cfa_register 7
 2187 07b6 7860     	 str r0,[r7,#4]
 2188 07b8 0B46     	 mov r3,r1
 2189 07ba FB70     	 strb r3,[r7,#3]
 759:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status;
 760:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t current_gp_fuse_byte;
 761:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint64_t value = flashcalw_read_all_gp_fuses();
 2190              	 .loc 1 761 0
 2191 07bc FFF7FEFF 	 bl flashcalw_read_all_gp_fuses
 2192 07c0 C7E90201 	 strd r0,[r7,#8]
 762:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 763:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_erase_all_gp_fuses(false);
 2193              	 .loc 1 763 0
 2194 07c4 0020     	 movs r0,#0
 2195 07c6 FFF7FEFF 	 bl flashcalw_erase_all_gp_fuses
 764:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	error_status = flashcalw_error_status;
 2196              	 .loc 1 764 0
 2197 07ca 1C4B     	 ldr r3,.L143
 2198 07cc 1B68     	 ldr r3,[r3]
 2199 07ce 7B61     	 str r3,[r7,#20]
 765:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	for (current_gp_fuse_byte = 0; current_gp_fuse_byte < 8;
 2200              	 .loc 1 765 0
 2201 07d0 0023     	 movs r3,#0
 2202 07d2 3B61     	 str r3,[r7,#16]
 2203 07d4 18E0     	 b .L136
 2204              	.L138:
 766:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			current_gp_fuse_byte++, value >>= 8) {
 767:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		if (current_gp_fuse_byte != gp_fuse_byte) {
 2205              	 .loc 1 767 0
 2206 07d6 3A69     	 ldr r2,[r7,#16]
 2207 07d8 7B68     	 ldr r3,[r7,#4]
 2208 07da 9A42     	 cmp r2,r3
 2209 07dc 09D0     	 beq .L137
 768:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			flashcalw_write_gp_fuse_byte(current_gp_fuse_byte,
 2210              	 .loc 1 768 0
 2211 07de 3B7A     	 ldrb r3,[r7,#8]
 2212 07e0 1946     	 mov r1,r3
 2213 07e2 3869     	 ldr r0,[r7,#16]
 2214 07e4 FFF7FEFF 	 bl flashcalw_write_gp_fuse_byte
 769:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					value);
 770:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			error_status |= flashcalw_error_status;
 2215              	 .loc 1 770 0
 2216 07e8 144B     	 ldr r3,.L143
 2217 07ea 1B68     	 ldr r3,[r3]
 2218 07ec 7A69     	 ldr r2,[r7,#20]
 2219 07ee 1343     	 orrs r3,r3,r2
 2220 07f0 7B61     	 str r3,[r7,#20]
 2221              	.L137:
 766:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		if (current_gp_fuse_byte != gp_fuse_byte) {
 2222              	 .loc 1 766 0
 2223 07f2 3B69     	 ldr r3,[r7,#16]
 2224 07f4 0133     	 adds r3,r3,#1
 2225 07f6 3B61     	 str r3,[r7,#16]
 2226 07f8 D7E90223 	 ldrd r2,[r7,#8]
 2227 07fc 140A     	 lsrs r4,r2,#8
 2228 07fe 44EA0364 	 orr r4,r4,r3,lsl#24
 2229 0802 1D0A     	 lsrs r5,r3,#8
 2230 0804 C7E90245 	 strd r4,[r7,#8]
 2231              	.L136:
 765:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			current_gp_fuse_byte++, value >>= 8) {
 2232              	 .loc 1 765 0 discriminator 1
 2233 0808 3B69     	 ldr r3,[r7,#16]
 2234 080a 072B     	 cmp r3,#7
 2235 080c E3D9     	 bls .L138
 771:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
 772:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 773:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 2236              	 .loc 1 773 0
 2237 080e 0B4A     	 ldr r2,.L143
 2238 0810 7B69     	 ldr r3,[r7,#20]
 2239 0812 1360     	 str r3,[r2]
 774:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (check) ? (flashcalw_read_gp_fuse_byte(gp_fuse_byte) == 0xFF)
 775:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		: true;
 2240              	 .loc 1 775 0
 2241 0814 FB78     	 ldrb r3,[r7,#3]
 2242 0816 002B     	 cmp r3,#0
 2243 0818 05D0     	 beq .L139
 774:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (check) ? (flashcalw_read_gp_fuse_byte(gp_fuse_byte) == 0xFF)
 2244              	 .loc 1 774 0 discriminator 2
 2245 081a 7868     	 ldr r0,[r7,#4]
 2246 081c FFF7FEFF 	 bl flashcalw_read_gp_fuse_byte
 2247 0820 0346     	 mov r3,r0
 2248              	 .loc 1 775 0 discriminator 2
 2249 0822 FF2B     	 cmp r3,#255
 2250 0824 01D1     	 bne .L140
 2251              	.L139:
 2252              	 .loc 1 775 0 is_stmt 0 discriminator 3
 2253 0826 0123     	 movs r3,#1
 2254 0828 00E0     	 b .L141
 2255              	.L140:
 2256              	 .loc 1 775 0 discriminator 4
 2257 082a 0023     	 movs r3,#0
 2258              	.L141:
 2259              	 .loc 1 775 0 discriminator 6
 2260 082c 03F00103 	 and r3,r3,#1
 2261 0830 DBB2     	 uxtb r3,r3
 776:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2262              	 .loc 1 776 0 is_stmt 1 discriminator 6
 2263 0832 1846     	 mov r0,r3
 2264 0834 1837     	 adds r7,r7,#24
 2265              	.LCFI165:
 2266              	 .cfi_def_cfa_offset 16
 2267 0836 BD46     	 mov sp,r7
 2268              	.LCFI166:
 2269              	 .cfi_def_cfa_register 13
 2270              	 
 2271 0838 B0BD     	 pop {r4,r5,r7,pc}
 2272              	.L144:
 2273 083a 00BF     	 .align 2
 2274              	.L143:
 2275 083c 00000000 	 .word flashcalw_error_status
 2276              	 .cfi_endproc
 2277              	.LFE218:
 2279              	 .align 1
 2280              	 .global flashcalw_erase_all_gp_fuses
 2281              	 .syntax unified
 2282              	 .thumb
 2283              	 .thumb_func
 2284              	 .fpu softvfp
 2286              	flashcalw_erase_all_gp_fuses:
 2287              	.LFB219:
 777:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 778:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Erases all general-purpose fuses.
 779:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 780:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param check Whether to check erase: \c true or \c false.
 781:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 782:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the erase succeeded or always \c true if erase check was not
 783:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         requested.
 784:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 785:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active.
 786:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 787:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 788:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 789:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 790:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note An erase operation can only set bits.
 791:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 792:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 793:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 794:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 795:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 796:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_erase_all_gp_fuses(bool check)
 797:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2288              	 .loc 1 797 0
 2289              	 .cfi_startproc
 2290              	 
 2291              	 
 2292 0840 90B5     	 push {r4,r7,lr}
 2293              	.LCFI167:
 2294              	 .cfi_def_cfa_offset 12
 2295              	 .cfi_offset 4,-12
 2296              	 .cfi_offset 7,-8
 2297              	 .cfi_offset 14,-4
 2298 0842 83B0     	 sub sp,sp,#12
 2299              	.LCFI168:
 2300              	 .cfi_def_cfa_offset 24
 2301 0844 00AF     	 add r7,sp,#0
 2302              	.LCFI169:
 2303              	 .cfi_def_cfa_register 7
 2304 0846 0346     	 mov r3,r0
 2305 0848 FB71     	 strb r3,[r7,#7]
 798:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_EAGPF, -1);
 2306              	 .loc 1 798 0
 2307 084a 4FF0FF31 	 mov r1,#-1
 2308 084e 0B20     	 movs r0,#11
 2309 0850 FFF7FEFF 	 bl flashcalw_issue_command
 799:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/**
 800:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 * use (uint64_t)-1 instead of 0xFFFFFFFFFFFFFFFFULL to avoid
 801:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 * compilation warning
 802:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 */
 803:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (check) ? (flashcalw_read_all_gp_fuses() ==
 804:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		(uint64_t)-1) : true;
 2310              	 .loc 1 804 0
 2311 0854 FB79     	 ldrb r3,[r7,#7]
 2312 0856 002B     	 cmp r3,#0
 2313 0858 09D0     	 beq .L146
 803:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		(uint64_t)-1) : true;
 2314              	 .loc 1 803 0 discriminator 2
 2315 085a FFF7FEFF 	 bl flashcalw_read_all_gp_fuses
 2316 085e 0346     	 mov r3,r0
 2317 0860 0C46     	 mov r4,r1
 2318              	 .loc 1 804 0 discriminator 2
 2319 0862 B4F1FF3F 	 cmp r4,#-1
 2320 0866 08BF     	 it eq
 2321 0868 B3F1FF3F 	 cmpeq r3,#-1
 2322 086c 01D1     	 bne .L147
 2323              	.L146:
 2324              	 .loc 1 804 0 is_stmt 0 discriminator 3
 2325 086e 0123     	 movs r3,#1
 2326 0870 00E0     	 b .L148
 2327              	.L147:
 2328              	 .loc 1 804 0 discriminator 4
 2329 0872 0023     	 movs r3,#0
 2330              	.L148:
 2331              	 .loc 1 804 0 discriminator 6
 2332 0874 03F00103 	 and r3,r3,#1
 2333 0878 DBB2     	 uxtb r3,r3
 805:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2334              	 .loc 1 805 0 is_stmt 1 discriminator 6
 2335 087a 1846     	 mov r0,r3
 2336 087c 0C37     	 adds r7,r7,#12
 2337              	.LCFI170:
 2338              	 .cfi_def_cfa_offset 12
 2339 087e BD46     	 mov sp,r7
 2340              	.LCFI171:
 2341              	 .cfi_def_cfa_register 13
 2342              	 
 2343 0880 90BD     	 pop {r4,r7,pc}
 2344              	 .cfi_endproc
 2345              	.LFE219:
 2347              	 .align 1
 2348              	 .global flashcalw_write_gp_fuse_bit
 2349              	 .syntax unified
 2350              	 .thumb
 2351              	 .thumb_func
 2352              	 .fpu softvfp
 2354              	flashcalw_write_gp_fuse_bit:
 2355              	.LFB220:
 806:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 807:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Writes a general-purpose fuse bit.
 808:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 809:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param gp_fuse_bit The general-purpose fuse bit: \c 0 to \c 63.
 810:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param value The value of the specified general-purpose fuse bit.
 811:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 812:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active and the command
 813:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * is applied to BOOTPROT.
 814:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 815:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 816:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 817:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 818:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note A write operation can only clear bits; in other words, an erase
 819:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *  operation must first be done if some bits need to be set to 1.
 820:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 821:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 822:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 823:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 824:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 825:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_write_gp_fuse_bit(uint32_t gp_fuse_bit, bool value)
 826:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2356              	 .loc 1 826 0
 2357              	 .cfi_startproc
 2358              	 
 2359              	 
 2360 0882 80B5     	 push {r7,lr}
 2361              	.LCFI172:
 2362              	 .cfi_def_cfa_offset 8
 2363              	 .cfi_offset 7,-8
 2364              	 .cfi_offset 14,-4
 2365 0884 82B0     	 sub sp,sp,#8
 2366              	.LCFI173:
 2367              	 .cfi_def_cfa_offset 16
 2368 0886 00AF     	 add r7,sp,#0
 2369              	.LCFI174:
 2370              	 .cfi_def_cfa_register 7
 2371 0888 7860     	 str r0,[r7,#4]
 2372 088a 0B46     	 mov r3,r1
 2373 088c FB70     	 strb r3,[r7,#3]
 827:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	if (!value) {
 2374              	 .loc 1 827 0
 2375 088e FB78     	 ldrb r3,[r7,#3]
 2376 0890 83F00103 	 eor r3,r3,#1
 2377 0894 DBB2     	 uxtb r3,r3
 2378 0896 002B     	 cmp r3,#0
 2379 0898 06D0     	 beq .L152
 828:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_issue_command(FLASHCALW_FCMD_CMD_WGPB, gp_fuse_bit
 829:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				& 0x3F);
 2380              	 .loc 1 829 0
 2381 089a 7B68     	 ldr r3,[r7,#4]
 828:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_issue_command(FLASHCALW_FCMD_CMD_WGPB, gp_fuse_bit
 2382              	 .loc 1 828 0
 2383 089c 03F03F03 	 and r3,r3,#63
 2384 08a0 1946     	 mov r1,r3
 2385 08a2 0720     	 movs r0,#7
 2386 08a4 FFF7FEFF 	 bl flashcalw_issue_command
 2387              	.L152:
 830:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 831:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2388              	 .loc 1 831 0
 2389 08a8 00BF     	 nop
 2390 08aa 0837     	 adds r7,r7,#8
 2391              	.LCFI175:
 2392              	 .cfi_def_cfa_offset 8
 2393 08ac BD46     	 mov sp,r7
 2394              	.LCFI176:
 2395              	 .cfi_def_cfa_register 13
 2396              	 
 2397 08ae 80BD     	 pop {r7,pc}
 2398              	 .cfi_endproc
 2399              	.LFE220:
 2401              	 .align 1
 2402              	 .global flashcalw_write_gp_fuse_bitfield
 2403              	 .syntax unified
 2404              	 .thumb
 2405              	 .thumb_func
 2406              	 .fpu softvfp
 2408              	flashcalw_write_gp_fuse_bitfield:
 2409              	.LFB221:
 832:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 833:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Writes a general-purpose fuse bit-field.
 834:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 835:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param pos The bit-position of the general-purpose fuse bit-field: \c 0 to
 836:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *            \c 63.
 837:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param width The bit-width of the general-purpose fuse bit-field: \c 0 to
 838:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *              \c 64.
 839:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param value The value of the specified general-purpose fuse bit-field.
 840:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 841:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active and the command
 842:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * is applied to BOOTPROT.
 843:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 844:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 845:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 846:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 847:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note A write operation can only clear bits; in other words, an erase
 848:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *  operation must first be done if some bits need to be set to 1.
 849:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 850:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 851:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 852:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 853:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 854:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_write_gp_fuse_bitfield(uint32_t pos, uint32_t width,
 855:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		uint64_t value)
 856:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2410              	 .loc 1 856 0
 2411              	 .cfi_startproc
 2412              	 
 2413              	 
 2414 08b0 90B5     	 push {r4,r7,lr}
 2415              	.LCFI177:
 2416              	 .cfi_def_cfa_offset 12
 2417              	 .cfi_offset 4,-12
 2418              	 .cfi_offset 7,-8
 2419              	 .cfi_offset 14,-4
 2420 08b2 87B0     	 sub sp,sp,#28
 2421              	.LCFI178:
 2422              	 .cfi_def_cfa_offset 40
 2423 08b4 00AF     	 add r7,sp,#0
 2424              	.LCFI179:
 2425              	 .cfi_def_cfa_register 7
 2426 08b6 F860     	 str r0,[r7,#12]
 2427 08b8 B960     	 str r1,[r7,#8]
 2428 08ba C7E90023 	 strd r2,[r7]
 857:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status = 0;
 2429              	 .loc 1 857 0
 2430 08be 0023     	 movs r3,#0
 2431 08c0 7B61     	 str r3,[r7,#20]
 858:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t gp_fuse_bit;
 859:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 860:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	pos &= 0x3F;
 2432              	 .loc 1 860 0
 2433 08c2 FB68     	 ldr r3,[r7,#12]
 2434 08c4 03F03F03 	 and r3,r3,#63
 2435 08c8 FB60     	 str r3,[r7,#12]
 861:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	width = Min(width, 64);
 2436              	 .loc 1 861 0
 2437 08ca BB68     	 ldr r3,[r7,#8]
 2438 08cc 402B     	 cmp r3,#64
 2439 08ce 28BF     	 it cs
 2440 08d0 4023     	 movcs r3,#64
 2441 08d2 BB60     	 str r3,[r7,#8]
 862:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 863:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	for (gp_fuse_bit = pos; gp_fuse_bit < pos + width;
 2442              	 .loc 1 863 0
 2443 08d4 FB68     	 ldr r3,[r7,#12]
 2444 08d6 3B61     	 str r3,[r7,#16]
 2445 08d8 22E0     	 b .L154
 2446              	.L155:
 864:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			gp_fuse_bit++, value >>= 1) {
 865:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_gp_fuse_bit(gp_fuse_bit, value & 0x01);
 2447              	 .loc 1 865 0
 2448 08da D7E90034 	 ldrd r3,[r7]
 2449 08de 4FF00101 	 mov r1,#1
 2450 08e2 4FF00002 	 mov r2,#0
 2451 08e6 03EA0103 	 and r3,r3,r1
 2452 08ea 04EA0204 	 and r4,r4,r2
 2453 08ee 2343     	 orrs r3,r3,r4
 2454 08f0 002B     	 cmp r3,#0
 2455 08f2 14BF     	 ite ne
 2456 08f4 0123     	 movne r3,#1
 2457 08f6 0023     	 moveq r3,#0
 2458 08f8 DBB2     	 uxtb r3,r3
 2459 08fa 1946     	 mov r1,r3
 2460 08fc 3869     	 ldr r0,[r7,#16]
 2461 08fe FFF7FEFF 	 bl flashcalw_write_gp_fuse_bit
 866:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 2462              	 .loc 1 866 0
 2463 0902 0E4B     	 ldr r3,.L156
 2464 0904 1B68     	 ldr r3,[r3]
 2465 0906 7A69     	 ldr r2,[r7,#20]
 2466 0908 1343     	 orrs r3,r3,r2
 2467 090a 7B61     	 str r3,[r7,#20]
 864:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			gp_fuse_bit++, value >>= 1) {
 2468              	 .loc 1 864 0
 2469 090c 3B69     	 ldr r3,[r7,#16]
 2470 090e 0133     	 adds r3,r3,#1
 2471 0910 3B61     	 str r3,[r7,#16]
 2472 0912 D7E90034 	 ldrd r3,[r7]
 2473 0916 6408     	 movs r4,r4,lsr#1
 2474 0918 4FEA3303 	 mov r3,r3,rrx
 2475 091c C7E90034 	 strd r3,[r7]
 2476              	.L154:
 863:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			gp_fuse_bit++, value >>= 1) {
 2477              	 .loc 1 863 0 discriminator 1
 2478 0920 FA68     	 ldr r2,[r7,#12]
 2479 0922 BB68     	 ldr r3,[r7,#8]
 2480 0924 1A44     	 add r2,r2,r3
 2481 0926 3B69     	 ldr r3,[r7,#16]
 2482 0928 9A42     	 cmp r2,r3
 2483 092a D6D8     	 bhi .L155
 867:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 868:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 2484              	 .loc 1 868 0
 2485 092c 034A     	 ldr r2,.L156
 2486 092e 7B69     	 ldr r3,[r7,#20]
 2487 0930 1360     	 str r3,[r2]
 869:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2488              	 .loc 1 869 0
 2489 0932 00BF     	 nop
 2490 0934 1C37     	 adds r7,r7,#28
 2491              	.LCFI180:
 2492              	 .cfi_def_cfa_offset 12
 2493 0936 BD46     	 mov sp,r7
 2494              	.LCFI181:
 2495              	 .cfi_def_cfa_register 13
 2496              	 
 2497 0938 90BD     	 pop {r4,r7,pc}
 2498              	.L157:
 2499 093a 00BF     	 .align 2
 2500              	.L156:
 2501 093c 00000000 	 .word flashcalw_error_status
 2502              	 .cfi_endproc
 2503              	.LFE221:
 2505              	 .align 1
 2506              	 .global flashcalw_write_gp_fuse_byte
 2507              	 .syntax unified
 2508              	 .thumb
 2509              	 .thumb_func
 2510              	 .fpu softvfp
 2512              	flashcalw_write_gp_fuse_byte:
 2513              	.LFB222:
 870:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 871:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Writes a general-purpose fuse byte.
 872:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 873:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param gp_fuse_byte The general-purpose fuse byte: \c 0 to \c 7.
 874:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param value The value of the specified general-purpose fuse byte.
 875:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 876:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active.
 877:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 878:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 879:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 880:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 881:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note A write operation can only clear bits; in other words, an erase
 882:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *  operation must first be done if some bits need to be set to 1.
 883:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 884:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 885:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 886:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 887:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 888:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_write_gp_fuse_byte(uint32_t gp_fuse_byte, uint8_t value)
 889:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2514              	 .loc 1 889 0
 2515              	 .cfi_startproc
 2516              	 
 2517              	 
 2518 0940 80B5     	 push {r7,lr}
 2519              	.LCFI182:
 2520              	 .cfi_def_cfa_offset 8
 2521              	 .cfi_offset 7,-8
 2522              	 .cfi_offset 14,-4
 2523 0942 82B0     	 sub sp,sp,#8
 2524              	.LCFI183:
 2525              	 .cfi_def_cfa_offset 16
 2526 0944 00AF     	 add r7,sp,#0
 2527              	.LCFI184:
 2528              	 .cfi_def_cfa_register 7
 2529 0946 7860     	 str r0,[r7,#4]
 2530 0948 0B46     	 mov r3,r1
 2531 094a FB70     	 strb r3,[r7,#3]
 890:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_PGPFB, (gp_fuse_byte & 0x07)
 2532              	 .loc 1 890 0
 2533 094c 7B68     	 ldr r3,[r7,#4]
 2534 094e 03F00703 	 and r3,r3,#7
 891:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			| value << 3);
 2535              	 .loc 1 891 0
 2536 0952 FA78     	 ldrb r2,[r7,#3]
 2537 0954 D200     	 lsls r2,r2,#3
 2538 0956 1343     	 orrs r3,r3,r2
 890:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_PGPFB, (gp_fuse_byte & 0x07)
 2539              	 .loc 1 890 0
 2540 0958 1946     	 mov r1,r3
 2541 095a 0A20     	 movs r0,#10
 2542 095c FFF7FEFF 	 bl flashcalw_issue_command
 892:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2543              	 .loc 1 892 0
 2544 0960 00BF     	 nop
 2545 0962 0837     	 adds r7,r7,#8
 2546              	.LCFI185:
 2547              	 .cfi_def_cfa_offset 8
 2548 0964 BD46     	 mov sp,r7
 2549              	.LCFI186:
 2550              	 .cfi_def_cfa_register 13
 2551              	 
 2552 0966 80BD     	 pop {r7,pc}
 2553              	 .cfi_endproc
 2554              	.LFE222:
 2556              	 .align 1
 2557              	 .global flashcalw_write_all_gp_fuses
 2558              	 .syntax unified
 2559              	 .thumb
 2560              	 .thumb_func
 2561              	 .fpu softvfp
 2563              	flashcalw_write_all_gp_fuses:
 2564              	.LFB223:
 893:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 894:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Writes all general-purpose fuses.
 895:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 896:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param value The value of all general-purpose fuses as a word.
 897:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 898:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active.
 899:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 900:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 901:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 902:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 903:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note A write operation can only clear bits; in other words, an erase
 904:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *  operation must first be done if some bits need to be set to 1.
 905:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 906:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 907:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 908:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 909:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 910:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_write_all_gp_fuses(uint64_t value)
 911:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2565              	 .loc 1 911 0
 2566              	 .cfi_startproc
 2567              	 
 2568              	 
 2569 0968 B0B5     	 push {r4,r5,r7,lr}
 2570              	.LCFI187:
 2571              	 .cfi_def_cfa_offset 16
 2572              	 .cfi_offset 4,-16
 2573              	 .cfi_offset 5,-12
 2574              	 .cfi_offset 7,-8
 2575              	 .cfi_offset 14,-4
 2576 096a 84B0     	 sub sp,sp,#16
 2577              	.LCFI188:
 2578              	 .cfi_def_cfa_offset 32
 2579 096c 00AF     	 add r7,sp,#0
 2580              	.LCFI189:
 2581              	 .cfi_def_cfa_register 7
 2582 096e C7E90001 	 strd r0,[r7]
 912:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status = 0;
 2583              	 .loc 1 912 0
 2584 0972 0023     	 movs r3,#0
 2585 0974 FB60     	 str r3,[r7,#12]
 913:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t gp_fuse_byte;
 914:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 915:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	for (gp_fuse_byte = 0; gp_fuse_byte < 8; gp_fuse_byte++, value >>= 8) {
 2586              	 .loc 1 915 0
 2587 0976 0023     	 movs r3,#0
 2588 0978 BB60     	 str r3,[r7,#8]
 2589 097a 14E0     	 b .L160
 2590              	.L161:
 916:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_gp_fuse_byte(gp_fuse_byte, value);
 2591              	 .loc 1 916 0 discriminator 3
 2592 097c 3B78     	 ldrb r3,[r7]
 2593 097e 1946     	 mov r1,r3
 2594 0980 B868     	 ldr r0,[r7,#8]
 2595 0982 FFF7FEFF 	 bl flashcalw_write_gp_fuse_byte
 917:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 2596              	 .loc 1 917 0 discriminator 3
 2597 0986 0D4B     	 ldr r3,.L162
 2598 0988 1B68     	 ldr r3,[r3]
 2599 098a FA68     	 ldr r2,[r7,#12]
 2600 098c 1343     	 orrs r3,r3,r2
 2601 098e FB60     	 str r3,[r7,#12]
 915:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_gp_fuse_byte(gp_fuse_byte, value);
 2602              	 .loc 1 915 0 discriminator 3
 2603 0990 BB68     	 ldr r3,[r7,#8]
 2604 0992 0133     	 adds r3,r3,#1
 2605 0994 BB60     	 str r3,[r7,#8]
 2606 0996 D7E90023 	 ldrd r2,[r7]
 2607 099a 140A     	 lsrs r4,r2,#8
 2608 099c 44EA0364 	 orr r4,r4,r3,lsl#24
 2609 09a0 1D0A     	 lsrs r5,r3,#8
 2610 09a2 C7E90045 	 strd r4,[r7]
 2611              	.L160:
 915:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_gp_fuse_byte(gp_fuse_byte, value);
 2612              	 .loc 1 915 0 is_stmt 0 discriminator 1
 2613 09a6 BB68     	 ldr r3,[r7,#8]
 2614 09a8 072B     	 cmp r3,#7
 2615 09aa E7D9     	 bls .L161
 918:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 919:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 2616              	 .loc 1 919 0 is_stmt 1
 2617 09ac 034A     	 ldr r2,.L162
 2618 09ae FB68     	 ldr r3,[r7,#12]
 2619 09b0 1360     	 str r3,[r2]
 920:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2620              	 .loc 1 920 0
 2621 09b2 00BF     	 nop
 2622 09b4 1037     	 adds r7,r7,#16
 2623              	.LCFI190:
 2624              	 .cfi_def_cfa_offset 16
 2625 09b6 BD46     	 mov sp,r7
 2626              	.LCFI191:
 2627              	 .cfi_def_cfa_register 13
 2628              	 
 2629 09b8 B0BD     	 pop {r4,r5,r7,pc}
 2630              	.L163:
 2631 09ba 00BF     	 .align 2
 2632              	.L162:
 2633 09bc 00000000 	 .word flashcalw_error_status
 2634              	 .cfi_endproc
 2635              	.LFE223:
 2637              	 .align 1
 2638              	 .global flashcalw_set_gp_fuse_bit
 2639              	 .syntax unified
 2640              	 .thumb
 2641              	 .thumb_func
 2642              	 .fpu softvfp
 2644              	flashcalw_set_gp_fuse_bit:
 2645              	.LFB224:
 921:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 922:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Sets a general-purpose fuse bit with the appropriate erase and write
 923:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         operations.
 924:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 925:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param gp_fuse_bit The general-purpose fuse bit: \c 0 to \c 63.
 926:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param value The value of the specified general-purpose fuse bit.
 927:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 928:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active and the command
 929:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * is applied to BOOTPROT.
 930:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 931:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 932:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 933:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 934:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 935:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 936:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 937:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 938:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_set_gp_fuse_bit(uint32_t gp_fuse_bit, bool value)
 939:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2646              	 .loc 1 939 0
 2647              	 .cfi_startproc
 2648              	 
 2649              	 
 2650 09c0 80B5     	 push {r7,lr}
 2651              	.LCFI192:
 2652              	 .cfi_def_cfa_offset 8
 2653              	 .cfi_offset 7,-8
 2654              	 .cfi_offset 14,-4
 2655 09c2 82B0     	 sub sp,sp,#8
 2656              	.LCFI193:
 2657              	 .cfi_def_cfa_offset 16
 2658 09c4 00AF     	 add r7,sp,#0
 2659              	.LCFI194:
 2660              	 .cfi_def_cfa_register 7
 2661 09c6 7860     	 str r0,[r7,#4]
 2662 09c8 0B46     	 mov r3,r1
 2663 09ca FB70     	 strb r3,[r7,#3]
 940:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	if (value) {
 2664              	 .loc 1 940 0
 2665 09cc FB78     	 ldrb r3,[r7,#3]
 2666 09ce 002B     	 cmp r3,#0
 2667 09d0 04D0     	 beq .L165
 941:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_erase_gp_fuse_bit(gp_fuse_bit, false);
 2668              	 .loc 1 941 0
 2669 09d2 0021     	 movs r1,#0
 2670 09d4 7868     	 ldr r0,[r7,#4]
 2671 09d6 FFF7FEFF 	 bl flashcalw_erase_gp_fuse_bit
 942:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	} else {
 943:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_gp_fuse_bit(gp_fuse_bit, false);
 944:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 945:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2672              	 .loc 1 945 0
 2673 09da 03E0     	 b .L167
 2674              	.L165:
 943:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 2675              	 .loc 1 943 0
 2676 09dc 0021     	 movs r1,#0
 2677 09de 7868     	 ldr r0,[r7,#4]
 2678 09e0 FFF7FEFF 	 bl flashcalw_write_gp_fuse_bit
 2679              	.L167:
 2680              	 .loc 1 945 0
 2681 09e4 00BF     	 nop
 2682 09e6 0837     	 adds r7,r7,#8
 2683              	.LCFI195:
 2684              	 .cfi_def_cfa_offset 8
 2685 09e8 BD46     	 mov sp,r7
 2686              	.LCFI196:
 2687              	 .cfi_def_cfa_register 13
 2688              	 
 2689 09ea 80BD     	 pop {r7,pc}
 2690              	 .cfi_endproc
 2691              	.LFE224:
 2693              	 .align 1
 2694              	 .global flashcalw_set_gp_fuse_bitfield
 2695              	 .syntax unified
 2696              	 .thumb
 2697              	 .thumb_func
 2698              	 .fpu softvfp
 2700              	flashcalw_set_gp_fuse_bitfield:
 2701              	.LFB225:
 946:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 947:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Sets a general-purpose fuse bit-field with the appropriate erase and
 948:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         write operations.
 949:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 950:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param pos The bit-position of the general-purpose fuse bit-field: \c 0 to
 951:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *            \c 63.
 952:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param width The bit-width of the general-purpose fuse bit-field: \c 0 to
 953:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *              \c 64.
 954:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param value The value of the specified general-purpose fuse bit-field.
 955:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 956:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active and the command
 957:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * is applied to BOOTPROT.
 958:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 959:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 960:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 961:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 962:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 963:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 964:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 965:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 966:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_set_gp_fuse_bitfield(uint32_t pos, uint32_t width,
 967:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		uint64_t value)
 968:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2702              	 .loc 1 968 0
 2703              	 .cfi_startproc
 2704              	 
 2705              	 
 2706 09ec 90B5     	 push {r4,r7,lr}
 2707              	.LCFI197:
 2708              	 .cfi_def_cfa_offset 12
 2709              	 .cfi_offset 4,-12
 2710              	 .cfi_offset 7,-8
 2711              	 .cfi_offset 14,-4
 2712 09ee 87B0     	 sub sp,sp,#28
 2713              	.LCFI198:
 2714              	 .cfi_def_cfa_offset 40
 2715 09f0 00AF     	 add r7,sp,#0
 2716              	.LCFI199:
 2717              	 .cfi_def_cfa_register 7
 2718 09f2 F860     	 str r0,[r7,#12]
 2719 09f4 B960     	 str r1,[r7,#8]
 2720 09f6 C7E90023 	 strd r2,[r7]
 969:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status = 0;
 2721              	 .loc 1 969 0
 2722 09fa 0023     	 movs r3,#0
 2723 09fc 7B61     	 str r3,[r7,#20]
 970:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t gp_fuse_bit;
 971:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 972:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	pos &= 0x3F;
 2724              	 .loc 1 972 0
 2725 09fe FB68     	 ldr r3,[r7,#12]
 2726 0a00 03F03F03 	 and r3,r3,#63
 2727 0a04 FB60     	 str r3,[r7,#12]
 973:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	width = Min(width, 64);
 2728              	 .loc 1 973 0
 2729 0a06 BB68     	 ldr r3,[r7,#8]
 2730 0a08 402B     	 cmp r3,#64
 2731 0a0a 28BF     	 it cs
 2732 0a0c 4023     	 movcs r3,#64
 2733 0a0e BB60     	 str r3,[r7,#8]
 974:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 975:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	for (gp_fuse_bit = pos; gp_fuse_bit < pos + width;
 2734              	 .loc 1 975 0
 2735 0a10 FB68     	 ldr r3,[r7,#12]
 2736 0a12 3B61     	 str r3,[r7,#16]
 2737 0a14 22E0     	 b .L169
 2738              	.L170:
 976:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			gp_fuse_bit++, value >>= 1) {
 977:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_set_gp_fuse_bit(gp_fuse_bit, value & 0x01);
 2739              	 .loc 1 977 0
 2740 0a16 D7E90034 	 ldrd r3,[r7]
 2741 0a1a 4FF00101 	 mov r1,#1
 2742 0a1e 4FF00002 	 mov r2,#0
 2743 0a22 03EA0103 	 and r3,r3,r1
 2744 0a26 04EA0204 	 and r4,r4,r2
 2745 0a2a 2343     	 orrs r3,r3,r4
 2746 0a2c 002B     	 cmp r3,#0
 2747 0a2e 14BF     	 ite ne
 2748 0a30 0123     	 movne r3,#1
 2749 0a32 0023     	 moveq r3,#0
 2750 0a34 DBB2     	 uxtb r3,r3
 2751 0a36 1946     	 mov r1,r3
 2752 0a38 3869     	 ldr r0,[r7,#16]
 2753 0a3a FFF7FEFF 	 bl flashcalw_set_gp_fuse_bit
 978:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 2754              	 .loc 1 978 0
 2755 0a3e 0E4B     	 ldr r3,.L171
 2756 0a40 1B68     	 ldr r3,[r3]
 2757 0a42 7A69     	 ldr r2,[r7,#20]
 2758 0a44 1343     	 orrs r3,r3,r2
 2759 0a46 7B61     	 str r3,[r7,#20]
 976:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			gp_fuse_bit++, value >>= 1) {
 2760              	 .loc 1 976 0
 2761 0a48 3B69     	 ldr r3,[r7,#16]
 2762 0a4a 0133     	 adds r3,r3,#1
 2763 0a4c 3B61     	 str r3,[r7,#16]
 2764 0a4e D7E90034 	 ldrd r3,[r7]
 2765 0a52 6408     	 movs r4,r4,lsr#1
 2766 0a54 4FEA3303 	 mov r3,r3,rrx
 2767 0a58 C7E90034 	 strd r3,[r7]
 2768              	.L169:
 975:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			gp_fuse_bit++, value >>= 1) {
 2769              	 .loc 1 975 0 discriminator 1
 2770 0a5c FA68     	 ldr r2,[r7,#12]
 2771 0a5e BB68     	 ldr r3,[r7,#8]
 2772 0a60 1A44     	 add r2,r2,r3
 2773 0a62 3B69     	 ldr r3,[r7,#16]
 2774 0a64 9A42     	 cmp r2,r3
 2775 0a66 D6D8     	 bhi .L170
 979:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
 980:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 2776              	 .loc 1 980 0
 2777 0a68 034A     	 ldr r2,.L171
 2778 0a6a 7B69     	 ldr r3,[r7,#20]
 2779 0a6c 1360     	 str r3,[r2]
 981:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2780              	 .loc 1 981 0
 2781 0a6e 00BF     	 nop
 2782 0a70 1C37     	 adds r7,r7,#28
 2783              	.LCFI200:
 2784              	 .cfi_def_cfa_offset 12
 2785 0a72 BD46     	 mov sp,r7
 2786              	.LCFI201:
 2787              	 .cfi_def_cfa_register 13
 2788              	 
 2789 0a74 90BD     	 pop {r4,r7,pc}
 2790              	.L172:
 2791 0a76 00BF     	 .align 2
 2792              	.L171:
 2793 0a78 00000000 	 .word flashcalw_error_status
 2794              	 .cfi_endproc
 2795              	.LFE225:
 2797              	 .align 1
 2798              	 .global flashcalw_set_gp_fuse_byte
 2799              	 .syntax unified
 2800              	 .thumb
 2801              	 .thumb_func
 2802              	 .fpu softvfp
 2804              	flashcalw_set_gp_fuse_byte:
 2805              	.LFB226:
 982:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
 983:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Sets a general-purpose fuse byte with the appropriate erase and write
 984:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         operations.
 985:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 986:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param gp_fuse_byte The general-purpose fuse byte: \c 0 to \c 7.
 987:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param value The value of the specified general-purpose fuse byte.
 988:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 989:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active.
 990:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 991:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
 992:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
 993:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
 994:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
 995:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
 996:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
 997:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
 998:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_set_gp_fuse_byte(uint32_t gp_fuse_byte, uint8_t value)
 999:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2806              	 .loc 1 999 0
 2807              	 .cfi_startproc
 2808              	 
 2809              	 
 2810 0a7c 80B5     	 push {r7,lr}
 2811              	.LCFI202:
 2812              	 .cfi_def_cfa_offset 8
 2813              	 .cfi_offset 7,-8
 2814              	 .cfi_offset 14,-4
 2815 0a7e 84B0     	 sub sp,sp,#16
 2816              	.LCFI203:
 2817              	 .cfi_def_cfa_offset 24
 2818 0a80 00AF     	 add r7,sp,#0
 2819              	.LCFI204:
 2820              	 .cfi_def_cfa_register 7
 2821 0a82 7860     	 str r0,[r7,#4]
 2822 0a84 0B46     	 mov r3,r1
 2823 0a86 FB70     	 strb r3,[r7,#3]
1000:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status;
1001:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1002:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	switch (value) {
 2824              	 .loc 1 1002 0
 2825 0a88 FB78     	 ldrb r3,[r7,#3]
 2826 0a8a 002B     	 cmp r3,#0
 2827 0a8c 06D0     	 beq .L175
 2828 0a8e FF2B     	 cmp r3,#255
 2829 0a90 09D1     	 bne .L178
1003:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	case 0xFF:
1004:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_erase_gp_fuse_byte(gp_fuse_byte, false);
 2830              	 .loc 1 1004 0
 2831 0a92 0021     	 movs r1,#0
 2832 0a94 7868     	 ldr r0,[r7,#4]
 2833 0a96 FFF7FEFF 	 bl flashcalw_erase_gp_fuse_byte
1005:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		break;
 2834              	 .loc 1 1005 0
 2835 0a9a 17E0     	 b .L177
 2836              	.L175:
1006:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1007:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	case 0x00:
1008:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_gp_fuse_byte(gp_fuse_byte, 0x00);
 2837              	 .loc 1 1008 0
 2838 0a9c 0021     	 movs r1,#0
 2839 0a9e 7868     	 ldr r0,[r7,#4]
 2840 0aa0 FFF7FEFF 	 bl flashcalw_write_gp_fuse_byte
1009:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		break;
 2841              	 .loc 1 1009 0
 2842 0aa4 12E0     	 b .L177
 2843              	.L178:
1010:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1011:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	default:
1012:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_erase_gp_fuse_byte(gp_fuse_byte, false);
 2844              	 .loc 1 1012 0
 2845 0aa6 0021     	 movs r1,#0
 2846 0aa8 7868     	 ldr r0,[r7,#4]
 2847 0aaa FFF7FEFF 	 bl flashcalw_erase_gp_fuse_byte
1013:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status = flashcalw_error_status;
 2848              	 .loc 1 1013 0
 2849 0aae 094B     	 ldr r3,.L179
 2850 0ab0 1B68     	 ldr r3,[r3]
 2851 0ab2 FB60     	 str r3,[r7,#12]
1014:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_gp_fuse_byte(gp_fuse_byte, value);
 2852              	 .loc 1 1014 0
 2853 0ab4 FB78     	 ldrb r3,[r7,#3]
 2854 0ab6 1946     	 mov r1,r3
 2855 0ab8 7868     	 ldr r0,[r7,#4]
 2856 0aba FFF7FEFF 	 bl flashcalw_write_gp_fuse_byte
1015:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_error_status |= error_status;
 2857              	 .loc 1 1015 0
 2858 0abe 054B     	 ldr r3,.L179
 2859 0ac0 1A68     	 ldr r2,[r3]
 2860 0ac2 FB68     	 ldr r3,[r7,#12]
 2861 0ac4 1343     	 orrs r3,r3,r2
 2862 0ac6 034A     	 ldr r2,.L179
 2863 0ac8 1360     	 str r3,[r2]
1016:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		break;
 2864              	 .loc 1 1016 0
 2865 0aca 00BF     	 nop
 2866              	.L177:
1017:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1018:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2867              	 .loc 1 1018 0
 2868 0acc 00BF     	 nop
 2869 0ace 1037     	 adds r7,r7,#16
 2870              	.LCFI205:
 2871              	 .cfi_def_cfa_offset 8
 2872 0ad0 BD46     	 mov sp,r7
 2873              	.LCFI206:
 2874              	 .cfi_def_cfa_register 13
 2875              	 
 2876 0ad2 80BD     	 pop {r7,pc}
 2877              	.L180:
 2878              	 .align 2
 2879              	.L179:
 2880 0ad4 00000000 	 .word flashcalw_error_status
 2881              	 .cfi_endproc
 2882              	.LFE226:
 2884              	 .align 1
 2885              	 .global flashcalw_set_all_gp_fuses
 2886              	 .syntax unified
 2887              	 .thumb
 2888              	 .thumb_func
 2889              	 .fpu softvfp
 2891              	flashcalw_set_all_gp_fuses:
 2892              	.LFB227:
1019:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1020:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Sets all general-purpose fuses with the appropriate erase and write
1021:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         operations.
1022:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1023:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param value The value of all general-purpose fuses as a word.
1024:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1025:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the Security bit is active.
1026:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1027:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1028:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1029:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1030:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The actual number of general-purpose fuse bits implemented by hardware
1031:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       is given by \c FLASH_GPF_NUM. The other bits among the 64 are
1032:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       fixed at 1 by hardware.
1033:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1034:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_set_all_gp_fuses(uint64_t value)
1035:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2893              	 .loc 1 1035 0
 2894              	 .cfi_startproc
 2895              	 
 2896              	 
 2897 0ad8 90B5     	 push {r4,r7,lr}
 2898              	.LCFI207:
 2899              	 .cfi_def_cfa_offset 12
 2900              	 .cfi_offset 4,-12
 2901              	 .cfi_offset 7,-8
 2902              	 .cfi_offset 14,-4
 2903 0ada 85B0     	 sub sp,sp,#20
 2904              	.LCFI208:
 2905              	 .cfi_def_cfa_offset 32
 2906 0adc 00AF     	 add r7,sp,#0
 2907              	.LCFI209:
 2908              	 .cfi_def_cfa_register 7
 2909 0ade C7E90001 	 strd r0,[r7]
1036:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status;
1037:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1038:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	switch (value) {
 2910              	 .loc 1 1038 0
 2911 0ae2 D7E90034 	 ldrd r3,[r7]
 2912 0ae6 53EA0402 	 orrs r2,r3,r4
 2913 0aea 09D0     	 beq .L183
 2914 0aec B4F1FF3F 	 cmp r4,#-1
 2915 0af0 08BF     	 it eq
 2916 0af2 B3F1FF3F 	 cmpeq r3,#-1
 2917 0af6 0AD1     	 bne .L186
1039:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/**
1040:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 * use (uint64_t)-1 instead of 0xFFFFFFFFFFFFFFFFULL to avoid
1041:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 * compilation warning
1042:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 */
1043:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	case (uint64_t)-1:
1044:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_erase_all_gp_fuses(false);
 2918              	 .loc 1 1044 0
 2919 0af8 0020     	 movs r0,#0
 2920 0afa FFF7FEFF 	 bl flashcalw_erase_all_gp_fuses
1045:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		break;
 2921              	 .loc 1 1045 0
 2922 0afe 17E0     	 b .L185
 2923              	.L183:
1046:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1047:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	case (uint64_t)0:
1048:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_all_gp_fuses((uint64_t)0);
 2924              	 .loc 1 1048 0
 2925 0b00 4FF00000 	 mov r0,#0
 2926 0b04 4FF00001 	 mov r1,#0
 2927 0b08 FFF7FEFF 	 bl flashcalw_write_all_gp_fuses
1049:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		break;
 2928              	 .loc 1 1049 0
 2929 0b0c 10E0     	 b .L185
 2930              	.L186:
1050:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1051:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	default:
1052:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_erase_all_gp_fuses(false);
 2931              	 .loc 1 1052 0
 2932 0b0e 0020     	 movs r0,#0
 2933 0b10 FFF7FEFF 	 bl flashcalw_erase_all_gp_fuses
1053:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status = flashcalw_error_status;
 2934              	 .loc 1 1053 0
 2935 0b14 084B     	 ldr r3,.L187
 2936 0b16 1B68     	 ldr r3,[r3]
 2937 0b18 FB60     	 str r3,[r7,#12]
1054:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_write_all_gp_fuses(value);
 2938              	 .loc 1 1054 0
 2939 0b1a D7E90001 	 ldrd r0,[r7]
 2940 0b1e FFF7FEFF 	 bl flashcalw_write_all_gp_fuses
1055:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_error_status |= error_status;
 2941              	 .loc 1 1055 0
 2942 0b22 054B     	 ldr r3,.L187
 2943 0b24 1A68     	 ldr r2,[r3]
 2944 0b26 FB68     	 ldr r3,[r7,#12]
 2945 0b28 1343     	 orrs r3,r3,r2
 2946 0b2a 034A     	 ldr r2,.L187
 2947 0b2c 1360     	 str r3,[r2]
1056:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		break;
 2948              	 .loc 1 1056 0
 2949 0b2e 00BF     	 nop
 2950              	.L185:
1057:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1058:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2951              	 .loc 1 1058 0
 2952 0b30 00BF     	 nop
 2953 0b32 1437     	 adds r7,r7,#20
 2954              	.LCFI210:
 2955              	 .cfi_def_cfa_offset 12
 2956 0b34 BD46     	 mov sp,r7
 2957              	.LCFI211:
 2958              	 .cfi_def_cfa_register 13
 2959              	 
 2960 0b36 90BD     	 pop {r4,r7,pc}
 2961              	.L188:
 2962              	 .align 2
 2963              	.L187:
 2964 0b38 00000000 	 .word flashcalw_error_status
 2965              	 .cfi_endproc
 2966              	.LFE227:
 2968              	 .align 1
 2969              	 .global flashcalw_clear_page_buffer
 2970              	 .syntax unified
 2971              	 .thumb
 2972              	 .thumb_func
 2973              	 .fpu softvfp
 2975              	flashcalw_clear_page_buffer:
 2976              	.LFB228:
1059:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1060:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @}
1061:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1062:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name Access to Flash Pages
1063:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1064:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
1065:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1066:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Clears the page buffer.
1067:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1068:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * This command resets all bits in the page buffer to one. Write accesses to the
1069:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * page buffer can only change page buffer bits from one to zero.
1070:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1071:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning The page buffer is not automatically reset after a page write.
1072:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1073:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1074:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1075:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1076:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_clear_page_buffer(void)
1077:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 2977              	 .loc 1 1077 0
 2978              	 .cfi_startproc
 2979              	 
 2980              	 
 2981 0b3c 80B5     	 push {r7,lr}
 2982              	.LCFI212:
 2983              	 .cfi_def_cfa_offset 8
 2984              	 .cfi_offset 7,-8
 2985              	 .cfi_offset 14,-4
 2986 0b3e 00AF     	 add r7,sp,#0
 2987              	.LCFI213:
 2988              	 .cfi_def_cfa_register 7
1078:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_CPB, -1);
 2989              	 .loc 1 1078 0
 2990 0b40 4FF0FF31 	 mov r1,#-1
 2991 0b44 0320     	 movs r0,#3
 2992 0b46 FFF7FEFF 	 bl flashcalw_issue_command
1079:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 2993              	 .loc 1 1079 0
 2994 0b4a 00BF     	 nop
 2995 0b4c 80BD     	 pop {r7,pc}
 2996              	 .cfi_endproc
 2997              	.LFE228:
 2999              	 .align 1
 3000              	 .global flashcalw_is_page_erased
 3001              	 .syntax unified
 3002              	 .thumb
 3003              	 .thumb_func
 3004              	 .fpu softvfp
 3006              	flashcalw_is_page_erased:
 3007              	.LFB229:
1080:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1081:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Tells whether the page to which the last Quick Page Read or Quick
1082:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         Page Read User Page command was applied was erased.
1083:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1084:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the page to which the last Quick Page Read or Quick Page Read
1085:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         User Page command was applied was erased.
1086:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1087:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_is_page_erased(void)
1088:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3008              	 .loc 1 1088 0
 3009              	 .cfi_startproc
 3010              	 
 3011              	 
 3012              	 
 3013 0b4e 80B4     	 push {r7}
 3014              	.LCFI214:
 3015              	 .cfi_def_cfa_offset 4
 3016              	 .cfi_offset 7,-4
 3017 0b50 00AF     	 add r7,sp,#0
 3018              	.LCFI215:
 3019              	 .cfi_def_cfa_register 7
1089:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return ((HFLASHC->FLASHCALW_FSR & FLASHCALW_FSR_QPRR) != 0);
 3020              	 .loc 1 1089 0
 3021 0b52 064B     	 ldr r3,.L192
 3022 0b54 9B68     	 ldr r3,[r3,#8]
 3023 0b56 03F02003 	 and r3,r3,#32
 3024 0b5a 002B     	 cmp r3,#0
 3025 0b5c 14BF     	 ite ne
 3026 0b5e 0123     	 movne r3,#1
 3027 0b60 0023     	 moveq r3,#0
 3028 0b62 DBB2     	 uxtb r3,r3
1090:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3029              	 .loc 1 1090 0
 3030 0b64 1846     	 mov r0,r3
 3031 0b66 BD46     	 mov sp,r7
 3032              	.LCFI216:
 3033              	 .cfi_def_cfa_register 13
 3034              	 
 3035 0b68 80BC     	 pop {r7}
 3036              	.LCFI217:
 3037              	 .cfi_restore 7
 3038              	 .cfi_def_cfa_offset 0
 3039 0b6a 7047     	 bx lr
 3040              	.L193:
 3041              	 .align 2
 3042              	.L192:
 3043 0b6c 00000A40 	 .word 1074397184
 3044              	 .cfi_endproc
 3045              	.LFE229:
 3047              	 .align 1
 3048              	 .global flashcalw_quick_page_read
 3049              	 .syntax unified
 3050              	 .thumb
 3051              	 .thumb_func
 3052              	 .fpu softvfp
 3054              	flashcalw_quick_page_read:
 3055              	.LFB230:
1091:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1092:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Applies the Quick Page Read command to a page.
1093:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1094:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param page_number The page number:
1095:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg \c 0 to <tt>(flashcalw_get_page_count() - 1)</tt>: a page number
1096:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *        within the flash array;
1097:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg <tt>< 0</tt>: the current page number.
1098:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1099:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the specified page is erased.
1100:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1101:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1102:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1103:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1104:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_quick_page_read(int page_number)
1105:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3056              	 .loc 1 1105 0
 3057              	 .cfi_startproc
 3058              	 
 3059              	 
 3060 0b70 80B5     	 push {r7,lr}
 3061              	.LCFI218:
 3062              	 .cfi_def_cfa_offset 8
 3063              	 .cfi_offset 7,-8
 3064              	 .cfi_offset 14,-4
 3065 0b72 82B0     	 sub sp,sp,#8
 3066              	.LCFI219:
 3067              	 .cfi_def_cfa_offset 16
 3068 0b74 00AF     	 add r7,sp,#0
 3069              	.LCFI220:
 3070              	 .cfi_def_cfa_register 7
 3071 0b76 7860     	 str r0,[r7,#4]
1106:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_QPR, page_number);
 3072              	 .loc 1 1106 0
 3073 0b78 7968     	 ldr r1,[r7,#4]
 3074 0b7a 0C20     	 movs r0,#12
 3075 0b7c FFF7FEFF 	 bl flashcalw_issue_command
1107:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_is_page_erased();
 3076              	 .loc 1 1107 0
 3077 0b80 FFF7FEFF 	 bl flashcalw_is_page_erased
 3078 0b84 0346     	 mov r3,r0
1108:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3079              	 .loc 1 1108 0
 3080 0b86 1846     	 mov r0,r3
 3081 0b88 0837     	 adds r7,r7,#8
 3082              	.LCFI221:
 3083              	 .cfi_def_cfa_offset 8
 3084 0b8a BD46     	 mov sp,r7
 3085              	.LCFI222:
 3086              	 .cfi_def_cfa_register 13
 3087              	 
 3088 0b8c 80BD     	 pop {r7,pc}
 3089              	 .cfi_endproc
 3090              	.LFE230:
 3092              	 .align 1
 3093              	 .global flashcalw_erase_page
 3094              	 .syntax unified
 3095              	 .thumb
 3096              	 .thumb_func
 3097              	 .fpu softvfp
 3099              	flashcalw_erase_page:
 3100              	.LFB231:
1109:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1110:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Erases a page.
1111:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1112:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param page_number The page number:
1113:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg \c 0 to <tt>(flashcalw_get_page_count() - 1)</tt>: a page number
1114:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *        within the flash array;
1115:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg <tt>< 0</tt>: the current page number.
1116:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param check Whether to check erase: \c true or \c false.
1117:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1118:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the erase succeeded or always \c true if erase check was not
1119:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         requested.
1120:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1121:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the command is applied to a page belonging
1122:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          to a locked region or to the bootloader protected area.
1123:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1124:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1125:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1126:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1127:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note An erase operation can only set bits.
1128:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1129:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_erase_page(int page_number, bool check)
1130:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3101              	 .loc 1 1130 0
 3102              	 .cfi_startproc
 3103              	 
 3104              	 
 3105 0b8e 80B5     	 push {r7,lr}
 3106              	.LCFI223:
 3107              	 .cfi_def_cfa_offset 8
 3108              	 .cfi_offset 7,-8
 3109              	 .cfi_offset 14,-4
 3110 0b90 84B0     	 sub sp,sp,#16
 3111              	.LCFI224:
 3112              	 .cfi_def_cfa_offset 24
 3113 0b92 00AF     	 add r7,sp,#0
 3114              	.LCFI225:
 3115              	 .cfi_def_cfa_register 7
 3116 0b94 7860     	 str r0,[r7,#4]
 3117 0b96 0B46     	 mov r3,r1
 3118 0b98 FB70     	 strb r3,[r7,#3]
1131:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	bool page_erased = true;
 3119              	 .loc 1 1131 0
 3120 0b9a 0123     	 movs r3,#1
 3121 0b9c FB73     	 strb r3,[r7,#15]
1132:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1133:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_EP, page_number);
 3122              	 .loc 1 1133 0
 3123 0b9e 7968     	 ldr r1,[r7,#4]
 3124 0ba0 0220     	 movs r0,#2
 3125 0ba2 FFF7FEFF 	 bl flashcalw_issue_command
1134:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1135:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	if (check) {
 3126              	 .loc 1 1135 0
 3127 0ba6 FB78     	 ldrb r3,[r7,#3]
 3128 0ba8 002B     	 cmp r3,#0
 3129 0baa 0ED0     	 beq .L197
 3130              	.LBB2:
1136:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		uint32_t error_status = flashcalw_error_status;
 3131              	 .loc 1 1136 0
 3132 0bac 094B     	 ldr r3,.L199
 3133 0bae 1B68     	 ldr r3,[r3]
 3134 0bb0 BB60     	 str r3,[r7,#8]
1137:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		page_erased = flashcalw_quick_page_read(-1);
 3135              	 .loc 1 1137 0
 3136 0bb2 4FF0FF30 	 mov r0,#-1
 3137 0bb6 FFF7FEFF 	 bl flashcalw_quick_page_read
 3138 0bba 0346     	 mov r3,r0
 3139 0bbc FB73     	 strb r3,[r7,#15]
1138:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_error_status |= error_status;
 3140              	 .loc 1 1138 0
 3141 0bbe 054B     	 ldr r3,.L199
 3142 0bc0 1A68     	 ldr r2,[r3]
 3143 0bc2 BB68     	 ldr r3,[r7,#8]
 3144 0bc4 1343     	 orrs r3,r3,r2
 3145 0bc6 034A     	 ldr r2,.L199
 3146 0bc8 1360     	 str r3,[r2]
 3147              	.L197:
 3148              	.LBE2:
1139:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1140:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1141:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return page_erased;
 3149              	 .loc 1 1141 0
 3150 0bca FB7B     	 ldrb r3,[r7,#15]
1142:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3151              	 .loc 1 1142 0
 3152 0bcc 1846     	 mov r0,r3
 3153 0bce 1037     	 adds r7,r7,#16
 3154              	.LCFI226:
 3155              	 .cfi_def_cfa_offset 8
 3156 0bd0 BD46     	 mov sp,r7
 3157              	.LCFI227:
 3158              	 .cfi_def_cfa_register 13
 3159              	 
 3160 0bd2 80BD     	 pop {r7,pc}
 3161              	.L200:
 3162              	 .align 2
 3163              	.L199:
 3164 0bd4 00000000 	 .word flashcalw_error_status
 3165              	 .cfi_endproc
 3166              	.LFE231:
 3168              	 .align 1
 3169              	 .global flashcalw_erase_all_pages
 3170              	 .syntax unified
 3171              	 .thumb
 3172              	 .thumb_func
 3173              	 .fpu softvfp
 3175              	flashcalw_erase_all_pages:
 3176              	.LFB232:
1143:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1144:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Erases all pages within the flash array.
1145:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1146:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param check Whether to check erase: \c true or \c false.
1147:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1148:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the erase succeeded or always \c true if erase check was not
1149:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         requested.
1150:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1151:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if at least one region is locked or the
1152:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          bootloader protection is active.
1153:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1154:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1155:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1156:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1157:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note An erase operation can only set bits.
1158:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1159:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_erase_all_pages(bool check)
1160:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3177              	 .loc 1 1160 0
 3178              	 .cfi_startproc
 3179              	 
 3180              	 
 3181 0bd8 80B5     	 push {r7,lr}
 3182              	.LCFI228:
 3183              	 .cfi_def_cfa_offset 8
 3184              	 .cfi_offset 7,-8
 3185              	 .cfi_offset 14,-4
 3186 0bda 86B0     	 sub sp,sp,#24
 3187              	.LCFI229:
 3188              	 .cfi_def_cfa_offset 32
 3189 0bdc 00AF     	 add r7,sp,#0
 3190              	.LCFI230:
 3191              	 .cfi_def_cfa_register 7
 3192 0bde 0346     	 mov r3,r0
 3193 0be0 FB71     	 strb r3,[r7,#7]
1161:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	bool all_pages_erased = true;
 3194              	 .loc 1 1161 0
 3195 0be2 0123     	 movs r3,#1
 3196 0be4 FB75     	 strb r3,[r7,#23]
1162:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status = 0;
 3197              	 .loc 1 1162 0
 3198 0be6 0023     	 movs r3,#0
 3199 0be8 3B61     	 str r3,[r7,#16]
1163:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t page_number = flashcalw_get_page_count();
 3200              	 .loc 1 1163 0
 3201 0bea FFF7FEFF 	 bl flashcalw_get_page_count
 3202 0bee F860     	 str r0,[r7,#12]
1164:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1165:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	while (page_number) {
 3203              	 .loc 1 1165 0
 3204 0bf0 16E0     	 b .L202
 3205              	.L203:
1166:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		all_pages_erased &= flashcalw_erase_page(--page_number, check);
 3206              	 .loc 1 1166 0
 3207 0bf2 FB68     	 ldr r3,[r7,#12]
 3208 0bf4 013B     	 subs r3,r3,#1
 3209 0bf6 FB60     	 str r3,[r7,#12]
 3210 0bf8 FB68     	 ldr r3,[r7,#12]
 3211 0bfa FA79     	 ldrb r2,[r7,#7]
 3212 0bfc 1146     	 mov r1,r2
 3213 0bfe 1846     	 mov r0,r3
 3214 0c00 FFF7FEFF 	 bl flashcalw_erase_page
 3215 0c04 0346     	 mov r3,r0
 3216 0c06 1A46     	 mov r2,r3
 3217 0c08 FB7D     	 ldrb r3,[r7,#23]
 3218 0c0a 1340     	 ands r3,r3,r2
 3219 0c0c 002B     	 cmp r3,#0
 3220 0c0e 14BF     	 ite ne
 3221 0c10 0123     	 movne r3,#1
 3222 0c12 0023     	 moveq r3,#0
 3223 0c14 FB75     	 strb r3,[r7,#23]
1167:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 3224              	 .loc 1 1167 0
 3225 0c16 084B     	 ldr r3,.L205
 3226 0c18 1B68     	 ldr r3,[r3]
 3227 0c1a 3A69     	 ldr r2,[r7,#16]
 3228 0c1c 1343     	 orrs r3,r3,r2
 3229 0c1e 3B61     	 str r3,[r7,#16]
 3230              	.L202:
1165:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		all_pages_erased &= flashcalw_erase_page(--page_number, check);
 3231              	 .loc 1 1165 0
 3232 0c20 FB68     	 ldr r3,[r7,#12]
 3233 0c22 002B     	 cmp r3,#0
 3234 0c24 E5D1     	 bne .L203
1168:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1169:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1170:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 3235              	 .loc 1 1170 0
 3236 0c26 044A     	 ldr r2,.L205
 3237 0c28 3B69     	 ldr r3,[r7,#16]
 3238 0c2a 1360     	 str r3,[r2]
1171:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return all_pages_erased;
 3239              	 .loc 1 1171 0
 3240 0c2c FB7D     	 ldrb r3,[r7,#23]
1172:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3241              	 .loc 1 1172 0
 3242 0c2e 1846     	 mov r0,r3
 3243 0c30 1837     	 adds r7,r7,#24
 3244              	.LCFI231:
 3245              	 .cfi_def_cfa_offset 8
 3246 0c32 BD46     	 mov sp,r7
 3247              	.LCFI232:
 3248              	 .cfi_def_cfa_register 13
 3249              	 
 3250 0c34 80BD     	 pop {r7,pc}
 3251              	.L206:
 3252 0c36 00BF     	 .align 2
 3253              	.L205:
 3254 0c38 00000000 	 .word flashcalw_error_status
 3255              	 .cfi_endproc
 3256              	.LFE232:
 3258              	 .align 1
 3259              	 .global flashcalw_write_page
 3260              	 .syntax unified
 3261              	 .thumb
 3262              	 .thumb_func
 3263              	 .fpu softvfp
 3265              	flashcalw_write_page:
 3266              	.LFB233:
1173:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1174:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Writes a page from the page buffer.
1175:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1176:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param page_number The page number:
1177:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg \c 0 to <tt>(flashcalw_get_page_count() - 1)</tt>: a page number
1178:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *        within the flash array;
1179:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *   \arg <tt>< 0</tt>: the current page number.
1180:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1181:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the command is applied to a page belonging
1182:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          to a locked region or to the bootloader protected area.
1183:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1184:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning The page buffer is not automatically reset after a page write.
1185:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1186:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1187:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1188:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1189:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note A write operation can only clear bits; in other words, an erase
1190:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *  operation must first be done if some bits need to be set to 1.
1191:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1192:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_write_page(int page_number)
1193:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3267              	 .loc 1 1193 0
 3268              	 .cfi_startproc
 3269              	 
 3270              	 
 3271 0c3c 80B5     	 push {r7,lr}
 3272              	.LCFI233:
 3273              	 .cfi_def_cfa_offset 8
 3274              	 .cfi_offset 7,-8
 3275              	 .cfi_offset 14,-4
 3276 0c3e 82B0     	 sub sp,sp,#8
 3277              	.LCFI234:
 3278              	 .cfi_def_cfa_offset 16
 3279 0c40 00AF     	 add r7,sp,#0
 3280              	.LCFI235:
 3281              	 .cfi_def_cfa_register 7
 3282 0c42 7860     	 str r0,[r7,#4]
1194:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_WP, page_number);
 3283              	 .loc 1 1194 0
 3284 0c44 7968     	 ldr r1,[r7,#4]
 3285 0c46 0120     	 movs r0,#1
 3286 0c48 FFF7FEFF 	 bl flashcalw_issue_command
1195:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3287              	 .loc 1 1195 0
 3288 0c4c 00BF     	 nop
 3289 0c4e 0837     	 adds r7,r7,#8
 3290              	.LCFI236:
 3291              	 .cfi_def_cfa_offset 8
 3292 0c50 BD46     	 mov sp,r7
 3293              	.LCFI237:
 3294              	 .cfi_def_cfa_register 13
 3295              	 
 3296 0c52 80BD     	 pop {r7,pc}
 3297              	 .cfi_endproc
 3298              	.LFE233:
 3300              	 .align 1
 3301              	 .global flashcalw_quick_user_page_read
 3302              	 .syntax unified
 3303              	 .thumb
 3304              	 .thumb_func
 3305              	 .fpu softvfp
 3307              	flashcalw_quick_user_page_read:
 3308              	.LFB234:
1196:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1197:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Issues a Quick Page Read User Page command to the FLASHCALW.
1198:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1199:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the User page is erased.
1200:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1201:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1202:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1203:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1204:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_quick_user_page_read(void)
1205:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3309              	 .loc 1 1205 0
 3310              	 .cfi_startproc
 3311              	 
 3312              	 
 3313 0c54 80B5     	 push {r7,lr}
 3314              	.LCFI238:
 3315              	 .cfi_def_cfa_offset 8
 3316              	 .cfi_offset 7,-8
 3317              	 .cfi_offset 14,-4
 3318 0c56 00AF     	 add r7,sp,#0
 3319              	.LCFI239:
 3320              	 .cfi_def_cfa_register 7
1206:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_QPRUP, -1);
 3321              	 .loc 1 1206 0
 3322 0c58 4FF0FF31 	 mov r1,#-1
 3323 0c5c 0F20     	 movs r0,#15
 3324 0c5e FFF7FEFF 	 bl flashcalw_issue_command
1207:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_is_page_erased();
 3325              	 .loc 1 1207 0
 3326 0c62 FFF7FEFF 	 bl flashcalw_is_page_erased
 3327 0c66 0346     	 mov r3,r0
1208:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3328              	 .loc 1 1208 0
 3329 0c68 1846     	 mov r0,r3
 3330 0c6a 80BD     	 pop {r7,pc}
 3331              	 .cfi_endproc
 3332              	.LFE234:
 3334              	 .align 1
 3335              	 .global flashcalw_erase_user_page
 3336              	 .syntax unified
 3337              	 .thumb
 3338              	 .thumb_func
 3339              	 .fpu softvfp
 3341              	flashcalw_erase_user_page:
 3342              	.LFB235:
1209:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1210:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Erases the User page.
1211:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1212:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param check Whether to check erase: \c true or \c false.
1213:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1214:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Whether the erase succeeded or always \c true if erase check was not
1215:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         requested.
1216:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1217:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1218:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1219:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1220:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note An erase operation can only set bits.
1221:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1222:../../../platform/sam/drivers/flashcalw/flashcalw.c **** bool flashcalw_erase_user_page(bool check)
1223:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3343              	 .loc 1 1223 0
 3344              	 .cfi_startproc
 3345              	 
 3346              	 
 3347 0c6c 80B5     	 push {r7,lr}
 3348              	.LCFI240:
 3349              	 .cfi_def_cfa_offset 8
 3350              	 .cfi_offset 7,-8
 3351              	 .cfi_offset 14,-4
 3352 0c6e 82B0     	 sub sp,sp,#8
 3353              	.LCFI241:
 3354              	 .cfi_def_cfa_offset 16
 3355 0c70 00AF     	 add r7,sp,#0
 3356              	.LCFI242:
 3357              	 .cfi_def_cfa_register 7
 3358 0c72 0346     	 mov r3,r0
 3359 0c74 FB71     	 strb r3,[r7,#7]
1224:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_EUP, -1);
 3360              	 .loc 1 1224 0
 3361 0c76 4FF0FF31 	 mov r1,#-1
 3362 0c7a 0E20     	 movs r0,#14
 3363 0c7c FFF7FEFF 	 bl flashcalw_issue_command
1225:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return (check) ? flashcalw_quick_user_page_read() : true;
 3364              	 .loc 1 1225 0
 3365 0c80 FB79     	 ldrb r3,[r7,#7]
 3366 0c82 002B     	 cmp r3,#0
 3367 0c84 04D0     	 beq .L211
 3368              	 .loc 1 1225 0 is_stmt 0 discriminator 2
 3369 0c86 FFF7FEFF 	 bl flashcalw_quick_user_page_read
 3370 0c8a 0346     	 mov r3,r0
 3371 0c8c 002B     	 cmp r3,#0
 3372 0c8e 01D0     	 beq .L212
 3373              	.L211:
 3374              	 .loc 1 1225 0 discriminator 3
 3375 0c90 0123     	 movs r3,#1
 3376 0c92 00E0     	 b .L213
 3377              	.L212:
 3378              	 .loc 1 1225 0 discriminator 4
 3379 0c94 0023     	 movs r3,#0
 3380              	.L213:
1226:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3381              	 .loc 1 1226 0 is_stmt 1 discriminator 6
 3382 0c96 1846     	 mov r0,r3
 3383 0c98 0837     	 adds r7,r7,#8
 3384              	.LCFI243:
 3385              	 .cfi_def_cfa_offset 8
 3386 0c9a BD46     	 mov sp,r7
 3387              	.LCFI244:
 3388              	 .cfi_def_cfa_register 13
 3389              	 
 3390 0c9c 80BD     	 pop {r7,pc}
 3391              	 .cfi_endproc
 3392              	.LFE235:
 3394              	 .align 1
 3395              	 .global flashcalw_write_user_page
 3396              	 .syntax unified
 3397              	 .thumb
 3398              	 .thumb_func
 3399              	 .fpu softvfp
 3401              	flashcalw_write_user_page:
 3402              	.LFB236:
1227:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1228:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Writes the User page from the page buffer.
1229:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1230:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning The page buffer is not automatically reset after a page write.
1231:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1232:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1233:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1234:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1235:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note A write operation can only clear bits; in other words, an erase
1236:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *  operation must first be done if some bits need to be set to 1.
1237:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1238:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_write_user_page(void)
1239:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3403              	 .loc 1 1239 0
 3404              	 .cfi_startproc
 3405              	 
 3406              	 
 3407 0c9e 80B5     	 push {r7,lr}
 3408              	.LCFI245:
 3409              	 .cfi_def_cfa_offset 8
 3410              	 .cfi_offset 7,-8
 3411              	 .cfi_offset 14,-4
 3412 0ca0 00AF     	 add r7,sp,#0
 3413              	.LCFI246:
 3414              	 .cfi_def_cfa_register 7
1240:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_issue_command(FLASHCALW_FCMD_CMD_WUP, -1);
 3415              	 .loc 1 1240 0
 3416 0ca2 4FF0FF31 	 mov r1,#-1
 3417 0ca6 0D20     	 movs r0,#13
 3418 0ca8 FFF7FEFF 	 bl flashcalw_issue_command
1241:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3419              	 .loc 1 1241 0
 3420 0cac 00BF     	 nop
 3421 0cae 80BD     	 pop {r7,pc}
 3422              	 .cfi_endproc
 3423              	.LFE236:
 3425              	 .align 1
 3426              	 .global flashcalw_memset8
 3427              	 .syntax unified
 3428              	 .thumb
 3429              	 .thumb_func
 3430              	 .fpu softvfp
 3432              	flashcalw_memset8:
 3433              	.LFB237:
1242:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1243:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Copies \a nbytes bytes to the flash destination pointed to by \a dst
1244:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         from the repeated \a src source byte.
1245:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1246:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * All pointer and size alignments are supported.
1247:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1248:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param dst Pointer to flash destination.
1249:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param src Source byte.
1250:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param nbytes Number of bytes to set.
1251:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param erase Whether to erase before writing: \c true or \c false.
1252:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1253:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of \a dst.
1254:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1255:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning This function may be called with \a erase set to \c false only if
1256:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          the destination consists only of erased words, i.e. this function
1257:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          cannot be used to write only one bit of a previously written word.
1258:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          E.g., if \c 0x00000001 then \c 0xFFFFFFFE are written to a word, the
1259:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          resulting value in flash may be different from \c 0x00000000.
1260:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1261:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the command is applied to pages belonging
1262:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          to a locked region or to the bootloader protected area.
1263:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1264:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1265:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1266:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1267:../../../platform/sam/drivers/flashcalw/flashcalw.c **** volatile void *flashcalw_memset8(volatile void *dst, uint8_t src, size_t nbytes,
1268:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		bool erase)
1269:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3434              	 .loc 1 1269 0
 3435              	 .cfi_startproc
 3436              	 
 3437              	 
 3438 0cb0 80B5     	 push {r7,lr}
 3439              	.LCFI247:
 3440              	 .cfi_def_cfa_offset 8
 3441              	 .cfi_offset 7,-8
 3442              	 .cfi_offset 14,-4
 3443 0cb2 84B0     	 sub sp,sp,#16
 3444              	.LCFI248:
 3445              	 .cfi_def_cfa_offset 24
 3446 0cb4 00AF     	 add r7,sp,#0
 3447              	.LCFI249:
 3448              	 .cfi_def_cfa_register 7
 3449 0cb6 F860     	 str r0,[r7,#12]
 3450 0cb8 7A60     	 str r2,[r7,#4]
 3451 0cba 1A46     	 mov r2,r3
 3452 0cbc 0B46     	 mov r3,r1
 3453 0cbe FB72     	 strb r3,[r7,#11]
 3454 0cc0 1346     	 mov r3,r2
 3455 0cc2 BB72     	 strb r3,[r7,#10]
1270:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_memset16(dst, src | (uint16_t)src << 8, nbytes, erase);
 3456              	 .loc 1 1270 0
 3457 0cc4 FB7A     	 ldrb r3,[r7,#11]
 3458 0cc6 1AB2     	 sxth r2,r3
 3459 0cc8 FB7A     	 ldrb r3,[r7,#11]
 3460 0cca 1B02     	 lsls r3,r3,#8
 3461 0ccc 1BB2     	 sxth r3,r3
 3462 0cce 1343     	 orrs r3,r3,r2
 3463 0cd0 1BB2     	 sxth r3,r3
 3464 0cd2 99B2     	 uxth r1,r3
 3465 0cd4 BB7A     	 ldrb r3,[r7,#10]
 3466 0cd6 7A68     	 ldr r2,[r7,#4]
 3467 0cd8 F868     	 ldr r0,[r7,#12]
 3468 0cda FFF7FEFF 	 bl flashcalw_memset16
 3469 0cde 0346     	 mov r3,r0
1271:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3470              	 .loc 1 1271 0
 3471 0ce0 1846     	 mov r0,r3
 3472 0ce2 1037     	 adds r7,r7,#16
 3473              	.LCFI250:
 3474              	 .cfi_def_cfa_offset 8
 3475 0ce4 BD46     	 mov sp,r7
 3476              	.LCFI251:
 3477              	 .cfi_def_cfa_register 13
 3478              	 
 3479 0ce6 80BD     	 pop {r7,pc}
 3480              	 .cfi_endproc
 3481              	.LFE237:
 3483              	 .align 1
 3484              	 .global flashcalw_memset16
 3485              	 .syntax unified
 3486              	 .thumb
 3487              	 .thumb_func
 3488              	 .fpu softvfp
 3490              	flashcalw_memset16:
 3491              	.LFB238:
1272:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1273:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Copies \a nbytes bytes to the flash destination pointed to by \a dst
1274:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         from the repeated \a src big-endian source half-word.
1275:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1276:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * All pointer and size alignments are supported.
1277:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1278:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param dst Pointer to flash destination.
1279:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param src Source half-word.
1280:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param nbytes Number of bytes to set.
1281:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param erase Whether to erase before writing: \c true or \c false.
1282:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1283:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of \a dst.
1284:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1285:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning This function may be called with \a erase set to \c false only if
1286:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          the destination consists only of erased words, i.e. this function
1287:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          can not be used to write only one bit of a previously written word.
1288:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          E.g., if \c 0x00000001 then \c 0xFFFFFFFE are written to a word, the
1289:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          resulting value in flash may be different from \c 0x00000000.
1290:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1291:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the command is applied to pages belonging
1292:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          to a locked region or to the bootloader protected area.
1293:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1294:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1295:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1296:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1297:../../../platform/sam/drivers/flashcalw/flashcalw.c **** volatile void *flashcalw_memset16(volatile void *dst, uint16_t src,
1298:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		size_t nbytes, bool erase)
1299:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3492              	 .loc 1 1299 0
 3493              	 .cfi_startproc
 3494              	 
 3495              	 
 3496 0ce8 80B5     	 push {r7,lr}
 3497              	.LCFI252:
 3498              	 .cfi_def_cfa_offset 8
 3499              	 .cfi_offset 7,-8
 3500              	 .cfi_offset 14,-4
 3501 0cea 84B0     	 sub sp,sp,#16
 3502              	.LCFI253:
 3503              	 .cfi_def_cfa_offset 24
 3504 0cec 00AF     	 add r7,sp,#0
 3505              	.LCFI254:
 3506              	 .cfi_def_cfa_register 7
 3507 0cee F860     	 str r0,[r7,#12]
 3508 0cf0 7A60     	 str r2,[r7,#4]
 3509 0cf2 1A46     	 mov r2,r3
 3510 0cf4 0B46     	 mov r3,r1
 3511 0cf6 7B81     	 strh r3,[r7,#10]
 3512 0cf8 1346     	 mov r3,r2
 3513 0cfa 7B72     	 strb r3,[r7,#9]
1300:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_memset32(dst, src | (uint32_t)src << 16, nbytes,
 3514              	 .loc 1 1300 0
 3515 0cfc 7A89     	 ldrh r2,[r7,#10]
 3516 0cfe 7B89     	 ldrh r3,[r7,#10]
 3517 0d00 1B04     	 lsls r3,r3,#16
 3518 0d02 42EA0301 	 orr r1,r2,r3
 3519 0d06 7B7A     	 ldrb r3,[r7,#9]
 3520 0d08 7A68     	 ldr r2,[r7,#4]
 3521 0d0a F868     	 ldr r0,[r7,#12]
 3522 0d0c FFF7FEFF 	 bl flashcalw_memset32
 3523 0d10 0346     	 mov r3,r0
1301:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			erase);
1302:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3524              	 .loc 1 1302 0
 3525 0d12 1846     	 mov r0,r3
 3526 0d14 1037     	 adds r7,r7,#16
 3527              	.LCFI255:
 3528              	 .cfi_def_cfa_offset 8
 3529 0d16 BD46     	 mov sp,r7
 3530              	.LCFI256:
 3531              	 .cfi_def_cfa_register 13
 3532              	 
 3533 0d18 80BD     	 pop {r7,pc}
 3534              	 .cfi_endproc
 3535              	.LFE238:
 3537              	 .align 1
 3538              	 .global flashcalw_memset32
 3539              	 .syntax unified
 3540              	 .thumb
 3541              	 .thumb_func
 3542              	 .fpu softvfp
 3544              	flashcalw_memset32:
 3545              	.LFB239:
1303:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1304:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Copies \a nbytes bytes to the flash destination pointed to by \a dst
1305:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         from the repeated \a src big-endian source word.
1306:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1307:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * All pointer and size alignments are supported.
1308:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1309:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param dst Pointer to flash destination.
1310:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param src Source word.
1311:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param nbytes Number of bytes to set.
1312:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param erase Whether to erase before writing: \c true or \c false.
1313:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1314:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of \a dst.
1315:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1316:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning This function may be called with \a erase set to \c false only if
1317:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          the destination consists only of erased words, i.e. this function
1318:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          can not be used to write only one bit of a previously written word.
1319:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          E.g., if \c 0x00000001 then \c 0xFFFFFFFE are written to a word, the
1320:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          resulting value in flash may be different from \c 0x00000000.
1321:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1322:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the command is applied to pages belonging
1323:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          to a locked region or to the bootloader protected area.
1324:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1325:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1326:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1327:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1328:../../../platform/sam/drivers/flashcalw/flashcalw.c **** volatile void *flashcalw_memset32(volatile void *dst, uint32_t src,
1329:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		size_t nbytes, bool erase)
1330:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3546              	 .loc 1 1330 0
 3547              	 .cfi_startproc
 3548              	 
 3549              	 
 3550 0d1a B0B5     	 push {r4,r5,r7,lr}
 3551              	.LCFI257:
 3552              	 .cfi_def_cfa_offset 16
 3553              	 .cfi_offset 4,-16
 3554              	 .cfi_offset 5,-12
 3555              	 .cfi_offset 7,-8
 3556              	 .cfi_offset 14,-4
 3557 0d1c 86B0     	 sub sp,sp,#24
 3558              	.LCFI258:
 3559              	 .cfi_def_cfa_offset 40
 3560 0d1e 02AF     	 add r7,sp,#8
 3561              	.LCFI259:
 3562              	 .cfi_def_cfa 7,32
 3563 0d20 F860     	 str r0,[r7,#12]
 3564 0d22 B960     	 str r1,[r7,#8]
 3565 0d24 7A60     	 str r2,[r7,#4]
 3566 0d26 FB70     	 strb r3,[r7,#3]
1331:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return flashcalw_memset64(dst, src | (uint64_t)src << 32, nbytes,
 3567              	 .loc 1 1331 0
 3568 0d28 BB68     	 ldr r3,[r7,#8]
 3569 0d2a 1A46     	 mov r2,r3
 3570 0d2c 4FF00003 	 mov r3,#0
 3571 0d30 B968     	 ldr r1,[r7,#8]
 3572 0d32 0846     	 mov r0,r1
 3573 0d34 4FF00001 	 mov r1,#0
 3574 0d38 0500     	 movs r5,r0
 3575 0d3a 0024     	 movs r4,#0
 3576 0d3c 42EA0400 	 orr r0,r2,r4
 3577 0d40 43EA0501 	 orr r1,r3,r5
 3578 0d44 0346     	 mov r3,r0
 3579 0d46 0C46     	 mov r4,r1
 3580 0d48 FA78     	 ldrb r2,[r7,#3]
 3581 0d4a 0192     	 str r2,[sp,#4]
 3582 0d4c 7A68     	 ldr r2,[r7,#4]
 3583 0d4e 0092     	 str r2,[sp]
 3584 0d50 1A46     	 mov r2,r3
 3585 0d52 2346     	 mov r3,r4
 3586 0d54 F868     	 ldr r0,[r7,#12]
 3587 0d56 FFF7FEFF 	 bl flashcalw_memset64
 3588 0d5a 0346     	 mov r3,r0
1332:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			erase);
1333:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 3589              	 .loc 1 1333 0
 3590 0d5c 1846     	 mov r0,r3
 3591 0d5e 1037     	 adds r7,r7,#16
 3592              	.LCFI260:
 3593              	 .cfi_def_cfa_offset 16
 3594 0d60 BD46     	 mov sp,r7
 3595              	.LCFI261:
 3596              	 .cfi_def_cfa_register 13
 3597              	 
 3598 0d62 B0BD     	 pop {r4,r5,r7,pc}
 3599              	 .cfi_endproc
 3600              	.LFE239:
 3602              	 .align 1
 3603              	 .global flashcalw_memset64
 3604              	 .syntax unified
 3605              	 .thumb
 3606              	 .thumb_func
 3607              	 .fpu softvfp
 3609              	flashcalw_memset64:
 3610              	.LFB240:
1334:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1335:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Copies \a nbytes bytes to the flash destination pointed to by \a dst
1336:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         from the repeated \a src big-endian source double-word.
1337:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1338:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * All pointer and size alignments are supported.
1339:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1340:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param dst Pointer to flash destination.
1341:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param src Source double-word.
1342:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param nbytes Number of bytes to set.
1343:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param erase Whether to erase before writing: \c true or \c false.
1344:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1345:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of \a dst.
1346:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1347:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning This function may be called with \a erase set to \c false only if
1348:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          the destination consists only of erased words, i.e. this function
1349:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          can not be used to write only one bit of a previously written word.
1350:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          E.g., if \c 0x00000001 then \c 0xFFFFFFFE are written to a word, the
1351:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          resulting value in flash may be different from \c 0x00000000.
1352:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1353:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the command is applied to pages belonging
1354:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          to a locked region or to the bootloader protected area.
1355:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1356:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1357:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1358:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1359:../../../platform/sam/drivers/flashcalw/flashcalw.c **** volatile void *flashcalw_memset64(volatile void *dst, uint64_t src,
1360:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		size_t nbytes, bool erase)
1361:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 3611              	 .loc 1 1361 0
 3612              	 .cfi_startproc
 3613              	 
 3614              	 
 3615 0d64 B0B5     	 push {r4,r5,r7,lr}
 3616              	.LCFI262:
 3617              	 .cfi_def_cfa_offset 16
 3618              	 .cfi_offset 4,-16
 3619              	 .cfi_offset 5,-12
 3620              	 .cfi_offset 7,-8
 3621              	 .cfi_offset 14,-4
 3622 0d66 9AB0     	 sub sp,sp,#104
 3623              	.LCFI263:
 3624              	 .cfi_def_cfa_offset 120
 3625 0d68 00AF     	 add r7,sp,#0
 3626              	.LCFI264:
 3627              	 .cfi_def_cfa_register 7
 3628 0d6a F860     	 str r0,[r7,#12]
 3629 0d6c C7E90023 	 strd r2,[r7]
1362:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Use aggregated pointers to have several alignments available for a
1363:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 * same address. */
1364:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	UnionCVPtr flash_array_end;
1365:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	UnionVPtr dest;
1366:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	Union64 source = {0};
 3630              	 .loc 1 1366 0
 3631 0d70 4FF00002 	 mov r2,#0
 3632 0d74 4FF00003 	 mov r3,#0
 3633 0d78 C7E91223 	 strd r2,[r7,#72]
1367:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	StructCVPtr dest_end;
1368:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	UnionCVPtr flash_page_source_end;
1369:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	bool incomplete_flash_page_end;
1370:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	Union64 flash_dword;
1371:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	UnionVPtr tmp;
1372:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status = 0;
 3634              	 .loc 1 1372 0
 3635 0d7c 0023     	 movs r3,#0
 3636 0d7e 7B66     	 str r3,[r7,#100]
1373:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t i;
1374:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1375:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Reformat arguments. */
1376:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flash_array_end.u8ptr = ((uint8_t *)FLASH_ADDR)
1377:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			+ flashcalw_get_flash_size();
 3637              	 .loc 1 1377 0
 3638 0d80 FFF7FEFF 	 bl flashcalw_get_flash_size
 3639 0d84 0346     	 mov r3,r0
1376:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			+ flashcalw_get_flash_size();
 3640              	 .loc 1 1376 0
 3641 0d86 BB65     	 str r3,[r7,#88]
1378:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	dest.u8ptr = dst;
 3642              	 .loc 1 1378 0
 3643 0d88 FB68     	 ldr r3,[r7,#12]
 3644 0d8a 7B65     	 str r3,[r7,#84]
1379:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	for (i = (Get_align((uint32_t)dest.u8ptr, sizeof(uint64_t)) - 1)
 3645              	 .loc 1 1379 0
 3646 0d8c 7B6D     	 ldr r3,[r7,#84]
1380:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			& (sizeof(uint64_t) - 1); src;
 3647              	 .loc 1 1380 0
 3648 0d8e 013B     	 subs r3,r3,#1
1379:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	for (i = (Get_align((uint32_t)dest.u8ptr, sizeof(uint64_t)) - 1)
 3649              	 .loc 1 1379 0
 3650 0d90 03F00703 	 and r3,r3,#7
 3651 0d94 3B66     	 str r3,[r7,#96]
 3652 0d96 13E0     	 b .L223
 3653              	.L224:
1381:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			i = (i - 1) & (sizeof(uint64_t) - 1)) {
1382:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		source.u8[i] = src;
 3654              	 .loc 1 1382 0
 3655 0d98 3978     	 ldrb r1,[r7]
 3656 0d9a 07F14802 	 add r2,r7,#72
 3657 0d9e 3B6E     	 ldr r3,[r7,#96]
 3658 0da0 1344     	 add r3,r3,r2
 3659 0da2 0A46     	 mov r2,r1
 3660 0da4 1A70     	 strb r2,[r3]
1383:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		src >>= 8;
 3661              	 .loc 1 1383 0
 3662 0da6 D7E90023 	 ldrd r2,[r7]
 3663 0daa 140A     	 lsrs r4,r2,#8
 3664 0dac 44EA0364 	 orr r4,r4,r3,lsl#24
 3665 0db0 1D0A     	 lsrs r5,r3,#8
 3666 0db2 C7E90045 	 strd r4,[r7]
1381:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			i = (i - 1) & (sizeof(uint64_t) - 1)) {
 3667              	 .loc 1 1381 0
 3668 0db6 3B6E     	 ldr r3,[r7,#96]
 3669 0db8 013B     	 subs r3,r3,#1
 3670 0dba 03F00703 	 and r3,r3,#7
 3671 0dbe 3B66     	 str r3,[r7,#96]
 3672              	.L223:
1379:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			& (sizeof(uint64_t) - 1); src;
 3673              	 .loc 1 1379 0 discriminator 1
 3674 0dc0 D7E90023 	 ldrd r2,[r7]
 3675 0dc4 1343     	 orrs r3,r2,r3
 3676 0dc6 E7D1     	 bne .L224
1384:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1385:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	dest_end.u8ptr = dest.u8ptr + nbytes;
 3677              	 .loc 1 1385 0
 3678 0dc8 7A6D     	 ldr r2,[r7,#84]
 3679 0dca BB6F     	 ldr r3,[r7,#120]
 3680 0dcc 1344     	 add r3,r3,r2
 3681 0dce 7B64     	 str r3,[r7,#68]
1386:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1387:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* If destination is outside flash, go to next flash page if any. */
1388:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	if (dest.u8ptr < (uint8_t *)FLASH_ADDR) {
1389:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		dest.u8ptr = (uint8_t *)FLASH_ADDR;
1390:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	} else if (flash_array_end.u8ptr <= dest.u8ptr &&
 3682              	 .loc 1 1390 0
 3683 0dd0 BA6D     	 ldr r2,[r7,#88]
 3684 0dd2 7B6D     	 ldr r3,[r7,#84]
 3685 0dd4 9A42     	 cmp r2,r3
 3686 0dd6 06D8     	 bhi .L225
1391:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			dest.u8ptr < (uint8_t *)FLASH_USER_PAGE_ADDR) {
 3687              	 .loc 1 1391 0 discriminator 1
 3688 0dd8 7B6D     	 ldr r3,[r7,#84]
1390:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			dest.u8ptr < (uint8_t *)FLASH_USER_PAGE_ADDR) {
 3689              	 .loc 1 1390 0 discriminator 1
 3690 0dda B3F5000F 	 cmp r3,#8388608
 3691 0dde 02D2     	 bcs .L225
1392:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		dest.u8ptr = (uint8_t *)FLASH_USER_PAGE_ADDR;
 3692              	 .loc 1 1392 0
 3693 0de0 4FF40003 	 mov r3,#8388608
 3694 0de4 7B65     	 str r3,[r7,#84]
 3695              	.L225:
1393:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1394:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1395:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* If end of destination is outside flash, move it to the end of the
1396:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 * previous flash page if any. */
1397:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	if (dest_end.u8ptr >
 3696              	 .loc 1 1397 0
 3697 0de6 7B6C     	 ldr r3,[r7,#68]
 3698 0de8 A14A     	 ldr r2,.L250
 3699 0dea 9342     	 cmp r3,r2
 3700 0dec 02D9     	 bls .L226
1398:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			(((uint8_t *)FLASH_USER_PAGE_ADDR) + FLASH_PAGE_SIZE)) {
1399:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		dest_end.u8ptr = (uint8_t *)FLASH_USER_PAGE_ADDR
 3701              	 .loc 1 1399 0
 3702 0dee A04B     	 ldr r3,.L250
 3703 0df0 7B64     	 str r3,[r7,#68]
 3704 0df2 09E0     	 b .L227
 3705              	.L226:
1400:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				+ FLASH_PAGE_SIZE;
1401:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	} else if ((uint8_t *)FLASH_USER_PAGE_ADDR >= dest_end.u8ptr &&
 3706              	 .loc 1 1401 0
 3707 0df4 7B6C     	 ldr r3,[r7,#68]
 3708 0df6 B3F5000F 	 cmp r3,#8388608
 3709 0dfa 05D8     	 bhi .L227
1402:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			dest_end.u8ptr > flash_array_end.u8ptr) {
 3710              	 .loc 1 1402 0 discriminator 1
 3711 0dfc 7A6C     	 ldr r2,[r7,#68]
 3712 0dfe BB6D     	 ldr r3,[r7,#88]
1401:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			dest_end.u8ptr > flash_array_end.u8ptr) {
 3713              	 .loc 1 1401 0 discriminator 1
 3714 0e00 9A42     	 cmp r2,r3
 3715 0e02 01D9     	 bls .L227
1403:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		dest_end.u8ptr = flash_array_end.u8ptr;
 3716              	 .loc 1 1403 0
 3717 0e04 BB6D     	 ldr r3,[r7,#88]
 3718 0e06 7B64     	 str r3,[r7,#68]
 3719              	.L227:
1404:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1405:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1406:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Align each end of destination pointer with its natural boundary. */
1407:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	dest_end.u16ptr = (uint16_t *)Align_down((uint32_t)dest_end.u8ptr,
 3720              	 .loc 1 1407 0
 3721 0e08 7B6C     	 ldr r3,[r7,#68]
 3722 0e0a 23F00103 	 bic r3,r3,#1
 3723 0e0e FB63     	 str r3,[r7,#60]
1408:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			sizeof(uint16_t));
1409:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	dest_end.u32ptr = (uint32_t *)Align_down((uint32_t)dest_end.u16ptr,
 3724              	 .loc 1 1409 0
 3725 0e10 FB6B     	 ldr r3,[r7,#60]
 3726 0e12 23F00303 	 bic r3,r3,#3
 3727 0e16 7B63     	 str r3,[r7,#52]
1410:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			sizeof(uint32_t));
1411:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	dest_end.u64ptr = (uint64_t *)Align_down((uint32_t)dest_end.u32ptr,
 3728              	 .loc 1 1411 0
 3729 0e18 7B6B     	 ldr r3,[r7,#52]
 3730 0e1a 23F00703 	 bic r3,r3,#7
 3731 0e1e FB62     	 str r3,[r7,#44]
1412:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			sizeof(uint64_t));
1413:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1414:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* While end of destination is not reached... */
1415:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	while (dest.u8ptr < dest_end.u8ptr) {
 3732              	 .loc 1 1415 0
 3733 0e20 18E1     	 b .L228
 3734              	.L248:
1416:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Clear the page buffer in order to prepare data for a flash
1417:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		 * page write. */
1418:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_clear_page_buffer();
 3735              	 .loc 1 1418 0
 3736 0e22 FFF7FEFF 	 bl flashcalw_clear_page_buffer
1419:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 3737              	 .loc 1 1419 0
 3738 0e26 934B     	 ldr r3,.L250+4
 3739 0e28 1B68     	 ldr r3,[r3]
 3740 0e2a 7A6E     	 ldr r2,[r7,#100]
 3741 0e2c 1343     	 orrs r3,r3,r2
 3742 0e2e 7B66     	 str r3,[r7,#100]
1420:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1421:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Determine where the source data will end in the current flash
1422:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		 * page. */
1423:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flash_page_source_end.u64ptr
1424:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			= (uint64_t *)Min((uint32_t)dest_end.u64ptr,
 3743              	 .loc 1 1424 0
 3744 0e30 FB6A     	 ldr r3,[r7,#44]
 3745 0e32 1A46     	 mov r2,r3
 3746 0e34 7B6D     	 ldr r3,[r7,#84]
 3747 0e36 23F4FF73 	 bic r3,r3,#510
 3748 0e3a 23F00103 	 bic r3,r3,#1
 3749 0e3e 03F50073 	 add r3,r3,#512
 3750 0e42 9A42     	 cmp r2,r3
 3751 0e44 01D2     	 bcs .L229
 3752              	 .loc 1 1424 0 is_stmt 0 discriminator 1
 3753 0e46 FB6A     	 ldr r3,[r7,#44]
 3754 0e48 06E0     	 b .L230
 3755              	.L229:
 3756              	 .loc 1 1424 0 discriminator 2
 3757 0e4a 7B6D     	 ldr r3,[r7,#84]
 3758 0e4c 23F4FF73 	 bic r3,r3,#510
 3759 0e50 23F00103 	 bic r3,r3,#1
 3760 0e54 03F50073 	 add r3,r3,#512
 3761              	.L230:
 3762              	 .loc 1 1424 0 discriminator 4
 3763 0e58 7B62     	 str r3,[r7,#36]
1425:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				Align_down((uint32_t)dest.u8ptr,
1426:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				(uint32_t)FLASH_PAGE_SIZE) + FLASH_PAGE_SIZE);
1427:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1428:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Determine if the current destination page has an incomplete
1429:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		 * end. */
1430:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		incomplete_flash_page_end
1431:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			= (Align_down((uint32_t)dest.u8ptr,
 3764              	 .loc 1 1431 0 is_stmt 1 discriminator 4
 3765 0e5a 7B6D     	 ldr r3,[r7,#84]
 3766 0e5c 23F4FF72 	 bic r2,r3,#510
 3767 0e60 22F00102 	 bic r2,r2,#1
1432:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				(uint32_t)FLASH_PAGE_SIZE)
1433:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				>= Align_down((uint32_t)dest_end.u8ptr,
 3768              	 .loc 1 1433 0 discriminator 4
 3769 0e64 7B6C     	 ldr r3,[r7,#68]
 3770 0e66 23F4FF73 	 bic r3,r3,#510
 3771 0e6a 23F00103 	 bic r3,r3,#1
1431:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				(uint32_t)FLASH_PAGE_SIZE)
 3772              	 .loc 1 1431 0 discriminator 4
 3773 0e6e 9A42     	 cmp r2,r3
 3774 0e70 2CBF     	 ite cs
 3775 0e72 0123     	 movcs r3,#1
 3776 0e74 0023     	 movcc r3,#0
 3777 0e76 87F85F30 	 strb r3,[r7,#95]
1434:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				(uint32_t)FLASH_PAGE_SIZE));
1435:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1436:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Use a flash double-word buffer to manage unaligned accesses. */
1437:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flash_dword.u64 = source.u64;
 3778              	 .loc 1 1437 0 discriminator 4
 3779 0e7a D7E91234 	 ldrd r3,[r7,#72]
 3780 0e7e C7E90634 	 strd r3,[r7,#24]
1438:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1439:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* If destination does not point to the beginning of the current
1440:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		 * flash page... */
1441:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		if (!Test_align((uint32_t)dest.u8ptr, FLASH_PAGE_SIZE)) {
 3781              	 .loc 1 1441 0 discriminator 4
 3782 0e82 7B6D     	 ldr r3,[r7,#84]
 3783 0e84 C3F30803 	 ubfx r3,r3,#0,#9
 3784 0e88 002B     	 cmp r3,#0
 3785 0e8a 4FD0     	 beq .L231
1442:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Fill the beginning of the page buffer with the
1443:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * current flash page data.
1444:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * This is required by the hardware, even if page erase
1445:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * is not requested, in order to be able to write
1446:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * successfully to erased parts of flash pages that have
1447:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * already been written to. */
1448:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			for (tmp.u8ptr = (uint8_t *)Align_down((uint32_t)dest.u8ptr,
 3786              	 .loc 1 1448 0
 3787 0e8c 7B6D     	 ldr r3,[r7,#84]
 3788 0e8e 23F4FF73 	 bic r3,r3,#510
 3789 0e92 23F00103 	 bic r3,r3,#1
 3790 0e96 7B61     	 str r3,[r7,#20]
 3791 0e98 0BE0     	 b .L232
 3792              	.L233:
1449:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 							(uint32_t)FLASH_PAGE_SIZE);
1450:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					tmp.u64ptr < (uint64_t *)Align_down(
1451:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					(uint32_t)dest.u8ptr,
1452:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					sizeof(uint64_t));
1453:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					tmp.u64ptr++) {
1454:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				*tmp.u32ptr = *tmp.u32ptr;
 3793              	 .loc 1 1454 0
 3794 0e9a 7B69     	 ldr r3,[r7,#20]
 3795 0e9c 7A69     	 ldr r2,[r7,#20]
 3796 0e9e 1268     	 ldr r2,[r2]
 3797 0ea0 1A60     	 str r2,[r3]
1455:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				*(tmp.u32ptr + 1) = *(tmp.u32ptr + 1);
 3798              	 .loc 1 1455 0
 3799 0ea2 7B69     	 ldr r3,[r7,#20]
 3800 0ea4 0433     	 adds r3,r3,#4
 3801 0ea6 7A69     	 ldr r2,[r7,#20]
 3802 0ea8 5268     	 ldr r2,[r2,#4]
 3803 0eaa 1A60     	 str r2,[r3]
1453:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				*tmp.u32ptr = *tmp.u32ptr;
 3804              	 .loc 1 1453 0
 3805 0eac 7B69     	 ldr r3,[r7,#20]
 3806 0eae 0833     	 adds r3,r3,#8
 3807 0eb0 7B61     	 str r3,[r7,#20]
 3808              	.L232:
1450:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					(uint32_t)dest.u8ptr,
 3809              	 .loc 1 1450 0 discriminator 1
 3810 0eb2 7B69     	 ldr r3,[r7,#20]
 3811 0eb4 7A6D     	 ldr r2,[r7,#84]
 3812 0eb6 22F00702 	 bic r2,r2,#7
1448:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 							(uint32_t)FLASH_PAGE_SIZE);
 3813              	 .loc 1 1448 0 discriminator 1
 3814 0eba 9342     	 cmp r3,r2
 3815 0ebc EDD3     	 bcc .L233
1456:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
1457:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1458:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* If destination is not 64-bit aligned... */
1459:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			if (!Test_align((uint32_t)dest.u8ptr,
 3816              	 .loc 1 1459 0
 3817 0ebe 7B6D     	 ldr r3,[r7,#84]
 3818 0ec0 03F00703 	 and r3,r3,#7
 3819 0ec4 002B     	 cmp r3,#0
 3820 0ec6 31D0     	 beq .L231
1460:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					sizeof(uint64_t))) {
1461:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* Fill the beginning of the flash double-word
1462:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * buffer with the current flash page data.
1463:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * This is required by the hardware, even if
1464:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * page erase is not requested, in order to be
1465:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * able to write successfully to erased parts
1466:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * of flash pages that have already been written
1467:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * to. */
1468:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				for (i = 0; i < Get_align((uint32_t)dest.u8ptr,
 3821              	 .loc 1 1468 0
 3822 0ec8 0023     	 movs r3,#0
 3823 0eca 3B66     	 str r3,[r7,#96]
 3824 0ecc 0DE0     	 b .L234
 3825              	.L235:
1469:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						sizeof(uint64_t)); i++) {
1470:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					flash_dword.u8[i] = *tmp.u8ptr++;
 3826              	 .loc 1 1470 0
 3827 0ece 7B69     	 ldr r3,[r7,#20]
 3828 0ed0 5A1C     	 adds r2,r3,#1
 3829 0ed2 7A61     	 str r2,[r7,#20]
 3830 0ed4 1B78     	 ldrb r3,[r3]
 3831 0ed6 D9B2     	 uxtb r1,r3
 3832 0ed8 07F11802 	 add r2,r7,#24
 3833 0edc 3B6E     	 ldr r3,[r7,#96]
 3834 0ede 1344     	 add r3,r3,r2
 3835 0ee0 0A46     	 mov r2,r1
 3836 0ee2 1A70     	 strb r2,[r3]
1469:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						sizeof(uint64_t)); i++) {
 3837              	 .loc 1 1469 0
 3838 0ee4 3B6E     	 ldr r3,[r7,#96]
 3839 0ee6 0133     	 adds r3,r3,#1
 3840 0ee8 3B66     	 str r3,[r7,#96]
 3841              	.L234:
1468:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						sizeof(uint64_t)); i++) {
 3842              	 .loc 1 1468 0 discriminator 1
 3843 0eea 7B6D     	 ldr r3,[r7,#84]
 3844 0eec 03F00702 	 and r2,r3,#7
 3845 0ef0 3B6E     	 ldr r3,[r7,#96]
 3846 0ef2 9A42     	 cmp r2,r3
 3847 0ef4 EBD8     	 bhi .L235
1471:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				}
1472:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1473:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* Align the destination pointer with its 64-bit
1474:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * boundary. */
1475:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				dest.u64ptr = (uint64_t *)Align_down((uint32_t)dest.u8ptr,
 3848              	 .loc 1 1475 0
 3849 0ef6 7B6D     	 ldr r3,[r7,#84]
 3850 0ef8 23F00703 	 bic r3,r3,#7
 3851 0efc 7B65     	 str r3,[r7,#84]
1476:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						sizeof(uint64_t));
1477:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1478:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* If the current destination double-word is not
1479:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				 * the last one... */
1480:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				if (dest.u64ptr < dest_end.u64ptr) {
 3852              	 .loc 1 1480 0
 3853 0efe 7A6D     	 ldr r2,[r7,#84]
 3854 0f00 FB6A     	 ldr r3,[r7,#44]
 3855 0f02 9A42     	 cmp r2,r3
 3856 0f04 12D2     	 bcs .L231
1481:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					/* Workaround for corrupted data after page write
1482:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					 * operations */
1483:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					*(volatile uint64_t*)((uint32_t)dest.u64ptr) = (uint64_t)-1;
 3857              	 .loc 1 1483 0
 3858 0f06 7A6D     	 ldr r2,[r7,#84]
 3859 0f08 4FF0FF33 	 mov r3,#-1
 3860 0f0c 4FF0FF34 	 mov r4,#-1
 3861 0f10 C2E90034 	 strd r3,[r2]
1484:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					/* Write the flash double-word buffer to
1485:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					the page buffer and reinitialize it. */
1486:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					*dest.u64ptr++ = flash_dword.u64;
 3862              	 .loc 1 1486 0
 3863 0f14 7A6D     	 ldr r2,[r7,#84]
 3864 0f16 02F10803 	 add r3,r2,#8
 3865 0f1a 7B65     	 str r3,[r7,#84]
 3866 0f1c D7E90634 	 ldrd r3,[r7,#24]
 3867 0f20 C2E90034 	 strd r3,[r2]
1487:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					flash_dword.u64 = source.u64;
 3868              	 .loc 1 1487 0
 3869 0f24 D7E91234 	 ldrd r3,[r7,#72]
 3870 0f28 C7E90634 	 strd r3,[r7,#24]
 3871              	.L231:
1488:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				}
1489:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
1490:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
1491:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1492:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Write the source data to the page buffer with 64-bit
1493:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		 * alignment. */
1494:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		for (i = flash_page_source_end.u64ptr - dest.u64ptr; i; i--) {
 3872              	 .loc 1 1494 0
 3873 0f2c 7B6A     	 ldr r3,[r7,#36]
 3874 0f2e 1A46     	 mov r2,r3
 3875 0f30 7B6D     	 ldr r3,[r7,#84]
 3876 0f32 D31A     	 subs r3,r2,r3
 3877 0f34 DB10     	 asrs r3,r3,#3
 3878 0f36 3B66     	 str r3,[r7,#96]
 3879 0f38 11E0     	 b .L236
 3880              	.L237:
1495:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Workaround for corrupted data after page write operations */
1496:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			*(volatile uint64_t*)((uint32_t)dest.u64ptr)
 3881              	 .loc 1 1496 0 discriminator 3
 3882 0f3a 7A6D     	 ldr r2,[r7,#84]
1497:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					= (uint64_t)-1;
 3883              	 .loc 1 1497 0 discriminator 3
 3884 0f3c 4FF0FF33 	 mov r3,#-1
 3885 0f40 4FF0FF34 	 mov r4,#-1
 3886 0f44 C2E90034 	 strd r3,[r2]
1498:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			*dest.u64ptr++ = source.u64;
 3887              	 .loc 1 1498 0 discriminator 3
 3888 0f48 7A6D     	 ldr r2,[r7,#84]
 3889 0f4a 02F10803 	 add r3,r2,#8
 3890 0f4e 7B65     	 str r3,[r7,#84]
 3891 0f50 D7E91234 	 ldrd r3,[r7,#72]
 3892 0f54 C2E90034 	 strd r3,[r2]
1494:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Workaround for corrupted data after page write operations */
 3893              	 .loc 1 1494 0 discriminator 3
 3894 0f58 3B6E     	 ldr r3,[r7,#96]
 3895 0f5a 013B     	 subs r3,r3,#1
 3896 0f5c 3B66     	 str r3,[r7,#96]
 3897              	.L236:
1494:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Workaround for corrupted data after page write operations */
 3898              	 .loc 1 1494 0 is_stmt 0 discriminator 1
 3899 0f5e 3B6E     	 ldr r3,[r7,#96]
 3900 0f60 002B     	 cmp r3,#0
 3901 0f62 EAD1     	 bne .L237
1499:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
1500:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1501:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* If the current destination page has an incomplete end... */
1502:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		if (incomplete_flash_page_end) {
 3902              	 .loc 1 1502 0 is_stmt 1
 3903 0f64 97F85F30 	 ldrb r3,[r7,#95]
 3904 0f68 002B     	 cmp r3,#0
 3905 0f6a 3DD0     	 beq .L238
1503:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* This is required by the hardware, even if page erase
1504:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * is not requested, in order to be able to write
1505:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * successfully to erased parts of flash pages that have
1506:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * already been written to. */
1507:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			{
1508:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				tmp.u8ptr = (volatile uint8_t *)dest_end.u8ptr;
 3906              	 .loc 1 1508 0
 3907 0f6c 7B6C     	 ldr r3,[r7,#68]
 3908 0f6e 7B61     	 str r3,[r7,#20]
1509:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1510:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* If end of destination is not 64-bit aligned. */
1511:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				if (!Test_align((uint32_t)dest_end.u8ptr,
 3909              	 .loc 1 1511 0
 3910 0f70 7B6C     	 ldr r3,[r7,#68]
 3911 0f72 03F00703 	 and r3,r3,#7
 3912 0f76 002B     	 cmp r3,#0
 3913 0f78 31D0     	 beq .L242
1512:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						sizeof(uint64_t))) {
1513:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					/* Fill the end of the flash double-word
1514:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					 * buffer with the current flash page
1515:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					 * data. */
1516:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					for (i = Get_align(
 3914              	 .loc 1 1516 0
 3915 0f7a 7B6C     	 ldr r3,[r7,#68]
 3916 0f7c 03F00703 	 and r3,r3,#7
 3917 0f80 3B66     	 str r3,[r7,#96]
 3918 0f82 0DE0     	 b .L240
 3919              	.L241:
1517:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 							(uint32_t)dest_end.u8ptr,
1518:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 							sizeof(uint64_t));
1519:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 							i < sizeof(uint64_t);
1520:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 							i++) {
1521:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						flash_dword.u8[i] = *tmp.u8ptr++;
 3920              	 .loc 1 1521 0
 3921 0f84 7B69     	 ldr r3,[r7,#20]
 3922 0f86 5A1C     	 adds r2,r3,#1
 3923 0f88 7A61     	 str r2,[r7,#20]
 3924 0f8a 1B78     	 ldrb r3,[r3]
 3925 0f8c D9B2     	 uxtb r1,r3
 3926 0f8e 07F11802 	 add r2,r7,#24
 3927 0f92 3B6E     	 ldr r3,[r7,#96]
 3928 0f94 1344     	 add r3,r3,r2
 3929 0f96 0A46     	 mov r2,r1
 3930 0f98 1A70     	 strb r2,[r3]
1520:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						flash_dword.u8[i] = *tmp.u8ptr++;
 3931              	 .loc 1 1520 0
 3932 0f9a 3B6E     	 ldr r3,[r7,#96]
 3933 0f9c 0133     	 adds r3,r3,#1
 3934 0f9e 3B66     	 str r3,[r7,#96]
 3935              	.L240:
1516:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 							(uint32_t)dest_end.u8ptr,
 3936              	 .loc 1 1516 0 discriminator 1
 3937 0fa0 3B6E     	 ldr r3,[r7,#96]
 3938 0fa2 072B     	 cmp r3,#7
 3939 0fa4 EED9     	 bls .L241
1522:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					}
1523:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1524:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					/* Workaround for corrupted data after page write operations */
1525:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					*(volatile uint64_t*)((uint32_t)dest.u64ptr) = (uint64_t)-1;
 3940              	 .loc 1 1525 0
 3941 0fa6 7A6D     	 ldr r2,[r7,#84]
 3942 0fa8 4FF0FF33 	 mov r3,#-1
 3943 0fac 4FF0FF34 	 mov r4,#-1
 3944 0fb0 C2E90034 	 strd r3,[r2]
1526:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					/* Write the flash double-word buffer to
1527:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					 * the page buffer. */
1528:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					*dest.u64ptr++ = flash_dword.u64;
 3945              	 .loc 1 1528 0
 3946 0fb4 7A6D     	 ldr r2,[r7,#84]
 3947 0fb6 02F10803 	 add r3,r2,#8
 3948 0fba 7B65     	 str r3,[r7,#84]
 3949 0fbc D7E90634 	 ldrd r3,[r7,#24]
 3950 0fc0 C2E90034 	 strd r3,[r2]
1529:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				}
1530:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1531:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				/* Fill the end of the page buffer with the
1532:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				current flash page data. */
1533:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				for (; !Test_align((uint32_t)tmp.u64ptr,
 3951              	 .loc 1 1533 0
 3952 0fc4 0BE0     	 b .L242
 3953              	.L243:
1534:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						FLASH_PAGE_SIZE); tmp.u64ptr++){
1535:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					*tmp.u32ptr = *tmp.u32ptr;
 3954              	 .loc 1 1535 0
 3955 0fc6 7B69     	 ldr r3,[r7,#20]
 3956 0fc8 7A69     	 ldr r2,[r7,#20]
 3957 0fca 1268     	 ldr r2,[r2]
 3958 0fcc 1A60     	 str r2,[r3]
1536:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					*(tmp.u32ptr + 1) = *(tmp.u32ptr + 1);
 3959              	 .loc 1 1536 0
 3960 0fce 7B69     	 ldr r3,[r7,#20]
 3961 0fd0 0433     	 adds r3,r3,#4
 3962 0fd2 7A69     	 ldr r2,[r7,#20]
 3963 0fd4 5268     	 ldr r2,[r2,#4]
 3964 0fd6 1A60     	 str r2,[r3]
1534:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						FLASH_PAGE_SIZE); tmp.u64ptr++){
 3965              	 .loc 1 1534 0
 3966 0fd8 7B69     	 ldr r3,[r7,#20]
 3967 0fda 0833     	 adds r3,r3,#8
 3968 0fdc 7B61     	 str r3,[r7,#20]
 3969              	.L242:
1533:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 						FLASH_PAGE_SIZE); tmp.u64ptr++){
 3970              	 .loc 1 1533 0
 3971 0fde 7B69     	 ldr r3,[r7,#20]
 3972 0fe0 C3F30803 	 ubfx r3,r3,#0,#9
 3973 0fe4 002B     	 cmp r3,#0
 3974 0fe6 EED1     	 bne .L243
 3975              	.L238:
1537:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				}
1538:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
1539:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
1540:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1541:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* If the current flash page is in the flash array... */
1542:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		if (dest.u8ptr <= (uint8_t *)FLASH_USER_PAGE_ADDR) {
 3976              	 .loc 1 1542 0
 3977 0fe8 7B6D     	 ldr r3,[r7,#84]
 3978 0fea B3F5000F 	 cmp r3,#8388608
 3979 0fee 1ED8     	 bhi .L244
1543:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Erase the current page if requested and write it from
1544:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * the page buffer. */
1545:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			if (erase) {
 3980              	 .loc 1 1545 0
 3981 0ff0 97F87C30 	 ldrb r3,[r7,#124]
 3982 0ff4 002B     	 cmp r3,#0
 3983 0ff6 09D0     	 beq .L245
1546:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_erase_page(-1, false);
 3984              	 .loc 1 1546 0
 3985 0ff8 0021     	 movs r1,#0
 3986 0ffa 4FF0FF30 	 mov r0,#-1
 3987 0ffe FFF7FEFF 	 bl flashcalw_erase_page
1547:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				error_status |= flashcalw_error_status;
 3988              	 .loc 1 1547 0
 3989 1002 1C4B     	 ldr r3,.L250+4
 3990 1004 1B68     	 ldr r3,[r3]
 3991 1006 7A6E     	 ldr r2,[r7,#100]
 3992 1008 1343     	 orrs r3,r3,r2
 3993 100a 7B66     	 str r3,[r7,#100]
 3994              	.L245:
1548:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
1549:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1550:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			flashcalw_write_page(-1);
 3995              	 .loc 1 1550 0
 3996 100c 4FF0FF30 	 mov r0,#-1
 3997 1010 FFF7FEFF 	 bl flashcalw_write_page
1551:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			error_status |= flashcalw_error_status;
 3998              	 .loc 1 1551 0
 3999 1014 174B     	 ldr r3,.L250+4
 4000 1016 1B68     	 ldr r3,[r3]
 4001 1018 7A6E     	 ldr r2,[r7,#100]
 4002 101a 1343     	 orrs r3,r3,r2
 4003 101c 7B66     	 str r3,[r7,#100]
1552:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1553:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* If the end of the flash array is reached, go to the
1554:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * User page. */
1555:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			if (dest.u8ptr >= flash_array_end.u8ptr) {
 4004              	 .loc 1 1555 0
 4005 101e 7A6D     	 ldr r2,[r7,#84]
 4006 1020 BB6D     	 ldr r3,[r7,#88]
 4007 1022 9A42     	 cmp r2,r3
 4008 1024 16D3     	 bcc .L228
1556:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				dest.u8ptr = (uint8_t *)FLASH_USER_PAGE_ADDR;
 4009              	 .loc 1 1556 0
 4010 1026 4FF40003 	 mov r3,#8388608
 4011 102a 7B65     	 str r3,[r7,#84]
 4012 102c 12E0     	 b .L228
 4013              	.L244:
1557:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
1558:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		} else {
1559:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Erase the User page if requested and write it from
1560:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			 * the page buffer. */
1561:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			if (erase) {
 4014              	 .loc 1 1561 0
 4015 102e 97F87C30 	 ldrb r3,[r7,#124]
 4016 1032 002B     	 cmp r3,#0
 4017 1034 07D0     	 beq .L247
1562:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flashcalw_erase_user_page(false);
 4018              	 .loc 1 1562 0
 4019 1036 0020     	 movs r0,#0
 4020 1038 FFF7FEFF 	 bl flashcalw_erase_user_page
1563:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				error_status |= flashcalw_error_status;
 4021              	 .loc 1 1563 0
 4022 103c 0D4B     	 ldr r3,.L250+4
 4023 103e 1B68     	 ldr r3,[r3]
 4024 1040 7A6E     	 ldr r2,[r7,#100]
 4025 1042 1343     	 orrs r3,r3,r2
 4026 1044 7B66     	 str r3,[r7,#100]
 4027              	.L247:
1564:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
1565:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1566:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			flashcalw_write_user_page();
 4028              	 .loc 1 1566 0
 4029 1046 FFF7FEFF 	 bl flashcalw_write_user_page
1567:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			error_status |= flashcalw_error_status;
 4030              	 .loc 1 1567 0
 4031 104a 0A4B     	 ldr r3,.L250+4
 4032 104c 1B68     	 ldr r3,[r3]
 4033 104e 7A6E     	 ldr r2,[r7,#100]
 4034 1050 1343     	 orrs r3,r3,r2
 4035 1052 7B66     	 str r3,[r7,#100]
 4036              	.L228:
1415:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Clear the page buffer in order to prepare data for a flash
 4037              	 .loc 1 1415 0
 4038 1054 7A6D     	 ldr r2,[r7,#84]
 4039 1056 7B6C     	 ldr r3,[r7,#68]
 4040 1058 9A42     	 cmp r2,r3
 4041 105a FFF4E2AE 	 bcc .L248
1568:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
1569:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1570:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1571:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Update the FLASHC error status. */
1572:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 4042              	 .loc 1 1572 0
 4043 105e 054A     	 ldr r2,.L250+4
 4044 1060 7B6E     	 ldr r3,[r7,#100]
 4045 1062 1360     	 str r3,[r2]
1573:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1574:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Return the initial destination pointer as the standard memset
1575:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 * function does. */
1576:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return dst;
 4046              	 .loc 1 1576 0
 4047 1064 FB68     	 ldr r3,[r7,#12]
1577:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4048              	 .loc 1 1577 0
 4049 1066 1846     	 mov r0,r3
 4050 1068 6837     	 adds r7,r7,#104
 4051              	.LCFI265:
 4052              	 .cfi_def_cfa_offset 16
 4053 106a BD46     	 mov sp,r7
 4054              	.LCFI266:
 4055              	 .cfi_def_cfa_register 13
 4056              	 
 4057 106c B0BD     	 pop {r4,r5,r7,pc}
 4058              	.L251:
 4059 106e 00BF     	 .align 2
 4060              	.L250:
 4061 1070 00028000 	 .word 8389120
 4062 1074 00000000 	 .word flashcalw_error_status
 4063              	 .cfi_endproc
 4064              	.LFE240:
 4066              	 .align 1
 4067              	 .global flashcalw_memcpy
 4068              	 .syntax unified
 4069              	 .thumb
 4070              	 .thumb_func
 4071              	 .fpu softvfp
 4073              	flashcalw_memcpy:
 4074              	.LFB241:
1578:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1579:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \brief Copies \a nbytes bytes to the flash destination pointed to by \a dst
1580:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *         from the source pointed to by \a src.
1581:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1582:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * The destination areas that are not within the flash
1583:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * array or the User page are caught by an Assert() operation.
1584:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1585:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * All pointer and size alignments are supported.
1586:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1587:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param dst Pointer to flash destination.
1588:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param src Pointer to source data.
1589:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param nbytes Number of bytes to copy.
1590:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param erase Whether to erase before writing: \c true or \c false.
1591:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1592:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return The value of \a dst.
1593:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1594:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning If copying takes place between areas that overlap, the behavior is
1595:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          undefined.
1596:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1597:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning This function may be called with \a erase set to \c false only if
1598:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          the destination consists only of erased words, i.e. this function
1599:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          can not be used to write only one bit of a previously written word.
1600:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          E.g., if \c 0x00000001 then \c 0xFFFFFFFE are written to a word, the
1601:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          resulting value in flash may be different from \c 0x00000000.
1602:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1603:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \warning A Lock Error is issued if the command is applied to pages belonging
1604:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *          to a locked region or to the bootloader protected area.
1605:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1606:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \note The FLASHCALW error status returned by \ref flashcalw_is_lock_error and
1607:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *       \ref flashcalw_is_programming_error is updated.
1608:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1609:../../../platform/sam/drivers/flashcalw/flashcalw.c **** volatile void *flashcalw_memcpy(volatile void *dst, const void *src,
1610:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		size_t nbytes, bool erase)
1611:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4075              	 .loc 1 1611 0
 4076              	 .cfi_startproc
 4077              	 
 4078              	 
 4079 1078 90B5     	 push {r4,r7,lr}
 4080              	.LCFI267:
 4081              	 .cfi_def_cfa_offset 12
 4082              	 .cfi_offset 4,-12
 4083              	 .cfi_offset 7,-8
 4084              	 .cfi_offset 14,-4
 4085 107a 8DB0     	 sub sp,sp,#52
 4086              	.LCFI268:
 4087              	 .cfi_def_cfa_offset 64
 4088 107c 00AF     	 add r7,sp,#0
 4089              	.LCFI269:
 4090              	 .cfi_def_cfa_register 7
 4091 107e F860     	 str r0,[r7,#12]
 4092 1080 B960     	 str r1,[r7,#8]
 4093 1082 7A60     	 str r2,[r7,#4]
 4094 1084 FB70     	 strb r3,[r7,#3]
1612:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint16_t page_pos;
1613:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	Union64 flash_dword;
1614:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint8_t i;
1615:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	bool b_user_page;
1616:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	uint32_t error_status = 0;
 4095              	 .loc 1 1616 0
 4096 1086 0023     	 movs r3,#0
 4097 1088 BB62     	 str r3,[r7,#40]
1617:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	volatile uint8_t *flash_add;
1618:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	volatile uint8_t *dest_add = (uint8_t *)dst;
 4098              	 .loc 1 1618 0
 4099 108a FB68     	 ldr r3,[r7,#12]
 4100 108c 3B62     	 str r3,[r7,#32]
1619:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	const uint8_t *src_buf = (const uint8_t *)src;
 4101              	 .loc 1 1619 0
 4102 108e BB68     	 ldr r3,[r7,#8]
 4103 1090 FB61     	 str r3,[r7,#28]
1620:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1621:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Copy area must be in flash array or flash user page */
1622:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	Assert((((uint8_t *)dst >= (uint8_t *)FLASH_ADDR) &&
1623:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			(((uint8_t *)dst + nbytes)
1624:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			<= (((uint8_t *)FLASH_ADDR)
1625:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			+ flashcalw_get_flash_size()))) ||
1626:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			(((uint8_t *)dst >= (uint8_t *)FLASH_USER_PAGE_ADDR) &&
1627:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			(((uint8_t *)dst + nbytes)
1628:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			<= (((uint8_t *)FLASH_USER_PAGE_ADDR)
1629:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			+ FLASH_PAGE_SIZE))));
1630:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1631:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	b_user_page = (volatile uint8_t *)dst
 4104              	 .loc 1 1631 0
 4105 1092 FB68     	 ldr r3,[r7,#12]
 4106 1094 444A     	 ldr r2,.L266
 4107 1096 9342     	 cmp r3,r2
 4108 1098 8CBF     	 ite hi
 4109 109a 0123     	 movhi r3,#1
 4110 109c 0023     	 movls r3,#0
 4111 109e FB76     	 strb r3,[r7,#27]
1632:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			>= (uint8_t *)FLASH_USER_PAGE_ADDR;
1633:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1634:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flash_add = (uint8_t *)((uint32_t)dest_add
 4112              	 .loc 1 1634 0
 4113 10a0 3B6A     	 ldr r3,[r7,#32]
1635:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			- ((uint32_t)dest_add % FLASH_PAGE_SIZE));
 4114              	 .loc 1 1635 0
 4115 10a2 23F4FF73 	 bic r3,r3,#510
 4116 10a6 23F00103 	 bic r3,r3,#1
1634:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			- ((uint32_t)dest_add % FLASH_PAGE_SIZE));
 4117              	 .loc 1 1634 0
 4118 10aa 7B62     	 str r3,[r7,#36]
1636:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1637:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	while (nbytes) {
 4119              	 .loc 1 1637 0
 4120 10ac 71E0     	 b .L253
 4121              	.L264:
1638:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Clear the page buffer in order to prepare data for a flash
1639:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		 * page write. */
1640:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		flashcalw_clear_page_buffer();
 4122              	 .loc 1 1640 0
 4123 10ae FFF7FEFF 	 bl flashcalw_clear_page_buffer
1641:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 4124              	 .loc 1 1641 0
 4125 10b2 3E4B     	 ldr r3,.L266+4
 4126 10b4 1B68     	 ldr r3,[r3]
 4127 10b6 BA6A     	 ldr r2,[r7,#40]
 4128 10b8 1343     	 orrs r3,r3,r2
 4129 10ba BB62     	 str r3,[r7,#40]
1642:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1643:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Loop in the page */
1644:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		for (page_pos = 0; page_pos < FLASH_PAGE_SIZE;
 4130              	 .loc 1 1644 0
 4131 10bc 0023     	 movs r3,#0
 4132 10be FB85     	 strh r3,[r7,#46]
 4133 10c0 40E0     	 b .L254
 4134              	.L258:
1645:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				page_pos += sizeof(uint64_t)) {
1646:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Read the flash double-word buffer */
1647:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			flash_dword.u64 = *(volatile uint64_t *)((uint32_t)flash_add);
 4135              	 .loc 1 1647 0
 4136 10c2 7B6A     	 ldr r3,[r7,#36]
 4137 10c4 D3E90034 	 ldrd r3,[r3]
 4138 10c8 C7E90434 	 strd r3,[r7,#16]
1648:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1649:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Update double-word if necessary */
1650:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			for (i = 0; i < sizeof(uint64_t); i++) {
 4139              	 .loc 1 1650 0
 4140 10cc 0023     	 movs r3,#0
 4141 10ce 87F82D30 	 strb r3,[r7,#45]
 4142 10d2 20E0     	 b .L255
 4143              	.L257:
1651:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				if (nbytes && (flash_add == dest_add)) {
 4144              	 .loc 1 1651 0
 4145 10d4 7B68     	 ldr r3,[r7,#4]
 4146 10d6 002B     	 cmp r3,#0
 4147 10d8 15D0     	 beq .L256
 4148              	 .loc 1 1651 0 is_stmt 0 discriminator 1
 4149 10da 7A6A     	 ldr r2,[r7,#36]
 4150 10dc 3B6A     	 ldr r3,[r7,#32]
 4151 10de 9A42     	 cmp r2,r3
 4152 10e0 11D1     	 bne .L256
1652:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					/* Update page with data source */
1653:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					flash_dword.u8[i] = *src_buf++;
 4153              	 .loc 1 1653 0 is_stmt 1
 4154 10e2 97F82D20 	 ldrb r2,[r7,#45]
 4155 10e6 FB69     	 ldr r3,[r7,#28]
 4156 10e8 591C     	 adds r1,r3,#1
 4157 10ea F961     	 str r1,[r7,#28]
 4158 10ec 1978     	 ldrb r1,[r3]
 4159 10ee 07F13003 	 add r3,r7,#48
 4160 10f2 1344     	 add r3,r3,r2
 4161 10f4 0A46     	 mov r2,r1
 4162 10f6 03F8202C 	 strb r2,[r3,#-32]
1654:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					dest_add++;
 4163              	 .loc 1 1654 0
 4164 10fa 3B6A     	 ldr r3,[r7,#32]
 4165 10fc 0133     	 adds r3,r3,#1
 4166 10fe 3B62     	 str r3,[r7,#32]
1655:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					nbytes--;
 4167              	 .loc 1 1655 0
 4168 1100 7B68     	 ldr r3,[r7,#4]
 4169 1102 013B     	 subs r3,r3,#1
 4170 1104 7B60     	 str r3,[r7,#4]
 4171              	.L256:
1656:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				}
1657:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1658:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				flash_add++;
 4172              	 .loc 1 1658 0 discriminator 2
 4173 1106 7B6A     	 ldr r3,[r7,#36]
 4174 1108 0133     	 adds r3,r3,#1
 4175 110a 7B62     	 str r3,[r7,#36]
1650:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				if (nbytes && (flash_add == dest_add)) {
 4176              	 .loc 1 1650 0 discriminator 2
 4177 110c 97F82D30 	 ldrb r3,[r7,#45]
 4178 1110 0133     	 adds r3,r3,#1
 4179 1112 87F82D30 	 strb r3,[r7,#45]
 4180              	.L255:
1650:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				if (nbytes && (flash_add == dest_add)) {
 4181              	 .loc 1 1650 0 is_stmt 0 discriminator 1
 4182 1116 97F82D30 	 ldrb r3,[r7,#45]
 4183 111a 072B     	 cmp r3,#7
 4184 111c DAD9     	 bls .L257
1659:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			}
1660:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1661:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Workaround for corrupted data after page write operations */
1662:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			*(volatile uint64_t*)((uint32_t)flash_add - sizeof(uint64_t))
 4185              	 .loc 1 1662 0 is_stmt 1
 4186 111e 7B6A     	 ldr r3,[r7,#36]
 4187 1120 083B     	 subs r3,r3,#8
 4188 1122 1A46     	 mov r2,r3
1663:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					= (uint64_t)-1;
 4189              	 .loc 1 1663 0
 4190 1124 4FF0FF33 	 mov r3,#-1
 4191 1128 4FF0FF34 	 mov r4,#-1
 4192 112c C2E90034 	 strd r3,[r2]
1664:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			
1665:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Write the flash double-word buffer to the page buffer */
1666:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			*(volatile uint64_t *)((uint32_t)flash_add - sizeof(uint64_t))
 4193              	 .loc 1 1666 0
 4194 1130 7B6A     	 ldr r3,[r7,#36]
 4195 1132 083B     	 subs r3,r3,#8
 4196 1134 1A46     	 mov r2,r3
1667:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 					= flash_dword.u64;
 4197              	 .loc 1 1667 0
 4198 1136 D7E90434 	 ldrd r3,[r7,#16]
 4199 113a C2E90034 	 strd r3,[r2]
1645:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			/* Read the flash double-word buffer */
 4200              	 .loc 1 1645 0
 4201 113e FB8D     	 ldrh r3,[r7,#46]
 4202 1140 0833     	 adds r3,r3,#8
 4203 1142 FB85     	 strh r3,[r7,#46]
 4204              	.L254:
1644:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 				page_pos += sizeof(uint64_t)) {
 4205              	 .loc 1 1644 0 discriminator 1
 4206 1144 FB8D     	 ldrh r3,[r7,#46]
 4207 1146 B3F5007F 	 cmp r3,#512
 4208 114a BAD3     	 bcc .L258
1668:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
1669:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1670:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Erase the current page if requested and write it from the
1671:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		 * page buffer. */
1672:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		if (erase) {
 4209              	 .loc 1 1672 0
 4210 114c FB78     	 ldrb r3,[r7,#3]
 4211 114e 002B     	 cmp r3,#0
 4212 1150 10D0     	 beq .L259
1673:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			(b_user_page) ? flashcalw_erase_user_page(false)
1674:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			: flashcalw_erase_page(-1, false);
 4213              	 .loc 1 1674 0
 4214 1152 FB7E     	 ldrb r3,[r7,#27]
 4215 1154 002B     	 cmp r3,#0
 4216 1156 03D0     	 beq .L260
1673:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			(b_user_page) ? flashcalw_erase_user_page(false)
 4217              	 .loc 1 1673 0 discriminator 1
 4218 1158 0020     	 movs r0,#0
 4219 115a FFF7FEFF 	 bl flashcalw_erase_user_page
 4220 115e 04E0     	 b .L261
 4221              	.L260:
 4222              	 .loc 1 1674 0 discriminator 2
 4223 1160 0021     	 movs r1,#0
 4224 1162 4FF0FF30 	 mov r0,#-1
 4225 1166 FFF7FEFF 	 bl flashcalw_erase_page
 4226              	.L261:
1675:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 			error_status |= flashcalw_error_status;
 4227              	 .loc 1 1675 0
 4228 116a 104B     	 ldr r3,.L266+4
 4229 116c 1B68     	 ldr r3,[r3]
 4230 116e BA6A     	 ldr r2,[r7,#40]
 4231 1170 1343     	 orrs r3,r3,r2
 4232 1172 BB62     	 str r3,[r7,#40]
 4233              	.L259:
1676:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		}
1677:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1678:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Write the page */
1679:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		(b_user_page) ? flashcalw_write_user_page()
1680:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		: flashcalw_write_page(-1);
 4234              	 .loc 1 1680 0
 4235 1174 FB7E     	 ldrb r3,[r7,#27]
 4236 1176 002B     	 cmp r3,#0
 4237 1178 02D0     	 beq .L262
1679:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		: flashcalw_write_page(-1);
 4238              	 .loc 1 1679 0
 4239 117a FFF7FEFF 	 bl flashcalw_write_user_page
 4240 117e 03E0     	 b .L263
 4241              	.L262:
 4242              	 .loc 1 1680 0 discriminator 1
 4243 1180 4FF0FF30 	 mov r0,#-1
 4244 1184 FFF7FEFF 	 bl flashcalw_write_page
 4245              	.L263:
1681:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		error_status |= flashcalw_error_status;
 4246              	 .loc 1 1681 0
 4247 1188 084B     	 ldr r3,.L266+4
 4248 118a 1B68     	 ldr r3,[r3]
 4249 118c BA6A     	 ldr r2,[r7,#40]
 4250 118e 1343     	 orrs r3,r3,r2
 4251 1190 BB62     	 str r3,[r7,#40]
 4252              	.L253:
1637:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 		/* Clear the page buffer in order to prepare data for a flash
 4253              	 .loc 1 1637 0
 4254 1192 7B68     	 ldr r3,[r7,#4]
 4255 1194 002B     	 cmp r3,#0
 4256 1196 8AD1     	 bne .L264
1682:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1683:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Update the FLASHC error status. */
1684:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	flashcalw_error_status = error_status;
 4257              	 .loc 1 1684 0
 4258 1198 044A     	 ldr r2,.L266+4
 4259 119a BB6A     	 ldr r3,[r7,#40]
 4260 119c 1360     	 str r3,[r2]
1685:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1686:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Return the initial destination pointer as the standard memcpy
1687:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	 * function does. */
1688:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return dst;
 4261              	 .loc 1 1688 0
 4262 119e FB68     	 ldr r3,[r7,#12]
1689:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4263              	 .loc 1 1689 0
 4264 11a0 1846     	 mov r0,r3
 4265 11a2 3437     	 adds r7,r7,#52
 4266              	.LCFI270:
 4267              	 .cfi_def_cfa_offset 12
 4268 11a4 BD46     	 mov sp,r7
 4269              	.LCFI271:
 4270              	 .cfi_def_cfa_register 13
 4271              	 
 4272 11a6 90BD     	 pop {r4,r7,pc}
 4273              	.L267:
 4274              	 .align 2
 4275              	.L266:
 4276 11a8 FFFF7F00 	 .word 8388607
 4277 11ac 00000000 	 .word flashcalw_error_status
 4278              	 .cfi_endproc
 4279              	.LFE241:
 4281              	 .align 1
 4282              	 .global flashcalw_picocache_enable
 4283              	 .syntax unified
 4284              	 .thumb
 4285              	 .thumb_func
 4286              	 .fpu softvfp
 4288              	flashcalw_picocache_enable:
 4289              	.LFB242:
1690:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1691:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /** @} */
1692:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1693:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /*! \name PicoCache interfaces
1694:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1695:../../../platform/sam/drivers/flashcalw/flashcalw.c **** //! @{
1696:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1697:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1698:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Enable PicoCache.
1699:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1700:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_picocache_enable(void)
1701:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4290              	 .loc 1 1701 0
 4291              	 .cfi_startproc
 4292              	 
 4293              	 
 4294 11b0 80B5     	 push {r7,lr}
 4295              	.LCFI272:
 4296              	 .cfi_def_cfa_offset 8
 4297              	 .cfi_offset 7,-8
 4298              	 .cfi_offset 14,-4
 4299 11b2 00AF     	 add r7,sp,#0
 4300              	.LCFI273:
 4301              	 .cfi_def_cfa_register 7
1702:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	sysclk_enable_peripheral_clock(HCACHE);
 4302              	 .loc 1 1702 0
 4303 11b4 0748     	 ldr r0,.L270
 4304 11b6 084B     	 ldr r3,.L270+4
 4305 11b8 9847     	 blx r3
 4306              	.LVL3:
1703:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_CTRL = HCACHE_CTRL_CEN_YES;
 4307              	 .loc 1 1703 0
 4308 11ba 064B     	 ldr r3,.L270
 4309 11bc 0122     	 movs r2,#1
 4310 11be 9A60     	 str r2,[r3,#8]
1704:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1705:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	while (!(flashcalw_picocache_get_status() & HCACHE_SR_CSTS_EN)) {
 4311              	 .loc 1 1705 0
 4312 11c0 00BF     	 nop
 4313              	.L269:
 4314              	 .loc 1 1705 0 is_stmt 0 discriminator 1
 4315 11c2 FFF7FEFF 	 bl flashcalw_picocache_get_status
 4316 11c6 0346     	 mov r3,r0
 4317 11c8 03F00103 	 and r3,r3,#1
 4318 11cc 002B     	 cmp r3,#0
 4319 11ce F8D0     	 beq .L269
1706:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1707:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4320              	 .loc 1 1707 0 is_stmt 1
 4321 11d0 00BF     	 nop
 4322 11d2 80BD     	 pop {r7,pc}
 4323              	.L271:
 4324              	 .align 2
 4325              	.L270:
 4326 11d4 00040A40 	 .word 1074398208
 4327 11d8 00000000 	 .word sysclk_enable_peripheral_clock
 4328              	 .cfi_endproc
 4329              	.LFE242:
 4331              	 .align 1
 4332              	 .global flashcalw_picocache_disable
 4333              	 .syntax unified
 4334              	 .thumb
 4335              	 .thumb_func
 4336              	 .fpu softvfp
 4338              	flashcalw_picocache_disable:
 4339              	.LFB243:
1708:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1709:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1710:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Disable PicoCache.
1711:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1712:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_picocache_disable(void)
1713:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4340              	 .loc 1 1713 0
 4341              	 .cfi_startproc
 4342              	 
 4343              	 
 4344 11dc 80B5     	 push {r7,lr}
 4345              	.LCFI274:
 4346              	 .cfi_def_cfa_offset 8
 4347              	 .cfi_offset 7,-8
 4348              	 .cfi_offset 14,-4
 4349 11de 00AF     	 add r7,sp,#0
 4350              	.LCFI275:
 4351              	 .cfi_def_cfa_register 7
1714:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_MAINT0 = HCACHE_MAINT0_INVALL_YES;
 4352              	 .loc 1 1714 0
 4353 11e0 084B     	 ldr r3,.L274
 4354 11e2 0122     	 movs r2,#1
 4355 11e4 1A62     	 str r2,[r3,#32]
1715:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_CTRL = HCACHE_CTRL_CEN_NO;
 4356              	 .loc 1 1715 0
 4357 11e6 074B     	 ldr r3,.L274
 4358 11e8 0022     	 movs r2,#0
 4359 11ea 9A60     	 str r2,[r3,#8]
1716:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1717:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	while (flashcalw_picocache_get_status() != HCACHE_SR_CSTS_DIS) {
 4360              	 .loc 1 1717 0
 4361 11ec 00BF     	 nop
 4362              	.L273:
 4363              	 .loc 1 1717 0 is_stmt 0 discriminator 1
 4364 11ee FFF7FEFF 	 bl flashcalw_picocache_get_status
 4365 11f2 0346     	 mov r3,r0
 4366 11f4 002B     	 cmp r3,#0
 4367 11f6 FAD1     	 bne .L273
1718:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1719:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1720:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	sysclk_disable_peripheral_clock(HCACHE);
 4368              	 .loc 1 1720 0 is_stmt 1
 4369 11f8 0248     	 ldr r0,.L274
 4370 11fa 034B     	 ldr r3,.L274+4
 4371 11fc 9847     	 blx r3
 4372              	.LVL4:
1721:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4373              	 .loc 1 1721 0
 4374 11fe 00BF     	 nop
 4375 1200 80BD     	 pop {r7,pc}
 4376              	.L275:
 4377 1202 00BF     	 .align 2
 4378              	.L274:
 4379 1204 00040A40 	 .word 1074398208
 4380 1208 00000000 	 .word sysclk_disable_peripheral_clock
 4381              	 .cfi_endproc
 4382              	.LFE243:
 4384              	 .align 1
 4385              	 .global flashcalw_picocache_get_status
 4386              	 .syntax unified
 4387              	 .thumb
 4388              	 .thumb_func
 4389              	 .fpu softvfp
 4391              	flashcalw_picocache_get_status:
 4392              	.LFB244:
1722:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1723:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1724:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Get PicoCache status.
1725:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1726:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return 1 If PicoCahe is enabled, else disabled.
1727:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1728:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_picocache_get_status(void)
1729:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4393              	 .loc 1 1729 0
 4394              	 .cfi_startproc
 4395              	 
 4396              	 
 4397              	 
 4398 120c 80B4     	 push {r7}
 4399              	.LCFI276:
 4400              	 .cfi_def_cfa_offset 4
 4401              	 .cfi_offset 7,-4
 4402 120e 00AF     	 add r7,sp,#0
 4403              	.LCFI277:
 4404              	 .cfi_def_cfa_register 7
1730:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return HCACHE->HCACHE_SR;
 4405              	 .loc 1 1730 0
 4406 1210 024B     	 ldr r3,.L278
 4407 1212 DB68     	 ldr r3,[r3,#12]
1731:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4408              	 .loc 1 1731 0
 4409 1214 1846     	 mov r0,r3
 4410 1216 BD46     	 mov sp,r7
 4411              	.LCFI278:
 4412              	 .cfi_def_cfa_register 13
 4413              	 
 4414 1218 80BC     	 pop {r7}
 4415              	.LCFI279:
 4416              	 .cfi_restore 7
 4417              	 .cfi_def_cfa_offset 0
 4418 121a 7047     	 bx lr
 4419              	.L279:
 4420              	 .align 2
 4421              	.L278:
 4422 121c 00040A40 	 .word 1074398208
 4423              	 .cfi_endproc
 4424              	.LFE244:
 4426              	 .align 1
 4427              	 .global flashcalw_picocache_invalid_all
 4428              	 .syntax unified
 4429              	 .thumb
 4430              	 .thumb_func
 4431              	 .fpu softvfp
 4433              	flashcalw_picocache_invalid_all:
 4434              	.LFB245:
1732:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1733:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1734:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Invalid all PicoCache lines.
1735:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1736:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_picocache_invalid_all(void)
1737:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4435              	 .loc 1 1737 0
 4436              	 .cfi_startproc
 4437              	 
 4438              	 
 4439              	 
 4440 1220 80B4     	 push {r7}
 4441              	.LCFI280:
 4442              	 .cfi_def_cfa_offset 4
 4443              	 .cfi_offset 7,-4
 4444 1222 00AF     	 add r7,sp,#0
 4445              	.LCFI281:
 4446              	 .cfi_def_cfa_register 7
1738:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_MAINT0 = HCACHE_MAINT0_INVALL_YES;
 4447              	 .loc 1 1738 0
 4448 1224 034B     	 ldr r3,.L281
 4449 1226 0122     	 movs r2,#1
 4450 1228 1A62     	 str r2,[r3,#32]
1739:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4451              	 .loc 1 1739 0
 4452 122a 00BF     	 nop
 4453 122c BD46     	 mov sp,r7
 4454              	.LCFI282:
 4455              	 .cfi_def_cfa_register 13
 4456              	 
 4457 122e 80BC     	 pop {r7}
 4458              	.LCFI283:
 4459              	 .cfi_restore 7
 4460              	 .cfi_def_cfa_offset 0
 4461 1230 7047     	 bx lr
 4462              	.L282:
 4463 1232 00BF     	 .align 2
 4464              	.L281:
 4465 1234 00040A40 	 .word 1074398208
 4466              	 .cfi_endproc
 4467              	.LFE245:
 4469              	 .align 1
 4470              	 .global flashcalw_picocache_invalid_line
 4471              	 .syntax unified
 4472              	 .thumb
 4473              	 .thumb_func
 4474              	 .fpu softvfp
 4476              	flashcalw_picocache_invalid_line:
 4477              	.LFB246:
1740:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1741:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1742:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Invalid specific cache line.
1743:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1744:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param index Lines to be invalid.
1745:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1746:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_picocache_invalid_line(uint32_t index)
1747:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4478              	 .loc 1 1747 0
 4479              	 .cfi_startproc
 4480              	 
 4481              	 
 4482 1238 80B5     	 push {r7,lr}
 4483              	.LCFI284:
 4484              	 .cfi_def_cfa_offset 8
 4485              	 .cfi_offset 7,-8
 4486              	 .cfi_offset 14,-4
 4487 123a 82B0     	 sub sp,sp,#8
 4488              	.LCFI285:
 4489              	 .cfi_def_cfa_offset 16
 4490 123c 00AF     	 add r7,sp,#0
 4491              	.LCFI286:
 4492              	 .cfi_def_cfa_register 7
 4493 123e 7860     	 str r0,[r7,#4]
1748:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Disable the cache controller */
1749:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_CTRL = HCACHE_CTRL_CEN_NO;
 4494              	 .loc 1 1749 0
 4495 1240 094B     	 ldr r3,.L285
 4496 1242 0022     	 movs r2,#0
 4497 1244 9A60     	 str r2,[r3,#8]
1750:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1751:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Wait for disable successfully */
1752:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	while (flashcalw_picocache_get_status() != HCACHE_SR_CSTS_DIS) {
 4498              	 .loc 1 1752 0
 4499 1246 00BF     	 nop
 4500              	.L284:
 4501              	 .loc 1 1752 0 is_stmt 0 discriminator 1
 4502 1248 FFF7FEFF 	 bl flashcalw_picocache_get_status
 4503 124c 0346     	 mov r3,r0
 4504 124e 002B     	 cmp r3,#0
 4505 1250 FAD1     	 bne .L284
1753:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	}
1754:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1755:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Invalid the line */
1756:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_MAINT1 = index;
 4506              	 .loc 1 1756 0 is_stmt 1
 4507 1252 054A     	 ldr r2,.L285
 4508 1254 7B68     	 ldr r3,[r7,#4]
 4509 1256 5362     	 str r3,[r2,#36]
1757:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1758:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	/* Enable the cache again */
1759:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_CTRL = HCACHE_CTRL_CEN_YES;
 4510              	 .loc 1 1759 0
 4511 1258 034B     	 ldr r3,.L285
 4512 125a 0122     	 movs r2,#1
 4513 125c 9A60     	 str r2,[r3,#8]
1760:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4514              	 .loc 1 1760 0
 4515 125e 00BF     	 nop
 4516 1260 0837     	 adds r7,r7,#8
 4517              	.LCFI287:
 4518              	 .cfi_def_cfa_offset 8
 4519 1262 BD46     	 mov sp,r7
 4520              	.LCFI288:
 4521              	 .cfi_def_cfa_register 13
 4522              	 
 4523 1264 80BD     	 pop {r7,pc}
 4524              	.L286:
 4525 1266 00BF     	 .align 2
 4526              	.L285:
 4527 1268 00040A40 	 .word 1074398208
 4528              	 .cfi_endproc
 4529              	.LFE246:
 4531              	 .align 1
 4532              	 .global flashcalw_picocache_set_monitor_mode
 4533              	 .syntax unified
 4534              	 .thumb
 4535              	 .thumb_func
 4536              	 .fpu softvfp
 4538              	flashcalw_picocache_set_monitor_mode:
 4539              	.LFB247:
1761:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1762:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1763:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Set PicoCache monitor mode.
1764:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1765:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \param mode PicoCache mode, 0 for cycle, 1 for instruction hit and 2 for data
1766:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *hit.
1767:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1768:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_picocache_set_monitor_mode(uint32_t mode)
1769:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4540              	 .loc 1 1769 0
 4541              	 .cfi_startproc
 4542              	 
 4543              	 
 4544              	 
 4545 126c 80B4     	 push {r7}
 4546              	.LCFI289:
 4547              	 .cfi_def_cfa_offset 4
 4548              	 .cfi_offset 7,-4
 4549 126e 83B0     	 sub sp,sp,#12
 4550              	.LCFI290:
 4551              	 .cfi_def_cfa_offset 16
 4552 1270 00AF     	 add r7,sp,#0
 4553              	.LCFI291:
 4554              	 .cfi_def_cfa_register 7
 4555 1272 7860     	 str r0,[r7,#4]
1770:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_MCFG = mode;
 4556              	 .loc 1 1770 0
 4557 1274 034A     	 ldr r2,.L288
 4558 1276 7B68     	 ldr r3,[r7,#4]
 4559 1278 9362     	 str r3,[r2,#40]
1771:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4560              	 .loc 1 1771 0
 4561 127a 00BF     	 nop
 4562 127c 0C37     	 adds r7,r7,#12
 4563              	.LCFI292:
 4564              	 .cfi_def_cfa_offset 4
 4565 127e BD46     	 mov sp,r7
 4566              	.LCFI293:
 4567              	 .cfi_def_cfa_register 13
 4568              	 
 4569 1280 80BC     	 pop {r7}
 4570              	.LCFI294:
 4571              	 .cfi_restore 7
 4572              	 .cfi_def_cfa_offset 0
 4573 1282 7047     	 bx lr
 4574              	.L289:
 4575              	 .align 2
 4576              	.L288:
 4577 1284 00040A40 	 .word 1074398208
 4578              	 .cfi_endproc
 4579              	.LFE247:
 4581              	 .align 1
 4582              	 .global flashcalw_picocache_enable_monitor
 4583              	 .syntax unified
 4584              	 .thumb
 4585              	 .thumb_func
 4586              	 .fpu softvfp
 4588              	flashcalw_picocache_enable_monitor:
 4589              	.LFB248:
1772:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1773:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1774:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Enable PicoCache monitor.
1775:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1776:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_picocache_enable_monitor(void)
1777:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4590              	 .loc 1 1777 0
 4591              	 .cfi_startproc
 4592              	 
 4593              	 
 4594              	 
 4595 1288 80B4     	 push {r7}
 4596              	.LCFI295:
 4597              	 .cfi_def_cfa_offset 4
 4598              	 .cfi_offset 7,-4
 4599 128a 00AF     	 add r7,sp,#0
 4600              	.LCFI296:
 4601              	 .cfi_def_cfa_register 7
1778:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_MEN = HCACHE_MEN_MENABLE_EN;
 4602              	 .loc 1 1778 0
 4603 128c 034B     	 ldr r3,.L291
 4604 128e 0122     	 movs r2,#1
 4605 1290 DA62     	 str r2,[r3,#44]
1779:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4606              	 .loc 1 1779 0
 4607 1292 00BF     	 nop
 4608 1294 BD46     	 mov sp,r7
 4609              	.LCFI297:
 4610              	 .cfi_def_cfa_register 13
 4611              	 
 4612 1296 80BC     	 pop {r7}
 4613              	.LCFI298:
 4614              	 .cfi_restore 7
 4615              	 .cfi_def_cfa_offset 0
 4616 1298 7047     	 bx lr
 4617              	.L292:
 4618 129a 00BF     	 .align 2
 4619              	.L291:
 4620 129c 00040A40 	 .word 1074398208
 4621              	 .cfi_endproc
 4622              	.LFE248:
 4624              	 .align 1
 4625              	 .global flashcalw_picocache_disable_monitor
 4626              	 .syntax unified
 4627              	 .thumb
 4628              	 .thumb_func
 4629              	 .fpu softvfp
 4631              	flashcalw_picocache_disable_monitor:
 4632              	.LFB249:
1780:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1781:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1782:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Disable PicoCache monitor.
1783:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1784:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_picocache_disable_monitor(void)
1785:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4633              	 .loc 1 1785 0
 4634              	 .cfi_startproc
 4635              	 
 4636              	 
 4637              	 
 4638 12a0 80B4     	 push {r7}
 4639              	.LCFI299:
 4640              	 .cfi_def_cfa_offset 4
 4641              	 .cfi_offset 7,-4
 4642 12a2 00AF     	 add r7,sp,#0
 4643              	.LCFI300:
 4644              	 .cfi_def_cfa_register 7
1786:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_MEN = HCACHE_MEN_MENABLE_DIS;
 4645              	 .loc 1 1786 0
 4646 12a4 034B     	 ldr r3,.L294
 4647 12a6 0022     	 movs r2,#0
 4648 12a8 DA62     	 str r2,[r3,#44]
1787:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4649              	 .loc 1 1787 0
 4650 12aa 00BF     	 nop
 4651 12ac BD46     	 mov sp,r7
 4652              	.LCFI301:
 4653              	 .cfi_def_cfa_register 13
 4654              	 
 4655 12ae 80BC     	 pop {r7}
 4656              	.LCFI302:
 4657              	 .cfi_restore 7
 4658              	 .cfi_def_cfa_offset 0
 4659 12b0 7047     	 bx lr
 4660              	.L295:
 4661 12b2 00BF     	 .align 2
 4662              	.L294:
 4663 12b4 00040A40 	 .word 1074398208
 4664              	 .cfi_endproc
 4665              	.LFE249:
 4667              	 .align 1
 4668              	 .global flashcalw_picocache_reset_monitor
 4669              	 .syntax unified
 4670              	 .thumb
 4671              	 .thumb_func
 4672              	 .fpu softvfp
 4674              	flashcalw_picocache_reset_monitor:
 4675              	.LFB250:
1788:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1789:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1790:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Reset PicoCache monitor.
1791:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1792:../../../platform/sam/drivers/flashcalw/flashcalw.c **** void flashcalw_picocache_reset_monitor( void )
1793:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4676              	 .loc 1 1793 0
 4677              	 .cfi_startproc
 4678              	 
 4679              	 
 4680              	 
 4681 12b8 80B4     	 push {r7}
 4682              	.LCFI303:
 4683              	 .cfi_def_cfa_offset 4
 4684              	 .cfi_offset 7,-4
 4685 12ba 00AF     	 add r7,sp,#0
 4686              	.LCFI304:
 4687              	 .cfi_def_cfa_register 7
1794:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	HCACHE->HCACHE_MCTRL = HCACHE_MCTRL_SWRST_YES;
 4688              	 .loc 1 1794 0
 4689 12bc 034B     	 ldr r3,.L297
 4690 12be 0122     	 movs r2,#1
 4691 12c0 1A63     	 str r2,[r3,#48]
1795:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4692              	 .loc 1 1795 0
 4693 12c2 00BF     	 nop
 4694 12c4 BD46     	 mov sp,r7
 4695              	.LCFI305:
 4696              	 .cfi_def_cfa_register 13
 4697              	 
 4698 12c6 80BC     	 pop {r7}
 4699              	.LCFI306:
 4700              	 .cfi_restore 7
 4701              	 .cfi_def_cfa_offset 0
 4702 12c8 7047     	 bx lr
 4703              	.L298:
 4704 12ca 00BF     	 .align 2
 4705              	.L297:
 4706 12cc 00040A40 	 .word 1074398208
 4707              	 .cfi_endproc
 4708              	.LFE250:
 4710              	 .align 1
 4711              	 .global flashcalw_picocache_get_monitor_cnt
 4712              	 .syntax unified
 4713              	 .thumb
 4714              	 .thumb_func
 4715              	 .fpu softvfp
 4717              	flashcalw_picocache_get_monitor_cnt:
 4718              	.LFB251:
1796:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1797:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1798:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Get PicoCache monitor count number.
1799:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1800:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return Monitor counter number.
1801:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1802:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_picocache_get_monitor_cnt( void )
1803:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4719              	 .loc 1 1803 0
 4720              	 .cfi_startproc
 4721              	 
 4722              	 
 4723              	 
 4724 12d0 80B4     	 push {r7}
 4725              	.LCFI307:
 4726              	 .cfi_def_cfa_offset 4
 4727              	 .cfi_offset 7,-4
 4728 12d2 00AF     	 add r7,sp,#0
 4729              	.LCFI308:
 4730              	 .cfi_def_cfa_register 7
1804:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return HCACHE->HCACHE_MSR;
 4731              	 .loc 1 1804 0
 4732 12d4 024B     	 ldr r3,.L301
 4733 12d6 5B6B     	 ldr r3,[r3,#52]
1805:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4734              	 .loc 1 1805 0
 4735 12d8 1846     	 mov r0,r3
 4736 12da BD46     	 mov sp,r7
 4737              	.LCFI309:
 4738              	 .cfi_def_cfa_register 13
 4739              	 
 4740 12dc 80BC     	 pop {r7}
 4741              	.LCFI310:
 4742              	 .cfi_restore 7
 4743              	 .cfi_def_cfa_offset 0
 4744 12de 7047     	 bx lr
 4745              	.L302:
 4746              	 .align 2
 4747              	.L301:
 4748 12e0 00040A40 	 .word 1074398208
 4749              	 .cfi_endproc
 4750              	.LFE251:
 4752              	 .align 1
 4753              	 .global flashcalw_picocache_get_version
 4754              	 .syntax unified
 4755              	 .thumb
 4756              	 .thumb_func
 4757              	 .fpu softvfp
 4759              	flashcalw_picocache_get_version:
 4760              	.LFB252:
1806:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 
1807:../../../platform/sam/drivers/flashcalw/flashcalw.c **** /**
1808:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \brief Get PicoCache version.
1809:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  *
1810:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  * \return PicoCache version.
1811:../../../platform/sam/drivers/flashcalw/flashcalw.c ****  */
1812:../../../platform/sam/drivers/flashcalw/flashcalw.c **** uint32_t flashcalw_picocache_get_version( void )
1813:../../../platform/sam/drivers/flashcalw/flashcalw.c **** {
 4761              	 .loc 1 1813 0
 4762              	 .cfi_startproc
 4763              	 
 4764              	 
 4765              	 
 4766 12e4 80B4     	 push {r7}
 4767              	.LCFI311:
 4768              	 .cfi_def_cfa_offset 4
 4769              	 .cfi_offset 7,-4
 4770 12e6 00AF     	 add r7,sp,#0
 4771              	.LCFI312:
 4772              	 .cfi_def_cfa_register 7
1814:../../../platform/sam/drivers/flashcalw/flashcalw.c **** 	return HCACHE->HCACHE_VERSION;
 4773              	 .loc 1 1814 0
 4774 12e8 034B     	 ldr r3,.L305
 4775 12ea D3F8FC30 	 ldr r3,[r3,#252]
1815:../../../platform/sam/drivers/flashcalw/flashcalw.c **** }
 4776              	 .loc 1 1815 0
 4777 12ee 1846     	 mov r0,r3
 4778 12f0 BD46     	 mov sp,r7
 4779              	.LCFI313:
 4780              	 .cfi_def_cfa_register 13
 4781              	 
 4782 12f2 80BC     	 pop {r7}
 4783              	.LCFI314:
 4784              	 .cfi_restore 7
 4785              	 .cfi_def_cfa_offset 0
 4786 12f4 7047     	 bx lr
 4787              	.L306:
 4788 12f6 00BF     	 .align 2
 4789              	.L305:
 4790 12f8 00040A40 	 .word 1074398208
 4791              	 .cfi_endproc
 4792              	.LFE252:
 4794              	.Letext0:
 4795              	 .file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 4796              	 .file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 4797              	 .file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 4798              	 .file 5 "../../../platform/sam/utils/cmsis/sam4l/include/sam4lc4b.h"
 4799              	 .file 6 "../../../platform/thirdparty/CMSIS/include/core_cm4.h"
 4800              	 .file 7 "../../../platform/sam/utils/cmsis/sam4l/source/templates/system_sam4l.h"
 4801              	 .file 8 "../../../platform/sam/utils/cmsis/sam4l/include/component/component_flashcalw.h"
 4802              	 .file 9 "../../../platform/sam/utils/cmsis/sam4l/include/component/component_hcache.h"
 4803              	 .file 10 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\lock.h"
 4804              	 .file 11 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_types.h"
 4805              	 .file 12 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\reent.h"
 4806              	 .file 13 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\stdlib.h"
 4807              	 .file 14 "../../../platform/common/utils/interrupt/interrupt_sam_nvic.h"
 4808              	 .file 15 "../../../platform/sam/utils/compiler.h"
 4809              	 .file 16 "../../../platform/sam/drivers/flashcalw/flashcalw.h"
 4810              	 .file 17 "../../../platform/common/services/usb/usb_protocol.h"
 4811              	 .file 18 "../../../platform/common/services/usb/udc/udi.h"
 4812              	 .file 19 "../../../platform/common/services/usb/udc/udc_desc.h"
 4813              	 .file 20 "../../../platform/common/services/usb/udc/udd.h"
 4814              	 .file 21 "../../../platform/common/services/usb/class/cdc/device/udi_cdc.h"
 4815              	 .file 22 "../../../platform/common/utils/stdio/stdio_usb/stdio_usb.h"
 4816              	 .file 23 "../../../platform/common/services/clock/sam4l/sysclk.h"
DEFINED SYMBOLS
                            *ABS*:00000000 flashcalw.c
    {standard input}:16     .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:19     .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:24     .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:25     .bss.cpu_irq_prev_interrupt_state:00000000 $d
    {standard input}:27     .text:00000000 $t
    {standard input}:34     .text:00000000 flashcalw_get_flash_size
    {standard input}:115    .text:00000078 $d
    {standard input}:120    .text:00000080 $t
    {standard input}:127    .text:00000080 flashcalw_get_page_count
    {standard input}:158    .text:00000090 flashcalw_get_page_count_per_region
    {standard input}:189    .text:000000a0 flashcalw_get_page_region
    {standard input}:1127   .text:00000388 flashcalw_get_page_number
    {standard input}:244    .text:000000ca flashcalw_get_region_first_page_number
    {standard input}:287    .text:000000e6 flashcalw_get_wait_state
    {standard input}:324    .text:00000104 $d
    {standard input}:328    .text:00000108 $t
    {standard input}:335    .text:00000108 flashcalw_set_wait_state
    {standard input}:390    .text:00000134 $d
    {standard input}:394    .text:00000138 $t
    {standard input}:401    .text:00000138 flashcalw_set_flash_waitstate_and_readmode
    {standard input}:1172   .text:000003a0 flashcalw_issue_command
    {standard input}:517    .text:000001dc $d
    {standard input}:524    .text:000001ec $t
    {standard input}:531    .text:000001ec flashcalw_is_ready_int_enabled
    {standard input}:568    .text:0000020c $d
    {standard input}:572    .text:00000210 $t
    {standard input}:579    .text:00000210 flashcalw_enable_ready_int
    {standard input}:625    .text:00000234 $d
    {standard input}:629    .text:00000238 $t
    {standard input}:636    .text:00000238 flashcalw_is_lock_error_int_enabled
    {standard input}:673    .text:00000258 $d
    {standard input}:677    .text:0000025c $t
    {standard input}:684    .text:0000025c flashcalw_enable_lock_error_int
    {standard input}:730    .text:00000280 $d
    {standard input}:734    .text:00000284 $t
    {standard input}:741    .text:00000284 flashcalw_is_prog_error_int_enabled
    {standard input}:778    .text:000002a4 $d
    {standard input}:782    .text:000002a8 $t
    {standard input}:789    .text:000002a8 flashcalw_enable_prog_error_int
    {standard input}:835    .text:000002cc $d
    {standard input}:839    .text:000002d0 $t
    {standard input}:846    .text:000002d0 flashcalw_is_ready
    {standard input}:883    .text:000002f0 $d
    {standard input}:887    .text:000002f4 $t
    {standard input}:894    .text:000002f4 flashcalw_default_wait_until_ready
    {standard input}:929    .data.flashcalw_wait_until_ready:00000000 flashcalw_wait_until_ready
    {standard input}:926    .data.flashcalw_wait_until_ready:00000000 $d
    {standard input}:938    .text:0000030e flashcalw_get_error_status
    {standard input}:970    .text:00000324 $d
    {standard input}:975    .bss.flashcalw_error_status:00000000 $d
    {standard input}:978    .bss.flashcalw_error_status:00000000 flashcalw_error_status
    {standard input}:981    .text:00000328 $t
    {standard input}:988    .text:00000328 flashcalw_is_lock_error
    {standard input}:1025   .text:00000348 $d
    {standard input}:1029   .text:0000034c $t
    {standard input}:1036   .text:0000034c flashcalw_is_programming_error
    {standard input}:1073   .text:0000036c $d
    {standard input}:1077   .text:00000370 $t
    {standard input}:1084   .text:00000370 flashcalw_get_command
    {standard input}:1116   .text:00000384 $d
    {standard input}:1120   .text:00000388 $t
    {standard input}:1161   .text:0000039c $d
    {standard input}:1165   .text:000003a0 $t
    {standard input}:1254   .text:00000408 $d
    {standard input}:1260   .text:00000414 $t
    {standard input}:1267   .text:00000414 flashcalw_no_operation
    {standard input}:1298   .text:00000426 flashcalw_erase_all
    {standard input}:1329   .text:00000438 flashcalw_is_security_bit_active
    {standard input}:1366   .text:00000458 $d
    {standard input}:1370   .text:0000045c $t
    {standard input}:1377   .text:0000045c flashcalw_set_security_bit
    {standard input}:1408   .text:0000046e flashcalw_is_page_region_locked
    {standard input}:1454   .text:00000490 flashcalw_is_region_locked
    {standard input}:1505   .text:000004c0 $d
    {standard input}:1509   .text:000004c4 $t
    {standard input}:1516   .text:000004c4 flashcalw_lock_page_region
    {standard input}:1571   .text:000004ec flashcalw_lock_region
    {standard input}:1620   .text:00000514 flashcalw_lock_all_regions
    {standard input}:1684   .text:00000558 $d
    {standard input}:1688   .text:0000055c $t
    {standard input}:1695   .text:0000055c flashcalw_read_gp_fuse_bit
    {standard input}:1901   .text:0000067c flashcalw_read_all_gp_fuses
    {standard input}:1763   .text:000005b6 flashcalw_read_gp_fuse_bitfield
    {standard input}:1844   .text:0000063e flashcalw_read_gp_fuse_byte
    {standard input}:1958   .text:000006b4 $d
    {standard input}:1962   .text:000006b8 $t
    {standard input}:1969   .text:000006b8 flashcalw_erase_gp_fuse_bit
    {standard input}:2033   .text:000006f2 flashcalw_erase_gp_fuse_bitfield
    {standard input}:2157   .text:000007ac $d
    {standard input}:2161   .text:000007b0 $t
    {standard input}:2168   .text:000007b0 flashcalw_erase_gp_fuse_byte
    {standard input}:2286   .text:00000840 flashcalw_erase_all_gp_fuses
    {standard input}:2512   .text:00000940 flashcalw_write_gp_fuse_byte
    {standard input}:2275   .text:0000083c $d
    {standard input}:2279   .text:00000840 $t
    {standard input}:2354   .text:00000882 flashcalw_write_gp_fuse_bit
    {standard input}:2408   .text:000008b0 flashcalw_write_gp_fuse_bitfield
    {standard input}:2501   .text:0000093c $d
    {standard input}:2505   .text:00000940 $t
    {standard input}:2563   .text:00000968 flashcalw_write_all_gp_fuses
    {standard input}:2633   .text:000009bc $d
    {standard input}:2637   .text:000009c0 $t
    {standard input}:2644   .text:000009c0 flashcalw_set_gp_fuse_bit
    {standard input}:2700   .text:000009ec flashcalw_set_gp_fuse_bitfield
    {standard input}:2793   .text:00000a78 $d
    {standard input}:2797   .text:00000a7c $t
    {standard input}:2804   .text:00000a7c flashcalw_set_gp_fuse_byte
    {standard input}:2880   .text:00000ad4 $d
    {standard input}:2884   .text:00000ad8 $t
    {standard input}:2891   .text:00000ad8 flashcalw_set_all_gp_fuses
    {standard input}:2964   .text:00000b38 $d
    {standard input}:2968   .text:00000b3c $t
    {standard input}:2975   .text:00000b3c flashcalw_clear_page_buffer
    {standard input}:3006   .text:00000b4e flashcalw_is_page_erased
    {standard input}:3043   .text:00000b6c $d
    {standard input}:3047   .text:00000b70 $t
    {standard input}:3054   .text:00000b70 flashcalw_quick_page_read
    {standard input}:3099   .text:00000b8e flashcalw_erase_page
    {standard input}:3164   .text:00000bd4 $d
    {standard input}:3168   .text:00000bd8 $t
    {standard input}:3175   .text:00000bd8 flashcalw_erase_all_pages
    {standard input}:3254   .text:00000c38 $d
    {standard input}:3258   .text:00000c3c $t
    {standard input}:3265   .text:00000c3c flashcalw_write_page
    {standard input}:3307   .text:00000c54 flashcalw_quick_user_page_read
    {standard input}:3341   .text:00000c6c flashcalw_erase_user_page
    {standard input}:3401   .text:00000c9e flashcalw_write_user_page
    {standard input}:3432   .text:00000cb0 flashcalw_memset8
    {standard input}:3490   .text:00000ce8 flashcalw_memset16
    {standard input}:3544   .text:00000d1a flashcalw_memset32
    {standard input}:3609   .text:00000d64 flashcalw_memset64
    {standard input}:4061   .text:00001070 $d
    {standard input}:4066   .text:00001078 $t
    {standard input}:4073   .text:00001078 flashcalw_memcpy
    {standard input}:4276   .text:000011a8 $d
    {standard input}:4281   .text:000011b0 $t
    {standard input}:4288   .text:000011b0 flashcalw_picocache_enable
    {standard input}:4391   .text:0000120c flashcalw_picocache_get_status
    {standard input}:4326   .text:000011d4 $d
    {standard input}:4331   .text:000011dc $t
    {standard input}:4338   .text:000011dc flashcalw_picocache_disable
    {standard input}:4379   .text:00001204 $d
    {standard input}:4384   .text:0000120c $t
    {standard input}:4422   .text:0000121c $d
    {standard input}:4426   .text:00001220 $t
    {standard input}:4433   .text:00001220 flashcalw_picocache_invalid_all
    {standard input}:4465   .text:00001234 $d
    {standard input}:4469   .text:00001238 $t
    {standard input}:4476   .text:00001238 flashcalw_picocache_invalid_line
    {standard input}:4527   .text:00001268 $d
    {standard input}:4531   .text:0000126c $t
    {standard input}:4538   .text:0000126c flashcalw_picocache_set_monitor_mode
    {standard input}:4577   .text:00001284 $d
    {standard input}:4581   .text:00001288 $t
    {standard input}:4588   .text:00001288 flashcalw_picocache_enable_monitor
    {standard input}:4620   .text:0000129c $d
    {standard input}:4624   .text:000012a0 $t
    {standard input}:4631   .text:000012a0 flashcalw_picocache_disable_monitor
    {standard input}:4663   .text:000012b4 $d
    {standard input}:4667   .text:000012b8 $t
    {standard input}:4674   .text:000012b8 flashcalw_picocache_reset_monitor
    {standard input}:4706   .text:000012cc $d
    {standard input}:4710   .text:000012d0 $t
    {standard input}:4717   .text:000012d0 flashcalw_picocache_get_monitor_cnt
    {standard input}:4748   .text:000012e0 $d
    {standard input}:4752   .text:000012e4 $t
    {standard input}:4759   .text:000012e4 flashcalw_picocache_get_version
    {standard input}:4790   .text:000012f8 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
sysclk_enable_peripheral_clock
sysclk_disable_peripheral_clock
