   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "eic.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .align 1
  16              	 .syntax unified
  17              	 .thumb
  18              	 .thumb_func
  19              	 .fpu softvfp
  21              	NVIC_EnableIRQ:
  22              	.LFB96:
  23              	 .file 1 "../../../platform/thirdparty/CMSIS/include/core_cm4.h"
   1:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /**************************************************************************//**
   2:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @file     core_cm4.h
   3:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @version  V3.00
   5:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @date     03. February 2012
   6:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *
   7:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @note
   8:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *
  10:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @par
  11:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * within development tools that are supporting such ARM based processors.
  14:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *
  15:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * @par
  16:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *
  22:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  ******************************************************************************/
  23:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if defined ( __ICCARM__ )
  24:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  25:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
  26:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  27:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #ifdef __cplusplus
  28:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  extern "C" {
  29:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
  30:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  31:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  34:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  35:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  36:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   
  37:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  38:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'. 
  39:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  40:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  41:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****      Unions are used for effective representation of core registers.
  42:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****    
  43:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  44:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****      Function-like macros are used to allow more efficient code. 
  45:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
  46:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  47:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  48:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*******************************************************************************
  49:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *                 CMSIS definitions
  50:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  ******************************************************************************/
  51:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup Cortex_M4
  52:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
  53:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
  54:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  55:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*  CMSIS CM4 definitions */
  56:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x03)                                   /*!< [31:16] CMSIS HAL m
  57:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x00)                                   /*!< [15:0]  CMSIS HAL s
  58:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  59:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  60:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  61:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  62:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  63:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  64:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if   defined ( __CC_ARM )
  65:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  66:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  67:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  68:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  69:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __ICCARM__ )
  70:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  71:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  72:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  73:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  74:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __TMS470__ )
  75:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  76:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  77:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  78:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __GNUC__ )
  79:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  80:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  81:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  82:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  83:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __TASKING__ )
  84:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
  85:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
  86:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  87:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  88:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
  89:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
  90:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not. For this, __FPU_PRESENT has to be checked p
  91:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** */
  92:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if defined ( __CC_ARM )
  93:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  94:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
  95:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1
  96:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #else
  97:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  98:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0
  99:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #endif
 100:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #else
 101:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0
 102:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 103:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 104:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __ICCARM__ )
 105:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #if defined __ARMVFP__
 106:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 107:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1
 108:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #else
 109:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 110:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0
 111:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #endif
 112:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #else
 113:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0
 114:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 115:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 116:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __TMS470__ )
 117:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 118:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 119:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1
 120:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #else
 121:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 122:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0
 123:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #endif
 124:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #else
 125:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0
 126:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 127:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 128:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __GNUC__ )
 129:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 130:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 131:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       1
 132:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #else
 133:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 134:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****       #define __FPU_USED       0
 135:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #endif
 136:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #else
 137:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0
 138:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 139:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 140:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #elif defined ( __TASKING__ )
 141:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     /* add preprocessor checks to define __FPU_USED */
 142:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_USED         0
 143:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
 144:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 145:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 146:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 147:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 148:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #include <core_cm4_simd.h>               /* Compiler specific SIMD Intrinsics               */
 149:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 150:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 151:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 152:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 153:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 154:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 155:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 156:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 157:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* check device defines and use defaults */
 158:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 159:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #ifndef __CM4_REV
 160:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __CM4_REV               0x0000
 161:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 162:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 163:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 164:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #ifndef __FPU_PRESENT
 165:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __FPU_PRESENT             0
 166:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 167:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 168:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 169:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #ifndef __MPU_PRESENT
 170:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __MPU_PRESENT             0
 171:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 172:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 173:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 174:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 175:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 176:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 177:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 178:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 179:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 180:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 181:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 182:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #endif
 183:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
 184:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 185:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 186:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /**
 187:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 188:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  
 189:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 190:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \li to specify the access to peripheral variables.
 191:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 192:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** */
 193:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #ifdef __cplusplus
 194:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 195:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #else
 196:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 197:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
 198:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 199:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 200:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 201:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group Cortex_M4 */
 202:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 203:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 204:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 205:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*******************************************************************************
 206:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *                 Register Abstraction
 207:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   Core Register contain:
 208:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core Register
 209:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core NVIC Register
 210:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core SCB Register
 211:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core SysTick Register
 212:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core Debug Register
 213:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core MPU Register
 214:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core FPU Register
 215:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  ******************************************************************************/
 216:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 217:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 218:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** */
 219:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 220:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup    CMSIS_core_register
 221:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 222:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief  Core Register type definitions.
 223:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 224:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 225:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 226:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 227:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 228:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef union
 229:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 230:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   struct
 231:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   {
 232:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 233:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 234:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #else
 235:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 236:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 237:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 238:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
 239:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 240:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 241:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 242:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 243:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 244:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 245:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 246:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } APSR_Type;
 247:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 248:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 249:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 250:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 251:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef union
 252:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 253:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   struct
 254:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   {
 255:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 256:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 257:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 258:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 259:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } IPSR_Type;
 260:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 261:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 262:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 263:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 264:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef union
 265:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 266:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   struct
 267:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   {
 268:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 269:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 270:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 271:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #else
 272:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 273:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 274:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 275:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
 276:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 277:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 278:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 279:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 280:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 281:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 282:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 283:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 284:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 285:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } xPSR_Type;
 286:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 287:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 288:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 289:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 290:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef union
 291:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 292:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   struct
 293:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   {
 294:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 295:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 296:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 297:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 298:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 299:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 300:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } CONTROL_Type;
 301:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 302:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 303:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 304:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 305:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup    CMSIS_core_register
 306:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 307:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 308:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 309:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 310:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 311:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 312:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 313:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 314:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 315:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 316:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[24];
 317:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 318:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RSERVED1[24];
 319:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 320:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED2[24];
 321:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 322:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED3[24];
 323:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 324:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED4[56];
 325:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 326:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED5[644];
 327:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 328:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }  NVIC_Type;
 329:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 330:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 331:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 332:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL << NVIC_STIR_INTID_Pos)            /*!< STIR: I
 333:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 334:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 335:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 336:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 337:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 338:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 339:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 340:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 341:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 342:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 343:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 344:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 345:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 346:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 347:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 348:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 349:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 350:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 351:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 352:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 353:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 354:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 355:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 356:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 357:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 358:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 359:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 360:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 361:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 362:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 363:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 364:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 365:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 366:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[5];
 367:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 368:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } SCB_Type;
 369:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 370:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB CPUID Register Definitions */
 371:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 372:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 373:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 374:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 375:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 376:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 377:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 378:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 379:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 380:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 381:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 382:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 383:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 384:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 385:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 386:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 387:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 388:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 389:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 390:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 391:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 392:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 393:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 394:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 395:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 396:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 397:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 398:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 399:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 400:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 401:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 402:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 403:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 404:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 405:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 406:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 407:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 408:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 409:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 410:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 411:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 412:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 413:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 414:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 415:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 416:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 417:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 418:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 419:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 420:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 421:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 422:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 423:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 424:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 425:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 426:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 427:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 428:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 429:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 430:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 431:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 432:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 433:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 434:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 435:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 436:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 437:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 438:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 439:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 440:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 441:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 442:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 443:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB System Control Register Definitions */
 444:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 445:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 446:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 447:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 448:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 449:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 450:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 451:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 452:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 453:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 454:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 455:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 456:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 457:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 458:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 459:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 460:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 461:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 462:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 463:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 464:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 465:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 466:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 467:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 468:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 469:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 470:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 471:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 472:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 473:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 474:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 475:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 476:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 477:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 478:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 479:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 480:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 481:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 482:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 483:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 484:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 485:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 486:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 487:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 488:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 489:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 490:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 491:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 492:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 493:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 494:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 495:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 496:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 497:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 498:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 499:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 500:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 501:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 502:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 503:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 504:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 505:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 506:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 507:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 508:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 509:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 510:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 511:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 512:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 513:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 514:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 515:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 516:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 517:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 518:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 519:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 520:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 521:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 522:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 523:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 524:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 525:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 526:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 527:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 528:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 529:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 530:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 531:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 532:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 533:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 534:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 535:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 536:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 537:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 538:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 539:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 540:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 541:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 542:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 543:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 544:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 545:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 546:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 547:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 548:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 549:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 550:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 551:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 552:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 553:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 554:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 555:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 556:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 557:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 558:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 559:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 560:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 561:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 562:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 563:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 564:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[1];
 565:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 566:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 567:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } SCnSCB_Type;
 568:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 569:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 570:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 571:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)      /*!< ICTR: I
 572:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 573:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 574:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 575:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 576:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 577:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 578:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 579:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 580:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 581:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 582:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 583:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 584:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 585:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 586:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 587:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)        /*!< ACTLR: 
 588:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 589:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 590:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 591:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 592:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 593:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 594:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 595:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 596:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 597:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 598:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 599:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 600:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 601:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 602:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 603:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 604:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 605:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 606:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } SysTick_Type;
 607:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 608:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 609:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 610:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 611:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 612:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 613:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 614:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 615:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 616:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 617:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 618:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 619:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 620:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 621:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SysTick Reload Register Definitions */
 622:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 623:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 624:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 625:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SysTick Current Register Definitions */
 626:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 627:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 628:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 629:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 630:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 631:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 632:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 633:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 634:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 635:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 636:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 637:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 638:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 639:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 640:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 641:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 642:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 643:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 644:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 645:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 646:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 647:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 648:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 649:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 650:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 651:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 652:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __O  union
 653:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   {
 654:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 655:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 656:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 657:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 658:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[864];
 659:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 660:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED1[15];
 661:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 662:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED2[15];
 663:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 664:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } ITM_Type;
 665:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 666:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 667:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                          /*!< ITM TPR
 668:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)             /*!< ITM TPR
 669:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 670:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 671:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                          /*!< ITM TCR
 672:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                   /*!< ITM TCR
 673:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 674:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                          /*!< ITM TCR
 675:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)          /*!< ITM TCR
 676:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 677:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                          /*!< ITM TCR
 678:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                /*!< ITM TCR
 679:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 680:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                          /*!< ITM TCR
 681:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)             /*!< ITM TCR
 682:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 683:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                          /*!< ITM TCR
 684:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                 /*!< ITM TCR
 685:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 686:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TXENA_Pos                   3                                          /*!< ITM TCR
 687:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TXENA_Msk                  (1UL << ITM_TCR_TXENA_Pos)                  /*!< ITM TCR
 688:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 689:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                          /*!< ITM TCR
 690:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                /*!< ITM TCR
 691:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 692:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                          /*!< ITM TCR
 693:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                  /*!< ITM TCR
 694:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 695:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                          /*!< ITM TCR
 696:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                 /*!< ITM TCR
 697:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 698:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 699:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 700:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 701:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 702:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 703:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 704:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 705:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 706:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 707:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 708:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 709:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 710:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 711:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 712:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 713:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 714:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 715:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 716:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 717:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 718:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 719:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 720:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 721:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 722:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[1];
 723:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 724:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 725:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 726:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED1[1];
 727:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 728:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 729:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 730:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED2[1];
 731:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 732:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 733:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 734:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } DWT_Type;
 735:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 736:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Control Register Definitions */
 737:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 738:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 739:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 740:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 741:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 742:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 743:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 744:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 745:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 746:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 747:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 748:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 749:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 750:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 751:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 752:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 753:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 754:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 755:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 756:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 757:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 758:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 759:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 760:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 761:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 762:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 763:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 764:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 765:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 766:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 767:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 768:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 769:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 770:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 771:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 772:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 773:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 774:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 775:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 776:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 777:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 778:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 779:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 780:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 781:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 782:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 783:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 784:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 785:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 786:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 787:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 788:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 789:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL << DWT_CTRL_CYCCNTENA_Pos)           /*!< DWT CTR
 790:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 791:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 792:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 793:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL << DWT_CPICNT_CPICNT_Pos)           /*!< DWT CPI
 794:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 795:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 796:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 797:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL << DWT_EXCCNT_EXCCNT_Pos)           /*!< DWT EXC
 798:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 799:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 800:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 801:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL << DWT_SLEEPCNT_SLEEPCNT_Pos)       /*!< DWT SLE
 802:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 803:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 804:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 805:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL << DWT_LSUCNT_LSUCNT_Pos)           /*!< DWT LSU
 806:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 807:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 808:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 809:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL << DWT_FOLDCNT_FOLDCNT_Pos)         /*!< DWT FOL
 810:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 811:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 812:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 813:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL << DWT_MASK_MASK_Pos)               /*!< DWT MAS
 814:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 815:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
 816:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 817:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 818:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 819:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 820:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 821:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 822:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 823:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 824:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 825:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 826:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 827:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 828:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 829:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 830:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 831:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 832:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 833:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 834:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 835:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 836:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 837:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 838:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 839:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 840:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 841:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL << DWT_FUNCTION_FUNCTION_Pos)        /*!< DWT FUN
 842:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 843:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 844:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 845:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 846:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 847:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 848:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 849:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
 850:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 851:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 852:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 853:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
 854:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
 855:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 856:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 857:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 858:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[2];
 859:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 860:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED1[55];
 861:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 862:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED2[131];
 863:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 864:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 865:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 866:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED3[759];
 867:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 868:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
 869:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
 870:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED4[1];
 871:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
 872:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
 873:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
 874:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED5[39];
 875:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
 876:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
 877:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED7[8];
 878:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
 879:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
 880:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } TPI_Type;
 881:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 882:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
 883:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
 884:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL << TPI_ACPR_PRESCALER_Pos)        /*!< TPI ACP
 885:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 886:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
 887:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
 888:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL << TPI_SPPR_TXMODE_Pos)              /*!< TPI SPP
 889:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 890:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
 891:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
 892:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
 893:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 894:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
 895:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
 896:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 897:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
 898:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
 899:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 900:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
 901:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL << TPI_FFSR_FlInProg_Pos)            /*!< TPI FFS
 902:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 903:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
 904:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
 905:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
 906:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 907:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
 908:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
 909:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 910:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
 911:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
 912:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL << TPI_TRIGGER_TRIGGER_Pos)          /*!< TPI TRI
 913:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 914:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
 915:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 916:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
 917:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 918:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
 919:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
 920:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 921:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
 922:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
 923:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 924:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
 925:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
 926:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 927:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
 928:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
 929:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 930:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
 931:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
 932:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 933:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
 934:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL << TPI_FIFO0_ETM0_Pos)              /*!< TPI FIF
 935:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 936:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
 937:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
 938:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL << TPI_ITATBCTR2_ATREADY_Pos)        /*!< TPI ITA
 939:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 940:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
 941:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 942:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
 943:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 944:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
 945:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
 946:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 947:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
 948:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
 949:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 950:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
 951:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
 952:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 953:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
 954:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
 955:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 956:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
 957:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
 958:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 959:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
 960:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL << TPI_FIFO1_ITM0_Pos)              /*!< TPI FIF
 961:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 962:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
 963:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
 964:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL << TPI_ITATBCTR0_ATREADY_Pos)        /*!< TPI ITA
 965:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 966:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
 967:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
 968:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL << TPI_ITCTRL_Mode_Pos)              /*!< TPI ITC
 969:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 970:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI DEVID Register Definitions */
 971:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
 972:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
 973:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 974:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
 975:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
 976:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 977:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
 978:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
 979:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 980:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
 981:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
 982:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 983:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
 984:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
 985:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 986:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
 987:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL << TPI_DEVID_NrTraceInput_Pos)      /*!< TPI DEV
 988:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 989:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
 990:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
 991:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL << TPI_DEVTYPE_SubType_Pos)          /*!< TPI DEV
 992:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 993:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
 994:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
 995:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 996:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
 997:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 998:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
 999:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__MPU_PRESENT == 1)
1000:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1001:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1002:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1003:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
1004:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1005:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1006:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1007:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1008:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
1009:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1010:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1011:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1012:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1013:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1014:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1015:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1016:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1017:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1018:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1019:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1020:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1021:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } MPU_Type;
1022:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1023:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* MPU Type Register */
1024:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1025:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1026:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1027:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1028:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1029:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1030:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1031:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
1032:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1033:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* MPU Control Register */
1034:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1035:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1036:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1037:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1038:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1039:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1040:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1041:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
1042:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1043:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* MPU Region Number Register */
1044:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1045:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
1046:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1047:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* MPU Region Base Address Register */
1048:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1049:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1050:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1051:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1052:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1053:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1054:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1055:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
1056:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1057:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* MPU Region Attribute and Size Register */
1058:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1059:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1060:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1061:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1062:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1063:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1064:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1065:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1066:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1067:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1068:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL << MPU_RASR_ENABLE_Pos)                   /*!< MPU 
1069:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1070:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1071:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
1072:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1073:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1074:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1075:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1076:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1077:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1078:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
1079:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1080:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1081:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1082:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1083:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
1084:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1085:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****        uint32_t RESERVED0[1];
1086:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1087:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1088:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1089:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1090:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1091:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } FPU_Type;
1092:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1093:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Floating-Point Context Control Register */
1094:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1095:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1096:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1097:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1098:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1099:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1100:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1101:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1102:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1103:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1104:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1105:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1106:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1107:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1108:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1109:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1110:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1111:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1112:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1113:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1114:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1115:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1116:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1117:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1118:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1119:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL << FPU_FPCCR_LSPACT_Pos)                  /*!< FPCC
1120:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1121:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Floating-Point Context Address Register */
1122:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1123:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1124:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1125:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Floating-Point Default Status Control Register */
1126:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1127:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1128:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1129:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1130:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1131:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1132:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1133:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1134:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1135:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1136:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1137:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1138:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Media and FP Feature Register 0 */
1139:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1140:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1141:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1142:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1143:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1144:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1145:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1146:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1147:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1148:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1149:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1150:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1151:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1152:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1153:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1154:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1155:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1156:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1157:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1158:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1159:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1160:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1161:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL << FPU_MVFR0_A_SIMD_registers_Pos)      /*!< MVFR
1162:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1163:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Media and FP Feature Register 1 */
1164:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1165:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1166:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1167:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1168:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1169:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1170:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1171:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1172:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1173:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1174:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL << FPU_MVFR1_FtZ_mode_Pos)              /*!< MVFR
1175:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1176:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1177:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
1178:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1179:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1180:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1181:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1182:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1183:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
1184:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1185:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1186:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1187:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1188:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** typedef struct
1189:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1190:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1191:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1192:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1193:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1194:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** } CoreDebug_Type;
1195:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1196:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Debug Halting Control and Status Register */
1197:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1198:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1199:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1200:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1201:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1202:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1203:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1204:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1205:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1206:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1207:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1208:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1209:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1210:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1211:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1212:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1213:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1214:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1215:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1216:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1217:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1218:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1219:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1220:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1221:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1222:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1223:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1224:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1225:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1226:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1227:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1228:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1229:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1230:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1231:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
1232:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1233:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Debug Core Register Selector Register */
1234:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1235:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1236:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1237:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1238:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
1239:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1240:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1241:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1242:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1243:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1244:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1245:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1246:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1247:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1248:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1249:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1250:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1251:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1252:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1253:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1254:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1255:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1256:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1257:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1258:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1259:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1260:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1261:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1262:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1263:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1264:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1265:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1266:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1267:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1268:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1269:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1270:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1271:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1272:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1273:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1274:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1275:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1276:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1277:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1278:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
1279:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1280:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1281:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1282:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1283:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup    CMSIS_core_register
1284:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1285:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1286:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   @{
1287:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1288:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1289:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1290:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1291:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1292:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1293:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1294:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1295:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1296:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1297:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1298:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1299:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1300:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1301:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1302:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1303:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1304:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1305:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1306:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1307:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1308:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__MPU_PRESENT == 1)
1309:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1310:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1311:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
1312:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1313:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1314:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1315:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1316:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** #endif
1317:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1318:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*@} */
1319:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1320:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1321:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1322:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*******************************************************************************
1323:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  *                Hardware Abstraction Layer
1324:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   Core Function Interface contains:
1325:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core NVIC Functions
1326:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core SysTick Functions
1327:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core Debug Functions
1328:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   - Core Register Access Functions
1329:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  ******************************************************************************/
1330:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1331:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** */
1332:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1333:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1334:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1335:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1336:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1337:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1338:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1339:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     @{
1340:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1341:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1342:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Set Priority Grouping
1343:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1344:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1345:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1346:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   Only values from 0..7 are used.
1347:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   In case of a conflict between priority grouping and available
1348:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1349:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1350:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1351:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1352:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1353:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1354:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t reg_value;
1355:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 a
1356:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1357:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1358:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1359:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   reg_value  =  (reg_value                                 |
1360:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****                 ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1361:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1362:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1363:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
1364:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1365:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1366:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Get Priority Grouping
1367:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1368:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1369:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1370:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1371:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1372:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1373:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1374:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1375:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
1376:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1377:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1378:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Enable External Interrupt
1379:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1380:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1381:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1382:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1383:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1384:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1385:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
  24              	 .loc 1 1385 0
  25              	 .cfi_startproc
  26              	 
  27              	 
  28              	 
  29 0000 80B4     	 push {r7}
  30              	.LCFI0:
  31              	 .cfi_def_cfa_offset 4
  32              	 .cfi_offset 7,-4
  33 0002 83B0     	 sub sp,sp,#12
  34              	.LCFI1:
  35              	 .cfi_def_cfa_offset 16
  36 0004 00AF     	 add r7,sp,#0
  37              	.LCFI2:
  38              	 .cfi_def_cfa_register 7
  39 0006 0346     	 mov r3,r0
  40 0008 FB71     	 strb r3,[r7,#7]
1386:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
1387:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32
  41              	 .loc 1 1387 0
  42 000a 0849     	 ldr r1,.L2
  43 000c 97F90730 	 ldrsb r3,[r7,#7]
  44 0010 5B09     	 lsrs r3,r3,#5
  45 0012 FA79     	 ldrb r2,[r7,#7]
  46 0014 02F01F02 	 and r2,r2,#31
  47 0018 0120     	 movs r0,#1
  48 001a 00FA02F2 	 lsl r2,r0,r2
  49 001e 41F82320 	 str r2,[r1,r3,lsl#2]
1388:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
  50              	 .loc 1 1388 0
  51 0022 00BF     	 nop
  52 0024 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0026 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 0028 80BC     	 pop {r7}
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 002a 7047     	 bx lr
  64              	.L3:
  65              	 .align 2
  66              	.L2:
  67 002c 00E100E0 	 .word -536813312
  68              	 .cfi_endproc
  69              	.LFE96:
  71              	 .align 1
  72              	 .syntax unified
  73              	 .thumb
  74              	 .thumb_func
  75              	 .fpu softvfp
  77              	NVIC_ClearPendingIRQ:
  78              	.LFB100:
1389:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1390:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1391:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Disable External Interrupt
1392:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1393:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1394:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1395:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1396:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1397:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1398:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1399:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1400:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
1401:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1402:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1403:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Get Pending Interrupt
1404:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1405:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1406:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     for the specified interrupt.
1407:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1408:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1409:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     
1410:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \return             0  Interrupt status is not pending.
1411:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \return             1  Interrupt status is pending.
1412:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1413:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1414:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1415:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1416:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
1417:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1418:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1419:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Set Pending Interrupt
1420:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1421:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     The function sets the pending bit of an external interrupt.
1422:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1423:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1424:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1425:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1426:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1427:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1428:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
1429:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1430:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1431:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Clear Pending Interrupt
1432:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1433:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     The function clears the pending bit of an external interrupt.
1434:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1435:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1436:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1437:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1438:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
  79              	 .loc 1 1438 0
  80              	 .cfi_startproc
  81              	 
  82              	 
  83              	 
  84 0030 80B4     	 push {r7}
  85              	.LCFI6:
  86              	 .cfi_def_cfa_offset 4
  87              	 .cfi_offset 7,-4
  88 0032 83B0     	 sub sp,sp,#12
  89              	.LCFI7:
  90              	 .cfi_def_cfa_offset 16
  91 0034 00AF     	 add r7,sp,#0
  92              	.LCFI8:
  93              	 .cfi_def_cfa_register 7
  94 0036 0346     	 mov r3,r0
  95 0038 FB71     	 strb r3,[r7,#7]
1439:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
  96              	 .loc 1 1439 0
  97 003a 0949     	 ldr r1,.L5
  98 003c 97F90730 	 ldrsb r3,[r7,#7]
  99 0040 5B09     	 lsrs r3,r3,#5
 100 0042 FA79     	 ldrb r2,[r7,#7]
 101 0044 02F01F02 	 and r2,r2,#31
 102 0048 0120     	 movs r0,#1
 103 004a 00FA02F2 	 lsl r2,r0,r2
 104 004e 6033     	 adds r3,r3,#96
 105 0050 41F82320 	 str r2,[r1,r3,lsl#2]
1440:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
 106              	 .loc 1 1440 0
 107 0054 00BF     	 nop
 108 0056 0C37     	 adds r7,r7,#12
 109              	.LCFI9:
 110              	 .cfi_def_cfa_offset 4
 111 0058 BD46     	 mov sp,r7
 112              	.LCFI10:
 113              	 .cfi_def_cfa_register 13
 114              	 
 115 005a 80BC     	 pop {r7}
 116              	.LCFI11:
 117              	 .cfi_restore 7
 118              	 .cfi_def_cfa_offset 0
 119 005c 7047     	 bx lr
 120              	.L6:
 121 005e 00BF     	 .align 2
 122              	.L5:
 123 0060 00E100E0 	 .word -536813312
 124              	 .cfi_endproc
 125              	.LFE100:
 127              	 .align 1
 128              	 .syntax unified
 129              	 .thumb
 130              	 .thumb_func
 131              	 .fpu softvfp
 133              	NVIC_SetPriority:
 134              	.LFB102:
1441:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1442:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1443:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Get Active Interrupt
1444:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1445:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     The function reads the active register in NVIC and returns the active bit.
1446:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     
1447:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1448:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     
1449:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \return             0  Interrupt status is not active.
1450:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \return             1  Interrupt status is active.
1451:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1452:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1453:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
1454:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1455:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
1456:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1457:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1458:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** /** \brief  Set Interrupt Priority
1459:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1460:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     The function sets the priority of an interrupt. 
1461:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1462:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \note The priority cannot be set for every core interrupt.
1463:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** 
1464:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]      IRQn  Interrupt number. 
1465:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     \param [in]  priority  Priority to set.
1466:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****  */
1467:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1468:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** {
 135              	 .loc 1 1468 0
 136              	 .cfi_startproc
 137              	 
 138              	 
 139              	 
 140 0064 80B4     	 push {r7}
 141              	.LCFI12:
 142              	 .cfi_def_cfa_offset 4
 143              	 .cfi_offset 7,-4
 144 0066 83B0     	 sub sp,sp,#12
 145              	.LCFI13:
 146              	 .cfi_def_cfa_offset 16
 147 0068 00AF     	 add r7,sp,#0
 148              	.LCFI14:
 149              	 .cfi_def_cfa_register 7
 150 006a 0346     	 mov r3,r0
 151 006c 3960     	 str r1,[r7]
 152 006e FB71     	 strb r3,[r7,#7]
1469:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   if(IRQn < 0) {
 153              	 .loc 1 1469 0
 154 0070 97F90730 	 ldrsb r3,[r7,#7]
 155 0074 002B     	 cmp r3,#0
 156 0076 0BDA     	 bge .L8
1470:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
 157              	 .loc 1 1470 0
 158 0078 0D49     	 ldr r1,.L11
 159 007a FB79     	 ldrb r3,[r7,#7]
 160 007c 03F00F03 	 and r3,r3,#15
 161 0080 043B     	 subs r3,r3,#4
 162 0082 3A68     	 ldr r2,[r7]
 163 0084 D2B2     	 uxtb r2,r2
 164 0086 1201     	 lsls r2,r2,#4
 165 0088 D2B2     	 uxtb r2,r2
 166 008a 0B44     	 add r3,r3,r1
 167 008c 1A76     	 strb r2,[r3,#24]
1471:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****   else {
1472:../../../platform/thirdparty/CMSIS/include/core_cm4.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
1473:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
 168              	 .loc 1 1473 0
 169 008e 09E0     	 b .L10
 170              	.L8:
1472:../../../platform/thirdparty/CMSIS/include/core_cm4.h **** }
 171              	 .loc 1 1472 0
 172 0090 0849     	 ldr r1,.L11+4
 173 0092 97F90730 	 ldrsb r3,[r7,#7]
 174 0096 3A68     	 ldr r2,[r7]
 175 0098 D2B2     	 uxtb r2,r2
 176 009a 1201     	 lsls r2,r2,#4
 177 009c D2B2     	 uxtb r2,r2
 178 009e 0B44     	 add r3,r3,r1
 179 00a0 83F80023 	 strb r2,[r3,#768]
 180              	.L10:
 181              	 .loc 1 1473 0
 182 00a4 00BF     	 nop
 183 00a6 0C37     	 adds r7,r7,#12
 184              	.LCFI15:
 185              	 .cfi_def_cfa_offset 4
 186 00a8 BD46     	 mov sp,r7
 187              	.LCFI16:
 188              	 .cfi_def_cfa_register 13
 189              	 
 190 00aa 80BC     	 pop {r7}
 191              	.LCFI17:
 192              	 .cfi_restore 7
 193              	 .cfi_def_cfa_offset 0
 194 00ac 7047     	 bx lr
 195              	.L12:
 196 00ae 00BF     	 .align 2
 197              	.L11:
 198 00b0 00ED00E0 	 .word -536810240
 199 00b4 00E100E0 	 .word -536813312
 200              	 .cfi_endproc
 201              	.LFE102:
 203              	 .section .bss.cpu_irq_critical_section_counter,"aw",%nobits
 204              	 .align 2
 207              	cpu_irq_critical_section_counter:
 208 0000 00000000 	 .space 4
 209              	 .section .bss.cpu_irq_prev_interrupt_state,"aw",%nobits
 212              	cpu_irq_prev_interrupt_state:
 213 0000 00       	 .space 1
 214              	 .text
 215              	 .align 1
 216              	 .syntax unified
 217              	 .thumb
 218              	 .thumb_func
 219              	 .fpu softvfp
 221              	cpu_irq_save:
 222              	.LFB112:
 223              	 .file 2 "../../../platform/common/utils/interrupt/interrupt_sam_nvic.h"
   1:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
   2:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \file
   3:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
   4:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \brief Global interrupt management for SAM D20, SAM3 and SAM4 (NVIC based)
   5:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
   6:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * Copyright (c) 2012-2013 Atmel Corporation. All rights reserved.
   7:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
   8:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \asf_license_start
   9:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  10:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \page License
  11:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  12:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  15:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  18:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  22:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  25:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  28:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  40:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \asf_license_stop
  41:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  42:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  43:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  44:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #ifndef UTILS_INTERRUPT_INTERRUPT_H
  45:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #define UTILS_INTERRUPT_INTERRUPT_H
  46:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  47:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #include <compiler.h>
  48:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #include <parts.h>
  49:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  50:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  51:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \weakgroup interrupt_group
  52:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  53:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * @{
  54:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  55:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  56:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  57:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \name Interrupt Service Routine definition
  58:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  59:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * @{
  60:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  61:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  62:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  63:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \brief Define service routine
  64:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  65:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \note For NVIC devices the interrupt service routines are predefined to
  66:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *       add to vector table in binary generation, so there is no service
  67:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *       register at run time. The routine collections are in exceptions.h.
  68:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  69:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * Usage:
  70:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \code
  71:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * ISR(foo_irq_handler)
  72:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * {
  73:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *      // Function definition
  74:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *      ...
  75:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * }
  76:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \endcode
  77:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  78:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \param func Name for the function.
  79:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  80:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define ISR(func)   \
  81:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	void func (void)
  82:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  83:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  84:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \brief Initialize interrupt vectors
  85:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  86:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * For NVIC the interrupt vectors are put in vector table. So nothing
  87:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * to do to initialize them, except defined the vector function with
  88:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * right name.
  89:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  90:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * This must be called prior to \ref irq_register_handler.
  91:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
  92:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define irq_initialize_vectors()   \
  93:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	do {                             \
  94:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	} while(0)
  95:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
  96:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** /**
  97:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \brief Register handler for interrupt
  98:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
  99:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * For NVIC the interrupt vectors are put in vector table. So nothing
 100:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * to do to register them, except defined the vector function with
 101:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * right name.
 102:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
 103:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * Usage:
 104:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \code
 105:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * irq_initialize_vectors();
 106:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * irq_register_handler(foo_irq_handler);
 107:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \endcode
 108:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *
 109:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \note The function \a func must be defined with the \ref ISR macro.
 110:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  * \note The functions prototypes can be found in the device exception header
 111:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  *       files (exceptions.h).
 112:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h ****  */
 113:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define irq_register_handler(int_num, int_prio)                      \
 114:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	NVIC_ClearPendingIRQ(    (IRQn_Type)int_num);                      \
 115:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	NVIC_SetPriority(    (IRQn_Type)int_num, int_prio);                \
 116:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	NVIC_EnableIRQ(      (IRQn_Type)int_num);                          \
 117:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 118:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** //@}
 119:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 120:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define cpu_irq_enable()                     \
 121:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	do {                                       \
 122:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		g_interrupt_enabled = true;            \
 123:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		__DMB();                               \
 124:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		__enable_irq();                        \
 125:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	} while (0)
 126:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #  define cpu_irq_disable()                    \
 127:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	do {                                       \
 128:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		__disable_irq();                       \
 129:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		__DMB();                               \
 130:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		g_interrupt_enabled = false;           \
 131:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	} while (0)
 132:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 133:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** typedef uint32_t irqflags_t;
 134:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 135:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #if !defined(__DOXYGEN__)
 136:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** extern volatile bool g_interrupt_enabled;
 137:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #endif
 138:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 139:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** #define cpu_irq_is_enabled()    (__get_PRIMASK() == 0)
 140:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 141:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static volatile uint32_t cpu_irq_critical_section_counter;
 142:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static volatile bool     cpu_irq_prev_interrupt_state;
 143:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 144:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static inline irqflags_t cpu_irq_save(void)
 145:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** {
 224              	 .loc 2 145 0
 225              	 .cfi_startproc
 226              	 
 227              	 
 228              	 
 229 00b8 80B4     	 push {r7}
 230              	.LCFI18:
 231              	 .cfi_def_cfa_offset 4
 232              	 .cfi_offset 7,-4
 233 00ba 83B0     	 sub sp,sp,#12
 234              	.LCFI19:
 235              	 .cfi_def_cfa_offset 16
 236 00bc 00AF     	 add r7,sp,#0
 237              	.LCFI20:
 238              	 .cfi_def_cfa_register 7
 239              	.LBB12:
 240              	.LBB13:
 241              	 .file 3 "../../../platform/thirdparty/CMSIS/include/core_cmFunc.h"
   1:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /**************************************************************************//**
   2:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @file     core_cmFunc.h
   3:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @brief    CMSIS Cortex-M Core Function Access Header File
   4:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @version  V3.00
   5:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @date     19. January 2012
   6:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
   7:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @note
   8:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  10:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @par
  11:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * within development tools that are supporting such ARM based processors. 
  14:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  15:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * @par
  16:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  *
  22:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  ******************************************************************************/
  23:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  24:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #ifndef __CORE_CMFUNC_H
  25:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __CORE_CMFUNC_H
  26:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  27:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* ###########################  Core Function Access  ########################### */
  28:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \ingroup  CMSIS_Core_FunctionInterface   
  29:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  30:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   @{
  31:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  32:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  33:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  34:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* ARM armcc specific functions */
  35:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  36:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__ARMCC_VERSION < 400677)
  37:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  38:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
  39:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  40:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* intrinsic void __enable_irq();     */
  41:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* intrinsic void __disable_irq();    */
  42:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  43:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Control Register
  44:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  45:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the Control Register.
  46:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  47:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Control Register value
  48:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  49:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_CONTROL(void)
  50:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  51:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  52:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regControl);
  53:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  54:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  55:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  56:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Control Register
  57:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  58:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function writes the given value to the Control Register.
  59:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  60:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    control  Control Register value to set
  61:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  62:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_CONTROL(uint32_t control)
  63:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  64:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  65:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regControl = control;
  66:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  67:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  68:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  69:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get IPSR Register
  70:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  71:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the IPSR Register.
  72:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  73:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               IPSR Register value
  74:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  75:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_IPSR(void)
  76:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  77:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regIPSR          __ASM("ipsr");
  78:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regIPSR);
  79:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  80:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  81:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  82:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get APSR Register
  83:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  84:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the APSR Register.
  85:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  86:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               APSR Register value
  87:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
  88:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_APSR(void)
  89:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
  90:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regAPSR          __ASM("apsr");
  91:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regAPSR);
  92:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
  93:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  94:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  95:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get xPSR Register
  96:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  97:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the xPSR Register.
  98:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
  99:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               xPSR Register value
 100:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 101:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_xPSR(void)
 102:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 103:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regXPSR          __ASM("xpsr");
 104:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regXPSR);
 105:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 106:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 107:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 108:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 109:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 110:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 111:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 112:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               PSP Register value
 113:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 114:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PSP(void)
 115:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 116:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 117:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regProcessStackPointer);
 118:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 119:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 120:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 121:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 122:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 123:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 124:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 125:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 126:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 127:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 128:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 129:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 130:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regProcessStackPointer = topOfProcStack;
 131:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 132:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 133:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 134:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 135:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 136:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 137:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 138:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               MSP Register value
 139:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 140:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_MSP(void)
 141:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 142:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 143:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regMainStackPointer);
 144:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 145:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 146:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 147:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 148:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 149:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 150:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 151:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 152:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 153:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 154:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 155:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 156:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regMainStackPointer = topOfMainStack;
 157:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 158:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 159:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 160:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Priority Mask
 161:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 162:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current state of the priority mask bit from the Priority Mask Registe
 163:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 164:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Priority Mask value
 165:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 166:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PRIMASK(void)
 167:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 168:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 169:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regPriMask);
 170:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 171:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 172:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 173:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Priority Mask
 174:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 175:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Priority Mask Register.
 176:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 177:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    priMask  Priority Mask
 178:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 179:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 180:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 181:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 182:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regPriMask = (priMask);
 183:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 184:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 185:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 186:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if       (__CORTEX_M >= 0x03)
 187:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 188:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Enable FIQ
 189:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 190:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function enables FIQ interrupts by clearing the F-bit in the CPSR.
 191:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     Can only be executed in Privileged modes.
 192:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 193:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __enable_fault_irq                __enable_fiq
 194:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 195:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 196:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Disable FIQ
 197:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 198:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function disables FIQ interrupts by setting the F-bit in the CPSR.
 199:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     Can only be executed in Privileged modes.
 200:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 201:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #define __disable_fault_irq               __disable_fiq
 202:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 203:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 204:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Base Priority
 205:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 206:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Base Priority register.
 207:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 208:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Base Priority register value
 209:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 210:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t  __get_BASEPRI(void)
 211:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 212:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 213:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regBasePri);
 214:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 215:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 216:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 217:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Base Priority
 218:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 219:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Base Priority register.
 220:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 221:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    basePri  Base Priority value to set
 222:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 223:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 224:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 225:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 226:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regBasePri = (basePri & 0xff);
 227:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 228:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 229:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 230:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Fault Mask
 231:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 232:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Fault Mask register.
 233:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 234:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Fault Mask register value
 235:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 236:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 237:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 238:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 239:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regFaultMask);
 240:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 241:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 242:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 243:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Fault Mask
 244:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 245:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Fault Mask register.
 246:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 247:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    faultMask  Fault Mask value to set
 248:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 249:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 250:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 251:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 252:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regFaultMask = (faultMask & (uint32_t)1);
 253:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 254:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 255:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif /* (__CORTEX_M >= 0x03) */
 256:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 257:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 258:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if       (__CORTEX_M == 0x04)
 259:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 260:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get FPSCR
 261:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 262:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Floating Point Status/Control register.
 263:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 264:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Floating Point Status/Control register value
 265:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 266:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FPSCR(void)
 267:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 268:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 269:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 270:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(__regfpscr);
 271:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #else
 272:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****    return(0);
 273:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
 274:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 275:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 276:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 277:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set FPSCR
 278:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 279:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Floating Point Status/Control register.
 280:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 281:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    fpscr  Floating Point Status/Control value to set
 282:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 283:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 284:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 285:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 286:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 287:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __regfpscr = (fpscr);
 288:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif
 289:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 290:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 291:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #endif /* (__CORTEX_M == 0x04) */
 292:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 293:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 294:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 295:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* IAR iccarm specific functions */
 296:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 297:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #include <cmsis_iar.h>
 298:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 299:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 300:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 301:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* TI CCS specific functions */
 302:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 303:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #include <cmsis_ccs.h>
 304:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 305:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 306:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 307:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /* GNU gcc specific functions */
 308:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 309:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Enable IRQ Interrupts
 310:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 311:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   This function enables IRQ interrupts by clearing the I-bit in the CPSR.
 312:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   Can only be executed in Privileged modes.
 313:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 314:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
 315:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 316:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("cpsie i");
 317:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 318:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 319:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 320:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Disable IRQ Interrupts
 321:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 322:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   This function disables IRQ interrupts by setting the I-bit in the CPSR.
 323:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   Can only be executed in Privileged modes.
 324:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 325:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
 326:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 327:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("cpsid i");
 328:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 329:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 330:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 331:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Control Register
 332:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 333:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the Control Register.
 334:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 335:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Control Register value
 336:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 337:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
 338:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 339:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 340:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 341:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 342:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 343:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 344:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 345:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 346:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Control Register
 347:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 348:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function writes the given value to the Control Register.
 349:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 350:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    control  Control Register value to set
 351:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 352:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 353:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 354:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) );
 355:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 356:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 357:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 358:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get IPSR Register
 359:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 360:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the IPSR Register.
 361:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 362:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               IPSR Register value
 363:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 364:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 365:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 366:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 367:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 368:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 369:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 370:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 371:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 372:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 373:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get APSR Register
 374:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 375:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the APSR Register.
 376:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 377:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               APSR Register value
 378:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 379:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 380:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 381:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 382:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 383:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 384:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 385:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 386:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 387:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 388:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get xPSR Register
 389:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 390:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the content of the xPSR Register.
 391:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 392:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               xPSR Register value
 393:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 394:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 395:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 396:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 397:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 398:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 399:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 400:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 401:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 402:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 403:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 404:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 405:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 406:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 407:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               PSP Register value
 408:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 409:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 410:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 411:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t result;
 412:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 413:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 414:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 415:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 416:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 417:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 418:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 419:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 420:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 421:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 422:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 423:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 424:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 425:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 426:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) );
 427:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 428:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 429:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 430:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 431:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 432:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 433:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 434:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               MSP Register value
 435:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 436:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 437:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 438:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   register uint32_t result;
 439:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 440:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 441:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 442:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 443:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  
 444:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 445:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 446:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 447:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 448:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 449:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 450:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 451:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 452:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 453:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) );
 454:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 455:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 456:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 457:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** /** \brief  Get Priority Mask
 458:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 459:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     This function returns the current state of the priority mask bit from the Priority Mask Registe
 460:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 461:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****     \return               Priority Mask value
 462:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****  */
 463:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 464:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** {
 465:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   uint32_t result;
 466:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** 
 467:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 242              	 .loc 3 467 0
 243              	 .syntax unified
 244              	
 245 00be EFF31083 	 MRS r3,primask
 246              	
 247              	 .thumb
 248              	 .syntax unified
 249 00c2 3B60     	 str r3,[r7]
 468:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h ****   return(result);
 250              	 .loc 3 468 0
 251 00c4 3B68     	 ldr r3,[r7]
 252              	.LBE13:
 253              	.LBE12:
 146:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	irqflags_t flags = cpu_irq_is_enabled();
 254              	 .loc 2 146 0
 255 00c6 002B     	 cmp r3,#0
 256 00c8 0CBF     	 ite eq
 257 00ca 0123     	 moveq r3,#1
 258 00cc 0023     	 movne r3,#0
 259 00ce DBB2     	 uxtb r3,r3
 260 00d0 7B60     	 str r3,[r7,#4]
 261              	.LBB14:
 262              	.LBB15:
 327:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 263              	 .loc 3 327 0
 264              	 .syntax unified
 265              	
 266 00d2 72B6     	 cpsid i
 267              	
 268              	 .thumb
 269              	 .syntax unified
 270              	.LBE15:
 271              	.LBE14:
 272              	.LBB16:
 273              	.LBB17:
 274              	 .file 4 "../../../platform/thirdparty/CMSIS/include/core_cmInstr.h"
   1:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /**************************************************************************//**
   2:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @version  V3.00
   5:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @date     07. February 2012
   6:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
   7:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @note
   8:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * Copyright (C) 2009-2012 ARM Limited. All rights reserved.
   9:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  10:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @par
  11:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * within development tools that are supporting such ARM based processors.
  14:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  15:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * @par
  16:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  *
  22:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  ******************************************************************************/
  23:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  24:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  27:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  28:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   Access to dedicated instructions
  31:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   @{
  32:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** */
  33:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  34:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* ARM armcc specific functions */
  36:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  37:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #endif
  40:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  41:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  42:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  No Operation
  43:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  44:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  46:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __NOP                             __nop
  47:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  48:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  49:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  51:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     until one of a number of events occurs.
  53:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  54:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __WFI                             __wfi
  55:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  56:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  57:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Event
  58:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  59:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  62:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __WFE                             __wfe
  63:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  64:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  65:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Send Event
  66:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  67:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  69:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __SEV                             __sev
  70:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  71:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  72:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  74:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  75:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  76:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     memory, after the instruction has been completed.
  77:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  78:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  80:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  81:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  83:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
  84:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  86:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  88:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  89:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  91:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
  92:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
  94:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  96:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  97:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
  99:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 101:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 103:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 104:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __REV                             __rev
 105:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 106:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 107:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 109:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 111:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 113:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 114:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 115:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 116:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   rev16 r0, r0
 117:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   bx lr
 118:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 119:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 120:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 121:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 123:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 125:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 127:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 128:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 129:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 130:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   revsh r0, r0
 131:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   bx lr
 132:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 133:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 134:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 135:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 136:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 137:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 138:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 139:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 140:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 141:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Rotated value
 142:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 143:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __ROR                             __ror
 144:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 145:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 146:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 147:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 148:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 149:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 150:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 151:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 152:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 153:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return               Reversed value
 154:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 155:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __RBIT                            __rbit
 156:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 157:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 158:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 159:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 160:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 161:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 162:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 163:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 164:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 165:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 166:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 167:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 168:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 169:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 170:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 171:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 172:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 173:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 174:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 175:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 176:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 177:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 178:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 179:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 180:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 181:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 182:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 183:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 184:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 185:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 186:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 187:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 188:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 189:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 190:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 191:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 192:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 193:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 194:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 195:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 196:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 197:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 198:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 199:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 200:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 201:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 202:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 203:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 204:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 205:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 206:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 207:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 208:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 209:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 210:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 211:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 212:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 213:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 214:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 215:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 216:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to store
 217:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 218:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          0  Function succeeded
 219:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return          1  Function failed
 220:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 221:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 222:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 223:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 224:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 225:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 226:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 227:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 228:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 229:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CLREX                           __clrex
 230:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 231:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 232:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Signed Saturate
 233:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 234:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function saturates a signed value.
 235:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 236:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 238:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             Saturated value
 239:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 240:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __SSAT                            __ssat
 241:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 242:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 243:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 244:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 245:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function saturates an unsigned value.
 246:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 247:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 248:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 249:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             Saturated value
 250:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 251:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __USAT                            __usat
 252:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 253:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 254:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Count leading zeros
 255:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 256:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 257:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 258:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 259:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     \return             number of leading zeros in value
 260:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 261:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #define __CLZ                             __clz
 262:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 263:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 264:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 265:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 266:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 267:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 268:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* IAR iccarm specific functions */
 269:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 270:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #include <cmsis_iar.h>
 271:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 272:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 273:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __TMS470__ ) /*---------------- TI CCS Compiler ------------------*/
 274:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* TI CCS specific functions */
 275:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 276:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #include <cmsis_ccs.h>
 277:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 278:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 279:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 280:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /* GNU gcc specific functions */
 281:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 282:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  No Operation
 283:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 284:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 285:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 286:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
 287:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 288:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("nop");
 289:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 290:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 291:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 292:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 293:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 294:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 295:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     until one of a number of events occurs.
 296:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 297:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFI(void)
 298:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 299:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("wfi");
 300:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 301:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 302:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 303:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Wait For Event
 304:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 305:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 306:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 307:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 308:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFE(void)
 309:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 310:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("wfe");
 311:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 312:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 313:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 314:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Send Event
 315:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 316:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 317:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 318:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __SEV(void)
 319:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 320:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("sev");
 321:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 322:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 323:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 324:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 325:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 326:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 327:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 328:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     memory, after the instruction has been completed.
 329:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 330:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __ISB(void)
 331:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 332:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("isb");
 333:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 334:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 335:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 336:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 337:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 338:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 339:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 340:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 341:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
 342:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 343:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("dsb");
 344:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** }
 345:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 346:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 347:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 348:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** 
 349:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 350:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 351:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****  */
 352:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
 353:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h **** {
 354:../../../platform/thirdparty/CMSIS/include/core_cmInstr.h ****   __ASM volatile ("dmb");
 275              	 .loc 4 354 0
 276              	 .syntax unified
 277              	
 278 00d4 BFF35F8F 	 dmb
 279              	
 280              	 .thumb
 281              	 .syntax unified
 282              	.LBE17:
 283              	.LBE16:
 147:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	cpu_irq_disable();
 284              	 .loc 2 147 0
 285 00d8 044B     	 ldr r3,.L16
 286 00da 0022     	 movs r2,#0
 287 00dc 1A70     	 strb r2,[r3]
 148:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	return flags;
 288              	 .loc 2 148 0
 289 00de 7B68     	 ldr r3,[r7,#4]
 149:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** }
 290              	 .loc 2 149 0
 291 00e0 1846     	 mov r0,r3
 292 00e2 0C37     	 adds r7,r7,#12
 293              	.LCFI21:
 294              	 .cfi_def_cfa_offset 4
 295 00e4 BD46     	 mov sp,r7
 296              	.LCFI22:
 297              	 .cfi_def_cfa_register 13
 298              	 
 299 00e6 80BC     	 pop {r7}
 300              	.LCFI23:
 301              	 .cfi_restore 7
 302              	 .cfi_def_cfa_offset 0
 303 00e8 7047     	 bx lr
 304              	.L17:
 305 00ea 00BF     	 .align 2
 306              	.L16:
 307 00ec 00000000 	 .word g_interrupt_enabled
 308              	 .cfi_endproc
 309              	.LFE112:
 311              	 .align 1
 312              	 .syntax unified
 313              	 .thumb
 314              	 .thumb_func
 315              	 .fpu softvfp
 317              	cpu_irq_is_enabled_flags:
 318              	.LFB113:
 150:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 151:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static inline bool cpu_irq_is_enabled_flags(irqflags_t flags)
 152:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** {
 319              	 .loc 2 152 0
 320              	 .cfi_startproc
 321              	 
 322              	 
 323              	 
 324 00f0 80B4     	 push {r7}
 325              	.LCFI24:
 326              	 .cfi_def_cfa_offset 4
 327              	 .cfi_offset 7,-4
 328 00f2 83B0     	 sub sp,sp,#12
 329              	.LCFI25:
 330              	 .cfi_def_cfa_offset 16
 331 00f4 00AF     	 add r7,sp,#0
 332              	.LCFI26:
 333              	 .cfi_def_cfa_register 7
 334 00f6 7860     	 str r0,[r7,#4]
 153:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	return (flags);
 335              	 .loc 2 153 0
 336 00f8 7B68     	 ldr r3,[r7,#4]
 337 00fa 002B     	 cmp r3,#0
 338 00fc 14BF     	 ite ne
 339 00fe 0123     	 movne r3,#1
 340 0100 0023     	 moveq r3,#0
 341 0102 DBB2     	 uxtb r3,r3
 154:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** }
 342              	 .loc 2 154 0
 343 0104 1846     	 mov r0,r3
 344 0106 0C37     	 adds r7,r7,#12
 345              	.LCFI27:
 346              	 .cfi_def_cfa_offset 4
 347 0108 BD46     	 mov sp,r7
 348              	.LCFI28:
 349              	 .cfi_def_cfa_register 13
 350              	 
 351 010a 80BC     	 pop {r7}
 352              	.LCFI29:
 353              	 .cfi_restore 7
 354              	 .cfi_def_cfa_offset 0
 355 010c 7047     	 bx lr
 356              	 .cfi_endproc
 357              	.LFE113:
 359              	 .align 1
 360              	 .syntax unified
 361              	 .thumb
 362              	 .thumb_func
 363              	 .fpu softvfp
 365              	cpu_irq_restore:
 366              	.LFB114:
 155:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 
 156:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** static inline void cpu_irq_restore(irqflags_t flags)
 157:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** {
 367              	 .loc 2 157 0
 368              	 .cfi_startproc
 369              	 
 370              	 
 371 010e 80B5     	 push {r7,lr}
 372              	.LCFI30:
 373              	 .cfi_def_cfa_offset 8
 374              	 .cfi_offset 7,-8
 375              	 .cfi_offset 14,-4
 376 0110 82B0     	 sub sp,sp,#8
 377              	.LCFI31:
 378              	 .cfi_def_cfa_offset 16
 379 0112 00AF     	 add r7,sp,#0
 380              	.LCFI32:
 381              	 .cfi_def_cfa_register 7
 382 0114 7860     	 str r0,[r7,#4]
 158:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 	if (cpu_irq_is_enabled_flags(flags))
 383              	 .loc 2 158 0
 384 0116 7868     	 ldr r0,[r7,#4]
 385 0118 FFF7EAFF 	 bl cpu_irq_is_enabled_flags
 386 011c 0346     	 mov r3,r0
 387 011e 002B     	 cmp r3,#0
 388 0120 05D0     	 beq .L22
 159:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** 		cpu_irq_enable();
 389              	 .loc 2 159 0
 390 0122 054B     	 ldr r3,.L23
 391 0124 0122     	 movs r2,#1
 392 0126 1A70     	 strb r2,[r3]
 393              	.LBB18:
 394              	.LBB19:
 395              	 .loc 4 354 0
 396              	 .syntax unified
 397              	
 398 0128 BFF35F8F 	 dmb
 399              	
 400              	 .thumb
 401              	 .syntax unified
 402              	.LBE19:
 403              	.LBE18:
 404              	.LBB20:
 405              	.LBB21:
 316:../../../platform/thirdparty/CMSIS/include/core_cmFunc.h **** }
 406              	 .loc 3 316 0
 407              	 .syntax unified
 408              	
 409 012c 62B6     	 cpsie i
 410              	
 411              	 .thumb
 412              	 .syntax unified
 413              	.L22:
 414              	.LBE21:
 415              	.LBE20:
 160:../../../platform/common/utils/interrupt/interrupt_sam_nvic.h **** }
 416              	 .loc 2 160 0
 417 012e 00BF     	 nop
 418 0130 0837     	 adds r7,r7,#8
 419              	.LCFI33:
 420              	 .cfi_def_cfa_offset 8
 421 0132 BD46     	 mov sp,r7
 422              	.LCFI34:
 423              	 .cfi_def_cfa_register 13
 424              	 
 425 0134 80BD     	 pop {r7,pc}
 426              	.L24:
 427 0136 00BF     	 .align 2
 428              	.L23:
 429 0138 00000000 	 .word g_interrupt_enabled
 430              	 .cfi_endproc
 431              	.LFE114:
 433              	 .align 1
 434              	 .syntax unified
 435              	 .thumb
 436              	 .thumb_func
 437              	 .fpu softvfp
 439              	eic_line_enable_interrupt:
 440              	.LFB125:
 441              	 .file 5 "../../../platform/sam/drivers/eic/eic.h"
   1:../../../platform/sam/drivers/eic/eic.h **** /**
   2:../../../platform/sam/drivers/eic/eic.h ****  * \file
   3:../../../platform/sam/drivers/eic/eic.h ****  *
   4:../../../platform/sam/drivers/eic/eic.h ****  * \brief EIC driver for SAM
   5:../../../platform/sam/drivers/eic/eic.h ****  *
   6:../../../platform/sam/drivers/eic/eic.h ****  * Copyright (c) 2012-2014 Atmel Corporation. All rights reserved.
   7:../../../platform/sam/drivers/eic/eic.h ****  *
   8:../../../platform/sam/drivers/eic/eic.h ****  * \asf_license_start
   9:../../../platform/sam/drivers/eic/eic.h ****  *
  10:../../../platform/sam/drivers/eic/eic.h ****  * \page License
  11:../../../platform/sam/drivers/eic/eic.h ****  *
  12:../../../platform/sam/drivers/eic/eic.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/sam/drivers/eic/eic.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/sam/drivers/eic/eic.h ****  *
  15:../../../platform/sam/drivers/eic/eic.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/sam/drivers/eic/eic.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/sam/drivers/eic/eic.h ****  *
  18:../../../platform/sam/drivers/eic/eic.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/sam/drivers/eic/eic.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/sam/drivers/eic/eic.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/sam/drivers/eic/eic.h ****  *
  22:../../../platform/sam/drivers/eic/eic.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/sam/drivers/eic/eic.h ****  *    from this software without specific prior written permission.
  24:../../../platform/sam/drivers/eic/eic.h ****  *
  25:../../../platform/sam/drivers/eic/eic.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/sam/drivers/eic/eic.h ****  *    Atmel microcontroller product.
  27:../../../platform/sam/drivers/eic/eic.h ****  *
  28:../../../platform/sam/drivers/eic/eic.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/sam/drivers/eic/eic.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/sam/drivers/eic/eic.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/sam/drivers/eic/eic.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/sam/drivers/eic/eic.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/sam/drivers/eic/eic.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/sam/drivers/eic/eic.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/sam/drivers/eic/eic.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/sam/drivers/eic/eic.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/sam/drivers/eic/eic.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/sam/drivers/eic/eic.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/sam/drivers/eic/eic.h ****  *
  40:../../../platform/sam/drivers/eic/eic.h ****  * \asf_license_stop
  41:../../../platform/sam/drivers/eic/eic.h ****  *
  42:../../../platform/sam/drivers/eic/eic.h ****  */
  43:../../../platform/sam/drivers/eic/eic.h **** 
  44:../../../platform/sam/drivers/eic/eic.h **** #ifndef EIC_H_INCLUDED
  45:../../../platform/sam/drivers/eic/eic.h **** #define EIC_H_INCLUDED
  46:../../../platform/sam/drivers/eic/eic.h **** 
  47:../../../platform/sam/drivers/eic/eic.h **** /**
  48:../../../platform/sam/drivers/eic/eic.h ****  * \defgroup asfdoc_sam_drivers_eic_group  SAM4 External Interrupt Controller (EIC)
  49:../../../platform/sam/drivers/eic/eic.h ****  *
  50:../../../platform/sam/drivers/eic/eic.h ****  * This document describes the SAM4 driver providing access to the
  51:../../../platform/sam/drivers/eic/eic.h ****  * advanced functions of the on-chip EIC controller interrupt and event support.
  52:../../../platform/sam/drivers/eic/eic.h ****  *
  53:../../../platform/sam/drivers/eic/eic.h **** * The outline of this documentation is as follows:
  54:../../../platform/sam/drivers/eic/eic.h ****  *  - \ref asfdoc_sam_drivers_eic_prerequisites
  55:../../../platform/sam/drivers/eic/eic.h ****  *  - \ref asfdoc_sam_drivers_eic_module_overview
  56:../../../platform/sam/drivers/eic/eic.h ****  *  - \ref asfdoc_sam_drivers_eic_special_considerations
  57:../../../platform/sam/drivers/eic/eic.h ****  *  - \ref asfdoc_sam_drivers_eic_extra_info
  58:../../../platform/sam/drivers/eic/eic.h ****  *  - \ref asfdoc_sam_drivers_eic_examples
  59:../../../platform/sam/drivers/eic/eic.h ****  *  - \ref asfdoc_sam_drivers_eic_api_overview
  60:../../../platform/sam/drivers/eic/eic.h ****  *
  61:../../../platform/sam/drivers/eic/eic.h ****  *
  62:../../../platform/sam/drivers/eic/eic.h ****  * \section asfdoc_sam_drivers_eic_module_overview Module Overview
  63:../../../platform/sam/drivers/eic/eic.h ****  * The External Interrupt Controller (EIC) allows pins to be configured as external interrupts. Eac
  64:../../../platform/sam/drivers/eic/eic.h ****  * external interrupt has its own interrupt request and can be individually masked. Each external
  65:../../../platform/sam/drivers/eic/eic.h ****  * interrupt can generate an interrupt on rising or falling edge, or high or low level. Every inter
  66:../../../platform/sam/drivers/eic/eic.h ****  * input has a configurable filter to remove spikes from the interrupt source. Every interrupt pin 
  67:../../../platform/sam/drivers/eic/eic.h ****  * also be configured to be asynchronous, in order to wake-up the part from sleep modes where the
  68:../../../platform/sam/drivers/eic/eic.h ****  * CLK_SYNC clock has been disabled.
  69:../../../platform/sam/drivers/eic/eic.h ****  *
  70:../../../platform/sam/drivers/eic/eic.h ****  * An additional Non-Maskable Interrupt (NMI) pin is also supported. This has the same properties a
  71:../../../platform/sam/drivers/eic/eic.h ****  * other external interrupts, but is connected to the NMI request of the CPU, enabling it to interr
  72:../../../platform/sam/drivers/eic/eic.h ****  * other interrupt mode.
  73:../../../platform/sam/drivers/eic/eic.h **** *
  74:../../../platform/sam/drivers/eic/eic.h **** *
  75:../../../platform/sam/drivers/eic/eic.h ****  * \section asfdoc_sam_drivers_eic_special_considerations Special Considerations
  76:../../../platform/sam/drivers/eic/eic.h ****  *
  77:../../../platform/sam/drivers/eic/eic.h ****  * - The external interrupt pins (EXTINTn and NMI) may be multiplexed with I/O Controller lines. Th
  78:../../../platform/sam/drivers/eic/eic.h ****  * programmer must first program the I/O Controller to assign the desired EIC pins to their
  79:../../../platform/sam/drivers/eic/eic.h ****  * peripheral function. If I/O lines of the EIC are not used by the application, they can be used f
  80:../../../platform/sam/drivers/eic/eic.h ****  * purposes by the I/O Controller.
  81:../../../platform/sam/drivers/eic/eic.h ****  * It is only required to enable the EIC inputs actually in use. For example, if an application onl
  82:../../../platform/sam/drivers/eic/eic.h ****  * requires two external interrupts, then only two I/O lines will be assigned to EIC inputs.
  83:../../../platform/sam/drivers/eic/eic.h ****  *
  84:../../../platform/sam/drivers/eic/eic.h ****  * - All interrupts are available in all sleep modes as long as the EIC module is powered. However,
  85:../../../platform/sam/drivers/eic/eic.h ****  * sleep modes where CLK_SYNC is stopped, the interrupt must be configured to asynchronous
  86:../../../platform/sam/drivers/eic/eic.h ****  * mode.
  87:../../../platform/sam/drivers/eic/eic.h ****  *
  88:../../../platform/sam/drivers/eic/eic.h ****  * - The clock for the EIC bus interface (CLK_EIC) is generated by the Power Manager. This clock is
  89:../../../platform/sam/drivers/eic/eic.h ****  * enabled at reset, and can be disabled in the Power Manager.
  90:../../../platform/sam/drivers/eic/eic.h ****  * The filter and synchronous edge/level detector runs on a clock which is stopped in any of the
  91:../../../platform/sam/drivers/eic/eic.h ****  * sleep modes where the system RC oscillator (RCSYS) is not running. This clock is referred to as
  92:../../../platform/sam/drivers/eic/eic.h ****  * CLK_SYNC.
  93:../../../platform/sam/drivers/eic/eic.h ****  *
  94:../../../platform/sam/drivers/eic/eic.h ****  * - The external interrupt request lines are connected to the NVIC. Using the external interrupts
  95:../../../platform/sam/drivers/eic/eic.h ****  * requires the NVIC to be programmed first.
  96:../../../platform/sam/drivers/eic/eic.h ****  * Using the Non-Maskable Interrupt does not require the NVIC to be programmed.
  97:../../../platform/sam/drivers/eic/eic.h ****  *
  98:../../../platform/sam/drivers/eic/eic.h ****  * - When an external debugger forces the CPU into debug mode, the EIC continues normal
  99:../../../platform/sam/drivers/eic/eic.h ****  * operation. If the EIC is configured in a way that requires it to be periodically serviced by the
 100:../../../platform/sam/drivers/eic/eic.h ****  * through interrupts or similar, improper operation or data loss may result during debugging.
 101:../../../platform/sam/drivers/eic/eic.h ****  *
 102:../../../platform/sam/drivers/eic/eic.h **** *
 103:../../../platform/sam/drivers/eic/eic.h ****  * \section asfdoc_sam_drivers_eic_prerequisites Prerequisites
 104:../../../platform/sam/drivers/eic/eic.h ****  *
 105:../../../platform/sam/drivers/eic/eic.h ****  * - None
 106:../../../platform/sam/drivers/eic/eic.h ****  *
 107:../../../platform/sam/drivers/eic/eic.h ****  *
 108:../../../platform/sam/drivers/eic/eic.h ****  * \section asfdoc_sam_drivers_eic_extra_info Extra Information
 109:../../../platform/sam/drivers/eic/eic.h ****  *
 110:../../../platform/sam/drivers/eic/eic.h ****  * For extra information, see \ref asfdoc_sam_drivers_eic_extra. This includes:
 111:../../../platform/sam/drivers/eic/eic.h ****  *  - \ref asfdoc_sam_drivers_eic_extra_acronyms
 112:../../../platform/sam/drivers/eic/eic.h ****  *  - \ref asfdoc_sam_drivers_eic_extra_dependencies
 113:../../../platform/sam/drivers/eic/eic.h ****  *  - \ref asfdoc_sam_drivers_eic_extra_errata
 114:../../../platform/sam/drivers/eic/eic.h ****  *  - \ref asfdoc_sam_drivers_eic_extra_history
 115:../../../platform/sam/drivers/eic/eic.h ****  *
 116:../../../platform/sam/drivers/eic/eic.h ****  * \section asfdoc_sam_drivers_eic_examples Examples
 117:../../../platform/sam/drivers/eic/eic.h ****  *
 118:../../../platform/sam/drivers/eic/eic.h ****  * For a list of examples related to this driver, see
 119:../../../platform/sam/drivers/eic/eic.h ****  * - \ref sam_eic_quickstart
 120:../../../platform/sam/drivers/eic/eic.h ****  *
 121:../../../platform/sam/drivers/eic/eic.h ****  *
 122:../../../platform/sam/drivers/eic/eic.h ****  * \section asfdoc_sam_drivers_eic_api_overview API Overview
 123:../../../platform/sam/drivers/eic/eic.h ****  * @{
 124:../../../platform/sam/drivers/eic/eic.h ****  */
 125:../../../platform/sam/drivers/eic/eic.h **** 
 126:../../../platform/sam/drivers/eic/eic.h **** #include "compiler.h"
 127:../../../platform/sam/drivers/eic/eic.h **** 
 128:../../../platform/sam/drivers/eic/eic.h **** /// @cond 0
 129:../../../platform/sam/drivers/eic/eic.h **** /**INDENT-OFF**/
 130:../../../platform/sam/drivers/eic/eic.h **** #ifdef __cplusplus
 131:../../../platform/sam/drivers/eic/eic.h **** extern "C" {
 132:../../../platform/sam/drivers/eic/eic.h **** #endif
 133:../../../platform/sam/drivers/eic/eic.h **** /**INDENT-ON**/
 134:../../../platform/sam/drivers/eic/eic.h **** /// @endcond
 135:../../../platform/sam/drivers/eic/eic.h **** 
 136:../../../platform/sam/drivers/eic/eic.h **** /** Number of available EIC lines, device dependent. */
 137:../../../platform/sam/drivers/eic/eic.h **** #if SAM4L
 138:../../../platform/sam/drivers/eic/eic.h **** #define EIC_NUMBER_OF_LINES                 9
 139:../../../platform/sam/drivers/eic/eic.h **** #else
 140:../../../platform/sam/drivers/eic/eic.h **** #error  'This device does not support EIC driver'
 141:../../../platform/sam/drivers/eic/eic.h **** #endif
 142:../../../platform/sam/drivers/eic/eic.h **** 
 143:../../../platform/sam/drivers/eic/eic.h **** /** \name External Interrupt lines */
 144:../../../platform/sam/drivers/eic/eic.h **** /* @{ */
 145:../../../platform/sam/drivers/eic/eic.h **** /** Non-Maskable Interrupt */
 146:../../../platform/sam/drivers/eic/eic.h **** #define EXT_NMI     0
 147:../../../platform/sam/drivers/eic/eic.h **** /** External Interrupt 1. */
 148:../../../platform/sam/drivers/eic/eic.h **** #define EXT_INT1    1
 149:../../../platform/sam/drivers/eic/eic.h **** /** External Interrupt 2. */
 150:../../../platform/sam/drivers/eic/eic.h **** #define EXT_INT2    2
 151:../../../platform/sam/drivers/eic/eic.h **** /** External Interrupt 3. */
 152:../../../platform/sam/drivers/eic/eic.h **** #define EXT_INT3    3
 153:../../../platform/sam/drivers/eic/eic.h **** /** External Interrupt 4. */
 154:../../../platform/sam/drivers/eic/eic.h **** #define EXT_INT4    4
 155:../../../platform/sam/drivers/eic/eic.h **** /** External Interrupt 5. */
 156:../../../platform/sam/drivers/eic/eic.h **** #define EXT_INT5    5
 157:../../../platform/sam/drivers/eic/eic.h **** /** External Interrupt 6. */
 158:../../../platform/sam/drivers/eic/eic.h **** #define EXT_INT6    6
 159:../../../platform/sam/drivers/eic/eic.h **** /** External Interrupt 7. */
 160:../../../platform/sam/drivers/eic/eic.h **** #define EXT_INT7    7
 161:../../../platform/sam/drivers/eic/eic.h **** /** External Interrupt 8. */
 162:../../../platform/sam/drivers/eic/eic.h **** #define EXT_INT8    8
 163:../../../platform/sam/drivers/eic/eic.h **** /* @} */
 164:../../../platform/sam/drivers/eic/eic.h **** 
 165:../../../platform/sam/drivers/eic/eic.h **** /** \name Mode Trigger Options */
 166:../../../platform/sam/drivers/eic/eic.h **** /* @{ */
 167:../../../platform/sam/drivers/eic/eic.h **** /** The interrupt is edge triggered. */
 168:../../../platform/sam/drivers/eic/eic.h **** #define EIC_MODE_EDGE_TRIGGERED   0
 169:../../../platform/sam/drivers/eic/eic.h **** /** The interrupt is level triggered. */
 170:../../../platform/sam/drivers/eic/eic.h **** #define EIC_MODE_LEVEL_TRIGGERED  1
 171:../../../platform/sam/drivers/eic/eic.h **** /* @} */
 172:../../../platform/sam/drivers/eic/eic.h **** 
 173:../../../platform/sam/drivers/eic/eic.h **** /** \name Edge level Options */
 174:../../../platform/sam/drivers/eic/eic.h **** /* @{ */
 175:../../../platform/sam/drivers/eic/eic.h **** /** The interrupt triggers on falling edge. */
 176:../../../platform/sam/drivers/eic/eic.h **** #define EIC_EDGE_FALLING_EDGE     0
 177:../../../platform/sam/drivers/eic/eic.h **** /** The interrupt triggers on rising edge. */
 178:../../../platform/sam/drivers/eic/eic.h **** #define EIC_EDGE_RISING_EDGE      1
 179:../../../platform/sam/drivers/eic/eic.h **** /* @} */
 180:../../../platform/sam/drivers/eic/eic.h **** 
 181:../../../platform/sam/drivers/eic/eic.h **** /** \name Level Options */
 182:../../../platform/sam/drivers/eic/eic.h **** /* @{ */
 183:../../../platform/sam/drivers/eic/eic.h **** /** The interrupt triggers on low level. */
 184:../../../platform/sam/drivers/eic/eic.h **** #define EIC_LEVEL_LOW_LEVEL       0
 185:../../../platform/sam/drivers/eic/eic.h **** /** The interrupt triggers on high level. */
 186:../../../platform/sam/drivers/eic/eic.h **** #define EIC_LEVEL_HIGH_LEVEL      1
 187:../../../platform/sam/drivers/eic/eic.h **** /* @} */
 188:../../../platform/sam/drivers/eic/eic.h **** 
 189:../../../platform/sam/drivers/eic/eic.h **** /** \name Filter Options */
 190:../../../platform/sam/drivers/eic/eic.h **** /* @{ */
 191:../../../platform/sam/drivers/eic/eic.h **** /** The interrupt is filtered. */
 192:../../../platform/sam/drivers/eic/eic.h **** #define EIC_FILTER_ENABLED        1
 193:../../../platform/sam/drivers/eic/eic.h **** /** The interrupt is not filtered. */
 194:../../../platform/sam/drivers/eic/eic.h **** #define EIC_FILTER_DISABLED       0
 195:../../../platform/sam/drivers/eic/eic.h **** /* @} */
 196:../../../platform/sam/drivers/eic/eic.h **** 
 197:../../../platform/sam/drivers/eic/eic.h **** /** \name Synch Mode Options */
 198:../../../platform/sam/drivers/eic/eic.h **** /* @{ */
 199:../../../platform/sam/drivers/eic/eic.h **** /** The interrupt is synchronized to CLK_SYNC. */
 200:../../../platform/sam/drivers/eic/eic.h **** #define EIC_SYNCH_MODE            0
 201:../../../platform/sam/drivers/eic/eic.h **** /** The interrupt is asynchronous. */
 202:../../../platform/sam/drivers/eic/eic.h **** #define EIC_ASYNCH_MODE           1
 203:../../../platform/sam/drivers/eic/eic.h **** /* @} */
 204:../../../platform/sam/drivers/eic/eic.h **** 
 205:../../../platform/sam/drivers/eic/eic.h **** /** Configuration parameters of the EIC module. */
 206:../../../platform/sam/drivers/eic/eic.h **** struct eic_line_config {
 207:../../../platform/sam/drivers/eic/eic.h **** 	/** Mode: \ref EIC_MODE_EDGE_TRIGGERED or \ref EIC_MODE_LEVEL_TRIGGERED */
 208:../../../platform/sam/drivers/eic/eic.h **** 	uint8_t eic_mode;
 209:../../../platform/sam/drivers/eic/eic.h **** 	/** Edge: \ref EIC_EDGE_FALLING_EDGE or \ref EIC_EDGE_RISING_EDGE */
 210:../../../platform/sam/drivers/eic/eic.h **** 	uint8_t eic_edge;
 211:../../../platform/sam/drivers/eic/eic.h **** 	/** Level: \ref EIC_LEVEL_LOW_LEVEL or \ref EIC_LEVEL_HIGH_LEVEL */
 212:../../../platform/sam/drivers/eic/eic.h **** 	uint8_t eic_level;
 213:../../../platform/sam/drivers/eic/eic.h **** 	/** Filter: \ref EIC_FILTER_DISABLED or \ref EIC_FILTER_ENABLED */
 214:../../../platform/sam/drivers/eic/eic.h **** 	uint8_t eic_filter;
 215:../../../platform/sam/drivers/eic/eic.h **** 	/** Async: \ref EIC_ASYNCH_MODE or \ref EIC_SYNCH_MODE */
 216:../../../platform/sam/drivers/eic/eic.h **** 	uint8_t eic_async;
 217:../../../platform/sam/drivers/eic/eic.h **** };
 218:../../../platform/sam/drivers/eic/eic.h **** 
 219:../../../platform/sam/drivers/eic/eic.h **** /**
 220:../../../platform/sam/drivers/eic/eic.h ****  * \brief Callback definition
 221:../../../platform/sam/drivers/eic/eic.h ****  */
 222:../../../platform/sam/drivers/eic/eic.h **** typedef void (*eic_callback_t)(void);
 223:../../../platform/sam/drivers/eic/eic.h **** 
 224:../../../platform/sam/drivers/eic/eic.h **** void eic_disable(Eic *eic);
 225:../../../platform/sam/drivers/eic/eic.h **** void eic_enable(Eic *eic);
 226:../../../platform/sam/drivers/eic/eic.h **** 
 227:../../../platform/sam/drivers/eic/eic.h **** void eic_line_set_config(Eic *eic, uint8_t line_number,
 228:../../../platform/sam/drivers/eic/eic.h **** 	struct eic_line_config *eic_line_conf);
 229:../../../platform/sam/drivers/eic/eic.h **** 
 230:../../../platform/sam/drivers/eic/eic.h **** void eic_line_set_callback(Eic *eic, uint8_t line_number,
 231:../../../platform/sam/drivers/eic/eic.h **** 	eic_callback_t callback, uint8_t irq_line, uint8_t irq_level);
 232:../../../platform/sam/drivers/eic/eic.h **** 
 233:../../../platform/sam/drivers/eic/eic.h **** /**
 234:../../../platform/sam/drivers/eic/eic.h ****  * \brief Enable the external interrupt on specified line.
 235:../../../platform/sam/drivers/eic/eic.h ****  *
 236:../../../platform/sam/drivers/eic/eic.h ****  * \param [in]  eic Base address of the EIC module
 237:../../../platform/sam/drivers/eic/eic.h ****  * \param [in]  line_number The line number to enable
 238:../../../platform/sam/drivers/eic/eic.h ****  */
 239:../../../platform/sam/drivers/eic/eic.h **** static inline void eic_line_enable(Eic *eic, uint8_t line_number)
 240:../../../platform/sam/drivers/eic/eic.h **** {
 241:../../../platform/sam/drivers/eic/eic.h **** 	eic->EIC_EN = 1 << line_number;
 242:../../../platform/sam/drivers/eic/eic.h **** }
 243:../../../platform/sam/drivers/eic/eic.h **** 
 244:../../../platform/sam/drivers/eic/eic.h **** /**
 245:../../../platform/sam/drivers/eic/eic.h ****  * \brief Disable the external interrupt on specified line.
 246:../../../platform/sam/drivers/eic/eic.h ****  *
 247:../../../platform/sam/drivers/eic/eic.h ****  * \param [in]  eic Base address of the EIC module
 248:../../../platform/sam/drivers/eic/eic.h ****  * \param [in]  line_number Line number to disable
 249:../../../platform/sam/drivers/eic/eic.h ****  */
 250:../../../platform/sam/drivers/eic/eic.h **** static inline void eic_line_disable(Eic *eic, uint8_t line_number)
 251:../../../platform/sam/drivers/eic/eic.h **** {
 252:../../../platform/sam/drivers/eic/eic.h **** 	eic->EIC_DIS = 1 << line_number;
 253:../../../platform/sam/drivers/eic/eic.h **** }
 254:../../../platform/sam/drivers/eic/eic.h **** 
 255:../../../platform/sam/drivers/eic/eic.h **** /**
 256:../../../platform/sam/drivers/eic/eic.h ****  * \brief Tells whether an EIC line is enabled.
 257:../../../platform/sam/drivers/eic/eic.h ****  *
 258:../../../platform/sam/drivers/eic/eic.h ****  * \param [in]  eic Base address of the EIC module
 259:../../../platform/sam/drivers/eic/eic.h ****  * \param [in]  line_number Line number to test
 260:../../../platform/sam/drivers/eic/eic.h ****  *
 261:../../../platform/sam/drivers/eic/eic.h ****  * \retval true EIC line is enabled
 262:../../../platform/sam/drivers/eic/eic.h ****  * \retval false EIC line is not enabled
 263:../../../platform/sam/drivers/eic/eic.h ****  */
 264:../../../platform/sam/drivers/eic/eic.h **** static inline bool eic_line_is_enabled(Eic *eic, uint8_t line_number)
 265:../../../platform/sam/drivers/eic/eic.h **** {
 266:../../../platform/sam/drivers/eic/eic.h **** 	return (eic->EIC_CTRL & (1 << line_number)) != 0;
 267:../../../platform/sam/drivers/eic/eic.h **** }
 268:../../../platform/sam/drivers/eic/eic.h **** 
 269:../../../platform/sam/drivers/eic/eic.h **** /**
 270:../../../platform/sam/drivers/eic/eic.h ****  * \brief Enables the propagation from the EIC to the interrupt
 271:../../../platform/sam/drivers/eic/eic.h ****  * controller of the external interrupt on a specified line.
 272:../../../platform/sam/drivers/eic/eic.h ****  *
 273:../../../platform/sam/drivers/eic/eic.h ****  * \param [in]  eic Base address of the EIC module
 274:../../../platform/sam/drivers/eic/eic.h ****  * \param [in]  line_number Line number of interrupt to enable
 275:../../../platform/sam/drivers/eic/eic.h ****  */
 276:../../../platform/sam/drivers/eic/eic.h **** static inline void eic_line_enable_interrupt(Eic *eic,
 277:../../../platform/sam/drivers/eic/eic.h **** 		uint8_t line_number)
 278:../../../platform/sam/drivers/eic/eic.h **** {
 442              	 .loc 5 278 0
 443              	 .cfi_startproc
 444              	 
 445              	 
 446              	 
 447 013c 80B4     	 push {r7}
 448              	.LCFI35:
 449              	 .cfi_def_cfa_offset 4
 450              	 .cfi_offset 7,-4
 451 013e 83B0     	 sub sp,sp,#12
 452              	.LCFI36:
 453              	 .cfi_def_cfa_offset 16
 454 0140 00AF     	 add r7,sp,#0
 455              	.LCFI37:
 456              	 .cfi_def_cfa_register 7
 457 0142 7860     	 str r0,[r7,#4]
 458 0144 0B46     	 mov r3,r1
 459 0146 FB70     	 strb r3,[r7,#3]
 279:../../../platform/sam/drivers/eic/eic.h **** 	eic->EIC_IER = 1 << line_number;
 460              	 .loc 5 279 0
 461 0148 FB78     	 ldrb r3,[r7,#3]
 462 014a 0122     	 movs r2,#1
 463 014c 02FA03F3 	 lsl r3,r2,r3
 464 0150 1A46     	 mov r2,r3
 465 0152 7B68     	 ldr r3,[r7,#4]
 466 0154 1A60     	 str r2,[r3]
 280:../../../platform/sam/drivers/eic/eic.h **** }
 467              	 .loc 5 280 0
 468 0156 00BF     	 nop
 469 0158 0C37     	 adds r7,r7,#12
 470              	.LCFI38:
 471              	 .cfi_def_cfa_offset 4
 472 015a BD46     	 mov sp,r7
 473              	.LCFI39:
 474              	 .cfi_def_cfa_register 13
 475              	 
 476 015c 80BC     	 pop {r7}
 477              	.LCFI40:
 478              	 .cfi_restore 7
 479              	 .cfi_def_cfa_offset 0
 480 015e 7047     	 bx lr
 481              	 .cfi_endproc
 482              	.LFE125:
 484              	 .align 1
 485              	 .syntax unified
 486              	 .thumb
 487              	 .thumb_func
 488              	 .fpu softvfp
 490              	sleepmgr_lock_mode:
 491              	.LFB192:
 492              	 .file 6 "../../../platform/common/services/sleepmgr/sleepmgr.h"
   1:../../../platform/common/services/sleepmgr/sleepmgr.h **** /**
   2:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \file
   3:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
   4:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \brief Sleep manager
   5:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
   6:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * Copyright (c) 2010 - 2013 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
   8:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \asf_license_start
   9:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  10:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \page License
  11:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  12:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  15:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  18:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  22:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  25:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  28:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  40:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \asf_license_stop
  41:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  42:../../../platform/common/services/sleepmgr/sleepmgr.h ****  */
  43:../../../platform/common/services/sleepmgr/sleepmgr.h **** #ifndef SLEEPMGR_H
  44:../../../platform/common/services/sleepmgr/sleepmgr.h **** #define SLEEPMGR_H
  45:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
  46:../../../platform/common/services/sleepmgr/sleepmgr.h **** #include <compiler.h>
  47:../../../platform/common/services/sleepmgr/sleepmgr.h **** #include <parts.h>
  48:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
  49:../../../platform/common/services/sleepmgr/sleepmgr.h **** #if (SAM3S || SAM3U || SAM3N || SAM3XA || SAM4S || SAM4E)
  50:../../../platform/common/services/sleepmgr/sleepmgr.h **** # include "sam/sleepmgr.h"
  51:../../../platform/common/services/sleepmgr/sleepmgr.h **** #elif XMEGA
  52:../../../platform/common/services/sleepmgr/sleepmgr.h **** # include "xmega/sleepmgr.h"
  53:../../../platform/common/services/sleepmgr/sleepmgr.h **** #elif UC3
  54:../../../platform/common/services/sleepmgr/sleepmgr.h **** # include "uc3/sleepmgr.h"
  55:../../../platform/common/services/sleepmgr/sleepmgr.h **** #elif SAM4L
  56:../../../platform/common/services/sleepmgr/sleepmgr.h **** # include "sam4l/sleepmgr.h"
  57:../../../platform/common/services/sleepmgr/sleepmgr.h **** #elif (MEGA || MEGA_RF)
  58:../../../platform/common/services/sleepmgr/sleepmgr.h **** # include "mega_rf/sleepmgr.h"
  59:../../../platform/common/services/sleepmgr/sleepmgr.h **** #else
  60:../../../platform/common/services/sleepmgr/sleepmgr.h **** # error Unsupported device.
  61:../../../platform/common/services/sleepmgr/sleepmgr.h **** #endif
  62:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
  63:../../../platform/common/services/sleepmgr/sleepmgr.h **** /**
  64:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \defgroup sleepmgr_group Sleep manager
  65:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  66:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * The sleep manager is a service for ensuring that the device is not put to
  67:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * sleep in deeper sleep modes than the system (e.g., peripheral drivers,
  68:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * services or the application) allows at any given time.
  69:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  70:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * It is based on the use of lock counting for the individual sleep modes, and
  71:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * will put the device to sleep in the shallowest sleep mode that has a non-zero
  72:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * lock count. The drivers/services/application can change these counts by use
  73:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * of \ref sleepmgr_lock_mode and \ref sleepmgr_unlock_mode.
  74:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * Refer to \ref sleepmgr_mode for a list of the sleep modes available for
  75:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * locking, and the device datasheet for information on their effect.
  76:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  77:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * The application must supply the file \ref conf_sleepmgr.h.
  78:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  79:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * For the sleep manager to be enabled, the symbol \ref CONFIG_SLEEPMGR_ENABLE
  80:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * must be defined, e.g., in \ref conf_sleepmgr.h. If this symbol is not
  81:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * defined, the functions are replaced with dummy functions and no RAM is used.
  82:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  83:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * @{
  84:../../../platform/common/services/sleepmgr/sleepmgr.h ****  */
  85:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
  86:../../../platform/common/services/sleepmgr/sleepmgr.h **** /**
  87:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \def CONFIG_SLEEPMGR_ENABLE
  88:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \brief Configuration symbol for enabling the sleep manager
  89:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  90:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * If this symbol is not defined, the functions of this service are replaced
  91:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * with dummy functions. This is useful for reducing code size and execution
  92:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * time if the sleep manager is not needed in the application.
  93:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
  94:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * This symbol may be defined in \ref conf_sleepmgr.h.
  95:../../../platform/common/services/sleepmgr/sleepmgr.h ****  */
  96:../../../platform/common/services/sleepmgr/sleepmgr.h **** #if defined(__DOXYGEN__) && !defined(CONFIG_SLEEPMGR_ENABLE)
  97:../../../platform/common/services/sleepmgr/sleepmgr.h **** #  define CONFIG_SLEEPMGR_ENABLE
  98:../../../platform/common/services/sleepmgr/sleepmgr.h **** #endif
  99:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 100:../../../platform/common/services/sleepmgr/sleepmgr.h **** /**
 101:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \enum sleepmgr_mode
 102:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \brief Sleep mode locks
 103:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
 104:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * Identifiers for the different sleep mode locks.
 105:../../../platform/common/services/sleepmgr/sleepmgr.h ****  */
 106:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 107:../../../platform/common/services/sleepmgr/sleepmgr.h **** /**
 108:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \brief Initialize the lock counts
 109:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
 110:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * Sets all lock counts to 0, except the very last one, which is set to 1. This
 111:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * is done to simplify the algorithm for finding the deepest allowable sleep
 112:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * mode in \ref sleepmgr_enter_sleep.
 113:../../../platform/common/services/sleepmgr/sleepmgr.h ****  */
 114:../../../platform/common/services/sleepmgr/sleepmgr.h **** static inline void sleepmgr_init(void)
 115:../../../platform/common/services/sleepmgr/sleepmgr.h **** {
 116:../../../platform/common/services/sleepmgr/sleepmgr.h **** #ifdef CONFIG_SLEEPMGR_ENABLE
 117:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	uint8_t i;
 118:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 119:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	for (i = 0; i < SLEEPMGR_NR_OF_MODES - 1; i++) {
 120:../../../platform/common/services/sleepmgr/sleepmgr.h **** 		sleepmgr_locks[i] = 0;
 121:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	}
 122:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	sleepmgr_locks[SLEEPMGR_NR_OF_MODES - 1] = 1;
 123:../../../platform/common/services/sleepmgr/sleepmgr.h **** #endif /* CONFIG_SLEEPMGR_ENABLE */
 124:../../../platform/common/services/sleepmgr/sleepmgr.h **** }
 125:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 126:../../../platform/common/services/sleepmgr/sleepmgr.h **** /**
 127:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \brief Increase lock count for a sleep mode
 128:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
 129:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * Increases the lock count for \a mode to ensure that the sleep manager does
 130:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * not put the device to sleep in the deeper sleep modes.
 131:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
 132:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \param mode Sleep mode to lock.
 133:../../../platform/common/services/sleepmgr/sleepmgr.h ****  */
 134:../../../platform/common/services/sleepmgr/sleepmgr.h **** static inline void sleepmgr_lock_mode(enum sleepmgr_mode mode)
 135:../../../platform/common/services/sleepmgr/sleepmgr.h **** {
 493              	 .loc 6 135 0
 494              	 .cfi_startproc
 495              	 
 496              	 
 497 0160 80B5     	 push {r7,lr}
 498              	.LCFI41:
 499              	 .cfi_def_cfa_offset 8
 500              	 .cfi_offset 7,-8
 501              	 .cfi_offset 14,-4
 502 0162 84B0     	 sub sp,sp,#16
 503              	.LCFI42:
 504              	 .cfi_def_cfa_offset 24
 505 0164 00AF     	 add r7,sp,#0
 506              	.LCFI43:
 507              	 .cfi_def_cfa_register 7
 508 0166 0346     	 mov r3,r0
 509 0168 FB71     	 strb r3,[r7,#7]
 136:../../../platform/common/services/sleepmgr/sleepmgr.h **** #ifdef CONFIG_SLEEPMGR_ENABLE
 137:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	irqflags_t flags;
 138:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 139:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	Assert(sleepmgr_locks[mode] < 0xff);
 140:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 141:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	// Enter a critical section
 142:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	flags = cpu_irq_save();
 510              	 .loc 6 142 0
 511 016a FFF7A5FF 	 bl cpu_irq_save
 512 016e F860     	 str r0,[r7,#12]
 143:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 144:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	++sleepmgr_locks[mode];
 513              	 .loc 6 144 0
 514 0170 FB79     	 ldrb r3,[r7,#7]
 515 0172 064A     	 ldr r2,.L27
 516 0174 D25C     	 ldrb r2,[r2,r3]
 517 0176 0132     	 adds r2,r2,#1
 518 0178 D1B2     	 uxtb r1,r2
 519 017a 044A     	 ldr r2,.L27
 520 017c D154     	 strb r1,[r2,r3]
 145:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 146:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	// Leave the critical section
 147:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	cpu_irq_restore(flags);
 521              	 .loc 6 147 0
 522 017e F868     	 ldr r0,[r7,#12]
 523 0180 FFF7C5FF 	 bl cpu_irq_restore
 148:../../../platform/common/services/sleepmgr/sleepmgr.h **** #else
 149:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	UNUSED(mode);
 150:../../../platform/common/services/sleepmgr/sleepmgr.h **** #endif /* CONFIG_SLEEPMGR_ENABLE */
 151:../../../platform/common/services/sleepmgr/sleepmgr.h **** }
 524              	 .loc 6 151 0
 525 0184 00BF     	 nop
 526 0186 1037     	 adds r7,r7,#16
 527              	.LCFI44:
 528              	 .cfi_def_cfa_offset 8
 529 0188 BD46     	 mov sp,r7
 530              	.LCFI45:
 531              	 .cfi_def_cfa_register 13
 532              	 
 533 018a 80BD     	 pop {r7,pc}
 534              	.L28:
 535              	 .align 2
 536              	.L27:
 537 018c 00000000 	 .word sleepmgr_locks
 538              	 .cfi_endproc
 539              	.LFE192:
 541              	 .align 1
 542              	 .syntax unified
 543              	 .thumb
 544              	 .thumb_func
 545              	 .fpu softvfp
 547              	sleepmgr_unlock_mode:
 548              	.LFB193:
 152:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 153:../../../platform/common/services/sleepmgr/sleepmgr.h **** /**
 154:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \brief Decrease lock count for a sleep mode
 155:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
 156:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * Decreases the lock count for \a mode. If the lock count reaches 0, the sleep
 157:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * manager can put the device to sleep in the deeper sleep modes.
 158:../../../platform/common/services/sleepmgr/sleepmgr.h ****  *
 159:../../../platform/common/services/sleepmgr/sleepmgr.h ****  * \param mode Sleep mode to unlock.
 160:../../../platform/common/services/sleepmgr/sleepmgr.h ****  */
 161:../../../platform/common/services/sleepmgr/sleepmgr.h **** static inline void sleepmgr_unlock_mode(enum sleepmgr_mode mode)
 162:../../../platform/common/services/sleepmgr/sleepmgr.h **** {
 549              	 .loc 6 162 0
 550              	 .cfi_startproc
 551              	 
 552              	 
 553 0190 80B5     	 push {r7,lr}
 554              	.LCFI46:
 555              	 .cfi_def_cfa_offset 8
 556              	 .cfi_offset 7,-8
 557              	 .cfi_offset 14,-4
 558 0192 84B0     	 sub sp,sp,#16
 559              	.LCFI47:
 560              	 .cfi_def_cfa_offset 24
 561 0194 00AF     	 add r7,sp,#0
 562              	.LCFI48:
 563              	 .cfi_def_cfa_register 7
 564 0196 0346     	 mov r3,r0
 565 0198 FB71     	 strb r3,[r7,#7]
 163:../../../platform/common/services/sleepmgr/sleepmgr.h **** #ifdef CONFIG_SLEEPMGR_ENABLE
 164:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	irqflags_t flags;
 165:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 166:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	Assert(sleepmgr_locks[mode]);
 167:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 168:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	// Enter a critical section
 169:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	flags = cpu_irq_save();
 566              	 .loc 6 169 0
 567 019a FFF78DFF 	 bl cpu_irq_save
 568 019e F860     	 str r0,[r7,#12]
 170:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 171:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	--sleepmgr_locks[mode];
 569              	 .loc 6 171 0
 570 01a0 FB79     	 ldrb r3,[r7,#7]
 571 01a2 064A     	 ldr r2,.L30
 572 01a4 D25C     	 ldrb r2,[r2,r3]
 573 01a6 013A     	 subs r2,r2,#1
 574 01a8 D1B2     	 uxtb r1,r2
 575 01aa 044A     	 ldr r2,.L30
 576 01ac D154     	 strb r1,[r2,r3]
 172:../../../platform/common/services/sleepmgr/sleepmgr.h **** 
 173:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	// Leave the critical section
 174:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	cpu_irq_restore(flags);
 577              	 .loc 6 174 0
 578 01ae F868     	 ldr r0,[r7,#12]
 579 01b0 FFF7ADFF 	 bl cpu_irq_restore
 175:../../../platform/common/services/sleepmgr/sleepmgr.h **** #else
 176:../../../platform/common/services/sleepmgr/sleepmgr.h **** 	UNUSED(mode);
 177:../../../platform/common/services/sleepmgr/sleepmgr.h **** #endif /* CONFIG_SLEEPMGR_ENABLE */
 178:../../../platform/common/services/sleepmgr/sleepmgr.h **** }
 580              	 .loc 6 178 0
 581 01b4 00BF     	 nop
 582 01b6 1037     	 adds r7,r7,#16
 583              	.LCFI49:
 584              	 .cfi_def_cfa_offset 8
 585 01b8 BD46     	 mov sp,r7
 586              	.LCFI50:
 587              	 .cfi_def_cfa_register 13
 588              	 
 589 01ba 80BD     	 pop {r7,pc}
 590              	.L31:
 591              	 .align 2
 592              	.L30:
 593 01bc 00000000 	 .word sleepmgr_locks
 594              	 .cfi_endproc
 595              	.LFE193:
 597              	 .comm eic_callback_pointer,36,4
 598              	 .align 1
 599              	 .global eic_line_set_config
 600              	 .syntax unified
 601              	 .thumb
 602              	 .thumb_func
 603              	 .fpu softvfp
 605              	eic_line_set_config:
 606              	.LFB196:
 607              	 .file 7 "../../../platform/sam/drivers/eic/eic.c"
   1:../../../platform/sam/drivers/eic/eic.c **** /**
   2:../../../platform/sam/drivers/eic/eic.c ****  * \file
   3:../../../platform/sam/drivers/eic/eic.c ****  *
   4:../../../platform/sam/drivers/eic/eic.c ****  * \brief EIC driver for SAM
   5:../../../platform/sam/drivers/eic/eic.c ****  *
   6:../../../platform/sam/drivers/eic/eic.c ****  * Copyright (c) 2012-2014 Atmel Corporation. All rights reserved.
   7:../../../platform/sam/drivers/eic/eic.c ****  *
   8:../../../platform/sam/drivers/eic/eic.c ****  * \asf_license_start
   9:../../../platform/sam/drivers/eic/eic.c ****  *
  10:../../../platform/sam/drivers/eic/eic.c ****  * \page License
  11:../../../platform/sam/drivers/eic/eic.c ****  *
  12:../../../platform/sam/drivers/eic/eic.c ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/sam/drivers/eic/eic.c ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/sam/drivers/eic/eic.c ****  *
  15:../../../platform/sam/drivers/eic/eic.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/sam/drivers/eic/eic.c ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/sam/drivers/eic/eic.c ****  *
  18:../../../platform/sam/drivers/eic/eic.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/sam/drivers/eic/eic.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/sam/drivers/eic/eic.c ****  *    and/or other materials provided with the distribution.
  21:../../../platform/sam/drivers/eic/eic.c ****  *
  22:../../../platform/sam/drivers/eic/eic.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/sam/drivers/eic/eic.c ****  *    from this software without specific prior written permission.
  24:../../../platform/sam/drivers/eic/eic.c ****  *
  25:../../../platform/sam/drivers/eic/eic.c ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/sam/drivers/eic/eic.c ****  *    Atmel microcontroller product.
  27:../../../platform/sam/drivers/eic/eic.c ****  *
  28:../../../platform/sam/drivers/eic/eic.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/sam/drivers/eic/eic.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/sam/drivers/eic/eic.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/sam/drivers/eic/eic.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/sam/drivers/eic/eic.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/sam/drivers/eic/eic.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/sam/drivers/eic/eic.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/sam/drivers/eic/eic.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/sam/drivers/eic/eic.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/sam/drivers/eic/eic.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/sam/drivers/eic/eic.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/sam/drivers/eic/eic.c ****  *
  40:../../../platform/sam/drivers/eic/eic.c ****  * \asf_license_stop
  41:../../../platform/sam/drivers/eic/eic.c ****  *
  42:../../../platform/sam/drivers/eic/eic.c ****  */
  43:../../../platform/sam/drivers/eic/eic.c **** 
  44:../../../platform/sam/drivers/eic/eic.c **** #include "eic.h"
  45:../../../platform/sam/drivers/eic/eic.c **** #include "sysclk.h"
  46:../../../platform/sam/drivers/eic/eic.c **** #include "sleepmgr.h"
  47:../../../platform/sam/drivers/eic/eic.c **** 
  48:../../../platform/sam/drivers/eic/eic.c **** /// @cond 0
  49:../../../platform/sam/drivers/eic/eic.c **** /**INDENT-OFF**/
  50:../../../platform/sam/drivers/eic/eic.c **** #ifdef __cplusplus
  51:../../../platform/sam/drivers/eic/eic.c **** extern "C" {
  52:../../../platform/sam/drivers/eic/eic.c **** #endif
  53:../../../platform/sam/drivers/eic/eic.c **** /**INDENT-ON**/
  54:../../../platform/sam/drivers/eic/eic.c **** /// @endcond
  55:../../../platform/sam/drivers/eic/eic.c **** 
  56:../../../platform/sam/drivers/eic/eic.c **** /**
  57:../../../platform/sam/drivers/eic/eic.c ****  * \defgroup sam_drivers_eic_group SAM4 External Interrupt Controller(EIC)
  58:../../../platform/sam/drivers/eic/eic.c ****  *
  59:../../../platform/sam/drivers/eic/eic.c ****  * See \ref sam_eic_quickstart.
  60:../../../platform/sam/drivers/eic/eic.c ****  *
  61:../../../platform/sam/drivers/eic/eic.c ****  * EIC allows pins to be configured as external interrupts.
  62:../../../platform/sam/drivers/eic/eic.c ****  *
  63:../../../platform/sam/drivers/eic/eic.c ****  * @{
  64:../../../platform/sam/drivers/eic/eic.c ****  */
  65:../../../platform/sam/drivers/eic/eic.c **** 
  66:../../../platform/sam/drivers/eic/eic.c **** 
  67:../../../platform/sam/drivers/eic/eic.c **** /**
  68:../../../platform/sam/drivers/eic/eic.c ****  * \internal
  69:../../../platform/sam/drivers/eic/eic.c ****  * \brief EIC callback function pointer array
  70:../../../platform/sam/drivers/eic/eic.c ****  */
  71:../../../platform/sam/drivers/eic/eic.c **** eic_callback_t eic_callback_pointer[EIC_NUMBER_OF_LINES];
  72:../../../platform/sam/drivers/eic/eic.c **** 
  73:../../../platform/sam/drivers/eic/eic.c **** /**
  74:../../../platform/sam/drivers/eic/eic.c ****  * \brief Program the EIC hardware with the specified configuration.
  75:../../../platform/sam/drivers/eic/eic.c ****  *
  76:../../../platform/sam/drivers/eic/eic.c ****  * \param [in]  eic Base address of the EIC module
  77:../../../platform/sam/drivers/eic/eic.c ****  * \param [in]  line_number Number of line to configure
  78:../../../platform/sam/drivers/eic/eic.c ****  * \param [in]  eic_line_conf Configuration parameters for the EIC module
  79:../../../platform/sam/drivers/eic/eic.c ****  * (see \ref eic_line_config)
  80:../../../platform/sam/drivers/eic/eic.c ****  */
  81:../../../platform/sam/drivers/eic/eic.c **** void eic_line_set_config(Eic *eic, uint8_t line_number,
  82:../../../platform/sam/drivers/eic/eic.c **** 	struct eic_line_config *eic_line_conf)
  83:../../../platform/sam/drivers/eic/eic.c **** {
 608              	 .loc 7 83 0
 609              	 .cfi_startproc
 610              	 
 611              	 
 612              	 
 613 01c0 80B4     	 push {r7}
 614              	.LCFI51:
 615              	 .cfi_def_cfa_offset 4
 616              	 .cfi_offset 7,-4
 617 01c2 85B0     	 sub sp,sp,#20
 618              	.LCFI52:
 619              	 .cfi_def_cfa_offset 24
 620 01c4 00AF     	 add r7,sp,#0
 621              	.LCFI53:
 622              	 .cfi_def_cfa_register 7
 623 01c6 F860     	 str r0,[r7,#12]
 624 01c8 0B46     	 mov r3,r1
 625 01ca 7A60     	 str r2,[r7,#4]
 626 01cc FB72     	 strb r3,[r7,#11]
  84:../../../platform/sam/drivers/eic/eic.c **** 		/* Set up mode level */
  85:../../../platform/sam/drivers/eic/eic.c **** 		eic->EIC_MODE = (eic_line_conf->eic_mode == EIC_MODE_LEVEL_TRIGGERED)
 627              	 .loc 7 85 0
 628 01ce 7B68     	 ldr r3,[r7,#4]
 629 01d0 1B78     	 ldrb r3,[r3]
  86:../../../platform/sam/drivers/eic/eic.c **** 				? (eic->EIC_MODE | (1 << line_number))
  87:../../../platform/sam/drivers/eic/eic.c **** 				: (eic->EIC_MODE & ~(1 << line_number));
 630              	 .loc 7 87 0
 631 01d2 012B     	 cmp r3,#1
 632 01d4 07D1     	 bne .L33
  86:../../../platform/sam/drivers/eic/eic.c **** 				? (eic->EIC_MODE | (1 << line_number))
 633              	 .loc 7 86 0 discriminator 1
 634 01d6 FB68     	 ldr r3,[r7,#12]
 635 01d8 5B69     	 ldr r3,[r3,#20]
 636 01da FA7A     	 ldrb r2,[r7,#11]
 637 01dc 0121     	 movs r1,#1
 638 01de 01FA02F2 	 lsl r2,r1,r2
 639              	 .loc 7 87 0 discriminator 1
 640 01e2 1343     	 orrs r3,r3,r2
 641 01e4 07E0     	 b .L34
 642              	.L33:
 643              	 .loc 7 87 0 is_stmt 0 discriminator 2
 644 01e6 FB68     	 ldr r3,[r7,#12]
 645 01e8 5B69     	 ldr r3,[r3,#20]
 646 01ea FA7A     	 ldrb r2,[r7,#11]
 647 01ec 0121     	 movs r1,#1
 648 01ee 01FA02F2 	 lsl r2,r1,r2
 649 01f2 D243     	 mvns r2,r2
 650 01f4 1340     	 ands r3,r3,r2
 651              	.L34:
  85:../../../platform/sam/drivers/eic/eic.c **** 				? (eic->EIC_MODE | (1 << line_number))
 652              	 .loc 7 85 0 is_stmt 1
 653 01f6 FA68     	 ldr r2,[r7,#12]
 654 01f8 5361     	 str r3,[r2,#20]
  88:../../../platform/sam/drivers/eic/eic.c **** 		/* Set up edge type */
  89:../../../platform/sam/drivers/eic/eic.c **** 		eic->EIC_EDGE = (eic_line_conf->eic_edge == EIC_EDGE_RISING_EDGE)
 655              	 .loc 7 89 0
 656 01fa 7B68     	 ldr r3,[r7,#4]
 657 01fc 5B78     	 ldrb r3,[r3,#1]
  90:../../../platform/sam/drivers/eic/eic.c **** 				? (eic->EIC_EDGE | (1 << line_number))
  91:../../../platform/sam/drivers/eic/eic.c **** 				: (eic->EIC_EDGE & ~(1 << line_number));
 658              	 .loc 7 91 0
 659 01fe 012B     	 cmp r3,#1
 660 0200 07D1     	 bne .L35
  90:../../../platform/sam/drivers/eic/eic.c **** 				? (eic->EIC_EDGE | (1 << line_number))
 661              	 .loc 7 90 0 discriminator 1
 662 0202 FB68     	 ldr r3,[r7,#12]
 663 0204 9B69     	 ldr r3,[r3,#24]
 664 0206 FA7A     	 ldrb r2,[r7,#11]
 665 0208 0121     	 movs r1,#1
 666 020a 01FA02F2 	 lsl r2,r1,r2
 667              	 .loc 7 91 0 discriminator 1
 668 020e 1343     	 orrs r3,r3,r2
 669 0210 07E0     	 b .L36
 670              	.L35:
 671              	 .loc 7 91 0 is_stmt 0 discriminator 2
 672 0212 FB68     	 ldr r3,[r7,#12]
 673 0214 9B69     	 ldr r3,[r3,#24]
 674 0216 FA7A     	 ldrb r2,[r7,#11]
 675 0218 0121     	 movs r1,#1
 676 021a 01FA02F2 	 lsl r2,r1,r2
 677 021e D243     	 mvns r2,r2
 678 0220 1340     	 ands r3,r3,r2
 679              	.L36:
  89:../../../platform/sam/drivers/eic/eic.c **** 				? (eic->EIC_EDGE | (1 << line_number))
 680              	 .loc 7 89 0 is_stmt 1
 681 0222 FA68     	 ldr r2,[r7,#12]
 682 0224 9361     	 str r3,[r2,#24]
  92:../../../platform/sam/drivers/eic/eic.c **** 		/* Set up level */
  93:../../../platform/sam/drivers/eic/eic.c **** 		eic->EIC_LEVEL = (eic_line_conf->eic_level == EIC_LEVEL_HIGH_LEVEL)
 683              	 .loc 7 93 0
 684 0226 7B68     	 ldr r3,[r7,#4]
 685 0228 9B78     	 ldrb r3,[r3,#2]
  94:../../../platform/sam/drivers/eic/eic.c **** 				? (eic->EIC_LEVEL | (1 << line_number))
  95:../../../platform/sam/drivers/eic/eic.c **** 				: (eic->EIC_LEVEL & ~(1 << line_number));
 686              	 .loc 7 95 0
 687 022a 012B     	 cmp r3,#1
 688 022c 07D1     	 bne .L37
  94:../../../platform/sam/drivers/eic/eic.c **** 				? (eic->EIC_LEVEL | (1 << line_number))
 689              	 .loc 7 94 0 discriminator 1
 690 022e FB68     	 ldr r3,[r7,#12]
 691 0230 DB69     	 ldr r3,[r3,#28]
 692 0232 FA7A     	 ldrb r2,[r7,#11]
 693 0234 0121     	 movs r1,#1
 694 0236 01FA02F2 	 lsl r2,r1,r2
 695              	 .loc 7 95 0 discriminator 1
 696 023a 1343     	 orrs r3,r3,r2
 697 023c 07E0     	 b .L38
 698              	.L37:
 699              	 .loc 7 95 0 is_stmt 0 discriminator 2
 700 023e FB68     	 ldr r3,[r7,#12]
 701 0240 DB69     	 ldr r3,[r3,#28]
 702 0242 FA7A     	 ldrb r2,[r7,#11]
 703 0244 0121     	 movs r1,#1
 704 0246 01FA02F2 	 lsl r2,r1,r2
 705 024a D243     	 mvns r2,r2
 706 024c 1340     	 ands r3,r3,r2
 707              	.L38:
  93:../../../platform/sam/drivers/eic/eic.c **** 				? (eic->EIC_LEVEL | (1 << line_number))
 708              	 .loc 7 93 0 is_stmt 1
 709 024e FA68     	 ldr r2,[r7,#12]
 710 0250 D361     	 str r3,[r2,#28]
  96:../../../platform/sam/drivers/eic/eic.c **** 		/* Set up if filter is used */
  97:../../../platform/sam/drivers/eic/eic.c **** 		eic->EIC_FILTER = (eic_line_conf->eic_filter == EIC_FILTER_ENABLED)
 711              	 .loc 7 97 0
 712 0252 7B68     	 ldr r3,[r7,#4]
 713 0254 DB78     	 ldrb r3,[r3,#3]
  98:../../../platform/sam/drivers/eic/eic.c **** 				? (eic->EIC_FILTER | (1 << line_number))
  99:../../../platform/sam/drivers/eic/eic.c **** 				: (eic->EIC_FILTER & ~(1 << line_number));
 714              	 .loc 7 99 0
 715 0256 012B     	 cmp r3,#1
 716 0258 07D1     	 bne .L39
  98:../../../platform/sam/drivers/eic/eic.c **** 				? (eic->EIC_FILTER | (1 << line_number))
 717              	 .loc 7 98 0 discriminator 1
 718 025a FB68     	 ldr r3,[r7,#12]
 719 025c 1B6A     	 ldr r3,[r3,#32]
 720 025e FA7A     	 ldrb r2,[r7,#11]
 721 0260 0121     	 movs r1,#1
 722 0262 01FA02F2 	 lsl r2,r1,r2
 723              	 .loc 7 99 0 discriminator 1
 724 0266 1343     	 orrs r3,r3,r2
 725 0268 07E0     	 b .L40
 726              	.L39:
 727              	 .loc 7 99 0 is_stmt 0 discriminator 2
 728 026a FB68     	 ldr r3,[r7,#12]
 729 026c 1B6A     	 ldr r3,[r3,#32]
 730 026e FA7A     	 ldrb r2,[r7,#11]
 731 0270 0121     	 movs r1,#1
 732 0272 01FA02F2 	 lsl r2,r1,r2
 733 0276 D243     	 mvns r2,r2
 734 0278 1340     	 ands r3,r3,r2
 735              	.L40:
  97:../../../platform/sam/drivers/eic/eic.c **** 				? (eic->EIC_FILTER | (1 << line_number))
 736              	 .loc 7 97 0 is_stmt 1
 737 027a FA68     	 ldr r2,[r7,#12]
 738 027c 1362     	 str r3,[r2,#32]
 100:../../../platform/sam/drivers/eic/eic.c **** 		/* Set up which mode is used : asynchronous mode/ synchronous mode */
 101:../../../platform/sam/drivers/eic/eic.c **** 		eic->EIC_ASYNC = (eic_line_conf->eic_async == EIC_ASYNCH_MODE)
 739              	 .loc 7 101 0
 740 027e 7B68     	 ldr r3,[r7,#4]
 741 0280 1B79     	 ldrb r3,[r3,#4]
 102:../../../platform/sam/drivers/eic/eic.c **** 				? (eic->EIC_ASYNC | (1 << line_number))
 103:../../../platform/sam/drivers/eic/eic.c **** 				: (eic->EIC_ASYNC & ~(1 << line_number));
 742              	 .loc 7 103 0
 743 0282 012B     	 cmp r3,#1
 744 0284 07D1     	 bne .L41
 102:../../../platform/sam/drivers/eic/eic.c **** 				? (eic->EIC_ASYNC | (1 << line_number))
 745              	 .loc 7 102 0 discriminator 1
 746 0286 FB68     	 ldr r3,[r7,#12]
 747 0288 9B6A     	 ldr r3,[r3,#40]
 748 028a FA7A     	 ldrb r2,[r7,#11]
 749 028c 0121     	 movs r1,#1
 750 028e 01FA02F2 	 lsl r2,r1,r2
 751              	 .loc 7 103 0 discriminator 1
 752 0292 1343     	 orrs r3,r3,r2
 753 0294 07E0     	 b .L42
 754              	.L41:
 755              	 .loc 7 103 0 is_stmt 0 discriminator 2
 756 0296 FB68     	 ldr r3,[r7,#12]
 757 0298 9B6A     	 ldr r3,[r3,#40]
 758 029a FA7A     	 ldrb r2,[r7,#11]
 759 029c 0121     	 movs r1,#1
 760 029e 01FA02F2 	 lsl r2,r1,r2
 761 02a2 D243     	 mvns r2,r2
 762 02a4 1340     	 ands r3,r3,r2
 763              	.L42:
 101:../../../platform/sam/drivers/eic/eic.c **** 				? (eic->EIC_ASYNC | (1 << line_number))
 764              	 .loc 7 101 0 is_stmt 1
 765 02a6 FA68     	 ldr r2,[r7,#12]
 766 02a8 9362     	 str r3,[r2,#40]
 104:../../../platform/sam/drivers/eic/eic.c **** 
 105:../../../platform/sam/drivers/eic/eic.c **** }
 767              	 .loc 7 105 0
 768 02aa 00BF     	 nop
 769 02ac 1437     	 adds r7,r7,#20
 770              	.LCFI54:
 771              	 .cfi_def_cfa_offset 4
 772 02ae BD46     	 mov sp,r7
 773              	.LCFI55:
 774              	 .cfi_def_cfa_register 13
 775              	 
 776 02b0 80BC     	 pop {r7}
 777              	.LCFI56:
 778              	 .cfi_restore 7
 779              	 .cfi_def_cfa_offset 0
 780 02b2 7047     	 bx lr
 781              	 .cfi_endproc
 782              	.LFE196:
 784              	 .align 1
 785              	 .global eic_disable
 786              	 .syntax unified
 787              	 .thumb
 788              	 .thumb_func
 789              	 .fpu softvfp
 791              	eic_disable:
 792              	.LFB197:
 106:../../../platform/sam/drivers/eic/eic.c **** 
 107:../../../platform/sam/drivers/eic/eic.c **** /**
 108:../../../platform/sam/drivers/eic/eic.c ****  * \brief Disable the EIC module
 109:../../../platform/sam/drivers/eic/eic.c ****  *
 110:../../../platform/sam/drivers/eic/eic.c ****  * \param [in]  eic Base address of the EIC module
 111:../../../platform/sam/drivers/eic/eic.c ****  */
 112:../../../platform/sam/drivers/eic/eic.c **** void eic_disable(Eic *eic)
 113:../../../platform/sam/drivers/eic/eic.c **** {
 793              	 .loc 7 113 0
 794              	 .cfi_startproc
 795              	 
 796              	 
 797 02b4 80B5     	 push {r7,lr}
 798              	.LCFI57:
 799              	 .cfi_def_cfa_offset 8
 800              	 .cfi_offset 7,-8
 801              	 .cfi_offset 14,-4
 802 02b6 82B0     	 sub sp,sp,#8
 803              	.LCFI58:
 804              	 .cfi_def_cfa_offset 16
 805 02b8 00AF     	 add r7,sp,#0
 806              	.LCFI59:
 807              	 .cfi_def_cfa_register 7
 808 02ba 7860     	 str r0,[r7,#4]
 114:../../../platform/sam/drivers/eic/eic.c **** 	sysclk_disable_peripheral_clock(eic);
 809              	 .loc 7 114 0
 810 02bc 7868     	 ldr r0,[r7,#4]
 811 02be 044B     	 ldr r3,.L44
 812 02c0 9847     	 blx r3
 813              	.LVL0:
 115:../../../platform/sam/drivers/eic/eic.c **** 	sleepmgr_unlock_mode(SLEEPMGR_BACKUP);
 814              	 .loc 7 115 0
 815 02c2 0720     	 movs r0,#7
 816 02c4 FFF764FF 	 bl sleepmgr_unlock_mode
 116:../../../platform/sam/drivers/eic/eic.c **** }
 817              	 .loc 7 116 0
 818 02c8 00BF     	 nop
 819 02ca 0837     	 adds r7,r7,#8
 820              	.LCFI60:
 821              	 .cfi_def_cfa_offset 8
 822 02cc BD46     	 mov sp,r7
 823              	.LCFI61:
 824              	 .cfi_def_cfa_register 13
 825              	 
 826 02ce 80BD     	 pop {r7,pc}
 827              	.L45:
 828              	 .align 2
 829              	.L44:
 830 02d0 00000000 	 .word sysclk_disable_peripheral_clock
 831              	 .cfi_endproc
 832              	.LFE197:
 834              	 .align 1
 835              	 .global eic_enable
 836              	 .syntax unified
 837              	 .thumb
 838              	 .thumb_func
 839              	 .fpu softvfp
 841              	eic_enable:
 842              	.LFB198:
 117:../../../platform/sam/drivers/eic/eic.c **** 
 118:../../../platform/sam/drivers/eic/eic.c **** /**
 119:../../../platform/sam/drivers/eic/eic.c ****  * \brief Enable the EIC module
 120:../../../platform/sam/drivers/eic/eic.c ****  *
 121:../../../platform/sam/drivers/eic/eic.c ****  * \param [in]  eic Base address of the EIC module
 122:../../../platform/sam/drivers/eic/eic.c ****  */
 123:../../../platform/sam/drivers/eic/eic.c **** void eic_enable(Eic *eic)
 124:../../../platform/sam/drivers/eic/eic.c **** {
 843              	 .loc 7 124 0
 844              	 .cfi_startproc
 845              	 
 846              	 
 847 02d4 80B5     	 push {r7,lr}
 848              	.LCFI62:
 849              	 .cfi_def_cfa_offset 8
 850              	 .cfi_offset 7,-8
 851              	 .cfi_offset 14,-4
 852 02d6 82B0     	 sub sp,sp,#8
 853              	.LCFI63:
 854              	 .cfi_def_cfa_offset 16
 855 02d8 00AF     	 add r7,sp,#0
 856              	.LCFI64:
 857              	 .cfi_def_cfa_register 7
 858 02da 7860     	 str r0,[r7,#4]
 125:../../../platform/sam/drivers/eic/eic.c **** 	sysclk_enable_peripheral_clock(eic);
 859              	 .loc 7 125 0
 860 02dc 7868     	 ldr r0,[r7,#4]
 861 02de 044B     	 ldr r3,.L47
 862 02e0 9847     	 blx r3
 863              	.LVL1:
 126:../../../platform/sam/drivers/eic/eic.c **** 	sleepmgr_lock_mode(SLEEPMGR_BACKUP);
 864              	 .loc 7 126 0
 865 02e2 0720     	 movs r0,#7
 866 02e4 FFF73CFF 	 bl sleepmgr_lock_mode
 127:../../../platform/sam/drivers/eic/eic.c **** }
 867              	 .loc 7 127 0
 868 02e8 00BF     	 nop
 869 02ea 0837     	 adds r7,r7,#8
 870              	.LCFI65:
 871              	 .cfi_def_cfa_offset 8
 872 02ec BD46     	 mov sp,r7
 873              	.LCFI66:
 874              	 .cfi_def_cfa_register 13
 875              	 
 876 02ee 80BD     	 pop {r7,pc}
 877              	.L48:
 878              	 .align 2
 879              	.L47:
 880 02f0 00000000 	 .word sysclk_enable_peripheral_clock
 881              	 .cfi_endproc
 882              	.LFE198:
 884              	 .align 1
 885              	 .global eic_line_set_callback
 886              	 .syntax unified
 887              	 .thumb
 888              	 .thumb_func
 889              	 .fpu softvfp
 891              	eic_line_set_callback:
 892              	.LFB199:
 128:../../../platform/sam/drivers/eic/eic.c **** 
 129:../../../platform/sam/drivers/eic/eic.c **** /**
 130:../../../platform/sam/drivers/eic/eic.c ****  * \brief Set callback for given EIC line
 131:../../../platform/sam/drivers/eic/eic.c ****  *
 132:../../../platform/sam/drivers/eic/eic.c ****  * \param [in]  eic Base address of the EIC module
 133:../../../platform/sam/drivers/eic/eic.c ****  * \param [in]  line_number Number of line
 134:../../../platform/sam/drivers/eic/eic.c ****  * \param [in]  callback Callback function pointer
 135:../../../platform/sam/drivers/eic/eic.c ****  * \param [in]  irq_line  Interrupt line number (EIC_1_IRQn to EIC_8_IRQn)
 136:../../../platform/sam/drivers/eic/eic.c ****  * \param [in]  irq_level Interrupt level (the priority of the interrupt request)
 137:../../../platform/sam/drivers/eic/eic.c ****  */
 138:../../../platform/sam/drivers/eic/eic.c **** void eic_line_set_callback(Eic *eic, uint8_t line_number,
 139:../../../platform/sam/drivers/eic/eic.c **** 	eic_callback_t callback, uint8_t irq_line, uint8_t irq_level)
 140:../../../platform/sam/drivers/eic/eic.c **** {
 893              	 .loc 7 140 0
 894              	 .cfi_startproc
 895              	 
 896              	 
 897 02f4 80B5     	 push {r7,lr}
 898              	.LCFI67:
 899              	 .cfi_def_cfa_offset 8
 900              	 .cfi_offset 7,-8
 901              	 .cfi_offset 14,-4
 902 02f6 84B0     	 sub sp,sp,#16
 903              	.LCFI68:
 904              	 .cfi_def_cfa_offset 24
 905 02f8 00AF     	 add r7,sp,#0
 906              	.LCFI69:
 907              	 .cfi_def_cfa_register 7
 908 02fa F860     	 str r0,[r7,#12]
 909 02fc 7A60     	 str r2,[r7,#4]
 910 02fe 1A46     	 mov r2,r3
 911 0300 0B46     	 mov r3,r1
 912 0302 FB72     	 strb r3,[r7,#11]
 913 0304 1346     	 mov r3,r2
 914 0306 BB72     	 strb r3,[r7,#10]
 141:../../../platform/sam/drivers/eic/eic.c **** 	eic_callback_pointer[line_number] = callback;
 915              	 .loc 7 141 0
 916 0308 FB7A     	 ldrb r3,[r7,#11]
 917 030a 0F49     	 ldr r1,.L50
 918 030c 7A68     	 ldr r2,[r7,#4]
 919 030e 41F82320 	 str r2,[r1,r3,lsl#2]
 142:../../../platform/sam/drivers/eic/eic.c **** 	irq_register_handler((IRQn_Type)irq_line, irq_level);
 920              	 .loc 7 142 0
 921 0312 97F90A30 	 ldrsb r3,[r7,#10]
 922 0316 1846     	 mov r0,r3
 923 0318 FFF78AFE 	 bl NVIC_ClearPendingIRQ
 924 031c 97F90A30 	 ldrsb r3,[r7,#10]
 925 0320 3A7E     	 ldrb r2,[r7,#24]
 926 0322 1146     	 mov r1,r2
 927 0324 1846     	 mov r0,r3
 928 0326 FFF79DFE 	 bl NVIC_SetPriority
 929 032a 97F90A30 	 ldrsb r3,[r7,#10]
 930 032e 1846     	 mov r0,r3
 931 0330 FFF766FE 	 bl NVIC_EnableIRQ
 143:../../../platform/sam/drivers/eic/eic.c **** 	eic_line_enable_interrupt(eic, line_number);
 932              	 .loc 7 143 0
 933 0334 FB7A     	 ldrb r3,[r7,#11]
 934 0336 1946     	 mov r1,r3
 935 0338 F868     	 ldr r0,[r7,#12]
 936 033a FFF7FFFE 	 bl eic_line_enable_interrupt
 144:../../../platform/sam/drivers/eic/eic.c **** }
 937              	 .loc 7 144 0
 938 033e 00BF     	 nop
 939 0340 1037     	 adds r7,r7,#16
 940              	.LCFI70:
 941              	 .cfi_def_cfa_offset 8
 942 0342 BD46     	 mov sp,r7
 943              	.LCFI71:
 944              	 .cfi_def_cfa_register 13
 945              	 
 946 0344 80BD     	 pop {r7,pc}
 947              	.L51:
 948 0346 00BF     	 .align 2
 949              	.L50:
 950 0348 00000000 	 .word eic_callback_pointer
 951              	 .cfi_endproc
 952              	.LFE199:
 954              	 .align 1
 955              	 .syntax unified
 956              	 .thumb
 957              	 .thumb_func
 958              	 .fpu softvfp
 960              	eic_line_interrupt:
 961              	.LFB200:
 145:../../../platform/sam/drivers/eic/eic.c **** 
 146:../../../platform/sam/drivers/eic/eic.c **** /**
 147:../../../platform/sam/drivers/eic/eic.c ****  * \internal
 148:../../../platform/sam/drivers/eic/eic.c ****  * \brief Common EIC line interrupt handler
 149:../../../platform/sam/drivers/eic/eic.c ****  *
 150:../../../platform/sam/drivers/eic/eic.c ****  * The optional callback used by the interrupt handler is set by the
 151:../../../platform/sam/drivers/eic/eic.c ****  * eic_line_set_callback() function.
 152:../../../platform/sam/drivers/eic/eic.c ****  *
 153:../../../platform/sam/drivers/eic/eic.c ****  * \param [in]  line_number EIC line number to handle interrupt for
 154:../../../platform/sam/drivers/eic/eic.c ****  */
 155:../../../platform/sam/drivers/eic/eic.c **** static void eic_line_interrupt(uint8_t line_number)
 156:../../../platform/sam/drivers/eic/eic.c **** {
 962              	 .loc 7 156 0
 963              	 .cfi_startproc
 964              	 
 965              	 
 966 034c 80B5     	 push {r7,lr}
 967              	.LCFI72:
 968              	 .cfi_def_cfa_offset 8
 969              	 .cfi_offset 7,-8
 970              	 .cfi_offset 14,-4
 971 034e 82B0     	 sub sp,sp,#8
 972              	.LCFI73:
 973              	 .cfi_def_cfa_offset 16
 974 0350 00AF     	 add r7,sp,#0
 975              	.LCFI74:
 976              	 .cfi_def_cfa_register 7
 977 0352 0346     	 mov r3,r0
 978 0354 FB71     	 strb r3,[r7,#7]
 157:../../../platform/sam/drivers/eic/eic.c **** 	if (eic_callback_pointer[line_number]) {
 979              	 .loc 7 157 0
 980 0356 FB79     	 ldrb r3,[r7,#7]
 981 0358 064A     	 ldr r2,.L55
 982 035a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 983 035e 002B     	 cmp r3,#0
 984 0360 04D0     	 beq .L54
 158:../../../platform/sam/drivers/eic/eic.c **** 		eic_callback_pointer[line_number]();
 985              	 .loc 7 158 0
 986 0362 FB79     	 ldrb r3,[r7,#7]
 987 0364 034A     	 ldr r2,.L55
 988 0366 52F82330 	 ldr r3,[r2,r3,lsl#2]
 989 036a 9847     	 blx r3
 990              	.LVL2:
 991              	.L54:
 159:../../../platform/sam/drivers/eic/eic.c **** 	} else {
 160:../../../platform/sam/drivers/eic/eic.c **** 		Assert(false); /* Catch unexpected interrupt */
 161:../../../platform/sam/drivers/eic/eic.c **** 	}
 162:../../../platform/sam/drivers/eic/eic.c **** }
 992              	 .loc 7 162 0
 993 036c 00BF     	 nop
 994 036e 0837     	 adds r7,r7,#8
 995              	.LCFI75:
 996              	 .cfi_def_cfa_offset 8
 997 0370 BD46     	 mov sp,r7
 998              	.LCFI76:
 999              	 .cfi_def_cfa_register 13
 1000              	 
 1001 0372 80BD     	 pop {r7,pc}
 1002              	.L56:
 1003              	 .align 2
 1004              	.L55:
 1005 0374 00000000 	 .word eic_callback_pointer
 1006              	 .cfi_endproc
 1007              	.LFE200:
 1009              	 .align 1
 1010              	 .global NMI_Handler
 1011              	 .syntax unified
 1012              	 .thumb
 1013              	 .thumb_func
 1014              	 .fpu softvfp
 1016              	NMI_Handler:
 1017              	.LFB201:
 163:../../../platform/sam/drivers/eic/eic.c **** 
 164:../../../platform/sam/drivers/eic/eic.c **** /**
 165:../../../platform/sam/drivers/eic/eic.c ****  * \brief Interrupt handler for EIC NMI.
 166:../../../platform/sam/drivers/eic/eic.c ****  */
 167:../../../platform/sam/drivers/eic/eic.c **** void NMI_Handler(void)
 168:../../../platform/sam/drivers/eic/eic.c **** {
 1018              	 .loc 7 168 0
 1019              	 .cfi_startproc
 1020              	 
 1021              	 
 1022 0378 80B5     	 push {r7,lr}
 1023              	.LCFI77:
 1024              	 .cfi_def_cfa_offset 8
 1025              	 .cfi_offset 7,-8
 1026              	 .cfi_offset 14,-4
 1027 037a 00AF     	 add r7,sp,#0
 1028              	.LCFI78:
 1029              	 .cfi_def_cfa_register 7
 169:../../../platform/sam/drivers/eic/eic.c **** 	eic_line_interrupt(0);
 1030              	 .loc 7 169 0
 1031 037c 0020     	 movs r0,#0
 1032 037e FFF7E5FF 	 bl eic_line_interrupt
 170:../../../platform/sam/drivers/eic/eic.c **** }
 1033              	 .loc 7 170 0
 1034 0382 00BF     	 nop
 1035 0384 80BD     	 pop {r7,pc}
 1036              	 .cfi_endproc
 1037              	.LFE201:
 1039              	 .align 1
 1040              	 .global EIC_1_Handler
 1041              	 .syntax unified
 1042              	 .thumb
 1043              	 .thumb_func
 1044              	 .fpu softvfp
 1046              	EIC_1_Handler:
 1047              	.LFB202:
 171:../../../platform/sam/drivers/eic/eic.c **** 
 172:../../../platform/sam/drivers/eic/eic.c **** /**
 173:../../../platform/sam/drivers/eic/eic.c ****  * \brief Interrupt handler for EIC line 1.
 174:../../../platform/sam/drivers/eic/eic.c ****  */
 175:../../../platform/sam/drivers/eic/eic.c **** void EIC_1_Handler(void)
 176:../../../platform/sam/drivers/eic/eic.c **** {
 1048              	 .loc 7 176 0
 1049              	 .cfi_startproc
 1050              	 
 1051              	 
 1052 0386 80B5     	 push {r7,lr}
 1053              	.LCFI79:
 1054              	 .cfi_def_cfa_offset 8
 1055              	 .cfi_offset 7,-8
 1056              	 .cfi_offset 14,-4
 1057 0388 00AF     	 add r7,sp,#0
 1058              	.LCFI80:
 1059              	 .cfi_def_cfa_register 7
 177:../../../platform/sam/drivers/eic/eic.c **** 	eic_line_interrupt(1);
 1060              	 .loc 7 177 0
 1061 038a 0120     	 movs r0,#1
 1062 038c FFF7DEFF 	 bl eic_line_interrupt
 178:../../../platform/sam/drivers/eic/eic.c **** }
 1063              	 .loc 7 178 0
 1064 0390 00BF     	 nop
 1065 0392 80BD     	 pop {r7,pc}
 1066              	 .cfi_endproc
 1067              	.LFE202:
 1069              	 .align 1
 1070              	 .global EIC_2_Handler
 1071              	 .syntax unified
 1072              	 .thumb
 1073              	 .thumb_func
 1074              	 .fpu softvfp
 1076              	EIC_2_Handler:
 1077              	.LFB203:
 179:../../../platform/sam/drivers/eic/eic.c **** 
 180:../../../platform/sam/drivers/eic/eic.c **** /**
 181:../../../platform/sam/drivers/eic/eic.c ****  * \brief Interrupt handler for EIC line 2.
 182:../../../platform/sam/drivers/eic/eic.c ****  */
 183:../../../platform/sam/drivers/eic/eic.c **** void EIC_2_Handler(void)
 184:../../../platform/sam/drivers/eic/eic.c **** {
 1078              	 .loc 7 184 0
 1079              	 .cfi_startproc
 1080              	 
 1081              	 
 1082 0394 80B5     	 push {r7,lr}
 1083              	.LCFI81:
 1084              	 .cfi_def_cfa_offset 8
 1085              	 .cfi_offset 7,-8
 1086              	 .cfi_offset 14,-4
 1087 0396 00AF     	 add r7,sp,#0
 1088              	.LCFI82:
 1089              	 .cfi_def_cfa_register 7
 185:../../../platform/sam/drivers/eic/eic.c **** 	eic_line_interrupt(2);
 1090              	 .loc 7 185 0
 1091 0398 0220     	 movs r0,#2
 1092 039a FFF7D7FF 	 bl eic_line_interrupt
 186:../../../platform/sam/drivers/eic/eic.c **** }
 1093              	 .loc 7 186 0
 1094 039e 00BF     	 nop
 1095 03a0 80BD     	 pop {r7,pc}
 1096              	 .cfi_endproc
 1097              	.LFE203:
 1099              	 .align 1
 1100              	 .global EIC_3_Handler
 1101              	 .syntax unified
 1102              	 .thumb
 1103              	 .thumb_func
 1104              	 .fpu softvfp
 1106              	EIC_3_Handler:
 1107              	.LFB204:
 187:../../../platform/sam/drivers/eic/eic.c **** 
 188:../../../platform/sam/drivers/eic/eic.c **** /**
 189:../../../platform/sam/drivers/eic/eic.c ****  * \brief Interrupt handler for EIC line 3.
 190:../../../platform/sam/drivers/eic/eic.c ****  */
 191:../../../platform/sam/drivers/eic/eic.c **** void EIC_3_Handler(void)
 192:../../../platform/sam/drivers/eic/eic.c **** {
 1108              	 .loc 7 192 0
 1109              	 .cfi_startproc
 1110              	 
 1111              	 
 1112 03a2 80B5     	 push {r7,lr}
 1113              	.LCFI83:
 1114              	 .cfi_def_cfa_offset 8
 1115              	 .cfi_offset 7,-8
 1116              	 .cfi_offset 14,-4
 1117 03a4 00AF     	 add r7,sp,#0
 1118              	.LCFI84:
 1119              	 .cfi_def_cfa_register 7
 193:../../../platform/sam/drivers/eic/eic.c **** 	eic_line_interrupt(3);
 1120              	 .loc 7 193 0
 1121 03a6 0320     	 movs r0,#3
 1122 03a8 FFF7D0FF 	 bl eic_line_interrupt
 194:../../../platform/sam/drivers/eic/eic.c **** }
 1123              	 .loc 7 194 0
 1124 03ac 00BF     	 nop
 1125 03ae 80BD     	 pop {r7,pc}
 1126              	 .cfi_endproc
 1127              	.LFE204:
 1129              	 .align 1
 1130              	 .global EIC_4_Handler
 1131              	 .syntax unified
 1132              	 .thumb
 1133              	 .thumb_func
 1134              	 .fpu softvfp
 1136              	EIC_4_Handler:
 1137              	.LFB205:
 195:../../../platform/sam/drivers/eic/eic.c **** 
 196:../../../platform/sam/drivers/eic/eic.c **** /**
 197:../../../platform/sam/drivers/eic/eic.c ****  * \brief Interrupt handler for EIC line 4.
 198:../../../platform/sam/drivers/eic/eic.c ****  */
 199:../../../platform/sam/drivers/eic/eic.c **** void EIC_4_Handler(void)
 200:../../../platform/sam/drivers/eic/eic.c **** {
 1138              	 .loc 7 200 0
 1139              	 .cfi_startproc
 1140              	 
 1141              	 
 1142 03b0 80B5     	 push {r7,lr}
 1143              	.LCFI85:
 1144              	 .cfi_def_cfa_offset 8
 1145              	 .cfi_offset 7,-8
 1146              	 .cfi_offset 14,-4
 1147 03b2 00AF     	 add r7,sp,#0
 1148              	.LCFI86:
 1149              	 .cfi_def_cfa_register 7
 201:../../../platform/sam/drivers/eic/eic.c **** 	eic_line_interrupt(4);
 1150              	 .loc 7 201 0
 1151 03b4 0420     	 movs r0,#4
 1152 03b6 FFF7C9FF 	 bl eic_line_interrupt
 202:../../../platform/sam/drivers/eic/eic.c **** }
 1153              	 .loc 7 202 0
 1154 03ba 00BF     	 nop
 1155 03bc 80BD     	 pop {r7,pc}
 1156              	 .cfi_endproc
 1157              	.LFE205:
 1159              	 .align 1
 1160              	 .global EIC_5_Handler
 1161              	 .syntax unified
 1162              	 .thumb
 1163              	 .thumb_func
 1164              	 .fpu softvfp
 1166              	EIC_5_Handler:
 1167              	.LFB206:
 203:../../../platform/sam/drivers/eic/eic.c **** 
 204:../../../platform/sam/drivers/eic/eic.c **** /**
 205:../../../platform/sam/drivers/eic/eic.c ****  * \brief Interrupt handler for EIC line 5.
 206:../../../platform/sam/drivers/eic/eic.c ****  */
 207:../../../platform/sam/drivers/eic/eic.c **** void EIC_5_Handler(void)
 208:../../../platform/sam/drivers/eic/eic.c **** {
 1168              	 .loc 7 208 0
 1169              	 .cfi_startproc
 1170              	 
 1171              	 
 1172 03be 80B5     	 push {r7,lr}
 1173              	.LCFI87:
 1174              	 .cfi_def_cfa_offset 8
 1175              	 .cfi_offset 7,-8
 1176              	 .cfi_offset 14,-4
 1177 03c0 00AF     	 add r7,sp,#0
 1178              	.LCFI88:
 1179              	 .cfi_def_cfa_register 7
 209:../../../platform/sam/drivers/eic/eic.c **** 	eic_line_interrupt(5);
 1180              	 .loc 7 209 0
 1181 03c2 0520     	 movs r0,#5
 1182 03c4 FFF7C2FF 	 bl eic_line_interrupt
 210:../../../platform/sam/drivers/eic/eic.c **** }
 1183              	 .loc 7 210 0
 1184 03c8 00BF     	 nop
 1185 03ca 80BD     	 pop {r7,pc}
 1186              	 .cfi_endproc
 1187              	.LFE206:
 1189              	 .align 1
 1190              	 .global EIC_6_Handler
 1191              	 .syntax unified
 1192              	 .thumb
 1193              	 .thumb_func
 1194              	 .fpu softvfp
 1196              	EIC_6_Handler:
 1197              	.LFB207:
 211:../../../platform/sam/drivers/eic/eic.c **** 
 212:../../../platform/sam/drivers/eic/eic.c **** /**
 213:../../../platform/sam/drivers/eic/eic.c ****  * \brief Interrupt handler for EIC line 6.
 214:../../../platform/sam/drivers/eic/eic.c ****  */
 215:../../../platform/sam/drivers/eic/eic.c **** void EIC_6_Handler(void)
 216:../../../platform/sam/drivers/eic/eic.c **** {
 1198              	 .loc 7 216 0
 1199              	 .cfi_startproc
 1200              	 
 1201              	 
 1202 03cc 80B5     	 push {r7,lr}
 1203              	.LCFI89:
 1204              	 .cfi_def_cfa_offset 8
 1205              	 .cfi_offset 7,-8
 1206              	 .cfi_offset 14,-4
 1207 03ce 00AF     	 add r7,sp,#0
 1208              	.LCFI90:
 1209              	 .cfi_def_cfa_register 7
 217:../../../platform/sam/drivers/eic/eic.c **** 	eic_line_interrupt(6);
 1210              	 .loc 7 217 0
 1211 03d0 0620     	 movs r0,#6
 1212 03d2 FFF7BBFF 	 bl eic_line_interrupt
 218:../../../platform/sam/drivers/eic/eic.c **** }
 1213              	 .loc 7 218 0
 1214 03d6 00BF     	 nop
 1215 03d8 80BD     	 pop {r7,pc}
 1216              	 .cfi_endproc
 1217              	.LFE207:
 1219              	 .align 1
 1220              	 .global EIC_7_Handler
 1221              	 .syntax unified
 1222              	 .thumb
 1223              	 .thumb_func
 1224              	 .fpu softvfp
 1226              	EIC_7_Handler:
 1227              	.LFB208:
 219:../../../platform/sam/drivers/eic/eic.c **** 
 220:../../../platform/sam/drivers/eic/eic.c **** /**
 221:../../../platform/sam/drivers/eic/eic.c ****  * \brief Interrupt handler for EIC line 7.
 222:../../../platform/sam/drivers/eic/eic.c ****  */
 223:../../../platform/sam/drivers/eic/eic.c **** void EIC_7_Handler(void)
 224:../../../platform/sam/drivers/eic/eic.c **** {
 1228              	 .loc 7 224 0
 1229              	 .cfi_startproc
 1230              	 
 1231              	 
 1232 03da 80B5     	 push {r7,lr}
 1233              	.LCFI91:
 1234              	 .cfi_def_cfa_offset 8
 1235              	 .cfi_offset 7,-8
 1236              	 .cfi_offset 14,-4
 1237 03dc 00AF     	 add r7,sp,#0
 1238              	.LCFI92:
 1239              	 .cfi_def_cfa_register 7
 225:../../../platform/sam/drivers/eic/eic.c **** 	eic_line_interrupt(7);
 1240              	 .loc 7 225 0
 1241 03de 0720     	 movs r0,#7
 1242 03e0 FFF7B4FF 	 bl eic_line_interrupt
 226:../../../platform/sam/drivers/eic/eic.c **** }
 1243              	 .loc 7 226 0
 1244 03e4 00BF     	 nop
 1245 03e6 80BD     	 pop {r7,pc}
 1246              	 .cfi_endproc
 1247              	.LFE208:
 1249              	 .align 1
 1250              	 .global EIC_8_Handler
 1251              	 .syntax unified
 1252              	 .thumb
 1253              	 .thumb_func
 1254              	 .fpu softvfp
 1256              	EIC_8_Handler:
 1257              	.LFB209:
 227:../../../platform/sam/drivers/eic/eic.c **** 
 228:../../../platform/sam/drivers/eic/eic.c **** /**
 229:../../../platform/sam/drivers/eic/eic.c ****  * \brief Interrupt handler for EIC line 8.
 230:../../../platform/sam/drivers/eic/eic.c ****  */
 231:../../../platform/sam/drivers/eic/eic.c **** void EIC_8_Handler(void)
 232:../../../platform/sam/drivers/eic/eic.c **** {
 1258              	 .loc 7 232 0
 1259              	 .cfi_startproc
 1260              	 
 1261              	 
 1262 03e8 80B5     	 push {r7,lr}
 1263              	.LCFI93:
 1264              	 .cfi_def_cfa_offset 8
 1265              	 .cfi_offset 7,-8
 1266              	 .cfi_offset 14,-4
 1267 03ea 00AF     	 add r7,sp,#0
 1268              	.LCFI94:
 1269              	 .cfi_def_cfa_register 7
 233:../../../platform/sam/drivers/eic/eic.c **** 	eic_line_interrupt(8);
 1270              	 .loc 7 233 0
 1271 03ec 0820     	 movs r0,#8
 1272 03ee FFF7ADFF 	 bl eic_line_interrupt
 234:../../../platform/sam/drivers/eic/eic.c **** }
 1273              	 .loc 7 234 0
 1274 03f2 00BF     	 nop
 1275 03f4 80BD     	 pop {r7,pc}
 1276              	 .cfi_endproc
 1277              	.LFE209:
 1279              	.Letext0:
 1280              	 .file 8 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1281              	 .file 9 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1282              	 .file 10 "../../../platform/sam/utils/cmsis/sam4l/include/sam4lc4b.h"
 1283              	 .file 11 "../../../platform/sam/utils/cmsis/sam4l/source/templates/system_sam4l.h"
 1284              	 .file 12 "../../../platform/sam/utils/cmsis/sam4l/include/component/component_eic.h"
 1285              	 .file 13 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\lock.h"
 1286              	 .file 14 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_types.h"
 1287              	 .file 15 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 1288              	 .file 16 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\reent.h"
 1289              	 .file 17 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\stdlib.h"
 1290              	 .file 18 "../../../platform/sam/utils/compiler.h"
 1291              	 .file 19 "../../../platform/common/services/usb/usb_protocol.h"
 1292              	 .file 20 "../../../platform/common/services/usb/udc/udi.h"
 1293              	 .file 21 "../../../platform/common/services/usb/udc/udc_desc.h"
 1294              	 .file 22 "../../../platform/common/services/usb/udc/udd.h"
 1295              	 .file 23 "../../../platform/common/services/usb/class/cdc/device/udi_cdc.h"
 1296              	 .file 24 "../../../platform/common/utils/stdio/stdio_usb/stdio_usb.h"
 1297              	 .file 25 "../../../platform/common/services/sleepmgr/sam4l/sleepmgr.h"
 1298              	 .file 26 "../../../platform/common/services/clock/sam4l/sysclk.h"
DEFINED SYMBOLS
                            *ABS*:00000000 eic.c
    {standard input}:15     .text:00000000 $t
    {standard input}:21     .text:00000000 NVIC_EnableIRQ
    {standard input}:67     .text:0000002c $d
    {standard input}:71     .text:00000030 $t
    {standard input}:77     .text:00000030 NVIC_ClearPendingIRQ
    {standard input}:123    .text:00000060 $d
    {standard input}:127    .text:00000064 $t
    {standard input}:133    .text:00000064 NVIC_SetPriority
    {standard input}:198    .text:000000b0 $d
    {standard input}:204    .bss.cpu_irq_critical_section_counter:00000000 $d
    {standard input}:207    .bss.cpu_irq_critical_section_counter:00000000 cpu_irq_critical_section_counter
    {standard input}:212    .bss.cpu_irq_prev_interrupt_state:00000000 cpu_irq_prev_interrupt_state
    {standard input}:213    .bss.cpu_irq_prev_interrupt_state:00000000 $d
    {standard input}:215    .text:000000b8 $t
    {standard input}:221    .text:000000b8 cpu_irq_save
    {standard input}:307    .text:000000ec $d
    {standard input}:311    .text:000000f0 $t
    {standard input}:317    .text:000000f0 cpu_irq_is_enabled_flags
    {standard input}:365    .text:0000010e cpu_irq_restore
    {standard input}:429    .text:00000138 $d
    {standard input}:433    .text:0000013c $t
    {standard input}:439    .text:0000013c eic_line_enable_interrupt
    {standard input}:490    .text:00000160 sleepmgr_lock_mode
    {standard input}:537    .text:0000018c $d
    {standard input}:541    .text:00000190 $t
    {standard input}:547    .text:00000190 sleepmgr_unlock_mode
    {standard input}:593    .text:000001bc $d
                            *COM*:00000024 eic_callback_pointer
    {standard input}:598    .text:000001c0 $t
    {standard input}:605    .text:000001c0 eic_line_set_config
    {standard input}:791    .text:000002b4 eic_disable
    {standard input}:830    .text:000002d0 $d
    {standard input}:834    .text:000002d4 $t
    {standard input}:841    .text:000002d4 eic_enable
    {standard input}:880    .text:000002f0 $d
    {standard input}:884    .text:000002f4 $t
    {standard input}:891    .text:000002f4 eic_line_set_callback
    {standard input}:950    .text:00000348 $d
    {standard input}:954    .text:0000034c $t
    {standard input}:960    .text:0000034c eic_line_interrupt
    {standard input}:1005   .text:00000374 $d
    {standard input}:1009   .text:00000378 $t
    {standard input}:1016   .text:00000378 NMI_Handler
    {standard input}:1046   .text:00000386 EIC_1_Handler
    {standard input}:1076   .text:00000394 EIC_2_Handler
    {standard input}:1106   .text:000003a2 EIC_3_Handler
    {standard input}:1136   .text:000003b0 EIC_4_Handler
    {standard input}:1166   .text:000003be EIC_5_Handler
    {standard input}:1196   .text:000003cc EIC_6_Handler
    {standard input}:1226   .text:000003da EIC_7_Handler
    {standard input}:1256   .text:000003e8 EIC_8_Handler
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
g_interrupt_enabled
sleepmgr_locks
sysclk_disable_peripheral_clock
sysclk_enable_peripheral_clock
