   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,6
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "syscalls.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .align 1
  16              	 .global _sbrk
  17              	 .syntax unified
  18              	 .thumb
  19              	 .thumb_func
  20              	 .fpu softvfp
  22              	_sbrk:
  23              	.LFB1:
  24              	 .file 1 "../../../platform/sam/utils/syscalls/gcc/syscalls.c"
   1:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** /**
   2:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * \file
   3:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  *
   4:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * \brief Syscalls for SAM (GCC).
   5:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  *
   6:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * Copyright (c) 2011-2013 Atmel Corporation. All rights reserved.
   7:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  *
   8:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * \asf_license_start
   9:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  *
  10:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * \page License
  11:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  *
  12:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  *
  15:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  *
  18:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  *    and/or other materials provided with the distribution.
  21:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  *
  22:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  *    from this software without specific prior written permission.
  24:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  *
  25:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  *    Atmel microcontroller product.
  27:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  *
  28:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  *
  40:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  * \asf_license_stop
  41:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  *
  42:../../../platform/sam/utils/syscalls/gcc/syscalls.c ****  */
  43:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
  44:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** #include <stdio.h>
  45:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** #include <stdarg.h>
  46:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** #include <sys/types.h>
  47:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** #include <sys/stat.h>
  48:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
  49:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** /// @cond 0
  50:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** /**INDENT-OFF**/
  51:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** #ifdef __cplusplus
  52:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern "C" {
  53:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** #endif
  54:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** /**INDENT-ON**/
  55:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** /// @endcond
  56:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
  57:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** #undef errno
  58:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern int errno;
  59:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern int _end;
  60:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern int __ram_end__;
  61:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
  62:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern caddr_t _sbrk(int incr);
  63:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern int link(char *old, char *new);
  64:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern int _close(int file);
  65:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern int _fstat(int file, struct stat *st);
  66:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern int _isatty(int file);
  67:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern int _lseek(int file, int ptr, int dir);
  68:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern void _exit(int status);
  69:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern void _kill(int pid, int sig);
  70:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern int _getpid(void);
  71:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
  72:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** #pragma GCC diagnostic push
  73:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  74:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
  75:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern caddr_t _sbrk(int incr)
  76:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** {
  25              	 .loc 1 76 0
  26              	 .cfi_startproc
  27              	 
  28              	 
  29              	 
  30 0000 80B4     	 push {r7}
  31              	.LCFI0:
  32              	 .cfi_def_cfa_offset 4
  33              	 .cfi_offset 7,-4
  34 0002 85B0     	 sub sp,sp,#20
  35              	.LCFI1:
  36              	 .cfi_def_cfa_offset 24
  37 0004 00AF     	 add r7,sp,#0
  38              	.LCFI2:
  39              	 .cfi_def_cfa_register 7
  40 0006 7860     	 str r0,[r7,#4]
  77:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	static unsigned char *heap = NULL;
  78:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	unsigned char *prev_heap;
  79:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	int ramend = (int)&__ram_end__;
  41              	 .loc 1 79 0
  42 0008 104B     	 ldr r3,.L5
  43 000a FB60     	 str r3,[r7,#12]
  80:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
  81:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	if (heap == NULL) {
  44              	 .loc 1 81 0
  45 000c 104B     	 ldr r3,.L5+4
  46 000e 1B68     	 ldr r3,[r3]
  47 0010 002B     	 cmp r3,#0
  48 0012 02D1     	 bne .L2
  82:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 		heap = (unsigned char *)&_end;
  49              	 .loc 1 82 0
  50 0014 0E4B     	 ldr r3,.L5+4
  51 0016 0F4A     	 ldr r2,.L5+8
  52 0018 1A60     	 str r2,[r3]
  53              	.L2:
  83:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	}
  84:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	prev_heap = heap;
  54              	 .loc 1 84 0
  55 001a 0D4B     	 ldr r3,.L5+4
  56 001c 1B68     	 ldr r3,[r3]
  57 001e BB60     	 str r3,[r7,#8]
  85:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
  86:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	if (((int)prev_heap + incr) > ramend) {
  58              	 .loc 1 86 0
  59 0020 BA68     	 ldr r2,[r7,#8]
  60 0022 7B68     	 ldr r3,[r7,#4]
  61 0024 1A44     	 add r2,r2,r3
  62 0026 FB68     	 ldr r3,[r7,#12]
  63 0028 9A42     	 cmp r2,r3
  64 002a 02DD     	 ble .L3
  87:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 		return (caddr_t) -1;	
  65              	 .loc 1 87 0
  66 002c 4FF0FF33 	 mov r3,#-1
  67 0030 06E0     	 b .L4
  68              	.L3:
  88:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	}
  89:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
  90:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	heap += incr;
  69              	 .loc 1 90 0
  70 0032 074B     	 ldr r3,.L5+4
  71 0034 1A68     	 ldr r2,[r3]
  72 0036 7B68     	 ldr r3,[r7,#4]
  73 0038 1344     	 add r3,r3,r2
  74 003a 054A     	 ldr r2,.L5+4
  75 003c 1360     	 str r3,[r2]
  91:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
  92:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	return (caddr_t) prev_heap;
  76              	 .loc 1 92 0
  77 003e BB68     	 ldr r3,[r7,#8]
  78              	.L4:
  93:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** }
  79              	 .loc 1 93 0
  80 0040 1846     	 mov r0,r3
  81 0042 1437     	 adds r7,r7,#20
  82              	.LCFI3:
  83              	 .cfi_def_cfa_offset 4
  84 0044 BD46     	 mov sp,r7
  85              	.LCFI4:
  86              	 .cfi_def_cfa_register 13
  87              	 
  88 0046 80BC     	 pop {r7}
  89              	.LCFI5:
  90              	 .cfi_restore 7
  91              	 .cfi_def_cfa_offset 0
  92 0048 7047     	 bx lr
  93              	.L6:
  94 004a 00BF     	 .align 2
  95              	.L5:
  96 004c 00000000 	 .word __ram_end__
  97 0050 00000000 	 .word heap.5297
  98 0054 00000000 	 .word _end
  99              	 .cfi_endproc
 100              	.LFE1:
 102              	 .align 1
 103              	 .global link
 104              	 .syntax unified
 105              	 .thumb
 106              	 .thumb_func
 107              	 .fpu softvfp
 109              	link:
 110              	.LFB2:
  94:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
  95:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern int link(char *old, char *new)
  96:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** {
 111              	 .loc 1 96 0
 112              	 .cfi_startproc
 113              	 
 114              	 
 115              	 
 116 0058 80B4     	 push {r7}
 117              	.LCFI6:
 118              	 .cfi_def_cfa_offset 4
 119              	 .cfi_offset 7,-4
 120 005a 83B0     	 sub sp,sp,#12
 121              	.LCFI7:
 122              	 .cfi_def_cfa_offset 16
 123 005c 00AF     	 add r7,sp,#0
 124              	.LCFI8:
 125              	 .cfi_def_cfa_register 7
 126 005e 7860     	 str r0,[r7,#4]
 127 0060 3960     	 str r1,[r7]
  97:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	return -1;
 128              	 .loc 1 97 0
 129 0062 4FF0FF33 	 mov r3,#-1
  98:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** }
 130              	 .loc 1 98 0
 131 0066 1846     	 mov r0,r3
 132 0068 0C37     	 adds r7,r7,#12
 133              	.LCFI9:
 134              	 .cfi_def_cfa_offset 4
 135 006a BD46     	 mov sp,r7
 136              	.LCFI10:
 137              	 .cfi_def_cfa_register 13
 138              	 
 139 006c 80BC     	 pop {r7}
 140              	.LCFI11:
 141              	 .cfi_restore 7
 142              	 .cfi_def_cfa_offset 0
 143 006e 7047     	 bx lr
 144              	 .cfi_endproc
 145              	.LFE2:
 147              	 .align 1
 148              	 .global _close
 149              	 .syntax unified
 150              	 .thumb
 151              	 .thumb_func
 152              	 .fpu softvfp
 154              	_close:
 155              	.LFB3:
  99:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
 100:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern int _close(int file)
 101:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** {
 156              	 .loc 1 101 0
 157              	 .cfi_startproc
 158              	 
 159              	 
 160              	 
 161 0070 80B4     	 push {r7}
 162              	.LCFI12:
 163              	 .cfi_def_cfa_offset 4
 164              	 .cfi_offset 7,-4
 165 0072 83B0     	 sub sp,sp,#12
 166              	.LCFI13:
 167              	 .cfi_def_cfa_offset 16
 168 0074 00AF     	 add r7,sp,#0
 169              	.LCFI14:
 170              	 .cfi_def_cfa_register 7
 171 0076 7860     	 str r0,[r7,#4]
 102:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	return -1;
 172              	 .loc 1 102 0
 173 0078 4FF0FF33 	 mov r3,#-1
 103:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** }
 174              	 .loc 1 103 0
 175 007c 1846     	 mov r0,r3
 176 007e 0C37     	 adds r7,r7,#12
 177              	.LCFI15:
 178              	 .cfi_def_cfa_offset 4
 179 0080 BD46     	 mov sp,r7
 180              	.LCFI16:
 181              	 .cfi_def_cfa_register 13
 182              	 
 183 0082 80BC     	 pop {r7}
 184              	.LCFI17:
 185              	 .cfi_restore 7
 186              	 .cfi_def_cfa_offset 0
 187 0084 7047     	 bx lr
 188              	 .cfi_endproc
 189              	.LFE3:
 191              	 .align 1
 192              	 .global _fstat
 193              	 .syntax unified
 194              	 .thumb
 195              	 .thumb_func
 196              	 .fpu softvfp
 198              	_fstat:
 199              	.LFB4:
 104:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
 105:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern int _fstat(int file, struct stat *st)
 106:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** {
 200              	 .loc 1 106 0
 201              	 .cfi_startproc
 202              	 
 203              	 
 204              	 
 205 0086 80B4     	 push {r7}
 206              	.LCFI18:
 207              	 .cfi_def_cfa_offset 4
 208              	 .cfi_offset 7,-4
 209 0088 83B0     	 sub sp,sp,#12
 210              	.LCFI19:
 211              	 .cfi_def_cfa_offset 16
 212 008a 00AF     	 add r7,sp,#0
 213              	.LCFI20:
 214              	 .cfi_def_cfa_register 7
 215 008c 7860     	 str r0,[r7,#4]
 216 008e 3960     	 str r1,[r7]
 107:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	st->st_mode = S_IFCHR;
 217              	 .loc 1 107 0
 218 0090 3B68     	 ldr r3,[r7]
 219 0092 4FF40052 	 mov r2,#8192
 220 0096 5A60     	 str r2,[r3,#4]
 108:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
 109:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	return 0;
 221              	 .loc 1 109 0
 222 0098 0023     	 movs r3,#0
 110:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** }
 223              	 .loc 1 110 0
 224 009a 1846     	 mov r0,r3
 225 009c 0C37     	 adds r7,r7,#12
 226              	.LCFI21:
 227              	 .cfi_def_cfa_offset 4
 228 009e BD46     	 mov sp,r7
 229              	.LCFI22:
 230              	 .cfi_def_cfa_register 13
 231              	 
 232 00a0 80BC     	 pop {r7}
 233              	.LCFI23:
 234              	 .cfi_restore 7
 235              	 .cfi_def_cfa_offset 0
 236 00a2 7047     	 bx lr
 237              	 .cfi_endproc
 238              	.LFE4:
 240              	 .align 1
 241              	 .global _isatty
 242              	 .syntax unified
 243              	 .thumb
 244              	 .thumb_func
 245              	 .fpu softvfp
 247              	_isatty:
 248              	.LFB5:
 111:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
 112:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern int _isatty(int file)
 113:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** {
 249              	 .loc 1 113 0
 250              	 .cfi_startproc
 251              	 
 252              	 
 253              	 
 254 00a4 80B4     	 push {r7}
 255              	.LCFI24:
 256              	 .cfi_def_cfa_offset 4
 257              	 .cfi_offset 7,-4
 258 00a6 83B0     	 sub sp,sp,#12
 259              	.LCFI25:
 260              	 .cfi_def_cfa_offset 16
 261 00a8 00AF     	 add r7,sp,#0
 262              	.LCFI26:
 263              	 .cfi_def_cfa_register 7
 264 00aa 7860     	 str r0,[r7,#4]
 114:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	return 1;
 265              	 .loc 1 114 0
 266 00ac 0123     	 movs r3,#1
 115:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** }
 267              	 .loc 1 115 0
 268 00ae 1846     	 mov r0,r3
 269 00b0 0C37     	 adds r7,r7,#12
 270              	.LCFI27:
 271              	 .cfi_def_cfa_offset 4
 272 00b2 BD46     	 mov sp,r7
 273              	.LCFI28:
 274              	 .cfi_def_cfa_register 13
 275              	 
 276 00b4 80BC     	 pop {r7}
 277              	.LCFI29:
 278              	 .cfi_restore 7
 279              	 .cfi_def_cfa_offset 0
 280 00b6 7047     	 bx lr
 281              	 .cfi_endproc
 282              	.LFE5:
 284              	 .align 1
 285              	 .global _lseek
 286              	 .syntax unified
 287              	 .thumb
 288              	 .thumb_func
 289              	 .fpu softvfp
 291              	_lseek:
 292              	.LFB6:
 116:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
 117:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern int _lseek(int file, int ptr, int dir)
 118:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** {
 293              	 .loc 1 118 0
 294              	 .cfi_startproc
 295              	 
 296              	 
 297              	 
 298 00b8 80B4     	 push {r7}
 299              	.LCFI30:
 300              	 .cfi_def_cfa_offset 4
 301              	 .cfi_offset 7,-4
 302 00ba 85B0     	 sub sp,sp,#20
 303              	.LCFI31:
 304              	 .cfi_def_cfa_offset 24
 305 00bc 00AF     	 add r7,sp,#0
 306              	.LCFI32:
 307              	 .cfi_def_cfa_register 7
 308 00be F860     	 str r0,[r7,#12]
 309 00c0 B960     	 str r1,[r7,#8]
 310 00c2 7A60     	 str r2,[r7,#4]
 119:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	return 0;
 311              	 .loc 1 119 0
 312 00c4 0023     	 movs r3,#0
 120:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** }
 313              	 .loc 1 120 0
 314 00c6 1846     	 mov r0,r3
 315 00c8 1437     	 adds r7,r7,#20
 316              	.LCFI33:
 317              	 .cfi_def_cfa_offset 4
 318 00ca BD46     	 mov sp,r7
 319              	.LCFI34:
 320              	 .cfi_def_cfa_register 13
 321              	 
 322 00cc 80BC     	 pop {r7}
 323              	.LCFI35:
 324              	 .cfi_restore 7
 325              	 .cfi_def_cfa_offset 0
 326 00ce 7047     	 bx lr
 327              	 .cfi_endproc
 328              	.LFE6:
 330              	 .section .rodata
 331              	 .align 2
 332              	.LC0:
 333 0000 45786974 	 .ascii "Exiting with status %d.\012\000"
 333      696E6720 
 333      77697468 
 333      20737461 
 333      74757320 
 334              	 .text
 335              	 .align 1
 336              	 .global _exit
 337              	 .syntax unified
 338              	 .thumb
 339              	 .thumb_func
 340              	 .fpu softvfp
 342              	_exit:
 343              	.LFB7:
 121:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
 122:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern void _exit(int status)
 123:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** {
 344              	 .loc 1 123 0
 345              	 .cfi_startproc
 346              	 
 347              	 
 348 00d0 80B5     	 push {r7,lr}
 349              	.LCFI36:
 350              	 .cfi_def_cfa_offset 8
 351              	 .cfi_offset 7,-8
 352              	 .cfi_offset 14,-4
 353 00d2 82B0     	 sub sp,sp,#8
 354              	.LCFI37:
 355              	 .cfi_def_cfa_offset 16
 356 00d4 00AF     	 add r7,sp,#0
 357              	.LCFI38:
 358              	 .cfi_def_cfa_register 7
 359 00d6 7860     	 str r0,[r7,#4]
 124:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	printf("Exiting with status %d.\n", status);
 360              	 .loc 1 124 0
 361 00d8 7968     	 ldr r1,[r7,#4]
 362 00da 0248     	 ldr r0,.L19
 363 00dc 024B     	 ldr r3,.L19+4
 364 00de 9847     	 blx r3
 365              	.LVL0:
 366              	.L18:
 125:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
 126:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	for (;;);
 367              	 .loc 1 126 0 discriminator 1
 368 00e0 FEE7     	 b .L18
 369              	.L20:
 370 00e2 00BF     	 .align 2
 371              	.L19:
 372 00e4 00000000 	 .word .LC0
 373 00e8 00000000 	 .word printf
 374              	 .cfi_endproc
 375              	.LFE7:
 377              	 .align 1
 378              	 .global _kill
 379              	 .syntax unified
 380              	 .thumb
 381              	 .thumb_func
 382              	 .fpu softvfp
 384              	_kill:
 385              	.LFB8:
 127:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** }
 128:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
 129:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern void _kill(int pid, int sig)
 130:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** {
 386              	 .loc 1 130 0
 387              	 .cfi_startproc
 388              	 
 389              	 
 390              	 
 391 00ec 80B4     	 push {r7}
 392              	.LCFI39:
 393              	 .cfi_def_cfa_offset 4
 394              	 .cfi_offset 7,-4
 395 00ee 83B0     	 sub sp,sp,#12
 396              	.LCFI40:
 397              	 .cfi_def_cfa_offset 16
 398 00f0 00AF     	 add r7,sp,#0
 399              	.LCFI41:
 400              	 .cfi_def_cfa_register 7
 401 00f2 7860     	 str r0,[r7,#4]
 402 00f4 3960     	 str r1,[r7]
 131:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	return;
 403              	 .loc 1 131 0
 404 00f6 00BF     	 nop
 132:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** }
 405              	 .loc 1 132 0
 406 00f8 0C37     	 adds r7,r7,#12
 407              	.LCFI42:
 408              	 .cfi_def_cfa_offset 4
 409 00fa BD46     	 mov sp,r7
 410              	.LCFI43:
 411              	 .cfi_def_cfa_register 13
 412              	 
 413 00fc 80BC     	 pop {r7}
 414              	.LCFI44:
 415              	 .cfi_restore 7
 416              	 .cfi_def_cfa_offset 0
 417 00fe 7047     	 bx lr
 418              	 .cfi_endproc
 419              	.LFE8:
 421              	 .align 1
 422              	 .global _getpid
 423              	 .syntax unified
 424              	 .thumb
 425              	 .thumb_func
 426              	 .fpu softvfp
 428              	_getpid:
 429              	.LFB9:
 133:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 
 134:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** extern int _getpid(void)
 135:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** {
 430              	 .loc 1 135 0
 431              	 .cfi_startproc
 432              	 
 433              	 
 434              	 
 435 0100 80B4     	 push {r7}
 436              	.LCFI45:
 437              	 .cfi_def_cfa_offset 4
 438              	 .cfi_offset 7,-4
 439 0102 00AF     	 add r7,sp,#0
 440              	.LCFI46:
 441              	 .cfi_def_cfa_register 7
 136:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** 	return -1;
 442              	 .loc 1 136 0
 443 0104 4FF0FF33 	 mov r3,#-1
 137:../../../platform/sam/utils/syscalls/gcc/syscalls.c **** }
 444              	 .loc 1 137 0
 445 0108 1846     	 mov r0,r3
 446 010a BD46     	 mov sp,r7
 447              	.LCFI47:
 448              	 .cfi_def_cfa_register 13
 449              	 
 450 010c 80BC     	 pop {r7}
 451              	.LCFI48:
 452              	 .cfi_restore 7
 453              	 .cfi_def_cfa_offset 0
 454 010e 7047     	 bx lr
 455              	 .cfi_endproc
 456              	.LFE9:
 458              	 .section .bss.heap.5297,"aw",%nobits
 459              	 .align 2
 462              	heap.5297:
 463 0000 00000000 	 .space 4
 464              	 .text
 465              	.Letext0:
 466              	 .file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 467              	 .file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\lock.h"
 468              	 .file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_types.h"
 469              	 .file 5 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 470              	 .file 6 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\reent.h"
 471              	 .file 7 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\_timeval.h"
 472              	 .file 8 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\types.h"
 473              	 .file 9 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\time.h"
 474              	 .file 10 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\arm\\arm-gnu-toolchain\\arm-none-eabi\\include\\sys\\stat.h"
 475              	 .file 11 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 syscalls.c
    {standard input}:15     .text:00000000 $t
    {standard input}:22     .text:00000000 _sbrk
    {standard input}:96     .text:0000004c $d
    {standard input}:462    .bss.heap.5297:00000000 heap.5297
    {standard input}:102    .text:00000058 $t
    {standard input}:109    .text:00000058 link
    {standard input}:154    .text:00000070 _close
    {standard input}:198    .text:00000086 _fstat
    {standard input}:247    .text:000000a4 _isatty
    {standard input}:291    .text:000000b8 _lseek
    {standard input}:331    .rodata:00000000 $d
    {standard input}:342    .text:000000d0 _exit
    {standard input}:372    .text:000000e4 $d
    {standard input}:377    .text:000000ec $t
    {standard input}:384    .text:000000ec _kill
    {standard input}:428    .text:00000100 _getpid
    {standard input}:459    .bss.heap.5297:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__ram_end__
_end
printf
