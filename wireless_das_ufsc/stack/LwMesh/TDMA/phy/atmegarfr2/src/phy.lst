   1               		.file	"phy.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	sysclk_enable_peripheral_clock:
  13               	.LFB69:
  14               		.file 1 "../../../platform/common/services/clock/mega/sysclk.h"
   1:../../../platform/common/services/clock/mega/sysclk.h **** /**
   2:../../../platform/common/services/clock/mega/sysclk.h ****  * \file
   3:../../../platform/common/services/clock/mega/sysclk.h ****  *
   4:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Chip-specific system clock management functions
   5:../../../platform/common/services/clock/mega/sysclk.h ****  *
   6:../../../platform/common/services/clock/mega/sysclk.h ****  * Copyright (c) 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/clock/mega/sysclk.h ****  *
   8:../../../platform/common/services/clock/mega/sysclk.h ****  * \asf_license_start
   9:../../../platform/common/services/clock/mega/sysclk.h ****  *
  10:../../../platform/common/services/clock/mega/sysclk.h ****  * \page License
  11:../../../platform/common/services/clock/mega/sysclk.h ****  *
  12:../../../platform/common/services/clock/mega/sysclk.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/clock/mega/sysclk.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/clock/mega/sysclk.h ****  *
  15:../../../platform/common/services/clock/mega/sysclk.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/clock/mega/sysclk.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/clock/mega/sysclk.h ****  *
  18:../../../platform/common/services/clock/mega/sysclk.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/clock/mega/sysclk.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/clock/mega/sysclk.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/clock/mega/sysclk.h ****  *
  22:../../../platform/common/services/clock/mega/sysclk.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/clock/mega/sysclk.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/clock/mega/sysclk.h ****  *
  25:../../../platform/common/services/clock/mega/sysclk.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/clock/mega/sysclk.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/clock/mega/sysclk.h ****  *
  28:../../../platform/common/services/clock/mega/sysclk.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/clock/mega/sysclk.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/clock/mega/sysclk.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/clock/mega/sysclk.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/clock/mega/sysclk.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/clock/mega/sysclk.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/clock/mega/sysclk.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/clock/mega/sysclk.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/clock/mega/sysclk.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/clock/mega/sysclk.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/clock/mega/sysclk.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/clock/mega/sysclk.h ****  *
  40:../../../platform/common/services/clock/mega/sysclk.h ****  * \asf_license_stop
  41:../../../platform/common/services/clock/mega/sysclk.h ****  *
  42:../../../platform/common/services/clock/mega/sysclk.h ****  */
  43:../../../platform/common/services/clock/mega/sysclk.h **** #ifndef MEGA_SYSCLK_H_INCLUDED
  44:../../../platform/common/services/clock/mega/sysclk.h **** #define MEGA_SYSCLK_H_INCLUDED
  45:../../../platform/common/services/clock/mega/sysclk.h **** 
  46:../../../platform/common/services/clock/mega/sysclk.h **** #include <board.h>
  47:../../../platform/common/services/clock/mega/sysclk.h **** #include <compiler.h>
  48:../../../platform/common/services/clock/mega/sysclk.h **** #include <parts.h>
  49:../../../platform/common/services/clock/mega/sysclk.h **** 
  50:../../../platform/common/services/clock/mega/sysclk.h **** /* Include clock configuration for the project. */
  51:../../../platform/common/services/clock/mega/sysclk.h **** #include <conf_clock.h>
  52:../../../platform/common/services/clock/mega/sysclk.h **** 
  53:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef __cplusplus
  54:../../../platform/common/services/clock/mega/sysclk.h **** extern "C" {
  55:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  56:../../../platform/common/services/clock/mega/sysclk.h **** #define ASM __asm__
  57:../../../platform/common/services/clock/mega/sysclk.h **** 
  58:../../../platform/common/services/clock/mega/sysclk.h **** /* CONFIG_SYSCLK_PSDIV  to use default if not defined*/
  59:../../../platform/common/services/clock/mega/sysclk.h **** #ifndef CONFIG_SYSCLK_PSDIV
  60:../../../platform/common/services/clock/mega/sysclk.h **** # define CONFIG_SYSCLK_PSDIV    SYSCLK_PSDIV_8
  61:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  62:../../../platform/common/services/clock/mega/sysclk.h **** 
  63:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Prescaler Setting (relative to CLKsys) */
  64:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
  65:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_1      0   /* !< Do not prescale */
  66:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_2      1   /* !< Prescale CLKper4 by 2 */
  67:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_4      2   /* !< Prescale CLKper4 by 4 */
  68:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_8      3   /* !< Prescale CLKper4 by 8 */
  69:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_16     4   /* !< Prescale CLKper4 by 16 */
  70:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_32     5   /* !< Prescale CLKper4 by 32 */
  71:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_64     6   /* !< Prescale CLKper4 by 64 */
  72:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_128    7   /* !< Prescale CLKper4 by 128 */
  73:../../../platform/common/services/clock/mega/sysclk.h **** #define SYSCLK_PSDIV_256    8   /* !< Prescale CLKper4 by 256 */
  74:../../../platform/common/services/clock/mega/sysclk.h **** 
  75:../../../platform/common/services/clock/mega/sysclk.h **** /* @} */
  76:../../../platform/common/services/clock/mega/sysclk.h **** 
  77:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF || MEGA_XX0_1 || MEGA_XX4 || MEGA_XX4_A
  78:../../../platform/common/services/clock/mega/sysclk.h **** 
  79:../../../platform/common/services/clock/mega/sysclk.h **** #define NUMBER_OF_POWER_REG       2
  80:../../../platform/common/services/clock/mega/sysclk.h **** /*Starting Address for power reduction*/
  81:../../../platform/common/services/clock/mega/sysclk.h **** #define POWER_REG_ADD             PRR0
  82:../../../platform/common/services/clock/mega/sysclk.h **** 
  83:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Power Reduction  Clock Port Numbers */
  84:../../../platform/common/services/clock/mega/sysclk.h **** enum power_red_id {
  85:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG0,     /* !< Devices on PRR0 */
  86:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX4 || !MEGA_XX4_A || MEGA_XX0_1
  87:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG1,     /* !< Devices on PRR1 */
  88:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  89:../../../platform/common/services/clock/mega/sysclk.h **** };
  90:../../../platform/common/services/clock/mega/sysclk.h **** #endif
  91:../../../platform/common/services/clock/mega/sysclk.h **** 
  92:../../../platform/common/services/clock/mega/sysclk.h **** /****************************************************
  93:../../../platform/common/services/clock/mega/sysclk.h ****  * Given a dummy type but not used for these groups
  94:../../../platform/common/services/clock/mega/sysclk.h ****  * to support for otherthen megaRF device.
  95:../../../platform/common/services/clock/mega/sysclk.h ****  **************************************************/
  96:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX8 || MEGA_XX8_A || MEGA_UNSPECIFIED
  97:../../../platform/common/services/clock/mega/sysclk.h **** #define NUMBER_OF_POWER_REG       1
  98:../../../platform/common/services/clock/mega/sysclk.h **** /*Starting Address for power reduction*/
  99:../../../platform/common/services/clock/mega/sysclk.h **** #define POWER_REG_ADD             PRR
 100:../../../platform/common/services/clock/mega/sysclk.h **** 
 101:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Power Reduction  Clock Port Numbers */
 102:../../../platform/common/services/clock/mega/sysclk.h **** enum power_red_id {
 103:../../../platform/common/services/clock/mega/sysclk.h **** 	POWER_RED_REG0,     /* !< Devices on PRR */
 104:../../../platform/common/services/clock/mega/sysclk.h **** };
 105:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 106:../../../platform/common/services/clock/mega/sysclk.h **** 
 107:../../../platform/common/services/clock/mega/sysclk.h **** /* Bit mask for the power reduction register based on */
 108:../../../platform/common/services/clock/mega/sysclk.h **** /*   MCU ARCH.                                        */
 109:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 110:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for PRR2 */
 111:../../../platform/common/services/clock/mega/sysclk.h **** 
 112:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM0_bm                       1 << PRRAM0
 113:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM1_bm                       1 << PRRAM1
 114:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM2_bm                       1 << PRRAM2
 115:../../../platform/common/services/clock/mega/sysclk.h **** #define PRRAM3_bm                       1 << PRRAM3
 116:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 117:../../../platform/common/services/clock/mega/sysclk.h **** 
 118:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for the power reduction 0 or PRR*/
 119:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN0 && !MEGA_XX_UN0
 120:../../../platform/common/services/clock/mega/sysclk.h **** #define PRADC_bm                        1 << PRADC
 121:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART0_bm                     1 << PRUSART0
 122:../../../platform/common/services/clock/mega/sysclk.h **** #define PRSPI_bm                        1 << PRSPI
 123:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM1_bm                       1 << PRTIM1
 124:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 125:../../../platform/common/services/clock/mega/sysclk.h **** 
 126:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 127:../../../platform/common/services/clock/mega/sysclk.h **** #define PRPGA_bm                        1 << PRPGA
 128:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 129:../../../platform/common/services/clock/mega/sysclk.h **** 
 130:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_UNSPECIFIED
 131:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM0_bm                       1 << PRTIM0
 132:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM2_bm                       1 << PRTIM2
 133:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTWI_bm                        1 << PRTWI
 134:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 135:../../../platform/common/services/clock/mega/sysclk.h **** 
 136:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX_UN2
 137:../../../platform/common/services/clock/mega/sysclk.h **** #define PRLCD_bm                        1 << PRLCD
 138:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 139:../../../platform/common/services/clock/mega/sysclk.h **** 
 140:../../../platform/common/services/clock/mega/sysclk.h **** /*Bit mask for  PRR1  */
 141:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef PRR1
 142:../../../platform/common/services/clock/mega/sysclk.h **** #if (MEGA_XX4 || MEGA_XX4_A)
 143:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM3_bm                       1 << PRTIM3
 144:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 145:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 146:../../../platform/common/services/clock/mega/sysclk.h **** 
 147:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF || MEGA_XX4 || MEGA_XX4_A
 148:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART1_bm                     1 << PRUSART1
 149:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART2_bm                     1 << PRUSART2
 150:../../../platform/common/services/clock/mega/sysclk.h **** #define PRUSART3_bm                     1 << PRUSART3
 151:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM3_bm                       1 << PRTIM3
 152:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM4_bm                       1 << PRTIM4
 153:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTIM5_bm                       1 << PRTIM5
 154:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 155:../../../platform/common/services/clock/mega/sysclk.h **** 
 156:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 157:../../../platform/common/services/clock/mega/sysclk.h **** #define PRTRX24_bm                      1 << PRTRX24
 158:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 159:../../../platform/common/services/clock/mega/sysclk.h **** 
 160:../../../platform/common/services/clock/mega/sysclk.h **** /**
 161:../../../platform/common/services/clock/mega/sysclk.h ****  * \name Querying the system clock and its derived clocks
 162:../../../platform/common/services/clock/mega/sysclk.h ****  */
 163:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
 164:../../../platform/common/services/clock/mega/sysclk.h **** 
 165:../../../platform/common/services/clock/mega/sysclk.h **** /**
 166:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the main system clock
 167:../../../platform/common/services/clock/mega/sysclk.h ****  * To know the clock value at what frequency the main clock is running
 168:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the main system clock, in Hz.
 169:../../../platform/common/services/clock/mega/sysclk.h ****  * \todo : please initialize the SYSCLK_SOURCE in conf_clock.h file for
 170:../../../platform/common/services/clock/mega/sysclk.h ****  * configured source clock using fuses.
 171:../../../platform/common/services/clock/mega/sysclk.h ****  * \eg. #define SYSCLK_SOURCE SYSCLK_SRC_RC16MHZ to use internal RC
 172:../../../platform/common/services/clock/mega/sysclk.h ****  * oscillator for clock source.
 173:../../../platform/common/services/clock/mega/sysclk.h ****  */
 174:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_main_hz(void)
 175:../../../platform/common/services/clock/mega/sysclk.h **** {
 176:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (SYSCLK_SOURCE) {
 177:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_RC16MHZ:
 178:../../../platform/common/services/clock/mega/sysclk.h **** 		return 16000000UL;
 179:../../../platform/common/services/clock/mega/sysclk.h **** 
 180:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_RC128KHZ:
 181:../../../platform/common/services/clock/mega/sysclk.h **** 		return 128000UL;
 182:../../../platform/common/services/clock/mega/sysclk.h **** 
 183:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 184:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_TRS16MHZ:
 185:../../../platform/common/services/clock/mega/sysclk.h **** 		return 16000000UL;
 186:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 187:../../../platform/common/services/clock/mega/sysclk.h **** #ifdef BOARD_EXTERNAL_CLK
 188:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_SRC_EXTERNAL:
 189:../../../platform/common/services/clock/mega/sysclk.h **** 		return BOARD_EXTERNAL_CLK;
 190:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 191:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 192:../../../platform/common/services/clock/mega/sysclk.h **** 
 193:../../../platform/common/services/clock/mega/sysclk.h **** 		return 1000000UL;
 194:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 195:../../../platform/common/services/clock/mega/sysclk.h **** }
 196:../../../platform/common/services/clock/mega/sysclk.h **** 
 197:../../../platform/common/services/clock/mega/sysclk.h **** /**
 198:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of source clock in Hz.
 199:../../../platform/common/services/clock/mega/sysclk.h ****  *
 200:../../../platform/common/services/clock/mega/sysclk.h ****  * This clock always runs at the same rate as the CPU clock unless the divider
 201:../../../platform/common/services/clock/mega/sysclk.h ****  * is set.
 202:../../../platform/common/services/clock/mega/sysclk.h ****  *
 203:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the system clock, in Hz.
 204:../../../platform/common/services/clock/mega/sysclk.h ****  */
 205:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_source_clock_hz(void)
 206:../../../platform/common/services/clock/mega/sysclk.h **** {
 207:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (CONFIG_SYSCLK_PSDIV) {
 208:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_1: /* Fall through */
 209:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 210:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 211:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 212:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 213:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz();
 214:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 215:../../../platform/common/services/clock/mega/sysclk.h **** 
 216:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_2:
 217:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 218:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 219:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 220:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 221:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 222:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 223:../../../platform/common/services/clock/mega/sysclk.h **** 
 224:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_4:
 225:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 226:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 227:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 228:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 229:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 230:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 231:../../../platform/common/services/clock/mega/sysclk.h **** 
 232:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_8:
 233:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 234:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 235:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 236:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 237:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 238:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 239:../../../platform/common/services/clock/mega/sysclk.h **** 
 240:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_16:
 241:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 242:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 243:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 244:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 245:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 246:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 247:../../../platform/common/services/clock/mega/sysclk.h **** 
 248:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_32:
 249:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 250:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 251:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 252:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 253:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 254:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 255:../../../platform/common/services/clock/mega/sysclk.h **** 
 256:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_64:
 257:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 258:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 259:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 260:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 261:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 262:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 263:../../../platform/common/services/clock/mega/sysclk.h **** 
 264:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_128:
 265:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 266:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 267:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 268:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 269:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 270:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 271:../../../platform/common/services/clock/mega/sysclk.h **** 
 272:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_256:
 273:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 274:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 275:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 512;
 276:../../../platform/common/services/clock/mega/sysclk.h **** 		} else {
 277:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 278:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 279:../../../platform/common/services/clock/mega/sysclk.h **** 
 280:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 281:../../../platform/common/services/clock/mega/sysclk.h **** 		/*Invalide case*/
 282:../../../platform/common/services/clock/mega/sysclk.h **** 		return 0;
 283:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 284:../../../platform/common/services/clock/mega/sysclk.h **** }
 285:../../../platform/common/services/clock/mega/sysclk.h **** 
 286:../../../platform/common/services/clock/mega/sysclk.h **** /**
 287:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the CPU clock.
 288:../../../platform/common/services/clock/mega/sysclk.h ****  *
 289:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 290:../../../platform/common/services/clock/mega/sysclk.h ****  */
 291:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_cpu_hz(void)
 292:../../../platform/common/services/clock/mega/sysclk.h **** {
 293:../../../platform/common/services/clock/mega/sysclk.h **** 	return sysclk_get_source_clock_hz();
 294:../../../platform/common/services/clock/mega/sysclk.h **** }
 295:../../../platform/common/services/clock/mega/sysclk.h **** 
 296:../../../platform/common/services/clock/mega/sysclk.h **** /**
 297:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Return the current rate in Hz of the clock from internal oscillator
 298:../../../platform/common/services/clock/mega/sysclk.h ****  * \return Frequency of the CPU clock, in Hz.
 299:../../../platform/common/services/clock/mega/sysclk.h ****  */
 300:../../../platform/common/services/clock/mega/sysclk.h **** static inline uint32_t sysclk_get_rc_osc_hz(void)
 301:../../../platform/common/services/clock/mega/sysclk.h **** {
 302:../../../platform/common/services/clock/mega/sysclk.h **** 	switch (CONFIG_SYSCLK_PSDIV) {
 303:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_1:
 304:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 305:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 306:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 2;
 307:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 308:../../../platform/common/services/clock/mega/sysclk.h **** 
 309:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_2:
 310:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 311:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 312:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 4;
 313:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 314:../../../platform/common/services/clock/mega/sysclk.h **** 
 315:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_4:
 316:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 317:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 318:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 8;
 319:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 320:../../../platform/common/services/clock/mega/sysclk.h **** 
 321:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_8:
 322:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 323:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 324:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 16;
 325:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 326:../../../platform/common/services/clock/mega/sysclk.h **** 
 327:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_16:
 328:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 329:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 330:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 32;
 331:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 332:../../../platform/common/services/clock/mega/sysclk.h **** 
 333:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_32:
 334:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 335:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 336:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 64;
 337:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 338:../../../platform/common/services/clock/mega/sysclk.h **** 
 339:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_64:
 340:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 341:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 342:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 128;
 343:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 344:../../../platform/common/services/clock/mega/sysclk.h **** 
 345:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_128:
 346:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 347:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 348:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 256;
 349:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 350:../../../platform/common/services/clock/mega/sysclk.h **** 
 351:../../../platform/common/services/clock/mega/sysclk.h **** 	case SYSCLK_PSDIV_256:
 352:../../../platform/common/services/clock/mega/sysclk.h **** 		if (SYSCLK_SOURCE == SYSCLK_SRC_RC16MHZ ||
 353:../../../platform/common/services/clock/mega/sysclk.h **** 				SYSCLK_SOURCE == SYSCLK_SRC_RC128KHZ) {
 354:../../../platform/common/services/clock/mega/sysclk.h **** 			return sysclk_get_main_hz() / 512;
 355:../../../platform/common/services/clock/mega/sysclk.h **** 		}
 356:../../../platform/common/services/clock/mega/sysclk.h **** 
 357:../../../platform/common/services/clock/mega/sysclk.h **** 	default:
 358:../../../platform/common/services/clock/mega/sysclk.h **** 		return 0;
 359:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 360:../../../platform/common/services/clock/mega/sysclk.h **** }
 361:../../../platform/common/services/clock/mega/sysclk.h **** 
 362:../../../platform/common/services/clock/mega/sysclk.h **** /* ! \name Enabling and disabling synchronous clocks */
 363:../../../platform/common/services/clock/mega/sysclk.h **** /* @{ */
 364:../../../platform/common/services/clock/mega/sysclk.h **** 
 365:../../../platform/common/services/clock/mega/sysclk.h **** /**
 366:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Enable the clock to peripheral \a id on port \a port
 367:../../../platform/common/services/clock/mega/sysclk.h ****  *
 368:../../../platform/common/services/clock/mega/sysclk.h ****  * \param port ID of the port to which the module is connected (one of
 369:../../../platform/common/services/clock/mega/sysclk.h ****  * the \c power_red_id *definitions).
 370:../../../platform/common/services/clock/mega/sysclk.h ****  * \param id The ID (bitmask) of the peripheral module to be disabled.*
 371:../../../platform/common/services/clock/mega/sysclk.h ****  */
 372:../../../platform/common/services/clock/mega/sysclk.h **** extern void sysclk_enable_module(enum power_red_id port, uint8_t id);
 373:../../../platform/common/services/clock/mega/sysclk.h **** 
 374:../../../platform/common/services/clock/mega/sysclk.h **** /**
 375:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Disable the clock to peripheral \a id on port \a port
 376:../../../platform/common/services/clock/mega/sysclk.h ****  *
 377:../../../platform/common/services/clock/mega/sysclk.h ****  * \param port ID of the port to which the module is connected (one of
 378:../../../platform/common/services/clock/mega/sysclk.h ****  * the \c power_red_id *definitions).
 379:../../../platform/common/services/clock/mega/sysclk.h ****  * \param id The ID (bit mask) of the peripheral module to be disabled.
 380:../../../platform/common/services/clock/mega/sysclk.h ****  */
 381:../../../platform/common/services/clock/mega/sysclk.h **** extern void sysclk_disable_module(enum power_red_id port, uint8_t id);
 382:../../../platform/common/services/clock/mega/sysclk.h **** 
 383:../../../platform/common/services/clock/mega/sysclk.h **** /**
 384:../../../platform/common/services/clock/mega/sysclk.h ****  * \brief Enable a peripherals clock from its base address.
 385:../../../platform/common/services/clock/mega/sysclk.h ****  *
 386:../../../platform/common/services/clock/mega/sysclk.h ****  *  Enables the clock to a peripheral, given its base address. If the peripheral
 387:../../../platform/common/services/clock/mega/sysclk.h ****  *  has an associated clock on the HSB bus, this will be enabled also.
 388:../../../platform/common/services/clock/mega/sysclk.h ****  *
 389:../../../platform/common/services/clock/mega/sysclk.h ****  * \param module Pointer to the module's base address.
 390:../../../platform/common/services/clock/mega/sysclk.h ****  */
 391:../../../platform/common/services/clock/mega/sysclk.h **** static inline void sysclk_enable_peripheral_clock(const volatile void *module)
 392:../../../platform/common/services/clock/mega/sysclk.h **** {
  15               		.loc 1 392 0
  16               		.cfi_startproc
  17 0000 CF93      		push r28
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 4
  20               		.cfi_offset 28, -3
  21 0002 DF93      		push r29
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 5
  24               		.cfi_offset 29, -4
  25 0004 1F92      		push __zero_reg__
  26 0006 1F92      		push __zero_reg__
  27               	.LCFI2:
  28               		.cfi_def_cfa_offset 7
  29 0008 CDB7      		in r28,__SP_L__
  30 000a DEB7      		in r29,__SP_H__
  31               	.LCFI3:
  32               		.cfi_def_cfa_register 28
  33               	/* prologue: function */
  34               	/* frame size = 2 */
  35               	/* stack size = 4 */
  36               	.L__stack_usage = 4
  37 000c 9A83      		std Y+2,r25
  38 000e 8983      		std Y+1,r24
 393:../../../platform/common/services/clock/mega/sysclk.h **** 	if (module == NULL) {
  39               		.loc 1 393 0
  40 0010 8981      		ldd r24,Y+1
  41 0012 9A81      		ldd r25,Y+2
  42 0014 892B      		or r24,r25
  43 0016 01F4      		brne .+2
  44 0018 00C0      		rjmp .L14
 394:../../../platform/common/services/clock/mega/sysclk.h **** 		Assert(false);
 395:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 396:../../../platform/common/services/clock/mega/sysclk.h **** 
 397:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN0 && !MEGA_XX_UN1
 398:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &ADC) {
  45               		.loc 1 398 0
  46 001a 8981      		ldd r24,Y+1
  47 001c 9A81      		ldd r25,Y+2
  48 001e 8837      		cpi r24,120
  49 0020 9105      		cpc r25,__zero_reg__
  50 0022 01F4      		brne .L3
 399:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRADC_bm);
  51               		.loc 1 399 0
  52 0024 61E0      		ldi r22,lo8(1)
  53 0026 80E0      		ldi r24,0
  54 0028 0E94 0000 		call sysclk_enable_module
 400:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 401:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRPGA_bm);
  55               		.loc 1 401 0
  56 002c 60E1      		ldi r22,lo8(16)
  57 002e 80E0      		ldi r24,0
  58 0030 0E94 0000 		call sysclk_enable_module
 402:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 403:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &UCSR0A) {
 404:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRUSART0_bm);
 405:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 406:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 407:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &SPCR) {
 408:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRSPI_bm);
 409:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 410:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 411:../../../platform/common/services/clock/mega/sysclk.h **** 
 412:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &TCCR1A) {
 413:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM1_bm);
 414:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 415:../../../platform/common/services/clock/mega/sysclk.h **** 
 416:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_XX_UN2
 417:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &LCDCRA) {
 418:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRLCD_bm);
 419:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 420:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 421:../../../platform/common/services/clock/mega/sysclk.h **** 
 422:../../../platform/common/services/clock/mega/sysclk.h **** #if !MEGA_XX_UN2
 423:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &TCCR0A) {
 424:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM0_bm);
 425:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR2A) {
 426:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM2_bm);
 427:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TWBR) {
 428:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTWI_bm);
 429:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 430:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 431:../../../platform/common/services/clock/mega/sysclk.h **** 
 432:../../../platform/common/services/clock/mega/sysclk.h **** #if MEGA_RF
 433:../../../platform/common/services/clock/mega/sysclk.h **** 	else if (module == &UCSR1A) {
 434:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRUSART1_bm);
 435:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR3A) {
 436:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM3_bm);
 437:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR4A) {
 438:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM4_bm);
 439:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR5A) {
 440:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM5_bm);
 441:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TRX_CTRL_0) {
 442:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTRX24_bm);
 443:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 444:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 445:../../../platform/common/services/clock/mega/sysclk.h **** #endif
 446:../../../platform/common/services/clock/mega/sysclk.h **** 	else {
 447:../../../platform/common/services/clock/mega/sysclk.h **** 		Assert(false);
 448:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 449:../../../platform/common/services/clock/mega/sysclk.h **** }
  59               		.loc 1 449 0
  60 0034 00C0      		rjmp .L14
  61               	.L3:
 403:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRUSART0_bm);
  62               		.loc 1 403 0
  63 0036 8981      		ldd r24,Y+1
  64 0038 9A81      		ldd r25,Y+2
  65 003a 803C      		cpi r24,-64
  66 003c 9105      		cpc r25,__zero_reg__
  67 003e 01F4      		brne .L4
 404:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  68               		.loc 1 404 0
  69 0040 62E0      		ldi r22,lo8(2)
  70 0042 80E0      		ldi r24,0
  71 0044 0E94 0000 		call sysclk_enable_module
  72               		.loc 1 449 0
  73 0048 00C0      		rjmp .L14
  74               	.L4:
 407:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRSPI_bm);
  75               		.loc 1 407 0
  76 004a 8981      		ldd r24,Y+1
  77 004c 9A81      		ldd r25,Y+2
  78 004e 8C34      		cpi r24,76
  79 0050 9105      		cpc r25,__zero_reg__
  80 0052 01F4      		brne .L5
 408:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  81               		.loc 1 408 0
  82 0054 64E0      		ldi r22,lo8(4)
  83 0056 80E0      		ldi r24,0
  84 0058 0E94 0000 		call sysclk_enable_module
  85               		.loc 1 449 0
  86 005c 00C0      		rjmp .L14
  87               	.L5:
 412:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM1_bm);
  88               		.loc 1 412 0
  89 005e 8981      		ldd r24,Y+1
  90 0060 9A81      		ldd r25,Y+2
  91 0062 8038      		cpi r24,-128
  92 0064 9105      		cpc r25,__zero_reg__
  93 0066 01F4      		brne .L6
 413:../../../platform/common/services/clock/mega/sysclk.h **** 	}
  94               		.loc 1 413 0
  95 0068 68E0      		ldi r22,lo8(8)
  96 006a 80E0      		ldi r24,0
  97 006c 0E94 0000 		call sysclk_enable_module
  98               		.loc 1 449 0
  99 0070 00C0      		rjmp .L14
 100               	.L6:
 423:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM0_bm);
 101               		.loc 1 423 0
 102 0072 8981      		ldd r24,Y+1
 103 0074 9A81      		ldd r25,Y+2
 104 0076 8434      		cpi r24,68
 105 0078 9105      		cpc r25,__zero_reg__
 106 007a 01F4      		brne .L7
 424:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR2A) {
 107               		.loc 1 424 0
 108 007c 60E2      		ldi r22,lo8(32)
 109 007e 80E0      		ldi r24,0
 110 0080 0E94 0000 		call sysclk_enable_module
 111               		.loc 1 449 0
 112 0084 00C0      		rjmp .L14
 113               	.L7:
 425:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTIM2_bm);
 114               		.loc 1 425 0
 115 0086 8981      		ldd r24,Y+1
 116 0088 9A81      		ldd r25,Y+2
 117 008a 803B      		cpi r24,-80
 118 008c 9105      		cpc r25,__zero_reg__
 119 008e 01F4      		brne .L8
 426:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TWBR) {
 120               		.loc 1 426 0
 121 0090 60E4      		ldi r22,lo8(64)
 122 0092 80E0      		ldi r24,0
 123 0094 0E94 0000 		call sysclk_enable_module
 124               		.loc 1 449 0
 125 0098 00C0      		rjmp .L14
 126               	.L8:
 427:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG0, PRTWI_bm);
 127               		.loc 1 427 0
 128 009a 8981      		ldd r24,Y+1
 129 009c 9A81      		ldd r25,Y+2
 130 009e 883B      		cpi r24,-72
 131 00a0 9105      		cpc r25,__zero_reg__
 132 00a2 01F4      		brne .L9
 428:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 133               		.loc 1 428 0
 134 00a4 60E8      		ldi r22,lo8(-128)
 135 00a6 80E0      		ldi r24,0
 136 00a8 0E94 0000 		call sysclk_enable_module
 137               		.loc 1 449 0
 138 00ac 00C0      		rjmp .L14
 139               	.L9:
 433:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRUSART1_bm);
 140               		.loc 1 433 0
 141 00ae 8981      		ldd r24,Y+1
 142 00b0 9A81      		ldd r25,Y+2
 143 00b2 883C      		cpi r24,-56
 144 00b4 9105      		cpc r25,__zero_reg__
 145 00b6 01F4      		brne .L10
 434:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR3A) {
 146               		.loc 1 434 0
 147 00b8 61E0      		ldi r22,lo8(1)
 148 00ba 81E0      		ldi r24,lo8(1)
 149 00bc 0E94 0000 		call sysclk_enable_module
 150               		.loc 1 449 0
 151 00c0 00C0      		rjmp .L14
 152               	.L10:
 435:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM3_bm);
 153               		.loc 1 435 0
 154 00c2 8981      		ldd r24,Y+1
 155 00c4 9A81      		ldd r25,Y+2
 156 00c6 8039      		cpi r24,-112
 157 00c8 9105      		cpc r25,__zero_reg__
 158 00ca 01F4      		brne .L11
 436:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR4A) {
 159               		.loc 1 436 0
 160 00cc 68E0      		ldi r22,lo8(8)
 161 00ce 81E0      		ldi r24,lo8(1)
 162 00d0 0E94 0000 		call sysclk_enable_module
 163               		.loc 1 449 0
 164 00d4 00C0      		rjmp .L14
 165               	.L11:
 437:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM4_bm);
 166               		.loc 1 437 0
 167 00d6 8981      		ldd r24,Y+1
 168 00d8 9A81      		ldd r25,Y+2
 169 00da 803A      		cpi r24,-96
 170 00dc 9105      		cpc r25,__zero_reg__
 171 00de 01F4      		brne .L12
 438:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TCCR5A) {
 172               		.loc 1 438 0
 173 00e0 60E1      		ldi r22,lo8(16)
 174 00e2 81E0      		ldi r24,lo8(1)
 175 00e4 0E94 0000 		call sysclk_enable_module
 176               		.loc 1 449 0
 177 00e8 00C0      		rjmp .L14
 178               	.L12:
 439:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTIM5_bm);
 179               		.loc 1 439 0
 180 00ea 8981      		ldd r24,Y+1
 181 00ec 9A81      		ldd r25,Y+2
 182 00ee 8032      		cpi r24,32
 183 00f0 9140      		sbci r25,1
 184 00f2 01F4      		brne .L13
 440:../../../platform/common/services/clock/mega/sysclk.h **** 	} else if (module == &TRX_CTRL_0) {
 185               		.loc 1 440 0
 186 00f4 60E2      		ldi r22,lo8(32)
 187 00f6 81E0      		ldi r24,lo8(1)
 188 00f8 0E94 0000 		call sysclk_enable_module
 189               		.loc 1 449 0
 190 00fc 00C0      		rjmp .L14
 191               	.L13:
 441:../../../platform/common/services/clock/mega/sysclk.h **** 		sysclk_enable_module(POWER_RED_REG1, PRTRX24_bm);
 192               		.loc 1 441 0
 193 00fe 8981      		ldd r24,Y+1
 194 0100 9A81      		ldd r25,Y+2
 195 0102 8334      		cpi r24,67
 196 0104 9140      		sbci r25,1
 197 0106 01F4      		brne .L14
 442:../../../platform/common/services/clock/mega/sysclk.h **** 	}
 198               		.loc 1 442 0
 199 0108 60E4      		ldi r22,lo8(64)
 200 010a 81E0      		ldi r24,lo8(1)
 201 010c 0E94 0000 		call sysclk_enable_module
 202               	.L14:
 203               		.loc 1 449 0
 204 0110 0000      		nop
 205               	/* epilogue start */
 206 0112 0F90      		pop __tmp_reg__
 207 0114 0F90      		pop __tmp_reg__
 208 0116 DF91      		pop r29
 209 0118 CF91      		pop r28
 210 011a 0895      		ret
 211               		.cfi_endproc
 212               	.LFE69:
 215               	__portable_avr_delay_cycles:
 216               	.LFB74:
 217               		.file 2 "../../../platform/common/services/delay/mega_rf/cycle_counter.h"
   1:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** /**
   2:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \file
   3:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   4:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \brief AVR functions for busy-wait delay loops
   5:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   6:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * Copyright (c) 2011 - 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   8:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \asf_license_start
   9:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  10:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \page License
  11:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  12:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  15:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  18:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  22:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  25:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  28:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  40:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \asf_license_stop
  41:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  42:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  */
  43:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #ifndef _cycle_counter_h_
  44:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #define _cycle_counter_h_
  45:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  46:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #ifdef __cplusplus
  47:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** extern "C" {
  48:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #endif
  49:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  50:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #include <compiler.h>
  51:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  52:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** /**
  53:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @name Convenience functions for busy-wait delay loops
  54:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  55:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def delay_cycles
  56:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of CPU cycles.
  57:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param n number of CPU cycles to wait
  58:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  59:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_delay_ms
  60:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of milliseconds.
  61:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param delay number of milliseconds to wait
  62:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  63:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  64:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_delay_us
  65:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of microseconds.
  66:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param delay number of microseconds to wait
  67:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  68:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  69:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_ms_2_cy
  70:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Convert milli-seconds into CPU cycles.
  71:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param ms number of milliseconds
  72:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  73:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @return the converted number of CPU cycles
  74:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  75:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_us_2_cy
  76:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Convert micro-seconds into CPU cycles.
  77:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param ms number of microseconds
  78:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  79:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @return the converted number of CPU cycles
  80:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  81:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @{
  82:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  */
  83:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** __always_optimize
  84:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** static inline void __portable_avr_delay_cycles(unsigned long n)
  85:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** {
 218               		.loc 2 85 0
 219               		.cfi_startproc
 220               	/* prologue: function */
 221               	/* frame size = 0 */
 222               	/* stack size = 0 */
 223               	.L__stack_usage = 0
 224               	.L16:
  86:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 	do { barrier(); } while (--n);
 225               		.loc 2 86 0 discriminator 1
 226 011c 6150      		subi r22,1
 227 011e 7109      		sbc r23,__zero_reg__
 228 0120 8109      		sbc r24,__zero_reg__
 229 0122 9109      		sbc r25,__zero_reg__
 230 0124 01F4      		brne .L16
 231               	/* epilogue start */
  87:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** }
 232               		.loc 2 87 0
 233 0126 0895      		ret
 234               		.cfi_endproc
 235               	.LFE74:
 237               		.section	.bss.phyState,"aw",@nobits
 240               	phyState:
 241 0000 00        		.zero	1
 242               		.section	.bss.phyRxBuffer,"aw",@nobits
 245               	phyRxBuffer:
 246 0000 0000 0000 		.zero	128
 246      0000 0000 
 246      0000 0000 
 246      0000 0000 
 246      0000 0000 
 247               		.section	.bss.phyRxState,"aw",@nobits
 250               	phyRxState:
 251 0000 00        		.zero	1
 252               		.section	.bss.phyChannel,"aw",@nobits
 255               	phyChannel:
 256 0000 00        		.zero	1
 257               		.section	.bss.phyBand,"aw",@nobits
 260               	phyBand:
 261 0000 00        		.zero	1
 262               		.text
 263               	.global	PHY_Init
 265               	PHY_Init:
 266               	.LFB75:
 267               		.file 3 "../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c"
   1:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /**
   2:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * \file phy.c
   3:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  *
   4:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * \brief ATMEGAxxxRFR2 PHY implementation
   5:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  *
   6:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * Copyright (C) 2014, Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  *
   8:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  *
  10:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  *
  13:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  *
  16:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  *
  20:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  *
  23:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  *
  26:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  *
  38:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  *
  40:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  *
  41:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****  */
  42:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
  43:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #ifdef PHY_ATMEGARFR2
  44:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
  45:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*- Includes ---------------------------------------------------------------*/
  46:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #include "phy.h"
  47:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #include "delay.h"
  48:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #include "sal.h"
  49:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #include "atmegarfr2.h"
  50:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
  51:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*- Definitions ------------------------------------------------------------*/
  52:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #define PHY_CRC_SIZE          2
  53:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #define IRQ_CLEAR_VALUE       0xff
  54:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #define TRX_RPC_REG_VALUE     0xeb
  55:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
  56:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*- Types ------------------------------------------------------------------*/
  57:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** typedef enum {
  58:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	PHY_STATE_INITIAL,
  59:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	PHY_STATE_IDLE,
  60:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	PHY_STATE_SLEEP,
  61:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	PHY_STATE_TX_WAIT_END,
  62:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** } PhyState_t;
  63:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
  64:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*- Prototypes -------------------------------------------------------------*/
  65:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** static void phyTrxSetState(uint8_t state);
  66:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** static void phySetChannel(void);
  67:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** static void phySetRxState(void);
  68:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
  69:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*- Variables --------------------------------------------------------------*/
  70:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** static PhyState_t phyState = PHY_STATE_INITIAL;
  71:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** static uint8_t phyRxBuffer[128];
  72:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** static bool phyRxState;
  73:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** static uint8_t phyChannel;
  74:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** static uint8_t phyBand;
  75:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
  76:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*- Implementations --------------------------------------------------------*/
  77:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
  78:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
  79:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
  80:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** void PHY_Init(void)
  81:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 268               		.loc 3 81 0
 269               		.cfi_startproc
 270 0128 0F93      		push r16
 271               	.LCFI4:
 272               		.cfi_def_cfa_offset 4
 273               		.cfi_offset 16, -3
 274 012a 1F93      		push r17
 275               	.LCFI5:
 276               		.cfi_def_cfa_offset 5
 277               		.cfi_offset 17, -4
 278 012c CF93      		push r28
 279               	.LCFI6:
 280               		.cfi_def_cfa_offset 6
 281               		.cfi_offset 28, -5
 282 012e DF93      		push r29
 283               	.LCFI7:
 284               		.cfi_def_cfa_offset 7
 285               		.cfi_offset 29, -6
 286 0130 CDB7      		in r28,__SP_L__
 287 0132 DEB7      		in r29,__SP_H__
 288               	.LCFI8:
 289               		.cfi_def_cfa_register 28
 290               	/* prologue: function */
 291               	/* frame size = 0 */
 292               	/* stack size = 4 */
 293               	.L__stack_usage = 4
  82:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	sysclk_enable_peripheral_clock(&TRX_CTRL_0);
 294               		.loc 3 82 0
 295 0134 83E4      		ldi r24,lo8(67)
 296 0136 91E0      		ldi r25,lo8(1)
 297 0138 0E94 0000 		call sysclk_enable_peripheral_clock
  83:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
  84:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	TRXPR_REG_s.trxrst = 1;
 298               		.loc 3 84 0
 299 013c 89E3      		ldi r24,lo8(57)
 300 013e 91E0      		ldi r25,lo8(1)
 301 0140 FC01      		movw r30,r24
 302 0142 2081      		ld r18,Z
 303 0144 2160      		ori r18,lo8(1)
 304 0146 FC01      		movw r30,r24
 305 0148 2083      		st Z,r18
  85:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
  86:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phyRxState = false;
 306               		.loc 3 86 0
 307 014a 1092 0000 		sts phyRxState,__zero_reg__
  87:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phyBand = 0;
 308               		.loc 3 87 0
 309 014e 1092 0000 		sts phyBand,__zero_reg__
  88:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phyState = PHY_STATE_IDLE;
 310               		.loc 3 88 0
 311 0152 81E0      		ldi r24,lo8(1)
 312 0154 8093 0000 		sts phyState,r24
  89:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
  90:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phyTrxSetState(TRX_CMD_TRX_OFF);
 313               		.loc 3 90 0
 314 0158 88E0      		ldi r24,lo8(8)
 315 015a 0E94 0000 		call phyTrxSetState
  91:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
  92:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	TRX_RPC_REG = TRX_RPC_REG_VALUE;
 316               		.loc 3 92 0
 317 015e 86E5      		ldi r24,lo8(86)
 318 0160 91E0      		ldi r25,lo8(1)
 319 0162 2BEE      		ldi r18,lo8(-21)
 320 0164 FC01      		movw r30,r24
 321 0166 2083      		st Z,r18
  93:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
  94:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	TRX_CTRL_2_REG_s.rxSafeMode = 1;
 322               		.loc 3 94 0
 323 0168 8CE4      		ldi r24,lo8(76)
 324 016a 91E0      		ldi r25,lo8(1)
 325 016c FC01      		movw r30,r24
 326 016e 2081      		ld r18,Z
 327 0170 2068      		ori r18,lo8(-128)
 328 0172 FC01      		movw r30,r24
 329 0174 2083      		st Z,r18
  95:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
  96:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #ifdef PHY_ENABLE_RANDOM_NUMBER_GENERATOR
  97:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	CSMA_SEED_0_REG = (uint8_t)PHY_RandomReq();
 330               		.loc 3 97 0
 331 0176 0DE6      		ldi r16,lo8(109)
 332 0178 11E0      		ldi r17,lo8(1)
 333 017a 0E94 0000 		call PHY_RandomReq
 334 017e F801      		movw r30,r16
 335 0180 8083      		st Z,r24
  98:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #endif
  99:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 100:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #if (ANTENNA_DIVERSITY == 1)
 101:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	ANT_DIV_REG_s.antCtrl = 2;
 336               		.loc 3 101 0
 337 0182 8DE4      		ldi r24,lo8(77)
 338 0184 91E0      		ldi r25,lo8(1)
 339 0186 FC01      		movw r30,r24
 340 0188 2081      		ld r18,Z
 341 018a 2C7F      		andi r18,lo8(-4)
 342 018c 2260      		ori r18,lo8(2)
 343 018e FC01      		movw r30,r24
 344 0190 2083      		st Z,r18
 102:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	RX_CTRL_REG_s.pdtThres = 0x03;
 345               		.loc 3 102 0
 346 0192 8AE4      		ldi r24,lo8(74)
 347 0194 91E0      		ldi r25,lo8(1)
 348 0196 FC01      		movw r30,r24
 349 0198 2081      		ld r18,Z
 350 019a 207F      		andi r18,lo8(-16)
 351 019c 2360      		ori r18,lo8(3)
 352 019e FC01      		movw r30,r24
 353 01a0 2083      		st Z,r18
 103:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	ANT_DIV_REG_s.antDivEn = 1;
 354               		.loc 3 103 0
 355 01a2 8DE4      		ldi r24,lo8(77)
 356 01a4 91E0      		ldi r25,lo8(1)
 357 01a6 FC01      		movw r30,r24
 358 01a8 2081      		ld r18,Z
 359 01aa 2860      		ori r18,lo8(8)
 360 01ac FC01      		movw r30,r24
 361 01ae 2083      		st Z,r18
 104:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	ANT_DIV_REG_s.antExtSwEn = 1;
 362               		.loc 3 104 0
 363 01b0 8DE4      		ldi r24,lo8(77)
 364 01b2 91E0      		ldi r25,lo8(1)
 365 01b4 FC01      		movw r30,r24
 366 01b6 2081      		ld r18,Z
 367 01b8 2460      		ori r18,lo8(4)
 368 01ba FC01      		movw r30,r24
 369 01bc 2083      		st Z,r18
 105:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #else
 106:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	#if (ANTENNA_DEFAULT != 0)
 107:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 1;
 108:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		ANT_DIV_REG_s.antCtrl = ANTENNA_DEFAULT;
 109:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	#endif // ANTENNA_DEFAULT
 110:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #endif // ANTENNA_DIVERSITY
 111:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #ifdef EXT_RF_FRONT_END_CTRL
 112:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	TRX_CTRL_1_REG_s.paExtEn = 1;
 370               		.loc 3 112 0
 371 01be 84E4      		ldi r24,lo8(68)
 372 01c0 91E0      		ldi r25,lo8(1)
 373 01c2 FC01      		movw r30,r24
 374 01c4 2081      		ld r18,Z
 375 01c6 2068      		ori r18,lo8(-128)
 376 01c8 FC01      		movw r30,r24
 377 01ca 2083      		st Z,r18
 113:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #endif // EXT_RF_FRONT_END_CTRL
 114:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 378               		.loc 3 114 0
 379 01cc 0000      		nop
 380               	/* epilogue start */
 381 01ce DF91      		pop r29
 382 01d0 CF91      		pop r28
 383 01d2 1F91      		pop r17
 384 01d4 0F91      		pop r16
 385 01d6 0895      		ret
 386               		.cfi_endproc
 387               	.LFE75:
 389               	.global	PHY_SetTdmaMode
 391               	PHY_SetTdmaMode:
 392               	.LFB76:
 115:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** void PHY_SetTdmaMode(bool mode)
 116:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 393               		.loc 3 116 0
 394               		.cfi_startproc
 395 01d8 CF93      		push r28
 396               	.LCFI9:
 397               		.cfi_def_cfa_offset 4
 398               		.cfi_offset 28, -3
 399 01da DF93      		push r29
 400               	.LCFI10:
 401               		.cfi_def_cfa_offset 5
 402               		.cfi_offset 29, -4
 403 01dc 1F92      		push __zero_reg__
 404               	.LCFI11:
 405               		.cfi_def_cfa_offset 6
 406 01de CDB7      		in r28,__SP_L__
 407 01e0 DEB7      		in r29,__SP_H__
 408               	.LCFI12:
 409               		.cfi_def_cfa_register 28
 410               	/* prologue: function */
 411               	/* frame size = 1 */
 412               	/* stack size = 3 */
 413               	.L__stack_usage = 3
 414 01e2 8983      		std Y+1,r24
 117:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	if(mode)
 415               		.loc 3 117 0
 416 01e4 8981      		ldd r24,Y+1
 417 01e6 8823      		tst r24
 418 01e8 01F0      		breq .L21
 118:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	{
 119:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		XAH_CTRL_0_REG_s.maxFrameRetries = 0;
 419               		.loc 3 119 0
 420 01ea 8CE6      		ldi r24,lo8(108)
 421 01ec 91E0      		ldi r25,lo8(1)
 422 01ee FC01      		movw r30,r24
 423 01f0 2081      		ld r18,Z
 424 01f2 2F70      		andi r18,lo8(15)
 425 01f4 FC01      		movw r30,r24
 426 01f6 2083      		st Z,r18
 120:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 7;
 427               		.loc 3 120 0
 428 01f8 8CE6      		ldi r24,lo8(108)
 429 01fa 91E0      		ldi r25,lo8(1)
 430 01fc FC01      		movw r30,r24
 431 01fe 2081      		ld r18,Z
 432 0200 2E60      		ori r18,lo8(14)
 433 0202 FC01      		movw r30,r24
 434 0204 2083      		st Z,r18
 121:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		
 122:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 1;	// Disable ACK even if requested
 435               		.loc 3 122 0
 436 0206 8EE6      		ldi r24,lo8(110)
 437 0208 91E0      		ldi r25,lo8(1)
 438 020a FC01      		movw r30,r24
 439 020c 2081      		ld r18,Z
 440 020e 2061      		ori r18,lo8(16)
 441 0210 FC01      		movw r30,r24
 442 0212 2083      		st Z,r18
 123:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	}
 124:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	else
 125:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	{
 126:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		XAH_CTRL_0_REG_s.maxFrameRetries = 3;
 127:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 4;
 128:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		
 129:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 130:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	}
 131:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 443               		.loc 3 131 0
 444 0214 00C0      		rjmp .L23
 445               	.L21:
 126:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 4;
 446               		.loc 3 126 0
 447 0216 8CE6      		ldi r24,lo8(108)
 448 0218 91E0      		ldi r25,lo8(1)
 449 021a FC01      		movw r30,r24
 450 021c 2081      		ld r18,Z
 451 021e 2F70      		andi r18,lo8(15)
 452 0220 2063      		ori r18,lo8(48)
 453 0222 FC01      		movw r30,r24
 454 0224 2083      		st Z,r18
 127:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		
 455               		.loc 3 127 0
 456 0226 8CE6      		ldi r24,lo8(108)
 457 0228 91E0      		ldi r25,lo8(1)
 458 022a FC01      		movw r30,r24
 459 022c 2081      		ld r18,Z
 460 022e 217F      		andi r18,lo8(-15)
 461 0230 2860      		ori r18,lo8(8)
 462 0232 FC01      		movw r30,r24
 463 0234 2083      		st Z,r18
 129:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	}
 464               		.loc 3 129 0
 465 0236 8EE6      		ldi r24,lo8(110)
 466 0238 91E0      		ldi r25,lo8(1)
 467 023a FC01      		movw r30,r24
 468 023c 2081      		ld r18,Z
 469 023e 2F7E      		andi r18,lo8(-17)
 470 0240 FC01      		movw r30,r24
 471 0242 2083      		st Z,r18
 472               	.L23:
 473               		.loc 3 131 0
 474 0244 0000      		nop
 475               	/* epilogue start */
 476 0246 0F90      		pop __tmp_reg__
 477 0248 DF91      		pop r29
 478 024a CF91      		pop r28
 479 024c 0895      		ret
 480               		.cfi_endproc
 481               	.LFE76:
 483               	.global	PHY_SetPromiscuousMode
 485               	PHY_SetPromiscuousMode:
 486               	.LFB77:
 132:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 133:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** void PHY_SetPromiscuousMode(bool mode)
 134:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 487               		.loc 3 134 0
 488               		.cfi_startproc
 489 024e CF93      		push r28
 490               	.LCFI13:
 491               		.cfi_def_cfa_offset 4
 492               		.cfi_offset 28, -3
 493 0250 DF93      		push r29
 494               	.LCFI14:
 495               		.cfi_def_cfa_offset 5
 496               		.cfi_offset 29, -4
 497 0252 CDB7      		in r28,__SP_L__
 498 0254 DEB7      		in r29,__SP_H__
 499               	.LCFI15:
 500               		.cfi_def_cfa_register 28
 501 0256 2997      		sbiw r28,9
 502               	.LCFI16:
 503               		.cfi_def_cfa_offset 14
 504 0258 0FB6      		in __tmp_reg__,__SREG__
 505 025a F894      		cli
 506 025c DEBF      		out __SP_H__,r29
 507 025e 0FBE      		out __SREG__,__tmp_reg__
 508 0260 CDBF      		out __SP_L__,r28
 509               	/* prologue: function */
 510               	/* frame size = 9 */
 511               	/* stack size = 11 */
 512               	.L__stack_usage = 11
 513 0262 8987      		std Y+9,r24
 135:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	uint8_t ieee_address[] = { 0, 0, 0, 0, 0, 0, 0, 0 };
 514               		.loc 3 135 0
 515 0264 28E0      		ldi r18,lo8(8)
 516 0266 CE01      		movw r24,r28
 517 0268 0196      		adiw r24,1
 518 026a FC01      		movw r30,r24
 519 026c 322F      		mov r19,r18
 520               		0:
 521 026e 1192      		st Z+,__zero_reg__
 522 0270 3A95      		dec r19
 523 0272 01F4      		brne 0b
 136:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 137:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	if(mode)
 524               		.loc 3 137 0
 525 0274 8985      		ldd r24,Y+9
 526 0276 8823      		tst r24
 527 0278 01F0      		breq .L25
 138:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	{
 139:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		PHY_SetShortAddr(0);
 528               		.loc 3 139 0
 529 027a 80E0      		ldi r24,0
 530 027c 90E0      		ldi r25,0
 531 027e 0E94 0000 		call PHY_SetShortAddr
 140:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		PHY_SetPanId(0);
 532               		.loc 3 140 0
 533 0282 80E0      		ldi r24,0
 534 0284 90E0      		ldi r25,0
 535 0286 0E94 0000 		call PHY_SetPanId
 141:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		PHY_SetIEEEAddr(ieee_address);
 536               		.loc 3 141 0
 537 028a CE01      		movw r24,r28
 538 028c 0196      		adiw r24,1
 539 028e 0E94 0000 		call PHY_SetIEEEAddr
 142:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 143:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** // AACK_UPLD_RES_FT = 1, AACK_FLT_RES_FT = 0:
 144:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** //	Any non-corrupted frame with a reserved frame type is indicated by a
 145:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** //	TRX24_RX_END interrupt. No further address filtering is applied on those frames.
 146:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** //	A TRX24_AMI interrupt is never generated and the acknowledgment subfield is
 147:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** //	ignored.
 148:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 149:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		XAH_CTRL_1_REG_s.aackPromMode = 1;	// Enable promiscuous mode
 540               		.loc 3 149 0
 541 0292 87E5      		ldi r24,lo8(87)
 542 0294 91E0      		ldi r25,lo8(1)
 543 0296 FC01      		movw r30,r24
 544 0298 2081      		ld r18,Z
 545 029a 2260      		ori r18,lo8(2)
 546 029c FC01      		movw r30,r24
 547 029e 2083      		st Z,r18
 150:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		XAH_CTRL_1_REG_s.aackUpldResFt = 1;	// Enable reserved frame type reception ; this was changed to
 548               		.loc 3 150 0
 549 02a0 87E5      		ldi r24,lo8(87)
 550 02a2 91E0      		ldi r25,lo8(1)
 551 02a4 FC01      		movw r30,r24
 552 02a6 2081      		ld r18,Z
 553 02a8 2061      		ori r18,lo8(16)
 554 02aa FC01      		movw r30,r24
 555 02ac 2083      		st Z,r18
 151:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****                                         // so that the addres isn't checked by filter
 152:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		XAH_CTRL_1_REG_s.aackFltrResFt = 0;	// Disable filter of reserved frame types
 556               		.loc 3 152 0
 557 02ae 87E5      		ldi r24,lo8(87)
 558 02b0 91E0      		ldi r25,lo8(1)
 559 02b2 FC01      		movw r30,r24
 560 02b4 2081      		ld r18,Z
 561 02b6 2F7D      		andi r18,lo8(-33)
 562 02b8 FC01      		movw r30,r24
 563 02ba 2083      		st Z,r18
 153:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 1;		// Disable generation of acknowledgment
 564               		.loc 3 153 0
 565 02bc 8EE6      		ldi r24,lo8(110)
 566 02be 91E0      		ldi r25,lo8(1)
 567 02c0 FC01      		movw r30,r24
 568 02c2 2081      		ld r18,Z
 569 02c4 2061      		ori r18,lo8(16)
 570 02c6 FC01      		movw r30,r24
 571 02c8 2083      		st Z,r18
 154:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	}
 155:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	else
 156:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	{
 157:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		XAH_CTRL_1_REG = 0;
 158:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 159:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	}
 160:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 572               		.loc 3 160 0
 573 02ca 00C0      		rjmp .L27
 574               	.L25:
 157:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 575               		.loc 3 157 0
 576 02cc 87E5      		ldi r24,lo8(87)
 577 02ce 91E0      		ldi r25,lo8(1)
 578 02d0 FC01      		movw r30,r24
 579 02d2 1082      		st Z,__zero_reg__
 158:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	}
 580               		.loc 3 158 0
 581 02d4 8EE6      		ldi r24,lo8(110)
 582 02d6 91E0      		ldi r25,lo8(1)
 583 02d8 FC01      		movw r30,r24
 584 02da 2081      		ld r18,Z
 585 02dc 2F7E      		andi r18,lo8(-17)
 586 02de FC01      		movw r30,r24
 587 02e0 2083      		st Z,r18
 588               	.L27:
 589               		.loc 3 160 0
 590 02e2 0000      		nop
 591               	/* epilogue start */
 592 02e4 2996      		adiw r28,9
 593 02e6 0FB6      		in __tmp_reg__,__SREG__
 594 02e8 F894      		cli
 595 02ea DEBF      		out __SP_H__,r29
 596 02ec 0FBE      		out __SREG__,__tmp_reg__
 597 02ee CDBF      		out __SP_L__,r28
 598 02f0 DF91      		pop r29
 599 02f2 CF91      		pop r28
 600 02f4 0895      		ret
 601               		.cfi_endproc
 602               	.LFE77:
 604               	.global	PHY_SetRxState
 606               	PHY_SetRxState:
 607               	.LFB78:
 161:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 162:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 163:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
 164:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
 165:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** void PHY_SetRxState(bool rx)
 166:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 608               		.loc 3 166 0
 609               		.cfi_startproc
 610 02f6 CF93      		push r28
 611               	.LCFI17:
 612               		.cfi_def_cfa_offset 4
 613               		.cfi_offset 28, -3
 614 02f8 DF93      		push r29
 615               	.LCFI18:
 616               		.cfi_def_cfa_offset 5
 617               		.cfi_offset 29, -4
 618 02fa 1F92      		push __zero_reg__
 619               	.LCFI19:
 620               		.cfi_def_cfa_offset 6
 621 02fc CDB7      		in r28,__SP_L__
 622 02fe DEB7      		in r29,__SP_H__
 623               	.LCFI20:
 624               		.cfi_def_cfa_register 28
 625               	/* prologue: function */
 626               	/* frame size = 1 */
 627               	/* stack size = 3 */
 628               	.L__stack_usage = 3
 629 0300 8983      		std Y+1,r24
 167:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phyRxState = rx;
 630               		.loc 3 167 0
 631 0302 8981      		ldd r24,Y+1
 632 0304 8093 0000 		sts phyRxState,r24
 168:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phySetRxState();
 633               		.loc 3 168 0
 634 0308 0E94 0000 		call phySetRxState
 169:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 635               		.loc 3 169 0
 636 030c 0000      		nop
 637               	/* epilogue start */
 638 030e 0F90      		pop __tmp_reg__
 639 0310 DF91      		pop r29
 640 0312 CF91      		pop r28
 641 0314 0895      		ret
 642               		.cfi_endproc
 643               	.LFE78:
 645               	.global	PHY_SetChannel
 647               	PHY_SetChannel:
 648               	.LFB79:
 170:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 171:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
 172:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
 173:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** void PHY_SetChannel(uint8_t channel)
 174:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 649               		.loc 3 174 0
 650               		.cfi_startproc
 651 0316 CF93      		push r28
 652               	.LCFI21:
 653               		.cfi_def_cfa_offset 4
 654               		.cfi_offset 28, -3
 655 0318 DF93      		push r29
 656               	.LCFI22:
 657               		.cfi_def_cfa_offset 5
 658               		.cfi_offset 29, -4
 659 031a 1F92      		push __zero_reg__
 660               	.LCFI23:
 661               		.cfi_def_cfa_offset 6
 662 031c CDB7      		in r28,__SP_L__
 663 031e DEB7      		in r29,__SP_H__
 664               	.LCFI24:
 665               		.cfi_def_cfa_register 28
 666               	/* prologue: function */
 667               	/* frame size = 1 */
 668               	/* stack size = 3 */
 669               	.L__stack_usage = 3
 670 0320 8983      		std Y+1,r24
 175:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phyChannel = channel;
 671               		.loc 3 175 0
 672 0322 8981      		ldd r24,Y+1
 673 0324 8093 0000 		sts phyChannel,r24
 176:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phySetChannel();
 674               		.loc 3 176 0
 675 0328 0E94 0000 		call phySetChannel
 177:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 676               		.loc 3 177 0
 677 032c 0000      		nop
 678               	/* epilogue start */
 679 032e 0F90      		pop __tmp_reg__
 680 0330 DF91      		pop r29
 681 0332 CF91      		pop r28
 682 0334 0895      		ret
 683               		.cfi_endproc
 684               	.LFE79:
 686               	.global	PHY_SetBand
 688               	PHY_SetBand:
 689               	.LFB80:
 178:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 179:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
 180:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
 181:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** void PHY_SetBand(uint8_t band)
 182:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 690               		.loc 3 182 0
 691               		.cfi_startproc
 692 0336 CF93      		push r28
 693               	.LCFI25:
 694               		.cfi_def_cfa_offset 4
 695               		.cfi_offset 28, -3
 696 0338 DF93      		push r29
 697               	.LCFI26:
 698               		.cfi_def_cfa_offset 5
 699               		.cfi_offset 29, -4
 700 033a 1F92      		push __zero_reg__
 701               	.LCFI27:
 702               		.cfi_def_cfa_offset 6
 703 033c CDB7      		in r28,__SP_L__
 704 033e DEB7      		in r29,__SP_H__
 705               	.LCFI28:
 706               		.cfi_def_cfa_register 28
 707               	/* prologue: function */
 708               	/* frame size = 1 */
 709               	/* stack size = 3 */
 710               	.L__stack_usage = 3
 711 0340 8983      		std Y+1,r24
 183:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phyBand = band;
 712               		.loc 3 183 0
 713 0342 8981      		ldd r24,Y+1
 714 0344 8093 0000 		sts phyBand,r24
 184:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phySetChannel();
 715               		.loc 3 184 0
 716 0348 0E94 0000 		call phySetChannel
 185:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 717               		.loc 3 185 0
 718 034c 0000      		nop
 719               	/* epilogue start */
 720 034e 0F90      		pop __tmp_reg__
 721 0350 DF91      		pop r29
 722 0352 CF91      		pop r28
 723 0354 0895      		ret
 724               		.cfi_endproc
 725               	.LFE80:
 727               	.global	PHY_SetPanId
 729               	PHY_SetPanId:
 730               	.LFB81:
 186:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 187:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
 188:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
 189:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** void PHY_SetPanId(uint16_t panId)
 190:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 731               		.loc 3 190 0
 732               		.cfi_startproc
 733 0356 CF93      		push r28
 734               	.LCFI29:
 735               		.cfi_def_cfa_offset 4
 736               		.cfi_offset 28, -3
 737 0358 DF93      		push r29
 738               	.LCFI30:
 739               		.cfi_def_cfa_offset 5
 740               		.cfi_offset 29, -4
 741 035a 00D0      		rcall .
 742 035c 1F92      		push __zero_reg__
 743               	.LCFI31:
 744               		.cfi_def_cfa_offset 9
 745 035e CDB7      		in r28,__SP_L__
 746 0360 DEB7      		in r29,__SP_H__
 747               	.LCFI32:
 748               		.cfi_def_cfa_register 28
 749               	/* prologue: function */
 750               	/* frame size = 4 */
 751               	/* stack size = 6 */
 752               	.L__stack_usage = 6
 753 0362 9C83      		std Y+4,r25
 754 0364 8B83      		std Y+3,r24
 191:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	uint8_t *d = (uint8_t *)&panId;
 755               		.loc 3 191 0
 756 0366 CE01      		movw r24,r28
 757 0368 0396      		adiw r24,3
 758 036a 9A83      		std Y+2,r25
 759 036c 8983      		std Y+1,r24
 192:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 193:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	PAN_ID_0_REG = d[0];
 760               		.loc 3 193 0
 761 036e 82E6      		ldi r24,lo8(98)
 762 0370 91E0      		ldi r25,lo8(1)
 763 0372 2981      		ldd r18,Y+1
 764 0374 3A81      		ldd r19,Y+2
 765 0376 F901      		movw r30,r18
 766 0378 2081      		ld r18,Z
 767 037a FC01      		movw r30,r24
 768 037c 2083      		st Z,r18
 194:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	PAN_ID_1_REG = d[1];
 769               		.loc 3 194 0
 770 037e 83E6      		ldi r24,lo8(99)
 771 0380 91E0      		ldi r25,lo8(1)
 772 0382 2981      		ldd r18,Y+1
 773 0384 3A81      		ldd r19,Y+2
 774 0386 F901      		movw r30,r18
 775 0388 2181      		ldd r18,Z+1
 776 038a FC01      		movw r30,r24
 777 038c 2083      		st Z,r18
 195:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 778               		.loc 3 195 0
 779 038e 0000      		nop
 780               	/* epilogue start */
 781 0390 0F90      		pop __tmp_reg__
 782 0392 0F90      		pop __tmp_reg__
 783 0394 0F90      		pop __tmp_reg__
 784 0396 0F90      		pop __tmp_reg__
 785 0398 DF91      		pop r29
 786 039a CF91      		pop r28
 787 039c 0895      		ret
 788               		.cfi_endproc
 789               	.LFE81:
 791               	.global	PHY_SetShortAddr
 793               	PHY_SetShortAddr:
 794               	.LFB82:
 196:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 197:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
 198:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
 199:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** void PHY_SetShortAddr(uint16_t addr)
 200:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 795               		.loc 3 200 0
 796               		.cfi_startproc
 797 039e CF93      		push r28
 798               	.LCFI33:
 799               		.cfi_def_cfa_offset 4
 800               		.cfi_offset 28, -3
 801 03a0 DF93      		push r29
 802               	.LCFI34:
 803               		.cfi_def_cfa_offset 5
 804               		.cfi_offset 29, -4
 805 03a2 00D0      		rcall .
 806 03a4 1F92      		push __zero_reg__
 807               	.LCFI35:
 808               		.cfi_def_cfa_offset 9
 809 03a6 CDB7      		in r28,__SP_L__
 810 03a8 DEB7      		in r29,__SP_H__
 811               	.LCFI36:
 812               		.cfi_def_cfa_register 28
 813               	/* prologue: function */
 814               	/* frame size = 4 */
 815               	/* stack size = 6 */
 816               	.L__stack_usage = 6
 817 03aa 9C83      		std Y+4,r25
 818 03ac 8B83      		std Y+3,r24
 201:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	uint8_t *d = (uint8_t *)&addr;
 819               		.loc 3 201 0
 820 03ae CE01      		movw r24,r28
 821 03b0 0396      		adiw r24,3
 822 03b2 9A83      		std Y+2,r25
 823 03b4 8983      		std Y+1,r24
 202:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 203:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	SHORT_ADDR_0_REG = d[0];
 824               		.loc 3 203 0
 825 03b6 80E6      		ldi r24,lo8(96)
 826 03b8 91E0      		ldi r25,lo8(1)
 827 03ba 2981      		ldd r18,Y+1
 828 03bc 3A81      		ldd r19,Y+2
 829 03be F901      		movw r30,r18
 830 03c0 2081      		ld r18,Z
 831 03c2 FC01      		movw r30,r24
 832 03c4 2083      		st Z,r18
 204:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	SHORT_ADDR_1_REG = d[1];
 833               		.loc 3 204 0
 834 03c6 81E6      		ldi r24,lo8(97)
 835 03c8 91E0      		ldi r25,lo8(1)
 836 03ca 2981      		ldd r18,Y+1
 837 03cc 3A81      		ldd r19,Y+2
 838 03ce F901      		movw r30,r18
 839 03d0 2181      		ldd r18,Z+1
 840 03d2 FC01      		movw r30,r24
 841 03d4 2083      		st Z,r18
 205:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 206:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #ifndef PHY_ENABLE_RANDOM_NUMBER_GENERATOR
 207:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	CSMA_SEED_0_REG = d[0] + d[1];
 208:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #endif
 209:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 842               		.loc 3 209 0
 843 03d6 0000      		nop
 844               	/* epilogue start */
 845 03d8 0F90      		pop __tmp_reg__
 846 03da 0F90      		pop __tmp_reg__
 847 03dc 0F90      		pop __tmp_reg__
 848 03de 0F90      		pop __tmp_reg__
 849 03e0 DF91      		pop r29
 850 03e2 CF91      		pop r28
 851 03e4 0895      		ret
 852               		.cfi_endproc
 853               	.LFE82:
 855               	.global	PHY_SetTxPower
 857               	PHY_SetTxPower:
 858               	.LFB83:
 210:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 211:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
 212:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
 213:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** void PHY_SetTxPower(uint8_t txPower)
 214:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 859               		.loc 3 214 0
 860               		.cfi_startproc
 861 03e6 CF93      		push r28
 862               	.LCFI37:
 863               		.cfi_def_cfa_offset 4
 864               		.cfi_offset 28, -3
 865 03e8 DF93      		push r29
 866               	.LCFI38:
 867               		.cfi_def_cfa_offset 5
 868               		.cfi_offset 29, -4
 869 03ea 1F92      		push __zero_reg__
 870               	.LCFI39:
 871               		.cfi_def_cfa_offset 6
 872 03ec CDB7      		in r28,__SP_L__
 873 03ee DEB7      		in r29,__SP_H__
 874               	.LCFI40:
 875               		.cfi_def_cfa_register 28
 876               	/* prologue: function */
 877               	/* frame size = 1 */
 878               	/* stack size = 3 */
 879               	.L__stack_usage = 3
 880 03f0 8983      		std Y+1,r24
 215:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	PHY_TX_PWR_REG_s.txPwr = txPower;
 881               		.loc 3 215 0
 882 03f2 85E4      		ldi r24,lo8(69)
 883 03f4 91E0      		ldi r25,lo8(1)
 884 03f6 2981      		ldd r18,Y+1
 885 03f8 2F70      		andi r18,lo8(15)
 886 03fa 2F70      		andi r18,lo8(15)
 887 03fc FC01      		movw r30,r24
 888 03fe 3081      		ld r19,Z
 889 0400 307F      		andi r19,lo8(-16)
 890 0402 232B      		or r18,r19
 891 0404 FC01      		movw r30,r24
 892 0406 2083      		st Z,r18
 216:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 893               		.loc 3 216 0
 894 0408 0000      		nop
 895               	/* epilogue start */
 896 040a 0F90      		pop __tmp_reg__
 897 040c DF91      		pop r29
 898 040e CF91      		pop r28
 899 0410 0895      		ret
 900               		.cfi_endproc
 901               	.LFE83:
 903               	.global	PHY_Sleep
 905               	PHY_Sleep:
 906               	.LFB84:
 217:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 218:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
 219:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
 220:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** void PHY_Sleep(void)
 221:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 907               		.loc 3 221 0
 908               		.cfi_startproc
 909 0412 CF93      		push r28
 910               	.LCFI41:
 911               		.cfi_def_cfa_offset 4
 912               		.cfi_offset 28, -3
 913 0414 DF93      		push r29
 914               	.LCFI42:
 915               		.cfi_def_cfa_offset 5
 916               		.cfi_offset 29, -4
 917 0416 CDB7      		in r28,__SP_L__
 918 0418 DEB7      		in r29,__SP_H__
 919               	.LCFI43:
 920               		.cfi_def_cfa_register 28
 921               	/* prologue: function */
 922               	/* frame size = 0 */
 923               	/* stack size = 2 */
 924               	.L__stack_usage = 2
 222:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	if(phyState != PHY_STATE_SLEEP)
 925               		.loc 3 222 0
 926 041a 8091 0000 		lds r24,phyState
 927 041e 8230      		cpi r24,lo8(2)
 928 0420 01F0      		breq .L35
 223:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	{
 224:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		phyTrxSetState(TRX_CMD_TRX_OFF);
 929               		.loc 3 224 0
 930 0422 88E0      		ldi r24,lo8(8)
 931 0424 0E94 0000 		call phyTrxSetState
 225:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		TRXPR_REG_s.slptr = 1;
 932               		.loc 3 225 0
 933 0428 89E3      		ldi r24,lo8(57)
 934 042a 91E0      		ldi r25,lo8(1)
 935 042c FC01      		movw r30,r24
 936 042e 2081      		ld r18,Z
 937 0430 2260      		ori r18,lo8(2)
 938 0432 FC01      		movw r30,r24
 939 0434 2083      		st Z,r18
 226:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		phyState = PHY_STATE_SLEEP;		
 940               		.loc 3 226 0
 941 0436 82E0      		ldi r24,lo8(2)
 942 0438 8093 0000 		sts phyState,r24
 943               	.L35:
 227:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	}
 228:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	
 229:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #if (ANTENNA_DIVERSITY == 1)
 230:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	ANT_DIV_REG_s.antExtSwEn = 0;
 944               		.loc 3 230 0
 945 043c 8DE4      		ldi r24,lo8(77)
 946 043e 91E0      		ldi r25,lo8(1)
 947 0440 FC01      		movw r30,r24
 948 0442 2081      		ld r18,Z
 949 0444 2B7F      		andi r18,lo8(-5)
 950 0446 FC01      		movw r30,r24
 951 0448 2083      		st Z,r18
 231:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	ANT_DIV_REG_s.antDivEn = 0;
 952               		.loc 3 231 0
 953 044a 8DE4      		ldi r24,lo8(77)
 954 044c 91E0      		ldi r25,lo8(1)
 955 044e FC01      		movw r30,r24
 956 0450 2081      		ld r18,Z
 957 0452 277F      		andi r18,lo8(-9)
 958 0454 FC01      		movw r30,r24
 959 0456 2083      		st Z,r18
 232:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #else
 233:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	#if (ANTENNA_DEFAULT != 0)
 234:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 0;
 235:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		ANT_DIV_REG_s.antCtrl = 0;
 236:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	#endif // ANTENNA_DEFAULT
 237:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #endif // ANTENNA_DIVERSITY
 238:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #ifdef EXT_RF_FRONT_END_CTRL
 239:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	TRX_CTRL_1_REG_s.paExtEn = 0;
 960               		.loc 3 239 0
 961 0458 84E4      		ldi r24,lo8(68)
 962 045a 91E0      		ldi r25,lo8(1)
 963 045c FC01      		movw r30,r24
 964 045e 2081      		ld r18,Z
 965 0460 2F77      		andi r18,lo8(127)
 966 0462 FC01      		movw r30,r24
 967 0464 2083      		st Z,r18
 240:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #endif // EXT_RF_FRONT_END_CTRL
 241:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 968               		.loc 3 241 0
 969 0466 0000      		nop
 970               	/* epilogue start */
 971 0468 DF91      		pop r29
 972 046a CF91      		pop r28
 973 046c 0895      		ret
 974               		.cfi_endproc
 975               	.LFE84:
 977               	.global	PHY_Wakeup
 979               	PHY_Wakeup:
 980               	.LFB85:
 242:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 243:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
 244:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
 245:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** void PHY_Wakeup(void)
 246:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 981               		.loc 3 246 0
 982               		.cfi_startproc
 983 046e CF93      		push r28
 984               	.LCFI44:
 985               		.cfi_def_cfa_offset 4
 986               		.cfi_offset 28, -3
 987 0470 DF93      		push r29
 988               	.LCFI45:
 989               		.cfi_def_cfa_offset 5
 990               		.cfi_offset 29, -4
 991 0472 CDB7      		in r28,__SP_L__
 992 0474 DEB7      		in r29,__SP_H__
 993               	.LCFI46:
 994               		.cfi_def_cfa_register 28
 995               	/* prologue: function */
 996               	/* frame size = 0 */
 997               	/* stack size = 2 */
 998               	.L__stack_usage = 2
 247:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	TRXPR_REG_s.slptr = 0;
 999               		.loc 3 247 0
 1000 0476 89E3      		ldi r24,lo8(57)
 1001 0478 91E0      		ldi r25,lo8(1)
 1002 047a FC01      		movw r30,r24
 1003 047c 2081      		ld r18,Z
 1004 047e 2D7F      		andi r18,lo8(-3)
 1005 0480 FC01      		movw r30,r24
 1006 0482 2083      		st Z,r18
 248:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phySetRxState();
 1007               		.loc 3 248 0
 1008 0484 0E94 0000 		call phySetRxState
 249:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phyState = PHY_STATE_IDLE;
 1009               		.loc 3 249 0
 1010 0488 81E0      		ldi r24,lo8(1)
 1011 048a 8093 0000 		sts phyState,r24
 250:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 1012               		.loc 3 250 0
 1013 048e 0000      		nop
 1014               	/* epilogue start */
 1015 0490 DF91      		pop r29
 1016 0492 CF91      		pop r28
 1017 0494 0895      		ret
 1018               		.cfi_endproc
 1019               	.LFE85:
 1021               	.global	PHY_DataReq
 1023               	PHY_DataReq:
 1024               	.LFB86:
 251:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 252:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
 253:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
 254:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** void PHY_DataReq(uint8_t *data, uint8_t size)
 255:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 1025               		.loc 3 255 0
 1026               		.cfi_startproc
 1027 0496 CF93      		push r28
 1028               	.LCFI47:
 1029               		.cfi_def_cfa_offset 4
 1030               		.cfi_offset 28, -3
 1031 0498 DF93      		push r29
 1032               	.LCFI48:
 1033               		.cfi_def_cfa_offset 5
 1034               		.cfi_offset 29, -4
 1035 049a 00D0      		rcall .
 1036 049c 1F92      		push __zero_reg__
 1037               	.LCFI49:
 1038               		.cfi_def_cfa_offset 9
 1039 049e CDB7      		in r28,__SP_L__
 1040 04a0 DEB7      		in r29,__SP_H__
 1041               	.LCFI50:
 1042               		.cfi_def_cfa_register 28
 1043               	/* prologue: function */
 1044               	/* frame size = 4 */
 1045               	/* stack size = 6 */
 1046               	.L__stack_usage = 6
 1047 04a2 9B83      		std Y+3,r25
 1048 04a4 8A83      		std Y+2,r24
 1049 04a6 6C83      		std Y+4,r22
 256:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****   phyTrxSetState(TRX_CMD_TX_ARET_ON);
 1050               		.loc 3 256 0
 1051 04a8 89E1      		ldi r24,lo8(25)
 1052 04aa 0E94 0000 		call phyTrxSetState
 257:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 258:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****   IRQ_STATUS_REG = IRQ_CLEAR_VALUE;
 1053               		.loc 3 258 0
 1054 04ae 8FE4      		ldi r24,lo8(79)
 1055 04b0 91E0      		ldi r25,lo8(1)
 1056 04b2 2FEF      		ldi r18,lo8(-1)
 1057 04b4 FC01      		movw r30,r24
 1058 04b6 2083      		st Z,r18
 259:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 260:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****   TRX_FRAME_BUFFER(0) = size + PHY_CRC_SIZE;
 1059               		.loc 3 260 0
 1060 04b8 80E8      		ldi r24,lo8(-128)
 1061 04ba 91E0      		ldi r25,lo8(1)
 1062 04bc 2C81      		ldd r18,Y+4
 1063 04be 2E5F      		subi r18,lo8(-(2))
 1064 04c0 FC01      		movw r30,r24
 1065 04c2 2083      		st Z,r18
 1066               	.LBB2:
 261:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1067               		.loc 3 261 0
 1068 04c4 1982      		std Y+1,__zero_reg__
 1069 04c6 00C0      		rjmp .L38
 1070               	.L39:
 262:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****     TRX_FRAME_BUFFER(i+1) = data[i];
 1071               		.loc 3 262 0 discriminator 3
 1072 04c8 8981      		ldd r24,Y+1
 1073 04ca 882F      		mov r24,r24
 1074 04cc 90E0      		ldi r25,0
 1075 04ce 8F57      		subi r24,127
 1076 04d0 9E4F      		sbci r25,-2
 1077 04d2 AC01      		movw r20,r24
 1078 04d4 8981      		ldd r24,Y+1
 1079 04d6 882F      		mov r24,r24
 1080 04d8 90E0      		ldi r25,0
 1081 04da 2A81      		ldd r18,Y+2
 1082 04dc 3B81      		ldd r19,Y+3
 1083 04de 820F      		add r24,r18
 1084 04e0 931F      		adc r25,r19
 1085 04e2 FC01      		movw r30,r24
 1086 04e4 8081      		ld r24,Z
 1087 04e6 FA01      		movw r30,r20
 1088 04e8 8083      		st Z,r24
 261:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1089               		.loc 3 261 0 discriminator 3
 1090 04ea 8981      		ldd r24,Y+1
 1091 04ec 8F5F      		subi r24,lo8(-(1))
 1092 04ee 8983      		std Y+1,r24
 1093               	.L38:
 261:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 1094               		.loc 3 261 0 is_stmt 0 discriminator 1
 1095 04f0 9981      		ldd r25,Y+1
 1096 04f2 8C81      		ldd r24,Y+4
 1097 04f4 9817      		cp r25,r24
 1098 04f6 00F0      		brlo .L39
 1099               	.LBE2:
 263:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 264:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****   phyState = PHY_STATE_TX_WAIT_END;
 1100               		.loc 3 264 0 is_stmt 1
 1101 04f8 83E0      		ldi r24,lo8(3)
 1102 04fa 8093 0000 		sts phyState,r24
 265:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c ****   TRX_STATE_REG = TRX_CMD_TX_START;
 1103               		.loc 3 265 0
 1104 04fe 82E4      		ldi r24,lo8(66)
 1105 0500 91E0      		ldi r25,lo8(1)
 1106 0502 22E0      		ldi r18,lo8(2)
 1107 0504 FC01      		movw r30,r24
 1108 0506 2083      		st Z,r18
 266:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 1109               		.loc 3 266 0
 1110 0508 0000      		nop
 1111               	/* epilogue start */
 1112 050a 0F90      		pop __tmp_reg__
 1113 050c 0F90      		pop __tmp_reg__
 1114 050e 0F90      		pop __tmp_reg__
 1115 0510 0F90      		pop __tmp_reg__
 1116 0512 DF91      		pop r29
 1117 0514 CF91      		pop r28
 1118 0516 0895      		ret
 1119               		.cfi_endproc
 1120               	.LFE86:
 1122               	.global	PHY_RandomReq
 1124               	PHY_RandomReq:
 1125               	.LFB87:
 267:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 268:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
 269:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
 270:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** uint16_t PHY_RandomReq(void)
 271:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 1126               		.loc 3 271 0
 1127               		.cfi_startproc
 1128 0518 CF93      		push r28
 1129               	.LCFI51:
 1130               		.cfi_def_cfa_offset 4
 1131               		.cfi_offset 28, -3
 1132 051a DF93      		push r29
 1133               	.LCFI52:
 1134               		.cfi_def_cfa_offset 5
 1135               		.cfi_offset 29, -4
 1136 051c 00D0      		rcall .
 1137               	.LCFI53:
 1138               		.cfi_def_cfa_offset 8
 1139 051e CDB7      		in r28,__SP_L__
 1140 0520 DEB7      		in r29,__SP_H__
 1141               	.LCFI54:
 1142               		.cfi_def_cfa_register 28
 1143               	/* prologue: function */
 1144               	/* frame size = 3 */
 1145               	/* stack size = 5 */
 1146               	.L__stack_usage = 5
 272:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	uint16_t rnd = 0;
 1147               		.loc 3 272 0
 1148 0522 1A82      		std Y+2,__zero_reg__
 1149 0524 1982      		std Y+1,__zero_reg__
 273:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 274:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	TRX_RPC_REG = 0x00;
 1150               		.loc 3 274 0
 1151 0526 86E5      		ldi r24,lo8(86)
 1152 0528 91E0      		ldi r25,lo8(1)
 1153 052a FC01      		movw r30,r24
 1154 052c 1082      		st Z,__zero_reg__
 275:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 276:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phyTrxSetState(TRX_CMD_RX_ON);
 1155               		.loc 3 276 0
 1156 052e 86E0      		ldi r24,lo8(6)
 1157 0530 0E94 0000 		call phyTrxSetState
 1158               	.LBB3:
 277:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 278:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	for (uint8_t i = 0; i < 16; i += 2) {
 1159               		.loc 3 278 0
 1160 0534 1B82      		std Y+3,__zero_reg__
 1161 0536 00C0      		rjmp .L41
 1162               	.L42:
 279:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1163               		.loc 3 279 0 discriminator 3
 1164 0538 62E0      		ldi r22,lo8(2)
 1165 053a 70E0      		ldi r23,0
 1166 053c 80E0      		ldi r24,0
 1167 053e 90E0      		ldi r25,0
 1168 0540 0E94 0000 		call __portable_avr_delay_cycles
 280:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		rnd |= PHY_RSSI_REG_s.rndValue << i;
 1169               		.loc 3 280 0 discriminator 3
 1170 0544 86E4      		ldi r24,lo8(70)
 1171 0546 91E0      		ldi r25,lo8(1)
 1172 0548 FC01      		movw r30,r24
 1173 054a 8081      		ld r24,Z
 1174 054c 8295      		swap r24
 1175 054e 8695      		lsr r24
 1176 0550 8770      		andi r24,lo8(7)
 1177 0552 8370      		andi r24,lo8(3)
 1178 0554 882F      		mov r24,r24
 1179 0556 90E0      		ldi r25,0
 1180 0558 2B81      		ldd r18,Y+3
 1181 055a 222F      		mov r18,r18
 1182 055c 30E0      		ldi r19,0
 1183 055e 00C0      		rjmp 2f
 1184               		1:
 1185 0560 880F      		lsl r24
 1186 0562 991F      		rol r25
 1187               		2:
 1188 0564 2A95      		dec r18
 1189 0566 02F4      		brpl 1b
 1190 0568 9C01      		movw r18,r24
 1191 056a 8981      		ldd r24,Y+1
 1192 056c 9A81      		ldd r25,Y+2
 1193 056e 822B      		or r24,r18
 1194 0570 932B      		or r25,r19
 1195 0572 9A83      		std Y+2,r25
 1196 0574 8983      		std Y+1,r24
 278:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1197               		.loc 3 278 0 discriminator 3
 1198 0576 8B81      		ldd r24,Y+3
 1199 0578 8E5F      		subi r24,lo8(-(2))
 1200 057a 8B83      		std Y+3,r24
 1201               	.L41:
 278:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1202               		.loc 3 278 0 is_stmt 0 discriminator 1
 1203 057c 8B81      		ldd r24,Y+3
 1204 057e 8031      		cpi r24,lo8(16)
 1205 0580 00F0      		brlo .L42
 1206               	.LBE3:
 281:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	}
 282:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 283:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phyTrxSetState(TRX_CMD_TRX_OFF);
 1207               		.loc 3 283 0 is_stmt 1
 1208 0582 88E0      		ldi r24,lo8(8)
 1209 0584 0E94 0000 		call phyTrxSetState
 284:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 285:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	TRX_RPC_REG = TRX_RPC_REG_VALUE;
 1210               		.loc 3 285 0
 1211 0588 86E5      		ldi r24,lo8(86)
 1212 058a 91E0      		ldi r25,lo8(1)
 1213 058c 2BEE      		ldi r18,lo8(-21)
 1214 058e FC01      		movw r30,r24
 1215 0590 2083      		st Z,r18
 286:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 287:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phySetRxState();
 1216               		.loc 3 287 0
 1217 0592 0E94 0000 		call phySetRxState
 288:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 289:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	return rnd;
 1218               		.loc 3 289 0
 1219 0596 8981      		ldd r24,Y+1
 1220 0598 9A81      		ldd r25,Y+2
 1221               	/* epilogue start */
 290:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 1222               		.loc 3 290 0
 1223 059a 0F90      		pop __tmp_reg__
 1224 059c 0F90      		pop __tmp_reg__
 1225 059e 0F90      		pop __tmp_reg__
 1226 05a0 DF91      		pop r29
 1227 05a2 CF91      		pop r28
 1228 05a4 0895      		ret
 1229               		.cfi_endproc
 1230               	.LFE87:
 1232               	.global	PHY_EncryptReq
 1234               	PHY_EncryptReq:
 1235               	.LFB88:
 291:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 292:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
 293:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
 294:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** void PHY_EncryptReq(uint8_t *text, uint8_t *key)
 295:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 1236               		.loc 3 295 0
 1237               		.cfi_startproc
 1238 05a6 CF93      		push r28
 1239               	.LCFI55:
 1240               		.cfi_def_cfa_offset 4
 1241               		.cfi_offset 28, -3
 1242 05a8 DF93      		push r29
 1243               	.LCFI56:
 1244               		.cfi_def_cfa_offset 5
 1245               		.cfi_offset 29, -4
 1246 05aa 00D0      		rcall .
 1247 05ac 1F92      		push __zero_reg__
 1248               	.LCFI57:
 1249               		.cfi_def_cfa_offset 9
 1250 05ae CDB7      		in r28,__SP_L__
 1251 05b0 DEB7      		in r29,__SP_H__
 1252               	.LCFI58:
 1253               		.cfi_def_cfa_register 28
 1254               	/* prologue: function */
 1255               	/* frame size = 4 */
 1256               	/* stack size = 6 */
 1257               	.L__stack_usage = 6
 1258 05b2 9A83      		std Y+2,r25
 1259 05b4 8983      		std Y+1,r24
 1260 05b6 7C83      		std Y+4,r23
 1261 05b8 6B83      		std Y+3,r22
 296:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	sal_aes_setup(key, AES_MODE_ECB, AES_DIR_ENCRYPT);
 1262               		.loc 3 296 0
 1263 05ba 8B81      		ldd r24,Y+3
 1264 05bc 9C81      		ldd r25,Y+4
 1265 05be 40E0      		ldi r20,0
 1266 05c0 60E0      		ldi r22,0
 1267 05c2 0E94 0000 		call sal_aes_setup
 297:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	sal_aes_exec(text);
 1268               		.loc 3 297 0
 1269 05c6 8981      		ldd r24,Y+1
 1270 05c8 9A81      		ldd r25,Y+2
 1271 05ca 0E94 0000 		call sal_aes_exec
 298:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	sal_aes_read(text);
 1272               		.loc 3 298 0
 1273 05ce 8981      		ldd r24,Y+1
 1274 05d0 9A81      		ldd r25,Y+2
 1275 05d2 0E94 0000 		call sal_aes_read
 299:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 1276               		.loc 3 299 0
 1277 05d6 0000      		nop
 1278               	/* epilogue start */
 1279 05d8 0F90      		pop __tmp_reg__
 1280 05da 0F90      		pop __tmp_reg__
 1281 05dc 0F90      		pop __tmp_reg__
 1282 05de 0F90      		pop __tmp_reg__
 1283 05e0 DF91      		pop r29
 1284 05e2 CF91      		pop r28
 1285 05e4 0895      		ret
 1286               		.cfi_endproc
 1287               	.LFE88:
 1289               	.global	PHY_EdReq
 1291               	PHY_EdReq:
 1292               	.LFB89:
 300:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 301:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
 302:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
 303:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** int8_t PHY_EdReq(void)
 304:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 1293               		.loc 3 304 0
 1294               		.cfi_startproc
 1295 05e6 CF93      		push r28
 1296               	.LCFI59:
 1297               		.cfi_def_cfa_offset 4
 1298               		.cfi_offset 28, -3
 1299 05e8 DF93      		push r29
 1300               	.LCFI60:
 1301               		.cfi_def_cfa_offset 5
 1302               		.cfi_offset 29, -4
 1303 05ea 1F92      		push __zero_reg__
 1304               	.LCFI61:
 1305               		.cfi_def_cfa_offset 6
 1306 05ec CDB7      		in r28,__SP_L__
 1307 05ee DEB7      		in r29,__SP_H__
 1308               	.LCFI62:
 1309               		.cfi_def_cfa_register 28
 1310               	/* prologue: function */
 1311               	/* frame size = 1 */
 1312               	/* stack size = 3 */
 1313               	.L__stack_usage = 3
 305:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	int8_t ed;
 306:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 307:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phyTrxSetState(TRX_CMD_RX_ON);
 1314               		.loc 3 307 0
 1315 05f0 86E0      		ldi r24,lo8(6)
 1316 05f2 0E94 0000 		call phyTrxSetState
 308:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 309:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	IRQ_STATUS_REG_s.ccaEdDone = 1;
 1317               		.loc 3 309 0
 1318 05f6 8FE4      		ldi r24,lo8(79)
 1319 05f8 91E0      		ldi r25,lo8(1)
 1320 05fa FC01      		movw r30,r24
 1321 05fc 2081      		ld r18,Z
 1322 05fe 2061      		ori r18,lo8(16)
 1323 0600 FC01      		movw r30,r24
 1324 0602 2083      		st Z,r18
 310:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	PHY_ED_LEVEL_REG = 0;
 1325               		.loc 3 310 0
 1326 0604 87E4      		ldi r24,lo8(71)
 1327 0606 91E0      		ldi r25,lo8(1)
 1328 0608 FC01      		movw r30,r24
 1329 060a 1082      		st Z,__zero_reg__
 311:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	while (0 == IRQ_STATUS_REG_s.ccaEdDone) {
 1330               		.loc 3 311 0
 1331 060c 0000      		nop
 1332               	.L46:
 1333               		.loc 3 311 0 is_stmt 0 discriminator 1
 1334 060e 8FE4      		ldi r24,lo8(79)
 1335 0610 91E0      		ldi r25,lo8(1)
 1336 0612 FC01      		movw r30,r24
 1337 0614 8081      		ld r24,Z
 1338 0616 8295      		swap r24
 1339 0618 8170      		andi r24,1
 1340 061a 8823      		tst r24
 1341 061c 01F0      		breq .L46
 312:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	}
 313:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 314:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	ed = (int8_t)PHY_ED_LEVEL_REG + PHY_RSSI_BASE_VAL;
 1342               		.loc 3 314 0 is_stmt 1
 1343 061e 87E4      		ldi r24,lo8(71)
 1344 0620 91E0      		ldi r25,lo8(1)
 1345 0622 FC01      		movw r30,r24
 1346 0624 8081      		ld r24,Z
 1347 0626 8A55      		subi r24,lo8(-(-90))
 1348 0628 8983      		std Y+1,r24
 315:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 316:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phySetRxState();
 1349               		.loc 3 316 0
 1350 062a 0E94 0000 		call phySetRxState
 317:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 318:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	return ed;
 1351               		.loc 3 318 0
 1352 062e 8981      		ldd r24,Y+1
 1353               	/* epilogue start */
 319:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 1354               		.loc 3 319 0
 1355 0630 0F90      		pop __tmp_reg__
 1356 0632 DF91      		pop r29
 1357 0634 CF91      		pop r28
 1358 0636 0895      		ret
 1359               		.cfi_endproc
 1360               	.LFE89:
 1363               	phySetChannel:
 1364               	.LFB90:
 320:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 321:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
 322:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
 323:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** static void phySetChannel(void)
 324:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 1365               		.loc 3 324 0
 1366               		.cfi_startproc
 1367 0638 CF93      		push r28
 1368               	.LCFI63:
 1369               		.cfi_def_cfa_offset 4
 1370               		.cfi_offset 28, -3
 1371 063a DF93      		push r29
 1372               	.LCFI64:
 1373               		.cfi_def_cfa_offset 5
 1374               		.cfi_offset 29, -4
 1375 063c CDB7      		in r28,__SP_L__
 1376 063e DEB7      		in r29,__SP_H__
 1377               	.LCFI65:
 1378               		.cfi_def_cfa_register 28
 1379               	/* prologue: function */
 1380               	/* frame size = 0 */
 1381               	/* stack size = 2 */
 1382               	.L__stack_usage = 2
 325:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	CC_CTRL_1_REG_s.ccBand = phyBand;
 1383               		.loc 3 325 0
 1384 0640 84E5      		ldi r24,lo8(84)
 1385 0642 91E0      		ldi r25,lo8(1)
 1386 0644 2091 0000 		lds r18,phyBand
 1387 0648 2F70      		andi r18,lo8(15)
 1388 064a 2F70      		andi r18,lo8(15)
 1389 064c FC01      		movw r30,r24
 1390 064e 3081      		ld r19,Z
 1391 0650 307F      		andi r19,lo8(-16)
 1392 0652 232B      		or r18,r19
 1393 0654 FC01      		movw r30,r24
 1394 0656 2083      		st Z,r18
 326:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 327:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	if (phyBand) {
 1395               		.loc 3 327 0
 1396 0658 8091 0000 		lds r24,phyBand
 1397 065c 8823      		tst r24
 1398 065e 01F0      		breq .L49
 328:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		CC_CTRL_0_REG = phyChannel;
 1399               		.loc 3 328 0
 1400 0660 83E5      		ldi r24,lo8(83)
 1401 0662 91E0      		ldi r25,lo8(1)
 1402 0664 2091 0000 		lds r18,phyChannel
 1403 0668 FC01      		movw r30,r24
 1404 066a 2083      		st Z,r18
 329:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	} else {
 330:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		PHY_CC_CCA_REG_s.channel = phyChannel;
 331:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	}
 332:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 1405               		.loc 3 332 0
 1406 066c 00C0      		rjmp .L51
 1407               	.L49:
 330:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	}
 1408               		.loc 3 330 0
 1409 066e 88E4      		ldi r24,lo8(72)
 1410 0670 91E0      		ldi r25,lo8(1)
 1411 0672 2091 0000 		lds r18,phyChannel
 1412 0676 2F71      		andi r18,lo8(31)
 1413 0678 2F71      		andi r18,lo8(31)
 1414 067a FC01      		movw r30,r24
 1415 067c 3081      		ld r19,Z
 1416 067e 307E      		andi r19,lo8(-32)
 1417 0680 232B      		or r18,r19
 1418 0682 FC01      		movw r30,r24
 1419 0684 2083      		st Z,r18
 1420               	.L51:
 1421               		.loc 3 332 0
 1422 0686 0000      		nop
 1423               	/* epilogue start */
 1424 0688 DF91      		pop r29
 1425 068a CF91      		pop r28
 1426 068c 0895      		ret
 1427               		.cfi_endproc
 1428               	.LFE90:
 1431               	phySetRxState:
 1432               	.LFB91:
 333:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 334:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
 335:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
 336:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** static void phySetRxState(void)
 337:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 1433               		.loc 3 337 0
 1434               		.cfi_startproc
 1435 068e CF93      		push r28
 1436               	.LCFI66:
 1437               		.cfi_def_cfa_offset 4
 1438               		.cfi_offset 28, -3
 1439 0690 DF93      		push r29
 1440               	.LCFI67:
 1441               		.cfi_def_cfa_offset 5
 1442               		.cfi_offset 29, -4
 1443 0692 CDB7      		in r28,__SP_L__
 1444 0694 DEB7      		in r29,__SP_H__
 1445               	.LCFI68:
 1446               		.cfi_def_cfa_register 28
 1447               	/* prologue: function */
 1448               	/* frame size = 0 */
 1449               	/* stack size = 2 */
 1450               	.L__stack_usage = 2
 338:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	phyTrxSetState(TRX_CMD_TRX_OFF);
 1451               		.loc 3 338 0
 1452 0696 88E0      		ldi r24,lo8(8)
 1453 0698 0E94 0000 		call phyTrxSetState
 339:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 340:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	IRQ_STATUS_REG = IRQ_CLEAR_VALUE;
 1454               		.loc 3 340 0
 1455 069c 8FE4      		ldi r24,lo8(79)
 1456 069e 91E0      		ldi r25,lo8(1)
 1457 06a0 2FEF      		ldi r18,lo8(-1)
 1458 06a2 FC01      		movw r30,r24
 1459 06a4 2083      		st Z,r18
 341:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 342:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	if (phyRxState) {
 1460               		.loc 3 342 0
 1461 06a6 8091 0000 		lds r24,phyRxState
 1462 06aa 8823      		tst r24
 1463 06ac 01F0      		breq .L54
 343:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		phyTrxSetState(TRX_CMD_RX_AACK_ON);
 1464               		.loc 3 343 0
 1465 06ae 86E1      		ldi r24,lo8(22)
 1466 06b0 0E94 0000 		call phyTrxSetState
 1467               	.L54:
 344:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	}
 345:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 1468               		.loc 3 345 0
 1469 06b4 0000      		nop
 1470               	/* epilogue start */
 1471 06b6 DF91      		pop r29
 1472 06b8 CF91      		pop r28
 1473 06ba 0895      		ret
 1474               		.cfi_endproc
 1475               	.LFE91:
 1478               	phyTrxSetState:
 1479               	.LFB92:
 346:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 347:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
 348:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
 349:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** static void phyTrxSetState(uint8_t state)
 350:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 1480               		.loc 3 350 0
 1481               		.cfi_startproc
 1482 06bc CF93      		push r28
 1483               	.LCFI69:
 1484               		.cfi_def_cfa_offset 4
 1485               		.cfi_offset 28, -3
 1486 06be DF93      		push r29
 1487               	.LCFI70:
 1488               		.cfi_def_cfa_offset 5
 1489               		.cfi_offset 29, -4
 1490 06c0 1F92      		push __zero_reg__
 1491               	.LCFI71:
 1492               		.cfi_def_cfa_offset 6
 1493 06c2 CDB7      		in r28,__SP_L__
 1494 06c4 DEB7      		in r29,__SP_H__
 1495               	.LCFI72:
 1496               		.cfi_def_cfa_register 28
 1497               	/* prologue: function */
 1498               	/* frame size = 1 */
 1499               	/* stack size = 3 */
 1500               	.L__stack_usage = 3
 1501 06c6 8983      		std Y+1,r24
 351:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #if (ANTENNA_DIVERSITY == 1) || defined(EXT_RF_FRONT_END_CTRL)
 352:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	if(phyState == PHY_STATE_SLEEP)
 1502               		.loc 3 352 0
 1503 06c8 8091 0000 		lds r24,phyState
 1504 06cc 8230      		cpi r24,lo8(2)
 1505 06ce 01F4      		brne .L56
 353:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	{
 354:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	#if (ANTENNA_DIVERSITY == 1)
 355:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		ANT_DIV_REG_s.antDivEn = 1;
 1506               		.loc 3 355 0
 1507 06d0 8DE4      		ldi r24,lo8(77)
 1508 06d2 91E0      		ldi r25,lo8(1)
 1509 06d4 FC01      		movw r30,r24
 1510 06d6 2081      		ld r18,Z
 1511 06d8 2860      		ori r18,lo8(8)
 1512 06da FC01      		movw r30,r24
 1513 06dc 2083      		st Z,r18
 356:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 1;
 1514               		.loc 3 356 0
 1515 06de 8DE4      		ldi r24,lo8(77)
 1516 06e0 91E0      		ldi r25,lo8(1)
 1517 06e2 FC01      		movw r30,r24
 1518 06e4 2081      		ld r18,Z
 1519 06e6 2460      		ori r18,lo8(4)
 1520 06e8 FC01      		movw r30,r24
 1521 06ea 2083      		st Z,r18
 357:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	#else
 358:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		#if (ANTENNA_DEFAULT != 0)
 359:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 			ANT_DIV_REG_s.antExtSwEn = 1;
 360:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 			ANT_DIV_REG_s.antCtrl = ANTENNA_DEFAULT;
 361:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		#endif // ANTENNA_DEFAULT
 362:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	#endif // ANTENNA_DIVERSITY
 363:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	#ifdef EXT_RF_FRONT_END_CTRL
 364:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		TRX_CTRL_1_REG_s.paExtEn = 1;
 1522               		.loc 3 364 0
 1523 06ec 84E4      		ldi r24,lo8(68)
 1524 06ee 91E0      		ldi r25,lo8(1)
 1525 06f0 FC01      		movw r30,r24
 1526 06f2 2081      		ld r18,Z
 1527 06f4 2068      		ori r18,lo8(-128)
 1528 06f6 FC01      		movw r30,r24
 1529 06f8 2083      		st Z,r18
 1530               	.L56:
 365:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	#endif // EXT_RF_FRONT_END_CTRL
 366:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	}
 367:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** #endif // PLATFORM_WM100
 368:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 369:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	do {TRX_STATE_REG = TRX_CMD_FORCE_TRX_OFF;
 1531               		.loc 3 369 0 discriminator 1
 1532 06fa 82E4      		ldi r24,lo8(66)
 1533 06fc 91E0      		ldi r25,lo8(1)
 1534 06fe 23E0      		ldi r18,lo8(3)
 1535 0700 FC01      		movw r30,r24
 1536 0702 2083      		st Z,r18
 370:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	} while (TRX_STATUS_TRX_OFF !=
 371:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1537               		.loc 3 371 0 discriminator 1
 1538 0704 81E4      		ldi r24,lo8(65)
 1539 0706 91E0      		ldi r25,lo8(1)
 1540 0708 FC01      		movw r30,r24
 1541 070a 8081      		ld r24,Z
 1542 070c 8F71      		andi r24,lo8(31)
 1543 070e 8830      		cpi r24,lo8(8)
 1544 0710 01F4      		brne .L56
 1545               	.L57:
 372:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 373:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	do {TRX_STATE_REG = state; } while (state !=
 1546               		.loc 3 373 0 discriminator 1
 1547 0712 82E4      		ldi r24,lo8(66)
 1548 0714 91E0      		ldi r25,lo8(1)
 1549 0716 2981      		ldd r18,Y+1
 1550 0718 FC01      		movw r30,r24
 1551 071a 2083      		st Z,r18
 374:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1552               		.loc 3 374 0 discriminator 1
 1553 071c 81E4      		ldi r24,lo8(65)
 1554 071e 91E0      		ldi r25,lo8(1)
 1555 0720 FC01      		movw r30,r24
 1556 0722 8081      		ld r24,Z
 1557 0724 8F71      		andi r24,lo8(31)
 373:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 			TRX_STATUS_REG_s.trxStatus);
 1558               		.loc 3 373 0 discriminator 1
 1559 0726 982F      		mov r25,r24
 1560               		.loc 3 374 0 discriminator 1
 1561 0728 8981      		ldd r24,Y+1
 1562 072a 9817      		cp r25,r24
 1563 072c 01F4      		brne .L57
 375:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 1564               		.loc 3 375 0
 1565 072e 0000      		nop
 1566               	/* epilogue start */
 1567 0730 0F90      		pop __tmp_reg__
 1568 0732 DF91      		pop r29
 1569 0734 CF91      		pop r28
 1570 0736 0895      		ret
 1571               		.cfi_endproc
 1572               	.LFE92:
 1574               	.global	PHY_SetIEEEAddr
 1576               	PHY_SetIEEEAddr:
 1577               	.LFB93:
 376:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 377:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
 378:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
 379:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** void PHY_SetIEEEAddr(uint8_t *ieee_addr)
 380:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 1578               		.loc 3 380 0
 1579               		.cfi_startproc
 1580 0738 CF93      		push r28
 1581               	.LCFI73:
 1582               		.cfi_def_cfa_offset 4
 1583               		.cfi_offset 28, -3
 1584 073a DF93      		push r29
 1585               	.LCFI74:
 1586               		.cfi_def_cfa_offset 5
 1587               		.cfi_offset 29, -4
 1588 073c 00D0      		rcall .
 1589 073e 1F92      		push __zero_reg__
 1590               	.LCFI75:
 1591               		.cfi_def_cfa_offset 9
 1592 0740 CDB7      		in r28,__SP_L__
 1593 0742 DEB7      		in r29,__SP_H__
 1594               	.LCFI76:
 1595               		.cfi_def_cfa_register 28
 1596               	/* prologue: function */
 1597               	/* frame size = 4 */
 1598               	/* stack size = 6 */
 1599               	.L__stack_usage = 6
 1600 0744 9C83      		std Y+4,r25
 1601 0746 8B83      		std Y+3,r24
 381:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	uint8_t *ptr_to_reg = ieee_addr;
 1602               		.loc 3 381 0
 1603 0748 8B81      		ldd r24,Y+3
 1604 074a 9C81      		ldd r25,Y+4
 1605 074c 9A83      		std Y+2,r25
 1606 074e 8983      		std Y+1,r24
 382:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	IEEE_ADDR_0_REG = *ptr_to_reg++;
 1607               		.loc 3 382 0
 1608 0750 24E6      		ldi r18,lo8(100)
 1609 0752 31E0      		ldi r19,lo8(1)
 1610 0754 8981      		ldd r24,Y+1
 1611 0756 9A81      		ldd r25,Y+2
 1612 0758 AC01      		movw r20,r24
 1613 075a 4F5F      		subi r20,-1
 1614 075c 5F4F      		sbci r21,-1
 1615 075e 5A83      		std Y+2,r21
 1616 0760 4983      		std Y+1,r20
 1617 0762 FC01      		movw r30,r24
 1618 0764 8081      		ld r24,Z
 1619 0766 F901      		movw r30,r18
 1620 0768 8083      		st Z,r24
 383:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	IEEE_ADDR_1_REG = *ptr_to_reg++;
 1621               		.loc 3 383 0
 1622 076a 25E6      		ldi r18,lo8(101)
 1623 076c 31E0      		ldi r19,lo8(1)
 1624 076e 8981      		ldd r24,Y+1
 1625 0770 9A81      		ldd r25,Y+2
 1626 0772 AC01      		movw r20,r24
 1627 0774 4F5F      		subi r20,-1
 1628 0776 5F4F      		sbci r21,-1
 1629 0778 5A83      		std Y+2,r21
 1630 077a 4983      		std Y+1,r20
 1631 077c FC01      		movw r30,r24
 1632 077e 8081      		ld r24,Z
 1633 0780 F901      		movw r30,r18
 1634 0782 8083      		st Z,r24
 384:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	IEEE_ADDR_2_REG = *ptr_to_reg++;
 1635               		.loc 3 384 0
 1636 0784 26E6      		ldi r18,lo8(102)
 1637 0786 31E0      		ldi r19,lo8(1)
 1638 0788 8981      		ldd r24,Y+1
 1639 078a 9A81      		ldd r25,Y+2
 1640 078c AC01      		movw r20,r24
 1641 078e 4F5F      		subi r20,-1
 1642 0790 5F4F      		sbci r21,-1
 1643 0792 5A83      		std Y+2,r21
 1644 0794 4983      		std Y+1,r20
 1645 0796 FC01      		movw r30,r24
 1646 0798 8081      		ld r24,Z
 1647 079a F901      		movw r30,r18
 1648 079c 8083      		st Z,r24
 385:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	IEEE_ADDR_3_REG = *ptr_to_reg++;
 1649               		.loc 3 385 0
 1650 079e 27E6      		ldi r18,lo8(103)
 1651 07a0 31E0      		ldi r19,lo8(1)
 1652 07a2 8981      		ldd r24,Y+1
 1653 07a4 9A81      		ldd r25,Y+2
 1654 07a6 AC01      		movw r20,r24
 1655 07a8 4F5F      		subi r20,-1
 1656 07aa 5F4F      		sbci r21,-1
 1657 07ac 5A83      		std Y+2,r21
 1658 07ae 4983      		std Y+1,r20
 1659 07b0 FC01      		movw r30,r24
 1660 07b2 8081      		ld r24,Z
 1661 07b4 F901      		movw r30,r18
 1662 07b6 8083      		st Z,r24
 386:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	IEEE_ADDR_4_REG = *ptr_to_reg++;
 1663               		.loc 3 386 0
 1664 07b8 28E6      		ldi r18,lo8(104)
 1665 07ba 31E0      		ldi r19,lo8(1)
 1666 07bc 8981      		ldd r24,Y+1
 1667 07be 9A81      		ldd r25,Y+2
 1668 07c0 AC01      		movw r20,r24
 1669 07c2 4F5F      		subi r20,-1
 1670 07c4 5F4F      		sbci r21,-1
 1671 07c6 5A83      		std Y+2,r21
 1672 07c8 4983      		std Y+1,r20
 1673 07ca FC01      		movw r30,r24
 1674 07cc 8081      		ld r24,Z
 1675 07ce F901      		movw r30,r18
 1676 07d0 8083      		st Z,r24
 387:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	IEEE_ADDR_5_REG = *ptr_to_reg++;
 1677               		.loc 3 387 0
 1678 07d2 29E6      		ldi r18,lo8(105)
 1679 07d4 31E0      		ldi r19,lo8(1)
 1680 07d6 8981      		ldd r24,Y+1
 1681 07d8 9A81      		ldd r25,Y+2
 1682 07da AC01      		movw r20,r24
 1683 07dc 4F5F      		subi r20,-1
 1684 07de 5F4F      		sbci r21,-1
 1685 07e0 5A83      		std Y+2,r21
 1686 07e2 4983      		std Y+1,r20
 1687 07e4 FC01      		movw r30,r24
 1688 07e6 8081      		ld r24,Z
 1689 07e8 F901      		movw r30,r18
 1690 07ea 8083      		st Z,r24
 388:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	IEEE_ADDR_6_REG = *ptr_to_reg++;
 1691               		.loc 3 388 0
 1692 07ec 2AE6      		ldi r18,lo8(106)
 1693 07ee 31E0      		ldi r19,lo8(1)
 1694 07f0 8981      		ldd r24,Y+1
 1695 07f2 9A81      		ldd r25,Y+2
 1696 07f4 AC01      		movw r20,r24
 1697 07f6 4F5F      		subi r20,-1
 1698 07f8 5F4F      		sbci r21,-1
 1699 07fa 5A83      		std Y+2,r21
 1700 07fc 4983      		std Y+1,r20
 1701 07fe FC01      		movw r30,r24
 1702 0800 8081      		ld r24,Z
 1703 0802 F901      		movw r30,r18
 1704 0804 8083      		st Z,r24
 389:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	IEEE_ADDR_7_REG = *ptr_to_reg;
 1705               		.loc 3 389 0
 1706 0806 8BE6      		ldi r24,lo8(107)
 1707 0808 91E0      		ldi r25,lo8(1)
 1708 080a 2981      		ldd r18,Y+1
 1709 080c 3A81      		ldd r19,Y+2
 1710 080e F901      		movw r30,r18
 1711 0810 2081      		ld r18,Z
 1712 0812 FC01      		movw r30,r24
 1713 0814 2083      		st Z,r18
 390:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 1714               		.loc 3 390 0
 1715 0816 0000      		nop
 1716               	/* epilogue start */
 1717 0818 0F90      		pop __tmp_reg__
 1718 081a 0F90      		pop __tmp_reg__
 1719 081c 0F90      		pop __tmp_reg__
 1720 081e 0F90      		pop __tmp_reg__
 1721 0820 DF91      		pop r29
 1722 0822 CF91      		pop r28
 1723 0824 0895      		ret
 1724               		.cfi_endproc
 1725               	.LFE93:
 1727               	.global	PHY_TaskHandler
 1729               	PHY_TaskHandler:
 1730               	.LFB94:
 391:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 392:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** /*************************************************************************//**
 393:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** *****************************************************************************/
 394:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** void PHY_TaskHandler(void)
 395:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** {
 1731               		.loc 3 395 0
 1732               		.cfi_startproc
 1733 0826 CF93      		push r28
 1734               	.LCFI77:
 1735               		.cfi_def_cfa_offset 4
 1736               		.cfi_offset 28, -3
 1737 0828 DF93      		push r29
 1738               	.LCFI78:
 1739               		.cfi_def_cfa_offset 5
 1740               		.cfi_offset 29, -4
 1741 082a CDB7      		in r28,__SP_L__
 1742 082c DEB7      		in r29,__SP_H__
 1743               	.LCFI79:
 1744               		.cfi_def_cfa_register 28
 1745 082e 2897      		sbiw r28,8
 1746               	.LCFI80:
 1747               		.cfi_def_cfa_offset 13
 1748 0830 0FB6      		in __tmp_reg__,__SREG__
 1749 0832 F894      		cli
 1750 0834 DEBF      		out __SP_H__,r29
 1751 0836 0FBE      		out __SREG__,__tmp_reg__
 1752 0838 CDBF      		out __SP_L__,r28
 1753               	/* prologue: function */
 1754               	/* frame size = 8 */
 1755               	/* stack size = 10 */
 1756               	.L__stack_usage = 10
 396:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	if (PHY_STATE_SLEEP == phyState) {
 1757               		.loc 3 396 0
 1758 083a 8091 0000 		lds r24,phyState
 1759 083e 8230      		cpi r24,lo8(2)
 1760 0840 01F4      		brne .+2
 1761 0842 00C0      		rjmp .L71
 397:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		return;
 398:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	}
 399:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 400:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	if (IRQ_STATUS_REG_s.rxEnd) {
 1762               		.loc 3 400 0
 1763 0844 8FE4      		ldi r24,lo8(79)
 1764 0846 91E0      		ldi r25,lo8(1)
 1765 0848 FC01      		movw r30,r24
 1766 084a 8081      		ld r24,Z
 1767 084c 83FB      		bst r24,3
 1768 084e 8827      		clr r24
 1769 0850 80F9      		bld r24,0
 1770 0852 8823      		tst r24
 1771 0854 01F4      		brne .+2
 1772 0856 00C0      		rjmp .L62
 1773               	.LBB4:
 401:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		PHY_DataInd_t ind;
 402:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		uint8_t size = TST_RX_LENGTH_REG;
 1774               		.loc 3 402 0
 1775 0858 8BE7      		ldi r24,lo8(123)
 1776 085a 91E0      		ldi r25,lo8(1)
 1777 085c FC01      		movw r30,r24
 1778 085e 8081      		ld r24,Z
 1779 0860 8B83      		std Y+3,r24
 1780               	.LBB5:
 403:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 404:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		for (uint8_t i = 0; i < size + 1 /*lqi*/; i++) {
 1781               		.loc 3 404 0
 1782 0862 1982      		std Y+1,__zero_reg__
 1783 0864 00C0      		rjmp .L63
 1784               	.L64:
 405:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1785               		.loc 3 405 0 discriminator 3
 1786 0866 8981      		ldd r24,Y+1
 1787 0868 882F      		mov r24,r24
 1788 086a 90E0      		ldi r25,0
 1789 086c 2981      		ldd r18,Y+1
 1790 086e 222F      		mov r18,r18
 1791 0870 30E0      		ldi r19,0
 1792 0872 2058      		subi r18,-128
 1793 0874 3E4F      		sbci r19,-2
 1794 0876 F901      		movw r30,r18
 1795 0878 2081      		ld r18,Z
 1796 087a 8050      		subi r24,lo8(-(phyRxBuffer))
 1797 087c 9040      		sbci r25,hi8(-(phyRxBuffer))
 1798 087e FC01      		movw r30,r24
 1799 0880 2083      		st Z,r18
 404:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1800               		.loc 3 404 0 discriminator 3
 1801 0882 8981      		ldd r24,Y+1
 1802 0884 8F5F      		subi r24,lo8(-(1))
 1803 0886 8983      		std Y+1,r24
 1804               	.L63:
 404:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 			phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1805               		.loc 3 404 0 is_stmt 0 discriminator 1
 1806 0888 8981      		ldd r24,Y+1
 1807 088a 282F      		mov r18,r24
 1808 088c 30E0      		ldi r19,0
 1809 088e 8B81      		ldd r24,Y+3
 1810 0890 882F      		mov r24,r24
 1811 0892 90E0      		ldi r25,0
 1812 0894 0196      		adiw r24,1
 1813 0896 2817      		cp r18,r24
 1814 0898 3907      		cpc r19,r25
 1815 089a 04F0      		brlt .L64
 1816               	.LBE5:
 406:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		}
 407:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 408:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		ind.data = phyRxBuffer;
 1817               		.loc 3 408 0 is_stmt 1
 1818 089c 80E0      		ldi r24,lo8(phyRxBuffer)
 1819 089e 90E0      		ldi r25,hi8(phyRxBuffer)
 1820 08a0 9D83      		std Y+5,r25
 1821 08a2 8C83      		std Y+4,r24
 409:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		ind.size = size - PHY_CRC_SIZE;
 1822               		.loc 3 409 0
 1823 08a4 8B81      		ldd r24,Y+3
 1824 08a6 8250      		subi r24,lo8(-(-2))
 1825 08a8 8E83      		std Y+6,r24
 410:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		ind.lqi  = phyRxBuffer[size];
 1826               		.loc 3 410 0
 1827 08aa 8B81      		ldd r24,Y+3
 1828 08ac 882F      		mov r24,r24
 1829 08ae 90E0      		ldi r25,0
 1830 08b0 8050      		subi r24,lo8(-(phyRxBuffer))
 1831 08b2 9040      		sbci r25,hi8(-(phyRxBuffer))
 1832 08b4 FC01      		movw r30,r24
 1833 08b6 8081      		ld r24,Z
 1834 08b8 8F83      		std Y+7,r24
 411:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		ind.rssi = (int8_t)PHY_ED_LEVEL_REG + PHY_RSSI_BASE_VAL;
 1835               		.loc 3 411 0
 1836 08ba 87E4      		ldi r24,lo8(71)
 1837 08bc 91E0      		ldi r25,lo8(1)
 1838 08be FC01      		movw r30,r24
 1839 08c0 8081      		ld r24,Z
 1840 08c2 8A55      		subi r24,lo8(-(-90))
 1841 08c4 8887      		std Y+8,r24
 412:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		PHY_DataInd(&ind);
 1842               		.loc 3 412 0
 1843 08c6 CE01      		movw r24,r28
 1844 08c8 0496      		adiw r24,4
 1845 08ca 0E94 0000 		call PHY_DataInd
 413:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 414:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		while (TRX_STATUS_RX_AACK_ON != TRX_STATUS_REG_s.trxStatus) {
 1846               		.loc 3 414 0
 1847 08ce 0000      		nop
 1848               	.L65:
 1849               		.loc 3 414 0 is_stmt 0 discriminator 1
 1850 08d0 81E4      		ldi r24,lo8(65)
 1851 08d2 91E0      		ldi r25,lo8(1)
 1852 08d4 FC01      		movw r30,r24
 1853 08d6 8081      		ld r24,Z
 1854 08d8 8F71      		andi r24,lo8(31)
 1855 08da 8631      		cpi r24,lo8(22)
 1856 08dc 01F4      		brne .L65
 415:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		}
 416:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 417:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		IRQ_STATUS_REG_s.rxEnd = 1;
 1857               		.loc 3 417 0 is_stmt 1 discriminator 2
 1858 08de 8FE4      		ldi r24,lo8(79)
 1859 08e0 91E0      		ldi r25,lo8(1)
 1860 08e2 FC01      		movw r30,r24
 1861 08e4 2081      		ld r18,Z
 1862 08e6 2860      		ori r18,lo8(8)
 1863 08e8 FC01      		movw r30,r24
 1864 08ea 2083      		st Z,r18
 418:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		TRX_CTRL_2_REG_s.rxSafeMode = 0;
 1865               		.loc 3 418 0 discriminator 2
 1866 08ec 8CE4      		ldi r24,lo8(76)
 1867 08ee 91E0      		ldi r25,lo8(1)
 1868 08f0 FC01      		movw r30,r24
 1869 08f2 2081      		ld r18,Z
 1870 08f4 2F77      		andi r18,lo8(127)
 1871 08f6 FC01      		movw r30,r24
 1872 08f8 2083      		st Z,r18
 419:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		TRX_CTRL_2_REG_s.rxSafeMode = 1;
 1873               		.loc 3 419 0 discriminator 2
 1874 08fa 8CE4      		ldi r24,lo8(76)
 1875 08fc 91E0      		ldi r25,lo8(1)
 1876 08fe FC01      		movw r30,r24
 1877 0900 2081      		ld r18,Z
 1878 0902 2068      		ori r18,lo8(-128)
 1879 0904 FC01      		movw r30,r24
 1880 0906 2083      		st Z,r18
 1881               	.LBE4:
 1882 0908 00C0      		rjmp .L59
 1883               	.L62:
 420:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	} else if (IRQ_STATUS_REG_s.txEnd) {
 1884               		.loc 3 420 0
 1885 090a 8FE4      		ldi r24,lo8(79)
 1886 090c 91E0      		ldi r25,lo8(1)
 1887 090e FC01      		movw r30,r24
 1888 0910 8081      		ld r24,Z
 1889 0912 86FB      		bst r24,6
 1890 0914 8827      		clr r24
 1891 0916 80F9      		bld r24,0
 1892 0918 8823      		tst r24
 1893 091a 01F0      		breq .L59
 421:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		if (TRX_STATUS_TX_ARET_ON == TRX_STATUS_REG_s.trxStatus) {
 1894               		.loc 3 421 0
 1895 091c 81E4      		ldi r24,lo8(65)
 1896 091e 91E0      		ldi r25,lo8(1)
 1897 0920 FC01      		movw r30,r24
 1898 0922 8081      		ld r24,Z
 1899 0924 8F71      		andi r24,lo8(31)
 1900 0926 8931      		cpi r24,lo8(25)
 1901 0928 01F4      		brne .L66
 1902               	.LBB6:
 422:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 			uint8_t status = TRX_STATE_REG_s.tracStatus;
 1903               		.loc 3 422 0
 1904 092a 82E4      		ldi r24,lo8(66)
 1905 092c 91E0      		ldi r25,lo8(1)
 1906 092e FC01      		movw r30,r24
 1907 0930 8081      		ld r24,Z
 1908 0932 8295      		swap r24
 1909 0934 8695      		lsr r24
 1910 0936 8770      		andi r24,lo8(7)
 1911 0938 8A83      		std Y+2,r24
 423:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 424:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 			if (TRAC_STATUS_SUCCESS == status) {
 1912               		.loc 3 424 0
 1913 093a 8A81      		ldd r24,Y+2
 1914 093c 8823      		tst r24
 1915 093e 01F4      		brne .L67
 425:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 				status = PHY_STATUS_SUCCESS;
 1916               		.loc 3 425 0
 1917 0940 1A82      		std Y+2,__zero_reg__
 1918 0942 00C0      		rjmp .L68
 1919               	.L67:
 426:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 			} else if (TRAC_STATUS_CHANNEL_ACCESS_FAILURE ==
 1920               		.loc 3 426 0
 1921 0944 8A81      		ldd r24,Y+2
 1922 0946 8330      		cpi r24,lo8(3)
 1923 0948 01F4      		brne .L69
 427:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 					status) {
 428:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 				status = PHY_STATUS_CHANNEL_ACCESS_FAILURE;
 1924               		.loc 3 428 0
 1925 094a 81E0      		ldi r24,lo8(1)
 1926 094c 8A83      		std Y+2,r24
 1927 094e 00C0      		rjmp .L68
 1928               	.L69:
 429:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 			} else if (TRAC_STATUS_NO_ACK == status) {
 1929               		.loc 3 429 0
 1930 0950 8A81      		ldd r24,Y+2
 1931 0952 8530      		cpi r24,lo8(5)
 1932 0954 01F4      		brne .L70
 430:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 				status = PHY_STATUS_NO_ACK;
 1933               		.loc 3 430 0
 1934 0956 82E0      		ldi r24,lo8(2)
 1935 0958 8A83      		std Y+2,r24
 1936 095a 00C0      		rjmp .L68
 1937               	.L70:
 431:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 			} else {
 432:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 				status = PHY_STATUS_ERROR;
 1938               		.loc 3 432 0
 1939 095c 83E0      		ldi r24,lo8(3)
 1940 095e 8A83      		std Y+2,r24
 1941               	.L68:
 433:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 			}
 434:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 435:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 			phySetRxState();
 1942               		.loc 3 435 0
 1943 0960 0E94 0000 		call phySetRxState
 436:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 			phyState = PHY_STATE_IDLE;
 1944               		.loc 3 436 0
 1945 0964 81E0      		ldi r24,lo8(1)
 1946 0966 8093 0000 		sts phyState,r24
 437:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 438:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 			PHY_DataConf(status);
 1947               		.loc 3 438 0
 1948 096a 8A81      		ldd r24,Y+2
 1949 096c 0E94 0000 		call PHY_DataConf
 1950               	.L66:
 1951               	.LBE6:
 439:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		}
 440:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 
 441:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 		IRQ_STATUS_REG_s.txEnd = 1;
 1952               		.loc 3 441 0
 1953 0970 8FE4      		ldi r24,lo8(79)
 1954 0972 91E0      		ldi r25,lo8(1)
 1955 0974 FC01      		movw r30,r24
 1956 0976 2081      		ld r18,Z
 1957 0978 2064      		ori r18,lo8(64)
 1958 097a FC01      		movw r30,r24
 1959 097c 2083      		st Z,r18
 1960 097e 00C0      		rjmp .L59
 1961               	.L71:
 397:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	}
 1962               		.loc 3 397 0
 1963 0980 0000      		nop
 1964               	.L59:
 1965               	/* epilogue start */
 442:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** 	}
 443:../../../stack/LwMesh/TDMA/phy/atmegarfr2/src/phy.c **** }
 1966               		.loc 3 443 0
 1967 0982 2896      		adiw r28,8
 1968 0984 0FB6      		in __tmp_reg__,__SREG__
 1969 0986 F894      		cli
 1970 0988 DEBF      		out __SP_H__,r29
 1971 098a 0FBE      		out __SREG__,__tmp_reg__
 1972 098c CDBF      		out __SP_L__,r28
 1973 098e DF91      		pop r29
 1974 0990 CF91      		pop r28
 1975 0992 0895      		ret
 1976               		.cfi_endproc
 1977               	.LFE94:
 1979               	.Letext0:
 1980               		.file 4 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 1981               		.file 5 "../../../stack/LwMesh/TDMA/phy/atmegarfr2/inc/phy.h"
 1982               		.file 6 "../../../stack/LwMesh/TDMA/phy/atmegarfr2/inc/atmegarfr2.h"
DEFINED SYMBOLS
                            *ABS*:00000000 phy.c
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:2      *ABS*:0000003e __SP_H__
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:3      *ABS*:0000003d __SP_L__
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:4      *ABS*:0000003f __SREG__
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:7      *ABS*:00000001 __zero_reg__
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:12     .text:00000000 sysclk_enable_peripheral_clock
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:215    .text:0000011c __portable_avr_delay_cycles
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:240    .bss.phyState:00000000 phyState
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:245    .bss.phyRxBuffer:00000000 phyRxBuffer
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:250    .bss.phyRxState:00000000 phyRxState
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:255    .bss.phyChannel:00000000 phyChannel
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:260    .bss.phyBand:00000000 phyBand
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:265    .text:00000128 PHY_Init
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:1478   .text:000006bc phyTrxSetState
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:1124   .text:00000518 PHY_RandomReq
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:391    .text:000001d8 PHY_SetTdmaMode
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:485    .text:0000024e PHY_SetPromiscuousMode
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:793    .text:0000039e PHY_SetShortAddr
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:729    .text:00000356 PHY_SetPanId
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:1576   .text:00000738 PHY_SetIEEEAddr
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:606    .text:000002f6 PHY_SetRxState
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:1431   .text:0000068e phySetRxState
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:647    .text:00000316 PHY_SetChannel
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:1363   .text:00000638 phySetChannel
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:688    .text:00000336 PHY_SetBand
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:857    .text:000003e6 PHY_SetTxPower
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:905    .text:00000412 PHY_Sleep
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:979    .text:0000046e PHY_Wakeup
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:1023   .text:00000496 PHY_DataReq
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:1234   .text:000005a6 PHY_EncryptReq
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:1291   .text:000005e6 PHY_EdReq
C:\Users\guilh\AppData\Local\Temp\ccYyC69F.s:1729   .text:00000826 PHY_TaskHandler

UNDEFINED SYMBOLS
sysclk_enable_module
sal_aes_setup
sal_aes_exec
sal_aes_read
PHY_DataInd
PHY_DataConf
__do_clear_bss
