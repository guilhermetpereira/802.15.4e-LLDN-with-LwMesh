   1               		.file	"phy.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	__portable_avr_delay_cycles:
  13               	.LFB74:
  14               		.file 1 "../../../platform/common/services/delay/mega_rf/cycle_counter.h"
   1:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** /**
   2:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \file
   3:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   4:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \brief AVR functions for busy-wait delay loops
   5:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   6:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * Copyright (c) 2011 - 2012 Atmel Corporation. All rights reserved.
   7:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
   8:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \asf_license_start
   9:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  10:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \page License
  11:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  12:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * Redistribution and use in source and binary forms, with or without
  13:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * modification, are permitted provided that the following conditions are met:
  14:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  15:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    this list of conditions and the following disclaimer.
  17:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  18:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    this list of conditions and the following disclaimer in the documentation
  20:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    and/or other materials provided with the distribution.
  21:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  22:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  23:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    from this software without specific prior written permission.
  24:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  25:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * 4. This software may only be redistributed and used in connection with an
  26:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *    Atmel microcontroller product.
  27:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  28:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  29:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  30:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  31:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  32:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  33:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  34:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  35:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  36:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * POSSIBILITY OF SUCH DAMAGE.
  39:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  40:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * \asf_license_stop
  41:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  42:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  */
  43:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #ifndef _cycle_counter_h_
  44:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #define _cycle_counter_h_
  45:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  46:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #ifdef __cplusplus
  47:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** extern "C" {
  48:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #endif
  49:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  50:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** #include <compiler.h>
  51:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 
  52:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** /**
  53:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @name Convenience functions for busy-wait delay loops
  54:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  55:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def delay_cycles
  56:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of CPU cycles.
  57:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param n number of CPU cycles to wait
  58:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  59:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_delay_ms
  60:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of milliseconds.
  61:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param delay number of milliseconds to wait
  62:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  63:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  64:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_delay_us
  65:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Delay program execution for a specified number of microseconds.
  66:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param delay number of microseconds to wait
  67:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  68:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  69:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_ms_2_cy
  70:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Convert milli-seconds into CPU cycles.
  71:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param ms number of milliseconds
  72:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  73:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @return the converted number of CPU cycles
  74:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  75:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @def cpu_us_2_cy
  76:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @brief Convert micro-seconds into CPU cycles.
  77:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param ms number of microseconds
  78:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @param f_cpu CPU frequency in Hertz
  79:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @return the converted number of CPU cycles
  80:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  *
  81:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  * @{
  82:../../../platform/common/services/delay/mega_rf/cycle_counter.h ****  */
  83:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** __always_optimize
  84:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** static inline void __portable_avr_delay_cycles(unsigned long n)
  85:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** {
  15               		.loc 1 85 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  21               	.L2:
  86:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** 	do { barrier(); } while (--n);
  22               		.loc 1 86 0 discriminator 1
  23 0000 6150      		subi r22,1
  24 0002 7109      		sbc r23,__zero_reg__
  25 0004 8109      		sbc r24,__zero_reg__
  26 0006 9109      		sbc r25,__zero_reg__
  27 0008 01F4      		brne .L2
  28               	/* epilogue start */
  87:../../../platform/common/services/delay/mega_rf/cycle_counter.h **** }
  29               		.loc 1 87 0
  30 000a 0895      		ret
  31               		.cfi_endproc
  32               	.LFE74:
  34               		.section	.bss.phyState,"aw",@nobits
  37               	phyState:
  38 0000 00        		.zero	1
  39               		.section	.bss.phyRxBuffer,"aw",@nobits
  42               	phyRxBuffer:
  43 0000 0000 0000 		.zero	128
  43      0000 0000 
  43      0000 0000 
  43      0000 0000 
  43      0000 0000 
  44               		.section	.bss.phyRxState,"aw",@nobits
  47               	phyRxState:
  48 0000 00        		.zero	1
  49               		.text
  50               	.global	PHY_Init
  52               	PHY_Init:
  53               	.LFB75:
  54               		.file 2 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c"
   1:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /**
   2:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \file phy.c
   3:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   4:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \brief ATMEGAxxxRFA1 PHY implementation
   5:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   6:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * Copyright (C) 2014, Atmel Corporation. All rights reserved.
   7:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
   8:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \asf_license_start
   9:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  10:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * Redistribution and use in source and binary forms, with or without
  11:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * modification, are permitted provided that the following conditions are met:
  12:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  13:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  14:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    this list of conditions and the following disclaimer.
  15:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  16:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    and/or other materials provided with the distribution.
  19:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  20:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 3. The name of Atmel may not be used to endorse or promote products derived
  21:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    from this software without specific prior written permission.
  22:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  23:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * 4. This software may only be redistributed and used in connection with an
  24:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *    Atmel microcontroller product.
  25:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  26:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
  27:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  28:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
  29:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
  30:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  32:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  33:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  34:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  35:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  36:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * POSSIBILITY OF SUCH DAMAGE.
  37:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  38:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  * \asf_license_stop
  39:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  40:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  *
  41:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****  */
  42:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  43:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef PHY_ATMEGARFA1
  44:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  45:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Includes ---------------------------------------------------------------*/
  46:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "phy.h"
  47:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "delay.h"
  48:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "sal.h"
  49:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #include "atmegarfa1.h"
  50:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  51:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Definitions ------------------------------------------------------------*/
  52:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #define PHY_CRC_SIZE          2
  53:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #define IRQ_CLEAR_VALUE       0xff
  54:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  55:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Types ------------------------------------------------------------------*/
  56:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** typedef enum
  57:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
  58:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   PHY_STATE_INITIAL,
  59:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   PHY_STATE_IDLE,
  60:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   PHY_STATE_SLEEP,
  61:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   PHY_STATE_TX_WAIT_END,
  62:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** } PhyState_t;
  63:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  64:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Prototypes -------------------------------------------------------------*/
  65:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static void phyTrxSetState(uint8_t state);
  66:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static void phySetRxState(void);
  67:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  68:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Variables --------------------------------------------------------------*/
  69:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static PhyState_t phyState = PHY_STATE_INITIAL;
  70:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static uint8_t phyRxBuffer[128];
  71:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static bool phyRxState;
  72:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  73:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*- Implementations --------------------------------------------------------*/
  74:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  75:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
  76:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
  77:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Init(void)
  78:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
  55               		.loc 2 78 0
  56               		.cfi_startproc
  57 000c 0F93      		push r16
  58               	.LCFI0:
  59               		.cfi_def_cfa_offset 3
  60               		.cfi_offset 16, -2
  61 000e 1F93      		push r17
  62               	.LCFI1:
  63               		.cfi_def_cfa_offset 4
  64               		.cfi_offset 17, -3
  65 0010 CF93      		push r28
  66               	.LCFI2:
  67               		.cfi_def_cfa_offset 5
  68               		.cfi_offset 28, -4
  69 0012 DF93      		push r29
  70               	.LCFI3:
  71               		.cfi_def_cfa_offset 6
  72               		.cfi_offset 29, -5
  73 0014 CDB7      		in r28,__SP_L__
  74 0016 DEB7      		in r29,__SP_H__
  75               	.LCFI4:
  76               		.cfi_def_cfa_register 28
  77               	/* prologue: function */
  78               	/* frame size = 0 */
  79               	/* stack size = 4 */
  80               	.L__stack_usage = 4
  79:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRXPR_REG_s.trxrst = 1;
  81               		.loc 2 79 0
  82 0018 89E3      		ldi r24,lo8(57)
  83 001a 91E0      		ldi r25,lo8(1)
  84 001c FC01      		movw r30,r24
  85 001e 2081      		ld r18,Z
  86 0020 2160      		ori r18,lo8(1)
  87 0022 FC01      		movw r30,r24
  88 0024 2083      		st Z,r18
  80:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  81:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyRxState = false;
  89               		.loc 2 81 0
  90 0026 1092 0000 		sts phyRxState,__zero_reg__
  82:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyState = PHY_STATE_IDLE;
  91               		.loc 2 82 0
  92 002a 81E0      		ldi r24,lo8(1)
  93 002c 8093 0000 		sts phyState,r24
  83:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  84:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyTrxSetState(TRX_CMD_TRX_OFF);
  94               		.loc 2 84 0
  95 0030 88E0      		ldi r24,lo8(8)
  96 0032 0E94 0000 		call phyTrxSetState
  85:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  86:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRX_CTRL_2_REG_s.rxSafeMode = 1;
  97               		.loc 2 86 0
  98 0036 8CE4      		ldi r24,lo8(76)
  99 0038 91E0      		ldi r25,lo8(1)
 100 003a FC01      		movw r30,r24
 101 003c 2081      		ld r18,Z
 102 003e 2068      		ori r18,lo8(-128)
 103 0040 FC01      		movw r30,r24
 104 0042 2083      		st Z,r18
  87:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
  88:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef PHY_ENABLE_RANDOM_NUMBER_GENERATOR
  89:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   CSMA_SEED_0_REG = (uint8_t)PHY_RandomReq();
 105               		.loc 2 89 0
 106 0044 0DE6      		ldi r16,lo8(109)
 107 0046 11E0      		ldi r17,lo8(1)
 108 0048 0E94 0000 		call PHY_RandomReq
 109 004c F801      		movw r30,r16
 110 004e 8083      		st Z,r24
  90:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif
  91:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if defined(PLATFORM_WM100)
  92:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1)
  93:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antCtrl = 2;
  94:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	RX_CTRL_REG_s.pdtThres = 0x03;
  95:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antDivEn = 1;
  96:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	ANT_DIV_REG_s.antExtSwEn = 1;
  97:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // ANTENNA_DIVERSITY
  98:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef EXT_RF_FRONT_END_CTRL
  99:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	TRX_CTRL_1_REG_s.paExtEn = 1;
 100:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	HAL_GPIO_RF_FRONT_END_EN_set();
 101:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // EXT_RF_FRONT_END_CTRL
 102:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // PLATFORM_WM100
 103:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 111               		.loc 2 103 0
 112 0050 0000      		nop
 113               	/* epilogue start */
 114 0052 DF91      		pop r29
 115 0054 CF91      		pop r28
 116 0056 1F91      		pop r17
 117 0058 0F91      		pop r16
 118 005a 0895      		ret
 119               		.cfi_endproc
 120               	.LFE75:
 122               	.global	PHY_SetTdmaMode
 124               	PHY_SetTdmaMode:
 125               	.LFB76:
 104:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetTdmaMode(bool mode)
 105:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 126               		.loc 2 105 0
 127               		.cfi_startproc
 128 005c CF93      		push r28
 129               	.LCFI5:
 130               		.cfi_def_cfa_offset 3
 131               		.cfi_offset 28, -2
 132 005e DF93      		push r29
 133               	.LCFI6:
 134               		.cfi_def_cfa_offset 4
 135               		.cfi_offset 29, -3
 136 0060 1F92      		push __zero_reg__
 137               	.LCFI7:
 138               		.cfi_def_cfa_offset 5
 139 0062 CDB7      		in r28,__SP_L__
 140 0064 DEB7      		in r29,__SP_H__
 141               	.LCFI8:
 142               		.cfi_def_cfa_register 28
 143               	/* prologue: function */
 144               	/* frame size = 1 */
 145               	/* stack size = 3 */
 146               	.L__stack_usage = 3
 147 0066 8983      		std Y+1,r24
 106:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(mode)
 148               		.loc 2 106 0
 149 0068 8981      		ldd r24,Y+1
 150 006a 8823      		tst r24
 151 006c 01F0      		breq .L7
 107:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 108:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxFrameRetries = 0;
 152               		.loc 2 108 0
 153 006e 8CE6      		ldi r24,lo8(108)
 154 0070 91E0      		ldi r25,lo8(1)
 155 0072 FC01      		movw r30,r24
 156 0074 2081      		ld r18,Z
 157 0076 2F70      		andi r18,lo8(15)
 158 0078 FC01      		movw r30,r24
 159 007a 2083      		st Z,r18
 109:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 7; // disable csma
 160               		.loc 2 109 0
 161 007c 8CE6      		ldi r24,lo8(108)
 162 007e 91E0      		ldi r25,lo8(1)
 163 0080 FC01      		movw r30,r24
 164 0082 2081      		ld r18,Z
 165 0084 2E60      		ori r18,lo8(14)
 166 0086 FC01      		movw r30,r24
 167 0088 2083      		st Z,r18
 110:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 111:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 1;	// Disable ACK even if requested
 168               		.loc 2 111 0
 169 008a 8EE6      		ldi r24,lo8(110)
 170 008c 91E0      		ldi r25,lo8(1)
 171 008e FC01      		movw r30,r24
 172 0090 2081      		ld r18,Z
 173 0092 2061      		ori r18,lo8(16)
 174 0094 FC01      		movw r30,r24
 175 0096 2083      		st Z,r18
 112:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 113:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	else
 114:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 115:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxFrameRetries = 3;
 116:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 4;
 117:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 118:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 119:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 120:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 176               		.loc 2 120 0
 177 0098 00C0      		rjmp .L9
 178               	.L7:
 115:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_0_REG_s.maxCsmaRetries = 4;
 179               		.loc 2 115 0
 180 009a 8CE6      		ldi r24,lo8(108)
 181 009c 91E0      		ldi r25,lo8(1)
 182 009e FC01      		movw r30,r24
 183 00a0 2081      		ld r18,Z
 184 00a2 2F70      		andi r18,lo8(15)
 185 00a4 2063      		ori r18,lo8(48)
 186 00a6 FC01      		movw r30,r24
 187 00a8 2083      		st Z,r18
 116:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 188               		.loc 2 116 0
 189 00aa 8CE6      		ldi r24,lo8(108)
 190 00ac 91E0      		ldi r25,lo8(1)
 191 00ae FC01      		movw r30,r24
 192 00b0 2081      		ld r18,Z
 193 00b2 217F      		andi r18,lo8(-15)
 194 00b4 2860      		ori r18,lo8(8)
 195 00b6 FC01      		movw r30,r24
 196 00b8 2083      		st Z,r18
 118:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 197               		.loc 2 118 0
 198 00ba 8EE6      		ldi r24,lo8(110)
 199 00bc 91E0      		ldi r25,lo8(1)
 200 00be FC01      		movw r30,r24
 201 00c0 2081      		ld r18,Z
 202 00c2 2F7E      		andi r18,lo8(-17)
 203 00c4 FC01      		movw r30,r24
 204 00c6 2083      		st Z,r18
 205               	.L9:
 206               		.loc 2 120 0
 207 00c8 0000      		nop
 208               	/* epilogue start */
 209 00ca 0F90      		pop __tmp_reg__
 210 00cc DF91      		pop r29
 211 00ce CF91      		pop r28
 212 00d0 0895      		ret
 213               		.cfi_endproc
 214               	.LFE76:
 216               	.global	PHY_SetPromiscuousMode
 218               	PHY_SetPromiscuousMode:
 219               	.LFB77:
 121:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetPromiscuousMode(bool mode)
 122:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 220               		.loc 2 122 0
 221               		.cfi_startproc
 222 00d2 CF93      		push r28
 223               	.LCFI9:
 224               		.cfi_def_cfa_offset 3
 225               		.cfi_offset 28, -2
 226 00d4 DF93      		push r29
 227               	.LCFI10:
 228               		.cfi_def_cfa_offset 4
 229               		.cfi_offset 29, -3
 230 00d6 CDB7      		in r28,__SP_L__
 231 00d8 DEB7      		in r29,__SP_H__
 232               	.LCFI11:
 233               		.cfi_def_cfa_register 28
 234 00da 2997      		sbiw r28,9
 235               	.LCFI12:
 236               		.cfi_def_cfa_offset 13
 237 00dc 0FB6      		in __tmp_reg__,__SREG__
 238 00de F894      		cli
 239 00e0 DEBF      		out __SP_H__,r29
 240 00e2 0FBE      		out __SREG__,__tmp_reg__
 241 00e4 CDBF      		out __SP_L__,r28
 242               	/* prologue: function */
 243               	/* frame size = 9 */
 244               	/* stack size = 11 */
 245               	.L__stack_usage = 11
 246 00e6 8987      		std Y+9,r24
 123:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t ieee_address[] = { 0, 0, 0, 0, 0, 0, 0, 0 };
 247               		.loc 2 123 0
 248 00e8 28E0      		ldi r18,lo8(8)
 249 00ea CE01      		movw r24,r28
 250 00ec 0196      		adiw r24,1
 251 00ee FC01      		movw r30,r24
 252 00f0 322F      		mov r19,r18
 253               		0:
 254 00f2 1192      		st Z+,__zero_reg__
 255 00f4 3A95      		dec r19
 256 00f6 01F4      		brne 0b
 124:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 125:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(mode)
 257               		.loc 2 125 0
 258 00f8 8985      		ldd r24,Y+9
 259 00fa 8823      		tst r24
 260 00fc 01F0      		breq .L11
 126:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 127:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetShortAddr(0);
 261               		.loc 2 127 0
 262 00fe 80E0      		ldi r24,0
 263 0100 90E0      		ldi r25,0
 264 0102 0E94 0000 		call PHY_SetShortAddr
 128:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetPanId(0);
 265               		.loc 2 128 0
 266 0106 80E0      		ldi r24,0
 267 0108 90E0      		ldi r25,0
 268 010a 0E94 0000 		call PHY_SetPanId
 129:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		PHY_SetIEEEAddr(ieee_address);
 269               		.loc 2 129 0
 270 010e CE01      		movw r24,r28
 271 0110 0196      		adiw r24,1
 272 0112 0E94 0000 		call PHY_SetIEEEAddr
 130:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 131:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** // AACK_UPLD_RES_FT = 1, AACK_FLT_RES_FT = 0:
 132:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	Any non-corrupted frame with a reserved frame type is indicated by a
 133:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	TRX24_RX_END interrupt. No further address filtering is applied on those frames.
 134:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	A TRX24_AMI interrupt is never generated and the acknowledgment subfield is
 135:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** //	ignored.
 136:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 137:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackPromMode = 1;	// Enable promiscuous mode
 273               		.loc 2 137 0
 274 0116 87E5      		ldi r24,lo8(87)
 275 0118 91E0      		ldi r25,lo8(1)
 276 011a FC01      		movw r30,r24
 277 011c 2081      		ld r18,Z
 278 011e 2260      		ori r18,lo8(2)
 279 0120 FC01      		movw r30,r24
 280 0122 2083      		st Z,r18
 138:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackUpldResFt = 1;	// Enable reserved frame type reception ; this was changed to
 281               		.loc 2 138 0
 282 0124 87E5      		ldi r24,lo8(87)
 283 0126 91E0      		ldi r25,lo8(1)
 284 0128 FC01      		movw r30,r24
 285 012a 2081      		ld r18,Z
 286 012c 2061      		ori r18,lo8(16)
 287 012e FC01      		movw r30,r24
 288 0130 2083      		st Z,r18
 139:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****                                         // so that the addres isn't checked by filter
 140:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG_s.aackFltrResFt = 0;	// Disable filter of reserved frame types
 289               		.loc 2 140 0
 290 0132 87E5      		ldi r24,lo8(87)
 291 0134 91E0      		ldi r25,lo8(1)
 292 0136 FC01      		movw r30,r24
 293 0138 2081      		ld r18,Z
 294 013a 2F7D      		andi r18,lo8(-33)
 295 013c FC01      		movw r30,r24
 296 013e 2083      		st Z,r18
 141:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 1;		// Disable generation of acknowledgment
 297               		.loc 2 141 0
 298 0140 8EE6      		ldi r24,lo8(110)
 299 0142 91E0      		ldi r25,lo8(1)
 300 0144 FC01      		movw r30,r24
 301 0146 2081      		ld r18,Z
 302 0148 2061      		ori r18,lo8(16)
 303 014a FC01      		movw r30,r24
 304 014c 2083      		st Z,r18
 142:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 143:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	else
 144:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 145:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		XAH_CTRL_1_REG = 0;
 146:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 147:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 148:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 305               		.loc 2 148 0
 306 014e 00C0      		rjmp .L13
 307               	.L11:
 145:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		CSMA_SEED_1_REG_s.aackDisAck = 0;
 308               		.loc 2 145 0
 309 0150 87E5      		ldi r24,lo8(87)
 310 0152 91E0      		ldi r25,lo8(1)
 311 0154 FC01      		movw r30,r24
 312 0156 1082      		st Z,__zero_reg__
 146:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 313               		.loc 2 146 0
 314 0158 8EE6      		ldi r24,lo8(110)
 315 015a 91E0      		ldi r25,lo8(1)
 316 015c FC01      		movw r30,r24
 317 015e 2081      		ld r18,Z
 318 0160 2F7E      		andi r18,lo8(-17)
 319 0162 FC01      		movw r30,r24
 320 0164 2083      		st Z,r18
 321               	.L13:
 322               		.loc 2 148 0
 323 0166 0000      		nop
 324               	/* epilogue start */
 325 0168 2996      		adiw r28,9
 326 016a 0FB6      		in __tmp_reg__,__SREG__
 327 016c F894      		cli
 328 016e DEBF      		out __SP_H__,r29
 329 0170 0FBE      		out __SREG__,__tmp_reg__
 330 0172 CDBF      		out __SP_L__,r28
 331 0174 DF91      		pop r29
 332 0176 CF91      		pop r28
 333 0178 0895      		ret
 334               		.cfi_endproc
 335               	.LFE77:
 337               	.global	PHY_SetRxState
 339               	PHY_SetRxState:
 340               	.LFB78:
 149:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 150:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 151:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 152:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetRxState(bool rx)
 153:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 341               		.loc 2 153 0
 342               		.cfi_startproc
 343 017a CF93      		push r28
 344               	.LCFI13:
 345               		.cfi_def_cfa_offset 3
 346               		.cfi_offset 28, -2
 347 017c DF93      		push r29
 348               	.LCFI14:
 349               		.cfi_def_cfa_offset 4
 350               		.cfi_offset 29, -3
 351 017e 1F92      		push __zero_reg__
 352               	.LCFI15:
 353               		.cfi_def_cfa_offset 5
 354 0180 CDB7      		in r28,__SP_L__
 355 0182 DEB7      		in r29,__SP_H__
 356               	.LCFI16:
 357               		.cfi_def_cfa_register 28
 358               	/* prologue: function */
 359               	/* frame size = 1 */
 360               	/* stack size = 3 */
 361               	.L__stack_usage = 3
 362 0184 8983      		std Y+1,r24
 154:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyRxState = rx;
 363               		.loc 2 154 0
 364 0186 8981      		ldd r24,Y+1
 365 0188 8093 0000 		sts phyRxState,r24
 155:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phySetRxState();
 366               		.loc 2 155 0
 367 018c 0E94 0000 		call phySetRxState
 156:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 368               		.loc 2 156 0
 369 0190 0000      		nop
 370               	/* epilogue start */
 371 0192 0F90      		pop __tmp_reg__
 372 0194 DF91      		pop r29
 373 0196 CF91      		pop r28
 374 0198 0895      		ret
 375               		.cfi_endproc
 376               	.LFE78:
 378               	.global	PHY_SetChannel
 380               	PHY_SetChannel:
 381               	.LFB79:
 157:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 158:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 159:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 160:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetChannel(uint8_t channel)
 161:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 382               		.loc 2 161 0
 383               		.cfi_startproc
 384 019a CF93      		push r28
 385               	.LCFI17:
 386               		.cfi_def_cfa_offset 3
 387               		.cfi_offset 28, -2
 388 019c DF93      		push r29
 389               	.LCFI18:
 390               		.cfi_def_cfa_offset 4
 391               		.cfi_offset 29, -3
 392 019e 1F92      		push __zero_reg__
 393               	.LCFI19:
 394               		.cfi_def_cfa_offset 5
 395 01a0 CDB7      		in r28,__SP_L__
 396 01a2 DEB7      		in r29,__SP_H__
 397               	.LCFI20:
 398               		.cfi_def_cfa_register 28
 399               	/* prologue: function */
 400               	/* frame size = 1 */
 401               	/* stack size = 3 */
 402               	.L__stack_usage = 3
 403 01a4 8983      		std Y+1,r24
 162:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   PHY_CC_CCA_REG_s.channel = channel;
 404               		.loc 2 162 0
 405 01a6 88E4      		ldi r24,lo8(72)
 406 01a8 91E0      		ldi r25,lo8(1)
 407 01aa 2981      		ldd r18,Y+1
 408 01ac 2F71      		andi r18,lo8(31)
 409 01ae 2F71      		andi r18,lo8(31)
 410 01b0 FC01      		movw r30,r24
 411 01b2 3081      		ld r19,Z
 412 01b4 307E      		andi r19,lo8(-32)
 413 01b6 232B      		or r18,r19
 414 01b8 FC01      		movw r30,r24
 415 01ba 2083      		st Z,r18
 163:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 416               		.loc 2 163 0
 417 01bc 0000      		nop
 418               	/* epilogue start */
 419 01be 0F90      		pop __tmp_reg__
 420 01c0 DF91      		pop r29
 421 01c2 CF91      		pop r28
 422 01c4 0895      		ret
 423               		.cfi_endproc
 424               	.LFE79:
 426               	.global	PHY_SetPage
 428               	PHY_SetPage:
 429               	.LFB80:
 164:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 165:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 166:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 167:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetPage(uint8_t page)
 168:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 430               		.loc 2 168 0
 431               		.cfi_startproc
 432 01c6 CF93      		push r28
 433               	.LCFI21:
 434               		.cfi_def_cfa_offset 3
 435               		.cfi_offset 28, -2
 436 01c8 DF93      		push r29
 437               	.LCFI22:
 438               		.cfi_def_cfa_offset 4
 439               		.cfi_offset 29, -3
 440 01ca 1F92      		push __zero_reg__
 441               	.LCFI23:
 442               		.cfi_def_cfa_offset 5
 443 01cc CDB7      		in r28,__SP_L__
 444 01ce DEB7      		in r29,__SP_H__
 445               	.LCFI24:
 446               		.cfi_def_cfa_register 28
 447               	/* prologue: function */
 448               	/* frame size = 1 */
 449               	/* stack size = 3 */
 450               	.L__stack_usage = 3
 451 01d0 8983      		std Y+1,r24
 169:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	switch(page)
 452               		.loc 2 169 0
 453 01d2 8981      		ldd r24,Y+1
 454 01d4 882F      		mov r24,r24
 455 01d6 90E0      		ldi r25,0
 456 01d8 8230      		cpi r24,2
 457 01da 9105      		cpc r25,__zero_reg__
 458 01dc 01F0      		breq .L18
 459 01de 8330      		cpi r24,3
 460 01e0 9105      		cpc r25,__zero_reg__
 461 01e2 04F4      		brge .L19
 462 01e4 892B      		or r24,r25
 463 01e6 01F0      		breq .L20
 170:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 171:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		case 0:		/* compliant O-QPSK */
 172:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		{
 173:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_CTRL_2_REG_s.oqpskDataRate = 0;	// RATE_250_KBPS
 174:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			/* Apply compliant ACK timing */
 175:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			XAH_CTRL_1_REG_s.aackAckTime = 0;	// ACK_TIME_12_SYMBOLS
 176:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			/* Use full sensitivity */
 177:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			RX_SYN_REG_s.rxPdtLevel = 0x00;
 178:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			break;
 179:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 180:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		case 2:		/* non-compliant OQPSK mode 1 */
 181:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		{
 182:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_CTRL_2_REG_s.oqpskDataRate = 1;	// RATE_500_KBPS
 183:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			/* Apply compliant ACK timing */
 184:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			XAH_CTRL_1_REG_s.aackAckTime = 1;	// ACK_TIME_2_SYMBOLS
 185:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			/* Use full sensitivity */
 186:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			RX_SYN_REG_s.rxPdtLevel = 0x00;
 187:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			break;
 188:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 189:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		case 16:	/* non-compliant OQPSK mode 2 */
 190:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		{
 191:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_CTRL_2_REG_s.oqpskDataRate = 2;	// RATE_1_MBPS
 192:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			/* Apply compliant ACK timing */
 193:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			XAH_CTRL_1_REG_s.aackAckTime = 1;	// ACK_TIME_2_SYMBOLS
 194:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			/* Use full sensitivity */
 195:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			RX_SYN_REG_s.rxPdtLevel = 0x00;
 196:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			break;
 197:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 198:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		case 17:	/* non-compliant OQPSK mode 3 */
 199:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		{
 200:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			TRX_CTRL_2_REG_s.oqpskDataRate = 3;	// RATE_2_MBPS
 201:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			/* Apply compliant ACK timing */
 202:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			XAH_CTRL_1_REG_s.aackAckTime = 1;	// ACK_TIME_2_SYMBOLS
 203:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			/* Use reduced sensitivity for 2Mbit mode */
 204:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			RX_SYN_REG_s.rxPdtLevel = 0x01;
 205:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			break;
 206:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 207:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 208:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 464               		.loc 2 208 0
 465 01e8 00C0      		rjmp .L23
 466               	.L19:
 169:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	switch(page)
 467               		.loc 2 169 0
 468 01ea 8031      		cpi r24,16
 469 01ec 9105      		cpc r25,__zero_reg__
 470 01ee 01F0      		breq .L21
 471 01f0 4197      		sbiw r24,17
 472 01f2 01F4      		brne .+2
 473 01f4 00C0      		rjmp .L22
 474               		.loc 2 208 0
 475 01f6 00C0      		rjmp .L23
 476               	.L20:
 173:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			/* Apply compliant ACK timing */
 477               		.loc 2 173 0
 478 01f8 8CE4      		ldi r24,lo8(76)
 479 01fa 91E0      		ldi r25,lo8(1)
 480 01fc FC01      		movw r30,r24
 481 01fe 2081      		ld r18,Z
 482 0200 2C7F      		andi r18,lo8(-4)
 483 0202 FC01      		movw r30,r24
 484 0204 2083      		st Z,r18
 175:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			/* Use full sensitivity */
 485               		.loc 2 175 0
 486 0206 87E5      		ldi r24,lo8(87)
 487 0208 91E0      		ldi r25,lo8(1)
 488 020a FC01      		movw r30,r24
 489 020c 2081      		ld r18,Z
 490 020e 2B7F      		andi r18,lo8(-5)
 491 0210 FC01      		movw r30,r24
 492 0212 2083      		st Z,r18
 177:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			break;
 493               		.loc 2 177 0
 494 0214 85E5      		ldi r24,lo8(85)
 495 0216 91E0      		ldi r25,lo8(1)
 496 0218 FC01      		movw r30,r24
 497 021a 2081      		ld r18,Z
 498 021c 207F      		andi r18,lo8(-16)
 499 021e FC01      		movw r30,r24
 500 0220 2083      		st Z,r18
 178:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 501               		.loc 2 178 0
 502 0222 00C0      		rjmp .L17
 503               	.L18:
 182:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			/* Apply compliant ACK timing */
 504               		.loc 2 182 0
 505 0224 8CE4      		ldi r24,lo8(76)
 506 0226 91E0      		ldi r25,lo8(1)
 507 0228 FC01      		movw r30,r24
 508 022a 2081      		ld r18,Z
 509 022c 2C7F      		andi r18,lo8(-4)
 510 022e 2160      		ori r18,lo8(1)
 511 0230 FC01      		movw r30,r24
 512 0232 2083      		st Z,r18
 184:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			/* Use full sensitivity */
 513               		.loc 2 184 0
 514 0234 87E5      		ldi r24,lo8(87)
 515 0236 91E0      		ldi r25,lo8(1)
 516 0238 FC01      		movw r30,r24
 517 023a 2081      		ld r18,Z
 518 023c 2460      		ori r18,lo8(4)
 519 023e FC01      		movw r30,r24
 520 0240 2083      		st Z,r18
 186:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			break;
 521               		.loc 2 186 0
 522 0242 85E5      		ldi r24,lo8(85)
 523 0244 91E0      		ldi r25,lo8(1)
 524 0246 FC01      		movw r30,r24
 525 0248 2081      		ld r18,Z
 526 024a 207F      		andi r18,lo8(-16)
 527 024c FC01      		movw r30,r24
 528 024e 2083      		st Z,r18
 187:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 529               		.loc 2 187 0
 530 0250 00C0      		rjmp .L17
 531               	.L21:
 191:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			/* Apply compliant ACK timing */
 532               		.loc 2 191 0
 533 0252 8CE4      		ldi r24,lo8(76)
 534 0254 91E0      		ldi r25,lo8(1)
 535 0256 FC01      		movw r30,r24
 536 0258 2081      		ld r18,Z
 537 025a 2C7F      		andi r18,lo8(-4)
 538 025c 2260      		ori r18,lo8(2)
 539 025e FC01      		movw r30,r24
 540 0260 2083      		st Z,r18
 193:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			/* Use full sensitivity */
 541               		.loc 2 193 0
 542 0262 87E5      		ldi r24,lo8(87)
 543 0264 91E0      		ldi r25,lo8(1)
 544 0266 FC01      		movw r30,r24
 545 0268 2081      		ld r18,Z
 546 026a 2460      		ori r18,lo8(4)
 547 026c FC01      		movw r30,r24
 548 026e 2083      		st Z,r18
 195:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			break;
 549               		.loc 2 195 0
 550 0270 85E5      		ldi r24,lo8(85)
 551 0272 91E0      		ldi r25,lo8(1)
 552 0274 FC01      		movw r30,r24
 553 0276 2081      		ld r18,Z
 554 0278 207F      		andi r18,lo8(-16)
 555 027a FC01      		movw r30,r24
 556 027c 2083      		st Z,r18
 196:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 557               		.loc 2 196 0
 558 027e 00C0      		rjmp .L17
 559               	.L22:
 200:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			/* Apply compliant ACK timing */
 560               		.loc 2 200 0
 561 0280 8CE4      		ldi r24,lo8(76)
 562 0282 91E0      		ldi r25,lo8(1)
 563 0284 FC01      		movw r30,r24
 564 0286 2081      		ld r18,Z
 565 0288 2360      		ori r18,lo8(3)
 566 028a FC01      		movw r30,r24
 567 028c 2083      		st Z,r18
 202:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			/* Use reduced sensitivity for 2Mbit mode */
 568               		.loc 2 202 0
 569 028e 87E5      		ldi r24,lo8(87)
 570 0290 91E0      		ldi r25,lo8(1)
 571 0292 FC01      		movw r30,r24
 572 0294 2081      		ld r18,Z
 573 0296 2460      		ori r18,lo8(4)
 574 0298 FC01      		movw r30,r24
 575 029a 2083      		st Z,r18
 204:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 			break;
 576               		.loc 2 204 0
 577 029c 85E5      		ldi r24,lo8(85)
 578 029e 91E0      		ldi r25,lo8(1)
 579 02a0 FC01      		movw r30,r24
 580 02a2 2081      		ld r18,Z
 581 02a4 207F      		andi r18,lo8(-16)
 582 02a6 2160      		ori r18,lo8(1)
 583 02a8 FC01      		movw r30,r24
 584 02aa 2083      		st Z,r18
 205:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		}
 585               		.loc 2 205 0
 586 02ac 0000      		nop
 587               	.L17:
 588               	.L23:
 589               		.loc 2 208 0
 590 02ae 0000      		nop
 591               	/* epilogue start */
 592 02b0 0F90      		pop __tmp_reg__
 593 02b2 DF91      		pop r29
 594 02b4 CF91      		pop r28
 595 02b6 0895      		ret
 596               		.cfi_endproc
 597               	.LFE80:
 599               	.global	PHY_SetPanId
 601               	PHY_SetPanId:
 602               	.LFB81:
 209:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 210:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 211:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetPanId(uint16_t panId)
 212:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 603               		.loc 2 212 0
 604               		.cfi_startproc
 605 02b8 CF93      		push r28
 606               	.LCFI25:
 607               		.cfi_def_cfa_offset 3
 608               		.cfi_offset 28, -2
 609 02ba DF93      		push r29
 610               	.LCFI26:
 611               		.cfi_def_cfa_offset 4
 612               		.cfi_offset 29, -3
 613 02bc 00D0      		rcall .
 614 02be 00D0      		rcall .
 615               	.LCFI27:
 616               		.cfi_def_cfa_offset 8
 617 02c0 CDB7      		in r28,__SP_L__
 618 02c2 DEB7      		in r29,__SP_H__
 619               	.LCFI28:
 620               		.cfi_def_cfa_register 28
 621               	/* prologue: function */
 622               	/* frame size = 4 */
 623               	/* stack size = 6 */
 624               	.L__stack_usage = 6
 625 02c4 9C83      		std Y+4,r25
 626 02c6 8B83      		std Y+3,r24
 213:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   uint8_t *d = (uint8_t *)&panId;
 627               		.loc 2 213 0
 628 02c8 CE01      		movw r24,r28
 629 02ca 0396      		adiw r24,3
 630 02cc 9A83      		std Y+2,r25
 631 02ce 8983      		std Y+1,r24
 214:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 215:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   PAN_ID_0_REG = d[0];
 632               		.loc 2 215 0
 633 02d0 82E6      		ldi r24,lo8(98)
 634 02d2 91E0      		ldi r25,lo8(1)
 635 02d4 2981      		ldd r18,Y+1
 636 02d6 3A81      		ldd r19,Y+2
 637 02d8 F901      		movw r30,r18
 638 02da 2081      		ld r18,Z
 639 02dc FC01      		movw r30,r24
 640 02de 2083      		st Z,r18
 216:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   PAN_ID_1_REG = d[1];
 641               		.loc 2 216 0
 642 02e0 83E6      		ldi r24,lo8(99)
 643 02e2 91E0      		ldi r25,lo8(1)
 644 02e4 2981      		ldd r18,Y+1
 645 02e6 3A81      		ldd r19,Y+2
 646 02e8 F901      		movw r30,r18
 647 02ea 2181      		ldd r18,Z+1
 648 02ec FC01      		movw r30,r24
 649 02ee 2083      		st Z,r18
 217:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 650               		.loc 2 217 0
 651 02f0 0000      		nop
 652               	/* epilogue start */
 653 02f2 0F90      		pop __tmp_reg__
 654 02f4 0F90      		pop __tmp_reg__
 655 02f6 0F90      		pop __tmp_reg__
 656 02f8 0F90      		pop __tmp_reg__
 657 02fa DF91      		pop r29
 658 02fc CF91      		pop r28
 659 02fe 0895      		ret
 660               		.cfi_endproc
 661               	.LFE81:
 663               	.global	PHY_SetShortAddr
 665               	PHY_SetShortAddr:
 666               	.LFB82:
 218:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 219:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 220:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 221:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetShortAddr(uint16_t addr)
 222:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 667               		.loc 2 222 0
 668               		.cfi_startproc
 669 0300 CF93      		push r28
 670               	.LCFI29:
 671               		.cfi_def_cfa_offset 3
 672               		.cfi_offset 28, -2
 673 0302 DF93      		push r29
 674               	.LCFI30:
 675               		.cfi_def_cfa_offset 4
 676               		.cfi_offset 29, -3
 677 0304 00D0      		rcall .
 678 0306 00D0      		rcall .
 679               	.LCFI31:
 680               		.cfi_def_cfa_offset 8
 681 0308 CDB7      		in r28,__SP_L__
 682 030a DEB7      		in r29,__SP_H__
 683               	.LCFI32:
 684               		.cfi_def_cfa_register 28
 685               	/* prologue: function */
 686               	/* frame size = 4 */
 687               	/* stack size = 6 */
 688               	.L__stack_usage = 6
 689 030c 9C83      		std Y+4,r25
 690 030e 8B83      		std Y+3,r24
 223:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   uint8_t *d = (uint8_t *)&addr;
 691               		.loc 2 223 0
 692 0310 CE01      		movw r24,r28
 693 0312 0396      		adiw r24,3
 694 0314 9A83      		std Y+2,r25
 695 0316 8983      		std Y+1,r24
 224:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 225:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   SHORT_ADDR_0_REG = d[0];
 696               		.loc 2 225 0
 697 0318 80E6      		ldi r24,lo8(96)
 698 031a 91E0      		ldi r25,lo8(1)
 699 031c 2981      		ldd r18,Y+1
 700 031e 3A81      		ldd r19,Y+2
 701 0320 F901      		movw r30,r18
 702 0322 2081      		ld r18,Z
 703 0324 FC01      		movw r30,r24
 704 0326 2083      		st Z,r18
 226:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   SHORT_ADDR_1_REG = d[1];
 705               		.loc 2 226 0
 706 0328 81E6      		ldi r24,lo8(97)
 707 032a 91E0      		ldi r25,lo8(1)
 708 032c 2981      		ldd r18,Y+1
 709 032e 3A81      		ldd r19,Y+2
 710 0330 F901      		movw r30,r18
 711 0332 2181      		ldd r18,Z+1
 712 0334 FC01      		movw r30,r24
 713 0336 2083      		st Z,r18
 227:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 228:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifndef PHY_ENABLE_RANDOM_NUMBER_GENERATOR
 229:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   CSMA_SEED_0_REG = d[0] + d[1];
 230:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif
 231:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 714               		.loc 2 231 0
 715 0338 0000      		nop
 716               	/* epilogue start */
 717 033a 0F90      		pop __tmp_reg__
 718 033c 0F90      		pop __tmp_reg__
 719 033e 0F90      		pop __tmp_reg__
 720 0340 0F90      		pop __tmp_reg__
 721 0342 DF91      		pop r29
 722 0344 CF91      		pop r28
 723 0346 0895      		ret
 724               		.cfi_endproc
 725               	.LFE82:
 727               	.global	PHY_SetTxPower
 729               	PHY_SetTxPower:
 730               	.LFB83:
 232:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 233:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 234:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 235:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetTxPower(uint8_t txPower)
 236:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 731               		.loc 2 236 0
 732               		.cfi_startproc
 733 0348 CF93      		push r28
 734               	.LCFI33:
 735               		.cfi_def_cfa_offset 3
 736               		.cfi_offset 28, -2
 737 034a DF93      		push r29
 738               	.LCFI34:
 739               		.cfi_def_cfa_offset 4
 740               		.cfi_offset 29, -3
 741 034c 1F92      		push __zero_reg__
 742               	.LCFI35:
 743               		.cfi_def_cfa_offset 5
 744 034e CDB7      		in r28,__SP_L__
 745 0350 DEB7      		in r29,__SP_H__
 746               	.LCFI36:
 747               		.cfi_def_cfa_register 28
 748               	/* prologue: function */
 749               	/* frame size = 1 */
 750               	/* stack size = 3 */
 751               	.L__stack_usage = 3
 752 0352 8983      		std Y+1,r24
 237:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   PHY_TX_PWR_REG_s.txPwr = txPower;
 753               		.loc 2 237 0
 754 0354 85E4      		ldi r24,lo8(69)
 755 0356 91E0      		ldi r25,lo8(1)
 756 0358 2981      		ldd r18,Y+1
 757 035a 2F70      		andi r18,lo8(15)
 758 035c 2F70      		andi r18,lo8(15)
 759 035e FC01      		movw r30,r24
 760 0360 3081      		ld r19,Z
 761 0362 307F      		andi r19,lo8(-16)
 762 0364 232B      		or r18,r19
 763 0366 FC01      		movw r30,r24
 764 0368 2083      		st Z,r18
 238:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 765               		.loc 2 238 0
 766 036a 0000      		nop
 767               	/* epilogue start */
 768 036c 0F90      		pop __tmp_reg__
 769 036e DF91      		pop r29
 770 0370 CF91      		pop r28
 771 0372 0895      		ret
 772               		.cfi_endproc
 773               	.LFE83:
 775               	.global	PHY_Sleep
 777               	PHY_Sleep:
 778               	.LFB84:
 239:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 240:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 241:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 242:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Sleep(void)
 243:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 779               		.loc 2 243 0
 780               		.cfi_startproc
 781 0374 CF93      		push r28
 782               	.LCFI37:
 783               		.cfi_def_cfa_offset 3
 784               		.cfi_offset 28, -2
 785 0376 DF93      		push r29
 786               	.LCFI38:
 787               		.cfi_def_cfa_offset 4
 788               		.cfi_offset 29, -3
 789 0378 CDB7      		in r28,__SP_L__
 790 037a DEB7      		in r29,__SP_H__
 791               	.LCFI39:
 792               		.cfi_def_cfa_register 28
 793               	/* prologue: function */
 794               	/* frame size = 0 */
 795               	/* stack size = 2 */
 796               	.L__stack_usage = 2
 244:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyTrxSetState(TRX_CMD_TRX_OFF);
 797               		.loc 2 244 0
 798 037c 88E0      		ldi r24,lo8(8)
 799 037e 0E94 0000 		call phyTrxSetState
 245:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRXPR_REG_s.slptr = 1;
 800               		.loc 2 245 0
 801 0382 89E3      		ldi r24,lo8(57)
 802 0384 91E0      		ldi r25,lo8(1)
 803 0386 FC01      		movw r30,r24
 804 0388 2081      		ld r18,Z
 805 038a 2260      		ori r18,lo8(2)
 806 038c FC01      		movw r30,r24
 807 038e 2083      		st Z,r18
 246:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyState = PHY_STATE_SLEEP;
 808               		.loc 2 246 0
 809 0390 82E0      		ldi r24,lo8(2)
 810 0392 8093 0000 		sts phyState,r24
 247:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if defined(PLATFORM_WM100)
 248:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#if (ANTENNA_DIVERSITY == 1)
 249:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 0;
 250:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antDivEn = 0;
 251:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // ANTENNA_DIVERSITY
 252:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#ifdef EXT_RF_FRONT_END_CTRL
 253:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_1_REG_s.paExtEn = 0;
 254:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		HAL_GPIO_RF_FRONT_END_EN_clr();
 255:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	#endif // EXT_RF_FRONT_END_CTRL
 256:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // PLATFORM_WM100
 257:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 811               		.loc 2 257 0
 812 0396 0000      		nop
 813               	/* epilogue start */
 814 0398 DF91      		pop r29
 815 039a CF91      		pop r28
 816 039c 0895      		ret
 817               		.cfi_endproc
 818               	.LFE84:
 820               	.global	PHY_Wakeup
 822               	PHY_Wakeup:
 823               	.LFB85:
 258:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 259:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 260:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 261:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_Wakeup(void)
 262:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 824               		.loc 2 262 0
 825               		.cfi_startproc
 826 039e CF93      		push r28
 827               	.LCFI40:
 828               		.cfi_def_cfa_offset 3
 829               		.cfi_offset 28, -2
 830 03a0 DF93      		push r29
 831               	.LCFI41:
 832               		.cfi_def_cfa_offset 4
 833               		.cfi_offset 29, -3
 834 03a2 CDB7      		in r28,__SP_L__
 835 03a4 DEB7      		in r29,__SP_H__
 836               	.LCFI42:
 837               		.cfi_def_cfa_register 28
 838               	/* prologue: function */
 839               	/* frame size = 0 */
 840               	/* stack size = 2 */
 841               	.L__stack_usage = 2
 263:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRXPR_REG_s.slptr = 0;
 842               		.loc 2 263 0
 843 03a6 89E3      		ldi r24,lo8(57)
 844 03a8 91E0      		ldi r25,lo8(1)
 845 03aa FC01      		movw r30,r24
 846 03ac 2081      		ld r18,Z
 847 03ae 2D7F      		andi r18,lo8(-3)
 848 03b0 FC01      		movw r30,r24
 849 03b2 2083      		st Z,r18
 264:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phySetRxState();
 850               		.loc 2 264 0
 851 03b4 0E94 0000 		call phySetRxState
 265:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyState = PHY_STATE_IDLE;
 852               		.loc 2 265 0
 853 03b8 81E0      		ldi r24,lo8(1)
 854 03ba 8093 0000 		sts phyState,r24
 266:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 855               		.loc 2 266 0
 856 03be 0000      		nop
 857               	/* epilogue start */
 858 03c0 DF91      		pop r29
 859 03c2 CF91      		pop r28
 860 03c4 0895      		ret
 861               		.cfi_endproc
 862               	.LFE85:
 864               	.global	PHY_DataReq
 866               	PHY_DataReq:
 867               	.LFB86:
 267:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 268:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 269:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 270:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_DataReq(uint8_t *data, uint8_t size)
 271:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 868               		.loc 2 271 0
 869               		.cfi_startproc
 870 03c6 CF93      		push r28
 871               	.LCFI43:
 872               		.cfi_def_cfa_offset 3
 873               		.cfi_offset 28, -2
 874 03c8 DF93      		push r29
 875               	.LCFI44:
 876               		.cfi_def_cfa_offset 4
 877               		.cfi_offset 29, -3
 878 03ca 00D0      		rcall .
 879 03cc 00D0      		rcall .
 880               	.LCFI45:
 881               		.cfi_def_cfa_offset 8
 882 03ce CDB7      		in r28,__SP_L__
 883 03d0 DEB7      		in r29,__SP_H__
 884               	.LCFI46:
 885               		.cfi_def_cfa_register 28
 886               	/* prologue: function */
 887               	/* frame size = 4 */
 888               	/* stack size = 6 */
 889               	.L__stack_usage = 6
 890 03d2 9B83      		std Y+3,r25
 891 03d4 8A83      		std Y+2,r24
 892 03d6 6C83      		std Y+4,r22
 272:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyTrxSetState(TRX_CMD_TX_ARET_ON);
 893               		.loc 2 272 0
 894 03d8 89E1      		ldi r24,lo8(25)
 895 03da 0E94 0000 		call phyTrxSetState
 273:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 274:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   IRQ_STATUS_REG = IRQ_CLEAR_VALUE;
 896               		.loc 2 274 0
 897 03de 8FE4      		ldi r24,lo8(79)
 898 03e0 91E0      		ldi r25,lo8(1)
 899 03e2 2FEF      		ldi r18,lo8(-1)
 900 03e4 FC01      		movw r30,r24
 901 03e6 2083      		st Z,r18
 275:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 276:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRX_FRAME_BUFFER(0) = size + PHY_CRC_SIZE;
 902               		.loc 2 276 0
 903 03e8 80E8      		ldi r24,lo8(-128)
 904 03ea 91E0      		ldi r25,lo8(1)
 905 03ec 2C81      		ldd r18,Y+4
 906 03ee 2E5F      		subi r18,lo8(-(2))
 907 03f0 FC01      		movw r30,r24
 908 03f2 2083      		st Z,r18
 909               	.LBB2:
 277:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 910               		.loc 2 277 0
 911 03f4 1982      		std Y+1,__zero_reg__
 912 03f6 00C0      		rjmp .L30
 913               	.L31:
 278:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     TRX_FRAME_BUFFER(i+1) = data[i];
 914               		.loc 2 278 0 discriminator 3
 915 03f8 8981      		ldd r24,Y+1
 916 03fa 882F      		mov r24,r24
 917 03fc 90E0      		ldi r25,0
 918 03fe 8F57      		subi r24,127
 919 0400 9E4F      		sbci r25,-2
 920 0402 AC01      		movw r20,r24
 921 0404 8981      		ldd r24,Y+1
 922 0406 882F      		mov r24,r24
 923 0408 90E0      		ldi r25,0
 924 040a 2A81      		ldd r18,Y+2
 925 040c 3B81      		ldd r19,Y+3
 926 040e 820F      		add r24,r18
 927 0410 931F      		adc r25,r19
 928 0412 FC01      		movw r30,r24
 929 0414 8081      		ld r24,Z
 930 0416 FA01      		movw r30,r20
 931 0418 8083      		st Z,r24
 277:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 932               		.loc 2 277 0 discriminator 3
 933 041a 8981      		ldd r24,Y+1
 934 041c 8F5F      		subi r24,lo8(-(1))
 935 041e 8983      		std Y+1,r24
 936               	.L30:
 277:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < size; i++)
 937               		.loc 2 277 0 is_stmt 0 discriminator 1
 938 0420 9981      		ldd r25,Y+1
 939 0422 8C81      		ldd r24,Y+4
 940 0424 9817      		cp r25,r24
 941 0426 00F0      		brlo .L31
 942               	.LBE2:
 279:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 280:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyState = PHY_STATE_TX_WAIT_END;
 943               		.loc 2 280 0 is_stmt 1
 944 0428 83E0      		ldi r24,lo8(3)
 945 042a 8093 0000 		sts phyState,r24
 281:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRX_STATE_REG = TRX_CMD_TX_START;
 946               		.loc 2 281 0
 947 042e 82E4      		ldi r24,lo8(66)
 948 0430 91E0      		ldi r25,lo8(1)
 949 0432 22E0      		ldi r18,lo8(2)
 950 0434 FC01      		movw r30,r24
 951 0436 2083      		st Z,r18
 282:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 952               		.loc 2 282 0
 953 0438 0000      		nop
 954               	/* epilogue start */
 955 043a 0F90      		pop __tmp_reg__
 956 043c 0F90      		pop __tmp_reg__
 957 043e 0F90      		pop __tmp_reg__
 958 0440 0F90      		pop __tmp_reg__
 959 0442 DF91      		pop r29
 960 0444 CF91      		pop r28
 961 0446 0895      		ret
 962               		.cfi_endproc
 963               	.LFE86:
 965               	.global	PHY_RandomReq
 967               	PHY_RandomReq:
 968               	.LFB87:
 283:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 284:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef PHY_ENABLE_RANDOM_NUMBER_GENERATOR
 285:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 286:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 287:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** uint16_t PHY_RandomReq(void)
 288:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 969               		.loc 2 288 0
 970               		.cfi_startproc
 971 0448 CF93      		push r28
 972               	.LCFI47:
 973               		.cfi_def_cfa_offset 3
 974               		.cfi_offset 28, -2
 975 044a DF93      		push r29
 976               	.LCFI48:
 977               		.cfi_def_cfa_offset 4
 978               		.cfi_offset 29, -3
 979 044c 00D0      		rcall .
 980 044e 1F92      		push __zero_reg__
 981               	.LCFI49:
 982               		.cfi_def_cfa_offset 7
 983 0450 CDB7      		in r28,__SP_L__
 984 0452 DEB7      		in r29,__SP_H__
 985               	.LCFI50:
 986               		.cfi_def_cfa_register 28
 987               	/* prologue: function */
 988               	/* frame size = 3 */
 989               	/* stack size = 5 */
 990               	.L__stack_usage = 5
 289:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   uint16_t rnd = 0;
 991               		.loc 2 289 0
 992 0454 1A82      		std Y+2,__zero_reg__
 993 0456 1982      		std Y+1,__zero_reg__
 290:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 291:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyTrxSetState(TRX_CMD_RX_ON);
 994               		.loc 2 291 0
 995 0458 86E0      		ldi r24,lo8(6)
 996 045a 0E94 0000 		call phyTrxSetState
 997               	.LBB3:
 292:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 293:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < 16; i += 2)
 998               		.loc 2 293 0
 999 045e 1B82      		std Y+3,__zero_reg__
 1000 0460 00C0      		rjmp .L33
 1001               	.L34:
 294:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   {
 295:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     delay_us(RANDOM_NUMBER_UPDATE_INTERVAL);
 1002               		.loc 2 295 0 discriminator 3
 1003 0462 62E0      		ldi r22,lo8(2)
 1004 0464 70E0      		ldi r23,0
 1005 0466 80E0      		ldi r24,0
 1006 0468 90E0      		ldi r25,0
 1007 046a 0E94 0000 		call __portable_avr_delay_cycles
 296:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     rnd |= PHY_RSSI_REG_s.rndValue << i;
 1008               		.loc 2 296 0 discriminator 3
 1009 046e 86E4      		ldi r24,lo8(70)
 1010 0470 91E0      		ldi r25,lo8(1)
 1011 0472 FC01      		movw r30,r24
 1012 0474 8081      		ld r24,Z
 1013 0476 8295      		swap r24
 1014 0478 8695      		lsr r24
 1015 047a 8770      		andi r24,lo8(7)
 1016 047c 8370      		andi r24,lo8(3)
 1017 047e 882F      		mov r24,r24
 1018 0480 90E0      		ldi r25,0
 1019 0482 2B81      		ldd r18,Y+3
 1020 0484 222F      		mov r18,r18
 1021 0486 30E0      		ldi r19,0
 1022 0488 00C0      		rjmp 2f
 1023               		1:
 1024 048a 880F      		lsl r24
 1025 048c 991F      		rol r25
 1026               		2:
 1027 048e 2A95      		dec r18
 1028 0490 02F4      		brpl 1b
 1029 0492 9C01      		movw r18,r24
 1030 0494 8981      		ldd r24,Y+1
 1031 0496 9A81      		ldd r25,Y+2
 1032 0498 822B      		or r24,r18
 1033 049a 932B      		or r25,r19
 1034 049c 9A83      		std Y+2,r25
 1035 049e 8983      		std Y+1,r24
 293:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   {
 1036               		.loc 2 293 0 discriminator 3
 1037 04a0 8B81      		ldd r24,Y+3
 1038 04a2 8E5F      		subi r24,lo8(-(2))
 1039 04a4 8B83      		std Y+3,r24
 1040               	.L33:
 293:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   {
 1041               		.loc 2 293 0 is_stmt 0 discriminator 1
 1042 04a6 8B81      		ldd r24,Y+3
 1043 04a8 8031      		cpi r24,lo8(16)
 1044 04aa 00F0      		brlo .L34
 1045               	.LBE3:
 297:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   }
 298:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 299:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phySetRxState();
 1046               		.loc 2 299 0 is_stmt 1
 1047 04ac 0E94 0000 		call phySetRxState
 300:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 301:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   return rnd;
 1048               		.loc 2 301 0
 1049 04b0 8981      		ldd r24,Y+1
 1050 04b2 9A81      		ldd r25,Y+2
 1051               	/* epilogue start */
 302:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1052               		.loc 2 302 0
 1053 04b4 0F90      		pop __tmp_reg__
 1054 04b6 0F90      		pop __tmp_reg__
 1055 04b8 0F90      		pop __tmp_reg__
 1056 04ba DF91      		pop r29
 1057 04bc CF91      		pop r28
 1058 04be 0895      		ret
 1059               		.cfi_endproc
 1060               	.LFE87:
 1063               	phySetRxState:
 1064               	.LFB88:
 303:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif
 304:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 305:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef PHY_ENABLE_AES_MODULE
 306:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 307:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 308:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_EncryptReq(uint8_t *text, uint8_t *key)
 309:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 310:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < AES_BLOCK_SIZE; i++)
 311:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     AES_KEY = key[i];
 312:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 313:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   AES_CTRL = (0<<AES_CTRL_DIR) | (0<<AES_CTRL_MODE);
 314:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 315:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < AES_BLOCK_SIZE; i++)
 316:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     AES_STATE = text[i];
 317:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 318:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   AES_CTRL |= (1<<AES_CTRL_REQUEST);
 319:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 320:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   while (0 == (AES_STATUS & (1<<AES_STATUS_RY)));
 321:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 322:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   for (uint8_t i = 0; i < AES_BLOCK_SIZE; i++)
 323:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     text[i] = AES_STATE;
 324:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 325:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif
 326:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 327:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef PHY_ENABLE_ENERGY_DETECTION
 328:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 329:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 330:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** int8_t PHY_EdReq(void)
 331:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 332:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   int8_t ed;
 333:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 334:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyTrxSetState(TRX_CMD_RX_ON);
 335:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 336:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   IRQ_STATUS_REG_s.ccaEdDone = 1;
 337:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   PHY_ED_LEVEL_REG = 0;
 338:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   while (0 == IRQ_STATUS_REG_s.ccaEdDone);
 339:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 340:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   ed = (int8_t)PHY_ED_LEVEL_REG + PHY_RSSI_BASE_VAL;
 341:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 342:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phySetRxState();
 343:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 344:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   return ed;
 345:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 346:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif
 347:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 348:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 349:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 350:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static void phySetRxState(void)
 351:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1065               		.loc 2 351 0
 1066               		.cfi_startproc
 1067 04c0 CF93      		push r28
 1068               	.LCFI51:
 1069               		.cfi_def_cfa_offset 3
 1070               		.cfi_offset 28, -2
 1071 04c2 DF93      		push r29
 1072               	.LCFI52:
 1073               		.cfi_def_cfa_offset 4
 1074               		.cfi_offset 29, -3
 1075 04c4 CDB7      		in r28,__SP_L__
 1076 04c6 DEB7      		in r29,__SP_H__
 1077               	.LCFI53:
 1078               		.cfi_def_cfa_register 28
 1079               	/* prologue: function */
 1080               	/* frame size = 0 */
 1081               	/* stack size = 2 */
 1082               	.L__stack_usage = 2
 352:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   phyTrxSetState(TRX_CMD_TRX_OFF);
 1083               		.loc 2 352 0
 1084 04c8 88E0      		ldi r24,lo8(8)
 1085 04ca 0E94 0000 		call phyTrxSetState
 353:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 354:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   IRQ_STATUS_REG = IRQ_CLEAR_VALUE;
 1086               		.loc 2 354 0
 1087 04ce 8FE4      		ldi r24,lo8(79)
 1088 04d0 91E0      		ldi r25,lo8(1)
 1089 04d2 2FEF      		ldi r18,lo8(-1)
 1090 04d4 FC01      		movw r30,r24
 1091 04d6 2083      		st Z,r18
 355:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 356:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   if (phyRxState)
 1092               		.loc 2 356 0
 1093 04d8 8091 0000 		lds r24,phyRxState
 1094 04dc 8823      		tst r24
 1095 04de 01F0      		breq .L38
 357:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     phyTrxSetState(TRX_CMD_RX_AACK_ON);
 1096               		.loc 2 357 0
 1097 04e0 86E1      		ldi r24,lo8(22)
 1098 04e2 0E94 0000 		call phyTrxSetState
 1099               	.L38:
 358:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1100               		.loc 2 358 0
 1101 04e6 0000      		nop
 1102               	/* epilogue start */
 1103 04e8 DF91      		pop r29
 1104 04ea CF91      		pop r28
 1105 04ec 0895      		ret
 1106               		.cfi_endproc
 1107               	.LFE88:
 1110               	phyTrxSetState:
 1111               	.LFB89:
 359:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 360:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 361:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 362:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** static void phyTrxSetState(uint8_t state)
 363:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1112               		.loc 2 363 0
 1113               		.cfi_startproc
 1114 04ee CF93      		push r28
 1115               	.LCFI54:
 1116               		.cfi_def_cfa_offset 3
 1117               		.cfi_offset 28, -2
 1118 04f0 DF93      		push r29
 1119               	.LCFI55:
 1120               		.cfi_def_cfa_offset 4
 1121               		.cfi_offset 29, -3
 1122 04f2 1F92      		push __zero_reg__
 1123               	.LCFI56:
 1124               		.cfi_def_cfa_offset 5
 1125 04f4 CDB7      		in r28,__SP_L__
 1126 04f6 DEB7      		in r29,__SP_H__
 1127               	.LCFI57:
 1128               		.cfi_def_cfa_register 28
 1129               	/* prologue: function */
 1130               	/* frame size = 1 */
 1131               	/* stack size = 3 */
 1132               	.L__stack_usage = 3
 1133 04f8 8983      		std Y+1,r24
 364:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   #if defined(PLATFORM_WM100)
 365:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	if(phyState == PHY_STATE_SLEEP)
 366:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	{
 367:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #if (ANTENNA_DIVERSITY == 1)
 368:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antDivEn = 1;
 369:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		ANT_DIV_REG_s.antExtSwEn = 1;
 370:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // ANTENNA_DIVERSITY
 371:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #ifdef EXT_RF_FRONT_END_CTRL
 372:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		TRX_CTRL_1_REG_s.paExtEn = 1;
 373:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 		HAL_GPIO_RF_FRONT_END_EN_set();
 374:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // EXT_RF_FRONT_END_CTRL
 375:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	}
 376:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** #endif // PLATFORM_WM100
 377:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 378:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRX_STATE_REG = TRX_CMD_FORCE_TRX_OFF;
 1134               		.loc 2 378 0
 1135 04fa 82E4      		ldi r24,lo8(66)
 1136 04fc 91E0      		ldi r25,lo8(1)
 1137 04fe 23E0      		ldi r18,lo8(3)
 1138 0500 FC01      		movw r30,r24
 1139 0502 2083      		st Z,r18
 379:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   while (TRX_STATUS_TRX_OFF != TRX_STATUS_REG_s.trxStatus);
 1140               		.loc 2 379 0
 1141 0504 0000      		nop
 1142               	.L40:
 1143               		.loc 2 379 0 is_stmt 0 discriminator 1
 1144 0506 81E4      		ldi r24,lo8(65)
 1145 0508 91E0      		ldi r25,lo8(1)
 1146 050a FC01      		movw r30,r24
 1147 050c 8081      		ld r24,Z
 1148 050e 8F71      		andi r24,lo8(31)
 1149 0510 8830      		cpi r24,lo8(8)
 1150 0512 01F4      		brne .L40
 380:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 381:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   TRX_STATE_REG = state;
 1151               		.loc 2 381 0 is_stmt 1
 1152 0514 82E4      		ldi r24,lo8(66)
 1153 0516 91E0      		ldi r25,lo8(1)
 1154 0518 2981      		ldd r18,Y+1
 1155 051a FC01      		movw r30,r24
 1156 051c 2083      		st Z,r18
 382:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   while (state != TRX_STATUS_REG_s.trxStatus);
 1157               		.loc 2 382 0
 1158 051e 0000      		nop
 1159               	.L41:
 1160               		.loc 2 382 0 is_stmt 0 discriminator 1
 1161 0520 81E4      		ldi r24,lo8(65)
 1162 0522 91E0      		ldi r25,lo8(1)
 1163 0524 FC01      		movw r30,r24
 1164 0526 8081      		ld r24,Z
 1165 0528 8F71      		andi r24,lo8(31)
 1166 052a 982F      		mov r25,r24
 1167 052c 8981      		ldd r24,Y+1
 1168 052e 9817      		cp r25,r24
 1169 0530 01F4      		brne .L41
 383:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1170               		.loc 2 383 0 is_stmt 1
 1171 0532 0000      		nop
 1172               	/* epilogue start */
 1173 0534 0F90      		pop __tmp_reg__
 1174 0536 DF91      		pop r29
 1175 0538 CF91      		pop r28
 1176 053a 0895      		ret
 1177               		.cfi_endproc
 1178               	.LFE89:
 1180               	.global	PHY_SetIEEEAddr
 1182               	PHY_SetIEEEAddr:
 1183               	.LFB90:
 384:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 385:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 386:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 387:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_SetIEEEAddr(uint8_t *ieee_addr)
 388:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1184               		.loc 2 388 0
 1185               		.cfi_startproc
 1186 053c CF93      		push r28
 1187               	.LCFI58:
 1188               		.cfi_def_cfa_offset 3
 1189               		.cfi_offset 28, -2
 1190 053e DF93      		push r29
 1191               	.LCFI59:
 1192               		.cfi_def_cfa_offset 4
 1193               		.cfi_offset 29, -3
 1194 0540 00D0      		rcall .
 1195 0542 00D0      		rcall .
 1196               	.LCFI60:
 1197               		.cfi_def_cfa_offset 8
 1198 0544 CDB7      		in r28,__SP_L__
 1199 0546 DEB7      		in r29,__SP_H__
 1200               	.LCFI61:
 1201               		.cfi_def_cfa_register 28
 1202               	/* prologue: function */
 1203               	/* frame size = 4 */
 1204               	/* stack size = 6 */
 1205               	.L__stack_usage = 6
 1206 0548 9C83      		std Y+4,r25
 1207 054a 8B83      		std Y+3,r24
 389:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	uint8_t *ptr_to_reg = ieee_addr;
 1208               		.loc 2 389 0
 1209 054c 8B81      		ldd r24,Y+3
 1210 054e 9C81      		ldd r25,Y+4
 1211 0550 9A83      		std Y+2,r25
 1212 0552 8983      		std Y+1,r24
 390:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_0_REG = *ptr_to_reg++;
 1213               		.loc 2 390 0
 1214 0554 24E6      		ldi r18,lo8(100)
 1215 0556 31E0      		ldi r19,lo8(1)
 1216 0558 8981      		ldd r24,Y+1
 1217 055a 9A81      		ldd r25,Y+2
 1218 055c AC01      		movw r20,r24
 1219 055e 4F5F      		subi r20,-1
 1220 0560 5F4F      		sbci r21,-1
 1221 0562 5A83      		std Y+2,r21
 1222 0564 4983      		std Y+1,r20
 1223 0566 FC01      		movw r30,r24
 1224 0568 8081      		ld r24,Z
 1225 056a F901      		movw r30,r18
 1226 056c 8083      		st Z,r24
 391:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_1_REG = *ptr_to_reg++;
 1227               		.loc 2 391 0
 1228 056e 25E6      		ldi r18,lo8(101)
 1229 0570 31E0      		ldi r19,lo8(1)
 1230 0572 8981      		ldd r24,Y+1
 1231 0574 9A81      		ldd r25,Y+2
 1232 0576 AC01      		movw r20,r24
 1233 0578 4F5F      		subi r20,-1
 1234 057a 5F4F      		sbci r21,-1
 1235 057c 5A83      		std Y+2,r21
 1236 057e 4983      		std Y+1,r20
 1237 0580 FC01      		movw r30,r24
 1238 0582 8081      		ld r24,Z
 1239 0584 F901      		movw r30,r18
 1240 0586 8083      		st Z,r24
 392:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_2_REG = *ptr_to_reg++;
 1241               		.loc 2 392 0
 1242 0588 26E6      		ldi r18,lo8(102)
 1243 058a 31E0      		ldi r19,lo8(1)
 1244 058c 8981      		ldd r24,Y+1
 1245 058e 9A81      		ldd r25,Y+2
 1246 0590 AC01      		movw r20,r24
 1247 0592 4F5F      		subi r20,-1
 1248 0594 5F4F      		sbci r21,-1
 1249 0596 5A83      		std Y+2,r21
 1250 0598 4983      		std Y+1,r20
 1251 059a FC01      		movw r30,r24
 1252 059c 8081      		ld r24,Z
 1253 059e F901      		movw r30,r18
 1254 05a0 8083      		st Z,r24
 393:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_3_REG = *ptr_to_reg++;
 1255               		.loc 2 393 0
 1256 05a2 27E6      		ldi r18,lo8(103)
 1257 05a4 31E0      		ldi r19,lo8(1)
 1258 05a6 8981      		ldd r24,Y+1
 1259 05a8 9A81      		ldd r25,Y+2
 1260 05aa AC01      		movw r20,r24
 1261 05ac 4F5F      		subi r20,-1
 1262 05ae 5F4F      		sbci r21,-1
 1263 05b0 5A83      		std Y+2,r21
 1264 05b2 4983      		std Y+1,r20
 1265 05b4 FC01      		movw r30,r24
 1266 05b6 8081      		ld r24,Z
 1267 05b8 F901      		movw r30,r18
 1268 05ba 8083      		st Z,r24
 394:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_4_REG = *ptr_to_reg++;
 1269               		.loc 2 394 0
 1270 05bc 28E6      		ldi r18,lo8(104)
 1271 05be 31E0      		ldi r19,lo8(1)
 1272 05c0 8981      		ldd r24,Y+1
 1273 05c2 9A81      		ldd r25,Y+2
 1274 05c4 AC01      		movw r20,r24
 1275 05c6 4F5F      		subi r20,-1
 1276 05c8 5F4F      		sbci r21,-1
 1277 05ca 5A83      		std Y+2,r21
 1278 05cc 4983      		std Y+1,r20
 1279 05ce FC01      		movw r30,r24
 1280 05d0 8081      		ld r24,Z
 1281 05d2 F901      		movw r30,r18
 1282 05d4 8083      		st Z,r24
 395:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_5_REG = *ptr_to_reg++;
 1283               		.loc 2 395 0
 1284 05d6 29E6      		ldi r18,lo8(105)
 1285 05d8 31E0      		ldi r19,lo8(1)
 1286 05da 8981      		ldd r24,Y+1
 1287 05dc 9A81      		ldd r25,Y+2
 1288 05de AC01      		movw r20,r24
 1289 05e0 4F5F      		subi r20,-1
 1290 05e2 5F4F      		sbci r21,-1
 1291 05e4 5A83      		std Y+2,r21
 1292 05e6 4983      		std Y+1,r20
 1293 05e8 FC01      		movw r30,r24
 1294 05ea 8081      		ld r24,Z
 1295 05ec F901      		movw r30,r18
 1296 05ee 8083      		st Z,r24
 396:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_6_REG = *ptr_to_reg++;
 1297               		.loc 2 396 0
 1298 05f0 2AE6      		ldi r18,lo8(106)
 1299 05f2 31E0      		ldi r19,lo8(1)
 1300 05f4 8981      		ldd r24,Y+1
 1301 05f6 9A81      		ldd r25,Y+2
 1302 05f8 AC01      		movw r20,r24
 1303 05fa 4F5F      		subi r20,-1
 1304 05fc 5F4F      		sbci r21,-1
 1305 05fe 5A83      		std Y+2,r21
 1306 0600 4983      		std Y+1,r20
 1307 0602 FC01      		movw r30,r24
 1308 0604 8081      		ld r24,Z
 1309 0606 F901      		movw r30,r18
 1310 0608 8083      		st Z,r24
 397:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 	IEEE_ADDR_7_REG = *ptr_to_reg;
 1311               		.loc 2 397 0
 1312 060a 8BE6      		ldi r24,lo8(107)
 1313 060c 91E0      		ldi r25,lo8(1)
 1314 060e 2981      		ldd r18,Y+1
 1315 0610 3A81      		ldd r19,Y+2
 1316 0612 F901      		movw r30,r18
 1317 0614 2081      		ld r18,Z
 1318 0616 FC01      		movw r30,r24
 1319 0618 2083      		st Z,r18
 398:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1320               		.loc 2 398 0
 1321 061a 0000      		nop
 1322               	/* epilogue start */
 1323 061c 0F90      		pop __tmp_reg__
 1324 061e 0F90      		pop __tmp_reg__
 1325 0620 0F90      		pop __tmp_reg__
 1326 0622 0F90      		pop __tmp_reg__
 1327 0624 DF91      		pop r29
 1328 0626 CF91      		pop r28
 1329 0628 0895      		ret
 1330               		.cfi_endproc
 1331               	.LFE90:
 1333               	.global	PHY_TaskHandler
 1335               	PHY_TaskHandler:
 1336               	.LFB91:
 399:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 400:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** /*************************************************************************//**
 401:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** *****************************************************************************/
 402:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** void PHY_TaskHandler(void)
 403:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** {
 1337               		.loc 2 403 0
 1338               		.cfi_startproc
 1339 062a CF93      		push r28
 1340               	.LCFI62:
 1341               		.cfi_def_cfa_offset 3
 1342               		.cfi_offset 28, -2
 1343 062c DF93      		push r29
 1344               	.LCFI63:
 1345               		.cfi_def_cfa_offset 4
 1346               		.cfi_offset 29, -3
 1347 062e CDB7      		in r28,__SP_L__
 1348 0630 DEB7      		in r29,__SP_H__
 1349               	.LCFI64:
 1350               		.cfi_def_cfa_register 28
 1351 0632 2897      		sbiw r28,8
 1352               	.LCFI65:
 1353               		.cfi_def_cfa_offset 12
 1354 0634 0FB6      		in __tmp_reg__,__SREG__
 1355 0636 F894      		cli
 1356 0638 DEBF      		out __SP_H__,r29
 1357 063a 0FBE      		out __SREG__,__tmp_reg__
 1358 063c CDBF      		out __SP_L__,r28
 1359               	/* prologue: function */
 1360               	/* frame size = 8 */
 1361               	/* stack size = 10 */
 1362               	.L__stack_usage = 10
 404:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   if (PHY_STATE_SLEEP == phyState)
 1363               		.loc 2 404 0
 1364 063e 8091 0000 		lds r24,phyState
 1365 0642 8230      		cpi r24,lo8(2)
 1366 0644 01F4      		brne .+2
 1367 0646 00C0      		rjmp .L55
 405:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     return;
 406:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 407:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   if (IRQ_STATUS_REG_s.rxEnd)
 1368               		.loc 2 407 0
 1369 0648 8FE4      		ldi r24,lo8(79)
 1370 064a 91E0      		ldi r25,lo8(1)
 1371 064c FC01      		movw r30,r24
 1372 064e 8081      		ld r24,Z
 1373 0650 83FB      		bst r24,3
 1374 0652 8827      		clr r24
 1375 0654 80F9      		bld r24,0
 1376 0656 8823      		tst r24
 1377 0658 01F4      		brne .+2
 1378 065a 00C0      		rjmp .L46
 1379               	.LBB4:
 408:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   {
 409:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     PHY_DataInd_t ind;
 410:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     uint8_t size = TST_RX_LENGTH_REG;
 1380               		.loc 2 410 0
 1381 065c 8BE7      		ldi r24,lo8(123)
 1382 065e 91E0      		ldi r25,lo8(1)
 1383 0660 FC01      		movw r30,r24
 1384 0662 8081      		ld r24,Z
 1385 0664 8B83      		std Y+3,r24
 1386               	.LBB5:
 411:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 412:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     for (uint8_t i = 0; i < size + 1/*lqi*/; i++)
 1387               		.loc 2 412 0
 1388 0666 1982      		std Y+1,__zero_reg__
 1389 0668 00C0      		rjmp .L47
 1390               	.L48:
 413:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****       phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1391               		.loc 2 413 0 discriminator 3
 1392 066a 8981      		ldd r24,Y+1
 1393 066c 882F      		mov r24,r24
 1394 066e 90E0      		ldi r25,0
 1395 0670 2981      		ldd r18,Y+1
 1396 0672 222F      		mov r18,r18
 1397 0674 30E0      		ldi r19,0
 1398 0676 2058      		subi r18,-128
 1399 0678 3E4F      		sbci r19,-2
 1400 067a F901      		movw r30,r18
 1401 067c 2081      		ld r18,Z
 1402 067e 8050      		subi r24,lo8(-(phyRxBuffer))
 1403 0680 9040      		sbci r25,hi8(-(phyRxBuffer))
 1404 0682 FC01      		movw r30,r24
 1405 0684 2083      		st Z,r18
 412:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****       phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1406               		.loc 2 412 0 discriminator 3
 1407 0686 8981      		ldd r24,Y+1
 1408 0688 8F5F      		subi r24,lo8(-(1))
 1409 068a 8983      		std Y+1,r24
 1410               	.L47:
 412:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****       phyRxBuffer[i] = TRX_FRAME_BUFFER(i);
 1411               		.loc 2 412 0 is_stmt 0 discriminator 1
 1412 068c 8981      		ldd r24,Y+1
 1413 068e 282F      		mov r18,r24
 1414 0690 30E0      		ldi r19,0
 1415 0692 8B81      		ldd r24,Y+3
 1416 0694 882F      		mov r24,r24
 1417 0696 90E0      		ldi r25,0
 1418 0698 0196      		adiw r24,1
 1419 069a 2817      		cp r18,r24
 1420 069c 3907      		cpc r19,r25
 1421 069e 04F0      		brlt .L48
 1422               	.LBE5:
 414:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 415:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     ind.data = phyRxBuffer;
 1423               		.loc 2 415 0 is_stmt 1
 1424 06a0 80E0      		ldi r24,lo8(phyRxBuffer)
 1425 06a2 90E0      		ldi r25,hi8(phyRxBuffer)
 1426 06a4 9D83      		std Y+5,r25
 1427 06a6 8C83      		std Y+4,r24
 416:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     ind.size = size - PHY_CRC_SIZE;
 1428               		.loc 2 416 0
 1429 06a8 8B81      		ldd r24,Y+3
 1430 06aa 8250      		subi r24,lo8(-(-2))
 1431 06ac 8E83      		std Y+6,r24
 417:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     ind.lqi  = phyRxBuffer[size];
 1432               		.loc 2 417 0
 1433 06ae 8B81      		ldd r24,Y+3
 1434 06b0 882F      		mov r24,r24
 1435 06b2 90E0      		ldi r25,0
 1436 06b4 8050      		subi r24,lo8(-(phyRxBuffer))
 1437 06b6 9040      		sbci r25,hi8(-(phyRxBuffer))
 1438 06b8 FC01      		movw r30,r24
 1439 06ba 8081      		ld r24,Z
 1440 06bc 8F83      		std Y+7,r24
 418:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     ind.rssi = (int8_t)PHY_ED_LEVEL_REG + PHY_RSSI_BASE_VAL;
 1441               		.loc 2 418 0
 1442 06be 87E4      		ldi r24,lo8(71)
 1443 06c0 91E0      		ldi r25,lo8(1)
 1444 06c2 FC01      		movw r30,r24
 1445 06c4 8081      		ld r24,Z
 1446 06c6 8A55      		subi r24,lo8(-(-90))
 1447 06c8 8887      		std Y+8,r24
 419:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     PHY_DataInd(&ind);
 1448               		.loc 2 419 0
 1449 06ca CE01      		movw r24,r28
 1450 06cc 0496      		adiw r24,4
 1451 06ce 0E94 0000 		call PHY_DataInd
 420:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 421:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     while (TRX_STATUS_RX_AACK_ON != TRX_STATUS_REG_s.trxStatus);
 1452               		.loc 2 421 0
 1453 06d2 0000      		nop
 1454               	.L49:
 1455               		.loc 2 421 0 is_stmt 0 discriminator 1
 1456 06d4 81E4      		ldi r24,lo8(65)
 1457 06d6 91E0      		ldi r25,lo8(1)
 1458 06d8 FC01      		movw r30,r24
 1459 06da 8081      		ld r24,Z
 1460 06dc 8F71      		andi r24,lo8(31)
 1461 06de 8631      		cpi r24,lo8(22)
 1462 06e0 01F4      		brne .L49
 422:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 423:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     IRQ_STATUS_REG_s.rxEnd = 1;
 1463               		.loc 2 423 0 is_stmt 1 discriminator 2
 1464 06e2 8FE4      		ldi r24,lo8(79)
 1465 06e4 91E0      		ldi r25,lo8(1)
 1466 06e6 FC01      		movw r30,r24
 1467 06e8 2081      		ld r18,Z
 1468 06ea 2860      		ori r18,lo8(8)
 1469 06ec FC01      		movw r30,r24
 1470 06ee 2083      		st Z,r18
 424:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     TRX_CTRL_2_REG_s.rxSafeMode = 0;
 1471               		.loc 2 424 0 discriminator 2
 1472 06f0 8CE4      		ldi r24,lo8(76)
 1473 06f2 91E0      		ldi r25,lo8(1)
 1474 06f4 FC01      		movw r30,r24
 1475 06f6 2081      		ld r18,Z
 1476 06f8 2F77      		andi r18,lo8(127)
 1477 06fa FC01      		movw r30,r24
 1478 06fc 2083      		st Z,r18
 425:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     TRX_CTRL_2_REG_s.rxSafeMode = 1;
 1479               		.loc 2 425 0 discriminator 2
 1480 06fe 8CE4      		ldi r24,lo8(76)
 1481 0700 91E0      		ldi r25,lo8(1)
 1482 0702 FC01      		movw r30,r24
 1483 0704 2081      		ld r18,Z
 1484 0706 2068      		ori r18,lo8(-128)
 1485 0708 FC01      		movw r30,r24
 1486 070a 2083      		st Z,r18
 1487               	.LBE4:
 1488 070c 00C0      		rjmp .L43
 1489               	.L46:
 426:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   }
 427:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 428:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   else if (IRQ_STATUS_REG_s.txEnd)
 1490               		.loc 2 428 0
 1491 070e 8FE4      		ldi r24,lo8(79)
 1492 0710 91E0      		ldi r25,lo8(1)
 1493 0712 FC01      		movw r30,r24
 1494 0714 8081      		ld r24,Z
 1495 0716 86FB      		bst r24,6
 1496 0718 8827      		clr r24
 1497 071a 80F9      		bld r24,0
 1498 071c 8823      		tst r24
 1499 071e 01F0      		breq .L43
 429:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   {
 430:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     if (TRX_STATUS_TX_ARET_ON == TRX_STATUS_REG_s.trxStatus)
 1500               		.loc 2 430 0
 1501 0720 81E4      		ldi r24,lo8(65)
 1502 0722 91E0      		ldi r25,lo8(1)
 1503 0724 FC01      		movw r30,r24
 1504 0726 8081      		ld r24,Z
 1505 0728 8F71      		andi r24,lo8(31)
 1506 072a 8931      		cpi r24,lo8(25)
 1507 072c 01F4      		brne .L50
 1508               	.LBB6:
 431:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     {
 432:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****       uint8_t status = TRX_STATE_REG_s.tracStatus;
 1509               		.loc 2 432 0
 1510 072e 82E4      		ldi r24,lo8(66)
 1511 0730 91E0      		ldi r25,lo8(1)
 1512 0732 FC01      		movw r30,r24
 1513 0734 8081      		ld r24,Z
 1514 0736 8295      		swap r24
 1515 0738 8695      		lsr r24
 1516 073a 8770      		andi r24,lo8(7)
 1517 073c 8A83      		std Y+2,r24
 433:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 434:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****       if (TRAC_STATUS_SUCCESS == status)
 1518               		.loc 2 434 0
 1519 073e 8A81      		ldd r24,Y+2
 1520 0740 8823      		tst r24
 1521 0742 01F4      		brne .L51
 435:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****         status = PHY_STATUS_SUCCESS;
 1522               		.loc 2 435 0
 1523 0744 1A82      		std Y+2,__zero_reg__
 1524 0746 00C0      		rjmp .L52
 1525               	.L51:
 436:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****       else if (TRAC_STATUS_CHANNEL_ACCESS_FAILURE == status)
 1526               		.loc 2 436 0
 1527 0748 8A81      		ldd r24,Y+2
 1528 074a 8330      		cpi r24,lo8(3)
 1529 074c 01F4      		brne .L53
 437:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****         status = PHY_STATUS_CHANNEL_ACCESS_FAILURE;
 1530               		.loc 2 437 0
 1531 074e 81E0      		ldi r24,lo8(1)
 1532 0750 8A83      		std Y+2,r24
 1533 0752 00C0      		rjmp .L52
 1534               	.L53:
 438:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****       else if (TRAC_STATUS_NO_ACK == status)
 1535               		.loc 2 438 0
 1536 0754 8A81      		ldd r24,Y+2
 1537 0756 8530      		cpi r24,lo8(5)
 1538 0758 01F4      		brne .L54
 439:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****         status = PHY_STATUS_NO_ACK;
 1539               		.loc 2 439 0
 1540 075a 82E0      		ldi r24,lo8(2)
 1541 075c 8A83      		std Y+2,r24
 1542 075e 00C0      		rjmp .L52
 1543               	.L54:
 440:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****       else
 441:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****         status = PHY_STATUS_ERROR;
 1544               		.loc 2 441 0
 1545 0760 83E0      		ldi r24,lo8(3)
 1546 0762 8A83      		std Y+2,r24
 1547               	.L52:
 442:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 443:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****       phySetRxState();
 1548               		.loc 2 443 0
 1549 0764 0E94 0000 		call phySetRxState
 444:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****       phyState = PHY_STATE_IDLE;
 1550               		.loc 2 444 0
 1551 0768 81E0      		ldi r24,lo8(1)
 1552 076a 8093 0000 		sts phyState,r24
 445:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 446:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****       PHY_DataConf(status);
 1553               		.loc 2 446 0
 1554 076e 8A81      		ldd r24,Y+2
 1555 0770 0E94 0000 		call PHY_DataConf
 1556               	.L50:
 1557               	.LBE6:
 447:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     }
 448:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 449:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****     IRQ_STATUS_REG_s.txEnd = 1;
 1558               		.loc 2 449 0
 1559 0774 8FE4      		ldi r24,lo8(79)
 1560 0776 91E0      		ldi r25,lo8(1)
 1561 0778 FC01      		movw r30,r24
 1562 077a 2081      		ld r18,Z
 1563 077c 2064      		ori r18,lo8(64)
 1564 077e FC01      		movw r30,r24
 1565 0780 2083      		st Z,r18
 1566 0782 00C0      		rjmp .L43
 1567               	.L55:
 405:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** 
 1568               		.loc 2 405 0
 1569 0784 0000      		nop
 1570               	.L43:
 1571               	/* epilogue start */
 450:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c ****   }
 451:../../../stack/LwMesh/TDMA/phy/atmegarfa1/src/phy.c **** }
 1572               		.loc 2 451 0
 1573 0786 2896      		adiw r28,8
 1574 0788 0FB6      		in __tmp_reg__,__SREG__
 1575 078a F894      		cli
 1576 078c DEBF      		out __SP_H__,r29
 1577 078e 0FBE      		out __SREG__,__tmp_reg__
 1578 0790 CDBF      		out __SP_L__,r28
 1579 0792 DF91      		pop r29
 1580 0794 CF91      		pop r28
 1581 0796 0895      		ret
 1582               		.cfi_endproc
 1583               	.LFE91:
 1585               	.Letext0:
 1586               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 1587               		.file 4 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/phy.h"
 1588               		.file 5 "../../../stack/LwMesh/TDMA/phy/atmegarfa1/inc/atmegarfa1.h"
DEFINED SYMBOLS
                            *ABS*:00000000 phy.c
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:2      *ABS*:0000003e __SP_H__
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:3      *ABS*:0000003d __SP_L__
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:4      *ABS*:0000003f __SREG__
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:7      *ABS*:00000001 __zero_reg__
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:12     .text:00000000 __portable_avr_delay_cycles
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:37     .bss.phyState:00000000 phyState
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:42     .bss.phyRxBuffer:00000000 phyRxBuffer
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:47     .bss.phyRxState:00000000 phyRxState
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:52     .text:0000000c PHY_Init
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:1110   .text:000004ee phyTrxSetState
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:967    .text:00000448 PHY_RandomReq
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:124    .text:0000005c PHY_SetTdmaMode
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:218    .text:000000d2 PHY_SetPromiscuousMode
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:665    .text:00000300 PHY_SetShortAddr
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:601    .text:000002b8 PHY_SetPanId
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:1182   .text:0000053c PHY_SetIEEEAddr
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:339    .text:0000017a PHY_SetRxState
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:1063   .text:000004c0 phySetRxState
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:380    .text:0000019a PHY_SetChannel
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:428    .text:000001c6 PHY_SetPage
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:729    .text:00000348 PHY_SetTxPower
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:777    .text:00000374 PHY_Sleep
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:822    .text:0000039e PHY_Wakeup
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:866    .text:000003c6 PHY_DataReq
C:\Users\guilh\AppData\Local\Temp\cctYHcwn.s:1335   .text:0000062a PHY_TaskHandler

UNDEFINED SYMBOLS
PHY_DataInd
PHY_DataConf
__do_clear_bss
